
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libclang_rt.hwasan-aarch64.so_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000006170 <.init>:
    6170:	stp	x29, x30, [sp, #-16]!
    6174:	mov	x29, sp
    6178:	bl	668c <__sanitizer_print_memory_profile@plt+0x2c>
    617c:	ldp	x29, x30, [sp], #16
    6180:	ret

Disassembly of section .plt:

0000000000006190 <_Unwind_Backtrace@plt-0x20>:
    6190:	stp	x16, x30, [sp, #-16]!
    6194:	adrp	x16, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    6198:	ldr	x17, [x16, #4088]
    619c:	add	x16, x16, #0xff8
    61a0:	br	x17
    61a4:	nop
    61a8:	nop
    61ac:	nop

00000000000061b0 <_Unwind_Backtrace@plt>:
    61b0:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    61b4:	ldr	x17, [x16]
    61b8:	add	x16, x16, #0x0
    61bc:	br	x17

00000000000061c0 <__sanitizer_report_error_summary@plt>:
    61c0:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    61c4:	ldr	x17, [x16, #8]
    61c8:	add	x16, x16, #0x8
    61cc:	br	x17

00000000000061d0 <memcpy@plt>:
    61d0:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    61d4:	ldr	x17, [x16, #16]
    61d8:	add	x16, x16, #0x10
    61dc:	br	x17

00000000000061e0 <__sanitizer_on_print@plt>:
    61e0:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    61e4:	ldr	x17, [x16, #24]
    61e8:	add	x16, x16, #0x18
    61ec:	br	x17

00000000000061f0 <__hwasan_handle_vfork@plt>:
    61f0:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    61f4:	ldr	x17, [x16, #32]
    61f8:	add	x16, x16, #0x20
    61fc:	br	x17

0000000000006200 <sched_getaffinity@plt>:
    6200:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6204:	ldr	x17, [x16, #40]
    6208:	add	x16, x16, #0x28
    620c:	br	x17

0000000000006210 <__hwasan_default_options@plt>:
    6210:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6214:	ldr	x17, [x16, #48]
    6218:	add	x16, x16, #0x30
    621c:	br	x17

0000000000006220 <execv@plt>:
    6220:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6224:	ldr	x17, [x16, #56]
    6228:	add	x16, x16, #0x38
    622c:	br	x17

0000000000006230 <pipe@plt>:
    6230:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6234:	ldr	x17, [x16, #64]
    6238:	add	x16, x16, #0x40
    623c:	br	x17

0000000000006240 <__sanitizer_get_module_and_offset_for_pc@plt>:
    6240:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6244:	ldr	x17, [x16, #72]
    6248:	add	x16, x16, #0x48
    624c:	br	x17

0000000000006250 <__sanitizer_malloc_hook@plt>:
    6250:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6254:	ldr	x17, [x16, #80]
    6258:	add	x16, x16, #0x50
    625c:	br	x17

0000000000006260 <dlvsym@plt>:
    6260:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6264:	ldr	x17, [x16, #88]
    6268:	add	x16, x16, #0x58
    626c:	br	x17

0000000000006270 <pthread_getattr_np@plt>:
    6270:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6274:	ldr	x17, [x16, #96]
    6278:	add	x16, x16, #0x60
    627c:	br	x17

0000000000006280 <_ZN11__sanitizer14real_sigactionEiPKvPv@plt>:
    6280:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6284:	ldr	x17, [x16, #104]
    6288:	add	x16, x16, #0x68
    628c:	br	x17

0000000000006290 <__sanitizer_symbolize_demangle@plt>:
    6290:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6294:	ldr	x17, [x16, #112]
    6298:	add	x16, x16, #0x70
    629c:	br	x17

00000000000062a0 <sigprocmask@plt>:
    62a0:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    62a4:	ldr	x17, [x16, #120]
    62a8:	add	x16, x16, #0x78
    62ac:	br	x17

00000000000062b0 <pthread_attr_init@plt>:
    62b0:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    62b4:	ldr	x17, [x16, #128]
    62b8:	add	x16, x16, #0x80
    62bc:	br	x17

00000000000062c0 <real_pthread_attr_getstack@plt>:
    62c0:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    62c4:	ldr	x17, [x16, #136]
    62c8:	add	x16, x16, #0x88
    62cc:	br	x17

00000000000062d0 <sleep@plt>:
    62d0:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    62d4:	ldr	x17, [x16, #144]
    62d8:	add	x16, x16, #0x90
    62dc:	br	x17

00000000000062e0 <dlsym@plt>:
    62e0:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    62e4:	ldr	x17, [x16, #152]
    62e8:	add	x16, x16, #0x98
    62ec:	br	x17

00000000000062f0 <memset@plt>:
    62f0:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    62f4:	ldr	x17, [x16, #160]
    62f8:	add	x16, x16, #0xa0
    62fc:	br	x17

0000000000006300 <__sanitizer_symbolize_data@plt>:
    6300:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6304:	ldr	x17, [x16, #168]
    6308:	add	x16, x16, #0xa8
    630c:	br	x17

0000000000006310 <isatty@plt>:
    6310:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6314:	ldr	x17, [x16, #176]
    6318:	add	x16, x16, #0xb0
    631c:	br	x17

0000000000006320 <dlerror@plt>:
    6320:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6324:	ldr	x17, [x16, #184]
    6328:	add	x16, x16, #0xb8
    632c:	br	x17

0000000000006330 <__cxa_finalize@plt>:
    6330:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6334:	ldr	x17, [x16, #192]
    6338:	add	x16, x16, #0xc0
    633c:	br	x17

0000000000006340 <_ZN11__sanitizer17real_pthread_joinEPvPS0_@plt>:
    6340:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6344:	ldr	x17, [x16, #200]
    6348:	add	x16, x16, #0xc8
    634c:	br	x17

0000000000006350 <getrusage@plt>:
    6350:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6354:	ldr	x17, [x16, #208]
    6358:	add	x16, x16, #0xd0
    635c:	br	x17

0000000000006360 <pthread_attr_destroy@plt>:
    6360:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6364:	ldr	x17, [x16, #216]
    6368:	add	x16, x16, #0xd8
    636c:	br	x17

0000000000006370 <real_clock_gettime@plt>:
    6370:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6374:	ldr	x17, [x16, #224]
    6378:	add	x16, x16, #0xe0
    637c:	br	x17

0000000000006380 <__cxa_demangle@plt>:
    6380:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6384:	ldr	x17, [x16, #232]
    6388:	add	x16, x16, #0xe8
    638c:	br	x17

0000000000006390 <__sanitizer_symbolize_code@plt>:
    6390:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6394:	ldr	x17, [x16, #240]
    6398:	add	x16, x16, #0xf0
    639c:	br	x17

00000000000063a0 <dl_iterate_phdr@plt>:
    63a0:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    63a4:	ldr	x17, [x16, #248]
    63a8:	add	x16, x16, #0xf8
    63ac:	br	x17

00000000000063b0 <__sanitizer_dump_coverage@plt>:
    63b0:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    63b4:	ldr	x17, [x16, #256]
    63b8:	add	x16, x16, #0x100
    63bc:	br	x17

00000000000063c0 <__interceptor_sigsetjmp@plt>:
    63c0:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    63c4:	ldr	x17, [x16, #264]
    63c8:	add	x16, x16, #0x108
    63cc:	br	x17

00000000000063d0 <__sanitizer_get_allocated_size@plt>:
    63d0:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    63d4:	ldr	x17, [x16, #272]
    63d8:	add	x16, x16, #0x110
    63dc:	br	x17

00000000000063e0 <clock_gettime@plt>:
    63e0:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    63e4:	ldr	x17, [x16, #280]
    63e8:	add	x16, x16, #0x118
    63ec:	br	x17

00000000000063f0 <__sanitizer_symbolize_flush@plt>:
    63f0:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    63f4:	ldr	x17, [x16, #288]
    63f8:	add	x16, x16, #0x120
    63fc:	br	x17

0000000000006400 <pthread_setspecific@plt>:
    6400:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6404:	ldr	x17, [x16, #296]
    6408:	add	x16, x16, #0x128
    640c:	br	x17

0000000000006410 <__hwasan_tag_mismatch4@plt>:
    6410:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6414:	ldr	x17, [x16, #304]
    6418:	add	x16, x16, #0x130
    641c:	br	x17

0000000000006420 <__ubsan_on_report@plt>:
    6420:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6424:	ldr	x17, [x16, #312]
    6428:	add	x16, x16, #0x138
    642c:	br	x17

0000000000006430 <__dynamic_cast@plt>:
    6430:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6434:	ldr	x17, [x16, #320]
    6438:	add	x16, x16, #0x140
    643c:	br	x17

0000000000006440 <__cxa_atexit@plt>:
    6440:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6444:	ldr	x17, [x16, #328]
    6448:	add	x16, x16, #0x148
    644c:	br	x17

0000000000006450 <snprintf@plt>:
    6450:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6454:	ldr	x17, [x16, #336]
    6458:	add	x16, x16, #0x150
    645c:	br	x17

0000000000006460 <pthread_attr_getstack@plt>:
    6460:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6464:	ldr	x17, [x16, #344]
    6468:	add	x16, x16, #0x158
    646c:	br	x17

0000000000006470 <__hwasan_test_shadow@plt>:
    6470:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6474:	ldr	x17, [x16, #352]
    6478:	add	x16, x16, #0x160
    647c:	br	x17

0000000000006480 <pthread_attr_setstacksize@plt>:
    6480:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6484:	ldr	x17, [x16, #360]
    6488:	add	x16, x16, #0x168
    648c:	br	x17

0000000000006490 <_Unwind_GetIP@plt>:
    6490:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6494:	ldr	x17, [x16, #368]
    6498:	add	x16, x16, #0x170
    649c:	br	x17

00000000000064a0 <madvise@plt>:
    64a0:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    64a4:	ldr	x17, [x16, #376]
    64a8:	add	x16, x16, #0x178
    64ac:	br	x17

00000000000064b0 <usleep@plt>:
    64b0:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    64b4:	ldr	x17, [x16, #384]
    64b8:	add	x16, x16, #0x180
    64bc:	br	x17

00000000000064c0 <memmove@plt>:
    64c0:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    64c4:	ldr	x17, [x16, #392]
    64c8:	add	x16, x16, #0x188
    64cc:	br	x17

00000000000064d0 <__sched_cpucount@plt>:
    64d0:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    64d4:	ldr	x17, [x16, #400]
    64d8:	add	x16, x16, #0x190
    64dc:	br	x17

00000000000064e0 <__hwasan_init@plt>:
    64e0:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    64e4:	ldr	x17, [x16, #408]
    64e8:	add	x16, x16, #0x198
    64ec:	br	x17

00000000000064f0 <__errno_location@plt>:
    64f0:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    64f4:	ldr	x17, [x16, #416]
    64f8:	add	x16, x16, #0x1a0
    64fc:	br	x17

0000000000006500 <sched_yield@plt>:
    6500:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6504:	ldr	x17, [x16, #424]
    6508:	add	x16, x16, #0x1a8
    650c:	br	x17

0000000000006510 <syslog@plt>:
    6510:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6514:	ldr	x17, [x16, #432]
    6518:	add	x16, x16, #0x1b0
    651c:	br	x17

0000000000006520 <__sanitizer_dump_trace_pc_guard_coverage@plt>:
    6520:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6524:	ldr	x17, [x16, #440]
    6528:	add	x16, x16, #0x1b8
    652c:	br	x17

0000000000006530 <__extenddftf2@plt>:
    6530:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6534:	ldr	x17, [x16, #448]
    6538:	add	x16, x16, #0x1c0
    653c:	br	x17

0000000000006540 <pthread_key_create@plt>:
    6540:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6544:	ldr	x17, [x16, #456]
    6548:	add	x16, x16, #0x1c8
    654c:	br	x17

0000000000006550 <__ubsan_handle_cfi_bad_type@plt>:
    6550:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6554:	ldr	x17, [x16, #464]
    6558:	add	x16, x16, #0x1d0
    655c:	br	x17

0000000000006560 <setrlimit@plt>:
    6560:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6564:	ldr	x17, [x16, #472]
    6568:	add	x16, x16, #0x1d8
    656c:	br	x17

0000000000006570 <getauxval@plt>:
    6570:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6574:	ldr	x17, [x16, #480]
    6578:	add	x16, x16, #0x1e0
    657c:	br	x17

0000000000006580 <__hwasan_handle_longjmp@plt>:
    6580:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6584:	ldr	x17, [x16, #488]
    6588:	add	x16, x16, #0x1e8
    658c:	br	x17

0000000000006590 <__sanitizer_free_hook@plt>:
    6590:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6594:	ldr	x17, [x16, #496]
    6598:	add	x16, x16, #0x1f0
    659c:	br	x17

00000000000065a0 <abort@plt>:
    65a0:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    65a4:	ldr	x17, [x16, #504]
    65a8:	add	x16, x16, #0x1f8
    65ac:	br	x17

00000000000065b0 <_ZN11__sanitizer19real_pthread_createEPvS0_PFS0_S0_ES0_@plt>:
    65b0:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    65b4:	ldr	x17, [x16, #512]
    65b8:	add	x16, x16, #0x200
    65bc:	br	x17

00000000000065c0 <sysconf@plt>:
    65c0:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    65c4:	ldr	x17, [x16, #520]
    65c8:	add	x16, x16, #0x208
    65cc:	br	x17

00000000000065d0 <__extendsftf2@plt>:
    65d0:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    65d4:	ldr	x17, [x16, #528]
    65d8:	add	x16, x16, #0x210
    65dc:	br	x17

00000000000065e0 <pthread_self@plt>:
    65e0:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    65e4:	ldr	x17, [x16, #536]
    65e8:	add	x16, x16, #0x218
    65ec:	br	x17

00000000000065f0 <getuid@plt>:
    65f0:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    65f4:	ldr	x17, [x16, #544]
    65f8:	add	x16, x16, #0x220
    65fc:	br	x17

0000000000006600 <__ubsan_default_options@plt>:
    6600:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6604:	ldr	x17, [x16, #552]
    6608:	add	x16, x16, #0x228
    660c:	br	x17

0000000000006610 <getrlimit@plt>:
    6610:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6614:	ldr	x17, [x16, #560]
    6618:	add	x16, x16, #0x230
    661c:	br	x17

0000000000006620 <sigaltstack@plt>:
    6620:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6624:	ldr	x17, [x16, #568]
    6628:	add	x16, x16, #0x238
    662c:	br	x17

0000000000006630 <__gmon_start__@plt>:
    6630:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6634:	ldr	x17, [x16, #576]
    6638:	add	x16, x16, #0x240
    663c:	br	x17

0000000000006640 <sigaction@plt>:
    6640:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6644:	ldr	x17, [x16, #584]
    6648:	add	x16, x16, #0x248
    664c:	br	x17

0000000000006650 <__sanitizer_set_report_path@plt>:
    6650:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6654:	ldr	x17, [x16, #592]
    6658:	add	x16, x16, #0x250
    665c:	br	x17

0000000000006660 <__sanitizer_print_memory_profile@plt>:
    6660:	adrp	x16, 5a000 <_Unwind_Backtrace@GCC_3.3>
    6664:	ldr	x17, [x16, #600]
    6668:	add	x16, x16, #0x258
    666c:	br	x17

Disassembly of section .text:

0000000000006670 <__hwasan_init_frames@@Base-0xd80>:
    6670:	adrp	x0, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28398>
    6674:	add	x0, x0, #0xd30
    6678:	strb	wzr, [x0, #736]
    667c:	ret
    6680:	adrp	x0, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
    6684:	add	x0, x0, #0xac8
    6688:	b	1c680 <__sanitizer_set_report_fd@@Base+0x4800>
    668c:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    6690:	ldr	x0, [x0, #4032]
    6694:	cbz	x0, 669c <__sanitizer_print_memory_profile@plt+0x3c>
    6698:	b	6630 <__gmon_start__@plt>
    669c:	ret
    66a0:	stp	x29, x30, [sp, #-32]!
    66a4:	mov	x29, sp
    66a8:	adrp	x0, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28398>
    66ac:	add	x0, x0, #0xca0
    66b0:	str	x0, [sp, #24]
    66b4:	ldr	x0, [sp, #24]
    66b8:	str	x0, [sp, #24]
    66bc:	ldr	x1, [sp, #24]
    66c0:	adrp	x0, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28398>
    66c4:	add	x0, x0, #0xca0
    66c8:	cmp	x1, x0
    66cc:	b.eq	6704 <__sanitizer_print_memory_profile@plt+0xa4>  // b.none
    66d0:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    66d4:	ldr	x0, [x0, #3976]
    66d8:	str	x0, [sp, #16]
    66dc:	ldr	x0, [sp, #16]
    66e0:	str	x0, [sp, #16]
    66e4:	ldr	x0, [sp, #16]
    66e8:	cmp	x0, #0x0
    66ec:	b.eq	6708 <__sanitizer_print_memory_profile@plt+0xa8>  // b.none
    66f0:	ldr	x1, [sp, #16]
    66f4:	adrp	x0, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28398>
    66f8:	add	x0, x0, #0xca0
    66fc:	blr	x1
    6700:	b	6708 <__sanitizer_print_memory_profile@plt+0xa8>
    6704:	nop
    6708:	ldp	x29, x30, [sp], #32
    670c:	ret
    6710:	stp	x29, x30, [sp, #-48]!
    6714:	mov	x29, sp
    6718:	adrp	x0, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28398>
    671c:	add	x0, x0, #0xca0
    6720:	str	x0, [sp, #40]
    6724:	ldr	x0, [sp, #40]
    6728:	str	x0, [sp, #40]
    672c:	ldr	x1, [sp, #40]
    6730:	adrp	x0, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28398>
    6734:	add	x0, x0, #0xca0
    6738:	sub	x0, x1, x0
    673c:	asr	x0, x0, #3
    6740:	lsr	x1, x0, #63
    6744:	add	x0, x1, x0
    6748:	asr	x0, x0, #1
    674c:	str	x0, [sp, #32]
    6750:	ldr	x0, [sp, #32]
    6754:	cmp	x0, #0x0
    6758:	b.eq	6794 <__sanitizer_print_memory_profile@plt+0x134>  // b.none
    675c:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    6760:	ldr	x0, [x0, #4040]
    6764:	str	x0, [sp, #24]
    6768:	ldr	x0, [sp, #24]
    676c:	str	x0, [sp, #24]
    6770:	ldr	x0, [sp, #24]
    6774:	cmp	x0, #0x0
    6778:	b.eq	6798 <__sanitizer_print_memory_profile@plt+0x138>  // b.none
    677c:	ldr	x2, [sp, #24]
    6780:	ldr	x1, [sp, #32]
    6784:	adrp	x0, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28398>
    6788:	add	x0, x0, #0xca0
    678c:	blr	x2
    6790:	b	6798 <__sanitizer_print_memory_profile@plt+0x138>
    6794:	nop
    6798:	ldp	x29, x30, [sp], #48
    679c:	ret
    67a0:	stp	x29, x30, [sp, #-16]!
    67a4:	mov	x29, sp
    67a8:	adrp	x0, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28398>
    67ac:	add	x0, x0, #0xcc0
    67b0:	ldrb	w0, [x0]
    67b4:	and	x0, x0, #0xff
    67b8:	cmp	x0, #0x0
    67bc:	b.ne	67f8 <__sanitizer_print_memory_profile@plt+0x198>  // b.any
    67c0:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    67c4:	ldr	x0, [x0, #3760]
    67c8:	cmp	x0, #0x0
    67cc:	b.eq	67e0 <__sanitizer_print_memory_profile@plt+0x180>  // b.none
    67d0:	adrp	x0, 5a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x26398>
    67d4:	add	x0, x0, #0x260
    67d8:	ldr	x0, [x0]
    67dc:	bl	6330 <__cxa_finalize@plt>
    67e0:	bl	66a0 <__sanitizer_print_memory_profile@plt+0x40>
    67e4:	adrp	x0, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28398>
    67e8:	add	x0, x0, #0xcc0
    67ec:	mov	w1, #0x1                   	// #1
    67f0:	strb	w1, [x0]
    67f4:	b	67fc <__sanitizer_print_memory_profile@plt+0x19c>
    67f8:	nop
    67fc:	ldp	x29, x30, [sp], #16
    6800:	ret
    6804:	stp	x29, x30, [sp, #-16]!
    6808:	mov	x29, sp
    680c:	bl	6710 <__sanitizer_print_memory_profile@plt+0xb0>
    6810:	nop
    6814:	ldp	x29, x30, [sp], #16
    6818:	ret
    681c:	nop
    6820:	str	x30, [sp, #-16]!
    6824:	bl	e3f8 <__interceptor_vfork@@Base+0xe18>
    6828:	cbz	x0, 6840 <__sanitizer_print_memory_profile@plt+0x1e0>
    682c:	ldr	w1, [x0, #44]
    6830:	ldr	x30, [sp], #16
    6834:	add	w1, w1, #0x1
    6838:	str	w1, [x0, #44]
    683c:	ret
    6840:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    6844:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    6848:	add	x2, x2, #0x220
    684c:	add	x0, x0, #0x230
    6850:	mov	x4, #0x0                   	// #0
    6854:	mov	x3, #0x0                   	// #0
    6858:	mov	w1, #0x29                  	// #41
    685c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    6860:	str	x30, [sp, #-16]!
    6864:	bl	e3f8 <__interceptor_vfork@@Base+0xe18>
    6868:	cbz	x0, 6880 <__sanitizer_print_memory_profile@plt+0x220>
    686c:	ldr	w1, [x0, #44]
    6870:	ldr	x30, [sp], #16
    6874:	sub	w1, w1, #0x1
    6878:	str	w1, [x0, #44]
    687c:	ret
    6880:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    6884:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    6888:	add	x2, x2, #0x220
    688c:	add	x0, x0, #0x230
    6890:	mov	x4, #0x0                   	// #0
    6894:	mov	x3, #0x0                   	// #0
    6898:	mov	w1, #0x2e                  	// #46
    689c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    68a0:	ands	w2, w2, #0xffff
    68a4:	b.eq	6a48 <__sanitizer_print_memory_profile@plt+0x3e8>  // b.none
    68a8:	stp	x19, x20, [sp, #-80]!
    68ac:	sub	w2, w2, #0x1
    68b0:	stp	x23, x24, [sp, #32]
    68b4:	add	x23, x1, #0x38
    68b8:	stp	x25, x26, [sp, #48]
    68bc:	mov	x25, x0
    68c0:	mov	w0, #0x38                  	// #56
    68c4:	adrp	x26, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    68c8:	add	x26, x26, #0x270
    68cc:	umaddl	x23, w2, w0, x23
    68d0:	stp	x21, x22, [sp, #16]
    68d4:	mov	x21, x1
    68d8:	mov	x22, x1
    68dc:	str	x30, [sp, #64]
    68e0:	ldr	w2, [x22]
    68e4:	cmp	w2, #0x4
    68e8:	b.eq	6910 <__sanitizer_print_memory_profile@plt+0x2b0>  // b.none
    68ec:	add	x22, x22, #0x38
    68f0:	cmp	x22, x23
    68f4:	b.ne	68e0 <__sanitizer_print_memory_profile@plt+0x280>  // b.any
    68f8:	ldp	x21, x22, [sp, #16]
    68fc:	ldp	x23, x24, [sp, #32]
    6900:	ldp	x25, x26, [sp, #48]
    6904:	ldr	x30, [sp, #64]
    6908:	ldp	x19, x20, [sp], #80
    690c:	ret
    6910:	ldr	x19, [x22, #16]
    6914:	ldr	x24, [x22, #40]
    6918:	add	x19, x25, x19
    691c:	add	x24, x19, x24
    6920:	cmp	x19, x24
    6924:	b.cs	68ec <__sanitizer_print_memory_profile@plt+0x28c>  // b.hs, b.nlast
    6928:	mov	x0, x19
    692c:	ldr	w2, [x19, #8]
    6930:	cmp	w2, #0x3
    6934:	ldr	w20, [x0], #12
    6938:	add	x20, x20, #0x3
    693c:	and	x20, x20, #0xfffffffffffffffc
    6940:	add	x20, x0, x20
    6944:	b.eq	6980 <__sanitizer_print_memory_profile@plt+0x320>  // b.none
    6948:	ldr	w19, [x19, #4]
    694c:	add	x19, x19, #0x3
    6950:	and	x19, x19, #0xfffffffffffffffc
    6954:	add	x19, x20, x19
    6958:	cmp	x24, x19
    695c:	b.ls	68ec <__sanitizer_print_memory_profile@plt+0x28c>  // b.plast
    6960:	mov	x0, x19
    6964:	ldr	w2, [x19, #8]
    6968:	cmp	w2, #0x3
    696c:	ldr	w20, [x0], #12
    6970:	add	x20, x20, #0x3
    6974:	and	x20, x20, #0xfffffffffffffffc
    6978:	add	x20, x0, x20
    697c:	b.ne	6948 <__sanitizer_print_memory_profile@plt+0x2e8>  // b.any
    6980:	mov	x1, x26
    6984:	bl	1a560 <__sanitizer_set_report_fd@@Base+0x26e0>
    6988:	cbnz	w0, 6948 <__sanitizer_print_memory_profile@plt+0x2e8>
    698c:	mov	x4, #0x0                   	// #0
    6990:	mov	x3, #0xffffffffffffffff    	// #-1
    6994:	nop
    6998:	ldr	w1, [x21]
    699c:	cmp	w1, #0x1
    69a0:	b.ne	69c4 <__sanitizer_print_memory_profile@plt+0x364>  // b.any
    69a4:	ldr	x1, [x21, #16]
    69a8:	ldr	x2, [x21, #40]
    69ac:	add	x1, x25, x1
    69b0:	cmp	x3, x1
    69b4:	add	x2, x1, x2
    69b8:	csel	x3, x3, x1, ls  // ls = plast
    69bc:	cmp	x4, x2
    69c0:	csel	x4, x4, x2, cs  // cs = hs, nlast
    69c4:	add	x21, x21, #0x38
    69c8:	cmp	x21, x23
    69cc:	b.ne	6998 <__sanitizer_print_memory_profile@plt+0x338>  // b.any
    69d0:	sub	x3, x4, x3
    69d4:	mov	x0, #0x100000000           	// #4294967296
    69d8:	cmp	x3, x0
    69dc:	b.hi	6a4c <__sanitizer_print_memory_profile@plt+0x3ec>  // b.pmore
    69e0:	mov	x0, #0x1000000000000       	// #281474976710656
    69e4:	cmp	x4, x0
    69e8:	b.hi	6a5c <__sanitizer_print_memory_profile@plt+0x3fc>  // b.pmore
    69ec:	ldpsw	x0, x1, [x20]
    69f0:	add	x20, x19, x0
    69f4:	add	x19, x19, x1
    69f8:	cmp	x20, x19
    69fc:	b.ne	6a10 <__sanitizer_print_memory_profile@plt+0x3b0>  // b.any
    6a00:	b	68f8 <__sanitizer_print_memory_profile@plt+0x298>
    6a04:	add	x20, x20, #0x8
    6a08:	cmp	x19, x20
    6a0c:	b.eq	68f8 <__sanitizer_print_memory_profile@plt+0x298>  // b.none
    6a10:	ldr	w21, [x20, #4]
    6a14:	ldrsw	x22, [x20]
    6a18:	and	x23, x21, #0xfffff0
    6a1c:	add	x22, x20, x22
    6a20:	lsr	w2, w21, #24
    6a24:	mov	x0, x22
    6a28:	mov	x1, x23
    6a2c:	bl	ebb8 <__hwasan_memmove@@Base+0x130>
    6a30:	ands	w2, w21, #0xf
    6a34:	b.eq	6a04 <__sanitizer_print_memory_profile@plt+0x3a4>  // b.none
    6a38:	add	x0, x22, x23
    6a3c:	mov	x1, #0x10                  	// #16
    6a40:	bl	ebb8 <__hwasan_memmove@@Base+0x130>
    6a44:	b	6a04 <__sanitizer_print_memory_profile@plt+0x3a4>
    6a48:	ret
    6a4c:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    6a50:	add	x0, x0, #0x278
    6a54:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
    6a58:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
    6a5c:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    6a60:	add	x0, x0, #0x2b0
    6a64:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
    6a68:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
    6a6c:	nop
    6a70:	mov	x2, x0
    6a74:	str	x30, [sp, #-16]!
    6a78:	ldr	x0, [x0]
    6a7c:	ldr	x1, [x2, #16]
    6a80:	ldrh	w2, [x2, #24]
    6a84:	bl	68a0 <__sanitizer_print_memory_profile@plt+0x240>
    6a88:	mov	w0, #0x0                   	// #0
    6a8c:	ldr	x30, [sp], #16
    6a90:	ret
    6a94:	nop
    6a98:	stp	x19, x20, [sp, #-368]!
    6a9c:	stp	x25, x26, [sp, #48]
    6aa0:	adrp	x25, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    6aa4:	add	x20, sp, #0x58
    6aa8:	ldr	x26, [x25, #4056]
    6aac:	stp	x21, x22, [sp, #16]
    6ab0:	mov	w21, #0x1                   	// #1
    6ab4:	mov	x0, x26
    6ab8:	stp	x23, x24, [sp, #32]
    6abc:	add	x24, sp, #0x78
    6ac0:	str	x30, [sp, #64]
    6ac4:	bl	17ea0 <__sanitizer_set_report_fd@@Base+0x20>
    6ac8:	mov	x1, x26
    6acc:	mov	x0, x24
    6ad0:	bl	17f98 <__sanitizer_set_report_fd@@Base+0x118>
    6ad4:	adrp	x22, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    6ad8:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    6adc:	add	x0, x0, #0x2f0
    6ae0:	bl	1c4e0 <__sanitizer_set_report_fd@@Base+0x4660>
    6ae4:	mov	x6, x0
    6ae8:	mov	w5, #0x14                  	// #20
    6aec:	mov	w4, #0x2                   	// #2
    6af0:	mov	x3, #0x8000                	// #32768
    6af4:	mov	w2, #0x63                  	// #99
    6af8:	mov	x1, x24
    6afc:	mov	x0, x26
    6b00:	str	x6, [sp, #128]
    6b04:	add	x22, x22, #0x8b8
    6b08:	strb	w21, [sp, #155]
    6b0c:	adrp	x23, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
    6b10:	str	w5, [sp, #156]
    6b14:	add	x23, x23, #0x3e8
    6b18:	strb	wzr, [sp, #188]
    6b1c:	str	w4, [sp, #208]
    6b20:	str	x3, [sp, #224]
    6b24:	strb	w21, [sp, #241]
    6b28:	str	w2, [sp, #344]
    6b2c:	bl	17f98 <__sanitizer_set_report_fd@@Base+0x118>
    6b30:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    6b34:	mov	x1, #0x100                 	// #256
    6b38:	movk	x1, #0x1, lsl #16
    6b3c:	mov	w2, #0x1000                	// #4096
    6b40:	ldr	q0, [x0, #3440]
    6b44:	adrp	x0, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28398>
    6b48:	add	x19, x0, #0xcd0
    6b4c:	movk	x1, #0x1, lsl #32
    6b50:	movk	x1, #0x100, lsl #48
    6b54:	str	x1, [x0, #3280]
    6b58:	mov	w1, #0x400                 	// #1024
    6b5c:	mov	x0, x20
    6b60:	strb	w21, [x19, #12]
    6b64:	strb	w21, [x19, #32]
    6b68:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    6b6c:	stp	xzr, xzr, [x19, #40]
    6b70:	str	w2, [x19, #8]
    6b74:	str	q0, [x19, #16]
    6b78:	str	w1, [x19, #36]
    6b7c:	strb	wzr, [x19, #56]
    6b80:	bl	19ce8 <__sanitizer_set_report_fd@@Base+0x1e68>
    6b84:	ldr	x21, [x21, #3632]
    6b88:	mov	x1, #0x10                  	// #16
    6b8c:	mov	x0, x21
    6b90:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
    6b94:	mov	x2, x0
    6b98:	adrp	x3, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    6b9c:	add	x3, x3, #0x308
    6ba0:	mov	x0, x20
    6ba4:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    6ba8:	add	x1, x1, #0x330
    6bac:	stp	x22, x19, [x2]
    6bb0:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
    6bb4:	mov	x1, #0x10                  	// #16
    6bb8:	mov	x0, x21
    6bbc:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
    6bc0:	mov	x2, x0
    6bc4:	str	x22, [x0]
    6bc8:	mov	x3, x23
    6bcc:	add	x1, x19, #0x1
    6bd0:	mov	x0, x20
    6bd4:	str	x1, [x2, #8]
    6bd8:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    6bdc:	add	x1, x1, #0x340
    6be0:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
    6be4:	mov	x1, #0x10                  	// #16
    6be8:	mov	x0, x21
    6bec:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
    6bf0:	mov	x2, x0
    6bf4:	add	x4, x19, #0x2
    6bf8:	mov	x3, x23
    6bfc:	mov	x0, x20
    6c00:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    6c04:	stp	x22, x4, [x2]
    6c08:	add	x1, x1, #0x350
    6c0c:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
    6c10:	mov	x1, #0x10                  	// #16
    6c14:	mov	x0, x21
    6c18:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
    6c1c:	mov	x2, x0
    6c20:	add	x4, x19, #0x3
    6c24:	mov	x3, x23
    6c28:	mov	x0, x20
    6c2c:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    6c30:	stp	x22, x4, [x2]
    6c34:	add	x1, x1, #0x360
    6c38:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
    6c3c:	mov	x1, #0x10                  	// #16
    6c40:	mov	x0, x21
    6c44:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
    6c48:	mov	x2, x0
    6c4c:	add	x4, x19, #0x4
    6c50:	mov	x3, x23
    6c54:	mov	x0, x20
    6c58:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    6c5c:	stp	x22, x4, [x2]
    6c60:	add	x1, x1, #0x370
    6c64:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
    6c68:	mov	x1, #0x10                  	// #16
    6c6c:	mov	x0, x21
    6c70:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
    6c74:	mov	x2, x0
    6c78:	add	x4, x19, #0x5
    6c7c:	mov	x3, x23
    6c80:	mov	x0, x20
    6c84:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    6c88:	stp	x22, x4, [x2]
    6c8c:	add	x1, x1, #0x380
    6c90:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
    6c94:	mov	x1, #0x10                  	// #16
    6c98:	mov	x0, x21
    6c9c:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
    6ca0:	mov	x2, x0
    6ca4:	add	x4, x19, #0x6
    6ca8:	mov	x3, x23
    6cac:	mov	x0, x20
    6cb0:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    6cb4:	stp	x22, x4, [x2]
    6cb8:	add	x1, x1, #0x388
    6cbc:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
    6cc0:	mov	x1, #0x10                  	// #16
    6cc4:	mov	x0, x21
    6cc8:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
    6ccc:	mov	x2, x0
    6cd0:	add	x4, x19, #0x7
    6cd4:	mov	x3, x23
    6cd8:	mov	x0, x20
    6cdc:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    6ce0:	stp	x22, x4, [x2]
    6ce4:	add	x1, x1, #0x3a8
    6ce8:	adrp	x23, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    6cec:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
    6cf0:	add	x23, x23, #0x8d8
    6cf4:	mov	x1, #0x10                  	// #16
    6cf8:	mov	x0, x21
    6cfc:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
    6d00:	mov	x2, x0
    6d04:	adrp	x3, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    6d08:	add	x0, x19, #0x8
    6d0c:	add	x3, x3, #0x3b8
    6d10:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    6d14:	stp	x23, x0, [x2]
    6d18:	add	x1, x1, #0x438
    6d1c:	mov	x0, x20
    6d20:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
    6d24:	mov	x1, #0x10                  	// #16
    6d28:	mov	x0, x21
    6d2c:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
    6d30:	mov	x2, x0
    6d34:	add	x4, x19, #0xc
    6d38:	adrp	x3, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    6d3c:	add	x3, x3, #0x450
    6d40:	mov	x0, x20
    6d44:	stp	x22, x4, [x2]
    6d48:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    6d4c:	add	x1, x1, #0x4e0
    6d50:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
    6d54:	mov	x1, #0x10                  	// #16
    6d58:	mov	x0, x21
    6d5c:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
    6d60:	mov	x2, x0
    6d64:	add	x4, x19, #0x10
    6d68:	adrp	x3, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    6d6c:	add	x3, x3, #0x4f8
    6d70:	mov	x0, x20
    6d74:	stp	x23, x4, [x2]
    6d78:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    6d7c:	add	x1, x1, #0x578
    6d80:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
    6d84:	mov	x1, #0x10                  	// #16
    6d88:	mov	x0, x21
    6d8c:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
    6d90:	mov	x2, x0
    6d94:	add	x4, x19, #0x14
    6d98:	adrp	x3, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    6d9c:	add	x3, x3, #0x590
    6da0:	mov	x0, x20
    6da4:	stp	x23, x4, [x2]
    6da8:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    6dac:	add	x1, x1, #0x5c0
    6db0:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
    6db4:	mov	x1, #0x10                  	// #16
    6db8:	mov	x0, x21
    6dbc:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
    6dc0:	mov	x2, x0
    6dc4:	add	x4, x19, #0x18
    6dc8:	adrp	x3, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    6dcc:	add	x3, x3, #0x5d8
    6dd0:	mov	x0, x20
    6dd4:	stp	x23, x4, [x2]
    6dd8:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    6ddc:	add	x1, x1, #0x600
    6de0:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
    6de4:	mov	x1, #0x10                  	// #16
    6de8:	mov	x0, x21
    6dec:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
    6df0:	mov	x2, x0
    6df4:	add	x4, x19, #0x1c
    6df8:	adrp	x3, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    6dfc:	add	x3, x3, #0x610
    6e00:	mov	x0, x20
    6e04:	stp	x23, x4, [x2]
    6e08:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    6e0c:	add	x1, x1, #0x6a0
    6e10:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
    6e14:	mov	x1, #0x10                  	// #16
    6e18:	mov	x0, x21
    6e1c:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
    6e20:	mov	x2, x0
    6e24:	add	x4, x19, #0x20
    6e28:	adrp	x3, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    6e2c:	add	x3, x3, #0x6b8
    6e30:	mov	x0, x20
    6e34:	stp	x22, x4, [x2]
    6e38:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    6e3c:	add	x1, x1, #0x6e8
    6e40:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
    6e44:	mov	x1, #0x10                  	// #16
    6e48:	mov	x0, x21
    6e4c:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
    6e50:	mov	x2, x0
    6e54:	add	x4, x19, #0x24
    6e58:	adrp	x3, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    6e5c:	add	x3, x3, #0x700
    6e60:	mov	x0, x20
    6e64:	stp	x23, x4, [x2]
    6e68:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    6e6c:	add	x1, x1, #0x788
    6e70:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
    6e74:	adrp	x23, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    6e78:	mov	x1, #0x10                  	// #16
    6e7c:	mov	x0, x21
    6e80:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
    6e84:	mov	x2, x0
    6e88:	add	x23, x23, #0x8f8
    6e8c:	add	x0, x19, #0x28
    6e90:	adrp	x3, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    6e94:	add	x3, x3, #0x7a0
    6e98:	stp	x23, x0, [x2]
    6e9c:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    6ea0:	mov	x0, x20
    6ea4:	add	x1, x1, #0x7d0
    6ea8:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
    6eac:	mov	x1, #0x10                  	// #16
    6eb0:	mov	x0, x21
    6eb4:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
    6eb8:	mov	x2, x0
    6ebc:	add	x4, x19, #0x30
    6ec0:	adrp	x3, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    6ec4:	add	x3, x3, #0x7e8
    6ec8:	mov	x0, x20
    6ecc:	stp	x23, x4, [x2]
    6ed0:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    6ed4:	add	x1, x1, #0x818
    6ed8:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
    6edc:	add	x19, x19, #0x38
    6ee0:	mov	x1, #0x10                  	// #16
    6ee4:	mov	x0, x21
    6ee8:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
    6eec:	mov	x2, x0
    6ef0:	adrp	x3, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    6ef4:	add	x3, x3, #0x830
    6ef8:	mov	x0, x20
    6efc:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    6f00:	stp	x22, x19, [x2]
    6f04:	adrp	x19, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    6f08:	add	x1, x1, #0x880
    6f0c:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
    6f10:	mov	x1, x26
    6f14:	mov	x0, x20
    6f18:	bl	181b0 <__sanitizer_set_report_fd@@Base+0x330>
    6f1c:	ldr	x19, [x19, #3704]
    6f20:	mov	x0, x19
    6f24:	bl	2f720 <__ubsan_default_options@@Base+0x18>
    6f28:	mov	x0, x24
    6f2c:	bl	19ce8 <__sanitizer_set_report_fd@@Base+0x1e68>
    6f30:	mov	x1, x19
    6f34:	mov	x0, x24
    6f38:	bl	2f738 <__ubsan_default_options@@Base+0x30>
    6f3c:	mov	x0, x24
    6f40:	mov	x1, x26
    6f44:	bl	181b0 <__sanitizer_set_report_fd@@Base+0x330>
    6f48:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    6f4c:	ldr	x0, [x0, #3640]
    6f50:	cbz	x0, 6f68 <__sanitizer_print_memory_profile@plt+0x908>
    6f54:	bl	6210 <__hwasan_default_options@plt>
    6f58:	mov	x1, x0
    6f5c:	mov	x2, #0x0                   	// #0
    6f60:	mov	x0, x20
    6f64:	bl	19a80 <__sanitizer_set_report_fd@@Base+0x1c00>
    6f68:	bl	2f718 <__ubsan_default_options@@Base+0x10>
    6f6c:	mov	x1, x0
    6f70:	mov	x2, #0x0                   	// #0
    6f74:	mov	x0, x24
    6f78:	bl	19a80 <__sanitizer_set_report_fd@@Base+0x1c00>
    6f7c:	mov	x0, x20
    6f80:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    6f84:	add	x1, x1, #0x898
    6f88:	bl	199f8 <__sanitizer_set_report_fd@@Base+0x1b78>
    6f8c:	mov	x0, x24
    6f90:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    6f94:	add	x1, x1, #0x8a8
    6f98:	bl	199f8 <__sanitizer_set_report_fd@@Base+0x1b78>
    6f9c:	ldr	x0, [x25, #4056]
    6fa0:	bl	190f0 <__sanitizer_set_report_fd@@Base+0x1270>
    6fa4:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    6fa8:	ldr	x0, [x0, #3816]
    6fac:	ldr	w0, [x0]
    6fb0:	cbnz	w0, 6fd8 <__sanitizer_print_memory_profile@plt+0x978>
    6fb4:	ldr	x25, [x25, #4056]
    6fb8:	ldrb	w0, [x25, #122]
    6fbc:	cbnz	w0, 6fe8 <__sanitizer_print_memory_profile@plt+0x988>
    6fc0:	ldp	x21, x22, [sp, #16]
    6fc4:	ldp	x23, x24, [sp, #32]
    6fc8:	ldp	x25, x26, [sp, #48]
    6fcc:	ldr	x30, [sp, #64]
    6fd0:	ldp	x19, x20, [sp], #368
    6fd4:	ret
    6fd8:	bl	19388 <__sanitizer_set_report_fd@@Base+0x1508>
    6fdc:	ldr	x25, [x25, #4056]
    6fe0:	ldrb	w0, [x25, #122]
    6fe4:	cbz	w0, 6fc0 <__sanitizer_print_memory_profile@plt+0x960>
    6fe8:	mov	x0, x20
    6fec:	bl	19468 <__sanitizer_set_report_fd@@Base+0x15e8>
    6ff0:	ldp	x21, x22, [sp, #16]
    6ff4:	ldp	x23, x24, [sp, #32]
    6ff8:	ldp	x25, x26, [sp, #48]
    6ffc:	ldr	x30, [sp, #64]
    7000:	ldp	x19, x20, [sp], #368
    7004:	ret
    7008:	stp	x19, x20, [sp, #-48]!
    700c:	stp	x21, x22, [sp, #16]
    7010:	adrp	x21, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28398>
    7014:	add	x0, x21, #0xcd0
    7018:	ldr	w0, [x0, #64]
    701c:	str	x30, [sp, #32]
    7020:	cbz	w0, 7034 <__sanitizer_print_memory_profile@plt+0x9d4>
    7024:	ldp	x21, x22, [sp, #16]
    7028:	ldr	x30, [sp, #32]
    702c:	ldp	x19, x20, [sp], #48
    7030:	ret
    7034:	bl	d7b0 <__interceptor_vfork@@Base+0x1d0>
    7038:	bl	d848 <__interceptor_vfork@@Base+0x268>
    703c:	tst	w0, #0xff
    7040:	b.eq	719c <__sanitizer_print_memory_profile@plt+0xb3c>  // b.none
    7044:	bl	de08 <__interceptor_vfork@@Base+0x828>
    7048:	bl	11940 <__hwasan_tag_mismatch_v2@@Base+0x688>
    704c:	mov	x19, x0
    7050:	add	x0, x0, #0x30
    7054:	mov	w2, #0x1                   	// #1
    7058:	ldxrb	w1, [x0]
    705c:	stxrb	w3, w2, [x0]
    7060:	cbnz	w3, 7058 <__sanitizer_print_memory_profile@plt+0x9f8>
    7064:	dmb	ish
    7068:	tst	w1, #0xff
    706c:	b.eq	7074 <__sanitizer_print_memory_profile@plt+0xa14>  // b.none
    7070:	bl	85d8 <__sanitizer_print_stack_trace@@Base+0x300>
    7074:	ldr	x20, [x19, #32]
    7078:	ldr	x0, [x19, #16]
    707c:	cbz	x20, 7128 <__sanitizer_print_memory_profile@plt+0xac8>
    7080:	ldr	x1, [x20, #2664]
    7084:	str	x1, [x19, #32]
    7088:	add	x2, x0, #0xa80
    708c:	mov	x22, x20
    7090:	sub	x0, x20, x0
    7094:	mov	w1, #0x0                   	// #0
    7098:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
    709c:	ldr	x0, [x19, #40]
    70a0:	str	x0, [x20, #2664]
    70a4:	str	x20, [x19, #40]
    70a8:	dmb	ish
    70ac:	strb	wzr, [x19, #48]
    70b0:	ldr	x2, [x19, #16]
    70b4:	mov	x0, x20
    70b8:	sub	x1, x22, x2
    70bc:	bl	11450 <__hwasan_tag_mismatch_v2@@Base+0x198>
    70c0:	add	x0, x19, #0x48
    70c4:	mov	w2, #0x1                   	// #1
    70c8:	ldxrb	w1, [x0]
    70cc:	stxrb	w3, w2, [x0]
    70d0:	cbnz	w3, 70c8 <__sanitizer_print_memory_profile@plt+0xa68>
    70d4:	dmb	ish
    70d8:	tst	w1, #0xff
    70dc:	b.eq	70e4 <__sanitizer_print_memory_profile@plt+0xa84>  // b.none
    70e0:	bl	85d8 <__sanitizer_print_stack_trace@@Base+0x300>
    70e4:	ldp	x0, x2, [x20, #8]
    70e8:	ldr	x1, [x19, #64]
    70ec:	add	x0, x0, x1
    70f0:	ldr	x1, [x19, #56]
    70f4:	sub	x0, x0, x2
    70f8:	str	x0, [x19, #64]
    70fc:	add	x0, x1, #0x1
    7100:	str	x0, [x19, #56]
    7104:	dmb	ish
    7108:	strb	wzr, [x19, #72]
    710c:	add	x21, x21, #0xcd0
    7110:	mov	w0, #0x1                   	// #1
    7114:	ldr	x30, [sp, #32]
    7118:	str	w0, [x21, #64]
    711c:	ldp	x21, x22, [sp, #16]
    7120:	ldp	x19, x20, [sp], #48
    7124:	ret
    7128:	ldr	x1, [x19]
    712c:	lsl	x2, x0, #1
    7130:	sub	x2, x2, #0x1
    7134:	tst	x2, x1
    7138:	b.ne	717c <__sanitizer_print_memory_profile@plt+0xb1c>  // b.any
    713c:	ldr	x2, [x19, #24]
    7140:	add	x22, x1, x0
    7144:	ldr	x0, [x19, #8]
    7148:	add	x1, x1, x2
    714c:	str	x1, [x19]
    7150:	mov	x20, x22
    7154:	cmp	x1, x0
    7158:	b.ls	709c <__sanitizer_print_memory_profile@plt+0xa3c>  // b.plast
    715c:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    7160:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    7164:	add	x2, x2, #0x978
    7168:	add	x0, x0, #0x928
    716c:	mov	x4, #0x0                   	// #0
    7170:	mov	x3, #0x0                   	// #0
    7174:	mov	w1, #0xc3                  	// #195
    7178:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    717c:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    7180:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    7184:	add	x2, x2, #0x8f8
    7188:	add	x0, x0, #0x928
    718c:	mov	x4, #0x0                   	// #0
    7190:	mov	x3, #0x0                   	// #0
    7194:	mov	w1, #0xc0                  	// #192
    7198:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    719c:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    71a0:	add	x0, x0, #0x8b8
    71a4:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    71a8:	bl	1e670 <__sanitizer_set_report_fd@@Base+0x67f0>
    71ac:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
    71b0:	str	x30, [sp, #-16]!
    71b4:	bl	e3f8 <__interceptor_vfork@@Base+0xe18>
    71b8:	mov	x1, x0
    71bc:	mov	w0, #0x0                   	// #0
    71c0:	cbz	x1, 71d0 <__sanitizer_print_memory_profile@plt+0xb70>
    71c4:	ldr	w0, [x1, #44]
    71c8:	cmp	w0, #0x0
    71cc:	cset	w0, ne  // ne = any
    71d0:	ldr	x30, [sp], #16
    71d4:	ret
    71d8:	adrp	x0, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28398>
    71dc:	add	x0, x0, #0xcd0
    71e0:	ret
    71e4:	nop
    71e8:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    71ec:	mov	x4, #0x100                 	// #256
    71f0:	movk	x4, #0x1, lsl #16
    71f4:	mov	w3, #0x1000                	// #4096
    71f8:	ldr	q0, [x1, #3440]
    71fc:	movk	x4, #0x1, lsl #32
    7200:	mov	w1, #0x1                   	// #1
    7204:	movk	x4, #0x100, lsl #48
    7208:	mov	w2, #0x400                 	// #1024
    720c:	str	x4, [x0]
    7210:	str	w3, [x0, #8]
    7214:	strb	w1, [x0, #12]
    7218:	str	q0, [x0, #16]
    721c:	strb	w1, [x0, #32]
    7220:	str	w2, [x0, #36]
    7224:	stp	xzr, xzr, [x0, #40]
    7228:	strb	wzr, [x0, #56]
    722c:	ret
    7230:	ret
    7234:	nop
    7238:	stp	x19, x20, [sp, #-64]!
    723c:	mov	x19, x0
    7240:	mov	w20, w5
    7244:	stp	x21, x22, [sp, #16]
    7248:	mov	x21, x2
    724c:	mov	x22, x3
    7250:	stp	x23, x24, [sp, #32]
    7254:	mov	x23, x1
    7258:	and	w24, w4, #0xff
    725c:	str	x30, [sp, #48]
    7260:	bl	e3f8 <__interceptor_vfork@@Base+0xe18>
    7264:	cbz	x0, 7300 <__sanitizer_print_memory_profile@plt+0xca0>
    7268:	cbz	w24, 729c <__sanitizer_print_memory_profile@plt+0xc3c>
    726c:	mov	x3, x21
    7270:	mov	x2, x23
    7274:	mov	w1, w20
    7278:	mov	w7, #0x1                   	// #1
    727c:	ldp	x5, x6, [x0, #8]
    7280:	mov	x0, x19
    7284:	ldp	x21, x22, [sp, #16]
    7288:	mov	x4, #0x0                   	// #0
    728c:	ldp	x23, x24, [sp, #32]
    7290:	ldr	x30, [sp, #48]
    7294:	ldp	x19, x20, [sp], #64
    7298:	b	283c0 <__sanitizer_cov_dump@@Base+0x17a0>
    729c:	bl	e3f8 <__interceptor_vfork@@Base+0xe18>
    72a0:	mov	x5, x0
    72a4:	cbz	x0, 7318 <__sanitizer_print_memory_profile@plt+0xcb8>
    72a8:	ldr	w6, [x5, #44]
    72ac:	mov	x4, x22
    72b0:	mov	x3, x21
    72b4:	mov	x2, x23
    72b8:	add	w6, w6, #0x1
    72bc:	mov	w1, w20
    72c0:	mov	x0, x19
    72c4:	str	w6, [x5, #44]
    72c8:	mov	w7, #0x0                   	// #0
    72cc:	mov	x6, #0x0                   	// #0
    72d0:	mov	x5, #0x0                   	// #0
    72d4:	bl	283c0 <__sanitizer_cov_dump@@Base+0x17a0>
    72d8:	bl	e3f8 <__interceptor_vfork@@Base+0xe18>
    72dc:	cbz	x0, 7338 <__sanitizer_print_memory_profile@plt+0xcd8>
    72e0:	ldr	w1, [x0, #44]
    72e4:	ldp	x21, x22, [sp, #16]
    72e8:	sub	w1, w1, #0x1
    72ec:	str	w1, [x0, #44]
    72f0:	ldp	x23, x24, [sp, #32]
    72f4:	ldr	x30, [sp, #48]
    72f8:	ldp	x19, x20, [sp], #64
    72fc:	ret
    7300:	str	wzr, [x19, #8]
    7304:	ldp	x21, x22, [sp, #16]
    7308:	ldp	x23, x24, [sp, #32]
    730c:	ldr	x30, [sp, #48]
    7310:	ldp	x19, x20, [sp], #64
    7314:	ret
    7318:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    731c:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    7320:	add	x2, x2, #0x220
    7324:	add	x0, x0, #0x230
    7328:	mov	x4, #0x0                   	// #0
    732c:	mov	x3, #0x0                   	// #0
    7330:	mov	w1, #0x29                  	// #41
    7334:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    7338:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    733c:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    7340:	add	x2, x2, #0x220
    7344:	add	x0, x0, #0x230
    7348:	mov	x4, #0x0                   	// #0
    734c:	mov	x3, #0x0                   	// #0
    7350:	mov	w1, #0x2e                  	// #46
    7354:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    7358:	sub	sp, sp, #0x840
    735c:	mov	w7, w1
    7360:	mov	x6, x3
    7364:	mov	x5, x2
    7368:	mov	x1, x0
    736c:	mov	x3, x5
    7370:	stp	x29, x30, [sp]
    7374:	mov	x29, sp
    7378:	mov	x5, x4
    737c:	mov	w2, w7
    7380:	mov	x4, x6
    7384:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    7388:	add	x0, x0, #0x9c0
    738c:	str	x19, [sp, #16]
    7390:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
    7394:	add	x19, x29, #0x28
    7398:	adrp	x0, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28398>
    739c:	add	x1, x19, #0x10
    73a0:	str	x1, [x29, #40]
    73a4:	ldr	w0, [x0, #3348]
    73a8:	str	xzr, [x29, #48]
    73ac:	str	xzr, [x29, #2104]
    73b0:	cbnz	w0, 73c0 <__sanitizer_print_memory_profile@plt+0xd60>
    73b4:	mov	x0, x19
    73b8:	bl	27f58 <__sanitizer_cov_dump@@Base+0x1338>
    73bc:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
    73c0:	bl	27c78 <__sanitizer_cov_dump@@Base+0x1058>
    73c4:	mov	x1, x0
    73c8:	adrp	x4, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    73cc:	mov	x2, x29
    73d0:	mov	x0, x19
    73d4:	mov	w5, #0x100                 	// #256
    73d8:	ldr	x4, [x4, #4056]
    73dc:	mov	x3, #0x0                   	// #0
    73e0:	str	x29, [x29, #2104]
    73e4:	ldrb	w4, [x4, #33]
    73e8:	bl	7238 <__sanitizer_print_memory_profile@plt+0xbd8>
    73ec:	b	73b4 <__sanitizer_print_memory_profile@plt+0xd54>

00000000000073f0 <__hwasan_init_frames@@Base>:
    73f0:	ret
    73f4:	nop

00000000000073f8 <__hwasan_init_static@@Base>:
    73f8:	str	x30, [sp, #-16]!
    73fc:	bl	c618 <__sanitizer_get_allocated_size@@Base+0x33a8>
    7400:	bl	7008 <__sanitizer_print_memory_profile@plt+0x9a8>
    7404:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    7408:	mov	x0, #0x0                   	// #0
    740c:	ldr	x30, [sp], #16
    7410:	ldr	x1, [x1, #3784]
    7414:	ldrh	w2, [x1, #56]
    7418:	ldr	x3, [x1, #32]
    741c:	add	x1, x1, x3
    7420:	b	68a0 <__sanitizer_print_memory_profile@plt+0x240>
    7424:	nop

0000000000007428 <__hwasan_init@@Base>:
    7428:	stp	x19, x20, [sp, #-32]!
    742c:	adrp	x19, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28398>
    7430:	add	x0, x19, #0xcd0
    7434:	ldrb	w1, [x0, #72]
    7438:	str	x30, [sp, #16]
    743c:	cbnz	w1, 7554 <__hwasan_init@@Base+0x12c>
    7440:	ldr	w1, [x0, #68]
    7444:	cbz	w1, 7454 <__hwasan_init@@Base+0x2c>
    7448:	ldr	x30, [sp, #16]
    744c:	ldp	x19, x20, [sp], #32
    7450:	ret
    7454:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    7458:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    745c:	add	x2, x2, #0xa28
    7460:	mov	w3, #0x1                   	// #1
    7464:	ldr	x1, [x1, #4024]
    7468:	adrp	x20, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    746c:	strb	w3, [x0, #72]
    7470:	str	x2, [x1]
    7474:	bl	23d20 <__sanitizer_sandbox_on_notify@@Base+0x6d8>
    7478:	bl	14f38 <_ZdaPvRKSt9nothrow_t@@Base+0x31b8>
    747c:	bl	6a98 <__sanitizer_print_memory_profile@plt+0x438>
    7480:	adrp	x0, 7000 <__sanitizer_print_memory_profile@plt+0x9a0>
    7484:	add	x0, x0, #0x358
    7488:	bl	23140 <__sanitizer_on_print@@Base+0x3820>
    748c:	ldr	x20, [x20, #4056]
    7490:	ldr	x0, [x20, #40]
    7494:	bl	6650 <__sanitizer_set_report_path@plt>
    7498:	bl	e3f0 <__interceptor_vfork@@Base+0xe10>
    749c:	bl	24638 <__sanitizer_sandbox_on_notify@@Base+0xff0>
    74a0:	bl	7008 <__sanitizer_print_memory_profile@plt+0x9a8>
    74a4:	mov	x1, #0x0                   	// #0
    74a8:	adrp	x0, 6000 <__hwasan_tls@@Base+0x6000>
    74ac:	add	x0, x0, #0xa70
    74b0:	bl	63a0 <dl_iterate_phdr@plt>
    74b4:	bl	e3f8 <__interceptor_vfork@@Base+0xe18>
    74b8:	bl	11300 <__hwasan_tag_mismatch_v2@@Base+0x48>
    74bc:	bl	df38 <__interceptor_vfork@@Base+0x958>
    74c0:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    74c4:	ldr	x0, [x0, #3960]
    74c8:	bl	1f910 <__sanitizer_set_report_fd@@Base+0x7a90>
    74cc:	bl	24328 <__sanitizer_sandbox_on_notify@@Base+0xce0>
    74d0:	bl	d540 <__interceptor_longjmp@@Base+0x78>
    74d4:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    74d8:	ldr	x0, [x0, #3768]
    74dc:	bl	24a50 <__sanitizer_sandbox_on_notify@@Base+0x1408>
    74e0:	bl	e040 <__interceptor_vfork@@Base+0xa60>
    74e4:	bl	299b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10c8>
    74e8:	adrp	x2, 6000 <__hwasan_tls@@Base+0x6000>
    74ec:	adrp	x1, 6000 <__hwasan_tls@@Base+0x6000>
    74f0:	add	x2, x2, #0x860
    74f4:	add	x1, x1, #0x820
    74f8:	bl	29360 <__sanitizer_get_module_and_offset_for_pc@@Base+0xa78>
    74fc:	ldrb	w0, [x20, #169]
    7500:	ldr	x1, [x20, #176]
    7504:	bl	26678 <__sanitizer_sandbox_on_notify@@Base+0x3030>
    7508:	bl	e360 <__interceptor_vfork@@Base+0xd80>
    750c:	bl	e310 <__interceptor_vfork@@Base+0xd30>
    7510:	bl	88b8 <__sanitizer_print_stack_trace@@Base+0x5e0>
    7514:	bl	2f698 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6db0>
    7518:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    751c:	ldr	x0, [x0, #3816]
    7520:	ldr	w0, [x0]
    7524:	cbnz	w0, 7544 <__hwasan_init@@Base+0x11c>
    7528:	add	x19, x19, #0xcd0
    752c:	mov	w0, #0x1                   	// #1
    7530:	ldr	x30, [sp, #16]
    7534:	str	w0, [x19, #68]
    7538:	strb	wzr, [x19, #72]
    753c:	ldp	x19, x20, [sp], #32
    7540:	ret
    7544:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    7548:	add	x0, x0, #0xa40
    754c:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    7550:	b	7528 <__hwasan_init@@Base+0x100>
    7554:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    7558:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    755c:	add	x2, x2, #0xa00
    7560:	add	x0, x0, #0x230
    7564:	mov	x4, #0x0                   	// #0
    7568:	mov	x3, #0x0                   	// #0
    756c:	mov	w1, #0x162                 	// #354
    7570:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    7574:	nop

0000000000007578 <__hwasan_library_loaded@@Base>:
    7578:	b	68a0 <__sanitizer_print_memory_profile@plt+0x240>
    757c:	nop

0000000000007580 <__hwasan_library_unloaded@@Base>:
    7580:	ands	w2, w2, #0xffff
    7584:	b.eq	75f8 <__hwasan_library_unloaded@@Base+0x78>  // b.none
    7588:	sub	w2, w2, #0x1
    758c:	stp	x19, x20, [sp, #-32]!
    7590:	and	x20, x2, #0xffff
    7594:	mov	x19, x1
    7598:	add	x1, x20, #0x1
    759c:	stp	x21, x30, [sp, #16]
    75a0:	mov	x21, x0
    75a4:	lsl	x20, x1, #3
    75a8:	sub	x20, x20, x1
    75ac:	add	x20, x19, x20, lsl #3
    75b0:	b	75c0 <__hwasan_library_unloaded@@Base+0x40>
    75b4:	add	x19, x19, #0x38
    75b8:	cmp	x19, x20
    75bc:	b.eq	75ec <__hwasan_library_unloaded@@Base+0x6c>  // b.none
    75c0:	ldr	w1, [x19]
    75c4:	cmp	w1, #0x1
    75c8:	b.ne	75b4 <__hwasan_library_unloaded@@Base+0x34>  // b.any
    75cc:	ldr	x1, [x19, #40]
    75d0:	mov	w2, #0x0                   	// #0
    75d4:	ldr	x0, [x19, #16]
    75d8:	add	x19, x19, #0x38
    75dc:	add	x0, x21, x0
    75e0:	bl	ed00 <__hwasan_memmove@@Base+0x278>
    75e4:	cmp	x19, x20
    75e8:	b.ne	75c0 <__hwasan_library_unloaded@@Base+0x40>  // b.any
    75ec:	ldp	x21, x30, [sp, #16]
    75f0:	ldp	x19, x20, [sp], #32
    75f4:	ret
    75f8:	ret
    75fc:	nop

0000000000007600 <__hwasan_print_shadow@@Base>:
    7600:	stp	x19, x20, [sp, #-48]!
    7604:	adrp	x20, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    7608:	mov	x2, x1
    760c:	ldr	x20, [x20, #3848]
    7610:	and	x1, x0, #0xffffffffffffff
    7614:	add	x2, x2, x1
    7618:	stp	x21, x22, [sp, #16]
    761c:	sub	x21, x2, #0x1
    7620:	ldr	x4, [x20]
    7624:	ubfx	x19, x0, #4, #52
    7628:	lsr	x3, x0, #56
    762c:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    7630:	add	x19, x19, x4
    7634:	add	x0, x0, #0xa60
    7638:	add	x21, x4, x21, lsr #4
    763c:	str	x30, [sp, #32]
    7640:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    7644:	cmp	x21, x19
    7648:	b.cc	767c <__hwasan_print_shadow@@Base+0x7c>  // b.lo, b.ul, b.last
    764c:	adrp	x22, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    7650:	add	x22, x22, #0xa98
    7654:	nop
    7658:	ldr	x1, [x20]
    765c:	mov	x0, x22
    7660:	ldrb	w2, [x19]
    7664:	sub	x1, x19, x1
    7668:	add	x19, x19, #0x1
    766c:	lsl	x1, x1, #4
    7670:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    7674:	cmp	x19, x21
    7678:	b.ls	7658 <__hwasan_print_shadow@@Base+0x58>  // b.plast
    767c:	ldp	x21, x22, [sp, #16]
    7680:	ldr	x30, [sp, #32]
    7684:	ldp	x19, x20, [sp], #48
    7688:	ret
    768c:	nop

0000000000007690 <__hwasan_test_shadow@@Base>:
    7690:	cbz	x1, 76f4 <__hwasan_test_shadow@@Base+0x64>
    7694:	adrp	x3, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    7698:	sub	x2, x1, #0x1
    769c:	and	x5, x0, #0xffffffffffffff
    76a0:	ubfx	x1, x0, #4, #52
    76a4:	ldr	x3, [x3, #3848]
    76a8:	lsr	x4, x0, #56
    76ac:	add	x2, x2, x5
    76b0:	ldr	x0, [x3]
    76b4:	add	x1, x1, x0
    76b8:	add	x2, x0, x2, lsr #4
    76bc:	cmp	x2, x1
    76c0:	b.cs	76d4 <__hwasan_test_shadow@@Base+0x44>  // b.hs, b.nlast
    76c4:	b	76f4 <__hwasan_test_shadow@@Base+0x64>
    76c8:	add	x1, x1, #0x1
    76cc:	cmp	x2, x1
    76d0:	b.cc	76f4 <__hwasan_test_shadow@@Base+0x64>  // b.lo, b.ul, b.last
    76d4:	ldrb	w3, [x1]
    76d8:	cmp	w3, w4
    76dc:	b.eq	76c8 <__hwasan_test_shadow@@Base+0x38>  // b.none
    76e0:	sub	x0, x1, x0
    76e4:	lsl	x0, x0, #4
    76e8:	subs	x0, x0, x5
    76ec:	csel	x0, x0, xzr, pl  // pl = nfrst
    76f0:	ret
    76f4:	mov	x0, #0xffffffffffffffff    	// #-1
    76f8:	ret
    76fc:	nop

0000000000007700 <__sanitizer_unaligned_load16@@Base>:
    7700:	ldrh	w0, [x0]
    7704:	ret

0000000000007708 <__sanitizer_unaligned_load32@@Base>:
    7708:	ldr	w0, [x0]
    770c:	ret

0000000000007710 <__sanitizer_unaligned_load64@@Base>:
    7710:	ldr	x0, [x0]
    7714:	ret

0000000000007718 <__sanitizer_unaligned_store16@@Base>:
    7718:	strh	w1, [x0]
    771c:	ret

0000000000007720 <__sanitizer_unaligned_store32@@Base>:
    7720:	str	w1, [x0]
    7724:	ret

0000000000007728 <__sanitizer_unaligned_store64@@Base>:
    7728:	str	x1, [x0]
    772c:	ret

0000000000007730 <__hwasan_loadN@@Base>:
    7730:	cbnz	x1, 7738 <__hwasan_loadN@@Base+0x8>
    7734:	ret
    7738:	adrp	x3, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    773c:	and	x6, x0, #0xffffffffffffff
    7740:	add	x6, x1, x6
    7744:	ubfx	x2, x0, #4, #52
    7748:	ldr	x3, [x3, #3848]
    774c:	lsr	x6, x6, #4
    7750:	lsr	x5, x0, #56
    7754:	ldr	x7, [x3]
    7758:	add	x2, x2, x7
    775c:	add	x4, x6, x7
    7760:	cmp	x2, x4
    7764:	b.cc	7778 <__hwasan_loadN@@Base+0x48>  // b.lo, b.ul, b.last
    7768:	b	7788 <__hwasan_loadN@@Base+0x58>
    776c:	add	x2, x2, #0x1
    7770:	cmp	x4, x2
    7774:	b.ls	7788 <__hwasan_loadN@@Base+0x58>  // b.plast
    7778:	ldrb	w3, [x2]
    777c:	cmp	w3, w5
    7780:	b.eq	776c <__hwasan_loadN@@Base+0x3c>  // b.none
    7784:	brk	#0x90f
    7788:	add	x2, x0, x1
    778c:	ands	x3, x2, #0xf
    7790:	b.eq	7734 <__hwasan_loadN@@Base+0x4>  // b.none
    7794:	ldrb	w4, [x6, x7]
    7798:	lsr	x5, x2, #56
    779c:	and	x2, x2, #0xfffffffffffffff0
    77a0:	cmp	w4, w5
    77a4:	b.eq	7734 <__hwasan_loadN@@Base+0x4>  // b.none
    77a8:	cmp	w4, #0xf
    77ac:	b.hi	7784 <__hwasan_loadN@@Base+0x54>  // b.pmore
    77b0:	cmp	x3, w4, uxtb
    77b4:	b.hi	7784 <__hwasan_loadN@@Base+0x54>  // b.pmore
    77b8:	orr	x2, x2, #0xf
    77bc:	ldrb	w2, [x2]
    77c0:	cmp	w2, w5
    77c4:	b.ne	7784 <__hwasan_loadN@@Base+0x54>  // b.any
    77c8:	ret
    77cc:	nop

00000000000077d0 <__hwasan_load1@@Base>:
    77d0:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    77d4:	ubfx	x3, x0, #4, #52
    77d8:	lsr	x2, x0, #56
    77dc:	ldr	x1, [x1, #3848]
    77e0:	ldr	x1, [x1]
    77e4:	ldrb	w1, [x3, x1]
    77e8:	cmp	w1, w2
    77ec:	b.eq	7818 <__hwasan_load1@@Base+0x48>  // b.none
    77f0:	cmp	w1, #0xf
    77f4:	b.hi	781c <__hwasan_load1@@Base+0x4c>  // b.pmore
    77f8:	and	x3, x0, #0xf
    77fc:	add	x3, x3, #0x1
    7800:	cmp	x3, w1, uxtb
    7804:	b.hi	781c <__hwasan_load1@@Base+0x4c>  // b.pmore
    7808:	orr	x1, x0, #0xf
    780c:	ldrb	w1, [x1]
    7810:	cmp	w1, w2
    7814:	b.ne	781c <__hwasan_load1@@Base+0x4c>  // b.any
    7818:	ret
    781c:	brk	#0x900

0000000000007820 <__hwasan_load2@@Base>:
    7820:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    7824:	ubfx	x3, x0, #4, #52
    7828:	lsr	x2, x0, #56
    782c:	ldr	x1, [x1, #3848]
    7830:	ldr	x1, [x1]
    7834:	ldrb	w1, [x3, x1]
    7838:	cmp	w1, w2
    783c:	b.eq	7868 <__hwasan_load2@@Base+0x48>  // b.none
    7840:	cmp	w1, #0xf
    7844:	b.hi	786c <__hwasan_load2@@Base+0x4c>  // b.pmore
    7848:	and	x3, x0, #0xf
    784c:	add	x3, x3, #0x2
    7850:	cmp	x3, w1, uxtb
    7854:	b.hi	786c <__hwasan_load2@@Base+0x4c>  // b.pmore
    7858:	orr	x1, x0, #0xf
    785c:	ldrb	w1, [x1]
    7860:	cmp	w1, w2
    7864:	b.ne	786c <__hwasan_load2@@Base+0x4c>  // b.any
    7868:	ret
    786c:	brk	#0x901

0000000000007870 <__hwasan_load4@@Base>:
    7870:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    7874:	ubfx	x3, x0, #4, #52
    7878:	lsr	x2, x0, #56
    787c:	ldr	x1, [x1, #3848]
    7880:	ldr	x1, [x1]
    7884:	ldrb	w1, [x3, x1]
    7888:	cmp	w1, w2
    788c:	b.eq	78b8 <__hwasan_load4@@Base+0x48>  // b.none
    7890:	cmp	w1, #0xf
    7894:	b.hi	78bc <__hwasan_load4@@Base+0x4c>  // b.pmore
    7898:	and	x3, x0, #0xf
    789c:	add	x3, x3, #0x4
    78a0:	cmp	x3, w1, uxtb
    78a4:	b.hi	78bc <__hwasan_load4@@Base+0x4c>  // b.pmore
    78a8:	orr	x1, x0, #0xf
    78ac:	ldrb	w1, [x1]
    78b0:	cmp	w1, w2
    78b4:	b.ne	78bc <__hwasan_load4@@Base+0x4c>  // b.any
    78b8:	ret
    78bc:	brk	#0x902

00000000000078c0 <__hwasan_load8@@Base>:
    78c0:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    78c4:	ubfx	x3, x0, #4, #52
    78c8:	lsr	x2, x0, #56
    78cc:	ldr	x1, [x1, #3848]
    78d0:	ldr	x1, [x1]
    78d4:	ldrb	w1, [x3, x1]
    78d8:	cmp	w1, w2
    78dc:	b.eq	7908 <__hwasan_load8@@Base+0x48>  // b.none
    78e0:	cmp	w1, #0xf
    78e4:	b.hi	790c <__hwasan_load8@@Base+0x4c>  // b.pmore
    78e8:	and	x3, x0, #0xf
    78ec:	add	x3, x3, #0x8
    78f0:	cmp	x3, w1, uxtb
    78f4:	b.hi	790c <__hwasan_load8@@Base+0x4c>  // b.pmore
    78f8:	orr	x1, x0, #0xf
    78fc:	ldrb	w1, [x1]
    7900:	cmp	w1, w2
    7904:	b.ne	790c <__hwasan_load8@@Base+0x4c>  // b.any
    7908:	ret
    790c:	brk	#0x903

0000000000007910 <__hwasan_load16@@Base>:
    7910:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    7914:	ubfx	x3, x0, #4, #52
    7918:	lsr	x2, x0, #56
    791c:	ldr	x1, [x1, #3848]
    7920:	ldr	x1, [x1]
    7924:	ldrb	w1, [x3, x1]
    7928:	cmp	w1, w2
    792c:	b.eq	7934 <__hwasan_load16@@Base+0x24>  // b.none
    7930:	brk	#0x904
    7934:	ret

0000000000007938 <__hwasan_loadN_noabort@@Base>:
    7938:	cbnz	x1, 7940 <__hwasan_loadN_noabort@@Base+0x8>
    793c:	ret
    7940:	adrp	x3, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    7944:	and	x6, x0, #0xffffffffffffff
    7948:	add	x6, x1, x6
    794c:	ubfx	x2, x0, #4, #52
    7950:	ldr	x3, [x3, #3848]
    7954:	lsr	x6, x6, #4
    7958:	lsr	x5, x0, #56
    795c:	ldr	x7, [x3]
    7960:	add	x2, x2, x7
    7964:	add	x4, x6, x7
    7968:	cmp	x2, x4
    796c:	b.cs	7988 <__hwasan_loadN_noabort@@Base+0x50>  // b.hs, b.nlast
    7970:	ldrb	w3, [x2]
    7974:	cmp	w3, w5
    7978:	b.ne	79d0 <__hwasan_loadN_noabort@@Base+0x98>  // b.any
    797c:	add	x2, x2, #0x1
    7980:	cmp	x4, x2
    7984:	b.ne	7970 <__hwasan_loadN_noabort@@Base+0x38>  // b.any
    7988:	add	x2, x0, x1
    798c:	ands	x3, x2, #0xf
    7990:	b.eq	793c <__hwasan_loadN_noabort@@Base+0x4>  // b.none
    7994:	ldrb	w4, [x6, x7]
    7998:	lsr	x5, x2, #56
    799c:	and	x2, x2, #0xfffffffffffffff0
    79a0:	cmp	w4, w5
    79a4:	b.eq	793c <__hwasan_loadN_noabort@@Base+0x4>  // b.none
    79a8:	cmp	w4, #0xf
    79ac:	b.hi	79c8 <__hwasan_loadN_noabort@@Base+0x90>  // b.pmore
    79b0:	cmp	x3, w4, uxtb
    79b4:	b.hi	79c8 <__hwasan_loadN_noabort@@Base+0x90>  // b.pmore
    79b8:	orr	x2, x2, #0xf
    79bc:	ldrb	w2, [x2]
    79c0:	cmp	w2, w5
    79c4:	b.eq	793c <__hwasan_loadN_noabort@@Base+0x4>  // b.none
    79c8:	brk	#0x92f
    79cc:	ret
    79d0:	brk	#0x92f
    79d4:	b	797c <__hwasan_loadN_noabort@@Base+0x44>

00000000000079d8 <__hwasan_load1_noabort@@Base>:
    79d8:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    79dc:	ubfx	x3, x0, #4, #52
    79e0:	lsr	x2, x0, #56
    79e4:	ldr	x1, [x1, #3848]
    79e8:	ldr	x1, [x1]
    79ec:	ldrb	w1, [x3, x1]
    79f0:	cmp	w1, w2
    79f4:	b.eq	7a20 <__hwasan_load1_noabort@@Base+0x48>  // b.none
    79f8:	cmp	w1, #0xf
    79fc:	b.hi	7a24 <__hwasan_load1_noabort@@Base+0x4c>  // b.pmore
    7a00:	and	x3, x0, #0xf
    7a04:	add	x3, x3, #0x1
    7a08:	cmp	x3, w1, uxtb
    7a0c:	b.hi	7a24 <__hwasan_load1_noabort@@Base+0x4c>  // b.pmore
    7a10:	orr	x1, x0, #0xf
    7a14:	ldrb	w1, [x1]
    7a18:	cmp	w1, w2
    7a1c:	b.ne	7a24 <__hwasan_load1_noabort@@Base+0x4c>  // b.any
    7a20:	ret
    7a24:	brk	#0x920
    7a28:	ret
    7a2c:	nop

0000000000007a30 <__hwasan_load2_noabort@@Base>:
    7a30:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    7a34:	ubfx	x3, x0, #4, #52
    7a38:	lsr	x2, x0, #56
    7a3c:	ldr	x1, [x1, #3848]
    7a40:	ldr	x1, [x1]
    7a44:	ldrb	w1, [x3, x1]
    7a48:	cmp	w1, w2
    7a4c:	b.eq	7a78 <__hwasan_load2_noabort@@Base+0x48>  // b.none
    7a50:	cmp	w1, #0xf
    7a54:	b.hi	7a7c <__hwasan_load2_noabort@@Base+0x4c>  // b.pmore
    7a58:	and	x3, x0, #0xf
    7a5c:	add	x3, x3, #0x2
    7a60:	cmp	x3, w1, uxtb
    7a64:	b.hi	7a7c <__hwasan_load2_noabort@@Base+0x4c>  // b.pmore
    7a68:	orr	x1, x0, #0xf
    7a6c:	ldrb	w1, [x1]
    7a70:	cmp	w1, w2
    7a74:	b.ne	7a7c <__hwasan_load2_noabort@@Base+0x4c>  // b.any
    7a78:	ret
    7a7c:	brk	#0x921
    7a80:	ret
    7a84:	nop

0000000000007a88 <__hwasan_load4_noabort@@Base>:
    7a88:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    7a8c:	ubfx	x3, x0, #4, #52
    7a90:	lsr	x2, x0, #56
    7a94:	ldr	x1, [x1, #3848]
    7a98:	ldr	x1, [x1]
    7a9c:	ldrb	w1, [x3, x1]
    7aa0:	cmp	w1, w2
    7aa4:	b.eq	7ad0 <__hwasan_load4_noabort@@Base+0x48>  // b.none
    7aa8:	cmp	w1, #0xf
    7aac:	b.hi	7ad4 <__hwasan_load4_noabort@@Base+0x4c>  // b.pmore
    7ab0:	and	x3, x0, #0xf
    7ab4:	add	x3, x3, #0x4
    7ab8:	cmp	x3, w1, uxtb
    7abc:	b.hi	7ad4 <__hwasan_load4_noabort@@Base+0x4c>  // b.pmore
    7ac0:	orr	x1, x0, #0xf
    7ac4:	ldrb	w1, [x1]
    7ac8:	cmp	w1, w2
    7acc:	b.ne	7ad4 <__hwasan_load4_noabort@@Base+0x4c>  // b.any
    7ad0:	ret
    7ad4:	brk	#0x922
    7ad8:	ret
    7adc:	nop

0000000000007ae0 <__hwasan_load8_noabort@@Base>:
    7ae0:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    7ae4:	ubfx	x3, x0, #4, #52
    7ae8:	lsr	x2, x0, #56
    7aec:	ldr	x1, [x1, #3848]
    7af0:	ldr	x1, [x1]
    7af4:	ldrb	w1, [x3, x1]
    7af8:	cmp	w1, w2
    7afc:	b.eq	7b28 <__hwasan_load8_noabort@@Base+0x48>  // b.none
    7b00:	cmp	w1, #0xf
    7b04:	b.hi	7b2c <__hwasan_load8_noabort@@Base+0x4c>  // b.pmore
    7b08:	and	x3, x0, #0xf
    7b0c:	add	x3, x3, #0x8
    7b10:	cmp	x3, w1, uxtb
    7b14:	b.hi	7b2c <__hwasan_load8_noabort@@Base+0x4c>  // b.pmore
    7b18:	orr	x1, x0, #0xf
    7b1c:	ldrb	w1, [x1]
    7b20:	cmp	w1, w2
    7b24:	b.ne	7b2c <__hwasan_load8_noabort@@Base+0x4c>  // b.any
    7b28:	ret
    7b2c:	brk	#0x923
    7b30:	ret
    7b34:	nop

0000000000007b38 <__hwasan_load16_noabort@@Base>:
    7b38:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    7b3c:	ubfx	x3, x0, #4, #52
    7b40:	lsr	x2, x0, #56
    7b44:	ldr	x1, [x1, #3848]
    7b48:	ldr	x1, [x1]
    7b4c:	ldrb	w1, [x3, x1]
    7b50:	cmp	w1, w2
    7b54:	b.eq	7b5c <__hwasan_load16_noabort@@Base+0x24>  // b.none
    7b58:	brk	#0x924
    7b5c:	ret

0000000000007b60 <__hwasan_storeN@@Base>:
    7b60:	cbnz	x1, 7b68 <__hwasan_storeN@@Base+0x8>
    7b64:	ret
    7b68:	adrp	x3, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    7b6c:	and	x6, x0, #0xffffffffffffff
    7b70:	add	x6, x1, x6
    7b74:	ubfx	x2, x0, #4, #52
    7b78:	ldr	x3, [x3, #3848]
    7b7c:	lsr	x6, x6, #4
    7b80:	lsr	x5, x0, #56
    7b84:	ldr	x7, [x3]
    7b88:	add	x2, x2, x7
    7b8c:	add	x4, x6, x7
    7b90:	cmp	x2, x4
    7b94:	b.cc	7ba8 <__hwasan_storeN@@Base+0x48>  // b.lo, b.ul, b.last
    7b98:	b	7bb8 <__hwasan_storeN@@Base+0x58>
    7b9c:	add	x2, x2, #0x1
    7ba0:	cmp	x4, x2
    7ba4:	b.ls	7bb8 <__hwasan_storeN@@Base+0x58>  // b.plast
    7ba8:	ldrb	w3, [x2]
    7bac:	cmp	w3, w5
    7bb0:	b.eq	7b9c <__hwasan_storeN@@Base+0x3c>  // b.none
    7bb4:	brk	#0x91f
    7bb8:	add	x2, x0, x1
    7bbc:	ands	x3, x2, #0xf
    7bc0:	b.eq	7b64 <__hwasan_storeN@@Base+0x4>  // b.none
    7bc4:	ldrb	w4, [x6, x7]
    7bc8:	lsr	x5, x2, #56
    7bcc:	and	x2, x2, #0xfffffffffffffff0
    7bd0:	cmp	w4, w5
    7bd4:	b.eq	7b64 <__hwasan_storeN@@Base+0x4>  // b.none
    7bd8:	cmp	w4, #0xf
    7bdc:	b.hi	7bb4 <__hwasan_storeN@@Base+0x54>  // b.pmore
    7be0:	cmp	x3, w4, uxtb
    7be4:	b.hi	7bb4 <__hwasan_storeN@@Base+0x54>  // b.pmore
    7be8:	orr	x2, x2, #0xf
    7bec:	ldrb	w2, [x2]
    7bf0:	cmp	w2, w5
    7bf4:	b.ne	7bb4 <__hwasan_storeN@@Base+0x54>  // b.any
    7bf8:	ret
    7bfc:	nop

0000000000007c00 <__hwasan_store1@@Base>:
    7c00:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    7c04:	ubfx	x3, x0, #4, #52
    7c08:	lsr	x2, x0, #56
    7c0c:	ldr	x1, [x1, #3848]
    7c10:	ldr	x1, [x1]
    7c14:	ldrb	w1, [x3, x1]
    7c18:	cmp	w1, w2
    7c1c:	b.eq	7c48 <__hwasan_store1@@Base+0x48>  // b.none
    7c20:	cmp	w1, #0xf
    7c24:	b.hi	7c4c <__hwasan_store1@@Base+0x4c>  // b.pmore
    7c28:	and	x3, x0, #0xf
    7c2c:	add	x3, x3, #0x1
    7c30:	cmp	x3, w1, uxtb
    7c34:	b.hi	7c4c <__hwasan_store1@@Base+0x4c>  // b.pmore
    7c38:	orr	x1, x0, #0xf
    7c3c:	ldrb	w1, [x1]
    7c40:	cmp	w1, w2
    7c44:	b.ne	7c4c <__hwasan_store1@@Base+0x4c>  // b.any
    7c48:	ret
    7c4c:	brk	#0x910

0000000000007c50 <__hwasan_store2@@Base>:
    7c50:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    7c54:	ubfx	x3, x0, #4, #52
    7c58:	lsr	x2, x0, #56
    7c5c:	ldr	x1, [x1, #3848]
    7c60:	ldr	x1, [x1]
    7c64:	ldrb	w1, [x3, x1]
    7c68:	cmp	w1, w2
    7c6c:	b.eq	7c98 <__hwasan_store2@@Base+0x48>  // b.none
    7c70:	cmp	w1, #0xf
    7c74:	b.hi	7c9c <__hwasan_store2@@Base+0x4c>  // b.pmore
    7c78:	and	x3, x0, #0xf
    7c7c:	add	x3, x3, #0x2
    7c80:	cmp	x3, w1, uxtb
    7c84:	b.hi	7c9c <__hwasan_store2@@Base+0x4c>  // b.pmore
    7c88:	orr	x1, x0, #0xf
    7c8c:	ldrb	w1, [x1]
    7c90:	cmp	w1, w2
    7c94:	b.ne	7c9c <__hwasan_store2@@Base+0x4c>  // b.any
    7c98:	ret
    7c9c:	brk	#0x911

0000000000007ca0 <__hwasan_store4@@Base>:
    7ca0:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    7ca4:	ubfx	x3, x0, #4, #52
    7ca8:	lsr	x2, x0, #56
    7cac:	ldr	x1, [x1, #3848]
    7cb0:	ldr	x1, [x1]
    7cb4:	ldrb	w1, [x3, x1]
    7cb8:	cmp	w1, w2
    7cbc:	b.eq	7ce8 <__hwasan_store4@@Base+0x48>  // b.none
    7cc0:	cmp	w1, #0xf
    7cc4:	b.hi	7cec <__hwasan_store4@@Base+0x4c>  // b.pmore
    7cc8:	and	x3, x0, #0xf
    7ccc:	add	x3, x3, #0x4
    7cd0:	cmp	x3, w1, uxtb
    7cd4:	b.hi	7cec <__hwasan_store4@@Base+0x4c>  // b.pmore
    7cd8:	orr	x1, x0, #0xf
    7cdc:	ldrb	w1, [x1]
    7ce0:	cmp	w1, w2
    7ce4:	b.ne	7cec <__hwasan_store4@@Base+0x4c>  // b.any
    7ce8:	ret
    7cec:	brk	#0x912

0000000000007cf0 <__hwasan_store8@@Base>:
    7cf0:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    7cf4:	ubfx	x3, x0, #4, #52
    7cf8:	lsr	x2, x0, #56
    7cfc:	ldr	x1, [x1, #3848]
    7d00:	ldr	x1, [x1]
    7d04:	ldrb	w1, [x3, x1]
    7d08:	cmp	w1, w2
    7d0c:	b.eq	7d38 <__hwasan_store8@@Base+0x48>  // b.none
    7d10:	cmp	w1, #0xf
    7d14:	b.hi	7d3c <__hwasan_store8@@Base+0x4c>  // b.pmore
    7d18:	and	x3, x0, #0xf
    7d1c:	add	x3, x3, #0x8
    7d20:	cmp	x3, w1, uxtb
    7d24:	b.hi	7d3c <__hwasan_store8@@Base+0x4c>  // b.pmore
    7d28:	orr	x1, x0, #0xf
    7d2c:	ldrb	w1, [x1]
    7d30:	cmp	w1, w2
    7d34:	b.ne	7d3c <__hwasan_store8@@Base+0x4c>  // b.any
    7d38:	ret
    7d3c:	brk	#0x913

0000000000007d40 <__hwasan_store16@@Base>:
    7d40:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    7d44:	ubfx	x3, x0, #4, #52
    7d48:	lsr	x2, x0, #56
    7d4c:	ldr	x1, [x1, #3848]
    7d50:	ldr	x1, [x1]
    7d54:	ldrb	w1, [x3, x1]
    7d58:	cmp	w1, w2
    7d5c:	b.eq	7d64 <__hwasan_store16@@Base+0x24>  // b.none
    7d60:	brk	#0x914
    7d64:	ret

0000000000007d68 <__hwasan_storeN_noabort@@Base>:
    7d68:	cbnz	x1, 7d70 <__hwasan_storeN_noabort@@Base+0x8>
    7d6c:	ret
    7d70:	adrp	x3, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    7d74:	and	x6, x0, #0xffffffffffffff
    7d78:	add	x6, x1, x6
    7d7c:	ubfx	x2, x0, #4, #52
    7d80:	ldr	x3, [x3, #3848]
    7d84:	lsr	x6, x6, #4
    7d88:	lsr	x5, x0, #56
    7d8c:	ldr	x7, [x3]
    7d90:	add	x2, x2, x7
    7d94:	add	x4, x6, x7
    7d98:	cmp	x2, x4
    7d9c:	b.cs	7db8 <__hwasan_storeN_noabort@@Base+0x50>  // b.hs, b.nlast
    7da0:	ldrb	w3, [x2]
    7da4:	cmp	w3, w5
    7da8:	b.ne	7e00 <__hwasan_storeN_noabort@@Base+0x98>  // b.any
    7dac:	add	x2, x2, #0x1
    7db0:	cmp	x4, x2
    7db4:	b.ne	7da0 <__hwasan_storeN_noabort@@Base+0x38>  // b.any
    7db8:	add	x2, x0, x1
    7dbc:	ands	x3, x2, #0xf
    7dc0:	b.eq	7d6c <__hwasan_storeN_noabort@@Base+0x4>  // b.none
    7dc4:	ldrb	w4, [x6, x7]
    7dc8:	lsr	x5, x2, #56
    7dcc:	and	x2, x2, #0xfffffffffffffff0
    7dd0:	cmp	w4, w5
    7dd4:	b.eq	7d6c <__hwasan_storeN_noabort@@Base+0x4>  // b.none
    7dd8:	cmp	w4, #0xf
    7ddc:	b.hi	7df8 <__hwasan_storeN_noabort@@Base+0x90>  // b.pmore
    7de0:	cmp	x3, w4, uxtb
    7de4:	b.hi	7df8 <__hwasan_storeN_noabort@@Base+0x90>  // b.pmore
    7de8:	orr	x2, x2, #0xf
    7dec:	ldrb	w2, [x2]
    7df0:	cmp	w2, w5
    7df4:	b.eq	7d6c <__hwasan_storeN_noabort@@Base+0x4>  // b.none
    7df8:	brk	#0x93f
    7dfc:	ret
    7e00:	brk	#0x93f
    7e04:	b	7dac <__hwasan_storeN_noabort@@Base+0x44>

0000000000007e08 <__hwasan_store1_noabort@@Base>:
    7e08:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    7e0c:	ubfx	x3, x0, #4, #52
    7e10:	lsr	x2, x0, #56
    7e14:	ldr	x1, [x1, #3848]
    7e18:	ldr	x1, [x1]
    7e1c:	ldrb	w1, [x3, x1]
    7e20:	cmp	w1, w2
    7e24:	b.eq	7e50 <__hwasan_store1_noabort@@Base+0x48>  // b.none
    7e28:	cmp	w1, #0xf
    7e2c:	b.hi	7e54 <__hwasan_store1_noabort@@Base+0x4c>  // b.pmore
    7e30:	and	x3, x0, #0xf
    7e34:	add	x3, x3, #0x1
    7e38:	cmp	x3, w1, uxtb
    7e3c:	b.hi	7e54 <__hwasan_store1_noabort@@Base+0x4c>  // b.pmore
    7e40:	orr	x1, x0, #0xf
    7e44:	ldrb	w1, [x1]
    7e48:	cmp	w1, w2
    7e4c:	b.ne	7e54 <__hwasan_store1_noabort@@Base+0x4c>  // b.any
    7e50:	ret
    7e54:	brk	#0x930
    7e58:	ret
    7e5c:	nop

0000000000007e60 <__hwasan_store2_noabort@@Base>:
    7e60:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    7e64:	ubfx	x3, x0, #4, #52
    7e68:	lsr	x2, x0, #56
    7e6c:	ldr	x1, [x1, #3848]
    7e70:	ldr	x1, [x1]
    7e74:	ldrb	w1, [x3, x1]
    7e78:	cmp	w1, w2
    7e7c:	b.eq	7ea8 <__hwasan_store2_noabort@@Base+0x48>  // b.none
    7e80:	cmp	w1, #0xf
    7e84:	b.hi	7eac <__hwasan_store2_noabort@@Base+0x4c>  // b.pmore
    7e88:	and	x3, x0, #0xf
    7e8c:	add	x3, x3, #0x2
    7e90:	cmp	x3, w1, uxtb
    7e94:	b.hi	7eac <__hwasan_store2_noabort@@Base+0x4c>  // b.pmore
    7e98:	orr	x1, x0, #0xf
    7e9c:	ldrb	w1, [x1]
    7ea0:	cmp	w1, w2
    7ea4:	b.ne	7eac <__hwasan_store2_noabort@@Base+0x4c>  // b.any
    7ea8:	ret
    7eac:	brk	#0x931
    7eb0:	ret
    7eb4:	nop

0000000000007eb8 <__hwasan_store4_noabort@@Base>:
    7eb8:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    7ebc:	ubfx	x3, x0, #4, #52
    7ec0:	lsr	x2, x0, #56
    7ec4:	ldr	x1, [x1, #3848]
    7ec8:	ldr	x1, [x1]
    7ecc:	ldrb	w1, [x3, x1]
    7ed0:	cmp	w1, w2
    7ed4:	b.eq	7f00 <__hwasan_store4_noabort@@Base+0x48>  // b.none
    7ed8:	cmp	w1, #0xf
    7edc:	b.hi	7f04 <__hwasan_store4_noabort@@Base+0x4c>  // b.pmore
    7ee0:	and	x3, x0, #0xf
    7ee4:	add	x3, x3, #0x4
    7ee8:	cmp	x3, w1, uxtb
    7eec:	b.hi	7f04 <__hwasan_store4_noabort@@Base+0x4c>  // b.pmore
    7ef0:	orr	x1, x0, #0xf
    7ef4:	ldrb	w1, [x1]
    7ef8:	cmp	w1, w2
    7efc:	b.ne	7f04 <__hwasan_store4_noabort@@Base+0x4c>  // b.any
    7f00:	ret
    7f04:	brk	#0x932
    7f08:	ret
    7f0c:	nop

0000000000007f10 <__hwasan_store8_noabort@@Base>:
    7f10:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    7f14:	ubfx	x3, x0, #4, #52
    7f18:	lsr	x2, x0, #56
    7f1c:	ldr	x1, [x1, #3848]
    7f20:	ldr	x1, [x1]
    7f24:	ldrb	w1, [x3, x1]
    7f28:	cmp	w1, w2
    7f2c:	b.eq	7f58 <__hwasan_store8_noabort@@Base+0x48>  // b.none
    7f30:	cmp	w1, #0xf
    7f34:	b.hi	7f5c <__hwasan_store8_noabort@@Base+0x4c>  // b.pmore
    7f38:	and	x3, x0, #0xf
    7f3c:	add	x3, x3, #0x8
    7f40:	cmp	x3, w1, uxtb
    7f44:	b.hi	7f5c <__hwasan_store8_noabort@@Base+0x4c>  // b.pmore
    7f48:	orr	x1, x0, #0xf
    7f4c:	ldrb	w1, [x1]
    7f50:	cmp	w1, w2
    7f54:	b.ne	7f5c <__hwasan_store8_noabort@@Base+0x4c>  // b.any
    7f58:	ret
    7f5c:	brk	#0x933
    7f60:	ret
    7f64:	nop

0000000000007f68 <__hwasan_store16_noabort@@Base>:
    7f68:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    7f6c:	ubfx	x3, x0, #4, #52
    7f70:	lsr	x2, x0, #56
    7f74:	ldr	x1, [x1, #3848]
    7f78:	ldr	x1, [x1]
    7f7c:	ldrb	w1, [x3, x1]
    7f80:	cmp	w1, w2
    7f84:	b.eq	7f8c <__hwasan_store16_noabort@@Base+0x24>  // b.none
    7f88:	brk	#0x934
    7f8c:	ret

0000000000007f90 <__hwasan_tag_memory@@Base>:
    7f90:	mov	x3, x2
    7f94:	mov	w2, w1
    7f98:	mov	x1, x3
    7f9c:	b	ebb8 <__hwasan_memmove@@Base+0x130>

0000000000007fa0 <__hwasan_tag_pointer@@Base>:
    7fa0:	bfi	x0, x1, #56, #8
    7fa4:	ret

0000000000007fa8 <__hwasan_handle_longjmp@@Base>:
    7fa8:	stp	x29, x30, [sp, #-16]!
    7fac:	cmp	xzr, x0, lsr #56
    7fb0:	mov	x29, sp
    7fb4:	b.ne	7ffc <__hwasan_handle_longjmp@@Base+0x54>  // b.any
    7fb8:	mov	x2, x0
    7fbc:	cmp	x0, x29
    7fc0:	mov	x1, x29
    7fc4:	sub	x3, x0, x29
    7fc8:	b.cc	7fd8 <__hwasan_handle_longjmp@@Base+0x30>  // b.lo, b.ul, b.last
    7fcc:	mov	x0, #0x4000000             	// #67108864
    7fd0:	cmp	x3, x0
    7fd4:	b.ls	7fe8 <__hwasan_handle_longjmp@@Base+0x40>  // b.plast
    7fd8:	ldp	x29, x30, [sp], #16
    7fdc:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    7fe0:	add	x0, x0, #0xad0
    7fe4:	b	1fcb8 <__sanitizer_on_print@@Base+0x398>
    7fe8:	mov	x0, x29
    7fec:	mov	x1, x3
    7ff0:	ldp	x29, x30, [sp], #16
    7ff4:	mov	w2, #0x0                   	// #0
    7ff8:	b	ed00 <__hwasan_memmove@@Base+0x278>
    7ffc:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    8000:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    8004:	add	x2, x2, #0xaa8
    8008:	add	x0, x0, #0x230
    800c:	mov	x4, #0x0                   	// #0
    8010:	mov	x3, #0x0                   	// #0
    8014:	mov	w1, #0x228                 	// #552
    8018:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    801c:	nop

0000000000008020 <__hwasan_handle_vfork@@Base>:
    8020:	stp	x19, x30, [sp, #-16]!
    8024:	mov	x19, x0
    8028:	bl	e3f8 <__interceptor_vfork@@Base+0xe18>
    802c:	cbz	x0, 8074 <__hwasan_handle_vfork@@Base+0x54>
    8030:	ldp	x1, x3, [x0, #8]
    8034:	cmp	x1, #0x0
    8038:	ccmp	x3, #0x0, #0x4, ne  // ne = any
    803c:	b.eq	804c <__hwasan_handle_vfork@@Base+0x2c>  // b.none
    8040:	cmp	x19, x3
    8044:	ccmp	x19, x1, #0x2, cs  // cs = hs, nlast
    8048:	b.cc	8060 <__hwasan_handle_vfork@@Base+0x40>  // b.lo, b.ul, b.last
    804c:	mov	x2, x19
    8050:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    8054:	ldp	x19, x30, [sp], #16
    8058:	add	x0, x0, #0xb68
    805c:	b	1fcb8 <__sanitizer_on_print@@Base+0x398>
    8060:	sub	x1, x19, x3
    8064:	mov	x0, x3
    8068:	ldp	x19, x30, [sp], #16
    806c:	mov	w2, #0x0                   	// #0
    8070:	b	ed00 <__hwasan_memmove@@Base+0x278>
    8074:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    8078:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    807c:	add	x2, x2, #0x220
    8080:	add	x0, x0, #0x230
    8084:	mov	x4, #0x0                   	// #0
    8088:	mov	x3, #0x0                   	// #0
    808c:	mov	w1, #0x23a                 	// #570
    8090:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    8094:	nop
    8098:	str	x30, [sp, #-16]!
    809c:	bl	e3f8 <__interceptor_vfork@@Base+0xe18>
    80a0:	ldr	x30, [sp], #16
    80a4:	ret

00000000000080a8 <__hwasan_print_memory_usage@@Base>:
    80a8:	sub	sp, sp, #0x70
    80ac:	stp	x21, x22, [sp, #32]
    80b0:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    80b4:	stp	x19, x20, [sp, #16]
    80b8:	ldr	x19, [x21, #4016]
    80bc:	stp	x23, x30, [sp, #48]
    80c0:	str	xzr, [sp, #80]
    80c4:	ldr	x0, [x19]
    80c8:	stp	xzr, xzr, [sp, #88]
    80cc:	cbz	x0, 8234 <__hwasan_print_memory_usage@@Base+0x18c>
    80d0:	sub	x1, x0, #0x1
    80d4:	tst	x1, x0
    80d8:	b.ne	8298 <__hwasan_print_memory_usage@@Base+0x1f0>  // b.any
    80dc:	add	x20, x0, #0xfff
    80e0:	neg	x0, x0
    80e4:	and	x20, x20, x0
    80e8:	mov	w2, #0x0                   	// #0
    80ec:	mov	x0, x20
    80f0:	adrp	x22, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    80f4:	add	x1, x22, #0xc10
    80f8:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
    80fc:	ldr	x1, [sp, #80]
    8100:	mov	x19, x0
    8104:	ldr	x2, [sp, #96]
    8108:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
    810c:	ldp	x0, x1, [sp, #80]
    8110:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
    8114:	stp	x19, x20, [sp, #80]
    8118:	ldr	x2, [sp, #96]
    811c:	cmp	x2, #0xfff
    8120:	b.ls	8210 <__hwasan_print_memory_usage@@Base+0x168>  // b.plast
    8124:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    8128:	ldr	q0, [x0, #3456]
    812c:	str	q0, [sp, #96]
    8130:	strb	wzr, [x19]
    8134:	bl	11940 <__hwasan_tag_mismatch_v2@@Base+0x688>
    8138:	mov	x19, x0
    813c:	add	x0, x0, #0x48
    8140:	mov	w2, #0x1                   	// #1
    8144:	ldxrb	w1, [x0]
    8148:	stxrb	w3, w2, [x0]
    814c:	cbnz	w3, 8144 <__hwasan_print_memory_usage@@Base+0x9c>
    8150:	dmb	ish
    8154:	tst	w1, #0xff
    8158:	b.eq	8160 <__hwasan_print_memory_usage@@Base+0xb8>  // b.none
    815c:	bl	85d8 <__sanitizer_print_stack_trace@@Base+0x300>
    8160:	ldp	x22, x23, [x19, #56]
    8164:	dmb	ish
    8168:	strb	wzr, [x19, #72]
    816c:	bl	27120 <__sanitizer_cov_dump@@Base+0x500>
    8170:	mov	x20, x0
    8174:	add	x0, sp, #0x40
    8178:	bl	8810 <__sanitizer_print_stack_trace@@Base+0x538>
    817c:	bl	1c7f8 <__sanitizer_set_report_fd@@Base+0x4978>
    8180:	mov	x21, x0
    8184:	bl	24170 <__sanitizer_sandbox_on_notify@@Base+0xb28>
    8188:	mov	x3, x0
    818c:	adrp	x2, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28398>
    8190:	mov	w8, #0x18                  	// #24
    8194:	ldr	x1, [x19, #16]
    8198:	mov	x5, x23
    819c:	ldr	w7, [x2, #3308]
    81a0:	mov	x4, x22
    81a4:	add	x1, x1, #0xa80
    81a8:	mov	x2, x21
    81ac:	cmp	w7, #0x0
    81b0:	ldr	x0, [sp, #72]
    81b4:	smaddl	x8, w7, w8, x1
    81b8:	ldr	x7, [x20, #8]
    81bc:	add	x8, x8, #0x10
    81c0:	csel	x1, x8, x1, ne  // ne = any
    81c4:	str	x0, [sp, #8]
    81c8:	ldr	x0, [x20]
    81cc:	mul	x6, x1, x22
    81d0:	str	x0, [sp]
    81d4:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    81d8:	add	x0, sp, #0x50
    81dc:	add	x1, x1, #0xc28
    81e0:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
    81e4:	ldr	x1, [sp, #80]
    81e8:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
    81ec:	add	x0, x0, #0x7f0
    81f0:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    81f4:	ldp	x0, x1, [sp, #80]
    81f8:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
    81fc:	ldp	x19, x20, [sp, #16]
    8200:	ldp	x21, x22, [sp, #32]
    8204:	ldp	x23, x30, [sp, #48]
    8208:	add	sp, sp, #0x70
    820c:	ret
    8210:	cmp	x20, #0xfff
    8214:	b.ls	8240 <__hwasan_print_memory_usage@@Base+0x198>  // b.plast
    8218:	mov	x3, #0x1000                	// #4096
    821c:	add	x0, x19, x2
    8220:	mov	w1, #0x0                   	// #0
    8224:	sub	x2, x3, x2
    8228:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
    822c:	ldr	x19, [sp, #80]
    8230:	b	8124 <__hwasan_print_memory_usage@@Base+0x7c>
    8234:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
    8238:	str	x0, [x19]
    823c:	b	80d0 <__hwasan_print_memory_usage@@Base+0x28>
    8240:	ldr	x21, [x21, #4016]
    8244:	ldr	x0, [x21]
    8248:	cbz	x0, 82a8 <__hwasan_print_memory_usage@@Base+0x200>
    824c:	sub	x1, x0, #0x1
    8250:	tst	x1, x0
    8254:	b.ne	8298 <__hwasan_print_memory_usage@@Base+0x1f0>  // b.any
    8258:	add	x20, x0, #0xfff
    825c:	neg	x0, x0
    8260:	and	x20, x20, x0
    8264:	add	x1, x22, #0xc10
    8268:	mov	w2, #0x0                   	// #0
    826c:	mov	x0, x20
    8270:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
    8274:	mov	x19, x0
    8278:	ldr	x1, [sp, #80]
    827c:	ldr	x2, [sp, #96]
    8280:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
    8284:	ldp	x0, x1, [sp, #80]
    8288:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
    828c:	stp	x19, x20, [sp, #80]
    8290:	ldr	x2, [sp, #96]
    8294:	b	8218 <__hwasan_print_memory_usage@@Base+0x170>
    8298:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    829c:	add	x0, x0, #0xbf8
    82a0:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
    82a4:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
    82a8:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
    82ac:	str	x0, [x21]
    82b0:	b	824c <__hwasan_print_memory_usage@@Base+0x1a4>
    82b4:	nop

00000000000082b8 <__hwasan_generate_tag@@Base>:
    82b8:	str	x30, [sp, #-16]!
    82bc:	bl	e3f8 <__interceptor_vfork@@Base+0xe18>
    82c0:	cbz	x0, 82cc <__hwasan_generate_tag@@Base+0x14>
    82c4:	ldr	x30, [sp], #16
    82c8:	b	11898 <__hwasan_tag_mismatch_v2@@Base+0x5e0>
    82cc:	mov	w0, #0xffffffbb            	// #-69
    82d0:	ldr	x30, [sp], #16
    82d4:	ret

00000000000082d8 <__sanitizer_print_stack_trace@@Base>:
    82d8:	sub	sp, sp, #0x840
    82dc:	adrp	x0, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28398>
    82e0:	stp	x29, x30, [sp]
    82e4:	mov	x29, sp
    82e8:	ldr	w0, [x0, #3348]
    82ec:	str	x19, [sp, #16]
    82f0:	add	x19, x29, #0x28
    82f4:	add	x1, x19, #0x10
    82f8:	str	x1, [x29, #40]
    82fc:	str	xzr, [x29, #48]
    8300:	str	xzr, [x29, #2104]
    8304:	cbnz	w0, 8320 <__sanitizer_print_stack_trace@@Base+0x48>
    8308:	mov	x0, x19
    830c:	bl	27f58 <__sanitizer_cov_dump@@Base+0x1338>
    8310:	ldp	x29, x30, [sp]
    8314:	ldr	x19, [sp, #16]
    8318:	add	sp, sp, #0x840
    831c:	ret
    8320:	bl	27c78 <__sanitizer_cov_dump@@Base+0x1058>
    8324:	mov	x1, x0
    8328:	adrp	x4, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    832c:	mov	x2, x29
    8330:	mov	w5, #0x100                 	// #256
    8334:	mov	x3, #0x0                   	// #0
    8338:	ldr	x4, [x4, #4056]
    833c:	mov	x0, x19
    8340:	str	x29, [x29, #2104]
    8344:	ldrb	w4, [x4, #33]
    8348:	bl	7238 <__sanitizer_print_memory_profile@plt+0xbd8>
    834c:	mov	x0, x19
    8350:	bl	27f58 <__sanitizer_cov_dump@@Base+0x1338>
    8354:	ldp	x29, x30, [sp]
    8358:	ldr	x19, [sp, #16]
    835c:	add	sp, sp, #0x840
    8360:	ret
    8364:	nop
    8368:	mov	x3, x0
    836c:	stp	x19, x30, [sp, #-16]!
    8370:	mov	x19, x2
    8374:	mov	x0, x1
    8378:	mov	x1, x2
    837c:	ldr	x3, [x3, #8]
    8380:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    8384:	add	x2, x2, #0xc98
    8388:	ldr	w3, [x3]
    838c:	bl	1f928 <__sanitizer_on_print@@Base+0x8>
    8390:	cmp	x19, w0, sxtw
    8394:	cset	w0, hi  // hi = pmore
    8398:	ldp	x19, x30, [sp], #16
    839c:	ret
    83a0:	mov	x3, x0
    83a4:	stp	x19, x30, [sp, #-16]!
    83a8:	mov	x19, x2
    83ac:	mov	x0, x1
    83b0:	mov	x1, x2
    83b4:	ldr	x3, [x3, #8]
    83b8:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    83bc:	add	x2, x2, #0xca0
    83c0:	ldr	x3, [x3]
    83c4:	bl	1f928 <__sanitizer_on_print@@Base+0x8>
    83c8:	cmp	x19, w0, sxtw
    83cc:	cset	w0, hi  // hi = pmore
    83d0:	ldp	x19, x30, [sp], #16
    83d4:	ret
    83d8:	stp	x19, x30, [sp, #-16]!
    83dc:	adrp	x4, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    83e0:	add	x4, x4, #0xcb0
    83e4:	ldr	x5, [x0, #8]
    83e8:	mov	x19, x2
    83ec:	adrp	x3, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    83f0:	add	x3, x3, #0xca8
    83f4:	mov	x0, x1
    83f8:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    83fc:	ldrb	w5, [x5]
    8400:	mov	x1, x19
    8404:	add	x2, x2, #0xcb8
    8408:	cmp	w5, #0x0
    840c:	csel	x3, x3, x4, ne  // ne = any
    8410:	bl	1f928 <__sanitizer_on_print@@Base+0x8>
    8414:	cmp	x19, w0, sxtw
    8418:	cset	w0, hi  // hi = pmore
    841c:	ldp	x19, x30, [sp], #16
    8420:	ret
    8424:	nop
    8428:	stp	x19, x20, [sp, #-48]!
    842c:	mov	x20, x0
    8430:	mov	w2, #0xa                   	// #10
    8434:	mov	x0, x1
    8438:	mov	x19, x1
    843c:	add	x1, sp, #0x28
    8440:	str	x30, [sp, #16]
    8444:	bl	1b610 <__sanitizer_set_report_fd@@Base+0x3790>
    8448:	ldr	x2, [x20, #8]
    844c:	ldr	x1, [sp, #40]
    8450:	str	w0, [x2]
    8454:	ldrb	w0, [x1]
    8458:	cmp	w0, #0x0
    845c:	cset	w20, eq  // eq = none
    8460:	cbnz	w0, 8474 <__sanitizer_print_stack_trace@@Base+0x19c>
    8464:	mov	w0, w20
    8468:	ldr	x30, [sp, #16]
    846c:	ldp	x19, x20, [sp], #48
    8470:	ret
    8474:	mov	x1, x19
    8478:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    847c:	add	x0, x0, #0xcc0
    8480:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    8484:	mov	w0, w20
    8488:	ldr	x30, [sp, #16]
    848c:	ldp	x19, x20, [sp], #48
    8490:	ret
    8494:	nop
    8498:	stp	x19, x20, [sp, #-48]!
    849c:	mov	x20, x0
    84a0:	mov	w2, #0xa                   	// #10
    84a4:	mov	x0, x1
    84a8:	mov	x19, x1
    84ac:	add	x1, sp, #0x28
    84b0:	str	x30, [sp, #16]
    84b4:	bl	1b610 <__sanitizer_set_report_fd@@Base+0x3790>
    84b8:	ldr	x2, [x20, #8]
    84bc:	ldr	x1, [sp, #40]
    84c0:	str	x0, [x2]
    84c4:	ldrb	w0, [x1]
    84c8:	cmp	w0, #0x0
    84cc:	cset	w20, eq  // eq = none
    84d0:	cbnz	w0, 84e4 <__sanitizer_print_stack_trace@@Base+0x20c>
    84d4:	mov	w0, w20
    84d8:	ldr	x30, [sp, #16]
    84dc:	ldp	x19, x20, [sp], #48
    84e0:	ret
    84e4:	mov	x1, x19
    84e8:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    84ec:	add	x0, x0, #0xcf0
    84f0:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    84f4:	mov	w0, w20
    84f8:	ldr	x30, [sp, #16]
    84fc:	ldp	x19, x20, [sp], #48
    8500:	ret
    8504:	nop
    8508:	mov	x2, x0
    850c:	stp	x19, x20, [sp, #-32]!
    8510:	mov	x19, x1
    8514:	mov	x0, x19
    8518:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    851c:	add	x1, x1, #0xd20
    8520:	ldr	x20, [x2, #8]
    8524:	str	x30, [sp, #16]
    8528:	bl	1a560 <__sanitizer_set_report_fd@@Base+0x26e0>
    852c:	cbnz	w0, 8544 <__sanitizer_print_stack_trace@@Base+0x26c>
    8530:	mov	w0, #0x1                   	// #1
    8534:	strb	wzr, [x20]
    8538:	ldr	x30, [sp, #16]
    853c:	ldp	x19, x20, [sp], #32
    8540:	ret
    8544:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    8548:	mov	x0, x19
    854c:	add	x1, x1, #0xd28
    8550:	bl	1a560 <__sanitizer_set_report_fd@@Base+0x26e0>
    8554:	cbz	w0, 8530 <__sanitizer_print_stack_trace@@Base+0x258>
    8558:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    855c:	mov	x0, x19
    8560:	add	x1, x1, #0xcb0
    8564:	bl	1a560 <__sanitizer_set_report_fd@@Base+0x26e0>
    8568:	cbz	w0, 8530 <__sanitizer_print_stack_trace@@Base+0x258>
    856c:	adrp	x1, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb398>
    8570:	mov	x0, x19
    8574:	add	x1, x1, #0x400
    8578:	bl	1a560 <__sanitizer_set_report_fd@@Base+0x26e0>
    857c:	cbz	w0, 8594 <__sanitizer_print_stack_trace@@Base+0x2bc>
    8580:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    8584:	mov	x0, x19
    8588:	add	x1, x1, #0xd30
    858c:	bl	1a560 <__sanitizer_set_report_fd@@Base+0x26e0>
    8590:	cbnz	w0, 85a4 <__sanitizer_print_stack_trace@@Base+0x2cc>
    8594:	mov	w1, #0x1                   	// #1
    8598:	mov	w0, #0x1                   	// #1
    859c:	strb	w1, [x20]
    85a0:	b	8538 <__sanitizer_print_stack_trace@@Base+0x260>
    85a4:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    85a8:	mov	x0, x19
    85ac:	add	x1, x1, #0xca8
    85b0:	bl	1a560 <__sanitizer_set_report_fd@@Base+0x26e0>
    85b4:	cbz	w0, 8594 <__sanitizer_print_stack_trace@@Base+0x2bc>
    85b8:	mov	x1, x19
    85bc:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    85c0:	add	x0, x0, #0xd38
    85c4:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    85c8:	mov	w0, #0x0                   	// #0
    85cc:	ldr	x30, [sp, #16]
    85d0:	ldp	x19, x20, [sp], #32
    85d4:	ret
    85d8:	stp	x19, x20, [sp, #-32]!
    85dc:	mov	x20, x0
    85e0:	mov	w19, #0x0                   	// #0
    85e4:	stp	x21, x30, [sp, #16]
    85e8:	mov	w21, #0x1                   	// #1
    85ec:	nop
    85f0:	cmp	w19, #0x9
    85f4:	b.gt	8630 <__sanitizer_print_stack_trace@@Base+0x358>
    85f8:	ldrb	w0, [x20]
    85fc:	tst	w0, #0xff
    8600:	b.ne	861c <__sanitizer_print_stack_trace@@Base+0x344>  // b.any
    8604:	ldxrb	w0, [x20]
    8608:	stxrb	w1, w21, [x20]
    860c:	cbnz	w1, 8604 <__sanitizer_print_stack_trace@@Base+0x32c>
    8610:	dmb	ish
    8614:	tst	w0, #0xff
    8618:	b.eq	8624 <__sanitizer_print_stack_trace@@Base+0x34c>  // b.none
    861c:	add	w19, w19, #0x1
    8620:	b	85f0 <__sanitizer_print_stack_trace@@Base+0x318>
    8624:	ldp	x21, x30, [sp, #16]
    8628:	ldp	x19, x20, [sp], #32
    862c:	ret
    8630:	bl	1c390 <__sanitizer_set_report_fd@@Base+0x4510>
    8634:	b	85f8 <__sanitizer_print_stack_trace@@Base+0x320>
    8638:	ldr	x1, [x0, #8]
    863c:	mov	w0, #0x0                   	// #0
    8640:	cbz	x1, 865c <__sanitizer_print_stack_trace@@Base+0x384>
    8644:	ldr	w2, [x1, #4]
    8648:	mov	w0, #0x0                   	// #0
    864c:	cbz	w2, 865c <__sanitizer_print_stack_trace@@Base+0x384>
    8650:	ldr	w0, [x1]
    8654:	tst	x0, #0x7fffffff
    8658:	cset	w0, ne  // ne = any
    865c:	ret
    8660:	ldr	x1, [x0, #8]
    8664:	ldr	x0, [x0]
    8668:	cbz	x1, 8674 <__sanitizer_print_stack_trace@@Base+0x39c>
    866c:	ldrsb	w2, [x1, #3]
    8670:	tbnz	w2, #31, 8678 <__sanitizer_print_stack_trace@@Base+0x3a0>
    8674:	ret
    8678:	ldr	w2, [x1]
    867c:	add	x1, x0, #0x10
    8680:	and	x3, x2, #0xf
    8684:	tst	x2, #0xf
    8688:	sub	x1, x1, x3
    868c:	csel	x0, x1, x0, ne  // ne = any
    8690:	ret
    8694:	nop
    8698:	ldr	x1, [x0, #8]
    869c:	ldr	x0, [x0]
    86a0:	ldrsb	w2, [x1, #3]
    86a4:	ldr	w1, [x1]
    86a8:	ubfx	x1, x1, #0, #31
    86ac:	tbnz	w2, #31, 86bc <__sanitizer_print_stack_trace@@Base+0x3e4>
    86b0:	mov	w1, w1
    86b4:	add	x0, x1, x0
    86b8:	ret
    86bc:	add	x3, x0, #0x10
    86c0:	and	x2, x1, #0xf
    86c4:	tst	x1, #0xf
    86c8:	sub	x2, x3, x2
    86cc:	csel	x0, x2, x0, ne  // ne = any
    86d0:	mov	w1, w1
    86d4:	add	x0, x1, x0
    86d8:	ret
    86dc:	nop
    86e0:	ldr	x0, [x0, #8]
    86e4:	ldr	w0, [x0]
    86e8:	and	x0, x0, #0x7fffffff
    86ec:	ret
    86f0:	ldr	x0, [x0, #8]
    86f4:	ldr	w0, [x0, #4]
    86f8:	ret
    86fc:	nop
    8700:	adrp	x2, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28398>
    8704:	add	x3, x2, #0xd30
    8708:	ldr	x1, [x0]
    870c:	ldr	x0, [x3, #32]
    8710:	cmp	x1, x0
    8714:	b.cc	8728 <__sanitizer_print_stack_trace@@Base+0x450>  // b.lo, b.ul, b.last
    8718:	mov	x3, #0x2000000000          	// #137438953472
    871c:	add	x3, x0, x3
    8720:	cmp	x1, x3
    8724:	b.cc	8764 <__sanitizer_print_stack_trace@@Base+0x48c>  // b.lo, b.ul, b.last
    8728:	add	x2, x2, #0xd30
    872c:	str	x30, [sp, #-16]!
    8730:	ldr	x2, [x2, #48]
    8734:	sub	x3, x2, #0x1
    8738:	tst	x1, x3
    873c:	b.ne	87a4 <__sanitizer_print_stack_trace@@Base+0x4cc>  // b.any
    8740:	sub	x1, x1, x2
    8744:	neg	x4, x2
    8748:	tst	x2, x3
    874c:	ldr	x0, [x1, #16]
    8750:	add	x0, x0, x3
    8754:	and	x0, x0, x4
    8758:	b.ne	87c4 <__sanitizer_print_stack_trace@@Base+0x4ec>  // b.any
    875c:	ldr	x30, [sp], #16
    8760:	ret
    8764:	sub	x0, x1, x0
    8768:	ubfx	x0, x0, #32, #5
    876c:	cmp	x0, #0x1f
    8770:	b.eq	87d4 <__sanitizer_print_stack_trace@@Base+0x4fc>  // b.none
    8774:	cmp	x0, #0x10
    8778:	b.ls	879c <__sanitizer_print_stack_trace@@Base+0x4c4>  // b.plast
    877c:	sub	x0, x0, #0x10
    8780:	mov	x1, #0x200                 	// #512
    8784:	and	x2, x0, #0x1
    8788:	lsr	x0, x0, #1
    878c:	lsl	x1, x1, x0
    8790:	lsr	x0, x1, #1
    8794:	madd	x0, x0, x2, x1
    8798:	ret
    879c:	lsl	x0, x0, #5
    87a0:	ret
    87a4:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    87a8:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    87ac:	add	x2, x2, #0xd90
    87b0:	add	x0, x0, #0xdb8
    87b4:	mov	x4, #0x0                   	// #0
    87b8:	mov	x3, #0x0                   	// #0
    87bc:	mov	w1, #0x12d                 	// #301
    87c0:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    87c4:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    87c8:	add	x0, x0, #0xbf8
    87cc:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
    87d0:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
    87d4:	mov	x0, #0x40                  	// #64
    87d8:	ret
    87dc:	nop
    87e0:	adrp	x1, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28398>
    87e4:	ldr	x0, [x0]
    87e8:	ldr	x1, [x1, #3408]
    87ec:	cmp	x0, x1
    87f0:	b.cc	8808 <__sanitizer_print_stack_trace@@Base+0x530>  // b.lo, b.ul, b.last
    87f4:	mov	x2, #0x2000000000          	// #137438953472
    87f8:	add	x1, x1, x2
    87fc:	cmp	x0, x1
    8800:	cset	w0, cc  // cc = lo, ul, last
    8804:	ret
    8808:	mov	w0, #0x0                   	// #0
    880c:	ret
    8810:	stp	x19, x20, [sp, #-32]!
    8814:	mov	x2, #0x10                  	// #16
    8818:	mov	x19, x0
    881c:	mov	w1, #0x0                   	// #0
    8820:	str	x30, [sp, #16]
    8824:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
    8828:	adrp	x20, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28398>
    882c:	add	x0, x20, #0xd30
    8830:	mov	w2, #0x1                   	// #1
    8834:	add	x0, x0, #0x2c0
    8838:	ldxrb	w1, [x0]
    883c:	stxrb	w3, w2, [x0]
    8840:	cbnz	w3, 8838 <__sanitizer_print_stack_trace@@Base+0x560>
    8844:	dmb	ish
    8848:	tst	w1, #0xff
    884c:	b.eq	8854 <__sanitizer_print_stack_trace@@Base+0x57c>  // b.none
    8850:	bl	85d8 <__sanitizer_print_stack_trace@@Base+0x300>
    8854:	ldp	x1, x0, [x19]
    8858:	add	x20, x20, #0xd30
    885c:	add	x2, x20, #0x2a0
    8860:	mov	x3, x2
    8864:	nop
    8868:	ldr	x4, [x2, #16]
    886c:	add	x1, x1, x4
    8870:	str	x1, [x19]
    8874:	ldr	x4, [x2, #24]
    8878:	ldr	x2, [x2]
    887c:	add	x0, x0, x4
    8880:	str	x0, [x19, #8]
    8884:	cmp	x2, x3
    8888:	b.ne	8868 <__sanitizer_print_stack_trace@@Base+0x590>  // b.any
    888c:	cmp	x1, #0x0
    8890:	csel	x1, x1, xzr, ge  // ge = tcont
    8894:	cmp	x0, #0x0
    8898:	csel	x0, x0, xzr, ge  // ge = tcont
    889c:	stp	x1, x0, [x19]
    88a0:	dmb	ish
    88a4:	strb	wzr, [x20, #704]
    88a8:	ldr	x30, [sp, #16]
    88ac:	ldp	x19, x20, [sp], #32
    88b0:	ret
    88b4:	nop
    88b8:	stp	x19, x20, [sp, #-64]!
    88bc:	adrp	x19, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28398>
    88c0:	add	x20, x19, #0xd30
    88c4:	stp	x21, x22, [sp, #16]
    88c8:	adrp	x22, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    88cc:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    88d0:	stp	x23, x24, [sp, #32]
    88d4:	add	x23, x20, #0x2a0
    88d8:	str	x30, [sp, #48]
    88dc:	bl	71d8 <__sanitizer_print_memory_profile@plt+0xb78>
    88e0:	ldr	x22, [x22, #4056]
    88e4:	ldrb	w1, [x0, #6]
    88e8:	ldrb	w0, [x22, #59]
    88ec:	eor	w1, w1, #0x1
    88f0:	strb	w1, [x20, #712]
    88f4:	bl	121a0 <_ZdaPvRKSt9nothrow_t@@Base+0x420>
    88f8:	ldr	w22, [x22, #164]
    88fc:	mov	x0, x23
    8900:	mov	x2, #0x28                  	// #40
    8904:	mov	w1, #0x0                   	// #0
    8908:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
    890c:	ldr	x24, [x21, #4016]
    8910:	str	x23, [x20, #672]
    8914:	str	x23, [x20, #680]
    8918:	ldr	x0, [x24]
    891c:	cbz	x0, 8a50 <__sanitizer_print_stack_trace@@Base+0x778>
    8920:	sub	x1, x0, #0x1
    8924:	tst	x1, x0
    8928:	b.ne	8a68 <__sanitizer_print_stack_trace@@Base+0x790>  // b.any
    892c:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    8930:	add	x23, x19, #0xd30
    8934:	mov	x3, #0x17ff                	// #6143
    8938:	add	x1, x0, x3
    893c:	ldr	x2, [x2, #3776]
    8940:	neg	x0, x0
    8944:	and	x1, x1, x0
    8948:	mov	x20, #0x2000000000          	// #137438953472
    894c:	mov	x0, x23
    8950:	add	x1, x1, x20
    8954:	ldr	x2, [x2]
    8958:	mov	x3, #0x0                   	// #0
    895c:	bl	24ee0 <__sanitizer_sandbox_on_notify@@Base+0x1898>
    8960:	str	x0, [x23, #32]
    8964:	mov	x4, x0
    8968:	cmn	x0, #0x1
    896c:	b.eq	8a84 <__sanitizer_print_stack_trace@@Base+0x7ac>  // b.none
    8970:	ldr	x24, [x21, #4016]
    8974:	add	x20, x0, x20
    8978:	str	w22, [x23, #40]
    897c:	ldr	x0, [x24]
    8980:	cbz	x0, 8a78 <__sanitizer_print_stack_trace@@Base+0x7a0>
    8984:	sub	x1, x0, #0x1
    8988:	tst	x1, x0
    898c:	b.ne	8a68 <__sanitizer_print_stack_trace@@Base+0x790>  // b.any
    8990:	mov	x1, #0x17ff                	// #6143
    8994:	add	x22, x19, #0xd30
    8998:	add	x2, x0, x1
    899c:	neg	x0, x0
    89a0:	and	x2, x2, x0
    89a4:	mov	x1, x20
    89a8:	mov	x0, x22
    89ac:	adrp	x3, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    89b0:	add	x3, x3, #0xeb0
    89b4:	bl	24f60 <__sanitizer_sandbox_on_notify@@Base+0x1918>
    89b8:	cmp	x20, x0
    89bc:	b.ne	8aa0 <__sanitizer_print_stack_trace@@Base+0x7c8>  // b.any
    89c0:	bl	7230 <__sanitizer_print_memory_profile@plt+0xbd0>
    89c4:	mov	x2, #0x270                 	// #624
    89c8:	add	x0, x22, #0x30
    89cc:	mov	w1, #0x0                   	// #0
    89d0:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
    89d4:	ldr	x21, [x21, #4016]
    89d8:	ldr	x2, [x21]
    89dc:	cbz	x2, 8a40 <__sanitizer_print_stack_trace@@Base+0x768>
    89e0:	adrp	x4, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    89e4:	add	x21, x19, #0xd30
    89e8:	add	x0, x21, #0x40
    89ec:	mov	x3, #0x0                   	// #0
    89f0:	ldr	x4, [x4, #3944]
    89f4:	str	x2, [x21, #48]
    89f8:	mov	x1, #0x800000              	// #8388608
    89fc:	ldr	x2, [x4]
    8a00:	bl	24ee0 <__sanitizer_sandbox_on_notify@@Base+0x1898>
    8a04:	cbz	x0, 8ac0 <__sanitizer_print_stack_trace@@Base+0x7e8>
    8a08:	add	x19, x21, #0x2d0
    8a0c:	add	x20, x21, #0x2df
    8a10:	str	x0, [x21, #56]
    8a14:	nop
    8a18:	bl	e3f8 <__interceptor_vfork@@Base+0xe18>
    8a1c:	bl	11898 <__hwasan_tag_mismatch_v2@@Base+0x5e0>
    8a20:	strb	w0, [x19], #1
    8a24:	cmp	x20, x19
    8a28:	b.ne	8a18 <__sanitizer_print_stack_trace@@Base+0x740>  // b.any
    8a2c:	ldp	x21, x22, [sp, #16]
    8a30:	ldp	x23, x24, [sp, #32]
    8a34:	ldr	x30, [sp, #48]
    8a38:	ldp	x19, x20, [sp], #64
    8a3c:	ret
    8a40:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
    8a44:	mov	x2, x0
    8a48:	str	x0, [x21]
    8a4c:	b	89e0 <__sanitizer_print_stack_trace@@Base+0x708>
    8a50:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
    8a54:	str	x0, [x24]
    8a58:	sub	x1, x0, #0x1
    8a5c:	tst	x1, x0
    8a60:	b.eq	892c <__sanitizer_print_stack_trace@@Base+0x654>  // b.none
    8a64:	nop
    8a68:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    8a6c:	add	x0, x0, #0xbf8
    8a70:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
    8a74:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
    8a78:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
    8a7c:	str	x0, [x24]
    8a80:	b	8984 <__sanitizer_print_stack_trace@@Base+0x6ac>
    8a84:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    8a88:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    8a8c:	add	x2, x2, #0xe20
    8a90:	add	x0, x0, #0xe48
    8a94:	mov	x3, x4
    8a98:	mov	w1, #0x50                  	// #80
    8a9c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    8aa0:	mov	x4, x0
    8aa4:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    8aa8:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    8aac:	mov	x3, x20
    8ab0:	add	x2, x2, #0xed0
    8ab4:	add	x0, x0, #0xe48
    8ab8:	mov	w1, #0x287                 	// #647
    8abc:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    8ac0:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    8ac4:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    8ac8:	add	x2, x2, #0xf08
    8acc:	add	x0, x0, #0xdb8
    8ad0:	mov	x4, #0x0                   	// #0
    8ad4:	mov	x3, #0x0                   	// #0
    8ad8:	mov	w1, #0x25                  	// #37
    8adc:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    8ae0:	stp	x19, x20, [sp, #-32]!
    8ae4:	adrp	x20, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28398>
    8ae8:	add	x1, x20, #0xd30
    8aec:	mov	x19, x0
    8af0:	ldr	x2, [x1, #32]
    8af4:	str	x30, [sp, #16]
    8af8:	cmp	x0, x2
    8afc:	b.cc	8b10 <__sanitizer_print_stack_trace@@Base+0x838>  // b.lo, b.ul, b.last
    8b00:	mov	x0, #0x2000000000          	// #137438953472
    8b04:	add	x1, x2, x0
    8b08:	cmp	x19, x1
    8b0c:	b.cc	8c50 <__sanitizer_print_stack_trace@@Base+0x978>  // b.lo, b.ul, b.last
    8b10:	add	x0, x20, #0xd30
    8b14:	mov	w2, #0x1                   	// #1
    8b18:	add	x0, x0, #0x298
    8b1c:	ldxrb	w1, [x0]
    8b20:	stxrb	w3, w2, [x0]
    8b24:	cbnz	w3, 8b1c <__sanitizer_print_stack_trace@@Base+0x844>
    8b28:	dmb	ish
    8b2c:	tst	w1, #0xff
    8b30:	b.eq	8b38 <__sanitizer_print_stack_trace@@Base+0x860>  // b.none
    8b34:	bl	85d8 <__sanitizer_print_stack_trace@@Base+0x300>
    8b38:	add	x0, x20, #0xd30
    8b3c:	ldr	x1, [x0, #104]
    8b40:	ldr	x0, [x0, #56]
    8b44:	cbz	x1, 8d04 <__sanitizer_print_stack_trace@@Base+0xa2c>
    8b48:	add	x2, x0, x1, lsl #3
    8b4c:	mov	x3, #0x0                   	// #0
    8b50:	ldr	x1, [x0]
    8b54:	cmp	x19, x1
    8b58:	b.cc	8b6c <__sanitizer_print_stack_trace@@Base+0x894>  // b.lo, b.ul, b.last
    8b5c:	sub	x5, x19, x3
    8b60:	sub	x4, x19, x1
    8b64:	cmp	x5, x4
    8b68:	csel	x3, x3, x1, ls  // ls = plast
    8b6c:	add	x0, x0, #0x8
    8b70:	cmp	x0, x2
    8b74:	b.ne	8b50 <__sanitizer_print_stack_trace@@Base+0x878>  // b.any
    8b78:	cbz	x3, 8d04 <__sanitizer_print_stack_trace@@Base+0xa2c>
    8b7c:	ldr	x4, [x3]
    8b80:	cmp	x4, x3
    8b84:	b.hi	8d4c <__sanitizer_print_stack_trace@@Base+0xa74>  // b.pmore
    8b88:	ldr	x0, [x3, #8]
    8b8c:	add	x4, x4, x0
    8b90:	cmp	x4, x3
    8b94:	b.ls	8d64 <__sanitizer_print_stack_trace@@Base+0xa8c>  // b.plast
    8b98:	cmp	x19, x3
    8b9c:	b.cc	8d30 <__sanitizer_print_stack_trace@@Base+0xa58>  // b.lo, b.ul, b.last
    8ba0:	cmp	x19, x4
    8ba4:	b.cs	8d04 <__sanitizer_print_stack_trace@@Base+0xa2c>  // b.hs, b.nlast
    8ba8:	add	x1, x20, #0xd30
    8bac:	ldr	x19, [x1, #48]
    8bb0:	sub	x0, x19, #0x1
    8bb4:	tst	x0, x3
    8bb8:	b.ne	8d9c <__sanitizer_print_stack_trace@@Base+0xac4>  // b.any
    8bbc:	add	x19, x19, x3
    8bc0:	dmb	ish
    8bc4:	strb	wzr, [x1, #664]
    8bc8:	cbz	x19, 8d10 <__sanitizer_print_stack_trace@@Base+0xa38>
    8bcc:	add	x0, x20, #0xd30
    8bd0:	mov	x1, #0xe0000000            	// #3758096384
    8bd4:	ldr	x0, [x0, #32]
    8bd8:	cmp	x0, x19
    8bdc:	add	x2, x0, x1
    8be0:	b.hi	8cb8 <__sanitizer_print_stack_trace@@Base+0x9e0>  // b.pmore
    8be4:	mov	x1, #0x2000000000          	// #137438953472
    8be8:	add	x1, x0, x1
    8bec:	cmp	x1, x19
    8bf0:	b.ls	8cb8 <__sanitizer_print_stack_trace@@Base+0x9e0>  // b.plast
    8bf4:	sub	x0, x19, x0
    8bf8:	ubfx	x1, x0, #32, #5
    8bfc:	cmp	x1, #0x1f
    8c00:	b.eq	8dc8 <__sanitizer_print_stack_trace@@Base+0xaf0>  // b.none
    8c04:	lsl	w3, w1, #5
    8c08:	cmp	x1, #0x10
    8c0c:	b.ls	8c2c <__sanitizer_print_stack_trace@@Base+0x954>  // b.plast
    8c10:	sub	x3, x1, #0x10
    8c14:	mov	x4, #0x200                 	// #512
    8c18:	and	x5, x3, #0x1
    8c1c:	lsr	x3, x3, #1
    8c20:	lsl	x4, x4, x3
    8c24:	lsr	x3, x4, #1
    8c28:	madd	w3, w3, w5, w4
    8c2c:	udiv	w0, w0, w3
    8c30:	lsl	x3, x1, #32
    8c34:	add	x1, x0, #0x1
    8c38:	sub	x1, x3, x1, lsl #3
    8c3c:	add	x1, x1, x2
    8c40:	mov	x0, x19
    8c44:	ldr	x30, [sp, #16]
    8c48:	ldp	x19, x20, [sp], #32
    8c4c:	ret
    8c50:	sub	x19, x19, x2
    8c54:	ubfx	x0, x19, #32, #5
    8c58:	cmp	x0, #0x1f
    8c5c:	b.eq	8dbc <__sanitizer_print_stack_trace@@Base+0xae4>  // b.none
    8c60:	cmp	x0, #0x10
    8c64:	b.ls	8d24 <__sanitizer_print_stack_trace@@Base+0xa4c>  // b.plast
    8c68:	sub	x3, x0, #0x10
    8c6c:	mov	x4, #0x200                 	// #512
    8c70:	and	x5, x3, #0x1
    8c74:	lsr	x3, x3, #1
    8c78:	lsl	x3, x4, x3
    8c7c:	lsr	x4, x3, #1
    8c80:	madd	x4, x4, x5, x3
    8c84:	mov	w3, w4
    8c88:	udiv	w3, w19, w3
    8c8c:	add	x0, x0, x0, lsl #1
    8c90:	add	x0, x1, x0, lsl #6
    8c94:	mul	x3, x3, x4
    8c98:	ldr	x0, [x0, #120]
    8c9c:	add	x4, x4, x3
    8ca0:	cmp	x4, x0
    8ca4:	b.hi	8d10 <__sanitizer_print_stack_trace@@Base+0xa38>  // b.pmore
    8ca8:	and	x19, x19, #0xffffffff00000000
    8cac:	add	x19, x19, x2
    8cb0:	add	x19, x19, x3
    8cb4:	b	8bc8 <__sanitizer_print_stack_trace@@Base+0x8f0>
    8cb8:	add	x20, x20, #0xd30
    8cbc:	ldr	x1, [x20, #48]
    8cc0:	sub	x0, x1, #0x1
    8cc4:	tst	x0, x19
    8cc8:	b.eq	8cf8 <__sanitizer_print_stack_trace@@Base+0xa20>  // b.none
    8ccc:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    8cd0:	mov	x2, x19
    8cd4:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    8cd8:	add	x0, x0, #0xfc8
    8cdc:	ldr	x1, [x1, #4024]
    8ce0:	ldr	x1, [x1]
    8ce4:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    8ce8:	ldr	x1, [x20, #48]
    8cec:	sub	x0, x1, #0x1
    8cf0:	tst	x0, x19
    8cf4:	b.ne	8d7c <__sanitizer_print_stack_trace@@Base+0xaa4>  // b.any
    8cf8:	sub	x1, x19, x1
    8cfc:	add	x1, x1, #0x20
    8d00:	b	8c40 <__sanitizer_print_stack_trace@@Base+0x968>
    8d04:	dmb	ish
    8d08:	add	x20, x20, #0xd30
    8d0c:	strb	wzr, [x20, #664]
    8d10:	mov	x0, #0x0                   	// #0
    8d14:	mov	x1, #0x0                   	// #0
    8d18:	ldr	x30, [sp, #16]
    8d1c:	ldp	x19, x20, [sp], #32
    8d20:	ret
    8d24:	lsl	x4, x0, #5
    8d28:	cbz	x0, 8d10 <__sanitizer_print_stack_trace@@Base+0xa38>
    8d2c:	b	8c84 <__sanitizer_print_stack_trace@@Base+0x9ac>
    8d30:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    8d34:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    8d38:	mov	x4, x19
    8d3c:	add	x2, x2, #0xf78
    8d40:	add	x0, x0, #0xdb8
    8d44:	mov	w1, #0xc9                  	// #201
    8d48:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    8d4c:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    8d50:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    8d54:	add	x2, x2, #0xf18
    8d58:	add	x0, x0, #0xdb8
    8d5c:	mov	w1, #0xc7                  	// #199
    8d60:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    8d64:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    8d68:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    8d6c:	add	x2, x2, #0xf40
    8d70:	add	x0, x0, #0xdb8
    8d74:	mov	w1, #0xc8                  	// #200
    8d78:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    8d7c:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    8d80:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    8d84:	add	x2, x2, #0xfe0
    8d88:	add	x0, x0, #0xdb8
    8d8c:	mov	x4, #0x0                   	// #0
    8d90:	mov	x3, #0x0                   	// #0
    8d94:	mov	w1, #0xb1                  	// #177
    8d98:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    8d9c:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    8da0:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    8da4:	add	x2, x2, #0xf98
    8da8:	add	x0, x0, #0xdb8
    8dac:	mov	x4, #0x0                   	// #0
    8db0:	mov	x3, #0x0                   	// #0
    8db4:	mov	w1, #0x135                 	// #309
    8db8:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    8dbc:	mov	w3, #0x40                  	// #64
    8dc0:	mov	x4, #0x40                  	// #64
    8dc4:	b	8c88 <__sanitizer_print_stack_trace@@Base+0x9b0>
    8dc8:	mov	w3, #0x40                  	// #64
    8dcc:	b	8c2c <__sanitizer_print_stack_trace@@Base+0x954>

0000000000008dd0 <__hwasan_enable_allocator_tagging@@Base>:
    8dd0:	adrp	x0, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28398>
    8dd4:	add	x0, x0, #0xd30
    8dd8:	mov	w1, #0x1                   	// #1
    8ddc:	strb	w1, [x0, #712]
    8de0:	ret
    8de4:	nop

0000000000008de8 <__hwasan_disable_allocator_tagging@@Base>:
    8de8:	adrp	x0, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28398>
    8dec:	add	x0, x0, #0xd30
    8df0:	strb	wzr, [x0, #712]
    8df4:	ret

0000000000008df8 <__sanitizer_get_current_allocated_bytes@@Base>:
    8df8:	stp	x19, x30, [sp, #-32]!
    8dfc:	mov	x2, #0x10                  	// #16
    8e00:	mov	w1, #0x0                   	// #0
    8e04:	add	x0, sp, x2
    8e08:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
    8e0c:	adrp	x19, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28398>
    8e10:	add	x0, x19, #0xd30
    8e14:	add	x0, x0, #0x2c0
    8e18:	mov	w2, #0x1                   	// #1
    8e1c:	ldxrb	w1, [x0]
    8e20:	stxrb	w3, w2, [x0]
    8e24:	cbnz	w3, 8e1c <__sanitizer_get_current_allocated_bytes@@Base+0x24>
    8e28:	dmb	ish
    8e2c:	tst	w1, #0xff
    8e30:	b.eq	8e38 <__sanitizer_get_current_allocated_bytes@@Base+0x40>  // b.none
    8e34:	bl	85d8 <__sanitizer_print_stack_trace@@Base+0x300>
    8e38:	ldp	x1, x0, [sp, #16]
    8e3c:	add	x19, x19, #0xd30
    8e40:	add	x2, x19, #0x2a0
    8e44:	mov	x3, x2
    8e48:	ldr	x5, [x2, #16]
    8e4c:	ldr	x4, [x2, #24]
    8e50:	add	x1, x1, x5
    8e54:	ldr	x2, [x2]
    8e58:	add	x0, x0, x4
    8e5c:	cmp	x2, x3
    8e60:	b.ne	8e48 <__sanitizer_get_current_allocated_bytes@@Base+0x50>  // b.any
    8e64:	cmp	x1, #0x0
    8e68:	csel	x1, x1, xzr, ge  // ge = tcont
    8e6c:	cmp	x0, #0x0
    8e70:	csel	x0, x0, xzr, ge  // ge = tcont
    8e74:	stp	x1, x0, [sp, #16]
    8e78:	dmb	ish
    8e7c:	strb	wzr, [x19, #704]
    8e80:	ldr	x0, [sp, #16]
    8e84:	ldp	x19, x30, [sp], #32
    8e88:	ret
    8e8c:	nop

0000000000008e90 <__sanitizer_get_heap_size@@Base>:
    8e90:	stp	x19, x30, [sp, #-32]!
    8e94:	mov	x2, #0x10                  	// #16
    8e98:	mov	w1, #0x0                   	// #0
    8e9c:	add	x0, sp, x2
    8ea0:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
    8ea4:	adrp	x19, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28398>
    8ea8:	add	x0, x19, #0xd30
    8eac:	add	x0, x0, #0x2c0
    8eb0:	mov	w2, #0x1                   	// #1
    8eb4:	ldxrb	w1, [x0]
    8eb8:	stxrb	w3, w2, [x0]
    8ebc:	cbnz	w3, 8eb4 <__sanitizer_get_heap_size@@Base+0x24>
    8ec0:	dmb	ish
    8ec4:	tst	w1, #0xff
    8ec8:	b.eq	8ed0 <__sanitizer_get_heap_size@@Base+0x40>  // b.none
    8ecc:	bl	85d8 <__sanitizer_print_stack_trace@@Base+0x300>
    8ed0:	ldp	x1, x0, [sp, #16]
    8ed4:	add	x19, x19, #0xd30
    8ed8:	add	x2, x19, #0x2a0
    8edc:	mov	x3, x2
    8ee0:	ldr	x5, [x2, #16]
    8ee4:	ldr	x4, [x2, #24]
    8ee8:	add	x1, x1, x5
    8eec:	ldr	x2, [x2]
    8ef0:	add	x0, x0, x4
    8ef4:	cmp	x2, x3
    8ef8:	b.ne	8ee0 <__sanitizer_get_heap_size@@Base+0x50>  // b.any
    8efc:	cmp	x1, #0x0
    8f00:	csel	x1, x1, xzr, ge  // ge = tcont
    8f04:	cmp	x0, #0x0
    8f08:	csel	x0, x0, xzr, ge  // ge = tcont
    8f0c:	stp	x1, x0, [sp, #16]
    8f10:	dmb	ish
    8f14:	strb	wzr, [x19, #704]
    8f18:	ldr	x0, [sp, #24]
    8f1c:	ldp	x19, x30, [sp], #32
    8f20:	ret
    8f24:	nop

0000000000008f28 <__sanitizer_get_free_bytes@@Base>:
    8f28:	mov	x0, #0x1                   	// #1
    8f2c:	ret

0000000000008f30 <__sanitizer_get_unmapped_bytes@@Base>:
    8f30:	mov	x0, #0x1                   	// #1
    8f34:	ret

0000000000008f38 <__sanitizer_get_estimated_allocated_size@@Base>:
    8f38:	ret
    8f3c:	nop

0000000000008f40 <__sanitizer_get_ownership@@Base>:
    8f40:	stp	x19, x20, [sp, #-48]!
    8f44:	ands	x19, x0, #0xffffffffffffff
    8f48:	str	x30, [sp, #32]
    8f4c:	b.ne	8f60 <__sanitizer_get_ownership@@Base+0x20>  // b.any
    8f50:	mov	w0, #0x0                   	// #0
    8f54:	ldr	x30, [sp, #32]
    8f58:	ldp	x19, x20, [sp], #48
    8f5c:	ret
    8f60:	mov	x20, x0
    8f64:	stp	x21, x22, [sp, #16]
    8f68:	adrp	x21, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28398>
    8f6c:	add	x0, x21, #0xd30
    8f70:	ldr	x1, [x0, #32]
    8f74:	cmp	x19, x1
    8f78:	b.cc	8f8c <__sanitizer_get_ownership@@Base+0x4c>  // b.lo, b.ul, b.last
    8f7c:	mov	x2, #0x2000000000          	// #137438953472
    8f80:	add	x3, x1, x2
    8f84:	cmp	x19, x3
    8f88:	b.cc	90b8 <__sanitizer_get_ownership@@Base+0x178>  // b.lo, b.ul, b.last
    8f8c:	add	x0, x21, #0xd30
    8f90:	mov	w2, #0x1                   	// #1
    8f94:	add	x0, x0, #0x298
    8f98:	ldxrb	w1, [x0]
    8f9c:	stxrb	w3, w2, [x0]
    8fa0:	cbnz	w3, 8f98 <__sanitizer_get_ownership@@Base+0x58>
    8fa4:	dmb	ish
    8fa8:	tst	w1, #0xff
    8fac:	b.eq	8fb4 <__sanitizer_get_ownership@@Base+0x74>  // b.none
    8fb0:	bl	85d8 <__sanitizer_print_stack_trace@@Base+0x300>
    8fb4:	add	x0, x21, #0xd30
    8fb8:	ldr	x2, [x0, #104]
    8fbc:	ldr	x0, [x0, #56]
    8fc0:	cbz	x2, 9198 <__sanitizer_get_ownership@@Base+0x258>
    8fc4:	add	x2, x0, x2, lsl #3
    8fc8:	mov	x3, #0x0                   	// #0
    8fcc:	nop
    8fd0:	ldr	x1, [x0]
    8fd4:	cmp	x19, x1
    8fd8:	b.cc	8fec <__sanitizer_get_ownership@@Base+0xac>  // b.lo, b.ul, b.last
    8fdc:	sub	x5, x19, x3
    8fe0:	sub	x4, x19, x1
    8fe4:	cmp	x5, x4
    8fe8:	csel	x3, x3, x1, ls  // ls = plast
    8fec:	add	x0, x0, #0x8
    8ff0:	cmp	x0, x2
    8ff4:	b.ne	8fd0 <__sanitizer_get_ownership@@Base+0x90>  // b.any
    8ff8:	cbz	x3, 9198 <__sanitizer_get_ownership@@Base+0x258>
    8ffc:	ldr	x4, [x3]
    9000:	cmp	x4, x3
    9004:	b.hi	91d0 <__sanitizer_get_ownership@@Base+0x290>  // b.pmore
    9008:	ldr	x0, [x3, #8]
    900c:	add	x4, x4, x0
    9010:	cmp	x4, x3
    9014:	b.ls	91e8 <__sanitizer_get_ownership@@Base+0x2a8>  // b.plast
    9018:	cmp	x19, x3
    901c:	b.cc	9200 <__sanitizer_get_ownership@@Base+0x2c0>  // b.lo, b.ul, b.last
    9020:	cmp	x19, x4
    9024:	b.cs	9198 <__sanitizer_get_ownership@@Base+0x258>  // b.hs, b.nlast
    9028:	add	x0, x21, #0xd30
    902c:	ldr	x22, [x0, #48]
    9030:	sub	x0, x22, #0x1
    9034:	add	x22, x22, x3
    9038:	tst	x0, x3
    903c:	b.ne	921c <__sanitizer_get_ownership@@Base+0x2dc>  // b.any
    9040:	dmb	ish
    9044:	add	x0, x21, #0xd30
    9048:	strb	wzr, [x0, #664]
    904c:	ldr	x1, [x0, #32]
    9050:	cmp	x19, x1
    9054:	b.cs	91a0 <__sanitizer_get_ownership@@Base+0x260>  // b.hs, b.nlast
    9058:	add	x21, x21, #0xd30
    905c:	ldr	x0, [x21, #48]
    9060:	sub	x1, x0, #0x1
    9064:	tst	x1, x19
    9068:	b.eq	9098 <__sanitizer_get_ownership@@Base+0x158>  // b.none
    906c:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    9070:	mov	x2, x19
    9074:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    9078:	add	x0, x0, #0xfc8
    907c:	ldr	x1, [x1, #4024]
    9080:	ldr	x1, [x1]
    9084:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    9088:	ldr	x0, [x21, #48]
    908c:	sub	x1, x0, #0x1
    9090:	tst	x1, x19
    9094:	b.ne	923c <__sanitizer_get_ownership@@Base+0x2fc>  // b.any
    9098:	sub	x0, x19, x0
    909c:	add	x0, x0, #0x20
    90a0:	ldrsb	w1, [x0, #3]
    90a4:	tbnz	w1, #31, 9170 <__sanitizer_get_ownership@@Base+0x230>
    90a8:	cmp	x19, x22
    90ac:	b.eq	917c <__sanitizer_get_ownership@@Base+0x23c>  // b.none
    90b0:	ldp	x21, x22, [sp, #16]
    90b4:	b	8f50 <__sanitizer_get_ownership@@Base+0x10>
    90b8:	sub	x6, x19, x1
    90bc:	ubfx	x2, x6, #32, #5
    90c0:	cmp	x2, #0x1f
    90c4:	b.eq	925c <__sanitizer_get_ownership@@Base+0x31c>  // b.none
    90c8:	cmp	x2, #0x10
    90cc:	b.ls	91c0 <__sanitizer_get_ownership@@Base+0x280>  // b.plast
    90d0:	sub	x0, x2, #0x10
    90d4:	mov	x4, #0x200                 	// #512
    90d8:	and	x5, x0, #0x1
    90dc:	lsr	x0, x0, #1
    90e0:	lsl	x0, x4, x0
    90e4:	lsr	x4, x0, #1
    90e8:	madd	x4, x4, x5, x0
    90ec:	mov	w5, w4
    90f0:	add	x2, x2, x2, lsl #1
    90f4:	and	x22, x6, #0xffffffff00000000
    90f8:	udiv	w5, w6, w5
    90fc:	add	x22, x22, x1
    9100:	add	x2, x3, x2, lsl #6
    9104:	mul	x3, x5, x4
    9108:	ldr	x0, [x2, #120]
    910c:	add	x4, x4, x3
    9110:	add	x22, x22, x3
    9114:	cmp	x4, x0
    9118:	csel	x22, x22, xzr, ls  // ls = plast
    911c:	mov	x2, #0xe0000000            	// #3758096384
    9120:	add	x2, x1, x2
    9124:	ubfx	x3, x6, #32, #5
    9128:	cmp	x3, #0x1f
    912c:	b.eq	9268 <__sanitizer_get_ownership@@Base+0x328>  // b.none
    9130:	lsl	w0, w3, #5
    9134:	cmp	x3, #0x10
    9138:	b.ls	9158 <__sanitizer_get_ownership@@Base+0x218>  // b.plast
    913c:	sub	x1, x3, #0x10
    9140:	mov	x0, #0x200                 	// #512
    9144:	and	x4, x1, #0x1
    9148:	lsr	x1, x1, #1
    914c:	lsl	x0, x0, x1
    9150:	lsr	x1, x0, #1
    9154:	madd	w0, w1, w4, w0
    9158:	udiv	w0, w6, w0
    915c:	lsl	x3, x3, #32
    9160:	add	x0, x0, #0x1
    9164:	sub	x0, x3, x0, lsl #3
    9168:	add	x0, x0, x2
    916c:	b	90a0 <__sanitizer_get_ownership@@Base+0x160>
    9170:	and	x20, x20, #0xfffffffffffff0
    9174:	cmp	x22, x20
    9178:	b.ne	90b0 <__sanitizer_get_ownership@@Base+0x170>  // b.any
    917c:	ldr	w0, [x0]
    9180:	ldp	x21, x22, [sp, #16]
    9184:	tst	x0, #0x7fffffff
    9188:	cset	w0, ne  // ne = any
    918c:	ldr	x30, [sp, #32]
    9190:	ldp	x19, x20, [sp], #48
    9194:	ret
    9198:	mov	x22, #0x0                   	// #0
    919c:	b	9040 <__sanitizer_get_ownership@@Base+0x100>
    91a0:	mov	x0, #0x2000000000          	// #137438953472
    91a4:	add	x0, x1, x0
    91a8:	cmp	x19, x0
    91ac:	mov	x0, #0xe0000000            	// #3758096384
    91b0:	add	x2, x1, x0
    91b4:	b.cs	9058 <__sanitizer_get_ownership@@Base+0x118>  // b.hs, b.nlast
    91b8:	sub	x6, x19, x1
    91bc:	b	9124 <__sanitizer_get_ownership@@Base+0x1e4>
    91c0:	lsl	x4, x2, #5
    91c4:	mov	x22, #0x0                   	// #0
    91c8:	cbz	x2, 911c <__sanitizer_get_ownership@@Base+0x1dc>
    91cc:	b	90ec <__sanitizer_get_ownership@@Base+0x1ac>
    91d0:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    91d4:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    91d8:	add	x2, x2, #0xf18
    91dc:	add	x0, x0, #0xdb8
    91e0:	mov	w1, #0xc7                  	// #199
    91e4:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    91e8:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    91ec:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    91f0:	add	x2, x2, #0xf40
    91f4:	add	x0, x0, #0xdb8
    91f8:	mov	w1, #0xc8                  	// #200
    91fc:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    9200:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    9204:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    9208:	mov	x4, x19
    920c:	add	x2, x2, #0xf78
    9210:	add	x0, x0, #0xdb8
    9214:	mov	w1, #0xc9                  	// #201
    9218:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    921c:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    9220:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    9224:	add	x2, x2, #0xf98
    9228:	add	x0, x0, #0xdb8
    922c:	mov	x4, #0x0                   	// #0
    9230:	mov	x3, #0x0                   	// #0
    9234:	mov	w1, #0x135                 	// #309
    9238:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    923c:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    9240:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    9244:	add	x2, x2, #0xfe0
    9248:	add	x0, x0, #0xdb8
    924c:	mov	x4, #0x0                   	// #0
    9250:	mov	x3, #0x0                   	// #0
    9254:	mov	w1, #0xb1                  	// #177
    9258:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    925c:	mov	w5, #0x40                  	// #64
    9260:	mov	x4, #0x40                  	// #64
    9264:	b	90f0 <__sanitizer_get_ownership@@Base+0x1b0>
    9268:	mov	w0, #0x40                  	// #64
    926c:	b	9158 <__sanitizer_get_ownership@@Base+0x218>

0000000000009270 <__sanitizer_get_allocated_size@@Base>:
    9270:	stp	x19, x20, [sp, #-48]!
    9274:	ands	x19, x0, #0xffffffffffffff
    9278:	str	x30, [sp, #32]
    927c:	b.ne	9290 <__sanitizer_get_allocated_size@@Base+0x20>  // b.any
    9280:	mov	x0, #0x0                   	// #0
    9284:	ldr	x30, [sp, #32]
    9288:	ldp	x19, x20, [sp], #48
    928c:	ret
    9290:	mov	x20, x0
    9294:	stp	x21, x22, [sp, #16]
    9298:	adrp	x21, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28398>
    929c:	add	x0, x21, #0xd30
    92a0:	ldr	x1, [x0, #32]
    92a4:	cmp	x19, x1
    92a8:	b.cc	92bc <__sanitizer_get_allocated_size@@Base+0x4c>  // b.lo, b.ul, b.last
    92ac:	mov	x2, #0x2000000000          	// #137438953472
    92b0:	add	x3, x1, x2
    92b4:	cmp	x19, x3
    92b8:	b.cc	93e8 <__sanitizer_get_allocated_size@@Base+0x178>  // b.lo, b.ul, b.last
    92bc:	add	x0, x21, #0xd30
    92c0:	mov	w2, #0x1                   	// #1
    92c4:	add	x0, x0, #0x298
    92c8:	ldxrb	w1, [x0]
    92cc:	stxrb	w3, w2, [x0]
    92d0:	cbnz	w3, 92c8 <__sanitizer_get_allocated_size@@Base+0x58>
    92d4:	dmb	ish
    92d8:	tst	w1, #0xff
    92dc:	b.eq	92e4 <__sanitizer_get_allocated_size@@Base+0x74>  // b.none
    92e0:	bl	85d8 <__sanitizer_print_stack_trace@@Base+0x300>
    92e4:	add	x0, x21, #0xd30
    92e8:	ldr	x2, [x0, #104]
    92ec:	ldr	x0, [x0, #56]
    92f0:	cbz	x2, 94c4 <__sanitizer_get_allocated_size@@Base+0x254>
    92f4:	add	x2, x0, x2, lsl #3
    92f8:	mov	x3, #0x0                   	// #0
    92fc:	nop
    9300:	ldr	x1, [x0]
    9304:	cmp	x19, x1
    9308:	b.cc	931c <__sanitizer_get_allocated_size@@Base+0xac>  // b.lo, b.ul, b.last
    930c:	sub	x5, x19, x3
    9310:	sub	x4, x19, x1
    9314:	cmp	x5, x4
    9318:	csel	x3, x3, x1, ls  // ls = plast
    931c:	add	x0, x0, #0x8
    9320:	cmp	x0, x2
    9324:	b.ne	9300 <__sanitizer_get_allocated_size@@Base+0x90>  // b.any
    9328:	cbz	x3, 94c4 <__sanitizer_get_allocated_size@@Base+0x254>
    932c:	ldr	x4, [x3]
    9330:	cmp	x4, x3
    9334:	b.hi	94fc <__sanitizer_get_allocated_size@@Base+0x28c>  // b.pmore
    9338:	ldr	x0, [x3, #8]
    933c:	add	x4, x4, x0
    9340:	cmp	x4, x3
    9344:	b.ls	9514 <__sanitizer_get_allocated_size@@Base+0x2a4>  // b.plast
    9348:	cmp	x19, x3
    934c:	b.cc	952c <__sanitizer_get_allocated_size@@Base+0x2bc>  // b.lo, b.ul, b.last
    9350:	cmp	x19, x4
    9354:	b.cs	94c4 <__sanitizer_get_allocated_size@@Base+0x254>  // b.hs, b.nlast
    9358:	add	x0, x21, #0xd30
    935c:	ldr	x22, [x0, #48]
    9360:	sub	x0, x22, #0x1
    9364:	add	x22, x22, x3
    9368:	tst	x0, x3
    936c:	b.ne	9548 <__sanitizer_get_allocated_size@@Base+0x2d8>  // b.any
    9370:	dmb	ish
    9374:	add	x0, x21, #0xd30
    9378:	strb	wzr, [x0, #664]
    937c:	ldr	x1, [x0, #32]
    9380:	cmp	x19, x1
    9384:	b.cs	94cc <__sanitizer_get_allocated_size@@Base+0x25c>  // b.hs, b.nlast
    9388:	add	x21, x21, #0xd30
    938c:	ldr	x0, [x21, #48]
    9390:	sub	x1, x0, #0x1
    9394:	tst	x1, x19
    9398:	b.eq	93c8 <__sanitizer_get_allocated_size@@Base+0x158>  // b.none
    939c:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    93a0:	mov	x2, x19
    93a4:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    93a8:	add	x0, x0, #0xfc8
    93ac:	ldr	x1, [x1, #4024]
    93b0:	ldr	x1, [x1]
    93b4:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    93b8:	ldr	x0, [x21, #48]
    93bc:	sub	x1, x0, #0x1
    93c0:	tst	x1, x19
    93c4:	b.ne	9568 <__sanitizer_get_allocated_size@@Base+0x2f8>  // b.any
    93c8:	sub	x0, x19, x0
    93cc:	add	x0, x0, #0x20
    93d0:	ldrsb	w1, [x0, #3]
    93d4:	tbnz	w1, #31, 94a0 <__sanitizer_get_allocated_size@@Base+0x230>
    93d8:	cmp	x19, x22
    93dc:	b.eq	94ac <__sanitizer_get_allocated_size@@Base+0x23c>  // b.none
    93e0:	ldp	x21, x22, [sp, #16]
    93e4:	b	9280 <__sanitizer_get_allocated_size@@Base+0x10>
    93e8:	sub	x6, x19, x1
    93ec:	ubfx	x2, x6, #32, #5
    93f0:	cmp	x2, #0x1f
    93f4:	b.eq	9588 <__sanitizer_get_allocated_size@@Base+0x318>  // b.none
    93f8:	cmp	x2, #0x10
    93fc:	b.ls	94ec <__sanitizer_get_allocated_size@@Base+0x27c>  // b.plast
    9400:	sub	x0, x2, #0x10
    9404:	mov	x4, #0x200                 	// #512
    9408:	and	x5, x0, #0x1
    940c:	lsr	x0, x0, #1
    9410:	lsl	x0, x4, x0
    9414:	lsr	x4, x0, #1
    9418:	madd	x4, x4, x5, x0
    941c:	mov	w5, w4
    9420:	add	x2, x2, x2, lsl #1
    9424:	and	x22, x6, #0xffffffff00000000
    9428:	udiv	w5, w6, w5
    942c:	add	x22, x22, x1
    9430:	add	x2, x3, x2, lsl #6
    9434:	mul	x3, x5, x4
    9438:	ldr	x0, [x2, #120]
    943c:	add	x4, x4, x3
    9440:	add	x22, x22, x3
    9444:	cmp	x4, x0
    9448:	csel	x22, x22, xzr, ls  // ls = plast
    944c:	mov	x2, #0xe0000000            	// #3758096384
    9450:	add	x2, x1, x2
    9454:	ubfx	x3, x6, #32, #5
    9458:	cmp	x3, #0x1f
    945c:	b.eq	9594 <__sanitizer_get_allocated_size@@Base+0x324>  // b.none
    9460:	lsl	w0, w3, #5
    9464:	cmp	x3, #0x10
    9468:	b.ls	9488 <__sanitizer_get_allocated_size@@Base+0x218>  // b.plast
    946c:	sub	x1, x3, #0x10
    9470:	mov	x0, #0x200                 	// #512
    9474:	and	x4, x1, #0x1
    9478:	lsr	x1, x1, #1
    947c:	lsl	x0, x0, x1
    9480:	lsr	x1, x0, #1
    9484:	madd	w0, w1, w4, w0
    9488:	udiv	w0, w6, w0
    948c:	lsl	x3, x3, #32
    9490:	add	x0, x0, #0x1
    9494:	sub	x0, x3, x0, lsl #3
    9498:	add	x0, x0, x2
    949c:	b	93d0 <__sanitizer_get_allocated_size@@Base+0x160>
    94a0:	and	x20, x20, #0xfffffffffffff0
    94a4:	cmp	x22, x20
    94a8:	b.ne	93e0 <__sanitizer_get_allocated_size@@Base+0x170>  // b.any
    94ac:	ldr	w0, [x0]
    94b0:	ldp	x21, x22, [sp, #16]
    94b4:	and	x0, x0, #0x7fffffff
    94b8:	ldr	x30, [sp, #32]
    94bc:	ldp	x19, x20, [sp], #48
    94c0:	ret
    94c4:	mov	x22, #0x0                   	// #0
    94c8:	b	9370 <__sanitizer_get_allocated_size@@Base+0x100>
    94cc:	mov	x0, #0x2000000000          	// #137438953472
    94d0:	add	x0, x1, x0
    94d4:	cmp	x19, x0
    94d8:	mov	x0, #0xe0000000            	// #3758096384
    94dc:	add	x2, x1, x0
    94e0:	b.cs	9388 <__sanitizer_get_allocated_size@@Base+0x118>  // b.hs, b.nlast
    94e4:	sub	x6, x19, x1
    94e8:	b	9454 <__sanitizer_get_allocated_size@@Base+0x1e4>
    94ec:	lsl	x4, x2, #5
    94f0:	mov	x22, #0x0                   	// #0
    94f4:	cbz	x2, 944c <__sanitizer_get_allocated_size@@Base+0x1dc>
    94f8:	b	941c <__sanitizer_get_allocated_size@@Base+0x1ac>
    94fc:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    9500:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    9504:	add	x2, x2, #0xf18
    9508:	add	x0, x0, #0xdb8
    950c:	mov	w1, #0xc7                  	// #199
    9510:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    9514:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    9518:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    951c:	add	x2, x2, #0xf40
    9520:	add	x0, x0, #0xdb8
    9524:	mov	w1, #0xc8                  	// #200
    9528:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    952c:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    9530:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    9534:	mov	x4, x19
    9538:	add	x2, x2, #0xf78
    953c:	add	x0, x0, #0xdb8
    9540:	mov	w1, #0xc9                  	// #201
    9544:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    9548:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    954c:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    9550:	add	x2, x2, #0xf98
    9554:	add	x0, x0, #0xdb8
    9558:	mov	x4, #0x0                   	// #0
    955c:	mov	x3, #0x0                   	// #0
    9560:	mov	w1, #0x135                 	// #309
    9564:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    9568:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    956c:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    9570:	add	x2, x2, #0xfe0
    9574:	add	x0, x0, #0xdb8
    9578:	mov	x4, #0x0                   	// #0
    957c:	mov	x3, #0x0                   	// #0
    9580:	mov	w1, #0xb1                  	// #177
    9584:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    9588:	mov	w5, #0x40                  	// #64
    958c:	mov	x4, #0x40                  	// #64
    9590:	b	9420 <__sanitizer_get_allocated_size@@Base+0x1b0>
    9594:	mov	w0, #0x40                  	// #64
    9598:	b	9488 <__sanitizer_get_allocated_size@@Base+0x218>
    959c:	nop
    95a0:	stp	x19, x20, [sp, #-96]!
    95a4:	cmp	x2, #0x10
    95a8:	mov	x19, #0x10                  	// #16
    95ac:	csel	x19, x2, x19, cs  // cs = hs, nlast
    95b0:	cmp	x1, #0x0
    95b4:	stp	x25, x26, [sp, #48]
    95b8:	stp	x27, x28, [sp, #64]
    95bc:	mov	x27, #0x1                   	// #1
    95c0:	csel	x25, x1, x27, ne  // ne = any
    95c4:	add	x20, x25, #0xf
    95c8:	stp	x21, x22, [sp, #16]
    95cc:	and	x20, x20, #0xfffffffffffffff0
    95d0:	stp	x23, x24, [sp, #32]
    95d4:	cmp	x25, x20
    95d8:	str	x30, [sp, #80]
    95dc:	b.hi	98e4 <__sanitizer_get_allocated_size@@Base+0x674>  // b.pmore
    95e0:	mov	x21, x1
    95e4:	mov	x24, x0
    95e8:	and	w26, w3, #0xff
    95ec:	bl	e3f8 <__interceptor_vfork@@Base+0xe18>
    95f0:	mov	x23, x0
    95f4:	cbz	x0, 97ec <__sanitizer_get_allocated_size@@Base+0x57c>
    95f8:	mov	x3, x19
    95fc:	mov	x2, x20
    9600:	add	x1, x23, #0x38
    9604:	adrp	x22, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28398>
    9608:	add	x0, x22, #0xd30
    960c:	bl	b690 <__sanitizer_get_allocated_size@@Base+0x2420>
    9610:	mov	x27, x0
    9614:	cbz	x27, 9904 <__sanitizer_get_allocated_size@@Base+0x694>
    9618:	add	x0, x22, #0xd30
    961c:	mov	x19, #0xe0000000            	// #3758096384
    9620:	ldr	x2, [x0, #32]
    9624:	cmp	x27, x2
    9628:	add	x0, x2, x19
    962c:	b.cc	9690 <__sanitizer_get_allocated_size@@Base+0x420>  // b.lo, b.ul, b.last
    9630:	mov	x1, #0x2000000000          	// #137438953472
    9634:	add	x1, x2, x1
    9638:	cmp	x27, x1
    963c:	b.cs	9690 <__sanitizer_get_allocated_size@@Base+0x420>  // b.hs, b.nlast
    9640:	sub	x2, x27, x2
    9644:	ubfx	x1, x2, #32, #5
    9648:	cmp	x1, #0x1f
    964c:	b.eq	9920 <__sanitizer_get_allocated_size@@Base+0x6b0>  // b.none
    9650:	lsl	w19, w1, #5
    9654:	cmp	x1, #0x10
    9658:	b.ls	9678 <__sanitizer_get_allocated_size@@Base+0x408>  // b.plast
    965c:	sub	x3, x1, #0x10
    9660:	mov	x19, #0x200                 	// #512
    9664:	and	x4, x3, #0x1
    9668:	lsr	x3, x3, #1
    966c:	lsl	x3, x19, x3
    9670:	lsr	x19, x3, #1
    9674:	madd	w19, w19, w4, w3
    9678:	udiv	w2, w2, w19
    967c:	lsl	x1, x1, #32
    9680:	add	x19, x2, #0x1
    9684:	sub	x19, x1, x19, lsl #3
    9688:	add	x19, x19, x0
    968c:	b	96ac <__sanitizer_get_allocated_size@@Base+0x43c>
    9690:	add	x28, x22, #0xd30
    9694:	ldr	x19, [x28, #48]
    9698:	sub	x0, x19, #0x1
    969c:	tst	x27, x0
    96a0:	b.ne	97a0 <__sanitizer_get_allocated_size@@Base+0x530>  // b.any
    96a4:	sub	x19, x27, x19
    96a8:	add	x19, x19, #0x20
    96ac:	ldr	w2, [x19]
    96b0:	ldp	x0, x1, [x24]
    96b4:	bfxil	w2, w21, #0, #31
    96b8:	str	w2, [x19]
    96bc:	bl	277b8 <__sanitizer_cov_dump@@Base+0xb98>
    96c0:	str	w0, [x19, #4]
    96c4:	ldrb	w1, [x19, #3]
    96c8:	and	w1, w1, #0x7f
    96cc:	strb	w1, [x19, #3]
    96d0:	cbnz	w26, 978c <__sanitizer_get_allocated_size@@Base+0x51c>
    96d4:	bl	71d8 <__sanitizer_print_memory_profile@plt+0xb78>
    96d8:	ldr	w0, [x0, #8]
    96dc:	cmp	w0, #0x0
    96e0:	b.le	970c <__sanitizer_get_allocated_size@@Base+0x49c>
    96e4:	bl	71d8 <__sanitizer_print_memory_profile@plt+0xb78>
    96e8:	ldrsw	x2, [x0, #8]
    96ec:	cmp	x2, x20
    96f0:	csel	x19, x2, x20, ls  // ls = plast
    96f4:	bl	71d8 <__sanitizer_print_memory_profile@plt+0xb78>
    96f8:	mov	x1, x0
    96fc:	mov	x2, x19
    9700:	mov	x0, x27
    9704:	ldr	w1, [x1, #20]
    9708:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
    970c:	cmp	x21, x20
    9710:	b.eq	972c <__sanitizer_get_allocated_size@@Base+0x4bc>  // b.none
    9714:	mvn	x2, x21
    9718:	add	x1, x22, #0xd30
    971c:	add	x2, x2, x20
    9720:	add	x1, x1, #0x2d0
    9724:	add	x0, x27, x21
    9728:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
    972c:	bl	71d8 <__sanitizer_print_memory_profile@plt+0xb78>
    9730:	ldrb	w0, [x0, #1]
    9734:	cbz	w0, 983c <__sanitizer_get_allocated_size@@Base+0x5cc>
    9738:	add	x22, x22, #0xd30
    973c:	ldrb	w0, [x22, #712]
    9740:	tst	w0, #0xff
    9744:	b.ne	9858 <__sanitizer_get_allocated_size@@Base+0x5e8>  // b.any
    9748:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    974c:	ldr	x0, [x0, #3664]
    9750:	cbz	x0, 9760 <__sanitizer_get_allocated_size@@Base+0x4f0>
    9754:	mov	x1, x20
    9758:	mov	x0, x27
    975c:	bl	6250 <__sanitizer_malloc_hook@plt>
    9760:	mov	x1, x20
    9764:	mov	x0, x27
    9768:	bl	15120 <_ZdaPvRKSt9nothrow_t@@Base+0x33a0>
    976c:	mov	x0, x27
    9770:	ldp	x21, x22, [sp, #16]
    9774:	ldp	x23, x24, [sp, #32]
    9778:	ldp	x25, x26, [sp, #48]
    977c:	ldp	x27, x28, [sp, #64]
    9780:	ldr	x30, [sp, #80]
    9784:	ldp	x19, x20, [sp], #96
    9788:	ret
    978c:	mov	x2, x20
    9790:	mov	x0, x27
    9794:	mov	w1, #0x0                   	// #0
    9798:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
    979c:	b	970c <__sanitizer_get_allocated_size@@Base+0x49c>
    97a0:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    97a4:	mov	x2, x27
    97a8:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    97ac:	add	x0, x0, #0xfc8
    97b0:	ldr	x1, [x1, #4024]
    97b4:	ldr	x1, [x1]
    97b8:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    97bc:	ldr	x19, [x28, #48]
    97c0:	sub	x0, x19, #0x1
    97c4:	tst	x27, x0
    97c8:	b.eq	96a4 <__sanitizer_get_allocated_size@@Base+0x434>  // b.none
    97cc:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    97d0:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    97d4:	add	x2, x2, #0xfe0
    97d8:	add	x0, x0, #0xdb8
    97dc:	mov	x4, #0x0                   	// #0
    97e0:	mov	x3, #0x0                   	// #0
    97e4:	mov	w1, #0xb1                  	// #177
    97e8:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    97ec:	adrp	x22, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28398>
    97f0:	add	x0, x22, #0xd30
    97f4:	add	x0, x0, #0x2e0
    97f8:	ldxrb	w1, [x0]
    97fc:	stxrb	w2, w27, [x0]
    9800:	cbnz	w2, 97f8 <__sanitizer_get_allocated_size@@Base+0x588>
    9804:	dmb	ish
    9808:	tst	w1, #0xff
    980c:	b.eq	9814 <__sanitizer_get_allocated_size@@Base+0x5a4>  // b.none
    9810:	bl	85d8 <__sanitizer_print_stack_trace@@Base+0x300>
    9814:	add	x0, x22, #0xd30
    9818:	mov	x3, x19
    981c:	add	x1, x0, #0x2f0
    9820:	mov	x19, x0
    9824:	mov	x2, x20
    9828:	bl	b690 <__sanitizer_get_allocated_size@@Base+0x2420>
    982c:	dmb	ish
    9830:	mov	x27, x0
    9834:	strb	wzr, [x19, #736]
    9838:	b	9614 <__sanitizer_get_allocated_size@@Base+0x3a4>
    983c:	bl	71d8 <__sanitizer_print_memory_profile@plt+0xb78>
    9840:	ldrb	w0, [x0, #2]
    9844:	cbz	w0, 9748 <__sanitizer_get_allocated_size@@Base+0x4d8>
    9848:	add	x22, x22, #0xd30
    984c:	ldrb	w0, [x22, #712]
    9850:	tst	w0, #0xff
    9854:	b.eq	9748 <__sanitizer_get_allocated_size@@Base+0x4d8>  // b.none
    9858:	bl	71d8 <__sanitizer_print_memory_profile@plt+0xb78>
    985c:	ldrb	w0, [x0, #1]
    9860:	cbz	w0, 98cc <__sanitizer_get_allocated_size@@Base+0x65c>
    9864:	bl	71d8 <__sanitizer_print_memory_profile@plt+0xb78>
    9868:	ldr	x22, [x0, #40]
    986c:	bl	71d8 <__sanitizer_print_memory_profile@plt+0xb78>
    9870:	ldr	x4, [x0, #48]
    9874:	orr	x0, x22, x4
    9878:	cbnz	x0, 9930 <__sanitizer_get_allocated_size@@Base+0x6c0>
    987c:	mov	w21, #0xbb                  	// #187
    9880:	cbz	x23, 9890 <__sanitizer_get_allocated_size@@Base+0x620>
    9884:	mov	x0, x23
    9888:	bl	11898 <__hwasan_tag_mismatch_v2@@Base+0x5e0>
    988c:	and	w21, w0, #0xff
    9890:	and	x19, x25, #0xfffffffffffffff0
    9894:	mov	w2, w21
    9898:	mov	x1, x19
    989c:	mov	x0, x27
    98a0:	bl	ebb8 <__hwasan_memmove@@Base+0x130>
    98a4:	cmp	x19, x25
    98a8:	b.eq	9928 <__sanitizer_get_allocated_size@@Base+0x6b8>  // b.none
    98ac:	add	x19, x27, x19
    98b0:	and	w2, w25, #0xf
    98b4:	mov	x27, x0
    98b8:	mov	x1, #0x10                  	// #16
    98bc:	mov	x0, x19
    98c0:	bl	ebb8 <__hwasan_memmove@@Base+0x130>
    98c4:	strb	w21, [x19, #15]
    98c8:	b	9748 <__sanitizer_get_allocated_size@@Base+0x4d8>
    98cc:	mov	x0, x27
    98d0:	mov	x1, x20
    98d4:	mov	w2, #0x0                   	// #0
    98d8:	bl	ebb8 <__hwasan_memmove@@Base+0x130>
    98dc:	mov	x27, x0
    98e0:	b	9748 <__sanitizer_get_allocated_size@@Base+0x4d8>
    98e4:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    98e8:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    98ec:	mov	x4, x25
    98f0:	mov	x3, x20
    98f4:	add	x2, x2, #0x20
    98f8:	add	x0, x0, #0x40
    98fc:	mov	w1, #0x62                  	// #98
    9900:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    9904:	bl	12178 <_ZdaPvRKSt9nothrow_t@@Base+0x3f8>
    9908:	bl	12188 <_ZdaPvRKSt9nothrow_t@@Base+0x408>
    990c:	tst	w0, #0xff
    9910:	b.ne	976c <__sanitizer_get_allocated_size@@Base+0x4fc>  // b.any
    9914:	mov	x1, x24
    9918:	mov	x0, x20
    991c:	bl	26fb8 <__sanitizer_cov_dump@@Base+0x398>
    9920:	mov	w19, #0x40                  	// #64
    9924:	b	9678 <__sanitizer_get_allocated_size@@Base+0x408>
    9928:	mov	x27, x0
    992c:	b	9748 <__sanitizer_get_allocated_size@@Base+0x4d8>
    9930:	mov	w3, #0xe995                	// #59797
    9934:	ldr	w2, [x24, #8]
    9938:	movk	w3, #0x5bd1, lsl #16
    993c:	mov	w5, #0x7                   	// #7
    9940:	cmp	w2, w5
    9944:	mov	w6, #0xb28c                	// #45708
    9948:	mul	w1, w21, w3
    994c:	csel	w0, w2, w5, ls  // ls = plast
    9950:	movk	w6, #0x9747, lsl #16
    9954:	eor	w0, w0, w6
    9958:	csel	w5, w2, w5, ls  // ls = plast
    995c:	cmp	w2, #0x1
    9960:	eor	w1, w1, w1, lsr #24
    9964:	mul	w0, w0, w3
    9968:	ldr	x6, [x24]
    996c:	mul	w1, w1, w3
    9970:	eor	w1, w0, w1
    9974:	b.ls	99a8 <__sanitizer_get_allocated_size@@Base+0x738>  // b.plast
    9978:	mov	x2, #0x1                   	// #1
    997c:	nop
    9980:	ldr	x0, [x6, x2, lsl #3]
    9984:	mul	w1, w1, w3
    9988:	add	x2, x2, #0x1
    998c:	and	w0, w0, #0xfff
    9990:	cmp	x5, x2
    9994:	mul	w0, w0, w3
    9998:	eor	w0, w0, w0, lsr #24
    999c:	mul	w0, w0, w3
    99a0:	eor	w1, w0, w1
    99a4:	b.ne	9980 <__sanitizer_get_allocated_size@@Base+0x710>  // b.any
    99a8:	eor	w0, w1, w1, lsr #13
    99ac:	mov	w19, #0xe995                	// #59797
    99b0:	movk	w19, #0x5bd1, lsl #16
    99b4:	mul	w19, w0, w19
    99b8:	eor	w19, w19, w19, lsr #15
    99bc:	cmp	x22, x19
    99c0:	ccmp	x4, x19, #0x0, ls  // ls = plast
    99c4:	b.cc	98cc <__sanitizer_get_allocated_size@@Base+0x65c>  // b.lo, b.ul, b.last
    99c8:	bl	71d8 <__sanitizer_print_memory_profile@plt+0xb78>
    99cc:	ldrb	w0, [x0, #56]
    99d0:	cbz	w0, 987c <__sanitizer_get_allocated_size@@Base+0x60c>
    99d4:	mov	x2, x21
    99d8:	mov	x1, x19
    99dc:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    99e0:	add	x0, x0, #0x90
    99e4:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    99e8:	mov	x0, x24
    99ec:	bl	27f58 <__sanitizer_cov_dump@@Base+0x1338>
    99f0:	b	987c <__sanitizer_get_allocated_size@@Base+0x60c>
    99f4:	nop
    99f8:	stp	x19, x20, [sp, #-32]!
    99fc:	mov	x19, x0
    9a00:	mov	x20, x1
    9a04:	stp	x21, x30, [sp, #16]
    9a08:	mov	x21, #0x80000000            	// #2147483648
    9a0c:	cmp	x0, x21
    9a10:	b.ls	9a44 <__sanitizer_get_allocated_size@@Base+0x7d4>  // b.plast
    9a14:	bl	12188 <_ZdaPvRKSt9nothrow_t@@Base+0x408>
    9a18:	tst	w0, #0xff
    9a1c:	b.eq	9a68 <__sanitizer_get_allocated_size@@Base+0x7f8>  // b.none
    9a20:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    9a24:	mov	x1, x19
    9a28:	add	x0, x0, #0xa0
    9a2c:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
    9a30:	bl	23670 <__sanitizer_sandbox_on_notify@@Base+0x28>
    9a34:	mov	x0, #0x0                   	// #0
    9a38:	ldp	x21, x30, [sp, #16]
    9a3c:	ldp	x19, x20, [sp], #32
    9a40:	ret
    9a44:	mov	x1, x0
    9a48:	mov	w3, #0x0                   	// #0
    9a4c:	mov	x0, x20
    9a50:	mov	x2, #0x8                   	// #8
    9a54:	bl	95a0 <__sanitizer_get_allocated_size@@Base+0x330>
    9a58:	cbz	x0, 9a30 <__sanitizer_get_allocated_size@@Base+0x7c0>
    9a5c:	ldp	x21, x30, [sp, #16]
    9a60:	ldp	x19, x20, [sp], #32
    9a64:	ret
    9a68:	mov	x2, x20
    9a6c:	mov	x1, x21
    9a70:	mov	x0, x19
    9a74:	bl	26f60 <__sanitizer_cov_dump@@Base+0x340>
    9a78:	stp	x19, x20, [sp, #-48]!
    9a7c:	mov	x19, #0x0                   	// #0
    9a80:	stp	x21, x30, [sp, #16]
    9a84:	mov	x21, x2
    9a88:	cbz	x1, 9ad8 <__sanitizer_get_allocated_size@@Base+0x868>
    9a8c:	mov	x19, x0
    9a90:	umulh	x0, x0, x1
    9a94:	cbnz	x0, 9b0c <__sanitizer_get_allocated_size@@Base+0x89c>
    9a98:	mul	x19, x19, x1
    9a9c:	mov	x20, #0x80000000            	// #2147483648
    9aa0:	cmp	x19, x20
    9aa4:	b.ls	9ad8 <__sanitizer_get_allocated_size@@Base+0x868>  // b.plast
    9aa8:	bl	12188 <_ZdaPvRKSt9nothrow_t@@Base+0x408>
    9aac:	tst	w0, #0xff
    9ab0:	b.eq	9afc <__sanitizer_get_allocated_size@@Base+0x88c>  // b.none
    9ab4:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    9ab8:	mov	x1, x19
    9abc:	add	x0, x0, #0xa0
    9ac0:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
    9ac4:	bl	23670 <__sanitizer_sandbox_on_notify@@Base+0x28>
    9ac8:	mov	x0, #0x0                   	// #0
    9acc:	ldp	x21, x30, [sp, #16]
    9ad0:	ldp	x19, x20, [sp], #48
    9ad4:	ret
    9ad8:	mov	x1, x19
    9adc:	mov	x0, x21
    9ae0:	mov	w3, #0x1                   	// #1
    9ae4:	mov	x2, #0x8                   	// #8
    9ae8:	bl	95a0 <__sanitizer_get_allocated_size@@Base+0x330>
    9aec:	cbz	x0, 9ac4 <__sanitizer_get_allocated_size@@Base+0x854>
    9af0:	ldp	x21, x30, [sp, #16]
    9af4:	ldp	x19, x20, [sp], #48
    9af8:	ret
    9afc:	mov	x2, x21
    9b00:	mov	x1, x20
    9b04:	mov	x0, x19
    9b08:	bl	26f60 <__sanitizer_cov_dump@@Base+0x340>
    9b0c:	str	x1, [sp, #40]
    9b10:	bl	12188 <_ZdaPvRKSt9nothrow_t@@Base+0x408>
    9b14:	tst	w0, #0xff
    9b18:	ldr	x1, [sp, #40]
    9b1c:	b.ne	9ac4 <__sanitizer_get_allocated_size@@Base+0x854>  // b.any
    9b20:	mov	x2, x21
    9b24:	mov	x0, x19
    9b28:	bl	26d50 <__sanitizer_cov_dump@@Base+0x130>
    9b2c:	nop
    9b30:	stp	x19, x20, [sp, #-32]!
    9b34:	adrp	x20, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    9b38:	mov	x19, x0
    9b3c:	ldr	x20, [x20, #4016]
    9b40:	stp	x21, x30, [sp, #16]
    9b44:	mov	x21, x1
    9b48:	ldr	x2, [x20]
    9b4c:	cbz	x2, 9bac <__sanitizer_get_allocated_size@@Base+0x93c>
    9b50:	mov	x20, #0x80000000            	// #2147483648
    9b54:	cmp	x19, x20
    9b58:	b.ls	9b8c <__sanitizer_get_allocated_size@@Base+0x91c>  // b.plast
    9b5c:	bl	12188 <_ZdaPvRKSt9nothrow_t@@Base+0x408>
    9b60:	tst	w0, #0xff
    9b64:	b.eq	9bbc <__sanitizer_get_allocated_size@@Base+0x94c>  // b.none
    9b68:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    9b6c:	mov	x1, x19
    9b70:	add	x0, x0, #0xa0
    9b74:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
    9b78:	bl	23670 <__sanitizer_sandbox_on_notify@@Base+0x28>
    9b7c:	mov	x0, #0x0                   	// #0
    9b80:	ldp	x21, x30, [sp, #16]
    9b84:	ldp	x19, x20, [sp], #32
    9b88:	ret
    9b8c:	mov	x1, x19
    9b90:	mov	x0, x21
    9b94:	mov	w3, #0x0                   	// #0
    9b98:	bl	95a0 <__sanitizer_get_allocated_size@@Base+0x330>
    9b9c:	cbz	x0, 9b78 <__sanitizer_get_allocated_size@@Base+0x908>
    9ba0:	ldp	x21, x30, [sp, #16]
    9ba4:	ldp	x19, x20, [sp], #32
    9ba8:	ret
    9bac:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
    9bb0:	mov	x2, x0
    9bb4:	str	x0, [x20]
    9bb8:	b	9b50 <__sanitizer_get_allocated_size@@Base+0x8e0>
    9bbc:	mov	x2, x21
    9bc0:	mov	x1, x20
    9bc4:	mov	x0, x19
    9bc8:	bl	26f60 <__sanitizer_cov_dump@@Base+0x340>
    9bcc:	nop
    9bd0:	stp	x19, x20, [sp, #-48]!
    9bd4:	mov	x19, x0
    9bd8:	sub	x0, x0, #0x1
    9bdc:	stp	x21, x22, [sp, #16]
    9be0:	tst	x0, x19
    9be4:	mov	x21, x2
    9be8:	str	x30, [sp, #32]
    9bec:	b.ne	9c4c <__sanitizer_get_allocated_size@@Base+0x9dc>  // b.any
    9bf0:	mov	x22, #0x80000000            	// #2147483648
    9bf4:	mov	x20, x1
    9bf8:	cmp	x1, x22
    9bfc:	b.ls	9c28 <__sanitizer_get_allocated_size@@Base+0x9b8>  // b.plast
    9c00:	bl	12188 <_ZdaPvRKSt9nothrow_t@@Base+0x408>
    9c04:	tst	w0, #0xff
    9c08:	b.eq	9c74 <__sanitizer_get_allocated_size@@Base+0xa04>  // b.none
    9c0c:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    9c10:	mov	x1, x20
    9c14:	add	x0, x0, #0xa0
    9c18:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
    9c1c:	bl	23670 <__sanitizer_sandbox_on_notify@@Base+0x28>
    9c20:	mov	x0, #0x0                   	// #0
    9c24:	b	9c3c <__sanitizer_get_allocated_size@@Base+0x9cc>
    9c28:	mov	x2, x19
    9c2c:	mov	x0, x21
    9c30:	mov	w3, #0x0                   	// #0
    9c34:	bl	95a0 <__sanitizer_get_allocated_size@@Base+0x330>
    9c38:	cbz	x0, 9c1c <__sanitizer_get_allocated_size@@Base+0x9ac>
    9c3c:	ldp	x21, x22, [sp, #16]
    9c40:	ldr	x30, [sp, #32]
    9c44:	ldp	x19, x20, [sp], #48
    9c48:	ret
    9c4c:	bl	64f0 <__errno_location@plt>
    9c50:	mov	w1, #0x16                  	// #22
    9c54:	str	w1, [x0]
    9c58:	bl	12188 <_ZdaPvRKSt9nothrow_t@@Base+0x408>
    9c5c:	tst	w0, #0xff
    9c60:	mov	x0, #0x0                   	// #0
    9c64:	b.ne	9c3c <__sanitizer_get_allocated_size@@Base+0x9cc>  // b.any
    9c68:	mov	x1, x21
    9c6c:	mov	x0, x19
    9c70:	bl	26e68 <__sanitizer_cov_dump@@Base+0x248>
    9c74:	mov	x2, x21
    9c78:	mov	x1, x22
    9c7c:	mov	x0, x20
    9c80:	bl	26f60 <__sanitizer_cov_dump@@Base+0x340>
    9c84:	nop
    9c88:	stp	x19, x20, [sp, #-48]!
    9c8c:	mov	x19, x0
    9c90:	mov	x20, x1
    9c94:	stp	x21, x22, [sp, #16]
    9c98:	mov	x21, x2
    9c9c:	str	x30, [sp, #32]
    9ca0:	cbnz	x0, 9cd0 <__sanitizer_get_allocated_size@@Base+0xa60>
    9ca4:	bl	64f0 <__errno_location@plt>
    9ca8:	mov	w1, #0x16                  	// #22
    9cac:	str	w1, [x0]
    9cb0:	bl	12188 <_ZdaPvRKSt9nothrow_t@@Base+0x408>
    9cb4:	tst	w0, #0xff
    9cb8:	mov	x0, #0x0                   	// #0
    9cbc:	b.eq	9d48 <__sanitizer_get_allocated_size@@Base+0xad8>  // b.none
    9cc0:	ldp	x21, x22, [sp, #16]
    9cc4:	ldr	x30, [sp, #32]
    9cc8:	ldp	x19, x20, [sp], #48
    9ccc:	ret
    9cd0:	sub	x0, x0, #0x1
    9cd4:	orr	x2, x19, x1
    9cd8:	tst	x0, x2
    9cdc:	b.ne	9ca4 <__sanitizer_get_allocated_size@@Base+0xa34>  // b.any
    9ce0:	mov	x22, #0x80000000            	// #2147483648
    9ce4:	cmp	x1, x22
    9ce8:	b.ls	9d14 <__sanitizer_get_allocated_size@@Base+0xaa4>  // b.plast
    9cec:	bl	12188 <_ZdaPvRKSt9nothrow_t@@Base+0x408>
    9cf0:	tst	w0, #0xff
    9cf4:	b.eq	9d38 <__sanitizer_get_allocated_size@@Base+0xac8>  // b.none
    9cf8:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    9cfc:	mov	x1, x20
    9d00:	add	x0, x0, #0xa0
    9d04:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
    9d08:	bl	23670 <__sanitizer_sandbox_on_notify@@Base+0x28>
    9d0c:	mov	x0, #0x0                   	// #0
    9d10:	b	9cc0 <__sanitizer_get_allocated_size@@Base+0xa50>
    9d14:	mov	x2, x19
    9d18:	mov	x0, x21
    9d1c:	mov	w3, #0x0                   	// #0
    9d20:	bl	95a0 <__sanitizer_get_allocated_size@@Base+0x330>
    9d24:	cbz	x0, 9d08 <__sanitizer_get_allocated_size@@Base+0xa98>
    9d28:	ldp	x21, x22, [sp, #16]
    9d2c:	ldr	x30, [sp, #32]
    9d30:	ldp	x19, x20, [sp], #48
    9d34:	ret
    9d38:	mov	x2, x21
    9d3c:	mov	x1, x22
    9d40:	mov	x0, x20
    9d44:	bl	26f60 <__sanitizer_cov_dump@@Base+0x340>
    9d48:	mov	x2, x21
    9d4c:	mov	x1, x19
    9d50:	mov	x0, x20
    9d54:	bl	26eb8 <__sanitizer_cov_dump@@Base+0x298>
    9d58:	stp	x19, x20, [sp, #-32]!
    9d5c:	adrp	x19, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    9d60:	mov	x20, x0
    9d64:	ldr	x19, [x19, #4016]
    9d68:	stp	x21, x30, [sp, #16]
    9d6c:	mov	x21, x1
    9d70:	ldr	x2, [x19]
    9d74:	cbz	x2, 9df4 <__sanitizer_get_allocated_size@@Base+0xb84>
    9d78:	sub	x19, x2, #0x1
    9d7c:	tst	x2, x19
    9d80:	b.ne	9e0c <__sanitizer_get_allocated_size@@Base+0xb9c>  // b.any
    9d84:	add	x19, x20, x19
    9d88:	neg	x0, x2
    9d8c:	and	x19, x19, x0
    9d90:	cmp	x20, x19
    9d94:	b.hi	9e1c <__sanitizer_get_allocated_size@@Base+0xbac>  // b.pmore
    9d98:	cmp	x20, #0x0
    9d9c:	mov	x20, #0x80000000            	// #2147483648
    9da0:	csel	x19, x19, x2, ne  // ne = any
    9da4:	cmp	x19, x20
    9da8:	b.ls	9dd4 <__sanitizer_get_allocated_size@@Base+0xb64>  // b.plast
    9dac:	bl	12188 <_ZdaPvRKSt9nothrow_t@@Base+0x408>
    9db0:	tst	w0, #0xff
    9db4:	b.eq	9e44 <__sanitizer_get_allocated_size@@Base+0xbd4>  // b.none
    9db8:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    9dbc:	mov	x1, x19
    9dc0:	add	x0, x0, #0xa0
    9dc4:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
    9dc8:	bl	23670 <__sanitizer_sandbox_on_notify@@Base+0x28>
    9dcc:	mov	x0, #0x0                   	// #0
    9dd0:	b	9de8 <__sanitizer_get_allocated_size@@Base+0xb78>
    9dd4:	mov	x1, x19
    9dd8:	mov	x0, x21
    9ddc:	mov	w3, #0x0                   	// #0
    9de0:	bl	95a0 <__sanitizer_get_allocated_size@@Base+0x330>
    9de4:	cbz	x0, 9dc8 <__sanitizer_get_allocated_size@@Base+0xb58>
    9de8:	ldp	x21, x30, [sp, #16]
    9dec:	ldp	x19, x20, [sp], #32
    9df0:	ret
    9df4:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
    9df8:	mov	x2, x0
    9dfc:	str	x0, [x19]
    9e00:	sub	x19, x2, #0x1
    9e04:	tst	x2, x19
    9e08:	b.eq	9d84 <__sanitizer_get_allocated_size@@Base+0xb14>  // b.none
    9e0c:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    9e10:	add	x0, x0, #0xbf8
    9e14:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
    9e18:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
    9e1c:	bl	64f0 <__errno_location@plt>
    9e20:	mov	w1, #0xc                   	// #12
    9e24:	str	w1, [x0]
    9e28:	bl	12188 <_ZdaPvRKSt9nothrow_t@@Base+0x408>
    9e2c:	tst	w0, #0xff
    9e30:	mov	x0, #0x0                   	// #0
    9e34:	b.ne	9de8 <__sanitizer_get_allocated_size@@Base+0xb78>  // b.any
    9e38:	mov	x1, x21
    9e3c:	mov	x0, x20
    9e40:	bl	26df0 <__sanitizer_cov_dump@@Base+0x1d0>
    9e44:	mov	x2, x21
    9e48:	mov	x1, x20
    9e4c:	mov	x0, x19
    9e50:	bl	26f60 <__sanitizer_cov_dump@@Base+0x340>
    9e54:	nop
    9e58:	stp	x19, x20, [sp, #-64]!
    9e5c:	mov	x19, x1
    9e60:	stp	x21, x22, [sp, #16]
    9e64:	mov	x22, x3
    9e68:	str	x30, [sp, #48]
    9e6c:	cbnz	x1, 9e90 <__sanitizer_get_allocated_size@@Base+0xc20>
    9e70:	bl	12188 <_ZdaPvRKSt9nothrow_t@@Base+0x408>
    9e74:	tst	w0, #0xff
    9e78:	mov	w0, #0x16                  	// #22
    9e7c:	b.eq	9f70 <__sanitizer_get_allocated_size@@Base+0xd00>  // b.none
    9e80:	ldp	x21, x22, [sp, #16]
    9e84:	ldr	x30, [sp, #48]
    9e88:	ldp	x19, x20, [sp], #64
    9e8c:	ret
    9e90:	stp	x23, x24, [sp, #32]
    9e94:	sub	x23, x1, #0x1
    9e98:	mov	x21, x0
    9e9c:	orr	x0, x23, #0x7
    9ea0:	tst	x0, x1
    9ea4:	b.eq	9eb0 <__sanitizer_get_allocated_size@@Base+0xc40>  // b.none
    9ea8:	ldp	x23, x24, [sp, #32]
    9eac:	b	9e70 <__sanitizer_get_allocated_size@@Base+0xc00>
    9eb0:	mov	x24, #0x80000000            	// #2147483648
    9eb4:	mov	x20, x2
    9eb8:	cmp	x2, x24
    9ebc:	b.hi	9f00 <__sanitizer_get_allocated_size@@Base+0xc90>  // b.pmore
    9ec0:	mov	x2, x1
    9ec4:	mov	x1, x20
    9ec8:	mov	x0, x3
    9ecc:	mov	w3, #0x0                   	// #0
    9ed0:	bl	95a0 <__sanitizer_get_allocated_size@@Base+0x330>
    9ed4:	mov	x1, x0
    9ed8:	cbz	x0, 9f54 <__sanitizer_get_allocated_size@@Base+0xce4>
    9edc:	tst	x0, x23
    9ee0:	b.ne	9f34 <__sanitizer_get_allocated_size@@Base+0xcc4>  // b.any
    9ee4:	ldp	x23, x24, [sp, #32]
    9ee8:	str	x1, [x21]
    9eec:	mov	w0, #0x0                   	// #0
    9ef0:	ldp	x21, x22, [sp, #16]
    9ef4:	ldr	x30, [sp, #48]
    9ef8:	ldp	x19, x20, [sp], #64
    9efc:	ret
    9f00:	bl	12188 <_ZdaPvRKSt9nothrow_t@@Base+0x408>
    9f04:	tst	w0, #0xff
    9f08:	b.eq	9f60 <__sanitizer_get_allocated_size@@Base+0xcf0>  // b.none
    9f0c:	mov	x1, x20
    9f10:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    9f14:	add	x0, x0, #0xa0
    9f18:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
    9f1c:	mov	w0, #0xc                   	// #12
    9f20:	ldp	x21, x22, [sp, #16]
    9f24:	ldp	x23, x24, [sp, #32]
    9f28:	ldr	x30, [sp, #48]
    9f2c:	ldp	x19, x20, [sp], #64
    9f30:	ret
    9f34:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    9f38:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    9f3c:	add	x2, x2, #0xe0
    9f40:	add	x0, x0, #0x40
    9f44:	mov	x4, #0x0                   	// #0
    9f48:	mov	x3, #0x0                   	// #0
    9f4c:	mov	w1, #0x16d                 	// #365
    9f50:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    9f54:	mov	w0, #0xc                   	// #12
    9f58:	ldp	x23, x24, [sp, #32]
    9f5c:	b	9e80 <__sanitizer_get_allocated_size@@Base+0xc10>
    9f60:	mov	x2, x22
    9f64:	mov	x1, x24
    9f68:	mov	x0, x20
    9f6c:	bl	26f60 <__sanitizer_cov_dump@@Base+0x340>
    9f70:	mov	x1, x22
    9f74:	mov	x0, x19
    9f78:	stp	x23, x24, [sp, #32]
    9f7c:	bl	26f10 <__sanitizer_cov_dump@@Base+0x2f0>
    9f80:	stp	x19, x20, [sp, #-48]!
    9f84:	add	x19, x0, #0x50
    9f88:	mov	x20, #0x1                   	// #1
    9f8c:	stp	x21, x22, [sp, #16]
    9f90:	adrp	x22, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28398>
    9f94:	mov	x21, x0
    9f98:	add	x22, x22, #0xd30
    9f9c:	str	x30, [sp, #32]
    9fa0:	b	9fbc <__sanitizer_get_allocated_size@@Base+0xd4c>
    9fa4:	mov	w4, w4
    9fa8:	mov	x3, x20
    9fac:	mov	x2, x22
    9fb0:	mov	x1, x19
    9fb4:	mov	x0, x21
    9fb8:	bl	c518 <__sanitizer_get_allocated_size@@Base+0x32a8>
    9fbc:	ldr	w4, [x19]
    9fc0:	cbnz	w4, 9fa4 <__sanitizer_get_allocated_size@@Base+0xd34>
    9fc4:	add	x20, x20, #0x1
    9fc8:	add	x19, x19, #0x50
    9fcc:	cmp	x20, #0x20
    9fd0:	b.ne	9fbc <__sanitizer_get_allocated_size@@Base+0xd4c>  // b.any
    9fd4:	ldp	x21, x22, [sp, #16]
    9fd8:	ldr	x30, [sp, #32]
    9fdc:	ldp	x19, x20, [sp], #48
    9fe0:	ret
    9fe4:	nop
    9fe8:	stp	x19, x20, [sp, #-112]!
    9fec:	stp	x21, x22, [sp, #16]
    9ff0:	stp	x23, x24, [sp, #32]
    9ff4:	stp	x25, x26, [sp, #48]
    9ff8:	stp	x27, x28, [sp, #64]
    9ffc:	str	x30, [sp, #80]
    a000:	cbz	x1, a5b0 <__sanitizer_get_allocated_size@@Base+0x1340>
    a004:	mov	x23, x0
    a008:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    a00c:	mov	x20, x1
    a010:	ldr	x0, [x0, #3952]
    a014:	cbz	x0, a020 <__sanitizer_get_allocated_size@@Base+0xdb0>
    a018:	mov	x0, x1
    a01c:	bl	6590 <__sanitizer_free_hook@plt>
    a020:	mov	x0, x20
    a024:	bl	15178 <_ZdaPvRKSt9nothrow_t@@Base+0x33f8>
    a028:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    a02c:	ubfx	x0, x20, #4, #52
    a030:	lsr	x2, x20, #56
    a034:	ldr	x1, [x1, #3848]
    a038:	ldr	x1, [x1]
    a03c:	ldrb	w0, [x0, x1]
    a040:	cmp	w0, w2
    a044:	b.eq	a070 <__sanitizer_get_allocated_size@@Base+0xe00>  // b.none
    a048:	cmp	w0, #0xf
    a04c:	b.hi	a370 <__sanitizer_get_allocated_size@@Base+0x1100>  // b.pmore
    a050:	and	x1, x20, #0xf
    a054:	add	x1, x1, #0x1
    a058:	cmp	x1, w0, uxtb
    a05c:	b.hi	a370 <__sanitizer_get_allocated_size@@Base+0x1100>  // b.pmore
    a060:	orr	x0, x20, #0xf
    a064:	ldrb	w0, [x0]
    a068:	cmp	w0, w2
    a06c:	b.ne	a370 <__sanitizer_get_allocated_size@@Base+0x1100>  // b.any
    a070:	adrp	x21, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28398>
    a074:	add	x0, x21, #0xd30
    a078:	and	x22, x20, #0xfffffffffffff0
    a07c:	mov	x19, #0xe0000000            	// #3758096384
    a080:	ldr	x2, [x0, #32]
    a084:	add	x0, x2, x19
    a088:	cmp	x22, x2
    a08c:	b.cc	a0f0 <__sanitizer_get_allocated_size@@Base+0xe80>  // b.lo, b.ul, b.last
    a090:	mov	x1, #0x2000000000          	// #137438953472
    a094:	add	x1, x2, x1
    a098:	cmp	x22, x1
    a09c:	b.cs	a0f0 <__sanitizer_get_allocated_size@@Base+0xe80>  // b.hs, b.nlast
    a0a0:	sub	x2, x22, x2
    a0a4:	ubfx	x1, x2, #32, #5
    a0a8:	cmp	x1, #0x1f
    a0ac:	b.eq	a6d8 <__sanitizer_get_allocated_size@@Base+0x1468>  // b.none
    a0b0:	lsl	w19, w1, #5
    a0b4:	cmp	x1, #0x10
    a0b8:	b.ls	a0d8 <__sanitizer_get_allocated_size@@Base+0xe68>  // b.plast
    a0bc:	sub	x3, x1, #0x10
    a0c0:	mov	x19, #0x200                 	// #512
    a0c4:	and	x4, x3, #0x1
    a0c8:	lsr	x3, x3, #1
    a0cc:	lsl	x3, x19, x3
    a0d0:	lsr	x19, x3, #1
    a0d4:	madd	w19, w19, w4, w3
    a0d8:	udiv	w2, w2, w19
    a0dc:	lsl	x1, x1, #32
    a0e0:	add	x19, x2, #0x1
    a0e4:	sub	x19, x1, x19, lsl #3
    a0e8:	add	x19, x19, x0
    a0ec:	b	a10c <__sanitizer_get_allocated_size@@Base+0xe9c>
    a0f0:	add	x24, x21, #0xd30
    a0f4:	ldr	x19, [x24, #48]
    a0f8:	sub	x0, x19, #0x1
    a0fc:	tst	x0, x22
    a100:	b.ne	a2ec <__sanitizer_get_allocated_size@@Base+0x107c>  // b.any
    a104:	sub	x19, x22, x19
    a108:	add	x19, x19, #0x20
    a10c:	ldp	x0, x1, [x23]
    a110:	ldr	w26, [x19]
    a114:	and	x25, x26, #0x7fffffff
    a118:	ubfx	x26, x26, #0, #31
    a11c:	bl	277b8 <__sanitizer_cov_dump@@Base+0xb98>
    a120:	ldr	w28, [x19, #4]
    a124:	cmp	x25, #0x0
    a128:	mov	w27, w0
    a12c:	csinc	x4, x25, xzr, ne  // ne = any
    a130:	add	x24, x4, #0xf
    a134:	and	x24, x24, #0xfffffffffffffff0
    a138:	cmp	x4, x24
    a13c:	b.hi	a5d0 <__sanitizer_get_allocated_size@@Base+0x1360>  // b.pmore
    a140:	bl	71d8 <__sanitizer_print_memory_profile@plt+0xb78>
    a144:	ldrb	w0, [x0, #12]
    a148:	cbz	w0, a188 <__sanitizer_get_allocated_size@@Base+0xf18>
    a14c:	cmp	x25, #0x0
    a150:	ccmp	x25, x24, #0x4, ne  // ne = any
    a154:	b.eq	a188 <__sanitizer_get_allocated_size@@Base+0xf18>  // b.none
    a158:	mvn	x2, x25
    a15c:	add	x2, x2, x24
    a160:	cmp	x2, #0xf
    a164:	b.hi	a684 <__sanitizer_get_allocated_size@@Base+0x1414>  // b.pmore
    a168:	cbz	x2, a188 <__sanitizer_get_allocated_size@@Base+0xf18>
    a16c:	add	x1, x21, #0xd30
    a170:	add	x0, x25, x22
    a174:	add	x1, x1, #0x2d0
    a178:	str	x1, [sp, #104]
    a17c:	bl	19d80 <__sanitizer_set_report_fd@@Base+0x1f00>
    a180:	ldr	x1, [sp, #104]
    a184:	cbnz	w0, a6a4 <__sanitizer_get_allocated_size@@Base+0x1434>
    a188:	ldr	x0, [x19]
    a18c:	and	x0, x0, #0x80000000
    a190:	str	x0, [x19]
    a194:	bl	e3f8 <__interceptor_vfork@@Base+0xe18>
    a198:	mov	x19, x0
    a19c:	bl	71d8 <__sanitizer_print_memory_profile@plt+0xb78>
    a1a0:	ldr	w0, [x0, #16]
    a1a4:	cmp	w0, #0x0
    a1a8:	b.gt	a338 <__sanitizer_get_allocated_size@@Base+0x10c8>
    a1ac:	bl	71d8 <__sanitizer_print_memory_profile@plt+0xb78>
    a1b0:	ldrb	w0, [x0, #2]
    a1b4:	cbnz	w0, a3a0 <__sanitizer_get_allocated_size@@Base+0x1130>
    a1b8:	cbz	x19, a3f0 <__sanitizer_get_allocated_size@@Base+0x1180>
    a1bc:	cbz	x22, a29c <__sanitizer_get_allocated_size@@Base+0x102c>
    a1c0:	add	x0, x21, #0xd30
    a1c4:	ldr	x0, [x0, #32]
    a1c8:	cmp	x22, x0
    a1cc:	b.cs	a52c <__sanitizer_get_allocated_size@@Base+0x12bc>  // b.hs, b.nlast
    a1d0:	add	x0, x21, #0xd30
    a1d4:	ldr	x4, [x0, #48]
    a1d8:	sub	x1, x4, #0x1
    a1dc:	tst	x1, x22
    a1e0:	b.ne	a6e0 <__sanitizer_get_allocated_size@@Base+0x1470>  // b.any
    a1e4:	sub	x22, x22, x4
    a1e8:	add	x0, x0, #0x298
    a1ec:	mov	w2, #0x1                   	// #1
    a1f0:	ldxrb	w1, [x0]
    a1f4:	stxrb	w3, w2, [x0]
    a1f8:	cbnz	w3, a1f0 <__sanitizer_get_allocated_size@@Base+0xf80>
    a1fc:	dmb	ish
    a200:	tst	w1, #0xff
    a204:	b.eq	a20c <__sanitizer_get_allocated_size@@Base+0xf9c>  // b.none
    a208:	bl	85d8 <__sanitizer_print_stack_trace@@Base+0x300>
    a20c:	add	x21, x21, #0xd30
    a210:	ldr	x0, [x22, #24]
    a214:	ldr	x1, [x21, #56]
    a218:	ldr	x3, [x1, x0, lsl #3]
    a21c:	cmp	x3, x22
    a220:	b.ne	a700 <__sanitizer_get_allocated_size@@Base+0x1490>  // b.any
    a224:	ldr	x4, [x21, #104]
    a228:	mov	x3, x0
    a22c:	cmp	x0, x4
    a230:	b.cs	a6c0 <__sanitizer_get_allocated_size@@Base+0x1450>  // b.hs, b.nlast
    a234:	sub	x4, x4, #0x1
    a238:	ldr	x2, [x22, #8]
    a23c:	ldr	x3, [x1, x4, lsl #3]
    a240:	str	x4, [x21, #104]
    a244:	str	x3, [x1, x0, lsl #3]
    a248:	ldr	x1, [x21, #688]
    a24c:	str	x0, [x3, #24]
    a250:	ldr	x3, [x21, #128]
    a254:	sub	x1, x1, x2
    a258:	str	x1, [x21, #688]
    a25c:	ldr	x1, [x21, #136]
    a260:	add	x3, x3, #0x1
    a264:	ldr	x0, [x21, #696]
    a268:	sub	x1, x1, x2
    a26c:	strb	wzr, [x21, #112]
    a270:	sub	x0, x0, x2
    a274:	str	x3, [x21, #128]
    a278:	str	x1, [x21, #136]
    a27c:	str	x0, [x21, #696]
    a280:	dmb	ish
    a284:	strb	wzr, [x21, #664]
    a288:	ldp	x0, x1, [x22]
    a28c:	mov	w2, #0x0                   	// #0
    a290:	bl	ed00 <__hwasan_memmove@@Base+0x278>
    a294:	ldp	x0, x1, [x22]
    a298:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
    a29c:	ldr	x1, [x19, #2648]
    a2a0:	cbz	x1, a2d0 <__sanitizer_get_allocated_size@@Base+0x1060>
    a2a4:	ldr	x0, [x1, #8]
    a2a8:	mov	x2, x1
    a2ac:	sub	x3, x0, #0x18
    a2b0:	str	x20, [x0]
    a2b4:	stp	w28, w27, [x0, #8]
    a2b8:	str	w26, [x0, #16]
    a2bc:	str	x3, [x2, #8]!
    a2c0:	cmp	x3, x2
    a2c4:	b.hi	a2d0 <__sanitizer_get_allocated_size@@Base+0x1060>  // b.pmore
    a2c8:	ldr	x0, [x1]
    a2cc:	str	x0, [x1, #8]
    a2d0:	ldp	x21, x22, [sp, #16]
    a2d4:	ldp	x23, x24, [sp, #32]
    a2d8:	ldp	x25, x26, [sp, #48]
    a2dc:	ldp	x27, x28, [sp, #64]
    a2e0:	ldr	x30, [sp, #80]
    a2e4:	ldp	x19, x20, [sp], #112
    a2e8:	ret
    a2ec:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    a2f0:	mov	x2, x22
    a2f4:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    a2f8:	add	x0, x0, #0xfc8
    a2fc:	ldr	x1, [x1, #4024]
    a300:	ldr	x1, [x1]
    a304:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    a308:	ldr	x19, [x24, #48]
    a30c:	sub	x0, x19, #0x1
    a310:	tst	x0, x22
    a314:	b.eq	a104 <__sanitizer_get_allocated_size@@Base+0xe94>  // b.none
    a318:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    a31c:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    a320:	add	x2, x2, #0xfe0
    a324:	add	x0, x0, #0xdb8
    a328:	mov	x4, #0x0                   	// #0
    a32c:	mov	x3, #0x0                   	// #0
    a330:	mov	w1, #0xb1                  	// #177
    a334:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    a338:	bl	71d8 <__sanitizer_print_memory_profile@plt+0xb78>
    a33c:	ldrsw	x2, [x0, #16]
    a340:	cmp	x2, x24
    a344:	csel	x25, x2, x24, ls  // ls = plast
    a348:	bl	71d8 <__sanitizer_print_memory_profile@plt+0xb78>
    a34c:	mov	x1, x0
    a350:	mov	x2, x25
    a354:	mov	x0, x22
    a358:	ldr	w1, [x1, #24]
    a35c:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
    a360:	bl	71d8 <__sanitizer_print_memory_profile@plt+0xb78>
    a364:	ldrb	w0, [x0, #2]
    a368:	cbz	w0, a1b8 <__sanitizer_get_allocated_size@@Base+0xf48>
    a36c:	b	a3a0 <__sanitizer_get_allocated_size@@Base+0x1130>
    a370:	mov	x0, x23
    a374:	mov	x1, x20
    a378:	bl	fff0 <__hwasan_memmove@@Base+0x1568>
    a37c:	adrp	x21, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28398>
    a380:	add	x0, x21, #0xd30
    a384:	and	x22, x20, #0xfffffffffffff0
    a388:	mov	x19, #0xe0000000            	// #3758096384
    a38c:	ldr	x2, [x0, #32]
    a390:	add	x0, x2, x19
    a394:	cmp	x22, x2
    a398:	b.cc	a0f0 <__sanitizer_get_allocated_size@@Base+0xe80>  // b.lo, b.ul, b.last
    a39c:	b	a090 <__sanitizer_get_allocated_size@@Base+0xe20>
    a3a0:	bl	71d8 <__sanitizer_print_memory_profile@plt+0xb78>
    a3a4:	ldr	x25, [x0, #40]
    a3a8:	bl	71d8 <__sanitizer_print_memory_profile@plt+0xb78>
    a3ac:	ldr	x4, [x0, #48]
    a3b0:	orr	x0, x25, x4
    a3b4:	cbnz	x0, a71c <__sanitizer_get_allocated_size@@Base+0x14ac>
    a3b8:	add	x0, x21, #0xd30
    a3bc:	ldrb	w0, [x0, #712]
    a3c0:	tst	w0, #0xff
    a3c4:	b.eq	a1b8 <__sanitizer_get_allocated_size@@Base+0xf48>  // b.none
    a3c8:	mov	w2, #0xbc                  	// #188
    a3cc:	cbz	x19, a3dc <__sanitizer_get_allocated_size@@Base+0x116c>
    a3d0:	mov	x0, x19
    a3d4:	bl	11898 <__hwasan_tag_mismatch_v2@@Base+0x5e0>
    a3d8:	and	w2, w0, #0xff
    a3dc:	mov	x1, x24
    a3e0:	mov	x0, x22
    a3e4:	bl	ebb8 <__hwasan_memmove@@Base+0x130>
    a3e8:	cbnz	x19, a1bc <__sanitizer_get_allocated_size@@Base+0xf4c>
    a3ec:	nop
    a3f0:	add	x0, x21, #0xd30
    a3f4:	mov	w2, #0x1                   	// #1
    a3f8:	add	x0, x0, #0x2e0
    a3fc:	ldxrb	w1, [x0]
    a400:	stxrb	w3, w2, [x0]
    a404:	cbnz	w3, a3fc <__sanitizer_get_allocated_size@@Base+0x118c>
    a408:	dmb	ish
    a40c:	tst	w1, #0xff
    a410:	b.eq	a418 <__sanitizer_get_allocated_size@@Base+0x11a8>  // b.none
    a414:	bl	85d8 <__sanitizer_print_stack_trace@@Base+0x300>
    a418:	cbz	x22, a504 <__sanitizer_get_allocated_size@@Base+0x1294>
    a41c:	add	x0, x21, #0xd30
    a420:	ldr	x1, [x0, #32]
    a424:	cmp	x22, x1
    a428:	b.cc	a43c <__sanitizer_get_allocated_size@@Base+0x11cc>  // b.lo, b.ul, b.last
    a42c:	mov	x2, #0x2000000000          	// #137438953472
    a430:	add	x2, x1, x2
    a434:	cmp	x22, x2
    a438:	b.cc	a5ec <__sanitizer_get_allocated_size@@Base+0x137c>  // b.lo, b.ul, b.last
    a43c:	add	x0, x21, #0xd30
    a440:	ldr	x4, [x0, #48]
    a444:	sub	x1, x4, #0x1
    a448:	tst	x1, x22
    a44c:	b.ne	a6e0 <__sanitizer_get_allocated_size@@Base+0x1470>  // b.any
    a450:	sub	x22, x22, x4
    a454:	add	x0, x0, #0x298
    a458:	mov	w2, #0x1                   	// #1
    a45c:	ldxrb	w1, [x0]
    a460:	stxrb	w3, w2, [x0]
    a464:	cbnz	w3, a45c <__sanitizer_get_allocated_size@@Base+0x11ec>
    a468:	dmb	ish
    a46c:	tst	w1, #0xff
    a470:	b.eq	a478 <__sanitizer_get_allocated_size@@Base+0x1208>  // b.none
    a474:	bl	85d8 <__sanitizer_print_stack_trace@@Base+0x300>
    a478:	add	x0, x21, #0xd30
    a47c:	ldr	x1, [x22, #24]
    a480:	ldr	x2, [x0, #56]
    a484:	ldr	x3, [x2, x1, lsl #3]
    a488:	cmp	x3, x22
    a48c:	b.ne	a700 <__sanitizer_get_allocated_size@@Base+0x1490>  // b.any
    a490:	ldr	x4, [x0, #104]
    a494:	cmp	x1, x4
    a498:	b.cs	a6bc <__sanitizer_get_allocated_size@@Base+0x144c>  // b.hs, b.nlast
    a49c:	sub	x4, x4, #0x1
    a4a0:	ldr	x3, [x22, #8]
    a4a4:	str	x4, [x0, #104]
    a4a8:	ldr	x4, [x2, x4, lsl #3]
    a4ac:	str	x4, [x2, x1, lsl #3]
    a4b0:	ldr	x2, [x0, #688]
    a4b4:	str	x1, [x4, #24]
    a4b8:	sub	x2, x2, x3
    a4bc:	str	x2, [x0, #688]
    a4c0:	ldr	x4, [x0, #128]
    a4c4:	strb	wzr, [x0, #112]
    a4c8:	ldr	x2, [x0, #136]
    a4cc:	add	x4, x4, #0x1
    a4d0:	ldr	x1, [x0, #696]
    a4d4:	sub	x2, x2, x3
    a4d8:	str	x4, [x0, #128]
    a4dc:	sub	x1, x1, x3
    a4e0:	str	x2, [x0, #136]
    a4e4:	str	x1, [x0, #696]
    a4e8:	dmb	ish
    a4ec:	strb	wzr, [x0, #664]
    a4f0:	ldp	x0, x1, [x22]
    a4f4:	mov	w2, #0x0                   	// #0
    a4f8:	bl	ed00 <__hwasan_memmove@@Base+0x278>
    a4fc:	ldp	x0, x1, [x22]
    a500:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
    a504:	dmb	ish
    a508:	add	x21, x21, #0xd30
    a50c:	strb	wzr, [x21, #736]
    a510:	ldp	x21, x22, [sp, #16]
    a514:	ldp	x23, x24, [sp, #32]
    a518:	ldp	x25, x26, [sp, #48]
    a51c:	ldp	x27, x28, [sp, #64]
    a520:	ldr	x30, [sp, #80]
    a524:	ldp	x19, x20, [sp], #112
    a528:	ret
    a52c:	mov	x1, #0x2000000000          	// #137438953472
    a530:	add	x1, x0, x1
    a534:	cmp	x22, x1
    a538:	b.cs	a1d0 <__sanitizer_get_allocated_size@@Base+0xf60>  // b.hs, b.nlast
    a53c:	sub	x0, x22, x0
    a540:	tst	x0, #0x1f00000000
    a544:	ubfx	x25, x0, #32, #5
    a548:	b.eq	a7d0 <__sanitizer_get_allocated_size@@Base+0x1560>  // b.none
    a54c:	lsl	x24, x25, #2
    a550:	add	x23, x19, #0x38
    a554:	add	x5, x24, x25
    a558:	lsl	x7, x5, #4
    a55c:	add	x1, x23, x7
    a560:	ldr	w2, [x1, #4]
    a564:	cbz	w2, a7f0 <__sanitizer_get_allocated_size@@Base+0x1580>
    a568:	add	x7, x19, x7
    a56c:	ldp	w4, w2, [x7, #56]
    a570:	cmp	w4, w2
    a574:	b.eq	a888 <__sanitizer_get_allocated_size@@Base+0x1618>  // b.none
    a578:	add	x24, x24, x25
    a57c:	add	w2, w4, #0x1
    a580:	sub	x0, x0, x25, lsl #32
    a584:	str	w2, [x7, #56]
    a588:	lsl	x24, x24, #2
    a58c:	add	x4, x24, w4, uxtw
    a590:	lsr	x0, x0, #4
    a594:	add	x4, x4, #0x4
    a598:	ldr	x2, [x19, #2632]
    a59c:	str	w0, [x23, x4, lsl #2]
    a5a0:	ldr	x0, [x7, #64]
    a5a4:	sub	x2, x2, x0
    a5a8:	str	x2, [x19, #2632]
    a5ac:	b	a29c <__sanitizer_get_allocated_size@@Base+0x102c>
    a5b0:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    a5b4:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    a5b8:	add	x2, x2, #0x110
    a5bc:	add	x0, x0, #0x40
    a5c0:	mov	x4, #0x0                   	// #0
    a5c4:	mov	x3, #0x0                   	// #0
    a5c8:	mov	w1, #0xb7                  	// #183
    a5cc:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    a5d0:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    a5d4:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    a5d8:	mov	x3, x24
    a5dc:	add	x2, x2, #0x20
    a5e0:	add	x0, x0, #0x40
    a5e4:	mov	w1, #0x62                  	// #98
    a5e8:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    a5ec:	sub	x7, x22, x1
    a5f0:	tst	x7, #0x1f00000000
    a5f4:	ubfx	x20, x7, #32, #5
    a5f8:	b.eq	a7d0 <__sanitizer_get_allocated_size@@Base+0x1560>  // b.none
    a5fc:	lsl	x19, x20, #2
    a600:	add	x0, x0, #0x2f0
    a604:	add	x1, x19, x20
    a608:	add	x1, x0, x1, lsl #4
    a60c:	ldr	w2, [x1, #4]
    a610:	cbz	w2, a8e8 <__sanitizer_get_allocated_size@@Base+0x1678>
    a614:	add	x4, x19, x20
    a618:	add	x23, x21, #0xd30
    a61c:	add	x0, x23, #0x2f0
    a620:	lsl	x4, x4, #4
    a624:	add	x2, x0, x4
    a628:	ldr	w4, [x0, x4]
    a62c:	ldr	w2, [x2, #4]
    a630:	cmp	w4, w2
    a634:	b.eq	a8cc <__sanitizer_get_allocated_size@@Base+0x165c>  // b.none
    a638:	add	x19, x19, x20
    a63c:	add	x0, x21, #0xd30
    a640:	add	x0, x0, #0x2f0
    a644:	sub	x1, x7, x20, lsl #32
    a648:	lsl	x4, x19, #4
    a64c:	lsl	x19, x19, #2
    a650:	lsr	x2, x1, #4
    a654:	add	x5, x0, x4
    a658:	ldr	x3, [x0, #2576]
    a65c:	ldr	w1, [x0, x4]
    a660:	ldr	x5, [x5, #8]
    a664:	add	w6, w1, #0x1
    a668:	add	x1, x19, w1, uxtw
    a66c:	str	w6, [x0, x4]
    a670:	add	x1, x1, #0x4
    a674:	sub	x3, x3, x5
    a678:	str	x3, [x0, #2576]
    a67c:	str	w2, [x0, x1, lsl #2]
    a680:	b	a504 <__sanitizer_get_allocated_size@@Base+0x1294>
    a684:	mov	x3, x2
    a688:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    a68c:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    a690:	add	x0, x0, #0x40
    a694:	add	x2, x2, #0x128
    a698:	mov	x4, #0x10                  	// #16
    a69c:	mov	w1, #0xcb                  	// #203
    a6a0:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    a6a4:	mov	x3, x1
    a6a8:	mov	x2, x25
    a6ac:	mov	x1, x20
    a6b0:	mov	x0, x23
    a6b4:	bl	103e8 <__hwasan_memmove@@Base+0x1960>
    a6b8:	b	a188 <__sanitizer_get_allocated_size@@Base+0xf18>
    a6bc:	mov	x3, x1
    a6c0:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    a6c4:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    a6c8:	add	x2, x2, #0x170
    a6cc:	add	x0, x0, #0xdb8
    a6d0:	mov	w1, #0x8c                  	// #140
    a6d4:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    a6d8:	mov	w19, #0x40                  	// #64
    a6dc:	b	a0d8 <__sanitizer_get_allocated_size@@Base+0xe68>
    a6e0:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    a6e4:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    a6e8:	add	x2, x2, #0xd90
    a6ec:	add	x0, x0, #0xdb8
    a6f0:	mov	x4, #0x0                   	// #0
    a6f4:	mov	x3, #0x0                   	// #0
    a6f8:	mov	w1, #0x12d                 	// #301
    a6fc:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    a700:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    a704:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    a708:	mov	x4, x22
    a70c:	add	x2, x2, #0x150
    a710:	add	x0, x0, #0xdb8
    a714:	mov	w1, #0x8b                  	// #139
    a718:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    a71c:	ldr	w1, [x23, #8]
    a720:	mov	w6, #0x7                   	// #7
    a724:	mov	w2, #0xb28c                	// #45708
    a728:	mov	w3, #0xe995                	// #59797
    a72c:	cmp	w1, w6
    a730:	movk	w2, #0x9747, lsl #16
    a734:	csel	w0, w1, w6, ls  // ls = plast
    a738:	movk	w3, #0x5bd1, lsl #16
    a73c:	eor	w0, w0, w2
    a740:	csel	w6, w1, w6, ls  // ls = plast
    a744:	cmp	w1, #0x1
    a748:	ldr	x7, [x23]
    a74c:	mul	w1, w0, w3
    a750:	b.ls	a780 <__sanitizer_get_allocated_size@@Base+0x1510>  // b.plast
    a754:	mov	x2, #0x1                   	// #1
    a758:	ldr	x0, [x7, x2, lsl #3]
    a75c:	mul	w1, w1, w3
    a760:	add	x2, x2, #0x1
    a764:	and	w0, w0, #0xfff
    a768:	cmp	x6, x2
    a76c:	mul	w0, w0, w3
    a770:	eor	w0, w0, w0, lsr #24
    a774:	mul	w0, w0, w3
    a778:	eor	w1, w0, w1
    a77c:	b.ne	a758 <__sanitizer_get_allocated_size@@Base+0x14e8>  // b.any
    a780:	eor	w0, w1, w1, lsr #13
    a784:	mov	w1, #0xe995                	// #59797
    a788:	movk	w1, #0x5bd1, lsl #16
    a78c:	mul	w0, w0, w1
    a790:	eor	w1, w0, w0, lsr #15
    a794:	str	x1, [sp, #104]
    a798:	cmp	x25, x1
    a79c:	ccmp	x4, x1, #0x0, ls  // ls = plast
    a7a0:	b.cc	a1b8 <__sanitizer_get_allocated_size@@Base+0xf48>  // b.lo, b.ul, b.last
    a7a4:	bl	71d8 <__sanitizer_print_memory_profile@plt+0xb78>
    a7a8:	ldrb	w0, [x0, #56]
    a7ac:	ldr	x1, [sp, #104]
    a7b0:	cbz	w0, a3b8 <__sanitizer_get_allocated_size@@Base+0x1148>
    a7b4:	mov	x2, #0x0                   	// #0
    a7b8:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    a7bc:	add	x0, x0, #0x90
    a7c0:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    a7c4:	mov	x0, x23
    a7c8:	bl	27f58 <__sanitizer_cov_dump@@Base+0x1338>
    a7cc:	b	a3b8 <__sanitizer_get_allocated_size@@Base+0x1148>
    a7d0:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    a7d4:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    a7d8:	add	x2, x2, #0x388
    a7dc:	add	x0, x0, #0x3a0
    a7e0:	mov	x4, #0x0                   	// #0
    a7e4:	mov	x3, #0x0                   	// #0
    a7e8:	mov	w1, #0x31                  	// #49
    a7ec:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    a7f0:	mov	x4, #0x1                   	// #1
    a7f4:	mov	w10, w4
    a7f8:	mov	w8, #0x400                 	// #1024
    a7fc:	mov	w11, #0x8                   	// #8
    a800:	mov	x9, #0x200                 	// #512
    a804:	nop
    a808:	lsl	x5, x4, #5
    a80c:	add	x3, x4, x4, lsl #2
    a810:	add	x4, x4, #0x1
    a814:	add	x3, x19, x3, lsl #4
    a818:	udiv	w2, w8, w5
    a81c:	mov	x6, x3
    a820:	str	x5, [x3, #64]
    a824:	cmp	w2, #0x8
    a828:	csel	w2, w2, w11, ls  // ls = plast
    a82c:	lsl	w2, w2, #1
    a830:	str	w2, [x3, #60]
    a834:	cmp	x4, #0x1f
    a838:	b.eq	a8b8 <__sanitizer_get_allocated_size@@Base+0x1648>  // b.none
    a83c:	cmp	x4, #0x10
    a840:	b.ls	a808 <__sanitizer_get_allocated_size@@Base+0x1598>  // b.plast
    a844:	sub	x5, x4, #0x10
    a848:	add	x4, x4, #0x1
    a84c:	and	x3, x5, #0x1
    a850:	add	x6, x6, #0x50
    a854:	lsr	x5, x5, #1
    a858:	lsl	x5, x9, x5
    a85c:	lsr	x2, x5, #1
    a860:	madd	x2, x2, x3, x5
    a864:	str	x2, [x6, #64]
    a868:	udiv	w2, w8, w2
    a86c:	cmp	w2, #0x0
    a870:	csel	w2, w2, w10, ne  // ne = any
    a874:	cmp	x4, #0x20
    a878:	lsl	w2, w2, #1
    a87c:	str	w2, [x6, #60]
    a880:	b.ne	a834 <__sanitizer_get_allocated_size@@Base+0x15c4>  // b.any
    a884:	b	a568 <__sanitizer_get_allocated_size@@Base+0x12f8>
    a888:	add	x21, x21, #0xd30
    a88c:	lsr	w4, w4, #1
    a890:	mov	x0, x23
    a894:	mov	x2, x21
    a898:	mov	x3, x25
    a89c:	str	x7, [sp, #104]
    a8a0:	bl	c518 <__sanitizer_get_allocated_size@@Base+0x32a8>
    a8a4:	ldr	x7, [sp, #104]
    a8a8:	ldr	x0, [x21, #32]
    a8ac:	ldr	w4, [x7, #56]
    a8b0:	sub	x0, x22, x0
    a8b4:	b	a578 <__sanitizer_get_allocated_size@@Base+0x1308>
    a8b8:	mov	w3, #0x10                  	// #16
    a8bc:	mov	x2, #0x40                  	// #64
    a8c0:	str	w3, [x19, #2540]
    a8c4:	str	x2, [x19, #2544]
    a8c8:	b	a568 <__sanitizer_get_allocated_size@@Base+0x12f8>
    a8cc:	lsr	w4, w4, #1
    a8d0:	mov	x3, x20
    a8d4:	mov	x2, x23
    a8d8:	bl	c518 <__sanitizer_get_allocated_size@@Base+0x32a8>
    a8dc:	ldr	x1, [x23, #32]
    a8e0:	sub	x7, x22, x1
    a8e4:	b	a638 <__sanitizer_get_allocated_size@@Base+0x13c8>
    a8e8:	mov	x2, #0x1                   	// #1
    a8ec:	mov	x6, x0
    a8f0:	mov	w11, w2
    a8f4:	mov	w8, #0x400                 	// #1024
    a8f8:	mov	w12, #0x8                   	// #8
    a8fc:	mov	x10, #0x200                 	// #512
    a900:	lsl	x9, x2, #5
    a904:	add	x0, x2, x2, lsl #2
    a908:	add	x2, x2, #0x1
    a90c:	lsl	x0, x0, #4
    a910:	udiv	w3, w8, w9
    a914:	add	x4, x6, x0
    a918:	add	x0, x0, #0x54
    a91c:	add	x5, x6, x0
    a920:	str	x9, [x4, #8]
    a924:	cmp	w3, #0x8
    a928:	csel	w3, w3, w12, ls  // ls = plast
    a92c:	lsl	w3, w3, #1
    a930:	str	w3, [x4, #4]
    a934:	cmp	x2, #0x1f
    a938:	b.eq	a988 <__sanitizer_get_allocated_size@@Base+0x1718>  // b.none
    a93c:	cmp	x2, #0x10
    a940:	b.ls	a900 <__sanitizer_get_allocated_size@@Base+0x1690>  // b.plast
    a944:	sub	x4, x2, #0x10
    a948:	add	x2, x2, #0x1
    a94c:	and	x3, x4, #0x1
    a950:	add	x5, x5, #0x50
    a954:	lsr	x4, x4, #1
    a958:	lsl	x4, x10, x4
    a95c:	lsr	x0, x4, #1
    a960:	madd	x0, x0, x3, x4
    a964:	stur	x0, [x5, #-76]
    a968:	udiv	w0, w8, w0
    a96c:	cmp	w0, #0x0
    a970:	csel	w0, w0, w11, ne  // ne = any
    a974:	cmp	x2, #0x20
    a978:	lsl	w0, w0, #1
    a97c:	stur	w0, [x5, #-80]
    a980:	b.ne	a934 <__sanitizer_get_allocated_size@@Base+0x16c4>  // b.any
    a984:	b	a614 <__sanitizer_get_allocated_size@@Base+0x13a4>
    a988:	add	x0, x21, #0xd30
    a98c:	mov	w3, #0x10                  	// #16
    a990:	mov	x2, #0x40                  	// #64
    a994:	str	w3, [x0, #3236]
    a998:	str	x2, [x0, #3240]
    a99c:	b	a614 <__sanitizer_get_allocated_size@@Base+0x13a4>
    a9a0:	mov	x2, x0
    a9a4:	mov	x0, x1
    a9a8:	mov	x1, x2
    a9ac:	b	9fe8 <__sanitizer_get_allocated_size@@Base+0xd78>
    a9b0:	stp	x19, x20, [sp, #-64]!
    a9b4:	mov	x20, x1
    a9b8:	stp	x21, x22, [sp, #16]
    a9bc:	mov	x22, x2
    a9c0:	str	x30, [sp, #48]
    a9c4:	cbz	x0, aba0 <__sanitizer_get_allocated_size@@Base+0x1930>
    a9c8:	mov	x19, x0
    a9cc:	cbz	x1, abc8 <__sanitizer_get_allocated_size@@Base+0x1958>
    a9d0:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    a9d4:	ubfx	x0, x0, #4, #52
    a9d8:	lsr	x2, x19, #56
    a9dc:	ldr	x1, [x1, #3848]
    a9e0:	ldr	x1, [x1]
    a9e4:	ldrb	w0, [x0, x1]
    a9e8:	cmp	w0, w2
    a9ec:	b.eq	aa18 <__sanitizer_get_allocated_size@@Base+0x17a8>  // b.none
    a9f0:	cmp	w0, #0xf
    a9f4:	b.hi	ab24 <__sanitizer_get_allocated_size@@Base+0x18b4>  // b.pmore
    a9f8:	and	x1, x19, #0xf
    a9fc:	add	x1, x1, #0x1
    aa00:	cmp	x1, w0, uxtb
    aa04:	b.hi	ab24 <__sanitizer_get_allocated_size@@Base+0x18b4>  // b.pmore
    aa08:	orr	x0, x19, #0xf
    aa0c:	ldrb	w0, [x0]
    aa10:	cmp	w0, w2
    aa14:	b.ne	ab24 <__sanitizer_get_allocated_size@@Base+0x18b4>  // b.any
    aa18:	mov	x0, #0x80000000            	// #2147483648
    aa1c:	cmp	x20, x0
    aa20:	b.ls	aa5c <__sanitizer_get_allocated_size@@Base+0x17ec>  // b.plast
    aa24:	bl	12188 <_ZdaPvRKSt9nothrow_t@@Base+0x408>
    aa28:	tst	w0, #0xff
    aa2c:	b.eq	ac14 <__sanitizer_get_allocated_size@@Base+0x19a4>  // b.none
    aa30:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    aa34:	mov	x1, x20
    aa38:	add	x0, x0, #0xa0
    aa3c:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
    aa40:	mov	x21, #0x0                   	// #0
    aa44:	bl	23670 <__sanitizer_sandbox_on_notify@@Base+0x28>
    aa48:	mov	x0, x21
    aa4c:	ldp	x21, x22, [sp, #16]
    aa50:	ldr	x30, [sp, #48]
    aa54:	ldp	x19, x20, [sp], #64
    aa58:	ret
    aa5c:	mov	x1, x20
    aa60:	mov	x0, x22
    aa64:	mov	w3, #0x0                   	// #0
    aa68:	mov	x2, #0x8                   	// #8
    aa6c:	bl	95a0 <__sanitizer_get_allocated_size@@Base+0x330>
    aa70:	mov	x21, x0
    aa74:	cbz	x0, aa40 <__sanitizer_get_allocated_size@@Base+0x17d0>
    aa78:	adrp	x1, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28398>
    aa7c:	add	x0, x1, #0xd30
    aa80:	stp	x23, x24, [sp, #32]
    aa84:	and	x23, x19, #0xffffffffffffff
    aa88:	mov	x2, #0xe0000000            	// #3758096384
    aa8c:	ldr	x0, [x0, #32]
    aa90:	add	x2, x0, x2
    aa94:	cmp	x23, x0
    aa98:	b.cs	ab40 <__sanitizer_get_allocated_size@@Base+0x18d0>  // b.hs, b.nlast
    aa9c:	add	x24, x1, #0xd30
    aaa0:	ldr	x0, [x24, #48]
    aaa4:	sub	x1, x0, #0x1
    aaa8:	tst	x23, x1
    aaac:	b.eq	aadc <__sanitizer_get_allocated_size@@Base+0x186c>  // b.none
    aab0:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    aab4:	mov	x2, x23
    aab8:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    aabc:	add	x0, x0, #0xfc8
    aac0:	ldr	x1, [x1, #4024]
    aac4:	ldr	x1, [x1]
    aac8:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    aacc:	ldr	x0, [x24, #48]
    aad0:	sub	x1, x0, #0x1
    aad4:	tst	x23, x1
    aad8:	b.ne	abf4 <__sanitizer_get_allocated_size@@Base+0x1984>  // b.any
    aadc:	sub	x0, x23, x0
    aae0:	add	x0, x0, #0x20
    aae4:	ldr	w2, [x0]
    aae8:	mov	x1, x23
    aaec:	and	x0, x21, #0xffffffffffffff
    aaf0:	and	x2, x2, #0x7fffffff
    aaf4:	cmp	x2, x20
    aaf8:	csel	x2, x2, x20, ls  // ls = plast
    aafc:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
    ab00:	mov	x1, x19
    ab04:	mov	x0, x22
    ab08:	bl	9fe8 <__sanitizer_get_allocated_size@@Base+0xd78>
    ab0c:	mov	x0, x21
    ab10:	ldp	x21, x22, [sp, #16]
    ab14:	ldp	x23, x24, [sp, #32]
    ab18:	ldr	x30, [sp, #48]
    ab1c:	ldp	x19, x20, [sp], #64
    ab20:	ret
    ab24:	mov	x0, x22
    ab28:	mov	x1, x19
    ab2c:	bl	fff0 <__hwasan_memmove@@Base+0x1568>
    ab30:	mov	x0, #0x80000000            	// #2147483648
    ab34:	cmp	x20, x0
    ab38:	b.ls	aa5c <__sanitizer_get_allocated_size@@Base+0x17ec>  // b.plast
    ab3c:	b	aa24 <__sanitizer_get_allocated_size@@Base+0x17b4>
    ab40:	mov	x3, #0x2000000000          	// #137438953472
    ab44:	add	x3, x0, x3
    ab48:	cmp	x23, x3
    ab4c:	b.cs	aa9c <__sanitizer_get_allocated_size@@Base+0x182c>  // b.hs, b.nlast
    ab50:	sub	x0, x23, x0
    ab54:	ubfx	x1, x0, #32, #5
    ab58:	cmp	x1, #0x1f
    ab5c:	b.eq	abec <__sanitizer_get_allocated_size@@Base+0x197c>  // b.none
    ab60:	lsl	w3, w1, #5
    ab64:	cmp	x1, #0x10
    ab68:	b.ls	ab88 <__sanitizer_get_allocated_size@@Base+0x1918>  // b.plast
    ab6c:	sub	x3, x1, #0x10
    ab70:	mov	x4, #0x200                 	// #512
    ab74:	and	x5, x3, #0x1
    ab78:	lsr	x3, x3, #1
    ab7c:	lsl	x4, x4, x3
    ab80:	lsr	x3, x4, #1
    ab84:	madd	w3, w3, w5, w4
    ab88:	udiv	w0, w0, w3
    ab8c:	lsl	x1, x1, #32
    ab90:	add	x0, x0, #0x1
    ab94:	sub	x0, x1, x0, lsl #3
    ab98:	add	x0, x0, x2
    ab9c:	b	aae4 <__sanitizer_get_allocated_size@@Base+0x1874>
    aba0:	mov	x0, #0x80000000            	// #2147483648
    aba4:	cmp	x1, x0
    aba8:	b.hi	aa24 <__sanitizer_get_allocated_size@@Base+0x17b4>  // b.pmore
    abac:	mov	x0, x2
    abb0:	mov	w3, #0x0                   	// #0
    abb4:	mov	x2, #0x8                   	// #8
    abb8:	bl	95a0 <__sanitizer_get_allocated_size@@Base+0x330>
    abbc:	mov	x21, x0
    abc0:	cbnz	x0, aa48 <__sanitizer_get_allocated_size@@Base+0x17d8>
    abc4:	b	aa40 <__sanitizer_get_allocated_size@@Base+0x17d0>
    abc8:	mov	x1, x0
    abcc:	mov	x21, #0x0                   	// #0
    abd0:	mov	x0, x2
    abd4:	bl	9fe8 <__sanitizer_get_allocated_size@@Base+0xd78>
    abd8:	mov	x0, x21
    abdc:	ldp	x21, x22, [sp, #16]
    abe0:	ldr	x30, [sp, #48]
    abe4:	ldp	x19, x20, [sp], #64
    abe8:	ret
    abec:	mov	w3, #0x40                  	// #64
    abf0:	b	ab88 <__sanitizer_get_allocated_size@@Base+0x1918>
    abf4:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    abf8:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    abfc:	add	x2, x2, #0xfe0
    ac00:	add	x0, x0, #0xdb8
    ac04:	mov	x4, #0x0                   	// #0
    ac08:	mov	x3, #0x0                   	// #0
    ac0c:	mov	w1, #0xb1                  	// #177
    ac10:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    ac14:	mov	x2, x22
    ac18:	mov	x0, x20
    ac1c:	mov	x1, #0x80000000            	// #2147483648
    ac20:	stp	x23, x24, [sp, #32]
    ac24:	bl	26f60 <__sanitizer_cov_dump@@Base+0x340>
    ac28:	stp	x19, x20, [sp, #-64]!
    ac2c:	mov	x19, x2
    ac30:	stp	x21, x22, [sp, #16]
    ac34:	mov	x22, x3
    ac38:	stp	x23, x24, [sp, #32]
    ac3c:	mov	x23, x0
    ac40:	str	x30, [sp, #48]
    ac44:	cbz	x2, ad8c <__sanitizer_get_allocated_size@@Base+0x1b1c>
    ac48:	umulh	x0, x1, x2
    ac4c:	mov	x20, x1
    ac50:	cbnz	x0, aeb0 <__sanitizer_get_allocated_size@@Base+0x1c40>
    ac54:	mul	x19, x2, x1
    ac58:	cbz	x23, ae5c <__sanitizer_get_allocated_size@@Base+0x1bec>
    ac5c:	cbz	x19, ad90 <__sanitizer_get_allocated_size@@Base+0x1b20>
    ac60:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    ac64:	ubfx	x1, x23, #4, #52
    ac68:	lsr	x3, x23, #56
    ac6c:	ldr	x2, [x2, #3848]
    ac70:	ldr	x0, [x2]
    ac74:	ldrb	w0, [x1, x0]
    ac78:	cmp	w0, w3
    ac7c:	b.eq	aca8 <__sanitizer_get_allocated_size@@Base+0x1a38>  // b.none
    ac80:	cmp	w0, #0xf
    ac84:	b.hi	adb8 <__sanitizer_get_allocated_size@@Base+0x1b48>  // b.pmore
    ac88:	and	x1, x23, #0xf
    ac8c:	add	x1, x1, #0x1
    ac90:	cmp	x1, w0, uxtb
    ac94:	b.hi	adb8 <__sanitizer_get_allocated_size@@Base+0x1b48>  // b.pmore
    ac98:	orr	x0, x23, #0xf
    ac9c:	ldrb	w0, [x0]
    aca0:	cmp	w0, w3
    aca4:	b.ne	adb8 <__sanitizer_get_allocated_size@@Base+0x1b48>  // b.any
    aca8:	mov	x20, #0x80000000            	// #2147483648
    acac:	cmp	x19, x20
    acb0:	b.ls	acf0 <__sanitizer_get_allocated_size@@Base+0x1a80>  // b.plast
    acb4:	bl	12188 <_ZdaPvRKSt9nothrow_t@@Base+0x408>
    acb8:	tst	w0, #0xff
    acbc:	b.eq	aedc <__sanitizer_get_allocated_size@@Base+0x1c6c>  // b.none
    acc0:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    acc4:	mov	x1, x19
    acc8:	add	x0, x0, #0xa0
    accc:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
    acd0:	mov	x21, #0x0                   	// #0
    acd4:	bl	23670 <__sanitizer_sandbox_on_notify@@Base+0x28>
    acd8:	mov	x0, x21
    acdc:	ldp	x21, x22, [sp, #16]
    ace0:	ldp	x23, x24, [sp, #32]
    ace4:	ldr	x30, [sp, #48]
    ace8:	ldp	x19, x20, [sp], #64
    acec:	ret
    acf0:	mov	x1, x19
    acf4:	mov	x0, x22
    acf8:	mov	w3, #0x0                   	// #0
    acfc:	mov	x2, #0x8                   	// #8
    ad00:	bl	95a0 <__sanitizer_get_allocated_size@@Base+0x330>
    ad04:	mov	x21, x0
    ad08:	cbz	x0, acd0 <__sanitizer_get_allocated_size@@Base+0x1a60>
    ad0c:	adrp	x0, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28398>
    ad10:	add	x1, x0, #0xd30
    ad14:	and	x20, x23, #0xffffffffffffff
    ad18:	mov	x2, #0xe0000000            	// #3758096384
    ad1c:	ldr	x1, [x1, #32]
    ad20:	add	x2, x1, x2
    ad24:	cmp	x20, x1
    ad28:	b.cc	add4 <__sanitizer_get_allocated_size@@Base+0x1b64>  // b.lo, b.ul, b.last
    ad2c:	mov	x3, #0x2000000000          	// #137438953472
    ad30:	add	x3, x1, x3
    ad34:	cmp	x20, x3
    ad38:	b.cs	add4 <__sanitizer_get_allocated_size@@Base+0x1b64>  // b.hs, b.nlast
    ad3c:	sub	x1, x20, x1
    ad40:	ubfx	x0, x1, #32, #5
    ad44:	cmp	x0, #0x1f
    ad48:	b.eq	aea8 <__sanitizer_get_allocated_size@@Base+0x1c38>  // b.none
    ad4c:	lsl	w3, w0, #5
    ad50:	cmp	x0, #0x10
    ad54:	b.ls	ad74 <__sanitizer_get_allocated_size@@Base+0x1b04>  // b.plast
    ad58:	sub	x3, x0, #0x10
    ad5c:	mov	x4, #0x200                 	// #512
    ad60:	and	x5, x3, #0x1
    ad64:	lsr	x3, x3, #1
    ad68:	lsl	x4, x4, x3
    ad6c:	lsr	x3, x4, #1
    ad70:	madd	w3, w3, w5, w4
    ad74:	udiv	w1, w1, w3
    ad78:	lsl	x0, x0, #32
    ad7c:	add	x1, x1, #0x1
    ad80:	sub	x1, x0, x1, lsl #3
    ad84:	add	x1, x1, x2
    ad88:	b	ae1c <__sanitizer_get_allocated_size@@Base+0x1bac>
    ad8c:	cbz	x0, ae68 <__sanitizer_get_allocated_size@@Base+0x1bf8>
    ad90:	mov	x1, x23
    ad94:	mov	x0, x22
    ad98:	mov	x21, #0x0                   	// #0
    ad9c:	bl	9fe8 <__sanitizer_get_allocated_size@@Base+0xd78>
    ada0:	mov	x0, x21
    ada4:	ldp	x21, x22, [sp, #16]
    ada8:	ldp	x23, x24, [sp, #32]
    adac:	ldr	x30, [sp, #48]
    adb0:	ldp	x19, x20, [sp], #64
    adb4:	ret
    adb8:	mov	x1, x23
    adbc:	mov	x0, x22
    adc0:	bl	fff0 <__hwasan_memmove@@Base+0x1568>
    adc4:	mov	x20, #0x80000000            	// #2147483648
    adc8:	cmp	x19, x20
    adcc:	b.ls	acf0 <__sanitizer_get_allocated_size@@Base+0x1a80>  // b.plast
    add0:	b	acb4 <__sanitizer_get_allocated_size@@Base+0x1a44>
    add4:	add	x24, x0, #0xd30
    add8:	ldr	x1, [x24, #48]
    addc:	sub	x0, x1, #0x1
    ade0:	tst	x20, x0
    ade4:	b.eq	ae14 <__sanitizer_get_allocated_size@@Base+0x1ba4>  // b.none
    ade8:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    adec:	mov	x2, x20
    adf0:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    adf4:	add	x0, x0, #0xfc8
    adf8:	ldr	x1, [x1, #4024]
    adfc:	ldr	x1, [x1]
    ae00:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    ae04:	ldr	x1, [x24, #48]
    ae08:	sub	x0, x1, #0x1
    ae0c:	tst	x20, x0
    ae10:	b.ne	ae88 <__sanitizer_get_allocated_size@@Base+0x1c18>  // b.any
    ae14:	sub	x1, x20, x1
    ae18:	add	x1, x1, #0x20
    ae1c:	ldr	w2, [x1]
    ae20:	and	x0, x21, #0xffffffffffffff
    ae24:	mov	x1, x20
    ae28:	and	x2, x2, #0x7fffffff
    ae2c:	cmp	x2, x19
    ae30:	csel	x2, x2, x19, ls  // ls = plast
    ae34:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
    ae38:	mov	x1, x23
    ae3c:	mov	x0, x22
    ae40:	bl	9fe8 <__sanitizer_get_allocated_size@@Base+0xd78>
    ae44:	mov	x0, x21
    ae48:	ldp	x21, x22, [sp, #16]
    ae4c:	ldp	x23, x24, [sp, #32]
    ae50:	ldr	x30, [sp, #48]
    ae54:	ldp	x19, x20, [sp], #64
    ae58:	ret
    ae5c:	mov	x20, #0x80000000            	// #2147483648
    ae60:	cmp	x19, x20
    ae64:	b.hi	acb4 <__sanitizer_get_allocated_size@@Base+0x1a44>  // b.pmore
    ae68:	mov	x1, x19
    ae6c:	mov	x0, x22
    ae70:	mov	w3, #0x0                   	// #0
    ae74:	mov	x2, #0x8                   	// #8
    ae78:	bl	95a0 <__sanitizer_get_allocated_size@@Base+0x330>
    ae7c:	mov	x21, x0
    ae80:	cbnz	x0, acd8 <__sanitizer_get_allocated_size@@Base+0x1a68>
    ae84:	b	acd0 <__sanitizer_get_allocated_size@@Base+0x1a60>
    ae88:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    ae8c:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    ae90:	add	x2, x2, #0xfe0
    ae94:	add	x0, x0, #0xdb8
    ae98:	mov	x4, #0x0                   	// #0
    ae9c:	mov	x3, #0x0                   	// #0
    aea0:	mov	w1, #0xb1                  	// #177
    aea4:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    aea8:	mov	w3, #0x40                  	// #64
    aeac:	b	ad74 <__sanitizer_get_allocated_size@@Base+0x1b04>
    aeb0:	bl	64f0 <__errno_location@plt>
    aeb4:	mov	x21, #0x0                   	// #0
    aeb8:	mov	w1, #0xc                   	// #12
    aebc:	str	w1, [x0]
    aec0:	bl	12188 <_ZdaPvRKSt9nothrow_t@@Base+0x408>
    aec4:	tst	w0, #0xff
    aec8:	b.ne	acd8 <__sanitizer_get_allocated_size@@Base+0x1a68>  // b.any
    aecc:	mov	x2, x22
    aed0:	mov	x1, x19
    aed4:	mov	x0, x20
    aed8:	bl	26da0 <__sanitizer_cov_dump@@Base+0x180>
    aedc:	mov	x2, x22
    aee0:	mov	x1, x20
    aee4:	mov	x0, x19
    aee8:	bl	26f60 <__sanitizer_cov_dump@@Base+0x340>
    aeec:	nop
    aef0:	stp	x19, x20, [sp, #-96]!
    aef4:	cmp	x2, #0x1f
    aef8:	mov	x19, x3
    aefc:	stp	x23, x24, [sp, #32]
    af00:	ldr	x23, [x0, #32]
    af04:	stp	x21, x22, [sp, #16]
    af08:	mov	x22, x1
    af0c:	stp	x25, x26, [sp, #48]
    af10:	mov	x26, x0
    af14:	mov	x25, x2
    af18:	str	x30, [sp, #80]
    af1c:	add	x23, x23, x2, lsl #32
    af20:	b.eq	b288 <__sanitizer_get_allocated_size@@Base+0x2018>  // b.none
    af24:	lsl	x24, x2, #5
    af28:	cmp	x2, #0x10
    af2c:	b.ls	af4c <__sanitizer_get_allocated_size@@Base+0x1cdc>  // b.plast
    af30:	sub	x0, x2, #0x10
    af34:	mov	x24, #0x200                 	// #512
    af38:	and	x1, x0, #0x1
    af3c:	lsr	x0, x0, #1
    af40:	lsl	x0, x24, x0
    af44:	lsr	x24, x0, #1
    af48:	madd	x24, x24, x1, x0
    af4c:	ldr	x0, [x19, #104]
    af50:	ldr	x3, [x19, #120]
    af54:	madd	x20, x4, x24, x0
    af58:	cmp	x3, x20
    af5c:	b.cs	b280 <__sanitizer_get_allocated_size@@Base+0x2010>  // b.hs, b.nlast
    af60:	cbz	x3, b2fc <__sanitizer_get_allocated_size@@Base+0x208c>
    af64:	ldr	x0, [x19, #128]
    af68:	mov	x4, #0xffff                	// #65535
    af6c:	add	x20, x20, x4
    af70:	mov	x1, #0xe0000000            	// #3758096384
    af74:	sub	x20, x20, x3
    af78:	add	x0, x3, x0
    af7c:	and	x20, x20, #0xffffffffffff0000
    af80:	add	x0, x0, x20
    af84:	cmp	x0, x1
    af88:	b.hi	b290 <__sanitizer_get_allocated_size@@Base+0x2020>  // b.pmore
    af8c:	add	x21, x23, x3
    af90:	mov	x2, x20
    af94:	adrp	x3, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    af98:	mov	x1, x21
    af9c:	add	x3, x3, #0x188
    afa0:	mov	x0, x26
    afa4:	bl	24f50 <__sanitizer_sandbox_on_notify@@Base+0x1908>
    afa8:	cbz	x0, b23c <__sanitizer_get_allocated_size@@Base+0x1fcc>
    afac:	stp	x27, x28, [sp, #64]
    afb0:	mov	x4, x0
    afb4:	mov	x3, x21
    afb8:	cmp	x21, x0
    afbc:	b.ne	b268 <__sanitizer_get_allocated_size@@Base+0x1ff8>  // b.any
    afc0:	bl	7230 <__sanitizer_print_memory_profile@plt+0xbd0>
    afc4:	ldr	x1, [x22, #24]
    afc8:	ldr	x3, [x19, #120]
    afcc:	add	x1, x20, x1
    afd0:	ldr	x0, [x19, #104]
    afd4:	str	x1, [x22, #24]
    afd8:	add	x3, x20, x3
    afdc:	str	x3, [x19, #120]
    afe0:	sub	x27, x3, x0
    afe4:	ldr	x1, [x19, #112]
    afe8:	udiv	x20, x27, x24
    afec:	ldr	x0, [x19, #128]
    aff0:	lsl	x22, x20, #3
    aff4:	add	x1, x22, x1
    aff8:	cmp	x0, x1
    affc:	b.cs	b068 <__sanitizer_get_allocated_size@@Base+0x1df8>  // b.hs, b.nlast
    b000:	sub	x1, x1, x0
    b004:	mov	x2, #0xffff                	// #65535
    b008:	add	x1, x1, x2
    b00c:	ands	x21, x1, #0xffffffffffff0000
    b010:	b.eq	b068 <__sanitizer_get_allocated_size@@Base+0x1df8>  // b.none
    b014:	add	x3, x0, x3
    b018:	mov	x1, #0xe0000000            	// #3758096384
    b01c:	add	x3, x3, x21
    b020:	cmp	x3, x1
    b024:	b.hi	b36c <__sanitizer_get_allocated_size@@Base+0x20fc>  // b.pmore
    b028:	sub	x0, x1, x0
    b02c:	sub	x25, x23, x21
    b030:	add	x25, x25, x0
    b034:	adrp	x3, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    b038:	mov	x1, x25
    b03c:	add	x3, x3, #0x210
    b040:	mov	x2, x21
    b044:	mov	x0, x26
    b048:	bl	24f50 <__sanitizer_sandbox_on_notify@@Base+0x1908>
    b04c:	cbz	x0, b238 <__sanitizer_get_allocated_size@@Base+0x1fc8>
    b050:	cmp	x25, x0
    b054:	b.ne	b25c <__sanitizer_get_allocated_size@@Base+0x1fec>  // b.any
    b058:	bl	7230 <__sanitizer_print_memory_profile@plt+0xbd0>
    b05c:	ldr	x0, [x19, #128]
    b060:	add	x0, x0, x21
    b064:	str	x0, [x19, #128]
    b068:	ldp	x21, x2, [x19, #88]
    b06c:	add	x21, x20, x21
    b070:	lsl	x25, x21, #2
    b074:	cmp	x2, x21, lsl #2
    b078:	b.cc	b1d4 <__sanitizer_get_allocated_size@@Base+0x1f64>  // b.lo, b.ul, b.last
    b07c:	mov	x4, x21
    b080:	mov	x0, #0xe0000000            	// #3758096384
    b084:	cmp	x27, x24
    b088:	add	x23, x23, x0
    b08c:	ldr	x3, [x19, #104]
    b090:	b.cc	b17c <__sanitizer_get_allocated_size@@Base+0x1f0c>  // b.lo, b.ul, b.last
    b094:	sub	x21, x21, #0x1
    b098:	cmp	x20, #0x4
    b09c:	b.ls	b344 <__sanitizer_get_allocated_size@@Base+0x20d4>  // b.plast
    b0a0:	fmov	d3, x3
    b0a4:	fmov	d0, x24
    b0a8:	add	x2, x3, x24
    b0ac:	add	x0, x23, x21, lsl #2
    b0b0:	mov	v3.d[1], x4
    b0b4:	shl	d5, d0, #2
    b0b8:	shl	d4, d0, #1
    b0bc:	lsr	x1, x20, #2
    b0c0:	sub	x0, x0, #0xc
    b0c4:	sub	x1, x0, x1, lsl #4
    b0c8:	mov	v3.d[1], x2
    b0cc:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    b0d0:	dup	v5.2d, v5.d[0]
    b0d4:	dup	v4.2d, v4.d[0]
    b0d8:	ldr	q6, [x2, #2096]
    b0dc:	nop
    b0e0:	mov	v0.16b, v3.16b
    b0e4:	add	v3.2d, v3.2d, v5.2d
    b0e8:	add	v2.2d, v4.2d, v0.2d
    b0ec:	ushr	v0.2d, v0.2d, #4
    b0f0:	ushr	v2.2d, v2.2d, #4
    b0f4:	xtn	v1.2s, v0.2d
    b0f8:	xtn2	v1.4s, v2.2d
    b0fc:	tbl	v0.16b, {v1.16b}, v6.16b
    b100:	str	q0, [x0], #-16
    b104:	cmp	x0, x1
    b108:	b.ne	b0e0 <__sanitizer_get_allocated_size@@Base+0x1e70>  // b.any
    b10c:	and	x1, x20, #0xfffffffffffffffc
    b110:	cmp	x1, x20
    b114:	madd	x0, x24, x1, x3
    b118:	b.eq	b17c <__sanitizer_get_allocated_size@@Base+0x1f0c>  // b.none
    b11c:	sub	x5, x21, x1
    b120:	lsr	x6, x0, #4
    b124:	add	x2, x1, #0x1
    b128:	add	x0, x24, x0
    b12c:	cmp	x20, x2
    b130:	str	w6, [x23, x5, lsl #2]
    b134:	b.ls	b17c <__sanitizer_get_allocated_size@@Base+0x1f0c>  // b.plast
    b138:	sub	x2, x21, x2
    b13c:	lsr	x6, x0, #4
    b140:	add	x5, x1, #0x2
    b144:	add	x0, x24, x0
    b148:	cmp	x5, x20
    b14c:	str	w6, [x23, x2, lsl #2]
    b150:	b.cs	b17c <__sanitizer_get_allocated_size@@Base+0x1f0c>  // b.hs, b.nlast
    b154:	sub	x5, x21, x5
    b158:	lsr	x2, x0, #4
    b15c:	add	x1, x1, #0x3
    b160:	add	x0, x0, x24
    b164:	cmp	x20, x1
    b168:	str	w2, [x23, x5, lsl #2]
    b16c:	b.ls	b17c <__sanitizer_get_allocated_size@@Base+0x1f0c>  // b.plast
    b170:	sub	x21, x21, x1
    b174:	lsr	x0, x0, #4
    b178:	str	w0, [x23, x21, lsl #2]
    b17c:	madd	x3, x20, x24, x3
    b180:	str	x4, [x19, #88]
    b184:	ldr	x4, [x19, #120]
    b188:	str	x3, [x19, #104]
    b18c:	cmp	x3, x4
    b190:	b.hi	b314 <__sanitizer_get_allocated_size@@Base+0x20a4>  // b.pmore
    b194:	ldr	x3, [x19, #112]
    b198:	ldr	x4, [x19, #128]
    b19c:	add	x3, x22, x3
    b1a0:	str	x3, [x19, #112]
    b1a4:	cmp	x3, x4
    b1a8:	b.hi	b32c <__sanitizer_get_allocated_size@@Base+0x20bc>  // b.pmore
    b1ac:	ldp	x27, x28, [sp, #64]
    b1b0:	mov	w20, #0x1                   	// #1
    b1b4:	strb	wzr, [x19, #140]
    b1b8:	mov	w0, w20
    b1bc:	ldp	x21, x22, [sp, #16]
    b1c0:	ldp	x23, x24, [sp, #32]
    b1c4:	ldp	x25, x26, [sp, #48]
    b1c8:	ldr	x30, [sp, #80]
    b1cc:	ldp	x19, x20, [sp], #96
    b1d0:	ret
    b1d4:	mov	x0, #0xffff                	// #65535
    b1d8:	add	x25, x25, x0
    b1dc:	and	x25, x25, #0xffffffffffff0000
    b1e0:	mov	x4, #0x20000000            	// #536870912
    b1e4:	cmp	x25, x4
    b1e8:	b.hi	b350 <__sanitizer_get_allocated_size@@Base+0x20e0>  // b.pmore
    b1ec:	mov	x28, #0xe0000000            	// #3758096384
    b1f0:	add	x28, x2, x28
    b1f4:	add	x28, x28, x23
    b1f8:	adrp	x3, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    b1fc:	mov	x0, x26
    b200:	sub	x2, x25, x2
    b204:	mov	x1, x28
    b208:	add	x3, x3, #0x268
    b20c:	bl	24f50 <__sanitizer_sandbox_on_notify@@Base+0x1908>
    b210:	cbz	x0, b238 <__sanitizer_get_allocated_size@@Base+0x1fc8>
    b214:	mov	x4, x0
    b218:	mov	x3, x28
    b21c:	cmp	x28, x0
    b220:	b.ne	b268 <__sanitizer_get_allocated_size@@Base+0x1ff8>  // b.any
    b224:	bl	7230 <__sanitizer_print_memory_profile@plt+0xbd0>
    b228:	str	x25, [x19, #96]
    b22c:	ldr	x4, [x19, #88]
    b230:	add	x4, x20, x4
    b234:	b	b080 <__sanitizer_get_allocated_size@@Base+0x1e10>
    b238:	ldp	x27, x28, [sp, #64]
    b23c:	mov	w20, #0x0                   	// #0
    b240:	mov	w0, w20
    b244:	ldp	x21, x22, [sp, #16]
    b248:	ldp	x23, x24, [sp, #32]
    b24c:	ldp	x25, x26, [sp, #48]
    b250:	ldr	x30, [sp, #80]
    b254:	ldp	x19, x20, [sp], #96
    b258:	ret
    b25c:	mov	x4, x0
    b260:	mov	x3, x25
    b264:	nop
    b268:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    b26c:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    b270:	add	x2, x2, #0x1f8
    b274:	add	x0, x0, #0xe48
    b278:	mov	w1, #0x281                 	// #641
    b27c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    b280:	stp	x27, x28, [sp, #64]
    b284:	b	afe0 <__sanitizer_get_allocated_size@@Base+0x1d70>
    b288:	mov	x24, #0x40                  	// #64
    b28c:	b	af4c <__sanitizer_get_allocated_size@@Base+0x1cdc>
    b290:	ldrb	w20, [x19, #140]
    b294:	cbnz	w20, b23c <__sanitizer_get_allocated_size@@Base+0x1fcc>
    b298:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    b29c:	mov	w0, #0x1                   	// #1
    b2a0:	strb	w0, [x19, #140]
    b2a4:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    b2a8:	ldr	x1, [x1, #4024]
    b2ac:	add	x0, x0, #0x1a8
    b2b0:	ldr	x1, [x1]
    b2b4:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    b2b8:	cmp	x25, #0x1f
    b2bc:	b.eq	b3dc <__sanitizer_get_allocated_size@@Base+0x216c>  // b.none
    b2c0:	lsl	x2, x25, #5
    b2c4:	cmp	x25, #0x10
    b2c8:	b.ls	b2e8 <__sanitizer_get_allocated_size@@Base+0x2078>  // b.plast
    b2cc:	sub	x25, x25, #0x10
    b2d0:	mov	x2, #0x200                 	// #512
    b2d4:	and	x0, x25, #0x1
    b2d8:	lsr	x25, x25, #1
    b2dc:	lsl	x25, x2, x25
    b2e0:	lsr	x2, x25, #1
    b2e4:	madd	x2, x2, x0, x25
    b2e8:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    b2ec:	mov	x1, #0x1000                	// #4096
    b2f0:	add	x0, x0, #0x1c0
    b2f4:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    b2f8:	b	b1b8 <__sanitizer_get_allocated_size@@Base+0x1f48>
    b2fc:	ldr	w0, [x26, #40]
    b300:	tbnz	w0, #31, af64 <__sanitizer_get_allocated_size@@Base+0x1cf4>
    b304:	bl	24368 <__sanitizer_sandbox_on_notify@@Base+0xd20>
    b308:	str	x0, [x19, #176]
    b30c:	ldr	x3, [x19, #120]
    b310:	b	af64 <__sanitizer_get_allocated_size@@Base+0x1cf4>
    b314:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    b318:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    b31c:	add	x2, x2, #0x288
    b320:	add	x0, x0, #0xe48
    b324:	mov	w1, #0x2f9                 	// #761
    b328:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    b32c:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    b330:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    b334:	add	x2, x2, #0x2c0
    b338:	add	x0, x0, #0xe48
    b33c:	mov	w1, #0x2fb                 	// #763
    b340:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    b344:	mov	x0, x3
    b348:	mov	x1, #0x0                   	// #0
    b34c:	b	b11c <__sanitizer_get_allocated_size@@Base+0x1eac>
    b350:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    b354:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    b358:	mov	x3, x25
    b35c:	add	x2, x2, #0x238
    b360:	add	x0, x0, #0xe48
    b364:	mov	w1, #0x295                 	// #661
    b368:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    b36c:	ldrb	w20, [x19, #140]
    b370:	cbnz	w20, b238 <__sanitizer_get_allocated_size@@Base+0x1fc8>
    b374:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    b378:	mov	w0, #0x1                   	// #1
    b37c:	strb	w0, [x19, #140]
    b380:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    b384:	ldr	x1, [x1, #4024]
    b388:	add	x0, x0, #0x1a8
    b38c:	ldr	x1, [x1]
    b390:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    b394:	cmp	x25, #0x1f
    b398:	b.eq	b3e4 <__sanitizer_get_allocated_size@@Base+0x2174>  // b.none
    b39c:	lsl	x2, x25, #5
    b3a0:	cmp	x25, #0x10
    b3a4:	b.ls	b3c4 <__sanitizer_get_allocated_size@@Base+0x2154>  // b.plast
    b3a8:	sub	x25, x25, #0x10
    b3ac:	mov	x2, #0x200                 	// #512
    b3b0:	and	x0, x25, #0x1
    b3b4:	lsr	x25, x25, #1
    b3b8:	lsl	x25, x2, x25
    b3bc:	lsr	x2, x25, #1
    b3c0:	madd	x2, x2, x0, x25
    b3c4:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    b3c8:	mov	x1, #0x1000                	// #4096
    b3cc:	add	x0, x0, #0x1c0
    b3d0:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    b3d4:	ldp	x27, x28, [sp, #64]
    b3d8:	b	b1b8 <__sanitizer_get_allocated_size@@Base+0x1f48>
    b3dc:	mov	x2, #0x40                  	// #64
    b3e0:	b	b2e8 <__sanitizer_get_allocated_size@@Base+0x2078>
    b3e4:	mov	x2, #0x40                  	// #64
    b3e8:	b	b3c4 <__sanitizer_get_allocated_size@@Base+0x2154>
    b3ec:	nop
    b3f0:	stp	x19, x20, [sp, #-64]!
    b3f4:	mov	x19, x3
    b3f8:	mov	x20, x4
    b3fc:	stp	x23, x24, [sp, #32]
    b400:	mov	x24, x0
    b404:	mov	x23, x2
    b408:	stp	x21, x22, [sp, #16]
    b40c:	mov	x2, #0x2000000000          	// #137438953472
    b410:	add	x21, x23, x23, lsl #1
    b414:	ldr	x22, [x24, #32]
    b418:	mov	x0, #0xe0000000            	// #3758096384
    b41c:	add	x0, x0, x23, lsl #32
    b420:	stp	x25, x30, [sp, #48]
    b424:	add	x2, x22, x2
    b428:	add	x21, x2, x21, lsl #6
    b42c:	mov	x25, x1
    b430:	add	x22, x0, x22
    b434:	mov	x0, x21
    b438:	bl	1c690 <__sanitizer_set_report_fd@@Base+0x4810>
    b43c:	ldr	x3, [x21, #88]
    b440:	cmp	x3, x20
    b444:	b.cc	b548 <__sanitizer_get_allocated_size@@Base+0x22d8>  // b.lo, b.ul, b.last
    b448:	sub	x4, x3, x20
    b44c:	str	x4, [x21, #88]
    b450:	cbz	x20, b4ec <__sanitizer_get_allocated_size@@Base+0x227c>
    b454:	add	x1, x4, #0x4
    b458:	add	x6, x19, #0x10
    b45c:	sub	x5, x20, #0x1
    b460:	lsl	x1, x1, #2
    b464:	sub	x0, x1, #0x10
    b468:	add	x2, x22, x1
    b46c:	add	x1, x22, x0
    b470:	cmp	x1, x6
    b474:	ccmp	x19, x2, #0x2, cc  // cc = lo, ul, last
    b478:	ccmp	x5, #0x7, #0x0, cs  // cs = hs, nlast
    b47c:	b.ls	b51c <__sanitizer_get_allocated_size@@Base+0x22ac>  // b.plast
    b480:	lsr	x2, x20, #2
    b484:	mov	x0, #0x0                   	// #0
    b488:	lsl	x2, x2, #4
    b48c:	nop
    b490:	ldr	q0, [x1, x0]
    b494:	str	q0, [x19, x0]
    b498:	add	x0, x0, #0x10
    b49c:	cmp	x0, x2
    b4a0:	b.ne	b490 <__sanitizer_get_allocated_size@@Base+0x2220>  // b.any
    b4a4:	tst	x20, #0x3
    b4a8:	and	x0, x20, #0xfffffffffffffffc
    b4ac:	b.eq	b4ec <__sanitizer_get_allocated_size@@Base+0x227c>  // b.none
    b4b0:	add	x1, x4, x0
    b4b4:	add	x2, x0, #0x1
    b4b8:	cmp	x20, x2
    b4bc:	ldr	w1, [x22, x1, lsl #2]
    b4c0:	str	w1, [x19, x0, lsl #2]
    b4c4:	b.ls	b4ec <__sanitizer_get_allocated_size@@Base+0x227c>  // b.plast
    b4c8:	add	x1, x4, x2
    b4cc:	add	x0, x0, #0x2
    b4d0:	cmp	x20, x0
    b4d4:	ldr	w1, [x22, x1, lsl #2]
    b4d8:	str	w1, [x19, x2, lsl #2]
    b4dc:	b.ls	b4ec <__sanitizer_get_allocated_size@@Base+0x227c>  // b.plast
    b4e0:	add	x4, x4, x0
    b4e4:	ldr	w1, [x22, x4, lsl #2]
    b4e8:	str	w1, [x19, x0, lsl #2]
    b4ec:	ldr	x0, [x21, #144]
    b4f0:	mov	w23, #0x1                   	// #1
    b4f4:	add	x20, x0, x20
    b4f8:	str	x20, [x21, #144]
    b4fc:	mov	x0, x21
    b500:	bl	1c728 <__sanitizer_set_report_fd@@Base+0x48a8>
    b504:	mov	w0, w23
    b508:	ldp	x21, x22, [sp, #16]
    b50c:	ldp	x23, x24, [sp, #32]
    b510:	ldp	x25, x30, [sp, #48]
    b514:	ldp	x19, x20, [sp], #64
    b518:	ret
    b51c:	neg	x4, x4, lsl #2
    b520:	mov	x0, x1
    b524:	sub	x1, x4, x22
    b528:	add	x3, x22, x3, lsl #2
    b52c:	add	x19, x19, x1
    b530:	ldr	w1, [x0]
    b534:	str	w1, [x19, x0]
    b538:	add	x0, x0, #0x4
    b53c:	cmp	x0, x3
    b540:	b.ne	b530 <__sanitizer_get_allocated_size@@Base+0x22c0>  // b.any
    b544:	b	b4ec <__sanitizer_get_allocated_size@@Base+0x227c>
    b548:	sub	x4, x20, x3
    b54c:	mov	x2, x23
    b550:	mov	x1, x25
    b554:	mov	x0, x24
    b558:	mov	x3, x21
    b55c:	bl	aef0 <__sanitizer_get_allocated_size@@Base+0x1c80>
    b560:	ands	w23, w0, #0xff
    b564:	b.eq	b4fc <__sanitizer_get_allocated_size@@Base+0x228c>  // b.none
    b568:	ldr	x3, [x21, #88]
    b56c:	cmp	x20, x3
    b570:	b.ls	b448 <__sanitizer_get_allocated_size@@Base+0x21d8>  // b.plast
    b574:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    b578:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    b57c:	mov	x4, x20
    b580:	add	x2, x2, #0x2f8
    b584:	add	x0, x0, #0xe48
    b588:	mov	w1, #0x93                  	// #147
    b58c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    b590:	stp	x19, x20, [sp, #-32]!
    b594:	mov	x19, x1
    b598:	mov	x1, x0
    b59c:	mov	x0, x2
    b5a0:	mov	x2, x3
    b5a4:	ldr	w4, [x19, #4]
    b5a8:	str	x30, [sp, #16]
    b5ac:	cbz	w4, b5dc <__sanitizer_get_allocated_size@@Base+0x236c>
    b5b0:	add	x1, x1, #0xa00
    b5b4:	lsr	w20, w4, #1
    b5b8:	add	x3, x19, #0x10
    b5bc:	lsr	w4, w4, #1
    b5c0:	bl	b3f0 <__sanitizer_get_allocated_size@@Base+0x2180>
    b5c4:	tst	w0, #0xff
    b5c8:	b.eq	b5d0 <__sanitizer_get_allocated_size@@Base+0x2360>  // b.none
    b5cc:	str	w20, [x19]
    b5d0:	ldr	x30, [sp, #16]
    b5d4:	ldp	x19, x20, [sp], #32
    b5d8:	ret
    b5dc:	mov	x5, #0x1                   	// #1
    b5e0:	mov	w10, w5
    b5e4:	mov	w8, #0x400                 	// #1024
    b5e8:	mov	w11, #0x8                   	// #8
    b5ec:	mov	x9, #0x200                 	// #512
    b5f0:	lsl	x3, x5, #5
    b5f4:	add	x6, x5, x5, lsl #2
    b5f8:	add	x5, x5, #0x1
    b5fc:	add	x6, x1, x6, lsl #4
    b600:	udiv	w4, w8, w3
    b604:	mov	x7, x6
    b608:	str	x3, [x6, #8]
    b60c:	cmp	w4, #0x8
    b610:	csel	w4, w4, w11, ls  // ls = plast
    b614:	lsl	w4, w4, #1
    b618:	str	w4, [x6, #4]
    b61c:	sub	x6, x5, #0x10
    b620:	cmp	x5, #0x1f
    b624:	and	x3, x6, #0x1
    b628:	b.eq	b674 <__sanitizer_get_allocated_size@@Base+0x2404>  // b.none
    b62c:	lsr	x6, x6, #1
    b630:	cmp	x5, #0x10
    b634:	b.ls	b5f0 <__sanitizer_get_allocated_size@@Base+0x2380>  // b.plast
    b638:	lsl	x6, x9, x6
    b63c:	add	x5, x5, #0x1
    b640:	lsr	x4, x6, #1
    b644:	add	x7, x7, #0x50
    b648:	madd	x4, x4, x3, x6
    b64c:	str	x4, [x7, #8]
    b650:	udiv	w4, w8, w4
    b654:	cmp	w4, #0x0
    b658:	csel	w4, w4, w10, ne  // ne = any
    b65c:	cmp	x5, #0x20
    b660:	lsl	w4, w4, #1
    b664:	str	w4, [x7, #4]
    b668:	b.ne	b61c <__sanitizer_get_allocated_size@@Base+0x23ac>  // b.any
    b66c:	ldr	w4, [x19, #4]
    b670:	b	b5b0 <__sanitizer_get_allocated_size@@Base+0x2340>
    b674:	mov	w4, #0x10                  	// #16
    b678:	mov	x3, #0x40                  	// #64
    b67c:	str	w4, [x1, #2484]
    b680:	str	x3, [x1, #2488]
    b684:	ldr	w4, [x19, #4]
    b688:	b	b5b0 <__sanitizer_get_allocated_size@@Base+0x2340>
    b68c:	nop
    b690:	stp	x19, x20, [sp, #-64]!
    b694:	cmp	x2, #0x0
    b698:	stp	x21, x22, [sp, #16]
    b69c:	csinc	x21, x2, xzr, ne  // ne = any
    b6a0:	stp	x23, x24, [sp, #32]
    b6a4:	mov	x23, x0
    b6a8:	adds	x0, x3, x21
    b6ac:	str	x30, [sp, #56]
    b6b0:	b.cs	bb28 <__sanitizer_get_allocated_size@@Base+0x28b8>  // b.hs, b.nlast
    b6b4:	str	x25, [sp, #48]
    b6b8:	mov	x19, x3
    b6bc:	mov	x22, x1
    b6c0:	cmp	x3, #0x8
    b6c4:	b.hi	b91c <__sanitizer_get_allocated_size@@Base+0x26ac>  // b.pmore
    b6c8:	cmp	x2, #0x10, lsl #12
    b6cc:	b.hi	b798 <__sanitizer_get_allocated_size@@Base+0x2528>  // b.pmore
    b6d0:	cmp	x21, #0x200
    b6d4:	b.ls	b950 <__sanitizer_get_allocated_size@@Base+0x26e0>  // b.plast
    b6d8:	clz	x4, x21
    b6dc:	mov	w20, #0x3f                  	// #63
    b6e0:	sub	w20, w20, w4
    b6e4:	mov	w0, #0x1                   	// #1
    b6e8:	sub	w2, w20, #0x1
    b6ec:	lsl	w0, w0, w2
    b6f0:	sub	w0, w0, #0x1
    b6f4:	tst	x0, x21
    b6f8:	lsr	x4, x21, x2
    b6fc:	and	x4, x4, #0x1
    b700:	cinc	x4, x4, ne  // ne = any
    b704:	add	x20, x4, w20, sxtw #1
    b708:	cmp	x20, #0x22
    b70c:	sub	x20, x20, #0x2
    b710:	b.eq	b990 <__sanitizer_get_allocated_size@@Base+0x2720>  // b.none
    b714:	lsl	x21, x20, #2
    b718:	add	x24, x21, x20
    b71c:	lsl	x24, x24, #4
    b720:	add	x25, x22, x24
    b724:	ldr	w2, [x22, x24]
    b728:	cbz	w2, ba18 <__sanitizer_get_allocated_size@@Base+0x27a8>
    b72c:	add	x21, x21, x20
    b730:	sub	w2, w2, #0x1
    b734:	str	w2, [x22, x24]
    b738:	lsl	x21, x21, #2
    b73c:	add	x2, x21, w2, uxtw
    b740:	add	x2, x2, #0x4
    b744:	ldr	x3, [x23, #32]
    b748:	ldr	w0, [x22, x2, lsl #2]
    b74c:	ldr	x2, [x25, #8]
    b750:	add	x20, x3, x20, lsl #32
    b754:	ubfiz	x0, x0, #4, #32
    b758:	ldr	x1, [x22, #2576]
    b75c:	add	x20, x20, x0
    b760:	mov	x0, x20
    b764:	add	x1, x1, x2
    b768:	str	x1, [x22, #2576]
    b76c:	cmp	x19, #0x8
    b770:	b.ls	b780 <__sanitizer_get_allocated_size@@Base+0x2510>  // b.plast
    b774:	sub	x19, x19, #0x1
    b778:	ands	x3, x19, x20
    b77c:	b.ne	b9dc <__sanitizer_get_allocated_size@@Base+0x276c>  // b.any
    b780:	ldr	x25, [sp, #48]
    b784:	ldp	x21, x22, [sp, #16]
    b788:	ldp	x23, x24, [sp, #32]
    b78c:	ldr	x30, [sp, #56]
    b790:	ldp	x19, x20, [sp], #64
    b794:	ret
    b798:	sub	x25, x3, #0x1
    b79c:	tst	x3, x25
    b7a0:	b.ne	b9f8 <__sanitizer_get_allocated_size@@Base+0x2788>  // b.any
    b7a4:	ldr	x1, [x23, #48]
    b7a8:	sub	x0, x1, #0x1
    b7ac:	tst	x1, x0
    b7b0:	b.ne	b980 <__sanitizer_get_allocated_size@@Base+0x2710>  // b.any
    b7b4:	add	x22, x21, x0
    b7b8:	neg	x0, x1
    b7bc:	and	x22, x22, x0
    b7c0:	cmp	x19, x1
    b7c4:	add	x22, x22, x1
    b7c8:	add	x0, x22, x19
    b7cc:	csel	x22, x0, x22, hi  // hi = pmore
    b7d0:	cmp	x21, x22
    b7d4:	b.hi	b9b0 <__sanitizer_get_allocated_size@@Base+0x2740>  // b.pmore
    b7d8:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    b7dc:	mov	x0, x22
    b7e0:	ldr	x1, [x1, #3944]
    b7e4:	ldr	x1, [x1]
    b7e8:	bl	1eac0 <__sanitizer_set_report_fd@@Base+0x6c40>
    b7ec:	mov	x24, x0
    b7f0:	cbz	x0, ba3c <__sanitizer_get_allocated_size@@Base+0x27cc>
    b7f4:	ldr	x0, [x23, #48]
    b7f8:	sub	x0, x0, #0x1
    b7fc:	tst	x24, x0
    b800:	b.ne	ba48 <__sanitizer_get_allocated_size@@Base+0x27d8>  // b.any
    b804:	bl	7230 <__sanitizer_print_memory_profile@plt+0xbd0>
    b808:	ldr	x0, [x23, #48]
    b80c:	add	x20, x24, x0
    b810:	ands	x1, x25, x20
    b814:	b.eq	b828 <__sanitizer_get_allocated_size@@Base+0x25b8>  // b.none
    b818:	add	x20, x19, x20
    b81c:	sub	x20, x20, x1
    b820:	tst	x25, x20
    b824:	b.ne	ba68 <__sanitizer_get_allocated_size@@Base+0x27f8>  // b.any
    b828:	sub	x1, x0, #0x1
    b82c:	tst	x1, x20
    b830:	b.ne	ba88 <__sanitizer_get_allocated_size@@Base+0x2818>  // b.any
    b834:	add	x3, x20, x21
    b838:	cmp	x24, x3
    b83c:	b.hi	baa8 <__sanitizer_get_allocated_size@@Base+0x2838>  // b.pmore
    b840:	add	x4, x24, x22
    b844:	cmp	x4, x3
    b848:	b.cc	bac4 <__sanitizer_get_allocated_size@@Base+0x2854>  // b.lo, b.ul, b.last
    b84c:	sub	x25, x20, x0
    b850:	add	x0, x23, #0x298
    b854:	mov	w2, #0x1                   	// #1
    b858:	stp	x24, x22, [x25]
    b85c:	str	x21, [x25, #16]
    b860:	ldxrb	w1, [x0]
    b864:	stxrb	w3, w2, [x0]
    b868:	cbnz	w3, b860 <__sanitizer_get_allocated_size@@Base+0x25f0>
    b86c:	dmb	ish
    b870:	tst	w1, #0xff
    b874:	b.eq	b87c <__sanitizer_get_allocated_size@@Base+0x260c>  // b.none
    b878:	bl	85d8 <__sanitizer_print_stack_trace@@Base+0x300>
    b87c:	ldr	x1, [x23, #104]
    b880:	add	x21, x23, #0x30
    b884:	mov	x0, #0xfffff               	// #1048575
    b888:	cmp	x1, x0
    b88c:	b.hi	badc <__sanitizer_get_allocated_size@@Base+0x286c>  // b.pmore
    b890:	ldr	x0, [x23, #96]
    b894:	add	x24, x23, #0x40
    b898:	cmp	x1, x0
    b89c:	b.eq	bafc <__sanitizer_get_allocated_size@@Base+0x288c>  // b.none
    b8a0:	ldp	x2, x3, [x21, #88]
    b8a4:	clz	x6, x22
    b8a8:	ldr	x5, [x21, #8]
    b8ac:	add	x4, x1, #0x1
    b8b0:	mov	w0, #0x3f                  	// #63
    b8b4:	sub	w0, w0, w6
    b8b8:	str	x4, [x21, #56]
    b8bc:	ldr	x4, [x21, #72]
    b8c0:	add	x2, x22, x2
    b8c4:	str	x1, [x25, #24]
    b8c8:	add	x0, x23, w0, sxtw #3
    b8cc:	cmp	x3, x2
    b8d0:	str	x25, [x5, x1, lsl #3]
    b8d4:	csel	x3, x3, x2, cs  // cs = hs, nlast
    b8d8:	add	x4, x4, #0x1
    b8dc:	strb	wzr, [x21, #64]
    b8e0:	str	x4, [x21, #72]
    b8e4:	stp	x2, x3, [x21, #88]
    b8e8:	ldr	x3, [x0, #152]
    b8ec:	ldr	x2, [x23, #688]
    b8f0:	add	x3, x3, #0x1
    b8f4:	str	x3, [x0, #152]
    b8f8:	add	x2, x22, x2
    b8fc:	str	x2, [x23, #688]
    b900:	ldr	x0, [x23, #696]
    b904:	add	x22, x22, x0
    b908:	str	x22, [x23, #696]
    b90c:	dmb	ish
    b910:	strb	wzr, [x23, #664]
    b914:	mov	x0, x20
    b918:	b	b76c <__sanitizer_get_allocated_size@@Base+0x24fc>
    b91c:	sub	x25, x3, #0x1
    b920:	tst	x3, x25
    b924:	b.ne	b980 <__sanitizer_get_allocated_size@@Base+0x2710>  // b.any
    b928:	sub	x1, x0, #0x1
    b92c:	neg	x0, x3
    b930:	and	x0, x1, x0
    b934:	cmp	x3, #0x10, lsl #12
    b938:	mov	x1, #0x10000               	// #65536
    b93c:	ccmp	x0, x1, #0x2, ls  // ls = plast
    b940:	b.hi	b7a4 <__sanitizer_get_allocated_size@@Base+0x2534>  // b.pmore
    b944:	mov	x21, x0
    b948:	cmp	x21, #0x200
    b94c:	b.hi	b6d8 <__sanitizer_get_allocated_size@@Base+0x2468>  // b.pmore
    b950:	add	x20, x21, #0x1f
    b954:	cmp	xzr, x20, lsr #5
    b958:	lsr	x20, x20, #5
    b95c:	b.ne	b714 <__sanitizer_get_allocated_size@@Base+0x24a4>  // b.any
    b960:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    b964:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    b968:	add	x2, x2, #0x388
    b96c:	add	x0, x0, #0x3a0
    b970:	mov	x4, #0x0                   	// #0
    b974:	mov	x3, #0x0                   	// #0
    b978:	mov	w1, #0x22                  	// #34
    b97c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    b980:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    b984:	add	x0, x0, #0xbf8
    b988:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
    b98c:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
    b990:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    b994:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    b998:	add	x2, x2, #0x410
    b99c:	add	x0, x0, #0x3a0
    b9a0:	mov	x4, x20
    b9a4:	mov	x3, x20
    b9a8:	mov	w1, #0x23                  	// #35
    b9ac:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    b9b0:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    b9b4:	mov	x3, x19
    b9b8:	mov	x2, x22
    b9bc:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    b9c0:	ldr	x1, [x1, #4024]
    b9c4:	add	x0, x0, #0x458
    b9c8:	ldr	x1, [x1]
    b9cc:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
    b9d0:	mov	x0, #0x0                   	// #0
    b9d4:	ldr	x25, [sp, #48]
    b9d8:	b	b784 <__sanitizer_get_allocated_size@@Base+0x2514>
    b9dc:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    b9e0:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    b9e4:	add	x2, x2, #0x5a0
    b9e8:	add	x0, x0, #0x5e0
    b9ec:	mov	x4, #0x0                   	// #0
    b9f0:	mov	w1, #0x49                  	// #73
    b9f4:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    b9f8:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    b9fc:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    ba00:	add	x2, x2, #0x430
    ba04:	add	x0, x0, #0xdb8
    ba08:	mov	x4, #0x0                   	// #0
    ba0c:	mov	x3, #0x0                   	// #0
    ba10:	mov	w1, #0x56                  	// #86
    ba14:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    ba18:	mov	x3, x20
    ba1c:	mov	x2, x23
    ba20:	mov	x1, x25
    ba24:	mov	x0, x22
    ba28:	bl	b590 <__sanitizer_get_allocated_size@@Base+0x2320>
    ba2c:	tst	w0, #0xff
    ba30:	b.eq	ba3c <__sanitizer_get_allocated_size@@Base+0x27cc>  // b.none
    ba34:	ldr	w2, [x22, x24]
    ba38:	b	b72c <__sanitizer_get_allocated_size@@Base+0x24bc>
    ba3c:	mov	x0, #0x0                   	// #0
    ba40:	ldr	x25, [sp, #48]
    ba44:	b	b784 <__sanitizer_get_allocated_size@@Base+0x2514>
    ba48:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    ba4c:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    ba50:	add	x2, x2, #0x4c0
    ba54:	add	x0, x0, #0xdb8
    ba58:	mov	x4, #0x0                   	// #0
    ba5c:	mov	x3, #0x0                   	// #0
    ba60:	mov	w1, #0x65                  	// #101
    ba64:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    ba68:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    ba6c:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    ba70:	add	x2, x2, #0x4f0
    ba74:	add	x0, x0, #0xdb8
    ba78:	mov	x4, #0x0                   	// #0
    ba7c:	mov	x3, #0x0                   	// #0
    ba80:	mov	w1, #0x6b                  	// #107
    ba84:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    ba88:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    ba8c:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    ba90:	add	x2, x2, #0x518
    ba94:	add	x0, x0, #0xdb8
    ba98:	mov	x4, #0x0                   	// #0
    ba9c:	mov	x3, #0x0                   	// #0
    baa0:	mov	w1, #0x6c                  	// #108
    baa4:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    baa8:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    baac:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    bab0:	mov	x4, x24
    bab4:	add	x2, x2, #0x540
    bab8:	add	x0, x0, #0xdb8
    babc:	mov	w1, #0x6d                  	// #109
    bac0:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    bac4:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    bac8:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    bacc:	add	x2, x2, #0x560
    bad0:	add	x0, x0, #0xdb8
    bad4:	mov	w1, #0x6e                  	// #110
    bad8:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    badc:	mov	x3, x1
    bae0:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    bae4:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    bae8:	add	x2, x2, #0x580
    baec:	add	x0, x0, #0xdb8
    baf0:	mov	x4, #0x100000              	// #1048576
    baf4:	mov	w1, #0x2a                  	// #42
    baf8:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    bafc:	ldr	x4, [x23, #64]
    bb00:	mov	x0, x24
    bb04:	mov	x3, #0x0                   	// #0
    bb08:	mov	x2, #0x20000               	// #131072
    bb0c:	add	x1, x4, x1, lsl #3
    bb10:	bl	24f60 <__sanitizer_sandbox_on_notify@@Base+0x1918>
    bb14:	ldr	x0, [x24, #32]
    bb18:	ldr	x1, [x21, #56]
    bb1c:	add	x0, x0, #0x4, lsl #12
    bb20:	str	x0, [x24, #32]
    bb24:	b	b8a0 <__sanitizer_get_allocated_size@@Base+0x2630>
    bb28:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    bb2c:	mov	x2, x21
    bb30:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    bb34:	add	x0, x0, #0x328
    bb38:	ldr	x1, [x1, #4024]
    bb3c:	ldr	x1, [x1]
    bb40:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
    bb44:	mov	x0, #0x0                   	// #0
    bb48:	b	b784 <__sanitizer_get_allocated_size@@Base+0x2514>
    bb4c:	nop
    bb50:	adrp	x9, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    bb54:	stp	x19, x20, [sp, #-176]!
    bb58:	mov	x5, x1
    bb5c:	ldr	x19, [x9, #4016]
    bb60:	stp	x25, x26, [sp, #48]
    bb64:	mov	x20, x4
    bb68:	stp	x21, x22, [sp, #16]
    bb6c:	mov	x25, x2
    bb70:	ldr	x26, [x19]
    bb74:	stp	x23, x24, [sp, #32]
    bb78:	mov	x24, x0
    bb7c:	stp	x27, x28, [sp, #64]
    bb80:	mov	x28, x3
    bb84:	str	x30, [sp, #80]
    bb88:	cbz	x26, be7c <__sanitizer_get_allocated_size@@Base+0x2c0c>
    bb8c:	cmp	x25, x26
    bb90:	b.ls	bdac <__sanitizer_get_allocated_size@@Base+0x2b3c>  // b.plast
    bb94:	udiv	x0, x25, x26
    bb98:	msub	x0, x0, x26, x25
    bb9c:	cbnz	x0, be94 <__sanitizer_get_allocated_size@@Base+0x2c24>
    bba0:	mov	w10, #0x1                   	// #1
    bba4:	mov	x2, #0x1                   	// #1
    bba8:	cbz	x28, bf20 <__sanitizer_get_allocated_size@@Base+0x2cb0>
    bbac:	rbit	x21, x2
    bbb0:	mov	x0, #0x40                  	// #64
    bbb4:	clz	x21, x21
    bbb8:	mov	x27, x2
    bbbc:	lsr	x0, x0, x21
    bbc0:	sub	x22, x0, #0x1
    bbc4:	rbit	x0, x0
    bbc8:	mov	x6, #0x1                   	// #1
    bbcc:	clz	x0, x0
    bbd0:	mov	w23, w0
    bbd4:	lsl	x1, x6, x0
    bbd8:	sub	x3, x1, #0x1
    bbdc:	tst	x3, x1
    bbe0:	b.ne	c164 <__sanitizer_get_allocated_size@@Base+0x2ef4>  // b.any
    bbe4:	sub	x3, x28, #0x1
    bbe8:	neg	x7, x1
    bbec:	add	x3, x3, x1
    bbf0:	adrp	x1, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    bbf4:	and	x3, x3, x7
    bbf8:	add	x1, x1, #0x778
    bbfc:	str	w10, [sp, #96]
    bc00:	lsr	x0, x3, x0
    bc04:	stp	x2, x5, [sp, #104]
    bc08:	lsl	x0, x0, #3
    bc0c:	str	x0, [sp, #120]
    bc10:	bl	1eac0 <__sanitizer_set_report_fd@@Base+0x6c40>
    bc14:	mov	x19, x0
    bc18:	cbz	x0, bf40 <__sanitizer_get_allocated_size@@Base+0x2cd0>
    bc1c:	lsr	x3, x26, #4
    bc20:	ldr	w10, [sp, #96]
    bc24:	sub	x0, x3, #0x1
    bc28:	lsr	x11, x25, #4
    bc2c:	tst	x0, x3
    bc30:	mov	x6, #0x1                   	// #1
    bc34:	adrp	x9, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    bc38:	ldp	x2, x5, [sp, #104]
    bc3c:	b.ne	be3c <__sanitizer_get_allocated_size@@Base+0x2bcc>  // b.any
    bc40:	cbz	x3, c144 <__sanitizer_get_allocated_size@@Base+0x2ed4>
    bc44:	rbit	x12, x3
    bc48:	cmp	x25, x26
    bc4c:	clz	x12, x12
    bc50:	b.hi	bc60 <__sanitizer_get_allocated_size@@Base+0x29f0>  // b.pmore
    bc54:	udiv	x0, x26, x25
    bc58:	msub	x0, x0, x25, x26
    bc5c:	cbz	x0, c0c8 <__sanitizer_get_allocated_size@@Base+0x2e58>
    bc60:	cbz	x5, bcbc <__sanitizer_get_allocated_size@@Base+0x2a4c>
    bc64:	add	x14, x24, x5, lsl #2
    bc68:	sub	x13, x11, #0x1
    bc6c:	mov	x0, #0x1                   	// #1
    bc70:	ldr	w5, [x24]
    bc74:	add	x8, x13, w5, uxtw
    bc78:	lsr	w5, w5, w12
    bc7c:	lsr	x8, x8, x12
    bc80:	cmp	x5, x8
    bc84:	b.hi	bcb0 <__sanitizer_get_allocated_size@@Base+0x2a40>  // b.pmore
    bc88:	lsr	x7, x5, x23
    bc8c:	and	x1, x5, x22
    bc90:	add	x5, x5, #0x1
    bc94:	ldr	x6, [x19, x7, lsl #3]
    bc98:	lsl	x1, x1, x21
    bc9c:	lsl	x1, x0, x1
    bca0:	cmp	x8, x5
    bca4:	add	x1, x6, x1
    bca8:	str	x1, [x19, x7, lsl #3]
    bcac:	b.cs	bc88 <__sanitizer_get_allocated_size@@Base+0x2a18>  // b.hs, b.nlast
    bcb0:	add	x24, x24, #0x4
    bcb4:	cmp	x14, x24
    bcb8:	b.ne	bc70 <__sanitizer_get_allocated_size@@Base+0x2a00>  // b.any
    bcbc:	ldr	x24, [x9, #4016]
    bcc0:	ldr	x5, [x24]
    bcc4:	cbz	x5, c0a0 <__sanitizer_get_allocated_size@@Base+0x2e30>
    bcc8:	lsr	x5, x5, #4
    bccc:	sub	x24, x5, #0x1
    bcd0:	ands	x24, x24, x5
    bcd4:	b.ne	be3c <__sanitizer_get_allocated_size@@Base+0x2bcc>  // b.any
    bcd8:	cbz	x5, c144 <__sanitizer_get_allocated_size@@Base+0x2ed4>
    bcdc:	neg	w2, w2
    bce0:	rbit	x5, x5
    bce4:	clz	x5, x5
    bce8:	mov	x0, #0xffffffffffffffff    	// #-1
    bcec:	mov	w6, w5
    bcf0:	lsr	x2, x0, x2
    bcf4:	cbz	w10, bf7c <__sanitizer_get_allocated_size@@Base+0x2d0c>
    bcf8:	mov	x25, #0x0                   	// #0
    bcfc:	mov	w3, #0x0                   	// #0
    bd00:	cbnz	x28, bd24 <__sanitizer_get_allocated_size@@Base+0x2ab4>
    bd04:	b	befc <__sanitizer_get_allocated_size@@Base+0x2c8c>
    bd08:	cbnz	w3, bd18 <__sanitizer_get_allocated_size@@Base+0x2aa8>
    bd0c:	mov	w7, w10
    bd10:	mov	x24, x25
    bd14:	mov	w3, #0x1                   	// #1
    bd18:	add	x25, x25, #0x1
    bd1c:	cmp	x28, x25
    bd20:	b.eq	bec4 <__sanitizer_get_allocated_size@@Base+0x2c54>  // b.none
    bd24:	lsr	x0, x25, x23
    bd28:	and	x1, x25, x22
    bd2c:	mov	w7, w3
    bd30:	ldr	x0, [x19, x0, lsl #3]
    bd34:	lsl	x1, x1, x21
    bd38:	lsr	x0, x0, x1
    bd3c:	and	x0, x0, x2
    bd40:	cmp	x0, x27
    bd44:	b.eq	bd08 <__sanitizer_get_allocated_size@@Base+0x2a98>  // b.none
    bd48:	cbz	w3, bd18 <__sanitizer_get_allocated_size@@Base+0x2aa8>
    bd4c:	lsl	x0, x24, x6
    bd50:	str	w6, [sp, #104]
    bd54:	ubfiz	x3, x0, #4, #32
    bd58:	lsl	x26, x25, x6
    bd5c:	ldr	x1, [x20, #8]
    bd60:	ubfiz	x26, x26, #4, #32
    bd64:	str	x3, [sp, #96]
    bd68:	add	x0, x1, x3
    bd6c:	add	x1, x1, x26
    bd70:	str	w10, [sp, #112]
    bd74:	stp	x2, x5, [sp, #128]
    bd78:	bl	24568 <__sanitizer_sandbox_on_notify@@Base+0xf20>
    bd7c:	ldr	w6, [sp, #104]
    bd80:	ldp	x1, x0, [x20, #16]
    bd84:	mov	w7, #0x0                   	// #0
    bd88:	ldr	x3, [sp, #96]
    bd8c:	ldr	w10, [sp, #112]
    bd90:	ldp	x2, x5, [sp, #128]
    bd94:	add	x0, x26, x0
    bd98:	sub	x0, x0, x3
    bd9c:	add	x1, x1, #0x1
    bda0:	mov	w3, #0x0                   	// #0
    bda4:	stp	x1, x0, [x20, #16]
    bda8:	b	bd18 <__sanitizer_get_allocated_size@@Base+0x2aa8>
    bdac:	udiv	x27, x26, x25
    bdb0:	mov	w10, #0x1                   	// #1
    bdb4:	msub	x0, x27, x25, x26
    bdb8:	cbnz	x0, be5c <__sanitizer_get_allocated_size@@Base+0x2bec>
    bdbc:	cbz	x28, bf20 <__sanitizer_get_allocated_size@@Base+0x2cb0>
    bdc0:	cbz	x27, bf5c <__sanitizer_get_allocated_size@@Base+0x2cec>
    bdc4:	clz	x0, x27
    bdc8:	mov	w1, #0x3f                  	// #63
    bdcc:	sub	w0, w1, w0
    bdd0:	sxtw	x0, w0
    bdd4:	add	x3, x0, #0x1
    bdd8:	tst	x0, x3
    bddc:	b.eq	c174 <__sanitizer_get_allocated_size@@Base+0x2f04>  // b.none
    bde0:	clz	x2, x3
    bde4:	mov	x0, #0x1                   	// #1
    bde8:	sub	w1, w1, w2
    bdec:	add	w2, w1, #0x1
    bdf0:	lsl	x2, x0, x2
    bdf4:	cmp	x2, x3
    bdf8:	b.ls	c110 <__sanitizer_get_allocated_size@@Base+0x2ea0>  // b.plast
    bdfc:	lsl	x4, x0, x1
    be00:	cmp	x4, x3
    be04:	b.cs	c12c <__sanitizer_get_allocated_size@@Base+0x2ebc>  // b.hs, b.nlast
    be08:	cmp	x2, #0x40
    be0c:	b.hi	c080 <__sanitizer_get_allocated_size@@Base+0x2e10>  // b.pmore
    be10:	sub	x0, x2, #0x1
    be14:	ands	x0, x0, x2
    be18:	cset	x3, eq  // eq = none
    be1c:	cbnz	x0, bea4 <__sanitizer_get_allocated_size@@Base+0x2c34>
    be20:	rbit	x21, x2
    be24:	mov	x0, #0x40                  	// #64
    be28:	clz	x21, x21
    be2c:	lsr	x0, x0, x21
    be30:	sub	x22, x0, #0x1
    be34:	tst	x0, x22
    be38:	b.eq	bbc4 <__sanitizer_get_allocated_size@@Base+0x2954>  // b.none
    be3c:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    be40:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    be44:	add	x2, x2, #0x758
    be48:	add	x0, x0, #0x6a8
    be4c:	mov	x4, #0x0                   	// #0
    be50:	mov	x3, #0x0                   	// #0
    be54:	mov	w1, #0x19d                 	// #413
    be58:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    be5c:	udiv	x1, x25, x0
    be60:	msub	x0, x1, x0, x25
    be64:	cbnz	x0, be70 <__sanitizer_get_allocated_size@@Base+0x2c00>
    be68:	add	x27, x27, #0x1
    be6c:	b	bdbc <__sanitizer_get_allocated_size@@Base+0x2b4c>
    be70:	add	x27, x27, #0x2
    be74:	mov	w10, #0x0                   	// #0
    be78:	b	bdbc <__sanitizer_get_allocated_size@@Base+0x2b4c>
    be7c:	str	x1, [sp, #96]
    be80:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
    be84:	mov	x26, x0
    be88:	str	x0, [x19]
    be8c:	ldr	x5, [sp, #96]
    be90:	b	bb8c <__sanitizer_get_allocated_size@@Base+0x291c>
    be94:	cbz	x28, bf20 <__sanitizer_get_allocated_size@@Base+0x2cb0>
    be98:	mov	w10, #0x0                   	// #0
    be9c:	mov	x2, #0x2                   	// #2
    bea0:	b	bbac <__sanitizer_get_allocated_size@@Base+0x293c>
    bea4:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    bea8:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    beac:	add	x2, x2, #0x758
    beb0:	add	x0, x0, #0x6a8
    beb4:	mov	x4, #0x0                   	// #0
    beb8:	mov	w1, #0x19d                 	// #413
    bebc:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    bec0:	mov	x24, x9
    bec4:	cbz	w7, befc <__sanitizer_get_allocated_size@@Base+0x2c8c>
    bec8:	ldr	x1, [x20, #8]
    becc:	lsl	x21, x24, x5
    bed0:	lsl	x5, x28, x5
    bed4:	ubfiz	x21, x21, #4, #32
    bed8:	ubfiz	x22, x5, #4, #32
    bedc:	add	x0, x1, x21
    bee0:	add	x1, x1, x22
    bee4:	bl	24568 <__sanitizer_sandbox_on_notify@@Base+0xf20>
    bee8:	ldp	x0, x1, [x20, #16]
    beec:	add	x22, x22, x1
    bef0:	add	x0, x0, #0x1
    bef4:	sub	x21, x22, x21
    bef8:	stp	x0, x21, [x20, #16]
    befc:	mov	x0, x19
    bf00:	ldp	x21, x22, [sp, #16]
    bf04:	ldp	x23, x24, [sp, #32]
    bf08:	ldp	x25, x26, [sp, #48]
    bf0c:	ldp	x27, x28, [sp, #64]
    bf10:	ldr	x30, [sp, #80]
    bf14:	ldr	x1, [sp, #120]
    bf18:	ldp	x19, x20, [sp], #176
    bf1c:	b	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
    bf20:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    bf24:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    bf28:	add	x2, x2, #0x648
    bf2c:	add	x0, x0, #0xe48
    bf30:	mov	x4, #0x0                   	// #0
    bf34:	mov	x3, #0x0                   	// #0
    bf38:	mov	w1, #0x14e                 	// #334
    bf3c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    bf40:	ldp	x21, x22, [sp, #16]
    bf44:	ldp	x23, x24, [sp, #32]
    bf48:	ldp	x25, x26, [sp, #48]
    bf4c:	ldp	x27, x28, [sp, #64]
    bf50:	ldr	x30, [sp, #80]
    bf54:	ldp	x19, x20, [sp], #176
    bf58:	ret
    bf5c:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    bf60:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    bf64:	add	x2, x2, #0x668
    bf68:	add	x0, x0, #0xe48
    bf6c:	mov	x4, #0x0                   	// #0
    bf70:	mov	x3, #0x0                   	// #0
    bf74:	mov	w1, #0x14f                 	// #335
    bf78:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    bf7c:	cmp	x25, x26
    bf80:	b.cs	c104 <__sanitizer_get_allocated_size@@Base+0x2e94>  // b.hs, b.nlast
    bf84:	udiv	x27, x3, x11
    bf88:	mul	x8, x11, x27
    bf8c:	cbz	x28, befc <__sanitizer_get_allocated_size@@Base+0x2c8c>
    bf90:	mov	x9, #0x0                   	// #0
    bf94:	mov	x25, #0x0                   	// #0
    bf98:	mov	x26, #0x0                   	// #0
    bf9c:	mov	w12, #0x0                   	// #0
    bfa0:	b	bfc0 <__sanitizer_get_allocated_size@@Base+0x2d50>
    bfa4:	cbnz	w12, bfb4 <__sanitizer_get_allocated_size@@Base+0x2d44>
    bfa8:	mov	w12, #0x1                   	// #1
    bfac:	mov	x9, x25
    bfb0:	mov	w7, w12
    bfb4:	add	x25, x25, #0x1
    bfb8:	cmp	x28, x25
    bfbc:	b.eq	bec0 <__sanitizer_get_allocated_size@@Base+0x2c50>  // b.none
    bfc0:	mov	x0, x24
    bfc4:	add	x24, x24, x3
    bfc8:	cmp	x24, x26
    bfcc:	mov	x10, x27
    bfd0:	b.ls	bff0 <__sanitizer_get_allocated_size@@Base+0x2d80>  // b.plast
    bfd4:	cmp	x26, x0
    bfd8:	add	x26, x26, x8
    bfdc:	cinc	x10, x27, hi  // hi = pmore
    bfe0:	cmp	x24, x26
    bfe4:	b.ls	bff0 <__sanitizer_get_allocated_size@@Base+0x2d80>  // b.plast
    bfe8:	add	x10, x10, #0x1
    bfec:	add	x26, x26, x11
    bff0:	lsr	x0, x25, x23
    bff4:	and	x1, x25, x22
    bff8:	mov	w7, w12
    bffc:	ldr	x0, [x19, x0, lsl #3]
    c000:	lsl	x1, x1, x21
    c004:	lsr	x0, x0, x1
    c008:	and	x0, x0, x2
    c00c:	cmp	x10, x0
    c010:	b.eq	bfa4 <__sanitizer_get_allocated_size@@Base+0x2d34>  // b.none
    c014:	cbz	w12, bfb4 <__sanitizer_get_allocated_size@@Base+0x2d44>
    c018:	lsl	x0, x9, x6
    c01c:	str	w6, [sp, #112]
    c020:	lsl	x10, x25, x6
    c024:	ubfiz	x12, x0, #4, #32
    c028:	ubfiz	x10, x10, #4, #32
    c02c:	stp	x10, x12, [sp, #96]
    c030:	ldr	x1, [x20, #8]
    c034:	stp	x9, x11, [sp, #128]
    c038:	add	x0, x1, x12
    c03c:	add	x1, x1, x10
    c040:	stp	x3, x2, [sp, #144]
    c044:	stp	x8, x5, [sp, #160]
    c048:	bl	24568 <__sanitizer_sandbox_on_notify@@Base+0xf20>
    c04c:	ldr	w6, [sp, #112]
    c050:	ldp	x1, x0, [x20, #16]
    c054:	mov	w7, #0x0                   	// #0
    c058:	ldp	x10, x12, [sp, #96]
    c05c:	ldp	x9, x11, [sp, #128]
    c060:	add	x1, x1, #0x1
    c064:	ldp	x3, x2, [sp, #144]
    c068:	add	x0, x10, x0
    c06c:	sub	x0, x0, x12
    c070:	mov	w12, #0x0                   	// #0
    c074:	stp	x1, x0, [x20, #16]
    c078:	ldp	x8, x5, [sp, #160]
    c07c:	b	bfb4 <__sanitizer_get_allocated_size@@Base+0x2d44>
    c080:	mov	x3, x2
    c084:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    c088:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    c08c:	add	x0, x0, #0xe48
    c090:	add	x2, x2, #0x728
    c094:	mov	x4, #0x40                  	// #64
    c098:	mov	w1, #0x155                 	// #341
    c09c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    c0a0:	str	w10, [sp, #96]
    c0a4:	stp	x11, x3, [sp, #104]
    c0a8:	str	x2, [sp, #128]
    c0ac:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
    c0b0:	ldr	w10, [sp, #96]
    c0b4:	mov	x5, x0
    c0b8:	str	x0, [x24]
    c0bc:	ldp	x11, x3, [sp, #104]
    c0c0:	ldr	x2, [sp, #128]
    c0c4:	b	bcc8 <__sanitizer_get_allocated_size@@Base+0x2a58>
    c0c8:	cbz	x5, bcbc <__sanitizer_get_allocated_size@@Base+0x2a4c>
    c0cc:	mov	w8, w12
    c0d0:	add	x5, x24, x5, lsl #2
    c0d4:	ldr	w0, [x24], #4
    c0d8:	cmp	x24, x5
    c0dc:	lsr	w0, w0, w8
    c0e0:	and	x1, x0, x22
    c0e4:	lsr	x0, x0, x23
    c0e8:	lsl	x1, x1, x21
    c0ec:	ldr	x7, [x19, x0, lsl #3]
    c0f0:	lsl	x1, x6, x1
    c0f4:	add	x1, x7, x1
    c0f8:	str	x1, [x19, x0, lsl #3]
    c0fc:	b.ne	c0d4 <__sanitizer_get_allocated_size@@Base+0x2e64>  // b.any
    c100:	b	bcbc <__sanitizer_get_allocated_size@@Base+0x2a4c>
    c104:	mov	x8, x11
    c108:	mov	x27, #0x1                   	// #1
    c10c:	b	bf8c <__sanitizer_get_allocated_size@@Base+0x2d1c>
    c110:	mov	x4, x2
    c114:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    c118:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    c11c:	add	x0, x0, #0x6a8
    c120:	add	x2, x2, #0x680
    c124:	mov	w1, #0x18a                 	// #394
    c128:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    c12c:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    c130:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    c134:	add	x2, x2, #0x708
    c138:	add	x0, x0, #0x6a8
    c13c:	mov	w1, #0x18b                 	// #395
    c140:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    c144:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    c148:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    c14c:	add	x2, x2, #0x790
    c150:	add	x0, x0, #0x6a8
    c154:	mov	x4, #0x0                   	// #0
    c158:	mov	x3, #0x0                   	// #0
    c15c:	mov	w1, #0x171                 	// #369
    c160:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    c164:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    c168:	add	x0, x0, #0xbf8
    c16c:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
    c170:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
    c174:	mov	x2, x3
    c178:	b	be20 <__sanitizer_get_allocated_size@@Base+0x2bb0>
    c17c:	nop
    c180:	stp	x19, x20, [sp, #-160]!
    c184:	mov	x19, x2
    c188:	mov	x20, x3
    c18c:	stp	x25, x26, [sp, #48]
    c190:	mov	x25, x0
    c194:	mov	x26, x4
    c198:	ldr	x0, [x0, #32]
    c19c:	stp	x23, x24, [sp, #32]
    c1a0:	add	x23, x2, x2, lsl #1
    c1a4:	mov	x24, #0x2000000000          	// #137438953472
    c1a8:	add	x24, x0, x24
    c1ac:	lsl	x23, x23, #6
    c1b0:	stp	x21, x22, [sp, #16]
    c1b4:	add	x24, x24, x23
    c1b8:	lsl	x22, x2, #32
    c1bc:	mov	x21, #0xe0000000            	// #3758096384
    c1c0:	add	x21, x22, x21
    c1c4:	stp	x27, x28, [sp, #64]
    c1c8:	add	x21, x21, x0
    c1cc:	mov	x0, x24
    c1d0:	str	x30, [sp, #80]
    c1d4:	bl	1c690 <__sanitizer_set_report_fd@@Base+0x4810>
    c1d8:	ldp	x27, x2, [x24, #88]
    c1dc:	add	x28, x27, x26
    c1e0:	lsl	x6, x28, #2
    c1e4:	cmp	x2, x28, lsl #2
    c1e8:	b.cs	c248 <__sanitizer_get_allocated_size@@Base+0x2fd8>  // b.hs, b.nlast
    c1ec:	mov	x0, #0xffff                	// #65535
    c1f0:	add	x5, x6, x0
    c1f4:	and	x5, x5, #0xffffffffffff0000
    c1f8:	mov	x4, #0x20000000            	// #536870912
    c1fc:	cmp	x5, x4
    c200:	b.hi	c440 <__sanitizer_get_allocated_size@@Base+0x31d0>  // b.pmore
    c204:	add	x1, x21, x2
    c208:	mov	x0, x25
    c20c:	sub	x2, x5, x2
    c210:	adrp	x3, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    c214:	add	x3, x3, #0x268
    c218:	stp	x1, x5, [sp, #104]
    c21c:	str	x6, [sp, #120]
    c220:	bl	24f50 <__sanitizer_sandbox_on_notify@@Base+0x1908>
    c224:	ldp	x1, x5, [sp, #104]
    c228:	ldr	x6, [sp, #120]
    c22c:	cbz	x0, c484 <__sanitizer_get_allocated_size@@Base+0x3214>
    c230:	cmp	x1, x0
    c234:	b.ne	c4dc <__sanitizer_get_allocated_size@@Base+0x326c>  // b.any
    c238:	stp	x6, x5, [sp, #104]
    c23c:	bl	7230 <__sanitizer_print_memory_profile@plt+0xbd0>
    c240:	ldp	x6, x5, [sp, #104]
    c244:	str	x5, [x24, #96]
    c248:	cbz	x26, c2e4 <__sanitizer_get_allocated_size@@Base+0x3074>
    c24c:	add	x2, x27, #0x4
    c250:	add	x4, x20, #0x10
    c254:	sub	x0, x26, #0x1
    c258:	lsl	x2, x2, #2
    c25c:	sub	x1, x2, #0x10
    c260:	add	x3, x21, x2
    c264:	add	x2, x21, x1
    c268:	cmp	x2, x4
    c26c:	ccmp	x20, x3, #0x2, cc  // cc = lo, ul, last
    c270:	ccmp	x0, #0x7, #0x0, cs  // cs = hs, nlast
    c274:	b.ls	c45c <__sanitizer_get_allocated_size@@Base+0x31ec>  // b.plast
    c278:	lsr	x3, x26, #2
    c27c:	mov	x1, #0x0                   	// #0
    c280:	lsl	x3, x3, #4
    c284:	nop
    c288:	ldr	q0, [x20, x1]
    c28c:	str	q0, [x2, x1]
    c290:	add	x1, x1, #0x10
    c294:	cmp	x1, x3
    c298:	b.ne	c288 <__sanitizer_get_allocated_size@@Base+0x3018>  // b.any
    c29c:	tst	x26, #0x3
    c2a0:	and	x0, x26, #0xfffffffffffffffc
    c2a4:	b.eq	c2e4 <__sanitizer_get_allocated_size@@Base+0x3074>  // b.none
    c2a8:	add	x1, x27, x0
    c2ac:	ldr	w3, [x20, x0, lsl #2]
    c2b0:	add	x2, x0, #0x1
    c2b4:	cmp	x26, x2
    c2b8:	str	w3, [x21, x1, lsl #2]
    c2bc:	b.ls	c2e4 <__sanitizer_get_allocated_size@@Base+0x3074>  // b.plast
    c2c0:	add	x1, x27, x2
    c2c4:	ldr	w2, [x20, x2, lsl #2]
    c2c8:	add	x0, x0, #0x2
    c2cc:	cmp	x26, x0
    c2d0:	str	w2, [x21, x1, lsl #2]
    c2d4:	b.ls	c2e4 <__sanitizer_get_allocated_size@@Base+0x3074>  // b.plast
    c2d8:	add	x27, x27, x0
    c2dc:	ldr	w0, [x20, x0, lsl #2]
    c2e0:	str	w0, [x21, x27, lsl #2]
    c2e4:	ldr	x1, [x24, #152]
    c2e8:	cmp	x19, #0x1f
    c2ec:	ldr	x0, [x25, #32]
    c2f0:	add	x26, x1, x26
    c2f4:	str	x28, [x24, #88]
    c2f8:	mov	x1, #0x2000000000          	// #137438953472
    c2fc:	str	x26, [x24, #152]
    c300:	add	x0, x0, x1
    c304:	add	x23, x0, x23
    c308:	b.eq	c4d4 <__sanitizer_get_allocated_size@@Base+0x3264>  // b.none
    c30c:	cmp	x19, #0x10
    c310:	b.ls	c41c <__sanitizer_get_allocated_size@@Base+0x31ac>  // b.plast
    c314:	sub	x19, x19, #0x10
    c318:	mov	x2, #0x200                 	// #512
    c31c:	and	x0, x19, #0x1
    c320:	lsr	x19, x19, #1
    c324:	lsl	x19, x2, x19
    c328:	lsr	x2, x19, #1
    c32c:	madd	x19, x2, x0, x19
    c330:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    c334:	ldr	x21, [x21, #4016]
    c338:	ldr	x20, [x21]
    c33c:	cbz	x20, c430 <__sanitizer_get_allocated_size@@Base+0x31c0>
    c340:	ldr	x21, [x23, #88]
    c344:	mul	x0, x21, x19
    c348:	cmp	x0, x20
    c34c:	b.cc	c3f8 <__sanitizer_get_allocated_size@@Base+0x3188>  // b.lo, b.ul, b.last
    c350:	ldp	x0, x1, [x23, #152]
    c354:	sub	x0, x0, x1
    c358:	mul	x0, x0, x19
    c35c:	cmp	x0, x20
    c360:	b.cc	c3f8 <__sanitizer_get_allocated_size@@Base+0x3188>  // b.lo, b.ul, b.last
    c364:	ldr	w0, [x25, #40]
    c368:	tbnz	w0, #31, c3f8 <__sanitizer_get_allocated_size@@Base+0x3188>
    c36c:	ldr	x26, [x23, #176]
    c370:	mov	w1, #0x4240                	// #16960
    c374:	movk	w1, #0xf, lsl #16
    c378:	smaddl	x26, w0, w1, x26
    c37c:	bl	24368 <__sanitizer_sandbox_on_notify@@Base+0xd20>
    c380:	cmp	x26, x0
    c384:	b.hi	c3f8 <__sanitizer_get_allocated_size@@Base+0x3188>  // b.pmore
    c388:	ldr	x0, [x25, #32]
    c38c:	stp	xzr, xzr, [sp, #144]
    c390:	sub	x3, x20, #0x1
    c394:	add	x22, x22, x0
    c398:	stp	x25, x22, [sp, #128]
    c39c:	mov	x0, #0xe0000000            	// #3758096384
    c3a0:	tst	x20, x3
    c3a4:	add	x0, x22, x0
    c3a8:	ldr	x1, [x23, #104]
    c3ac:	b.ne	c4fc <__sanitizer_get_allocated_size@@Base+0x328c>  // b.any
    c3b0:	add	x1, x1, x3
    c3b4:	neg	x3, x20
    c3b8:	and	x3, x1, x3
    c3bc:	mov	x2, x19
    c3c0:	mov	x1, x21
    c3c4:	add	x4, sp, #0x80
    c3c8:	udiv	x3, x3, x20
    c3cc:	bl	bb50 <__sanitizer_get_allocated_size@@Base+0x28e0>
    c3d0:	ldr	x0, [sp, #144]
    c3d4:	cbz	x0, c3f0 <__sanitizer_get_allocated_size@@Base+0x3180>
    c3d8:	ldr	x1, [x23, #168]
    c3dc:	ldr	x2, [sp, #152]
    c3e0:	add	x0, x1, x0
    c3e4:	ldr	x1, [x23, #152]
    c3e8:	stp	x1, x0, [x23, #160]
    c3ec:	str	x2, [x23, #184]
    c3f0:	bl	24368 <__sanitizer_sandbox_on_notify@@Base+0xd20>
    c3f4:	str	x0, [x23, #176]
    c3f8:	mov	x0, x24
    c3fc:	bl	1c728 <__sanitizer_set_report_fd@@Base+0x48a8>
    c400:	ldp	x21, x22, [sp, #16]
    c404:	ldp	x23, x24, [sp, #32]
    c408:	ldp	x25, x26, [sp, #48]
    c40c:	ldp	x27, x28, [sp, #64]
    c410:	ldr	x30, [sp, #80]
    c414:	ldp	x19, x20, [sp], #160
    c418:	ret
    c41c:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    c420:	lsl	x19, x19, #5
    c424:	ldr	x21, [x21, #4016]
    c428:	ldr	x20, [x21]
    c42c:	cbnz	x20, c340 <__sanitizer_get_allocated_size@@Base+0x30d0>
    c430:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
    c434:	mov	x20, x0
    c438:	str	x0, [x21]
    c43c:	b	c340 <__sanitizer_get_allocated_size@@Base+0x30d0>
    c440:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    c444:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    c448:	mov	x3, x5
    c44c:	add	x2, x2, #0x238
    c450:	add	x0, x0, #0xe48
    c454:	mov	w1, #0x295                 	// #661
    c458:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    c45c:	neg	x0, x27, lsl #2
    c460:	mov	x1, x2
    c464:	sub	x0, x0, x21
    c468:	add	x21, x21, x6
    c46c:	add	x20, x20, x0
    c470:	ldr	w0, [x20, x1]
    c474:	str	w0, [x1], #4
    c478:	cmp	x1, x21
    c47c:	b.ne	c470 <__sanitizer_get_allocated_size@@Base+0x3200>  // b.any
    c480:	b	c2e4 <__sanitizer_get_allocated_size@@Base+0x3074>
    c484:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    c488:	cmp	x19, #0x1f
    c48c:	ldr	x0, [x0, #4024]
    c490:	ldr	x1, [x0]
    c494:	b.eq	c50c <__sanitizer_get_allocated_size@@Base+0x329c>  // b.none
    c498:	lsl	x3, x19, #5
    c49c:	cmp	x19, #0x10
    c4a0:	b.ls	c4c0 <__sanitizer_get_allocated_size@@Base+0x3250>  // b.plast
    c4a4:	sub	x0, x19, #0x10
    c4a8:	mov	x3, #0x200                 	// #512
    c4ac:	and	x2, x0, #0x1
    c4b0:	lsr	x0, x0, #1
    c4b4:	lsl	x0, x3, x0
    c4b8:	lsr	x3, x0, #1
    c4bc:	madd	x3, x3, x2, x0
    c4c0:	mov	x2, x19
    c4c4:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    c4c8:	add	x0, x0, #0x7a0
    c4cc:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
    c4d0:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
    c4d4:	mov	x19, #0x40                  	// #64
    c4d8:	b	c330 <__sanitizer_get_allocated_size@@Base+0x30c0>
    c4dc:	mov	x4, x0
    c4e0:	mov	x3, x1
    c4e4:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    c4e8:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    c4ec:	add	x2, x2, #0x1f8
    c4f0:	add	x0, x0, #0xe48
    c4f4:	mov	w1, #0x281                 	// #641
    c4f8:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    c4fc:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    c500:	add	x0, x0, #0xbf8
    c504:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
    c508:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
    c50c:	mov	x3, #0x40                  	// #64
    c510:	b	c4c0 <__sanitizer_get_allocated_size@@Base+0x3250>
    c514:	nop
    c518:	mov	x5, x1
    c51c:	mov	x1, x0
    c520:	mov	x0, x2
    c524:	mov	x2, x3
    c528:	ldr	w7, [x5]
    c52c:	mov	w3, w7
    c530:	cmp	x4, w7, uxtw
    c534:	b.hi	c554 <__sanitizer_get_allocated_size@@Base+0x32e4>  // b.pmore
    c538:	sub	x8, x3, x4
    c53c:	sub	w6, w7, w4
    c540:	add	x8, x8, #0x4
    c544:	str	w6, [x5]
    c548:	add	x1, x1, #0xa00
    c54c:	add	x3, x5, x8, lsl #2
    c550:	b	c180 <__sanitizer_get_allocated_size@@Base+0x2f10>
    c554:	str	x30, [sp, #-16]!
    c558:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    c55c:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    c560:	add	x2, x2, #0x808
    c564:	add	x0, x0, #0x3a0
    c568:	mov	w1, #0x6f                  	// #111
    c56c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    c570:	cmp	x1, x0
    c574:	b.eq	c5b0 <__sanitizer_get_allocated_size@@Base+0x3340>  // b.none
    c578:	stp	x19, x20, [sp, #-32]!
    c57c:	str	x30, [sp, #16]
    c580:	b.cc	c5b4 <__sanitizer_get_allocated_size@@Base+0x3344>  // b.lo, b.ul, b.last
    c584:	sub	x19, x1, x0
    c588:	mov	x20, x0
    c58c:	mov	x1, x19
    c590:	bl	1c1b8 <__sanitizer_set_report_fd@@Base+0x4338>
    c594:	mov	x1, #0x0                   	// #0
    c598:	bl	1c178 <__sanitizer_set_report_fd@@Base+0x42f8>
    c59c:	tst	w0, #0xff
    c5a0:	b.ne	c5d4 <__sanitizer_get_allocated_size@@Base+0x3364>  // b.any
    c5a4:	ldr	x30, [sp, #16]
    c5a8:	ldp	x19, x20, [sp], #32
    c5ac:	ret
    c5b0:	ret
    c5b4:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    c5b8:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    c5bc:	add	x2, x2, #0x840
    c5c0:	add	x0, x0, #0x858
    c5c4:	mov	x4, #0x0                   	// #0
    c5c8:	mov	x3, #0x0                   	// #0
    c5cc:	mov	w1, #0x20                  	// #32
    c5d0:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    c5d4:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    c5d8:	mov	x4, x20
    c5dc:	mov	x3, x19
    c5e0:	mov	x2, x19
    c5e4:	ldr	x1, [x1, #4024]
    c5e8:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    c5ec:	add	x0, x0, #0x8a8
    c5f0:	ldr	x1, [x1]
    c5f4:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
    c5f8:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    c5fc:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    c600:	add	x2, x2, #0x8e8
    c604:	add	x0, x0, #0x858
    c608:	mov	x4, #0x0                   	// #0
    c60c:	mov	x3, #0x0                   	// #0
    c610:	mov	w1, #0x25                  	// #37
    c614:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    c618:	ret
    c61c:	nop
    c620:	stp	x19, x20, [sp, #-48]!
    c624:	mov	x19, x0
    c628:	stp	x21, x22, [sp, #16]
    c62c:	mov	x21, #0x100000000           	// #4294967296
    c630:	stp	x23, x30, [sp, #32]
    c634:	bl	1dac8 <__sanitizer_set_report_fd@@Base+0x5c48>
    c638:	cmp	x21, x0, lsl #4
    c63c:	b.cc	c6ac <__sanitizer_get_allocated_size@@Base+0x343c>  // b.lo, b.ul, b.last
    c640:	sub	x1, x0, #0x1
    c644:	tst	x1, x0
    c648:	b.ne	c6cc <__sanitizer_get_allocated_size@@Base+0x345c>  // b.any
    c64c:	sub	x19, x19, #0x1
    c650:	neg	x1, x0
    c654:	add	x19, x19, x0
    c658:	mov	x23, #0x200000000           	// #8589934592
    c65c:	and	x19, x19, x1
    c660:	add	x23, x19, x23
    c664:	mov	x0, x23
    c668:	bl	25028 <__sanitizer_sandbox_on_notify@@Base+0x19e0>
    c66c:	mov	x22, x0
    c670:	cmn	x0, #0x1
    c674:	b.eq	c6dc <__sanitizer_get_allocated_size@@Base+0x346c>  // b.none
    c678:	mov	x20, #0x1ffffffff           	// #8589934591
    c67c:	add	x20, x0, x20
    c680:	and	x20, x20, #0xffffffff00000000
    c684:	sub	x1, x20, x21
    c688:	bl	c570 <__sanitizer_get_allocated_size@@Base+0x3300>
    c68c:	add	x1, x22, x23
    c690:	add	x0, x20, x19
    c694:	bl	c570 <__sanitizer_get_allocated_size@@Base+0x3300>
    c698:	mov	x0, x20
    c69c:	ldp	x21, x22, [sp, #16]
    c6a0:	ldp	x23, x30, [sp, #32]
    c6a4:	ldp	x19, x20, [sp], #48
    c6a8:	ret
    c6ac:	lsl	x4, x0, #4
    c6b0:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    c6b4:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    c6b8:	mov	x3, x21
    c6bc:	add	x2, x2, #0x910
    c6c0:	add	x0, x0, #0x858
    c6c4:	mov	w1, #0x30                  	// #48
    c6c8:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    c6cc:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    c6d0:	add	x0, x0, #0xbf8
    c6d4:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
    c6d8:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
    c6dc:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    c6e0:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    c6e4:	add	x2, x2, #0x938
    c6e8:	add	x0, x0, #0x858
    c6ec:	mov	x4, x22
    c6f0:	mov	x3, x22
    c6f4:	mov	w1, #0x38                  	// #56
    c6f8:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    c6fc:	nop

000000000000c700 <__hwasan_personality_wrapper@@Base>:
    c700:	stp	x19, x20, [sp, #-48]!
    c704:	and	w19, w1, #0x2
    c708:	mov	x20, x4
    c70c:	stp	x21, x22, [sp, #16]
    c710:	mov	x21, x6
    c714:	mov	x22, x7
    c718:	str	x30, [sp, #32]
    c71c:	cbz	x5, c740 <__hwasan_personality_wrapper@@Base+0x40>
    c720:	blr	x5
    c724:	cmp	w19, #0x0
    c728:	ccmp	w0, #0x8, #0x0, ne  // ne = any
    c72c:	b.eq	c748 <__hwasan_personality_wrapper@@Base+0x48>  // b.none
    c730:	ldp	x21, x22, [sp, #16]
    c734:	ldr	x30, [sp, #32]
    c738:	ldp	x19, x20, [sp], #48
    c73c:	ret
    c740:	mov	w0, #0x8                   	// #8
    c744:	cbz	w19, c730 <__hwasan_personality_wrapper@@Base+0x30>
    c748:	mov	w1, #0x1d                  	// #29
    c74c:	mov	x0, x20
    c750:	blr	x21
    c754:	mov	x19, x0
    c758:	mov	x0, x20
    c75c:	blr	x22
    c760:	mov	w2, #0x0                   	// #0
    c764:	sub	x1, x19, x0
    c768:	bl	ed00 <__hwasan_memmove@@Base+0x278>
    c76c:	mov	w0, #0x8                   	// #8
    c770:	ldp	x21, x22, [sp, #16]
    c774:	ldr	x30, [sp, #32]
    c778:	ldp	x19, x20, [sp], #48
    c77c:	ret
    c780:	stp	x19, x20, [sp, #-48]!
    c784:	adrp	x20, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    c788:	mov	x19, x0
    c78c:	stp	x21, x22, [sp, #16]
    c790:	str	x30, [sp, #32]
    c794:	bl	e050 <__interceptor_vfork@@Base+0xa70>
    c798:	ldr	x20, [x20, #4016]
    c79c:	ldp	x21, x22, [x19]
    c7a0:	ldr	x1, [x20]
    c7a4:	cbz	x1, c7c8 <__hwasan_personality_wrapper@@Base+0xc8>
    c7a8:	mov	x0, x19
    c7ac:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
    c7b0:	mov	x0, x22
    c7b4:	mov	x16, x21
    c7b8:	ldp	x21, x22, [sp, #16]
    c7bc:	ldr	x30, [sp, #32]
    c7c0:	ldp	x19, x20, [sp], #48
    c7c4:	br	x16
    c7c8:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
    c7cc:	mov	x1, x0
    c7d0:	str	x0, [x20]
    c7d4:	mov	x0, x19
    c7d8:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
    c7dc:	mov	x0, x22
    c7e0:	mov	x16, x21
    c7e4:	ldp	x21, x22, [sp, #16]
    c7e8:	ldr	x30, [sp, #32]
    c7ec:	ldp	x19, x20, [sp], #48
    c7f0:	br	x16
    c7f4:	nop

000000000000c7f8 <__interceptor_pthread_create@@Base>:
    c7f8:	stp	x19, x20, [sp, #-48]!
    c7fc:	adrp	x19, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    c800:	mov	x20, x0
    c804:	stp	x21, x22, [sp, #16]
    c808:	mov	x22, x2
    c80c:	mov	x21, x3
    c810:	stp	x23, x30, [sp, #32]
    c814:	mov	x23, x1
    c818:	bl	e3f8 <__interceptor_vfork@@Base+0xe18>
    c81c:	ldr	x19, [x19, #4016]
    c820:	mov	x4, x0
    c824:	ldr	w1, [x0, #2680]
    c828:	ldr	x0, [x19]
    c82c:	add	w1, w1, #0x1
    c830:	str	w1, [x4, #2680]
    c834:	cbz	x0, c898 <__interceptor_pthread_create@@Base+0xa0>
    c838:	mov	w2, #0x0                   	// #0
    c83c:	adrp	x1, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    c840:	add	x1, x1, #0x958
    c844:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
    c848:	adrp	x2, 5d000 <__hwasan_shadow_memory_dynamic_address@@Base+0x2e0>
    c84c:	mov	x3, x0
    c850:	and	x1, x23, #0xffffffffffffff
    c854:	and	x0, x20, #0xffffffffffffff
    c858:	ldr	x4, [x2, #2624]
    c85c:	adrp	x2, c000 <__sanitizer_get_allocated_size@@Base+0x2d90>
    c860:	add	x2, x2, #0x780
    c864:	stp	x22, x21, [x3]
    c868:	blr	x4
    c86c:	mov	w19, w0
    c870:	bl	e3f8 <__interceptor_vfork@@Base+0xe18>
    c874:	mov	x1, x0
    c878:	ldp	x21, x22, [sp, #16]
    c87c:	mov	w0, w19
    c880:	ldr	w2, [x1, #2680]
    c884:	ldp	x23, x30, [sp, #32]
    c888:	sub	w2, w2, #0x1
    c88c:	str	w2, [x1, #2680]
    c890:	ldp	x19, x20, [sp], #48
    c894:	ret
    c898:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
    c89c:	str	x0, [x19]
    c8a0:	b	c838 <__interceptor_pthread_create@@Base+0x40>
    c8a4:	nop

000000000000c8a8 <__interceptor_fork@@Base>:
    c8a8:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    c8ac:	stp	x19, x30, [sp, #-16]!
    c8b0:	ldr	x0, [x0, #3824]
    c8b4:	ldrb	w0, [x0]
    c8b8:	cbnz	w0, c8f8 <__interceptor_fork@@Base+0x50>
    c8bc:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    c8c0:	ldr	x0, [x0, #3904]
    c8c4:	ldr	w0, [x0]
    c8c8:	cbz	w0, c8f0 <__interceptor_fork@@Base+0x48>
    c8cc:	bl	27218 <__sanitizer_cov_dump@@Base+0x5f8>
    c8d0:	adrp	x0, 5d000 <__hwasan_shadow_memory_dynamic_address@@Base+0x2e0>
    c8d4:	ldr	x0, [x0, #2632]
    c8d8:	blr	x0
    c8dc:	mov	w19, w0
    c8e0:	bl	272a8 <__sanitizer_cov_dump@@Base+0x688>
    c8e4:	mov	w0, w19
    c8e8:	ldp	x19, x30, [sp], #16
    c8ec:	ret
    c8f0:	bl	64e0 <__hwasan_init@plt>
    c8f4:	b	c8cc <__interceptor_fork@@Base+0x24>
    c8f8:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    c8fc:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    c900:	add	x2, x2, #0xa00
    c904:	add	x0, x0, #0x968
    c908:	mov	x4, #0x0                   	// #0
    c90c:	mov	x3, #0x0                   	// #0
    c910:	mov	w1, #0x13c                 	// #316
    c914:	bl	23150 <__sanitizer_on_print@@Base+0x3830>

000000000000c918 <__interceptor_posix_memalign@@Base>:
    c918:	sub	sp, sp, #0x850
    c91c:	adrp	x3, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    c920:	stp	x29, x30, [sp]
    c924:	mov	x29, sp
    c928:	ldr	x3, [x3, #3904]
    c92c:	stp	x21, x22, [sp, #32]
    c930:	add	x22, x29, #0x38
    c934:	add	x4, x22, #0x10
    c938:	stp	x19, x20, [sp, #16]
    c93c:	ldr	w3, [x3]
    c940:	str	x4, [x29, #56]
    c944:	mov	x19, x0
    c948:	str	xzr, [x29, #64]
    c94c:	mov	x20, x1
    c950:	str	xzr, [x29, #2120]
    c954:	mov	x21, x2
    c958:	cbnz	w3, c988 <__interceptor_posix_memalign@@Base+0x70>
    c95c:	cbz	x19, c9c8 <__interceptor_posix_memalign@@Base+0xb0>
    c960:	mov	x3, x22
    c964:	mov	x2, x21
    c968:	mov	x1, x20
    c96c:	mov	x0, x19
    c970:	bl	9e58 <__sanitizer_get_allocated_size@@Base+0xbe8>
    c974:	ldp	x29, x30, [sp]
    c978:	ldp	x19, x20, [sp, #16]
    c97c:	ldp	x21, x22, [sp, #32]
    c980:	add	sp, sp, #0x850
    c984:	ret
    c988:	bl	27c78 <__sanitizer_cov_dump@@Base+0x1058>
    c98c:	mov	x1, x0
    c990:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    c994:	ldr	x2, [x2, #4056]
    c998:	ldr	w5, [x2, #36]
    c99c:	cbz	w5, c9e8 <__interceptor_posix_memalign@@Base+0xd0>
    c9a0:	str	x29, [x29, #2120]
    c9a4:	cmp	w5, #0x1
    c9a8:	ldrb	w4, [x2, #34]
    c9ac:	b.eq	c9f4 <__interceptor_posix_memalign@@Base+0xdc>  // b.none
    c9b0:	mov	x2, x29
    c9b4:	mov	x0, x22
    c9b8:	mov	x3, #0x0                   	// #0
    c9bc:	bl	7238 <__sanitizer_print_memory_profile@plt+0xbd8>
    c9c0:	cbnz	x19, c960 <__interceptor_posix_memalign@@Base+0x48>
    c9c4:	nop
    c9c8:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    c9cc:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    c9d0:	add	x2, x2, #0x9b8
    c9d4:	add	x0, x0, #0x968
    c9d8:	mov	x4, #0x0                   	// #0
    c9dc:	mov	x3, #0x0                   	// #0
    c9e0:	mov	w1, #0x4a                  	// #74
    c9e4:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    c9e8:	str	w5, [x29, #64]
    c9ec:	str	xzr, [x29, #2120]
    c9f0:	b	c95c <__interceptor_posix_memalign@@Base+0x44>
    c9f4:	str	w5, [x29, #64]
    c9f8:	str	x0, [x29, #72]
    c9fc:	b	c95c <__interceptor_posix_memalign@@Base+0x44>

000000000000ca00 <__interceptor_memalign@@Base>:
    ca00:	sub	sp, sp, #0x850
    ca04:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    ca08:	stp	x29, x30, [sp]
    ca0c:	mov	x29, sp
    ca10:	ldr	x2, [x2, #3904]
    ca14:	stp	x19, x20, [sp, #16]
    ca18:	mov	x19, x0
    ca1c:	str	xzr, [x29, #64]
    ca20:	mov	x20, x1
    ca24:	ldr	w0, [x2]
    ca28:	str	x21, [sp, #32]
    ca2c:	add	x21, x29, #0x38
    ca30:	add	x3, x21, #0x10
    ca34:	str	x3, [x29, #56]
    ca38:	str	xzr, [x29, #2120]
    ca3c:	cbnz	w0, ca64 <__interceptor_memalign@@Base+0x64>
    ca40:	mov	x2, x21
    ca44:	mov	x1, x20
    ca48:	mov	x0, x19
    ca4c:	bl	9bd0 <__sanitizer_get_allocated_size@@Base+0x960>
    ca50:	ldp	x29, x30, [sp]
    ca54:	ldp	x19, x20, [sp, #16]
    ca58:	ldr	x21, [sp, #32]
    ca5c:	add	sp, sp, #0x850
    ca60:	ret
    ca64:	bl	27c78 <__sanitizer_cov_dump@@Base+0x1058>
    ca68:	mov	x1, x0
    ca6c:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    ca70:	ldr	x2, [x2, #4056]
    ca74:	ldr	w5, [x2, #36]
    ca78:	cbz	w5, caa0 <__interceptor_memalign@@Base+0xa0>
    ca7c:	str	x29, [x29, #2120]
    ca80:	cmp	w5, #0x1
    ca84:	ldrb	w4, [x2, #34]
    ca88:	b.eq	caac <__interceptor_memalign@@Base+0xac>  // b.none
    ca8c:	mov	x2, x29
    ca90:	mov	x0, x21
    ca94:	mov	x3, #0x0                   	// #0
    ca98:	bl	7238 <__sanitizer_print_memory_profile@plt+0xbd8>
    ca9c:	b	ca40 <__interceptor_memalign@@Base+0x40>
    caa0:	str	w5, [x29, #64]
    caa4:	str	xzr, [x29, #2120]
    caa8:	b	ca40 <__interceptor_memalign@@Base+0x40>
    caac:	str	w5, [x29, #64]
    cab0:	str	x0, [x29, #72]
    cab4:	b	ca40 <__interceptor_memalign@@Base+0x40>

000000000000cab8 <__interceptor_aligned_alloc@@Base>:
    cab8:	sub	sp, sp, #0x850
    cabc:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    cac0:	stp	x29, x30, [sp]
    cac4:	mov	x29, sp
    cac8:	ldr	x2, [x2, #3904]
    cacc:	stp	x19, x20, [sp, #16]
    cad0:	mov	x19, x0
    cad4:	str	xzr, [x29, #64]
    cad8:	mov	x20, x1
    cadc:	ldr	w0, [x2]
    cae0:	str	x21, [sp, #32]
    cae4:	add	x21, x29, #0x38
    cae8:	add	x3, x21, #0x10
    caec:	str	x3, [x29, #56]
    caf0:	str	xzr, [x29, #2120]
    caf4:	cbnz	w0, cb1c <__interceptor_aligned_alloc@@Base+0x64>
    caf8:	mov	x2, x21
    cafc:	mov	x1, x20
    cb00:	mov	x0, x19
    cb04:	bl	9c88 <__sanitizer_get_allocated_size@@Base+0xa18>
    cb08:	ldp	x29, x30, [sp]
    cb0c:	ldp	x19, x20, [sp, #16]
    cb10:	ldr	x21, [sp, #32]
    cb14:	add	sp, sp, #0x850
    cb18:	ret
    cb1c:	bl	27c78 <__sanitizer_cov_dump@@Base+0x1058>
    cb20:	mov	x1, x0
    cb24:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    cb28:	ldr	x2, [x2, #4056]
    cb2c:	ldr	w5, [x2, #36]
    cb30:	cbz	w5, cb58 <__interceptor_aligned_alloc@@Base+0xa0>
    cb34:	str	x29, [x29, #2120]
    cb38:	cmp	w5, #0x1
    cb3c:	ldrb	w4, [x2, #34]
    cb40:	b.eq	cb64 <__interceptor_aligned_alloc@@Base+0xac>  // b.none
    cb44:	mov	x2, x29
    cb48:	mov	x0, x21
    cb4c:	mov	x3, #0x0                   	// #0
    cb50:	bl	7238 <__sanitizer_print_memory_profile@plt+0xbd8>
    cb54:	b	caf8 <__interceptor_aligned_alloc@@Base+0x40>
    cb58:	str	w5, [x29, #64]
    cb5c:	str	xzr, [x29, #2120]
    cb60:	b	caf8 <__interceptor_aligned_alloc@@Base+0x40>
    cb64:	str	w5, [x29, #64]
    cb68:	str	x0, [x29, #72]
    cb6c:	b	caf8 <__interceptor_aligned_alloc@@Base+0x40>

000000000000cb70 <__interceptor___libc_memalign@@Base>:
    cb70:	sub	sp, sp, #0x850
    cb74:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    cb78:	stp	x29, x30, [sp]
    cb7c:	mov	x29, sp
    cb80:	ldr	x2, [x2, #3904]
    cb84:	stp	x19, x20, [sp, #16]
    cb88:	mov	x19, x0
    cb8c:	str	xzr, [x29, #64]
    cb90:	mov	x20, x1
    cb94:	ldr	w0, [x2]
    cb98:	str	x21, [sp, #32]
    cb9c:	add	x21, x29, #0x38
    cba0:	add	x3, x21, #0x10
    cba4:	str	x3, [x29, #56]
    cba8:	str	xzr, [x29, #2120]
    cbac:	cbnz	w0, cbe8 <__interceptor___libc_memalign@@Base+0x78>
    cbb0:	mov	x0, x19
    cbb4:	mov	x2, x21
    cbb8:	mov	x1, x20
    cbbc:	bl	9bd0 <__sanitizer_get_allocated_size@@Base+0x960>
    cbc0:	mov	x19, x0
    cbc4:	cbz	x0, cbd0 <__interceptor___libc_memalign@@Base+0x60>
    cbc8:	mov	x1, x20
    cbcc:	bl	21ba8 <__sanitizer_on_print@@Base+0x2288>
    cbd0:	mov	x0, x19
    cbd4:	ldp	x29, x30, [sp]
    cbd8:	ldp	x19, x20, [sp, #16]
    cbdc:	ldr	x21, [sp, #32]
    cbe0:	add	sp, sp, #0x850
    cbe4:	ret
    cbe8:	bl	27c78 <__sanitizer_cov_dump@@Base+0x1058>
    cbec:	mov	x1, x0
    cbf0:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    cbf4:	ldr	x2, [x2, #4056]
    cbf8:	ldr	w5, [x2, #36]
    cbfc:	cbz	w5, cc24 <__interceptor___libc_memalign@@Base+0xb4>
    cc00:	str	x29, [x29, #2120]
    cc04:	cmp	w5, #0x1
    cc08:	ldrb	w4, [x2, #34]
    cc0c:	b.eq	cc30 <__interceptor___libc_memalign@@Base+0xc0>  // b.none
    cc10:	mov	x2, x29
    cc14:	mov	x0, x21
    cc18:	mov	x3, #0x0                   	// #0
    cc1c:	bl	7238 <__sanitizer_print_memory_profile@plt+0xbd8>
    cc20:	b	cbb0 <__interceptor___libc_memalign@@Base+0x40>
    cc24:	str	w5, [x29, #64]
    cc28:	str	xzr, [x29, #2120]
    cc2c:	b	cbb0 <__interceptor___libc_memalign@@Base+0x40>
    cc30:	str	w5, [x29, #64]
    cc34:	str	x0, [x29, #72]
    cc38:	b	cbb0 <__interceptor___libc_memalign@@Base+0x40>
    cc3c:	nop

000000000000cc40 <__interceptor_valloc@@Base>:
    cc40:	sub	sp, sp, #0x840
    cc44:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    cc48:	stp	x29, x30, [sp]
    cc4c:	mov	x29, sp
    cc50:	ldr	x1, [x1, #3904]
    cc54:	stp	x19, x20, [sp, #16]
    cc58:	mov	x19, x0
    cc5c:	add	x20, x29, #0x28
    cc60:	str	xzr, [x29, #48]
    cc64:	ldr	w0, [x1]
    cc68:	add	x2, x20, #0x10
    cc6c:	str	x2, [x29, #40]
    cc70:	str	xzr, [x29, #2104]
    cc74:	cbnz	w0, cc94 <__interceptor_valloc@@Base+0x54>
    cc78:	mov	x1, x20
    cc7c:	mov	x0, x19
    cc80:	bl	9b30 <__sanitizer_get_allocated_size@@Base+0x8c0>
    cc84:	ldp	x29, x30, [sp]
    cc88:	ldp	x19, x20, [sp, #16]
    cc8c:	add	sp, sp, #0x840
    cc90:	ret
    cc94:	bl	27c78 <__sanitizer_cov_dump@@Base+0x1058>
    cc98:	mov	x1, x0
    cc9c:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    cca0:	ldr	x2, [x2, #4056]
    cca4:	ldr	w5, [x2, #36]
    cca8:	cbz	w5, cce8 <__interceptor_valloc@@Base+0xa8>
    ccac:	str	x29, [x29, #2104]
    ccb0:	cmp	w5, #0x1
    ccb4:	ldrb	w4, [x2, #34]
    ccb8:	b.eq	cd0c <__interceptor_valloc@@Base+0xcc>  // b.none
    ccbc:	mov	x2, x29
    ccc0:	mov	x3, #0x0                   	// #0
    ccc4:	mov	x0, x20
    ccc8:	bl	7238 <__sanitizer_print_memory_profile@plt+0xbd8>
    cccc:	mov	x1, x20
    ccd0:	mov	x0, x19
    ccd4:	bl	9b30 <__sanitizer_get_allocated_size@@Base+0x8c0>
    ccd8:	ldp	x29, x30, [sp]
    ccdc:	ldp	x19, x20, [sp, #16]
    cce0:	add	sp, sp, #0x840
    cce4:	ret
    cce8:	str	w5, [x29, #48]
    ccec:	str	xzr, [x29, #2104]
    ccf0:	mov	x1, x20
    ccf4:	mov	x0, x19
    ccf8:	bl	9b30 <__sanitizer_get_allocated_size@@Base+0x8c0>
    ccfc:	ldp	x29, x30, [sp]
    cd00:	ldp	x19, x20, [sp, #16]
    cd04:	add	sp, sp, #0x840
    cd08:	ret
    cd0c:	str	w5, [x29, #48]
    cd10:	str	x0, [x29, #56]
    cd14:	b	ccf0 <__interceptor_valloc@@Base+0xb0>

000000000000cd18 <__interceptor_pvalloc@@Base>:
    cd18:	sub	sp, sp, #0x840
    cd1c:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    cd20:	stp	x29, x30, [sp]
    cd24:	mov	x29, sp
    cd28:	ldr	x1, [x1, #3904]
    cd2c:	stp	x19, x20, [sp, #16]
    cd30:	mov	x19, x0
    cd34:	add	x20, x29, #0x28
    cd38:	str	xzr, [x29, #48]
    cd3c:	ldr	w0, [x1]
    cd40:	add	x2, x20, #0x10
    cd44:	str	x2, [x29, #40]
    cd48:	str	xzr, [x29, #2104]
    cd4c:	cbnz	w0, cd6c <__interceptor_pvalloc@@Base+0x54>
    cd50:	mov	x1, x20
    cd54:	mov	x0, x19
    cd58:	bl	9d58 <__sanitizer_get_allocated_size@@Base+0xae8>
    cd5c:	ldp	x29, x30, [sp]
    cd60:	ldp	x19, x20, [sp, #16]
    cd64:	add	sp, sp, #0x840
    cd68:	ret
    cd6c:	bl	27c78 <__sanitizer_cov_dump@@Base+0x1058>
    cd70:	mov	x1, x0
    cd74:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    cd78:	ldr	x2, [x2, #4056]
    cd7c:	ldr	w5, [x2, #36]
    cd80:	cbz	w5, cdc0 <__interceptor_pvalloc@@Base+0xa8>
    cd84:	str	x29, [x29, #2104]
    cd88:	cmp	w5, #0x1
    cd8c:	ldrb	w4, [x2, #34]
    cd90:	b.eq	cde4 <__interceptor_pvalloc@@Base+0xcc>  // b.none
    cd94:	mov	x2, x29
    cd98:	mov	x3, #0x0                   	// #0
    cd9c:	mov	x0, x20
    cda0:	bl	7238 <__sanitizer_print_memory_profile@plt+0xbd8>
    cda4:	mov	x1, x20
    cda8:	mov	x0, x19
    cdac:	bl	9d58 <__sanitizer_get_allocated_size@@Base+0xae8>
    cdb0:	ldp	x29, x30, [sp]
    cdb4:	ldp	x19, x20, [sp, #16]
    cdb8:	add	sp, sp, #0x840
    cdbc:	ret
    cdc0:	str	w5, [x29, #48]
    cdc4:	str	xzr, [x29, #2104]
    cdc8:	mov	x1, x20
    cdcc:	mov	x0, x19
    cdd0:	bl	9d58 <__sanitizer_get_allocated_size@@Base+0xae8>
    cdd4:	ldp	x29, x30, [sp]
    cdd8:	ldp	x19, x20, [sp, #16]
    cddc:	add	sp, sp, #0x840
    cde0:	ret
    cde4:	str	w5, [x29, #48]
    cde8:	str	x0, [x29, #56]
    cdec:	b	cdc8 <__interceptor_pvalloc@@Base+0xb0>

000000000000cdf0 <__interceptor_free@@Base>:
    cdf0:	sub	sp, sp, #0x840
    cdf4:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    cdf8:	stp	x29, x30, [sp]
    cdfc:	mov	x29, sp
    ce00:	ldr	x1, [x1, #3904]
    ce04:	stp	x19, x20, [sp, #16]
    ce08:	mov	x19, x0
    ce0c:	add	x20, x29, #0x28
    ce10:	str	xzr, [x29, #48]
    ce14:	ldr	w0, [x1]
    ce18:	add	x2, x20, #0x10
    ce1c:	str	x2, [x29, #40]
    ce20:	str	xzr, [x29, #2104]
    ce24:	cbnz	w0, ce60 <__interceptor_free@@Base+0x70>
    ce28:	cbz	x19, ce50 <__interceptor_free@@Base+0x60>
    ce2c:	adrp	x0, 5d000 <__hwasan_shadow_memory_dynamic_address@@Base+0x2e0>
    ce30:	add	x0, x0, #0xa80
    ce34:	sub	x0, x19, x0
    ce38:	mov	x1, #0x1fff                	// #8191
    ce3c:	cmp	x0, x1
    ce40:	b.ls	ce50 <__interceptor_free@@Base+0x60>  // b.plast
    ce44:	mov	x1, x20
    ce48:	mov	x0, x19
    ce4c:	bl	a9a0 <__sanitizer_get_allocated_size@@Base+0x1730>
    ce50:	ldp	x29, x30, [sp]
    ce54:	ldp	x19, x20, [sp, #16]
    ce58:	add	sp, sp, #0x840
    ce5c:	ret
    ce60:	bl	27c78 <__sanitizer_cov_dump@@Base+0x1058>
    ce64:	mov	x1, x0
    ce68:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    ce6c:	ldr	x2, [x2, #4056]
    ce70:	ldr	w5, [x2, #36]
    ce74:	cbz	w5, ce9c <__interceptor_free@@Base+0xac>
    ce78:	str	x29, [x29, #2104]
    ce7c:	cmp	w5, #0x1
    ce80:	ldrb	w4, [x2, #34]
    ce84:	b.eq	cea8 <__interceptor_free@@Base+0xb8>  // b.none
    ce88:	mov	x2, x29
    ce8c:	mov	x0, x20
    ce90:	mov	x3, #0x0                   	// #0
    ce94:	bl	7238 <__sanitizer_print_memory_profile@plt+0xbd8>
    ce98:	b	ce28 <__interceptor_free@@Base+0x38>
    ce9c:	str	w5, [x29, #48]
    cea0:	str	xzr, [x29, #2104]
    cea4:	b	ce28 <__interceptor_free@@Base+0x38>
    cea8:	str	w5, [x29, #48]
    ceac:	str	x0, [x29, #56]
    ceb0:	b	ce28 <__interceptor_free@@Base+0x38>
    ceb4:	nop

000000000000ceb8 <__interceptor_cfree@@Base>:
    ceb8:	b	cdf0 <__interceptor_free@@Base>
    cebc:	nop

000000000000cec0 <__interceptor_malloc_usable_size@@Base>:
    cec0:	b	63d0 <__sanitizer_get_allocated_size@plt>
    cec4:	nop

000000000000cec8 <__interceptor_mallinfo@@Base>:
    cec8:	str	x30, [sp, #-16]!
    cecc:	mov	x0, x8
    ced0:	mov	x2, #0x28                  	// #40
    ced4:	mov	w1, #0x0                   	// #0
    ced8:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
    cedc:	ldr	x30, [sp], #16
    cee0:	ret
    cee4:	nop

000000000000cee8 <__interceptor_mallopt@@Base>:
    cee8:	mov	w0, #0x0                   	// #0
    ceec:	ret

000000000000cef0 <__interceptor_malloc_stats@@Base>:
    cef0:	ret
    cef4:	nop

000000000000cef8 <__interceptor_calloc@@Base>:
    cef8:	sub	sp, sp, #0x850
    cefc:	stp	x29, x30, [sp]
    cf00:	mov	x29, sp
    cf04:	stp	x19, x20, [sp, #16]
    cf08:	adrp	x20, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    cf0c:	mov	x19, x0
    cf10:	stp	x21, x22, [sp, #32]
    cf14:	add	x22, x29, #0x38
    cf18:	add	x2, x22, #0x10
    cf1c:	str	x2, [x29, #56]
    cf20:	mov	x21, x1
    cf24:	ldr	x2, [x20, #3904]
    cf28:	str	xzr, [x29, #64]
    cf2c:	str	xzr, [x29, #2120]
    cf30:	ldr	w0, [x2]
    cf34:	cbnz	w0, cf7c <__interceptor_calloc@@Base+0x84>
    cf38:	adrp	x1, 5d000 <__hwasan_shadow_memory_dynamic_address@@Base+0x2e0>
    cf3c:	add	x1, x1, #0xa40
    cf40:	adrp	x0, 5d000 <__hwasan_shadow_memory_dynamic_address@@Base+0x2e0>
    cf44:	mul	x3, x19, x21
    cf48:	add	x2, x0, #0xa80
    cf4c:	ldr	x0, [x1, #16]
    cf50:	add	x3, x3, #0x7
    cf54:	add	x3, x0, x3, lsr #3
    cf58:	str	x3, [x1, #16]
    cf5c:	cmp	x3, #0x3ff
    cf60:	add	x0, x2, x0, lsl #3
    cf64:	b.hi	cffc <__interceptor_calloc@@Base+0x104>  // b.pmore
    cf68:	ldp	x29, x30, [sp]
    cf6c:	ldp	x19, x20, [sp, #16]
    cf70:	ldp	x21, x22, [sp, #32]
    cf74:	add	sp, sp, #0x850
    cf78:	ret
    cf7c:	bl	27c78 <__sanitizer_cov_dump@@Base+0x1058>
    cf80:	mov	x1, x0
    cf84:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    cf88:	ldr	x2, [x2, #4056]
    cf8c:	ldr	w5, [x2, #36]
    cf90:	cbz	w5, cfe4 <__interceptor_calloc@@Base+0xec>
    cf94:	str	x29, [x29, #2120]
    cf98:	cmp	w5, #0x1
    cf9c:	ldrb	w4, [x2, #34]
    cfa0:	b.eq	cff0 <__interceptor_calloc@@Base+0xf8>  // b.none
    cfa4:	mov	x2, x29
    cfa8:	mov	x0, x22
    cfac:	mov	x3, #0x0                   	// #0
    cfb0:	bl	7238 <__sanitizer_print_memory_profile@plt+0xbd8>
    cfb4:	ldr	x20, [x20, #3904]
    cfb8:	ldr	w0, [x20]
    cfbc:	cbz	w0, cf38 <__interceptor_calloc@@Base+0x40>
    cfc0:	mov	x2, x22
    cfc4:	mov	x1, x21
    cfc8:	mov	x0, x19
    cfcc:	bl	9a78 <__sanitizer_get_allocated_size@@Base+0x808>
    cfd0:	ldp	x29, x30, [sp]
    cfd4:	ldp	x19, x20, [sp, #16]
    cfd8:	ldp	x21, x22, [sp, #32]
    cfdc:	add	sp, sp, #0x850
    cfe0:	ret
    cfe4:	str	w5, [x29, #64]
    cfe8:	str	xzr, [x29, #2120]
    cfec:	b	cfb4 <__interceptor_calloc@@Base+0xbc>
    cff0:	str	w5, [x29, #64]
    cff4:	str	x0, [x29, #72]
    cff8:	b	cfb4 <__interceptor_calloc@@Base+0xbc>
    cffc:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    d000:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    d004:	add	x2, x2, #0x9d0
    d008:	add	x0, x0, #0x968
    d00c:	mov	x4, #0x400                 	// #1024
    d010:	mov	w1, #0x3c                  	// #60
    d014:	bl	23150 <__sanitizer_on_print@@Base+0x3830>

000000000000d018 <__interceptor_realloc@@Base>:
    d018:	sub	sp, sp, #0x870
    d01c:	stp	x29, x30, [sp]
    d020:	mov	x29, sp
    d024:	stp	x21, x22, [sp, #32]
    d028:	adrp	x22, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    d02c:	add	x21, x29, #0x58
    d030:	ldr	x2, [x22, #3904]
    d034:	stp	x19, x20, [sp, #16]
    d038:	mov	x19, x0
    d03c:	add	x3, x21, #0x10
    d040:	stp	x23, x24, [sp, #48]
    d044:	ldr	w0, [x2]
    d048:	str	x25, [sp, #64]
    d04c:	adrp	x24, 5d000 <__hwasan_shadow_memory_dynamic_address@@Base+0x2e0>
    d050:	str	x3, [x29, #88]
    d054:	add	x23, x24, #0xa80
    d058:	str	xzr, [x29, #96]
    d05c:	mov	x20, x1
    d060:	str	xzr, [x29, #2152]
    d064:	sub	x25, x19, x23
    d068:	cbnz	w0, d0ac <__interceptor_realloc@@Base+0x94>
    d06c:	mov	x0, #0x1fff                	// #8191
    d070:	cmp	x25, x0
    d074:	b.ls	d138 <__interceptor_realloc@@Base+0x120>  // b.plast
    d078:	mov	x2, x21
    d07c:	mov	x1, x20
    d080:	mov	x0, x19
    d084:	bl	a9b0 <__sanitizer_get_allocated_size@@Base+0x1740>
    d088:	mov	x21, x0
    d08c:	mov	x0, x21
    d090:	ldp	x29, x30, [sp]
    d094:	ldp	x19, x20, [sp, #16]
    d098:	ldp	x21, x22, [sp, #32]
    d09c:	ldp	x23, x24, [sp, #48]
    d0a0:	ldr	x25, [sp, #64]
    d0a4:	add	sp, sp, #0x870
    d0a8:	ret
    d0ac:	bl	27c78 <__sanitizer_cov_dump@@Base+0x1058>
    d0b0:	mov	x1, x0
    d0b4:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    d0b8:	ldr	x2, [x2, #4056]
    d0bc:	ldr	w5, [x2, #36]
    d0c0:	cbz	w5, d120 <__interceptor_realloc@@Base+0x108>
    d0c4:	str	x29, [x29, #2152]
    d0c8:	cmp	w5, #0x1
    d0cc:	ldrb	w4, [x2, #34]
    d0d0:	b.eq	d12c <__interceptor_realloc@@Base+0x114>  // b.none
    d0d4:	mov	x2, x29
    d0d8:	mov	x0, x21
    d0dc:	mov	x3, #0x0                   	// #0
    d0e0:	bl	7238 <__sanitizer_print_memory_profile@plt+0xbd8>
    d0e4:	mov	x0, #0x1fff                	// #8191
    d0e8:	cmp	x25, x0
    d0ec:	b.hi	d078 <__interceptor_realloc@@Base+0x60>  // b.pmore
    d0f0:	ldr	x22, [x22, #3904]
    d0f4:	ldr	w0, [x22]
    d0f8:	cbz	w0, d138 <__interceptor_realloc@@Base+0x120>
    d0fc:	mov	x1, x21
    d100:	mov	x0, x20
    d104:	bl	99f8 <__sanitizer_get_allocated_size@@Base+0x788>
    d108:	mov	x21, x0
    d10c:	mov	x2, x20
    d110:	mov	x1, x19
    d114:	mov	x0, x21
    d118:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
    d11c:	b	d08c <__interceptor_realloc@@Base+0x74>
    d120:	str	w5, [x29, #96]
    d124:	str	xzr, [x29, #2152]
    d128:	b	d0e4 <__interceptor_realloc@@Base+0xcc>
    d12c:	str	w5, [x29, #96]
    d130:	str	x0, [x29, #104]
    d134:	b	d0e4 <__interceptor_realloc@@Base+0xcc>
    d138:	add	x0, x23, #0x400
    d13c:	add	x24, x24, #0xa80
    d140:	sub	x0, x0, x19
    d144:	cmp	x20, x0
    d148:	csel	x20, x20, x0, ls  // ls = plast
    d14c:	adrp	x0, 5d000 <__hwasan_shadow_memory_dynamic_address@@Base+0x2e0>
    d150:	add	x0, x0, #0xa40
    d154:	add	x3, x20, #0x7
    d158:	ldr	x21, [x0, #16]
    d15c:	add	x3, x21, x3, lsr #3
    d160:	str	x3, [x0, #16]
    d164:	add	x21, x24, x21, lsl #3
    d168:	cmp	x3, #0x3ff
    d16c:	b.ls	d10c <__interceptor_realloc@@Base+0xf4>  // b.plast
    d170:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    d174:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    d178:	add	x2, x2, #0x9d0
    d17c:	add	x0, x0, #0x968
    d180:	mov	x4, #0x400                 	// #1024
    d184:	mov	w1, #0x3c                  	// #60
    d188:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    d18c:	nop

000000000000d190 <__interceptor_reallocarray@@Base>:
    d190:	sub	sp, sp, #0x850
    d194:	adrp	x3, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    d198:	stp	x29, x30, [sp]
    d19c:	mov	x29, sp
    d1a0:	ldr	x3, [x3, #3904]
    d1a4:	stp	x21, x22, [sp, #32]
    d1a8:	add	x22, x29, #0x38
    d1ac:	add	x4, x22, #0x10
    d1b0:	stp	x19, x20, [sp, #16]
    d1b4:	ldr	w3, [x3]
    d1b8:	str	x4, [x29, #56]
    d1bc:	mov	x19, x0
    d1c0:	str	xzr, [x29, #64]
    d1c4:	mov	x20, x1
    d1c8:	str	xzr, [x29, #2120]
    d1cc:	mov	x21, x2
    d1d0:	cbnz	w3, d1fc <__interceptor_reallocarray@@Base+0x6c>
    d1d4:	mov	x3, x22
    d1d8:	mov	x2, x21
    d1dc:	mov	x1, x20
    d1e0:	mov	x0, x19
    d1e4:	bl	ac28 <__sanitizer_get_allocated_size@@Base+0x19b8>
    d1e8:	ldp	x29, x30, [sp]
    d1ec:	ldp	x19, x20, [sp, #16]
    d1f0:	ldp	x21, x22, [sp, #32]
    d1f4:	add	sp, sp, #0x850
    d1f8:	ret
    d1fc:	bl	27c78 <__sanitizer_cov_dump@@Base+0x1058>
    d200:	mov	x1, x0
    d204:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    d208:	ldr	x2, [x2, #4056]
    d20c:	ldr	w5, [x2, #36]
    d210:	cbz	w5, d238 <__interceptor_reallocarray@@Base+0xa8>
    d214:	str	x29, [x29, #2120]
    d218:	cmp	w5, #0x1
    d21c:	ldrb	w4, [x2, #34]
    d220:	b.eq	d244 <__interceptor_reallocarray@@Base+0xb4>  // b.none
    d224:	mov	x2, x29
    d228:	mov	x0, x22
    d22c:	mov	x3, #0x0                   	// #0
    d230:	bl	7238 <__sanitizer_print_memory_profile@plt+0xbd8>
    d234:	b	d1d4 <__interceptor_reallocarray@@Base+0x44>
    d238:	str	w5, [x29, #64]
    d23c:	str	xzr, [x29, #2120]
    d240:	b	d1d4 <__interceptor_reallocarray@@Base+0x44>
    d244:	str	w5, [x29, #64]
    d248:	str	x0, [x29, #72]
    d24c:	b	d1d4 <__interceptor_reallocarray@@Base+0x44>

000000000000d250 <__interceptor_malloc@@Base>:
    d250:	sub	sp, sp, #0x850
    d254:	stp	x29, x30, [sp]
    d258:	mov	x29, sp
    d25c:	stp	x19, x20, [sp, #16]
    d260:	add	x20, x29, #0x38
    d264:	add	x1, x20, #0x10
    d268:	str	x21, [sp, #32]
    d26c:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    d270:	str	x1, [x29, #56]
    d274:	mov	x19, x0
    d278:	ldr	x1, [x21, #3904]
    d27c:	str	xzr, [x29, #64]
    d280:	str	xzr, [x29, #2120]
    d284:	ldr	w1, [x1]
    d288:	cbnz	w1, d2cc <__interceptor_malloc@@Base+0x7c>
    d28c:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    d290:	ldr	x1, [x1, #3824]
    d294:	ldrb	w0, [x1]
    d298:	cbnz	w0, d330 <__interceptor_malloc@@Base+0xe0>
    d29c:	bl	64e0 <__hwasan_init@plt>
    d2a0:	ldr	x21, [x21, #3904]
    d2a4:	ldr	w1, [x21]
    d2a8:	cbz	w1, d330 <__interceptor_malloc@@Base+0xe0>
    d2ac:	mov	x1, x20
    d2b0:	mov	x0, x19
    d2b4:	bl	99f8 <__sanitizer_get_allocated_size@@Base+0x788>
    d2b8:	ldp	x29, x30, [sp]
    d2bc:	ldp	x19, x20, [sp, #16]
    d2c0:	ldr	x21, [sp, #32]
    d2c4:	add	sp, sp, #0x850
    d2c8:	ret
    d2cc:	bl	27c78 <__sanitizer_cov_dump@@Base+0x1058>
    d2d0:	mov	x1, x0
    d2d4:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    d2d8:	ldr	x2, [x2, #4056]
    d2dc:	ldr	w5, [x2, #36]
    d2e0:	cbz	w5, d324 <__interceptor_malloc@@Base+0xd4>
    d2e4:	str	x29, [x29, #2120]
    d2e8:	cmp	w5, #0x1
    d2ec:	ldrb	w4, [x2, #34]
    d2f0:	b.eq	d378 <__interceptor_malloc@@Base+0x128>  // b.none
    d2f4:	mov	x2, x29
    d2f8:	mov	x0, x20
    d2fc:	mov	x3, #0x0                   	// #0
    d300:	bl	7238 <__sanitizer_print_memory_profile@plt+0xbd8>
    d304:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    d308:	ldr	x1, [x21, #3904]
    d30c:	ldr	x0, [x0, #3824]
    d310:	ldr	w1, [x1]
    d314:	ldrb	w0, [x0]
    d318:	cbnz	w0, d2a8 <__interceptor_malloc@@Base+0x58>
    d31c:	cbnz	w1, d2ac <__interceptor_malloc@@Base+0x5c>
    d320:	b	d29c <__interceptor_malloc@@Base+0x4c>
    d324:	str	w5, [x29, #64]
    d328:	str	xzr, [x29, #2120]
    d32c:	b	d304 <__interceptor_malloc@@Base+0xb4>
    d330:	adrp	x2, 5d000 <__hwasan_shadow_memory_dynamic_address@@Base+0x2e0>
    d334:	add	x2, x2, #0xa40
    d338:	add	x3, x19, #0x7
    d33c:	adrp	x0, 5d000 <__hwasan_shadow_memory_dynamic_address@@Base+0x2e0>
    d340:	add	x0, x0, #0xa80
    d344:	ldr	x1, [x2, #16]
    d348:	add	x3, x1, x3, lsr #3
    d34c:	str	x3, [x2, #16]
    d350:	cmp	x3, #0x3ff
    d354:	add	x0, x0, x1, lsl #3
    d358:	b.ls	d2b8 <__interceptor_malloc@@Base+0x68>  // b.plast
    d35c:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    d360:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    d364:	add	x2, x2, #0x9d0
    d368:	add	x0, x0, #0x968
    d36c:	mov	x4, #0x400                 	// #1024
    d370:	mov	w1, #0x3c                  	// #60
    d374:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    d378:	str	w5, [x29, #64]
    d37c:	str	x0, [x29, #72]
    d380:	b	d304 <__interceptor_malloc@@Base+0xb4>
    d384:	nop
    d388:	stp	x19, x30, [sp, #-16]!
    d38c:	mov	x19, x0
    d390:	cbnz	w1, d3a4 <__interceptor_malloc@@Base+0x154>
    d394:	str	w1, [x19, #176]
    d398:	mov	w0, #0x0                   	// #0
    d39c:	ldp	x19, x30, [sp], #16
    d3a0:	ret
    d3a4:	add	x2, x0, #0xb8
    d3a8:	mov	x1, #0x0                   	// #0
    d3ac:	mov	w0, #0x0                   	// #0
    d3b0:	bl	62a0 <sigprocmask@plt>
    d3b4:	cmp	w0, #0x0
    d3b8:	mov	w0, #0x0                   	// #0
    d3bc:	cset	w1, eq  // eq = none
    d3c0:	str	w1, [x19, #176]
    d3c4:	ldp	x19, x30, [sp], #16
    d3c8:	ret
    d3cc:	nop

000000000000d3d0 <__interceptor_siglongjmp@@Base>:
    d3d0:	stp	x19, x20, [sp, #-32]!
    d3d4:	mov	x19, x0
    d3d8:	mov	w20, w1
    d3dc:	ldr	w0, [x0, #176]
    d3e0:	str	x30, [sp, #16]
    d3e4:	cbnz	w0, d444 <__interceptor_siglongjmp@@Base+0x74>
    d3e8:	ldr	x0, [x19, #104]
    d3ec:	bl	6580 <__hwasan_handle_longjmp@plt>
    d3f0:	sxtw	x1, w20
    d3f4:	mov	x0, x19
    d3f8:	ldp	x19, x20, [x0]
    d3fc:	ldp	x21, x22, [x0, #16]
    d400:	ldp	x23, x24, [x0, #32]
    d404:	ldp	x25, x26, [x0, #48]
    d408:	ldp	x27, x28, [x0, #64]
    d40c:	ldp	x29, x30, [x0, #80]
    d410:	ldp	d8, d9, [x0, #112]
    d414:	ldp	d10, d11, [x0, #128]
    d418:	ldp	d12, d13, [x0, #144]
    d41c:	ldp	d14, d15, [x0, #160]
    d420:	ldr	x5, [x0, #104]
    d424:	mov	sp, x5
    d428:	cmp	x1, #0x0
    d42c:	mov	x0, #0x1                   	// #1
    d430:	csel	x0, x1, x0, ne  // ne = any
    d434:	br	x30
    d438:	ldr	x30, [sp, #16]
    d43c:	ldp	x19, x20, [sp], #32
    d440:	ret
    d444:	add	x1, x19, #0xb8
    d448:	mov	x2, #0x0                   	// #0
    d44c:	mov	w0, #0x2                   	// #2
    d450:	bl	62a0 <sigprocmask@plt>
    d454:	b	d3e8 <__interceptor_siglongjmp@@Base+0x18>

000000000000d458 <__interceptor___libc_longjmp@@Base>:
    d458:	stp	x19, x20, [sp, #-32]!
    d45c:	mov	x19, x0
    d460:	mov	w20, w1
    d464:	ldr	x0, [x0, #104]
    d468:	str	x30, [sp, #16]
    d46c:	bl	6580 <__hwasan_handle_longjmp@plt>
    d470:	sxtw	x1, w20
    d474:	mov	x0, x19
    d478:	ldp	x19, x20, [x0]
    d47c:	ldp	x21, x22, [x0, #16]
    d480:	ldp	x23, x24, [x0, #32]
    d484:	ldp	x25, x26, [x0, #48]
    d488:	ldp	x27, x28, [x0, #64]
    d48c:	ldp	x29, x30, [x0, #80]
    d490:	ldp	d8, d9, [x0, #112]
    d494:	ldp	d10, d11, [x0, #128]
    d498:	ldp	d12, d13, [x0, #144]
    d49c:	ldp	d14, d15, [x0, #160]
    d4a0:	ldr	x5, [x0, #104]
    d4a4:	mov	sp, x5
    d4a8:	cmp	x1, #0x0
    d4ac:	mov	x0, #0x1                   	// #1
    d4b0:	csel	x0, x1, x0, ne  // ne = any
    d4b4:	br	x30
    d4b8:	ldr	x30, [sp, #16]
    d4bc:	ldp	x19, x20, [sp], #32
    d4c0:	ret
    d4c4:	nop

000000000000d4c8 <__interceptor_longjmp@@Base>:
    d4c8:	stp	x19, x20, [sp, #-32]!
    d4cc:	mov	x19, x0
    d4d0:	mov	w20, w1
    d4d4:	ldr	x0, [x0, #104]
    d4d8:	str	x30, [sp, #16]
    d4dc:	bl	6580 <__hwasan_handle_longjmp@plt>
    d4e0:	sxtw	x1, w20
    d4e4:	mov	x0, x19
    d4e8:	ldp	x19, x20, [x0]
    d4ec:	ldp	x21, x22, [x0, #16]
    d4f0:	ldp	x23, x24, [x0, #32]
    d4f4:	ldp	x25, x26, [x0, #48]
    d4f8:	ldp	x27, x28, [x0, #64]
    d4fc:	ldp	x29, x30, [x0, #80]
    d500:	ldp	d8, d9, [x0, #112]
    d504:	ldp	d10, d11, [x0, #128]
    d508:	ldp	d12, d13, [x0, #144]
    d50c:	ldp	d14, d15, [x0, #160]
    d510:	ldr	x5, [x0, #104]
    d514:	mov	sp, x5
    d518:	cmp	x1, #0x0
    d51c:	mov	x0, #0x1                   	// #1
    d520:	csel	x0, x1, x0, ne  // ne = any
    d524:	br	x30
    d528:	ldr	x30, [sp, #16]
    d52c:	ldp	x19, x20, [sp], #32
    d530:	ret
    d534:	nop
    d538:	mov	w0, #0x0                   	// #0
    d53c:	ret
    d540:	stp	x19, x30, [sp, #-16]!
    d544:	adrp	x19, 5d000 <__hwasan_shadow_memory_dynamic_address@@Base+0x2e0>
    d548:	add	x19, x19, #0xa40
    d54c:	ldrsw	x3, [x19, #24]
    d550:	cbnz	x3, d5c4 <__interceptor_longjmp@@Base+0xfc>
    d554:	adrp	x3, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    d558:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    d55c:	add	x1, x19, #0x8
    d560:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    d564:	ldr	x3, [x3, #3888]
    d568:	add	x0, x0, #0xa20
    d56c:	ldr	x2, [x2, #3656]
    d570:	bl	11d88 <_ZdaPvRKSt9nothrow_t@@Base+0x8>
    d574:	adrp	x3, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    d578:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    d57c:	add	x1, x19, #0x20
    d580:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    d584:	ldr	x3, [x3, #3832]
    d588:	add	x0, x0, #0xa28
    d58c:	ldr	x2, [x2, #3984]
    d590:	bl	11d88 <_ZdaPvRKSt9nothrow_t@@Base+0x8>
    d594:	adrp	x3, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    d598:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    d59c:	mov	x1, x19
    d5a0:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    d5a4:	ldr	x3, [x3, #3712]
    d5a8:	add	x0, x0, #0x958
    d5ac:	ldr	x2, [x2, #3688]
    d5b0:	bl	11d88 <_ZdaPvRKSt9nothrow_t@@Base+0x8>
    d5b4:	mov	w0, #0x1                   	// #1
    d5b8:	str	w0, [x19, #24]
    d5bc:	ldp	x19, x30, [sp], #16
    d5c0:	ret
    d5c4:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    d5c8:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    d5cc:	add	x2, x2, #0xa08
    d5d0:	add	x0, x0, #0x968
    d5d4:	mov	x4, #0x0                   	// #0
    d5d8:	mov	w1, #0x150                 	// #336
    d5dc:	bl	23150 <__sanitizer_on_print@@Base+0x3830>

000000000000d5e0 <__interceptor_vfork@@Base>:
    d5e0:	stp	xzr, x30, [sp, #-16]!
    d5e4:	bl	8098 <__hwasan_handle_vfork@@Base+0x78>
    d5e8:	ldp	xzr, x30, [sp], #16
    d5ec:	str	x30, [x0]
    d5f0:	adrp	x0, 5d000 <__hwasan_shadow_memory_dynamic_address@@Base+0x2e0>
    d5f4:	ldr	x0, [x0, #2656]
    d5f8:	blr	x0
    d5fc:	stp	x0, xzr, [sp, #-16]!
    d600:	cmp	x0, #0x0
    d604:	b.eq	d610 <__interceptor_vfork@@Base+0x30>  // b.none
    d608:	add	x0, sp, #0x10
    d60c:	bl	61f0 <__hwasan_handle_vfork@plt>
    d610:	bl	8098 <__hwasan_handle_vfork@@Base+0x78>
    d614:	ldr	x30, [x0]
    d618:	ldp	x0, xzr, [sp], #16
    d61c:	ret
    d620:	stp	x19, x20, [sp, #-32]!
    d624:	mov	x20, x0
    d628:	mov	x19, x1
    d62c:	stp	x21, x30, [sp, #16]
    d630:	mov	x21, x2
    d634:	bl	1dac8 <__sanitizer_set_report_fd@@Base+0x5c48>
    d638:	udiv	x3, x20, x0
    d63c:	msub	x3, x3, x0, x20
    d640:	cbnz	x3, d688 <__interceptor_vfork@@Base+0xa8>
    d644:	add	x19, x19, #0x1
    d648:	bl	1dac8 <__sanitizer_set_report_fd@@Base+0x5c48>
    d64c:	udiv	x3, x19, x0
    d650:	msub	x3, x3, x0, x19
    d654:	cbnz	x3, d6a4 <__interceptor_vfork@@Base+0xc4>
    d658:	sub	x19, x19, x20
    d65c:	mov	x0, x19
    d660:	bl	14cb8 <_ZdaPvRKSt9nothrow_t@@Base+0x2f38>
    d664:	mov	x2, x21
    d668:	mov	x1, x19
    d66c:	mov	x0, x20
    d670:	bl	24c88 <__sanitizer_sandbox_on_notify@@Base+0x1640>
    d674:	tst	w0, #0xff
    d678:	b.eq	d6c0 <__interceptor_vfork@@Base+0xe0>  // b.none
    d67c:	ldp	x21, x30, [sp, #16]
    d680:	ldp	x19, x20, [sp], #32
    d684:	ret
    d688:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    d68c:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    d690:	add	x2, x2, #0xa30
    d694:	add	x0, x0, #0xa60
    d698:	mov	x4, #0x0                   	// #0
    d69c:	mov	w1, #0x3d                  	// #61
    d6a0:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    d6a4:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    d6a8:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    d6ac:	add	x2, x2, #0xaa8
    d6b0:	add	x0, x0, #0xa60
    d6b4:	mov	x4, #0x0                   	// #0
    d6b8:	mov	w1, #0x3e                  	// #62
    d6bc:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    d6c0:	mov	x1, x19
    d6c4:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    d6c8:	add	x0, x0, #0xad8
    d6cc:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
    d6d0:	bl	248f0 <__sanitizer_sandbox_on_notify@@Base+0x12a8>
    d6d4:	nop
    d6d8:	stp	x19, x20, [sp, #-32]!
    d6dc:	mov	x19, x0
    d6e0:	mov	x20, x2
    d6e4:	ldr	x0, [x0, #24]
    d6e8:	str	x30, [sp, #16]
    d6ec:	bl	27c70 <__sanitizer_cov_dump@@Base+0x1050>
    d6f0:	mov	x1, x0
    d6f4:	adrp	x4, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    d6f8:	mov	x0, x20
    d6fc:	ldr	x2, [x19, #40]
    d700:	mov	w5, #0x100                 	// #256
    d704:	ldr	x4, [x4, #4056]
    d708:	ldr	x3, [x19, #8]
    d70c:	ldr	x30, [sp, #16]
    d710:	str	x2, [x20, #2064]
    d714:	ldrb	w4, [x4, #33]
    d718:	ldp	x19, x20, [sp], #32
    d71c:	b	7238 <__sanitizer_print_memory_profile@plt+0xbd8>
    d720:	stp	x19, x20, [sp, #-32]!
    d724:	adrp	x20, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    d728:	ldr	x0, [x20, #4056]
    d72c:	ldr	w0, [x0, #64]
    d730:	str	x30, [sp, #16]
    d734:	cbnz	w0, d770 <__interceptor_vfork@@Base+0x190>
    d738:	bl	71d8 <__sanitizer_print_memory_profile@plt+0xb78>
    d73c:	ldrb	w0, [x0, #3]
    d740:	adrp	x19, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    d744:	cbnz	w0, d784 <__interceptor_vfork@@Base+0x1a4>
    d748:	ldr	x19, [x19, #3864]
    d74c:	ldr	w0, [x19]
    d750:	cmp	w0, #0x0
    d754:	b.le	d764 <__interceptor_vfork@@Base+0x184>
    d758:	ldr	x20, [x20, #4056]
    d75c:	ldr	w0, [x20, #224]
    d760:	cbnz	w0, d7a8 <__interceptor_vfork@@Base+0x1c8>
    d764:	ldr	x30, [sp, #16]
    d768:	ldp	x19, x20, [sp], #32
    d76c:	ret
    d770:	bl	1e670 <__sanitizer_set_report_fd@@Base+0x67f0>
    d774:	adrp	x19, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    d778:	bl	71d8 <__sanitizer_print_memory_profile@plt+0xb78>
    d77c:	ldrb	w0, [x0, #3]
    d780:	cbz	w0, d748 <__interceptor_vfork@@Base+0x168>
    d784:	bl	71d8 <__sanitizer_print_memory_profile@plt+0xb78>
    d788:	ldrb	w0, [x0, #5]
    d78c:	cbnz	w0, d7a0 <__interceptor_vfork@@Base+0x1c0>
    d790:	ldr	x0, [x19, #3864]
    d794:	ldr	w0, [x0]
    d798:	cmp	w0, #0x0
    d79c:	b.le	d764 <__interceptor_vfork@@Base+0x184>
    d7a0:	bl	ffe8 <__hwasan_memmove@@Base+0x1560>
    d7a4:	b	d748 <__interceptor_vfork@@Base+0x168>
    d7a8:	bl	1c3a0 <__sanitizer_set_report_fd@@Base+0x4520>
    d7ac:	nop
    d7b0:	str	x30, [sp, #-16]!
    d7b4:	mov	x4, #0x0                   	// #0
    d7b8:	mov	x3, #0x0                   	// #0
    d7bc:	mov	x2, #0x0                   	// #0
    d7c0:	mov	x1, #0x0                   	// #0
    d7c4:	mov	w0, #0x38                  	// #56
    d7c8:	bl	1c848 <__sanitizer_set_report_fd@@Base+0x49c8>
    d7cc:	cmn	x0, #0x1
    d7d0:	b.ne	d7e4 <__interceptor_vfork@@Base+0x204>  // b.any
    d7d4:	bl	64f0 <__errno_location@plt>
    d7d8:	ldr	w0, [x0]
    d7dc:	cmp	w0, #0x16
    d7e0:	b.eq	d838 <__interceptor_vfork@@Base+0x258>  // b.none
    d7e4:	mov	x4, #0x0                   	// #0
    d7e8:	mov	x3, #0x0                   	// #0
    d7ec:	mov	x2, #0x0                   	// #0
    d7f0:	mov	x1, #0x1                   	// #1
    d7f4:	mov	w0, #0x37                  	// #55
    d7f8:	bl	1c848 <__sanitizer_set_report_fd@@Base+0x49c8>
    d7fc:	cmn	x0, #0x1
    d800:	b.eq	d828 <__interceptor_vfork@@Base+0x248>  // b.none
    d804:	mov	x4, #0x0                   	// #0
    d808:	mov	x3, #0x0                   	// #0
    d80c:	mov	x2, #0x0                   	// #0
    d810:	mov	x1, #0x0                   	// #0
    d814:	mov	w0, #0x38                  	// #56
    d818:	bl	1c848 <__sanitizer_set_report_fd@@Base+0x49c8>
    d81c:	cbz	x0, d828 <__interceptor_vfork@@Base+0x248>
    d820:	ldr	x30, [sp], #16
    d824:	ret
    d828:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    d82c:	add	x0, x0, #0xb88
    d830:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    d834:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
    d838:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    d83c:	add	x0, x0, #0xb40
    d840:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    d844:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
    d848:	stp	x19, x20, [sp, #-48]!
    d84c:	stp	x21, x22, [sp, #16]
    d850:	adrp	x21, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
    d854:	add	x20, x21, #0xa80
    d858:	stp	x23, x30, [sp, #32]
    d85c:	bl	1d2f8 <__sanitizer_set_report_fd@@Base+0x5478>
    d860:	mov	x19, x0
    d864:	bl	1dac8 <__sanitizer_set_report_fd@@Base+0x5c48>
    d868:	lsl	x1, x0, #4
    d86c:	sub	x1, x1, #0x1
    d870:	orr	x0, x1, x19
    d874:	str	x0, [x21, #2688]
    d878:	lsr	x0, x0, #4
    d87c:	bl	c620 <__sanitizer_get_allocated_size@@Base+0x33b0>
    d880:	ldr	x2, [x21, #2688]
    d884:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    d888:	sub	x3, x0, #0x1
    d88c:	stp	x3, xzr, [x20, #8]
    d890:	add	x2, x0, x2, lsr #4
    d894:	add	x5, x0, x3, lsr #4
    d898:	ldr	x4, [x1, #3848]
    d89c:	add	x1, x0, x2, lsr #4
    d8a0:	cmp	x1, x3
    d8a4:	stp	x5, x0, [x20, #24]
    d8a8:	csel	x1, x1, x3, cs  // cs = hs, nlast
    d8ac:	add	x1, x1, #0x1
    d8b0:	str	x0, [x4]
    d8b4:	sub	x0, x1, x0
    d8b8:	stp	x2, x1, [x20, #40]
    d8bc:	lsl	x19, x0, #4
    d8c0:	str	x19, [x20, #56]
    d8c4:	bl	1dac8 <__sanitizer_set_report_fd@@Base+0x5c48>
    d8c8:	udiv	x1, x19, x0
    d8cc:	msub	x19, x1, x0, x19
    d8d0:	cbnz	x19, dc6c <__interceptor_vfork@@Base+0x68c>
    d8d4:	ldr	x0, [x20, #40]
    d8d8:	ldr	x3, [x20, #56]
    d8dc:	cmp	x3, x0
    d8e0:	b.ls	dc8c <__interceptor_vfork@@Base+0x6ac>  // b.plast
    d8e4:	ldr	x5, [x20, #48]
    d8e8:	cmp	x0, x5
    d8ec:	b.ls	dca8 <__interceptor_vfork@@Base+0x6c8>  // b.plast
    d8f0:	ldr	x2, [x20, #8]
    d8f4:	cmp	x5, x2
    d8f8:	b.ls	dcc8 <__interceptor_vfork@@Base+0x6e8>  // b.plast
    d8fc:	ldr	x4, [x20, #16]
    d900:	cmp	x2, x4
    d904:	b.ls	dce8 <__interceptor_vfork@@Base+0x708>  // b.plast
    d908:	ldp	x1, x0, [x20, #24]
    d90c:	cmp	x1, x0
    d910:	b.ls	dd04 <__interceptor_vfork@@Base+0x724>  // b.plast
    d914:	cmp	x2, x0
    d918:	b.cs	da10 <__interceptor_vfork@@Base+0x430>  // b.hs, b.nlast
    d91c:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    d920:	ldr	x2, [x2, #3816]
    d924:	ldr	w2, [x2]
    d928:	cbnz	w2, da30 <__interceptor_vfork@@Base+0x450>
    d92c:	add	x23, x21, #0xa80
    d930:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    d934:	add	x2, x2, #0xe48
    d938:	bl	d620 <__interceptor_vfork@@Base+0x40>
    d93c:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    d940:	add	x2, x2, #0xe58
    d944:	ldp	x1, x0, [x23, #40]
    d948:	bl	d620 <__interceptor_vfork@@Base+0x40>
    d94c:	ldr	x20, [x23, #16]
    d950:	ldr	x1, [x23, #32]
    d954:	cmp	x20, x1
    d958:	csel	x20, x20, x1, ls  // ls = plast
    d95c:	cbz	x20, d9b8 <__interceptor_vfork@@Base+0x3d8>
    d960:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    d964:	add	x22, x2, #0xe68
    d968:	mov	x2, x22
    d96c:	mov	x1, x20
    d970:	mov	x0, #0x0                   	// #0
    d974:	bl	25018 <__sanitizer_sandbox_on_notify@@Base+0x19d0>
    d978:	cbz	x0, dd44 <__interceptor_vfork@@Base+0x764>
    d97c:	bl	1dac8 <__sanitizer_set_report_fd@@Base+0x5c48>
    d980:	mov	x23, x0
    d984:	nop
    d988:	cmp	x23, x20
    d98c:	b.cs	ddf8 <__interceptor_vfork@@Base+0x818>  // b.hs, b.nlast
    d990:	add	x19, x19, x23
    d994:	sub	x20, x20, x23
    d998:	mov	x1, x20
    d99c:	mov	x0, x19
    d9a0:	mov	x2, x22
    d9a4:	bl	25018 <__sanitizer_sandbox_on_notify@@Base+0x19d0>
    d9a8:	cmp	x0, x19
    d9ac:	b.ne	d988 <__interceptor_vfork@@Base+0x3a8>  // b.any
    d9b0:	add	x0, x21, #0xa80
    d9b4:	ldr	x1, [x0, #32]
    d9b8:	add	x0, x21, #0xa80
    d9bc:	ldr	x0, [x0, #8]
    d9c0:	add	x22, x0, #0x1
    d9c4:	cmp	x22, x1
    d9c8:	b.cc	db14 <__interceptor_vfork@@Base+0x534>  // b.lo, b.ul, b.last
    d9cc:	add	x0, x21, #0xa80
    d9d0:	ldr	x20, [x0, #24]
    d9d4:	ldr	x0, [x0, #48]
    d9d8:	add	x22, x20, #0x1
    d9dc:	cmp	x22, x0
    d9e0:	b.cc	db94 <__interceptor_vfork@@Base+0x5b4>  // b.lo, b.ul, b.last
    d9e4:	add	x21, x21, #0xa80
    d9e8:	ldr	x20, [x21, #40]
    d9ec:	ldr	x0, [x21, #56]
    d9f0:	add	x21, x20, #0x1
    d9f4:	cmp	x21, x0
    d9f8:	b.cc	dbfc <__interceptor_vfork@@Base+0x61c>  // b.lo, b.ul, b.last
    d9fc:	mov	w0, #0x1                   	// #1
    da00:	ldp	x21, x22, [sp, #16]
    da04:	ldp	x23, x30, [sp, #32]
    da08:	ldp	x19, x20, [sp], #48
    da0c:	ret
    da10:	mov	x4, x2
    da14:	mov	x3, x0
    da18:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    da1c:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    da20:	add	x2, x2, #0xd18
    da24:	add	x0, x0, #0xa60
    da28:	mov	w1, #0xd8                  	// #216
    da2c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    da30:	ldr	x2, [x21, #2688]
    da34:	adrp	x22, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    da38:	add	x23, x22, #0xd48
    da3c:	mov	x1, x3
    da40:	mov	x0, x23
    da44:	adrp	x4, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    da48:	mov	w3, #0xa                   	// #10
    da4c:	add	x4, x4, #0xd40
    da50:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    da54:	ldr	x2, [x20, #40]
    da58:	ldr	x4, [x20, #56]
    da5c:	add	x1, x2, #0x1
    da60:	cmp	x1, x4
    da64:	b.cc	dd24 <__interceptor_vfork@@Base+0x744>  // b.lo, b.ul, b.last
    da68:	b.ne	dda8 <__interceptor_vfork@@Base+0x7c8>  // b.any
    da6c:	add	x20, x21, #0xa80
    da70:	add	x23, x22, #0xd48
    da74:	mov	x0, x23
    da78:	adrp	x4, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    da7c:	mov	w3, #0xa                   	// #10
    da80:	add	x4, x4, #0xda0
    da84:	ldr	x1, [x20, #48]
    da88:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    da8c:	ldr	x2, [x20, #24]
    da90:	ldr	x4, [x20, #48]
    da94:	add	x1, x2, #0x1
    da98:	cmp	x1, x4
    da9c:	b.cc	dd4c <__interceptor_vfork@@Base+0x76c>  // b.lo, b.ul, b.last
    daa0:	ldr	x3, [x20, #8]
    daa4:	add	x3, x3, #0x1
    daa8:	cmp	x4, x3
    daac:	b.ne	ddc4 <__interceptor_vfork@@Base+0x7e4>  // b.any
    dab0:	add	x20, x21, #0xa80
    dab4:	add	x23, x22, #0xd48
    dab8:	mov	x0, x23
    dabc:	adrp	x4, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    dac0:	mov	w3, #0xa                   	// #10
    dac4:	add	x4, x4, #0xde0
    dac8:	ldr	x1, [x20, #32]
    dacc:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    dad0:	ldr	x2, [x20, #8]
    dad4:	ldr	x4, [x20, #32]
    dad8:	add	x1, x2, #0x1
    dadc:	cmp	x1, x4
    dae0:	b.cc	dd6c <__interceptor_vfork@@Base+0x78c>  // b.lo, b.ul, b.last
    dae4:	b.ne	dddc <__interceptor_vfork@@Base+0x7fc>  // b.any
    dae8:	add	x20, x21, #0xa80
    daec:	add	x0, x22, #0xd48
    daf0:	adrp	x4, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    daf4:	mov	w3, #0xa                   	// #10
    daf8:	add	x4, x4, #0xe20
    dafc:	ldr	x1, [x20, #16]
    db00:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    db04:	ldr	x4, [x20, #16]
    db08:	cbnz	x4, dd8c <__interceptor_vfork@@Base+0x7ac>
    db0c:	ldp	x1, x0, [x20, #24]
    db10:	b	d92c <__interceptor_vfork@@Base+0x34c>
    db14:	mvn	x0, x0
    db18:	adds	x20, x0, x1
    db1c:	b.eq	d9cc <__interceptor_vfork@@Base+0x3ec>  // b.none
    db20:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    db24:	add	x19, x2, #0xe68
    db28:	mov	x2, x19
    db2c:	mov	x1, x20
    db30:	mov	x0, x22
    db34:	bl	25018 <__sanitizer_sandbox_on_notify@@Base+0x19d0>
    db38:	cmp	x0, x22
    db3c:	b.eq	d9cc <__interceptor_vfork@@Base+0x3ec>  // b.none
    db40:	cbnz	x22, db78 <__interceptor_vfork@@Base+0x598>
    db44:	bl	1dac8 <__sanitizer_set_report_fd@@Base+0x5c48>
    db48:	mov	x23, x0
    db4c:	b	db70 <__interceptor_vfork@@Base+0x590>
    db50:	add	x22, x22, x23
    db54:	sub	x20, x20, x23
    db58:	mov	x1, x20
    db5c:	mov	x0, x22
    db60:	mov	x2, x19
    db64:	bl	25018 <__sanitizer_sandbox_on_notify@@Base+0x19d0>
    db68:	cmp	x0, x22
    db6c:	b.eq	d9cc <__interceptor_vfork@@Base+0x3ec>  // b.none
    db70:	cmp	x23, x20
    db74:	b.cc	db50 <__interceptor_vfork@@Base+0x570>  // b.lo, b.ul, b.last
    db78:	add	x2, x22, x20
    db7c:	mov	x1, x22
    db80:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    db84:	add	x0, x0, #0xe78
    db88:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
    db8c:	bl	1e670 <__sanitizer_set_report_fd@@Base+0x67f0>
    db90:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
    db94:	sub	x0, x0, #0x1
    db98:	subs	x20, x0, x20
    db9c:	b.eq	d9e4 <__interceptor_vfork@@Base+0x404>  // b.none
    dba0:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    dba4:	add	x19, x2, #0xe68
    dba8:	mov	x2, x19
    dbac:	mov	x1, x20
    dbb0:	mov	x0, x22
    dbb4:	bl	25018 <__sanitizer_sandbox_on_notify@@Base+0x19d0>
    dbb8:	cmp	x0, x22
    dbbc:	b.eq	d9e4 <__interceptor_vfork@@Base+0x404>  // b.none
    dbc0:	cbnz	x22, db78 <__interceptor_vfork@@Base+0x598>
    dbc4:	bl	1dac8 <__sanitizer_set_report_fd@@Base+0x5c48>
    dbc8:	mov	x23, x0
    dbcc:	b	dbf0 <__interceptor_vfork@@Base+0x610>
    dbd0:	add	x22, x22, x23
    dbd4:	sub	x20, x20, x23
    dbd8:	mov	x1, x20
    dbdc:	mov	x0, x22
    dbe0:	mov	x2, x19
    dbe4:	bl	25018 <__sanitizer_sandbox_on_notify@@Base+0x19d0>
    dbe8:	cmp	x0, x22
    dbec:	b.eq	d9e4 <__interceptor_vfork@@Base+0x404>  // b.none
    dbf0:	cmp	x23, x20
    dbf4:	b.cc	dbd0 <__interceptor_vfork@@Base+0x5f0>  // b.lo, b.ul, b.last
    dbf8:	b	db78 <__interceptor_vfork@@Base+0x598>
    dbfc:	sub	x0, x0, #0x1
    dc00:	subs	x20, x0, x20
    dc04:	b.eq	d9fc <__interceptor_vfork@@Base+0x41c>  // b.none
    dc08:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    dc0c:	add	x19, x2, #0xe68
    dc10:	mov	x2, x19
    dc14:	mov	x1, x20
    dc18:	mov	x0, x21
    dc1c:	bl	25018 <__sanitizer_sandbox_on_notify@@Base+0x19d0>
    dc20:	cmp	x0, x21
    dc24:	b.eq	d9fc <__interceptor_vfork@@Base+0x41c>  // b.none
    dc28:	cbnz	x21, dc60 <__interceptor_vfork@@Base+0x680>
    dc2c:	bl	1dac8 <__sanitizer_set_report_fd@@Base+0x5c48>
    dc30:	mov	x22, x0
    dc34:	b	dc58 <__interceptor_vfork@@Base+0x678>
    dc38:	add	x21, x21, x22
    dc3c:	sub	x20, x20, x22
    dc40:	mov	x1, x20
    dc44:	mov	x0, x21
    dc48:	mov	x2, x19
    dc4c:	bl	25018 <__sanitizer_sandbox_on_notify@@Base+0x19d0>
    dc50:	cmp	x0, x21
    dc54:	b.eq	d9fc <__interceptor_vfork@@Base+0x41c>  // b.none
    dc58:	cmp	x22, x20
    dc5c:	b.cc	dc38 <__interceptor_vfork@@Base+0x658>  // b.lo, b.ul, b.last
    dc60:	add	x2, x21, x20
    dc64:	mov	x1, x21
    dc68:	b	db80 <__interceptor_vfork@@Base+0x5a0>
    dc6c:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    dc70:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    dc74:	mov	x3, x19
    dc78:	add	x2, x2, #0xc10
    dc7c:	add	x0, x0, #0xa60
    dc80:	mov	x4, #0x0                   	// #0
    dc84:	mov	w1, #0xd2                  	// #210
    dc88:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    dc8c:	mov	x4, x0
    dc90:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    dc94:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    dc98:	add	x2, x2, #0xc48
    dc9c:	add	x0, x0, #0xa60
    dca0:	mov	w1, #0xd3                  	// #211
    dca4:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    dca8:	mov	x3, x0
    dcac:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    dcb0:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    dcb4:	mov	x4, x5
    dcb8:	add	x2, x2, #0xc70
    dcbc:	add	x0, x0, #0xa60
    dcc0:	mov	w1, #0xd4                  	// #212
    dcc4:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    dcc8:	mov	x4, x2
    dccc:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    dcd0:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    dcd4:	mov	x3, x5
    dcd8:	add	x2, x2, #0xca0
    dcdc:	add	x0, x0, #0xa60
    dce0:	mov	w1, #0xd5                  	// #213
    dce4:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    dce8:	mov	x3, x2
    dcec:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    dcf0:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    dcf4:	add	x0, x0, #0xa60
    dcf8:	add	x2, x2, #0xcc8
    dcfc:	mov	w1, #0xd6                  	// #214
    dd00:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    dd04:	mov	x4, x0
    dd08:	mov	x3, x1
    dd0c:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    dd10:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    dd14:	add	x2, x2, #0xcf0
    dd18:	add	x0, x0, #0xa60
    dd1c:	mov	w1, #0xd7                  	// #215
    dd20:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    dd24:	sub	x2, x4, #0x1
    dd28:	mov	x0, x23
    dd2c:	adrp	x4, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    dd30:	mov	w3, #0xa                   	// #10
    dd34:	add	x4, x4, #0xd60
    dd38:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    dd3c:	ldr	x2, [x20, #40]
    dd40:	b	da6c <__interceptor_vfork@@Base+0x48c>
    dd44:	ldr	x1, [x23, #32]
    dd48:	b	d9b8 <__interceptor_vfork@@Base+0x3d8>
    dd4c:	sub	x2, x4, #0x1
    dd50:	mov	x0, x23
    dd54:	adrp	x4, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    dd58:	mov	w3, #0xa                   	// #10
    dd5c:	add	x4, x4, #0xd60
    dd60:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    dd64:	ldr	x2, [x20, #24]
    dd68:	b	dab0 <__interceptor_vfork@@Base+0x4d0>
    dd6c:	sub	x2, x4, #0x1
    dd70:	mov	x0, x23
    dd74:	adrp	x4, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    dd78:	mov	w3, #0xa                   	// #10
    dd7c:	add	x4, x4, #0xd60
    dd80:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    dd84:	ldr	x2, [x20, #8]
    dd88:	b	dae8 <__interceptor_vfork@@Base+0x508>
    dd8c:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    dd90:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    dd94:	add	x2, x2, #0xe28
    dd98:	add	x0, x0, #0xa60
    dd9c:	mov	x3, #0x0                   	// #0
    dda0:	mov	w1, #0x84                  	// #132
    dda4:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    dda8:	mov	x3, x1
    ddac:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    ddb0:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    ddb4:	add	x2, x2, #0xd70
    ddb8:	add	x0, x0, #0xa60
    ddbc:	mov	w1, #0x78                  	// #120
    ddc0:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    ddc4:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    ddc8:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    ddcc:	add	x2, x2, #0xdb0
    ddd0:	add	x0, x0, #0xa60
    ddd4:	mov	w1, #0x7d                  	// #125
    ddd8:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    dddc:	mov	x3, x1
    dde0:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    dde4:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    dde8:	add	x2, x2, #0xdf0
    ddec:	add	x0, x0, #0xa60
    ddf0:	mov	w1, #0x82                  	// #130
    ddf4:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    ddf8:	add	x2, x20, x19
    ddfc:	mov	x1, x19
    de00:	b	db80 <__interceptor_vfork@@Base+0x5a0>
    de04:	nop
    de08:	stp	x19, x20, [sp, #-64]!
    de0c:	adrp	x20, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    de10:	ldr	x20, [x20, #3848]
    de14:	stp	x21, x22, [sp, #16]
    de18:	stp	x23, x24, [sp, #32]
    de1c:	ldr	x0, [x20]
    de20:	str	x30, [sp, #48]
    de24:	cbz	x0, def4 <__interceptor_vfork@@Base+0x914>
    de28:	bl	1dac8 <__sanitizer_set_report_fd@@Base+0x5c48>
    de2c:	mov	x22, #0xffffffff00000000    	// #-4294967296
    de30:	ldr	x24, [x20]
    de34:	mov	x21, x0
    de38:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    de3c:	add	x2, x2, #0xf10
    de40:	sub	x23, x24, x0
    de44:	add	x22, x24, x22
    de48:	sub	x1, x23, #0x1
    de4c:	mov	x0, x22
    de50:	bl	d620 <__interceptor_vfork@@Base+0x40>
    de54:	ldr	x19, [x20]
    de58:	sub	x19, x19, x24
    de5c:	adds	x19, x19, x21
    de60:	b.ne	de80 <__interceptor_vfork@@Base+0x8a0>  // b.any
    de64:	sub	x1, x23, x22
    de68:	mov	x0, x22
    de6c:	ldp	x21, x22, [sp, #16]
    de70:	ldp	x23, x24, [sp, #32]
    de74:	ldr	x30, [sp, #48]
    de78:	ldp	x19, x20, [sp], #64
    de7c:	b	11950 <__hwasan_tag_mismatch_v2@@Base+0x698>
    de80:	adrp	x24, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    de84:	add	x24, x24, #0xe68
    de88:	mov	x2, x24
    de8c:	mov	x1, x19
    de90:	mov	x0, x23
    de94:	bl	25018 <__sanitizer_sandbox_on_notify@@Base+0x19d0>
    de98:	cmp	x0, x23
    de9c:	b.eq	de64 <__interceptor_vfork@@Base+0x884>  // b.none
    dea0:	cbnz	x23, df14 <__interceptor_vfork@@Base+0x934>
    dea4:	bl	1dac8 <__sanitizer_set_report_fd@@Base+0x5c48>
    dea8:	mov	x21, x0
    deac:	mov	x20, #0x0                   	// #0
    deb0:	cmp	x21, x19
    deb4:	b.cs	df18 <__interceptor_vfork@@Base+0x938>  // b.hs, b.nlast
    deb8:	add	x20, x20, x21
    debc:	sub	x19, x19, x21
    dec0:	mov	x1, x19
    dec4:	mov	x0, x20
    dec8:	mov	x2, x24
    decc:	bl	25018 <__sanitizer_sandbox_on_notify@@Base+0x19d0>
    ded0:	cmp	x0, x20
    ded4:	b.ne	deb0 <__interceptor_vfork@@Base+0x8d0>  // b.any
    ded8:	sub	x1, x23, x22
    dedc:	mov	x0, x22
    dee0:	ldp	x21, x22, [sp, #16]
    dee4:	ldp	x23, x24, [sp, #32]
    dee8:	ldr	x30, [sp, #48]
    deec:	ldp	x19, x20, [sp], #64
    def0:	b	11950 <__hwasan_tag_mismatch_v2@@Base+0x698>
    def4:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    def8:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    defc:	add	x2, x2, #0xed8
    df00:	add	x0, x0, #0xa60
    df04:	mov	x4, #0x0                   	// #0
    df08:	mov	x3, #0x0                   	// #0
    df0c:	mov	w1, #0xee                  	// #238
    df10:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    df14:	mov	x20, x23
    df18:	add	x2, x20, x19
    df1c:	mov	x1, x20
    df20:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    df24:	add	x0, x0, #0xe78
    df28:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
    df2c:	bl	1e670 <__sanitizer_set_report_fd@@Base+0x67f0>
    df30:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
    df34:	nop
    df38:	stp	x19, x20, [sp, #-48]!
    df3c:	adrp	x20, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
    df40:	add	x0, x20, #0xa80
    df44:	stp	x21, x22, [sp, #16]
    df48:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    df4c:	ldp	x19, x22, [x0, #24]
    df50:	str	x30, [sp, #32]
    df54:	add	x19, x19, #0x1
    df58:	mov	x0, x22
    df5c:	sub	x19, x19, x22
    df60:	mov	x1, x19
    df64:	bl	245f8 <__sanitizer_sandbox_on_notify@@Base+0xfb0>
    df68:	ldr	x0, [x21, #4056]
    df6c:	ldrb	w0, [x0, #187]
    df70:	cbnz	w0, dfac <__interceptor_vfork@@Base+0x9cc>
    df74:	add	x20, x20, #0xa80
    df78:	ldp	x19, x20, [x20, #40]
    df7c:	add	x19, x19, #0x1
    df80:	mov	x0, x20
    df84:	sub	x19, x19, x20
    df88:	mov	x1, x19
    df8c:	bl	245f8 <__sanitizer_sandbox_on_notify@@Base+0xfb0>
    df90:	ldr	x21, [x21, #4056]
    df94:	ldrb	w0, [x21, #187]
    df98:	cbnz	w0, dfbc <__interceptor_vfork@@Base+0x9dc>
    df9c:	ldp	x21, x22, [sp, #16]
    dfa0:	ldr	x30, [sp, #32]
    dfa4:	ldp	x19, x20, [sp], #48
    dfa8:	ret
    dfac:	mov	x1, x19
    dfb0:	mov	x0, x22
    dfb4:	bl	24618 <__sanitizer_sandbox_on_notify@@Base+0xfd0>
    dfb8:	b	df74 <__interceptor_vfork@@Base+0x994>
    dfbc:	mov	x1, x19
    dfc0:	mov	x0, x20
    dfc4:	ldp	x21, x22, [sp, #16]
    dfc8:	ldr	x30, [sp, #32]
    dfcc:	ldp	x19, x20, [sp], #48
    dfd0:	b	24618 <__sanitizer_sandbox_on_notify@@Base+0xfd0>
    dfd4:	nop
    dfd8:	cmp	xzr, x0, lsr #56
    dfdc:	b.ne	e01c <__interceptor_vfork@@Base+0xa3c>  // b.any
    dfe0:	adrp	x2, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
    dfe4:	add	x2, x2, #0xa80
    dfe8:	mov	x1, x0
    dfec:	mov	w0, #0x1                   	// #1
    dff0:	ldr	x3, [x2, #56]
    dff4:	cmp	x3, x1
    dff8:	b.ls	e018 <__interceptor_vfork@@Base+0xa38>  // b.plast
    dffc:	ldr	x3, [x2, #16]
    e000:	mov	w0, #0x0                   	// #0
    e004:	cmp	x3, x1
    e008:	b.hi	e018 <__interceptor_vfork@@Base+0xa38>  // b.pmore
    e00c:	ldr	x0, [x2, #8]
    e010:	cmp	x0, x1
    e014:	cset	w0, cs  // cs = hs, nlast
    e018:	ret
    e01c:	str	x30, [sp, #-16]!
    e020:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    e024:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    e028:	add	x2, x2, #0xf20
    e02c:	add	x0, x0, #0xa60
    e030:	mov	x4, #0x0                   	// #0
    e034:	mov	x3, #0x0                   	// #0
    e038:	mov	w1, #0x108                 	// #264
    e03c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    e040:	adrp	x0, d000 <__interceptor_calloc@@Base+0x108>
    e044:	add	x0, x0, #0x720
    e048:	b	34200 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x598>
    e04c:	nop
    e050:	stp	x19, x20, [sp, #-32]!
    e054:	stp	x21, x30, [sp, #16]
    e058:	bl	11940 <__hwasan_tag_mismatch_v2@@Base+0x688>
    e05c:	mov	x19, x0
    e060:	add	x0, x0, #0x30
    e064:	mov	w2, #0x1                   	// #1
    e068:	ldxrb	w1, [x0]
    e06c:	stxrb	w3, w2, [x0]
    e070:	cbnz	w3, e068 <__interceptor_vfork@@Base+0xa88>
    e074:	dmb	ish
    e078:	tst	w1, #0xff
    e07c:	b.eq	e084 <__interceptor_vfork@@Base+0xaa4>  // b.none
    e080:	bl	85d8 <__sanitizer_print_stack_trace@@Base+0x300>
    e084:	ldr	x20, [x19, #32]
    e088:	ldr	x0, [x19, #16]
    e08c:	cbz	x20, e12c <__interceptor_vfork@@Base+0xb4c>
    e090:	ldr	x1, [x20, #2664]
    e094:	str	x1, [x19, #32]
    e098:	add	x2, x0, #0xa80
    e09c:	mov	x21, x20
    e0a0:	sub	x0, x20, x0
    e0a4:	mov	w1, #0x0                   	// #0
    e0a8:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
    e0ac:	ldr	x0, [x19, #40]
    e0b0:	str	x0, [x20, #2664]
    e0b4:	str	x20, [x19, #40]
    e0b8:	dmb	ish
    e0bc:	strb	wzr, [x19, #48]
    e0c0:	ldr	x2, [x19, #16]
    e0c4:	mov	x0, x20
    e0c8:	sub	x1, x21, x2
    e0cc:	bl	11450 <__hwasan_tag_mismatch_v2@@Base+0x198>
    e0d0:	add	x0, x19, #0x48
    e0d4:	mov	w2, #0x1                   	// #1
    e0d8:	ldxrb	w1, [x0]
    e0dc:	stxrb	w3, w2, [x0]
    e0e0:	cbnz	w3, e0d8 <__interceptor_vfork@@Base+0xaf8>
    e0e4:	dmb	ish
    e0e8:	tst	w1, #0xff
    e0ec:	b.eq	e0f4 <__interceptor_vfork@@Base+0xb14>  // b.none
    e0f0:	bl	85d8 <__sanitizer_print_stack_trace@@Base+0x300>
    e0f4:	ldp	x0, x2, [x20, #8]
    e0f8:	ldr	x1, [x19, #64]
    e0fc:	add	x0, x0, x1
    e100:	ldr	x1, [x19, #56]
    e104:	sub	x0, x0, x2
    e108:	str	x0, [x19, #64]
    e10c:	add	x0, x1, #0x1
    e110:	str	x0, [x19, #56]
    e114:	dmb	ish
    e118:	strb	wzr, [x19, #72]
    e11c:	mov	x0, x20
    e120:	ldp	x21, x30, [sp, #16]
    e124:	ldp	x19, x20, [sp], #32
    e128:	b	11300 <__hwasan_tag_mismatch_v2@@Base+0x48>
    e12c:	ldr	x1, [x19]
    e130:	lsl	x2, x0, #1
    e134:	sub	x2, x2, #0x1
    e138:	tst	x2, x1
    e13c:	b.ne	e180 <__interceptor_vfork@@Base+0xba0>  // b.any
    e140:	ldr	x2, [x19, #24]
    e144:	add	x21, x1, x0
    e148:	ldr	x0, [x19, #8]
    e14c:	add	x1, x1, x2
    e150:	str	x1, [x19]
    e154:	mov	x20, x21
    e158:	cmp	x1, x0
    e15c:	b.ls	e0ac <__interceptor_vfork@@Base+0xacc>  // b.plast
    e160:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    e164:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    e168:	add	x2, x2, #0x978
    e16c:	add	x0, x0, #0x928
    e170:	mov	x4, #0x0                   	// #0
    e174:	mov	x3, #0x0                   	// #0
    e178:	mov	w1, #0xc3                  	// #195
    e17c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    e180:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    e184:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    e188:	add	x2, x2, #0x8f8
    e18c:	add	x0, x0, #0x928
    e190:	mov	x4, #0x0                   	// #0
    e194:	mov	x3, #0x0                   	// #0
    e198:	mov	w1, #0xc0                  	// #192
    e19c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    e1a0:	stp	x19, x20, [sp, #-32]!
    e1a4:	str	x30, [sp, #16]
    e1a8:	bl	11940 <__hwasan_tag_mismatch_v2@@Base+0x688>
    e1ac:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    e1b0:	ldr	x1, [x1, #3992]
    e1b4:	mrs	x2, tpidr_el0
    e1b8:	ldr	x0, [x0, #16]
    e1bc:	ldr	x1, [x2, x1]
    e1c0:	neg	x19, x0, lsl #1
    e1c4:	and	x19, x19, x1
    e1c8:	and	x19, x19, #0xffffffffffffff
    e1cc:	add	x19, x19, x0
    e1d0:	cbnz	x19, e1e0 <__interceptor_vfork@@Base+0xc00>
    e1d4:	ldr	x30, [sp, #16]
    e1d8:	ldp	x19, x20, [sp], #32
    e1dc:	ret
    e1e0:	bl	11940 <__hwasan_tag_mismatch_v2@@Base+0x688>
    e1e4:	mov	x20, x0
    e1e8:	add	x0, x0, #0x48
    e1ec:	mov	w2, #0x1                   	// #1
    e1f0:	ldxrb	w1, [x0]
    e1f4:	stxrb	w3, w2, [x0]
    e1f8:	cbnz	w3, e1f0 <__interceptor_vfork@@Base+0xc10>
    e1fc:	dmb	ish
    e200:	tst	w1, #0xff
    e204:	b.eq	e20c <__interceptor_vfork@@Base+0xc2c>  // b.none
    e208:	bl	85d8 <__sanitizer_print_stack_trace@@Base+0x300>
    e20c:	ldp	x1, x0, [x19, #8]
    e210:	sub	x1, x0, x1
    e214:	ldp	x2, x0, [x20, #56]
    e218:	sub	x2, x2, #0x1
    e21c:	add	x0, x0, x1
    e220:	stp	x2, x0, [x20, #56]
    e224:	dmb	ish
    e228:	strb	wzr, [x20, #72]
    e22c:	mov	x0, x19
    e230:	bl	117b8 <__hwasan_tag_mismatch_v2@@Base+0x500>
    e234:	add	x0, x20, #0x30
    e238:	mov	w2, #0x1                   	// #1
    e23c:	ldxrb	w1, [x0]
    e240:	stxrb	w3, w2, [x0]
    e244:	cbnz	w3, e23c <__interceptor_vfork@@Base+0xc5c>
    e248:	dmb	ish
    e24c:	tst	w1, #0xff
    e250:	b.eq	e258 <__interceptor_vfork@@Base+0xc78>  // b.none
    e254:	bl	85d8 <__sanitizer_print_stack_trace@@Base+0x300>
    e258:	ldr	x0, [x20, #40]
    e25c:	cmp	x19, x0
    e260:	b.eq	e2b8 <__interceptor_vfork@@Base+0xcd8>  // b.none
    e264:	nop
    e268:	mov	x1, x0
    e26c:	ldr	x0, [x0, #2664]
    e270:	cmp	x19, x0
    e274:	b.ne	e268 <__interceptor_vfork@@Base+0xc88>  // b.any
    e278:	add	x1, x1, #0xa68
    e27c:	ldr	x0, [x0, #2664]
    e280:	str	x0, [x1]
    e284:	ldr	x0, [x20, #16]
    e288:	ldr	x1, [x20, #32]
    e28c:	str	x1, [x19, #2664]
    e290:	ldr	x1, [x20, #24]
    e294:	str	x19, [x20, #32]
    e298:	sub	x0, x19, x0
    e29c:	add	x1, x0, x1
    e2a0:	bl	24568 <__sanitizer_sandbox_on_notify@@Base+0xf20>
    e2a4:	dmb	ish
    e2a8:	strb	wzr, [x20, #48]
    e2ac:	ldr	x30, [sp, #16]
    e2b0:	ldp	x19, x20, [sp], #32
    e2b4:	ret
    e2b8:	add	x1, x20, #0x28
    e2bc:	b	e27c <__interceptor_vfork@@Base+0xc9c>
    e2c0:	cmp	x0, #0x1
    e2c4:	b.ls	e2ec <__interceptor_vfork@@Base+0xd0c>  // b.plast
    e2c8:	adrp	x2, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
    e2cc:	sub	x1, x0, #0x1
    e2d0:	str	x30, [sp, #-16]!
    e2d4:	ldr	w0, [x2, #2752]
    e2d8:	bl	6400 <pthread_setspecific@plt>
    e2dc:	sxtw	x4, w0
    e2e0:	cbnz	w0, e2f0 <__interceptor_vfork@@Base+0xd10>
    e2e4:	ldr	x30, [sp], #16
    e2e8:	ret
    e2ec:	b	e1a0 <__interceptor_vfork@@Base+0xbc0>
    e2f0:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    e2f4:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    e2f8:	add	x2, x2, #0xf48
    e2fc:	add	x0, x0, #0xa60
    e300:	mov	x3, #0x0                   	// #0
    e304:	mov	w1, #0x137                 	// #311
    e308:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    e30c:	nop
    e310:	adrp	x0, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
    e314:	add	x0, x0, #0xa80
    e318:	ldrb	w1, [x0, #68]
    e31c:	cbnz	w1, e324 <__interceptor_vfork@@Base+0xd44>
    e320:	ret
    e324:	ldr	w0, [x0, #64]
    e328:	mov	x1, #0x4                   	// #4
    e32c:	str	x30, [sp, #-16]!
    e330:	bl	6400 <pthread_setspecific@plt>
    e334:	sxtw	x4, w0
    e338:	cbnz	w0, e344 <__interceptor_vfork@@Base+0xd64>
    e33c:	ldr	x30, [sp], #16
    e340:	ret
    e344:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    e348:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    e34c:	add	x2, x2, #0xf90
    e350:	add	x0, x0, #0xa60
    e354:	mov	x3, #0x0                   	// #0
    e358:	mov	w1, #0x130                 	// #304
    e35c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    e360:	adrp	x2, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
    e364:	add	x2, x2, #0xa80
    e368:	str	x30, [sp, #-16]!
    e36c:	ldrb	w0, [x2, #68]
    e370:	cbnz	w0, e39c <__interceptor_vfork@@Base+0xdbc>
    e374:	mov	w3, #0x1                   	// #1
    e378:	add	x0, x2, #0x40
    e37c:	adrp	x1, e000 <__interceptor_vfork@@Base+0xa20>
    e380:	add	x1, x1, #0x2c0
    e384:	strb	w3, [x2, #68]
    e388:	bl	6540 <pthread_key_create@plt>
    e38c:	sxtw	x4, w0
    e390:	cbnz	w0, e3bc <__interceptor_vfork@@Base+0xddc>
    e394:	ldr	x30, [sp], #16
    e398:	ret
    e39c:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    e3a0:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    e3a4:	add	x2, x2, #0xfe8
    e3a8:	add	x0, x0, #0xa60
    e3ac:	mov	x4, #0x0                   	// #0
    e3b0:	mov	x3, #0x0                   	// #0
    e3b4:	mov	w1, #0x13e                 	// #318
    e3b8:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    e3bc:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    e3c0:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    e3c4:	add	x2, x2, #0x8
    e3c8:	add	x0, x0, #0xa60
    e3cc:	mov	x3, #0x0                   	// #0
    e3d0:	mov	w1, #0x140                 	// #320
    e3d4:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    e3d8:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    e3dc:	ldr	x0, [x0, #3992]
    e3e0:	mrs	x1, tpidr_el0
    e3e4:	add	x0, x1, x0
    e3e8:	ret
    e3ec:	nop
    e3f0:	ret
    e3f4:	nop
    e3f8:	str	x30, [sp, #-16]!
    e3fc:	bl	11940 <__hwasan_tag_mismatch_v2@@Base+0x688>
    e400:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    e404:	ldr	x1, [x1, #3992]
    e408:	mrs	x2, tpidr_el0
    e40c:	ldr	x3, [x0, #16]
    e410:	ldr	x30, [sp], #16
    e414:	ldr	x1, [x2, x1]
    e418:	neg	x0, x3, lsl #1
    e41c:	and	x0, x0, x1
    e420:	and	x0, x0, #0xffffffffffffff
    e424:	add	x0, x0, x3
    e428:	ret
    e42c:	nop
    e430:	stp	x19, x20, [sp, #-176]!
    e434:	cmp	w0, #0x5
    e438:	mov	x20, x1
    e43c:	str	x30, [sp, #80]
    e440:	mov	x19, x2
    e444:	b.eq	e474 <__interceptor_vfork@@Base+0xe94>  // b.none
    e448:	bl	1c458 <__sanitizer_set_report_fd@@Base+0x45d8>
    e44c:	mov	w2, w0
    e450:	mov	x1, x19
    e454:	mov	x0, x20
    e458:	mov	x4, #0x0                   	// #0
    e45c:	adrp	x3, d000 <__interceptor_calloc@@Base+0x108>
    e460:	add	x3, x3, #0x6d8
    e464:	bl	2d8d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4fe8>
    e468:	ldr	x30, [sp, #80]
    e46c:	ldp	x19, x20, [sp], #176
    e470:	ret
    e474:	ldr	x0, [x1, #16]
    e478:	stp	x21, x22, [sp, #16]
    e47c:	ldr	w22, [x0]
    e480:	lsr	w22, w22, #5
    e484:	and	w0, w22, #0xff00
    e488:	cmp	w0, #0x900
    e48c:	b.eq	e498 <__interceptor_vfork@@Base+0xeb8>  // b.none
    e490:	ldp	x21, x22, [sp, #16]
    e494:	b	e448 <__interceptor_vfork@@Base+0xe68>
    e498:	and	w0, w22, #0xf
    e49c:	stp	x23, x24, [sp, #32]
    e4a0:	cmp	w0, #0x4
    e4a4:	and	w1, w22, #0x10
    e4a8:	ccmp	w0, #0xf, #0x4, hi  // hi = pmore
    e4ac:	and	w22, w22, #0x20
    e4b0:	ldr	x24, [x2, #184]
    e4b4:	b.ne	e640 <__interceptor_vfork@@Base+0x1060>  // b.any
    e4b8:	stp	x25, x26, [sp, #48]
    e4bc:	cmp	w0, #0xf
    e4c0:	stp	x27, x28, [sp, #64]
    e4c4:	b.eq	e64c <__interceptor_vfork@@Base+0x106c>  // b.none
    e4c8:	mov	w2, #0x1                   	// #1
    e4cc:	lsl	w0, w2, w0
    e4d0:	str	x0, [sp, #104]
    e4d4:	cmp	w1, #0x0
    e4d8:	add	x21, sp, #0x70
    e4dc:	cset	w23, ne  // ne = any
    e4e0:	mov	x0, x21
    e4e4:	stp	x20, x19, [sp, #112]
    e4e8:	adrp	x25, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    e4ec:	bl	1e1e0 <__sanitizer_set_report_fd@@Base+0x6360>
    e4f0:	mov	x1, x0
    e4f4:	mov	x0, x21
    e4f8:	str	x1, [sp, #128]
    e4fc:	bl	1e1f0 <__sanitizer_set_report_fd@@Base+0x6370>
    e500:	mov	w1, w0
    e504:	mov	x0, x21
    e508:	strb	w1, [sp, #160]
    e50c:	bl	1d8c8 <__sanitizer_set_report_fd@@Base+0x5a48>
    e510:	mov	w1, w0
    e514:	mov	x0, x21
    e518:	str	w1, [sp, #164]
    e51c:	bl	1d910 <__sanitizer_set_report_fd@@Base+0x5a90>
    e520:	mov	w1, w0
    e524:	mov	x0, x21
    e528:	strb	w1, [sp, #168]
    e52c:	bl	1d940 <__sanitizer_set_report_fd@@Base+0x5ac0>
    e530:	ldr	x0, [sp, #136]
    e534:	bl	27c70 <__sanitizer_cov_dump@@Base+0x1050>
    e538:	mov	x21, x0
    e53c:	ldr	x20, [x25, #4016]
    e540:	ldr	x26, [sp, #152]
    e544:	ldr	x2, [x20]
    e548:	cbz	x2, e658 <__interceptor_vfork@@Base+0x1078>
    e54c:	sub	x0, x2, #0x1
    e550:	tst	x0, x2
    e554:	b.ne	e6c4 <__interceptor_vfork@@Base+0x10e4>  // b.any
    e558:	add	x28, x2, #0x817
    e55c:	neg	x2, x2
    e560:	and	x28, x28, x2
    e564:	adrp	x27, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    e568:	mov	w2, #0x0                   	// #0
    e56c:	add	x1, x27, #0xc10
    e570:	mov	x0, x28
    e574:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
    e578:	mov	x2, #0x0                   	// #0
    e57c:	mov	x1, #0x0                   	// #0
    e580:	mov	x20, x0
    e584:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
    e588:	mov	x1, #0x0                   	// #0
    e58c:	mov	x0, #0x0                   	// #0
    e590:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
    e594:	cmp	x28, #0x817
    e598:	b.ls	e668 <__interceptor_vfork@@Base+0x1088>  // b.plast
    e59c:	mov	x0, x20
    e5a0:	mov	x2, #0x818                 	// #2072
    e5a4:	mov	w1, #0x0                   	// #0
    e5a8:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
    e5ac:	adrp	x4, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    e5b0:	mov	x2, x26
    e5b4:	mov	x1, x21
    e5b8:	mov	x3, x19
    e5bc:	ldr	x4, [x4, #4056]
    e5c0:	add	x5, x20, #0x10
    e5c4:	mov	x0, x20
    e5c8:	str	xzr, [x20, #8]
    e5cc:	str	x26, [x20, #2064]
    e5d0:	ldrb	w4, [x4, #33]
    e5d4:	str	x5, [x20]
    e5d8:	mov	w5, #0x100                 	// #256
    e5dc:	bl	7238 <__sanitizer_print_memory_profile@plt+0xbd8>
    e5e0:	bl	71d8 <__sanitizer_print_memory_profile@plt+0xb78>
    e5e4:	ldrb	w4, [x0, #4]
    e5e8:	cmp	w22, #0x0
    e5ec:	mov	w3, w23
    e5f0:	ldr	x2, [sp, #104]
    e5f4:	cset	w6, eq  // eq = none
    e5f8:	orr	w4, w6, w4
    e5fc:	mov	x5, #0x0                   	// #0
    e600:	mov	x1, x24
    e604:	mov	x0, x20
    e608:	bl	10ca8 <__hwasan_memmove@@Base+0x2220>
    e60c:	mov	x1, x28
    e610:	mov	x0, x20
    e614:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
    e618:	ldr	x0, [x19, #440]
    e61c:	ldp	x21, x22, [sp, #16]
    e620:	add	x0, x0, #0x4
    e624:	ldp	x23, x24, [sp, #32]
    e628:	ldp	x25, x26, [sp, #48]
    e62c:	ldp	x27, x28, [sp, #64]
    e630:	str	x0, [x19, #440]
    e634:	ldr	x30, [sp, #80]
    e638:	ldp	x19, x20, [sp], #176
    e63c:	ret
    e640:	ldp	x21, x22, [sp, #16]
    e644:	ldp	x23, x24, [sp, #32]
    e648:	b	e448 <__interceptor_vfork@@Base+0xe68>
    e64c:	ldr	x0, [x2, #192]
    e650:	str	x0, [sp, #104]
    e654:	b	e4d4 <__interceptor_vfork@@Base+0xef4>
    e658:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
    e65c:	mov	x2, x0
    e660:	str	x0, [x20]
    e664:	b	e54c <__interceptor_vfork@@Base+0xf6c>
    e668:	ldr	x25, [x25, #4016]
    e66c:	ldr	x0, [x25]
    e670:	cbz	x0, e6d4 <__interceptor_vfork@@Base+0x10f4>
    e674:	sub	x1, x0, #0x1
    e678:	tst	x1, x0
    e67c:	b.ne	e6c4 <__interceptor_vfork@@Base+0x10e4>  // b.any
    e680:	add	x25, x0, #0x817
    e684:	neg	x0, x0
    e688:	and	x25, x25, x0
    e68c:	add	x1, x27, #0xc10
    e690:	mov	x0, x25
    e694:	mov	w2, #0x0                   	// #0
    e698:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
    e69c:	mov	x27, x0
    e6a0:	mov	x2, #0x0                   	// #0
    e6a4:	mov	x1, x20
    e6a8:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
    e6ac:	mov	x1, x28
    e6b0:	mov	x0, x20
    e6b4:	mov	x28, x25
    e6b8:	mov	x20, x27
    e6bc:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
    e6c0:	b	e59c <__interceptor_vfork@@Base+0xfbc>
    e6c4:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    e6c8:	add	x0, x0, #0xbf8
    e6cc:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
    e6d0:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
    e6d4:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
    e6d8:	str	x0, [x25]
    e6dc:	b	e674 <__interceptor_vfork@@Base+0x1094>

000000000000e6e0 <__hwasan_tag_mismatch4@@Base>:
    e6e0:	stp	x29, x30, [sp, #-96]!
    e6e4:	mov	w4, #0x1                   	// #1
    e6e8:	mov	x29, sp
    e6ec:	stp	x27, x28, [sp, #80]
    e6f0:	adrp	x27, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    e6f4:	stp	x19, x20, [sp, #16]
    e6f8:	ldr	x19, [x27, #4016]
    e6fc:	stp	x21, x22, [sp, #32]
    e700:	mov	x21, x1
    e704:	and	x1, x1, #0xf
    e708:	stp	x23, x24, [sp, #48]
    e70c:	cmp	x1, #0xf
    e710:	lsl	w6, w4, w1
    e714:	stp	x25, x26, [sp, #64]
    e718:	sxtw	x6, w6
    e71c:	ldr	x4, [x19]
    e720:	mov	x24, x30
    e724:	mov	x23, x0
    e728:	mov	x22, x2
    e72c:	csel	x20, x6, x3, ne  // ne = any
    e730:	mov	x26, x29
    e734:	cbz	x4, e82c <__hwasan_tag_mismatch4@@Base+0x14c>
    e738:	sub	x0, x4, #0x1
    e73c:	tst	x0, x4
    e740:	b.ne	e898 <__hwasan_tag_mismatch4@@Base+0x1b8>  // b.any
    e744:	add	x25, x4, #0x817
    e748:	neg	x4, x4
    e74c:	and	x25, x25, x4
    e750:	mov	w2, #0x0                   	// #0
    e754:	mov	x0, x25
    e758:	adrp	x28, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    e75c:	add	x1, x28, #0xc10
    e760:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
    e764:	mov	x2, #0x0                   	// #0
    e768:	mov	x1, #0x0                   	// #0
    e76c:	mov	x19, x0
    e770:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
    e774:	mov	x1, #0x0                   	// #0
    e778:	mov	x0, #0x0                   	// #0
    e77c:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
    e780:	cmp	x25, #0x817
    e784:	b.ls	e83c <__hwasan_tag_mismatch4@@Base+0x15c>  // b.plast
    e788:	mov	x2, #0x818                 	// #2072
    e78c:	mov	w1, #0x0                   	// #0
    e790:	mov	x0, x19
    e794:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
    e798:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    e79c:	add	x1, x19, #0x10
    e7a0:	str	xzr, [x19, #8]
    e7a4:	mov	x2, x26
    e7a8:	ldr	x0, [x0, #4056]
    e7ac:	str	x26, [x19, #2064]
    e7b0:	mov	w5, #0x100                 	// #256
    e7b4:	mov	x3, #0x0                   	// #0
    e7b8:	ldrb	w4, [x0, #33]
    e7bc:	mov	x0, x19
    e7c0:	str	x1, [x19]
    e7c4:	mov	x1, x24
    e7c8:	bl	7238 <__sanitizer_print_memory_profile@plt+0xbd8>
    e7cc:	cbz	x22, e7f0 <__hwasan_tag_mismatch4@@Base+0x110>
    e7d0:	ldr	x0, [x19]
    e7d4:	cbz	x0, e7f0 <__hwasan_tag_mismatch4@@Base+0x110>
    e7d8:	ldr	w1, [x19, #8]
    e7dc:	cbz	w1, e7f0 <__hwasan_tag_mismatch4@@Base+0x110>
    e7e0:	add	x0, x0, #0x8
    e7e4:	sub	w1, w1, #0x1
    e7e8:	str	x0, [x19]
    e7ec:	str	w1, [x19, #8]
    e7f0:	bl	71d8 <__sanitizer_print_memory_profile@plt+0xb78>
    e7f4:	ldrb	w4, [x0, #4]
    e7f8:	ubfx	w6, w21, #5, #1
    e7fc:	ubfx	w3, w21, #4, #1
    e800:	eor	w4, w4, #0x1
    e804:	mov	x5, x22
    e808:	tst	w6, w4
    e80c:	mov	x2, x20
    e810:	cset	w4, eq  // eq = none
    e814:	mov	x1, x23
    e818:	mov	x0, x19
    e81c:	bl	10ca8 <__hwasan_memmove@@Base+0x2220>
    e820:	mov	x1, x25
    e824:	mov	x0, x19
    e828:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
    e82c:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
    e830:	mov	x4, x0
    e834:	str	x0, [x19]
    e838:	b	e738 <__hwasan_tag_mismatch4@@Base+0x58>
    e83c:	ldr	x27, [x27, #4016]
    e840:	ldr	x0, [x27]
    e844:	cbz	x0, e8a8 <__hwasan_tag_mismatch4@@Base+0x1c8>
    e848:	sub	x1, x0, #0x1
    e84c:	tst	x1, x0
    e850:	b.ne	e898 <__hwasan_tag_mismatch4@@Base+0x1b8>  // b.any
    e854:	add	x27, x0, #0x817
    e858:	neg	x0, x0
    e85c:	and	x27, x27, x0
    e860:	add	x1, x28, #0xc10
    e864:	mov	x0, x27
    e868:	mov	w2, #0x0                   	// #0
    e86c:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
    e870:	mov	x28, x0
    e874:	mov	x2, #0x0                   	// #0
    e878:	mov	x1, x19
    e87c:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
    e880:	mov	x1, x25
    e884:	mov	x0, x19
    e888:	mov	x25, x27
    e88c:	mov	x19, x28
    e890:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
    e894:	b	e788 <__hwasan_tag_mismatch4@@Base+0xa8>
    e898:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    e89c:	add	x0, x0, #0xbf8
    e8a0:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
    e8a4:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
    e8a8:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
    e8ac:	str	x0, [x27]
    e8b0:	b	e848 <__hwasan_tag_mismatch4@@Base+0x168>
    e8b4:	nop

000000000000e8b8 <__hwasan_memset@@Base>:
    e8b8:	mov	x5, x0
    e8bc:	and	x0, x0, #0xffffffffffffff
    e8c0:	cbnz	x2, e8c8 <__hwasan_memset@@Base+0x10>
    e8c4:	b	62f0 <memset@plt>
    e8c8:	adrp	x3, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    e8cc:	add	x8, x2, x0
    e8d0:	lsr	x7, x5, #56
    e8d4:	ldr	x3, [x3, #3848]
    e8d8:	lsr	x8, x8, #4
    e8dc:	ldr	x9, [x3]
    e8e0:	add	x6, x8, x9
    e8e4:	add	x3, x9, x0, lsr #4
    e8e8:	cmp	x3, x6
    e8ec:	b.cs	e908 <__hwasan_memset@@Base+0x50>  // b.hs, b.nlast
    e8f0:	ldrb	w4, [x3]
    e8f4:	cmp	w4, w7
    e8f8:	b.ne	e950 <__hwasan_memset@@Base+0x98>  // b.any
    e8fc:	add	x3, x3, #0x1
    e900:	cmp	x6, x3
    e904:	b.ne	e8f0 <__hwasan_memset@@Base+0x38>  // b.any
    e908:	add	x3, x5, x2
    e90c:	ands	x4, x3, #0xf
    e910:	b.eq	e8c4 <__hwasan_memset@@Base+0xc>  // b.none
    e914:	ldrb	w6, [x8, x9]
    e918:	lsr	x7, x3, #56
    e91c:	and	x3, x3, #0xfffffffffffffff0
    e920:	cmp	w6, w7
    e924:	b.eq	e8c4 <__hwasan_memset@@Base+0xc>  // b.none
    e928:	cmp	w6, #0xf
    e92c:	b.hi	e948 <__hwasan_memset@@Base+0x90>  // b.pmore
    e930:	cmp	x4, w6, uxtb
    e934:	b.hi	e948 <__hwasan_memset@@Base+0x90>  // b.pmore
    e938:	orr	x3, x3, #0xf
    e93c:	ldrb	w3, [x3]
    e940:	cmp	w3, w7
    e944:	b.eq	e8c4 <__hwasan_memset@@Base+0xc>  // b.none
    e948:	brk	#0x93f
    e94c:	b	62f0 <memset@plt>
    e950:	brk	#0x93f
    e954:	b	e8fc <__hwasan_memset@@Base+0x44>

000000000000e958 <__hwasan_memcpy@@Base>:
    e958:	mov	x5, x0
    e95c:	mov	x10, x1
    e960:	and	x0, x0, #0xffffffffffffff
    e964:	and	x1, x1, #0xffffffffffffff
    e968:	cbnz	x2, e970 <__hwasan_memcpy@@Base+0x18>
    e96c:	b	61d0 <memcpy@plt>
    e970:	adrp	x3, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    e974:	add	x8, x2, x0
    e978:	lsr	x7, x5, #56
    e97c:	ldr	x3, [x3, #3848]
    e980:	lsr	x8, x8, #4
    e984:	ldr	x9, [x3]
    e988:	add	x6, x8, x9
    e98c:	add	x3, x9, x0, lsr #4
    e990:	cmp	x3, x6
    e994:	b.cs	e9b0 <__hwasan_memcpy@@Base+0x58>  // b.hs, b.nlast
    e998:	ldrb	w4, [x3]
    e99c:	cmp	w4, w7
    e9a0:	b.ne	ea38 <__hwasan_memcpy@@Base+0xe0>  // b.any
    e9a4:	add	x3, x3, #0x1
    e9a8:	cmp	x6, x3
    e9ac:	b.ne	e998 <__hwasan_memcpy@@Base+0x40>  // b.any
    e9b0:	add	x3, x5, x2
    e9b4:	ands	x4, x3, #0xf
    e9b8:	b.ne	ea48 <__hwasan_memcpy@@Base+0xf0>  // b.any
    e9bc:	add	x7, x2, x1
    e9c0:	add	x3, x9, x1, lsr #4
    e9c4:	lsr	x6, x10, #56
    e9c8:	lsr	x7, x7, #4
    e9cc:	add	x5, x7, x9
    e9d0:	cmp	x3, x5
    e9d4:	b.cs	e9f0 <__hwasan_memcpy@@Base+0x98>  // b.hs, b.nlast
    e9d8:	ldrb	w4, [x3]
    e9dc:	cmp	w4, w6
    e9e0:	b.ne	ea40 <__hwasan_memcpy@@Base+0xe8>  // b.any
    e9e4:	add	x3, x3, #0x1
    e9e8:	cmp	x5, x3
    e9ec:	b.ne	e9d8 <__hwasan_memcpy@@Base+0x80>  // b.any
    e9f0:	add	x3, x10, x2
    e9f4:	ands	x4, x3, #0xf
    e9f8:	b.eq	e96c <__hwasan_memcpy@@Base+0x14>  // b.none
    e9fc:	ldrb	w5, [x7, x9]
    ea00:	lsr	x6, x3, #56
    ea04:	and	x3, x3, #0xfffffffffffffff0
    ea08:	cmp	w5, w6
    ea0c:	b.eq	e96c <__hwasan_memcpy@@Base+0x14>  // b.none
    ea10:	cmp	w5, #0xf
    ea14:	b.hi	ea30 <__hwasan_memcpy@@Base+0xd8>  // b.pmore
    ea18:	cmp	x4, w5, uxtb
    ea1c:	b.hi	ea30 <__hwasan_memcpy@@Base+0xd8>  // b.pmore
    ea20:	orr	x3, x3, #0xf
    ea24:	ldrb	w3, [x3]
    ea28:	cmp	w3, w6
    ea2c:	b.eq	e96c <__hwasan_memcpy@@Base+0x14>  // b.none
    ea30:	brk	#0x92f
    ea34:	b	61d0 <memcpy@plt>
    ea38:	brk	#0x93f
    ea3c:	b	e9a4 <__hwasan_memcpy@@Base+0x4c>
    ea40:	brk	#0x92f
    ea44:	b	e9e4 <__hwasan_memcpy@@Base+0x8c>
    ea48:	ldrb	w6, [x8, x9]
    ea4c:	lsr	x7, x3, #56
    ea50:	and	x3, x3, #0xfffffffffffffff0
    ea54:	cmp	w6, w7
    ea58:	b.eq	e9bc <__hwasan_memcpy@@Base+0x64>  // b.none
    ea5c:	cmp	w6, #0xf
    ea60:	b.hi	ea7c <__hwasan_memcpy@@Base+0x124>  // b.pmore
    ea64:	cmp	x4, w6, uxtb
    ea68:	b.hi	ea7c <__hwasan_memcpy@@Base+0x124>  // b.pmore
    ea6c:	orr	x3, x3, #0xf
    ea70:	ldrb	w3, [x3]
    ea74:	cmp	w3, w7
    ea78:	b.eq	e9bc <__hwasan_memcpy@@Base+0x64>  // b.none
    ea7c:	brk	#0x93f
    ea80:	b	e9bc <__hwasan_memcpy@@Base+0x64>
    ea84:	nop

000000000000ea88 <__hwasan_memmove@@Base>:
    ea88:	mov	x5, x0
    ea8c:	mov	x10, x1
    ea90:	and	x0, x0, #0xffffffffffffff
    ea94:	and	x1, x1, #0xffffffffffffff
    ea98:	cbnz	x2, eaa0 <__hwasan_memmove@@Base+0x18>
    ea9c:	b	64c0 <memmove@plt>
    eaa0:	adrp	x3, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    eaa4:	add	x8, x2, x0
    eaa8:	lsr	x7, x5, #56
    eaac:	ldr	x3, [x3, #3848]
    eab0:	lsr	x8, x8, #4
    eab4:	ldr	x9, [x3]
    eab8:	add	x6, x8, x9
    eabc:	add	x3, x9, x0, lsr #4
    eac0:	cmp	x3, x6
    eac4:	b.cs	eae0 <__hwasan_memmove@@Base+0x58>  // b.hs, b.nlast
    eac8:	ldrb	w4, [x3]
    eacc:	cmp	w4, w7
    ead0:	b.ne	eb68 <__hwasan_memmove@@Base+0xe0>  // b.any
    ead4:	add	x3, x3, #0x1
    ead8:	cmp	x6, x3
    eadc:	b.ne	eac8 <__hwasan_memmove@@Base+0x40>  // b.any
    eae0:	add	x3, x5, x2
    eae4:	ands	x4, x3, #0xf
    eae8:	b.ne	eb78 <__hwasan_memmove@@Base+0xf0>  // b.any
    eaec:	add	x7, x2, x1
    eaf0:	add	x3, x9, x1, lsr #4
    eaf4:	lsr	x6, x10, #56
    eaf8:	lsr	x7, x7, #4
    eafc:	add	x5, x7, x9
    eb00:	cmp	x3, x5
    eb04:	b.cs	eb20 <__hwasan_memmove@@Base+0x98>  // b.hs, b.nlast
    eb08:	ldrb	w4, [x3]
    eb0c:	cmp	w4, w6
    eb10:	b.ne	eb70 <__hwasan_memmove@@Base+0xe8>  // b.any
    eb14:	add	x3, x3, #0x1
    eb18:	cmp	x5, x3
    eb1c:	b.ne	eb08 <__hwasan_memmove@@Base+0x80>  // b.any
    eb20:	add	x3, x10, x2
    eb24:	ands	x4, x3, #0xf
    eb28:	b.eq	ea9c <__hwasan_memmove@@Base+0x14>  // b.none
    eb2c:	ldrb	w5, [x7, x9]
    eb30:	lsr	x6, x3, #56
    eb34:	and	x3, x3, #0xfffffffffffffff0
    eb38:	cmp	w5, w6
    eb3c:	b.eq	ea9c <__hwasan_memmove@@Base+0x14>  // b.none
    eb40:	cmp	w5, #0xf
    eb44:	b.hi	eb60 <__hwasan_memmove@@Base+0xd8>  // b.pmore
    eb48:	cmp	x4, w5, uxtb
    eb4c:	b.hi	eb60 <__hwasan_memmove@@Base+0xd8>  // b.pmore
    eb50:	orr	x3, x3, #0xf
    eb54:	ldrb	w3, [x3]
    eb58:	cmp	w3, w6
    eb5c:	b.eq	ea9c <__hwasan_memmove@@Base+0x14>  // b.none
    eb60:	brk	#0x92f
    eb64:	b	64c0 <memmove@plt>
    eb68:	brk	#0x93f
    eb6c:	b	ead4 <__hwasan_memmove@@Base+0x4c>
    eb70:	brk	#0x92f
    eb74:	b	eb14 <__hwasan_memmove@@Base+0x8c>
    eb78:	ldrb	w6, [x8, x9]
    eb7c:	lsr	x7, x3, #56
    eb80:	and	x3, x3, #0xfffffffffffffff0
    eb84:	cmp	w6, w7
    eb88:	b.eq	eaec <__hwasan_memmove@@Base+0x64>  // b.none
    eb8c:	cmp	w6, #0xf
    eb90:	b.hi	ebac <__hwasan_memmove@@Base+0x124>  // b.pmore
    eb94:	cmp	x4, w6, uxtb
    eb98:	b.hi	ebac <__hwasan_memmove@@Base+0x124>  // b.pmore
    eb9c:	orr	x3, x3, #0xf
    eba0:	ldrb	w3, [x3]
    eba4:	cmp	w3, w7
    eba8:	b.eq	eaec <__hwasan_memmove@@Base+0x64>  // b.none
    ebac:	brk	#0x93f
    ebb0:	b	eaec <__hwasan_memmove@@Base+0x64>
    ebb4:	nop
    ebb8:	stp	x19, x20, [sp, #-64]!
    ebbc:	tst	x0, #0xf
    ebc0:	stp	x21, x22, [sp, #16]
    ebc4:	stp	x23, x24, [sp, #32]
    ebc8:	stp	x25, x30, [sp, #48]
    ebcc:	b.ne	ec7c <__hwasan_memmove@@Base+0x1f4>  // b.any
    ebd0:	tst	x1, #0xf
    ebd4:	b.ne	ec9c <__hwasan_memmove@@Base+0x214>  // b.any
    ebd8:	mov	x20, x0
    ebdc:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    ebe0:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    ebe4:	and	w23, w2, #0xff
    ebe8:	ldr	x21, [x21, #4016]
    ebec:	lsr	x19, x1, #4
    ebf0:	ldr	x0, [x0, #3848]
    ebf4:	ldr	x3, [x21]
    ebf8:	ldr	x22, [x0]
    ebfc:	add	x22, x22, x20, lsr #4
    ec00:	cbz	x3, ec6c <__hwasan_memmove@@Base+0x1e4>
    ec04:	sub	x0, x3, #0x1
    ec08:	tst	x3, x0
    ec0c:	b.ne	ecbc <__hwasan_memmove@@Base+0x234>  // b.any
    ec10:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    ec14:	neg	x3, x3
    ec18:	add	x0, x22, x0
    ec1c:	add	x24, x19, x22
    ec20:	ldr	x1, [x1, #4056]
    ec24:	and	x21, x0, x3
    ec28:	cmp	w23, #0x0
    ec2c:	and	x25, x24, x3
    ec30:	ldr	x0, [x1, #104]
    ec34:	add	x0, x21, x0
    ec38:	ccmp	x0, x25, #0x2, eq  // eq = none
    ec3c:	b.ls	eccc <__hwasan_memmove@@Base+0x244>  // b.plast
    ec40:	mov	x2, x19
    ec44:	mov	x0, x22
    ec48:	mov	w1, w23
    ec4c:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
    ec50:	mov	x0, x20
    ec54:	bfi	x0, x23, #56, #8
    ec58:	ldp	x21, x22, [sp, #16]
    ec5c:	ldp	x23, x24, [sp, #32]
    ec60:	ldp	x25, x30, [sp, #48]
    ec64:	ldp	x19, x20, [sp], #64
    ec68:	ret
    ec6c:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
    ec70:	mov	x3, x0
    ec74:	str	x0, [x21]
    ec78:	b	ec04 <__hwasan_memmove@@Base+0x17c>
    ec7c:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    ec80:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    ec84:	add	x2, x2, #0x48
    ec88:	add	x0, x0, #0x78
    ec8c:	mov	x4, #0x0                   	// #0
    ec90:	mov	x3, #0x0                   	// #0
    ec94:	mov	w1, #0x17                  	// #23
    ec98:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    ec9c:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    eca0:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    eca4:	add	x2, x2, #0xc8
    eca8:	add	x0, x0, #0x78
    ecac:	mov	x4, #0x0                   	// #0
    ecb0:	mov	x3, #0x0                   	// #0
    ecb4:	mov	w1, #0x18                  	// #24
    ecb8:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    ecbc:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    ecc0:	add	x0, x0, #0xbf8
    ecc4:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
    ecc8:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
    eccc:	sub	x2, x21, x22
    ecd0:	mov	x0, x22
    ecd4:	mov	w1, #0x0                   	// #0
    ecd8:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
    ecdc:	sub	x2, x24, x25
    ece0:	mov	x0, x25
    ece4:	mov	w1, #0x0                   	// #0
    ece8:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
    ecec:	mov	x1, x25
    ecf0:	mov	x0, x21
    ecf4:	bl	24568 <__sanitizer_sandbox_on_notify@@Base+0xf20>
    ecf8:	b	ec50 <__hwasan_memmove@@Base+0x1c8>
    ecfc:	nop
    ed00:	stp	x19, x20, [sp, #-64]!
    ed04:	adrp	x3, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    ed08:	mov	x20, x0
    ed0c:	stp	x21, x22, [sp, #16]
    ed10:	adrp	x22, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    ed14:	mov	x19, x1
    ed18:	ldr	x22, [x22, #4016]
    ed1c:	stp	x23, x30, [sp, #32]
    ed20:	and	w23, w2, #0xff
    ed24:	ldr	x0, [x3, #3848]
    ed28:	ldr	x3, [x22]
    ed2c:	ldr	x21, [x0]
    ed30:	cbz	x3, edac <__hwasan_memmove@@Base+0x324>
    ed34:	sub	x4, x3, #0x1
    ed38:	tst	x4, x3
    ed3c:	b.ne	edbc <__hwasan_memmove@@Base+0x334>  // b.any
    ed40:	adrp	x5, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    ed44:	add	x1, x19, #0xf
    ed48:	add	x1, x1, x20
    ed4c:	and	x2, x20, #0xfffffffffffffff0
    ed50:	ldr	x5, [x5, #4056]
    ed54:	and	x1, x1, #0xfffffffffffffff0
    ed58:	sub	x2, x1, x2
    ed5c:	add	x0, x21, x20, lsr #4
    ed60:	neg	x3, x3
    ed64:	add	x4, x0, x4
    ed68:	ldr	x1, [x5, #104]
    ed6c:	lsr	x2, x2, #4
    ed70:	and	x4, x4, x3
    ed74:	add	x21, x0, x2
    ed78:	cmp	w23, #0x0
    ed7c:	and	x19, x21, x3
    ed80:	add	x1, x4, x1
    ed84:	ccmp	x19, x1, #0x0, eq  // eq = none
    ed88:	b.cs	edcc <__hwasan_memmove@@Base+0x344>  // b.hs, b.nlast
    ed8c:	mov	w1, w23
    ed90:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
    ed94:	and	x0, x20, #0xfffffffffffff0
    ed98:	orr	x0, x0, x23, lsl #56
    ed9c:	ldp	x21, x22, [sp, #16]
    eda0:	ldp	x23, x30, [sp, #32]
    eda4:	ldp	x19, x20, [sp], #64
    eda8:	ret
    edac:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
    edb0:	mov	x3, x0
    edb4:	str	x0, [x22]
    edb8:	b	ed34 <__hwasan_memmove@@Base+0x2ac>
    edbc:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    edc0:	add	x0, x0, #0xbf8
    edc4:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
    edc8:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
    edcc:	sub	x2, x4, x0
    edd0:	mov	w1, #0x0                   	// #0
    edd4:	str	x4, [sp, #56]
    edd8:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
    eddc:	sub	x2, x21, x19
    ede0:	mov	x0, x19
    ede4:	mov	w1, #0x0                   	// #0
    ede8:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
    edec:	ldr	x4, [sp, #56]
    edf0:	mov	x1, x19
    edf4:	mov	x0, x4
    edf8:	bl	24568 <__sanitizer_sandbox_on_notify@@Base+0xf20>
    edfc:	b	ed94 <__hwasan_memmove@@Base+0x30c>
    ee00:	mov	x2, x1
    ee04:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    ee08:	add	x1, x1, #0xf8
    ee0c:	ldrb	w2, [x2]
    ee10:	b	1fd40 <__sanitizer_on_print@@Base+0x420>
    ee14:	nop
    ee18:	mov	x2, x1
    ee1c:	ldrb	w1, [x1]
    ee20:	sub	w1, w1, #0x1
    ee24:	and	w1, w1, #0xff
    ee28:	cmp	w1, #0xf
    ee2c:	b.hi	ee54 <__hwasan_memmove@@Base+0x3cc>  // b.pmore
    ee30:	adrp	x3, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    ee34:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    ee38:	add	x1, x1, #0xf8
    ee3c:	ldr	x3, [x3, #3848]
    ee40:	ldr	x3, [x3]
    ee44:	sub	x2, x2, x3
    ee48:	lsl	x2, x2, #4
    ee4c:	ldrb	w2, [x2, #15]
    ee50:	b	1fd40 <__sanitizer_on_print@@Base+0x420>
    ee54:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    ee58:	add	x1, x1, #0x100
    ee5c:	b	1fd40 <__sanitizer_on_print@@Base+0x420>
    ee60:	stp	x19, x20, [sp, #-160]!
    ee64:	stp	x21, x22, [sp, #16]
    ee68:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    ee6c:	mov	x22, x0
    ee70:	ldr	x20, [x21, #4016]
    ee74:	stp	x25, x26, [sp, #48]
    ee78:	add	x26, x1, #0x1
    ee7c:	stp	x27, x28, [sp, #64]
    ee80:	and	x27, x0, #0xfffffffffffffff0
    ee84:	lsr	x26, x26, #1
    ee88:	ldr	x0, [x20]
    ee8c:	lsr	x1, x1, #1
    ee90:	stp	x23, x24, [sp, #32]
    ee94:	mov	x23, x2
    ee98:	add	x2, x27, x26, lsl #4
    ee9c:	str	x30, [sp, #80]
    eea0:	sub	x24, x27, x1, lsl #4
    eea4:	str	x2, [sp, #96]
    eea8:	cbz	x0, eee4 <__hwasan_memmove@@Base+0x45c>
    eeac:	str	xzr, [sp, #128]
    eeb0:	cmp	xzr, x0, lsl #3
    eeb4:	stp	xzr, xzr, [sp, #136]
    eeb8:	lsl	x19, x0, #3
    eebc:	b.ne	ef10 <__hwasan_memmove@@Base+0x488>  // b.any
    eec0:	stp	xzr, xzr, [sp, #144]
    eec4:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    eec8:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    eecc:	add	x2, x2, #0x118
    eed0:	add	x0, x0, #0x6a8
    eed4:	mov	x4, #0x0                   	// #0
    eed8:	mov	x3, #0x0                   	// #0
    eedc:	mov	w1, #0x1c5                 	// #453
    eee0:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    eee4:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
    eee8:	str	x0, [x20]
    eeec:	str	xzr, [sp, #128]
    eef0:	mov	x19, x0
    eef4:	stp	xzr, xzr, [sp, #136]
    eef8:	cmp	xzr, x0, lsl #3
    eefc:	lsl	x1, x0, #3
    ef00:	b.eq	eec0 <__hwasan_memmove@@Base+0x438>  // b.none
    ef04:	cbnz	x0, f16c <__hwasan_memmove@@Base+0x6e4>
    ef08:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
    ef0c:	str	x0, [x20]
    ef10:	sub	x1, x0, #0x1
    ef14:	tst	x0, x1
    ef18:	b.ne	f15c <__hwasan_memmove@@Base+0x6d4>  // b.any
    ef1c:	add	x1, x1, x19
    ef20:	neg	x0, x0
    ef24:	and	x28, x1, x0
    ef28:	mov	w2, #0x0                   	// #0
    ef2c:	mov	x0, x28
    ef30:	adrp	x25, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    ef34:	add	x1, x25, #0xc10
    ef38:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
    ef3c:	ldr	x1, [sp, #128]
    ef40:	mov	x20, x0
    ef44:	ldr	x2, [sp, #144]
    ef48:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
    ef4c:	ldp	x0, x1, [sp, #128]
    ef50:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
    ef54:	stp	x20, x28, [sp, #128]
    ef58:	ldr	x2, [sp, #144]
    ef5c:	cmp	x19, x2
    ef60:	b.ls	f174 <__hwasan_memmove@@Base+0x6ec>  // b.plast
    ef64:	cmp	x28, x19
    ef68:	b.cc	f0f8 <__hwasan_memmove@@Base+0x670>  // b.lo, b.ul, b.last
    ef6c:	add	x0, x20, x2
    ef70:	mov	w1, #0x0                   	// #0
    ef74:	sub	x2, x19, x2
    ef78:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
    ef7c:	stp	x19, xzr, [sp, #144]
    ef80:	ldr	x20, [sp, #128]
    ef84:	cbz	x19, eec4 <__hwasan_memmove@@Base+0x43c>
    ef88:	ldr	x0, [sp, #96]
    ef8c:	strb	wzr, [x20]
    ef90:	cmp	x24, x0
    ef94:	b.cs	f0bc <__hwasan_memmove@@Base+0x634>  // b.hs, b.nlast
    ef98:	add	x25, x24, #0x10
    ef9c:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    efa0:	add	x0, x0, #0x110
    efa4:	adrp	x20, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
    efa8:	mov	x21, x25
    efac:	add	x20, x20, #0xb28
    efb0:	add	x28, sp, #0x80
    efb4:	str	x0, [sp, #112]
    efb8:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    efbc:	add	x0, x0, #0x108
    efc0:	str	x0, [sp, #120]
    efc4:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    efc8:	str	x0, [sp, #104]
    efcc:	nop
    efd0:	ldp	x0, x2, [sp, #104]
    efd4:	cmp	x27, x24
    efd8:	mov	x26, x24
    efdc:	add	x1, x0, #0xcb8
    efe0:	ldr	x0, [sp, #120]
    efe4:	mov	x19, x1
    efe8:	csel	x2, x0, x2, eq  // eq = none
    efec:	mov	x0, x28
    eff0:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
    eff4:	mov	x2, x24
    eff8:	adrp	x24, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    effc:	add	x24, x24, #0x138
    f000:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    f004:	add	x1, x0, #0x130
    f008:	mov	x0, x28
    f00c:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
    f010:	cmp	x26, x22
    f014:	b.eq	f07c <__hwasan_memmove@@Base+0x5f4>  // b.none
    f018:	mov	x2, x20
    f01c:	mov	x1, x19
    f020:	mov	x0, x28
    f024:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
    f028:	mov	x1, x26
    f02c:	mov	x0, x28
    f030:	blr	x23
    f034:	add	x26, x26, #0x1
    f038:	mov	x2, x20
    f03c:	mov	x1, x19
    f040:	mov	x0, x28
    f044:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
    f048:	cmp	x26, x21
    f04c:	b.ne	f010 <__hwasan_memmove@@Base+0x588>  // b.any
    f050:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
    f054:	add	x1, x0, #0x0
    f058:	mov	x0, x28
    f05c:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
    f060:	ldr	x0, [sp, #96]
    f064:	add	x21, x21, #0x10
    f068:	mov	x24, x25
    f06c:	cmp	x0, x25
    f070:	b.ls	f0c4 <__hwasan_memmove@@Base+0x63c>  // b.plast
    f074:	add	x25, x25, #0x10
    f078:	b	efd0 <__hwasan_memmove@@Base+0x548>
    f07c:	mov	x2, x24
    f080:	mov	x1, x19
    f084:	mov	x0, x28
    f088:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
    f08c:	mov	x1, x26
    f090:	mov	x0, x28
    f094:	blr	x23
    f098:	add	x26, x26, #0x1
    f09c:	mov	x1, x19
    f0a0:	mov	x0, x28
    f0a4:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
    f0a8:	add	x2, x2, #0xe18
    f0ac:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
    f0b0:	cmp	x26, x21
    f0b4:	b.ne	f010 <__hwasan_memmove@@Base+0x588>  // b.any
    f0b8:	b	f050 <__hwasan_memmove@@Base+0x5c8>
    f0bc:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    f0c0:	str	x0, [sp, #104]
    f0c4:	ldr	x1, [sp, #128]
    f0c8:	ldr	x0, [sp, #104]
    f0cc:	add	x0, x0, #0xcb8
    f0d0:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    f0d4:	ldp	x0, x1, [sp, #128]
    f0d8:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
    f0dc:	ldp	x21, x22, [sp, #16]
    f0e0:	ldp	x23, x24, [sp, #32]
    f0e4:	ldp	x25, x26, [sp, #48]
    f0e8:	ldp	x27, x28, [sp, #64]
    f0ec:	ldr	x30, [sp, #80]
    f0f0:	ldp	x19, x20, [sp], #160
    f0f4:	ret
    f0f8:	ldr	x21, [x21, #4016]
    f0fc:	ldr	x0, [x21]
    f100:	cbz	x0, f150 <__hwasan_memmove@@Base+0x6c8>
    f104:	sub	x1, x0, #0x1
    f108:	tst	x1, x0
    f10c:	b.ne	f15c <__hwasan_memmove@@Base+0x6d4>  // b.any
    f110:	add	x1, x19, x1
    f114:	neg	x0, x0
    f118:	and	x21, x1, x0
    f11c:	mov	w2, #0x0                   	// #0
    f120:	add	x1, x25, #0xc10
    f124:	mov	x0, x21
    f128:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
    f12c:	mov	x20, x0
    f130:	ldr	x1, [sp, #128]
    f134:	ldr	x2, [sp, #144]
    f138:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
    f13c:	ldp	x0, x1, [sp, #128]
    f140:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
    f144:	stp	x20, x21, [sp, #128]
    f148:	ldr	x2, [sp, #144]
    f14c:	b	ef6c <__hwasan_memmove@@Base+0x4e4>
    f150:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
    f154:	str	x0, [x21]
    f158:	b	f104 <__hwasan_memmove@@Base+0x67c>
    f15c:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    f160:	add	x0, x0, #0xbf8
    f164:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
    f168:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
    f16c:	mov	x19, x1
    f170:	b	ef10 <__hwasan_memmove@@Base+0x488>
    f174:	stp	x19, xzr, [sp, #144]
    f178:	b	ef88 <__hwasan_memmove@@Base+0x500>
    f17c:	nop
    f180:	stp	x19, x20, [sp, #-80]!
    f184:	mov	x20, x0
    f188:	stp	x23, x24, [sp, #32]
    f18c:	adrp	x23, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
    f190:	add	x19, x23, #0xac8
    f194:	mov	x0, x19
    f198:	str	x30, [sp, #64]
    f19c:	bl	1c690 <__sanitizer_set_report_fd@@Base+0x4810>
    f1a0:	ldr	x0, [x19, #88]
    f1a4:	cbz	x0, f248 <__hwasan_memmove@@Base+0x7c0>
    f1a8:	mov	x0, x20
    f1ac:	stp	x21, x22, [sp, #16]
    f1b0:	bl	1a690 <__sanitizer_set_report_fd@@Base+0x2810>
    f1b4:	ldr	x22, [x19, #88]
    f1b8:	mov	x21, x0
    f1bc:	ldr	x19, [x22, #16]
    f1c0:	add	x24, x0, x19
    f1c4:	cmp	x19, x24
    f1c8:	b.cs	f204 <__hwasan_memmove@@Base+0x77c>  // b.hs, b.nlast
    f1cc:	ldr	x0, [x22, #8]
    f1d0:	stp	x25, x26, [sp, #48]
    f1d4:	cmp	x24, x0
    f1d8:	b.hi	f25c <__hwasan_memmove@@Base+0x7d4>  // b.pmore
    f1dc:	ldr	x25, [x22]
    f1e0:	mov	x2, x21
    f1e4:	mov	x0, x19
    f1e8:	add	x0, x25, x0
    f1ec:	mov	w1, #0x0                   	// #0
    f1f0:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
    f1f4:	add	x0, x23, #0xac8
    f1f8:	ldp	x25, x26, [sp, #48]
    f1fc:	ldr	x1, [x0, #88]
    f200:	b	f208 <__hwasan_memmove@@Base+0x780>
    f204:	mov	x1, x22
    f208:	ldr	x0, [x1]
    f20c:	str	x24, [x22, #16]
    f210:	sub	x3, x19, #0x1
    f214:	ldr	x4, [x1, #16]
    f218:	cmp	x3, x4
    f21c:	b.cs	f2c0 <__hwasan_memmove@@Base+0x838>  // b.hs, b.nlast
    f220:	mov	x2, x21
    f224:	mov	x1, x20
    f228:	add	x0, x0, x3
    f22c:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
    f230:	add	x0, x23, #0xac8
    f234:	ldp	x21, x22, [sp, #16]
    f238:	ldp	x23, x24, [sp, #32]
    f23c:	ldr	x30, [sp, #64]
    f240:	ldp	x19, x20, [sp], #80
    f244:	b	1c728 <__sanitizer_set_report_fd@@Base+0x48a8>
    f248:	mov	x0, x19
    f24c:	ldp	x23, x24, [sp, #32]
    f250:	ldr	x30, [sp, #64]
    f254:	ldp	x19, x20, [sp], #80
    f258:	b	1c728 <__sanitizer_set_report_fd@@Base+0x48a8>
    f25c:	adrp	x25, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    f260:	ldr	x25, [x25, #4016]
    f264:	ldr	x0, [x25]
    f268:	cbz	x0, f2dc <__hwasan_memmove@@Base+0x854>
    f26c:	sub	x1, x0, #0x1
    f270:	tst	x0, x1
    f274:	b.ne	f2e8 <__hwasan_memmove@@Base+0x860>  // b.any
    f278:	add	x1, x24, x1
    f27c:	neg	x0, x0
    f280:	and	x26, x1, x0
    f284:	mov	w2, #0x0                   	// #0
    f288:	mov	x0, x26
    f28c:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    f290:	add	x1, x1, #0xc10
    f294:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
    f298:	ldr	x1, [x22]
    f29c:	mov	x25, x0
    f2a0:	ldr	x2, [x22, #16]
    f2a4:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
    f2a8:	ldp	x0, x1, [x22]
    f2ac:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
    f2b0:	stp	x25, x26, [x22]
    f2b4:	ldr	x0, [x22, #16]
    f2b8:	sub	x2, x24, x0
    f2bc:	b	f1e8 <__hwasan_memmove@@Base+0x760>
    f2c0:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    f2c4:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    f2c8:	add	x2, x2, #0x118
    f2cc:	add	x0, x0, #0x6a8
    f2d0:	mov	w1, #0x1c5                 	// #453
    f2d4:	stp	x25, x26, [sp, #48]
    f2d8:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    f2dc:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
    f2e0:	str	x0, [x25]
    f2e4:	b	f26c <__hwasan_memmove@@Base+0x7e4>
    f2e8:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    f2ec:	add	x0, x0, #0xbf8
    f2f0:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
    f2f4:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
    f2f8:	cbz	x0, f3b8 <__hwasan_memmove@@Base+0x930>
    f2fc:	mov	x5, x0
    f300:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    f304:	movk	x8, #0xaaab
    f308:	ldr	x3, [x5], #16
    f30c:	add	x4, x3, #0x18
    f310:	sub	x4, x4, x5
    f314:	asr	x4, x4, #3
    f318:	mul	x4, x4, x8
    f31c:	cbz	x4, f3b8 <__hwasan_memmove@@Base+0x930>
    f320:	ldr	x7, [x0, #8]
    f324:	sub	sp, sp, #0x20
    f328:	add	x10, sp, #0x8
    f32c:	mov	x0, #0x0                   	// #0
    f330:	sub	x6, x3, x7
    f334:	asr	x6, x6, #3
    f338:	mul	x6, x6, x8
    f33c:	nop
    f340:	add	x0, x0, #0x1
    f344:	cmp	x6, x0
    f348:	sub	x3, x0, x4
    f34c:	csel	x3, x3, x0, lt  // lt = tstop
    f350:	add	x3, x3, x3, lsl #1
    f354:	add	x5, x7, x3, lsl #3
    f358:	ldr	x3, [x7, x3, lsl #3]
    f35c:	ldp	x8, x9, [x5]
    f360:	stp	x8, x9, [x10]
    f364:	cmp	x3, x1
    f368:	ldr	x8, [x5, #16]
    f36c:	str	x8, [x10, #16]
    f370:	b.hi	f384 <__hwasan_memmove@@Base+0x8fc>  // b.pmore
    f374:	ldr	w5, [x5, #16]
    f378:	add	x8, x3, w5, uxtw
    f37c:	cmp	x8, x1
    f380:	b.hi	f398 <__hwasan_memmove@@Base+0x910>  // b.pmore
    f384:	cmp	x4, x0
    f388:	b.ne	f340 <__hwasan_memmove@@Base+0x8b8>  // b.any
    f38c:	mov	x0, #0x0                   	// #0
    f390:	add	sp, sp, #0x20
    f394:	ret
    f398:	str	x3, [sp, #8]
    f39c:	str	w5, [sp, #24]
    f3a0:	ldp	x4, x5, [x10]
    f3a4:	stp	x4, x5, [x2]
    f3a8:	ldr	x1, [x10, #16]
    f3ac:	str	x1, [x2, #16]
    f3b0:	add	sp, sp, #0x20
    f3b4:	ret
    f3b8:	mov	x0, #0x0                   	// #0
    f3bc:	ret
    f3c0:	sub	sp, sp, #0x150
    f3c4:	stp	x19, x20, [sp, #16]
    f3c8:	and	x20, x0, #0xffffffffffffff
    f3cc:	stp	x21, x22, [sp, #32]
    f3d0:	add	x21, sp, #0xd8
    f3d4:	stp	x23, x24, [sp, #48]
    f3d8:	mov	x23, x0
    f3dc:	stp	x25, x26, [sp, #64]
    f3e0:	stp	x27, x28, [sp, #80]
    f3e4:	str	x30, [sp, #96]
    f3e8:	str	x2, [sp, #168]
    f3ec:	bl	2c950 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4068>
    f3f0:	and	w28, w0, #0xff
    f3f4:	mov	x0, x20
    f3f8:	bl	8ae0 <__sanitizer_print_stack_trace@@Base+0x808>
    f3fc:	mov	x2, x0
    f400:	mov	x3, x1
    f404:	mov	x0, x21
    f408:	stp	x2, x3, [sp, #216]
    f40c:	bl	8660 <__sanitizer_print_stack_trace@@Base+0x388>
    f410:	cbnz	x0, f994 <__hwasan_memmove@@Base+0xf0c>
    f414:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    f418:	lsr	x19, x20, #4
    f41c:	lsr	x21, x23, #56
    f420:	ldr	x0, [x0, #3848]
    f424:	lsl	x4, x19, #5
    f428:	lsl	x22, x19, #4
    f42c:	add	x6, x4, #0xf
    f430:	ldr	x2, [x0]
    f434:	add	x19, x2, x19
    f438:	sub	x5, x19, #0x3e8
    f43c:	lsl	x3, x19, #1
    f440:	ldrb	w0, [x19]
    f444:	sub	x1, x3, x19
    f448:	cmp	w21, w0
    f44c:	b.eq	f4b4 <__hwasan_memmove@@Base+0xa2c>  // b.none
    f450:	sub	w0, w0, #0x1
    f454:	and	w0, w0, #0xff
    f458:	cmp	w0, #0xe
    f45c:	b.hi	f46c <__hwasan_memmove@@Base+0x9e4>  // b.pmore
    f460:	ldrb	w0, [x22, #15]
    f464:	cmp	w0, w21
    f468:	b.eq	ff34 <__hwasan_memmove@@Base+0x14ac>  // b.none
    f46c:	ldrb	w0, [x1]
    f470:	sub	x19, x19, #0x1
    f474:	cmp	w21, w0
    f478:	b.eq	f980 <__hwasan_memmove@@Base+0xef8>  // b.none
    f47c:	sub	w0, w0, #0x1
    f480:	and	w0, w0, #0xff
    f484:	cmp	w0, #0xe
    f488:	b.hi	f4a0 <__hwasan_memmove@@Base+0xa18>  // b.pmore
    f48c:	sub	x0, x6, x22
    f490:	sub	x7, x4, x22
    f494:	ldrb	w0, [x0]
    f498:	cmp	w0, w21
    f49c:	b.eq	ff3c <__hwasan_memmove@@Base+0x14b4>  // b.none
    f4a0:	sub	x22, x22, #0x10
    f4a4:	cmp	x19, x5
    f4a8:	b.ne	f440 <__hwasan_memmove@@Base+0x9b8>  // b.any
    f4ac:	str	wzr, [sp, #124]
    f4b0:	b	f5d0 <__hwasan_memmove@@Base+0xb48>
    f4b4:	sub	x22, x19, x2
    f4b8:	mov	x24, x19
    f4bc:	lsl	x22, x22, #4
    f4c0:	mov	x0, x22
    f4c4:	bl	8ae0 <__sanitizer_print_stack_trace@@Base+0x808>
    f4c8:	mov	x2, x0
    f4cc:	mov	x3, x1
    f4d0:	add	x25, sp, #0xe8
    f4d4:	stp	x2, x3, [sp, #232]
    f4d8:	mov	x0, x25
    f4dc:	bl	8638 <__sanitizer_print_stack_trace@@Base+0x360>
    f4e0:	tst	w0, #0xff
    f4e4:	b.eq	fa60 <__hwasan_memmove@@Base+0xfd8>  // b.none
    f4e8:	cmp	w28, #0x0
    f4ec:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
    f4f0:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    f4f4:	add	x0, x0, #0x3e8
    f4f8:	add	x1, x1, #0x140
    f4fc:	adrp	x22, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    f500:	csel	x1, x1, x0, ne  // ne = any
    f504:	add	x0, x22, #0xcb8
    f508:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    f50c:	mov	x0, x25
    f510:	cmp	x19, x24
    f514:	b.eq	fecc <__hwasan_memmove@@Base+0x1444>  // b.none
    f518:	adrp	x27, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    f51c:	bl	8660 <__sanitizer_print_stack_trace@@Base+0x388>
    f520:	add	x27, x27, #0x198
    f524:	sub	x26, x0, x20
    f528:	mov	x0, x25
    f52c:	bl	86e0 <__sanitizer_print_stack_trace@@Base+0x408>
    f530:	mov	x19, x0
    f534:	mov	x0, x25
    f538:	bl	8660 <__sanitizer_print_stack_trace@@Base+0x388>
    f53c:	mov	x24, x0
    f540:	mov	x0, x25
    f544:	bl	8698 <__sanitizer_print_stack_trace@@Base+0x3c0>
    f548:	mov	x5, x24
    f54c:	mov	x6, x0
    f550:	mov	x4, x19
    f554:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    f558:	mov	x3, x27
    f55c:	mov	x2, x26
    f560:	mov	x1, x20
    f564:	add	x0, x0, #0x1f0
    f568:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    f56c:	cbnz	w28, fa38 <__hwasan_memmove@@Base+0xfb0>
    f570:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
    f574:	add	x19, x1, #0x3e8
    f578:	mov	x1, x19
    f57c:	add	x0, x22, #0xcb8
    f580:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    f584:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    f588:	add	x0, x0, #0x568
    f58c:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    f590:	mov	x1, x19
    f594:	add	x0, x22, #0xcb8
    f598:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    f59c:	mov	x0, x25
    f5a0:	bl	86f0 <__sanitizer_print_stack_trace@@Base+0x418>
    f5a4:	cbz	w0, fddc <__hwasan_memmove@@Base+0x1354>
    f5a8:	bl	27130 <__sanitizer_cov_dump@@Base+0x510>
    f5ac:	mov	x2, x0
    f5b0:	fmov	d0, x1
    f5b4:	cbz	x0, fe44 <__hwasan_memmove@@Base+0x13bc>
    f5b8:	mov	w1, #0x1                   	// #1
    f5bc:	add	x0, sp, #0x110
    f5c0:	str	w1, [sp, #124]
    f5c4:	str	x2, [sp, #272]
    f5c8:	str	d0, [sp, #280]
    f5cc:	bl	27f58 <__sanitizer_cov_dump@@Base+0x1338>
    f5d0:	bl	11940 <__hwasan_tag_mismatch_v2@@Base+0x688>
    f5d4:	str	x0, [sp, #128]
    f5d8:	add	x0, x0, #0x30
    f5dc:	mov	w2, #0x1                   	// #1
    f5e0:	ldxrb	w1, [x0]
    f5e4:	stxrb	w3, w2, [x0]
    f5e8:	cbnz	w3, f5e0 <__hwasan_memmove@@Base+0xb58>
    f5ec:	dmb	ish
    f5f0:	tst	w1, #0xff
    f5f4:	b.eq	f5fc <__hwasan_memmove@@Base+0xb74>  // b.none
    f5f8:	bl	85d8 <__sanitizer_print_stack_trace@@Base+0x300>
    f5fc:	ldr	x0, [sp, #128]
    f600:	ldr	x19, [x0, #40]
    f604:	cbz	x19, fcb8 <__hwasan_memmove@@Base+0x1230>
    f608:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    f60c:	add	x2, x0, #0x180
    f610:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
    f614:	cmp	w28, #0x0
    f618:	add	x1, x0, #0x3e8
    f61c:	add	x25, sp, #0x110
    f620:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    f624:	add	x0, x0, #0x430
    f628:	csel	x1, x2, x1, ne  // ne = any
    f62c:	stp	w28, w21, [sp, #136]
    f630:	stp	x1, x0, [sp, #152]
    f634:	add	x0, sp, #0xf8
    f638:	str	x0, [sp, #112]
    f63c:	ldr	x2, [sp, #112]
    f640:	mov	x1, x23
    f644:	ldr	x0, [x19, #2648]
    f648:	bl	f2f8 <__hwasan_memmove@@Base+0x870>
    f64c:	mov	x22, x0
    f650:	cbz	x0, f794 <__hwasan_memmove@@Base+0xd0c>
    f654:	ldr	w0, [sp, #136]
    f658:	cbz	w0, fd64 <__hwasan_memmove@@Base+0x12dc>
    f65c:	adrp	x21, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    f660:	add	x26, x21, #0xcb8
    f664:	mov	x0, x26
    f668:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    f66c:	add	x1, x1, #0x140
    f670:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    f674:	ldr	x4, [sp, #248]
    f678:	mov	x1, x20
    f67c:	ldr	w3, [sp, #264]
    f680:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    f684:	and	x4, x4, #0xffffffffffffff
    f688:	add	x0, x0, #0x508
    f68c:	sub	x2, x20, x4
    f690:	adrp	x24, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    f694:	add	x5, x4, w3, uxtw
    f698:	add	x24, x24, #0x1a0
    f69c:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    f6a0:	add	x21, x21, #0xcb8
    f6a4:	mov	x0, x26
    f6a8:	mov	x1, x24
    f6ac:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    f6b0:	ldr	x1, [x19, #2672]
    f6b4:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    f6b8:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    f6bc:	add	x26, x2, #0x180
    f6c0:	add	x0, x0, #0x548
    f6c4:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    f6c8:	mov	x0, x21
    f6cc:	mov	x1, x26
    f6d0:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    f6d4:	ldr	w0, [sp, #260]
    f6d8:	cbz	w0, fddc <__hwasan_memmove@@Base+0x1354>
    f6dc:	bl	27130 <__sanitizer_cov_dump@@Base+0x510>
    f6e0:	mov	x2, x0
    f6e4:	fmov	d0, x1
    f6e8:	cbz	x0, fe44 <__hwasan_memmove@@Base+0x13bc>
    f6ec:	mov	x0, x25
    f6f0:	str	x2, [sp, #272]
    f6f4:	str	d0, [sp, #280]
    f6f8:	bl	27f58 <__sanitizer_cov_dump@@Base+0x1338>
    f6fc:	mov	x1, x24
    f700:	mov	x0, x21
    f704:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    f708:	mov	x1, x19
    f70c:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    f710:	add	x0, x0, #0x330
    f714:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    f718:	mov	x0, x21
    f71c:	mov	x1, x26
    f720:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    f724:	ldr	w0, [sp, #256]
    f728:	cbz	w0, fddc <__hwasan_memmove@@Base+0x1354>
    f72c:	bl	27130 <__sanitizer_cov_dump@@Base+0x510>
    f730:	mov	x2, x0
    f734:	fmov	d0, x1
    f738:	cbz	x0, fe44 <__hwasan_memmove@@Base+0x13bc>
    f73c:	mov	x0, x25
    f740:	str	x2, [sp, #272]
    f744:	str	d0, [sp, #280]
    f748:	bl	27f58 <__sanitizer_cov_dump@@Base+0x1338>
    f74c:	bl	71d8 <__sanitizer_print_memory_profile@plt+0xb78>
    f750:	mov	x2, x0
    f754:	mov	x1, x22
    f758:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    f75c:	add	x0, x0, #0x350
    f760:	ldr	w2, [x2, #28]
    f764:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    f768:	ldrb	w0, [x19, #2684]
    f76c:	cbnz	w0, f788 <__hwasan_memmove@@Base+0xd00>
    f770:	mov	w0, #0x1                   	// #1
    f774:	strb	w0, [x19, #2684]
    f778:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    f77c:	mov	x0, x19
    f780:	add	x1, x1, #0x380
    f784:	bl	11860 <__hwasan_tag_mismatch_v2@@Base+0x5a8>
    f788:	ldr	w0, [sp, #124]
    f78c:	add	w0, w0, #0x1
    f790:	str	w0, [sp, #124]
    f794:	ldr	x0, [x19, #16]
    f798:	cmp	x20, x0
    f79c:	b.cc	fcb0 <__hwasan_memmove@@Base+0x1228>  // b.lo, b.ul, b.last
    f7a0:	ldr	x0, [x19, #8]
    f7a4:	cmp	x20, x0
    f7a8:	b.cs	fcb0 <__hwasan_memmove@@Base+0x1228>  // b.hs, b.nlast
    f7ac:	ldr	w0, [sp, #136]
    f7b0:	cbz	w0, fdfc <__hwasan_memmove@@Base+0x1374>
    f7b4:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    f7b8:	adrp	x21, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    f7bc:	add	x1, x1, #0x140
    f7c0:	add	x0, x21, #0xcb8
    f7c4:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    f7c8:	ldr	x2, [x19, #2672]
    f7cc:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    f7d0:	mov	x1, x20
    f7d4:	add	x0, x0, #0x4d8
    f7d8:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    f7dc:	ldr	x1, [sp, #152]
    f7e0:	add	x0, x21, #0xcb8
    f7e4:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    f7e8:	ldrb	w0, [x19, #2684]
    f7ec:	cbnz	w0, f808 <__hwasan_memmove@@Base+0xd80>
    f7f0:	mov	w0, #0x1                   	// #1
    f7f4:	strb	w0, [x19, #2684]
    f7f8:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    f7fc:	mov	x0, x19
    f800:	add	x1, x1, #0x380
    f804:	bl	11860 <__hwasan_tag_mismatch_v2@@Base+0x5a8>
    f808:	bl	e3f8 <__interceptor_vfork@@Base+0xe18>
    f80c:	cmp	x19, x0
    f810:	b.eq	faec <__hwasan_memmove@@Base+0x1064>  // b.none
    f814:	ldr	x26, [x19, #2656]
    f818:	bl	71d8 <__sanitizer_print_memory_profile@plt+0xb78>
    f81c:	ldr	x1, [x26]
    f820:	ldrsw	x0, [x0, #36]
    f824:	lsr	x4, x1, #56
    f828:	lsl	x27, x4, #9
    f82c:	cmp	x27, x0
    f830:	csel	x27, x27, x0, ls  // ls = plast
    f834:	cbz	x27, fe74 <__hwasan_memmove@@Base+0x13ec>
    f838:	mov	x28, #0x0                   	// #0
    f83c:	mov	x24, x28
    f840:	str	wzr, [sp, #144]
    f844:	stp	x19, x23, [sp, #176]
    f848:	str	x21, [sp, #192]
    f84c:	b	f86c <__hwasan_memmove@@Base+0xde4>
    f850:	ldp	x0, x1, [sp, #296]
    f854:	add	x24, x24, #0x1
    f858:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
    f85c:	cmp	x27, x24
    f860:	b.eq	fe64 <__hwasan_memmove@@Base+0x13dc>  // b.none
    f864:	ldr	x1, [x26]
    f868:	lsr	x4, x1, #56
    f86c:	cmp	x24, x4, lsl #9
    f870:	lsl	x0, x4, #12
    f874:	lsl	x4, x4, #9
    f878:	b.cs	fe28 <__hwasan_memmove@@Base+0x13a0>  // b.hs, b.nlast
    f87c:	and	x3, x1, #0xffffffffffffff
    f880:	neg	x1, x0
    f884:	bic	x2, x3, x1
    f888:	mvn	x0, x24
    f88c:	and	x1, x1, x3
    f890:	adds	x0, x0, x2, lsr #3
    f894:	add	x4, x0, x4
    f898:	csel	x0, x4, x0, mi  // mi = first
    f89c:	add	x19, x1, x0, lsl #3
    f8a0:	ldr	x22, [x1, x0, lsl #3]
    f8a4:	cbz	x22, fe64 <__hwasan_memmove@@Base+0x13dc>
    f8a8:	str	xzr, [sp, #296]
    f8ac:	stp	xzr, xzr, [sp, #304]
    f8b0:	bl	299b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10c8>
    f8b4:	mov	x2, x25
    f8b8:	and	x1, x22, #0xffffffffffff
    f8bc:	bl	2a140 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1858>
    f8c0:	tst	w0, #0xff
    f8c4:	b.eq	f850 <__hwasan_memmove@@Base+0xdc8>  // b.none
    f8c8:	ldr	x0, [sp, #312]
    f8cc:	ldr	x5, [sp, #296]
    f8d0:	lsl	x7, x0, #3
    f8d4:	sub	x7, x7, x0
    f8d8:	add	x23, x5, x7, lsl #3
    f8dc:	cmp	x5, x23
    f8e0:	b.eq	f974 <__hwasan_memmove@@Base+0xeec>  // b.none
    f8e4:	lsr	x22, x22, #48
    f8e8:	adrp	x28, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    f8ec:	add	x28, x28, #0x408
    f8f0:	mov	x21, x5
    f8f4:	ubfx	w19, w19, #3, #8
    f8f8:	sub	x22, x20, x22, lsl #4
    f8fc:	str	x28, [sp, #200]
    f900:	mov	x28, x23
    f904:	nop
    f908:	ldrb	w0, [x21, #28]
    f90c:	cbz	w0, f968 <__hwasan_memmove@@Base+0xee0>
    f910:	ldrb	w0, [x21, #29]
    f914:	cbz	w0, f968 <__hwasan_memmove@@Base+0xee0>
    f918:	ldrb	w23, [x21, #30]
    f91c:	cbz	w23, f968 <__hwasan_memmove@@Base+0xee0>
    f920:	ldrb	w0, [x21, #48]
    f924:	ldr	w1, [sp, #140]
    f928:	eor	w0, w0, w19
    f92c:	cmp	w1, w0
    f930:	b.ne	f968 <__hwasan_memmove@@Base+0xee0>  // b.any
    f934:	ldp	x0, x1, [x21, #32]
    f938:	sub	x0, x22, x0
    f93c:	and	x0, x0, #0xfffff
    f940:	cmp	x0, x1
    f944:	b.cs	f968 <__hwasan_memmove@@Base+0xee0>  // b.hs, b.nlast
    f948:	ldr	w0, [sp, #144]
    f94c:	cbz	w0, fec0 <__hwasan_memmove@@Base+0x1438>
    f950:	ldp	x2, x1, [x21]
    f954:	str	w23, [sp, #144]
    f958:	ldr	w4, [x21, #24]
    f95c:	ldr	x3, [x21, #16]
    f960:	ldr	x0, [sp, #160]
    f964:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    f968:	add	x21, x21, #0x38
    f96c:	cmp	x28, x21
    f970:	b.ne	f908 <__hwasan_memmove@@Base+0xe80>  // b.any
    f974:	mov	x0, x25
    f978:	bl	292e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x9f8>
    f97c:	b	f850 <__hwasan_memmove@@Base+0xdc8>
    f980:	sub	x22, x1, x2
    f984:	mov	x24, x19
    f988:	mov	x19, x1
    f98c:	lsl	x22, x22, #4
    f990:	b	f4c0 <__hwasan_memmove@@Base+0xa38>
    f994:	mov	x19, x0
    f998:	mov	x0, x21
    f99c:	bl	8700 <__sanitizer_print_stack_trace@@Base+0x428>
    f9a0:	adrp	x22, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    f9a4:	cmp	w28, #0x0
    f9a8:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
    f9ac:	add	x22, x22, #0x140
    f9b0:	add	x25, x1, #0x3e8
    f9b4:	mov	x24, x0
    f9b8:	csel	x22, x22, x25, ne  // ne = any
    f9bc:	mov	x0, x21
    f9c0:	bl	87e0 <__sanitizer_print_stack_trace@@Base+0x508>
    f9c4:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    f9c8:	tst	w0, #0xff
    f9cc:	add	x1, x1, #0x158
    f9d0:	adrp	x4, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    f9d4:	add	x4, x4, #0x150
    f9d8:	mov	x0, x21
    f9dc:	csel	x21, x4, x1, ne  // ne = any
    f9e0:	bl	8638 <__sanitizer_print_stack_trace@@Base+0x360>
    f9e4:	tst	w0, #0xff
    f9e8:	adrp	x5, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    f9ec:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    f9f0:	add	x5, x5, #0x160
    f9f4:	add	x0, x0, #0x170
    f9f8:	csel	x5, x5, x0, ne  // ne = any
    f9fc:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    fa00:	cmp	w28, #0x0
    fa04:	add	x1, x1, #0x180
    fa08:	csel	x1, x1, x25, ne  // ne = any
    fa0c:	str	x1, [sp]
    fa10:	add	x3, x19, x24
    fa14:	mov	x4, x21
    fa18:	mov	x6, x24
    fa1c:	sub	x7, x20, x19
    fa20:	mov	x2, x19
    fa24:	mov	x1, x22
    fa28:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    fa2c:	add	x0, x0, #0x1b0
    fa30:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    fa34:	b	f414 <__hwasan_memmove@@Base+0x98c>
    fa38:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    fa3c:	add	x1, x1, #0x1a0
    fa40:	add	x0, x22, #0xcb8
    fa44:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    fa48:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    fa4c:	add	x0, x0, #0x568
    fa50:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    fa54:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    fa58:	add	x1, x1, #0x180
    fa5c:	b	f594 <__hwasan_memmove@@Base+0xb0c>
    fa60:	bl	299b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10c8>
    fa64:	mov	x25, x0
    fa68:	add	x3, sp, #0xf8
    fa6c:	add	x2, sp, #0xd0
    fa70:	mov	x1, x22
    fa74:	bl	2a0a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x17b8>
    fa78:	str	wzr, [sp, #124]
    fa7c:	tst	w0, #0xff
    fa80:	b.eq	f5d0 <__hwasan_memmove@@Base+0xb48>  // b.none
    fa84:	add	x26, sp, #0x110
    fa88:	mov	x0, x26
    fa8c:	bl	29290 <__sanitizer_get_module_and_offset_for_pc@@Base+0x9a8>
    fa90:	mov	x2, x26
    fa94:	mov	x1, x22
    fa98:	mov	x0, x25
    fa9c:	bl	2ac50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2368>
    faa0:	tst	w0, #0xff
    faa4:	b.eq	fef0 <__hwasan_memmove@@Base+0x1468>  // b.none
    faa8:	ldr	x6, [sp, #320]
    faac:	cbz	x6, fef0 <__hwasan_memmove@@Base+0x1468>
    fab0:	ldr	x4, [sp, #328]
    fab4:	cmp	x19, x24
    fab8:	add	x7, x6, x4
    fabc:	b.eq	ffcc <__hwasan_memmove@@Base+0x1544>  // b.none
    fac0:	adrp	x3, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    fac4:	sub	x2, x6, x20
    fac8:	add	x3, x3, #0x198
    facc:	ldr	x5, [sp, #312]
    fad0:	mov	x1, x20
    fad4:	ldr	x0, [sp, #208]
    fad8:	str	x0, [sp]
    fadc:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    fae0:	add	x0, x0, #0x2a0
    fae4:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    fae8:	b	ff20 <__hwasan_memmove@@Base+0x1498>
    faec:	ldr	x0, [sp, #168]
    faf0:	mov	x26, x0
    faf4:	cbnz	x0, f818 <__hwasan_memmove@@Base+0xd90>
    faf8:	b	f814 <__hwasan_memmove@@Base+0xd8c>
    fafc:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
    fb00:	str	xzr, [sp, #272]
    fb04:	add	x1, sp, #0x200
    fb08:	str	x0, [x22]
    fb0c:	cmp	xzr, x0, lsl #1
    fb10:	lsl	x28, x0, #1
    fb14:	stp	xzr, xzr, [x1, #-232]
    fb18:	b.eq	fe9c <__hwasan_memmove@@Base+0x1414>  // b.none
    fb1c:	cbnz	x0, fb28 <__hwasan_memmove@@Base+0x10a0>
    fb20:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
    fb24:	str	x0, [x22]
    fb28:	sub	x1, x0, #0x1
    fb2c:	ands	x24, x0, x1
    fb30:	b.ne	ffbc <__hwasan_memmove@@Base+0x1534>  // b.any
    fb34:	add	x1, x28, x1
    fb38:	neg	x0, x0
    fb3c:	and	x4, x1, x0
    fb40:	adrp	x6, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    fb44:	mov	x0, x4
    fb48:	add	x1, x6, #0xc10
    fb4c:	mov	w2, #0x0                   	// #0
    fb50:	str	x4, [sp, #144]
    fb54:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
    fb58:	mov	x22, x0
    fb5c:	ldr	x1, [sp, #272]
    fb60:	ldr	x2, [sp, #288]
    fb64:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
    fb68:	ldp	x0, x1, [sp, #272]
    fb6c:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
    fb70:	ldr	x4, [sp, #144]
    fb74:	stp	x22, x4, [sp, #272]
    fb78:	ldr	x2, [sp, #288]
    fb7c:	cmp	x2, x28
    fb80:	b.cs	ffdc <__hwasan_memmove@@Base+0x1554>  // b.hs, b.nlast
    fb84:	cmp	x28, x4
    fb88:	adrp	x6, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    fb8c:	adrp	x5, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    fb90:	b.hi	ff4c <__hwasan_memmove@@Base+0x14c4>  // b.pmore
    fb94:	add	x0, x22, x2
    fb98:	mov	w1, #0x0                   	// #0
    fb9c:	sub	x2, x28, x2
    fba0:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
    fba4:	ldr	x22, [sp, #272]
    fba8:	stp	x28, xzr, [sp, #288]
    fbac:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    fbb0:	strb	wzr, [x22]
    fbb4:	add	x0, x0, #0x448
    fbb8:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    fbbc:	cbz	x27, fc9c <__hwasan_memmove@@Base+0x1214>
    fbc0:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    fbc4:	adrp	x22, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    fbc8:	add	x22, x22, #0x468
    fbcc:	str	x19, [sp, #144]
    fbd0:	ldr	x28, [x0, #4056]
    fbd4:	ldr	x1, [x26]
    fbd8:	lsr	x0, x1, #56
    fbdc:	cmp	x24, x0, lsl #9
    fbe0:	lsl	x3, x0, #12
    fbe4:	lsl	x4, x0, #9
    fbe8:	b.cs	ff2c <__hwasan_memmove@@Base+0x14a4>  // b.hs, b.nlast
    fbec:	and	x2, x1, #0xffffffffffffff
    fbf0:	neg	x3, x3
    fbf4:	bic	x1, x2, x3
    fbf8:	mvn	x0, x24
    fbfc:	and	x3, x3, x2
    fc00:	adds	x0, x0, x1, lsr #3
    fc04:	add	x4, x0, x4
    fc08:	csel	x0, x4, x0, mi  // mi = first
    fc0c:	add	x2, x3, x0, lsl #3
    fc10:	ldr	x19, [x3, x0, lsl #3]
    fc14:	cbz	x19, fc98 <__hwasan_memmove@@Base+0x1210>
    fc18:	mov	x3, x19
    fc1c:	mov	x1, x22
    fc20:	mov	x0, x25
    fc24:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
    fc28:	bl	299b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10c8>
    fc2c:	and	x1, x19, #0xffffffffffff
    fc30:	bl	2ab10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2228>
    fc34:	mov	x19, x0
    fc38:	cbz	x0, fc6c <__hwasan_memmove@@Base+0x11e4>
    fc3c:	ldrb	w4, [x28, #189]
    fc40:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
    fc44:	ldr	x5, [x28, #24]
    fc48:	add	x6, x0, #0x3e8
    fc4c:	add	x3, x19, #0x8
    fc50:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    fc54:	add	x1, x1, #0x490
    fc58:	mov	w2, #0x0                   	// #0
    fc5c:	mov	x0, x25
    fc60:	bl	28d10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x428>
    fc64:	mov	x0, x19
    fc68:	bl	29220 <__sanitizer_get_module_and_offset_for_pc@@Base+0x938>
    fc6c:	ldr	x1, [sp, #272]
    fc70:	add	x0, x21, #0xcb8
    fc74:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    fc78:	ldr	x0, [sp, #288]
    fc7c:	ldr	x1, [sp, #272]
    fc80:	cbz	x0, fea0 <__hwasan_memmove@@Base+0x1418>
    fc84:	strb	wzr, [x1]
    fc88:	add	x24, x24, #0x1
    fc8c:	str	xzr, [sp, #296]
    fc90:	cmp	x27, x24
    fc94:	b.ne	fbd4 <__hwasan_memmove@@Base+0x114c>  // b.any
    fc98:	ldr	x19, [sp, #144]
    fc9c:	ldp	x0, x1, [sp, #272]
    fca0:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
    fca4:	ldr	w0, [sp, #124]
    fca8:	add	w0, w0, #0x1
    fcac:	str	w0, [sp, #124]
    fcb0:	ldr	x19, [x19, #2664]
    fcb4:	cbnz	x19, f63c <__hwasan_memmove@@Base+0xbb4>
    fcb8:	dmb	ish
    fcbc:	ldr	x0, [sp, #128]
    fcc0:	strb	wzr, [x0, #48]
    fcc4:	bl	11940 <__hwasan_tag_mismatch_v2@@Base+0x688>
    fcc8:	mov	x21, x0
    fccc:	add	x0, x0, #0x30
    fcd0:	mov	w2, #0x1                   	// #1
    fcd4:	ldxrb	w1, [x0]
    fcd8:	stxrb	w3, w2, [x0]
    fcdc:	cbnz	w3, fcd4 <__hwasan_memmove@@Base+0x124c>
    fce0:	dmb	ish
    fce4:	tst	w1, #0xff
    fce8:	b.eq	fcf0 <__hwasan_memmove@@Base+0x1268>  // b.none
    fcec:	bl	85d8 <__sanitizer_print_stack_trace@@Base+0x300>
    fcf0:	ldr	x19, [x21, #40]
    fcf4:	adrp	x20, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    fcf8:	mov	w22, #0x1                   	// #1
    fcfc:	add	x20, x20, #0x380
    fd00:	cbz	x19, fd28 <__hwasan_memmove@@Base+0x12a0>
    fd04:	nop
    fd08:	ldrb	w0, [x19, #2684]
    fd0c:	cbnz	w0, fd58 <__hwasan_memmove@@Base+0x12d0>
    fd10:	strb	w22, [x19, #2684]
    fd14:	mov	x0, x19
    fd18:	mov	x1, x20
    fd1c:	bl	11860 <__hwasan_tag_mismatch_v2@@Base+0x5a8>
    fd20:	ldr	x19, [x19, #2664]
    fd24:	cbnz	x19, fd08 <__hwasan_memmove@@Base+0x1280>
    fd28:	dmb	ish
    fd2c:	strb	wzr, [x21, #48]
    fd30:	ldr	w0, [sp, #124]
    fd34:	cbz	w0, fee0 <__hwasan_memmove@@Base+0x1458>
    fd38:	ldp	x19, x20, [sp, #16]
    fd3c:	ldp	x21, x22, [sp, #32]
    fd40:	ldp	x23, x24, [sp, #48]
    fd44:	ldp	x25, x26, [sp, #64]
    fd48:	ldp	x27, x28, [sp, #80]
    fd4c:	ldr	x30, [sp, #96]
    fd50:	add	sp, sp, #0x150
    fd54:	ret
    fd58:	ldr	x19, [x19, #2664]
    fd5c:	cbnz	x19, fd08 <__hwasan_memmove@@Base+0x1280>
    fd60:	b	fd28 <__hwasan_memmove@@Base+0x12a0>
    fd64:	adrp	x21, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    fd68:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
    fd6c:	add	x26, x21, #0xcb8
    fd70:	add	x24, x0, #0x3e8
    fd74:	mov	x1, x24
    fd78:	mov	x0, x26
    fd7c:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    fd80:	add	x21, x21, #0xcb8
    fd84:	ldr	x4, [sp, #248]
    fd88:	mov	x1, x20
    fd8c:	ldr	w3, [sp, #264]
    fd90:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    fd94:	and	x4, x4, #0xffffffffffffff
    fd98:	add	x0, x0, #0x508
    fd9c:	sub	x2, x20, x4
    fda0:	add	x5, x4, w3, uxtw
    fda4:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    fda8:	mov	x0, x26
    fdac:	mov	x1, x24
    fdb0:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    fdb4:	mov	x26, x24
    fdb8:	ldr	x1, [x19, #2672]
    fdbc:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    fdc0:	add	x0, x0, #0x548
    fdc4:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    fdc8:	mov	x0, x21
    fdcc:	mov	x1, x26
    fdd0:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    fdd4:	ldr	w0, [sp, #260]
    fdd8:	cbnz	w0, f6dc <__hwasan_memmove@@Base+0xc54>
    fddc:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    fde0:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    fde4:	add	x2, x2, #0x230
    fde8:	add	x0, x0, #0x240
    fdec:	mov	x4, #0x0                   	// #0
    fdf0:	mov	x3, #0x0                   	// #0
    fdf4:	mov	w1, #0x53                  	// #83
    fdf8:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    fdfc:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
    fe00:	adrp	x21, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    fe04:	add	x1, x0, #0x3e8
    fe08:	add	x0, x21, #0xcb8
    fe0c:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    fe10:	ldr	x2, [x19, #2672]
    fe14:	mov	x1, x20
    fe18:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    fe1c:	add	x0, x0, #0x4d8
    fe20:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    fe24:	b	f7dc <__hwasan_memmove@@Base+0xd54>
    fe28:	mov	x3, x24
    fe2c:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    fe30:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    fe34:	add	x2, x2, #0x390
    fe38:	add	x0, x0, #0x3a8
    fe3c:	mov	w1, #0x8f                  	// #143
    fe40:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    fe44:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    fe48:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    fe4c:	add	x2, x2, #0x288
    fe50:	add	x0, x0, #0x240
    fe54:	mov	x4, #0x0                   	// #0
    fe58:	mov	x3, #0x0                   	// #0
    fe5c:	mov	w1, #0x55                  	// #85
    fe60:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    fe64:	ldr	w0, [sp, #144]
    fe68:	ldp	x19, x23, [sp, #176]
    fe6c:	ldr	x21, [sp, #192]
    fe70:	cbnz	w0, fca4 <__hwasan_memmove@@Base+0x121c>
    fe74:	adrp	x5, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
    fe78:	ldr	x22, [x5, #4016]
    fe7c:	ldr	x0, [x22]
    fe80:	cbz	x0, fafc <__hwasan_memmove@@Base+0x1074>
    fe84:	add	x1, sp, #0x200
    fe88:	str	xzr, [sp, #272]
    fe8c:	cmp	xzr, x0, lsl #1
    fe90:	lsl	x28, x0, #1
    fe94:	stp	xzr, xzr, [x1, #-232]
    fe98:	b.ne	fb28 <__hwasan_memmove@@Base+0x10a0>  // b.any
    fe9c:	stp	xzr, xzr, [sp, #288]
    fea0:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    fea4:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
    fea8:	add	x2, x2, #0x118
    feac:	add	x0, x0, #0x6a8
    feb0:	mov	x4, #0x0                   	// #0
    feb4:	mov	x3, #0x0                   	// #0
    feb8:	mov	w1, #0x1c5                 	// #453
    febc:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
    fec0:	ldr	x0, [sp, #200]
    fec4:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    fec8:	b	f950 <__hwasan_memmove@@Base+0xec8>
    fecc:	adrp	x27, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    fed0:	bl	8698 <__sanitizer_print_stack_trace@@Base+0x3c0>
    fed4:	add	x27, x27, #0x190
    fed8:	sub	x26, x20, x0
    fedc:	b	f528 <__hwasan_memmove@@Base+0xaa0>
    fee0:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    fee4:	add	x0, x0, #0x498
    fee8:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    feec:	b	fd38 <__hwasan_memmove@@Base+0x12b0>
    fef0:	ldr	x3, [sp, #208]
    fef4:	cmp	x19, x24
    fef8:	ldr	x4, [sp, #248]
    fefc:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    ff00:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    ff04:	add	x1, x1, #0x198
    ff08:	add	x2, x2, #0x190
    ff0c:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    ff10:	csel	x2, x2, x1, eq  // eq = none
    ff14:	add	x0, x0, #0x2f0
    ff18:	mov	x1, x20
    ff1c:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
    ff20:	mov	w0, #0x1                   	// #1
    ff24:	str	w0, [sp, #124]
    ff28:	b	f5d0 <__hwasan_memmove@@Base+0xb48>
    ff2c:	mov	x3, x24
    ff30:	b	fe2c <__hwasan_memmove@@Base+0x13a4>
    ff34:	mov	x24, x19
    ff38:	b	f4c0 <__hwasan_memmove@@Base+0xa38>
    ff3c:	mov	x24, x19
    ff40:	mov	x22, x7
    ff44:	mov	x19, x1
    ff48:	b	f4c0 <__hwasan_memmove@@Base+0xa38>
    ff4c:	ldr	x22, [x5, #4016]
    ff50:	ldr	x0, [x22]
    ff54:	cbz	x0, ffac <__hwasan_memmove@@Base+0x1524>
    ff58:	sub	x1, x0, #0x1
    ff5c:	tst	x1, x0
    ff60:	b.ne	ffbc <__hwasan_memmove@@Base+0x1534>  // b.any
    ff64:	add	x1, x28, x1
    ff68:	neg	x0, x0
    ff6c:	and	x4, x1, x0
    ff70:	mov	w2, #0x0                   	// #0
    ff74:	add	x1, x6, #0xc10
    ff78:	mov	x0, x4
    ff7c:	str	x4, [sp, #144]
    ff80:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
    ff84:	mov	x22, x0
    ff88:	ldr	x1, [sp, #272]
    ff8c:	ldr	x2, [sp, #288]
    ff90:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
    ff94:	ldp	x0, x1, [sp, #272]
    ff98:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
    ff9c:	ldr	x4, [sp, #144]
    ffa0:	stp	x22, x4, [sp, #272]
    ffa4:	ldr	x2, [sp, #288]
    ffa8:	b	fb94 <__hwasan_memmove@@Base+0x110c>
    ffac:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
    ffb0:	str	x0, [x22]
    ffb4:	adrp	x6, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    ffb8:	b	ff58 <__hwasan_memmove@@Base+0x14d0>
    ffbc:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
    ffc0:	add	x0, x0, #0xbf8
    ffc4:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
    ffc8:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
    ffcc:	adrp	x3, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
    ffd0:	sub	x2, x20, x7
    ffd4:	add	x3, x3, #0x190
    ffd8:	b	facc <__hwasan_memmove@@Base+0x1044>
    ffdc:	stp	x28, xzr, [sp, #288]
    ffe0:	b	fbac <__hwasan_memmove@@Base+0x1124>
    ffe4:	nop
    ffe8:	ret
    ffec:	nop
    fff0:	stp	x19, x20, [sp, #-144]!
    fff4:	mov	x19, x1
    fff8:	mov	x20, x0
    fffc:	stp	x21, x22, [sp, #16]
   10000:	stp	x23, x24, [sp, #32]
   10004:	add	x23, sp, #0x60
   10008:	stp	x25, x26, [sp, #48]
   1000c:	adrp	x25, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   10010:	stp	x27, x28, [sp, #64]
   10014:	str	x30, [sp, #80]
   10018:	bl	71d8 <__sanitizer_print_memory_profile@plt+0xb78>
   1001c:	mov	x1, x0
   10020:	mov	x0, x23
   10024:	ldrb	w24, [x1, #4]
   10028:	bl	2d810 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f28>
   1002c:	ldr	x21, [x25, #4016]
   10030:	str	xzr, [sp, #104]
   10034:	stp	xzr, xzr, [sp, #112]
   10038:	ldr	x2, [x21]
   1003c:	cbz	x2, 102ec <__hwasan_memmove@@Base+0x1864>
   10040:	sub	x0, x2, #0x1
   10044:	tst	x0, x2
   10048:	b.ne	103c8 <__hwasan_memmove@@Base+0x1940>  // b.any
   1004c:	neg	x21, x2
   10050:	adrp	x26, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   10054:	and	x21, x21, x2
   10058:	add	x1, x26, #0xc10
   1005c:	mov	w2, #0x0                   	// #0
   10060:	mov	x0, x21
   10064:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   10068:	mov	x22, x0
   1006c:	ldr	x1, [sp, #104]
   10070:	ldr	x2, [sp, #120]
   10074:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   10078:	ldp	x0, x1, [sp, #104]
   1007c:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   10080:	stp	x22, x21, [sp, #104]
   10084:	ldr	x2, [sp, #120]
   10088:	cbnz	x2, 100a4 <__hwasan_memmove@@Base+0x161c>
   1008c:	cbz	x21, 10374 <__hwasan_memmove@@Base+0x18ec>
   10090:	mov	x3, #0x1                   	// #1
   10094:	add	x0, x22, x2
   10098:	mov	w1, #0x0                   	// #0
   1009c:	sub	x2, x3, x2
   100a0:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   100a4:	mov	x1, #0x1                   	// #1
   100a8:	adrp	x21, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   100ac:	add	x22, x21, #0xac8
   100b0:	str	x1, [sp, #120]
   100b4:	mov	x0, x22
   100b8:	strb	w24, [sp, #128]
   100bc:	bl	1c690 <__sanitizer_set_report_fd@@Base+0x4810>
   100c0:	and	x25, x19, #0xffffffffffffff
   100c4:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   100c8:	cmp	w24, #0x0
   100cc:	add	x1, x23, #0x8
   100d0:	mov	x0, x22
   100d4:	ldr	x2, [x2, #3864]
   100d8:	csel	x1, x1, xzr, ne  // ne = any
   100dc:	str	x1, [x22, #88]
   100e0:	lsr	x24, x19, #56
   100e4:	ldr	w1, [x2]
   100e8:	add	w1, w1, #0x1
   100ec:	str	w1, [x2]
   100f0:	bl	1c728 <__sanitizer_set_report_fd@@Base+0x48a8>
   100f4:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   100f8:	ubfx	x0, x19, #4, #52
   100fc:	ldr	x1, [x1, #3848]
   10100:	ldr	x1, [x1]
   10104:	add	x27, x0, x1
   10108:	ldrb	w28, [x0, x1]
   1010c:	bl	2c950 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4068>
   10110:	tst	w0, #0xff
   10114:	b.eq	1027c <__hwasan_memmove@@Base+0x17f4>  // b.none
   10118:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   1011c:	adrp	x26, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   10120:	add	x1, x1, #0x718
   10124:	add	x0, x26, #0xcb8
   10128:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   1012c:	ldr	w0, [x20, #8]
   10130:	cbnz	w0, 102fc <__hwasan_memmove@@Base+0x1874>
   10134:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   10138:	mov	x3, x25
   1013c:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   10140:	adrp	x25, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   10144:	ldr	x1, [x1, #4024]
   10148:	add	x2, x25, #0x6e0
   1014c:	add	x0, x0, #0x6f0
   10150:	mov	x4, #0x0                   	// #0
   10154:	ldr	x1, [x1]
   10158:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   1015c:	add	x0, x26, #0xcb8
   10160:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   10164:	add	x1, x1, #0x580
   10168:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   1016c:	mov	w1, w24
   10170:	mov	w2, w28
   10174:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   10178:	add	x0, x0, #0x590
   1017c:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   10180:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   10184:	add	x1, x1, #0x180
   10188:	add	x0, x26, #0xcb8
   1018c:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   10190:	mov	x0, x20
   10194:	bl	27f58 <__sanitizer_cov_dump@@Base+0x1338>
   10198:	mov	x2, #0x0                   	// #0
   1019c:	mov	x0, x19
   101a0:	mov	x1, #0x0                   	// #0
   101a4:	bl	f3c0 <__hwasan_memmove@@Base+0x938>
   101a8:	mov	x1, #0x10                  	// #16
   101ac:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   101b0:	add	x0, x0, #0x5b0
   101b4:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   101b8:	adrp	x2, e000 <__interceptor_vfork@@Base+0xa20>
   101bc:	add	x2, x2, #0xe00
   101c0:	mov	x0, x27
   101c4:	mov	x1, #0x11                  	// #17
   101c8:	bl	ee60 <__hwasan_memmove@@Base+0x3d8>
   101cc:	mov	x1, #0x10                  	// #16
   101d0:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   101d4:	add	x0, x0, #0x600
   101d8:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   101dc:	adrp	x2, e000 <__interceptor_vfork@@Base+0xa20>
   101e0:	add	x2, x2, #0xe18
   101e4:	mov	x1, #0x3                   	// #3
   101e8:	mov	x0, x27
   101ec:	bl	ee60 <__hwasan_memmove@@Base+0x3d8>
   101f0:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   101f4:	add	x0, x0, #0x658
   101f8:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   101fc:	mov	x1, x20
   10200:	mov	x2, #0x0                   	// #0
   10204:	add	x0, x25, #0x6e0
   10208:	bl	2ca08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4120>
   1020c:	add	x0, x21, #0xac8
   10210:	bl	1c690 <__sanitizer_set_report_fd@@Base+0x4810>
   10214:	ldrb	w0, [sp, #128]
   10218:	cbnz	w0, 10368 <__hwasan_memmove@@Base+0x18e0>
   1021c:	add	x0, x21, #0xac8
   10220:	str	xzr, [x0, #88]
   10224:	bl	1c728 <__sanitizer_set_report_fd@@Base+0x48a8>
   10228:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   1022c:	ldr	x0, [x0, #4056]
   10230:	ldr	w1, [x0, #64]
   10234:	cmp	w1, #0x1
   10238:	b.gt	1035c <__hwasan_memmove@@Base+0x18d4>
   1023c:	ldrb	w0, [sp, #128]
   10240:	cmp	w1, #0x0
   10244:	ccmp	w0, #0x0, #0x4, ne  // ne = any
   10248:	b.ne	1035c <__hwasan_memmove@@Base+0x18d4>  // b.any
   1024c:	cbnz	w0, 103e4 <__hwasan_memmove@@Base+0x195c>
   10250:	ldp	x0, x1, [sp, #104]
   10254:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   10258:	mov	x0, x23
   1025c:	bl	2d978 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5090>
   10260:	ldp	x21, x22, [sp, #16]
   10264:	ldp	x23, x24, [sp, #32]
   10268:	ldp	x25, x26, [sp, #48]
   1026c:	ldp	x27, x28, [sp, #64]
   10270:	ldr	x30, [sp, #80]
   10274:	ldp	x19, x20, [sp], #144
   10278:	ret
   1027c:	adrp	x22, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   10280:	adrp	x26, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   10284:	add	x1, x22, #0x3e8
   10288:	add	x0, x26, #0xcb8
   1028c:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   10290:	ldr	w0, [x20, #8]
   10294:	cbnz	w0, 1032c <__hwasan_memmove@@Base+0x18a4>
   10298:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   1029c:	mov	x3, x25
   102a0:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   102a4:	adrp	x25, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   102a8:	ldr	x1, [x1, #4024]
   102ac:	add	x2, x25, #0x6e0
   102b0:	add	x0, x0, #0x6f0
   102b4:	mov	x4, #0x0                   	// #0
   102b8:	ldr	x1, [x1]
   102bc:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   102c0:	add	x22, x22, #0x3e8
   102c4:	add	x0, x26, #0xcb8
   102c8:	mov	x1, x22
   102cc:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   102d0:	mov	w1, w24
   102d4:	mov	w2, w28
   102d8:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   102dc:	add	x0, x0, #0x590
   102e0:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   102e4:	mov	x1, x22
   102e8:	b	10188 <__hwasan_memmove@@Base+0x1700>
   102ec:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   102f0:	mov	x2, x0
   102f4:	str	x0, [x21]
   102f8:	b	10040 <__hwasan_memmove@@Base+0x15b8>
   102fc:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   10300:	mov	x3, x25
   10304:	ldr	x0, [x20]
   10308:	adrp	x25, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   1030c:	ldr	x1, [x1, #4024]
   10310:	add	x2, x25, #0x6e0
   10314:	ldr	x4, [x0]
   10318:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   1031c:	ldr	x1, [x1]
   10320:	add	x0, x0, #0x6f0
   10324:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   10328:	b	1015c <__hwasan_memmove@@Base+0x16d4>
   1032c:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   10330:	mov	x3, x25
   10334:	ldr	x0, [x20]
   10338:	adrp	x25, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   1033c:	ldr	x1, [x1, #4024]
   10340:	add	x2, x25, #0x6e0
   10344:	ldr	x4, [x0]
   10348:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   1034c:	ldr	x1, [x1]
   10350:	add	x0, x0, #0x6f0
   10354:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   10358:	b	102c0 <__hwasan_memmove@@Base+0x1838>
   1035c:	bl	1e670 <__sanitizer_set_report_fd@@Base+0x67f0>
   10360:	ldrb	w0, [sp, #128]
   10364:	b	1024c <__hwasan_memmove@@Base+0x17c4>
   10368:	ldr	x0, [sp, #104]
   1036c:	bl	24348 <__sanitizer_sandbox_on_notify@@Base+0xd00>
   10370:	b	1021c <__hwasan_memmove@@Base+0x1794>
   10374:	ldr	x25, [x25, #4016]
   10378:	ldr	x0, [x25]
   1037c:	cbz	x0, 103d8 <__hwasan_memmove@@Base+0x1950>
   10380:	sub	x1, x0, #0x1
   10384:	tst	x1, x0
   10388:	b.ne	103c8 <__hwasan_memmove@@Base+0x1940>  // b.any
   1038c:	neg	x21, x0
   10390:	add	x1, x26, #0xc10
   10394:	and	x21, x21, x0
   10398:	mov	w2, #0x0                   	// #0
   1039c:	mov	x0, x21
   103a0:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   103a4:	ldr	x1, [sp, #104]
   103a8:	mov	x22, x0
   103ac:	ldr	x2, [sp, #120]
   103b0:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   103b4:	ldp	x0, x1, [sp, #104]
   103b8:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   103bc:	stp	x22, x21, [sp, #104]
   103c0:	ldr	x2, [sp, #120]
   103c4:	b	10090 <__hwasan_memmove@@Base+0x1608>
   103c8:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   103cc:	add	x0, x0, #0xbf8
   103d0:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   103d4:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   103d8:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   103dc:	str	x0, [x25]
   103e0:	b	10380 <__hwasan_memmove@@Base+0x18f8>
   103e4:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   103e8:	stp	x19, x20, [sp, #-256]!
   103ec:	mov	x20, x2
   103f0:	stp	x21, x22, [sp, #16]
   103f4:	stp	x23, x24, [sp, #32]
   103f8:	mov	x24, x1
   103fc:	adrp	x23, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   10400:	stp	x25, x26, [sp, #48]
   10404:	stp	x27, x28, [sp, #64]
   10408:	add	x28, sp, #0xd0
   1040c:	str	x30, [sp, #80]
   10410:	stp	x0, x3, [sp, #104]
   10414:	bl	71d8 <__sanitizer_print_memory_profile@plt+0xb78>
   10418:	mov	x1, x0
   1041c:	mov	x0, x28
   10420:	ldrb	w19, [x1, #4]
   10424:	bl	2d810 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f28>
   10428:	ldr	x21, [x23, #4016]
   1042c:	str	xzr, [sp, #216]
   10430:	stp	xzr, xzr, [sp, #224]
   10434:	ldr	x0, [x21]
   10438:	cbz	x0, 106dc <__hwasan_memmove@@Base+0x1c54>
   1043c:	sub	x1, x0, #0x1
   10440:	tst	x1, x0
   10444:	b.ne	10a98 <__hwasan_memmove@@Base+0x2010>  // b.any
   10448:	neg	x21, x0
   1044c:	mov	w2, #0x0                   	// #0
   10450:	and	x21, x21, x0
   10454:	adrp	x26, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   10458:	mov	x0, x21
   1045c:	add	x1, x26, #0xc10
   10460:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   10464:	mov	x27, x0
   10468:	ldr	x1, [sp, #216]
   1046c:	ldr	x2, [sp, #232]
   10470:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   10474:	ldp	x0, x1, [sp, #216]
   10478:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   1047c:	stp	x27, x21, [sp, #216]
   10480:	ldr	x2, [sp, #232]
   10484:	cbnz	x2, 104a0 <__hwasan_memmove@@Base+0x1a18>
   10488:	cbz	x21, 10aa8 <__hwasan_memmove@@Base+0x2020>
   1048c:	mov	x3, #0x1                   	// #1
   10490:	add	x0, x27, x2
   10494:	mov	w1, #0x0                   	// #0
   10498:	sub	x2, x3, x2
   1049c:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   104a0:	mov	x1, #0x1                   	// #1
   104a4:	adrp	x0, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   104a8:	add	x21, x0, #0xac8
   104ac:	str	x1, [sp, #232]
   104b0:	mov	x0, x21
   104b4:	strb	w19, [sp, #240]
   104b8:	bl	1c690 <__sanitizer_set_report_fd@@Base+0x4810>
   104bc:	and	x24, x24, #0xffffffffffffff
   104c0:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   104c4:	cmp	w19, #0x0
   104c8:	add	x1, x28, #0x8
   104cc:	mov	x0, x21
   104d0:	ldr	x2, [x2, #3864]
   104d4:	csel	x1, x1, xzr, ne  // ne = any
   104d8:	str	x1, [x21, #88]
   104dc:	add	x19, x20, x24
   104e0:	ldr	w1, [x2]
   104e4:	add	w1, w1, #0x1
   104e8:	str	w1, [x2]
   104ec:	bl	1c728 <__sanitizer_set_report_fd@@Base+0x48a8>
   104f0:	bl	2c950 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4068>
   104f4:	tst	w0, #0xff
   104f8:	b.eq	1063c <__hwasan_memmove@@Base+0x1bb4>  // b.none
   104fc:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   10500:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   10504:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   10508:	add	x1, x1, #0x718
   1050c:	str	x0, [sp, #120]
   10510:	add	x0, x0, #0xcb8
   10514:	str	x21, [sp, #136]
   10518:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   1051c:	ldr	x1, [x21, #4024]
   10520:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   10524:	mov	x2, x0
   10528:	mov	x5, x20
   1052c:	mov	x4, x19
   10530:	mov	x3, x24
   10534:	ldr	x1, [x1]
   10538:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   1053c:	add	x0, x0, #0x908
   10540:	str	x2, [sp, #128]
   10544:	add	x2, x2, #0x8e8
   10548:	add	x21, sp, #0xa0
   1054c:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   10550:	adrp	x6, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   10554:	add	x6, x6, #0x180
   10558:	mov	x1, x6
   1055c:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   10560:	add	x0, x0, #0x938
   10564:	str	x6, [sp, #144]
   10568:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   1056c:	ldr	x0, [sp, #104]
   10570:	bl	27f58 <__sanitizer_cov_dump@@Base+0x1338>
   10574:	mov	x0, x24
   10578:	bl	8ae0 <__sanitizer_print_stack_trace@@Base+0x808>
   1057c:	mov	x2, x0
   10580:	mov	x3, x1
   10584:	mov	x0, x21
   10588:	stp	x2, x3, [sp, #160]
   1058c:	bl	8660 <__sanitizer_print_stack_trace@@Base+0x388>
   10590:	ldr	x6, [sp, #144]
   10594:	cbz	x0, 105f8 <__hwasan_memmove@@Base+0x1b70>
   10598:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   1059c:	mov	x25, x6
   105a0:	add	x1, x1, #0x1a0
   105a4:	ldr	x0, [sp, #120]
   105a8:	add	x22, x0, #0xcb8
   105ac:	mov	x0, x22
   105b0:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   105b4:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   105b8:	add	x0, x0, #0x568
   105bc:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   105c0:	mov	x1, x25
   105c4:	mov	x0, x22
   105c8:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   105cc:	mov	x0, x21
   105d0:	bl	86f0 <__sanitizer_print_stack_trace@@Base+0x418>
   105d4:	cbz	w0, 10b7c <__hwasan_memmove@@Base+0x20f4>
   105d8:	bl	27130 <__sanitizer_cov_dump@@Base+0x510>
   105dc:	mov	x2, x0
   105e0:	fmov	d0, x1
   105e4:	cbz	x0, 10ba8 <__hwasan_memmove@@Base+0x2120>
   105e8:	add	x0, sp, #0xb0
   105ec:	str	x2, [sp, #176]
   105f0:	str	d0, [sp, #184]
   105f4:	bl	27f58 <__sanitizer_cov_dump@@Base+0x1338>
   105f8:	ldr	x21, [x23, #4016]
   105fc:	ldr	x0, [x21]
   10600:	cbz	x0, 106e8 <__hwasan_memmove@@Base+0x1c60>
   10604:	str	xzr, [sp, #176]
   10608:	cmp	xzr, x0, lsl #3
   1060c:	stp	xzr, xzr, [sp, #184]
   10610:	lsl	x3, x0, #3
   10614:	b.ne	10718 <__hwasan_memmove@@Base+0x1c90>  // b.any
   10618:	stp	xzr, xzr, [sp, #192]
   1061c:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   10620:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   10624:	add	x2, x2, #0x118
   10628:	add	x0, x0, #0x6a8
   1062c:	mov	x4, #0x0                   	// #0
   10630:	mov	x3, #0x0                   	// #0
   10634:	mov	w1, #0x1c5                 	// #453
   10638:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   1063c:	adrp	x6, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   10640:	add	x6, x6, #0x3e8
   10644:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   10648:	mov	x1, x6
   1064c:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   10650:	str	x0, [sp, #120]
   10654:	add	x0, x0, #0xcb8
   10658:	stp	x21, x6, [sp, #136]
   1065c:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   10660:	ldr	x1, [x21, #4024]
   10664:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   10668:	mov	x5, x20
   1066c:	add	x2, x0, #0x8e8
   10670:	mov	x4, x19
   10674:	mov	x3, x24
   10678:	ldr	x1, [x1]
   1067c:	str	x0, [sp, #128]
   10680:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   10684:	add	x0, x0, #0x908
   10688:	add	x21, sp, #0xa0
   1068c:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   10690:	ldr	x6, [sp, #144]
   10694:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   10698:	add	x0, x0, #0x938
   1069c:	mov	x1, x6
   106a0:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   106a4:	ldr	x0, [sp, #104]
   106a8:	bl	27f58 <__sanitizer_cov_dump@@Base+0x1338>
   106ac:	mov	x0, x24
   106b0:	bl	8ae0 <__sanitizer_print_stack_trace@@Base+0x808>
   106b4:	mov	x2, x0
   106b8:	mov	x3, x1
   106bc:	mov	x0, x21
   106c0:	stp	x2, x3, [sp, #160]
   106c4:	bl	8660 <__sanitizer_print_stack_trace@@Base+0x388>
   106c8:	ldr	x6, [sp, #144]
   106cc:	cbz	x0, 105f8 <__hwasan_memmove@@Base+0x1b70>
   106d0:	mov	x25, x6
   106d4:	mov	x1, x6
   106d8:	b	105a4 <__hwasan_memmove@@Base+0x1b1c>
   106dc:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   106e0:	str	x0, [x21]
   106e4:	b	1043c <__hwasan_memmove@@Base+0x19b4>
   106e8:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   106ec:	str	x0, [x21]
   106f0:	str	xzr, [sp, #176]
   106f4:	cmp	xzr, x0, lsl #3
   106f8:	stp	xzr, xzr, [sp, #184]
   106fc:	lsl	x1, x0, #3
   10700:	b.eq	10618 <__hwasan_memmove@@Base+0x1b90>  // b.none
   10704:	cbnz	x0, 10be4 <__hwasan_memmove@@Base+0x215c>
   10708:	str	x0, [sp, #144]
   1070c:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   10710:	ldr	x3, [sp, #144]
   10714:	str	x0, [x21]
   10718:	sub	x1, x0, #0x1
   1071c:	ands	x21, x1, x0
   10720:	b.ne	10a98 <__hwasan_memmove@@Base+0x2010>  // b.any
   10724:	add	x1, x3, x1
   10728:	neg	x0, x0
   1072c:	and	x22, x1, x0
   10730:	mov	w2, #0x0                   	// #0
   10734:	add	x1, x26, #0xc10
   10738:	mov	x0, x22
   1073c:	str	x3, [sp, #152]
   10740:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   10744:	ldr	x1, [sp, #176]
   10748:	str	x0, [sp, #144]
   1074c:	ldr	x2, [sp, #192]
   10750:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   10754:	ldp	x0, x1, [sp, #176]
   10758:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   1075c:	ldp	x4, x3, [sp, #144]
   10760:	stp	x4, x22, [sp, #176]
   10764:	ldr	x2, [sp, #192]
   10768:	cmp	x3, x2
   1076c:	b.ls	10bdc <__hwasan_memmove@@Base+0x2154>  // b.plast
   10770:	cmp	x3, x22
   10774:	b.hi	10afc <__hwasan_memmove@@Base+0x2074>  // b.pmore
   10778:	add	x0, x4, x2
   1077c:	mov	w1, #0x0                   	// #0
   10780:	sub	x2, x3, x2
   10784:	str	x3, [sp, #144]
   10788:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   1078c:	ldr	x3, [sp, #144]
   10790:	stp	x3, xzr, [sp, #192]
   10794:	ldr	x4, [sp, #176]
   10798:	cbz	x3, 1061c <__hwasan_memmove@@Base+0x1b94>
   1079c:	and	x20, x20, #0xf
   107a0:	strb	wzr, [x4]
   107a4:	mov	x26, #0x10                  	// #16
   107a8:	sub	x26, x26, x20
   107ac:	cmp	x26, #0x10
   107b0:	b.eq	10b5c <__hwasan_memmove@@Base+0x20d4>  // b.none
   107b4:	add	x27, sp, #0xb0
   107b8:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   107bc:	mov	x0, x27
   107c0:	add	x1, x1, #0x728
   107c4:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   107c8:	mov	x22, #0x0                   	// #0
   107cc:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   107d0:	add	x23, x1, #0x738
   107d4:	cbz	x20, 107f0 <__hwasan_memmove@@Base+0x1d68>
   107d8:	add	x22, x22, #0x1
   107dc:	mov	x1, x23
   107e0:	mov	x0, x27
   107e4:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   107e8:	cmp	x20, x22
   107ec:	b.ne	107d8 <__hwasan_memmove@@Base+0x1d50>  // b.any
   107f0:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   107f4:	add	x23, x26, x19
   107f8:	add	x25, x0, #0x740
   107fc:	mov	x22, x19
   10800:	ldrb	w2, [x22], #1
   10804:	mov	x1, x25
   10808:	mov	x0, x27
   1080c:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   10810:	cmp	x23, x22
   10814:	b.ne	10800 <__hwasan_memmove@@Base+0x1d78>  // b.any
   10818:	mov	x0, x27
   1081c:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   10820:	add	x1, x1, #0x0
   10824:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   10828:	mov	x0, x27
   1082c:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   10830:	add	x1, x1, #0x748
   10834:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   10838:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   1083c:	mov	x25, #0x0                   	// #0
   10840:	add	x22, x1, #0x738
   10844:	cbz	x20, 10860 <__hwasan_memmove@@Base+0x1dd8>
   10848:	add	x25, x25, #0x1
   1084c:	mov	x1, x22
   10850:	mov	x0, x27
   10854:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   10858:	cmp	x20, x25
   1085c:	b.ne	10848 <__hwasan_memmove@@Base+0x1dc0>  // b.any
   10860:	ldr	x22, [sp, #112]
   10864:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   10868:	add	x25, x0, #0x740
   1086c:	add	x26, x26, x22
   10870:	ldrb	w2, [x22], #1
   10874:	mov	x1, x25
   10878:	mov	x0, x27
   1087c:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   10880:	cmp	x26, x22
   10884:	b.ne	10870 <__hwasan_memmove@@Base+0x1de8>  // b.any
   10888:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   1088c:	add	x1, x0, #0x0
   10890:	mov	x0, x27
   10894:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   10898:	mov	x0, x27
   1089c:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   108a0:	adrp	x26, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   108a4:	add	x1, x1, #0x758
   108a8:	add	x26, x26, #0x768
   108ac:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   108b0:	cbz	x20, 108d0 <__hwasan_memmove@@Base+0x1e48>
   108b4:	nop
   108b8:	add	x21, x21, #0x1
   108bc:	mov	x1, x26
   108c0:	mov	x0, x27
   108c4:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   108c8:	cmp	x20, x21
   108cc:	b.ne	108b8 <__hwasan_memmove@@Base+0x1e30>  // b.any
   108d0:	ldr	x0, [sp, #112]
   108d4:	adrp	x26, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   108d8:	adrp	x21, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   108dc:	adrp	x20, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   108e0:	add	x26, x26, #0xbf8
   108e4:	add	x21, x21, #0x110
   108e8:	add	x20, x20, #0x770
   108ec:	sub	x22, x0, x19
   108f0:	ldrb	w2, [x22, x19]
   108f4:	add	x19, x19, #0x1
   108f8:	ldurb	w1, [x19, #-1]
   108fc:	cmp	w2, w1
   10900:	b.eq	10a70 <__hwasan_memmove@@Base+0x1fe8>  // b.none
   10904:	mov	x2, x20
   10908:	mov	x1, x26
   1090c:	mov	x0, x27
   10910:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   10914:	cmp	x23, x19
   10918:	b.ne	108f0 <__hwasan_memmove@@Base+0x1e68>  // b.any
   1091c:	ldr	x0, [sp, #136]
   10920:	mov	x2, #0x10                  	// #16
   10924:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   10928:	add	x1, x1, #0x778
   1092c:	ldr	x3, [x0, #4024]
   10930:	mov	x0, x27
   10934:	ldr	x3, [x3]
   10938:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   1093c:	ldr	x0, [sp, #120]
   10940:	ldr	x1, [sp, #176]
   10944:	add	x0, x0, #0xcb8
   10948:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   1094c:	bl	e3f8 <__interceptor_vfork@@Base+0xe18>
   10950:	ldrb	w2, [x0, #2684]
   10954:	cbnz	w2, 1096c <__hwasan_memmove@@Base+0x1ee4>
   10958:	mov	w2, #0x1                   	// #1
   1095c:	strb	w2, [x0, #2684]
   10960:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   10964:	add	x1, x1, #0x380
   10968:	bl	11860 <__hwasan_tag_mismatch_v2@@Base+0x5a8>
   1096c:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   10970:	mov	x1, #0x10                  	// #16
   10974:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   10978:	add	x0, x0, #0x5b0
   1097c:	ldr	x2, [x2, #3848]
   10980:	ldr	x2, [x2]
   10984:	add	x24, x2, x24, lsr #4
   10988:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   1098c:	adrp	x2, e000 <__interceptor_vfork@@Base+0xa20>
   10990:	add	x2, x2, #0xe00
   10994:	mov	x0, x24
   10998:	mov	x1, #0x11                  	// #17
   1099c:	bl	ee60 <__hwasan_memmove@@Base+0x3d8>
   109a0:	mov	x1, #0x10                  	// #16
   109a4:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   109a8:	add	x0, x0, #0x600
   109ac:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   109b0:	adrp	x2, e000 <__interceptor_vfork@@Base+0xa20>
   109b4:	add	x2, x2, #0xe18
   109b8:	mov	x1, #0x3                   	// #3
   109bc:	mov	x0, x24
   109c0:	bl	ee60 <__hwasan_memmove@@Base+0x3d8>
   109c4:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   109c8:	add	x0, x0, #0x658
   109cc:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   109d0:	ldr	x1, [sp, #104]
   109d4:	mov	x2, #0x0                   	// #0
   109d8:	ldr	x0, [sp, #128]
   109dc:	add	x0, x0, #0x8e8
   109e0:	bl	2ca08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4120>
   109e4:	ldp	x0, x1, [sp, #176]
   109e8:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   109ec:	adrp	x0, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   109f0:	add	x0, x0, #0xac8
   109f4:	bl	1c690 <__sanitizer_set_report_fd@@Base+0x4810>
   109f8:	ldrb	w0, [sp, #240]
   109fc:	cbnz	w0, 10a8c <__hwasan_memmove@@Base+0x2004>
   10a00:	adrp	x0, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   10a04:	add	x0, x0, #0xac8
   10a08:	str	xzr, [x0, #88]
   10a0c:	bl	1c728 <__sanitizer_set_report_fd@@Base+0x48a8>
   10a10:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   10a14:	ldr	x0, [x0, #4056]
   10a18:	ldr	w1, [x0, #64]
   10a1c:	cmp	w1, #0x1
   10a20:	b.gt	10a64 <__hwasan_memmove@@Base+0x1fdc>
   10a24:	ldrb	w0, [sp, #240]
   10a28:	cmp	w1, #0x0
   10a2c:	ccmp	w0, #0x0, #0x4, ne  // ne = any
   10a30:	b.ne	10a64 <__hwasan_memmove@@Base+0x1fdc>  // b.any
   10a34:	cbnz	w0, 10bec <__hwasan_memmove@@Base+0x2164>
   10a38:	ldp	x0, x1, [sp, #216]
   10a3c:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   10a40:	mov	x0, x28
   10a44:	bl	2d978 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5090>
   10a48:	ldp	x21, x22, [sp, #16]
   10a4c:	ldp	x23, x24, [sp, #32]
   10a50:	ldp	x25, x26, [sp, #48]
   10a54:	ldp	x27, x28, [sp, #64]
   10a58:	ldr	x30, [sp, #80]
   10a5c:	ldp	x19, x20, [sp], #256
   10a60:	ret
   10a64:	bl	1e670 <__sanitizer_set_report_fd@@Base+0x67f0>
   10a68:	ldrb	w0, [sp, #240]
   10a6c:	b	10a34 <__hwasan_memmove@@Base+0x1fac>
   10a70:	mov	x2, x21
   10a74:	mov	x1, x26
   10a78:	mov	x0, x27
   10a7c:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   10a80:	cmp	x19, x23
   10a84:	b.ne	108f0 <__hwasan_memmove@@Base+0x1e68>  // b.any
   10a88:	b	1091c <__hwasan_memmove@@Base+0x1e94>
   10a8c:	ldr	x0, [sp, #216]
   10a90:	bl	24348 <__sanitizer_sandbox_on_notify@@Base+0xd00>
   10a94:	b	10a00 <__hwasan_memmove@@Base+0x1f78>
   10a98:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   10a9c:	add	x0, x0, #0xbf8
   10aa0:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   10aa4:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   10aa8:	ldr	x21, [x23, #4016]
   10aac:	ldr	x0, [x21]
   10ab0:	cbz	x0, 10b9c <__hwasan_memmove@@Base+0x2114>
   10ab4:	sub	x1, x0, #0x1
   10ab8:	tst	x1, x0
   10abc:	b.ne	10a98 <__hwasan_memmove@@Base+0x2010>  // b.any
   10ac0:	neg	x21, x0
   10ac4:	add	x1, x26, #0xc10
   10ac8:	and	x21, x21, x0
   10acc:	mov	w2, #0x0                   	// #0
   10ad0:	mov	x0, x21
   10ad4:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   10ad8:	ldr	x1, [sp, #216]
   10adc:	mov	x27, x0
   10ae0:	ldr	x2, [sp, #232]
   10ae4:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   10ae8:	ldp	x0, x1, [sp, #216]
   10aec:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   10af0:	stp	x27, x21, [sp, #216]
   10af4:	ldr	x2, [sp, #232]
   10af8:	b	1048c <__hwasan_memmove@@Base+0x1a04>
   10afc:	ldr	x23, [x23, #4016]
   10b00:	ldr	x0, [x23]
   10b04:	cbz	x0, 10bc8 <__hwasan_memmove@@Base+0x2140>
   10b08:	sub	x1, x0, #0x1
   10b0c:	tst	x0, x1
   10b10:	b.ne	10a98 <__hwasan_memmove@@Base+0x2010>  // b.any
   10b14:	add	x1, x3, x1
   10b18:	neg	x0, x0
   10b1c:	and	x23, x1, x0
   10b20:	mov	w2, #0x0                   	// #0
   10b24:	add	x1, x26, #0xc10
   10b28:	mov	x0, x23
   10b2c:	str	x3, [sp, #152]
   10b30:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   10b34:	ldr	x1, [sp, #176]
   10b38:	str	x0, [sp, #144]
   10b3c:	ldr	x2, [sp, #192]
   10b40:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   10b44:	ldp	x0, x1, [sp, #176]
   10b48:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   10b4c:	ldp	x4, x3, [sp, #144]
   10b50:	stp	x4, x23, [sp, #176]
   10b54:	ldr	x2, [sp, #192]
   10b58:	b	10778 <__hwasan_memmove@@Base+0x1cf0>
   10b5c:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   10b60:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   10b64:	add	x2, x2, #0x128
   10b68:	add	x0, x0, #0x240
   10b6c:	mov	x4, x26
   10b70:	mov	x3, x26
   10b74:	mov	w1, #0x1cd                 	// #461
   10b78:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   10b7c:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   10b80:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   10b84:	add	x2, x2, #0x230
   10b88:	add	x0, x0, #0x240
   10b8c:	mov	x4, #0x0                   	// #0
   10b90:	mov	x3, #0x0                   	// #0
   10b94:	mov	w1, #0x53                  	// #83
   10b98:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   10b9c:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   10ba0:	str	x0, [x21]
   10ba4:	b	10ab4 <__hwasan_memmove@@Base+0x202c>
   10ba8:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   10bac:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   10bb0:	add	x2, x2, #0x288
   10bb4:	add	x0, x0, #0x240
   10bb8:	mov	x4, #0x0                   	// #0
   10bbc:	mov	x3, #0x0                   	// #0
   10bc0:	mov	w1, #0x55                  	// #85
   10bc4:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   10bc8:	str	x3, [sp, #144]
   10bcc:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   10bd0:	str	x0, [x23]
   10bd4:	ldr	x3, [sp, #144]
   10bd8:	b	10b08 <__hwasan_memmove@@Base+0x2080>
   10bdc:	stp	x3, xzr, [sp, #192]
   10be0:	b	1079c <__hwasan_memmove@@Base+0x1d14>
   10be4:	mov	x3, x1
   10be8:	b	10718 <__hwasan_memmove@@Base+0x1c90>
   10bec:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   10bf0:	stp	x19, x30, [sp, #-16]!
   10bf4:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   10bf8:	mov	x19, x0
   10bfc:	add	x0, x2, #0x940
   10c00:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   10c04:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   10c08:	add	x0, x0, #0x970
   10c0c:	ldp	x1, x2, [x19]
   10c10:	ldp	x3, x4, [x19, #16]
   10c14:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   10c18:	ldp	x1, x2, [x19, #32]
   10c1c:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   10c20:	ldp	x3, x4, [x19, #48]
   10c24:	add	x0, x0, #0x9a8
   10c28:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   10c2c:	ldp	x1, x2, [x19, #64]
   10c30:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   10c34:	ldp	x3, x4, [x19, #80]
   10c38:	add	x0, x0, #0x9e0
   10c3c:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   10c40:	ldp	x1, x2, [x19, #96]
   10c44:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   10c48:	ldp	x3, x4, [x19, #112]
   10c4c:	add	x0, x0, #0xa18
   10c50:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   10c54:	ldp	x1, x2, [x19, #128]
   10c58:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   10c5c:	ldp	x3, x4, [x19, #144]
   10c60:	add	x0, x0, #0xa50
   10c64:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   10c68:	ldp	x1, x2, [x19, #160]
   10c6c:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   10c70:	ldp	x3, x4, [x19, #176]
   10c74:	add	x0, x0, #0xa88
   10c78:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   10c7c:	ldp	x1, x2, [x19, #192]
   10c80:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   10c84:	ldp	x3, x4, [x19, #208]
   10c88:	add	x0, x0, #0xac0
   10c8c:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   10c90:	ldp	x1, x2, [x19, #224]
   10c94:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   10c98:	ldr	x3, [x19, #240]
   10c9c:	add	x0, x0, #0xaf8
   10ca0:	ldp	x19, x30, [sp], #16
   10ca4:	b	1fc30 <__sanitizer_on_print@@Base+0x310>
   10ca8:	stp	x19, x20, [sp, #-192]!
   10cac:	mov	x20, x1
   10cb0:	mov	x19, x2
   10cb4:	stp	x23, x24, [sp, #32]
   10cb8:	adrp	x23, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   10cbc:	add	x24, sp, #0x90
   10cc0:	stp	x21, x22, [sp, #16]
   10cc4:	mov	x21, x0
   10cc8:	and	w0, w3, #0xff
   10ccc:	mov	x22, x5
   10cd0:	stp	x25, x26, [sp, #48]
   10cd4:	and	w25, w4, #0xff
   10cd8:	stp	x27, x28, [sp, #64]
   10cdc:	str	x30, [sp, #80]
   10ce0:	str	w0, [sp, #104]
   10ce4:	mov	x0, x24
   10ce8:	bl	2d810 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f28>
   10cec:	str	xzr, [sp, #152]
   10cf0:	ldr	x26, [x23, #4016]
   10cf4:	stp	xzr, xzr, [sp, #160]
   10cf8:	ldr	x0, [x26]
   10cfc:	cbz	x0, 110b8 <__hwasan_memmove@@Base+0x2630>
   10d00:	sub	x1, x0, #0x1
   10d04:	tst	x1, x0
   10d08:	b.ne	11178 <__hwasan_memmove@@Base+0x26f0>  // b.any
   10d0c:	neg	x26, x0
   10d10:	mov	w2, #0x0                   	// #0
   10d14:	and	x26, x26, x0
   10d18:	adrp	x28, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   10d1c:	mov	x0, x26
   10d20:	add	x1, x28, #0xc10
   10d24:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   10d28:	mov	x27, x0
   10d2c:	ldr	x1, [sp, #152]
   10d30:	ldr	x2, [sp, #168]
   10d34:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   10d38:	ldp	x0, x1, [sp, #152]
   10d3c:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   10d40:	stp	x27, x26, [sp, #152]
   10d44:	ldr	x2, [sp, #168]
   10d48:	cbz	x2, 1109c <__hwasan_memmove@@Base+0x2614>
   10d4c:	mov	x1, #0x1                   	// #1
   10d50:	adrp	x23, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   10d54:	add	x26, x23, #0xac8
   10d58:	str	x1, [sp, #168]
   10d5c:	mov	x0, x26
   10d60:	strb	w25, [sp, #176]
   10d64:	bl	1c690 <__sanitizer_set_report_fd@@Base+0x4810>
   10d68:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   10d6c:	cmp	w25, #0x0
   10d70:	add	x1, x24, #0x8
   10d74:	mov	x0, x26
   10d78:	ldr	x2, [x2, #3864]
   10d7c:	csel	x1, x1, xzr, ne  // ne = any
   10d80:	str	x1, [x26, #88]
   10d84:	ldr	w1, [x2]
   10d88:	add	w1, w1, #0x1
   10d8c:	str	w1, [x2]
   10d90:	bl	1c728 <__sanitizer_set_report_fd@@Base+0x48a8>
   10d94:	bl	e3f8 <__interceptor_vfork@@Base+0xe18>
   10d98:	ldr	x26, [x0, #2656]
   10d9c:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   10da0:	add	x2, x2, #0xb38
   10da4:	ldrb	w0, [x26, #7]
   10da8:	lsl	x1, x0, #13
   10dac:	lsl	x0, x0, #12
   10db0:	bl	1ebc0 <__sanitizer_set_report_fd@@Base+0x6d40>
   10db4:	mov	x28, x0
   10db8:	ldr	x27, [x26]
   10dbc:	lsr	x3, x27, #56
   10dc0:	str	x3, [sp, #96]
   10dc4:	neg	x1, x3, lsl #12
   10dc8:	lsl	x25, x3, #12
   10dcc:	and	x1, x1, x27
   10dd0:	mov	x2, x25
   10dd4:	and	x1, x1, #0xffffffffffffff
   10dd8:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   10ddc:	sub	x0, x25, #0x1
   10de0:	tst	x0, x25
   10de4:	ldr	x3, [sp, #96]
   10de8:	b.ne	11188 <__hwasan_memmove@@Base+0x2700>  // b.any
   10dec:	cmp	x25, #0xfff
   10df0:	b.ls	111a8 <__hwasan_memmove@@Base+0x2720>  // b.plast
   10df4:	cmp	x25, #0x80, lsl #12
   10df8:	b.hi	111c8 <__hwasan_memmove@@Base+0x2740>  // b.pmore
   10dfc:	lsl	x3, x3, #13
   10e00:	udiv	x25, x28, x3
   10e04:	msub	x25, x25, x3, x28
   10e08:	cbnz	x25, 111e8 <__hwasan_memmove@@Base+0x2760>
   10e0c:	and	x0, x27, #0xff00000000000000
   10e10:	and	x27, x20, #0xffffffffffffff
   10e14:	orr	x0, x0, x28
   10e18:	str	x0, [sp, #136]
   10e1c:	and	x0, x0, #0xff00000000000000
   10e20:	ldr	x1, [x26]
   10e24:	and	x2, x1, #0xffffffffffffff
   10e28:	lsr	x1, x1, #56
   10e2c:	neg	x1, x1, lsl #12
   10e30:	bic	x1, x2, x1
   10e34:	add	x28, x28, x1
   10e38:	orr	x0, x28, x0
   10e3c:	str	x0, [sp, #136]
   10e40:	bl	2c950 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4068>
   10e44:	ands	w0, w0, #0xff
   10e48:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   10e4c:	add	x2, x2, #0x3e8
   10e50:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   10e54:	add	x1, x1, #0x718
   10e58:	csel	x1, x1, x2, ne  // ne = any
   10e5c:	str	w0, [sp, #96]
   10e60:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   10e64:	add	x0, x0, #0xcb8
   10e68:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   10e6c:	ldr	w0, [x21, #8]
   10e70:	cbnz	w0, 110c4 <__hwasan_memmove@@Base+0x263c>
   10e74:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   10e78:	mov	x4, x25
   10e7c:	mov	x3, x27
   10e80:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   10e84:	ldr	x1, [x1, #4024]
   10e88:	add	x0, x0, #0x6f0
   10e8c:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   10e90:	add	x2, x2, #0xbe8
   10e94:	ldr	x1, [x1]
   10e98:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   10e9c:	bl	e3f8 <__interceptor_vfork@@Base+0xe18>
   10ea0:	mov	x26, x0
   10ea4:	mov	x1, x19
   10ea8:	mov	x0, x20
   10eac:	bl	6470 <__hwasan_test_shadow@plt>
   10eb0:	cmp	x0, #0x0
   10eb4:	mov	x7, x0
   10eb8:	ccmp	x19, x0, #0x4, ge  // ge = tcont
   10ebc:	b.le	11208 <__hwasan_memmove@@Base+0x2780>
   10ec0:	adrp	x5, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   10ec4:	add	x2, x0, x27
   10ec8:	ldr	w0, [sp, #96]
   10ecc:	adrp	x4, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   10ed0:	ldr	x5, [x5, #3848]
   10ed4:	lsr	x2, x2, #4
   10ed8:	cmp	w0, #0x0
   10edc:	add	x4, x4, #0x3e8
   10ee0:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   10ee4:	add	x1, x1, #0x580
   10ee8:	ldr	x5, [x5]
   10eec:	csel	x1, x1, x4, ne  // ne = any
   10ef0:	lsr	x4, x20, #56
   10ef4:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   10ef8:	add	x28, x2, x5
   10efc:	add	x0, x0, #0xcb8
   10f00:	ldrb	w5, [x2, x5]
   10f04:	str	w5, [sp, #108]
   10f08:	stp	x4, x7, [sp, #112]
   10f0c:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   10f10:	ldp	w0, w5, [sp, #104]
   10f14:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   10f18:	ldr	x4, [sp, #112]
   10f1c:	cmp	w0, #0x0
   10f20:	ldr	x6, [x26, #2672]
   10f24:	add	x1, x1, #0xb28
   10f28:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   10f2c:	add	x0, x0, #0xb30
   10f30:	csel	x1, x1, x0, ne  // ne = any
   10f34:	mov	x3, x27
   10f38:	mov	x2, x19
   10f3c:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   10f40:	add	x0, x0, #0xc40
   10f44:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   10f48:	ldr	x7, [sp, #120]
   10f4c:	cbnz	x7, 11104 <__hwasan_memmove@@Base+0x267c>
   10f50:	ldr	w0, [sp, #96]
   10f54:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   10f58:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   10f5c:	add	x2, x2, #0x3e8
   10f60:	cmp	w0, #0x0
   10f64:	add	x1, x1, #0x180
   10f68:	csel	x1, x1, x2, ne  // ne = any
   10f6c:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   10f70:	add	x0, x0, #0xcb8
   10f74:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   10f78:	mov	x0, x21
   10f7c:	bl	27f58 <__sanitizer_cov_dump@@Base+0x1338>
   10f80:	mov	x0, x20
   10f84:	mov	x1, x19
   10f88:	add	x2, sp, #0x88
   10f8c:	bl	f3c0 <__hwasan_memmove@@Base+0x938>
   10f90:	ldrb	w0, [x26, #2684]
   10f94:	cbz	w0, 110d0 <__hwasan_memmove@@Base+0x2648>
   10f98:	mov	x1, #0x10                  	// #16
   10f9c:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   10fa0:	add	x0, x0, #0x5b0
   10fa4:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   10fa8:	adrp	x2, e000 <__interceptor_vfork@@Base+0xa20>
   10fac:	add	x2, x2, #0xe00
   10fb0:	mov	x0, x28
   10fb4:	mov	x1, #0x11                  	// #17
   10fb8:	bl	ee60 <__hwasan_memmove@@Base+0x3d8>
   10fbc:	mov	x1, #0x10                  	// #16
   10fc0:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   10fc4:	add	x0, x0, #0x600
   10fc8:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   10fcc:	adrp	x2, e000 <__interceptor_vfork@@Base+0xa20>
   10fd0:	add	x2, x2, #0xe18
   10fd4:	mov	x1, #0x3                   	// #3
   10fd8:	mov	x0, x28
   10fdc:	bl	ee60 <__hwasan_memmove@@Base+0x3d8>
   10fe0:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   10fe4:	add	x0, x0, #0x658
   10fe8:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   10fec:	cbz	x22, 10ffc <__hwasan_memmove@@Base+0x2574>
   10ff0:	mov	x1, x25
   10ff4:	mov	x0, x22
   10ff8:	bl	10bf0 <__hwasan_memmove@@Base+0x2168>
   10ffc:	mov	x1, x21
   11000:	mov	x2, #0x0                   	// #0
   11004:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   11008:	add	x0, x0, #0xbe8
   1100c:	bl	2ca08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4120>
   11010:	ldr	x2, [sp, #136]
   11014:	lsr	x1, x2, #56
   11018:	neg	x0, x1, lsl #12
   1101c:	lsl	x1, x1, #12
   11020:	and	x0, x0, x2
   11024:	and	x0, x0, #0xffffffffffffff
   11028:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   1102c:	add	x0, x23, #0xac8
   11030:	bl	1c690 <__sanitizer_set_report_fd@@Base+0x4810>
   11034:	ldrb	w0, [sp, #176]
   11038:	cbnz	w0, 110f8 <__hwasan_memmove@@Base+0x2670>
   1103c:	add	x0, x23, #0xac8
   11040:	str	xzr, [x0, #88]
   11044:	bl	1c728 <__sanitizer_set_report_fd@@Base+0x48a8>
   11048:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   1104c:	ldr	x0, [x0, #4056]
   11050:	ldr	w1, [x0, #64]
   11054:	cmp	w1, #0x1
   11058:	b.gt	110ec <__hwasan_memmove@@Base+0x2664>
   1105c:	ldrb	w0, [sp, #176]
   11060:	cmp	w1, #0x0
   11064:	ccmp	w0, #0x0, #0x4, ne  // ne = any
   11068:	b.ne	110ec <__hwasan_memmove@@Base+0x2664>  // b.any
   1106c:	cbnz	w0, 11234 <__hwasan_memmove@@Base+0x27ac>
   11070:	ldp	x0, x1, [sp, #152]
   11074:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   11078:	mov	x0, x24
   1107c:	bl	2d978 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5090>
   11080:	ldp	x21, x22, [sp, #16]
   11084:	ldp	x23, x24, [sp, #32]
   11088:	ldp	x25, x26, [sp, #48]
   1108c:	ldp	x27, x28, [sp, #64]
   11090:	ldr	x30, [sp, #80]
   11094:	ldp	x19, x20, [sp], #192
   11098:	ret
   1109c:	cbz	x26, 11124 <__hwasan_memmove@@Base+0x269c>
   110a0:	mov	x3, #0x1                   	// #1
   110a4:	add	x0, x27, x2
   110a8:	mov	w1, #0x0                   	// #0
   110ac:	sub	x2, x3, x2
   110b0:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   110b4:	b	10d4c <__hwasan_memmove@@Base+0x22c4>
   110b8:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   110bc:	str	x0, [x26]
   110c0:	b	10d00 <__hwasan_memmove@@Base+0x2278>
   110c4:	ldr	x0, [x21]
   110c8:	ldr	x25, [x0]
   110cc:	b	10e74 <__hwasan_memmove@@Base+0x23ec>
   110d0:	mov	w0, #0x1                   	// #1
   110d4:	strb	w0, [x26, #2684]
   110d8:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   110dc:	mov	x0, x26
   110e0:	add	x1, x1, #0x380
   110e4:	bl	11860 <__hwasan_tag_mismatch_v2@@Base+0x5a8>
   110e8:	b	10f98 <__hwasan_memmove@@Base+0x2510>
   110ec:	bl	1e670 <__sanitizer_set_report_fd@@Base+0x67f0>
   110f0:	ldrb	w0, [sp, #176]
   110f4:	b	1106c <__hwasan_memmove@@Base+0x25e4>
   110f8:	ldr	x0, [sp, #152]
   110fc:	bl	24348 <__sanitizer_sandbox_on_notify@@Base+0xd00>
   11100:	b	1103c <__hwasan_memmove@@Base+0x25b4>
   11104:	add	x2, x7, #0x10
   11108:	mov	x1, x7
   1110c:	cmp	x2, x19
   11110:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   11114:	csel	x2, x2, x19, ls  // ls = plast
   11118:	add	x0, x0, #0xc80
   1111c:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   11120:	b	10f50 <__hwasan_memmove@@Base+0x24c8>
   11124:	ldr	x23, [x23, #4016]
   11128:	ldr	x0, [x23]
   1112c:	cbz	x0, 11228 <__hwasan_memmove@@Base+0x27a0>
   11130:	sub	x1, x0, #0x1
   11134:	tst	x1, x0
   11138:	b.ne	11178 <__hwasan_memmove@@Base+0x26f0>  // b.any
   1113c:	neg	x23, x0
   11140:	add	x1, x28, #0xc10
   11144:	and	x23, x23, x0
   11148:	mov	w2, #0x0                   	// #0
   1114c:	mov	x0, x23
   11150:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   11154:	ldr	x1, [sp, #152]
   11158:	mov	x27, x0
   1115c:	ldr	x2, [sp, #168]
   11160:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   11164:	ldp	x0, x1, [sp, #152]
   11168:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   1116c:	stp	x27, x23, [sp, #152]
   11170:	ldr	x2, [sp, #168]
   11174:	b	110a0 <__hwasan_memmove@@Base+0x2618>
   11178:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   1117c:	add	x0, x0, #0xbf8
   11180:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   11184:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   11188:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   1118c:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   11190:	add	x2, x2, #0xb50
   11194:	add	x0, x0, #0x3a8
   11198:	mov	x4, #0x0                   	// #0
   1119c:	mov	x3, #0x0                   	// #0
   111a0:	mov	w1, #0x5f                  	// #95
   111a4:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   111a8:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   111ac:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   111b0:	mov	x3, x25
   111b4:	add	x2, x2, #0xb70
   111b8:	add	x0, x0, #0x3a8
   111bc:	mov	x4, #0x1000                	// #4096
   111c0:	mov	w1, #0x60                  	// #96
   111c4:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   111c8:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   111cc:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   111d0:	mov	x3, x25
   111d4:	add	x2, x2, #0xb98
   111d8:	add	x0, x0, #0x3a8
   111dc:	mov	x4, #0x80000               	// #524288
   111e0:	mov	w1, #0x61                  	// #97
   111e4:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   111e8:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   111ec:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   111f0:	mov	x3, x25
   111f4:	add	x2, x2, #0xbc0
   111f8:	add	x0, x0, #0x3a8
   111fc:	mov	x4, #0x0                   	// #0
   11200:	mov	w1, #0x64                  	// #100
   11204:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   11208:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   1120c:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   11210:	add	x2, x2, #0xbf8
   11214:	add	x0, x0, #0x240
   11218:	mov	x4, #0x0                   	// #0
   1121c:	mov	x3, #0x0                   	// #0
   11220:	mov	w1, #0x205                 	// #517
   11224:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   11228:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   1122c:	str	x0, [x23]
   11230:	b	11130 <__hwasan_memmove@@Base+0x26a8>
   11234:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>

0000000000011238 <__interceptor_setjmp@@Base>:
   11238:	mov	x1, #0x0                   	// #0
   1123c:	b	63c0 <__interceptor_sigsetjmp@plt>

0000000000011240 <__interceptor_sigsetjmp@@Base>:
   11240:	stp	x19, x20, [x0]
   11244:	stp	x21, x22, [x0, #16]
   11248:	stp	x23, x24, [x0, #32]
   1124c:	stp	x25, x26, [x0, #48]
   11250:	stp	x27, x28, [x0, #64]
   11254:	stp	x29, x30, [x0, #80]
   11258:	stp	d8, d9, [x0, #112]
   1125c:	stp	d10, d11, [x0, #128]
   11260:	stp	d12, d13, [x0, #144]
   11264:	stp	d14, d15, [x0, #160]
   11268:	mov	x2, sp
   1126c:	str	x2, [x0, #104]
   11270:	b	d388 <__interceptor_malloc@@Base+0x138>

0000000000011274 <__hwasan_tag_mismatch@@Base>:
   11274:	mov	x16, #0x1                   	// #1
   11278:	and	x17, x1, #0xf
   1127c:	lsl	x16, x16, x17
   11280:	and	x17, x0, #0xf
   11284:	add	x17, x16, x17
   11288:	ubfx	x16, x0, #4, #52
   1128c:	ldrb	w16, [x9, x16]
   11290:	cmp	w16, #0xf
   11294:	b.hi	112b8 <__hwasan_tag_mismatch_v2@@Base>  // b.pmore
   11298:	cmp	w16, w17
   1129c:	b.cc	112b8 <__hwasan_tag_mismatch_v2@@Base>  // b.lo, b.ul, b.last
   112a0:	orr	x16, x0, #0xf
   112a4:	ldrb	w16, [x16]
   112a8:	cmp	x16, x0, lsr #56
   112ac:	b.ne	112b8 <__hwasan_tag_mismatch_v2@@Base>  // b.any
   112b0:	ldp	x0, x1, [sp], #256
   112b4:	ret

00000000000112b8 <__hwasan_tag_mismatch_v2@@Base>:
   112b8:	add	x29, sp, #0xe8
   112bc:	str	x28, [sp, #224]
   112c0:	stp	x26, x27, [sp, #208]
   112c4:	stp	x24, x25, [sp, #192]
   112c8:	stp	x22, x23, [sp, #176]
   112cc:	stp	x20, x21, [sp, #160]
   112d0:	stp	x18, x19, [sp, #144]
   112d4:	stp	x16, x17, [sp, #128]
   112d8:	stp	x14, x15, [sp, #112]
   112dc:	stp	x12, x13, [sp, #96]
   112e0:	stp	x10, x11, [sp, #80]
   112e4:	stp	x8, x9, [sp, #64]
   112e8:	stp	x6, x7, [sp, #48]
   112ec:	stp	x4, x5, [sp, #32]
   112f0:	stp	x2, x3, [sp, #16]
   112f4:	mov	x2, sp
   112f8:	bl	6410 <__hwasan_tag_mismatch4@plt>
   112fc:	nop
   11300:	stp	x29, x30, [sp, #-64]!
   11304:	mov	x29, sp
   11308:	stp	x19, x20, [sp, #16]
   1130c:	mov	x19, x0
   11310:	bl	71d8 <__sanitizer_print_memory_profile@plt+0xb78>
   11314:	ldrb	w0, [x0, #7]
   11318:	cbnz	w0, 113d8 <__hwasan_tag_mismatch_v2@@Base+0x120>
   1131c:	ldr	w1, [x19, #2672]
   11320:	ldr	w0, [x19, #2680]
   11324:	str	w1, [x19, #48]
   11328:	cbnz	w0, 113b0 <__hwasan_tag_mismatch_v2@@Base+0xf8>
   1132c:	nop
   11330:	bl	71d8 <__sanitizer_print_memory_profile@plt+0xb78>
   11334:	ldrb	w0, [x0, #7]
   11338:	cbz	w0, 113bc <__hwasan_tag_mismatch_v2@@Base+0x104>
   1133c:	ldr	w2, [x19, #52]
   11340:	cbnz	w2, 11364 <__hwasan_tag_mismatch_v2@@Base+0xac>
   11344:	ldr	w0, [x19, #48]
   11348:	eor	w0, w0, w0, lsl #13
   1134c:	eor	w0, w0, w0, lsr #17
   11350:	lsl	w1, w0, #5
   11354:	eor	w2, w0, w1
   11358:	stp	w2, w2, [x19, #48]
   1135c:	cmp	w0, w1
   11360:	b.eq	11428 <__hwasan_tag_mismatch_v2@@Base+0x170>  // b.none
   11364:	lsr	w0, w2, #8
   11368:	str	w0, [x19, #52]
   1136c:	and	w2, w2, #0xff
   11370:	cbz	w2, 11330 <__hwasan_tag_mismatch_v2@@Base+0x78>
   11374:	ldr	x3, [x19, #2656]
   11378:	mov	w4, #0x0                   	// #0
   1137c:	ldr	x0, [x3]
   11380:	and	x0, x0, #0xffffffffffffff
   11384:	add	w1, w4, #0x1
   11388:	and	w4, w1, #0xff
   1138c:	str	xzr, [x0], #8
   11390:	cmp	w2, w1, uxtb
   11394:	ldr	x1, [x3]
   11398:	and	x5, x1, #0xff00000000000000
   1139c:	lsr	x1, x1, #56
   113a0:	bic	x0, x0, x1, lsl #12
   113a4:	orr	x0, x0, x5
   113a8:	str	x0, [x3]
   113ac:	b.ne	11380 <__hwasan_tag_mismatch_v2@@Base+0xc8>  // b.any
   113b0:	ldp	x19, x20, [sp, #16]
   113b4:	ldp	x29, x30, [sp], #64
   113b8:	ret
   113bc:	ldr	w0, [x19, #48]
   113c0:	add	w0, w0, #0x1
   113c4:	and	w2, w0, #0xff
   113c8:	and	w0, w0, #0xff
   113cc:	str	w0, [x19, #48]
   113d0:	cbz	w2, 11330 <__hwasan_tag_mismatch_v2@@Base+0x78>
   113d4:	b	11374 <__hwasan_tag_mismatch_v2@@Base+0xbc>
   113d8:	add	x20, x29, #0x3c
   113dc:	str	x21, [x29, #32]
   113e0:	lsr	x21, x29, #4
   113e4:	b	113f0 <__hwasan_tag_mismatch_v2@@Base+0x138>
   113e8:	ldr	w1, [x29, #60]
   113ec:	cbnz	w1, 11420 <__hwasan_tag_mismatch_v2@@Base+0x168>
   113f0:	mov	x0, x20
   113f4:	mov	w2, #0x0                   	// #0
   113f8:	mov	x1, #0x4                   	// #4
   113fc:	bl	1d9d0 <__sanitizer_set_report_fd@@Base+0x5b50>
   11400:	tst	w0, #0xff
   11404:	b.ne	113e8 <__hwasan_tag_mismatch_v2@@Base+0x130>  // b.any
   11408:	bl	1c480 <__sanitizer_set_report_fd@@Base+0x4600>
   1140c:	lsr	x0, x0, #12
   11410:	eor	w1, w21, w0
   11414:	str	w1, [x29, #60]
   11418:	cmp	w0, w21
   1141c:	b.eq	113f0 <__hwasan_tag_mismatch_v2@@Base+0x138>  // b.none
   11420:	ldr	x21, [x29, #32]
   11424:	b	11320 <__hwasan_tag_mismatch_v2@@Base+0x68>
   11428:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   1142c:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   11430:	add	x2, x2, #0xcb0
   11434:	add	x0, x0, #0xcd0
   11438:	mov	x4, #0x0                   	// #0
   1143c:	mov	x3, #0x0                   	// #0
   11440:	mov	w1, #0x75                  	// #117
   11444:	str	x21, [x29, #32]
   11448:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   1144c:	nop
   11450:	sub	sp, sp, #0x60
   11454:	adrp	x4, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   11458:	stp	x19, x20, [sp, #16]
   1145c:	mov	x20, x0
   11460:	mov	x19, x2
   11464:	ldr	x0, [x4, #2856]
   11468:	stp	x21, x22, [sp, #32]
   1146c:	mov	x22, x1
   11470:	str	x30, [sp, #48]
   11474:	str	x0, [x20, #2672]
   11478:	add	x0, x0, #0x1
   1147c:	str	x0, [x4, #2856]
   11480:	bl	71d8 <__sanitizer_print_memory_profile@plt+0xb78>
   11484:	ldr	w0, [x0, #28]
   11488:	cbnz	w0, 115e8 <__hwasan_tag_mismatch_v2@@Base+0x330>
   1148c:	bl	e310 <__interceptor_vfork@@Base+0xd30>
   11490:	bl	e3d8 <__interceptor_vfork@@Base+0xdf8>
   11494:	sub	x1, x19, #0x1
   11498:	tst	x1, x19
   1149c:	b.ne	11628 <__hwasan_tag_mismatch_v2@@Base+0x370>  // b.any
   114a0:	cmp	x19, #0xfff
   114a4:	b.ls	11668 <__hwasan_tag_mismatch_v2@@Base+0x3b0>  // b.plast
   114a8:	cmp	x19, #0x80, lsl #12
   114ac:	b.hi	11688 <__hwasan_tag_mismatch_v2@@Base+0x3d0>  // b.pmore
   114b0:	ands	x3, x19, #0xfff
   114b4:	b.ne	116a8 <__hwasan_tag_mismatch_v2@@Base+0x3f0>  // b.any
   114b8:	ands	x3, x19, #0x7
   114bc:	b.ne	116c4 <__hwasan_tag_mismatch_v2@@Base+0x40c>  // b.any
   114c0:	lsl	x1, x19, #1
   114c4:	udiv	x3, x22, x1
   114c8:	msub	x3, x3, x1, x22
   114cc:	cbnz	x3, 11714 <__hwasan_tag_mismatch_v2@@Base+0x45c>
   114d0:	lsr	x19, x19, #12
   114d4:	orr	x19, x22, x19, lsl #56
   114d8:	str	x19, [x0]
   114dc:	str	x0, [x20, #2656]
   114e0:	bl	e3f8 <__interceptor_vfork@@Base+0xe18>
   114e4:	cmp	x0, x20
   114e8:	b.ne	11648 <__hwasan_tag_mismatch_v2@@Base+0x390>  // b.any
   114ec:	bl	e3f8 <__interceptor_vfork@@Base+0xe18>
   114f0:	ldr	w5, [x0, #2680]
   114f4:	ldr	x1, [x20, #2672]
   114f8:	add	w5, w5, #0x1
   114fc:	str	w5, [x0, #2680]
   11500:	add	x3, x20, #0x18
   11504:	cmp	x1, #0x0
   11508:	add	x2, sp, #0x58
   1150c:	add	x1, x20, #0x10
   11510:	cset	w0, eq  // eq = none
   11514:	add	x4, sp, #0x50
   11518:	bl	23e58 <__sanitizer_sandbox_on_notify@@Base+0x810>
   1151c:	ldp	x0, x2, [x20, #16]
   11520:	ldp	x3, x1, [sp, #80]
   11524:	add	x1, x0, x1
   11528:	add	x2, x2, x3
   1152c:	str	x1, [x20, #8]
   11530:	str	x2, [x20, #32]
   11534:	cbz	x0, 11588 <__hwasan_tag_mismatch_v2@@Base+0x2d0>
   11538:	add	x2, sp, #0x4c
   1153c:	cmp	x1, x2
   11540:	ccmp	x0, x2, #0x2, hi  // hi = pmore
   11544:	b.ls	11568 <__hwasan_tag_mismatch_v2@@Base+0x2b0>  // b.plast
   11548:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   1154c:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   11550:	add	x2, x2, #0xd90
   11554:	add	x0, x0, #0xcd0
   11558:	mov	x4, #0x0                   	// #0
   1155c:	mov	x3, #0x0                   	// #0
   11560:	mov	w1, #0x3f                  	// #63
   11564:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   11568:	bl	dfd8 <__interceptor_vfork@@Base+0x9f8>
   1156c:	tst	w0, #0xff
   11570:	b.eq	11750 <__hwasan_tag_mismatch_v2@@Base+0x498>  // b.none
   11574:	ldr	x0, [x20, #8]
   11578:	sub	x0, x0, #0x1
   1157c:	bl	dfd8 <__interceptor_vfork@@Base+0x9f8>
   11580:	tst	w0, #0xff
   11584:	b.eq	11730 <__hwasan_tag_mismatch_v2@@Base+0x478>  // b.none
   11588:	bl	71d8 <__sanitizer_print_memory_profile@plt+0xb78>
   1158c:	ldrb	w0, [x0]
   11590:	cbz	w0, 115c4 <__hwasan_tag_mismatch_v2@@Base+0x30c>
   11594:	ldr	x2, [x20, #2672]
   11598:	cbz	x2, 116e0 <__hwasan_tag_mismatch_v2@@Base+0x428>
   1159c:	ldp	x5, x4, [x20, #8]
   115a0:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   115a4:	ldp	x7, x0, [x20, #24]
   115a8:	str	x0, [sp]
   115ac:	add	x1, x1, #0xe48
   115b0:	mov	x3, x20
   115b4:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   115b8:	sub	x6, x5, x4
   115bc:	add	x0, x0, #0xe58
   115c0:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   115c4:	bl	e3f8 <__interceptor_vfork@@Base+0xe18>
   115c8:	ldr	w1, [x0, #2680]
   115cc:	ldp	x19, x20, [sp, #16]
   115d0:	sub	w1, w1, #0x1
   115d4:	ldp	x21, x22, [sp, #32]
   115d8:	ldr	x30, [sp, #48]
   115dc:	str	w1, [x0, #2680]
   115e0:	add	sp, sp, #0x60
   115e4:	ret
   115e8:	mov	w21, #0x18                  	// #24
   115ec:	mov	w2, #0x0                   	// #0
   115f0:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   115f4:	add	x1, x1, #0xd18
   115f8:	smull	x21, w0, w21
   115fc:	add	x0, x21, #0x10
   11600:	sub	x21, x21, #0x8
   11604:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   11608:	add	x21, x0, x21
   1160c:	stp	x21, x21, [x0]
   11610:	str	x0, [x20, #2648]
   11614:	bl	e310 <__interceptor_vfork@@Base+0xd30>
   11618:	bl	e3d8 <__interceptor_vfork@@Base+0xdf8>
   1161c:	sub	x1, x19, #0x1
   11620:	tst	x1, x19
   11624:	b.eq	114a0 <__hwasan_tag_mismatch_v2@@Base+0x1e8>  // b.none
   11628:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   1162c:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   11630:	add	x2, x2, #0xb50
   11634:	add	x0, x0, #0x3a8
   11638:	mov	x4, #0x0                   	// #0
   1163c:	mov	x3, #0x0                   	// #0
   11640:	mov	w1, #0x5f                  	// #95
   11644:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   11648:	mov	x3, x0
   1164c:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   11650:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   11654:	mov	x4, x20
   11658:	add	x2, x2, #0xd68
   1165c:	add	x0, x0, #0xcd0
   11660:	mov	w1, #0x31                  	// #49
   11664:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   11668:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   1166c:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   11670:	mov	x3, x19
   11674:	add	x2, x2, #0xb70
   11678:	add	x0, x0, #0x3a8
   1167c:	mov	x4, #0x1000                	// #4096
   11680:	mov	w1, #0x60                  	// #96
   11684:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   11688:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   1168c:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   11690:	mov	x3, x19
   11694:	add	x2, x2, #0xb98
   11698:	add	x0, x0, #0x3a8
   1169c:	mov	x4, #0x80000               	// #524288
   116a0:	mov	w1, #0x61                  	// #97
   116a4:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   116a8:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   116ac:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   116b0:	add	x2, x2, #0xd28
   116b4:	add	x0, x0, #0x3a8
   116b8:	mov	x4, #0x0                   	// #0
   116bc:	mov	w1, #0x62                  	// #98
   116c0:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   116c4:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   116c8:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   116cc:	add	x2, x2, #0xd48
   116d0:	add	x0, x0, #0x3a8
   116d4:	mov	x4, #0x0                   	// #0
   116d8:	mov	w1, #0x63                  	// #99
   116dc:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   116e0:	ldr	x4, [x20, #2648]
   116e4:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   116e8:	ldr	x3, [x20, #2656]
   116ec:	add	x0, x0, #0xe08
   116f0:	ldr	x2, [x4], #16
   116f4:	mov	x1, #0xa80                 	// #2688
   116f8:	ldrb	w3, [x3, #7]
   116fc:	sub	x2, x2, x4
   11700:	add	x2, x2, #0x28
   11704:	lsl	x3, x3, #12
   11708:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   1170c:	ldr	x2, [x20, #2672]
   11710:	b	1159c <__hwasan_tag_mismatch_v2@@Base+0x2e4>
   11714:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   11718:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   1171c:	add	x2, x2, #0xbc0
   11720:	add	x0, x0, #0x3a8
   11724:	mov	x4, #0x0                   	// #0
   11728:	mov	w1, #0x64                  	// #100
   1172c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   11730:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   11734:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   11738:	add	x2, x2, #0xde0
   1173c:	add	x0, x0, #0xcd0
   11740:	mov	x4, #0x0                   	// #0
   11744:	mov	x3, #0x0                   	// #0
   11748:	mov	w1, #0x41                  	// #65
   1174c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   11750:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   11754:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   11758:	add	x2, x2, #0xdb8
   1175c:	add	x0, x0, #0xcd0
   11760:	mov	x4, #0x0                   	// #0
   11764:	mov	x3, #0x0                   	// #0
   11768:	mov	w1, #0x40                  	// #64
   1176c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   11770:	stp	x19, x30, [sp, #-16]!
   11774:	mov	x19, x0
   11778:	ldp	x1, x0, [x0, #8]
   1177c:	cmp	x1, x0
   11780:	b.eq	11790 <__hwasan_tag_mismatch_v2@@Base+0x4d8>  // b.none
   11784:	sub	x1, x1, x0
   11788:	mov	w2, #0x0                   	// #0
   1178c:	bl	ed00 <__hwasan_memmove@@Base+0x278>
   11790:	ldp	x0, x1, [x19, #24]
   11794:	cmp	x0, x1
   11798:	b.ne	117a4 <__hwasan_tag_mismatch_v2@@Base+0x4ec>  // b.any
   1179c:	ldp	x19, x30, [sp], #16
   117a0:	ret
   117a4:	ldp	x19, x30, [sp], #16
   117a8:	sub	x1, x1, x0
   117ac:	mov	w2, #0x0                   	// #0
   117b0:	b	ed00 <__hwasan_memmove@@Base+0x278>
   117b4:	nop
   117b8:	sub	sp, sp, #0x20
   117bc:	stp	x19, x30, [sp, #16]
   117c0:	mov	x19, x0
   117c4:	bl	71d8 <__sanitizer_print_memory_profile@plt+0xb78>
   117c8:	ldrb	w0, [x0]
   117cc:	cbnz	w0, 11830 <__hwasan_tag_mismatch_v2@@Base+0x578>
   117d0:	add	x0, x19, #0x38
   117d4:	bl	9f80 <__sanitizer_get_allocated_size@@Base+0xd10>
   117d8:	ldp	x1, x0, [x19, #8]
   117dc:	cmp	x1, x0
   117e0:	b.eq	117f0 <__hwasan_tag_mismatch_v2@@Base+0x538>  // b.none
   117e4:	sub	x1, x1, x0
   117e8:	mov	w2, #0x0                   	// #0
   117ec:	bl	ed00 <__hwasan_memmove@@Base+0x278>
   117f0:	ldp	x0, x1, [x19, #24]
   117f4:	cmp	x0, x1
   117f8:	b.eq	11808 <__hwasan_tag_mismatch_v2@@Base+0x550>  // b.none
   117fc:	sub	x1, x1, x0
   11800:	mov	w2, #0x0                   	// #0
   11804:	bl	ed00 <__hwasan_memmove@@Base+0x278>
   11808:	ldr	x1, [x19, #2648]
   1180c:	cbz	x1, 11824 <__hwasan_tag_mismatch_v2@@Base+0x56c>
   11810:	mov	x0, x1
   11814:	ldr	x2, [x1], #16
   11818:	sub	x1, x2, x1
   1181c:	add	x1, x1, #0x28
   11820:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   11824:	ldp	x19, x30, [sp, #16]
   11828:	add	sp, sp, #0x20
   1182c:	b	216f8 <__sanitizer_on_print@@Base+0x1dd8>
   11830:	ldp	x5, x4, [x19, #8]
   11834:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   11838:	ldp	x7, x3, [x19, #24]
   1183c:	add	x1, x1, #0xe88
   11840:	ldr	x2, [x19, #2672]
   11844:	str	x3, [sp]
   11848:	sub	x6, x5, x4
   1184c:	mov	x3, x19
   11850:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   11854:	add	x0, x0, #0xe58
   11858:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   1185c:	b	117d0 <__hwasan_tag_mismatch_v2@@Base+0x518>
   11860:	mov	x3, x0
   11864:	sub	sp, sp, #0x20
   11868:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   1186c:	add	x0, x2, #0xe58
   11870:	ldp	x5, x4, [x3, #8]
   11874:	ldp	x7, x6, [x3, #24]
   11878:	ldr	x2, [x3, #2672]
   1187c:	str	x6, [sp]
   11880:	sub	x6, x5, x4
   11884:	str	x30, [sp, #16]
   11888:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   1188c:	ldr	x30, [sp, #16]
   11890:	add	sp, sp, #0x20
   11894:	ret
   11898:	stp	x19, x30, [sp, #-16]!
   1189c:	mov	x19, x0
   118a0:	ldr	w0, [x0, #2680]
   118a4:	cbnz	w0, 11910 <__hwasan_tag_mismatch_v2@@Base+0x658>
   118a8:	bl	71d8 <__sanitizer_print_memory_profile@plt+0xb78>
   118ac:	ldrb	w0, [x0, #7]
   118b0:	cbz	w0, 118f4 <__hwasan_tag_mismatch_v2@@Base+0x63c>
   118b4:	ldr	w1, [x19, #52]
   118b8:	cbnz	w1, 118dc <__hwasan_tag_mismatch_v2@@Base+0x624>
   118bc:	ldr	w0, [x19, #48]
   118c0:	eor	w0, w0, w0, lsl #13
   118c4:	eor	w0, w0, w0, lsr #17
   118c8:	lsl	w2, w0, #5
   118cc:	eor	w1, w0, w2
   118d0:	stp	w1, w1, [x19, #48]
   118d4:	cmp	w0, w2
   118d8:	b.eq	1191c <__hwasan_tag_mismatch_v2@@Base+0x664>  // b.none
   118dc:	lsr	w2, w1, #8
   118e0:	str	w2, [x19, #52]
   118e4:	and	w0, w1, #0xff
   118e8:	cbz	w0, 118a8 <__hwasan_tag_mismatch_v2@@Base+0x5f0>
   118ec:	ldp	x19, x30, [sp], #16
   118f0:	ret
   118f4:	ldr	w1, [x19, #48]
   118f8:	add	w1, w1, #0x1
   118fc:	and	w0, w1, #0xff
   11900:	and	w1, w1, #0xff
   11904:	str	w1, [x19, #48]
   11908:	cbz	w0, 118a8 <__hwasan_tag_mismatch_v2@@Base+0x5f0>
   1190c:	b	118ec <__hwasan_tag_mismatch_v2@@Base+0x634>
   11910:	mov	w0, #0x0                   	// #0
   11914:	ldp	x19, x30, [sp], #16
   11918:	ret
   1191c:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   11920:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   11924:	add	x2, x2, #0xcb0
   11928:	add	x0, x0, #0xcd0
   1192c:	mov	x4, #0x0                   	// #0
   11930:	mov	x3, #0x0                   	// #0
   11934:	mov	w1, #0x75                  	// #117
   11938:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   1193c:	nop
   11940:	adrp	x0, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   11944:	ldr	x0, [x0, #2864]
   11948:	ret
   1194c:	nop
   11950:	stp	x19, x30, [sp, #-16]!
   11954:	adrp	x19, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   11958:	ldr	x2, [x19, #2864]
   1195c:	cbnz	x2, 119ec <__hwasan_tag_mismatch_v2@@Base+0x734>
   11960:	add	x3, x19, #0xb30
   11964:	add	x1, x0, x1
   11968:	strb	wzr, [x3, #64]
   1196c:	stp	x0, x1, [x3, #16]
   11970:	stp	xzr, xzr, [x3, #48]
   11974:	strb	wzr, [x3, #88]
   11978:	bl	71d8 <__sanitizer_print_memory_profile@plt+0xb78>
   1197c:	ldrsw	x0, [x0, #36]
   11980:	lsl	x0, x0, #3
   11984:	cmp	x0, #0x2, lsl #12
   11988:	b.ls	11a0c <__hwasan_tag_mismatch_v2@@Base+0x754>  // b.plast
   1198c:	cmp	x0, #0x4, lsl #12
   11990:	b.ls	11a3c <__hwasan_tag_mismatch_v2@@Base+0x784>  // b.plast
   11994:	cmp	x0, #0x8, lsl #12
   11998:	b.ls	11a44 <__hwasan_tag_mismatch_v2@@Base+0x78c>  // b.plast
   1199c:	cmp	x0, #0x10, lsl #12
   119a0:	b.ls	11a4c <__hwasan_tag_mismatch_v2@@Base+0x794>  // b.plast
   119a4:	cmp	x0, #0x20, lsl #12
   119a8:	b.ls	11a54 <__hwasan_tag_mismatch_v2@@Base+0x79c>  // b.plast
   119ac:	cmp	x0, #0x40, lsl #12
   119b0:	b.ls	11a5c <__hwasan_tag_mismatch_v2@@Base+0x7a4>  // b.plast
   119b4:	bl	71d8 <__sanitizer_print_memory_profile@plt+0xb78>
   119b8:	mov	x1, x0
   119bc:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   119c0:	add	x0, x0, #0xf18
   119c4:	ldr	w1, [x1, #36]
   119c8:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   119cc:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   119d0:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   119d4:	add	x2, x2, #0xf40
   119d8:	add	x0, x0, #0x928
   119dc:	mov	x4, #0x0                   	// #0
   119e0:	mov	x3, #0x0                   	// #0
   119e4:	mov	w1, #0x41                  	// #65
   119e8:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   119ec:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   119f0:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   119f4:	add	x2, x2, #0xe98
   119f8:	add	x0, x0, #0xec8
   119fc:	mov	x4, #0x0                   	// #0
   11a00:	mov	x3, #0x0                   	// #0
   11a04:	mov	w1, #0xa                   	// #10
   11a08:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   11a0c:	mov	x3, #0x2000                	// #8192
   11a10:	add	x0, x19, #0xb30
   11a14:	lsl	x2, x3, #1
   11a18:	add	x0, x0, #0x10
   11a1c:	add	x1, x3, #0xa7f
   11a20:	add	x1, x1, x2
   11a24:	neg	x2, x2
   11a28:	and	x1, x1, x2
   11a2c:	str	x0, [x19, #2864]
   11a30:	stp	x3, x1, [x0, #16]
   11a34:	ldp	x19, x30, [sp], #16
   11a38:	ret
   11a3c:	mov	x3, #0x4000                	// #16384
   11a40:	b	11a10 <__hwasan_tag_mismatch_v2@@Base+0x758>
   11a44:	mov	x3, #0x8000                	// #32768
   11a48:	b	11a10 <__hwasan_tag_mismatch_v2@@Base+0x758>
   11a4c:	mov	x3, #0x10000               	// #65536
   11a50:	b	11a10 <__hwasan_tag_mismatch_v2@@Base+0x758>
   11a54:	mov	x3, #0x20000               	// #131072
   11a58:	b	11a10 <__hwasan_tag_mismatch_v2@@Base+0x758>
   11a5c:	mov	x3, #0x40000               	// #262144
   11a60:	b	11a10 <__hwasan_tag_mismatch_v2@@Base+0x758>
   11a64:	nop

0000000000011a68 <_Znwm@@Base>:
   11a68:	sub	sp, sp, #0x840
   11a6c:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   11a70:	stp	x29, x30, [sp]
   11a74:	mov	x29, sp
   11a78:	ldr	x1, [x1, #3904]
   11a7c:	stp	x19, x20, [sp, #16]
   11a80:	mov	x19, x0
   11a84:	add	x20, x29, #0x28
   11a88:	str	xzr, [x29, #48]
   11a8c:	ldr	w0, [x1]
   11a90:	add	x2, x20, #0x10
   11a94:	str	x2, [x29, #40]
   11a98:	str	xzr, [x29, #2104]
   11a9c:	cbnz	w0, 11ac0 <_Znwm@@Base+0x58>
   11aa0:	mov	x1, x20
   11aa4:	mov	x0, x19
   11aa8:	bl	99f8 <__sanitizer_get_allocated_size@@Base+0x788>
   11aac:	cbz	x0, 11b08 <_Znwm@@Base+0xa0>
   11ab0:	ldp	x29, x30, [sp]
   11ab4:	ldp	x19, x20, [sp, #16]
   11ab8:	add	sp, sp, #0x840
   11abc:	ret
   11ac0:	bl	27c78 <__sanitizer_cov_dump@@Base+0x1058>
   11ac4:	mov	x1, x0
   11ac8:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   11acc:	ldr	x2, [x2, #4056]
   11ad0:	ldr	w5, [x2, #36]
   11ad4:	cbz	w5, 11b14 <_Znwm@@Base+0xac>
   11ad8:	str	x29, [x29, #2104]
   11adc:	cmp	w5, #0x1
   11ae0:	ldrb	w4, [x2, #34]
   11ae4:	b.eq	11b20 <_Znwm@@Base+0xb8>  // b.none
   11ae8:	mov	x2, x29
   11aec:	mov	x3, #0x0                   	// #0
   11af0:	mov	x0, x20
   11af4:	bl	7238 <__sanitizer_print_memory_profile@plt+0xbd8>
   11af8:	mov	x1, x20
   11afc:	mov	x0, x19
   11b00:	bl	99f8 <__sanitizer_get_allocated_size@@Base+0x788>
   11b04:	cbnz	x0, 11ab0 <_Znwm@@Base+0x48>
   11b08:	mov	x1, x20
   11b0c:	mov	x0, x19
   11b10:	bl	26fb8 <__sanitizer_cov_dump@@Base+0x398>
   11b14:	str	w5, [x29, #48]
   11b18:	str	xzr, [x29, #2104]
   11b1c:	b	11aa0 <_Znwm@@Base+0x38>
   11b20:	str	w5, [x29, #48]
   11b24:	str	x0, [x29, #56]
   11b28:	b	11aa0 <_Znwm@@Base+0x38>
   11b2c:	nop

0000000000011b30 <_Znam@@Base>:
   11b30:	b	11a68 <_Znwm@@Base>
   11b34:	nop

0000000000011b38 <_ZnwmRKSt9nothrow_t@@Base>:
   11b38:	sub	sp, sp, #0x840
   11b3c:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   11b40:	stp	x29, x30, [sp]
   11b44:	mov	x29, sp
   11b48:	ldr	x1, [x1, #3904]
   11b4c:	stp	x19, x20, [sp, #16]
   11b50:	mov	x19, x0
   11b54:	add	x20, x29, #0x28
   11b58:	str	xzr, [x29, #48]
   11b5c:	ldr	w0, [x1]
   11b60:	add	x2, x20, #0x10
   11b64:	str	x2, [x29, #40]
   11b68:	str	xzr, [x29, #2104]
   11b6c:	cbnz	w0, 11b8c <_ZnwmRKSt9nothrow_t@@Base+0x54>
   11b70:	mov	x1, x20
   11b74:	mov	x0, x19
   11b78:	bl	99f8 <__sanitizer_get_allocated_size@@Base+0x788>
   11b7c:	ldp	x29, x30, [sp]
   11b80:	ldp	x19, x20, [sp, #16]
   11b84:	add	sp, sp, #0x840
   11b88:	ret
   11b8c:	bl	27c78 <__sanitizer_cov_dump@@Base+0x1058>
   11b90:	mov	x1, x0
   11b94:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   11b98:	ldr	x2, [x2, #4056]
   11b9c:	ldr	w5, [x2, #36]
   11ba0:	cbz	w5, 11be0 <_ZnwmRKSt9nothrow_t@@Base+0xa8>
   11ba4:	str	x29, [x29, #2104]
   11ba8:	cmp	w5, #0x1
   11bac:	ldrb	w4, [x2, #34]
   11bb0:	b.eq	11c04 <_ZnwmRKSt9nothrow_t@@Base+0xcc>  // b.none
   11bb4:	mov	x2, x29
   11bb8:	mov	x3, #0x0                   	// #0
   11bbc:	mov	x0, x20
   11bc0:	bl	7238 <__sanitizer_print_memory_profile@plt+0xbd8>
   11bc4:	mov	x1, x20
   11bc8:	mov	x0, x19
   11bcc:	bl	99f8 <__sanitizer_get_allocated_size@@Base+0x788>
   11bd0:	ldp	x29, x30, [sp]
   11bd4:	ldp	x19, x20, [sp, #16]
   11bd8:	add	sp, sp, #0x840
   11bdc:	ret
   11be0:	str	w5, [x29, #48]
   11be4:	str	xzr, [x29, #2104]
   11be8:	mov	x1, x20
   11bec:	mov	x0, x19
   11bf0:	bl	99f8 <__sanitizer_get_allocated_size@@Base+0x788>
   11bf4:	ldp	x29, x30, [sp]
   11bf8:	ldp	x19, x20, [sp, #16]
   11bfc:	add	sp, sp, #0x840
   11c00:	ret
   11c04:	str	w5, [x29, #48]
   11c08:	str	x0, [x29, #56]
   11c0c:	b	11be8 <_ZnwmRKSt9nothrow_t@@Base+0xb0>

0000000000011c10 <_ZnamRKSt9nothrow_t@@Base>:
   11c10:	b	11b38 <_ZnwmRKSt9nothrow_t@@Base>
   11c14:	nop

0000000000011c18 <_ZdlPv@@Base>:
   11c18:	sub	sp, sp, #0x840
   11c1c:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   11c20:	stp	x29, x30, [sp]
   11c24:	mov	x29, sp
   11c28:	ldr	x1, [x1, #3904]
   11c2c:	stp	x19, x20, [sp, #16]
   11c30:	mov	x19, x0
   11c34:	add	x20, x29, #0x28
   11c38:	str	xzr, [x29, #48]
   11c3c:	ldr	w0, [x1]
   11c40:	add	x2, x20, #0x10
   11c44:	str	x2, [x29, #40]
   11c48:	str	xzr, [x29, #2104]
   11c4c:	cbnz	w0, 11c70 <_ZdlPv@@Base+0x58>
   11c50:	cbz	x19, 11c60 <_ZdlPv@@Base+0x48>
   11c54:	mov	x1, x20
   11c58:	mov	x0, x19
   11c5c:	bl	a9a0 <__sanitizer_get_allocated_size@@Base+0x1730>
   11c60:	ldp	x29, x30, [sp]
   11c64:	ldp	x19, x20, [sp, #16]
   11c68:	add	sp, sp, #0x840
   11c6c:	ret
   11c70:	bl	27c78 <__sanitizer_cov_dump@@Base+0x1058>
   11c74:	mov	x1, x0
   11c78:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   11c7c:	ldr	x2, [x2, #4056]
   11c80:	ldr	w5, [x2, #36]
   11c84:	cbz	w5, 11cac <_ZdlPv@@Base+0x94>
   11c88:	str	x29, [x29, #2104]
   11c8c:	cmp	w5, #0x1
   11c90:	ldrb	w4, [x2, #34]
   11c94:	b.eq	11cb8 <_ZdlPv@@Base+0xa0>  // b.none
   11c98:	mov	x2, x29
   11c9c:	mov	x0, x20
   11ca0:	mov	x3, #0x0                   	// #0
   11ca4:	bl	7238 <__sanitizer_print_memory_profile@plt+0xbd8>
   11ca8:	b	11c50 <_ZdlPv@@Base+0x38>
   11cac:	str	w5, [x29, #48]
   11cb0:	str	xzr, [x29, #2104]
   11cb4:	b	11c50 <_ZdlPv@@Base+0x38>
   11cb8:	str	w5, [x29, #48]
   11cbc:	str	x0, [x29, #56]
   11cc0:	b	11c50 <_ZdlPv@@Base+0x38>
   11cc4:	nop

0000000000011cc8 <_ZdaPv@@Base>:
   11cc8:	b	11c18 <_ZdlPv@@Base>
   11ccc:	nop

0000000000011cd0 <_ZdlPvRKSt9nothrow_t@@Base>:
   11cd0:	sub	sp, sp, #0x840
   11cd4:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   11cd8:	stp	x29, x30, [sp]
   11cdc:	mov	x29, sp
   11ce0:	ldr	x1, [x1, #3904]
   11ce4:	stp	x19, x20, [sp, #16]
   11ce8:	mov	x19, x0
   11cec:	add	x20, x29, #0x28
   11cf0:	str	xzr, [x29, #48]
   11cf4:	ldr	w0, [x1]
   11cf8:	add	x2, x20, #0x10
   11cfc:	str	x2, [x29, #40]
   11d00:	str	xzr, [x29, #2104]
   11d04:	cbnz	w0, 11d28 <_ZdlPvRKSt9nothrow_t@@Base+0x58>
   11d08:	cbz	x19, 11d18 <_ZdlPvRKSt9nothrow_t@@Base+0x48>
   11d0c:	mov	x1, x20
   11d10:	mov	x0, x19
   11d14:	bl	a9a0 <__sanitizer_get_allocated_size@@Base+0x1730>
   11d18:	ldp	x29, x30, [sp]
   11d1c:	ldp	x19, x20, [sp, #16]
   11d20:	add	sp, sp, #0x840
   11d24:	ret
   11d28:	bl	27c78 <__sanitizer_cov_dump@@Base+0x1058>
   11d2c:	mov	x1, x0
   11d30:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   11d34:	ldr	x2, [x2, #4056]
   11d38:	ldr	w5, [x2, #36]
   11d3c:	cbz	w5, 11d64 <_ZdlPvRKSt9nothrow_t@@Base+0x94>
   11d40:	str	x29, [x29, #2104]
   11d44:	cmp	w5, #0x1
   11d48:	ldrb	w4, [x2, #34]
   11d4c:	b.eq	11d70 <_ZdlPvRKSt9nothrow_t@@Base+0xa0>  // b.none
   11d50:	mov	x2, x29
   11d54:	mov	x0, x20
   11d58:	mov	x3, #0x0                   	// #0
   11d5c:	bl	7238 <__sanitizer_print_memory_profile@plt+0xbd8>
   11d60:	b	11d08 <_ZdlPvRKSt9nothrow_t@@Base+0x38>
   11d64:	str	w5, [x29, #48]
   11d68:	str	xzr, [x29, #2104]
   11d6c:	b	11d08 <_ZdlPvRKSt9nothrow_t@@Base+0x38>
   11d70:	str	w5, [x29, #48]
   11d74:	str	x0, [x29, #56]
   11d78:	b	11d08 <_ZdlPvRKSt9nothrow_t@@Base+0x38>
   11d7c:	nop

0000000000011d80 <_ZdaPvRKSt9nothrow_t@@Base>:
   11d80:	b	11cd0 <_ZdlPvRKSt9nothrow_t@@Base>
   11d84:	nop
   11d88:	stp	x19, x20, [sp, #-48]!
   11d8c:	mov	x19, x3
   11d90:	mov	x20, x0
   11d94:	stp	x21, x22, [sp, #16]
   11d98:	mov	x22, x2
   11d9c:	mov	x21, x1
   11da0:	mov	x1, x0
   11da4:	mov	x0, #0xffffffffffffffff    	// #-1
   11da8:	str	x30, [sp, #32]
   11dac:	bl	62e0 <dlsym@plt>
   11db0:	cmp	x19, x22
   11db4:	mov	x2, x0
   11db8:	cset	w22, eq  // eq = none
   11dbc:	cbz	x0, 11dd8 <_ZdaPvRKSt9nothrow_t@@Base+0x58>
   11dc0:	ldr	x30, [sp, #32]
   11dc4:	str	x2, [x21]
   11dc8:	mov	w0, w22
   11dcc:	ldp	x21, x22, [sp, #16]
   11dd0:	ldp	x19, x20, [sp], #48
   11dd4:	ret
   11dd8:	mov	x1, x20
   11ddc:	bl	62e0 <dlsym@plt>
   11de0:	mov	x2, x0
   11de4:	cmp	x19, x0
   11de8:	b.eq	11e0c <_ZdaPvRKSt9nothrow_t@@Base+0x8c>  // b.none
   11dec:	cmp	x0, #0x0
   11df0:	ldr	x30, [sp, #32]
   11df4:	str	x2, [x21]
   11df8:	csel	w22, w22, wzr, ne  // ne = any
   11dfc:	mov	w0, w22
   11e00:	ldp	x21, x22, [sp, #16]
   11e04:	ldp	x19, x20, [sp], #48
   11e08:	ret
   11e0c:	mov	w22, #0x0                   	// #0
   11e10:	mov	x2, #0x0                   	// #0
   11e14:	b	11dc0 <_ZdaPvRKSt9nothrow_t@@Base+0x40>
   11e18:	stp	x19, x20, [sp, #-32]!
   11e1c:	mov	x5, x1
   11e20:	mov	x20, x3
   11e24:	stp	x21, x30, [sp, #16]
   11e28:	mov	x21, x2
   11e2c:	mov	x19, x4
   11e30:	mov	x1, x0
   11e34:	mov	x2, x5
   11e38:	mov	x0, #0xffffffffffffffff    	// #-1
   11e3c:	bl	6260 <dlvsym@plt>
   11e40:	cmp	x0, #0x0
   11e44:	str	x0, [x21]
   11e48:	ccmp	x20, x19, #0x0, ne  // ne = any
   11e4c:	cset	w0, eq  // eq = none
   11e50:	ldp	x21, x30, [sp, #16]
   11e54:	ldp	x19, x20, [sp], #32
   11e58:	ret
   11e5c:	nop
   11e60:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   11e64:	mov	x2, x0
   11e68:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   11e6c:	add	x0, x0, #0xf50
   11e70:	ldr	x1, [x1, #4024]
   11e74:	adrp	x3, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   11e78:	mov	w4, #0x1                   	// #1
   11e7c:	str	x30, [sp, #-16]!
   11e80:	strb	w4, [x3, #3008]
   11e84:	ldr	x1, [x1]
   11e88:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   11e8c:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   11e90:	stp	x19, x20, [sp, #-48]!
   11e94:	adrp	x19, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   11e98:	add	x0, x19, #0xbc0
   11e9c:	add	x0, x0, #0x8
   11ea0:	mov	w2, #0x1                   	// #1
   11ea4:	str	x30, [sp, #32]
   11ea8:	ldxrb	w1, [x0]
   11eac:	stxrb	w3, w2, [x0]
   11eb0:	cbnz	w3, 11ea8 <_ZdaPvRKSt9nothrow_t@@Base+0x128>
   11eb4:	dmb	ish
   11eb8:	tst	w1, #0xff
   11ebc:	b.eq	11ec4 <_ZdaPvRKSt9nothrow_t@@Base+0x144>  // b.none
   11ec0:	bl	85d8 <__sanitizer_print_stack_trace@@Base+0x300>
   11ec4:	add	x0, x19, #0xbc0
   11ec8:	ldrb	w0, [x0, #16]
   11ecc:	tst	w0, #0xff
   11ed0:	b.eq	11eec <_ZdaPvRKSt9nothrow_t@@Base+0x16c>  // b.none
   11ed4:	dmb	ish
   11ed8:	add	x19, x19, #0xbc0
   11edc:	strb	wzr, [x19, #8]
   11ee0:	ldr	x30, [sp, #32]
   11ee4:	ldp	x19, x20, [sp], #48
   11ee8:	ret
   11eec:	mov	x2, #0x28                  	// #40
   11ef0:	mov	w1, #0x0                   	// #0
   11ef4:	adrp	x20, 6d000 <__hwasan_shadow_memory_dynamic_address@@Base+0x102e0>
   11ef8:	stp	x21, x22, [sp, #16]
   11efc:	add	x21, x20, #0x440
   11f00:	adrp	x22, 12e000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd12e0>
   11f04:	add	x0, x22, #0x448
   11f08:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   11f0c:	add	x22, x22, #0x448
   11f10:	add	x3, x21, #0xc0, lsl #12
   11f14:	mov	x0, x21
   11f18:	add	x21, x21, #0x80, lsl #12
   11f1c:	mov	x2, #0x80000               	// #524288
   11f20:	mov	w1, #0x0                   	// #0
   11f24:	str	x22, [x3, #4104]
   11f28:	str	x22, [x3, #4112]
   11f2c:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   11f30:	strb	wzr, [x21]
   11f34:	mov	x2, #0xd80                 	// #3456
   11f38:	mov	w1, #0x0                   	// #0
   11f3c:	adrp	x0, ed000 <__hwasan_shadow_memory_dynamic_address@@Base+0x902e0>
   11f40:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   11f44:	add	x0, x0, #0x480
   11f48:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   11f4c:	mov	x2, #0x248                 	// #584
   11f50:	adrp	x0, ee000 <__hwasan_shadow_memory_dynamic_address@@Base+0x912e0>
   11f54:	movk	x2, #0x4, lsl #16
   11f58:	add	x0, x0, #0x200
   11f5c:	mov	w1, #0x0                   	// #0
   11f60:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   11f64:	ldr	x21, [x21, #4016]
   11f68:	ldr	x0, [x21]
   11f6c:	cbz	x0, 11fb4 <_ZdaPvRKSt9nothrow_t@@Base+0x234>
   11f70:	add	x20, x20, #0x440
   11f74:	adrp	x1, ee000 <__hwasan_shadow_memory_dynamic_address@@Base+0x912e0>
   11f78:	add	x20, x20, #0x80, lsl #12
   11f7c:	add	x1, x1, #0x210
   11f80:	str	x0, [x20, #3520]
   11f84:	str	x1, [x20, #3528]
   11f88:	dmb	ish
   11f8c:	add	x0, x19, #0xbc0
   11f90:	mov	w1, #0x1                   	// #1
   11f94:	strb	w1, [x0, #16]
   11f98:	ldp	x21, x22, [sp, #16]
   11f9c:	dmb	ish
   11fa0:	add	x19, x19, #0xbc0
   11fa4:	strb	wzr, [x19, #8]
   11fa8:	ldr	x30, [sp, #32]
   11fac:	ldp	x19, x20, [sp], #48
   11fb0:	ret
   11fb4:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   11fb8:	str	x0, [x21]
   11fbc:	b	11f70 <_ZdaPvRKSt9nothrow_t@@Base+0x1f0>
   11fc0:	adrp	x0, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   11fc4:	add	x0, x0, #0xbc0
   11fc8:	ldrb	w0, [x0, #16]
   11fcc:	dmb	ish
   11fd0:	and	w0, w0, #0xff
   11fd4:	cbz	w0, 11fe4 <_ZdaPvRKSt9nothrow_t@@Base+0x264>
   11fd8:	adrp	x0, 6d000 <__hwasan_shadow_memory_dynamic_address@@Base+0x102e0>
   11fdc:	add	x0, x0, #0x440
   11fe0:	ret
   11fe4:	str	x30, [sp, #-16]!
   11fe8:	bl	11e90 <_ZdaPvRKSt9nothrow_t@@Base+0x110>
   11fec:	adrp	x0, 6d000 <__hwasan_shadow_memory_dynamic_address@@Base+0x102e0>
   11ff0:	add	x0, x0, #0x440
   11ff4:	ldr	x30, [sp], #16
   11ff8:	ret
   11ffc:	nop
   12000:	adrp	x2, 5a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x26398>
   12004:	stp	x19, x20, [sp, #-32]!
   12008:	mov	x20, x0
   1200c:	ldr	x0, [x2, #616]
   12010:	str	x30, [sp, #24]
   12014:	sub	x19, x0, #0x1
   12018:	tst	x0, x19
   1201c:	b.ne	120d4 <_ZdaPvRKSt9nothrow_t@@Base+0x354>  // b.any
   12020:	ldp	x3, x2, [x20]
   12024:	add	x1, x1, x19
   12028:	neg	x19, x0
   1202c:	and	x19, x1, x19
   12030:	sub	x0, x3, x2
   12034:	cmp	x0, x19
   12038:	b.ge	120b0 <_ZdaPvRKSt9nothrow_t@@Base+0x330>  // b.tcont
   1203c:	str	x21, [sp, #16]
   12040:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   12044:	ldr	x21, [x21, #4016]
   12048:	ldr	x0, [x21]
   1204c:	cbz	x0, 120c8 <_ZdaPvRKSt9nothrow_t@@Base+0x348>
   12050:	sub	x1, x0, #0x1
   12054:	tst	x1, x0
   12058:	b.ne	120d8 <_ZdaPvRKSt9nothrow_t@@Base+0x358>  // b.any
   1205c:	add	x1, x19, x1
   12060:	neg	x0, x0
   12064:	and	x21, x1, x0
   12068:	mov	w2, #0x0                   	// #0
   1206c:	mov	x0, x21
   12070:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   12074:	add	x1, x1, #0xfa0
   12078:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   1207c:	adrp	x1, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   12080:	mov	x2, x0
   12084:	ldr	x3, [x1, #3032]
   12088:	add	x1, x0, x21
   1208c:	stp	x1, x0, [x20]
   12090:	cbz	x3, 120a0 <_ZdaPvRKSt9nothrow_t@@Base+0x320>
   12094:	mov	x1, x21
   12098:	blr	x3
   1209c:	ldp	x1, x2, [x20]
   120a0:	sub	x1, x1, x2
   120a4:	cmp	x19, x1
   120a8:	b.gt	120e8 <_ZdaPvRKSt9nothrow_t@@Base+0x368>
   120ac:	ldr	x21, [sp, #16]
   120b0:	add	x19, x2, x19
   120b4:	ldr	x30, [sp, #24]
   120b8:	str	x19, [x20, #8]
   120bc:	mov	x0, x2
   120c0:	ldp	x19, x20, [sp], #32
   120c4:	ret
   120c8:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   120cc:	str	x0, [x21]
   120d0:	b	12050 <_ZdaPvRKSt9nothrow_t@@Base+0x2d0>
   120d4:	str	x21, [sp, #16]
   120d8:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   120dc:	add	x0, x0, #0xbf8
   120e0:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   120e4:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   120e8:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   120ec:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   120f0:	add	x2, x2, #0xfb0
   120f4:	add	x0, x0, #0xff0
   120f8:	mov	x4, #0x0                   	// #0
   120fc:	mov	x3, #0x0                   	// #0
   12100:	mov	w1, #0xe1                  	// #225
   12104:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   12108:	sub	x1, x0, #0x1
   1210c:	tst	x1, x0
   12110:	b.ne	1212c <_ZdaPvRKSt9nothrow_t@@Base+0x3ac>  // b.any
   12114:	adrp	x2, 5a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x26398>
   12118:	ldr	x1, [x2, #616]
   1211c:	cmp	x1, x0
   12120:	csel	x0, x1, x0, cs  // cs = hs, nlast
   12124:	str	x0, [x2, #616]
   12128:	ret
   1212c:	str	x30, [sp, #-16]!
   12130:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   12134:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   12138:	add	x2, x2, #0x430
   1213c:	add	x0, x0, #0xff0
   12140:	mov	x4, #0x0                   	// #0
   12144:	mov	x3, #0x0                   	// #0
   12148:	mov	w1, #0xe8                  	// #232
   1214c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   12150:	adrp	x1, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   12154:	str	x0, [x1, #3032]
   12158:	ret
   1215c:	nop
   12160:	adrp	x0, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   12164:	ldrb	w0, [x0, #3008]
   12168:	tst	w0, #0xff
   1216c:	cset	w0, ne  // ne = any
   12170:	ret
   12174:	nop
   12178:	adrp	x0, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   1217c:	mov	w1, #0x1                   	// #1
   12180:	strb	w1, [x0, #3008]
   12184:	ret
   12188:	adrp	x0, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   1218c:	add	x0, x0, #0xbc0
   12190:	ldrb	w0, [x0, #32]
   12194:	tst	w0, #0xff
   12198:	cset	w0, ne  // ne = any
   1219c:	ret
   121a0:	adrp	x1, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   121a4:	add	x1, x1, #0xbc0
   121a8:	and	w0, w0, #0xff
   121ac:	strb	w0, [x1, #32]
   121b0:	ret
   121b4:	nop
   121b8:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   121bc:	add	x0, x0, #0x48
   121c0:	b	1fcb8 <__sanitizer_on_print@@Base+0x398>
   121c4:	nop
   121c8:	cmn	x0, #0x9
   121cc:	b.hi	122b0 <_ZdaPvRKSt9nothrow_t@@Base+0x530>  // b.pmore
   121d0:	stp	x19, x20, [sp, #-48]!
   121d4:	cmp	x2, #0x0
   121d8:	add	x20, x0, #0x8
   121dc:	str	x30, [sp, #24]
   121e0:	mov	x0, #0x8                   	// #8
   121e4:	csel	x19, x2, x0, ne  // ne = any
   121e8:	cbz	x1, 1223c <_ZdaPvRKSt9nothrow_t@@Base+0x4bc>
   121ec:	adrp	x0, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   121f0:	add	x0, x0, #0xbc0
   121f4:	ldrb	w0, [x0, #16]
   121f8:	dmb	ish
   121fc:	and	w0, w0, #0xff
   12200:	cbz	w0, 122c0 <_ZdaPvRKSt9nothrow_t@@Base+0x540>
   12204:	adrp	x0, 6d000 <__hwasan_shadow_memory_dynamic_address@@Base+0x102e0>
   12208:	mov	x3, x19
   1220c:	mov	x2, x20
   12210:	add	x0, x0, #0x440
   12214:	bl	13978 <_ZdaPvRKSt9nothrow_t@@Base+0x1bf8>
   12218:	cbz	x0, 122d0 <_ZdaPvRKSt9nothrow_t@@Base+0x550>
   1221c:	mov	x1, #0xc041                	// #49217
   12220:	movk	x1, #0xbceb, lsl #16
   12224:	movk	x1, #0xb03a, lsl #32
   12228:	movk	x1, #0x6a6c, lsl #48
   1222c:	str	x1, [x0], #8
   12230:	ldr	x30, [sp, #24]
   12234:	ldp	x19, x20, [sp], #48
   12238:	ret
   1223c:	str	x21, [sp, #16]
   12240:	adrp	x21, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   12244:	add	x0, x21, #0xbc0
   12248:	mov	w2, #0x1                   	// #1
   1224c:	add	x0, x0, #0x28
   12250:	ldxrb	w1, [x0]
   12254:	stxrb	w3, w2, [x0]
   12258:	cbnz	w3, 12250 <_ZdaPvRKSt9nothrow_t@@Base+0x4d0>
   1225c:	dmb	ish
   12260:	tst	w1, #0xff
   12264:	b.eq	1226c <_ZdaPvRKSt9nothrow_t@@Base+0x4ec>  // b.none
   12268:	bl	85d8 <__sanitizer_print_stack_trace@@Base+0x300>
   1226c:	add	x0, x21, #0xbc0
   12270:	ldrb	w0, [x0, #16]
   12274:	dmb	ish
   12278:	and	w0, w0, #0xff
   1227c:	cbz	w0, 122b8 <_ZdaPvRKSt9nothrow_t@@Base+0x538>
   12280:	mov	x3, x19
   12284:	mov	x2, x20
   12288:	adrp	x1, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   1228c:	adrp	x0, 6d000 <__hwasan_shadow_memory_dynamic_address@@Base+0x102e0>
   12290:	add	x1, x1, #0xbf0
   12294:	add	x0, x0, #0x440
   12298:	bl	13978 <_ZdaPvRKSt9nothrow_t@@Base+0x1bf8>
   1229c:	dmb	ish
   122a0:	add	x21, x21, #0xbc0
   122a4:	strb	wzr, [x21, #40]
   122a8:	ldr	x21, [sp, #16]
   122ac:	b	12218 <_ZdaPvRKSt9nothrow_t@@Base+0x498>
   122b0:	mov	x0, #0x0                   	// #0
   122b4:	ret
   122b8:	bl	11e90 <_ZdaPvRKSt9nothrow_t@@Base+0x110>
   122bc:	b	12280 <_ZdaPvRKSt9nothrow_t@@Base+0x500>
   122c0:	str	x1, [sp, #40]
   122c4:	bl	11e90 <_ZdaPvRKSt9nothrow_t@@Base+0x110>
   122c8:	ldr	x1, [sp, #40]
   122cc:	b	12204 <_ZdaPvRKSt9nothrow_t@@Base+0x484>
   122d0:	mov	x0, x20
   122d4:	str	x21, [sp, #16]
   122d8:	bl	11e60 <_ZdaPvRKSt9nothrow_t@@Base+0xe0>
   122dc:	nop
   122e0:	stp	x19, x20, [sp, #-48]!
   122e4:	mov	x19, x2
   122e8:	str	x30, [sp, #32]
   122ec:	cbz	x0, 12398 <_ZdaPvRKSt9nothrow_t@@Base+0x618>
   122f0:	mov	x20, x1
   122f4:	umulh	x1, x1, x0
   122f8:	cbnz	x1, 12430 <_ZdaPvRKSt9nothrow_t@@Base+0x6b0>
   122fc:	mul	x20, x0, x20
   12300:	cmn	x20, #0x9
   12304:	b.hi	12384 <_ZdaPvRKSt9nothrow_t@@Base+0x604>  // b.pmore
   12308:	stp	x21, x22, [sp, #16]
   1230c:	add	x21, x20, #0x8
   12310:	cbz	x19, 123a8 <_ZdaPvRKSt9nothrow_t@@Base+0x628>
   12314:	adrp	x0, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   12318:	add	x0, x0, #0xbc0
   1231c:	ldrb	w0, [x0, #16]
   12320:	dmb	ish
   12324:	and	w0, w0, #0xff
   12328:	cbz	w0, 12418 <_ZdaPvRKSt9nothrow_t@@Base+0x698>
   1232c:	mov	x1, x19
   12330:	mov	x2, x21
   12334:	adrp	x0, 6d000 <__hwasan_shadow_memory_dynamic_address@@Base+0x102e0>
   12338:	mov	x3, #0x8                   	// #8
   1233c:	add	x0, x0, #0x440
   12340:	bl	13978 <_ZdaPvRKSt9nothrow_t@@Base+0x1bf8>
   12344:	mov	x19, x0
   12348:	cbz	x19, 12420 <_ZdaPvRKSt9nothrow_t@@Base+0x6a0>
   1234c:	mov	x0, #0xc041                	// #49217
   12350:	mov	x2, x20
   12354:	movk	x0, #0xbceb, lsl #16
   12358:	mov	w1, #0x0                   	// #0
   1235c:	movk	x0, #0xb03a, lsl #32
   12360:	movk	x0, #0x6a6c, lsl #48
   12364:	str	x0, [x19], #8
   12368:	mov	x0, x19
   1236c:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   12370:	mov	x0, x19
   12374:	ldp	x21, x22, [sp, #16]
   12378:	ldr	x30, [sp, #32]
   1237c:	ldp	x19, x20, [sp], #48
   12380:	ret
   12384:	mov	x19, #0x0                   	// #0
   12388:	mov	x0, x19
   1238c:	ldr	x30, [sp, #32]
   12390:	ldp	x19, x20, [sp], #48
   12394:	ret
   12398:	stp	x21, x22, [sp, #16]
   1239c:	mov	x20, #0x0                   	// #0
   123a0:	add	x21, x20, #0x8
   123a4:	cbnz	x19, 12314 <_ZdaPvRKSt9nothrow_t@@Base+0x594>
   123a8:	adrp	x22, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   123ac:	add	x0, x22, #0xbc0
   123b0:	add	x0, x0, #0x28
   123b4:	mov	w2, #0x1                   	// #1
   123b8:	ldxrb	w1, [x0]
   123bc:	stxrb	w3, w2, [x0]
   123c0:	cbnz	w3, 123b8 <_ZdaPvRKSt9nothrow_t@@Base+0x638>
   123c4:	dmb	ish
   123c8:	tst	w1, #0xff
   123cc:	b.eq	123d4 <_ZdaPvRKSt9nothrow_t@@Base+0x654>  // b.none
   123d0:	bl	85d8 <__sanitizer_print_stack_trace@@Base+0x300>
   123d4:	add	x0, x22, #0xbc0
   123d8:	ldrb	w0, [x0, #16]
   123dc:	dmb	ish
   123e0:	and	w0, w0, #0xff
   123e4:	cbz	w0, 12428 <_ZdaPvRKSt9nothrow_t@@Base+0x6a8>
   123e8:	mov	x2, x21
   123ec:	mov	x3, #0x8                   	// #8
   123f0:	adrp	x1, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   123f4:	adrp	x0, 6d000 <__hwasan_shadow_memory_dynamic_address@@Base+0x102e0>
   123f8:	add	x1, x1, #0xbf0
   123fc:	add	x0, x0, #0x440
   12400:	bl	13978 <_ZdaPvRKSt9nothrow_t@@Base+0x1bf8>
   12404:	dmb	ish
   12408:	mov	x19, x0
   1240c:	add	x22, x22, #0xbc0
   12410:	strb	wzr, [x22, #40]
   12414:	b	12348 <_ZdaPvRKSt9nothrow_t@@Base+0x5c8>
   12418:	bl	11e90 <_ZdaPvRKSt9nothrow_t@@Base+0x110>
   1241c:	b	1232c <_ZdaPvRKSt9nothrow_t@@Base+0x5ac>
   12420:	mov	x0, x21
   12424:	bl	11e60 <_ZdaPvRKSt9nothrow_t@@Base+0xe0>
   12428:	bl	11e90 <_ZdaPvRKSt9nothrow_t@@Base+0x110>
   1242c:	b	123e8 <_ZdaPvRKSt9nothrow_t@@Base+0x668>
   12430:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   12434:	mov	x2, x0
   12438:	mov	x3, x20
   1243c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   12440:	ldr	x1, [x1, #4024]
   12444:	add	x0, x0, #0xa0
   12448:	stp	x21, x22, [sp, #16]
   1244c:	ldr	x1, [x1]
   12450:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   12454:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   12458:	stp	x19, x20, [sp, #-48]!
   1245c:	mov	x20, x1
   12460:	mov	x1, x2
   12464:	str	x30, [sp, #24]
   12468:	cbz	x0, 12560 <_ZdaPvRKSt9nothrow_t@@Base+0x7e0>
   1246c:	cmn	x20, #0x9
   12470:	b.hi	12574 <_ZdaPvRKSt9nothrow_t@@Base+0x7f4>  // b.pmore
   12474:	mov	x3, #0xc041                	// #49217
   12478:	add	x20, x20, #0x8
   1247c:	ldur	x4, [x0, #-8]
   12480:	movk	x3, #0xbceb, lsl #16
   12484:	movk	x3, #0xb03a, lsl #32
   12488:	sub	x19, x0, #0x8
   1248c:	movk	x3, #0x6a6c, lsl #48
   12490:	cmp	x4, x3
   12494:	b.ne	12594 <_ZdaPvRKSt9nothrow_t@@Base+0x814>  // b.any
   12498:	cbz	x2, 124e4 <_ZdaPvRKSt9nothrow_t@@Base+0x764>
   1249c:	adrp	x0, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   124a0:	add	x0, x0, #0xbc0
   124a4:	ldrb	w0, [x0, #16]
   124a8:	dmb	ish
   124ac:	and	w0, w0, #0xff
   124b0:	cbz	w0, 12584 <_ZdaPvRKSt9nothrow_t@@Base+0x804>
   124b4:	mov	x2, x19
   124b8:	mov	x3, x20
   124bc:	adrp	x0, 6d000 <__hwasan_shadow_memory_dynamic_address@@Base+0x102e0>
   124c0:	mov	x4, #0x8                   	// #8
   124c4:	add	x0, x0, #0x440
   124c8:	bl	13fe8 <_ZdaPvRKSt9nothrow_t@@Base+0x2268>
   124cc:	mov	x1, x0
   124d0:	add	x0, x1, #0x8
   124d4:	cbz	x1, 125b0 <_ZdaPvRKSt9nothrow_t@@Base+0x830>
   124d8:	ldr	x30, [sp, #24]
   124dc:	ldp	x19, x20, [sp], #48
   124e0:	ret
   124e4:	str	x21, [sp, #16]
   124e8:	adrp	x21, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   124ec:	add	x0, x21, #0xbc0
   124f0:	mov	w2, #0x1                   	// #1
   124f4:	add	x0, x0, #0x28
   124f8:	ldxrb	w1, [x0]
   124fc:	stxrb	w3, w2, [x0]
   12500:	cbnz	w3, 124f8 <_ZdaPvRKSt9nothrow_t@@Base+0x778>
   12504:	dmb	ish
   12508:	tst	w1, #0xff
   1250c:	b.eq	12514 <_ZdaPvRKSt9nothrow_t@@Base+0x794>  // b.none
   12510:	bl	85d8 <__sanitizer_print_stack_trace@@Base+0x300>
   12514:	add	x0, x21, #0xbc0
   12518:	ldrb	w0, [x0, #16]
   1251c:	dmb	ish
   12520:	and	w0, w0, #0xff
   12524:	cbz	w0, 125bc <_ZdaPvRKSt9nothrow_t@@Base+0x83c>
   12528:	adrp	x1, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   1252c:	add	x1, x1, #0xbf0
   12530:	mov	x2, x19
   12534:	mov	x3, x20
   12538:	mov	x4, #0x8                   	// #8
   1253c:	adrp	x0, 6d000 <__hwasan_shadow_memory_dynamic_address@@Base+0x102e0>
   12540:	add	x0, x0, #0x440
   12544:	bl	13fe8 <_ZdaPvRKSt9nothrow_t@@Base+0x2268>
   12548:	dmb	ish
   1254c:	mov	x1, x0
   12550:	add	x21, x21, #0xbc0
   12554:	strb	wzr, [x21, #40]
   12558:	ldr	x21, [sp, #16]
   1255c:	b	124d0 <_ZdaPvRKSt9nothrow_t@@Base+0x750>
   12560:	mov	x0, x20
   12564:	mov	x2, #0x0                   	// #0
   12568:	ldr	x30, [sp, #24]
   1256c:	ldp	x19, x20, [sp], #48
   12570:	b	121c8 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   12574:	mov	x0, #0x0                   	// #0
   12578:	ldr	x30, [sp, #24]
   1257c:	ldp	x19, x20, [sp], #48
   12580:	ret
   12584:	str	x2, [sp, #40]
   12588:	bl	11e90 <_ZdaPvRKSt9nothrow_t@@Base+0x110>
   1258c:	ldr	x1, [sp, #40]
   12590:	b	124b4 <_ZdaPvRKSt9nothrow_t@@Base+0x734>
   12594:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   12598:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   1259c:	add	x2, x2, #0x108
   125a0:	add	x0, x0, #0xff0
   125a4:	mov	w1, #0xa6                  	// #166
   125a8:	str	x21, [sp, #16]
   125ac:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   125b0:	mov	x0, x20
   125b4:	str	x21, [sp, #16]
   125b8:	bl	11e60 <_ZdaPvRKSt9nothrow_t@@Base+0xe0>
   125bc:	bl	11e90 <_ZdaPvRKSt9nothrow_t@@Base+0x110>
   125c0:	b	12528 <_ZdaPvRKSt9nothrow_t@@Base+0x7a8>
   125c4:	nop
   125c8:	stp	x19, x20, [sp, #-48]!
   125cc:	mov	x5, x0
   125d0:	mov	x0, x1
   125d4:	str	x30, [sp, #24]
   125d8:	mov	x1, x3
   125dc:	cbz	x0, 12668 <_ZdaPvRKSt9nothrow_t@@Base+0x8e8>
   125e0:	umulh	x3, x2, x0
   125e4:	cbnz	x3, 12748 <_ZdaPvRKSt9nothrow_t@@Base+0x9c8>
   125e8:	mul	x0, x0, x2
   125ec:	cbz	x5, 1266c <_ZdaPvRKSt9nothrow_t@@Base+0x8ec>
   125f0:	cmn	x0, #0x9
   125f4:	b.hi	126f8 <_ZdaPvRKSt9nothrow_t@@Base+0x978>  // b.pmore
   125f8:	mov	x3, #0xc041                	// #49217
   125fc:	add	x19, x0, #0x8
   12600:	ldur	x4, [x5, #-8]
   12604:	movk	x3, #0xbceb, lsl #16
   12608:	movk	x3, #0xb03a, lsl #32
   1260c:	sub	x20, x5, #0x8
   12610:	movk	x3, #0x6a6c, lsl #48
   12614:	cmp	x4, x3
   12618:	b.ne	12718 <_ZdaPvRKSt9nothrow_t@@Base+0x998>  // b.any
   1261c:	cbz	x1, 1267c <_ZdaPvRKSt9nothrow_t@@Base+0x8fc>
   12620:	adrp	x0, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   12624:	add	x0, x0, #0xbc0
   12628:	ldrb	w0, [x0, #16]
   1262c:	dmb	ish
   12630:	and	w0, w0, #0xff
   12634:	cbz	w0, 12708 <_ZdaPvRKSt9nothrow_t@@Base+0x988>
   12638:	mov	x2, x20
   1263c:	mov	x3, x19
   12640:	adrp	x0, 6d000 <__hwasan_shadow_memory_dynamic_address@@Base+0x102e0>
   12644:	mov	x4, #0x8                   	// #8
   12648:	add	x0, x0, #0x440
   1264c:	bl	13fe8 <_ZdaPvRKSt9nothrow_t@@Base+0x2268>
   12650:	mov	x1, x0
   12654:	add	x0, x1, #0x8
   12658:	cbz	x1, 12734 <_ZdaPvRKSt9nothrow_t@@Base+0x9b4>
   1265c:	ldr	x30, [sp, #24]
   12660:	ldp	x19, x20, [sp], #48
   12664:	ret
   12668:	cbnz	x5, 125f8 <_ZdaPvRKSt9nothrow_t@@Base+0x878>
   1266c:	ldr	x30, [sp, #24]
   12670:	mov	x2, #0x0                   	// #0
   12674:	ldp	x19, x20, [sp], #48
   12678:	b	121c8 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   1267c:	str	x21, [sp, #16]
   12680:	adrp	x21, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   12684:	add	x0, x21, #0xbc0
   12688:	mov	w2, #0x1                   	// #1
   1268c:	add	x0, x0, #0x28
   12690:	ldxrb	w1, [x0]
   12694:	stxrb	w3, w2, [x0]
   12698:	cbnz	w3, 12690 <_ZdaPvRKSt9nothrow_t@@Base+0x910>
   1269c:	dmb	ish
   126a0:	tst	w1, #0xff
   126a4:	b.eq	126ac <_ZdaPvRKSt9nothrow_t@@Base+0x92c>  // b.none
   126a8:	bl	85d8 <__sanitizer_print_stack_trace@@Base+0x300>
   126ac:	add	x0, x21, #0xbc0
   126b0:	ldrb	w0, [x0, #16]
   126b4:	dmb	ish
   126b8:	and	w0, w0, #0xff
   126bc:	cbz	w0, 12740 <_ZdaPvRKSt9nothrow_t@@Base+0x9c0>
   126c0:	adrp	x1, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   126c4:	add	x1, x1, #0xbf0
   126c8:	mov	x2, x20
   126cc:	mov	x3, x19
   126d0:	mov	x4, #0x8                   	// #8
   126d4:	adrp	x0, 6d000 <__hwasan_shadow_memory_dynamic_address@@Base+0x102e0>
   126d8:	add	x0, x0, #0x440
   126dc:	bl	13fe8 <_ZdaPvRKSt9nothrow_t@@Base+0x2268>
   126e0:	dmb	ish
   126e4:	mov	x1, x0
   126e8:	add	x21, x21, #0xbc0
   126ec:	strb	wzr, [x21, #40]
   126f0:	ldr	x21, [sp, #16]
   126f4:	b	12654 <_ZdaPvRKSt9nothrow_t@@Base+0x8d4>
   126f8:	mov	x0, #0x0                   	// #0
   126fc:	ldr	x30, [sp, #24]
   12700:	ldp	x19, x20, [sp], #48
   12704:	ret
   12708:	str	x1, [sp, #40]
   1270c:	bl	11e90 <_ZdaPvRKSt9nothrow_t@@Base+0x110>
   12710:	ldr	x1, [sp, #40]
   12714:	b	12638 <_ZdaPvRKSt9nothrow_t@@Base+0x8b8>
   12718:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   1271c:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   12720:	add	x2, x2, #0x108
   12724:	add	x0, x0, #0xff0
   12728:	mov	w1, #0xa6                  	// #166
   1272c:	str	x21, [sp, #16]
   12730:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   12734:	mov	x0, x19
   12738:	str	x21, [sp, #16]
   1273c:	bl	11e60 <_ZdaPvRKSt9nothrow_t@@Base+0xe0>
   12740:	bl	11e90 <_ZdaPvRKSt9nothrow_t@@Base+0x110>
   12744:	b	126c0 <_ZdaPvRKSt9nothrow_t@@Base+0x940>
   12748:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   1274c:	mov	x3, x2
   12750:	mov	x2, x0
   12754:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   12758:	ldr	x1, [x1, #4024]
   1275c:	add	x0, x0, #0x130
   12760:	ldr	x1, [x1]
   12764:	str	x21, [sp, #16]
   12768:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   1276c:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   12770:	cbz	x0, 12ad8 <_ZdaPvRKSt9nothrow_t@@Base+0xd58>
   12774:	stp	x19, x20, [sp, #-64]!
   12778:	mov	x3, #0xc041                	// #49217
   1277c:	movk	x3, #0xbceb, lsl #16
   12780:	ldur	x4, [x0, #-8]
   12784:	stp	x21, x22, [sp, #16]
   12788:	movk	x3, #0xb03a, lsl #32
   1278c:	str	x30, [sp, #48]
   12790:	movk	x3, #0x6a6c, lsl #48
   12794:	sub	x21, x0, #0x8
   12798:	cmp	x4, x3
   1279c:	b.ne	12abc <_ZdaPvRKSt9nothrow_t@@Base+0xd3c>  // b.any
   127a0:	stur	xzr, [x0, #-8]
   127a4:	mov	x19, x1
   127a8:	cbz	x1, 128d8 <_ZdaPvRKSt9nothrow_t@@Base+0xb58>
   127ac:	adrp	x0, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   127b0:	add	x0, x0, #0xbc0
   127b4:	ldrb	w0, [x0, #16]
   127b8:	dmb	ish
   127bc:	and	w0, w0, #0xff
   127c0:	cbz	w0, 128d0 <_ZdaPvRKSt9nothrow_t@@Base+0xb50>
   127c4:	mov	x0, #0xffffffffffff        	// #281474976710655
   127c8:	adrp	x20, 6d000 <__hwasan_shadow_memory_dynamic_address@@Base+0x102e0>
   127cc:	cmp	x21, x0
   127d0:	b.hi	127f4 <_ZdaPvRKSt9nothrow_t@@Base+0xa74>  // b.pmore
   127d4:	lsr	x2, x21, #32
   127d8:	add	x1, x20, #0x440
   127dc:	ldr	x0, [x1, x2, lsl #3]
   127e0:	dmb	ish
   127e4:	cbz	x0, 127f4 <_ZdaPvRKSt9nothrow_t@@Base+0xa74>
   127e8:	lsr	w3, w21, #20
   127ec:	ldrb	w0, [x0, x3]
   127f0:	cbnz	w0, 12adc <_ZdaPvRKSt9nothrow_t@@Base+0xd5c>
   127f4:	add	x0, x20, #0x440
   127f8:	add	x0, x0, #0x80, lsl #12
   127fc:	ldr	x19, [x0, #3520]
   12800:	sub	x0, x19, #0x1
   12804:	tst	x21, x0
   12808:	b.ne	12b58 <_ZdaPvRKSt9nothrow_t@@Base+0xdd8>  // b.any
   1280c:	adrp	x0, 12e000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd12e0>
   12810:	sub	x19, x21, x19
   12814:	add	x0, x0, #0x440
   12818:	mov	w2, #0x1                   	// #1
   1281c:	ldxrb	w1, [x0]
   12820:	stxrb	w3, w2, [x0]
   12824:	cbnz	w3, 1281c <_ZdaPvRKSt9nothrow_t@@Base+0xa9c>
   12828:	dmb	ish
   1282c:	tst	w1, #0xff
   12830:	b.eq	12838 <_ZdaPvRKSt9nothrow_t@@Base+0xab8>  // b.none
   12834:	bl	85d8 <__sanitizer_print_stack_trace@@Base+0x300>
   12838:	add	x20, x20, #0x440
   1283c:	add	x0, x20, #0x80, lsl #12
   12840:	ldr	x1, [x19, #24]
   12844:	ldr	x2, [x0, #3528]
   12848:	ldr	x3, [x2, x1, lsl #3]
   1284c:	cmp	x3, x19
   12850:	b.ne	12b7c <_ZdaPvRKSt9nothrow_t@@Base+0xdfc>  // b.any
   12854:	add	x0, x20, #0xc0, lsl #12
   12858:	ldr	x4, [x0, #3536]
   1285c:	cmp	x1, x4
   12860:	b.cs	12b9c <_ZdaPvRKSt9nothrow_t@@Base+0xe1c>  // b.hs, b.nlast
   12864:	sub	x4, x4, #0x1
   12868:	ldr	x3, [x19, #8]
   1286c:	str	x4, [x0, #3536]
   12870:	ldr	x4, [x2, x4, lsl #3]
   12874:	str	x4, [x2, x1, lsl #3]
   12878:	ldr	x2, [x0, #4120]
   1287c:	str	x1, [x4, #24]
   12880:	sub	x2, x2, x3
   12884:	str	x2, [x0, #4120]
   12888:	ldr	x4, [x0, #3560]
   1288c:	strb	wzr, [x0, #3544]
   12890:	ldr	x2, [x0, #3568]
   12894:	add	x4, x4, #0x1
   12898:	ldr	x1, [x0, #4128]
   1289c:	sub	x2, x2, x3
   128a0:	str	x4, [x0, #3560]
   128a4:	sub	x1, x1, x3
   128a8:	str	x2, [x0, #3568]
   128ac:	str	x1, [x0, #4128]
   128b0:	dmb	ish
   128b4:	add	x20, x20, #0xc1, lsl #12
   128b8:	strb	wzr, [x20]
   128bc:	ldp	x0, x1, [x19]
   128c0:	ldp	x21, x22, [sp, #16]
   128c4:	ldr	x30, [sp, #48]
   128c8:	ldp	x19, x20, [sp], #64
   128cc:	b	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   128d0:	bl	11e90 <_ZdaPvRKSt9nothrow_t@@Base+0x110>
   128d4:	b	127c4 <_ZdaPvRKSt9nothrow_t@@Base+0xa44>
   128d8:	adrp	x19, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   128dc:	add	x0, x19, #0xbc0
   128e0:	add	x0, x0, #0x28
   128e4:	mov	w2, #0x1                   	// #1
   128e8:	ldxrb	w1, [x0]
   128ec:	stxrb	w3, w2, [x0]
   128f0:	cbnz	w3, 128e8 <_ZdaPvRKSt9nothrow_t@@Base+0xb68>
   128f4:	dmb	ish
   128f8:	tst	w1, #0xff
   128fc:	b.eq	12904 <_ZdaPvRKSt9nothrow_t@@Base+0xb84>  // b.none
   12900:	bl	85d8 <__sanitizer_print_stack_trace@@Base+0x300>
   12904:	add	x0, x19, #0xbc0
   12908:	ldrb	w0, [x0, #16]
   1290c:	dmb	ish
   12910:	and	w0, w0, #0xff
   12914:	cbz	w0, 12b50 <_ZdaPvRKSt9nothrow_t@@Base+0xdd0>
   12918:	mov	x0, #0xffffffffffff        	// #281474976710655
   1291c:	adrp	x20, 6d000 <__hwasan_shadow_memory_dynamic_address@@Base+0x102e0>
   12920:	cmp	x21, x0
   12924:	b.hi	129d0 <_ZdaPvRKSt9nothrow_t@@Base+0xc50>  // b.pmore
   12928:	lsr	x2, x21, #32
   1292c:	add	x1, x20, #0x440
   12930:	ldr	x0, [x1, x2, lsl #3]
   12934:	dmb	ish
   12938:	cbz	x0, 129d0 <_ZdaPvRKSt9nothrow_t@@Base+0xc50>
   1293c:	lsr	w3, w21, #20
   12940:	ldrb	w0, [x0, x3]
   12944:	cbz	w0, 129d0 <_ZdaPvRKSt9nothrow_t@@Base+0xc50>
   12948:	stp	x23, x24, [sp, #32]
   1294c:	ldr	x0, [x1, x2, lsl #3]
   12950:	dmb	ish
   12954:	cbz	x0, 12bbc <_ZdaPvRKSt9nothrow_t@@Base+0xe3c>
   12958:	ldrb	w24, [x0, x3]
   1295c:	cbz	x24, 12bbc <_ZdaPvRKSt9nothrow_t@@Base+0xe3c>
   12960:	cmp	x24, #0x35
   12964:	b.hi	12d58 <_ZdaPvRKSt9nothrow_t@@Base+0xfd8>  // b.pmore
   12968:	lsl	x23, x24, #10
   1296c:	adrp	x22, 5f000 <__hwasan_shadow_memory_dynamic_address@@Base+0x22e0>
   12970:	add	x6, x22, #0xbf0
   12974:	add	x0, x6, x23
   12978:	ldr	x2, [x0, #8]
   1297c:	cbz	x2, 12d88 <_ZdaPvRKSt9nothrow_t@@Base+0x1008>
   12980:	add	x0, x22, #0xbf0
   12984:	add	x1, x0, x23
   12988:	ldr	x4, [x0, x23]
   1298c:	cmp	x4, x2
   12990:	b.eq	12d78 <_ZdaPvRKSt9nothrow_t@@Base+0xff8>  // b.none
   12994:	add	x22, x22, #0xbf0
   12998:	add	x1, x22, x23
   1299c:	add	x2, x22, #0x8, lsl #12
   129a0:	ldr	x0, [x22, x23]
   129a4:	ldr	x4, [x1, #16]
   129a8:	add	x1, x0, #0x1
   129ac:	add	x0, x0, x24, lsl #7
   129b0:	str	x1, [x22, x23]
   129b4:	add	x0, x0, #0x4
   129b8:	ldr	x1, [x2, #22544]
   129bc:	str	x21, [x22, x0, lsl #3]
   129c0:	sub	x0, x1, x4
   129c4:	ldp	x23, x24, [sp, #32]
   129c8:	str	x0, [x2, #22544]
   129cc:	b	12aa0 <_ZdaPvRKSt9nothrow_t@@Base+0xd20>
   129d0:	add	x0, x20, #0x440
   129d4:	add	x0, x0, #0x80, lsl #12
   129d8:	ldr	x4, [x0, #3520]
   129dc:	sub	x0, x4, #0x1
   129e0:	tst	x21, x0
   129e4:	b.ne	12bdc <_ZdaPvRKSt9nothrow_t@@Base+0xe5c>  // b.any
   129e8:	adrp	x0, 12e000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd12e0>
   129ec:	sub	x21, x21, x4
   129f0:	add	x0, x0, #0x440
   129f4:	mov	w2, #0x1                   	// #1
   129f8:	ldxrb	w1, [x0]
   129fc:	stxrb	w3, w2, [x0]
   12a00:	cbnz	w3, 129f8 <_ZdaPvRKSt9nothrow_t@@Base+0xc78>
   12a04:	dmb	ish
   12a08:	tst	w1, #0xff
   12a0c:	b.eq	12a14 <_ZdaPvRKSt9nothrow_t@@Base+0xc94>  // b.none
   12a10:	bl	85d8 <__sanitizer_print_stack_trace@@Base+0x300>
   12a14:	add	x20, x20, #0x440
   12a18:	add	x0, x20, #0x80, lsl #12
   12a1c:	ldr	x1, [x21, #24]
   12a20:	ldr	x2, [x0, #3528]
   12a24:	ldr	x3, [x2, x1, lsl #3]
   12a28:	cmp	x3, x21
   12a2c:	b.ne	12c00 <_ZdaPvRKSt9nothrow_t@@Base+0xe80>  // b.any
   12a30:	add	x0, x20, #0xc0, lsl #12
   12a34:	ldr	x4, [x0, #3536]
   12a38:	cmp	x1, x4
   12a3c:	b.cs	12c20 <_ZdaPvRKSt9nothrow_t@@Base+0xea0>  // b.hs, b.nlast
   12a40:	sub	x4, x4, #0x1
   12a44:	ldr	x3, [x21, #8]
   12a48:	str	x4, [x0, #3536]
   12a4c:	ldr	x4, [x2, x4, lsl #3]
   12a50:	str	x4, [x2, x1, lsl #3]
   12a54:	ldr	x2, [x0, #4120]
   12a58:	str	x1, [x4, #24]
   12a5c:	sub	x2, x2, x3
   12a60:	str	x2, [x0, #4120]
   12a64:	ldr	x4, [x0, #3560]
   12a68:	strb	wzr, [x0, #3544]
   12a6c:	ldr	x2, [x0, #3568]
   12a70:	add	x4, x4, #0x1
   12a74:	ldr	x1, [x0, #4128]
   12a78:	sub	x2, x2, x3
   12a7c:	str	x4, [x0, #3560]
   12a80:	sub	x1, x1, x3
   12a84:	str	x2, [x0, #3568]
   12a88:	str	x1, [x0, #4128]
   12a8c:	dmb	ish
   12a90:	add	x20, x20, #0xc1, lsl #12
   12a94:	strb	wzr, [x20]
   12a98:	ldp	x0, x1, [x21]
   12a9c:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   12aa0:	dmb	ish
   12aa4:	add	x19, x19, #0xbc0
   12aa8:	strb	wzr, [x19, #40]
   12aac:	ldp	x21, x22, [sp, #16]
   12ab0:	ldr	x30, [sp, #48]
   12ab4:	ldp	x19, x20, [sp], #64
   12ab8:	ret
   12abc:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   12ac0:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   12ac4:	add	x2, x2, #0x108
   12ac8:	add	x0, x0, #0xff0
   12acc:	mov	w1, #0xca                  	// #202
   12ad0:	stp	x23, x24, [sp, #32]
   12ad4:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   12ad8:	ret
   12adc:	stp	x23, x24, [sp, #32]
   12ae0:	ldr	x0, [x1, x2, lsl #3]
   12ae4:	dmb	ish
   12ae8:	cbz	x0, 12bbc <_ZdaPvRKSt9nothrow_t@@Base+0xe3c>
   12aec:	ldrb	w22, [x0, x3]
   12af0:	cbz	x22, 12bbc <_ZdaPvRKSt9nothrow_t@@Base+0xe3c>
   12af4:	cmp	x22, #0x35
   12af8:	b.hi	12c40 <_ZdaPvRKSt9nothrow_t@@Base+0xec0>  // b.pmore
   12afc:	lsl	x23, x22, #10
   12b00:	add	x1, x19, x23
   12b04:	ldr	x2, [x1, #8]
   12b08:	cbz	x2, 12c60 <_ZdaPvRKSt9nothrow_t@@Base+0xee0>
   12b0c:	ldr	x0, [x19, x23]
   12b10:	cmp	x2, x0
   12b14:	b.eq	12d40 <_ZdaPvRKSt9nothrow_t@@Base+0xfc0>  // b.none
   12b18:	add	x22, x0, x22, lsl #7
   12b1c:	add	x2, x19, x23
   12b20:	add	x22, x22, #0x4
   12b24:	add	x0, x0, #0x1
   12b28:	mov	x3, #0xd800                	// #55296
   12b2c:	add	x1, x19, x3
   12b30:	str	x0, [x19, x23]
   12b34:	str	x21, [x19, x22, lsl #3]
   12b38:	ldr	x0, [x1, #16]
   12b3c:	ldr	x2, [x2, #16]
   12b40:	ldp	x23, x24, [sp, #32]
   12b44:	sub	x0, x0, x2
   12b48:	str	x0, [x1, #16]
   12b4c:	b	12aac <_ZdaPvRKSt9nothrow_t@@Base+0xd2c>
   12b50:	bl	11e90 <_ZdaPvRKSt9nothrow_t@@Base+0x110>
   12b54:	b	12918 <_ZdaPvRKSt9nothrow_t@@Base+0xb98>
   12b58:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   12b5c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   12b60:	add	x2, x2, #0xd90
   12b64:	add	x0, x0, #0x3f8
   12b68:	mov	x4, #0x0                   	// #0
   12b6c:	mov	x3, #0x0                   	// #0
   12b70:	mov	w1, #0x12d                 	// #301
   12b74:	stp	x23, x24, [sp, #32]
   12b78:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   12b7c:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   12b80:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   12b84:	mov	x4, x19
   12b88:	add	x2, x2, #0x150
   12b8c:	add	x0, x0, #0x3f8
   12b90:	mov	w1, #0x8b                  	// #139
   12b94:	stp	x23, x24, [sp, #32]
   12b98:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   12b9c:	mov	x3, x1
   12ba0:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   12ba4:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   12ba8:	add	x2, x2, #0x170
   12bac:	add	x0, x0, #0x3f8
   12bb0:	mov	w1, #0x8c                  	// #140
   12bb4:	stp	x23, x24, [sp, #32]
   12bb8:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   12bbc:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   12bc0:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   12bc4:	add	x2, x2, #0x388
   12bc8:	add	x0, x0, #0x330
   12bcc:	mov	x4, #0x0                   	// #0
   12bd0:	mov	x3, #0x0                   	// #0
   12bd4:	mov	w1, #0xa8                  	// #168
   12bd8:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   12bdc:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   12be0:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   12be4:	add	x2, x2, #0xd90
   12be8:	add	x0, x0, #0x3f8
   12bec:	mov	x4, #0x0                   	// #0
   12bf0:	mov	x3, #0x0                   	// #0
   12bf4:	mov	w1, #0x12d                 	// #301
   12bf8:	stp	x23, x24, [sp, #32]
   12bfc:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   12c00:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   12c04:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   12c08:	mov	x4, x21
   12c0c:	add	x2, x2, #0x150
   12c10:	add	x0, x0, #0x3f8
   12c14:	mov	w1, #0x8b                  	// #139
   12c18:	stp	x23, x24, [sp, #32]
   12c1c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   12c20:	mov	x3, x1
   12c24:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   12c28:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   12c2c:	add	x2, x2, #0x170
   12c30:	add	x0, x0, #0x3f8
   12c34:	mov	w1, #0x8c                  	// #140
   12c38:	stp	x23, x24, [sp, #32]
   12c3c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   12c40:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   12c44:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   12c48:	mov	x3, x22
   12c4c:	add	x2, x2, #0x410
   12c50:	add	x0, x0, #0x330
   12c54:	mov	x4, #0x36                  	// #54
   12c58:	mov	w1, #0xa9                  	// #169
   12c5c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   12c60:	mov	x2, #0x1                   	// #1
   12c64:	mov	x11, x2
   12c68:	mov	x12, #0x7c                  	// #124
   12c6c:	mov	x10, #0x14                  	// #20
   12c70:	mov	x9, #0x100                 	// #256
   12c74:	mov	w8, #0x4000                	// #16384
   12c78:	mov	x7, #0x3e                  	// #62
   12c7c:	nop
   12c80:	add	x5, x19, x2, lsl #10
   12c84:	lsl	x6, x2, #4
   12c88:	mov	x4, x5
   12c8c:	mov	x0, #0x14                  	// #20
   12c90:	mov	x3, x2
   12c94:	add	x2, x2, #0x1
   12c98:	stp	x12, x6, [x5, #8]
   12c9c:	cmp	x2, #0x36
   12ca0:	str	x0, [x4, #24]
   12ca4:	b.eq	12d14 <_ZdaPvRKSt9nothrow_t@@Base+0xf94>  // b.none
   12ca8:	cmp	x2, #0x35
   12cac:	b.eq	12d1c <_ZdaPvRKSt9nothrow_t@@Base+0xf9c>  // b.none
   12cb0:	cmp	x2, #0x10
   12cb4:	b.ls	12c80 <_ZdaPvRKSt9nothrow_t@@Base+0xf00>  // b.plast
   12cb8:	sub	x0, x3, #0xf
   12cbc:	add	x4, x4, #0x400
   12cc0:	and	x6, x0, #0x3
   12cc4:	mov	x3, x2
   12cc8:	lsr	x0, x0, #2
   12ccc:	add	x2, x2, #0x1
   12cd0:	lsl	x0, x9, x0
   12cd4:	lsr	x5, x0, #2
   12cd8:	madd	x5, x5, x6, x0
   12cdc:	str	x5, [x4, #16]
   12ce0:	udiv	w0, w8, w5
   12ce4:	cmp	x0, #0x0
   12ce8:	csel	x0, x0, x11, ne  // ne = any
   12cec:	cmp	x0, #0x3e
   12cf0:	csel	x0, x0, x7, ls  // ls = plast
   12cf4:	add	x6, x0, #0x2
   12cf8:	lsl	x0, x0, #1
   12cfc:	str	x0, [x4, #8]
   12d00:	cmp	x5, x6, lsl #3
   12d04:	csel	x0, x10, xzr, cc  // cc = lo, ul, last
   12d08:	str	x0, [x4, #24]
   12d0c:	cmp	x2, #0x36
   12d10:	b.ne	12ca8 <_ZdaPvRKSt9nothrow_t@@Base+0xf28>  // b.any
   12d14:	ldr	x2, [x1, #8]
   12d18:	b	12b0c <_ZdaPvRKSt9nothrow_t@@Base+0xd8c>
   12d1c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   12d20:	ldr	q0, [x0, #1328]
   12d24:	mov	x0, #0xd400                	// #54272
   12d28:	add	x2, x19, x0
   12d2c:	add	x0, x19, #0x8, lsl #12
   12d30:	stur	q0, [x2, #8]
   12d34:	str	xzr, [x0, #21528]
   12d38:	ldr	x2, [x1, #8]
   12d3c:	b	12b0c <_ZdaPvRKSt9nothrow_t@@Base+0xd8c>
   12d40:	mov	x0, x19
   12d44:	add	x2, x20, #0x440
   12d48:	mov	x3, x22
   12d4c:	bl	13e10 <_ZdaPvRKSt9nothrow_t@@Base+0x2090>
   12d50:	ldr	x0, [x19, x23]
   12d54:	b	12b18 <_ZdaPvRKSt9nothrow_t@@Base+0xd98>
   12d58:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   12d5c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   12d60:	mov	x3, x24
   12d64:	add	x2, x2, #0x410
   12d68:	add	x0, x0, #0x330
   12d6c:	mov	x4, #0x36                  	// #54
   12d70:	mov	w1, #0xa9                  	// #169
   12d74:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   12d78:	add	x2, x20, #0x440
   12d7c:	mov	x3, x24
   12d80:	bl	13e10 <_ZdaPvRKSt9nothrow_t@@Base+0x2090>
   12d84:	b	12994 <_ZdaPvRKSt9nothrow_t@@Base+0xc14>
   12d88:	mov	x1, #0x1                   	// #1
   12d8c:	mov	x11, x1
   12d90:	mov	x12, #0x7c                  	// #124
   12d94:	mov	x10, #0x14                  	// #20
   12d98:	mov	x9, #0x100                 	// #256
   12d9c:	mov	w8, #0x4000                	// #16384
   12da0:	mov	x7, #0x3e                  	// #62
   12da4:	nop
   12da8:	lsl	x0, x1, #10
   12dac:	lsl	x4, x1, #4
   12db0:	add	x13, x6, x0
   12db4:	add	x0, x0, #0x18
   12db8:	add	x2, x0, x6
   12dbc:	mov	x0, #0x14                  	// #20
   12dc0:	mov	x5, x1
   12dc4:	add	x1, x1, #0x1
   12dc8:	stp	x12, x4, [x13, #8]
   12dcc:	cmp	x1, #0x36
   12dd0:	str	x0, [x2]
   12dd4:	b.eq	12e44 <_ZdaPvRKSt9nothrow_t@@Base+0x10c4>  // b.none
   12dd8:	cmp	x1, #0x35
   12ddc:	b.eq	12e54 <_ZdaPvRKSt9nothrow_t@@Base+0x10d4>  // b.none
   12de0:	cmp	x1, #0x10
   12de4:	b.ls	12da8 <_ZdaPvRKSt9nothrow_t@@Base+0x1028>  // b.plast
   12de8:	sub	x0, x5, #0xf
   12dec:	add	x2, x2, #0x400
   12df0:	and	x13, x0, #0x3
   12df4:	mov	x5, x1
   12df8:	lsr	x0, x0, #2
   12dfc:	add	x1, x1, #0x1
   12e00:	lsl	x0, x9, x0
   12e04:	lsr	x4, x0, #2
   12e08:	madd	x4, x4, x13, x0
   12e0c:	stur	x4, [x2, #-8]
   12e10:	udiv	w0, w8, w4
   12e14:	cmp	x0, #0x0
   12e18:	csel	x0, x0, x11, ne  // ne = any
   12e1c:	cmp	x0, #0x3e
   12e20:	csel	x0, x0, x7, ls  // ls = plast
   12e24:	add	x13, x0, #0x2
   12e28:	lsl	x0, x0, #1
   12e2c:	stur	x0, [x2, #-16]
   12e30:	cmp	x4, x13, lsl #3
   12e34:	csel	x0, x10, xzr, cc  // cc = lo, ul, last
   12e38:	str	x0, [x2]
   12e3c:	cmp	x1, #0x36
   12e40:	b.ne	12dd8 <_ZdaPvRKSt9nothrow_t@@Base+0x1058>  // b.any
   12e44:	add	x0, x22, #0xbf0
   12e48:	add	x0, x0, x23
   12e4c:	ldr	x2, [x0, #8]
   12e50:	b	12980 <_ZdaPvRKSt9nothrow_t@@Base+0xc00>
   12e54:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   12e58:	add	x0, x22, #0xbf0
   12e5c:	ldr	q0, [x1, #1328]
   12e60:	mov	x1, #0xd400                	// #54272
   12e64:	add	x2, x0, x1
   12e68:	add	x1, x0, x23
   12e6c:	add	x0, x0, #0x8, lsl #12
   12e70:	stur	q0, [x2, #8]
   12e74:	str	xzr, [x0, #21528]
   12e78:	ldr	x2, [x1, #8]
   12e7c:	b	12980 <_ZdaPvRKSt9nothrow_t@@Base+0xc00>
   12e80:	stp	x19, x20, [sp, #-48]!
   12e84:	stp	x21, x22, [sp, #16]
   12e88:	mov	x21, x0
   12e8c:	ldr	x0, [x2, #8]
   12e90:	stp	x23, x30, [sp, #32]
   12e94:	cbz	x0, 12f40 <_ZdaPvRKSt9nothrow_t@@Base+0x11c0>
   12e98:	mov	x0, #0x2001                	// #8193
   12e9c:	add	x22, x1, x0
   12ea0:	mov	x20, x2
   12ea4:	mov	x19, x1
   12ea8:	add	x23, x21, x22, lsl #6
   12eac:	mov	w1, #0x1                   	// #1
   12eb0:	ldxrb	w0, [x23]
   12eb4:	stxrb	w2, w1, [x23]
   12eb8:	cbnz	w2, 12eb0 <_ZdaPvRKSt9nothrow_t@@Base+0x1130>
   12ebc:	dmb	ish
   12ec0:	tst	w0, #0xff
   12ec4:	b.eq	12ed0 <_ZdaPvRKSt9nothrow_t@@Base+0x1150>  // b.none
   12ec8:	mov	x0, x23
   12ecc:	bl	85d8 <__sanitizer_print_stack_trace@@Base+0x300>
   12ed0:	ldr	x0, [x23, #8]
   12ed4:	cbz	x0, 12f0c <_ZdaPvRKSt9nothrow_t@@Base+0x118c>
   12ed8:	add	x19, x21, x19, lsl #6
   12edc:	add	x0, x0, #0x1
   12ee0:	add	x19, x19, #0x80, lsl #12
   12ee4:	ldr	x1, [x19, #80]
   12ee8:	str	x1, [x20]
   12eec:	stp	x0, x20, [x19, #72]
   12ef0:	dmb	ish
   12ef4:	lsl	x22, x22, #6
   12ef8:	strb	wzr, [x21, x22]
   12efc:	ldp	x21, x22, [sp, #16]
   12f00:	ldp	x23, x30, [sp, #32]
   12f04:	ldp	x19, x20, [sp], #48
   12f08:	ret
   12f0c:	add	x0, x21, x22, lsl #6
   12f10:	dup	v0.2d, x20
   12f14:	str	xzr, [x20]
   12f18:	mov	x1, #0x1                   	// #1
   12f1c:	str	x1, [x0, #8]
   12f20:	str	q0, [x0, #16]
   12f24:	dmb	ish
   12f28:	lsl	x22, x22, #6
   12f2c:	strb	wzr, [x21, x22]
   12f30:	ldp	x21, x22, [sp, #16]
   12f34:	ldp	x23, x30, [sp, #32]
   12f38:	ldp	x19, x20, [sp], #48
   12f3c:	ret
   12f40:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   12f44:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   12f48:	add	x2, x2, #0x1d0
   12f4c:	add	x0, x0, #0x1e8
   12f50:	mov	x4, #0x0                   	// #0
   12f54:	mov	x3, #0x0                   	// #0
   12f58:	mov	w1, #0xb8                  	// #184
   12f5c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   12f60:	sub	sp, sp, #0x210
   12f64:	adrp	x5, 5a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x26398>
   12f68:	stp	x25, x26, [sp, #48]
   12f6c:	mov	x26, x2
   12f70:	mov	x25, x3
   12f74:	ldr	x2, [x5, #624]
   12f78:	stp	x19, x20, [sp]
   12f7c:	mov	x19, x1
   12f80:	mov	x1, #0x100000              	// #1048576
   12f84:	stp	x21, x22, [sp, #16]
   12f88:	mov	x21, x0
   12f8c:	mov	x0, x1
   12f90:	str	x30, [sp, #80]
   12f94:	str	x4, [sp, #104]
   12f98:	bl	1ebc0 <__sanitizer_set_report_fd@@Base+0x6d40>
   12f9c:	ldr	x4, [sp, #104]
   12fa0:	cbz	x0, 13184 <_ZdaPvRKSt9nothrow_t@@Base+0x1404>
   12fa4:	mov	x22, x0
   12fa8:	tst	x0, #0xfffff
   12fac:	ldr	x0, [x19, #24]
   12fb0:	stp	x23, x24, [sp, #32]
   12fb4:	stp	x27, x28, [sp, #64]
   12fb8:	add	x0, x0, #0x100, lsl #12
   12fbc:	str	x0, [x19, #24]
   12fc0:	b.ne	1338c <_ZdaPvRKSt9nothrow_t@@Base+0x160c>  // b.any
   12fc4:	mov	x0, #0xfffffff             	// #268435455
   12fc8:	lsr	x19, x22, #20
   12fcc:	cmp	x0, x22, lsr #20
   12fd0:	b.cc	133f4 <_ZdaPvRKSt9nothrow_t@@Base+0x1674>  // b.lo, b.ul, b.last
   12fd4:	and	w23, w4, #0xff
   12fd8:	lsr	x20, x22, #32
   12fdc:	ldr	x0, [x21, x20, lsl #3]
   12fe0:	dmb	ish
   12fe4:	cbz	x0, 13344 <_ZdaPvRKSt9nothrow_t@@Base+0x15c4>
   12fe8:	and	x3, x19, #0xfff
   12fec:	ldrb	w1, [x0, x3]
   12ff0:	cbnz	x1, 1344c <_ZdaPvRKSt9nothrow_t@@Base+0x16cc>
   12ff4:	strb	w23, [x0, x3]
   12ff8:	cmp	x4, #0x35
   12ffc:	b.eq	1321c <_ZdaPvRKSt9nothrow_t@@Base+0x149c>  // b.none
   13000:	lsl	x28, x4, #4
   13004:	cmp	x4, #0x10
   13008:	b.ls	13028 <_ZdaPvRKSt9nothrow_t@@Base+0x12a8>  // b.plast
   1300c:	sub	x0, x4, #0x10
   13010:	mov	x28, #0x100                 	// #256
   13014:	and	x1, x0, #0x3
   13018:	lsr	x0, x0, #2
   1301c:	lsl	x0, x28, x0
   13020:	lsr	x28, x0, #2
   13024:	madd	x28, x28, x1, x0
   13028:	mov	x27, #0x100000              	// #1048576
   1302c:	udiv	x27, x27, x28
   13030:	cbz	x28, 13334 <_ZdaPvRKSt9nothrow_t@@Base+0x15b4>
   13034:	mov	w23, #0x4000                	// #16384
   13038:	mov	x1, #0x40                  	// #64
   1303c:	mov	x0, #0x3e                  	// #62
   13040:	mul	x27, x27, x28
   13044:	udiv	w23, w23, w28
   13048:	cmp	x23, x1
   1304c:	csel	x23, x23, x1, ls  // ls = plast
   13050:	cmp	x23, #0x0
   13054:	csinc	x23, x23, xzr, ne  // ne = any
   13058:	cmp	x23, x0
   1305c:	csel	x23, x23, x0, ls  // ls = plast
   13060:	add	x27, x22, x27
   13064:	cmp	x22, x27
   13068:	b.cs	13334 <_ZdaPvRKSt9nothrow_t@@Base+0x15b4>  // b.hs, b.nlast
   1306c:	add	x24, sp, #0x90
   13070:	add	x7, x26, x4, lsl #10
   13074:	mov	x1, #0x0                   	// #0
   13078:	mov	x19, #0x1                   	// #1
   1307c:	str	x22, [sp, #144]
   13080:	add	x22, x22, x28
   13084:	cmp	x22, x27
   13088:	b.cs	131d8 <_ZdaPvRKSt9nothrow_t@@Base+0x1458>  // b.hs, b.nlast
   1308c:	str	x22, [x24, x19, lsl #3]
   13090:	cmp	x19, #0x2f
   13094:	add	x19, x19, #0x1
   13098:	b.ne	13080 <_ZdaPvRKSt9nothrow_t@@Base+0x1300>  // b.any
   1309c:	mov	x2, #0xd800                	// #55296
   130a0:	mov	x19, #0x0                   	// #0
   130a4:	add	x9, x26, x2
   130a8:	b	130b4 <_ZdaPvRKSt9nothrow_t@@Base+0x1334>
   130ac:	cmp	x19, #0x2f
   130b0:	b.hi	13214 <_ZdaPvRKSt9nothrow_t@@Base+0x1494>  // b.pmore
   130b4:	ldr	x8, [x24, x19, lsl #3]
   130b8:	cbz	x1, 13104 <_ZdaPvRKSt9nothrow_t@@Base+0x1384>
   130bc:	ldr	x5, [x1, #8]
   130c0:	add	x6, x5, #0x1
   130c4:	add	x5, x5, #0x2
   130c8:	str	x6, [x1, #8]
   130cc:	add	x19, x19, #0x1
   130d0:	cmp	x6, x23
   130d4:	str	x8, [x1, x5, lsl #3]
   130d8:	b.ne	130ac <_ZdaPvRKSt9nothrow_t@@Base+0x132c>  // b.any
   130dc:	ldr	x5, [x25, #8]
   130e0:	cbnz	x5, 131a0 <_ZdaPvRKSt9nothrow_t@@Base+0x1420>
   130e4:	dup	v0.2d, x1
   130e8:	str	xzr, [x1]
   130ec:	mov	x0, #0x1                   	// #1
   130f0:	str	x0, [x25, #8]
   130f4:	cmp	x19, #0x2f
   130f8:	str	q0, [x25, #16]
   130fc:	b.hi	131c0 <_ZdaPvRKSt9nothrow_t@@Base+0x1440>  // b.pmore
   13100:	ldr	x8, [x24, x19, lsl #3]
   13104:	mov	x1, x8
   13108:	ldr	x20, [x7, #24]
   1310c:	cbnz	x20, 13124 <_ZdaPvRKSt9nothrow_t@@Base+0x13a4>
   13110:	cbz	x1, 1317c <_ZdaPvRKSt9nothrow_t@@Base+0x13fc>
   13114:	mov	x5, #0x0                   	// #0
   13118:	mov	x6, #0x1                   	// #1
   1311c:	str	xzr, [x1, #8]
   13120:	b	130c4 <_ZdaPvRKSt9nothrow_t@@Base+0x1344>
   13124:	cmp	x20, #0x35
   13128:	b.hi	133ac <_ZdaPvRKSt9nothrow_t@@Base+0x162c>  // b.pmore
   1312c:	lsl	x5, x20, #10
   13130:	add	x1, x26, x5
   13134:	ldr	x0, [x26, x5]
   13138:	cbz	x0, 13414 <_ZdaPvRKSt9nothrow_t@@Base+0x1694>
   1313c:	lsl	x20, x20, #7
   13140:	add	x3, x26, x5
   13144:	add	x1, x20, x0
   13148:	sub	x0, x0, #0x1
   1314c:	add	x1, x1, #0x2
   13150:	str	x0, [x26, x5]
   13154:	add	x20, x20, x0
   13158:	add	x20, x20, #0x4
   1315c:	ldr	x2, [x26, x1, lsl #3]
   13160:	ldr	x0, [x9, #16]
   13164:	ldr	x1, [x3, #16]
   13168:	prfm	pldl1keep, [x2]
   1316c:	add	x0, x0, x1
   13170:	ldr	x1, [x26, x20, lsl #3]
   13174:	str	x0, [x9, #16]
   13178:	cbnz	x1, 13114 <_ZdaPvRKSt9nothrow_t@@Base+0x1394>
   1317c:	ldp	x23, x24, [sp, #32]
   13180:	ldp	x27, x28, [sp, #64]
   13184:	mov	w0, #0x0                   	// #0
   13188:	ldp	x19, x20, [sp]
   1318c:	ldp	x21, x22, [sp, #16]
   13190:	ldp	x25, x26, [sp, #48]
   13194:	ldr	x30, [sp, #80]
   13198:	add	sp, sp, #0x210
   1319c:	ret
   131a0:	ldr	x2, [x25, #24]
   131a4:	str	xzr, [x1]
   131a8:	add	x5, x5, #0x1
   131ac:	cmp	x19, #0x2f
   131b0:	str	x1, [x2]
   131b4:	str	x5, [x25, #8]
   131b8:	str	x1, [x25, #24]
   131bc:	b.ls	13100 <_ZdaPvRKSt9nothrow_t@@Base+0x1380>  // b.plast
   131c0:	add	x22, x22, x28
   131c4:	mov	x19, #0x0                   	// #0
   131c8:	cmp	x22, x27
   131cc:	mov	x1, #0x0                   	// #0
   131d0:	b.cc	1308c <_ZdaPvRKSt9nothrow_t@@Base+0x130c>  // b.lo, b.ul, b.last
   131d4:	nop
   131d8:	cbnz	x19, 1322c <_ZdaPvRKSt9nothrow_t@@Base+0x14ac>
   131dc:	cbz	x1, 13334 <_ZdaPvRKSt9nothrow_t@@Base+0x15b4>
   131e0:	ldr	x2, [x1, #8]
   131e4:	cbz	x2, 1346c <_ZdaPvRKSt9nothrow_t@@Base+0x16ec>
   131e8:	ldr	x0, [x25, #8]
   131ec:	cbnz	x0, 133cc <_ZdaPvRKSt9nothrow_t@@Base+0x164c>
   131f0:	dup	v0.2d, x1
   131f4:	ldp	x23, x24, [sp, #32]
   131f8:	ldp	x27, x28, [sp, #64]
   131fc:	str	xzr, [x1]
   13200:	mov	x1, #0x1                   	// #1
   13204:	mov	w0, w1
   13208:	str	x1, [x25, #8]
   1320c:	str	q0, [x25, #16]
   13210:	b	13188 <_ZdaPvRKSt9nothrow_t@@Base+0x1408>
   13214:	mov	x19, #0x0                   	// #0
   13218:	b	13080 <_ZdaPvRKSt9nothrow_t@@Base+0x1300>
   1321c:	mov	x27, #0x100000              	// #1048576
   13220:	mov	x23, #0x20                  	// #32
   13224:	mov	x28, #0x200                 	// #512
   13228:	b	13060 <_ZdaPvRKSt9nothrow_t@@Base+0x12e0>
   1322c:	add	x28, x26, x4, lsl #10
   13230:	mov	x0, #0xd800                	// #55296
   13234:	add	x27, sp, #0x90
   13238:	add	x4, x26, x0
   1323c:	mov	x20, #0x0                   	// #0
   13240:	b	1324c <_ZdaPvRKSt9nothrow_t@@Base+0x14cc>
   13244:	cmp	x19, x20
   13248:	b.ls	131e4 <_ZdaPvRKSt9nothrow_t@@Base+0x1464>  // b.plast
   1324c:	ldr	x22, [x27, x20, lsl #3]
   13250:	cbz	x1, 1329c <_ZdaPvRKSt9nothrow_t@@Base+0x151c>
   13254:	ldr	x0, [x1, #8]
   13258:	add	x2, x0, #0x1
   1325c:	add	x0, x0, #0x2
   13260:	str	x2, [x1, #8]
   13264:	add	x20, x20, #0x1
   13268:	cmp	x2, x23
   1326c:	str	x22, [x1, x0, lsl #3]
   13270:	b.ne	13244 <_ZdaPvRKSt9nothrow_t@@Base+0x14c4>  // b.any
   13274:	ldr	x0, [x25, #8]
   13278:	cbnz	x0, 13314 <_ZdaPvRKSt9nothrow_t@@Base+0x1594>
   1327c:	dup	v0.2d, x1
   13280:	str	xzr, [x1]
   13284:	mov	x0, #0x1                   	// #1
   13288:	str	x0, [x25, #8]
   1328c:	cmp	x19, x20
   13290:	str	q0, [x25, #16]
   13294:	b.ls	13334 <_ZdaPvRKSt9nothrow_t@@Base+0x15b4>  // b.plast
   13298:	ldr	x22, [x27, x20, lsl #3]
   1329c:	mov	x1, x22
   132a0:	ldr	x24, [x28, #24]
   132a4:	cbnz	x24, 132bc <_ZdaPvRKSt9nothrow_t@@Base+0x153c>
   132a8:	cbz	x1, 1317c <_ZdaPvRKSt9nothrow_t@@Base+0x13fc>
   132ac:	mov	x0, #0x0                   	// #0
   132b0:	mov	x2, #0x1                   	// #1
   132b4:	str	xzr, [x1, #8]
   132b8:	b	1325c <_ZdaPvRKSt9nothrow_t@@Base+0x14dc>
   132bc:	cmp	x24, #0x35
   132c0:	b.hi	134b4 <_ZdaPvRKSt9nothrow_t@@Base+0x1734>  // b.pmore
   132c4:	lsl	x5, x24, #10
   132c8:	add	x1, x26, x5
   132cc:	ldr	x0, [x26, x5]
   132d0:	cbz	x0, 134bc <_ZdaPvRKSt9nothrow_t@@Base+0x173c>
   132d4:	lsl	x24, x24, #7
   132d8:	add	x2, x26, x5
   132dc:	add	x1, x24, x0
   132e0:	sub	x0, x0, #0x1
   132e4:	add	x1, x1, #0x2
   132e8:	str	x0, [x26, x5]
   132ec:	add	x24, x24, x0
   132f0:	add	x0, x24, #0x4
   132f4:	ldr	x3, [x26, x1, lsl #3]
   132f8:	ldr	x1, [x2, #16]
   132fc:	ldr	x2, [x4, #16]
   13300:	prfm	pldl1keep, [x3]
   13304:	add	x2, x2, x1
   13308:	ldr	x1, [x26, x0, lsl #3]
   1330c:	str	x2, [x4, #16]
   13310:	b	132a8 <_ZdaPvRKSt9nothrow_t@@Base+0x1528>
   13314:	ldr	x3, [x25, #24]
   13318:	str	xzr, [x1]
   1331c:	add	x0, x0, #0x1
   13320:	cmp	x19, x20
   13324:	str	x1, [x3]
   13328:	str	x0, [x25, #8]
   1332c:	str	x1, [x25, #24]
   13330:	b.hi	13298 <_ZdaPvRKSt9nothrow_t@@Base+0x1518>  // b.pmore
   13334:	mov	w0, #0x1                   	// #1
   13338:	ldp	x23, x24, [sp, #32]
   1333c:	ldp	x27, x28, [sp, #64]
   13340:	b	13188 <_ZdaPvRKSt9nothrow_t@@Base+0x1408>
   13344:	add	x24, x21, #0x80, lsl #12
   13348:	mov	w1, #0x1                   	// #1
   1334c:	ldxrb	w0, [x24]
   13350:	stxrb	w2, w1, [x24]
   13354:	cbnz	w2, 1334c <_ZdaPvRKSt9nothrow_t@@Base+0x15cc>
   13358:	dmb	ish
   1335c:	tst	w0, #0xff
   13360:	b.eq	13374 <_ZdaPvRKSt9nothrow_t@@Base+0x15f4>  // b.none
   13364:	mov	x0, x24
   13368:	str	x4, [sp, #104]
   1336c:	bl	85d8 <__sanitizer_print_stack_trace@@Base+0x300>
   13370:	ldr	x4, [sp, #104]
   13374:	ldr	x0, [x21, x20, lsl #3]
   13378:	dmb	ish
   1337c:	cbz	x0, 1348c <_ZdaPvRKSt9nothrow_t@@Base+0x170c>
   13380:	dmb	ish
   13384:	strb	wzr, [x24]
   13388:	b	12fe8 <_ZdaPvRKSt9nothrow_t@@Base+0x1268>
   1338c:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   13390:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   13394:	add	x2, x2, #0x248
   13398:	add	x0, x0, #0x1e8
   1339c:	mov	x4, #0x0                   	// #0
   133a0:	mov	x3, #0x0                   	// #0
   133a4:	mov	w1, #0x131                 	// #305
   133a8:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   133ac:	mov	x3, x20
   133b0:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   133b4:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   133b8:	add	x2, x2, #0x410
   133bc:	add	x0, x0, #0x330
   133c0:	mov	x4, #0x36                  	// #54
   133c4:	mov	w1, #0x9a                  	// #154
   133c8:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   133cc:	ldr	x4, [x25, #24]
   133d0:	add	x2, x0, #0x1
   133d4:	ldp	x23, x24, [sp, #32]
   133d8:	mov	w0, #0x1                   	// #1
   133dc:	ldp	x27, x28, [sp, #64]
   133e0:	str	xzr, [x1]
   133e4:	str	x1, [x4]
   133e8:	str	x2, [x25, #8]
   133ec:	str	x1, [x25, #24]
   133f0:	b	13188 <_ZdaPvRKSt9nothrow_t@@Base+0x1408>
   133f4:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   133f8:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   133fc:	mov	x3, x19
   13400:	add	x2, x2, #0x270
   13404:	add	x0, x0, #0x1e8
   13408:	mov	x4, #0x10000000            	// #268435456
   1340c:	mov	w1, #0x121                 	// #289
   13410:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   13414:	mov	x3, x20
   13418:	mov	x2, x21
   1341c:	mov	x0, x26
   13420:	stp	x8, x4, [sp, #104]
   13424:	stp	x5, x9, [sp, #120]
   13428:	str	x7, [sp, #136]
   1342c:	bl	135f0 <_ZdaPvRKSt9nothrow_t@@Base+0x1870>
   13430:	tst	w0, #0xff
   13434:	b.eq	1317c <_ZdaPvRKSt9nothrow_t@@Base+0x13fc>  // b.none
   13438:	ldp	x5, x9, [sp, #120]
   1343c:	ldp	x8, x4, [sp, #104]
   13440:	ldr	x7, [sp, #136]
   13444:	ldr	x0, [x26, x5]
   13448:	b	1313c <_ZdaPvRKSt9nothrow_t@@Base+0x13bc>
   1344c:	mov	x4, x1
   13450:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   13454:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   13458:	add	x2, x2, #0x2a8
   1345c:	add	x0, x0, #0x2d0
   13460:	mov	x3, #0x0                   	// #0
   13464:	mov	w1, #0x47                  	// #71
   13468:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   1346c:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   13470:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   13474:	add	x2, x2, #0x1d0
   13478:	add	x0, x0, #0x1e8
   1347c:	mov	x4, #0x0                   	// #0
   13480:	mov	x3, #0x0                   	// #0
   13484:	mov	w1, #0x174                 	// #372
   13488:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   1348c:	mov	w2, #0x0                   	// #0
   13490:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   13494:	mov	x0, #0x1000                	// #4096
   13498:	add	x1, x1, #0x298
   1349c:	str	x4, [sp, #104]
   134a0:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   134a4:	dmb	ish
   134a8:	str	x0, [x21, x20, lsl #3]
   134ac:	ldr	x4, [sp, #104]
   134b0:	b	13380 <_ZdaPvRKSt9nothrow_t@@Base+0x1600>
   134b4:	mov	x3, x24
   134b8:	b	133b0 <_ZdaPvRKSt9nothrow_t@@Base+0x1630>
   134bc:	mov	x3, x24
   134c0:	mov	x2, x21
   134c4:	mov	x0, x26
   134c8:	stp	x5, x4, [sp, #104]
   134cc:	bl	135f0 <_ZdaPvRKSt9nothrow_t@@Base+0x1870>
   134d0:	tst	w0, #0xff
   134d4:	b.eq	1317c <_ZdaPvRKSt9nothrow_t@@Base+0x13fc>  // b.none
   134d8:	ldp	x5, x4, [sp, #104]
   134dc:	ldr	x0, [x26, x5]
   134e0:	b	132d4 <_ZdaPvRKSt9nothrow_t@@Base+0x1554>
   134e4:	nop
   134e8:	stp	x19, x20, [sp, #-80]!
   134ec:	mov	x20, x0
   134f0:	mov	x0, #0x2001                	// #8193
   134f4:	stp	x21, x22, [sp, #16]
   134f8:	add	x22, x3, x0
   134fc:	mov	x19, x3
   13500:	lsl	x21, x22, #6
   13504:	stp	x23, x24, [sp, #32]
   13508:	add	x23, x20, x21
   1350c:	stp	x25, x26, [sp, #48]
   13510:	mov	x25, x2
   13514:	mov	x24, x1
   13518:	mov	w1, #0x1                   	// #1
   1351c:	str	x30, [sp, #64]
   13520:	ldxrb	w0, [x23]
   13524:	stxrb	w2, w1, [x23]
   13528:	cbnz	w2, 13520 <_ZdaPvRKSt9nothrow_t@@Base+0x17a0>
   1352c:	dmb	ish
   13530:	tst	w0, #0xff
   13534:	b.eq	13540 <_ZdaPvRKSt9nothrow_t@@Base+0x17c0>  // b.none
   13538:	mov	x0, x23
   1353c:	bl	85d8 <__sanitizer_print_stack_trace@@Base+0x300>
   13540:	add	x21, x21, #0x8
   13544:	add	x26, x20, x21
   13548:	ldr	x5, [x20, x21]
   1354c:	cbnz	x5, 13578 <_ZdaPvRKSt9nothrow_t@@Base+0x17f8>
   13550:	mov	x3, x23
   13554:	mov	x2, x25
   13558:	mov	x1, x24
   1355c:	mov	x4, x19
   13560:	mov	x0, x20
   13564:	bl	12f60 <_ZdaPvRKSt9nothrow_t@@Base+0x11e0>
   13568:	tst	w0, #0xff
   1356c:	b.eq	135e8 <_ZdaPvRKSt9nothrow_t@@Base+0x1868>  // b.none
   13570:	ldr	x5, [x20, x21]
   13574:	cbz	x5, 135c8 <_ZdaPvRKSt9nothrow_t@@Base+0x1848>
   13578:	add	x4, x20, x19, lsl #6
   1357c:	add	x4, x4, #0x80, lsl #12
   13580:	ldr	x0, [x26, #8]
   13584:	ldr	x1, [x4, #80]
   13588:	ldr	x1, [x1]
   1358c:	str	x1, [x4, #80]
   13590:	cbz	x1, 135c0 <_ZdaPvRKSt9nothrow_t@@Base+0x1840>
   13594:	sub	x5, x5, #0x1
   13598:	str	x5, [x4, #72]
   1359c:	dmb	ish
   135a0:	lsl	x22, x22, #6
   135a4:	strb	wzr, [x20, x22]
   135a8:	ldp	x21, x22, [sp, #16]
   135ac:	ldp	x23, x24, [sp, #32]
   135b0:	ldp	x25, x26, [sp, #48]
   135b4:	ldr	x30, [sp, #64]
   135b8:	ldp	x19, x20, [sp], #80
   135bc:	ret
   135c0:	str	xzr, [x4, #88]
   135c4:	b	13594 <_ZdaPvRKSt9nothrow_t@@Base+0x1814>
   135c8:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   135cc:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   135d0:	add	x2, x2, #0x390
   135d4:	add	x0, x0, #0x3a8
   135d8:	mov	x4, #0x0                   	// #0
   135dc:	mov	x3, #0x0                   	// #0
   135e0:	mov	w1, #0x41                  	// #65
   135e4:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   135e8:	mov	x0, #0x0                   	// #0
   135ec:	b	1359c <_ZdaPvRKSt9nothrow_t@@Base+0x181c>
   135f0:	stp	x19, x20, [sp, #-64]!
   135f4:	mov	x19, x0
   135f8:	ldr	x0, [x1, #8]
   135fc:	stp	x21, x22, [sp, #16]
   13600:	mov	x21, x1
   13604:	stp	x23, x24, [sp, #32]
   13608:	mov	x22, x2
   1360c:	mov	x23, x3
   13610:	str	x30, [sp, #48]
   13614:	cbz	x0, 13758 <_ZdaPvRKSt9nothrow_t@@Base+0x19d8>
   13618:	mov	x3, #0xd800                	// #55296
   1361c:	add	x24, x19, x3
   13620:	mov	x1, x24
   13624:	mov	x3, x23
   13628:	mov	x2, x19
   1362c:	mov	x0, x22
   13630:	bl	134e8 <_ZdaPvRKSt9nothrow_t@@Base+0x1768>
   13634:	mov	x20, x0
   13638:	cbz	x0, 13740 <_ZdaPvRKSt9nothrow_t@@Base+0x19c0>
   1363c:	ldr	x5, [x0, #8]
   13640:	cbz	x5, 13834 <_ZdaPvRKSt9nothrow_t@@Base+0x1ab4>
   13644:	add	x2, x0, #0x10
   13648:	add	x0, x21, #0x30
   1364c:	cmp	x2, x0
   13650:	sub	x1, x5, #0x1
   13654:	ccmp	x21, x20, #0x2, cc  // cc = lo, ul, last
   13658:	add	x0, x21, #0x20
   1365c:	ccmp	x1, #0x9, #0x0, cs  // cs = hs, nlast
   13660:	b.ls	13724 <_ZdaPvRKSt9nothrow_t@@Base+0x19a4>  // b.plast
   13664:	lsr	x1, x5, #1
   13668:	mov	x4, #0x0                   	// #0
   1366c:	lsl	x1, x1, #4
   13670:	ldr	q0, [x2, x4]
   13674:	str	q0, [x0, x4]
   13678:	add	x4, x4, #0x10
   1367c:	cmp	x1, x4
   13680:	b.ne	13670 <_ZdaPvRKSt9nothrow_t@@Base+0x18f0>  // b.any
   13684:	and	x4, x5, #0xfffffffffffffffe
   13688:	tbz	w5, #0, 13698 <_ZdaPvRKSt9nothrow_t@@Base+0x1918>
   1368c:	add	x1, x4, #0x2
   13690:	ldr	x1, [x20, x1, lsl #3]
   13694:	str	x1, [x0, x4, lsl #3]
   13698:	add	x23, x19, x23, lsl #10
   1369c:	str	x5, [x21]
   136a0:	mov	w0, #0x1                   	// #1
   136a4:	ldr	x21, [x23, #24]
   136a8:	cbnz	x21, 136c0 <_ZdaPvRKSt9nothrow_t@@Base+0x1940>
   136ac:	ldp	x21, x22, [sp, #16]
   136b0:	ldp	x23, x24, [sp, #32]
   136b4:	ldr	x30, [sp, #48]
   136b8:	ldp	x19, x20, [sp], #64
   136bc:	ret
   136c0:	cmp	x21, #0x35
   136c4:	b.hi	13954 <_ZdaPvRKSt9nothrow_t@@Base+0x1bd4>  // b.pmore
   136c8:	lsl	x23, x21, #10
   136cc:	add	x1, x19, x23
   136d0:	ldr	x2, [x1, #8]
   136d4:	cbz	x2, 1386c <_ZdaPvRKSt9nothrow_t@@Base+0x1aec>
   136d8:	ldr	x0, [x19, x23]
   136dc:	cmp	x0, x2
   136e0:	b.eq	13854 <_ZdaPvRKSt9nothrow_t@@Base+0x1ad4>  // b.none
   136e4:	add	x2, x0, x21, lsl #7
   136e8:	add	x3, x19, x23
   136ec:	add	x2, x2, #0x4
   136f0:	add	x0, x0, #0x1
   136f4:	str	x0, [x19, x23]
   136f8:	mov	w0, #0x1                   	// #1
   136fc:	ldr	x1, [x24, #16]
   13700:	str	x20, [x19, x2, lsl #3]
   13704:	ldp	x21, x22, [sp, #16]
   13708:	ldr	x2, [x3, #16]
   1370c:	ldr	x30, [sp, #48]
   13710:	sub	x1, x1, x2
   13714:	str	x1, [x24, #16]
   13718:	ldp	x23, x24, [sp, #32]
   1371c:	ldp	x19, x20, [sp], #64
   13720:	ret
   13724:	mov	x1, #0x0                   	// #0
   13728:	ldr	x3, [x2, x1, lsl #3]
   1372c:	str	x3, [x0, x1, lsl #3]
   13730:	add	x1, x1, #0x1
   13734:	cmp	x5, x1
   13738:	b.ne	13728 <_ZdaPvRKSt9nothrow_t@@Base+0x19a8>  // b.any
   1373c:	b	13698 <_ZdaPvRKSt9nothrow_t@@Base+0x1918>
   13740:	mov	w0, #0x0                   	// #0
   13744:	ldp	x21, x22, [sp, #16]
   13748:	ldp	x23, x24, [sp, #32]
   1374c:	ldr	x30, [sp, #48]
   13750:	ldp	x19, x20, [sp], #64
   13754:	ret
   13758:	mov	x5, #0x1                   	// #1
   1375c:	mov	x11, x5
   13760:	mov	x12, #0x7c                  	// #124
   13764:	mov	x10, #0x14                  	// #20
   13768:	mov	x9, #0x100                 	// #256
   1376c:	mov	w8, #0x4000                	// #16384
   13770:	mov	x3, #0x3e                  	// #62
   13774:	nop
   13778:	add	x2, x19, x5, lsl #10
   1377c:	lsl	x4, x5, #4
   13780:	mov	x6, x2
   13784:	mov	x0, #0x14                  	// #20
   13788:	mov	x1, x5
   1378c:	add	x5, x5, #0x1
   13790:	stp	x12, x4, [x2, #8]
   13794:	cmp	x5, #0x36
   13798:	str	x0, [x6, #24]
   1379c:	b.eq	13618 <_ZdaPvRKSt9nothrow_t@@Base+0x1898>  // b.none
   137a0:	cmp	x5, #0x35
   137a4:	b.eq	13814 <_ZdaPvRKSt9nothrow_t@@Base+0x1a94>  // b.none
   137a8:	cmp	x5, #0x10
   137ac:	b.ls	13778 <_ZdaPvRKSt9nothrow_t@@Base+0x19f8>  // b.plast
   137b0:	sub	x4, x1, #0xf
   137b4:	add	x6, x6, #0x400
   137b8:	and	x0, x4, #0x3
   137bc:	mov	x1, x5
   137c0:	lsr	x4, x4, #2
   137c4:	add	x5, x5, #0x1
   137c8:	lsl	x4, x9, x4
   137cc:	lsr	x7, x4, #2
   137d0:	madd	x7, x7, x0, x4
   137d4:	str	x7, [x6, #16]
   137d8:	udiv	w4, w8, w7
   137dc:	cmp	x4, #0x0
   137e0:	csel	x4, x4, x11, ne  // ne = any
   137e4:	cmp	x4, #0x3e
   137e8:	csel	x4, x4, x3, ls  // ls = plast
   137ec:	add	x0, x4, #0x2
   137f0:	lsl	x4, x4, #1
   137f4:	str	x4, [x6, #8]
   137f8:	cmp	x7, x0, lsl #3
   137fc:	csel	x0, x10, xzr, cc  // cc = lo, ul, last
   13800:	str	x0, [x6, #24]
   13804:	cmp	x5, #0x36
   13808:	b.eq	13618 <_ZdaPvRKSt9nothrow_t@@Base+0x1898>  // b.none
   1380c:	cmp	x5, #0x35
   13810:	b.ne	137a8 <_ZdaPvRKSt9nothrow_t@@Base+0x1a28>  // b.any
   13814:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   13818:	ldr	q0, [x0, #1328]
   1381c:	mov	x0, #0xd400                	// #54272
   13820:	add	x1, x19, x0
   13824:	add	x0, x19, #0x8, lsl #12
   13828:	stur	q0, [x1, #8]
   1382c:	str	xzr, [x0, #21528]
   13830:	b	13618 <_ZdaPvRKSt9nothrow_t@@Base+0x1898>
   13834:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   13838:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   1383c:	add	x2, x2, #0x1d0
   13840:	add	x0, x0, #0x330
   13844:	mov	x4, #0x0                   	// #0
   13848:	mov	x3, #0x0                   	// #0
   1384c:	mov	w1, #0xf0                  	// #240
   13850:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   13854:	mov	x0, x19
   13858:	mov	x2, x22
   1385c:	mov	x3, x21
   13860:	bl	13e10 <_ZdaPvRKSt9nothrow_t@@Base+0x2090>
   13864:	ldr	x0, [x19, x23]
   13868:	b	136e4 <_ZdaPvRKSt9nothrow_t@@Base+0x1964>
   1386c:	mov	x2, #0x1                   	// #1
   13870:	mov	x11, x2
   13874:	mov	x12, #0x7c                  	// #124
   13878:	mov	x10, #0x14                  	// #20
   1387c:	mov	x9, #0x100                 	// #256
   13880:	mov	w8, #0x4000                	// #16384
   13884:	mov	x7, #0x3e                  	// #62
   13888:	add	x5, x19, x2, lsl #10
   1388c:	lsl	x6, x2, #4
   13890:	mov	x4, x5
   13894:	mov	x0, #0x14                  	// #20
   13898:	mov	x3, x2
   1389c:	add	x2, x2, #0x1
   138a0:	stp	x12, x6, [x5, #8]
   138a4:	cmp	x2, #0x36
   138a8:	str	x0, [x4, #24]
   138ac:	b.eq	1391c <_ZdaPvRKSt9nothrow_t@@Base+0x1b9c>  // b.none
   138b0:	cmp	x2, #0x35
   138b4:	b.eq	13924 <_ZdaPvRKSt9nothrow_t@@Base+0x1ba4>  // b.none
   138b8:	cmp	x2, #0x10
   138bc:	b.ls	13888 <_ZdaPvRKSt9nothrow_t@@Base+0x1b08>  // b.plast
   138c0:	sub	x0, x3, #0xf
   138c4:	add	x4, x4, #0x400
   138c8:	and	x6, x0, #0x3
   138cc:	mov	x3, x2
   138d0:	lsr	x0, x0, #2
   138d4:	add	x2, x2, #0x1
   138d8:	lsl	x0, x9, x0
   138dc:	lsr	x5, x0, #2
   138e0:	madd	x5, x5, x6, x0
   138e4:	str	x5, [x4, #16]
   138e8:	udiv	w0, w8, w5
   138ec:	cmp	x0, #0x0
   138f0:	csel	x0, x0, x11, ne  // ne = any
   138f4:	cmp	x0, #0x3e
   138f8:	csel	x0, x0, x7, ls  // ls = plast
   138fc:	add	x6, x0, #0x2
   13900:	lsl	x0, x0, #1
   13904:	str	x0, [x4, #8]
   13908:	cmp	x5, x6, lsl #3
   1390c:	csel	x0, x10, xzr, cc  // cc = lo, ul, last
   13910:	str	x0, [x4, #24]
   13914:	cmp	x2, #0x36
   13918:	b.ne	138b0 <_ZdaPvRKSt9nothrow_t@@Base+0x1b30>  // b.any
   1391c:	ldr	x2, [x1, #8]
   13920:	b	136d8 <_ZdaPvRKSt9nothrow_t@@Base+0x1958>
   13924:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   13928:	mov	x2, #0xd400                	// #54272
   1392c:	add	x2, x19, x2
   13930:	ldr	q0, [x0, #1328]
   13934:	add	x0, x19, #0x8, lsl #12
   13938:	stur	q0, [x2, #8]
   1393c:	str	xzr, [x0, #21528]
   13940:	ldr	x0, [x19, x23]
   13944:	ldr	x2, [x1, #8]
   13948:	cmp	x0, x2
   1394c:	b.ne	136e4 <_ZdaPvRKSt9nothrow_t@@Base+0x1964>  // b.any
   13950:	b	13854 <_ZdaPvRKSt9nothrow_t@@Base+0x1ad4>
   13954:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   13958:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   1395c:	mov	x3, x21
   13960:	add	x2, x2, #0x410
   13964:	add	x0, x0, #0x330
   13968:	mov	x4, #0x36                  	// #54
   1396c:	mov	w1, #0xa9                  	// #169
   13970:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   13974:	nop
   13978:	stp	x19, x20, [sp, #-80]!
   1397c:	cmp	x2, #0x0
   13980:	stp	x21, x22, [sp, #16]
   13984:	csinc	x22, x2, xzr, ne  // ne = any
   13988:	mov	x21, x1
   1398c:	str	x30, [sp, #64]
   13990:	adds	x1, x3, x22
   13994:	b.cs	13de8 <_ZdaPvRKSt9nothrow_t@@Base+0x2068>  // b.hs, b.nlast
   13998:	stp	x23, x24, [sp, #32]
   1399c:	mov	x19, x3
   139a0:	mov	x23, x0
   139a4:	cmp	x3, #0x8
   139a8:	b.hi	13bf0 <_ZdaPvRKSt9nothrow_t@@Base+0x1e70>  // b.pmore
   139ac:	cmp	x2, #0x20, lsl #12
   139b0:	b.hi	13a74 <_ZdaPvRKSt9nothrow_t@@Base+0x1cf4>  // b.pmore
   139b4:	cmp	x22, #0x100
   139b8:	b.ls	13c24 <_ZdaPvRKSt9nothrow_t@@Base+0x1ea4>  // b.plast
   139bc:	clz	x3, x22
   139c0:	mov	w20, #0x3f                  	// #63
   139c4:	sub	w20, w20, w3
   139c8:	mov	w3, #0x1                   	// #1
   139cc:	sub	w1, w20, #0x2
   139d0:	lsl	w3, w3, w1
   139d4:	sub	w3, w3, #0x1
   139d8:	tst	x3, x22
   139dc:	lsr	x3, x22, x1
   139e0:	and	x3, x3, #0x3
   139e4:	cinc	x3, x3, ne  // ne = any
   139e8:	add	x20, x3, w20, sxtw #2
   139ec:	sub	x20, x20, #0x10
   139f0:	cmp	x20, #0x35
   139f4:	b.hi	13c74 <_ZdaPvRKSt9nothrow_t@@Base+0x1ef4>  // b.pmore
   139f8:	lsl	x22, x20, #10
   139fc:	add	x1, x21, x22
   13a00:	ldr	x3, [x21, x22]
   13a04:	cbz	x3, 13d08 <_ZdaPvRKSt9nothrow_t@@Base+0x1f88>
   13a08:	lsl	x20, x20, #7
   13a0c:	add	x1, x21, x22
   13a10:	add	x0, x20, x3
   13a14:	mov	x2, #0xd800                	// #55296
   13a18:	add	x0, x0, #0x2
   13a1c:	sub	x3, x3, #0x1
   13a20:	add	x2, x21, x2
   13a24:	str	x3, [x21, x22]
   13a28:	add	x20, x20, x3
   13a2c:	ldr	x3, [x21, x0, lsl #3]
   13a30:	add	x20, x20, #0x4
   13a34:	ldr	x0, [x1, #16]
   13a38:	ldr	x1, [x2, #16]
   13a3c:	prfm	pldl1keep, [x3]
   13a40:	add	x1, x1, x0
   13a44:	ldr	x0, [x21, x20, lsl #3]
   13a48:	str	x1, [x2, #16]
   13a4c:	cmp	x19, #0x8
   13a50:	b.ls	13a60 <_ZdaPvRKSt9nothrow_t@@Base+0x1ce0>  // b.plast
   13a54:	sub	x19, x19, #0x1
   13a58:	ands	x3, x0, x19
   13a5c:	b.ne	13cc8 <_ZdaPvRKSt9nothrow_t@@Base+0x1f48>  // b.any
   13a60:	ldp	x23, x24, [sp, #32]
   13a64:	ldp	x21, x22, [sp, #16]
   13a68:	ldr	x30, [sp, #64]
   13a6c:	ldp	x19, x20, [sp], #80
   13a70:	ret
   13a74:	stp	x25, x26, [sp, #48]
   13a78:	sub	x24, x3, #0x1
   13a7c:	tst	x3, x24
   13a80:	b.ne	13ce8 <_ZdaPvRKSt9nothrow_t@@Base+0x1f68>  // b.any
   13a84:	add	x25, x23, #0x80, lsl #12
   13a88:	add	x25, x25, #0xc00
   13a8c:	ldr	x2, [x25, #448]
   13a90:	sub	x0, x2, #0x1
   13a94:	tst	x2, x0
   13a98:	b.ne	13c64 <_ZdaPvRKSt9nothrow_t@@Base+0x1ee4>  // b.any
   13a9c:	add	x20, x22, x0
   13aa0:	neg	x0, x2
   13aa4:	and	x20, x20, x0
   13aa8:	cmp	x19, x2
   13aac:	add	x20, x20, x2
   13ab0:	add	x0, x20, x19
   13ab4:	csel	x20, x0, x20, hi  // hi = pmore
   13ab8:	cmp	x22, x20
   13abc:	b.hi	13c98 <_ZdaPvRKSt9nothrow_t@@Base+0x1f18>  // b.pmore
   13ac0:	adrp	x1, 5a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x26398>
   13ac4:	mov	x0, x20
   13ac8:	ldr	x1, [x1, #632]
   13acc:	bl	1eac0 <__sanitizer_set_report_fd@@Base+0x6c40>
   13ad0:	cbz	x0, 13d28 <_ZdaPvRKSt9nothrow_t@@Base+0x1fa8>
   13ad4:	ldr	x1, [x25, #448]
   13ad8:	sub	x2, x1, #0x1
   13adc:	tst	x0, x2
   13ae0:	b.ne	13d38 <_ZdaPvRKSt9nothrow_t@@Base+0x1fb8>  // b.any
   13ae4:	add	x21, x0, x1
   13ae8:	ands	x3, x24, x21
   13aec:	b.eq	13b00 <_ZdaPvRKSt9nothrow_t@@Base+0x1d80>  // b.none
   13af0:	add	x21, x19, x21
   13af4:	sub	x21, x21, x3
   13af8:	tst	x24, x21
   13afc:	b.ne	13d58 <_ZdaPvRKSt9nothrow_t@@Base+0x1fd8>  // b.any
   13b00:	tst	x21, x2
   13b04:	b.ne	13d78 <_ZdaPvRKSt9nothrow_t@@Base+0x1ff8>  // b.any
   13b08:	add	x3, x21, x22
   13b0c:	cmp	x0, x3
   13b10:	b.hi	13d98 <_ZdaPvRKSt9nothrow_t@@Base+0x2018>  // b.pmore
   13b14:	add	x4, x0, x20
   13b18:	cmp	x4, x3
   13b1c:	b.cc	13db4 <_ZdaPvRKSt9nothrow_t@@Base+0x2034>  // b.lo, b.ul, b.last
   13b20:	sub	x24, x21, x1
   13b24:	add	x26, x23, #0xc1, lsl #12
   13b28:	mov	w1, #0x1                   	// #1
   13b2c:	stp	x0, x20, [x24]
   13b30:	str	x22, [x24, #16]
   13b34:	ldxrb	w0, [x26]
   13b38:	stxrb	w2, w1, [x26]
   13b3c:	cbnz	w2, 13b34 <_ZdaPvRKSt9nothrow_t@@Base+0x1db4>
   13b40:	dmb	ish
   13b44:	tst	w0, #0xff
   13b48:	b.eq	13b54 <_ZdaPvRKSt9nothrow_t@@Base+0x1dd4>  // b.none
   13b4c:	mov	x0, x26
   13b50:	bl	85d8 <__sanitizer_print_stack_trace@@Base+0x300>
   13b54:	add	x25, x25, #0x1c0
   13b58:	mov	x0, #0x7fff                	// #32767
   13b5c:	add	x1, x25, #0x40, lsl #12
   13b60:	ldr	x3, [x1, #16]
   13b64:	cmp	x3, x0
   13b68:	b.hi	13dcc <_ZdaPvRKSt9nothrow_t@@Base+0x204c>  // b.pmore
   13b6c:	clz	x0, x20
   13b70:	mov	w2, #0x3f                  	// #63
   13b74:	sub	w2, w2, w0
   13b78:	add	x5, x3, #0x1
   13b7c:	ldp	x0, x4, [x1, #48]
   13b80:	add	x23, x23, w2, sxtw #3
   13b84:	ldr	x6, [x25, #8]
   13b88:	str	x5, [x1, #16]
   13b8c:	ldr	x5, [x1, #32]
   13b90:	str	x3, [x24, #24]
   13b94:	add	x0, x20, x0
   13b98:	add	x23, x23, #0xc0, lsl #12
   13b9c:	cmp	x4, x0
   13ba0:	str	x24, [x6, x3, lsl #3]
   13ba4:	csel	x4, x4, x0, cs  // cs = hs, nlast
   13ba8:	add	x5, x5, #0x1
   13bac:	strb	wzr, [x1, #24]
   13bb0:	str	x5, [x1, #32]
   13bb4:	stp	x0, x4, [x1, #48]
   13bb8:	ldr	x1, [x23, #3584]
   13bbc:	ldr	x0, [x26, #24]
   13bc0:	add	x1, x1, #0x1
   13bc4:	str	x1, [x23, #3584]
   13bc8:	add	x0, x20, x0
   13bcc:	str	x0, [x26, #24]
   13bd0:	ldr	x0, [x26, #32]
   13bd4:	add	x20, x20, x0
   13bd8:	str	x20, [x26, #32]
   13bdc:	dmb	ish
   13be0:	strb	wzr, [x26]
   13be4:	mov	x0, x21
   13be8:	ldp	x25, x26, [sp, #48]
   13bec:	b	13a4c <_ZdaPvRKSt9nothrow_t@@Base+0x1ccc>
   13bf0:	sub	x24, x3, #0x1
   13bf4:	tst	x3, x24
   13bf8:	b.ne	13c60 <_ZdaPvRKSt9nothrow_t@@Base+0x1ee0>  // b.any
   13bfc:	sub	x3, x1, #0x1
   13c00:	neg	x1, x19
   13c04:	cmp	x19, #0x20, lsl #12
   13c08:	and	x1, x3, x1
   13c0c:	mov	x0, #0x20000               	// #131072
   13c10:	ccmp	x1, x0, #0x2, ls  // ls = plast
   13c14:	b.hi	13c58 <_ZdaPvRKSt9nothrow_t@@Base+0x1ed8>  // b.pmore
   13c18:	mov	x22, x1
   13c1c:	cmp	x22, #0x100
   13c20:	b.hi	139bc <_ZdaPvRKSt9nothrow_t@@Base+0x1c3c>  // b.pmore
   13c24:	add	x20, x22, #0xf
   13c28:	cmp	xzr, x20, lsr #4
   13c2c:	lsr	x20, x20, #4
   13c30:	b.ne	139f8 <_ZdaPvRKSt9nothrow_t@@Base+0x1c78>  // b.any
   13c34:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   13c38:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   13c3c:	add	x2, x2, #0x388
   13c40:	add	x0, x0, #0x330
   13c44:	mov	x4, #0x0                   	// #0
   13c48:	mov	x3, #0x0                   	// #0
   13c4c:	mov	w1, #0x99                  	// #153
   13c50:	stp	x25, x26, [sp, #48]
   13c54:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   13c58:	stp	x25, x26, [sp, #48]
   13c5c:	b	13a84 <_ZdaPvRKSt9nothrow_t@@Base+0x1d04>
   13c60:	stp	x25, x26, [sp, #48]
   13c64:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   13c68:	add	x0, x0, #0xbf8
   13c6c:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   13c70:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   13c74:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   13c78:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   13c7c:	mov	x3, x20
   13c80:	add	x2, x2, #0x410
   13c84:	add	x0, x0, #0x330
   13c88:	mov	x4, #0x36                  	// #54
   13c8c:	mov	w1, #0x9a                  	// #154
   13c90:	stp	x25, x26, [sp, #48]
   13c94:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   13c98:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   13c9c:	mov	x3, x19
   13ca0:	mov	x2, x20
   13ca4:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   13ca8:	ldr	x1, [x1, #4024]
   13cac:	add	x0, x0, #0x458
   13cb0:	ldr	x1, [x1]
   13cb4:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   13cb8:	mov	x0, #0x0                   	// #0
   13cbc:	ldp	x23, x24, [sp, #32]
   13cc0:	ldp	x25, x26, [sp, #48]
   13cc4:	b	13a64 <_ZdaPvRKSt9nothrow_t@@Base+0x1ce4>
   13cc8:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   13ccc:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   13cd0:	add	x2, x2, #0x5a0
   13cd4:	add	x0, x0, #0x458
   13cd8:	mov	x4, #0x0                   	// #0
   13cdc:	mov	w1, #0x49                  	// #73
   13ce0:	stp	x25, x26, [sp, #48]
   13ce4:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   13ce8:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   13cec:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   13cf0:	add	x2, x2, #0x430
   13cf4:	add	x0, x0, #0x3f8
   13cf8:	mov	x4, #0x0                   	// #0
   13cfc:	mov	x3, #0x0                   	// #0
   13d00:	mov	w1, #0x56                  	// #86
   13d04:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   13d08:	mov	x2, x23
   13d0c:	mov	x3, x20
   13d10:	mov	x0, x21
   13d14:	bl	135f0 <_ZdaPvRKSt9nothrow_t@@Base+0x1870>
   13d18:	tst	w0, #0xff
   13d1c:	b.eq	13d2c <_ZdaPvRKSt9nothrow_t@@Base+0x1fac>  // b.none
   13d20:	ldr	x3, [x21, x22]
   13d24:	b	13a08 <_ZdaPvRKSt9nothrow_t@@Base+0x1c88>
   13d28:	ldp	x25, x26, [sp, #48]
   13d2c:	mov	x0, #0x0                   	// #0
   13d30:	ldp	x23, x24, [sp, #32]
   13d34:	b	13a64 <_ZdaPvRKSt9nothrow_t@@Base+0x1ce4>
   13d38:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   13d3c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   13d40:	add	x2, x2, #0x4c0
   13d44:	add	x0, x0, #0x3f8
   13d48:	mov	x4, #0x0                   	// #0
   13d4c:	mov	x3, #0x0                   	// #0
   13d50:	mov	w1, #0x65                  	// #101
   13d54:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   13d58:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   13d5c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   13d60:	add	x2, x2, #0x4f0
   13d64:	add	x0, x0, #0x3f8
   13d68:	mov	x4, #0x0                   	// #0
   13d6c:	mov	x3, #0x0                   	// #0
   13d70:	mov	w1, #0x6b                  	// #107
   13d74:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   13d78:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   13d7c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   13d80:	add	x2, x2, #0x518
   13d84:	add	x0, x0, #0x3f8
   13d88:	mov	x4, #0x0                   	// #0
   13d8c:	mov	x3, #0x0                   	// #0
   13d90:	mov	w1, #0x6c                  	// #108
   13d94:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   13d98:	mov	x4, x0
   13d9c:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   13da0:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   13da4:	add	x2, x2, #0x540
   13da8:	add	x0, x0, #0x3f8
   13dac:	mov	w1, #0x6d                  	// #109
   13db0:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   13db4:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   13db8:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   13dbc:	add	x2, x2, #0x560
   13dc0:	add	x0, x0, #0x3f8
   13dc4:	mov	w1, #0x6e                  	// #110
   13dc8:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   13dcc:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   13dd0:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   13dd4:	add	x2, x2, #0x580
   13dd8:	add	x0, x0, #0x3f8
   13ddc:	mov	x4, #0x8000                	// #32768
   13de0:	mov	w1, #0x16                  	// #22
   13de4:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   13de8:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   13dec:	mov	x2, x22
   13df0:	adrp	x0, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   13df4:	add	x0, x0, #0x328
   13df8:	ldr	x1, [x1, #4024]
   13dfc:	ldr	x1, [x1]
   13e00:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   13e04:	mov	x0, #0x0                   	// #0
   13e08:	b	13a64 <_ZdaPvRKSt9nothrow_t@@Base+0x1ce4>
   13e0c:	nop
   13e10:	stp	x19, x20, [sp, #-80]!
   13e14:	stp	x23, x24, [sp, #32]
   13e18:	mov	x23, x1
   13e1c:	add	x1, x0, x3, lsl #10
   13e20:	stp	x25, x26, [sp, #48]
   13e24:	mov	x24, x3
   13e28:	mov	x25, x2
   13e2c:	ldp	x20, x19, [x23]
   13e30:	stp	x21, x22, [sp, #16]
   13e34:	ldr	x26, [x1, #24]
   13e38:	str	x30, [sp, #72]
   13e3c:	lsr	x19, x19, #1
   13e40:	cmp	x19, x20
   13e44:	csel	x19, x19, x20, ls  // ls = plast
   13e48:	sub	x21, x20, x19
   13e4c:	cbnz	x26, 13f04 <_ZdaPvRKSt9nothrow_t@@Base+0x2184>
   13e50:	add	x0, x21, #0x4
   13e54:	ldr	x2, [x23, x0, lsl #3]
   13e58:	cbz	x2, 13f90 <_ZdaPvRKSt9nothrow_t@@Base+0x2210>
   13e5c:	add	x5, x21, #0x4
   13e60:	str	x19, [x2, #8]
   13e64:	add	x5, x23, x5, lsl #3
   13e68:	cbz	x19, 13ed8 <_ZdaPvRKSt9nothrow_t@@Base+0x2158>
   13e6c:	add	x0, x20, #0x6
   13e70:	add	x4, x20, #0x4
   13e74:	sub	x0, x0, x19
   13e78:	sub	x4, x4, x19
   13e7c:	add	x7, x2, #0x10
   13e80:	add	x1, x2, #0x20
   13e84:	add	x0, x23, x0, lsl #3
   13e88:	add	x4, x23, x4, lsl #3
   13e8c:	cmp	x7, x0
   13e90:	sub	x0, x19, #0x1
   13e94:	ccmp	x1, x4, #0x0, cc  // cc = lo, ul, last
   13e98:	ccmp	x0, #0x9, #0x0, ls  // ls = plast
   13e9c:	b.ls	13f70 <_ZdaPvRKSt9nothrow_t@@Base+0x21f0>  // b.plast
   13ea0:	lsr	x6, x19, #1
   13ea4:	mov	x0, #0x0                   	// #0
   13ea8:	lsl	x6, x6, #4
   13eac:	nop
   13eb0:	ldr	q0, [x4, x0]
   13eb4:	str	q0, [x7, x0]
   13eb8:	add	x0, x0, #0x10
   13ebc:	cmp	x0, x6
   13ec0:	b.ne	13eb0 <_ZdaPvRKSt9nothrow_t@@Base+0x2130>  // b.any
   13ec4:	and	x0, x19, #0xfffffffffffffffe
   13ec8:	tbz	w19, #0, 13ed8 <_ZdaPvRKSt9nothrow_t@@Base+0x2158>
   13ecc:	add	x4, x0, #0x2
   13ed0:	ldr	x0, [x5, x0, lsl #3]
   13ed4:	str	x0, [x2, x4, lsl #3]
   13ed8:	ldr	x3, [x23]
   13edc:	mov	x0, x25
   13ee0:	ldp	x21, x22, [sp, #16]
   13ee4:	sub	x19, x3, x19
   13ee8:	ldp	x25, x26, [sp, #48]
   13eec:	mov	x1, x24
   13ef0:	ldr	x30, [sp, #72]
   13ef4:	str	x19, [x23]
   13ef8:	ldp	x23, x24, [sp, #32]
   13efc:	ldp	x19, x20, [sp], #80
   13f00:	b	12e80 <_ZdaPvRKSt9nothrow_t@@Base+0x1100>
   13f04:	str	x27, [sp, #64]
   13f08:	cmp	x26, #0x35
   13f0c:	b.hi	13fb0 <_ZdaPvRKSt9nothrow_t@@Base+0x2230>  // b.pmore
   13f10:	lsl	x27, x26, #10
   13f14:	mov	x22, x0
   13f18:	add	x1, x0, x27
   13f1c:	ldr	x3, [x0, x27]
   13f20:	cbz	x3, 13fd0 <_ZdaPvRKSt9nothrow_t@@Base+0x2250>
   13f24:	lsl	x26, x26, #7
   13f28:	add	x2, x22, x27
   13f2c:	add	x0, x26, x3
   13f30:	mov	x1, #0xd800                	// #55296
   13f34:	add	x0, x0, #0x2
   13f38:	sub	x3, x3, #0x1
   13f3c:	add	x1, x22, x1
   13f40:	str	x3, [x22, x27]
   13f44:	add	x26, x26, x3
   13f48:	ldr	x3, [x22, x0, lsl #3]
   13f4c:	add	x26, x26, #0x4
   13f50:	ldr	x2, [x2, #16]
   13f54:	ldr	x0, [x1, #16]
   13f58:	prfm	pldl1keep, [x3]
   13f5c:	add	x0, x0, x2
   13f60:	ldr	x2, [x22, x26, lsl #3]
   13f64:	ldr	x27, [sp, #64]
   13f68:	str	x0, [x1, #16]
   13f6c:	b	13e58 <_ZdaPvRKSt9nothrow_t@@Base+0x20d8>
   13f70:	mov	x0, #0x0                   	// #0
   13f74:	nop
   13f78:	ldr	x1, [x5, x0, lsl #3]
   13f7c:	str	x1, [x7, x0, lsl #3]
   13f80:	add	x0, x0, #0x1
   13f84:	cmp	x19, x0
   13f88:	b.ne	13f78 <_ZdaPvRKSt9nothrow_t@@Base+0x21f8>  // b.any
   13f8c:	b	13ed8 <_ZdaPvRKSt9nothrow_t@@Base+0x2158>
   13f90:	str	x27, [sp, #64]
   13f94:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   13f98:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   13f9c:	add	x0, x0, #0x4b8
   13fa0:	ldr	x1, [x1, #4024]
   13fa4:	ldr	x1, [x1]
   13fa8:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   13fac:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   13fb0:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   13fb4:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   13fb8:	mov	x3, x26
   13fbc:	add	x2, x2, #0x410
   13fc0:	add	x0, x0, #0x330
   13fc4:	mov	x4, #0x36                  	// #54
   13fc8:	mov	w1, #0x9a                  	// #154
   13fcc:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   13fd0:	mov	x3, x26
   13fd4:	bl	135f0 <_ZdaPvRKSt9nothrow_t@@Base+0x1870>
   13fd8:	tst	w0, #0xff
   13fdc:	b.eq	13f94 <_ZdaPvRKSt9nothrow_t@@Base+0x2214>  // b.none
   13fe0:	ldr	x3, [x22, x27]
   13fe4:	b	13f24 <_ZdaPvRKSt9nothrow_t@@Base+0x21a4>
   13fe8:	stp	x19, x20, [sp, #-64]!
   13fec:	stp	x23, x24, [sp, #32]
   13ff0:	mov	x23, x3
   13ff4:	mov	x24, x4
   13ff8:	str	x30, [sp, #56]
   13ffc:	cbz	x2, 142a8 <_ZdaPvRKSt9nothrow_t@@Base+0x2528>
   14000:	stp	x21, x22, [sp, #16]
   14004:	mov	x19, x2
   14008:	mov	x20, x0
   1400c:	mov	x22, x1
   14010:	cbz	x3, 142c0 <_ZdaPvRKSt9nothrow_t@@Base+0x2540>
   14014:	str	x25, [sp, #48]
   14018:	mov	x0, #0xffffffffffff        	// #281474976710655
   1401c:	cmp	x2, x0
   14020:	b.ls	14238 <_ZdaPvRKSt9nothrow_t@@Base+0x24b8>  // b.plast
   14024:	add	x25, x20, #0xc1, lsl #12
   14028:	mov	w1, #0x1                   	// #1
   1402c:	ldxrb	w0, [x25]
   14030:	stxrb	w2, w1, [x25]
   14034:	cbnz	w2, 1402c <_ZdaPvRKSt9nothrow_t@@Base+0x22ac>
   14038:	dmb	ish
   1403c:	tst	w0, #0xff
   14040:	b.eq	1404c <_ZdaPvRKSt9nothrow_t@@Base+0x22cc>  // b.none
   14044:	mov	x0, x25
   14048:	bl	85d8 <__sanitizer_print_stack_trace@@Base+0x300>
   1404c:	add	x21, x20, #0x80, lsl #12
   14050:	mov	x3, #0x0                   	// #0
   14054:	add	x21, x21, #0xc00
   14058:	add	x1, x21, #0x1c0
   1405c:	add	x0, x1, #0x40, lsl #12
   14060:	ldr	x6, [x21, #456]
   14064:	ldr	x7, [x0, #16]
   14068:	add	x8, x6, x7, lsl #3
   1406c:	cbz	x7, 14280 <_ZdaPvRKSt9nothrow_t@@Base+0x2500>
   14070:	ldr	x7, [x6]
   14074:	cmp	x19, x7
   14078:	b.cc	1408c <_ZdaPvRKSt9nothrow_t@@Base+0x230c>  // b.lo, b.ul, b.last
   1407c:	sub	x2, x19, x3
   14080:	sub	x1, x19, x7
   14084:	cmp	x2, x1
   14088:	csel	x3, x3, x7, ls  // ls = plast
   1408c:	add	x6, x6, #0x8
   14090:	cmp	x6, x8
   14094:	b.ne	14070 <_ZdaPvRKSt9nothrow_t@@Base+0x22f0>  // b.any
   14098:	cbz	x3, 14280 <_ZdaPvRKSt9nothrow_t@@Base+0x2500>
   1409c:	ldr	x4, [x3]
   140a0:	cmp	x4, x3
   140a4:	b.hi	1456c <_ZdaPvRKSt9nothrow_t@@Base+0x27ec>  // b.pmore
   140a8:	ldr	x0, [x3, #8]
   140ac:	add	x4, x4, x0
   140b0:	cmp	x4, x3
   140b4:	b.ls	14584 <_ZdaPvRKSt9nothrow_t@@Base+0x2804>  // b.plast
   140b8:	cmp	x19, x3
   140bc:	b.cc	1459c <_ZdaPvRKSt9nothrow_t@@Base+0x281c>  // b.lo, b.ul, b.last
   140c0:	cmp	x4, x19
   140c4:	b.ls	14280 <_ZdaPvRKSt9nothrow_t@@Base+0x2500>  // b.plast
   140c8:	ldr	x0, [x21, #448]
   140cc:	sub	x1, x0, #0x1
   140d0:	tst	x1, x3
   140d4:	b.ne	144e0 <_ZdaPvRKSt9nothrow_t@@Base+0x2760>  // b.any
   140d8:	dmb	ish
   140dc:	strb	wzr, [x25]
   140e0:	cmn	x0, x3
   140e4:	b.eq	14288 <_ZdaPvRKSt9nothrow_t@@Base+0x2508>  // b.none
   140e8:	mov	x0, #0xffffffffffff        	// #281474976710655
   140ec:	cmp	x19, x0
   140f0:	b.ls	14428 <_ZdaPvRKSt9nothrow_t@@Base+0x26a8>  // b.plast
   140f4:	ldr	x1, [x21, #448]
   140f8:	sub	x0, x1, #0x1
   140fc:	tst	x19, x0
   14100:	b.ne	144c0 <_ZdaPvRKSt9nothrow_t@@Base+0x2740>  // b.any
   14104:	sub	x2, x19, x1
   14108:	tst	x1, x0
   1410c:	ldr	x5, [x2, #16]
   14110:	b.ne	145b8 <_ZdaPvRKSt9nothrow_t@@Base+0x2838>  // b.any
   14114:	add	x5, x5, x0
   14118:	neg	x0, x1
   1411c:	and	x0, x5, x0
   14120:	cmp	x0, x23
   14124:	csel	x21, x0, x23, ls  // ls = plast
   14128:	mov	x2, x23
   1412c:	mov	x3, x24
   14130:	mov	x1, x22
   14134:	mov	x0, x20
   14138:	bl	13978 <_ZdaPvRKSt9nothrow_t@@Base+0x1bf8>
   1413c:	mov	x23, x0
   14140:	cbz	x0, 14150 <_ZdaPvRKSt9nothrow_t@@Base+0x23d0>
   14144:	mov	x2, x21
   14148:	mov	x1, x19
   1414c:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   14150:	mov	x0, #0xffffffffffff        	// #281474976710655
   14154:	cmp	x19, x0
   14158:	b.ls	14434 <_ZdaPvRKSt9nothrow_t@@Base+0x26b4>  // b.plast
   1415c:	add	x21, x20, #0x80, lsl #12
   14160:	add	x21, x21, #0xc00
   14164:	ldr	x4, [x21, #448]
   14168:	sub	x0, x4, #0x1
   1416c:	tst	x19, x0
   14170:	b.ne	144c0 <_ZdaPvRKSt9nothrow_t@@Base+0x2740>  // b.any
   14174:	sub	x19, x19, x4
   14178:	add	x25, x20, #0xc1, lsl #12
   1417c:	mov	w1, #0x1                   	// #1
   14180:	ldxrb	w0, [x25]
   14184:	stxrb	w2, w1, [x25]
   14188:	cbnz	w2, 14180 <_ZdaPvRKSt9nothrow_t@@Base+0x2400>
   1418c:	dmb	ish
   14190:	tst	w0, #0xff
   14194:	b.eq	141a0 <_ZdaPvRKSt9nothrow_t@@Base+0x2420>  // b.none
   14198:	mov	x0, x25
   1419c:	bl	85d8 <__sanitizer_print_stack_trace@@Base+0x300>
   141a0:	ldr	x0, [x19, #24]
   141a4:	add	x21, x21, #0x1c0
   141a8:	ldr	x2, [x21, #8]
   141ac:	ldr	x3, [x2, x0, lsl #3]
   141b0:	cmp	x3, x19
   141b4:	b.ne	145c8 <_ZdaPvRKSt9nothrow_t@@Base+0x2848>  // b.any
   141b8:	add	x21, x21, #0x40, lsl #12
   141bc:	ldr	x4, [x21, #16]
   141c0:	cmp	x0, x4
   141c4:	b.cs	145e4 <_ZdaPvRKSt9nothrow_t@@Base+0x2864>  // b.hs, b.nlast
   141c8:	sub	x4, x4, #0x1
   141cc:	ldr	x3, [x19, #8]
   141d0:	ldr	x5, [x2, x4, lsl #3]
   141d4:	str	x4, [x21, #16]
   141d8:	str	x5, [x2, x0, lsl #3]
   141dc:	ldp	x4, x2, [x21, #40]
   141e0:	str	x0, [x5, #24]
   141e4:	ldr	x0, [x25, #24]
   141e8:	strb	wzr, [x21, #24]
   141ec:	sub	x0, x0, x3
   141f0:	sub	x2, x2, x3
   141f4:	add	x4, x4, #0x1
   141f8:	stp	x4, x2, [x21, #40]
   141fc:	str	x0, [x25, #24]
   14200:	ldr	x0, [x25, #32]
   14204:	sub	x0, x0, x3
   14208:	str	x0, [x25, #32]
   1420c:	dmb	ish
   14210:	strb	wzr, [x25]
   14214:	ldp	x0, x1, [x19]
   14218:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   1421c:	ldr	x25, [sp, #48]
   14220:	mov	x0, x23
   14224:	ldp	x21, x22, [sp, #16]
   14228:	ldp	x23, x24, [sp, #32]
   1422c:	ldr	x30, [sp, #56]
   14230:	ldp	x19, x20, [sp], #64
   14234:	ret
   14238:	lsr	x0, x2, #32
   1423c:	ldr	x1, [x20, x0, lsl #3]
   14240:	dmb	ish
   14244:	cbz	x1, 14024 <_ZdaPvRKSt9nothrow_t@@Base+0x22a4>
   14248:	lsr	w2, w2, #20
   1424c:	lsr	x3, x19, #20
   14250:	ldrb	w1, [x1, x2]
   14254:	cbz	w1, 14024 <_ZdaPvRKSt9nothrow_t@@Base+0x22a4>
   14258:	lsl	x1, x0, #3
   1425c:	ldr	x0, [x20, x0, lsl #3]
   14260:	dmb	ish
   14264:	cbz	x0, 14274 <_ZdaPvRKSt9nothrow_t@@Base+0x24f4>
   14268:	and	x3, x3, #0xfff
   1426c:	ldrb	w0, [x0, x3]
   14270:	cbnz	w0, 14500 <_ZdaPvRKSt9nothrow_t@@Base+0x2780>
   14274:	add	x21, x20, #0x80, lsl #12
   14278:	add	x21, x21, #0xc00
   1427c:	b	140f4 <_ZdaPvRKSt9nothrow_t@@Base+0x2374>
   14280:	dmb	ish
   14284:	strb	wzr, [x25]
   14288:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   1428c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   14290:	add	x2, x2, #0x508
   14294:	add	x0, x0, #0x458
   14298:	mov	x4, #0x0                   	// #0
   1429c:	mov	x3, #0x0                   	// #0
   142a0:	mov	w1, #0x69                  	// #105
   142a4:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   142a8:	mov	x2, x23
   142ac:	mov	x3, x4
   142b0:	ldp	x23, x24, [sp, #32]
   142b4:	ldr	x30, [sp, #56]
   142b8:	ldp	x19, x20, [sp], #64
   142bc:	b	13978 <_ZdaPvRKSt9nothrow_t@@Base+0x1bf8>
   142c0:	mov	x0, #0xffffffffffff        	// #281474976710655
   142c4:	cmp	x2, x0
   142c8:	b.hi	14358 <_ZdaPvRKSt9nothrow_t@@Base+0x25d8>  // b.pmore
   142cc:	lsr	x1, x2, #32
   142d0:	ldr	x0, [x20, x1, lsl #3]
   142d4:	dmb	ish
   142d8:	cbz	x0, 14358 <_ZdaPvRKSt9nothrow_t@@Base+0x25d8>
   142dc:	lsr	w2, w2, #20
   142e0:	ldrb	w0, [x0, x2]
   142e4:	cbz	w0, 14358 <_ZdaPvRKSt9nothrow_t@@Base+0x25d8>
   142e8:	ldr	x0, [x20, x1, lsl #3]
   142ec:	dmb	ish
   142f0:	cbz	x0, 14610 <_ZdaPvRKSt9nothrow_t@@Base+0x2890>
   142f4:	ldrb	w21, [x0, x2]
   142f8:	cbz	x21, 14610 <_ZdaPvRKSt9nothrow_t@@Base+0x2890>
   142fc:	cmp	x21, #0x35
   14300:	b.hi	14654 <_ZdaPvRKSt9nothrow_t@@Base+0x28d4>  // b.pmore
   14304:	lsl	x23, x21, #10
   14308:	add	x1, x22, x23
   1430c:	ldr	x2, [x1, #8]
   14310:	cbz	x2, 14788 <_ZdaPvRKSt9nothrow_t@@Base+0x2a08>
   14314:	ldr	x0, [x22, x23]
   14318:	cmp	x0, x2
   1431c:	b.eq	14770 <_ZdaPvRKSt9nothrow_t@@Base+0x29f0>  // b.none
   14320:	add	x1, x0, x21, lsl #7
   14324:	add	x3, x22, x23
   14328:	add	x1, x1, #0x4
   1432c:	add	x0, x0, #0x1
   14330:	mov	x5, #0xd800                	// #55296
   14334:	add	x2, x22, x5
   14338:	str	x0, [x22, x23]
   1433c:	mov	x23, #0x0                   	// #0
   14340:	str	x19, [x22, x1, lsl #3]
   14344:	ldr	x0, [x2, #16]
   14348:	ldr	x1, [x3, #16]
   1434c:	sub	x0, x0, x1
   14350:	str	x0, [x2, #16]
   14354:	b	14220 <_ZdaPvRKSt9nothrow_t@@Base+0x24a0>
   14358:	add	x21, x20, #0x80, lsl #12
   1435c:	add	x21, x21, #0xc00
   14360:	ldr	x4, [x21, #448]
   14364:	str	x25, [sp, #48]
   14368:	sub	x0, x4, #0x1
   1436c:	tst	x19, x0
   14370:	b.ne	144c0 <_ZdaPvRKSt9nothrow_t@@Base+0x2740>  // b.any
   14374:	sub	x19, x19, x4
   14378:	add	x25, x20, #0xc1, lsl #12
   1437c:	mov	w1, #0x1                   	// #1
   14380:	ldxrb	w0, [x25]
   14384:	stxrb	w2, w1, [x25]
   14388:	cbnz	w2, 14380 <_ZdaPvRKSt9nothrow_t@@Base+0x2600>
   1438c:	dmb	ish
   14390:	tst	w0, #0xff
   14394:	b.eq	143a0 <_ZdaPvRKSt9nothrow_t@@Base+0x2620>  // b.none
   14398:	mov	x0, x25
   1439c:	bl	85d8 <__sanitizer_print_stack_trace@@Base+0x300>
   143a0:	ldr	x0, [x19, #24]
   143a4:	add	x21, x21, #0x1c0
   143a8:	ldr	x2, [x21, #8]
   143ac:	ldr	x3, [x2, x0, lsl #3]
   143b0:	cmp	x3, x19
   143b4:	b.ne	145c8 <_ZdaPvRKSt9nothrow_t@@Base+0x2848>  // b.any
   143b8:	add	x21, x21, #0x40, lsl #12
   143bc:	ldr	x4, [x21, #16]
   143c0:	cmp	x0, x4
   143c4:	b.cs	145e4 <_ZdaPvRKSt9nothrow_t@@Base+0x2864>  // b.hs, b.nlast
   143c8:	sub	x4, x4, #0x1
   143cc:	ldr	x3, [x19, #8]
   143d0:	ldr	x5, [x2, x4, lsl #3]
   143d4:	str	x4, [x21, #16]
   143d8:	str	x5, [x2, x0, lsl #3]
   143dc:	ldp	x4, x2, [x21, #40]
   143e0:	str	x0, [x5, #24]
   143e4:	ldr	x0, [x25, #24]
   143e8:	strb	wzr, [x21, #24]
   143ec:	sub	x0, x0, x3
   143f0:	sub	x2, x2, x3
   143f4:	add	x4, x4, #0x1
   143f8:	stp	x4, x2, [x21, #40]
   143fc:	str	x0, [x25, #24]
   14400:	ldr	x0, [x25, #32]
   14404:	sub	x0, x0, x3
   14408:	str	x0, [x25, #32]
   1440c:	dmb	ish
   14410:	strb	wzr, [x25]
   14414:	ldp	x0, x1, [x19]
   14418:	mov	x23, #0x0                   	// #0
   1441c:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   14420:	ldr	x25, [sp, #48]
   14424:	b	14220 <_ZdaPvRKSt9nothrow_t@@Base+0x24a0>
   14428:	lsr	x3, x19, #20
   1442c:	lsr	x0, x19, #32
   14430:	b	14258 <_ZdaPvRKSt9nothrow_t@@Base+0x24d8>
   14434:	lsr	x1, x19, #32
   14438:	ldr	x0, [x20, x1, lsl #3]
   1443c:	dmb	ish
   14440:	cbz	x0, 1415c <_ZdaPvRKSt9nothrow_t@@Base+0x23dc>
   14444:	lsr	w2, w19, #20
   14448:	ldrb	w0, [x0, x2]
   1444c:	cbz	w0, 1415c <_ZdaPvRKSt9nothrow_t@@Base+0x23dc>
   14450:	ldr	x0, [x20, x1, lsl #3]
   14454:	dmb	ish
   14458:	cbz	x0, 14614 <_ZdaPvRKSt9nothrow_t@@Base+0x2894>
   1445c:	ldrb	w21, [x0, x2]
   14460:	cbz	x21, 14614 <_ZdaPvRKSt9nothrow_t@@Base+0x2894>
   14464:	cmp	x21, #0x35
   14468:	b.hi	14658 <_ZdaPvRKSt9nothrow_t@@Base+0x28d8>  // b.pmore
   1446c:	lsl	x24, x21, #10
   14470:	add	x1, x22, x24
   14474:	ldr	x2, [x1, #8]
   14478:	cbz	x2, 14690 <_ZdaPvRKSt9nothrow_t@@Base+0x2910>
   1447c:	ldr	x0, [x22, x24]
   14480:	cmp	x0, x2
   14484:	b.eq	14678 <_ZdaPvRKSt9nothrow_t@@Base+0x28f8>  // b.none
   14488:	add	x1, x0, x21, lsl #7
   1448c:	add	x3, x22, x24
   14490:	add	x1, x1, #0x4
   14494:	add	x0, x0, #0x1
   14498:	mov	x4, #0xd800                	// #55296
   1449c:	add	x2, x22, x4
   144a0:	str	x0, [x22, x24]
   144a4:	str	x19, [x22, x1, lsl #3]
   144a8:	ldr	x0, [x2, #16]
   144ac:	ldr	x1, [x3, #16]
   144b0:	ldr	x25, [sp, #48]
   144b4:	sub	x0, x0, x1
   144b8:	str	x0, [x2, #16]
   144bc:	b	14220 <_ZdaPvRKSt9nothrow_t@@Base+0x24a0>
   144c0:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   144c4:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   144c8:	add	x2, x2, #0xd90
   144cc:	add	x0, x0, #0x3f8
   144d0:	mov	x4, #0x0                   	// #0
   144d4:	mov	x3, #0x0                   	// #0
   144d8:	mov	w1, #0x12d                 	// #301
   144dc:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   144e0:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   144e4:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   144e8:	add	x2, x2, #0xf98
   144ec:	add	x0, x0, #0x3f8
   144f0:	mov	x4, #0x0                   	// #0
   144f4:	mov	x3, #0x0                   	// #0
   144f8:	mov	w1, #0x135                 	// #309
   144fc:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   14500:	ldr	x0, [x20, x1]
   14504:	dmb	ish
   14508:	cbz	x0, 14634 <_ZdaPvRKSt9nothrow_t@@Base+0x28b4>
   1450c:	ldrb	w0, [x0, x3]
   14510:	cbz	w0, 14634 <_ZdaPvRKSt9nothrow_t@@Base+0x28b4>
   14514:	ldr	x21, [x20, x1]
   14518:	dmb	ish
   1451c:	cbz	x21, 14128 <_ZdaPvRKSt9nothrow_t@@Base+0x23a8>
   14520:	ldrb	w0, [x21, x3]
   14524:	cmp	w0, #0x35
   14528:	and	x1, x0, #0xff
   1452c:	b.eq	14600 <_ZdaPvRKSt9nothrow_t@@Base+0x2880>  // b.none
   14530:	ubfiz	x0, x0, #4, #8
   14534:	cmp	x0, x23
   14538:	csel	x21, x0, x23, ls  // ls = plast
   1453c:	cmp	x1, #0x10
   14540:	b.ls	14128 <_ZdaPvRKSt9nothrow_t@@Base+0x23a8>  // b.plast
   14544:	sub	x1, x1, #0x10
   14548:	mov	x0, #0x100                 	// #256
   1454c:	and	x21, x1, #0x3
   14550:	lsr	x1, x1, #2
   14554:	lsl	x1, x0, x1
   14558:	lsr	x0, x1, #2
   1455c:	madd	x0, x0, x21, x1
   14560:	cmp	x0, x23
   14564:	csel	x21, x0, x23, ls  // ls = plast
   14568:	b	14128 <_ZdaPvRKSt9nothrow_t@@Base+0x23a8>
   1456c:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   14570:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   14574:	add	x2, x2, #0xf18
   14578:	add	x0, x0, #0x3f8
   1457c:	mov	w1, #0xc7                  	// #199
   14580:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   14584:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   14588:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   1458c:	add	x2, x2, #0xf40
   14590:	add	x0, x0, #0x3f8
   14594:	mov	w1, #0xc8                  	// #200
   14598:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   1459c:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   145a0:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   145a4:	mov	x4, x19
   145a8:	add	x2, x2, #0xf78
   145ac:	add	x0, x0, #0x3f8
   145b0:	mov	w1, #0xc9                  	// #201
   145b4:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   145b8:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   145bc:	add	x0, x0, #0xbf8
   145c0:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   145c4:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   145c8:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   145cc:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   145d0:	mov	x4, x19
   145d4:	add	x2, x2, #0x150
   145d8:	add	x0, x0, #0x3f8
   145dc:	mov	w1, #0x8b                  	// #139
   145e0:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   145e4:	mov	x3, x0
   145e8:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   145ec:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   145f0:	add	x2, x2, #0x170
   145f4:	add	x0, x0, #0x3f8
   145f8:	mov	w1, #0x8c                  	// #140
   145fc:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   14600:	cmp	x23, #0x200
   14604:	mov	x0, #0x200                 	// #512
   14608:	csel	x21, x23, x0, ls  // ls = plast
   1460c:	b	14128 <_ZdaPvRKSt9nothrow_t@@Base+0x23a8>
   14610:	str	x25, [sp, #48]
   14614:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   14618:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   1461c:	add	x2, x2, #0x388
   14620:	add	x0, x0, #0x330
   14624:	mov	x4, #0x0                   	// #0
   14628:	mov	x3, #0x0                   	// #0
   1462c:	mov	w1, #0xa8                  	// #168
   14630:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   14634:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   14638:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   1463c:	add	x2, x2, #0x508
   14640:	add	x0, x0, #0x1e8
   14644:	mov	x4, #0x0                   	// #0
   14648:	mov	x3, #0x0                   	// #0
   1464c:	mov	w1, #0xd7                  	// #215
   14650:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   14654:	str	x25, [sp, #48]
   14658:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   1465c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   14660:	mov	x3, x21
   14664:	add	x2, x2, #0x410
   14668:	add	x0, x0, #0x330
   1466c:	mov	x4, #0x36                  	// #54
   14670:	mov	w1, #0xa9                  	// #169
   14674:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   14678:	mov	x0, x22
   1467c:	mov	x2, x20
   14680:	mov	x3, x21
   14684:	bl	13e10 <_ZdaPvRKSt9nothrow_t@@Base+0x2090>
   14688:	ldr	x0, [x22, x24]
   1468c:	b	14488 <_ZdaPvRKSt9nothrow_t@@Base+0x2708>
   14690:	mov	x2, #0x1                   	// #1
   14694:	mov	x11, x2
   14698:	mov	x12, #0x7c                  	// #124
   1469c:	mov	x10, #0x14                  	// #20
   146a0:	mov	x9, #0x100                 	// #256
   146a4:	mov	w8, #0x4000                	// #16384
   146a8:	mov	x7, #0x3e                  	// #62
   146ac:	nop
   146b0:	add	x5, x22, x2, lsl #10
   146b4:	lsl	x6, x2, #4
   146b8:	mov	x4, x5
   146bc:	mov	x0, #0x14                  	// #20
   146c0:	mov	x3, x2
   146c4:	add	x2, x2, #0x1
   146c8:	stp	x12, x6, [x5, #8]
   146cc:	cmp	x2, #0x36
   146d0:	str	x0, [x4, #24]
   146d4:	b.eq	14744 <_ZdaPvRKSt9nothrow_t@@Base+0x29c4>  // b.none
   146d8:	cmp	x2, #0x35
   146dc:	b.eq	1474c <_ZdaPvRKSt9nothrow_t@@Base+0x29cc>  // b.none
   146e0:	cmp	x2, #0x10
   146e4:	b.ls	146b0 <_ZdaPvRKSt9nothrow_t@@Base+0x2930>  // b.plast
   146e8:	sub	x0, x3, #0xf
   146ec:	add	x4, x4, #0x400
   146f0:	and	x6, x0, #0x3
   146f4:	mov	x3, x2
   146f8:	lsr	x0, x0, #2
   146fc:	add	x2, x2, #0x1
   14700:	lsl	x0, x9, x0
   14704:	lsr	x5, x0, #2
   14708:	madd	x5, x5, x6, x0
   1470c:	str	x5, [x4, #16]
   14710:	udiv	w0, w8, w5
   14714:	cmp	x0, #0x0
   14718:	csel	x0, x0, x11, ne  // ne = any
   1471c:	cmp	x0, #0x3e
   14720:	csel	x0, x0, x7, ls  // ls = plast
   14724:	add	x6, x0, #0x2
   14728:	lsl	x0, x0, #1
   1472c:	str	x0, [x4, #8]
   14730:	cmp	x5, x6, lsl #3
   14734:	csel	x0, x10, xzr, cc  // cc = lo, ul, last
   14738:	str	x0, [x4, #24]
   1473c:	cmp	x2, #0x36
   14740:	b.ne	146d8 <_ZdaPvRKSt9nothrow_t@@Base+0x2958>  // b.any
   14744:	ldr	x2, [x1, #8]
   14748:	b	1447c <_ZdaPvRKSt9nothrow_t@@Base+0x26fc>
   1474c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   14750:	ldr	q0, [x0, #1328]
   14754:	mov	x0, #0xd400                	// #54272
   14758:	add	x2, x22, x0
   1475c:	add	x0, x22, #0x8, lsl #12
   14760:	stur	q0, [x2, #8]
   14764:	str	xzr, [x0, #21528]
   14768:	ldr	x2, [x1, #8]
   1476c:	b	1447c <_ZdaPvRKSt9nothrow_t@@Base+0x26fc>
   14770:	mov	x0, x22
   14774:	mov	x2, x20
   14778:	mov	x3, x21
   1477c:	bl	13e10 <_ZdaPvRKSt9nothrow_t@@Base+0x2090>
   14780:	ldr	x0, [x22, x23]
   14784:	b	14320 <_ZdaPvRKSt9nothrow_t@@Base+0x25a0>
   14788:	mov	x2, #0x1                   	// #1
   1478c:	mov	x11, x2
   14790:	mov	x12, #0x7c                  	// #124
   14794:	mov	x10, #0x14                  	// #20
   14798:	mov	x9, #0x100                 	// #256
   1479c:	mov	w8, #0x4000                	// #16384
   147a0:	mov	x7, #0x3e                  	// #62
   147a4:	nop
   147a8:	add	x5, x22, x2, lsl #10
   147ac:	lsl	x6, x2, #4
   147b0:	mov	x4, x5
   147b4:	mov	x0, #0x14                  	// #20
   147b8:	mov	x3, x2
   147bc:	add	x2, x2, #0x1
   147c0:	stp	x12, x6, [x5, #8]
   147c4:	cmp	x2, #0x36
   147c8:	str	x0, [x4, #24]
   147cc:	b.eq	1483c <_ZdaPvRKSt9nothrow_t@@Base+0x2abc>  // b.none
   147d0:	cmp	x2, #0x35
   147d4:	b.eq	14844 <_ZdaPvRKSt9nothrow_t@@Base+0x2ac4>  // b.none
   147d8:	cmp	x2, #0x10
   147dc:	b.ls	147a8 <_ZdaPvRKSt9nothrow_t@@Base+0x2a28>  // b.plast
   147e0:	sub	x0, x3, #0xf
   147e4:	add	x4, x4, #0x400
   147e8:	and	x6, x0, #0x3
   147ec:	mov	x3, x2
   147f0:	lsr	x0, x0, #2
   147f4:	add	x2, x2, #0x1
   147f8:	lsl	x0, x9, x0
   147fc:	lsr	x5, x0, #2
   14800:	madd	x5, x5, x6, x0
   14804:	str	x5, [x4, #16]
   14808:	udiv	w0, w8, w5
   1480c:	cmp	x0, #0x0
   14810:	csel	x0, x0, x11, ne  // ne = any
   14814:	cmp	x0, #0x3e
   14818:	csel	x0, x0, x7, ls  // ls = plast
   1481c:	add	x6, x0, #0x2
   14820:	lsl	x0, x0, #1
   14824:	str	x0, [x4, #8]
   14828:	cmp	x5, x6, lsl #3
   1482c:	csel	x0, x10, xzr, cc  // cc = lo, ul, last
   14830:	str	x0, [x4, #24]
   14834:	cmp	x2, #0x36
   14838:	b.ne	147d0 <_ZdaPvRKSt9nothrow_t@@Base+0x2a50>  // b.any
   1483c:	ldr	x2, [x1, #8]
   14840:	b	14314 <_ZdaPvRKSt9nothrow_t@@Base+0x2594>
   14844:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   14848:	mov	x2, #0xd400                	// #54272
   1484c:	add	x2, x22, x2
   14850:	ldr	q0, [x0, #1328]
   14854:	add	x0, x22, #0x8, lsl #12
   14858:	stur	q0, [x2, #8]
   1485c:	str	xzr, [x0, #21528]
   14860:	ldr	x2, [x1, #8]
   14864:	b	14314 <_ZdaPvRKSt9nothrow_t@@Base+0x2594>
   14868:	str	x30, [sp, #-16]!
   1486c:	tst	w4, #0xff
   14870:	b.ne	14884 <_ZdaPvRKSt9nothrow_t@@Base+0x2b04>  // b.any
   14874:	adrp	x8, 12e000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd12e0>
   14878:	mov	x7, x0
   1487c:	ldr	w0, [x8, #1152]
   14880:	cbz	w0, 14894 <_ZdaPvRKSt9nothrow_t@@Base+0x2b14>
   14884:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   14888:	add	x0, x0, #0x540
   1488c:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   14890:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   14894:	adrp	x4, 5a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x26398>
   14898:	mov	x5, x1
   1489c:	mov	w6, w3
   148a0:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   148a4:	ldr	x1, [x4, #640]
   148a8:	mov	x3, x7
   148ac:	mov	x4, x7
   148b0:	add	x0, x0, #0x558
   148b4:	mov	w7, #0x1                   	// #1
   148b8:	str	w7, [x8, #1152]
   148bc:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   148c0:	bl	1e670 <__sanitizer_set_report_fd@@Base+0x67f0>
   148c4:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   148c8:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   148cc:	add	x2, x2, #0x5a0
   148d0:	add	x0, x0, #0x5c8
   148d4:	mov	x4, #0x0                   	// #0
   148d8:	mov	x3, #0x0                   	// #0
   148dc:	mov	w1, #0x36                  	// #54
   148e0:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   148e4:	nop
   148e8:	stp	x19, x20, [sp, #-32]!
   148ec:	str	x30, [sp, #24]
   148f0:	cbz	x0, 14960 <_ZdaPvRKSt9nothrow_t@@Base+0x2be0>
   148f4:	mov	x19, x0
   148f8:	mov	x20, x1
   148fc:	cbz	x1, 1492c <_ZdaPvRKSt9nothrow_t@@Base+0x2bac>
   14900:	str	x21, [sp, #16]
   14904:	bl	1b580 <__sanitizer_set_report_fd@@Base+0x3700>
   14908:	mov	x21, x0
   1490c:	cbz	x0, 1491c <_ZdaPvRKSt9nothrow_t@@Base+0x2b9c>
   14910:	mov	x0, x20
   14914:	bl	1a690 <__sanitizer_set_report_fd@@Base+0x2810>
   14918:	add	x19, x21, x0
   1491c:	ldrb	w0, [x19]
   14920:	cmp	w0, #0x2e
   14924:	b.eq	1493c <_ZdaPvRKSt9nothrow_t@@Base+0x2bbc>  // b.none
   14928:	ldr	x21, [sp, #16]
   1492c:	mov	x0, x19
   14930:	ldr	x30, [sp, #24]
   14934:	ldp	x19, x20, [sp], #32
   14938:	ret
   1493c:	ldrb	w1, [x19, #1]
   14940:	add	x0, x19, #0x2
   14944:	ldr	x21, [sp, #16]
   14948:	cmp	w1, #0x2f
   1494c:	csel	x19, x0, x19, eq  // eq = none
   14950:	mov	x0, x19
   14954:	ldr	x30, [sp, #24]
   14958:	ldp	x19, x20, [sp], #32
   1495c:	ret
   14960:	mov	x19, #0x0                   	// #0
   14964:	b	1492c <_ZdaPvRKSt9nothrow_t@@Base+0x2bac>
   14968:	stp	x19, x30, [sp, #-16]!
   1496c:	mov	x19, x0
   14970:	cbz	x0, 14984 <_ZdaPvRKSt9nothrow_t@@Base+0x2c04>
   14974:	mov	w1, #0x2f                  	// #47
   14978:	bl	1a668 <__sanitizer_set_report_fd@@Base+0x27e8>
   1497c:	cmp	x0, #0x0
   14980:	csinc	x19, x19, x0, eq  // eq = none
   14984:	mov	x0, x19
   14988:	ldp	x19, x30, [sp], #16
   1498c:	ret
   14990:	cbz	x0, 14a1c <_ZdaPvRKSt9nothrow_t@@Base+0x2c9c>
   14994:	stp	x19, x30, [sp, #-16]!
   14998:	mov	x19, x0
   1499c:	ldrb	w1, [x0]
   149a0:	cbz	w1, 14a10 <_ZdaPvRKSt9nothrow_t@@Base+0x2c90>
   149a4:	nop
   149a8:	cmp	w1, #0x1b
   149ac:	b.eq	149f4 <_ZdaPvRKSt9nothrow_t@@Base+0x2c74>  // b.none
   149b0:	cmp	x0, x19
   149b4:	b.eq	149bc <_ZdaPvRKSt9nothrow_t@@Base+0x2c3c>  // b.none
   149b8:	strb	w1, [x19]
   149bc:	add	x19, x19, #0x1
   149c0:	ldrb	w1, [x0, #1]
   149c4:	add	x0, x0, #0x1
   149c8:	cbz	w1, 14a10 <_ZdaPvRKSt9nothrow_t@@Base+0x2c90>
   149cc:	cmp	x0, x19
   149d0:	b.cs	149a8 <_ZdaPvRKSt9nothrow_t@@Base+0x2c28>  // b.hs, b.nlast
   149d4:	mov	x3, x0
   149d8:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   149dc:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   149e0:	mov	x4, x19
   149e4:	add	x2, x2, #0x620
   149e8:	add	x0, x0, #0x5c8
   149ec:	mov	w1, #0x69                  	// #105
   149f0:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   149f4:	ldrb	w2, [x0, #1]
   149f8:	cmp	w2, #0x5b
   149fc:	b.ne	149b0 <_ZdaPvRKSt9nothrow_t@@Base+0x2c30>  // b.any
   14a00:	mov	w1, #0x6d                  	// #109
   14a04:	bl	1a618 <__sanitizer_set_report_fd@@Base+0x2798>
   14a08:	ldrb	w1, [x0]
   14a0c:	cbnz	w1, 149c0 <_ZdaPvRKSt9nothrow_t@@Base+0x2c40>
   14a10:	strb	wzr, [x19]
   14a14:	ldp	x19, x30, [sp], #16
   14a18:	ret
   14a1c:	ret
   14a20:	stp	x19, x20, [sp, #-32]!
   14a24:	mov	x19, x0
   14a28:	mov	x1, #0x0                   	// #0
   14a2c:	ldr	x0, [x0]
   14a30:	str	x30, [sp, #16]
   14a34:	bl	12770 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   14a38:	str	xzr, [x19]
   14a3c:	stp	xzr, xzr, [x19, #8]
   14a40:	mov	x2, #0x10                  	// #16
   14a44:	add	x0, x19, #0x1c
   14a48:	str	wzr, [x19, #24]
   14a4c:	mov	w1, #0x0                   	// #0
   14a50:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   14a54:	strb	wzr, [x19, #44]
   14a58:	ldr	x2, [x19, #48]
   14a5c:	cbz	x2, 14a90 <_ZdaPvRKSt9nothrow_t@@Base+0x2d10>
   14a60:	add	x20, x19, #0x30
   14a64:	nop
   14a68:	ldr	x0, [x19, #56]
   14a6c:	sub	x4, x2, #0x1
   14a70:	mov	x1, #0x0                   	// #0
   14a74:	ldr	x3, [x0]
   14a78:	str	x3, [x20, #8]
   14a7c:	cbz	x3, 14a9c <_ZdaPvRKSt9nothrow_t@@Base+0x2d1c>
   14a80:	str	x4, [x20]
   14a84:	bl	12770 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   14a88:	ldr	x2, [x19, #48]
   14a8c:	cbnz	x2, 14a68 <_ZdaPvRKSt9nothrow_t@@Base+0x2ce8>
   14a90:	ldr	x30, [sp, #16]
   14a94:	ldp	x19, x20, [sp], #32
   14a98:	ret
   14a9c:	str	x4, [x20]
   14aa0:	str	xzr, [x20, #16]
   14aa4:	bl	12770 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   14aa8:	ldr	x2, [x19, #48]
   14aac:	cbnz	x2, 14a68 <_ZdaPvRKSt9nothrow_t@@Base+0x2ce8>
   14ab0:	ldr	x30, [sp, #16]
   14ab4:	ldp	x19, x20, [sp], #32
   14ab8:	ret
   14abc:	nop
   14ac0:	stp	x19, x20, [sp, #-32]!
   14ac4:	mov	x19, x0
   14ac8:	mov	x20, x2
   14acc:	stp	x21, x30, [sp, #16]
   14ad0:	mov	x21, x1
   14ad4:	bl	14a20 <_ZdaPvRKSt9nothrow_t@@Base+0x2ca0>
   14ad8:	mov	x0, x21
   14adc:	bl	1a360 <__sanitizer_set_report_fd@@Base+0x24e0>
   14ae0:	ldp	x21, x30, [sp, #16]
   14ae4:	stp	x0, x20, [x19]
   14ae8:	ldp	x19, x20, [sp], #32
   14aec:	ret
   14af0:	stp	x19, x20, [sp, #-64]!
   14af4:	mov	x19, x0
   14af8:	mov	w20, w3
   14afc:	stp	x21, x22, [sp, #16]
   14b00:	mov	x21, x4
   14b04:	mov	x22, x2
   14b08:	stp	x23, x24, [sp, #32]
   14b0c:	and	w24, w5, #0xff
   14b10:	mov	x23, x1
   14b14:	str	x30, [sp, #48]
   14b18:	bl	14a20 <_ZdaPvRKSt9nothrow_t@@Base+0x2ca0>
   14b1c:	mov	x0, x23
   14b20:	bl	1a360 <__sanitizer_set_report_fd@@Base+0x24e0>
   14b24:	stp	x0, x22, [x19]
   14b28:	mov	x1, x21
   14b2c:	add	x0, x19, #0x1c
   14b30:	str	w20, [x19, #24]
   14b34:	mov	x2, #0x10                  	// #16
   14b38:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   14b3c:	strb	w24, [x19, #44]
   14b40:	ldp	x21, x22, [sp, #16]
   14b44:	ldp	x23, x24, [sp, #32]
   14b48:	ldr	x30, [sp, #48]
   14b4c:	ldp	x19, x20, [sp], #64
   14b50:	ret
   14b54:	nop
   14b58:	stp	x19, x20, [sp, #-64]!
   14b5c:	mov	x20, x0
   14b60:	mov	x0, #0x30                  	// #48
   14b64:	stp	x21, x22, [sp, #16]
   14b68:	mov	x21, x5
   14b6c:	mov	x22, x2
   14b70:	mov	x2, #0x0                   	// #0
   14b74:	stp	x23, x24, [sp, #32]
   14b78:	and	w24, w3, #0xff
   14b7c:	mov	x23, x1
   14b80:	mov	x1, #0x0                   	// #0
   14b84:	stp	x25, x30, [sp, #48]
   14b88:	and	w25, w4, #0xff
   14b8c:	bl	121c8 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   14b90:	mov	x19, x0
   14b94:	cmp	x21, #0x0
   14b98:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   14b9c:	add	x1, x1, #0x3e8
   14ba0:	add	x0, x0, #0x1a
   14ba4:	csel	x1, x1, x21, eq  // eq = none
   14ba8:	stp	xzr, x23, [x19]
   14bac:	mov	x2, #0x10                  	// #16
   14bb0:	str	x22, [x19, #16]
   14bb4:	strb	w24, [x19, #24]
   14bb8:	strb	w25, [x19, #25]
   14bbc:	bl	1b4c8 <__sanitizer_set_report_fd@@Base+0x3648>
   14bc0:	ldr	x0, [x20, #48]
   14bc4:	cbnz	x0, 14c04 <_ZdaPvRKSt9nothrow_t@@Base+0x2e84>
   14bc8:	dup	v0.2d, x19
   14bcc:	str	xzr, [x19]
   14bd0:	mov	x0, #0x1                   	// #1
   14bd4:	str	x0, [x20, #48]
   14bd8:	stur	q0, [x20, #56]
   14bdc:	cbz	w24, 14bf0 <_ZdaPvRKSt9nothrow_t@@Base+0x2e70>
   14be0:	ldr	x0, [x20, #16]
   14be4:	cmp	x0, x22
   14be8:	b.cs	14bf0 <_ZdaPvRKSt9nothrow_t@@Base+0x2e70>  // b.hs, b.nlast
   14bec:	str	x22, [x20, #16]
   14bf0:	ldp	x21, x22, [sp, #16]
   14bf4:	ldp	x23, x24, [sp, #32]
   14bf8:	ldp	x25, x30, [sp, #48]
   14bfc:	ldp	x19, x20, [sp], #64
   14c00:	ret
   14c04:	str	xzr, [x19]
   14c08:	add	x0, x0, #0x1
   14c0c:	ldr	x2, [x20, #64]
   14c10:	str	x19, [x2]
   14c14:	str	x0, [x20, #48]
   14c18:	str	x19, [x20, #64]
   14c1c:	b	14bdc <_ZdaPvRKSt9nothrow_t@@Base+0x2e5c>
   14c20:	ldr	x0, [x0, #56]
   14c24:	cbz	x0, 14c54 <_ZdaPvRKSt9nothrow_t@@Base+0x2ed4>
   14c28:	ldr	x2, [x0, #8]
   14c2c:	cmp	x2, x1
   14c30:	b.hi	14c40 <_ZdaPvRKSt9nothrow_t@@Base+0x2ec0>  // b.pmore
   14c34:	ldr	x2, [x0, #16]
   14c38:	cmp	x2, x1
   14c3c:	b.hi	14c4c <_ZdaPvRKSt9nothrow_t@@Base+0x2ecc>  // b.pmore
   14c40:	ldr	x0, [x0]
   14c44:	cbnz	x0, 14c28 <_ZdaPvRKSt9nothrow_t@@Base+0x2ea8>
   14c48:	ret
   14c4c:	mov	w0, #0x1                   	// #1
   14c50:	ret
   14c54:	mov	w0, #0x0                   	// #0
   14c58:	ret
   14c5c:	nop
   14c60:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   14c64:	ldr	x1, [x1, #4056]
   14c68:	ldr	x2, [x1, #128]
   14c6c:	cbnz	x2, 14c74 <_ZdaPvRKSt9nothrow_t@@Base+0x2ef4>
   14c70:	ret
   14c74:	adrp	x2, 12e000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd12e0>
   14c78:	add	x2, x2, #0x480
   14c7c:	add	x2, x2, #0x8
   14c80:	ldxr	x3, [x2]
   14c84:	add	x4, x3, x0
   14c88:	stlxr	w5, x4, [x2]
   14c8c:	cbnz	w5, 14c80 <_ZdaPvRKSt9nothrow_t@@Base+0x2f00>
   14c90:	dmb	ish
   14c94:	ldr	x1, [x1, #128]
   14c98:	add	x0, x3, x0
   14c9c:	cmp	x1, x0, lsr #20
   14ca0:	b.hi	14c70 <_ZdaPvRKSt9nothrow_t@@Base+0x2ef0>  // b.pmore
   14ca4:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   14ca8:	add	x0, x0, #0x630
   14cac:	str	x30, [sp, #-16]!
   14cb0:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   14cb4:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   14cb8:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   14cbc:	ldr	x1, [x1, #4056]
   14cc0:	ldr	x1, [x1, #128]
   14cc4:	cbnz	x1, 14ccc <_ZdaPvRKSt9nothrow_t@@Base+0x2f4c>
   14cc8:	ret
   14ccc:	adrp	x1, 12e000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd12e0>
   14cd0:	add	x1, x1, #0x480
   14cd4:	neg	x0, x0
   14cd8:	add	x1, x1, #0x8
   14cdc:	ldxr	x2, [x1]
   14ce0:	add	x2, x2, x0
   14ce4:	stlxr	w3, x2, [x1]
   14ce8:	cbnz	w3, 14cdc <_ZdaPvRKSt9nothrow_t@@Base+0x2f5c>
   14cec:	dmb	ish
   14cf0:	ret
   14cf4:	nop
   14cf8:	cbz	x1, 14e8c <_ZdaPvRKSt9nothrow_t@@Base+0x310c>
   14cfc:	stp	x19, x20, [sp, #-80]!
   14d00:	mov	x19, x0
   14d04:	stp	x21, x22, [sp, #16]
   14d08:	mov	x21, x1
   14d0c:	str	x30, [sp, #64]
   14d10:	ldrb	w0, [x1]
   14d14:	cbz	w0, 14e0c <_ZdaPvRKSt9nothrow_t@@Base+0x308c>
   14d18:	cbz	x19, 14df0 <_ZdaPvRKSt9nothrow_t@@Base+0x3070>
   14d1c:	stp	x23, x24, [sp, #32]
   14d20:	mov	w23, #0x0                   	// #0
   14d24:	stp	x25, x26, [sp, #48]
   14d28:	ldrb	w1, [x19]
   14d2c:	cmp	w1, #0x5e
   14d30:	b.ne	14d40 <_ZdaPvRKSt9nothrow_t@@Base+0x2fc0>  // b.any
   14d34:	ldrb	w1, [x19, #1]
   14d38:	add	x19, x19, #0x1
   14d3c:	mov	w23, #0x1                   	// #1
   14d40:	mov	w2, #0x0                   	// #0
   14d44:	mov	w25, #0x2a                  	// #42
   14d48:	mov	w24, #0x24                  	// #36
   14d4c:	cbz	w1, 14de8 <_ZdaPvRKSt9nothrow_t@@Base+0x3068>
   14d50:	cmp	w1, #0x2a
   14d54:	b.eq	14e7c <_ZdaPvRKSt9nothrow_t@@Base+0x30fc>  // b.none
   14d58:	ldrb	w0, [x21]
   14d5c:	cmp	w1, #0x24
   14d60:	b.eq	14e94 <_ZdaPvRKSt9nothrow_t@@Base+0x3114>  // b.none
   14d64:	cbz	w0, 14e04 <_ZdaPvRKSt9nothrow_t@@Base+0x3084>
   14d68:	mov	w1, #0x2a                  	// #42
   14d6c:	mov	x0, x19
   14d70:	bl	1a5e8 <__sanitizer_set_report_fd@@Base+0x2768>
   14d74:	mov	x22, x0
   14d78:	mov	w1, #0x24                  	// #36
   14d7c:	mov	x0, x19
   14d80:	bl	1a5e8 <__sanitizer_set_report_fd@@Base+0x2768>
   14d84:	mov	x26, x0
   14d88:	cbz	x22, 14e54 <_ZdaPvRKSt9nothrow_t@@Base+0x30d4>
   14d8c:	cmp	x0, #0x0
   14d90:	ccmp	x22, x0, #0x0, ne  // ne = any
   14d94:	b.ls	14e20 <_ZdaPvRKSt9nothrow_t@@Base+0x30a0>  // b.plast
   14d98:	strb	wzr, [x26]
   14d9c:	mov	x1, x19
   14da0:	mov	x0, x21
   14da4:	bl	1b580 <__sanitizer_set_report_fd@@Base+0x3700>
   14da8:	mov	x20, x0
   14dac:	mov	x0, x19
   14db0:	mov	x19, x26
   14db4:	bl	1a690 <__sanitizer_set_report_fd@@Base+0x2810>
   14db8:	add	x0, x20, x0
   14dbc:	mov	w1, #0x24                  	// #36
   14dc0:	strb	w1, [x19]
   14dc4:	cbz	x20, 14e04 <_ZdaPvRKSt9nothrow_t@@Base+0x3084>
   14dc8:	cmp	x21, x20
   14dcc:	csel	w2, w23, wzr, ne  // ne = any
   14dd0:	cbnz	w2, 14e04 <_ZdaPvRKSt9nothrow_t@@Base+0x3084>
   14dd4:	cbz	x19, 14de8 <_ZdaPvRKSt9nothrow_t@@Base+0x3068>
   14dd8:	ldrb	w1, [x19]
   14ddc:	mov	x21, x0
   14de0:	mov	w23, #0x0                   	// #0
   14de4:	cbnz	w1, 14d50 <_ZdaPvRKSt9nothrow_t@@Base+0x2fd0>
   14de8:	ldp	x23, x24, [sp, #32]
   14dec:	ldp	x25, x26, [sp, #48]
   14df0:	mov	w0, #0x1                   	// #1
   14df4:	ldp	x21, x22, [sp, #16]
   14df8:	ldr	x30, [sp, #64]
   14dfc:	ldp	x19, x20, [sp], #80
   14e00:	ret
   14e04:	ldp	x23, x24, [sp, #32]
   14e08:	ldp	x25, x26, [sp, #48]
   14e0c:	mov	w0, #0x0                   	// #0
   14e10:	ldp	x21, x22, [sp, #16]
   14e14:	ldr	x30, [sp, #64]
   14e18:	ldp	x19, x20, [sp], #80
   14e1c:	ret
   14e20:	strb	wzr, [x22]
   14e24:	mov	x1, x19
   14e28:	mov	x0, x21
   14e2c:	bl	1b580 <__sanitizer_set_report_fd@@Base+0x3700>
   14e30:	mov	x20, x0
   14e34:	mov	x0, x19
   14e38:	mov	x19, x22
   14e3c:	bl	1a690 <__sanitizer_set_report_fd@@Base+0x2810>
   14e40:	add	x0, x20, x0
   14e44:	cmp	x22, x26
   14e48:	csel	w1, w24, w25, eq  // eq = none
   14e4c:	strb	w1, [x19]
   14e50:	b	14dc4 <_ZdaPvRKSt9nothrow_t@@Base+0x3044>
   14e54:	cbnz	x0, 14d98 <_ZdaPvRKSt9nothrow_t@@Base+0x3018>
   14e58:	mov	x1, x19
   14e5c:	mov	x0, x21
   14e60:	bl	1b580 <__sanitizer_set_report_fd@@Base+0x3700>
   14e64:	mov	x20, x0
   14e68:	mov	x0, x19
   14e6c:	mov	x19, #0x0                   	// #0
   14e70:	bl	1a690 <__sanitizer_set_report_fd@@Base+0x2810>
   14e74:	add	x0, x20, x0
   14e78:	b	14dc4 <_ZdaPvRKSt9nothrow_t@@Base+0x3044>
   14e7c:	add	x19, x19, #0x1
   14e80:	mov	x0, x21
   14e84:	mov	w2, #0x1                   	// #1
   14e88:	b	14dd8 <_ZdaPvRKSt9nothrow_t@@Base+0x3058>
   14e8c:	mov	w0, #0x0                   	// #0
   14e90:	ret
   14e94:	cmp	w0, #0x0
   14e98:	csinc	w0, w2, wzr, ne  // ne = any
   14e9c:	ldp	x23, x24, [sp, #32]
   14ea0:	ldp	x25, x26, [sp, #48]
   14ea4:	b	14e10 <_ZdaPvRKSt9nothrow_t@@Base+0x3090>
   14ea8:	adrp	x0, 12e000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd12e0>
   14eac:	add	x0, x0, #0x4f0
   14eb0:	ret
   14eb4:	nop
   14eb8:	stp	x19, x20, [sp, #-32]!
   14ebc:	adrp	x19, 12e000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd12e0>
   14ec0:	add	x19, x19, #0x4f0
   14ec4:	mov	x1, #0x1000                	// #4096
   14ec8:	mov	x0, x19
   14ecc:	str	x30, [sp, #24]
   14ed0:	bl	1d3c0 <__sanitizer_set_report_fd@@Base+0x5540>
   14ed4:	mov	x0, x19
   14ed8:	mov	w1, #0x2f                  	// #47
   14edc:	bl	1a668 <__sanitizer_set_report_fd@@Base+0x27e8>
   14ee0:	cbz	x0, 14f24 <_ZdaPvRKSt9nothrow_t@@Base+0x31a4>
   14ee4:	add	x20, x0, #0x1
   14ee8:	str	x21, [sp, #16]
   14eec:	mov	x0, x20
   14ef0:	bl	1a690 <__sanitizer_set_report_fd@@Base+0x2810>
   14ef4:	cmp	x20, x19
   14ef8:	mov	x21, x0
   14efc:	b.eq	14f14 <_ZdaPvRKSt9nothrow_t@@Base+0x3194>  // b.none
   14f00:	mov	x2, x0
   14f04:	mov	x1, x20
   14f08:	mov	x0, x19
   14f0c:	bl	19f48 <__sanitizer_set_report_fd@@Base+0x20c8>
   14f10:	strb	wzr, [x21, x19]
   14f14:	ldr	x21, [sp, #16]
   14f18:	ldr	x30, [sp, #24]
   14f1c:	ldp	x19, x20, [sp], #32
   14f20:	ret
   14f24:	mov	x0, x19
   14f28:	ldr	x30, [sp, #24]
   14f2c:	ldp	x19, x20, [sp], #32
   14f30:	b	1a690 <__sanitizer_set_report_fd@@Base+0x2810>
   14f34:	nop
   14f38:	adrp	x1, 12f000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd22e0>
   14f3c:	add	x0, x1, #0x4f0
   14f40:	ldrb	w1, [x1, #1264]
   14f44:	cbz	w1, 14f4c <_ZdaPvRKSt9nothrow_t@@Base+0x31cc>
   14f48:	ret
   14f4c:	stp	x19, x20, [sp, #-32]!
   14f50:	mov	x1, #0x1000                	// #4096
   14f54:	adrp	x19, 12e000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd12e0>
   14f58:	add	x19, x19, #0x4f0
   14f5c:	str	x30, [sp, #24]
   14f60:	bl	1d328 <__sanitizer_set_report_fd@@Base+0x54a8>
   14f64:	mov	x1, #0x1000                	// #4096
   14f68:	mov	x0, x19
   14f6c:	bl	1d3c0 <__sanitizer_set_report_fd@@Base+0x5540>
   14f70:	mov	x0, x19
   14f74:	mov	w1, #0x2f                  	// #47
   14f78:	bl	1a668 <__sanitizer_set_report_fd@@Base+0x27e8>
   14f7c:	cbz	x0, 14fc0 <_ZdaPvRKSt9nothrow_t@@Base+0x3240>
   14f80:	add	x20, x0, #0x1
   14f84:	str	x21, [sp, #16]
   14f88:	mov	x0, x20
   14f8c:	bl	1a690 <__sanitizer_set_report_fd@@Base+0x2810>
   14f90:	cmp	x20, x19
   14f94:	mov	x21, x0
   14f98:	b.eq	14fb0 <_ZdaPvRKSt9nothrow_t@@Base+0x3230>  // b.none
   14f9c:	mov	x2, x0
   14fa0:	mov	x1, x20
   14fa4:	mov	x0, x19
   14fa8:	bl	19f48 <__sanitizer_set_report_fd@@Base+0x20c8>
   14fac:	strb	wzr, [x21, x19]
   14fb0:	ldr	x21, [sp, #16]
   14fb4:	ldr	x30, [sp, #24]
   14fb8:	ldp	x19, x20, [sp], #32
   14fbc:	ret
   14fc0:	mov	x0, x19
   14fc4:	ldr	x30, [sp, #24]
   14fc8:	ldp	x19, x20, [sp], #32
   14fcc:	b	1a690 <__sanitizer_set_report_fd@@Base+0x2810>
   14fd0:	stp	x19, x20, [sp, #-64]!
   14fd4:	adrp	x20, 12f000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd22e0>
   14fd8:	mov	x19, x1
   14fdc:	ldrb	w2, [x20, #1264]
   14fe0:	stp	x21, x22, [sp, #16]
   14fe4:	mov	x21, x0
   14fe8:	str	x30, [sp, #48]
   14fec:	cbz	w2, 15038 <_ZdaPvRKSt9nothrow_t@@Base+0x32b8>
   14ff0:	add	x20, x20, #0x4f0
   14ff4:	mov	x0, x20
   14ff8:	bl	1a690 <__sanitizer_set_report_fd@@Base+0x2810>
   14ffc:	mov	x2, x0
   15000:	cbz	x19, 15024 <_ZdaPvRKSt9nothrow_t@@Base+0x32a4>
   15004:	sub	x19, x19, #0x1
   15008:	mov	x1, x20
   1500c:	cmp	x19, x0
   15010:	mov	x0, x21
   15014:	csel	x19, x19, x2, ls  // ls = plast
   15018:	mov	x2, x19
   1501c:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   15020:	strb	wzr, [x21, x19]
   15024:	mov	x0, x19
   15028:	ldp	x21, x22, [sp, #16]
   1502c:	ldr	x30, [sp, #48]
   15030:	ldp	x19, x20, [sp], #64
   15034:	ret
   15038:	mov	x1, #0x1000                	// #4096
   1503c:	add	x0, x20, #0x4f0
   15040:	adrp	x22, 12e000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd12e0>
   15044:	bl	1d328 <__sanitizer_set_report_fd@@Base+0x54a8>
   15048:	add	x22, x22, #0x4f0
   1504c:	mov	x1, #0x1000                	// #4096
   15050:	mov	x0, x22
   15054:	bl	1d3c0 <__sanitizer_set_report_fd@@Base+0x5540>
   15058:	mov	x0, x22
   1505c:	mov	w1, #0x2f                  	// #47
   15060:	bl	1a668 <__sanitizer_set_report_fd@@Base+0x27e8>
   15064:	cbz	x0, 150a0 <_ZdaPvRKSt9nothrow_t@@Base+0x3320>
   15068:	stp	x23, x24, [sp, #32]
   1506c:	add	x23, x0, #0x1
   15070:	mov	x0, x23
   15074:	bl	1a690 <__sanitizer_set_report_fd@@Base+0x2810>
   15078:	mov	x24, x0
   1507c:	cmp	x23, x22
   15080:	b.eq	150ac <_ZdaPvRKSt9nothrow_t@@Base+0x332c>  // b.none
   15084:	mov	x1, x23
   15088:	mov	x2, x0
   1508c:	mov	x0, x22
   15090:	bl	19f48 <__sanitizer_set_report_fd@@Base+0x20c8>
   15094:	strb	wzr, [x24, x22]
   15098:	ldp	x23, x24, [sp, #32]
   1509c:	b	14ff0 <_ZdaPvRKSt9nothrow_t@@Base+0x3270>
   150a0:	mov	x0, x22
   150a4:	bl	1a690 <__sanitizer_set_report_fd@@Base+0x2810>
   150a8:	b	14ff0 <_ZdaPvRKSt9nothrow_t@@Base+0x3270>
   150ac:	ldp	x23, x24, [sp, #32]
   150b0:	b	14ff0 <_ZdaPvRKSt9nothrow_t@@Base+0x3270>
   150b4:	nop
   150b8:	stp	x19, x20, [sp, #-32]!
   150bc:	str	x30, [sp, #16]
   150c0:	bl	1c5e8 <__sanitizer_set_report_fd@@Base+0x4768>
   150c4:	cbz	x0, 15114 <_ZdaPvRKSt9nothrow_t@@Base+0x3394>
   150c8:	mov	x19, x0
   150cc:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   150d0:	add	x0, x0, #0x668
   150d4:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   150d8:	ldr	x1, [x19]
   150dc:	cbz	x1, 15100 <_ZdaPvRKSt9nothrow_t@@Base+0x3380>
   150e0:	adrp	x20, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   150e4:	add	x19, x19, #0x8
   150e8:	add	x20, x20, #0xbf8
   150ec:	nop
   150f0:	mov	x0, x20
   150f4:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   150f8:	ldr	x1, [x19], #8
   150fc:	cbnz	x1, 150f0 <_ZdaPvRKSt9nothrow_t@@Base+0x3370>
   15100:	ldr	x30, [sp, #16]
   15104:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   15108:	ldp	x19, x20, [sp], #32
   1510c:	add	x0, x0, #0x678
   15110:	b	1fc30 <__sanitizer_on_print@@Base+0x310>
   15114:	ldr	x30, [sp, #16]
   15118:	ldp	x19, x20, [sp], #32
   1511c:	ret
   15120:	stp	x19, x20, [sp, #-48]!
   15124:	adrp	x20, 12e000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd12e0>
   15128:	add	x20, x20, #0x480
   1512c:	add	x19, x20, #0x10
   15130:	add	x20, x20, #0x60
   15134:	stp	x21, x22, [sp, #16]
   15138:	mov	x22, x0
   1513c:	mov	x21, x1
   15140:	str	x30, [sp, #32]
   15144:	ldr	x2, [x19]
   15148:	mov	x1, x21
   1514c:	mov	x0, x22
   15150:	add	x19, x19, #0x10
   15154:	cbz	x2, 15164 <_ZdaPvRKSt9nothrow_t@@Base+0x33e4>
   15158:	blr	x2
   1515c:	cmp	x19, x20
   15160:	b.ne	15144 <_ZdaPvRKSt9nothrow_t@@Base+0x33c4>  // b.any
   15164:	ldp	x21, x22, [sp, #16]
   15168:	ldr	x30, [sp, #32]
   1516c:	ldp	x19, x20, [sp], #48
   15170:	ret
   15174:	nop
   15178:	stp	x19, x20, [sp, #-32]!
   1517c:	adrp	x20, 12e000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd12e0>
   15180:	add	x20, x20, #0x480
   15184:	add	x20, x20, #0x10
   15188:	stp	x21, x30, [sp, #16]
   1518c:	mov	x21, x0
   15190:	mov	x19, #0x0                   	// #0
   15194:	add	x1, x20, x19
   15198:	mov	x0, x21
   1519c:	add	x19, x19, #0x10
   151a0:	ldr	x1, [x1, #8]
   151a4:	cbz	x1, 151b4 <_ZdaPvRKSt9nothrow_t@@Base+0x3434>
   151a8:	blr	x1
   151ac:	cmp	x19, #0x50
   151b0:	b.ne	15194 <_ZdaPvRKSt9nothrow_t@@Base+0x3414>  // b.any
   151b4:	ldp	x21, x30, [sp, #16]
   151b8:	ldp	x19, x20, [sp], #32
   151bc:	ret

00000000000151c0 <__sanitizer_report_error_summary@@Base>:
   151c0:	mov	x1, x0
   151c4:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   151c8:	add	x0, x2, #0x7f0
   151cc:	b	1fc30 <__sanitizer_on_print@@Base+0x310>
   151d0:	adrp	x4, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   151d4:	ldr	x4, [x4, #4056]
   151d8:	ldrb	w2, [x4, #60]
   151dc:	cbnz	w2, 151e4 <__sanitizer_report_error_summary@@Base+0x24>
   151e0:	ret
   151e4:	stp	x19, x20, [sp, #-96]!
   151e8:	mov	x20, x1
   151ec:	stp	x23, x24, [sp, #32]
   151f0:	adrp	x23, 12e000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd12e0>
   151f4:	add	x19, x23, #0x480
   151f8:	stp	x21, x22, [sp, #16]
   151fc:	mov	x21, x0
   15200:	ldr	x2, [x19, #96]
   15204:	str	x30, [sp, #48]
   15208:	str	xzr, [sp, #64]
   1520c:	stp	xzr, xzr, [sp, #72]
   15210:	cbz	x2, 152e0 <__sanitizer_report_error_summary@@Base+0x120>
   15214:	sub	x0, x2, #0x1
   15218:	tst	x0, x2
   1521c:	b.ne	15348 <__sanitizer_report_error_summary@@Base+0x188>  // b.any
   15220:	add	x22, x2, #0x3ff
   15224:	neg	x2, x2
   15228:	and	x22, x22, x2
   1522c:	adrp	x24, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   15230:	mov	w2, #0x0                   	// #0
   15234:	add	x1, x24, #0xc10
   15238:	mov	x0, x22
   1523c:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   15240:	ldr	x1, [sp, #64]
   15244:	mov	x19, x0
   15248:	ldr	x2, [sp, #80]
   1524c:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   15250:	ldp	x0, x1, [sp, #64]
   15254:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   15258:	stp	x19, x22, [sp, #64]
   1525c:	ldr	x2, [sp, #80]
   15260:	cmp	x2, #0x3ff
   15264:	b.hi	15288 <__sanitizer_report_error_summary@@Base+0xc8>  // b.pmore
   15268:	cmp	x22, #0x3ff
   1526c:	b.ls	152f0 <__sanitizer_report_error_summary@@Base+0x130>  // b.plast
   15270:	mov	x3, #0x400                 	// #1024
   15274:	add	x0, x19, x2
   15278:	mov	w1, #0x0                   	// #0
   1527c:	sub	x2, x3, x2
   15280:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   15284:	ldr	x19, [sp, #64]
   15288:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   1528c:	adrp	x2, 5a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x26398>
   15290:	cmp	x20, #0x0
   15294:	ldr	q0, [x0, #1696]
   15298:	mov	x3, x21
   1529c:	add	x0, sp, #0x40
   152a0:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   152a4:	add	x1, x1, #0x680
   152a8:	str	q0, [sp, #80]
   152ac:	strb	wzr, [x19]
   152b0:	ldr	x2, [x2, #640]
   152b4:	csel	x2, x2, x20, eq  // eq = none
   152b8:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   152bc:	ldr	x0, [sp, #64]
   152c0:	bl	61c0 <__sanitizer_report_error_summary@plt>
   152c4:	ldp	x0, x1, [sp, #64]
   152c8:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   152cc:	ldp	x21, x22, [sp, #16]
   152d0:	ldp	x23, x24, [sp, #32]
   152d4:	ldr	x30, [sp, #48]
   152d8:	ldp	x19, x20, [sp], #96
   152dc:	ret
   152e0:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   152e4:	mov	x2, x0
   152e8:	str	x0, [x19, #96]
   152ec:	b	15214 <__sanitizer_report_error_summary@@Base+0x54>
   152f0:	add	x23, x23, #0x480
   152f4:	ldr	x0, [x23, #96]
   152f8:	cbz	x0, 15358 <__sanitizer_report_error_summary@@Base+0x198>
   152fc:	sub	x1, x0, #0x1
   15300:	tst	x1, x0
   15304:	b.ne	15348 <__sanitizer_report_error_summary@@Base+0x188>  // b.any
   15308:	add	x22, x0, #0x3ff
   1530c:	neg	x0, x0
   15310:	and	x22, x22, x0
   15314:	add	x1, x24, #0xc10
   15318:	mov	w2, #0x0                   	// #0
   1531c:	mov	x0, x22
   15320:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   15324:	mov	x19, x0
   15328:	ldr	x1, [sp, #64]
   1532c:	ldr	x2, [sp, #80]
   15330:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   15334:	ldp	x0, x1, [sp, #64]
   15338:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   1533c:	stp	x19, x22, [sp, #64]
   15340:	ldr	x2, [sp, #80]
   15344:	b	15270 <__sanitizer_report_error_summary@@Base+0xb0>
   15348:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   1534c:	add	x0, x0, #0xbf8
   15350:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   15354:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   15358:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   1535c:	str	x0, [x23, #96]
   15360:	b	152fc <__sanitizer_report_error_summary@@Base+0x13c>
   15364:	nop

0000000000015368 <__sanitizer_acquire_crash_state@@Base>:
   15368:	adrp	x0, 12e000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd12e0>
   1536c:	add	x0, x0, #0x480
   15370:	add	x0, x0, #0x68
   15374:	mov	w2, #0x1                   	// #1
   15378:	ldxrb	w1, [x0]
   1537c:	stxrb	w3, w2, [x0]
   15380:	cbnz	w3, 15378 <__sanitizer_acquire_crash_state@@Base+0x10>
   15384:	tst	w1, #0xff
   15388:	dmb	ish
   1538c:	cset	w0, eq  // eq = none
   15390:	ret
   15394:	nop

0000000000015398 <__sanitizer_install_malloc_and_free_hooks@@Base>:
   15398:	cmp	x0, #0x0
   1539c:	mov	x2, x0
   153a0:	ccmp	x1, #0x0, #0x4, ne  // ne = any
   153a4:	mov	w0, #0x0                   	// #0
   153a8:	b.eq	153e4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x4c>  // b.none
   153ac:	adrp	x3, 12e000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd12e0>
   153b0:	add	x4, x3, #0x480
   153b4:	add	x0, x4, #0x10
   153b8:	ldr	x4, [x4, #16]
   153bc:	cbz	x4, 1540c <__sanitizer_install_malloc_and_free_hooks@@Base+0x74>
   153c0:	ldr	x4, [x0, #16]
   153c4:	cbz	x4, 15418 <__sanitizer_install_malloc_and_free_hooks@@Base+0x80>
   153c8:	ldr	x4, [x0, #32]
   153cc:	cbz	x4, 15424 <__sanitizer_install_malloc_and_free_hooks@@Base+0x8c>
   153d0:	ldr	x4, [x0, #48]
   153d4:	cbz	x4, 15430 <__sanitizer_install_malloc_and_free_hooks@@Base+0x98>
   153d8:	ldr	x4, [x0, #64]
   153dc:	mov	w0, #0x0                   	// #0
   153e0:	cbz	x4, 153e8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x50>
   153e4:	ret
   153e8:	mov	w4, #0x4                   	// #4
   153ec:	mov	w0, #0x5                   	// #5
   153f0:	add	x3, x3, #0x480
   153f4:	sbfiz	x4, x4, #4, #32
   153f8:	add	x3, x3, #0x10
   153fc:	add	x5, x3, x4
   15400:	str	x2, [x3, x4]
   15404:	str	x1, [x5, #8]
   15408:	ret
   1540c:	mov	w4, #0x0                   	// #0
   15410:	mov	w0, #0x1                   	// #1
   15414:	b	153f0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x58>
   15418:	mov	w4, #0x1                   	// #1
   1541c:	mov	w0, #0x2                   	// #2
   15420:	b	153f0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x58>
   15424:	mov	w4, #0x2                   	// #2
   15428:	mov	w0, #0x3                   	// #3
   1542c:	b	153f0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x58>
   15430:	mov	w4, #0x3                   	// #3
   15434:	mov	w0, #0x4                   	// #4
   15438:	b	153f0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x58>
   1543c:	nop
   15440:	mov	x0, #0x0                   	// #0
   15444:	ret
   15448:	ret
   1544c:	nop
   15450:	ldr	x1, [x1, #16]
   15454:	ldrb	w0, [x1, #2224]
   15458:	cbz	w0, 15468 <__sanitizer_install_malloc_and_free_hooks@@Base+0xd0>
   1545c:	add	x0, x1, #0x628
   15460:	strb	wzr, [x1, #2224]
   15464:	ret
   15468:	mov	x0, #0x0                   	// #0
   1546c:	ret
   15470:	stp	x19, x30, [sp, #-16]!
   15474:	mov	x2, #0x0                   	// #0
   15478:	mov	x19, x1
   1547c:	mov	x0, #0x8b8                 	// #2232
   15480:	mov	x1, #0x0                   	// #0
   15484:	bl	121c8 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   15488:	mov	x3, x0
   1548c:	str	x19, [x0]
   15490:	str	xzr, [x3, #8]!
   15494:	str	xzr, [x3, #520]
   15498:	str	xzr, [x3, #1040]
   1549c:	str	xzr, [x3, #1560]
   154a0:	strb	wzr, [x0, #2224]
   154a4:	ldp	x19, x30, [sp], #16
   154a8:	ret
   154ac:	nop
   154b0:	mov	x0, x1
   154b4:	mov	x1, #0x0                   	// #0
   154b8:	b	12770 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   154bc:	nop
   154c0:	ldr	x1, [x1, #16]
   154c4:	ldr	x2, [x2]
   154c8:	ldr	x3, [x1, #528]
   154cc:	and	x0, x2, #0xfffffffffffff000
   154d0:	cmp	x3, x0
   154d4:	b.eq	154dc <__sanitizer_install_malloc_and_free_hooks@@Base+0x144>  // b.none
   154d8:	ret
   154dc:	ldr	x7, [x1, #1048]
   154e0:	add	x6, x1, #0x8
   154e4:	and	x4, x2, #0xfff
   154e8:	cbz	x7, 15534 <__sanitizer_install_malloc_and_free_hooks@@Base+0x19c>
   154ec:	sub	x8, x7, #0x1
   154f0:	mov	x0, x8
   154f4:	tbnz	x8, #63, 15534 <__sanitizer_install_malloc_and_free_hooks@@Base+0x19c>
   154f8:	add	x5, x1, #0x218
   154fc:	b	1550c <__sanitizer_install_malloc_and_free_hooks@@Base+0x174>
   15500:	sub	x0, x0, #0x1
   15504:	cmn	x0, #0x1
   15508:	b.eq	15534 <__sanitizer_install_malloc_and_free_hooks@@Base+0x19c>  // b.none
   1550c:	ldr	x3, [x5, x0, lsl #3]
   15510:	cmp	x4, x3
   15514:	b.ne	15500 <__sanitizer_install_malloc_and_free_hooks@@Base+0x168>  // b.any
   15518:	add	x1, x1, x7, lsl #3
   1551c:	add	x0, x0, #0x42
   15520:	str	x8, [x6, #1040]
   15524:	ldr	x2, [x1, #528]
   15528:	str	x2, [x6, x0, lsl #3]
   1552c:	str	x4, [x1, #528]
   15530:	ret
   15534:	ldr	x7, [x1, #8]
   15538:	lsr	x3, x4, #6
   1553c:	mov	x0, #0x1                   	// #1
   15540:	lsl	x5, x0, x3
   15544:	tst	x7, x5
   15548:	b.eq	154d8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x140>  // b.none
   1554c:	add	x3, x3, x0
   15550:	lsl	x0, x0, x2
   15554:	ldr	x2, [x6, x3, lsl #3]
   15558:	bic	x0, x2, x0
   1555c:	str	x0, [x6, x3, lsl #3]
   15560:	cbz	x0, 155dc <__sanitizer_install_malloc_and_free_hooks@@Base+0x244>
   15564:	cmp	x2, x0
   15568:	b.eq	154d8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x140>  // b.none
   1556c:	ldr	x5, [x6, #1560]
   15570:	cbz	x5, 154d8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x140>
   15574:	sub	x7, x5, #0x1
   15578:	mov	x0, x7
   1557c:	tbnz	x7, #63, 154d8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x140>
   15580:	add	x1, x1, #0x420
   15584:	mov	w3, w4
   15588:	b	15598 <__sanitizer_install_malloc_and_free_hooks@@Base+0x200>
   1558c:	sub	x0, x0, #0x1
   15590:	cmn	x0, #0x1
   15594:	b.eq	154d8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x140>  // b.none
   15598:	lsl	x2, x0, #3
   1559c:	ldr	w2, [x1, x2]
   155a0:	cmp	w3, w2
   155a4:	b.ne	1558c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1f4>  // b.any
   155a8:	add	x3, x6, x0, lsl #3
   155ac:	add	x1, x5, #0x82
   155b0:	add	x5, x6, x7, lsl #3
   155b4:	mov	x0, x3
   155b8:	lsl	x1, x1, #3
   155bc:	add	x2, x6, x1
   155c0:	ldr	w3, [x3, #1052]
   155c4:	ldr	x5, [x5, #1048]
   155c8:	str	x5, [x0, #1048]
   155cc:	str	w4, [x6, x1]
   155d0:	str	w3, [x2, #4]
   155d4:	str	x7, [x6, #1560]
   155d8:	ret
   155dc:	bic	x5, x7, x5
   155e0:	str	x5, [x1, #8]
   155e4:	b	15564 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1cc>
   155e8:	ldr	x3, [x1]
   155ec:	stp	x19, x30, [sp, #-16]!
   155f0:	mov	x19, x2
   155f4:	adrp	x2, 16000 <__sanitizer_install_malloc_and_free_hooks@@Base+0xc68>
   155f8:	add	x2, x2, #0xab8
   155fc:	ldr	x3, [x3]
   15600:	str	xzr, [x19]
   15604:	mov	w0, #0x0                   	// #0
   15608:	cmp	x3, x2
   1560c:	b.ne	1561c <__sanitizer_install_malloc_and_free_hooks@@Base+0x284>  // b.any
   15610:	str	w0, [x19, #8]
   15614:	ldp	x19, x30, [sp], #16
   15618:	ret
   1561c:	mov	x0, x1
   15620:	blr	x3
   15624:	str	w0, [x19, #8]
   15628:	ldp	x19, x30, [sp], #16
   1562c:	ret
   15630:	stp	x19, x20, [sp, #-32]!
   15634:	mov	x20, x0
   15638:	ldr	x0, [x2]
   1563c:	str	x30, [sp, #16]
   15640:	cbnz	x0, 15650 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2b8>
   15644:	ldr	x30, [sp, #16]
   15648:	ldp	x19, x20, [sp], #32
   1564c:	ret
   15650:	add	x0, x20, #0x8
   15654:	mov	x19, x2
   15658:	mov	w2, #0x1                   	// #1
   1565c:	ldxrb	w1, [x0]
   15660:	stxrb	w3, w2, [x0]
   15664:	cbnz	w3, 1565c <__sanitizer_install_malloc_and_free_hooks@@Base+0x2c4>
   15668:	dmb	ish
   1566c:	tst	w1, #0xff
   15670:	b.eq	15678 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2e0>  // b.none
   15674:	bl	85d8 <__sanitizer_print_stack_trace@@Base+0x300>
   15678:	ldr	x3, [x19]
   1567c:	cbz	x3, 15690 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2f8>
   15680:	ldr	x0, [x20, #16]
   15684:	and	x1, x3, #0xfffffffffffff000
   15688:	cmp	x1, x0
   1568c:	b.eq	156a8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x310>  // b.none
   15690:	str	xzr, [x19]
   15694:	dmb	ish
   15698:	strb	wzr, [x20, #8]
   1569c:	ldr	x30, [sp, #16]
   156a0:	ldp	x19, x20, [sp], #32
   156a4:	ret
   156a8:	cmp	x3, #0xfff
   156ac:	b.ls	15768 <__sanitizer_install_malloc_and_free_hooks@@Base+0x3d0>  // b.plast
   156b0:	ubfx	x0, x3, #6, #6
   156b4:	mov	x1, #0x1                   	// #1
   156b8:	ldr	x6, [x20, #24]
   156bc:	add	x4, x0, x1
   156c0:	and	x2, x3, #0xfff
   156c4:	lsl	x0, x1, x0
   156c8:	lsl	x5, x4, #3
   156cc:	tst	x0, x6
   156d0:	lsl	x3, x1, x3
   156d4:	b.ne	15704 <__sanitizer_install_malloc_and_free_hooks@@Base+0x36c>  // b.any
   156d8:	ldr	x1, [x20, #544]
   156dc:	add	x5, x20, #0x220
   156e0:	tst	x0, x1
   156e4:	b.ne	15734 <__sanitizer_install_malloc_and_free_hooks@@Base+0x39c>  // b.any
   156e8:	orr	x0, x0, x1
   156ec:	str	x0, [x20, #544]
   156f0:	str	x3, [x5, x4, lsl #3]
   156f4:	add	x2, x2, x2, lsl #6
   156f8:	add	x2, x20, x2, lsl #3
   156fc:	str	xzr, [x2, #1584]
   15700:	b	15690 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2f8>
   15704:	add	x5, x20, x5
   15708:	ldr	x1, [x5, #24]
   1570c:	tst	x3, x1
   15710:	b.eq	156d8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x340>  // b.none
   15714:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   15718:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   1571c:	add	x2, x2, #0x7b8
   15720:	add	x0, x0, #0x758
   15724:	mov	x4, #0x0                   	// #0
   15728:	mov	x3, #0x0                   	// #0
   1572c:	mov	w1, #0xbe                  	// #190
   15730:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   15734:	ldr	x0, [x5, x4, lsl #3]
   15738:	orr	x3, x0, x3
   1573c:	str	x3, [x5, x4, lsl #3]
   15740:	cmp	x0, x3
   15744:	b.ne	156f4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x35c>  // b.any
   15748:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   1574c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   15750:	add	x2, x2, #0x7e8
   15754:	add	x0, x0, #0x758
   15758:	mov	x4, #0x0                   	// #0
   1575c:	mov	x3, #0x0                   	// #0
   15760:	mov	w1, #0xbf                  	// #191
   15764:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   15768:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   1576c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   15770:	add	x2, x2, #0x740
   15774:	add	x0, x0, #0x758
   15778:	mov	x4, #0x1000                	// #4096
   1577c:	mov	w1, #0x16e                 	// #366
   15780:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   15784:	nop
   15788:	stp	x19, x30, [sp, #-16]!
   1578c:	mov	x19, x0
   15790:	mov	x0, #0xa50                 	// #2640
   15794:	mov	w2, #0x0                   	// #0
   15798:	movk	x0, #0x41, lsl #16
   1579c:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   157a0:	add	x1, x1, #0x810
   157a4:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   157a8:	add	x4, x0, #0x410, lsl #12
   157ac:	strb	wzr, [x0, #8]
   157b0:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   157b4:	add	x3, x1, #0x918
   157b8:	add	x2, x0, #0x208, lsl #12
   157bc:	str	x3, [x0]
   157c0:	add	x1, x0, #0x630
   157c4:	ldrb	w3, [x19]
   157c8:	add	x2, x2, #0x630
   157cc:	strb	w3, [x4, #2632]
   157d0:	stp	xzr, xzr, [x0, #16]
   157d4:	str	xzr, [x0, #544]
   157d8:	str	xzr, [x1]
   157dc:	add	x1, x1, #0x208
   157e0:	cmp	x1, x2
   157e4:	b.ne	157d8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x440>  // b.any
   157e8:	add	x1, x0, #0x10
   157ec:	add	x1, x1, #0x410, lsl #12
   157f0:	str	xzr, [x1, #2608]
   157f4:	ldp	x19, x30, [sp], #16
   157f8:	ret
   157fc:	nop
   15800:	add	x5, x0, #0x410, lsl #12
   15804:	strb	wzr, [x0, #8]
   15808:	add	x3, x0, #0x208, lsl #12
   1580c:	adrp	x4, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   15810:	ldrb	w1, [x1]
   15814:	add	x4, x4, #0x918
   15818:	str	x4, [x0]
   1581c:	add	x2, x0, #0x630
   15820:	add	x3, x3, #0x630
   15824:	strb	w1, [x5, #2632]
   15828:	stp	xzr, xzr, [x0, #16]
   1582c:	str	xzr, [x0, #544]
   15830:	str	xzr, [x2]
   15834:	add	x2, x2, #0x208
   15838:	cmp	x2, x3
   1583c:	b.ne	15830 <__sanitizer_install_malloc_and_free_hooks@@Base+0x498>  // b.any
   15840:	add	x0, x0, #0x10
   15844:	add	x0, x0, #0x410, lsl #12
   15848:	str	xzr, [x0, #2608]
   1584c:	ret
   15850:	ldr	x3, [x2]
   15854:	cbz	x3, 15868 <__sanitizer_install_malloc_and_free_hooks@@Base+0x4d0>
   15858:	ldr	x4, [x0, #16]
   1585c:	and	x3, x3, #0xfffffffffffff000
   15860:	cmp	x3, x4
   15864:	b.eq	15b2c <__sanitizer_install_malloc_and_free_hooks@@Base+0x794>  // b.none
   15868:	stp	x19, x20, [sp, #-32]!
   1586c:	ldr	x9, [x0, #24]
   15870:	str	x30, [sp, #16]
   15874:	cbz	x9, 158e0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x548>
   15878:	mov	x4, x0
   1587c:	rbit	x3, x9
   15880:	clz	x3, x3
   15884:	mov	x5, #0x1                   	// #1
   15888:	add	x8, x3, x5
   1588c:	lsl	x7, x5, x3
   15890:	bic	x9, x9, x7
   15894:	str	x9, [x4, #24]!
   15898:	ldr	x6, [x4, x8, lsl #3]
   1589c:	cbz	x6, 15c88 <__sanitizer_install_malloc_and_free_hooks@@Base+0x8f0>
   158a0:	rbit	x10, x6
   158a4:	clz	x10, x10
   158a8:	lsl	x5, x5, x10
   158ac:	bic	x5, x6, x5
   158b0:	str	x5, [x4, x8, lsl #3]
   158b4:	cbz	x5, 158c0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x528>
   158b8:	orr	x7, x7, x9
   158bc:	str	x7, [x0, #24]
   158c0:	add	x3, x10, x3, lsl #6
   158c4:	add	x4, x0, #0x10
   158c8:	add	x5, x3, #0x41, lsl #12
   158cc:	add	x5, x5, #0x146
   158d0:	str	x2, [x4, x5, lsl #3]
   158d4:	ldr	x4, [x0, #16]
   158d8:	add	x3, x3, x4
   158dc:	b	15ae0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x748>
   158e0:	ldr	x15, [x0, #544]
   158e4:	cbz	x15, 15a2c <__sanitizer_install_malloc_and_free_hooks@@Base+0x694>
   158e8:	add	x11, x0, #0x10
   158ec:	add	x10, x11, #0x410, lsl #12
   158f0:	ldr	x4, [x10, #2608]
   158f4:	subs	x12, x4, #0x1
   158f8:	b.mi	159d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x638>  // b.first
   158fc:	add	x4, x4, #0x21, lsl #12
   15900:	mov	x16, #0x10a2                	// #4258
   15904:	add	x4, x4, #0xa3
   15908:	add	x14, x0, #0x220
   1590c:	mov	x13, #0x1                   	// #1
   15910:	movk	x16, #0x2, lsl #16
   15914:	add	x4, x0, x4, lsl #4
   15918:	ldrh	w6, [x4]
   1591c:	and	x3, x6, #0xffff
   15920:	cmp	x3, #0x1, lsl #12
   15924:	b.hi	15c24 <__sanitizer_install_malloc_and_free_hooks@@Base+0x88c>  // b.pmore
   15928:	lsr	x5, x3, #12
   1592c:	ubfx	x3, x3, #6, #6
   15930:	lsl	x8, x13, x3
   15934:	ldr	x7, [x14, x5, lsl #3]
   15938:	tst	x8, x7
   1593c:	b.ne	15b10 <__sanitizer_install_malloc_and_free_hooks@@Base+0x778>  // b.any
   15940:	ldrh	w6, [x4, #2]
   15944:	and	x3, x6, #0xffff
   15948:	cmp	x3, #0x1, lsl #12
   1594c:	b.hi	15c4c <__sanitizer_install_malloc_and_free_hooks@@Base+0x8b4>  // b.pmore
   15950:	lsr	x5, x3, #12
   15954:	ubfx	x3, x3, #6, #6
   15958:	lsl	x8, x13, x3
   1595c:	ldr	x7, [x14, x5, lsl #3]
   15960:	tst	x8, x7
   15964:	b.eq	159c0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x628>  // b.none
   15968:	add	x3, x3, x5, lsl #6
   1596c:	lsl	x6, x13, x6
   15970:	add	x3, x3, #0x1
   15974:	ldr	x3, [x14, x3, lsl #3]
   15978:	tst	x6, x3
   1597c:	b.eq	159c0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x628>  // b.none
   15980:	ldr	x3, [x10, #2608]
   15984:	ldrh	w20, [x4]
   15988:	add	x8, x3, x16
   1598c:	sub	x5, x3, #0x1
   15990:	ldrh	w19, [x4, #2]
   15994:	lsl	x8, x8, #4
   15998:	ldr	w17, [x4, #12]
   1599c:	add	x3, x11, x8
   159a0:	ldp	w30, w18, [x4, #4]
   159a4:	ldp	x6, x7, [x3]
   159a8:	stp	x6, x7, [x4]
   159ac:	strh	w20, [x11, x8]
   159b0:	strh	w19, [x3, #2]
   159b4:	stp	w30, w18, [x3, #4]
   159b8:	str	w17, [x3, #12]
   159bc:	str	x5, [x10, #2608]
   159c0:	sub	x12, x12, #0x1
   159c4:	sub	x4, x4, #0x10
   159c8:	cmn	x12, #0x1
   159cc:	b.ne	15918 <__sanitizer_install_malloc_and_free_hooks@@Base+0x580>  // b.any
   159d0:	mov	x12, #0x1                   	// #1
   159d4:	add	x6, x0, #0x630
   159d8:	mov	x14, x12
   159dc:	ldr	x3, [x6, x9, lsl #3]
   159e0:	add	x13, x9, #0x1
   159e4:	and	x3, x15, x3
   159e8:	cbz	x3, 15b6c <__sanitizer_install_malloc_and_free_hooks@@Base+0x7d4>
   159ec:	rbit	x4, x3
   159f0:	clz	x4, x4
   159f4:	add	x7, x13, x4
   159f8:	add	x10, x0, x4, lsl #3
   159fc:	lsl	x5, x12, x4
   15a00:	bic	x3, x3, x5
   15a04:	ldr	x8, [x6, x7, lsl #3]
   15a08:	ldr	x5, [x10, #552]
   15a0c:	bic	x5, x8, x5
   15a10:	str	x5, [x6, x7, lsl #3]
   15a14:	cbnz	x5, 159e8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x650>
   15a18:	ldr	x5, [x6, x9, lsl #3]
   15a1c:	lsl	x4, x14, x4
   15a20:	bic	x4, x5, x4
   15a24:	str	x4, [x6, x9, lsl #3]
   15a28:	b	159e8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x650>
   15a2c:	ldr	x4, [x0, #16]
   15a30:	mov	x5, x0
   15a34:	mvni	v0.4s, #0x0
   15a38:	add	x3, x0, #0x20
   15a3c:	add	x4, x4, #0x1, lsl #12
   15a40:	str	x4, [x0, #16]
   15a44:	add	x4, x0, #0x220
   15a48:	mov	x6, #0xffffffffffffffff    	// #-1
   15a4c:	str	x6, [x5, #24]!
   15a50:	str	q0, [x3], #16
   15a54:	cmp	x3, x4
   15a58:	b.ne	15a50 <__sanitizer_install_malloc_and_free_hooks@@Base+0x6b8>  // b.any
   15a5c:	add	x4, x0, #0x208, lsl #12
   15a60:	add	x3, x0, #0x630
   15a64:	add	x4, x4, #0x630
   15a68:	str	xzr, [x3]
   15a6c:	add	x3, x3, #0x208
   15a70:	cmp	x4, x3
   15a74:	b.ne	15a68 <__sanitizer_install_malloc_and_free_hooks@@Base+0x6d0>  // b.any
   15a78:	add	x11, x0, #0x10
   15a7c:	add	x3, x11, #0x410, lsl #12
   15a80:	str	xzr, [x3, #2608]
   15a84:	ldr	x4, [x0, #24]
   15a88:	cbz	x4, 15b4c <__sanitizer_install_malloc_and_free_hooks@@Base+0x7b4>
   15a8c:	rbit	x3, x4
   15a90:	mov	x6, #0x1                   	// #1
   15a94:	clz	x3, x3
   15a98:	add	x9, x3, x6
   15a9c:	lsl	x8, x6, x3
   15aa0:	bic	x4, x4, x8
   15aa4:	str	x4, [x0, #24]
   15aa8:	ldr	x7, [x5, x9, lsl #3]
   15aac:	cbz	x7, 15c68 <__sanitizer_install_malloc_and_free_hooks@@Base+0x8d0>
   15ab0:	rbit	x10, x7
   15ab4:	clz	x10, x10
   15ab8:	lsl	x6, x6, x10
   15abc:	bic	x6, x7, x6
   15ac0:	str	x6, [x5, x9, lsl #3]
   15ac4:	cbnz	x6, 15c40 <__sanitizer_install_malloc_and_free_hooks@@Base+0x8a8>
   15ac8:	add	x3, x10, x3, lsl #6
   15acc:	add	x4, x3, #0x41, lsl #12
   15ad0:	add	x4, x4, #0x146
   15ad4:	str	x2, [x11, x4, lsl #3]
   15ad8:	ldr	x4, [x0, #16]
   15adc:	add	x3, x3, x4
   15ae0:	str	x3, [x2]
   15ae4:	ldr	x2, [x1, #528]
   15ae8:	ldr	x4, [x0, #16]
   15aec:	cmp	x2, x4
   15af0:	b.eq	15b04 <__sanitizer_install_malloc_and_free_hooks@@Base+0x76c>  // b.none
   15af4:	str	xzr, [x1, #8]
   15af8:	str	x4, [x1, #528]
   15afc:	str	xzr, [x1, #1048]
   15b00:	str	xzr, [x1, #1568]
   15b04:	ldr	x30, [sp, #16]
   15b08:	ldp	x19, x20, [sp], #32
   15b0c:	ret
   15b10:	add	x3, x3, x5, lsl #6
   15b14:	lsl	x6, x13, x6
   15b18:	add	x3, x3, #0x1
   15b1c:	ldr	x3, [x14, x3, lsl #3]
   15b20:	tst	x6, x3
   15b24:	b.ne	15980 <__sanitizer_install_malloc_and_free_hooks@@Base+0x5e8>  // b.any
   15b28:	b	15940 <__sanitizer_install_malloc_and_free_hooks@@Base+0x5a8>
   15b2c:	ldr	x2, [x1, #528]
   15b30:	cmp	x2, x4
   15b34:	b.eq	15b48 <__sanitizer_install_malloc_and_free_hooks@@Base+0x7b0>  // b.none
   15b38:	str	xzr, [x1, #8]
   15b3c:	str	x4, [x1, #528]
   15b40:	str	xzr, [x1, #1048]
   15b44:	str	xzr, [x1, #1568]
   15b48:	ret
   15b4c:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   15b50:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   15b54:	add	x2, x2, #0xf40
   15b58:	add	x0, x0, #0x6d0
   15b5c:	mov	x4, #0x0                   	// #0
   15b60:	mov	x3, #0x0                   	// #0
   15b64:	mov	w1, #0xc0                  	// #192
   15b68:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   15b6c:	add	x9, x9, #0x41
   15b70:	cmp	x9, #0x41, lsl #12
   15b74:	ldr	x15, [x0, #544]
   15b78:	b.ne	159dc <__sanitizer_install_malloc_and_free_hooks@@Base+0x644>  // b.any
   15b7c:	add	x8, x0, #0x220
   15b80:	add	x6, x0, #0x18
   15b84:	mov	x7, #0x1                   	// #1
   15b88:	cbz	x15, 15bc8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x830>
   15b8c:	rbit	x3, x15
   15b90:	ldr	x5, [x0, #24]
   15b94:	clz	x3, x3
   15b98:	lsl	x4, x7, x3
   15b9c:	add	x3, x3, #0x1
   15ba0:	bic	x15, x15, x4
   15ba4:	orr	x4, x4, x5
   15ba8:	str	x4, [x0, #24]
   15bac:	cmp	x4, x5
   15bb0:	lsl	x4, x3, #3
   15bb4:	b.eq	15ca8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x910>  // b.none
   15bb8:	str	xzr, [x6, x3, lsl #3]
   15bbc:	ldr	x4, [x8, x3, lsl #3]
   15bc0:	str	x4, [x6, x3, lsl #3]
   15bc4:	cbnz	x15, 15b8c <__sanitizer_install_malloc_and_free_hooks@@Base+0x7f4>
   15bc8:	ldr	x5, [x0, #24]
   15bcc:	str	xzr, [x0, #544]
   15bd0:	cbz	x5, 15b4c <__sanitizer_install_malloc_and_free_hooks@@Base+0x7b4>
   15bd4:	rbit	x3, x5
   15bd8:	mov	x7, x0
   15bdc:	clz	x3, x3
   15be0:	mov	x4, #0x1                   	// #1
   15be4:	add	x6, x3, #0x1
   15be8:	lsl	x8, x4, x3
   15bec:	bic	x5, x5, x8
   15bf0:	lsl	x6, x6, #3
   15bf4:	str	x5, [x7, #24]!
   15bf8:	ldr	x9, [x7, x6]
   15bfc:	cbz	x9, 15cc0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x928>
   15c00:	rbit	x10, x9
   15c04:	clz	x10, x10
   15c08:	lsl	x4, x4, x10
   15c0c:	bic	x4, x9, x4
   15c10:	str	x4, [x7, x6]
   15c14:	cbz	x4, 15ac8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x730>
   15c18:	orr	x5, x8, x5
   15c1c:	str	x5, [x0, #24]
   15c20:	b	15ac8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x730>
   15c24:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   15c28:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   15c2c:	add	x2, x2, #0x728
   15c30:	add	x0, x0, #0x6d0
   15c34:	mov	x4, #0x1000                	// #4096
   15c38:	mov	w1, #0x144                 	// #324
   15c3c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   15c40:	orr	x4, x8, x4
   15c44:	str	x4, [x0, #24]
   15c48:	b	15ac8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x730>
   15c4c:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   15c50:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   15c54:	add	x2, x2, #0x728
   15c58:	add	x0, x0, #0x6d0
   15c5c:	mov	x4, #0x1000                	// #4096
   15c60:	mov	w1, #0x144                 	// #324
   15c64:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   15c68:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   15c6c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   15c70:	add	x2, x2, #0x390
   15c74:	add	x0, x0, #0x6d0
   15c78:	mov	x4, #0x0                   	// #0
   15c7c:	mov	x3, #0x0                   	// #0
   15c80:	mov	w1, #0x31                  	// #49
   15c84:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   15c88:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   15c8c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   15c90:	add	x2, x2, #0x390
   15c94:	add	x0, x0, #0x6d0
   15c98:	mov	x4, #0x0                   	// #0
   15c9c:	mov	x3, #0x0                   	// #0
   15ca0:	mov	w1, #0x31                  	// #49
   15ca4:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   15ca8:	ldr	x3, [x6, x4]
   15cac:	ldr	x5, [x8, x4]
   15cb0:	orr	x3, x3, x5
   15cb4:	str	x3, [x6, x4]
   15cb8:	cbnz	x15, 15b8c <__sanitizer_install_malloc_and_free_hooks@@Base+0x7f4>
   15cbc:	b	15bc8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x830>
   15cc0:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   15cc4:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   15cc8:	add	x2, x2, #0x390
   15ccc:	add	x0, x0, #0x6d0
   15cd0:	mov	x4, #0x0                   	// #0
   15cd4:	mov	x3, #0x0                   	// #0
   15cd8:	mov	w1, #0x31                  	// #49
   15cdc:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   15ce0:	stp	x19, x20, [sp, #-96]!
   15ce4:	mov	x20, x1
   15ce8:	add	x1, x0, #0x410, lsl #12
   15cec:	stp	x21, x22, [sp, #16]
   15cf0:	mov	x19, x0
   15cf4:	mov	x21, x2
   15cf8:	ldrb	w1, [x1, #2632]
   15cfc:	stp	x23, x24, [sp, #32]
   15d00:	and	w24, w3, #0xff
   15d04:	stp	x25, x26, [sp, #48]
   15d08:	and	w26, w4, #0xff
   15d0c:	mov	w25, #0x0                   	// #0
   15d10:	ldr	x23, [x20, #16]
   15d14:	str	x30, [sp, #64]
   15d18:	cbz	w1, 15d34 <__sanitizer_install_malloc_and_free_hooks@@Base+0x99c>
   15d1c:	ldr	x0, [x20]
   15d20:	adrp	x1, 16000 <__sanitizer_install_malloc_and_free_hooks@@Base+0xc68>
   15d24:	add	x1, x1, #0xab8
   15d28:	ldr	x2, [x0]
   15d2c:	cmp	x2, x1
   15d30:	b.ne	15ecc <__sanitizer_install_malloc_and_free_hooks@@Base+0xb34>  // b.any
   15d34:	ldr	x1, [x23, #8]
   15d38:	add	x22, x23, #0x8
   15d3c:	ldr	x2, [x21]
   15d40:	ldr	x5, [x23, #528]
   15d44:	cbz	x1, 15e70 <__sanitizer_install_malloc_and_free_hooks@@Base+0xad8>
   15d48:	cbz	x2, 15d58 <__sanitizer_install_malloc_and_free_hooks@@Base+0x9c0>
   15d4c:	ldr	x0, [x19, #16]
   15d50:	cmp	x0, x5
   15d54:	b.eq	15ef0 <__sanitizer_install_malloc_and_free_hooks@@Base+0xb58>  // b.none
   15d58:	add	x0, x19, #0x8
   15d5c:	mov	w2, #0x1                   	// #1
   15d60:	ldxrb	w1, [x0]
   15d64:	stxrb	w3, w2, [x0]
   15d68:	cbnz	w3, 15d60 <__sanitizer_install_malloc_and_free_hooks@@Base+0x9c8>
   15d6c:	dmb	ish
   15d70:	tst	w1, #0xff
   15d74:	b.eq	15d80 <__sanitizer_install_malloc_and_free_hooks@@Base+0x9e8>  // b.none
   15d78:	bl	85d8 <__sanitizer_print_stack_trace@@Base+0x300>
   15d7c:	nop
   15d80:	mov	x2, x21
   15d84:	mov	x1, x23
   15d88:	mov	x0, x19
   15d8c:	bl	15850 <__sanitizer_install_malloc_and_free_hooks@@Base+0x4b8>
   15d90:	cbnz	w24, 15fac <__sanitizer_install_malloc_and_free_hooks@@Base+0xc14>
   15d94:	ldr	x24, [x21]
   15d98:	cbnz	w26, 15dd4 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa3c>
   15d9c:	mov	w3, w25
   15da0:	ldr	x1, [x20]
   15da4:	cbz	w25, 16074 <__sanitizer_install_malloc_and_free_hooks@@Base+0xcdc>
   15da8:	ldr	x2, [x1, #8]
   15dac:	adrp	x1, 16000 <__sanitizer_install_malloc_and_free_hooks@@Base+0xc68>
   15db0:	add	x1, x1, #0xac0
   15db4:	mov	w4, #0x0                   	// #0
   15db8:	cmp	x2, x1
   15dbc:	b.ne	16140 <__sanitizer_install_malloc_and_free_hooks@@Base+0xda8>  // b.any
   15dc0:	mov	x2, x24
   15dc4:	mov	x1, x22
   15dc8:	add	x0, x19, #0x10
   15dcc:	bl	16d00 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1968>
   15dd0:	ldr	x24, [x21]
   15dd4:	ldr	x0, [x19, #16]
   15dd8:	ldr	x1, [x22, #520]
   15ddc:	cmp	x0, x1
   15de0:	b.eq	15df4 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa5c>  // b.none
   15de4:	str	xzr, [x23, #8]
   15de8:	str	x0, [x22, #520]
   15dec:	str	xzr, [x22, #1040]
   15df0:	str	xzr, [x22, #1560]
   15df4:	cmp	x24, #0xfff
   15df8:	b.ls	16108 <__sanitizer_install_malloc_and_free_hooks@@Base+0xd70>  // b.plast
   15dfc:	ldr	x3, [x19, #16]
   15e00:	and	x4, x24, #0xfffffffffffff000
   15e04:	cmp	x3, x4
   15e08:	b.ne	16128 <__sanitizer_install_malloc_and_free_hooks@@Base+0xd90>  // b.any
   15e0c:	cmp	x3, x0
   15e10:	and	x4, x24, #0xfff
   15e14:	b.ne	16158 <__sanitizer_install_malloc_and_free_hooks@@Base+0xdc0>  // b.any
   15e18:	ldr	x1, [x23, #8]
   15e1c:	lsr	x2, x4, #6
   15e20:	mov	x0, #0x1                   	// #1
   15e24:	add	x3, x2, x0
   15e28:	lsl	x24, x0, x24
   15e2c:	lsl	x0, x0, x2
   15e30:	tst	x1, x0
   15e34:	b.ne	16024 <__sanitizer_install_malloc_and_free_hooks@@Base+0xc8c>  // b.any
   15e38:	orr	x0, x1, x0
   15e3c:	str	x0, [x23, #8]
   15e40:	str	x24, [x22, x3, lsl #3]
   15e44:	ldr	x3, [x22, #1560]
   15e48:	cmp	x3, #0x3f
   15e4c:	b.hi	1609c <__sanitizer_install_malloc_and_free_hooks@@Base+0xd04>  // b.pmore
   15e50:	add	x0, x3, #0x83
   15e54:	add	x3, x3, #0x1
   15e58:	str	x3, [x22, #1560]
   15e5c:	lsl	x0, x0, #3
   15e60:	add	x1, x22, x0
   15e64:	str	w4, [x22, x0]
   15e68:	str	w25, [x1, #4]
   15e6c:	b	16054 <__sanitizer_install_malloc_and_free_hooks@@Base+0xcbc>
   15e70:	cbz	x5, 15d48 <__sanitizer_install_malloc_and_free_hooks@@Base+0x9b0>
   15e74:	and	x0, x2, #0xfffffffffffff000
   15e78:	cmp	x0, x5
   15e7c:	b.ne	15d48 <__sanitizer_install_malloc_and_free_hooks@@Base+0x9b0>  // b.any
   15e80:	ubfx	x1, x2, #6, #6
   15e84:	mov	x0, #0x1                   	// #1
   15e88:	add	x3, x1, x0
   15e8c:	lsl	x4, x0, x2
   15e90:	lsl	x0, x0, x1
   15e94:	str	x0, [x23, #8]
   15e98:	and	x2, x2, #0xfff
   15e9c:	str	x4, [x22, x3, lsl #3]
   15ea0:	ldr	x3, [x22, #1560]
   15ea4:	cmp	x3, #0x3f
   15ea8:	b.hi	1609c <__sanitizer_install_malloc_and_free_hooks@@Base+0xd04>  // b.pmore
   15eac:	add	x0, x3, #0x83
   15eb0:	add	x3, x3, #0x1
   15eb4:	str	x3, [x22, #1560]
   15eb8:	lsl	x0, x0, #3
   15ebc:	add	x1, x22, x0
   15ec0:	str	w2, [x22, x0]
   15ec4:	str	w25, [x1, #4]
   15ec8:	b	1605c <__sanitizer_install_malloc_and_free_hooks@@Base+0xcc4>
   15ecc:	mov	x0, x20
   15ed0:	blr	x2
   15ed4:	ldr	x1, [x23, #8]
   15ed8:	mov	w25, w0
   15edc:	add	x22, x23, #0x8
   15ee0:	ldr	x2, [x21]
   15ee4:	ldr	x5, [x23, #528]
   15ee8:	cbnz	x1, 15d48 <__sanitizer_install_malloc_and_free_hooks@@Base+0x9b0>
   15eec:	b	15e70 <__sanitizer_install_malloc_and_free_hooks@@Base+0xad8>
   15ef0:	and	x0, x2, #0xfffffffffffff000
   15ef4:	cmp	x0, x5
   15ef8:	b.ne	15d58 <__sanitizer_install_malloc_and_free_hooks@@Base+0x9c0>  // b.any
   15efc:	ldr	x9, [x23, #1568]
   15f00:	ubfx	x6, x2, #6, #6
   15f04:	mov	x0, #0x1                   	// #1
   15f08:	and	x8, x2, #0xfff
   15f0c:	add	x5, x6, x0
   15f10:	lsl	x3, x0, x6
   15f14:	lsl	x2, x0, x2
   15f18:	cbz	x9, 15f6c <__sanitizer_install_malloc_and_free_hooks@@Base+0xbd4>
   15f1c:	add	x6, x6, #0x1
   15f20:	add	x7, x19, #0x630
   15f24:	add	x11, x23, #0x420
   15f28:	mov	x0, #0x0                   	// #0
   15f2c:	mov	w10, #0x208                 	// #520
   15f30:	mov	w12, #0x41                  	// #65
   15f34:	lsl	x4, x0, #3
   15f38:	ldr	w4, [x11, x4]
   15f3c:	umull	x5, w4, w10
   15f40:	ldr	x5, [x7, x5]
   15f44:	tst	x3, x5
   15f48:	b.eq	15d58 <__sanitizer_install_malloc_and_free_hooks@@Base+0x9c0>  // b.none
   15f4c:	umaddl	x4, w4, w12, x6
   15f50:	mov	x5, x6
   15f54:	ldr	x4, [x7, x4, lsl #3]
   15f58:	tst	x2, x4
   15f5c:	b.eq	15d58 <__sanitizer_install_malloc_and_free_hooks@@Base+0x9c0>  // b.none
   15f60:	add	x0, x0, #0x1
   15f64:	cmp	x9, x0
   15f68:	b.ne	15f34 <__sanitizer_install_malloc_and_free_hooks@@Base+0xb9c>  // b.any
   15f6c:	tst	x1, x3
   15f70:	b.ne	160d4 <__sanitizer_install_malloc_and_free_hooks@@Base+0xd3c>  // b.any
   15f74:	orr	x1, x1, x3
   15f78:	str	x1, [x23, #8]
   15f7c:	str	x2, [x22, x5, lsl #3]
   15f80:	ldr	x3, [x22, #1560]
   15f84:	cmp	x3, #0x3f
   15f88:	b.hi	1609c <__sanitizer_install_malloc_and_free_hooks@@Base+0xd04>  // b.pmore
   15f8c:	add	x0, x3, #0x83
   15f90:	add	x3, x3, #0x1
   15f94:	str	x3, [x22, #1560]
   15f98:	lsl	x0, x0, #3
   15f9c:	add	x1, x22, x0
   15fa0:	str	w8, [x22, x0]
   15fa4:	str	w25, [x1, #4]
   15fa8:	b	1605c <__sanitizer_install_malloc_and_free_hooks@@Base+0xcc4>
   15fac:	ldr	x0, [x19, #16]
   15fb0:	ldr	x3, [x22, #520]
   15fb4:	ldr	x24, [x21]
   15fb8:	cmp	x0, x3
   15fbc:	b.ne	16178 <__sanitizer_install_malloc_and_free_hooks@@Base+0xde0>  // b.any
   15fc0:	cmp	x24, #0xfff
   15fc4:	b.ls	16108 <__sanitizer_install_malloc_and_free_hooks@@Base+0xd70>  // b.plast
   15fc8:	and	x4, x24, #0xfffffffffffff000
   15fcc:	mov	x3, x0
   15fd0:	cmp	x0, x4
   15fd4:	b.ne	16128 <__sanitizer_install_malloc_and_free_hooks@@Base+0xd90>  // b.any
   15fd8:	ldr	x2, [x23, #8]
   15fdc:	ubfx	x1, x24, #6, #6
   15fe0:	mov	x0, #0x1                   	// #1
   15fe4:	lsl	x3, x0, x1
   15fe8:	tst	x3, x2
   15fec:	b.eq	15d98 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa00>  // b.none
   15ff0:	add	x1, x1, x0
   15ff4:	lsl	x0, x0, x24
   15ff8:	ldr	x1, [x22, x1, lsl #3]
   15ffc:	tst	x0, x1
   16000:	b.eq	15d98 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa00>  // b.none
   16004:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   16008:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   1600c:	add	x2, x2, #0x8e0
   16010:	add	x0, x0, #0x908
   16014:	mov	x4, #0x0                   	// #0
   16018:	mov	x3, #0x0                   	// #0
   1601c:	mov	w1, #0xa6                  	// #166
   16020:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   16024:	ldr	x0, [x22, x3, lsl #3]
   16028:	orr	x24, x0, x24
   1602c:	str	x24, [x22, x3, lsl #3]
   16030:	cmp	x0, x24
   16034:	b.ne	15e44 <__sanitizer_install_malloc_and_free_hooks@@Base+0xaac>  // b.any
   16038:	ldr	x3, [x22, #1040]
   1603c:	cmp	x3, #0x3f
   16040:	b.hi	160b8 <__sanitizer_install_malloc_and_free_hooks@@Base+0xd20>  // b.pmore
   16044:	add	x0, x3, #0x42
   16048:	add	x3, x3, #0x1
   1604c:	str	x3, [x22, #1040]
   16050:	str	x4, [x22, x0, lsl #3]
   16054:	dmb	ish
   16058:	strb	wzr, [x19, #8]
   1605c:	ldp	x21, x22, [sp, #16]
   16060:	ldp	x23, x24, [sp, #32]
   16064:	ldp	x25, x26, [sp, #48]
   16068:	ldr	x30, [sp, #64]
   1606c:	ldp	x19, x20, [sp], #96
   16070:	ret
   16074:	ldr	x2, [x1]
   16078:	adrp	x0, 16000 <__sanitizer_install_malloc_and_free_hooks@@Base+0xc68>
   1607c:	add	x0, x0, #0xab8
   16080:	cmp	x2, x0
   16084:	b.eq	15da8 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa10>  // b.none
   16088:	mov	x0, x20
   1608c:	blr	x2
   16090:	mov	w3, w0
   16094:	ldr	x1, [x20]
   16098:	b	15da8 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa10>
   1609c:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   160a0:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   160a4:	add	x2, x2, #0x828
   160a8:	add	x0, x0, #0x758
   160ac:	mov	x4, #0x40                  	// #64
   160b0:	mov	w1, #0x43                  	// #67
   160b4:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   160b8:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   160bc:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   160c0:	add	x2, x2, #0x888
   160c4:	add	x0, x0, #0x758
   160c8:	mov	x4, #0x40                  	// #64
   160cc:	mov	w1, #0x3f                  	// #63
   160d0:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   160d4:	ldr	x0, [x22, x5, lsl #3]
   160d8:	orr	x2, x0, x2
   160dc:	str	x2, [x22, x5, lsl #3]
   160e0:	cmp	x0, x2
   160e4:	b.ne	15f80 <__sanitizer_install_malloc_and_free_hooks@@Base+0xbe8>  // b.any
   160e8:	ldr	x3, [x22, #1040]
   160ec:	cmp	x3, #0x3f
   160f0:	b.hi	160b8 <__sanitizer_install_malloc_and_free_hooks@@Base+0xd20>  // b.pmore
   160f4:	add	x0, x3, #0x42
   160f8:	add	x3, x3, #0x1
   160fc:	str	x3, [x22, #1040]
   16100:	str	x8, [x22, x0, lsl #3]
   16104:	b	1605c <__sanitizer_install_malloc_and_free_hooks@@Base+0xcc4>
   16108:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   1610c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   16110:	mov	x3, x24
   16114:	add	x2, x2, #0x740
   16118:	add	x0, x0, #0x758
   1611c:	mov	x4, #0x1000                	// #4096
   16120:	mov	w1, #0x16e                 	// #366
   16124:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   16128:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   1612c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   16130:	add	x2, x2, #0xa08
   16134:	add	x0, x0, #0x758
   16138:	mov	w1, #0x16f                 	// #367
   1613c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   16140:	str	w3, [sp, #92]
   16144:	mov	x0, x20
   16148:	blr	x2
   1614c:	mov	w4, w0
   16150:	ldr	w3, [sp, #92]
   16154:	b	15dc0 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa28>
   16158:	mov	x4, x3
   1615c:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   16160:	mov	x3, x0
   16164:	add	x2, x2, #0xa38
   16168:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   1616c:	mov	w1, #0x3c                  	// #60
   16170:	add	x0, x0, #0x758
   16174:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   16178:	mov	x4, x0
   1617c:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   16180:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   16184:	add	x2, x2, #0xa38
   16188:	add	x0, x0, #0x758
   1618c:	mov	w1, #0x6b                  	// #107
   16190:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   16194:	nop
   16198:	stp	x19, x20, [sp, #-336]!
   1619c:	stp	x23, x24, [sp, #32]
   161a0:	ldr	x23, [x1, #16]
   161a4:	stp	x21, x22, [sp, #16]
   161a8:	mov	x22, x2
   161ac:	ldr	x4, [x0, #16]
   161b0:	stp	x25, x26, [sp, #48]
   161b4:	add	x2, x23, #0x8
   161b8:	ldr	x3, [x2, #520]
   161bc:	stp	x27, x28, [sp, #64]
   161c0:	ldr	x25, [x22]
   161c4:	str	x30, [sp, #80]
   161c8:	cmp	x4, x3
   161cc:	b.ne	163d8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1040>  // b.any
   161d0:	str	xzr, [x0, #1064]
   161d4:	mov	x19, x0
   161d8:	add	x21, x0, #0x428
   161dc:	ldr	x1, [x23, #8]
   161e0:	cbz	x1, 1623c <__sanitizer_install_malloc_and_free_hooks@@Base+0xea4>
   161e4:	mov	x3, #0x0                   	// #0
   161e8:	mov	x6, #0x1                   	// #1
   161ec:	rbit	x0, x1
   161f0:	clz	x0, x0
   161f4:	lsl	x5, x6, x0
   161f8:	orr	x4, x5, x3
   161fc:	str	x4, [x19, #1064]
   16200:	bic	x1, x1, x5
   16204:	cmp	x4, x3
   16208:	add	x0, x0, #0x1
   1620c:	b.eq	16228 <__sanitizer_install_malloc_and_free_hooks@@Base+0xe90>  // b.none
   16210:	str	xzr, [x21, x0, lsl #3]
   16214:	ldr	x3, [x2, x0, lsl #3]
   16218:	str	x3, [x21, x0, lsl #3]
   1621c:	cbz	x1, 1623c <__sanitizer_install_malloc_and_free_hooks@@Base+0xea4>
   16220:	ldr	x3, [x19, #1064]
   16224:	b	161ec <__sanitizer_install_malloc_and_free_hooks@@Base+0xe54>
   16228:	ldr	x3, [x21, x0, lsl #3]
   1622c:	ldr	x4, [x2, x0, lsl #3]
   16230:	orr	x3, x3, x4
   16234:	str	x3, [x21, x0, lsl #3]
   16238:	cbnz	x1, 16220 <__sanitizer_install_malloc_and_free_hooks@@Base+0xe88>
   1623c:	mov	x3, x25
   16240:	cmp	x25, #0xfff
   16244:	b.ls	1641c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1084>  // b.plast
   16248:	ldr	x3, [x19, #16]
   1624c:	and	x4, x25, #0xfffffffffffff000
   16250:	cmp	x3, x4
   16254:	b.ne	1643c <__sanitizer_install_malloc_and_free_hooks@@Base+0x10a4>  // b.any
   16258:	ubfx	x24, x25, #6, #6
   1625c:	mov	x5, #0x1                   	// #1
   16260:	ldr	x20, [x19, #1064]
   16264:	add	x0, x24, x5
   16268:	and	x6, x25, #0xfff
   1626c:	lsl	x24, x5, x24
   16270:	add	x11, x21, x0, lsl #3
   16274:	ands	x20, x20, x24
   16278:	lsl	x5, x5, x25
   1627c:	b.eq	162ac <__sanitizer_install_malloc_and_free_hooks@@Base+0xf14>  // b.none
   16280:	ldr	x0, [x21, x0, lsl #3]
   16284:	tst	x5, x0
   16288:	b.eq	162ac <__sanitizer_install_malloc_and_free_hooks@@Base+0xf14>  // b.none
   1628c:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   16290:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   16294:	add	x2, x2, #0x968
   16298:	add	x0, x0, #0x758
   1629c:	mov	x4, #0x0                   	// #0
   162a0:	mov	x3, #0x0                   	// #0
   162a4:	mov	w1, #0x13a                 	// #314
   162a8:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   162ac:	add	x8, x6, x6, lsl #6
   162b0:	str	x6, [sp, #176]
   162b4:	add	x7, x19, #0x630
   162b8:	mov	x26, #0x1                   	// #1
   162bc:	add	x3, sp, #0xb8
   162c0:	add	x10, x7, x8, lsl #3
   162c4:	mov	x9, x26
   162c8:	cbz	x20, 16300 <__sanitizer_install_malloc_and_free_hooks@@Base+0xf68>
   162cc:	ldr	x20, [x11]
   162d0:	ands	x20, x5, x20
   162d4:	b.eq	16300 <__sanitizer_install_malloc_and_free_hooks@@Base+0xf68>  // b.none
   162d8:	mov	x0, #0x1                   	// #1
   162dc:	cmp	x0, x26
   162e0:	b.eq	16474 <__sanitizer_install_malloc_and_free_hooks@@Base+0x10dc>  // b.none
   162e4:	add	x26, x26, #0x1
   162e8:	cmp	x26, #0x15
   162ec:	b.eq	16608 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1270>  // b.none
   162f0:	ldr	x20, [x19, #1064]
   162f4:	str	x6, [sp, #176]
   162f8:	and	x20, x20, x24
   162fc:	cbnz	x20, 162cc <__sanitizer_install_malloc_and_free_hooks@@Base+0xf34>
   16300:	sub	x4, x26, #0x1
   16304:	mov	x28, #0x0                   	// #0
   16308:	mov	x27, #0x0                   	// #0
   1630c:	mov	x12, #0x0                   	// #0
   16310:	cbnz	x27, 163b4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x101c>
   16314:	cbnz	x20, 162e4 <__sanitizer_install_malloc_and_free_hooks@@Base+0xf4c>
   16318:	ldr	x27, [x10]
   1631c:	cbz	x27, 162e4 <__sanitizer_install_malloc_and_free_hooks@@Base+0xf4c>
   16320:	cbnz	x28, 163f0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1058>
   16324:	mov	x1, x8
   16328:	mov	x20, x28
   1632c:	rbit	x12, x27
   16330:	clz	x12, x12
   16334:	add	x0, x1, x12
   16338:	add	x0, x0, #0x1
   1633c:	ldr	x2, [x7, x0, lsl #3]
   16340:	cbz	x2, 16454 <__sanitizer_install_malloc_and_free_hooks@@Base+0x10bc>
   16344:	add	x1, x12, x28
   16348:	lsl	x0, x9, x12
   1634c:	mov	x28, x2
   16350:	bic	x27, x27, x0
   16354:	rbit	x0, x28
   16358:	clz	x0, x0
   1635c:	add	x1, x0, x1, lsl #6
   16360:	lsl	x2, x9, x0
   16364:	bic	x28, x28, x2
   16368:	orr	x0, x28, x27
   1636c:	cbz	x0, 16408 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1070>
   16370:	mov	x0, x7
   16374:	mov	x2, x21
   16378:	stp	x7, x3, [sp, #104]
   1637c:	stp	x4, x6, [sp, #120]
   16380:	stp	x10, x12, [sp, #136]
   16384:	stp	x11, x5, [sp, #152]
   16388:	str	x8, [sp, #168]
   1638c:	bl	16fe0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1c48>
   16390:	mov	x9, #0x1                   	// #1
   16394:	ldp	x7, x3, [sp, #104]
   16398:	ldp	x4, x6, [sp, #120]
   1639c:	ldp	x10, x12, [sp, #136]
   163a0:	ldp	x11, x5, [sp, #152]
   163a4:	ldr	x8, [sp, #168]
   163a8:	cbz	x0, 16310 <__sanitizer_install_malloc_and_free_hooks@@Base+0xf78>
   163ac:	add	x0, x0, x9
   163b0:	b	162dc <__sanitizer_install_malloc_and_free_hooks@@Base+0xf44>
   163b4:	lsl	x0, x20, #6
   163b8:	cbz	x28, 163fc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1064>
   163bc:	rbit	x1, x28
   163c0:	add	x0, x12, x0
   163c4:	clz	x1, x1
   163c8:	lsl	x2, x9, x1
   163cc:	add	x1, x1, x0, lsl #6
   163d0:	bic	x28, x28, x2
   163d4:	b	16370 <__sanitizer_install_malloc_and_free_hooks@@Base+0xfd8>
   163d8:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   163dc:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   163e0:	add	x2, x2, #0xa38
   163e4:	add	x0, x0, #0x758
   163e8:	mov	w1, #0x6b                  	// #107
   163ec:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   163f0:	mov	x1, x12
   163f4:	mov	x27, #0x0                   	// #0
   163f8:	b	16354 <__sanitizer_install_malloc_and_free_hooks@@Base+0xfbc>
   163fc:	add	x1, x8, x0
   16400:	mov	x28, x0
   16404:	b	1632c <__sanitizer_install_malloc_and_free_hooks@@Base+0xf94>
   16408:	add	x20, x20, #0x1
   1640c:	mov	x27, #0x0                   	// #0
   16410:	mov	x28, #0x0                   	// #0
   16414:	b	16370 <__sanitizer_install_malloc_and_free_hooks@@Base+0xfd8>
   16418:	mov	x3, x5
   1641c:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   16420:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   16424:	add	x2, x2, #0x740
   16428:	add	x0, x0, #0x758
   1642c:	mov	x4, #0x1000                	// #4096
   16430:	mov	w1, #0x16e                 	// #366
   16434:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   16438:	mov	x3, x1
   1643c:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   16440:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   16444:	add	x2, x2, #0xa08
   16448:	add	x0, x0, #0x758
   1644c:	mov	w1, #0x16f                 	// #367
   16450:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   16454:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   16458:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   1645c:	add	x2, x2, #0x6b0
   16460:	add	x0, x0, #0x6d0
   16464:	mov	x4, #0x0                   	// #0
   16468:	mov	x3, #0x0                   	// #0
   1646c:	mov	w1, #0x133                 	// #307
   16470:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   16474:	add	x7, sp, #0xb0
   16478:	mov	x0, x7
   1647c:	add	x2, x7, x26, lsl #3
   16480:	b	16498 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1100>
   16484:	ldr	x1, [x19, #16]
   16488:	add	x3, x3, x1
   1648c:	str	x3, [x0], #8
   16490:	cmp	x2, x0
   16494:	b.eq	164c0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1128>  // b.none
   16498:	ldr	x3, [x0]
   1649c:	cmp	x3, #0xfff
   164a0:	b.ls	16484 <__sanitizer_install_malloc_and_free_hooks@@Base+0x10ec>  // b.plast
   164a4:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   164a8:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   164ac:	add	x2, x2, #0x988
   164b0:	add	x0, x0, #0x758
   164b4:	mov	x4, #0x1000                	// #4096
   164b8:	mov	w1, #0x16b                 	// #363
   164bc:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   164c0:	ldr	x3, [sp, #176]
   164c4:	cmp	x25, x3
   164c8:	b.ne	16640 <__sanitizer_install_malloc_and_free_hooks@@Base+0x12a8>  // b.any
   164cc:	ldr	x3, [x22]
   164d0:	cmp	x3, x25
   164d4:	b.ne	16618 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1280>  // b.any
   164d8:	add	x10, x19, #0x10
   164dc:	mov	x0, #0x14                  	// #20
   164e0:	cmp	x26, #0x14
   164e4:	mov	x13, #0xa40                 	// #2624
   164e8:	mov	x11, #0x1146                	// #4422
   164ec:	add	x12, x10, #0x410, lsl #12
   164f0:	add	x9, x23, #0x630
   164f4:	csel	x26, x26, x0, ls  // ls = plast
   164f8:	mov	x8, #0x1                   	// #1
   164fc:	mov	w0, #0x1                   	// #1
   16500:	movk	x13, #0x21, lsl #16
   16504:	movk	x11, #0x4, lsl #16
   16508:	str	w26, [x23, #1576]
   1650c:	strb	w0, [x23, #2224]
   16510:	udiv	x0, x8, x26
   16514:	add	x2, x7, x8, lsl #3
   16518:	ldur	x5, [x2, #-8]
   1651c:	msub	x0, x0, x26, x8
   16520:	cmp	x5, #0xfff
   16524:	b.ls	16418 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1080>  // b.plast
   16528:	and	x4, x5, #0xfffffffffffff000
   1652c:	cmp	x1, x4
   16530:	b.ne	16438 <__sanitizer_install_malloc_and_free_hooks@@Base+0x10a0>  // b.any
   16534:	ldr	x3, [x7, x0, lsl #3]
   16538:	and	x5, x5, #0xfff
   1653c:	cmp	x3, #0xfff
   16540:	b.ls	1641c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1084>  // b.plast
   16544:	and	x4, x3, #0xfffffffffffff000
   16548:	cmp	x1, x4
   1654c:	b.ne	16438 <__sanitizer_install_malloc_and_free_hooks@@Base+0x10a0>  // b.any
   16550:	ldr	x4, [x12, #2608]
   16554:	and	x6, x3, #0xfff
   16558:	cbz	x4, 16634 <__sanitizer_install_malloc_and_free_hooks@@Base+0x129c>
   1655c:	add	x0, x19, x13
   16560:	mov	x2, #0x0                   	// #0
   16564:	b	16578 <__sanitizer_install_malloc_and_free_hooks@@Base+0x11e0>
   16568:	add	x2, x2, #0x1
   1656c:	add	x0, x0, #0x10
   16570:	cmp	x4, x2
   16574:	b.eq	165f8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1260>  // b.none
   16578:	ldrh	w3, [x0]
   1657c:	cmp	x5, x3
   16580:	b.ne	16568 <__sanitizer_install_malloc_and_free_hooks@@Base+0x11d0>  // b.any
   16584:	ldrh	w3, [x0, #2]
   16588:	cmp	x6, x3
   1658c:	b.ne	16568 <__sanitizer_install_malloc_and_free_hooks@@Base+0x11d0>  // b.any
   16590:	add	x0, x19, x2, lsl #4
   16594:	add	x0, x0, #0x210, lsl #12
   16598:	ldrsw	x4, [x0, #2636]
   1659c:	ldr	w2, [x0, #2628]
   165a0:	ldr	w0, [x0, #2632]
   165a4:	add	x5, x5, x11
   165a8:	add	x3, x6, x11
   165ac:	cmp	x26, x8
   165b0:	add	x8, x8, #0x1
   165b4:	ldr	x5, [x10, x5, lsl #3]
   165b8:	ldr	x3, [x10, x3, lsl #3]
   165bc:	str	x4, [x9]
   165c0:	ldr	x4, [x5, #16]
   165c4:	str	x4, [x9, #8]
   165c8:	ldr	x3, [x3, #16]
   165cc:	str	x3, [x9, #16]
   165d0:	stp	w0, w2, [x9, #24]
   165d4:	add	x9, x9, #0x20
   165d8:	b.ne	16510 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1178>  // b.any
   165dc:	ldp	x21, x22, [sp, #16]
   165e0:	ldp	x23, x24, [sp, #32]
   165e4:	ldp	x25, x26, [sp, #48]
   165e8:	ldp	x27, x28, [sp, #64]
   165ec:	ldr	x30, [sp, #80]
   165f0:	ldp	x19, x20, [sp], #336
   165f4:	ret
   165f8:	mov	w0, #0xffffffff            	// #-1
   165fc:	mov	x4, #0x0                   	// #0
   16600:	mov	w2, w0
   16604:	b	165a4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x120c>
   16608:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   1660c:	add	x0, x0, #0x9e0
   16610:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   16614:	b	165dc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1244>
   16618:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   1661c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   16620:	mov	x4, x25
   16624:	add	x2, x2, #0x9c0
   16628:	add	x0, x0, #0x908
   1662c:	mov	w1, #0x80                  	// #128
   16630:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   16634:	mov	w0, #0xffffffff            	// #-1
   16638:	mov	w2, w0
   1663c:	b	165a4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x120c>
   16640:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   16644:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   16648:	mov	x4, x25
   1664c:	add	x2, x2, #0x9a0
   16650:	add	x0, x0, #0x758
   16654:	mov	w1, #0x13f                 	// #319
   16658:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   1665c:	nop
   16660:	stp	x19, x20, [sp, #-64]!
   16664:	mov	x19, x0
   16668:	stp	x21, x22, [sp, #16]
   1666c:	ldr	x21, [x1, #16]
   16670:	ldr	x0, [x21, #8]
   16674:	str	x30, [sp, #40]
   16678:	cbz	x0, 1683c <__sanitizer_install_malloc_and_free_hooks@@Base+0x14a4>
   1667c:	ldr	x0, [x2]
   16680:	mov	x22, x1
   16684:	mov	x20, x2
   16688:	cbz	x0, 1669c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1304>
   1668c:	ldr	x2, [x19, #16]
   16690:	ldr	x1, [x21, #528]
   16694:	cmp	x1, x2
   16698:	b.eq	1685c <__sanitizer_install_malloc_and_free_hooks@@Base+0x14c4>  // b.none
   1669c:	add	x0, x19, #0x8
   166a0:	mov	w2, #0x1                   	// #1
   166a4:	str	x23, [sp, #32]
   166a8:	ldxrb	w1, [x0]
   166ac:	stxrb	w3, w2, [x0]
   166b0:	cbnz	w3, 166a8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1310>
   166b4:	dmb	ish
   166b8:	tst	w1, #0xff
   166bc:	b.eq	166c4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x132c>  // b.none
   166c0:	bl	85d8 <__sanitizer_print_stack_trace@@Base+0x300>
   166c4:	add	x23, x21, #0x8
   166c8:	mov	x1, x21
   166cc:	mov	x0, x19
   166d0:	mov	x2, x20
   166d4:	bl	15850 <__sanitizer_install_malloc_and_free_hooks@@Base+0x4b8>
   166d8:	ldr	x1, [x19, #16]
   166dc:	ldr	x3, [x23, #520]
   166e0:	ldr	x0, [x20]
   166e4:	cmp	x1, x3
   166e8:	b.ne	169e4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x164c>  // b.any
   166ec:	cmp	x0, #0xfff
   166f0:	b.ls	16a00 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1668>  // b.plast
   166f4:	and	x4, x0, #0xfffffffffffff000
   166f8:	cmp	x1, x4
   166fc:	b.ne	16a20 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1688>  // b.any
   16700:	ldr	x2, [x21, #8]
   16704:	ubfx	x1, x0, #6, #6
   16708:	mov	x3, #0x1                   	// #1
   1670c:	add	x8, x1, x3
   16710:	lsl	x5, x3, x1
   16714:	and	x1, x0, #0xfff
   16718:	tst	x5, x2
   1671c:	lsl	x3, x3, x0
   16720:	b.ne	1684c <__sanitizer_install_malloc_and_free_hooks@@Base+0x14b4>  // b.any
   16724:	add	x6, x19, #0x208, lsl #12
   16728:	add	x4, x1, x1, lsl #6
   1672c:	add	x10, x19, #0x630
   16730:	str	xzr, [x6, #1584]
   16734:	ldr	x1, [x10, x4, lsl #3]
   16738:	cbz	x1, 168e8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1550>
   1673c:	add	x9, x19, #0x208, lsl #12
   16740:	mov	x2, #0x0                   	// #0
   16744:	add	x9, x9, #0x630
   16748:	mov	x11, #0x1                   	// #1
   1674c:	rbit	x0, x1
   16750:	clz	x0, x0
   16754:	lsl	x0, x11, x0
   16758:	orr	x7, x0, x2
   1675c:	cmp	x7, x2
   16760:	rbit	x2, x1
   16764:	str	x7, [x6, #1584]
   16768:	clz	x2, x2
   1676c:	bic	x1, x1, x0
   16770:	add	x0, x2, #0x1
   16774:	add	x2, x2, x4
   16778:	b.eq	168d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1538>  // b.none
   1677c:	add	x2, x2, #0x1
   16780:	str	xzr, [x9, x0, lsl #3]
   16784:	ldr	x2, [x10, x2, lsl #3]
   16788:	str	x2, [x9, x0, lsl #3]
   1678c:	cbz	x1, 168e8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1550>
   16790:	ldr	x2, [x6, #1584]
   16794:	b	1674c <__sanitizer_install_malloc_and_free_hooks@@Base+0x13b4>
   16798:	ldr	x0, [x21, #8]
   1679c:	mov	x4, #0x1                   	// #1
   167a0:	ldr	x3, [x6, #2104]
   167a4:	ands	x0, x3, x0
   167a8:	b.eq	16830 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1498>  // b.none
   167ac:	rbit	x1, x0
   167b0:	clz	x1, x1
   167b4:	mov	x2, x1
   167b8:	lsl	x1, x4, x1
   167bc:	tst	x1, x3
   167c0:	bic	x0, x0, x1
   167c4:	b.eq	16a3c <__sanitizer_install_malloc_and_free_hooks@@Base+0x16a4>  // b.none
   167c8:	add	x1, x2, #0x1
   167cc:	ldr	x2, [x23, x1, lsl #3]
   167d0:	ldr	x1, [x7, x1, lsl #3]
   167d4:	tst	x2, x1
   167d8:	b.eq	16a3c <__sanitizer_install_malloc_and_free_hooks@@Base+0x16a4>  // b.none
   167dc:	ldr	x1, [x22]
   167e0:	adrp	x0, 16000 <__sanitizer_install_malloc_and_free_hooks@@Base+0xc68>
   167e4:	add	x0, x0, #0xab8
   167e8:	mov	w3, #0x0                   	// #0
   167ec:	ldr	x2, [x20]
   167f0:	ldr	x4, [x1]
   167f4:	cmp	x4, x0
   167f8:	b.ne	16a7c <__sanitizer_install_malloc_and_free_hooks@@Base+0x16e4>  // b.any
   167fc:	ldr	x1, [x1, #8]
   16800:	adrp	x0, 16000 <__sanitizer_install_malloc_and_free_hooks@@Base+0xc68>
   16804:	add	x0, x0, #0xac0
   16808:	mov	w4, #0x0                   	// #0
   1680c:	cmp	x1, x0
   16810:	b.ne	16a5c <__sanitizer_install_malloc_and_free_hooks@@Base+0x16c4>  // b.any
   16814:	mov	x1, x23
   16818:	add	x0, x19, #0x10
   1681c:	bl	16d00 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1968>
   16820:	mov	x2, x20
   16824:	mov	x1, x22
   16828:	mov	x0, x19
   1682c:	bl	16198 <__sanitizer_install_malloc_and_free_hooks@@Base+0xe00>
   16830:	dmb	ish
   16834:	strb	wzr, [x19, #8]
   16838:	ldr	x23, [sp, #32]
   1683c:	ldp	x21, x22, [sp, #16]
   16840:	ldr	x30, [sp, #40]
   16844:	ldp	x19, x20, [sp], #64
   16848:	ret
   1684c:	ldr	x0, [x23, x8, lsl #3]
   16850:	tst	x3, x0
   16854:	b.eq	16724 <__sanitizer_install_malloc_and_free_hooks@@Base+0x138c>  // b.none
   16858:	b	16830 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1498>
   1685c:	and	x2, x0, #0xfffffffffffff000
   16860:	cmp	x1, x2
   16864:	b.ne	1669c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1304>  // b.any
   16868:	ldr	x6, [x21, #1568]
   1686c:	cbz	x6, 1683c <__sanitizer_install_malloc_and_free_hooks@@Base+0x14a4>
   16870:	ubfx	x3, x0, #6, #6
   16874:	mov	x1, #0x1                   	// #1
   16878:	add	x5, x19, #0x630
   1687c:	add	x8, x21, #0x420
   16880:	add	x10, x3, x1
   16884:	lsl	x0, x1, x0
   16888:	lsl	x3, x1, x3
   1688c:	mov	w7, #0x208                 	// #520
   16890:	mov	x1, #0x0                   	// #0
   16894:	mov	w9, #0x41                  	// #65
   16898:	lsl	x2, x1, #3
   1689c:	ldr	w2, [x8, x2]
   168a0:	umull	x4, w2, w7
   168a4:	ldr	x4, [x5, x4]
   168a8:	tst	x3, x4
   168ac:	b.eq	1669c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1304>  // b.none
   168b0:	umaddl	x2, w2, w9, x10
   168b4:	ldr	x2, [x5, x2, lsl #3]
   168b8:	tst	x0, x2
   168bc:	b.eq	1669c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1304>  // b.none
   168c0:	add	x1, x1, #0x1
   168c4:	cmp	x6, x1
   168c8:	b.ne	16898 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1500>  // b.any
   168cc:	b	1683c <__sanitizer_install_malloc_and_free_hooks@@Base+0x14a4>
   168d0:	add	x2, x2, #0x1
   168d4:	ldr	x7, [x9, x0, lsl #3]
   168d8:	ldr	x2, [x10, x2, lsl #3]
   168dc:	orr	x2, x7, x2
   168e0:	str	x2, [x9, x0, lsl #3]
   168e4:	cbnz	x1, 16790 <__sanitizer_install_malloc_and_free_hooks@@Base+0x13f8>
   168e8:	add	x7, x19, #0x208, lsl #12
   168ec:	add	x9, x19, #0x208, lsl #12
   168f0:	add	x7, x7, #0x838
   168f4:	add	x9, x9, #0x630
   168f8:	str	x5, [x6, #2104]
   168fc:	mov	w12, #0x40                  	// #64
   16900:	mov	x13, #0x208                 	// #520
   16904:	mov	x5, #0x1                   	// #1
   16908:	str	x3, [x7, x8, lsl #3]
   1690c:	ldr	x0, [x6, #1584]
   16910:	cbz	x0, 16798 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1400>
   16914:	rbit	x1, x0
   16918:	clz	x1, x1
   1691c:	add	x3, x1, #0x1
   16920:	lsl	x4, x5, x1
   16924:	bic	x0, x0, x4
   16928:	str	x0, [x6, #1584]
   1692c:	ldr	x2, [x9, x3, lsl #3]
   16930:	cbz	x2, 16a98 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1700>
   16934:	rbit	x11, x2
   16938:	clz	x11, x11
   1693c:	lsl	x8, x5, x11
   16940:	bic	x2, x2, x8
   16944:	str	x2, [x9, x3, lsl #3]
   16948:	cbz	x2, 16954 <__sanitizer_install_malloc_and_free_hooks@@Base+0x15bc>
   1694c:	orr	x0, x4, x0
   16950:	str	x0, [x6, #1584]
   16954:	sxtw	x11, w11
   16958:	ldr	x3, [x6, #2104]
   1695c:	smaddl	x1, w1, w12, x11
   16960:	lsr	x0, x1, #6
   16964:	lsl	x2, x5, x1
   16968:	add	x4, x0, #0x1
   1696c:	lsl	x0, x5, x0
   16970:	tst	x3, x0
   16974:	b.ne	16a44 <__sanitizer_install_malloc_and_free_hooks@@Base+0x16ac>  // b.any
   16978:	orr	x0, x3, x0
   1697c:	str	x0, [x6, #2104]
   16980:	str	x2, [x7, x4, lsl #3]
   16984:	mul	x0, x1, x13
   16988:	add	x1, x1, x1, lsl #6
   1698c:	ldr	x2, [x10, x0]
   16990:	ldr	x11, [x6, #1584]
   16994:	cbz	x2, 1690c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1574>
   16998:	rbit	x4, x2
   1699c:	clz	x4, x4
   169a0:	mov	x0, x4
   169a4:	add	x3, x0, #0x1
   169a8:	lsl	x4, x5, x4
   169ac:	orr	x8, x4, x11
   169b0:	str	x8, [x6, #1584]
   169b4:	cmp	x11, x8
   169b8:	bic	x2, x2, x4
   169bc:	lsl	x3, x3, #3
   169c0:	b.eq	169c8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1630>  // b.none
   169c4:	str	xzr, [x9, x3]
   169c8:	add	x0, x0, x1
   169cc:	add	x0, x0, #0x1
   169d0:	ldr	x4, [x9, x3]
   169d4:	ldr	x0, [x10, x0, lsl #3]
   169d8:	orr	x0, x4, x0
   169dc:	str	x0, [x9, x3]
   169e0:	b	16990 <__sanitizer_install_malloc_and_free_hooks@@Base+0x15f8>
   169e4:	mov	x4, x1
   169e8:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   169ec:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   169f0:	add	x2, x2, #0xa38
   169f4:	add	x0, x0, #0x758
   169f8:	mov	w1, #0x6b                  	// #107
   169fc:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   16a00:	mov	x3, x0
   16a04:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   16a08:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   16a0c:	add	x2, x2, #0x740
   16a10:	add	x0, x0, #0x758
   16a14:	mov	x4, #0x1000                	// #4096
   16a18:	mov	w1, #0x16e                 	// #366
   16a1c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   16a20:	mov	x3, x1
   16a24:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   16a28:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   16a2c:	add	x2, x2, #0xa08
   16a30:	add	x0, x0, #0x758
   16a34:	mov	w1, #0x16f                 	// #367
   16a38:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   16a3c:	cbnz	x0, 167ac <__sanitizer_install_malloc_and_free_hooks@@Base+0x1414>
   16a40:	b	16830 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1498>
   16a44:	ldr	x0, [x7, x4, lsl #3]
   16a48:	orr	x2, x0, x2
   16a4c:	str	x2, [x7, x4, lsl #3]
   16a50:	cmp	x0, x2
   16a54:	b.eq	1690c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1574>  // b.none
   16a58:	b	16984 <__sanitizer_install_malloc_and_free_hooks@@Base+0x15ec>
   16a5c:	str	x2, [sp, #48]
   16a60:	mov	x0, x22
   16a64:	str	w3, [sp, #60]
   16a68:	blr	x1
   16a6c:	mov	w4, w0
   16a70:	ldr	w3, [sp, #60]
   16a74:	ldr	x2, [sp, #48]
   16a78:	b	16814 <__sanitizer_install_malloc_and_free_hooks@@Base+0x147c>
   16a7c:	str	x2, [sp, #48]
   16a80:	mov	x0, x22
   16a84:	blr	x4
   16a88:	mov	w3, w0
   16a8c:	ldr	x1, [x22]
   16a90:	ldr	x2, [sp, #48]
   16a94:	b	167fc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1464>
   16a98:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   16a9c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   16aa0:	add	x2, x2, #0x390
   16aa4:	add	x0, x0, #0x6d0
   16aa8:	mov	x4, #0x0                   	// #0
   16aac:	mov	x3, #0x0                   	// #0
   16ab0:	mov	w1, #0x31                  	// #49
   16ab4:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   16ab8:	mov	w0, #0x0                   	// #0
   16abc:	ret
   16ac0:	mov	w0, #0x0                   	// #0
   16ac4:	ret
   16ac8:	stp	x19, x20, [sp, #-112]!
   16acc:	add	x1, x1, x1, lsl #6
   16ad0:	mov	x19, #0x0                   	// #0
   16ad4:	stp	x21, x22, [sp, #16]
   16ad8:	mov	x22, x0
   16adc:	add	x21, x1, #0x1
   16ae0:	stp	x23, x24, [sp, #32]
   16ae4:	sub	x23, x4, #0x1
   16ae8:	mov	x20, #0x0                   	// #0
   16aec:	stp	x25, x26, [sp, #48]
   16af0:	mov	x26, x3
   16af4:	add	x3, x3, #0x8
   16af8:	stp	x27, x28, [sp, #64]
   16afc:	add	x27, x0, x1, lsl #3
   16b00:	mov	x25, #0x0                   	// #0
   16b04:	mov	x28, #0x0                   	// #0
   16b08:	mov	x24, #0x1                   	// #1
   16b0c:	str	x30, [sp, #80]
   16b10:	cbnz	x23, 16b54 <__sanitizer_install_malloc_and_free_hooks@@Base+0x17bc>
   16b14:	mov	x1, #0x1                   	// #1
   16b18:	cbnz	x20, 16bf8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1860>
   16b1c:	cbnz	x28, 16c9c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1904>
   16b20:	ldr	x20, [x27]
   16b24:	cbz	x20, 16c9c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1904>
   16b28:	cbz	x19, 16c14 <__sanitizer_install_malloc_and_free_hooks@@Base+0x187c>
   16b2c:	mov	x20, #0x0                   	// #0
   16b30:	rbit	x0, x19
   16b34:	clz	x0, x0
   16b38:	lsl	x0, x1, x0
   16b3c:	bic	x19, x19, x0
   16b40:	orr	x0, x19, x20
   16b44:	cbnz	x0, 16b18 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1780>
   16b48:	add	x28, x28, #0x1
   16b4c:	mov	x19, #0x0                   	// #0
   16b50:	b	16b1c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1784>
   16b54:	cbnz	x20, 16c58 <__sanitizer_install_malloc_and_free_hooks@@Base+0x18c0>
   16b58:	cbnz	x28, 16c9c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1904>
   16b5c:	ldr	x20, [x27]
   16b60:	cbz	x20, 16c9c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1904>
   16b64:	cbz	x19, 16c74 <__sanitizer_install_malloc_and_free_hooks@@Base+0x18dc>
   16b68:	mov	x1, x25
   16b6c:	mov	x20, #0x0                   	// #0
   16b70:	rbit	x0, x19
   16b74:	clz	x0, x0
   16b78:	lsl	x4, x24, x0
   16b7c:	bic	x19, x19, x4
   16b80:	orr	x4, x19, x20
   16b84:	cbnz	x4, 16b94 <__sanitizer_install_malloc_and_free_hooks@@Base+0x17fc>
   16b88:	add	x28, x28, #0x1
   16b8c:	mov	x20, #0x0                   	// #0
   16b90:	mov	x19, #0x0                   	// #0
   16b94:	sxtw	x0, w0
   16b98:	add	x1, x0, x1, lsl #6
   16b9c:	str	x1, [x26, #8]
   16ba0:	cmp	x1, #0x1, lsl #12
   16ba4:	b.hi	16cdc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1944>  // b.pmore
   16ba8:	lsr	x0, x1, #12
   16bac:	ubfx	x4, x1, #6, #6
   16bb0:	lsl	x6, x24, x4
   16bb4:	ldr	x5, [x2, x0, lsl #3]
   16bb8:	tst	x6, x5
   16bbc:	b.eq	16c38 <__sanitizer_install_malloc_and_free_hooks@@Base+0x18a0>  // b.none
   16bc0:	add	x0, x4, x0, lsl #6
   16bc4:	lsl	x4, x24, x1
   16bc8:	add	x0, x0, #0x1
   16bcc:	ldr	x5, [x2, x0, lsl #3]
   16bd0:	tst	x4, x5
   16bd4:	b.eq	16c38 <__sanitizer_install_malloc_and_free_hooks@@Base+0x18a0>  // b.none
   16bd8:	mov	x0, #0x2                   	// #2
   16bdc:	ldp	x21, x22, [sp, #16]
   16be0:	ldp	x23, x24, [sp, #32]
   16be4:	ldp	x25, x26, [sp, #48]
   16be8:	ldp	x27, x28, [sp, #64]
   16bec:	ldr	x30, [sp, #80]
   16bf0:	ldp	x19, x20, [sp], #112
   16bf4:	ret
   16bf8:	cbz	x19, 16c14 <__sanitizer_install_malloc_and_free_hooks@@Base+0x187c>
   16bfc:	rbit	x0, x19
   16c00:	clz	x0, x0
   16c04:	lsl	x0, x1, x0
   16c08:	bic	x19, x19, x0
   16c0c:	cbz	x20, 16b1c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1784>
   16c10:	b	16bf8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1860>
   16c14:	rbit	x2, x20
   16c18:	add	x0, x21, x28, lsl #6
   16c1c:	clz	x2, x2
   16c20:	add	x0, x0, x2
   16c24:	ldr	x19, [x22, x0, lsl #3]
   16c28:	cbz	x19, 16cbc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1924>
   16c2c:	lsl	x2, x1, x2
   16c30:	bic	x20, x20, x2
   16c34:	b	16b30 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1798>
   16c38:	mov	x4, x23
   16c3c:	mov	x0, x22
   16c40:	stp	x2, x3, [sp, #96]
   16c44:	bl	16ac8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1730>
   16c48:	ldp	x2, x3, [sp, #96]
   16c4c:	cbz	x0, 16b10 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1778>
   16c50:	add	x0, x0, #0x1
   16c54:	b	16ca0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1908>
   16c58:	cbz	x19, 16c74 <__sanitizer_install_malloc_and_free_hooks@@Base+0x18dc>
   16c5c:	rbit	x0, x19
   16c60:	add	x1, x25, x28, lsl #6
   16c64:	clz	x0, x0
   16c68:	lsl	x4, x24, x0
   16c6c:	bic	x19, x19, x4
   16c70:	b	16b94 <__sanitizer_install_malloc_and_free_hooks@@Base+0x17fc>
   16c74:	rbit	x25, x20
   16c78:	clz	x25, x25
   16c7c:	add	x1, x25, x28, lsl #6
   16c80:	mov	x0, x25
   16c84:	add	x4, x1, x21
   16c88:	ldr	x19, [x22, x4, lsl #3]
   16c8c:	cbz	x19, 16cbc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1924>
   16c90:	lsl	x0, x24, x0
   16c94:	bic	x20, x20, x0
   16c98:	b	16b70 <__sanitizer_install_malloc_and_free_hooks@@Base+0x17d8>
   16c9c:	mov	x0, #0x0                   	// #0
   16ca0:	ldp	x21, x22, [sp, #16]
   16ca4:	ldp	x23, x24, [sp, #32]
   16ca8:	ldp	x25, x26, [sp, #48]
   16cac:	ldp	x27, x28, [sp, #64]
   16cb0:	ldr	x30, [sp, #80]
   16cb4:	ldp	x19, x20, [sp], #112
   16cb8:	ret
   16cbc:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   16cc0:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   16cc4:	add	x2, x2, #0x6b0
   16cc8:	add	x0, x0, #0x6d0
   16ccc:	mov	x4, #0x0                   	// #0
   16cd0:	mov	x3, #0x0                   	// #0
   16cd4:	mov	w1, #0x133                 	// #307
   16cd8:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   16cdc:	mov	x3, x1
   16ce0:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   16ce4:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   16ce8:	add	x2, x2, #0x728
   16cec:	add	x0, x0, #0x6d0
   16cf0:	mov	x4, #0x1000                	// #4096
   16cf4:	mov	w1, #0x144                 	// #324
   16cf8:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   16cfc:	nop
   16d00:	stp	x19, x20, [sp, #-352]!
   16d04:	mov	x8, x0
   16d08:	ldr	x0, [x0]
   16d0c:	ldr	x5, [x1, #520]
   16d10:	str	x30, [sp, #16]
   16d14:	cmp	x0, x5
   16d18:	b.eq	16d2c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1994>  // b.none
   16d1c:	str	xzr, [x1]
   16d20:	str	x0, [x1, #520]
   16d24:	str	xzr, [x1, #1040]
   16d28:	str	xzr, [x1, #1560]
   16d2c:	cmp	x2, #0xfff
   16d30:	b.ls	16f24 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1b8c>  // b.plast
   16d34:	ldr	x5, [x8]
   16d38:	and	x6, x2, #0xfffffffffffff000
   16d3c:	cmp	x5, x6
   16d40:	b.ne	16f44 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1bac>  // b.any
   16d44:	cmp	x5, x0
   16d48:	b.ne	16f64 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1bcc>  // b.any
   16d4c:	add	x12, x8, #0x208, lsl #12
   16d50:	str	xzr, [x12, #1568]
   16d54:	ldr	x5, [x1]
   16d58:	cbz	x5, 16dc0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1a28>
   16d5c:	add	x10, x8, #0x208, lsl #12
   16d60:	mov	x6, #0x0                   	// #0
   16d64:	add	x10, x10, #0x620
   16d68:	mov	x11, #0x1                   	// #1
   16d6c:	rbit	x0, x5
   16d70:	clz	x0, x0
   16d74:	lsl	x9, x11, x0
   16d78:	orr	x7, x9, x6
   16d7c:	str	x7, [x12, #1568]
   16d80:	bic	x5, x5, x9
   16d84:	cmp	x7, x6
   16d88:	add	x0, x0, #0x1
   16d8c:	b.eq	16da8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1a10>  // b.none
   16d90:	str	xzr, [x10, x0, lsl #3]
   16d94:	ldr	x6, [x1, x0, lsl #3]
   16d98:	str	x6, [x10, x0, lsl #3]
   16d9c:	cbz	x5, 16dbc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1a24>
   16da0:	ldr	x6, [x12, #1568]
   16da4:	b	16d6c <__sanitizer_install_malloc_and_free_hooks@@Base+0x19d4>
   16da8:	ldr	x6, [x10, x0, lsl #3]
   16dac:	ldr	x7, [x1, x0, lsl #3]
   16db0:	orr	x6, x6, x7
   16db4:	str	x6, [x10, x0, lsl #3]
   16db8:	cbnz	x5, 16da0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1a08>
   16dbc:	ldr	x5, [x12, #1568]
   16dc0:	ubfx	x0, x2, #6, #6
   16dc4:	mov	x6, #0x1                   	// #1
   16dc8:	add	x10, x8, #0x208, lsl #12
   16dcc:	add	x19, x0, x6
   16dd0:	lsl	x16, x6, x0
   16dd4:	mov	x11, x6
   16dd8:	and	x14, x2, #0xfff
   16ddc:	add	x10, x10, #0x620
   16de0:	add	x17, x8, #0x620
   16de4:	add	x30, sp, #0x20
   16de8:	mov	x0, #0x0                   	// #0
   16dec:	lsl	x13, x6, x2
   16df0:	mov	w20, #0x40                  	// #64
   16df4:	cbz	x5, 16e68 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ad0>
   16df8:	rbit	x2, x5
   16dfc:	clz	x2, x2
   16e00:	add	x9, x2, #0x1
   16e04:	lsl	x7, x11, x2
   16e08:	bic	x5, x5, x7
   16e0c:	str	x5, [x12, #1568]
   16e10:	ldr	x6, [x10, x9, lsl #3]
   16e14:	cbz	x6, 16fc0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1c28>
   16e18:	rbit	x18, x6
   16e1c:	clz	x18, x18
   16e20:	lsl	x15, x11, x18
   16e24:	bic	x6, x6, x15
   16e28:	str	x6, [x10, x9, lsl #3]
   16e2c:	cbnz	x6, 16f8c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1bf4>
   16e30:	sxtw	x18, w18
   16e34:	smaddl	x2, w2, w20, x18
   16e38:	add	x7, x2, x2, lsl #6
   16e3c:	add	x6, x19, x7
   16e40:	ldr	x5, [x17, x7, lsl #3]
   16e44:	tst	x5, x16
   16e48:	b.ne	16f98 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1c00>  // b.any
   16e4c:	orr	x5, x5, x16
   16e50:	str	x5, [x17, x7, lsl #3]
   16e54:	str	x13, [x17, x6, lsl #3]
   16e58:	cmp	x0, #0x27
   16e5c:	b.ls	16fb0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1c18>  // b.plast
   16e60:	ldr	x5, [x12, #1568]
   16e64:	cbnz	x5, 16df8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1a60>
   16e68:	cbz	x0, 16f18 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1b80>
   16e6c:	add	x15, x8, #0x410, lsl #12
   16e70:	mov	x16, #0x10a3                	// #4259
   16e74:	and	w14, w14, #0xffff
   16e78:	add	x17, sp, #0x20
   16e7c:	add	x11, x1, #0x418
   16e80:	mov	x5, #0x1                   	// #1
   16e84:	mov	x12, #0x1ffff               	// #131071
   16e88:	movk	x16, #0x2, lsl #16
   16e8c:	ldr	x10, [x15, #2608]
   16e90:	b	16ea0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1b08>
   16e94:	cmp	x0, x5
   16e98:	add	x5, x5, #0x1
   16e9c:	b.eq	16f18 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1b80>  // b.none
   16ea0:	cmp	x10, x12
   16ea4:	b.hi	16e94 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1afc>  // b.pmore
   16ea8:	add	x2, x17, x5, lsl #3
   16eac:	ldr	x9, [x1, #1560]
   16eb0:	ldur	x7, [x2, #-8]
   16eb4:	and	w13, w7, #0xffff
   16eb8:	cbz	x9, 16f84 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1bec>
   16ebc:	mov	x2, #0x0                   	// #0
   16ec0:	b	16ed0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1b38>
   16ec4:	add	x2, x2, #0x1
   16ec8:	cmp	x2, x9
   16ecc:	b.eq	16f84 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1bec>  // b.none
   16ed0:	lsl	x6, x2, #3
   16ed4:	ldr	w6, [x11, x6]
   16ed8:	cmp	w6, w7
   16edc:	b.ne	16ec4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1b2c>  // b.any
   16ee0:	add	x2, x1, x2, lsl #3
   16ee4:	ldr	w7, [x2, #1052]
   16ee8:	add	x6, x10, x16
   16eec:	add	x10, x10, #0x1
   16ef0:	str	x10, [x15, #2608]
   16ef4:	cmp	x0, x5
   16ef8:	lsl	x6, x6, #4
   16efc:	add	x5, x5, #0x1
   16f00:	add	x2, x8, x6
   16f04:	strh	w13, [x8, x6]
   16f08:	strh	w14, [x2, #2]
   16f0c:	stp	w7, w3, [x2, #4]
   16f10:	str	w4, [x2, #12]
   16f14:	b.ne	16ea0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1b08>  // b.any
   16f18:	ldr	x30, [sp, #16]
   16f1c:	ldp	x19, x20, [sp], #352
   16f20:	ret
   16f24:	mov	x3, x2
   16f28:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   16f2c:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   16f30:	add	x0, x0, #0x758
   16f34:	add	x2, x2, #0x740
   16f38:	mov	x4, #0x1000                	// #4096
   16f3c:	mov	w1, #0x16e                 	// #366
   16f40:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   16f44:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   16f48:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   16f4c:	mov	x4, x6
   16f50:	mov	x3, x5
   16f54:	add	x2, x2, #0xa08
   16f58:	add	x0, x0, #0x758
   16f5c:	mov	w1, #0x16f                 	// #367
   16f60:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   16f64:	mov	x3, x0
   16f68:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   16f6c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   16f70:	mov	x4, x5
   16f74:	add	x2, x2, #0xa38
   16f78:	add	x0, x0, #0x758
   16f7c:	mov	w1, #0x6b                  	// #107
   16f80:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   16f84:	mov	w7, #0x0                   	// #0
   16f88:	b	16ee8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1b50>
   16f8c:	orr	x7, x7, x5
   16f90:	str	x7, [x12, #1568]
   16f94:	b	16e30 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1a98>
   16f98:	ldr	x7, [x17, x6, lsl #3]
   16f9c:	cmp	x0, #0x27
   16fa0:	orr	x5, x7, x13
   16fa4:	str	x5, [x17, x6, lsl #3]
   16fa8:	ccmp	x7, x5, #0x4, ls  // ls = plast
   16fac:	b.eq	16e60 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ac8>  // b.none
   16fb0:	str	x2, [x30, x0, lsl #3]
   16fb4:	add	x0, x0, #0x1
   16fb8:	ldr	x5, [x12, #1568]
   16fbc:	b	16e64 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1acc>
   16fc0:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   16fc4:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   16fc8:	add	x2, x2, #0x390
   16fcc:	add	x0, x0, #0x6d0
   16fd0:	mov	x4, #0x0                   	// #0
   16fd4:	mov	x3, #0x0                   	// #0
   16fd8:	mov	w1, #0x31                  	// #49
   16fdc:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   16fe0:	stp	x19, x20, [sp, #-112]!
   16fe4:	stp	x23, x24, [sp, #32]
   16fe8:	mov	x24, x0
   16fec:	mov	x0, x4
   16ff0:	str	x30, [sp, #80]
   16ff4:	cbnz	x4, 17008 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1c70>
   16ff8:	ldp	x23, x24, [sp, #32]
   16ffc:	ldr	x30, [sp, #80]
   17000:	ldp	x19, x20, [sp], #112
   17004:	ret
   17008:	str	x1, [x3]
   1700c:	mov	x23, x3
   17010:	cmp	x1, #0x1, lsl #12
   17014:	b.hi	17214 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e7c>  // b.pmore
   17018:	lsr	x3, x1, #12
   1701c:	ubfx	x5, x1, #6, #6
   17020:	mov	x4, #0x1                   	// #1
   17024:	lsl	x7, x4, x5
   17028:	ldr	x6, [x2, x3, lsl #3]
   1702c:	tst	x7, x6
   17030:	b.eq	17054 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1cbc>  // b.none
   17034:	add	x3, x5, x3, lsl #6
   17038:	lsl	x5, x4, x1
   1703c:	add	x3, x3, x4
   17040:	ldr	x6, [x2, x3, lsl #3]
   17044:	tst	x5, x6
   17048:	b.eq	17054 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1cbc>  // b.none
   1704c:	mov	x0, x4
   17050:	b	16ff8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1c60>
   17054:	add	x1, x1, x1, lsl #6
   17058:	sub	x20, x0, #0x1
   1705c:	add	x3, x23, #0x8
   17060:	stp	x27, x28, [sp, #64]
   17064:	add	x19, x24, x1, lsl #3
   17068:	add	x28, x1, #0x1
   1706c:	mov	x27, #0x0                   	// #0
   17070:	stp	x21, x22, [sp, #16]
   17074:	mov	x21, #0x0                   	// #0
   17078:	mov	x22, #0x0                   	// #0
   1707c:	stp	x25, x26, [sp, #48]
   17080:	mov	x25, #0x0                   	// #0
   17084:	mov	x26, #0x1                   	// #1
   17088:	cbnz	x20, 170cc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d34>
   1708c:	mov	x1, #0x1                   	// #1
   17090:	cbnz	x22, 17110 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d78>
   17094:	cbnz	x25, 17260 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ec8>
   17098:	ldr	x22, [x19]
   1709c:	cbz	x22, 17260 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ec8>
   170a0:	cbz	x21, 1719c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e04>
   170a4:	mov	x22, #0x0                   	// #0
   170a8:	rbit	x0, x21
   170ac:	clz	x0, x0
   170b0:	lsl	x0, x1, x0
   170b4:	bic	x21, x21, x0
   170b8:	orr	x0, x22, x21
   170bc:	cbnz	x0, 17090 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1cf8>
   170c0:	add	x25, x25, #0x1
   170c4:	mov	x21, #0x0                   	// #0
   170c8:	b	17094 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1cfc>
   170cc:	cbnz	x22, 1712c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d94>
   170d0:	cbnz	x25, 17260 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ec8>
   170d4:	ldr	x22, [x19]
   170d8:	cbz	x22, 17260 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ec8>
   170dc:	cbz	x21, 171ec <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e54>
   170e0:	mov	x1, x27
   170e4:	mov	x22, #0x0                   	// #0
   170e8:	rbit	x0, x21
   170ec:	clz	x0, x0
   170f0:	lsl	x4, x26, x0
   170f4:	bic	x21, x21, x4
   170f8:	orr	x4, x21, x22
   170fc:	cbnz	x4, 17144 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1dac>
   17100:	add	x25, x25, #0x1
   17104:	mov	x22, #0x0                   	// #0
   17108:	mov	x21, #0x0                   	// #0
   1710c:	b	17144 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1dac>
   17110:	cbz	x21, 1719c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e04>
   17114:	rbit	x0, x21
   17118:	clz	x0, x0
   1711c:	lsl	x0, x1, x0
   17120:	bic	x21, x21, x0
   17124:	cbz	x22, 17094 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1cfc>
   17128:	b	17110 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d78>
   1712c:	cbz	x21, 171ec <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e54>
   17130:	rbit	x0, x21
   17134:	add	x1, x27, x25, lsl #6
   17138:	clz	x0, x0
   1713c:	lsl	x4, x26, x0
   17140:	bic	x21, x21, x4
   17144:	sxtw	x0, w0
   17148:	add	x1, x0, x1, lsl #6
   1714c:	str	x1, [x23, #8]
   17150:	cmp	x1, #0x1, lsl #12
   17154:	b.hi	17220 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e88>  // b.pmore
   17158:	lsr	x0, x1, #12
   1715c:	ubfx	x4, x1, #6, #6
   17160:	lsl	x6, x26, x4
   17164:	ldr	x5, [x2, x0, lsl #3]
   17168:	tst	x6, x5
   1716c:	b.eq	171c0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e28>  // b.none
   17170:	add	x0, x4, x0, lsl #6
   17174:	lsl	x4, x26, x1
   17178:	add	x0, x0, #0x1
   1717c:	ldr	x5, [x2, x0, lsl #3]
   17180:	tst	x4, x5
   17184:	b.eq	171c0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e28>  // b.none
   17188:	mov	x0, #0x2                   	// #2
   1718c:	ldp	x21, x22, [sp, #16]
   17190:	ldp	x25, x26, [sp, #48]
   17194:	ldp	x27, x28, [sp, #64]
   17198:	b	16ff8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1c60>
   1719c:	rbit	x2, x22
   171a0:	add	x0, x28, x25, lsl #6
   171a4:	clz	x2, x2
   171a8:	add	x0, x0, x2
   171ac:	ldr	x21, [x24, x0, lsl #3]
   171b0:	cbz	x21, 17240 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ea8>
   171b4:	lsl	x2, x1, x2
   171b8:	bic	x22, x22, x2
   171bc:	b	170a8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d10>
   171c0:	mov	x4, x20
   171c4:	mov	x0, x24
   171c8:	stp	x2, x3, [sp, #96]
   171cc:	bl	16ac8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1730>
   171d0:	ldp	x2, x3, [sp, #96]
   171d4:	cbz	x0, 17088 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1cf0>
   171d8:	add	x0, x0, #0x1
   171dc:	ldp	x21, x22, [sp, #16]
   171e0:	ldp	x25, x26, [sp, #48]
   171e4:	ldp	x27, x28, [sp, #64]
   171e8:	b	16ff8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1c60>
   171ec:	rbit	x27, x22
   171f0:	clz	x27, x27
   171f4:	add	x1, x27, x25, lsl #6
   171f8:	mov	x0, x27
   171fc:	add	x4, x1, x28
   17200:	ldr	x21, [x24, x4, lsl #3]
   17204:	cbz	x21, 17240 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ea8>
   17208:	lsl	x0, x26, x0
   1720c:	bic	x22, x22, x0
   17210:	b	170e8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d50>
   17214:	stp	x21, x22, [sp, #16]
   17218:	stp	x25, x26, [sp, #48]
   1721c:	stp	x27, x28, [sp, #64]
   17220:	mov	x3, x1
   17224:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   17228:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   1722c:	add	x2, x2, #0x728
   17230:	add	x0, x0, #0x6d0
   17234:	mov	x4, #0x1000                	// #4096
   17238:	mov	w1, #0x144                 	// #324
   1723c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   17240:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   17244:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   17248:	add	x2, x2, #0x6b0
   1724c:	add	x0, x0, #0x6d0
   17250:	mov	x4, #0x0                   	// #0
   17254:	mov	x3, #0x0                   	// #0
   17258:	mov	w1, #0x133                 	// #307
   1725c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   17260:	mov	x0, #0x0                   	// #0
   17264:	ldp	x21, x22, [sp, #16]
   17268:	ldp	x25, x26, [sp, #48]
   1726c:	ldp	x27, x28, [sp, #64]
   17270:	b	16ff8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1c60>
   17274:	nop
   17278:	mov	x2, x1
   1727c:	mov	x4, #0x0                   	// #0
   17280:	mov	x1, x0
   17284:	mov	x3, #0x0                   	// #0
   17288:	mov	w0, #0x2                   	// #2
   1728c:	b	1dd28 <__sanitizer_set_report_fd@@Base+0x5ea8>
   17290:	stp	x19, x30, [sp, #-16]!
   17294:	mov	x19, x0
   17298:	bl	1a690 <__sanitizer_set_report_fd@@Base+0x2810>
   1729c:	mov	x2, x0
   172a0:	mov	x1, x19
   172a4:	adrp	x0, 5a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x26398>
   172a8:	ldp	x19, x30, [sp], #16
   172ac:	add	x0, x0, #0x288
   172b0:	b	1e170 <__sanitizer_set_report_fd@@Base+0x62f0>
   172b4:	nop
   172b8:	stp	x19, x20, [sp, #-32]!
   172bc:	mov	x19, x0
   172c0:	ldr	x0, [x0]
   172c4:	str	x30, [sp, #24]
   172c8:	ldrb	w3, [x0]
   172cc:	and	x3, x3, #0xff
   172d0:	cmp	x3, #0x1
   172d4:	b.ne	173d8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2040>  // b.any
   172d8:	ldr	w0, [x19, #8]
   172dc:	sub	w0, w0, #0x1
   172e0:	cmp	w0, #0x1
   172e4:	b.ls	17390 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ff8>  // b.plast
   172e8:	bl	1c7f8 <__sanitizer_set_report_fd@@Base+0x4978>
   172ec:	mov	x20, x0
   172f0:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   172f4:	ldr	x1, [x1, #3744]
   172f8:	ldr	x0, [x1]
   172fc:	cmp	x0, x20
   17300:	b.eq	1739c <__sanitizer_install_malloc_and_free_hooks@@Base+0x2004>  // b.none
   17304:	ldr	w0, [x19, #8]
   17308:	cmn	w0, #0x1
   1730c:	b.eq	173b4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x201c>  // b.none
   17310:	ldr	x1, [x19, #8208]
   17314:	cmp	x1, x20
   17318:	b.eq	17390 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ff8>  // b.none
   1731c:	str	x21, [sp, #16]
   17320:	bl	1dcd0 <__sanitizer_set_report_fd@@Base+0x5e50>
   17324:	bl	14ea8 <_ZdaPvRKSt9nothrow_t@@Base+0x3128>
   17328:	cmp	x0, #0x0
   1732c:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   17330:	mov	x4, x0
   17334:	mov	x0, #0x100c                	// #4108
   17338:	add	x21, x19, x0
   1733c:	ldr	x0, [x1, #4056]
   17340:	cset	w1, ne  // ne = any
   17344:	add	x3, x19, #0xc
   17348:	ldrb	w0, [x0, #48]
   1734c:	tst	w1, w0
   17350:	b.ne	173bc <__sanitizer_install_malloc_and_free_hooks@@Base+0x2024>  // b.any
   17354:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   17358:	mov	x4, x20
   1735c:	add	x2, x2, #0xaf8
   17360:	mov	x0, x21
   17364:	mov	x1, #0x1000                	// #4096
   17368:	bl	1f928 <__sanitizer_on_print@@Base+0x8>
   1736c:	mov	x0, x21
   17370:	mov	x2, #0x0                   	// #0
   17374:	mov	w1, #0x1                   	// #1
   17378:	bl	1dba0 <__sanitizer_set_report_fd@@Base+0x5d20>
   1737c:	str	w0, [x19, #8]
   17380:	cmn	w0, #0x1
   17384:	b.eq	173f8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2060>  // b.none
   17388:	ldr	x21, [sp, #16]
   1738c:	str	x20, [x19, #8208]
   17390:	ldr	x30, [sp, #24]
   17394:	ldp	x19, x20, [sp], #32
   17398:	ret
   1739c:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   173a0:	ldr	x0, [x0, #3736]
   173a4:	ldr	x20, [x0]
   173a8:	ldr	w0, [x19, #8]
   173ac:	cmn	w0, #0x1
   173b0:	b.ne	17310 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1f78>  // b.any
   173b4:	str	x21, [sp, #16]
   173b8:	b	17324 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1f8c>
   173bc:	mov	x5, x20
   173c0:	mov	x0, x21
   173c4:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   173c8:	mov	x1, #0x1000                	// #4096
   173cc:	add	x2, x2, #0xae8
   173d0:	bl	1f928 <__sanitizer_on_print@@Base+0x8>
   173d4:	b	1736c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1fd4>
   173d8:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   173dc:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   173e0:	add	x2, x2, #0xa60
   173e4:	add	x0, x0, #0xa98
   173e8:	mov	x4, #0x1                   	// #1
   173ec:	mov	w1, #0x2b                  	// #43
   173f0:	str	x21, [sp, #16]
   173f4:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   173f8:	adrp	x19, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   173fc:	add	x19, x19, #0xb00
   17400:	mov	x0, x19
   17404:	bl	1a690 <__sanitizer_set_report_fd@@Base+0x2810>
   17408:	mov	x1, x19
   1740c:	mov	x2, x0
   17410:	mov	x4, #0x0                   	// #0
   17414:	mov	x3, #0x0                   	// #0
   17418:	mov	w0, #0x2                   	// #2
   1741c:	bl	1dd28 <__sanitizer_set_report_fd@@Base+0x5ea8>
   17420:	mov	x0, x21
   17424:	bl	1a690 <__sanitizer_set_report_fd@@Base+0x2810>
   17428:	mov	x1, x21
   1742c:	mov	x2, x0
   17430:	mov	x4, #0x0                   	// #0
   17434:	mov	x3, #0x0                   	// #0
   17438:	mov	w0, #0x2                   	// #2
   1743c:	bl	1dd28 <__sanitizer_set_report_fd@@Base+0x5ea8>
   17440:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   17444:	nop
   17448:	cbz	x1, 1753c <__sanitizer_install_malloc_and_free_hooks@@Base+0x21a4>
   1744c:	sub	sp, sp, #0x30
   17450:	stp	x19, x20, [sp, #16]
   17454:	mov	x19, x0
   17458:	mov	x20, x1
   1745c:	mov	x0, x1
   17460:	stp	x21, x30, [sp, #32]
   17464:	bl	1a690 <__sanitizer_set_report_fd@@Base+0x2810>
   17468:	cmp	x0, #0xf9c
   1746c:	b.hi	1755c <__sanitizer_install_malloc_and_free_hooks@@Base+0x21c4>  // b.pmore
   17470:	ldr	x21, [x19]
   17474:	mov	w1, #0x1                   	// #1
   17478:	ldxrb	w0, [x21]
   1747c:	stxrb	w2, w1, [x21]
   17480:	cbnz	w2, 17478 <__sanitizer_install_malloc_and_free_hooks@@Base+0x20e0>
   17484:	dmb	ish
   17488:	tst	w0, #0xff
   1748c:	b.eq	17498 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2100>  // b.none
   17490:	mov	x0, x21
   17494:	bl	85d8 <__sanitizer_print_stack_trace@@Base+0x300>
   17498:	ldr	w0, [x19, #8]
   1749c:	sub	w1, w0, #0x1
   174a0:	cmp	w1, #0x1
   174a4:	ccmn	w0, #0x1, #0x4, hi  // hi = pmore
   174a8:	b.ne	174e8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2150>  // b.any
   174ac:	mov	w0, #0xffffffff            	// #-1
   174b0:	str	w0, [x19, #8]
   174b4:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   174b8:	mov	x0, x20
   174bc:	add	x1, x1, #0xb50
   174c0:	bl	1a560 <__sanitizer_set_report_fd@@Base+0x26e0>
   174c4:	cbnz	w0, 17508 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2170>
   174c8:	mov	w0, #0x1                   	// #1
   174cc:	str	w0, [x19, #8]
   174d0:	dmb	ish
   174d4:	strb	wzr, [x21]
   174d8:	ldp	x19, x20, [sp, #16]
   174dc:	ldp	x21, x30, [sp, #32]
   174e0:	add	sp, sp, #0x30
   174e4:	ret
   174e8:	bl	1dcd0 <__sanitizer_set_report_fd@@Base+0x5e50>
   174ec:	mov	w0, #0xffffffff            	// #-1
   174f0:	str	w0, [x19, #8]
   174f4:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   174f8:	mov	x0, x20
   174fc:	add	x1, x1, #0xb50
   17500:	bl	1a560 <__sanitizer_set_report_fd@@Base+0x26e0>
   17504:	cbz	w0, 174c8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2130>
   17508:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   1750c:	mov	x0, x20
   17510:	add	x1, x1, #0xb58
   17514:	bl	1a560 <__sanitizer_set_report_fd@@Base+0x26e0>
   17518:	cbnz	w0, 17540 <__sanitizer_install_malloc_and_free_hooks@@Base+0x21a8>
   1751c:	mov	w0, #0x2                   	// #2
   17520:	str	w0, [x19, #8]
   17524:	dmb	ish
   17528:	strb	wzr, [x21]
   1752c:	ldp	x19, x20, [sp, #16]
   17530:	ldp	x21, x30, [sp, #32]
   17534:	add	sp, sp, #0x30
   17538:	ret
   1753c:	ret
   17540:	mov	x3, x20
   17544:	add	x0, x19, #0xc
   17548:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   1754c:	mov	x1, #0x1000                	// #4096
   17550:	add	x2, x2, #0xcb8
   17554:	bl	1f928 <__sanitizer_on_print@@Base+0x8>
   17558:	b	174d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2138>
   1755c:	ldrb	w7, [x20, #6]
   17560:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   17564:	ldrb	w6, [x20, #5]
   17568:	add	x0, x0, #0xb20
   1756c:	ldrb	w5, [x20, #4]
   17570:	ldrb	w4, [x20, #3]
   17574:	ldrb	w3, [x20, #2]
   17578:	ldrb	w2, [x20, #1]
   1757c:	ldrb	w1, [x20]
   17580:	ldrb	w8, [x20, #7]
   17584:	str	w8, [sp]
   17588:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   1758c:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   17590:	stp	x19, x20, [sp, #-128]!
   17594:	mov	w19, #0x1                   	// #1
   17598:	str	x30, [sp, #80]
   1759c:	str	xzr, [x1]
   175a0:	str	xzr, [x2]
   175a4:	str	xzr, [x3]
   175a8:	cbz	x4, 176b4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x231c>
   175ac:	adrp	x19, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   175b0:	stp	x21, x22, [sp, #16]
   175b4:	mov	x21, x1
   175b8:	ldr	x19, [x19, #4016]
   175bc:	stp	x23, x24, [sp, #32]
   175c0:	mov	x22, x4
   175c4:	stp	x25, x26, [sp, #48]
   175c8:	mov	x23, x5
   175cc:	mov	x26, x0
   175d0:	ldr	x20, [x19]
   175d4:	stp	x27, x28, [sp, #64]
   175d8:	mov	x25, x2
   175dc:	mov	x28, x3
   175e0:	mov	x0, #0x0                   	// #0
   175e4:	cbz	x20, 176f0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2358>
   175e8:	cmp	x20, x22
   175ec:	add	x24, sp, #0x78
   175f0:	csel	x20, x20, x22, ls  // ls = plast
   175f4:	adrp	x27, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   175f8:	add	x1, x27, #0xb60
   175fc:	str	x1, [sp, #104]
   17600:	ldr	x1, [x25]
   17604:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   17608:	ldr	x1, [sp, #104]
   1760c:	mov	w2, #0x0                   	// #0
   17610:	mov	x0, x20
   17614:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   17618:	str	x0, [x21]
   1761c:	str	x20, [x25]
   17620:	mov	x2, x23
   17624:	mov	x0, x26
   17628:	mov	w1, #0x0                   	// #0
   1762c:	bl	1dba0 <__sanitizer_set_report_fd@@Base+0x5d20>
   17630:	mov	w27, w0
   17634:	cmn	w0, #0x1
   17638:	b.eq	17704 <__sanitizer_install_malloc_and_free_hooks@@Base+0x236c>  // b.none
   1763c:	str	xzr, [x28]
   17640:	mov	x1, #0x0                   	// #0
   17644:	cbnz	x20, 17654 <__sanitizer_install_malloc_and_free_hooks@@Base+0x22bc>
   17648:	b	176c4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x232c>
   1764c:	cmp	x1, x20
   17650:	b.cs	176c4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x232c>  // b.hs, b.nlast
   17654:	ldr	x5, [x21]
   17658:	sub	x2, x20, x1
   1765c:	mov	x4, x23
   17660:	mov	x3, x24
   17664:	mov	w0, w27
   17668:	add	x1, x5, x1
   1766c:	bl	1dcd8 <__sanitizer_set_report_fd@@Base+0x5e58>
   17670:	ands	w19, w0, #0xff
   17674:	b.eq	176e0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2348>  // b.none
   17678:	ldr	x1, [x28]
   1767c:	ldr	x2, [sp, #120]
   17680:	add	x1, x2, x1
   17684:	str	x1, [x28]
   17688:	cmp	x1, x22
   1768c:	cset	w19, eq  // eq = none
   17690:	cmp	x2, #0x0
   17694:	csinc	w19, w19, wzr, ne  // ne = any
   17698:	cbz	w19, 1764c <__sanitizer_install_malloc_and_free_hooks@@Base+0x22b4>
   1769c:	mov	w0, w27
   176a0:	bl	1dcd0 <__sanitizer_set_report_fd@@Base+0x5e50>
   176a4:	ldp	x21, x22, [sp, #16]
   176a8:	ldp	x23, x24, [sp, #32]
   176ac:	ldp	x25, x26, [sp, #48]
   176b0:	ldp	x27, x28, [sp, #64]
   176b4:	mov	w0, w19
   176b8:	ldr	x30, [sp, #80]
   176bc:	ldp	x19, x20, [sp], #128
   176c0:	ret
   176c4:	mov	w0, w27
   176c8:	lsl	x20, x20, #1
   176cc:	bl	1dcd0 <__sanitizer_set_report_fd@@Base+0x5e50>
   176d0:	cmp	x20, x22
   176d4:	csel	x20, x20, x22, ls  // ls = plast
   176d8:	ldr	x0, [x21]
   176dc:	b	17600 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2268>
   176e0:	ldr	x0, [x21]
   176e4:	ldr	x1, [x25]
   176e8:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   176ec:	b	1769c <__sanitizer_install_malloc_and_free_hooks@@Base+0x2304>
   176f0:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   176f4:	mov	x20, x0
   176f8:	ldr	x0, [x21]
   176fc:	str	x20, [x19]
   17700:	b	175e8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2250>
   17704:	ldr	x0, [x21]
   17708:	mov	w19, #0x0                   	// #0
   1770c:	ldr	x1, [x25]
   17710:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   17714:	ldp	x21, x22, [sp, #16]
   17718:	ldp	x23, x24, [sp, #32]
   1771c:	ldp	x25, x26, [sp, #48]
   17720:	ldp	x27, x28, [sp, #64]
   17724:	b	176b4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x231c>
   17728:	stp	x19, x20, [sp, #-144]!
   1772c:	stp	x27, x28, [sp, #64]
   17730:	str	x30, [sp, #80]
   17734:	str	xzr, [x1, #16]
   17738:	cbz	x2, 178b4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x251c>
   1773c:	stp	x25, x26, [sp, #48]
   17740:	adrp	x25, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   17744:	mov	x20, x1
   17748:	stp	x23, x24, [sp, #32]
   1774c:	mov	x19, x0
   17750:	ldr	x24, [x25, #4016]
   17754:	stp	x21, x22, [sp, #16]
   17758:	mov	x21, x2
   1775c:	mov	x22, x3
   17760:	ldr	x23, [x24]
   17764:	cbz	x23, 17868 <__sanitizer_install_malloc_and_free_hooks@@Base+0x24d0>
   17768:	mov	x0, x19
   1776c:	mov	x2, x22
   17770:	mov	w1, #0x0                   	// #0
   17774:	bl	1dba0 <__sanitizer_set_report_fd@@Base+0x5d20>
   17778:	mov	w27, w0
   1777c:	cmn	w0, #0x1
   17780:	b.eq	17890 <__sanitizer_install_malloc_and_free_hooks@@Base+0x24f8>  // b.none
   17784:	ldr	x0, [x25, #4016]
   17788:	str	x0, [sp, #104]
   1778c:	ldr	x3, [x20, #16]
   17790:	adrp	x26, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   17794:	mov	x19, #0x0                   	// #0
   17798:	add	x24, sp, #0x88
   1779c:	add	x26, x26, #0xc10
   177a0:	cmp	x3, x19
   177a4:	b.ls	177f8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2460>  // b.plast
   177a8:	cmp	x21, x3
   177ac:	b.cc	1784c <__sanitizer_install_malloc_and_free_hooks@@Base+0x24b4>  // b.lo, b.ul, b.last
   177b0:	ldr	x1, [x20]
   177b4:	sub	x2, x3, x19
   177b8:	mov	x4, x22
   177bc:	mov	x3, x24
   177c0:	mov	w0, w27
   177c4:	add	x1, x1, x19
   177c8:	bl	1dcd8 <__sanitizer_set_report_fd@@Base+0x5e58>
   177cc:	ands	w28, w0, #0xff
   177d0:	b.eq	179a8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2610>  // b.none
   177d4:	ldr	x1, [sp, #136]
   177d8:	add	x3, x1, x19
   177dc:	cbz	x1, 1794c <__sanitizer_install_malloc_and_free_hooks@@Base+0x25b4>
   177e0:	cmp	x21, x3
   177e4:	b.ls	17950 <__sanitizer_install_malloc_and_free_hooks@@Base+0x25b8>  // b.plast
   177e8:	mov	x19, x3
   177ec:	ldr	x3, [x20, #16]
   177f0:	cmp	x3, x19
   177f4:	b.hi	177a8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2410>  // b.pmore
   177f8:	lsl	x28, x19, #1
   177fc:	cmp	x28, x23
   17800:	csel	x28, x28, x23, cs  // cs = hs, nlast
   17804:	cmp	x28, x21
   17808:	csel	x28, x28, x21, ls  // ls = plast
   1780c:	cmp	x28, x3
   17810:	b.ls	17834 <__sanitizer_install_malloc_and_free_hooks@@Base+0x249c>  // b.plast
   17814:	ldr	x0, [x20, #8]
   17818:	cmp	x28, x0
   1781c:	b.hi	178ec <__sanitizer_install_malloc_and_free_hooks@@Base+0x2554>  // b.pmore
   17820:	ldr	x4, [x20]
   17824:	add	x0, x4, x3
   17828:	sub	x2, x28, x3
   1782c:	mov	w1, #0x0                   	// #0
   17830:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   17834:	str	x28, [x20, #16]
   17838:	cmp	x28, x19
   1783c:	b.ls	178cc <__sanitizer_install_malloc_and_free_hooks@@Base+0x2534>  // b.plast
   17840:	mov	x3, x28
   17844:	cmp	x21, x3
   17848:	b.cs	177b0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2418>  // b.hs, b.nlast
   1784c:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   17850:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   17854:	mov	x4, x21
   17858:	add	x2, x2, #0xc68
   1785c:	add	x0, x0, #0xc10
   17860:	mov	w1, #0x9a                  	// #154
   17864:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   17868:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   1786c:	mov	x23, x0
   17870:	mov	x2, x22
   17874:	mov	w1, #0x0                   	// #0
   17878:	str	x0, [x24]
   1787c:	mov	x0, x19
   17880:	bl	1dba0 <__sanitizer_set_report_fd@@Base+0x5d20>
   17884:	mov	w27, w0
   17888:	cmn	w0, #0x1
   1788c:	b.ne	17784 <__sanitizer_install_malloc_and_free_hooks@@Base+0x23ec>  // b.any
   17890:	mov	w28, #0x0                   	// #0
   17894:	mov	w0, w28
   17898:	ldp	x21, x22, [sp, #16]
   1789c:	ldp	x23, x24, [sp, #32]
   178a0:	ldp	x25, x26, [sp, #48]
   178a4:	ldp	x27, x28, [sp, #64]
   178a8:	ldr	x30, [sp, #80]
   178ac:	ldp	x19, x20, [sp], #144
   178b0:	ret
   178b4:	mov	w28, #0x1                   	// #1
   178b8:	mov	w0, w28
   178bc:	ldp	x27, x28, [sp, #64]
   178c0:	ldr	x30, [sp, #80]
   178c4:	ldp	x19, x20, [sp], #144
   178c8:	ret
   178cc:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   178d0:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   178d4:	mov	x4, x28
   178d8:	mov	x3, x19
   178dc:	add	x2, x2, #0xbf0
   178e0:	add	x0, x0, #0xc10
   178e4:	mov	w1, #0x99                  	// #153
   178e8:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   178ec:	ldr	x0, [sp, #104]
   178f0:	ldr	x0, [x0]
   178f4:	cbz	x0, 179c0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2628>
   178f8:	sub	x1, x0, #0x1
   178fc:	tst	x1, x0
   17900:	b.ne	17a58 <__sanitizer_install_malloc_and_free_hooks@@Base+0x26c0>  // b.any
   17904:	add	x1, x28, x1
   17908:	neg	x0, x0
   1790c:	and	x6, x1, x0
   17910:	mov	w2, #0x0                   	// #0
   17914:	mov	x0, x6
   17918:	mov	x1, x26
   1791c:	str	x6, [sp, #120]
   17920:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   17924:	str	x0, [sp, #112]
   17928:	ldr	x1, [x20]
   1792c:	ldr	x2, [x20, #16]
   17930:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   17934:	ldp	x0, x1, [x20]
   17938:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   1793c:	ldp	x4, x6, [sp, #112]
   17940:	stp	x4, x6, [x20]
   17944:	ldr	x3, [x20, #16]
   17948:	b	17824 <__sanitizer_install_malloc_and_free_hooks@@Base+0x248c>
   1794c:	mov	x3, x19
   17950:	mov	w0, w27
   17954:	str	x3, [sp, #104]
   17958:	bl	1dcd0 <__sanitizer_set_report_fd@@Base+0x5e50>
   1795c:	ldr	x2, [x20, #16]
   17960:	ldr	x3, [sp, #104]
   17964:	cmp	x3, x2
   17968:	b.ls	17994 <__sanitizer_install_malloc_and_free_hooks@@Base+0x25fc>  // b.plast
   1796c:	ldr	x0, [x20, #8]
   17970:	cmp	x3, x0
   17974:	b.hi	179d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2638>  // b.pmore
   17978:	ldr	x19, [x20]
   1797c:	add	x0, x19, x2
   17980:	mov	w1, #0x0                   	// #0
   17984:	sub	x2, x3, x2
   17988:	str	x3, [sp, #104]
   1798c:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   17990:	ldr	x3, [sp, #104]
   17994:	ldp	x21, x22, [sp, #16]
   17998:	ldp	x23, x24, [sp, #32]
   1799c:	ldp	x25, x26, [sp, #48]
   179a0:	str	x3, [x20, #16]
   179a4:	b	178b8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2520>
   179a8:	mov	w0, w27
   179ac:	bl	1dcd0 <__sanitizer_set_report_fd@@Base+0x5e50>
   179b0:	ldp	x21, x22, [sp, #16]
   179b4:	ldp	x23, x24, [sp, #32]
   179b8:	ldp	x25, x26, [sp, #48]
   179bc:	b	178b8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2520>
   179c0:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   179c4:	ldr	x1, [sp, #104]
   179c8:	str	x0, [x1]
   179cc:	b	178f8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2560>
   179d0:	cbz	x3, 17a38 <__sanitizer_install_malloc_and_free_hooks@@Base+0x26a0>
   179d4:	ldr	x25, [x25, #4016]
   179d8:	ldr	x0, [x25]
   179dc:	cbz	x0, 17a80 <__sanitizer_install_malloc_and_free_hooks@@Base+0x26e8>
   179e0:	sub	x1, x0, #0x1
   179e4:	tst	x0, x1
   179e8:	b.ne	17a58 <__sanitizer_install_malloc_and_free_hooks@@Base+0x26c0>  // b.any
   179ec:	add	x1, x3, x1
   179f0:	neg	x0, x0
   179f4:	and	x21, x1, x0
   179f8:	mov	w2, #0x0                   	// #0
   179fc:	mov	x0, x21
   17a00:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   17a04:	add	x1, x1, #0xc10
   17a08:	str	x3, [sp, #104]
   17a0c:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   17a10:	mov	x19, x0
   17a14:	ldr	x1, [x20]
   17a18:	ldr	x2, [x20, #16]
   17a1c:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   17a20:	ldp	x0, x1, [x20]
   17a24:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   17a28:	stp	x19, x21, [x20]
   17a2c:	ldr	x2, [x20, #16]
   17a30:	ldr	x3, [sp, #104]
   17a34:	b	1797c <__sanitizer_install_malloc_and_free_hooks@@Base+0x25e4>
   17a38:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   17a3c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   17a40:	add	x2, x2, #0xb78
   17a44:	add	x0, x0, #0xb98
   17a48:	mov	x4, #0x0                   	// #0
   17a4c:	mov	x3, #0x0                   	// #0
   17a50:	mov	w1, #0x20b                 	// #523
   17a54:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   17a58:	adrp	x19, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   17a5c:	add	x19, x19, #0xbf8
   17a60:	mov	x0, x19
   17a64:	bl	1a690 <__sanitizer_set_report_fd@@Base+0x2810>
   17a68:	mov	x1, x19
   17a6c:	mov	x2, x0
   17a70:	adrp	x0, 5a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x26398>
   17a74:	add	x0, x0, #0x288
   17a78:	bl	1e170 <__sanitizer_set_report_fd@@Base+0x62f0>
   17a7c:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   17a80:	str	x3, [sp, #104]
   17a84:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   17a88:	str	x0, [x25]
   17a8c:	ldr	x3, [sp, #104]
   17a90:	b	179e0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2648>
   17a94:	nop
   17a98:	stp	x19, x20, [sp, #-80]!
   17a9c:	stp	x23, x24, [sp, #32]
   17aa0:	mov	x23, x0
   17aa4:	str	x30, [sp, #72]
   17aa8:	bl	1c400 <__sanitizer_set_report_fd@@Base+0x4580>
   17aac:	tst	w0, #0xff
   17ab0:	b.eq	17ac8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2730>  // b.none
   17ab4:	mov	x0, x23
   17ab8:	ldp	x23, x24, [sp, #32]
   17abc:	ldr	x30, [sp, #72]
   17ac0:	ldp	x19, x20, [sp], #80
   17ac4:	b	1a360 <__sanitizer_set_report_fd@@Base+0x24e0>
   17ac8:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   17acc:	add	x0, x0, #0xc88
   17ad0:	stp	x21, x22, [sp, #16]
   17ad4:	bl	1c4e0 <__sanitizer_set_report_fd@@Base+0x4660>
   17ad8:	mov	x21, x0
   17adc:	cbz	x0, 17c18 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2880>
   17ae0:	adrp	x19, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   17ae4:	mov	x0, x23
   17ae8:	stp	x25, x26, [sp, #48]
   17aec:	str	x27, [sp, #64]
   17af0:	bl	1a690 <__sanitizer_set_report_fd@@Base+0x2810>
   17af4:	ldr	x20, [x19, #4016]
   17af8:	mov	x24, x0
   17afc:	ldr	x0, [x20]
   17b00:	cbz	x0, 17c30 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2898>
   17b04:	sub	x1, x0, #0x1
   17b08:	tst	x1, x0
   17b0c:	b.ne	17cf4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x295c>  // b.any
   17b10:	add	x25, x0, #0xfff
   17b14:	neg	x0, x0
   17b18:	and	x25, x25, x0
   17b1c:	mov	w2, #0x0                   	// #0
   17b20:	mov	x0, x25
   17b24:	adrp	x20, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   17b28:	add	x1, x20, #0xc10
   17b2c:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   17b30:	mov	x2, #0x0                   	// #0
   17b34:	mov	x1, #0x0                   	// #0
   17b38:	mov	x22, x0
   17b3c:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   17b40:	mov	x1, #0x0                   	// #0
   17b44:	mov	x0, #0x0                   	// #0
   17b48:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   17b4c:	cmp	x25, #0xfff
   17b50:	b.ls	17c98 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2900>  // b.plast
   17b54:	mov	x0, x22
   17b58:	mov	w26, #0x2f                  	// #47
   17b5c:	mov	x2, #0x1000                	// #4096
   17b60:	mov	w1, #0x0                   	// #0
   17b64:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   17b68:	b	17b78 <__sanitizer_install_malloc_and_free_hooks@@Base+0x27e0>
   17b6c:	ldrb	w0, [x19]
   17b70:	cbz	w0, 17c00 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2868>
   17b74:	add	x21, x19, #0x1
   17b78:	mov	x0, x21
   17b7c:	mov	w1, #0x3a                  	// #58
   17b80:	bl	1a618 <__sanitizer_set_report_fd@@Base+0x2798>
   17b84:	sub	x20, x0, x21
   17b88:	add	x27, x24, x20
   17b8c:	mov	x19, x0
   17b90:	add	x0, x27, #0x2
   17b94:	cmp	x0, #0x1, lsl #12
   17b98:	b.hi	17b6c <__sanitizer_install_malloc_and_free_hooks@@Base+0x27d4>  // b.pmore
   17b9c:	mov	x1, x21
   17ba0:	mov	x2, x20
   17ba4:	mov	x0, x22
   17ba8:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   17bac:	cmp	x20, #0xfff
   17bb0:	b.hi	17c3c <__sanitizer_install_malloc_and_free_hooks@@Base+0x28a4>  // b.pmore
   17bb4:	strb	w26, [x22, x20]
   17bb8:	add	x4, x20, #0x1
   17bbc:	b.eq	17c5c <__sanitizer_install_malloc_and_free_hooks@@Base+0x28c4>  // b.none
   17bc0:	add	x0, x22, x4
   17bc4:	mov	x2, x24
   17bc8:	mov	x1, x23
   17bcc:	add	x27, x27, #0x1
   17bd0:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   17bd4:	cmp	x27, #0xfff
   17bd8:	b.hi	17c78 <__sanitizer_install_malloc_and_free_hooks@@Base+0x28e0>  // b.pmore
   17bdc:	strb	wzr, [x22, x27]
   17be0:	mov	x0, x22
   17be4:	bl	1c400 <__sanitizer_set_report_fd@@Base+0x4580>
   17be8:	tst	w0, #0xff
   17bec:	b.eq	17b6c <__sanitizer_install_malloc_and_free_hooks@@Base+0x27d4>  // b.none
   17bf0:	mov	x0, x22
   17bf4:	bl	1a360 <__sanitizer_set_report_fd@@Base+0x24e0>
   17bf8:	mov	x21, x0
   17bfc:	b	17c04 <__sanitizer_install_malloc_and_free_hooks@@Base+0x286c>
   17c00:	mov	x21, #0x0                   	// #0
   17c04:	mov	x1, x25
   17c08:	mov	x0, x22
   17c0c:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   17c10:	ldp	x25, x26, [sp, #48]
   17c14:	ldr	x27, [sp, #64]
   17c18:	mov	x0, x21
   17c1c:	ldp	x21, x22, [sp, #16]
   17c20:	ldp	x23, x24, [sp, #32]
   17c24:	ldr	x30, [sp, #72]
   17c28:	ldp	x19, x20, [sp], #80
   17c2c:	ret
   17c30:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   17c34:	str	x0, [x20]
   17c38:	b	17b04 <__sanitizer_install_malloc_and_free_hooks@@Base+0x276c>
   17c3c:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   17c40:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   17c44:	mov	x3, x20
   17c48:	add	x2, x2, #0x118
   17c4c:	add	x0, x0, #0xb98
   17c50:	mov	x4, #0x1000                	// #4096
   17c54:	mov	w1, #0x1c5                 	// #453
   17c58:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   17c5c:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   17c60:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   17c64:	add	x2, x2, #0x118
   17c68:	add	x0, x0, #0xb98
   17c6c:	mov	x3, x4
   17c70:	mov	w1, #0x1c5                 	// #453
   17c74:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   17c78:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   17c7c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   17c80:	add	x2, x2, #0x118
   17c84:	add	x0, x0, #0xb98
   17c88:	mov	x4, #0x1000                	// #4096
   17c8c:	mov	x3, #0xffffffffffffffff    	// #-1
   17c90:	mov	w1, #0x1c5                 	// #453
   17c94:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   17c98:	ldr	x19, [x19, #4016]
   17c9c:	ldr	x0, [x19]
   17ca0:	cbz	x0, 17d1c <__sanitizer_install_malloc_and_free_hooks@@Base+0x2984>
   17ca4:	sub	x1, x0, #0x1
   17ca8:	tst	x1, x0
   17cac:	b.ne	17cf4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x295c>  // b.any
   17cb0:	add	x19, x0, #0xfff
   17cb4:	neg	x0, x0
   17cb8:	and	x19, x19, x0
   17cbc:	add	x1, x20, #0xc10
   17cc0:	mov	x0, x19
   17cc4:	mov	w2, #0x0                   	// #0
   17cc8:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   17ccc:	mov	x20, x0
   17cd0:	mov	x2, #0x0                   	// #0
   17cd4:	mov	x1, x22
   17cd8:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   17cdc:	mov	x1, x25
   17ce0:	mov	x0, x22
   17ce4:	mov	x25, x19
   17ce8:	mov	x22, x20
   17cec:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   17cf0:	b	17b54 <__sanitizer_install_malloc_and_free_hooks@@Base+0x27bc>
   17cf4:	adrp	x19, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   17cf8:	add	x19, x19, #0xbf8
   17cfc:	mov	x0, x19
   17d00:	bl	1a690 <__sanitizer_set_report_fd@@Base+0x2810>
   17d04:	mov	x1, x19
   17d08:	mov	x2, x0
   17d0c:	adrp	x0, 5a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x26398>
   17d10:	add	x0, x0, #0x288
   17d14:	bl	1e170 <__sanitizer_set_report_fd@@Base+0x62f0>
   17d18:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   17d1c:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   17d20:	str	x0, [x19]
   17d24:	b	17ca4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x290c>

0000000000017d28 <__sanitizer_set_report_path@@Base>:
   17d28:	cbz	x0, 17e24 <__sanitizer_set_report_path@@Base+0xfc>
   17d2c:	sub	sp, sp, #0x30
   17d30:	stp	x19, x20, [sp, #16]
   17d34:	mov	x19, x0
   17d38:	stp	x21, x30, [sp, #32]
   17d3c:	bl	1a690 <__sanitizer_set_report_fd@@Base+0x2810>
   17d40:	cmp	x0, #0xf9c
   17d44:	b.hi	17e48 <__sanitizer_set_report_path@@Base+0x120>  // b.pmore
   17d48:	adrp	x20, 5a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x26398>
   17d4c:	mov	w1, #0x1                   	// #1
   17d50:	ldr	x21, [x20, #648]
   17d54:	ldxrb	w0, [x21]
   17d58:	stxrb	w2, w1, [x21]
   17d5c:	cbnz	w2, 17d54 <__sanitizer_set_report_path@@Base+0x2c>
   17d60:	dmb	ish
   17d64:	tst	w0, #0xff
   17d68:	b.eq	17d74 <__sanitizer_set_report_path@@Base+0x4c>  // b.none
   17d6c:	mov	x0, x21
   17d70:	bl	85d8 <__sanitizer_print_stack_trace@@Base+0x300>
   17d74:	add	x0, x20, #0x288
   17d78:	ldr	w0, [x0, #8]
   17d7c:	sub	w1, w0, #0x1
   17d80:	cmp	w1, #0x1
   17d84:	ccmn	w0, #0x1, #0x4, hi  // hi = pmore
   17d88:	b.ne	17dcc <__sanitizer_set_report_path@@Base+0xa4>  // b.any
   17d8c:	add	x20, x20, #0x288
   17d90:	mov	w2, #0xffffffff            	// #-1
   17d94:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   17d98:	mov	x0, x19
   17d9c:	add	x1, x1, #0xb50
   17da0:	str	w2, [x20, #8]
   17da4:	bl	1a560 <__sanitizer_set_report_fd@@Base+0x26e0>
   17da8:	cbnz	w0, 17df0 <__sanitizer_set_report_path@@Base+0xc8>
   17dac:	mov	w0, #0x1                   	// #1
   17db0:	str	w0, [x20, #8]
   17db4:	dmb	ish
   17db8:	strb	wzr, [x21]
   17dbc:	ldp	x19, x20, [sp, #16]
   17dc0:	ldp	x21, x30, [sp, #32]
   17dc4:	add	sp, sp, #0x30
   17dc8:	ret
   17dcc:	bl	1dcd0 <__sanitizer_set_report_fd@@Base+0x5e50>
   17dd0:	add	x20, x20, #0x288
   17dd4:	mov	w2, #0xffffffff            	// #-1
   17dd8:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   17ddc:	mov	x0, x19
   17de0:	add	x1, x1, #0xb50
   17de4:	str	w2, [x20, #8]
   17de8:	bl	1a560 <__sanitizer_set_report_fd@@Base+0x26e0>
   17dec:	cbz	w0, 17dac <__sanitizer_set_report_path@@Base+0x84>
   17df0:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   17df4:	mov	x0, x19
   17df8:	add	x1, x1, #0xb58
   17dfc:	bl	1a560 <__sanitizer_set_report_fd@@Base+0x26e0>
   17e00:	cbnz	w0, 17e28 <__sanitizer_set_report_path@@Base+0x100>
   17e04:	mov	w0, #0x2                   	// #2
   17e08:	str	w0, [x20, #8]
   17e0c:	dmb	ish
   17e10:	strb	wzr, [x21]
   17e14:	ldp	x19, x20, [sp, #16]
   17e18:	ldp	x21, x30, [sp, #32]
   17e1c:	add	sp, sp, #0x30
   17e20:	ret
   17e24:	ret
   17e28:	mov	x3, x19
   17e2c:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   17e30:	adrp	x0, 5a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x26398>
   17e34:	add	x2, x2, #0xcb8
   17e38:	mov	x1, #0x1000                	// #4096
   17e3c:	add	x0, x0, #0x294
   17e40:	bl	1f928 <__sanitizer_on_print@@Base+0x8>
   17e44:	b	17db4 <__sanitizer_set_report_path@@Base+0x8c>
   17e48:	ldrb	w7, [x19, #6]
   17e4c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   17e50:	ldrb	w6, [x19, #5]
   17e54:	add	x0, x0, #0xb20
   17e58:	ldrb	w5, [x19, #4]
   17e5c:	ldrb	w4, [x19, #3]
   17e60:	ldrb	w3, [x19, #2]
   17e64:	ldrb	w2, [x19, #1]
   17e68:	ldrb	w1, [x19]
   17e6c:	ldrb	w8, [x19, #7]
   17e70:	str	w8, [sp]
   17e74:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   17e78:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   17e7c:	nop

0000000000017e80 <__sanitizer_set_report_fd@@Base>:
   17e80:	stp	x19, x30, [sp, #-16]!
   17e84:	adrp	x19, 5a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x26398>
   17e88:	add	x19, x19, #0x288
   17e8c:	str	w0, [x19, #8]
   17e90:	bl	1c7f8 <__sanitizer_set_report_fd@@Base+0x4978>
   17e94:	str	x0, [x19, #8208]
   17e98:	ldp	x19, x30, [sp], #16
   17e9c:	ret
   17ea0:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   17ea4:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   17ea8:	movi	v0.4s, #0x0
   17eac:	mov	x17, #0x10000               	// #65536
   17eb0:	ldr	q2, [x2, #464]
   17eb4:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   17eb8:	mov	x16, #0x10100000000         	// #1103806595072
   17ebc:	mov	w11, #0x100                 	// #256
   17ec0:	ldr	q1, [x2, #480]
   17ec4:	add	x7, x1, #0x3e8
   17ec8:	mov	w8, #0x1                   	// #1
   17ecc:	mov	w1, #0x1                   	// #1
   17ed0:	movk	x17, #0x1, lsl #32
   17ed4:	movk	x16, #0x1, lsl #48
   17ed8:	mov	x15, #0x100000000           	// #4294967296
   17edc:	mov	w14, #0x101                 	// #257
   17ee0:	mov	x13, #0x10000               	// #65536
   17ee4:	mov	w12, #0x1388                	// #5000
   17ee8:	movk	w11, #0x101, lsl #16
   17eec:	adrp	x6, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   17ef0:	adrp	x5, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   17ef4:	add	x6, x6, #0xb58
   17ef8:	add	x5, x5, #0xcd8
   17efc:	adrp	x4, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   17f00:	adrp	x3, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   17f04:	add	x4, x4, #0xba8
   17f08:	add	x3, x3, #0xce0
   17f0c:	mov	x10, #0x1                   	// #1
   17f10:	strb	w1, [x0]
   17f14:	movk	x10, #0x100, lsl #32
   17f18:	str	xzr, [x0, #8]
   17f1c:	mov	w9, #0x100                 	// #256
   17f20:	strb	wzr, [x0, #16]
   17f24:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   17f28:	stp	x7, x17, [x0, #24]
   17f2c:	add	x2, x2, #0xce8
   17f30:	str	x6, [x0, #40]
   17f34:	strh	wzr, [x0, #48]
   17f38:	stur	x16, [x0, #52]
   17f3c:	strb	w1, [x0, #60]
   17f40:	str	wzr, [x0, #64]
   17f44:	strb	w1, [x0, #68]
   17f48:	stur	q2, [x0, #72]
   17f4c:	str	x15, [x0, #88]
   17f50:	strh	w14, [x0, #96]
   17f54:	strb	w1, [x0, #98]
   17f58:	stp	x13, x5, [x0, #104]
   17f5c:	strh	wzr, [x0, #120]
   17f60:	strb	wzr, [x0, #122]
   17f64:	stp	q0, q0, [x0, #128]
   17f68:	strb	wzr, [x0, #160]
   17f6c:	str	w12, [x0, #164]
   17f70:	strh	w8, [x0, #168]
   17f74:	str	x4, [x0, #176]
   17f78:	str	w11, [x0, #184]
   17f7c:	strh	w8, [x0, #188]
   17f80:	str	wzr, [x0, #192]
   17f84:	str	x3, [x0, #200]
   17f88:	str	q1, [x0, #208]
   17f8c:	stp	x10, x2, [x0, #224]
   17f90:	str	w9, [x0, #240]
   17f94:	ret
   17f98:	mov	x2, #0xf8                  	// #248
   17f9c:	b	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   17fa0:	stp	x19, x20, [sp, #-80]!
   17fa4:	sub	x2, x2, #0x1
   17fa8:	mov	x19, x1
   17fac:	stp	x21, x22, [sp, #16]
   17fb0:	mov	x21, x0
   17fb4:	add	x20, x1, x2
   17fb8:	str	x30, [sp, #32]
   17fbc:	ldrb	w0, [x0]
   17fc0:	cbz	w0, 18098 <__sanitizer_set_report_fd@@Base+0x218>
   17fc4:	cmp	x1, x20
   17fc8:	b.cs	18064 <__sanitizer_set_report_fd@@Base+0x1e4>  // b.hs, b.nlast
   17fcc:	mov	w22, #0x6667                	// #26215
   17fd0:	movk	w22, #0x6666, lsl #16
   17fd4:	nop
   17fd8:	cmp	w0, #0x25
   17fdc:	b.ne	18088 <__sanitizer_set_report_fd@@Base+0x208>  // b.any
   17fe0:	ldrb	w1, [x21, #1]
   17fe4:	cmp	w1, #0x62
   17fe8:	b.eq	180b4 <__sanitizer_set_report_fd@@Base+0x234>  // b.none
   17fec:	cmp	w1, #0x70
   17ff0:	b.ne	18088 <__sanitizer_set_report_fd@@Base+0x208>  // b.any
   17ff4:	bl	1c7f8 <__sanitizer_set_report_fd@@Base+0x4978>
   17ff8:	add	x3, sp, #0x50
   17ffc:	nop
   18000:	smull	x1, w0, w22
   18004:	asr	x1, x1, #34
   18008:	sub	w1, w1, w0, asr #31
   1800c:	add	w2, w1, w1, lsl #2
   18010:	sub	w2, w0, w2, lsl #1
   18014:	mov	w0, w1
   18018:	add	w1, w2, #0x30
   1801c:	strb	w1, [x3, #-1]!
   18020:	cbnz	w0, 18000 <__sanitizer_set_report_fd@@Base+0x180>
   18024:	add	x0, sp, #0x50
   18028:	cmp	x0, x3
   1802c:	ccmp	x19, x20, #0x2, hi  // hi = pmore
   18030:	b.cs	18050 <__sanitizer_set_report_fd@@Base+0x1d0>  // b.hs, b.nlast
   18034:	nop
   18038:	ldrb	w0, [x3], #1
   1803c:	strb	w0, [x19], #1
   18040:	add	x0, sp, #0x50
   18044:	cmp	x19, x20
   18048:	ccmp	x0, x3, #0x0, cc  // cc = lo, ul, last
   1804c:	b.hi	18038 <__sanitizer_set_report_fd@@Base+0x1b8>  // b.pmore
   18050:	ldrb	w0, [x21, #2]
   18054:	add	x21, x21, #0x2
   18058:	cbz	w0, 18098 <__sanitizer_set_report_fd@@Base+0x218>
   1805c:	cmp	x19, x20
   18060:	b.cc	17fd8 <__sanitizer_set_report_fd@@Base+0x158>  // b.lo, b.ul, b.last
   18064:	cmp	x19, x20
   18068:	cset	x3, cc  // cc = lo, ul, last
   1806c:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   18070:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   18074:	add	x2, x2, #0xd58
   18078:	add	x0, x0, #0xd00
   1807c:	mov	x4, #0x0                   	// #0
   18080:	mov	w1, #0x47                  	// #71
   18084:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   18088:	add	x21, x21, #0x1
   1808c:	strb	w0, [x19], #1
   18090:	ldrb	w0, [x21]
   18094:	cbnz	w0, 1805c <__sanitizer_set_report_fd@@Base+0x1dc>
   18098:	cmp	x19, x20
   1809c:	b.cs	18108 <__sanitizer_set_report_fd@@Base+0x288>  // b.hs, b.nlast
   180a0:	strb	wzr, [x19]
   180a4:	ldp	x21, x22, [sp, #16]
   180a8:	ldr	x30, [sp, #32]
   180ac:	ldp	x19, x20, [sp], #80
   180b0:	ret
   180b4:	bl	14ea8 <_ZdaPvRKSt9nothrow_t@@Base+0x3128>
   180b8:	cbz	x0, 180e8 <__sanitizer_set_report_fd@@Base+0x268>
   180bc:	ldrb	w1, [x0]
   180c0:	cmp	w1, #0x0
   180c4:	ccmp	x19, x20, #0x2, ne  // ne = any
   180c8:	b.cs	18050 <__sanitizer_set_report_fd@@Base+0x1d0>  // b.hs, b.nlast
   180cc:	nop
   180d0:	strb	w1, [x19], #1
   180d4:	ldrb	w1, [x0, #1]!
   180d8:	cmp	w1, #0x0
   180dc:	ccmp	x19, x20, #0x2, ne  // ne = any
   180e0:	b.cc	180d0 <__sanitizer_set_report_fd@@Base+0x250>  // b.lo, b.ul, b.last
   180e4:	b	18050 <__sanitizer_set_report_fd@@Base+0x1d0>
   180e8:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   180ec:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   180f0:	add	x2, x2, #0xcf0
   180f4:	add	x0, x0, #0xd00
   180f8:	mov	x4, #0x0                   	// #0
   180fc:	mov	x3, #0x0                   	// #0
   18100:	mov	w1, #0x2f                  	// #47
   18104:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   18108:	mov	x3, #0x0                   	// #0
   1810c:	b	1806c <__sanitizer_set_report_fd@@Base+0x1ec>
   18110:	stp	x19, x20, [sp, #-48]!
   18114:	mov	x1, #0x20                  	// #32
   18118:	mov	x19, x0
   1811c:	stp	x21, x22, [sp, #16]
   18120:	adrp	x22, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   18124:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   18128:	ldr	x22, [x22, #3632]
   1812c:	str	x30, [sp, #32]
   18130:	add	x21, x21, #0x9b8
   18134:	adrp	x20, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   18138:	mov	x0, x22
   1813c:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18140:	mov	x2, x0
   18144:	add	x20, x20, #0x3e8
   18148:	adrp	x3, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   1814c:	add	x3, x3, #0xd78
   18150:	mov	x0, x19
   18154:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   18158:	stp	x21, x19, [x2]
   1815c:	add	x1, x1, #0xda0
   18160:	strb	wzr, [x2, #16]
   18164:	str	x20, [x2, #24]
   18168:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   1816c:	mov	x0, x22
   18170:	mov	x1, #0x20                  	// #32
   18174:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18178:	mov	x2, x0
   1817c:	mov	w4, #0x1                   	// #1
   18180:	mov	x0, x19
   18184:	ldr	x30, [sp, #32]
   18188:	stp	x21, x19, [x2]
   1818c:	adrp	x3, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   18190:	strb	w4, [x2, #16]
   18194:	add	x3, x3, #0xda8
   18198:	str	x20, [x2, #24]
   1819c:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   181a0:	ldp	x21, x22, [sp, #16]
   181a4:	add	x1, x1, #0xde0
   181a8:	ldp	x19, x20, [sp], #48
   181ac:	b	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   181b0:	stp	x19, x20, [sp, #-64]!
   181b4:	adrp	x20, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   181b8:	mov	x19, x0
   181bc:	ldr	x20, [x20, #3632]
   181c0:	stp	x21, x22, [sp, #16]
   181c4:	mov	x21, x1
   181c8:	mov	x0, x20
   181cc:	mov	x1, #0x10                  	// #16
   181d0:	stp	x23, x24, [sp, #32]
   181d4:	adrp	x22, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   181d8:	add	x22, x22, #0x8b8
   181dc:	stp	x25, x30, [sp, #48]
   181e0:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   181e4:	mov	x2, x0
   181e8:	adrp	x3, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   181ec:	add	x3, x3, #0xdf8
   181f0:	mov	x0, x19
   181f4:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   181f8:	stp	x22, x21, [x2]
   181fc:	add	x1, x1, #0xe70
   18200:	adrp	x23, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   18204:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   18208:	add	x23, x23, #0x998
   1820c:	mov	x0, x20
   18210:	mov	x1, #0x10                  	// #16
   18214:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18218:	mov	x2, x0
   1821c:	adrp	x3, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   18220:	add	x0, x21, #0x8
   18224:	add	x3, x3, #0xe80
   18228:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   1822c:	stp	x23, x0, [x2]
   18230:	add	x1, x1, #0xed8
   18234:	mov	x0, x19
   18238:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   1823c:	adrp	x25, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   18240:	mov	x0, x20
   18244:	mov	x1, #0x10                  	// #16
   18248:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   1824c:	mov	x2, x0
   18250:	add	x4, x21, #0x10
   18254:	adrp	x3, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   18258:	add	x3, x3, #0xef8
   1825c:	mov	x0, x19
   18260:	stp	x22, x4, [x2]
   18264:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   18268:	add	x1, x1, #0xf98
   1826c:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   18270:	add	x25, x25, #0x8d8
   18274:	mov	x0, x20
   18278:	mov	x1, #0x10                  	// #16
   1827c:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18280:	mov	x2, x0
   18284:	add	x4, x21, #0x18
   18288:	adrp	x3, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   1828c:	add	x3, x3, #0xfa8
   18290:	mov	x0, x19
   18294:	stp	x23, x4, [x2]
   18298:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   1829c:	add	x1, x1, #0xfe0
   182a0:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   182a4:	adrp	x24, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   182a8:	mov	x0, x20
   182ac:	mov	x1, #0x10                  	// #16
   182b0:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   182b4:	mov	x2, x0
   182b8:	add	x4, x21, #0x20
   182bc:	adrp	x3, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   182c0:	add	x3, x3, #0xff8
   182c4:	mov	x0, x19
   182c8:	stp	x22, x4, [x2]
   182cc:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   182d0:	add	x1, x1, #0x50
   182d4:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   182d8:	add	x24, x24, #0x978
   182dc:	mov	x0, x20
   182e0:	mov	x1, #0x10                  	// #16
   182e4:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   182e8:	mov	x2, x0
   182ec:	add	x4, x21, #0x21
   182f0:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   182f4:	add	x3, x3, #0x68
   182f8:	mov	x0, x19
   182fc:	stp	x22, x4, [x2]
   18300:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   18304:	add	x1, x1, #0xb8
   18308:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   1830c:	mov	x0, x20
   18310:	mov	x1, #0x10                  	// #16
   18314:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18318:	mov	x2, x0
   1831c:	add	x4, x21, #0x22
   18320:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   18324:	add	x3, x3, #0xd0
   18328:	mov	x0, x19
   1832c:	stp	x22, x4, [x2]
   18330:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   18334:	add	x1, x1, #0x118
   18338:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   1833c:	mov	x0, x20
   18340:	mov	x1, #0x10                  	// #16
   18344:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18348:	mov	x2, x0
   1834c:	add	x4, x21, #0x23
   18350:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   18354:	add	x3, x3, #0x130
   18358:	mov	x0, x19
   1835c:	stp	x22, x4, [x2]
   18360:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   18364:	add	x1, x1, #0x158
   18368:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   1836c:	mov	x0, x20
   18370:	mov	x1, #0x10                  	// #16
   18374:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18378:	mov	x2, x0
   1837c:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   18380:	add	x0, x21, #0x24
   18384:	add	x3, x3, #0x168
   18388:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   1838c:	stp	x25, x0, [x2]
   18390:	add	x1, x1, #0x1b0
   18394:	mov	x0, x19
   18398:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   1839c:	mov	x0, x20
   183a0:	mov	x1, #0x10                  	// #16
   183a4:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   183a8:	mov	x2, x0
   183ac:	add	x4, x21, #0x28
   183b0:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   183b4:	add	x3, x3, #0x1c8
   183b8:	mov	x0, x19
   183bc:	stp	x23, x4, [x2]
   183c0:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   183c4:	add	x1, x1, #0x230
   183c8:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   183cc:	mov	x0, x20
   183d0:	mov	x1, #0x10                  	// #16
   183d4:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   183d8:	mov	x2, x0
   183dc:	add	x4, x21, #0x30
   183e0:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   183e4:	add	x3, x3, #0x240
   183e8:	mov	x0, x19
   183ec:	stp	x22, x4, [x2]
   183f0:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   183f4:	add	x1, x1, #0x2b8
   183f8:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   183fc:	mov	x0, x20
   18400:	mov	x1, #0x10                  	// #16
   18404:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18408:	mov	x2, x0
   1840c:	add	x4, x21, #0x31
   18410:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   18414:	add	x3, x3, #0x2c8
   18418:	mov	x0, x19
   1841c:	stp	x22, x4, [x2]
   18420:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   18424:	add	x1, x1, #0x318
   18428:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   1842c:	mov	x0, x20
   18430:	mov	x1, #0x10                  	// #16
   18434:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18438:	mov	x2, x0
   1843c:	add	x4, x21, #0x34
   18440:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   18444:	add	x3, x3, #0x328
   18448:	mov	x0, x19
   1844c:	stp	x25, x4, [x2]
   18450:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   18454:	add	x1, x1, #0x370
   18458:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   1845c:	mov	x0, x20
   18460:	mov	x1, #0x10                  	// #16
   18464:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18468:	mov	x2, x0
   1846c:	add	x4, x21, #0x38
   18470:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   18474:	add	x3, x3, #0x380
   18478:	mov	x0, x19
   1847c:	stp	x22, x4, [x2]
   18480:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   18484:	add	x1, x1, #0x3f0
   18488:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   1848c:	mov	x0, x20
   18490:	mov	x1, #0x10                  	// #16
   18494:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18498:	mov	x2, x0
   1849c:	add	x4, x21, #0x39
   184a0:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   184a4:	add	x3, x3, #0x400
   184a8:	mov	x0, x19
   184ac:	stp	x22, x4, [x2]
   184b0:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   184b4:	add	x1, x1, #0x420
   184b8:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   184bc:	mov	x0, x20
   184c0:	mov	x1, #0x10                  	// #16
   184c4:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   184c8:	mov	x2, x0
   184cc:	add	x4, x21, #0x3a
   184d0:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   184d4:	add	x3, x3, #0x430
   184d8:	mov	x0, x19
   184dc:	stp	x22, x4, [x2]
   184e0:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   184e4:	add	x1, x1, #0x4d0
   184e8:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   184ec:	mov	x0, x20
   184f0:	mov	x1, #0x10                  	// #16
   184f4:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   184f8:	mov	x2, x0
   184fc:	add	x4, x21, #0x3b
   18500:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   18504:	add	x3, x3, #0x4e8
   18508:	mov	x0, x19
   1850c:	stp	x22, x4, [x2]
   18510:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   18514:	add	x1, x1, #0x538
   18518:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   1851c:	mov	x0, x20
   18520:	mov	x1, #0x10                  	// #16
   18524:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18528:	mov	x2, x0
   1852c:	add	x4, x21, #0x3c
   18530:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   18534:	add	x3, x3, #0x558
   18538:	mov	x0, x19
   1853c:	stp	x22, x4, [x2]
   18540:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   18544:	add	x1, x1, #0x5a8
   18548:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   1854c:	mov	x0, x20
   18550:	mov	x1, #0x10                  	// #16
   18554:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18558:	mov	x2, x0
   1855c:	add	x4, x21, #0x40
   18560:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   18564:	add	x3, x3, #0x5b8
   18568:	mov	x0, x19
   1856c:	stp	x25, x4, [x2]
   18570:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   18574:	add	x1, x1, #0x620
   18578:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   1857c:	mov	x0, x20
   18580:	mov	x1, #0x10                  	// #16
   18584:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18588:	mov	x2, x0
   1858c:	add	x4, x21, #0x44
   18590:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   18594:	add	x3, x3, #0x638
   18598:	mov	x0, x19
   1859c:	stp	x22, x4, [x2]
   185a0:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   185a4:	add	x1, x1, #0x650
   185a8:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   185ac:	mov	x0, x20
   185b0:	mov	x1, #0x10                  	// #16
   185b4:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   185b8:	mov	x2, x0
   185bc:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   185c0:	add	x0, x21, #0x48
   185c4:	add	x3, x3, #0x660
   185c8:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   185cc:	stp	x24, x0, [x2]
   185d0:	add	x1, x1, #0x720
   185d4:	mov	x0, x19
   185d8:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   185dc:	mov	x0, x20
   185e0:	mov	x1, #0x10                  	// #16
   185e4:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   185e8:	mov	x2, x0
   185ec:	add	x4, x21, #0x4c
   185f0:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   185f4:	add	x3, x3, #0x730
   185f8:	mov	x0, x19
   185fc:	stp	x24, x4, [x2]
   18600:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   18604:	add	x1, x1, #0x7f0
   18608:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   1860c:	mov	x0, x20
   18610:	mov	x1, #0x10                  	// #16
   18614:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18618:	mov	x2, x0
   1861c:	add	x4, x21, #0x50
   18620:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   18624:	add	x3, x3, #0x800
   18628:	mov	x0, x19
   1862c:	stp	x24, x4, [x2]
   18630:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   18634:	add	x1, x1, #0x8c0
   18638:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   1863c:	mov	x0, x20
   18640:	mov	x1, #0x10                  	// #16
   18644:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18648:	mov	x2, x0
   1864c:	add	x4, x21, #0x54
   18650:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   18654:	add	x3, x3, #0x8d0
   18658:	mov	x0, x19
   1865c:	stp	x24, x4, [x2]
   18660:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   18664:	add	x1, x1, #0x990
   18668:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   1866c:	mov	x0, x20
   18670:	mov	x1, #0x10                  	// #16
   18674:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18678:	mov	x2, x0
   1867c:	add	x4, x21, #0x58
   18680:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   18684:	add	x3, x3, #0x9a0
   18688:	mov	x0, x19
   1868c:	stp	x24, x4, [x2]
   18690:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   18694:	add	x1, x1, #0xa60
   18698:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   1869c:	mov	x0, x20
   186a0:	mov	x1, #0x10                  	// #16
   186a4:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   186a8:	mov	x2, x0
   186ac:	add	x4, x21, #0x5c
   186b0:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   186b4:	add	x3, x3, #0xa70
   186b8:	mov	x0, x19
   186bc:	stp	x24, x4, [x2]
   186c0:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   186c4:	add	x1, x1, #0xb30
   186c8:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   186cc:	adrp	x24, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   186d0:	mov	x0, x20
   186d4:	mov	x1, #0x10                  	// #16
   186d8:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   186dc:	mov	x2, x0
   186e0:	add	x4, x21, #0x60
   186e4:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   186e8:	add	x3, x3, #0xb40
   186ec:	mov	x0, x19
   186f0:	stp	x22, x4, [x2]
   186f4:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   186f8:	add	x1, x1, #0xbb0
   186fc:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   18700:	add	x24, x24, #0x8f8
   18704:	mov	x0, x20
   18708:	mov	x1, #0x10                  	// #16
   1870c:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18710:	mov	x2, x0
   18714:	add	x4, x21, #0x61
   18718:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   1871c:	add	x3, x3, #0xbc8
   18720:	mov	x0, x19
   18724:	stp	x22, x4, [x2]
   18728:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   1872c:	add	x1, x1, #0xc00
   18730:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   18734:	mov	x0, x20
   18738:	mov	x1, #0x10                  	// #16
   1873c:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18740:	mov	x2, x0
   18744:	add	x4, x21, #0x62
   18748:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   1874c:	add	x3, x3, #0xc10
   18750:	mov	x0, x19
   18754:	stp	x22, x4, [x2]
   18758:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   1875c:	add	x1, x1, #0xc38
   18760:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   18764:	mov	x0, x20
   18768:	mov	x1, #0x10                  	// #16
   1876c:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18770:	mov	x2, x0
   18774:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   18778:	add	x0, x21, #0x68
   1877c:	add	x3, x3, #0xc50
   18780:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   18784:	stp	x24, x0, [x2]
   18788:	add	x1, x1, #0xcc8
   1878c:	mov	x0, x19
   18790:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   18794:	mov	x0, x20
   18798:	mov	x1, #0x10                  	// #16
   1879c:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   187a0:	mov	x2, x0
   187a4:	add	x4, x21, #0x70
   187a8:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   187ac:	add	x3, x3, #0xce8
   187b0:	mov	x0, x19
   187b4:	stp	x23, x4, [x2]
   187b8:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   187bc:	add	x1, x1, #0xd10
   187c0:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   187c4:	mov	x0, x20
   187c8:	mov	x1, #0x10                  	// #16
   187cc:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   187d0:	mov	x2, x0
   187d4:	add	x4, x21, #0x78
   187d8:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   187dc:	add	x3, x3, #0xd18
   187e0:	mov	x0, x19
   187e4:	stp	x22, x4, [x2]
   187e8:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   187ec:	add	x1, x1, #0xd60
   187f0:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   187f4:	mov	x0, x20
   187f8:	mov	x1, #0x10                  	// #16
   187fc:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18800:	mov	x2, x0
   18804:	add	x4, x21, #0x79
   18808:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   1880c:	add	x3, x3, #0xd78
   18810:	mov	x0, x19
   18814:	stp	x22, x4, [x2]
   18818:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   1881c:	add	x1, x1, #0xd98
   18820:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   18824:	mov	x0, x20
   18828:	mov	x1, #0x10                  	// #16
   1882c:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18830:	mov	x2, x0
   18834:	add	x4, x21, #0x7a
   18838:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   1883c:	add	x3, x3, #0xdb0
   18840:	mov	x0, x19
   18844:	stp	x22, x4, [x2]
   18848:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   1884c:	add	x1, x1, #0xdd0
   18850:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   18854:	mov	x0, x20
   18858:	mov	x1, #0x10                  	// #16
   1885c:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18860:	mov	x2, x0
   18864:	add	x4, x21, #0x80
   18868:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   1886c:	add	x3, x3, #0xdd8
   18870:	mov	x0, x19
   18874:	stp	x24, x4, [x2]
   18878:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   1887c:	add	x1, x1, #0xe50
   18880:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   18884:	mov	x0, x20
   18888:	mov	x1, #0x10                  	// #16
   1888c:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18890:	mov	x2, x0
   18894:	add	x4, x21, #0x88
   18898:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   1889c:	add	x3, x3, #0xe60
   188a0:	mov	x0, x19
   188a4:	stp	x24, x4, [x2]
   188a8:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   188ac:	add	x1, x1, #0xf00
   188b0:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   188b4:	mov	x0, x20
   188b8:	mov	x1, #0x10                  	// #16
   188bc:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   188c0:	mov	x2, x0
   188c4:	add	x4, x21, #0x90
   188c8:	adrp	x3, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   188cc:	add	x3, x3, #0xf18
   188d0:	mov	x0, x19
   188d4:	stp	x24, x4, [x2]
   188d8:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   188dc:	add	x1, x1, #0x78
   188e0:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   188e4:	mov	x0, x20
   188e8:	mov	x1, #0x10                  	// #16
   188ec:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   188f0:	mov	x2, x0
   188f4:	add	x4, x21, #0x98
   188f8:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   188fc:	add	x3, x3, #0x90
   18900:	mov	x0, x19
   18904:	stp	x24, x4, [x2]
   18908:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   1890c:	add	x1, x1, #0x108
   18910:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   18914:	mov	x0, x20
   18918:	mov	x1, #0x10                  	// #16
   1891c:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18920:	mov	x2, x0
   18924:	add	x4, x21, #0xa0
   18928:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   1892c:	add	x3, x3, #0x120
   18930:	mov	x0, x19
   18934:	stp	x22, x4, [x2]
   18938:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   1893c:	add	x1, x1, #0x148
   18940:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   18944:	mov	x0, x20
   18948:	mov	x1, #0x10                  	// #16
   1894c:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18950:	mov	x2, x0
   18954:	add	x4, x21, #0xa4
   18958:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   1895c:	add	x3, x3, #0x158
   18960:	mov	x0, x19
   18964:	stp	x25, x4, [x2]
   18968:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   1896c:	add	x1, x1, #0x228
   18970:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   18974:	mov	x0, x20
   18978:	mov	x1, #0x10                  	// #16
   1897c:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18980:	mov	x2, x0
   18984:	add	x4, x21, #0xa8
   18988:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   1898c:	add	x3, x3, #0x250
   18990:	mov	x0, x19
   18994:	stp	x22, x4, [x2]
   18998:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   1899c:	add	x1, x1, #0x2b0
   189a0:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   189a4:	mov	x0, x20
   189a8:	mov	x1, #0x10                  	// #16
   189ac:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   189b0:	mov	x2, x0
   189b4:	add	x4, x21, #0xa9
   189b8:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   189bc:	add	x3, x3, #0x2c8
   189c0:	mov	x0, x19
   189c4:	stp	x22, x4, [x2]
   189c8:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   189cc:	add	x1, x1, #0x348
   189d0:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   189d4:	mov	x0, x20
   189d8:	mov	x1, #0x10                  	// #16
   189dc:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   189e0:	mov	x2, x0
   189e4:	add	x4, x21, #0xb0
   189e8:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   189ec:	add	x3, x3, #0x358
   189f0:	mov	x0, x19
   189f4:	stp	x23, x4, [x2]
   189f8:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   189fc:	add	x1, x1, #0x3a0
   18a00:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   18a04:	mov	x0, x20
   18a08:	mov	x1, #0x10                  	// #16
   18a0c:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18a10:	mov	x2, x0
   18a14:	add	x4, x21, #0xb8
   18a18:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   18a1c:	add	x3, x3, #0x3b0
   18a20:	mov	x0, x19
   18a24:	stp	x22, x4, [x2]
   18a28:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   18a2c:	add	x1, x1, #0x418
   18a30:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   18a34:	mov	x0, x20
   18a38:	mov	x1, #0x10                  	// #16
   18a3c:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18a40:	mov	x2, x0
   18a44:	add	x4, x21, #0xb9
   18a48:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   18a4c:	add	x3, x3, #0x430
   18a50:	mov	x0, x19
   18a54:	stp	x22, x4, [x2]
   18a58:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   18a5c:	add	x1, x1, #0x458
   18a60:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   18a64:	mov	x0, x20
   18a68:	mov	x1, #0x10                  	// #16
   18a6c:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18a70:	mov	x2, x0
   18a74:	add	x4, x21, #0xba
   18a78:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   18a7c:	add	x3, x3, #0x470
   18a80:	mov	x0, x19
   18a84:	stp	x22, x4, [x2]
   18a88:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   18a8c:	add	x1, x1, #0x540
   18a90:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   18a94:	mov	x0, x20
   18a98:	mov	x1, #0x10                  	// #16
   18a9c:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18aa0:	mov	x2, x0
   18aa4:	add	x4, x21, #0xbb
   18aa8:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   18aac:	add	x3, x3, #0x558
   18ab0:	mov	x0, x19
   18ab4:	stp	x22, x4, [x2]
   18ab8:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   18abc:	add	x1, x1, #0x5a0
   18ac0:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   18ac4:	mov	x0, x20
   18ac8:	mov	x1, #0x10                  	// #16
   18acc:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18ad0:	mov	x2, x0
   18ad4:	add	x4, x21, #0xbc
   18ad8:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   18adc:	add	x3, x3, #0x5b8
   18ae0:	mov	x0, x19
   18ae4:	stp	x22, x4, [x2]
   18ae8:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   18aec:	add	x1, x1, #0x5f0
   18af0:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   18af4:	mov	x0, x20
   18af8:	mov	x1, #0x10                  	// #16
   18afc:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18b00:	mov	x2, x0
   18b04:	add	x4, x21, #0xbd
   18b08:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   18b0c:	add	x3, x3, #0x608
   18b10:	mov	x0, x19
   18b14:	stp	x22, x4, [x2]
   18b18:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   18b1c:	add	x1, x1, #0x650
   18b20:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   18b24:	mov	x0, x20
   18b28:	mov	x1, #0x10                  	// #16
   18b2c:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18b30:	mov	x2, x0
   18b34:	add	x4, x21, #0xc0
   18b38:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   18b3c:	add	x3, x3, #0x668
   18b40:	mov	x0, x19
   18b44:	stp	x25, x4, [x2]
   18b48:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   18b4c:	add	x1, x1, #0x738
   18b50:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   18b54:	mov	x0, x20
   18b58:	mov	x1, #0x10                  	// #16
   18b5c:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18b60:	mov	x2, x0
   18b64:	add	x4, x21, #0xc8
   18b68:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   18b6c:	add	x3, x3, #0x750
   18b70:	mov	x0, x19
   18b74:	stp	x23, x4, [x2]
   18b78:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   18b7c:	add	x1, x1, #0x7e0
   18b80:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   18b84:	mov	x0, x20
   18b88:	mov	x1, #0x10                  	// #16
   18b8c:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18b90:	mov	x2, x0
   18b94:	add	x4, x21, #0xd0
   18b98:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   18b9c:	add	x3, x3, #0x7f8
   18ba0:	mov	x0, x19
   18ba4:	stp	x22, x4, [x2]
   18ba8:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   18bac:	add	x1, x1, #0x830
   18bb0:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   18bb4:	mov	x0, x20
   18bb8:	mov	x1, #0x10                  	// #16
   18bbc:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18bc0:	mov	x2, x0
   18bc4:	add	x4, x21, #0xd1
   18bc8:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   18bcc:	add	x3, x3, #0x850
   18bd0:	mov	x0, x19
   18bd4:	stp	x22, x4, [x2]
   18bd8:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   18bdc:	add	x1, x1, #0x890
   18be0:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   18be4:	mov	x0, x20
   18be8:	mov	x1, #0x10                  	// #16
   18bec:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18bf0:	mov	x2, x0
   18bf4:	add	x4, x21, #0xd2
   18bf8:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   18bfc:	add	x3, x3, #0x8a8
   18c00:	mov	x0, x19
   18c04:	stp	x22, x4, [x2]
   18c08:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   18c0c:	add	x1, x1, #0x900
   18c10:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   18c14:	mov	x0, x20
   18c18:	mov	x1, #0x10                  	// #16
   18c1c:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18c20:	mov	x2, x0
   18c24:	add	x4, x21, #0xd3
   18c28:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   18c2c:	add	x3, x3, #0x918
   18c30:	mov	x0, x19
   18c34:	stp	x22, x4, [x2]
   18c38:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   18c3c:	add	x1, x1, #0x970
   18c40:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   18c44:	mov	x0, x20
   18c48:	mov	x1, #0x10                  	// #16
   18c4c:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18c50:	mov	x2, x0
   18c54:	add	x4, x21, #0xd4
   18c58:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   18c5c:	add	x3, x3, #0x988
   18c60:	mov	x0, x19
   18c64:	stp	x22, x4, [x2]
   18c68:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   18c6c:	add	x1, x1, #0x9d8
   18c70:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   18c74:	mov	x0, x20
   18c78:	mov	x1, #0x10                  	// #16
   18c7c:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18c80:	mov	x2, x0
   18c84:	add	x4, x21, #0xd5
   18c88:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   18c8c:	add	x3, x3, #0x9f0
   18c90:	mov	x0, x19
   18c94:	stp	x22, x4, [x2]
   18c98:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   18c9c:	add	x1, x1, #0xa38
   18ca0:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   18ca4:	mov	x0, x20
   18ca8:	mov	x1, #0x10                  	// #16
   18cac:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18cb0:	mov	x2, x0
   18cb4:	add	x4, x21, #0xd6
   18cb8:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   18cbc:	add	x3, x3, #0xa50
   18cc0:	mov	x0, x19
   18cc4:	stp	x22, x4, [x2]
   18cc8:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   18ccc:	add	x1, x1, #0xaa8
   18cd0:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   18cd4:	mov	x0, x20
   18cd8:	mov	x1, #0x10                  	// #16
   18cdc:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18ce0:	mov	x2, x0
   18ce4:	add	x4, x21, #0xd7
   18ce8:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   18cec:	add	x3, x3, #0xac0
   18cf0:	mov	x0, x19
   18cf4:	stp	x22, x4, [x2]
   18cf8:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   18cfc:	add	x1, x1, #0xb08
   18d00:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   18d04:	mov	x0, x20
   18d08:	mov	x1, #0x10                  	// #16
   18d0c:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18d10:	mov	x2, x0
   18d14:	add	x4, x21, #0xd8
   18d18:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   18d1c:	add	x3, x3, #0xb20
   18d20:	mov	x0, x19
   18d24:	stp	x22, x4, [x2]
   18d28:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   18d2c:	add	x1, x1, #0xb80
   18d30:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   18d34:	mov	x0, x20
   18d38:	mov	x1, #0x10                  	// #16
   18d3c:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18d40:	mov	x2, x0
   18d44:	add	x4, x21, #0xd9
   18d48:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   18d4c:	add	x3, x3, #0xb98
   18d50:	mov	x0, x19
   18d54:	stp	x22, x4, [x2]
   18d58:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   18d5c:	add	x1, x1, #0xbe0
   18d60:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   18d64:	mov	x0, x20
   18d68:	mov	x1, #0x10                  	// #16
   18d6c:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18d70:	mov	x2, x0
   18d74:	add	x4, x21, #0xda
   18d78:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   18d7c:	add	x3, x3, #0xbf8
   18d80:	mov	x0, x19
   18d84:	stp	x22, x4, [x2]
   18d88:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   18d8c:	add	x1, x1, #0xc50
   18d90:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   18d94:	mov	x0, x20
   18d98:	mov	x1, #0x10                  	// #16
   18d9c:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18da0:	mov	x2, x0
   18da4:	add	x4, x21, #0xdb
   18da8:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   18dac:	add	x3, x3, #0xc60
   18db0:	mov	x0, x19
   18db4:	stp	x22, x4, [x2]
   18db8:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   18dbc:	add	x1, x1, #0xca0
   18dc0:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   18dc4:	mov	x0, x20
   18dc8:	mov	x1, #0x10                  	// #16
   18dcc:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18dd0:	mov	x2, x0
   18dd4:	add	x4, x21, #0xdc
   18dd8:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   18ddc:	add	x3, x3, #0xcb8
   18de0:	mov	x0, x19
   18de4:	stp	x22, x4, [x2]
   18de8:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   18dec:	add	x1, x1, #0xd10
   18df0:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   18df4:	mov	x0, x20
   18df8:	mov	x1, #0x10                  	// #16
   18dfc:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18e00:	mov	x2, x0
   18e04:	add	x4, x21, #0xdd
   18e08:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   18e0c:	add	x3, x3, #0xd28
   18e10:	mov	x0, x19
   18e14:	stp	x22, x4, [x2]
   18e18:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   18e1c:	add	x1, x1, #0xd70
   18e20:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   18e24:	mov	x0, x20
   18e28:	mov	x1, #0x10                  	// #16
   18e2c:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18e30:	mov	x2, x0
   18e34:	add	x4, x21, #0xde
   18e38:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   18e3c:	add	x3, x3, #0xd80
   18e40:	mov	x0, x19
   18e44:	stp	x22, x4, [x2]
   18e48:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   18e4c:	add	x1, x1, #0xdc8
   18e50:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   18e54:	mov	x0, x20
   18e58:	mov	x1, #0x10                  	// #16
   18e5c:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18e60:	mov	x2, x0
   18e64:	add	x4, x21, #0xdf
   18e68:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   18e6c:	add	x3, x3, #0xdd8
   18e70:	mov	x0, x19
   18e74:	stp	x22, x4, [x2]
   18e78:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   18e7c:	add	x1, x1, #0xe28
   18e80:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   18e84:	mov	x0, x20
   18e88:	mov	x1, #0x10                  	// #16
   18e8c:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18e90:	mov	x2, x0
   18e94:	add	x1, x21, #0xe0
   18e98:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   18e9c:	add	x3, x3, #0xe40
   18ea0:	stp	x25, x1, [x0]
   18ea4:	mov	x0, x19
   18ea8:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   18eac:	add	x1, x1, #0xe80
   18eb0:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   18eb4:	mov	x0, x20
   18eb8:	mov	x1, #0x10                  	// #16
   18ebc:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18ec0:	mov	x2, x0
   18ec4:	add	x4, x21, #0xe4
   18ec8:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   18ecc:	add	x3, x3, #0xe90
   18ed0:	mov	x0, x19
   18ed4:	stp	x22, x4, [x2]
   18ed8:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   18edc:	add	x1, x1, #0xee8
   18ee0:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   18ee4:	mov	x0, x20
   18ee8:	mov	x1, #0x10                  	// #16
   18eec:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18ef0:	mov	x2, x0
   18ef4:	add	x4, x21, #0xe5
   18ef8:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   18efc:	add	x3, x3, #0xef8
   18f00:	mov	x0, x19
   18f04:	stp	x22, x4, [x2]
   18f08:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   18f0c:	add	x1, x1, #0xf60
   18f10:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   18f14:	mov	x0, x20
   18f18:	mov	x1, #0x10                  	// #16
   18f1c:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18f20:	mov	x2, x0
   18f24:	add	x4, x21, #0xe6
   18f28:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   18f2c:	add	x3, x3, #0xf78
   18f30:	mov	x0, x19
   18f34:	stp	x22, x4, [x2]
   18f38:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   18f3c:	add	x1, x1, #0xfa8
   18f40:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   18f44:	mov	x0, x20
   18f48:	mov	x1, #0x10                  	// #16
   18f4c:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18f50:	mov	x2, x0
   18f54:	add	x4, x21, #0xe7
   18f58:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   18f5c:	add	x3, x3, #0xfb8
   18f60:	mov	x0, x19
   18f64:	stp	x22, x4, [x2]
   18f68:	adrp	x1, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   18f6c:	add	x1, x1, #0xfd8
   18f70:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   18f74:	mov	x0, x20
   18f78:	mov	x1, #0x10                  	// #16
   18f7c:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18f80:	mov	x2, x0
   18f84:	add	x4, x21, #0xe8
   18f88:	adrp	x3, 39000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x5398>
   18f8c:	add	x3, x3, #0xfe8
   18f90:	mov	x0, x19
   18f94:	stp	x23, x4, [x2]
   18f98:	adrp	x1, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   18f9c:	add	x1, x1, #0x0
   18fa0:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   18fa4:	mov	x0, x20
   18fa8:	mov	x1, #0x10                  	// #16
   18fac:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18fb0:	mov	x2, x0
   18fb4:	add	x4, x21, #0xf0
   18fb8:	adrp	x3, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   18fbc:	add	x3, x3, #0x10
   18fc0:	mov	x0, x19
   18fc4:	stp	x22, x4, [x2]
   18fc8:	adrp	x1, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   18fcc:	add	x1, x1, #0x58
   18fd0:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   18fd4:	mov	x0, x20
   18fd8:	mov	x1, #0x10                  	// #16
   18fdc:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   18fe0:	mov	x2, x0
   18fe4:	add	x4, x21, #0xf1
   18fe8:	adrp	x3, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   18fec:	add	x3, x3, #0x70
   18ff0:	mov	x0, x19
   18ff4:	stp	x22, x4, [x2]
   18ff8:	adrp	x1, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   18ffc:	add	x1, x1, #0xd0
   19000:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   19004:	mov	x0, x20
   19008:	mov	x1, #0x10                  	// #16
   1900c:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   19010:	mov	x2, x0
   19014:	add	x4, x21, #0xf2
   19018:	adrp	x3, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1901c:	add	x3, x3, #0xe0
   19020:	mov	x0, x19
   19024:	stp	x22, x4, [x2]
   19028:	adrp	x1, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1902c:	add	x1, x1, #0x138
   19030:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   19034:	add	x21, x21, #0xf3
   19038:	mov	x0, x20
   1903c:	mov	x1, #0x10                  	// #16
   19040:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   19044:	mov	x2, x0
   19048:	adrp	x3, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1904c:	add	x3, x3, #0x150
   19050:	mov	x0, x19
   19054:	adrp	x1, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   19058:	stp	x22, x21, [x2]
   1905c:	add	x1, x1, #0x198
   19060:	adrp	x22, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   19064:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   19068:	add	x22, x22, #0x9b8
   1906c:	mov	x0, x20
   19070:	mov	x1, #0x20                  	// #32
   19074:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   19078:	mov	x2, x0
   1907c:	adrp	x21, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   19080:	adrp	x3, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   19084:	add	x21, x21, #0x3e8
   19088:	add	x3, x3, #0xd78
   1908c:	stp	x22, x19, [x2]
   19090:	mov	x0, x19
   19094:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   19098:	strb	wzr, [x2, #16]
   1909c:	add	x1, x1, #0xda0
   190a0:	str	x21, [x2, #24]
   190a4:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   190a8:	mov	x0, x20
   190ac:	mov	x1, #0x20                  	// #32
   190b0:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   190b4:	mov	x2, x0
   190b8:	mov	w4, #0x1                   	// #1
   190bc:	mov	x0, x19
   190c0:	ldp	x23, x24, [sp, #32]
   190c4:	strb	w4, [x2, #16]
   190c8:	ldp	x25, x30, [sp, #48]
   190cc:	stp	x22, x19, [x2]
   190d0:	adrp	x3, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   190d4:	str	x21, [x2, #24]
   190d8:	add	x3, x3, #0xda8
   190dc:	ldp	x21, x22, [sp, #16]
   190e0:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   190e4:	ldp	x19, x20, [sp], #64
   190e8:	add	x1, x1, #0xde0
   190ec:	b	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   190f0:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   190f4:	ldrb	w4, [x0, #231]
   190f8:	ldr	w3, [x0, #52]
   190fc:	ldr	x2, [x1, #3816]
   19100:	ldrb	w1, [x0, #169]
   19104:	orr	w1, w1, w4
   19108:	str	w3, [x2]
   1910c:	strb	w1, [x0, #169]
   19110:	ret
   19114:	nop
   19118:	mov	x2, x0
   1911c:	mov	w0, #0x1                   	// #1
   19120:	ldr	x2, [x2, #8]
   19124:	str	x1, [x2]
   19128:	ret
   1912c:	nop
   19130:	mov	x3, x0
   19134:	stp	x19, x30, [sp, #-16]!
   19138:	mov	x19, x2
   1913c:	mov	x0, x1
   19140:	mov	x1, x2
   19144:	ldr	x3, [x3, #8]
   19148:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   1914c:	add	x2, x2, #0xc98
   19150:	ldr	w3, [x3]
   19154:	bl	1f928 <__sanitizer_on_print@@Base+0x8>
   19158:	cmp	x19, w0, sxtw
   1915c:	cset	w0, hi  // hi = pmore
   19160:	ldp	x19, x30, [sp], #16
   19164:	ret
   19168:	mov	x3, x0
   1916c:	stp	x19, x30, [sp, #-16]!
   19170:	mov	x19, x2
   19174:	mov	x0, x1
   19178:	mov	x1, x2
   1917c:	ldr	x3, [x3, #24]
   19180:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   19184:	add	x2, x2, #0xcb8
   19188:	bl	1f928 <__sanitizer_on_print@@Base+0x8>
   1918c:	cmp	x19, w0, sxtw
   19190:	cset	w0, hi  // hi = pmore
   19194:	ldp	x19, x30, [sp], #16
   19198:	ret
   1919c:	nop
   191a0:	mov	x3, x0
   191a4:	stp	x19, x30, [sp, #-16]!
   191a8:	mov	x19, x2
   191ac:	mov	x0, x1
   191b0:	mov	x1, x2
   191b4:	ldr	x3, [x3, #8]
   191b8:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   191bc:	add	x2, x2, #0xcb8
   191c0:	ldr	x3, [x3]
   191c4:	bl	1f928 <__sanitizer_on_print@@Base+0x8>
   191c8:	cmp	x19, w0, sxtw
   191cc:	cset	w0, hi  // hi = pmore
   191d0:	ldp	x19, x30, [sp], #16
   191d4:	ret
   191d8:	stp	x19, x20, [sp, #-32]!
   191dc:	mov	x19, x1
   191e0:	mov	x20, x0
   191e4:	mov	x0, x1
   191e8:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   191ec:	add	x1, x1, #0xd20
   191f0:	str	x30, [sp, #16]
   191f4:	bl	1a560 <__sanitizer_set_report_fd@@Base+0x26e0>
   191f8:	cbnz	w0, 19218 <__sanitizer_set_report_fd@@Base+0x1398>
   191fc:	mov	w1, #0x0                   	// #0
   19200:	ldr	x2, [x20, #8]
   19204:	mov	w0, #0x1                   	// #1
   19208:	ldr	x30, [sp, #16]
   1920c:	str	w1, [x2]
   19210:	ldp	x19, x20, [sp], #32
   19214:	ret
   19218:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   1921c:	mov	x0, x19
   19220:	add	x1, x1, #0xd28
   19224:	bl	1a560 <__sanitizer_set_report_fd@@Base+0x26e0>
   19228:	cbz	w0, 191fc <__sanitizer_set_report_fd@@Base+0x137c>
   1922c:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   19230:	mov	x0, x19
   19234:	add	x1, x1, #0xcb0
   19238:	bl	1a560 <__sanitizer_set_report_fd@@Base+0x26e0>
   1923c:	cbz	w0, 191fc <__sanitizer_set_report_fd@@Base+0x137c>
   19240:	adrp	x1, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb398>
   19244:	mov	x0, x19
   19248:	add	x1, x1, #0x400
   1924c:	bl	1a560 <__sanitizer_set_report_fd@@Base+0x26e0>
   19250:	cbz	w0, 19268 <__sanitizer_set_report_fd@@Base+0x13e8>
   19254:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   19258:	mov	x0, x19
   1925c:	add	x1, x1, #0xd30
   19260:	bl	1a560 <__sanitizer_set_report_fd@@Base+0x26e0>
   19264:	cbnz	w0, 19270 <__sanitizer_set_report_fd@@Base+0x13f0>
   19268:	mov	w1, #0x1                   	// #1
   1926c:	b	19200 <__sanitizer_set_report_fd@@Base+0x1380>
   19270:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   19274:	mov	x0, x19
   19278:	add	x1, x1, #0xca8
   1927c:	bl	1a560 <__sanitizer_set_report_fd@@Base+0x26e0>
   19280:	cbz	w0, 19268 <__sanitizer_set_report_fd@@Base+0x13e8>
   19284:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   19288:	mov	x0, x19
   1928c:	add	x1, x1, #0xf40
   19290:	bl	1a560 <__sanitizer_set_report_fd@@Base+0x26e0>
   19294:	cbz	w0, 192cc <__sanitizer_set_report_fd@@Base+0x144c>
   19298:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   1929c:	mov	x0, x19
   192a0:	add	x1, x1, #0xc90
   192a4:	bl	1a560 <__sanitizer_set_report_fd@@Base+0x26e0>
   192a8:	cbz	w0, 192cc <__sanitizer_set_report_fd@@Base+0x144c>
   192ac:	mov	x1, x19
   192b0:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   192b4:	add	x0, x0, #0xca0
   192b8:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   192bc:	mov	w0, #0x0                   	// #0
   192c0:	ldr	x30, [sp, #16]
   192c4:	ldp	x19, x20, [sp], #32
   192c8:	ret
   192cc:	ldr	x1, [x20, #8]
   192d0:	mov	w2, #0x2                   	// #2
   192d4:	mov	w0, #0x1                   	// #1
   192d8:	ldr	x30, [sp, #16]
   192dc:	str	w2, [x1]
   192e0:	ldp	x19, x20, [sp], #32
   192e4:	ret
   192e8:	stp	x19, x20, [sp, #-32]!
   192ec:	mov	x20, x0
   192f0:	mov	x19, x1
   192f4:	str	x30, [sp, #24]
   192f8:	mov	x0, x1
   192fc:	str	x19, [x20, #24]
   19300:	mov	w1, #0x25                  	// #37
   19304:	bl	1a5e8 <__sanitizer_set_report_fd@@Base+0x2768>
   19308:	cbz	x0, 1936c <__sanitizer_set_report_fd@@Base+0x14ec>
   1930c:	mov	w2, #0x0                   	// #0
   19310:	adrp	x1, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   19314:	mov	x0, #0x1000                	// #4096
   19318:	add	x1, x1, #0x1b8
   1931c:	str	x21, [sp, #16]
   19320:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   19324:	mov	x21, x0
   19328:	mov	x2, #0x1000                	// #4096
   1932c:	mov	x0, x19
   19330:	mov	x1, x21
   19334:	bl	17fa0 <__sanitizer_set_report_fd@@Base+0x120>
   19338:	ldrb	w2, [x20, #16]
   1933c:	mov	x1, x21
   19340:	ldr	x0, [x20, #8]
   19344:	bl	19ab8 <__sanitizer_set_report_fd@@Base+0x1c38>
   19348:	mov	w19, w0
   1934c:	mov	x1, #0x1000                	// #4096
   19350:	mov	x0, x21
   19354:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   19358:	mov	w0, w19
   1935c:	ldr	x21, [sp, #16]
   19360:	ldr	x30, [sp, #24]
   19364:	ldp	x19, x20, [sp], #32
   19368:	ret
   1936c:	ldrb	w2, [x20, #16]
   19370:	mov	x1, x19
   19374:	ldr	x0, [x20, #8]
   19378:	ldr	x30, [sp, #24]
   1937c:	ldp	x19, x20, [sp], #32
   19380:	b	19ab8 <__sanitizer_set_report_fd@@Base+0x1c38>
   19384:	nop
   19388:	stp	x19, x20, [sp, #-48]!
   1938c:	stp	x21, x22, [sp, #16]
   19390:	adrp	x21, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   19394:	add	x19, x21, #0x610
   19398:	str	x30, [sp, #32]
   1939c:	ldr	w1, [x19, #160]
   193a0:	cbnz	w1, 193b4 <__sanitizer_set_report_fd@@Base+0x1534>
   193a4:	ldp	x21, x22, [sp, #16]
   193a8:	ldr	x30, [sp, #32]
   193ac:	ldp	x19, x20, [sp], #48
   193b0:	ret
   193b4:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   193b8:	add	x0, x0, #0x1f0
   193bc:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   193c0:	ldr	w0, [x19, #160]
   193c4:	cmp	w0, #0x0
   193c8:	b.le	193f4 <__sanitizer_set_report_fd@@Base+0x1574>
   193cc:	adrp	x22, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   193d0:	add	x22, x22, #0x220
   193d4:	mov	x20, #0x0                   	// #0
   193d8:	ldr	x1, [x19, x20, lsl #3]
   193dc:	mov	x0, x22
   193e0:	add	x20, x20, #0x1
   193e4:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   193e8:	ldr	w0, [x19, #160]
   193ec:	cmp	w0, w20
   193f0:	b.gt	193d8 <__sanitizer_set_report_fd@@Base+0x1558>
   193f4:	add	x21, x21, #0x610
   193f8:	ldr	x30, [sp, #32]
   193fc:	str	wzr, [x21, #160]
   19400:	ldp	x21, x22, [sp, #16]
   19404:	ldp	x19, x20, [sp], #48
   19408:	ret
   1940c:	nop
   19410:	stp	x19, x20, [sp, #-32]!
   19414:	stp	x21, x30, [sp, #16]
   19418:	mov	x21, x1
   1941c:	mov	x0, x21
   19420:	mov	x1, x2
   19424:	bl	1b558 <__sanitizer_set_report_fd@@Base+0x36d8>
   19428:	adrp	x1, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   1942c:	mov	x19, x0
   19430:	add	x0, x1, #0x610
   19434:	add	x1, x19, #0x1
   19438:	add	x0, x0, #0xa8
   1943c:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   19440:	mov	x20, x0
   19444:	mov	x1, x21
   19448:	mov	x2, x19
   1944c:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   19450:	mov	x0, x20
   19454:	strb	wzr, [x20, x19]
   19458:	ldp	x21, x30, [sp, #16]
   1945c:	ldp	x19, x20, [sp], #32
   19460:	ret
   19464:	nop
   19468:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   1946c:	stp	x19, x20, [sp, #-192]!
   19470:	mov	x20, x0
   19474:	ldr	x1, [x1, #4024]
   19478:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1947c:	add	x0, x0, #0x228
   19480:	strb	wzr, [sp, #191]
   19484:	ldr	x1, [x1]
   19488:	str	x30, [sp, #48]
   1948c:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   19490:	ldr	w0, [x20, #8]
   19494:	cmp	w0, #0x0
   19498:	b.le	19564 <__sanitizer_set_report_fd@@Base+0x16e4>
   1949c:	mov	x19, #0x0                   	// #0
   194a0:	stp	x21, x22, [sp, #16]
   194a4:	add	x22, sp, #0x40
   194a8:	mov	w21, #0x0                   	// #0
   194ac:	stp	x23, x24, [sp, #32]
   194b0:	adrp	x24, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   194b4:	adrp	x23, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   194b8:	add	x24, x24, #0x3e8
   194bc:	add	x23, x23, #0x2e0
   194c0:	b	194f8 <__sanitizer_set_report_fd@@Base+0x1678>
   194c4:	add	x2, x1, x19
   194c8:	mov	x0, x23
   194cc:	ldr	x1, [x1, x19]
   194d0:	mov	x4, x22
   194d4:	ldr	x2, [x2, #8]
   194d8:	adrp	x3, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   194dc:	add	x3, x3, #0x2d0
   194e0:	add	w21, w21, #0x1
   194e4:	add	x19, x19, #0x18
   194e8:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   194ec:	ldr	w0, [x20, #8]
   194f0:	cmp	w0, w21
   194f4:	b.le	1955c <__sanitizer_set_report_fd@@Base+0x16dc>
   194f8:	ldr	x3, [x20]
   194fc:	mov	x1, x22
   19500:	mov	x2, #0x80                  	// #128
   19504:	add	x3, x3, x19
   19508:	ldr	x0, [x3, #16]
   1950c:	ldr	x3, [x0]
   19510:	ldr	x3, [x3, #8]
   19514:	blr	x3
   19518:	and	w0, w0, #0xff
   1951c:	ldrb	w3, [sp, #191]
   19520:	cbnz	x3, 19570 <__sanitizer_set_report_fd@@Base+0x16f0>
   19524:	ldr	x1, [x20]
   19528:	cbz	w0, 194c4 <__sanitizer_set_report_fd@@Base+0x1644>
   1952c:	add	x2, x1, x19
   19530:	mov	x0, x23
   19534:	ldr	x1, [x1, x19]
   19538:	mov	x4, x22
   1953c:	ldr	x2, [x2, #8]
   19540:	mov	x3, x24
   19544:	add	w21, w21, #0x1
   19548:	add	x19, x19, #0x18
   1954c:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   19550:	ldr	w0, [x20, #8]
   19554:	cmp	w0, w21
   19558:	b.gt	194f8 <__sanitizer_set_report_fd@@Base+0x1678>
   1955c:	ldp	x21, x22, [sp, #16]
   19560:	ldp	x23, x24, [sp, #32]
   19564:	ldr	x30, [sp, #48]
   19568:	ldp	x19, x20, [sp], #192
   1956c:	ret
   19570:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   19574:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   19578:	add	x2, x2, #0x248
   1957c:	add	x0, x0, #0x278
   19580:	mov	x4, #0x0                   	// #0
   19584:	mov	w1, #0x40                  	// #64
   19588:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   1958c:	nop
   19590:	adrp	x3, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   19594:	mov	x2, x1
   19598:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1959c:	add	x0, x0, #0x308
   195a0:	ldr	x3, [x3, #4024]
   195a4:	str	x30, [sp, #-16]!
   195a8:	ldr	x1, [x3]
   195ac:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   195b0:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   195b4:	nop
   195b8:	and	w1, w1, #0xff
   195bc:	cmp	w1, #0x20
   195c0:	cset	w0, eq  // eq = none
   195c4:	cmp	w1, #0x2c
   195c8:	csinc	w0, w0, wzr, ne  // ne = any
   195cc:	cbnz	w0, 195e4 <__sanitizer_set_report_fd@@Base+0x1764>
   195d0:	cmp	w1, #0x3a
   195d4:	cset	w0, eq  // eq = none
   195d8:	cmp	w1, #0xa
   195dc:	csinc	w0, w0, wzr, ne  // ne = any
   195e0:	cbz	w0, 195e8 <__sanitizer_set_report_fd@@Base+0x1768>
   195e4:	ret
   195e8:	and	w1, w1, #0xfffffffb
   195ec:	cmp	w1, #0x9
   195f0:	cset	w0, eq  // eq = none
   195f4:	ret
   195f8:	ldp	x4, x2, [x0, #16]
   195fc:	mov	w5, #0x2c                  	// #44
   19600:	ldrb	w1, [x4, x2]
   19604:	add	x2, x2, #0x1
   19608:	cmp	w1, #0x20
   1960c:	ccmp	w1, w5, #0x4, ne  // ne = any
   19610:	b.eq	19634 <__sanitizer_set_report_fd@@Base+0x17b4>  // b.none
   19614:	sub	w3, w1, #0x9
   19618:	cmp	w1, #0x3a
   1961c:	and	w3, w3, #0xff
   19620:	b.eq	19634 <__sanitizer_set_report_fd@@Base+0x17b4>  // b.none
   19624:	cmp	w3, #0x1
   19628:	ccmp	w1, #0xd, #0x4, hi  // hi = pmore
   1962c:	b.eq	19634 <__sanitizer_set_report_fd@@Base+0x17b4>  // b.none
   19630:	ret
   19634:	str	x2, [x0, #24]
   19638:	b	19600 <__sanitizer_set_report_fd@@Base+0x1780>
   1963c:	nop
   19640:	stp	x19, x20, [sp, #-64]!
   19644:	mov	x2, x1
   19648:	mov	x19, x0
   1964c:	ldp	x5, x1, [x0, #16]
   19650:	stp	x21, x22, [sp, #16]
   19654:	stp	x23, x24, [sp, #32]
   19658:	str	x30, [sp, #48]
   1965c:	add	x20, x5, x1
   19660:	ldrb	w3, [x5, x1]
   19664:	cmp	w3, #0x3d
   19668:	ccmp	w3, #0x0, #0x4, ne  // ne = any
   1966c:	b.eq	196f0 <__sanitizer_set_report_fd@@Base+0x1870>  // b.none
   19670:	add	x4, x1, #0x1
   19674:	mov	w6, #0x2c                  	// #44
   19678:	b	196b4 <__sanitizer_set_report_fd@@Base+0x1834>
   1967c:	cmp	w3, #0x3a
   19680:	b.eq	196c0 <__sanitizer_set_report_fd@@Base+0x1840>  // b.none
   19684:	sub	w0, w3, #0x9
   19688:	and	w0, w0, #0xff
   1968c:	cmp	w0, #0x1
   19690:	ccmp	w3, #0xd, #0x4, hi  // hi = pmore
   19694:	b.eq	196c0 <__sanitizer_set_report_fd@@Base+0x1840>  // b.none
   19698:	str	x4, [x19, #24]
   1969c:	add	x0, x4, #0x1
   196a0:	ldrb	w3, [x5, x4]
   196a4:	cmp	w3, #0x3d
   196a8:	ccmp	w3, #0x0, #0x4, ne  // ne = any
   196ac:	b.eq	196f8 <__sanitizer_set_report_fd@@Base+0x1878>  // b.none
   196b0:	mov	x4, x0
   196b4:	cmp	w3, #0x20
   196b8:	ccmp	w3, w6, #0x4, ne  // ne = any
   196bc:	b.ne	1967c <__sanitizer_set_report_fd@@Base+0x17fc>  // b.any
   196c0:	cbz	x2, 196e0 <__sanitizer_set_report_fd@@Base+0x1860>
   196c4:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   196c8:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   196cc:	add	x0, x0, #0x318
   196d0:	ldr	x1, [x1, #4024]
   196d4:	ldr	x1, [x1]
   196d8:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   196dc:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   196e0:	adrp	x1, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   196e4:	mov	x0, x19
   196e8:	add	x1, x1, #0x338
   196ec:	bl	19590 <__sanitizer_set_report_fd@@Base+0x1710>
   196f0:	mov	x4, x1
   196f4:	nop
   196f8:	cmp	w3, #0x3d
   196fc:	b.ne	196c0 <__sanitizer_set_report_fd@@Base+0x1840>  // b.any
   19700:	sub	x1, x4, x1
   19704:	mov	x0, x20
   19708:	bl	1b558 <__sanitizer_set_report_fd@@Base+0x36d8>
   1970c:	adrp	x23, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   19710:	mov	x21, x0
   19714:	add	x0, x23, #0x610
   19718:	add	x1, x21, #0x1
   1971c:	add	x0, x0, #0xa8
   19720:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   19724:	mov	x22, x0
   19728:	mov	x2, x21
   1972c:	mov	x1, x20
   19730:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   19734:	strb	wzr, [x22, x21]
   19738:	mov	w0, #0x22                  	// #34
   1973c:	ldp	x4, x2, [x19, #16]
   19740:	add	x5, x2, #0x1
   19744:	str	x5, [x19, #24]
   19748:	add	x21, x4, x5
   1974c:	ldrb	w1, [x4, x5]
   19750:	cmp	w1, #0x27
   19754:	ccmp	w1, w0, #0x4, ne  // ne = any
   19758:	b.eq	197d8 <__sanitizer_set_report_fd@@Base+0x1958>  // b.none
   1975c:	cbz	w1, 19948 <__sanitizer_set_report_fd@@Base+0x1ac8>
   19760:	mov	x3, x5
   19764:	mov	w6, #0x2c                  	// #44
   19768:	cmp	w1, #0x20
   1976c:	ccmp	w1, w6, #0x4, ne  // ne = any
   19770:	b.eq	197a0 <__sanitizer_set_report_fd@@Base+0x1920>  // b.none
   19774:	cmp	w1, #0x3a
   19778:	b.eq	197a0 <__sanitizer_set_report_fd@@Base+0x1920>  // b.none
   1977c:	sub	w0, w1, #0x9
   19780:	and	w0, w0, #0xff
   19784:	cmp	w0, #0x1
   19788:	ccmp	w1, #0xd, #0x4, hi  // hi = pmore
   1978c:	b.ne	198c8 <__sanitizer_set_report_fd@@Base+0x1a48>  // b.any
   19790:	cmp	w0, #0x1
   19794:	ccmp	w1, #0xd, #0x4, hi  // hi = pmore
   19798:	b.ne	19914 <__sanitizer_set_report_fd@@Base+0x1a94>  // b.any
   1979c:	nop
   197a0:	sub	x1, x3, x5
   197a4:	mov	x0, x21
   197a8:	bl	1b558 <__sanitizer_set_report_fd@@Base+0x36d8>
   197ac:	mov	x20, x0
   197b0:	add	x0, x23, #0x610
   197b4:	add	x1, x20, #0x1
   197b8:	add	x0, x0, #0xa8
   197bc:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   197c0:	mov	x24, x0
   197c4:	mov	x1, x21
   197c8:	mov	x2, x20
   197cc:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   197d0:	strb	wzr, [x24, x20]
   197d4:	b	19850 <__sanitizer_set_report_fd@@Base+0x19d0>
   197d8:	add	x1, x2, #0x2
   197dc:	str	x1, [x19, #24]
   197e0:	add	x21, x4, x1
   197e4:	ldrb	w2, [x4, x5]
   197e8:	ldrb	w0, [x4, x1]
   197ec:	cbnz	w0, 19804 <__sanitizer_set_report_fd@@Base+0x1984>
   197f0:	b	19904 <__sanitizer_set_report_fd@@Base+0x1a84>
   197f4:	add	x1, x1, #0x1
   197f8:	str	x1, [x19, #24]
   197fc:	ldrb	w0, [x4, x1]
   19800:	cbz	w0, 19904 <__sanitizer_set_report_fd@@Base+0x1a84>
   19804:	cmp	w0, w2
   19808:	b.ne	197f4 <__sanitizer_set_report_fd@@Base+0x1974>  // b.any
   1980c:	mvn	x5, x5
   19810:	mov	x0, x21
   19814:	add	x1, x5, x1
   19818:	bl	1b558 <__sanitizer_set_report_fd@@Base+0x36d8>
   1981c:	mov	x20, x0
   19820:	add	x1, x23, #0x610
   19824:	add	x0, x1, #0xa8
   19828:	add	x1, x20, #0x1
   1982c:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   19830:	mov	x24, x0
   19834:	mov	x1, x21
   19838:	mov	x2, x20
   1983c:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   19840:	strb	wzr, [x24, x20]
   19844:	ldr	x0, [x19, #24]
   19848:	add	x0, x0, #0x1
   1984c:	str	x0, [x19, #24]
   19850:	ldr	w0, [x19, #8]
   19854:	mov	x20, #0x0                   	// #0
   19858:	mov	w21, #0x0                   	// #0
   1985c:	cmp	w0, #0x0
   19860:	b.gt	1987c <__sanitizer_set_report_fd@@Base+0x19fc>
   19864:	b	198e0 <__sanitizer_set_report_fd@@Base+0x1a60>
   19868:	ldr	w1, [x19, #8]
   1986c:	add	w21, w21, #0x1
   19870:	add	x20, x20, #0x18
   19874:	cmp	w1, w21
   19878:	b.le	198e0 <__sanitizer_set_report_fd@@Base+0x1a60>
   1987c:	ldr	x1, [x19]
   19880:	mov	x0, x22
   19884:	ldr	x1, [x1, x20]
   19888:	bl	1a560 <__sanitizer_set_report_fd@@Base+0x26e0>
   1988c:	cbnz	w0, 19868 <__sanitizer_set_report_fd@@Base+0x19e8>
   19890:	ldr	x0, [x19]
   19894:	mov	x1, x24
   19898:	add	x20, x0, x20
   1989c:	ldr	x0, [x20, #16]
   198a0:	ldr	x2, [x0]
   198a4:	ldr	x2, [x2]
   198a8:	blr	x2
   198ac:	tst	w0, #0xff
   198b0:	b.eq	19950 <__sanitizer_set_report_fd@@Base+0x1ad0>  // b.none
   198b4:	ldp	x21, x22, [sp, #16]
   198b8:	ldp	x23, x24, [sp, #32]
   198bc:	ldr	x30, [sp, #48]
   198c0:	ldp	x19, x20, [sp], #64
   198c4:	ret
   198c8:	add	x0, x3, #0x1
   198cc:	str	x0, [x19, #24]
   198d0:	ldrb	w1, [x4, x0]
   198d4:	cbz	w1, 19924 <__sanitizer_set_report_fd@@Base+0x1aa4>
   198d8:	mov	x3, x0
   198dc:	b	19768 <__sanitizer_set_report_fd@@Base+0x18e8>
   198e0:	add	x23, x23, #0x610
   198e4:	ldr	w0, [x23, #160]
   198e8:	sxtw	x3, w0
   198ec:	cmp	x3, #0x13
   198f0:	b.hi	1992c <__sanitizer_set_report_fd@@Base+0x1aac>  // b.pmore
   198f4:	add	w0, w0, #0x1
   198f8:	str	x22, [x23, x3, lsl #3]
   198fc:	str	w0, [x23, #160]
   19900:	b	198b4 <__sanitizer_set_report_fd@@Base+0x1a34>
   19904:	adrp	x1, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   19908:	mov	x0, x19
   1990c:	add	x1, x1, #0x3b0
   19910:	bl	19590 <__sanitizer_set_report_fd@@Base+0x1710>
   19914:	adrp	x1, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   19918:	mov	x0, x19
   1991c:	add	x1, x1, #0x348
   19920:	bl	19590 <__sanitizer_set_report_fd@@Base+0x1710>
   19924:	sub	x1, x3, x2
   19928:	b	197a4 <__sanitizer_set_report_fd@@Base+0x1924>
   1992c:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   19930:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   19934:	add	x2, x2, #0x368
   19938:	add	x0, x0, #0x278
   1993c:	mov	x4, #0x14                  	// #20
   19940:	mov	w1, #0x1f                  	// #31
   19944:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   19948:	mov	x1, #0x0                   	// #0
   1994c:	b	197a4 <__sanitizer_set_report_fd@@Base+0x1924>
   19950:	adrp	x1, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   19954:	mov	x0, x19
   19958:	add	x1, x1, #0x398
   1995c:	bl	19590 <__sanitizer_set_report_fd@@Base+0x1710>
   19960:	stp	x19, x20, [sp, #-32]!
   19964:	mov	x19, x0
   19968:	mov	x20, x1
   1996c:	stp	x21, x30, [sp, #16]
   19970:	mov	w21, #0x2c                  	// #44
   19974:	nop
   19978:	ldp	x0, x4, [x19, #16]
   1997c:	nop
   19980:	ldrb	w2, [x0, x4]
   19984:	add	x4, x4, #0x1
   19988:	cmp	w2, #0x20
   1998c:	ccmp	w2, w21, #0x4, ne  // ne = any
   19990:	b.eq	199c4 <__sanitizer_set_report_fd@@Base+0x1b44>  // b.none
   19994:	sub	w3, w2, #0x9
   19998:	cmp	w2, #0x3a
   1999c:	and	w3, w3, #0xff
   199a0:	b.eq	199c4 <__sanitizer_set_report_fd@@Base+0x1b44>  // b.none
   199a4:	cmp	w3, #0x1
   199a8:	ccmp	w2, #0xd, #0x4, hi  // hi = pmore
   199ac:	b.eq	199c4 <__sanitizer_set_report_fd@@Base+0x1b44>  // b.none
   199b0:	cbz	w2, 199cc <__sanitizer_set_report_fd@@Base+0x1b4c>
   199b4:	mov	x1, x20
   199b8:	mov	x0, x19
   199bc:	bl	19640 <__sanitizer_set_report_fd@@Base+0x17c0>
   199c0:	b	19978 <__sanitizer_set_report_fd@@Base+0x1af8>
   199c4:	str	x4, [x19, #24]
   199c8:	b	19980 <__sanitizer_set_report_fd@@Base+0x1b00>
   199cc:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   199d0:	ldr	x0, [x0, #4056]
   199d4:	ldr	w1, [x0, #36]
   199d8:	cmp	w1, #0x0
   199dc:	b.gt	199e8 <__sanitizer_set_report_fd@@Base+0x1b68>
   199e0:	mov	w1, #0x1                   	// #1
   199e4:	str	w1, [x0, #36]
   199e8:	ldp	x21, x30, [sp, #16]
   199ec:	ldp	x19, x20, [sp], #32
   199f0:	ret
   199f4:	nop
   199f8:	stp	x19, x20, [sp, #-48]!
   199fc:	mov	x19, x0
   19a00:	mov	x0, x1
   19a04:	stp	x21, x22, [sp, #16]
   19a08:	mov	x21, x1
   19a0c:	str	x30, [sp, #32]
   19a10:	bl	1c4e0 <__sanitizer_set_report_fd@@Base+0x4660>
   19a14:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   19a18:	mov	x20, x0
   19a1c:	ldr	x1, [x1, #3816]
   19a20:	ldr	w0, [x1]
   19a24:	cbz	w0, 19a48 <__sanitizer_set_report_fd@@Base+0x1bc8>
   19a28:	cmp	x20, #0x0
   19a2c:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   19a30:	add	x2, x2, #0x3c8
   19a34:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   19a38:	csel	x2, x2, x20, eq  // eq = none
   19a3c:	add	x0, x0, #0x3d0
   19a40:	mov	x1, x21
   19a44:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   19a48:	cbz	x20, 19a6c <__sanitizer_set_report_fd@@Base+0x1bec>
   19a4c:	ldr	x22, [x19, #16]
   19a50:	str	x20, [x19, #16]
   19a54:	ldr	x20, [x19, #24]
   19a58:	str	xzr, [x19, #24]
   19a5c:	mov	x1, x21
   19a60:	mov	x0, x19
   19a64:	bl	19960 <__sanitizer_set_report_fd@@Base+0x1ae0>
   19a68:	stp	x22, x20, [x19, #16]
   19a6c:	ldp	x21, x22, [sp, #16]
   19a70:	ldr	x30, [sp, #32]
   19a74:	ldp	x19, x20, [sp], #48
   19a78:	ret
   19a7c:	nop
   19a80:	mov	x3, x1
   19a84:	cbz	x1, 19ab4 <__sanitizer_set_report_fd@@Base+0x1c34>
   19a88:	stp	x19, x20, [sp, #-32]!
   19a8c:	mov	x19, x0
   19a90:	mov	x1, x2
   19a94:	stp	x21, x30, [sp, #16]
   19a98:	ldp	x21, x20, [x0, #16]
   19a9c:	stp	x3, xzr, [x0, #16]
   19aa0:	bl	19960 <__sanitizer_set_report_fd@@Base+0x1ae0>
   19aa4:	stp	x21, x20, [x19, #16]
   19aa8:	ldp	x21, x30, [sp, #16]
   19aac:	ldp	x19, x20, [sp], #32
   19ab0:	ret
   19ab4:	ret
   19ab8:	stp	x19, x20, [sp, #-80]!
   19abc:	mov	x19, x0
   19ac0:	mov	x20, x1
   19ac4:	stp	x21, x22, [sp, #16]
   19ac8:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   19acc:	and	w22, w2, #0xff
   19ad0:	ldr	x21, [x21, #4016]
   19ad4:	ldr	x0, [x21]
   19ad8:	str	x30, [sp, #40]
   19adc:	cbz	x0, 19b74 <__sanitizer_set_report_fd@@Base+0x1cf4>
   19ae0:	cmp	x0, #0x8, lsl #12
   19ae4:	add	x5, sp, #0x34
   19ae8:	add	x3, sp, #0x48
   19aec:	add	x2, sp, #0x40
   19af0:	add	x1, sp, #0x38
   19af4:	mov	x4, #0x8000                	// #32768
   19af8:	csel	x4, x0, x4, cs  // cs = hs, nlast
   19afc:	mov	x0, x20
   19b00:	bl	17590 <__sanitizer_install_malloc_and_free_hooks@@Base+0x21f8>
   19b04:	ands	w21, w0, #0xff
   19b08:	b.ne	19b24 <__sanitizer_set_report_fd@@Base+0x1ca4>  // b.any
   19b0c:	cbz	w22, 19b80 <__sanitizer_set_report_fd@@Base+0x1d00>
   19b10:	mov	w0, w22
   19b14:	ldp	x21, x22, [sp, #16]
   19b18:	ldr	x30, [sp, #40]
   19b1c:	ldp	x19, x20, [sp], #80
   19b20:	ret
   19b24:	ldr	x0, [sp, #56]
   19b28:	cbz	x0, 19b54 <__sanitizer_set_report_fd@@Base+0x1cd4>
   19b2c:	ldr	x22, [x19, #24]
   19b30:	str	x23, [sp, #32]
   19b34:	ldr	x23, [x19, #16]
   19b38:	stp	x0, xzr, [x19, #16]
   19b3c:	mov	x1, x20
   19b40:	mov	x0, x19
   19b44:	bl	19960 <__sanitizer_set_report_fd@@Base+0x1ae0>
   19b48:	stp	x23, x22, [x19, #16]
   19b4c:	ldr	x23, [sp, #32]
   19b50:	ldr	x0, [sp, #56]
   19b54:	mov	w22, w21
   19b58:	ldr	x1, [sp, #64]
   19b5c:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   19b60:	mov	w0, w22
   19b64:	ldp	x21, x22, [sp, #16]
   19b68:	ldr	x30, [sp, #40]
   19b6c:	ldp	x19, x20, [sp], #80
   19b70:	ret
   19b74:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   19b78:	str	x0, [x21]
   19b7c:	b	19ae0 <__sanitizer_set_report_fd@@Base+0x1c60>
   19b80:	ldr	w2, [sp, #52]
   19b84:	mov	x1, x20
   19b88:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   19b8c:	add	x0, x0, #0x3d8
   19b90:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   19b94:	mov	w0, w22
   19b98:	ldp	x21, x22, [sp, #16]
   19b9c:	ldr	x30, [sp, #40]
   19ba0:	ldp	x19, x20, [sp], #80
   19ba4:	ret
   19ba8:	stp	x19, x20, [sp, #-48]!
   19bac:	stp	x21, x22, [sp, #16]
   19bb0:	mov	x21, x0
   19bb4:	ldr	w0, [x0, #8]
   19bb8:	str	x30, [sp, #40]
   19bbc:	mov	x22, x1
   19bc0:	cmp	w0, #0x0
   19bc4:	b.le	19c38 <__sanitizer_set_report_fd@@Base+0x1db8>
   19bc8:	mov	x19, #0x0                   	// #0
   19bcc:	mov	w20, #0x0                   	// #0
   19bd0:	str	x23, [sp, #32]
   19bd4:	mov	x23, x2
   19bd8:	b	19bf0 <__sanitizer_set_report_fd@@Base+0x1d70>
   19bdc:	ldr	w0, [x21, #8]
   19be0:	add	w20, w20, #0x1
   19be4:	add	x19, x19, #0x18
   19be8:	cmp	w0, w20
   19bec:	b.le	19c34 <__sanitizer_set_report_fd@@Base+0x1db4>
   19bf0:	ldr	x3, [x21]
   19bf4:	mov	x0, x22
   19bf8:	ldr	x1, [x3, x19]
   19bfc:	bl	1a560 <__sanitizer_set_report_fd@@Base+0x26e0>
   19c00:	cbnz	w0, 19bdc <__sanitizer_set_report_fd@@Base+0x1d5c>
   19c04:	ldr	x0, [x21]
   19c08:	mov	x1, x23
   19c0c:	ldp	x21, x22, [sp, #16]
   19c10:	add	x19, x0, x19
   19c14:	ldr	x23, [sp, #32]
   19c18:	ldr	x0, [x19, #16]
   19c1c:	ldr	x30, [sp, #40]
   19c20:	ldr	x2, [x0]
   19c24:	ldp	x19, x20, [sp], #48
   19c28:	ldr	x2, [x2]
   19c2c:	mov	x16, x2
   19c30:	br	x16
   19c34:	ldr	x23, [sp, #32]
   19c38:	adrp	x1, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   19c3c:	add	x1, x1, #0x610
   19c40:	ldr	w0, [x1, #160]
   19c44:	sxtw	x3, w0
   19c48:	cmp	x3, #0x13
   19c4c:	b.hi	19c70 <__sanitizer_set_report_fd@@Base+0x1df0>  // b.pmore
   19c50:	add	w2, w0, #0x1
   19c54:	str	x22, [x1, x3, lsl #3]
   19c58:	ldp	x21, x22, [sp, #16]
   19c5c:	mov	w0, #0x1                   	// #1
   19c60:	ldr	x30, [sp, #40]
   19c64:	str	w2, [x1, #160]
   19c68:	ldp	x19, x20, [sp], #48
   19c6c:	ret
   19c70:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   19c74:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   19c78:	add	x2, x2, #0x368
   19c7c:	add	x0, x0, #0x278
   19c80:	mov	x4, #0x14                  	// #20
   19c84:	mov	w1, #0x1f                  	// #31
   19c88:	str	x23, [sp, #32]
   19c8c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   19c90:	ldr	w4, [x0, #8]
   19c94:	sxtw	x5, w4
   19c98:	cmp	x5, #0xc7
   19c9c:	b.hi	19cc4 <__sanitizer_set_report_fd@@Base+0x1e44>  // b.pmore
   19ca0:	mov	w5, #0x18                  	// #24
   19ca4:	add	w7, w4, #0x1
   19ca8:	ldr	x6, [x0]
   19cac:	smull	x4, w4, w5
   19cb0:	add	x5, x6, x4
   19cb4:	str	x1, [x6, x4]
   19cb8:	stp	x3, x2, [x5, #8]
   19cbc:	str	w7, [x0, #8]
   19cc0:	ret
   19cc4:	str	x30, [sp, #-16]!
   19cc8:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   19ccc:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   19cd0:	mov	x3, x5
   19cd4:	add	x2, x2, #0x408
   19cd8:	add	x0, x0, #0x278
   19cdc:	mov	x4, #0xc8                  	// #200
   19ce0:	mov	w1, #0xb4                  	// #180
   19ce4:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   19ce8:	stp	x19, x30, [sp, #-16]!
   19cec:	mov	x19, x0
   19cf0:	adrp	x1, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   19cf4:	add	x0, x1, #0x610
   19cf8:	mov	x1, #0x12c0                	// #4800
   19cfc:	str	wzr, [x19, #8]
   19d00:	add	x0, x0, #0xa8
   19d04:	stp	xzr, xzr, [x19, #16]
   19d08:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   19d0c:	str	x0, [x19]
   19d10:	ldp	x19, x30, [sp], #16
   19d14:	ret
   19d18:	cbz	x2, 19d40 <__sanitizer_set_report_fd@@Base+0x1ec0>
   19d1c:	add	x3, x0, x2
   19d20:	b	19d30 <__sanitizer_set_report_fd@@Base+0x1eb0>
   19d24:	add	x0, x0, #0x1
   19d28:	cmp	x3, x0
   19d2c:	b.eq	19d40 <__sanitizer_set_report_fd@@Base+0x1ec0>  // b.none
   19d30:	ldrb	w2, [x0]
   19d34:	cmp	w2, w1
   19d38:	b.ne	19d24 <__sanitizer_set_report_fd@@Base+0x1ea4>  // b.any
   19d3c:	ret
   19d40:	mov	x0, #0x0                   	// #0
   19d44:	ret
   19d48:	mov	x3, x0
   19d4c:	cbz	x2, 19d74 <__sanitizer_set_report_fd@@Base+0x1ef4>
   19d50:	add	x4, x0, x2
   19d54:	mov	x0, #0x0                   	// #0
   19d58:	ldrb	w2, [x3]
   19d5c:	cmp	w1, w2
   19d60:	csel	x0, x0, x3, ne  // ne = any
   19d64:	add	x3, x3, #0x1
   19d68:	cmp	x4, x3
   19d6c:	b.ne	19d58 <__sanitizer_set_report_fd@@Base+0x1ed8>  // b.any
   19d70:	ret
   19d74:	mov	x0, #0x0                   	// #0
   19d78:	ret
   19d7c:	nop
   19d80:	cbz	x2, 19db4 <__sanitizer_set_report_fd@@Base+0x1f34>
   19d84:	mov	x3, #0x0                   	// #0
   19d88:	b	19d94 <__sanitizer_set_report_fd@@Base+0x1f14>
   19d8c:	cmp	x2, x3
   19d90:	b.eq	19db4 <__sanitizer_set_report_fd@@Base+0x1f34>  // b.none
   19d94:	ldrb	w5, [x0, x3]
   19d98:	ldrb	w4, [x1, x3]
   19d9c:	add	x3, x3, #0x1
   19da0:	cmp	w5, w4
   19da4:	b.eq	19d8c <__sanitizer_set_report_fd@@Base+0x1f0c>  // b.none
   19da8:	mov	w0, #0x1                   	// #1
   19dac:	cneg	w0, w0, cc  // cc = lo, ul, last
   19db0:	ret
   19db4:	mov	w0, #0x0                   	// #0
   19db8:	ret
   19dbc:	nop
   19dc0:	cbz	x2, 19f28 <__sanitizer_set_report_fd@@Base+0x20a8>
   19dc4:	add	x3, x0, #0xf
   19dc8:	sub	x4, x2, #0x1
   19dcc:	sub	x3, x3, x1
   19dd0:	cmp	x3, #0x1e
   19dd4:	ccmp	x4, #0xe, #0x0, hi  // hi = pmore
   19dd8:	b.ls	19f2c <__sanitizer_set_report_fd@@Base+0x20ac>  // b.plast
   19ddc:	and	x4, x2, #0xfffffffffffffff0
   19de0:	mov	x3, #0x0                   	// #0
   19de4:	nop
   19de8:	ldr	q0, [x1, x3]
   19dec:	str	q0, [x0, x3]
   19df0:	add	x3, x3, #0x10
   19df4:	cmp	x3, x4
   19df8:	b.ne	19de8 <__sanitizer_set_report_fd@@Base+0x1f68>  // b.any
   19dfc:	tst	x2, #0xf
   19e00:	and	x3, x2, #0xfffffffffffffff0
   19e04:	b.eq	19f28 <__sanitizer_set_report_fd@@Base+0x20a8>  // b.none
   19e08:	ldrb	w5, [x1, x3]
   19e0c:	add	x4, x3, #0x1
   19e10:	strb	w5, [x0, x3]
   19e14:	cmp	x2, x4
   19e18:	b.ls	19f28 <__sanitizer_set_report_fd@@Base+0x20a8>  // b.plast
   19e1c:	ldrb	w6, [x1, x4]
   19e20:	add	x5, x3, #0x2
   19e24:	strb	w6, [x0, x4]
   19e28:	cmp	x2, x5
   19e2c:	b.ls	19f28 <__sanitizer_set_report_fd@@Base+0x20a8>  // b.plast
   19e30:	ldrb	w6, [x1, x5]
   19e34:	add	x4, x3, #0x3
   19e38:	strb	w6, [x0, x5]
   19e3c:	cmp	x2, x4
   19e40:	b.ls	19f28 <__sanitizer_set_report_fd@@Base+0x20a8>  // b.plast
   19e44:	ldrb	w6, [x1, x4]
   19e48:	add	x5, x3, #0x4
   19e4c:	strb	w6, [x0, x4]
   19e50:	cmp	x2, x5
   19e54:	b.ls	19f28 <__sanitizer_set_report_fd@@Base+0x20a8>  // b.plast
   19e58:	ldrb	w6, [x1, x5]
   19e5c:	add	x4, x3, #0x5
   19e60:	strb	w6, [x0, x5]
   19e64:	cmp	x2, x4
   19e68:	b.ls	19f28 <__sanitizer_set_report_fd@@Base+0x20a8>  // b.plast
   19e6c:	ldrb	w6, [x1, x4]
   19e70:	add	x5, x3, #0x6
   19e74:	strb	w6, [x0, x4]
   19e78:	cmp	x2, x5
   19e7c:	b.ls	19f28 <__sanitizer_set_report_fd@@Base+0x20a8>  // b.plast
   19e80:	ldrb	w6, [x1, x5]
   19e84:	add	x4, x3, #0x7
   19e88:	strb	w6, [x0, x5]
   19e8c:	cmp	x2, x4
   19e90:	b.ls	19f28 <__sanitizer_set_report_fd@@Base+0x20a8>  // b.plast
   19e94:	ldrb	w6, [x1, x4]
   19e98:	add	x5, x3, #0x8
   19e9c:	strb	w6, [x0, x4]
   19ea0:	cmp	x2, x5
   19ea4:	b.ls	19f28 <__sanitizer_set_report_fd@@Base+0x20a8>  // b.plast
   19ea8:	ldrb	w6, [x1, x5]
   19eac:	add	x4, x3, #0x9
   19eb0:	strb	w6, [x0, x5]
   19eb4:	cmp	x2, x4
   19eb8:	b.ls	19f28 <__sanitizer_set_report_fd@@Base+0x20a8>  // b.plast
   19ebc:	ldrb	w6, [x1, x4]
   19ec0:	add	x5, x3, #0xa
   19ec4:	strb	w6, [x0, x4]
   19ec8:	cmp	x2, x5
   19ecc:	b.ls	19f28 <__sanitizer_set_report_fd@@Base+0x20a8>  // b.plast
   19ed0:	ldrb	w6, [x1, x5]
   19ed4:	add	x4, x3, #0xb
   19ed8:	strb	w6, [x0, x5]
   19edc:	cmp	x2, x4
   19ee0:	b.ls	19f28 <__sanitizer_set_report_fd@@Base+0x20a8>  // b.plast
   19ee4:	ldrb	w6, [x1, x4]
   19ee8:	add	x5, x3, #0xc
   19eec:	strb	w6, [x0, x4]
   19ef0:	cmp	x2, x5
   19ef4:	b.ls	19f28 <__sanitizer_set_report_fd@@Base+0x20a8>  // b.plast
   19ef8:	ldrb	w6, [x1, x5]
   19efc:	add	x4, x3, #0xd
   19f00:	strb	w6, [x0, x5]
   19f04:	cmp	x2, x4
   19f08:	b.ls	19f28 <__sanitizer_set_report_fd@@Base+0x20a8>  // b.plast
   19f0c:	ldrb	w5, [x1, x4]
   19f10:	add	x3, x3, #0xe
   19f14:	strb	w5, [x0, x4]
   19f18:	cmp	x2, x3
   19f1c:	b.ls	19f28 <__sanitizer_set_report_fd@@Base+0x20a8>  // b.plast
   19f20:	ldrb	w1, [x1, x3]
   19f24:	strb	w1, [x0, x3]
   19f28:	ret
   19f2c:	mov	x3, #0x0                   	// #0
   19f30:	ldrb	w4, [x1, x3]
   19f34:	strb	w4, [x0, x3]
   19f38:	add	x3, x3, #0x1
   19f3c:	cmp	x2, x3
   19f40:	b.ne	19f30 <__sanitizer_set_report_fd@@Base+0x20b0>  // b.any
   19f44:	ret
   19f48:	cmp	x0, x1
   19f4c:	b.cs	1a0bc <__sanitizer_set_report_fd@@Base+0x223c>  // b.hs, b.nlast
   19f50:	cmp	x2, #0x0
   19f54:	b.le	1a0b8 <__sanitizer_set_report_fd@@Base+0x2238>
   19f58:	add	x3, x0, #0xf
   19f5c:	sub	x4, x2, #0x1
   19f60:	sub	x3, x3, x1
   19f64:	cmp	x3, #0x1e
   19f68:	ccmp	x4, #0xe, #0x0, hi  // hi = pmore
   19f6c:	b.ls	1a268 <__sanitizer_set_report_fd@@Base+0x23e8>  // b.plast
   19f70:	and	x4, x2, #0xfffffffffffffff0
   19f74:	mov	x3, #0x0                   	// #0
   19f78:	ldr	q0, [x1, x3]
   19f7c:	str	q0, [x0, x3]
   19f80:	add	x3, x3, #0x10
   19f84:	cmp	x3, x4
   19f88:	b.ne	19f78 <__sanitizer_set_report_fd@@Base+0x20f8>  // b.any
   19f8c:	tst	x2, #0xf
   19f90:	and	x3, x2, #0xfffffffffffffff0
   19f94:	b.eq	1a0b8 <__sanitizer_set_report_fd@@Base+0x2238>  // b.none
   19f98:	ldrb	w5, [x1, x3]
   19f9c:	add	x4, x3, #0x1
   19fa0:	strb	w5, [x0, x3]
   19fa4:	cmp	x4, x2
   19fa8:	b.ge	1a0b8 <__sanitizer_set_report_fd@@Base+0x2238>  // b.tcont
   19fac:	ldrb	w6, [x1, x4]
   19fb0:	add	x5, x3, #0x2
   19fb4:	strb	w6, [x0, x4]
   19fb8:	cmp	x2, x5
   19fbc:	b.le	1a0b8 <__sanitizer_set_report_fd@@Base+0x2238>
   19fc0:	ldrb	w6, [x1, x5]
   19fc4:	add	x4, x3, #0x3
   19fc8:	strb	w6, [x0, x5]
   19fcc:	cmp	x2, x4
   19fd0:	b.le	1a0b8 <__sanitizer_set_report_fd@@Base+0x2238>
   19fd4:	ldrb	w6, [x1, x4]
   19fd8:	add	x5, x3, #0x4
   19fdc:	strb	w6, [x0, x4]
   19fe0:	cmp	x2, x5
   19fe4:	b.le	1a0b8 <__sanitizer_set_report_fd@@Base+0x2238>
   19fe8:	ldrb	w6, [x1, x5]
   19fec:	add	x4, x3, #0x5
   19ff0:	strb	w6, [x0, x5]
   19ff4:	cmp	x2, x4
   19ff8:	b.le	1a0b8 <__sanitizer_set_report_fd@@Base+0x2238>
   19ffc:	ldrb	w6, [x1, x4]
   1a000:	add	x5, x3, #0x6
   1a004:	strb	w6, [x0, x4]
   1a008:	cmp	x2, x5
   1a00c:	b.le	1a0b8 <__sanitizer_set_report_fd@@Base+0x2238>
   1a010:	ldrb	w6, [x1, x5]
   1a014:	add	x4, x3, #0x7
   1a018:	strb	w6, [x0, x5]
   1a01c:	cmp	x2, x4
   1a020:	b.le	1a0b8 <__sanitizer_set_report_fd@@Base+0x2238>
   1a024:	ldrb	w6, [x1, x4]
   1a028:	add	x5, x3, #0x8
   1a02c:	strb	w6, [x0, x4]
   1a030:	cmp	x2, x5
   1a034:	b.le	1a0b8 <__sanitizer_set_report_fd@@Base+0x2238>
   1a038:	ldrb	w6, [x1, x5]
   1a03c:	add	x4, x3, #0x9
   1a040:	strb	w6, [x0, x5]
   1a044:	cmp	x2, x4
   1a048:	b.le	1a0b8 <__sanitizer_set_report_fd@@Base+0x2238>
   1a04c:	ldrb	w6, [x1, x4]
   1a050:	add	x5, x3, #0xa
   1a054:	strb	w6, [x0, x4]
   1a058:	cmp	x2, x5
   1a05c:	b.le	1a0b8 <__sanitizer_set_report_fd@@Base+0x2238>
   1a060:	ldrb	w6, [x1, x5]
   1a064:	add	x4, x3, #0xb
   1a068:	strb	w6, [x0, x5]
   1a06c:	cmp	x2, x4
   1a070:	b.le	1a0b8 <__sanitizer_set_report_fd@@Base+0x2238>
   1a074:	ldrb	w6, [x1, x4]
   1a078:	add	x5, x3, #0xc
   1a07c:	strb	w6, [x0, x4]
   1a080:	cmp	x2, x5
   1a084:	b.le	1a0b8 <__sanitizer_set_report_fd@@Base+0x2238>
   1a088:	ldrb	w6, [x1, x5]
   1a08c:	add	x4, x3, #0xd
   1a090:	strb	w6, [x0, x5]
   1a094:	cmp	x2, x4
   1a098:	b.le	1a0b8 <__sanitizer_set_report_fd@@Base+0x2238>
   1a09c:	ldrb	w5, [x1, x4]
   1a0a0:	add	x3, x3, #0xe
   1a0a4:	strb	w5, [x0, x4]
   1a0a8:	cmp	x2, x3
   1a0ac:	b.le	1a0b8 <__sanitizer_set_report_fd@@Base+0x2238>
   1a0b0:	ldrb	w1, [x1, x3]
   1a0b4:	strb	w1, [x0, x3]
   1a0b8:	ret
   1a0bc:	cmp	x2, #0x0
   1a0c0:	ccmp	x0, x1, #0x0, gt
   1a0c4:	b.ls	1a0b8 <__sanitizer_set_report_fd@@Base+0x2238>  // b.plast
   1a0c8:	sub	x4, x2, #0x10
   1a0cc:	add	x3, x0, x2
   1a0d0:	add	x7, x1, x4
   1a0d4:	add	x4, x0, x4
   1a0d8:	cmp	x3, x7
   1a0dc:	add	x3, x1, x2
   1a0e0:	ccmp	x3, x4, #0x0, hi  // hi = pmore
   1a0e4:	sub	x5, x2, #0x1
   1a0e8:	ccmp	x5, #0xe, #0x0, ls  // ls = plast
   1a0ec:	b.ls	1a23c <__sanitizer_set_report_fd@@Base+0x23bc>  // b.plast
   1a0f0:	neg	x6, x2, lsr #4
   1a0f4:	mov	x3, #0x0                   	// #0
   1a0f8:	lsl	x6, x6, #4
   1a0fc:	nop
   1a100:	ldr	q0, [x7, x3]
   1a104:	str	q0, [x4, x3]
   1a108:	sub	x3, x3, #0x10
   1a10c:	cmp	x3, x6
   1a110:	b.ne	1a100 <__sanitizer_set_report_fd@@Base+0x2280>  // b.any
   1a114:	and	x4, x2, #0xfffffffffffffff0
   1a118:	sub	x3, x5, x4
   1a11c:	cmp	x2, x4
   1a120:	b.eq	1a0b8 <__sanitizer_set_report_fd@@Base+0x2238>  // b.none
   1a124:	ldrb	w4, [x1, x3]
   1a128:	sub	x2, x3, #0x1
   1a12c:	strb	w4, [x0, x3]
   1a130:	cbz	x3, 1a0b8 <__sanitizer_set_report_fd@@Base+0x2238>
   1a134:	ldrb	w4, [x1, x2]
   1a138:	cmp	x3, #0x1
   1a13c:	strb	w4, [x0, x2]
   1a140:	sub	x2, x3, #0x2
   1a144:	b.eq	1a0b8 <__sanitizer_set_report_fd@@Base+0x2238>  // b.none
   1a148:	ldrb	w4, [x1, x2]
   1a14c:	cmp	x3, #0x2
   1a150:	strb	w4, [x0, x2]
   1a154:	sub	x2, x3, #0x3
   1a158:	b.eq	1a0b8 <__sanitizer_set_report_fd@@Base+0x2238>  // b.none
   1a15c:	ldrb	w4, [x1, x2]
   1a160:	cmp	x3, #0x3
   1a164:	strb	w4, [x0, x2]
   1a168:	sub	x2, x3, #0x4
   1a16c:	b.eq	1a0b8 <__sanitizer_set_report_fd@@Base+0x2238>  // b.none
   1a170:	ldrb	w4, [x1, x2]
   1a174:	cmp	x3, #0x4
   1a178:	strb	w4, [x0, x2]
   1a17c:	sub	x2, x3, #0x5
   1a180:	b.eq	1a0b8 <__sanitizer_set_report_fd@@Base+0x2238>  // b.none
   1a184:	ldrb	w4, [x1, x2]
   1a188:	cmp	x3, #0x5
   1a18c:	strb	w4, [x0, x2]
   1a190:	sub	x2, x3, #0x6
   1a194:	b.eq	1a0b8 <__sanitizer_set_report_fd@@Base+0x2238>  // b.none
   1a198:	ldrb	w4, [x1, x2]
   1a19c:	cmp	x3, #0x6
   1a1a0:	strb	w4, [x0, x2]
   1a1a4:	sub	x2, x3, #0x7
   1a1a8:	b.eq	1a0b8 <__sanitizer_set_report_fd@@Base+0x2238>  // b.none
   1a1ac:	ldrb	w4, [x1, x2]
   1a1b0:	cmp	x3, #0x7
   1a1b4:	strb	w4, [x0, x2]
   1a1b8:	sub	x2, x3, #0x8
   1a1bc:	b.eq	1a0b8 <__sanitizer_set_report_fd@@Base+0x2238>  // b.none
   1a1c0:	ldrb	w4, [x1, x2]
   1a1c4:	cmp	x3, #0x8
   1a1c8:	strb	w4, [x0, x2]
   1a1cc:	sub	x2, x3, #0x9
   1a1d0:	b.eq	1a0b8 <__sanitizer_set_report_fd@@Base+0x2238>  // b.none
   1a1d4:	ldrb	w4, [x1, x2]
   1a1d8:	cmp	x3, #0x9
   1a1dc:	strb	w4, [x0, x2]
   1a1e0:	sub	x2, x3, #0xa
   1a1e4:	b.eq	1a0b8 <__sanitizer_set_report_fd@@Base+0x2238>  // b.none
   1a1e8:	ldrb	w4, [x1, x2]
   1a1ec:	cmp	x3, #0xa
   1a1f0:	strb	w4, [x0, x2]
   1a1f4:	sub	x2, x3, #0xb
   1a1f8:	b.eq	1a0b8 <__sanitizer_set_report_fd@@Base+0x2238>  // b.none
   1a1fc:	ldrb	w4, [x1, x2]
   1a200:	cmp	x3, #0xb
   1a204:	strb	w4, [x0, x2]
   1a208:	sub	x2, x3, #0xc
   1a20c:	b.eq	1a0b8 <__sanitizer_set_report_fd@@Base+0x2238>  // b.none
   1a210:	ldrb	w4, [x1, x2]
   1a214:	cmp	x3, #0xc
   1a218:	strb	w4, [x0, x2]
   1a21c:	sub	x2, x3, #0xd
   1a220:	b.eq	1a0b8 <__sanitizer_set_report_fd@@Base+0x2238>  // b.none
   1a224:	ldrb	w4, [x1, x2]
   1a228:	cmp	x3, #0xd
   1a22c:	strb	w4, [x0, x2]
   1a230:	sub	x3, x3, #0xe
   1a234:	b.ne	1a0b0 <__sanitizer_set_report_fd@@Base+0x2230>  // b.any
   1a238:	ret
   1a23c:	ldrb	w2, [x1, x5]
   1a240:	strb	w2, [x0, x5]
   1a244:	sub	x5, x5, #0x1
   1a248:	cmn	x5, #0x1
   1a24c:	b.eq	1a0b8 <__sanitizer_set_report_fd@@Base+0x2238>  // b.none
   1a250:	ldrb	w2, [x1, x5]
   1a254:	strb	w2, [x0, x5]
   1a258:	sub	x5, x5, #0x1
   1a25c:	cmn	x5, #0x1
   1a260:	b.ne	1a23c <__sanitizer_set_report_fd@@Base+0x23bc>  // b.any
   1a264:	b	1a0b8 <__sanitizer_set_report_fd@@Base+0x2238>
   1a268:	mov	x3, #0x0                   	// #0
   1a26c:	nop
   1a270:	ldrb	w4, [x1, x3]
   1a274:	strb	w4, [x0, x3]
   1a278:	add	x3, x3, #0x1
   1a27c:	cmp	x2, x3
   1a280:	b.ne	1a270 <__sanitizer_set_report_fd@@Base+0x23f0>  // b.any
   1a284:	ret
   1a288:	orr	x3, x0, x2
   1a28c:	ands	x3, x3, #0xf
   1a290:	b.eq	1a2b8 <__sanitizer_set_report_fd@@Base+0x2438>  // b.none
   1a294:	cbz	x2, 1a2b4 <__sanitizer_set_report_fd@@Base+0x2434>
   1a298:	and	w3, w1, #0xff
   1a29c:	add	x2, x0, x2
   1a2a0:	mov	x1, x0
   1a2a4:	nop
   1a2a8:	strb	w3, [x1], #1
   1a2ac:	cmp	x1, x2
   1a2b0:	b.ne	1a2a8 <__sanitizer_set_report_fd@@Base+0x2428>  // b.any
   1a2b4:	ret
   1a2b8:	sxtw	x4, w1
   1a2bc:	sbfiz	x1, x1, #8, #32
   1a2c0:	orr	x1, x4, x1
   1a2c4:	and	x2, x2, #0xfffffffffffffff8
   1a2c8:	add	x4, x0, x2
   1a2cc:	orr	x1, x1, x1, lsl #16
   1a2d0:	cmp	x0, x4
   1a2d4:	orr	x4, x1, x1, lsl #32
   1a2d8:	b.cs	1a2b4 <__sanitizer_set_report_fd@@Base+0x2434>  // b.hs, b.nlast
   1a2dc:	sub	x1, x2, #0x1
   1a2e0:	dup	v0.2d, x4
   1a2e4:	lsr	x1, x1, #4
   1a2e8:	add	x1, x1, #0x1
   1a2ec:	nop
   1a2f0:	lsl	x2, x3, #4
   1a2f4:	add	x3, x3, #0x1
   1a2f8:	cmp	x1, x3
   1a2fc:	str	q0, [x0, x2]
   1a300:	b.hi	1a2f0 <__sanitizer_set_report_fd@@Base+0x2470>  // b.pmore
   1a304:	ret
   1a308:	ldrb	w4, [x0]
   1a30c:	mov	x6, x0
   1a310:	cbz	w4, 1a354 <__sanitizer_set_report_fd@@Base+0x24d4>
   1a314:	ldrb	w5, [x1]
   1a318:	mov	x0, #0x0                   	// #0
   1a31c:	nop
   1a320:	cmp	w4, w5
   1a324:	b.eq	1a340 <__sanitizer_set_report_fd@@Base+0x24c0>  // b.none
   1a328:	mov	w2, w5
   1a32c:	mov	x3, x1
   1a330:	cbz	w2, 1a344 <__sanitizer_set_report_fd@@Base+0x24c4>
   1a334:	ldrb	w2, [x3, #1]!
   1a338:	cmp	w4, w2
   1a33c:	b.ne	1a330 <__sanitizer_set_report_fd@@Base+0x24b0>  // b.any
   1a340:	ret
   1a344:	add	x0, x0, #0x1
   1a348:	ldrb	w4, [x6, x0]
   1a34c:	cbnz	w4, 1a320 <__sanitizer_set_report_fd@@Base+0x24a0>
   1a350:	ret
   1a354:	mov	x0, #0x0                   	// #0
   1a358:	ret
   1a35c:	nop
   1a360:	stp	x19, x20, [sp, #-32]!
   1a364:	mov	x20, x0
   1a368:	str	x30, [sp, #24]
   1a36c:	ldrb	w0, [x0]
   1a370:	cbz	w0, 1a538 <__sanitizer_set_report_fd@@Base+0x26b8>
   1a374:	mov	x19, #0x0                   	// #0
   1a378:	str	x21, [sp, #16]
   1a37c:	nop
   1a380:	mov	x21, x19
   1a384:	add	x19, x19, #0x1
   1a388:	ldrb	w0, [x20, x19]
   1a38c:	cbnz	w0, 1a380 <__sanitizer_set_report_fd@@Base+0x2500>
   1a390:	mov	x1, #0x0                   	// #0
   1a394:	add	x0, x21, #0x2
   1a398:	mov	x2, #0x0                   	// #0
   1a39c:	bl	121c8 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   1a3a0:	add	x1, x20, #0xf
   1a3a4:	sub	x1, x1, x0
   1a3a8:	cmp	x1, #0x1e
   1a3ac:	ccmp	x21, #0xe, #0x0, hi  // hi = pmore
   1a3b0:	b.ls	1a518 <__sanitizer_set_report_fd@@Base+0x2698>  // b.plast
   1a3b4:	and	x2, x19, #0xfffffffffffffff0
   1a3b8:	mov	x1, #0x0                   	// #0
   1a3bc:	nop
   1a3c0:	ldr	q0, [x20, x1]
   1a3c4:	str	q0, [x0, x1]
   1a3c8:	add	x1, x1, #0x10
   1a3cc:	cmp	x1, x2
   1a3d0:	b.ne	1a3c0 <__sanitizer_set_report_fd@@Base+0x2540>  // b.any
   1a3d4:	tst	x19, #0xf
   1a3d8:	and	x1, x19, #0xfffffffffffffff0
   1a3dc:	b.eq	1a500 <__sanitizer_set_report_fd@@Base+0x2680>  // b.none
   1a3e0:	ldrb	w3, [x20, x1]
   1a3e4:	add	x2, x1, #0x1
   1a3e8:	strb	w3, [x0, x1]
   1a3ec:	cmp	x19, x2
   1a3f0:	b.ls	1a500 <__sanitizer_set_report_fd@@Base+0x2680>  // b.plast
   1a3f4:	ldrb	w4, [x20, x2]
   1a3f8:	add	x3, x1, #0x2
   1a3fc:	strb	w4, [x0, x2]
   1a400:	cmp	x19, x3
   1a404:	b.ls	1a500 <__sanitizer_set_report_fd@@Base+0x2680>  // b.plast
   1a408:	ldrb	w4, [x20, x3]
   1a40c:	add	x2, x1, #0x3
   1a410:	strb	w4, [x0, x3]
   1a414:	cmp	x19, x2
   1a418:	b.ls	1a500 <__sanitizer_set_report_fd@@Base+0x2680>  // b.plast
   1a41c:	ldrb	w4, [x20, x2]
   1a420:	add	x3, x1, #0x4
   1a424:	strb	w4, [x0, x2]
   1a428:	cmp	x19, x3
   1a42c:	b.ls	1a500 <__sanitizer_set_report_fd@@Base+0x2680>  // b.plast
   1a430:	ldrb	w4, [x20, x3]
   1a434:	add	x2, x1, #0x5
   1a438:	strb	w4, [x0, x3]
   1a43c:	cmp	x19, x2
   1a440:	b.ls	1a500 <__sanitizer_set_report_fd@@Base+0x2680>  // b.plast
   1a444:	ldrb	w4, [x20, x2]
   1a448:	add	x3, x1, #0x6
   1a44c:	strb	w4, [x0, x2]
   1a450:	cmp	x19, x3
   1a454:	b.ls	1a500 <__sanitizer_set_report_fd@@Base+0x2680>  // b.plast
   1a458:	ldrb	w4, [x20, x3]
   1a45c:	add	x2, x1, #0x7
   1a460:	strb	w4, [x0, x3]
   1a464:	cmp	x19, x2
   1a468:	b.ls	1a500 <__sanitizer_set_report_fd@@Base+0x2680>  // b.plast
   1a46c:	ldrb	w4, [x20, x2]
   1a470:	add	x3, x1, #0x8
   1a474:	strb	w4, [x0, x2]
   1a478:	cmp	x19, x3
   1a47c:	b.ls	1a500 <__sanitizer_set_report_fd@@Base+0x2680>  // b.plast
   1a480:	ldrb	w4, [x20, x3]
   1a484:	add	x2, x1, #0x9
   1a488:	strb	w4, [x0, x3]
   1a48c:	cmp	x19, x2
   1a490:	b.ls	1a500 <__sanitizer_set_report_fd@@Base+0x2680>  // b.plast
   1a494:	ldrb	w4, [x20, x2]
   1a498:	add	x3, x1, #0xa
   1a49c:	strb	w4, [x0, x2]
   1a4a0:	cmp	x19, x3
   1a4a4:	b.ls	1a500 <__sanitizer_set_report_fd@@Base+0x2680>  // b.plast
   1a4a8:	ldrb	w4, [x20, x3]
   1a4ac:	add	x2, x1, #0xb
   1a4b0:	strb	w4, [x0, x3]
   1a4b4:	cmp	x19, x2
   1a4b8:	b.ls	1a500 <__sanitizer_set_report_fd@@Base+0x2680>  // b.plast
   1a4bc:	ldrb	w4, [x20, x2]
   1a4c0:	add	x3, x1, #0xc
   1a4c4:	strb	w4, [x0, x2]
   1a4c8:	cmp	x19, x3
   1a4cc:	b.ls	1a500 <__sanitizer_set_report_fd@@Base+0x2680>  // b.plast
   1a4d0:	ldrb	w4, [x20, x3]
   1a4d4:	add	x2, x1, #0xd
   1a4d8:	strb	w4, [x0, x3]
   1a4dc:	cmp	x19, x2
   1a4e0:	b.ls	1a500 <__sanitizer_set_report_fd@@Base+0x2680>  // b.plast
   1a4e4:	ldrb	w3, [x20, x2]
   1a4e8:	add	x1, x1, #0xe
   1a4ec:	strb	w3, [x0, x2]
   1a4f0:	cmp	x19, x1
   1a4f4:	b.ls	1a500 <__sanitizer_set_report_fd@@Base+0x2680>  // b.plast
   1a4f8:	ldrb	w2, [x20, x1]
   1a4fc:	strb	w2, [x0, x1]
   1a500:	add	x19, x0, x19
   1a504:	ldr	x21, [sp, #16]
   1a508:	strb	wzr, [x19]
   1a50c:	ldr	x30, [sp, #24]
   1a510:	ldp	x19, x20, [sp], #32
   1a514:	ret
   1a518:	mov	x1, #0x0                   	// #0
   1a51c:	nop
   1a520:	ldrb	w3, [x20, x1]
   1a524:	cmp	x21, x1
   1a528:	strb	w3, [x0, x1]
   1a52c:	add	x1, x1, #0x1
   1a530:	b.ne	1a520 <__sanitizer_set_report_fd@@Base+0x26a0>  // b.any
   1a534:	b	1a500 <__sanitizer_set_report_fd@@Base+0x2680>
   1a538:	mov	x2, #0x0                   	// #0
   1a53c:	mov	x1, #0x0                   	// #0
   1a540:	mov	x0, #0x1                   	// #1
   1a544:	bl	121c8 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   1a548:	mov	x19, x0
   1a54c:	strb	wzr, [x19]
   1a550:	ldr	x30, [sp, #24]
   1a554:	ldp	x19, x20, [sp], #32
   1a558:	ret
   1a55c:	nop
   1a560:	ldrb	w3, [x0]
   1a564:	mov	x2, #0x1                   	// #1
   1a568:	ldrb	w4, [x1]
   1a56c:	cmp	w4, w3
   1a570:	b.ne	1a590 <__sanitizer_set_report_fd@@Base+0x2710>  // b.any
   1a574:	nop
   1a578:	cbz	w3, 1a5a0 <__sanitizer_set_report_fd@@Base+0x2720>
   1a57c:	ldrb	w3, [x0, x2]
   1a580:	ldrb	w4, [x1, x2]
   1a584:	add	x2, x2, #0x1
   1a588:	cmp	w3, w4
   1a58c:	b.eq	1a578 <__sanitizer_set_report_fd@@Base+0x26f8>  // b.none
   1a590:	cmp	w3, w4
   1a594:	mov	w0, #0x1                   	// #1
   1a598:	cneg	w0, w0, cc  // cc = lo, ul, last
   1a59c:	ret
   1a5a0:	mov	w0, #0x0                   	// #0
   1a5a4:	ret
   1a5a8:	cbz	x2, 1a5e0 <__sanitizer_set_report_fd@@Base+0x2760>
   1a5ac:	mov	x3, #0x0                   	// #0
   1a5b0:	b	1a5c0 <__sanitizer_set_report_fd@@Base+0x2740>
   1a5b4:	cbz	w4, 1a5e0 <__sanitizer_set_report_fd@@Base+0x2760>
   1a5b8:	cmp	x2, x3
   1a5bc:	b.eq	1a5e0 <__sanitizer_set_report_fd@@Base+0x2760>  // b.none
   1a5c0:	ldrb	w4, [x0, x3]
   1a5c4:	ldrb	w5, [x1, x3]
   1a5c8:	add	x3, x3, #0x1
   1a5cc:	cmp	w4, w5
   1a5d0:	b.eq	1a5b4 <__sanitizer_set_report_fd@@Base+0x2734>  // b.none
   1a5d4:	mov	w0, #0x1                   	// #1
   1a5d8:	cneg	w0, w0, cc  // cc = lo, ul, last
   1a5dc:	ret
   1a5e0:	mov	w0, #0x0                   	// #0
   1a5e4:	ret
   1a5e8:	ldrb	w2, [x0]
   1a5ec:	and	w3, w1, #0xff
   1a5f0:	cmp	w2, w1, uxtb
   1a5f4:	b.eq	1a608 <__sanitizer_set_report_fd@@Base+0x2788>  // b.none
   1a5f8:	cbz	w2, 1a60c <__sanitizer_set_report_fd@@Base+0x278c>
   1a5fc:	ldrb	w2, [x0, #1]!
   1a600:	cmp	w2, w3
   1a604:	b.ne	1a5f8 <__sanitizer_set_report_fd@@Base+0x2778>  // b.any
   1a608:	ret
   1a60c:	mov	x0, #0x0                   	// #0
   1a610:	ret
   1a614:	nop
   1a618:	ldrb	w4, [x0]
   1a61c:	mov	x2, x0
   1a620:	and	w3, w1, #0xff
   1a624:	cmp	w4, w1, uxtb
   1a628:	b.eq	1a640 <__sanitizer_set_report_fd@@Base+0x27c0>  // b.none
   1a62c:	mov	w1, w4
   1a630:	cbz	w1, 1a644 <__sanitizer_set_report_fd@@Base+0x27c4>
   1a634:	ldrb	w1, [x0, #1]!
   1a638:	cmp	w1, w3
   1a63c:	b.ne	1a630 <__sanitizer_set_report_fd@@Base+0x27b0>  // b.any
   1a640:	ret
   1a644:	cbz	w4, 1a660 <__sanitizer_set_report_fd@@Base+0x27e0>
   1a648:	add	x1, x2, #0x1
   1a64c:	nop
   1a650:	mov	x0, x1
   1a654:	ldrb	w2, [x1], #1
   1a658:	cbnz	w2, 1a650 <__sanitizer_set_report_fd@@Base+0x27d0>
   1a65c:	ret
   1a660:	mov	x0, x2
   1a664:	ret
   1a668:	ldrb	w3, [x0]
   1a66c:	mov	x2, x0
   1a670:	mov	x0, #0x0                   	// #0
   1a674:	cbz	w3, 1a688 <__sanitizer_set_report_fd@@Base+0x2808>
   1a678:	cmp	w1, w3
   1a67c:	csel	x0, x0, x2, ne  // ne = any
   1a680:	ldrb	w3, [x2, #1]!
   1a684:	cbnz	w3, 1a678 <__sanitizer_set_report_fd@@Base+0x27f8>
   1a688:	ret
   1a68c:	nop
   1a690:	mov	x2, x0
   1a694:	ldrb	w0, [x0]
   1a698:	cbz	w0, 1a6b0 <__sanitizer_set_report_fd@@Base+0x2830>
   1a69c:	mov	x0, #0x0                   	// #0
   1a6a0:	add	x0, x0, #0x1
   1a6a4:	ldrb	w1, [x2, x0]
   1a6a8:	cbnz	w1, 1a6a0 <__sanitizer_set_report_fd@@Base+0x2820>
   1a6ac:	ret
   1a6b0:	mov	x0, #0x0                   	// #0
   1a6b4:	ret
   1a6b8:	ldrb	w3, [x1]
   1a6bc:	mov	x4, #0x0                   	// #0
   1a6c0:	cbz	w3, 1a6d4 <__sanitizer_set_report_fd@@Base+0x2854>
   1a6c4:	nop
   1a6c8:	add	x4, x4, #0x1
   1a6cc:	ldrb	w3, [x1, x4]
   1a6d0:	cbnz	w3, 1a6c8 <__sanitizer_set_report_fd@@Base+0x2848>
   1a6d4:	cbz	x2, 1a9f8 <__sanitizer_set_report_fd@@Base+0x2b78>
   1a6d8:	mov	x3, #0x0                   	// #0
   1a6dc:	b	1a6ec <__sanitizer_set_report_fd@@Base+0x286c>
   1a6e0:	add	x3, x3, #0x1
   1a6e4:	cmp	x2, x3
   1a6e8:	b.eq	1a9f8 <__sanitizer_set_report_fd@@Base+0x2b78>  // b.none
   1a6ec:	ldrb	w5, [x0, x3]
   1a6f0:	add	x7, x0, x3
   1a6f4:	cbnz	w5, 1a6e0 <__sanitizer_set_report_fd@@Base+0x2860>
   1a6f8:	sub	x5, x2, x3
   1a6fc:	cmp	x5, x4
   1a700:	b.ls	1a878 <__sanitizer_set_report_fd@@Base+0x29f8>  // b.plast
   1a704:	cmp	x1, x7
   1a708:	add	x5, x4, #0x1
   1a70c:	b.ls	1aa00 <__sanitizer_set_report_fd@@Base+0x2b80>  // b.plast
   1a710:	cmp	x5, #0x0
   1a714:	b.le	1a870 <__sanitizer_set_report_fd@@Base+0x29f0>
   1a718:	add	x0, x1, #0xf
   1a71c:	sub	x0, x0, x7
   1a720:	cmp	x0, #0x1e
   1a724:	ccmp	x4, #0xe, #0x0, hi  // hi = pmore
   1a728:	b.ls	1ad80 <__sanitizer_set_report_fd@@Base+0x2f00>  // b.plast
   1a72c:	and	x2, x5, #0xfffffffffffffff0
   1a730:	mov	x0, #0x0                   	// #0
   1a734:	nop
   1a738:	ldr	q0, [x1, x0]
   1a73c:	str	q0, [x7, x0]
   1a740:	add	x0, x0, #0x10
   1a744:	cmp	x0, x2
   1a748:	b.ne	1a738 <__sanitizer_set_report_fd@@Base+0x28b8>  // b.any
   1a74c:	tst	x5, #0xf
   1a750:	and	x0, x5, #0xfffffffffffffff0
   1a754:	b.eq	1a870 <__sanitizer_set_report_fd@@Base+0x29f0>  // b.none
   1a758:	ldrb	w6, [x1, x0]
   1a75c:	add	x2, x0, #0x1
   1a760:	strb	w6, [x7, x0]
   1a764:	cmp	x5, x2
   1a768:	b.le	1a870 <__sanitizer_set_report_fd@@Base+0x29f0>
   1a76c:	ldrb	w8, [x1, x2]
   1a770:	add	x6, x0, #0x2
   1a774:	strb	w8, [x7, x2]
   1a778:	cmp	x5, x6
   1a77c:	b.le	1a870 <__sanitizer_set_report_fd@@Base+0x29f0>
   1a780:	ldrb	w8, [x1, x6]
   1a784:	add	x2, x0, #0x3
   1a788:	strb	w8, [x7, x6]
   1a78c:	cmp	x5, x2
   1a790:	b.le	1a870 <__sanitizer_set_report_fd@@Base+0x29f0>
   1a794:	ldrb	w8, [x1, x2]
   1a798:	add	x6, x0, #0x4
   1a79c:	strb	w8, [x7, x2]
   1a7a0:	cmp	x5, x6
   1a7a4:	b.le	1a870 <__sanitizer_set_report_fd@@Base+0x29f0>
   1a7a8:	ldrb	w8, [x1, x6]
   1a7ac:	add	x2, x0, #0x5
   1a7b0:	strb	w8, [x7, x6]
   1a7b4:	cmp	x5, x2
   1a7b8:	b.le	1a870 <__sanitizer_set_report_fd@@Base+0x29f0>
   1a7bc:	ldrb	w8, [x1, x2]
   1a7c0:	add	x6, x0, #0x6
   1a7c4:	strb	w8, [x7, x2]
   1a7c8:	cmp	x5, x6
   1a7cc:	b.le	1a870 <__sanitizer_set_report_fd@@Base+0x29f0>
   1a7d0:	ldrb	w8, [x1, x6]
   1a7d4:	add	x2, x0, #0x7
   1a7d8:	strb	w8, [x7, x6]
   1a7dc:	cmp	x5, x2
   1a7e0:	b.le	1a870 <__sanitizer_set_report_fd@@Base+0x29f0>
   1a7e4:	ldrb	w8, [x1, x2]
   1a7e8:	add	x6, x0, #0x8
   1a7ec:	strb	w8, [x7, x2]
   1a7f0:	cmp	x5, x6
   1a7f4:	b.le	1a870 <__sanitizer_set_report_fd@@Base+0x29f0>
   1a7f8:	ldrb	w8, [x1, x6]
   1a7fc:	add	x2, x0, #0x9
   1a800:	strb	w8, [x7, x6]
   1a804:	cmp	x5, x2
   1a808:	b.le	1a870 <__sanitizer_set_report_fd@@Base+0x29f0>
   1a80c:	ldrb	w8, [x1, x2]
   1a810:	add	x6, x0, #0xa
   1a814:	strb	w8, [x7, x2]
   1a818:	cmp	x5, x6
   1a81c:	b.le	1a870 <__sanitizer_set_report_fd@@Base+0x29f0>
   1a820:	ldrb	w8, [x1, x6]
   1a824:	add	x2, x0, #0xb
   1a828:	strb	w8, [x7, x6]
   1a82c:	cmp	x5, x2
   1a830:	b.le	1a870 <__sanitizer_set_report_fd@@Base+0x29f0>
   1a834:	ldrb	w8, [x1, x2]
   1a838:	add	x6, x0, #0xc
   1a83c:	strb	w8, [x7, x2]
   1a840:	cmp	x5, x6
   1a844:	b.le	1a870 <__sanitizer_set_report_fd@@Base+0x29f0>
   1a848:	ldrb	w8, [x1, x6]
   1a84c:	add	x2, x0, #0xd
   1a850:	strb	w8, [x7, x6]
   1a854:	cmp	x5, x2
   1a858:	b.le	1a870 <__sanitizer_set_report_fd@@Base+0x29f0>
   1a85c:	ldrb	w6, [x1, x2]
   1a860:	add	x0, x0, #0xe
   1a864:	strb	w6, [x7, x2]
   1a868:	cmp	x5, x0
   1a86c:	b.gt	1ab78 <__sanitizer_set_report_fd@@Base+0x2cf8>
   1a870:	add	x0, x4, x3
   1a874:	ret
   1a878:	cmp	x1, x7
   1a87c:	sub	x8, x5, #0x1
   1a880:	b.ls	1ab88 <__sanitizer_set_report_fd@@Base+0x2d08>  // b.plast
   1a884:	cmp	x8, #0x0
   1a888:	b.le	1a9e8 <__sanitizer_set_report_fd@@Base+0x2b68>
   1a88c:	add	x6, x1, #0xf
   1a890:	sub	x5, x5, #0x2
   1a894:	sub	x6, x6, x7
   1a898:	cmp	x6, #0x1e
   1a89c:	ccmp	x5, #0xe, #0x0, hi  // hi = pmore
   1a8a0:	b.ls	1ad64 <__sanitizer_set_report_fd@@Base+0x2ee4>  // b.plast
   1a8a4:	and	x6, x8, #0xfffffffffffffff0
   1a8a8:	mov	x5, #0x0                   	// #0
   1a8ac:	nop
   1a8b0:	ldr	q0, [x1, x5]
   1a8b4:	str	q0, [x7, x5]
   1a8b8:	add	x5, x5, #0x10
   1a8bc:	cmp	x5, x6
   1a8c0:	b.ne	1a8b0 <__sanitizer_set_report_fd@@Base+0x2a30>  // b.any
   1a8c4:	tst	x8, #0xf
   1a8c8:	and	x5, x8, #0xfffffffffffffff0
   1a8cc:	b.eq	1a9e8 <__sanitizer_set_report_fd@@Base+0x2b68>  // b.none
   1a8d0:	ldrb	w9, [x1, x5]
   1a8d4:	add	x6, x5, #0x1
   1a8d8:	strb	w9, [x7, x5]
   1a8dc:	cmp	x8, x6
   1a8e0:	b.le	1a9e8 <__sanitizer_set_report_fd@@Base+0x2b68>
   1a8e4:	ldrb	w10, [x1, x6]
   1a8e8:	add	x9, x5, #0x2
   1a8ec:	strb	w10, [x7, x6]
   1a8f0:	cmp	x8, x9
   1a8f4:	b.le	1a9e8 <__sanitizer_set_report_fd@@Base+0x2b68>
   1a8f8:	ldrb	w10, [x1, x9]
   1a8fc:	add	x6, x5, #0x3
   1a900:	strb	w10, [x7, x9]
   1a904:	cmp	x8, x6
   1a908:	b.le	1a9e8 <__sanitizer_set_report_fd@@Base+0x2b68>
   1a90c:	ldrb	w10, [x1, x6]
   1a910:	add	x9, x5, #0x4
   1a914:	strb	w10, [x7, x6]
   1a918:	cmp	x8, x9
   1a91c:	b.le	1a9e8 <__sanitizer_set_report_fd@@Base+0x2b68>
   1a920:	ldrb	w10, [x1, x9]
   1a924:	add	x6, x5, #0x5
   1a928:	strb	w10, [x7, x9]
   1a92c:	cmp	x8, x6
   1a930:	b.le	1a9e8 <__sanitizer_set_report_fd@@Base+0x2b68>
   1a934:	ldrb	w10, [x1, x6]
   1a938:	add	x9, x5, #0x6
   1a93c:	strb	w10, [x7, x6]
   1a940:	cmp	x8, x9
   1a944:	b.le	1a9e8 <__sanitizer_set_report_fd@@Base+0x2b68>
   1a948:	ldrb	w10, [x1, x9]
   1a94c:	add	x6, x5, #0x7
   1a950:	strb	w10, [x7, x9]
   1a954:	cmp	x8, x6
   1a958:	b.le	1a9e8 <__sanitizer_set_report_fd@@Base+0x2b68>
   1a95c:	ldrb	w10, [x1, x6]
   1a960:	add	x9, x5, #0x8
   1a964:	strb	w10, [x7, x6]
   1a968:	cmp	x8, x9
   1a96c:	b.le	1a9e8 <__sanitizer_set_report_fd@@Base+0x2b68>
   1a970:	ldrb	w10, [x1, x9]
   1a974:	add	x6, x5, #0x9
   1a978:	strb	w10, [x7, x9]
   1a97c:	cmp	x8, x6
   1a980:	b.le	1a9e8 <__sanitizer_set_report_fd@@Base+0x2b68>
   1a984:	ldrb	w10, [x1, x6]
   1a988:	add	x9, x5, #0xa
   1a98c:	strb	w10, [x7, x6]
   1a990:	cmp	x8, x9
   1a994:	b.le	1a9e8 <__sanitizer_set_report_fd@@Base+0x2b68>
   1a998:	ldrb	w10, [x1, x9]
   1a99c:	add	x6, x5, #0xb
   1a9a0:	strb	w10, [x7, x9]
   1a9a4:	cmp	x8, x6
   1a9a8:	b.le	1a9e8 <__sanitizer_set_report_fd@@Base+0x2b68>
   1a9ac:	ldrb	w10, [x1, x6]
   1a9b0:	add	x9, x5, #0xc
   1a9b4:	strb	w10, [x7, x6]
   1a9b8:	cmp	x8, x9
   1a9bc:	b.le	1a9e8 <__sanitizer_set_report_fd@@Base+0x2b68>
   1a9c0:	ldrb	w10, [x1, x9]
   1a9c4:	add	x6, x5, #0xd
   1a9c8:	strb	w10, [x7, x9]
   1a9cc:	cmp	x8, x6
   1a9d0:	b.le	1a9e8 <__sanitizer_set_report_fd@@Base+0x2b68>
   1a9d4:	ldrb	w9, [x1, x6]
   1a9d8:	add	x5, x5, #0xe
   1a9dc:	strb	w9, [x7, x6]
   1a9e0:	cmp	x8, x5
   1a9e4:	b.gt	1ad00 <__sanitizer_set_report_fd@@Base+0x2e80>
   1a9e8:	add	x0, x0, x2
   1a9ec:	sturb	wzr, [x0, #-1]
   1a9f0:	add	x0, x4, x3
   1a9f4:	b	1a874 <__sanitizer_set_report_fd@@Base+0x29f4>
   1a9f8:	add	x0, x2, x4
   1a9fc:	ret
   1aa00:	cmp	x5, #0x0
   1aa04:	ccmp	x1, x7, #0x2, gt
   1aa08:	b.cs	1a870 <__sanitizer_set_report_fd@@Base+0x29f0>  // b.hs, b.nlast
   1aa0c:	sub	x2, x4, #0xf
   1aa10:	add	x0, x1, x5
   1aa14:	add	x8, x7, x2
   1aa18:	add	x2, x1, x2
   1aa1c:	cmp	x8, x0
   1aa20:	add	x0, x7, x5
   1aa24:	ccmp	x0, x2, #0x0, cc  // cc = lo, ul, last
   1aa28:	mov	x0, x4
   1aa2c:	ccmp	x4, #0xe, #0x0, ls  // ls = plast
   1aa30:	b.ls	1ad0c <__sanitizer_set_report_fd@@Base+0x2e8c>  // b.plast
   1aa34:	neg	x6, x5, lsr #4
   1aa38:	mov	x0, #0x0                   	// #0
   1aa3c:	lsl	x6, x6, #4
   1aa40:	ldr	q0, [x2, x0]
   1aa44:	str	q0, [x8, x0]
   1aa48:	sub	x0, x0, #0x10
   1aa4c:	cmp	x0, x6
   1aa50:	b.ne	1aa40 <__sanitizer_set_report_fd@@Base+0x2bc0>  // b.any
   1aa54:	and	x0, x5, #0xfffffffffffffff0
   1aa58:	cmp	x5, x0
   1aa5c:	sub	x0, x4, x0
   1aa60:	b.eq	1a870 <__sanitizer_set_report_fd@@Base+0x29f0>  // b.none
   1aa64:	ldrb	w5, [x1, x0]
   1aa68:	sub	x2, x0, #0x1
   1aa6c:	strb	w5, [x7, x0]
   1aa70:	cbz	x0, 1a870 <__sanitizer_set_report_fd@@Base+0x29f0>
   1aa74:	ldrb	w5, [x1, x2]
   1aa78:	cmp	x0, #0x1
   1aa7c:	strb	w5, [x7, x2]
   1aa80:	sub	x2, x0, #0x2
   1aa84:	b.eq	1a870 <__sanitizer_set_report_fd@@Base+0x29f0>  // b.none
   1aa88:	ldrb	w5, [x1, x2]
   1aa8c:	cmp	x0, #0x2
   1aa90:	strb	w5, [x7, x2]
   1aa94:	sub	x2, x0, #0x3
   1aa98:	b.eq	1a870 <__sanitizer_set_report_fd@@Base+0x29f0>  // b.none
   1aa9c:	ldrb	w5, [x1, x2]
   1aaa0:	cmp	x0, #0x3
   1aaa4:	strb	w5, [x7, x2]
   1aaa8:	sub	x2, x0, #0x4
   1aaac:	b.eq	1a870 <__sanitizer_set_report_fd@@Base+0x29f0>  // b.none
   1aab0:	ldrb	w5, [x1, x2]
   1aab4:	cmp	x0, #0x4
   1aab8:	strb	w5, [x7, x2]
   1aabc:	sub	x2, x0, #0x5
   1aac0:	b.eq	1a870 <__sanitizer_set_report_fd@@Base+0x29f0>  // b.none
   1aac4:	ldrb	w5, [x1, x2]
   1aac8:	cmp	x0, #0x5
   1aacc:	strb	w5, [x7, x2]
   1aad0:	sub	x2, x0, #0x6
   1aad4:	b.eq	1a870 <__sanitizer_set_report_fd@@Base+0x29f0>  // b.none
   1aad8:	ldrb	w5, [x1, x2]
   1aadc:	cmp	x0, #0x6
   1aae0:	strb	w5, [x7, x2]
   1aae4:	sub	x2, x0, #0x7
   1aae8:	b.eq	1a870 <__sanitizer_set_report_fd@@Base+0x29f0>  // b.none
   1aaec:	ldrb	w5, [x1, x2]
   1aaf0:	cmp	x0, #0x7
   1aaf4:	strb	w5, [x7, x2]
   1aaf8:	sub	x2, x0, #0x8
   1aafc:	b.eq	1a870 <__sanitizer_set_report_fd@@Base+0x29f0>  // b.none
   1ab00:	ldrb	w5, [x1, x2]
   1ab04:	cmp	x0, #0x8
   1ab08:	strb	w5, [x7, x2]
   1ab0c:	sub	x2, x0, #0x9
   1ab10:	b.eq	1a870 <__sanitizer_set_report_fd@@Base+0x29f0>  // b.none
   1ab14:	ldrb	w5, [x1, x2]
   1ab18:	cmp	x0, #0x9
   1ab1c:	strb	w5, [x7, x2]
   1ab20:	sub	x2, x0, #0xa
   1ab24:	b.eq	1a870 <__sanitizer_set_report_fd@@Base+0x29f0>  // b.none
   1ab28:	ldrb	w5, [x1, x2]
   1ab2c:	cmp	x0, #0xa
   1ab30:	strb	w5, [x7, x2]
   1ab34:	sub	x2, x0, #0xb
   1ab38:	b.eq	1a870 <__sanitizer_set_report_fd@@Base+0x29f0>  // b.none
   1ab3c:	ldrb	w5, [x1, x2]
   1ab40:	cmp	x0, #0xb
   1ab44:	strb	w5, [x7, x2]
   1ab48:	sub	x2, x0, #0xc
   1ab4c:	b.eq	1a870 <__sanitizer_set_report_fd@@Base+0x29f0>  // b.none
   1ab50:	ldrb	w5, [x1, x2]
   1ab54:	cmp	x0, #0xc
   1ab58:	strb	w5, [x7, x2]
   1ab5c:	sub	x2, x0, #0xd
   1ab60:	b.eq	1a870 <__sanitizer_set_report_fd@@Base+0x29f0>  // b.none
   1ab64:	ldrb	w5, [x1, x2]
   1ab68:	cmp	x0, #0xd
   1ab6c:	strb	w5, [x7, x2]
   1ab70:	sub	x0, x0, #0xe
   1ab74:	b.eq	1a870 <__sanitizer_set_report_fd@@Base+0x29f0>  // b.none
   1ab78:	ldrb	w1, [x1, x0]
   1ab7c:	strb	w1, [x7, x0]
   1ab80:	add	x0, x4, x3
   1ab84:	b	1a874 <__sanitizer_set_report_fd@@Base+0x29f4>
   1ab88:	cmp	x8, #0x0
   1ab8c:	ccmp	x1, x7, #0x2, gt
   1ab90:	b.cs	1a9e8 <__sanitizer_set_report_fd@@Base+0x2b68>  // b.hs, b.nlast
   1ab94:	sub	x9, x5, #0x11
   1ab98:	add	x6, x1, x8
   1ab9c:	add	x11, x7, x9
   1aba0:	add	x9, x1, x9
   1aba4:	cmp	x6, x11
   1aba8:	add	x6, x7, x8
   1abac:	sub	x5, x5, #0x2
   1abb0:	ccmp	x6, x9, #0x0, hi  // hi = pmore
   1abb4:	ccmp	x5, #0xe, #0x0, ls  // ls = plast
   1abb8:	b.ls	1ad38 <__sanitizer_set_report_fd@@Base+0x2eb8>  // b.plast
   1abbc:	neg	x10, x8, lsr #4
   1abc0:	mov	x6, #0x0                   	// #0
   1abc4:	lsl	x10, x10, #4
   1abc8:	ldr	q0, [x9, x6]
   1abcc:	str	q0, [x11, x6]
   1abd0:	sub	x6, x6, #0x10
   1abd4:	cmp	x6, x10
   1abd8:	b.ne	1abc8 <__sanitizer_set_report_fd@@Base+0x2d48>  // b.any
   1abdc:	and	x6, x8, #0xfffffffffffffff0
   1abe0:	sub	x5, x5, x6
   1abe4:	cmp	x8, x6
   1abe8:	b.eq	1a9e8 <__sanitizer_set_report_fd@@Base+0x2b68>  // b.none
   1abec:	ldrb	w8, [x1, x5]
   1abf0:	sub	x6, x5, #0x1
   1abf4:	strb	w8, [x7, x5]
   1abf8:	cbz	x5, 1a9e8 <__sanitizer_set_report_fd@@Base+0x2b68>
   1abfc:	ldrb	w8, [x1, x6]
   1ac00:	cmp	x5, #0x1
   1ac04:	strb	w8, [x7, x6]
   1ac08:	sub	x6, x5, #0x2
   1ac0c:	b.eq	1a9e8 <__sanitizer_set_report_fd@@Base+0x2b68>  // b.none
   1ac10:	ldrb	w8, [x1, x6]
   1ac14:	cmp	x5, #0x2
   1ac18:	strb	w8, [x7, x6]
   1ac1c:	sub	x6, x5, #0x3
   1ac20:	b.eq	1a9e8 <__sanitizer_set_report_fd@@Base+0x2b68>  // b.none
   1ac24:	ldrb	w8, [x1, x6]
   1ac28:	cmp	x5, #0x3
   1ac2c:	strb	w8, [x7, x6]
   1ac30:	sub	x6, x5, #0x4
   1ac34:	b.eq	1a9e8 <__sanitizer_set_report_fd@@Base+0x2b68>  // b.none
   1ac38:	ldrb	w8, [x1, x6]
   1ac3c:	cmp	x5, #0x4
   1ac40:	strb	w8, [x7, x6]
   1ac44:	sub	x6, x5, #0x5
   1ac48:	b.eq	1a9e8 <__sanitizer_set_report_fd@@Base+0x2b68>  // b.none
   1ac4c:	ldrb	w8, [x1, x6]
   1ac50:	cmp	x5, #0x5
   1ac54:	strb	w8, [x7, x6]
   1ac58:	sub	x6, x5, #0x6
   1ac5c:	b.eq	1a9e8 <__sanitizer_set_report_fd@@Base+0x2b68>  // b.none
   1ac60:	ldrb	w8, [x1, x6]
   1ac64:	cmp	x5, #0x6
   1ac68:	strb	w8, [x7, x6]
   1ac6c:	sub	x6, x5, #0x7
   1ac70:	b.eq	1a9e8 <__sanitizer_set_report_fd@@Base+0x2b68>  // b.none
   1ac74:	ldrb	w8, [x1, x6]
   1ac78:	cmp	x5, #0x7
   1ac7c:	strb	w8, [x7, x6]
   1ac80:	sub	x6, x5, #0x8
   1ac84:	b.eq	1a9e8 <__sanitizer_set_report_fd@@Base+0x2b68>  // b.none
   1ac88:	ldrb	w8, [x1, x6]
   1ac8c:	cmp	x5, #0x8
   1ac90:	strb	w8, [x7, x6]
   1ac94:	sub	x6, x5, #0x9
   1ac98:	b.eq	1a9e8 <__sanitizer_set_report_fd@@Base+0x2b68>  // b.none
   1ac9c:	ldrb	w8, [x1, x6]
   1aca0:	cmp	x5, #0x9
   1aca4:	strb	w8, [x7, x6]
   1aca8:	sub	x6, x5, #0xa
   1acac:	b.eq	1a9e8 <__sanitizer_set_report_fd@@Base+0x2b68>  // b.none
   1acb0:	ldrb	w8, [x1, x6]
   1acb4:	cmp	x5, #0xa
   1acb8:	strb	w8, [x7, x6]
   1acbc:	sub	x6, x5, #0xb
   1acc0:	b.eq	1a9e8 <__sanitizer_set_report_fd@@Base+0x2b68>  // b.none
   1acc4:	ldrb	w8, [x1, x6]
   1acc8:	cmp	x5, #0xb
   1accc:	strb	w8, [x7, x6]
   1acd0:	sub	x6, x5, #0xc
   1acd4:	b.eq	1a9e8 <__sanitizer_set_report_fd@@Base+0x2b68>  // b.none
   1acd8:	ldrb	w8, [x1, x6]
   1acdc:	cmp	x5, #0xc
   1ace0:	strb	w8, [x7, x6]
   1ace4:	sub	x6, x5, #0xd
   1ace8:	b.eq	1a9e8 <__sanitizer_set_report_fd@@Base+0x2b68>  // b.none
   1acec:	ldrb	w8, [x1, x6]
   1acf0:	cmp	x5, #0xd
   1acf4:	strb	w8, [x7, x6]
   1acf8:	sub	x5, x5, #0xe
   1acfc:	b.eq	1a9e8 <__sanitizer_set_report_fd@@Base+0x2b68>  // b.none
   1ad00:	ldrb	w1, [x1, x5]
   1ad04:	strb	w1, [x7, x5]
   1ad08:	b	1a9e8 <__sanitizer_set_report_fd@@Base+0x2b68>
   1ad0c:	ldrb	w2, [x1, x0]
   1ad10:	strb	w2, [x7, x0]
   1ad14:	sub	x0, x0, #0x1
   1ad18:	cmn	x0, #0x1
   1ad1c:	b.eq	1a870 <__sanitizer_set_report_fd@@Base+0x29f0>  // b.none
   1ad20:	ldrb	w2, [x1, x0]
   1ad24:	strb	w2, [x7, x0]
   1ad28:	sub	x0, x0, #0x1
   1ad2c:	cmn	x0, #0x1
   1ad30:	b.ne	1ad0c <__sanitizer_set_report_fd@@Base+0x2e8c>  // b.any
   1ad34:	b	1a870 <__sanitizer_set_report_fd@@Base+0x29f0>
   1ad38:	ldrb	w6, [x1, x5]
   1ad3c:	strb	w6, [x7, x5]
   1ad40:	sub	x5, x5, #0x1
   1ad44:	cmn	x5, #0x1
   1ad48:	b.eq	1a9e8 <__sanitizer_set_report_fd@@Base+0x2b68>  // b.none
   1ad4c:	ldrb	w6, [x1, x5]
   1ad50:	strb	w6, [x7, x5]
   1ad54:	sub	x5, x5, #0x1
   1ad58:	cmn	x5, #0x1
   1ad5c:	b.ne	1ad38 <__sanitizer_set_report_fd@@Base+0x2eb8>  // b.any
   1ad60:	b	1a9e8 <__sanitizer_set_report_fd@@Base+0x2b68>
   1ad64:	mov	x5, #0x0                   	// #0
   1ad68:	ldrb	w6, [x1, x5]
   1ad6c:	strb	w6, [x7, x5]
   1ad70:	add	x5, x5, #0x1
   1ad74:	cmp	x8, x5
   1ad78:	b.ne	1ad68 <__sanitizer_set_report_fd@@Base+0x2ee8>  // b.any
   1ad7c:	b	1a9e8 <__sanitizer_set_report_fd@@Base+0x2b68>
   1ad80:	mov	x0, #0x0                   	// #0
   1ad84:	nop
   1ad88:	ldrb	w2, [x1, x0]
   1ad8c:	strb	w2, [x7, x0]
   1ad90:	add	x0, x0, #0x1
   1ad94:	cmp	x5, x0
   1ad98:	b.ne	1ad88 <__sanitizer_set_report_fd@@Base+0x2f08>  // b.any
   1ad9c:	add	x0, x4, x3
   1ada0:	b	1a874 <__sanitizer_set_report_fd@@Base+0x29f4>
   1ada4:	nop
   1ada8:	ldrb	w3, [x0]
   1adac:	mov	x4, #0x0                   	// #0
   1adb0:	cbz	w3, 1ae10 <__sanitizer_set_report_fd@@Base+0x2f90>
   1adb4:	nop
   1adb8:	add	x4, x4, #0x1
   1adbc:	add	x5, x0, x4
   1adc0:	ldrb	w3, [x0, x4]
   1adc4:	cbnz	w3, 1adb8 <__sanitizer_set_report_fd@@Base+0x2f38>
   1adc8:	add	x6, x0, x4
   1adcc:	mov	x3, #0x0                   	// #0
   1add0:	cbnz	x2, 1ade4 <__sanitizer_set_report_fd@@Base+0x2f64>
   1add4:	b	1adf8 <__sanitizer_set_report_fd@@Base+0x2f78>
   1add8:	strb	w7, [x6]
   1addc:	add	x6, x6, #0x1
   1ade0:	b.eq	1ae00 <__sanitizer_set_report_fd@@Base+0x2f80>  // b.none
   1ade4:	ldrb	w7, [x1, x3]
   1ade8:	add	x3, x3, #0x1
   1adec:	mov	x5, x6
   1adf0:	cmp	x2, x3
   1adf4:	cbnz	w7, 1add8 <__sanitizer_set_report_fd@@Base+0x2f58>
   1adf8:	strb	wzr, [x5]
   1adfc:	ret
   1ae00:	add	x4, x2, x4
   1ae04:	add	x5, x0, x4
   1ae08:	strb	wzr, [x5]
   1ae0c:	ret
   1ae10:	mov	x5, x0
   1ae14:	b	1adc8 <__sanitizer_set_report_fd@@Base+0x2f48>
   1ae18:	mov	x4, x0
   1ae1c:	ldrb	w0, [x1]
   1ae20:	cbz	w0, 1b478 <__sanitizer_set_report_fd@@Base+0x35f8>
   1ae24:	mov	x0, #0x0                   	// #0
   1ae28:	add	x0, x0, #0x1
   1ae2c:	ldrb	w3, [x1, x0]
   1ae30:	cbnz	w3, 1ae28 <__sanitizer_set_report_fd@@Base+0x2fa8>
   1ae34:	cmp	x2, x0
   1ae38:	b.hi	1afc0 <__sanitizer_set_report_fd@@Base+0x3140>  // b.pmore
   1ae3c:	cbnz	x2, 1ae44 <__sanitizer_set_report_fd@@Base+0x2fc4>
   1ae40:	ret
   1ae44:	cmp	x1, x4
   1ae48:	sub	x5, x2, #0x1
   1ae4c:	b.ls	1b2e0 <__sanitizer_set_report_fd@@Base+0x3460>  // b.plast
   1ae50:	cmp	x5, #0x0
   1ae54:	b.le	1afb8 <__sanitizer_set_report_fd@@Base+0x3138>
   1ae58:	add	x3, x1, #0xf
   1ae5c:	sub	x2, x2, #0x2
   1ae60:	sub	x3, x3, x4
   1ae64:	cmp	x3, #0x1e
   1ae68:	ccmp	x2, #0xe, #0x0, hi  // hi = pmore
   1ae6c:	b.ls	1b4a0 <__sanitizer_set_report_fd@@Base+0x3620>  // b.plast
   1ae70:	and	x3, x5, #0xfffffffffffffff0
   1ae74:	mov	x2, #0x0                   	// #0
   1ae78:	ldr	q0, [x1, x2]
   1ae7c:	str	q0, [x4, x2]
   1ae80:	add	x2, x2, #0x10
   1ae84:	cmp	x2, x3
   1ae88:	b.ne	1ae78 <__sanitizer_set_report_fd@@Base+0x2ff8>  // b.any
   1ae8c:	tst	x5, #0xf
   1ae90:	and	x2, x5, #0xfffffffffffffff0
   1ae94:	b.eq	1afb8 <__sanitizer_set_report_fd@@Base+0x3138>  // b.none
   1ae98:	ldrb	w6, [x1, x2]
   1ae9c:	add	x3, x2, #0x1
   1aea0:	strb	w6, [x4, x2]
   1aea4:	cmp	x5, x3
   1aea8:	b.le	1afb8 <__sanitizer_set_report_fd@@Base+0x3138>
   1aeac:	ldrb	w7, [x1, x3]
   1aeb0:	add	x6, x2, #0x2
   1aeb4:	strb	w7, [x4, x3]
   1aeb8:	cmp	x5, x6
   1aebc:	b.le	1afb8 <__sanitizer_set_report_fd@@Base+0x3138>
   1aec0:	ldrb	w7, [x1, x6]
   1aec4:	add	x3, x2, #0x3
   1aec8:	strb	w7, [x4, x6]
   1aecc:	cmp	x5, x3
   1aed0:	b.le	1afb8 <__sanitizer_set_report_fd@@Base+0x3138>
   1aed4:	ldrb	w7, [x1, x3]
   1aed8:	add	x6, x2, #0x4
   1aedc:	strb	w7, [x4, x3]
   1aee0:	cmp	x5, x6
   1aee4:	b.le	1afb8 <__sanitizer_set_report_fd@@Base+0x3138>
   1aee8:	ldrb	w7, [x1, x6]
   1aeec:	add	x3, x2, #0x5
   1aef0:	strb	w7, [x4, x6]
   1aef4:	cmp	x5, x3
   1aef8:	b.le	1afb8 <__sanitizer_set_report_fd@@Base+0x3138>
   1aefc:	ldrb	w7, [x1, x3]
   1af00:	add	x6, x2, #0x6
   1af04:	strb	w7, [x4, x3]
   1af08:	cmp	x5, x6
   1af0c:	b.le	1afb8 <__sanitizer_set_report_fd@@Base+0x3138>
   1af10:	ldrb	w7, [x1, x6]
   1af14:	add	x3, x2, #0x7
   1af18:	strb	w7, [x4, x6]
   1af1c:	cmp	x5, x3
   1af20:	b.le	1afb8 <__sanitizer_set_report_fd@@Base+0x3138>
   1af24:	ldrb	w7, [x1, x3]
   1af28:	add	x6, x2, #0x8
   1af2c:	strb	w7, [x4, x3]
   1af30:	cmp	x5, x6
   1af34:	b.le	1afb8 <__sanitizer_set_report_fd@@Base+0x3138>
   1af38:	ldrb	w7, [x1, x6]
   1af3c:	add	x3, x2, #0x9
   1af40:	strb	w7, [x4, x6]
   1af44:	cmp	x5, x3
   1af48:	b.le	1afb8 <__sanitizer_set_report_fd@@Base+0x3138>
   1af4c:	ldrb	w6, [x1, x3]
   1af50:	add	x7, x2, #0xa
   1af54:	strb	w6, [x4, x3]
   1af58:	cmp	x5, x7
   1af5c:	b.le	1afb8 <__sanitizer_set_report_fd@@Base+0x3138>
   1af60:	ldrb	w3, [x1, x7]
   1af64:	add	x6, x2, #0xb
   1af68:	strb	w3, [x4, x7]
   1af6c:	cmp	x5, x6
   1af70:	b.le	1afb8 <__sanitizer_set_report_fd@@Base+0x3138>
   1af74:	ldrb	w7, [x1, x6]
   1af78:	add	x3, x2, #0xc
   1af7c:	strb	w7, [x4, x6]
   1af80:	cmp	x5, x3
   1af84:	b.le	1afb8 <__sanitizer_set_report_fd@@Base+0x3138>
   1af88:	ldrb	w7, [x1, x3]
   1af8c:	add	x6, x2, #0xd
   1af90:	strb	w7, [x4, x3]
   1af94:	cmp	x5, x6
   1af98:	b.le	1afb8 <__sanitizer_set_report_fd@@Base+0x3138>
   1af9c:	ldrb	w3, [x1, x6]
   1afa0:	add	x2, x2, #0xe
   1afa4:	strb	w3, [x4, x6]
   1afa8:	cmp	x5, x2
   1afac:	b.le	1afb8 <__sanitizer_set_report_fd@@Base+0x3138>
   1afb0:	ldrb	w1, [x1, x2]
   1afb4:	strb	w1, [x4, x2]
   1afb8:	strb	wzr, [x4, x5]
   1afbc:	ret
   1afc0:	cmp	x1, x4
   1afc4:	add	x6, x0, #0x1
   1afc8:	b.ls	1b134 <__sanitizer_set_report_fd@@Base+0x32b4>  // b.plast
   1afcc:	cmp	x6, #0x0
   1afd0:	b.le	1ae40 <__sanitizer_set_report_fd@@Base+0x2fc0>
   1afd4:	add	x2, x1, #0xf
   1afd8:	sub	x2, x2, x4
   1afdc:	cmp	x2, #0x1e
   1afe0:	ccmp	x0, #0xe, #0x0, hi  // hi = pmore
   1afe4:	b.ls	1b480 <__sanitizer_set_report_fd@@Base+0x3600>  // b.plast
   1afe8:	and	x3, x6, #0xfffffffffffffff0
   1afec:	mov	x2, #0x0                   	// #0
   1aff0:	ldr	q0, [x1, x2]
   1aff4:	str	q0, [x4, x2]
   1aff8:	add	x2, x2, #0x10
   1affc:	cmp	x2, x3
   1b000:	b.ne	1aff0 <__sanitizer_set_report_fd@@Base+0x3170>  // b.any
   1b004:	tst	x6, #0xf
   1b008:	and	x2, x6, #0xfffffffffffffff0
   1b00c:	b.eq	1ae40 <__sanitizer_set_report_fd@@Base+0x2fc0>  // b.none
   1b010:	ldrb	w5, [x1, x2]
   1b014:	add	x3, x2, #0x1
   1b018:	strb	w5, [x4, x2]
   1b01c:	cmp	x6, x3
   1b020:	b.le	1ae40 <__sanitizer_set_report_fd@@Base+0x2fc0>
   1b024:	ldrb	w7, [x1, x3]
   1b028:	add	x5, x2, #0x2
   1b02c:	strb	w7, [x4, x3]
   1b030:	cmp	x6, x5
   1b034:	b.le	1ae40 <__sanitizer_set_report_fd@@Base+0x2fc0>
   1b038:	ldrb	w7, [x1, x5]
   1b03c:	add	x3, x2, #0x3
   1b040:	strb	w7, [x4, x5]
   1b044:	cmp	x6, x3
   1b048:	b.le	1ae40 <__sanitizer_set_report_fd@@Base+0x2fc0>
   1b04c:	ldrb	w7, [x1, x3]
   1b050:	add	x5, x2, #0x4
   1b054:	strb	w7, [x4, x3]
   1b058:	cmp	x6, x5
   1b05c:	b.le	1ae40 <__sanitizer_set_report_fd@@Base+0x2fc0>
   1b060:	ldrb	w7, [x1, x5]
   1b064:	add	x3, x2, #0x5
   1b068:	strb	w7, [x4, x5]
   1b06c:	cmp	x6, x3
   1b070:	b.le	1ae40 <__sanitizer_set_report_fd@@Base+0x2fc0>
   1b074:	ldrb	w7, [x1, x3]
   1b078:	add	x5, x2, #0x6
   1b07c:	strb	w7, [x4, x3]
   1b080:	cmp	x6, x5
   1b084:	b.le	1ae40 <__sanitizer_set_report_fd@@Base+0x2fc0>
   1b088:	ldrb	w7, [x1, x5]
   1b08c:	add	x3, x2, #0x7
   1b090:	strb	w7, [x4, x5]
   1b094:	cmp	x6, x3
   1b098:	b.le	1ae40 <__sanitizer_set_report_fd@@Base+0x2fc0>
   1b09c:	ldrb	w7, [x1, x3]
   1b0a0:	add	x5, x2, #0x8
   1b0a4:	strb	w7, [x4, x3]
   1b0a8:	cmp	x6, x5
   1b0ac:	b.le	1ae40 <__sanitizer_set_report_fd@@Base+0x2fc0>
   1b0b0:	ldrb	w7, [x1, x5]
   1b0b4:	add	x3, x2, #0x9
   1b0b8:	strb	w7, [x4, x5]
   1b0bc:	cmp	x6, x3
   1b0c0:	b.le	1ae40 <__sanitizer_set_report_fd@@Base+0x2fc0>
   1b0c4:	ldrb	w7, [x1, x3]
   1b0c8:	add	x5, x2, #0xa
   1b0cc:	strb	w7, [x4, x3]
   1b0d0:	cmp	x6, x5
   1b0d4:	b.le	1ae40 <__sanitizer_set_report_fd@@Base+0x2fc0>
   1b0d8:	ldrb	w3, [x1, x5]
   1b0dc:	add	x7, x2, #0xb
   1b0e0:	strb	w3, [x4, x5]
   1b0e4:	cmp	x6, x7
   1b0e8:	b.le	1ae40 <__sanitizer_set_report_fd@@Base+0x2fc0>
   1b0ec:	ldrb	w5, [x1, x7]
   1b0f0:	add	x3, x2, #0xc
   1b0f4:	strb	w5, [x4, x7]
   1b0f8:	cmp	x6, x3
   1b0fc:	b.le	1ae40 <__sanitizer_set_report_fd@@Base+0x2fc0>
   1b100:	ldrb	w7, [x1, x3]
   1b104:	add	x5, x2, #0xd
   1b108:	strb	w7, [x4, x3]
   1b10c:	cmp	x6, x5
   1b110:	b.le	1ae40 <__sanitizer_set_report_fd@@Base+0x2fc0>
   1b114:	ldrb	w3, [x1, x5]
   1b118:	add	x2, x2, #0xe
   1b11c:	strb	w3, [x4, x5]
   1b120:	cmp	x6, x2
   1b124:	b.le	1ae40 <__sanitizer_set_report_fd@@Base+0x2fc0>
   1b128:	ldrb	w1, [x1, x2]
   1b12c:	strb	w1, [x4, x2]
   1b130:	ret
   1b134:	cmp	x6, #0x0
   1b138:	ccmp	x1, x4, #0x2, gt
   1b13c:	b.cs	1ae40 <__sanitizer_set_report_fd@@Base+0x2fc0>  // b.hs, b.nlast
   1b140:	sub	x3, x0, #0xf
   1b144:	add	x2, x1, x6
   1b148:	add	x7, x4, x3
   1b14c:	add	x3, x1, x3
   1b150:	cmp	x2, x7
   1b154:	add	x2, x4, x6
   1b158:	ccmp	x2, x3, #0x0, hi  // hi = pmore
   1b15c:	mov	x2, x0
   1b160:	ccmp	x0, #0xe, #0x0, ls  // ls = plast
   1b164:	b.ls	1b2b4 <__sanitizer_set_report_fd@@Base+0x3434>  // b.plast
   1b168:	neg	x5, x6, lsr #4
   1b16c:	mov	x2, #0x0                   	// #0
   1b170:	lsl	x5, x5, #4
   1b174:	nop
   1b178:	ldr	q0, [x3, x2]
   1b17c:	str	q0, [x7, x2]
   1b180:	sub	x2, x2, #0x10
   1b184:	cmp	x2, x5
   1b188:	b.ne	1b178 <__sanitizer_set_report_fd@@Base+0x32f8>  // b.any
   1b18c:	and	x2, x6, #0xfffffffffffffff0
   1b190:	cmp	x6, x2
   1b194:	sub	x2, x0, x2
   1b198:	b.eq	1ae40 <__sanitizer_set_report_fd@@Base+0x2fc0>  // b.none
   1b19c:	ldrb	w5, [x1, x2]
   1b1a0:	sub	x3, x2, #0x1
   1b1a4:	strb	w5, [x4, x2]
   1b1a8:	cbz	x2, 1ae40 <__sanitizer_set_report_fd@@Base+0x2fc0>
   1b1ac:	ldrb	w5, [x1, x3]
   1b1b0:	cmp	x2, #0x1
   1b1b4:	strb	w5, [x4, x3]
   1b1b8:	sub	x3, x2, #0x2
   1b1bc:	b.eq	1ae40 <__sanitizer_set_report_fd@@Base+0x2fc0>  // b.none
   1b1c0:	ldrb	w5, [x1, x3]
   1b1c4:	cmp	x2, #0x2
   1b1c8:	strb	w5, [x4, x3]
   1b1cc:	sub	x3, x2, #0x3
   1b1d0:	b.eq	1ae40 <__sanitizer_set_report_fd@@Base+0x2fc0>  // b.none
   1b1d4:	ldrb	w5, [x1, x3]
   1b1d8:	cmp	x2, #0x3
   1b1dc:	strb	w5, [x4, x3]
   1b1e0:	sub	x3, x2, #0x4
   1b1e4:	b.eq	1ae40 <__sanitizer_set_report_fd@@Base+0x2fc0>  // b.none
   1b1e8:	ldrb	w5, [x1, x3]
   1b1ec:	cmp	x2, #0x4
   1b1f0:	strb	w5, [x4, x3]
   1b1f4:	sub	x3, x2, #0x5
   1b1f8:	b.eq	1ae40 <__sanitizer_set_report_fd@@Base+0x2fc0>  // b.none
   1b1fc:	ldrb	w5, [x1, x3]
   1b200:	cmp	x2, #0x5
   1b204:	strb	w5, [x4, x3]
   1b208:	sub	x3, x2, #0x6
   1b20c:	b.eq	1ae40 <__sanitizer_set_report_fd@@Base+0x2fc0>  // b.none
   1b210:	ldrb	w5, [x1, x3]
   1b214:	cmp	x2, #0x6
   1b218:	strb	w5, [x4, x3]
   1b21c:	sub	x3, x2, #0x7
   1b220:	b.eq	1ae40 <__sanitizer_set_report_fd@@Base+0x2fc0>  // b.none
   1b224:	ldrb	w5, [x1, x3]
   1b228:	cmp	x2, #0x7
   1b22c:	strb	w5, [x4, x3]
   1b230:	sub	x3, x2, #0x8
   1b234:	b.eq	1ae40 <__sanitizer_set_report_fd@@Base+0x2fc0>  // b.none
   1b238:	ldrb	w5, [x1, x3]
   1b23c:	cmp	x2, #0x8
   1b240:	strb	w5, [x4, x3]
   1b244:	sub	x3, x2, #0x9
   1b248:	b.eq	1ae40 <__sanitizer_set_report_fd@@Base+0x2fc0>  // b.none
   1b24c:	ldrb	w5, [x1, x3]
   1b250:	cmp	x2, #0x9
   1b254:	strb	w5, [x4, x3]
   1b258:	sub	x3, x2, #0xa
   1b25c:	b.eq	1ae40 <__sanitizer_set_report_fd@@Base+0x2fc0>  // b.none
   1b260:	ldrb	w5, [x1, x3]
   1b264:	cmp	x2, #0xa
   1b268:	strb	w5, [x4, x3]
   1b26c:	sub	x3, x2, #0xb
   1b270:	b.eq	1ae40 <__sanitizer_set_report_fd@@Base+0x2fc0>  // b.none
   1b274:	ldrb	w5, [x1, x3]
   1b278:	cmp	x2, #0xb
   1b27c:	strb	w5, [x4, x3]
   1b280:	sub	x3, x2, #0xc
   1b284:	b.eq	1ae40 <__sanitizer_set_report_fd@@Base+0x2fc0>  // b.none
   1b288:	ldrb	w5, [x1, x3]
   1b28c:	cmp	x2, #0xc
   1b290:	strb	w5, [x4, x3]
   1b294:	sub	x3, x2, #0xd
   1b298:	b.eq	1ae40 <__sanitizer_set_report_fd@@Base+0x2fc0>  // b.none
   1b29c:	ldrb	w5, [x1, x3]
   1b2a0:	cmp	x2, #0xd
   1b2a4:	strb	w5, [x4, x3]
   1b2a8:	sub	x2, x2, #0xe
   1b2ac:	b.ne	1b128 <__sanitizer_set_report_fd@@Base+0x32a8>  // b.any
   1b2b0:	ret
   1b2b4:	ldrb	w3, [x1, x2]
   1b2b8:	strb	w3, [x4, x2]
   1b2bc:	sub	x2, x2, #0x1
   1b2c0:	cmn	x2, #0x1
   1b2c4:	b.eq	1ae40 <__sanitizer_set_report_fd@@Base+0x2fc0>  // b.none
   1b2c8:	ldrb	w3, [x1, x2]
   1b2cc:	strb	w3, [x4, x2]
   1b2d0:	sub	x2, x2, #0x1
   1b2d4:	cmn	x2, #0x1
   1b2d8:	b.ne	1b2b4 <__sanitizer_set_report_fd@@Base+0x3434>  // b.any
   1b2dc:	b	1ae40 <__sanitizer_set_report_fd@@Base+0x2fc0>
   1b2e0:	cmp	x5, #0x0
   1b2e4:	ccmp	x1, x4, #0x2, gt
   1b2e8:	b.cs	1afb8 <__sanitizer_set_report_fd@@Base+0x3138>  // b.hs, b.nlast
   1b2ec:	sub	x6, x2, #0x11
   1b2f0:	add	x3, x1, x5
   1b2f4:	add	x8, x4, x6
   1b2f8:	add	x6, x1, x6
   1b2fc:	cmp	x3, x8
   1b300:	add	x3, x4, x5
   1b304:	sub	x2, x2, #0x2
   1b308:	ccmp	x3, x6, #0x0, hi  // hi = pmore
   1b30c:	ccmp	x2, #0xe, #0x0, ls  // ls = plast
   1b310:	b.ls	1b460 <__sanitizer_set_report_fd@@Base+0x35e0>  // b.plast
   1b314:	neg	x7, x5, lsr #4
   1b318:	mov	x3, #0x0                   	// #0
   1b31c:	lsl	x7, x7, #4
   1b320:	ldr	q0, [x6, x3]
   1b324:	str	q0, [x8, x3]
   1b328:	sub	x3, x3, #0x10
   1b32c:	cmp	x3, x7
   1b330:	b.ne	1b320 <__sanitizer_set_report_fd@@Base+0x34a0>  // b.any
   1b334:	and	x3, x5, #0xfffffffffffffff0
   1b338:	sub	x2, x2, x3
   1b33c:	cmp	x5, x3
   1b340:	b.eq	1afb8 <__sanitizer_set_report_fd@@Base+0x3138>  // b.none
   1b344:	ldrb	w6, [x1, x2]
   1b348:	sub	x3, x2, #0x1
   1b34c:	strb	w6, [x4, x2]
   1b350:	cbz	x2, 1afb8 <__sanitizer_set_report_fd@@Base+0x3138>
   1b354:	ldrb	w6, [x1, x3]
   1b358:	cmp	x2, #0x1
   1b35c:	strb	w6, [x4, x3]
   1b360:	sub	x3, x2, #0x2
   1b364:	b.eq	1afb8 <__sanitizer_set_report_fd@@Base+0x3138>  // b.none
   1b368:	ldrb	w6, [x1, x3]
   1b36c:	cmp	x2, #0x2
   1b370:	strb	w6, [x4, x3]
   1b374:	sub	x3, x2, #0x3
   1b378:	b.eq	1afb8 <__sanitizer_set_report_fd@@Base+0x3138>  // b.none
   1b37c:	ldrb	w6, [x1, x3]
   1b380:	cmp	x2, #0x3
   1b384:	strb	w6, [x4, x3]
   1b388:	sub	x3, x2, #0x4
   1b38c:	b.eq	1afb8 <__sanitizer_set_report_fd@@Base+0x3138>  // b.none
   1b390:	ldrb	w6, [x1, x3]
   1b394:	cmp	x2, #0x4
   1b398:	strb	w6, [x4, x3]
   1b39c:	sub	x3, x2, #0x5
   1b3a0:	b.eq	1afb8 <__sanitizer_set_report_fd@@Base+0x3138>  // b.none
   1b3a4:	ldrb	w6, [x1, x3]
   1b3a8:	cmp	x2, #0x5
   1b3ac:	strb	w6, [x4, x3]
   1b3b0:	sub	x3, x2, #0x6
   1b3b4:	b.eq	1afb8 <__sanitizer_set_report_fd@@Base+0x3138>  // b.none
   1b3b8:	ldrb	w6, [x1, x3]
   1b3bc:	cmp	x2, #0x6
   1b3c0:	strb	w6, [x4, x3]
   1b3c4:	sub	x3, x2, #0x7
   1b3c8:	b.eq	1afb8 <__sanitizer_set_report_fd@@Base+0x3138>  // b.none
   1b3cc:	ldrb	w6, [x1, x3]
   1b3d0:	cmp	x2, #0x7
   1b3d4:	strb	w6, [x4, x3]
   1b3d8:	sub	x3, x2, #0x8
   1b3dc:	b.eq	1afb8 <__sanitizer_set_report_fd@@Base+0x3138>  // b.none
   1b3e0:	ldrb	w6, [x1, x3]
   1b3e4:	cmp	x2, #0x8
   1b3e8:	strb	w6, [x4, x3]
   1b3ec:	sub	x3, x2, #0x9
   1b3f0:	b.eq	1afb8 <__sanitizer_set_report_fd@@Base+0x3138>  // b.none
   1b3f4:	ldrb	w6, [x1, x3]
   1b3f8:	cmp	x2, #0x9
   1b3fc:	strb	w6, [x4, x3]
   1b400:	sub	x3, x2, #0xa
   1b404:	b.eq	1afb8 <__sanitizer_set_report_fd@@Base+0x3138>  // b.none
   1b408:	ldrb	w6, [x1, x3]
   1b40c:	cmp	x2, #0xa
   1b410:	strb	w6, [x4, x3]
   1b414:	sub	x3, x2, #0xb
   1b418:	b.eq	1afb8 <__sanitizer_set_report_fd@@Base+0x3138>  // b.none
   1b41c:	ldrb	w6, [x1, x3]
   1b420:	cmp	x2, #0xb
   1b424:	strb	w6, [x4, x3]
   1b428:	sub	x3, x2, #0xc
   1b42c:	b.eq	1afb8 <__sanitizer_set_report_fd@@Base+0x3138>  // b.none
   1b430:	ldrb	w6, [x1, x3]
   1b434:	cmp	x2, #0xc
   1b438:	strb	w6, [x4, x3]
   1b43c:	sub	x3, x2, #0xd
   1b440:	b.eq	1afb8 <__sanitizer_set_report_fd@@Base+0x3138>  // b.none
   1b444:	ldrb	w6, [x1, x3]
   1b448:	cmp	x2, #0xd
   1b44c:	strb	w6, [x4, x3]
   1b450:	sub	x2, x2, #0xe
   1b454:	b.ne	1afb0 <__sanitizer_set_report_fd@@Base+0x3130>  // b.any
   1b458:	strb	wzr, [x4, x5]
   1b45c:	b	1afbc <__sanitizer_set_report_fd@@Base+0x313c>
   1b460:	ldrb	w3, [x1, x2]
   1b464:	strb	w3, [x4, x2]
   1b468:	sub	x2, x2, #0x1
   1b46c:	cmn	x2, #0x1
   1b470:	b.ne	1b460 <__sanitizer_set_report_fd@@Base+0x35e0>  // b.any
   1b474:	b	1afb8 <__sanitizer_set_report_fd@@Base+0x3138>
   1b478:	mov	x0, #0x0                   	// #0
   1b47c:	b	1ae34 <__sanitizer_set_report_fd@@Base+0x2fb4>
   1b480:	mov	x2, #0x0                   	// #0
   1b484:	nop
   1b488:	ldrb	w3, [x1, x2]
   1b48c:	strb	w3, [x4, x2]
   1b490:	add	x2, x2, #0x1
   1b494:	cmp	x6, x2
   1b498:	b.ne	1b488 <__sanitizer_set_report_fd@@Base+0x3608>  // b.any
   1b49c:	ret
   1b4a0:	mov	x2, #0x0                   	// #0
   1b4a4:	nop
   1b4a8:	ldrb	w3, [x1, x2]
   1b4ac:	strb	w3, [x4, x2]
   1b4b0:	add	x2, x2, #0x1
   1b4b4:	cmp	x5, x2
   1b4b8:	b.ne	1b4a8 <__sanitizer_set_report_fd@@Base+0x3628>  // b.any
   1b4bc:	strb	wzr, [x4, x5]
   1b4c0:	b	1afbc <__sanitizer_set_report_fd@@Base+0x313c>
   1b4c4:	nop
   1b4c8:	cbz	x2, 1b514 <__sanitizer_set_report_fd@@Base+0x3694>
   1b4cc:	mov	x3, #0x0                   	// #0
   1b4d0:	b	1b4e4 <__sanitizer_set_report_fd@@Base+0x3664>
   1b4d4:	strb	w5, [x0, x3]
   1b4d8:	add	x3, x3, #0x1
   1b4dc:	cmp	x2, x3
   1b4e0:	b.eq	1b514 <__sanitizer_set_report_fd@@Base+0x3694>  // b.none
   1b4e4:	ldrb	w5, [x1, x3]
   1b4e8:	add	x4, x0, x3
   1b4ec:	cbnz	w5, 1b4d4 <__sanitizer_set_report_fd@@Base+0x3654>
   1b4f0:	sub	x2, x2, x3
   1b4f4:	orr	x3, x2, x4
   1b4f8:	ands	x3, x3, #0xf
   1b4fc:	b.eq	1b518 <__sanitizer_set_report_fd@@Base+0x3698>  // b.none
   1b500:	cbz	x2, 1b514 <__sanitizer_set_report_fd@@Base+0x3694>
   1b504:	add	x2, x4, x2
   1b508:	strb	wzr, [x4], #1
   1b50c:	cmp	x4, x2
   1b510:	b.ne	1b508 <__sanitizer_set_report_fd@@Base+0x3688>  // b.any
   1b514:	ret
   1b518:	and	x2, x2, #0xfffffffffffffff8
   1b51c:	add	x1, x4, x2
   1b520:	cmp	x1, x4
   1b524:	b.ls	1b514 <__sanitizer_set_report_fd@@Base+0x3694>  // b.plast
   1b528:	movi	v0.4s, #0x0
   1b52c:	mvn	x2, x4
   1b530:	add	x1, x1, x2
   1b534:	lsr	x1, x1, #4
   1b538:	add	x1, x1, #0x1
   1b53c:	nop
   1b540:	lsl	x2, x3, #4
   1b544:	add	x3, x3, #0x1
   1b548:	cmp	x3, x1
   1b54c:	str	q0, [x4, x2]
   1b550:	b.cc	1b540 <__sanitizer_set_report_fd@@Base+0x36c0>  // b.lo, b.ul, b.last
   1b554:	ret
   1b558:	mov	x3, x0
   1b55c:	mov	x0, #0x0                   	// #0
   1b560:	cbnz	x1, 1b574 <__sanitizer_set_report_fd@@Base+0x36f4>
   1b564:	b	1b57c <__sanitizer_set_report_fd@@Base+0x36fc>
   1b568:	add	x0, x0, #0x1
   1b56c:	cmp	x1, x0
   1b570:	b.eq	1b57c <__sanitizer_set_report_fd@@Base+0x36fc>  // b.none
   1b574:	ldrb	w2, [x3, x0]
   1b578:	cbnz	w2, 1b568 <__sanitizer_set_report_fd@@Base+0x36e8>
   1b57c:	ret
   1b580:	mov	x8, x0
   1b584:	ldrb	w0, [x0]
   1b588:	mov	x2, #0x0                   	// #0
   1b58c:	cbz	w0, 1b59c <__sanitizer_set_report_fd@@Base+0x371c>
   1b590:	add	x2, x2, #0x1
   1b594:	ldrb	w3, [x8, x2]
   1b598:	cbnz	w3, 1b590 <__sanitizer_set_report_fd@@Base+0x3710>
   1b59c:	ldrb	w0, [x1]
   1b5a0:	cbz	w0, 1b608 <__sanitizer_set_report_fd@@Base+0x3788>
   1b5a4:	mov	x3, #0x0                   	// #0
   1b5a8:	mov	x4, x3
   1b5ac:	add	x3, x3, #0x1
   1b5b0:	ldrb	w5, [x1, x3]
   1b5b4:	cbnz	w5, 1b5a8 <__sanitizer_set_report_fd@@Base+0x3728>
   1b5b8:	cmp	x3, x2
   1b5bc:	b.hi	1b600 <__sanitizer_set_report_fd@@Base+0x3780>  // b.pmore
   1b5c0:	sub	x3, x2, x3
   1b5c4:	mov	x9, #0x0                   	// #0
   1b5c8:	add	x0, x8, x9
   1b5cc:	mov	x2, #0x0                   	// #0
   1b5d0:	b	1b5e0 <__sanitizer_set_report_fd@@Base+0x3760>
   1b5d4:	cmp	x4, x2
   1b5d8:	b.eq	1b604 <__sanitizer_set_report_fd@@Base+0x3784>  // b.none
   1b5dc:	mov	x2, x7
   1b5e0:	ldrb	w6, [x0, x2]
   1b5e4:	add	x7, x2, #0x1
   1b5e8:	ldrb	w5, [x1, x2]
   1b5ec:	cmp	w6, w5
   1b5f0:	b.eq	1b5d4 <__sanitizer_set_report_fd@@Base+0x3754>  // b.none
   1b5f4:	add	x9, x9, #0x1
   1b5f8:	cmp	x3, x9
   1b5fc:	b.cs	1b5c8 <__sanitizer_set_report_fd@@Base+0x3748>  // b.hs, b.nlast
   1b600:	mov	x0, #0x0                   	// #0
   1b604:	ret
   1b608:	mov	x0, x8
   1b60c:	ret
   1b610:	cmp	w2, #0xa
   1b614:	b.ne	1b708 <__sanitizer_set_report_fd@@Base+0x3888>  // b.any
   1b618:	ldrb	w2, [x0]
   1b61c:	cmp	w2, #0x20
   1b620:	b.eq	1b6c8 <__sanitizer_set_report_fd@@Base+0x3848>  // b.none
   1b624:	sub	w3, w2, #0x9
   1b628:	and	w3, w3, #0xff
   1b62c:	cmp	w3, #0x4
   1b630:	b.ls	1b6c8 <__sanitizer_set_report_fd@@Base+0x3848>  // b.plast
   1b634:	cmp	w2, #0x2b
   1b638:	b.eq	1b6f4 <__sanitizer_set_report_fd@@Base+0x3874>  // b.none
   1b63c:	cmp	w2, #0x2d
   1b640:	b.eq	1b6d0 <__sanitizer_set_report_fd@@Base+0x3850>  // b.none
   1b644:	mov	w4, w2
   1b648:	mov	x5, x0
   1b64c:	mov	w8, #0x1                   	// #1
   1b650:	sub	w2, w2, #0x30
   1b654:	cmp	w2, #0x9
   1b658:	b.hi	1b72c <__sanitizer_set_report_fd@@Base+0x38ac>  // b.pmore
   1b65c:	mov	x7, #0x9999999999999999    	// #-7378697629483820647
   1b660:	mov	x3, #0x0                   	// #0
   1b664:	movk	x7, #0x1999, lsl #48
   1b668:	mov	x6, #0xffffffffffffffff    	// #-1
   1b66c:	nop
   1b670:	sub	w0, w4, #0x30
   1b674:	add	x2, x3, x3, lsl #2
   1b678:	cmp	x3, x7
   1b67c:	ldrb	w4, [x5, #1]!
   1b680:	sxtw	x0, w0
   1b684:	lsl	x2, x2, #1
   1b688:	csel	x2, x2, x6, ls  // ls = plast
   1b68c:	mvn	x3, x0
   1b690:	cmp	x3, x2
   1b694:	add	x0, x0, x2
   1b698:	sub	w2, w4, #0x30
   1b69c:	csel	x3, x0, x6, cs  // cs = hs, nlast
   1b6a0:	cmp	w2, #0x9
   1b6a4:	b.ls	1b670 <__sanitizer_set_report_fd@@Base+0x37f0>  // b.plast
   1b6a8:	cbz	x1, 1b6b0 <__sanitizer_set_report_fd@@Base+0x3830>
   1b6ac:	str	x5, [x1]
   1b6b0:	cmp	w8, #0x1
   1b6b4:	b.ne	1b6e4 <__sanitizer_set_report_fd@@Base+0x3864>  // b.any
   1b6b8:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   1b6bc:	cmp	x3, x0
   1b6c0:	csel	x0, x3, x0, ls  // ls = plast
   1b6c4:	ret
   1b6c8:	add	x0, x0, #0x1
   1b6cc:	b	1b618 <__sanitizer_set_report_fd@@Base+0x3798>
   1b6d0:	ldrb	w2, [x0, #1]
   1b6d4:	add	x5, x0, #0x1
   1b6d8:	mov	w8, #0xffffffff            	// #-1
   1b6dc:	mov	w4, w2
   1b6e0:	b	1b650 <__sanitizer_set_report_fd@@Base+0x37d0>
   1b6e4:	cmp	x3, #0x0
   1b6e8:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   1b6ec:	csneg	x0, x0, x3, lt  // lt = tstop
   1b6f0:	ret
   1b6f4:	ldrb	w2, [x0, #1]
   1b6f8:	add	x5, x0, #0x1
   1b6fc:	mov	w8, #0x1                   	// #1
   1b700:	mov	w4, w2
   1b704:	b	1b650 <__sanitizer_set_report_fd@@Base+0x37d0>
   1b708:	str	x30, [sp, #-16]!
   1b70c:	sxtw	x3, w2
   1b710:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1b714:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1b718:	add	x0, x0, #0x440
   1b71c:	add	x2, x2, #0x428
   1b720:	mov	x4, #0xa                   	// #10
   1b724:	mov	w1, #0xe7                  	// #231
   1b728:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   1b72c:	mov	x5, x0
   1b730:	mov	x3, #0x0                   	// #0
   1b734:	cbnz	x1, 1b6ac <__sanitizer_set_report_fd@@Base+0x382c>
   1b738:	mov	x0, #0x0                   	// #0
   1b73c:	ret
   1b740:	mov	w2, #0xa                   	// #10
   1b744:	mov	x1, #0x0                   	// #0
   1b748:	b	1b610 <__sanitizer_set_report_fd@@Base+0x3790>
   1b74c:	nop
   1b750:	mov	x4, #0x10000000000         	// #1099511627776
   1b754:	cmp	x1, x4
   1b758:	b.hi	1ba68 <__sanitizer_set_report_fd@@Base+0x3be8>  // b.pmore
   1b75c:	add	x4, x0, x1
   1b760:	add	x2, x0, #0x7
   1b764:	and	x2, x2, #0xfffffffffffffff8
   1b768:	cmp	x0, x4
   1b76c:	and	x6, x4, #0xfffffffffffffff8
   1b770:	ccmp	x0, x2, #0x2, cc  // cc = lo, ul, last
   1b774:	mov	x8, x2
   1b778:	mov	x7, x6
   1b77c:	mov	x1, x0
   1b780:	mov	x3, #0x0                   	// #0
   1b784:	b.cs	1b79c <__sanitizer_set_report_fd@@Base+0x391c>  // b.hs, b.nlast
   1b788:	ldrb	w5, [x1], #1
   1b78c:	cmp	x2, x1
   1b790:	orr	x3, x3, x5
   1b794:	ccmp	x4, x1, #0x0, hi  // hi = pmore
   1b798:	b.hi	1b788 <__sanitizer_set_report_fd@@Base+0x3908>  // b.pmore
   1b79c:	cmp	x2, x6
   1b7a0:	b.cs	1b864 <__sanitizer_set_report_fd@@Base+0x39e4>  // b.hs, b.nlast
   1b7a4:	sub	x1, x6, x2
   1b7a8:	add	x9, x2, #0x1
   1b7ac:	sub	x1, x1, #0x1
   1b7b0:	cmp	x6, x9
   1b7b4:	mov	x10, #0x1                   	// #1
   1b7b8:	lsr	x5, x1, #3
   1b7bc:	csinc	x5, x10, x5, cc  // cc = lo, ul, last
   1b7c0:	cmp	x1, #0x27
   1b7c4:	ccmp	x6, x9, #0x0, hi  // hi = pmore
   1b7c8:	b.cc	1b80c <__sanitizer_set_report_fd@@Base+0x398c>  // b.lo, b.ul, b.last
   1b7cc:	movi	v0.4s, #0x0
   1b7d0:	lsr	x1, x5, #1
   1b7d4:	add	x1, x2, x1, lsl #4
   1b7d8:	ldr	q1, [x2], #16
   1b7dc:	orr	v0.16b, v0.16b, v1.16b
   1b7e0:	cmp	x2, x1
   1b7e4:	b.ne	1b7d8 <__sanitizer_set_report_fd@@Base+0x3958>  // b.any
   1b7e8:	movi	v1.4s, #0x0
   1b7ec:	and	x1, x5, #0xfffffffffffffffe
   1b7f0:	cmp	x5, x1
   1b7f4:	add	x8, x8, x1, lsl #3
   1b7f8:	ext	v1.16b, v0.16b, v1.16b, #8
   1b7fc:	orr	v0.16b, v0.16b, v1.16b
   1b800:	mov	x1, v0.d[0]
   1b804:	orr	x3, x3, x1
   1b808:	b.eq	1b864 <__sanitizer_set_report_fd@@Base+0x39e4>  // b.none
   1b80c:	mov	x1, x8
   1b810:	ldr	x2, [x1], #8
   1b814:	orr	x3, x3, x2
   1b818:	cmp	x6, x1
   1b81c:	b.ls	1b864 <__sanitizer_set_report_fd@@Base+0x39e4>  // b.plast
   1b820:	ldr	x1, [x8, #8]
   1b824:	add	x2, x8, #0x10
   1b828:	cmp	x6, x2
   1b82c:	orr	x3, x3, x1
   1b830:	b.ls	1b864 <__sanitizer_set_report_fd@@Base+0x39e4>  // b.plast
   1b834:	ldr	x1, [x8, #16]
   1b838:	add	x2, x8, #0x18
   1b83c:	cmp	x6, x2
   1b840:	orr	x3, x3, x1
   1b844:	b.ls	1b864 <__sanitizer_set_report_fd@@Base+0x39e4>  // b.plast
   1b848:	ldr	x1, [x8, #24]
   1b84c:	add	x2, x8, #0x20
   1b850:	cmp	x6, x2
   1b854:	orr	x3, x3, x1
   1b858:	b.ls	1b864 <__sanitizer_set_report_fd@@Base+0x39e4>  // b.plast
   1b85c:	ldr	x1, [x8, #32]
   1b860:	orr	x3, x3, x1
   1b864:	cmp	x0, x6
   1b868:	b.hi	1ba5c <__sanitizer_set_report_fd@@Base+0x3bdc>  // b.pmore
   1b86c:	cmp	x4, x6
   1b870:	b.ls	1ba5c <__sanitizer_set_report_fd@@Base+0x3bdc>  // b.plast
   1b874:	add	x1, x6, #0x1
   1b878:	sub	x0, x4, #0x1
   1b87c:	cmp	x4, x1
   1b880:	sub	x2, x4, x6
   1b884:	sub	x0, x0, x6
   1b888:	csinc	x2, x2, xzr, cs  // cs = hs, nlast
   1b88c:	cmp	x0, #0xe
   1b890:	ccmp	x4, x1, #0x0, hi  // hi = pmore
   1b894:	b.cc	1b93c <__sanitizer_set_report_fd@@Base+0x3abc>  // b.lo, b.ul, b.last
   1b898:	sub	x1, x2, #0x10
   1b89c:	mov	x0, #0x0                   	// #0
   1b8a0:	movi	v5.4s, #0x0
   1b8a4:	lsr	x1, x1, #4
   1b8a8:	add	x1, x1, #0x1
   1b8ac:	nop
   1b8b0:	ldr	q2, [x6], #16
   1b8b4:	add	x0, x0, #0x1
   1b8b8:	cmp	x1, x0
   1b8bc:	uxtl	v3.8h, v2.8b
   1b8c0:	uxtl2	v2.8h, v2.16b
   1b8c4:	uxtl	v0.4s, v3.4h
   1b8c8:	uxtl2	v3.4s, v3.8h
   1b8cc:	uxtl	v4.4s, v2.4h
   1b8d0:	uxtl2	v2.4s, v2.8h
   1b8d4:	uxtl	v1.2d, v0.2s
   1b8d8:	uxtl2	v0.2d, v0.4s
   1b8dc:	uxtl	v16.2d, v3.2s
   1b8e0:	uxtl2	v3.2d, v3.4s
   1b8e4:	uxtl	v7.2d, v4.2s
   1b8e8:	orr	v1.16b, v1.16b, v0.16b
   1b8ec:	uxtl2	v4.2d, v4.4s
   1b8f0:	uxtl	v6.2d, v2.2s
   1b8f4:	uxtl2	v2.2d, v2.4s
   1b8f8:	orr	v0.16b, v1.16b, v16.16b
   1b8fc:	orr	v0.16b, v0.16b, v3.16b
   1b900:	orr	v0.16b, v0.16b, v7.16b
   1b904:	orr	v0.16b, v0.16b, v4.16b
   1b908:	orr	v0.16b, v0.16b, v6.16b
   1b90c:	orr	v0.16b, v0.16b, v2.16b
   1b910:	orr	v5.16b, v5.16b, v0.16b
   1b914:	b.hi	1b8b0 <__sanitizer_set_report_fd@@Base+0x3a30>  // b.pmore
   1b918:	movi	v0.4s, #0x0
   1b91c:	lsl	x1, x1, #4
   1b920:	add	x7, x7, x1
   1b924:	cmp	x2, x1
   1b928:	ext	v0.16b, v5.16b, v0.16b, #8
   1b92c:	orr	v5.16b, v5.16b, v0.16b
   1b930:	mov	x0, v5.d[0]
   1b934:	orr	x3, x3, x0
   1b938:	b.eq	1ba5c <__sanitizer_set_report_fd@@Base+0x3bdc>  // b.none
   1b93c:	mov	x0, x7
   1b940:	ldrb	w1, [x0], #1
   1b944:	orr	x3, x3, x1
   1b948:	cmp	x4, x0
   1b94c:	b.ls	1ba5c <__sanitizer_set_report_fd@@Base+0x3bdc>  // b.plast
   1b950:	ldrb	w0, [x7, #1]
   1b954:	add	x1, x7, #0x2
   1b958:	cmp	x4, x1
   1b95c:	orr	x3, x3, x0
   1b960:	b.ls	1ba5c <__sanitizer_set_report_fd@@Base+0x3bdc>  // b.plast
   1b964:	ldrb	w0, [x7, #2]
   1b968:	add	x1, x7, #0x3
   1b96c:	cmp	x4, x1
   1b970:	orr	x3, x3, x0
   1b974:	b.ls	1ba5c <__sanitizer_set_report_fd@@Base+0x3bdc>  // b.plast
   1b978:	ldrb	w0, [x7, #3]
   1b97c:	add	x1, x7, #0x4
   1b980:	cmp	x4, x1
   1b984:	orr	x3, x3, x0
   1b988:	b.ls	1ba5c <__sanitizer_set_report_fd@@Base+0x3bdc>  // b.plast
   1b98c:	ldrb	w0, [x7, #4]
   1b990:	add	x1, x7, #0x5
   1b994:	cmp	x4, x1
   1b998:	orr	x3, x3, x0
   1b99c:	b.ls	1ba5c <__sanitizer_set_report_fd@@Base+0x3bdc>  // b.plast
   1b9a0:	ldrb	w0, [x7, #5]
   1b9a4:	add	x1, x7, #0x6
   1b9a8:	cmp	x4, x1
   1b9ac:	orr	x3, x3, x0
   1b9b0:	b.ls	1ba5c <__sanitizer_set_report_fd@@Base+0x3bdc>  // b.plast
   1b9b4:	ldrb	w0, [x7, #6]
   1b9b8:	add	x1, x7, #0x7
   1b9bc:	cmp	x4, x1
   1b9c0:	orr	x3, x3, x0
   1b9c4:	b.ls	1ba5c <__sanitizer_set_report_fd@@Base+0x3bdc>  // b.plast
   1b9c8:	ldrb	w0, [x7, #7]
   1b9cc:	add	x1, x7, #0x8
   1b9d0:	cmp	x4, x1
   1b9d4:	orr	x3, x3, x0
   1b9d8:	b.ls	1ba5c <__sanitizer_set_report_fd@@Base+0x3bdc>  // b.plast
   1b9dc:	ldrb	w0, [x7, #8]
   1b9e0:	add	x1, x7, #0x9
   1b9e4:	cmp	x4, x1
   1b9e8:	orr	x3, x3, x0
   1b9ec:	b.ls	1ba5c <__sanitizer_set_report_fd@@Base+0x3bdc>  // b.plast
   1b9f0:	ldrb	w0, [x7, #9]
   1b9f4:	add	x1, x7, #0xa
   1b9f8:	cmp	x4, x1
   1b9fc:	orr	x3, x3, x0
   1ba00:	b.ls	1ba5c <__sanitizer_set_report_fd@@Base+0x3bdc>  // b.plast
   1ba04:	ldrb	w0, [x7, #10]
   1ba08:	add	x1, x7, #0xb
   1ba0c:	cmp	x4, x1
   1ba10:	orr	x3, x3, x0
   1ba14:	b.ls	1ba5c <__sanitizer_set_report_fd@@Base+0x3bdc>  // b.plast
   1ba18:	ldrb	w0, [x7, #11]
   1ba1c:	add	x1, x7, #0xc
   1ba20:	cmp	x4, x1
   1ba24:	orr	x3, x3, x0
   1ba28:	b.ls	1ba5c <__sanitizer_set_report_fd@@Base+0x3bdc>  // b.plast
   1ba2c:	ldrb	w0, [x7, #12]
   1ba30:	add	x1, x7, #0xd
   1ba34:	cmp	x4, x1
   1ba38:	orr	x3, x3, x0
   1ba3c:	b.ls	1ba5c <__sanitizer_set_report_fd@@Base+0x3bdc>  // b.plast
   1ba40:	ldrb	w0, [x7, #13]
   1ba44:	add	x1, x7, #0xe
   1ba48:	cmp	x4, x1
   1ba4c:	orr	x3, x3, x0
   1ba50:	b.ls	1ba5c <__sanitizer_set_report_fd@@Base+0x3bdc>  // b.plast
   1ba54:	ldrb	w0, [x7, #14]
   1ba58:	orr	x3, x3, x0
   1ba5c:	cmp	x3, #0x0
   1ba60:	cset	w0, eq  // eq = none
   1ba64:	ret
   1ba68:	str	x30, [sp, #-16]!
   1ba6c:	mov	x3, x1
   1ba70:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1ba74:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1ba78:	add	x2, x2, #0x498
   1ba7c:	add	x0, x0, #0x440
   1ba80:	mov	w1, #0x106                 	// #262
   1ba84:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   1ba88:	mov	x1, #0x4810                	// #18448
   1ba8c:	add	x0, x0, x1
   1ba90:	b	1c680 <__sanitizer_set_report_fd@@Base+0x4800>
   1ba94:	nop
   1ba98:	stp	x19, x20, [sp, #-48]!
   1ba9c:	mov	x20, x0
   1baa0:	stp	x21, x22, [sp, #16]
   1baa4:	mov	x21, x1
   1baa8:	mov	x1, #0x4810                	// #18448
   1baac:	add	x22, x0, x1
   1bab0:	str	x30, [sp, #32]
   1bab4:	mov	x0, x22
   1bab8:	bl	1c690 <__sanitizer_set_report_fd@@Base+0x4810>
   1babc:	ldr	x19, [x20, #18536]
   1bac0:	cmp	x19, #0x3ff
   1bac4:	b.hi	1bb08 <__sanitizer_set_report_fd@@Base+0x3c88>  // b.pmore
   1bac8:	add	x0, x19, #0x1
   1bacc:	str	x0, [x20, #18536]
   1bad0:	mov	x0, x21
   1bad4:	bl	1a360 <__sanitizer_set_report_fd@@Base+0x24e0>
   1bad8:	mov	x3, x0
   1badc:	add	x1, x20, x19, lsl #5
   1bae0:	mov	x0, x22
   1bae4:	add	x2, x1, #0x4, lsl #12
   1bae8:	ldp	x21, x22, [sp, #16]
   1baec:	ldr	x30, [sp, #32]
   1baf0:	str	x3, [x1, #18544]
   1baf4:	str	xzr, [x1, #18552]
   1baf8:	str	xzr, [x1, #18560]
   1bafc:	strb	wzr, [x2, #2184]
   1bb00:	ldp	x19, x20, [sp], #48
   1bb04:	b	1c728 <__sanitizer_set_report_fd@@Base+0x48a8>
   1bb08:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   1bb0c:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1bb10:	add	x0, x0, #0x4b8
   1bb14:	mov	x2, #0x400                 	// #1024
   1bb18:	ldr	x1, [x1, #4024]
   1bb1c:	ldr	x1, [x1]
   1bb20:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   1bb24:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   1bb28:	stp	x19, x20, [sp, #-160]!
   1bb2c:	mov	x3, #0x4810                	// #18448
   1bb30:	mov	x20, x0
   1bb34:	stp	x21, x22, [sp, #16]
   1bb38:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   1bb3c:	add	x0, x0, x3
   1bb40:	mov	x19, x1
   1bb44:	stp	x23, x24, [sp, #32]
   1bb48:	stp	x25, x26, [sp, #48]
   1bb4c:	str	x30, [sp, #80]
   1bb50:	str	x0, [sp, #112]
   1bb54:	bl	1c690 <__sanitizer_set_report_fd@@Base+0x4810>
   1bb58:	ldr	x22, [x21, #4016]
   1bb5c:	ldr	x0, [x22]
   1bb60:	cbz	x0, 1be0c <__sanitizer_set_report_fd@@Base+0x3f8c>
   1bb64:	sub	x1, x0, #0x1
   1bb68:	tst	x1, x0
   1bb6c:	b.ne	1beac <__sanitizer_set_report_fd@@Base+0x402c>  // b.any
   1bb70:	add	x25, x0, #0xfff
   1bb74:	neg	x0, x0
   1bb78:	and	x23, x25, x0
   1bb7c:	mov	w2, #0x0                   	// #0
   1bb80:	mov	x0, x23
   1bb84:	adrp	x22, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   1bb88:	add	x1, x22, #0xc10
   1bb8c:	str	x23, [sp, #120]
   1bb90:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   1bb94:	mov	x24, x0
   1bb98:	mov	x2, #0x0                   	// #0
   1bb9c:	mov	x1, #0x0                   	// #0
   1bba0:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   1bba4:	mov	x1, #0x0                   	// #0
   1bba8:	mov	x0, #0x0                   	// #0
   1bbac:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   1bbb0:	cmp	x23, #0xfff
   1bbb4:	b.ls	1be18 <__sanitizer_set_report_fd@@Base+0x3f98>  // b.plast
   1bbb8:	mov	x0, x24
   1bbbc:	mov	x2, #0x1000                	// #4096
   1bbc0:	mov	w1, #0x0                   	// #0
   1bbc4:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   1bbc8:	strb	wzr, [x24]
   1bbcc:	cbz	x19, 1bbf0 <__sanitizer_set_report_fd@@Base+0x3d70>
   1bbd0:	mov	x1, x24
   1bbd4:	mov	x0, x19
   1bbd8:	mov	x2, #0xfff                 	// #4095
   1bbdc:	bl	1c338 <__sanitizer_set_report_fd@@Base+0x44b8>
   1bbe0:	cbz	x0, 1bbf0 <__sanitizer_set_report_fd@@Base+0x3d70>
   1bbe4:	ldrb	w0, [x24]
   1bbe8:	cbnz	w0, 1be74 <__sanitizer_set_report_fd@@Base+0x3ff4>
   1bbec:	nop
   1bbf0:	add	x0, sp, #0x80
   1bbf4:	strb	wzr, [sp, #152]
   1bbf8:	bl	23f58 <__sanitizer_sandbox_on_notify@@Base+0x910>
   1bbfc:	ldr	x0, [x20, #18536]
   1bc00:	cbz	x0, 1bd14 <__sanitizer_set_report_fd@@Base+0x3e94>
   1bc04:	adrp	x22, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   1bc08:	mov	x0, #0x4870                	// #18544
   1bc0c:	adrp	x26, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1bc10:	add	x19, x20, x0
   1bc14:	ldr	x22, [x22, #3816]
   1bc18:	add	x0, x26, #0x540
   1bc1c:	stp	x27, x28, [sp, #64]
   1bc20:	stp	x0, xzr, [sp, #96]
   1bc24:	ldr	x21, [sp, #144]
   1bc28:	ldr	x5, [sp, #128]
   1bc2c:	add	x21, x21, x21, lsl #3
   1bc30:	add	x21, x5, x21, lsl #3
   1bc34:	cmp	x5, x21
   1bc38:	b.eq	1befc <__sanitizer_set_report_fd@@Base+0x407c>  // b.none
   1bc3c:	mov	x28, x5
   1bc40:	mov	w27, #0x0                   	// #0
   1bc44:	mov	w23, #0x1                   	// #1
   1bc48:	ldr	x26, [x28, #56]
   1bc4c:	cbz	x26, 1bcd4 <__sanitizer_set_report_fd@@Base+0x3e54>
   1bc50:	ldrb	w25, [x26, #24]
   1bc54:	cbz	w25, 1bdb8 <__sanitizer_set_report_fd@@Base+0x3f38>
   1bc58:	ldr	x0, [x19]
   1bc5c:	ldr	x1, [x28]
   1bc60:	bl	14cf8 <_ZdaPvRKSt9nothrow_t@@Base+0x2f78>
   1bc64:	tst	w0, #0xff
   1bc68:	b.ne	1bc80 <__sanitizer_set_report_fd@@Base+0x3e00>  // b.any
   1bc6c:	ldr	x0, [x19, #16]
   1bc70:	cbz	x0, 1bdb8 <__sanitizer_set_report_fd@@Base+0x3f38>
   1bc74:	ldr	x1, [x28]
   1bc78:	bl	1a560 <__sanitizer_set_report_fd@@Base+0x26e0>
   1bc7c:	cbnz	w0, 1bdb8 <__sanitizer_set_report_fd@@Base+0x3f38>
   1bc80:	cbnz	w27, 1c010 <__sanitizer_set_report_fd@@Base+0x4190>
   1bc84:	ldrb	w27, [x19, #24]
   1bc88:	cbnz	w27, 1bdb8 <__sanitizer_set_report_fd@@Base+0x3f38>
   1bc8c:	ldr	w0, [x22]
   1bc90:	cbnz	w0, 1bdc4 <__sanitizer_set_report_fd@@Base+0x3f44>
   1bc94:	strb	w23, [x19, #24]
   1bc98:	ldr	x0, [x28]
   1bc9c:	bl	1a360 <__sanitizer_set_report_fd@@Base+0x24e0>
   1bca0:	ldr	x3, [x20]
   1bca4:	str	x0, [x19, #8]
   1bca8:	cmp	x3, #0x7f
   1bcac:	b.hi	1bdf0 <__sanitizer_set_report_fd@@Base+0x3f70>  // b.pmore
   1bcb0:	add	x0, x20, x3, lsl #4
   1bcb4:	add	x3, x3, #0x1
   1bcb8:	ldr	x1, [x26, #8]
   1bcbc:	str	x1, [x0, #8]
   1bcc0:	ldr	x1, [x26, #16]
   1bcc4:	str	x1, [x0, #16]
   1bcc8:	dmb	ish
   1bccc:	str	x3, [x20]
   1bcd0:	mov	w27, w25
   1bcd4:	add	x28, x28, #0x48
   1bcd8:	cmp	x21, x28
   1bcdc:	b.ne	1bc48 <__sanitizer_set_report_fd@@Base+0x3dc8>  // b.any
   1bce0:	ldrb	w0, [x19, #24]
   1bce4:	eor	w0, w0, #0x1
   1bce8:	orr	w2, w27, w0
   1bcec:	tst	w2, #0xff
   1bcf0:	b.eq	1c040 <__sanitizer_set_report_fd@@Base+0x41c0>  // b.none
   1bcf4:	ldr	x1, [sp, #104]
   1bcf8:	add	x19, x19, #0x20
   1bcfc:	ldr	x0, [x20, #18536]
   1bd00:	add	x1, x1, #0x1
   1bd04:	str	x1, [sp, #104]
   1bd08:	cmp	x0, x1
   1bd0c:	b.hi	1bc24 <__sanitizer_set_report_fd@@Base+0x3da4>  // b.pmore
   1bd10:	ldp	x27, x28, [sp, #64]
   1bd14:	add	x1, x20, #0xc, lsl #12
   1bd18:	ldr	x0, [sp, #144]
   1bd1c:	ldrb	w1, [x1, #2160]
   1bd20:	ldr	x19, [sp, #128]
   1bd24:	add	x0, x0, x0, lsl #3
   1bd28:	add	x22, x19, x0, lsl #3
   1bd2c:	cbz	w1, 1bd70 <__sanitizer_set_report_fd@@Base+0x3ef0>
   1bd30:	mov	x21, x19
   1bd34:	cmp	x19, x22
   1bd38:	b.eq	1bd8c <__sanitizer_set_report_fd@@Base+0x3f0c>  // b.none
   1bd3c:	adrp	x23, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   1bd40:	adrp	x26, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1bd44:	add	x26, x26, #0x680
   1bd48:	ldr	x23, [x23, #3816]
   1bd4c:	ldrb	w0, [x21, #44]
   1bd50:	cbnz	w0, 1bf04 <__sanitizer_set_report_fd@@Base+0x4084>
   1bd54:	add	x21, x21, #0x48
   1bd58:	cmp	x22, x21
   1bd5c:	b.ne	1bd4c <__sanitizer_set_report_fd@@Base+0x3ecc>  // b.any
   1bd60:	ldr	x0, [sp, #144]
   1bd64:	ldr	x19, [sp, #128]
   1bd68:	add	x0, x0, x0, lsl #3
   1bd6c:	add	x22, x19, x0, lsl #3
   1bd70:	cmp	x19, x22
   1bd74:	b.eq	1bd8c <__sanitizer_set_report_fd@@Base+0x3f0c>  // b.none
   1bd78:	mov	x0, x19
   1bd7c:	add	x19, x19, #0x48
   1bd80:	bl	14a20 <_ZdaPvRKSt9nothrow_t@@Base+0x2ca0>
   1bd84:	cmp	x22, x19
   1bd88:	b.ne	1bd78 <__sanitizer_set_report_fd@@Base+0x3ef8>  // b.any
   1bd8c:	ldr	x1, [sp, #120]
   1bd90:	mov	x0, x24
   1bd94:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   1bd98:	ldr	x0, [sp, #112]
   1bd9c:	bl	1c728 <__sanitizer_set_report_fd@@Base+0x48a8>
   1bda0:	ldp	x21, x22, [sp, #16]
   1bda4:	ldp	x23, x24, [sp, #32]
   1bda8:	ldp	x25, x26, [sp, #48]
   1bdac:	ldr	x30, [sp, #80]
   1bdb0:	ldp	x19, x20, [sp], #160
   1bdb4:	ret
   1bdb8:	ldr	x26, [x26]
   1bdbc:	cbnz	x26, 1bc50 <__sanitizer_set_report_fd@@Base+0x3dd0>
   1bdc0:	b	1bcd4 <__sanitizer_set_report_fd@@Base+0x3e54>
   1bdc4:	ldr	x1, [x19]
   1bdc8:	ldr	x2, [x28]
   1bdcc:	ldr	x0, [sp, #96]
   1bdd0:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   1bdd4:	strb	w23, [x19, #24]
   1bdd8:	ldr	x0, [x28]
   1bddc:	bl	1a360 <__sanitizer_set_report_fd@@Base+0x24e0>
   1bde0:	ldr	x3, [x20]
   1bde4:	str	x0, [x19, #8]
   1bde8:	cmp	x3, #0x7f
   1bdec:	b.ls	1bcb0 <__sanitizer_set_report_fd@@Base+0x3e30>  // b.plast
   1bdf0:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1bdf4:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1bdf8:	add	x2, x2, #0x580
   1bdfc:	add	x0, x0, #0x5d0
   1be00:	mov	x4, #0x80                  	// #128
   1be04:	mov	w1, #0x53                  	// #83
   1be08:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   1be0c:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   1be10:	str	x0, [x22]
   1be14:	b	1bb64 <__sanitizer_set_report_fd@@Base+0x3ce4>
   1be18:	ldr	x21, [x21, #4016]
   1be1c:	ldr	x0, [x21]
   1be20:	cbz	x0, 1bef0 <__sanitizer_set_report_fd@@Base+0x4070>
   1be24:	sub	x1, x0, #0x1
   1be28:	tst	x1, x0
   1be2c:	b.ne	1beac <__sanitizer_set_report_fd@@Base+0x402c>  // b.any
   1be30:	add	x21, x0, #0xfff
   1be34:	neg	x0, x0
   1be38:	and	x21, x21, x0
   1be3c:	add	x1, x22, #0xc10
   1be40:	mov	x0, x21
   1be44:	mov	w2, #0x0                   	// #0
   1be48:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   1be4c:	mov	x22, x0
   1be50:	mov	x1, x24
   1be54:	mov	x2, #0x0                   	// #0
   1be58:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   1be5c:	ldr	x1, [sp, #120]
   1be60:	mov	x0, x24
   1be64:	mov	x24, x22
   1be68:	str	x21, [sp, #120]
   1be6c:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   1be70:	b	1bbb8 <__sanitizer_set_report_fd@@Base+0x3d38>
   1be74:	ldr	x1, [x20, #18536]
   1be78:	cbz	x1, 1bbf0 <__sanitizer_set_report_fd@@Base+0x3d70>
   1be7c:	mov	x2, #0x4870                	// #18544
   1be80:	add	x21, x20, x2
   1be84:	mov	x22, #0x0                   	// #0
   1be88:	ldrb	w0, [x21, #24]
   1be8c:	cbnz	w0, 1be98 <__sanitizer_set_report_fd@@Base+0x4018>
   1be90:	ldr	x0, [x21, #16]
   1be94:	cbz	x0, 1bec0 <__sanitizer_set_report_fd@@Base+0x4040>
   1be98:	add	x22, x22, #0x1
   1be9c:	add	x21, x21, #0x20
   1bea0:	cmp	x22, x1
   1bea4:	b.cc	1be88 <__sanitizer_set_report_fd@@Base+0x4008>  // b.lo, b.ul, b.last
   1bea8:	b	1bbf0 <__sanitizer_set_report_fd@@Base+0x3d70>
   1beac:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   1beb0:	add	x0, x0, #0xbf8
   1beb4:	stp	x27, x28, [sp, #64]
   1beb8:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   1bebc:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   1bec0:	ldr	x0, [x21]
   1bec4:	mov	x1, x19
   1bec8:	bl	14cf8 <_ZdaPvRKSt9nothrow_t@@Base+0x2f78>
   1becc:	tst	w0, #0xff
   1bed0:	b.ne	1bedc <__sanitizer_set_report_fd@@Base+0x405c>  // b.any
   1bed4:	ldr	x1, [x20, #18536]
   1bed8:	b	1be98 <__sanitizer_set_report_fd@@Base+0x4018>
   1bedc:	mov	x0, x24
   1bee0:	bl	1a360 <__sanitizer_set_report_fd@@Base+0x24e0>
   1bee4:	str	x0, [x21, #16]
   1bee8:	ldr	x1, [x20, #18536]
   1beec:	b	1be98 <__sanitizer_set_report_fd@@Base+0x4018>
   1bef0:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   1bef4:	str	x0, [x21]
   1bef8:	b	1be24 <__sanitizer_set_report_fd@@Base+0x3fa4>
   1befc:	mov	w27, #0x0                   	// #0
   1bf00:	b	1bce0 <__sanitizer_set_report_fd@@Base+0x3e60>
   1bf04:	ldr	x19, [x21, #56]
   1bf08:	cbz	x19, 1bd54 <__sanitizer_set_report_fd@@Base+0x3ed4>
   1bf0c:	ldrb	w1, [x19, #24]
   1bf10:	cbz	w1, 1bfbc <__sanitizer_set_report_fd@@Base+0x413c>
   1bf14:	ldr	x4, [x19, #8]
   1bf18:	ldr	x6, [x20, #2056]
   1bf1c:	dmb	ish
   1bf20:	add	x5, x20, #0x810
   1bf24:	mov	x2, #0x0                   	// #0
   1bf28:	mov	x1, x5
   1bf2c:	cbz	x6, 1bf88 <__sanitizer_set_report_fd@@Base+0x4108>
   1bf30:	ldr	x3, [x1]
   1bf34:	cmp	x4, x3
   1bf38:	b.cc	1bfc8 <__sanitizer_set_report_fd@@Base+0x4148>  // b.lo, b.ul, b.last
   1bf3c:	ldr	x3, [x1, #8]
   1bf40:	cmp	x4, x3
   1bf44:	b.cs	1bfc8 <__sanitizer_set_report_fd@@Base+0x4148>  // b.hs, b.nlast
   1bf48:	ldr	x2, [x19, #16]
   1bf4c:	sub	x2, x2, #0x1
   1bf50:	ldr	x0, [x20, #2056]
   1bf54:	dmb	ish
   1bf58:	cbz	x0, 1bf88 <__sanitizer_set_report_fd@@Base+0x4108>
   1bf5c:	mov	x1, #0x0                   	// #0
   1bf60:	ldr	x3, [x5]
   1bf64:	cmp	x2, x3
   1bf68:	b.cc	1bf78 <__sanitizer_set_report_fd@@Base+0x40f8>  // b.lo, b.ul, b.last
   1bf6c:	ldr	x3, [x5, #8]
   1bf70:	cmp	x2, x3
   1bf74:	b.cc	1bfbc <__sanitizer_set_report_fd@@Base+0x413c>  // b.lo, b.ul, b.last
   1bf78:	add	x1, x1, #0x1
   1bf7c:	add	x5, x5, #0x10
   1bf80:	cmp	x1, x0
   1bf84:	b.ne	1bf60 <__sanitizer_set_report_fd@@Base+0x40e0>  // b.any
   1bf88:	ldr	w0, [x23]
   1bf8c:	cbnz	w0, 1bfdc <__sanitizer_set_report_fd@@Base+0x415c>
   1bf90:	ldr	x3, [x20, #2056]
   1bf94:	cmp	x3, #0x3ff
   1bf98:	b.hi	1bff0 <__sanitizer_set_report_fd@@Base+0x4170>  // b.pmore
   1bf9c:	add	x1, x20, x3, lsl #4
   1bfa0:	add	x3, x3, #0x1
   1bfa4:	ldr	x0, [x19, #8]
   1bfa8:	str	x0, [x1, #2064]
   1bfac:	ldr	x0, [x19, #16]
   1bfb0:	str	x0, [x1, #2072]
   1bfb4:	dmb	ish
   1bfb8:	str	x3, [x20, #2056]
   1bfbc:	ldr	x19, [x19]
   1bfc0:	cbnz	x19, 1bf0c <__sanitizer_set_report_fd@@Base+0x408c>
   1bfc4:	b	1bd54 <__sanitizer_set_report_fd@@Base+0x3ed4>
   1bfc8:	add	x2, x2, #0x1
   1bfcc:	add	x1, x1, #0x10
   1bfd0:	cmp	x2, x6
   1bfd4:	b.ne	1bf30 <__sanitizer_set_report_fd@@Base+0x40b0>  // b.any
   1bfd8:	b	1bf88 <__sanitizer_set_report_fd@@Base+0x4108>
   1bfdc:	ldp	x1, x2, [x19, #8]
   1bfe0:	mov	x0, x26
   1bfe4:	ldr	x3, [x21]
   1bfe8:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   1bfec:	b	1bf90 <__sanitizer_set_report_fd@@Base+0x4110>
   1bff0:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1bff4:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1bff8:	add	x2, x2, #0x6b8
   1bffc:	add	x0, x0, #0x5d0
   1c000:	mov	x4, #0x400                 	// #1024
   1c004:	mov	w1, #0x70                  	// #112
   1c008:	stp	x27, x28, [sp, #64]
   1c00c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   1c010:	ldr	x0, [sp, #104]
   1c014:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   1c018:	ldr	x4, [x28]
   1c01c:	ldr	x1, [x1, #4024]
   1c020:	add	x20, x20, x0, lsl #5
   1c024:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1c028:	add	x0, x0, #0x4e8
   1c02c:	ldr	x1, [x1]
   1c030:	ldr	x2, [x20, #18544]
   1c034:	ldr	x3, [x20, #18552]
   1c038:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   1c03c:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   1c040:	ldr	x0, [sp, #104]
   1c044:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   1c048:	ldr	x1, [x1, #4024]
   1c04c:	add	x20, x20, x0, lsl #5
   1c050:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1c054:	add	x0, x0, #0x628
   1c058:	ldr	x1, [x1]
   1c05c:	ldr	x3, [x20, #18544]
   1c060:	ldr	x2, [x20, #18552]
   1c064:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   1c068:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   1c06c:	nop
   1c070:	mov	x1, #0x0                   	// #0
   1c074:	b	1bb28 <__sanitizer_set_report_fd@@Base+0x3ca8>
   1c078:	stp	x19, x20, [sp, #-64]!
   1c07c:	mov	x19, x1
   1c080:	mov	x20, x0
   1c084:	mov	w2, #0x0                   	// #0
   1c088:	adrp	x1, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1c08c:	mov	x0, #0x3e80                	// #16000
   1c090:	add	x1, x1, #0x718
   1c094:	str	x30, [sp, #16]
   1c098:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   1c09c:	str	x0, [x19]
   1c0a0:	add	x3, sp, #0x38
   1c0a4:	add	x2, sp, #0x30
   1c0a8:	add	x1, sp, #0x28
   1c0ac:	mov	x0, x20
   1c0b0:	mov	x5, #0x0                   	// #0
   1c0b4:	mov	x4, #0x100000              	// #1048576
   1c0b8:	bl	17590 <__sanitizer_install_malloc_and_free_hooks@@Base+0x21f8>
   1c0bc:	tst	w0, #0xff
   1c0c0:	b.eq	1c160 <__sanitizer_set_report_fd@@Base+0x42e0>  // b.none
   1c0c4:	ldr	x4, [x19]
   1c0c8:	mov	x0, #0x1                   	// #1
   1c0cc:	ldr	x1, [sp, #40]
   1c0d0:	mov	w2, w0
   1c0d4:	str	x1, [x4]
   1c0d8:	ldr	x1, [sp, #40]
   1c0dc:	nop
   1c0e0:	ldrb	w3, [x1, x0]
   1c0e4:	add	x0, x0, #0x1
   1c0e8:	cbnz	w3, 1c0e0 <__sanitizer_set_report_fd@@Base+0x4260>
   1c0ec:	add	x5, x1, x0
   1c0f0:	ldrb	w1, [x1, x0]
   1c0f4:	sxtw	x3, w2
   1c0f8:	add	x6, x4, w2, sxtw #3
   1c0fc:	cbz	w1, 1c134 <__sanitizer_set_report_fd@@Base+0x42b4>
   1c100:	str	x5, [x4, x3, lsl #3]
   1c104:	cmp	w2, #0x7cf
   1c108:	b.gt	1c144 <__sanitizer_set_report_fd@@Base+0x42c4>
   1c10c:	ldr	x1, [sp, #40]
   1c110:	add	w2, w2, #0x1
   1c114:	ldrb	w3, [x1, x0]
   1c118:	add	x0, x0, #0x1
   1c11c:	cbnz	w3, 1c0e0 <__sanitizer_set_report_fd@@Base+0x4260>
   1c120:	add	x5, x1, x0
   1c124:	ldrb	w1, [x1, x0]
   1c128:	sxtw	x3, w2
   1c12c:	add	x6, x4, w2, sxtw #3
   1c130:	cbnz	w1, 1c100 <__sanitizer_set_report_fd@@Base+0x4280>
   1c134:	str	xzr, [x6]
   1c138:	ldr	x30, [sp, #16]
   1c13c:	ldp	x19, x20, [sp], #64
   1c140:	ret
   1c144:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1c148:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1c14c:	add	x2, x2, #0x730
   1c150:	add	x0, x0, #0x750
   1c154:	mov	x4, #0x7cf                 	// #1999
   1c158:	mov	w1, #0x243                 	// #579
   1c15c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   1c160:	ldr	x0, [x19]
   1c164:	ldr	x30, [sp, #16]
   1c168:	str	xzr, [x0]
   1c16c:	ldp	x19, x20, [sp], #64
   1c170:	ret
   1c174:	nop
   1c178:	mov	x2, x0
   1c17c:	mov	w0, #0x0                   	// #0
   1c180:	cmn	x2, #0x1, lsl #12
   1c184:	b.hi	1c18c <__sanitizer_set_report_fd@@Base+0x430c>  // b.pmore
   1c188:	ret
   1c18c:	mov	w0, #0x1                   	// #1
   1c190:	cbz	x1, 1c188 <__sanitizer_set_report_fd@@Base+0x4308>
   1c194:	neg	w2, w2
   1c198:	str	w2, [x1]
   1c19c:	ret
   1c1a0:	mov	x8, #0xde                  	// #222
   1c1a4:	sxtw	x2, w2
   1c1a8:	sxtw	x3, w3
   1c1ac:	sxtw	x4, w4
   1c1b0:	svc	#0x0
   1c1b4:	ret
   1c1b8:	mov	x8, #0xd7                  	// #215
   1c1bc:	svc	#0x0
   1c1c0:	ret
   1c1c4:	nop
   1c1c8:	mov	x8, #0xe2                  	// #226
   1c1cc:	sxtw	x2, w2
   1c1d0:	svc	#0x0
   1c1d4:	ret
   1c1d8:	mov	x8, #0x39                  	// #57
   1c1dc:	sxtw	x0, w0
   1c1e0:	svc	#0x0
   1c1e4:	ret
   1c1e8:	sxtw	x2, w1
   1c1ec:	mov	x8, #0x38                  	// #56
   1c1f0:	mov	x1, x0
   1c1f4:	mov	x0, #0xffffffffffffff9c    	// #-100
   1c1f8:	svc	#0x0
   1c1fc:	ret
   1c200:	mov	w4, w1
   1c204:	mov	w3, w2
   1c208:	mov	x1, x0
   1c20c:	mov	x8, #0x38                  	// #56
   1c210:	sxtw	x2, w4
   1c214:	mov	x0, #0xffffffffffffff9c    	// #-100
   1c218:	svc	#0x0
   1c21c:	ret
   1c220:	sxtw	x3, w0
   1c224:	mov	x0, x3
   1c228:	mov	x8, #0x3f                  	// #63
   1c22c:	svc	#0x0
   1c230:	cmn	x0, #0x1, lsl #12
   1c234:	b.hi	1c23c <__sanitizer_set_report_fd@@Base+0x43bc>  // b.pmore
   1c238:	ret
   1c23c:	cmn	w0, #0x4
   1c240:	b.eq	1c224 <__sanitizer_set_report_fd@@Base+0x43a4>  // b.none
   1c244:	ret
   1c248:	sxtw	x3, w0
   1c24c:	mov	x0, x3
   1c250:	mov	x8, #0x40                  	// #64
   1c254:	svc	#0x0
   1c258:	cmn	x0, #0x1, lsl #12
   1c25c:	b.hi	1c264 <__sanitizer_set_report_fd@@Base+0x43e4>  // b.pmore
   1c260:	ret
   1c264:	cmn	w0, #0x4
   1c268:	b.eq	1c24c <__sanitizer_set_report_fd@@Base+0x43cc>  // b.none
   1c26c:	ret
   1c270:	sxtw	x2, w0
   1c274:	mov	x0, x2
   1c278:	mov	x8, #0x2e                  	// #46
   1c27c:	svc	#0x0
   1c280:	cmn	x0, #0x1, lsl #12
   1c284:	b.hi	1c28c <__sanitizer_set_report_fd@@Base+0x440c>  // b.pmore
   1c288:	ret
   1c28c:	cmn	w0, #0x4
   1c290:	b.eq	1c274 <__sanitizer_set_report_fd@@Base+0x43f4>  // b.none
   1c294:	ret
   1c298:	mov	x2, x1
   1c29c:	mov	x8, #0x4f                  	// #79
   1c2a0:	mov	x1, x0
   1c2a4:	mov	x3, #0x0                   	// #0
   1c2a8:	mov	x0, #0xffffffffffffff9c    	// #-100
   1c2ac:	svc	#0x0
   1c2b0:	ret
   1c2b4:	nop
   1c2b8:	mov	x2, x1
   1c2bc:	mov	x8, #0x4f                  	// #79
   1c2c0:	mov	x1, x0
   1c2c4:	mov	x3, #0x100                 	// #256
   1c2c8:	mov	x0, #0xffffffffffffff9c    	// #-100
   1c2cc:	svc	#0x0
   1c2d0:	ret
   1c2d4:	nop
   1c2d8:	mov	x8, #0x50                  	// #80
   1c2dc:	sxtw	x0, w0
   1c2e0:	svc	#0x0
   1c2e4:	ret
   1c2e8:	sub	sp, sp, #0x80
   1c2ec:	mov	x8, #0x50                  	// #80
   1c2f0:	mov	x1, sp
   1c2f4:	sxtw	x0, w0
   1c2f8:	svc	#0x0
   1c2fc:	ldr	x1, [sp, #48]
   1c300:	cmp	x0, #0x0
   1c304:	add	sp, sp, #0x80
   1c308:	csinv	x0, x1, xzr, eq  // eq = none
   1c30c:	ret
   1c310:	mov	x8, #0x17                  	// #23
   1c314:	sxtw	x0, w0
   1c318:	svc	#0x0
   1c31c:	ret
   1c320:	mov	x8, #0x18                  	// #24
   1c324:	mov	x2, #0x0                   	// #0
   1c328:	sxtw	x0, w0
   1c32c:	sxtw	x1, w1
   1c330:	svc	#0x0
   1c334:	ret
   1c338:	mov	x4, x1
   1c33c:	mov	x3, x2
   1c340:	mov	x1, x0
   1c344:	mov	x2, x4
   1c348:	mov	x8, #0x4e                  	// #78
   1c34c:	mov	x0, #0xffffffffffffff9c    	// #-100
   1c350:	svc	#0x0
   1c354:	ret
   1c358:	mov	x1, x0
   1c35c:	mov	x8, #0x23                  	// #35
   1c360:	mov	x0, #0xffffffffffffff9c    	// #-100
   1c364:	mov	x2, #0x0                   	// #0
   1c368:	svc	#0x0
   1c36c:	ret
   1c370:	mov	x3, x1
   1c374:	mov	x8, #0x26                  	// #38
   1c378:	mov	x1, x0
   1c37c:	mov	x0, #0xffffffffffffff9c    	// #-100
   1c380:	mov	x2, x0
   1c384:	svc	#0x0
   1c388:	ret
   1c38c:	nop
   1c390:	mov	x8, #0x7c                  	// #124
   1c394:	svc	#0x0
   1c398:	ret
   1c39c:	nop
   1c3a0:	sxtw	x0, w0
   1c3a4:	mov	x8, #0x5e                  	// #94
   1c3a8:	str	x30, [sp, #-16]!
   1c3ac:	svc	#0x0
   1c3b0:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   1c3b4:	nop
   1c3b8:	sub	sp, sp, #0x10
   1c3bc:	mov	w2, w0
   1c3c0:	mov	x1, sp
   1c3c4:	mov	x8, #0x65                  	// #101
   1c3c8:	mov	x0, x1
   1c3cc:	stp	x2, xzr, [sp]
   1c3d0:	svc	#0x0
   1c3d4:	ldr	w1, [sp]
   1c3d8:	cmp	w0, #0x0
   1c3dc:	mov	w0, #0x0                   	// #0
   1c3e0:	add	sp, sp, #0x10
   1c3e4:	csel	w0, w1, w0, ne  // ne = any
   1c3e8:	ret
   1c3ec:	nop
   1c3f0:	mov	x8, #0xdd                  	// #221
   1c3f4:	svc	#0x0
   1c3f8:	ret
   1c3fc:	nop
   1c400:	stp	x19, x30, [sp, #-144]!
   1c404:	mov	x19, x0
   1c408:	bl	1e370 <__sanitizer_set_report_fd@@Base+0x64f0>
   1c40c:	tst	w0, #0xff
   1c410:	b.ne	1c448 <__sanitizer_set_report_fd@@Base+0x45c8>  // b.any
   1c414:	mov	x1, x19
   1c418:	add	x2, sp, #0x10
   1c41c:	mov	x8, #0x4f                  	// #79
   1c420:	mov	x0, #0xffffffffffffff9c    	// #-100
   1c424:	mov	x3, #0x0                   	// #0
   1c428:	svc	#0x0
   1c42c:	cbnz	x0, 1c448 <__sanitizer_set_report_fd@@Base+0x45c8>
   1c430:	ldr	w0, [sp, #32]
   1c434:	ldp	x19, x30, [sp], #144
   1c438:	and	w0, w0, #0xf000
   1c43c:	cmp	w0, #0x8, lsl #12
   1c440:	cset	w0, eq  // eq = none
   1c444:	ret
   1c448:	mov	w0, #0x0                   	// #0
   1c44c:	ldp	x19, x30, [sp], #144
   1c450:	ret
   1c454:	nop
   1c458:	mov	x8, #0xb2                  	// #178
   1c45c:	svc	#0x0
   1c460:	ret
   1c464:	nop
   1c468:	mov	x8, #0x83                  	// #131
   1c46c:	sxtw	x0, w0
   1c470:	sxtw	x2, w2
   1c474:	svc	#0x0
   1c478:	ret
   1c47c:	nop
   1c480:	stp	x19, x30, [sp, #-32]!
   1c484:	mov	x2, #0x10                  	// #16
   1c488:	mov	w1, #0x0                   	// #0
   1c48c:	add	x19, sp, #0x10
   1c490:	mov	x0, x19
   1c494:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   1c498:	mov	x0, x19
   1c49c:	mov	x8, #0xa9                  	// #169
   1c4a0:	mov	x1, #0x0                   	// #0
   1c4a4:	svc	#0x0
   1c4a8:	ldp	x3, x2, [sp, #16]
   1c4ac:	mov	x0, #0xca00                	// #51712
   1c4b0:	movk	x0, #0x3b9a, lsl #16
   1c4b4:	ldp	x19, x30, [sp], #32
   1c4b8:	lsl	x1, x2, #5
   1c4bc:	sub	x1, x1, x2
   1c4c0:	add	x1, x2, x1, lsl #2
   1c4c4:	lsl	x1, x1, #3
   1c4c8:	madd	x0, x3, x0, x1
   1c4cc:	ret
   1c4d0:	mov	x8, #0x71                  	// #113
   1c4d4:	sxtw	x0, w0
   1c4d8:	svc	#0x0
   1c4dc:	ret
   1c4e0:	stp	x19, x20, [sp, #-64]!
   1c4e4:	stp	x21, x22, [sp, #16]
   1c4e8:	adrp	x21, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   1c4ec:	add	x19, x21, #0x6c8
   1c4f0:	stp	x23, x30, [sp, #32]
   1c4f4:	mov	x23, x0
   1c4f8:	ldrb	w0, [x21, #1736]
   1c4fc:	cbz	w0, 1c598 <__sanitizer_set_report_fd@@Base+0x4718>
   1c500:	ldr	x0, [x19, #8]
   1c504:	cbz	x0, 1c584 <__sanitizer_set_report_fd@@Base+0x4704>
   1c508:	add	x21, x21, #0x6c8
   1c50c:	ldr	x0, [x21, #16]
   1c510:	cbz	x0, 1c584 <__sanitizer_set_report_fd@@Base+0x4704>
   1c514:	mov	x0, x23
   1c518:	bl	1a690 <__sanitizer_set_report_fd@@Base+0x2810>
   1c51c:	ldr	x20, [x21, #8]
   1c520:	mov	x22, x0
   1c524:	ldrb	w0, [x20]
   1c528:	cbz	w0, 1c584 <__sanitizer_set_report_fd@@Base+0x4704>
   1c52c:	mov	x2, x20
   1c530:	b	1c560 <__sanitizer_set_report_fd@@Base+0x46e0>
   1c534:	mov	x1, x23
   1c538:	mov	x0, x20
   1c53c:	bl	19d80 <__sanitizer_set_report_fd@@Base+0x1f00>
   1c540:	cbnz	w0, 1c550 <__sanitizer_set_report_fd@@Base+0x46d0>
   1c544:	ldrb	w0, [x20, x22]
   1c548:	cmp	w0, #0x3d
   1c54c:	b.eq	1c5d0 <__sanitizer_set_report_fd@@Base+0x4750>  // b.none
   1c550:	ldrb	w0, [x19, #1]
   1c554:	add	x20, x19, #0x1
   1c558:	cbz	w0, 1c584 <__sanitizer_set_report_fd@@Base+0x4704>
   1c55c:	ldr	x2, [x21, #8]
   1c560:	sub	x2, x20, x2
   1c564:	ldr	x3, [x21, #16]
   1c568:	mov	x0, x20
   1c56c:	mov	w1, #0x0                   	// #0
   1c570:	sub	x2, x3, x2
   1c574:	bl	19d18 <__sanitizer_set_report_fd@@Base+0x1e98>
   1c578:	mov	x19, x0
   1c57c:	mov	x2, x22
   1c580:	cbnz	x0, 1c534 <__sanitizer_set_report_fd@@Base+0x46b4>
   1c584:	mov	x0, #0x0                   	// #0
   1c588:	ldp	x21, x22, [sp, #16]
   1c58c:	ldp	x23, x30, [sp, #32]
   1c590:	ldp	x19, x20, [sp], #64
   1c594:	ret
   1c598:	mov	w1, #0x1                   	// #1
   1c59c:	add	x3, x19, #0x10
   1c5a0:	strb	w1, [x21, #1736]
   1c5a4:	add	x2, sp, #0x38
   1c5a8:	add	x1, x19, #0x8
   1c5ac:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1c5b0:	mov	x5, #0x0                   	// #0
   1c5b4:	add	x0, x0, #0x7a8
   1c5b8:	mov	x4, #0x4000000             	// #67108864
   1c5bc:	bl	17590 <__sanitizer_install_malloc_and_free_hooks@@Base+0x21f8>
   1c5c0:	tst	w0, #0xff
   1c5c4:	b.ne	1c500 <__sanitizer_set_report_fd@@Base+0x4680>  // b.any
   1c5c8:	str	xzr, [x19, #8]
   1c5cc:	b	1c584 <__sanitizer_set_report_fd@@Base+0x4704>
   1c5d0:	add	x0, x22, #0x1
   1c5d4:	add	x0, x20, x0
   1c5d8:	ldp	x21, x22, [sp, #16]
   1c5dc:	ldp	x23, x30, [sp, #32]
   1c5e0:	ldp	x19, x20, [sp], #64
   1c5e4:	ret
   1c5e8:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   1c5ec:	ldr	x0, [x0, #4048]
   1c5f0:	cbz	x0, 1c600 <__sanitizer_set_report_fd@@Base+0x4780>
   1c5f4:	ldr	x0, [x0]
   1c5f8:	add	x0, x0, #0x8
   1c5fc:	ret
   1c600:	str	x30, [sp, #-32]!
   1c604:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1c608:	add	x0, x0, #0x7c0
   1c60c:	add	x1, sp, #0x10
   1c610:	bl	1c078 <__sanitizer_set_report_fd@@Base+0x41f8>
   1c614:	add	x1, sp, #0x18
   1c618:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1c61c:	add	x0, x0, #0x7a8
   1c620:	bl	1c078 <__sanitizer_set_report_fd@@Base+0x41f8>
   1c624:	ldr	x0, [sp, #16]
   1c628:	ldr	x30, [sp], #32
   1c62c:	ret
   1c630:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   1c634:	ldr	x0, [x0, #4048]
   1c638:	cbz	x0, 1c650 <__sanitizer_set_report_fd@@Base+0x47d0>
   1c63c:	ldr	x1, [x0]
   1c640:	ldrsw	x0, [x1]
   1c644:	add	x0, x0, #0x2
   1c648:	add	x0, x1, x0, lsl #3
   1c64c:	ret
   1c650:	str	x30, [sp, #-32]!
   1c654:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1c658:	add	x0, x0, #0x7c0
   1c65c:	add	x1, sp, #0x10
   1c660:	bl	1c078 <__sanitizer_set_report_fd@@Base+0x41f8>
   1c664:	add	x1, sp, #0x18
   1c668:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1c66c:	add	x0, x0, #0x7a8
   1c670:	bl	1c078 <__sanitizer_set_report_fd@@Base+0x41f8>
   1c674:	ldr	x0, [sp, #24]
   1c678:	ldr	x30, [sp], #32
   1c67c:	ret
   1c680:	mov	x2, #0x58                  	// #88
   1c684:	mov	w1, #0x0                   	// #0
   1c688:	b	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   1c68c:	nop
   1c690:	ldr	x3, [x0, #80]
   1c694:	mov	x6, x0
   1c698:	mov	w1, #0x1                   	// #1
   1c69c:	cbnz	x3, 1c704 <__sanitizer_set_report_fd@@Base+0x4884>
   1c6a0:	ldxr	w0, [x6]
   1c6a4:	stxr	w2, w1, [x6]
   1c6a8:	cbnz	w2, 1c6a0 <__sanitizer_set_report_fd@@Base+0x4820>
   1c6ac:	dmb	ish
   1c6b0:	cbz	w0, 1c700 <__sanitizer_set_report_fd@@Base+0x4880>
   1c6b4:	mov	w7, #0x2                   	// #2
   1c6b8:	ldxr	w0, [x6]
   1c6bc:	stxr	w1, w7, [x6]
   1c6c0:	cbnz	w1, 1c6b8 <__sanitizer_set_report_fd@@Base+0x4838>
   1c6c4:	dmb	ish
   1c6c8:	cbz	w0, 1c700 <__sanitizer_set_report_fd@@Base+0x4880>
   1c6cc:	mov	x0, x6
   1c6d0:	mov	x8, #0x62                  	// #98
   1c6d4:	mov	x1, #0x80                  	// #128
   1c6d8:	mov	x2, #0x2                   	// #2
   1c6dc:	mov	x3, #0x0                   	// #0
   1c6e0:	mov	x4, #0x0                   	// #0
   1c6e4:	mov	x5, #0x0                   	// #0
   1c6e8:	svc	#0x0
   1c6ec:	ldxr	w0, [x6]
   1c6f0:	stxr	w1, w7, [x6]
   1c6f4:	cbnz	w1, 1c6b8 <__sanitizer_set_report_fd@@Base+0x4838>
   1c6f8:	dmb	ish
   1c6fc:	cbnz	w0, 1c6cc <__sanitizer_set_report_fd@@Base+0x484c>
   1c700:	ret
   1c704:	str	x30, [sp, #-16]!
   1c708:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1c70c:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1c710:	add	x2, x2, #0x7d8
   1c714:	add	x0, x0, #0x750
   1c718:	mov	x4, #0x0                   	// #0
   1c71c:	mov	w1, #0x288                 	// #648
   1c720:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   1c724:	nop
   1c728:	dmb	ish
   1c72c:	mov	x1, x0
   1c730:	ldxr	w2, [x1]
   1c734:	stxr	w3, wzr, [x1]
   1c738:	cbnz	w3, 1c730 <__sanitizer_set_report_fd@@Base+0x48b0>
   1c73c:	dmb	ish
   1c740:	cbz	w2, 1c770 <__sanitizer_set_report_fd@@Base+0x48f0>
   1c744:	cmp	w2, #0x2
   1c748:	b.eq	1c750 <__sanitizer_set_report_fd@@Base+0x48d0>  // b.none
   1c74c:	ret
   1c750:	mov	x8, #0x62                  	// #98
   1c754:	mov	x1, #0x81                  	// #129
   1c758:	mov	x2, #0x1                   	// #1
   1c75c:	mov	x3, #0x0                   	// #0
   1c760:	mov	x4, #0x0                   	// #0
   1c764:	mov	x5, #0x0                   	// #0
   1c768:	svc	#0x0
   1c76c:	ret
   1c770:	str	x30, [sp, #-16]!
   1c774:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1c778:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1c77c:	add	x2, x2, #0x7f0
   1c780:	add	x0, x0, #0x750
   1c784:	mov	x4, #0x0                   	// #0
   1c788:	mov	x3, #0x0                   	// #0
   1c78c:	mov	w1, #0x29b                 	// #667
   1c790:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   1c794:	nop
   1c798:	ldr	w0, [x0]
   1c79c:	cbz	w0, 1c7a4 <__sanitizer_set_report_fd@@Base+0x4924>
   1c7a0:	ret
   1c7a4:	str	x30, [sp, #-16]!
   1c7a8:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1c7ac:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1c7b0:	add	x2, x2, #0x810
   1c7b4:	add	x0, x0, #0x750
   1c7b8:	mov	x4, #0x0                   	// #0
   1c7bc:	mov	x3, #0x0                   	// #0
   1c7c0:	mov	w1, #0x2a9                 	// #681
   1c7c4:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   1c7c8:	mov	x8, #0x75                  	// #117
   1c7cc:	sxtw	x0, w0
   1c7d0:	sxtw	x1, w1
   1c7d4:	svc	#0x0
   1c7d8:	ret
   1c7dc:	nop
   1c7e0:	mov	x8, #0x104                 	// #260
   1c7e4:	mov	x3, #0x0                   	// #0
   1c7e8:	sxtw	x0, w0
   1c7ec:	sxtw	x2, w2
   1c7f0:	svc	#0x0
   1c7f4:	ret
   1c7f8:	mov	x8, #0xac                  	// #172
   1c7fc:	svc	#0x0
   1c800:	ret
   1c804:	nop
   1c808:	mov	x8, #0xad                  	// #173
   1c80c:	svc	#0x0
   1c810:	ret
   1c814:	nop
   1c818:	mov	w2, w2
   1c81c:	mov	x8, #0x3d                  	// #61
   1c820:	sxtw	x0, w0
   1c824:	svc	#0x0
   1c828:	ret
   1c82c:	nop
   1c830:	mov	x8, #0x3e                  	// #62
   1c834:	sxtw	x0, w0
   1c838:	sxtw	x2, w2
   1c83c:	svc	#0x0
   1c840:	ret
   1c844:	nop
   1c848:	mov	x8, #0xa7                  	// #167
   1c84c:	sxtw	x0, w0
   1c850:	svc	#0x0
   1c854:	ret
   1c858:	mov	x8, #0x84                  	// #132
   1c85c:	svc	#0x0
   1c860:	ret
   1c864:	nop
   1c868:	mov	x8, #0xdc                  	// #220
   1c86c:	mov	x0, #0x11                  	// #17
   1c870:	mov	x1, #0x0                   	// #0
   1c874:	svc	#0x0
   1c878:	ret
   1c87c:	nop
   1c880:	stp	x19, x20, [sp, #-112]!
   1c884:	sxtw	x20, w0
   1c888:	mov	x19, x1
   1c88c:	stp	x23, x30, [sp, #32]
   1c890:	add	x23, sp, #0x30
   1c894:	mov	w1, #0x0                   	// #0
   1c898:	mov	x0, x23
   1c89c:	stp	x21, x22, [sp, #16]
   1c8a0:	mov	x21, x2
   1c8a4:	add	x22, sp, #0x50
   1c8a8:	mov	x2, #0x20                  	// #32
   1c8ac:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   1c8b0:	mov	w1, #0x0                   	// #0
   1c8b4:	mov	x0, x22
   1c8b8:	mov	x2, #0x20                  	// #32
   1c8bc:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   1c8c0:	mov	x1, #0x0                   	// #0
   1c8c4:	cbz	x19, 1c8f8 <__sanitizer_set_report_fd@@Base+0x4a78>
   1c8c8:	mov	x1, x19
   1c8cc:	mov	x2, #0x8                   	// #8
   1c8d0:	add	x0, x23, #0x18
   1c8d4:	ldr	x3, [x1], #8
   1c8d8:	str	x3, [sp, #48]
   1c8dc:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   1c8e0:	ldr	w0, [x19, #136]
   1c8e4:	mov	x1, x23
   1c8e8:	ldr	x2, [x19, #144]
   1c8ec:	orr	w0, w0, #0x4000000
   1c8f0:	sxtw	x0, w0
   1c8f4:	stp	x0, x2, [sp, #56]
   1c8f8:	cmp	x21, #0x0
   1c8fc:	mov	x0, x20
   1c900:	csel	x2, x22, xzr, ne  // ne = any
   1c904:	mov	x8, #0x86                  	// #134
   1c908:	mov	x3, #0x8                   	// #8
   1c90c:	svc	#0x0
   1c910:	cmp	x0, #0x0
   1c914:	mov	x19, x0
   1c918:	ccmp	x21, #0x0, #0x4, eq  // eq = none
   1c91c:	b.ne	1c934 <__sanitizer_set_report_fd@@Base+0x4ab4>  // b.any
   1c920:	mov	w0, w19
   1c924:	ldp	x21, x22, [sp, #16]
   1c928:	ldp	x23, x30, [sp, #32]
   1c92c:	ldp	x19, x20, [sp], #112
   1c930:	ret
   1c934:	mov	x0, x21
   1c938:	mov	x2, x3
   1c93c:	ldr	x3, [sp, #80]
   1c940:	add	x1, x22, #0x18
   1c944:	str	x3, [x0], #8
   1c948:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   1c94c:	ldr	x0, [sp, #88]
   1c950:	str	w0, [x21, #136]
   1c954:	ldr	x0, [sp, #96]
   1c958:	str	x0, [x21, #144]
   1c95c:	mov	w0, w19
   1c960:	ldp	x21, x22, [sp, #16]
   1c964:	ldp	x23, x30, [sp, #32]
   1c968:	ldp	x19, x20, [sp], #112
   1c96c:	ret
   1c970:	mov	x8, #0x87                  	// #135
   1c974:	mov	x3, #0x8                   	// #8
   1c978:	sxtw	x0, w0
   1c97c:	svc	#0x0
   1c980:	ret
   1c984:	nop
   1c988:	mov	x2, #0x80                  	// #128
   1c98c:	mov	w1, #0xff                  	// #255
   1c990:	b	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   1c994:	nop
   1c998:	mov	x2, #0x80                  	// #128
   1c99c:	mov	w1, #0x0                   	// #0
   1c9a0:	b	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   1c9a4:	nop
   1c9a8:	sub	w1, w1, #0x1
   1c9ac:	sxtw	x3, w1
   1c9b0:	cmp	x3, #0x3ff
   1c9b4:	b.hi	1c9d8 <__sanitizer_set_report_fd@@Base+0x4b58>  // b.pmore
   1c9b8:	lsr	x3, x3, #3
   1c9bc:	and	w1, w1, #0x7
   1c9c0:	mov	w2, #0x1                   	// #1
   1c9c4:	lsl	w1, w2, w1
   1c9c8:	ldrb	w2, [x0, x3]
   1c9cc:	bic	w1, w2, w1
   1c9d0:	strb	w1, [x0, x3]
   1c9d4:	ret
   1c9d8:	str	x30, [sp, #-16]!
   1c9dc:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1c9e0:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1c9e4:	add	x2, x2, #0x850
   1c9e8:	add	x0, x0, #0x750
   1c9ec:	mov	x4, #0x400                 	// #1024
   1c9f0:	mov	w1, #0x364                 	// #868
   1c9f4:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   1c9f8:	sub	w1, w1, #0x1
   1c9fc:	sxtw	x3, w1
   1ca00:	cmp	x3, #0x3ff
   1ca04:	b.hi	1ca20 <__sanitizer_set_report_fd@@Base+0x4ba0>  // b.pmore
   1ca08:	lsr	x3, x3, #3
   1ca0c:	and	w1, w1, #0x7
   1ca10:	ldrb	w0, [x0, x3]
   1ca14:	asr	w0, w0, w1
   1ca18:	and	w0, w0, #0x1
   1ca1c:	ret
   1ca20:	str	x30, [sp, #-16]!
   1ca24:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1ca28:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1ca2c:	add	x2, x2, #0x850
   1ca30:	add	x0, x0, #0x750
   1ca34:	mov	x4, #0x400                 	// #1024
   1ca38:	mov	w1, #0x36e                 	// #878
   1ca3c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   1ca40:	stp	x19, x20, [sp, #-144]!
   1ca44:	mov	x19, x0
   1ca48:	mov	w20, w1
   1ca4c:	stp	x23, x24, [sp, #32]
   1ca50:	adrp	x24, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   1ca54:	mov	w1, #0xffffffff            	// #-1
   1ca58:	stp	x21, x22, [sp, #16]
   1ca5c:	ldr	x21, [x24, #4016]
   1ca60:	stp	x25, x30, [sp, #48]
   1ca64:	stp	xzr, xzr, [x0, #16]
   1ca68:	ldr	x0, [x21]
   1ca6c:	stp	w20, w1, [x19]
   1ca70:	str	xzr, [x19, #8]
   1ca74:	cbz	x0, 1cb74 <__sanitizer_set_report_fd@@Base+0x4cf4>
   1ca78:	sub	x1, x0, #0x1
   1ca7c:	tst	x1, x0
   1ca80:	b.ne	1cbe4 <__sanitizer_set_report_fd@@Base+0x4d64>  // b.any
   1ca84:	add	x21, x19, #0x8
   1ca88:	add	x22, x0, #0xfff
   1ca8c:	neg	x0, x0
   1ca90:	mov	w2, #0x0                   	// #0
   1ca94:	and	x22, x22, x0
   1ca98:	adrp	x25, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   1ca9c:	mov	x0, x22
   1caa0:	add	x1, x25, #0xc10
   1caa4:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   1caa8:	mov	x23, x0
   1caac:	ldr	x1, [x19, #8]
   1cab0:	ldr	x2, [x21, #16]
   1cab4:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   1cab8:	ldr	x0, [x19, #8]
   1cabc:	ldr	x1, [x21, #8]
   1cac0:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   1cac4:	ldr	x2, [x21, #16]
   1cac8:	str	x23, [x19, #8]
   1cacc:	str	x22, [x21, #8]
   1cad0:	cmp	x2, #0xfff
   1cad4:	b.hi	1caf4 <__sanitizer_set_report_fd@@Base+0x4c74>  // b.pmore
   1cad8:	cmp	x22, #0xfff
   1cadc:	b.ls	1cb84 <__sanitizer_set_report_fd@@Base+0x4d04>  // b.plast
   1cae0:	mov	x3, #0x1000                	// #4096
   1cae4:	add	x0, x23, x2
   1cae8:	mov	w1, #0x0                   	// #0
   1caec:	sub	x2, x3, x2
   1caf0:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   1caf4:	mov	x0, #0x1000                	// #4096
   1caf8:	str	x0, [x21, #16]
   1cafc:	add	x21, sp, #0x40
   1cb00:	mov	w3, w20
   1cb04:	mov	x0, x21
   1cb08:	mov	x1, #0x50                  	// #80
   1cb0c:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1cb10:	add	x2, x2, #0x878
   1cb14:	bl	1f928 <__sanitizer_on_print@@Base+0x8>
   1cb18:	mov	x1, x21
   1cb1c:	mov	x8, #0x38                  	// #56
   1cb20:	mov	x0, #0xffffffffffffff9c    	// #-100
   1cb24:	mov	x2, #0x4000                	// #16384
   1cb28:	svc	#0x0
   1cb2c:	str	w0, [x19, #4]
   1cb30:	sxtw	x0, w0
   1cb34:	cmn	x0, #0x1, lsl #12
   1cb38:	b.hi	1cb50 <__sanitizer_set_report_fd@@Base+0x4cd0>  // b.pmore
   1cb3c:	ldp	x21, x22, [sp, #16]
   1cb40:	ldp	x23, x24, [sp, #32]
   1cb44:	ldp	x25, x30, [sp, #48]
   1cb48:	ldp	x19, x20, [sp], #144
   1cb4c:	ret
   1cb50:	mov	w1, w20
   1cb54:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1cb58:	add	x0, x0, #0x888
   1cb5c:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   1cb60:	ldp	x21, x22, [sp, #16]
   1cb64:	ldp	x23, x24, [sp, #32]
   1cb68:	ldp	x25, x30, [sp, #48]
   1cb6c:	ldp	x19, x20, [sp], #144
   1cb70:	ret
   1cb74:	mov	x0, #0x6                   	// #6
   1cb78:	bl	6570 <getauxval@plt>
   1cb7c:	str	x0, [x21]
   1cb80:	b	1ca78 <__sanitizer_set_report_fd@@Base+0x4bf8>
   1cb84:	ldr	x24, [x24, #4016]
   1cb88:	ldr	x0, [x24]
   1cb8c:	cbz	x0, 1cbf4 <__sanitizer_set_report_fd@@Base+0x4d74>
   1cb90:	sub	x1, x0, #0x1
   1cb94:	tst	x1, x0
   1cb98:	b.ne	1cbe4 <__sanitizer_set_report_fd@@Base+0x4d64>  // b.any
   1cb9c:	add	x22, x0, #0xfff
   1cba0:	neg	x0, x0
   1cba4:	and	x22, x22, x0
   1cba8:	add	x1, x25, #0xc10
   1cbac:	mov	w2, #0x0                   	// #0
   1cbb0:	mov	x0, x22
   1cbb4:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   1cbb8:	mov	x23, x0
   1cbbc:	ldr	x1, [x19, #8]
   1cbc0:	ldr	x2, [x21, #16]
   1cbc4:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   1cbc8:	ldr	x0, [x19, #8]
   1cbcc:	ldr	x1, [x21, #8]
   1cbd0:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   1cbd4:	ldr	x2, [x21, #16]
   1cbd8:	str	x23, [x19, #8]
   1cbdc:	str	x22, [x21, #8]
   1cbe0:	b	1cae0 <__sanitizer_set_report_fd@@Base+0x4c60>
   1cbe4:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   1cbe8:	add	x0, x0, #0xbf8
   1cbec:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   1cbf0:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   1cbf4:	mov	x0, #0x6                   	// #6
   1cbf8:	bl	6570 <getauxval@plt>
   1cbfc:	str	x0, [x24]
   1cc00:	b	1cb90 <__sanitizer_set_report_fd@@Base+0x4d10>
   1cc04:	nop
   1cc08:	stp	x19, x20, [sp, #-144]!
   1cc0c:	mov	x20, x0
   1cc10:	mov	w4, w1
   1cc14:	stp	x21, x22, [sp, #16]
   1cc18:	add	x21, sp, #0x40
   1cc1c:	ldr	w3, [x20], #8
   1cc20:	mov	x1, #0x50                  	// #80
   1cc24:	mov	x19, x0
   1cc28:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1cc2c:	mov	x0, x21
   1cc30:	add	x2, x2, #0x8b0
   1cc34:	str	x30, [sp, #32]
   1cc38:	bl	1f928 <__sanitizer_on_print@@Base+0x8>
   1cc3c:	mov	x0, x21
   1cc40:	mov	x1, x20
   1cc44:	mov	x3, #0x0                   	// #0
   1cc48:	mov	x2, #0x4000000             	// #67108864
   1cc4c:	bl	17728 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2390>
   1cc50:	tst	w0, #0xff
   1cc54:	b.eq	1cc60 <__sanitizer_set_report_fd@@Base+0x4de0>  // b.none
   1cc58:	ldr	x3, [x19, #24]
   1cc5c:	cbnz	x3, 1cc74 <__sanitizer_set_report_fd@@Base+0x4df4>
   1cc60:	mov	w0, #0x0                   	// #0
   1cc64:	ldp	x21, x22, [sp, #16]
   1cc68:	ldr	x30, [sp, #32]
   1cc6c:	ldp	x19, x20, [sp], #144
   1cc70:	ret
   1cc74:	ldr	x4, [x19, #16]
   1cc78:	strb	wzr, [sp, #63]
   1cc7c:	cmp	x3, x4
   1cc80:	b.hi	1cd9c <__sanitizer_set_report_fd@@Base+0x4f1c>  // b.pmore
   1cc84:	add	x1, x3, #0x1
   1cc88:	b.eq	1cce8 <__sanitizer_set_report_fd@@Base+0x4e68>  // b.none
   1cc8c:	ldr	x21, [x19, #8]
   1cc90:	str	x1, [x20, #16]
   1cc94:	add	x0, x21, x3
   1cc98:	add	x1, sp, #0x3f
   1cc9c:	mov	x2, #0x1                   	// #1
   1cca0:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   1cca4:	ldr	x0, [x19, #8]
   1cca8:	adrp	x20, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1ccac:	add	x20, x20, #0xbb0
   1ccb0:	mov	x1, x20
   1ccb4:	bl	1b580 <__sanitizer_set_report_fd@@Base+0x3700>
   1ccb8:	mov	x19, x0
   1ccbc:	cbz	x0, 1cc60 <__sanitizer_set_report_fd@@Base+0x4de0>
   1ccc0:	mov	x0, x20
   1ccc4:	bl	1a690 <__sanitizer_set_report_fd@@Base+0x2810>
   1ccc8:	add	x0, x19, x0
   1cccc:	bl	1b740 <__sanitizer_set_report_fd@@Base+0x38c0>
   1ccd0:	cmp	w0, #0x0
   1ccd4:	cset	w0, ne  // ne = any
   1ccd8:	ldp	x21, x22, [sp, #16]
   1ccdc:	ldr	x30, [sp, #32]
   1cce0:	ldp	x19, x20, [sp], #144
   1cce4:	ret
   1cce8:	cbz	x1, 1cdc4 <__sanitizer_set_report_fd@@Base+0x4f44>
   1ccec:	tst	x3, x1
   1ccf0:	b.eq	1cd94 <__sanitizer_set_report_fd@@Base+0x4f14>  // b.none
   1ccf4:	clz	x2, x1
   1ccf8:	mov	w0, #0x3f                  	// #63
   1ccfc:	sub	w0, w0, w2
   1cd00:	mov	x2, #0x1                   	// #1
   1cd04:	add	w21, w0, #0x1
   1cd08:	lsl	x21, x2, x21
   1cd0c:	cmp	x1, x21
   1cd10:	b.cs	1ce10 <__sanitizer_set_report_fd@@Base+0x4f90>  // b.hs, b.nlast
   1cd14:	lsl	x4, x2, x0
   1cd18:	cmp	x1, x4
   1cd1c:	b.ls	1ce30 <__sanitizer_set_report_fd@@Base+0x4fb0>  // b.plast
   1cd20:	cmp	x3, x21
   1cd24:	b.hi	1cde4 <__sanitizer_set_report_fd@@Base+0x4f64>  // b.pmore
   1cd28:	adrp	x22, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   1cd2c:	ldr	x22, [x22, #4016]
   1cd30:	ldr	x0, [x22]
   1cd34:	cbz	x0, 1cdb4 <__sanitizer_set_report_fd@@Base+0x4f34>
   1cd38:	sub	x22, x0, #0x1
   1cd3c:	tst	x22, x0
   1cd40:	b.ne	1ce00 <__sanitizer_set_report_fd@@Base+0x4f80>  // b.any
   1cd44:	add	x21, x21, x22
   1cd48:	neg	x0, x0
   1cd4c:	and	x22, x21, x0
   1cd50:	mov	w2, #0x0                   	// #0
   1cd54:	mov	x0, x22
   1cd58:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   1cd5c:	add	x1, x1, #0xc10
   1cd60:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   1cd64:	ldr	x1, [x19, #8]
   1cd68:	mov	x21, x0
   1cd6c:	ldr	x2, [x20, #16]
   1cd70:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   1cd74:	ldr	x1, [x20, #8]
   1cd78:	ldr	x0, [x19, #8]
   1cd7c:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   1cd80:	ldr	x3, [x20, #16]
   1cd84:	str	x21, [x19, #8]
   1cd88:	str	x22, [x20, #8]
   1cd8c:	add	x1, x3, #0x1
   1cd90:	b	1cc90 <__sanitizer_set_report_fd@@Base+0x4e10>
   1cd94:	mov	x21, x1
   1cd98:	b	1cd28 <__sanitizer_set_report_fd@@Base+0x4ea8>
   1cd9c:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1cda0:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   1cda4:	add	x2, x2, #0x8c8
   1cda8:	add	x0, x0, #0xb98
   1cdac:	mov	w1, #0x1cd                 	// #461
   1cdb0:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   1cdb4:	mov	x0, #0x6                   	// #6
   1cdb8:	bl	6570 <getauxval@plt>
   1cdbc:	str	x0, [x22]
   1cdc0:	b	1cd38 <__sanitizer_set_report_fd@@Base+0x4eb8>
   1cdc4:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1cdc8:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   1cdcc:	add	x2, x2, #0x8e8
   1cdd0:	add	x0, x0, #0xb98
   1cdd4:	mov	x4, #0x0                   	// #0
   1cdd8:	mov	x3, #0x0                   	// #0
   1cddc:	mov	w1, #0x186                 	// #390
   1cde0:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   1cde4:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1cde8:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   1cdec:	mov	x4, x21
   1cdf0:	add	x2, x2, #0x8f8
   1cdf4:	add	x0, x0, #0xb98
   1cdf8:	mov	w1, #0x20c                 	// #524
   1cdfc:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   1ce00:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   1ce04:	add	x0, x0, #0xbf8
   1ce08:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   1ce0c:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   1ce10:	mov	x3, x1
   1ce14:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   1ce18:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   1ce1c:	mov	x4, x21
   1ce20:	add	x2, x2, #0x680
   1ce24:	add	x0, x0, #0xb98
   1ce28:	mov	w1, #0x18a                 	// #394
   1ce2c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   1ce30:	mov	x3, x1
   1ce34:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   1ce38:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   1ce3c:	add	x2, x2, #0x708
   1ce40:	add	x0, x0, #0xb98
   1ce44:	mov	w1, #0x18b                 	// #395
   1ce48:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   1ce4c:	nop
   1ce50:	stp	x19, x20, [sp, #-144]!
   1ce54:	stp	x23, x24, [sp, #32]
   1ce58:	stp	x25, x26, [sp, #48]
   1ce5c:	mov	x25, x0
   1ce60:	ldrsw	x0, [x0, #4]
   1ce64:	str	x30, [sp, #80]
   1ce68:	cmn	x0, #0x1, lsl #12
   1ce6c:	b.hi	1d02c <__sanitizer_set_report_fd@@Base+0x51ac>  // b.pmore
   1ce70:	mov	x8, #0x3e                  	// #62
   1ce74:	mov	x2, #0x0                   	// #0
   1ce78:	stp	x21, x22, [sp, #16]
   1ce7c:	stp	x27, x28, [sp, #64]
   1ce80:	mov	x28, x1
   1ce84:	mov	x1, #0x0                   	// #0
   1ce88:	svc	#0x0
   1ce8c:	add	x23, x25, #0x8
   1ce90:	str	xzr, [x28, #16]
   1ce94:	adrp	x22, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   1ce98:	add	x0, sp, #0x88
   1ce9c:	ldr	x19, [x25, #16]
   1cea0:	str	x0, [sp, #96]
   1cea4:	ldr	x3, [x23, #16]
   1cea8:	mov	w20, #0x1                   	// #1
   1ceac:	ldr	x0, [x22, #4016]
   1ceb0:	mov	w24, #0x2                   	// #2
   1ceb4:	str	x0, [sp, #104]
   1ceb8:	cmp	x19, x3
   1cebc:	b.ls	1ced4 <__sanitizer_set_report_fd@@Base+0x5054>  // b.plast
   1cec0:	ldr	x0, [x23]
   1cec4:	sub	x2, x19, x3
   1cec8:	mov	w1, #0x0                   	// #0
   1cecc:	add	x0, x0, x3
   1ced0:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   1ced4:	str	x19, [x23, #16]
   1ced8:	cmp	x19, #0xfff
   1cedc:	b.ls	1d054 <__sanitizer_set_report_fd@@Base+0x51d4>  // b.plast
   1cee0:	ldrsw	x0, [x25, #4]
   1cee4:	and	x2, x19, #0xffffffff
   1cee8:	mov	x8, #0x3d                  	// #61
   1ceec:	ldr	x1, [x25, #8]
   1cef0:	svc	#0x0
   1cef4:	mov	x26, x0
   1cef8:	cbz	x0, 1d20c <__sanitizer_set_report_fd@@Base+0x538c>
   1cefc:	cmn	x0, #0x1, lsl #12
   1cf00:	b.hi	1cff8 <__sanitizer_set_report_fd@@Base+0x5178>  // b.pmore
   1cf04:	ldr	x19, [x25, #8]
   1cf08:	add	x27, x19, x0
   1cf0c:	cmp	x19, x27
   1cf10:	b.cs	1cfa0 <__sanitizer_set_report_fd@@Base+0x5120>  // b.hs, b.nlast
   1cf14:	adrp	x21, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   1cf18:	add	x21, x21, #0xc10
   1cf1c:	b	1cf2c <__sanitizer_set_report_fd@@Base+0x50ac>
   1cf20:	cbnz	x2, 1cf48 <__sanitizer_set_report_fd@@Base+0x50c8>
   1cf24:	cmp	x27, x19
   1cf28:	b.ls	1cfa0 <__sanitizer_set_report_fd@@Base+0x5120>  // b.plast
   1cf2c:	mov	x0, x19
   1cf30:	ldrh	w2, [x19, #16]
   1cf34:	add	x19, x19, x2
   1cf38:	ldr	x2, [x0]
   1cf3c:	cmp	x2, #0x1
   1cf40:	b.ne	1cf20 <__sanitizer_set_report_fd@@Base+0x50a0>  // b.any
   1cf44:	mov	w24, w2
   1cf48:	ldrb	w2, [x0, #19]
   1cf4c:	sub	w2, w2, #0x30
   1cf50:	and	w2, w2, #0xff
   1cf54:	cmp	w2, #0x9
   1cf58:	b.hi	1cf24 <__sanitizer_set_report_fd@@Base+0x50a4>  // b.pmore
   1cf5c:	add	x0, x0, #0x13
   1cf60:	bl	1b740 <__sanitizer_set_report_fd@@Base+0x38c0>
   1cf64:	ldp	x4, x3, [x28, #8]
   1cf68:	str	x0, [sp, #136]
   1cf6c:	lsr	x4, x4, #3
   1cf70:	cmp	x3, x4
   1cf74:	b.hi	1d1f4 <__sanitizer_set_report_fd@@Base+0x5374>  // b.pmore
   1cf78:	add	x0, x3, #0x1
   1cf7c:	b.eq	1d0b8 <__sanitizer_set_report_fd@@Base+0x5238>  // b.none
   1cf80:	ldr	x7, [x28]
   1cf84:	str	x0, [x28, #16]
   1cf88:	ldr	x1, [sp, #96]
   1cf8c:	add	x0, x7, x3, lsl #3
   1cf90:	mov	x2, #0x8                   	// #8
   1cf94:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   1cf98:	cmp	x27, x19
   1cf9c:	b.hi	1cf2c <__sanitizer_set_report_fd@@Base+0x50ac>  // b.pmore
   1cfa0:	ldr	x3, [x25, #24]
   1cfa4:	cbz	w20, 1cfe8 <__sanitizer_set_report_fd@@Base+0x5168>
   1cfa8:	sub	x0, x3, #0x400
   1cfac:	cmp	x0, x26
   1cfb0:	b.cc	1d074 <__sanitizer_set_report_fd@@Base+0x51f4>  // b.lo, b.ul, b.last
   1cfb4:	ldr	x1, [x28, #16]
   1cfb8:	cbz	x1, 1d048 <__sanitizer_set_report_fd@@Base+0x51c8>
   1cfbc:	ldr	x2, [x28]
   1cfc0:	mov	x0, x25
   1cfc4:	add	x1, x2, x1, lsl #3
   1cfc8:	ldur	w1, [x1, #-8]
   1cfcc:	bl	1cc08 <__sanitizer_set_report_fd@@Base+0x4d88>
   1cfd0:	tst	w0, #0xff
   1cfd4:	b.eq	1d164 <__sanitizer_set_report_fd@@Base+0x52e4>  // b.none
   1cfd8:	mov	w20, #0x0                   	// #0
   1cfdc:	ldr	x3, [x23, #16]
   1cfe0:	ldr	x19, [x25, #16]
   1cfe4:	b	1ceb8 <__sanitizer_set_report_fd@@Base+0x5038>
   1cfe8:	mov	w24, #0x1                   	// #1
   1cfec:	mov	w20, #0x0                   	// #0
   1cff0:	ldr	x19, [x25, #16]
   1cff4:	b	1ceb8 <__sanitizer_set_report_fd@@Base+0x5038>
   1cff8:	ldr	w1, [x25]
   1cffc:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1d000:	add	x0, x0, #0x938
   1d004:	mov	w24, #0x0                   	// #0
   1d008:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   1d00c:	ldp	x21, x22, [sp, #16]
   1d010:	ldp	x27, x28, [sp, #64]
   1d014:	mov	w0, w24
   1d018:	ldp	x23, x24, [sp, #32]
   1d01c:	ldp	x25, x26, [sp, #48]
   1d020:	ldr	x30, [sp, #80]
   1d024:	ldp	x19, x20, [sp], #144
   1d028:	ret
   1d02c:	mov	w24, #0x0                   	// #0
   1d030:	mov	w0, w24
   1d034:	ldp	x23, x24, [sp, #32]
   1d038:	ldp	x25, x26, [sp, #48]
   1d03c:	ldr	x30, [sp, #80]
   1d040:	ldp	x19, x20, [sp], #144
   1d044:	ret
   1d048:	mov	w20, #0x0                   	// #0
   1d04c:	ldr	x19, [x25, #16]
   1d050:	b	1ceb8 <__sanitizer_set_report_fd@@Base+0x5038>
   1d054:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1d058:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1d05c:	mov	x3, x19
   1d060:	add	x2, x2, #0x918
   1d064:	add	x0, x0, #0x750
   1d068:	mov	x4, #0x1000                	// #4096
   1d06c:	mov	w1, #0x398                 	// #920
   1d070:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   1d074:	cmp	x3, x3, lsl #1
   1d078:	lsl	x20, x3, #1
   1d07c:	ldr	x19, [x25, #16]
   1d080:	b.cs	1d0a4 <__sanitizer_set_report_fd@@Base+0x5224>  // b.hs, b.nlast
   1d084:	cmp	x20, x19
   1d088:	b.hi	1d178 <__sanitizer_set_report_fd@@Base+0x52f8>  // b.pmore
   1d08c:	ldr	x19, [x23]
   1d090:	add	x0, x19, x3
   1d094:	sub	x2, x20, x3
   1d098:	mov	w1, #0x0                   	// #0
   1d09c:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   1d0a0:	ldr	x19, [x25, #16]
   1d0a4:	mov	x3, x20
   1d0a8:	mov	w24, #0x1                   	// #1
   1d0ac:	str	x20, [x23, #16]
   1d0b0:	mov	w20, #0x0                   	// #0
   1d0b4:	b	1ceb8 <__sanitizer_set_report_fd@@Base+0x5038>
   1d0b8:	tst	x3, x0
   1d0bc:	b.eq	1d0f8 <__sanitizer_set_report_fd@@Base+0x5278>  // b.none
   1d0c0:	clz	x2, x0
   1d0c4:	mov	w1, #0x3f                  	// #63
   1d0c8:	sub	w2, w1, w2
   1d0cc:	mov	x1, #0x1                   	// #1
   1d0d0:	add	w4, w2, #0x1
   1d0d4:	lsl	x4, x1, x4
   1d0d8:	cmp	x4, x0
   1d0dc:	b.ls	1d1d8 <__sanitizer_set_report_fd@@Base+0x5358>  // b.plast
   1d0e0:	lsl	x1, x1, x2
   1d0e4:	cmp	x1, x0
   1d0e8:	b.cs	1d26c <__sanitizer_set_report_fd@@Base+0x53ec>  // b.hs, b.nlast
   1d0ec:	cmp	x3, x4
   1d0f0:	b.hi	1d244 <__sanitizer_set_report_fd@@Base+0x53c4>  // b.pmore
   1d0f4:	mov	x0, x4
   1d0f8:	ldr	x1, [sp, #104]
   1d0fc:	ldr	x2, [x1]
   1d100:	lsl	x1, x0, #3
   1d104:	cbz	x2, 1d218 <__sanitizer_set_report_fd@@Base+0x5398>
   1d108:	sub	x0, x2, #0x1
   1d10c:	tst	x2, x0
   1d110:	b.ne	1d234 <__sanitizer_set_report_fd@@Base+0x53b4>  // b.any
   1d114:	add	x0, x1, x0
   1d118:	neg	x2, x2
   1d11c:	and	x4, x0, x2
   1d120:	mov	x1, x21
   1d124:	mov	x0, x4
   1d128:	mov	w2, #0x0                   	// #0
   1d12c:	str	x4, [sp, #120]
   1d130:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   1d134:	str	x0, [sp, #112]
   1d138:	ldr	x1, [x28]
   1d13c:	ldr	x2, [x28, #16]
   1d140:	lsl	x2, x2, #3
   1d144:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   1d148:	ldp	x0, x1, [x28]
   1d14c:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   1d150:	ldr	x3, [x28, #16]
   1d154:	ldp	x7, x4, [sp, #112]
   1d158:	add	x0, x3, #0x1
   1d15c:	stp	x7, x4, [x28]
   1d160:	b	1cf84 <__sanitizer_set_report_fd@@Base+0x5104>
   1d164:	mov	w24, #0x1                   	// #1
   1d168:	mov	w20, #0x0                   	// #0
   1d16c:	ldr	x3, [x23, #16]
   1d170:	ldr	x19, [x25, #16]
   1d174:	b	1ceb8 <__sanitizer_set_report_fd@@Base+0x5038>
   1d178:	cbz	x20, 1d28c <__sanitizer_set_report_fd@@Base+0x540c>
   1d17c:	ldr	x19, [x22, #4016]
   1d180:	ldr	x0, [x19]
   1d184:	cbz	x0, 1d25c <__sanitizer_set_report_fd@@Base+0x53dc>
   1d188:	sub	x1, x0, #0x1
   1d18c:	tst	x0, x1
   1d190:	b.ne	1d234 <__sanitizer_set_report_fd@@Base+0x53b4>  // b.any
   1d194:	add	x1, x20, x1
   1d198:	neg	x0, x0
   1d19c:	and	x21, x1, x0
   1d1a0:	mov	w2, #0x0                   	// #0
   1d1a4:	mov	x0, x21
   1d1a8:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   1d1ac:	add	x1, x1, #0xc10
   1d1b0:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   1d1b4:	ldr	x1, [x23]
   1d1b8:	mov	x19, x0
   1d1bc:	ldr	x2, [x23, #16]
   1d1c0:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   1d1c4:	ldp	x0, x1, [x23]
   1d1c8:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   1d1cc:	stp	x19, x21, [x23]
   1d1d0:	ldr	x3, [x23, #16]
   1d1d4:	b	1d090 <__sanitizer_set_report_fd@@Base+0x5210>
   1d1d8:	mov	x3, x0
   1d1dc:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   1d1e0:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   1d1e4:	add	x2, x2, #0x680
   1d1e8:	add	x0, x0, #0xb98
   1d1ec:	mov	w1, #0x18a                 	// #394
   1d1f0:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   1d1f4:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1d1f8:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   1d1fc:	add	x2, x2, #0x8c8
   1d200:	add	x0, x0, #0xb98
   1d204:	mov	w1, #0x1cd                 	// #461
   1d208:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   1d20c:	ldp	x21, x22, [sp, #16]
   1d210:	ldp	x27, x28, [sp, #64]
   1d214:	b	1d014 <__sanitizer_set_report_fd@@Base+0x5194>
   1d218:	mov	x0, #0x6                   	// #6
   1d21c:	str	x1, [sp, #112]
   1d220:	bl	6570 <getauxval@plt>
   1d224:	mov	x2, x0
   1d228:	ldp	x0, x1, [sp, #104]
   1d22c:	str	x2, [x0]
   1d230:	b	1d108 <__sanitizer_set_report_fd@@Base+0x5288>
   1d234:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   1d238:	add	x0, x0, #0xbf8
   1d23c:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   1d240:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   1d244:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1d248:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   1d24c:	add	x2, x2, #0x8f8
   1d250:	add	x0, x0, #0xb98
   1d254:	mov	w1, #0x20c                 	// #524
   1d258:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   1d25c:	mov	x0, #0x6                   	// #6
   1d260:	bl	6570 <getauxval@plt>
   1d264:	str	x0, [x19]
   1d268:	b	1d188 <__sanitizer_set_report_fd@@Base+0x5308>
   1d26c:	mov	x4, x1
   1d270:	mov	x3, x0
   1d274:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   1d278:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   1d27c:	add	x2, x2, #0x708
   1d280:	add	x0, x0, #0xb98
   1d284:	mov	w1, #0x18b                 	// #395
   1d288:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   1d28c:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   1d290:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   1d294:	add	x2, x2, #0xb78
   1d298:	add	x0, x0, #0xb98
   1d29c:	mov	x4, #0x0                   	// #0
   1d2a0:	mov	x3, #0x0                   	// #0
   1d2a4:	mov	w1, #0x20b                 	// #523
   1d2a8:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   1d2ac:	nop
   1d2b0:	mov	x1, x0
   1d2b4:	ldrsw	x0, [x0, #4]
   1d2b8:	cmn	x0, #0x1, lsl #12
   1d2bc:	b.hi	1d2c8 <__sanitizer_set_report_fd@@Base+0x5448>  // b.pmore
   1d2c0:	mov	x8, #0x39                  	// #57
   1d2c4:	svc	#0x0
   1d2c8:	ldp	x0, x1, [x1, #8]
   1d2cc:	b	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   1d2d0:	stp	x29, x30, [sp, #-16]!
   1d2d4:	mov	x0, #0x1                   	// #1
   1d2d8:	mov	x29, sp
   1d2dc:	clz	x1, x29
   1d2e0:	neg	w1, w1
   1d2e4:	ldp	x29, x30, [sp], #16
   1d2e8:	lsl	x0, x0, x1
   1d2ec:	sub	x0, x0, #0x1
   1d2f0:	ret
   1d2f4:	nop
   1d2f8:	stp	x29, x30, [sp, #-16]!
   1d2fc:	mov	x0, #0x1                   	// #1
   1d300:	mov	x29, sp
   1d304:	clz	x1, x29
   1d308:	neg	w1, w1
   1d30c:	ldp	x29, x30, [sp], #16
   1d310:	lsl	x0, x0, x1
   1d314:	sub	x0, x0, #0x1
   1d318:	ret
   1d31c:	nop
   1d320:	mov	x0, #0x6                   	// #6
   1d324:	b	6570 <getauxval@plt>
   1d328:	stp	x19, x20, [sp, #-32]!
   1d32c:	mov	x2, x0
   1d330:	mov	x20, x0
   1d334:	mov	x19, x1
   1d338:	mov	x3, x1
   1d33c:	mov	x8, #0x4e                  	// #78
   1d340:	mov	x0, #0xffffffffffffff9c    	// #-100
   1d344:	stp	x21, x30, [sp, #16]
   1d348:	adrp	x21, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1d34c:	add	x1, x21, #0x970
   1d350:	svc	#0x0
   1d354:	cmn	x0, #0x1, lsl #12
   1d358:	b.hi	1d368 <__sanitizer_set_report_fd@@Base+0x54e8>  // b.pmore
   1d35c:	ldp	x21, x30, [sp, #16]
   1d360:	ldp	x19, x20, [sp], #32
   1d364:	ret
   1d368:	neg	w1, w0
   1d36c:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1d370:	add	x0, x0, #0x980
   1d374:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   1d378:	add	x3, x21, #0x970
   1d37c:	mov	x0, x20
   1d380:	mov	x1, x19
   1d384:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   1d388:	add	x2, x2, #0xcb8
   1d38c:	bl	1f928 <__sanitizer_on_print@@Base+0x8>
   1d390:	cmp	x19, w0, sxtw
   1d394:	sxtw	x0, w0
   1d398:	b.hi	1d35c <__sanitizer_set_report_fd@@Base+0x54dc>  // b.pmore
   1d39c:	mov	x3, x0
   1d3a0:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1d3a4:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1d3a8:	mov	x4, x19
   1d3ac:	add	x2, x2, #0x9e0
   1d3b0:	add	x0, x0, #0x750
   1d3b4:	mov	w1, #0x45c                 	// #1116
   1d3b8:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   1d3bc:	nop
   1d3c0:	stp	x19, x20, [sp, #-64]!
   1d3c4:	mov	x5, #0x0                   	// #0
   1d3c8:	mov	x19, x0
   1d3cc:	mov	x20, x1
   1d3d0:	add	x3, sp, #0x38
   1d3d4:	add	x2, sp, #0x30
   1d3d8:	add	x1, sp, #0x28
   1d3dc:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1d3e0:	mov	x4, #0x100000              	// #1048576
   1d3e4:	add	x0, x0, #0x7c0
   1d3e8:	str	x30, [sp, #24]
   1d3ec:	bl	17590 <__sanitizer_install_malloc_and_free_hooks@@Base+0x21f8>
   1d3f0:	tst	w0, #0xff
   1d3f4:	b.eq	1d424 <__sanitizer_set_report_fd@@Base+0x55a4>  // b.none
   1d3f8:	ldr	x1, [sp, #40]
   1d3fc:	mov	x2, x20
   1d400:	mov	x0, x19
   1d404:	bl	1b4c8 <__sanitizer_set_report_fd@@Base+0x3648>
   1d408:	ldp	x0, x1, [sp, #40]
   1d40c:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   1d410:	mov	x0, x19
   1d414:	bl	1a690 <__sanitizer_set_report_fd@@Base+0x2810>
   1d418:	ldr	x30, [sp, #24]
   1d41c:	ldp	x19, x20, [sp], #64
   1d420:	ret
   1d424:	mov	x2, x19
   1d428:	mov	x3, x20
   1d42c:	mov	x8, #0x4e                  	// #78
   1d430:	mov	x0, #0xffffffffffffff9c    	// #-100
   1d434:	str	x21, [sp, #16]
   1d438:	adrp	x21, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1d43c:	add	x1, x21, #0x970
   1d440:	svc	#0x0
   1d444:	cmn	x0, #0x1, lsl #12
   1d448:	b.hi	1d45c <__sanitizer_set_report_fd@@Base+0x55dc>  // b.pmore
   1d44c:	ldr	x21, [sp, #16]
   1d450:	ldr	x30, [sp, #24]
   1d454:	ldp	x19, x20, [sp], #64
   1d458:	ret
   1d45c:	neg	w1, w0
   1d460:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1d464:	add	x0, x0, #0x980
   1d468:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   1d46c:	add	x3, x21, #0x970
   1d470:	mov	x0, x19
   1d474:	mov	x1, x20
   1d478:	adrp	x2, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   1d47c:	add	x2, x2, #0xcb8
   1d480:	bl	1f928 <__sanitizer_on_print@@Base+0x8>
   1d484:	cmp	x20, w0, sxtw
   1d488:	sxtw	x0, w0
   1d48c:	b.hi	1d44c <__sanitizer_set_report_fd@@Base+0x55cc>  // b.pmore
   1d490:	mov	x3, x0
   1d494:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1d498:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1d49c:	mov	x4, x20
   1d4a0:	add	x2, x2, #0x9e0
   1d4a4:	add	x0, x0, #0x750
   1d4a8:	mov	w1, #0x45c                 	// #1116
   1d4ac:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   1d4b0:	stp	x19, x20, [sp, #-32]!
   1d4b4:	mov	x20, x1
   1d4b8:	mov	x19, x0
   1d4bc:	str	x30, [sp, #16]
   1d4c0:	ldrb	w1, [x0]
   1d4c4:	cbz	w1, 1d4f8 <__sanitizer_set_report_fd@@Base+0x5678>
   1d4c8:	ldrb	w2, [x19, #1]!
   1d4cc:	cbnz	w2, 1d4c8 <__sanitizer_set_report_fd@@Base+0x5648>
   1d4d0:	cmp	x0, x19
   1d4d4:	b.cc	1d4e8 <__sanitizer_set_report_fd@@Base+0x5668>  // b.lo, b.ul, b.last
   1d4d8:	b	1d4f8 <__sanitizer_set_report_fd@@Base+0x5678>
   1d4dc:	ldrb	w2, [x19, #-1]!
   1d4e0:	cmp	x0, x19
   1d4e4:	b.eq	1d540 <__sanitizer_set_report_fd@@Base+0x56c0>  // b.none
   1d4e8:	ldrb	w2, [x19]
   1d4ec:	cmp	w2, #0x2f
   1d4f0:	b.ne	1d4dc <__sanitizer_set_report_fd@@Base+0x565c>  // b.any
   1d4f4:	add	x19, x19, #0x1
   1d4f8:	mov	x0, x20
   1d4fc:	bl	1a690 <__sanitizer_set_report_fd@@Base+0x2810>
   1d500:	mov	x1, x20
   1d504:	mov	x20, x0
   1d508:	mov	x2, x20
   1d50c:	mov	x0, x19
   1d510:	bl	1a5a8 <__sanitizer_set_report_fd@@Base+0x2728>
   1d514:	mov	w1, #0x0                   	// #0
   1d518:	cbnz	w0, 1d530 <__sanitizer_set_report_fd@@Base+0x56b0>
   1d51c:	ldrb	w0, [x19, x20]
   1d520:	sub	w0, w0, #0x2d
   1d524:	and	w0, w0, #0xff
   1d528:	cmp	w0, #0x1
   1d52c:	cset	w1, ls  // ls = plast
   1d530:	mov	w0, w1
   1d534:	ldr	x30, [sp, #16]
   1d538:	ldp	x19, x20, [sp], #32
   1d53c:	ret
   1d540:	cmp	w2, #0x2f
   1d544:	b.ne	1d4f8 <__sanitizer_set_report_fd@@Base+0x5678>  // b.any
   1d548:	add	x19, x19, #0x1
   1d54c:	b	1d4f8 <__sanitizer_set_report_fd@@Base+0x5678>
   1d550:	stp	x19, x20, [sp, #-80]!
   1d554:	stp	x21, x22, [sp, #16]
   1d558:	str	x30, [sp, #72]
   1d55c:	cbz	x0, 1d69c <__sanitizer_set_report_fd@@Base+0x581c>
   1d560:	str	x27, [sp, #64]
   1d564:	mov	x21, x1
   1d568:	ldr	x27, [x0]
   1d56c:	mov	x22, #0xffffffffffffffff    	// #-1
   1d570:	ldrh	w0, [x27, #54]
   1d574:	ldrh	w20, [x27, #56]
   1d578:	ldr	x19, [x27, #32]
   1d57c:	and	x2, x0, #0xffff
   1d580:	mul	w20, w20, w0
   1d584:	add	x19, x27, x19
   1d588:	mov	x0, x19
   1d58c:	add	x20, x19, w20, sxtw
   1d590:	cmp	x19, x20
   1d594:	b.eq	1d648 <__sanitizer_set_report_fd@@Base+0x57c8>  // b.none
   1d598:	stp	x23, x24, [sp, #32]
   1d59c:	stp	x25, x26, [sp, #48]
   1d5a0:	ldr	w3, [x0]
   1d5a4:	cmp	w3, #0x1
   1d5a8:	b.ne	1d5b8 <__sanitizer_set_report_fd@@Base+0x5738>  // b.any
   1d5ac:	ldr	x1, [x0, #16]
   1d5b0:	cmp	x22, x1
   1d5b4:	csel	x22, x22, x1, ls  // ls = plast
   1d5b8:	add	x0, x0, x2
   1d5bc:	cmp	x20, x0
   1d5c0:	b.ne	1d5a0 <__sanitizer_set_report_fd@@Base+0x5720>  // b.any
   1d5c4:	adrp	x23, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   1d5c8:	sub	x22, x27, x22
   1d5cc:	ldr	x23, [x23, #4016]
   1d5d0:	b	1d5e0 <__sanitizer_set_report_fd@@Base+0x5760>
   1d5d4:	add	x19, x19, x2
   1d5d8:	cmp	x20, x19
   1d5dc:	b.eq	1d640 <__sanitizer_set_report_fd@@Base+0x57c0>  // b.none
   1d5e0:	ldr	w0, [x19]
   1d5e4:	cmp	w0, #0x1
   1d5e8:	b.ne	1d5d4 <__sanitizer_set_report_fd@@Base+0x5754>  // b.any
   1d5ec:	ldr	x0, [x23]
   1d5f0:	ldr	x25, [x19, #16]
   1d5f4:	neg	x24, x0
   1d5f8:	ldr	x1, [x19, #40]
   1d5fc:	add	x25, x22, x25
   1d600:	and	x24, x24, x25
   1d604:	add	x26, x25, x1
   1d608:	cbz	x0, 1d65c <__sanitizer_set_report_fd@@Base+0x57dc>
   1d60c:	sub	x2, x0, #0x1
   1d610:	tst	x2, x0
   1d614:	b.ne	1d68c <__sanitizer_set_report_fd@@Base+0x580c>  // b.any
   1d618:	add	x2, x2, x26
   1d61c:	neg	x0, x0
   1d620:	and	x1, x2, x0
   1d624:	mov	x0, x24
   1d628:	sub	x1, x1, x24
   1d62c:	blr	x21
   1d630:	ldrh	w2, [x27, #54]
   1d634:	add	x19, x19, x2
   1d638:	cmp	x20, x19
   1d63c:	b.ne	1d5e0 <__sanitizer_set_report_fd@@Base+0x5760>  // b.any
   1d640:	ldp	x23, x24, [sp, #32]
   1d644:	ldp	x25, x26, [sp, #48]
   1d648:	ldp	x21, x22, [sp, #16]
   1d64c:	ldr	x27, [sp, #64]
   1d650:	ldr	x30, [sp, #72]
   1d654:	ldp	x19, x20, [sp], #80
   1d658:	ret
   1d65c:	mov	x0, #0x6                   	// #6
   1d660:	bl	6570 <getauxval@plt>
   1d664:	str	x0, [x23]
   1d668:	neg	x24, x0
   1d66c:	and	x24, x24, x25
   1d670:	cbnz	x0, 1d60c <__sanitizer_set_report_fd@@Base+0x578c>
   1d674:	mov	x0, #0x6                   	// #6
   1d678:	bl	6570 <getauxval@plt>
   1d67c:	str	x0, [x23]
   1d680:	sub	x2, x0, #0x1
   1d684:	tst	x2, x0
   1d688:	b.eq	1d618 <__sanitizer_set_report_fd@@Base+0x5798>  // b.none
   1d68c:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   1d690:	add	x0, x0, #0xbf8
   1d694:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   1d698:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   1d69c:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1d6a0:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1d6a4:	add	x2, x2, #0xa08
   1d6a8:	add	x0, x0, #0x750
   1d6ac:	mov	x4, #0x0                   	// #0
   1d6b0:	mov	x3, #0x0                   	// #0
   1d6b4:	mov	w1, #0x481                 	// #1153
   1d6b8:	stp	x23, x24, [sp, #32]
   1d6bc:	stp	x25, x26, [sp, #48]
   1d6c0:	str	x27, [sp, #64]
   1d6c4:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   1d6c8:	cmp	x0, #0x0
   1d6cc:	ccmp	x1, #0x0, #0x4, ne  // ne = any
   1d6d0:	b.eq	1d724 <__sanitizer_set_report_fd@@Base+0x58a4>  // b.none
   1d6d4:	str	x30, [sp, #-16]!
   1d6d8:	mov	x7, x1
   1d6dc:	ands	x1, x1, #0xf
   1d6e0:	b.ne	1d72c <__sanitizer_set_report_fd@@Base+0x58ac>  // b.any
   1d6e4:	sub	x1, x7, #0x10
   1d6e8:	stp	x0, x3, [x7, #-16]
   1d6ec:	mov	x0, x2
   1d6f0:	mov	x2, x4
   1d6f4:	mov	x3, x5
   1d6f8:	mov	x4, x6
   1d6fc:	mov	x8, #0xdc                  	// #220
   1d700:	svc	#0x0
   1d704:	cmp	x0, #0x0
   1d708:	b.ne	1d71c <__sanitizer_set_report_fd@@Base+0x589c>  // b.any
   1d70c:	ldp	x1, x0, [sp], #16
   1d710:	blr	x1
   1d714:	mov	x8, #0x5d                  	// #93
   1d718:	svc	#0x0
   1d71c:	ldr	x30, [sp], #16
   1d720:	ret
   1d724:	mov	x0, #0xffffffffffffffea    	// #-22
   1d728:	ret
   1d72c:	mov	x4, x1
   1d730:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1d734:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1d738:	add	x2, x2, #0xa20
   1d73c:	add	x0, x0, #0x750
   1d740:	mov	x3, #0x0                   	// #0
   1d744:	mov	w1, #0x537                 	// #1335
   1d748:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   1d74c:	nop
   1d750:	cmp	w0, #0x7
   1d754:	b.eq	1d800 <__sanitizer_set_report_fd@@Base+0x5980>  // b.none
   1d758:	b.gt	1d7a4 <__sanitizer_set_report_fd@@Base+0x5924>
   1d75c:	cmp	w0, #0x5
   1d760:	b.eq	1d818 <__sanitizer_set_report_fd@@Base+0x5998>  // b.none
   1d764:	cmp	w0, #0x6
   1d768:	b.ne	1d784 <__sanitizer_set_report_fd@@Base+0x5904>  // b.any
   1d76c:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   1d770:	ldr	x0, [x1, #4056]
   1d774:	ldr	w0, [x0, #80]
   1d778:	cmp	w0, #0x1
   1d77c:	b.eq	1d7c8 <__sanitizer_set_report_fd@@Base+0x5948>  // b.none
   1d780:	ret
   1d784:	cmp	w0, #0x4
   1d788:	b.ne	1d7e0 <__sanitizer_set_report_fd@@Base+0x5960>  // b.any
   1d78c:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   1d790:	ldr	x0, [x1, #4056]
   1d794:	ldr	w0, [x0, #84]
   1d798:	cmp	w0, #0x1
   1d79c:	b.ne	1d780 <__sanitizer_set_report_fd@@Base+0x5900>  // b.any
   1d7a0:	b	1d7c8 <__sanitizer_set_report_fd@@Base+0x5948>
   1d7a4:	cmp	w0, #0x8
   1d7a8:	b.eq	1d7e8 <__sanitizer_set_report_fd@@Base+0x5968>  // b.none
   1d7ac:	cmp	w0, #0xb
   1d7b0:	b.ne	1d7e0 <__sanitizer_set_report_fd@@Base+0x5960>  // b.any
   1d7b4:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   1d7b8:	ldr	x0, [x1, #4056]
   1d7bc:	ldr	w0, [x0, #72]
   1d7c0:	cmp	w0, #0x1
   1d7c4:	b.ne	1d780 <__sanitizer_set_report_fd@@Base+0x5900>  // b.any
   1d7c8:	ldr	x1, [x1, #4056]
   1d7cc:	mov	w2, #0x2                   	// #2
   1d7d0:	ldrb	w1, [x1, #96]
   1d7d4:	cmp	w1, #0x0
   1d7d8:	csel	w0, w0, w2, ne  // ne = any
   1d7dc:	ret
   1d7e0:	mov	w0, #0x0                   	// #0
   1d7e4:	ret
   1d7e8:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   1d7ec:	ldr	x0, [x1, #4056]
   1d7f0:	ldr	w0, [x0, #92]
   1d7f4:	cmp	w0, #0x1
   1d7f8:	b.ne	1d780 <__sanitizer_set_report_fd@@Base+0x5900>  // b.any
   1d7fc:	b	1d7c8 <__sanitizer_set_report_fd@@Base+0x5948>
   1d800:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   1d804:	ldr	x0, [x1, #4056]
   1d808:	ldr	w0, [x0, #76]
   1d80c:	cmp	w0, #0x1
   1d810:	b.ne	1d780 <__sanitizer_set_report_fd@@Base+0x5900>  // b.any
   1d814:	b	1d7c8 <__sanitizer_set_report_fd@@Base+0x5948>
   1d818:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   1d81c:	ldr	x0, [x1, #4056]
   1d820:	ldr	w0, [x0, #88]
   1d824:	cmp	w0, #0x1
   1d828:	b.ne	1d780 <__sanitizer_set_report_fd@@Base+0x5900>  // b.any
   1d82c:	b	1d7c8 <__sanitizer_set_report_fd@@Base+0x5948>
   1d830:	stp	x19, x20, [sp, #-320]!
   1d834:	mov	x2, #0x80                  	// #128
   1d838:	add	x20, sp, #0x40
   1d83c:	stp	x21, x22, [sp, #16]
   1d840:	mov	x21, x0
   1d844:	mov	x22, x1
   1d848:	mov	x0, x20
   1d84c:	mov	w1, #0xff                  	// #255
   1d850:	str	x30, [sp, #32]
   1d854:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   1d858:	add	x19, sp, #0xc0
   1d85c:	ldrb	w4, [sp, #68]
   1d860:	mov	x1, x20
   1d864:	mov	x2, x19
   1d868:	mov	x8, #0x87                  	// #135
   1d86c:	and	w4, w4, #0xfffffffe
   1d870:	mov	x0, #0x2                   	// #2
   1d874:	mov	x3, #0x8                   	// #8
   1d878:	strb	w4, [sp, #68]
   1d87c:	svc	#0x0
   1d880:	mov	x1, #0x0                   	// #0
   1d884:	mov	x3, x22
   1d888:	mov	x2, x21
   1d88c:	add	x0, sp, #0x38
   1d890:	bl	65b0 <_ZN11__sanitizer19real_pthread_createEPvS0_PFS0_S0_ES0_@plt>
   1d894:	mov	x1, x19
   1d898:	mov	x8, #0x87                  	// #135
   1d89c:	mov	x0, #0x2                   	// #2
   1d8a0:	mov	x2, #0x0                   	// #0
   1d8a4:	mov	x3, #0x8                   	// #8
   1d8a8:	svc	#0x0
   1d8ac:	ldp	x21, x22, [sp, #16]
   1d8b0:	ldr	x30, [sp, #32]
   1d8b4:	ldr	x0, [sp, #56]
   1d8b8:	ldp	x19, x20, [sp], #320
   1d8bc:	ret
   1d8c0:	mov	x1, #0x0                   	// #0
   1d8c4:	b	6340 <_ZN11__sanitizer17real_pthread_joinEPvPS0_@plt>
   1d8c8:	ldr	x0, [x0, #8]
   1d8cc:	add	x1, x0, #0x1d0
   1d8d0:	ldr	w0, [x0, #468]
   1d8d4:	cbz	w0, 1d908 <__sanitizer_set_report_fd@@Base+0x5a88>
   1d8d8:	mov	w3, #0x5201                	// #20993
   1d8dc:	movk	w3, #0x4553, lsl #16
   1d8e0:	b	1d8f0 <__sanitizer_set_report_fd@@Base+0x5a70>
   1d8e4:	add	x1, x1, w0, uxtw
   1d8e8:	ldr	w0, [x1, #4]
   1d8ec:	cbz	w0, 1d908 <__sanitizer_set_report_fd@@Base+0x5a88>
   1d8f0:	ldr	w2, [x1]
   1d8f4:	cmp	w2, w3
   1d8f8:	b.ne	1d8e4 <__sanitizer_set_report_fd@@Base+0x5a64>  // b.any
   1d8fc:	ldr	x0, [x1, #8]
   1d900:	ubfx	w0, w0, #6, #1
   1d904:	add	w0, w0, #0x1
   1d908:	ret
   1d90c:	nop
   1d910:	ldr	x0, [x0]
   1d914:	ldr	w1, [x0]
   1d918:	cmp	w1, #0xb
   1d91c:	b.eq	1d928 <__sanitizer_set_report_fd@@Base+0x5aa8>  // b.none
   1d920:	mov	w0, #0x0                   	// #0
   1d924:	ret
   1d928:	ldr	w0, [x0, #8]
   1d92c:	cmp	w0, #0x80
   1d930:	cset	w0, ne  // ne = any
   1d934:	ret
   1d938:	ret
   1d93c:	nop
   1d940:	ldr	x1, [x0, #8]
   1d944:	ldr	x2, [x1, #416]
   1d948:	ldp	x3, x1, [x1, #432]
   1d94c:	stp	x1, x3, [x0, #24]
   1d950:	str	x2, [x0, #40]
   1d954:	ret
   1d958:	ret
   1d95c:	nop
   1d960:	ret
   1d964:	nop
   1d968:	ret
   1d96c:	nop
   1d970:	ret
   1d974:	nop
   1d978:	ret
   1d97c:	nop
   1d980:	tbnz	w1, #3, 1d988 <__sanitizer_set_report_fd@@Base+0x5b08>
   1d984:	ret
   1d988:	mov	x2, x0
   1d98c:	adrp	x1, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1d990:	add	x0, x1, #0xa48
   1d994:	mov	x1, x2
   1d998:	str	x30, [sp, #-16]!
   1d99c:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   1d9a0:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   1d9a4:	nop
   1d9a8:	str	x30, [sp, #-16]!
   1d9ac:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1d9b0:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1d9b4:	add	x2, x2, #0xb60
   1d9b8:	add	x0, x0, #0x750
   1d9bc:	mov	x4, #0x0                   	// #0
   1d9c0:	mov	x3, #0x0                   	// #0
   1d9c4:	mov	w1, #0x83a                 	// #2106
   1d9c8:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   1d9cc:	nop
   1d9d0:	sub	x5, x1, #0x1
   1d9d4:	mov	x3, x1
   1d9d8:	cmp	x5, #0xff
   1d9dc:	mov	x4, x0
   1d9e0:	and	w2, w2, #0xff
   1d9e4:	ccmp	x0, #0x0, #0x4, ls  // ls = plast
   1d9e8:	b.ne	1d9f4 <__sanitizer_set_report_fd@@Base+0x5b74>  // b.any
   1d9ec:	mov	w0, #0x0                   	// #0
   1d9f0:	ret
   1d9f4:	adrp	x5, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   1d9f8:	add	x5, x5, #0x6c8
   1d9fc:	ldrb	w6, [x5, #24]
   1da00:	tst	w6, #0xff
   1da04:	b.ne	1da2c <__sanitizer_set_report_fd@@Base+0x5bac>  // b.any
   1da08:	eor	w2, w2, #0x1
   1da0c:	mov	x8, #0x116                 	// #278
   1da10:	and	x2, x2, #0xff
   1da14:	svc	#0x0
   1da18:	cmn	x0, #0x1, lsl #12
   1da1c:	b.hi	1da80 <__sanitizer_set_report_fd@@Base+0x5c00>  // b.pmore
   1da20:	cmp	x1, x0
   1da24:	mov	w0, #0x1                   	// #1
   1da28:	b.eq	1d9f0 <__sanitizer_set_report_fd@@Base+0x5b70>  // b.none
   1da2c:	adrp	x1, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1da30:	mov	x8, #0x38                  	// #56
   1da34:	add	x1, x1, #0xba0
   1da38:	mov	x0, #0xffffffffffffff9c    	// #-100
   1da3c:	mov	x2, #0x0                   	// #0
   1da40:	svc	#0x0
   1da44:	cmn	x0, #0x1, lsl #12
   1da48:	b.hi	1d9ec <__sanitizer_set_report_fd@@Base+0x5b6c>  // b.pmore
   1da4c:	sxtw	x5, w0
   1da50:	mov	x0, x5
   1da54:	mov	x1, x4
   1da58:	mov	x2, x3
   1da5c:	mov	x8, #0x3f                  	// #63
   1da60:	svc	#0x0
   1da64:	cmn	x0, #0x1, lsl #12
   1da68:	b.hi	1da94 <__sanitizer_set_report_fd@@Base+0x5c14>  // b.pmore
   1da6c:	mov	x0, x5
   1da70:	mov	x8, #0x39                  	// #57
   1da74:	svc	#0x0
   1da78:	mov	w0, #0x1                   	// #1
   1da7c:	ret
   1da80:	cmn	w0, #0x26
   1da84:	b.ne	1da2c <__sanitizer_set_report_fd@@Base+0x5bac>  // b.any
   1da88:	mov	w0, #0x1                   	// #1
   1da8c:	strb	w0, [x5, #24]
   1da90:	b	1da2c <__sanitizer_set_report_fd@@Base+0x5bac>
   1da94:	cmn	w0, #0x4
   1da98:	b.eq	1da50 <__sanitizer_set_report_fd@@Base+0x5bd0>  // b.none
   1da9c:	mov	w0, #0x0                   	// #0
   1daa0:	b	1d9f0 <__sanitizer_set_report_fd@@Base+0x5b70>
   1daa4:	nop
   1daa8:	cmp	w0, #0x2
   1daac:	b.eq	1dac0 <__sanitizer_set_report_fd@@Base+0x5c40>  // b.none
   1dab0:	cmp	w0, #0xa
   1dab4:	cset	x0, eq  // eq = none
   1dab8:	lsl	x0, x0, #4
   1dabc:	ret
   1dac0:	mov	x0, #0x4                   	// #4
   1dac4:	ret
   1dac8:	b	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   1dacc:	nop
   1dad0:	cmp	x0, #0x0
   1dad4:	ccmp	x1, #0x0, #0x4, ne  // ne = any
   1dad8:	b.ne	1dae0 <__sanitizer_set_report_fd@@Base+0x5c60>  // b.any
   1dadc:	ret
   1dae0:	stp	x19, x20, [sp, #-32]!
   1dae4:	mov	x19, x1
   1dae8:	mov	x20, x0
   1daec:	str	x30, [sp, #16]
   1daf0:	bl	1c1b8 <__sanitizer_set_report_fd@@Base+0x4338>
   1daf4:	mov	x1, #0x0                   	// #0
   1daf8:	bl	1c178 <__sanitizer_set_report_fd@@Base+0x42f8>
   1dafc:	tst	w0, #0xff
   1db00:	b.ne	1db14 <__sanitizer_set_report_fd@@Base+0x5c94>  // b.any
   1db04:	mov	x0, x19
   1db08:	ldr	x30, [sp, #16]
   1db0c:	ldp	x19, x20, [sp], #32
   1db10:	b	14cb8 <_ZdaPvRKSt9nothrow_t@@Base+0x2f38>
   1db14:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   1db18:	mov	x4, x20
   1db1c:	mov	x3, x19
   1db20:	mov	x2, x19
   1db24:	ldr	x1, [x1, #4024]
   1db28:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1db2c:	add	x0, x0, #0xbf0
   1db30:	ldr	x1, [x1]
   1db34:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   1db38:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   1db3c:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1db40:	add	x2, x2, #0x8e8
   1db44:	add	x0, x0, #0xc30
   1db48:	mov	x4, #0x0                   	// #0
   1db4c:	mov	x3, #0x0                   	// #0
   1db50:	mov	w1, #0x3d                  	// #61
   1db54:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   1db58:	str	x30, [sp, #-16]!
   1db5c:	mov	w2, #0x0                   	// #0
   1db60:	bl	1c1c8 <__sanitizer_set_report_fd@@Base+0x4348>
   1db64:	cmp	w0, #0x0
   1db68:	cset	w0, eq  // eq = none
   1db6c:	ldr	x30, [sp], #16
   1db70:	ret
   1db74:	nop
   1db78:	str	x30, [sp, #-16]!
   1db7c:	mov	w2, #0x1                   	// #1
   1db80:	bl	1c1c8 <__sanitizer_set_report_fd@@Base+0x4348>
   1db84:	cmp	w0, #0x0
   1db88:	cset	w0, eq  // eq = none
   1db8c:	ldr	x30, [sp], #16
   1db90:	ret
   1db94:	nop
   1db98:	ret
   1db9c:	nop
   1dba0:	adrp	x3, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   1dba4:	stp	x19, x20, [sp, #-64]!
   1dba8:	mov	w19, w1
   1dbac:	ldr	x3, [x3, #4056]
   1dbb0:	stp	x21, x22, [sp, #16]
   1dbb4:	mov	x20, x2
   1dbb8:	mov	x21, x0
   1dbbc:	ldrb	w1, [x3, #243]
   1dbc0:	str	x30, [sp, #32]
   1dbc4:	cbnz	w1, 1dc8c <__sanitizer_set_report_fd@@Base+0x5e0c>
   1dbc8:	cmp	w19, #0x2
   1dbcc:	b.ls	1dc18 <__sanitizer_set_report_fd@@Base+0x5d98>  // b.plast
   1dbd0:	mov	w2, #0x1b0                 	// #432
   1dbd4:	mov	w1, w22
   1dbd8:	mov	x0, x21
   1dbdc:	bl	1c200 <__sanitizer_set_report_fd@@Base+0x4380>
   1dbe0:	mov	x1, x20
   1dbe4:	mov	w19, w0
   1dbe8:	mov	x20, x0
   1dbec:	sxtw	x0, w0
   1dbf0:	bl	1c178 <__sanitizer_set_report_fd@@Base+0x42f8>
   1dbf4:	tst	w0, #0xff
   1dbf8:	b.ne	1dca0 <__sanitizer_set_report_fd@@Base+0x5e20>  // b.any
   1dbfc:	cmp	w20, #0x2
   1dc00:	b.le	1dc28 <__sanitizer_set_report_fd@@Base+0x5da8>
   1dc04:	mov	w0, w19
   1dc08:	ldp	x21, x22, [sp, #16]
   1dc0c:	ldr	x30, [sp, #32]
   1dc10:	ldp	x19, x20, [sp], #64
   1dc14:	ret
   1dc18:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1dc1c:	add	x0, x0, #0xed8
   1dc20:	ldr	w22, [x0, w19, uxtw #2]
   1dc24:	b	1dbd0 <__sanitizer_set_report_fd@@Base+0x5d50>
   1dc28:	add	x20, sp, #0x38
   1dc2c:	mov	w21, #0x1                   	// #1
   1dc30:	mov	x0, x20
   1dc34:	mov	x2, #0x3                   	// #3
   1dc38:	mov	w1, #0x0                   	// #0
   1dc3c:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   1dc40:	mov	w0, w19
   1dc44:	strb	w21, [x20, w19, sxtw]
   1dc48:	bl	1c310 <__sanitizer_set_report_fd@@Base+0x4490>
   1dc4c:	mov	x19, x0
   1dc50:	cmp	w0, #0x2
   1dc54:	b.le	1dc40 <__sanitizer_set_report_fd@@Base+0x5dc0>
   1dc58:	ldrb	w0, [sp, #56]
   1dc5c:	cbnz	w0, 1dcc4 <__sanitizer_set_report_fd@@Base+0x5e44>
   1dc60:	ldrb	w0, [sp, #57]
   1dc64:	cbnz	w0, 1dcb8 <__sanitizer_set_report_fd@@Base+0x5e38>
   1dc68:	ldrb	w0, [sp, #58]
   1dc6c:	cbz	w0, 1dc04 <__sanitizer_set_report_fd@@Base+0x5d84>
   1dc70:	mov	w0, #0x2                   	// #2
   1dc74:	bl	1c1d8 <__sanitizer_set_report_fd@@Base+0x4358>
   1dc78:	mov	w0, w19
   1dc7c:	ldp	x21, x22, [sp, #16]
   1dc80:	ldr	x30, [sp, #32]
   1dc84:	ldp	x19, x20, [sp], #64
   1dc88:	ret
   1dc8c:	adrp	x1, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1dc90:	mov	x2, #0x6                   	// #6
   1dc94:	add	x1, x1, #0xc88
   1dc98:	bl	1a5a8 <__sanitizer_set_report_fd@@Base+0x2728>
   1dc9c:	cbnz	w0, 1dbc8 <__sanitizer_set_report_fd@@Base+0x5d48>
   1dca0:	mov	w19, #0xffffffff            	// #-1
   1dca4:	mov	w0, w19
   1dca8:	ldp	x21, x22, [sp, #16]
   1dcac:	ldr	x30, [sp, #32]
   1dcb0:	ldp	x19, x20, [sp], #64
   1dcb4:	ret
   1dcb8:	mov	w0, #0x1                   	// #1
   1dcbc:	bl	1c1d8 <__sanitizer_set_report_fd@@Base+0x4358>
   1dcc0:	b	1dc68 <__sanitizer_set_report_fd@@Base+0x5de8>
   1dcc4:	mov	w0, #0x0                   	// #0
   1dcc8:	bl	1c1d8 <__sanitizer_set_report_fd@@Base+0x4358>
   1dccc:	b	1dc60 <__sanitizer_set_report_fd@@Base+0x5de0>
   1dcd0:	b	1c1d8 <__sanitizer_set_report_fd@@Base+0x4358>
   1dcd4:	nop
   1dcd8:	stp	x19, x20, [sp, #-32]!
   1dcdc:	mov	x20, x4
   1dce0:	mov	x19, x3
   1dce4:	str	x30, [sp, #16]
   1dce8:	bl	1c220 <__sanitizer_set_report_fd@@Base+0x43a0>
   1dcec:	mov	x1, x20
   1dcf0:	mov	x20, x0
   1dcf4:	bl	1c178 <__sanitizer_set_report_fd@@Base+0x42f8>
   1dcf8:	tst	w0, #0xff
   1dcfc:	b.ne	1dd18 <__sanitizer_set_report_fd@@Base+0x5e98>  // b.any
   1dd00:	mov	w0, #0x1                   	// #1
   1dd04:	cbz	x19, 1dd0c <__sanitizer_set_report_fd@@Base+0x5e8c>
   1dd08:	str	x20, [x19]
   1dd0c:	ldr	x30, [sp, #16]
   1dd10:	ldp	x19, x20, [sp], #32
   1dd14:	ret
   1dd18:	mov	w0, #0x0                   	// #0
   1dd1c:	ldr	x30, [sp, #16]
   1dd20:	ldp	x19, x20, [sp], #32
   1dd24:	ret
   1dd28:	stp	x19, x20, [sp, #-32]!
   1dd2c:	mov	x20, x4
   1dd30:	mov	x19, x3
   1dd34:	str	x30, [sp, #16]
   1dd38:	bl	1c248 <__sanitizer_set_report_fd@@Base+0x43c8>
   1dd3c:	mov	x1, x20
   1dd40:	mov	x20, x0
   1dd44:	bl	1c178 <__sanitizer_set_report_fd@@Base+0x42f8>
   1dd48:	tst	w0, #0xff
   1dd4c:	b.ne	1dd68 <__sanitizer_set_report_fd@@Base+0x5ee8>  // b.any
   1dd50:	mov	w0, #0x1                   	// #1
   1dd54:	cbz	x19, 1dd5c <__sanitizer_set_report_fd@@Base+0x5edc>
   1dd58:	str	x20, [x19]
   1dd5c:	ldr	x30, [sp, #16]
   1dd60:	ldp	x19, x20, [sp], #32
   1dd64:	ret
   1dd68:	mov	w0, #0x0                   	// #0
   1dd6c:	ldr	x30, [sp, #16]
   1dd70:	ldp	x19, x20, [sp], #32
   1dd74:	ret
   1dd78:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   1dd7c:	stp	x19, x20, [sp, #-64]!
   1dd80:	mov	x19, x0
   1dd84:	ldr	x2, [x2, #4056]
   1dd88:	stp	x21, x22, [sp, #16]
   1dd8c:	mov	x21, x1
   1dd90:	ldrb	w1, [x2, #243]
   1dd94:	str	x30, [sp, #32]
   1dd98:	cbnz	w1, 1deb4 <__sanitizer_set_report_fd@@Base+0x6034>
   1dd9c:	mov	w2, #0x1b0                 	// #432
   1dda0:	mov	x0, x19
   1dda4:	mov	w1, #0x0                   	// #0
   1dda8:	bl	1c200 <__sanitizer_set_report_fd@@Base+0x4380>
   1ddac:	mov	x1, #0x0                   	// #0
   1ddb0:	mov	x20, x0
   1ddb4:	mov	w19, w0
   1ddb8:	sxtw	x0, w0
   1ddbc:	bl	1c178 <__sanitizer_set_report_fd@@Base+0x42f8>
   1ddc0:	tst	w0, #0xff
   1ddc4:	b.ne	1dec8 <__sanitizer_set_report_fd@@Base+0x6048>  // b.any
   1ddc8:	cmp	w20, #0x2
   1ddcc:	b.le	1de60 <__sanitizer_set_report_fd@@Base+0x5fe0>
   1ddd0:	mov	w0, w19
   1ddd4:	bl	1c2e8 <__sanitizer_set_report_fd@@Base+0x4468>
   1ddd8:	mov	x20, x0
   1dddc:	cmn	x0, #0x1
   1dde0:	b.eq	1df00 <__sanitizer_set_report_fd@@Base+0x6080>  // b.none
   1dde4:	cbz	x20, 1df20 <__sanitizer_set_report_fd@@Base+0x60a0>
   1dde8:	adrp	x22, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   1ddec:	ldr	x22, [x22, #4016]
   1ddf0:	ldr	x0, [x22]
   1ddf4:	cbz	x0, 1de54 <__sanitizer_set_report_fd@@Base+0x5fd4>
   1ddf8:	sub	x1, x0, #0x1
   1ddfc:	tst	x0, x1
   1de00:	b.ne	1df40 <__sanitizer_set_report_fd@@Base+0x60c0>  // b.any
   1de04:	add	x20, x20, x1
   1de08:	neg	x1, x0
   1de0c:	and	x1, x20, x1
   1de10:	mov	w4, w19
   1de14:	str	x1, [x21]
   1de18:	mov	x5, #0x0                   	// #0
   1de1c:	mov	w3, #0x2                   	// #2
   1de20:	mov	w2, #0x1                   	// #1
   1de24:	mov	x0, #0x0                   	// #0
   1de28:	bl	1c1a0 <__sanitizer_set_report_fd@@Base+0x4320>
   1de2c:	mov	x1, #0x0                   	// #0
   1de30:	mov	x19, x0
   1de34:	bl	1c178 <__sanitizer_set_report_fd@@Base+0x42f8>
   1de38:	tst	w0, #0xff
   1de3c:	csel	x19, x19, xzr, eq  // eq = none
   1de40:	mov	x0, x19
   1de44:	ldp	x21, x22, [sp, #16]
   1de48:	ldr	x30, [sp, #32]
   1de4c:	ldp	x19, x20, [sp], #64
   1de50:	ret
   1de54:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   1de58:	str	x0, [x22]
   1de5c:	b	1ddf8 <__sanitizer_set_report_fd@@Base+0x5f78>
   1de60:	add	x20, sp, #0x38
   1de64:	mov	w22, #0x1                   	// #1
   1de68:	mov	x0, x20
   1de6c:	mov	x2, #0x3                   	// #3
   1de70:	mov	w1, #0x0                   	// #0
   1de74:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   1de78:	mov	w0, w19
   1de7c:	strb	w22, [x20, w19, sxtw]
   1de80:	bl	1c310 <__sanitizer_set_report_fd@@Base+0x4490>
   1de84:	mov	x19, x0
   1de88:	cmp	w0, #0x2
   1de8c:	b.le	1de78 <__sanitizer_set_report_fd@@Base+0x5ff8>
   1de90:	ldrb	w0, [sp, #56]
   1de94:	cbnz	w0, 1def4 <__sanitizer_set_report_fd@@Base+0x6074>
   1de98:	ldrb	w0, [sp, #57]
   1de9c:	cbnz	w0, 1dee8 <__sanitizer_set_report_fd@@Base+0x6068>
   1dea0:	ldrb	w0, [sp, #58]
   1dea4:	cbz	w0, 1ddd0 <__sanitizer_set_report_fd@@Base+0x5f50>
   1dea8:	mov	w0, #0x2                   	// #2
   1deac:	bl	1c1d8 <__sanitizer_set_report_fd@@Base+0x4358>
   1deb0:	b	1ddd0 <__sanitizer_set_report_fd@@Base+0x5f50>
   1deb4:	adrp	x1, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1deb8:	mov	x2, #0x6                   	// #6
   1debc:	add	x1, x1, #0xc88
   1dec0:	bl	1a5a8 <__sanitizer_set_report_fd@@Base+0x2728>
   1dec4:	cbnz	w0, 1dd9c <__sanitizer_set_report_fd@@Base+0x5f1c>
   1dec8:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1decc:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1ded0:	add	x2, x2, #0xc90
   1ded4:	add	x0, x0, #0xc30
   1ded8:	mov	x4, #0x0                   	// #0
   1dedc:	mov	x3, #0x0                   	// #0
   1dee0:	mov	w1, #0xc2                  	// #194
   1dee4:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   1dee8:	mov	w0, #0x1                   	// #1
   1deec:	bl	1c1d8 <__sanitizer_set_report_fd@@Base+0x4358>
   1def0:	b	1dea0 <__sanitizer_set_report_fd@@Base+0x6020>
   1def4:	mov	w0, #0x0                   	// #0
   1def8:	bl	1c1d8 <__sanitizer_set_report_fd@@Base+0x4358>
   1defc:	b	1de98 <__sanitizer_set_report_fd@@Base+0x6018>
   1df00:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1df04:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1df08:	add	x2, x2, #0xcb0
   1df0c:	add	x0, x0, #0xc30
   1df10:	mov	x4, x20
   1df14:	mov	x3, x20
   1df18:	mov	w1, #0xc4                  	// #196
   1df1c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   1df20:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1df24:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1df28:	add	x2, x2, #0xcd0
   1df2c:	add	x0, x0, #0xc30
   1df30:	mov	x4, #0x0                   	// #0
   1df34:	mov	x3, #0x0                   	// #0
   1df38:	mov	w1, #0xc5                  	// #197
   1df3c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   1df40:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   1df44:	add	x0, x0, #0xbf8
   1df48:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   1df4c:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   1df50:	stp	x19, x20, [sp, #-64]!
   1df54:	cmp	x0, #0x0
   1df58:	mov	x5, x3
   1df5c:	mov	w4, w2
   1df60:	stp	x21, x22, [sp, #16]
   1df64:	mov	x21, x3
   1df68:	mov	w3, #0x11                  	// #17
   1df6c:	csinc	w3, w3, wzr, ne  // ne = any
   1df70:	mov	w20, w2
   1df74:	mov	w2, #0x3                   	// #3
   1df78:	mov	x22, x1
   1df7c:	str	x30, [sp, #32]
   1df80:	bl	1c1a0 <__sanitizer_set_report_fd@@Base+0x4320>
   1df84:	mov	x19, x0
   1df88:	add	x1, sp, #0x3c
   1df8c:	str	wzr, [sp, #60]
   1df90:	bl	1c178 <__sanitizer_set_report_fd@@Base+0x42f8>
   1df94:	tst	w0, #0xff
   1df98:	b.ne	1dfb0 <__sanitizer_set_report_fd@@Base+0x6130>  // b.any
   1df9c:	mov	x0, x19
   1dfa0:	ldp	x21, x22, [sp, #16]
   1dfa4:	ldr	x30, [sp, #32]
   1dfa8:	ldp	x19, x20, [sp], #64
   1dfac:	ret
   1dfb0:	ldr	w5, [sp, #60]
   1dfb4:	mov	x4, x19
   1dfb8:	mov	x3, x22
   1dfbc:	mov	x2, x21
   1dfc0:	mov	w1, w20
   1dfc4:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1dfc8:	add	x0, x0, #0xce8
   1dfcc:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   1dfd0:	mov	x0, #0x0                   	// #0
   1dfd4:	b	1dfa0 <__sanitizer_set_report_fd@@Base+0x6120>
   1dfd8:	stp	x19, x20, [sp, #-160]!
   1dfdc:	add	x20, sp, #0x30
   1dfe0:	stp	x21, x22, [sp, #16]
   1dfe4:	mov	x22, x1
   1dfe8:	mov	w1, #0x1                   	// #1
   1dfec:	mov	x21, x0
   1dff0:	mov	x0, x20
   1dff4:	str	x30, [sp, #40]
   1dff8:	bl	1ffa0 <__sanitizer_on_print@@Base+0x680>
   1dffc:	mov	x0, x20
   1e000:	bl	200c0 <__sanitizer_on_print@@Base+0x7a0>
   1e004:	ands	w19, w0, #0xff
   1e008:	b.ne	1e070 <__sanitizer_set_report_fd@@Base+0x61f0>  // b.any
   1e00c:	str	x23, [sp, #32]
   1e010:	cmp	x21, x22
   1e014:	stp	xzr, xzr, [sp, #104]
   1e018:	add	x23, sp, #0x50
   1e01c:	str	xzr, [sp, #152]
   1e020:	b.hi	1e08c <__sanitizer_set_report_fd@@Base+0x620c>  // b.pmore
   1e024:	mov	x1, x23
   1e028:	mov	x0, x20
   1e02c:	bl	20810 <__sanitizer_on_print@@Base+0xef0>
   1e030:	tst	w0, #0xff
   1e034:	b.eq	1e120 <__sanitizer_set_report_fd@@Base+0x62a0>  // b.none
   1e038:	ldp	x3, x2, [sp, #80]
   1e03c:	cmp	x3, x2
   1e040:	b.eq	1e024 <__sanitizer_set_report_fd@@Base+0x61a4>  // b.none
   1e044:	cbz	x2, 1e0dc <__sanitizer_set_report_fd@@Base+0x625c>
   1e048:	sub	x2, x2, #0x1
   1e04c:	cmp	x3, x2
   1e050:	b.hi	1e0fc <__sanitizer_set_report_fd@@Base+0x627c>  // b.pmore
   1e054:	cmp	x22, x3
   1e058:	cset	w19, cc  // cc = lo, ul, last
   1e05c:	cmp	x21, x2
   1e060:	cset	w0, hi  // hi = pmore
   1e064:	orr	w19, w19, w0
   1e068:	cbnz	w19, 1e024 <__sanitizer_set_report_fd@@Base+0x61a4>
   1e06c:	ldr	x23, [sp, #32]
   1e070:	mov	x0, x20
   1e074:	bl	200d0 <__sanitizer_on_print@@Base+0x7b0>
   1e078:	mov	w0, w19
   1e07c:	ldp	x21, x22, [sp, #16]
   1e080:	ldr	x30, [sp, #40]
   1e084:	ldp	x19, x20, [sp], #160
   1e088:	ret
   1e08c:	mov	x1, x23
   1e090:	mov	x0, x20
   1e094:	bl	20810 <__sanitizer_on_print@@Base+0xef0>
   1e098:	tst	w0, #0xff
   1e09c:	b.eq	1e120 <__sanitizer_set_report_fd@@Base+0x62a0>  // b.none
   1e0a0:	ldp	x3, x2, [sp, #80]
   1e0a4:	cmp	x3, x2
   1e0a8:	b.eq	1e08c <__sanitizer_set_report_fd@@Base+0x620c>  // b.none
   1e0ac:	cbz	x2, 1e0dc <__sanitizer_set_report_fd@@Base+0x625c>
   1e0b0:	sub	x2, x2, #0x1
   1e0b4:	cmp	x3, x2
   1e0b8:	b.hi	1e0fc <__sanitizer_set_report_fd@@Base+0x627c>  // b.pmore
   1e0bc:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1e0c0:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1e0c4:	add	x2, x2, #0xd68
   1e0c8:	add	x0, x0, #0xc30
   1e0cc:	mov	x4, #0x0                   	// #0
   1e0d0:	mov	x3, #0x0                   	// #0
   1e0d4:	mov	w1, #0xdb                  	// #219
   1e0d8:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   1e0dc:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1e0e0:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1e0e4:	add	x2, x2, #0xd28
   1e0e8:	add	x0, x0, #0xc30
   1e0ec:	mov	x4, #0x0                   	// #0
   1e0f0:	mov	x3, #0x0                   	// #0
   1e0f4:	mov	w1, #0xea                  	// #234
   1e0f8:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   1e0fc:	cmp	x2, x3
   1e100:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1e104:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1e108:	cset	x3, cs  // cs = hs, nlast
   1e10c:	add	x2, x2, #0xd48
   1e110:	add	x0, x0, #0xc30
   1e114:	mov	x4, #0x0                   	// #0
   1e118:	mov	w1, #0xda                  	// #218
   1e11c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   1e120:	mov	w19, #0x1                   	// #1
   1e124:	ldr	x23, [sp, #32]
   1e128:	b	1e070 <__sanitizer_set_report_fd@@Base+0x61f0>
   1e12c:	nop
   1e130:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1e134:	add	x0, x0, #0xd88
   1e138:	b	1c4e0 <__sanitizer_set_report_fd@@Base+0x4660>
   1e13c:	nop
   1e140:	and	w0, w0, #0xff
   1e144:	cmp	w0, #0x2f
   1e148:	cset	w0, eq  // eq = none
   1e14c:	ret
   1e150:	cbz	x0, 1e164 <__sanitizer_set_report_fd@@Base+0x62e4>
   1e154:	ldrb	w0, [x0]
   1e158:	cmp	w0, #0x2f
   1e15c:	cset	w0, eq  // eq = none
   1e160:	ret
   1e164:	mov	w0, #0x0                   	// #0
   1e168:	ret
   1e16c:	nop
   1e170:	stp	x19, x20, [sp, #-48]!
   1e174:	mov	x19, x0
   1e178:	stp	x21, x22, [sp, #16]
   1e17c:	mov	x22, x2
   1e180:	mov	x21, x1
   1e184:	mov	w1, #0x1                   	// #1
   1e188:	ldr	x20, [x0]
   1e18c:	str	x30, [sp, #32]
   1e190:	ldxrb	w0, [x20]
   1e194:	stxrb	w2, w1, [x20]
   1e198:	cbnz	w2, 1e190 <__sanitizer_set_report_fd@@Base+0x6310>
   1e19c:	dmb	ish
   1e1a0:	tst	w0, #0xff
   1e1a4:	b.eq	1e1b0 <__sanitizer_set_report_fd@@Base+0x6330>  // b.none
   1e1a8:	mov	x0, x20
   1e1ac:	bl	85d8 <__sanitizer_print_stack_trace@@Base+0x300>
   1e1b0:	mov	x0, x19
   1e1b4:	bl	172b8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1f20>
   1e1b8:	ldr	w0, [x19, #8]
   1e1bc:	mov	x2, x22
   1e1c0:	mov	x1, x21
   1e1c4:	bl	1c248 <__sanitizer_set_report_fd@@Base+0x43c8>
   1e1c8:	dmb	ish
   1e1cc:	strb	wzr, [x20]
   1e1d0:	ldp	x21, x22, [sp, #16]
   1e1d4:	ldr	x30, [sp, #32]
   1e1d8:	ldp	x19, x20, [sp], #48
   1e1dc:	ret
   1e1e0:	ldr	x0, [x0]
   1e1e4:	ldr	x0, [x0, #16]
   1e1e8:	ret
   1e1ec:	nop
   1e1f0:	ldr	x0, [x0]
   1e1f4:	ldr	w0, [x0]
   1e1f8:	cmp	w0, #0xb
   1e1fc:	cset	w0, eq  // eq = none
   1e200:	ret
   1e204:	nop
   1e208:	ldr	x0, [x0]
   1e20c:	ldr	w0, [x0]
   1e210:	ret
   1e214:	nop
   1e218:	ldr	x0, [x0]
   1e21c:	ldr	w1, [x0]
   1e220:	cmp	w1, #0x7
   1e224:	b.eq	1e298 <__sanitizer_set_report_fd@@Base+0x6418>  // b.none
   1e228:	b.gt	1e264 <__sanitizer_set_report_fd@@Base+0x63e4>
   1e22c:	cmp	w1, #0x5
   1e230:	b.eq	1e28c <__sanitizer_set_report_fd@@Base+0x640c>  // b.none
   1e234:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1e238:	cmp	w1, #0x6
   1e23c:	add	x0, x0, #0xda0
   1e240:	b.ne	1e248 <__sanitizer_set_report_fd@@Base+0x63c8>  // b.any
   1e244:	ret
   1e248:	cmp	w1, #0x4
   1e24c:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1e250:	adrp	x1, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1e254:	add	x0, x0, #0xd90
   1e258:	add	x1, x1, #0xdc0
   1e25c:	csel	x0, x0, x1, ne  // ne = any
   1e260:	ret
   1e264:	cmp	w1, #0x8
   1e268:	b.eq	1e280 <__sanitizer_set_report_fd@@Base+0x6400>  // b.none
   1e26c:	cmp	w1, #0xb
   1e270:	b.ne	1e2a4 <__sanitizer_set_report_fd@@Base+0x6424>  // b.any
   1e274:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1e278:	add	x0, x0, #0xdc8
   1e27c:	ret
   1e280:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1e284:	add	x0, x0, #0xdb0
   1e288:	ret
   1e28c:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1e290:	add	x0, x0, #0xda8
   1e294:	ret
   1e298:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1e29c:	add	x0, x0, #0xdb8
   1e2a0:	ret
   1e2a4:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1e2a8:	add	x0, x0, #0xd90
   1e2ac:	ret
   1e2b0:	stp	x19, x20, [sp, #-48]!
   1e2b4:	cmp	w0, #0x2
   1e2b8:	mov	w19, w0
   1e2bc:	str	x30, [sp, #24]
   1e2c0:	b.le	1e2d4 <__sanitizer_set_report_fd@@Base+0x6454>
   1e2c4:	mov	w0, w19
   1e2c8:	ldr	x30, [sp, #24]
   1e2cc:	ldp	x19, x20, [sp], #48
   1e2d0:	ret
   1e2d4:	add	x20, sp, #0x28
   1e2d8:	mov	x2, #0x3                   	// #3
   1e2dc:	mov	x0, x20
   1e2e0:	mov	w1, #0x0                   	// #0
   1e2e4:	str	x21, [sp, #16]
   1e2e8:	mov	w21, #0x1                   	// #1
   1e2ec:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   1e2f0:	mov	w0, w19
   1e2f4:	strb	w21, [x20, w19, sxtw]
   1e2f8:	bl	1c310 <__sanitizer_set_report_fd@@Base+0x4490>
   1e2fc:	mov	x19, x0
   1e300:	cmp	w0, #0x2
   1e304:	b.le	1e2f0 <__sanitizer_set_report_fd@@Base+0x6470>
   1e308:	ldrb	w0, [sp, #40]
   1e30c:	cbnz	w0, 1e334 <__sanitizer_set_report_fd@@Base+0x64b4>
   1e310:	ldrb	w0, [sp, #41]
   1e314:	cbnz	w0, 1e344 <__sanitizer_set_report_fd@@Base+0x64c4>
   1e318:	ldrb	w0, [sp, #42]
   1e31c:	cbnz	w0, 1e354 <__sanitizer_set_report_fd@@Base+0x64d4>
   1e320:	mov	w0, w19
   1e324:	ldr	x21, [sp, #16]
   1e328:	ldr	x30, [sp, #24]
   1e32c:	ldp	x19, x20, [sp], #48
   1e330:	ret
   1e334:	mov	w0, #0x0                   	// #0
   1e338:	bl	1c1d8 <__sanitizer_set_report_fd@@Base+0x4358>
   1e33c:	ldrb	w0, [sp, #41]
   1e340:	cbz	w0, 1e318 <__sanitizer_set_report_fd@@Base+0x6498>
   1e344:	mov	w0, #0x1                   	// #1
   1e348:	bl	1c1d8 <__sanitizer_set_report_fd@@Base+0x4358>
   1e34c:	ldrb	w0, [sp, #42]
   1e350:	cbz	w0, 1e320 <__sanitizer_set_report_fd@@Base+0x64a0>
   1e354:	mov	w0, #0x2                   	// #2
   1e358:	bl	1c1d8 <__sanitizer_set_report_fd@@Base+0x4358>
   1e35c:	mov	w0, w19
   1e360:	ldr	x21, [sp, #16]
   1e364:	ldr	x30, [sp, #24]
   1e368:	ldp	x19, x20, [sp], #48
   1e36c:	ret
   1e370:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   1e374:	ldr	x1, [x1, #4056]
   1e378:	ldrb	w1, [x1, #243]
   1e37c:	cbnz	w1, 1e388 <__sanitizer_set_report_fd@@Base+0x6508>
   1e380:	mov	w0, w1
   1e384:	ret
   1e388:	str	x30, [sp, #-16]!
   1e38c:	mov	x2, #0x6                   	// #6
   1e390:	adrp	x1, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1e394:	add	x1, x1, #0xc88
   1e398:	bl	1a5a8 <__sanitizer_set_report_fd@@Base+0x2728>
   1e39c:	cmp	w0, #0x0
   1e3a0:	cset	w1, eq  // eq = none
   1e3a4:	mov	w0, w1
   1e3a8:	ldr	x30, [sp], #16
   1e3ac:	ret
   1e3b0:	adrp	x3, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   1e3b4:	stp	x19, x20, [sp, #-272]!
   1e3b8:	cmp	x0, #0x0
   1e3bc:	ldr	x4, [x3, #4056]
   1e3c0:	stp	x21, x22, [sp, #16]
   1e3c4:	mov	x21, x1
   1e3c8:	cset	w3, eq  // eq = none
   1e3cc:	ldrb	w1, [x4, #223]
   1e3d0:	str	x30, [sp, #48]
   1e3d4:	eor	w1, w1, #0x1
   1e3d8:	orr	w3, w3, w1
   1e3dc:	tst	w3, #0xff
   1e3e0:	b.ne	1e56c <__sanitizer_set_report_fd@@Base+0x66ec>  // b.any
   1e3e4:	mov	x19, x0
   1e3e8:	mov	x20, x2
   1e3ec:	bl	1a690 <__sanitizer_set_report_fd@@Base+0x2810>
   1e3f0:	cmp	x0, #0xbd
   1e3f4:	b.hi	1e508 <__sanitizer_set_report_fd@@Base+0x6688>  // b.pmore
   1e3f8:	bl	1c7f8 <__sanitizer_set_report_fd@@Base+0x4978>
   1e3fc:	add	x22, sp, #0x48
   1e400:	mov	x3, x0
   1e404:	mov	x4, x19
   1e408:	mov	x1, #0xc8                  	// #200
   1e40c:	mov	x0, x22
   1e410:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1e414:	add	x2, x2, #0xe08
   1e418:	bl	1f928 <__sanitizer_on_print@@Base+0x8>
   1e41c:	mov	w1, #0x242                 	// #578
   1e420:	mov	x0, x22
   1e424:	movk	w1, #0x8, lsl #16
   1e428:	mov	w2, #0x1c0                 	// #448
   1e42c:	bl	1c200 <__sanitizer_set_report_fd@@Base+0x4380>
   1e430:	mov	x19, x0
   1e434:	cmp	w0, #0x2
   1e438:	b.le	1e480 <__sanitizer_set_report_fd@@Base+0x6600>
   1e43c:	mov	x1, x21
   1e440:	mov	w0, w19
   1e444:	bl	1c270 <__sanitizer_set_report_fd@@Base+0x43f0>
   1e448:	sxtw	x4, w0
   1e44c:	cbnz	w0, 1e52c <__sanitizer_set_report_fd@@Base+0x66ac>
   1e450:	mov	x0, x22
   1e454:	bl	1c358 <__sanitizer_set_report_fd@@Base+0x44d8>
   1e458:	sxtw	x4, w0
   1e45c:	cbnz	w0, 1e54c <__sanitizer_set_report_fd@@Base+0x66cc>
   1e460:	ldr	w0, [x20]
   1e464:	and	w0, w0, #0xffffffdf
   1e468:	str	w0, [x20]
   1e46c:	mov	w0, w19
   1e470:	ldp	x21, x22, [sp, #16]
   1e474:	ldr	x30, [sp, #48]
   1e478:	ldp	x19, x20, [sp], #272
   1e47c:	ret
   1e480:	stp	x23, x24, [sp, #32]
   1e484:	add	x23, sp, #0x40
   1e488:	mov	x0, x23
   1e48c:	mov	w24, #0x1                   	// #1
   1e490:	mov	x2, #0x3                   	// #3
   1e494:	mov	w1, #0x0                   	// #0
   1e498:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   1e49c:	nop
   1e4a0:	mov	w0, w19
   1e4a4:	strb	w24, [x23, w19, sxtw]
   1e4a8:	bl	1c310 <__sanitizer_set_report_fd@@Base+0x4490>
   1e4ac:	mov	x19, x0
   1e4b0:	cmp	w0, #0x2
   1e4b4:	b.le	1e4a0 <__sanitizer_set_report_fd@@Base+0x6620>
   1e4b8:	ldrb	w0, [sp, #64]
   1e4bc:	cbnz	w0, 1e4d8 <__sanitizer_set_report_fd@@Base+0x6658>
   1e4c0:	ldrb	w0, [sp, #65]
   1e4c4:	cbnz	w0, 1e4e8 <__sanitizer_set_report_fd@@Base+0x6668>
   1e4c8:	ldrb	w0, [sp, #66]
   1e4cc:	cbnz	w0, 1e4f8 <__sanitizer_set_report_fd@@Base+0x6678>
   1e4d0:	ldp	x23, x24, [sp, #32]
   1e4d4:	b	1e43c <__sanitizer_set_report_fd@@Base+0x65bc>
   1e4d8:	mov	w0, #0x0                   	// #0
   1e4dc:	bl	1c1d8 <__sanitizer_set_report_fd@@Base+0x4358>
   1e4e0:	ldrb	w0, [sp, #65]
   1e4e4:	cbz	w0, 1e4c8 <__sanitizer_set_report_fd@@Base+0x6648>
   1e4e8:	mov	w0, #0x1                   	// #1
   1e4ec:	bl	1c1d8 <__sanitizer_set_report_fd@@Base+0x4358>
   1e4f0:	ldrb	w0, [sp, #66]
   1e4f4:	cbz	w0, 1e4d0 <__sanitizer_set_report_fd@@Base+0x6650>
   1e4f8:	mov	w0, #0x2                   	// #2
   1e4fc:	bl	1c1d8 <__sanitizer_set_report_fd@@Base+0x4358>
   1e500:	ldp	x23, x24, [sp, #32]
   1e504:	b	1e43c <__sanitizer_set_report_fd@@Base+0x65bc>
   1e508:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1e50c:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1e510:	add	x2, x2, #0xdd0
   1e514:	add	x0, x0, #0xc30
   1e518:	mov	x4, #0x0                   	// #0
   1e51c:	mov	x3, #0x0                   	// #0
   1e520:	mov	w1, #0x15b                 	// #347
   1e524:	stp	x23, x24, [sp, #32]
   1e528:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   1e52c:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1e530:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1e534:	add	x2, x2, #0xe20
   1e538:	add	x0, x0, #0xc30
   1e53c:	mov	x3, #0x0                   	// #0
   1e540:	mov	w1, #0x162                 	// #354
   1e544:	stp	x23, x24, [sp, #32]
   1e548:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   1e54c:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1e550:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1e554:	add	x2, x2, #0xe20
   1e558:	add	x0, x0, #0xc30
   1e55c:	mov	x3, #0x0                   	// #0
   1e560:	mov	w1, #0x164                 	// #356
   1e564:	stp	x23, x24, [sp, #32]
   1e568:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   1e56c:	mov	w19, #0xffffffff            	// #-1
   1e570:	b	1e46c <__sanitizer_set_report_fd@@Base+0x65ec>
   1e574:	nop
   1e578:	stp	x19, x20, [sp, #-64]!
   1e57c:	adrp	x20, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   1e580:	mov	x19, x0
   1e584:	ldr	x20, [x20, #4016]
   1e588:	stp	x21, x22, [sp, #16]
   1e58c:	and	w22, w2, #0xff
   1e590:	stp	x23, x30, [sp, #32]
   1e594:	mov	x23, x1
   1e598:	ldr	x0, [x20]
   1e59c:	cbz	x0, 1e62c <__sanitizer_set_report_fd@@Base+0x67ac>
   1e5a0:	sub	x1, x0, #0x1
   1e5a4:	tst	x0, x1
   1e5a8:	b.ne	1e640 <__sanitizer_set_report_fd@@Base+0x67c0>  // b.any
   1e5ac:	mov	w3, #0x22                  	// #34
   1e5b0:	add	x19, x19, x1
   1e5b4:	neg	x0, x0
   1e5b8:	add	x20, sp, #0x3c
   1e5bc:	and	x19, x19, x0
   1e5c0:	mov	x2, x20
   1e5c4:	mov	x1, x19
   1e5c8:	mov	x0, x23
   1e5cc:	str	w3, [sp, #60]
   1e5d0:	bl	1e3b0 <__sanitizer_set_report_fd@@Base+0x6530>
   1e5d4:	ldr	w3, [sp, #60]
   1e5d8:	mov	w4, w0
   1e5dc:	mov	x5, #0x0                   	// #0
   1e5e0:	mov	w2, #0x3                   	// #3
   1e5e4:	mov	x1, x19
   1e5e8:	mov	x0, #0x0                   	// #0
   1e5ec:	bl	1c1a0 <__sanitizer_set_report_fd@@Base+0x4320>
   1e5f0:	mov	x21, x0
   1e5f4:	mov	x1, #0x0                   	// #0
   1e5f8:	bl	1c178 <__sanitizer_set_report_fd@@Base+0x42f8>
   1e5fc:	mov	x1, x20
   1e600:	mov	x0, x21
   1e604:	bl	1c178 <__sanitizer_set_report_fd@@Base+0x42f8>
   1e608:	tst	w0, #0xff
   1e60c:	b.ne	1e650 <__sanitizer_set_report_fd@@Base+0x67d0>  // b.any
   1e610:	mov	x0, x19
   1e614:	bl	14c60 <_ZdaPvRKSt9nothrow_t@@Base+0x2ee0>
   1e618:	mov	x0, x21
   1e61c:	ldp	x21, x22, [sp, #16]
   1e620:	ldp	x23, x30, [sp, #32]
   1e624:	ldp	x19, x20, [sp], #64
   1e628:	ret
   1e62c:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   1e630:	str	x0, [x20]
   1e634:	sub	x1, x0, #0x1
   1e638:	tst	x0, x1
   1e63c:	b.eq	1e5ac <__sanitizer_set_report_fd@@Base+0x672c>  // b.none
   1e640:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   1e644:	add	x0, x0, #0xbf8
   1e648:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   1e64c:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   1e650:	ldr	w3, [sp, #60]
   1e654:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1e658:	mov	w4, w22
   1e65c:	mov	x1, x23
   1e660:	mov	x0, x19
   1e664:	add	x2, x2, #0xe38
   1e668:	bl	14868 <_ZdaPvRKSt9nothrow_t@@Base+0x2ae8>
   1e66c:	nop
   1e670:	stp	x19, x20, [sp, #-160]!
   1e674:	mov	w1, #0x1                   	// #1
   1e678:	adrp	x20, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1e67c:	add	x19, sp, #0x30
   1e680:	stp	x21, x22, [sp, #16]
   1e684:	mov	x0, x19
   1e688:	str	x30, [sp, #32]
   1e68c:	bl	1ffa0 <__sanitizer_on_print@@Base+0x680>
   1e690:	mov	w2, #0x0                   	// #0
   1e694:	adrp	x1, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1e698:	mov	x0, #0xfff                 	// #4095
   1e69c:	add	x1, x1, #0xe48
   1e6a0:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   1e6a4:	add	x21, sp, #0x50
   1e6a8:	mov	x1, #0xfff                 	// #4095
   1e6ac:	mov	x22, x0
   1e6b0:	add	x20, x20, #0xe78
   1e6b4:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1e6b8:	add	x0, x0, #0xe58
   1e6bc:	stp	x22, x1, [sp, #104]
   1e6c0:	str	xzr, [sp, #152]
   1e6c4:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   1e6c8:	b	1e6dc <__sanitizer_set_report_fd@@Base+0x685c>
   1e6cc:	ldp	x1, x2, [sp, #80]
   1e6d0:	mov	x0, x20
   1e6d4:	ldr	x3, [sp, #104]
   1e6d8:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   1e6dc:	mov	x1, x21
   1e6e0:	mov	x0, x19
   1e6e4:	bl	20810 <__sanitizer_on_print@@Base+0xef0>
   1e6e8:	tst	w0, #0xff
   1e6ec:	b.ne	1e6cc <__sanitizer_set_report_fd@@Base+0x684c>  // b.any
   1e6f0:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1e6f4:	add	x0, x0, #0xe88
   1e6f8:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   1e6fc:	cbnz	x22, 1e718 <__sanitizer_set_report_fd@@Base+0x6898>
   1e700:	mov	x0, x19
   1e704:	bl	200d0 <__sanitizer_on_print@@Base+0x7b0>
   1e708:	ldp	x21, x22, [sp, #16]
   1e70c:	ldr	x30, [sp, #32]
   1e710:	ldp	x19, x20, [sp], #160
   1e714:	ret
   1e718:	mov	x1, #0xfff                 	// #4095
   1e71c:	mov	x0, x22
   1e720:	bl	1c1b8 <__sanitizer_set_report_fd@@Base+0x4338>
   1e724:	mov	x1, #0x0                   	// #0
   1e728:	bl	1c178 <__sanitizer_set_report_fd@@Base+0x42f8>
   1e72c:	tst	w0, #0xff
   1e730:	b.ne	1e754 <__sanitizer_set_report_fd@@Base+0x68d4>  // b.any
   1e734:	mov	x0, #0xfff                 	// #4095
   1e738:	bl	14cb8 <_ZdaPvRKSt9nothrow_t@@Base+0x2f38>
   1e73c:	mov	x0, x19
   1e740:	bl	200d0 <__sanitizer_on_print@@Base+0x7b0>
   1e744:	ldp	x21, x22, [sp, #16]
   1e748:	ldr	x30, [sp, #32]
   1e74c:	ldp	x19, x20, [sp], #160
   1e750:	ret
   1e754:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   1e758:	mov	x3, #0xfff                 	// #4095
   1e75c:	mov	x4, x22
   1e760:	mov	x2, x3
   1e764:	ldr	x1, [x1, #4024]
   1e768:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1e76c:	add	x0, x0, #0xbf0
   1e770:	ldr	x1, [x1]
   1e774:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   1e778:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   1e77c:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1e780:	add	x2, x2, #0x8e8
   1e784:	add	x0, x0, #0xc30
   1e788:	mov	x4, #0x0                   	// #0
   1e78c:	mov	x3, #0x0                   	// #0
   1e790:	mov	w1, #0x3d                  	// #61
   1e794:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   1e798:	stp	x19, x20, [sp, #-192]!
   1e79c:	adrp	x19, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   1e7a0:	add	x20, sp, #0x50
   1e7a4:	stp	x21, x22, [sp, #16]
   1e7a8:	mov	x22, x0
   1e7ac:	mov	x0, x20
   1e7b0:	stp	x23, x24, [sp, #32]
   1e7b4:	mov	x24, x1
   1e7b8:	mov	x23, x2
   1e7bc:	mov	w1, #0x0                   	// #0
   1e7c0:	stp	x25, x26, [sp, #48]
   1e7c4:	str	x30, [sp, #64]
   1e7c8:	bl	1ffa0 <__sanitizer_on_print@@Base+0x680>
   1e7cc:	ldr	x21, [x19, #4016]
   1e7d0:	ldr	x3, [x21]
   1e7d4:	cbz	x3, 1e8d8 <__sanitizer_set_report_fd@@Base+0x6a58>
   1e7d8:	sub	x0, x3, #0x1
   1e7dc:	tst	x0, x3
   1e7e0:	b.ne	1e944 <__sanitizer_set_report_fd@@Base+0x6ac4>  // b.any
   1e7e4:	add	x25, x3, #0xfff
   1e7e8:	neg	x3, x3
   1e7ec:	and	x25, x25, x3
   1e7f0:	mov	w2, #0x0                   	// #0
   1e7f4:	mov	x0, x25
   1e7f8:	adrp	x21, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   1e7fc:	add	x1, x21, #0xc10
   1e800:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   1e804:	mov	x2, #0x0                   	// #0
   1e808:	mov	x26, x0
   1e80c:	mov	x1, #0x0                   	// #0
   1e810:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   1e814:	cmp	x25, #0xfff
   1e818:	b.ls	1e8e8 <__sanitizer_set_report_fd@@Base+0x6a68>  // b.plast
   1e81c:	mov	x0, x26
   1e820:	mov	x2, #0x1000                	// #4096
   1e824:	mov	w1, #0x0                   	// #0
   1e828:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   1e82c:	strb	wzr, [x26]
   1e830:	mov	x0, #0x1000                	// #4096
   1e834:	add	x21, sp, #0x70
   1e838:	stp	x26, x0, [sp, #136]
   1e83c:	str	xzr, [sp, #184]
   1e840:	b	1e84c <__sanitizer_set_report_fd@@Base+0x69cc>
   1e844:	ldr	x3, [sp, #152]
   1e848:	tbnz	w3, #2, 1e888 <__sanitizer_set_report_fd@@Base+0x6a08>
   1e84c:	mov	x1, x21
   1e850:	mov	x0, x20
   1e854:	bl	20810 <__sanitizer_on_print@@Base+0xef0>
   1e858:	ands	w19, w0, #0xff
   1e85c:	b.ne	1e844 <__sanitizer_set_report_fd@@Base+0x69c4>  // b.any
   1e860:	cbnz	x25, 1e8b0 <__sanitizer_set_report_fd@@Base+0x6a30>
   1e864:	mov	x0, x20
   1e868:	bl	200d0 <__sanitizer_on_print@@Base+0x7b0>
   1e86c:	mov	w0, w19
   1e870:	ldp	x21, x22, [sp, #16]
   1e874:	ldp	x23, x24, [sp, #32]
   1e878:	ldp	x25, x26, [sp, #48]
   1e87c:	ldr	x30, [sp, #64]
   1e880:	ldp	x19, x20, [sp], #192
   1e884:	ret
   1e888:	ldr	x1, [sp, #136]
   1e88c:	mov	x0, x22
   1e890:	bl	1a560 <__sanitizer_set_report_fd@@Base+0x26e0>
   1e894:	cbnz	w0, 1e84c <__sanitizer_set_report_fd@@Base+0x69cc>
   1e898:	ldr	x0, [sp, #112]
   1e89c:	str	x0, [x24]
   1e8a0:	ldr	x0, [sp, #120]
   1e8a4:	str	x0, [x23]
   1e8a8:	cbz	x25, 1e864 <__sanitizer_set_report_fd@@Base+0x69e4>
   1e8ac:	nop
   1e8b0:	mov	x1, x25
   1e8b4:	mov	x0, x26
   1e8b8:	bl	1c1b8 <__sanitizer_set_report_fd@@Base+0x4338>
   1e8bc:	mov	x1, #0x0                   	// #0
   1e8c0:	bl	1c178 <__sanitizer_set_report_fd@@Base+0x42f8>
   1e8c4:	tst	w0, #0xff
   1e8c8:	b.ne	1e97c <__sanitizer_set_report_fd@@Base+0x6afc>  // b.any
   1e8cc:	mov	x0, x25
   1e8d0:	bl	14cb8 <_ZdaPvRKSt9nothrow_t@@Base+0x2f38>
   1e8d4:	b	1e864 <__sanitizer_set_report_fd@@Base+0x69e4>
   1e8d8:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   1e8dc:	mov	x3, x0
   1e8e0:	str	x0, [x21]
   1e8e4:	b	1e7d8 <__sanitizer_set_report_fd@@Base+0x6958>
   1e8e8:	ldr	x19, [x19, #4016]
   1e8ec:	ldr	x0, [x19]
   1e8f0:	cbz	x0, 1e9c0 <__sanitizer_set_report_fd@@Base+0x6b40>
   1e8f4:	sub	x1, x0, #0x1
   1e8f8:	tst	x1, x0
   1e8fc:	b.ne	1e944 <__sanitizer_set_report_fd@@Base+0x6ac4>  // b.any
   1e900:	add	x19, x0, #0xfff
   1e904:	neg	x0, x0
   1e908:	and	x19, x19, x0
   1e90c:	add	x1, x21, #0xc10
   1e910:	mov	w2, #0x0                   	// #0
   1e914:	mov	x0, x19
   1e918:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   1e91c:	mov	x21, x0
   1e920:	mov	x1, x26
   1e924:	mov	x2, #0x0                   	// #0
   1e928:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   1e92c:	cmp	x26, #0x0
   1e930:	ccmp	x25, #0x0, #0x4, ne  // ne = any
   1e934:	b.ne	1e954 <__sanitizer_set_report_fd@@Base+0x6ad4>  // b.any
   1e938:	mov	x25, x19
   1e93c:	mov	x26, x21
   1e940:	b	1e81c <__sanitizer_set_report_fd@@Base+0x699c>
   1e944:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   1e948:	add	x0, x0, #0xbf8
   1e94c:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   1e950:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   1e954:	mov	x1, x25
   1e958:	mov	x0, x26
   1e95c:	bl	1c1b8 <__sanitizer_set_report_fd@@Base+0x4338>
   1e960:	mov	x1, #0x0                   	// #0
   1e964:	bl	1c178 <__sanitizer_set_report_fd@@Base+0x42f8>
   1e968:	tst	w0, #0xff
   1e96c:	b.ne	1e97c <__sanitizer_set_report_fd@@Base+0x6afc>  // b.any
   1e970:	mov	x0, x25
   1e974:	bl	14cb8 <_ZdaPvRKSt9nothrow_t@@Base+0x2f38>
   1e978:	b	1e938 <__sanitizer_set_report_fd@@Base+0x6ab8>
   1e97c:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   1e980:	mov	x4, x26
   1e984:	mov	x3, x25
   1e988:	mov	x2, x25
   1e98c:	ldr	x1, [x1, #4024]
   1e990:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1e994:	add	x0, x0, #0xbf0
   1e998:	ldr	x1, [x1]
   1e99c:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   1e9a0:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   1e9a4:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1e9a8:	add	x2, x2, #0x8e8
   1e9ac:	add	x0, x0, #0xc30
   1e9b0:	mov	x4, #0x0                   	// #0
   1e9b4:	mov	x3, #0x0                   	// #0
   1e9b8:	mov	w1, #0x3d                  	// #61
   1e9bc:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   1e9c0:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   1e9c4:	str	x0, [x19]
   1e9c8:	b	1e8f4 <__sanitizer_set_report_fd@@Base+0x6a74>
   1e9cc:	nop
   1e9d0:	stp	x19, x20, [sp, #-64]!
   1e9d4:	adrp	x20, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   1e9d8:	mov	x19, x0
   1e9dc:	ldr	x20, [x20, #4016]
   1e9e0:	stp	x21, x22, [sp, #16]
   1e9e4:	mov	x22, x1
   1e9e8:	ldr	x0, [x20]
   1e9ec:	str	x30, [sp, #32]
   1e9f0:	cbz	x0, 1ea80 <__sanitizer_set_report_fd@@Base+0x6c00>
   1e9f4:	sub	x1, x0, #0x1
   1e9f8:	tst	x0, x1
   1e9fc:	b.ne	1ea94 <__sanitizer_set_report_fd@@Base+0x6c14>  // b.any
   1ea00:	mov	w3, #0x4022                	// #16418
   1ea04:	add	x19, x19, x1
   1ea08:	neg	x0, x0
   1ea0c:	add	x20, sp, #0x3c
   1ea10:	and	x19, x19, x0
   1ea14:	mov	x2, x20
   1ea18:	mov	x1, x19
   1ea1c:	mov	x0, x22
   1ea20:	str	w3, [sp, #60]
   1ea24:	bl	1e3b0 <__sanitizer_set_report_fd@@Base+0x6530>
   1ea28:	ldr	w3, [sp, #60]
   1ea2c:	mov	w4, w0
   1ea30:	mov	x5, #0x0                   	// #0
   1ea34:	mov	w2, #0x3                   	// #3
   1ea38:	mov	x1, x19
   1ea3c:	mov	x0, #0x0                   	// #0
   1ea40:	bl	1c1a0 <__sanitizer_set_report_fd@@Base+0x4320>
   1ea44:	mov	x21, x0
   1ea48:	mov	x1, #0x0                   	// #0
   1ea4c:	bl	1c178 <__sanitizer_set_report_fd@@Base+0x42f8>
   1ea50:	mov	x1, x20
   1ea54:	mov	x0, x21
   1ea58:	bl	1c178 <__sanitizer_set_report_fd@@Base+0x42f8>
   1ea5c:	tst	w0, #0xff
   1ea60:	b.ne	1eaa4 <__sanitizer_set_report_fd@@Base+0x6c24>  // b.any
   1ea64:	mov	x0, x19
   1ea68:	bl	14c60 <_ZdaPvRKSt9nothrow_t@@Base+0x2ee0>
   1ea6c:	mov	x0, x21
   1ea70:	ldp	x21, x22, [sp, #16]
   1ea74:	ldr	x30, [sp, #32]
   1ea78:	ldp	x19, x20, [sp], #64
   1ea7c:	ret
   1ea80:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   1ea84:	str	x0, [x20]
   1ea88:	sub	x1, x0, #0x1
   1ea8c:	tst	x0, x1
   1ea90:	b.eq	1ea00 <__sanitizer_set_report_fd@@Base+0x6b80>  // b.none
   1ea94:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   1ea98:	add	x0, x0, #0xbf8
   1ea9c:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   1eaa0:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   1eaa4:	ldr	w3, [sp, #60]
   1eaa8:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1eaac:	mov	x1, x22
   1eab0:	mov	x0, x19
   1eab4:	add	x2, x2, #0xea8
   1eab8:	mov	w4, #0x0                   	// #0
   1eabc:	bl	14868 <_ZdaPvRKSt9nothrow_t@@Base+0x2ae8>
   1eac0:	stp	x19, x20, [sp, #-64]!
   1eac4:	adrp	x20, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   1eac8:	mov	x19, x0
   1eacc:	ldr	x20, [x20, #4016]
   1ead0:	stp	x21, x22, [sp, #16]
   1ead4:	mov	x22, x1
   1ead8:	ldr	x0, [x20]
   1eadc:	str	x30, [sp, #32]
   1eae0:	cbz	x0, 1eb70 <__sanitizer_set_report_fd@@Base+0x6cf0>
   1eae4:	sub	x1, x0, #0x1
   1eae8:	tst	x0, x1
   1eaec:	b.ne	1eb84 <__sanitizer_set_report_fd@@Base+0x6d04>  // b.any
   1eaf0:	mov	w3, #0x22                  	// #34
   1eaf4:	add	x19, x19, x1
   1eaf8:	neg	x0, x0
   1eafc:	add	x21, sp, #0x3c
   1eb00:	and	x19, x19, x0
   1eb04:	mov	x2, x21
   1eb08:	mov	x1, x19
   1eb0c:	mov	x0, x22
   1eb10:	str	w3, [sp, #60]
   1eb14:	bl	1e3b0 <__sanitizer_set_report_fd@@Base+0x6530>
   1eb18:	ldr	w3, [sp, #60]
   1eb1c:	mov	w4, w0
   1eb20:	mov	x5, #0x0                   	// #0
   1eb24:	mov	w2, #0x3                   	// #3
   1eb28:	mov	x1, x19
   1eb2c:	mov	x0, #0x0                   	// #0
   1eb30:	bl	1c1a0 <__sanitizer_set_report_fd@@Base+0x4320>
   1eb34:	mov	x20, x0
   1eb38:	mov	x1, #0x0                   	// #0
   1eb3c:	bl	1c178 <__sanitizer_set_report_fd@@Base+0x42f8>
   1eb40:	mov	x1, x21
   1eb44:	mov	x0, x20
   1eb48:	bl	1c178 <__sanitizer_set_report_fd@@Base+0x42f8>
   1eb4c:	tst	w0, #0xff
   1eb50:	b.ne	1eb94 <__sanitizer_set_report_fd@@Base+0x6d14>  // b.any
   1eb54:	mov	x0, x19
   1eb58:	bl	14c60 <_ZdaPvRKSt9nothrow_t@@Base+0x2ee0>
   1eb5c:	mov	x0, x20
   1eb60:	ldp	x21, x22, [sp, #16]
   1eb64:	ldr	x30, [sp, #32]
   1eb68:	ldp	x19, x20, [sp], #64
   1eb6c:	ret
   1eb70:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   1eb74:	str	x0, [x20]
   1eb78:	sub	x1, x0, #0x1
   1eb7c:	tst	x0, x1
   1eb80:	b.eq	1eaf0 <__sanitizer_set_report_fd@@Base+0x6c70>  // b.none
   1eb84:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   1eb88:	add	x0, x0, #0xbf8
   1eb8c:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   1eb90:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   1eb94:	ldr	w3, [sp, #60]
   1eb98:	mov	x0, #0x0                   	// #0
   1eb9c:	cmp	w3, #0xc
   1eba0:	b.eq	1eb60 <__sanitizer_set_report_fd@@Base+0x6ce0>  // b.none
   1eba4:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1eba8:	mov	x1, x22
   1ebac:	mov	x0, x19
   1ebb0:	add	x2, x2, #0xe38
   1ebb4:	mov	w4, #0x0                   	// #0
   1ebb8:	bl	14868 <_ZdaPvRKSt9nothrow_t@@Base+0x2ae8>
   1ebbc:	nop
   1ebc0:	stp	x19, x20, [sp, #-48]!
   1ebc4:	mov	x19, x0
   1ebc8:	sub	x0, x0, #0x1
   1ebcc:	stp	x21, x22, [sp, #16]
   1ebd0:	tst	x0, x19
   1ebd4:	stp	x23, x30, [sp, #32]
   1ebd8:	b.ne	1eccc <__sanitizer_set_report_fd@@Base+0x6e4c>  // b.any
   1ebdc:	sub	x23, x1, #0x1
   1ebe0:	mov	x21, x1
   1ebe4:	tst	x1, x23
   1ebe8:	b.ne	1ecec <__sanitizer_set_report_fd@@Base+0x6e6c>  // b.any
   1ebec:	add	x22, x19, x21
   1ebf0:	mov	x1, x2
   1ebf4:	mov	x0, x22
   1ebf8:	bl	1eac0 <__sanitizer_set_report_fd@@Base+0x6c40>
   1ebfc:	mov	x20, x0
   1ec00:	cbz	x0, 1ec1c <__sanitizer_set_report_fd@@Base+0x6d9c>
   1ec04:	add	x22, x22, x0
   1ec08:	tst	x0, x23
   1ec0c:	b.ne	1ec70 <__sanitizer_set_report_fd@@Base+0x6df0>  // b.any
   1ec10:	add	x19, x20, x19
   1ec14:	cmp	x22, x19
   1ec18:	b.ne	1ec30 <__sanitizer_set_report_fd@@Base+0x6db0>  // b.any
   1ec1c:	mov	x0, x20
   1ec20:	ldp	x21, x22, [sp, #16]
   1ec24:	ldp	x23, x30, [sp, #32]
   1ec28:	ldp	x19, x20, [sp], #48
   1ec2c:	ret
   1ec30:	cbz	x19, 1ec1c <__sanitizer_set_report_fd@@Base+0x6d9c>
   1ec34:	sub	x22, x22, x19
   1ec38:	mov	x0, x19
   1ec3c:	mov	x1, x22
   1ec40:	bl	1c1b8 <__sanitizer_set_report_fd@@Base+0x4338>
   1ec44:	mov	x1, #0x0                   	// #0
   1ec48:	bl	1c178 <__sanitizer_set_report_fd@@Base+0x42f8>
   1ec4c:	tst	w0, #0xff
   1ec50:	b.ne	1ed0c <__sanitizer_set_report_fd@@Base+0x6e8c>  // b.any
   1ec54:	mov	x0, x22
   1ec58:	bl	14cb8 <_ZdaPvRKSt9nothrow_t@@Base+0x2f38>
   1ec5c:	mov	x0, x20
   1ec60:	ldp	x21, x22, [sp, #16]
   1ec64:	ldp	x23, x30, [sp, #32]
   1ec68:	ldp	x19, x20, [sp], #48
   1ec6c:	ret
   1ec70:	add	x23, x0, x23
   1ec74:	neg	x21, x21
   1ec78:	and	x21, x23, x21
   1ec7c:	subs	x23, x21, x0
   1ec80:	b.ne	1ec98 <__sanitizer_set_report_fd@@Base+0x6e18>  // b.any
   1ec84:	mov	x20, x21
   1ec88:	add	x19, x20, x19
   1ec8c:	cmp	x22, x19
   1ec90:	b.eq	1ec1c <__sanitizer_set_report_fd@@Base+0x6d9c>  // b.none
   1ec94:	b	1ec30 <__sanitizer_set_report_fd@@Base+0x6db0>
   1ec98:	mov	x1, x23
   1ec9c:	bl	1c1b8 <__sanitizer_set_report_fd@@Base+0x4338>
   1eca0:	mov	x1, #0x0                   	// #0
   1eca4:	bl	1c178 <__sanitizer_set_report_fd@@Base+0x42f8>
   1eca8:	tst	w0, #0xff
   1ecac:	b.ne	1ed50 <__sanitizer_set_report_fd@@Base+0x6ed0>  // b.any
   1ecb0:	mov	x20, x21
   1ecb4:	mov	x0, x23
   1ecb8:	add	x19, x20, x19
   1ecbc:	bl	14cb8 <_ZdaPvRKSt9nothrow_t@@Base+0x2f38>
   1ecc0:	cmp	x22, x19
   1ecc4:	b.eq	1ec1c <__sanitizer_set_report_fd@@Base+0x6d9c>  // b.none
   1ecc8:	b	1ec30 <__sanitizer_set_report_fd@@Base+0x6db0>
   1eccc:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   1ecd0:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1ecd4:	add	x2, x2, #0xb50
   1ecd8:	add	x0, x0, #0xc30
   1ecdc:	mov	x4, #0x0                   	// #0
   1ece0:	mov	x3, #0x0                   	// #0
   1ece4:	mov	w1, #0x55                  	// #85
   1ece8:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   1ecec:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   1ecf0:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1ecf4:	add	x2, x2, #0x430
   1ecf8:	add	x0, x0, #0xc30
   1ecfc:	mov	x4, #0x0                   	// #0
   1ed00:	mov	x3, #0x0                   	// #0
   1ed04:	mov	w1, #0x56                  	// #86
   1ed08:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   1ed0c:	mov	x4, x19
   1ed10:	mov	x3, x22
   1ed14:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   1ed18:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1ed1c:	ldr	x1, [x1, #4024]
   1ed20:	mov	x2, x3
   1ed24:	add	x0, x0, #0xbf0
   1ed28:	ldr	x1, [x1]
   1ed2c:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   1ed30:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   1ed34:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1ed38:	add	x2, x2, #0x8e8
   1ed3c:	add	x0, x0, #0xc30
   1ed40:	mov	x4, #0x0                   	// #0
   1ed44:	mov	x3, #0x0                   	// #0
   1ed48:	mov	w1, #0x3d                  	// #61
   1ed4c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   1ed50:	mov	x4, x20
   1ed54:	mov	x3, x23
   1ed58:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   1ed5c:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1ed60:	b	1ed1c <__sanitizer_set_report_fd@@Base+0x6e9c>
   1ed64:	nop
   1ed68:	stp	x19, x20, [sp, #-112]!
   1ed6c:	mov	x20, x0
   1ed70:	mov	x19, x1
   1ed74:	stp	x21, x22, [sp, #16]
   1ed78:	adrp	x22, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   1ed7c:	and	w21, w2, #0xff
   1ed80:	ldr	x22, [x22, #4016]
   1ed84:	stp	x23, x24, [sp, #32]
   1ed88:	mov	x23, x3
   1ed8c:	ldr	x2, [x22]
   1ed90:	str	x30, [sp, #48]
   1ed94:	cbz	x2, 1ee2c <__sanitizer_set_report_fd@@Base+0x6fac>
   1ed98:	sub	x1, x2, #0x1
   1ed9c:	tst	x2, x1
   1eda0:	b.ne	1ee60 <__sanitizer_set_report_fd@@Base+0x6fe0>  // b.any
   1eda4:	neg	x2, x2
   1eda8:	add	x19, x19, x1
   1edac:	and	x19, x19, x2
   1edb0:	mov	w3, #0x32                  	// #50
   1edb4:	add	x24, sp, #0x48
   1edb8:	and	x22, x20, x2
   1edbc:	mov	x1, x19
   1edc0:	mov	x2, x24
   1edc4:	mov	x0, x23
   1edc8:	str	w3, [sp, #72]
   1edcc:	bl	1e3b0 <__sanitizer_set_report_fd@@Base+0x6530>
   1edd0:	ldr	w3, [sp, #72]
   1edd4:	mov	w4, w0
   1edd8:	mov	x5, #0x0                   	// #0
   1eddc:	mov	w2, #0x3                   	// #3
   1ede0:	mov	x1, x19
   1ede4:	mov	x0, x22
   1ede8:	bl	1c1a0 <__sanitizer_set_report_fd@@Base+0x4320>
   1edec:	mov	x20, x0
   1edf0:	mov	x1, #0x0                   	// #0
   1edf4:	bl	1c178 <__sanitizer_set_report_fd@@Base+0x42f8>
   1edf8:	mov	x0, x20
   1edfc:	add	x1, sp, #0x44
   1ee00:	bl	1c178 <__sanitizer_set_report_fd@@Base+0x42f8>
   1ee04:	tst	w0, #0xff
   1ee08:	b.ne	1ee70 <__sanitizer_set_report_fd@@Base+0x6ff0>  // b.any
   1ee0c:	mov	x0, x19
   1ee10:	bl	14c60 <_ZdaPvRKSt9nothrow_t@@Base+0x2ee0>
   1ee14:	mov	x0, x20
   1ee18:	ldp	x21, x22, [sp, #16]
   1ee1c:	ldp	x23, x24, [sp, #32]
   1ee20:	ldr	x30, [sp, #48]
   1ee24:	ldp	x19, x20, [sp], #112
   1ee28:	ret
   1ee2c:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   1ee30:	str	x0, [x22]
   1ee34:	sub	x1, x0, #0x1
   1ee38:	tst	x0, x1
   1ee3c:	b.ne	1ee60 <__sanitizer_set_report_fd@@Base+0x6fe0>  // b.any
   1ee40:	add	x19, x19, x1
   1ee44:	neg	x2, x0
   1ee48:	and	x19, x19, x2
   1ee4c:	cbnz	x0, 1edb0 <__sanitizer_set_report_fd@@Base+0x6f30>
   1ee50:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   1ee54:	neg	x2, x0
   1ee58:	str	x0, [x22]
   1ee5c:	b	1edb0 <__sanitizer_set_report_fd@@Base+0x6f30>
   1ee60:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   1ee64:	add	x0, x0, #0xbf8
   1ee68:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   1ee6c:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   1ee70:	cbz	w21, 1ee88 <__sanitizer_set_report_fd@@Base+0x7008>
   1ee74:	ldr	w0, [sp, #68]
   1ee78:	cmp	w0, #0xc
   1ee7c:	b.ne	1ee88 <__sanitizer_set_report_fd@@Base+0x7008>  // b.any
   1ee80:	mov	x0, #0x0                   	// #0
   1ee84:	b	1ee18 <__sanitizer_set_report_fd@@Base+0x6f98>
   1ee88:	mov	x3, x22
   1ee8c:	mov	x1, #0x28                  	// #40
   1ee90:	mov	x0, x24
   1ee94:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1ee98:	add	x2, x2, #0xec0
   1ee9c:	bl	1f928 <__sanitizer_on_print@@Base+0x8>
   1eea0:	ldr	w3, [sp, #68]
   1eea4:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1eea8:	mov	x1, x24
   1eeac:	mov	x0, x19
   1eeb0:	add	x2, x2, #0xe38
   1eeb4:	mov	w4, #0x0                   	// #0
   1eeb8:	bl	14868 <_ZdaPvRKSt9nothrow_t@@Base+0x2ae8>
   1eebc:	nop
   1eec0:	mov	x3, x2
   1eec4:	mov	w2, #0x0                   	// #0
   1eec8:	b	1ed68 <__sanitizer_set_report_fd@@Base+0x6ee8>
   1eecc:	nop
   1eed0:	mov	x3, x2
   1eed4:	mov	w2, #0x1                   	// #1
   1eed8:	b	1ed68 <__sanitizer_set_report_fd@@Base+0x6ee8>
   1eedc:	nop
   1eee0:	ret
   1eee4:	nop
   1eee8:	stp	x19, x20, [sp, #-48]!
   1eeec:	mov	x19, x0
   1eef0:	mov	x20, x1
   1eef4:	mov	x0, x4
   1eef8:	stp	x21, x30, [sp, #16]
   1eefc:	mov	w21, w2
   1ef00:	add	x2, sp, #0x2c
   1ef04:	str	w3, [sp, #44]
   1ef08:	bl	1e3b0 <__sanitizer_set_report_fd@@Base+0x6530>
   1ef0c:	mov	w4, w0
   1ef10:	ldr	w3, [sp, #44]
   1ef14:	mov	w2, w21
   1ef18:	mov	x5, #0x0                   	// #0
   1ef1c:	mov	x1, x20
   1ef20:	mov	x0, x19
   1ef24:	bl	1c1a0 <__sanitizer_set_report_fd@@Base+0x4320>
   1ef28:	mov	x19, x0
   1ef2c:	mov	x1, #0x0                   	// #0
   1ef30:	bl	1c178 <__sanitizer_set_report_fd@@Base+0x42f8>
   1ef34:	mov	x0, x19
   1ef38:	ldp	x21, x30, [sp, #16]
   1ef3c:	ldp	x19, x20, [sp], #48
   1ef40:	ret
   1ef44:	nop
   1ef48:	stp	x19, x20, [sp, #-320]!
   1ef4c:	and	w3, w3, #0xff
   1ef50:	cmp	w3, #0xa
   1ef54:	cset	w8, ne  // ne = any
   1ef58:	stp	x21, x22, [sp, #16]
   1ef5c:	cmp	w8, #0x0
   1ef60:	stp	x23, x24, [sp, #32]
   1ef64:	ccmp	w3, #0x10, #0x4, ne  // ne = any
   1ef68:	stp	x25, x26, [sp, #48]
   1ef6c:	str	x30, [sp, #64]
   1ef70:	b.ne	1f164 <__sanitizer_set_report_fd@@Base+0x72e4>  // b.any
   1ef74:	and	w24, w6, #0xff
   1ef78:	cmp	w8, #0x0
   1ef7c:	ccmp	w24, #0x0, #0x4, ne  // ne = any
   1ef80:	b.ne	1f184 <__sanitizer_set_report_fd@@Base+0x7304>  // b.any
   1ef84:	cmp	x2, #0x0
   1ef88:	ccmp	w24, #0x0, #0x4, eq  // eq = none
   1ef8c:	b.ne	1f194 <__sanitizer_set_report_fd@@Base+0x7314>  // b.any
   1ef90:	and	w23, w4, #0xff
   1ef94:	cmp	w23, #0x1d
   1ef98:	b.hi	1f1a4 <__sanitizer_set_report_fd@@Base+0x7324>  // b.pmore
   1ef9c:	cmp	w23, #0x0
   1efa0:	mov	x19, x0
   1efa4:	sub	w0, w23, #0x1
   1efa8:	ccmp	w24, #0x0, #0x4, ne  // ne = any
   1efac:	and	w0, w0, #0xff
   1efb0:	and	w25, w5, #0xff
   1efb4:	csel	w23, w0, w23, ne  // ne = any
   1efb8:	cmp	w24, #0x0
   1efbc:	mov	x20, x1
   1efc0:	and	w26, w7, #0xff
   1efc4:	ccmp	w25, #0x0, #0x4, ne  // ne = any
   1efc8:	mov	w21, #0x0                   	// #0
   1efcc:	b.ne	1f01c <__sanitizer_set_report_fd@@Base+0x719c>  // b.any
   1efd0:	add	x22, sp, #0x50
   1efd4:	and	x3, x3, #0xff
   1efd8:	mov	x10, x22
   1efdc:	mov	w0, #0x0                   	// #0
   1efe0:	udiv	x11, x2, x3
   1efe4:	mov	w8, w0
   1efe8:	cmp	x3, x2
   1efec:	add	w0, w0, #0x1
   1eff0:	msub	x12, x11, x3, x2
   1eff4:	mov	x2, x11
   1eff8:	str	x12, [x10]
   1effc:	b.hi	1f044 <__sanitizer_set_report_fd@@Base+0x71c4>  // b.pmore
   1f000:	add	x10, x10, #0x8
   1f004:	cmp	w0, #0x1e
   1f008:	b.ne	1efe0 <__sanitizer_set_report_fd@@Base+0x7160>  // b.any
   1f00c:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1f010:	add	x0, x0, #0xf60
   1f014:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   1f018:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   1f01c:	ldr	x9, [x19]
   1f020:	mov	w21, #0x1                   	// #1
   1f024:	cmp	x1, x9
   1f028:	b.ls	1efd0 <__sanitizer_set_report_fd@@Base+0x7150>  // b.plast
   1f02c:	mov	w0, #0x2d                  	// #45
   1f030:	strb	w0, [x9]
   1f034:	ldr	x9, [x19]
   1f038:	add	x9, x9, #0x1
   1f03c:	str	x9, [x19]
   1f040:	b	1efd0 <__sanitizer_set_report_fd@@Base+0x7150>
   1f044:	cmp	w0, w23
   1f048:	b.lt	1f148 <__sanitizer_set_report_fd@@Base+0x72c8>  // b.tstop
   1f04c:	ldr	x9, [x19]
   1f050:	add	x0, x22, w8, sxtw #3
   1f054:	mov	w3, #0x20                  	// #32
   1f058:	mov	w2, #0x30                  	// #48
   1f05c:	nop
   1f060:	ldr	x1, [x0]
   1f064:	cbnz	x1, 1f174 <__sanitizer_set_report_fd@@Base+0x72f4>
   1f068:	cmp	w8, #0x0
   1f06c:	ccmp	w25, #0x0, #0x0, ne  // ne = any
   1f070:	csel	w1, w3, w2, eq  // eq = none
   1f074:	cmp	x20, x9
   1f078:	b.ls	1f08c <__sanitizer_set_report_fd@@Base+0x720c>  // b.plast
   1f07c:	strb	w1, [x9]
   1f080:	ldr	x9, [x19]
   1f084:	add	x9, x9, #0x1
   1f088:	str	x9, [x19]
   1f08c:	sub	w8, w8, #0x1
   1f090:	add	w21, w21, #0x1
   1f094:	cmn	w8, #0x1
   1f098:	sub	x0, x0, #0x8
   1f09c:	b.ne	1f060 <__sanitizer_set_report_fd@@Base+0x71e0>  // b.any
   1f0a0:	eor	w25, w25, #0x1
   1f0a4:	tst	w24, w25
   1f0a8:	b.eq	1f12c <__sanitizer_set_report_fd@@Base+0x72ac>  // b.none
   1f0ac:	cmp	x20, x9
   1f0b0:	b.hi	1f1b4 <__sanitizer_set_report_fd@@Base+0x7334>  // b.pmore
   1f0b4:	add	w21, w21, #0x1
   1f0b8:	cmn	w8, #0x1
   1f0bc:	b.eq	1f12c <__sanitizer_set_report_fd@@Base+0x72ac>  // b.none
   1f0c0:	cmp	w26, #0x0
   1f0c4:	sub	w3, w8, #0x1
   1f0c8:	mov	w4, #0x41                  	// #65
   1f0cc:	mov	w0, #0x61                  	// #97
   1f0d0:	csel	w4, w4, w0, ne  // ne = any
   1f0d4:	sxtw	x3, w3
   1f0d8:	sub	w4, w4, #0xa
   1f0dc:	mov	x5, #0xfffffffffffffffe    	// #-2
   1f0e0:	add	x0, x22, x3, lsl #3
   1f0e4:	ldrb	w1, [x0, #8]
   1f0e8:	add	w0, w1, #0x30
   1f0ec:	add	w2, w1, w4
   1f0f0:	cmp	w1, #0x9
   1f0f4:	and	w0, w0, #0xff
   1f0f8:	and	w2, w2, #0xff
   1f0fc:	csel	w2, w2, w0, hi  // hi = pmore
   1f100:	cmp	x20, x9
   1f104:	b.ls	1f118 <__sanitizer_set_report_fd@@Base+0x7298>  // b.plast
   1f108:	strb	w2, [x9]
   1f10c:	ldr	x9, [x19]
   1f110:	add	x9, x9, #0x1
   1f114:	str	x9, [x19]
   1f118:	sub	x3, x3, #0x1
   1f11c:	cmp	x3, x5
   1f120:	b.ne	1f0e0 <__sanitizer_set_report_fd@@Base+0x7260>  // b.any
   1f124:	add	w21, w21, #0x1
   1f128:	add	w21, w21, w8
   1f12c:	mov	w0, w21
   1f130:	ldp	x21, x22, [sp, #16]
   1f134:	ldp	x23, x24, [sp, #32]
   1f138:	ldp	x25, x26, [sp, #48]
   1f13c:	ldr	x30, [sp, #64]
   1f140:	ldp	x19, x20, [sp], #320
   1f144:	ret
   1f148:	sub	w2, w23, w0
   1f14c:	mov	w1, #0x0                   	// #0
   1f150:	add	x0, x22, w0, sxtw #3
   1f154:	sbfiz	x2, x2, #3, #32
   1f158:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   1f15c:	sub	w8, w23, #0x1
   1f160:	b	1f04c <__sanitizer_set_report_fd@@Base+0x71cc>
   1f164:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1f168:	add	x0, x0, #0xee8
   1f16c:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   1f170:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   1f174:	eor	w25, w25, #0x1
   1f178:	tst	w24, w25
   1f17c:	b.eq	1f0c0 <__sanitizer_set_report_fd@@Base+0x7240>  // b.none
   1f180:	b	1f0ac <__sanitizer_set_report_fd@@Base+0x722c>
   1f184:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1f188:	add	x0, x0, #0xf08
   1f18c:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   1f190:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   1f194:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1f198:	add	x0, x0, #0xf20
   1f19c:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   1f1a0:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   1f1a4:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1f1a8:	add	x0, x0, #0xf40
   1f1ac:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   1f1b0:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   1f1b4:	mov	w0, #0x2d                  	// #45
   1f1b8:	strb	w0, [x9]
   1f1bc:	ldr	x9, [x19]
   1f1c0:	add	x9, x9, #0x1
   1f1c4:	str	x9, [x19]
   1f1c8:	b	1f0b4 <__sanitizer_set_report_fd@@Base+0x7234>
   1f1cc:	nop
   1f1d0:	stp	x19, x20, [sp, #-112]!
   1f1d4:	stp	x23, x24, [sp, #32]
   1f1d8:	stp	x27, x28, [sp, #64]
   1f1dc:	str	x30, [sp, #80]
   1f1e0:	str	x0, [sp, #104]
   1f1e4:	cbz	x2, 1f810 <__sanitizer_set_report_fd@@Base+0x7990>
   1f1e8:	cmp	w1, #0x0
   1f1ec:	b.le	1f828 <__sanitizer_set_report_fd@@Base+0x79a8>
   1f1f0:	ldrb	w4, [x2]
   1f1f4:	sxtw	x19, w1
   1f1f8:	sub	x28, x19, #0x1
   1f1fc:	mov	x20, x0
   1f200:	add	x28, x0, x28
   1f204:	cbz	w4, 1f8ec <__sanitizer_set_report_fd@@Base+0x7a6c>
   1f208:	stp	x21, x22, [sp, #16]
   1f20c:	adrp	x21, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1f210:	add	x0, x21, #0xf80
   1f214:	mov	w27, #0x1                   	// #1
   1f218:	mov	w24, #0x0                   	// #0
   1f21c:	sub	w27, w27, w0
   1f220:	stp	x25, x26, [sp, #48]
   1f224:	ldr	w26, [x3, #24]
   1f228:	ldp	x25, x22, [x3]
   1f22c:	b	1f264 <__sanitizer_set_report_fd@@Base+0x73e4>
   1f230:	ldr	x0, [sp, #104]
   1f234:	cmp	x28, x0
   1f238:	b.ls	1f24c <__sanitizer_set_report_fd@@Base+0x73cc>  // b.plast
   1f23c:	strb	w4, [x0]
   1f240:	ldr	x0, [sp, #104]
   1f244:	add	x0, x0, #0x1
   1f248:	str	x0, [sp, #104]
   1f24c:	mov	x0, x23
   1f250:	add	w24, w24, #0x1
   1f254:	mov	x23, x2
   1f258:	mov	x2, x0
   1f25c:	ldrb	w4, [x23, #1]
   1f260:	cbz	w4, 1f400 <__sanitizer_set_report_fd@@Base+0x7580>
   1f264:	cmp	w4, #0x25
   1f268:	add	x23, x2, #0x1
   1f26c:	b.ne	1f230 <__sanitizer_set_report_fd@@Base+0x73b0>  // b.any
   1f270:	ldrb	w1, [x2, #1]
   1f274:	cmp	w1, #0x2d
   1f278:	mov	w3, w1
   1f27c:	b.ne	1f288 <__sanitizer_set_report_fd@@Base+0x7408>  // b.any
   1f280:	ldrb	w3, [x2, #2]
   1f284:	add	x23, x2, #0x2
   1f288:	sub	w0, w3, #0x30
   1f28c:	mov	w4, #0x0                   	// #0
   1f290:	and	w0, w0, #0xff
   1f294:	cmp	w0, #0x9
   1f298:	cset	w6, ls  // ls = plast
   1f29c:	cmp	w3, #0x30
   1f2a0:	cset	w5, eq  // eq = none
   1f2a4:	cmp	w0, #0x9
   1f2a8:	b.ls	1f314 <__sanitizer_set_report_fd@@Base+0x7494>  // b.plast
   1f2ac:	cmp	w3, #0x2e
   1f2b0:	mov	w8, #0x1                   	// #1
   1f2b4:	mov	w2, #0xffffffff            	// #-1
   1f2b8:	b.eq	1f358 <__sanitizer_set_report_fd@@Base+0x74d8>  // b.none
   1f2bc:	cmp	w3, #0x7a
   1f2c0:	cinc	x23, x23, eq  // eq = none
   1f2c4:	cset	w7, eq  // eq = none
   1f2c8:	ldrb	w3, [x23]
   1f2cc:	b.eq	1f2d8 <__sanitizer_set_report_fd@@Base+0x7458>  // b.none
   1f2d0:	cmp	w3, #0x6c
   1f2d4:	b.eq	1f374 <__sanitizer_set_report_fd@@Base+0x74f4>  // b.none
   1f2d8:	cmp	w1, #0x2d
   1f2dc:	orr	w6, w6, w7
   1f2e0:	ccmp	w8, #0x0, #0x4, ne  // ne = any
   1f2e4:	mov	w9, #0x0                   	// #0
   1f2e8:	b.ne	1f3a0 <__sanitizer_set_report_fd@@Base+0x7520>  // b.any
   1f2ec:	cmp	w3, #0x73
   1f2f0:	b.eq	1f5a8 <__sanitizer_set_report_fd@@Base+0x7728>  // b.none
   1f2f4:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1f2f8:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1f2fc:	add	x2, x2, #0xfa8
   1f300:	add	x0, x0, #0xfe8
   1f304:	mov	x4, #0x0                   	// #0
   1f308:	mov	x3, #0x0                   	// #0
   1f30c:	mov	w1, #0xaa                  	// #170
   1f310:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   1f314:	add	w4, w4, w4, lsl #2
   1f318:	add	w4, w3, w4, lsl #1
   1f31c:	ldrb	w3, [x23, #1]!
   1f320:	sub	w4, w4, #0x30
   1f324:	sub	w2, w3, #0x30
   1f328:	and	w2, w2, #0xff
   1f32c:	cmp	w2, #0x9
   1f330:	b.hi	1f2ac <__sanitizer_set_report_fd@@Base+0x742c>  // b.pmore
   1f334:	add	w4, w4, w4, lsl #2
   1f338:	add	w4, w3, w4, lsl #1
   1f33c:	ldrb	w3, [x23, #1]!
   1f340:	sub	w4, w4, #0x30
   1f344:	sub	w2, w3, #0x30
   1f348:	and	w2, w2, #0xff
   1f34c:	cmp	w2, #0x9
   1f350:	b.ls	1f314 <__sanitizer_set_report_fd@@Base+0x7494>  // b.plast
   1f354:	b	1f2ac <__sanitizer_set_report_fd@@Base+0x742c>
   1f358:	ldrb	w3, [x23, #1]
   1f35c:	cmp	w3, #0x2a
   1f360:	b.eq	1f714 <__sanitizer_set_report_fd@@Base+0x7894>  // b.none
   1f364:	ldrb	w3, [x23]
   1f368:	mov	w7, #0x0                   	// #0
   1f36c:	cmp	w3, #0x6c
   1f370:	b.ne	1f2d8 <__sanitizer_set_report_fd@@Base+0x7458>  // b.any
   1f374:	ldrb	w9, [x23, #1]
   1f378:	cmp	w9, #0x6c
   1f37c:	b.ne	1f2d8 <__sanitizer_set_report_fd@@Base+0x7458>  // b.any
   1f380:	cmp	w1, #0x2d
   1f384:	mov	w7, #0x1                   	// #1
   1f388:	ldrb	w3, [x23, #2]
   1f38c:	mov	w6, w7
   1f390:	add	x23, x23, #0x2
   1f394:	mov	w9, w7
   1f398:	ccmp	w8, #0x0, #0x4, ne  // ne = any
   1f39c:	b.eq	1f2ec <__sanitizer_set_report_fd@@Base+0x746c>  // b.none
   1f3a0:	cmp	w3, #0x64
   1f3a4:	b.eq	1f578 <__sanitizer_set_report_fd@@Base+0x76f8>  // b.none
   1f3a8:	b.hi	1f43c <__sanitizer_set_report_fd@@Base+0x75bc>  // b.pmore
   1f3ac:	cmp	w3, #0x58
   1f3b0:	b.eq	1f52c <__sanitizer_set_report_fd@@Base+0x76ac>  // b.none
   1f3b4:	cmp	w3, #0x63
   1f3b8:	b.ne	1f4c4 <__sanitizer_set_report_fd@@Base+0x7644>  // b.any
   1f3bc:	cbnz	w6, 1f500 <__sanitizer_set_report_fd@@Base+0x7680>
   1f3c0:	tbnz	w26, #31, 1f6c4 <__sanitizer_set_report_fd@@Base+0x7844>
   1f3c4:	add	x0, x25, #0xb
   1f3c8:	mov	x1, x25
   1f3cc:	and	x25, x0, #0xfffffffffffffff8
   1f3d0:	ldr	x0, [sp, #104]
   1f3d4:	cmp	x28, x0
   1f3d8:	b.ls	1f3f0 <__sanitizer_set_report_fd@@Base+0x7570>  // b.plast
   1f3dc:	ldr	w1, [x1]
   1f3e0:	strb	w1, [x0]
   1f3e4:	ldr	x0, [sp, #104]
   1f3e8:	add	x0, x0, #0x1
   1f3ec:	str	x0, [sp, #104]
   1f3f0:	add	w24, w24, #0x1
   1f3f4:	add	x2, x23, #0x1
   1f3f8:	ldrb	w4, [x23, #1]
   1f3fc:	cbnz	w4, 1f264 <__sanitizer_set_report_fd@@Base+0x73e4>
   1f400:	ldp	x21, x22, [sp, #16]
   1f404:	ldp	x25, x26, [sp, #48]
   1f408:	ldr	x0, [sp, #104]
   1f40c:	cmp	x28, x0
   1f410:	b.cc	1f8f4 <__sanitizer_set_report_fd@@Base+0x7a74>  // b.lo, b.ul, b.last
   1f414:	add	x19, x20, x19
   1f418:	cmp	x0, x19
   1f41c:	b.cs	1f424 <__sanitizer_set_report_fd@@Base+0x75a4>  // b.hs, b.nlast
   1f420:	strb	wzr, [x0]
   1f424:	mov	w0, w24
   1f428:	ldp	x23, x24, [sp, #32]
   1f42c:	ldp	x27, x28, [sp, #64]
   1f430:	ldr	x30, [sp, #80]
   1f434:	ldp	x19, x20, [sp], #112
   1f438:	ret
   1f43c:	cmp	w3, #0x70
   1f440:	b.ne	1f4f8 <__sanitizer_set_report_fd@@Base+0x7678>  // b.any
   1f444:	cbnz	w6, 1f500 <__sanitizer_set_report_fd@@Base+0x7680>
   1f448:	tbnz	w26, #31, 1f6e4 <__sanitizer_set_report_fd@@Base+0x7864>
   1f44c:	add	x0, x25, #0xf
   1f450:	mov	x2, x25
   1f454:	and	x25, x0, #0xfffffffffffffff8
   1f458:	ldr	x2, [x2]
   1f45c:	add	x1, x21, #0xf80
   1f460:	ldr	x0, [sp, #104]
   1f464:	mov	w3, #0x30                  	// #48
   1f468:	cmp	x28, x0
   1f46c:	b.ls	1f704 <__sanitizer_set_report_fd@@Base+0x7884>  // b.plast
   1f470:	strb	w3, [x0]
   1f474:	add	w8, w27, w1
   1f478:	ldrb	w3, [x1, #1]!
   1f47c:	ldr	x0, [sp, #104]
   1f480:	add	x0, x0, #0x1
   1f484:	str	x0, [sp, #104]
   1f488:	cbnz	w3, 1f468 <__sanitizer_set_report_fd@@Base+0x75e8>
   1f48c:	mov	x1, x28
   1f490:	add	x0, sp, #0x68
   1f494:	mov	w7, #0x0                   	// #0
   1f498:	mov	w6, #0x0                   	// #0
   1f49c:	mov	w5, #0x1                   	// #1
   1f4a0:	mov	w4, #0xc                   	// #12
   1f4a4:	mov	w3, #0x10                  	// #16
   1f4a8:	str	w8, [sp, #100]
   1f4ac:	bl	1ef48 <__sanitizer_set_report_fd@@Base+0x70c8>
   1f4b0:	ldr	w8, [sp, #100]
   1f4b4:	add	x2, x23, #0x1
   1f4b8:	add	w8, w0, w8
   1f4bc:	add	w24, w24, w8
   1f4c0:	b	1f25c <__sanitizer_set_report_fd@@Base+0x73dc>
   1f4c4:	cmp	w3, #0x25
   1f4c8:	b.ne	1f500 <__sanitizer_set_report_fd@@Base+0x7680>  // b.any
   1f4cc:	cbnz	w6, 1f500 <__sanitizer_set_report_fd@@Base+0x7680>
   1f4d0:	ldr	x0, [sp, #104]
   1f4d4:	cmp	x28, x0
   1f4d8:	b.ls	1f3f0 <__sanitizer_set_report_fd@@Base+0x7570>  // b.plast
   1f4dc:	strb	w3, [x0]
   1f4e0:	add	w24, w24, #0x1
   1f4e4:	add	x2, x23, #0x1
   1f4e8:	ldr	x0, [sp, #104]
   1f4ec:	add	x0, x0, #0x1
   1f4f0:	str	x0, [sp, #104]
   1f4f4:	b	1f3f8 <__sanitizer_set_report_fd@@Base+0x7578>
   1f4f8:	cmp	w3, #0x6f
   1f4fc:	b.hi	1f510 <__sanitizer_set_report_fd@@Base+0x7690>  // b.pmore
   1f500:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   1f504:	add	x0, x0, #0x40
   1f508:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   1f50c:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   1f510:	cmp	w3, #0x78
   1f514:	b.eq	1f52c <__sanitizer_set_report_fd@@Base+0x76ac>  // b.none
   1f518:	b.hi	1f500 <__sanitizer_set_report_fd@@Base+0x7680>  // b.pmore
   1f51c:	cmp	w3, #0x73
   1f520:	b.eq	1f5a8 <__sanitizer_set_report_fd@@Base+0x7728>  // b.none
   1f524:	cmp	w3, #0x75
   1f528:	b.ne	1f500 <__sanitizer_set_report_fd@@Base+0x7680>  // b.any
   1f52c:	cbz	w9, 1f68c <__sanitizer_set_report_fd@@Base+0x780c>
   1f530:	tbnz	w26, #31, 1f7d0 <__sanitizer_set_report_fd@@Base+0x7950>
   1f534:	add	x1, x25, #0xf
   1f538:	mov	x0, x25
   1f53c:	and	x25, x1, #0xfffffffffffffff8
   1f540:	ldr	x2, [x0]
   1f544:	cmp	w3, #0x58
   1f548:	cset	w7, eq  // eq = none
   1f54c:	cmp	w3, #0x75
   1f550:	mov	w0, #0x10                  	// #16
   1f554:	mov	w3, #0xa                   	// #10
   1f558:	csel	w3, w3, w0, eq  // eq = none
   1f55c:	mov	w6, #0x0                   	// #0
   1f560:	mov	x1, x28
   1f564:	add	x0, sp, #0x68
   1f568:	bl	1ef48 <__sanitizer_set_report_fd@@Base+0x70c8>
   1f56c:	add	w24, w24, w0
   1f570:	add	x2, x23, #0x1
   1f574:	b	1f25c <__sanitizer_set_report_fd@@Base+0x73dc>
   1f578:	cbz	w9, 1f6a8 <__sanitizer_set_report_fd@@Base+0x7828>
   1f57c:	tbnz	w26, #31, 1f7f0 <__sanitizer_set_report_fd@@Base+0x7970>
   1f580:	add	x1, x25, #0xf
   1f584:	mov	x0, x25
   1f588:	and	x25, x1, #0xfffffffffffffff8
   1f58c:	ldr	x6, [x0]
   1f590:	cmp	x6, #0x0
   1f594:	cneg	x2, x6, lt  // lt = tstop
   1f598:	mov	w7, #0x0                   	// #0
   1f59c:	lsr	x6, x6, #63
   1f5a0:	mov	w3, #0xa                   	// #10
   1f5a4:	b	1f560 <__sanitizer_set_report_fd@@Base+0x76e0>
   1f5a8:	cbnz	w7, 1f500 <__sanitizer_set_report_fd@@Base+0x7680>
   1f5ac:	cmp	w1, #0x2d
   1f5b0:	ccmp	w0, #0x9, #0x2, ne  // ne = any
   1f5b4:	b.ls	1f754 <__sanitizer_set_report_fd@@Base+0x78d4>  // b.plast
   1f5b8:	cmp	w1, #0x2d
   1f5bc:	cneg	w4, w4, eq  // eq = none
   1f5c0:	tbnz	w26, #31, 1f77c <__sanitizer_set_report_fd@@Base+0x78fc>
   1f5c4:	add	x1, x25, #0xf
   1f5c8:	mov	x0, x25
   1f5cc:	and	x25, x1, #0xfffffffffffffff8
   1f5d0:	ldr	x5, [x0]
   1f5d4:	cbz	x5, 1f7a0 <__sanitizer_set_report_fd@@Base+0x7920>
   1f5d8:	ldrb	w3, [x5]
   1f5dc:	cbz	w3, 1f8d8 <__sanitizer_set_report_fd@@Base+0x7a58>
   1f5e0:	cbz	w2, 1f8e4 <__sanitizer_set_report_fd@@Base+0x7a64>
   1f5e4:	mov	w6, #0x0                   	// #0
   1f5e8:	ldr	x0, [sp, #104]
   1f5ec:	b	1f5fc <__sanitizer_set_report_fd@@Base+0x777c>
   1f5f0:	cmp	w1, w2
   1f5f4:	b.eq	1f774 <__sanitizer_set_report_fd@@Base+0x78f4>  // b.none
   1f5f8:	mov	w6, w1
   1f5fc:	cmp	x28, x0
   1f600:	b.ls	1f614 <__sanitizer_set_report_fd@@Base+0x7794>  // b.plast
   1f604:	strb	w3, [x0]
   1f608:	ldr	x0, [sp, #104]
   1f60c:	add	x0, x0, #0x1
   1f610:	str	x0, [sp, #104]
   1f614:	ldrb	w3, [x5, #1]!
   1f618:	add	w1, w6, #0x1
   1f61c:	cbnz	w3, 1f5f0 <__sanitizer_set_report_fd@@Base+0x7770>
   1f620:	mvn	w6, w6
   1f624:	mov	w2, w1
   1f628:	cmp	w4, w6
   1f62c:	b.ge	1f680 <__sanitizer_set_report_fd@@Base+0x7800>  // b.tcont
   1f630:	ldr	x0, [sp, #104]
   1f634:	mov	w1, w2
   1f638:	mov	w5, #0x20                  	// #32
   1f63c:	nop
   1f640:	cmp	x28, x0
   1f644:	b.ls	1f658 <__sanitizer_set_report_fd@@Base+0x77d8>  // b.plast
   1f648:	strb	w5, [x0]
   1f64c:	ldr	x0, [sp, #104]
   1f650:	add	x0, x0, #0x1
   1f654:	str	x0, [sp, #104]
   1f658:	add	w1, w1, #0x1
   1f65c:	neg	w3, w1
   1f660:	cmp	w4, w3
   1f664:	b.lt	1f640 <__sanitizer_set_report_fd@@Base+0x77c0>  // b.tstop
   1f668:	mvn	w0, w2
   1f66c:	add	w2, w2, #0x1
   1f670:	cmp	w4, w0
   1f674:	sub	w4, w0, w4
   1f678:	csel	w4, w4, wzr, le
   1f67c:	add	w2, w4, w2
   1f680:	add	w24, w24, w2
   1f684:	add	x2, x23, #0x1
   1f688:	b	1f25c <__sanitizer_set_report_fd@@Base+0x73dc>
   1f68c:	cbnz	w7, 1f530 <__sanitizer_set_report_fd@@Base+0x76b0>
   1f690:	tbnz	w26, #31, 1f870 <__sanitizer_set_report_fd@@Base+0x79f0>
   1f694:	mov	x0, x25
   1f698:	add	x1, x25, #0xb
   1f69c:	and	x25, x1, #0xfffffffffffffff8
   1f6a0:	ldr	w2, [x0]
   1f6a4:	b	1f544 <__sanitizer_set_report_fd@@Base+0x76c4>
   1f6a8:	cbnz	w7, 1f57c <__sanitizer_set_report_fd@@Base+0x76fc>
   1f6ac:	tbnz	w26, #31, 1f84c <__sanitizer_set_report_fd@@Base+0x79cc>
   1f6b0:	mov	x0, x25
   1f6b4:	add	x1, x25, #0xb
   1f6b8:	and	x25, x1, #0xfffffffffffffff8
   1f6bc:	ldrsw	x6, [x0]
   1f6c0:	b	1f590 <__sanitizer_set_report_fd@@Base+0x7710>
   1f6c4:	add	w0, w26, #0x8
   1f6c8:	cmp	w0, #0x0
   1f6cc:	b.le	1f73c <__sanitizer_set_report_fd@@Base+0x78bc>
   1f6d0:	add	x2, x25, #0xb
   1f6d4:	mov	x1, x25
   1f6d8:	mov	w26, w0
   1f6dc:	and	x25, x2, #0xfffffffffffffff8
   1f6e0:	b	1f3d0 <__sanitizer_set_report_fd@@Base+0x7550>
   1f6e4:	add	w0, w26, #0x8
   1f6e8:	cmp	w0, #0x0
   1f6ec:	b.le	1f748 <__sanitizer_set_report_fd@@Base+0x78c8>
   1f6f0:	add	x1, x25, #0xf
   1f6f4:	mov	x2, x25
   1f6f8:	mov	w26, w0
   1f6fc:	and	x25, x1, #0xfffffffffffffff8
   1f700:	b	1f458 <__sanitizer_set_report_fd@@Base+0x75d8>
   1f704:	add	w8, w27, w1
   1f708:	ldrb	w3, [x1, #1]!
   1f70c:	cbnz	w3, 1f468 <__sanitizer_set_report_fd@@Base+0x75e8>
   1f710:	b	1f48c <__sanitizer_set_report_fd@@Base+0x760c>
   1f714:	add	x7, x23, #0x2
   1f718:	tbnz	w26, #31, 1f7b0 <__sanitizer_set_report_fd@@Base+0x7930>
   1f71c:	add	x3, x25, #0xb
   1f720:	mov	x2, x25
   1f724:	and	x25, x3, #0xfffffffffffffff8
   1f728:	ldr	w2, [x2]
   1f72c:	ldrb	w3, [x23, #2]
   1f730:	mov	x23, x7
   1f734:	lsr	w8, w2, #31
   1f738:	b	1f2bc <__sanitizer_set_report_fd@@Base+0x743c>
   1f73c:	add	x1, x22, w26, sxtw
   1f740:	mov	w26, w0
   1f744:	b	1f3d0 <__sanitizer_set_report_fd@@Base+0x7550>
   1f748:	add	x2, x22, w26, sxtw
   1f74c:	mov	w26, w0
   1f750:	b	1f458 <__sanitizer_set_report_fd@@Base+0x75d8>
   1f754:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   1f758:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1f75c:	add	x2, x2, #0x98
   1f760:	add	x0, x0, #0xfe8
   1f764:	mov	x4, #0x0                   	// #0
   1f768:	mov	x3, #0x0                   	// #0
   1f76c:	mov	w1, #0xc7                  	// #199
   1f770:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   1f774:	neg	w6, w2
   1f778:	b	1f628 <__sanitizer_set_report_fd@@Base+0x77a8>
   1f77c:	add	w1, w26, #0x8
   1f780:	cmp	w1, #0x0
   1f784:	b.le	1f840 <__sanitizer_set_report_fd@@Base+0x79c0>
   1f788:	mov	x0, x25
   1f78c:	add	x3, x25, #0xf
   1f790:	mov	w26, w1
   1f794:	and	x25, x3, #0xfffffffffffffff8
   1f798:	ldr	x5, [x0]
   1f79c:	cbnz	x5, 1f5d8 <__sanitizer_set_report_fd@@Base+0x7758>
   1f7a0:	adrp	x5, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1f7a4:	mov	w3, #0x3c                  	// #60
   1f7a8:	add	x5, x5, #0xf88
   1f7ac:	b	1f5e0 <__sanitizer_set_report_fd@@Base+0x7760>
   1f7b0:	add	w3, w26, #0x8
   1f7b4:	cmp	w3, #0x0
   1f7b8:	b.le	1f894 <__sanitizer_set_report_fd@@Base+0x7a14>
   1f7bc:	add	x8, x25, #0xb
   1f7c0:	mov	x2, x25
   1f7c4:	mov	w26, w3
   1f7c8:	and	x25, x8, #0xfffffffffffffff8
   1f7cc:	b	1f728 <__sanitizer_set_report_fd@@Base+0x78a8>
   1f7d0:	add	w1, w26, #0x8
   1f7d4:	cmp	w1, #0x0
   1f7d8:	b.le	1f8a0 <__sanitizer_set_report_fd@@Base+0x7a20>
   1f7dc:	add	x2, x25, #0xf
   1f7e0:	mov	x0, x25
   1f7e4:	mov	w26, w1
   1f7e8:	and	x25, x2, #0xfffffffffffffff8
   1f7ec:	b	1f540 <__sanitizer_set_report_fd@@Base+0x76c0>
   1f7f0:	add	w1, w26, #0x8
   1f7f4:	cmp	w1, #0x0
   1f7f8:	b.le	1f8ac <__sanitizer_set_report_fd@@Base+0x7a2c>
   1f7fc:	add	x2, x25, #0xf
   1f800:	mov	x0, x25
   1f804:	mov	w26, w1
   1f808:	and	x25, x2, #0xfffffffffffffff8
   1f80c:	b	1f58c <__sanitizer_set_report_fd@@Base+0x770c>
   1f810:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1f814:	add	x0, x0, #0xf90
   1f818:	stp	x21, x22, [sp, #16]
   1f81c:	stp	x25, x26, [sp, #48]
   1f820:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   1f824:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   1f828:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1f82c:	add	x0, x0, #0xf98
   1f830:	stp	x21, x22, [sp, #16]
   1f834:	stp	x25, x26, [sp, #48]
   1f838:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   1f83c:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   1f840:	add	x0, x22, w26, sxtw
   1f844:	mov	w26, w1
   1f848:	b	1f5d0 <__sanitizer_set_report_fd@@Base+0x7750>
   1f84c:	add	w1, w26, #0x8
   1f850:	cmp	w1, #0x0
   1f854:	b.le	1f8b8 <__sanitizer_set_report_fd@@Base+0x7a38>
   1f858:	mov	x0, x25
   1f85c:	add	x2, x25, #0xb
   1f860:	mov	w26, w1
   1f864:	and	x25, x2, #0xfffffffffffffff8
   1f868:	ldrsw	x6, [x0]
   1f86c:	b	1f590 <__sanitizer_set_report_fd@@Base+0x7710>
   1f870:	add	w1, w26, #0x8
   1f874:	cmp	w1, #0x0
   1f878:	b.le	1f8c8 <__sanitizer_set_report_fd@@Base+0x7a48>
   1f87c:	mov	x0, x25
   1f880:	add	x2, x25, #0xb
   1f884:	and	x25, x2, #0xfffffffffffffff8
   1f888:	mov	w26, w1
   1f88c:	ldr	w2, [x0]
   1f890:	b	1f544 <__sanitizer_set_report_fd@@Base+0x76c4>
   1f894:	add	x2, x22, w26, sxtw
   1f898:	mov	w26, w3
   1f89c:	b	1f728 <__sanitizer_set_report_fd@@Base+0x78a8>
   1f8a0:	add	x0, x22, w26, sxtw
   1f8a4:	mov	w26, w1
   1f8a8:	b	1f540 <__sanitizer_set_report_fd@@Base+0x76c0>
   1f8ac:	add	x0, x22, w26, sxtw
   1f8b0:	mov	w26, w1
   1f8b4:	b	1f58c <__sanitizer_set_report_fd@@Base+0x770c>
   1f8b8:	add	x0, x22, w26, sxtw
   1f8bc:	mov	w26, w1
   1f8c0:	ldrsw	x6, [x0]
   1f8c4:	b	1f590 <__sanitizer_set_report_fd@@Base+0x7710>
   1f8c8:	add	x0, x22, w26, sxtw
   1f8cc:	mov	w26, w1
   1f8d0:	ldr	w2, [x0]
   1f8d4:	b	1f544 <__sanitizer_set_report_fd@@Base+0x76c4>
   1f8d8:	mov	w6, #0x0                   	// #0
   1f8dc:	mov	w2, #0x0                   	// #0
   1f8e0:	b	1f628 <__sanitizer_set_report_fd@@Base+0x77a8>
   1f8e4:	mov	w6, #0x0                   	// #0
   1f8e8:	b	1f628 <__sanitizer_set_report_fd@@Base+0x77a8>
   1f8ec:	mov	w24, #0x0                   	// #0
   1f8f0:	b	1f40c <__sanitizer_set_report_fd@@Base+0x758c>
   1f8f4:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   1f8f8:	add	x0, x0, #0xc8
   1f8fc:	stp	x21, x22, [sp, #16]
   1f900:	stp	x25, x26, [sp, #48]
   1f904:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   1f908:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   1f90c:	nop
   1f910:	adrp	x1, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   1f914:	str	x0, [x1, #1800]
   1f918:	ret
   1f91c:	nop

000000000001f920 <__sanitizer_on_print@@Base>:
   1f920:	ret
   1f924:	nop
   1f928:	sub	sp, sp, #0x100
   1f92c:	mov	w9, #0xffffffd8            	// #-40
   1f930:	add	x10, sp, #0xd0
   1f934:	add	x11, sp, #0x100
   1f938:	mov	w8, #0xffffff80            	// #-128
   1f93c:	stp	x11, x11, [sp, #48]
   1f940:	str	x10, [sp, #64]
   1f944:	stp	w9, w8, [sp, #72]
   1f948:	ldp	x10, x11, [sp, #48]
   1f94c:	str	x30, [sp]
   1f950:	ldp	x8, x9, [sp, #64]
   1f954:	stp	x10, x11, [sp, #16]
   1f958:	stp	x8, x9, [sp, #32]
   1f95c:	str	q0, [sp, #80]
   1f960:	str	q1, [sp, #96]
   1f964:	str	q2, [sp, #112]
   1f968:	str	q3, [sp, #128]
   1f96c:	str	q4, [sp, #144]
   1f970:	str	q5, [sp, #160]
   1f974:	str	q6, [sp, #176]
   1f978:	str	q7, [sp, #192]
   1f97c:	stp	x3, x4, [sp, #216]
   1f980:	add	x3, sp, #0x10
   1f984:	stp	x5, x6, [sp, #232]
   1f988:	str	x7, [sp, #248]
   1f98c:	bl	1f1d0 <__sanitizer_set_report_fd@@Base+0x7350>
   1f990:	ldr	x30, [sp]
   1f994:	add	sp, sp, #0x100
   1f998:	ret
   1f99c:	nop
   1f9a0:	stp	x19, x20, [sp, #-176]!
   1f9a4:	and	w0, w0, #0xff
   1f9a8:	mov	x19, x1
   1f9ac:	stp	x23, x24, [sp, #32]
   1f9b0:	adrp	x23, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   1f9b4:	adrp	x24, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   1f9b8:	stp	x27, x28, [sp, #64]
   1f9bc:	mov	x27, x3
   1f9c0:	add	x24, x24, #0x110
   1f9c4:	ldr	x23, [x23, #4056]
   1f9c8:	stp	x21, x22, [sp, #16]
   1f9cc:	mov	x21, x1
   1f9d0:	mov	x22, x2
   1f9d4:	stp	x25, x26, [sp, #48]
   1f9d8:	add	x25, sp, #0x70
   1f9dc:	str	w0, [sp, #104]
   1f9e0:	mov	w26, #0x0                   	// #0
   1f9e4:	ldp	x2, x3, [x3]
   1f9e8:	mov	w20, #0x190                 	// #400
   1f9ec:	ldp	x0, x1, [x27, #16]
   1f9f0:	str	x30, [sp, #80]
   1f9f4:	stp	x2, x3, [sp, #144]
   1f9f8:	stp	x0, x1, [sp, #160]
   1f9fc:	ldr	w0, [sp, #104]
   1fa00:	cbz	w0, 1fa60 <__sanitizer_on_print@@Base+0x140>
   1fa04:	bl	1c7f8 <__sanitizer_set_report_fd@@Base+0x4978>
   1fa08:	mov	x28, x0
   1fa0c:	bl	14ea8 <_ZdaPvRKSt9nothrow_t@@Base+0x3128>
   1fa10:	cmp	x0, #0x0
   1fa14:	ldrb	w2, [x23, #48]
   1fa18:	cset	w6, ne  // ne = any
   1fa1c:	mov	x3, x0
   1fa20:	sxtw	x1, w20
   1fa24:	mov	x0, x19
   1fa28:	tst	w6, w2
   1fa2c:	mov	w5, #0x0                   	// #0
   1fa30:	b.ne	1fb7c <__sanitizer_on_print@@Base+0x25c>  // b.any
   1fa34:	mov	w3, w28
   1fa38:	mov	x2, x24
   1fa3c:	str	w5, [sp, #108]
   1fa40:	bl	1f928 <__sanitizer_on_print@@Base+0x8>
   1fa44:	ldr	w5, [sp, #108]
   1fa48:	add	w28, w5, w0
   1fa4c:	cmp	w20, w28
   1fa50:	b.le	1facc <__sanitizer_on_print@@Base+0x1ac>
   1fa54:	add	x0, x19, w28, sxtw
   1fa58:	sub	w1, w20, w28
   1fa5c:	b	1fa6c <__sanitizer_on_print@@Base+0x14c>
   1fa60:	mov	w1, w20
   1fa64:	mov	x0, x19
   1fa68:	mov	w28, #0x0                   	// #0
   1fa6c:	ldp	x6, x7, [x27]
   1fa70:	mov	x3, x25
   1fa74:	ldp	x8, x9, [x27, #16]
   1fa78:	mov	x2, x22
   1fa7c:	stp	x6, x7, [x25]
   1fa80:	stp	x8, x9, [x25, #16]
   1fa84:	bl	1f1d0 <__sanitizer_set_report_fd@@Base+0x7350>
   1fa88:	add	w0, w28, w0
   1fa8c:	cmp	w20, w0
   1fa90:	b.gt	1fb18 <__sanitizer_on_print@@Base+0x1f8>
   1fa94:	cbnz	w26, 1fb0c <__sanitizer_on_print@@Base+0x1ec>
   1fa98:	ldp	x2, x3, [sp, #160]
   1fa9c:	stp	x2, x3, [x27, #16]
   1faa0:	mov	w26, #0x1                   	// #1
   1faa4:	ldp	x0, x1, [sp, #144]
   1faa8:	stp	x0, x1, [x27]
   1faac:	mov	w2, #0x0                   	// #0
   1fab0:	mov	w20, #0x4000                	// #16384
   1fab4:	adrp	x1, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   1fab8:	mov	x0, #0x4000                	// #16384
   1fabc:	add	x1, x1, #0xe0
   1fac0:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   1fac4:	mov	x19, x0
   1fac8:	b	1f9fc <__sanitizer_on_print@@Base+0xdc>
   1facc:	cbz	w26, 1fa98 <__sanitizer_on_print@@Base+0x178>
   1fad0:	mov	w0, #0x3fff                	// #16383
   1fad4:	cmp	w28, w0
   1fad8:	b.gt	1fba4 <__sanitizer_on_print@@Base+0x284>
   1fadc:	ldp	x6, x7, [x27]
   1fae0:	mov	x2, x22
   1fae4:	ldp	x4, x5, [x27, #16]
   1fae8:	add	x3, sp, #0x70
   1faec:	sub	w1, w20, w28
   1faf0:	add	x0, x19, w28, sxtw
   1faf4:	stp	x6, x7, [sp, #112]
   1faf8:	stp	x4, x5, [sp, #128]
   1fafc:	bl	1f1d0 <__sanitizer_set_report_fd@@Base+0x7350>
   1fb00:	add	w0, w28, w0
   1fb04:	cmp	w20, w0
   1fb08:	b.gt	1fb18 <__sanitizer_on_print@@Base+0x1f8>
   1fb0c:	mov	w1, #0x3fff                	// #16383
   1fb10:	cmp	w0, w1
   1fb14:	b.gt	1fba4 <__sanitizer_on_print@@Base+0x284>
   1fb18:	mov	x0, x19
   1fb1c:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   1fb20:	mov	x0, x19
   1fb24:	bl	14990 <_ZdaPvRKSt9nothrow_t@@Base+0x2c10>
   1fb28:	mov	x0, x19
   1fb2c:	bl	61e0 <__sanitizer_on_print@plt>
   1fb30:	adrp	x0, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   1fb34:	ldr	x1, [x0, #1800]
   1fb38:	cbz	x1, 1fb44 <__sanitizer_on_print@@Base+0x224>
   1fb3c:	mov	x0, x19
   1fb40:	blr	x1
   1fb44:	mov	x0, x19
   1fb48:	bl	24350 <__sanitizer_sandbox_on_notify@@Base+0xd08>
   1fb4c:	cmp	x19, x21
   1fb50:	b.eq	1fb60 <__sanitizer_on_print@@Base+0x240>  // b.none
   1fb54:	sxtw	x1, w20
   1fb58:	mov	x0, x19
   1fb5c:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   1fb60:	ldp	x21, x22, [sp, #16]
   1fb64:	ldp	x23, x24, [sp, #32]
   1fb68:	ldp	x25, x26, [sp, #48]
   1fb6c:	ldp	x27, x28, [sp, #64]
   1fb70:	ldr	x30, [sp, #80]
   1fb74:	ldp	x19, x20, [sp], #176
   1fb78:	ret
   1fb7c:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   1fb80:	add	x2, x2, #0xe8
   1fb84:	bl	1f928 <__sanitizer_on_print@@Base+0x8>
   1fb88:	mov	w5, w0
   1fb8c:	cmp	w20, w0
   1fb90:	b.le	1fbb4 <__sanitizer_on_print@@Base+0x294>
   1fb94:	sub	w1, w20, w0
   1fb98:	add	x0, x19, w0, sxtw
   1fb9c:	sxtw	x1, w1
   1fba0:	b	1fa34 <__sanitizer_on_print@@Base+0x114>
   1fba4:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   1fba8:	add	x0, x0, #0xf0
   1fbac:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   1fbb0:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   1fbb4:	cbz	w26, 1fa98 <__sanitizer_on_print@@Base+0x178>
   1fbb8:	mov	w0, #0x3fff                	// #16383
   1fbbc:	cmp	w5, w0
   1fbc0:	b.gt	1fba4 <__sanitizer_on_print@@Base+0x284>
   1fbc4:	sub	w1, w20, w5
   1fbc8:	mov	w3, w28
   1fbcc:	add	x0, x19, w5, sxtw
   1fbd0:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   1fbd4:	sxtw	x1, w1
   1fbd8:	add	x2, x2, #0x110
   1fbdc:	str	w5, [sp, #104]
   1fbe0:	bl	1f928 <__sanitizer_on_print@@Base+0x8>
   1fbe4:	ldr	w5, [sp, #104]
   1fbe8:	add	w28, w5, w0
   1fbec:	cmp	w20, w28
   1fbf0:	b.le	1fad0 <__sanitizer_on_print@@Base+0x1b0>
   1fbf4:	b	1fadc <__sanitizer_on_print@@Base+0x1bc>
   1fbf8:	mov	x4, x2
   1fbfc:	sub	sp, sp, #0x1c0
   1fc00:	mov	x2, x1
   1fc04:	add	x3, sp, #0x10
   1fc08:	add	x1, sp, #0x30
   1fc0c:	ldp	x6, x7, [x4]
   1fc10:	stp	x6, x7, [sp, #16]
   1fc14:	ldp	x4, x5, [x4, #16]
   1fc18:	str	x30, [sp]
   1fc1c:	stp	x4, x5, [sp, #32]
   1fc20:	bl	1f9a0 <__sanitizer_on_print@@Base+0x80>
   1fc24:	ldr	x30, [sp]
   1fc28:	add	sp, sp, #0x1c0
   1fc2c:	ret
   1fc30:	sub	sp, sp, #0x110
   1fc34:	mov	w9, #0xffffffc8            	// #-56
   1fc38:	add	x11, sp, #0xd0
   1fc3c:	add	x10, sp, #0x110
   1fc40:	mov	w8, #0xffffff80            	// #-128
   1fc44:	stp	x10, x10, [sp, #48]
   1fc48:	mov	x10, x0
   1fc4c:	mov	w0, #0x0                   	// #0
   1fc50:	str	x11, [sp, #64]
   1fc54:	stp	w9, w8, [sp, #72]
   1fc58:	ldp	x12, x13, [sp, #48]
   1fc5c:	str	x30, [sp]
   1fc60:	ldp	x8, x9, [sp, #64]
   1fc64:	stp	x12, x13, [sp, #16]
   1fc68:	stp	x8, x9, [sp, #32]
   1fc6c:	str	q0, [sp, #80]
   1fc70:	str	q1, [sp, #96]
   1fc74:	str	q2, [sp, #112]
   1fc78:	str	q3, [sp, #128]
   1fc7c:	str	q4, [sp, #144]
   1fc80:	str	q5, [sp, #160]
   1fc84:	str	q6, [sp, #176]
   1fc88:	str	q7, [sp, #192]
   1fc8c:	stp	x1, x2, [sp, #216]
   1fc90:	add	x2, sp, #0x10
   1fc94:	mov	x1, x10
   1fc98:	stp	x3, x4, [sp, #232]
   1fc9c:	stp	x5, x6, [sp, #248]
   1fca0:	str	x7, [sp, #264]
   1fca4:	bl	1fbf8 <__sanitizer_on_print@@Base+0x2d8>
   1fca8:	ldr	x30, [sp]
   1fcac:	add	sp, sp, #0x110
   1fcb0:	ret
   1fcb4:	nop
   1fcb8:	sub	sp, sp, #0x110
   1fcbc:	mov	w9, #0xffffffc8            	// #-56
   1fcc0:	add	x11, sp, #0xd0
   1fcc4:	add	x10, sp, #0x110
   1fcc8:	mov	w8, #0xffffff80            	// #-128
   1fccc:	stp	x10, x10, [sp, #48]
   1fcd0:	mov	x10, x0
   1fcd4:	mov	w0, #0x1                   	// #1
   1fcd8:	str	x11, [sp, #64]
   1fcdc:	stp	w9, w8, [sp, #72]
   1fce0:	ldp	x12, x13, [sp, #48]
   1fce4:	str	x30, [sp]
   1fce8:	ldp	x8, x9, [sp, #64]
   1fcec:	stp	x12, x13, [sp, #16]
   1fcf0:	stp	x8, x9, [sp, #32]
   1fcf4:	str	q0, [sp, #80]
   1fcf8:	str	q1, [sp, #96]
   1fcfc:	str	q2, [sp, #112]
   1fd00:	str	q3, [sp, #128]
   1fd04:	str	q4, [sp, #144]
   1fd08:	str	q5, [sp, #160]
   1fd0c:	str	q6, [sp, #176]
   1fd10:	str	q7, [sp, #192]
   1fd14:	stp	x1, x2, [sp, #216]
   1fd18:	add	x2, sp, #0x10
   1fd1c:	mov	x1, x10
   1fd20:	stp	x3, x4, [sp, #232]
   1fd24:	stp	x5, x6, [sp, #248]
   1fd28:	str	x7, [sp, #264]
   1fd2c:	bl	1fbf8 <__sanitizer_on_print@@Base+0x2d8>
   1fd30:	ldr	x30, [sp]
   1fd34:	add	sp, sp, #0x110
   1fd38:	ret
   1fd3c:	nop
   1fd40:	stp	x19, x30, [sp, #-256]!
   1fd44:	mov	x19, x0
   1fd48:	str	q0, [sp, #80]
   1fd4c:	str	q1, [sp, #96]
   1fd50:	ldr	x8, [x0, #16]
   1fd54:	str	q2, [sp, #112]
   1fd58:	ldr	x0, [x0, #24]
   1fd5c:	str	q3, [sp, #128]
   1fd60:	str	q4, [sp, #144]
   1fd64:	cmp	x0, x8
   1fd68:	str	q5, [sp, #160]
   1fd6c:	str	q6, [sp, #176]
   1fd70:	str	q7, [sp, #192]
   1fd74:	stp	x2, x3, [sp, #208]
   1fd78:	stp	x4, x5, [sp, #224]
   1fd7c:	stp	x6, x7, [sp, #240]
   1fd80:	b.cs	1fdf4 <__sanitizer_on_print@@Base+0x4d4>  // b.hs, b.nlast
   1fd84:	mov	w4, #0xffffff80            	// #-128
   1fd88:	mov	w3, #0xffffffd0            	// #-48
   1fd8c:	stp	w3, w4, [sp, #72]
   1fd90:	add	x5, sp, #0xd0
   1fd94:	ldr	x4, [x19]
   1fd98:	add	x2, sp, #0x100
   1fd9c:	stp	x2, x2, [sp, #48]
   1fda0:	mov	x2, x1
   1fda4:	sub	w1, w8, w0
   1fda8:	str	x5, [sp, #64]
   1fdac:	add	x0, x4, x0
   1fdb0:	ldp	x6, x7, [sp, #48]
   1fdb4:	add	x3, sp, #0x10
   1fdb8:	ldp	x4, x5, [sp, #64]
   1fdbc:	stp	x6, x7, [sp, #16]
   1fdc0:	stp	x4, x5, [sp, #32]
   1fdc4:	bl	1f1d0 <__sanitizer_set_report_fd@@Base+0x7350>
   1fdc8:	ldr	x1, [x19]
   1fdcc:	ldr	x0, [x19, #24]
   1fdd0:	add	x0, x1, x0
   1fdd4:	bl	1a690 <__sanitizer_set_report_fd@@Base+0x2810>
   1fdd8:	ldp	x4, x3, [x19, #16]
   1fddc:	add	x3, x0, x3
   1fde0:	str	x3, [x19, #24]
   1fde4:	cmp	x3, x4
   1fde8:	b.cs	1fe14 <__sanitizer_on_print@@Base+0x4f4>  // b.hs, b.nlast
   1fdec:	ldp	x19, x30, [sp], #256
   1fdf0:	ret
   1fdf4:	mov	x3, x0
   1fdf8:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   1fdfc:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1fe00:	mov	x4, x8
   1fe04:	add	x2, x2, #0x118
   1fe08:	add	x0, x0, #0xfe8
   1fe0c:	mov	w1, #0x15d                 	// #349
   1fe10:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   1fe14:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   1fe18:	adrp	x0, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   1fe1c:	add	x2, x2, #0x118
   1fe20:	add	x0, x0, #0xfe8
   1fe24:	mov	w1, #0x163                 	// #355
   1fe28:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   1fe2c:	nop
   1fe30:	and	w0, w0, #0xff
   1fe34:	sub	w0, w0, #0x30
   1fe38:	and	w0, w0, #0xff
   1fe3c:	cmp	w0, #0xa
   1fe40:	cset	w0, cc  // cc = lo, ul, last
   1fe44:	ret
   1fe48:	ldr	x2, [x0]
   1fe4c:	mov	x3, x0
   1fe50:	ldrb	w1, [x2]
   1fe54:	sub	w1, w1, #0x30
   1fe58:	and	w0, w1, #0xff
   1fe5c:	cmp	w0, #0x9
   1fe60:	mov	x0, #0x0                   	// #0
   1fe64:	b.ls	1fe6c <__sanitizer_on_print@@Base+0x54c>  // b.plast
   1fe68:	ret
   1fe6c:	add	x2, x2, #0x1
   1fe70:	str	x2, [x3]
   1fe74:	sxtw	x4, w1
   1fe78:	add	x0, x0, x0, lsl #2
   1fe7c:	ldrb	w1, [x2]
   1fe80:	add	x0, x4, x0, lsl #1
   1fe84:	sub	w1, w1, #0x30
   1fe88:	and	w4, w1, #0xff
   1fe8c:	cmp	w4, #0x9
   1fe90:	b.ls	1fe6c <__sanitizer_on_print@@Base+0x54c>  // b.plast
   1fe94:	ret
   1fe98:	and	w1, w0, #0xff
   1fe9c:	sub	w0, w1, #0x30
   1fea0:	and	w0, w0, #0xff
   1fea4:	cmp	w0, #0x9
   1fea8:	b.ls	1fed4 <__sanitizer_on_print@@Base+0x5b4>  // b.plast
   1feac:	sub	w2, w1, #0x61
   1feb0:	mov	w0, #0x1                   	// #1
   1feb4:	and	w2, w2, #0xff
   1feb8:	cmp	w2, #0x5
   1febc:	b.ls	1fed0 <__sanitizer_on_print@@Base+0x5b0>  // b.plast
   1fec0:	sub	w1, w1, #0x41
   1fec4:	and	w1, w1, #0xff
   1fec8:	cmp	w1, #0x5
   1fecc:	cset	w0, ls  // ls = plast
   1fed0:	ret
   1fed4:	mov	w0, #0x1                   	// #1
   1fed8:	ret
   1fedc:	nop
   1fee0:	mov	x4, x0
   1fee4:	mov	x0, #0x0                   	// #0
   1fee8:	ldr	x3, [x4]
   1feec:	b	1ff10 <__sanitizer_on_print@@Base+0x5f0>
   1fef0:	cmp	w6, #0x5
   1fef4:	b.ls	1ff40 <__sanitizer_on_print@@Base+0x620>  // b.plast
   1fef8:	cmp	w5, #0x5
   1fefc:	b.hi	1ff48 <__sanitizer_on_print@@Base+0x628>  // b.pmore
   1ff00:	sxtw	x1, w1
   1ff04:	add	x3, x3, #0x1
   1ff08:	add	x0, x1, x0, lsl #4
   1ff0c:	str	x3, [x4]
   1ff10:	ldrb	w2, [x3]
   1ff14:	sub	w7, w2, #0x30
   1ff18:	sub	w6, w2, #0x61
   1ff1c:	sub	w5, w2, #0x41
   1ff20:	and	w8, w7, #0xff
   1ff24:	sub	w1, w2, #0x37
   1ff28:	and	w6, w6, #0xff
   1ff2c:	and	w5, w5, #0xff
   1ff30:	cmp	w8, #0x9
   1ff34:	b.hi	1fef0 <__sanitizer_on_print@@Base+0x5d0>  // b.pmore
   1ff38:	mov	w1, w7
   1ff3c:	b	1ff00 <__sanitizer_on_print@@Base+0x5e0>
   1ff40:	sub	w1, w2, #0x57
   1ff44:	b	1ff00 <__sanitizer_on_print@@Base+0x5e0>
   1ff48:	ret
   1ff4c:	nop
   1ff50:	mov	x2, x0
   1ff54:	mov	x0, x1
   1ff58:	ldr	x1, [x2, #72]
   1ff5c:	cbnz	x1, 1ff7c <__sanitizer_on_print@@Base+0x65c>
   1ff60:	ldr	x1, [x2]
   1ff64:	mov	x5, #0x0                   	// #0
   1ff68:	ldr	x3, [x2, #40]
   1ff6c:	ldr	x2, [x2, #8]
   1ff70:	ubfx	w4, w3, #1, #1
   1ff74:	ubfx	w3, w3, #2, #1
   1ff78:	b	14b58 <_ZdaPvRKSt9nothrow_t@@Base+0x2dd8>
   1ff7c:	str	x30, [sp, #-16]!
   1ff80:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   1ff84:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   1ff88:	add	x2, x2, #0x138
   1ff8c:	add	x0, x0, #0x150
   1ff90:	mov	x4, #0x0                   	// #0
   1ff94:	mov	x3, #0x0                   	// #0
   1ff98:	mov	w1, #0x44                  	// #68
   1ff9c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   1ffa0:	stp	x19, x20, [sp, #-64]!
   1ffa4:	tst	w1, #0xff
   1ffa8:	mov	x19, x0
   1ffac:	str	x30, [sp, #16]
   1ffb0:	b.ne	1ffcc <__sanitizer_on_print@@Base+0x6ac>  // b.any
   1ffb4:	bl	207d0 <__sanitizer_on_print@@Base+0xeb0>
   1ffb8:	ldr	x0, [x19]
   1ffbc:	ldr	x30, [sp, #16]
   1ffc0:	str	x0, [x19, #24]
   1ffc4:	ldp	x19, x20, [sp], #64
   1ffc8:	ret
   1ffcc:	add	x0, sp, #0x28
   1ffd0:	bl	207d0 <__sanitizer_on_print@@Base+0xeb0>
   1ffd4:	ldr	x0, [sp, #48]
   1ffd8:	cbnz	x0, 20050 <__sanitizer_on_print@@Base+0x730>
   1ffdc:	mov	x0, x19
   1ffe0:	bl	207d0 <__sanitizer_on_print@@Base+0xeb0>
   1ffe4:	ldr	x0, [x19, #8]
   1ffe8:	cbnz	x0, 1ffb8 <__sanitizer_on_print@@Base+0x698>
   1ffec:	adrp	x20, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   1fff0:	add	x0, x20, #0x710
   1fff4:	mov	w2, #0x1                   	// #1
   1fff8:	ldxrb	w1, [x0]
   1fffc:	stxrb	w3, w2, [x0]
   20000:	cbnz	w3, 1fff8 <__sanitizer_on_print@@Base+0x6d8>
   20004:	dmb	ish
   20008:	tst	w1, #0xff
   2000c:	b.eq	20014 <__sanitizer_on_print@@Base+0x6f4>  // b.none
   20010:	bl	85d8 <__sanitizer_print_stack_trace@@Base+0x300>
   20014:	add	x0, x20, #0x710
   20018:	add	x2, x0, #0x8
   2001c:	ldr	x1, [x0, #8]
   20020:	cbz	x1, 20034 <__sanitizer_on_print@@Base+0x714>
   20024:	ldp	x0, x1, [x0, #8]
   20028:	stp	x0, x1, [x19]
   2002c:	ldr	x0, [x2, #16]
   20030:	str	x0, [x19, #16]
   20034:	dmb	ish
   20038:	strb	wzr, [x20, #1808]
   2003c:	ldr	x0, [x19]
   20040:	ldr	x30, [sp, #16]
   20044:	str	x0, [x19, #24]
   20048:	ldp	x19, x20, [sp], #64
   2004c:	ret
   20050:	adrp	x20, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   20054:	add	x0, x20, #0x710
   20058:	mov	w2, #0x1                   	// #1
   2005c:	ldxrb	w1, [x0]
   20060:	stxrb	w3, w2, [x0]
   20064:	cbnz	w3, 2005c <__sanitizer_on_print@@Base+0x73c>
   20068:	dmb	ish
   2006c:	tst	w1, #0xff
   20070:	b.eq	20078 <__sanitizer_on_print@@Base+0x758>  // b.none
   20074:	bl	85d8 <__sanitizer_print_stack_trace@@Base+0x300>
   20078:	add	x0, x20, #0x710
   2007c:	ldr	x1, [x0, #16]
   20080:	cbnz	x1, 200b4 <__sanitizer_on_print@@Base+0x794>
   20084:	add	x0, x20, #0x710
   20088:	ldp	x2, x3, [sp, #40]
   2008c:	ldr	x1, [sp, #56]
   20090:	stp	x2, x3, [x0, #8]
   20094:	str	x1, [x0, #24]
   20098:	dmb	ish
   2009c:	strb	wzr, [x20, #1808]
   200a0:	mov	x0, x19
   200a4:	bl	207d0 <__sanitizer_on_print@@Base+0xeb0>
   200a8:	ldr	x0, [x19, #8]
   200ac:	cbnz	x0, 1ffb8 <__sanitizer_on_print@@Base+0x698>
   200b0:	b	1ffec <__sanitizer_on_print@@Base+0x6cc>
   200b4:	ldr	x0, [x0, #8]
   200b8:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   200bc:	b	20084 <__sanitizer_on_print@@Base+0x764>
   200c0:	ldr	x0, [x0, #24]
   200c4:	cmp	x0, #0x0
   200c8:	cset	w0, eq  // eq = none
   200cc:	ret
   200d0:	adrp	x2, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   200d4:	mov	x1, x0
   200d8:	ldr	x0, [x0]
   200dc:	ldr	x2, [x2, #1816]
   200e0:	cmp	x0, x2
   200e4:	b.eq	200f0 <__sanitizer_on_print@@Base+0x7d0>  // b.none
   200e8:	ldr	x1, [x1, #8]
   200ec:	b	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   200f0:	ret
   200f4:	nop
   200f8:	ldr	x1, [x0]
   200fc:	str	x1, [x0, #24]
   20100:	ret
   20104:	nop
   20108:	stp	x19, x30, [sp, #-48]!
   2010c:	add	x0, sp, #0x18
   20110:	bl	207d0 <__sanitizer_on_print@@Base+0xeb0>
   20114:	ldr	x0, [sp, #32]
   20118:	cbnz	x0, 20124 <__sanitizer_on_print@@Base+0x804>
   2011c:	ldp	x19, x30, [sp], #48
   20120:	ret
   20124:	adrp	x19, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   20128:	add	x0, x19, #0x710
   2012c:	mov	w2, #0x1                   	// #1
   20130:	ldxrb	w1, [x0]
   20134:	stxrb	w3, w2, [x0]
   20138:	cbnz	w3, 20130 <__sanitizer_on_print@@Base+0x810>
   2013c:	dmb	ish
   20140:	tst	w1, #0xff
   20144:	b.eq	2014c <__sanitizer_on_print@@Base+0x82c>  // b.none
   20148:	bl	85d8 <__sanitizer_print_stack_trace@@Base+0x300>
   2014c:	add	x0, x19, #0x710
   20150:	ldr	x1, [x0, #16]
   20154:	cbnz	x1, 2017c <__sanitizer_on_print@@Base+0x85c>
   20158:	add	x0, x19, #0x710
   2015c:	ldp	x2, x3, [sp, #24]
   20160:	ldr	x1, [sp, #40]
   20164:	stp	x2, x3, [x0, #8]
   20168:	str	x1, [x0, #24]
   2016c:	dmb	ish
   20170:	strb	wzr, [x19, #1808]
   20174:	ldp	x19, x30, [sp], #48
   20178:	ret
   2017c:	ldr	x0, [x0, #8]
   20180:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   20184:	b	20158 <__sanitizer_on_print@@Base+0x838>
   20188:	stp	x19, x20, [sp, #-32]!
   2018c:	mov	x19, x0
   20190:	adrp	x20, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   20194:	add	x0, x20, #0x710
   20198:	mov	w2, #0x1                   	// #1
   2019c:	str	x30, [sp, #16]
   201a0:	ldxrb	w1, [x0]
   201a4:	stxrb	w3, w2, [x0]
   201a8:	cbnz	w3, 201a0 <__sanitizer_on_print@@Base+0x880>
   201ac:	dmb	ish
   201b0:	tst	w1, #0xff
   201b4:	b.eq	201bc <__sanitizer_on_print@@Base+0x89c>  // b.none
   201b8:	bl	85d8 <__sanitizer_print_stack_trace@@Base+0x300>
   201bc:	add	x0, x20, #0x710
   201c0:	add	x2, x0, #0x8
   201c4:	ldr	x1, [x0, #8]
   201c8:	cbz	x1, 201dc <__sanitizer_on_print@@Base+0x8bc>
   201cc:	ldp	x0, x1, [x0, #8]
   201d0:	stp	x0, x1, [x19]
   201d4:	ldr	x0, [x2, #16]
   201d8:	str	x0, [x19, #16]
   201dc:	dmb	ish
   201e0:	strb	wzr, [x20, #1808]
   201e4:	ldr	x30, [sp, #16]
   201e8:	ldp	x19, x20, [sp], #32
   201ec:	ret
   201f0:	stp	x19, x20, [sp, #-272]!
   201f4:	mov	x19, x1
   201f8:	stp	x21, x22, [sp, #16]
   201fc:	mov	x21, x0
   20200:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   20204:	stp	x23, x24, [sp, #32]
   20208:	ldr	x20, [x0, #4016]
   2020c:	stp	x25, x26, [sp, #48]
   20210:	stp	x27, x28, [sp, #64]
   20214:	ldr	x0, [x21]
   20218:	str	x30, [sp, #80]
   2021c:	str	x0, [x21, #24]
   20220:	ldr	x0, [x20]
   20224:	cbz	x0, 203bc <__sanitizer_on_print@@Base+0xa9c>
   20228:	sub	x20, x0, #0x1
   2022c:	ands	x20, x20, x0
   20230:	b.ne	20520 <__sanitizer_on_print@@Base+0xc00>  // b.any
   20234:	add	x24, x0, #0xfff
   20238:	neg	x0, x0
   2023c:	and	x24, x24, x0
   20240:	mov	w2, #0x0                   	// #0
   20244:	mov	x0, x24
   20248:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   2024c:	add	x1, x1, #0xc10
   20250:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   20254:	mov	x2, #0x0                   	// #0
   20258:	mov	x1, #0x0                   	// #0
   2025c:	mov	x23, x0
   20260:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   20264:	mov	x1, #0x0                   	// #0
   20268:	mov	x0, #0x0                   	// #0
   2026c:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   20270:	cmp	x24, #0xfff
   20274:	b.ls	20484 <__sanitizer_on_print@@Base+0xb64>  // b.plast
   20278:	mov	x2, #0x1000                	// #4096
   2027c:	mov	w1, #0x0                   	// #0
   20280:	mov	x0, x23
   20284:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   20288:	strb	wzr, [x23]
   2028c:	mov	x0, #0x1000                	// #4096
   20290:	add	x22, sp, #0x70
   20294:	add	x25, sp, #0xc0
   20298:	mov	x1, x25
   2029c:	add	x27, x22, #0x1c
   202a0:	stp	x23, x0, [sp, #216]
   202a4:	mov	x0, x21
   202a8:	str	xzr, [sp, #264]
   202ac:	bl	20810 <__sanitizer_on_print@@Base+0xef0>
   202b0:	tst	w0, #0xff
   202b4:	b.eq	20394 <__sanitizer_on_print@@Base+0xa74>  // b.none
   202b8:	ldr	x28, [sp, #216]
   202bc:	ldrb	w0, [x28]
   202c0:	cbz	w0, 2037c <__sanitizer_on_print@@Base+0xa5c>
   202c4:	ldr	x3, [sp, #192]
   202c8:	cmp	x20, #0x0
   202cc:	ldr	x0, [sp, #208]
   202d0:	csel	x3, x3, xzr, ne  // ne = any
   202d4:	mov	x2, #0x10                  	// #16
   202d8:	mov	w1, #0x0                   	// #0
   202dc:	sub	x26, x3, x0
   202e0:	mov	x0, x27
   202e4:	str	xzr, [sp, #112]
   202e8:	stp	xzr, xzr, [sp, #120]
   202ec:	str	wzr, [sp, #136]
   202f0:	strb	wzr, [sp, #156]
   202f4:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   202f8:	mov	x0, x22
   202fc:	mov	x2, x26
   20300:	mov	x1, x28
   20304:	str	xzr, [sp, #160]
   20308:	stp	xzr, xzr, [sp, #168]
   2030c:	bl	14ac0 <_ZdaPvRKSt9nothrow_t@@Base+0x2d40>
   20310:	ldr	x0, [sp, #264]
   20314:	cbnz	x0, 204e8 <__sanitizer_on_print@@Base+0xbc8>
   20318:	ldp	x1, x2, [sp, #192]
   2031c:	mov	x0, x22
   20320:	ldr	x3, [sp, #232]
   20324:	mov	x5, #0x0                   	// #0
   20328:	ubfx	w4, w3, #1, #1
   2032c:	ubfx	w3, w3, #2, #1
   20330:	bl	14b58 <_ZdaPvRKSt9nothrow_t@@Base+0x2dd8>
   20334:	ldp	x4, x3, [x19, #8]
   20338:	mov	x0, #0xe38f                	// #58255
   2033c:	movk	x0, #0x8e38, lsl #16
   20340:	movk	x0, #0x38e3, lsl #32
   20344:	movk	x0, #0xe38e, lsl #48
   20348:	umulh	x4, x4, x0
   2034c:	lsr	x4, x4, #6
   20350:	cmp	x3, x4
   20354:	b.hi	20508 <__sanitizer_on_print@@Base+0xbe8>  // b.pmore
   20358:	add	x1, x3, #0x1
   2035c:	b.eq	203c8 <__sanitizer_on_print@@Base+0xaa8>  // b.none
   20360:	ldr	x5, [x19]
   20364:	add	x3, x3, x3, lsl #3
   20368:	str	x1, [x19, #16]
   2036c:	mov	x2, #0x48                  	// #72
   20370:	add	x0, x5, x3, lsl #3
   20374:	mov	x1, x22
   20378:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   2037c:	mov	x1, x25
   20380:	mov	x0, x21
   20384:	add	x20, x20, #0x1
   20388:	bl	20810 <__sanitizer_on_print@@Base+0xef0>
   2038c:	tst	w0, #0xff
   20390:	b.ne	202b8 <__sanitizer_on_print@@Base+0x998>  // b.any
   20394:	mov	x1, x24
   20398:	mov	x0, x23
   2039c:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   203a0:	ldp	x21, x22, [sp, #16]
   203a4:	ldp	x23, x24, [sp, #32]
   203a8:	ldp	x25, x26, [sp, #48]
   203ac:	ldp	x27, x28, [sp, #64]
   203b0:	ldr	x30, [sp, #80]
   203b4:	ldp	x19, x20, [sp], #272
   203b8:	ret
   203bc:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   203c0:	str	x0, [x20]
   203c4:	b	20228 <__sanitizer_on_print@@Base+0x908>
   203c8:	tst	x3, x1
   203cc:	b.eq	20408 <__sanitizer_on_print@@Base+0xae8>  // b.none
   203d0:	clz	x2, x1
   203d4:	mov	w0, #0x3f                  	// #63
   203d8:	sub	w0, w0, w2
   203dc:	mov	x2, #0x1                   	// #1
   203e0:	add	w4, w0, #0x1
   203e4:	lsl	x4, x2, x4
   203e8:	cmp	x4, x1
   203ec:	b.ls	20568 <__sanitizer_on_print@@Base+0xc48>  // b.plast
   203f0:	lsl	x0, x2, x0
   203f4:	cmp	x0, x1
   203f8:	b.cs	20584 <__sanitizer_on_print@@Base+0xc64>  // b.hs, b.nlast
   203fc:	cmp	x3, x4
   20400:	b.hi	20550 <__sanitizer_on_print@@Base+0xc30>  // b.pmore
   20404:	mov	x1, x4
   20408:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2040c:	add	x1, x1, x1, lsl #3
   20410:	ldr	x2, [x0, #4016]
   20414:	lsl	x1, x1, #3
   20418:	ldr	x0, [x2]
   2041c:	cbz	x0, 20530 <__sanitizer_on_print@@Base+0xc10>
   20420:	sub	x4, x0, #0x1
   20424:	tst	x0, x4
   20428:	b.ne	20520 <__sanitizer_on_print@@Base+0xc00>  // b.any
   2042c:	add	x1, x1, x4
   20430:	neg	x0, x0
   20434:	and	x4, x1, x0
   20438:	mov	w2, #0x0                   	// #0
   2043c:	mov	x0, x4
   20440:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   20444:	add	x1, x1, #0xc10
   20448:	str	x4, [sp, #104]
   2044c:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   20450:	str	x0, [sp, #96]
   20454:	ldr	x2, [x19, #16]
   20458:	ldr	x1, [x19]
   2045c:	add	x2, x2, x2, lsl #3
   20460:	lsl	x2, x2, #3
   20464:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   20468:	ldp	x0, x1, [x19]
   2046c:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   20470:	ldr	x3, [x19, #16]
   20474:	ldp	x5, x4, [sp, #96]
   20478:	add	x1, x3, #0x1
   2047c:	stp	x5, x4, [x19]
   20480:	b	20364 <__sanitizer_on_print@@Base+0xa44>
   20484:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   20488:	ldr	x22, [x0, #4016]
   2048c:	ldr	x0, [x22]
   20490:	cbz	x0, 20544 <__sanitizer_on_print@@Base+0xc24>
   20494:	sub	x1, x0, #0x1
   20498:	tst	x1, x0
   2049c:	b.ne	20520 <__sanitizer_on_print@@Base+0xc00>  // b.any
   204a0:	add	x22, x0, #0xfff
   204a4:	neg	x0, x0
   204a8:	and	x22, x22, x0
   204ac:	mov	w2, #0x0                   	// #0
   204b0:	mov	x0, x22
   204b4:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   204b8:	add	x1, x1, #0xc10
   204bc:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   204c0:	mov	x2, #0x0                   	// #0
   204c4:	mov	x25, x0
   204c8:	mov	x1, x23
   204cc:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   204d0:	mov	x1, x24
   204d4:	mov	x0, x23
   204d8:	mov	x24, x22
   204dc:	mov	x23, x25
   204e0:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   204e4:	b	20278 <__sanitizer_on_print@@Base+0x958>
   204e8:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   204ec:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   204f0:	add	x2, x2, #0x138
   204f4:	add	x0, x0, #0x150
   204f8:	mov	x4, #0x0                   	// #0
   204fc:	mov	x3, #0x0                   	// #0
   20500:	mov	w1, #0x44                  	// #68
   20504:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   20508:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   2050c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   20510:	add	x2, x2, #0x8c8
   20514:	add	x0, x0, #0xb98
   20518:	mov	w1, #0x1cd                 	// #461
   2051c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   20520:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   20524:	add	x0, x0, #0xbf8
   20528:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   2052c:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   20530:	stp	x1, x2, [sp, #96]
   20534:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   20538:	ldp	x1, x2, [sp, #96]
   2053c:	str	x0, [x2]
   20540:	b	20420 <__sanitizer_on_print@@Base+0xb00>
   20544:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   20548:	str	x0, [x22]
   2054c:	b	20494 <__sanitizer_on_print@@Base+0xb74>
   20550:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   20554:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   20558:	add	x2, x2, #0x8f8
   2055c:	add	x0, x0, #0xb98
   20560:	mov	w1, #0x20c                 	// #524
   20564:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   20568:	mov	x3, x1
   2056c:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   20570:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   20574:	add	x2, x2, #0x680
   20578:	add	x0, x0, #0xb98
   2057c:	mov	w1, #0x18a                 	// #394
   20580:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   20584:	mov	x4, x0
   20588:	mov	x3, x1
   2058c:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   20590:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   20594:	add	x2, x2, #0x708
   20598:	add	x0, x0, #0xb98
   2059c:	mov	w1, #0x18b                 	// #395
   205a0:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   205a4:	nop
   205a8:	stp	x19, x20, [sp, #-112]!
   205ac:	mov	x5, #0x0                   	// #0
   205b0:	mov	x4, #0x4000000             	// #67108864
   205b4:	add	x3, sp, #0x68
   205b8:	stp	x21, x22, [sp, #16]
   205bc:	mov	x21, x0
   205c0:	mov	x22, x1
   205c4:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   205c8:	add	x1, sp, #0x58
   205cc:	add	x0, x0, #0x1b0
   205d0:	stp	x23, x24, [sp, #32]
   205d4:	mov	x23, x2
   205d8:	add	x2, sp, #0x60
   205dc:	str	x30, [sp, #64]
   205e0:	stp	xzr, xzr, [sp, #88]
   205e4:	str	xzr, [sp, #104]
   205e8:	bl	17590 <__sanitizer_install_malloc_and_free_hooks@@Base+0x21f8>
   205ec:	tst	w0, #0xff
   205f0:	b.eq	206f4 <__sanitizer_on_print@@Base+0xdd4>  // b.none
   205f4:	ldr	x20, [sp, #88]
   205f8:	ldr	x6, [sp, #104]
   205fc:	add	x0, x20, x6
   20600:	cmp	x20, x0
   20604:	b.cs	207c8 <__sanitizer_on_print@@Base+0xea8>  // b.hs, b.nlast
   20608:	adrp	x24, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   2060c:	mov	x0, x20
   20610:	add	x24, x24, #0x1c8
   20614:	stp	x25, x26, [sp, #48]
   20618:	mov	w26, #0x0                   	// #0
   2061c:	mov	x25, #0x0                   	// #0
   20620:	ldrb	w1, [x20]
   20624:	sub	w3, w1, #0x30
   20628:	and	w2, w3, #0xff
   2062c:	cmp	w2, #0x9
   20630:	b.ls	20648 <__sanitizer_on_print@@Base+0xd28>  // b.plast
   20634:	and	w2, w1, #0xffffffdf
   20638:	sub	w2, w2, #0x41
   2063c:	and	w2, w2, #0xff
   20640:	cmp	w2, #0x5
   20644:	b.hi	20708 <__sanitizer_on_print@@Base+0xde8>  // b.pmore
   20648:	mov	x25, #0x0                   	// #0
   2064c:	b	20664 <__sanitizer_on_print@@Base+0xd44>
   20650:	sub	w3, w1, #0x37
   20654:	ldrb	w1, [x20, #1]!
   20658:	sxtw	x3, w3
   2065c:	add	x25, x3, x25, lsl #4
   20660:	sub	w3, w1, #0x30
   20664:	sub	w2, w1, #0x61
   20668:	sub	w4, w1, #0x41
   2066c:	and	w5, w3, #0xff
   20670:	and	w2, w2, #0xff
   20674:	and	w4, w4, #0xff
   20678:	cmp	w5, #0x9
   2067c:	b.ls	20654 <__sanitizer_on_print@@Base+0xd34>  // b.plast
   20680:	sub	w3, w1, #0x57
   20684:	cmp	w2, #0x5
   20688:	b.ls	20654 <__sanitizer_on_print@@Base+0xd34>  // b.plast
   2068c:	cmp	w4, #0x5
   20690:	b.ls	20650 <__sanitizer_on_print@@Base+0xd30>  // b.plast
   20694:	cmp	w1, #0x2f
   20698:	cset	w26, eq  // eq = none
   2069c:	cmp	w26, #0x0
   206a0:	ccmp	w1, #0xa, #0x0, eq  // eq = none
   206a4:	b.ls	206c0 <__sanitizer_on_print@@Base+0xda0>  // b.plast
   206a8:	ldrb	w1, [x20, #1]!
   206ac:	cmp	w1, #0x2f
   206b0:	cset	w26, eq  // eq = none
   206b4:	cmp	w26, #0x0
   206b8:	ccmp	w1, #0xa, #0x0, eq  // eq = none
   206bc:	b.hi	206a8 <__sanitizer_on_print@@Base+0xd88>  // b.pmore
   206c0:	add	x19, x20, #0x1
   206c4:	nop
   206c8:	ldurb	w3, [x19, #-1]
   206cc:	mov	x20, x19
   206d0:	add	x19, x19, #0x1
   206d4:	cmp	w3, #0xa
   206d8:	b.ne	206c8 <__sanitizer_on_print@@Base+0xda8>  // b.any
   206dc:	add	x1, x0, x6
   206e0:	cmp	x20, x1
   206e4:	b.cc	20620 <__sanitizer_on_print@@Base+0xd00>  // b.lo, b.ul, b.last
   206e8:	ldp	x25, x26, [sp, #48]
   206ec:	ldr	x1, [sp, #96]
   206f0:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   206f4:	ldp	x21, x22, [sp, #16]
   206f8:	ldp	x23, x24, [sp, #32]
   206fc:	ldr	x30, [sp, #64]
   20700:	ldp	x19, x20, [sp], #112
   20704:	ret
   20708:	mov	x1, x24
   2070c:	mov	x0, x20
   20710:	mov	x2, #0x4                   	// #4
   20714:	bl	1a5a8 <__sanitizer_set_report_fd@@Base+0x2728>
   20718:	cbz	w0, 20730 <__sanitizer_on_print@@Base+0xe10>
   2071c:	add	x19, x20, #0x1
   20720:	ldr	x0, [sp, #88]
   20724:	ldr	x6, [sp, #104]
   20728:	b	206c8 <__sanitizer_on_print@@Base+0xda8>
   2072c:	add	x20, x20, #0x1
   20730:	ldrb	w0, [x20]
   20734:	sub	w0, w0, #0x30
   20738:	and	w0, w0, #0xff
   2073c:	cmp	w0, #0x9
   20740:	b.hi	2072c <__sanitizer_on_print@@Base+0xe0c>  // b.pmore
   20744:	mov	x19, x20
   20748:	ldrb	w2, [x19], #1
   2074c:	sub	w0, w2, #0x30
   20750:	and	w1, w0, #0xff
   20754:	cmp	w1, #0x9
   20758:	mov	x1, #0x0                   	// #0
   2075c:	b.ls	20784 <__sanitizer_on_print@@Base+0xe64>  // b.plast
   20760:	mov	x0, x25
   20764:	lsl	x1, x1, #10
   20768:	mov	x4, x23
   2076c:	mov	x3, x22
   20770:	mov	w2, w26
   20774:	blr	x21
   20778:	ldr	x0, [sp, #88]
   2077c:	ldr	x6, [sp, #104]
   20780:	b	206c8 <__sanitizer_on_print@@Base+0xda8>
   20784:	ldrb	w2, [x19], #1
   20788:	sxtw	x3, w0
   2078c:	add	x1, x1, x1, lsl #2
   20790:	sub	w0, w2, #0x30
   20794:	and	w2, w0, #0xff
   20798:	add	x1, x3, x1, lsl #1
   2079c:	cmp	w2, #0x9
   207a0:	b.hi	20760 <__sanitizer_on_print@@Base+0xe40>  // b.pmore
   207a4:	ldrb	w2, [x19], #1
   207a8:	sxtw	x3, w0
   207ac:	add	x1, x1, x1, lsl #2
   207b0:	sub	w0, w2, #0x30
   207b4:	and	w2, w0, #0xff
   207b8:	add	x1, x3, x1, lsl #1
   207bc:	cmp	w2, #0x9
   207c0:	b.hi	20760 <__sanitizer_on_print@@Base+0xe40>  // b.pmore
   207c4:	b	20784 <__sanitizer_on_print@@Base+0xe64>
   207c8:	mov	x0, x20
   207cc:	b	206ec <__sanitizer_on_print@@Base+0xdcc>
   207d0:	stp	x19, x30, [sp, #-16]!
   207d4:	adrp	x1, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   207d8:	mov	x19, x0
   207dc:	add	x3, x19, #0x10
   207e0:	add	x0, x1, #0x1d0
   207e4:	add	x2, x19, #0x8
   207e8:	mov	x1, x19
   207ec:	mov	x5, #0x0                   	// #0
   207f0:	mov	x4, #0x4000000             	// #67108864
   207f4:	bl	17590 <__sanitizer_install_malloc_and_free_hooks@@Base+0x21f8>
   207f8:	tst	w0, #0xff
   207fc:	b.ne	20808 <__sanitizer_on_print@@Base+0xee8>  // b.any
   20800:	str	xzr, [x19]
   20804:	stp	xzr, xzr, [x19, #8]
   20808:	ldp	x19, x30, [sp], #16
   2080c:	ret
   20810:	stp	x19, x20, [sp, #-64]!
   20814:	mov	x19, x0
   20818:	stp	x21, x22, [sp, #16]
   2081c:	mov	x22, x1
   20820:	str	x30, [sp, #56]
   20824:	bl	200c0 <__sanitizer_on_print@@Base+0x7a0>
   20828:	ands	w21, w0, #0xff
   2082c:	b.ne	20ab4 <__sanitizer_on_print@@Base+0x1194>  // b.any
   20830:	ldp	x1, x0, [x19, #16]
   20834:	ldr	x20, [x19]
   20838:	add	x20, x20, x1
   2083c:	cmp	x0, x20
   20840:	b.cc	20858 <__sanitizer_on_print@@Base+0xf38>  // b.lo, b.ul, b.last
   20844:	mov	w0, w21
   20848:	ldp	x21, x22, [sp, #16]
   2084c:	ldr	x30, [sp, #56]
   20850:	ldp	x19, x20, [sp], #64
   20854:	ret
   20858:	sub	x2, x20, x0
   2085c:	mov	w1, #0xa                   	// #10
   20860:	stp	x23, x24, [sp, #32]
   20864:	add	x24, x19, #0x18
   20868:	str	x25, [sp, #48]
   2086c:	bl	19d18 <__sanitizer_set_report_fd@@Base+0x1e98>
   20870:	mov	x23, x0
   20874:	mov	x0, x24
   20878:	cmp	x23, #0x0
   2087c:	csel	x23, x23, x20, ne  // ne = any
   20880:	bl	1fee0 <__sanitizer_on_print@@Base+0x5c0>
   20884:	ldr	x1, [x19, #24]
   20888:	str	x0, [x22]
   2088c:	add	x0, x1, #0x1
   20890:	str	x0, [x19, #24]
   20894:	ldrb	w20, [x1]
   20898:	cmp	x20, #0x2d
   2089c:	b.ne	20af4 <__sanitizer_on_print@@Base+0x11d4>  // b.any
   208a0:	mov	x0, x24
   208a4:	bl	1fee0 <__sanitizer_on_print@@Base+0x5c0>
   208a8:	ldr	x2, [x19, #24]
   208ac:	str	x0, [x22, #8]
   208b0:	add	x0, x2, #0x1
   208b4:	str	x0, [x19, #24]
   208b8:	ldrb	w3, [x2]
   208bc:	cmp	x3, #0x20
   208c0:	b.ne	20b14 <__sanitizer_on_print@@Base+0x11f4>  // b.any
   208c4:	ldrb	w0, [x2, #1]
   208c8:	cmp	w0, #0x72
   208cc:	ccmp	w0, w20, #0x4, ne  // ne = any
   208d0:	b.ne	20b30 <__sanitizer_on_print@@Base+0x1210>  // b.any
   208d4:	str	xzr, [x22, #40]
   208d8:	add	x0, x2, #0x2
   208dc:	str	x0, [x19, #24]
   208e0:	ldrb	w0, [x2, #1]
   208e4:	cmp	w0, #0x72
   208e8:	b.eq	20acc <__sanitizer_on_print@@Base+0x11ac>  // b.none
   208ec:	mov	x9, #0xe                   	// #14
   208f0:	mov	x8, #0xa                   	// #10
   208f4:	mov	x7, #0x6                   	// #6
   208f8:	mov	x5, #0xc                   	// #12
   208fc:	mov	x3, #0x8                   	// #8
   20900:	mov	x4, #0x4                   	// #4
   20904:	mov	x6, #0x2                   	// #2
   20908:	ldrb	w0, [x2, #2]
   2090c:	mov	w1, #0x2d                  	// #45
   20910:	cmp	w0, #0x77
   20914:	ccmp	w0, w1, #0x4, ne  // ne = any
   20918:	b.ne	20b50 <__sanitizer_on_print@@Base+0x1230>  // b.any
   2091c:	add	x0, x2, #0x3
   20920:	str	x0, [x19, #24]
   20924:	ldrb	w0, [x2, #2]
   20928:	cmp	w0, #0x77
   2092c:	b.ne	20940 <__sanitizer_on_print@@Base+0x1020>  // b.any
   20930:	mov	x5, x9
   20934:	mov	x3, x8
   20938:	mov	x4, x7
   2093c:	str	x6, [x22, #40]
   20940:	ldrb	w0, [x2, #3]
   20944:	mov	w1, #0x78                  	// #120
   20948:	cmp	w0, #0x2d
   2094c:	ccmp	w0, w1, #0x4, ne  // ne = any
   20950:	b.ne	20b70 <__sanitizer_on_print@@Base+0x1250>  // b.any
   20954:	add	x0, x2, #0x4
   20958:	str	x0, [x19, #24]
   2095c:	ldrb	w0, [x2, #3]
   20960:	cmp	w0, #0x78
   20964:	b.ne	20970 <__sanitizer_on_print@@Base+0x1050>  // b.any
   20968:	mov	x3, x5
   2096c:	str	x4, [x22, #40]
   20970:	ldrb	w1, [x2, #4]
   20974:	cmp	w1, #0x73
   20978:	cset	w0, eq  // eq = none
   2097c:	cmp	w1, #0x70
   20980:	csinc	w21, w0, wzr, ne  // ne = any
   20984:	cbz	w21, 20b90 <__sanitizer_on_print@@Base+0x1270>
   20988:	add	x0, x2, #0x5
   2098c:	str	x0, [x19, #24]
   20990:	ldrb	w0, [x2, #4]
   20994:	cmp	w0, #0x73
   20998:	b.ne	209a0 <__sanitizer_on_print@@Base+0x1080>  // b.any
   2099c:	str	x3, [x22, #40]
   209a0:	add	x0, x2, #0x6
   209a4:	str	x0, [x19, #24]
   209a8:	ldrb	w20, [x2, #5]
   209ac:	cmp	x20, #0x20
   209b0:	b.ne	20bb0 <__sanitizer_on_print@@Base+0x1290>  // b.any
   209b4:	mov	x0, x24
   209b8:	bl	1fee0 <__sanitizer_on_print@@Base+0x5c0>
   209bc:	str	x0, [x22, #16]
   209c0:	ldr	x0, [x19, #24]
   209c4:	add	x1, x0, #0x1
   209c8:	str	x1, [x19, #24]
   209cc:	ldrb	w25, [x0]
   209d0:	cmp	x25, #0x20
   209d4:	b.ne	20bd0 <__sanitizer_on_print@@Base+0x12b0>  // b.any
   209d8:	mov	x0, x24
   209dc:	bl	1fee0 <__sanitizer_on_print@@Base+0x5c0>
   209e0:	ldr	x0, [x19, #24]
   209e4:	add	x1, x0, #0x1
   209e8:	str	x1, [x19, #24]
   209ec:	ldrb	w3, [x0]
   209f0:	cmp	x3, #0x3a
   209f4:	b.ne	20bf0 <__sanitizer_on_print@@Base+0x12d0>  // b.any
   209f8:	mov	x0, x24
   209fc:	bl	1fee0 <__sanitizer_on_print@@Base+0x5c0>
   20a00:	ldr	x0, [x19, #24]
   20a04:	add	x2, x0, #0x1
   20a08:	str	x2, [x19, #24]
   20a0c:	ldrb	w3, [x0]
   20a10:	cmp	x3, #0x20
   20a14:	b.eq	20a28 <__sanitizer_on_print@@Base+0x1108>  // b.none
   20a18:	b	20c0c <__sanitizer_on_print@@Base+0x12ec>
   20a1c:	ldr	x2, [x19, #24]
   20a20:	add	x2, x2, #0x1
   20a24:	str	x2, [x19, #24]
   20a28:	ldrb	w0, [x2]
   20a2c:	bl	1fe30 <__sanitizer_on_print@@Base+0x510>
   20a30:	tst	w0, #0xff
   20a34:	b.ne	20a1c <__sanitizer_on_print@@Base+0x10fc>  // b.any
   20a38:	ldr	x1, [x19, #24]
   20a3c:	cmp	x1, x23
   20a40:	b.cc	20a58 <__sanitizer_on_print@@Base+0x1138>  // b.lo, b.ul, b.last
   20a44:	b	20a64 <__sanitizer_on_print@@Base+0x1144>
   20a48:	add	x1, x1, #0x1
   20a4c:	str	x1, [x19, #24]
   20a50:	cmp	x1, x23
   20a54:	b.eq	20a64 <__sanitizer_on_print@@Base+0x1144>  // b.none
   20a58:	ldrb	w0, [x1]
   20a5c:	cmp	w0, #0x20
   20a60:	b.eq	20a48 <__sanitizer_on_print@@Base+0x1128>  // b.none
   20a64:	ldr	x0, [x22, #24]
   20a68:	cbz	x0, 20a90 <__sanitizer_on_print@@Base+0x1170>
   20a6c:	ldr	x20, [x22, #32]
   20a70:	sub	x3, x23, x1
   20a74:	sub	x20, x20, #0x1
   20a78:	cmp	x20, x3
   20a7c:	csel	x20, x20, x3, ls  // ls = plast
   20a80:	mov	x2, x20
   20a84:	bl	1b4c8 <__sanitizer_set_report_fd@@Base+0x3648>
   20a88:	ldr	x0, [x22, #24]
   20a8c:	strb	wzr, [x0, x20]
   20a90:	add	x0, x23, #0x1
   20a94:	ldp	x23, x24, [sp, #32]
   20a98:	ldr	x25, [sp, #48]
   20a9c:	str	x0, [x19, #24]
   20aa0:	mov	w0, w21
   20aa4:	ldp	x21, x22, [sp, #16]
   20aa8:	ldr	x30, [sp, #56]
   20aac:	ldp	x19, x20, [sp], #64
   20ab0:	ret
   20ab4:	mov	w21, #0x0                   	// #0
   20ab8:	mov	w0, w21
   20abc:	ldp	x21, x22, [sp, #16]
   20ac0:	ldr	x30, [sp, #56]
   20ac4:	ldp	x19, x20, [sp], #64
   20ac8:	ret
   20acc:	mov	x0, #0x1                   	// #1
   20ad0:	mov	x9, #0xf                   	// #15
   20ad4:	mov	x8, #0xb                   	// #11
   20ad8:	mov	x7, #0x7                   	// #7
   20adc:	mov	x5, #0xd                   	// #13
   20ae0:	mov	x3, #0x9                   	// #9
   20ae4:	mov	x4, #0x5                   	// #5
   20ae8:	mov	x6, #0x3                   	// #3
   20aec:	str	x0, [x22, #40]
   20af0:	b	20908 <__sanitizer_on_print@@Base+0xfe8>
   20af4:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   20af8:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   20afc:	mov	x3, x20
   20b00:	add	x2, x2, #0x1e0
   20b04:	add	x0, x0, #0x200
   20b08:	mov	x4, #0x2d                  	// #45
   20b0c:	mov	w1, #0x2a                  	// #42
   20b10:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   20b14:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   20b18:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   20b1c:	add	x2, x2, #0x260
   20b20:	add	x0, x0, #0x200
   20b24:	mov	x4, #0x20                  	// #32
   20b28:	mov	w1, #0x2c                  	// #44
   20b2c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   20b30:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   20b34:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   20b38:	mov	w1, w20
   20b3c:	add	x2, x2, #0x280
   20b40:	add	x0, x0, #0x200
   20b44:	mov	x4, #0x0                   	// #0
   20b48:	mov	x3, #0x0                   	// #0
   20b4c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   20b50:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   20b54:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   20b58:	add	x2, x2, #0x2b0
   20b5c:	add	x0, x0, #0x200
   20b60:	mov	x4, #0x0                   	// #0
   20b64:	mov	x3, #0x0                   	// #0
   20b68:	mov	w1, #0x30                  	// #48
   20b6c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   20b70:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   20b74:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   20b78:	add	x2, x2, #0x2e0
   20b7c:	add	x0, x0, #0x200
   20b80:	mov	x4, #0x0                   	// #0
   20b84:	mov	x3, #0x0                   	// #0
   20b88:	mov	w1, #0x32                  	// #50
   20b8c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   20b90:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   20b94:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   20b98:	add	x2, x2, #0x310
   20b9c:	add	x0, x0, #0x200
   20ba0:	mov	x4, #0x0                   	// #0
   20ba4:	mov	x3, #0x0                   	// #0
   20ba8:	mov	w1, #0x34                  	// #52
   20bac:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   20bb0:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   20bb4:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   20bb8:	mov	x3, x20
   20bbc:	add	x2, x2, #0x260
   20bc0:	add	x0, x0, #0x200
   20bc4:	mov	x4, #0x20                  	// #32
   20bc8:	mov	w1, #0x36                  	// #54
   20bcc:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   20bd0:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   20bd4:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   20bd8:	mov	x4, x20
   20bdc:	mov	x3, x25
   20be0:	add	x2, x2, #0x260
   20be4:	add	x0, x0, #0x200
   20be8:	mov	w1, #0x38                  	// #56
   20bec:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   20bf0:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   20bf4:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   20bf8:	mov	x4, #0x3a                  	// #58
   20bfc:	add	x2, x2, #0x340
   20c00:	add	x0, x0, #0x200
   20c04:	mov	w1, w4
   20c08:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   20c0c:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   20c10:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   20c14:	mov	x4, x25
   20c18:	add	x2, x2, #0x260
   20c1c:	add	x0, x0, #0x200
   20c20:	mov	w1, #0x3c                  	// #60
   20c24:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   20c28:	cbz	x1, 20f50 <__sanitizer_on_print@@Base+0x1630>
   20c2c:	stp	x19, x20, [sp, #-112]!
   20c30:	mov	x20, x0
   20c34:	mov	x19, x1
   20c38:	stp	x21, x22, [sp, #16]
   20c3c:	adrp	x22, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   20c40:	add	x21, sp, #0x50
   20c44:	ldr	x22, [x22, #4016]
   20c48:	stp	x23, x24, [sp, #32]
   20c4c:	adrp	x23, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   20c50:	add	x23, x23, #0xc10
   20c54:	stp	x25, x26, [sp, #48]
   20c58:	stp	x27, x30, [sp, #64]
   20c5c:	nop
   20c60:	ldrb	w0, [x19]
   20c64:	cmp	w0, #0x20
   20c68:	ccmp	w0, #0x9, #0x4, ne  // ne = any
   20c6c:	b.ne	20c80 <__sanitizer_on_print@@Base+0x1360>  // b.any
   20c70:	ldrb	w0, [x19, #1]!
   20c74:	cmp	w0, #0x20
   20c78:	ccmp	w0, #0x9, #0x4, ne  // ne = any
   20c7c:	b.eq	20c70 <__sanitizer_on_print@@Base+0x1350>  // b.none
   20c80:	mov	x0, x19
   20c84:	mov	w1, #0xa                   	// #10
   20c88:	bl	1a5e8 <__sanitizer_set_report_fd@@Base+0x2768>
   20c8c:	mov	x25, x0
   20c90:	cbz	x0, 20e00 <__sanitizer_on_print@@Base+0x14e0>
   20c94:	cmp	x25, x19
   20c98:	b.eq	20ca8 <__sanitizer_on_print@@Base+0x1388>  // b.none
   20c9c:	ldrb	w6, [x19]
   20ca0:	cmp	w6, #0x23
   20ca4:	b.ne	20cb8 <__sanitizer_on_print@@Base+0x1398>  // b.any
   20ca8:	ldrb	w0, [x25]
   20cac:	cbz	w0, 20de8 <__sanitizer_on_print@@Base+0x14c8>
   20cb0:	add	x19, x25, #0x1
   20cb4:	b	20c60 <__sanitizer_on_print@@Base+0x1340>
   20cb8:	mov	x24, x25
   20cbc:	nop
   20cc0:	ldurb	w1, [x24, #-1]
   20cc4:	cmp	w1, #0x20
   20cc8:	and	w1, w1, #0xfffffffb
   20ccc:	ccmp	w1, #0x9, #0x4, ne  // ne = any
   20cd0:	b.ne	20ce0 <__sanitizer_on_print@@Base+0x13c0>  // b.any
   20cd4:	sub	x24, x24, #0x1
   20cd8:	cmp	x24, x19
   20cdc:	b.ne	20cc0 <__sanitizer_on_print@@Base+0x13a0>  // b.any
   20ce0:	ldr	w7, [x20, #8]
   20ce4:	cmp	w7, #0x0
   20ce8:	b.le	20ee8 <__sanitizer_on_print@@Base+0x15c8>
   20cec:	ldr	x8, [x20]
   20cf0:	mov	x5, #0x0                   	// #0
   20cf4:	nop
   20cf8:	mov	w0, w5
   20cfc:	mov	w26, w5
   20d00:	ldr	x2, [x8, x5, lsl #3]
   20d04:	cbz	w6, 20d38 <__sanitizer_on_print@@Base+0x1418>
   20d08:	mov	w1, w6
   20d0c:	mov	x4, x19
   20d10:	b	20d20 <__sanitizer_on_print@@Base+0x1400>
   20d14:	ldrb	w1, [x4, #1]!
   20d18:	add	x2, x2, #0x1
   20d1c:	cbz	w1, 20d38 <__sanitizer_on_print@@Base+0x1418>
   20d20:	ldrb	w3, [x2]
   20d24:	cmp	w3, w1
   20d28:	b.eq	20d14 <__sanitizer_on_print@@Base+0x13f4>  // b.none
   20d2c:	cmp	w1, #0x3a
   20d30:	ccmp	w3, #0x0, #0x0, eq  // eq = none
   20d34:	b.eq	20e10 <__sanitizer_on_print@@Base+0x14f0>  // b.none
   20d38:	add	x5, x5, #0x1
   20d3c:	add	w26, w0, #0x1
   20d40:	cmp	w7, w5
   20d44:	b.gt	20cf8 <__sanitizer_on_print@@Base+0x13d8>
   20d48:	cmp	w7, w26
   20d4c:	b.eq	20f54 <__sanitizer_on_print@@Base+0x1634>  // b.none
   20d50:	mov	x27, x20
   20d54:	mov	x2, #0x20                  	// #32
   20d58:	mov	w1, #0x0                   	// #0
   20d5c:	mov	x0, x21
   20d60:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   20d64:	sxtw	x26, w26
   20d68:	ldr	x3, [x27], #16
   20d6c:	sub	x24, x24, x19
   20d70:	mov	x2, #0x0                   	// #0
   20d74:	mov	x1, #0x0                   	// #0
   20d78:	add	x0, x24, #0x1
   20d7c:	ldr	x3, [x3, x26, lsl #3]
   20d80:	str	x3, [sp, #80]
   20d84:	bl	121c8 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   20d88:	str	x0, [sp, #88]
   20d8c:	mov	x1, x19
   20d90:	mov	x2, x24
   20d94:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   20d98:	ldr	x0, [sp, #88]
   20d9c:	strb	wzr, [x0, x24]
   20da0:	ldr	x4, [x20, #24]
   20da4:	ldr	x0, [x27, #16]
   20da8:	lsr	x4, x4, #5
   20dac:	cmp	x0, x4
   20db0:	b.hi	20ec0 <__sanitizer_on_print@@Base+0x15a0>  // b.pmore
   20db4:	add	x3, x0, #0x1
   20db8:	b.eq	20e18 <__sanitizer_on_print@@Base+0x14f8>  // b.none
   20dbc:	ldr	x24, [x20, #16]
   20dc0:	add	x26, x20, x26
   20dc4:	str	x3, [x27, #16]
   20dc8:	add	x0, x24, x0, lsl #5
   20dcc:	mov	x1, x21
   20dd0:	mov	x2, #0x20                  	// #32
   20dd4:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   20dd8:	mov	w0, #0x1                   	// #1
   20ddc:	strb	w0, [x26, #40]
   20de0:	ldrb	w0, [x25]
   20de4:	cbnz	w0, 20cb0 <__sanitizer_on_print@@Base+0x1390>
   20de8:	ldp	x21, x22, [sp, #16]
   20dec:	ldp	x23, x24, [sp, #32]
   20df0:	ldp	x25, x26, [sp, #48]
   20df4:	ldp	x27, x30, [sp, #64]
   20df8:	ldp	x19, x20, [sp], #112
   20dfc:	ret
   20e00:	mov	x0, x19
   20e04:	bl	1a690 <__sanitizer_set_report_fd@@Base+0x2810>
   20e08:	add	x25, x19, x0
   20e0c:	b	20c94 <__sanitizer_on_print@@Base+0x1374>
   20e10:	add	x19, x4, #0x1
   20e14:	b	20d48 <__sanitizer_on_print@@Base+0x1428>
   20e18:	tst	x3, x0
   20e1c:	b.eq	20e58 <__sanitizer_on_print@@Base+0x1538>  // b.none
   20e20:	clz	x2, x3
   20e24:	mov	w1, #0x3f                  	// #63
   20e28:	sub	w2, w1, w2
   20e2c:	mov	x1, #0x1                   	// #1
   20e30:	add	w4, w2, #0x1
   20e34:	lsl	x4, x1, x4
   20e38:	cmp	x3, x4
   20e3c:	b.cs	20f0c <__sanitizer_on_print@@Base+0x15ec>  // b.hs, b.nlast
   20e40:	lsl	x1, x1, x2
   20e44:	cmp	x3, x1
   20e48:	b.ls	20f24 <__sanitizer_on_print@@Base+0x1604>  // b.plast
   20e4c:	cmp	x0, x4
   20e50:	b.hi	20ef0 <__sanitizer_on_print@@Base+0x15d0>  // b.pmore
   20e54:	mov	x3, x4
   20e58:	ldr	x0, [x22]
   20e5c:	lsl	x19, x3, #5
   20e60:	cbz	x0, 20edc <__sanitizer_on_print@@Base+0x15bc>
   20e64:	sub	x1, x0, #0x1
   20e68:	tst	x1, x0
   20e6c:	b.ne	20f40 <__sanitizer_on_print@@Base+0x1620>  // b.any
   20e70:	add	x19, x19, x1
   20e74:	neg	x0, x0
   20e78:	and	x19, x19, x0
   20e7c:	mov	x1, x23
   20e80:	mov	w2, #0x0                   	// #0
   20e84:	mov	x0, x19
   20e88:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   20e8c:	mov	x24, x0
   20e90:	ldr	x1, [x20, #16]
   20e94:	ldr	x2, [x27, #16]
   20e98:	lsl	x2, x2, #5
   20e9c:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   20ea0:	ldr	x1, [x27, #8]
   20ea4:	ldr	x0, [x20, #16]
   20ea8:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   20eac:	ldr	x0, [x27, #16]
   20eb0:	str	x24, [x20, #16]
   20eb4:	str	x19, [x27, #8]
   20eb8:	add	x3, x0, #0x1
   20ebc:	b	20dc0 <__sanitizer_on_print@@Base+0x14a0>
   20ec0:	mov	x3, x0
   20ec4:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   20ec8:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   20ecc:	add	x2, x2, #0x8c8
   20ed0:	add	x0, x0, #0xb98
   20ed4:	mov	w1, #0x1cd                 	// #461
   20ed8:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   20edc:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   20ee0:	str	x0, [x22]
   20ee4:	b	20e64 <__sanitizer_on_print@@Base+0x1544>
   20ee8:	mov	w26, #0x0                   	// #0
   20eec:	b	20d48 <__sanitizer_on_print@@Base+0x1428>
   20ef0:	mov	x3, x0
   20ef4:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   20ef8:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   20efc:	add	x2, x2, #0x8f8
   20f00:	add	x0, x0, #0xb98
   20f04:	mov	w1, #0x20c                 	// #524
   20f08:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   20f0c:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   20f10:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   20f14:	add	x2, x2, #0x680
   20f18:	add	x0, x0, #0xb98
   20f1c:	mov	w1, #0x18a                 	// #394
   20f20:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   20f24:	mov	x4, x1
   20f28:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   20f2c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   20f30:	add	x2, x2, #0x708
   20f34:	add	x0, x0, #0xb98
   20f38:	mov	w1, #0x18b                 	// #395
   20f3c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   20f40:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   20f44:	add	x0, x0, #0xbf8
   20f48:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   20f4c:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   20f50:	ret
   20f54:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   20f58:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   20f5c:	add	x0, x0, #0x360
   20f60:	ldr	x1, [x1, #4024]
   20f64:	ldr	x1, [x1]
   20f68:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   20f6c:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   20f70:	sxtw	x2, w2
   20f74:	mov	w3, #0x1                   	// #1
   20f78:	str	x1, [x0]
   20f7c:	cmp	x2, #0x40
   20f80:	str	w2, [x0, #8]
   20f84:	str	xzr, [x0, #16]
   20f88:	stp	xzr, xzr, [x0, #24]
   20f8c:	strb	w3, [x0, #104]
   20f90:	b.hi	20fa0 <__sanitizer_on_print@@Base+0x1680>  // b.pmore
   20f94:	add	x0, x0, #0x28
   20f98:	mov	w1, #0x0                   	// #0
   20f9c:	b	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   20fa0:	str	x30, [sp, #-16]!
   20fa4:	mov	x3, x2
   20fa8:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   20fac:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   20fb0:	add	x0, x0, #0x3c0
   20fb4:	add	x2, x2, #0x388
   20fb8:	mov	x4, #0x40                  	// #64
   20fbc:	mov	w1, #0x1d                  	// #29
   20fc0:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   20fc4:	nop
   20fc8:	stp	x19, x20, [sp, #-112]!
   20fcc:	mov	x19, x1
   20fd0:	str	x30, [sp, #64]
   20fd4:	ldrb	w1, [x1]
   20fd8:	cbnz	w1, 20fe8 <__sanitizer_on_print@@Base+0x16c8>
   20fdc:	ldr	x30, [sp, #64]
   20fe0:	ldp	x19, x20, [sp], #112
   20fe4:	ret
   20fe8:	stp	x21, x22, [sp, #16]
   20fec:	adrp	x22, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   20ff0:	mov	x21, x0
   20ff4:	ldr	x20, [x22, #4016]
   20ff8:	stp	x23, x24, [sp, #32]
   20ffc:	ldr	x2, [x20]
   21000:	cbz	x2, 21100 <__sanitizer_on_print@@Base+0x17e0>
   21004:	sub	x0, x2, #0x1
   21008:	tst	x0, x2
   2100c:	b.ne	21218 <__sanitizer_on_print@@Base+0x18f8>  // b.any
   21010:	add	x24, x2, #0xfff
   21014:	neg	x2, x2
   21018:	and	x24, x24, x2
   2101c:	adrp	x23, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   21020:	mov	w2, #0x0                   	// #0
   21024:	add	x1, x23, #0xc10
   21028:	mov	x0, x24
   2102c:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   21030:	mov	x2, #0x0                   	// #0
   21034:	mov	x1, #0x0                   	// #0
   21038:	mov	x20, x0
   2103c:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   21040:	mov	x1, #0x0                   	// #0
   21044:	mov	x0, #0x0                   	// #0
   21048:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   2104c:	cmp	x24, #0xfff
   21050:	b.ls	211b4 <__sanitizer_on_print@@Base+0x1894>  // b.plast
   21054:	mov	x2, #0x1000                	// #4096
   21058:	mov	w1, #0x0                   	// #0
   2105c:	mov	x0, x20
   21060:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   21064:	strb	wzr, [x20]
   21068:	mov	x0, x19
   2106c:	bl	1c400 <__sanitizer_set_report_fd@@Base+0x4580>
   21070:	tst	w0, #0xff
   21074:	b.eq	21110 <__sanitizer_on_print@@Base+0x17f0>  // b.none
   21078:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2107c:	ldr	x0, [x0, #3816]
   21080:	ldr	w0, [x0]
   21084:	cbnz	w0, 210e0 <__sanitizer_on_print@@Base+0x17c0>
   21088:	add	x3, sp, #0x68
   2108c:	add	x2, sp, #0x60
   21090:	add	x1, sp, #0x58
   21094:	mov	x0, x19
   21098:	mov	x5, #0x0                   	// #0
   2109c:	mov	x4, #0x4000000             	// #67108864
   210a0:	bl	17590 <__sanitizer_install_malloc_and_free_hooks@@Base+0x21f8>
   210a4:	tst	w0, #0xff
   210a8:	b.eq	21314 <__sanitizer_on_print@@Base+0x19f4>  // b.none
   210ac:	ldrb	w0, [x21, #104]
   210b0:	ldr	x1, [sp, #88]
   210b4:	cbz	w0, 2122c <__sanitizer_on_print@@Base+0x190c>
   210b8:	mov	x0, x21
   210bc:	bl	20c28 <__sanitizer_on_print@@Base+0x1308>
   210c0:	mov	x1, x24
   210c4:	mov	x0, x20
   210c8:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   210cc:	ldp	x21, x22, [sp, #16]
   210d0:	ldp	x23, x24, [sp, #32]
   210d4:	ldr	x30, [sp, #64]
   210d8:	ldp	x19, x20, [sp], #112
   210dc:	ret
   210e0:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   210e4:	mov	x2, x19
   210e8:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   210ec:	add	x0, x0, #0x420
   210f0:	ldr	x1, [x1, #4024]
   210f4:	ldr	x1, [x1]
   210f8:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   210fc:	b	21088 <__sanitizer_on_print@@Base+0x1768>
   21100:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   21104:	mov	x2, x0
   21108:	str	x0, [x20]
   2110c:	b	21004 <__sanitizer_on_print@@Base+0x16e4>
   21110:	mov	x0, x19
   21114:	bl	1e150 <__sanitizer_set_report_fd@@Base+0x62d0>
   21118:	tst	w0, #0xff
   2111c:	b.ne	21078 <__sanitizer_on_print@@Base+0x1758>  // b.any
   21120:	stp	x25, x26, [sp, #48]
   21124:	ldr	x25, [x22, #4016]
   21128:	ldr	x0, [x25]
   2112c:	cbz	x0, 2125c <__sanitizer_on_print@@Base+0x193c>
   21130:	sub	x1, x0, #0x1
   21134:	tst	x1, x0
   21138:	b.ne	2121c <__sanitizer_on_print@@Base+0x18fc>  // b.any
   2113c:	add	x26, x0, #0xfff
   21140:	neg	x0, x0
   21144:	and	x26, x26, x0
   21148:	add	x1, x23, #0xc10
   2114c:	mov	w2, #0x0                   	// #0
   21150:	mov	x0, x26
   21154:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   21158:	mov	x25, x0
   2115c:	mov	x2, #0x0                   	// #0
   21160:	mov	x1, #0x0                   	// #0
   21164:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   21168:	mov	x1, #0x0                   	// #0
   2116c:	mov	x0, #0x0                   	// #0
   21170:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   21174:	cmp	x26, #0xfff
   21178:	b.ls	212ac <__sanitizer_on_print@@Base+0x198c>  // b.plast
   2117c:	mov	w1, #0x0                   	// #0
   21180:	mov	x0, x25
   21184:	mov	x2, #0x1000                	// #4096
   21188:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   2118c:	strb	wzr, [x25]
   21190:	mov	x0, x25
   21194:	mov	x1, #0x1000                	// #4096
   21198:	bl	14fd0 <_ZdaPvRKSt9nothrow_t@@Base+0x3250>
   2119c:	cbnz	x0, 21268 <__sanitizer_on_print@@Base+0x1948>
   211a0:	mov	x1, x26
   211a4:	mov	x0, x25
   211a8:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   211ac:	ldp	x25, x26, [sp, #48]
   211b0:	b	21078 <__sanitizer_on_print@@Base+0x1758>
   211b4:	stp	x25, x26, [sp, #48]
   211b8:	ldr	x25, [x22, #4016]
   211bc:	ldr	x0, [x25]
   211c0:	cbz	x0, 21250 <__sanitizer_on_print@@Base+0x1930>
   211c4:	sub	x1, x0, #0x1
   211c8:	tst	x1, x0
   211cc:	b.ne	2121c <__sanitizer_on_print@@Base+0x18fc>  // b.any
   211d0:	add	x25, x0, #0xfff
   211d4:	neg	x0, x0
   211d8:	and	x25, x25, x0
   211dc:	add	x1, x23, #0xc10
   211e0:	mov	x0, x25
   211e4:	mov	w2, #0x0                   	// #0
   211e8:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   211ec:	mov	x26, x0
   211f0:	mov	x2, #0x0                   	// #0
   211f4:	mov	x1, x20
   211f8:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   211fc:	mov	x1, x24
   21200:	mov	x0, x20
   21204:	mov	x24, x25
   21208:	mov	x20, x26
   2120c:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   21210:	ldp	x25, x26, [sp, #48]
   21214:	b	21054 <__sanitizer_on_print@@Base+0x1734>
   21218:	stp	x25, x26, [sp, #48]
   2121c:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   21220:	add	x0, x0, #0xbf8
   21224:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   21228:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   2122c:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   21230:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   21234:	add	x2, x2, #0x478
   21238:	add	x0, x0, #0x3c0
   2123c:	mov	x4, #0x0                   	// #0
   21240:	mov	x3, #0x0                   	// #0
   21244:	mov	w1, #0x76                  	// #118
   21248:	stp	x25, x26, [sp, #48]
   2124c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   21250:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   21254:	str	x0, [x25]
   21258:	b	211c4 <__sanitizer_on_print@@Base+0x18a4>
   2125c:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   21260:	str	x0, [x25]
   21264:	b	21130 <__sanitizer_on_print@@Base+0x1810>
   21268:	mov	x0, x25
   2126c:	bl	14968 <_ZdaPvRKSt9nothrow_t@@Base+0x2be8>
   21270:	sub	x2, x0, x25
   21274:	mov	x22, #0xfff                 	// #4095
   21278:	cmp	x2, x22
   2127c:	mov	x1, x25
   21280:	csel	x2, x2, x22, ls  // ls = plast
   21284:	mov	x0, x20
   21288:	bl	1ada8 <__sanitizer_set_report_fd@@Base+0x2f28>
   2128c:	mov	x0, x20
   21290:	bl	1a690 <__sanitizer_set_report_fd@@Base+0x2810>
   21294:	mov	x1, x19
   21298:	sub	x2, x22, x0
   2129c:	mov	x19, x20
   212a0:	mov	x0, x20
   212a4:	bl	1ada8 <__sanitizer_set_report_fd@@Base+0x2f28>
   212a8:	b	211a0 <__sanitizer_on_print@@Base+0x1880>
   212ac:	ldr	x22, [x22, #4016]
   212b0:	ldr	x0, [x22]
   212b4:	cbz	x0, 21308 <__sanitizer_on_print@@Base+0x19e8>
   212b8:	sub	x1, x0, #0x1
   212bc:	tst	x1, x0
   212c0:	b.ne	2121c <__sanitizer_on_print@@Base+0x18fc>  // b.any
   212c4:	add	x22, x0, #0xfff
   212c8:	neg	x0, x0
   212cc:	and	x22, x22, x0
   212d0:	add	x1, x23, #0xc10
   212d4:	mov	x0, x22
   212d8:	mov	w2, #0x0                   	// #0
   212dc:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   212e0:	mov	x23, x0
   212e4:	mov	x2, #0x0                   	// #0
   212e8:	mov	x1, x25
   212ec:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   212f0:	mov	x1, x26
   212f4:	mov	x0, x25
   212f8:	mov	x26, x22
   212fc:	mov	x25, x23
   21300:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   21304:	b	2117c <__sanitizer_on_print@@Base+0x185c>
   21308:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   2130c:	str	x0, [x22]
   21310:	b	212b8 <__sanitizer_on_print@@Base+0x1998>
   21314:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   21318:	mov	x2, x19
   2131c:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   21320:	add	x0, x0, #0x448
   21324:	ldr	x1, [x1, #4024]
   21328:	stp	x25, x26, [sp, #48]
   2132c:	ldr	x1, [x1]
   21330:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   21334:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   21338:	stp	x19, x20, [sp, #-64]!
   2133c:	mov	x20, x0
   21340:	str	x30, [sp, #48]
   21344:	strb	wzr, [x0, #104]
   21348:	ldr	w0, [x0, #8]
   2134c:	cmp	w0, #0x0
   21350:	b.le	21414 <__sanitizer_on_print@@Base+0x1af4>
   21354:	mov	x19, #0x0                   	// #0
   21358:	stp	x21, x22, [sp, #16]
   2135c:	mov	x22, x1
   21360:	mov	x21, x2
   21364:	stp	x23, x24, [sp, #32]
   21368:	mov	x23, x3
   2136c:	b	2137c <__sanitizer_on_print@@Base+0x1a5c>
   21370:	ldr	w0, [x20, #8]
   21374:	cmp	w0, w19
   21378:	b.le	2140c <__sanitizer_on_print@@Base+0x1aec>
   2137c:	ldr	x1, [x20]
   21380:	mov	w24, w19
   21384:	mov	x0, x21
   21388:	ldr	x1, [x1, x19, lsl #3]
   2138c:	add	x19, x19, #0x1
   21390:	bl	1a560 <__sanitizer_set_report_fd@@Base+0x26e0>
   21394:	cbnz	w0, 21370 <__sanitizer_on_print@@Base+0x1a50>
   21398:	add	x24, x20, w24, sxtw
   2139c:	ldrb	w0, [x24, #40]
   213a0:	cbz	w0, 2140c <__sanitizer_on_print@@Base+0x1aec>
   213a4:	ldr	x0, [x20, #32]
   213a8:	cbz	x0, 2140c <__sanitizer_on_print@@Base+0x1aec>
   213ac:	mov	x19, #0x0                   	// #0
   213b0:	b	213c0 <__sanitizer_on_print@@Base+0x1aa0>
   213b4:	ldr	x0, [x20, #32]
   213b8:	cmp	x19, x0
   213bc:	b.cs	2140c <__sanitizer_on_print@@Base+0x1aec>  // b.hs, b.nlast
   213c0:	ldr	x0, [x20, #16]
   213c4:	lsl	x4, x19, #5
   213c8:	mov	x1, x21
   213cc:	add	x19, x19, #0x1
   213d0:	add	x24, x0, x4
   213d4:	ldr	x0, [x0, x4]
   213d8:	bl	1a560 <__sanitizer_set_report_fd@@Base+0x26e0>
   213dc:	cbnz	w0, 213b4 <__sanitizer_on_print@@Base+0x1a94>
   213e0:	ldr	x0, [x24, #8]
   213e4:	mov	x1, x22
   213e8:	bl	14cf8 <_ZdaPvRKSt9nothrow_t@@Base+0x2f78>
   213ec:	ands	w0, w0, #0xff
   213f0:	b.eq	213b4 <__sanitizer_on_print@@Base+0x1a94>  // b.none
   213f4:	ldp	x21, x22, [sp, #16]
   213f8:	str	x24, [x23]
   213fc:	ldp	x23, x24, [sp, #32]
   21400:	ldr	x30, [sp, #48]
   21404:	ldp	x19, x20, [sp], #64
   21408:	ret
   2140c:	ldp	x21, x22, [sp, #16]
   21410:	ldp	x23, x24, [sp, #32]
   21414:	mov	w0, #0x0                   	// #0
   21418:	ldr	x30, [sp, #48]
   2141c:	ldp	x19, x20, [sp], #64
   21420:	ret
   21424:	nop
   21428:	ldrb	w2, [x0, #104]
   2142c:	cbz	w2, 21434 <__sanitizer_on_print@@Base+0x1b14>
   21430:	b	20c28 <__sanitizer_on_print@@Base+0x1308>
   21434:	str	x30, [sp, #-16]!
   21438:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   2143c:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   21440:	add	x2, x2, #0x478
   21444:	add	x0, x0, #0x3c0
   21448:	mov	x4, #0x0                   	// #0
   2144c:	mov	x3, #0x0                   	// #0
   21450:	mov	w1, #0x76                  	// #118
   21454:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   21458:	ldr	x0, [x0, #32]
   2145c:	ret
   21460:	stp	x19, x20, [sp, #-48]!
   21464:	mov	x20, x0
   21468:	ldr	w0, [x0, #8]
   2146c:	str	x30, [sp, #32]
   21470:	cmp	w0, #0x0
   21474:	b.le	214cc <__sanitizer_on_print@@Base+0x1bac>
   21478:	mov	x19, #0x0                   	// #0
   2147c:	stp	x21, x22, [sp, #16]
   21480:	mov	x21, x1
   21484:	b	21494 <__sanitizer_on_print@@Base+0x1b74>
   21488:	ldr	w0, [x20, #8]
   2148c:	cmp	w0, w19
   21490:	b.le	214c8 <__sanitizer_on_print@@Base+0x1ba8>
   21494:	ldr	x2, [x20]
   21498:	mov	w22, w19
   2149c:	mov	x0, x21
   214a0:	ldr	x1, [x2, x19, lsl #3]
   214a4:	add	x19, x19, #0x1
   214a8:	bl	1a560 <__sanitizer_set_report_fd@@Base+0x26e0>
   214ac:	cbnz	w0, 21488 <__sanitizer_on_print@@Base+0x1b68>
   214b0:	add	x20, x20, w22, sxtw
   214b4:	ldp	x21, x22, [sp, #16]
   214b8:	ldrb	w0, [x20, #40]
   214bc:	ldr	x30, [sp, #32]
   214c0:	ldp	x19, x20, [sp], #48
   214c4:	ret
   214c8:	ldp	x21, x22, [sp, #16]
   214cc:	mov	w0, #0x0                   	// #0
   214d0:	ldr	x30, [sp, #32]
   214d4:	ldp	x19, x20, [sp], #48
   214d8:	ret
   214dc:	nop
   214e0:	ldr	x4, [x0, #32]
   214e4:	cmp	x1, x4
   214e8:	b.cs	214f8 <__sanitizer_on_print@@Base+0x1bd8>  // b.hs, b.nlast
   214ec:	ldr	x0, [x0, #16]
   214f0:	add	x0, x0, x1, lsl #5
   214f4:	ret
   214f8:	str	x30, [sp, #-16]!
   214fc:	mov	x3, x1
   21500:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   21504:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   21508:	add	x2, x2, #0x490
   2150c:	add	x0, x0, #0x3c0
   21510:	mov	w1, #0xaa                  	// #170
   21514:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   21518:	stp	x19, x20, [sp, #-96]!
   2151c:	stp	x21, x22, [sp, #16]
   21520:	mov	x21, x1
   21524:	ldr	x1, [x0, #32]
   21528:	str	x30, [sp, #64]
   2152c:	cbz	x1, 215c0 <__sanitizer_on_print@@Base+0x1ca0>
   21530:	adrp	x22, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   21534:	mov	x20, x0
   21538:	mov	x19, #0x0                   	// #0
   2153c:	stp	x23, x24, [sp, #32]
   21540:	adrp	x23, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   21544:	ldr	x22, [x22, #4016]
   21548:	add	x23, x23, #0xc10
   2154c:	stp	x25, x26, [sp, #48]
   21550:	add	x26, sp, #0x58
   21554:	b	21564 <__sanitizer_on_print@@Base+0x1c44>
   21558:	add	x19, x19, #0x1
   2155c:	cmp	x19, x1
   21560:	b.cs	215b8 <__sanitizer_on_print@@Base+0x1c98>  // b.hs, b.nlast
   21564:	ldr	x2, [x20, #16]
   21568:	add	x2, x2, x19, lsl #5
   2156c:	ldr	w0, [x2, #16]
   21570:	cbz	w0, 21558 <__sanitizer_on_print@@Base+0x1c38>
   21574:	ldp	x4, x3, [x21, #8]
   21578:	str	x2, [sp, #88]
   2157c:	lsr	x4, x4, #3
   21580:	cmp	x3, x4
   21584:	b.hi	2167c <__sanitizer_on_print@@Base+0x1d5c>  // b.pmore
   21588:	add	x24, x3, #0x1
   2158c:	b.eq	215d0 <__sanitizer_on_print@@Base+0x1cb0>  // b.none
   21590:	ldr	x25, [x21]
   21594:	str	x24, [x21, #16]
   21598:	mov	x1, x26
   2159c:	add	x0, x25, x3, lsl #3
   215a0:	mov	x2, #0x8                   	// #8
   215a4:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   215a8:	ldr	x1, [x20, #32]
   215ac:	add	x19, x19, #0x1
   215b0:	cmp	x19, x1
   215b4:	b.cc	21564 <__sanitizer_on_print@@Base+0x1c44>  // b.lo, b.ul, b.last
   215b8:	ldp	x23, x24, [sp, #32]
   215bc:	ldp	x25, x26, [sp, #48]
   215c0:	ldp	x21, x22, [sp, #16]
   215c4:	ldr	x30, [sp, #64]
   215c8:	ldp	x19, x20, [sp], #96
   215cc:	ret
   215d0:	tst	x3, x24
   215d4:	b.eq	21610 <__sanitizer_on_print@@Base+0x1cf0>  // b.none
   215d8:	clz	x2, x24
   215dc:	mov	w0, #0x3f                  	// #63
   215e0:	sub	w0, w0, w2
   215e4:	mov	x2, #0x1                   	// #1
   215e8:	add	w4, w0, #0x1
   215ec:	lsl	x4, x2, x4
   215f0:	cmp	x4, x24
   215f4:	b.ls	216a4 <__sanitizer_on_print@@Base+0x1d84>  // b.plast
   215f8:	lsl	x0, x2, x0
   215fc:	cmp	x0, x24
   21600:	b.cs	216d8 <__sanitizer_on_print@@Base+0x1db8>  // b.hs, b.nlast
   21604:	cmp	x3, x4
   21608:	b.hi	216c0 <__sanitizer_on_print@@Base+0x1da0>  // b.pmore
   2160c:	mov	x24, x4
   21610:	ldr	x0, [x22]
   21614:	lsl	x24, x24, #3
   21618:	cbz	x0, 21670 <__sanitizer_on_print@@Base+0x1d50>
   2161c:	sub	x1, x0, #0x1
   21620:	tst	x1, x0
   21624:	b.ne	21694 <__sanitizer_on_print@@Base+0x1d74>  // b.any
   21628:	add	x24, x24, x1
   2162c:	neg	x0, x0
   21630:	and	x24, x24, x0
   21634:	mov	x1, x23
   21638:	mov	x0, x24
   2163c:	mov	w2, #0x0                   	// #0
   21640:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   21644:	mov	x25, x0
   21648:	ldr	x1, [x21]
   2164c:	ldr	x2, [x21, #16]
   21650:	lsl	x2, x2, #3
   21654:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   21658:	ldp	x0, x1, [x21]
   2165c:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   21660:	stp	x25, x24, [x21]
   21664:	ldr	x3, [x21, #16]
   21668:	add	x24, x3, #0x1
   2166c:	b	21594 <__sanitizer_on_print@@Base+0x1c74>
   21670:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   21674:	str	x0, [x22]
   21678:	b	2161c <__sanitizer_on_print@@Base+0x1cfc>
   2167c:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   21680:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   21684:	add	x2, x2, #0x8c8
   21688:	add	x0, x0, #0xb98
   2168c:	mov	w1, #0x1cd                 	// #461
   21690:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   21694:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   21698:	add	x0, x0, #0xbf8
   2169c:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   216a0:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   216a4:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   216a8:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   216ac:	mov	x3, x24
   216b0:	add	x2, x2, #0x680
   216b4:	add	x0, x0, #0xb98
   216b8:	mov	w1, #0x18a                 	// #394
   216bc:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   216c0:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   216c4:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   216c8:	add	x2, x2, #0x8f8
   216cc:	add	x0, x0, #0xb98
   216d0:	mov	w1, #0x20c                 	// #524
   216d4:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   216d8:	mov	x4, x0
   216dc:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   216e0:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   216e4:	mov	x3, x24
   216e8:	add	x2, x2, #0x708
   216ec:	add	x0, x0, #0xb98
   216f0:	mov	w1, #0x18b                 	// #395
   216f4:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   216f8:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   216fc:	ldr	x0, [x0, #4056]
   21700:	ldrb	w0, [x0, #121]
   21704:	cbz	w0, 217dc <__sanitizer_on_print@@Base+0x1ebc>
   21708:	stp	x19, x20, [sp, #-48]!
   2170c:	mrs	x19, tpidr_el0
   21710:	adrp	x20, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   21714:	ldr	x20, [x20, #3608]
   21718:	stp	x21, x22, [sp, #16]
   2171c:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   21720:	add	x1, x19, x20
   21724:	ldr	x0, [x21, #3816]
   21728:	ldr	x22, [x19, x20]
   2172c:	ldr	w0, [x0]
   21730:	str	x30, [sp, #32]
   21734:	sxtw	x0, w0
   21738:	cmp	x0, #0x1
   2173c:	b.hi	217b4 <__sanitizer_on_print@@Base+0x1e94>  // b.pmore
   21740:	mov	x0, #0xffffffffffffffff    	// #-1
   21744:	str	x0, [x19, x20]
   21748:	add	x19, x19, x20
   2174c:	cbz	x22, 217a4 <__sanitizer_on_print@@Base+0x1e84>
   21750:	ldr	x21, [x21, #3816]
   21754:	ldr	x19, [x19, #8]
   21758:	ldr	w0, [x21]
   2175c:	sxtw	x0, w0
   21760:	cmp	x0, #0x1
   21764:	b.ls	2177c <__sanitizer_on_print@@Base+0x1e5c>  // b.plast
   21768:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   2176c:	mov	x2, x22
   21770:	add	x0, x0, #0x4e0
   21774:	mov	x1, x19
   21778:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   2177c:	mov	x0, x19
   21780:	lsl	x1, x22, #4
   21784:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   21788:	adrp	x0, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   2178c:	add	x0, x0, #0x730
   21790:	ldxr	x1, [x0]
   21794:	sub	x1, x1, #0x1
   21798:	stlxr	w2, x1, [x0]
   2179c:	cbnz	w2, 21790 <__sanitizer_on_print@@Base+0x1e70>
   217a0:	dmb	ish
   217a4:	ldp	x21, x22, [sp, #16]
   217a8:	ldr	x30, [sp, #32]
   217ac:	ldp	x19, x20, [sp], #48
   217b0:	ret
   217b4:	mov	x2, x22
   217b8:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   217bc:	add	x0, x0, #0x4b8
   217c0:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   217c4:	ldr	x22, [x19, x20]
   217c8:	mov	x0, #0xffffffffffffffff    	// #-1
   217cc:	str	x0, [x19, x20]
   217d0:	add	x19, x19, x20
   217d4:	cbnz	x22, 21750 <__sanitizer_on_print@@Base+0x1e30>
   217d8:	b	217a4 <__sanitizer_on_print@@Base+0x1e84>
   217dc:	ret
   217e0:	adrp	x5, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   217e4:	stp	x19, x20, [sp, #-144]!
   217e8:	mov	x20, x0
   217ec:	ldr	x5, [x5, #4056]
   217f0:	ldrb	w0, [x5, #121]
   217f4:	str	x30, [sp, #80]
   217f8:	cbz	w0, 219e4 <__sanitizer_on_print@@Base+0x20c4>
   217fc:	adrp	x19, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   21800:	ldr	x19, [x19, #3608]
   21804:	stp	x23, x24, [sp, #32]
   21808:	mrs	x24, tpidr_el0
   2180c:	stp	x27, x28, [sp, #64]
   21810:	mov	x28, x1
   21814:	add	x1, x24, x19
   21818:	ldr	x5, [x24, x19]
   2181c:	cmn	x5, #0x1
   21820:	b.eq	21a64 <__sanitizer_on_print@@Base+0x2144>  // b.none
   21824:	stp	x21, x22, [sp, #16]
   21828:	mov	x23, x3
   2182c:	mov	x22, x2
   21830:	ldr	x21, [x20]
   21834:	stp	x25, x26, [sp, #48]
   21838:	add	x3, x21, #0x1
   2183c:	cmp	x5, x3
   21840:	b.cc	2191c <__sanitizer_on_print@@Base+0x1ffc>  // b.lo, b.ul, b.last
   21844:	ldr	x26, [x1, #8]
   21848:	lsl	x21, x21, #4
   2184c:	ldr	x26, [x26, x21]
   21850:	cbnz	x26, 219d4 <__sanitizer_on_print@@Base+0x20b4>
   21854:	adrp	x25, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   21858:	ldr	x3, [x20, #8]
   2185c:	ldr	x0, [x25, #3816]
   21860:	sub	x5, x28, x3
   21864:	str	x5, [sp, #136]
   21868:	ldr	w0, [x0]
   2186c:	sxtw	x0, w0
   21870:	cmp	x0, #0x1
   21874:	b.ls	218a0 <__sanitizer_on_print@@Base+0x1f80>  // b.plast
   21878:	adrp	x0, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   2187c:	mov	x4, x28
   21880:	ldr	x2, [x20]
   21884:	mov	x1, x20
   21888:	ldr	x7, [x0, #1840]
   2188c:	add	x6, sp, #0x88
   21890:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   21894:	add	x0, x0, #0x5c0
   21898:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   2189c:	ldr	x5, [sp, #136]
   218a0:	add	x1, x24, x19
   218a4:	ldr	x0, [x1, #24]
   218a8:	cmp	x0, x5
   218ac:	b.eq	21a30 <__sanitizer_on_print@@Base+0x2110>  // b.none
   218b0:	cmp	x23, x5
   218b4:	ccmp	x22, x5, #0x2, hi  // hi = pmore
   218b8:	b.ls	21a8c <__sanitizer_on_print@@Base+0x216c>  // b.plast
   218bc:	and	x0, x5, #0xfff
   218c0:	cmp	x0, #0x10
   218c4:	ldr	x0, [x25, #3816]
   218c8:	b.eq	219fc <__sanitizer_on_print@@Base+0x20dc>  // b.none
   218cc:	ldr	w0, [x0]
   218d0:	sxtw	x0, w0
   218d4:	cmp	x0, #0x1
   218d8:	b.ls	218ec <__sanitizer_on_print@@Base+0x1fcc>  // b.plast
   218dc:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   218e0:	add	x0, x0, #0x6a0
   218e4:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   218e8:	ldr	x5, [sp, #136]
   218ec:	add	x19, x24, x19
   218f0:	ldp	x23, x24, [sp, #32]
   218f4:	ldr	x1, [x19, #8]
   218f8:	ldp	x27, x28, [sp, #64]
   218fc:	add	x0, x1, x21
   21900:	str	x5, [x1, x21]
   21904:	ldp	x21, x22, [sp, #16]
   21908:	str	x26, [x0, #8]
   2190c:	ldp	x25, x26, [sp, #48]
   21910:	ldr	x30, [sp, #80]
   21914:	ldp	x19, x20, [sp], #144
   21918:	ret
   2191c:	tst	x3, x21
   21920:	b.eq	219f4 <__sanitizer_on_print@@Base+0x20d4>  // b.none
   21924:	clz	x1, x3
   21928:	mov	w4, #0x3f                  	// #63
   2192c:	sub	w4, w4, w1
   21930:	mov	x1, #0x1                   	// #1
   21934:	add	w27, w4, #0x1
   21938:	lsl	x27, x1, x27
   2193c:	cmp	x3, x27
   21940:	b.cs	21b70 <__sanitizer_on_print@@Base+0x2250>  // b.hs, b.nlast
   21944:	lsl	x4, x1, x4
   21948:	cmp	x3, x4
   2194c:	b.ls	21b8c <__sanitizer_on_print@@Base+0x226c>  // b.plast
   21950:	cmp	x27, #0x100
   21954:	mov	x4, #0x100                 	// #256
   21958:	csel	x27, x27, x4, cs  // cs = hs, nlast
   2195c:	adrp	x1, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   21960:	mov	w2, #0x0                   	// #0
   21964:	add	x1, x1, #0x508
   21968:	lsl	x0, x27, #4
   2196c:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   21970:	adrp	x4, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   21974:	mov	x26, x0
   21978:	add	x0, x4, #0x730
   2197c:	ldxr	x2, [x0]
   21980:	add	x1, x2, #0x1
   21984:	stlxr	w3, x1, [x0]
   21988:	cbnz	w3, 2197c <__sanitizer_on_print@@Base+0x205c>
   2198c:	adrp	x25, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   21990:	dmb	ish
   21994:	ldr	x0, [x25, #3816]
   21998:	ldr	w0, [x0]
   2199c:	sxtw	x0, w0
   219a0:	cmp	x0, #0x1
   219a4:	b.hi	21a70 <__sanitizer_on_print@@Base+0x2150>  // b.pmore
   219a8:	mov	x0, #0xfffff               	// #1048575
   219ac:	cmp	x2, x0
   219b0:	b.hi	21b50 <__sanitizer_on_print@@Base+0x2230>  // b.pmore
   219b4:	ldr	x3, [x24, x19]
   219b8:	add	x5, x24, x19
   219bc:	cbnz	x3, 21ab8 <__sanitizer_on_print@@Base+0x2198>
   219c0:	lsl	x21, x21, #4
   219c4:	str	x26, [x5, #8]
   219c8:	str	x27, [x24, x19]
   219cc:	ldr	x26, [x26, x21]
   219d0:	cbz	x26, 21854 <__sanitizer_on_print@@Base+0x1f34>
   219d4:	ldp	x21, x22, [sp, #16]
   219d8:	ldp	x23, x24, [sp, #32]
   219dc:	ldp	x25, x26, [sp, #48]
   219e0:	ldp	x27, x28, [sp, #64]
   219e4:	mov	x0, #0x0                   	// #0
   219e8:	ldr	x30, [sp, #80]
   219ec:	ldp	x19, x20, [sp], #144
   219f0:	ret
   219f4:	mov	x27, x3
   219f8:	b	21950 <__sanitizer_on_print@@Base+0x2030>
   219fc:	ldr	w0, [x0]
   21a00:	ldp	x26, x5, [x5, #-16]
   21a04:	str	x5, [sp, #136]
   21a08:	sxtw	x0, w0
   21a0c:	cmp	x0, #0x1
   21a10:	b.ls	218ec <__sanitizer_on_print@@Base+0x1fcc>  // b.plast
   21a14:	mov	x1, x5
   21a18:	mov	x2, x26
   21a1c:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   21a20:	add	x0, x0, #0x668
   21a24:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   21a28:	ldr	x5, [sp, #136]
   21a2c:	b	218ec <__sanitizer_on_print@@Base+0x1fcc>
   21a30:	ldr	x0, [x25, #3816]
   21a34:	ldr	x26, [x1, #16]
   21a38:	ldr	w0, [x0]
   21a3c:	sxtw	x0, w0
   21a40:	cmp	x0, #0x1
   21a44:	b.ls	218ec <__sanitizer_on_print@@Base+0x1fcc>  // b.plast
   21a48:	mov	x1, x5
   21a4c:	mov	x2, x26
   21a50:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   21a54:	add	x0, x0, #0x610
   21a58:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   21a5c:	ldr	x5, [sp, #136]
   21a60:	b	218ec <__sanitizer_on_print@@Base+0x1fcc>
   21a64:	ldp	x23, x24, [sp, #32]
   21a68:	ldp	x27, x28, [sp, #64]
   21a6c:	b	219e4 <__sanitizer_on_print@@Base+0x20c4>
   21a70:	add	x1, x24, x19
   21a74:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   21a78:	add	x0, x0, #0x518
   21a7c:	str	x2, [sp, #96]
   21a80:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   21a84:	ldr	x2, [sp, #96]
   21a88:	b	219a8 <__sanitizer_on_print@@Base+0x2088>
   21a8c:	ldr	x0, [x25, #3816]
   21a90:	ldr	w0, [x0]
   21a94:	sxtw	x0, w0
   21a98:	cmp	x0, #0x1
   21a9c:	b.ls	218ec <__sanitizer_on_print@@Base+0x1fcc>  // b.plast
   21aa0:	mov	x1, x5
   21aa4:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   21aa8:	add	x0, x0, #0x648
   21aac:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   21ab0:	ldr	x5, [sp, #136]
   21ab4:	b	218ec <__sanitizer_on_print@@Base+0x1fcc>
   21ab8:	ldr	x6, [x5, #8]
   21abc:	lsl	x7, x3, #4
   21ac0:	mov	x2, x7
   21ac4:	mov	x0, x26
   21ac8:	mov	x1, x6
   21acc:	stp	x6, x7, [sp, #96]
   21ad0:	stp	x5, x3, [sp, #112]
   21ad4:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   21ad8:	ldr	x0, [x25, #3816]
   21adc:	str	x27, [x24, x19]
   21ae0:	ldr	x5, [sp, #112]
   21ae4:	ldr	w0, [x0]
   21ae8:	ldp	x6, x7, [sp, #96]
   21aec:	str	x26, [x5, #8]
   21af0:	sxtw	x0, w0
   21af4:	cmp	x0, #0x1
   21af8:	b.hi	21b30 <__sanitizer_on_print@@Base+0x2210>  // b.pmore
   21afc:	mov	x1, x7
   21b00:	mov	x0, x6
   21b04:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   21b08:	adrp	x4, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   21b0c:	add	x4, x4, #0x730
   21b10:	ldxr	x0, [x4]
   21b14:	sub	x0, x0, #0x1
   21b18:	stlxr	w1, x0, [x4]
   21b1c:	cbnz	w1, 21b10 <__sanitizer_on_print@@Base+0x21f0>
   21b20:	add	x0, x24, x19
   21b24:	dmb	ish
   21b28:	ldr	x26, [x0, #8]
   21b2c:	b	21848 <__sanitizer_on_print@@Base+0x1f28>
   21b30:	ldr	x3, [sp, #120]
   21b34:	mov	x1, x6
   21b38:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   21b3c:	add	x0, x0, #0x4e0
   21b40:	mov	x2, x3
   21b44:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   21b48:	ldp	x6, x7, [sp, #96]
   21b4c:	b	21afc <__sanitizer_on_print@@Base+0x21dc>
   21b50:	mov	x3, x2
   21b54:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   21b58:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   21b5c:	add	x0, x0, #0x560
   21b60:	add	x2, x2, #0x540
   21b64:	mov	x4, #0x100000              	// #1048576
   21b68:	mov	w1, #0x3d                  	// #61
   21b6c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   21b70:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   21b74:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   21b78:	mov	x4, x27
   21b7c:	add	x2, x2, #0x680
   21b80:	add	x0, x0, #0xb98
   21b84:	mov	w1, #0x18a                 	// #394
   21b88:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   21b8c:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   21b90:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   21b94:	add	x2, x2, #0x708
   21b98:	add	x0, x0, #0xb98
   21b9c:	mov	w1, #0x18b                 	// #395
   21ba0:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   21ba4:	nop
   21ba8:	adrp	x3, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   21bac:	stp	x19, x20, [sp, #-32]!
   21bb0:	mov	x19, x0
   21bb4:	ldr	x3, [x3, #4056]
   21bb8:	ldrb	w0, [x3, #121]
   21bbc:	str	x30, [sp, #16]
   21bc0:	cbz	w0, 21bf4 <__sanitizer_on_print@@Base+0x22d4>
   21bc4:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   21bc8:	mov	x20, x1
   21bcc:	ldr	x0, [x0, #3816]
   21bd0:	ldr	w0, [x0]
   21bd4:	sxtw	x0, w0
   21bd8:	cmp	x0, #0x1
   21bdc:	b.hi	21c00 <__sanitizer_on_print@@Base+0x22e0>  // b.pmore
   21be0:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   21be4:	ldr	x0, [x0, #3608]
   21be8:	mrs	x1, tpidr_el0
   21bec:	add	x0, x1, x0
   21bf0:	stp	x20, x19, [x0, #16]
   21bf4:	ldr	x30, [sp, #16]
   21bf8:	ldp	x19, x20, [sp], #32
   21bfc:	ret
   21c00:	mov	x2, x1
   21c04:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   21c08:	mov	x1, x19
   21c0c:	add	x0, x0, #0x6d0
   21c10:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   21c14:	b	21be0 <__sanitizer_on_print@@Base+0x22c0>
   21c18:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   21c1c:	ldr	x0, [x0, #3608]
   21c20:	mrs	x1, tpidr_el0
   21c24:	add	x0, x1, x0
   21c28:	ret
   21c2c:	nop
   21c30:	ldr	x0, [x0]
   21c34:	cmn	x0, #0x1
   21c38:	cset	w0, eq  // eq = none
   21c3c:	ret
   21c40:	stp	x19, x20, [sp, #-32]!
   21c44:	mov	x19, x0
   21c48:	ldr	x0, [x0, #160]
   21c4c:	str	x30, [sp, #16]
   21c50:	cbnz	x0, 21c84 <__sanitizer_on_print@@Base+0x2364>
   21c54:	dup	v0.2d, x1
   21c58:	str	xzr, [x1, #128]
   21c5c:	mov	x1, #0x1                   	// #1
   21c60:	mov	x2, x1
   21c64:	str	x1, [x19, #160]
   21c68:	ldr	w1, [x19, #12]
   21c6c:	stur	q0, [x19, #168]
   21c70:	cmp	x2, x1
   21c74:	b.hi	21ca8 <__sanitizer_on_print@@Base+0x2388>  // b.pmore
   21c78:	ldr	x30, [sp, #16]
   21c7c:	ldp	x19, x20, [sp], #32
   21c80:	ret
   21c84:	str	xzr, [x1, #128]
   21c88:	add	x2, x0, #0x1
   21c8c:	ldr	x4, [x19, #176]
   21c90:	str	x1, [x4, #128]
   21c94:	str	x2, [x19, #160]
   21c98:	str	x1, [x19, #176]
   21c9c:	ldr	w1, [x19, #12]
   21ca0:	cmp	x2, x1
   21ca4:	b.ls	21c78 <__sanitizer_on_print@@Base+0x2358>  // b.plast
   21ca8:	ldr	x20, [x19, #168]
   21cac:	add	x2, x19, #0xa0
   21cb0:	ldr	x1, [x20, #128]
   21cb4:	str	x1, [x2, #8]
   21cb8:	cbz	x1, 21d5c <__sanitizer_on_print@@Base+0x243c>
   21cbc:	ldr	w3, [x20, #112]
   21cc0:	str	x0, [x19, #160]
   21cc4:	cmp	x3, #0x4
   21cc8:	b.ne	21d70 <__sanitizer_on_print@@Base+0x2450>  // b.any
   21ccc:	strb	wzr, [x20, #48]
   21cd0:	str	wzr, [x20, #112]
   21cd4:	dmb	ish
   21cd8:	str	wzr, [x20, #136]
   21cdc:	ldr	x1, [x20]
   21ce0:	adrp	x0, 22000 <__sanitizer_on_print@@Base+0x26e0>
   21ce4:	add	x0, x0, #0xf98
   21ce8:	ldr	x1, [x1, #40]
   21cec:	cmp	x1, x0
   21cf0:	b.ne	21d64 <__sanitizer_on_print@@Base+0x2444>  // b.any
   21cf4:	ldr	w0, [x20, #24]
   21cf8:	add	w0, w0, #0x1
   21cfc:	str	w0, [x20, #24]
   21d00:	ldr	w1, [x19, #16]
   21d04:	cmp	w1, #0x0
   21d08:	ccmp	w0, w1, #0x0, ne  // ne = any
   21d0c:	b.cs	21c78 <__sanitizer_on_print@@Base+0x2358>  // b.hs, b.nlast
   21d10:	ldr	x0, [x19, #184]
   21d14:	cbnz	x0, 21d38 <__sanitizer_on_print@@Base+0x2418>
   21d18:	dup	v0.2d, x20
   21d1c:	str	xzr, [x20, #128]
   21d20:	mov	x0, #0x1                   	// #1
   21d24:	str	x0, [x19, #184]
   21d28:	ldr	x30, [sp, #16]
   21d2c:	str	q0, [x19, #192]
   21d30:	ldp	x19, x20, [sp], #32
   21d34:	ret
   21d38:	str	xzr, [x20, #128]
   21d3c:	add	x0, x0, #0x1
   21d40:	ldr	x30, [sp, #16]
   21d44:	ldr	x2, [x19, #200]
   21d48:	str	x20, [x2, #128]
   21d4c:	str	x0, [x19, #184]
   21d50:	str	x20, [x19, #200]
   21d54:	ldp	x19, x20, [sp], #32
   21d58:	ret
   21d5c:	str	xzr, [x2, #16]
   21d60:	b	21cbc <__sanitizer_on_print@@Base+0x239c>
   21d64:	mov	x0, x20
   21d68:	blr	x1
   21d6c:	b	21cf4 <__sanitizer_on_print@@Base+0x23d4>
   21d70:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   21d74:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   21d78:	add	x2, x2, #0x6f0
   21d7c:	add	x0, x0, #0x720
   21d80:	mov	x4, #0x4                   	// #4
   21d84:	mov	w1, #0x144                 	// #324
   21d88:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   21d8c:	nop
   21d90:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   21d94:	add	x2, x2, #0x9d8
   21d98:	str	x2, [x0]
   21d9c:	str	w1, [x0, #8]
   21da0:	str	xzr, [x0, #16]
   21da4:	str	wzr, [x0, #24]
   21da8:	stp	xzr, xzr, [x0, #32]
   21dac:	strb	wzr, [x0, #48]
   21db0:	str	wzr, [x0, #112]
   21db4:	strb	wzr, [x0, #116]
   21db8:	stp	xzr, xzr, [x0, #120]
   21dbc:	dmb	ish
   21dc0:	str	wzr, [x0, #136]
   21dc4:	ret
   21dc8:	str	x30, [sp, #-16]!
   21dcc:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   21dd0:	add	x1, x1, #0x9d8
   21dd4:	str	x1, [x0]
   21dd8:	adrp	x3, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   21ddc:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   21de0:	add	x0, x3, #0x720
   21de4:	add	x2, x2, #0xf40
   21de8:	mov	x4, #0x0                   	// #0
   21dec:	mov	x3, #0x0                   	// #0
   21df0:	mov	w1, #0x1c                  	// #28
   21df4:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   21df8:	strb	wzr, [x0, #48]
   21dfc:	cbz	x1, 21e20 <__sanitizer_on_print@@Base+0x2500>
   21e00:	stp	x19, x30, [sp, #-16]!
   21e04:	mov	x19, x0
   21e08:	mov	x2, #0x40                  	// #64
   21e0c:	add	x0, x0, #0x30
   21e10:	bl	1b4c8 <__sanitizer_set_report_fd@@Base+0x3648>
   21e14:	strb	wzr, [x19, #111]
   21e18:	ldp	x19, x30, [sp], #16
   21e1c:	ret
   21e20:	ret
   21e24:	nop
   21e28:	ldr	w2, [x0, #112]
   21e2c:	sub	w2, w2, #0x2
   21e30:	cmp	w2, #0x1
   21e34:	b.hi	21e68 <__sanitizer_on_print@@Base+0x2548>  // b.pmore
   21e38:	ldr	x3, [x0]
   21e3c:	adrp	x2, 22000 <__sanitizer_on_print@@Base+0x26e0>
   21e40:	add	x1, x2, #0xf70
   21e44:	mov	w4, #0x4                   	// #4
   21e48:	str	xzr, [x0, #40]
   21e4c:	ldr	x2, [x3]
   21e50:	str	w4, [x0, #112]
   21e54:	cmp	x2, x1
   21e58:	b.ne	21e60 <__sanitizer_on_print@@Base+0x2540>  // b.any
   21e5c:	ret
   21e60:	mov	x16, x2
   21e64:	br	x16
   21e68:	str	x30, [sp, #-16]!
   21e6c:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   21e70:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   21e74:	add	x2, x2, #0x780
   21e78:	add	x0, x0, #0x720
   21e7c:	mov	x4, #0x0                   	// #0
   21e80:	mov	x3, #0x0                   	// #0
   21e84:	mov	w1, #0x28                  	// #40
   21e88:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   21e8c:	nop
   21e90:	dmb	ish
   21e94:	mov	w1, #0x1                   	// #1
   21e98:	str	w1, [x0, #136]
   21e9c:	ret
   21ea0:	ldr	w0, [x0, #136]
   21ea4:	dmb	ish
   21ea8:	cmp	w0, #0x0
   21eac:	cset	w0, ne  // ne = any
   21eb0:	ret
   21eb4:	nop
   21eb8:	ldrb	w3, [x0, #116]
   21ebc:	str	x30, [sp, #-16]!
   21ec0:	cbnz	w3, 21f08 <__sanitizer_on_print@@Base+0x25e8>
   21ec4:	ldr	w4, [x0, #112]
   21ec8:	cmp	x4, #0x3
   21ecc:	b.ne	21f28 <__sanitizer_on_print@@Base+0x2608>  // b.any
   21ed0:	ldr	x4, [x0]
   21ed4:	adrp	x3, 22000 <__sanitizer_on_print@@Base+0x26e0>
   21ed8:	add	x2, x3, #0xf78
   21edc:	mov	w5, #0x4                   	// #4
   21ee0:	str	xzr, [x0, #40]
   21ee4:	ldr	x3, [x4, #8]
   21ee8:	str	w5, [x0, #112]
   21eec:	cmp	x3, x2
   21ef0:	b.ne	21efc <__sanitizer_on_print@@Base+0x25dc>  // b.any
   21ef4:	ldr	x30, [sp], #16
   21ef8:	ret
   21efc:	ldr	x30, [sp], #16
   21f00:	mov	x16, x3
   21f04:	br	x16
   21f08:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   21f0c:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   21f10:	add	x2, x2, #0x7d0
   21f14:	add	x0, x0, #0x720
   21f18:	mov	x4, #0x1                   	// #1
   21f1c:	mov	x3, #0x0                   	// #0
   21f20:	mov	w1, #0x39                  	// #57
   21f24:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   21f28:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   21f2c:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   21f30:	add	x2, x2, #0x7f0
   21f34:	add	x0, x0, #0x720
   21f38:	mov	x3, #0x3                   	// #3
   21f3c:	mov	w1, #0x3a                  	// #58
   21f40:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   21f44:	nop
   21f48:	ldrb	w1, [x0, #116]
   21f4c:	cbz	w1, 21f78 <__sanitizer_on_print@@Base+0x2658>
   21f50:	ldr	w1, [x0, #112]
   21f54:	cmp	w1, #0x1
   21f58:	b.eq	21f78 <__sanitizer_on_print@@Base+0x2658>  // b.none
   21f5c:	ldr	x2, [x0]
   21f60:	adrp	x1, 22000 <__sanitizer_on_print@@Base+0x26e0>
   21f64:	add	x1, x1, #0xf80
   21f68:	ldr	x2, [x2, #16]
   21f6c:	cmp	x2, x1
   21f70:	b.ne	21f98 <__sanitizer_on_print@@Base+0x2678>  // b.any
   21f74:	ret
   21f78:	ldr	x2, [x0]
   21f7c:	mov	w1, #0x3                   	// #3
   21f80:	str	w1, [x0, #112]
   21f84:	adrp	x1, 22000 <__sanitizer_on_print@@Base+0x26e0>
   21f88:	add	x1, x1, #0xf80
   21f8c:	ldr	x2, [x2, #16]
   21f90:	cmp	x2, x1
   21f94:	b.eq	21f74 <__sanitizer_on_print@@Base+0x2654>  // b.none
   21f98:	mov	x16, x2
   21f9c:	br	x16
   21fa0:	ldr	x6, [x0]
   21fa4:	str	w2, [x0, #120]
   21fa8:	mov	w7, #0x2                   	// #2
   21fac:	str	x1, [x0, #32]
   21fb0:	str	w7, [x0, #112]
   21fb4:	adrp	x5, 22000 <__sanitizer_on_print@@Base+0x26e0>
   21fb8:	ldr	x2, [x6, #24]
   21fbc:	add	x5, x5, #0xf88
   21fc0:	cmp	x2, x5
   21fc4:	b.ne	21fcc <__sanitizer_on_print@@Base+0x26ac>  // b.any
   21fc8:	ret
   21fcc:	mov	x1, x3
   21fd0:	mov	x16, x2
   21fd4:	br	x16
   21fd8:	ldr	w6, [x0, #8]
   21fdc:	mov	w7, #0x1                   	// #1
   21fe0:	str	x2, [x0, #16]
   21fe4:	str	x1, [x0, #40]
   21fe8:	str	w7, [x0, #112]
   21fec:	strb	w3, [x0, #116]
   21ff0:	cbz	w6, 21ff8 <__sanitizer_on_print@@Base+0x26d8>
   21ff4:	str	w4, [x0, #124]
   21ff8:	ldr	x1, [x0]
   21ffc:	adrp	x2, 22000 <__sanitizer_on_print@@Base+0x26e0>
   22000:	add	x2, x2, #0xf90
   22004:	ldr	x3, [x1, #32]
   22008:	cmp	x3, x2
   2200c:	b.ne	22014 <__sanitizer_on_print@@Base+0x26f4>  // b.any
   22010:	ret
   22014:	mov	x1, x5
   22018:	mov	x16, x3
   2201c:	br	x16
   22020:	strb	wzr, [x0, #48]
   22024:	str	wzr, [x0, #112]
   22028:	dmb	ish
   2202c:	str	wzr, [x0, #136]
   22030:	ldr	x2, [x0]
   22034:	adrp	x1, 22000 <__sanitizer_on_print@@Base+0x26e0>
   22038:	add	x1, x1, #0xf98
   2203c:	ldr	x2, [x2, #40]
   22040:	cmp	x2, x1
   22044:	b.ne	2204c <__sanitizer_on_print@@Base+0x272c>  // b.any
   22048:	ret
   2204c:	mov	x16, x2
   22050:	br	x16
   22054:	nop
   22058:	stp	x19, x30, [sp, #-16]!
   2205c:	mov	x19, x0
   22060:	add	x0, x0, #0x18
   22064:	str	x1, [x19]
   22068:	stp	w2, w3, [x19, #8]
   2206c:	str	w4, [x19, #16]
   22070:	bl	1c680 <__sanitizer_set_report_fd@@Base+0x4800>
   22074:	str	wzr, [x19, #112]
   22078:	movi	v0.4s, #0x0
   2207c:	ldr	w0, [x19, #8]
   22080:	mov	w2, #0x0                   	// #0
   22084:	adrp	x1, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   22088:	add	x1, x1, #0x818
   2208c:	lsl	x0, x0, #3
   22090:	stur	q0, [x19, #120]
   22094:	stur	q0, [x19, #136]
   22098:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   2209c:	movi	v0.4s, #0x0
   220a0:	stp	x0, xzr, [x19, #152]
   220a4:	str	xzr, [x19, #184]
   220a8:	stur	q0, [x19, #168]
   220ac:	str	q0, [x19, #192]
   220b0:	ldp	x19, x30, [sp], #16
   220b4:	ret
   220b8:	stp	x19, x20, [sp, #-48]!
   220bc:	mov	x19, x0
   220c0:	mov	x20, x3
   220c4:	stp	x23, x30, [sp, #32]
   220c8:	add	x23, x0, #0x18
   220cc:	mov	x0, x23
   220d0:	stp	x21, x22, [sp, #16]
   220d4:	mov	x22, x1
   220d8:	mov	x21, x2
   220dc:	bl	1c690 <__sanitizer_set_report_fd@@Base+0x4810>
   220e0:	cbz	x22, 220ec <__sanitizer_on_print@@Base+0x27cc>
   220e4:	ldr	w0, [x19, #112]
   220e8:	str	x0, [x22]
   220ec:	cbz	x21, 220f8 <__sanitizer_on_print@@Base+0x27d8>
   220f0:	ldr	x0, [x19, #144]
   220f4:	str	x0, [x21]
   220f8:	cbz	x20, 22104 <__sanitizer_on_print@@Base+0x27e4>
   220fc:	ldr	x0, [x19, #128]
   22100:	str	x0, [x20]
   22104:	mov	x0, x23
   22108:	ldp	x21, x22, [sp, #16]
   2210c:	ldp	x23, x30, [sp, #32]
   22110:	ldp	x19, x20, [sp], #48
   22114:	b	1c728 <__sanitizer_set_report_fd@@Base+0x48a8>
   22118:	stp	x19, x20, [sp, #-32]!
   2211c:	mov	x19, x0
   22120:	add	x20, x0, #0x18
   22124:	mov	x0, x20
   22128:	str	x30, [sp, #16]
   2212c:	bl	1c690 <__sanitizer_set_report_fd@@Base+0x4810>
   22130:	ldr	x19, [x19, #136]
   22134:	mov	x0, x20
   22138:	bl	1c728 <__sanitizer_set_report_fd@@Base+0x48a8>
   2213c:	mov	x0, x19
   22140:	ldr	x30, [sp, #16]
   22144:	ldp	x19, x20, [sp], #32
   22148:	ret
   2214c:	nop
   22150:	stp	x19, x20, [sp, #-64]!
   22154:	mov	x19, x0
   22158:	stp	x25, x30, [sp, #48]
   2215c:	add	x25, x0, #0x18
   22160:	mov	x0, x25
   22164:	stp	x21, x22, [sp, #16]
   22168:	mov	x21, x1
   2216c:	mov	w22, w3
   22170:	stp	x23, x24, [sp, #32]
   22174:	mov	x23, x4
   22178:	and	w24, w2, #0xff
   2217c:	bl	1c690 <__sanitizer_set_report_fd@@Base+0x4810>
   22180:	ldr	x1, [x19, #184]
   22184:	cbz	x1, 22250 <__sanitizer_on_print@@Base+0x2930>
   22188:	ldr	x0, [x19, #192]
   2218c:	ldr	x2, [x0, #128]
   22190:	str	x2, [x19, #192]
   22194:	cbz	x2, 222a4 <__sanitizer_on_print@@Base+0x2984>
   22198:	ldr	w20, [x0, #8]
   2219c:	sub	x1, x1, #0x1
   221a0:	str	x1, [x19, #184]
   221a4:	mov	w3, w20
   221a8:	mov	x1, #0xffffffff            	// #4294967295
   221ac:	cmp	x3, x1
   221b0:	b.eq	222d4 <__sanitizer_on_print@@Base+0x29b4>  // b.none
   221b4:	ldr	w4, [x19, #8]
   221b8:	cmp	x3, x4
   221bc:	b.cs	222f0 <__sanitizer_on_print@@Base+0x29d0>  // b.hs, b.nlast
   221c0:	ldr	w3, [x0, #112]
   221c4:	cbnz	x3, 22308 <__sanitizer_on_print@@Base+0x29e8>
   221c8:	ldp	x2, x1, [x19, #128]
   221cc:	add	x3, x2, #0x1
   221d0:	str	x3, [x19, #128]
   221d4:	cmp	x3, x1
   221d8:	b.ls	221ec <__sanitizer_on_print@@Base+0x28cc>  // b.plast
   221dc:	add	x4, x1, #0x1
   221e0:	str	x4, [x19, #136]
   221e4:	cmp	x2, x1
   221e8:	b.ne	22324 <__sanitizer_on_print@@Base+0x2a04>  // b.any
   221ec:	ldr	x1, [x19, #120]
   221f0:	mov	w3, #0x1                   	// #1
   221f4:	ldr	w2, [x0, #8]
   221f8:	add	x4, x1, #0x1
   221fc:	str	x4, [x19, #120]
   22200:	str	x1, [x0, #16]
   22204:	str	x21, [x0, #40]
   22208:	str	w3, [x0, #112]
   2220c:	strb	w24, [x0, #116]
   22210:	cbz	w2, 22218 <__sanitizer_on_print@@Base+0x28f8>
   22214:	str	w22, [x0, #124]
   22218:	ldr	x2, [x0]
   2221c:	adrp	x1, 22000 <__sanitizer_on_print@@Base+0x26e0>
   22220:	add	x1, x1, #0xf90
   22224:	ldr	x2, [x2, #32]
   22228:	cmp	x2, x1
   2222c:	b.ne	222ac <__sanitizer_on_print@@Base+0x298c>  // b.any
   22230:	mov	x0, x25
   22234:	bl	1c728 <__sanitizer_set_report_fd@@Base+0x48a8>
   22238:	mov	w0, w20
   2223c:	ldp	x21, x22, [sp, #16]
   22240:	ldp	x23, x24, [sp, #32]
   22244:	ldp	x25, x30, [sp, #48]
   22248:	ldp	x19, x20, [sp], #64
   2224c:	ret
   22250:	ldr	w2, [x19, #8]
   22254:	ldr	w20, [x19, #112]
   22258:	cmp	w20, w2
   2225c:	b.cs	2233c <__sanitizer_on_print@@Base+0x2a1c>  // b.hs, b.nlast
   22260:	ldr	x1, [x19]
   22264:	add	w0, w20, #0x1
   22268:	str	w0, [x19, #112]
   2226c:	mov	w0, w20
   22270:	blr	x1
   22274:	ldr	x1, [x19, #152]
   22278:	mov	w3, w20
   2227c:	str	x0, [x1, x3, lsl #3]
   22280:	cbnz	x0, 221a8 <__sanitizer_on_print@@Base+0x2888>
   22284:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   22288:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   2228c:	add	x2, x2, #0x858
   22290:	add	x0, x0, #0x720
   22294:	mov	x4, #0x0                   	// #0
   22298:	mov	x3, #0x0                   	// #0
   2229c:	mov	w1, #0x9d                  	// #157
   222a0:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   222a4:	str	xzr, [x19, #200]
   222a8:	b	22198 <__sanitizer_on_print@@Base+0x2878>
   222ac:	mov	x1, x23
   222b0:	blr	x2
   222b4:	mov	x0, x25
   222b8:	bl	1c728 <__sanitizer_set_report_fd@@Base+0x48a8>
   222bc:	mov	w0, w20
   222c0:	ldp	x21, x22, [sp, #16]
   222c4:	ldp	x23, x24, [sp, #32]
   222c8:	ldp	x25, x30, [sp, #48]
   222cc:	ldp	x19, x20, [sp], #64
   222d0:	ret
   222d4:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   222d8:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   222dc:	add	x2, x2, #0x870
   222e0:	add	x0, x0, #0x720
   222e4:	mov	x4, x3
   222e8:	mov	w1, #0x9e                  	// #158
   222ec:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   222f0:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   222f4:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   222f8:	add	x2, x2, #0x890
   222fc:	add	x0, x0, #0x720
   22300:	mov	w1, #0x9f                  	// #159
   22304:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   22308:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   2230c:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   22310:	add	x2, x2, #0x8b0
   22314:	add	x0, x0, #0x720
   22318:	mov	x4, #0x0                   	// #0
   2231c:	mov	w1, #0xa0                  	// #160
   22320:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   22324:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   22328:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   2232c:	add	x2, x2, #0x8e0
   22330:	add	x0, x0, #0x720
   22334:	mov	w1, #0xa4                  	// #164
   22338:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   2233c:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   22340:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   22344:	add	x0, x0, #0x828
   22348:	ldr	x1, [x1, #4024]
   2234c:	ldr	x1, [x1]
   22350:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   22354:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   22358:	stp	x19, x20, [sp, #-48]!
   2235c:	mov	x20, x0
   22360:	add	x0, x0, #0x18
   22364:	stp	x21, x22, [sp, #16]
   22368:	mov	x22, x1
   2236c:	mov	x21, x2
   22370:	str	x30, [sp, #32]
   22374:	bl	1c798 <__sanitizer_set_report_fd@@Base+0x4918>
   22378:	ldr	w3, [x20, #112]
   2237c:	cbz	w3, 223c4 <__sanitizer_on_print@@Base+0x2aa4>
   22380:	ldr	x4, [x20, #152]
   22384:	mov	w19, #0x0                   	// #0
   22388:	ldr	x0, [x4, w19, uxtw #3]
   2238c:	mov	x1, x21
   22390:	cbz	x0, 223b8 <__sanitizer_on_print@@Base+0x2a98>
   22394:	blr	x22
   22398:	add	w19, w19, #0x1
   2239c:	ldr	w3, [x20, #112]
   223a0:	cmp	w3, w19
   223a4:	b.ls	223c4 <__sanitizer_on_print@@Base+0x2aa4>  // b.plast
   223a8:	ldr	x4, [x20, #152]
   223ac:	mov	x1, x21
   223b0:	ldr	x0, [x4, w19, uxtw #3]
   223b4:	cbnz	x0, 22394 <__sanitizer_on_print@@Base+0x2a74>
   223b8:	add	w19, w19, #0x1
   223bc:	cmp	w19, w3
   223c0:	b.cc	22388 <__sanitizer_on_print@@Base+0x2a68>  // b.lo, b.ul, b.last
   223c4:	ldp	x21, x22, [sp, #16]
   223c8:	ldr	x30, [sp, #32]
   223cc:	ldp	x19, x20, [sp], #48
   223d0:	ret
   223d4:	nop
   223d8:	stp	x19, x20, [sp, #-64]!
   223dc:	mov	w19, #0x0                   	// #0
   223e0:	stp	x21, x22, [sp, #16]
   223e4:	mov	x21, x0
   223e8:	mov	x22, x2
   223ec:	stp	x23, x24, [sp, #32]
   223f0:	add	x24, x0, #0x18
   223f4:	mov	x23, x1
   223f8:	mov	x0, x24
   223fc:	str	x30, [sp, #48]
   22400:	bl	1c690 <__sanitizer_set_report_fd@@Base+0x4810>
   22404:	ldr	w3, [x21, #112]
   22408:	cbz	w3, 22440 <__sanitizer_on_print@@Base+0x2b20>
   2240c:	nop
   22410:	ldr	x0, [x21, #152]
   22414:	mov	x1, x22
   22418:	ldr	x20, [x0, w19, uxtw #3]
   2241c:	mov	x0, x20
   22420:	cbz	x20, 22434 <__sanitizer_on_print@@Base+0x2b14>
   22424:	blr	x23
   22428:	tst	w0, #0xff
   2242c:	b.ne	22464 <__sanitizer_on_print@@Base+0x2b44>  // b.any
   22430:	ldr	w3, [x21, #112]
   22434:	add	w19, w19, #0x1
   22438:	cmp	w19, w3
   2243c:	b.cc	22410 <__sanitizer_on_print@@Base+0x2af0>  // b.lo, b.ul, b.last
   22440:	mov	x0, x24
   22444:	mov	w19, #0xffffffff            	// #-1
   22448:	bl	1c728 <__sanitizer_set_report_fd@@Base+0x48a8>
   2244c:	mov	w0, w19
   22450:	ldp	x21, x22, [sp, #16]
   22454:	ldp	x23, x24, [sp, #32]
   22458:	ldr	x30, [sp, #48]
   2245c:	ldp	x19, x20, [sp], #64
   22460:	ret
   22464:	ldr	w19, [x20, #8]
   22468:	mov	x0, x24
   2246c:	bl	1c728 <__sanitizer_set_report_fd@@Base+0x48a8>
   22470:	mov	w0, w19
   22474:	ldp	x21, x22, [sp, #16]
   22478:	ldp	x23, x24, [sp, #32]
   2247c:	ldr	x30, [sp, #48]
   22480:	ldp	x19, x20, [sp], #64
   22484:	ret
   22488:	stp	x19, x20, [sp, #-48]!
   2248c:	mov	w19, #0x0                   	// #0
   22490:	stp	x21, x22, [sp, #16]
   22494:	mov	x21, x0
   22498:	mov	x22, x2
   2249c:	add	x0, x0, #0x18
   224a0:	stp	x23, x30, [sp, #32]
   224a4:	mov	x23, x1
   224a8:	bl	1c798 <__sanitizer_set_report_fd@@Base+0x4918>
   224ac:	ldr	w3, [x21, #112]
   224b0:	cbz	w3, 224e8 <__sanitizer_on_print@@Base+0x2bc8>
   224b4:	nop
   224b8:	ldr	x0, [x21, #152]
   224bc:	mov	x1, x22
   224c0:	ldr	x20, [x0, w19, uxtw #3]
   224c4:	add	w19, w19, #0x1
   224c8:	mov	x0, x20
   224cc:	cbz	x20, 224e0 <__sanitizer_on_print@@Base+0x2bc0>
   224d0:	blr	x23
   224d4:	tst	w0, #0xff
   224d8:	b.ne	224ec <__sanitizer_on_print@@Base+0x2bcc>  // b.any
   224dc:	ldr	w3, [x21, #112]
   224e0:	cmp	w19, w3
   224e4:	b.cc	224b8 <__sanitizer_on_print@@Base+0x2b98>  // b.lo, b.ul, b.last
   224e8:	mov	x20, #0x0                   	// #0
   224ec:	mov	x0, x20
   224f0:	ldp	x21, x22, [sp, #16]
   224f4:	ldp	x23, x30, [sp, #32]
   224f8:	ldp	x19, x20, [sp], #48
   224fc:	ret
   22500:	stp	x19, x20, [sp, #-32]!
   22504:	mov	x19, x0
   22508:	mov	x20, x1
   2250c:	add	x0, x0, #0x18
   22510:	str	x30, [sp, #16]
   22514:	bl	1c798 <__sanitizer_set_report_fd@@Base+0x4918>
   22518:	ldr	w1, [x19, #112]
   2251c:	cbz	w1, 22564 <__sanitizer_on_print@@Base+0x2c44>
   22520:	mov	x2, #0x0                   	// #0
   22524:	ldr	x4, [x19, #152]
   22528:	b	22534 <__sanitizer_on_print@@Base+0x2c14>
   2252c:	cmp	w1, w2
   22530:	b.ls	22564 <__sanitizer_on_print@@Base+0x2c44>  // b.plast
   22534:	ldr	x0, [x4, x2, lsl #3]
   22538:	add	x2, x2, #0x1
   2253c:	cbz	x0, 2252c <__sanitizer_on_print@@Base+0x2c0c>
   22540:	ldr	x3, [x0, #32]
   22544:	cmp	x20, x3
   22548:	b.ne	2252c <__sanitizer_on_print@@Base+0x2c0c>  // b.any
   2254c:	ldr	w3, [x0, #112]
   22550:	tst	w3, #0xfffffffb
   22554:	b.eq	2252c <__sanitizer_on_print@@Base+0x2c0c>  // b.none
   22558:	ldr	x30, [sp, #16]
   2255c:	ldp	x19, x20, [sp], #32
   22560:	ret
   22564:	mov	x0, #0x0                   	// #0
   22568:	ldr	x30, [sp, #16]
   2256c:	ldp	x19, x20, [sp], #32
   22570:	ret
   22574:	nop
   22578:	stp	x19, x20, [sp, #-48]!
   2257c:	mov	x19, x0
   22580:	mov	w20, w1
   22584:	stp	x21, x22, [sp, #16]
   22588:	add	x22, x0, #0x18
   2258c:	mov	x21, x2
   22590:	mov	x0, x22
   22594:	str	x30, [sp, #32]
   22598:	bl	1c690 <__sanitizer_set_report_fd@@Base+0x4810>
   2259c:	ldr	w4, [x19, #112]
   225a0:	mov	w3, w20
   225a4:	cmp	x4, w20, uxtw
   225a8:	b.ls	225f4 <__sanitizer_on_print@@Base+0x2cd4>  // b.plast
   225ac:	ldr	x0, [x19, #152]
   225b0:	ldr	x19, [x0, x3, lsl #3]
   225b4:	cbz	x19, 2260c <__sanitizer_on_print@@Base+0x2cec>
   225b8:	ldr	w4, [x19, #112]
   225bc:	cmp	x4, #0x2
   225c0:	b.ne	2262c <__sanitizer_on_print@@Base+0x2d0c>  // b.any
   225c4:	strb	wzr, [x19, #48]
   225c8:	cbz	x21, 225e0 <__sanitizer_on_print@@Base+0x2cc0>
   225cc:	mov	x1, x21
   225d0:	add	x0, x19, #0x30
   225d4:	mov	x2, #0x40                  	// #64
   225d8:	bl	1b4c8 <__sanitizer_set_report_fd@@Base+0x3648>
   225dc:	strb	wzr, [x19, #111]
   225e0:	mov	x0, x22
   225e4:	ldp	x21, x22, [sp, #16]
   225e8:	ldr	x30, [sp, #32]
   225ec:	ldp	x19, x20, [sp], #48
   225f0:	b	1c728 <__sanitizer_set_report_fd@@Base+0x48a8>
   225f4:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   225f8:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   225fc:	add	x2, x2, #0x910
   22600:	add	x0, x0, #0x720
   22604:	mov	w1, #0xd8                  	// #216
   22608:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   2260c:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   22610:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   22614:	add	x2, x2, #0x858
   22618:	add	x0, x0, #0x720
   2261c:	mov	x4, #0x0                   	// #0
   22620:	mov	x3, #0x0                   	// #0
   22624:	mov	w1, #0xda                  	// #218
   22628:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   2262c:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   22630:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   22634:	add	x2, x2, #0x930
   22638:	add	x0, x0, #0x720
   2263c:	mov	x3, #0x2                   	// #2
   22640:	mov	w1, #0xdb                  	// #219
   22644:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   22648:	stp	x19, x20, [sp, #-48]!
   2264c:	mov	x19, x0
   22650:	mov	x20, x1
   22654:	stp	x21, x22, [sp, #16]
   22658:	add	x22, x0, #0x18
   2265c:	mov	x21, x2
   22660:	mov	x0, x22
   22664:	str	x30, [sp, #32]
   22668:	bl	1c690 <__sanitizer_set_report_fd@@Base+0x4810>
   2266c:	ldr	w4, [x19, #112]
   22670:	cbz	w4, 226c4 <__sanitizer_on_print@@Base+0x2da4>
   22674:	mov	x0, #0x0                   	// #0
   22678:	ldr	x5, [x19, #152]
   2267c:	b	22688 <__sanitizer_on_print@@Base+0x2d68>
   22680:	cmp	w4, w0
   22684:	b.ls	226c4 <__sanitizer_on_print@@Base+0x2da4>  // b.plast
   22688:	ldr	x19, [x5, x0, lsl #3]
   2268c:	add	x0, x0, #0x1
   22690:	cbz	x19, 22680 <__sanitizer_on_print@@Base+0x2d60>
   22694:	ldr	x3, [x19, #40]
   22698:	cmp	x3, x20
   2269c:	b.ne	22680 <__sanitizer_on_print@@Base+0x2d60>  // b.any
   226a0:	ldr	w1, [x19, #112]
   226a4:	cbz	w1, 22680 <__sanitizer_on_print@@Base+0x2d60>
   226a8:	strb	wzr, [x19, #48]
   226ac:	cbz	x21, 226c4 <__sanitizer_on_print@@Base+0x2da4>
   226b0:	mov	x1, x21
   226b4:	add	x0, x19, #0x30
   226b8:	mov	x2, #0x40                  	// #64
   226bc:	bl	1b4c8 <__sanitizer_set_report_fd@@Base+0x3648>
   226c0:	strb	wzr, [x19, #111]
   226c4:	mov	x0, x22
   226c8:	ldp	x21, x22, [sp, #16]
   226cc:	ldr	x30, [sp, #32]
   226d0:	ldp	x19, x20, [sp], #48
   226d4:	b	1c728 <__sanitizer_set_report_fd@@Base+0x48a8>
   226d8:	stp	x19, x20, [sp, #-48]!
   226dc:	mov	x19, x0
   226e0:	mov	w20, w1
   226e4:	stp	x21, x22, [sp, #16]
   226e8:	add	x21, x0, #0x18
   226ec:	mov	x22, x2
   226f0:	mov	x0, x21
   226f4:	str	x30, [sp, #32]
   226f8:	bl	1c690 <__sanitizer_set_report_fd@@Base+0x4810>
   226fc:	ldr	w4, [x19, #112]
   22700:	mov	w3, w20
   22704:	cmp	x4, w20, uxtw
   22708:	b.ls	227dc <__sanitizer_on_print@@Base+0x2ebc>  // b.plast
   2270c:	ldr	x0, [x19, #152]
   22710:	ldr	x20, [x0, x3, lsl #3]
   22714:	cbz	x20, 227f4 <__sanitizer_on_print@@Base+0x2ed4>
   22718:	ldr	w1, [x20, #112]
   2271c:	cbz	w1, 2275c <__sanitizer_on_print@@Base+0x2e3c>
   22720:	ldr	x2, [x20]
   22724:	adrp	x0, 22000 <__sanitizer_on_print@@Base+0x26e0>
   22728:	add	x0, x0, #0xfa0
   2272c:	ldr	x2, [x2, #48]
   22730:	cmp	x2, x0
   22734:	b.ne	22788 <__sanitizer_on_print@@Base+0x2e68>  // b.any
   22738:	cmp	w1, #0x3
   2273c:	b.eq	227a0 <__sanitizer_on_print@@Base+0x2e80>  // b.none
   22740:	mov	w0, #0x1                   	// #1
   22744:	strb	w0, [x20, #116]
   22748:	mov	x0, x21
   2274c:	ldp	x21, x22, [sp, #16]
   22750:	ldr	x30, [sp, #32]
   22754:	ldp	x19, x20, [sp], #48
   22758:	b	1c728 <__sanitizer_set_report_fd@@Base+0x48a8>
   2275c:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   22760:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   22764:	add	x0, x0, #0x978
   22768:	ldr	x1, [x1, #4024]
   2276c:	ldr	x1, [x1]
   22770:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   22774:	mov	x0, x21
   22778:	ldp	x21, x22, [sp, #16]
   2277c:	ldr	x30, [sp, #32]
   22780:	ldp	x19, x20, [sp], #48
   22784:	b	1c728 <__sanitizer_set_report_fd@@Base+0x48a8>
   22788:	mov	x1, x22
   2278c:	mov	x0, x20
   22790:	blr	x2
   22794:	ldr	w1, [x20, #112]
   22798:	cmp	w1, #0x3
   2279c:	b.ne	22740 <__sanitizer_on_print@@Base+0x2e20>  // b.any
   227a0:	ldr	x1, [x20]
   227a4:	mov	w2, #0x4                   	// #4
   227a8:	adrp	x0, 22000 <__sanitizer_on_print@@Base+0x26e0>
   227ac:	add	x0, x0, #0xf70
   227b0:	ldr	x1, [x1]
   227b4:	str	xzr, [x20, #40]
   227b8:	str	w2, [x20, #112]
   227bc:	cmp	x1, x0
   227c0:	b.ne	22814 <__sanitizer_on_print@@Base+0x2ef4>  // b.any
   227c4:	ldr	w0, [x20, #8]
   227c8:	cbz	w0, 22748 <__sanitizer_on_print@@Base+0x2e28>
   227cc:	mov	x1, x20
   227d0:	mov	x0, x19
   227d4:	bl	21c40 <__sanitizer_on_print@@Base+0x2320>
   227d8:	b	22748 <__sanitizer_on_print@@Base+0x2e28>
   227dc:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   227e0:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   227e4:	add	x2, x2, #0x910
   227e8:	add	x0, x0, #0x720
   227ec:	mov	w1, #0xee                  	// #238
   227f0:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   227f4:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   227f8:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   227fc:	add	x2, x2, #0x858
   22800:	add	x0, x0, #0x720
   22804:	mov	x4, #0x0                   	// #0
   22808:	mov	x3, #0x0                   	// #0
   2280c:	mov	w1, #0xf0                  	// #240
   22810:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   22814:	mov	x0, x20
   22818:	blr	x1
   2281c:	b	227c4 <__sanitizer_on_print@@Base+0x2ea4>
   22820:	stp	x19, x20, [sp, #-64]!
   22824:	mov	x20, x0
   22828:	stp	x21, x22, [sp, #16]
   2282c:	add	x22, x0, #0x18
   22830:	ubfiz	x21, x1, #3, #32
   22834:	mov	x0, x22
   22838:	stp	x23, x24, [sp, #32]
   2283c:	mov	w23, w1
   22840:	mov	x24, x2
   22844:	str	x30, [sp, #48]
   22848:	bl	1c690 <__sanitizer_set_report_fd@@Base+0x4810>
   2284c:	ldr	w4, [x20, #112]
   22850:	cmp	x23, x4
   22854:	b.cs	22898 <__sanitizer_on_print@@Base+0x2f78>  // b.hs, b.nlast
   22858:	ldr	x0, [x20, #152]
   2285c:	ldr	x19, [x0, x21]
   22860:	cbz	x19, 22918 <__sanitizer_on_print@@Base+0x2ff8>
   22864:	ldr	w0, [x19, #112]
   22868:	cbz	w0, 22984 <__sanitizer_on_print@@Base+0x3064>
   2286c:	ldr	w0, [x19, #136]
   22870:	dmb	ish
   22874:	cbnz	w0, 228b4 <__sanitizer_on_print@@Base+0x2f94>
   22878:	mov	x0, x22
   2287c:	bl	1c728 <__sanitizer_set_report_fd@@Base+0x48a8>
   22880:	bl	1c390 <__sanitizer_set_report_fd@@Base+0x4510>
   22884:	mov	x0, x22
   22888:	bl	1c690 <__sanitizer_set_report_fd@@Base+0x4810>
   2288c:	ldr	w4, [x20, #112]
   22890:	cmp	x23, x4
   22894:	b.cc	22858 <__sanitizer_on_print@@Base+0x2f38>  // b.lo, b.ul, b.last
   22898:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   2289c:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   228a0:	mov	x3, x23
   228a4:	add	x2, x2, #0x910
   228a8:	add	x0, x0, #0x720
   228ac:	mov	w1, #0x103                 	// #259
   228b0:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   228b4:	ldrb	w0, [x19, #116]
   228b8:	cbnz	w0, 22948 <__sanitizer_on_print@@Base+0x3028>
   228bc:	ldr	w4, [x19, #112]
   228c0:	cmp	x4, #0x3
   228c4:	b.ne	22968 <__sanitizer_on_print@@Base+0x3048>  // b.any
   228c8:	ldr	x1, [x19]
   228cc:	mov	w2, #0x4                   	// #4
   228d0:	str	w2, [x19, #112]
   228d4:	adrp	x0, 22000 <__sanitizer_on_print@@Base+0x26e0>
   228d8:	str	xzr, [x19, #40]
   228dc:	add	x0, x0, #0xf78
   228e0:	ldr	x2, [x1, #8]
   228e4:	cmp	x2, x0
   228e8:	b.ne	22938 <__sanitizer_on_print@@Base+0x3018>  // b.any
   228ec:	ldr	w0, [x19, #8]
   228f0:	cbz	w0, 22900 <__sanitizer_on_print@@Base+0x2fe0>
   228f4:	mov	x1, x19
   228f8:	mov	x0, x20
   228fc:	bl	21c40 <__sanitizer_on_print@@Base+0x2320>
   22900:	mov	x0, x22
   22904:	ldp	x21, x22, [sp, #16]
   22908:	ldp	x23, x24, [sp, #32]
   2290c:	ldr	x30, [sp, #48]
   22910:	ldp	x19, x20, [sp], #64
   22914:	b	1c728 <__sanitizer_set_report_fd@@Base+0x48a8>
   22918:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   2291c:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   22920:	add	x2, x2, #0x858
   22924:	add	x0, x0, #0x720
   22928:	mov	x4, #0x0                   	// #0
   2292c:	mov	x3, #0x0                   	// #0
   22930:	mov	w1, #0x105                 	// #261
   22934:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   22938:	mov	x1, x24
   2293c:	mov	x0, x19
   22940:	blr	x2
   22944:	b	228ec <__sanitizer_on_print@@Base+0x2fcc>
   22948:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   2294c:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   22950:	add	x2, x2, #0x7d0
   22954:	add	x0, x0, #0x720
   22958:	mov	x4, #0x1                   	// #1
   2295c:	mov	x3, #0x0                   	// #0
   22960:	mov	w1, #0x39                  	// #57
   22964:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   22968:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   2296c:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   22970:	add	x2, x2, #0x7f0
   22974:	add	x0, x0, #0x720
   22978:	mov	x3, #0x3                   	// #3
   2297c:	mov	w1, #0x3a                  	// #58
   22980:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   22984:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   22988:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   2298c:	add	x0, x0, #0x9a0
   22990:	ldr	x1, [x1, #4024]
   22994:	ldr	x1, [x1]
   22998:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   2299c:	b	22900 <__sanitizer_on_print@@Base+0x2fe0>
   229a0:	stp	x19, x20, [sp, #-48]!
   229a4:	mov	x19, x0
   229a8:	mov	w20, w1
   229ac:	stp	x21, x22, [sp, #16]
   229b0:	add	x22, x0, #0x18
   229b4:	mov	x0, x22
   229b8:	str	x30, [sp, #32]
   229bc:	bl	1c690 <__sanitizer_set_report_fd@@Base+0x4810>
   229c0:	ldr	x0, [x19, #128]
   229c4:	cbz	x0, 22ae4 <__sanitizer_on_print@@Base+0x31c4>
   229c8:	ldr	w4, [x19, #112]
   229cc:	sub	x0, x0, #0x1
   229d0:	str	x0, [x19, #128]
   229d4:	mov	w3, w20
   229d8:	cmp	x4, w20, uxtw
   229dc:	b.ls	22b04 <__sanitizer_on_print@@Base+0x31e4>  // b.plast
   229e0:	ldr	x0, [x19, #152]
   229e4:	ldr	x20, [x0, x3, lsl #3]
   229e8:	cbz	x20, 22b1c <__sanitizer_on_print@@Base+0x31fc>
   229ec:	ldr	w0, [x20, #112]
   229f0:	cmp	w0, #0x2
   229f4:	b.eq	22a50 <__sanitizer_on_print@@Base+0x3130>  // b.none
   229f8:	cmp	w0, #0x1
   229fc:	mov	w21, w0
   22a00:	b.ne	22b5c <__sanitizer_on_print@@Base+0x323c>  // b.any
   22a04:	ldr	x1, [x20]
   22a08:	mov	w0, #0x3                   	// #3
   22a0c:	adrp	x2, 22000 <__sanitizer_on_print@@Base+0x26e0>
   22a10:	add	x2, x2, #0xf80
   22a14:	ldr	x1, [x1, #16]
   22a18:	str	w0, [x20, #112]
   22a1c:	cmp	x1, x2
   22a20:	b.eq	22a80 <__sanitizer_on_print@@Base+0x3160>  // b.none
   22a24:	mov	x0, x20
   22a28:	blr	x1
   22a2c:	cbnz	w21, 22bcc <__sanitizer_on_print@@Base+0x32ac>
   22a30:	dmb	ish
   22a34:	mov	w0, #0x1                   	// #1
   22a38:	str	w0, [x20, #136]
   22a3c:	mov	x0, x22
   22a40:	ldp	x21, x22, [sp, #16]
   22a44:	ldr	x30, [sp, #32]
   22a48:	ldp	x19, x20, [sp], #48
   22a4c:	b	1c728 <__sanitizer_set_report_fd@@Base+0x48a8>
   22a50:	ldr	x1, [x19, #144]
   22a54:	cbz	x1, 22b88 <__sanitizer_on_print@@Base+0x3268>
   22a58:	ldrb	w21, [x20, #116]
   22a5c:	sub	x1, x1, #0x1
   22a60:	str	x1, [x19, #144]
   22a64:	cbz	w21, 22ba8 <__sanitizer_on_print@@Base+0x3288>
   22a68:	ldr	x1, [x20]
   22a6c:	adrp	x2, 22000 <__sanitizer_on_print@@Base+0x26e0>
   22a70:	add	x2, x2, #0xf80
   22a74:	ldr	x1, [x1, #16]
   22a78:	cmp	x1, x2
   22a7c:	b.ne	22a24 <__sanitizer_on_print@@Base+0x3104>  // b.any
   22a80:	sub	w0, w0, #0x2
   22a84:	cmp	w0, #0x1
   22a88:	b.hi	22b3c <__sanitizer_on_print@@Base+0x321c>  // b.pmore
   22a8c:	ldr	x1, [x20]
   22a90:	mov	w2, #0x4                   	// #4
   22a94:	adrp	x0, 22000 <__sanitizer_on_print@@Base+0x26e0>
   22a98:	add	x0, x0, #0xf70
   22a9c:	ldr	x1, [x1]
   22aa0:	str	xzr, [x20, #40]
   22aa4:	str	w2, [x20, #112]
   22aa8:	cmp	x1, x0
   22aac:	b.ne	22b7c <__sanitizer_on_print@@Base+0x325c>  // b.any
   22ab0:	ldr	w0, [x20, #8]
   22ab4:	cbz	w0, 22a30 <__sanitizer_on_print@@Base+0x3110>
   22ab8:	mov	x0, x19
   22abc:	mov	x1, x20
   22ac0:	bl	21c40 <__sanitizer_on_print@@Base+0x2320>
   22ac4:	dmb	ish
   22ac8:	mov	w0, #0x1                   	// #1
   22acc:	str	w0, [x20, #136]
   22ad0:	mov	x0, x22
   22ad4:	ldp	x21, x22, [sp, #16]
   22ad8:	ldr	x30, [sp, #32]
   22adc:	ldp	x19, x20, [sp], #48
   22ae0:	b	1c728 <__sanitizer_set_report_fd@@Base+0x48a8>
   22ae4:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   22ae8:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   22aec:	add	x2, x2, #0x9c8
   22af0:	add	x0, x0, #0x720
   22af4:	mov	x4, #0x0                   	// #0
   22af8:	mov	x3, #0x0                   	// #0
   22afc:	mov	w1, #0x11b                 	// #283
   22b00:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   22b04:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   22b08:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   22b0c:	add	x2, x2, #0x910
   22b10:	add	x0, x0, #0x720
   22b14:	mov	w1, #0x11d                 	// #285
   22b18:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   22b1c:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   22b20:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   22b24:	add	x2, x2, #0x858
   22b28:	add	x0, x0, #0x720
   22b2c:	mov	x4, #0x0                   	// #0
   22b30:	mov	x3, #0x0                   	// #0
   22b34:	mov	w1, #0x11f                 	// #287
   22b38:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   22b3c:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   22b40:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   22b44:	add	x2, x2, #0x780
   22b48:	add	x0, x0, #0x720
   22b4c:	mov	x4, #0x0                   	// #0
   22b50:	mov	x3, #0x0                   	// #0
   22b54:	mov	w1, #0x28                  	// #40
   22b58:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   22b5c:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   22b60:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   22b64:	mov	x3, x21
   22b68:	add	x2, x2, #0xa08
   22b6c:	add	x0, x0, #0x720
   22b70:	mov	x4, #0x1                   	// #1
   22b74:	mov	w1, #0x126                 	// #294
   22b78:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   22b7c:	mov	x0, x20
   22b80:	blr	x1
   22b84:	b	22ab0 <__sanitizer_on_print@@Base+0x3190>
   22b88:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   22b8c:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   22b90:	add	x2, x2, #0x9e8
   22b94:	add	x0, x0, #0x720
   22b98:	mov	x4, #0x0                   	// #0
   22b9c:	mov	x3, #0x0                   	// #0
   22ba0:	mov	w1, #0x122                 	// #290
   22ba4:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   22ba8:	ldr	x1, [x20]
   22bac:	mov	w0, #0x3                   	// #3
   22bb0:	ldr	x1, [x1, #16]
   22bb4:	str	w0, [x20, #112]
   22bb8:	adrp	x0, 22000 <__sanitizer_on_print@@Base+0x26e0>
   22bbc:	add	x0, x0, #0xf80
   22bc0:	cmp	x1, x0
   22bc4:	b.eq	22a30 <__sanitizer_on_print@@Base+0x3110>  // b.none
   22bc8:	b	22a24 <__sanitizer_on_print@@Base+0x3104>
   22bcc:	ldr	w0, [x20, #112]
   22bd0:	b	22a80 <__sanitizer_on_print@@Base+0x3160>
   22bd4:	nop
   22bd8:	stp	x19, x20, [sp, #-64]!
   22bdc:	mov	x19, x0
   22be0:	mov	w20, w1
   22be4:	stp	x23, x24, [sp, #32]
   22be8:	add	x24, x0, #0x18
   22bec:	mov	x23, x4
   22bf0:	mov	x0, x24
   22bf4:	stp	x21, x22, [sp, #16]
   22bf8:	mov	w21, w3
   22bfc:	mov	x22, x2
   22c00:	str	x30, [sp, #48]
   22c04:	bl	1c690 <__sanitizer_set_report_fd@@Base+0x4810>
   22c08:	ldr	x0, [x19, #144]
   22c0c:	mov	w3, w20
   22c10:	ldr	w4, [x19, #112]
   22c14:	add	x0, x0, #0x1
   22c18:	str	x0, [x19, #144]
   22c1c:	cmp	x4, w20, uxtw
   22c20:	b.ls	22c9c <__sanitizer_on_print@@Base+0x337c>  // b.plast
   22c24:	ldr	x0, [x19, #152]
   22c28:	ldr	x0, [x0, x3, lsl #3]
   22c2c:	cbz	x0, 22cb4 <__sanitizer_on_print@@Base+0x3394>
   22c30:	ldr	w4, [x0, #112]
   22c34:	cmp	x4, #0x1
   22c38:	b.ne	22cd4 <__sanitizer_on_print@@Base+0x33b4>  // b.any
   22c3c:	ldr	x2, [x0]
   22c40:	mov	w3, #0x2                   	// #2
   22c44:	adrp	x1, 22000 <__sanitizer_on_print@@Base+0x26e0>
   22c48:	add	x1, x1, #0xf88
   22c4c:	ldr	x2, [x2, #24]
   22c50:	str	x22, [x0, #32]
   22c54:	str	w3, [x0, #112]
   22c58:	str	w21, [x0, #120]
   22c5c:	cmp	x2, x1
   22c60:	b.ne	22c7c <__sanitizer_on_print@@Base+0x335c>  // b.any
   22c64:	mov	x0, x24
   22c68:	ldp	x21, x22, [sp, #16]
   22c6c:	ldp	x23, x24, [sp, #32]
   22c70:	ldr	x30, [sp, #48]
   22c74:	ldp	x19, x20, [sp], #64
   22c78:	b	1c728 <__sanitizer_set_report_fd@@Base+0x48a8>
   22c7c:	mov	x1, x23
   22c80:	blr	x2
   22c84:	mov	x0, x24
   22c88:	ldp	x21, x22, [sp, #16]
   22c8c:	ldp	x23, x24, [sp, #32]
   22c90:	ldr	x30, [sp, #48]
   22c94:	ldp	x19, x20, [sp], #64
   22c98:	b	1c728 <__sanitizer_set_report_fd@@Base+0x48a8>
   22c9c:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   22ca0:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   22ca4:	add	x2, x2, #0x910
   22ca8:	add	x0, x0, #0x720
   22cac:	mov	w1, #0x135                 	// #309
   22cb0:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   22cb4:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   22cb8:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   22cbc:	add	x2, x2, #0x858
   22cc0:	add	x0, x0, #0x720
   22cc4:	mov	x4, #0x0                   	// #0
   22cc8:	mov	x3, #0x0                   	// #0
   22ccc:	mov	w1, #0x137                 	// #311
   22cd0:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   22cd4:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   22cd8:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   22cdc:	add	x2, x2, #0xa38
   22ce0:	add	x0, x0, #0x720
   22ce4:	mov	x3, #0x1                   	// #1
   22ce8:	mov	w1, #0x138                 	// #312
   22cec:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   22cf0:	stp	x19, x20, [sp, #-32]!
   22cf4:	mov	x19, x0
   22cf8:	ldr	w0, [x1, #8]
   22cfc:	str	x30, [sp, #16]
   22d00:	cbz	w0, 22db4 <__sanitizer_on_print@@Base+0x3494>
   22d04:	ldr	x0, [x19, #160]
   22d08:	cbz	x0, 22dc0 <__sanitizer_on_print@@Base+0x34a0>
   22d0c:	str	xzr, [x1, #128]
   22d10:	add	x2, x0, #0x1
   22d14:	ldr	x4, [x19, #176]
   22d18:	str	x1, [x4, #128]
   22d1c:	str	x2, [x19, #160]
   22d20:	str	x1, [x19, #176]
   22d24:	ldr	w1, [x19, #12]
   22d28:	cmp	x2, x1
   22d2c:	b.ls	22db4 <__sanitizer_on_print@@Base+0x3494>  // b.plast
   22d30:	ldr	x20, [x19, #168]
   22d34:	add	x2, x19, #0xa0
   22d38:	ldr	x1, [x20, #128]
   22d3c:	str	x1, [x2, #8]
   22d40:	cbz	x1, 22e00 <__sanitizer_on_print@@Base+0x34e0>
   22d44:	ldr	w3, [x20, #112]
   22d48:	str	x0, [x19, #160]
   22d4c:	cmp	x3, #0x4
   22d50:	b.ne	22e14 <__sanitizer_on_print@@Base+0x34f4>  // b.any
   22d54:	strb	wzr, [x20, #48]
   22d58:	str	wzr, [x20, #112]
   22d5c:	dmb	ish
   22d60:	str	wzr, [x20, #136]
   22d64:	ldr	x1, [x20]
   22d68:	adrp	x0, 22000 <__sanitizer_on_print@@Base+0x26e0>
   22d6c:	add	x0, x0, #0xf98
   22d70:	ldr	x1, [x1, #40]
   22d74:	cmp	x1, x0
   22d78:	b.ne	22e08 <__sanitizer_on_print@@Base+0x34e8>  // b.any
   22d7c:	ldr	w0, [x20, #24]
   22d80:	add	w0, w0, #0x1
   22d84:	str	w0, [x20, #24]
   22d88:	ldr	w1, [x19, #16]
   22d8c:	cmp	w1, #0x0
   22d90:	ccmp	w0, w1, #0x0, ne  // ne = any
   22d94:	b.cs	22db4 <__sanitizer_on_print@@Base+0x3494>  // b.hs, b.nlast
   22d98:	ldr	x0, [x19, #184]
   22d9c:	cbnz	x0, 22ddc <__sanitizer_on_print@@Base+0x34bc>
   22da0:	dup	v0.2d, x20
   22da4:	str	xzr, [x20, #128]
   22da8:	mov	x0, #0x1                   	// #1
   22dac:	str	x0, [x19, #184]
   22db0:	str	q0, [x19, #192]
   22db4:	ldr	x30, [sp, #16]
   22db8:	ldp	x19, x20, [sp], #32
   22dbc:	ret
   22dc0:	dup	v0.2d, x1
   22dc4:	str	xzr, [x1, #128]
   22dc8:	mov	x1, #0x1                   	// #1
   22dcc:	mov	x2, x1
   22dd0:	str	x1, [x19, #160]
   22dd4:	stur	q0, [x19, #168]
   22dd8:	b	22d24 <__sanitizer_on_print@@Base+0x3404>
   22ddc:	str	xzr, [x20, #128]
   22de0:	add	x0, x0, #0x1
   22de4:	ldr	x30, [sp, #16]
   22de8:	ldr	x2, [x19, #200]
   22dec:	str	x20, [x2, #128]
   22df0:	str	x0, [x19, #184]
   22df4:	str	x20, [x19, #200]
   22df8:	ldp	x19, x20, [sp], #32
   22dfc:	ret
   22e00:	str	xzr, [x2, #16]
   22e04:	b	22d44 <__sanitizer_on_print@@Base+0x3424>
   22e08:	mov	x0, x20
   22e0c:	blr	x1
   22e10:	b	22d7c <__sanitizer_on_print@@Base+0x345c>
   22e14:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   22e18:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   22e1c:	add	x2, x2, #0x6f0
   22e20:	add	x0, x0, #0x720
   22e24:	mov	x4, #0x4                   	// #4
   22e28:	mov	w1, #0x144                 	// #324
   22e2c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   22e30:	ldr	x2, [x0, #184]
   22e34:	mov	x1, x0
   22e38:	mov	x0, #0x0                   	// #0
   22e3c:	cbz	x2, 22e58 <__sanitizer_on_print@@Base+0x3538>
   22e40:	ldr	x0, [x1, #192]
   22e44:	ldr	x3, [x0, #128]
   22e48:	str	x3, [x1, #192]
   22e4c:	cbz	x3, 22e5c <__sanitizer_on_print@@Base+0x353c>
   22e50:	sub	x2, x2, #0x1
   22e54:	str	x2, [x1, #184]
   22e58:	ret
   22e5c:	sub	x2, x2, #0x1
   22e60:	str	x2, [x1, #184]
   22e64:	str	xzr, [x1, #200]
   22e68:	b	22e58 <__sanitizer_on_print@@Base+0x3538>
   22e6c:	nop
   22e70:	stp	x19, x20, [sp, #-48]!
   22e74:	mov	x19, x0
   22e78:	mov	w20, w1
   22e7c:	stp	x21, x22, [sp, #16]
   22e80:	add	x22, x0, #0x18
   22e84:	mov	x21, x2
   22e88:	mov	x0, x22
   22e8c:	str	x30, [sp, #32]
   22e90:	bl	1c690 <__sanitizer_set_report_fd@@Base+0x4810>
   22e94:	ldr	w4, [x19, #112]
   22e98:	mov	w3, w20
   22e9c:	cmp	x4, w20, uxtw
   22ea0:	b.ls	22ee0 <__sanitizer_on_print@@Base+0x35c0>  // b.plast
   22ea4:	ldr	x0, [x19, #152]
   22ea8:	ldr	x1, [x0, x3, lsl #3]
   22eac:	cbz	x1, 22ef8 <__sanitizer_on_print@@Base+0x35d8>
   22eb0:	ldr	w4, [x1, #112]
   22eb4:	cbz	x4, 22f18 <__sanitizer_on_print@@Base+0x35f8>
   22eb8:	cmp	x4, #0x4
   22ebc:	b.eq	22f34 <__sanitizer_on_print@@Base+0x3614>  // b.none
   22ec0:	ldr	x3, [x1, #40]
   22ec4:	cbnz	x3, 22f50 <__sanitizer_on_print@@Base+0x3630>
   22ec8:	ldr	x30, [sp, #32]
   22ecc:	str	x21, [x1, #40]
   22ed0:	mov	x0, x22
   22ed4:	ldp	x21, x22, [sp, #16]
   22ed8:	ldp	x19, x20, [sp], #48
   22edc:	b	1c728 <__sanitizer_set_report_fd@@Base+0x48a8>
   22ee0:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   22ee4:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   22ee8:	add	x2, x2, #0x910
   22eec:	add	x0, x0, #0x720
   22ef0:	mov	w1, #0x156                 	// #342
   22ef4:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   22ef8:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   22efc:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   22f00:	add	x2, x2, #0x858
   22f04:	add	x0, x0, #0x720
   22f08:	mov	x4, #0x0                   	// #0
   22f0c:	mov	x3, #0x0                   	// #0
   22f10:	mov	w1, #0x158                 	// #344
   22f14:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   22f18:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   22f1c:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   22f20:	add	x2, x2, #0xa68
   22f24:	add	x0, x0, #0x720
   22f28:	mov	x3, #0x0                   	// #0
   22f2c:	mov	w1, #0x159                 	// #345
   22f30:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   22f34:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   22f38:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   22f3c:	add	x2, x2, #0xa98
   22f40:	add	x0, x0, #0x720
   22f44:	mov	x3, x4
   22f48:	mov	w1, #0x15a                 	// #346
   22f4c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   22f50:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   22f54:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   22f58:	add	x2, x2, #0xac8
   22f5c:	add	x0, x0, #0x720
   22f60:	mov	x4, #0x0                   	// #0
   22f64:	mov	w1, #0x15b                 	// #347
   22f68:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   22f6c:	nop
   22f70:	ret
   22f74:	nop
   22f78:	ret
   22f7c:	nop
   22f80:	ret
   22f84:	nop
   22f88:	ret
   22f8c:	nop
   22f90:	ret
   22f94:	nop
   22f98:	ret
   22f9c:	nop
   22fa0:	ret
   22fa4:	nop
   22fa8:	adrp	x2, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   22fac:	add	x1, x2, #0x740
   22fb0:	ldr	x3, [x2, #1856]
   22fb4:	cbz	x3, 22fe4 <__sanitizer_on_print@@Base+0x36c4>
   22fb8:	ldr	x3, [x1, #8]
   22fbc:	cbz	x3, 22ffc <__sanitizer_on_print@@Base+0x36dc>
   22fc0:	ldr	x3, [x1, #16]
   22fc4:	cbz	x3, 23004 <__sanitizer_on_print@@Base+0x36e4>
   22fc8:	ldr	x3, [x1, #24]
   22fcc:	cbz	x3, 2300c <__sanitizer_on_print@@Base+0x36ec>
   22fd0:	ldr	x3, [x1, #32]
   22fd4:	mov	w1, #0x0                   	// #0
   22fd8:	cbz	x3, 23014 <__sanitizer_on_print@@Base+0x36f4>
   22fdc:	mov	w0, w1
   22fe0:	ret
   22fe4:	mov	w3, #0x0                   	// #0
   22fe8:	add	x2, x2, #0x740
   22fec:	mov	w1, #0x1                   	// #1
   22ff0:	str	x0, [x2, w3, sxtw #3]
   22ff4:	mov	w0, w1
   22ff8:	ret
   22ffc:	mov	w3, #0x1                   	// #1
   23000:	b	22fe8 <__sanitizer_on_print@@Base+0x36c8>
   23004:	mov	w3, #0x2                   	// #2
   23008:	b	22fe8 <__sanitizer_on_print@@Base+0x36c8>
   2300c:	mov	w3, #0x3                   	// #3
   23010:	b	22fe8 <__sanitizer_on_print@@Base+0x36c8>
   23014:	mov	w3, #0x4                   	// #4
   23018:	b	22fe8 <__sanitizer_on_print@@Base+0x36c8>
   2301c:	nop
   23020:	adrp	x2, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   23024:	mov	x1, x0
   23028:	ldr	x3, [x2, #1856]
   2302c:	cmp	x0, x3
   23030:	b.eq	23070 <__sanitizer_on_print@@Base+0x3750>  // b.none
   23034:	add	x0, x2, #0x740
   23038:	ldr	x3, [x0, #8]
   2303c:	cmp	x1, x3
   23040:	b.eq	230a8 <__sanitizer_on_print@@Base+0x3788>  // b.none
   23044:	ldr	x3, [x0, #16]
   23048:	cmp	x1, x3
   2304c:	b.eq	230b4 <__sanitizer_on_print@@Base+0x3794>  // b.none
   23050:	ldr	x3, [x0, #24]
   23054:	cmp	x1, x3
   23058:	b.eq	230c0 <__sanitizer_on_print@@Base+0x37a0>  // b.none
   2305c:	ldr	x3, [x0, #32]
   23060:	mov	w0, #0x0                   	// #0
   23064:	cmp	x3, x1
   23068:	b.eq	230cc <__sanitizer_on_print@@Base+0x37ac>  // b.none
   2306c:	ret
   23070:	mov	w1, #0x1                   	// #1
   23074:	mov	w0, #0x0                   	// #0
   23078:	stp	x19, x30, [sp, #-16]!
   2307c:	add	x19, x2, #0x740
   23080:	mov	w2, #0x4                   	// #4
   23084:	sub	w2, w2, w0
   23088:	add	x1, x19, w1, sxtw #3
   2308c:	add	x0, x19, w0, sxtw #3
   23090:	sbfiz	x2, x2, #3, #32
   23094:	bl	19f48 <__sanitizer_set_report_fd@@Base+0x20c8>
   23098:	mov	w0, #0x1                   	// #1
   2309c:	str	xzr, [x19, #32]
   230a0:	ldp	x19, x30, [sp], #16
   230a4:	ret
   230a8:	mov	w1, #0x2                   	// #2
   230ac:	mov	w0, #0x1                   	// #1
   230b0:	b	23078 <__sanitizer_on_print@@Base+0x3758>
   230b4:	mov	w1, #0x3                   	// #3
   230b8:	mov	w0, #0x2                   	// #2
   230bc:	b	23078 <__sanitizer_on_print@@Base+0x3758>
   230c0:	mov	w1, #0x4                   	// #4
   230c4:	mov	w0, #0x3                   	// #3
   230c8:	b	23078 <__sanitizer_on_print@@Base+0x3758>
   230cc:	mov	w1, #0x5                   	// #5
   230d0:	mov	w0, #0x4                   	// #4
   230d4:	b	23078 <__sanitizer_on_print@@Base+0x3758>
   230d8:	adrp	x1, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   230dc:	str	x0, [x1, #1896]
   230e0:	ret
   230e4:	nop
   230e8:	stp	x19, x20, [sp, #-32]!
   230ec:	adrp	x20, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   230f0:	add	x0, x20, #0x740
   230f4:	ldr	x0, [x0, #40]
   230f8:	str	x30, [sp, #16]
   230fc:	cbz	x0, 23104 <__sanitizer_on_print@@Base+0x37e4>
   23100:	blr	x0
   23104:	add	x20, x20, #0x740
   23108:	mov	x19, #0x4                   	// #4
   2310c:	ldr	x0, [x20, x19, lsl #3]
   23110:	cbz	x0, 23118 <__sanitizer_on_print@@Base+0x37f8>
   23114:	blr	x0
   23118:	sub	x19, x19, #0x1
   2311c:	cmn	x19, #0x1
   23120:	b.ne	2310c <__sanitizer_on_print@@Base+0x37ec>  // b.any
   23124:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   23128:	ldr	x0, [x0, #4056]
   2312c:	ldrb	w1, [x0, #228]
   23130:	cbz	w1, 23138 <__sanitizer_on_print@@Base+0x3818>
   23134:	bl	248f0 <__sanitizer_sandbox_on_notify@@Base+0x12a8>
   23138:	ldr	w0, [x0, #224]
   2313c:	bl	1c3a0 <__sanitizer_set_report_fd@@Base+0x4520>
   23140:	adrp	x1, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   23144:	str	x0, [x1, #1904]
   23148:	ret
   2314c:	nop
   23150:	stp	x19, x20, [sp, #-48]!
   23154:	adrp	x6, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   23158:	add	x6, x6, #0x740
   2315c:	add	x5, x6, #0x38
   23160:	mov	x19, x0
   23164:	mov	w20, w1
   23168:	stp	x21, x22, [sp, #16]
   2316c:	mov	x21, x2
   23170:	mov	x22, x3
   23174:	stp	x23, x30, [sp, #32]
   23178:	mov	x23, x4
   2317c:	ldxr	w7, [x5]
   23180:	add	w8, w7, #0x1
   23184:	stlxr	w9, w8, [x5]
   23188:	cbnz	w9, 2317c <__sanitizer_on_print@@Base+0x385c>
   2318c:	dmb	ish
   23190:	cmp	w7, #0xa
   23194:	b.hi	231c8 <__sanitizer_on_print@@Base+0x38a8>  // b.pmore
   23198:	ldr	x5, [x6, #48]
   2319c:	cbz	x5, 231a4 <__sanitizer_on_print@@Base+0x3884>
   231a0:	blr	x5
   231a4:	mov	x5, x23
   231a8:	mov	x4, x22
   231ac:	mov	x3, x21
   231b0:	mov	w2, w20
   231b4:	mov	x1, x19
   231b8:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   231bc:	add	x0, x0, #0xaf0
   231c0:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   231c4:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   231c8:	mov	w0, #0x2                   	// #2
   231cc:	bl	248d8 <__sanitizer_sandbox_on_notify@@Base+0x1290>
   231d0:	brk	#0x3e8
   231d4:	nop

00000000000231d8 <__sanitizer_set_death_callback@@Base>:
   231d8:	adrp	x1, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   231dc:	str	x0, [x1, #1896]
   231e0:	ret
   231e4:	nop
   231e8:	adrp	x1, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   231ec:	ldr	x3, [x1, #1920]
   231f0:	cbnz	x3, 231fc <__sanitizer_set_death_callback@@Base+0x24>
   231f4:	str	x0, [x1, #1920]
   231f8:	ret
   231fc:	str	x30, [sp, #-16]!
   23200:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   23204:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   23208:	add	x2, x2, #0xb20
   2320c:	add	x0, x0, #0xb50
   23210:	mov	x4, #0x0                   	// #0
   23214:	mov	w1, #0x17                  	// #23
   23218:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   2321c:	nop
   23220:	mov	x0, #0x0                   	// #0
   23224:	ret
   23228:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2322c:	stp	x19, x20, [sp, #-128]!
   23230:	adrp	x1, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   23234:	ldr	x0, [x0, #4056]
   23238:	stp	x21, x22, [sp, #16]
   2323c:	add	x1, x1, #0xbc0
   23240:	str	x1, [sp, #120]
   23244:	adrp	x1, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   23248:	ldp	x21, x19, [x0, #136]
   2324c:	stp	x23, x24, [sp, #32]
   23250:	mov	x22, #0x0                   	// #0
   23254:	stp	x27, x28, [sp, #64]
   23258:	mov	x27, #0xcccccccccccccccc    	// #-3689348814741910324
   2325c:	mov	w23, #0x0                   	// #0
   23260:	stp	d8, d9, [sp, #96]
   23264:	mov	x20, #0x0                   	// #0
   23268:	cmp	x21, #0x0
   2326c:	cset	w24, ne  // ne = any
   23270:	ldr	d9, [x1, #3184]
   23274:	fmov	d8, xzr
   23278:	movk	x27, #0xcccd
   2327c:	stp	x25, x26, [sp, #48]
   23280:	adrp	x25, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   23284:	ldrb	w26, [x0, #160]
   23288:	str	x30, [sp, #80]
   2328c:	nop
   23290:	mov	w0, #0x64                  	// #100
   23294:	bl	248e0 <__sanitizer_sandbox_on_notify@@Base+0x1298>
   23298:	bl	24170 <__sanitizer_sandbox_on_notify@@Base+0xb28>
   2329c:	lsr	x28, x0, #20
   232a0:	ldr	x1, [x25, #3816]
   232a4:	ldr	w0, [x1]
   232a8:	cbz	w0, 232ec <__sanitizer_set_death_callback@@Base+0x114>
   232ac:	add	x0, x20, x20, lsl #1
   232b0:	lsl	x0, x0, #2
   232b4:	sub	x0, x0, x20
   232b8:	umulh	x0, x0, x27
   232bc:	cmp	x28, x0, lsr #3
   232c0:	b.hi	23374 <__sanitizer_set_death_callback@@Base+0x19c>  // b.pmore
   232c4:	bl	27120 <__sanitizer_cov_dump@@Base+0x500>
   232c8:	mov	x5, x0
   232cc:	cbz	x0, 232ec <__sanitizer_set_death_callback@@Base+0x114>
   232d0:	add	x1, x22, x22, lsl #1
   232d4:	ldr	x3, [x0, #8]
   232d8:	lsl	x1, x1, #2
   232dc:	sub	x1, x1, x22
   232e0:	umulh	x1, x1, x27
   232e4:	cmp	x3, x1, lsr #3
   232e8:	b.hi	233d4 <__sanitizer_set_death_callback@@Base+0x1fc>  // b.pmore
   232ec:	cmp	w24, #0x0
   232f0:	ccmp	x21, x28, #0x2, ne  // ne = any
   232f4:	b.cc	23408 <__sanitizer_set_death_callback@@Base+0x230>  // b.lo, b.ul, b.last
   232f8:	cbz	x19, 23338 <__sanitizer_set_death_callback@@Base+0x160>
   232fc:	cmp	x19, x28
   23300:	eor	w0, w23, #0x1
   23304:	cset	w1, cc  // cc = lo, ul, last
   23308:	ands	w1, w1, w0
   2330c:	b.ne	23398 <__sanitizer_set_death_callback@@Base+0x1c0>  // b.any
   23310:	cmp	w23, #0x0
   23314:	ccmp	x19, x28, #0x0, ne  // ne = any
   23318:	b.cc	23338 <__sanitizer_set_death_callback@@Base+0x160>  // b.lo, b.ul, b.last
   2331c:	adrp	x0, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   23320:	mov	w23, #0x0                   	// #0
   23324:	ldr	x1, [x0, #1920]
   23328:	cbz	x1, 23338 <__sanitizer_set_death_callback@@Base+0x160>
   2332c:	mov	w0, #0x0                   	// #0
   23330:	blr	x1
   23334:	nop
   23338:	cbz	w26, 23290 <__sanitizer_set_death_callback@@Base+0xb8>
   2333c:	scvtf	d0, d8
   23340:	scvtf	d1, x28
   23344:	fmul	d0, d0, d9
   23348:	fcmpe	d1, d0
   2334c:	b.le	23290 <__sanitizer_set_death_callback@@Base+0xb8>
   23350:	mov	x1, x28
   23354:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   23358:	add	x0, x0, #0xc50
   2335c:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   23360:	fmov	d8, x28
   23364:	mov	x1, #0x14                  	// #20
   23368:	mov	x0, #0x5a                  	// #90
   2336c:	bl	6660 <__sanitizer_print_memory_profile@plt>
   23370:	b	23290 <__sanitizer_set_death_callback@@Base+0xb8>
   23374:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   23378:	mov	x20, x28
   2337c:	mov	x2, x28
   23380:	ldr	x1, [x0, #4024]
   23384:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   23388:	add	x0, x0, #0xbb0
   2338c:	ldr	x1, [x1]
   23390:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   23394:	b	232c4 <__sanitizer_set_death_callback@@Base+0xec>
   23398:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2339c:	mov	w23, w1
   233a0:	mov	x3, x28
   233a4:	mov	x2, x19
   233a8:	ldr	x5, [x0, #4024]
   233ac:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   233b0:	add	x0, x0, #0xc20
   233b4:	ldr	x1, [x5]
   233b8:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   233bc:	adrp	x0, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   233c0:	ldr	x1, [x0, #1920]
   233c4:	cbz	x1, 23338 <__sanitizer_set_death_callback@@Base+0x160>
   233c8:	mov	w0, #0x1                   	// #1
   233cc:	blr	x1
   233d0:	b	23338 <__sanitizer_set_death_callback@@Base+0x160>
   233d4:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   233d8:	lsr	x3, x3, #20
   233dc:	ldr	x2, [x5]
   233e0:	str	x5, [sp, #112]
   233e4:	ldr	x1, [x0, #4024]
   233e8:	ldr	x0, [sp, #120]
   233ec:	ldr	x1, [x1]
   233f0:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   233f4:	ldr	x5, [sp, #112]
   233f8:	cmp	w24, #0x0
   233fc:	ccmp	x21, x28, #0x2, ne  // ne = any
   23400:	ldr	x22, [x5, #8]
   23404:	b.cs	232f8 <__sanitizer_set_death_callback@@Base+0x120>  // b.hs, b.nlast
   23408:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2340c:	mov	x3, x28
   23410:	mov	x2, x21
   23414:	ldr	x1, [x0, #4024]
   23418:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   2341c:	add	x0, x0, #0xbf0
   23420:	ldr	x1, [x1]
   23424:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   23428:	bl	1e670 <__sanitizer_set_report_fd@@Base+0x67f0>
   2342c:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   23430:	stp	x19, x20, [sp, #-96]!
   23434:	stp	x23, x24, [sp, #32]
   23438:	adrp	x23, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2343c:	ldr	x19, [x23, #4016]
   23440:	stp	x21, x22, [sp, #16]
   23444:	mov	x21, x0
   23448:	str	xzr, [sp, #64]
   2344c:	ldr	x1, [x19]
   23450:	str	x30, [sp, #48]
   23454:	stp	xzr, xzr, [sp, #72]
   23458:	cbz	x1, 23570 <__sanitizer_set_death_callback@@Base+0x398>
   2345c:	sub	x0, x1, #0x1
   23460:	tst	x0, x1
   23464:	b.ne	235dc <__sanitizer_set_death_callback@@Base+0x404>  // b.any
   23468:	neg	x19, x1
   2346c:	mov	x22, #0xffff                	// #65535
   23470:	add	x1, x1, x22
   23474:	mov	w2, #0x0                   	// #0
   23478:	and	x19, x1, x19
   2347c:	adrp	x24, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   23480:	mov	x0, x19
   23484:	add	x1, x24, #0xc10
   23488:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   2348c:	mov	x20, x0
   23490:	ldr	x1, [sp, #64]
   23494:	ldr	x2, [sp, #80]
   23498:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   2349c:	ldp	x0, x1, [sp, #64]
   234a0:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   234a4:	stp	x20, x19, [sp, #64]
   234a8:	ldr	x2, [sp, #80]
   234ac:	cmp	x2, x22
   234b0:	b.ls	23528 <__sanitizer_set_death_callback@@Base+0x350>  // b.plast
   234b4:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   234b8:	mov	x2, x21
   234bc:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   234c0:	add	x1, x1, #0xcb8
   234c4:	ldr	q0, [x0, #3200]
   234c8:	add	x0, sp, #0x40
   234cc:	str	q0, [sp, #80]
   234d0:	strb	wzr, [x20]
   234d4:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   234d8:	ldr	x19, [sp, #64]
   234dc:	b	234f0 <__sanitizer_set_death_callback@@Base+0x318>
   234e0:	strb	wzr, [x0]
   234e4:	mov	x0, x19
   234e8:	add	x19, x1, #0x1
   234ec:	bl	24330 <__sanitizer_sandbox_on_notify@@Base+0xce8>
   234f0:	mov	w1, #0xa                   	// #10
   234f4:	mov	x0, x19
   234f8:	bl	1a5e8 <__sanitizer_set_report_fd@@Base+0x2768>
   234fc:	mov	x1, x0
   23500:	cbnz	x0, 234e0 <__sanitizer_set_death_callback@@Base+0x308>
   23504:	ldrb	w0, [x19]
   23508:	cbnz	w0, 2354c <__sanitizer_set_death_callback@@Base+0x374>
   2350c:	ldp	x0, x1, [sp, #64]
   23510:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   23514:	ldp	x21, x22, [sp, #16]
   23518:	ldp	x23, x24, [sp, #32]
   2351c:	ldr	x30, [sp, #48]
   23520:	ldp	x19, x20, [sp], #96
   23524:	ret
   23528:	cmp	x19, x22
   2352c:	b.ls	23580 <__sanitizer_set_death_callback@@Base+0x3a8>  // b.plast
   23530:	mov	x3, #0x10000               	// #65536
   23534:	add	x0, x20, x2
   23538:	mov	w1, #0x0                   	// #0
   2353c:	sub	x2, x3, x2
   23540:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   23544:	ldr	x20, [sp, #64]
   23548:	b	234b4 <__sanitizer_set_death_callback@@Base+0x2dc>
   2354c:	mov	x0, x19
   23550:	bl	24330 <__sanitizer_sandbox_on_notify@@Base+0xce8>
   23554:	ldp	x0, x1, [sp, #64]
   23558:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   2355c:	ldp	x21, x22, [sp, #16]
   23560:	ldp	x23, x24, [sp, #32]
   23564:	ldr	x30, [sp, #48]
   23568:	ldp	x19, x20, [sp], #96
   2356c:	ret
   23570:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   23574:	mov	x1, x0
   23578:	str	x0, [x19]
   2357c:	b	2345c <__sanitizer_set_death_callback@@Base+0x284>
   23580:	ldr	x23, [x23, #4016]
   23584:	ldr	x0, [x23]
   23588:	cbz	x0, 235ec <__sanitizer_set_death_callback@@Base+0x414>
   2358c:	sub	x1, x0, #0x1
   23590:	tst	x1, x0
   23594:	b.ne	235dc <__sanitizer_set_death_callback@@Base+0x404>  // b.any
   23598:	mov	x1, #0xffff                	// #65535
   2359c:	add	x19, x0, x1
   235a0:	neg	x0, x0
   235a4:	add	x1, x24, #0xc10
   235a8:	and	x19, x19, x0
   235ac:	mov	w2, #0x0                   	// #0
   235b0:	mov	x0, x19
   235b4:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   235b8:	ldr	x1, [sp, #64]
   235bc:	mov	x20, x0
   235c0:	ldr	x2, [sp, #80]
   235c4:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   235c8:	ldp	x0, x1, [sp, #64]
   235cc:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   235d0:	stp	x20, x19, [sp, #64]
   235d4:	ldr	x2, [sp, #80]
   235d8:	b	23530 <__sanitizer_set_death_callback@@Base+0x358>
   235dc:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   235e0:	add	x0, x0, #0xbf8
   235e4:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   235e8:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   235ec:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   235f0:	str	x0, [x23]
   235f4:	b	2358c <__sanitizer_set_death_callback@@Base+0x3b4>
   235f8:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   235fc:	ldr	x0, [x0, #4056]
   23600:	ldp	x1, x2, [x0, #136]
   23604:	orr	x1, x1, x2
   23608:	cbnz	x1, 23614 <__sanitizer_set_death_callback@@Base+0x43c>
   2360c:	ldrb	w0, [x0, #160]
   23610:	cbz	w0, 23630 <__sanitizer_set_death_callback@@Base+0x458>
   23614:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   23618:	ldr	x0, [x0, #3968]
   2361c:	cbz	x0, 23630 <__sanitizer_set_death_callback@@Base+0x458>
   23620:	adrp	x0, 23000 <__sanitizer_on_print@@Base+0x36e0>
   23624:	mov	x1, #0x0                   	// #0
   23628:	add	x0, x0, #0x228
   2362c:	b	1d830 <__sanitizer_set_report_fd@@Base+0x59b0>
   23630:	ret
   23634:	nop
   23638:	adrp	x1, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   2363c:	str	x0, [x1, #1928]
   23640:	ret
   23644:	nop

0000000000023648 <__sanitizer_sandbox_on_notify@@Base>:
   23648:	str	x30, [sp, #-16]!
   2364c:	bl	24c80 <__sanitizer_sandbox_on_notify@@Base+0x1638>
   23650:	adrp	x0, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   23654:	ldr	x0, [x0, #1928]
   23658:	cbz	x0, 23668 <__sanitizer_sandbox_on_notify@@Base+0x20>
   2365c:	ldr	x30, [sp], #16
   23660:	mov	x16, x0
   23664:	br	x16
   23668:	ldr	x30, [sp], #16
   2366c:	ret
   23670:	str	x30, [sp, #-16]!
   23674:	bl	64f0 <__errno_location@plt>
   23678:	mov	w1, #0xc                   	// #12
   2367c:	ldr	x30, [sp], #16
   23680:	str	w1, [x0]
   23684:	ret
   23688:	stp	x19, x20, [sp, #-176]!
   2368c:	stp	x23, x24, [sp, #32]
   23690:	adrp	x23, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   23694:	ldr	x19, [x23, #4016]
   23698:	stp	x21, x22, [sp, #16]
   2369c:	mov	x21, x0
   236a0:	stp	x25, x30, [sp, #48]
   236a4:	mov	x22, x2
   236a8:	ldr	x1, [x19]
   236ac:	str	xzr, [sp, #64]
   236b0:	stp	xzr, xzr, [sp, #72]
   236b4:	cbz	x1, 238b4 <__sanitizer_sandbox_on_notify@@Base+0x26c>
   236b8:	sub	x19, x1, #0x1
   236bc:	ands	x19, x19, x1
   236c0:	b.ne	239c8 <__sanitizer_sandbox_on_notify@@Base+0x380>  // b.any
   236c4:	add	x25, x1, #0xfff
   236c8:	neg	x1, x1
   236cc:	and	x25, x25, x1
   236d0:	mov	w2, #0x0                   	// #0
   236d4:	mov	x0, x25
   236d8:	adrp	x24, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   236dc:	add	x1, x24, #0xc10
   236e0:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   236e4:	ldr	x1, [sp, #64]
   236e8:	mov	x20, x0
   236ec:	ldr	x2, [sp, #80]
   236f0:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   236f4:	ldp	x0, x1, [sp, #64]
   236f8:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   236fc:	stp	x20, x25, [sp, #64]
   23700:	ldr	x2, [sp, #80]
   23704:	cmp	x2, #0xfff
   23708:	b.hi	2372c <__sanitizer_sandbox_on_notify@@Base+0xe4>  // b.pmore
   2370c:	cmp	x25, #0xfff
   23710:	b.ls	23970 <__sanitizer_sandbox_on_notify@@Base+0x328>  // b.plast
   23714:	mov	x3, #0x1000                	// #4096
   23718:	add	x0, x20, x2
   2371c:	mov	w1, #0x0                   	// #0
   23720:	sub	x2, x3, x2
   23724:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   23728:	ldr	x20, [sp, #64]
   2372c:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   23730:	ldr	q0, [x0, #3456]
   23734:	str	q0, [sp, #80]
   23738:	strb	wzr, [x20]
   2373c:	ldrb	w0, [x22, #8]
   23740:	cbnz	w0, 23858 <__sanitizer_sandbox_on_notify@@Base+0x210>
   23744:	ldr	x2, [x21, #8]
   23748:	cbz	x2, 2375c <__sanitizer_sandbox_on_notify@@Base+0x114>
   2374c:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   23750:	add	x0, sp, #0x40
   23754:	add	x1, x1, #0xcb8
   23758:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   2375c:	ldr	x1, [sp, #80]
   23760:	ldr	x0, [sp, #64]
   23764:	cbz	x1, 239d8 <__sanitizer_sandbox_on_notify@@Base+0x390>
   23768:	ldrb	w1, [x0]
   2376c:	cbz	w1, 23838 <__sanitizer_sandbox_on_notify@@Base+0x1f0>
   23770:	movi	v0.4s, #0x0
   23774:	add	x25, sp, #0x60
   23778:	mov	x2, #0x10                  	// #16
   2377c:	mov	w1, #0x0                   	// #0
   23780:	add	x0, x25, #0x1c
   23784:	str	xzr, [sp, #96]
   23788:	str	wzr, [sp, #120]
   2378c:	stur	q0, [sp, #104]
   23790:	strb	wzr, [sp, #140]
   23794:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   23798:	movi	v0.4s, #0x0
   2379c:	mov	x0, x25
   237a0:	ldr	x2, [x21]
   237a4:	str	xzr, [sp, #144]
   237a8:	ldr	x1, [sp, #64]
   237ac:	stur	q0, [sp, #152]
   237b0:	bl	14ac0 <_ZdaPvRKSt9nothrow_t@@Base+0x2d40>
   237b4:	ldrh	w3, [x21, #24]
   237b8:	cbz	w3, 237e8 <__sanitizer_sandbox_on_notify@@Base+0x1a0>
   237bc:	ldr	x0, [x21, #16]
   237c0:	mov	w20, #0x0                   	// #0
   237c4:	nop
   237c8:	ldr	w1, [x0, x19]
   237cc:	add	x2, x0, x19
   237d0:	cmp	w1, #0x1
   237d4:	b.eq	2386c <__sanitizer_sandbox_on_notify@@Base+0x224>  // b.none
   237d8:	add	w20, w20, #0x1
   237dc:	add	x19, x19, #0x38
   237e0:	cmp	w3, w20
   237e4:	b.gt	237c8 <__sanitizer_sandbox_on_notify@@Base+0x180>
   237e8:	ldr	x19, [x22]
   237ec:	mov	x0, #0xe38f                	// #58255
   237f0:	movk	x0, #0x8e38, lsl #16
   237f4:	movk	x0, #0x38e3, lsl #32
   237f8:	ldp	x4, x3, [x19, #8]
   237fc:	movk	x0, #0xe38e, lsl #48
   23800:	umulh	x4, x4, x0
   23804:	lsr	x4, x4, #6
   23808:	cmp	x3, x4
   2380c:	b.hi	23a04 <__sanitizer_sandbox_on_notify@@Base+0x3bc>  // b.pmore
   23810:	add	x0, x3, #0x1
   23814:	b.eq	238c4 <__sanitizer_sandbox_on_notify@@Base+0x27c>  // b.none
   23818:	ldr	x21, [x19]
   2381c:	add	x3, x3, x3, lsl #3
   23820:	str	x0, [x19, #16]
   23824:	mov	x1, x25
   23828:	add	x0, x21, x3, lsl #3
   2382c:	mov	x2, #0x48                  	// #72
   23830:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   23834:	ldr	x0, [sp, #64]
   23838:	ldr	x1, [sp, #72]
   2383c:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   23840:	mov	w0, #0x0                   	// #0
   23844:	ldp	x21, x22, [sp, #16]
   23848:	ldp	x23, x24, [sp, #32]
   2384c:	ldp	x25, x30, [sp, #48]
   23850:	ldp	x19, x20, [sp], #176
   23854:	ret
   23858:	ldr	x0, [sp, #64]
   2385c:	strb	wzr, [x22, #8]
   23860:	ldr	x1, [sp, #80]
   23864:	bl	14fd0 <_ZdaPvRKSt9nothrow_t@@Base+0x3250>
   23868:	b	2375c <__sanitizer_sandbox_on_notify@@Base+0x114>
   2386c:	ldr	x1, [x21]
   23870:	mov	x0, x25
   23874:	ldr	x4, [x2, #16]
   23878:	mov	x5, #0x0                   	// #0
   2387c:	ldr	w3, [x2, #4]
   23880:	add	w20, w20, #0x1
   23884:	ldr	x2, [x2, #40]
   23888:	add	x1, x1, x4
   2388c:	ubfx	x4, x3, #1, #1
   23890:	and	w3, w3, #0x1
   23894:	add	x2, x1, x2
   23898:	bl	14b58 <_ZdaPvRKSt9nothrow_t@@Base+0x2dd8>
   2389c:	ldrh	w3, [x21, #24]
   238a0:	add	x19, x19, #0x38
   238a4:	cmp	w20, w3
   238a8:	b.ge	237e8 <__sanitizer_sandbox_on_notify@@Base+0x1a0>  // b.tcont
   238ac:	ldr	x0, [x21, #16]
   238b0:	b	237c8 <__sanitizer_sandbox_on_notify@@Base+0x180>
   238b4:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   238b8:	mov	x1, x0
   238bc:	str	x0, [x19]
   238c0:	b	236b8 <__sanitizer_sandbox_on_notify@@Base+0x70>
   238c4:	tst	x0, x3
   238c8:	b.eq	23904 <__sanitizer_sandbox_on_notify@@Base+0x2bc>  // b.none
   238cc:	clz	x2, x0
   238d0:	mov	w1, #0x3f                  	// #63
   238d4:	sub	w1, w1, w2
   238d8:	mov	x2, #0x1                   	// #1
   238dc:	add	w4, w1, #0x1
   238e0:	lsl	x4, x2, x4
   238e4:	cmp	x0, x4
   238e8:	b.cs	23a60 <__sanitizer_sandbox_on_notify@@Base+0x418>  // b.hs, b.nlast
   238ec:	lsl	x1, x2, x1
   238f0:	cmp	x0, x1
   238f4:	b.ls	23a40 <__sanitizer_sandbox_on_notify@@Base+0x3f8>  // b.plast
   238f8:	cmp	x3, x4
   238fc:	b.hi	23a28 <__sanitizer_sandbox_on_notify@@Base+0x3e0>  // b.pmore
   23900:	mov	x0, x4
   23904:	ldr	x23, [x23, #4016]
   23908:	add	x0, x0, x0, lsl #3
   2390c:	lsl	x20, x0, #3
   23910:	ldr	x0, [x23]
   23914:	cbz	x0, 23a1c <__sanitizer_sandbox_on_notify@@Base+0x3d4>
   23918:	sub	x1, x0, #0x1
   2391c:	tst	x1, x0
   23920:	b.ne	239c8 <__sanitizer_sandbox_on_notify@@Base+0x380>  // b.any
   23924:	add	x20, x20, x1
   23928:	neg	x0, x0
   2392c:	and	x20, x20, x0
   23930:	add	x1, x24, #0xc10
   23934:	mov	w2, #0x0                   	// #0
   23938:	mov	x0, x20
   2393c:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   23940:	mov	x21, x0
   23944:	ldr	x2, [x19, #16]
   23948:	ldr	x1, [x19]
   2394c:	add	x2, x2, x2, lsl #3
   23950:	lsl	x2, x2, #3
   23954:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   23958:	ldp	x0, x1, [x19]
   2395c:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   23960:	stp	x21, x20, [x19]
   23964:	ldr	x3, [x19, #16]
   23968:	add	x0, x3, #0x1
   2396c:	b	2381c <__sanitizer_sandbox_on_notify@@Base+0x1d4>
   23970:	ldr	x20, [x23, #4016]
   23974:	ldr	x0, [x20]
   23978:	cbz	x0, 239f8 <__sanitizer_sandbox_on_notify@@Base+0x3b0>
   2397c:	sub	x1, x0, #0x1
   23980:	tst	x1, x0
   23984:	b.ne	239c8 <__sanitizer_sandbox_on_notify@@Base+0x380>  // b.any
   23988:	add	x25, x0, #0xfff
   2398c:	neg	x0, x0
   23990:	and	x25, x25, x0
   23994:	add	x1, x24, #0xc10
   23998:	mov	w2, #0x0                   	// #0
   2399c:	mov	x0, x25
   239a0:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   239a4:	mov	x20, x0
   239a8:	ldr	x1, [sp, #64]
   239ac:	ldr	x2, [sp, #80]
   239b0:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   239b4:	ldp	x0, x1, [sp, #64]
   239b8:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   239bc:	stp	x20, x25, [sp, #64]
   239c0:	ldr	x2, [sp, #80]
   239c4:	b	23714 <__sanitizer_sandbox_on_notify@@Base+0xcc>
   239c8:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   239cc:	add	x0, x0, #0xbf8
   239d0:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   239d4:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   239d8:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   239dc:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   239e0:	add	x2, x2, #0x118
   239e4:	add	x0, x0, #0xb98
   239e8:	mov	x4, #0x0                   	// #0
   239ec:	mov	x3, #0x0                   	// #0
   239f0:	mov	w1, #0x1c5                 	// #453
   239f4:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   239f8:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   239fc:	str	x0, [x20]
   23a00:	b	2397c <__sanitizer_sandbox_on_notify@@Base+0x334>
   23a04:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   23a08:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   23a0c:	add	x2, x2, #0x8c8
   23a10:	add	x0, x0, #0xb98
   23a14:	mov	w1, #0x1cd                 	// #461
   23a18:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   23a1c:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   23a20:	str	x0, [x23]
   23a24:	b	23918 <__sanitizer_sandbox_on_notify@@Base+0x2d0>
   23a28:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   23a2c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   23a30:	add	x2, x2, #0x8f8
   23a34:	add	x0, x0, #0xb98
   23a38:	mov	w1, #0x20c                 	// #524
   23a3c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   23a40:	mov	x4, x1
   23a44:	mov	x3, x0
   23a48:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   23a4c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   23a50:	add	x2, x2, #0x708
   23a54:	add	x0, x0, #0xb98
   23a58:	mov	w1, #0x18b                 	// #395
   23a5c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   23a60:	mov	x3, x0
   23a64:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   23a68:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   23a6c:	add	x2, x2, #0x680
   23a70:	add	x0, x0, #0xb98
   23a74:	mov	w1, #0x18a                 	// #394
   23a78:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   23a7c:	nop
   23a80:	adrp	x3, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   23a84:	ldr	x3, [x3, #3680]
   23a88:	cbz	x3, 23a90 <__sanitizer_sandbox_on_notify@@Base+0x448>
   23a8c:	b	6280 <_ZN11__sanitizer14real_sigactionEiPKvPv@plt>
   23a90:	b	6640 <sigaction@plt>
   23a94:	nop
   23a98:	stp	x19, x20, [sp, #-192]!
   23a9c:	str	x30, [sp, #48]
   23aa0:	cbz	x1, 23c24 <__sanitizer_sandbox_on_notify@@Base+0x5dc>
   23aa4:	stp	x23, x24, [sp, #32]
   23aa8:	mov	x24, x2
   23aac:	cbz	x2, 23c4c <__sanitizer_sandbox_on_notify@@Base+0x604>
   23ab0:	mov	x19, x1
   23ab4:	and	w0, w0, #0xff
   23ab8:	cbz	w0, 23b64 <__sanitizer_sandbox_on_notify@@Base+0x51c>
   23abc:	stp	x21, x22, [sp, #16]
   23ac0:	add	x22, sp, #0x40
   23ac4:	mov	x1, x22
   23ac8:	mov	w0, #0x3                   	// #3
   23acc:	bl	6610 <getrlimit@plt>
   23ad0:	sxtw	x20, w0
   23ad4:	cbnz	w0, 23c70 <__sanitizer_sandbox_on_notify@@Base+0x628>
   23ad8:	add	x21, sp, #0x50
   23adc:	mov	w1, #0x1                   	// #1
   23ae0:	mov	x0, x21
   23ae4:	bl	1ffa0 <__sanitizer_on_print@@Base+0x680>
   23ae8:	mov	x0, x21
   23aec:	bl	200c0 <__sanitizer_on_print@@Base+0x7a0>
   23af0:	tst	w0, #0xff
   23af4:	b.ne	23c18 <__sanitizer_sandbox_on_notify@@Base+0x5d0>  // b.any
   23af8:	add	x23, sp, #0x70
   23afc:	stp	xzr, xzr, [sp, #136]
   23b00:	str	xzr, [sp, #184]
   23b04:	b	23b18 <__sanitizer_sandbox_on_notify@@Base+0x4d0>
   23b08:	ldr	x0, [sp, #120]
   23b0c:	cmp	x0, x22
   23b10:	b.hi	23bc8 <__sanitizer_sandbox_on_notify@@Base+0x580>  // b.pmore
   23b14:	mov	x20, x0
   23b18:	mov	x1, x23
   23b1c:	mov	x0, x21
   23b20:	bl	20810 <__sanitizer_on_print@@Base+0xef0>
   23b24:	tst	w0, #0xff
   23b28:	b.ne	23b08 <__sanitizer_sandbox_on_notify@@Base+0x4c0>  // b.any
   23b2c:	ldr	x0, [sp, #112]
   23b30:	cmp	x0, x22
   23b34:	b.hi	23b44 <__sanitizer_sandbox_on_notify@@Base+0x4fc>  // b.pmore
   23b38:	ldr	x0, [sp, #120]
   23b3c:	cmp	x0, x22
   23b40:	b.hi	23bd4 <__sanitizer_sandbox_on_notify@@Base+0x58c>  // b.pmore
   23b44:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   23b48:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   23b4c:	add	x2, x2, #0xd50
   23b50:	add	x0, x0, #0xca8
   23b54:	mov	x4, #0x0                   	// #0
   23b58:	mov	x3, #0x0                   	// #0
   23b5c:	mov	w1, #0x73                  	// #115
   23b60:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   23b64:	add	x20, sp, #0x70
   23b68:	str	xzr, [sp, #64]
   23b6c:	mov	x0, x20
   23b70:	str	xzr, [sp, #80]
   23b74:	bl	62b0 <pthread_attr_init@plt>
   23b78:	bl	65e0 <pthread_self@plt>
   23b7c:	mov	x1, x20
   23b80:	bl	6270 <pthread_getattr_np@plt>
   23b84:	sxtw	x3, w0
   23b88:	cbnz	w0, 23c90 <__sanitizer_sandbox_on_notify@@Base+0x648>
   23b8c:	add	x2, sp, #0x40
   23b90:	add	x1, sp, #0x50
   23b94:	mov	x0, x20
   23b98:	bl	25048 <__sanitizer_sandbox_on_notify@@Base+0x1a00>
   23b9c:	mov	x0, x20
   23ba0:	bl	6360 <pthread_attr_destroy@plt>
   23ba4:	ldr	x0, [sp, #64]
   23ba8:	ldr	x1, [sp, #80]
   23bac:	ldr	x30, [sp, #48]
   23bb0:	add	x0, x0, x1
   23bb4:	str	x0, [x19]
   23bb8:	str	x1, [x24]
   23bbc:	ldp	x23, x24, [sp, #32]
   23bc0:	ldp	x19, x20, [sp], #192
   23bc4:	ret
   23bc8:	ldr	x1, [sp, #112]
   23bcc:	cmp	x1, x22
   23bd0:	b.hi	23b44 <__sanitizer_sandbox_on_notify@@Base+0x4fc>  // b.pmore
   23bd4:	ldr	x1, [sp, #64]
   23bd8:	mov	x2, #0x40000000            	// #1073741824
   23bdc:	sub	x20, x0, x20
   23be0:	str	x0, [x19]
   23be4:	cmp	x1, x2
   23be8:	csel	x1, x1, x2, ls  // ls = plast
   23bec:	cmp	x20, x1
   23bf0:	csel	x20, x20, x1, ls  // ls = plast
   23bf4:	sub	x0, x0, x20
   23bf8:	str	x0, [x24]
   23bfc:	mov	x0, x21
   23c00:	bl	200d0 <__sanitizer_on_print@@Base+0x7b0>
   23c04:	ldp	x21, x22, [sp, #16]
   23c08:	ldp	x23, x24, [sp, #32]
   23c0c:	ldr	x30, [sp, #48]
   23c10:	ldp	x19, x20, [sp], #192
   23c14:	ret
   23c18:	str	xzr, [x24]
   23c1c:	str	xzr, [x19]
   23c20:	b	23bfc <__sanitizer_sandbox_on_notify@@Base+0x5b4>
   23c24:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   23c28:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   23c2c:	add	x2, x2, #0xc90
   23c30:	add	x0, x0, #0xca8
   23c34:	mov	x4, #0x0                   	// #0
   23c38:	mov	x3, #0x0                   	// #0
   23c3c:	mov	w1, #0x60                  	// #96
   23c40:	stp	x21, x22, [sp, #16]
   23c44:	stp	x23, x24, [sp, #32]
   23c48:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   23c4c:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   23c50:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   23c54:	add	x2, x2, #0xd08
   23c58:	add	x0, x0, #0xca8
   23c5c:	mov	x4, #0x0                   	// #0
   23c60:	mov	x3, #0x0                   	// #0
   23c64:	mov	w1, #0x61                  	// #97
   23c68:	stp	x21, x22, [sp, #16]
   23c6c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   23c70:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   23c74:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   23c78:	mov	x3, x20
   23c7c:	add	x2, x2, #0xd20
   23c80:	add	x0, x0, #0xca8
   23c84:	mov	x4, #0x0                   	// #0
   23c88:	mov	w1, #0x65                  	// #101
   23c8c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   23c90:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   23c94:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   23c98:	add	x2, x2, #0xd98
   23c9c:	add	x0, x0, #0xca8
   23ca0:	mov	x4, #0x0                   	// #0
   23ca4:	mov	w1, #0x91                  	// #145
   23ca8:	stp	x21, x22, [sp, #16]
   23cac:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   23cb0:	stp	x19, x20, [sp, #-48]!
   23cb4:	mov	x19, x0
   23cb8:	mov	x20, x1
   23cbc:	mov	x0, #0xffffffffffffffff    	// #-1
   23cc0:	adrp	x1, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   23cc4:	add	x1, x1, #0xdd0
   23cc8:	str	x30, [sp, #16]
   23ccc:	bl	62e0 <dlsym@plt>
   23cd0:	str	x0, [sp, #32]
   23cd4:	cbz	x0, 23d10 <__sanitizer_sandbox_on_notify@@Base+0x6c8>
   23cd8:	add	x1, sp, #0x20
   23cdc:	add	x0, sp, #0x28
   23ce0:	mov	x2, #0x8                   	// #8
   23ce4:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   23ce8:	ldr	x3, [sp, #40]
   23cec:	mov	x1, x20
   23cf0:	mov	x0, x19
   23cf4:	mov	w2, #0x1                   	// #1
   23cf8:	blr	x3
   23cfc:	cmp	w0, #0x0
   23d00:	cset	w0, eq  // eq = none
   23d04:	ldr	x30, [sp, #16]
   23d08:	ldp	x19, x20, [sp], #48
   23d0c:	ret
   23d10:	mov	w0, #0x0                   	// #0
   23d14:	ldr	x30, [sp, #16]
   23d18:	ldp	x19, x20, [sp], #48
   23d1c:	ret
   23d20:	str	x30, [sp, #-48]!
   23d24:	adrp	x1, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   23d28:	mov	x0, #0xffffffffffffffff    	// #-1
   23d2c:	add	x1, x1, #0xdd8
   23d30:	bl	62e0 <dlsym@plt>
   23d34:	mov	x3, x0
   23d38:	mov	x2, #0x8                   	// #8
   23d3c:	add	x1, sp, #0x20
   23d40:	add	x0, sp, #0x28
   23d44:	stp	xzr, xzr, [sp, #16]
   23d48:	str	x3, [sp, #32]
   23d4c:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   23d50:	ldr	x2, [sp, #40]
   23d54:	cbz	x2, 23dc8 <__sanitizer_sandbox_on_notify@@Base+0x780>
   23d58:	add	x1, sp, #0x18
   23d5c:	add	x0, sp, #0x10
   23d60:	blr	x2
   23d64:	ldr	x1, [sp, #24]
   23d68:	cmp	x1, #0xf
   23d6c:	b.ls	23da0 <__sanitizer_sandbox_on_notify@@Base+0x758>  // b.plast
   23d70:	sub	x0, x1, #0x1
   23d74:	tst	x0, x1
   23d78:	b.ne	23de8 <__sanitizer_sandbox_on_notify@@Base+0x7a0>  // b.any
   23d7c:	ldr	x0, [sp, #16]
   23d80:	adrp	x2, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   23d84:	add	x0, x0, x1
   23d88:	neg	x1, x1
   23d8c:	sub	x0, x0, #0x1
   23d90:	and	x0, x0, x1
   23d94:	str	x0, [x2, #1936]
   23d98:	ldr	x30, [sp], #48
   23d9c:	ret
   23da0:	ldr	x0, [sp, #16]
   23da4:	mov	x1, #0x10                  	// #16
   23da8:	adrp	x2, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   23dac:	add	x0, x0, x1
   23db0:	neg	x1, x1
   23db4:	sub	x0, x0, #0x1
   23db8:	and	x0, x0, x1
   23dbc:	str	x0, [x2, #1936]
   23dc0:	ldr	x30, [sp], #48
   23dc4:	ret
   23dc8:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   23dcc:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   23dd0:	add	x2, x2, #0xdf0
   23dd4:	add	x0, x0, #0xca8
   23dd8:	mov	x4, #0x0                   	// #0
   23ddc:	mov	x3, #0x0                   	// #0
   23de0:	mov	w1, #0xd9                  	// #217
   23de4:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   23de8:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   23dec:	add	x0, x0, #0xbf8
   23df0:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   23df4:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   23df8:	adrp	x1, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   23dfc:	add	x1, x1, #0x790
   23e00:	ldr	x0, [x1, #8]
   23e04:	cbnz	x0, 23e14 <__sanitizer_sandbox_on_notify@@Base+0x7cc>
   23e08:	mov	x2, #0x6f0                 	// #1776
   23e0c:	mov	x0, x2
   23e10:	str	x2, [x1, #8]
   23e14:	ret
   23e18:	mov	x0, #0x10                  	// #16
   23e1c:	ret
   23e20:	adrp	x1, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   23e24:	add	x1, x1, #0x790
   23e28:	mrs	x2, tpidr_el0
   23e2c:	ldr	x0, [x1, #8]
   23e30:	cbnz	x0, 23e40 <__sanitizer_sandbox_on_notify@@Base+0x7f8>
   23e34:	mov	x3, #0x6f0                 	// #1776
   23e38:	mov	x0, x3
   23e3c:	str	x3, [x1, #8]
   23e40:	sub	x0, x2, x0
   23e44:	ret
   23e48:	adrp	x0, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   23e4c:	ldr	x0, [x0, #1936]
   23e50:	ret
   23e54:	nop
   23e58:	adrp	x6, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   23e5c:	add	x7, x6, #0x790
   23e60:	stp	x19, x20, [sp, #-64]!
   23e64:	mov	x20, x1
   23e68:	mov	x19, x3
   23e6c:	ldr	x5, [x7, #8]
   23e70:	stp	x21, x22, [sp, #16]
   23e74:	mov	x22, x2
   23e78:	stp	x23, x30, [sp, #32]
   23e7c:	mov	x21, x4
   23e80:	and	w23, w0, #0xff
   23e84:	mrs	x0, tpidr_el0
   23e88:	cbnz	x5, 23e98 <__sanitizer_sandbox_on_notify@@Base+0x850>
   23e8c:	mov	x1, #0x6f0                 	// #1776
   23e90:	mov	x5, x1
   23e94:	str	x1, [x7, #8]
   23e98:	sub	x0, x0, x5
   23e9c:	str	x0, [x19]
   23ea0:	ldr	x0, [x6, #1936]
   23ea4:	str	x0, [x21]
   23ea8:	add	x1, sp, #0x30
   23eac:	mov	w0, w23
   23eb0:	add	x2, sp, #0x38
   23eb4:	bl	23a98 <__sanitizer_sandbox_on_notify@@Base+0x450>
   23eb8:	ldp	x0, x1, [sp, #48]
   23ebc:	str	x1, [x20]
   23ec0:	sub	x0, x0, x1
   23ec4:	str	x0, [x22]
   23ec8:	cbnz	w23, 23f14 <__sanitizer_sandbox_on_notify@@Base+0x8cc>
   23ecc:	ldr	x3, [x19]
   23ed0:	ldr	x4, [x20]
   23ed4:	cmp	x3, x4
   23ed8:	b.ls	23f14 <__sanitizer_sandbox_on_notify@@Base+0x8cc>  // b.plast
   23edc:	add	x1, x0, x4
   23ee0:	cmp	x3, x1
   23ee4:	b.cs	23f14 <__sanitizer_sandbox_on_notify@@Base+0x8cc>  // b.hs, b.nlast
   23ee8:	ldr	x2, [x21]
   23eec:	add	x3, x3, x2
   23ef0:	cmp	x4, x3
   23ef4:	b.cs	23f24 <__sanitizer_sandbox_on_notify@@Base+0x8dc>  // b.hs, b.nlast
   23ef8:	cmp	x1, x3
   23efc:	b.cc	23f3c <__sanitizer_sandbox_on_notify@@Base+0x8f4>  // b.lo, b.ul, b.last
   23f00:	sub	x0, x0, x2
   23f04:	str	x0, [x22]
   23f08:	ldr	x1, [x20]
   23f0c:	add	x0, x1, x0
   23f10:	str	x0, [x19]
   23f14:	ldp	x21, x22, [sp, #16]
   23f18:	ldp	x23, x30, [sp, #32]
   23f1c:	ldp	x19, x20, [sp], #64
   23f20:	ret
   23f24:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   23f28:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   23f2c:	add	x2, x2, #0xe08
   23f30:	add	x0, x0, #0xca8
   23f34:	mov	w1, #0x202                 	// #514
   23f38:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   23f3c:	mov	x4, x1
   23f40:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   23f44:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   23f48:	add	x2, x2, #0xe38
   23f4c:	add	x0, x0, #0xca8
   23f50:	mov	w1, #0x203                 	// #515
   23f54:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   23f58:	stp	x19, x20, [sp, #-48]!
   23f5c:	mov	x19, x0
   23f60:	ldrb	w0, [x0, #24]
   23f64:	stp	x21, x30, [sp, #16]
   23f68:	cbz	w0, 23fd8 <__sanitizer_sandbox_on_notify@@Base+0x990>
   23f6c:	ldr	x20, [x19, #16]
   23f70:	ldr	x0, [x19]
   23f74:	add	x20, x20, x20, lsl #3
   23f78:	mov	x21, x0
   23f7c:	add	x20, x0, x20, lsl #3
   23f80:	cmp	x0, x20
   23f84:	b.eq	23f9c <__sanitizer_sandbox_on_notify@@Base+0x954>  // b.none
   23f88:	mov	x0, x21
   23f8c:	add	x21, x21, #0x48
   23f90:	bl	14a20 <_ZdaPvRKSt9nothrow_t@@Base+0x2ca0>
   23f94:	cmp	x20, x21
   23f98:	b.ne	23f88 <__sanitizer_sandbox_on_notify@@Base+0x940>  // b.any
   23f9c:	str	xzr, [x19, #16]
   23fa0:	mov	w2, #0x1                   	// #1
   23fa4:	strb	w2, [x19, #24]
   23fa8:	add	x1, sp, #0x20
   23fac:	adrp	x0, 23000 <__sanitizer_on_print@@Base+0x36e0>
   23fb0:	add	x0, x0, #0x688
   23fb4:	str	x19, [sp, #32]
   23fb8:	strb	w2, [sp, #40]
   23fbc:	stur	wzr, [sp, #41]
   23fc0:	sturh	wzr, [sp, #45]
   23fc4:	strb	wzr, [sp, #47]
   23fc8:	bl	63a0 <dl_iterate_phdr@plt>
   23fcc:	ldp	x21, x30, [sp, #16]
   23fd0:	ldp	x19, x20, [sp], #48
   23fd4:	ret
   23fd8:	adrp	x20, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   23fdc:	stp	xzr, xzr, [x19, #8]
   23fe0:	ldr	x20, [x20, #4016]
   23fe4:	ldr	x0, [x20]
   23fe8:	str	xzr, [x19]
   23fec:	cbz	x0, 24048 <__sanitizer_sandbox_on_notify@@Base+0xa00>
   23ff0:	sub	x1, x0, #0x1
   23ff4:	tst	x1, x0
   23ff8:	b.ne	24054 <__sanitizer_sandbox_on_notify@@Base+0xa0c>  // b.any
   23ffc:	add	x20, x0, #0x11f, lsl #12
   24000:	neg	x0, x0
   24004:	add	x20, x20, #0xfff
   24008:	mov	w2, #0x0                   	// #0
   2400c:	and	x20, x20, x0
   24010:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   24014:	mov	x0, x20
   24018:	add	x1, x1, #0xc10
   2401c:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   24020:	mov	x21, x0
   24024:	ldr	x2, [x19, #16]
   24028:	ldr	x1, [x19]
   2402c:	add	x2, x2, x2, lsl #3
   24030:	lsl	x2, x2, #3
   24034:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   24038:	ldp	x0, x1, [x19]
   2403c:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   24040:	stp	x21, x20, [x19]
   24044:	b	23fa0 <__sanitizer_sandbox_on_notify@@Base+0x958>
   24048:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   2404c:	str	x0, [x20]
   24050:	b	23ff0 <__sanitizer_sandbox_on_notify@@Base+0x9a8>
   24054:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   24058:	add	x0, x0, #0xbf8
   2405c:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   24060:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   24064:	nop
   24068:	stp	x19, x20, [sp, #-64]!
   2406c:	mov	x19, x0
   24070:	ldrb	w0, [x0, #24]
   24074:	stp	x21, x30, [sp, #16]
   24078:	cbz	w0, 240e4 <__sanitizer_sandbox_on_notify@@Base+0xa9c>
   2407c:	ldr	x20, [x19, #16]
   24080:	ldr	x0, [x19]
   24084:	add	x20, x20, x20, lsl #3
   24088:	mov	x21, x0
   2408c:	add	x20, x0, x20, lsl #3
   24090:	cmp	x0, x20
   24094:	b.eq	240ac <__sanitizer_sandbox_on_notify@@Base+0xa64>  // b.none
   24098:	mov	x0, x21
   2409c:	add	x21, x21, #0x48
   240a0:	bl	14a20 <_ZdaPvRKSt9nothrow_t@@Base+0x2ca0>
   240a4:	cmp	x20, x21
   240a8:	b.ne	24098 <__sanitizer_sandbox_on_notify@@Base+0xa50>  // b.any
   240ac:	str	xzr, [x19, #16]
   240b0:	mov	w1, #0x1                   	// #1
   240b4:	strb	w1, [x19, #24]
   240b8:	add	x20, sp, #0x20
   240bc:	mov	x0, x20
   240c0:	bl	1ffa0 <__sanitizer_on_print@@Base+0x680>
   240c4:	mov	x1, x19
   240c8:	mov	x0, x20
   240cc:	bl	201f0 <__sanitizer_on_print@@Base+0x8d0>
   240d0:	mov	x0, x20
   240d4:	bl	200d0 <__sanitizer_on_print@@Base+0x7b0>
   240d8:	ldp	x21, x30, [sp, #16]
   240dc:	ldp	x19, x20, [sp], #64
   240e0:	ret
   240e4:	adrp	x20, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   240e8:	stp	xzr, xzr, [x19, #8]
   240ec:	ldr	x20, [x20, #4016]
   240f0:	ldr	x0, [x20]
   240f4:	str	xzr, [x19]
   240f8:	cbz	x0, 24154 <__sanitizer_sandbox_on_notify@@Base+0xb0c>
   240fc:	sub	x1, x0, #0x1
   24100:	tst	x1, x0
   24104:	b.ne	24160 <__sanitizer_sandbox_on_notify@@Base+0xb18>  // b.any
   24108:	add	x20, x0, #0x11f, lsl #12
   2410c:	neg	x0, x0
   24110:	add	x20, x20, #0xfff
   24114:	mov	w2, #0x0                   	// #0
   24118:	and	x20, x20, x0
   2411c:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   24120:	mov	x0, x20
   24124:	add	x1, x1, #0xc10
   24128:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   2412c:	mov	x21, x0
   24130:	ldr	x2, [x19, #16]
   24134:	ldr	x1, [x19]
   24138:	add	x2, x2, x2, lsl #3
   2413c:	lsl	x2, x2, #3
   24140:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   24144:	ldp	x0, x1, [x19]
   24148:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   2414c:	stp	x21, x20, [x19]
   24150:	b	240b0 <__sanitizer_sandbox_on_notify@@Base+0xa68>
   24154:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   24158:	str	x0, [x20]
   2415c:	b	240fc <__sanitizer_sandbox_on_notify@@Base+0xab4>
   24160:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   24164:	add	x0, x0, #0xbf8
   24168:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   2416c:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   24170:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   24174:	stp	x19, x20, [sp, #-176]!
   24178:	ldr	x0, [x0, #4056]
   2417c:	ldrb	w0, [x0, #168]
   24180:	str	x30, [sp, #16]
   24184:	cbnz	w0, 241b0 <__sanitizer_sandbox_on_notify@@Base+0xb68>
   24188:	add	x1, sp, #0x20
   2418c:	bl	6350 <getrusage@plt>
   24190:	mov	w1, w0
   24194:	mov	x0, #0x0                   	// #0
   24198:	cbnz	w1, 241a4 <__sanitizer_sandbox_on_notify@@Base+0xb5c>
   2419c:	ldr	x0, [sp, #64]
   241a0:	lsl	x0, x0, #10
   241a4:	ldr	x30, [sp, #16]
   241a8:	ldp	x19, x20, [sp], #176
   241ac:	ret
   241b0:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   241b4:	mov	x2, #0x0                   	// #0
   241b8:	add	x0, x0, #0xe70
   241bc:	mov	w1, #0x0                   	// #0
   241c0:	bl	1dba0 <__sanitizer_set_report_fd@@Base+0x5d20>
   241c4:	mov	w20, w0
   241c8:	cmn	w0, #0x1
   241cc:	b.eq	2429c <__sanitizer_sandbox_on_notify@@Base+0xc54>  // b.none
   241d0:	add	x19, sp, #0x20
   241d4:	mov	x2, #0x3f                  	// #63
   241d8:	mov	x1, x19
   241dc:	bl	1c220 <__sanitizer_set_report_fd@@Base+0x43a0>
   241e0:	mov	x1, x0
   241e4:	mov	w0, w20
   241e8:	mov	x20, x1
   241ec:	bl	1c1d8 <__sanitizer_set_report_fd@@Base+0x4358>
   241f0:	cmp	x20, #0x0
   241f4:	mov	x0, #0x0                   	// #0
   241f8:	b.le	241a4 <__sanitizer_sandbox_on_notify@@Base+0xb5c>
   241fc:	strb	wzr, [x19, x20]
   24200:	mov	x1, x19
   24204:	ldrb	w2, [sp, #32]
   24208:	sub	w0, w2, #0x30
   2420c:	and	w0, w0, #0xff
   24210:	cmp	w0, #0x9
   24214:	b.hi	2422c <__sanitizer_sandbox_on_notify@@Base+0xbe4>  // b.pmore
   24218:	ldrb	w2, [x1, #1]!
   2421c:	sub	w0, w2, #0x30
   24220:	and	w0, w0, #0xff
   24224:	cmp	w0, #0x9
   24228:	b.ls	24218 <__sanitizer_sandbox_on_notify@@Base+0xbd0>  // b.plast
   2422c:	cbz	w2, 242d0 <__sanitizer_sandbox_on_notify@@Base+0xc88>
   24230:	ldrb	w2, [x1, #1]!
   24234:	sub	w0, w2, #0x30
   24238:	cmp	w2, #0x0
   2423c:	and	w0, w0, #0xff
   24240:	ccmp	w0, #0x9, #0x0, ne  // ne = any
   24244:	b.hi	24230 <__sanitizer_sandbox_on_notify@@Base+0xbe8>  // b.pmore
   24248:	cmp	w0, #0x9
   2424c:	mov	x19, #0x0                   	// #0
   24250:	b.hi	2427c <__sanitizer_sandbox_on_notify@@Base+0xc34>  // b.pmore
   24254:	nop
   24258:	and	x3, x2, #0xff
   2425c:	ldrb	w2, [x1, #1]!
   24260:	add	x19, x19, x19, lsl #2
   24264:	sub	w0, w2, #0x30
   24268:	add	x19, x3, x19, lsl #1
   2426c:	and	w0, w0, #0xff
   24270:	sub	x19, x19, #0x30
   24274:	cmp	w0, #0x9
   24278:	b.ls	24258 <__sanitizer_sandbox_on_notify@@Base+0xc10>  // b.plast
   2427c:	adrp	x20, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   24280:	ldr	x20, [x20, #4016]
   24284:	ldr	x0, [x20]
   24288:	cbz	x0, 242c0 <__sanitizer_sandbox_on_notify@@Base+0xc78>
   2428c:	mul	x0, x19, x0
   24290:	ldr	x30, [sp, #16]
   24294:	ldp	x19, x20, [sp], #176
   24298:	ret
   2429c:	add	x1, sp, #0x20
   242a0:	mov	w0, #0x0                   	// #0
   242a4:	bl	6350 <getrusage@plt>
   242a8:	mov	w1, w0
   242ac:	mov	x0, #0x0                   	// #0
   242b0:	cbnz	w1, 241a4 <__sanitizer_sandbox_on_notify@@Base+0xb5c>
   242b4:	ldr	x0, [sp, #64]
   242b8:	lsl	x0, x0, #10
   242bc:	b	241a4 <__sanitizer_sandbox_on_notify@@Base+0xb5c>
   242c0:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   242c4:	str	x0, [x20]
   242c8:	mul	x0, x19, x0
   242cc:	b	24290 <__sanitizer_sandbox_on_notify@@Base+0xc48>
   242d0:	mov	x19, #0x0                   	// #0
   242d4:	b	2427c <__sanitizer_sandbox_on_notify@@Base+0xc34>
   242d8:	stp	x19, x30, [sp, #-144]!
   242dc:	mov	x1, #0x80                  	// #128
   242e0:	mov	w0, #0x0                   	// #0
   242e4:	add	x19, sp, #0x10
   242e8:	mov	x2, x19
   242ec:	bl	6200 <sched_getaffinity@plt>
   242f0:	cbnz	w0, 24308 <__sanitizer_sandbox_on_notify@@Base+0xcc0>
   242f4:	mov	x1, x19
   242f8:	mov	x0, #0x80                  	// #128
   242fc:	bl	64d0 <__sched_cpucount@plt>
   24300:	ldp	x19, x30, [sp], #144
   24304:	ret
   24308:	sxtw	x3, w0
   2430c:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   24310:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   24314:	add	x2, x2, #0xe88
   24318:	add	x0, x0, #0xca8
   2431c:	mov	x4, #0x0                   	// #0
   24320:	mov	w1, #0x2b9                 	// #697
   24324:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   24328:	ret
   2432c:	nop
   24330:	mov	x2, x0
   24334:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   24338:	mov	w0, #0x6                   	// #6
   2433c:	add	x1, x1, #0xcb8
   24340:	b	6510 <syslog@plt>
   24344:	nop
   24348:	ret
   2434c:	nop
   24350:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   24354:	ldr	x1, [x1, #4056]
   24358:	ldrb	w1, [x1, #49]
   2435c:	cbnz	w1, 24364 <__sanitizer_sandbox_on_notify@@Base+0xd1c>
   24360:	ret
   24364:	b	23430 <__sanitizer_set_death_callback@@Base+0x258>
   24368:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2436c:	str	x30, [sp, #-32]!
   24370:	ldr	x0, [x0, #4000]
   24374:	cbz	x0, 24388 <__sanitizer_sandbox_on_notify@@Base+0xd40>
   24378:	ldr	x0, [x0]
   2437c:	cbz	x0, 24388 <__sanitizer_sandbox_on_notify@@Base+0xd40>
   24380:	ldrb	w0, [x0]
   24384:	cbnz	w0, 243ac <__sanitizer_sandbox_on_notify@@Base+0xd64>
   24388:	add	x1, sp, #0x10
   2438c:	mov	w0, #0x1                   	// #1
   24390:	bl	1c4d0 <__sanitizer_set_report_fd@@Base+0x4650>
   24394:	ldp	x2, x1, [sp, #16]
   24398:	mov	x0, #0xca00                	// #51712
   2439c:	movk	x0, #0x3b9a, lsl #16
   243a0:	ldr	x30, [sp], #32
   243a4:	madd	x0, x2, x0, x1
   243a8:	ret
   243ac:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   243b0:	add	x1, sp, #0x10
   243b4:	ldr	x0, [x0, #3792]
   243b8:	cbz	x0, 243dc <__sanitizer_sandbox_on_notify@@Base+0xd94>
   243bc:	mov	w0, #0x1                   	// #1
   243c0:	bl	6370 <real_clock_gettime@plt>
   243c4:	ldp	x2, x1, [sp, #16]
   243c8:	mov	x0, #0xca00                	// #51712
   243cc:	movk	x0, #0x3b9a, lsl #16
   243d0:	ldr	x30, [sp], #32
   243d4:	madd	x0, x2, x0, x1
   243d8:	ret
   243dc:	mov	w0, #0x1                   	// #1
   243e0:	bl	63e0 <clock_gettime@plt>
   243e4:	b	24394 <__sanitizer_sandbox_on_notify@@Base+0xd4c>
   243e8:	stp	x19, x20, [sp, #-48]!
   243ec:	mov	x0, #0x1f                  	// #31
   243f0:	str	x30, [sp, #16]
   243f4:	bl	6570 <getauxval@plt>
   243f8:	mov	x19, x0
   243fc:	bl	1c5e8 <__sanitizer_set_report_fd@@Base+0x4768>
   24400:	mov	x20, x0
   24404:	bl	1c630 <__sanitizer_set_report_fd@@Base+0x47b0>
   24408:	mov	x2, x0
   2440c:	mov	x1, x20
   24410:	mov	x0, x19
   24414:	bl	1c3f0 <__sanitizer_set_report_fd@@Base+0x4570>
   24418:	add	x1, sp, #0x2c
   2441c:	bl	1c178 <__sanitizer_set_report_fd@@Base+0x42f8>
   24420:	tst	w0, #0xff
   24424:	b.eq	2443c <__sanitizer_sandbox_on_notify@@Base+0xdf4>  // b.none
   24428:	ldr	w1, [sp, #44]
   2442c:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   24430:	add	x0, x0, #0xef8
   24434:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   24438:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   2443c:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   24440:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   24444:	add	x2, x2, #0xec8
   24448:	add	x0, x0, #0xca8
   2444c:	mov	x4, #0x1                   	// #1
   24450:	mov	x3, #0x0                   	// #0
   24454:	mov	w1, #0x342                 	// #834
   24458:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   2445c:	nop
   24460:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   24464:	stp	x19, x30, [sp, #-16]!
   24468:	ldr	x0, [x0, #4024]
   2446c:	ldr	x19, [x0]
   24470:	bl	64f0 <__errno_location@plt>
   24474:	mov	x2, x0
   24478:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   2447c:	mov	x1, x19
   24480:	add	x0, x0, #0xf18
   24484:	ldr	w2, [x2]
   24488:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   2448c:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   24490:	stp	x19, x20, [sp, #-192]!
   24494:	mov	x19, x1
   24498:	stp	x21, x30, [sp, #16]
   2449c:	mov	w21, w0
   244a0:	bl	1d750 <__sanitizer_set_report_fd@@Base+0x58d0>
   244a4:	cbnz	w0, 244b4 <__sanitizer_sandbox_on_notify@@Base+0xe6c>
   244a8:	ldp	x21, x30, [sp, #16]
   244ac:	ldp	x19, x20, [sp], #192
   244b0:	ret
   244b4:	add	x20, sp, #0x28
   244b8:	mov	x2, #0x98                  	// #152
   244bc:	mov	w1, #0x0                   	// #0
   244c0:	mov	x0, x20
   244c4:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   244c8:	str	x19, [sp, #40]
   244cc:	adrp	x4, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   244d0:	mov	w5, #0x4                   	// #4
   244d4:	mov	w3, #0x4                   	// #4
   244d8:	movk	w5, #0x4000, lsl #16
   244dc:	ldr	x4, [x4, #4056]
   244e0:	movk	w3, #0x4800, lsl #16
   244e4:	mov	x1, x20
   244e8:	mov	w0, w21
   244ec:	mov	x2, #0x0                   	// #0
   244f0:	ldrb	w4, [x4, #97]
   244f4:	cmp	w4, #0x0
   244f8:	csel	w3, w3, w5, ne  // ne = any
   244fc:	str	w3, [sp, #176]
   24500:	bl	23a80 <__sanitizer_sandbox_on_notify@@Base+0x438>
   24504:	sxtw	x4, w0
   24508:	cbnz	w0, 24538 <__sanitizer_sandbox_on_notify@@Base+0xef0>
   2450c:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   24510:	ldr	x0, [x0, #3816]
   24514:	ldr	w0, [x0]
   24518:	cbz	w0, 244a8 <__sanitizer_sandbox_on_notify@@Base+0xe60>
   2451c:	mov	w1, w21
   24520:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   24524:	add	x0, x0, #0xfe0
   24528:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   2452c:	ldp	x21, x30, [sp, #16]
   24530:	ldp	x19, x20, [sp], #192
   24534:	ret
   24538:	adrp	x2, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   2453c:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   24540:	add	x2, x2, #0xf40
   24544:	add	x0, x0, #0xf80
   24548:	mov	x3, #0x0                   	// #0
   2454c:	mov	w1, #0xd2                  	// #210
   24550:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   24554:	nop
   24558:	b	65f0 <getuid@plt>
   2455c:	nop
   24560:	b	65e0 <pthread_self@plt>
   24564:	nop
   24568:	stp	x19, x20, [sp, #-32]!
   2456c:	mov	x19, x0
   24570:	mov	x20, x1
   24574:	stp	x21, x30, [sp, #16]
   24578:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2457c:	ldr	x21, [x21, #4016]
   24580:	ldr	x2, [x21]
   24584:	cbz	x2, 245b8 <__sanitizer_sandbox_on_notify@@Base+0xf70>
   24588:	sub	x0, x2, #0x1
   2458c:	tst	x2, x0
   24590:	b.ne	245d0 <__sanitizer_sandbox_on_notify@@Base+0xf88>  // b.any
   24594:	neg	x2, x2
   24598:	add	x0, x19, x0
   2459c:	and	x20, x20, x2
   245a0:	and	x0, x0, x2
   245a4:	cmp	x20, x0
   245a8:	b.hi	245e0 <__sanitizer_sandbox_on_notify@@Base+0xf98>  // b.pmore
   245ac:	ldp	x21, x30, [sp, #16]
   245b0:	ldp	x19, x20, [sp], #32
   245b4:	ret
   245b8:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   245bc:	mov	x2, x0
   245c0:	str	x0, [x21]
   245c4:	sub	x0, x2, #0x1
   245c8:	tst	x2, x0
   245cc:	b.eq	24594 <__sanitizer_sandbox_on_notify@@Base+0xf4c>  // b.none
   245d0:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   245d4:	add	x0, x0, #0xbf8
   245d8:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   245dc:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   245e0:	sub	x1, x20, x0
   245e4:	mov	w2, #0x4                   	// #4
   245e8:	ldp	x21, x30, [sp, #16]
   245ec:	ldp	x19, x20, [sp], #32
   245f0:	b	64a0 <madvise@plt>
   245f4:	nop
   245f8:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   245fc:	ldr	x2, [x2, #4056]
   24600:	ldrb	w2, [x2, #208]
   24604:	cbz	w2, 24610 <__sanitizer_sandbox_on_notify@@Base+0xfc8>
   24608:	mov	w2, #0xf                   	// #15
   2460c:	b	64a0 <madvise@plt>
   24610:	mov	w2, #0xe                   	// #14
   24614:	b	64a0 <madvise@plt>
   24618:	str	x30, [sp, #-16]!
   2461c:	mov	w2, #0x10                  	// #16
   24620:	bl	64a0 <madvise@plt>
   24624:	cmp	w0, #0x0
   24628:	cset	w0, eq  // eq = none
   2462c:	ldr	x30, [sp], #16
   24630:	ret
   24634:	nop
   24638:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2463c:	ldr	x0, [x0, #4056]
   24640:	ldrb	w0, [x0, #186]
   24644:	cbnz	w0, 2464c <__sanitizer_sandbox_on_notify@@Base+0x1004>
   24648:	ret
   2464c:	stp	x19, x30, [sp, #-32]!
   24650:	mov	w0, #0x4                   	// #4
   24654:	add	x19, sp, #0x10
   24658:	mov	x1, x19
   2465c:	bl	6610 <getrlimit@plt>
   24660:	cbnz	w0, 24680 <__sanitizer_sandbox_on_notify@@Base+0x1038>
   24664:	mov	x1, x19
   24668:	mov	w0, #0x4                   	// #4
   2466c:	str	xzr, [sp, #16]
   24670:	bl	6560 <setrlimit@plt>
   24674:	cbnz	w0, 246ac <__sanitizer_sandbox_on_notify@@Base+0x1064>
   24678:	ldp	x19, x30, [sp], #32
   2467c:	ret
   24680:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   24684:	ldr	x0, [x0, #4024]
   24688:	ldr	x19, [x0]
   2468c:	bl	64f0 <__errno_location@plt>
   24690:	mov	x2, x0
   24694:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   24698:	mov	x1, x19
   2469c:	add	x0, x0, #0x8
   246a0:	ldr	w2, [x2]
   246a4:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   246a8:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   246ac:	bl	24460 <__sanitizer_sandbox_on_notify@@Base+0xe18>
   246b0:	str	x30, [sp, #-32]!
   246b4:	mov	w0, #0x3                   	// #3
   246b8:	add	x1, sp, #0x10
   246bc:	bl	6610 <getrlimit@plt>
   246c0:	cbnz	w0, 246d8 <__sanitizer_sandbox_on_notify@@Base+0x1090>
   246c4:	ldr	x0, [sp, #16]
   246c8:	ldr	x30, [sp], #32
   246cc:	cmn	x0, #0x1
   246d0:	cset	w0, eq  // eq = none
   246d4:	ret
   246d8:	sxtw	x4, w0
   246dc:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   246e0:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   246e4:	add	x2, x2, #0x30
   246e8:	add	x0, x0, #0xf80
   246ec:	mov	x3, #0x0                   	// #0
   246f0:	mov	w1, #0x5c                  	// #92
   246f4:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   246f8:	stp	x19, x20, [sp, #-48]!
   246fc:	mov	x19, x0
   24700:	mov	w0, #0x3                   	// #3
   24704:	add	x20, sp, #0x20
   24708:	str	x30, [sp, #16]
   2470c:	mov	x1, x20
   24710:	bl	6610 <getrlimit@plt>
   24714:	cbnz	w0, 24794 <__sanitizer_sandbox_on_notify@@Base+0x114c>
   24718:	mov	x1, x20
   2471c:	mov	w0, #0x3                   	// #3
   24720:	str	x19, [sp, #32]
   24724:	bl	6560 <setrlimit@plt>
   24728:	cbnz	w0, 247c0 <__sanitizer_sandbox_on_notify@@Base+0x1178>
   2472c:	mov	x1, x20
   24730:	mov	w0, #0x3                   	// #3
   24734:	bl	6610 <getrlimit@plt>
   24738:	sxtw	x4, w0
   2473c:	cbnz	w0, 24758 <__sanitizer_sandbox_on_notify@@Base+0x1110>
   24740:	ldr	x0, [sp, #32]
   24744:	cmn	x0, #0x1
   24748:	b.eq	24774 <__sanitizer_sandbox_on_notify@@Base+0x112c>  // b.none
   2474c:	ldr	x30, [sp, #16]
   24750:	ldp	x19, x20, [sp], #48
   24754:	ret
   24758:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   2475c:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   24760:	add	x2, x2, #0x30
   24764:	add	x0, x0, #0xf80
   24768:	mov	x3, #0x0                   	// #0
   2476c:	mov	w1, #0x5c                  	// #92
   24770:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   24774:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   24778:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   2477c:	add	x2, x2, #0x58
   24780:	add	x0, x0, #0xf80
   24784:	mov	x4, #0x0                   	// #0
   24788:	mov	x3, #0x0                   	// #0
   2478c:	mov	w1, #0x7a                  	// #122
   24790:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   24794:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   24798:	ldr	x0, [x0, #4024]
   2479c:	ldr	x19, [x0]
   247a0:	bl	64f0 <__errno_location@plt>
   247a4:	mov	x2, x0
   247a8:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   247ac:	mov	x1, x19
   247b0:	add	x0, x0, #0x8
   247b4:	ldr	w2, [x2]
   247b8:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   247bc:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   247c0:	bl	24460 <__sanitizer_sandbox_on_notify@@Base+0xe18>
   247c4:	nop
   247c8:	str	x30, [sp, #-32]!
   247cc:	mov	w0, #0x9                   	// #9
   247d0:	add	x1, sp, #0x10
   247d4:	bl	6610 <getrlimit@plt>
   247d8:	cbnz	w0, 247f0 <__sanitizer_sandbox_on_notify@@Base+0x11a8>
   247dc:	ldr	x0, [sp, #16]
   247e0:	ldr	x30, [sp], #32
   247e4:	cmn	x0, #0x1
   247e8:	cset	w0, eq  // eq = none
   247ec:	ret
   247f0:	sxtw	x4, w0
   247f4:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   247f8:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   247fc:	add	x2, x2, #0x30
   24800:	add	x0, x0, #0xf80
   24804:	mov	x3, #0x0                   	// #0
   24808:	mov	w1, #0x5c                  	// #92
   2480c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   24810:	stp	x19, x30, [sp, #-32]!
   24814:	mov	w0, #0x9                   	// #9
   24818:	add	x19, sp, #0x10
   2481c:	mov	x1, x19
   24820:	bl	6610 <getrlimit@plt>
   24824:	cbnz	w0, 248a4 <__sanitizer_sandbox_on_notify@@Base+0x125c>
   24828:	mov	x2, #0xffffffffffffffff    	// #-1
   2482c:	mov	x1, x19
   24830:	mov	w0, #0x9                   	// #9
   24834:	str	x2, [sp, #16]
   24838:	bl	6560 <setrlimit@plt>
   2483c:	cbnz	w0, 248d0 <__sanitizer_sandbox_on_notify@@Base+0x1288>
   24840:	mov	x1, x19
   24844:	mov	w0, #0x9                   	// #9
   24848:	bl	6610 <getrlimit@plt>
   2484c:	sxtw	x4, w0
   24850:	cbnz	w0, 24868 <__sanitizer_sandbox_on_notify@@Base+0x1220>
   24854:	ldr	x0, [sp, #16]
   24858:	cmn	x0, #0x1
   2485c:	b.ne	24884 <__sanitizer_sandbox_on_notify@@Base+0x123c>  // b.any
   24860:	ldp	x19, x30, [sp], #32
   24864:	ret
   24868:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   2486c:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   24870:	add	x2, x2, #0x30
   24874:	add	x0, x0, #0xf80
   24878:	mov	x3, #0x0                   	// #0
   2487c:	mov	w1, #0x5c                  	// #92
   24880:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   24884:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   24888:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   2488c:	add	x2, x2, #0x80
   24890:	add	x0, x0, #0xf80
   24894:	mov	x4, #0x0                   	// #0
   24898:	mov	x3, #0x0                   	// #0
   2489c:	mov	w1, #0x84                  	// #132
   248a0:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   248a4:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   248a8:	ldr	x0, [x0, #4024]
   248ac:	ldr	x19, [x0]
   248b0:	bl	64f0 <__errno_location@plt>
   248b4:	mov	x2, x0
   248b8:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   248bc:	mov	x1, x19
   248c0:	add	x0, x0, #0x8
   248c4:	ldr	w2, [x2]
   248c8:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   248cc:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   248d0:	bl	24460 <__sanitizer_sandbox_on_notify@@Base+0xe18>
   248d4:	nop
   248d8:	b	62d0 <sleep@plt>
   248dc:	nop
   248e0:	mov	w1, #0x3e8                 	// #1000
   248e4:	mul	w0, w0, w1
   248e8:	b	64b0 <usleep@plt>
   248ec:	nop
   248f0:	stp	x19, x30, [sp, #-176]!
   248f4:	mov	w0, #0x6                   	// #6
   248f8:	bl	1d750 <__sanitizer_set_report_fd@@Base+0x58d0>
   248fc:	cbnz	w0, 24904 <__sanitizer_sandbox_on_notify@@Base+0x12bc>
   24900:	bl	65a0 <abort@plt>
   24904:	add	x19, sp, #0x18
   24908:	mov	x2, #0x98                  	// #152
   2490c:	mov	w1, #0x0                   	// #0
   24910:	mov	x0, x19
   24914:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   24918:	str	xzr, [sp, #24]
   2491c:	mov	x1, x19
   24920:	mov	x2, #0x0                   	// #0
   24924:	mov	w0, #0x6                   	// #6
   24928:	bl	23a80 <__sanitizer_sandbox_on_notify@@Base+0x438>
   2492c:	bl	65a0 <abort@plt>
   24930:	b	34200 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x598>
   24934:	nop
   24938:	str	x30, [sp, #-16]!
   2493c:	bl	6310 <isatty@plt>
   24940:	cmp	w0, #0x0
   24944:	cset	w0, ne  // ne = any
   24948:	ldr	x30, [sp], #16
   2494c:	ret
   24950:	str	x30, [sp, #-64]!
   24954:	mov	x0, #0x0                   	// #0
   24958:	add	x1, sp, #0x10
   2495c:	bl	6620 <sigaltstack@plt>
   24960:	cbnz	w0, 249cc <__sanitizer_sandbox_on_notify@@Base+0x1384>
   24964:	ldr	w0, [sp, #24]
   24968:	tbnz	w0, #1, 24974 <__sanitizer_sandbox_on_notify@@Base+0x132c>
   2496c:	ldr	x30, [sp], #64
   24970:	ret
   24974:	mov	w2, #0x0                   	// #0
   24978:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   2497c:	mov	x0, #0x10000               	// #65536
   24980:	add	x1, x1, #0xd8
   24984:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   24988:	mov	x3, x0
   2498c:	mov	x2, #0x10000               	// #65536
   24990:	add	x0, sp, #0x28
   24994:	mov	x1, #0x0                   	// #0
   24998:	str	x3, [sp, #40]
   2499c:	str	wzr, [sp, #48]
   249a0:	str	x2, [sp, #56]
   249a4:	bl	6620 <sigaltstack@plt>
   249a8:	sxtw	x4, w0
   249ac:	cbz	w0, 2496c <__sanitizer_sandbox_on_notify@@Base+0x1324>
   249b0:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   249b4:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   249b8:	add	x2, x2, #0xf0
   249bc:	add	x0, x0, #0xf80
   249c0:	mov	x3, #0x0                   	// #0
   249c4:	mov	w1, #0xbb                  	// #187
   249c8:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   249cc:	sxtw	x4, w0
   249d0:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   249d4:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   249d8:	add	x2, x2, #0xa8
   249dc:	add	x0, x0, #0xf80
   249e0:	mov	x3, #0x0                   	// #0
   249e4:	mov	w1, #0xb0                  	// #176
   249e8:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   249ec:	nop
   249f0:	mov	w3, #0x2                   	// #2
   249f4:	mov	x2, #0x10000               	// #65536
   249f8:	str	x30, [sp, #-64]!
   249fc:	add	x1, sp, #0x28
   24a00:	add	x0, sp, #0x10
   24a04:	str	xzr, [sp, #16]
   24a08:	str	w3, [sp, #24]
   24a0c:	str	x2, [sp, #32]
   24a10:	bl	6620 <sigaltstack@plt>
   24a14:	cbnz	w0, 24a2c <__sanitizer_sandbox_on_notify@@Base+0x13e4>
   24a18:	ldr	x0, [sp, #40]
   24a1c:	ldr	x1, [sp, #56]
   24a20:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   24a24:	ldr	x30, [sp], #64
   24a28:	ret
   24a2c:	sxtw	x4, w0
   24a30:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   24a34:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   24a38:	add	x2, x2, #0x120
   24a3c:	add	x0, x0, #0xf80
   24a40:	mov	x3, #0x0                   	// #0
   24a44:	mov	w1, #0xc3                  	// #195
   24a48:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   24a4c:	nop
   24a50:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   24a54:	stp	x19, x30, [sp, #-16]!
   24a58:	mov	x19, x0
   24a5c:	ldr	x1, [x1, #4056]
   24a60:	ldrb	w0, [x1, #97]
   24a64:	cbnz	w0, 24ab4 <__sanitizer_sandbox_on_notify@@Base+0x146c>
   24a68:	mov	x1, x19
   24a6c:	mov	w0, #0xb                   	// #11
   24a70:	bl	24490 <__sanitizer_sandbox_on_notify@@Base+0xe48>
   24a74:	mov	x1, x19
   24a78:	mov	w0, #0x7                   	// #7
   24a7c:	bl	24490 <__sanitizer_sandbox_on_notify@@Base+0xe48>
   24a80:	mov	x1, x19
   24a84:	mov	w0, #0x6                   	// #6
   24a88:	bl	24490 <__sanitizer_sandbox_on_notify@@Base+0xe48>
   24a8c:	mov	x1, x19
   24a90:	mov	w0, #0x8                   	// #8
   24a94:	bl	24490 <__sanitizer_sandbox_on_notify@@Base+0xe48>
   24a98:	mov	x1, x19
   24a9c:	mov	w0, #0x4                   	// #4
   24aa0:	bl	24490 <__sanitizer_sandbox_on_notify@@Base+0xe48>
   24aa4:	mov	x1, x19
   24aa8:	mov	w0, #0x5                   	// #5
   24aac:	ldp	x19, x30, [sp], #16
   24ab0:	b	24490 <__sanitizer_sandbox_on_notify@@Base+0xe48>
   24ab4:	bl	24950 <__sanitizer_sandbox_on_notify@@Base+0x1308>
   24ab8:	b	24a68 <__sanitizer_sandbox_on_notify@@Base+0x1420>
   24abc:	nop
   24ac0:	stp	x19, x20, [sp, #-32]!
   24ac4:	adrp	x20, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   24ac8:	mov	x19, x0
   24acc:	ldr	x20, [x20, #4016]
   24ad0:	stp	x21, x30, [sp, #16]
   24ad4:	ldr	x21, [x0, #16]
   24ad8:	ldr	x0, [x20]
   24adc:	cbz	x0, 24b48 <__sanitizer_sandbox_on_notify@@Base+0x1500>
   24ae0:	ldr	x1, [x19, #32]
   24ae4:	add	x21, x21, x0
   24ae8:	mov	w0, #0x0                   	// #0
   24aec:	cmp	x21, x1
   24af0:	b.ls	24b3c <__sanitizer_sandbox_on_notify@@Base+0x14f4>  // b.plast
   24af4:	mov	x2, #0xffff                	// #65535
   24af8:	add	x1, x1, x2
   24afc:	ldr	x2, [x19, #16]
   24b00:	cmp	x2, x1
   24b04:	b.cs	24b3c <__sanitizer_sandbox_on_notify@@Base+0x14f4>  // b.hs, b.nlast
   24b08:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   24b0c:	mov	w0, #0x1                   	// #1
   24b10:	ldr	x2, [x19]
   24b14:	ldr	x1, [x1, #3624]
   24b18:	ldr	w2, [x2, #8]
   24b1c:	ldr	w1, [x1]
   24b20:	cmp	w2, w1
   24b24:	b.eq	24b3c <__sanitizer_sandbox_on_notify@@Base+0x14f4>  // b.none
   24b28:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   24b2c:	ldr	x0, [x0, #3648]
   24b30:	ldr	w0, [x0]
   24b34:	cmp	w0, w2
   24b38:	cset	w0, eq  // eq = none
   24b3c:	ldp	x21, x30, [sp, #16]
   24b40:	ldp	x19, x20, [sp], #32
   24b44:	ret
   24b48:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   24b4c:	str	x0, [x20]
   24b50:	b	24ae0 <__sanitizer_sandbox_on_notify@@Base+0x1498>
   24b54:	nop
   24b58:	stp	x19, x20, [sp, #-64]!
   24b5c:	adrp	x20, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   24b60:	mov	x19, x1
   24b64:	ldr	x20, [x20, #4016]
   24b68:	stp	x21, x22, [sp, #16]
   24b6c:	mov	x21, x0
   24b70:	ldr	x4, [x20]
   24b74:	str	x30, [sp, #32]
   24b78:	cbz	x4, 24c0c <__sanitizer_sandbox_on_notify@@Base+0x15c4>
   24b7c:	add	x4, x4, x4, lsl #2
   24b80:	cmp	x19, x4, lsl #1
   24b84:	lsl	x4, x4, #1
   24b88:	b.cs	24c28 <__sanitizer_sandbox_on_notify@@Base+0x15e0>  // b.hs, b.nlast
   24b8c:	add	x0, sp, #0x38
   24b90:	mov	w22, #0x0                   	// #0
   24b94:	bl	6230 <pipe@plt>
   24b98:	mov	w20, w0
   24b9c:	cbz	w0, 24bb4 <__sanitizer_sandbox_on_notify@@Base+0x156c>
   24ba0:	mov	w0, w22
   24ba4:	ldp	x21, x22, [sp, #16]
   24ba8:	ldr	x30, [sp, #32]
   24bac:	ldp	x19, x20, [sp], #64
   24bb0:	ret
   24bb4:	ldr	w0, [sp, #60]
   24bb8:	mov	x2, x19
   24bbc:	mov	x1, x21
   24bc0:	bl	1c248 <__sanitizer_set_report_fd@@Base+0x43c8>
   24bc4:	mov	x21, x0
   24bc8:	add	x1, sp, #0x34
   24bcc:	bl	1c178 <__sanitizer_set_report_fd@@Base+0x42f8>
   24bd0:	tst	w0, #0xff
   24bd4:	b.eq	24c44 <__sanitizer_sandbox_on_notify@@Base+0x15fc>  // b.none
   24bd8:	ldrsw	x4, [sp, #52]
   24bdc:	mov	w22, w20
   24be0:	cmp	x4, #0xe
   24be4:	b.ne	24c60 <__sanitizer_sandbox_on_notify@@Base+0x1618>  // b.any
   24be8:	ldr	w0, [sp, #56]
   24bec:	bl	1c1d8 <__sanitizer_set_report_fd@@Base+0x4358>
   24bf0:	ldr	w0, [sp, #60]
   24bf4:	bl	1c1d8 <__sanitizer_set_report_fd@@Base+0x4358>
   24bf8:	mov	w0, w22
   24bfc:	ldp	x21, x22, [sp, #16]
   24c00:	ldr	x30, [sp, #32]
   24c04:	ldp	x19, x20, [sp], #64
   24c08:	ret
   24c0c:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   24c10:	mov	x4, x0
   24c14:	str	x0, [x20]
   24c18:	add	x4, x4, x4, lsl #2
   24c1c:	cmp	x19, x4, lsl #1
   24c20:	lsl	x4, x4, #1
   24c24:	b.cc	24b8c <__sanitizer_sandbox_on_notify@@Base+0x1544>  // b.lo, b.ul, b.last
   24c28:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   24c2c:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   24c30:	mov	x3, x19
   24c34:	add	x2, x2, #0x150
   24c38:	add	x0, x0, #0xf80
   24c3c:	mov	w1, #0x118                 	// #280
   24c40:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   24c44:	ldr	w0, [sp, #56]
   24c48:	cmp	x19, x21
   24c4c:	cset	w22, eq  // eq = none
   24c50:	bl	1c1d8 <__sanitizer_set_report_fd@@Base+0x4358>
   24c54:	ldr	w0, [sp, #60]
   24c58:	bl	1c1d8 <__sanitizer_set_report_fd@@Base+0x4358>
   24c5c:	b	24bf8 <__sanitizer_sandbox_on_notify@@Base+0x15b0>
   24c60:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   24c64:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   24c68:	add	x2, x2, #0x170
   24c6c:	add	x0, x0, #0xf80
   24c70:	mov	x3, #0xe                   	// #14
   24c74:	mov	w1, #0x121                 	// #289
   24c78:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   24c7c:	nop
   24c80:	b	20108 <__sanitizer_on_print@@Base+0x7e8>
   24c84:	nop
   24c88:	stp	x19, x20, [sp, #-64]!
   24c8c:	mov	x20, x0
   24c90:	mov	x19, x1
   24c94:	stp	x21, x22, [sp, #16]
   24c98:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   24c9c:	mov	x22, x2
   24ca0:	ldr	x21, [x21, #4016]
   24ca4:	ldr	x3, [x21]
   24ca8:	str	x30, [sp, #32]
   24cac:	cbz	x3, 24d10 <__sanitizer_sandbox_on_notify@@Base+0x16c8>
   24cb0:	sub	x1, x3, #0x1
   24cb4:	tst	x3, x1
   24cb8:	b.ne	24d80 <__sanitizer_sandbox_on_notify@@Base+0x1738>  // b.any
   24cbc:	neg	x3, x3
   24cc0:	add	x19, x19, x1
   24cc4:	and	x19, x19, x3
   24cc8:	mov	x4, x22
   24ccc:	and	x20, x20, x3
   24cd0:	mov	w2, #0x3                   	// #3
   24cd4:	mov	w3, #0x4032                	// #16434
   24cd8:	mov	x1, x19
   24cdc:	mov	x0, x20
   24ce0:	bl	1eee8 <__sanitizer_set_report_fd@@Base+0x7068>
   24ce4:	add	x1, sp, #0x3c
   24ce8:	bl	1c178 <__sanitizer_set_report_fd@@Base+0x42f8>
   24cec:	tst	w0, #0xff
   24cf0:	b.ne	24d44 <__sanitizer_sandbox_on_notify@@Base+0x16fc>  // b.any
   24cf4:	mov	x0, x19
   24cf8:	bl	14c60 <_ZdaPvRKSt9nothrow_t@@Base+0x2ee0>
   24cfc:	mov	w0, #0x1                   	// #1
   24d00:	ldp	x21, x22, [sp, #16]
   24d04:	ldr	x30, [sp, #32]
   24d08:	ldp	x19, x20, [sp], #64
   24d0c:	ret
   24d10:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   24d14:	str	x0, [x21]
   24d18:	sub	x1, x0, #0x1
   24d1c:	tst	x0, x1
   24d20:	b.ne	24d80 <__sanitizer_sandbox_on_notify@@Base+0x1738>  // b.any
   24d24:	add	x19, x19, x1
   24d28:	neg	x3, x0
   24d2c:	and	x19, x19, x3
   24d30:	cbnz	x0, 24cc8 <__sanitizer_sandbox_on_notify@@Base+0x1680>
   24d34:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   24d38:	neg	x3, x0
   24d3c:	str	x0, [x21]
   24d40:	b	24cc8 <__sanitizer_sandbox_on_notify@@Base+0x1680>
   24d44:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   24d48:	ldr	w5, [sp, #60]
   24d4c:	mov	x4, x20
   24d50:	mov	x3, x19
   24d54:	ldr	x1, [x1, #4024]
   24d58:	mov	x2, x19
   24d5c:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   24d60:	add	x0, x0, #0x190
   24d64:	ldr	x1, [x1]
   24d68:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   24d6c:	mov	w0, #0x0                   	// #0
   24d70:	ldp	x21, x22, [sp, #16]
   24d74:	ldr	x30, [sp, #32]
   24d78:	ldp	x19, x20, [sp], #64
   24d7c:	ret
   24d80:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   24d84:	add	x0, x0, #0xbf8
   24d88:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   24d8c:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   24d90:	stp	x19, x20, [sp, #-64]!
   24d94:	adrp	x19, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   24d98:	ldr	x19, [x19, #4016]
   24d9c:	stp	x21, x22, [sp, #16]
   24da0:	mov	x21, x0
   24da4:	stp	x23, x30, [sp, #32]
   24da8:	mov	x22, x1
   24dac:	mov	x23, x2
   24db0:	ldr	x5, [x19]
   24db4:	cbz	x5, 24e38 <__sanitizer_sandbox_on_notify@@Base+0x17f0>
   24db8:	sub	x20, x5, #0x1
   24dbc:	tst	x5, x20
   24dc0:	b.ne	24ecc <__sanitizer_sandbox_on_notify@@Base+0x1884>  // b.any
   24dc4:	neg	x5, x5
   24dc8:	add	x20, x22, x20
   24dcc:	and	x20, x20, x5
   24dd0:	mov	x4, x23
   24dd4:	and	x19, x21, x5
   24dd8:	mov	w3, #0x4032                	// #16434
   24ddc:	mov	w2, #0x3                   	// #3
   24de0:	mov	x1, x20
   24de4:	mov	x0, x19
   24de8:	bl	1eee8 <__sanitizer_set_report_fd@@Base+0x7068>
   24dec:	add	x1, sp, #0x3c
   24df0:	bl	1c178 <__sanitizer_set_report_fd@@Base+0x42f8>
   24df4:	tst	w0, #0xff
   24df8:	b.ne	24e6c <__sanitizer_sandbox_on_notify@@Base+0x1824>  // b.any
   24dfc:	mov	x0, x20
   24e00:	bl	14c60 <_ZdaPvRKSt9nothrow_t@@Base+0x2ee0>
   24e04:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   24e08:	mov	x1, x22
   24e0c:	ldr	x0, [x0, #4056]
   24e10:	ldrb	w19, [x0, #208]
   24e14:	mov	x0, x21
   24e18:	cbz	w19, 24eac <__sanitizer_sandbox_on_notify@@Base+0x1864>
   24e1c:	mov	w2, #0xf                   	// #15
   24e20:	bl	64a0 <madvise@plt>
   24e24:	mov	w0, w19
   24e28:	ldp	x21, x22, [sp, #16]
   24e2c:	ldp	x23, x30, [sp, #32]
   24e30:	ldp	x19, x20, [sp], #64
   24e34:	ret
   24e38:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   24e3c:	str	x0, [x19]
   24e40:	sub	x20, x0, #0x1
   24e44:	tst	x0, x20
   24e48:	b.ne	24ecc <__sanitizer_sandbox_on_notify@@Base+0x1884>  // b.any
   24e4c:	add	x20, x22, x20
   24e50:	neg	x5, x0
   24e54:	and	x20, x20, x5
   24e58:	cbnz	x0, 24dd0 <__sanitizer_sandbox_on_notify@@Base+0x1788>
   24e5c:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   24e60:	neg	x5, x0
   24e64:	str	x0, [x19]
   24e68:	b	24dd0 <__sanitizer_sandbox_on_notify@@Base+0x1788>
   24e6c:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   24e70:	ldr	w5, [sp, #60]
   24e74:	mov	x4, x19
   24e78:	mov	x3, x20
   24e7c:	ldr	x1, [x1, #4024]
   24e80:	mov	x2, x20
   24e84:	mov	w19, #0x0                   	// #0
   24e88:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   24e8c:	add	x0, x0, #0x190
   24e90:	ldr	x1, [x1]
   24e94:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   24e98:	mov	w0, w19
   24e9c:	ldp	x21, x22, [sp, #16]
   24ea0:	ldp	x23, x30, [sp, #32]
   24ea4:	ldp	x19, x20, [sp], #64
   24ea8:	ret
   24eac:	mov	w2, #0xe                   	// #14
   24eb0:	mov	w19, #0x1                   	// #1
   24eb4:	bl	64a0 <madvise@plt>
   24eb8:	mov	w0, w19
   24ebc:	ldp	x21, x22, [sp, #16]
   24ec0:	ldp	x23, x30, [sp, #32]
   24ec4:	ldp	x19, x20, [sp], #64
   24ec8:	ret
   24ecc:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   24ed0:	add	x0, x0, #0xbf8
   24ed4:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   24ed8:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   24edc:	nop
   24ee0:	stp	x19, x20, [sp, #-32]!
   24ee4:	mov	x19, x0
   24ee8:	mov	x20, x2
   24eec:	stp	x21, x30, [sp, #16]
   24ef0:	mov	x21, x1
   24ef4:	cbz	x3, 24f20 <__sanitizer_sandbox_on_notify@@Base+0x18d8>
   24ef8:	mov	x4, x2
   24efc:	mov	x0, x3
   24f00:	mov	w2, #0x0                   	// #0
   24f04:	mov	w3, #0x4032                	// #16434
   24f08:	bl	1eee8 <__sanitizer_set_report_fd@@Base+0x7068>
   24f0c:	stp	x0, x21, [x19]
   24f10:	str	x20, [x19, #16]
   24f14:	ldp	x21, x30, [sp, #16]
   24f18:	ldp	x19, x20, [sp], #32
   24f1c:	ret
   24f20:	mov	x5, #0x0                   	// #0
   24f24:	mov	w4, #0xffffffff            	// #-1
   24f28:	mov	w3, #0x4022                	// #16418
   24f2c:	mov	w2, #0x0                   	// #0
   24f30:	mov	x0, #0x0                   	// #0
   24f34:	bl	1c1a0 <__sanitizer_set_report_fd@@Base+0x4320>
   24f38:	stp	x0, x21, [x19]
   24f3c:	str	x20, [x19, #16]
   24f40:	ldp	x21, x30, [sp, #16]
   24f44:	ldp	x19, x20, [sp], #32
   24f48:	ret
   24f4c:	nop
   24f50:	mov	x0, x1
   24f54:	mov	x1, x2
   24f58:	mov	x2, x3
   24f5c:	b	1eed0 <__sanitizer_set_report_fd@@Base+0x7050>
   24f60:	mov	x0, x1
   24f64:	mov	x1, x2
   24f68:	mov	x2, x3
   24f6c:	b	1eec0 <__sanitizer_set_report_fd@@Base+0x7040>
   24f70:	ldr	x4, [x0, #8]
   24f74:	str	x30, [sp, #-16]!
   24f78:	mov	x5, x0
   24f7c:	cmp	x2, x4
   24f80:	b.hi	24fdc <__sanitizer_sandbox_on_notify@@Base+0x1994>  // b.pmore
   24f84:	mov	x0, x1
   24f88:	ldr	x1, [x5]
   24f8c:	cmp	x1, x0
   24f90:	b.eq	24fb8 <__sanitizer_sandbox_on_notify@@Base+0x1970>  // b.none
   24f94:	add	x1, x1, x4
   24f98:	add	x3, x2, x0
   24f9c:	cmp	x3, x1
   24fa0:	b.ne	24ff8 <__sanitizer_sandbox_on_notify@@Base+0x19b0>  // b.any
   24fa4:	ldr	x30, [sp], #16
   24fa8:	sub	x4, x4, x2
   24fac:	str	x4, [x5, #8]
   24fb0:	mov	x1, x2
   24fb4:	b	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   24fb8:	ldr	x30, [sp], #16
   24fbc:	cmp	x2, x4
   24fc0:	add	x1, x2, x0
   24fc4:	sub	x4, x4, x2
   24fc8:	csel	x1, x1, xzr, ne  // ne = any
   24fcc:	str	x1, [x5]
   24fd0:	str	x4, [x5, #8]
   24fd4:	mov	x1, x2
   24fd8:	b	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   24fdc:	mov	x3, x2
   24fe0:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   24fe4:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   24fe8:	add	x0, x0, #0xf80
   24fec:	add	x2, x2, #0x1e0
   24ff0:	mov	w1, #0x16d                 	// #365
   24ff4:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   24ff8:	mov	x4, x1
   24ffc:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   25000:	adrp	x0, 3b000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x7398>
   25004:	add	x2, x2, #0x1f8
   25008:	add	x0, x0, #0xf80
   2500c:	mov	w1, #0x172                 	// #370
   25010:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   25014:	nop
   25018:	mov	x4, x2
   2501c:	mov	w3, #0x4032                	// #16434
   25020:	mov	w2, #0x0                   	// #0
   25024:	b	1eee8 <__sanitizer_set_report_fd@@Base+0x7068>
   25028:	mov	x1, x0
   2502c:	mov	x5, #0x0                   	// #0
   25030:	mov	w4, #0xffffffff            	// #-1
   25034:	mov	w3, #0x4022                	// #16418
   25038:	mov	w2, #0x0                   	// #0
   2503c:	mov	x0, #0x0                   	// #0
   25040:	b	1c1a0 <__sanitizer_set_report_fd@@Base+0x4320>
   25044:	nop
   25048:	adrp	x3, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2504c:	ldr	x3, [x3, #3728]
   25050:	cbz	x3, 25058 <__sanitizer_sandbox_on_notify@@Base+0x1a10>
   25054:	b	62c0 <real_pthread_attr_getstack@plt>
   25058:	b	6460 <pthread_attr_getstack@plt>
   2505c:	nop
   25060:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   25064:	stp	x19, x20, [sp, #-48]!
   25068:	mov	x20, x0
   2506c:	ldr	x1, [x1, #3728]
   25070:	str	x30, [sp, #16]
   25074:	stp	xzr, xzr, [sp, #32]
   25078:	add	x2, sp, #0x28
   2507c:	cbz	x1, 250f8 <__sanitizer_sandbox_on_notify@@Base+0x1ab0>
   25080:	add	x1, sp, #0x20
   25084:	bl	62c0 <real_pthread_attr_getstack@plt>
   25088:	ldr	x1, [sp, #32]
   2508c:	cbz	x1, 2509c <__sanitizer_sandbox_on_notify@@Base+0x1a54>
   25090:	ldr	x0, [sp, #40]
   25094:	cmn	x1, x0
   25098:	b.ne	250c0 <__sanitizer_sandbox_on_notify@@Base+0x1a78>  // b.any
   2509c:	bl	23e48 <__sanitizer_sandbox_on_notify@@Base+0x800>
   250a0:	add	x19, x0, #0x20, lsl #12
   250a4:	ldr	x1, [sp, #40]
   250a8:	cmp	x1, #0x0
   250ac:	ccmp	x19, x1, #0x0, ne  // ne = any
   250b0:	b.hi	25104 <__sanitizer_sandbox_on_notify@@Base+0x1abc>  // b.pmore
   250b4:	ldr	x30, [sp, #16]
   250b8:	ldp	x19, x20, [sp], #48
   250bc:	ret
   250c0:	bl	23e48 <__sanitizer_sandbox_on_notify@@Base+0x800>
   250c4:	add	x2, x0, #0x20, lsl #12
   250c8:	ldr	x1, [sp, #40]
   250cc:	cmp	x2, x1
   250d0:	b.ls	250b4 <__sanitizer_sandbox_on_notify@@Base+0x1a6c>  // b.plast
   250d4:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   250d8:	add	x0, x0, #0x268
   250dc:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   250e0:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   250e4:	add	x0, x0, #0x2a8
   250e8:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   250ec:	ldr	x30, [sp, #16]
   250f0:	ldp	x19, x20, [sp], #48
   250f4:	ret
   250f8:	add	x1, sp, #0x20
   250fc:	bl	6460 <pthread_attr_getstack@plt>
   25100:	b	25088 <__sanitizer_sandbox_on_notify@@Base+0x1a40>
   25104:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   25108:	ldr	x0, [x0, #3816]
   2510c:	ldr	w0, [x0]
   25110:	cbnz	w0, 2512c <__sanitizer_sandbox_on_notify@@Base+0x1ae4>
   25114:	mov	x1, x19
   25118:	mov	x0, x20
   2511c:	bl	6480 <pthread_attr_setstacksize@plt>
   25120:	ldr	x30, [sp, #16]
   25124:	ldp	x19, x20, [sp], #48
   25128:	ret
   2512c:	mov	x2, x19
   25130:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   25134:	add	x0, x0, #0x238
   25138:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   2513c:	b	25114 <__sanitizer_sandbox_on_notify@@Base+0x1acc>
   25140:	stp	x19, x20, [sp, #-80]!
   25144:	mov	w20, w4
   25148:	stp	x21, x22, [sp, #16]
   2514c:	mov	w22, w2
   25150:	mov	w21, w3
   25154:	stp	x23, x24, [sp, #32]
   25158:	mov	x23, x0
   2515c:	mov	x24, x1
   25160:	str	x30, [sp, #48]
   25164:	bl	1c868 <__sanitizer_set_report_fd@@Base+0x49e8>
   25168:	mov	w19, w0
   2516c:	cmp	w0, #0x0
   25170:	b.lt	251c0 <__sanitizer_sandbox_on_notify@@Base+0x1b78>  // b.tstop
   25174:	b.eq	251e8 <__sanitizer_sandbox_on_notify@@Base+0x1ba0>  // b.none
   25178:	cmn	w22, #0x1
   2517c:	b.eq	25188 <__sanitizer_sandbox_on_notify@@Base+0x1b40>  // b.none
   25180:	mov	w0, w22
   25184:	bl	1c1d8 <__sanitizer_set_report_fd@@Base+0x4358>
   25188:	cmn	w21, #0x1
   2518c:	b.eq	25198 <__sanitizer_sandbox_on_notify@@Base+0x1b50>  // b.none
   25190:	mov	w0, w21
   25194:	bl	1c1d8 <__sanitizer_set_report_fd@@Base+0x4358>
   25198:	cmn	w20, #0x1
   2519c:	b.eq	251a8 <__sanitizer_sandbox_on_notify@@Base+0x1b60>  // b.none
   251a0:	mov	w0, w20
   251a4:	bl	1c1d8 <__sanitizer_set_report_fd@@Base+0x4358>
   251a8:	mov	w0, w19
   251ac:	ldp	x21, x22, [sp, #16]
   251b0:	ldp	x23, x24, [sp, #32]
   251b4:	ldr	x30, [sp, #48]
   251b8:	ldp	x19, x20, [sp], #80
   251bc:	ret
   251c0:	add	x1, sp, #0x4c
   251c4:	sxtw	x0, w0
   251c8:	bl	1c178 <__sanitizer_set_report_fd@@Base+0x42f8>
   251cc:	tst	w0, #0xff
   251d0:	b.eq	25178 <__sanitizer_sandbox_on_notify@@Base+0x1b30>  // b.none
   251d4:	ldr	w1, [sp, #76]
   251d8:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   251dc:	add	x0, x0, #0x2d8
   251e0:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   251e4:	b	25178 <__sanitizer_sandbox_on_notify@@Base+0x1b30>
   251e8:	cmn	w22, #0x1
   251ec:	b.eq	25208 <__sanitizer_sandbox_on_notify@@Base+0x1bc0>  // b.none
   251f0:	bl	1c1d8 <__sanitizer_set_report_fd@@Base+0x4358>
   251f4:	mov	w1, #0x0                   	// #0
   251f8:	mov	w0, w22
   251fc:	bl	1c320 <__sanitizer_set_report_fd@@Base+0x44a0>
   25200:	mov	w0, w22
   25204:	bl	1c1d8 <__sanitizer_set_report_fd@@Base+0x4358>
   25208:	cmn	w21, #0x1
   2520c:	b.eq	2522c <__sanitizer_sandbox_on_notify@@Base+0x1be4>  // b.none
   25210:	mov	w0, #0x1                   	// #1
   25214:	bl	1c1d8 <__sanitizer_set_report_fd@@Base+0x4358>
   25218:	mov	w1, #0x1                   	// #1
   2521c:	mov	w0, w21
   25220:	bl	1c320 <__sanitizer_set_report_fd@@Base+0x44a0>
   25224:	mov	w0, w21
   25228:	bl	1c1d8 <__sanitizer_set_report_fd@@Base+0x4358>
   2522c:	cmn	w20, #0x1
   25230:	b.eq	25250 <__sanitizer_sandbox_on_notify@@Base+0x1c08>  // b.none
   25234:	mov	w0, #0x2                   	// #2
   25238:	bl	1c1d8 <__sanitizer_set_report_fd@@Base+0x4358>
   2523c:	mov	w1, #0x2                   	// #2
   25240:	mov	w0, w20
   25244:	bl	1c320 <__sanitizer_set_report_fd@@Base+0x44a0>
   25248:	mov	w0, w20
   2524c:	bl	1c1d8 <__sanitizer_set_report_fd@@Base+0x4358>
   25250:	mov	w0, #0x4                   	// #4
   25254:	bl	65c0 <sysconf@plt>
   25258:	mov	x19, x0
   2525c:	cmp	w0, #0x2
   25260:	b.le	25278 <__sanitizer_sandbox_on_notify@@Base+0x1c30>
   25264:	mov	w0, w19
   25268:	sub	w19, w19, #0x1
   2526c:	bl	1c1d8 <__sanitizer_set_report_fd@@Base+0x4358>
   25270:	cmp	w19, #0x2
   25274:	b.ne	25264 <__sanitizer_sandbox_on_notify@@Base+0x1c1c>  // b.any
   25278:	mov	x1, x24
   2527c:	mov	x0, x23
   25280:	bl	6220 <execv@plt>
   25284:	mov	w0, #0x1                   	// #1
   25288:	bl	1c3a0 <__sanitizer_set_report_fd@@Base+0x4520>
   2528c:	nop
   25290:	stp	x19, x30, [sp, #-32]!
   25294:	mov	w2, #0x1                   	// #1
   25298:	add	x1, sp, #0x18
   2529c:	bl	1c7e0 <__sanitizer_set_report_fd@@Base+0x4960>
   252a0:	add	x1, sp, #0x1c
   252a4:	mov	x19, x0
   252a8:	bl	1c178 <__sanitizer_set_report_fd@@Base+0x42f8>
   252ac:	cmp	x19, #0x0
   252b0:	cset	w19, eq  // eq = none
   252b4:	tst	w0, #0xff
   252b8:	b.ne	252c8 <__sanitizer_sandbox_on_notify@@Base+0x1c80>  // b.any
   252bc:	mov	w0, w19
   252c0:	ldp	x19, x30, [sp], #32
   252c4:	ret
   252c8:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   252cc:	mov	w19, #0x0                   	// #0
   252d0:	ldr	x0, [x0, #3816]
   252d4:	ldr	w0, [x0]
   252d8:	cbz	w0, 252bc <__sanitizer_sandbox_on_notify@@Base+0x1c74>
   252dc:	ldr	w1, [sp, #28]
   252e0:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   252e4:	add	x0, x0, #0x300
   252e8:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   252ec:	mov	w0, w19
   252f0:	ldp	x19, x30, [sp], #32
   252f4:	ret
   252f8:	stp	x19, x30, [sp, #-32]!
   252fc:	mov	w2, #0x0                   	// #0
   25300:	add	x1, sp, #0x18
   25304:	bl	1c7e0 <__sanitizer_set_report_fd@@Base+0x4960>
   25308:	add	x1, sp, #0x1c
   2530c:	bl	1c178 <__sanitizer_set_report_fd@@Base+0x42f8>
   25310:	tst	w0, #0xff
   25314:	b.ne	25328 <__sanitizer_sandbox_on_notify@@Base+0x1ce0>  // b.any
   25318:	ldr	w19, [sp, #24]
   2531c:	mov	w0, w19
   25320:	ldp	x19, x30, [sp], #32
   25324:	ret
   25328:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2532c:	mov	w19, #0xffffffff            	// #-1
   25330:	ldr	x0, [x0, #3816]
   25334:	ldr	w0, [x0]
   25338:	cbz	w0, 2531c <__sanitizer_sandbox_on_notify@@Base+0x1cd4>
   2533c:	ldr	w1, [sp, #28]
   25340:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   25344:	add	x0, x0, #0x300
   25348:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   2534c:	b	2531c <__sanitizer_sandbox_on_notify@@Base+0x1cd4>
   25350:	cmp	w0, #0x1
   25354:	cset	w0, eq  // eq = none
   25358:	ret
   2535c:	nop
   25360:	ldr	x0, [x0, #24]
   25364:	ret
   25368:	mov	x0, #0x22                  	// #34
   2536c:	ret
   25370:	ldr	x4, [x0, #24]
   25374:	cmp	x1, x4
   25378:	b.cs	25388 <__sanitizer_sandbox_on_notify@@Base+0x1d40>  // b.hs, b.nlast
   2537c:	ldr	x0, [x0, #8]
   25380:	ldr	x0, [x0, x1, lsl #3]
   25384:	ret
   25388:	str	x30, [sp, #-16]!
   2538c:	mov	x3, x1
   25390:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   25394:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   25398:	add	x2, x2, #0x330
   2539c:	add	x0, x0, #0x358
   253a0:	mov	w1, #0x204                 	// #516
   253a4:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   253a8:	stp	x19, x20, [sp, #-352]!
   253ac:	mov	x19, x2
   253b0:	adrp	x4, 25000 <__sanitizer_sandbox_on_notify@@Base+0x19b8>
   253b4:	ldr	x2, [x0]
   253b8:	stp	x21, x22, [sp, #16]
   253bc:	add	x4, x4, #0x370
   253c0:	stp	x23, x30, [sp, #32]
   253c4:	mov	x20, x3
   253c8:	ldr	x2, [x2, #24]
   253cc:	cmp	x2, x4
   253d0:	b.ne	25474 <__sanitizer_sandbox_on_notify@@Base+0x1e2c>  // b.any
   253d4:	ldr	x4, [x0, #24]
   253d8:	mov	x3, x1
   253dc:	cmp	x1, x4
   253e0:	b.cs	25498 <__sanitizer_sandbox_on_notify@@Base+0x1e50>  // b.hs, b.nlast
   253e4:	ldr	x0, [x0, #8]
   253e8:	ldr	x21, [x0, x1, lsl #3]
   253ec:	add	x3, sp, #0x40
   253f0:	mov	x2, #0x1                   	// #1
   253f4:	mov	w1, w21
   253f8:	add	x22, sp, #0x50
   253fc:	mov	x23, #0x110                 	// #272
   25400:	mov	w0, #0x4204                	// #16900
   25404:	stp	x22, x23, [sp, #64]
   25408:	bl	1c7c8 <__sanitizer_set_report_fd@@Base+0x4948>
   2540c:	add	x1, sp, #0x3c
   25410:	bl	1c178 <__sanitizer_set_report_fd@@Base+0x42f8>
   25414:	tst	w0, #0xff
   25418:	b.eq	25448 <__sanitizer_sandbox_on_notify@@Base+0x1e00>  // b.none
   2541c:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   25420:	ldr	w2, [sp, #60]
   25424:	ldr	x0, [x0, #3816]
   25428:	ldr	w0, [x0]
   2542c:	cbnz	w0, 25480 <__sanitizer_sandbox_on_notify@@Base+0x1e38>
   25430:	cmp	w2, #0x3
   25434:	csetm	w0, eq  // eq = none
   25438:	ldp	x21, x22, [sp, #16]
   2543c:	ldp	x23, x30, [sp, #32]
   25440:	ldp	x19, x20, [sp], #352
   25444:	ret
   25448:	ldr	x0, [sp, #328]
   2544c:	str	x0, [x20]
   25450:	mov	x2, x23
   25454:	mov	x1, x22
   25458:	mov	x0, x19
   2545c:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   25460:	mov	w0, #0x1                   	// #1
   25464:	ldp	x21, x22, [sp, #16]
   25468:	ldp	x23, x30, [sp, #32]
   2546c:	ldp	x19, x20, [sp], #352
   25470:	ret
   25474:	blr	x2
   25478:	mov	x21, x0
   2547c:	b	253ec <__sanitizer_sandbox_on_notify@@Base+0x1da4>
   25480:	mov	w1, w21
   25484:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   25488:	add	x0, x0, #0x3c0
   2548c:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   25490:	ldr	w2, [sp, #60]
   25494:	b	25430 <__sanitizer_sandbox_on_notify@@Base+0x1de8>
   25498:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   2549c:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   254a0:	add	x2, x2, #0x330
   254a4:	add	x0, x0, #0x358
   254a8:	mov	w1, #0x204                 	// #516
   254ac:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   254b0:	stp	x19, x20, [sp, #-32]!
   254b4:	adrp	x20, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   254b8:	ldr	x19, [x20, #1952]
   254bc:	str	x30, [sp, #24]
   254c0:	cbz	x19, 254dc <__sanitizer_sandbox_on_notify@@Base+0x1e94>
   254c4:	bl	1c7f8 <__sanitizer_set_report_fd@@Base+0x4978>
   254c8:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   254cc:	ldr	x1, [x1, #3744]
   254d0:	ldr	x1, [x1]
   254d4:	cmp	x0, x1
   254d8:	b.eq	254e8 <__sanitizer_sandbox_on_notify@@Base+0x1ea0>  // b.none
   254dc:	ldr	x30, [sp, #24]
   254e0:	ldp	x19, x20, [sp], #32
   254e4:	ret
   254e8:	ldr	x0, [x19, #32]
   254ec:	cbz	x0, 25524 <__sanitizer_sandbox_on_notify@@Base+0x1edc>
   254f0:	str	x21, [sp, #16]
   254f4:	mov	x21, #0x0                   	// #0
   254f8:	ldr	x1, [x19, #16]
   254fc:	mov	x3, #0x0                   	// #0
   25500:	mov	x2, #0x0                   	// #0
   25504:	mov	w0, #0x8                   	// #8
   25508:	ldr	x1, [x1, x21, lsl #3]
   2550c:	add	x21, x21, #0x1
   25510:	bl	1c7c8 <__sanitizer_set_report_fd@@Base+0x4948>
   25514:	ldr	x0, [x19, #32]
   25518:	cmp	x0, x21
   2551c:	b.hi	254f8 <__sanitizer_sandbox_on_notify@@Base+0x1eb0>  // b.pmore
   25520:	ldr	x21, [sp, #16]
   25524:	str	xzr, [x20, #1952]
   25528:	b	254dc <__sanitizer_sandbox_on_notify@@Base+0x1e94>
   2552c:	nop
   25530:	stp	x19, x20, [sp, #-96]!
   25534:	mov	x19, x1
   25538:	mov	x20, x0
   2553c:	ldr	x1, [x0, #32]
   25540:	stp	x21, x22, [sp, #16]
   25544:	str	x30, [sp, #64]
   25548:	cbz	x1, 25588 <__sanitizer_sandbox_on_notify@@Base+0x1f40>
   2554c:	mov	x2, #0x0                   	// #0
   25550:	ldr	x4, [x0, #16]
   25554:	b	25564 <__sanitizer_sandbox_on_notify@@Base+0x1f1c>
   25558:	add	x2, x2, #0x1
   2555c:	cmp	x2, x1
   25560:	b.eq	25588 <__sanitizer_sandbox_on_notify@@Base+0x1f40>  // b.none
   25564:	ldr	x3, [x4, x2, lsl #3]
   25568:	cmp	x19, x3
   2556c:	b.ne	25558 <__sanitizer_sandbox_on_notify@@Base+0x1f10>  // b.any
   25570:	mov	w21, #0x0                   	// #0
   25574:	mov	w0, w21
   25578:	ldp	x21, x22, [sp, #16]
   2557c:	ldr	x30, [sp, #64]
   25580:	ldp	x19, x20, [sp], #96
   25584:	ret
   25588:	mov	x3, #0x0                   	// #0
   2558c:	mov	x2, #0x0                   	// #0
   25590:	mov	w1, w19
   25594:	mov	w0, #0x10                  	// #16
   25598:	stp	x23, x24, [sp, #32]
   2559c:	bl	1c7c8 <__sanitizer_set_report_fd@@Base+0x4948>
   255a0:	add	x1, sp, #0x50
   255a4:	mov	w23, w19
   255a8:	bl	1c178 <__sanitizer_set_report_fd@@Base+0x42f8>
   255ac:	ands	w21, w0, #0xff
   255b0:	b.ne	256ac <__sanitizer_sandbox_on_notify@@Base+0x2064>  // b.any
   255b4:	stp	x25, x26, [sp, #48]
   255b8:	adrp	x25, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   255bc:	ldr	x0, [x25, #3816]
   255c0:	ldr	w0, [x0]
   255c4:	sxtw	x0, w0
   255c8:	cmp	x0, #0x1
   255cc:	b.hi	256d8 <__sanitizer_sandbox_on_notify@@Base+0x2090>  // b.pmore
   255d0:	add	x24, sp, #0x54
   255d4:	add	x22, sp, #0x58
   255d8:	mov	w2, #0x40000000            	// #1073741824
   255dc:	mov	x1, x24
   255e0:	mov	w0, w23
   255e4:	bl	1c7e0 <__sanitizer_set_report_fd@@Base+0x4960>
   255e8:	mov	x1, x22
   255ec:	mov	x26, x0
   255f0:	bl	1c178 <__sanitizer_set_report_fd@@Base+0x42f8>
   255f4:	tst	w0, #0xff
   255f8:	b.eq	25608 <__sanitizer_sandbox_on_notify@@Base+0x1fc0>  // b.none
   255fc:	ldr	w0, [sp, #88]
   25600:	cmp	w0, #0x4
   25604:	b.eq	255d8 <__sanitizer_sandbox_on_notify@@Base+0x1f90>  // b.none
   25608:	mov	x0, x26
   2560c:	mov	x1, x22
   25610:	bl	1c178 <__sanitizer_set_report_fd@@Base+0x42f8>
   25614:	tst	w0, #0xff
   25618:	b.ne	257d4 <__sanitizer_sandbox_on_notify@@Base+0x218c>  // b.any
   2561c:	ldr	w3, [sp, #84]
   25620:	and	w0, w3, #0xff
   25624:	cmp	w0, #0x7f
   25628:	b.ne	25650 <__sanitizer_sandbox_on_notify@@Base+0x2008>  // b.any
   2562c:	ubfx	x3, x3, #8, #8
   25630:	cmp	w3, #0x13
   25634:	b.eq	25650 <__sanitizer_sandbox_on_notify@@Base+0x2008>  // b.none
   25638:	and	x3, x3, #0xff
   2563c:	mov	w1, w23
   25640:	mov	x2, #0x0                   	// #0
   25644:	mov	w0, #0x7                   	// #7
   25648:	bl	1c7c8 <__sanitizer_set_report_fd@@Base+0x4948>
   2564c:	b	255d8 <__sanitizer_sandbox_on_notify@@Base+0x1f90>
   25650:	ldr	x4, [x20, #24]
   25654:	str	x19, [sp, #88]
   25658:	ldr	x3, [x20, #32]
   2565c:	add	x21, x20, #0x10
   25660:	lsr	x4, x4, #3
   25664:	cmp	x3, x4
   25668:	b.hi	257bc <__sanitizer_sandbox_on_notify@@Base+0x2174>  // b.pmore
   2566c:	add	x19, x3, #0x1
   25670:	b.eq	256ec <__sanitizer_sandbox_on_notify@@Base+0x20a4>  // b.none
   25674:	ldr	x23, [x20, #16]
   25678:	str	x19, [x21, #16]
   2567c:	mov	x1, x22
   25680:	add	x0, x23, x3, lsl #3
   25684:	mov	x2, #0x8                   	// #8
   25688:	mov	w21, #0x1                   	// #1
   2568c:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   25690:	mov	w0, w21
   25694:	ldp	x21, x22, [sp, #16]
   25698:	ldp	x23, x24, [sp, #32]
   2569c:	ldp	x25, x26, [sp, #48]
   256a0:	ldr	x30, [sp, #64]
   256a4:	ldp	x19, x20, [sp], #96
   256a8:	ret
   256ac:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   256b0:	mov	w21, #0x0                   	// #0
   256b4:	ldr	x0, [x0, #3816]
   256b8:	ldr	w0, [x0]
   256bc:	cbnz	w0, 257a0 <__sanitizer_sandbox_on_notify@@Base+0x2158>
   256c0:	mov	w0, w21
   256c4:	ldp	x21, x22, [sp, #16]
   256c8:	ldp	x23, x24, [sp, #32]
   256cc:	ldr	x30, [sp, #64]
   256d0:	ldp	x19, x20, [sp], #96
   256d4:	ret
   256d8:	mov	x1, x19
   256dc:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   256e0:	add	x0, x0, #0x428
   256e4:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   256e8:	b	255d0 <__sanitizer_sandbox_on_notify@@Base+0x1f88>
   256ec:	tst	x3, x19
   256f0:	b.eq	2572c <__sanitizer_sandbox_on_notify@@Base+0x20e4>  // b.none
   256f4:	clz	x2, x19
   256f8:	mov	w1, #0x3f                  	// #63
   256fc:	sub	w2, w1, w2
   25700:	mov	x1, #0x1                   	// #1
   25704:	add	w4, w2, #0x1
   25708:	lsl	x4, x1, x4
   2570c:	cmp	x4, x19
   25710:	b.ls	2586c <__sanitizer_sandbox_on_notify@@Base+0x2224>  // b.plast
   25714:	lsl	x1, x1, x2
   25718:	cmp	x1, x19
   2571c:	b.cs	2584c <__sanitizer_sandbox_on_notify@@Base+0x2204>  // b.hs, b.nlast
   25720:	cmp	x3, x4
   25724:	b.hi	25824 <__sanitizer_sandbox_on_notify@@Base+0x21dc>  // b.pmore
   25728:	mov	x19, x4
   2572c:	adrp	x23, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   25730:	lsl	x19, x19, #3
   25734:	ldr	x23, [x23, #4016]
   25738:	ldr	x0, [x23]
   2573c:	cbz	x0, 25800 <__sanitizer_sandbox_on_notify@@Base+0x21b8>
   25740:	sub	x1, x0, #0x1
   25744:	tst	x0, x1
   25748:	b.ne	2583c <__sanitizer_sandbox_on_notify@@Base+0x21f4>  // b.any
   2574c:	add	x19, x19, x1
   25750:	neg	x0, x0
   25754:	and	x19, x19, x0
   25758:	mov	w2, #0x0                   	// #0
   2575c:	mov	x0, x19
   25760:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   25764:	add	x1, x1, #0xc10
   25768:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   2576c:	ldr	x1, [x20, #16]
   25770:	mov	x23, x0
   25774:	ldr	x2, [x21, #16]
   25778:	lsl	x2, x2, #3
   2577c:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   25780:	ldr	x1, [x21, #8]
   25784:	ldr	x0, [x20, #16]
   25788:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   2578c:	ldr	x3, [x21, #16]
   25790:	str	x23, [x20, #16]
   25794:	str	x19, [x21, #8]
   25798:	add	x19, x3, #0x1
   2579c:	b	25678 <__sanitizer_sandbox_on_notify@@Base+0x2030>
   257a0:	ldr	w2, [sp, #80]
   257a4:	mov	x1, x19
   257a8:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   257ac:	add	x0, x0, #0x3f8
   257b0:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   257b4:	ldp	x23, x24, [sp, #32]
   257b8:	b	25574 <__sanitizer_sandbox_on_notify@@Base+0x1f2c>
   257bc:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   257c0:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   257c4:	add	x2, x2, #0x8c8
   257c8:	add	x0, x0, #0xb98
   257cc:	mov	w1, #0x1cd                 	// #461
   257d0:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   257d4:	ldr	x25, [x25, #3816]
   257d8:	ldr	w0, [x25]
   257dc:	cbnz	w0, 2580c <__sanitizer_sandbox_on_notify@@Base+0x21c4>
   257e0:	mov	w1, w19
   257e4:	mov	x3, #0x0                   	// #0
   257e8:	mov	x2, #0x0                   	// #0
   257ec:	mov	w0, #0x11                  	// #17
   257f0:	bl	1c7c8 <__sanitizer_set_report_fd@@Base+0x4948>
   257f4:	ldp	x23, x24, [sp, #32]
   257f8:	ldp	x25, x26, [sp, #48]
   257fc:	b	25574 <__sanitizer_sandbox_on_notify@@Base+0x1f2c>
   25800:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   25804:	str	x0, [x23]
   25808:	b	25740 <__sanitizer_sandbox_on_notify@@Base+0x20f8>
   2580c:	ldr	w2, [sp, #88]
   25810:	mov	x1, x19
   25814:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   25818:	add	x0, x0, #0x448
   2581c:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   25820:	b	257e0 <__sanitizer_sandbox_on_notify@@Base+0x2198>
   25824:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   25828:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   2582c:	add	x2, x2, #0x8f8
   25830:	add	x0, x0, #0xb98
   25834:	mov	w1, #0x20c                 	// #524
   25838:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   2583c:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   25840:	add	x0, x0, #0xbf8
   25844:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   25848:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   2584c:	mov	x4, x1
   25850:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   25854:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   25858:	mov	x3, x19
   2585c:	add	x2, x2, #0x708
   25860:	add	x0, x0, #0xb98
   25864:	mov	w1, #0x18b                 	// #395
   25868:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   2586c:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   25870:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   25874:	mov	x3, x19
   25878:	add	x2, x2, #0x680
   2587c:	add	x0, x0, #0xb98
   25880:	mov	w1, #0x18a                 	// #394
   25884:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   25888:	stp	x19, x20, [sp, #-80]!
   2588c:	mov	x20, x0
   25890:	ldr	x0, [x0, #32]
   25894:	str	x30, [sp, #56]
   25898:	cbz	x0, 2595c <__sanitizer_sandbox_on_notify@@Base+0x2314>
   2589c:	mov	x19, #0x0                   	// #0
   258a0:	stp	x21, x22, [sp, #16]
   258a4:	adrp	x22, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   258a8:	stp	x23, x24, [sp, #32]
   258ac:	adrp	x24, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   258b0:	add	x23, sp, #0x4c
   258b4:	add	x24, x24, #0x480
   258b8:	str	x25, [sp, #48]
   258bc:	adrp	x25, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   258c0:	add	x25, x25, #0x4a0
   258c4:	b	258f8 <__sanitizer_sandbox_on_notify@@Base+0x22b0>
   258c8:	ldr	x2, [x22, #3816]
   258cc:	mov	w1, w21
   258d0:	mov	x0, x24
   258d4:	ldr	w2, [x2]
   258d8:	sxtw	x2, w2
   258dc:	cmp	x2, #0x1
   258e0:	b.ls	258e8 <__sanitizer_sandbox_on_notify@@Base+0x22a0>  // b.plast
   258e4:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   258e8:	ldr	x0, [x20, #32]
   258ec:	add	x19, x19, #0x1
   258f0:	cmp	x0, x19
   258f4:	b.ls	25950 <__sanitizer_sandbox_on_notify@@Base+0x2308>  // b.plast
   258f8:	ldr	x1, [x20, #16]
   258fc:	mov	x3, #0x0                   	// #0
   25900:	mov	x2, #0x0                   	// #0
   25904:	mov	w0, #0x11                  	// #17
   25908:	ldr	x21, [x1, x19, lsl #3]
   2590c:	mov	w1, w21
   25910:	bl	1c7c8 <__sanitizer_set_report_fd@@Base+0x4948>
   25914:	mov	x1, x23
   25918:	bl	1c178 <__sanitizer_set_report_fd@@Base+0x42f8>
   2591c:	tst	w0, #0xff
   25920:	b.eq	258c8 <__sanitizer_sandbox_on_notify@@Base+0x2280>  // b.none
   25924:	ldr	x0, [x22, #3816]
   25928:	ldr	w0, [x0]
   2592c:	cbz	w0, 258e8 <__sanitizer_sandbox_on_notify@@Base+0x22a0>
   25930:	ldr	w2, [sp, #76]
   25934:	mov	x0, x25
   25938:	mov	w1, w21
   2593c:	add	x19, x19, #0x1
   25940:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   25944:	ldr	x0, [x20, #32]
   25948:	cmp	x0, x19
   2594c:	b.hi	258f8 <__sanitizer_sandbox_on_notify@@Base+0x22b0>  // b.pmore
   25950:	ldp	x21, x22, [sp, #16]
   25954:	ldp	x23, x24, [sp, #32]
   25958:	ldr	x25, [sp, #48]
   2595c:	ldr	x30, [sp, #56]
   25960:	ldp	x19, x20, [sp], #80
   25964:	ret
   25968:	stp	x19, x20, [sp, #-32]!
   2596c:	mov	x20, x0
   25970:	ldr	x0, [x0, #32]
   25974:	str	x30, [sp, #16]
   25978:	cbz	x0, 259a8 <__sanitizer_sandbox_on_notify@@Base+0x2360>
   2597c:	mov	x19, #0x0                   	// #0
   25980:	ldr	x1, [x20, #16]
   25984:	mov	x3, #0x0                   	// #0
   25988:	mov	x2, #0x0                   	// #0
   2598c:	mov	w0, #0x8                   	// #8
   25990:	ldr	x1, [x1, x19, lsl #3]
   25994:	add	x19, x19, #0x1
   25998:	bl	1c7c8 <__sanitizer_set_report_fd@@Base+0x4948>
   2599c:	ldr	x0, [x20, #32]
   259a0:	cmp	x0, x19
   259a4:	b.hi	25980 <__sanitizer_sandbox_on_notify@@Base+0x2338>  // b.pmore
   259a8:	ldr	x30, [sp, #16]
   259ac:	ldp	x19, x20, [sp], #32
   259b0:	ret
   259b4:	nop
   259b8:	stp	x19, x20, [sp, #-96]!
   259bc:	mov	w20, w0
   259c0:	add	x19, sp, #0x20
   259c4:	stp	x21, x30, [sp, #16]
   259c8:	mov	x0, x19
   259cc:	stp	x1, x2, [sp, #32]
   259d0:	bl	1e1e0 <__sanitizer_set_report_fd@@Base+0x6360>
   259d4:	mov	x1, x0
   259d8:	mov	x0, x19
   259dc:	str	x1, [sp, #48]
   259e0:	adrp	x21, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   259e4:	bl	1e1f0 <__sanitizer_set_report_fd@@Base+0x6370>
   259e8:	mov	w1, w0
   259ec:	mov	x0, x19
   259f0:	strb	w1, [sp, #80]
   259f4:	bl	1d8c8 <__sanitizer_set_report_fd@@Base+0x5a48>
   259f8:	mov	w1, w0
   259fc:	mov	x0, x19
   25a00:	str	w1, [sp, #84]
   25a04:	bl	1d910 <__sanitizer_set_report_fd@@Base+0x5a90>
   25a08:	mov	w1, w0
   25a0c:	mov	x0, x19
   25a10:	strb	w1, [sp, #88]
   25a14:	bl	1d940 <__sanitizer_set_report_fd@@Base+0x5ac0>
   25a18:	ldp	x2, x3, [sp, #48]
   25a1c:	mov	w1, w20
   25a20:	ldr	x4, [sp, #64]
   25a24:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   25a28:	add	x0, x0, #0x4d0
   25a2c:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   25a30:	ldr	x19, [x21, #1952]
   25a34:	cbz	x19, 25a6c <__sanitizer_sandbox_on_notify@@Base+0x2424>
   25a38:	mov	x0, x19
   25a3c:	cmp	w20, #0x6
   25a40:	b.eq	25a7c <__sanitizer_sandbox_on_notify@@Base+0x2434>  // b.none
   25a44:	bl	25888 <__sanitizer_sandbox_on_notify@@Base+0x2240>
   25a48:	adrp	x0, 25000 <__sanitizer_sandbox_on_notify@@Base+0x19b8>
   25a4c:	add	x0, x0, #0x4b0
   25a50:	bl	23020 <__sanitizer_on_print@@Base+0x3700>
   25a54:	tst	w0, #0xff
   25a58:	b.eq	25a84 <__sanitizer_sandbox_on_notify@@Base+0x243c>  // b.none
   25a5c:	ldr	x0, [x19]
   25a60:	mov	x1, #0x1                   	// #1
   25a64:	str	xzr, [x21, #1952]
   25a68:	str	x1, [x0, #104]
   25a6c:	cmp	w20, #0x6
   25a70:	cset	w0, ne  // ne = any
   25a74:	add	w0, w0, #0x1
   25a78:	bl	1c3a0 <__sanitizer_set_report_fd@@Base+0x4520>
   25a7c:	bl	25968 <__sanitizer_sandbox_on_notify@@Base+0x2320>
   25a80:	b	25a48 <__sanitizer_sandbox_on_notify@@Base+0x2400>
   25a84:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   25a88:	add	x0, x0, #0x508
   25a8c:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   25a90:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   25a94:	nop
   25a98:	stp	x19, x20, [sp, #-128]!
   25a9c:	adrp	x19, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   25aa0:	stp	x21, x22, [sp, #16]
   25aa4:	mov	x22, x0
   25aa8:	stp	x23, x24, [sp, #32]
   25aac:	add	x23, sp, #0x60
   25ab0:	ldr	w1, [x22, #40]
   25ab4:	mov	x0, x23
   25ab8:	stp	x25, x30, [sp, #48]
   25abc:	bl	1ca40 <__sanitizer_set_report_fd@@Base+0x4bc0>
   25ac0:	str	xzr, [sp, #64]
   25ac4:	ldr	x19, [x19, #4016]
   25ac8:	stp	xzr, xzr, [sp, #72]
   25acc:	ldr	x0, [x19]
   25ad0:	cbz	x0, 25bfc <__sanitizer_sandbox_on_notify@@Base+0x25b4>
   25ad4:	sub	x1, x0, #0x1
   25ad8:	tst	x1, x0
   25adc:	b.ne	25c08 <__sanitizer_sandbox_on_notify@@Base+0x25c0>  // b.any
   25ae0:	add	x19, x0, #0x3ff
   25ae4:	neg	x0, x0
   25ae8:	and	x19, x19, x0
   25aec:	mov	w2, #0x0                   	// #0
   25af0:	mov	x0, x19
   25af4:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   25af8:	add	x1, x1, #0xc10
   25afc:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   25b00:	ldr	x1, [sp, #64]
   25b04:	mov	x20, x0
   25b08:	ldr	x2, [sp, #80]
   25b0c:	add	x25, sp, #0x40
   25b10:	mov	w24, #0x0                   	// #0
   25b14:	lsl	x2, x2, #3
   25b18:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   25b1c:	ldp	x0, x1, [sp, #64]
   25b20:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   25b24:	stp	x20, x19, [sp, #64]
   25b28:	mov	x1, x25
   25b2c:	mov	x0, x23
   25b30:	bl	1ce50 <__sanitizer_set_report_fd@@Base+0x4fd0>
   25b34:	cbz	w0, 25bc0 <__sanitizer_sandbox_on_notify@@Base+0x2578>
   25b38:	cmp	w0, #0x1
   25b3c:	b.ne	25b5c <__sanitizer_sandbox_on_notify@@Base+0x2514>  // b.any
   25b40:	ldr	x19, [sp, #64]
   25b44:	ldr	x21, [sp, #80]
   25b48:	add	x21, x19, x21, lsl #3
   25b4c:	cmp	x21, x19
   25b50:	b.eq	25c18 <__sanitizer_sandbox_on_notify@@Base+0x25d0>  // b.none
   25b54:	mov	w20, w0
   25b58:	b	25b78 <__sanitizer_sandbox_on_notify@@Base+0x2530>
   25b5c:	ldr	x19, [sp, #64]
   25b60:	ldr	x21, [sp, #80]
   25b64:	add	x21, x19, x21, lsl #3
   25b68:	cmp	x21, x19
   25b6c:	b.eq	25bb0 <__sanitizer_sandbox_on_notify@@Base+0x2568>  // b.none
   25b70:	mov	w20, #0x0                   	// #0
   25b74:	nop
   25b78:	ldr	x1, [x19], #8
   25b7c:	mov	x0, x22
   25b80:	bl	25530 <__sanitizer_sandbox_on_notify@@Base+0x1ee8>
   25b84:	ands	w0, w0, #0xff
   25b88:	csel	w20, w20, w0, eq  // eq = none
   25b8c:	cmp	x21, x19
   25b90:	b.ne	25b78 <__sanitizer_sandbox_on_notify@@Base+0x2530>  // b.any
   25b94:	eor	w20, w20, #0x1
   25b98:	and	w20, w20, #0xff
   25b9c:	add	w24, w24, #0x1
   25ba0:	cmp	w20, #0x0
   25ba4:	ccmp	w24, #0x1d, #0x0, eq  // eq = none
   25ba8:	b.le	25b28 <__sanitizer_sandbox_on_notify@@Base+0x24e0>
   25bac:	ldr	x19, [sp, #64]
   25bb0:	ldr	x0, [x22, #32]
   25bb4:	cmp	x0, #0x0
   25bb8:	cset	w20, ne  // ne = any
   25bbc:	b	25bd0 <__sanitizer_sandbox_on_notify@@Base+0x2588>
   25bc0:	mov	x0, x22
   25bc4:	bl	25888 <__sanitizer_sandbox_on_notify@@Base+0x2240>
   25bc8:	ldr	x19, [sp, #64]
   25bcc:	mov	w20, #0x0                   	// #0
   25bd0:	ldr	x1, [sp, #72]
   25bd4:	mov	x0, x19
   25bd8:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   25bdc:	mov	x0, x23
   25be0:	bl	1d2b0 <__sanitizer_set_report_fd@@Base+0x5430>
   25be4:	mov	w0, w20
   25be8:	ldp	x21, x22, [sp, #16]
   25bec:	ldp	x23, x24, [sp, #32]
   25bf0:	ldp	x25, x30, [sp, #48]
   25bf4:	ldp	x19, x20, [sp], #128
   25bf8:	ret
   25bfc:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   25c00:	str	x0, [x19]
   25c04:	b	25ad4 <__sanitizer_sandbox_on_notify@@Base+0x248c>
   25c08:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   25c0c:	add	x0, x0, #0xbf8
   25c10:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   25c14:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   25c18:	mov	w20, #0x0                   	// #0
   25c1c:	b	25b9c <__sanitizer_sandbox_on_notify@@Base+0x2554>
   25c20:	stp	x19, x20, [sp, #-336]!
   25c24:	mov	x1, #0x9                   	// #9
   25c28:	mov	x4, #0x0                   	// #0
   25c2c:	mov	x3, #0x0                   	// #0
   25c30:	mov	x2, #0x0                   	// #0
   25c34:	stp	x21, x22, [sp, #16]
   25c38:	mov	x22, x0
   25c3c:	mov	w0, #0x1                   	// #1
   25c40:	stp	x23, x24, [sp, #32]
   25c44:	stp	x25, x26, [sp, #48]
   25c48:	stp	x27, x28, [sp, #64]
   25c4c:	str	x30, [sp, #80]
   25c50:	bl	1c848 <__sanitizer_set_report_fd@@Base+0x49c8>
   25c54:	bl	1c808 <__sanitizer_set_report_fd@@Base+0x4988>
   25c58:	ldr	x1, [x22, #112]
   25c5c:	cmp	x0, x1
   25c60:	b.ne	25f78 <__sanitizer_sandbox_on_notify@@Base+0x2930>  // b.any
   25c64:	add	x19, x22, #0x10
   25c68:	adrp	x27, 25000 <__sanitizer_sandbox_on_notify@@Base+0x19b8>
   25c6c:	mov	x0, x19
   25c70:	bl	1c690 <__sanitizer_set_report_fd@@Base+0x4810>
   25c74:	mov	x0, x19
   25c78:	bl	1c728 <__sanitizer_set_report_fd@@Base+0x48a8>
   25c7c:	add	x0, x27, #0x4b0
   25c80:	bl	22fa8 <__sanitizer_on_print@@Base+0x3688>
   25c84:	tst	w0, #0xff
   25c88:	b.eq	25eec <__sanitizer_sandbox_on_notify@@Base+0x28a4>  // b.none
   25c8c:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   25c90:	bl	1c808 <__sanitizer_set_report_fd@@Base+0x4988>
   25c94:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   25c98:	add	x1, x1, #0xa20
   25c9c:	ldr	x20, [x21, #4016]
   25ca0:	stp	x22, x1, [sp, #128]
   25ca4:	mov	x19, x0
   25ca8:	str	xzr, [sp, #144]
   25cac:	ldr	x1, [x20]
   25cb0:	stp	xzr, xzr, [sp, #152]
   25cb4:	cbz	x1, 25e88 <__sanitizer_sandbox_on_notify@@Base+0x2840>
   25cb8:	sub	x0, x1, #0x1
   25cbc:	tst	x0, x1
   25cc0:	b.ne	25edc <__sanitizer_sandbox_on_notify@@Base+0x2894>  // b.any
   25cc4:	mov	x2, #0x1fff                	// #8191
   25cc8:	add	x20, x1, x2
   25ccc:	neg	x1, x1
   25cd0:	mov	w2, #0x0                   	// #0
   25cd4:	and	x20, x20, x1
   25cd8:	adrp	x23, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   25cdc:	mov	x0, x20
   25ce0:	add	x1, x23, #0xc10
   25ce4:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   25ce8:	mov	x24, x0
   25cec:	ldr	x1, [sp, #144]
   25cf0:	add	x28, sp, #0x80
   25cf4:	ldr	x2, [sp, #160]
   25cf8:	lsl	x2, x2, #3
   25cfc:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   25d00:	ldp	x0, x1, [sp, #144]
   25d04:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   25d08:	stp	x24, x20, [sp, #144]
   25d0c:	adrp	x0, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   25d10:	ldr	x25, [x21, #4016]
   25d14:	str	x28, [x0, #1952]
   25d18:	str	w19, [sp, #168]
   25d1c:	ldr	x0, [x25]
   25d20:	cbz	x0, 25eb4 <__sanitizer_sandbox_on_notify@@Base+0x286c>
   25d24:	sub	x19, x0, #0x1
   25d28:	ands	x19, x19, x0
   25d2c:	b.ne	25edc <__sanitizer_sandbox_on_notify@@Base+0x2894>  // b.any
   25d30:	neg	x20, x0
   25d34:	mov	x24, #0x1fff                	// #8191
   25d38:	add	x0, x0, x24
   25d3c:	add	x1, x23, #0xc10
   25d40:	and	x20, x0, x20
   25d44:	mov	w2, #0x0                   	// #0
   25d48:	mov	x0, x20
   25d4c:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   25d50:	mov	x2, #0x0                   	// #0
   25d54:	mov	x1, #0x0                   	// #0
   25d58:	mov	x26, x0
   25d5c:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   25d60:	mov	x1, #0x0                   	// #0
   25d64:	mov	x0, #0x0                   	// #0
   25d68:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   25d6c:	cmp	x20, x24
   25d70:	b.ls	25efc <__sanitizer_sandbox_on_notify@@Base+0x28b4>  // b.plast
   25d74:	add	x23, sp, #0x68
   25d78:	mov	x2, #0x2000                	// #8192
   25d7c:	mov	w1, #0x0                   	// #0
   25d80:	mov	x0, x26
   25d84:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   25d88:	mov	w25, #0x4                   	// #4
   25d8c:	mov	x0, x23
   25d90:	mov	x2, #0x18                  	// #24
   25d94:	mov	w1, #0x0                   	// #0
   25d98:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   25d9c:	mov	x2, #0x2000                	// #8192
   25da0:	mov	x0, x23
   25da4:	adrp	x24, 25000 <__sanitizer_sandbox_on_notify@@Base+0x19b8>
   25da8:	adrp	x23, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   25dac:	add	x21, sp, #0xb8
   25db0:	add	x24, x24, #0x9b8
   25db4:	add	x23, x23, #0x650
   25db8:	mov	x1, #0x0                   	// #0
   25dbc:	movk	w25, #0x800, lsl #16
   25dc0:	str	x26, [sp, #104]
   25dc4:	str	x2, [sp, #120]
   25dc8:	bl	1c858 <__sanitizer_set_report_fd@@Base+0x49d8>
   25dcc:	nop
   25dd0:	mov	x2, #0x98                  	// #152
   25dd4:	mov	w1, #0x0                   	// #0
   25dd8:	mov	x0, x21
   25ddc:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   25de0:	ldr	w0, [x23, x19, lsl #2]
   25de4:	mov	x1, x21
   25de8:	add	x19, x19, #0x1
   25dec:	mov	x2, #0x0                   	// #0
   25df0:	str	x24, [sp, #184]
   25df4:	str	w25, [sp, #320]
   25df8:	bl	1c880 <__sanitizer_set_report_fd@@Base+0x4a00>
   25dfc:	cmp	x19, #0x7
   25e00:	b.ne	25dd0 <__sanitizer_sandbox_on_notify@@Base+0x2788>  // b.any
   25e04:	mov	x0, x28
   25e08:	bl	25a98 <__sanitizer_sandbox_on_notify@@Base+0x2450>
   25e0c:	tst	w0, #0xff
   25e10:	b.ne	25e98 <__sanitizer_sandbox_on_notify@@Base+0x2850>  // b.any
   25e14:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   25e18:	mov	w19, #0x3                   	// #3
   25e1c:	ldr	x0, [x0, #3816]
   25e20:	ldr	w0, [x0]
   25e24:	cbnz	w0, 25ecc <__sanitizer_sandbox_on_notify@@Base+0x2884>
   25e28:	add	x0, x27, #0x4b0
   25e2c:	bl	23020 <__sanitizer_on_print@@Base+0x3700>
   25e30:	tst	w0, #0xff
   25e34:	b.eq	25f68 <__sanitizer_sandbox_on_notify@@Base+0x2920>  // b.none
   25e38:	mov	x0, #0x1                   	// #1
   25e3c:	str	x0, [x22, #104]
   25e40:	adrp	x0, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   25e44:	mov	x1, x20
   25e48:	str	xzr, [x0, #1952]
   25e4c:	mov	x0, x26
   25e50:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   25e54:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   25e58:	add	x2, x1, #0xa20
   25e5c:	ldp	x0, x1, [sp, #144]
   25e60:	str	x2, [sp, #136]
   25e64:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   25e68:	mov	w0, w19
   25e6c:	ldp	x21, x22, [sp, #16]
   25e70:	ldp	x23, x24, [sp, #32]
   25e74:	ldp	x25, x26, [sp, #48]
   25e78:	ldp	x27, x28, [sp, #64]
   25e7c:	ldr	x30, [sp, #80]
   25e80:	ldp	x19, x20, [sp], #336
   25e84:	ret
   25e88:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   25e8c:	mov	x1, x0
   25e90:	str	x0, [x20]
   25e94:	b	25cb8 <__sanitizer_sandbox_on_notify@@Base+0x2670>
   25e98:	ldp	x2, x1, [x22]
   25e9c:	add	x0, x28, #0x8
   25ea0:	mov	w19, #0x0                   	// #0
   25ea4:	blr	x2
   25ea8:	mov	x0, x28
   25eac:	bl	25888 <__sanitizer_sandbox_on_notify@@Base+0x2240>
   25eb0:	b	25e28 <__sanitizer_sandbox_on_notify@@Base+0x27e0>
   25eb4:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   25eb8:	str	x0, [x25]
   25ebc:	sub	x19, x0, #0x1
   25ec0:	ands	x19, x19, x0
   25ec4:	b.eq	25d30 <__sanitizer_sandbox_on_notify@@Base+0x26e8>  // b.none
   25ec8:	b	25edc <__sanitizer_sandbox_on_notify@@Base+0x2894>
   25ecc:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   25ed0:	add	x0, x0, #0x560
   25ed4:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   25ed8:	b	25e28 <__sanitizer_sandbox_on_notify@@Base+0x27e0>
   25edc:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   25ee0:	add	x0, x0, #0xbf8
   25ee4:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   25ee8:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   25eec:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   25ef0:	add	x0, x0, #0x538
   25ef4:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   25ef8:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   25efc:	ldr	x21, [x21, #4016]
   25f00:	ldr	x0, [x21]
   25f04:	cbz	x0, 25f5c <__sanitizer_sandbox_on_notify@@Base+0x2914>
   25f08:	sub	x1, x0, #0x1
   25f0c:	tst	x1, x0
   25f10:	b.ne	25edc <__sanitizer_sandbox_on_notify@@Base+0x2894>  // b.any
   25f14:	mov	x1, #0x1fff                	// #8191
   25f18:	add	x21, x0, x1
   25f1c:	neg	x0, x0
   25f20:	add	x1, x23, #0xc10
   25f24:	and	x21, x21, x0
   25f28:	mov	w2, #0x0                   	// #0
   25f2c:	mov	x0, x21
   25f30:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   25f34:	mov	x2, #0x0                   	// #0
   25f38:	mov	x23, x0
   25f3c:	mov	x1, x26
   25f40:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   25f44:	mov	x1, x20
   25f48:	mov	x0, x26
   25f4c:	mov	x20, x21
   25f50:	mov	x26, x23
   25f54:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   25f58:	b	25d74 <__sanitizer_sandbox_on_notify@@Base+0x272c>
   25f5c:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   25f60:	str	x0, [x21]
   25f64:	b	25f08 <__sanitizer_sandbox_on_notify@@Base+0x28c0>
   25f68:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   25f6c:	add	x0, x0, #0x508
   25f70:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   25f74:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   25f78:	mov	w0, #0x4                   	// #4
   25f7c:	bl	1c3a0 <__sanitizer_set_report_fd@@Base+0x4520>
   25f80:	stp	x19, x20, [sp, #-208]!
   25f84:	mov	x4, #0x0                   	// #0
   25f88:	mov	x20, x0
   25f8c:	mov	x19, x1
   25f90:	mov	x3, #0x0                   	// #0
   25f94:	mov	x2, #0x0                   	// #0
   25f98:	mov	x1, #0x0                   	// #0
   25f9c:	mov	w0, #0x3                   	// #3
   25fa0:	stp	x21, x22, [sp, #16]
   25fa4:	stp	x23, x24, [sp, #32]
   25fa8:	stp	x25, x26, [sp, #48]
   25fac:	str	x30, [sp, #64]
   25fb0:	bl	1c848 <__sanitizer_set_report_fd@@Base+0x49c8>
   25fb4:	mov	x22, x0
   25fb8:	cbz	w0, 2611c <__sanitizer_sandbox_on_notify@@Base+0x2ad4>
   25fbc:	add	x24, sp, #0x58
   25fc0:	add	x0, x24, #0x10
   25fc4:	bl	1c680 <__sanitizer_set_report_fd@@Base+0x4800>
   25fc8:	stp	x20, x19, [sp, #88]
   25fcc:	adrp	x20, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   25fd0:	bl	1c7f8 <__sanitizer_set_report_fd@@Base+0x4978>
   25fd4:	str	xzr, [sp, #192]
   25fd8:	ldr	x20, [x20, #4016]
   25fdc:	str	x0, [sp, #200]
   25fe0:	ldr	x19, [x20]
   25fe4:	cbz	x19, 2610c <__sanitizer_sandbox_on_notify@@Base+0x2ac4>
   25fe8:	mov	w2, #0x0                   	// #0
   25fec:	add	x25, x19, #0x200, lsl #12
   25ff0:	mov	x0, x25
   25ff4:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   25ff8:	add	x1, x1, #0x580
   25ffc:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   26000:	mov	x1, x19
   26004:	mov	x23, x0
   26008:	bl	1db58 <__sanitizer_set_report_fd@@Base+0x5cd8>
   2600c:	tst	w0, #0xff
   26010:	b.eq	26238 <__sanitizer_sandbox_on_notify@@Base+0x2bf0>  // b.none
   26014:	add	x0, x24, #0x10
   26018:	bl	1c690 <__sanitizer_set_report_fd@@Base+0x4810>
   2601c:	adrp	x1, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   26020:	adrp	x20, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   26024:	add	x1, x1, #0x7a0
   26028:	add	x20, x20, #0x650
   2602c:	mov	x19, #0x0                   	// #0
   26030:	add	x0, x1, #0x10
   26034:	mov	x21, x1
   26038:	mov	x26, x0
   2603c:	bl	1c988 <__sanitizer_set_report_fd@@Base+0x4b08>
   26040:	ldr	w1, [x20, x19, lsl #2]
   26044:	mov	x0, x26
   26048:	add	x19, x19, #0x1
   2604c:	bl	1c9a8 <__sanitizer_set_report_fd@@Base+0x4b28>
   26050:	cmp	x19, #0x7
   26054:	b.ne	26040 <__sanitizer_sandbox_on_notify@@Base+0x29f8>  // b.any
   26058:	add	x21, x21, #0x90
   2605c:	mov	x1, x26
   26060:	mov	x2, x21
   26064:	mov	w0, #0x0                   	// #0
   26068:	bl	1c970 <__sanitizer_set_report_fd@@Base+0x4af0>
   2606c:	sxtw	x3, w0
   26070:	cbnz	w0, 26258 <__sanitizer_sandbox_on_notify@@Base+0x2c10>
   26074:	mov	x3, x24
   26078:	mov	w2, #0x700                 	// #1792
   2607c:	mov	x6, #0x0                   	// #0
   26080:	mov	x5, #0x0                   	// #0
   26084:	mov	x4, #0x0                   	// #0
   26088:	add	x1, x23, x25
   2608c:	movk	w2, #0x80, lsl #16
   26090:	adrp	x0, 25000 <__sanitizer_sandbox_on_notify@@Base+0x19b8>
   26094:	add	x0, x0, #0xc20
   26098:	bl	1d6c8 <__sanitizer_set_report_fd@@Base+0x5848>
   2609c:	mov	x2, #0x0                   	// #0
   260a0:	mov	x20, x0
   260a4:	mov	x1, x21
   260a8:	add	x19, sp, #0x54
   260ac:	mov	w0, #0x2                   	// #2
   260b0:	bl	1c970 <__sanitizer_set_report_fd@@Base+0x4af0>
   260b4:	mov	x0, x20
   260b8:	mov	x1, x19
   260bc:	str	wzr, [sp, #84]
   260c0:	bl	1c178 <__sanitizer_set_report_fd@@Base+0x42f8>
   260c4:	tst	w0, #0xff
   260c8:	b.eq	26168 <__sanitizer_sandbox_on_notify@@Base+0x2b20>  // b.none
   260cc:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   260d0:	ldr	x0, [x0, #3816]
   260d4:	ldr	w0, [x0]
   260d8:	cbnz	w0, 26214 <__sanitizer_sandbox_on_notify@@Base+0x2bcc>
   260dc:	add	x0, x24, #0x10
   260e0:	bl	1c728 <__sanitizer_set_report_fd@@Base+0x48a8>
   260e4:	mov	x1, x25
   260e8:	mov	x0, x23
   260ec:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   260f0:	cbz	w22, 26138 <__sanitizer_sandbox_on_notify@@Base+0x2af0>
   260f4:	ldp	x21, x22, [sp, #16]
   260f8:	ldp	x23, x24, [sp, #32]
   260fc:	ldp	x25, x26, [sp, #48]
   26100:	ldr	x30, [sp, #64]
   26104:	ldp	x19, x20, [sp], #208
   26108:	ret
   2610c:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   26110:	mov	x19, x0
   26114:	str	x0, [x20]
   26118:	b	25fe8 <__sanitizer_sandbox_on_notify@@Base+0x29a0>
   2611c:	mov	x4, #0x0                   	// #0
   26120:	mov	x3, #0x0                   	// #0
   26124:	mov	x2, #0x0                   	// #0
   26128:	mov	x1, #0x1                   	// #1
   2612c:	mov	w0, #0x4                   	// #4
   26130:	bl	1c848 <__sanitizer_set_report_fd@@Base+0x49c8>
   26134:	b	25fbc <__sanitizer_sandbox_on_notify@@Base+0x2974>
   26138:	mov	x4, #0x0                   	// #0
   2613c:	mov	x3, #0x0                   	// #0
   26140:	mov	x2, #0x0                   	// #0
   26144:	mov	x1, #0x0                   	// #0
   26148:	mov	w0, #0x4                   	// #4
   2614c:	bl	1c848 <__sanitizer_set_report_fd@@Base+0x49c8>
   26150:	ldp	x21, x22, [sp, #16]
   26154:	ldp	x23, x24, [sp, #32]
   26158:	ldp	x25, x26, [sp, #48]
   2615c:	ldr	x30, [sp, #64]
   26160:	ldp	x19, x20, [sp], #208
   26164:	ret
   26168:	adrp	x26, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2616c:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   26170:	ldr	x0, [x26, #3744]
   26174:	str	x20, [x0]
   26178:	bl	1c7f8 <__sanitizer_set_report_fd@@Base+0x4978>
   2617c:	ldr	x5, [x21, #3736]
   26180:	mov	x6, x0
   26184:	mov	x1, x20
   26188:	mov	x4, #0x0                   	// #0
   2618c:	mov	x3, #0x0                   	// #0
   26190:	mov	x2, #0x0                   	// #0
   26194:	mov	w0, #0x6d61                	// #28001
   26198:	str	x6, [x5]
   2619c:	movk	w0, #0x5961, lsl #16
   261a0:	bl	1c848 <__sanitizer_set_report_fd@@Base+0x49c8>
   261a4:	add	x0, x24, #0x10
   261a8:	bl	1c728 <__sanitizer_set_report_fd@@Base+0x48a8>
   261ac:	ldr	x0, [sp, #192]
   261b0:	cbnz	x0, 261c4 <__sanitizer_sandbox_on_notify@@Base+0x2b7c>
   261b4:	nop
   261b8:	bl	6500 <sched_yield@plt>
   261bc:	ldr	x0, [sp, #192]
   261c0:	cbz	x0, 261b8 <__sanitizer_sandbox_on_notify@@Base+0x2b70>
   261c4:	mov	w2, #0x40000000            	// #1073741824
   261c8:	mov	x1, #0x0                   	// #0
   261cc:	mov	w0, w20
   261d0:	bl	1c7e0 <__sanitizer_set_report_fd@@Base+0x4960>
   261d4:	mov	x1, x19
   261d8:	bl	1c178 <__sanitizer_set_report_fd@@Base+0x42f8>
   261dc:	tst	w0, #0xff
   261e0:	b.eq	26200 <__sanitizer_sandbox_on_notify@@Base+0x2bb8>  // b.none
   261e4:	ldr	w1, [sp, #84]
   261e8:	cmp	w1, #0x4
   261ec:	b.eq	261c4 <__sanitizer_sandbox_on_notify@@Base+0x2b7c>  // b.none
   261f0:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   261f4:	ldr	x0, [x0, #3816]
   261f8:	ldr	w0, [x0]
   261fc:	cbnz	w0, 26228 <__sanitizer_sandbox_on_notify@@Base+0x2be0>
   26200:	ldr	x26, [x26, #3744]
   26204:	ldr	x21, [x21, #3736]
   26208:	str	xzr, [x26]
   2620c:	str	xzr, [x21]
   26210:	b	260e4 <__sanitizer_sandbox_on_notify@@Base+0x2a9c>
   26214:	ldr	w1, [sp, #84]
   26218:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   2621c:	add	x0, x0, #0x5e8
   26220:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   26224:	b	260dc <__sanitizer_sandbox_on_notify@@Base+0x2a94>
   26228:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   2622c:	add	x0, x0, #0x618
   26230:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   26234:	b	26200 <__sanitizer_sandbox_on_notify@@Base+0x2bb8>
   26238:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   2623c:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   26240:	add	x2, x2, #0x598
   26244:	add	x0, x0, #0x358
   26248:	mov	x4, #0x0                   	// #0
   2624c:	mov	x3, #0x0                   	// #0
   26250:	mov	w1, #0x154                 	// #340
   26254:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   26258:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   2625c:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   26260:	add	x2, x2, #0x5d8
   26264:	add	x0, x0, #0x358
   26268:	mov	x4, #0x0                   	// #0
   2626c:	mov	w1, #0x1ae                 	// #430
   26270:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   26274:	nop
   26278:	ldr	x3, [x0, #24]
   2627c:	cbz	x3, 262ac <__sanitizer_sandbox_on_notify@@Base+0x2c64>
   26280:	ldr	x4, [x0, #8]
   26284:	mov	x0, #0x0                   	// #0
   26288:	b	26294 <__sanitizer_sandbox_on_notify@@Base+0x2c4c>
   2628c:	cmp	x0, x3
   26290:	b.eq	262ac <__sanitizer_sandbox_on_notify@@Base+0x2c64>  // b.none
   26294:	ldr	x2, [x4, x0, lsl #3]
   26298:	add	x0, x0, #0x1
   2629c:	cmp	x2, x1
   262a0:	b.ne	2628c <__sanitizer_sandbox_on_notify@@Base+0x2c44>  // b.any
   262a4:	mov	w0, #0x1                   	// #1
   262a8:	ret
   262ac:	mov	w0, #0x0                   	// #0
   262b0:	ret
   262b4:	nop
   262b8:	stp	x19, x20, [sp, #-64]!
   262bc:	stp	x21, x22, [sp, #16]
   262c0:	add	x21, x0, #0x8
   262c4:	ldr	x4, [x0, #16]
   262c8:	str	x1, [sp, #56]
   262cc:	ldr	x3, [x21, #16]
   262d0:	str	x30, [sp, #32]
   262d4:	lsr	x4, x4, #3
   262d8:	cmp	x3, x4
   262dc:	b.hi	263c8 <__sanitizer_sandbox_on_notify@@Base+0x2d80>  // b.pmore
   262e0:	mov	x19, x0
   262e4:	add	x20, x3, #0x1
   262e8:	b.eq	26314 <__sanitizer_sandbox_on_notify@@Base+0x2ccc>  // b.none
   262ec:	ldr	x22, [x0, #8]
   262f0:	str	x20, [x21, #16]
   262f4:	add	x0, x22, x3, lsl #3
   262f8:	add	x1, sp, #0x38
   262fc:	mov	x2, #0x8                   	// #8
   26300:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   26304:	ldp	x21, x22, [sp, #16]
   26308:	ldr	x30, [sp, #32]
   2630c:	ldp	x19, x20, [sp], #64
   26310:	ret
   26314:	tst	x3, x20
   26318:	b.eq	26354 <__sanitizer_sandbox_on_notify@@Base+0x2d0c>  // b.none
   2631c:	clz	x4, x20
   26320:	mov	w0, #0x3f                  	// #63
   26324:	sub	w0, w0, w4
   26328:	mov	x2, #0x1                   	// #1
   2632c:	add	w4, w0, #0x1
   26330:	lsl	x4, x2, x4
   26334:	cmp	x4, x20
   26338:	b.ls	26414 <__sanitizer_sandbox_on_notify@@Base+0x2dcc>  // b.plast
   2633c:	lsl	x0, x2, x0
   26340:	cmp	x20, x0
   26344:	b.ls	26430 <__sanitizer_sandbox_on_notify@@Base+0x2de8>  // b.plast
   26348:	cmp	x3, x4
   2634c:	b.hi	263ec <__sanitizer_sandbox_on_notify@@Base+0x2da4>  // b.pmore
   26350:	mov	x20, x4
   26354:	adrp	x22, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   26358:	lsl	x20, x20, #3
   2635c:	ldr	x22, [x22, #4016]
   26360:	ldr	x0, [x22]
   26364:	cbz	x0, 263e0 <__sanitizer_sandbox_on_notify@@Base+0x2d98>
   26368:	sub	x1, x0, #0x1
   2636c:	tst	x0, x1
   26370:	b.ne	26404 <__sanitizer_sandbox_on_notify@@Base+0x2dbc>  // b.any
   26374:	add	x20, x20, x1
   26378:	neg	x0, x0
   2637c:	and	x20, x20, x0
   26380:	mov	w2, #0x0                   	// #0
   26384:	mov	x0, x20
   26388:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   2638c:	add	x1, x1, #0xc10
   26390:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   26394:	ldr	x1, [x19, #8]
   26398:	mov	x22, x0
   2639c:	ldr	x2, [x21, #16]
   263a0:	lsl	x2, x2, #3
   263a4:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   263a8:	ldr	x0, [x19, #8]
   263ac:	ldr	x1, [x21, #8]
   263b0:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   263b4:	ldr	x3, [x21, #16]
   263b8:	str	x22, [x19, #8]
   263bc:	str	x20, [x21, #8]
   263c0:	add	x20, x3, #0x1
   263c4:	b	262f0 <__sanitizer_sandbox_on_notify@@Base+0x2ca8>
   263c8:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   263cc:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   263d0:	add	x2, x2, #0x8c8
   263d4:	add	x0, x0, #0xb98
   263d8:	mov	w1, #0x1cd                 	// #461
   263dc:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   263e0:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   263e4:	str	x0, [x22]
   263e8:	b	26368 <__sanitizer_sandbox_on_notify@@Base+0x2d20>
   263ec:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   263f0:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   263f4:	add	x2, x2, #0x8f8
   263f8:	add	x0, x0, #0xb98
   263fc:	mov	w1, #0x20c                 	// #524
   26400:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   26404:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   26408:	add	x0, x0, #0xbf8
   2640c:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   26410:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   26414:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   26418:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   2641c:	mov	x3, x20
   26420:	add	x2, x2, #0x680
   26424:	add	x0, x0, #0xb98
   26428:	mov	w1, #0x18a                 	// #394
   2642c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   26430:	mov	x4, x0
   26434:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   26438:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   2643c:	mov	x3, x20
   26440:	add	x2, x2, #0x708
   26444:	add	x0, x0, #0xb98
   26448:	mov	w1, #0x18b                 	// #395
   2644c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   26450:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   26454:	add	x0, x0, #0x3e8
   26458:	ret
   2645c:	nop
   26460:	mov	w1, #0x1                   	// #1
   26464:	strh	w1, [x0]
   26468:	ret
   2646c:	nop
   26470:	stp	x19, x20, [sp, #-80]!
   26474:	adrp	x0, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   26478:	mov	w1, #0x1                   	// #1
   2647c:	stp	x21, x22, [sp, #16]
   26480:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   26484:	add	x19, sp, #0x30
   26488:	add	x22, x0, #0x8b0
   2648c:	strh	w1, [x0, #2224]
   26490:	mov	x0, x19
   26494:	str	x30, [sp, #32]
   26498:	bl	19ce8 <__sanitizer_set_report_fd@@Base+0x1e68>
   2649c:	adrp	x20, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   264a0:	ldr	x21, [x21, #3632]
   264a4:	mov	x1, #0x10                  	// #16
   264a8:	add	x20, x20, #0x8b8
   264ac:	mov	x0, x21
   264b0:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   264b4:	mov	x2, x0
   264b8:	adrp	x3, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   264bc:	add	x3, x3, #0x670
   264c0:	mov	x0, x19
   264c4:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   264c8:	add	x1, x1, #0xe70
   264cc:	stp	x20, x22, [x2]
   264d0:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   264d4:	mov	x1, #0x10                  	// #16
   264d8:	mov	x0, x21
   264dc:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   264e0:	mov	x2, x0
   264e4:	add	x4, x22, #0x1
   264e8:	mov	x0, x19
   264ec:	adrp	x3, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   264f0:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   264f4:	add	x3, x3, #0x6c0
   264f8:	add	x1, x1, #0xdd0
   264fc:	stp	x20, x4, [x2]
   26500:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   26504:	bl	26450 <__sanitizer_sandbox_on_notify@@Base+0x2e08>
   26508:	mov	x1, x0
   2650c:	mov	x2, #0x0                   	// #0
   26510:	mov	x0, x19
   26514:	bl	19a80 <__sanitizer_set_report_fd@@Base+0x1c00>
   26518:	mov	x0, x19
   2651c:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   26520:	add	x1, x1, #0x6d8
   26524:	bl	199f8 <__sanitizer_set_report_fd@@Base+0x1b78>
   26528:	bl	19388 <__sanitizer_set_report_fd@@Base+0x1508>
   2652c:	ldrb	w0, [x22, #1]
   26530:	cbnz	w0, 26544 <__sanitizer_sandbox_on_notify@@Base+0x2efc>
   26534:	ldp	x21, x22, [sp, #16]
   26538:	ldr	x30, [sp, #32]
   2653c:	ldp	x19, x20, [sp], #80
   26540:	ret
   26544:	mov	x0, x19
   26548:	bl	19468 <__sanitizer_set_report_fd@@Base+0x15e8>
   2654c:	ldp	x21, x22, [sp, #16]
   26550:	ldr	x30, [sp, #32]
   26554:	ldp	x19, x20, [sp], #80
   26558:	ret
   2655c:	nop
   26560:	stp	x19, x20, [sp, #-64]!
   26564:	mov	x20, x0
   26568:	mov	x0, x1
   2656c:	stp	x21, x22, [sp, #16]
   26570:	mov	x22, x2
   26574:	mov	x21, x3
   26578:	stp	x23, x30, [sp, #32]
   2657c:	bl	14968 <_ZdaPvRKSt9nothrow_t@@Base+0x2be8>
   26580:	cbz	x0, 26654 <__sanitizer_sandbox_on_notify@@Base+0x300c>
   26584:	mov	x19, x0
   26588:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2658c:	ldr	x0, [x0, #4056]
   26590:	ldr	x23, [x0, #176]
   26594:	bl	1c7f8 <__sanitizer_set_report_fd@@Base+0x4978>
   26598:	mov	x4, x19
   2659c:	mov	x5, x0
   265a0:	mov	x3, x23
   265a4:	adrp	x6, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   265a8:	add	x6, x6, #0xce8
   265ac:	mov	x1, #0x1000                	// #4096
   265b0:	mov	x0, x20
   265b4:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   265b8:	add	x2, x2, #0x760
   265bc:	bl	1f928 <__sanitizer_on_print@@Base+0x8>
   265c0:	add	x2, sp, #0x3c
   265c4:	mov	x0, x20
   265c8:	mov	w1, #0x1                   	// #1
   265cc:	bl	1dba0 <__sanitizer_set_report_fd@@Base+0x5d20>
   265d0:	mov	w19, w0
   265d4:	cmn	w0, #0x1
   265d8:	b.eq	2663c <__sanitizer_sandbox_on_notify@@Base+0x2ff4>  // b.none
   265dc:	mov	w0, w19
   265e0:	mov	x4, #0x0                   	// #0
   265e4:	mov	x3, #0x0                   	// #0
   265e8:	mov	x2, #0x8                   	// #8
   265ec:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   265f0:	add	x1, x1, #0x850
   265f4:	bl	1dd28 <__sanitizer_set_report_fd@@Base+0x5ea8>
   265f8:	mov	x1, x22
   265fc:	lsl	x2, x21, #3
   26600:	mov	x4, #0x0                   	// #0
   26604:	mov	x3, #0x0                   	// #0
   26608:	mov	w0, w19
   2660c:	bl	1dd28 <__sanitizer_set_report_fd@@Base+0x5ea8>
   26610:	mov	w0, w19
   26614:	bl	1dcd0 <__sanitizer_set_report_fd@@Base+0x5e50>
   26618:	mov	x2, x21
   2661c:	mov	x1, x20
   26620:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   26624:	add	x0, x0, #0x7b0
   26628:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   2662c:	ldp	x21, x22, [sp, #16]
   26630:	ldp	x23, x30, [sp, #32]
   26634:	ldp	x19, x20, [sp], #64
   26638:	ret
   2663c:	ldr	w2, [sp, #60]
   26640:	mov	x1, x20
   26644:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   26648:	add	x0, x0, #0x770
   2664c:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   26650:	b	265dc <__sanitizer_sandbox_on_notify@@Base+0x2f94>
   26654:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   26658:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   2665c:	add	x2, x2, #0x6e8
   26660:	add	x0, x0, #0x6f8
   26664:	mov	x4, #0x0                   	// #0
   26668:	mov	x3, #0x0                   	// #0
   2666c:	mov	w1, #0x29                  	// #41
   26670:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   26674:	nop
   26678:	adrp	x1, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   2667c:	ldrb	w2, [x1, #2232]
   26680:	cbz	w2, 26688 <__sanitizer_sandbox_on_notify@@Base+0x3040>
   26684:	ret
   26688:	stp	x19, x30, [sp, #-16]!
   2668c:	adrp	x19, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   26690:	and	w0, w0, #0xff
   26694:	ldr	x19, [x19, #3896]
   26698:	strb	w0, [x1, #2232]
   2669c:	mov	x0, x19
   266a0:	bl	24930 <__sanitizer_sandbox_on_notify@@Base+0x12e8>
   266a4:	mov	x0, x19
   266a8:	ldp	x19, x30, [sp], #16
   266ac:	b	22fa8 <__sanitizer_on_print@@Base+0x3688>

00000000000266b0 <__sanitizer_cov_trace_pc_guard@@Base>:
   266b0:	ldr	w3, [x0]
   266b4:	cbnz	w3, 266bc <__sanitizer_cov_trace_pc_guard@@Base+0xc>
   266b8:	ret
   266bc:	adrp	x0, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   266c0:	add	x0, x0, #0x8b8
   266c4:	add	x0, x0, #0x8
   266c8:	str	x30, [sp, #-16]!
   266cc:	sub	w3, w3, #0x1
   266d0:	ldr	x4, [x0, #24]
   266d4:	ldr	x0, [x0, #8]
   266d8:	cmp	x3, x4
   266dc:	b.cs	266f8 <__sanitizer_cov_trace_pc_guard@@Base+0x48>  // b.hs, b.nlast
   266e0:	ldr	x1, [x0, x3, lsl #3]
   266e4:	cbnz	x1, 266f0 <__sanitizer_cov_trace_pc_guard@@Base+0x40>
   266e8:	sub	x30, x30, #0x1
   266ec:	str	x30, [x0, x3, lsl #3]
   266f0:	ldr	x30, [sp], #16
   266f4:	ret
   266f8:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   266fc:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   26700:	add	x2, x2, #0x118
   26704:	add	x0, x0, #0xb98
   26708:	mov	w1, #0x1c5                 	// #453
   2670c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>

0000000000026710 <__sanitizer_cov_trace_pc_guard_init@@Base>:
   26710:	cmp	x0, x1
   26714:	b.eq	26870 <__sanitizer_cov_trace_pc_guard_init@@Base+0x160>  // b.none
   26718:	stp	x19, x20, [sp, #-48]!
   2671c:	mov	x19, x0
   26720:	ldr	w0, [x0]
   26724:	str	x30, [sp, #40]
   26728:	cbz	w0, 26738 <__sanitizer_cov_trace_pc_guard_init@@Base+0x28>
   2672c:	ldr	x30, [sp, #40]
   26730:	ldp	x19, x20, [sp], #48
   26734:	ret
   26738:	stp	x21, x22, [sp, #16]
   2673c:	adrp	x22, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   26740:	add	x0, x22, #0x8b8
   26744:	mov	x20, x1
   26748:	add	x21, x0, #0x8
   2674c:	ldrb	w1, [x0, #8]
   26750:	cbz	w1, 26874 <__sanitizer_cov_trace_pc_guard_init@@Base+0x164>
   26754:	cmp	x19, x20
   26758:	mov	x1, x19
   2675c:	b.eq	26924 <__sanitizer_cov_trace_pc_guard_init@@Base+0x214>  // b.none
   26760:	add	x0, x22, #0x8b8
   26764:	ldr	x0, [x0, #32]
   26768:	mov	w21, w0
   2676c:	b.cs	26820 <__sanitizer_cov_trace_pc_guard_init@@Base+0x110>  // b.hs, b.nlast
   26770:	sub	x3, x20, #0x1
   26774:	sub	x3, x3, x19
   26778:	cmp	x3, #0xf
   2677c:	lsr	x3, x3, #2
   26780:	add	x4, x3, #0x1
   26784:	b.ls	26948 <__sanitizer_cov_trace_pc_guard_init@@Base+0x238>  // b.plast
   26788:	adrp	x5, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   2678c:	dup	v1.4s, w0
   26790:	movi	v3.4s, #0x4
   26794:	lsr	x2, x4, #2
   26798:	ldr	q0, [x5, #2112]
   2679c:	add	x2, x19, x2, lsl #4
   267a0:	movi	v2.4s, #0x1
   267a4:	add	v1.4s, v1.4s, v0.4s
   267a8:	mov	v0.16b, v1.16b
   267ac:	add	v1.4s, v1.4s, v3.4s
   267b0:	add	v0.4s, v0.4s, v2.4s
   267b4:	str	q0, [x1], #16
   267b8:	cmp	x1, x2
   267bc:	b.ne	267a8 <__sanitizer_cov_trace_pc_guard_init@@Base+0x98>  // b.any
   267c0:	and	x2, x4, #0xfffffffffffffffc
   267c4:	cmp	x4, x2
   267c8:	add	w1, w21, w2
   267cc:	add	x19, x19, x2, lsl #2
   267d0:	b.eq	26818 <__sanitizer_cov_trace_pc_guard_init@@Base+0x108>  // b.none
   267d4:	mov	x2, x19
   267d8:	add	w4, w1, #0x1
   267dc:	str	w4, [x2], #4
   267e0:	cmp	x20, x2
   267e4:	b.ls	26818 <__sanitizer_cov_trace_pc_guard_init@@Base+0x108>  // b.plast
   267e8:	add	w2, w1, #0x2
   267ec:	str	w2, [x19, #4]
   267f0:	add	x2, x19, #0x8
   267f4:	cmp	x20, x2
   267f8:	b.ls	26818 <__sanitizer_cov_trace_pc_guard_init@@Base+0x108>  // b.plast
   267fc:	add	w2, w1, #0x3
   26800:	str	w2, [x19, #8]
   26804:	add	x2, x19, #0xc
   26808:	cmp	x20, x2
   2680c:	b.ls	26818 <__sanitizer_cov_trace_pc_guard_init@@Base+0x108>  // b.plast
   26810:	add	w1, w1, #0x4
   26814:	str	w1, [x19, #12]
   26818:	add	w19, w21, #0x1
   2681c:	add	w21, w19, w3
   26820:	cmp	x0, w21, uxtw
   26824:	mov	w20, w21
   26828:	b.cs	26858 <__sanitizer_cov_trace_pc_guard_init@@Base+0x148>  // b.hs, b.nlast
   2682c:	add	x1, x22, #0x8b8
   26830:	add	x1, x1, #0x8
   26834:	ldr	x2, [x1, #16]
   26838:	cmp	x20, x2, lsr #3
   2683c:	b.hi	268b4 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1a4>  // b.pmore
   26840:	ldr	x21, [x1, #8]
   26844:	sub	x2, x20, x0
   26848:	mov	w1, #0x0                   	// #0
   2684c:	add	x0, x21, x0, lsl #3
   26850:	lsl	x2, x2, #3
   26854:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   26858:	add	x0, x22, #0x8b8
   2685c:	ldp	x21, x22, [sp, #16]
   26860:	str	x20, [x0, #32]
   26864:	ldr	x30, [sp, #40]
   26868:	ldp	x19, x20, [sp], #48
   2686c:	ret
   26870:	ret
   26874:	mov	w1, #0x1                   	// #1
   26878:	strb	w1, [x0, #8]
   2687c:	bl	26470 <__sanitizer_sandbox_on_notify@@Base+0x2e28>
   26880:	ldr	w0, [x19]
   26884:	str	xzr, [x21, #8]
   26888:	stp	xzr, xzr, [x21, #16]
   2688c:	cbz	w0, 26754 <__sanitizer_cov_trace_pc_guard_init@@Base+0x44>
   26890:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   26894:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   26898:	add	x2, x2, #0x7d8
   2689c:	add	x0, x0, #0x6f8
   268a0:	mov	x4, #0x0                   	// #0
   268a4:	mov	x3, #0x0                   	// #0
   268a8:	mov	w1, #0x78                  	// #120
   268ac:	str	x23, [sp, #32]
   268b0:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   268b4:	adrp	x19, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   268b8:	ldr	x19, [x19, #4016]
   268bc:	ldr	x0, [x19]
   268c0:	str	x23, [sp, #32]
   268c4:	cbz	x0, 26950 <__sanitizer_cov_trace_pc_guard_init@@Base+0x240>
   268c8:	sub	x19, x0, #0x1
   268cc:	tst	x19, x0
   268d0:	b.ne	2695c <__sanitizer_cov_trace_pc_guard_init@@Base+0x24c>  // b.any
   268d4:	add	x23, x22, #0x8b8
   268d8:	add	x19, x19, w21, uxtw #3
   268dc:	neg	x0, x0
   268e0:	mov	w2, #0x0                   	// #0
   268e4:	and	x19, x19, x0
   268e8:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   268ec:	mov	x0, x19
   268f0:	add	x1, x1, #0xc10
   268f4:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   268f8:	mov	x21, x0
   268fc:	ldr	x1, [x23, #16]
   26900:	ldr	x2, [x23, #32]
   26904:	lsl	x2, x2, #3
   26908:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   2690c:	ldp	x0, x1, [x23, #16]
   26910:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   26914:	stp	x21, x19, [x23, #16]
   26918:	ldr	x0, [x23, #32]
   2691c:	ldr	x23, [sp, #32]
   26920:	b	26844 <__sanitizer_cov_trace_pc_guard_init@@Base+0x134>
   26924:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   26928:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   2692c:	add	x2, x2, #0x7f0
   26930:	add	x0, x0, #0x6f8
   26934:	mov	x4, x19
   26938:	mov	x3, x19
   2693c:	mov	w1, #0x79                  	// #121
   26940:	str	x23, [sp, #32]
   26944:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   26948:	mov	w1, w0
   2694c:	b	267d4 <__sanitizer_cov_trace_pc_guard_init@@Base+0xc4>
   26950:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   26954:	str	x0, [x19]
   26958:	b	268c8 <__sanitizer_cov_trace_pc_guard_init@@Base+0x1b8>
   2695c:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   26960:	add	x0, x0, #0xbf8
   26964:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   26968:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   2696c:	nop

0000000000026970 <__sanitizer_cov_reset@@Base>:
   26970:	adrp	x0, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   26974:	add	x0, x0, #0x8b8
   26978:	add	x0, x0, #0x8
   2697c:	ldr	x2, [x0, #24]
   26980:	ldr	x0, [x0, #8]
   26984:	cbz	x2, 26994 <__sanitizer_cov_reset@@Base+0x24>
   26988:	lsl	x2, x2, #3
   2698c:	mov	w1, #0x0                   	// #0
   26990:	b	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   26994:	str	x30, [sp, #-16]!
   26998:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   2699c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   269a0:	add	x2, x2, #0x118
   269a4:	add	x0, x0, #0xb98
   269a8:	mov	x4, #0x0                   	// #0
   269ac:	mov	x3, #0x0                   	// #0
   269b0:	mov	w1, #0x1c5                 	// #453
   269b4:	bl	23150 <__sanitizer_on_print@@Base+0x3830>

00000000000269b8 <__sanitizer_cov_trace_cmp@@Base>:
   269b8:	ret
   269bc:	nop

00000000000269c0 <__sanitizer_cov_trace_cmp1@@Base>:
   269c0:	ret
   269c4:	nop

00000000000269c8 <__sanitizer_cov_trace_cmp2@@Base>:
   269c8:	ret
   269cc:	nop

00000000000269d0 <__sanitizer_cov_trace_cmp4@@Base>:
   269d0:	ret
   269d4:	nop

00000000000269d8 <__sanitizer_cov_trace_cmp8@@Base>:
   269d8:	ret
   269dc:	nop

00000000000269e0 <__sanitizer_cov_trace_const_cmp1@@Base>:
   269e0:	ret
   269e4:	nop

00000000000269e8 <__sanitizer_cov_trace_const_cmp2@@Base>:
   269e8:	ret
   269ec:	nop

00000000000269f0 <__sanitizer_cov_trace_const_cmp4@@Base>:
   269f0:	ret
   269f4:	nop

00000000000269f8 <__sanitizer_cov_trace_const_cmp8@@Base>:
   269f8:	ret
   269fc:	nop

0000000000026a00 <__sanitizer_cov_trace_switch@@Base>:
   26a00:	ret
   26a04:	nop

0000000000026a08 <__sanitizer_cov_trace_div4@@Base>:
   26a08:	ret
   26a0c:	nop

0000000000026a10 <__sanitizer_cov_trace_div8@@Base>:
   26a10:	ret
   26a14:	nop

0000000000026a18 <__sanitizer_cov_trace_gep@@Base>:
   26a18:	ret
   26a1c:	nop

0000000000026a20 <__sanitizer_cov_trace_pc_indir@@Base>:
   26a20:	ret
   26a24:	nop

0000000000026a28 <__sanitizer_cov_8bit_counters_init@@Base>:
   26a28:	ret
   26a2c:	nop

0000000000026a30 <__sanitizer_cov_pcs_init@@Base>:
   26a30:	ret
   26a34:	nop

0000000000026a38 <__sanitizer_dump_coverage@@Base>:
   26a38:	cbnz	x1, 26a40 <__sanitizer_dump_coverage@@Base+0x8>
   26a3c:	ret
   26a40:	stp	x19, x20, [sp, #-128]!
   26a44:	mov	x20, x1
   26a48:	mov	x19, x0
   26a4c:	mov	x2, #0x0                   	// #0
   26a50:	mov	x1, #0x0                   	// #0
   26a54:	mov	x0, #0x1000                	// #4096
   26a58:	stp	x21, x22, [sp, #16]
   26a5c:	lsl	x22, x20, #3
   26a60:	stp	x23, x24, [sp, #32]
   26a64:	mov	w23, #0x0                   	// #0
   26a68:	stp	x25, x26, [sp, #48]
   26a6c:	mov	x26, #0x0                   	// #0
   26a70:	stp	x27, x28, [sp, #64]
   26a74:	adrp	x28, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   26a78:	mov	x27, #0x0                   	// #0
   26a7c:	str	x30, [sp, #80]
   26a80:	bl	121c8 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   26a84:	mov	x2, #0x0                   	// #0
   26a88:	mov	x1, #0x0                   	// #0
   26a8c:	mov	x25, x0
   26a90:	mov	x0, #0x1000                	// #4096
   26a94:	bl	121c8 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   26a98:	mov	x24, x0
   26a9c:	mov	x2, #0x0                   	// #0
   26aa0:	mov	x1, #0x0                   	// #0
   26aa4:	mov	x0, x22
   26aa8:	bl	121c8 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   26aac:	mov	x1, x19
   26ab0:	mov	x2, x22
   26ab4:	mov	x21, x0
   26ab8:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   26abc:	mov	x0, x21
   26ac0:	mov	x1, x20
   26ac4:	mov	w2, #0x0                   	// #0
   26ac8:	bl	26c28 <__sanitizer_cov_dump@@Base+0x8>
   26acc:	add	x0, x28, #0x808
   26ad0:	mov	x19, #0x0                   	// #0
   26ad4:	str	x0, [sp, #104]
   26ad8:	b	26b0c <__sanitizer_dump_coverage@@Base+0xd4>
   26adc:	cbnz	w23, 26bc0 <__sanitizer_dump_coverage@@Base+0x188>
   26ae0:	mov	x3, x28
   26ae4:	mov	x0, x22
   26ae8:	mov	x26, x5
   26aec:	mov	w23, w4
   26af0:	mov	x1, x24
   26af4:	mov	x27, x19
   26af8:	mov	x2, #0x1000                	// #4096
   26afc:	bl	6240 <__sanitizer_get_module_and_offset_for_pc@plt>
   26b00:	add	x19, x19, #0x1
   26b04:	cmp	x20, x19
   26b08:	b.eq	26b5c <__sanitizer_dump_coverage@@Base+0x124>  // b.none
   26b0c:	ldr	x22, [x21, x19, lsl #3]
   26b10:	add	x28, x21, x19, lsl #3
   26b14:	mov	x3, x28
   26b18:	mov	x2, #0x0                   	// #0
   26b1c:	mov	x0, x22
   26b20:	mov	x1, #0x0                   	// #0
   26b24:	cbz	x22, 26b00 <__sanitizer_dump_coverage@@Base+0xc8>
   26b28:	bl	6240 <__sanitizer_get_module_and_offset_for_pc@plt>
   26b2c:	eor	w1, w23, #0x1
   26b30:	cbz	w0, 26bb0 <__sanitizer_dump_coverage@@Base+0x178>
   26b34:	ldr	x5, [x21, x19, lsl #3]
   26b38:	sub	x5, x22, x5
   26b3c:	cmp	x5, x26
   26b40:	cset	w4, ne  // ne = any
   26b44:	orr	w4, w4, w1
   26b48:	cbnz	w4, 26adc <__sanitizer_dump_coverage@@Base+0xa4>
   26b4c:	add	x19, x19, #0x1
   26b50:	mov	w23, #0x1                   	// #1
   26b54:	cmp	x20, x19
   26b58:	b.ne	26b0c <__sanitizer_dump_coverage@@Base+0xd4>  // b.any
   26b5c:	cbz	w23, 26b74 <__sanitizer_dump_coverage@@Base+0x13c>
   26b60:	sub	x3, x20, x27
   26b64:	add	x2, x21, x27, lsl #3
   26b68:	mov	x1, x24
   26b6c:	mov	x0, x25
   26b70:	bl	26560 <__sanitizer_sandbox_on_notify@@Base+0x2f18>
   26b74:	mov	x0, x25
   26b78:	mov	x1, #0x0                   	// #0
   26b7c:	bl	12770 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   26b80:	mov	x0, x24
   26b84:	mov	x1, #0x0                   	// #0
   26b88:	bl	12770 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   26b8c:	mov	x0, x21
   26b90:	mov	x1, #0x0                   	// #0
   26b94:	ldp	x21, x22, [sp, #16]
   26b98:	ldp	x23, x24, [sp, #32]
   26b9c:	ldp	x25, x26, [sp, #48]
   26ba0:	ldp	x27, x28, [sp, #64]
   26ba4:	ldr	x30, [sp, #80]
   26ba8:	ldp	x19, x20, [sp], #128
   26bac:	b	12770 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   26bb0:	ldr	x0, [sp, #104]
   26bb4:	mov	x1, x22
   26bb8:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   26bbc:	b	26b00 <__sanitizer_dump_coverage@@Base+0xc8>
   26bc0:	sub	x3, x19, x27
   26bc4:	add	x2, x21, x27, lsl #3
   26bc8:	mov	x1, x24
   26bcc:	mov	x0, x25
   26bd0:	str	x5, [sp, #112]
   26bd4:	str	w4, [sp, #124]
   26bd8:	bl	26560 <__sanitizer_sandbox_on_notify@@Base+0x2f18>
   26bdc:	ldr	w4, [sp, #124]
   26be0:	ldr	x5, [sp, #112]
   26be4:	b	26ae0 <__sanitizer_dump_coverage@@Base+0xa8>

0000000000026be8 <__sanitizer_dump_trace_pc_guard_coverage@@Base>:
   26be8:	adrp	x0, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   26bec:	add	x0, x0, #0x8b8
   26bf0:	add	x1, x0, #0x8
   26bf4:	ldrb	w0, [x0, #8]
   26bf8:	cbz	w0, 26c0c <__sanitizer_dump_trace_pc_guard_coverage@@Base+0x24>
   26bfc:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   26c00:	ldr	x0, [x0, #4056]
   26c04:	ldrb	w0, [x0, #169]
   26c08:	cbnz	w0, 26c10 <__sanitizer_dump_trace_pc_guard_coverage@@Base+0x28>
   26c0c:	ret
   26c10:	ldr	x0, [x1, #8]
   26c14:	ldr	x1, [x1, #24]
   26c18:	b	63b0 <__sanitizer_dump_coverage@plt>
   26c1c:	nop

0000000000026c20 <__sanitizer_cov_dump@@Base>:
   26c20:	b	6520 <__sanitizer_dump_trace_pc_guard_coverage@plt>
   26c24:	nop
   26c28:	cmp	x1, #0x1
   26c2c:	mov	x4, #0x1                   	// #1
   26c30:	b.ls	26d24 <__sanitizer_cov_dump@@Base+0x104>  // b.plast
   26c34:	nop
   26c38:	ldr	x5, [x0, x4, lsl #3]
   26c3c:	mov	x2, x4
   26c40:	sub	x3, x2, #0x1
   26c44:	mov	x6, x2
   26c48:	lsr	x2, x3, #1
   26c4c:	ldr	x3, [x0, x2, lsl #3]
   26c50:	cmp	x3, x5
   26c54:	b.cs	26c64 <__sanitizer_cov_dump@@Base+0x44>  // b.hs, b.nlast
   26c58:	str	x3, [x0, x6, lsl #3]
   26c5c:	str	x5, [x0, x2, lsl #3]
   26c60:	cbnz	x2, 26c40 <__sanitizer_cov_dump@@Base+0x20>
   26c64:	add	x2, x4, #0x1
   26c68:	cmp	x1, x2
   26c6c:	b.eq	26cbc <__sanitizer_cov_dump@@Base+0x9c>  // b.none
   26c70:	mov	x4, x2
   26c74:	b	26c38 <__sanitizer_cov_dump@@Base+0x18>
   26c78:	cmp	x1, x4
   26c7c:	b.cs	26cb4 <__sanitizer_cov_dump@@Base+0x94>  // b.hs, b.nlast
   26c80:	lsl	x5, x5, #4
   26c84:	add	x7, x0, x5
   26c88:	ldr	x3, [x0, x2, lsl #3]
   26c8c:	ldr	x5, [x0, x5]
   26c90:	cmp	x5, x3
   26c94:	b.ls	26cb4 <__sanitizer_cov_dump@@Base+0x94>  // b.plast
   26c98:	cmp	x1, x2
   26c9c:	b.eq	26cb4 <__sanitizer_cov_dump@@Base+0x94>  // b.none
   26ca0:	ldr	x3, [x0, x2, lsl #3]
   26ca4:	str	x5, [x0, x2, lsl #3]
   26ca8:	str	x3, [x7]
   26cac:	cmp	x1, x4
   26cb0:	b.cc	26d1c <__sanitizer_cov_dump@@Base+0xfc>  // b.lo, b.ul, b.last
   26cb4:	subs	x4, x4, #0x1
   26cb8:	b.eq	26d24 <__sanitizer_cov_dump@@Base+0x104>  // b.none
   26cbc:	ldr	x3, [x0, x4, lsl #3]
   26cc0:	mov	x2, #0x0                   	// #0
   26cc4:	ldr	x1, [x0]
   26cc8:	str	x3, [x0]
   26ccc:	str	x1, [x0, x4, lsl #3]
   26cd0:	lsl	x1, x2, #1
   26cd4:	add	x5, x2, #0x1
   26cd8:	add	x3, x1, #0x1
   26cdc:	add	x1, x1, #0x2
   26ce0:	cmp	x3, x4
   26ce4:	b.cs	26c78 <__sanitizer_cov_dump@@Base+0x58>  // b.hs, b.nlast
   26ce8:	ldr	x6, [x0, x3, lsl #3]
   26cec:	add	x8, x0, x3, lsl #3
   26cf0:	ldr	x7, [x0, x2, lsl #3]
   26cf4:	cmp	x7, x6
   26cf8:	b.cs	26c78 <__sanitizer_cov_dump@@Base+0x58>  // b.hs, b.nlast
   26cfc:	cmp	x1, x4
   26d00:	b.cc	26d28 <__sanitizer_cov_dump@@Base+0x108>  // b.lo, b.ul, b.last
   26d04:	cmp	x3, x2
   26d08:	b.eq	26cb4 <__sanitizer_cov_dump@@Base+0x94>  // b.none
   26d0c:	mov	x1, x3
   26d10:	ldr	x5, [x0, x2, lsl #3]
   26d14:	str	x6, [x0, x2, lsl #3]
   26d18:	str	x5, [x0, x3, lsl #3]
   26d1c:	mov	x2, x1
   26d20:	b	26cd0 <__sanitizer_cov_dump@@Base+0xb0>
   26d24:	ret
   26d28:	lsl	x9, x5, #4
   26d2c:	add	x7, x0, x5, lsl #4
   26d30:	ldr	x5, [x0, x9]
   26d34:	cmp	x6, x5
   26d38:	b.cc	26c98 <__sanitizer_cov_dump@@Base+0x78>  // b.lo, b.ul, b.last
   26d3c:	mov	x5, x6
   26d40:	mov	x7, x8
   26d44:	mov	x1, x3
   26d48:	b	26c98 <__sanitizer_cov_dump@@Base+0x78>
   26d4c:	nop
   26d50:	stp	x19, x20, [sp, #-64]!
   26d54:	mov	x20, x0
   26d58:	add	x19, sp, #0x20
   26d5c:	stp	x21, x30, [sp, #16]
   26d60:	mov	x0, x19
   26d64:	mov	x21, x1
   26d68:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   26d6c:	add	x1, x1, #0x858
   26d70:	bl	27008 <__sanitizer_cov_dump@@Base+0x3e8>
   26d74:	adrp	x4, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   26d78:	mov	x3, x21
   26d7c:	mov	x2, x20
   26d80:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   26d84:	ldr	x1, [x4, #4024]
   26d88:	add	x0, x0, #0x868
   26d8c:	ldr	x1, [x1]
   26d90:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   26d94:	mov	x0, x19
   26d98:	bl	27058 <__sanitizer_cov_dump@@Base+0x438>
   26d9c:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   26da0:	stp	x19, x20, [sp, #-64]!
   26da4:	mov	x20, x0
   26da8:	add	x19, sp, #0x20
   26dac:	stp	x21, x30, [sp, #16]
   26db0:	mov	x0, x19
   26db4:	mov	x21, x1
   26db8:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   26dbc:	add	x1, x1, #0x8d0
   26dc0:	bl	27008 <__sanitizer_cov_dump@@Base+0x3e8>
   26dc4:	adrp	x4, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   26dc8:	mov	x3, x21
   26dcc:	mov	x2, x20
   26dd0:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   26dd4:	ldr	x1, [x4, #4024]
   26dd8:	add	x0, x0, #0x8e8
   26ddc:	ldr	x1, [x1]
   26de0:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   26de4:	mov	x0, x19
   26de8:	bl	27058 <__sanitizer_cov_dump@@Base+0x438>
   26dec:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   26df0:	stp	x19, x20, [sp, #-80]!
   26df4:	adrp	x19, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   26df8:	mov	x2, x1
   26dfc:	stp	x21, x22, [sp, #16]
   26e00:	add	x21, sp, #0x30
   26e04:	mov	x20, x0
   26e08:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   26e0c:	mov	x0, x21
   26e10:	add	x1, x1, #0x958
   26e14:	str	x30, [sp, #32]
   26e18:	bl	27008 <__sanitizer_cov_dump@@Base+0x3e8>
   26e1c:	ldr	x19, [x19, #4016]
   26e20:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   26e24:	ldr	x0, [x0, #4024]
   26e28:	ldr	x3, [x19]
   26e2c:	ldr	x22, [x0]
   26e30:	cbz	x3, 26e54 <__sanitizer_cov_dump@@Base+0x234>
   26e34:	mov	x2, x20
   26e38:	mov	x1, x22
   26e3c:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   26e40:	add	x0, x0, #0x970
   26e44:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   26e48:	mov	x0, x21
   26e4c:	bl	27058 <__sanitizer_cov_dump@@Base+0x438>
   26e50:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   26e54:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   26e58:	mov	x3, x0
   26e5c:	str	x0, [x19]
   26e60:	b	26e34 <__sanitizer_cov_dump@@Base+0x214>
   26e64:	nop
   26e68:	stp	x19, x20, [sp, #-64]!
   26e6c:	mov	x2, x1
   26e70:	mov	x20, x0
   26e74:	add	x19, sp, #0x20
   26e78:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   26e7c:	mov	x0, x19
   26e80:	add	x1, x1, #0x9f0
   26e84:	str	x30, [sp, #16]
   26e88:	bl	27008 <__sanitizer_cov_dump@@Base+0x3e8>
   26e8c:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   26e90:	mov	x2, x20
   26e94:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   26e98:	add	x0, x0, #0xa10
   26e9c:	ldr	x1, [x1, #4024]
   26ea0:	ldr	x1, [x1]
   26ea4:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   26ea8:	mov	x0, x19
   26eac:	bl	27058 <__sanitizer_cov_dump@@Base+0x438>
   26eb0:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   26eb4:	nop
   26eb8:	stp	x19, x20, [sp, #-80]!
   26ebc:	mov	x20, x1
   26ec0:	add	x19, sp, #0x30
   26ec4:	stp	x21, x30, [sp, #16]
   26ec8:	mov	x21, x0
   26ecc:	mov	x0, x19
   26ed0:	str	x1, [sp, #40]
   26ed4:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   26ed8:	add	x1, x1, #0xa60
   26edc:	bl	27008 <__sanitizer_cov_dump@@Base+0x3e8>
   26ee0:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   26ee4:	mov	x3, x21
   26ee8:	mov	x2, x20
   26eec:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   26ef0:	ldr	x1, [x1, #4024]
   26ef4:	add	x0, x0, #0xa80
   26ef8:	ldr	x1, [x1]
   26efc:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   26f00:	mov	x0, x19
   26f04:	bl	27058 <__sanitizer_cov_dump@@Base+0x438>
   26f08:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   26f0c:	nop
   26f10:	stp	x19, x20, [sp, #-64]!
   26f14:	mov	x2, x1
   26f18:	mov	x20, x0
   26f1c:	add	x19, sp, #0x20
   26f20:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   26f24:	mov	x0, x19
   26f28:	add	x1, x1, #0xb20
   26f2c:	str	x30, [sp, #16]
   26f30:	bl	27008 <__sanitizer_cov_dump@@Base+0x3e8>
   26f34:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   26f38:	mov	x2, x20
   26f3c:	mov	x3, #0x8                   	// #8
   26f40:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   26f44:	ldr	x1, [x1, #4024]
   26f48:	add	x0, x0, #0xb48
   26f4c:	ldr	x1, [x1]
   26f50:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   26f54:	mov	x0, x19
   26f58:	bl	27058 <__sanitizer_cov_dump@@Base+0x438>
   26f5c:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   26f60:	stp	x19, x20, [sp, #-80]!
   26f64:	mov	x20, x0
   26f68:	add	x19, sp, #0x30
   26f6c:	stp	x21, x30, [sp, #16]
   26f70:	mov	x0, x19
   26f74:	mov	x21, x1
   26f78:	str	x1, [sp, #40]
   26f7c:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   26f80:	add	x1, x1, #0xbd0
   26f84:	bl	27008 <__sanitizer_cov_dump@@Base+0x3e8>
   26f88:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   26f8c:	mov	x3, x21
   26f90:	mov	x2, x20
   26f94:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   26f98:	ldr	x1, [x1, #4024]
   26f9c:	add	x0, x0, #0xbe8
   26fa0:	ldr	x1, [x1]
   26fa4:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   26fa8:	mov	x0, x19
   26fac:	bl	27058 <__sanitizer_cov_dump@@Base+0x438>
   26fb0:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   26fb4:	nop
   26fb8:	stp	x19, x20, [sp, #-64]!
   26fbc:	mov	x2, x1
   26fc0:	mov	x20, x0
   26fc4:	add	x19, sp, #0x20
   26fc8:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   26fcc:	mov	x0, x19
   26fd0:	add	x1, x1, #0xc40
   26fd4:	str	x30, [sp, #16]
   26fd8:	bl	27008 <__sanitizer_cov_dump@@Base+0x3e8>
   26fdc:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   26fe0:	mov	x2, x20
   26fe4:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   26fe8:	add	x0, x0, #0xc50
   26fec:	ldr	x1, [x1, #4024]
   26ff0:	ldr	x1, [x1]
   26ff4:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   26ff8:	mov	x0, x19
   26ffc:	bl	27058 <__sanitizer_cov_dump@@Base+0x438>
   27000:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   27004:	nop
   27008:	stp	x19, x20, [sp, #-32]!
   2700c:	mov	x19, x0
   27010:	mov	x20, x2
   27014:	stp	x21, x30, [sp, #16]
   27018:	mov	x21, x1
   2701c:	bl	2d810 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f28>
   27020:	stp	x21, x20, [x19, #8]
   27024:	bl	2c950 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4068>
   27028:	strb	w0, [x19, #24]
   2702c:	ldp	x21, x30, [sp, #16]
   27030:	tst	w0, #0xff
   27034:	ldp	x19, x20, [sp], #32
   27038:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2703c:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   27040:	add	x2, x2, #0x3e8
   27044:	add	x1, x1, #0x718
   27048:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   2704c:	csel	x1, x1, x2, ne  // ne = any
   27050:	add	x0, x0, #0xcb8
   27054:	b	1fc30 <__sanitizer_on_print@@Base+0x310>
   27058:	stp	x19, x30, [sp, #-16]!
   2705c:	mov	x19, x0
   27060:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   27064:	add	x2, x2, #0x3e8
   27068:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   2706c:	ldrb	w3, [x19, #24]
   27070:	add	x1, x1, #0x180
   27074:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   27078:	add	x0, x0, #0xcb8
   2707c:	cmp	w3, #0x0
   27080:	csel	x1, x1, x2, ne  // ne = any
   27084:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   27088:	ldr	x0, [x19, #16]
   2708c:	bl	27f58 <__sanitizer_cov_dump@@Base+0x1338>
   27090:	bl	121b8 <_ZdaPvRKSt9nothrow_t@@Base+0x438>
   27094:	ldp	x0, x1, [x19, #8]
   27098:	mov	x2, #0x0                   	// #0
   2709c:	bl	2ca08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4120>
   270a0:	mov	x0, x19
   270a4:	ldp	x19, x30, [sp], #16
   270a8:	b	2d978 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5090>
   270ac:	nop
   270b0:	ldr	x0, [x0]
   270b4:	ldr	w0, [x0, #8]
   270b8:	ret
   270bc:	nop
   270c0:	ldr	x0, [x0]
   270c4:	ldr	w0, [x0, #12]
   270c8:	and	w0, w0, #0xfffff
   270cc:	ret
   270d0:	ldr	x0, [x0]
   270d4:	add	x0, x0, #0xc
   270d8:	ldxr	w1, [x0]
   270dc:	add	w2, w1, #0x1
   270e0:	stlxr	w3, w2, [x0]
   270e4:	cbnz	w3, 270d8 <__sanitizer_cov_dump@@Base+0x4b8>
   270e8:	mvn	x0, x1
   270ec:	dmb	ish
   270f0:	tst	x0, #0xfffff
   270f4:	b.eq	270fc <__sanitizer_cov_dump@@Base+0x4dc>  // b.none
   270f8:	ret
   270fc:	str	x30, [sp, #-16]!
   27100:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   27104:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   27108:	mov	x4, #0x100000              	// #1048576
   2710c:	add	x2, x2, #0xc98
   27110:	add	x0, x0, #0xcc8
   27114:	mov	x3, x4
   27118:	mov	w1, #0x55                  	// #85
   2711c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   27120:	adrp	x0, 930000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e0>
   27124:	add	x0, x0, #0xce0
   27128:	ret
   2712c:	nop
   27130:	mov	w2, w0
   27134:	cbz	w0, 271ac <__sanitizer_cov_dump@@Base+0x58c>
   27138:	str	x30, [sp, #-16]!
   2713c:	and	x3, x2, #0x7fffffff
   27140:	mov	w4, w0
   27144:	cmp	x3, w0, uxtw
   27148:	b.ne	271e0 <__sanitizer_cov_dump@@Base+0x5c0>  // b.any
   2714c:	lsr	w3, w0, #23
   27150:	adrp	x0, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   27154:	add	x0, x0, #0x8e0
   27158:	mov	x5, #0xfffff               	// #1048575
   2715c:	lsl	x3, x3, #12
   27160:	add	x6, x3, #0x1, lsl #12
   27164:	cmp	x3, x5
   27168:	b.hi	271f8 <__sanitizer_cov_dump@@Base+0x5d8>  // b.pmore
   2716c:	ldr	x1, [x0, x3, lsl #3]
   27170:	ands	x1, x1, #0xfffffffffffffffe
   27174:	b.ne	27184 <__sanitizer_cov_dump@@Base+0x564>  // b.any
   27178:	b	271c4 <__sanitizer_cov_dump@@Base+0x5a4>
   2717c:	ldr	x1, [x1]
   27180:	cbz	x1, 271c4 <__sanitizer_cov_dump@@Base+0x5a4>
   27184:	ldr	w4, [x1, #8]
   27188:	cmp	w2, w4
   2718c:	b.ne	2717c <__sanitizer_cov_dump@@Base+0x55c>  // b.any
   27190:	ldp	w2, w3, [x1, #16]
   27194:	add	x0, x1, #0x18
   27198:	mov	x1, #0x0                   	// #0
   2719c:	bfxil	x1, x2, #0, #32
   271a0:	ldr	x30, [sp], #16
   271a4:	bfi	x1, x3, #32, #32
   271a8:	ret
   271ac:	mov	x1, #0x0                   	// #0
   271b0:	mov	w3, #0x0                   	// #0
   271b4:	bfxil	x1, x2, #0, #32
   271b8:	mov	x0, #0x0                   	// #0
   271bc:	bfi	x1, x3, #32, #32
   271c0:	ret
   271c4:	add	x3, x3, #0x1
   271c8:	cmp	x6, x3
   271cc:	b.ne	27164 <__sanitizer_cov_dump@@Base+0x544>  // b.any
   271d0:	mov	w3, #0x0                   	// #0
   271d4:	mov	w2, #0x0                   	// #0
   271d8:	mov	x0, #0x0                   	// #0
   271dc:	b	27198 <__sanitizer_cov_dump@@Base+0x578>
   271e0:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   271e4:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   271e8:	add	x2, x2, #0xd20
   271ec:	add	x0, x0, #0xd50
   271f0:	mov	w1, #0x8d                  	// #141
   271f4:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   271f8:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   271fc:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   27200:	add	x2, x2, #0xdb0
   27204:	add	x0, x0, #0xd50
   27208:	mov	x4, #0x100000              	// #1048576
   2720c:	mov	w1, #0x92                  	// #146
   27210:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   27214:	nop
   27218:	stp	x19, x20, [sp, #-48]!
   2721c:	adrp	x19, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   27220:	add	x19, x19, #0x8e0
   27224:	stp	x23, x30, [sp, #32]
   27228:	mov	x23, x19
   2722c:	stp	x21, x22, [sp, #16]
   27230:	mov	w21, #0x0                   	// #0
   27234:	nop
   27238:	sxtw	x22, w21
   2723c:	mov	w20, #0x0                   	// #0
   27240:	ldr	x0, [x23, x22, lsl #3]
   27244:	orr	x2, x0, #0x1
   27248:	tbnz	w0, #0, 2726c <__sanitizer_cov_dump@@Base+0x64c>
   2724c:	ldxr	x1, [x19]
   27250:	cmp	x1, x0
   27254:	b.ne	27260 <__sanitizer_cov_dump@@Base+0x640>  // b.any
   27258:	stlxr	w3, x2, [x19]
   2725c:	cbnz	w3, 2724c <__sanitizer_cov_dump@@Base+0x62c>
   27260:	dmb	ish
   27264:	cmp	x0, x1
   27268:	b.eq	27288 <__sanitizer_cov_dump@@Base+0x668>  // b.none
   2726c:	cmp	w20, #0x9
   27270:	b.gt	2727c <__sanitizer_cov_dump@@Base+0x65c>
   27274:	add	w20, w20, #0x1
   27278:	b	27240 <__sanitizer_cov_dump@@Base+0x620>
   2727c:	add	w20, w20, #0x1
   27280:	bl	1c390 <__sanitizer_set_report_fd@@Base+0x4510>
   27284:	b	27240 <__sanitizer_cov_dump@@Base+0x620>
   27288:	add	w21, w21, #0x1
   2728c:	add	x19, x19, #0x8
   27290:	cmp	w21, #0x100, lsl #12
   27294:	b.ne	27238 <__sanitizer_cov_dump@@Base+0x618>  // b.any
   27298:	ldp	x21, x22, [sp, #16]
   2729c:	ldp	x23, x30, [sp, #32]
   272a0:	ldp	x19, x20, [sp], #48
   272a4:	ret
   272a8:	adrp	x3, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   272ac:	add	x3, x3, #0x8e0
   272b0:	mov	w0, #0x0                   	// #0
   272b4:	nop
   272b8:	sxtw	x2, w0
   272bc:	ldr	x1, [x3, x2, lsl #3]
   272c0:	dmb	ish
   272c4:	and	x1, x1, #0xfffffffffffffffe
   272c8:	str	x1, [x3, x2, lsl #3]
   272cc:	add	w0, w0, #0x1
   272d0:	cmp	w0, #0x100, lsl #12
   272d4:	b.ne	272b8 <__sanitizer_cov_dump@@Base+0x698>  // b.any
   272d8:	ret
   272dc:	nop
   272e0:	ldr	w2, [x0]
   272e4:	ldr	w0, [x1]
   272e8:	cmp	w2, w0
   272ec:	cset	w0, cc  // cc = lo, ul, last
   272f0:	ret
   272f4:	nop
   272f8:	stp	x19, x20, [sp, #-96]!
   272fc:	mov	x19, x0
   27300:	stp	x25, x26, [sp, #48]
   27304:	adrp	x25, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   27308:	add	x0, x25, #0x8e0
   2730c:	add	x0, x0, #0x800, lsl #12
   27310:	stp	x21, x22, [sp, #16]
   27314:	stp	x23, x24, [sp, #32]
   27318:	stp	x27, x30, [sp, #64]
   2731c:	ldr	x0, [x0, #1024]
   27320:	str	xzr, [x19]
   27324:	stp	xzr, xzr, [x19, #8]
   27328:	adds	x0, x0, #0x64
   2732c:	b.ne	275e4 <__sanitizer_cov_dump@@Base+0x9c4>  // b.any
   27330:	adrp	x22, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   27334:	add	x24, sp, #0x50
   27338:	mov	w23, #0x0                   	// #0
   2733c:	ldr	x22, [x22, #4016]
   27340:	add	x0, x25, #0x8e0
   27344:	sxtw	x1, w23
   27348:	ldr	x20, [x0, x1, lsl #3]
   2734c:	adrp	x26, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   27350:	ands	x20, x20, #0xfffffffffffffffe
   27354:	add	x26, x26, #0xc10
   27358:	b.eq	273a0 <__sanitizer_cov_dump@@Base+0x780>  // b.none
   2735c:	ldp	x4, x0, [x19, #8]
   27360:	ldr	w1, [x20, #8]
   27364:	str	w1, [sp, #80]
   27368:	str	x20, [sp, #88]
   2736c:	lsr	x4, x4, #4
   27370:	cmp	x0, x4
   27374:	b.hi	275c8 <__sanitizer_cov_dump@@Base+0x9a8>  // b.pmore
   27378:	add	x3, x0, #0x1
   2737c:	b.eq	27528 <__sanitizer_cov_dump@@Base+0x908>  // b.none
   27380:	ldr	x27, [x19]
   27384:	str	x3, [x19, #16]
   27388:	add	x0, x27, x0, lsl #4
   2738c:	mov	x1, x24
   27390:	mov	x2, #0x10                  	// #16
   27394:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   27398:	ldr	x20, [x20]
   2739c:	cbnz	x20, 2735c <__sanitizer_cov_dump@@Base+0x73c>
   273a0:	add	w23, w23, #0x1
   273a4:	cmp	w23, #0x100, lsl #12
   273a8:	b.ne	27340 <__sanitizer_cov_dump@@Base+0x720>  // b.any
   273ac:	ldr	x2, [x19, #16]
   273b0:	cmp	x2, #0x1
   273b4:	b.ls	27510 <__sanitizer_cov_dump@@Base+0x8f0>  // b.plast
   273b8:	ldr	x0, [x19]
   273bc:	mov	x1, #0x1                   	// #1
   273c0:	lsl	x4, x1, #4
   273c4:	mov	x3, x1
   273c8:	ldr	w8, [x0, x4]
   273cc:	sub	x5, x3, #0x1
   273d0:	mov	x4, x3
   273d4:	lsr	x3, x5, #1
   273d8:	add	x4, x0, x4, lsl #4
   273dc:	lsl	x5, x3, #4
   273e0:	add	x9, x0, x5
   273e4:	ldr	w6, [x0, x5]
   273e8:	cmp	w6, w8
   273ec:	b.cs	27408 <__sanitizer_cov_dump@@Base+0x7e8>  // b.hs, b.nlast
   273f0:	ldp	x6, x7, [x9]
   273f4:	ldr	x10, [x4, #8]
   273f8:	stp	x6, x7, [x4]
   273fc:	str	w8, [x0, x5]
   27400:	str	x10, [x9, #8]
   27404:	cbnz	x3, 273cc <__sanitizer_cov_dump@@Base+0x7ac>
   27408:	add	x1, x1, #0x1
   2740c:	cmp	x2, x1
   27410:	b.ne	273c0 <__sanitizer_cov_dump@@Base+0x7a0>  // b.any
   27414:	sub	x8, x2, #0x1
   27418:	add	x2, x0, x2, lsl #4
   2741c:	ldp	x6, x7, [x2, #-16]
   27420:	mov	x3, #0x0                   	// #0
   27424:	ldr	w4, [x0]
   27428:	add	x5, x3, #0x1
   2742c:	ldr	x1, [x0, #8]
   27430:	stp	x6, x7, [x0]
   27434:	stur	w4, [x2, #-16]
   27438:	stur	x1, [x2, #-8]
   2743c:	lsl	x1, x3, #1
   27440:	add	x7, x1, #0x1
   27444:	add	x1, x1, #0x2
   27448:	cmp	x7, x8
   2744c:	b.cs	274b4 <__sanitizer_cov_dump@@Base+0x894>  // b.hs, b.nlast
   27450:	lsl	x6, x7, #4
   27454:	lsl	x4, x3, #4
   27458:	add	x9, x0, x6
   2745c:	add	x11, x0, x4
   27460:	ldr	w10, [x0, x6]
   27464:	ldr	w12, [x0, x4]
   27468:	cmp	w12, w10
   2746c:	b.cs	274b4 <__sanitizer_cov_dump@@Base+0x894>  // b.hs, b.nlast
   27470:	cmp	x1, x8
   27474:	b.cc	276c0 <__sanitizer_cov_dump@@Base+0xaa0>  // b.lo, b.ul, b.last
   27478:	cmp	x7, x3
   2747c:	b.eq	27504 <__sanitizer_cov_dump@@Base+0x8e4>  // b.none
   27480:	ldp	x4, x5, [x9]
   27484:	mov	x1, x7
   27488:	ldr	x3, [x11, #8]
   2748c:	stp	x4, x5, [x11]
   27490:	str	w12, [x0, x6]
   27494:	str	x3, [x9, #8]
   27498:	mov	x3, x1
   2749c:	add	x5, x3, #0x1
   274a0:	lsl	x1, x3, #1
   274a4:	add	x7, x1, #0x1
   274a8:	add	x1, x1, #0x2
   274ac:	cmp	x7, x8
   274b0:	b.cc	27450 <__sanitizer_cov_dump@@Base+0x830>  // b.lo, b.ul, b.last
   274b4:	cmp	x1, x8
   274b8:	b.cs	27504 <__sanitizer_cov_dump@@Base+0x8e4>  // b.hs, b.nlast
   274bc:	lsl	x5, x5, #5
   274c0:	lsl	x4, x3, #4
   274c4:	add	x6, x0, x5
   274c8:	ldr	w7, [x0, x5]
   274cc:	ldr	w5, [x0, x4]
   274d0:	cmp	w7, w5
   274d4:	b.ls	27504 <__sanitizer_cov_dump@@Base+0x8e4>  // b.plast
   274d8:	cmp	x1, x3
   274dc:	b.eq	27504 <__sanitizer_cov_dump@@Base+0x8e4>  // b.none
   274e0:	add	x3, x0, x4
   274e4:	ldr	w9, [x0, x4]
   274e8:	ldp	x4, x5, [x6]
   274ec:	cmp	x1, x8
   274f0:	ldr	x7, [x3, #8]
   274f4:	stp	x4, x5, [x3]
   274f8:	str	w9, [x6]
   274fc:	str	x7, [x6, #8]
   27500:	b.cc	27498 <__sanitizer_cov_dump@@Base+0x878>  // b.lo, b.ul, b.last
   27504:	sub	x2, x2, #0x10
   27508:	subs	x8, x8, #0x1
   2750c:	b.ne	2741c <__sanitizer_cov_dump@@Base+0x7fc>  // b.any
   27510:	ldp	x21, x22, [sp, #16]
   27514:	ldp	x23, x24, [sp, #32]
   27518:	ldp	x25, x26, [sp, #48]
   2751c:	ldp	x27, x30, [sp, #64]
   27520:	ldp	x19, x20, [sp], #96
   27524:	ret
   27528:	tst	x0, x3
   2752c:	b.eq	27568 <__sanitizer_cov_dump@@Base+0x948>  // b.none
   27530:	clz	x2, x3
   27534:	mov	w1, #0x3f                  	// #63
   27538:	sub	w2, w1, w2
   2753c:	mov	x1, #0x1                   	// #1
   27540:	add	w4, w2, #0x1
   27544:	lsl	x4, x1, x4
   27548:	cmp	x4, x3
   2754c:	b.ls	27660 <__sanitizer_cov_dump@@Base+0xa40>  // b.plast
   27550:	lsl	x1, x1, x2
   27554:	cmp	x1, x3
   27558:	b.cs	276a4 <__sanitizer_cov_dump@@Base+0xa84>  // b.hs, b.nlast
   2755c:	cmp	x0, x4
   27560:	b.hi	27678 <__sanitizer_cov_dump@@Base+0xa58>  // b.pmore
   27564:	mov	x3, x4
   27568:	ldr	x0, [x22]
   2756c:	lsl	x21, x3, #4
   27570:	cbz	x0, 27648 <__sanitizer_cov_dump@@Base+0xa28>
   27574:	sub	x1, x0, #0x1
   27578:	tst	x1, x0
   2757c:	b.ne	27694 <__sanitizer_cov_dump@@Base+0xa74>  // b.any
   27580:	add	x21, x21, x1
   27584:	neg	x0, x0
   27588:	and	x21, x21, x0
   2758c:	mov	x1, x26
   27590:	mov	w2, #0x0                   	// #0
   27594:	mov	x0, x21
   27598:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   2759c:	mov	x27, x0
   275a0:	ldr	x1, [x19]
   275a4:	ldr	x2, [x19, #16]
   275a8:	lsl	x2, x2, #4
   275ac:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   275b0:	ldp	x0, x1, [x19]
   275b4:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   275b8:	stp	x27, x21, [x19]
   275bc:	ldr	x0, [x19, #16]
   275c0:	add	x3, x0, #0x1
   275c4:	b	27384 <__sanitizer_cov_dump@@Base+0x764>
   275c8:	mov	x3, x0
   275cc:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   275d0:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   275d4:	add	x2, x2, #0x8c8
   275d8:	add	x0, x0, #0xb98
   275dc:	mov	w1, #0x1cd                 	// #461
   275e0:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   275e4:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   275e8:	lsl	x20, x0, #4
   275ec:	ldr	x21, [x21, #4016]
   275f0:	ldr	x0, [x21]
   275f4:	cbz	x0, 27654 <__sanitizer_cov_dump@@Base+0xa34>
   275f8:	sub	x1, x0, #0x1
   275fc:	tst	x1, x0
   27600:	b.ne	27694 <__sanitizer_cov_dump@@Base+0xa74>  // b.any
   27604:	add	x20, x20, x1
   27608:	neg	x0, x0
   2760c:	and	x20, x20, x0
   27610:	mov	w2, #0x0                   	// #0
   27614:	mov	x0, x20
   27618:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   2761c:	add	x1, x1, #0xc10
   27620:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   27624:	ldr	x1, [x19]
   27628:	mov	x21, x0
   2762c:	ldr	x2, [x19, #16]
   27630:	lsl	x2, x2, #4
   27634:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   27638:	ldp	x0, x1, [x19]
   2763c:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   27640:	stp	x21, x20, [x19]
   27644:	b	27330 <__sanitizer_cov_dump@@Base+0x710>
   27648:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   2764c:	str	x0, [x22]
   27650:	b	27574 <__sanitizer_cov_dump@@Base+0x954>
   27654:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   27658:	str	x0, [x21]
   2765c:	b	275f8 <__sanitizer_cov_dump@@Base+0x9d8>
   27660:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   27664:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   27668:	add	x2, x2, #0x680
   2766c:	add	x0, x0, #0xb98
   27670:	mov	w1, #0x18a                 	// #394
   27674:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   27678:	mov	x3, x0
   2767c:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   27680:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   27684:	add	x2, x2, #0x8f8
   27688:	add	x0, x0, #0xb98
   2768c:	mov	w1, #0x20c                 	// #524
   27690:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   27694:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   27698:	add	x0, x0, #0xbf8
   2769c:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   276a0:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   276a4:	mov	x4, x1
   276a8:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   276ac:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   276b0:	add	x2, x2, #0x708
   276b4:	add	x0, x0, #0xb98
   276b8:	mov	w1, #0x18b                 	// #395
   276bc:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   276c0:	lsl	x11, x5, #5
   276c4:	add	x6, x0, x5, lsl #5
   276c8:	ldr	w5, [x0, x11]
   276cc:	cmp	w10, w5
   276d0:	csel	x6, x6, x9, cc  // cc = lo, ul, last
   276d4:	csel	x1, x1, x7, cc  // cc = lo, ul, last
   276d8:	b	274d8 <__sanitizer_cov_dump@@Base+0x8b8>
   276dc:	nop
   276e0:	ldr	x4, [x0, #16]
   276e4:	cbnz	x4, 276f4 <__sanitizer_cov_dump@@Base+0xad4>
   276e8:	mov	x0, #0x0                   	// #0
   276ec:	mov	x1, #0x0                   	// #0
   276f0:	ret
   276f4:	mov	x5, x4
   276f8:	mov	x2, #0x0                   	// #0
   276fc:	str	x30, [sp, #-16]!
   27700:	cmp	x5, x2
   27704:	b.ls	27738 <__sanitizer_cov_dump@@Base+0xb18>  // b.plast
   27708:	add	x3, x5, x2
   2770c:	ldr	x7, [x0]
   27710:	cmp	x4, x3, lsr #1
   27714:	lsr	x3, x3, #1
   27718:	b.ls	27774 <__sanitizer_cov_dump@@Base+0xb54>  // b.plast
   2771c:	lsl	x6, x3, #4
   27720:	ldr	w6, [x7, x6]
   27724:	cmp	w1, w6
   27728:	b.ls	2776c <__sanitizer_cov_dump@@Base+0xb4c>  // b.plast
   2772c:	add	x2, x3, #0x1
   27730:	cmp	x5, x2
   27734:	b.hi	27708 <__sanitizer_cov_dump@@Base+0xae8>  // b.pmore
   27738:	cmp	x4, x2
   2773c:	b.cc	2775c <__sanitizer_cov_dump@@Base+0xb3c>  // b.lo, b.ul, b.last
   27740:	ldr	x0, [x0]
   27744:	b.eq	2779c <__sanitizer_cov_dump@@Base+0xb7c>  // b.none
   27748:	lsl	x2, x2, #4
   2774c:	add	x3, x0, x2
   27750:	ldr	w0, [x0, x2]
   27754:	cmp	w0, w1
   27758:	b.eq	2778c <__sanitizer_cov_dump@@Base+0xb6c>  // b.none
   2775c:	mov	x0, #0x0                   	// #0
   27760:	mov	x1, #0x0                   	// #0
   27764:	ldr	x30, [sp], #16
   27768:	ret
   2776c:	mov	x5, x3
   27770:	b	27700 <__sanitizer_cov_dump@@Base+0xae0>
   27774:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   27778:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   2777c:	add	x2, x2, #0x118
   27780:	add	x0, x0, #0xb98
   27784:	mov	w1, #0x1c9                 	// #457
   27788:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   2778c:	ldr	x1, [x3, #8]
   27790:	add	x0, x1, #0x18
   27794:	ldr	x1, [x1, #16]
   27798:	b	27764 <__sanitizer_cov_dump@@Base+0xb44>
   2779c:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   277a0:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   277a4:	add	x2, x2, #0x118
   277a8:	add	x0, x0, #0xb98
   277ac:	mov	x3, x4
   277b0:	mov	w1, #0x1c5                 	// #453
   277b4:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   277b8:	str	x30, [sp, #-16]!
   277bc:	mov	x2, x1
   277c0:	mov	x3, #0x0                   	// #0
   277c4:	mov	x1, x0
   277c8:	adrp	x0, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   277cc:	add	x0, x0, #0x8e0
   277d0:	bl	27808 <__sanitizer_cov_dump@@Base+0xbe8>
   277d4:	cbz	x0, 277e4 <__sanitizer_cov_dump@@Base+0xbc4>
   277d8:	ldr	w0, [x0, #8]
   277dc:	ldr	x30, [sp], #16
   277e0:	ret
   277e4:	mov	w0, #0x0                   	// #0
   277e8:	ldr	x30, [sp], #16
   277ec:	ret
   277f0:	mov	x2, x1
   277f4:	mov	x3, #0x0                   	// #0
   277f8:	mov	x1, x0
   277fc:	adrp	x0, 130000 <__hwasan_shadow_memory_dynamic_address@@Base+0xd32e0>
   27800:	add	x0, x0, #0x8e0
   27804:	b	27808 <__sanitizer_cov_dump@@Base+0xbe8>
   27808:	stp	x19, x20, [sp, #-160]!
   2780c:	stp	x21, x22, [sp, #16]
   27810:	mov	x22, x2
   27814:	mov	x21, x1
   27818:	stp	x23, x24, [sp, #32]
   2781c:	mov	x24, x0
   27820:	mov	x23, x3
   27824:	stp	x25, x26, [sp, #48]
   27828:	lsr	x25, x2, #32
   2782c:	stp	x27, x28, [sp, #64]
   27830:	mov	w27, w25
   27834:	mov	w28, w2
   27838:	str	x30, [sp, #80]
   2783c:	cbz	x3, 27844 <__sanitizer_cov_dump@@Base+0xc24>
   27840:	strb	wzr, [x3]
   27844:	cmp	x21, #0x0
   27848:	mov	x0, #0x0                   	// #0
   2784c:	ccmp	w22, #0x0, #0x4, ne  // ne = any
   27850:	b.ne	27870 <__sanitizer_cov_dump@@Base+0xc50>  // b.any
   27854:	ldp	x21, x22, [sp, #16]
   27858:	ldp	x23, x24, [sp, #32]
   2785c:	ldp	x25, x26, [sp, #48]
   27860:	ldp	x27, x28, [sp, #64]
   27864:	ldr	x30, [sp, #80]
   27868:	ldp	x19, x20, [sp], #160
   2786c:	ret
   27870:	mov	w4, #0xb28c                	// #45708
   27874:	mov	w20, #0xe995                	// #59797
   27878:	movk	w4, #0x9747, lsl #16
   2787c:	mov	w26, w22
   27880:	eor	w5, w4, w22, lsl #3
   27884:	mov	x1, #0x0                   	// #0
   27888:	movk	w20, #0x5bd1, lsl #16
   2788c:	nop
   27890:	ldr	x4, [x21, x1, lsl #3]
   27894:	mul	w5, w5, w20
   27898:	add	x1, x1, #0x1
   2789c:	cmp	x26, x1
   278a0:	mul	w4, w4, w20
   278a4:	eor	w4, w4, w4, lsr #24
   278a8:	mul	w4, w4, w20
   278ac:	eor	w5, w4, w5
   278b0:	b.hi	27890 <__sanitizer_cov_dump@@Base+0xc70>  // b.pmore
   278b4:	eor	w4, w5, w5, lsr #13
   278b8:	mul	w20, w4, w20
   278bc:	eor	w20, w20, w20, lsr #15
   278c0:	and	x5, x20, #0xfffff
   278c4:	ubfiz	x2, x20, #3, #20
   278c8:	add	x2, x24, x2
   278cc:	ldr	x9, [x24, x5, lsl #3]
   278d0:	ands	x9, x9, #0xfffffffffffffffe
   278d4:	b.eq	27940 <__sanitizer_cov_dump@@Base+0xd20>  // b.none
   278d8:	and	w10, w20, #0xfff00000
   278dc:	mov	x4, x9
   278e0:	ldr	w1, [x4, #12]
   278e4:	and	w1, w1, #0xfff00000
   278e8:	cmp	w1, w10
   278ec:	b.ne	27938 <__sanitizer_cov_dump@@Base+0xd18>  // b.any
   278f0:	bfxil	x6, x28, #0, #32
   278f4:	ldr	x0, [x4, #16]
   278f8:	bfi	x6, x27, #32, #32
   278fc:	cmp	x0, x6
   27900:	b.ne	27938 <__sanitizer_cov_dump@@Base+0xd18>  // b.any
   27904:	ldr	w0, [x4, #16]
   27908:	cbz	x0, 279a4 <__sanitizer_cov_dump@@Base+0xd84>
   2790c:	add	x3, x4, #0x18
   27910:	mov	x1, #0x0                   	// #0
   27914:	b	27924 <__sanitizer_cov_dump@@Base+0xd04>
   27918:	add	x1, x1, #0x1
   2791c:	cmp	x0, x1
   27920:	b.eq	279a4 <__sanitizer_cov_dump@@Base+0xd84>  // b.none
   27924:	ldr	x8, [x3, x1, lsl #3]
   27928:	ldr	x7, [x21, x1, lsl #3]
   2792c:	cmp	x8, x7
   27930:	b.eq	27918 <__sanitizer_cov_dump@@Base+0xcf8>  // b.none
   27934:	nop
   27938:	ldr	x4, [x4]
   2793c:	cbnz	x4, 278e0 <__sanitizer_cov_dump@@Base+0xcc0>
   27940:	mov	w1, #0x0                   	// #0
   27944:	ldr	x0, [x2]
   27948:	tbnz	w0, #0, 27970 <__sanitizer_cov_dump@@Base+0xd50>
   2794c:	orr	x3, x0, #0x1
   27950:	ldxr	x6, [x2]
   27954:	cmp	x6, x0
   27958:	b.ne	27964 <__sanitizer_cov_dump@@Base+0xd44>  // b.any
   2795c:	stlxr	w4, x3, [x2]
   27960:	cbnz	w4, 27950 <__sanitizer_cov_dump@@Base+0xd30>
   27964:	dmb	ish
   27968:	cmp	x0, x6
   2796c:	b.eq	279ac <__sanitizer_cov_dump@@Base+0xd8c>  // b.none
   27970:	cmp	w1, #0x9
   27974:	b.gt	27980 <__sanitizer_cov_dump@@Base+0xd60>
   27978:	add	w1, w1, #0x1
   2797c:	b	27944 <__sanitizer_cov_dump@@Base+0xd24>
   27980:	stp	x5, x2, [sp, #104]
   27984:	str	x9, [sp, #120]
   27988:	str	w1, [sp, #128]
   2798c:	bl	1c390 <__sanitizer_set_report_fd@@Base+0x4510>
   27990:	ldr	w1, [sp, #128]
   27994:	ldp	x5, x2, [sp, #104]
   27998:	add	w1, w1, #0x1
   2799c:	ldr	x9, [sp, #120]
   279a0:	b	27944 <__sanitizer_cov_dump@@Base+0xd24>
   279a4:	mov	x0, x4
   279a8:	b	27854 <__sanitizer_cov_dump@@Base+0xc34>
   279ac:	cmp	x9, x6
   279b0:	b.eq	27a20 <__sanitizer_cov_dump@@Base+0xe00>  // b.none
   279b4:	cbz	x6, 27a20 <__sanitizer_cov_dump@@Base+0xe00>
   279b8:	and	w8, w20, #0xfff00000
   279bc:	mov	x4, x6
   279c0:	ldr	w0, [x4, #12]
   279c4:	and	w0, w0, #0xfff00000
   279c8:	cmp	w0, w8
   279cc:	b.ne	27a18 <__sanitizer_cov_dump@@Base+0xdf8>  // b.any
   279d0:	bfxil	x19, x28, #0, #32
   279d4:	ldr	x0, [x4, #16]
   279d8:	bfi	x19, x27, #32, #32
   279dc:	cmp	x0, x19
   279e0:	b.ne	27a18 <__sanitizer_cov_dump@@Base+0xdf8>  // b.any
   279e4:	ldr	w3, [x4, #16]
   279e8:	cbz	x3, 27b18 <__sanitizer_cov_dump@@Base+0xef8>
   279ec:	add	x7, x4, #0x18
   279f0:	mov	x1, #0x0                   	// #0
   279f4:	b	27a04 <__sanitizer_cov_dump@@Base+0xde4>
   279f8:	add	x1, x1, #0x1
   279fc:	cmp	x3, x1
   27a00:	b.eq	27b18 <__sanitizer_cov_dump@@Base+0xef8>  // b.none
   27a04:	ldr	x2, [x7, x1, lsl #3]
   27a08:	ldr	x0, [x21, x1, lsl #3]
   27a0c:	cmp	x2, x0
   27a10:	b.eq	279f8 <__sanitizer_cov_dump@@Base+0xdd8>  // b.none
   27a14:	nop
   27a18:	ldr	x4, [x4]
   27a1c:	cbnz	x4, 279c0 <__sanitizer_cov_dump@@Base+0xda0>
   27a20:	lsr	x7, x5, #12
   27a24:	add	x0, x7, #0x200, lsl #12
   27a28:	add	x0, x24, x0, lsl #2
   27a2c:	ldxr	w3, [x0]
   27a30:	add	w1, w3, #0x1
   27a34:	stlxr	w2, w1, [x0]
   27a38:	cbnz	w2, 27a2c <__sanitizer_cov_dump@@Base+0xe0c>
   27a3c:	add	x28, x24, #0x800, lsl #12
   27a40:	mov	w0, #0x7fffff              	// #8388607
   27a44:	add	w3, w3, #0x1
   27a48:	dmb	ish
   27a4c:	cmp	w3, w0
   27a50:	ldr	x0, [x28, #1024]
   27a54:	add	x0, x0, #0x1
   27a58:	str	x0, [x28, #1024]
   27a5c:	b.hi	27c30 <__sanitizer_cov_dump@@Base+0x1010>  // b.pmore
   27a60:	orr	w7, w3, w7, lsl #23
   27a64:	cbz	w7, 27c4c <__sanitizer_cov_dump@@Base+0x102c>
   27a68:	adrp	x9, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   27a6c:	sub	w27, w22, #0x1
   27a70:	add	x27, x27, #0x4
   27a74:	ldr	x1, [x9, #3720]
   27a78:	lsl	x27, x27, #3
   27a7c:	add	x2, x1, #0x8
   27a80:	ldr	x19, [x1, #8]
   27a84:	dmb	ish
   27a88:	ldr	x3, [x1, #16]
   27a8c:	dmb	ish
   27a90:	cbz	x19, 27b28 <__sanitizer_cov_dump@@Base+0xf08>
   27a94:	add	x0, x27, x19
   27a98:	cmp	x0, x3
   27a9c:	b.hi	27b28 <__sanitizer_cov_dump@@Base+0xf08>  // b.pmore
   27aa0:	ldxr	x3, [x2]
   27aa4:	cmp	x3, x19
   27aa8:	b.ne	27ab4 <__sanitizer_cov_dump@@Base+0xe94>  // b.any
   27aac:	stlxr	w4, x0, [x2]
   27ab0:	cbnz	w4, 27aa0 <__sanitizer_cov_dump@@Base+0xe80>
   27ab4:	dmb	ish
   27ab8:	cmp	x3, x19
   27abc:	b.ne	27a80 <__sanitizer_cov_dump@@Base+0xe60>  // b.any
   27ac0:	ldr	x0, [x28, #1032]
   27ac4:	and	w20, w20, #0xfff00000
   27ac8:	lsl	x2, x26, #3
   27acc:	mov	x1, x21
   27ad0:	add	x27, x0, x27
   27ad4:	str	x27, [x28, #1032]
   27ad8:	str	w7, [x19, #8]
   27adc:	add	x0, x19, #0x18
   27ae0:	str	w20, [x19, #12]
   27ae4:	stp	w22, w25, [x19, #16]
   27ae8:	stp	x5, x6, [sp, #104]
   27aec:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   27af0:	ldr	x6, [sp, #112]
   27af4:	str	x6, [x19]
   27af8:	dmb	ish
   27afc:	ldr	x5, [sp, #104]
   27b00:	str	x19, [x24, x5, lsl #3]
   27b04:	cbz	x23, 27b10 <__sanitizer_cov_dump@@Base+0xef0>
   27b08:	mov	w0, #0x1                   	// #1
   27b0c:	strb	w0, [x23]
   27b10:	mov	x0, x19
   27b14:	b	27854 <__sanitizer_cov_dump@@Base+0xc34>
   27b18:	dmb	ish
   27b1c:	str	x6, [x24, x5, lsl #3]
   27b20:	mov	x0, x4
   27b24:	b	27854 <__sanitizer_cov_dump@@Base+0xc34>
   27b28:	ldr	x0, [x9, #3720]
   27b2c:	mov	w2, #0x1                   	// #1
   27b30:	ldxrb	w1, [x0]
   27b34:	stxrb	w3, w2, [x0]
   27b38:	cbnz	w3, 27b30 <__sanitizer_cov_dump@@Base+0xf10>
   27b3c:	dmb	ish
   27b40:	tst	w1, #0xff
   27b44:	b.eq	27b68 <__sanitizer_cov_dump@@Base+0xf48>  // b.none
   27b48:	str	x5, [sp, #104]
   27b4c:	str	w7, [sp, #112]
   27b50:	str	x6, [sp, #120]
   27b54:	bl	85d8 <__sanitizer_print_stack_trace@@Base+0x300>
   27b58:	ldr	w7, [sp, #112]
   27b5c:	adrp	x9, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   27b60:	ldr	x5, [sp, #104]
   27b64:	ldr	x6, [sp, #120]
   27b68:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   27b6c:	ldr	x3, [x9, #3720]
   27b70:	add	x0, x0, #0xdf0
   27b74:	str	x0, [sp, #152]
   27b78:	add	x4, x3, #0x8
   27b7c:	nop
   27b80:	ldr	x19, [x3, #8]
   27b84:	dmb	ish
   27b88:	ldr	x1, [x3, #16]
   27b8c:	dmb	ish
   27b90:	cbz	x19, 27bcc <__sanitizer_cov_dump@@Base+0xfac>
   27b94:	add	x0, x27, x19
   27b98:	cmp	x0, x1
   27b9c:	b.hi	27bcc <__sanitizer_cov_dump@@Base+0xfac>  // b.pmore
   27ba0:	ldxr	x1, [x4]
   27ba4:	cmp	x1, x19
   27ba8:	b.ne	27bb4 <__sanitizer_cov_dump@@Base+0xf94>  // b.any
   27bac:	stlxr	w2, x0, [x4]
   27bb0:	cbnz	w2, 27ba0 <__sanitizer_cov_dump@@Base+0xf80>
   27bb4:	dmb	ish
   27bb8:	cmp	x1, x19
   27bbc:	b.ne	27b80 <__sanitizer_cov_dump@@Base+0xf60>  // b.any
   27bc0:	dmb	ish
   27bc4:	strb	wzr, [x3]
   27bc8:	b	27ac0 <__sanitizer_cov_dump@@Base+0xea0>
   27bcc:	ldr	x10, [x9, #3720]
   27bd0:	cmp	x27, #0x10, lsl #12
   27bd4:	ldr	x1, [sp, #152]
   27bd8:	mov	x19, #0x10000               	// #65536
   27bdc:	str	xzr, [x10, #8]
   27be0:	csel	x19, x27, x19, cs  // cs = hs, nlast
   27be4:	mov	x0, x19
   27be8:	mov	w2, #0x0                   	// #0
   27bec:	stp	x10, x5, [sp, #104]
   27bf0:	str	w7, [sp, #120]
   27bf4:	stp	x6, x3, [sp, #128]
   27bf8:	str	x4, [sp, #144]
   27bfc:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   27c00:	dmb	ish
   27c04:	add	x19, x19, x0
   27c08:	ldr	x10, [sp, #104]
   27c0c:	str	x19, [x10, #16]
   27c10:	dmb	ish
   27c14:	str	x0, [x10, #8]
   27c18:	adrp	x9, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   27c1c:	ldr	w7, [sp, #120]
   27c20:	ldr	x5, [sp, #112]
   27c24:	ldp	x6, x3, [sp, #128]
   27c28:	ldr	x4, [sp, #144]
   27c2c:	b	27b80 <__sanitizer_cov_dump@@Base+0xf60>
   27c30:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   27c34:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   27c38:	add	x2, x2, #0xdc8
   27c3c:	add	x0, x0, #0xd50
   27c40:	mov	x4, #0x800000              	// #8388608
   27c44:	mov	w1, #0x78                  	// #120
   27c48:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   27c4c:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   27c50:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   27c54:	add	x2, x2, #0xde0
   27c58:	add	x0, x0, #0xd50
   27c5c:	mov	x4, #0x0                   	// #0
   27c60:	mov	x3, #0x0                   	// #0
   27c64:	mov	w1, #0x7a                  	// #122
   27c68:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   27c6c:	nop
   27c70:	add	x0, x0, #0x4
   27c74:	ret
   27c78:	str	x30, [sp, #-16]!
   27c7c:	mov	x0, x30
   27c80:	ldr	x30, [sp], #16
   27c84:	ret
   27c88:	stp	x19, x20, [sp, #-32]!
   27c8c:	cmp	x3, #0x0
   27c90:	stp	x21, x30, [sp, #16]
   27c94:	mov	x21, x3
   27c98:	cinc	w3, w2, ne  // ne = any
   27c9c:	str	w3, [x0, #8]
   27ca0:	cmp	w3, #0x100
   27ca4:	b.hi	27cd8 <__sanitizer_cov_dump@@Base+0x10b8>  // b.pmore
   27ca8:	mov	x19, x0
   27cac:	mov	x20, x2
   27cb0:	add	x0, x0, #0x10
   27cb4:	lsl	x2, x2, #3
   27cb8:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   27cbc:	cbz	x21, 27cc8 <__sanitizer_cov_dump@@Base+0x10a8>
   27cc0:	add	x20, x20, #0x2
   27cc4:	str	x21, [x19, x20, lsl #3]
   27cc8:	ldp	x21, x30, [sp, #16]
   27ccc:	str	xzr, [x19, #2064]
   27cd0:	ldp	x19, x20, [sp], #32
   27cd4:	ret
   27cd8:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   27cdc:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   27ce0:	mov	w3, w3
   27ce4:	add	x2, x2, #0xe00
   27ce8:	add	x0, x0, #0xe20
   27cec:	mov	x4, #0x100                 	// #256
   27cf0:	mov	w1, #0x23                  	// #35
   27cf4:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   27cf8:	stp	x19, x20, [sp, #-64]!
   27cfc:	cmp	w5, #0x1
   27d00:	stp	x21, x22, [sp, #16]
   27d04:	stp	x23, x24, [sp, #32]
   27d08:	stp	x25, x30, [sp, #48]
   27d0c:	b.ls	27df4 <__sanitizer_cov_dump@@Base+0x11d4>  // b.plast
   27d10:	adrp	x25, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   27d14:	mov	x19, x0
   27d18:	mov	w20, w5
   27d1c:	mov	x24, x1
   27d20:	ldr	x25, [x25, #4016]
   27d24:	mov	x22, x2
   27d28:	mov	x21, x3
   27d2c:	mov	x23, x4
   27d30:	ldr	x0, [x25]
   27d34:	cbz	x0, 27de8 <__sanitizer_cov_dump@@Base+0x11c8>
   27d38:	mov	w1, #0x1                   	// #1
   27d3c:	str	w1, [x19, #8]
   27d40:	str	x24, [x19, #16]
   27d44:	cmp	x21, #0xfff
   27d48:	b.ls	27dd4 <__sanitizer_cov_dump@@Base+0x11b4>  // b.plast
   27d4c:	mov	x4, x23
   27d50:	cmp	x21, x23
   27d54:	b.ls	27e18 <__sanitizer_cov_dump@@Base+0x11f8>  // b.plast
   27d58:	cmp	x22, x23
   27d5c:	b.ls	27dd4 <__sanitizer_cov_dump@@Base+0x11b4>  // b.plast
   27d60:	sub	x3, x21, #0x10
   27d64:	cmp	x22, x3
   27d68:	b.cs	27dd4 <__sanitizer_cov_dump@@Base+0x11b4>  // b.hs, b.nlast
   27d6c:	tst	x22, #0x7
   27d70:	b.ne	27dd4 <__sanitizer_cov_dump@@Base+0x11b4>  // b.any
   27d74:	mov	x2, x22
   27d78:	ldr	x4, [x2, #8]
   27d7c:	cmp	x0, x4
   27d80:	b.hi	27dd4 <__sanitizer_cov_dump@@Base+0x11b4>  // b.pmore
   27d84:	cmp	x24, x4
   27d88:	b.eq	27d9c <__sanitizer_cov_dump@@Base+0x117c>  // b.none
   27d8c:	add	x5, x19, w1, uxtw #3
   27d90:	add	w1, w1, #0x1
   27d94:	str	w1, [x19, #8]
   27d98:	str	x4, [x5, #16]
   27d9c:	cmp	x22, x21
   27da0:	ldr	x2, [x2]
   27da4:	b.cs	27e14 <__sanitizer_cov_dump@@Base+0x11f4>  // b.hs, b.nlast
   27da8:	cmp	x22, x2
   27dac:	b.cs	27dd4 <__sanitizer_cov_dump@@Base+0x11b4>  // b.hs, b.nlast
   27db0:	cmp	x2, x3
   27db4:	b.cs	27dd4 <__sanitizer_cov_dump@@Base+0x11b4>  // b.hs, b.nlast
   27db8:	tst	x2, #0x7
   27dbc:	b.ne	27dd4 <__sanitizer_cov_dump@@Base+0x11b4>  // b.any
   27dc0:	ldr	w1, [x19, #8]
   27dc4:	cmp	w1, w20
   27dc8:	b.cs	27dd4 <__sanitizer_cov_dump@@Base+0x11b4>  // b.hs, b.nlast
   27dcc:	mov	x22, x2
   27dd0:	b	27d78 <__sanitizer_cov_dump@@Base+0x1158>
   27dd4:	ldp	x21, x22, [sp, #16]
   27dd8:	ldp	x23, x24, [sp, #32]
   27ddc:	ldp	x25, x30, [sp, #48]
   27de0:	ldp	x19, x20, [sp], #64
   27de4:	ret
   27de8:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   27dec:	str	x0, [x25]
   27df0:	b	27d38 <__sanitizer_cov_dump@@Base+0x1118>
   27df4:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   27df8:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   27dfc:	mov	w3, w5
   27e00:	add	x2, x2, #0xe78
   27e04:	add	x0, x0, #0xe20
   27e08:	mov	x4, #0x2                   	// #2
   27e0c:	mov	w1, #0x49                  	// #73
   27e10:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   27e14:	mov	x4, x22
   27e18:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   27e1c:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   27e20:	mov	x3, x21
   27e24:	add	x2, x2, #0xe90
   27e28:	add	x0, x0, #0xe20
   27e2c:	mov	w1, #0x33                  	// #51
   27e30:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   27e34:	nop
   27e38:	ldr	w2, [x0, #8]
   27e3c:	cmp	x1, w2, uxtw
   27e40:	b.cs	27ecc <__sanitizer_cov_dump@@Base+0x12ac>  // b.hs, b.nlast
   27e44:	sub	w6, w2, w1
   27e48:	str	w6, [x0, #8]
   27e4c:	cbz	w6, 27ec8 <__sanitizer_cov_dump@@Base+0x12a8>
   27e50:	sub	x3, x6, #0x1
   27e54:	cmp	x3, #0x9
   27e58:	ccmp	x1, #0x1, #0x0, hi  // hi = pmore
   27e5c:	b.ls	27eac <__sanitizer_cov_dump@@Base+0x128c>  // b.plast
   27e60:	add	x4, x1, #0x2
   27e64:	lsr	x3, x6, #1
   27e68:	add	x5, x0, #0x10
   27e6c:	mov	x2, #0x0                   	// #0
   27e70:	add	x4, x0, x4, lsl #3
   27e74:	lsl	x3, x3, #4
   27e78:	ldr	q0, [x4, x2]
   27e7c:	str	q0, [x5, x2]
   27e80:	add	x2, x2, #0x10
   27e84:	cmp	x2, x3
   27e88:	b.ne	27e78 <__sanitizer_cov_dump@@Base+0x1258>  // b.any
   27e8c:	and	x2, x6, #0xfffffffffffffffe
   27e90:	tbz	w6, #0, 27ec8 <__sanitizer_cov_dump@@Base+0x12a8>
   27e94:	add	x1, x2, x1
   27e98:	add	x2, x2, #0x2
   27e9c:	add	x1, x1, #0x2
   27ea0:	ldr	x1, [x0, x1, lsl #3]
   27ea4:	str	x1, [x0, x2, lsl #3]
   27ea8:	ret
   27eac:	add	x0, x0, #0x10
   27eb0:	add	x2, x0, w6, uxtw #3
   27eb4:	nop
   27eb8:	ldr	x3, [x0, x1, lsl #3]
   27ebc:	str	x3, [x0], #8
   27ec0:	cmp	x0, x2
   27ec4:	b.ne	27eb8 <__sanitizer_cov_dump@@Base+0x1298>  // b.any
   27ec8:	ret
   27ecc:	str	x30, [sp, #-16]!
   27ed0:	mov	w4, w2
   27ed4:	mov	x3, x1
   27ed8:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   27edc:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   27ee0:	add	x2, x2, #0xeb8
   27ee4:	add	x0, x0, #0xe20
   27ee8:	mov	w1, #0x74                  	// #116
   27eec:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   27ef0:	ldr	w9, [x0, #8]
   27ef4:	cmp	x9, #0x1
   27ef8:	b.ls	27f50 <__sanitizer_cov_dump@@Base+0x1330>  // b.plast
   27efc:	ldr	x10, [x0]
   27f00:	mov	x3, #0x1                   	// #1
   27f04:	mov	x0, #0x0                   	// #0
   27f08:	ldr	x2, [x10]
   27f0c:	nop
   27f10:	sub	x7, x1, x2
   27f14:	ldr	x6, [x10, x3, lsl #3]
   27f18:	sub	x5, x2, x1
   27f1c:	cmp	x6, x1
   27f20:	sub	x8, x1, x6
   27f24:	sub	x4, x6, x1
   27f28:	csel	x4, x4, x8, cs  // cs = hs, nlast
   27f2c:	cmp	x2, x1
   27f30:	csel	x5, x5, x7, cs  // cs = hs, nlast
   27f34:	cmp	x5, x4
   27f38:	csel	x0, x3, x0, hi  // hi = pmore
   27f3c:	add	x3, x3, #0x1
   27f40:	csel	x2, x6, x2, hi  // hi = pmore
   27f44:	cmp	x9, x3
   27f48:	b.ne	27f10 <__sanitizer_cov_dump@@Base+0x12f0>  // b.any
   27f4c:	ret
   27f50:	mov	x0, #0x0                   	// #0
   27f54:	ret
   27f58:	stp	x19, x20, [sp, #-176]!
   27f5c:	stp	x21, x22, [sp, #16]
   27f60:	mov	x21, x0
   27f64:	ldr	x0, [x0]
   27f68:	str	x30, [sp, #80]
   27f6c:	cbz	x0, 27fcc <__sanitizer_cov_dump@@Base+0x13ac>
   27f70:	ldr	w0, [x21, #8]
   27f74:	cbz	w0, 27fcc <__sanitizer_cov_dump@@Base+0x13ac>
   27f78:	adrp	x20, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   27f7c:	stp	x23, x24, [sp, #32]
   27f80:	ldr	x22, [x20, #4016]
   27f84:	stp	x25, x26, [sp, #48]
   27f88:	stp	x27, x28, [sp, #64]
   27f8c:	ldr	x0, [x22]
   27f90:	cbz	x0, 27fe8 <__sanitizer_cov_dump@@Base+0x13c8>
   27f94:	str	xzr, [sp, #112]
   27f98:	cmp	xzr, x0, lsl #1
   27f9c:	stp	xzr, xzr, [sp, #120]
   27fa0:	lsl	x19, x0, #1
   27fa4:	b.ne	28014 <__sanitizer_cov_dump@@Base+0x13f4>  // b.any
   27fa8:	stp	xzr, xzr, [sp, #128]
   27fac:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   27fb0:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   27fb4:	add	x2, x2, #0x118
   27fb8:	add	x0, x0, #0xb98
   27fbc:	mov	x4, #0x0                   	// #0
   27fc0:	mov	x3, #0x0                   	// #0
   27fc4:	mov	w1, #0x1c5                 	// #453
   27fc8:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   27fcc:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   27fd0:	add	x0, x0, #0xed0
   27fd4:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   27fd8:	ldp	x21, x22, [sp, #16]
   27fdc:	ldr	x30, [sp, #80]
   27fe0:	ldp	x19, x20, [sp], #176
   27fe4:	ret
   27fe8:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   27fec:	str	x0, [x22]
   27ff0:	str	xzr, [sp, #112]
   27ff4:	mov	x19, x0
   27ff8:	stp	xzr, xzr, [sp, #120]
   27ffc:	cmp	xzr, x0, lsl #1
   28000:	lsl	x1, x0, #1
   28004:	b.eq	27fa8 <__sanitizer_cov_dump@@Base+0x1388>  // b.none
   28008:	cbnz	x0, 283ac <__sanitizer_cov_dump@@Base+0x178c>
   2800c:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   28010:	str	x0, [x22]
   28014:	sub	x1, x0, #0x1
   28018:	tst	x1, x0
   2801c:	b.ne	28380 <__sanitizer_cov_dump@@Base+0x1760>  // b.any
   28020:	add	x1, x19, x1
   28024:	neg	x0, x0
   28028:	and	x23, x1, x0
   2802c:	mov	w2, #0x0                   	// #0
   28030:	mov	x0, x23
   28034:	adrp	x24, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   28038:	add	x1, x24, #0xc10
   2803c:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   28040:	ldr	x1, [sp, #112]
   28044:	mov	x22, x0
   28048:	ldr	x2, [sp, #128]
   2804c:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   28050:	ldp	x0, x1, [sp, #112]
   28054:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   28058:	stp	x22, x23, [sp, #112]
   2805c:	ldr	x2, [sp, #128]
   28060:	cmp	x19, x2
   28064:	b.ls	283a4 <__sanitizer_cov_dump@@Base+0x1784>  // b.plast
   28068:	cmp	x19, x23
   2806c:	b.hi	28264 <__sanitizer_cov_dump@@Base+0x1644>  // b.pmore
   28070:	add	x0, x22, x2
   28074:	mov	w1, #0x0                   	// #0
   28078:	sub	x2, x19, x2
   2807c:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   28080:	stp	x19, xzr, [sp, #128]
   28084:	ldr	x22, [sp, #112]
   28088:	cbz	x19, 27fac <__sanitizer_cov_dump@@Base+0x138c>
   2808c:	ldr	x23, [x20, #4016]
   28090:	strb	wzr, [x22]
   28094:	ldr	x19, [x23]
   28098:	cbz	x19, 28218 <__sanitizer_cov_dump@@Base+0x15f8>
   2809c:	str	xzr, [sp, #144]
   280a0:	stp	xzr, xzr, [sp, #152]
   280a4:	sub	x23, x19, #0x1
   280a8:	ands	x23, x23, x19
   280ac:	b.ne	28380 <__sanitizer_cov_dump@@Base+0x1760>  // b.any
   280b0:	lsl	x0, x19, #1
   280b4:	neg	x25, x19
   280b8:	sub	x0, x0, #0x1
   280bc:	add	x1, x24, #0xc10
   280c0:	and	x25, x0, x25
   280c4:	mov	w2, #0x0                   	// #0
   280c8:	mov	x0, x25
   280cc:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   280d0:	ldr	x1, [sp, #144]
   280d4:	mov	x22, x0
   280d8:	ldr	x2, [sp, #160]
   280dc:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   280e0:	ldp	x0, x1, [sp, #144]
   280e4:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   280e8:	stp	x22, x25, [sp, #144]
   280ec:	ldr	x2, [sp, #160]
   280f0:	cmp	x19, x2
   280f4:	b.ls	283b4 <__sanitizer_cov_dump@@Base+0x1794>  // b.plast
   280f8:	cmp	x19, x25
   280fc:	b.hi	282dc <__sanitizer_cov_dump@@Base+0x16bc>  // b.pmore
   28100:	add	x0, x22, x2
   28104:	mov	w1, #0x0                   	// #0
   28108:	sub	x2, x19, x2
   2810c:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   28110:	ldr	x22, [sp, #144]
   28114:	stp	x19, xzr, [sp, #160]
   28118:	adrp	x26, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2811c:	strb	wzr, [x22]
   28120:	ldr	x1, [x26, #4056]
   28124:	str	xzr, [sp, #96]
   28128:	ldr	w0, [x21, #8]
   2812c:	ldr	w27, [x1, #192]
   28130:	cbz	w0, 2834c <__sanitizer_cov_dump@@Base+0x172c>
   28134:	adrp	x24, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   28138:	add	x28, sp, #0x70
   2813c:	add	x24, x24, #0x3e8
   28140:	ldr	x0, [x21]
   28144:	ldr	x1, [sp, #96]
   28148:	ldr	x19, [x0, x1, lsl #3]
   2814c:	cbz	x19, 2834c <__sanitizer_cov_dump@@Base+0x172c>
   28150:	bl	299b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10c8>
   28154:	sub	x1, x19, #0x4
   28158:	bl	2ab10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2228>
   2815c:	str	x0, [sp, #104]
   28160:	cbz	x0, 282bc <__sanitizer_cov_dump@@Base+0x169c>
   28164:	mov	x25, x0
   28168:	adrp	x22, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2816c:	ldr	x0, [sp, #128]
   28170:	add	x22, x22, #0x7f0
   28174:	mov	x19, x23
   28178:	ldr	x2, [sp, #112]
   2817c:	cbz	x0, 27fac <__sanitizer_cov_dump@@Base+0x138c>
   28180:	ldr	x1, [x26, #4056]
   28184:	strb	wzr, [x2]
   28188:	mov	x6, x24
   2818c:	mov	w2, w19
   28190:	add	x3, x25, #0x8
   28194:	mov	x0, x28
   28198:	ldrb	w4, [x1, #189]
   2819c:	add	x20, x19, #0x1
   281a0:	ldr	x5, [x1, #24]
   281a4:	str	xzr, [sp, #136]
   281a8:	ldr	x1, [x1, #200]
   281ac:	bl	28d10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x428>
   281b0:	ldr	x1, [sp, #112]
   281b4:	mov	x0, x22
   281b8:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   281bc:	add	w1, w27, w23
   281c0:	sub	w0, w1, w19
   281c4:	sub	w19, w1, w20
   281c8:	cmp	w0, #0x0
   281cc:	b.le	281e8 <__sanitizer_cov_dump@@Base+0x15c8>
   281d0:	ldr	x0, [sp, #168]
   281d4:	cbnz	x0, 28204 <__sanitizer_cov_dump@@Base+0x15e4>
   281d8:	ldr	x1, [x25, #40]
   281dc:	cbz	x1, 281e8 <__sanitizer_cov_dump@@Base+0x15c8>
   281e0:	add	x0, sp, #0x90
   281e4:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   281e8:	ldr	x25, [x25]
   281ec:	cbz	x25, 28238 <__sanitizer_cov_dump@@Base+0x1618>
   281f0:	ldr	x0, [sp, #128]
   281f4:	mov	x19, x20
   281f8:	ldr	x2, [sp, #112]
   281fc:	cbnz	x0, 28180 <__sanitizer_cov_dump@@Base+0x1560>
   28200:	b	27fac <__sanitizer_cov_dump@@Base+0x138c>
   28204:	add	x0, sp, #0x90
   28208:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   2820c:	add	x1, x1, #0xf60
   28210:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   28214:	b	281d8 <__sanitizer_cov_dump@@Base+0x15b8>
   28218:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   2821c:	str	x0, [x23]
   28220:	str	xzr, [sp, #144]
   28224:	mov	x19, x0
   28228:	stp	xzr, xzr, [sp, #152]
   2822c:	cbnz	x0, 280a4 <__sanitizer_cov_dump@@Base+0x1484>
   28230:	stp	xzr, xzr, [sp, #160]
   28234:	b	27fac <__sanitizer_cov_dump@@Base+0x138c>
   28238:	ldr	x0, [sp, #104]
   2823c:	bl	29220 <__sanitizer_get_module_and_offset_for_pc@@Base+0x938>
   28240:	ldr	x1, [sp, #96]
   28244:	ldr	w0, [x21, #8]
   28248:	add	x1, x1, #0x1
   2824c:	str	x1, [sp, #96]
   28250:	cmp	x0, x1
   28254:	b.ls	2834c <__sanitizer_cov_dump@@Base+0x172c>  // b.plast
   28258:	mov	x23, x20
   2825c:	mov	w27, w19
   28260:	b	28140 <__sanitizer_cov_dump@@Base+0x1520>
   28264:	ldr	x22, [x20, #4016]
   28268:	ldr	x0, [x22]
   2826c:	cbz	x0, 28334 <__sanitizer_cov_dump@@Base+0x1714>
   28270:	sub	x1, x0, #0x1
   28274:	tst	x1, x0
   28278:	b.ne	28380 <__sanitizer_cov_dump@@Base+0x1760>  // b.any
   2827c:	add	x1, x19, x1
   28280:	neg	x0, x0
   28284:	and	x23, x1, x0
   28288:	mov	w2, #0x0                   	// #0
   2828c:	add	x1, x24, #0xc10
   28290:	mov	x0, x23
   28294:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   28298:	mov	x22, x0
   2829c:	ldr	x1, [sp, #112]
   282a0:	ldr	x2, [sp, #128]
   282a4:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   282a8:	ldp	x0, x1, [sp, #112]
   282ac:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   282b0:	stp	x22, x23, [sp, #112]
   282b4:	ldr	x2, [sp, #128]
   282b8:	b	28070 <__sanitizer_cov_dump@@Base+0x1450>
   282bc:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   282c0:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   282c4:	add	x2, x2, #0xee8
   282c8:	add	x0, x0, #0xf00
   282cc:	mov	x4, #0x0                   	// #0
   282d0:	mov	x3, #0x0                   	// #0
   282d4:	mov	w1, #0x23                  	// #35
   282d8:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   282dc:	ldr	x20, [x20, #4016]
   282e0:	ldr	x0, [x20]
   282e4:	cbz	x0, 28340 <__sanitizer_cov_dump@@Base+0x1720>
   282e8:	sub	x1, x0, #0x1
   282ec:	tst	x1, x0
   282f0:	b.ne	28380 <__sanitizer_cov_dump@@Base+0x1760>  // b.any
   282f4:	add	x1, x19, x1
   282f8:	neg	x0, x0
   282fc:	and	x20, x1, x0
   28300:	mov	w2, #0x0                   	// #0
   28304:	add	x1, x24, #0xc10
   28308:	mov	x0, x20
   2830c:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   28310:	mov	x22, x0
   28314:	ldr	x1, [sp, #144]
   28318:	ldr	x2, [sp, #160]
   2831c:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   28320:	ldp	x0, x1, [sp, #144]
   28324:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   28328:	stp	x22, x20, [sp, #144]
   2832c:	ldr	x2, [sp, #160]
   28330:	b	28100 <__sanitizer_cov_dump@@Base+0x14e0>
   28334:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   28338:	str	x0, [x22]
   2833c:	b	28270 <__sanitizer_cov_dump@@Base+0x1650>
   28340:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   28344:	str	x0, [x20]
   28348:	b	282e8 <__sanitizer_cov_dump@@Base+0x16c8>
   2834c:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   28350:	add	x0, x0, #0x0
   28354:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   28358:	ldr	x0, [sp, #168]
   2835c:	cbnz	x0, 28390 <__sanitizer_cov_dump@@Base+0x1770>
   28360:	ldp	x0, x1, [sp, #144]
   28364:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   28368:	ldp	x0, x1, [sp, #112]
   2836c:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   28370:	ldp	x23, x24, [sp, #32]
   28374:	ldp	x25, x26, [sp, #48]
   28378:	ldp	x27, x28, [sp, #64]
   2837c:	b	27fd8 <__sanitizer_cov_dump@@Base+0x13b8>
   28380:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   28384:	add	x0, x0, #0xbf8
   28388:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   2838c:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   28390:	ldr	x1, [sp, #144]
   28394:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   28398:	add	x0, x0, #0xf68
   2839c:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   283a0:	b	28360 <__sanitizer_cov_dump@@Base+0x1740>
   283a4:	stp	x19, xzr, [sp, #128]
   283a8:	b	2808c <__sanitizer_cov_dump@@Base+0x146c>
   283ac:	mov	x19, x1
   283b0:	b	28014 <__sanitizer_cov_dump@@Base+0x13f4>
   283b4:	stp	x19, xzr, [sp, #160]
   283b8:	b	28118 <__sanitizer_cov_dump@@Base+0x14f8>
   283bc:	nop
   283c0:	mov	w8, w1
   283c4:	and	w7, w7, #0xff
   283c8:	mov	x1, x2
   283cc:	mov	x9, x0
   283d0:	mov	x2, x3
   283d4:	mov	x3, x5
   283d8:	cbnz	w8, 283e8 <__sanitizer_cov_dump@@Base+0x17c8>
   283dc:	str	wzr, [x0, #8]
   283e0:	str	xzr, [x0, #2064]
   283e4:	ret
   283e8:	str	x2, [x0, #2064]
   283ec:	cmp	w8, #0x1
   283f0:	b.eq	28414 <__sanitizer_cov_dump@@Base+0x17f4>  // b.none
   283f4:	cbnz	w7, 28408 <__sanitizer_cov_dump@@Base+0x17e8>
   283f8:	cbz	x4, 28420 <__sanitizer_cov_dump@@Base+0x1800>
   283fc:	mov	w3, w8
   28400:	mov	x2, x4
   28404:	b	2db20 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5238>
   28408:	mov	w5, w8
   2840c:	mov	x4, x6
   28410:	b	27cf8 <__sanitizer_cov_dump@@Base+0x10d8>
   28414:	str	w8, [x9, #8]
   28418:	str	x1, [x9, #16]
   2841c:	ret
   28420:	mov	w2, w8
   28424:	b	2da80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5198>

0000000000028428 <__sanitizer_symbolize_pc@@Base>:
   28428:	cbnz	x3, 28430 <__sanitizer_symbolize_pc@@Base+0x8>
   2842c:	ret
   28430:	stp	x19, x20, [sp, #-112]!
   28434:	mov	x19, x2
   28438:	mov	x20, x3
   2843c:	stp	x21, x22, [sp, #16]
   28440:	mov	x21, x0
   28444:	stp	x23, x24, [sp, #32]
   28448:	mov	x23, x1
   2844c:	str	x30, [sp, #72]
   28450:	bl	299b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10c8>
   28454:	sub	x1, x21, #0x4
   28458:	bl	2ab10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2228>
   2845c:	mov	x21, x0
   28460:	cbz	x0, 2869c <__sanitizer_symbolize_pc@@Base+0x274>
   28464:	stp	x25, x26, [sp, #48]
   28468:	adrp	x26, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2846c:	ldr	x24, [x26, #4016]
   28470:	ldr	x22, [x24]
   28474:	str	x27, [sp, #64]
   28478:	cbz	x22, 285d4 <__sanitizer_symbolize_pc@@Base+0x1ac>
   2847c:	str	xzr, [sp, #80]
   28480:	stp	xzr, xzr, [sp, #88]
   28484:	sub	x0, x22, #0x1
   28488:	tst	x0, x22
   2848c:	b.ne	2868c <__sanitizer_symbolize_pc@@Base+0x264>  // b.any
   28490:	lsl	x0, x22, #1
   28494:	neg	x25, x22
   28498:	sub	x0, x0, #0x1
   2849c:	mov	w2, #0x0                   	// #0
   284a0:	and	x25, x0, x25
   284a4:	adrp	x27, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   284a8:	mov	x0, x25
   284ac:	add	x1, x27, #0xc10
   284b0:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   284b4:	mov	x24, x0
   284b8:	ldr	x1, [sp, #80]
   284bc:	ldr	x2, [sp, #96]
   284c0:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   284c4:	ldp	x0, x1, [sp, #80]
   284c8:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   284cc:	stp	x24, x25, [sp, #80]
   284d0:	ldr	x2, [sp, #96]
   284d4:	cmp	x22, x2
   284d8:	b.ls	286dc <__sanitizer_symbolize_pc@@Base+0x2b4>  // b.plast
   284dc:	cmp	x22, x25
   284e0:	b.hi	28628 <__sanitizer_symbolize_pc@@Base+0x200>  // b.pmore
   284e4:	add	x0, x24, x2
   284e8:	mov	w1, #0x0                   	// #0
   284ec:	sub	x2, x22, x2
   284f0:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   284f4:	ldr	x24, [sp, #80]
   284f8:	stp	x22, xzr, [sp, #96]
   284fc:	sub	x20, x20, #0x1
   28500:	strb	wzr, [x24]
   28504:	add	x20, x19, x20
   28508:	cmp	x19, x20
   2850c:	b.cs	285a4 <__sanitizer_symbolize_pc@@Base+0x17c>  // b.hs, b.nlast
   28510:	adrp	x25, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   28514:	adrp	x26, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   28518:	add	x27, sp, #0x50
   2851c:	add	x26, x26, #0x3e8
   28520:	ldr	x25, [x25, #4056]
   28524:	mov	w22, #0x0                   	// #0
   28528:	ldr	x0, [sp, #96]
   2852c:	ldr	x1, [sp, #80]
   28530:	cbz	x0, 285f0 <__sanitizer_symbolize_pc@@Base+0x1c8>
   28534:	strb	wzr, [x1]
   28538:	mov	x0, x27
   2853c:	mov	x6, x26
   28540:	add	x3, x21, #0x8
   28544:	ldrb	w4, [x25, #189]
   28548:	mov	w2, w22
   2854c:	ldr	x5, [x25, #24]
   28550:	mov	x1, x23
   28554:	str	xzr, [sp, #104]
   28558:	bl	28d10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x428>
   2855c:	ldr	x0, [sp, #104]
   28560:	cbz	x0, 28610 <__sanitizer_symbolize_pc@@Base+0x1e8>
   28564:	ldr	x1, [sp, #80]
   28568:	sub	x24, x20, x19
   2856c:	sub	x24, x24, #0x1
   28570:	mov	x0, x19
   28574:	mov	x2, x24
   28578:	add	w22, w22, #0x1
   2857c:	bl	1b4c8 <__sanitizer_set_report_fd@@Base+0x3648>
   28580:	ldr	x2, [sp, #104]
   28584:	cmp	x2, x24
   28588:	csel	x2, x2, x24, ls  // ls = plast
   2858c:	add	x19, x19, x2
   28590:	strb	wzr, [x19], #1
   28594:	ldr	x21, [x21]
   28598:	cmp	x21, #0x0
   2859c:	ccmp	x20, x19, #0x0, ne  // ne = any
   285a0:	b.hi	28528 <__sanitizer_symbolize_pc@@Base+0x100>  // b.pmore
   285a4:	cmp	x19, x20
   285a8:	b.hi	286bc <__sanitizer_symbolize_pc@@Base+0x294>  // b.pmore
   285ac:	ldp	x0, x1, [sp, #80]
   285b0:	strb	wzr, [x19]
   285b4:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   285b8:	ldp	x25, x26, [sp, #48]
   285bc:	ldr	x27, [sp, #64]
   285c0:	ldp	x21, x22, [sp, #16]
   285c4:	ldp	x23, x24, [sp, #32]
   285c8:	ldr	x30, [sp, #72]
   285cc:	ldp	x19, x20, [sp], #112
   285d0:	ret
   285d4:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   285d8:	str	x0, [x24]
   285dc:	str	xzr, [sp, #80]
   285e0:	mov	x22, x0
   285e4:	stp	xzr, xzr, [sp, #88]
   285e8:	cbnz	x0, 28484 <__sanitizer_symbolize_pc@@Base+0x5c>
   285ec:	stp	xzr, xzr, [sp, #96]
   285f0:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   285f4:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   285f8:	add	x2, x2, #0x118
   285fc:	add	x0, x0, #0xb98
   28600:	mov	x4, #0x0                   	// #0
   28604:	mov	x3, #0x0                   	// #0
   28608:	mov	w1, #0x1c5                 	// #453
   2860c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   28610:	ldr	x21, [x21]
   28614:	add	w22, w22, #0x1
   28618:	cmp	x21, #0x0
   2861c:	ccmp	x20, x19, #0x0, ne  // ne = any
   28620:	b.hi	28528 <__sanitizer_symbolize_pc@@Base+0x100>  // b.pmore
   28624:	b	285a4 <__sanitizer_symbolize_pc@@Base+0x17c>
   28628:	ldr	x26, [x26, #4016]
   2862c:	ldr	x0, [x26]
   28630:	cbz	x0, 28680 <__sanitizer_symbolize_pc@@Base+0x258>
   28634:	sub	x1, x0, #0x1
   28638:	tst	x0, x1
   2863c:	b.ne	2868c <__sanitizer_symbolize_pc@@Base+0x264>  // b.any
   28640:	add	x1, x22, x1
   28644:	neg	x0, x0
   28648:	and	x25, x1, x0
   2864c:	mov	w2, #0x0                   	// #0
   28650:	add	x1, x27, #0xc10
   28654:	mov	x0, x25
   28658:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   2865c:	mov	x24, x0
   28660:	ldr	x1, [sp, #80]
   28664:	ldr	x2, [sp, #96]
   28668:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   2866c:	ldp	x0, x1, [sp, #80]
   28670:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   28674:	stp	x24, x25, [sp, #80]
   28678:	ldr	x2, [sp, #96]
   2867c:	b	284e4 <__sanitizer_symbolize_pc@@Base+0xbc>
   28680:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   28684:	str	x0, [x26]
   28688:	b	28634 <__sanitizer_symbolize_pc@@Base+0x20c>
   2868c:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   28690:	add	x0, x0, #0xbf8
   28694:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   28698:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   2869c:	mov	x0, x19
   286a0:	add	x19, x19, x20
   286a4:	mov	x2, x20
   286a8:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   286ac:	add	x1, x1, #0xf80
   286b0:	bl	1b4c8 <__sanitizer_set_report_fd@@Base+0x3648>
   286b4:	sturb	wzr, [x19, #-1]
   286b8:	b	285c0 <__sanitizer_symbolize_pc@@Base+0x198>
   286bc:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   286c0:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   286c4:	add	x2, x2, #0xf98
   286c8:	add	x0, x0, #0xf00
   286cc:	mov	x4, #0x0                   	// #0
   286d0:	mov	x3, #0x0                   	// #0
   286d4:	mov	w1, #0x87                  	// #135
   286d8:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   286dc:	stp	x22, xzr, [sp, #96]
   286e0:	b	284fc <__sanitizer_symbolize_pc@@Base+0xd4>
   286e4:	nop

00000000000286e8 <__sanitizer_symbolize_global@@Base>:
   286e8:	cbnz	x3, 286f0 <__sanitizer_symbolize_global@@Base+0x8>
   286ec:	ret
   286f0:	stp	x19, x20, [sp, #-176]!
   286f4:	mov	x20, x0
   286f8:	mov	x19, x3
   286fc:	stp	x21, x22, [sp, #16]
   28700:	mov	x22, x1
   28704:	mov	x21, x2
   28708:	stp	x23, x24, [sp, #32]
   2870c:	add	x23, sp, #0x70
   28710:	mov	x0, x23
   28714:	str	x30, [sp, #72]
   28718:	strb	wzr, [x2]
   2871c:	bl	29290 <__sanitizer_get_module_and_offset_for_pc@@Base+0x9a8>
   28720:	bl	299b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10c8>
   28724:	mov	x2, x23
   28728:	mov	x1, x20
   2872c:	bl	2ac50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2368>
   28730:	tst	w0, #0xff
   28734:	b.eq	28818 <__sanitizer_symbolize_global@@Base+0x130>  // b.none
   28738:	stp	x25, x26, [sp, #48]
   2873c:	adrp	x26, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   28740:	ldr	x24, [x26, #4016]
   28744:	ldr	x20, [x24]
   28748:	str	x27, [sp, #64]
   2874c:	cbz	x20, 2882c <__sanitizer_symbolize_global@@Base+0x144>
   28750:	str	xzr, [sp, #80]
   28754:	stp	xzr, xzr, [sp, #88]
   28758:	sub	x0, x20, #0x1
   2875c:	tst	x0, x20
   28760:	b.ne	288cc <__sanitizer_symbolize_global@@Base+0x1e4>  // b.any
   28764:	lsl	x0, x20, #1
   28768:	neg	x25, x20
   2876c:	sub	x0, x0, #0x1
   28770:	mov	w2, #0x0                   	// #0
   28774:	and	x25, x0, x25
   28778:	adrp	x27, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   2877c:	mov	x0, x25
   28780:	add	x1, x27, #0xc10
   28784:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   28788:	mov	x24, x0
   2878c:	ldr	x1, [sp, #80]
   28790:	ldr	x2, [sp, #96]
   28794:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   28798:	ldp	x0, x1, [sp, #80]
   2879c:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   287a0:	stp	x24, x25, [sp, #80]
   287a4:	ldr	x2, [sp, #96]
   287a8:	cmp	x20, x2
   287ac:	b.ls	288dc <__sanitizer_symbolize_global@@Base+0x1f4>  // b.plast
   287b0:	cmp	x20, x25
   287b4:	b.hi	28868 <__sanitizer_symbolize_global@@Base+0x180>  // b.pmore
   287b8:	add	x0, x24, x2
   287bc:	mov	w1, #0x0                   	// #0
   287c0:	sub	x2, x20, x2
   287c4:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   287c8:	ldr	x24, [sp, #80]
   287cc:	stp	x20, xzr, [sp, #96]
   287d0:	adrp	x3, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   287d4:	strb	wzr, [x24]
   287d8:	mov	x2, x23
   287dc:	ldr	x3, [x3, #4056]
   287e0:	mov	x1, x22
   287e4:	add	x0, sp, #0x50
   287e8:	ldr	x3, [x3, #24]
   287ec:	bl	28978 <__sanitizer_get_module_and_offset_for_pc@@Base+0x90>
   287f0:	ldr	x1, [sp, #80]
   287f4:	mov	x2, x19
   287f8:	mov	x0, x21
   287fc:	bl	1b4c8 <__sanitizer_set_report_fd@@Base+0x3648>
   28800:	ldp	x0, x1, [sp, #80]
   28804:	add	x2, x21, x19
   28808:	sturb	wzr, [x2, #-1]
   2880c:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   28810:	ldp	x25, x26, [sp, #48]
   28814:	ldr	x27, [sp, #64]
   28818:	ldp	x21, x22, [sp, #16]
   2881c:	ldp	x23, x24, [sp, #32]
   28820:	ldr	x30, [sp, #72]
   28824:	ldp	x19, x20, [sp], #176
   28828:	ret
   2882c:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   28830:	str	x0, [x24]
   28834:	str	xzr, [sp, #80]
   28838:	mov	x20, x0
   2883c:	stp	xzr, xzr, [sp, #88]
   28840:	cbnz	x0, 28758 <__sanitizer_symbolize_global@@Base+0x70>
   28844:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   28848:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   2884c:	add	x2, x2, #0x118
   28850:	add	x0, x0, #0xb98
   28854:	mov	x4, #0x0                   	// #0
   28858:	mov	x3, #0x0                   	// #0
   2885c:	mov	w1, #0x1c5                 	// #453
   28860:	stp	xzr, xzr, [sp, #96]
   28864:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   28868:	ldr	x26, [x26, #4016]
   2886c:	ldr	x0, [x26]
   28870:	cbz	x0, 288c0 <__sanitizer_symbolize_global@@Base+0x1d8>
   28874:	sub	x1, x0, #0x1
   28878:	tst	x0, x1
   2887c:	b.ne	288cc <__sanitizer_symbolize_global@@Base+0x1e4>  // b.any
   28880:	add	x1, x20, x1
   28884:	neg	x0, x0
   28888:	and	x25, x1, x0
   2888c:	mov	w2, #0x0                   	// #0
   28890:	add	x1, x27, #0xc10
   28894:	mov	x0, x25
   28898:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   2889c:	mov	x24, x0
   288a0:	ldr	x1, [sp, #80]
   288a4:	ldr	x2, [sp, #96]
   288a8:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   288ac:	ldp	x0, x1, [sp, #80]
   288b0:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   288b4:	stp	x24, x25, [sp, #80]
   288b8:	ldr	x2, [sp, #96]
   288bc:	b	287b8 <__sanitizer_symbolize_global@@Base+0xd0>
   288c0:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   288c4:	str	x0, [x26]
   288c8:	b	28874 <__sanitizer_symbolize_global@@Base+0x18c>
   288cc:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   288d0:	add	x0, x0, #0xbf8
   288d4:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   288d8:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   288dc:	stp	x20, xzr, [sp, #96]
   288e0:	b	287d0 <__sanitizer_symbolize_global@@Base+0xe8>
   288e4:	nop

00000000000288e8 <__sanitizer_get_module_and_offset_for_pc@@Base>:
   288e8:	stp	x19, x20, [sp, #-64]!
   288ec:	mov	x19, x1
   288f0:	mov	x20, x2
   288f4:	stp	x21, x22, [sp, #16]
   288f8:	mov	x21, x0
   288fc:	mov	x22, x3
   28900:	str	x30, [sp, #32]
   28904:	str	xzr, [sp, #56]
   28908:	bl	299b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10c8>
   2890c:	mov	x1, x21
   28910:	mov	x3, x22
   28914:	add	x2, sp, #0x38
   28918:	mov	w21, #0x0                   	// #0
   2891c:	bl	2a0a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x17b8>
   28920:	tst	w0, #0xff
   28924:	b.eq	28938 <__sanitizer_get_module_and_offset_for_pc@@Base+0x50>  // b.none
   28928:	cmp	x19, #0x0
   2892c:	mov	w21, #0x1                   	// #1
   28930:	ccmp	x20, #0x0, #0x4, ne  // ne = any
   28934:	b.ne	2894c <__sanitizer_get_module_and_offset_for_pc@@Base+0x64>  // b.any
   28938:	mov	w0, w21
   2893c:	ldp	x21, x22, [sp, #16]
   28940:	ldr	x30, [sp, #32]
   28944:	ldp	x19, x20, [sp], #64
   28948:	ret
   2894c:	ldr	x1, [sp, #56]
   28950:	mov	x0, x19
   28954:	add	x19, x19, x20
   28958:	mov	x2, x20
   2895c:	bl	1b4c8 <__sanitizer_set_report_fd@@Base+0x3648>
   28960:	sturb	wzr, [x19, #-1]
   28964:	mov	w0, w21
   28968:	ldp	x21, x22, [sp, #16]
   2896c:	ldr	x30, [sp, #32]
   28970:	ldp	x19, x20, [sp], #64
   28974:	ret
   28978:	stp	x19, x20, [sp, #-80]!
   2897c:	stp	x21, x22, [sp, #16]
   28980:	mov	x22, x2
   28984:	str	x30, [sp, #64]
   28988:	ldrb	w2, [x1]
   2898c:	cbz	w2, 28a28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x140>
   28990:	mov	x19, x1
   28994:	mov	x21, x0
   28998:	stp	x23, x24, [sp, #32]
   2899c:	adrp	x23, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   289a0:	mov	x24, x3
   289a4:	add	x23, x23, #0xcb8
   289a8:	stp	x25, x26, [sp, #48]
   289ac:	adrp	x25, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   289b0:	adrp	x26, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   289b4:	add	x25, x25, #0xc98
   289b8:	b	289d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0xec>
   289bc:	add	x19, x19, #0x2
   289c0:	add	x1, x26, #0xfc0
   289c4:	mov	x0, x21
   289c8:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   289cc:	ldrb	w2, [x20, #1]
   289d0:	cbz	w2, 28a20 <__sanitizer_get_module_and_offset_for_pc@@Base+0x138>
   289d4:	cmp	w2, #0x25
   289d8:	add	x20, x19, #0x1
   289dc:	b.ne	28a64 <__sanitizer_get_module_and_offset_for_pc@@Base+0x17c>  // b.any
   289e0:	ldrb	w2, [x19, #1]
   289e4:	cmp	w2, #0x6c
   289e8:	b.eq	28a84 <__sanitizer_get_module_and_offset_for_pc@@Base+0x19c>  // b.none
   289ec:	b.hi	28a38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x150>  // b.pmore
   289f0:	cmp	w2, #0x25
   289f4:	b.eq	289bc <__sanitizer_get_module_and_offset_for_pc@@Base+0xd4>  // b.none
   289f8:	cmp	w2, #0x67
   289fc:	b.ne	28a9c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b4>  // b.any
   28a00:	ldr	x2, [x22, #40]
   28a04:	mov	x1, x23
   28a08:	mov	x0, x21
   28a0c:	add	x19, x19, #0x2
   28a10:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   28a14:	ldrb	w2, [x20, #1]
   28a18:	cbnz	w2, 289d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0xec>
   28a1c:	nop
   28a20:	ldp	x23, x24, [sp, #32]
   28a24:	ldp	x25, x26, [sp, #48]
   28a28:	ldp	x21, x22, [sp, #16]
   28a2c:	ldr	x30, [sp, #64]
   28a30:	ldp	x19, x20, [sp], #80
   28a34:	ret
   28a38:	cmp	w2, #0x73
   28a3c:	b.ne	28a9c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b4>  // b.any
   28a40:	ldr	x0, [x22, #24]
   28a44:	mov	x1, x24
   28a48:	add	x19, x19, #0x2
   28a4c:	bl	148e8 <_ZdaPvRKSt9nothrow_t@@Base+0x2b68>
   28a50:	mov	x2, x0
   28a54:	mov	x1, x23
   28a58:	mov	x0, x21
   28a5c:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   28a60:	b	289cc <__sanitizer_get_module_and_offset_for_pc@@Base+0xe4>
   28a64:	mov	x0, x21
   28a68:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   28a6c:	add	x1, x1, #0xfb8
   28a70:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   28a74:	mov	x0, x20
   28a78:	mov	x20, x19
   28a7c:	mov	x19, x0
   28a80:	b	289cc <__sanitizer_get_module_and_offset_for_pc@@Base+0xe4>
   28a84:	ldr	x2, [x22, #32]
   28a88:	add	x19, x19, #0x2
   28a8c:	mov	x1, x25
   28a90:	mov	x0, x21
   28a94:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   28a98:	b	289cc <__sanitizer_get_module_and_offset_for_pc@@Base+0xe4>
   28a9c:	mov	w1, w2
   28aa0:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   28aa4:	add	x0, x0, #0xfc8
   28aa8:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   28aac:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   28ab0:	stp	x19, x20, [sp, #-48]!
   28ab4:	cmp	w2, #0x0
   28ab8:	and	w4, w4, #0xff
   28abc:	stp	x21, x22, [sp, #16]
   28ac0:	mov	x20, x0
   28ac4:	mov	w19, w2
   28ac8:	str	x30, [sp, #32]
   28acc:	mov	x0, x1
   28ad0:	mov	w21, w3
   28ad4:	ccmp	w4, #0x0, #0x4, gt
   28ad8:	mov	x1, x5
   28adc:	b.ne	28b4c <__sanitizer_get_module_and_offset_for_pc@@Base+0x264>  // b.any
   28ae0:	bl	148e8 <_ZdaPvRKSt9nothrow_t@@Base+0x2b68>
   28ae4:	mov	x2, x0
   28ae8:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   28aec:	mov	x0, x20
   28af0:	add	x1, x1, #0xcb8
   28af4:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   28af8:	cmp	w19, #0x0
   28afc:	b.gt	28b10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x228>
   28b00:	ldp	x21, x22, [sp, #16]
   28b04:	ldr	x30, [sp, #32]
   28b08:	ldp	x19, x20, [sp], #48
   28b0c:	ret
   28b10:	adrp	x22, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   28b14:	add	x22, x22, #0x18
   28b18:	mov	w2, w19
   28b1c:	mov	x1, x22
   28b20:	mov	x0, x20
   28b24:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   28b28:	cmp	w21, #0x0
   28b2c:	b.le	28b00 <__sanitizer_get_module_and_offset_for_pc@@Base+0x218>
   28b30:	mov	w2, w21
   28b34:	mov	x1, x22
   28b38:	mov	x0, x20
   28b3c:	ldp	x21, x22, [sp, #16]
   28b40:	ldr	x30, [sp, #32]
   28b44:	ldp	x19, x20, [sp], #48
   28b48:	b	1fd40 <__sanitizer_on_print@@Base+0x420>
   28b4c:	bl	148e8 <_ZdaPvRKSt9nothrow_t@@Base+0x2b68>
   28b50:	mov	x2, x0
   28b54:	mov	w3, w19
   28b58:	mov	x0, x20
   28b5c:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   28b60:	add	x1, x1, #0x8
   28b64:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   28b68:	cmp	w21, #0x0
   28b6c:	b.gt	28b8c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a4>
   28b70:	mov	x0, x20
   28b74:	adrp	x1, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   28b78:	ldp	x21, x22, [sp, #16]
   28b7c:	add	x1, x1, #0x6a0
   28b80:	ldr	x30, [sp, #32]
   28b84:	ldp	x19, x20, [sp], #48
   28b88:	b	1fd40 <__sanitizer_on_print@@Base+0x420>
   28b8c:	mov	w2, w21
   28b90:	mov	x0, x20
   28b94:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   28b98:	add	x1, x1, #0x10
   28b9c:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   28ba0:	mov	x0, x20
   28ba4:	adrp	x1, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   28ba8:	ldp	x21, x22, [sp, #16]
   28bac:	add	x1, x1, #0x6a0
   28bb0:	ldr	x30, [sp, #32]
   28bb4:	ldp	x19, x20, [sp], #48
   28bb8:	b	1fd40 <__sanitizer_on_print@@Base+0x420>
   28bbc:	nop
   28bc0:	stp	x19, x20, [sp, #-32]!
   28bc4:	mov	x20, x0
   28bc8:	mov	w19, w3
   28bcc:	mov	x0, x1
   28bd0:	mov	x1, x4
   28bd4:	stp	x21, x30, [sp, #16]
   28bd8:	mov	x21, x2
   28bdc:	bl	148e8 <_ZdaPvRKSt9nothrow_t@@Base+0x2b68>
   28be0:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   28be4:	mov	x2, x0
   28be8:	add	x1, x1, #0x60
   28bec:	mov	x0, x20
   28bf0:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   28bf4:	cbnz	w19, 28c14 <__sanitizer_get_module_and_offset_for_pc@@Base+0x32c>
   28bf8:	mov	x2, x21
   28bfc:	mov	x0, x20
   28c00:	ldp	x21, x30, [sp, #16]
   28c04:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   28c08:	ldp	x19, x20, [sp], #32
   28c0c:	add	x1, x1, #0x98
   28c10:	b	1fd40 <__sanitizer_on_print@@Base+0x420>
   28c14:	cmp	w19, #0x5
   28c18:	b.eq	28ce4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3fc>  // b.none
   28c1c:	b.hi	28c64 <__sanitizer_get_module_and_offset_for_pc@@Base+0x37c>  // b.pmore
   28c20:	cmp	w19, #0x3
   28c24:	b.eq	28cd8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f0>  // b.none
   28c28:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   28c2c:	cmp	w19, #0x4
   28c30:	add	x2, x1, #0x48
   28c34:	b.ne	28c90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a8>  // b.any
   28c38:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   28c3c:	mov	x0, x20
   28c40:	add	x1, x1, #0x90
   28c44:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   28c48:	mov	x2, x21
   28c4c:	mov	x0, x20
   28c50:	ldp	x21, x30, [sp, #16]
   28c54:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   28c58:	ldp	x19, x20, [sp], #32
   28c5c:	add	x1, x1, #0x98
   28c60:	b	1fd40 <__sanitizer_on_print@@Base+0x420>
   28c64:	cmp	w19, #0x7
   28c68:	b.eq	28ccc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3e4>  // b.none
   28c6c:	cmp	w19, #0x8
   28c70:	b.ne	28cac <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c4>  // b.any
   28c74:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   28c78:	mov	x0, x20
   28c7c:	add	x2, x1, #0x50
   28c80:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   28c84:	add	x1, x1, #0x90
   28c88:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   28c8c:	b	28c48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x360>
   28c90:	cmp	w19, #0x1
   28c94:	b.eq	28cc0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d8>  // b.none
   28c98:	cmp	w19, #0x2
   28c9c:	b.ne	28cf0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x408>  // b.any
   28ca0:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   28ca4:	add	x2, x1, #0x28
   28ca8:	b	28c38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x350>
   28cac:	cmp	w19, #0x6
   28cb0:	b.ne	28cf0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x408>  // b.any
   28cb4:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   28cb8:	add	x2, x1, #0x58
   28cbc:	b	28c38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x350>
   28cc0:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   28cc4:	add	x2, x1, #0x30
   28cc8:	b	28c38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x350>
   28ccc:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   28cd0:	add	x2, x1, #0x20
   28cd4:	b	28c38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x350>
   28cd8:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   28cdc:	add	x2, x1, #0x40
   28ce0:	b	28c38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x350>
   28ce4:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   28ce8:	add	x2, x1, #0x38
   28cec:	b	28c38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x350>
   28cf0:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   28cf4:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   28cf8:	add	x2, x2, #0x68
   28cfc:	add	x0, x0, #0xb98
   28d00:	mov	x4, #0x0                   	// #0
   28d04:	mov	x3, #0x0                   	// #0
   28d08:	mov	w1, #0x2b8                 	// #696
   28d0c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   28d10:	stp	x19, x20, [sp, #-112]!
   28d14:	mov	x19, x1
   28d18:	mov	x20, x0
   28d1c:	mov	x0, x1
   28d20:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   28d24:	add	x1, x1, #0xce0
   28d28:	stp	x21, x22, [sp, #16]
   28d2c:	mov	x21, x3
   28d30:	mov	x22, x6
   28d34:	stp	x23, x24, [sp, #32]
   28d38:	mov	x23, x5
   28d3c:	stp	x25, x26, [sp, #48]
   28d40:	mov	w26, w2
   28d44:	stp	x27, x28, [sp, #64]
   28d48:	and	w27, w4, #0xff
   28d4c:	str	x30, [sp, #80]
   28d50:	bl	1a560 <__sanitizer_set_report_fd@@Base+0x26e0>
   28d54:	cbz	w0, 29080 <__sanitizer_get_module_and_offset_for_pc@@Base+0x798>
   28d58:	ldrb	w2, [x19]
   28d5c:	cbz	w2, 28e30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x548>
   28d60:	adrp	x25, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   28d64:	adrp	x24, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   28d68:	add	x25, x25, #0xc98
   28d6c:	add	x24, x24, #0xa8
   28d70:	b	28e00 <__sanitizer_get_module_and_offset_for_pc@@Base+0x518>
   28d74:	ldrb	w2, [x19, #1]
   28d78:	cmp	w2, #0x6c
   28d7c:	b.eq	29068 <__sanitizer_get_module_and_offset_for_pc@@Base+0x780>  // b.none
   28d80:	b.hi	28ea8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c0>  // b.pmore
   28d84:	cmp	w2, #0x4d
   28d88:	b.eq	29030 <__sanitizer_get_module_and_offset_for_pc@@Base+0x748>  // b.none
   28d8c:	b.ls	28e74 <__sanitizer_get_module_and_offset_for_pc@@Base+0x58c>  // b.plast
   28d90:	cmp	w2, #0x63
   28d94:	b.eq	29018 <__sanitizer_get_module_and_offset_for_pc@@Base+0x730>  // b.none
   28d98:	cmp	w2, #0x66
   28d9c:	b.ne	28e4c <__sanitizer_get_module_and_offset_for_pc@@Base+0x564>  // b.any
   28da0:	ldr	x3, [x21, #32]
   28da4:	cbz	x3, 28de0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f8>
   28da8:	cbz	x22, 28de0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f8>
   28dac:	mov	x0, x22
   28db0:	str	x3, [sp, #96]
   28db4:	bl	1a690 <__sanitizer_set_report_fd@@Base+0x2810>
   28db8:	mov	x2, x0
   28dbc:	ldr	x3, [sp, #96]
   28dc0:	mov	x1, x22
   28dc4:	stp	x2, x3, [sp, #96]
   28dc8:	mov	x0, x3
   28dcc:	bl	1a5a8 <__sanitizer_set_report_fd@@Base+0x2728>
   28dd0:	cmp	w0, #0x0
   28dd4:	ldp	x2, x3, [sp, #96]
   28dd8:	add	x2, x3, x2
   28ddc:	csel	x3, x2, x3, eq  // eq = none
   28de0:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   28de4:	mov	x2, x3
   28de8:	add	x19, x19, #0x2
   28dec:	mov	x0, x20
   28df0:	add	x1, x1, #0xcb8
   28df4:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   28df8:	ldrb	w2, [x28, #1]
   28dfc:	cbz	w2, 28e30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x548>
   28e00:	cmp	w2, #0x25
   28e04:	add	x28, x19, #0x1
   28e08:	b.eq	28d74 <__sanitizer_get_module_and_offset_for_pc@@Base+0x48c>  // b.none
   28e0c:	mov	x0, x20
   28e10:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   28e14:	add	x1, x1, #0xfb8
   28e18:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   28e1c:	mov	x0, x28
   28e20:	mov	x28, x19
   28e24:	mov	x19, x0
   28e28:	ldrb	w2, [x28, #1]
   28e2c:	cbnz	w2, 28e00 <__sanitizer_get_module_and_offset_for_pc@@Base+0x518>
   28e30:	ldp	x21, x22, [sp, #16]
   28e34:	ldp	x23, x24, [sp, #32]
   28e38:	ldp	x25, x26, [sp, #48]
   28e3c:	ldp	x27, x28, [sp, #64]
   28e40:	ldr	x30, [sp, #80]
   28e44:	ldp	x19, x20, [sp], #112
   28e48:	ret
   28e4c:	cmp	w2, #0x53
   28e50:	b.ne	290d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f0>  // b.any
   28e54:	ldp	w2, w3, [x21, #56]
   28e58:	add	x19, x19, #0x2
   28e5c:	ldr	x1, [x21, #48]
   28e60:	mov	x5, x23
   28e64:	mov	w4, w27
   28e68:	mov	x0, x20
   28e6c:	bl	28ab0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1c8>
   28e70:	b	28df8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x510>
   28e74:	cmp	w2, #0x46
   28e78:	b.eq	28f80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x698>  // b.none
   28e7c:	cmp	w2, #0x4c
   28e80:	b.ne	28edc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5f4>  // b.any
   28e84:	ldr	x1, [x21, #48]
   28e88:	add	x19, x19, #0x2
   28e8c:	cbz	x1, 29090 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7a8>
   28e90:	ldp	w2, w3, [x21, #56]
   28e94:	mov	x5, x23
   28e98:	mov	w4, w27
   28e9c:	mov	x0, x20
   28ea0:	bl	28ab0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1c8>
   28ea4:	b	28df8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x510>
   28ea8:	cmp	w2, #0x70
   28eac:	b.eq	29000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x718>  // b.none
   28eb0:	b.ls	28f2c <__sanitizer_get_module_and_offset_for_pc@@Base+0x644>  // b.plast
   28eb4:	cmp	w2, #0x71
   28eb8:	b.ne	28efc <__sanitizer_get_module_and_offset_for_pc@@Base+0x614>  // b.any
   28ebc:	ldr	x2, [x21, #40]
   28ec0:	add	x19, x19, #0x2
   28ec4:	mov	x1, x24
   28ec8:	mov	x0, x20
   28ecc:	cmn	x2, #0x1
   28ed0:	csel	x2, x2, xzr, ne  // ne = any
   28ed4:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   28ed8:	b	28df8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x510>
   28edc:	cmp	w2, #0x25
   28ee0:	b.ne	290d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f0>  // b.any
   28ee4:	add	x19, x19, #0x2
   28ee8:	mov	x0, x20
   28eec:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   28ef0:	add	x1, x1, #0xfc0
   28ef4:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   28ef8:	b	28df8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x510>
   28efc:	cmp	w2, #0x73
   28f00:	b.ne	290d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f0>  // b.any
   28f04:	ldr	x0, [x21, #48]
   28f08:	mov	x1, x23
   28f0c:	bl	148e8 <_ZdaPvRKSt9nothrow_t@@Base+0x2b68>
   28f10:	add	x19, x19, #0x2
   28f14:	mov	x2, x0
   28f18:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   28f1c:	mov	x0, x20
   28f20:	add	x1, x1, #0xcb8
   28f24:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   28f28:	b	28df8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x510>
   28f2c:	cmp	w2, #0x6e
   28f30:	b.eq	28f64 <__sanitizer_get_module_and_offset_for_pc@@Base+0x67c>  // b.none
   28f34:	cmp	w2, #0x6f
   28f38:	b.ne	28f54 <__sanitizer_get_module_and_offset_for_pc@@Base+0x66c>  // b.any
   28f3c:	ldr	x2, [x21, #16]
   28f40:	add	x19, x19, #0x2
   28f44:	mov	x1, x24
   28f48:	mov	x0, x20
   28f4c:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   28f50:	b	28df8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x510>
   28f54:	cmp	w2, #0x6d
   28f58:	b.ne	290d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7f0>  // b.any
   28f5c:	ldr	x0, [x21, #8]
   28f60:	b	28f08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x620>
   28f64:	add	x19, x19, #0x2
   28f68:	mov	w2, w26
   28f6c:	mov	x0, x20
   28f70:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   28f74:	add	x1, x1, #0xa0
   28f78:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   28f7c:	b	28df8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x510>
   28f80:	ldr	x3, [x21, #32]
   28f84:	add	x19, x19, #0x2
   28f88:	cbz	x3, 28df8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x510>
   28f8c:	cbz	x22, 28fc4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6dc>
   28f90:	mov	x0, x22
   28f94:	str	x3, [sp, #96]
   28f98:	bl	1a690 <__sanitizer_set_report_fd@@Base+0x2810>
   28f9c:	mov	x2, x0
   28fa0:	ldr	x3, [sp, #96]
   28fa4:	mov	x1, x22
   28fa8:	stp	x2, x3, [sp, #96]
   28fac:	mov	x0, x3
   28fb0:	bl	1a5a8 <__sanitizer_set_report_fd@@Base+0x2728>
   28fb4:	cmp	w0, #0x0
   28fb8:	ldp	x2, x3, [sp, #96]
   28fbc:	add	x2, x3, x2
   28fc0:	csel	x3, x2, x3, eq  // eq = none
   28fc4:	mov	x0, x20
   28fc8:	mov	x2, x3
   28fcc:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   28fd0:	add	x1, x1, #0xb0
   28fd4:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   28fd8:	ldr	x0, [x21, #48]
   28fdc:	cbnz	x0, 28df8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x510>
   28fe0:	ldr	x2, [x21, #40]
   28fe4:	cmn	x2, #0x1
   28fe8:	b.eq	28df8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x510>  // b.none
   28fec:	mov	x0, x20
   28ff0:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   28ff4:	add	x1, x1, #0xb8
   28ff8:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   28ffc:	b	28df8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x510>
   29000:	ldr	x2, [x21]
   29004:	add	x19, x19, #0x2
   29008:	mov	x1, x24
   2900c:	mov	x0, x20
   29010:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   29014:	b	28df8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x510>
   29018:	ldr	w2, [x21, #60]
   2901c:	add	x19, x19, #0x2
   29020:	mov	x1, x25
   29024:	mov	x0, x20
   29028:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   2902c:	b	28df8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x510>
   29030:	ldr	x2, [x21]
   29034:	add	x19, x19, #0x2
   29038:	tbnz	x2, #60, 28df8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x510>
   2903c:	ldr	x0, [x21, #8]
   29040:	cbz	x0, 290b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7c8>
   29044:	bl	14968 <_ZdaPvRKSt9nothrow_t@@Base+0x2be8>
   29048:	mov	x1, x0
   2904c:	ldr	w3, [x21, #24]
   29050:	mov	x0, x20
   29054:	ldr	x2, [x21, #16]
   29058:	adrp	x4, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2905c:	add	x4, x4, #0x3e8
   29060:	bl	28bc0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d8>
   29064:	b	28df8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x510>
   29068:	ldr	w2, [x21, #56]
   2906c:	add	x19, x19, #0x2
   29070:	mov	x1, x25
   29074:	mov	x0, x20
   29078:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   2907c:	b	28df8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x510>
   29080:	adrp	x19, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   29084:	mov	w2, #0x20                  	// #32
   29088:	add	x19, x19, #0xe0
   2908c:	b	28d60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x478>
   29090:	ldr	x1, [x21, #8]
   29094:	cbz	x1, 290c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7dc>
   29098:	ldr	w3, [x21, #24]
   2909c:	mov	x4, x23
   290a0:	ldr	x2, [x21, #16]
   290a4:	mov	x0, x20
   290a8:	bl	28bc0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d8>
   290ac:	b	28df8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x510>
   290b0:	mov	x0, x20
   290b4:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   290b8:	add	x1, x1, #0xd8
   290bc:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   290c0:	b	28df8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x510>
   290c4:	mov	x0, x20
   290c8:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   290cc:	add	x1, x1, #0xc0
   290d0:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   290d4:	b	28df8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x510>
   290d8:	mov	w1, w2
   290dc:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   290e0:	add	x0, x0, #0xfc8
   290e4:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   290e8:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   290ec:	nop
   290f0:	stp	x19, x30, [sp, #-16]!
   290f4:	mov	x19, x0
   290f8:	mov	x2, #0x40                  	// #64
   290fc:	mov	w1, #0x0                   	// #0
   29100:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   29104:	mov	x0, #0xffffffffffffffff    	// #-1
   29108:	str	x0, [x19, #40]
   2910c:	ldp	x19, x30, [sp], #16
   29110:	ret
   29114:	nop
   29118:	stp	x19, x30, [sp, #-16]!
   2911c:	mov	x19, x0
   29120:	mov	x1, #0x0                   	// #0
   29124:	ldr	x0, [x0, #8]
   29128:	bl	12770 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   2912c:	ldr	x0, [x19, #32]
   29130:	mov	x1, #0x0                   	// #0
   29134:	bl	12770 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   29138:	ldr	x0, [x19, #48]
   2913c:	mov	x1, #0x0                   	// #0
   29140:	bl	12770 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   29144:	mov	x0, x19
   29148:	mov	x2, #0x40                  	// #64
   2914c:	mov	w1, #0x0                   	// #0
   29150:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   29154:	mov	x0, #0xffffffffffffffff    	// #-1
   29158:	str	x0, [x19, #40]
   2915c:	ldp	x19, x30, [sp], #16
   29160:	ret
   29164:	nop
   29168:	stp	x19, x20, [sp, #-32]!
   2916c:	mov	x19, x0
   29170:	mov	w20, w3
   29174:	mov	x0, x1
   29178:	stp	x21, x30, [sp, #16]
   2917c:	mov	x21, x2
   29180:	bl	1a360 <__sanitizer_set_report_fd@@Base+0x24e0>
   29184:	stp	x0, x21, [x19, #8]
   29188:	str	w20, [x19, #24]
   2918c:	ldp	x21, x30, [sp, #16]
   29190:	ldp	x19, x20, [sp], #32
   29194:	ret
   29198:	stp	x19, x30, [sp, #-16]!
   2919c:	mov	x19, x0
   291a0:	mov	x2, #0x40                  	// #64
   291a4:	mov	w1, #0x0                   	// #0
   291a8:	str	xzr, [x19], #8
   291ac:	mov	x0, x19
   291b0:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   291b4:	mov	x0, #0xffffffffffffffff    	// #-1
   291b8:	str	x0, [x19, #40]
   291bc:	ldp	x19, x30, [sp], #16
   291c0:	ret
   291c4:	nop
   291c8:	stp	x19, x20, [sp, #-32]!
   291cc:	mov	x2, #0x0                   	// #0
   291d0:	mov	x1, #0x0                   	// #0
   291d4:	stp	x21, x30, [sp, #16]
   291d8:	mov	x21, x0
   291dc:	mov	x0, #0x48                  	// #72
   291e0:	bl	121c8 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   291e4:	mov	x20, x0
   291e8:	mov	x19, x0
   291ec:	mov	x2, #0x40                  	// #64
   291f0:	mov	w1, #0x0                   	// #0
   291f4:	str	xzr, [x20], #8
   291f8:	mov	x0, x20
   291fc:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   29200:	mov	x0, #0xffffffffffffffff    	// #-1
   29204:	str	x0, [x20, #40]
   29208:	str	x21, [x19, #8]
   2920c:	mov	x0, x19
   29210:	ldp	x21, x30, [sp, #16]
   29214:	ldp	x19, x20, [sp], #32
   29218:	ret
   2921c:	nop
   29220:	stp	x19, x20, [sp, #-32]!
   29224:	mov	x19, x0
   29228:	add	x20, x0, #0x8
   2922c:	ldr	x0, [x0, #16]
   29230:	mov	x1, #0x0                   	// #0
   29234:	str	x30, [sp, #16]
   29238:	bl	12770 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   2923c:	ldr	x0, [x19, #40]
   29240:	mov	x1, #0x0                   	// #0
   29244:	bl	12770 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   29248:	ldr	x0, [x19, #56]
   2924c:	mov	x1, #0x0                   	// #0
   29250:	bl	12770 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   29254:	mov	w1, #0x0                   	// #0
   29258:	mov	x0, x20
   2925c:	mov	x2, #0x40                  	// #64
   29260:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   29264:	ldr	x0, [x19]
   29268:	mov	x1, #0xffffffffffffffff    	// #-1
   2926c:	str	x1, [x19, #48]
   29270:	cbz	x0, 29278 <__sanitizer_get_module_and_offset_for_pc@@Base+0x990>
   29274:	bl	29220 <__sanitizer_get_module_and_offset_for_pc@@Base+0x938>
   29278:	mov	x0, x19
   2927c:	mov	x1, #0x0                   	// #0
   29280:	ldr	x30, [sp, #16]
   29284:	ldp	x19, x20, [sp], #32
   29288:	b	12770 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   2928c:	nop
   29290:	mov	x2, #0x40                  	// #64
   29294:	mov	w1, #0x0                   	// #0
   29298:	b	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   2929c:	nop
   292a0:	stp	x19, x30, [sp, #-16]!
   292a4:	mov	x19, x0
   292a8:	mov	x1, #0x0                   	// #0
   292ac:	ldr	x0, [x0]
   292b0:	bl	12770 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   292b4:	ldr	x0, [x19, #24]
   292b8:	mov	x1, #0x0                   	// #0
   292bc:	bl	12770 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   292c0:	ldr	x0, [x19, #40]
   292c4:	mov	x1, #0x0                   	// #0
   292c8:	bl	12770 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   292cc:	mov	x0, x19
   292d0:	mov	x2, #0x40                  	// #64
   292d4:	ldp	x19, x30, [sp], #16
   292d8:	mov	w1, #0x0                   	// #0
   292dc:	b	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   292e0:	stp	x19, x20, [sp, #-32]!
   292e4:	mov	x1, #0x0                   	// #0
   292e8:	stp	x21, x30, [sp, #16]
   292ec:	mov	x21, x0
   292f0:	ldr	x0, [x0]
   292f4:	bl	12770 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   292f8:	ldr	x0, [x21, #40]
   292fc:	ldr	x19, [x21, #24]
   29300:	lsl	x20, x0, #3
   29304:	sub	x20, x20, x0
   29308:	add	x20, x19, x20, lsl #3
   2930c:	cmp	x20, x19
   29310:	b.eq	29348 <__sanitizer_get_module_and_offset_for_pc@@Base+0xa60>  // b.none
   29314:	nop
   29318:	ldr	x0, [x19]
   2931c:	mov	x1, #0x0                   	// #0
   29320:	add	x19, x19, #0x38
   29324:	bl	12770 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   29328:	ldur	x0, [x19, #-48]
   2932c:	mov	x1, #0x0                   	// #0
   29330:	bl	12770 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   29334:	ldur	x0, [x19, #-40]
   29338:	mov	x1, #0x0                   	// #0
   2933c:	bl	12770 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   29340:	cmp	x20, x19
   29344:	b.ne	29318 <__sanitizer_get_module_and_offset_for_pc@@Base+0xa30>  // b.any
   29348:	str	xzr, [x21, #40]
   2934c:	ldp	x21, x30, [sp, #16]
   29350:	ldp	x19, x20, [sp], #32
   29354:	ret
   29358:	strb	wzr, [x0, #104]
   2935c:	ret
   29360:	ldr	x3, [x0, #224]
   29364:	cbz	x3, 2938c <__sanitizer_get_module_and_offset_for_pc@@Base+0xaa4>
   29368:	str	x30, [sp, #-16]!
   2936c:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   29370:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   29374:	add	x2, x2, #0xf8
   29378:	add	x0, x0, #0x128
   2937c:	mov	x4, #0x0                   	// #0
   29380:	mov	x3, #0x0                   	// #0
   29384:	mov	w1, #0x59                  	// #89
   29388:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   2938c:	ldr	x3, [x0, #232]
   29390:	cbnz	x3, 29368 <__sanitizer_get_module_and_offset_for_pc@@Base+0xa80>
   29394:	stp	x1, x2, [x0, #224]
   29398:	ret
   2939c:	nop
   293a0:	stp	x19, x20, [sp, #-48]!
   293a4:	mov	x20, x0
   293a8:	ldr	x0, [x0, #32]
   293ac:	stp	x21, x22, [sp, #16]
   293b0:	mov	x21, x1
   293b4:	str	x30, [sp, #32]
   293b8:	bl	1c798 <__sanitizer_set_report_fd@@Base+0x4918>
   293bc:	ldr	x0, [x20, #24]
   293c0:	cbz	x0, 293d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xae8>
   293c4:	mov	x1, x21
   293c8:	bl	1a560 <__sanitizer_set_report_fd@@Base+0x26e0>
   293cc:	cbz	w0, 29470 <__sanitizer_get_module_and_offset_for_pc@@Base+0xb88>
   293d0:	ldr	x0, [x20, #16]
   293d4:	mov	x19, #0x0                   	// #0
   293d8:	cbnz	x0, 293f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xb08>
   293dc:	b	29430 <__sanitizer_get_module_and_offset_for_pc@@Base+0xb48>
   293e0:	ldr	x0, [x20, #16]
   293e4:	add	x19, x19, #0x1
   293e8:	cmp	x19, x0
   293ec:	b.cs	29430 <__sanitizer_get_module_and_offset_for_pc@@Base+0xb48>  // b.hs, b.nlast
   293f0:	ldr	x0, [x20]
   293f4:	mov	x1, x21
   293f8:	lsl	x22, x19, #3
   293fc:	ldr	x0, [x0, x19, lsl #3]
   29400:	bl	1a560 <__sanitizer_set_report_fd@@Base+0x26e0>
   29404:	cbnz	w0, 293e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xaf8>
   29408:	ldr	x4, [x20, #16]
   2940c:	ldr	x0, [x20]
   29410:	cmp	x4, x19
   29414:	b.ls	29564 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc7c>  // b.plast
   29418:	ldr	x0, [x0, x22]
   2941c:	str	x0, [x20, #24]
   29420:	ldp	x21, x22, [sp, #16]
   29424:	ldr	x30, [sp, #32]
   29428:	ldp	x19, x20, [sp], #48
   2942c:	ret
   29430:	mov	x0, x21
   29434:	bl	1a360 <__sanitizer_set_report_fd@@Base+0x24e0>
   29438:	ldp	x4, x3, [x20, #8]
   2943c:	mov	x19, x20
   29440:	str	x0, [x19, #24]!
   29444:	lsr	x4, x4, #3
   29448:	cmp	x3, x4
   2944c:	b.hi	2954c <__sanitizer_get_module_and_offset_for_pc@@Base+0xc64>  // b.pmore
   29450:	add	x21, x3, #0x1
   29454:	b.eq	29484 <__sanitizer_get_module_and_offset_for_pc@@Base+0xb9c>  // b.none
   29458:	ldr	x22, [x20]
   2945c:	str	x21, [x20, #16]
   29460:	mov	x1, x19
   29464:	add	x0, x22, x3, lsl #3
   29468:	mov	x2, #0x8                   	// #8
   2946c:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   29470:	ldp	x21, x22, [sp, #16]
   29474:	ldr	x0, [x20, #24]
   29478:	ldr	x30, [sp, #32]
   2947c:	ldp	x19, x20, [sp], #48
   29480:	ret
   29484:	tst	x3, x21
   29488:	b.eq	294c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0xbdc>  // b.none
   2948c:	clz	x2, x21
   29490:	mov	w1, #0x3f                  	// #63
   29494:	sub	w1, w1, w2
   29498:	mov	x2, #0x1                   	// #1
   2949c:	add	w4, w1, #0x1
   294a0:	lsl	x4, x2, x4
   294a4:	cmp	x4, x21
   294a8:	b.ls	29530 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc48>  // b.plast
   294ac:	lsl	x1, x2, x1
   294b0:	cmp	x1, x21
   294b4:	b.cs	295b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0xccc>  // b.hs, b.nlast
   294b8:	cmp	x3, x4
   294bc:	b.hi	2958c <__sanitizer_get_module_and_offset_for_pc@@Base+0xca4>  // b.pmore
   294c0:	mov	x21, x4
   294c4:	adrp	x22, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   294c8:	lsl	x21, x21, #3
   294cc:	ldr	x22, [x22, #4016]
   294d0:	ldr	x0, [x22]
   294d4:	cbz	x0, 29580 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc98>
   294d8:	sub	x1, x0, #0x1
   294dc:	tst	x0, x1
   294e0:	b.ne	295a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0xcbc>  // b.any
   294e4:	add	x21, x21, x1
   294e8:	neg	x0, x0
   294ec:	and	x21, x21, x0
   294f0:	mov	w2, #0x0                   	// #0
   294f4:	mov	x0, x21
   294f8:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   294fc:	add	x1, x1, #0xc10
   29500:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   29504:	ldr	x1, [x20]
   29508:	mov	x22, x0
   2950c:	ldr	x2, [x20, #16]
   29510:	lsl	x2, x2, #3
   29514:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   29518:	ldp	x0, x1, [x20]
   2951c:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   29520:	stp	x22, x21, [x20]
   29524:	ldr	x3, [x20, #16]
   29528:	add	x21, x3, #0x1
   2952c:	b	2945c <__sanitizer_get_module_and_offset_for_pc@@Base+0xb74>
   29530:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   29534:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   29538:	mov	x3, x21
   2953c:	add	x2, x2, #0x680
   29540:	add	x0, x0, #0xb98
   29544:	mov	w1, #0x18a                 	// #394
   29548:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   2954c:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   29550:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   29554:	add	x2, x2, #0x8c8
   29558:	add	x0, x0, #0xb98
   2955c:	mov	w1, #0x1cd                 	// #461
   29560:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   29564:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   29568:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   2956c:	mov	x3, x19
   29570:	add	x2, x2, #0x118
   29574:	add	x0, x0, #0xb98
   29578:	mov	w1, #0x1c5                 	// #453
   2957c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   29580:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   29584:	str	x0, [x22]
   29588:	b	294d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xbf0>
   2958c:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   29590:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   29594:	add	x2, x2, #0x8f8
   29598:	add	x0, x0, #0xb98
   2959c:	mov	w1, #0x20c                 	// #524
   295a0:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   295a4:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   295a8:	add	x0, x0, #0xbf8
   295ac:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   295b0:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   295b4:	mov	x4, x1
   295b8:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   295bc:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   295c0:	mov	x3, x21
   295c4:	add	x2, x2, #0x708
   295c8:	add	x0, x0, #0xb98
   295cc:	mov	w1, #0x18b                 	// #395
   295d0:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   295d4:	nop
   295d8:	stp	x19, x20, [sp, #-48]!
   295dc:	mov	x19, x0
   295e0:	mov	x20, x1
   295e4:	stp	x21, x22, [sp, #16]
   295e8:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   295ec:	ldr	x21, [x21, #4016]
   295f0:	stp	x23, x30, [sp, #32]
   295f4:	add	x23, x0, #0x70
   295f8:	str	xzr, [x0]
   295fc:	stp	xzr, xzr, [x0, #8]
   29600:	ldr	x0, [x21]
   29604:	stp	xzr, x23, [x19, #24]
   29608:	cbz	x0, 29694 <__sanitizer_get_module_and_offset_for_pc@@Base+0xdac>
   2960c:	sub	x1, x0, #0x1
   29610:	tst	x1, x0
   29614:	b.ne	296a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xdb8>  // b.any
   29618:	mov	x1, #0x1f3f                	// #7999
   2961c:	add	x21, x0, x1
   29620:	neg	x0, x0
   29624:	mov	w2, #0x0                   	// #0
   29628:	and	x21, x21, x0
   2962c:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   29630:	mov	x0, x21
   29634:	add	x1, x1, #0xc10
   29638:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   2963c:	mov	x22, x0
   29640:	ldr	x1, [x19]
   29644:	ldr	x2, [x19, #16]
   29648:	lsl	x2, x2, #3
   2964c:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   29650:	ldp	x0, x1, [x19]
   29654:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   29658:	stp	x22, x21, [x19]
   2965c:	mov	x0, x23
   29660:	strb	wzr, [x19, #64]
   29664:	strb	wzr, [x19, #96]
   29668:	strb	wzr, [x19, #104]
   2966c:	bl	1c680 <__sanitizer_set_report_fd@@Base+0x4800>
   29670:	stp	xzr, xzr, [x19, #224]
   29674:	ldp	x0, x1, [x20]
   29678:	stp	x0, x1, [x19, #200]
   2967c:	ldr	x0, [x20, #16]
   29680:	ldp	x21, x22, [sp, #16]
   29684:	ldp	x23, x30, [sp, #32]
   29688:	str	x0, [x19, #216]
   2968c:	ldp	x19, x20, [sp], #48
   29690:	ret
   29694:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   29698:	str	x0, [x21]
   2969c:	b	2960c <__sanitizer_get_module_and_offset_for_pc@@Base+0xd24>
   296a0:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   296a4:	add	x0, x0, #0xbf8
   296a8:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   296ac:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   296b0:	str	x1, [x0]
   296b4:	ldr	x0, [x1, #224]
   296b8:	cbz	x0, 296c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0xddc>
   296bc:	mov	x16, x0
   296c0:	br	x16
   296c4:	ret
   296c8:	ldr	x0, [x0]
   296cc:	ldr	x0, [x0, #232]
   296d0:	cbz	x0, 296dc <__sanitizer_get_module_and_offset_for_pc@@Base+0xdf4>
   296d4:	mov	x16, x0
   296d8:	br	x16
   296dc:	ret
   296e0:	mov	w0, #0x0                   	// #0
   296e4:	ret
   296e8:	mov	x0, #0x0                   	// #0
   296ec:	ret
   296f0:	mov	x0, #0x0                   	// #0
   296f4:	ret
   296f8:	mov	w0, #0x0                   	// #0
   296fc:	ret
   29700:	ret
   29704:	nop
   29708:	stp	x19, x20, [sp, #-96]!
   2970c:	mov	x19, #0x0                   	// #0
   29710:	stp	x21, x22, [sp, #16]
   29714:	mov	x22, x0
   29718:	mov	x21, x1
   2971c:	stp	x23, x24, [sp, #32]
   29720:	adrp	x24, 2b000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2718>
   29724:	mov	x23, x2
   29728:	add	x24, x24, #0x800
   2972c:	stp	x25, x26, [sp, #48]
   29730:	sub	x26, x2, #0x1
   29734:	add	x25, sp, #0x58
   29738:	str	x30, [sp, #64]
   2973c:	b	29760 <__sanitizer_get_module_and_offset_for_pc@@Base+0xe78>
   29740:	cmp	x19, #0x1
   29744:	b.ls	29754 <__sanitizer_get_module_and_offset_for_pc@@Base+0xe6c>  // b.plast
   29748:	ldurb	w0, [x1, #-1]
   2974c:	cmp	w0, #0xa
   29750:	b.eq	297e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xef8>  // b.none
   29754:	add	x0, x19, #0x1
   29758:	cmp	x23, x0
   2975c:	b.eq	29828 <__sanitizer_get_module_and_offset_for_pc@@Base+0xf40>  // b.none
   29760:	ldr	w0, [x22, #16]
   29764:	mov	x3, x25
   29768:	sub	x2, x26, x19
   2976c:	add	x1, x21, x19
   29770:	mov	x4, #0x0                   	// #0
   29774:	str	xzr, [sp, #88]
   29778:	bl	1dcd8 <__sanitizer_set_report_fd@@Base+0x5e58>
   2977c:	ands	w20, w0, #0xff
   29780:	b.eq	297f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xf10>  // b.none
   29784:	ldr	x3, [sp, #88]
   29788:	add	x19, x19, x3
   2978c:	add	x1, x21, x19
   29790:	cbz	x3, 297f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xf10>
   29794:	ldr	x0, [x22]
   29798:	ldr	x3, [x0, #16]
   2979c:	cmp	x3, x24
   297a0:	b.eq	29740 <__sanitizer_get_module_and_offset_for_pc@@Base+0xe58>  // b.none
   297a4:	mov	x2, x19
   297a8:	mov	x1, x21
   297ac:	mov	x0, x22
   297b0:	blr	x3
   297b4:	tst	w0, #0xff
   297b8:	b.eq	29754 <__sanitizer_get_module_and_offset_for_pc@@Base+0xe6c>  // b.none
   297bc:	add	x21, x21, x19
   297c0:	strb	wzr, [x21]
   297c4:	mov	w0, w20
   297c8:	ldp	x21, x22, [sp, #16]
   297cc:	ldp	x23, x24, [sp, #32]
   297d0:	ldp	x25, x26, [sp, #48]
   297d4:	ldr	x30, [sp, #64]
   297d8:	ldp	x19, x20, [sp], #96
   297dc:	ret
   297e0:	ldurb	w0, [x1, #-2]
   297e4:	cmp	w0, #0xa
   297e8:	b.ne	29754 <__sanitizer_get_module_and_offset_for_pc@@Base+0xe6c>  // b.any
   297ec:	mov	x21, x1
   297f0:	strb	wzr, [x21]
   297f4:	b	297c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0xedc>
   297f8:	ldr	w1, [x22, #16]
   297fc:	mov	w20, #0x0                   	// #0
   29800:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   29804:	add	x0, x0, #0x1c0
   29808:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   2980c:	mov	w0, w20
   29810:	ldp	x21, x22, [sp, #16]
   29814:	ldp	x23, x24, [sp, #32]
   29818:	ldp	x25, x26, [sp, #48]
   2981c:	ldr	x30, [sp, #64]
   29820:	ldp	x19, x20, [sp], #96
   29824:	ret
   29828:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2982c:	add	x0, x0, #0x1f0
   29830:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   29834:	strb	wzr, [x21]
   29838:	b	297c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0xedc>
   2983c:	nop
   29840:	cbz	x2, 29848 <__sanitizer_get_module_and_offset_for_pc@@Base+0xf60>
   29844:	b	29708 <__sanitizer_get_module_and_offset_for_pc@@Base+0xe20>
   29848:	mov	w0, #0x1                   	// #1
   2984c:	ret
   29850:	stp	x19, x20, [sp, #-48]!
   29854:	stp	x21, x22, [sp, #16]
   29858:	mov	x21, x0
   2985c:	mov	x0, x1
   29860:	stp	x23, x30, [sp, #32]
   29864:	mov	x23, x1
   29868:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2986c:	add	x1, x1, #0x0
   29870:	bl	1a308 <__sanitizer_set_report_fd@@Base+0x2488>
   29874:	mov	x2, #0x0                   	// #0
   29878:	mov	x19, x0
   2987c:	mov	x1, #0x0                   	// #0
   29880:	add	x0, x0, #0x1
   29884:	bl	121c8 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   29888:	mov	x20, x0
   2988c:	mov	x2, x19
   29890:	mov	x1, x23
   29894:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   29898:	add	x22, x23, x19
   2989c:	strb	wzr, [x20, x19]
   298a0:	ldrb	w0, [x23, x19]
   298a4:	cmp	w0, #0x0
   298a8:	cinc	x22, x22, ne  // ne = any
   298ac:	cbz	x20, 29990 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10a8>
   298b0:	mov	x0, x20
   298b4:	bl	1a690 <__sanitizer_set_report_fd@@Base+0x2810>
   298b8:	cbz	x0, 29968 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1080>
   298bc:	sub	x19, x0, #0x1
   298c0:	mov	w23, #0x2                   	// #2
   298c4:	add	x19, x20, x19
   298c8:	ldrb	w1, [x19]
   298cc:	cmp	x19, x20
   298d0:	b.hi	298e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0xffc>  // b.pmore
   298d4:	b	298f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x100c>
   298d8:	ldrb	w1, [x19, #-1]!
   298dc:	cmp	x19, x20
   298e0:	b.eq	298f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x100c>  // b.none
   298e4:	ldrb	w1, [x19]
   298e8:	sub	w2, w1, #0x30
   298ec:	cmp	w2, #0x9
   298f0:	b.ls	298d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xff0>  // b.plast
   298f4:	cmp	w1, #0x3a
   298f8:	b.ne	2992c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1044>  // b.any
   298fc:	ldrb	w0, [x19, #1]
   29900:	sub	w0, w0, #0x30
   29904:	cmp	w0, #0x9
   29908:	b.hi	2992c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1044>  // b.pmore
   2990c:	ldr	w1, [x21, #56]
   29910:	add	x0, x19, #0x1
   29914:	str	w1, [x21, #60]
   29918:	bl	1b740 <__sanitizer_set_report_fd@@Base+0x38c0>
   2991c:	str	w0, [x21, #56]
   29920:	strb	wzr, [x19], #-1
   29924:	cmp	w23, #0x1
   29928:	b.ne	29988 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10a0>  // b.any
   2992c:	mov	x0, x20
   29930:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   29934:	add	x1, x1, #0x3e8
   29938:	bl	1a308 <__sanitizer_set_report_fd@@Base+0x2488>
   2993c:	mov	x2, #0x0                   	// #0
   29940:	mov	x19, x0
   29944:	mov	x1, #0x0                   	// #0
   29948:	add	x0, x0, #0x1
   2994c:	bl	121c8 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   29950:	str	x0, [x21, #48]
   29954:	mov	x2, x19
   29958:	mov	x1, x20
   2995c:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   29960:	ldr	x0, [x21, #48]
   29964:	strb	wzr, [x0, x19]
   29968:	mov	x0, x20
   2996c:	mov	x1, #0x0                   	// #0
   29970:	bl	12770 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   29974:	mov	x0, x22
   29978:	ldp	x21, x22, [sp, #16]
   2997c:	ldp	x23, x30, [sp, #32]
   29980:	ldp	x19, x20, [sp], #48
   29984:	ret
   29988:	mov	w23, #0x1                   	// #1
   2998c:	b	298c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xfe0>
   29990:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   29994:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   29998:	add	x2, x2, #0x218
   2999c:	add	x0, x0, #0x238
   299a0:	mov	x4, #0x0                   	// #0
   299a4:	mov	x3, #0x0                   	// #0
   299a8:	mov	w1, #0x129                 	// #297
   299ac:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   299b0:	stp	x19, x20, [sp, #-32]!
   299b4:	adrp	x19, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   299b8:	mov	w2, #0x1                   	// #1
   299bc:	ldr	x0, [x19, #3936]
   299c0:	str	x30, [sp, #16]
   299c4:	ldxrb	w1, [x0]
   299c8:	stxrb	w3, w2, [x0]
   299cc:	cbnz	w3, 299c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10dc>
   299d0:	dmb	ish
   299d4:	tst	w1, #0xff
   299d8:	b.eq	299e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10f8>  // b.none
   299dc:	bl	85d8 <__sanitizer_print_stack_trace@@Base+0x300>
   299e0:	adrp	x20, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   299e4:	ldr	x20, [x20, #3880]
   299e8:	ldr	x0, [x20]
   299ec:	cbz	x0, 29a08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1120>
   299f0:	dmb	ish
   299f4:	ldr	x19, [x19, #3936]
   299f8:	strb	wzr, [x19]
   299fc:	ldr	x30, [sp, #16]
   29a00:	ldp	x19, x20, [sp], #32
   29a04:	ret
   29a08:	bl	2bd50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3468>
   29a0c:	str	x0, [x20]
   29a10:	cbnz	x0, 299f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1108>
   29a14:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   29a18:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   29a1c:	add	x2, x2, #0x298
   29a20:	add	x0, x0, #0x238
   29a24:	mov	x4, #0x0                   	// #0
   29a28:	mov	x3, #0x0                   	// #0
   29a2c:	mov	w1, #0x18                  	// #24
   29a30:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   29a34:	nop
   29a38:	stp	x19, x20, [sp, #-32]!
   29a3c:	mov	x20, x0
   29a40:	stp	x21, x30, [sp, #16]
   29a44:	mov	x21, x2
   29a48:	bl	1a308 <__sanitizer_set_report_fd@@Base+0x2488>
   29a4c:	mov	x2, #0x0                   	// #0
   29a50:	mov	x19, x0
   29a54:	mov	x1, #0x0                   	// #0
   29a58:	add	x0, x0, #0x1
   29a5c:	bl	121c8 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   29a60:	str	x0, [x21]
   29a64:	mov	x2, x19
   29a68:	mov	x1, x20
   29a6c:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   29a70:	ldr	x1, [x21]
   29a74:	add	x0, x20, x19
   29a78:	strb	wzr, [x1, x19]
   29a7c:	ldrb	w1, [x20, x19]
   29a80:	ldp	x21, x30, [sp, #16]
   29a84:	cmp	w1, #0x0
   29a88:	cinc	x0, x0, ne  // ne = any
   29a8c:	ldp	x19, x20, [sp], #32
   29a90:	ret
   29a94:	nop
   29a98:	stp	x19, x20, [sp, #-48]!
   29a9c:	stp	x21, x22, [sp, #16]
   29aa0:	mov	x21, x0
   29aa4:	stp	x23, x30, [sp, #32]
   29aa8:	mov	x23, x2
   29aac:	bl	1a308 <__sanitizer_set_report_fd@@Base+0x2488>
   29ab0:	mov	x2, #0x0                   	// #0
   29ab4:	mov	x19, x0
   29ab8:	mov	x1, #0x0                   	// #0
   29abc:	add	x0, x0, #0x1
   29ac0:	bl	121c8 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   29ac4:	mov	x20, x0
   29ac8:	mov	x2, x19
   29acc:	mov	x1, x21
   29ad0:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   29ad4:	add	x22, x21, x19
   29ad8:	strb	wzr, [x20, x19]
   29adc:	ldrb	w0, [x21, x19]
   29ae0:	cmp	w0, #0x0
   29ae4:	cinc	x22, x22, ne  // ne = any
   29ae8:	cbz	x20, 29af8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1210>
   29aec:	mov	x0, x20
   29af0:	bl	1b740 <__sanitizer_set_report_fd@@Base+0x38c0>
   29af4:	str	w0, [x23]
   29af8:	mov	x0, x20
   29afc:	mov	x1, #0x0                   	// #0
   29b00:	bl	12770 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   29b04:	mov	x0, x22
   29b08:	ldp	x21, x22, [sp, #16]
   29b0c:	ldp	x23, x30, [sp, #32]
   29b10:	ldp	x19, x20, [sp], #48
   29b14:	ret
   29b18:	stp	x19, x20, [sp, #-48]!
   29b1c:	stp	x21, x22, [sp, #16]
   29b20:	mov	x21, x0
   29b24:	stp	x23, x30, [sp, #32]
   29b28:	mov	x23, x2
   29b2c:	bl	1a308 <__sanitizer_set_report_fd@@Base+0x2488>
   29b30:	mov	x2, #0x0                   	// #0
   29b34:	mov	x19, x0
   29b38:	mov	x1, #0x0                   	// #0
   29b3c:	add	x0, x0, #0x1
   29b40:	bl	121c8 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   29b44:	mov	x20, x0
   29b48:	mov	x2, x19
   29b4c:	mov	x1, x21
   29b50:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   29b54:	add	x22, x21, x19
   29b58:	strb	wzr, [x20, x19]
   29b5c:	ldrb	w0, [x21, x19]
   29b60:	cmp	w0, #0x0
   29b64:	cinc	x22, x22, ne  // ne = any
   29b68:	cbz	x20, 29b78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1290>
   29b6c:	mov	x0, x20
   29b70:	bl	1b740 <__sanitizer_set_report_fd@@Base+0x38c0>
   29b74:	str	x0, [x23]
   29b78:	mov	x0, x20
   29b7c:	mov	x1, #0x0                   	// #0
   29b80:	bl	12770 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   29b84:	mov	x0, x22
   29b88:	ldp	x21, x22, [sp, #16]
   29b8c:	ldp	x23, x30, [sp, #32]
   29b90:	ldp	x19, x20, [sp], #48
   29b94:	ret
   29b98:	stp	x19, x20, [sp, #-48]!
   29b9c:	stp	x21, x22, [sp, #16]
   29ba0:	mov	x21, x0
   29ba4:	stp	x23, x30, [sp, #32]
   29ba8:	mov	x23, x2
   29bac:	bl	1a308 <__sanitizer_set_report_fd@@Base+0x2488>
   29bb0:	mov	x2, #0x0                   	// #0
   29bb4:	mov	x19, x0
   29bb8:	mov	x1, #0x0                   	// #0
   29bbc:	add	x0, x0, #0x1
   29bc0:	bl	121c8 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   29bc4:	mov	x20, x0
   29bc8:	mov	x2, x19
   29bcc:	mov	x1, x21
   29bd0:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   29bd4:	add	x22, x21, x19
   29bd8:	strb	wzr, [x20, x19]
   29bdc:	ldrb	w0, [x21, x19]
   29be0:	cmp	w0, #0x0
   29be4:	cinc	x22, x22, ne  // ne = any
   29be8:	cbz	x20, 29bf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1310>
   29bec:	mov	x0, x20
   29bf0:	bl	1b740 <__sanitizer_set_report_fd@@Base+0x38c0>
   29bf4:	str	x0, [x23]
   29bf8:	mov	x0, x20
   29bfc:	mov	x1, #0x0                   	// #0
   29c00:	bl	12770 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   29c04:	mov	x0, x22
   29c08:	ldp	x21, x22, [sp, #16]
   29c0c:	ldp	x23, x30, [sp, #32]
   29c10:	ldp	x19, x20, [sp], #48
   29c14:	ret
   29c18:	stp	x19, x20, [sp, #-48]!
   29c1c:	mov	x20, x0
   29c20:	stp	x21, x22, [sp, #16]
   29c24:	mov	x21, x2
   29c28:	stp	x23, x30, [sp, #32]
   29c2c:	mov	x23, x1
   29c30:	bl	1b580 <__sanitizer_set_report_fd@@Base+0x3700>
   29c34:	cbz	x0, 29ca4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x13bc>
   29c38:	mov	x19, x0
   29c3c:	sub	x22, x0, x20
   29c40:	mov	x2, #0x0                   	// #0
   29c44:	mov	x1, #0x0                   	// #0
   29c48:	add	x0, x22, #0x1
   29c4c:	bl	121c8 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   29c50:	str	x0, [x21]
   29c54:	mov	x1, x20
   29c58:	mov	x2, x22
   29c5c:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   29c60:	ldr	x0, [x21]
   29c64:	strb	wzr, [x0, x22]
   29c68:	ldrb	w0, [x19]
   29c6c:	cbnz	w0, 29c84 <__sanitizer_get_module_and_offset_for_pc@@Base+0x139c>
   29c70:	mov	x0, x19
   29c74:	ldp	x21, x22, [sp, #16]
   29c78:	ldp	x23, x30, [sp, #32]
   29c7c:	ldp	x19, x20, [sp], #48
   29c80:	ret
   29c84:	mov	x0, x23
   29c88:	bl	1a690 <__sanitizer_set_report_fd@@Base+0x2810>
   29c8c:	add	x19, x19, x0
   29c90:	mov	x0, x19
   29c94:	ldp	x21, x22, [sp, #16]
   29c98:	ldp	x23, x30, [sp, #32]
   29c9c:	ldp	x19, x20, [sp], #48
   29ca0:	ret
   29ca4:	mov	x0, x20
   29ca8:	bl	1a690 <__sanitizer_set_report_fd@@Base+0x2810>
   29cac:	mov	x22, x0
   29cb0:	add	x19, x20, x0
   29cb4:	b	29c40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1358>
   29cb8:	stp	x19, x20, [sp, #-64]!
   29cbc:	stp	x21, x22, [sp, #16]
   29cc0:	mov	x21, x0
   29cc4:	stp	x23, x30, [sp, #32]
   29cc8:	add	x23, x0, #0x70
   29ccc:	mov	x0, x23
   29cd0:	bl	1c690 <__sanitizer_set_report_fd@@Base+0x4810>
   29cd4:	ldr	x19, [x21, #208]
   29cd8:	cbz	x19, 29d14 <__sanitizer_get_module_and_offset_for_pc@@Base+0x142c>
   29cdc:	adrp	x22, 29000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x718>
   29ce0:	add	x20, sp, #0x38
   29ce4:	add	x22, x22, #0x700
   29ce8:	mov	x1, x21
   29cec:	mov	x0, x20
   29cf0:	bl	296b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xdc8>
   29cf4:	ldr	x1, [x19]
   29cf8:	mov	x0, x20
   29cfc:	ldr	x1, [x1, #24]
   29d00:	cmp	x1, x22
   29d04:	b.ne	29d2c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1444>  // b.any
   29d08:	bl	296c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xde0>
   29d0c:	ldr	x19, [x19, #8]
   29d10:	cbnz	x19, 29ce8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1400>
   29d14:	mov	x0, x23
   29d18:	bl	1c728 <__sanitizer_set_report_fd@@Base+0x48a8>
   29d1c:	ldp	x21, x22, [sp, #16]
   29d20:	ldp	x23, x30, [sp, #32]
   29d24:	ldp	x19, x20, [sp], #64
   29d28:	ret
   29d2c:	mov	x0, x19
   29d30:	blr	x1
   29d34:	mov	x0, x20
   29d38:	bl	296c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xde0>
   29d3c:	ldr	x19, [x19, #8]
   29d40:	cbnz	x19, 29ce8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1400>
   29d44:	mov	x0, x23
   29d48:	bl	1c728 <__sanitizer_set_report_fd@@Base+0x48a8>
   29d4c:	ldp	x21, x22, [sp, #16]
   29d50:	ldp	x23, x30, [sp, #32]
   29d54:	ldp	x19, x20, [sp], #64
   29d58:	ret
   29d5c:	nop
   29d60:	stp	x19, x20, [sp, #-80]!
   29d64:	stp	x21, x22, [sp, #16]
   29d68:	mov	x21, x0
   29d6c:	stp	x25, x30, [sp, #48]
   29d70:	add	x25, x0, #0x70
   29d74:	mov	x0, x25
   29d78:	stp	x23, x24, [sp, #32]
   29d7c:	mov	x24, x1
   29d80:	bl	1c690 <__sanitizer_set_report_fd@@Base+0x4810>
   29d84:	ldr	x19, [x21, #208]
   29d88:	cbz	x19, 29e04 <__sanitizer_get_module_and_offset_for_pc@@Base+0x151c>
   29d8c:	adrp	x22, 2b000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2718>
   29d90:	add	x20, sp, #0x48
   29d94:	add	x22, x22, #0x7f8
   29d98:	b	29dac <__sanitizer_get_module_and_offset_for_pc@@Base+0x14c4>
   29d9c:	mov	x0, x20
   29da0:	bl	296c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xde0>
   29da4:	ldr	x19, [x19, #8]
   29da8:	cbz	x19, 29e04 <__sanitizer_get_module_and_offset_for_pc@@Base+0x151c>
   29dac:	mov	x1, x21
   29db0:	mov	x0, x20
   29db4:	bl	296b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xdc8>
   29db8:	ldr	x2, [x19]
   29dbc:	ldr	x2, [x2, #32]
   29dc0:	cmp	x2, x22
   29dc4:	b.eq	29d9c <__sanitizer_get_module_and_offset_for_pc@@Base+0x14b4>  // b.none
   29dc8:	mov	x1, x24
   29dcc:	mov	x0, x19
   29dd0:	blr	x2
   29dd4:	mov	x23, x0
   29dd8:	cbz	x0, 29d9c <__sanitizer_get_module_and_offset_for_pc@@Base+0x14b4>
   29ddc:	mov	x0, x20
   29de0:	bl	296c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xde0>
   29de4:	mov	x0, x25
   29de8:	bl	1c728 <__sanitizer_set_report_fd@@Base+0x48a8>
   29dec:	mov	x0, x23
   29df0:	ldp	x21, x22, [sp, #16]
   29df4:	ldp	x23, x24, [sp, #32]
   29df8:	ldp	x25, x30, [sp, #48]
   29dfc:	ldp	x19, x20, [sp], #80
   29e00:	ret
   29e04:	mov	x1, x24
   29e08:	mov	x0, x21
   29e0c:	bl	2bcb0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x33c8>
   29e10:	mov	x23, x0
   29e14:	mov	x0, x25
   29e18:	bl	1c728 <__sanitizer_set_report_fd@@Base+0x48a8>
   29e1c:	mov	x0, x23
   29e20:	ldp	x21, x22, [sp, #16]
   29e24:	ldp	x23, x24, [sp, #32]
   29e28:	ldp	x25, x30, [sp, #48]
   29e2c:	ldp	x19, x20, [sp], #80
   29e30:	ret
   29e34:	nop
   29e38:	stp	x19, x30, [sp, #-16]!
   29e3c:	mov	x19, x0
   29e40:	add	x0, x0, #0x28
   29e44:	bl	23f58 <__sanitizer_sandbox_on_notify@@Base+0x910>
   29e48:	add	x0, x19, #0x48
   29e4c:	bl	24068 <__sanitizer_sandbox_on_notify@@Base+0xa20>
   29e50:	ldr	x0, [x19, #56]
   29e54:	cbz	x0, 29e68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1580>
   29e58:	mov	w0, #0x1                   	// #1
   29e5c:	strb	w0, [x19, #104]
   29e60:	ldp	x19, x30, [sp], #16
   29e64:	ret
   29e68:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   29e6c:	add	x0, x0, #0x2b0
   29e70:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   29e74:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   29e78:	stp	x19, x20, [sp, #-48]!
   29e7c:	mov	x19, x0
   29e80:	mov	x20, x1
   29e84:	ldrb	w0, [x0, #104]
   29e88:	stp	x21, x22, [sp, #16]
   29e8c:	stp	x23, x30, [sp, #32]
   29e90:	cbz	w0, 29f20 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1638>
   29e94:	ldr	x0, [x19, #56]
   29e98:	mov	w23, #0x0                   	// #0
   29e9c:	cbz	x0, 29fb4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x16cc>
   29ea0:	mov	x21, #0x0                   	// #0
   29ea4:	mov	x22, #0x0                   	// #0
   29ea8:	b	29ec0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x15d8>
   29eac:	ldr	x0, [x19, #56]
   29eb0:	add	x22, x22, #0x1
   29eb4:	add	x21, x21, #0x48
   29eb8:	cmp	x0, x22
   29ebc:	b.ls	29f00 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1618>  // b.plast
   29ec0:	ldr	x0, [x19, #40]
   29ec4:	mov	x1, x20
   29ec8:	add	x0, x0, x21
   29ecc:	bl	14c20 <_ZdaPvRKSt9nothrow_t@@Base+0x2ea0>
   29ed0:	tst	w0, #0xff
   29ed4:	b.eq	29eac <__sanitizer_get_module_and_offset_for_pc@@Base+0x15c4>  // b.none
   29ed8:	ldr	x4, [x19, #56]
   29edc:	cmp	x4, x22
   29ee0:	b.ls	29f98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x16b0>  // b.plast
   29ee4:	ldr	x0, [x19, #40]
   29ee8:	adds	x0, x0, x21
   29eec:	b.eq	29f00 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1618>  // b.none
   29ef0:	ldp	x21, x22, [sp, #16]
   29ef4:	ldp	x23, x30, [sp, #32]
   29ef8:	ldp	x19, x20, [sp], #48
   29efc:	ret
   29f00:	cbz	w23, 29fb4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x16cc>
   29f04:	ldr	x0, [x19, #88]
   29f08:	cbnz	x0, 29f48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1660>
   29f0c:	mov	x0, #0x0                   	// #0
   29f10:	ldp	x21, x22, [sp, #16]
   29f14:	ldp	x23, x30, [sp, #32]
   29f18:	ldp	x19, x20, [sp], #48
   29f1c:	ret
   29f20:	add	x0, x19, #0x28
   29f24:	bl	23f58 <__sanitizer_sandbox_on_notify@@Base+0x910>
   29f28:	add	x0, x19, #0x48
   29f2c:	bl	24068 <__sanitizer_sandbox_on_notify@@Base+0xa20>
   29f30:	ldr	x0, [x19, #56]
   29f34:	cbz	x0, 2a028 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1740>
   29f38:	mov	w0, #0x1                   	// #1
   29f3c:	mov	w23, #0x1                   	// #1
   29f40:	strb	w0, [x19, #104]
   29f44:	b	29ea0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x15b8>
   29f48:	mov	x21, #0x0                   	// #0
   29f4c:	mov	x22, #0x0                   	// #0
   29f50:	b	29f68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1680>
   29f54:	ldr	x0, [x19, #88]
   29f58:	add	x22, x22, #0x1
   29f5c:	add	x21, x21, #0x48
   29f60:	cmp	x0, x22
   29f64:	b.ls	29f0c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1624>  // b.plast
   29f68:	ldr	x0, [x19, #72]
   29f6c:	mov	x1, x20
   29f70:	add	x0, x0, x21
   29f74:	bl	14c20 <_ZdaPvRKSt9nothrow_t@@Base+0x2ea0>
   29f78:	tst	w0, #0xff
   29f7c:	b.eq	29f54 <__sanitizer_get_module_and_offset_for_pc@@Base+0x166c>  // b.none
   29f80:	ldr	x4, [x19, #88]
   29f84:	cmp	x22, x4
   29f88:	b.cs	29f98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x16b0>  // b.hs, b.nlast
   29f8c:	ldr	x0, [x19, #72]
   29f90:	add	x0, x0, x21
   29f94:	b	29ef0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1608>
   29f98:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   29f9c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   29fa0:	mov	x3, x22
   29fa4:	add	x2, x2, #0x2c8
   29fa8:	add	x0, x0, #0xb98
   29fac:	mov	w1, #0x308                 	// #776
   29fb0:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   29fb4:	add	x0, x19, #0x28
   29fb8:	bl	23f58 <__sanitizer_sandbox_on_notify@@Base+0x910>
   29fbc:	add	x0, x19, #0x48
   29fc0:	bl	24068 <__sanitizer_sandbox_on_notify@@Base+0xa20>
   29fc4:	ldr	x0, [x19, #56]
   29fc8:	cbz	x0, 2a028 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1740>
   29fcc:	mov	w0, #0x1                   	// #1
   29fd0:	mov	x21, #0x0                   	// #0
   29fd4:	mov	x22, #0x0                   	// #0
   29fd8:	strb	w0, [x19, #104]
   29fdc:	b	29ff4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x170c>
   29fe0:	ldr	x0, [x19, #56]
   29fe4:	add	x22, x22, #0x1
   29fe8:	add	x21, x21, #0x48
   29fec:	cmp	x0, x22
   29ff0:	b.ls	29f04 <__sanitizer_get_module_and_offset_for_pc@@Base+0x161c>  // b.plast
   29ff4:	ldr	x0, [x19, #40]
   29ff8:	mov	x1, x20
   29ffc:	add	x0, x0, x21
   2a000:	bl	14c20 <_ZdaPvRKSt9nothrow_t@@Base+0x2ea0>
   2a004:	tst	w0, #0xff
   2a008:	b.eq	29fe0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x16f8>  // b.none
   2a00c:	ldr	x4, [x19, #56]
   2a010:	cmp	x22, x4
   2a014:	b.cs	29f98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x16b0>  // b.hs, b.nlast
   2a018:	ldr	x0, [x19, #40]
   2a01c:	adds	x0, x0, x21
   2a020:	b.ne	29ef0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1608>  // b.any
   2a024:	b	29f04 <__sanitizer_get_module_and_offset_for_pc@@Base+0x161c>
   2a028:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2a02c:	add	x0, x0, #0x2b0
   2a030:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   2a034:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   2a038:	stp	x19, x20, [sp, #-48]!
   2a03c:	mov	x20, x4
   2a040:	mov	x19, x1
   2a044:	stp	x21, x22, [sp, #16]
   2a048:	mov	x22, x2
   2a04c:	mov	x21, x3
   2a050:	str	x30, [sp, #32]
   2a054:	bl	29e78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1590>
   2a058:	cbz	x0, 2a08c <__sanitizer_get_module_and_offset_for_pc@@Base+0x17a4>
   2a05c:	mov	x5, x0
   2a060:	mov	w0, #0x1                   	// #1
   2a064:	ldr	x30, [sp, #32]
   2a068:	ldp	x2, x1, [x5]
   2a06c:	str	x2, [x22]
   2a070:	sub	x1, x19, x1
   2a074:	str	x1, [x21]
   2a078:	ldr	w1, [x5, #24]
   2a07c:	str	w1, [x20]
   2a080:	ldp	x21, x22, [sp, #16]
   2a084:	ldp	x19, x20, [sp], #48
   2a088:	ret
   2a08c:	mov	w0, #0x0                   	// #0
   2a090:	ldp	x21, x22, [sp, #16]
   2a094:	ldr	x30, [sp, #32]
   2a098:	ldp	x19, x20, [sp], #48
   2a09c:	ret
   2a0a0:	stp	x19, x20, [sp, #-64]!
   2a0a4:	mov	x20, x0
   2a0a8:	mov	x19, x1
   2a0ac:	stp	x21, x22, [sp, #16]
   2a0b0:	add	x22, x0, #0x70
   2a0b4:	mov	x0, x22
   2a0b8:	mov	x21, x2
   2a0bc:	stp	x23, x24, [sp, #32]
   2a0c0:	mov	x23, x3
   2a0c4:	str	x30, [sp, #48]
   2a0c8:	bl	1c690 <__sanitizer_set_report_fd@@Base+0x4810>
   2a0cc:	mov	x1, x19
   2a0d0:	mov	x0, x20
   2a0d4:	bl	29e78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1590>
   2a0d8:	cbz	x0, 2a11c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1834>
   2a0dc:	ldp	x1, x2, [x0]
   2a0e0:	mov	w24, #0x1                   	// #1
   2a0e4:	sub	x19, x19, x2
   2a0e8:	str	x19, [x23]
   2a0ec:	cbz	x21, 2a0fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x1814>
   2a0f0:	mov	x0, x20
   2a0f4:	bl	293a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xab8>
   2a0f8:	str	x0, [x21]
   2a0fc:	mov	x0, x22
   2a100:	bl	1c728 <__sanitizer_set_report_fd@@Base+0x48a8>
   2a104:	mov	w0, w24
   2a108:	ldp	x21, x22, [sp, #16]
   2a10c:	ldp	x23, x24, [sp, #32]
   2a110:	ldr	x30, [sp, #48]
   2a114:	ldp	x19, x20, [sp], #64
   2a118:	ret
   2a11c:	mov	x0, x22
   2a120:	mov	w24, #0x0                   	// #0
   2a124:	bl	1c728 <__sanitizer_set_report_fd@@Base+0x48a8>
   2a128:	mov	w0, w24
   2a12c:	ldp	x21, x22, [sp, #16]
   2a130:	ldp	x23, x24, [sp, #32]
   2a134:	ldr	x30, [sp, #48]
   2a138:	ldp	x19, x20, [sp], #64
   2a13c:	ret
   2a140:	stp	x19, x20, [sp, #-80]!
   2a144:	stp	x25, x30, [sp, #48]
   2a148:	add	x25, x0, #0x70
   2a14c:	stp	x21, x22, [sp, #16]
   2a150:	mov	x21, x0
   2a154:	mov	x22, x2
   2a158:	mov	x0, x25
   2a15c:	stp	x23, x24, [sp, #32]
   2a160:	mov	x24, x1
   2a164:	bl	1c690 <__sanitizer_set_report_fd@@Base+0x4810>
   2a168:	mov	x1, x24
   2a16c:	mov	x0, x21
   2a170:	bl	29e78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1590>
   2a174:	cbz	x0, 2a230 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1948>
   2a178:	mov	x1, x0
   2a17c:	add	x23, sp, #0x48
   2a180:	ldp	x0, x2, [x0]
   2a184:	ldr	w1, [x1, #24]
   2a188:	str	w1, [x22, #16]
   2a18c:	sub	x2, x24, x2
   2a190:	str	x2, [x22, #8]
   2a194:	bl	1a360 <__sanitizer_set_report_fd@@Base+0x24e0>
   2a198:	ldr	x19, [x21, #208]
   2a19c:	str	x0, [x22]
   2a1a0:	cbnz	x19, 2a1b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x18cc>
   2a1a4:	b	2a20c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1924>
   2a1a8:	bl	296c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xde0>
   2a1ac:	ldr	x19, [x19, #8]
   2a1b0:	cbz	x19, 2a20c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1924>
   2a1b4:	mov	x1, x21
   2a1b8:	mov	x0, x23
   2a1bc:	bl	296b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xdc8>
   2a1c0:	ldr	x3, [x19]
   2a1c4:	mov	x2, x22
   2a1c8:	mov	x1, x24
   2a1cc:	mov	x0, x19
   2a1d0:	ldr	x3, [x3, #16]
   2a1d4:	blr	x3
   2a1d8:	mov	w20, w0
   2a1dc:	ands	w20, w20, #0xff
   2a1e0:	mov	x0, x23
   2a1e4:	b.eq	2a1a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x18c0>  // b.none
   2a1e8:	bl	296c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xde0>
   2a1ec:	mov	x0, x25
   2a1f0:	bl	1c728 <__sanitizer_set_report_fd@@Base+0x48a8>
   2a1f4:	mov	w0, w20
   2a1f8:	ldp	x21, x22, [sp, #16]
   2a1fc:	ldp	x23, x24, [sp, #32]
   2a200:	ldp	x25, x30, [sp, #48]
   2a204:	ldp	x19, x20, [sp], #80
   2a208:	ret
   2a20c:	mov	x0, x25
   2a210:	mov	w20, #0x1                   	// #1
   2a214:	bl	1c728 <__sanitizer_set_report_fd@@Base+0x48a8>
   2a218:	mov	w0, w20
   2a21c:	ldp	x21, x22, [sp, #16]
   2a220:	ldp	x23, x24, [sp, #32]
   2a224:	ldp	x25, x30, [sp, #48]
   2a228:	ldp	x19, x20, [sp], #80
   2a22c:	ret
   2a230:	mov	x0, x25
   2a234:	mov	w20, #0x0                   	// #0
   2a238:	bl	1c728 <__sanitizer_set_report_fd@@Base+0x48a8>
   2a23c:	mov	w0, w20
   2a240:	ldp	x21, x22, [sp, #16]
   2a244:	ldp	x23, x24, [sp, #32]
   2a248:	ldp	x25, x30, [sp, #48]
   2a24c:	ldp	x19, x20, [sp], #80
   2a250:	ret
   2a254:	nop
   2a258:	stp	x19, x20, [sp, #-32]!
   2a25c:	mov	x20, x0
   2a260:	adrp	x3, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2a264:	add	x3, x3, #0xa88
   2a268:	str	x30, [sp, #16]
   2a26c:	stp	x3, xzr, [x20]
   2a270:	mov	x0, x2
   2a274:	mov	x19, x1
   2a278:	mov	x1, #0x4028                	// #16424
   2a27c:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   2a280:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2a284:	add	x1, x0, #0x4, lsl #12
   2a288:	mov	x3, #0xffffffffffffffff    	// #-1
   2a28c:	str	x3, [x0, #16]
   2a290:	ldr	x2, [x2, #4008]
   2a294:	str	xzr, [x0, #16408]
   2a298:	add	x2, x2, #0x10
   2a29c:	stp	x2, x19, [x0]
   2a2a0:	strh	wzr, [x1, #32]
   2a2a4:	strb	wzr, [x1, #34]
   2a2a8:	cbz	x19, 2a2d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x19e8>
   2a2ac:	ldrb	w1, [x19]
   2a2b0:	cbz	w1, 2a2f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a08>
   2a2b4:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2a2b8:	add	x1, x1, #0xb60
   2a2bc:	ldr	x30, [sp, #16]
   2a2c0:	str	x1, [x0]
   2a2c4:	str	x0, [x20, #16]
   2a2c8:	ldp	x19, x20, [sp], #32
   2a2cc:	ret
   2a2d0:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2a2d4:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2a2d8:	add	x2, x2, #0x2e8
   2a2dc:	add	x0, x0, #0x238
   2a2e0:	mov	x4, #0x0                   	// #0
   2a2e4:	mov	x3, #0x0                   	// #0
   2a2e8:	mov	w1, #0x1d0                 	// #464
   2a2ec:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   2a2f0:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2a2f4:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2a2f8:	add	x2, x2, #0x300
   2a2fc:	add	x0, x0, #0x238
   2a300:	mov	x4, #0x0                   	// #0
   2a304:	mov	x3, #0x0                   	// #0
   2a308:	mov	w1, #0x1d1                 	// #465
   2a30c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   2a310:	stp	x19, x20, [sp, #-96]!
   2a314:	mov	x20, x0
   2a318:	stp	x21, x22, [sp, #16]
   2a31c:	adrp	x22, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2a320:	add	x22, x22, #0x340
   2a324:	stp	x23, x24, [sp, #32]
   2a328:	mov	x23, x1
   2a32c:	mov	w24, #0x1                   	// #1
   2a330:	stp	x25, x26, [sp, #48]
   2a334:	adrp	x25, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2a338:	add	x26, x1, #0x8
   2a33c:	add	x25, x25, #0x0
   2a340:	stp	x27, x28, [sp, #64]
   2a344:	mov	x27, x1
   2a348:	str	x30, [sp, #80]
   2a34c:	nop
   2a350:	mov	x1, x25
   2a354:	mov	x0, x20
   2a358:	bl	1a308 <__sanitizer_set_report_fd@@Base+0x2488>
   2a35c:	mov	x19, x0
   2a360:	mov	x2, #0x0                   	// #0
   2a364:	mov	x1, #0x0                   	// #0
   2a368:	add	x0, x0, #0x1
   2a36c:	bl	121c8 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   2a370:	mov	x21, x0
   2a374:	mov	x2, x19
   2a378:	mov	x1, x20
   2a37c:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   2a380:	add	x28, x20, x19
   2a384:	strb	wzr, [x21, x19]
   2a388:	ldrb	w0, [x20, x19]
   2a38c:	cmp	w0, #0x0
   2a390:	cinc	x28, x28, ne  // ne = any
   2a394:	cbz	x21, 2a444 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b5c>
   2a398:	ldrb	w0, [x21]
   2a39c:	cbz	w0, 2a464 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b7c>
   2a3a0:	cbz	w24, 2a414 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b2c>
   2a3a4:	mov	x20, x26
   2a3a8:	mov	x19, x26
   2a3ac:	str	x21, [x19, #32]
   2a3b0:	mov	x1, x28
   2a3b4:	mov	x0, x20
   2a3b8:	bl	29850 <__sanitizer_get_module_and_offset_for_pc@@Base+0xf68>
   2a3bc:	mov	x20, x0
   2a3c0:	ldr	x0, [x19, #32]
   2a3c4:	mov	x1, x22
   2a3c8:	bl	1a560 <__sanitizer_set_report_fd@@Base+0x26e0>
   2a3cc:	cbz	w0, 2a400 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b18>
   2a3d0:	ldr	x0, [x19, #48]
   2a3d4:	mov	x1, x22
   2a3d8:	bl	1a560 <__sanitizer_set_report_fd@@Base+0x26e0>
   2a3dc:	cbz	w0, 2a3e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b00>
   2a3e0:	mov	w24, #0x0                   	// #0
   2a3e4:	b	2a350 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a68>
   2a3e8:	ldr	x0, [x19, #48]
   2a3ec:	mov	x1, #0x0                   	// #0
   2a3f0:	mov	w24, #0x0                   	// #0
   2a3f4:	bl	12770 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   2a3f8:	str	xzr, [x19, #48]
   2a3fc:	b	2a350 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a68>
   2a400:	ldr	x0, [x19, #32]
   2a404:	mov	x1, #0x0                   	// #0
   2a408:	bl	12770 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   2a40c:	str	xzr, [x19, #32]
   2a410:	b	2a3d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ae8>
   2a414:	ldr	x0, [x23, #8]
   2a418:	bl	291c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8e0>
   2a41c:	mov	x24, x0
   2a420:	ldp	x1, x2, [x23, #16]
   2a424:	add	x19, x0, #0x8
   2a428:	ldr	w3, [x23, #32]
   2a42c:	mov	x0, x19
   2a430:	mov	x20, x19
   2a434:	bl	29168 <__sanitizer_get_module_and_offset_for_pc@@Base+0x880>
   2a438:	str	x24, [x27]
   2a43c:	mov	x27, x24
   2a440:	b	2a3ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ac4>
   2a444:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2a448:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2a44c:	add	x2, x2, #0x320
   2a450:	add	x0, x0, #0x238
   2a454:	mov	x4, #0x0                   	// #0
   2a458:	mov	x3, #0x0                   	// #0
   2a45c:	mov	w1, #0x148                 	// #328
   2a460:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   2a464:	mov	x0, x21
   2a468:	mov	x1, #0x0                   	// #0
   2a46c:	ldp	x21, x22, [sp, #16]
   2a470:	ldp	x23, x24, [sp, #32]
   2a474:	ldp	x25, x26, [sp, #48]
   2a478:	ldp	x27, x28, [sp, #64]
   2a47c:	ldr	x30, [sp, #80]
   2a480:	ldp	x19, x20, [sp], #96
   2a484:	b	12770 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   2a488:	stp	x19, x20, [sp, #-64]!
   2a48c:	stp	x21, x22, [sp, #16]
   2a490:	mov	x22, x1
   2a494:	mov	x21, x0
   2a498:	stp	x23, x24, [sp, #32]
   2a49c:	adrp	x23, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2a4a0:	add	x1, x23, #0x0
   2a4a4:	str	x30, [sp, #48]
   2a4a8:	bl	1a308 <__sanitizer_set_report_fd@@Base+0x2488>
   2a4ac:	mov	x2, #0x0                   	// #0
   2a4b0:	mov	x19, x0
   2a4b4:	mov	x1, #0x0                   	// #0
   2a4b8:	add	x0, x0, #0x1
   2a4bc:	bl	121c8 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   2a4c0:	str	x0, [x22, #40]
   2a4c4:	mov	x2, x19
   2a4c8:	mov	x1, x21
   2a4cc:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   2a4d0:	add	x20, x21, x19
   2a4d4:	ldr	x0, [x22, #40]
   2a4d8:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   2a4dc:	add	x1, x1, #0xb28
   2a4e0:	strb	wzr, [x0, x19]
   2a4e4:	ldrb	w0, [x21, x19]
   2a4e8:	cmp	w0, #0x0
   2a4ec:	cinc	x20, x20, ne  // ne = any
   2a4f0:	mov	x0, x20
   2a4f4:	bl	1a308 <__sanitizer_set_report_fd@@Base+0x2488>
   2a4f8:	mov	x19, x0
   2a4fc:	mov	x2, #0x0                   	// #0
   2a500:	mov	x1, #0x0                   	// #0
   2a504:	add	x0, x0, #0x1
   2a508:	bl	121c8 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   2a50c:	mov	x21, x0
   2a510:	mov	x1, x20
   2a514:	mov	x2, x19
   2a518:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   2a51c:	add	x24, x20, x19
   2a520:	strb	wzr, [x21, x19]
   2a524:	ldrb	w0, [x20, x19]
   2a528:	cmp	w0, #0x0
   2a52c:	cinc	x24, x24, ne  // ne = any
   2a530:	cbz	x21, 2a540 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1c58>
   2a534:	mov	x0, x21
   2a538:	bl	1b740 <__sanitizer_set_report_fd@@Base+0x38c0>
   2a53c:	str	x0, [x22, #48]
   2a540:	mov	x0, x21
   2a544:	mov	x1, #0x0                   	// #0
   2a548:	bl	12770 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   2a54c:	add	x1, x23, #0x0
   2a550:	mov	x0, x24
   2a554:	bl	1a308 <__sanitizer_set_report_fd@@Base+0x2488>
   2a558:	mov	x20, x0
   2a55c:	mov	x2, #0x0                   	// #0
   2a560:	mov	x1, #0x0                   	// #0
   2a564:	add	x0, x0, #0x1
   2a568:	bl	121c8 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   2a56c:	mov	x19, x0
   2a570:	mov	x1, x24
   2a574:	mov	x2, x20
   2a578:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   2a57c:	strb	wzr, [x19, x20]
   2a580:	cbz	x19, 2a590 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ca8>
   2a584:	mov	x0, x19
   2a588:	bl	1b740 <__sanitizer_set_report_fd@@Base+0x38c0>
   2a58c:	str	x0, [x22, #56]
   2a590:	mov	x0, x19
   2a594:	mov	x1, #0x0                   	// #0
   2a598:	ldp	x21, x22, [sp, #16]
   2a59c:	ldp	x23, x24, [sp, #32]
   2a5a0:	ldr	x30, [sp, #48]
   2a5a4:	ldp	x19, x20, [sp], #64
   2a5a8:	b	12770 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   2a5ac:	nop
   2a5b0:	adrp	x3, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2a5b4:	add	x4, x0, #0x4, lsl #12
   2a5b8:	str	x30, [sp, #-16]!
   2a5bc:	mov	x5, #0xffffffffffffffff    	// #-1
   2a5c0:	ldr	x3, [x3, #4008]
   2a5c4:	str	x5, [x0, #16]
   2a5c8:	str	xzr, [x0, #16408]
   2a5cc:	add	x3, x3, #0x10
   2a5d0:	stp	x3, x1, [x0]
   2a5d4:	strh	wzr, [x4, #32]
   2a5d8:	strb	w2, [x4, #34]
   2a5dc:	cbz	x1, 2a5f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1d08>
   2a5e0:	ldrb	w0, [x1]
   2a5e4:	cbz	w0, 2a610 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1d28>
   2a5e8:	ldr	x30, [sp], #16
   2a5ec:	ret
   2a5f0:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2a5f4:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2a5f8:	add	x2, x2, #0x2e8
   2a5fc:	add	x0, x0, #0x238
   2a600:	mov	x4, #0x0                   	// #0
   2a604:	mov	x3, #0x0                   	// #0
   2a608:	mov	w1, #0x1d0                 	// #464
   2a60c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   2a610:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2a614:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2a618:	add	x2, x2, #0x300
   2a61c:	add	x0, x0, #0x238
   2a620:	mov	x4, #0x0                   	// #0
   2a624:	mov	x3, #0x0                   	// #0
   2a628:	mov	w1, #0x1d1                 	// #465
   2a62c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   2a630:	stp	x19, x20, [sp, #-80]!
   2a634:	mov	x19, x0
   2a638:	stp	x25, x30, [sp, #48]
   2a63c:	add	x25, x0, #0x4, lsl #12
   2a640:	ldrb	w0, [x25, #32]
   2a644:	cbnz	w0, 2a770 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e88>
   2a648:	stp	x21, x22, [sp, #16]
   2a64c:	mov	x21, x1
   2a650:	ldr	x22, [x19, #8]
   2a654:	bl	14ea8 <_ZdaPvRKSt9nothrow_t@@Base+0x3128>
   2a658:	mov	x20, x0
   2a65c:	cbz	x0, 2a69c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1db4>
   2a660:	mov	x0, x22
   2a664:	bl	14968 <_ZdaPvRKSt9nothrow_t@@Base+0x2be8>
   2a668:	mov	x1, x0
   2a66c:	cbz	x0, 2a69c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1db4>
   2a670:	mov	x0, x20
   2a674:	bl	1a560 <__sanitizer_set_report_fd@@Base+0x26e0>
   2a678:	cbnz	w0, 2a69c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1db4>
   2a67c:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2a680:	add	x0, x0, #0x348
   2a684:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   2a688:	mov	x20, #0x0                   	// #0
   2a68c:	mov	w0, #0x1                   	// #1
   2a690:	strb	w0, [x25, #32]
   2a694:	ldp	x21, x22, [sp, #16]
   2a698:	b	2a774 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e8c>
   2a69c:	ldr	x0, [x19, #16408]
   2a6a0:	cmp	x0, #0x4
   2a6a4:	b.hi	2a764 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e7c>  // b.pmore
   2a6a8:	adrp	x22, 29000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x718>
   2a6ac:	add	x22, x22, #0x840
   2a6b0:	stp	x23, x24, [sp, #32]
   2a6b4:	adrp	x23, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2a6b8:	add	x24, sp, #0x48
   2a6bc:	add	x23, x23, #0x380
   2a6c0:	ldp	w2, w0, [x19, #16]
   2a6c4:	cmn	w2, #0x1
   2a6c8:	b.eq	2a730 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e48>  // b.none
   2a6cc:	cmn	w0, #0x1
   2a6d0:	b.eq	2a784 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e9c>  // b.none
   2a6d4:	mov	x0, x21
   2a6d8:	bl	1a690 <__sanitizer_set_report_fd@@Base+0x2810>
   2a6dc:	mov	x20, x0
   2a6e0:	cbz	x0, 2a790 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ea8>
   2a6e4:	mov	x2, x0
   2a6e8:	ldr	w0, [x19, #20]
   2a6ec:	mov	x3, x24
   2a6f0:	mov	x1, x21
   2a6f4:	mov	x4, #0x0                   	// #0
   2a6f8:	str	xzr, [sp, #72]
   2a6fc:	bl	1dd28 <__sanitizer_set_report_fd@@Base+0x5ea8>
   2a700:	tst	w0, #0xff
   2a704:	b.eq	2a714 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e2c>  // b.none
   2a708:	ldr	x0, [sp, #72]
   2a70c:	cmp	x20, x0
   2a710:	b.eq	2a790 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ea8>  // b.none
   2a714:	ldr	w1, [x19, #20]
   2a718:	mov	x0, x23
   2a71c:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   2a720:	ldr	w2, [x19, #16]
   2a724:	cmn	w2, #0x1
   2a728:	b.ne	2a784 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e9c>  // b.any
   2a72c:	ldr	w0, [x19, #20]
   2a730:	cmn	w0, #0x1
   2a734:	b.eq	2a73c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e54>  // b.none
   2a738:	bl	1dcd0 <__sanitizer_set_report_fd@@Base+0x5e50>
   2a73c:	ldr	x1, [x19]
   2a740:	mov	x0, x19
   2a744:	ldr	x1, [x1]
   2a748:	blr	x1
   2a74c:	ldr	x0, [x19, #16408]
   2a750:	add	x0, x0, #0x1
   2a754:	str	x0, [x19, #16408]
   2a758:	cmp	x0, #0x4
   2a75c:	b.ls	2a6c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1dd8>  // b.plast
   2a760:	ldp	x23, x24, [sp, #32]
   2a764:	ldrb	w0, [x25, #32]
   2a768:	cbz	w0, 2a7e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1efc>
   2a76c:	ldp	x21, x22, [sp, #16]
   2a770:	mov	x20, #0x0                   	// #0
   2a774:	mov	x0, x20
   2a778:	ldp	x25, x30, [sp, #48]
   2a77c:	ldp	x19, x20, [sp], #80
   2a780:	ret
   2a784:	mov	w0, w2
   2a788:	bl	1dcd0 <__sanitizer_set_report_fd@@Base+0x5e50>
   2a78c:	b	2a72c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e44>
   2a790:	mov	x20, x19
   2a794:	mov	x2, #0x4000                	// #16384
   2a798:	ldr	x0, [x20], #24
   2a79c:	mov	x1, x20
   2a7a0:	ldr	x3, [x0, #8]
   2a7a4:	mov	x0, x19
   2a7a8:	cmp	x3, x22
   2a7ac:	b.ne	2a7d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1eec>  // b.any
   2a7b0:	bl	29708 <__sanitizer_get_module_and_offset_for_pc@@Base+0xe20>
   2a7b4:	and	w0, w0, #0xff
   2a7b8:	cbz	w0, 2a720 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e38>
   2a7bc:	mov	x0, x20
   2a7c0:	ldp	x21, x22, [sp, #16]
   2a7c4:	ldp	x23, x24, [sp, #32]
   2a7c8:	ldp	x25, x30, [sp, #48]
   2a7cc:	ldp	x19, x20, [sp], #80
   2a7d0:	ret
   2a7d4:	blr	x3
   2a7d8:	and	w0, w0, #0xff
   2a7dc:	cbz	w0, 2a720 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e38>
   2a7e0:	b	2a7bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ed4>
   2a7e4:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2a7e8:	add	x0, x0, #0x3b0
   2a7ec:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   2a7f0:	mov	x20, #0x0                   	// #0
   2a7f4:	mov	w0, #0x1                   	// #1
   2a7f8:	strb	w0, [x25, #32]
   2a7fc:	mov	x0, x20
   2a800:	ldp	x21, x22, [sp, #16]
   2a804:	ldp	x25, x30, [sp, #48]
   2a808:	ldp	x19, x20, [sp], #80
   2a80c:	ret
   2a810:	stp	x19, x20, [sp, #-32]!
   2a814:	mov	w7, w4
   2a818:	mov	x4, x2
   2a81c:	str	x30, [sp, #16]
   2a820:	cbz	x2, 2a948 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2060>
   2a824:	mov	x19, x0
   2a828:	add	x20, x0, #0x18
   2a82c:	cbz	w7, 2a894 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1fac>
   2a830:	cmp	w7, #0x5
   2a834:	b.eq	2a964 <__sanitizer_get_module_and_offset_for_pc@@Base+0x207c>  // b.none
   2a838:	b.hi	2a8ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x2004>  // b.pmore
   2a83c:	cmp	w7, #0x3
   2a840:	b.eq	2a93c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2054>  // b.none
   2a844:	adrp	x8, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2a848:	cmp	w7, #0x4
   2a84c:	add	x5, x8, #0x48
   2a850:	b.ne	2a8d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ff0>  // b.any
   2a854:	nop
   2a858:	mov	x6, x3
   2a85c:	mov	x0, x20
   2a860:	mov	x3, x1
   2a864:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2a868:	mov	x1, #0x4000                	// #16384
   2a86c:	add	x2, x2, #0x440
   2a870:	bl	1f928 <__sanitizer_on_print@@Base+0x8>
   2a874:	mov	w1, #0x3fff                	// #16383
   2a878:	cmp	w0, w1
   2a87c:	b.gt	2a8bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x1fd4>
   2a880:	mov	x1, x20
   2a884:	ldr	x0, [x19, #16]
   2a888:	ldr	x30, [sp, #16]
   2a88c:	ldp	x19, x20, [sp], #32
   2a890:	b	2a630 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1d48>
   2a894:	mov	x5, x3
   2a898:	mov	x0, x20
   2a89c:	mov	x3, x1
   2a8a0:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2a8a4:	mov	x1, #0x4000                	// #16384
   2a8a8:	add	x2, x2, #0x408
   2a8ac:	bl	1f928 <__sanitizer_on_print@@Base+0x8>
   2a8b0:	mov	w1, #0x3fff                	// #16383
   2a8b4:	cmp	w0, w1
   2a8b8:	b.le	2a880 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f98>
   2a8bc:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2a8c0:	add	x0, x0, #0x418
   2a8c4:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   2a8c8:	mov	x0, #0x0                   	// #0
   2a8cc:	ldr	x30, [sp, #16]
   2a8d0:	ldp	x19, x20, [sp], #32
   2a8d4:	ret
   2a8d8:	cmp	w7, #0x1
   2a8dc:	b.ne	2a908 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2020>  // b.any
   2a8e0:	adrp	x8, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2a8e4:	add	x5, x8, #0x30
   2a8e8:	b	2a858 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f70>
   2a8ec:	cmp	w7, #0x7
   2a8f0:	b.eq	2a930 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2048>  // b.none
   2a8f4:	cmp	w7, #0x8
   2a8f8:	b.ne	2a91c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2034>  // b.any
   2a8fc:	adrp	x8, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2a900:	add	x5, x8, #0x50
   2a904:	b	2a858 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f70>
   2a908:	cmp	w7, #0x2
   2a90c:	b.ne	2a970 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2088>  // b.any
   2a910:	adrp	x8, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2a914:	add	x5, x8, #0x28
   2a918:	b	2a858 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f70>
   2a91c:	cmp	w7, #0x6
   2a920:	b.ne	2a970 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2088>  // b.any
   2a924:	adrp	x8, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2a928:	add	x5, x8, #0x58
   2a92c:	b	2a858 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f70>
   2a930:	adrp	x8, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2a934:	add	x5, x8, #0x20
   2a938:	b	2a858 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f70>
   2a93c:	adrp	x8, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2a940:	add	x5, x8, #0x40
   2a944:	b	2a858 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f70>
   2a948:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2a94c:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2a950:	add	x2, x2, #0x3f0
   2a954:	add	x0, x0, #0x238
   2a958:	mov	x3, #0x0                   	// #0
   2a95c:	mov	w1, #0x1b5                 	// #437
   2a960:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   2a964:	adrp	x8, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2a968:	add	x5, x8, #0x38
   2a96c:	b	2a858 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f70>
   2a970:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2a974:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   2a978:	add	x2, x2, #0x68
   2a97c:	add	x0, x0, #0xb98
   2a980:	mov	x4, #0x0                   	// #0
   2a984:	mov	x3, #0x0                   	// #0
   2a988:	mov	w1, #0x2b8                 	// #696
   2a98c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   2a990:	stp	x19, x20, [sp, #-64]!
   2a994:	mov	x19, x2
   2a998:	ldr	w4, [x2, #16]
   2a99c:	ldr	x2, [x2]
   2a9a0:	stp	x21, x22, [sp, #16]
   2a9a4:	mov	x21, x1
   2a9a8:	ldr	x3, [x19, #8]
   2a9ac:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2a9b0:	add	x1, x1, #0x458
   2a9b4:	str	x30, [sp, #56]
   2a9b8:	bl	2a810 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f28>
   2a9bc:	cbnz	x0, 2a9d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x20ec>
   2a9c0:	mov	w0, #0x0                   	// #0
   2a9c4:	ldp	x21, x22, [sp, #16]
   2a9c8:	ldr	x30, [sp, #56]
   2a9cc:	ldp	x19, x20, [sp], #64
   2a9d0:	ret
   2a9d4:	mov	x20, x0
   2a9d8:	stp	x23, x24, [sp, #32]
   2a9dc:	adrp	x24, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2a9e0:	add	x1, x24, #0x0
   2a9e4:	str	x25, [sp, #48]
   2a9e8:	bl	1a308 <__sanitizer_set_report_fd@@Base+0x2488>
   2a9ec:	mov	x22, x0
   2a9f0:	mov	x2, #0x0                   	// #0
   2a9f4:	mov	x1, #0x0                   	// #0
   2a9f8:	add	x0, x0, #0x1
   2a9fc:	bl	121c8 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   2aa00:	str	x0, [x19, #40]
   2aa04:	mov	x2, x22
   2aa08:	mov	x1, x20
   2aa0c:	add	x23, x20, x22
   2aa10:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   2aa14:	ldr	x0, [x19, #40]
   2aa18:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   2aa1c:	add	x1, x1, #0xb28
   2aa20:	strb	wzr, [x0, x22]
   2aa24:	ldrb	w0, [x20, x22]
   2aa28:	cmp	w0, #0x0
   2aa2c:	cinc	x23, x23, ne  // ne = any
   2aa30:	mov	x0, x23
   2aa34:	bl	1a308 <__sanitizer_set_report_fd@@Base+0x2488>
   2aa38:	mov	x20, x0
   2aa3c:	mov	x2, #0x0                   	// #0
   2aa40:	mov	x1, #0x0                   	// #0
   2aa44:	add	x0, x0, #0x1
   2aa48:	bl	121c8 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   2aa4c:	mov	x22, x0
   2aa50:	mov	x1, x23
   2aa54:	mov	x2, x20
   2aa58:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   2aa5c:	add	x25, x23, x20
   2aa60:	strb	wzr, [x22, x20]
   2aa64:	ldrb	w0, [x23, x20]
   2aa68:	cmp	w0, #0x0
   2aa6c:	cinc	x25, x25, ne  // ne = any
   2aa70:	cbz	x22, 2aa80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2198>
   2aa74:	mov	x0, x22
   2aa78:	bl	1b740 <__sanitizer_set_report_fd@@Base+0x38c0>
   2aa7c:	str	x0, [x19, #48]
   2aa80:	mov	x0, x22
   2aa84:	mov	x1, #0x0                   	// #0
   2aa88:	bl	12770 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   2aa8c:	add	x1, x24, #0x0
   2aa90:	mov	x0, x25
   2aa94:	bl	1a308 <__sanitizer_set_report_fd@@Base+0x2488>
   2aa98:	mov	x22, x0
   2aa9c:	mov	x2, #0x0                   	// #0
   2aaa0:	mov	x1, #0x0                   	// #0
   2aaa4:	add	x0, x0, #0x1
   2aaa8:	bl	121c8 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   2aaac:	mov	x20, x0
   2aab0:	mov	x1, x25
   2aab4:	mov	x2, x22
   2aab8:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   2aabc:	strb	wzr, [x20, x22]
   2aac0:	cbz	x20, 2aad0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x21e8>
   2aac4:	mov	x0, x20
   2aac8:	bl	1b740 <__sanitizer_set_report_fd@@Base+0x38c0>
   2aacc:	str	x0, [x19, #56]
   2aad0:	mov	x0, x20
   2aad4:	mov	x1, #0x0                   	// #0
   2aad8:	bl	12770 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   2aadc:	ldr	x2, [x19, #48]
   2aae0:	mov	w0, #0x1                   	// #1
   2aae4:	ldr	x1, [x19, #8]
   2aae8:	add	x21, x21, x2
   2aaec:	ldp	x23, x24, [sp, #32]
   2aaf0:	sub	x21, x21, x1
   2aaf4:	ldr	x25, [sp, #48]
   2aaf8:	str	x21, [x19, #48]
   2aafc:	ldp	x21, x22, [sp, #16]
   2ab00:	ldr	x30, [sp, #56]
   2ab04:	ldp	x19, x20, [sp], #64
   2ab08:	ret
   2ab0c:	nop
   2ab10:	stp	x19, x20, [sp, #-96]!
   2ab14:	stp	x27, x30, [sp, #64]
   2ab18:	add	x27, x0, #0x70
   2ab1c:	stp	x21, x22, [sp, #16]
   2ab20:	mov	x21, x0
   2ab24:	mov	x0, x27
   2ab28:	stp	x23, x24, [sp, #32]
   2ab2c:	mov	x24, x1
   2ab30:	bl	1c690 <__sanitizer_set_report_fd@@Base+0x4810>
   2ab34:	mov	x0, x24
   2ab38:	bl	291c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8e0>
   2ab3c:	mov	x1, x24
   2ab40:	mov	x23, x0
   2ab44:	mov	x0, x21
   2ab48:	bl	29e78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1590>
   2ab4c:	cbz	x0, 2abe8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2300>
   2ab50:	mov	x2, x0
   2ab54:	add	x20, x23, #0x8
   2ab58:	mov	x0, x20
   2ab5c:	ldr	w3, [x2, #24]
   2ab60:	ldp	x1, x2, [x2]
   2ab64:	sub	x2, x24, x2
   2ab68:	bl	29168 <__sanitizer_get_module_and_offset_for_pc@@Base+0x880>
   2ab6c:	ldr	x19, [x21, #208]
   2ab70:	cbz	x19, 2abe8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2300>
   2ab74:	add	x22, sp, #0x58
   2ab78:	stp	x25, x26, [sp, #48]
   2ab7c:	adrp	x26, 2a000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1718>
   2ab80:	adrp	x25, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2ab84:	add	x26, x26, #0xea0
   2ab88:	add	x25, x25, #0x460
   2ab8c:	b	2aba0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x22b8>
   2ab90:	mov	x0, x22
   2ab94:	bl	296c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xde0>
   2ab98:	ldr	x19, [x19, #8]
   2ab9c:	cbz	x19, 2ac2c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2344>
   2aba0:	mov	x1, x21
   2aba4:	mov	x0, x22
   2aba8:	bl	296b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xdc8>
   2abac:	ldr	x2, [x19]
   2abb0:	mov	x1, x25
   2abb4:	mov	x0, x19
   2abb8:	ldr	x3, [x2]
   2abbc:	cmp	x3, x26
   2abc0:	b.ne	2ac08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2320>  // b.any
   2abc4:	ldp	x2, x3, [x20, #8]
   2abc8:	ldr	w4, [x20, #24]
   2abcc:	bl	2a810 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f28>
   2abd0:	cbz	x0, 2ab90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x22a8>
   2abd4:	mov	x1, x23
   2abd8:	bl	2a310 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a28>
   2abdc:	mov	x0, x22
   2abe0:	bl	296c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xde0>
   2abe4:	ldp	x25, x26, [sp, #48]
   2abe8:	mov	x0, x27
   2abec:	bl	1c728 <__sanitizer_set_report_fd@@Base+0x48a8>
   2abf0:	mov	x0, x23
   2abf4:	ldp	x21, x22, [sp, #16]
   2abf8:	ldp	x23, x24, [sp, #32]
   2abfc:	ldp	x27, x30, [sp, #64]
   2ac00:	ldp	x19, x20, [sp], #96
   2ac04:	ret
   2ac08:	mov	x2, x23
   2ac0c:	mov	x1, x24
   2ac10:	blr	x3
   2ac14:	tst	w0, #0xff
   2ac18:	b.ne	2abdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x22f4>  // b.any
   2ac1c:	mov	x0, x22
   2ac20:	bl	296c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xde0>
   2ac24:	ldr	x19, [x19, #8]
   2ac28:	cbnz	x19, 2aba0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x22b8>
   2ac2c:	mov	x0, x27
   2ac30:	ldp	x25, x26, [sp, #48]
   2ac34:	bl	1c728 <__sanitizer_set_report_fd@@Base+0x48a8>
   2ac38:	mov	x0, x23
   2ac3c:	ldp	x21, x22, [sp, #16]
   2ac40:	ldp	x23, x24, [sp, #32]
   2ac44:	ldp	x27, x30, [sp, #64]
   2ac48:	ldp	x19, x20, [sp], #96
   2ac4c:	ret
   2ac50:	stp	x19, x20, [sp, #-96]!
   2ac54:	mov	x19, x2
   2ac58:	stp	x23, x24, [sp, #32]
   2ac5c:	add	x24, x0, #0x70
   2ac60:	stp	x21, x22, [sp, #16]
   2ac64:	mov	x22, x1
   2ac68:	stp	x25, x26, [sp, #48]
   2ac6c:	mov	x25, x0
   2ac70:	mov	x0, x24
   2ac74:	str	x30, [sp, #72]
   2ac78:	bl	1c690 <__sanitizer_set_report_fd@@Base+0x4810>
   2ac7c:	mov	x1, x22
   2ac80:	mov	x0, x25
   2ac84:	bl	29e78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1590>
   2ac88:	cbz	x0, 2ae94 <__sanitizer_get_module_and_offset_for_pc@@Base+0x25ac>
   2ac8c:	mov	x1, x0
   2ac90:	mov	x0, x19
   2ac94:	add	x23, sp, #0x58
   2ac98:	ldp	x20, x21, [x1]
   2ac9c:	ldr	w26, [x1, #24]
   2aca0:	str	x27, [sp, #64]
   2aca4:	bl	292a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x9b8>
   2aca8:	adrp	x27, 2a000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1718>
   2acac:	add	x27, x27, #0x990
   2acb0:	mov	x0, x20
   2acb4:	bl	1a360 <__sanitizer_set_report_fd@@Base+0x24e0>
   2acb8:	ldr	x20, [x25, #208]
   2acbc:	sub	x21, x22, x21
   2acc0:	stp	x0, x21, [x19]
   2acc4:	str	w26, [x19, #16]
   2acc8:	adrp	x26, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2accc:	add	x26, x26, #0x458
   2acd0:	cbnz	x20, 2ace8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2400>
   2acd4:	b	2ae88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x25a0>
   2acd8:	mov	x0, x23
   2acdc:	bl	296c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xde0>
   2ace0:	ldr	x20, [x20, #8]
   2ace4:	cbz	x20, 2ae88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x25a0>
   2ace8:	mov	x1, x25
   2acec:	mov	x0, x23
   2acf0:	bl	296b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xdc8>
   2acf4:	ldr	x2, [x20]
   2acf8:	mov	x1, x26
   2acfc:	mov	x0, x20
   2ad00:	ldr	x3, [x2, #8]
   2ad04:	cmp	x3, x27
   2ad08:	b.ne	2ae64 <__sanitizer_get_module_and_offset_for_pc@@Base+0x257c>  // b.any
   2ad0c:	ldp	x2, x3, [x19]
   2ad10:	ldr	w4, [x19, #16]
   2ad14:	bl	2a810 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f28>
   2ad18:	mov	x21, x0
   2ad1c:	cbz	x0, 2acd8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x23f0>
   2ad20:	adrp	x25, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2ad24:	add	x1, x25, #0x0
   2ad28:	bl	1a308 <__sanitizer_set_report_fd@@Base+0x2488>
   2ad2c:	mov	x20, x0
   2ad30:	mov	x2, #0x0                   	// #0
   2ad34:	mov	x1, #0x0                   	// #0
   2ad38:	add	x0, x0, #0x1
   2ad3c:	bl	121c8 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   2ad40:	str	x0, [x19, #40]
   2ad44:	mov	x2, x20
   2ad48:	mov	x1, x21
   2ad4c:	add	x26, x21, x20
   2ad50:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   2ad54:	ldr	x0, [x19, #40]
   2ad58:	adrp	x1, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   2ad5c:	add	x1, x1, #0xb28
   2ad60:	strb	wzr, [x0, x20]
   2ad64:	ldrb	w0, [x21, x20]
   2ad68:	cmp	w0, #0x0
   2ad6c:	cinc	x26, x26, ne  // ne = any
   2ad70:	mov	x0, x26
   2ad74:	bl	1a308 <__sanitizer_set_report_fd@@Base+0x2488>
   2ad78:	mov	x20, x0
   2ad7c:	mov	x2, #0x0                   	// #0
   2ad80:	mov	x1, #0x0                   	// #0
   2ad84:	add	x0, x0, #0x1
   2ad88:	bl	121c8 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   2ad8c:	mov	x21, x0
   2ad90:	mov	x1, x26
   2ad94:	mov	x2, x20
   2ad98:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   2ad9c:	add	x27, x26, x20
   2ada0:	strb	wzr, [x21, x20]
   2ada4:	ldrb	w0, [x26, x20]
   2ada8:	cmp	w0, #0x0
   2adac:	cinc	x27, x27, ne  // ne = any
   2adb0:	cbz	x21, 2adc0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x24d8>
   2adb4:	mov	x0, x21
   2adb8:	bl	1b740 <__sanitizer_set_report_fd@@Base+0x38c0>
   2adbc:	str	x0, [x19, #48]
   2adc0:	mov	x0, x21
   2adc4:	mov	x1, #0x0                   	// #0
   2adc8:	bl	12770 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   2adcc:	add	x1, x25, #0x0
   2add0:	mov	x0, x27
   2add4:	bl	1a308 <__sanitizer_set_report_fd@@Base+0x2488>
   2add8:	mov	x21, x0
   2addc:	mov	x2, #0x0                   	// #0
   2ade0:	mov	x1, #0x0                   	// #0
   2ade4:	add	x0, x0, #0x1
   2ade8:	bl	121c8 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   2adec:	mov	x20, x0
   2adf0:	mov	x1, x27
   2adf4:	mov	x2, x21
   2adf8:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   2adfc:	strb	wzr, [x20, x21]
   2ae00:	cbz	x20, 2ae10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2528>
   2ae04:	mov	x0, x20
   2ae08:	bl	1b740 <__sanitizer_set_report_fd@@Base+0x38c0>
   2ae0c:	str	x0, [x19, #56]
   2ae10:	mov	x0, x20
   2ae14:	mov	x1, #0x0                   	// #0
   2ae18:	bl	12770 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   2ae1c:	ldr	x1, [x19, #48]
   2ae20:	ldr	x0, [x19, #8]
   2ae24:	add	x22, x22, x1
   2ae28:	sub	x22, x22, x0
   2ae2c:	str	x22, [x19, #48]
   2ae30:	mov	x0, x23
   2ae34:	bl	296c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xde0>
   2ae38:	ldr	x27, [sp, #64]
   2ae3c:	mov	w19, #0x1                   	// #1
   2ae40:	mov	x0, x24
   2ae44:	bl	1c728 <__sanitizer_set_report_fd@@Base+0x48a8>
   2ae48:	mov	w0, w19
   2ae4c:	ldp	x21, x22, [sp, #16]
   2ae50:	ldp	x23, x24, [sp, #32]
   2ae54:	ldp	x25, x26, [sp, #48]
   2ae58:	ldr	x30, [sp, #72]
   2ae5c:	ldp	x19, x20, [sp], #96
   2ae60:	ret
   2ae64:	mov	x2, x19
   2ae68:	mov	x1, x22
   2ae6c:	blr	x3
   2ae70:	tst	w0, #0xff
   2ae74:	b.ne	2ae30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2548>  // b.any
   2ae78:	mov	x0, x23
   2ae7c:	bl	296c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xde0>
   2ae80:	ldr	x20, [x20, #8]
   2ae84:	cbnz	x20, 2ace8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2400>
   2ae88:	mov	w19, #0x1                   	// #1
   2ae8c:	ldr	x27, [sp, #64]
   2ae90:	b	2ae40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2558>
   2ae94:	mov	w19, #0x0                   	// #0
   2ae98:	b	2ae40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2558>
   2ae9c:	nop
   2aea0:	stp	x19, x20, [sp, #-32]!
   2aea4:	mov	x19, x2
   2aea8:	mov	x20, x0
   2aeac:	ldp	x4, x5, [x2, #16]
   2aeb0:	stp	x21, x30, [sp, #16]
   2aeb4:	ldr	w2, [x2, #32]
   2aeb8:	cbz	x4, 2aff4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x270c>
   2aebc:	add	x21, x0, #0x18
   2aec0:	cbz	w2, 2af48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2660>
   2aec4:	cmp	w2, #0x5
   2aec8:	b.eq	2b010 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2728>  // b.none
   2aecc:	b.hi	2af98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x26b0>  // b.pmore
   2aed0:	cmp	w2, #0x3
   2aed4:	b.eq	2afe8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2700>  // b.none
   2aed8:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2aedc:	cmp	w2, #0x4
   2aee0:	add	x1, x1, #0x48
   2aee4:	b.ne	2af84 <__sanitizer_get_module_and_offset_for_pc@@Base+0x269c>  // b.any
   2aee8:	mov	x6, x5
   2aeec:	mov	x0, x21
   2aef0:	mov	x5, x1
   2aef4:	adrp	x3, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2aef8:	mov	x1, #0x4000                	// #16384
   2aefc:	add	x3, x3, #0x460
   2af00:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2af04:	add	x2, x2, #0x440
   2af08:	bl	1f928 <__sanitizer_on_print@@Base+0x8>
   2af0c:	mov	w1, #0x3fff                	// #16383
   2af10:	cmp	w0, w1
   2af14:	b.gt	2af70 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2688>
   2af18:	ldr	x0, [x20, #16]
   2af1c:	mov	x1, x21
   2af20:	bl	2a630 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1d48>
   2af24:	mov	w1, #0x0                   	// #0
   2af28:	cbz	x0, 2af38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2650>
   2af2c:	mov	x1, x19
   2af30:	bl	2a310 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a28>
   2af34:	mov	w1, #0x1                   	// #1
   2af38:	mov	w0, w1
   2af3c:	ldp	x21, x30, [sp, #16]
   2af40:	ldp	x19, x20, [sp], #32
   2af44:	ret
   2af48:	mov	x1, #0x4000                	// #16384
   2af4c:	mov	x0, x21
   2af50:	adrp	x3, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2af54:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2af58:	add	x3, x3, #0x460
   2af5c:	add	x2, x2, #0x408
   2af60:	bl	1f928 <__sanitizer_on_print@@Base+0x8>
   2af64:	mov	w1, #0x3fff                	// #16383
   2af68:	cmp	w0, w1
   2af6c:	b.le	2af18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2630>
   2af70:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2af74:	add	x0, x0, #0x418
   2af78:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   2af7c:	mov	w1, #0x0                   	// #0
   2af80:	b	2af38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2650>
   2af84:	cmp	w2, #0x1
   2af88:	b.ne	2afb4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x26cc>  // b.any
   2af8c:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2af90:	add	x1, x1, #0x30
   2af94:	b	2aee8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2600>
   2af98:	cmp	w2, #0x7
   2af9c:	b.eq	2afdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x26f4>  // b.none
   2afa0:	cmp	w2, #0x8
   2afa4:	b.ne	2afc8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x26e0>  // b.any
   2afa8:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2afac:	add	x1, x1, #0x50
   2afb0:	b	2aee8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2600>
   2afb4:	cmp	w2, #0x2
   2afb8:	b.ne	2b01c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2734>  // b.any
   2afbc:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2afc0:	add	x1, x1, #0x28
   2afc4:	b	2aee8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2600>
   2afc8:	cmp	w2, #0x6
   2afcc:	b.ne	2b01c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2734>  // b.any
   2afd0:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2afd4:	add	x1, x1, #0x58
   2afd8:	b	2aee8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2600>
   2afdc:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2afe0:	add	x1, x1, #0x20
   2afe4:	b	2aee8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2600>
   2afe8:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2afec:	add	x1, x1, #0x40
   2aff0:	b	2aee8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2600>
   2aff4:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2aff8:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2affc:	add	x2, x2, #0x3f0
   2b000:	add	x0, x0, #0x238
   2b004:	mov	x3, #0x0                   	// #0
   2b008:	mov	w1, #0x1b5                 	// #437
   2b00c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   2b010:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2b014:	add	x1, x1, #0x38
   2b018:	b	2aee8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2600>
   2b01c:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2b020:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   2b024:	add	x2, x2, #0x68
   2b028:	add	x0, x0, #0xb98
   2b02c:	mov	x4, #0x0                   	// #0
   2b030:	mov	x3, #0x0                   	// #0
   2b034:	mov	w1, #0x2b8                 	// #696
   2b038:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   2b03c:	nop
   2b040:	stp	x19, x20, [sp, #-224]!
   2b044:	mov	x20, x2
   2b048:	ldp	x4, x5, [x2]
   2b04c:	ldr	w2, [x2, #16]
   2b050:	stp	x21, x22, [sp, #16]
   2b054:	str	x30, [sp, #80]
   2b058:	cbz	x4, 2b550 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c68>
   2b05c:	mov	x19, x0
   2b060:	add	x21, x0, #0x18
   2b064:	cbz	w2, 2b0ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x2804>
   2b068:	cmp	w2, #0x5
   2b06c:	b.eq	2b590 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ca8>  // b.none
   2b070:	b.hi	2b13c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2854>  // b.pmore
   2b074:	cmp	w2, #0x3
   2b078:	b.eq	2b544 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c5c>  // b.none
   2b07c:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2b080:	cmp	w2, #0x4
   2b084:	add	x1, x1, #0x48
   2b088:	b.ne	2b128 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2840>  // b.any
   2b08c:	nop
   2b090:	mov	x6, x5
   2b094:	mov	x0, x21
   2b098:	mov	x5, x1
   2b09c:	adrp	x3, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2b0a0:	mov	x1, #0x4000                	// #16384
   2b0a4:	add	x3, x3, #0x468
   2b0a8:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2b0ac:	add	x2, x2, #0x440
   2b0b0:	bl	1f928 <__sanitizer_on_print@@Base+0x8>
   2b0b4:	mov	w1, #0x3fff                	// #16383
   2b0b8:	cmp	w0, w1
   2b0bc:	b.gt	2b114 <__sanitizer_get_module_and_offset_for_pc@@Base+0x282c>
   2b0c0:	ldr	x0, [x19, #16]
   2b0c4:	mov	x1, x21
   2b0c8:	bl	2a630 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1d48>
   2b0cc:	mov	x19, x0
   2b0d0:	mov	w1, #0x0                   	// #0
   2b0d4:	cbnz	x0, 2b180 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2898>
   2b0d8:	mov	w0, w1
   2b0dc:	ldp	x21, x22, [sp, #16]
   2b0e0:	ldr	x30, [sp, #80]
   2b0e4:	ldp	x19, x20, [sp], #224
   2b0e8:	ret
   2b0ec:	mov	x1, #0x4000                	// #16384
   2b0f0:	mov	x0, x21
   2b0f4:	adrp	x3, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2b0f8:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2b0fc:	add	x3, x3, #0x468
   2b100:	add	x2, x2, #0x408
   2b104:	bl	1f928 <__sanitizer_on_print@@Base+0x8>
   2b108:	mov	w1, #0x3fff                	// #16383
   2b10c:	cmp	w0, w1
   2b110:	b.le	2b0c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x27d8>
   2b114:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2b118:	add	x0, x0, #0x418
   2b11c:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   2b120:	mov	w1, #0x0                   	// #0
   2b124:	b	2b0d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x27f0>
   2b128:	cmp	w2, #0x1
   2b12c:	b.ne	2b158 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2870>  // b.any
   2b130:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2b134:	add	x1, x1, #0x30
   2b138:	b	2b090 <__sanitizer_get_module_and_offset_for_pc@@Base+0x27a8>
   2b13c:	cmp	w2, #0x7
   2b140:	b.eq	2b47c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b94>  // b.none
   2b144:	cmp	w2, #0x8
   2b148:	b.ne	2b16c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2884>  // b.any
   2b14c:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2b150:	add	x1, x1, #0x50
   2b154:	b	2b090 <__sanitizer_get_module_and_offset_for_pc@@Base+0x27a8>
   2b158:	cmp	w2, #0x2
   2b15c:	b.ne	2b60c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d24>  // b.any
   2b160:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2b164:	add	x1, x1, #0x28
   2b168:	b	2b090 <__sanitizer_get_module_and_offset_for_pc@@Base+0x27a8>
   2b16c:	cmp	w2, #0x6
   2b170:	b.ne	2b60c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d24>  // b.any
   2b174:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2b178:	add	x1, x1, #0x58
   2b17c:	b	2b090 <__sanitizer_get_module_and_offset_for_pc@@Base+0x27a8>
   2b180:	adrp	x22, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2b184:	add	x22, x22, #0x340
   2b188:	mov	x1, x22
   2b18c:	mov	x2, #0x2                   	// #2
   2b190:	bl	1a5a8 <__sanitizer_set_report_fd@@Base+0x2728>
   2b194:	cbz	w0, 2b464 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b7c>
   2b198:	ldrb	w0, [x19]
   2b19c:	cbz	w0, 2b464 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b7c>
   2b1a0:	stp	x23, x24, [sp, #32]
   2b1a4:	adrp	x23, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2b1a8:	add	x24, x20, #0x18
   2b1ac:	add	x23, x23, #0x0
   2b1b0:	stp	x25, x26, [sp, #48]
   2b1b4:	adrp	x25, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   2b1b8:	add	x26, sp, #0xa0
   2b1bc:	add	x25, x25, #0xb28
   2b1c0:	stp	x27, x28, [sp, #64]
   2b1c4:	mov	x1, x23
   2b1c8:	mov	x0, x19
   2b1cc:	stp	xzr, xzr, [sp, #96]
   2b1d0:	str	xzr, [sp, #112]
   2b1d4:	str	wzr, [sp, #120]
   2b1d8:	strh	wzr, [sp, #124]
   2b1dc:	strb	wzr, [sp, #126]
   2b1e0:	bl	1a308 <__sanitizer_set_report_fd@@Base+0x2488>
   2b1e4:	mov	x2, #0x0                   	// #0
   2b1e8:	mov	x21, x0
   2b1ec:	mov	x1, #0x0                   	// #0
   2b1f0:	add	x0, x0, #0x1
   2b1f4:	bl	121c8 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   2b1f8:	str	x0, [sp, #96]
   2b1fc:	mov	x2, x21
   2b200:	mov	x1, x19
   2b204:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   2b208:	add	x28, x19, x21
   2b20c:	ldr	x0, [sp, #96]
   2b210:	mov	x1, x23
   2b214:	strb	wzr, [x0, x21]
   2b218:	ldrb	w0, [x19, x21]
   2b21c:	cmp	w0, #0x0
   2b220:	cinc	x28, x28, ne  // ne = any
   2b224:	mov	x0, x28
   2b228:	bl	1a308 <__sanitizer_set_report_fd@@Base+0x2488>
   2b22c:	mov	x19, x0
   2b230:	mov	x2, #0x0                   	// #0
   2b234:	mov	x1, #0x0                   	// #0
   2b238:	add	x0, x0, #0x1
   2b23c:	bl	121c8 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   2b240:	mov	x2, x19
   2b244:	mov	x1, x28
   2b248:	str	x0, [sp, #104]
   2b24c:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   2b250:	ldr	x1, [sp, #104]
   2b254:	add	x21, x28, x19
   2b258:	mov	x0, x26
   2b25c:	strb	wzr, [x1, x19]
   2b260:	ldrb	w1, [x28, x19]
   2b264:	cmp	w1, #0x0
   2b268:	cinc	x21, x21, ne  // ne = any
   2b26c:	bl	290f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x808>
   2b270:	mov	x1, x21
   2b274:	mov	x0, x26
   2b278:	bl	29850 <__sanitizer_get_module_and_offset_for_pc@@Base+0xf68>
   2b27c:	mov	x28, x0
   2b280:	ldr	w3, [sp, #216]
   2b284:	mov	x1, x22
   2b288:	ldr	x4, [sp, #208]
   2b28c:	mov	x2, #0x2                   	// #2
   2b290:	str	x4, [sp, #112]
   2b294:	str	w3, [sp, #120]
   2b298:	bl	1a5a8 <__sanitizer_set_report_fd@@Base+0x2728>
   2b29c:	cmp	w0, #0x0
   2b2a0:	cset	w2, ne  // ne = any
   2b2a4:	mov	x1, x25
   2b2a8:	mov	x0, x28
   2b2ac:	strb	w2, [sp, #124]
   2b2b0:	bl	1a308 <__sanitizer_set_report_fd@@Base+0x2488>
   2b2b4:	mov	x19, x0
   2b2b8:	mov	x2, #0x0                   	// #0
   2b2bc:	mov	x1, #0x0                   	// #0
   2b2c0:	add	x0, x0, #0x1
   2b2c4:	bl	121c8 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   2b2c8:	mov	x27, x0
   2b2cc:	mov	x2, x19
   2b2d0:	mov	x1, x28
   2b2d4:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   2b2d8:	add	x21, x28, x19
   2b2dc:	strb	wzr, [x27, x19]
   2b2e0:	ldrb	w0, [x28, x19]
   2b2e4:	cmp	w0, #0x0
   2b2e8:	cinc	x21, x21, ne  // ne = any
   2b2ec:	cbz	x27, 2b2fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a14>
   2b2f0:	mov	x0, x27
   2b2f4:	bl	1b740 <__sanitizer_set_report_fd@@Base+0x38c0>
   2b2f8:	str	x0, [sp, #128]
   2b2fc:	mov	x0, x27
   2b300:	mov	x1, #0x0                   	// #0
   2b304:	bl	12770 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   2b308:	mov	x1, x22
   2b30c:	mov	x2, #0x2                   	// #2
   2b310:	mov	x0, x21
   2b314:	bl	1a5a8 <__sanitizer_set_report_fd@@Base+0x2728>
   2b318:	cmp	w0, #0x0
   2b31c:	mov	x1, x25
   2b320:	cset	w2, ne  // ne = any
   2b324:	mov	x0, x21
   2b328:	strb	w2, [sp, #125]
   2b32c:	bl	1a308 <__sanitizer_set_report_fd@@Base+0x2488>
   2b330:	mov	x19, x0
   2b334:	mov	x2, #0x0                   	// #0
   2b338:	mov	x1, #0x0                   	// #0
   2b33c:	add	x0, x0, #0x1
   2b340:	bl	121c8 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   2b344:	mov	x27, x0
   2b348:	mov	x2, x19
   2b34c:	mov	x1, x21
   2b350:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   2b354:	add	x28, x21, x19
   2b358:	strb	wzr, [x27, x19]
   2b35c:	ldrb	w0, [x21, x19]
   2b360:	cmp	w0, #0x0
   2b364:	cinc	x28, x28, ne  // ne = any
   2b368:	cbz	x27, 2b378 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a90>
   2b36c:	mov	x0, x27
   2b370:	bl	1b740 <__sanitizer_set_report_fd@@Base+0x38c0>
   2b374:	str	x0, [sp, #136]
   2b378:	mov	x0, x27
   2b37c:	mov	x1, #0x0                   	// #0
   2b380:	bl	12770 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   2b384:	mov	x1, x22
   2b388:	mov	x2, #0x2                   	// #2
   2b38c:	mov	x0, x28
   2b390:	bl	1a5a8 <__sanitizer_set_report_fd@@Base+0x2728>
   2b394:	cmp	w0, #0x0
   2b398:	mov	x1, x23
   2b39c:	cset	w2, ne  // ne = any
   2b3a0:	mov	x0, x28
   2b3a4:	strb	w2, [sp, #126]
   2b3a8:	bl	1a308 <__sanitizer_set_report_fd@@Base+0x2488>
   2b3ac:	mov	x21, x0
   2b3b0:	mov	x2, #0x0                   	// #0
   2b3b4:	mov	x1, #0x0                   	// #0
   2b3b8:	add	x0, x0, #0x1
   2b3bc:	bl	121c8 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   2b3c0:	mov	x27, x0
   2b3c4:	mov	x2, x21
   2b3c8:	mov	x1, x28
   2b3cc:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   2b3d0:	add	x19, x28, x21
   2b3d4:	strb	wzr, [x27, x21]
   2b3d8:	ldrb	w0, [x28, x21]
   2b3dc:	cmp	w0, #0x0
   2b3e0:	cinc	x19, x19, ne  // ne = any
   2b3e4:	cbz	x27, 2b3f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b0c>
   2b3e8:	mov	x0, x27
   2b3ec:	bl	1b740 <__sanitizer_set_report_fd@@Base+0x38c0>
   2b3f0:	str	x0, [sp, #144]
   2b3f4:	mov	x0, x27
   2b3f8:	mov	x1, #0x0                   	// #0
   2b3fc:	bl	12770 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   2b400:	ldr	x4, [x20, #32]
   2b404:	mov	x0, #0x2493                	// #9363
   2b408:	movk	x0, #0x9249, lsl #16
   2b40c:	movk	x0, #0x4924, lsl #32
   2b410:	lsr	x4, x4, #3
   2b414:	movk	x0, #0x2492, lsl #48
   2b418:	ldr	x3, [x24, #16]
   2b41c:	umulh	x4, x4, x0
   2b420:	cmp	x3, x4
   2b424:	b.hi	2b578 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c90>  // b.pmore
   2b428:	add	x1, x3, #0x1
   2b42c:	b.eq	2b488 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ba0>  // b.none
   2b430:	ldr	x21, [x24]
   2b434:	lsl	x0, x3, #3
   2b438:	sub	x0, x0, x3
   2b43c:	str	x1, [x24, #16]
   2b440:	mov	x2, #0x38                  	// #56
   2b444:	add	x1, sp, #0x60
   2b448:	add	x0, x21, x0, lsl #3
   2b44c:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   2b450:	ldrb	w0, [x19]
   2b454:	cbnz	w0, 2b1c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x28dc>
   2b458:	ldp	x23, x24, [sp, #32]
   2b45c:	ldp	x25, x26, [sp, #48]
   2b460:	ldp	x27, x28, [sp, #64]
   2b464:	mov	w1, #0x1                   	// #1
   2b468:	mov	w0, w1
   2b46c:	ldp	x21, x22, [sp, #16]
   2b470:	ldr	x30, [sp, #80]
   2b474:	ldp	x19, x20, [sp], #224
   2b478:	ret
   2b47c:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2b480:	add	x1, x1, #0x20
   2b484:	b	2b090 <__sanitizer_get_module_and_offset_for_pc@@Base+0x27a8>
   2b488:	tst	x1, x3
   2b48c:	b.eq	2b4c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2be0>  // b.none
   2b490:	clz	x4, x1
   2b494:	mov	w0, #0x3f                  	// #63
   2b498:	sub	w0, w0, w4
   2b49c:	mov	x2, #0x1                   	// #1
   2b4a0:	add	w4, w0, #0x1
   2b4a4:	lsl	x4, x2, x4
   2b4a8:	cmp	x1, x4
   2b4ac:	b.cs	2b5d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ce8>  // b.hs, b.nlast
   2b4b0:	lsl	x0, x2, x0
   2b4b4:	cmp	x1, x0
   2b4b8:	b.ls	2b5ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d04>  // b.plast
   2b4bc:	cmp	x3, x4
   2b4c0:	b.hi	2b59c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2cb4>  // b.pmore
   2b4c4:	mov	x1, x4
   2b4c8:	adrp	x28, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2b4cc:	lsl	x0, x1, #3
   2b4d0:	sub	x1, x0, x1
   2b4d4:	ldr	x28, [x28, #4016]
   2b4d8:	lsl	x21, x1, #3
   2b4dc:	ldr	x0, [x28]
   2b4e0:	cbz	x0, 2b5b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ccc>
   2b4e4:	sub	x1, x0, #0x1
   2b4e8:	tst	x0, x1
   2b4ec:	b.ne	2b5c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2cd8>  // b.any
   2b4f0:	add	x1, x21, x1
   2b4f4:	neg	x0, x0
   2b4f8:	and	x28, x1, x0
   2b4fc:	mov	w2, #0x0                   	// #0
   2b500:	mov	x0, x28
   2b504:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   2b508:	add	x1, x1, #0xc10
   2b50c:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   2b510:	ldr	x3, [x24, #16]
   2b514:	mov	x21, x0
   2b518:	ldr	x1, [x24]
   2b51c:	lsl	x2, x3, #3
   2b520:	sub	x2, x2, x3
   2b524:	lsl	x2, x2, #3
   2b528:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   2b52c:	ldp	x0, x1, [x24]
   2b530:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   2b534:	stp	x21, x28, [x24]
   2b538:	ldr	x3, [x24, #16]
   2b53c:	add	x1, x3, #0x1
   2b540:	b	2b434 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b4c>
   2b544:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2b548:	add	x1, x1, #0x40
   2b54c:	b	2b090 <__sanitizer_get_module_and_offset_for_pc@@Base+0x27a8>
   2b550:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2b554:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2b558:	add	x2, x2, #0x3f0
   2b55c:	add	x0, x0, #0x238
   2b560:	mov	x3, #0x0                   	// #0
   2b564:	mov	w1, #0x1b5                 	// #437
   2b568:	stp	x23, x24, [sp, #32]
   2b56c:	stp	x25, x26, [sp, #48]
   2b570:	stp	x27, x28, [sp, #64]
   2b574:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   2b578:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   2b57c:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   2b580:	add	x2, x2, #0x8c8
   2b584:	add	x0, x0, #0xb98
   2b588:	mov	w1, #0x1cd                 	// #461
   2b58c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   2b590:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2b594:	add	x1, x1, #0x38
   2b598:	b	2b090 <__sanitizer_get_module_and_offset_for_pc@@Base+0x27a8>
   2b59c:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   2b5a0:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   2b5a4:	add	x2, x2, #0x8f8
   2b5a8:	add	x0, x0, #0xb98
   2b5ac:	mov	w1, #0x20c                 	// #524
   2b5b0:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   2b5b4:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   2b5b8:	str	x0, [x28]
   2b5bc:	b	2b4e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2bfc>
   2b5c0:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   2b5c4:	add	x0, x0, #0xbf8
   2b5c8:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   2b5cc:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   2b5d0:	mov	x3, x1
   2b5d4:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   2b5d8:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   2b5dc:	add	x2, x2, #0x680
   2b5e0:	add	x0, x0, #0xb98
   2b5e4:	mov	w1, #0x18a                 	// #394
   2b5e8:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   2b5ec:	mov	x4, x0
   2b5f0:	mov	x3, x1
   2b5f4:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   2b5f8:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   2b5fc:	add	x2, x2, #0x708
   2b600:	add	x0, x0, #0xb98
   2b604:	mov	w1, #0x18b                 	// #395
   2b608:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   2b60c:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2b610:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   2b614:	add	x2, x2, #0x68
   2b618:	add	x0, x0, #0xb98
   2b61c:	mov	x4, #0x0                   	// #0
   2b620:	mov	x3, #0x0                   	// #0
   2b624:	mov	w1, #0x2b8                 	// #696
   2b628:	stp	x23, x24, [sp, #32]
   2b62c:	stp	x25, x26, [sp, #48]
   2b630:	stp	x27, x28, [sp, #64]
   2b634:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   2b638:	stp	x19, x20, [sp, #-48]!
   2b63c:	mov	x19, x0
   2b640:	ldr	w0, [x0, #16]
   2b644:	str	x30, [sp, #24]
   2b648:	cmn	w0, #0x1
   2b64c:	b.eq	2b714 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2e2c>  // b.none
   2b650:	ldr	w0, [x19, #20]
   2b654:	cmn	w0, #0x1
   2b658:	b.eq	2b714 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2e2c>  // b.none
   2b65c:	mov	x20, x1
   2b660:	mov	x0, x1
   2b664:	str	x21, [sp, #16]
   2b668:	bl	1a690 <__sanitizer_set_report_fd@@Base+0x2810>
   2b66c:	mov	x21, x0
   2b670:	cbnz	x0, 2b6bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2dd4>
   2b674:	mov	x20, x19
   2b678:	adrp	x0, 29000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x718>
   2b67c:	add	x0, x0, #0x840
   2b680:	ldr	x1, [x20], #24
   2b684:	ldr	x3, [x1, #8]
   2b688:	cmp	x3, x0
   2b68c:	b.ne	2b728 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2e40>  // b.any
   2b690:	mov	x0, x19
   2b694:	mov	x1, x20
   2b698:	mov	x2, #0x4000                	// #16384
   2b69c:	bl	29708 <__sanitizer_get_module_and_offset_for_pc@@Base+0xe20>
   2b6a0:	and	w0, w0, #0xff
   2b6a4:	ldr	x21, [sp, #16]
   2b6a8:	cbz	w0, 2b714 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2e2c>
   2b6ac:	mov	x0, x20
   2b6b0:	ldr	x30, [sp, #24]
   2b6b4:	ldp	x19, x20, [sp], #48
   2b6b8:	ret
   2b6bc:	mov	x2, x0
   2b6c0:	ldr	w0, [x19, #20]
   2b6c4:	mov	x1, x20
   2b6c8:	add	x3, sp, #0x28
   2b6cc:	mov	x4, #0x0                   	// #0
   2b6d0:	str	xzr, [sp, #40]
   2b6d4:	bl	1dd28 <__sanitizer_set_report_fd@@Base+0x5ea8>
   2b6d8:	tst	w0, #0xff
   2b6dc:	b.eq	2b6ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x2e04>  // b.none
   2b6e0:	ldr	x0, [sp, #40]
   2b6e4:	cmp	x21, x0
   2b6e8:	b.eq	2b674 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d8c>  // b.none
   2b6ec:	ldr	w1, [x19, #20]
   2b6f0:	mov	x20, #0x0                   	// #0
   2b6f4:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2b6f8:	add	x0, x0, #0x380
   2b6fc:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   2b700:	mov	x0, x20
   2b704:	ldr	x21, [sp, #16]
   2b708:	ldr	x30, [sp, #24]
   2b70c:	ldp	x19, x20, [sp], #48
   2b710:	ret
   2b714:	mov	x20, #0x0                   	// #0
   2b718:	mov	x0, x20
   2b71c:	ldr	x30, [sp, #24]
   2b720:	ldp	x19, x20, [sp], #48
   2b724:	ret
   2b728:	mov	x0, x19
   2b72c:	mov	x1, x20
   2b730:	mov	x2, #0x4000                	// #16384
   2b734:	blr	x3
   2b738:	and	w0, w0, #0xff
   2b73c:	b	2b6a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2dbc>
   2b740:	stp	x19, x30, [sp, #-16]!
   2b744:	mov	x19, x0
   2b748:	ldr	w0, [x0, #16]
   2b74c:	cmn	w0, #0x1
   2b750:	b.eq	2b758 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2e70>  // b.none
   2b754:	bl	1dcd0 <__sanitizer_set_report_fd@@Base+0x5e50>
   2b758:	ldr	w0, [x19, #20]
   2b75c:	cmn	w0, #0x1
   2b760:	b.eq	2b768 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2e80>  // b.none
   2b764:	bl	1dcd0 <__sanitizer_set_report_fd@@Base+0x5e50>
   2b768:	ldr	x1, [x19]
   2b76c:	mov	x0, x19
   2b770:	ldp	x19, x30, [sp], #16
   2b774:	ldr	x1, [x1]
   2b778:	mov	x16, x1
   2b77c:	br	x16
   2b780:	cbnz	x2, 2b78c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ea4>
   2b784:	mov	w0, #0x1                   	// #1
   2b788:	ret
   2b78c:	stp	x19, x20, [sp, #-48]!
   2b790:	mov	x20, x0
   2b794:	mov	x19, x2
   2b798:	ldr	w0, [x0, #20]
   2b79c:	add	x3, sp, #0x28
   2b7a0:	mov	x4, #0x0                   	// #0
   2b7a4:	str	x30, [sp, #16]
   2b7a8:	str	xzr, [sp, #40]
   2b7ac:	bl	1dd28 <__sanitizer_set_report_fd@@Base+0x5ea8>
   2b7b0:	tst	w0, #0xff
   2b7b4:	b.eq	2b7d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2eec>  // b.none
   2b7b8:	ldr	x0, [sp, #40]
   2b7bc:	cmp	x0, x19
   2b7c0:	b.ne	2b7d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2eec>  // b.any
   2b7c4:	mov	w0, #0x1                   	// #1
   2b7c8:	ldr	x30, [sp, #16]
   2b7cc:	ldp	x19, x20, [sp], #48
   2b7d0:	ret
   2b7d4:	ldr	w1, [x20, #20]
   2b7d8:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2b7dc:	add	x0, x0, #0x380
   2b7e0:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   2b7e4:	mov	w0, #0x0                   	// #0
   2b7e8:	ldr	x30, [sp, #16]
   2b7ec:	ldp	x19, x20, [sp], #48
   2b7f0:	ret
   2b7f4:	nop
   2b7f8:	mov	x0, #0x0                   	// #0
   2b7fc:	ret
   2b800:	cmp	x2, #0x1
   2b804:	mov	w0, #0x0                   	// #0
   2b808:	b.ls	2b81c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f34>  // b.plast
   2b80c:	add	x1, x1, x2
   2b810:	ldurb	w2, [x1, #-1]
   2b814:	cmp	w2, #0xa
   2b818:	b.eq	2b820 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f38>  // b.none
   2b81c:	ret
   2b820:	ldurb	w0, [x1, #-2]
   2b824:	cmp	w0, #0xa
   2b828:	cset	w0, eq  // eq = none
   2b82c:	ret
   2b830:	adrp	x3, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2b834:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2b838:	adrp	x4, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2b83c:	add	x4, x4, #0x1a8
   2b840:	ldr	x5, [x3, #4056]
   2b844:	add	x3, x0, #0x190
   2b848:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2b84c:	add	x0, x0, #0x180
   2b850:	ldrb	w5, [x5, #188]
   2b854:	stp	x4, xzr, [x2, #16]
   2b858:	cmp	w5, #0x0
   2b85c:	csel	x0, x0, x3, ne  // ne = any
   2b860:	stp	x1, x0, [x2]
   2b864:	ret
   2b868:	cmp	x2, #0x8
   2b86c:	b.hi	2b878 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f90>  // b.pmore
   2b870:	mov	w0, #0x0                   	// #0
   2b874:	ret
   2b878:	adrp	x3, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2b87c:	str	x30, [sp, #-16]!
   2b880:	sub	x2, x2, #0x8
   2b884:	add	x0, x1, x2
   2b888:	add	x1, x3, #0x940
   2b88c:	mov	x2, #0x8                   	// #8
   2b890:	bl	19d80 <__sanitizer_set_report_fd@@Base+0x1f00>
   2b894:	cmp	w0, #0x0
   2b898:	cset	w0, eq  // eq = none
   2b89c:	ldr	x30, [sp], #16
   2b8a0:	ret
   2b8a4:	nop
   2b8a8:	stp	x19, x20, [sp, #-160]!
   2b8ac:	mov	x19, x0
   2b8b0:	ldr	x0, [x0, #8]
   2b8b4:	stp	x23, x24, [sp, #32]
   2b8b8:	str	x30, [sp, #56]
   2b8bc:	bl	1c400 <__sanitizer_set_report_fd@@Base+0x4580>
   2b8c0:	ands	w24, w0, #0xff
   2b8c4:	b.eq	2b97c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3094>  // b.none
   2b8c8:	ldp	x2, x1, [x19]
   2b8cc:	stp	x21, x22, [sp, #16]
   2b8d0:	adrp	x0, 2c000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3718>
   2b8d4:	add	x0, x0, #0x1e0
   2b8d8:	ldr	x3, [x2, #24]
   2b8dc:	str	x25, [sp, #48]
   2b8e0:	cmp	x3, x0
   2b8e4:	b.ne	2b9bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x30d4>  // b.any
   2b8e8:	ldr	x2, [x19, #16424]
   2b8ec:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2b8f0:	add	x0, x0, #0x470
   2b8f4:	stp	x1, x0, [sp, #112]
   2b8f8:	stp	x2, xzr, [sp, #128]
   2b8fc:	add	x0, x19, #0x4, lsl #12
   2b900:	ldrb	w24, [x0, #34]
   2b904:	cbnz	w24, 2bb38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3250>
   2b908:	add	x23, sp, #0x48
   2b90c:	mov	x22, #0x0                   	// #0
   2b910:	mov	x20, x23
   2b914:	mov	w21, #0x0                   	// #0
   2b918:	mov	x0, x20
   2b91c:	bl	6230 <pipe@plt>
   2b920:	cmn	w0, #0x1
   2b924:	b.eq	2b9f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x310c>  // b.none
   2b928:	ldr	w0, [x20]
   2b92c:	cmp	w0, #0x2
   2b930:	b.le	2b948 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3060>
   2b934:	ldr	w0, [x20, #4]
   2b938:	cmp	w0, #0x2
   2b93c:	b.le	2b948 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3060>
   2b940:	cbnz	x22, 2ba50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3168>
   2b944:	mov	x22, x20
   2b948:	add	w21, w21, #0x1
   2b94c:	add	x20, x20, #0x8
   2b950:	cmp	w21, #0x5
   2b954:	b.ne	2b918 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3030>  // b.any
   2b958:	cbnz	x22, 2b99c <__sanitizer_get_module_and_offset_for_pc@@Base+0x30b4>
   2b95c:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2b960:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2b964:	add	x2, x2, #0x5a8
   2b968:	add	x0, x0, #0x510
   2b96c:	mov	x4, #0x0                   	// #0
   2b970:	mov	x3, #0x0                   	// #0
   2b974:	mov	w1, #0x84                  	// #132
   2b978:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   2b97c:	add	x19, x19, #0x4, lsl #12
   2b980:	ldrb	w0, [x19, #33]
   2b984:	cbz	w0, 2b9cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x30e4>
   2b988:	mov	w0, w24
   2b98c:	ldp	x23, x24, [sp, #32]
   2b990:	ldr	x30, [sp, #56]
   2b994:	ldp	x19, x20, [sp], #160
   2b998:	ret
   2b99c:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2b9a0:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2b9a4:	add	x2, x2, #0x5b8
   2b9a8:	add	x0, x0, #0x510
   2b9ac:	mov	x4, #0x0                   	// #0
   2b9b0:	mov	x3, #0x0                   	// #0
   2b9b4:	mov	w1, #0x85                  	// #133
   2b9b8:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   2b9bc:	add	x2, sp, #0x70
   2b9c0:	mov	x0, x19
   2b9c4:	blr	x3
   2b9c8:	b	2b8fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3014>
   2b9cc:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2b9d0:	add	x0, x0, #0x578
   2b9d4:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   2b9d8:	mov	w0, #0x1                   	// #1
   2b9dc:	strb	w0, [x19, #33]
   2b9e0:	mov	w0, w24
   2b9e4:	ldp	x23, x24, [sp, #32]
   2b9e8:	ldr	x30, [sp, #56]
   2b9ec:	ldp	x19, x20, [sp], #160
   2b9f0:	ret
   2b9f4:	cbz	w21, 2ba1c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3134>
   2b9f8:	mov	w19, #0x0                   	// #0
   2b9fc:	ldr	w0, [x23]
   2ba00:	add	w19, w19, #0x1
   2ba04:	add	x23, x23, #0x8
   2ba08:	bl	1c1d8 <__sanitizer_set_report_fd@@Base+0x4358>
   2ba0c:	ldur	w0, [x23, #-4]
   2ba10:	bl	1c1d8 <__sanitizer_set_report_fd@@Base+0x4358>
   2ba14:	cmp	w19, w21
   2ba18:	b.ne	2b9fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3114>  // b.any
   2ba1c:	bl	64f0 <__errno_location@plt>
   2ba20:	mov	x1, x0
   2ba24:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2ba28:	add	x0, x0, #0x5d0
   2ba2c:	ldr	w1, [x1]
   2ba30:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   2ba34:	mov	w0, w24
   2ba38:	ldp	x21, x22, [sp, #16]
   2ba3c:	ldp	x23, x24, [sp, #32]
   2ba40:	ldr	x25, [sp, #48]
   2ba44:	ldr	x30, [sp, #56]
   2ba48:	ldp	x19, x20, [sp], #160
   2ba4c:	ret
   2ba50:	cbz	w21, 2ba80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3198>
   2ba54:	mov	w25, #0x0                   	// #0
   2ba58:	cmp	x23, x22
   2ba5c:	b.eq	2ba70 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3188>  // b.none
   2ba60:	ldr	w0, [x23]
   2ba64:	bl	1c1d8 <__sanitizer_set_report_fd@@Base+0x4358>
   2ba68:	ldr	w0, [x23, #4]
   2ba6c:	bl	1c1d8 <__sanitizer_set_report_fd@@Base+0x4358>
   2ba70:	add	w25, w25, #0x1
   2ba74:	add	x23, x23, #0x8
   2ba78:	cmp	w25, w21
   2ba7c:	b.ne	2ba58 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3170>  // b.any
   2ba80:	ldr	w2, [x20]
   2ba84:	add	x1, sp, #0x70
   2ba88:	ldp	w21, w3, [x22]
   2ba8c:	mov	w4, #0xffffffff            	// #-1
   2ba90:	ldr	x0, [x19, #8]
   2ba94:	ldr	w22, [x20, #4]
   2ba98:	bl	25140 <__sanitizer_sandbox_on_notify@@Base+0x1af8>
   2ba9c:	mov	w20, w0
   2baa0:	cmp	w0, #0x0
   2baa4:	b.lt	2bafc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3214>  // b.tstop
   2baa8:	stp	w21, w22, [x19, #16]
   2baac:	b.eq	2bb18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3230>  // b.none
   2bab0:	mov	w0, #0xa                   	// #10
   2bab4:	bl	248e0 <__sanitizer_sandbox_on_notify@@Base+0x1298>
   2bab8:	mov	w0, w20
   2babc:	bl	25290 <__sanitizer_sandbox_on_notify@@Base+0x1c48>
   2bac0:	ands	w24, w0, #0xff
   2bac4:	b.eq	2bae4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x31fc>  // b.none
   2bac8:	mov	w0, w24
   2bacc:	ldp	x21, x22, [sp, #16]
   2bad0:	ldp	x23, x24, [sp, #32]
   2bad4:	ldr	x25, [sp, #48]
   2bad8:	ldr	x30, [sp, #56]
   2badc:	ldp	x19, x20, [sp], #160
   2bae0:	ret
   2bae4:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2bae8:	add	x0, x0, #0x630
   2baec:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   2baf0:	ldp	x21, x22, [sp, #16]
   2baf4:	ldr	x25, [sp, #48]
   2baf8:	b	2b988 <__sanitizer_get_module_and_offset_for_pc@@Base+0x30a0>
   2bafc:	mov	w0, w21
   2bb00:	bl	1c1d8 <__sanitizer_set_report_fd@@Base+0x4358>
   2bb04:	mov	w0, w22
   2bb08:	bl	1c1d8 <__sanitizer_set_report_fd@@Base+0x4358>
   2bb0c:	ldp	x21, x22, [sp, #16]
   2bb10:	ldr	x25, [sp, #48]
   2bb14:	b	2b988 <__sanitizer_get_module_and_offset_for_pc@@Base+0x30a0>
   2bb18:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2bb1c:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2bb20:	add	x2, x2, #0x620
   2bb24:	add	x0, x0, #0x510
   2bb28:	mov	x4, #0x0                   	// #0
   2bb2c:	mov	x3, #0x0                   	// #0
   2bb30:	mov	w1, #0xbc                  	// #188
   2bb34:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   2bb38:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2bb3c:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2bb40:	add	x2, x2, #0x478
   2bb44:	add	x0, x0, #0x510
   2bb48:	mov	x4, #0x0                   	// #0
   2bb4c:	mov	x3, #0x0                   	// #0
   2bb50:	mov	w1, #0xa6                  	// #166
   2bb54:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   2bb58:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2bb5c:	stp	x19, x30, [sp, #-16]!
   2bb60:	mov	x19, x0
   2bb64:	ldr	x1, [x1, #3800]
   2bb68:	cbz	x1, 2bb88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x32a0>
   2bb6c:	mov	x3, #0x0                   	// #0
   2bb70:	mov	x2, #0x0                   	// #0
   2bb74:	mov	x1, #0x0                   	// #0
   2bb78:	bl	6380 <__cxa_demangle@plt>
   2bb7c:	cbz	x0, 2bb88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x32a0>
   2bb80:	ldp	x19, x30, [sp], #16
   2bb84:	ret
   2bb88:	mov	x0, x19
   2bb8c:	ldp	x19, x30, [sp], #16
   2bb90:	ret
   2bb94:	nop
   2bb98:	cbz	x0, 2bc04 <__sanitizer_get_module_and_offset_for_pc@@Base+0x331c>
   2bb9c:	stp	x19, x20, [sp, #-32]!
   2bba0:	mov	x19, x0
   2bba4:	str	x30, [sp, #16]
   2bba8:	ldrb	w1, [x0]
   2bbac:	cmp	w1, #0x5f
   2bbb0:	b.ne	2bbf4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x330c>  // b.any
   2bbb4:	ldrb	w1, [x0, #1]
   2bbb8:	cmp	w1, #0x54
   2bbbc:	b.ne	2bbf4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x330c>  // b.any
   2bbc0:	adrp	x1, 930000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e0>
   2bbc4:	ldr	x20, [x1, #3344]
   2bbc8:	cbz	x20, 2bbf4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x330c>
   2bbcc:	bl	1a690 <__sanitizer_set_report_fd@@Base+0x2810>
   2bbd0:	mov	x1, x0
   2bbd4:	mov	x16, x20
   2bbd8:	mov	x0, x19
   2bbdc:	ldr	x30, [sp, #16]
   2bbe0:	mov	w4, #0x0                   	// #0
   2bbe4:	ldp	x19, x20, [sp], #32
   2bbe8:	mov	x3, #0x0                   	// #0
   2bbec:	mov	x2, #0x0                   	// #0
   2bbf0:	br	x16
   2bbf4:	mov	x0, #0x0                   	// #0
   2bbf8:	ldr	x30, [sp, #16]
   2bbfc:	ldp	x19, x20, [sp], #32
   2bc00:	ret
   2bc04:	mov	x0, #0x0                   	// #0
   2bc08:	ret
   2bc0c:	nop
   2bc10:	cbz	x0, 2bca4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x33bc>
   2bc14:	stp	x19, x20, [sp, #-32]!
   2bc18:	mov	x19, x0
   2bc1c:	str	x30, [sp, #16]
   2bc20:	ldrb	w1, [x0]
   2bc24:	cmp	w1, #0x5f
   2bc28:	b.ne	2bc70 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3388>  // b.any
   2bc2c:	ldrb	w1, [x0, #1]
   2bc30:	cmp	w1, #0x54
   2bc34:	b.ne	2bc70 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3388>  // b.any
   2bc38:	adrp	x1, 930000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e0>
   2bc3c:	ldr	x20, [x1, #3344]
   2bc40:	cbz	x20, 2bc70 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3388>
   2bc44:	bl	1a690 <__sanitizer_set_report_fd@@Base+0x2810>
   2bc48:	mov	x1, x0
   2bc4c:	mov	w4, #0x0                   	// #0
   2bc50:	mov	x0, x19
   2bc54:	mov	x3, #0x0                   	// #0
   2bc58:	mov	x2, #0x0                   	// #0
   2bc5c:	blr	x20
   2bc60:	cbz	x0, 2bc70 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3388>
   2bc64:	ldr	x30, [sp, #16]
   2bc68:	ldp	x19, x20, [sp], #32
   2bc6c:	ret
   2bc70:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2bc74:	ldr	x0, [x0, #3800]
   2bc78:	cbz	x0, 2bc94 <__sanitizer_get_module_and_offset_for_pc@@Base+0x33ac>
   2bc7c:	mov	x0, x19
   2bc80:	mov	x3, #0x0                   	// #0
   2bc84:	mov	x2, #0x0                   	// #0
   2bc88:	mov	x1, #0x0                   	// #0
   2bc8c:	bl	6380 <__cxa_demangle@plt>
   2bc90:	cbnz	x0, 2bc64 <__sanitizer_get_module_and_offset_for_pc@@Base+0x337c>
   2bc94:	mov	x0, x19
   2bc98:	ldr	x30, [sp, #16]
   2bc9c:	ldp	x19, x20, [sp], #32
   2bca0:	ret
   2bca4:	mov	x0, #0x0                   	// #0
   2bca8:	ret
   2bcac:	nop
   2bcb0:	cbz	x1, 2bd48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3460>
   2bcb4:	stp	x19, x20, [sp, #-32]!
   2bcb8:	mov	x19, x1
   2bcbc:	str	x30, [sp, #16]
   2bcc0:	ldrb	w0, [x1]
   2bcc4:	cmp	w0, #0x5f
   2bcc8:	b.ne	2bd14 <__sanitizer_get_module_and_offset_for_pc@@Base+0x342c>  // b.any
   2bccc:	ldrb	w0, [x1, #1]
   2bcd0:	cmp	w0, #0x54
   2bcd4:	b.ne	2bd14 <__sanitizer_get_module_and_offset_for_pc@@Base+0x342c>  // b.any
   2bcd8:	adrp	x0, 930000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e0>
   2bcdc:	ldr	x20, [x0, #3344]
   2bce0:	cbz	x20, 2bd14 <__sanitizer_get_module_and_offset_for_pc@@Base+0x342c>
   2bce4:	mov	x0, x1
   2bce8:	bl	1a690 <__sanitizer_set_report_fd@@Base+0x2810>
   2bcec:	mov	w4, #0x0                   	// #0
   2bcf0:	mov	x1, x0
   2bcf4:	mov	x3, #0x0                   	// #0
   2bcf8:	mov	x0, x19
   2bcfc:	mov	x2, #0x0                   	// #0
   2bd00:	blr	x20
   2bd04:	cbz	x0, 2bd14 <__sanitizer_get_module_and_offset_for_pc@@Base+0x342c>
   2bd08:	ldr	x30, [sp, #16]
   2bd0c:	ldp	x19, x20, [sp], #32
   2bd10:	ret
   2bd14:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2bd18:	ldr	x0, [x0, #3800]
   2bd1c:	cbz	x0, 2bd38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3450>
   2bd20:	mov	x0, x19
   2bd24:	mov	x3, #0x0                   	// #0
   2bd28:	mov	x2, #0x0                   	// #0
   2bd2c:	mov	x1, #0x0                   	// #0
   2bd30:	bl	6380 <__cxa_demangle@plt>
   2bd34:	cbnz	x0, 2bd08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3420>
   2bd38:	mov	x0, x19
   2bd3c:	ldr	x30, [sp, #16]
   2bd40:	ldp	x19, x20, [sp], #32
   2bd44:	ret
   2bd48:	mov	x0, #0x0                   	// #0
   2bd4c:	ret
   2bd50:	stp	x19, x20, [sp, #-128]!
   2bd54:	adrp	x20, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2bd58:	ldr	x0, [x20, #4056]
   2bd5c:	stp	x21, x22, [sp, #16]
   2bd60:	ldrb	w0, [x0]
   2bd64:	str	x30, [sp, #48]
   2bd68:	cbnz	w0, 2bdf4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x350c>
   2bd6c:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2bd70:	adrp	x22, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2bd74:	ldr	x0, [x0, #3816]
   2bd78:	ldr	w0, [x0]
   2bd7c:	sxtw	x0, w0
   2bd80:	cmp	x0, #0x1
   2bd84:	b.hi	2bdd8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x34f0>  // b.pmore
   2bd88:	mov	x19, #0x0                   	// #0
   2bd8c:	mov	x2, #0x0                   	// #0
   2bd90:	dup	v0.2d, x19
   2bd94:	mov	x1, #0xf0                  	// #240
   2bd98:	ldr	x0, [x22, #3920]
   2bd9c:	str	x2, [sp, #96]
   2bda0:	stur	q0, [sp, #104]
   2bda4:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   2bda8:	ldp	x4, x5, [sp, #96]
   2bdac:	mov	x19, x0
   2bdb0:	ldr	x2, [sp, #112]
   2bdb4:	add	x1, sp, #0x40
   2bdb8:	stp	x4, x5, [sp, #64]
   2bdbc:	str	x2, [sp, #80]
   2bdc0:	bl	295d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xcf0>
   2bdc4:	mov	x0, x19
   2bdc8:	ldp	x21, x22, [sp, #16]
   2bdcc:	ldr	x30, [sp, #48]
   2bdd0:	ldp	x19, x20, [sp], #128
   2bdd4:	ret
   2bdd8:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2bddc:	add	x0, x0, #0x670
   2bde0:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   2bde4:	mov	x19, #0x0                   	// #0
   2bde8:	adrp	x22, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2bdec:	mov	x2, #0x0                   	// #0
   2bdf0:	b	2bd90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x34a8>
   2bdf4:	bl	12160 <_ZdaPvRKSt9nothrow_t@@Base+0x3e0>
   2bdf8:	tst	w0, #0xff
   2bdfc:	b.eq	2be50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3568>  // b.none
   2be00:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2be04:	ldr	x0, [x0, #3816]
   2be08:	ldr	w0, [x0]
   2be0c:	sxtw	x0, w0
   2be10:	cmp	x0, #0x1
   2be14:	b.hi	2beb4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x35cc>  // b.pmore
   2be18:	adrp	x22, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2be1c:	ldr	x0, [x22, #3920]
   2be20:	bl	296f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xe08>
   2be24:	mov	x19, x0
   2be28:	cbz	x0, 2bed4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x35ec>
   2be2c:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2be30:	ldr	x0, [x0, #3816]
   2be34:	ldr	w0, [x0]
   2be38:	sxtw	x0, w0
   2be3c:	cmp	x0, #0x1
   2be40:	b.hi	2bec4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x35dc>  // b.pmore
   2be44:	mov	x2, #0x1                   	// #1
   2be48:	str	xzr, [x19, #8]
   2be4c:	b	2bd90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x34a8>
   2be50:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2be54:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2be58:	ldr	x1, [x1, #3752]
   2be5c:	ldr	x0, [x0, #3808]
   2be60:	cmp	x1, #0x0
   2be64:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   2be68:	b.eq	2be18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3530>  // b.none
   2be6c:	adrp	x22, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2be70:	mov	x1, #0x4010                	// #16400
   2be74:	ldr	x0, [x22, #3920]
   2be78:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   2be7c:	mov	x19, x0
   2be80:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2be84:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2be88:	add	x0, x0, #0xb28
   2be8c:	ldr	x1, [x1, #3816]
   2be90:	stp	x0, xzr, [x19]
   2be94:	ldr	w0, [x1]
   2be98:	sxtw	x0, w0
   2be9c:	cmp	x0, #0x1
   2bea0:	b.ls	2be44 <__sanitizer_get_module_and_offset_for_pc@@Base+0x355c>  // b.plast
   2bea4:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2bea8:	add	x0, x0, #0x6c0
   2beac:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   2beb0:	b	2be44 <__sanitizer_get_module_and_offset_for_pc@@Base+0x355c>
   2beb4:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2beb8:	add	x0, x0, #0x690
   2bebc:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   2bec0:	b	2be18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3530>
   2bec4:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2bec8:	add	x0, x0, #0x6e0
   2becc:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   2bed0:	b	2be44 <__sanitizer_get_module_and_offset_for_pc@@Base+0x355c>
   2bed4:	ldr	x0, [x20, #4056]
   2bed8:	stp	x23, x24, [sp, #32]
   2bedc:	ldr	x23, [x0, #8]
   2bee0:	cbz	x23, 2bf70 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3688>
   2bee4:	mov	x0, x23
   2bee8:	bl	14968 <_ZdaPvRKSt9nothrow_t@@Base+0x2be8>
   2beec:	ldrb	w1, [x23]
   2bef0:	mov	x21, x0
   2bef4:	cbz	w1, 2c064 <__sanitizer_get_module_and_offset_for_pc@@Base+0x377c>
   2bef8:	adrp	x19, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2befc:	add	x19, x19, #0x730
   2bf00:	mov	x1, x19
   2bf04:	mov	x0, x21
   2bf08:	bl	1a560 <__sanitizer_set_report_fd@@Base+0x26e0>
   2bf0c:	cbnz	w0, 2bf7c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3694>
   2bf10:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2bf14:	ldr	x0, [x0, #3816]
   2bf18:	ldr	w0, [x0]
   2bf1c:	sxtw	x0, w0
   2bf20:	cmp	x0, #0x1
   2bf24:	b.hi	2bf5c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3674>  // b.pmore
   2bf28:	ldr	x20, [x22, #3920]
   2bf2c:	mov	x1, #0x4018                	// #16408
   2bf30:	mov	x0, x20
   2bf34:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   2bf38:	mov	x2, x20
   2bf3c:	mov	x1, x23
   2bf40:	mov	x19, x0
   2bf44:	bl	2a258 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1970>
   2bf48:	cbz	x19, 2c05c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3774>
   2bf4c:	mov	x2, #0x1                   	// #1
   2bf50:	ldp	x23, x24, [sp, #32]
   2bf54:	str	xzr, [x19, #8]
   2bf58:	b	2bd90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x34a8>
   2bf5c:	mov	x1, x23
   2bf60:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2bf64:	add	x0, x0, #0x740
   2bf68:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   2bf6c:	b	2bf28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3640>
   2bf70:	adrp	x21, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2bf74:	add	x21, x21, #0x3e8
   2bf78:	b	2bef8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3610>
   2bf7c:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2bf80:	mov	x0, x21
   2bf84:	add	x1, x1, #0x778
   2bf88:	bl	1a560 <__sanitizer_set_report_fd@@Base+0x26e0>
   2bf8c:	cbz	w0, 2c1a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x38bc>
   2bf90:	adrp	x24, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2bf94:	add	x24, x24, #0x7b8
   2bf98:	mov	x0, x21
   2bf9c:	mov	x1, x24
   2bfa0:	bl	1a560 <__sanitizer_set_report_fd@@Base+0x26e0>
   2bfa4:	cbnz	w0, 2c094 <__sanitizer_get_module_and_offset_for_pc@@Base+0x37ac>
   2bfa8:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2bfac:	ldr	x0, [x0, #3816]
   2bfb0:	ldr	w0, [x0]
   2bfb4:	sxtw	x0, w0
   2bfb8:	cmp	x0, #0x1
   2bfbc:	b.ls	2bfd0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x36e8>  // b.plast
   2bfc0:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2bfc4:	mov	x1, x23
   2bfc8:	add	x0, x0, #0x7c8
   2bfcc:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   2bfd0:	ldr	x20, [x22, #3920]
   2bfd4:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2bfd8:	mov	x1, #0x38                  	// #56
   2bfdc:	mov	x0, x20
   2bfe0:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   2bfe4:	ldr	x21, [x21, #4016]
   2bfe8:	mov	x19, x0
   2bfec:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2bff0:	add	x0, x0, #0xaf0
   2bff4:	stp	x0, xzr, [x19]
   2bff8:	ldr	x0, [x21]
   2bffc:	stp	x23, x20, [x19, #16]
   2c000:	str	xzr, [x19, #32]
   2c004:	stp	xzr, xzr, [x19, #40]
   2c008:	cbz	x0, 2c174 <__sanitizer_get_module_and_offset_for_pc@@Base+0x388c>
   2c00c:	sub	x1, x0, #0x1
   2c010:	tst	x1, x0
   2c014:	b.ne	2c180 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3898>  // b.any
   2c018:	add	x20, x0, #0x7f
   2c01c:	neg	x0, x0
   2c020:	and	x20, x20, x0
   2c024:	mov	w2, #0x0                   	// #0
   2c028:	mov	x0, x20
   2c02c:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   2c030:	add	x1, x1, #0xc10
   2c034:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   2c038:	ldr	x1, [x19, #32]
   2c03c:	mov	x23, x0
   2c040:	ldr	x2, [x19, #48]
   2c044:	lsl	x2, x2, #3
   2c048:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   2c04c:	ldp	x0, x1, [x19, #32]
   2c050:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   2c054:	stp	x23, x20, [x19, #32]
   2c058:	b	2bf4c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3664>
   2c05c:	ldp	x23, x24, [sp, #32]
   2c060:	b	2bd88 <__sanitizer_get_module_and_offset_for_pc@@Base+0x34a0>
   2c064:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2c068:	ldr	x0, [x0, #3816]
   2c06c:	ldr	w0, [x0]
   2c070:	sxtw	x0, w0
   2c074:	cmp	x0, #0x1
   2c078:	b.ls	2c05c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3774>  // b.plast
   2c07c:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2c080:	add	x0, x0, #0x700
   2c084:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   2c088:	mov	x2, #0x0                   	// #0
   2c08c:	ldp	x23, x24, [sp, #32]
   2c090:	b	2bd90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x34a8>
   2c094:	cbnz	x23, 2c190 <__sanitizer_get_module_and_offset_for_pc@@Base+0x38a8>
   2c098:	mov	x0, x19
   2c09c:	bl	17a98 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2700>
   2c0a0:	mov	x21, x0
   2c0a4:	cbz	x0, 2c0f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x380c>
   2c0a8:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2c0ac:	ldr	x0, [x0, #3816]
   2c0b0:	ldr	w0, [x0]
   2c0b4:	sxtw	x0, w0
   2c0b8:	cmp	x0, #0x1
   2c0bc:	b.ls	2c0d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x37e8>  // b.plast
   2c0c0:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2c0c4:	mov	x1, x21
   2c0c8:	add	x0, x0, #0x890
   2c0cc:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   2c0d0:	ldr	x20, [x22, #3920]
   2c0d4:	mov	x1, #0x4018                	// #16408
   2c0d8:	mov	x0, x20
   2c0dc:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   2c0e0:	mov	x2, x20
   2c0e4:	mov	x1, x21
   2c0e8:	mov	x19, x0
   2c0ec:	bl	2a258 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1970>
   2c0f0:	b	2bf48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3660>
   2c0f4:	ldr	x20, [x20, #4056]
   2c0f8:	ldrb	w0, [x20, #16]
   2c0fc:	cbz	w0, 2c05c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3774>
   2c100:	mov	x0, x24
   2c104:	bl	17a98 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2700>
   2c108:	mov	x20, x0
   2c10c:	cbz	x0, 2c05c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3774>
   2c110:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2c114:	ldr	x0, [x0, #3816]
   2c118:	ldr	w0, [x0]
   2c11c:	sxtw	x0, w0
   2c120:	cmp	x0, #0x1
   2c124:	b.ls	2c138 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3850>  // b.plast
   2c128:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2c12c:	mov	x1, x20
   2c130:	add	x0, x0, #0x8b8
   2c134:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   2c138:	ldr	x23, [x22, #3920]
   2c13c:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2c140:	mov	x1, #0x38                  	// #56
   2c144:	mov	x0, x23
   2c148:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   2c14c:	ldr	x21, [x21, #4016]
   2c150:	mov	x19, x0
   2c154:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2c158:	add	x0, x0, #0xaf0
   2c15c:	stp	x0, xzr, [x19]
   2c160:	ldr	x0, [x21]
   2c164:	stp	x20, x23, [x19, #16]
   2c168:	str	xzr, [x19, #32]
   2c16c:	stp	xzr, xzr, [x19, #40]
   2c170:	cbnz	x0, 2c00c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3724>
   2c174:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   2c178:	str	x0, [x21]
   2c17c:	b	2c00c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3724>
   2c180:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   2c184:	add	x0, x0, #0xbf8
   2c188:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   2c18c:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   2c190:	mov	x1, x23
   2c194:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2c198:	add	x0, x0, #0x7f8
   2c19c:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   2c1a0:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   2c1a4:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2c1a8:	add	x0, x0, #0x780
   2c1ac:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   2c1b0:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   2c1b4:	nop
   2c1b8:	str	x30, [sp, #-16]!
   2c1bc:	bl	299b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10c8>
   2c1c0:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2c1c4:	mov	x0, #0x0                   	// #0
   2c1c8:	add	x1, x1, #0x8d8
   2c1cc:	bl	62e0 <dlsym@plt>
   2c1d0:	ldr	x30, [sp], #16
   2c1d4:	adrp	x1, 930000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e0>
   2c1d8:	str	x0, [x1, #3344]
   2c1dc:	b	6320 <dlerror@plt>
   2c1e0:	adrp	x3, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2c1e4:	add	x3, x3, #0x470
   2c1e8:	stp	x1, x3, [x2]
   2c1ec:	ldr	x0, [x0, #16424]
   2c1f0:	stp	x0, xzr, [x2, #16]
   2c1f4:	ret
   2c1f8:	mov	w0, #0x0                   	// #0
   2c1fc:	ret
   2c200:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2c204:	ldr	x0, [x0, #3840]
   2c208:	cbz	x0, 2c210 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3928>
   2c20c:	b	63f0 <__sanitizer_symbolize_flush@plt>
   2c210:	ret
   2c214:	nop
   2c218:	str	x30, [sp, #-16]!
   2c21c:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2c220:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2c224:	add	x2, x2, #0x478
   2c228:	add	x0, x0, #0x498
   2c22c:	mov	x4, #0x0                   	// #0
   2c230:	mov	x3, #0x0                   	// #0
   2c234:	mov	w1, #0x62                  	// #98
   2c238:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   2c23c:	nop
   2c240:	str	x30, [sp, #-16]!
   2c244:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2c248:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2c24c:	add	x2, x2, #0x478
   2c250:	add	x0, x0, #0x498
   2c254:	mov	x4, #0x0                   	// #0
   2c258:	mov	x3, #0x0                   	// #0
   2c25c:	mov	w1, #0x5c                  	// #92
   2c260:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   2c264:	nop
   2c268:	stp	x19, x20, [sp, #-48]!
   2c26c:	mov	x19, x2
   2c270:	mov	w3, #0x4000                	// #16384
   2c274:	stp	x21, x22, [sp, #16]
   2c278:	add	x22, x0, #0x10
   2c27c:	mov	x21, x1
   2c280:	ldp	x0, x1, [x19]
   2c284:	mov	x2, x22
   2c288:	str	x30, [sp, #32]
   2c28c:	bl	6300 <__sanitizer_symbolize_data@plt>
   2c290:	mov	w20, w0
   2c294:	tst	w0, #0xff
   2c298:	b.ne	2c2b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x39c8>  // b.any
   2c29c:	mov	w0, w20
   2c2a0:	ldp	x21, x22, [sp, #16]
   2c2a4:	ldr	x30, [sp, #32]
   2c2a8:	ldp	x19, x20, [sp], #48
   2c2ac:	ret
   2c2b0:	mov	x0, x22
   2c2b4:	mov	x1, x19
   2c2b8:	bl	2a488 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ba0>
   2c2bc:	ldr	x1, [x19, #48]
   2c2c0:	ldr	x0, [x19, #8]
   2c2c4:	add	x1, x21, x1
   2c2c8:	ldp	x21, x22, [sp, #16]
   2c2cc:	sub	x1, x1, x0
   2c2d0:	str	x1, [x19, #48]
   2c2d4:	mov	w0, w20
   2c2d8:	ldr	x30, [sp, #32]
   2c2dc:	ldp	x19, x20, [sp], #48
   2c2e0:	ret
   2c2e4:	nop
   2c2e8:	stp	x19, x20, [sp, #-32]!
   2c2ec:	mov	x19, x2
   2c2f0:	mov	w3, #0x4000                	// #16384
   2c2f4:	stp	x21, x30, [sp, #16]
   2c2f8:	add	x21, x0, #0x10
   2c2fc:	mov	x2, x21
   2c300:	ldp	x0, x1, [x19, #16]
   2c304:	bl	6390 <__sanitizer_symbolize_code@plt>
   2c308:	mov	w20, w0
   2c30c:	tst	w0, #0xff
   2c310:	b.ne	2c324 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a3c>  // b.any
   2c314:	mov	w0, w20
   2c318:	ldp	x21, x30, [sp, #16]
   2c31c:	ldp	x19, x20, [sp], #32
   2c320:	ret
   2c324:	mov	x1, x19
   2c328:	mov	x0, x21
   2c32c:	bl	2a310 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a28>
   2c330:	mov	w0, w20
   2c334:	ldp	x21, x30, [sp, #16]
   2c338:	ldp	x19, x20, [sp], #32
   2c33c:	ret
   2c340:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2c344:	stp	x19, x20, [sp, #-32]!
   2c348:	mov	x20, x1
   2c34c:	ldr	x0, [x0, #3696]
   2c350:	str	x30, [sp, #24]
   2c354:	cbz	x0, 2c3c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3ad8>
   2c358:	str	x21, [sp, #16]
   2c35c:	mov	x21, #0x400                 	// #1024
   2c360:	mov	x2, #0x0                   	// #0
   2c364:	mov	x1, #0x0                   	// #0
   2c368:	mov	x0, x21
   2c36c:	bl	121c8 <_ZdaPvRKSt9nothrow_t@@Base+0x448>
   2c370:	mov	x19, x0
   2c374:	mov	w2, w21
   2c378:	mov	x0, x20
   2c37c:	mov	x1, x19
   2c380:	bl	6290 <__sanitizer_symbolize_demangle@plt>
   2c384:	cmp	x21, w0, sxtw
   2c388:	sxtw	x0, w0
   2c38c:	b.cc	2c3a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3abc>  // b.lo, b.ul, b.last
   2c390:	mov	x0, x19
   2c394:	ldr	x21, [sp, #16]
   2c398:	ldr	x30, [sp, #24]
   2c39c:	ldp	x19, x20, [sp], #32
   2c3a0:	ret
   2c3a4:	add	x21, x0, #0x1
   2c3a8:	mov	x1, #0x0                   	// #0
   2c3ac:	mov	x0, x19
   2c3b0:	bl	12770 <_ZdaPvRKSt9nothrow_t@@Base+0x9f0>
   2c3b4:	cmp	x21, #0x20, lsl #12
   2c3b8:	b.ls	2c360 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a78>  // b.plast
   2c3bc:	ldr	x21, [sp, #16]
   2c3c0:	mov	x19, x20
   2c3c4:	mov	x0, x19
   2c3c8:	ldr	x30, [sp, #24]
   2c3cc:	ldp	x19, x20, [sp], #32
   2c3d0:	ret
   2c3d4:	nop
   2c3d8:	stp	x19, x20, [sp, #-32]!
   2c3dc:	mov	x20, x1
   2c3e0:	str	x30, [sp, #16]
   2c3e4:	bl	29840 <__sanitizer_get_module_and_offset_for_pc@@Base+0xf58>
   2c3e8:	mov	w19, w0
   2c3ec:	tst	w0, #0xff
   2c3f0:	b.eq	2c3fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b14>  // b.none
   2c3f4:	ldrb	w0, [x20]
   2c3f8:	cbnz	w0, 2c40c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b24>
   2c3fc:	mov	w0, w19
   2c400:	ldr	x30, [sp, #16]
   2c404:	ldp	x19, x20, [sp], #32
   2c408:	ret
   2c40c:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2c410:	add	x0, x20, #0x1
   2c414:	add	x1, x1, #0x940
   2c418:	bl	1b580 <__sanitizer_set_report_fd@@Base+0x3700>
   2c41c:	cbz	x0, 2c434 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b4c>
   2c420:	strb	wzr, [x0]
   2c424:	mov	w0, w19
   2c428:	ldr	x30, [sp, #16]
   2c42c:	ldp	x19, x20, [sp], #32
   2c430:	ret
   2c434:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2c438:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2c43c:	add	x2, x2, #0x4f8
   2c440:	add	x0, x0, #0x510
   2c444:	mov	x4, #0x0                   	// #0
   2c448:	mov	x3, #0x0                   	// #0
   2c44c:	mov	w1, #0xeb                  	// #235
   2c450:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   2c454:	nop
   2c458:	stp	x19, x20, [sp, #-144]!
   2c45c:	mov	x19, x0
   2c460:	mov	x20, #0x0                   	// #0
   2c464:	ldr	x0, [x0, #48]
   2c468:	stp	x21, x22, [sp, #16]
   2c46c:	mov	x22, x2
   2c470:	stp	x23, x24, [sp, #32]
   2c474:	stp	x25, x30, [sp, #48]
   2c478:	str	xzr, [sp, #72]
   2c47c:	ldp	x21, x23, [x2, #16]
   2c480:	cbnz	x0, 2c498 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3bb0>
   2c484:	b	2c544 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c5c>
   2c488:	ldr	x0, [x19, #48]
   2c48c:	add	x20, x20, #0x1
   2c490:	cmp	x0, x20
   2c494:	b.ls	2c53c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c54>  // b.plast
   2c498:	ldr	x1, [x19, #32]
   2c49c:	mov	x0, x21
   2c4a0:	lsl	x24, x20, #3
   2c4a4:	ldr	x1, [x1, x20, lsl #3]
   2c4a8:	ldr	x1, [x1, #16424]
   2c4ac:	bl	1a560 <__sanitizer_set_report_fd@@Base+0x26e0>
   2c4b0:	cbnz	w0, 2c488 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3ba0>
   2c4b4:	ldr	x4, [x19, #48]
   2c4b8:	ldr	x0, [x19, #32]
   2c4bc:	cmp	x4, x20
   2c4c0:	b.ls	2c5d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3cf0>  // b.plast
   2c4c4:	ldr	x1, [x0, x24]
   2c4c8:	str	x1, [sp, #72]
   2c4cc:	cbz	x1, 2c544 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c5c>
   2c4d0:	ldr	x1, [x1, #16424]
   2c4d4:	mov	x0, x21
   2c4d8:	bl	1a560 <__sanitizer_set_report_fd@@Base+0x26e0>
   2c4dc:	sxtw	x4, w0
   2c4e0:	cbnz	w0, 2c5bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3cd4>
   2c4e4:	add	x19, sp, #0x50
   2c4e8:	mov	x3, x23
   2c4ec:	mov	x4, #0xffffffffffffffff    	// #-1
   2c4f0:	mov	x1, #0x40                  	// #64
   2c4f4:	mov	x0, x19
   2c4f8:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2c4fc:	add	x2, x2, #0x930
   2c500:	bl	1f928 <__sanitizer_on_print@@Base+0x8>
   2c504:	ldr	x0, [sp, #72]
   2c508:	mov	x1, x19
   2c50c:	bl	2a630 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1d48>
   2c510:	mov	w1, #0x0                   	// #0
   2c514:	cbz	x0, 2c524 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c3c>
   2c518:	mov	x1, x22
   2c51c:	bl	2a310 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a28>
   2c520:	mov	w1, #0x1                   	// #1
   2c524:	mov	w0, w1
   2c528:	ldp	x21, x22, [sp, #16]
   2c52c:	ldp	x23, x24, [sp, #32]
   2c530:	ldp	x25, x30, [sp, #48]
   2c534:	ldp	x19, x20, [sp], #144
   2c538:	ret
   2c53c:	ldr	x1, [sp, #72]
   2c540:	cbnz	x1, 2c4d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3be8>
   2c544:	ldr	x0, [x19, #24]
   2c548:	mov	x1, #0x4030                	// #16432
   2c54c:	add	x24, x19, #0x20
   2c550:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   2c554:	mov	x20, x0
   2c558:	ldr	x1, [x19, #16]
   2c55c:	mov	w2, #0x0                   	// #0
   2c560:	bl	2a5b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1cc8>
   2c564:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2c568:	add	x0, x0, #0xac0
   2c56c:	str	x0, [x20]
   2c570:	mov	x0, x21
   2c574:	bl	1a360 <__sanitizer_set_report_fd@@Base+0x24e0>
   2c578:	str	x20, [sp, #72]
   2c57c:	ldr	x4, [x19, #40]
   2c580:	ldr	x3, [x24, #16]
   2c584:	str	x0, [x20, #16424]
   2c588:	lsr	x4, x4, #3
   2c58c:	cmp	x3, x4
   2c590:	b.hi	2c6a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3dc0>  // b.pmore
   2c594:	add	x20, x3, #0x1
   2c598:	b.eq	2c5f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d0c>  // b.none
   2c59c:	ldr	x25, [x19, #32]
   2c5a0:	str	x20, [x24, #16]
   2c5a4:	add	x1, sp, #0x48
   2c5a8:	add	x0, x25, x3, lsl #3
   2c5ac:	mov	x2, #0x8                   	// #8
   2c5b0:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   2c5b4:	ldr	x1, [sp, #72]
   2c5b8:	b	2c4d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3be8>
   2c5bc:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2c5c0:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2c5c4:	add	x2, x2, #0x8e8
   2c5c8:	add	x0, x0, #0x510
   2c5cc:	mov	x3, #0x0                   	// #0
   2c5d0:	mov	w1, #0x129                 	// #297
   2c5d4:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   2c5d8:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   2c5dc:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   2c5e0:	mov	x3, x20
   2c5e4:	add	x2, x2, #0x118
   2c5e8:	add	x0, x0, #0xb98
   2c5ec:	mov	w1, #0x1c5                 	// #453
   2c5f0:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   2c5f4:	tst	x3, x20
   2c5f8:	b.eq	2c634 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d4c>  // b.none
   2c5fc:	clz	x2, x20
   2c600:	mov	w0, #0x3f                  	// #63
   2c604:	sub	w0, w0, w2
   2c608:	mov	x2, #0x1                   	// #1
   2c60c:	add	w4, w0, #0x1
   2c610:	lsl	x4, x2, x4
   2c614:	cmp	x4, x20
   2c618:	b.ls	2c6f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3e0c>  // b.plast
   2c61c:	lsl	x0, x2, x0
   2c620:	cmp	x0, x20
   2c624:	b.cs	2c710 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3e28>  // b.hs, b.nlast
   2c628:	cmp	x3, x4
   2c62c:	b.hi	2c6cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3de4>  // b.pmore
   2c630:	mov	x20, x4
   2c634:	adrp	x25, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2c638:	lsl	x20, x20, #3
   2c63c:	ldr	x25, [x25, #4016]
   2c640:	ldr	x0, [x25]
   2c644:	cbz	x0, 2c6c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3dd8>
   2c648:	sub	x1, x0, #0x1
   2c64c:	tst	x0, x1
   2c650:	b.ne	2c6e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3dfc>  // b.any
   2c654:	add	x20, x20, x1
   2c658:	neg	x0, x0
   2c65c:	and	x20, x20, x0
   2c660:	mov	w2, #0x0                   	// #0
   2c664:	mov	x0, x20
   2c668:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   2c66c:	add	x1, x1, #0xc10
   2c670:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   2c674:	ldr	x2, [x24, #16]
   2c678:	mov	x25, x0
   2c67c:	ldr	x1, [x19, #32]
   2c680:	lsl	x2, x2, #3
   2c684:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   2c688:	ldr	x1, [x24, #8]
   2c68c:	ldr	x0, [x19, #32]
   2c690:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   2c694:	ldr	x3, [x24, #16]
   2c698:	str	x25, [x19, #32]
   2c69c:	str	x20, [x24, #8]
   2c6a0:	add	x20, x3, #0x1
   2c6a4:	b	2c5a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3cb8>
   2c6a8:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   2c6ac:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   2c6b0:	add	x2, x2, #0x8c8
   2c6b4:	add	x0, x0, #0xb98
   2c6b8:	mov	w1, #0x1cd                 	// #461
   2c6bc:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   2c6c0:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   2c6c4:	str	x0, [x25]
   2c6c8:	b	2c648 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d60>
   2c6cc:	adrp	x2, 3a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x6398>
   2c6d0:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   2c6d4:	add	x2, x2, #0x8f8
   2c6d8:	add	x0, x0, #0xb98
   2c6dc:	mov	w1, #0x20c                 	// #524
   2c6e0:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   2c6e4:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   2c6e8:	add	x0, x0, #0xbf8
   2c6ec:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   2c6f0:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   2c6f4:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   2c6f8:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   2c6fc:	mov	x3, x20
   2c700:	add	x2, x2, #0x680
   2c704:	add	x0, x0, #0xb98
   2c708:	mov	w1, #0x18a                 	// #394
   2c70c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   2c710:	mov	x4, x0
   2c714:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   2c718:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   2c71c:	mov	x3, x20
   2c720:	add	x2, x2, #0x708
   2c724:	add	x0, x0, #0xb98
   2c728:	mov	w1, #0x18b                 	// #395
   2c72c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   2c730:	stp	x19, x20, [sp, #-96]!
   2c734:	stp	x23, x24, [sp, #32]
   2c738:	adrp	x24, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2c73c:	mov	x23, x0
   2c740:	ldr	x19, [x24, #4016]
   2c744:	stp	x21, x22, [sp, #16]
   2c748:	mov	x22, x1
   2c74c:	stp	x25, x30, [sp, #48]
   2c750:	mov	x21, x2
   2c754:	ldr	x3, [x19]
   2c758:	str	xzr, [sp, #64]
   2c75c:	stp	xzr, xzr, [sp, #72]
   2c760:	cbz	x3, 2c858 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f70>
   2c764:	sub	x0, x3, #0x1
   2c768:	tst	x0, x3
   2c76c:	b.ne	2c8c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3fd8>  // b.any
   2c770:	add	x20, x3, #0x3ff
   2c774:	neg	x3, x3
   2c778:	and	x20, x20, x3
   2c77c:	mov	w2, #0x0                   	// #0
   2c780:	mov	x0, x20
   2c784:	adrp	x25, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   2c788:	add	x1, x25, #0xc10
   2c78c:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   2c790:	ldr	x1, [sp, #64]
   2c794:	mov	x19, x0
   2c798:	ldr	x2, [sp, #80]
   2c79c:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   2c7a0:	ldp	x0, x1, [sp, #64]
   2c7a4:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   2c7a8:	stp	x19, x20, [sp, #64]
   2c7ac:	ldr	x2, [sp, #80]
   2c7b0:	cmp	x2, #0x3ff
   2c7b4:	b.hi	2c7d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3ef0>  // b.pmore
   2c7b8:	cmp	x20, #0x3ff
   2c7bc:	b.ls	2c868 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f80>  // b.plast
   2c7c0:	mov	x3, #0x400                 	// #1024
   2c7c4:	add	x0, x19, x2
   2c7c8:	mov	w1, #0x0                   	// #0
   2c7cc:	sub	x2, x3, x2
   2c7d0:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   2c7d4:	ldr	x19, [sp, #64]
   2c7d8:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   2c7dc:	add	x20, sp, #0x40
   2c7e0:	mov	x2, x23
   2c7e4:	ldr	q0, [x0, #1696]
   2c7e8:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2c7ec:	mov	x0, x20
   2c7f0:	add	x1, x1, #0xbf8
   2c7f4:	str	q0, [sp, #80]
   2c7f8:	strb	wzr, [x19]
   2c7fc:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   2c800:	adrp	x4, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2c804:	mov	x3, x22
   2c808:	mov	w2, #0x0                   	// #0
   2c80c:	mov	x0, x20
   2c810:	ldr	x4, [x4, #4056]
   2c814:	adrp	x6, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2c818:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2c81c:	add	x6, x6, #0x3e8
   2c820:	add	x1, x1, #0x950
   2c824:	ldr	x5, [x4, #24]
   2c828:	ldrb	w4, [x4, #189]
   2c82c:	bl	28d10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x428>
   2c830:	ldr	x0, [sp, #64]
   2c834:	mov	x1, x21
   2c838:	bl	151d0 <__sanitizer_report_error_summary@@Base+0x10>
   2c83c:	ldp	x0, x1, [sp, #64]
   2c840:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   2c844:	ldp	x21, x22, [sp, #16]
   2c848:	ldp	x23, x24, [sp, #32]
   2c84c:	ldp	x25, x30, [sp, #48]
   2c850:	ldp	x19, x20, [sp], #96
   2c854:	ret
   2c858:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   2c85c:	mov	x3, x0
   2c860:	str	x0, [x19]
   2c864:	b	2c764 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3e7c>
   2c868:	ldr	x24, [x24, #4016]
   2c86c:	ldr	x0, [x24]
   2c870:	cbz	x0, 2c8d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3fe8>
   2c874:	sub	x1, x0, #0x1
   2c878:	tst	x1, x0
   2c87c:	b.ne	2c8c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3fd8>  // b.any
   2c880:	add	x20, x0, #0x3ff
   2c884:	neg	x0, x0
   2c888:	and	x20, x20, x0
   2c88c:	add	x1, x25, #0xc10
   2c890:	mov	w2, #0x0                   	// #0
   2c894:	mov	x0, x20
   2c898:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   2c89c:	mov	x19, x0
   2c8a0:	ldr	x1, [sp, #64]
   2c8a4:	ldr	x2, [sp, #80]
   2c8a8:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   2c8ac:	ldp	x0, x1, [sp, #64]
   2c8b0:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   2c8b4:	stp	x19, x20, [sp, #64]
   2c8b8:	ldr	x2, [sp, #80]
   2c8bc:	b	2c7c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3ed8>
   2c8c0:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   2c8c4:	add	x0, x0, #0xbf8
   2c8c8:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   2c8cc:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   2c8d0:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   2c8d4:	str	x0, [x24]
   2c8d8:	b	2c874 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f8c>
   2c8dc:	nop
   2c8e0:	adrp	x3, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2c8e4:	ldr	x3, [x3, #4056]
   2c8e8:	ldrb	w3, [x3, #60]
   2c8ec:	cbnz	w3, 2c8f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x400c>
   2c8f0:	ret
   2c8f4:	b	2c730 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3e48>
   2c8f8:	stp	x19, x20, [sp, #-32]!
   2c8fc:	mov	x19, x0
   2c900:	mov	w1, #0x1                   	// #1
   2c904:	ldr	x20, [x0]
   2c908:	str	x30, [sp, #16]
   2c90c:	ldxrb	w0, [x20]
   2c910:	stxrb	w2, w1, [x20]
   2c914:	cbnz	w2, 2c90c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4024>
   2c918:	dmb	ish
   2c91c:	tst	w0, #0xff
   2c920:	b.eq	2c92c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4044>  // b.none
   2c924:	mov	x0, x20
   2c928:	bl	85d8 <__sanitizer_print_stack_trace@@Base+0x300>
   2c92c:	mov	x0, x19
   2c930:	bl	172b8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1f20>
   2c934:	ldr	w0, [x19, #8]
   2c938:	bl	24938 <__sanitizer_sandbox_on_notify@@Base+0x12f0>
   2c93c:	dmb	ish
   2c940:	strb	wzr, [x20]
   2c944:	ldr	x30, [sp, #16]
   2c948:	ldp	x19, x20, [sp], #32
   2c94c:	ret
   2c950:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2c954:	stp	x19, x20, [sp, #-32]!
   2c958:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2c95c:	ldr	x0, [x0, #4056]
   2c960:	add	x1, x1, #0x958
   2c964:	ldr	x19, [x0, #112]
   2c968:	str	x30, [sp, #16]
   2c96c:	mov	x0, x19
   2c970:	bl	1a560 <__sanitizer_set_report_fd@@Base+0x26e0>
   2c974:	mov	w1, #0x1                   	// #1
   2c978:	cbnz	w0, 2c98c <__sanitizer_get_module_and_offset_for_pc@@Base+0x40a4>
   2c97c:	mov	w0, w1
   2c980:	ldr	x30, [sp, #16]
   2c984:	ldp	x19, x20, [sp], #32
   2c988:	ret
   2c98c:	mov	x0, x19
   2c990:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   2c994:	add	x1, x1, #0xcd8
   2c998:	bl	1a560 <__sanitizer_set_report_fd@@Base+0x26e0>
   2c99c:	mov	w1, #0x0                   	// #0
   2c9a0:	cbnz	w0, 2c97c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4094>
   2c9a4:	adrp	x19, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2c9a8:	mov	w1, #0x1                   	// #1
   2c9ac:	ldr	x0, [x19, #3928]
   2c9b0:	ldr	x20, [x0]
   2c9b4:	ldxrb	w0, [x20]
   2c9b8:	stxrb	w2, w1, [x20]
   2c9bc:	cbnz	w2, 2c9b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x40cc>
   2c9c0:	dmb	ish
   2c9c4:	tst	w0, #0xff
   2c9c8:	b.eq	2c9d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x40ec>  // b.none
   2c9cc:	mov	x0, x20
   2c9d0:	bl	85d8 <__sanitizer_print_stack_trace@@Base+0x300>
   2c9d4:	ldr	x19, [x19, #3928]
   2c9d8:	mov	x0, x19
   2c9dc:	bl	172b8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1f20>
   2c9e0:	ldr	w0, [x19, #8]
   2c9e4:	bl	24938 <__sanitizer_sandbox_on_notify@@Base+0x12f0>
   2c9e8:	dmb	ish
   2c9ec:	and	w1, w0, #0xff
   2c9f0:	strb	wzr, [x20]
   2c9f4:	mov	w0, w1
   2c9f8:	ldr	x30, [sp, #16]
   2c9fc:	ldp	x19, x20, [sp], #32
   2ca00:	ret
   2ca04:	nop
   2ca08:	stp	x19, x20, [sp, #-48]!
   2ca0c:	adrp	x19, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2ca10:	ldr	x19, [x19, #4056]
   2ca14:	stp	x21, x22, [sp, #16]
   2ca18:	mov	x21, x2
   2ca1c:	ldrb	w2, [x19, #60]
   2ca20:	str	x30, [sp, #32]
   2ca24:	cbz	w2, 2ca90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x41a8>
   2ca28:	ldr	w2, [x1, #8]
   2ca2c:	cbz	w2, 2ca7c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4194>
   2ca30:	mov	x20, x0
   2ca34:	ldr	x0, [x1]
   2ca38:	ldr	x22, [x0]
   2ca3c:	bl	299b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10c8>
   2ca40:	sub	x22, x22, #0x4
   2ca44:	mov	x1, x22
   2ca48:	bl	2ab10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2228>
   2ca4c:	ldrb	w1, [x19, #60]
   2ca50:	mov	x19, x0
   2ca54:	cbz	w1, 2ca68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4180>
   2ca58:	mov	x2, x21
   2ca5c:	mov	x0, x20
   2ca60:	add	x1, x19, #0x8
   2ca64:	bl	2c730 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3e48>
   2ca68:	mov	x0, x19
   2ca6c:	ldp	x21, x22, [sp, #16]
   2ca70:	ldr	x30, [sp, #32]
   2ca74:	ldp	x19, x20, [sp], #48
   2ca78:	b	29220 <__sanitizer_get_module_and_offset_for_pc@@Base+0x938>
   2ca7c:	ldp	x21, x22, [sp, #16]
   2ca80:	mov	x1, #0x0                   	// #0
   2ca84:	ldr	x30, [sp, #32]
   2ca88:	ldp	x19, x20, [sp], #48
   2ca8c:	b	151d0 <__sanitizer_report_error_summary@@Base+0x10>
   2ca90:	ldp	x21, x22, [sp, #16]
   2ca94:	ldr	x30, [sp, #32]
   2ca98:	ldp	x19, x20, [sp], #48
   2ca9c:	ret
   2caa0:	and	w0, w0, #0x6
   2caa4:	cmp	w0, #0x6
   2caa8:	b.eq	2cab0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x41c8>  // b.none
   2caac:	ret
   2cab0:	stp	x29, x30, [sp, #-96]!
   2cab4:	mov	x29, sp
   2cab8:	stp	x19, x20, [sp, #16]
   2cabc:	mov	x20, x30
   2cac0:	stp	x21, x22, [sp, #32]
   2cac4:	adrp	x22, 930000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e0>
   2cac8:	add	x19, x22, #0xd18
   2cacc:	stp	x23, x24, [sp, #48]
   2cad0:	str	x25, [sp, #64]
   2cad4:	bl	24560 <__sanitizer_sandbox_on_notify@@Base+0xf18>
   2cad8:	mov	x21, x0
   2cadc:	ldxr	x1, [x19]
   2cae0:	cbnz	x1, 2caec <__sanitizer_get_module_and_offset_for_pc@@Base+0x4204>
   2cae4:	stlxr	w0, x21, [x19]
   2cae8:	cbnz	w0, 2cadc <__sanitizer_get_module_and_offset_for_pc@@Base+0x41f4>
   2caec:	dmb	ish
   2caf0:	cbz	x1, 2cb0c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4224>
   2caf4:	cmp	x21, x1
   2caf8:	b.eq	2cdc4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x44dc>  // b.none
   2cafc:	bl	1c390 <__sanitizer_set_report_fd@@Base+0x4510>
   2cb00:	ldxr	x1, [x19]
   2cb04:	cbz	x1, 2cae4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x41fc>
   2cb08:	b	2caec <__sanitizer_get_module_and_offset_for_pc@@Base+0x4204>
   2cb0c:	add	x0, x19, #0x8
   2cb10:	mov	w2, #0x1                   	// #1
   2cb14:	ldxrb	w1, [x0]
   2cb18:	stxrb	w3, w2, [x0]
   2cb1c:	cbnz	w3, 2cb14 <__sanitizer_get_module_and_offset_for_pc@@Base+0x422c>
   2cb20:	dmb	ish
   2cb24:	tst	w1, #0xff
   2cb28:	b.eq	2cb30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4248>  // b.none
   2cb2c:	bl	85d8 <__sanitizer_print_stack_trace@@Base+0x300>
   2cb30:	adrp	x23, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2cb34:	bl	2c950 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4068>
   2cb38:	and	w24, w0, #0xff
   2cb3c:	ldr	x19, [x23, #4016]
   2cb40:	ldr	x0, [x19]
   2cb44:	cbz	x0, 2cd2c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4444>
   2cb48:	sub	x1, x0, #0x1
   2cb4c:	tst	x1, x0
   2cb50:	b.ne	2cda8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x44c0>  // b.any
   2cb54:	add	x21, x0, #0x817
   2cb58:	neg	x0, x0
   2cb5c:	and	x21, x21, x0
   2cb60:	mov	w2, #0x0                   	// #0
   2cb64:	mov	x0, x21
   2cb68:	adrp	x25, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   2cb6c:	add	x1, x25, #0xc10
   2cb70:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   2cb74:	mov	x2, #0x0                   	// #0
   2cb78:	mov	x1, #0x0                   	// #0
   2cb7c:	mov	x19, x0
   2cb80:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   2cb84:	mov	x1, #0x0                   	// #0
   2cb88:	mov	x0, #0x0                   	// #0
   2cb8c:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   2cb90:	cmp	x21, #0x817
   2cb94:	b.ls	2cd4c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4464>  // b.plast
   2cb98:	adrp	x23, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2cb9c:	mov	w1, #0x0                   	// #0
   2cba0:	mov	x0, x19
   2cba4:	mov	x2, #0x818                 	// #2072
   2cba8:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   2cbac:	str	xzr, [x19, #2064]
   2cbb0:	ldr	x1, [x23, #4056]
   2cbb4:	add	x0, x19, #0x10
   2cbb8:	str	x0, [x19]
   2cbbc:	stp	xzr, xzr, [x29, #80]
   2cbc0:	ldrb	w0, [x1, #33]
   2cbc4:	str	xzr, [x19, #8]
   2cbc8:	cbz	w0, 2cccc <__sanitizer_get_module_and_offset_for_pc@@Base+0x43e4>
   2cbcc:	add	x2, x29, #0x58
   2cbd0:	add	x1, x29, #0x50
   2cbd4:	mov	w0, #0x0                   	// #0
   2cbd8:	bl	23a98 <__sanitizer_sandbox_on_notify@@Base+0x450>
   2cbdc:	ldp	x5, x6, [x29, #80]
   2cbe0:	mov	x2, x20
   2cbe4:	mov	x3, x29
   2cbe8:	mov	x0, x19
   2cbec:	mov	w7, #0x1                   	// #1
   2cbf0:	mov	x4, #0x0                   	// #0
   2cbf4:	mov	w1, #0x100                 	// #256
   2cbf8:	bl	283c0 <__sanitizer_cov_dump@@Base+0x17a0>
   2cbfc:	cbz	w24, 2ccf4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x440c>
   2cc00:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   2cc04:	adrp	x24, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   2cc08:	add	x1, x1, #0x718
   2cc0c:	add	x0, x24, #0xcb8
   2cc10:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   2cc14:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2cc18:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2cc1c:	add	x0, x0, #0x970
   2cc20:	ldr	x1, [x1, #4024]
   2cc24:	ldr	x1, [x1]
   2cc28:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   2cc2c:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   2cc30:	add	x1, x1, #0x180
   2cc34:	add	x0, x24, #0xcb8
   2cc38:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   2cc3c:	mov	x0, x19
   2cc40:	bl	27f58 <__sanitizer_cov_dump@@Base+0x1338>
   2cc44:	ldr	x23, [x23, #4056]
   2cc48:	ldrb	w0, [x23, #60]
   2cc4c:	cbz	w0, 2cc98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x43b0>
   2cc50:	ldr	w0, [x19, #8]
   2cc54:	cbz	w0, 2cd38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4450>
   2cc58:	ldr	x0, [x19]
   2cc5c:	ldr	x20, [x0]
   2cc60:	bl	299b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10c8>
   2cc64:	sub	x20, x20, #0x4
   2cc68:	mov	x1, x20
   2cc6c:	bl	2ab10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2228>
   2cc70:	ldrb	w1, [x23, #60]
   2cc74:	mov	x20, x0
   2cc78:	cbz	w1, 2cc90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x43a8>
   2cc7c:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2cc80:	add	x1, x20, #0x8
   2cc84:	add	x0, x0, #0x960
   2cc88:	mov	x2, #0x0                   	// #0
   2cc8c:	bl	2c730 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3e48>
   2cc90:	mov	x0, x20
   2cc94:	bl	29220 <__sanitizer_get_module_and_offset_for_pc@@Base+0x938>
   2cc98:	mov	x1, x21
   2cc9c:	mov	x0, x19
   2cca0:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   2cca4:	dmb	ish
   2cca8:	add	x0, x22, #0xd18
   2ccac:	strb	wzr, [x0, #8]
   2ccb0:	str	xzr, [x22, #3352]
   2ccb4:	ldp	x19, x20, [sp, #16]
   2ccb8:	ldp	x21, x22, [sp, #32]
   2ccbc:	ldp	x23, x24, [sp, #48]
   2ccc0:	ldr	x25, [sp, #64]
   2ccc4:	ldp	x29, x30, [sp], #96
   2ccc8:	ret
   2cccc:	mov	x2, x20
   2ccd0:	mov	x0, x19
   2ccd4:	mov	w7, #0x0                   	// #0
   2ccd8:	mov	x6, #0x0                   	// #0
   2ccdc:	mov	x5, #0x0                   	// #0
   2cce0:	mov	x4, #0x0                   	// #0
   2cce4:	mov	x3, #0x0                   	// #0
   2cce8:	mov	w1, #0x100                 	// #256
   2ccec:	bl	283c0 <__sanitizer_cov_dump@@Base+0x17a0>
   2ccf0:	cbnz	w24, 2cc00 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4318>
   2ccf4:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2ccf8:	add	x20, x1, #0x3e8
   2ccfc:	mov	x1, x20
   2cd00:	adrp	x24, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   2cd04:	add	x0, x24, #0xcb8
   2cd08:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   2cd0c:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2cd10:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2cd14:	add	x0, x0, #0x970
   2cd18:	ldr	x1, [x1, #4024]
   2cd1c:	ldr	x1, [x1]
   2cd20:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   2cd24:	mov	x1, x20
   2cd28:	b	2cc34 <__sanitizer_get_module_and_offset_for_pc@@Base+0x434c>
   2cd2c:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   2cd30:	str	x0, [x19]
   2cd34:	b	2cb48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4260>
   2cd38:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2cd3c:	mov	x1, #0x0                   	// #0
   2cd40:	add	x0, x0, #0x960
   2cd44:	bl	151d0 <__sanitizer_report_error_summary@@Base+0x10>
   2cd48:	b	2cc98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x43b0>
   2cd4c:	ldr	x23, [x23, #4016]
   2cd50:	ldr	x0, [x23]
   2cd54:	cbz	x0, 2cdb8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x44d0>
   2cd58:	sub	x1, x0, #0x1
   2cd5c:	tst	x1, x0
   2cd60:	b.ne	2cda8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x44c0>  // b.any
   2cd64:	add	x23, x0, #0x817
   2cd68:	neg	x0, x0
   2cd6c:	and	x23, x23, x0
   2cd70:	add	x1, x25, #0xc10
   2cd74:	mov	x0, x23
   2cd78:	mov	w2, #0x0                   	// #0
   2cd7c:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   2cd80:	mov	x25, x0
   2cd84:	mov	x2, #0x0                   	// #0
   2cd88:	mov	x1, x19
   2cd8c:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   2cd90:	mov	x1, x21
   2cd94:	mov	x0, x19
   2cd98:	mov	x21, x23
   2cd9c:	mov	x19, x25
   2cda0:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   2cda4:	b	2cb98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x42b0>
   2cda8:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   2cdac:	add	x0, x0, #0xbf8
   2cdb0:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   2cdb4:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   2cdb8:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   2cdbc:	str	x0, [x23]
   2cdc0:	b	2cd58 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4470>
   2cdc4:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2cdc8:	ldr	x0, [x0, #4024]
   2cdcc:	ldr	x19, [x0]
   2cdd0:	mov	x0, x19
   2cdd4:	bl	1a690 <__sanitizer_set_report_fd@@Base+0x2810>
   2cdd8:	mov	x1, x0
   2cddc:	mov	x0, x19
   2cde0:	bl	17278 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ee0>
   2cde4:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2cde8:	mov	x1, #0x2b                  	// #43
   2cdec:	add	x0, x0, #0xc50
   2cdf0:	bl	17278 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ee0>
   2cdf4:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2cdf8:	ldr	x0, [x0, #4056]
   2cdfc:	ldr	w0, [x0, #224]
   2ce00:	bl	1c3a0 <__sanitizer_set_report_fd@@Base+0x4520>
   2ce04:	nop
   2ce08:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2ce0c:	stp	x19, x30, [sp, #-16]!
   2ce10:	ldr	x0, [x0, #4024]
   2ce14:	ldr	x19, [x0]
   2ce18:	mov	x0, x19
   2ce1c:	bl	1a690 <__sanitizer_set_report_fd@@Base+0x2810>
   2ce20:	mov	x1, x0
   2ce24:	mov	x0, x19
   2ce28:	bl	17278 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ee0>
   2ce2c:	ldp	x19, x30, [sp], #16
   2ce30:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2ce34:	add	x0, x0, #0xc50
   2ce38:	mov	x1, #0xe                   	// #14
   2ce3c:	add	x0, x0, #0x30
   2ce40:	b	17278 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ee0>
   2ce44:	nop
   2ce48:	stp	x19, x20, [sp, #-272]!
   2ce4c:	mov	x19, x0
   2ce50:	stp	x21, x22, [sp, #16]
   2ce54:	mov	w21, w1
   2ce58:	mov	x22, x2
   2ce5c:	stp	x23, x24, [sp, #32]
   2ce60:	mov	x23, x3
   2ce64:	stp	x25, x26, [sp, #48]
   2ce68:	stp	x27, x28, [sp, #64]
   2ce6c:	str	x30, [sp, #80]
   2ce70:	bl	24ac0 <__sanitizer_sandbox_on_notify@@Base+0x1478>
   2ce74:	tst	w0, #0xff
   2ce78:	b.eq	2d004 <__sanitizer_get_module_and_offset_for_pc@@Base+0x471c>  // b.none
   2ce7c:	adrp	x20, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2ce80:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2ce84:	add	x1, x1, #0x958
   2ce88:	ldr	x0, [x20, #4056]
   2ce8c:	ldr	x24, [x0, #112]
   2ce90:	mov	x0, x24
   2ce94:	bl	1a560 <__sanitizer_set_report_fd@@Base+0x26e0>
   2ce98:	cbnz	w0, 2d460 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b78>
   2ce9c:	adrp	x24, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   2cea0:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   2cea4:	add	x0, x24, #0xcb8
   2cea8:	add	x1, x1, #0x718
   2ceac:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   2ceb0:	adrp	x26, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2ceb4:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2ceb8:	add	x2, x26, #0xc50
   2cebc:	ldp	x3, x4, [x19, #16]
   2cec0:	mov	w7, w21
   2cec4:	ldr	x0, [x0, #4024]
   2cec8:	add	x2, x2, #0x40
   2cecc:	ldp	x6, x5, [x19, #32]
   2ced0:	adrp	x25, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2ced4:	ldr	x1, [x0]
   2ced8:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2cedc:	add	x0, x0, #0x9a8
   2cee0:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   2cee4:	add	x0, x24, #0xcb8
   2cee8:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   2ceec:	add	x1, x1, #0x180
   2cef0:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   2cef4:	ldr	x21, [x25, #4016]
   2cef8:	ldr	x0, [x21]
   2cefc:	cbz	x0, 2d4d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4bf0>
   2cf00:	sub	x1, x0, #0x1
   2cf04:	tst	x1, x0
   2cf08:	b.ne	2d5a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4cc0>  // b.any
   2cf0c:	add	x24, x0, #0x817
   2cf10:	neg	x0, x0
   2cf14:	and	x24, x24, x0
   2cf18:	mov	w2, #0x0                   	// #0
   2cf1c:	mov	x0, x24
   2cf20:	adrp	x28, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   2cf24:	add	x1, x28, #0xc10
   2cf28:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   2cf2c:	mov	x2, #0x0                   	// #0
   2cf30:	mov	x1, #0x0                   	// #0
   2cf34:	mov	x21, x0
   2cf38:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   2cf3c:	mov	x1, #0x0                   	// #0
   2cf40:	mov	x0, #0x0                   	// #0
   2cf44:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   2cf48:	cmp	x24, #0x817
   2cf4c:	b.ls	2d6c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4dd8>  // b.plast
   2cf50:	mov	x2, #0x818                 	// #2072
   2cf54:	mov	w1, #0x0                   	// #0
   2cf58:	mov	x0, x21
   2cf5c:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   2cf60:	mov	x1, x23
   2cf64:	mov	x2, x21
   2cf68:	add	x0, x21, #0x10
   2cf6c:	str	x0, [x21]
   2cf70:	str	xzr, [x21, #8]
   2cf74:	mov	x0, x19
   2cf78:	str	xzr, [x21, #2064]
   2cf7c:	blr	x22
   2cf80:	mov	x0, x21
   2cf84:	bl	27f58 <__sanitizer_cov_dump@@Base+0x1338>
   2cf88:	ldr	x20, [x20, #4056]
   2cf8c:	ldrb	w0, [x20, #60]
   2cf90:	cbz	w0, 2cfdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x46f4>
   2cf94:	ldr	w0, [x21, #8]
   2cf98:	cbz	w0, 2d518 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c30>
   2cf9c:	ldr	x0, [x21]
   2cfa0:	ldr	x19, [x0]
   2cfa4:	bl	299b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10c8>
   2cfa8:	sub	x19, x19, #0x4
   2cfac:	mov	x1, x19
   2cfb0:	bl	2ab10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2228>
   2cfb4:	ldrb	w1, [x20, #60]
   2cfb8:	mov	x19, x0
   2cfbc:	cbz	w1, 2cfd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x46ec>
   2cfc0:	add	x0, x26, #0xc50
   2cfc4:	add	x1, x19, #0x8
   2cfc8:	add	x0, x0, #0x40
   2cfcc:	mov	x2, #0x0                   	// #0
   2cfd0:	bl	2c730 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3e48>
   2cfd4:	mov	x0, x19
   2cfd8:	bl	29220 <__sanitizer_get_module_and_offset_for_pc@@Base+0x938>
   2cfdc:	mov	x1, x24
   2cfe0:	mov	x0, x21
   2cfe4:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   2cfe8:	ldp	x21, x22, [sp, #16]
   2cfec:	ldp	x23, x24, [sp, #32]
   2cff0:	ldp	x25, x26, [sp, #48]
   2cff4:	ldp	x27, x28, [sp, #64]
   2cff8:	ldr	x30, [sp, #80]
   2cffc:	ldp	x19, x20, [sp], #272
   2d000:	ret
   2d004:	bl	2c950 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4068>
   2d008:	ands	w20, w0, #0xff
   2d00c:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2d010:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   2d014:	add	x1, x1, #0x3e8
   2d018:	add	x0, x0, #0x718
   2d01c:	csel	x1, x0, x1, ne  // ne = any
   2d020:	adrp	x24, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   2d024:	add	x0, x24, #0xcb8
   2d028:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   2d02c:	mov	x0, x19
   2d030:	bl	1e218 <__sanitizer_set_report_fd@@Base+0x6398>
   2d034:	str	x0, [sp, #104]
   2d038:	ldrb	w1, [x19, #48]
   2d03c:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2d040:	cbz	w1, 2d4e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4bfc>
   2d044:	mov	x1, x0
   2d048:	ldrb	w2, [x19, #56]
   2d04c:	str	x1, [sp, #128]
   2d050:	ldp	x0, x5, [x19, #24]
   2d054:	ldr	x1, [x1, #4024]
   2d058:	ldr	x4, [x19, #40]
   2d05c:	ldr	x1, [x1]
   2d060:	cbz	w2, 2d58c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ca4>
   2d064:	ldr	x3, [x19, #16]
   2d068:	mov	x6, x5
   2d06c:	ldr	x2, [sp, #104]
   2d070:	mov	x5, x4
   2d074:	mov	w7, w21
   2d078:	mov	x4, x0
   2d07c:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2d080:	add	x0, x0, #0xa20
   2d084:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   2d088:	cmp	w20, #0x0
   2d08c:	adrp	x25, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2d090:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2d094:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   2d098:	add	x1, x1, #0x3e8
   2d09c:	add	x0, x0, #0x180
   2d0a0:	csel	x1, x0, x1, ne  // ne = any
   2d0a4:	add	x0, x24, #0xcb8
   2d0a8:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   2d0ac:	ldr	x20, [x25, #4016]
   2d0b0:	ldr	x21, [x19, #24]
   2d0b4:	ldr	x0, [x20]
   2d0b8:	cbz	x0, 2d574 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c8c>
   2d0bc:	cmp	x0, x21
   2d0c0:	b.hi	2d564 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c7c>  // b.pmore
   2d0c4:	ldrb	w0, [x19, #48]
   2d0c8:	cbz	w0, 2d128 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4840>
   2d0cc:	ldr	w0, [x19, #52]
   2d0d0:	cmp	w0, #0x2
   2d0d4:	b.eq	2d50c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c24>  // b.none
   2d0d8:	cmp	w0, #0x1
   2d0dc:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   2d0e0:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2d0e4:	add	x1, x1, #0xb30
   2d0e8:	add	x0, x0, #0x9a0
   2d0ec:	csel	x1, x1, x0, eq  // eq = none
   2d0f0:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2d0f4:	add	x0, x0, #0xa88
   2d0f8:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   2d0fc:	ldrb	w0, [x19, #56]
   2d100:	cbz	w0, 2d5b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4cd0>
   2d104:	ldr	x20, [x25, #4016]
   2d108:	ldr	x21, [x19, #16]
   2d10c:	ldr	x0, [x20]
   2d110:	cbz	x0, 2d630 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d48>
   2d114:	cmp	x21, x0
   2d118:	b.cs	2d128 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4840>  // b.hs, b.nlast
   2d11c:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2d120:	add	x0, x0, #0xb60
   2d124:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   2d128:	add	x27, sp, #0xa0
   2d12c:	adrp	x21, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2d130:	add	x26, sp, #0xc0
   2d134:	add	x21, x21, #0xb88
   2d138:	mov	x0, x27
   2d13c:	mov	w1, #0x1                   	// #1
   2d140:	ldr	x20, [x19, #24]
   2d144:	bl	1ffa0 <__sanitizer_on_print@@Base+0x680>
   2d148:	stp	xzr, xzr, [sp, #216]
   2d14c:	str	xzr, [sp, #264]
   2d150:	mov	x1, x26
   2d154:	mov	x0, x27
   2d158:	bl	20810 <__sanitizer_on_print@@Base+0xef0>
   2d15c:	tst	w0, #0xff
   2d160:	b.eq	2d1a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x48b8>  // b.none
   2d164:	ldr	x0, [sp, #192]
   2d168:	cmp	x20, x0
   2d16c:	b.cc	2d150 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4868>  // b.lo, b.ul, b.last
   2d170:	ldr	x0, [sp, #200]
   2d174:	cmp	x20, x0
   2d178:	b.cs	2d150 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4868>  // b.hs, b.nlast
   2d17c:	ldr	x0, [sp, #232]
   2d180:	tbnz	w0, #2, 2d150 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4868>
   2d184:	mov	x0, x21
   2d188:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   2d18c:	mov	x1, x26
   2d190:	mov	x0, x27
   2d194:	bl	20810 <__sanitizer_on_print@@Base+0xef0>
   2d198:	tst	w0, #0xff
   2d19c:	b.ne	2d164 <__sanitizer_get_module_and_offset_for_pc@@Base+0x487c>  // b.any
   2d1a0:	mov	x0, x27
   2d1a4:	bl	200d0 <__sanitizer_on_print@@Base+0x7b0>
   2d1a8:	ldr	x20, [x25, #4016]
   2d1ac:	ldr	x0, [x20]
   2d1b0:	cbz	x0, 2d580 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c98>
   2d1b4:	sub	x1, x0, #0x1
   2d1b8:	tst	x1, x0
   2d1bc:	b.ne	2d5a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4cc0>  // b.any
   2d1c0:	add	x27, x0, #0x817
   2d1c4:	neg	x0, x0
   2d1c8:	and	x27, x27, x0
   2d1cc:	mov	w2, #0x0                   	// #0
   2d1d0:	mov	x0, x27
   2d1d4:	adrp	x28, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   2d1d8:	add	x1, x28, #0xc10
   2d1dc:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   2d1e0:	mov	x2, #0x0                   	// #0
   2d1e4:	mov	x1, #0x0                   	// #0
   2d1e8:	mov	x21, x0
   2d1ec:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   2d1f0:	mov	x1, #0x0                   	// #0
   2d1f4:	mov	x0, #0x0                   	// #0
   2d1f8:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   2d1fc:	cmp	x27, #0x817
   2d200:	b.ls	2d71c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4e34>  // b.plast
   2d204:	mov	x2, #0x818                 	// #2072
   2d208:	mov	w1, #0x0                   	// #0
   2d20c:	mov	x0, x21
   2d210:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   2d214:	mov	x1, x23
   2d218:	mov	x2, x21
   2d21c:	add	x0, x21, #0x10
   2d220:	str	x0, [x21]
   2d224:	str	xzr, [x21, #8]
   2d228:	mov	x0, x19
   2d22c:	str	xzr, [x21, #2064]
   2d230:	adrp	x20, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2d234:	blr	x22
   2d238:	mov	x0, x21
   2d23c:	bl	27f58 <__sanitizer_cov_dump@@Base+0x1338>
   2d240:	ldr	x0, [x20, #4056]
   2d244:	ldrb	w0, [x0, #240]
   2d248:	cbz	w0, 2d3c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4adc>
   2d24c:	ldr	x23, [x25, #4016]
   2d250:	ldr	x22, [x19, #24]
   2d254:	ldr	x0, [x23]
   2d258:	cbz	x0, 2d52c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c44>
   2d25c:	cmp	x22, x0
   2d260:	b.cc	2d3c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4adc>  // b.lo, b.ul, b.last
   2d264:	str	xzr, [sp, #192]
   2d268:	stp	xzr, xzr, [sp, #200]
   2d26c:	sub	x1, x0, #0x1
   2d270:	tst	x1, x0
   2d274:	b.ne	2d5a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4cc0>  // b.any
   2d278:	add	x3, x0, #0x3ff
   2d27c:	neg	x0, x0
   2d280:	and	x3, x3, x0
   2d284:	add	x1, x28, #0xc10
   2d288:	mov	x0, x3
   2d28c:	mov	w2, #0x0                   	// #0
   2d290:	str	x3, [sp, #112]
   2d294:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   2d298:	mov	x23, x0
   2d29c:	ldr	x1, [sp, #192]
   2d2a0:	ldr	x2, [sp, #208]
   2d2a4:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   2d2a8:	ldp	x0, x1, [sp, #192]
   2d2ac:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   2d2b0:	ldr	x3, [sp, #112]
   2d2b4:	stp	x23, x3, [sp, #192]
   2d2b8:	ldr	x2, [sp, #208]
   2d2bc:	cmp	x2, #0x3ff
   2d2c0:	b.ls	2d69c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4db4>  // b.plast
   2d2c4:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   2d2c8:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2d2cc:	add	x1, x1, #0xbc8
   2d2d0:	ldr	q0, [x0, #1696]
   2d2d4:	mov	x0, x26
   2d2d8:	str	q0, [sp, #208]
   2d2dc:	strb	wzr, [x23]
   2d2e0:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   2d2e4:	mov	x0, x22
   2d2e8:	mov	x1, #0x10                  	// #16
   2d2ec:	bl	24b58 <__sanitizer_sandbox_on_notify@@Base+0x1510>
   2d2f0:	tst	w0, #0xff
   2d2f4:	b.eq	2d77c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4e94>  // b.none
   2d2f8:	ldr	x0, [x20, #4056]
   2d2fc:	str	x0, [sp, #120]
   2d300:	adrp	x0, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   2d304:	add	x0, x0, #0x1a0
   2d308:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2d30c:	add	x23, x1, #0x3e8
   2d310:	str	x0, [sp, #136]
   2d314:	add	x0, x22, #0x10
   2d318:	str	x0, [sp, #112]
   2d31c:	b	2d358 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a70>
   2d320:	ldr	x3, [sp, #136]
   2d324:	adrp	x6, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   2d328:	asr	w4, w25, #4
   2d32c:	add	x6, x6, #0x180
   2d330:	and	w5, w25, #0xf
   2d334:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2d338:	mov	x2, x23
   2d33c:	add	x1, x0, #0xbf0
   2d340:	mov	x0, x26
   2d344:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   2d348:	add	x22, x22, #0x1
   2d34c:	ldr	x0, [sp, #112]
   2d350:	cmp	x22, x0
   2d354:	b.eq	2d3a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ab8>  // b.none
   2d358:	ldr	x0, [sp, #120]
   2d35c:	ldrb	w25, [x22]
   2d360:	ldr	x28, [x0, #112]
   2d364:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2d368:	add	x1, x0, #0x958
   2d36c:	mov	x0, x28
   2d370:	bl	1a560 <__sanitizer_set_report_fd@@Base+0x26e0>
   2d374:	cbz	w0, 2d320 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a38>
   2d378:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   2d37c:	mov	x0, x28
   2d380:	add	x1, x1, #0xcd8
   2d384:	bl	1a560 <__sanitizer_set_report_fd@@Base+0x26e0>
   2d388:	cbz	w0, 2d5c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ce0>
   2d38c:	asr	w4, w25, #4
   2d390:	and	w5, w25, #0xf
   2d394:	mov	x3, x23
   2d398:	mov	x6, x23
   2d39c:	b	2d334 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a4c>
   2d3a0:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2d3a4:	mov	x0, x26
   2d3a8:	add	x1, x1, #0x0
   2d3ac:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   2d3b0:	ldr	x1, [sp, #192]
   2d3b4:	add	x0, x24, #0xcb8
   2d3b8:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   2d3bc:	ldp	x0, x1, [sp, #192]
   2d3c0:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   2d3c4:	ldr	x0, [x20, #4056]
   2d3c8:	ldrb	w0, [x0, #241]
   2d3cc:	cbnz	w0, 2d500 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c18>
   2d3d0:	ldr	x0, [sp, #128]
   2d3d4:	ldr	x1, [x0, #4024]
   2d3d8:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2d3dc:	add	x0, x0, #0xc10
   2d3e0:	ldr	x1, [x1]
   2d3e4:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   2d3e8:	ldr	x20, [x20, #4056]
   2d3ec:	ldrb	w0, [x20, #60]
   2d3f0:	cbz	w0, 2d438 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b50>
   2d3f4:	ldr	w0, [x21, #8]
   2d3f8:	cbz	w0, 2d554 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c6c>
   2d3fc:	ldr	x0, [x21]
   2d400:	ldr	x19, [x0]
   2d404:	bl	299b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10c8>
   2d408:	sub	x19, x19, #0x4
   2d40c:	mov	x1, x19
   2d410:	bl	2ab10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2228>
   2d414:	ldrb	w1, [x20, #60]
   2d418:	mov	x19, x0
   2d41c:	cbz	w1, 2d430 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b48>
   2d420:	add	x1, x0, #0x8
   2d424:	mov	x2, #0x0                   	// #0
   2d428:	ldr	x0, [sp, #104]
   2d42c:	bl	2c730 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3e48>
   2d430:	mov	x0, x19
   2d434:	bl	29220 <__sanitizer_get_module_and_offset_for_pc@@Base+0x938>
   2d438:	mov	x1, x27
   2d43c:	mov	x0, x21
   2d440:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   2d444:	ldp	x21, x22, [sp, #16]
   2d448:	ldp	x23, x24, [sp, #32]
   2d44c:	ldp	x25, x26, [sp, #48]
   2d450:	ldp	x27, x28, [sp, #64]
   2d454:	ldr	x30, [sp, #80]
   2d458:	ldp	x19, x20, [sp], #272
   2d45c:	ret
   2d460:	adrp	x1, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   2d464:	mov	x0, x24
   2d468:	add	x1, x1, #0xcd8
   2d46c:	bl	1a560 <__sanitizer_set_report_fd@@Base+0x26e0>
   2d470:	cbz	w0, 2d63c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d54>
   2d474:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2d478:	add	x25, x1, #0x3e8
   2d47c:	mov	x1, x25
   2d480:	adrp	x24, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   2d484:	add	x0, x24, #0xcb8
   2d488:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   2d48c:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2d490:	adrp	x26, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2d494:	ldp	x3, x4, [x19, #16]
   2d498:	add	x2, x26, #0xc50
   2d49c:	ldr	x0, [x0, #4024]
   2d4a0:	mov	w7, w21
   2d4a4:	ldp	x6, x5, [x19, #32]
   2d4a8:	add	x2, x2, #0x40
   2d4ac:	ldr	x1, [x0]
   2d4b0:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2d4b4:	add	x0, x0, #0x9a8
   2d4b8:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   2d4bc:	mov	x1, x25
   2d4c0:	adrp	x25, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2d4c4:	add	x0, x24, #0xcb8
   2d4c8:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   2d4cc:	ldr	x21, [x25, #4016]
   2d4d0:	ldr	x0, [x21]
   2d4d4:	cbnz	x0, 2cf00 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4618>
   2d4d8:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   2d4dc:	str	x0, [x21]
   2d4e0:	b	2cf00 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4618>
   2d4e4:	mov	x1, x0
   2d4e8:	str	x1, [sp, #128]
   2d4ec:	ldp	x0, x5, [x19, #24]
   2d4f0:	ldr	x1, [x1, #4024]
   2d4f4:	ldr	x4, [x19, #40]
   2d4f8:	ldr	x1, [x1]
   2d4fc:	b	2d064 <__sanitizer_get_module_and_offset_for_pc@@Base+0x477c>
   2d500:	ldr	x0, [x19, #8]
   2d504:	bl	1d938 <__sanitizer_set_report_fd@@Base+0x5ab8>
   2d508:	b	2d3d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ae8>
   2d50c:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   2d510:	add	x1, x1, #0xb28
   2d514:	b	2d0f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4808>
   2d518:	add	x0, x26, #0xc50
   2d51c:	mov	x1, #0x0                   	// #0
   2d520:	add	x0, x0, #0x40
   2d524:	bl	151d0 <__sanitizer_report_error_summary@@Base+0x10>
   2d528:	b	2cfdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x46f4>
   2d52c:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   2d530:	str	x0, [x23]
   2d534:	cmp	x22, x0
   2d538:	b.cc	2d3c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4adc>  // b.lo, b.ul, b.last
   2d53c:	str	xzr, [sp, #192]
   2d540:	stp	xzr, xzr, [sp, #200]
   2d544:	cbnz	x0, 2d26c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4984>
   2d548:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   2d54c:	str	x0, [x23]
   2d550:	b	2d26c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4984>
   2d554:	ldr	x0, [sp, #104]
   2d558:	mov	x1, #0x0                   	// #0
   2d55c:	bl	151d0 <__sanitizer_report_error_summary@@Base+0x10>
   2d560:	b	2d438 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b50>
   2d564:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2d568:	add	x0, x0, #0xa60
   2d56c:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   2d570:	b	2d0c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x47dc>
   2d574:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   2d578:	str	x0, [x20]
   2d57c:	b	2d0bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x47d4>
   2d580:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   2d584:	str	x0, [x20]
   2d588:	b	2d1b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x48cc>
   2d58c:	ldr	x2, [sp, #104]
   2d590:	mov	x3, x0
   2d594:	mov	w6, w21
   2d598:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2d59c:	add	x0, x0, #0x9e0
   2d5a0:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   2d5a4:	b	2d088 <__sanitizer_get_module_and_offset_for_pc@@Base+0x47a0>
   2d5a8:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   2d5ac:	add	x0, x0, #0xbf8
   2d5b0:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   2d5b4:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   2d5b8:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2d5bc:	add	x0, x0, #0xab8
   2d5c0:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   2d5c4:	b	2d128 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4840>
   2d5c8:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2d5cc:	mov	w3, #0x1                   	// #1
   2d5d0:	ldr	x0, [x1, #3928]
   2d5d4:	ldr	x2, [x0]
   2d5d8:	ldxrb	w0, [x2]
   2d5dc:	stxrb	w4, w3, [x2]
   2d5e0:	cbnz	w4, 2d5d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4cf0>
   2d5e4:	dmb	ish
   2d5e8:	tst	w0, #0xff
   2d5ec:	b.eq	2d600 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d18>  // b.none
   2d5f0:	mov	x0, x2
   2d5f4:	stp	x2, x1, [sp, #144]
   2d5f8:	bl	85d8 <__sanitizer_print_stack_trace@@Base+0x300>
   2d5fc:	ldp	x2, x1, [sp, #144]
   2d600:	ldr	x0, [x1, #3928]
   2d604:	stp	x0, x2, [sp, #144]
   2d608:	bl	172b8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1f20>
   2d60c:	ldr	x0, [sp, #144]
   2d610:	ldr	w0, [x0, #8]
   2d614:	bl	24938 <__sanitizer_sandbox_on_notify@@Base+0x12f0>
   2d618:	dmb	ish
   2d61c:	and	w0, w0, #0xff
   2d620:	ldr	x2, [sp, #152]
   2d624:	strb	wzr, [x2]
   2d628:	cbnz	w0, 2d320 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a38>
   2d62c:	b	2d38c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4aa4>
   2d630:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   2d634:	str	x0, [x20]
   2d638:	b	2d114 <__sanitizer_get_module_and_offset_for_pc@@Base+0x482c>
   2d63c:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2d640:	mov	w2, #0x1                   	// #1
   2d644:	ldr	x0, [x1, #3928]
   2d648:	ldr	x25, [x0]
   2d64c:	ldxrb	w0, [x25]
   2d650:	stxrb	w3, w2, [x25]
   2d654:	cbnz	w3, 2d64c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d64>
   2d658:	dmb	ish
   2d65c:	tst	w0, #0xff
   2d660:	b.eq	2d674 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d8c>  // b.none
   2d664:	mov	x0, x25
   2d668:	str	x1, [sp, #104]
   2d66c:	bl	85d8 <__sanitizer_print_stack_trace@@Base+0x300>
   2d670:	ldr	x1, [sp, #104]
   2d674:	ldr	x24, [x1, #3928]
   2d678:	mov	x0, x24
   2d67c:	bl	172b8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1f20>
   2d680:	ldr	w0, [x24, #8]
   2d684:	bl	24938 <__sanitizer_sandbox_on_notify@@Base+0x12f0>
   2d688:	dmb	ish
   2d68c:	and	w0, w0, #0xff
   2d690:	strb	wzr, [x25]
   2d694:	cbnz	w0, 2ce9c <__sanitizer_get_module_and_offset_for_pc@@Base+0x45b4>
   2d698:	b	2d474 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b8c>
   2d69c:	cmp	x3, #0x3ff
   2d6a0:	b.ls	2d7a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ec0>  // b.plast
   2d6a4:	mov	x3, #0x400                 	// #1024
   2d6a8:	add	x0, x23, x2
   2d6ac:	mov	w1, #0x0                   	// #0
   2d6b0:	sub	x2, x3, x2
   2d6b4:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   2d6b8:	ldr	x23, [sp, #192]
   2d6bc:	b	2d2c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x49dc>
   2d6c0:	ldr	x25, [x25, #4016]
   2d6c4:	ldr	x0, [x25]
   2d6c8:	cbz	x0, 2d790 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ea8>
   2d6cc:	sub	x1, x0, #0x1
   2d6d0:	tst	x1, x0
   2d6d4:	b.ne	2d5a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4cc0>  // b.any
   2d6d8:	add	x25, x0, #0x817
   2d6dc:	neg	x0, x0
   2d6e0:	and	x25, x25, x0
   2d6e4:	add	x1, x28, #0xc10
   2d6e8:	mov	x0, x25
   2d6ec:	mov	w2, #0x0                   	// #0
   2d6f0:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   2d6f4:	mov	x27, x0
   2d6f8:	mov	x2, #0x0                   	// #0
   2d6fc:	mov	x1, x21
   2d700:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   2d704:	mov	x1, x24
   2d708:	mov	x0, x21
   2d70c:	mov	x24, x25
   2d710:	mov	x21, x27
   2d714:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   2d718:	b	2cf50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4668>
   2d71c:	ldr	x20, [x25, #4016]
   2d720:	ldr	x0, [x20]
   2d724:	cbz	x0, 2d79c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4eb4>
   2d728:	sub	x1, x0, #0x1
   2d72c:	tst	x1, x0
   2d730:	b.ne	2d5a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4cc0>  // b.any
   2d734:	add	x20, x0, #0x817
   2d738:	neg	x0, x0
   2d73c:	and	x20, x20, x0
   2d740:	add	x1, x28, #0xc10
   2d744:	mov	x0, x20
   2d748:	mov	w2, #0x0                   	// #0
   2d74c:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   2d750:	str	x0, [sp, #112]
   2d754:	mov	x1, x21
   2d758:	mov	x2, #0x0                   	// #0
   2d75c:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   2d760:	ldr	x3, [sp, #112]
   2d764:	mov	x1, x27
   2d768:	mov	x0, x21
   2d76c:	mov	x27, x20
   2d770:	mov	x21, x3
   2d774:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   2d778:	b	2d204 <__sanitizer_get_module_and_offset_for_pc@@Base+0x491c>
   2d77c:	mov	x0, x26
   2d780:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2d784:	add	x1, x1, #0xc00
   2d788:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   2d78c:	b	2d3b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ac8>
   2d790:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   2d794:	str	x0, [x25]
   2d798:	b	2d6cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4de4>
   2d79c:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   2d7a0:	str	x0, [x20]
   2d7a4:	b	2d728 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4e40>
   2d7a8:	ldr	x25, [x25, #4016]
   2d7ac:	ldr	x0, [x25]
   2d7b0:	cbz	x0, 2d800 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f18>
   2d7b4:	sub	x1, x0, #0x1
   2d7b8:	tst	x1, x0
   2d7bc:	b.ne	2d5a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4cc0>  // b.any
   2d7c0:	add	x25, x0, #0x3ff
   2d7c4:	neg	x0, x0
   2d7c8:	and	x25, x25, x0
   2d7cc:	add	x1, x28, #0xc10
   2d7d0:	mov	w2, #0x0                   	// #0
   2d7d4:	mov	x0, x25
   2d7d8:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   2d7dc:	mov	x23, x0
   2d7e0:	ldr	x1, [sp, #192]
   2d7e4:	ldr	x2, [sp, #208]
   2d7e8:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   2d7ec:	ldp	x0, x1, [sp, #192]
   2d7f0:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   2d7f4:	stp	x23, x25, [sp, #192]
   2d7f8:	ldr	x2, [sp, #208]
   2d7fc:	b	2d6a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4dbc>
   2d800:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   2d804:	str	x0, [x25]
   2d808:	b	2d7b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ecc>
   2d80c:	nop
   2d810:	stp	x19, x20, [sp, #-32]!
   2d814:	adrp	x19, 930000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e0>
   2d818:	add	x19, x19, #0xd18
   2d81c:	str	x30, [sp, #16]
   2d820:	bl	24560 <__sanitizer_sandbox_on_notify@@Base+0xf18>
   2d824:	mov	x20, x0
   2d828:	ldxr	x1, [x19]
   2d82c:	cbnz	x1, 2d838 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f50>
   2d830:	stlxr	w0, x20, [x19]
   2d834:	cbnz	w0, 2d828 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f40>
   2d838:	dmb	ish
   2d83c:	cbz	x1, 2d858 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f70>
   2d840:	cmp	x20, x1
   2d844:	b.eq	2d890 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4fa8>  // b.none
   2d848:	bl	1c390 <__sanitizer_set_report_fd@@Base+0x4510>
   2d84c:	ldxr	x1, [x19]
   2d850:	cbz	x1, 2d830 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f48>
   2d854:	b	2d838 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f50>
   2d858:	add	x0, x19, #0x8
   2d85c:	mov	w2, #0x1                   	// #1
   2d860:	ldxrb	w1, [x0]
   2d864:	stxrb	w3, w2, [x0]
   2d868:	cbnz	w3, 2d860 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f78>
   2d86c:	dmb	ish
   2d870:	tst	w1, #0xff
   2d874:	b.eq	2d884 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f9c>  // b.none
   2d878:	ldr	x30, [sp, #16]
   2d87c:	ldp	x19, x20, [sp], #32
   2d880:	b	85d8 <__sanitizer_print_stack_trace@@Base+0x300>
   2d884:	ldr	x30, [sp, #16]
   2d888:	ldp	x19, x20, [sp], #32
   2d88c:	ret
   2d890:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2d894:	ldr	x0, [x0, #4024]
   2d898:	ldr	x19, [x0]
   2d89c:	mov	x0, x19
   2d8a0:	bl	1a690 <__sanitizer_set_report_fd@@Base+0x2810>
   2d8a4:	mov	x1, x0
   2d8a8:	mov	x0, x19
   2d8ac:	bl	17278 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ee0>
   2d8b0:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2d8b4:	mov	x1, #0x2b                  	// #43
   2d8b8:	add	x0, x0, #0xc50
   2d8bc:	bl	17278 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ee0>
   2d8c0:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2d8c4:	ldr	x0, [x0, #4056]
   2d8c8:	ldr	w0, [x0, #224]
   2d8cc:	bl	1c3a0 <__sanitizer_set_report_fd@@Base+0x4520>
   2d8d0:	stp	x19, x20, [sp, #-144]!
   2d8d4:	mov	w20, w2
   2d8d8:	stp	x21, x22, [sp, #16]
   2d8dc:	mov	x22, x4
   2d8e0:	mov	x21, x3
   2d8e4:	stp	x23, x24, [sp, #32]
   2d8e8:	mov	x23, x1
   2d8ec:	mov	x24, x0
   2d8f0:	str	x30, [sp, #48]
   2d8f4:	bl	2ce08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4520>
   2d8f8:	add	x19, sp, #0x50
   2d8fc:	add	x0, sp, #0x48
   2d900:	bl	2d810 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f28>
   2d904:	stp	x24, x23, [sp, #80]
   2d908:	mov	x0, x19
   2d90c:	bl	1e1e0 <__sanitizer_set_report_fd@@Base+0x6360>
   2d910:	mov	x1, x0
   2d914:	mov	x0, x19
   2d918:	str	x1, [sp, #96]
   2d91c:	bl	1e1f0 <__sanitizer_set_report_fd@@Base+0x6370>
   2d920:	mov	w1, w0
   2d924:	mov	x0, x19
   2d928:	strb	w1, [sp, #128]
   2d92c:	bl	1d8c8 <__sanitizer_set_report_fd@@Base+0x5a48>
   2d930:	mov	w1, w0
   2d934:	mov	x0, x19
   2d938:	str	w1, [sp, #132]
   2d93c:	bl	1d910 <__sanitizer_set_report_fd@@Base+0x5a90>
   2d940:	mov	w1, w0
   2d944:	mov	x0, x19
   2d948:	strb	w1, [sp, #136]
   2d94c:	bl	1d940 <__sanitizer_set_report_fd@@Base+0x5ac0>
   2d950:	mov	x3, x22
   2d954:	mov	x2, x21
   2d958:	mov	w1, w20
   2d95c:	mov	x0, x19
   2d960:	bl	2ce48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4560>
   2d964:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2d968:	add	x0, x0, #0xc38
   2d96c:	bl	1fcb8 <__sanitizer_on_print@@Base+0x398>
   2d970:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   2d974:	nop
   2d978:	dmb	ish
   2d97c:	adrp	x0, 930000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e0>
   2d980:	add	x1, x0, #0xd18
   2d984:	strb	wzr, [x1, #8]
   2d988:	str	xzr, [x0, #3352]
   2d98c:	ret
   2d990:	adrp	x0, 930000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e0>
   2d994:	add	x0, x0, #0xd18
   2d998:	ldrb	w3, [x0, #8]
   2d99c:	and	x3, x3, #0xff
   2d9a0:	cmp	x3, #0x1
   2d9a4:	b.ne	2d9ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x50c4>  // b.any
   2d9a8:	ret
   2d9ac:	str	x30, [sp, #-16]!
   2d9b0:	adrp	x2, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   2d9b4:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   2d9b8:	add	x2, x2, #0xa60
   2d9bc:	add	x0, x0, #0xa98
   2d9c0:	mov	x4, #0x1                   	// #1
   2d9c4:	mov	w1, #0x2b                  	// #43
   2d9c8:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   2d9cc:	nop
   2d9d0:	stp	x19, x20, [sp, #-32]!
   2d9d4:	mov	x19, x1
   2d9d8:	ldr	w4, [x1, #8]
   2d9dc:	ldr	x1, [x1]
   2d9e0:	stp	x21, x30, [sp, #16]
   2d9e4:	ldr	w3, [x1, #8]
   2d9e8:	cmp	x3, x4
   2d9ec:	b.cs	2da64 <__sanitizer_get_module_and_offset_for_pc@@Base+0x517c>  // b.hs, b.nlast
   2d9f0:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2d9f4:	bl	6490 <_Unwind_GetIP@plt>
   2d9f8:	mov	x20, x0
   2d9fc:	ldr	x21, [x21, #4016]
   2da00:	ldr	x0, [x21]
   2da04:	cbz	x0, 2da44 <__sanitizer_get_module_and_offset_for_pc@@Base+0x515c>
   2da08:	cmp	x20, x0
   2da0c:	b.cc	2da54 <__sanitizer_get_module_and_offset_for_pc@@Base+0x516c>  // b.lo, b.ul, b.last
   2da10:	ldr	x1, [x19]
   2da14:	ldr	w3, [x19, #8]
   2da18:	ldr	w0, [x1, #8]
   2da1c:	add	w2, w0, #0x1
   2da20:	str	w2, [x1, #8]
   2da24:	add	x0, x1, w0, uxtw #3
   2da28:	cmp	w2, w3
   2da2c:	str	x20, [x0, #16]
   2da30:	b.eq	2da54 <__sanitizer_get_module_and_offset_for_pc@@Base+0x516c>  // b.none
   2da34:	mov	w0, #0x0                   	// #0
   2da38:	ldp	x21, x30, [sp, #16]
   2da3c:	ldp	x19, x20, [sp], #32
   2da40:	ret
   2da44:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   2da48:	str	x0, [x21]
   2da4c:	cmp	x20, x0
   2da50:	b.cs	2da10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5128>  // b.hs, b.nlast
   2da54:	mov	w0, #0x4                   	// #4
   2da58:	ldp	x21, x30, [sp, #16]
   2da5c:	ldp	x19, x20, [sp], #32
   2da60:	ret
   2da64:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2da68:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2da6c:	add	x2, x2, #0xca0
   2da70:	add	x0, x0, #0xcd0
   2da74:	mov	w1, #0x50                  	// #80
   2da78:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   2da7c:	nop
   2da80:	stp	x19, x20, [sp, #-48]!
   2da84:	cmp	w2, #0x1
   2da88:	str	x30, [sp, #16]
   2da8c:	b.ls	2dafc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5214>  // b.plast
   2da90:	mov	x19, x0
   2da94:	add	w2, w2, #0x1
   2da98:	cmp	w2, #0x100
   2da9c:	mov	x20, x1
   2daa0:	mov	w1, #0x100                 	// #256
   2daa4:	csel	w2, w2, w1, ls  // ls = plast
   2daa8:	str	wzr, [x19, #8]
   2daac:	add	x1, sp, #0x20
   2dab0:	adrp	x0, 2d000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4718>
   2dab4:	add	x0, x0, #0x9d0
   2dab8:	str	x19, [sp, #32]
   2dabc:	str	w2, [sp, #40]
   2dac0:	bl	61b0 <_Unwind_Backtrace@plt>
   2dac4:	mov	x1, x20
   2dac8:	mov	x0, x19
   2dacc:	bl	27ef0 <__sanitizer_cov_dump@@Base+0x12d0>
   2dad0:	mov	x1, x0
   2dad4:	cbnz	x0, 2dae4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x51fc>
   2dad8:	ldr	w0, [x19, #8]
   2dadc:	cmp	w0, #0x1
   2dae0:	cset	x1, hi  // hi = pmore
   2dae4:	mov	x0, x19
   2dae8:	bl	27e38 <__sanitizer_cov_dump@@Base+0x1218>
   2daec:	ldr	x30, [sp, #16]
   2daf0:	str	x20, [x19, #16]
   2daf4:	ldp	x19, x20, [sp], #48
   2daf8:	ret
   2dafc:	mov	w3, w2
   2db00:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2db04:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   2db08:	add	x0, x0, #0xcd0
   2db0c:	add	x2, x2, #0xe78
   2db10:	mov	x4, #0x2                   	// #2
   2db14:	mov	w1, #0x7f                  	// #127
   2db18:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   2db1c:	nop
   2db20:	stp	x19, x20, [sp, #-112]!
   2db24:	str	x30, [sp, #80]
   2db28:	cbz	x2, 2dd4c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5464>
   2db2c:	stp	x21, x22, [sp, #16]
   2db30:	cmp	w3, #0x1
   2db34:	stp	x23, x24, [sp, #32]
   2db38:	mov	w24, w3
   2db3c:	b.ls	2dd7c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5494>  // b.plast
   2db40:	adrp	x22, 930000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e0>
   2db44:	mov	x21, x0
   2db48:	mov	x20, x1
   2db4c:	add	x1, x22, #0xd28
   2db50:	ldr	x0, [x22, #3368]
   2db54:	cbz	x0, 2ddc4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x54dc>
   2db58:	ldr	x0, [x1, #8]
   2db5c:	stp	x25, x26, [sp, #48]
   2db60:	mov	x19, x2
   2db64:	stp	x27, x28, [sp, #64]
   2db68:	blr	x0
   2db6c:	mov	x23, x0
   2db70:	cbz	x0, 2dda4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x54bc>
   2db74:	adrp	x26, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2db78:	ldr	x20, [x26, #4016]
   2db7c:	ldr	x3, [x20]
   2db80:	cbz	x3, 2dd24 <__sanitizer_get_module_and_offset_for_pc@@Base+0x543c>
   2db84:	sub	x0, x3, #0x1
   2db88:	tst	x0, x3
   2db8c:	b.ne	2dd3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5454>  // b.any
   2db90:	neg	x20, x3
   2db94:	mov	x27, #0x17ff                	// #6143
   2db98:	add	x3, x3, x27
   2db9c:	mov	w2, #0x0                   	// #0
   2dba0:	and	x20, x3, x20
   2dba4:	adrp	x28, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   2dba8:	mov	x0, x20
   2dbac:	add	x1, x28, #0xc10
   2dbb0:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   2dbb4:	mov	x25, x0
   2dbb8:	mov	x2, #0x0                   	// #0
   2dbbc:	mov	x1, #0x0                   	// #0
   2dbc0:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   2dbc4:	mov	x1, #0x0                   	// #0
   2dbc8:	mov	x0, #0x0                   	// #0
   2dbcc:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   2dbd0:	cmp	x20, x27
   2dbd4:	b.ls	2de44 <__sanitizer_get_module_and_offset_for_pc@@Base+0x555c>  // b.plast
   2dbd8:	mov	x2, #0x1800                	// #6144
   2dbdc:	mov	w1, #0x0                   	// #0
   2dbe0:	mov	x0, x25
   2dbe4:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   2dbe8:	ldr	x6, [x22, #3368]
   2dbec:	add	x22, x22, #0xd28
   2dbf0:	mov	x1, x19
   2dbf4:	mov	x5, x24
   2dbf8:	mov	x3, x25
   2dbfc:	mov	x2, x23
   2dc00:	mov	x4, #0x0                   	// #0
   2dc04:	mov	x0, #0x0                   	// #0
   2dc08:	blr	x6
   2dc0c:	mov	x19, x0
   2dc10:	ldr	x1, [x22, #16]
   2dc14:	mov	x0, x23
   2dc18:	blr	x1
   2dc1c:	tbnz	x19, #63, 2dcfc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5414>
   2dc20:	cmp	x19, #0x100
   2dc24:	b.gt	2deb0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x55c8>
   2dc28:	str	wzr, [x21, #8]
   2dc2c:	cmp	x19, #0x0
   2dc30:	cbz	x19, 2dcfc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5414>
   2dc34:	add	x0, x19, x19, lsl #1
   2dc38:	add	x1, x19, #0x2
   2dc3c:	mov	x2, #0x8                   	// #8
   2dc40:	mov	x3, #0x18                  	// #24
   2dc44:	lsl	x0, x0, #3
   2dc48:	lsl	x1, x1, #3
   2dc4c:	sub	x0, x0, #0x10
   2dc50:	csel	x1, x1, x3, gt
   2dc54:	csel	x0, x0, x2, gt
   2dc58:	add	x2, x21, #0x10
   2dc5c:	add	x0, x25, x0
   2dc60:	add	x1, x21, x1
   2dc64:	cmp	x2, x0
   2dc68:	ccmp	x25, x1, #0x2, cc  // cc = lo, ul, last
   2dc6c:	ccmp	x19, #0x7, #0x4, cs  // cs = hs, nlast
   2dc70:	b.le	2de20 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5538>
   2dc74:	cmp	x19, #0x0
   2dc78:	adrp	x3, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2dc7c:	csinc	x0, x19, xzr, gt
   2dc80:	mov	x2, x25
   2dc84:	sub	x0, x0, #0x1
   2dc88:	mov	x1, x21
   2dc8c:	ldr	q0, [x3, #3472]
   2dc90:	lsr	x3, x0, #1
   2dc94:	add	x3, x21, x3, lsl #4
   2dc98:	ld3	{v1.2d-v3.2d}, [x2], #48
   2dc9c:	add	v1.2d, v0.2d, v1.2d
   2dca0:	str	q1, [x1, #16]!
   2dca4:	cmp	x1, x3
   2dca8:	b.ne	2dc98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x53b0>  // b.any
   2dcac:	and	x0, x0, #0xfffffffffffffffe
   2dcb0:	add	x3, x0, #0x1
   2dcb4:	mov	w2, w0
   2dcb8:	add	x1, x0, x0, lsl #1
   2dcbc:	add	x2, x2, #0x2
   2dcc0:	cmp	x19, x3
   2dcc4:	add	w0, w0, #0x1
   2dcc8:	lsl	x1, x1, #3
   2dccc:	ldr	x3, [x25, x1]
   2dcd0:	add	x3, x3, #0x2
   2dcd4:	str	x3, [x21, x2, lsl #3]
   2dcd8:	b.le	2dcf0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5408>
   2dcdc:	add	x1, x25, x1
   2dce0:	add	x0, x21, w0, uxtw #3
   2dce4:	ldr	x1, [x1, #24]
   2dce8:	add	x1, x1, #0x2
   2dcec:	str	x1, [x0, #16]
   2dcf0:	cmp	x19, #0x0
   2dcf4:	csinc	w19, w19, wzr, gt
   2dcf8:	str	w19, [x21, #8]
   2dcfc:	mov	x0, x25
   2dd00:	mov	x1, x20
   2dd04:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   2dd08:	ldp	x25, x26, [sp, #48]
   2dd0c:	ldp	x27, x28, [sp, #64]
   2dd10:	ldp	x21, x22, [sp, #16]
   2dd14:	ldp	x23, x24, [sp, #32]
   2dd18:	ldr	x30, [sp, #80]
   2dd1c:	ldp	x19, x20, [sp], #112
   2dd20:	ret
   2dd24:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   2dd28:	mov	x3, x0
   2dd2c:	str	x0, [x20]
   2dd30:	sub	x0, x3, #0x1
   2dd34:	tst	x0, x3
   2dd38:	b.eq	2db90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x52a8>  // b.none
   2dd3c:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   2dd40:	add	x0, x0, #0xbf8
   2dd44:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   2dd48:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   2dd4c:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2dd50:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2dd54:	add	x2, x2, #0xd38
   2dd58:	add	x0, x0, #0xcd0
   2dd5c:	mov	x4, #0x0                   	// #0
   2dd60:	mov	x3, #0x0                   	// #0
   2dd64:	mov	w1, #0x98                  	// #152
   2dd68:	stp	x21, x22, [sp, #16]
   2dd6c:	stp	x23, x24, [sp, #32]
   2dd70:	stp	x25, x26, [sp, #48]
   2dd74:	stp	x27, x28, [sp, #64]
   2dd78:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   2dd7c:	adrp	x2, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   2dd80:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2dd84:	mov	x3, x24
   2dd88:	add	x2, x2, #0xe78
   2dd8c:	add	x0, x0, #0xcd0
   2dd90:	mov	x4, #0x2                   	// #2
   2dd94:	mov	w1, #0x99                  	// #153
   2dd98:	stp	x25, x26, [sp, #48]
   2dd9c:	stp	x27, x28, [sp, #64]
   2dda0:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   2dda4:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2dda8:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2ddac:	add	x2, x2, #0xd50
   2ddb0:	add	x0, x0, #0xcd0
   2ddb4:	mov	x4, #0x0                   	// #0
   2ddb8:	mov	x3, #0x0                   	// #0
   2ddbc:	mov	w1, #0xa0                  	// #160
   2ddc0:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   2ddc4:	add	w3, w3, #0x1
   2ddc8:	mov	w1, #0x100                 	// #256
   2ddcc:	cmp	w3, #0x100
   2ddd0:	str	wzr, [x21, #8]
   2ddd4:	csel	w3, w3, w1, ls  // ls = plast
   2ddd8:	adrp	x0, 2d000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4718>
   2dddc:	add	x1, sp, #0x60
   2dde0:	add	x0, x0, #0x9d0
   2dde4:	str	x21, [sp, #96]
   2dde8:	str	w3, [sp, #104]
   2ddec:	bl	61b0 <_Unwind_Backtrace@plt>
   2ddf0:	mov	x1, x20
   2ddf4:	mov	x0, x21
   2ddf8:	bl	27ef0 <__sanitizer_cov_dump@@Base+0x12d0>
   2ddfc:	mov	x1, x0
   2de00:	cbnz	x0, 2de10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5528>
   2de04:	ldr	w0, [x21, #8]
   2de08:	cmp	w0, #0x1
   2de0c:	cset	x1, hi  // hi = pmore
   2de10:	mov	x0, x21
   2de14:	bl	27e38 <__sanitizer_cov_dump@@Base+0x1218>
   2de18:	str	x20, [x21, #16]
   2de1c:	b	2dd10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5428>
   2de20:	mov	x3, x25
   2de24:	mov	x0, #0x0                   	// #0
   2de28:	ldr	x1, [x3], #24
   2de2c:	add	x1, x1, #0x2
   2de30:	str	x1, [x2, x0, lsl #3]
   2de34:	add	x0, x0, #0x1
   2de38:	cmp	x19, x0
   2de3c:	b.gt	2de28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5540>
   2de40:	b	2dcf0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5408>
   2de44:	ldr	x26, [x26, #4016]
   2de48:	ldr	x0, [x26]
   2de4c:	cbz	x0, 2dea4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x55bc>
   2de50:	sub	x1, x0, #0x1
   2de54:	tst	x1, x0
   2de58:	b.ne	2dd3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5454>  // b.any
   2de5c:	mov	x1, #0x17ff                	// #6143
   2de60:	add	x26, x0, x1
   2de64:	neg	x0, x0
   2de68:	add	x1, x28, #0xc10
   2de6c:	and	x26, x26, x0
   2de70:	mov	w2, #0x0                   	// #0
   2de74:	mov	x0, x26
   2de78:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   2de7c:	mov	x2, #0x0                   	// #0
   2de80:	mov	x27, x0
   2de84:	mov	x1, x25
   2de88:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   2de8c:	mov	x1, x20
   2de90:	mov	x0, x25
   2de94:	mov	x20, x26
   2de98:	mov	x25, x27
   2de9c:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   2dea0:	b	2dbd8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x52f0>
   2dea4:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   2dea8:	str	x0, [x26]
   2deac:	b	2de50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5568>
   2deb0:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2deb4:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2deb8:	mov	x3, x19
   2debc:	add	x2, x2, #0xd60
   2dec0:	add	x0, x0, #0xcd0
   2dec4:	mov	x4, #0x100                 	// #256
   2dec8:	mov	w1, #0xa8                  	// #168
   2decc:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   2ded0:	cmp	w0, #0x1f
   2ded4:	b.ls	2defc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5614>  // b.plast
   2ded8:	str	x30, [sp, #-16]!
   2dedc:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2dee0:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2dee4:	add	x2, x2, #0xf8
   2dee8:	add	x0, x0, #0x120
   2deec:	mov	x4, #0x0                   	// #0
   2def0:	mov	x3, #0x0                   	// #0
   2def4:	mov	w1, #0x42                  	// #66
   2def8:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   2defc:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2df00:	add	x1, x1, #0x430
   2df04:	ldrb	w0, [x1, w0, uxtw]
   2df08:	adr	x1, 2df14 <__sanitizer_get_module_and_offset_for_pc@@Base+0x562c>
   2df0c:	add	x0, x1, w0, sxtb #2
   2df10:	br	x0
   2df14:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2df18:	add	x0, x0, #0xdc8
   2df1c:	ret
   2df20:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2df24:	add	x0, x0, #0xe0
   2df28:	ret
   2df2c:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2df30:	add	x0, x0, #0x38
   2df34:	ret
   2df38:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2df3c:	add	x0, x0, #0x20
   2df40:	ret
   2df44:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2df48:	add	x0, x0, #0x10
   2df4c:	ret
   2df50:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2df54:	add	x0, x0, #0xff8
   2df58:	ret
   2df5c:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2df60:	add	x0, x0, #0xfe0
   2df64:	ret
   2df68:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2df6c:	add	x0, x0, #0xfc8
   2df70:	ret
   2df74:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2df78:	add	x0, x0, #0xfb0
   2df7c:	ret
   2df80:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2df84:	add	x0, x0, #0xb0
   2df88:	ret
   2df8c:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2df90:	add	x0, x0, #0x98
   2df94:	ret
   2df98:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2df9c:	add	x0, x0, #0x80
   2dfa0:	ret
   2dfa4:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2dfa8:	add	x0, x0, #0x68
   2dfac:	ret
   2dfb0:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2dfb4:	add	x0, x0, #0xda0
   2dfb8:	ret
   2dfbc:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2dfc0:	add	x0, x0, #0xc8
   2dfc4:	ret
   2dfc8:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2dfcc:	add	x0, x0, #0xdb0
   2dfd0:	ret
   2dfd4:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2dfd8:	add	x0, x0, #0x50
   2dfdc:	ret
   2dfe0:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2dfe4:	add	x0, x0, #0xe00
   2dfe8:	ret
   2dfec:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2dff0:	add	x0, x0, #0xe38
   2dff4:	ret
   2dff8:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2dffc:	add	x0, x0, #0xe20
   2e000:	ret
   2e004:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2e008:	add	x0, x0, #0xea0
   2e00c:	ret
   2e010:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2e014:	add	x0, x0, #0xe88
   2e018:	ret
   2e01c:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2e020:	add	x0, x0, #0xe68
   2e024:	ret
   2e028:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2e02c:	add	x0, x0, #0xe50
   2e030:	ret
   2e034:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2e038:	add	x0, x0, #0xde0
   2e03c:	ret
   2e040:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2e044:	add	x0, x0, #0xf78
   2e048:	ret
   2e04c:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2e050:	add	x0, x0, #0xf58
   2e054:	ret
   2e058:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2e05c:	add	x0, x0, #0xf30
   2e060:	ret
   2e064:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2e068:	add	x0, x0, #0xf08
   2e06c:	ret
   2e070:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2e074:	add	x0, x0, #0xef0
   2e078:	ret
   2e07c:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2e080:	add	x0, x0, #0xed8
   2e084:	ret
   2e088:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2e08c:	add	x0, x0, #0xec0
   2e090:	ret
   2e094:	nop
   2e098:	cbz	w2, 2e184 <__sanitizer_get_module_and_offset_for_pc@@Base+0x589c>
   2e09c:	sub	w2, w2, #0x1
   2e0a0:	add	x3, x1, #0x58
   2e0a4:	mov	w5, #0x58                  	// #88
   2e0a8:	mov	x4, #0x0                   	// #0
   2e0ac:	str	x30, [sp, #-16]!
   2e0b0:	umaddl	x2, w2, w5, x3
   2e0b4:	b	2e0ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x5804>
   2e0b8:	ldr	w3, [x4]
   2e0bc:	ldr	x5, [x4, #24]
   2e0c0:	cmp	w3, #0x2
   2e0c4:	b.ne	2e144 <__sanitizer_get_module_and_offset_for_pc@@Base+0x585c>  // b.any
   2e0c8:	ldr	w3, [x1]
   2e0cc:	ldr	x6, [x1, #24]
   2e0d0:	cmp	w3, #0x2
   2e0d4:	b.ne	2e164 <__sanitizer_get_module_and_offset_for_pc@@Base+0x587c>  // b.any
   2e0d8:	cmp	x5, x6
   2e0dc:	csel	x4, x4, x1, ls  // ls = plast
   2e0e0:	add	x1, x1, #0x58
   2e0e4:	cmp	x1, x2
   2e0e8:	b.eq	2e118 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5830>  // b.none
   2e0ec:	ldr	w3, [x1, #40]
   2e0f0:	ldr	x5, [x1, #64]
   2e0f4:	cmp	w3, #0x2
   2e0f8:	b.ne	2e124 <__sanitizer_get_module_and_offset_for_pc@@Base+0x583c>  // b.any
   2e0fc:	cmp	x5, x0
   2e100:	b.ls	2e0e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x57f8>  // b.plast
   2e104:	cbnz	x4, 2e0b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x57d0>
   2e108:	mov	x4, x1
   2e10c:	add	x1, x1, #0x58
   2e110:	cmp	x1, x2
   2e114:	b.ne	2e0ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x5804>  // b.any
   2e118:	mov	x0, x4
   2e11c:	ldr	x30, [sp], #16
   2e120:	ret
   2e124:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2e128:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2e12c:	add	x2, x2, #0x168
   2e130:	add	x0, x0, #0x188
   2e134:	mov	x4, #0x0                   	// #0
   2e138:	mov	x3, #0x0                   	// #0
   2e13c:	mov	w1, #0x56                  	// #86
   2e140:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   2e144:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2e148:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2e14c:	add	x2, x2, #0x168
   2e150:	add	x0, x0, #0x188
   2e154:	mov	x4, #0x0                   	// #0
   2e158:	mov	x3, #0x0                   	// #0
   2e15c:	mov	w1, #0x56                  	// #86
   2e160:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   2e164:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2e168:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2e16c:	add	x2, x2, #0x168
   2e170:	add	x0, x0, #0x188
   2e174:	mov	x4, #0x0                   	// #0
   2e178:	mov	x3, #0x0                   	// #0
   2e17c:	mov	w1, #0x56                  	// #86
   2e180:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   2e184:	mov	x4, #0x0                   	// #0
   2e188:	mov	x0, x4
   2e18c:	ret
   2e190:	stp	x19, x20, [sp, #-112]!
   2e194:	mov	x20, x2
   2e198:	str	x30, [sp, #64]
   2e19c:	ldrb	w2, [x1]
   2e1a0:	cbz	w2, 2e24c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5964>
   2e1a4:	mov	x19, x1
   2e1a8:	stp	x21, x22, [sp, #16]
   2e1ac:	adrp	x22, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2e1b0:	mov	x21, x0
   2e1b4:	add	x22, x22, #0x1d8
   2e1b8:	stp	x23, x24, [sp, #32]
   2e1bc:	adrp	x23, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2e1c0:	add	x24, sp, #0x50
   2e1c4:	add	x23, x23, #0x1d0
   2e1c8:	stp	x25, x26, [sp, #48]
   2e1cc:	nop
   2e1d0:	cmp	w2, #0x25
   2e1d4:	add	x25, x19, #0x1
   2e1d8:	b.ne	2e29c <__sanitizer_get_module_and_offset_for_pc@@Base+0x59b4>  // b.any
   2e1dc:	ldrb	w3, [x19, #1]
   2e1e0:	add	x19, x19, #0x2
   2e1e4:	ubfiz	x3, x3, #5, #8
   2e1e8:	sub	x3, x3, #0x600
   2e1ec:	add	x26, x20, x3
   2e1f0:	ldr	w3, [x20, x3]
   2e1f4:	cmp	w3, #0x3
   2e1f8:	b.eq	2e2e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x59f8>  // b.none
   2e1fc:	b.hi	2e274 <__sanitizer_get_module_and_offset_for_pc@@Base+0x598c>  // b.pmore
   2e200:	cmp	w3, #0x1
   2e204:	b.eq	2e2bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x59d4>  // b.none
   2e208:	cmp	w3, #0x2
   2e20c:	b.ne	2e258 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5970>  // b.any
   2e210:	ldp	x2, x0, [x26, #16]
   2e214:	cbz	x0, 2e330 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5a48>
   2e218:	mov	w5, w2
   2e21c:	lsr	x4, x2, #32
   2e220:	mov	w3, w0
   2e224:	lsr	x2, x0, #32
   2e228:	mov	x1, x22
   2e22c:	mov	x0, x21
   2e230:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   2e234:	nop
   2e238:	ldrb	w2, [x25, #1]
   2e23c:	cbnz	w2, 2e1d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x58e8>
   2e240:	ldp	x21, x22, [sp, #16]
   2e244:	ldp	x23, x24, [sp, #32]
   2e248:	ldp	x25, x26, [sp, #48]
   2e24c:	ldr	x30, [sp, #64]
   2e250:	ldp	x19, x20, [sp], #112
   2e254:	ret
   2e258:	cbnz	w3, 2e238 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5950>
   2e25c:	ldr	x2, [x26, #16]
   2e260:	mov	x0, x21
   2e264:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   2e268:	add	x1, x1, #0xcb8
   2e26c:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   2e270:	b	2e238 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5950>
   2e274:	cmp	w3, #0x4
   2e278:	b.eq	2e300 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5a18>  // b.none
   2e27c:	cmp	w3, #0x5
   2e280:	b.ne	2e238 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5950>  // b.any
   2e284:	ldr	x2, [x26, #16]
   2e288:	mov	x0, x21
   2e28c:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   2e290:	add	x1, x1, #0xca0
   2e294:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   2e298:	b	2e238 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5950>
   2e29c:	mov	x0, x21
   2e2a0:	adrp	x1, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   2e2a4:	add	x1, x1, #0xfb8
   2e2a8:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   2e2ac:	mov	x0, x25
   2e2b0:	mov	x25, x19
   2e2b4:	mov	x19, x0
   2e2b8:	b	2e238 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5950>
   2e2bc:	bl	299b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10c8>
   2e2c0:	ldr	x1, [x26, #16]
   2e2c4:	bl	29d60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1478>
   2e2c8:	mov	x2, x0
   2e2cc:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2e2d0:	mov	x0, x21
   2e2d4:	add	x1, x1, #0x1c8
   2e2d8:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   2e2dc:	b	2e238 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5950>
   2e2e0:	ldp	x2, x0, [x26, #16]
   2e2e4:	cmp	x2, #0x0
   2e2e8:	cinc	x1, x0, lt  // lt = tstop
   2e2ec:	cbnz	x1, 2e218 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5930>
   2e2f0:	mov	x1, x23
   2e2f4:	mov	x0, x21
   2e2f8:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   2e2fc:	b	2e238 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5950>
   2e300:	ldr	q0, [x26, #16]
   2e304:	mov	x0, x24
   2e308:	mov	x1, #0x20                  	// #32
   2e30c:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2e310:	add	x2, x2, #0x1f8
   2e314:	bl	6450 <snprintf@plt>
   2e318:	mov	x2, x24
   2e31c:	mov	x0, x21
   2e320:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   2e324:	add	x1, x1, #0xcb8
   2e328:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   2e32c:	b	2e238 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5950>
   2e330:	mov	x0, x21
   2e334:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2e338:	add	x1, x1, #0x1f0
   2e33c:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   2e340:	b	2e238 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5950>
   2e344:	nop
   2e348:	adrp	x4, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2e34c:	sub	sp, sp, #0x850
   2e350:	ldr	x4, [x4, #3704]
   2e354:	stp	x19, x20, [sp]
   2e358:	mov	x19, x0
   2e35c:	ldrb	w0, [x4, #1]
   2e360:	str	x30, [sp, #24]
   2e364:	cbnz	w0, 2e378 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5a90>
   2e368:	ldp	x19, x20, [sp]
   2e36c:	ldr	x30, [sp, #24]
   2e370:	add	sp, sp, #0x850
   2e374:	ret
   2e378:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2e37c:	mov	x20, x1
   2e380:	stp	xzr, xzr, [sp, #40]
   2e384:	ldr	x0, [x0, #4056]
   2e388:	str	xzr, [sp, #64]
   2e38c:	str	xzr, [sp, #2120]
   2e390:	ldrb	w0, [x0, #33]
   2e394:	str	x21, [sp, #16]
   2e398:	add	x21, sp, #0x38
   2e39c:	add	x1, x21, #0x10
   2e3a0:	str	x1, [sp, #56]
   2e3a4:	cbz	w0, 2e3f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5b0c>
   2e3a8:	add	x2, sp, #0x30
   2e3ac:	add	x1, sp, #0x28
   2e3b0:	mov	w0, #0x0                   	// #0
   2e3b4:	bl	23a98 <__sanitizer_sandbox_on_notify@@Base+0x450>
   2e3b8:	ldp	x5, x6, [sp, #40]
   2e3bc:	mov	x3, x20
   2e3c0:	mov	x2, x19
   2e3c4:	mov	x0, x21
   2e3c8:	mov	w7, #0x1                   	// #1
   2e3cc:	mov	x4, #0x0                   	// #0
   2e3d0:	mov	w1, #0x100                 	// #256
   2e3d4:	bl	283c0 <__sanitizer_cov_dump@@Base+0x17a0>
   2e3d8:	mov	x0, x21
   2e3dc:	bl	27f58 <__sanitizer_cov_dump@@Base+0x1338>
   2e3e0:	ldp	x19, x20, [sp]
   2e3e4:	ldr	x21, [sp, #16]
   2e3e8:	ldr	x30, [sp, #24]
   2e3ec:	add	sp, sp, #0x850
   2e3f0:	ret
   2e3f4:	mov	x3, x20
   2e3f8:	mov	x2, x19
   2e3fc:	mov	x0, x21
   2e400:	mov	w7, #0x0                   	// #0
   2e404:	mov	x6, #0x0                   	// #0
   2e408:	mov	x5, #0x0                   	// #0
   2e40c:	mov	x4, #0x0                   	// #0
   2e410:	mov	w1, #0x100                 	// #256
   2e414:	bl	283c0 <__sanitizer_cov_dump@@Base+0x17a0>
   2e418:	b	2e3d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5af0>
   2e41c:	nop
   2e420:	stp	x19, x20, [sp, #-64]!
   2e424:	tst	w5, #0xff
   2e428:	mov	x19, x1
   2e42c:	str	x30, [sp, #32]
   2e430:	stp	xzr, xzr, [sp, #48]
   2e434:	b.eq	2e488 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ba0>  // b.none
   2e438:	mov	x20, x0
   2e43c:	add	x1, sp, #0x30
   2e440:	mov	w0, #0x0                   	// #0
   2e444:	stp	x21, x22, [sp, #16]
   2e448:	mov	x21, x2
   2e44c:	mov	x22, x3
   2e450:	add	x2, sp, #0x38
   2e454:	bl	23a98 <__sanitizer_sandbox_on_notify@@Base+0x450>
   2e458:	ldp	x5, x6, [sp, #48]
   2e45c:	mov	x3, x22
   2e460:	mov	x2, x21
   2e464:	mov	w1, w19
   2e468:	mov	x0, x20
   2e46c:	mov	w7, #0x1                   	// #1
   2e470:	mov	x4, #0x0                   	// #0
   2e474:	bl	283c0 <__sanitizer_cov_dump@@Base+0x17a0>
   2e478:	ldp	x21, x22, [sp, #16]
   2e47c:	ldr	x30, [sp, #32]
   2e480:	ldp	x19, x20, [sp], #64
   2e484:	ret
   2e488:	mov	w7, #0x0                   	// #0
   2e48c:	mov	x6, #0x0                   	// #0
   2e490:	mov	x5, #0x0                   	// #0
   2e494:	bl	283c0 <__sanitizer_cov_dump@@Base+0x17a0>
   2e498:	ldr	x30, [sp, #32]
   2e49c:	ldp	x19, x20, [sp], #64
   2e4a0:	ret
   2e4a4:	nop
   2e4a8:	stp	x19, x30, [sp, #-16]!
   2e4ac:	mov	x19, x0
   2e4b0:	bl	2f5e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6cf8>
   2e4b4:	bl	299b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10c8>
   2e4b8:	mov	x1, x19
   2e4bc:	ldp	x19, x30, [sp], #16
   2e4c0:	b	2ab10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2228>
   2e4c4:	nop
   2e4c8:	ldr	w3, [x0, #320]
   2e4cc:	cmp	w3, #0x8
   2e4d0:	b.eq	2e4f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c10>  // b.none
   2e4d4:	ubfiz	x4, x3, #5, #32
   2e4d8:	add	w3, w3, #0x1
   2e4dc:	add	x4, x4, #0x40
   2e4e0:	str	w3, [x0, #320]
   2e4e4:	add	x3, x0, x4
   2e4e8:	add	x1, x1, #0x4
   2e4ec:	str	wzr, [x0, x4]
   2e4f0:	str	x1, [x3, #16]
   2e4f4:	ret
   2e4f8:	str	x30, [sp, #-16]!
   2e4fc:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2e500:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2e504:	add	x2, x2, #0x200
   2e508:	add	x0, x0, #0x188
   2e50c:	mov	x4, #0x0                   	// #0
   2e510:	mov	x3, #0x0                   	// #0
   2e514:	mov	w1, #0xc0                  	// #192
   2e518:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   2e51c:	nop
   2e520:	stp	x19, x30, [sp, #-16]!
   2e524:	mov	x19, x0
   2e528:	ldr	x0, [x1]
   2e52c:	ldrh	w2, [x0]
   2e530:	cbz	w2, 2e57c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c94>
   2e534:	cmp	w2, #0x1
   2e538:	b.ne	2e604 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d1c>  // b.any
   2e53c:	mov	x0, x1
   2e540:	bl	331b8 <__ubsan_get_current_report_data@@Base+0x390>
   2e544:	ldr	w0, [x19, #320]
   2e548:	cmp	w0, #0x8
   2e54c:	b.eq	2e640 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d58>  // b.none
   2e550:	ubfiz	x1, x0, #5, #32
   2e554:	add	w0, w0, #0x1
   2e558:	add	x1, x1, #0x40
   2e55c:	str	w0, [x19, #320]
   2e560:	add	x0, x19, x1
   2e564:	mov	w2, #0x4                   	// #4
   2e568:	str	w2, [x19, x1]
   2e56c:	str	q0, [x0, #16]
   2e570:	mov	x0, x19
   2e574:	ldp	x19, x30, [sp], #16
   2e578:	ret
   2e57c:	ldrh	w0, [x0, #2]
   2e580:	tbz	w0, #0, 2e5c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5cdc>
   2e584:	mov	x0, x1
   2e588:	bl	32f28 <__ubsan_get_current_report_data@@Base+0x100>
   2e58c:	ldr	w2, [x19, #320]
   2e590:	cmp	w2, #0x8
   2e594:	b.eq	2e640 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d58>  // b.none
   2e598:	ubfiz	x3, x2, #5, #32
   2e59c:	add	w2, w2, #0x1
   2e5a0:	add	x3, x3, #0x40
   2e5a4:	str	w2, [x19, #320]
   2e5a8:	add	x2, x19, x3
   2e5ac:	mov	w4, #0x3                   	// #3
   2e5b0:	str	w4, [x19, x3]
   2e5b4:	stp	x0, x1, [x2, #16]
   2e5b8:	mov	x0, x19
   2e5bc:	ldp	x19, x30, [sp], #16
   2e5c0:	ret
   2e5c4:	mov	x0, x1
   2e5c8:	bl	33010 <__ubsan_get_current_report_data@@Base+0x1e8>
   2e5cc:	ldr	w2, [x19, #320]
   2e5d0:	cmp	w2, #0x8
   2e5d4:	b.eq	2e640 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d58>  // b.none
   2e5d8:	ubfiz	x3, x2, #5, #32
   2e5dc:	add	w2, w2, #0x1
   2e5e0:	add	x3, x3, #0x40
   2e5e4:	str	w2, [x19, #320]
   2e5e8:	add	x2, x19, x3
   2e5ec:	mov	w4, #0x2                   	// #2
   2e5f0:	str	w4, [x19, x3]
   2e5f4:	stp	x0, x1, [x2, #16]
   2e5f8:	mov	x0, x19
   2e5fc:	ldp	x19, x30, [sp], #16
   2e600:	ret
   2e604:	ldr	w0, [x19, #320]
   2e608:	cmp	w0, #0x8
   2e60c:	b.eq	2e640 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d58>  // b.none
   2e610:	ubfiz	x1, x0, #5, #32
   2e614:	add	w0, w0, #0x1
   2e618:	add	x1, x1, #0x40
   2e61c:	str	w0, [x19, #320]
   2e620:	add	x2, x19, x1
   2e624:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2e628:	add	x0, x0, #0x220
   2e62c:	str	wzr, [x19, x1]
   2e630:	str	x0, [x2, #16]
   2e634:	mov	x0, x19
   2e638:	ldp	x19, x30, [sp], #16
   2e63c:	ret
   2e640:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2e644:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2e648:	add	x2, x2, #0x200
   2e64c:	add	x0, x0, #0x188
   2e650:	mov	x4, #0x0                   	// #0
   2e654:	mov	x3, #0x0                   	// #0
   2e658:	mov	w1, #0xc0                  	// #192
   2e65c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   2e660:	stp	x19, x20, [sp, #-208]!
   2e664:	stp	x27, x28, [sp, #64]
   2e668:	adrp	x27, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2e66c:	stp	x21, x22, [sp, #16]
   2e670:	stp	x23, x24, [sp, #32]
   2e674:	mov	x24, x0
   2e678:	stp	x25, x26, [sp, #48]
   2e67c:	str	x30, [sp, #80]
   2e680:	bl	2d990 <__sanitizer_get_module_and_offset_for_pc@@Base+0x50a8>
   2e684:	bl	2c950 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4068>
   2e688:	and	w26, w0, #0xff
   2e68c:	ldr	x19, [x27, #4016]
   2e690:	str	xzr, [sp, #128]
   2e694:	stp	xzr, xzr, [sp, #136]
   2e698:	ldr	x0, [x19]
   2e69c:	cbz	x0, 2e8d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5fe8>
   2e6a0:	sub	x25, x0, #0x1
   2e6a4:	ands	x25, x25, x0
   2e6a8:	b.ne	2ebe0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x62f8>  // b.any
   2e6ac:	add	x19, x0, #0x3ff
   2e6b0:	neg	x0, x0
   2e6b4:	and	x19, x19, x0
   2e6b8:	mov	w2, #0x0                   	// #0
   2e6bc:	mov	x0, x19
   2e6c0:	adrp	x28, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   2e6c4:	add	x1, x28, #0xc10
   2e6c8:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   2e6cc:	ldr	x1, [sp, #128]
   2e6d0:	mov	x20, x0
   2e6d4:	ldr	x2, [sp, #144]
   2e6d8:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   2e6dc:	ldp	x0, x1, [sp, #128]
   2e6e0:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   2e6e4:	stp	x20, x19, [sp, #128]
   2e6e8:	ldr	x2, [sp, #144]
   2e6ec:	cmp	x2, #0x3ff
   2e6f0:	b.hi	2e714 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5e2c>  // b.pmore
   2e6f4:	cmp	x19, #0x3ff
   2e6f8:	b.ls	2eb60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6278>  // b.plast
   2e6fc:	mov	x3, #0x400                 	// #1024
   2e700:	add	x0, x20, x2
   2e704:	mov	w1, #0x0                   	// #0
   2e708:	sub	x2, x3, x2
   2e70c:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   2e710:	ldr	x20, [sp, #128]
   2e714:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   2e718:	add	x19, x24, #0x40
   2e71c:	add	x22, sp, #0x80
   2e720:	ldr	q0, [x0, #1696]
   2e724:	str	q0, [sp, #144]
   2e728:	strb	wzr, [x20]
   2e72c:	ldr	w0, [x24, #40]
   2e730:	cbz	w0, 2e884 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5f9c>
   2e734:	cmp	w26, #0x0
   2e738:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2e73c:	adrp	x20, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2e740:	add	x1, x1, #0x3e8
   2e744:	add	x20, x20, #0x240
   2e748:	mov	x0, x22
   2e74c:	csel	x20, x20, x1, ne  // ne = any
   2e750:	mov	x1, x20
   2e754:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   2e758:	ldp	x2, x3, [x24, #16]
   2e75c:	stp	x2, x3, [sp, #176]
   2e760:	ldp	x0, x1, [x24]
   2e764:	stp	x0, x1, [sp, #160]
   2e768:	ldr	w0, [x24]
   2e76c:	ldr	x2, [x24, #32]
   2e770:	str	x2, [sp, #192]
   2e774:	cmp	w0, #0x2
   2e778:	b.eq	2e92c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6044>  // b.none
   2e77c:	b.hi	2e798 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5eb0>  // b.pmore
   2e780:	cbz	w0, 2e8dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ff4>
   2e784:	ldr	x1, [sp, #168]
   2e788:	cbz	x1, 2e8dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ff4>
   2e78c:	ldp	w2, w3, [sp, #176]
   2e790:	adrp	x4, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2e794:	b	2e7b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ecc>
   2e798:	cmp	w0, #0x3
   2e79c:	b.ne	2e7c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ee0>  // b.any
   2e7a0:	ldr	x1, [x2, #56]
   2e7a4:	add	x0, x2, #0x8
   2e7a8:	cbz	x1, 2ebf0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6308>
   2e7ac:	ldp	w2, w3, [x0, #56]
   2e7b0:	adrp	x4, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2e7b4:	ldr	x4, [x4, #4056]
   2e7b8:	mov	x0, x22
   2e7bc:	ldr	x5, [x4, #24]
   2e7c0:	ldrb	w4, [x4, #189]
   2e7c4:	bl	28ab0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1c8>
   2e7c8:	mov	x0, x22
   2e7cc:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2e7d0:	add	x1, x1, #0x2a8
   2e7d4:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   2e7d8:	ldr	w0, [x24, #40]
   2e7dc:	cbz	w0, 2e904 <__sanitizer_get_module_and_offset_for_pc@@Base+0x601c>
   2e7e0:	cmp	w0, #0x1
   2e7e4:	b.ne	2e808 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5f20>  // b.any
   2e7e8:	cbnz	w26, 2ebcc <__sanitizer_get_module_and_offset_for_pc@@Base+0x62e4>
   2e7ec:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2e7f0:	add	x2, x2, #0x3e8
   2e7f4:	mov	x3, x2
   2e7f8:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2e7fc:	mov	x0, x22
   2e800:	add	x1, x1, #0x2c8
   2e804:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   2e808:	ldr	x1, [x24, #48]
   2e80c:	mov	x2, x19
   2e810:	mov	x0, x22
   2e814:	adrp	x20, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2e818:	bl	2e190 <__sanitizer_get_module_and_offset_for_pc@@Base+0x58a8>
   2e81c:	adrp	x4, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2e820:	cmp	w26, #0x0
   2e824:	add	x0, x4, #0x3e8
   2e828:	adrp	x4, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   2e82c:	add	x4, x4, #0x180
   2e830:	add	x1, x20, #0x7f0
   2e834:	csel	x21, x4, x0, ne  // ne = any
   2e838:	mov	x0, x22
   2e83c:	mov	x2, x21
   2e840:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   2e844:	ldr	x1, [sp, #128]
   2e848:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   2e84c:	add	x0, x0, #0xcb8
   2e850:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   2e854:	ldr	w0, [x24]
   2e858:	cmp	w0, #0x2
   2e85c:	b.eq	2e95c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6074>  // b.none
   2e860:	ldp	x0, x1, [sp, #128]
   2e864:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   2e868:	ldp	x21, x22, [sp, #16]
   2e86c:	ldp	x23, x24, [sp, #32]
   2e870:	ldp	x25, x26, [sp, #48]
   2e874:	ldp	x27, x28, [sp, #64]
   2e878:	ldr	x30, [sp, #80]
   2e87c:	ldp	x19, x20, [sp], #208
   2e880:	ret
   2e884:	ldr	x1, [x24, #48]
   2e888:	mov	x2, x19
   2e88c:	mov	x0, x22
   2e890:	bl	2e190 <__sanitizer_get_module_and_offset_for_pc@@Base+0x58a8>
   2e894:	ldr	w0, [x24, #44]
   2e898:	bl	2ded0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x55e8>
   2e89c:	mov	x1, x0
   2e8a0:	mov	x3, x22
   2e8a4:	add	x0, sp, #0xa0
   2e8a8:	mov	x2, x24
   2e8ac:	bl	32c80 <__ubsan_on_report@@Base+0x8>
   2e8b0:	ldr	x0, [sp, #144]
   2e8b4:	ldr	x1, [sp, #128]
   2e8b8:	cbz	x0, 2ec18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6330>
   2e8bc:	strb	wzr, [x1]
   2e8c0:	str	xzr, [sp, #152]
   2e8c4:	ldp	x0, x1, [sp, #176]
   2e8c8:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   2e8cc:	b	2e734 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5e4c>
   2e8d0:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   2e8d4:	str	x0, [x19]
   2e8d8:	b	2e6a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5db8>
   2e8dc:	mov	x0, x22
   2e8e0:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2e8e4:	add	x1, x1, #0x220
   2e8e8:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   2e8ec:	mov	x0, x22
   2e8f0:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2e8f4:	add	x1, x1, #0x2a8
   2e8f8:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   2e8fc:	ldr	w0, [x24, #40]
   2e900:	cbnz	w0, 2e7e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ef8>
   2e904:	cbnz	w26, 2ebb8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x62d0>
   2e908:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2e90c:	add	x2, x2, #0x3e8
   2e910:	mov	x3, x2
   2e914:	mov	x4, x20
   2e918:	mov	x0, x22
   2e91c:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2e920:	add	x1, x1, #0x2b0
   2e924:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   2e928:	b	2e808 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5f20>
   2e92c:	ldr	x2, [x24, #24]
   2e930:	mov	x0, x22
   2e934:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   2e938:	add	x1, x1, #0xca0
   2e93c:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   2e940:	mov	x0, x22
   2e944:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2e948:	add	x1, x1, #0x2a8
   2e94c:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   2e950:	ldr	w0, [x24, #40]
   2e954:	cbnz	w0, 2e7e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ef8>
   2e958:	b	2e904 <__sanitizer_get_module_and_offset_for_pc@@Base+0x601c>
   2e95c:	ldr	x6, [x24, #24]
   2e960:	add	x0, x24, #0x148
   2e964:	str	x0, [sp, #96]
   2e968:	ldr	w22, [x24, #416]
   2e96c:	cmp	x6, #0x3
   2e970:	b.ls	2eb38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6250>  // b.plast
   2e974:	cmn	x6, #0x5
   2e978:	sub	x25, x6, #0x4
   2e97c:	mov	x2, #0xffffffffffffffff    	// #-1
   2e980:	b.ls	2eb38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6250>  // b.plast
   2e984:	cbz	w22, 2ee90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x65a8>
   2e988:	add	x24, x24, #0x1a0
   2e98c:	sub	w3, w22, #0x1
   2e990:	mov	w0, #0x58                  	// #88
   2e994:	mov	x23, x25
   2e998:	ldr	x1, [sp, #96]
   2e99c:	umaddl	x24, w3, w0, x24
   2e9a0:	ldr	w3, [x1]
   2e9a4:	ldr	x0, [x1, #24]
   2e9a8:	cmp	w3, #0x2
   2e9ac:	b.ne	2eb40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6258>  // b.any
   2e9b0:	ldr	w3, [x1, #40]
   2e9b4:	cmp	x23, x0
   2e9b8:	csel	x23, x23, x0, ls  // ls = plast
   2e9bc:	cmp	w3, #0x2
   2e9c0:	ldr	x0, [x1, #64]
   2e9c4:	b.ne	2eb40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6258>  // b.any
   2e9c8:	cmp	x2, x0
   2e9cc:	add	x1, x1, #0x58
   2e9d0:	csel	x2, x2, x0, cs  // cs = hs, nlast
   2e9d4:	cmp	x24, x1
   2e9d8:	b.ne	2e9a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x60b8>  // b.any
   2e9dc:	sub	x0, x2, x23
   2e9e0:	cmp	x0, #0x20
   2e9e4:	b.ls	2e9f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x610c>  // b.plast
   2e9e8:	sub	x2, x2, #0x20
   2e9ec:	cmp	x2, x25
   2e9f0:	csel	x23, x2, x25, ls  // ls = plast
   2e9f4:	cmn	x23, #0x21
   2e9f8:	add	x25, x23, #0x20
   2e9fc:	mov	x1, #0x20                  	// #32
   2ea00:	b.ls	2ea0c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6124>  // b.plast
   2ea04:	mvn	x1, x23
   2ea08:	mov	x25, #0xffffffffffffffff    	// #-1
   2ea0c:	mov	x0, x23
   2ea10:	str	x6, [sp, #104]
   2ea14:	bl	24b58 <__sanitizer_sandbox_on_notify@@Base+0x1510>
   2ea18:	tst	w0, #0xff
   2ea1c:	ldr	x6, [sp, #104]
   2ea20:	b.eq	2ee18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6530>  // b.none
   2ea24:	ldr	x24, [x27, #4016]
   2ea28:	str	xzr, [sp, #160]
   2ea2c:	stp	xzr, xzr, [sp, #168]
   2ea30:	ldr	x0, [x24]
   2ea34:	cbz	x0, 2ee98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x65b0>
   2ea38:	str	x6, [sp, #104]
   2ea3c:	sub	x1, x0, #0x1
   2ea40:	tst	x1, x0
   2ea44:	b.ne	2ebe0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x62f8>  // b.any
   2ea48:	add	x3, x0, #0x3ff
   2ea4c:	neg	x0, x0
   2ea50:	and	x3, x3, x0
   2ea54:	add	x1, x28, #0xc10
   2ea58:	mov	x0, x3
   2ea5c:	mov	w2, #0x0                   	// #0
   2ea60:	str	x3, [sp, #112]
   2ea64:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   2ea68:	mov	x24, x0
   2ea6c:	ldr	x1, [sp, #160]
   2ea70:	ldr	x2, [sp, #176]
   2ea74:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   2ea78:	ldp	x0, x1, [sp, #160]
   2ea7c:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   2ea80:	ldp	x6, x3, [sp, #104]
   2ea84:	stp	x24, x3, [sp, #160]
   2ea88:	ldr	x2, [sp, #176]
   2ea8c:	cmp	x2, #0x3ff
   2ea90:	b.hi	2eabc <__sanitizer_get_module_and_offset_for_pc@@Base+0x61d4>  // b.pmore
   2ea94:	cmp	x3, #0x3ff
   2ea98:	b.ls	2eec8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x65e0>  // b.plast
   2ea9c:	mov	x3, #0x400                 	// #1024
   2eaa0:	add	x0, x24, x2
   2eaa4:	mov	w1, #0x0                   	// #0
   2eaa8:	sub	x2, x3, x2
   2eaac:	str	x6, [sp, #104]
   2eab0:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   2eab4:	ldr	x6, [sp, #104]
   2eab8:	ldr	x24, [sp, #160]
   2eabc:	adrp	x0, 37000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3398>
   2eac0:	cmp	x23, x25
   2eac4:	ldr	q0, [x0, #1696]
   2eac8:	str	q0, [sp, #176]
   2eacc:	strb	wzr, [x24]
   2ead0:	b.eq	2ef30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6648>  // b.none
   2ead4:	adrp	x28, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   2ead8:	add	x0, x28, #0x110
   2eadc:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2eae0:	mov	x28, x23
   2eae4:	add	x27, x1, #0x2f8
   2eae8:	add	x24, sp, #0xa0
   2eaec:	str	x0, [sp, #112]
   2eaf0:	adrp	x0, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   2eaf4:	add	x0, x0, #0xb28
   2eaf8:	str	x0, [sp, #120]
   2eafc:	b	2eb1c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6234>
   2eb00:	ldr	x2, [sp, #120]
   2eb04:	mov	x1, x27
   2eb08:	mov	x0, x24
   2eb0c:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   2eb10:	cmp	x25, x28
   2eb14:	ldr	x6, [sp, #104]
   2eb18:	b.eq	2ec5c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6374>  // b.none
   2eb1c:	str	x6, [sp, #104]
   2eb20:	tst	x28, #0x7
   2eb24:	ldrb	w3, [x28]
   2eb28:	add	x28, x28, #0x1
   2eb2c:	b.ne	2eb00 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6218>  // b.any
   2eb30:	ldr	x2, [sp, #112]
   2eb34:	b	2eb04 <__sanitizer_get_module_and_offset_for_pc@@Base+0x621c>
   2eb38:	add	x2, x6, #0x4
   2eb3c:	b	2e984 <__sanitizer_get_module_and_offset_for_pc@@Base+0x609c>
   2eb40:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2eb44:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2eb48:	add	x2, x2, #0x168
   2eb4c:	add	x0, x0, #0x188
   2eb50:	mov	x4, #0x0                   	// #0
   2eb54:	mov	x3, #0x0                   	// #0
   2eb58:	mov	w1, #0x56                  	// #86
   2eb5c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   2eb60:	ldr	x19, [x27, #4016]
   2eb64:	ldr	x0, [x19]
   2eb68:	cbz	x0, 2ec50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6368>
   2eb6c:	sub	x1, x0, #0x1
   2eb70:	tst	x1, x0
   2eb74:	b.ne	2ebe0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x62f8>  // b.any
   2eb78:	add	x19, x0, #0x3ff
   2eb7c:	neg	x0, x0
   2eb80:	and	x19, x19, x0
   2eb84:	add	x1, x28, #0xc10
   2eb88:	mov	w2, #0x0                   	// #0
   2eb8c:	mov	x0, x19
   2eb90:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   2eb94:	mov	x20, x0
   2eb98:	ldr	x1, [sp, #128]
   2eb9c:	ldr	x2, [sp, #144]
   2eba0:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   2eba4:	ldp	x0, x1, [sp, #128]
   2eba8:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   2ebac:	stp	x20, x19, [sp, #128]
   2ebb0:	ldr	x2, [sp, #144]
   2ebb4:	b	2e6fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5e14>
   2ebb8:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   2ebbc:	adrp	x3, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   2ebc0:	add	x2, x2, #0x718
   2ebc4:	add	x3, x3, #0x180
   2ebc8:	b	2e914 <__sanitizer_get_module_and_offset_for_pc@@Base+0x602c>
   2ebcc:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2ebd0:	adrp	x3, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   2ebd4:	add	x2, x2, #0x230
   2ebd8:	add	x3, x3, #0x180
   2ebdc:	b	2e7f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5f10>
   2ebe0:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   2ebe4:	add	x0, x0, #0xbf8
   2ebe8:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   2ebec:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   2ebf0:	ldr	x1, [x0, #8]
   2ebf4:	cbz	x1, 2ec38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6350>
   2ebf8:	adrp	x4, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2ebfc:	ldr	w3, [x0, #24]
   2ec00:	ldr	x2, [x0, #16]
   2ec04:	mov	x0, x22
   2ec08:	ldr	x4, [x4, #4056]
   2ec0c:	ldr	x4, [x4, #24]
   2ec10:	bl	28bc0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d8>
   2ec14:	b	2e7c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ee0>
   2ec18:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   2ec1c:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2ec20:	add	x2, x2, #0x118
   2ec24:	add	x0, x0, #0x248
   2ec28:	mov	x4, #0x0                   	// #0
   2ec2c:	mov	x3, #0x0                   	// #0
   2ec30:	mov	w1, #0x1c5                 	// #453
   2ec34:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   2ec38:	ldr	x2, [x2, #8]
   2ec3c:	mov	x0, x22
   2ec40:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   2ec44:	add	x1, x1, #0xca0
   2ec48:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   2ec4c:	b	2e7c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5ee0>
   2ec50:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   2ec54:	str	x0, [x19]
   2ec58:	b	2eb6c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6284>
   2ec5c:	mov	x0, x24
   2ec60:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2ec64:	add	x1, x1, #0x0
   2ec68:	str	x6, [sp, #104]
   2ec6c:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   2ec70:	mov	x27, x23
   2ec74:	cmp	w26, #0x0
   2ec78:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   2ec7c:	add	x2, x2, #0x140
   2ec80:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2ec84:	add	x1, x1, #0x3e8
   2ec88:	mov	x0, x24
   2ec8c:	csel	x1, x2, x1, ne  // ne = any
   2ec90:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   2ec94:	ldr	x1, [sp, #96]
   2ec98:	mov	w2, w22
   2ec9c:	mov	x0, x23
   2eca0:	bl	2e098 <__sanitizer_get_module_and_offset_for_pc@@Base+0x57b0>
   2eca4:	mov	x28, x0
   2eca8:	ldr	x6, [sp, #104]
   2ecac:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   2ecb0:	add	x0, x0, #0xfb8
   2ecb4:	str	x0, [sp, #120]
   2ecb8:	cbz	x28, 2ede4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x64fc>
   2ecbc:	ldr	w0, [x28, #40]
   2ecc0:	ldr	x1, [x28, #64]
   2ecc4:	cmp	w0, #0x2
   2ecc8:	b.ne	2eb40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6258>  // b.any
   2eccc:	cmp	x27, x1
   2ecd0:	b.eq	2ee60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6578>  // b.none
   2ecd4:	ldr	w0, [x28]
   2ecd8:	ldr	x1, [x28, #24]
   2ecdc:	cmp	w0, #0x2
   2ece0:	b.ne	2eb40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6258>  // b.any
   2ece4:	cmp	x27, x1
   2ece8:	b.ls	2edd0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x64e8>  // b.plast
   2ecec:	mov	w26, #0x7e                  	// #126
   2ecf0:	mov	w2, w26
   2ecf4:	tst	x27, #0x7
   2ecf8:	b.eq	2edf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6510>  // b.none
   2ecfc:	adrp	x0, 3c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x8398>
   2ed00:	add	x1, x0, #0xfb8
   2ed04:	mov	x0, x24
   2ed08:	stp	x1, x6, [sp, #104]
   2ed0c:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   2ed10:	ldp	x1, x6, [sp, #104]
   2ed14:	cmp	x6, x27
   2ed18:	b.eq	2ee28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6540>  // b.none
   2ed1c:	mov	w2, w26
   2ed20:	mov	x0, x24
   2ed24:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   2ed28:	add	x27, x27, #0x1
   2ed2c:	ldr	x1, [sp, #104]
   2ed30:	mov	w2, w26
   2ed34:	mov	x0, x24
   2ed38:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   2ed3c:	cmp	x27, x25
   2ed40:	ldr	x6, [sp, #112]
   2ed44:	b.ne	2ecb8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x63d0>  // b.any
   2ed48:	add	x1, x20, #0x7f0
   2ed4c:	mov	w26, #0x0                   	// #0
   2ed50:	mov	x20, #0x0                   	// #0
   2ed54:	mov	x2, x21
   2ed58:	mov	x0, x24
   2ed5c:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   2ed60:	cbz	x20, 2eeac <__sanitizer_get_module_and_offset_for_pc@@Base+0x65c4>
   2ed64:	ldr	w0, [x20, #40]
   2ed68:	ldr	x1, [x20, #64]
   2ed6c:	cmp	w0, #0x2
   2ed70:	b.ne	2eb40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6258>  // b.any
   2ed74:	cmp	x23, x1
   2ed78:	b.eq	2eeac <__sanitizer_get_module_and_offset_for_pc@@Base+0x65c4>  // b.none
   2ed7c:	tst	x23, #0x7
   2ed80:	ldr	w1, [x20]
   2ed84:	cset	w0, eq  // eq = none
   2ed88:	add	w0, w0, #0x1
   2ed8c:	cmp	w1, #0x2
   2ed90:	add	w0, w26, w0
   2ed94:	ldr	x1, [x20, #24]
   2ed98:	b.ne	2eb40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6258>  // b.any
   2ed9c:	cmp	x23, x1
   2eda0:	b.eq	2ef9c <__sanitizer_get_module_and_offset_for_pc@@Base+0x66b4>  // b.none
   2eda4:	add	x23, x23, #0x1
   2eda8:	add	w26, w0, #0x2
   2edac:	cmp	x25, x23
   2edb0:	b.ne	2ed60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6478>  // b.any
   2edb4:	ldr	x1, [sp, #160]
   2edb8:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   2edbc:	add	x0, x0, #0xcb8
   2edc0:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   2edc4:	ldp	x0, x1, [sp, #160]
   2edc8:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   2edcc:	b	2e860 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5f78>
   2edd0:	mov	w26, #0x20                  	// #32
   2edd4:	mov	w0, #0x7e                  	// #126
   2edd8:	csel	w2, w26, w26, cc  // cc = lo, ul, last
   2eddc:	csel	w26, w26, w0, cc  // cc = lo, ul, last
   2ede0:	b	2ecf4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x640c>
   2ede4:	cmp	x6, x27
   2ede8:	b.cc	2ed48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6460>  // b.lo, b.ul, b.last
   2edec:	mov	w26, #0x20                  	// #32
   2edf0:	mov	w2, w26
   2edf4:	b	2ecf4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x640c>
   2edf8:	ldr	x1, [sp, #120]
   2edfc:	mov	x0, x24
   2ee00:	str	w2, [sp, #104]
   2ee04:	str	x6, [sp, #112]
   2ee08:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   2ee0c:	ldr	w2, [sp, #104]
   2ee10:	ldr	x6, [sp, #112]
   2ee14:	b	2ecfc <__sanitizer_get_module_and_offset_for_pc@@Base+0x6414>
   2ee18:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2ee1c:	add	x0, x0, #0x2d8
   2ee20:	bl	1fc30 <__sanitizer_on_print@@Base+0x310>
   2ee24:	b	2e860 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5f78>
   2ee28:	mov	x0, x24
   2ee2c:	mov	w2, #0x5e                  	// #94
   2ee30:	stp	x1, x6, [sp, #104]
   2ee34:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   2ee38:	mov	w2, w26
   2ee3c:	ldp	x1, x6, [sp, #104]
   2ee40:	mov	x0, x24
   2ee44:	str	x6, [sp, #104]
   2ee48:	add	x27, x6, #0x1
   2ee4c:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   2ee50:	cmp	x25, x27
   2ee54:	ldr	x6, [sp, #104]
   2ee58:	b.ne	2ecb8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x63d0>  // b.any
   2ee5c:	b	2ed48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6460>
   2ee60:	ldr	x1, [sp, #96]
   2ee64:	mov	w2, w22
   2ee68:	mov	x0, x27
   2ee6c:	str	x6, [sp, #104]
   2ee70:	bl	2e098 <__sanitizer_get_module_and_offset_for_pc@@Base+0x57b0>
   2ee74:	cmp	x0, #0x0
   2ee78:	ldr	x6, [sp, #104]
   2ee7c:	mov	x28, x0
   2ee80:	ccmp	x6, x27, #0x2, eq  // eq = none
   2ee84:	b.cc	2ed48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6460>  // b.lo, b.ul, b.last
   2ee88:	cbnz	x0, 2ecd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x63ec>
   2ee8c:	b	2edec <__sanitizer_get_module_and_offset_for_pc@@Base+0x6504>
   2ee90:	mov	x23, x25
   2ee94:	b	2e9dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x60f4>
   2ee98:	str	x6, [sp, #104]
   2ee9c:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   2eea0:	str	x0, [x24]
   2eea4:	ldr	x6, [sp, #104]
   2eea8:	b	2ea38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6150>
   2eeac:	ldr	x1, [sp, #96]
   2eeb0:	mov	w2, w22
   2eeb4:	mov	x0, x23
   2eeb8:	bl	2e098 <__sanitizer_get_module_and_offset_for_pc@@Base+0x57b0>
   2eebc:	mov	x20, x0
   2eec0:	cbnz	x0, 2ed7c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6494>
   2eec4:	b	2edb4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x64cc>
   2eec8:	ldr	x24, [x27, #4016]
   2eecc:	ldr	x0, [x24]
   2eed0:	cbz	x0, 2ef7c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6694>
   2eed4:	ldr	x27, [x27, #4016]
   2eed8:	str	x6, [sp, #104]
   2eedc:	ldr	x0, [x27]
   2eee0:	sub	x1, x0, #0x1
   2eee4:	tst	x1, x0
   2eee8:	b.ne	2ebe0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x62f8>  // b.any
   2eeec:	add	x27, x0, #0x3ff
   2eef0:	neg	x0, x0
   2eef4:	and	x27, x27, x0
   2eef8:	add	x1, x28, #0xc10
   2eefc:	mov	w2, #0x0                   	// #0
   2ef00:	mov	x0, x27
   2ef04:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   2ef08:	mov	x24, x0
   2ef0c:	ldr	x1, [sp, #160]
   2ef10:	ldr	x2, [sp, #176]
   2ef14:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   2ef18:	ldp	x0, x1, [sp, #160]
   2ef1c:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   2ef20:	stp	x24, x27, [sp, #160]
   2ef24:	ldr	x6, [sp, #104]
   2ef28:	ldr	x2, [sp, #176]
   2ef2c:	b	2ea9c <__sanitizer_get_module_and_offset_for_pc@@Base+0x61b4>
   2ef30:	add	x24, sp, #0xa0
   2ef34:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2ef38:	mov	x0, x24
   2ef3c:	add	x1, x1, #0x0
   2ef40:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   2ef44:	cbnz	w26, 2ef8c <__sanitizer_get_module_and_offset_for_pc@@Base+0x66a4>
   2ef48:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2ef4c:	mov	x0, x24
   2ef50:	add	x1, x1, #0x3e8
   2ef54:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   2ef58:	ldr	x1, [sp, #96]
   2ef5c:	mov	w2, w22
   2ef60:	mov	x0, x23
   2ef64:	bl	2e098 <__sanitizer_get_module_and_offset_for_pc@@Base+0x57b0>
   2ef68:	mov	x2, x21
   2ef6c:	add	x1, x20, #0x7f0
   2ef70:	mov	x0, x24
   2ef74:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   2ef78:	b	2edb4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x64cc>
   2ef7c:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   2ef80:	str	x0, [x24]
   2ef84:	ldr	x6, [sp, #104]
   2ef88:	b	2eed4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x65ec>
   2ef8c:	adrp	x1, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   2ef90:	mov	x0, x24
   2ef94:	add	x1, x1, #0x140
   2ef98:	b	2ef54 <__sanitizer_get_module_and_offset_for_pc@@Base+0x666c>
   2ef9c:	adrp	x22, 38000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4398>
   2efa0:	sub	w23, w0, #0x1
   2efa4:	add	x22, x22, #0xb28
   2efa8:	cbz	w0, 2efc4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x66dc>
   2efac:	sub	w23, w23, #0x1
   2efb0:	mov	x1, x22
   2efb4:	mov	x0, x24
   2efb8:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   2efbc:	cmn	w23, #0x1
   2efc0:	b.ne	2efac <__sanitizer_get_module_and_offset_for_pc@@Base+0x66c4>  // b.any
   2efc4:	ldr	x1, [x20, #80]
   2efc8:	mov	x2, x19
   2efcc:	mov	x0, x24
   2efd0:	bl	2e190 <__sanitizer_get_module_and_offset_for_pc@@Base+0x58a8>
   2efd4:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2efd8:	add	x1, x0, #0x0
   2efdc:	mov	x0, x24
   2efe0:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   2efe4:	b	2edb4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x64cc>
   2efe8:	b	2f5e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6cf8>
   2efec:	nop
   2eff0:	stp	x19, x20, [sp, #-48]!
   2eff4:	mov	x19, x0
   2eff8:	mov	x20, x2
   2effc:	stp	x21, x22, [sp, #16]
   2f000:	mov	x21, x1
   2f004:	mov	w22, w3
   2f008:	str	x30, [sp, #32]
   2f00c:	bl	2f5e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6cf8>
   2f010:	add	x0, x19, #0x1
   2f014:	bl	2d810 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f28>
   2f018:	ldp	x2, x3, [x21]
   2f01c:	stp	x2, x3, [x19, #8]
   2f020:	ldp	x2, x3, [x20]
   2f024:	stp	x2, x3, [x19, #32]
   2f028:	ldr	x1, [x21, #16]
   2f02c:	ldp	x2, x3, [x20, #16]
   2f030:	stp	x2, x3, [x19, #48]
   2f034:	ldr	x30, [sp, #32]
   2f038:	str	x1, [x19, #24]
   2f03c:	ldr	x1, [x20, #32]
   2f040:	str	w22, [x19, #72]
   2f044:	ldp	x21, x22, [sp, #16]
   2f048:	str	x1, [x19, #64]
   2f04c:	ldp	x19, x20, [sp], #48
   2f050:	ret
   2f054:	nop
   2f058:	stp	x19, x20, [sp, #-176]!
   2f05c:	mov	x19, x0
   2f060:	adrp	x20, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2f064:	ldr	x0, [x0, #16]
   2f068:	ldr	x1, [x19, #24]
   2f06c:	str	x30, [sp, #48]
   2f070:	bl	2e348 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5a60>
   2f074:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2f078:	ldr	w0, [x19, #72]
   2f07c:	ldp	x2, x3, [x19, #32]
   2f080:	stp	x2, x3, [sp, #72]
   2f084:	ldr	x1, [x1, #4056]
   2f088:	ldp	x2, x3, [x19, #48]
   2f08c:	stp	x2, x3, [sp, #88]
   2f090:	ldrb	w1, [x1, #60]
   2f094:	cbz	w1, 2f0dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x67f4>
   2f098:	ldr	x1, [x20, #3704]
   2f09c:	stp	x21, x22, [sp, #16]
   2f0a0:	ldrb	w1, [x1, #16]
   2f0a4:	cmp	w1, #0x0
   2f0a8:	csel	w0, w0, wzr, ne  // ne = any
   2f0ac:	bl	2ded0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x55e8>
   2f0b0:	ldr	w22, [x19, #32]
   2f0b4:	mov	x21, x0
   2f0b8:	cmp	w22, #0x1
   2f0bc:	b.eq	2f120 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6838>  // b.none
   2f0c0:	cmp	w22, #0x3
   2f0c4:	b.eq	2f0fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x6814>  // b.none
   2f0c8:	bl	2f518 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6c30>
   2f0cc:	mov	x1, x0
   2f0d0:	mov	x0, x21
   2f0d4:	bl	151d0 <__sanitizer_report_error_summary@@Base+0x10>
   2f0d8:	ldp	x21, x22, [sp, #16]
   2f0dc:	ldr	x20, [x20, #3704]
   2f0e0:	ldrb	w0, [x20]
   2f0e4:	cbnz	w0, 2f184 <__sanitizer_get_module_and_offset_for_pc@@Base+0x689c>
   2f0e8:	add	x0, x19, #0x1
   2f0ec:	bl	2d978 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5090>
   2f0f0:	ldr	x30, [sp, #48]
   2f0f4:	ldp	x19, x20, [sp], #176
   2f0f8:	ret
   2f0fc:	ldr	x22, [x19, #64]
   2f100:	bl	2f518 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6c30>
   2f104:	mov	x2, x0
   2f108:	mov	x0, x21
   2f10c:	add	x22, x22, #0x8
   2f110:	mov	x1, x22
   2f114:	bl	2c8e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3ff8>
   2f118:	ldp	x21, x22, [sp, #16]
   2f11c:	b	2f0dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x67f4>
   2f120:	ldr	x22, [sp, #80]
   2f124:	cbz	x22, 2f0c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x67e0>
   2f128:	stp	x23, x24, [sp, #32]
   2f12c:	add	x23, sp, #0x70
   2f130:	mov	x0, x23
   2f134:	ldr	x24, [sp, #88]
   2f138:	bl	290f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x808>
   2f13c:	mov	x0, x22
   2f140:	bl	1a360 <__sanitizer_set_report_fd@@Base+0x24e0>
   2f144:	mov	x1, x0
   2f148:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2f14c:	add	x0, x0, #0x3e8
   2f150:	stp	x1, x24, [sp, #160]
   2f154:	bl	1a360 <__sanitizer_set_report_fd@@Base+0x24e0>
   2f158:	str	x0, [sp, #144]
   2f15c:	bl	2f518 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6c30>
   2f160:	mov	x2, x0
   2f164:	mov	x1, x23
   2f168:	mov	x0, x21
   2f16c:	bl	2c8e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3ff8>
   2f170:	mov	x0, x23
   2f174:	bl	29118 <__sanitizer_get_module_and_offset_for_pc@@Base+0x830>
   2f178:	ldp	x21, x22, [sp, #16]
   2f17c:	ldp	x23, x24, [sp, #32]
   2f180:	b	2f0dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x67f4>
   2f184:	stp	x21, x22, [sp, #16]
   2f188:	stp	x23, x24, [sp, #32]
   2f18c:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   2f190:	stp	x19, x20, [sp, #-32]!
   2f194:	adrp	x20, 930000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e0>
   2f198:	ldr	x4, [x20, #3392]
   2f19c:	str	x30, [sp, #16]
   2f1a0:	cbnz	x4, 2f1e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x68f8>
   2f1a4:	add	x19, x20, #0xd40
   2f1a8:	mov	w2, #0x21                  	// #33
   2f1ac:	add	x19, x19, #0x40
   2f1b0:	adrp	x1, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28398>
   2f1b4:	mov	x0, x19
   2f1b8:	add	x1, x1, #0xb30
   2f1bc:	bl	20f70 <__sanitizer_on_print@@Base+0x1650>
   2f1c0:	str	x19, [x20, #3392]
   2f1c4:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2f1c8:	mov	x0, x19
   2f1cc:	ldr	x30, [sp, #16]
   2f1d0:	ldr	x1, [x1, #3704]
   2f1d4:	ldp	x19, x20, [sp], #32
   2f1d8:	ldr	x1, [x1, #8]
   2f1dc:	b	20fc8 <__sanitizer_on_print@@Base+0x16a8>
   2f1e0:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2f1e4:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2f1e8:	add	x2, x2, #0x300
   2f1ec:	add	x0, x0, #0x120
   2f1f0:	mov	x3, #0x0                   	// #0
   2f1f4:	mov	w1, #0x196                 	// #406
   2f1f8:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   2f1fc:	nop
   2f200:	stp	x19, x30, [sp, #-32]!
   2f204:	mov	x19, x0
   2f208:	bl	2f5e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6cf8>
   2f20c:	adrp	x0, 930000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e0>
   2f210:	ldr	x0, [x0, #3392]
   2f214:	cbz	x0, 2f234 <__sanitizer_get_module_and_offset_for_pc@@Base+0x694c>
   2f218:	mov	x1, x19
   2f21c:	add	x3, sp, #0x18
   2f220:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2f224:	add	x2, x2, #0x490
   2f228:	bl	21338 <__sanitizer_on_print@@Base+0x1a18>
   2f22c:	ldp	x19, x30, [sp], #32
   2f230:	ret
   2f234:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2f238:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2f23c:	add	x2, x2, #0x328
   2f240:	add	x0, x0, #0x120
   2f244:	mov	x4, #0x0                   	// #0
   2f248:	mov	x3, #0x0                   	// #0
   2f24c:	mov	w1, #0x19e                 	// #414
   2f250:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   2f254:	nop
   2f258:	stp	x19, x20, [sp, #-96]!
   2f25c:	mov	w19, w0
   2f260:	mov	x20, x2
   2f264:	stp	x21, x22, [sp, #16]
   2f268:	adrp	x22, 930000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e0>
   2f26c:	mov	x21, x1
   2f270:	stp	x23, x24, [sp, #32]
   2f274:	str	x30, [sp, #48]
   2f278:	bl	2f5e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6cf8>
   2f27c:	ldr	x0, [x22, #3392]
   2f280:	cbz	x0, 2f3ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x6ac4>
   2f284:	cmp	w19, #0x1f
   2f288:	b.hi	2f4f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6c10>  // b.pmore
   2f28c:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2f290:	add	x1, x1, #0x450
   2f294:	ldrh	w1, [x1, w19, uxtw #1]
   2f298:	adr	x2, 2f2a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x69bc>
   2f29c:	add	x1, x2, w1, sxth #2
   2f2a0:	br	x1
   2f2a4:	adrp	x19, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2f2a8:	add	x19, x19, #0xe20
   2f2ac:	mov	x1, x19
   2f2b0:	bl	21460 <__sanitizer_on_print@@Base+0x1b40>
   2f2b4:	ands	w23, w0, #0xff
   2f2b8:	b.eq	2f358 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6a70>  // b.none
   2f2bc:	str	xzr, [sp, #72]
   2f2c0:	cbz	x20, 2f388 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6aa0>
   2f2c4:	ldr	x0, [x22, #3392]
   2f2c8:	add	x24, sp, #0x48
   2f2cc:	mov	x1, x20
   2f2d0:	mov	x3, x24
   2f2d4:	mov	x2, x19
   2f2d8:	bl	21338 <__sanitizer_on_print@@Base+0x1a18>
   2f2dc:	tst	w0, #0xff
   2f2e0:	b.ne	2f358 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6a70>  // b.any
   2f2e4:	bl	299b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10c8>
   2f2e8:	str	xzr, [sp, #80]
   2f2ec:	add	x3, sp, #0x58
   2f2f0:	add	x2, sp, #0x50
   2f2f4:	mov	x1, x21
   2f2f8:	bl	2a0a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x17b8>
   2f2fc:	tst	w0, #0xff
   2f300:	b.eq	2f324 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6a3c>  // b.none
   2f304:	ldr	x1, [sp, #80]
   2f308:	cbz	x1, 2f324 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6a3c>
   2f30c:	ldr	x0, [x22, #3392]
   2f310:	mov	x3, x24
   2f314:	mov	x2, x19
   2f318:	bl	21338 <__sanitizer_on_print@@Base+0x1a18>
   2f31c:	tst	w0, #0xff
   2f320:	b.ne	2f358 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6a70>  // b.any
   2f324:	bl	299b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10c8>
   2f328:	mov	x1, x21
   2f32c:	bl	2ab10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2228>
   2f330:	mov	x20, x0
   2f334:	mov	x3, x24
   2f338:	ldr	x0, [x22, #3392]
   2f33c:	mov	x2, x19
   2f340:	ldr	x1, [x20, #40]
   2f344:	bl	21338 <__sanitizer_on_print@@Base+0x1a18>
   2f348:	ands	w23, w0, #0xff
   2f34c:	b.eq	2f390 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6aa8>  // b.none
   2f350:	mov	x0, x20
   2f354:	bl	29220 <__sanitizer_get_module_and_offset_for_pc@@Base+0x938>
   2f358:	mov	w0, w23
   2f35c:	ldp	x21, x22, [sp, #16]
   2f360:	ldp	x23, x24, [sp, #32]
   2f364:	ldr	x30, [sp, #48]
   2f368:	ldp	x19, x20, [sp], #96
   2f36c:	ret
   2f370:	adrp	x19, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2f374:	add	x19, x19, #0x428
   2f378:	b	2f2ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x69c4>
   2f37c:	adrp	x19, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2f380:	add	x19, x19, #0x370
   2f384:	b	2f2ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x69c4>
   2f388:	add	x24, sp, #0x48
   2f38c:	b	2f2e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x69fc>
   2f390:	ldr	x0, [x22, #3392]
   2f394:	mov	x3, x24
   2f398:	ldr	x1, [x20, #56]
   2f39c:	mov	x2, x19
   2f3a0:	bl	21338 <__sanitizer_on_print@@Base+0x1a18>
   2f3a4:	and	w23, w0, #0xff
   2f3a8:	b	2f350 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6a68>
   2f3ac:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2f3b0:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2f3b4:	add	x2, x2, #0x328
   2f3b8:	add	x0, x0, #0x120
   2f3bc:	mov	x4, #0x0                   	// #0
   2f3c0:	mov	x3, #0x0                   	// #0
   2f3c4:	mov	w1, #0x1a5                 	// #421
   2f3c8:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   2f3cc:	adrp	x19, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2f3d0:	add	x19, x19, #0x3a0
   2f3d4:	b	2f2ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x69c4>
   2f3d8:	adrp	x19, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2f3dc:	add	x19, x19, #0x360
   2f3e0:	b	2f2ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x69c4>
   2f3e4:	adrp	x19, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2f3e8:	add	x19, x19, #0x348
   2f3ec:	b	2f2ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x69c4>
   2f3f0:	adrp	x19, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb398>
   2f3f4:	add	x19, x19, #0x468
   2f3f8:	b	2f2ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x69c4>
   2f3fc:	adrp	x19, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2f400:	add	x19, x19, #0x388
   2f404:	b	2f2ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x69c4>
   2f408:	adrp	x19, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2f40c:	add	x19, x19, #0x380
   2f410:	b	2f2ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x69c4>
   2f414:	adrp	x19, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2f418:	add	x19, x19, #0x350
   2f41c:	b	2f2ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x69c4>
   2f420:	adrp	x19, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2f424:	add	x19, x19, #0x420
   2f428:	b	2f2ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x69c4>
   2f42c:	adrp	x19, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2f430:	add	x19, x19, #0x418
   2f434:	b	2f2ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x69c4>
   2f438:	adrp	x19, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2f43c:	add	x19, x19, #0x38
   2f440:	b	2f2ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x69c4>
   2f444:	adrp	x19, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2f448:	add	x19, x19, #0x408
   2f44c:	b	2f2ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x69c4>
   2f450:	adrp	x19, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2f454:	add	x19, x19, #0x18
   2f458:	b	2f2ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x69c4>
   2f45c:	adrp	x19, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2f460:	add	x19, x19, #0x3f8
   2f464:	b	2f2ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x69c4>
   2f468:	adrp	x19, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2f46c:	add	x19, x19, #0x3f0
   2f470:	b	2f2ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x69c4>
   2f474:	adrp	x19, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2f478:	add	x19, x19, #0xfd0
   2f47c:	b	2f2ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x69c4>
   2f480:	adrp	x19, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2f484:	add	x19, x19, #0xfb8
   2f488:	b	2f2ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x69c4>
   2f48c:	adrp	x19, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2f490:	add	x19, x19, #0x3b0
   2f494:	b	2f2ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x69c4>
   2f498:	adrp	x19, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2f49c:	add	x19, x19, #0xf58
   2f4a0:	b	2f2ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x69c4>
   2f4a4:	adrp	x19, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2f4a8:	add	x19, x19, #0xf30
   2f4ac:	b	2f2ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x69c4>
   2f4b0:	adrp	x19, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2f4b4:	add	x19, x19, #0xf08
   2f4b8:	b	2f2ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x69c4>
   2f4bc:	adrp	x19, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2f4c0:	add	x19, x19, #0xef0
   2f4c4:	b	2f2ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x69c4>
   2f4c8:	adrp	x19, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2f4cc:	add	x19, x19, #0xed8
   2f4d0:	b	2f2ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x69c4>
   2f4d4:	adrp	x19, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2f4d8:	add	x19, x19, #0xec0
   2f4dc:	b	2f2ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x69c4>
   2f4e0:	adrp	x19, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2f4e4:	add	x19, x19, #0xea0
   2f4e8:	b	2f2ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x69c4>
   2f4ec:	adrp	x19, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2f4f0:	add	x19, x19, #0xe88
   2f4f4:	b	2f2ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x69c4>
   2f4f8:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2f4fc:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2f500:	add	x2, x2, #0xf8
   2f504:	add	x0, x0, #0x120
   2f508:	mov	x4, #0x0                   	// #0
   2f50c:	mov	x3, #0x0                   	// #0
   2f510:	mov	w1, #0x4d                  	// #77
   2f514:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   2f518:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2f51c:	add	x0, x0, #0x4a0
   2f520:	ret
   2f524:	nop
   2f528:	stp	x19, x20, [sp, #-32]!
   2f52c:	adrp	x19, 930000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e0>
   2f530:	add	x0, x19, #0xdf0
   2f534:	mov	w2, #0x1                   	// #1
   2f538:	str	x30, [sp, #24]
   2f53c:	ldxrb	w1, [x0]
   2f540:	stxrb	w3, w2, [x0]
   2f544:	cbnz	w3, 2f53c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6c54>
   2f548:	dmb	ish
   2f54c:	tst	w1, #0xff
   2f550:	b.eq	2f558 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6c70>  // b.none
   2f554:	bl	85d8 <__sanitizer_print_stack_trace@@Base+0x300>
   2f558:	add	x20, x19, #0xdf0
   2f55c:	ldrb	w0, [x20, #1]
   2f560:	cbz	w0, 2f578 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6c90>
   2f564:	dmb	ish
   2f568:	strb	wzr, [x19, #3568]
   2f56c:	ldr	x30, [sp, #24]
   2f570:	ldp	x19, x20, [sp], #32
   2f574:	ret
   2f578:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2f57c:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2f580:	add	x1, x1, #0x4a0
   2f584:	str	x21, [sp, #16]
   2f588:	ldr	x0, [x0, #4024]
   2f58c:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2f590:	str	x1, [x0]
   2f594:	bl	14f38 <_ZdaPvRKSt9nothrow_t@@Base+0x31b8>
   2f598:	bl	2f860 <__ubsan_default_options@@Base+0x158>
   2f59c:	ldr	x21, [x21, #4056]
   2f5a0:	ldr	x0, [x21, #40]
   2f5a4:	bl	6650 <__sanitizer_set_report_path@plt>
   2f5a8:	bl	24328 <__sanitizer_sandbox_on_notify@@Base+0xce0>
   2f5ac:	ldrb	w0, [x21, #169]
   2f5b0:	ldr	x1, [x21, #176]
   2f5b4:	bl	26678 <__sanitizer_sandbox_on_notify@@Base+0x3030>
   2f5b8:	bl	2f190 <__sanitizer_get_module_and_offset_for_pc@@Base+0x68a8>
   2f5bc:	mov	w0, #0x1                   	// #1
   2f5c0:	strb	w0, [x20, #1]
   2f5c4:	ldr	x21, [sp, #16]
   2f5c8:	dmb	ish
   2f5cc:	strb	wzr, [x19, #3568]
   2f5d0:	ldr	x30, [sp, #24]
   2f5d4:	ldp	x19, x20, [sp], #32
   2f5d8:	ret
   2f5dc:	nop
   2f5e0:	stp	x19, x20, [sp, #-32]!
   2f5e4:	adrp	x19, 930000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e0>
   2f5e8:	add	x0, x19, #0xdf0
   2f5ec:	mov	w2, #0x1                   	// #1
   2f5f0:	str	x30, [sp, #24]
   2f5f4:	ldxrb	w1, [x0]
   2f5f8:	stxrb	w3, w2, [x0]
   2f5fc:	cbnz	w3, 2f5f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6d0c>
   2f600:	dmb	ish
   2f604:	tst	w1, #0xff
   2f608:	b.eq	2f610 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6d28>  // b.none
   2f60c:	bl	85d8 <__sanitizer_print_stack_trace@@Base+0x300>
   2f610:	add	x20, x19, #0xdf0
   2f614:	ldrb	w0, [x20, #1]
   2f618:	cbz	w0, 2f630 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6d48>
   2f61c:	dmb	ish
   2f620:	strb	wzr, [x19, #3568]
   2f624:	ldr	x30, [sp, #24]
   2f628:	ldp	x19, x20, [sp], #32
   2f62c:	ret
   2f630:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2f634:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2f638:	add	x1, x1, #0x4a0
   2f63c:	str	x21, [sp, #16]
   2f640:	ldr	x0, [x0, #4024]
   2f644:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2f648:	str	x1, [x0]
   2f64c:	bl	14f38 <_ZdaPvRKSt9nothrow_t@@Base+0x31b8>
   2f650:	bl	2f860 <__ubsan_default_options@@Base+0x158>
   2f654:	ldr	x21, [x21, #4056]
   2f658:	ldr	x0, [x21, #40]
   2f65c:	bl	6650 <__sanitizer_set_report_path@plt>
   2f660:	bl	24328 <__sanitizer_sandbox_on_notify@@Base+0xce0>
   2f664:	ldrb	w0, [x21, #169]
   2f668:	ldr	x1, [x21, #176]
   2f66c:	bl	26678 <__sanitizer_sandbox_on_notify@@Base+0x3030>
   2f670:	bl	2f190 <__sanitizer_get_module_and_offset_for_pc@@Base+0x68a8>
   2f674:	mov	w0, #0x1                   	// #1
   2f678:	strb	w0, [x20, #1]
   2f67c:	ldr	x21, [sp, #16]
   2f680:	dmb	ish
   2f684:	strb	wzr, [x19, #3568]
   2f688:	ldr	x30, [sp, #24]
   2f68c:	ldp	x19, x20, [sp], #32
   2f690:	ret
   2f694:	nop
   2f698:	stp	x19, x20, [sp, #-32]!
   2f69c:	adrp	x19, 930000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e0>
   2f6a0:	add	x0, x19, #0xdf0
   2f6a4:	mov	w2, #0x1                   	// #1
   2f6a8:	str	x30, [sp, #16]
   2f6ac:	ldxrb	w1, [x0]
   2f6b0:	stxrb	w3, w2, [x0]
   2f6b4:	cbnz	w3, 2f6ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x6dc4>
   2f6b8:	dmb	ish
   2f6bc:	tst	w1, #0xff
   2f6c0:	b.eq	2f6c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6de0>  // b.none
   2f6c4:	bl	85d8 <__sanitizer_print_stack_trace@@Base+0x300>
   2f6c8:	add	x20, x19, #0xdf0
   2f6cc:	ldrb	w0, [x20, #1]
   2f6d0:	cbz	w0, 2f6e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6e00>
   2f6d4:	dmb	ish
   2f6d8:	strb	wzr, [x19, #3568]
   2f6dc:	ldr	x30, [sp, #16]
   2f6e0:	ldp	x19, x20, [sp], #32
   2f6e4:	ret
   2f6e8:	bl	2f190 <__sanitizer_get_module_and_offset_for_pc@@Base+0x68a8>
   2f6ec:	mov	w0, #0x1                   	// #1
   2f6f0:	strb	w0, [x20, #1]
   2f6f4:	dmb	ish
   2f6f8:	strb	wzr, [x19, #3568]
   2f6fc:	ldr	x30, [sp, #16]
   2f700:	ldp	x19, x20, [sp], #32
   2f704:	ret

000000000002f708 <__ubsan_default_options@@Base>:
   2f708:	adrp	x0, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2f70c:	add	x0, x0, #0x3e8
   2f710:	ret
   2f714:	nop
   2f718:	b	6600 <__ubsan_default_options@plt>
   2f71c:	nop
   2f720:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2f724:	add	x1, x1, #0x3e8
   2f728:	strh	wzr, [x0]
   2f72c:	str	x1, [x0, #8]
   2f730:	strh	wzr, [x0, #16]
   2f734:	ret
   2f738:	stp	x19, x20, [sp, #-48]!
   2f73c:	mov	x20, x0
   2f740:	mov	x19, x1
   2f744:	stp	x21, x22, [sp, #16]
   2f748:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2f74c:	mov	x1, #0x10                  	// #16
   2f750:	ldr	x21, [x21, #3632]
   2f754:	str	x30, [sp, #32]
   2f758:	adrp	x22, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2f75c:	add	x22, x22, #0x8b8
   2f760:	mov	x0, x21
   2f764:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   2f768:	mov	x2, x0
   2f76c:	adrp	x3, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2f770:	add	x3, x3, #0x4c0
   2f774:	mov	x0, x20
   2f778:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   2f77c:	add	x1, x1, #0x370
   2f780:	stp	x22, x19, [x2]
   2f784:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   2f788:	mov	x0, x21
   2f78c:	mov	x1, #0x10                  	// #16
   2f790:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   2f794:	mov	x2, x0
   2f798:	add	x4, x19, #0x1
   2f79c:	adrp	x3, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2f7a0:	add	x3, x3, #0x4f8
   2f7a4:	mov	x0, x20
   2f7a8:	stp	x22, x4, [x2]
   2f7ac:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2f7b0:	add	x1, x1, #0x528
   2f7b4:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   2f7b8:	mov	x0, x21
   2f7bc:	mov	x1, #0x10                  	// #16
   2f7c0:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   2f7c4:	mov	x2, x0
   2f7c8:	add	x1, x19, #0x8
   2f7cc:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2f7d0:	adrp	x3, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2f7d4:	add	x0, x0, #0x998
   2f7d8:	add	x3, x3, #0x540
   2f7dc:	stp	x0, x1, [x2]
   2f7e0:	mov	x0, x20
   2f7e4:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2f7e8:	add	x1, x1, #0x558
   2f7ec:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   2f7f0:	mov	x0, x21
   2f7f4:	mov	x1, #0x10                  	// #16
   2f7f8:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   2f7fc:	mov	x2, x0
   2f800:	add	x4, x19, #0x10
   2f804:	adrp	x3, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2f808:	add	x3, x3, #0x568
   2f80c:	mov	x0, x20
   2f810:	stp	x22, x4, [x2]
   2f814:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2f818:	add	x1, x1, #0x5b0
   2f81c:	bl	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   2f820:	add	x19, x19, #0x11
   2f824:	mov	x0, x21
   2f828:	mov	x1, #0x10                  	// #16
   2f82c:	bl	12000 <_ZdaPvRKSt9nothrow_t@@Base+0x280>
   2f830:	mov	x2, x0
   2f834:	ldr	x30, [sp, #32]
   2f838:	mov	x0, x20
   2f83c:	stp	x22, x19, [x2]
   2f840:	adrp	x3, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2f844:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2f848:	ldp	x21, x22, [sp, #16]
   2f84c:	add	x3, x3, #0x5c8
   2f850:	ldp	x19, x20, [sp], #48
   2f854:	add	x1, x1, #0x648
   2f858:	b	19c90 <__sanitizer_set_report_fd@@Base+0x1e10>
   2f85c:	nop
   2f860:	stp	x19, x20, [sp, #-304]!
   2f864:	stp	x21, x22, [sp, #16]
   2f868:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2f86c:	add	x19, sp, #0x38
   2f870:	ldr	x20, [x21, #4056]
   2f874:	str	x30, [sp, #32]
   2f878:	mov	x0, x20
   2f87c:	bl	17ea0 <__sanitizer_set_report_fd@@Base+0x20>
   2f880:	mov	x1, x20
   2f884:	mov	x0, x19
   2f888:	bl	17f98 <__sanitizer_set_report_fd@@Base+0x118>
   2f88c:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2f890:	add	x0, x0, #0x668
   2f894:	bl	1c4e0 <__sanitizer_set_report_fd@@Base+0x4660>
   2f898:	mov	x2, x0
   2f89c:	mov	x1, x19
   2f8a0:	mov	x0, x20
   2f8a4:	str	x2, [sp, #64]
   2f8a8:	bl	17f98 <__sanitizer_set_report_fd@@Base+0x118>
   2f8ac:	adrp	x2, 930000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e0>
   2f8b0:	adrp	x1, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   2f8b4:	add	x22, x2, #0xdf8
   2f8b8:	add	x1, x1, #0x3e8
   2f8bc:	strh	wzr, [x2, #3576]
   2f8c0:	mov	x0, x19
   2f8c4:	str	x1, [x22, #8]
   2f8c8:	strh	wzr, [x22, #16]
   2f8cc:	bl	19ce8 <__sanitizer_set_report_fd@@Base+0x1e68>
   2f8d0:	mov	x1, x20
   2f8d4:	mov	x0, x19
   2f8d8:	bl	181b0 <__sanitizer_set_report_fd@@Base+0x330>
   2f8dc:	mov	x1, x22
   2f8e0:	mov	x0, x19
   2f8e4:	bl	2f738 <__ubsan_default_options@@Base+0x30>
   2f8e8:	bl	6600 <__ubsan_default_options@plt>
   2f8ec:	mov	x1, x0
   2f8f0:	mov	x2, #0x0                   	// #0
   2f8f4:	mov	x0, x19
   2f8f8:	bl	19a80 <__sanitizer_set_report_fd@@Base+0x1c00>
   2f8fc:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   2f900:	add	x1, x1, #0x8a8
   2f904:	mov	x0, x19
   2f908:	bl	199f8 <__sanitizer_set_report_fd@@Base+0x1b78>
   2f90c:	mov	x0, x20
   2f910:	bl	190f0 <__sanitizer_set_report_fd@@Base+0x1270>
   2f914:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2f918:	ldr	x0, [x0, #3816]
   2f91c:	ldr	w0, [x0]
   2f920:	cbnz	w0, 2f940 <__ubsan_default_options@@Base+0x238>
   2f924:	ldr	x21, [x21, #4056]
   2f928:	ldrb	w0, [x21, #122]
   2f92c:	cbnz	w0, 2f950 <__ubsan_default_options@@Base+0x248>
   2f930:	ldp	x21, x22, [sp, #16]
   2f934:	ldr	x30, [sp, #32]
   2f938:	ldp	x19, x20, [sp], #304
   2f93c:	ret
   2f940:	bl	19388 <__sanitizer_set_report_fd@@Base+0x1508>
   2f944:	ldr	x21, [x21, #4056]
   2f948:	ldrb	w0, [x21, #122]
   2f94c:	cbz	w0, 2f930 <__ubsan_default_options@@Base+0x228>
   2f950:	mov	x0, x19
   2f954:	bl	19468 <__sanitizer_set_report_fd@@Base+0x15e8>
   2f958:	ldp	x21, x22, [sp, #16]
   2f95c:	ldr	x30, [sp, #32]
   2f960:	ldp	x19, x20, [sp], #304
   2f964:	ret
   2f968:	sub	sp, sp, #0x2c0
   2f96c:	ldrb	w3, [x2]
   2f970:	mov	w4, #0xffffffff            	// #-1
   2f974:	stp	x19, x20, [sp]
   2f978:	mov	x19, x0
   2f97c:	add	x0, x0, #0xc
   2f980:	stp	x23, x24, [sp, #32]
   2f984:	mov	x24, x2
   2f988:	mov	x20, x1
   2f98c:	stp	x21, x22, [sp, #16]
   2f990:	stp	x25, x26, [sp, #48]
   2f994:	ldr	x1, [x2, #8]
   2f998:	str	x30, [sp, #80]
   2f99c:	ldxr	w21, [x0]
   2f9a0:	stxr	w2, w4, [x0]
   2f9a4:	cbnz	w2, 2f99c <__ubsan_default_options@@Base+0x294>
   2f9a8:	dmb	ish
   2f9ac:	ldr	x0, [x19, #16]
   2f9b0:	mov	w26, w3
   2f9b4:	ldr	w25, [x19, #8]
   2f9b8:	ldr	x23, [x19]
   2f9bc:	ldrh	w4, [x0]
   2f9c0:	cbnz	w4, 2f9fc <__ubsan_default_options@@Base+0x2f4>
   2f9c4:	ldrh	w0, [x0, #2]
   2f9c8:	tbz	w0, #0, 2f9fc <__ubsan_default_options@@Base+0x2f4>
   2f9cc:	cbnz	w3, 2fb88 <__ubsan_default_options@@Base+0x480>
   2f9d0:	mov	w26, #0x1                   	// #1
   2f9d4:	mov	w22, #0x9                   	// #9
   2f9d8:	cmn	w21, #0x1
   2f9dc:	b.ne	2fb00 <__ubsan_default_options@@Base+0x3f8>  // b.any
   2f9e0:	ldp	x19, x20, [sp]
   2f9e4:	ldp	x21, x22, [sp, #16]
   2f9e8:	ldp	x23, x24, [sp, #32]
   2f9ec:	ldp	x25, x26, [sp, #48]
   2f9f0:	ldr	x30, [sp, #80]
   2f9f4:	add	sp, sp, #0x2c0
   2f9f8:	ret
   2f9fc:	mov	w22, #0xa                   	// #10
   2fa00:	cbz	w3, 2f9d8 <__ubsan_default_options@@Base+0x2d0>
   2fa04:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   2fa08:	ldr	x0, [x0, #3704]
   2fa0c:	ldrb	w0, [x0, #17]
   2fa10:	cbnz	w0, 2f9e0 <__ubsan_default_options@@Base+0x2d8>
   2fa14:	stp	x27, x28, [sp, #64]
   2fa18:	mov	w28, #0x1                   	// #1
   2fa1c:	add	x26, sp, #0xc0
   2fa20:	str	w28, [sp, #272]
   2fa24:	mov	w3, w22
   2fa28:	str	x23, [sp, #280]
   2fa2c:	add	x2, sp, #0x60
   2fa30:	str	w25, [sp, #288]
   2fa34:	mov	x0, x26
   2fa38:	str	w21, [sp, #292]
   2fa3c:	add	x1, sp, #0x90
   2fa40:	ldp	x6, x7, [sp, #272]
   2fa44:	add	x27, sp, #0x110
   2fa48:	ldr	x8, [x24, #16]
   2fa4c:	stp	x6, x7, [sp, #96]
   2fa50:	ldp	x6, x7, [x24]
   2fa54:	stp	x6, x7, [sp, #144]
   2fa58:	ldp	x4, x5, [sp, #288]
   2fa5c:	stp	x4, x5, [sp, #112]
   2fa60:	ldr	x9, [sp, #304]
   2fa64:	str	x9, [sp, #128]
   2fa68:	str	x8, [sp, #160]
   2fa6c:	bl	2eff0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6708>
   2fa70:	ldr	x3, [x19, #16]
   2fa74:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2fa78:	mov	x0, x27
   2fa7c:	add	x2, x2, #0x6f0
   2fa80:	stp	x3, x20, [sp, #176]
   2fa84:	add	x3, sp, #0x130
   2fa88:	add	x1, sp, #0xb0
   2fa8c:	str	w28, [sp, #272]
   2fa90:	str	x23, [sp, #280]
   2fa94:	stp	w25, w21, [x3, #-16]
   2fa98:	stp	wzr, w22, [x3, #8]
   2fa9c:	str	x2, [sp, #320]
   2faa0:	str	wzr, [sp, #592]
   2faa4:	str	wzr, [sp, #600]
   2faa8:	str	xzr, [sp, #608]
   2faac:	str	xzr, [sp, #616]
   2fab0:	str	wzr, [sp, #640]
   2fab4:	str	xzr, [sp, #648]
   2fab8:	str	xzr, [sp, #656]
   2fabc:	str	xzr, [sp, #680]
   2fac0:	str	wzr, [sp, #688]
   2fac4:	bl	2e520 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c38>
   2fac8:	ldr	x1, [x19, #16]
   2facc:	bl	2e4c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5be0>
   2fad0:	mov	x0, x27
   2fad4:	bl	2e660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   2fad8:	mov	x0, x26
   2fadc:	bl	2f058 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6770>
   2fae0:	ldp	x19, x20, [sp]
   2fae4:	ldp	x21, x22, [sp, #16]
   2fae8:	ldp	x23, x24, [sp, #32]
   2faec:	ldp	x25, x26, [sp, #48]
   2faf0:	ldp	x27, x28, [sp, #64]
   2faf4:	ldr	x30, [sp, #80]
   2faf8:	add	sp, sp, #0x2c0
   2fafc:	ret
   2fb00:	mov	x2, x23
   2fb04:	mov	w0, w22
   2fb08:	bl	2f258 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6970>
   2fb0c:	tst	w0, #0xff
   2fb10:	b.ne	2f9e0 <__ubsan_default_options@@Base+0x2d8>  // b.any
   2fb14:	cbz	w26, 2fa04 <__ubsan_default_options@@Base+0x2fc>
   2fb18:	stp	x27, x28, [sp, #64]
   2fb1c:	mov	w28, #0x1                   	// #1
   2fb20:	str	w28, [sp, #272]
   2fb24:	add	x26, sp, #0xc0
   2fb28:	str	x23, [sp, #280]
   2fb2c:	mov	w3, w22
   2fb30:	str	w25, [sp, #288]
   2fb34:	add	x2, sp, #0x60
   2fb38:	str	w21, [sp, #292]
   2fb3c:	mov	x0, x26
   2fb40:	ldp	x6, x7, [sp, #272]
   2fb44:	add	x1, sp, #0x90
   2fb48:	ldr	x8, [x24, #16]
   2fb4c:	stp	x6, x7, [sp, #96]
   2fb50:	add	x27, sp, #0x110
   2fb54:	ldp	x6, x7, [x24]
   2fb58:	stp	x6, x7, [sp, #144]
   2fb5c:	ldp	x4, x5, [sp, #288]
   2fb60:	stp	x4, x5, [sp, #112]
   2fb64:	ldr	x9, [sp, #304]
   2fb68:	str	x9, [sp, #128]
   2fb6c:	str	x8, [sp, #160]
   2fb70:	bl	2eff0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6708>
   2fb74:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2fb78:	mov	x0, x27
   2fb7c:	add	x2, x2, #0x680
   2fb80:	ldr	x3, [x19, #16]
   2fb84:	b	2fa80 <__ubsan_default_options@@Base+0x378>
   2fb88:	mov	w22, #0x9                   	// #9
   2fb8c:	stp	x27, x28, [sp, #64]
   2fb90:	b	2fb1c <__ubsan_default_options@@Base+0x414>
   2fb94:	nop
   2fb98:	sub	sp, sp, #0x2b0
   2fb9c:	stp	x19, x20, [sp]
   2fba0:	mov	x19, x0
   2fba4:	mov	x20, x2
   2fba8:	add	x0, x0, #0xc
   2fbac:	stp	x21, x22, [sp, #16]
   2fbb0:	mov	x21, x1
   2fbb4:	mov	w1, #0xffffffff            	// #-1
   2fbb8:	stp	x25, x26, [sp, #48]
   2fbbc:	str	x30, [sp, #72]
   2fbc0:	ldxr	w22, [x0]
   2fbc4:	stxr	w2, w1, [x0]
   2fbc8:	cbnz	w2, 2fbc0 <__ubsan_default_options@@Base+0x4b8>
   2fbcc:	dmb	ish
   2fbd0:	ldrb	w0, [x20]
   2fbd4:	ldr	w26, [x19, #8]
   2fbd8:	ldr	x25, [x19]
   2fbdc:	cbnz	w0, 2fc18 <__ubsan_default_options@@Base+0x510>
   2fbe0:	cmp	w22, w1
   2fbe4:	b.ne	2fc00 <__ubsan_default_options@@Base+0x4f8>  // b.any
   2fbe8:	ldp	x19, x20, [sp]
   2fbec:	ldp	x21, x22, [sp, #16]
   2fbf0:	ldp	x25, x26, [sp, #48]
   2fbf4:	ldr	x30, [sp, #72]
   2fbf8:	add	sp, sp, #0x2b0
   2fbfc:	ret
   2fc00:	ldr	x1, [x20, #8]
   2fc04:	mov	x2, x25
   2fc08:	mov	w0, #0x14                  	// #20
   2fc0c:	bl	2f258 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6970>
   2fc10:	tst	w0, #0xff
   2fc14:	b.ne	2fbe8 <__ubsan_default_options@@Base+0x4e0>  // b.any
   2fc18:	str	x25, [sp, #264]
   2fc1c:	add	x2, sp, #0x50
   2fc20:	str	w26, [sp, #272]
   2fc24:	add	x1, sp, #0x80
   2fc28:	str	w22, [sp, #276]
   2fc2c:	mov	w3, #0x14                  	// #20
   2fc30:	ldp	x8, x9, [x20]
   2fc34:	str	x27, [sp, #64]
   2fc38:	mov	w27, #0x1                   	// #1
   2fc3c:	str	w27, [sp, #256]
   2fc40:	ldp	x4, x5, [sp, #272]
   2fc44:	stp	x23, x24, [sp, #32]
   2fc48:	add	x23, sp, #0xb0
   2fc4c:	ldp	x6, x7, [sp, #256]
   2fc50:	stp	x6, x7, [sp, #80]
   2fc54:	mov	x0, x23
   2fc58:	ldr	x6, [x20, #16]
   2fc5c:	stp	x4, x5, [sp, #96]
   2fc60:	add	x24, sp, #0x100
   2fc64:	ldr	x10, [sp, #288]
   2fc68:	str	x10, [sp, #112]
   2fc6c:	stp	x8, x9, [sp, #128]
   2fc70:	str	x6, [sp, #144]
   2fc74:	bl	2eff0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6708>
   2fc78:	ldr	x4, [x19, #24]
   2fc7c:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2fc80:	add	x2, x2, #0x720
   2fc84:	mov	x3, #0x1400000000          	// #85899345920
   2fc88:	add	x1, sp, #0xa0
   2fc8c:	mov	x0, x24
   2fc90:	stp	x4, x21, [sp, #160]
   2fc94:	str	w27, [sp, #256]
   2fc98:	str	x25, [sp, #264]
   2fc9c:	str	w26, [sp, #272]
   2fca0:	str	w22, [sp, #276]
   2fca4:	stp	x3, x2, [sp, #296]
   2fca8:	str	wzr, [sp, #576]
   2fcac:	str	wzr, [sp, #584]
   2fcb0:	str	xzr, [sp, #592]
   2fcb4:	str	xzr, [sp, #600]
   2fcb8:	str	wzr, [sp, #624]
   2fcbc:	str	xzr, [sp, #632]
   2fcc0:	str	xzr, [sp, #640]
   2fcc4:	str	xzr, [sp, #664]
   2fcc8:	str	wzr, [sp, #672]
   2fccc:	bl	2e520 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c38>
   2fcd0:	ldr	x1, [x19, #16]
   2fcd4:	bl	2e4c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5be0>
   2fcd8:	mov	x0, x24
   2fcdc:	bl	2e660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   2fce0:	mov	x0, x23
   2fce4:	bl	2f058 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6770>
   2fce8:	ldp	x19, x20, [sp]
   2fcec:	ldp	x21, x22, [sp, #16]
   2fcf0:	ldp	x23, x24, [sp, #32]
   2fcf4:	ldp	x25, x26, [sp, #48]
   2fcf8:	ldr	x27, [sp, #64]
   2fcfc:	ldr	x30, [sp, #72]
   2fd00:	add	sp, sp, #0x2b0
   2fd04:	ret
   2fd08:	sub	sp, sp, #0x2b0
   2fd0c:	stp	x19, x20, [sp]
   2fd10:	mov	x19, x0
   2fd14:	mov	x20, x2
   2fd18:	add	x0, x0, #0xc
   2fd1c:	stp	x21, x22, [sp, #16]
   2fd20:	mov	x21, x1
   2fd24:	mov	w1, #0xffffffff            	// #-1
   2fd28:	stp	x23, x24, [sp, #32]
   2fd2c:	stp	x25, x26, [sp, #48]
   2fd30:	str	x30, [sp, #72]
   2fd34:	ldxr	w26, [x0]
   2fd38:	stxr	w2, w1, [x0]
   2fd3c:	cbnz	w2, 2fd34 <__ubsan_default_options@@Base+0x62c>
   2fd40:	dmb	ish
   2fd44:	ldrb	w0, [x20]
   2fd48:	ldr	w25, [x19, #8]
   2fd4c:	ldr	x24, [x19]
   2fd50:	cbnz	w0, 2fd90 <__ubsan_default_options@@Base+0x688>
   2fd54:	cmp	w26, w1
   2fd58:	b.ne	2fd78 <__ubsan_default_options@@Base+0x670>  // b.any
   2fd5c:	ldp	x19, x20, [sp]
   2fd60:	ldp	x21, x22, [sp, #16]
   2fd64:	ldp	x23, x24, [sp, #32]
   2fd68:	ldp	x25, x26, [sp, #48]
   2fd6c:	ldr	x30, [sp, #72]
   2fd70:	add	sp, sp, #0x2b0
   2fd74:	ret
   2fd78:	ldr	x1, [x20, #8]
   2fd7c:	mov	x2, x24
   2fd80:	mov	w0, #0x17                  	// #23
   2fd84:	bl	2f258 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6970>
   2fd88:	tst	w0, #0xff
   2fd8c:	b.ne	2fd5c <__ubsan_default_options@@Base+0x654>  // b.any
   2fd90:	str	x27, [sp, #64]
   2fd94:	mov	w27, #0x1                   	// #1
   2fd98:	str	w27, [sp, #256]
   2fd9c:	add	x22, sp, #0xb0
   2fda0:	str	x24, [sp, #264]
   2fda4:	mov	x0, x22
   2fda8:	str	w25, [sp, #272]
   2fdac:	add	x2, sp, #0x50
   2fdb0:	str	w26, [sp, #276]
   2fdb4:	add	x1, sp, #0x80
   2fdb8:	ldp	x6, x7, [sp, #256]
   2fdbc:	stp	x6, x7, [sp, #80]
   2fdc0:	mov	w3, #0x17                  	// #23
   2fdc4:	ldp	x6, x7, [x20]
   2fdc8:	add	x23, sp, #0x100
   2fdcc:	ldp	x4, x5, [sp, #272]
   2fdd0:	stp	x4, x5, [sp, #96]
   2fdd4:	ldr	x4, [x20, #16]
   2fdd8:	stp	x6, x7, [sp, #128]
   2fddc:	ldr	x8, [sp, #288]
   2fde0:	str	x8, [sp, #112]
   2fde4:	str	x4, [sp, #144]
   2fde8:	bl	2eff0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6708>
   2fdec:	str	w27, [sp, #256]
   2fdf0:	ldr	x4, [x19, #16]
   2fdf4:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2fdf8:	add	x2, x2, #0x748
   2fdfc:	add	x1, sp, #0xa0
   2fe00:	mov	x3, #0x1700000000          	// #98784247808
   2fe04:	mov	x0, x23
   2fe08:	stp	x4, x21, [sp, #160]
   2fe0c:	str	x24, [sp, #264]
   2fe10:	str	w25, [sp, #272]
   2fe14:	str	w26, [sp, #276]
   2fe18:	stp	x3, x2, [sp, #296]
   2fe1c:	str	wzr, [sp, #576]
   2fe20:	str	wzr, [sp, #584]
   2fe24:	str	xzr, [sp, #592]
   2fe28:	str	xzr, [sp, #600]
   2fe2c:	str	wzr, [sp, #624]
   2fe30:	str	xzr, [sp, #632]
   2fe34:	str	xzr, [sp, #640]
   2fe38:	str	xzr, [sp, #664]
   2fe3c:	str	wzr, [sp, #672]
   2fe40:	bl	2e520 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c38>
   2fe44:	mov	x0, x23
   2fe48:	bl	2e660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   2fe4c:	mov	x0, x22
   2fe50:	bl	2f058 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6770>
   2fe54:	ldp	x19, x20, [sp]
   2fe58:	ldp	x21, x22, [sp, #16]
   2fe5c:	ldp	x23, x24, [sp, #32]
   2fe60:	ldp	x25, x26, [sp, #48]
   2fe64:	ldr	x27, [sp, #64]
   2fe68:	ldr	x30, [sp, #72]
   2fe6c:	add	sp, sp, #0x2b0
   2fe70:	ret
   2fe74:	nop
   2fe78:	sub	sp, sp, #0x2c0
   2fe7c:	stp	x19, x20, [sp]
   2fe80:	mov	x20, x3
   2fe84:	mov	x19, x0
   2fe88:	add	x0, x0, #0xc
   2fe8c:	stp	x21, x22, [sp, #16]
   2fe90:	stp	x23, x24, [sp, #32]
   2fe94:	stp	x25, x26, [sp, #48]
   2fe98:	ldrb	w25, [x3]
   2fe9c:	mov	w3, #0xffffffff            	// #-1
   2fea0:	ldr	x26, [x20, #8]
   2fea4:	str	x30, [sp, #64]
   2fea8:	ldxr	w21, [x0]
   2feac:	stxr	w4, w3, [x0]
   2feb0:	cbnz	w4, 2fea8 <__ubsan_default_options@@Base+0x7a0>
   2feb4:	dmb	ish
   2feb8:	ldr	x0, [x19, #16]
   2febc:	stp	x0, x1, [sp, #160]
   2fec0:	ldr	w22, [x19, #8]
   2fec4:	stp	x0, x2, [sp, #176]
   2fec8:	ldrh	w1, [x0]
   2fecc:	ldr	x23, [x19]
   2fed0:	cbnz	w1, 2ff00 <__ubsan_default_options@@Base+0x7f8>
   2fed4:	ldrh	w0, [x0, #2]
   2fed8:	tbz	w0, #0, 30014 <__ubsan_default_options@@Base+0x90c>
   2fedc:	add	x0, sp, #0xb0
   2fee0:	bl	32f28 <__ubsan_get_current_report_data@@Base+0x100>
   2fee4:	cmn	x0, #0x1
   2fee8:	b.ne	2fef4 <__ubsan_default_options@@Base+0x7ec>  // b.any
   2feec:	cmn	x1, #0x1
   2fef0:	b.eq	30074 <__ubsan_default_options@@Base+0x96c>  // b.none
   2fef4:	ldr	x0, [x19, #16]
   2fef8:	ldrh	w0, [x0]
   2fefc:	cbz	w0, 30014 <__ubsan_default_options@@Base+0x90c>
   2ff00:	mov	w24, #0xc                   	// #12
   2ff04:	cbnz	w25, 3001c <__ubsan_default_options@@Base+0x914>
   2ff08:	cmn	w21, #0x1
   2ff0c:	b.ne	2ff2c <__ubsan_default_options@@Base+0x824>  // b.any
   2ff10:	ldp	x19, x20, [sp]
   2ff14:	ldp	x21, x22, [sp, #16]
   2ff18:	ldp	x23, x24, [sp, #32]
   2ff1c:	ldp	x25, x26, [sp, #48]
   2ff20:	ldr	x30, [sp, #64]
   2ff24:	add	sp, sp, #0x2c0
   2ff28:	ret
   2ff2c:	mov	x1, x26
   2ff30:	mov	x2, x23
   2ff34:	mov	w0, w24
   2ff38:	bl	2f258 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6970>
   2ff3c:	tst	w0, #0xff
   2ff40:	b.ne	2ff10 <__ubsan_default_options@@Base+0x808>  // b.any
   2ff44:	mov	w0, #0x1                   	// #1
   2ff48:	str	w0, [sp, #272]
   2ff4c:	str	x23, [sp, #280]
   2ff50:	add	x25, sp, #0xc0
   2ff54:	str	w22, [sp, #288]
   2ff58:	mov	w3, w24
   2ff5c:	str	w21, [sp, #292]
   2ff60:	add	x2, sp, #0x50
   2ff64:	ldp	x6, x7, [sp, #272]
   2ff68:	stp	x6, x7, [sp, #80]
   2ff6c:	add	x1, sp, #0x80
   2ff70:	ldp	x6, x7, [x20]
   2ff74:	mov	x0, x25
   2ff78:	ldp	x4, x5, [sp, #288]
   2ff7c:	stp	x4, x5, [sp, #96]
   2ff80:	ldr	x4, [x20, #16]
   2ff84:	stp	x6, x7, [sp, #128]
   2ff88:	ldr	x8, [sp, #304]
   2ff8c:	str	x8, [sp, #112]
   2ff90:	str	x4, [sp, #144]
   2ff94:	bl	2eff0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6708>
   2ff98:	cmp	w24, #0x9
   2ff9c:	b.eq	300d0 <__ubsan_default_options@@Base+0x9c8>  // b.none
   2ffa0:	mov	w2, #0x1                   	// #1
   2ffa4:	str	w2, [sp, #272]
   2ffa8:	add	x2, sp, #0x130
   2ffac:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   2ffb0:	add	x1, x1, #0x7c0
   2ffb4:	str	x23, [sp, #280]
   2ffb8:	add	x0, sp, #0x110
   2ffbc:	stp	w22, w21, [x2, #-16]
   2ffc0:	stp	wzr, w24, [x2, #8]
   2ffc4:	str	x1, [sp, #320]
   2ffc8:	str	wzr, [sp, #592]
   2ffcc:	str	wzr, [sp, #600]
   2ffd0:	str	xzr, [sp, #608]
   2ffd4:	str	xzr, [sp, #616]
   2ffd8:	str	wzr, [sp, #640]
   2ffdc:	str	xzr, [sp, #648]
   2ffe0:	str	xzr, [sp, #656]
   2ffe4:	str	xzr, [sp, #680]
   2ffe8:	str	wzr, [sp, #688]
   2ffec:	bl	2e660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   2fff0:	mov	x0, x25
   2fff4:	bl	2f058 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6770>
   2fff8:	ldp	x19, x20, [sp]
   2fffc:	ldp	x21, x22, [sp, #16]
   30000:	ldp	x23, x24, [sp, #32]
   30004:	ldp	x25, x26, [sp, #48]
   30008:	ldr	x30, [sp, #64]
   3000c:	add	sp, sp, #0x2c0
   30010:	ret
   30014:	mov	w24, #0xb                   	// #11
   30018:	cbz	w25, 2ff08 <__ubsan_default_options@@Base+0x800>
   3001c:	mov	w0, #0x1                   	// #1
   30020:	str	w0, [sp, #272]
   30024:	str	x23, [sp, #280]
   30028:	add	x25, sp, #0xc0
   3002c:	str	w22, [sp, #288]
   30030:	mov	w3, w24
   30034:	str	w21, [sp, #292]
   30038:	add	x2, sp, #0x50
   3003c:	ldp	x6, x7, [sp, #272]
   30040:	stp	x6, x7, [sp, #80]
   30044:	add	x1, sp, #0x80
   30048:	ldp	x6, x7, [x20]
   3004c:	mov	x0, x25
   30050:	ldp	x4, x5, [sp, #288]
   30054:	stp	x4, x5, [sp, #96]
   30058:	ldr	x4, [x20, #16]
   3005c:	stp	x6, x7, [sp, #128]
   30060:	ldr	x8, [sp, #304]
   30064:	str	x8, [sp, #112]
   30068:	str	x4, [sp, #144]
   3006c:	bl	2eff0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6708>
   30070:	b	2ffa0 <__ubsan_default_options@@Base+0x898>
   30074:	mov	w24, #0x9                   	// #9
   30078:	cbz	w25, 2ff08 <__ubsan_default_options@@Base+0x800>
   3007c:	mov	w0, #0x1                   	// #1
   30080:	str	w0, [sp, #272]
   30084:	str	x23, [sp, #280]
   30088:	add	x25, sp, #0xc0
   3008c:	str	w22, [sp, #288]
   30090:	add	x2, sp, #0x50
   30094:	str	w21, [sp, #292]
   30098:	add	x1, sp, #0x80
   3009c:	ldp	x6, x7, [sp, #272]
   300a0:	stp	x6, x7, [sp, #80]
   300a4:	mov	x0, x25
   300a8:	ldp	x6, x7, [x20]
   300ac:	mov	w3, #0x9                   	// #9
   300b0:	ldp	x4, x5, [sp, #288]
   300b4:	stp	x4, x5, [sp, #96]
   300b8:	ldr	x4, [x20, #16]
   300bc:	stp	x6, x7, [sp, #128]
   300c0:	ldr	x8, [sp, #304]
   300c4:	str	x8, [sp, #112]
   300c8:	str	x4, [sp, #144]
   300cc:	bl	2eff0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6708>
   300d0:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   300d4:	add	x2, x2, #0x788
   300d8:	mov	w4, #0x1                   	// #1
   300dc:	mov	x3, #0x900000000           	// #38654705664
   300e0:	add	x20, sp, #0x110
   300e4:	add	x1, sp, #0xa0
   300e8:	mov	x0, x20
   300ec:	str	w4, [sp, #272]
   300f0:	str	x23, [sp, #280]
   300f4:	str	w22, [sp, #288]
   300f8:	str	w21, [sp, #292]
   300fc:	stp	x3, x2, [sp, #312]
   30100:	str	wzr, [sp, #592]
   30104:	str	wzr, [sp, #600]
   30108:	str	xzr, [sp, #608]
   3010c:	str	xzr, [sp, #616]
   30110:	str	wzr, [sp, #640]
   30114:	str	xzr, [sp, #648]
   30118:	str	xzr, [sp, #656]
   3011c:	str	xzr, [sp, #680]
   30120:	str	wzr, [sp, #688]
   30124:	bl	2e520 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c38>
   30128:	ldr	x1, [x19, #16]
   3012c:	bl	2e4c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5be0>
   30130:	mov	x0, x20
   30134:	bl	2e660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   30138:	b	2fff0 <__ubsan_default_options@@Base+0x8e8>
   3013c:	nop
   30140:	sub	sp, sp, #0x2c0
   30144:	stp	x19, x20, [sp]
   30148:	mov	x19, x0
   3014c:	mov	x20, x2
   30150:	add	x0, x0, #0xc
   30154:	stp	x21, x22, [sp, #16]
   30158:	mov	x21, x1
   3015c:	mov	w1, #0xffffffff            	// #-1
   30160:	stp	x23, x24, [sp, #32]
   30164:	stp	x27, x28, [sp, #64]
   30168:	str	x30, [sp, #80]
   3016c:	ldxr	w22, [x0]
   30170:	stxr	w2, w1, [x0]
   30174:	cbnz	w2, 3016c <__ubsan_default_options@@Base+0xa64>
   30178:	dmb	ish
   3017c:	ldr	x0, [x19, #16]
   30180:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   30184:	ldr	w24, [x19, #8]
   30188:	add	x1, x1, #0x7d8
   3018c:	add	x0, x0, #0x4
   30190:	ldr	x23, [x19]
   30194:	bl	1a560 <__sanitizer_set_report_fd@@Base+0x26e0>
   30198:	cbnz	w0, 302d0 <__ubsan_default_options@@Base+0xbc8>
   3019c:	mov	w27, #0x19                  	// #25
   301a0:	ldrb	w0, [x20]
   301a4:	cbnz	w0, 301e4 <__ubsan_default_options@@Base+0xadc>
   301a8:	cmn	w22, #0x1
   301ac:	b.ne	301cc <__ubsan_default_options@@Base+0xac4>  // b.any
   301b0:	ldp	x19, x20, [sp]
   301b4:	ldp	x21, x22, [sp, #16]
   301b8:	ldp	x23, x24, [sp, #32]
   301bc:	ldp	x27, x28, [sp, #64]
   301c0:	ldr	x30, [sp, #80]
   301c4:	add	sp, sp, #0x2c0
   301c8:	ret
   301cc:	ldr	x1, [x20, #8]
   301d0:	mov	x2, x23
   301d4:	mov	w0, w27
   301d8:	bl	2f258 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6970>
   301dc:	tst	w0, #0xff
   301e0:	b.ne	301b0 <__ubsan_default_options@@Base+0xaa8>  // b.any
   301e4:	mov	w28, #0x1                   	// #1
   301e8:	str	w28, [sp, #272]
   301ec:	str	x23, [sp, #280]
   301f0:	mov	w3, w27
   301f4:	str	w24, [sp, #288]
   301f8:	add	x2, sp, #0x60
   301fc:	str	w22, [sp, #292]
   30200:	add	x1, sp, #0x90
   30204:	ldp	x6, x7, [sp, #272]
   30208:	stp	x25, x26, [sp, #48]
   3020c:	add	x25, sp, #0xc0
   30210:	ldr	x8, [x20, #16]
   30214:	stp	x6, x7, [sp, #96]
   30218:	mov	x0, x25
   3021c:	ldp	x6, x7, [x20]
   30220:	stp	x6, x7, [sp, #144]
   30224:	add	x26, sp, #0x110
   30228:	ldp	x4, x5, [sp, #288]
   3022c:	stp	x4, x5, [sp, #112]
   30230:	ldr	x9, [sp, #304]
   30234:	str	x9, [sp, #128]
   30238:	str	x8, [sp, #160]
   3023c:	bl	2eff0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6708>
   30240:	str	w28, [sp, #272]
   30244:	ldr	x3, [x19, #16]
   30248:	stp	x3, x21, [sp, #176]
   3024c:	add	x3, sp, #0x130
   30250:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   30254:	add	x2, x2, #0x7e8
   30258:	str	x23, [sp, #280]
   3025c:	add	x1, sp, #0xb0
   30260:	stp	w24, w22, [x3, #-16]
   30264:	mov	x0, x26
   30268:	stp	wzr, w27, [x3, #8]
   3026c:	str	x2, [sp, #320]
   30270:	str	wzr, [sp, #592]
   30274:	str	wzr, [sp, #600]
   30278:	str	xzr, [sp, #608]
   3027c:	str	xzr, [sp, #616]
   30280:	str	wzr, [sp, #640]
   30284:	str	xzr, [sp, #648]
   30288:	str	xzr, [sp, #656]
   3028c:	str	xzr, [sp, #680]
   30290:	str	wzr, [sp, #688]
   30294:	bl	2e520 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c38>
   30298:	ldr	x1, [x19, #16]
   3029c:	bl	2e4c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5be0>
   302a0:	mov	x0, x26
   302a4:	bl	2e660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   302a8:	mov	x0, x25
   302ac:	bl	2f058 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6770>
   302b0:	ldp	x19, x20, [sp]
   302b4:	ldp	x21, x22, [sp, #16]
   302b8:	ldp	x23, x24, [sp, #32]
   302bc:	ldp	x25, x26, [sp, #48]
   302c0:	ldp	x27, x28, [sp, #64]
   302c4:	ldr	x30, [sp, #80]
   302c8:	add	sp, sp, #0x2c0
   302cc:	ret
   302d0:	ldr	x0, [x19, #16]
   302d4:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   302d8:	mov	x2, #0x6                   	// #6
   302dc:	add	x1, x1, #0x7e0
   302e0:	add	x0, x0, #0x4
   302e4:	mov	w27, #0x1a                  	// #26
   302e8:	bl	1a5a8 <__sanitizer_set_report_fd@@Base+0x2728>
   302ec:	cbnz	w0, 301a0 <__ubsan_default_options@@Base+0xa98>
   302f0:	b	3019c <__ubsan_default_options@@Base+0xa94>
   302f4:	nop
   302f8:	sub	sp, sp, #0x280
   302fc:	mov	x4, x1
   30300:	add	x2, sp, #0x30
   30304:	add	x1, sp, #0x60
   30308:	mov	w3, #0x16                  	// #22
   3030c:	stp	x19, x20, [sp]
   30310:	mov	x19, x0
   30314:	add	x20, sp, #0x80
   30318:	ldr	x0, [x0]
   3031c:	stp	x21, x22, [sp, #16]
   30320:	ldr	d0, [x19, #8]
   30324:	mov	w22, #0x1                   	// #1
   30328:	str	w22, [sp, #208]
   3032c:	str	x0, [sp, #216]
   30330:	mov	x0, x20
   30334:	str	d0, [sp, #224]
   30338:	add	x21, sp, #0xd0
   3033c:	ldp	x6, x7, [sp, #224]
   30340:	stp	x6, x7, [sp, #64]
   30344:	ldp	x6, x7, [x4]
   30348:	str	x30, [sp, #32]
   3034c:	ldp	x8, x9, [sp, #208]
   30350:	stp	x8, x9, [sp, #48]
   30354:	ldr	x4, [x4, #16]
   30358:	stp	x6, x7, [sp, #96]
   3035c:	ldr	x5, [sp, #240]
   30360:	str	x5, [sp, #80]
   30364:	str	x4, [sp, #112]
   30368:	bl	2eff0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6708>
   3036c:	str	w22, [sp, #208]
   30370:	ldr	x3, [x19]
   30374:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   30378:	add	x1, x1, #0x828
   3037c:	ldr	d0, [x19, #8]
   30380:	mov	x2, #0x1600000000          	// #94489280512
   30384:	mov	x0, x21
   30388:	str	x3, [sp, #216]
   3038c:	str	d0, [sp, #224]
   30390:	stp	x2, x1, [sp, #248]
   30394:	str	wzr, [sp, #528]
   30398:	str	wzr, [sp, #536]
   3039c:	str	xzr, [sp, #544]
   303a0:	str	xzr, [sp, #552]
   303a4:	str	wzr, [sp, #576]
   303a8:	str	xzr, [sp, #584]
   303ac:	str	xzr, [sp, #592]
   303b0:	str	xzr, [sp, #616]
   303b4:	str	wzr, [sp, #624]
   303b8:	bl	2e660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   303bc:	mov	x0, x20
   303c0:	bl	2f058 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6770>
   303c4:	ldp	x19, x20, [sp]
   303c8:	ldp	x21, x22, [sp, #16]
   303cc:	ldr	x30, [sp, #32]
   303d0:	add	sp, sp, #0x280
   303d4:	ret
   303d8:	sub	sp, sp, #0x280
   303dc:	mov	x4, x1
   303e0:	add	x2, sp, #0x30
   303e4:	add	x1, sp, #0x60
   303e8:	mov	w3, #0x15                  	// #21
   303ec:	stp	x19, x20, [sp]
   303f0:	mov	x19, x0
   303f4:	add	x20, sp, #0x80
   303f8:	ldr	x0, [x0]
   303fc:	stp	x21, x22, [sp, #16]
   30400:	ldr	d0, [x19, #8]
   30404:	mov	w22, #0x1                   	// #1
   30408:	str	w22, [sp, #208]
   3040c:	str	x0, [sp, #216]
   30410:	mov	x0, x20
   30414:	str	d0, [sp, #224]
   30418:	add	x21, sp, #0xd0
   3041c:	ldp	x6, x7, [sp, #224]
   30420:	stp	x6, x7, [sp, #64]
   30424:	ldp	x6, x7, [x4]
   30428:	str	x30, [sp, #32]
   3042c:	ldp	x8, x9, [sp, #208]
   30430:	stp	x8, x9, [sp, #48]
   30434:	ldr	x4, [x4, #16]
   30438:	stp	x6, x7, [sp, #96]
   3043c:	ldr	x5, [sp, #240]
   30440:	str	x5, [sp, #80]
   30444:	str	x4, [sp, #112]
   30448:	bl	2eff0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6708>
   3044c:	str	w22, [sp, #208]
   30450:	ldr	x3, [x19]
   30454:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   30458:	add	x1, x1, #0x880
   3045c:	ldr	d0, [x19, #8]
   30460:	mov	x2, #0x1500000000          	// #90194313216
   30464:	mov	x0, x21
   30468:	str	x3, [sp, #216]
   3046c:	str	d0, [sp, #224]
   30470:	stp	x2, x1, [sp, #248]
   30474:	str	wzr, [sp, #528]
   30478:	str	wzr, [sp, #536]
   3047c:	str	xzr, [sp, #544]
   30480:	str	xzr, [sp, #552]
   30484:	str	wzr, [sp, #576]
   30488:	str	xzr, [sp, #584]
   3048c:	str	xzr, [sp, #592]
   30490:	str	xzr, [sp, #616]
   30494:	str	wzr, [sp, #624]
   30498:	bl	2e660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   3049c:	mov	x0, x20
   304a0:	bl	2f058 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6770>
   304a4:	ldp	x19, x20, [sp]
   304a8:	ldp	x21, x22, [sp, #16]
   304ac:	ldr	x30, [sp, #32]
   304b0:	add	sp, sp, #0x280
   304b4:	ret
   304b8:	sub	sp, sp, #0x300
   304bc:	stp	x19, x20, [sp]
   304c0:	mov	x20, x2
   304c4:	mov	x19, x0
   304c8:	stp	x21, x22, [sp, #16]
   304cc:	add	x22, sp, #0x150
   304d0:	mov	x2, #0x8                   	// #8
   304d4:	mov	x21, x1
   304d8:	mov	x1, x0
   304dc:	mov	x0, x22
   304e0:	stp	x23, x24, [sp, #32]
   304e4:	stp	x25, x26, [sp, #48]
   304e8:	stp	x27, x28, [sp, #64]
   304ec:	ldr	x23, [x20, #8]
   304f0:	str	x30, [sp, #80]
   304f4:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   304f8:	ldr	x0, [sp, #336]
   304fc:	ldrb	w1, [x0]
   30500:	ldrb	w0, [x0, #1]
   30504:	add	w2, w1, w0
   30508:	cmp	w2, #0x1
   3050c:	b.ls	30570 <__ubsan_default_options@@Base+0xe68>  // b.plast
   30510:	cmp	w1, #0xff
   30514:	b.eq	30570 <__ubsan_default_options@@Base+0xe68>  // b.none
   30518:	cmp	w0, #0xff
   3051c:	b.eq	30570 <__ubsan_default_options@@Base+0xe68>  // b.none
   30520:	add	x0, x19, #0xc
   30524:	mov	w1, #0xffffffff            	// #-1
   30528:	ldxr	w26, [x0]
   3052c:	stxr	w2, w1, [x0]
   30530:	cbnz	w2, 30528 <__ubsan_default_options@@Base+0xe20>
   30534:	dmb	ish
   30538:	ldrb	w0, [x20]
   3053c:	ldr	w28, [x19, #8]
   30540:	ldr	x27, [x19]
   30544:	cbnz	w0, 306b0 <__ubsan_default_options@@Base+0xfa8>
   30548:	cmn	w26, #0x1
   3054c:	b.ne	30694 <__ubsan_default_options@@Base+0xf8c>  // b.any
   30550:	ldp	x19, x20, [sp]
   30554:	ldp	x21, x22, [sp, #16]
   30558:	ldp	x23, x24, [sp, #32]
   3055c:	ldp	x25, x26, [sp, #48]
   30560:	ldp	x27, x28, [sp, #64]
   30564:	ldr	x30, [sp, #80]
   30568:	add	sp, sp, #0x300
   3056c:	ret
   30570:	cbz	x23, 306c0 <__ubsan_default_options@@Base+0xfb8>
   30574:	sub	x0, x23, #0x4
   30578:	bl	2e4a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5bc0>
   3057c:	ldp	x23, x9, [x19]
   30580:	mov	x25, x0
   30584:	mov	x24, x0
   30588:	mov	w26, #0x0                   	// #0
   3058c:	mov	w28, #0x0                   	// #0
   30590:	mov	x27, #0x0                   	// #0
   30594:	mov	w8, #0x3                   	// #3
   30598:	str	w8, [sp, #216]
   3059c:	add	x19, sp, #0x100
   305a0:	str	x27, [sp, #224]
   305a4:	add	x2, sp, #0x70
   305a8:	stp	w28, w26, [sp, #232]
   305ac:	mov	x0, x19
   305b0:	ldp	x6, x7, [sp, #216]
   305b4:	stp	x6, x7, [sp, #112]
   305b8:	add	x1, sp, #0xa0
   305bc:	ldp	x6, x7, [x20]
   305c0:	mov	w3, #0x18                  	// #24
   305c4:	ldp	x4, x5, [sp, #232]
   305c8:	stp	x4, x5, [sp, #128]
   305cc:	ldr	x4, [x20, #16]
   305d0:	str	w8, [sp, #100]
   305d4:	str	x9, [sp, #104]
   305d8:	str	x24, [sp, #144]
   305dc:	stp	x6, x7, [sp, #160]
   305e0:	str	x4, [sp, #176]
   305e4:	bl	2eff0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6708>
   305e8:	ldr	w8, [sp, #100]
   305ec:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   305f0:	add	x2, x2, #0x8c8
   305f4:	mov	x3, #0x1800000000          	// #103079215104
   305f8:	add	x1, sp, #0xc8
   305fc:	mov	x0, x22
   30600:	stp	x23, x21, [sp, #200]
   30604:	str	w8, [sp, #336]
   30608:	str	x27, [sp, #344]
   3060c:	str	w28, [sp, #352]
   30610:	str	w26, [sp, #356]
   30614:	stp	x24, x3, [sp, #368]
   30618:	str	x2, [sp, #384]
   3061c:	str	wzr, [sp, #656]
   30620:	str	wzr, [sp, #664]
   30624:	str	xzr, [sp, #672]
   30628:	str	xzr, [sp, #680]
   3062c:	str	wzr, [sp, #704]
   30630:	str	xzr, [sp, #712]
   30634:	str	xzr, [sp, #720]
   30638:	str	xzr, [sp, #744]
   3063c:	str	wzr, [sp, #752]
   30640:	bl	2e520 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c38>
   30644:	mov	x1, x23
   30648:	bl	2e4c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5be0>
   3064c:	ldr	x9, [sp, #104]
   30650:	mov	x1, x9
   30654:	bl	2e4c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5be0>
   30658:	mov	x0, x22
   3065c:	bl	2e660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   30660:	mov	x0, x19
   30664:	bl	2f058 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6770>
   30668:	cbz	x25, 30550 <__ubsan_default_options@@Base+0xe48>
   3066c:	mov	x0, x25
   30670:	bl	29220 <__sanitizer_get_module_and_offset_for_pc@@Base+0x938>
   30674:	ldp	x19, x20, [sp]
   30678:	ldp	x21, x22, [sp, #16]
   3067c:	ldp	x23, x24, [sp, #32]
   30680:	ldp	x25, x26, [sp, #48]
   30684:	ldp	x27, x28, [sp, #64]
   30688:	ldr	x30, [sp, #80]
   3068c:	add	sp, sp, #0x300
   30690:	ret
   30694:	mov	x1, x23
   30698:	mov	x2, x27
   3069c:	mov	w0, #0x18                  	// #24
   306a0:	bl	2f258 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6970>
   306a4:	tst	w0, #0xff
   306a8:	b.ne	30550 <__ubsan_default_options@@Base+0xe48>  // b.any
   306ac:	nop
   306b0:	mov	w8, #0x1                   	// #1
   306b4:	mov	x25, #0x0                   	// #0
   306b8:	ldp	x23, x9, [x19, #16]
   306bc:	b	30598 <__ubsan_default_options@@Base+0xe90>
   306c0:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   306c4:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   306c8:	add	x2, x2, #0x8b0
   306cc:	add	x0, x0, #0x188
   306d0:	mov	x4, #0x0                   	// #0
   306d4:	mov	x3, #0x0                   	// #0
   306d8:	mov	w1, #0x2c                  	// #44
   306dc:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   306e0:	sub	sp, sp, #0x290
   306e4:	mov	x4, x1
   306e8:	mov	w1, #0xffffffff            	// #-1
   306ec:	stp	x19, x20, [sp]
   306f0:	mov	x19, x0
   306f4:	add	x0, x0, #0xc
   306f8:	stp	x21, x22, [sp, #16]
   306fc:	stp	x23, x24, [sp, #32]
   30700:	str	x30, [sp, #48]
   30704:	ldxr	w22, [x0]
   30708:	stxr	w2, w1, [x0]
   3070c:	cbnz	w2, 30704 <__ubsan_default_options@@Base+0xffc>
   30710:	dmb	ish
   30714:	ldr	x24, [x19]
   30718:	mov	w21, #0x1                   	// #1
   3071c:	ldr	w23, [x19, #8]
   30720:	add	x20, sp, #0x90
   30724:	str	w21, [sp, #224]
   30728:	mov	x0, x20
   3072c:	str	x24, [sp, #232]
   30730:	add	x2, sp, #0x40
   30734:	stp	w23, w22, [sp, #240]
   30738:	add	x1, sp, #0x70
   3073c:	ldp	x6, x7, [sp, #224]
   30740:	stp	x6, x7, [sp, #64]
   30744:	mov	w3, #0xd                   	// #13
   30748:	ldp	x6, x7, [sp, #240]
   3074c:	stp	x6, x7, [sp, #80]
   30750:	ldp	x6, x7, [x4]
   30754:	stp	x6, x7, [sp, #112]
   30758:	ldr	x4, [x4, #16]
   3075c:	str	x4, [sp, #128]
   30760:	ldr	x5, [sp, #256]
   30764:	str	x5, [sp, #96]
   30768:	bl	2eff0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6708>
   3076c:	str	w21, [sp, #224]
   30770:	ldrb	w2, [x19, #16]
   30774:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   30778:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   3077c:	add	x0, x0, #0x910
   30780:	cmp	w2, #0x0
   30784:	add	x1, x1, #0x908
   30788:	csel	x1, x1, x0, eq  // eq = none
   3078c:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   30790:	add	x2, x2, #0x918
   30794:	mov	x3, #0xd00000000           	// #55834574848
   30798:	add	x0, sp, #0xe0
   3079c:	str	x24, [sp, #232]
   307a0:	stp	w23, w22, [sp, #240]
   307a4:	stp	x3, x2, [sp, #264]
   307a8:	str	wzr, [sp, #288]
   307ac:	str	x1, [sp, #304]
   307b0:	str	w21, [sp, #544]
   307b4:	str	wzr, [sp, #552]
   307b8:	str	xzr, [sp, #560]
   307bc:	str	xzr, [sp, #568]
   307c0:	str	wzr, [sp, #592]
   307c4:	str	xzr, [sp, #600]
   307c8:	str	xzr, [sp, #608]
   307cc:	str	xzr, [sp, #632]
   307d0:	str	wzr, [sp, #640]
   307d4:	bl	2e660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   307d8:	mov	x0, x20
   307dc:	bl	2f058 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6770>
   307e0:	ldp	x19, x20, [sp]
   307e4:	ldp	x21, x22, [sp, #16]
   307e8:	ldp	x23, x24, [sp, #32]
   307ec:	ldr	x30, [sp, #48]
   307f0:	add	sp, sp, #0x290
   307f4:	ret
   307f8:	sub	sp, sp, #0x2e0
   307fc:	stp	x19, x20, [sp]
   30800:	mov	x19, x0
   30804:	mov	x20, x5
   30808:	add	x0, x0, #0xc
   3080c:	stp	x21, x22, [sp, #16]
   30810:	mov	x21, x1
   30814:	ldrb	w1, [x5]
   30818:	stp	x23, x24, [sp, #32]
   3081c:	stp	x25, x26, [sp, #48]
   30820:	stp	x27, x28, [sp, #64]
   30824:	str	x30, [sp, #80]
   30828:	str	x2, [sp, #104]
   3082c:	mov	w2, #0xffffffff            	// #-1
   30830:	stp	x3, x4, [sp, #192]
   30834:	ldxr	w25, [x0]
   30838:	stxr	w3, w2, [x0]
   3083c:	cbnz	w3, 30834 <__ubsan_default_options@@Base+0x112c>
   30840:	dmb	ish
   30844:	ldr	x0, [x19, #16]
   30848:	mov	w24, w1
   3084c:	ldr	w28, [x19, #8]
   30850:	ldr	x26, [x19]
   30854:	ldrh	w2, [x0]
   30858:	cbnz	w2, 30874 <__ubsan_default_options@@Base+0x116c>
   3085c:	ldrh	w0, [x0, #2]
   30860:	tbz	w0, #0, 30874 <__ubsan_default_options@@Base+0x116c>
   30864:	cbnz	w1, 309fc <__ubsan_default_options@@Base+0x12f4>
   30868:	mov	w24, #0x1                   	// #1
   3086c:	mov	w27, #0x9                   	// #9
   30870:	b	3087c <__ubsan_default_options@@Base+0x1174>
   30874:	cbnz	w1, 308b4 <__ubsan_default_options@@Base+0x11ac>
   30878:	mov	w27, #0xa                   	// #10
   3087c:	cmn	w25, #0x1
   30880:	b.eq	309dc <__ubsan_default_options@@Base+0x12d4>  // b.none
   30884:	ldr	x1, [x20, #8]
   30888:	mov	x2, x26
   3088c:	mov	w0, w27
   30890:	bl	2f258 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6970>
   30894:	tst	w0, #0xff
   30898:	b.ne	309dc <__ubsan_default_options@@Base+0x12d4>  // b.any
   3089c:	cbnz	w24, 308bc <__ubsan_default_options@@Base+0x11b4>
   308a0:	adrp	x0, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   308a4:	ldr	x0, [x0, #3704]
   308a8:	ldrb	w24, [x0, #17]
   308ac:	cbz	w24, 308bc <__ubsan_default_options@@Base+0x11b4>
   308b0:	b	309dc <__ubsan_default_options@@Base+0x12d4>
   308b4:	mov	w24, #0x0                   	// #0
   308b8:	mov	w27, #0xa                   	// #10
   308bc:	mov	w9, #0x1                   	// #1
   308c0:	str	w9, [sp, #304]
   308c4:	str	x26, [sp, #312]
   308c8:	add	x22, sp, #0xe0
   308cc:	str	w28, [sp, #320]
   308d0:	mov	x0, x22
   308d4:	str	w25, [sp, #324]
   308d8:	mov	w3, w27
   308dc:	ldp	x6, x7, [sp, #304]
   308e0:	stp	x6, x7, [sp, #112]
   308e4:	add	x2, sp, #0x70
   308e8:	ldp	x4, x5, [sp, #320]
   308ec:	add	x1, sp, #0xa0
   308f0:	ldr	x6, [x20, #16]
   308f4:	stp	x4, x5, [sp, #128]
   308f8:	add	x23, sp, #0x130
   308fc:	ldp	x4, x5, [x20]
   30900:	stp	x4, x5, [sp, #160]
   30904:	ldr	x10, [sp, #336]
   30908:	str	x10, [sp, #144]
   3090c:	str	x6, [sp, #176]
   30910:	bl	2eff0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6708>
   30914:	str	x26, [sp, #312]
   30918:	ldr	x4, [x19, #16]
   3091c:	stp	x4, x21, [sp, #208]
   30920:	add	x4, sp, #0x150
   30924:	cmp	w24, #0x0
   30928:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   3092c:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   30930:	add	x0, x0, #0x958
   30934:	add	x2, x2, #0x950
   30938:	mov	w9, #0x1                   	// #1
   3093c:	csel	x2, x2, x0, ne  // ne = any
   30940:	adrp	x3, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   30944:	add	x3, x3, #0x968
   30948:	str	w9, [sp, #304]
   3094c:	stp	w28, w25, [x4, #-16]
   30950:	add	x1, sp, #0xd0
   30954:	stp	wzr, w27, [x4, #8]
   30958:	mov	x0, x23
   3095c:	str	x3, [sp, #352]
   30960:	str	wzr, [sp, #368]
   30964:	str	x2, [sp, #384]
   30968:	str	w9, [sp, #624]
   3096c:	str	wzr, [sp, #632]
   30970:	str	xzr, [sp, #640]
   30974:	str	xzr, [sp, #648]
   30978:	str	wzr, [sp, #672]
   3097c:	str	xzr, [sp, #680]
   30980:	str	xzr, [sp, #688]
   30984:	str	xzr, [sp, #712]
   30988:	str	wzr, [sp, #720]
   3098c:	bl	2e520 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c38>
   30990:	ldr	w1, [x0, #320]
   30994:	cmp	w1, #0x8
   30998:	b.eq	30a04 <__ubsan_default_options@@Base+0x12fc>  // b.none
   3099c:	ubfiz	x3, x1, #5, #32
   309a0:	add	w1, w1, #0x1
   309a4:	add	x3, x3, #0x40
   309a8:	str	w1, [x0, #320]
   309ac:	add	x4, x0, x3
   309b0:	add	x1, sp, #0xc0
   309b4:	ldr	x2, [sp, #104]
   309b8:	str	wzr, [x0, x3]
   309bc:	str	x2, [x4, #16]
   309c0:	bl	2e520 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c38>
   309c4:	ldr	x1, [x19, #16]
   309c8:	bl	2e4c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5be0>
   309cc:	mov	x0, x23
   309d0:	bl	2e660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   309d4:	mov	x0, x22
   309d8:	bl	2f058 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6770>
   309dc:	ldp	x19, x20, [sp]
   309e0:	ldp	x21, x22, [sp, #16]
   309e4:	ldp	x23, x24, [sp, #32]
   309e8:	ldp	x25, x26, [sp, #48]
   309ec:	ldp	x27, x28, [sp, #64]
   309f0:	ldr	x30, [sp, #80]
   309f4:	add	sp, sp, #0x2e0
   309f8:	ret
   309fc:	mov	w27, #0x9                   	// #9
   30a00:	b	308bc <__ubsan_default_options@@Base+0x11b4>
   30a04:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   30a08:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   30a0c:	add	x2, x2, #0x200
   30a10:	add	x0, x0, #0x188
   30a14:	mov	x4, #0x0                   	// #0
   30a18:	mov	x3, #0x0                   	// #0
   30a1c:	mov	w1, #0xc0                  	// #192
   30a20:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   30a24:	nop
   30a28:	sub	sp, sp, #0x2a0
   30a2c:	stp	x19, x20, [sp]
   30a30:	mov	x19, x0
   30a34:	add	x0, x0, #0xc
   30a38:	stp	x23, x24, [sp, #32]
   30a3c:	and	w23, w2, #0xff
   30a40:	mov	x20, x1
   30a44:	mov	w1, #0xffffffff            	// #-1
   30a48:	stp	x21, x22, [sp, #16]
   30a4c:	stp	x25, x26, [sp, #48]
   30a50:	str	x30, [sp, #72]
   30a54:	ldxr	w21, [x0]
   30a58:	stxr	w2, w1, [x0]
   30a5c:	cbnz	w2, 30a54 <__ubsan_default_options@@Base+0x134c>
   30a60:	dmb	ish
   30a64:	ldrb	w0, [x20]
   30a68:	ldr	w25, [x19, #8]
   30a6c:	ldr	x22, [x19]
   30a70:	cbnz	w0, 30ab0 <__ubsan_default_options@@Base+0x13a8>
   30a74:	cmp	w21, w1
   30a78:	b.ne	30a98 <__ubsan_default_options@@Base+0x1390>  // b.any
   30a7c:	ldp	x19, x20, [sp]
   30a80:	ldp	x21, x22, [sp, #16]
   30a84:	ldp	x23, x24, [sp, #32]
   30a88:	ldp	x25, x26, [sp, #48]
   30a8c:	ldr	x30, [sp, #72]
   30a90:	add	sp, sp, #0x2a0
   30a94:	ret
   30a98:	ldr	x1, [x20, #8]
   30a9c:	mov	x2, x22
   30aa0:	mov	w0, #0x1d                  	// #29
   30aa4:	bl	2f258 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6970>
   30aa8:	tst	w0, #0xff
   30aac:	b.ne	30a7c <__ubsan_default_options@@Base+0x1374>  // b.any
   30ab0:	mov	w26, #0x1                   	// #1
   30ab4:	str	w26, [sp, #240]
   30ab8:	str	x22, [sp, #248]
   30abc:	add	x2, sp, #0x50
   30ac0:	str	w25, [sp, #256]
   30ac4:	add	x1, sp, #0x80
   30ac8:	str	w21, [sp, #260]
   30acc:	mov	w3, #0x1d                  	// #29
   30ad0:	ldp	x6, x7, [sp, #240]
   30ad4:	stp	x6, x7, [sp, #80]
   30ad8:	add	x24, sp, #0xf0
   30adc:	ldp	x6, x7, [x20]
   30ae0:	str	x27, [sp, #64]
   30ae4:	ldp	x4, x5, [sp, #256]
   30ae8:	stp	x4, x5, [sp, #96]
   30aec:	add	x27, sp, #0xa0
   30af0:	ldr	x4, [x20, #16]
   30af4:	mov	x0, x27
   30af8:	ldr	x8, [sp, #272]
   30afc:	str	x8, [sp, #112]
   30b00:	stp	x6, x7, [sp, #128]
   30b04:	str	x4, [sp, #144]
   30b08:	bl	2eff0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6708>
   30b0c:	ldrsw	x2, [x19, #32]
   30b10:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   30b14:	add	x1, x1, #0x9c8
   30b18:	mov	x4, #0x1d00000000          	// #124554051584
   30b1c:	mov	w3, #0x2                   	// #2
   30b20:	mov	x0, x24
   30b24:	str	w26, [sp, #240]
   30b28:	str	x22, [sp, #248]
   30b2c:	str	w25, [sp, #256]
   30b30:	str	w21, [sp, #260]
   30b34:	stp	x4, x1, [sp, #280]
   30b38:	str	w3, [sp, #304]
   30b3c:	stp	x2, xzr, [sp, #320]
   30b40:	str	w26, [sp, #560]
   30b44:	str	wzr, [sp, #568]
   30b48:	str	xzr, [sp, #576]
   30b4c:	str	xzr, [sp, #584]
   30b50:	str	wzr, [sp, #608]
   30b54:	str	xzr, [sp, #616]
   30b58:	str	xzr, [sp, #624]
   30b5c:	str	xzr, [sp, #648]
   30b60:	str	wzr, [sp, #656]
   30b64:	bl	2e660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   30b68:	ldr	x2, [x19, #16]
   30b6c:	cbz	x2, 30be0 <__ubsan_default_options@@Base+0x14d8>
   30b70:	cmp	w23, #0x0
   30b74:	adrp	x3, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   30b78:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   30b7c:	add	x3, x3, #0x9a8
   30b80:	add	x1, x1, #0xa30
   30b84:	mov	x4, #0x1                   	// #1
   30b88:	csel	x1, x1, x3, ne  // ne = any
   30b8c:	adrp	x3, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   30b90:	add	x3, x3, #0xa10
   30b94:	ldr	d0, [x19, #24]
   30b98:	movk	x4, #0x1d, lsl #32
   30b9c:	mov	x0, x24
   30ba0:	str	w26, [sp, #240]
   30ba4:	str	x2, [sp, #248]
   30ba8:	str	d0, [sp, #256]
   30bac:	stp	x4, x3, [sp, #280]
   30bb0:	str	wzr, [sp, #304]
   30bb4:	str	x1, [sp, #320]
   30bb8:	str	w26, [sp, #560]
   30bbc:	str	wzr, [sp, #568]
   30bc0:	str	xzr, [sp, #576]
   30bc4:	str	xzr, [sp, #584]
   30bc8:	str	wzr, [sp, #608]
   30bcc:	str	xzr, [sp, #616]
   30bd0:	str	xzr, [sp, #624]
   30bd4:	str	xzr, [sp, #648]
   30bd8:	str	wzr, [sp, #656]
   30bdc:	bl	2e660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   30be0:	mov	x0, x27
   30be4:	bl	2f058 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6770>
   30be8:	ldp	x19, x20, [sp]
   30bec:	ldp	x21, x22, [sp, #16]
   30bf0:	ldp	x23, x24, [sp, #32]
   30bf4:	ldp	x25, x26, [sp, #48]
   30bf8:	ldr	x27, [sp, #64]
   30bfc:	ldr	x30, [sp, #72]
   30c00:	add	sp, sp, #0x2a0
   30c04:	ret
   30c08:	sub	sp, sp, #0x2a0
   30c0c:	stp	x19, x20, [sp]
   30c10:	stp	x21, x22, [sp, #16]
   30c14:	stp	x23, x24, [sp, #32]
   30c18:	stp	x25, x26, [sp, #48]
   30c1c:	str	x30, [sp, #72]
   30c20:	cbz	x1, 30de0 <__ubsan_default_options@@Base+0x16d8>
   30c24:	mov	x19, x2
   30c28:	and	w22, w3, #0xff
   30c2c:	add	x2, x1, #0xc
   30c30:	mov	x25, x0
   30c34:	mov	w0, #0xffffffff            	// #-1
   30c38:	ldxr	w20, [x2]
   30c3c:	stxr	w3, w0, [x2]
   30c40:	cbnz	w3, 30c38 <__ubsan_default_options@@Base+0x1530>
   30c44:	dmb	ish
   30c48:	ldrb	w0, [x19]
   30c4c:	ldr	w24, [x1, #8]
   30c50:	ldr	x21, [x1]
   30c54:	cbnz	w0, 30c98 <__ubsan_default_options@@Base+0x1590>
   30c58:	cmn	w20, #0x1
   30c5c:	b.ne	30c7c <__ubsan_default_options@@Base+0x1574>  // b.any
   30c60:	ldp	x19, x20, [sp]
   30c64:	ldp	x21, x22, [sp, #16]
   30c68:	ldp	x23, x24, [sp, #32]
   30c6c:	ldp	x25, x26, [sp, #48]
   30c70:	ldr	x30, [sp, #72]
   30c74:	add	sp, sp, #0x2a0
   30c78:	ret
   30c7c:	ldr	x1, [x19, #8]
   30c80:	mov	x2, x21
   30c84:	mov	w0, #0x1c                  	// #28
   30c88:	bl	2f258 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6970>
   30c8c:	tst	w0, #0xff
   30c90:	b.ne	30c60 <__ubsan_default_options@@Base+0x1558>  // b.any
   30c94:	nop
   30c98:	mov	w26, #0x1                   	// #1
   30c9c:	str	w26, [sp, #240]
   30ca0:	str	x21, [sp, #248]
   30ca4:	mov	w3, #0x1c                  	// #28
   30ca8:	str	w24, [sp, #256]
   30cac:	add	x2, sp, #0x50
   30cb0:	str	w20, [sp, #260]
   30cb4:	add	x1, sp, #0x80
   30cb8:	ldp	x6, x7, [sp, #240]
   30cbc:	stp	x6, x7, [sp, #80]
   30cc0:	add	x23, sp, #0xf0
   30cc4:	ldp	x6, x7, [x19]
   30cc8:	str	x27, [sp, #64]
   30ccc:	ldp	x4, x5, [sp, #256]
   30cd0:	stp	x4, x5, [sp, #96]
   30cd4:	add	x27, sp, #0xa0
   30cd8:	ldr	x4, [x19, #16]
   30cdc:	mov	x0, x27
   30ce0:	ldr	x8, [sp, #272]
   30ce4:	str	x8, [sp, #112]
   30ce8:	stp	x6, x7, [sp, #128]
   30cec:	str	x4, [sp, #144]
   30cf0:	bl	2eff0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6708>
   30cf4:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   30cf8:	add	x1, x1, #0xae8
   30cfc:	mov	x2, #0x1c00000000          	// #120259084288
   30d00:	mov	x0, x23
   30d04:	str	w26, [sp, #240]
   30d08:	str	x21, [sp, #248]
   30d0c:	str	w24, [sp, #256]
   30d10:	str	w20, [sp, #260]
   30d14:	stp	x2, x1, [sp, #280]
   30d18:	str	wzr, [sp, #560]
   30d1c:	str	wzr, [sp, #568]
   30d20:	str	xzr, [sp, #576]
   30d24:	str	xzr, [sp, #584]
   30d28:	str	wzr, [sp, #608]
   30d2c:	str	xzr, [sp, #616]
   30d30:	str	xzr, [sp, #624]
   30d34:	str	xzr, [sp, #648]
   30d38:	str	wzr, [sp, #656]
   30d3c:	bl	2e660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   30d40:	ldr	x3, [x25]
   30d44:	cbz	x3, 30db8 <__ubsan_default_options@@Base+0x16b0>
   30d48:	cmp	w22, #0x0
   30d4c:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   30d50:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   30d54:	add	x2, x2, #0xa48
   30d58:	add	x1, x1, #0xa28
   30d5c:	mov	x4, #0x1                   	// #1
   30d60:	csel	x1, x1, x2, ne  // ne = any
   30d64:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   30d68:	add	x2, x2, #0xa10
   30d6c:	ldr	d0, [x25, #8]
   30d70:	movk	x4, #0x1c, lsl #32
   30d74:	mov	x0, x23
   30d78:	str	w26, [sp, #240]
   30d7c:	str	x3, [sp, #248]
   30d80:	str	d0, [sp, #256]
   30d84:	stp	x4, x2, [sp, #280]
   30d88:	str	wzr, [sp, #304]
   30d8c:	str	x1, [sp, #320]
   30d90:	str	w26, [sp, #560]
   30d94:	str	wzr, [sp, #568]
   30d98:	str	xzr, [sp, #576]
   30d9c:	str	xzr, [sp, #584]
   30da0:	str	wzr, [sp, #608]
   30da4:	str	xzr, [sp, #616]
   30da8:	str	xzr, [sp, #624]
   30dac:	str	xzr, [sp, #648]
   30db0:	str	wzr, [sp, #656]
   30db4:	bl	2e660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   30db8:	mov	x0, x27
   30dbc:	bl	2f058 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6770>
   30dc0:	ldp	x19, x20, [sp]
   30dc4:	ldp	x21, x22, [sp, #16]
   30dc8:	ldp	x23, x24, [sp, #32]
   30dcc:	ldp	x25, x26, [sp, #48]
   30dd0:	ldr	x27, [sp, #64]
   30dd4:	ldr	x30, [sp, #72]
   30dd8:	add	sp, sp, #0x2a0
   30ddc:	ret
   30de0:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   30de4:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   30de8:	add	x2, x2, #0xa68
   30dec:	add	x0, x0, #0xaa0
   30df0:	mov	x4, #0x0                   	// #0
   30df4:	mov	x3, #0x0                   	// #0
   30df8:	mov	w1, #0x25c                 	// #604
   30dfc:	str	x27, [sp, #64]
   30e00:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   30e04:	nop
   30e08:	sub	sp, sp, #0x2f0
   30e0c:	stp	x25, x26, [sp, #48]
   30e10:	mov	x25, x1
   30e14:	add	x1, x0, #0xc
   30e18:	stp	x19, x20, [sp]
   30e1c:	stp	x21, x22, [sp, #16]
   30e20:	stp	x23, x24, [sp, #32]
   30e24:	stp	x27, x28, [sp, #64]
   30e28:	str	x30, [sp, #80]
   30e2c:	stp	x2, x3, [sp, #96]
   30e30:	mov	w2, #0xffffffff            	// #-1
   30e34:	ldxr	w21, [x1]
   30e38:	stxr	w3, w2, [x1]
   30e3c:	cbnz	w3, 30e34 <__ubsan_default_options@@Base+0x172c>
   30e40:	dmb	ish
   30e44:	ldp	x26, x28, [x0, #16]
   30e48:	mov	w23, #0x0                   	// #0
   30e4c:	ldr	w20, [x0, #8]
   30e50:	ldr	x10, [x0]
   30e54:	ldrh	w1, [x26]
   30e58:	cbnz	w1, 30e64 <__ubsan_default_options@@Base+0x175c>
   30e5c:	ldrh	w8, [x26, #2]
   30e60:	and	w23, w8, #0x1
   30e64:	ldrh	w1, [x28]
   30e68:	cbnz	w1, 30e74 <__ubsan_default_options@@Base+0x176c>
   30e6c:	ldrh	w1, [x28, #2]
   30e70:	tbnz	w1, #0, 31124 <__ubsan_default_options@@Base+0x1a1c>
   30e74:	ldrb	w0, [x0, #32]
   30e78:	mov	w1, w23
   30e7c:	str	wzr, [sp, #116]
   30e80:	cmp	w0, #0x2
   30e84:	b.eq	31138 <__ubsan_default_options@@Base+0x1a30>  // b.none
   30e88:	b.ls	30ed4 <__ubsan_default_options@@Base+0x17cc>  // b.plast
   30e8c:	cmp	w0, #0x3
   30e90:	mov	w19, #0x10                  	// #16
   30e94:	b.eq	30ea4 <__ubsan_default_options@@Base+0x179c>  // b.none
   30e98:	cmp	w0, #0x4
   30e9c:	mov	w19, #0x11                  	// #17
   30ea0:	csel	w19, wzr, w19, ne  // ne = any
   30ea4:	ldrb	w0, [x25]
   30ea8:	cbnz	w0, 30ef0 <__ubsan_default_options@@Base+0x17e8>
   30eac:	cmn	w21, #0x1
   30eb0:	b.ne	310e4 <__ubsan_default_options@@Base+0x19dc>  // b.any
   30eb4:	ldp	x19, x20, [sp]
   30eb8:	ldp	x21, x22, [sp, #16]
   30ebc:	ldp	x23, x24, [sp, #32]
   30ec0:	ldp	x25, x26, [sp, #48]
   30ec4:	ldp	x27, x28, [sp, #64]
   30ec8:	ldr	x30, [sp, #80]
   30ecc:	add	sp, sp, #0x2f0
   30ed0:	ret
   30ed4:	mov	w19, #0xe                   	// #14
   30ed8:	cbnz	w0, 30ea4 <__ubsan_default_options@@Base+0x179c>
   30edc:	ldrb	w0, [x25]
   30ee0:	cmp	w1, #0x0
   30ee4:	cset	w19, ne  // ne = any
   30ee8:	add	w19, w19, #0xe
   30eec:	cbz	w0, 30eac <__ubsan_default_options@@Base+0x17a4>
   30ef0:	mov	w22, #0x1                   	// #1
   30ef4:	str	w22, [sp, #320]
   30ef8:	str	x10, [sp, #328]
   30efc:	add	x24, sp, #0xf0
   30f00:	str	w20, [sp, #336]
   30f04:	mov	w3, w19
   30f08:	str	w21, [sp, #340]
   30f0c:	add	x2, sp, #0x80
   30f10:	ldp	x6, x7, [sp, #320]
   30f14:	stp	x6, x7, [sp, #128]
   30f18:	mov	x0, x24
   30f1c:	ldp	x4, x5, [sp, #336]
   30f20:	stp	x4, x5, [sp, #144]
   30f24:	add	x1, sp, #0xb0
   30f28:	ldp	x4, x5, [x25]
   30f2c:	str	x10, [sp, #120]
   30f30:	ldr	x6, [sp, #352]
   30f34:	str	x6, [sp, #160]
   30f38:	ldr	x6, [x25, #16]
   30f3c:	stp	x4, x5, [sp, #176]
   30f40:	add	x27, sp, #0x140
   30f44:	str	x6, [sp, #192]
   30f48:	bl	2eff0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6708>
   30f4c:	str	w22, [sp, #320]
   30f50:	add	x3, sp, #0x160
   30f54:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   30f58:	ldr	x10, [sp, #120]
   30f5c:	add	x2, x2, #0xb38
   30f60:	str	x10, [sp, #328]
   30f64:	mov	x1, x26
   30f68:	stp	w20, w21, [x3, #-16]
   30f6c:	mov	x0, x27
   30f70:	stp	wzr, w19, [x3, #8]
   30f74:	str	x2, [sp, #368]
   30f78:	str	wzr, [sp, #640]
   30f7c:	str	wzr, [sp, #648]
   30f80:	str	xzr, [sp, #656]
   30f84:	str	xzr, [sp, #664]
   30f88:	str	wzr, [sp, #688]
   30f8c:	str	xzr, [sp, #696]
   30f90:	str	xzr, [sp, #704]
   30f94:	str	xzr, [sp, #728]
   30f98:	str	wzr, [sp, #736]
   30f9c:	bl	2e4c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5be0>
   30fa0:	ldr	x2, [sp, #96]
   30fa4:	add	x1, sp, #0xd0
   30fa8:	stp	x26, x2, [sp, #208]
   30fac:	bl	2e520 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c38>
   30fb0:	ldrh	w1, [x26]
   30fb4:	cbnz	w1, 31140 <__ubsan_default_options@@Base+0x1a38>
   30fb8:	ldrh	w1, [x26, #2]
   30fbc:	ldr	w4, [x0, #320]
   30fc0:	asr	w1, w1, #1
   30fc4:	cmp	w4, #0x8
   30fc8:	lsl	w5, w22, w1
   30fcc:	b.eq	31160 <__ubsan_default_options@@Base+0x1a58>  // b.none
   30fd0:	ubfiz	x3, x4, #5, #32
   30fd4:	add	w1, w4, #0x1
   30fd8:	add	x3, x3, #0x40
   30fdc:	str	w1, [x0, #320]
   30fe0:	add	x6, x0, x3
   30fe4:	mov	w19, #0x2                   	// #2
   30fe8:	cmp	w23, #0x0
   30fec:	adrp	x20, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   30ff0:	str	w19, [x0, x3]
   30ff4:	add	x20, x20, #0xb30
   30ff8:	stp	x5, xzr, [x6, #16]
   30ffc:	adrp	x25, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   31000:	add	x25, x25, #0x3e8
   31004:	csel	x5, x25, x20, ne  // ne = any
   31008:	cmp	w1, #0x8
   3100c:	b.eq	31160 <__ubsan_default_options@@Base+0x1a58>  // b.none
   31010:	ubfiz	x1, x1, #5, #32
   31014:	add	w4, w4, #0x2
   31018:	add	x3, x1, #0x40
   3101c:	str	w4, [x0, #320]
   31020:	add	x4, x0, x3
   31024:	mov	x1, x28
   31028:	str	wzr, [x0, x3]
   3102c:	str	x5, [x4, #16]
   31030:	bl	2e4c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5be0>
   31034:	ldr	x2, [sp, #104]
   31038:	add	x1, sp, #0xe0
   3103c:	stp	x28, x2, [sp, #224]
   31040:	bl	2e520 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c38>
   31044:	mov	x1, x0
   31048:	ldrh	w2, [x28]
   3104c:	cbnz	w2, 31140 <__ubsan_default_options@@Base+0x1a38>
   31050:	ldrh	w0, [x28, #2]
   31054:	ldr	w3, [x1, #320]
   31058:	asr	w0, w0, #1
   3105c:	cmp	w3, #0x8
   31060:	lsl	w22, w22, w0
   31064:	b.eq	31160 <__ubsan_default_options@@Base+0x1a58>  // b.none
   31068:	ubfiz	x2, x3, #5, #32
   3106c:	add	w0, w3, #0x1
   31070:	add	x2, x2, #0x40
   31074:	str	w0, [x1, #320]
   31078:	add	x5, x1, x2
   3107c:	ldr	w4, [sp, #116]
   31080:	str	w19, [x1, x2]
   31084:	cmp	w4, #0x0
   31088:	stp	x22, xzr, [x5, #16]
   3108c:	csel	x4, x25, x20, ne  // ne = any
   31090:	cmp	w0, #0x8
   31094:	b.eq	31160 <__ubsan_default_options@@Base+0x1a58>  // b.none
   31098:	ubfiz	x0, x0, #5, #32
   3109c:	add	w3, w3, #0x2
   310a0:	add	x2, x0, #0x40
   310a4:	str	w3, [x1, #320]
   310a8:	add	x3, x1, x2
   310ac:	mov	x0, x27
   310b0:	str	wzr, [x1, x2]
   310b4:	str	x4, [x3, #16]
   310b8:	bl	2e660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   310bc:	mov	x0, x24
   310c0:	bl	2f058 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6770>
   310c4:	ldp	x19, x20, [sp]
   310c8:	ldp	x21, x22, [sp, #16]
   310cc:	ldp	x23, x24, [sp, #32]
   310d0:	ldp	x25, x26, [sp, #48]
   310d4:	ldp	x27, x28, [sp, #64]
   310d8:	ldr	x30, [sp, #80]
   310dc:	add	sp, sp, #0x2f0
   310e0:	ret
   310e4:	ldr	x1, [x25, #8]
   310e8:	mov	x2, x10
   310ec:	mov	w0, w19
   310f0:	str	x10, [sp, #120]
   310f4:	bl	2f258 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6970>
   310f8:	tst	w0, #0xff
   310fc:	ldr	x10, [sp, #120]
   31100:	b.eq	30ef0 <__ubsan_default_options@@Base+0x17e8>  // b.none
   31104:	ldp	x19, x20, [sp]
   31108:	ldp	x21, x22, [sp, #16]
   3110c:	ldp	x23, x24, [sp, #32]
   31110:	ldp	x25, x26, [sp, #48]
   31114:	ldp	x27, x28, [sp, #64]
   31118:	ldr	x30, [sp, #80]
   3111c:	add	sp, sp, #0x2f0
   31120:	ret
   31124:	ldrb	w0, [x0, #32]
   31128:	mov	w1, #0x1                   	// #1
   3112c:	str	w1, [sp, #116]
   31130:	cmp	w0, #0x2
   31134:	b.ne	30e88 <__ubsan_default_options@@Base+0x1780>  // b.any
   31138:	mov	w19, #0xf                   	// #15
   3113c:	b	30ea4 <__ubsan_default_options@@Base+0x179c>
   31140:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   31144:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   31148:	add	x2, x2, #0xbb0
   3114c:	add	x0, x0, #0xbd0
   31150:	mov	x4, #0x0                   	// #0
   31154:	mov	x3, #0x0                   	// #0
   31158:	mov	w1, #0x7c                  	// #124
   3115c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   31160:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   31164:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   31168:	add	x2, x2, #0x200
   3116c:	add	x0, x0, #0x188
   31170:	mov	x4, #0x0                   	// #0
   31174:	mov	x3, #0x0                   	// #0
   31178:	mov	w1, #0xc0                  	// #192
   3117c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   31180:	sub	sp, sp, #0x2f0
   31184:	stp	x19, x20, [sp]
   31188:	mov	x19, x0
   3118c:	add	x0, x0, #0xc
   31190:	stp	x21, x22, [sp, #16]
   31194:	mov	x21, x3
   31198:	mov	x20, x1
   3119c:	stp	x23, x24, [sp, #32]
   311a0:	mov	x24, x2
   311a4:	mov	w1, #0xffffffff            	// #-1
   311a8:	stp	x25, x26, [sp, #48]
   311ac:	mov	x26, x4
   311b0:	stp	x27, x28, [sp, #64]
   311b4:	str	x30, [sp, #80]
   311b8:	ldxr	w28, [x0]
   311bc:	stxr	w2, w1, [x0]
   311c0:	cbnz	w2, 311b8 <__ubsan_default_options@@Base+0x1ab0>
   311c4:	dmb	ish
   311c8:	ldr	w25, [x19, #8]
   311cc:	ldr	x22, [x19]
   311d0:	add	x0, x19, #0x1c
   311d4:	ldxr	w2, [x0]
   311d8:	stxr	w3, w1, [x0]
   311dc:	cbnz	w3, 311d4 <__ubsan_default_options@@Base+0x1acc>
   311e0:	dmb	ish
   311e4:	ldrb	w0, [x26]
   311e8:	ldr	x1, [x19, #16]
   311ec:	str	x1, [sp, #96]
   311f0:	ldr	w1, [x19, #24]
   311f4:	str	w2, [sp, #104]
   311f8:	str	w1, [sp, #108]
   311fc:	cbnz	w0, 31240 <__ubsan_default_options@@Base+0x1b38>
   31200:	cmn	w28, #0x1
   31204:	b.ne	31228 <__ubsan_default_options@@Base+0x1b20>  // b.any
   31208:	ldp	x19, x20, [sp]
   3120c:	ldp	x21, x22, [sp, #16]
   31210:	ldp	x23, x24, [sp, #32]
   31214:	ldp	x25, x26, [sp, #48]
   31218:	ldp	x27, x28, [sp, #64]
   3121c:	ldr	x30, [sp, #80]
   31220:	add	sp, sp, #0x2f0
   31224:	ret
   31228:	ldr	x1, [x26, #8]
   3122c:	mov	x2, x22
   31230:	mov	w0, #0x7                   	// #7
   31234:	bl	2f258 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6970>
   31238:	tst	w0, #0xff
   3123c:	b.ne	31208 <__ubsan_default_options@@Base+0x1b00>  // b.any
   31240:	mov	w11, #0x1                   	// #1
   31244:	str	w11, [sp, #200]
   31248:	str	x22, [sp, #208]
   3124c:	add	x23, sp, #0xf0
   31250:	stp	w25, w28, [sp, #216]
   31254:	mov	x0, x23
   31258:	ldp	x8, x9, [sp, #200]
   3125c:	stp	x8, x9, [sp, #112]
   31260:	add	x2, sp, #0x70
   31264:	ldp	x6, x7, [sp, #216]
   31268:	stp	x6, x7, [sp, #128]
   3126c:	add	x1, sp, #0xa0
   31270:	ldp	x6, x7, [x26]
   31274:	mov	w3, #0x7                   	// #7
   31278:	ldr	x8, [sp, #232]
   3127c:	str	x8, [sp, #144]
   31280:	ldr	x8, [x26, #16]
   31284:	stp	x6, x7, [sp, #160]
   31288:	str	x8, [sp, #176]
   3128c:	bl	2eff0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6708>
   31290:	subs	x20, x20, x21
   31294:	mov	w11, #0x1                   	// #1
   31298:	b.eq	31474 <__ubsan_default_options@@Base+0x1d6c>  // b.none
   3129c:	rbit	x27, x20
   312a0:	sub	x26, x24, #0x1
   312a4:	clz	x27, x27
   312a8:	mov	x2, #0x1                   	// #1
   312ac:	and	x26, x26, x20
   312b0:	lsl	x27, x2, x27
   312b4:	ldr	x1, [x19, #32]
   312b8:	add	x19, sp, #0x140
   312bc:	cbnz	x21, 31434 <__ubsan_default_options@@Base+0x1d2c>
   312c0:	mov	x0, x19
   312c4:	adrp	x3, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   312c8:	mov	x7, #0x700000000           	// #30064771072
   312cc:	add	x3, x3, #0xc20
   312d0:	mov	w6, #0x2                   	// #2
   312d4:	str	w2, [sp, #320]
   312d8:	str	x22, [sp, #328]
   312dc:	str	w25, [sp, #336]
   312e0:	str	w28, [sp, #340]
   312e4:	stp	x7, x3, [sp, #360]
   312e8:	str	w6, [sp, #384]
   312ec:	stp	x24, xzr, [sp, #400]
   312f0:	str	w11, [sp, #640]
   312f4:	str	wzr, [sp, #648]
   312f8:	str	xzr, [sp, #656]
   312fc:	str	xzr, [sp, #664]
   31300:	str	wzr, [sp, #688]
   31304:	str	xzr, [sp, #696]
   31308:	str	xzr, [sp, #704]
   3130c:	str	xzr, [sp, #728]
   31310:	str	wzr, [sp, #736]
   31314:	bl	2e4c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5be0>
   31318:	mov	x0, x19
   3131c:	bl	2e660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   31320:	ldr	x4, [sp, #96]
   31324:	cbz	x4, 31384 <__ubsan_default_options@@Base+0x1c7c>
   31328:	mov	w3, #0x1                   	// #1
   3132c:	str	w3, [sp, #320]
   31330:	ldr	w3, [sp, #108]
   31334:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   31338:	str	w3, [sp, #336]
   3133c:	add	x1, x1, #0xcb8
   31340:	ldr	w3, [sp, #104]
   31344:	mov	x2, #0x1                   	// #1
   31348:	movk	x2, #0x7, lsl #32
   3134c:	mov	x0, x19
   31350:	str	x4, [sp, #328]
   31354:	str	w3, [sp, #340]
   31358:	stp	x2, x1, [sp, #360]
   3135c:	str	wzr, [sp, #640]
   31360:	str	wzr, [sp, #648]
   31364:	str	xzr, [sp, #656]
   31368:	str	xzr, [sp, #664]
   3136c:	str	wzr, [sp, #688]
   31370:	str	xzr, [sp, #696]
   31374:	str	xzr, [sp, #704]
   31378:	str	xzr, [sp, #728]
   3137c:	str	wzr, [sp, #736]
   31380:	bl	2e660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   31384:	cmp	x21, #0x0
   31388:	adrp	x2, 3d000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9398>
   3138c:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   31390:	add	x2, x2, #0x3e8
   31394:	add	x1, x1, #0xc18
   31398:	adrp	x3, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   3139c:	csel	x1, x1, x2, ne  // ne = any
   313a0:	add	x3, x3, #0xce0
   313a4:	mov	x5, #0x1                   	// #1
   313a8:	mov	w2, #0x2                   	// #2
   313ac:	movk	x5, #0x7, lsl #32
   313b0:	mov	w4, #0x3                   	// #3
   313b4:	mov	x0, x19
   313b8:	str	w2, [sp, #320]
   313bc:	str	xzr, [sp, #328]
   313c0:	str	xzr, [sp, #336]
   313c4:	str	x20, [sp, #344]
   313c8:	stp	x5, x3, [sp, #360]
   313cc:	str	wzr, [sp, #384]
   313d0:	str	x1, [sp, #400]
   313d4:	str	w2, [sp, #416]
   313d8:	stp	x27, xzr, [sp, #432]
   313dc:	str	w2, [sp, #448]
   313e0:	stp	x26, xzr, [sp, #464]
   313e4:	str	w4, [sp, #640]
   313e8:	str	wzr, [sp, #648]
   313ec:	str	xzr, [sp, #656]
   313f0:	str	xzr, [sp, #664]
   313f4:	str	wzr, [sp, #688]
   313f8:	str	xzr, [sp, #696]
   313fc:	str	xzr, [sp, #704]
   31400:	str	xzr, [sp, #728]
   31404:	str	wzr, [sp, #736]
   31408:	bl	2e660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   3140c:	mov	x0, x23
   31410:	bl	2f058 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6770>
   31414:	ldp	x19, x20, [sp]
   31418:	ldp	x21, x22, [sp, #16]
   3141c:	ldp	x23, x24, [sp, #32]
   31420:	ldp	x25, x26, [sp, #48]
   31424:	ldp	x27, x28, [sp, #64]
   31428:	ldr	x30, [sp, #80]
   3142c:	add	sp, sp, #0x2f0
   31430:	ret
   31434:	mov	w3, #0x2                   	// #2
   31438:	adrp	x6, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   3143c:	mov	x7, #0x700000000           	// #30064771072
   31440:	add	x6, x6, #0xc60
   31444:	mov	x0, x19
   31448:	str	w2, [sp, #320]
   3144c:	str	x22, [sp, #328]
   31450:	str	w25, [sp, #336]
   31454:	str	w28, [sp, #340]
   31458:	stp	x7, x6, [sp, #360]
   3145c:	str	w3, [sp, #384]
   31460:	stp	x24, xzr, [sp, #400]
   31464:	str	w3, [sp, #416]
   31468:	stp	x21, xzr, [sp, #432]
   3146c:	str	w3, [sp, #640]
   31470:	b	312f4 <__ubsan_default_options@@Base+0x1bec>
   31474:	adrp	x2, 35000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1398>
   31478:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   3147c:	add	x2, x2, #0x790
   31480:	add	x0, x0, #0x248
   31484:	mov	x4, #0x0                   	// #0
   31488:	mov	x3, #0x0                   	// #0
   3148c:	mov	w1, #0x171                 	// #369
   31490:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   31494:	nop
   31498:	sub	sp, sp, #0x2c0
   3149c:	stp	x19, x20, [sp]
   314a0:	mov	x19, x0
   314a4:	ldrb	w0, [x0]
   314a8:	stp	x21, x22, [sp, #16]
   314ac:	sub	w0, w0, #0x4
   314b0:	stp	x23, x24, [sp, #32]
   314b4:	and	w0, w0, #0xff
   314b8:	cmp	w0, #0x1
   314bc:	stp	x25, x26, [sp, #48]
   314c0:	stp	x27, x28, [sp, #64]
   314c4:	ldr	x26, [x2, #8]
   314c8:	str	x30, [sp, #80]
   314cc:	b.hi	317bc <__ubsan_default_options@@Base+0x20b4>  // b.pmore
   314d0:	mov	x28, x2
   314d4:	add	x0, x19, #0x14
   314d8:	mov	x20, x1
   314dc:	mov	w1, #0xffffffff            	// #-1
   314e0:	ldxr	w21, [x0]
   314e4:	stxr	w2, w1, [x0]
   314e8:	cbnz	w2, 314e0 <__ubsan_default_options@@Base+0x1dd8>
   314ec:	dmb	ish
   314f0:	ldrb	w0, [x28]
   314f4:	ldr	w24, [x19, #16]
   314f8:	ldr	x23, [x19, #8]
   314fc:	cbnz	w0, 31540 <__ubsan_default_options@@Base+0x1e38>
   31500:	cmp	w21, w1
   31504:	b.ne	31528 <__ubsan_default_options@@Base+0x1e20>  // b.any
   31508:	ldp	x19, x20, [sp]
   3150c:	ldp	x21, x22, [sp, #16]
   31510:	ldp	x23, x24, [sp, #32]
   31514:	ldp	x25, x26, [sp, #48]
   31518:	ldp	x27, x28, [sp, #64]
   3151c:	ldr	x30, [sp, #80]
   31520:	add	sp, sp, #0x2c0
   31524:	ret
   31528:	mov	x2, x23
   3152c:	mov	x1, x26
   31530:	mov	w0, #0x1f                  	// #31
   31534:	bl	2f258 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6970>
   31538:	tst	w0, #0xff
   3153c:	b.ne	31508 <__ubsan_default_options@@Base+0x1e00>  // b.any
   31540:	mov	w25, #0x1                   	// #1
   31544:	str	w25, [sp, #272]
   31548:	str	x23, [sp, #280]
   3154c:	add	x27, sp, #0xc0
   31550:	str	w24, [sp, #288]
   31554:	mov	x0, x27
   31558:	str	w21, [sp, #292]
   3155c:	add	x2, sp, #0x60
   31560:	ldp	x6, x7, [sp, #272]
   31564:	stp	x6, x7, [sp, #96]
   31568:	add	x1, sp, #0x90
   3156c:	ldp	x6, x7, [x28]
   31570:	mov	w3, #0x1f                  	// #31
   31574:	ldp	x4, x5, [sp, #288]
   31578:	stp	x4, x5, [sp, #112]
   3157c:	add	x22, sp, #0x110
   31580:	ldr	x4, [x28, #16]
   31584:	stp	x6, x7, [sp, #144]
   31588:	ldr	x8, [sp, #304]
   3158c:	str	x8, [sp, #128]
   31590:	str	x4, [sp, #160]
   31594:	bl	2eff0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6708>
   31598:	str	w25, [sp, #272]
   3159c:	ldrb	w2, [x19]
   315a0:	mov	x3, #0x1f00000000          	// #133143986176
   315a4:	ldr	x1, [x19, #24]
   315a8:	cmp	w2, #0x5
   315ac:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   315b0:	add	x2, x2, #0xd78
   315b4:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   315b8:	adrp	x19, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   315bc:	add	x0, x0, #0xd50
   315c0:	add	x19, x19, #0xd20
   315c4:	csel	x19, x19, x0, eq  // eq = none
   315c8:	mov	x0, x22
   315cc:	str	x23, [sp, #280]
   315d0:	str	w24, [sp, #288]
   315d4:	str	w21, [sp, #292]
   315d8:	stp	x3, x2, [sp, #312]
   315dc:	str	wzr, [sp, #592]
   315e0:	str	wzr, [sp, #600]
   315e4:	str	xzr, [sp, #608]
   315e8:	str	xzr, [sp, #616]
   315ec:	str	wzr, [sp, #640]
   315f0:	str	xzr, [sp, #648]
   315f4:	str	xzr, [sp, #656]
   315f8:	str	xzr, [sp, #680]
   315fc:	str	wzr, [sp, #688]
   31600:	bl	2e4c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5be0>
   31604:	mov	x1, x0
   31608:	ldr	w0, [x0, #320]
   3160c:	cmp	w0, #0x8
   31610:	b.eq	31730 <__ubsan_default_options@@Base+0x2028>  // b.none
   31614:	ubfiz	x2, x0, #5, #32
   31618:	add	w0, w0, #0x1
   3161c:	add	x2, x2, #0x40
   31620:	str	w0, [x1, #320]
   31624:	add	x3, x1, x2
   31628:	mov	x0, x22
   3162c:	str	wzr, [x1, x2]
   31630:	str	x19, [x3, #16]
   31634:	bl	2e660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   31638:	mov	x0, x20
   3163c:	bl	2e4a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5bc0>
   31640:	mov	x19, x0
   31644:	adrp	x20, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   31648:	add	x20, x20, #0xd68
   3164c:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   31650:	mov	x3, #0x1                   	// #1
   31654:	add	x2, x2, #0xdb8
   31658:	ldr	x1, [x19, #40]
   3165c:	mov	w4, #0x3                   	// #3
   31660:	movk	x3, #0x1f, lsl #32
   31664:	mov	x0, x22
   31668:	cmp	x1, #0x0
   3166c:	str	w4, [sp, #272]
   31670:	csel	x1, x20, x1, eq  // eq = none
   31674:	str	xzr, [sp, #280]
   31678:	str	xzr, [sp, #288]
   3167c:	stp	x19, x3, [sp, #304]
   31680:	str	x2, [sp, #320]
   31684:	str	wzr, [sp, #336]
   31688:	str	x1, [sp, #352]
   3168c:	str	w25, [sp, #592]
   31690:	str	wzr, [sp, #600]
   31694:	str	xzr, [sp, #608]
   31698:	str	xzr, [sp, #616]
   3169c:	str	wzr, [sp, #640]
   316a0:	str	xzr, [sp, #648]
   316a4:	str	xzr, [sp, #656]
   316a8:	str	xzr, [sp, #680]
   316ac:	str	wzr, [sp, #688]
   316b0:	bl	2e660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   316b4:	ldr	x25, [x19, #16]
   316b8:	cmp	x25, #0x0
   316bc:	csel	x25, x20, x25, eq  // eq = none
   316c0:	bl	299b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10c8>
   316c4:	str	xzr, [sp, #184]
   316c8:	mov	x1, x26
   316cc:	mov	x3, x22
   316d0:	add	x2, sp, #0xb8
   316d4:	mov	x26, x20
   316d8:	bl	2a0a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x17b8>
   316dc:	tst	w0, #0xff
   316e0:	b.eq	316f0 <__ubsan_default_options@@Base+0x1fe8>  // b.none
   316e4:	ldr	x26, [sp, #184]
   316e8:	cmp	x26, #0x0
   316ec:	csel	x26, x20, x26, eq  // eq = none
   316f0:	mov	x1, x25
   316f4:	mov	x0, x26
   316f8:	bl	1a560 <__sanitizer_set_report_fd@@Base+0x26e0>
   316fc:	cbnz	w0, 31750 <__ubsan_default_options@@Base+0x2048>
   31700:	mov	x0, x19
   31704:	bl	29220 <__sanitizer_get_module_and_offset_for_pc@@Base+0x938>
   31708:	mov	x0, x27
   3170c:	bl	2f058 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6770>
   31710:	ldp	x19, x20, [sp]
   31714:	ldp	x21, x22, [sp, #16]
   31718:	ldp	x23, x24, [sp, #32]
   3171c:	ldp	x25, x26, [sp, #48]
   31720:	ldp	x27, x28, [sp, #64]
   31724:	ldr	x30, [sp, #80]
   31728:	add	sp, sp, #0x2c0
   3172c:	ret
   31730:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   31734:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   31738:	add	x2, x2, #0x200
   3173c:	add	x0, x0, #0x188
   31740:	mov	x4, #0x0                   	// #0
   31744:	mov	x3, #0x0                   	// #0
   31748:	mov	w1, #0xc0                  	// #192
   3174c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   31750:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   31754:	mov	x3, #0x1                   	// #1
   31758:	add	x1, x1, #0xdc8
   3175c:	mov	w4, #0x1                   	// #1
   31760:	movk	x3, #0x1f, lsl #32
   31764:	mov	w2, #0x2                   	// #2
   31768:	mov	x0, x22
   3176c:	str	w4, [sp, #272]
   31770:	str	x23, [sp, #280]
   31774:	str	w24, [sp, #288]
   31778:	str	w21, [sp, #292]
   3177c:	stp	x3, x1, [sp, #312]
   31780:	str	wzr, [sp, #336]
   31784:	str	x26, [sp, #352]
   31788:	str	wzr, [sp, #368]
   3178c:	str	x25, [sp, #384]
   31790:	str	w2, [sp, #592]
   31794:	str	wzr, [sp, #600]
   31798:	str	xzr, [sp, #608]
   3179c:	str	xzr, [sp, #616]
   317a0:	str	wzr, [sp, #640]
   317a4:	str	xzr, [sp, #648]
   317a8:	str	xzr, [sp, #656]
   317ac:	str	xzr, [sp, #680]
   317b0:	str	wzr, [sp, #688]
   317b4:	bl	2e660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   317b8:	b	31700 <__ubsan_default_options@@Base+0x1ff8>
   317bc:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   317c0:	sub	sp, sp, #0x2f0
   317c4:	mov	w3, #0xffffffff            	// #-1
   317c8:	stp	x19, x20, [sp]
   317cc:	mov	x19, x0
   317d0:	mov	x20, x1
   317d4:	add	x0, x0, #0xc
   317d8:	stp	x27, x28, [sp, #64]
   317dc:	mov	x28, x2
   317e0:	stp	x21, x22, [sp, #16]
   317e4:	stp	x23, x24, [sp, #32]
   317e8:	stp	x25, x26, [sp, #48]
   317ec:	ldr	x24, [x2, #8]
   317f0:	str	x30, [sp, #80]
   317f4:	ldxr	w27, [x0]
   317f8:	stxr	w1, w3, [x0]
   317fc:	cbnz	w1, 317f4 <__ubsan_default_options@@Base+0x20ec>
   31800:	dmb	ish
   31804:	ldrb	w25, [x19, #24]
   31808:	mov	x0, #0x1                   	// #1
   3180c:	ldr	w23, [x19, #8]
   31810:	mov	w21, w0
   31814:	lsl	x25, x0, x25
   31818:	ldr	x26, [x19]
   3181c:	cbz	x20, 31834 <__ubsan_default_options@@Base+0x212c>
   31820:	sub	x0, x25, #0x1
   31824:	mov	w21, #0x6                   	// #6
   31828:	tst	x0, x20
   3182c:	mov	w3, #0x8                   	// #8
   31830:	csel	w21, w21, w3, ne  // ne = any
   31834:	ldrb	w0, [x28]
   31838:	cbnz	w0, 31884 <__ubsan_default_options@@Base+0x217c>
   3183c:	cmn	w27, #0x1
   31840:	b.ne	31864 <__ubsan_default_options@@Base+0x215c>  // b.any
   31844:	ldp	x19, x20, [sp]
   31848:	ldp	x21, x22, [sp, #16]
   3184c:	ldp	x23, x24, [sp, #32]
   31850:	ldp	x25, x26, [sp, #48]
   31854:	ldp	x27, x28, [sp, #64]
   31858:	ldr	x30, [sp, #80]
   3185c:	add	sp, sp, #0x2f0
   31860:	ret
   31864:	mov	x2, x26
   31868:	mov	x1, x24
   3186c:	mov	w0, w21
   31870:	bl	2f258 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6970>
   31874:	tst	w0, #0xff
   31878:	b.ne	31844 <__ubsan_default_options@@Base+0x213c>  // b.any
   3187c:	ldr	x0, [x19]
   31880:	b	31888 <__ubsan_default_options@@Base+0x2180>
   31884:	mov	x0, x26
   31888:	mov	w9, #0x1                   	// #1
   3188c:	mov	x22, #0x0                   	// #0
   31890:	cbz	x0, 31b00 <__ubsan_default_options@@Base+0x23f8>
   31894:	str	w9, [sp, #200]
   31898:	add	x24, sp, #0xf0
   3189c:	str	x26, [sp, #208]
   318a0:	mov	x0, x24
   318a4:	stp	w23, w27, [sp, #216]
   318a8:	mov	w3, w21
   318ac:	ldp	x6, x7, [sp, #200]
   318b0:	stp	x6, x7, [sp, #112]
   318b4:	add	x2, sp, #0x70
   318b8:	ldp	x6, x7, [x28]
   318bc:	add	x1, sp, #0xa0
   318c0:	ldp	x4, x5, [sp, #216]
   318c4:	stp	x4, x5, [sp, #128]
   318c8:	ldr	x4, [x28, #16]
   318cc:	str	w9, [sp, #108]
   318d0:	ldr	x5, [sp, #96]
   318d4:	str	x5, [sp, #144]
   318d8:	stp	x6, x7, [sp, #160]
   318dc:	str	x4, [sp, #176]
   318e0:	bl	2eff0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6708>
   318e4:	ldr	w9, [sp, #108]
   318e8:	cmp	w21, #0x6
   318ec:	b.eq	31a38 <__ubsan_default_options@@Base+0x2330>  // b.none
   318f0:	cmp	w21, #0x8
   318f4:	b.ne	319bc <__ubsan_default_options@@Base+0x22b4>  // b.any
   318f8:	ldrb	w3, [x19, #25]
   318fc:	adrp	x0, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28398>
   31900:	add	x0, x0, #0xc40
   31904:	add	x28, sp, #0x140
   31908:	ldr	x1, [x19, #16]
   3190c:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   31910:	ldr	x5, [x0, x3, lsl #3]
   31914:	mov	x0, x28
   31918:	ldr	x7, [sp, #96]
   3191c:	add	x2, x2, #0xe68
   31920:	mov	x6, #0x800000000           	// #34359738368
   31924:	mov	w4, #0x5                   	// #5
   31928:	mov	w3, #0x2                   	// #2
   3192c:	str	w9, [sp, #320]
   31930:	str	x26, [sp, #328]
   31934:	str	w23, [sp, #336]
   31938:	str	w27, [sp, #340]
   3193c:	stp	x7, x6, [sp, #352]
   31940:	str	x2, [sp, #368]
   31944:	str	wzr, [sp, #384]
   31948:	str	x5, [sp, #400]
   3194c:	str	w4, [sp, #416]
   31950:	str	x20, [sp, #432]
   31954:	str	w3, [sp, #640]
   31958:	str	wzr, [sp, #648]
   3195c:	str	xzr, [sp, #656]
   31960:	str	xzr, [sp, #664]
   31964:	str	wzr, [sp, #688]
   31968:	str	xzr, [sp, #696]
   3196c:	str	xzr, [sp, #704]
   31970:	str	xzr, [sp, #728]
   31974:	str	wzr, [sp, #736]
   31978:	bl	2e4c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5be0>
   3197c:	mov	x0, x28
   31980:	bl	2e660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   31984:	cbnz	x20, 31aa4 <__ubsan_default_options@@Base+0x239c>
   31988:	mov	x0, x24
   3198c:	bl	2f058 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6770>
   31990:	cbz	x22, 31844 <__ubsan_default_options@@Base+0x213c>
   31994:	mov	x0, x22
   31998:	bl	29220 <__sanitizer_get_module_and_offset_for_pc@@Base+0x938>
   3199c:	ldp	x19, x20, [sp]
   319a0:	ldp	x21, x22, [sp, #16]
   319a4:	ldp	x23, x24, [sp, #32]
   319a8:	ldp	x25, x26, [sp, #48]
   319ac:	ldp	x27, x28, [sp, #64]
   319b0:	ldr	x30, [sp, #80]
   319b4:	add	sp, sp, #0x2f0
   319b8:	ret
   319bc:	cmp	w21, #0x1
   319c0:	b.eq	319e4 <__ubsan_default_options@@Base+0x22dc>  // b.none
   319c4:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   319c8:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   319cc:	add	x2, x2, #0xea8
   319d0:	add	x0, x0, #0xaa0
   319d4:	mov	x4, #0x0                   	// #0
   319d8:	mov	x3, #0x0                   	// #0
   319dc:	mov	w1, #0x59                  	// #89
   319e0:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   319e4:	ldrb	w3, [x19, #25]
   319e8:	adrp	x0, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28398>
   319ec:	add	x0, x0, #0xc40
   319f0:	add	x28, sp, #0x140
   319f4:	ldr	x5, [sp, #96]
   319f8:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   319fc:	ldr	x3, [x0, x3, lsl #3]
   31a00:	add	x2, x2, #0xe00
   31a04:	mov	x4, #0x100000000           	// #4294967296
   31a08:	mov	x0, x28
   31a0c:	str	w9, [sp, #320]
   31a10:	str	x26, [sp, #328]
   31a14:	str	w23, [sp, #336]
   31a18:	str	w27, [sp, #340]
   31a1c:	stp	x5, x4, [sp, #352]
   31a20:	str	x2, [sp, #368]
   31a24:	str	wzr, [sp, #384]
   31a28:	str	x3, [sp, #400]
   31a2c:	str	w21, [sp, #640]
   31a30:	ldr	x1, [x19, #16]
   31a34:	b	31958 <__ubsan_default_options@@Base+0x2250>
   31a38:	ldrb	w3, [x19, #25]
   31a3c:	adrp	x0, 5c000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x28398>
   31a40:	add	x0, x0, #0xc40
   31a44:	add	x28, sp, #0x140
   31a48:	ldr	x8, [sp, #96]
   31a4c:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   31a50:	ldr	x6, [x0, x3, lsl #3]
   31a54:	add	x2, x2, #0xe20
   31a58:	mov	x7, #0x600000000           	// #25769803776
   31a5c:	mov	w5, #0x5                   	// #5
   31a60:	mov	w4, #0x2                   	// #2
   31a64:	mov	x0, x28
   31a68:	mov	w3, #0x3                   	// #3
   31a6c:	str	w9, [sp, #320]
   31a70:	str	x26, [sp, #328]
   31a74:	str	w23, [sp, #336]
   31a78:	str	w27, [sp, #340]
   31a7c:	stp	x8, x7, [sp, #352]
   31a80:	str	x2, [sp, #368]
   31a84:	str	wzr, [sp, #384]
   31a88:	str	x6, [sp, #400]
   31a8c:	str	w5, [sp, #416]
   31a90:	str	x20, [sp, #432]
   31a94:	str	w4, [sp, #448]
   31a98:	stp	x25, xzr, [sp, #464]
   31a9c:	ldr	x1, [x19, #16]
   31aa0:	b	31954 <__ubsan_default_options@@Base+0x224c>
   31aa4:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   31aa8:	add	x1, x1, #0xed8
   31aac:	mov	w3, #0x2                   	// #2
   31ab0:	mov	w2, #0x1                   	// #1
   31ab4:	mov	x0, x28
   31ab8:	str	w3, [sp, #320]
   31abc:	str	xzr, [sp, #328]
   31ac0:	str	xzr, [sp, #336]
   31ac4:	str	x20, [sp, #344]
   31ac8:	str	w2, [sp, #360]
   31acc:	str	w21, [sp, #364]
   31ad0:	str	x1, [sp, #368]
   31ad4:	str	wzr, [sp, #640]
   31ad8:	str	wzr, [sp, #648]
   31adc:	str	xzr, [sp, #656]
   31ae0:	str	xzr, [sp, #664]
   31ae4:	str	wzr, [sp, #688]
   31ae8:	str	xzr, [sp, #696]
   31aec:	str	xzr, [sp, #704]
   31af0:	str	xzr, [sp, #728]
   31af4:	str	wzr, [sp, #736]
   31af8:	bl	2e660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   31afc:	b	31988 <__ubsan_default_options@@Base+0x2280>
   31b00:	cbz	x24, 31b28 <__ubsan_default_options@@Base+0x2420>
   31b04:	sub	x0, x24, #0x4
   31b08:	bl	2e4a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5bc0>
   31b0c:	mov	x26, #0x0                   	// #0
   31b10:	mov	x22, x0
   31b14:	mov	w27, #0x0                   	// #0
   31b18:	mov	w23, #0x0                   	// #0
   31b1c:	mov	w9, #0x3                   	// #3
   31b20:	str	x0, [sp, #96]
   31b24:	b	31894 <__ubsan_default_options@@Base+0x218c>
   31b28:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   31b2c:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   31b30:	add	x2, x2, #0x8b0
   31b34:	add	x0, x0, #0x188
   31b38:	mov	x4, #0x0                   	// #0
   31b3c:	mov	x3, #0x0                   	// #0
   31b40:	mov	w1, #0x2c                  	// #44
   31b44:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   31b48:	sub	sp, sp, #0x2c0
   31b4c:	stp	x25, x26, [sp, #48]
   31b50:	mov	x25, x3
   31b54:	stp	x19, x20, [sp]
   31b58:	mov	x19, x0
   31b5c:	add	x0, x0, #0xc
   31b60:	stp	x21, x22, [sp, #16]
   31b64:	stp	x23, x24, [sp, #32]
   31b68:	ldrb	w24, [x3]
   31b6c:	mov	w3, #0xffffffff            	// #-1
   31b70:	ldr	x26, [x25, #8]
   31b74:	str	x30, [sp, #72]
   31b78:	ldxr	w21, [x0]
   31b7c:	stxr	w4, w3, [x0]
   31b80:	cbnz	w4, 31b78 <__ubsan_default_options@@Base+0x2470>
   31b84:	dmb	ish
   31b88:	ldr	x0, [x19, #24]
   31b8c:	stp	x1, x0, [sp, #168]
   31b90:	ldr	w23, [x19, #8]
   31b94:	ldr	x1, [x19, #16]
   31b98:	str	x1, [sp, #160]
   31b9c:	ldrh	w1, [x0]
   31ba0:	str	x2, [sp, #184]
   31ba4:	ldr	x22, [x19]
   31ba8:	cbnz	w1, 31bb8 <__ubsan_default_options@@Base+0x24b0>
   31bac:	ldrh	w0, [x0, #2]
   31bb0:	tbnz	w0, #0, 31d2c <__ubsan_default_options@@Base+0x2624>
   31bb4:	nop
   31bb8:	add	x20, sp, #0xb0
   31bbc:	mov	x0, x20
   31bc0:	bl	330a8 <__ubsan_get_current_report_data@@Base+0x280>
   31bc4:	ldr	x2, [x19, #16]
   31bc8:	ldrh	w3, [x2]
   31bcc:	cbnz	w3, 31f48 <__ubsan_default_options@@Base+0x2840>
   31bd0:	ldrh	w2, [x2, #2]
   31bd4:	mov	w3, #0x1                   	// #1
   31bd8:	asr	w2, w2, #1
   31bdc:	lsl	w2, w3, w2
   31be0:	cbz	x1, 31d44 <__ubsan_default_options@@Base+0x263c>
   31be4:	cbnz	w24, 31da4 <__ubsan_default_options@@Base+0x269c>
   31be8:	str	x27, [sp, #64]
   31bec:	mov	w27, #0x13                  	// #19
   31bf0:	cmn	w21, #0x1
   31bf4:	b.eq	31f28 <__ubsan_default_options@@Base+0x2820>  // b.none
   31bf8:	mov	x1, x26
   31bfc:	mov	x2, x22
   31c00:	mov	w0, w27
   31c04:	bl	2f258 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6970>
   31c08:	tst	w0, #0xff
   31c0c:	b.ne	31f28 <__ubsan_default_options@@Base+0x2820>  // b.any
   31c10:	mov	w0, #0x1                   	// #1
   31c14:	str	w0, [sp, #272]
   31c18:	str	x22, [sp, #280]
   31c1c:	add	x24, sp, #0xc0
   31c20:	str	w23, [sp, #288]
   31c24:	mov	w3, w27
   31c28:	str	w21, [sp, #292]
   31c2c:	add	x2, sp, #0x50
   31c30:	ldp	x6, x7, [sp, #272]
   31c34:	stp	x6, x7, [sp, #80]
   31c38:	add	x1, sp, #0x80
   31c3c:	ldp	x6, x7, [x25]
   31c40:	mov	x0, x24
   31c44:	ldp	x4, x5, [sp, #288]
   31c48:	stp	x4, x5, [sp, #96]
   31c4c:	ldr	x4, [x25, #16]
   31c50:	stp	x6, x7, [sp, #128]
   31c54:	ldr	x8, [sp, #304]
   31c58:	str	x8, [sp, #112]
   31c5c:	str	x4, [sp, #144]
   31c60:	bl	2eff0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6708>
   31c64:	cmp	w27, #0x13
   31c68:	ldr	x27, [sp, #64]
   31c6c:	b.eq	31df8 <__ubsan_default_options@@Base+0x26f0>  // b.none
   31c70:	ldr	x0, [sp, #160]
   31c74:	add	x26, sp, #0xa0
   31c78:	ldrh	w1, [x0]
   31c7c:	cbnz	w1, 31c98 <__ubsan_default_options@@Base+0x2590>
   31c80:	ldrh	w0, [x0, #2]
   31c84:	add	x26, sp, #0xa0
   31c88:	tbz	w0, #0, 31c98 <__ubsan_default_options@@Base+0x2590>
   31c8c:	mov	x0, x26
   31c90:	bl	32f28 <__ubsan_get_current_report_data@@Base+0x100>
   31c94:	tbnz	x1, #63, 31f6c <__ubsan_default_options@@Base+0x2864>
   31c98:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   31c9c:	add	x2, x2, #0xf68
   31ca0:	mov	w4, #0x1                   	// #1
   31ca4:	mov	x3, #0x1200000000          	// #77309411328
   31ca8:	add	x25, sp, #0x110
   31cac:	mov	x1, x26
   31cb0:	mov	x0, x25
   31cb4:	str	w4, [sp, #272]
   31cb8:	str	x22, [sp, #280]
   31cbc:	str	w23, [sp, #288]
   31cc0:	str	w21, [sp, #292]
   31cc4:	stp	x3, x2, [sp, #312]
   31cc8:	str	wzr, [sp, #592]
   31ccc:	str	wzr, [sp, #600]
   31cd0:	str	xzr, [sp, #608]
   31cd4:	str	xzr, [sp, #616]
   31cd8:	str	wzr, [sp, #640]
   31cdc:	str	xzr, [sp, #648]
   31ce0:	str	xzr, [sp, #656]
   31ce4:	str	xzr, [sp, #680]
   31ce8:	str	wzr, [sp, #688]
   31cec:	bl	2e520 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c38>
   31cf0:	mov	x1, x20
   31cf4:	bl	2e520 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c38>
   31cf8:	ldr	x1, [x19, #16]
   31cfc:	bl	2e4c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5be0>
   31d00:	mov	x0, x25
   31d04:	bl	2e660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   31d08:	mov	x0, x24
   31d0c:	bl	2f058 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6770>
   31d10:	ldp	x19, x20, [sp]
   31d14:	ldp	x21, x22, [sp, #16]
   31d18:	ldp	x23, x24, [sp, #32]
   31d1c:	ldp	x25, x26, [sp, #48]
   31d20:	ldr	x30, [sp, #72]
   31d24:	add	sp, sp, #0x2c0
   31d28:	ret
   31d2c:	add	x20, sp, #0xb0
   31d30:	mov	x0, x20
   31d34:	bl	32f28 <__ubsan_get_current_report_data@@Base+0x100>
   31d38:	tbz	x1, #63, 31bbc <__ubsan_default_options@@Base+0x24b4>
   31d3c:	cbz	w24, 31be8 <__ubsan_default_options@@Base+0x24e0>
   31d40:	b	31da4 <__ubsan_default_options@@Base+0x269c>
   31d44:	cmp	x2, x0
   31d48:	b.ls	31be4 <__ubsan_default_options@@Base+0x24dc>  // b.plast
   31d4c:	cbz	w24, 31fb0 <__ubsan_default_options@@Base+0x28a8>
   31d50:	str	w3, [sp, #272]
   31d54:	add	x24, sp, #0xc0
   31d58:	str	x22, [sp, #280]
   31d5c:	mov	x0, x24
   31d60:	str	w23, [sp, #288]
   31d64:	add	x2, sp, #0x50
   31d68:	str	w21, [sp, #292]
   31d6c:	add	x1, sp, #0x80
   31d70:	ldp	x6, x7, [sp, #272]
   31d74:	stp	x6, x7, [sp, #80]
   31d78:	mov	w3, #0x12                  	// #18
   31d7c:	ldp	x6, x7, [x25]
   31d80:	ldp	x4, x5, [sp, #288]
   31d84:	stp	x4, x5, [sp, #96]
   31d88:	ldr	x4, [x25, #16]
   31d8c:	stp	x6, x7, [sp, #128]
   31d90:	ldr	x8, [sp, #304]
   31d94:	str	x8, [sp, #112]
   31d98:	str	x4, [sp, #144]
   31d9c:	bl	2eff0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6708>
   31da0:	b	31c70 <__ubsan_default_options@@Base+0x2568>
   31da4:	mov	w0, #0x1                   	// #1
   31da8:	str	w0, [sp, #272]
   31dac:	str	x22, [sp, #280]
   31db0:	add	x24, sp, #0xc0
   31db4:	str	w23, [sp, #288]
   31db8:	add	x2, sp, #0x50
   31dbc:	str	w21, [sp, #292]
   31dc0:	add	x1, sp, #0x80
   31dc4:	ldp	x6, x7, [sp, #272]
   31dc8:	stp	x6, x7, [sp, #80]
   31dcc:	mov	x0, x24
   31dd0:	ldp	x6, x7, [x25]
   31dd4:	mov	w3, #0x13                  	// #19
   31dd8:	ldp	x4, x5, [sp, #288]
   31ddc:	stp	x4, x5, [sp, #96]
   31de0:	ldr	x4, [x25, #16]
   31de4:	stp	x6, x7, [sp, #128]
   31de8:	ldr	x8, [sp, #304]
   31dec:	str	x8, [sp, #112]
   31df0:	str	x4, [sp, #144]
   31df4:	bl	2eff0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6708>
   31df8:	ldr	x0, [sp, #176]
   31dfc:	ldrh	w1, [x0]
   31e00:	cbnz	w1, 31e7c <__ubsan_default_options@@Base+0x2774>
   31e04:	ldrh	w0, [x0, #2]
   31e08:	tbz	w0, #0, 31e7c <__ubsan_default_options@@Base+0x2774>
   31e0c:	mov	x0, x20
   31e10:	bl	32f28 <__ubsan_get_current_report_data@@Base+0x100>
   31e14:	tbz	x1, #63, 31e7c <__ubsan_default_options@@Base+0x2774>
   31e18:	add	x19, sp, #0x110
   31e1c:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   31e20:	mov	x1, x20
   31e24:	mov	x0, x19
   31e28:	add	x2, x2, #0xef0
   31e2c:	mov	w4, #0x1                   	// #1
   31e30:	mov	x3, #0x1300000000          	// #81604378624
   31e34:	str	w4, [sp, #272]
   31e38:	str	x22, [sp, #280]
   31e3c:	str	w23, [sp, #288]
   31e40:	str	w21, [sp, #292]
   31e44:	stp	x3, x2, [sp, #312]
   31e48:	str	wzr, [sp, #592]
   31e4c:	str	wzr, [sp, #600]
   31e50:	str	xzr, [sp, #608]
   31e54:	str	xzr, [sp, #616]
   31e58:	str	wzr, [sp, #640]
   31e5c:	str	xzr, [sp, #648]
   31e60:	str	xzr, [sp, #656]
   31e64:	str	xzr, [sp, #680]
   31e68:	str	wzr, [sp, #688]
   31e6c:	bl	2e520 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c38>
   31e70:	mov	x0, x19
   31e74:	bl	2e660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   31e78:	b	31d08 <__ubsan_default_options@@Base+0x2600>
   31e7c:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   31e80:	add	x2, x2, #0xf10
   31e84:	mov	x3, #0x1300000000          	// #81604378624
   31e88:	add	x25, sp, #0x110
   31e8c:	mov	x1, x20
   31e90:	mov	x0, x25
   31e94:	mov	w20, #0x1                   	// #1
   31e98:	str	w20, [sp, #272]
   31e9c:	str	x22, [sp, #280]
   31ea0:	str	w23, [sp, #288]
   31ea4:	str	w21, [sp, #292]
   31ea8:	stp	x3, x2, [sp, #312]
   31eac:	str	wzr, [sp, #592]
   31eb0:	str	wzr, [sp, #600]
   31eb4:	str	xzr, [sp, #608]
   31eb8:	str	xzr, [sp, #616]
   31ebc:	str	wzr, [sp, #640]
   31ec0:	str	xzr, [sp, #648]
   31ec4:	str	xzr, [sp, #656]
   31ec8:	str	xzr, [sp, #680]
   31ecc:	str	wzr, [sp, #688]
   31ed0:	bl	2e520 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5c38>
   31ed4:	ldr	x1, [x19, #16]
   31ed8:	ldrh	w3, [x1]
   31edc:	cbnz	w3, 31f48 <__ubsan_default_options@@Base+0x2840>
   31ee0:	ldrh	w4, [x1, #2]
   31ee4:	ldr	w3, [x0, #320]
   31ee8:	asr	w4, w4, #1
   31eec:	cmp	w3, #0x8
   31ef0:	lsl	w20, w20, w4
   31ef4:	b.eq	31f8c <__ubsan_default_options@@Base+0x2884>  // b.none
   31ef8:	ubfiz	x4, x3, #5, #32
   31efc:	add	w3, w3, #0x1
   31f00:	add	x4, x4, #0x40
   31f04:	str	w3, [x0, #320]
   31f08:	add	x3, x0, x4
   31f0c:	mov	w5, #0x2                   	// #2
   31f10:	str	w5, [x0, x4]
   31f14:	stp	x20, xzr, [x3, #16]
   31f18:	bl	2e4c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5be0>
   31f1c:	mov	x0, x25
   31f20:	bl	2e660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   31f24:	b	31d08 <__ubsan_default_options@@Base+0x2600>
   31f28:	ldp	x19, x20, [sp]
   31f2c:	ldp	x21, x22, [sp, #16]
   31f30:	ldp	x23, x24, [sp, #32]
   31f34:	ldp	x25, x26, [sp, #48]
   31f38:	ldr	x27, [sp, #64]
   31f3c:	ldr	x30, [sp, #72]
   31f40:	add	sp, sp, #0x2c0
   31f44:	ret
   31f48:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   31f4c:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   31f50:	add	x2, x2, #0xbb0
   31f54:	add	x0, x0, #0xbd0
   31f58:	mov	x4, #0x0                   	// #0
   31f5c:	mov	x3, #0x0                   	// #0
   31f60:	mov	w1, #0x7c                  	// #124
   31f64:	str	x27, [sp, #64]
   31f68:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   31f6c:	add	x19, sp, #0x110
   31f70:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   31f74:	mov	x1, x26
   31f78:	mov	x0, x19
   31f7c:	add	x2, x2, #0xf48
   31f80:	mov	w4, #0x1                   	// #1
   31f84:	mov	x3, #0x1200000000          	// #77309411328
   31f88:	b	31e34 <__ubsan_default_options@@Base+0x272c>
   31f8c:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   31f90:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   31f94:	add	x2, x2, #0x200
   31f98:	add	x0, x0, #0x188
   31f9c:	mov	x4, #0x0                   	// #0
   31fa0:	mov	x3, #0x0                   	// #0
   31fa4:	mov	w1, #0xc0                  	// #192
   31fa8:	str	x27, [sp, #64]
   31fac:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   31fb0:	str	x27, [sp, #64]
   31fb4:	mov	w27, #0x12                  	// #18
   31fb8:	b	31bf0 <__ubsan_default_options@@Base+0x24e8>
   31fbc:	nop
   31fc0:	sub	sp, sp, #0x2a0
   31fc4:	ldrb	w4, [x3]
   31fc8:	stp	x19, x20, [sp]
   31fcc:	mov	x19, x3
   31fd0:	mov	x20, x2
   31fd4:	add	x2, x0, #0xc
   31fd8:	mov	w3, #0xffffffff            	// #-1
   31fdc:	stp	x21, x22, [sp, #16]
   31fe0:	stp	x23, x24, [sp, #32]
   31fe4:	mov	x24, x1
   31fe8:	stp	x25, x26, [sp, #48]
   31fec:	ldr	x1, [x19, #8]
   31ff0:	str	x30, [sp, #64]
   31ff4:	ldxr	w22, [x2]
   31ff8:	stxr	w5, w3, [x2]
   31ffc:	cbnz	w5, 31ff4 <__ubsan_default_options@@Base+0x28ec>
   32000:	dmb	ish
   32004:	orr	x2, x24, x20
   32008:	ldr	w25, [x0, #8]
   3200c:	ldr	x23, [x0]
   32010:	cbz	x2, 321e0 <__ubsan_default_options@@Base+0x2ad8>
   32014:	cmp	x24, #0x0
   32018:	mov	w21, #0x3                   	// #3
   3201c:	ccmp	x20, #0x0, #0x4, eq  // eq = none
   32020:	b.eq	320c0 <__ubsan_default_options@@Base+0x29b8>  // b.none
   32024:	cbnz	w4, 320d4 <__ubsan_default_options@@Base+0x29cc>
   32028:	cmn	w22, #0x1
   3202c:	b.ne	3204c <__ubsan_default_options@@Base+0x2944>  // b.any
   32030:	ldp	x19, x20, [sp]
   32034:	ldp	x21, x22, [sp, #16]
   32038:	ldp	x23, x24, [sp, #32]
   3203c:	ldp	x25, x26, [sp, #48]
   32040:	ldr	x30, [sp, #64]
   32044:	add	sp, sp, #0x2a0
   32048:	ret
   3204c:	mov	x2, x23
   32050:	mov	w0, w21
   32054:	bl	2f258 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6970>
   32058:	tst	w0, #0xff
   3205c:	b.ne	32030 <__ubsan_default_options@@Base+0x2928>  // b.any
   32060:	mov	w0, #0x1                   	// #1
   32064:	str	w0, [sp, #240]
   32068:	str	x23, [sp, #248]
   3206c:	add	x26, sp, #0xa0
   32070:	str	w25, [sp, #256]
   32074:	mov	w3, w21
   32078:	str	w22, [sp, #260]
   3207c:	add	x2, sp, #0x50
   32080:	ldp	x6, x7, [sp, #240]
   32084:	stp	x6, x7, [sp, #80]
   32088:	add	x1, sp, #0x80
   3208c:	ldp	x6, x7, [x19]
   32090:	mov	x0, x26
   32094:	ldp	x4, x5, [sp, #256]
   32098:	stp	x4, x5, [sp, #96]
   3209c:	ldr	x4, [x19, #16]
   320a0:	stp	x6, x7, [sp, #128]
   320a4:	ldr	x8, [sp, #272]
   320a8:	str	x8, [sp, #112]
   320ac:	str	x4, [sp, #144]
   320b0:	bl	2eff0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6708>
   320b4:	cmp	w21, #0x2
   320b8:	b.ne	32128 <__ubsan_default_options@@Base+0x2a20>  // b.any
   320bc:	b	32258 <__ubsan_default_options@@Base+0x2b50>
   320c0:	cmp	x24, #0x0
   320c4:	ccmp	x20, #0x0, #0x0, ne  // ne = any
   320c8:	cset	w21, ne  // ne = any
   320cc:	add	w21, w21, #0x4
   320d0:	cbz	w4, 32028 <__ubsan_default_options@@Base+0x2920>
   320d4:	mov	w0, #0x1                   	// #1
   320d8:	str	w0, [sp, #240]
   320dc:	str	x23, [sp, #248]
   320e0:	add	x26, sp, #0xa0
   320e4:	str	w25, [sp, #256]
   320e8:	mov	w3, w21
   320ec:	str	w22, [sp, #260]
   320f0:	add	x2, sp, #0x50
   320f4:	ldp	x6, x7, [sp, #240]
   320f8:	stp	x6, x7, [sp, #80]
   320fc:	add	x1, sp, #0x80
   32100:	ldp	x6, x7, [x19]
   32104:	mov	x0, x26
   32108:	ldp	x4, x5, [sp, #256]
   3210c:	stp	x4, x5, [sp, #96]
   32110:	ldr	x4, [x19, #16]
   32114:	stp	x6, x7, [sp, #128]
   32118:	ldr	x8, [sp, #272]
   3211c:	str	x8, [sp, #112]
   32120:	str	x4, [sp, #144]
   32124:	bl	2eff0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6708>
   32128:	cmp	w21, #0x3
   3212c:	b.eq	32288 <__ubsan_default_options@@Base+0x2b80>  // b.none
   32130:	cmp	w21, #0x4
   32134:	b.eq	322d4 <__ubsan_default_options@@Base+0x2bcc>  // b.none
   32138:	mvn	x0, x24
   3213c:	mvn	x1, x20
   32140:	lsr	x0, x0, #63
   32144:	cmp	x0, x1, lsr #63
   32148:	b.ne	321f4 <__ubsan_default_options@@Base+0x2aec>  // b.any
   3214c:	cmp	x24, x20
   32150:	b.ls	322c4 <__ubsan_default_options@@Base+0x2bbc>  // b.plast
   32154:	adrp	x1, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb398>
   32158:	add	x1, x1, #0x48
   3215c:	mov	w5, #0x1                   	// #1
   32160:	add	x0, sp, #0xf0
   32164:	mov	w2, #0x5                   	// #5
   32168:	mov	x4, #0x500000000           	// #21474836480
   3216c:	mov	w3, #0x2                   	// #2
   32170:	str	w5, [sp, #240]
   32174:	str	x23, [sp, #248]
   32178:	str	w25, [sp, #256]
   3217c:	str	w22, [sp, #260]
   32180:	stp	x4, x1, [sp, #280]
   32184:	str	w2, [sp, #304]
   32188:	str	x24, [sp, #320]
   3218c:	str	w2, [sp, #336]
   32190:	str	x20, [sp, #352]
   32194:	str	w3, [sp, #560]
   32198:	str	wzr, [sp, #568]
   3219c:	str	xzr, [sp, #576]
   321a0:	str	xzr, [sp, #584]
   321a4:	str	wzr, [sp, #608]
   321a8:	str	xzr, [sp, #616]
   321ac:	str	xzr, [sp, #624]
   321b0:	str	xzr, [sp, #648]
   321b4:	str	wzr, [sp, #656]
   321b8:	bl	2e660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   321bc:	mov	x0, x26
   321c0:	bl	2f058 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6770>
   321c4:	ldp	x19, x20, [sp]
   321c8:	ldp	x21, x22, [sp, #16]
   321cc:	ldp	x23, x24, [sp, #32]
   321d0:	ldp	x25, x26, [sp, #48]
   321d4:	ldr	x30, [sp, #64]
   321d8:	add	sp, sp, #0x2a0
   321dc:	ret
   321e0:	cbnz	w4, 32204 <__ubsan_default_options@@Base+0x2afc>
   321e4:	cmn	w22, #0x1
   321e8:	mov	w21, #0x2                   	// #2
   321ec:	b.eq	32030 <__ubsan_default_options@@Base+0x2928>  // b.none
   321f0:	b	3204c <__ubsan_default_options@@Base+0x2944>
   321f4:	adrp	x1, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb398>
   321f8:	mov	w5, #0x1                   	// #1
   321fc:	add	x1, x1, #0xb8
   32200:	b	32160 <__ubsan_default_options@@Base+0x2a58>
   32204:	mov	w0, #0x1                   	// #1
   32208:	str	w0, [sp, #240]
   3220c:	str	x23, [sp, #248]
   32210:	add	x26, sp, #0xa0
   32214:	str	w25, [sp, #256]
   32218:	add	x2, sp, #0x50
   3221c:	str	w22, [sp, #260]
   32220:	add	x1, sp, #0x80
   32224:	ldp	x6, x7, [sp, #240]
   32228:	stp	x6, x7, [sp, #80]
   3222c:	mov	x0, x26
   32230:	ldp	x6, x7, [x19]
   32234:	mov	w3, #0x2                   	// #2
   32238:	ldp	x4, x5, [sp, #256]
   3223c:	stp	x4, x5, [sp, #96]
   32240:	ldr	x4, [x19, #16]
   32244:	stp	x6, x7, [sp, #128]
   32248:	ldr	x8, [sp, #272]
   3224c:	str	x8, [sp, #112]
   32250:	str	x4, [sp, #144]
   32254:	bl	2eff0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6708>
   32258:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   3225c:	mov	w3, #0x1                   	// #1
   32260:	add	x1, x1, #0xfa8
   32264:	mov	x2, #0x200000000           	// #8589934592
   32268:	add	x0, sp, #0xf0
   3226c:	str	w3, [sp, #240]
   32270:	str	x23, [sp, #248]
   32274:	str	w25, [sp, #256]
   32278:	str	w22, [sp, #260]
   3227c:	stp	x2, x1, [sp, #280]
   32280:	str	wzr, [sp, #560]
   32284:	b	32198 <__ubsan_default_options@@Base+0x2a90>
   32288:	mov	w2, #0x1                   	// #1
   3228c:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   32290:	mov	x4, #0x300000000           	// #12884901888
   32294:	add	x1, x1, #0xfd0
   32298:	mov	w3, #0x2                   	// #2
   3229c:	add	x0, sp, #0xf0
   322a0:	str	w2, [sp, #240]
   322a4:	str	x23, [sp, #248]
   322a8:	str	w25, [sp, #256]
   322ac:	str	w22, [sp, #260]
   322b0:	stp	x4, x1, [sp, #280]
   322b4:	str	w3, [sp, #304]
   322b8:	stp	x20, xzr, [sp, #320]
   322bc:	str	w2, [sp, #560]
   322c0:	b	32198 <__ubsan_default_options@@Base+0x2a90>
   322c4:	adrp	x1, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb398>
   322c8:	mov	w5, #0x1                   	// #1
   322cc:	add	x1, x1, #0x80
   322d0:	b	32160 <__ubsan_default_options@@Base+0x2a58>
   322d4:	mov	w2, #0x1                   	// #1
   322d8:	adrp	x1, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb398>
   322dc:	mov	x4, #0x400000000           	// #17179869184
   322e0:	add	x1, x1, #0x0
   322e4:	mov	w3, #0x5                   	// #5
   322e8:	add	x0, sp, #0xf0
   322ec:	str	w2, [sp, #240]
   322f0:	str	x23, [sp, #248]
   322f4:	str	w25, [sp, #256]
   322f8:	str	w22, [sp, #260]
   322fc:	stp	x4, x1, [sp, #280]
   32300:	str	w3, [sp, #304]
   32304:	str	x24, [sp, #320]
   32308:	str	w2, [sp, #560]
   3230c:	b	32198 <__ubsan_default_options@@Base+0x2a90>
   32310:	mov	x4, x2
   32314:	mov	x2, x0
   32318:	ldrb	w0, [x4]
   3231c:	cbnz	w0, 32340 <__ubsan_default_options@@Base+0x2c38>
   32320:	lsr	x1, x1, #32
   32324:	mov	w0, #0x1                   	// #1
   32328:	cmn	w1, #0x1
   3232c:	b.ne	32334 <__ubsan_default_options@@Base+0x2c2c>  // b.any
   32330:	ret
   32334:	ldr	x1, [x4, #8]
   32338:	mov	w0, w3
   3233c:	b	2f258 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6970>
   32340:	mov	w0, #0x0                   	// #0
   32344:	ret

0000000000032348 <__ubsan_handle_type_mismatch_v1@@Base>:
   32348:	stp	x29, x30, [sp, #-80]!
   3234c:	mov	x29, sp
   32350:	add	x2, x29, #0x10
   32354:	stp	xzr, x30, [x29, #56]
   32358:	ldp	x4, x5, [x29, #56]
   3235c:	stp	x4, x5, [x29, #16]
   32360:	str	x29, [x29, #32]
   32364:	bl	317c0 <__ubsan_default_options@@Base+0x20b8>
   32368:	ldp	x29, x30, [sp], #80
   3236c:	ret

0000000000032370 <__ubsan_handle_type_mismatch_v1_abort@@Base>:
   32370:	stp	x29, x30, [sp, #-80]!
   32374:	mov	w3, #0x1                   	// #1
   32378:	mov	x29, sp
   3237c:	add	x2, x29, #0x10
   32380:	strb	w3, [x29, #56]
   32384:	stur	wzr, [x29, #57]
   32388:	sturh	wzr, [x29, #61]
   3238c:	strb	wzr, [x29, #63]
   32390:	str	x30, [x29, #64]
   32394:	str	x29, [x29, #32]
   32398:	ldp	x4, x5, [x29, #56]
   3239c:	stp	x4, x5, [x29, #16]
   323a0:	bl	317c0 <__ubsan_default_options@@Base+0x20b8>
   323a4:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>

00000000000323a8 <__ubsan_handle_alignment_assumption@@Base>:
   323a8:	stp	x29, x30, [sp, #-80]!
   323ac:	mov	x29, sp
   323b0:	add	x4, x29, #0x10
   323b4:	stp	xzr, x30, [x29, #56]
   323b8:	ldp	x6, x7, [x29, #56]
   323bc:	stp	x6, x7, [x29, #16]
   323c0:	str	x29, [x29, #32]
   323c4:	bl	31180 <__ubsan_default_options@@Base+0x1a78>
   323c8:	ldp	x29, x30, [sp], #80
   323cc:	ret

00000000000323d0 <__ubsan_handle_alignment_assumption_abort@@Base>:
   323d0:	stp	x29, x30, [sp, #-80]!
   323d4:	mov	w5, #0x1                   	// #1
   323d8:	mov	x29, sp
   323dc:	add	x4, x29, #0x10
   323e0:	strb	w5, [x29, #56]
   323e4:	stur	wzr, [x29, #57]
   323e8:	sturh	wzr, [x29, #61]
   323ec:	strb	wzr, [x29, #63]
   323f0:	str	x30, [x29, #64]
   323f4:	str	x29, [x29, #32]
   323f8:	ldp	x6, x7, [x29, #56]
   323fc:	stp	x6, x7, [x29, #16]
   32400:	bl	31180 <__ubsan_default_options@@Base+0x1a78>
   32404:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>

0000000000032408 <__ubsan_handle_add_overflow@@Base>:
   32408:	stp	x29, x30, [sp, #-80]!
   3240c:	mov	x4, x2
   32410:	adrp	x2, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb398>
   32414:	mov	x29, sp
   32418:	ldr	x3, [x0, #16]
   3241c:	add	x5, x29, #0x10
   32420:	stp	xzr, x30, [x29, #56]
   32424:	add	x2, x2, #0xf0
   32428:	ldp	x6, x7, [x29, #56]
   3242c:	stp	x6, x7, [x29, #16]
   32430:	str	x29, [x29, #32]
   32434:	bl	307f8 <__ubsan_default_options@@Base+0x10f0>
   32438:	ldp	x29, x30, [sp], #80
   3243c:	ret

0000000000032440 <__ubsan_handle_add_overflow_abort@@Base>:
   32440:	stp	x29, x30, [sp, #-80]!
   32444:	mov	w6, #0x1                   	// #1
   32448:	mov	x4, x2
   3244c:	mov	x29, sp
   32450:	ldr	x3, [x0, #16]
   32454:	add	x5, x29, #0x10
   32458:	strb	w6, [x29, #56]
   3245c:	adrp	x2, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb398>
   32460:	stur	wzr, [x29, #57]
   32464:	add	x2, x2, #0xf0
   32468:	sturh	wzr, [x29, #61]
   3246c:	strb	wzr, [x29, #63]
   32470:	str	x30, [x29, #64]
   32474:	str	x29, [x29, #32]
   32478:	ldp	x6, x7, [x29, #56]
   3247c:	stp	x6, x7, [x29, #16]
   32480:	bl	307f8 <__ubsan_default_options@@Base+0x10f0>
   32484:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>

0000000000032488 <__ubsan_handle_sub_overflow@@Base>:
   32488:	stp	x29, x30, [sp, #-80]!
   3248c:	mov	x4, x2
   32490:	adrp	x2, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb398>
   32494:	mov	x29, sp
   32498:	ldr	x3, [x0, #16]
   3249c:	add	x5, x29, #0x10
   324a0:	stp	xzr, x30, [x29, #56]
   324a4:	add	x2, x2, #0xf8
   324a8:	ldp	x6, x7, [x29, #56]
   324ac:	stp	x6, x7, [x29, #16]
   324b0:	str	x29, [x29, #32]
   324b4:	bl	307f8 <__ubsan_default_options@@Base+0x10f0>
   324b8:	ldp	x29, x30, [sp], #80
   324bc:	ret

00000000000324c0 <__ubsan_handle_sub_overflow_abort@@Base>:
   324c0:	stp	x29, x30, [sp, #-80]!
   324c4:	mov	w6, #0x1                   	// #1
   324c8:	mov	x4, x2
   324cc:	mov	x29, sp
   324d0:	ldr	x3, [x0, #16]
   324d4:	add	x5, x29, #0x10
   324d8:	strb	w6, [x29, #56]
   324dc:	adrp	x2, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb398>
   324e0:	stur	wzr, [x29, #57]
   324e4:	add	x2, x2, #0xf8
   324e8:	sturh	wzr, [x29, #61]
   324ec:	strb	wzr, [x29, #63]
   324f0:	str	x30, [x29, #64]
   324f4:	str	x29, [x29, #32]
   324f8:	ldp	x6, x7, [x29, #56]
   324fc:	stp	x6, x7, [x29, #16]
   32500:	bl	307f8 <__ubsan_default_options@@Base+0x10f0>
   32504:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>

0000000000032508 <__ubsan_handle_mul_overflow@@Base>:
   32508:	stp	x29, x30, [sp, #-80]!
   3250c:	mov	x4, x2
   32510:	adrp	x2, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb398>
   32514:	mov	x29, sp
   32518:	ldr	x3, [x0, #16]
   3251c:	add	x5, x29, #0x10
   32520:	stp	xzr, x30, [x29, #56]
   32524:	add	x2, x2, #0x100
   32528:	ldp	x6, x7, [x29, #56]
   3252c:	stp	x6, x7, [x29, #16]
   32530:	str	x29, [x29, #32]
   32534:	bl	307f8 <__ubsan_default_options@@Base+0x10f0>
   32538:	ldp	x29, x30, [sp], #80
   3253c:	ret

0000000000032540 <__ubsan_handle_mul_overflow_abort@@Base>:
   32540:	stp	x29, x30, [sp, #-80]!
   32544:	mov	w6, #0x1                   	// #1
   32548:	mov	x4, x2
   3254c:	mov	x29, sp
   32550:	ldr	x3, [x0, #16]
   32554:	add	x5, x29, #0x10
   32558:	strb	w6, [x29, #56]
   3255c:	adrp	x2, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb398>
   32560:	stur	wzr, [x29, #57]
   32564:	add	x2, x2, #0x100
   32568:	sturh	wzr, [x29, #61]
   3256c:	strb	wzr, [x29, #63]
   32570:	str	x30, [x29, #64]
   32574:	str	x29, [x29, #32]
   32578:	ldp	x6, x7, [x29, #56]
   3257c:	stp	x6, x7, [x29, #16]
   32580:	bl	307f8 <__ubsan_default_options@@Base+0x10f0>
   32584:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>

0000000000032588 <__ubsan_handle_negate_overflow@@Base>:
   32588:	stp	x29, x30, [sp, #-80]!
   3258c:	mov	x29, sp
   32590:	add	x2, x29, #0x10
   32594:	stp	xzr, x30, [x29, #56]
   32598:	ldp	x4, x5, [x29, #56]
   3259c:	stp	x4, x5, [x29, #16]
   325a0:	str	x29, [x29, #32]
   325a4:	bl	2f968 <__ubsan_default_options@@Base+0x260>
   325a8:	ldp	x29, x30, [sp], #80
   325ac:	ret

00000000000325b0 <__ubsan_handle_negate_overflow_abort@@Base>:
   325b0:	stp	x29, x30, [sp, #-80]!
   325b4:	mov	w3, #0x1                   	// #1
   325b8:	mov	x29, sp
   325bc:	add	x2, x29, #0x10
   325c0:	strb	w3, [x29, #56]
   325c4:	stur	wzr, [x29, #57]
   325c8:	sturh	wzr, [x29, #61]
   325cc:	strb	wzr, [x29, #63]
   325d0:	str	x30, [x29, #64]
   325d4:	str	x29, [x29, #32]
   325d8:	ldp	x4, x5, [x29, #56]
   325dc:	stp	x4, x5, [x29, #16]
   325e0:	bl	2f968 <__ubsan_default_options@@Base+0x260>
   325e4:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>

00000000000325e8 <__ubsan_handle_divrem_overflow@@Base>:
   325e8:	stp	x29, x30, [sp, #-80]!
   325ec:	mov	x29, sp
   325f0:	add	x3, x29, #0x10
   325f4:	stp	xzr, x30, [x29, #56]
   325f8:	ldp	x4, x5, [x29, #56]
   325fc:	stp	x4, x5, [x29, #16]
   32600:	str	x29, [x29, #32]
   32604:	bl	2fe78 <__ubsan_default_options@@Base+0x770>
   32608:	ldp	x29, x30, [sp], #80
   3260c:	ret

0000000000032610 <__ubsan_handle_divrem_overflow_abort@@Base>:
   32610:	stp	x29, x30, [sp, #-80]!
   32614:	mov	w4, #0x1                   	// #1
   32618:	mov	x29, sp
   3261c:	add	x3, x29, #0x10
   32620:	strb	w4, [x29, #56]
   32624:	stur	wzr, [x29, #57]
   32628:	sturh	wzr, [x29, #61]
   3262c:	strb	wzr, [x29, #63]
   32630:	str	x30, [x29, #64]
   32634:	str	x29, [x29, #32]
   32638:	ldp	x4, x5, [x29, #56]
   3263c:	stp	x4, x5, [x29, #16]
   32640:	bl	2fe78 <__ubsan_default_options@@Base+0x770>
   32644:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>

0000000000032648 <__ubsan_handle_shift_out_of_bounds@@Base>:
   32648:	stp	x29, x30, [sp, #-80]!
   3264c:	mov	x29, sp
   32650:	add	x3, x29, #0x10
   32654:	stp	xzr, x30, [x29, #56]
   32658:	ldp	x4, x5, [x29, #56]
   3265c:	stp	x4, x5, [x29, #16]
   32660:	str	x29, [x29, #32]
   32664:	bl	31b48 <__ubsan_default_options@@Base+0x2440>
   32668:	ldp	x29, x30, [sp], #80
   3266c:	ret

0000000000032670 <__ubsan_handle_shift_out_of_bounds_abort@@Base>:
   32670:	stp	x29, x30, [sp, #-80]!
   32674:	mov	w4, #0x1                   	// #1
   32678:	mov	x29, sp
   3267c:	add	x3, x29, #0x10
   32680:	strb	w4, [x29, #56]
   32684:	stur	wzr, [x29, #57]
   32688:	sturh	wzr, [x29, #61]
   3268c:	strb	wzr, [x29, #63]
   32690:	str	x30, [x29, #64]
   32694:	str	x29, [x29, #32]
   32698:	ldp	x4, x5, [x29, #56]
   3269c:	stp	x4, x5, [x29, #16]
   326a0:	bl	31b48 <__ubsan_default_options@@Base+0x2440>
   326a4:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>

00000000000326a8 <__ubsan_handle_out_of_bounds@@Base>:
   326a8:	stp	x29, x30, [sp, #-80]!
   326ac:	mov	x29, sp
   326b0:	add	x2, x29, #0x10
   326b4:	stp	xzr, x30, [x29, #56]
   326b8:	ldp	x4, x5, [x29, #56]
   326bc:	stp	x4, x5, [x29, #16]
   326c0:	str	x29, [x29, #32]
   326c4:	bl	2fb98 <__ubsan_default_options@@Base+0x490>
   326c8:	ldp	x29, x30, [sp], #80
   326cc:	ret

00000000000326d0 <__ubsan_handle_out_of_bounds_abort@@Base>:
   326d0:	stp	x29, x30, [sp, #-80]!
   326d4:	mov	w3, #0x1                   	// #1
   326d8:	mov	x29, sp
   326dc:	add	x2, x29, #0x10
   326e0:	strb	w3, [x29, #56]
   326e4:	stur	wzr, [x29, #57]
   326e8:	sturh	wzr, [x29, #61]
   326ec:	strb	wzr, [x29, #63]
   326f0:	str	x30, [x29, #64]
   326f4:	str	x29, [x29, #32]
   326f8:	ldp	x4, x5, [x29, #56]
   326fc:	stp	x4, x5, [x29, #16]
   32700:	bl	2fb98 <__ubsan_default_options@@Base+0x490>
   32704:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>

0000000000032708 <__ubsan_handle_builtin_unreachable@@Base>:
   32708:	stp	x29, x30, [sp, #-80]!
   3270c:	mov	w2, #0x1                   	// #1
   32710:	mov	x29, sp
   32714:	add	x1, x29, #0x10
   32718:	strb	w2, [x29, #56]
   3271c:	stur	wzr, [x29, #57]
   32720:	sturh	wzr, [x29, #61]
   32724:	strb	wzr, [x29, #63]
   32728:	str	x30, [x29, #64]
   3272c:	str	x29, [x29, #32]
   32730:	ldp	x2, x3, [x29, #56]
   32734:	stp	x2, x3, [x29, #16]
   32738:	bl	303d8 <__ubsan_default_options@@Base+0xcd0>
   3273c:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>

0000000000032740 <__ubsan_handle_missing_return@@Base>:
   32740:	stp	x29, x30, [sp, #-80]!
   32744:	mov	w2, #0x1                   	// #1
   32748:	mov	x29, sp
   3274c:	add	x1, x29, #0x10
   32750:	strb	w2, [x29, #56]
   32754:	stur	wzr, [x29, #57]
   32758:	sturh	wzr, [x29, #61]
   3275c:	strb	wzr, [x29, #63]
   32760:	str	x30, [x29, #64]
   32764:	str	x29, [x29, #32]
   32768:	ldp	x2, x3, [x29, #56]
   3276c:	stp	x2, x3, [x29, #16]
   32770:	bl	302f8 <__ubsan_default_options@@Base+0xbf0>
   32774:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>

0000000000032778 <__ubsan_handle_vla_bound_not_positive@@Base>:
   32778:	stp	x29, x30, [sp, #-80]!
   3277c:	mov	x29, sp
   32780:	add	x2, x29, #0x10
   32784:	stp	xzr, x30, [x29, #56]
   32788:	ldp	x4, x5, [x29, #56]
   3278c:	stp	x4, x5, [x29, #16]
   32790:	str	x29, [x29, #32]
   32794:	bl	2fd08 <__ubsan_default_options@@Base+0x600>
   32798:	ldp	x29, x30, [sp], #80
   3279c:	ret

00000000000327a0 <__ubsan_handle_vla_bound_not_positive_abort@@Base>:
   327a0:	stp	x29, x30, [sp, #-80]!
   327a4:	mov	w3, #0x1                   	// #1
   327a8:	mov	x29, sp
   327ac:	add	x2, x29, #0x10
   327b0:	strb	w3, [x29, #56]
   327b4:	stur	wzr, [x29, #57]
   327b8:	sturh	wzr, [x29, #61]
   327bc:	strb	wzr, [x29, #63]
   327c0:	str	x30, [x29, #64]
   327c4:	str	x29, [x29, #32]
   327c8:	ldp	x4, x5, [x29, #56]
   327cc:	stp	x4, x5, [x29, #16]
   327d0:	bl	2fd08 <__ubsan_default_options@@Base+0x600>
   327d4:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>

00000000000327d8 <__ubsan_handle_float_cast_overflow@@Base>:
   327d8:	stp	x29, x30, [sp, #-80]!
   327dc:	mov	x29, sp
   327e0:	add	x2, x29, #0x10
   327e4:	stp	xzr, x30, [x29, #56]
   327e8:	ldp	x4, x5, [x29, #56]
   327ec:	stp	x4, x5, [x29, #16]
   327f0:	str	x29, [x29, #32]
   327f4:	bl	304b8 <__ubsan_default_options@@Base+0xdb0>
   327f8:	ldp	x29, x30, [sp], #80
   327fc:	ret

0000000000032800 <__ubsan_handle_float_cast_overflow_abort@@Base>:
   32800:	stp	x29, x30, [sp, #-80]!
   32804:	mov	w3, #0x1                   	// #1
   32808:	mov	x29, sp
   3280c:	add	x2, x29, #0x10
   32810:	strb	w3, [x29, #56]
   32814:	stur	wzr, [x29, #57]
   32818:	sturh	wzr, [x29, #61]
   3281c:	strb	wzr, [x29, #63]
   32820:	str	x30, [x29, #64]
   32824:	str	x29, [x29, #32]
   32828:	ldp	x4, x5, [x29, #56]
   3282c:	stp	x4, x5, [x29, #16]
   32830:	bl	304b8 <__ubsan_default_options@@Base+0xdb0>
   32834:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>

0000000000032838 <__ubsan_handle_load_invalid_value@@Base>:
   32838:	stp	x29, x30, [sp, #-80]!
   3283c:	mov	x29, sp
   32840:	add	x2, x29, #0x10
   32844:	stp	xzr, x30, [x29, #56]
   32848:	ldp	x4, x5, [x29, #56]
   3284c:	stp	x4, x5, [x29, #16]
   32850:	str	x29, [x29, #32]
   32854:	bl	30140 <__ubsan_default_options@@Base+0xa38>
   32858:	ldp	x29, x30, [sp], #80
   3285c:	ret

0000000000032860 <__ubsan_handle_load_invalid_value_abort@@Base>:
   32860:	stp	x29, x30, [sp, #-80]!
   32864:	mov	w3, #0x1                   	// #1
   32868:	mov	x29, sp
   3286c:	add	x2, x29, #0x10
   32870:	strb	w3, [x29, #56]
   32874:	stur	wzr, [x29, #57]
   32878:	sturh	wzr, [x29, #61]
   3287c:	strb	wzr, [x29, #63]
   32880:	str	x30, [x29, #64]
   32884:	str	x29, [x29, #32]
   32888:	ldp	x4, x5, [x29, #56]
   3288c:	stp	x4, x5, [x29, #16]
   32890:	bl	30140 <__ubsan_default_options@@Base+0xa38>
   32894:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>

0000000000032898 <__ubsan_handle_implicit_conversion@@Base>:
   32898:	stp	x29, x30, [sp, #-80]!
   3289c:	mov	x6, x1
   328a0:	mov	x3, x2
   328a4:	mov	x29, sp
   328a8:	add	x1, x29, #0x10
   328ac:	mov	x2, x6
   328b0:	stp	xzr, x30, [x29, #56]
   328b4:	ldp	x4, x5, [x29, #56]
   328b8:	stp	x4, x5, [x29, #16]
   328bc:	str	x29, [x29, #32]
   328c0:	bl	30e08 <__ubsan_default_options@@Base+0x1700>
   328c4:	ldp	x29, x30, [sp], #80
   328c8:	ret
   328cc:	nop

00000000000328d0 <__ubsan_handle_implicit_conversion_abort@@Base>:
   328d0:	stp	x29, x30, [sp, #-80]!
   328d4:	mov	w4, #0x1                   	// #1
   328d8:	mov	x3, x2
   328dc:	mov	x29, sp
   328e0:	mov	x2, x1
   328e4:	add	x1, x29, #0x10
   328e8:	strb	w4, [x29, #56]
   328ec:	stur	wzr, [x29, #57]
   328f0:	sturh	wzr, [x29, #61]
   328f4:	strb	wzr, [x29, #63]
   328f8:	str	x30, [x29, #64]
   328fc:	str	x29, [x29, #32]
   32900:	ldp	x4, x5, [x29, #56]
   32904:	stp	x4, x5, [x29, #16]
   32908:	bl	30e08 <__ubsan_default_options@@Base+0x1700>
   3290c:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>

0000000000032910 <__ubsan_handle_invalid_builtin@@Base>:
   32910:	stp	x29, x30, [sp, #-80]!
   32914:	mov	w1, #0x1                   	// #1
   32918:	mov	x29, sp
   3291c:	strb	w1, [x29, #56]
   32920:	add	x1, x29, #0x10
   32924:	stur	wzr, [x29, #57]
   32928:	sturh	wzr, [x29, #61]
   3292c:	strb	wzr, [x29, #63]
   32930:	str	x30, [x29, #64]
   32934:	str	x29, [x29, #32]
   32938:	ldp	x2, x3, [x29, #56]
   3293c:	stp	x2, x3, [x29, #16]
   32940:	bl	306e0 <__ubsan_default_options@@Base+0xfd8>
   32944:	ldp	x29, x30, [sp], #80
   32948:	ret
   3294c:	nop

0000000000032950 <__ubsan_handle_invalid_builtin_abort@@Base>:
   32950:	stp	x29, x30, [sp, #-80]!
   32954:	mov	w2, #0x1                   	// #1
   32958:	mov	x29, sp
   3295c:	add	x1, x29, #0x10
   32960:	strb	w2, [x29, #56]
   32964:	stur	wzr, [x29, #57]
   32968:	sturh	wzr, [x29, #61]
   3296c:	strb	wzr, [x29, #63]
   32970:	str	x30, [x29, #64]
   32974:	str	x29, [x29, #32]
   32978:	ldp	x2, x3, [x29, #56]
   3297c:	stp	x2, x3, [x29, #16]
   32980:	bl	306e0 <__ubsan_default_options@@Base+0xfd8>
   32984:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>

0000000000032988 <__ubsan_handle_nonnull_return_v1@@Base>:
   32988:	stp	x29, x30, [sp, #-80]!
   3298c:	mov	w3, #0x1                   	// #1
   32990:	mov	x29, sp
   32994:	add	x2, x29, #0x10
   32998:	stp	xzr, x30, [x29, #56]
   3299c:	ldp	x4, x5, [x29, #56]
   329a0:	stp	x4, x5, [x29, #16]
   329a4:	str	x29, [x29, #32]
   329a8:	bl	30c08 <__ubsan_default_options@@Base+0x1500>
   329ac:	ldp	x29, x30, [sp], #80
   329b0:	ret
   329b4:	nop

00000000000329b8 <__ubsan_handle_nonnull_return_v1_abort@@Base>:
   329b8:	stp	x29, x30, [sp, #-80]!
   329bc:	mov	w3, #0x1                   	// #1
   329c0:	mov	x29, sp
   329c4:	add	x2, x29, #0x10
   329c8:	strb	w3, [x29, #56]
   329cc:	stur	wzr, [x29, #57]
   329d0:	sturh	wzr, [x29, #61]
   329d4:	strb	wzr, [x29, #63]
   329d8:	str	x30, [x29, #64]
   329dc:	str	x29, [x29, #32]
   329e0:	ldp	x4, x5, [x29, #56]
   329e4:	stp	x4, x5, [x29, #16]
   329e8:	bl	30c08 <__ubsan_default_options@@Base+0x1500>
   329ec:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>

00000000000329f0 <__ubsan_handle_nullability_return_v1@@Base>:
   329f0:	stp	x29, x30, [sp, #-80]!
   329f4:	mov	w3, #0x0                   	// #0
   329f8:	mov	x29, sp
   329fc:	add	x2, x29, #0x10
   32a00:	stp	xzr, x30, [x29, #56]
   32a04:	ldp	x4, x5, [x29, #56]
   32a08:	stp	x4, x5, [x29, #16]
   32a0c:	str	x29, [x29, #32]
   32a10:	bl	30c08 <__ubsan_default_options@@Base+0x1500>
   32a14:	ldp	x29, x30, [sp], #80
   32a18:	ret
   32a1c:	nop

0000000000032a20 <__ubsan_handle_nullability_return_v1_abort@@Base>:
   32a20:	stp	x29, x30, [sp, #-80]!
   32a24:	mov	w3, #0x1                   	// #1
   32a28:	mov	x29, sp
   32a2c:	add	x2, x29, #0x10
   32a30:	strb	w3, [x29, #56]
   32a34:	mov	w3, #0x0                   	// #0
   32a38:	stur	wzr, [x29, #57]
   32a3c:	sturh	wzr, [x29, #61]
   32a40:	strb	wzr, [x29, #63]
   32a44:	str	x30, [x29, #64]
   32a48:	str	x29, [x29, #32]
   32a4c:	ldp	x4, x5, [x29, #56]
   32a50:	stp	x4, x5, [x29, #16]
   32a54:	bl	30c08 <__ubsan_default_options@@Base+0x1500>
   32a58:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   32a5c:	nop

0000000000032a60 <__ubsan_handle_nonnull_arg@@Base>:
   32a60:	stp	x29, x30, [sp, #-80]!
   32a64:	mov	w2, #0x1                   	// #1
   32a68:	mov	x29, sp
   32a6c:	add	x1, x29, #0x10
   32a70:	stp	xzr, x30, [x29, #56]
   32a74:	ldp	x4, x5, [x29, #56]
   32a78:	stp	x4, x5, [x29, #16]
   32a7c:	str	x29, [x29, #32]
   32a80:	bl	30a28 <__ubsan_default_options@@Base+0x1320>
   32a84:	ldp	x29, x30, [sp], #80
   32a88:	ret
   32a8c:	nop

0000000000032a90 <__ubsan_handle_nonnull_arg_abort@@Base>:
   32a90:	stp	x29, x30, [sp, #-80]!
   32a94:	mov	w2, #0x1                   	// #1
   32a98:	mov	x29, sp
   32a9c:	add	x1, x29, #0x10
   32aa0:	strb	w2, [x29, #56]
   32aa4:	stur	wzr, [x29, #57]
   32aa8:	sturh	wzr, [x29, #61]
   32aac:	strb	wzr, [x29, #63]
   32ab0:	str	x30, [x29, #64]
   32ab4:	str	x29, [x29, #32]
   32ab8:	ldp	x4, x5, [x29, #56]
   32abc:	stp	x4, x5, [x29, #16]
   32ac0:	bl	30a28 <__ubsan_default_options@@Base+0x1320>
   32ac4:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>

0000000000032ac8 <__ubsan_handle_nullability_arg@@Base>:
   32ac8:	stp	x29, x30, [sp, #-80]!
   32acc:	mov	w2, #0x0                   	// #0
   32ad0:	mov	x29, sp
   32ad4:	add	x1, x29, #0x10
   32ad8:	stp	xzr, x30, [x29, #56]
   32adc:	ldp	x4, x5, [x29, #56]
   32ae0:	stp	x4, x5, [x29, #16]
   32ae4:	str	x29, [x29, #32]
   32ae8:	bl	30a28 <__ubsan_default_options@@Base+0x1320>
   32aec:	ldp	x29, x30, [sp], #80
   32af0:	ret
   32af4:	nop

0000000000032af8 <__ubsan_handle_nullability_arg_abort@@Base>:
   32af8:	stp	x29, x30, [sp, #-80]!
   32afc:	mov	w2, #0x1                   	// #1
   32b00:	mov	x29, sp
   32b04:	add	x1, x29, #0x10
   32b08:	strb	w2, [x29, #56]
   32b0c:	mov	w2, #0x0                   	// #0
   32b10:	stur	wzr, [x29, #57]
   32b14:	sturh	wzr, [x29, #61]
   32b18:	strb	wzr, [x29, #63]
   32b1c:	str	x30, [x29, #64]
   32b20:	str	x29, [x29, #32]
   32b24:	ldp	x4, x5, [x29, #56]
   32b28:	stp	x4, x5, [x29, #16]
   32b2c:	bl	30a28 <__ubsan_default_options@@Base+0x1320>
   32b30:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   32b34:	nop

0000000000032b38 <__ubsan_handle_pointer_overflow@@Base>:
   32b38:	stp	x29, x30, [sp, #-80]!
   32b3c:	mov	x29, sp
   32b40:	add	x3, x29, #0x10
   32b44:	stp	xzr, x30, [x29, #56]
   32b48:	ldp	x4, x5, [x29, #56]
   32b4c:	stp	x4, x5, [x29, #16]
   32b50:	str	x29, [x29, #32]
   32b54:	bl	31fc0 <__ubsan_default_options@@Base+0x28b8>
   32b58:	ldp	x29, x30, [sp], #80
   32b5c:	ret

0000000000032b60 <__ubsan_handle_pointer_overflow_abort@@Base>:
   32b60:	stp	x29, x30, [sp, #-80]!
   32b64:	mov	w4, #0x1                   	// #1
   32b68:	mov	x29, sp
   32b6c:	add	x3, x29, #0x10
   32b70:	strb	w4, [x29, #56]
   32b74:	stur	wzr, [x29, #57]
   32b78:	sturh	wzr, [x29, #61]
   32b7c:	strb	wzr, [x29, #63]
   32b80:	str	x30, [x29, #64]
   32b84:	str	x29, [x29, #32]
   32b88:	ldp	x4, x5, [x29, #56]
   32b8c:	stp	x4, x5, [x29, #16]
   32b90:	bl	31fc0 <__ubsan_default_options@@Base+0x28b8>
   32b94:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>

0000000000032b98 <__ubsan_handle_cfi_check_fail@@Base>:
   32b98:	stp	x29, x30, [sp, #-80]!
   32b9c:	mov	x29, sp
   32ba0:	ldrb	w3, [x0]
   32ba4:	sub	w3, w3, #0x4
   32ba8:	stp	xzr, x30, [x29, #56]
   32bac:	and	w3, w3, #0xff
   32bb0:	cmp	w3, #0x1
   32bb4:	b.ls	32bdc <__ubsan_handle_cfi_check_fail@@Base+0x44>  // b.plast
   32bb8:	ldp	x4, x5, [x29, #56]
   32bbc:	cmp	x2, #0x0
   32bc0:	add	x3, x29, #0x10
   32bc4:	cset	w2, ne  // ne = any
   32bc8:	stp	x4, x5, [x29, #16]
   32bcc:	str	x29, [x29, #32]
   32bd0:	bl	6550 <__ubsan_handle_cfi_bad_type@plt>
   32bd4:	ldp	x29, x30, [sp], #80
   32bd8:	ret
   32bdc:	ldp	x4, x5, [x29, #56]
   32be0:	add	x2, x29, #0x10
   32be4:	stp	x4, x5, [x29, #16]
   32be8:	str	x29, [x29, #32]
   32bec:	bl	31498 <__ubsan_default_options@@Base+0x1d90>
   32bf0:	ldp	x29, x30, [sp], #80
   32bf4:	ret

0000000000032bf8 <__ubsan_handle_cfi_check_fail_abort@@Base>:
   32bf8:	stp	x29, x30, [sp, #-80]!
   32bfc:	mov	w3, #0x1                   	// #1
   32c00:	mov	x29, sp
   32c04:	strb	w3, [x29, #56]
   32c08:	ldrb	w3, [x0]
   32c0c:	stur	wzr, [x29, #57]
   32c10:	sub	w3, w3, #0x4
   32c14:	sturh	wzr, [x29, #61]
   32c18:	strb	wzr, [x29, #63]
   32c1c:	and	w3, w3, #0xff
   32c20:	str	x30, [x29, #64]
   32c24:	cmp	w3, #0x1
   32c28:	b.ls	32c4c <__ubsan_handle_cfi_check_fail_abort@@Base+0x54>  // b.plast
   32c2c:	ldp	x4, x5, [x29, #56]
   32c30:	cmp	x2, #0x0
   32c34:	add	x3, x29, #0x10
   32c38:	cset	w2, ne  // ne = any
   32c3c:	stp	x4, x5, [x29, #16]
   32c40:	str	x29, [x29, #32]
   32c44:	bl	6550 <__ubsan_handle_cfi_bad_type@plt>
   32c48:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   32c4c:	ldp	x4, x5, [x29, #56]
   32c50:	add	x2, x29, #0x10
   32c54:	stp	x4, x5, [x29, #16]
   32c58:	str	x29, [x29, #32]
   32c5c:	bl	31498 <__ubsan_default_options@@Base+0x1d90>
   32c60:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   32c64:	nop
   32c68:	adrp	x1, 930000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e0>
   32c6c:	str	x0, [x1, #3600]
   32c70:	ret
   32c74:	nop

0000000000032c78 <__ubsan_on_report@@Base>:
   32c78:	ret
   32c7c:	nop
   32c80:	stp	x19, x20, [sp, #-80]!
   32c84:	add	x20, x0, #0x10
   32c88:	mov	x19, x0
   32c8c:	stp	x21, x22, [sp, #16]
   32c90:	stp	x23, x24, [sp, #32]
   32c94:	stp	x25, x26, [sp, #48]
   32c98:	str	x30, [sp, #64]
   32c9c:	stp	x1, x2, [x0]
   32ca0:	ldr	x0, [x3, #24]
   32ca4:	stp	xzr, xzr, [x20, #8]
   32ca8:	str	xzr, [x19, #16]
   32cac:	adds	x21, x0, #0x1
   32cb0:	b.ne	32cd8 <__ubsan_on_report@@Base+0x60>  // b.any
   32cb4:	str	xzr, [x20, #24]
   32cb8:	adrp	x2, 36000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2398>
   32cbc:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   32cc0:	add	x2, x2, #0x118
   32cc4:	add	x0, x0, #0x248
   32cc8:	mov	x4, #0x0                   	// #0
   32ccc:	mov	x3, #0x0                   	// #0
   32cd0:	mov	w1, #0x1c5                 	// #453
   32cd4:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   32cd8:	adrp	x25, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   32cdc:	mov	x22, x3
   32ce0:	ldr	x23, [x25, #4016]
   32ce4:	ldr	x0, [x23]
   32ce8:	cbz	x0, 32da0 <__ubsan_on_report@@Base+0x128>
   32cec:	sub	x1, x0, #0x1
   32cf0:	tst	x0, x1
   32cf4:	b.ne	32e18 <__ubsan_on_report@@Base+0x1a0>  // b.any
   32cf8:	add	x1, x21, x1
   32cfc:	neg	x0, x0
   32d00:	and	x24, x1, x0
   32d04:	mov	w2, #0x0                   	// #0
   32d08:	mov	x0, x24
   32d0c:	adrp	x26, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   32d10:	add	x1, x26, #0xc10
   32d14:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   32d18:	ldr	x2, [x20, #16]
   32d1c:	mov	x23, x0
   32d20:	ldr	x1, [x19, #16]
   32d24:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   32d28:	ldr	x1, [x20, #8]
   32d2c:	ldr	x0, [x19, #16]
   32d30:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   32d34:	ldr	x2, [x20, #16]
   32d38:	str	x23, [x19, #16]
   32d3c:	str	x24, [x20, #8]
   32d40:	cmp	x21, x2
   32d44:	b.ls	32d64 <__ubsan_on_report@@Base+0xec>  // b.plast
   32d48:	cmp	x21, x24
   32d4c:	b.hi	32dac <__ubsan_on_report@@Base+0x134>  // b.pmore
   32d50:	add	x0, x23, x2
   32d54:	mov	w1, #0x0                   	// #0
   32d58:	sub	x2, x21, x2
   32d5c:	bl	1a288 <__sanitizer_set_report_fd@@Base+0x2408>
   32d60:	ldr	x23, [x19, #16]
   32d64:	stp	x21, xzr, [x20, #16]
   32d68:	mov	x0, x19
   32d6c:	strb	wzr, [x23]
   32d70:	bl	32c68 <__ubsan_handle_cfi_check_fail_abort@@Base+0x70>
   32d74:	ldr	x2, [x22]
   32d78:	mov	x0, x20
   32d7c:	adrp	x1, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   32d80:	add	x1, x1, #0xcb8
   32d84:	bl	1fd40 <__sanitizer_on_print@@Base+0x420>
   32d88:	ldp	x21, x22, [sp, #16]
   32d8c:	ldp	x23, x24, [sp, #32]
   32d90:	ldp	x25, x26, [sp, #48]
   32d94:	ldr	x30, [sp, #64]
   32d98:	ldp	x19, x20, [sp], #80
   32d9c:	b	6420 <__ubsan_on_report@plt>
   32da0:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   32da4:	str	x0, [x23]
   32da8:	b	32cec <__ubsan_on_report@@Base+0x74>
   32dac:	ldr	x25, [x25, #4016]
   32db0:	ldr	x0, [x25]
   32db4:	cbz	x0, 32e0c <__ubsan_on_report@@Base+0x194>
   32db8:	sub	x1, x0, #0x1
   32dbc:	tst	x0, x1
   32dc0:	b.ne	32e18 <__ubsan_on_report@@Base+0x1a0>  // b.any
   32dc4:	add	x1, x21, x1
   32dc8:	neg	x0, x0
   32dcc:	and	x24, x1, x0
   32dd0:	mov	w2, #0x0                   	// #0
   32dd4:	add	x1, x26, #0xc10
   32dd8:	mov	x0, x24
   32ddc:	bl	1e578 <__sanitizer_set_report_fd@@Base+0x66f8>
   32de0:	mov	x23, x0
   32de4:	ldr	x2, [x20, #16]
   32de8:	ldr	x1, [x19, #16]
   32dec:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   32df0:	ldr	x1, [x20, #8]
   32df4:	ldr	x0, [x19, #16]
   32df8:	bl	1dad0 <__sanitizer_set_report_fd@@Base+0x5c50>
   32dfc:	ldr	x2, [x20, #16]
   32e00:	str	x23, [x19, #16]
   32e04:	str	x24, [x20, #8]
   32e08:	b	32d50 <__ubsan_on_report@@Base+0xd8>
   32e0c:	bl	1d320 <__sanitizer_set_report_fd@@Base+0x54a0>
   32e10:	str	x0, [x25]
   32e14:	b	32db8 <__ubsan_on_report@@Base+0x140>
   32e18:	adrp	x0, 34000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x398>
   32e1c:	add	x0, x0, #0xbf8
   32e20:	bl	17290 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ef8>
   32e24:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>

0000000000032e28 <__ubsan_get_current_report_data@@Base>:
   32e28:	cmp	x0, #0x0
   32e2c:	ccmp	x1, #0x0, #0x4, ne  // ne = any
   32e30:	b.eq	32f00 <__ubsan_get_current_report_data@@Base+0xd8>  // b.none
   32e34:	cmp	x2, #0x0
   32e38:	ccmp	x3, #0x0, #0x4, ne  // ne = any
   32e3c:	b.eq	32f00 <__ubsan_get_current_report_data@@Base+0xd8>  // b.none
   32e40:	cmp	x4, #0x0
   32e44:	ccmp	x5, #0x0, #0x4, ne  // ne = any
   32e48:	b.eq	32f00 <__ubsan_get_current_report_data@@Base+0xd8>  // b.none
   32e4c:	adrp	x6, 930000 <__hwasan_shadow_memory_dynamic_address@@Base+0x8d32e0>
   32e50:	ldr	x6, [x6, #3600]
   32e54:	ldr	x9, [x6, #16]
   32e58:	ldrb	w8, [x9]
   32e5c:	sub	w7, w8, #0x61
   32e60:	and	w7, w7, #0xff
   32e64:	cmp	w7, #0x19
   32e68:	b.ls	32eb0 <__ubsan_get_current_report_data@@Base+0x88>  // b.plast
   32e6c:	ldr	x7, [x6]
   32e70:	str	x7, [x0]
   32e74:	ldp	x7, x0, [x6, #8]
   32e78:	str	x0, [x1]
   32e7c:	ldr	w1, [x7]
   32e80:	cmp	w1, #0x1
   32e84:	b.eq	32ed4 <__ubsan_get_current_report_data@@Base+0xac>  // b.none
   32e88:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   32e8c:	add	x0, x0, #0x220
   32e90:	str	x0, [x2]
   32e94:	cmp	w1, #0x2
   32e98:	str	wzr, [x4]
   32e9c:	str	wzr, [x3]
   32ea0:	b.eq	32ef4 <__ubsan_get_current_report_data@@Base+0xcc>  // b.none
   32ea4:	mov	x0, #0x0                   	// #0
   32ea8:	str	x0, [x5]
   32eac:	ret
   32eb0:	sub	w8, w8, #0x20
   32eb4:	strb	w8, [x9]
   32eb8:	ldr	x7, [x6]
   32ebc:	str	x7, [x0]
   32ec0:	ldp	x7, x0, [x6, #8]
   32ec4:	str	x0, [x1]
   32ec8:	ldr	w1, [x7]
   32ecc:	cmp	w1, #0x1
   32ed0:	b.ne	32e88 <__ubsan_get_current_report_data@@Base+0x60>  // b.any
   32ed4:	ldr	x8, [x7, #8]
   32ed8:	mov	x0, #0x0                   	// #0
   32edc:	ldp	w6, w1, [x7, #16]
   32ee0:	str	x8, [x2]
   32ee4:	str	w6, [x3]
   32ee8:	str	w1, [x4]
   32eec:	str	x0, [x5]
   32ef0:	ret
   32ef4:	ldr	x0, [x7, #24]
   32ef8:	str	x0, [x5]
   32efc:	ret
   32f00:	str	x30, [sp, #-16]!
   32f04:	adrp	x2, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb398>
   32f08:	adrp	x0, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb398>
   32f0c:	add	x2, x2, #0x1e0
   32f10:	add	x0, x0, #0x230
   32f14:	mov	x4, #0x0                   	// #0
   32f18:	mov	x3, #0x0                   	// #0
   32f1c:	mov	w1, #0x31                  	// #49
   32f20:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   32f24:	nop
   32f28:	ldr	x1, [x0]
   32f2c:	str	x30, [sp, #-16]!
   32f30:	ldrh	w2, [x1]
   32f34:	cbnz	w2, 32f6c <__ubsan_get_current_report_data@@Base+0x144>
   32f38:	ldrh	w1, [x1, #2]
   32f3c:	tbz	w1, #0, 32f6c <__ubsan_get_current_report_data@@Base+0x144>
   32f40:	asr	w2, w1, #1
   32f44:	mov	w1, #0x1                   	// #1
   32f48:	lsl	w1, w1, w2
   32f4c:	cmp	w1, #0x40
   32f50:	b.ls	32f8c <__ubsan_get_current_report_data@@Base+0x164>  // b.plast
   32f54:	cmp	w1, #0x80
   32f58:	b.ne	32fec <__ubsan_get_current_report_data@@Base+0x1c4>  // b.any
   32f5c:	ldr	x1, [x0, #8]
   32f60:	ldr	x30, [sp], #16
   32f64:	ldp	x0, x1, [x1]
   32f68:	ret
   32f6c:	adrp	x2, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb398>
   32f70:	adrp	x0, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb398>
   32f74:	add	x2, x2, #0x278
   32f78:	add	x0, x0, #0x2a8
   32f7c:	mov	x4, #0x0                   	// #0
   32f80:	mov	x3, #0x0                   	// #0
   32f84:	mov	w1, #0x17                  	// #23
   32f88:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   32f8c:	ldr	x0, [x0, #8]
   32f90:	mov	w2, #0x80                  	// #128
   32f94:	sub	w2, w2, w1
   32f98:	mov	w4, #0x3f                  	// #63
   32f9c:	sub	w3, w2, #0x40
   32fa0:	sub	w4, w4, w2
   32fa4:	lsr	x5, x0, #1
   32fa8:	cmp	w3, #0x0
   32fac:	lsl	x1, x0, x3
   32fb0:	lsr	x5, x5, x4
   32fb4:	csel	x1, x1, x5, ge  // ge = tcont
   32fb8:	lsl	x0, x0, x2
   32fbc:	csel	x0, xzr, x0, ge  // ge = tcont
   32fc0:	lsl	x5, x1, #1
   32fc4:	asr	x6, x1, #63
   32fc8:	lsr	x0, x0, x2
   32fcc:	lsl	x4, x5, x4
   32fd0:	orr	x0, x4, x0
   32fd4:	asr	x7, x1, x3
   32fd8:	csel	x0, x7, x0, ge  // ge = tcont
   32fdc:	asr	x1, x1, x2
   32fe0:	csel	x1, x6, x1, ge  // ge = tcont
   32fe4:	ldr	x30, [sp], #16
   32fe8:	ret
   32fec:	adrp	x2, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb398>
   32ff0:	adrp	x0, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb398>
   32ff4:	add	x2, x2, #0x2f0
   32ff8:	add	x0, x0, #0x2a8
   32ffc:	mov	x4, #0x0                   	// #0
   33000:	mov	x3, #0x0                   	// #0
   33004:	mov	w1, #0x28                  	// #40
   33008:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   3300c:	nop
   33010:	ldr	x1, [x0]
   33014:	str	x30, [sp, #-16]!
   33018:	ldrh	w2, [x1]
   3301c:	cbnz	w2, 3304c <__ubsan_get_current_report_data@@Base+0x224>
   33020:	ldrh	w1, [x1, #2]
   33024:	tbnz	w1, #0, 3304c <__ubsan_get_current_report_data@@Base+0x224>
   33028:	asr	w1, w1, #1
   3302c:	mov	w2, #0x1                   	// #1
   33030:	lsl	w1, w2, w1
   33034:	cmp	w1, #0x40
   33038:	b.hi	3306c <__ubsan_get_current_report_data@@Base+0x244>  // b.pmore
   3303c:	mov	x1, #0x0                   	// #0
   33040:	ldr	x0, [x0, #8]
   33044:	ldr	x30, [sp], #16
   33048:	ret
   3304c:	adrp	x2, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb398>
   33050:	adrp	x0, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb398>
   33054:	add	x2, x2, #0x318
   33058:	add	x0, x0, #0x2a8
   3305c:	mov	x4, #0x0                   	// #0
   33060:	mov	x3, #0x0                   	// #0
   33064:	mov	w1, #0x2c                  	// #44
   33068:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   3306c:	cmp	w1, #0x80
   33070:	b.ne	33084 <__ubsan_get_current_report_data@@Base+0x25c>  // b.any
   33074:	ldr	x1, [x0, #8]
   33078:	ldr	x30, [sp], #16
   3307c:	ldp	x0, x1, [x1]
   33080:	ret
   33084:	adrp	x2, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb398>
   33088:	adrp	x0, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb398>
   3308c:	add	x2, x2, #0x2f0
   33090:	add	x0, x0, #0x2a8
   33094:	mov	x4, #0x0                   	// #0
   33098:	mov	x3, #0x0                   	// #0
   3309c:	mov	w1, #0x38                  	// #56
   330a0:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   330a4:	nop
   330a8:	ldr	x2, [x0]
   330ac:	str	x30, [sp, #-16]!
   330b0:	ldrh	w3, [x2]
   330b4:	cbnz	w3, 330fc <__ubsan_get_current_report_data@@Base+0x2d4>
   330b8:	ldrh	w2, [x2, #2]
   330bc:	tbnz	w2, #0, 330c8 <__ubsan_get_current_report_data@@Base+0x2a0>
   330c0:	ldr	x30, [sp], #16
   330c4:	b	33010 <__ubsan_get_current_report_data@@Base+0x1e8>
   330c8:	asr	w2, w2, #1
   330cc:	mov	x1, x0
   330d0:	mov	w0, #0x1                   	// #1
   330d4:	lsl	w2, w0, w2
   330d8:	cmp	w2, #0x40
   330dc:	b.ls	3311c <__ubsan_get_current_report_data@@Base+0x2f4>  // b.plast
   330e0:	cmp	w2, #0x80
   330e4:	b.ne	33198 <__ubsan_get_current_report_data@@Base+0x370>  // b.any
   330e8:	ldr	x1, [x1, #8]
   330ec:	ldp	x0, x1, [x1]
   330f0:	tbnz	x1, #63, 33178 <__ubsan_get_current_report_data@@Base+0x350>
   330f4:	ldr	x30, [sp], #16
   330f8:	ret
   330fc:	adrp	x2, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb398>
   33100:	adrp	x0, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb398>
   33104:	add	x2, x2, #0x278
   33108:	add	x0, x0, #0x2a8
   3310c:	mov	x4, #0x0                   	// #0
   33110:	mov	x3, #0x0                   	// #0
   33114:	mov	w1, #0x17                  	// #23
   33118:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   3311c:	ldr	x0, [x1, #8]
   33120:	mov	w1, #0x80                  	// #128
   33124:	sub	w2, w1, w2
   33128:	mov	w4, #0x3f                  	// #63
   3312c:	sub	w3, w2, #0x40
   33130:	sub	w4, w4, w2
   33134:	lsr	x5, x0, #1
   33138:	cmp	w3, #0x0
   3313c:	lsl	x1, x0, x3
   33140:	lsr	x5, x5, x4
   33144:	csel	x1, x1, x5, ge  // ge = tcont
   33148:	lsl	x0, x0, x2
   3314c:	csel	x0, xzr, x0, ge  // ge = tcont
   33150:	lsl	x5, x1, #1
   33154:	asr	x6, x1, #63
   33158:	lsr	x0, x0, x2
   3315c:	lsl	x4, x5, x4
   33160:	orr	x0, x4, x0
   33164:	asr	x7, x1, x3
   33168:	csel	x0, x7, x0, ge  // ge = tcont
   3316c:	asr	x1, x1, x2
   33170:	csel	x1, x6, x1, ge  // ge = tcont
   33174:	b	330f0 <__ubsan_get_current_report_data@@Base+0x2c8>
   33178:	adrp	x2, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb398>
   3317c:	adrp	x0, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb398>
   33180:	add	x2, x2, #0x348
   33184:	add	x0, x0, #0x2a8
   33188:	mov	x4, #0x0                   	// #0
   3318c:	mov	x3, #0x0                   	// #0
   33190:	mov	w1, #0x3f                  	// #63
   33194:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   33198:	adrp	x2, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb398>
   3319c:	adrp	x0, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb398>
   331a0:	add	x2, x2, #0x2f0
   331a4:	add	x0, x0, #0x2a8
   331a8:	mov	x4, #0x0                   	// #0
   331ac:	mov	x3, #0x0                   	// #0
   331b0:	mov	w1, #0x28                  	// #40
   331b4:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   331b8:	ldr	x1, [x0]
   331bc:	str	x30, [sp, #-32]!
   331c0:	ldrh	w2, [x1]
   331c4:	cmp	w2, #0x1
   331c8:	b.ne	33270 <__ubsan_get_current_report_data@@Base+0x448>  // b.any
   331cc:	ldrh	w1, [x1, #2]
   331d0:	cmp	w1, #0x40
   331d4:	b.ls	331f8 <__ubsan_get_current_report_data@@Base+0x3d0>  // b.plast
   331d8:	cmp	w1, #0x60
   331dc:	b.eq	331e8 <__ubsan_get_current_report_data@@Base+0x3c0>  // b.none
   331e0:	cmp	w1, #0x80
   331e4:	b.ne	33220 <__ubsan_get_current_report_data@@Base+0x3f8>  // b.any
   331e8:	ldr	x0, [x0, #8]
   331ec:	ldr	q0, [x0]
   331f0:	ldr	x30, [sp], #32
   331f4:	ret
   331f8:	cmp	w1, #0x20
   331fc:	b.ne	33248 <__ubsan_get_current_report_data@@Base+0x420>  // b.any
   33200:	add	x1, x0, #0x8
   33204:	mov	x2, #0x4                   	// #4
   33208:	add	x0, sp, #0x18
   3320c:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   33210:	ldr	s0, [sp, #24]
   33214:	bl	65d0 <__extendsftf2@plt>
   33218:	ldr	x30, [sp], #32
   3321c:	ret
   33220:	cmp	w1, #0x50
   33224:	b.eq	331e8 <__ubsan_get_current_report_data@@Base+0x3c0>  // b.none
   33228:	adrp	x2, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb398>
   3322c:	adrp	x0, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb398>
   33230:	add	x2, x2, #0x388
   33234:	add	x0, x0, #0x2a8
   33238:	mov	x4, #0x0                   	// #0
   3323c:	mov	x3, #0x0                   	// #0
   33240:	mov	w1, #0x6d                  	// #109
   33244:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   33248:	cmp	w1, #0x40
   3324c:	b.ne	33228 <__ubsan_get_current_report_data@@Base+0x400>  // b.any
   33250:	add	x1, x0, #0x8
   33254:	mov	x2, #0x8                   	// #8
   33258:	add	x0, sp, #0x18
   3325c:	bl	19dc0 <__sanitizer_set_report_fd@@Base+0x1f40>
   33260:	ldr	d0, [sp, #24]
   33264:	bl	6530 <__extenddftf2@plt>
   33268:	ldr	x30, [sp], #32
   3326c:	ret
   33270:	adrp	x2, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb398>
   33274:	adrp	x0, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb398>
   33278:	add	x2, x2, #0x360
   3327c:	add	x0, x0, #0x2a8
   33280:	mov	x4, #0x0                   	// #0
   33284:	mov	x3, #0x0                   	// #0
   33288:	mov	w1, #0x47                  	// #71
   3328c:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   33290:	sub	sp, sp, #0x2a0
   33294:	stp	x19, x20, [sp]
   33298:	mov	x20, x0
   3329c:	mov	x0, x2
   332a0:	stp	x21, x22, [sp, #16]
   332a4:	mov	x22, x1
   332a8:	mov	x21, x4
   332ac:	mov	x1, x3
   332b0:	str	x30, [sp, #72]
   332b4:	bl	341b0 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x548>
   332b8:	tst	w0, #0xff
   332bc:	b.eq	332d8 <__ubsan_get_current_report_data@@Base+0x4b0>  // b.none
   332c0:	mov	w0, #0x0                   	// #0
   332c4:	ldp	x19, x20, [sp]
   332c8:	ldp	x21, x22, [sp, #16]
   332cc:	ldr	x30, [sp, #72]
   332d0:	add	sp, sp, #0x2a0
   332d4:	ret
   332d8:	add	x0, x20, #0xc
   332dc:	mov	w1, #0xffffffff            	// #-1
   332e0:	stp	x23, x24, [sp, #32]
   332e4:	stp	x25, x26, [sp, #48]
   332e8:	ldxr	w23, [x0]
   332ec:	stxr	w2, w1, [x0]
   332f0:	cbnz	w2, 332e8 <__ubsan_get_current_report_data@@Base+0x4c0>
   332f4:	dmb	ish
   332f8:	ldp	x4, x5, [x21]
   332fc:	mov	x1, #0x0                   	// #0
   33300:	ldr	w24, [x20, #8]
   33304:	add	x19, sp, #0x80
   33308:	ldr	x6, [x21, #16]
   3330c:	mov	x2, x19
   33310:	ldr	x25, [x20]
   33314:	bfxil	x1, x24, #0, #32
   33318:	mov	w3, #0x1b                  	// #27
   3331c:	stp	x4, x5, [sp, #128]
   33320:	bfi	x1, x23, #32, #32
   33324:	mov	x0, x25
   33328:	str	x6, [sp, #144]
   3332c:	bl	32310 <__ubsan_default_options@@Base+0x2c08>
   33330:	ands	w0, w0, #0xff
   33334:	b.ne	334a4 <__ubsan_get_current_report_data@@Base+0x67c>  // b.any
   33338:	mov	x1, x19
   3333c:	mov	w19, #0x1                   	// #1
   33340:	str	w19, [sp, #240]
   33344:	add	x2, sp, #0x50
   33348:	str	x25, [sp, #248]
   3334c:	mov	w3, #0x1b                  	// #27
   33350:	str	w24, [sp, #256]
   33354:	add	x26, sp, #0xf0
   33358:	str	w23, [sp, #260]
   3335c:	ldp	x4, x5, [sp, #240]
   33360:	stp	x4, x5, [sp, #80]
   33364:	ldp	x4, x5, [sp, #256]
   33368:	stp	x4, x5, [sp, #96]
   3336c:	ldr	x4, [sp, #272]
   33370:	str	x4, [sp, #112]
   33374:	ldp	x4, x5, [x21]
   33378:	stp	x4, x5, [sp, #128]
   3337c:	ldr	x4, [x21, #16]
   33380:	str	x27, [sp, #64]
   33384:	add	x27, sp, #0xa0
   33388:	str	x4, [sp, #144]
   3338c:	mov	x0, x27
   33390:	bl	2eff0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6708>
   33394:	mov	x0, x22
   33398:	bl	2e4a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5bc0>
   3339c:	mov	x21, x0
   333a0:	adrp	x3, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   333a4:	ldr	x1, [x20, #16]
   333a8:	add	x3, x3, #0xd68
   333ac:	ldr	x20, [x21, #40]
   333b0:	adrp	x2, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb398>
   333b4:	add	x2, x2, #0x3c0
   333b8:	mov	x4, #0x1b00000000          	// #115964116992
   333bc:	cmp	x20, #0x0
   333c0:	mov	x0, x26
   333c4:	csel	x20, x3, x20, eq  // eq = none
   333c8:	str	w19, [sp, #240]
   333cc:	str	x25, [sp, #248]
   333d0:	str	w24, [sp, #256]
   333d4:	str	w23, [sp, #260]
   333d8:	stp	x4, x2, [sp, #280]
   333dc:	str	wzr, [sp, #304]
   333e0:	str	x20, [sp, #320]
   333e4:	str	w19, [sp, #560]
   333e8:	str	wzr, [sp, #568]
   333ec:	str	xzr, [sp, #576]
   333f0:	str	xzr, [sp, #584]
   333f4:	str	wzr, [sp, #608]
   333f8:	str	xzr, [sp, #616]
   333fc:	str	xzr, [sp, #624]
   33400:	str	xzr, [sp, #648]
   33404:	str	wzr, [sp, #656]
   33408:	bl	2e4c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5be0>
   3340c:	mov	x0, x26
   33410:	bl	2e660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   33414:	adrp	x1, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   33418:	mov	x2, #0x1                   	// #1
   3341c:	add	x1, x1, #0xdb8
   33420:	mov	w3, #0x3                   	// #3
   33424:	movk	x2, #0x1b, lsl #32
   33428:	mov	x0, x26
   3342c:	str	w3, [sp, #240]
   33430:	str	xzr, [sp, #248]
   33434:	str	xzr, [sp, #256]
   33438:	stp	x21, x2, [sp, #272]
   3343c:	str	x1, [sp, #288]
   33440:	str	wzr, [sp, #304]
   33444:	str	x20, [sp, #320]
   33448:	str	w19, [sp, #560]
   3344c:	str	wzr, [sp, #568]
   33450:	str	xzr, [sp, #576]
   33454:	str	xzr, [sp, #584]
   33458:	str	wzr, [sp, #608]
   3345c:	str	xzr, [sp, #616]
   33460:	str	xzr, [sp, #624]
   33464:	str	xzr, [sp, #648]
   33468:	str	wzr, [sp, #656]
   3346c:	bl	2e660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   33470:	mov	x0, x21
   33474:	bl	29220 <__sanitizer_get_module_and_offset_for_pc@@Base+0x938>
   33478:	mov	x0, x27
   3347c:	bl	2f058 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6770>
   33480:	mov	w0, w19
   33484:	ldp	x19, x20, [sp]
   33488:	ldp	x21, x22, [sp, #16]
   3348c:	ldp	x23, x24, [sp, #32]
   33490:	ldp	x25, x26, [sp, #48]
   33494:	ldr	x27, [sp, #64]
   33498:	ldr	x30, [sp, #72]
   3349c:	add	sp, sp, #0x2a0
   334a0:	ret
   334a4:	ldp	x19, x20, [sp]
   334a8:	ldp	x21, x22, [sp, #16]
   334ac:	ldp	x23, x24, [sp, #32]
   334b0:	ldp	x25, x26, [sp, #48]
   334b4:	ldr	x30, [sp, #72]
   334b8:	add	sp, sp, #0x2a0
   334bc:	ret
   334c0:	sub	sp, sp, #0x2e0
   334c4:	stp	x19, x20, [sp]
   334c8:	mov	x19, x0
   334cc:	mov	x20, x1
   334d0:	mov	x0, x1
   334d4:	stp	x21, x22, [sp, #16]
   334d8:	mov	x21, x3
   334dc:	ldr	x1, [x19, #24]
   334e0:	str	x30, [sp, #80]
   334e4:	bl	33f10 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2a8>
   334e8:	tst	w0, #0xff
   334ec:	b.eq	33508 <__ubsan_get_current_report_data@@Base+0x6e0>  // b.none
   334f0:	mov	w0, #0x0                   	// #0
   334f4:	ldp	x19, x20, [sp]
   334f8:	ldp	x21, x22, [sp, #16]
   334fc:	ldr	x30, [sp, #80]
   33500:	add	sp, sp, #0x2e0
   33504:	ret
   33508:	add	x8, sp, #0xc8
   3350c:	mov	x0, x20
   33510:	stp	x23, x24, [sp, #32]
   33514:	bl	33cb0 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x48>
   33518:	ldp	x22, x23, [sp, #200]
   3351c:	cbz	x22, 33530 <__ubsan_get_current_report_data@@Base+0x708>
   33520:	mov	x0, x22
   33524:	bl	2f200 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6918>
   33528:	tst	w0, #0xff
   3352c:	b.ne	3372c <__ubsan_get_current_report_data@@Base+0x904>  // b.any
   33530:	add	x0, x19, #0xc
   33534:	mov	w1, #0xffffffff            	// #-1
   33538:	stp	x25, x26, [sp, #48]
   3353c:	stp	x27, x28, [sp, #64]
   33540:	ldxr	w24, [x0]
   33544:	stxr	w2, w1, [x0]
   33548:	cbnz	w2, 33540 <__ubsan_get_current_report_data@@Base+0x718>
   3354c:	dmb	ish
   33550:	ldp	x4, x5, [x21]
   33554:	mov	x1, #0x0                   	// #0
   33558:	ldr	w25, [x19, #8]
   3355c:	add	x26, sp, #0xa0
   33560:	ldr	x6, [x21, #16]
   33564:	mov	x2, x26
   33568:	ldr	x27, [x19]
   3356c:	bfxil	x1, x25, #0, #32
   33570:	mov	w3, #0x1e                  	// #30
   33574:	stp	x4, x5, [sp, #160]
   33578:	bfi	x1, x24, #32, #32
   3357c:	mov	x0, x27
   33580:	str	x6, [sp, #176]
   33584:	bl	32310 <__ubsan_default_options@@Base+0x2c08>
   33588:	tst	w0, #0xff
   3358c:	b.ne	3371c <__ubsan_get_current_report_data@@Base+0x8f4>  // b.any
   33590:	mov	w28, #0x1                   	// #1
   33594:	str	w28, [sp, #304]
   33598:	str	x27, [sp, #312]
   3359c:	add	x8, sp, #0xe0
   335a0:	str	w25, [sp, #320]
   335a4:	mov	x0, x8
   335a8:	str	w24, [sp, #324]
   335ac:	mov	x1, x26
   335b0:	ldp	x6, x7, [sp, #304]
   335b4:	stp	x6, x7, [sp, #112]
   335b8:	add	x2, sp, #0x70
   335bc:	ldp	x6, x7, [x21]
   335c0:	mov	w3, #0x1e                  	// #30
   335c4:	ldp	x4, x5, [sp, #320]
   335c8:	stp	x4, x5, [sp, #128]
   335cc:	add	x26, sp, #0x130
   335d0:	ldr	x5, [x21, #16]
   335d4:	str	x8, [sp, #104]
   335d8:	ldr	x9, [sp, #336]
   335dc:	str	x9, [sp, #144]
   335e0:	stp	x6, x7, [sp, #160]
   335e4:	str	x5, [sp, #176]
   335e8:	bl	2eff0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6708>
   335ec:	adrp	x3, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   335f0:	ldrb	w7, [x19, #32]
   335f4:	ldr	x1, [x19, #16]
   335f8:	adrp	x2, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb398>
   335fc:	ldr	x3, [x3, #3616]
   33600:	add	x2, x2, #0x408
   33604:	mov	w4, #0x2                   	// #2
   33608:	mov	x6, #0x1e00000000          	// #128849018880
   3360c:	mov	w5, #0x5                   	// #5
   33610:	mov	x0, x26
   33614:	ldr	x3, [x3, x7, lsl #3]
   33618:	str	w28, [sp, #304]
   3361c:	str	x27, [sp, #312]
   33620:	str	w25, [sp, #320]
   33624:	str	w24, [sp, #324]
   33628:	stp	x6, x2, [sp, #344]
   3362c:	str	wzr, [sp, #368]
   33630:	str	x3, [sp, #384]
   33634:	str	w5, [sp, #400]
   33638:	str	x20, [sp, #416]
   3363c:	str	w4, [sp, #624]
   33640:	str	wzr, [sp, #632]
   33644:	str	xzr, [sp, #640]
   33648:	str	xzr, [sp, #648]
   3364c:	str	wzr, [sp, #672]
   33650:	str	xzr, [sp, #680]
   33654:	str	xzr, [sp, #688]
   33658:	str	xzr, [sp, #712]
   3365c:	str	wzr, [sp, #720]
   33660:	bl	2e4c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5be0>
   33664:	mov	x0, x26
   33668:	bl	2e660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   3366c:	add	x1, x20, #0x8
   33670:	mov	w4, #0x2                   	// #2
   33674:	ldr	x8, [sp, #104]
   33678:	cbz	x22, 33790 <__ubsan_get_current_report_data@@Base+0x968>
   3367c:	str	x8, [sp, #104]
   33680:	cbnz	x23, 33734 <__ubsan_get_current_report_data@@Base+0x90c>
   33684:	adrp	x2, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb398>
   33688:	mov	x5, #0x1                   	// #1
   3368c:	mov	x0, x26
   33690:	add	x2, x2, #0x4e0
   33694:	adrp	x3, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb398>
   33698:	movk	x5, #0x1e, lsl #32
   3369c:	add	x3, x3, #0x4c8
   336a0:	str	w4, [sp, #304]
   336a4:	str	xzr, [sp, #312]
   336a8:	str	xzr, [sp, #320]
   336ac:	str	x20, [sp, #328]
   336b0:	stp	x5, x3, [sp, #344]
   336b4:	str	w28, [sp, #368]
   336b8:	str	x22, [sp, #384]
   336bc:	str	w28, [sp, #624]
   336c0:	str	w4, [sp, #632]
   336c4:	str	xzr, [sp, #640]
   336c8:	str	xzr, [sp, #648]
   336cc:	str	x20, [sp, #656]
   336d0:	str	w4, [sp, #672]
   336d4:	str	xzr, [sp, #680]
   336d8:	str	xzr, [sp, #688]
   336dc:	str	x1, [sp, #696]
   336e0:	str	x2, [sp, #712]
   336e4:	str	w28, [sp, #720]
   336e8:	bl	2e660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   336ec:	ldr	x8, [sp, #104]
   336f0:	mov	x0, x8
   336f4:	bl	2f058 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6770>
   336f8:	mov	w0, #0x1                   	// #1
   336fc:	ldp	x19, x20, [sp]
   33700:	ldp	x21, x22, [sp, #16]
   33704:	ldp	x23, x24, [sp, #32]
   33708:	ldp	x25, x26, [sp, #48]
   3370c:	ldp	x27, x28, [sp, #64]
   33710:	ldr	x30, [sp, #80]
   33714:	add	sp, sp, #0x2e0
   33718:	ret
   3371c:	ldp	x23, x24, [sp, #32]
   33720:	ldp	x25, x26, [sp, #48]
   33724:	ldp	x27, x28, [sp, #64]
   33728:	b	334f0 <__ubsan_get_current_report_data@@Base+0x6c8>
   3372c:	ldp	x23, x24, [sp, #32]
   33730:	b	334f0 <__ubsan_get_current_report_data@@Base+0x6c8>
   33734:	mov	x7, #0x1                   	// #1
   33738:	sub	x9, x20, x23
   3373c:	ldr	x6, [sp, #216]
   33740:	adrp	x3, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb398>
   33744:	adrp	x2, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb398>
   33748:	add	x3, x3, #0x4f0
   3374c:	movk	x7, #0x1e, lsl #32
   33750:	mov	w5, #0x3                   	// #3
   33754:	mov	x0, x26
   33758:	add	x2, x2, #0x538
   3375c:	str	w4, [sp, #304]
   33760:	str	xzr, [sp, #312]
   33764:	str	xzr, [sp, #320]
   33768:	str	x9, [sp, #328]
   3376c:	stp	x7, x3, [sp, #344]
   33770:	str	w4, [sp, #368]
   33774:	stp	x23, xzr, [sp, #384]
   33778:	str	w28, [sp, #400]
   3377c:	str	x22, [sp, #416]
   33780:	str	w28, [sp, #432]
   33784:	str	x6, [sp, #448]
   33788:	str	w5, [sp, #624]
   3378c:	b	336c0 <__ubsan_get_current_report_data@@Base+0x898>
   33790:	add	x23, x23, #0x100, lsl #12
   33794:	cmp	x23, #0x200, lsl #12
   33798:	b.ls	337e0 <__ubsan_get_current_report_data@@Base+0x9b8>  // b.plast
   3379c:	adrp	x3, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb398>
   337a0:	adrp	x2, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb398>
   337a4:	mov	x0, x26
   337a8:	add	x3, x3, #0x470
   337ac:	add	x2, x2, #0x4b0
   337b0:	str	x8, [sp, #104]
   337b4:	mov	x5, #0x1                   	// #1
   337b8:	str	w4, [sp, #304]
   337bc:	movk	x5, #0x1e, lsl #32
   337c0:	str	xzr, [sp, #312]
   337c4:	str	xzr, [sp, #320]
   337c8:	str	x20, [sp, #328]
   337cc:	stp	x5, x3, [sp, #344]
   337d0:	str	w28, [sp, #368]
   337d4:	str	xzr, [sp, #384]
   337d8:	str	w28, [sp, #624]
   337dc:	b	336c0 <__ubsan_get_current_report_data@@Base+0x898>
   337e0:	adrp	x3, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb398>
   337e4:	adrp	x2, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb398>
   337e8:	mov	x0, x26
   337ec:	add	x3, x3, #0x448
   337f0:	add	x2, x2, #0x460
   337f4:	b	337b4 <__ubsan_get_current_report_data@@Base+0x98c>

00000000000337f8 <__ubsan_handle_dynamic_type_cache_miss@@Base>:
   337f8:	stp	x29, x30, [sp, #-80]!
   337fc:	mov	x29, sp
   33800:	add	x3, x29, #0x10
   33804:	stp	xzr, x30, [x29, #56]
   33808:	ldp	x4, x5, [x29, #56]
   3380c:	stp	x4, x5, [x29, #16]
   33810:	str	x29, [x29, #32]
   33814:	bl	334c0 <__ubsan_get_current_report_data@@Base+0x698>
   33818:	ldp	x29, x30, [sp], #80
   3381c:	ret

0000000000033820 <__ubsan_handle_dynamic_type_cache_miss_abort@@Base>:
   33820:	stp	x29, x30, [sp, #-80]!
   33824:	mov	x29, sp
   33828:	add	x3, x29, #0x10
   3382c:	stp	xzr, x30, [x29, #56]
   33830:	ldp	x4, x5, [x29, #56]
   33834:	stp	x4, x5, [x29, #16]
   33838:	str	x29, [x29, #32]
   3383c:	bl	334c0 <__ubsan_get_current_report_data@@Base+0x698>
   33840:	tst	w0, #0xff
   33844:	b.ne	33850 <__ubsan_handle_dynamic_type_cache_miss_abort@@Base+0x30>  // b.any
   33848:	ldp	x29, x30, [sp], #80
   3384c:	ret
   33850:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   33854:	nop

0000000000033858 <__ubsan_handle_cfi_bad_type@@Base>:
   33858:	sub	sp, sp, #0x2d0
   3385c:	stp	x19, x20, [sp]
   33860:	mov	x20, x3
   33864:	and	w19, w2, #0xff
   33868:	stp	x27, x28, [sp, #64]
   3386c:	mov	x27, x0
   33870:	add	x0, x0, #0x14
   33874:	stp	x21, x22, [sp, #16]
   33878:	mov	x21, x1
   3387c:	mov	w1, #0xffffffff            	// #-1
   33880:	stp	x23, x24, [sp, #32]
   33884:	stp	x25, x26, [sp, #48]
   33888:	str	x30, [sp, #80]
   3388c:	ldxr	w22, [x0]
   33890:	stxr	w2, w1, [x0]
   33894:	cbnz	w2, 3388c <__ubsan_handle_cfi_bad_type@@Base+0x34>
   33898:	dmb	ish
   3389c:	ldp	x4, x5, [x20]
   338a0:	mov	x1, #0x0                   	// #0
   338a4:	ldr	w23, [x27, #16]
   338a8:	add	x26, sp, #0x90
   338ac:	ldr	x6, [x20, #16]
   338b0:	mov	x2, x26
   338b4:	ldr	x24, [x27, #8]
   338b8:	bfxil	x1, x23, #0, #32
   338bc:	mov	w3, #0x1f                  	// #31
   338c0:	stp	x4, x5, [sp, #144]
   338c4:	bfi	x1, x22, #32, #32
   338c8:	mov	x0, x24
   338cc:	str	x6, [sp, #160]
   338d0:	bl	32310 <__ubsan_default_options@@Base+0x2c08>
   338d4:	tst	w0, #0xff
   338d8:	b.ne	33b08 <__ubsan_handle_cfi_bad_type@@Base+0x2b0>  // b.any
   338dc:	mov	w0, #0x1                   	// #1
   338e0:	str	w0, [sp, #288]
   338e4:	str	x24, [sp, #296]
   338e8:	add	x25, sp, #0xd0
   338ec:	str	w23, [sp, #304]
   338f0:	mov	x1, x26
   338f4:	str	w22, [sp, #308]
   338f8:	add	x2, sp, #0x60
   338fc:	ldp	x8, x9, [x20]
   33900:	mov	x0, x25
   33904:	ldp	x4, x5, [sp, #288]
   33908:	stp	x4, x5, [sp, #96]
   3390c:	mov	w3, #0x1f                  	// #31
   33910:	ldp	x6, x7, [sp, #304]
   33914:	mov	x26, #0x0                   	// #0
   33918:	ldr	x4, [x20, #16]
   3391c:	stp	x6, x7, [sp, #112]
   33920:	ldr	x10, [sp, #320]
   33924:	str	x10, [sp, #128]
   33928:	stp	x8, x9, [sp, #144]
   3392c:	str	x4, [sp, #160]
   33930:	bl	2eff0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6708>
   33934:	cbnz	w19, 33b58 <__ubsan_handle_cfi_bad_type@@Base+0x300>
   33938:	ldrb	w0, [x27]
   3393c:	cmp	w0, #0x2
   33940:	b.eq	33c2c <__ubsan_handle_cfi_bad_type@@Base+0x3d4>  // b.none
   33944:	b.hi	33b28 <__ubsan_handle_cfi_bad_type@@Base+0x2d0>  // b.pmore
   33948:	cmp	w0, #0x0
   3394c:	adrp	x19, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb398>
   33950:	adrp	x0, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb398>
   33954:	add	x19, x19, #0x588
   33958:	add	x0, x0, #0x5a0
   3395c:	csel	x19, x19, x0, ne  // ne = any
   33960:	ldr	x1, [x27, #24]
   33964:	adrp	x2, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb398>
   33968:	add	x2, x2, #0x5d8
   3396c:	mov	x3, #0x1f00000000          	// #133143986176
   33970:	add	x27, sp, #0x120
   33974:	mov	w28, #0x1                   	// #1
   33978:	mov	x0, x27
   3397c:	str	w28, [sp, #288]
   33980:	str	x24, [sp, #296]
   33984:	str	w23, [sp, #304]
   33988:	str	w22, [sp, #308]
   3398c:	stp	x3, x2, [sp, #328]
   33990:	str	wzr, [sp, #608]
   33994:	str	wzr, [sp, #616]
   33998:	str	xzr, [sp, #624]
   3399c:	str	xzr, [sp, #632]
   339a0:	str	wzr, [sp, #656]
   339a4:	str	xzr, [sp, #664]
   339a8:	str	xzr, [sp, #672]
   339ac:	str	xzr, [sp, #696]
   339b0:	str	wzr, [sp, #704]
   339b4:	bl	2e4c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5be0>
   339b8:	ldr	w3, [x0, #320]
   339bc:	mov	x1, x0
   339c0:	cmp	w3, #0x8
   339c4:	b.eq	33c0c <__ubsan_handle_cfi_bad_type@@Base+0x3b4>  // b.none
   339c8:	ubfiz	x2, x3, #5, #32
   339cc:	add	w0, w3, #0x1
   339d0:	add	x2, x2, #0x40
   339d4:	str	w0, [x1, #320]
   339d8:	add	x4, x1, x2
   339dc:	cmp	w0, #0x8
   339e0:	str	wzr, [x1, x2]
   339e4:	str	x19, [x4, #16]
   339e8:	b.eq	33c0c <__ubsan_handle_cfi_bad_type@@Base+0x3b4>  // b.none
   339ec:	ubfiz	x0, x0, #5, #32
   339f0:	add	w3, w3, #0x2
   339f4:	add	x2, x0, #0x40
   339f8:	str	w3, [x1, #320]
   339fc:	add	x3, x1, x2
   33a00:	mov	w4, #0x5                   	// #5
   33a04:	mov	x0, x27
   33a08:	str	w4, [x1, x2]
   33a0c:	str	x21, [x3, #16]
   33a10:	bl	2e660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   33a14:	cbz	x26, 33bd8 <__ubsan_handle_cfi_bad_type@@Base+0x380>
   33a18:	mov	x2, #0x1                   	// #1
   33a1c:	mov	x0, x27
   33a20:	adrp	x1, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb398>
   33a24:	mov	w3, #0x2                   	// #2
   33a28:	add	x1, x1, #0x638
   33a2c:	movk	x2, #0x1f, lsl #32
   33a30:	str	w3, [sp, #288]
   33a34:	str	xzr, [sp, #296]
   33a38:	str	xzr, [sp, #304]
   33a3c:	str	x21, [sp, #312]
   33a40:	stp	x2, x1, [sp, #328]
   33a44:	str	w28, [sp, #352]
   33a48:	str	x26, [sp, #368]
   33a4c:	str	w28, [sp, #608]
   33a50:	str	wzr, [sp, #616]
   33a54:	add	x26, sp, #0xb0
   33a58:	str	xzr, [sp, #624]
   33a5c:	adrp	x19, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   33a60:	str	xzr, [sp, #632]
   33a64:	add	x19, x19, #0xd68
   33a68:	str	wzr, [sp, #656]
   33a6c:	str	xzr, [sp, #664]
   33a70:	str	xzr, [sp, #672]
   33a74:	str	xzr, [sp, #696]
   33a78:	str	wzr, [sp, #704]
   33a7c:	bl	2e660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   33a80:	bl	299b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10c8>
   33a84:	str	xzr, [sp, #176]
   33a88:	mov	x1, x21
   33a8c:	mov	x2, x26
   33a90:	mov	x3, x27
   33a94:	bl	2a0a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x17b8>
   33a98:	tst	w0, #0xff
   33a9c:	b.eq	33ab4 <__ubsan_handle_cfi_bad_type@@Base+0x25c>  // b.none
   33aa0:	ldr	x19, [sp, #176]
   33aa4:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   33aa8:	add	x0, x0, #0xd68
   33aac:	cmp	x19, #0x0
   33ab0:	csel	x19, x0, x19, eq  // eq = none
   33ab4:	bl	299b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x10c8>
   33ab8:	str	xzr, [sp, #176]
   33abc:	ldr	x1, [x20, #8]
   33ac0:	mov	x2, x26
   33ac4:	mov	x3, x27
   33ac8:	adrp	x20, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   33acc:	add	x20, x20, #0xd68
   33ad0:	bl	2a0a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x17b8>
   33ad4:	tst	w0, #0xff
   33ad8:	b.eq	33af0 <__ubsan_handle_cfi_bad_type@@Base+0x298>  // b.none
   33adc:	ldr	x20, [sp, #176]
   33ae0:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   33ae4:	add	x0, x0, #0xd68
   33ae8:	cmp	x20, #0x0
   33aec:	csel	x20, x0, x20, eq  // eq = none
   33af0:	mov	x1, x19
   33af4:	mov	x0, x20
   33af8:	bl	1a560 <__sanitizer_set_report_fd@@Base+0x26e0>
   33afc:	cbnz	w0, 33b6c <__ubsan_handle_cfi_bad_type@@Base+0x314>
   33b00:	mov	x0, x25
   33b04:	bl	2f058 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6770>
   33b08:	ldp	x19, x20, [sp]
   33b0c:	ldp	x21, x22, [sp, #16]
   33b10:	ldp	x23, x24, [sp, #32]
   33b14:	ldp	x25, x26, [sp, #48]
   33b18:	ldp	x27, x28, [sp, #64]
   33b1c:	ldr	x30, [sp, #80]
   33b20:	add	sp, sp, #0x2d0
   33b24:	ret
   33b28:	cmp	w0, #0x5
   33b2c:	b.hi	33b44 <__ubsan_handle_cfi_bad_type@@Base+0x2ec>  // b.pmore
   33b30:	cmp	w0, #0x3
   33b34:	b.ne	33c38 <__ubsan_handle_cfi_bad_type@@Base+0x3e0>  // b.any
   33b38:	adrp	x19, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb398>
   33b3c:	add	x19, x19, #0x558
   33b40:	b	33960 <__ubsan_handle_cfi_bad_type@@Base+0x108>
   33b44:	cmp	w0, #0x6
   33b48:	adrp	x19, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb398>
   33b4c:	add	x19, x19, #0x5b0
   33b50:	csel	x19, x19, xzr, eq  // eq = none
   33b54:	b	33960 <__ubsan_handle_cfi_bad_type@@Base+0x108>
   33b58:	add	x8, sp, #0xb8
   33b5c:	mov	x0, x21
   33b60:	bl	34100 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x498>
   33b64:	ldr	x26, [sp, #184]
   33b68:	b	33938 <__ubsan_handle_cfi_bad_type@@Base+0xe0>
   33b6c:	adrp	x1, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb398>
   33b70:	mov	x3, #0x1                   	// #1
   33b74:	add	x1, x1, #0x650
   33b78:	mov	w4, #0x1                   	// #1
   33b7c:	movk	x3, #0x1f, lsl #32
   33b80:	mov	w2, #0x2                   	// #2
   33b84:	mov	x0, x27
   33b88:	str	w4, [sp, #288]
   33b8c:	str	x24, [sp, #296]
   33b90:	str	w23, [sp, #304]
   33b94:	str	w22, [sp, #308]
   33b98:	stp	x3, x1, [sp, #328]
   33b9c:	str	wzr, [sp, #352]
   33ba0:	str	x20, [sp, #368]
   33ba4:	str	wzr, [sp, #384]
   33ba8:	str	x19, [sp, #400]
   33bac:	str	w2, [sp, #608]
   33bb0:	str	wzr, [sp, #616]
   33bb4:	str	xzr, [sp, #624]
   33bb8:	str	xzr, [sp, #632]
   33bbc:	str	wzr, [sp, #656]
   33bc0:	str	xzr, [sp, #664]
   33bc4:	str	xzr, [sp, #672]
   33bc8:	str	xzr, [sp, #696]
   33bcc:	str	wzr, [sp, #704]
   33bd0:	bl	2e660 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5d78>
   33bd4:	b	33b00 <__ubsan_handle_cfi_bad_type@@Base+0x2a8>
   33bd8:	mov	x2, #0x1                   	// #1
   33bdc:	adrp	x1, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb398>
   33be0:	mov	w3, #0x2                   	// #2
   33be4:	add	x1, x1, #0x628
   33be8:	movk	x2, #0x1f, lsl #32
   33bec:	mov	x0, x27
   33bf0:	str	w3, [sp, #288]
   33bf4:	str	xzr, [sp, #296]
   33bf8:	str	xzr, [sp, #304]
   33bfc:	str	x21, [sp, #312]
   33c00:	stp	x2, x1, [sp, #328]
   33c04:	str	wzr, [sp, #608]
   33c08:	b	33a50 <__ubsan_handle_cfi_bad_type@@Base+0x1f8>
   33c0c:	adrp	x2, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   33c10:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   33c14:	add	x2, x2, #0x200
   33c18:	add	x0, x0, #0x188
   33c1c:	mov	x4, #0x0                   	// #0
   33c20:	mov	x3, #0x0                   	// #0
   33c24:	mov	w1, #0xc0                  	// #192
   33c28:	bl	23150 <__sanitizer_on_print@@Base+0x3830>
   33c2c:	adrp	x19, 3f000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xb398>
   33c30:	add	x19, x19, #0x570
   33c34:	b	33960 <__ubsan_handle_cfi_bad_type@@Base+0x108>
   33c38:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   33c3c:	nop

0000000000033c40 <__ubsan_handle_function_type_mismatch_v1@@Base>:
   33c40:	stp	x29, x30, [sp, #-80]!
   33c44:	mov	x29, sp
   33c48:	add	x4, x29, #0x10
   33c4c:	stp	xzr, x30, [x29, #56]
   33c50:	ldp	x6, x7, [x29, #56]
   33c54:	stp	x6, x7, [x29, #16]
   33c58:	str	x29, [x29, #32]
   33c5c:	bl	33290 <__ubsan_get_current_report_data@@Base+0x468>
   33c60:	ldp	x29, x30, [sp], #80
   33c64:	ret

0000000000033c68 <__ubsan_handle_function_type_mismatch_v1_abort@@Base>:
   33c68:	stp	x29, x30, [sp, #-80]!
   33c6c:	mov	w4, #0x1                   	// #1
   33c70:	mov	x29, sp
   33c74:	strb	w4, [x29, #56]
   33c78:	add	x4, x29, #0x10
   33c7c:	stur	wzr, [x29, #57]
   33c80:	sturh	wzr, [x29, #61]
   33c84:	strb	wzr, [x29, #63]
   33c88:	str	x30, [x29, #64]
   33c8c:	str	x29, [x29, #32]
   33c90:	ldp	x6, x7, [x29, #56]
   33c94:	stp	x6, x7, [x29, #16]
   33c98:	bl	33290 <__ubsan_get_current_report_data@@Base+0x468>
   33c9c:	tst	w0, #0xff
   33ca0:	b.ne	33cac <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x44>  // b.any
   33ca4:	ldp	x29, x30, [sp], #80
   33ca8:	ret
   33cac:	bl	230e8 <__sanitizer_on_print@@Base+0x37c8>
   33cb0:	ldr	x0, [x0]
   33cb4:	str	x30, [sp, #-16]!
   33cb8:	bl	34100 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x498>
   33cbc:	ldr	x30, [sp], #16
   33cc0:	ret
   33cc4:	nop
   33cc8:	stp	x19, x20, [sp, #-48]!
   33ccc:	mov	x20, x0
   33cd0:	str	x30, [sp, #40]
   33cd4:	cbz	x1, 33dcc <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x164>
   33cd8:	cbz	x0, 33dd4 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x16c>
   33cdc:	stp	x21, x22, [sp, #16]
   33ce0:	adrp	x22, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   33ce4:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   33ce8:	ldr	x22, [x22, #3912]
   33cec:	str	x23, [sp, #32]
   33cf0:	ldr	x21, [x21, #4064]
   33cf4:	mov	x23, x1
   33cf8:	b	33d04 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x9c>
   33cfc:	ldr	x20, [x0, #16]
   33d00:	cbz	x20, 33d94 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x12c>
   33d04:	mov	x2, x22
   33d08:	mov	x1, x21
   33d0c:	mov	x0, x20
   33d10:	mov	x3, #0x0                   	// #0
   33d14:	bl	6430 <__dynamic_cast@plt>
   33d18:	mov	x19, x0
   33d1c:	cbnz	x0, 33cfc <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x94>
   33d20:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   33d24:	mov	x1, x21
   33d28:	mov	x0, x20
   33d2c:	mov	x3, #0x0                   	// #0
   33d30:	ldr	x2, [x2, #3856]
   33d34:	bl	6430 <__dynamic_cast@plt>
   33d38:	cbz	x0, 33d7c <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x114>
   33d3c:	ldr	w21, [x0, #20]
   33d40:	cbz	w21, 33d7c <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x114>
   33d44:	sub	w21, w21, #0x1
   33d48:	add	x1, x0, #0x28
   33d4c:	add	x20, x0, #0x18
   33d50:	add	x21, x1, w21, uxtw #4
   33d54:	nop
   33d58:	ldr	x0, [x20, #8]
   33d5c:	sub	x1, x23, x0, asr #8
   33d60:	tbnz	w0, #0, 33d70 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x108>
   33d64:	ldr	x0, [x20]
   33d68:	bl	33cc8 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x60>
   33d6c:	cbnz	x0, 33db0 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x148>
   33d70:	add	x20, x20, #0x10
   33d74:	cmp	x20, x21
   33d78:	b.ne	33d58 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xf0>  // b.any
   33d7c:	ldp	x21, x22, [sp, #16]
   33d80:	ldr	x23, [sp, #32]
   33d84:	mov	x0, x19
   33d88:	ldr	x30, [sp, #40]
   33d8c:	ldp	x19, x20, [sp], #48
   33d90:	ret
   33d94:	mov	x19, #0x0                   	// #0
   33d98:	mov	x0, x19
   33d9c:	ldp	x21, x22, [sp, #16]
   33da0:	ldr	x23, [sp, #32]
   33da4:	ldr	x30, [sp, #40]
   33da8:	ldp	x19, x20, [sp], #48
   33dac:	ret
   33db0:	mov	x19, x0
   33db4:	mov	x0, x19
   33db8:	ldp	x21, x22, [sp, #16]
   33dbc:	ldr	x23, [sp, #32]
   33dc0:	ldr	x30, [sp, #40]
   33dc4:	ldp	x19, x20, [sp], #48
   33dc8:	ret
   33dcc:	mov	x19, x0
   33dd0:	b	33d84 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x11c>
   33dd4:	mov	x19, #0x0                   	// #0
   33dd8:	b	33d84 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x11c>
   33ddc:	nop
   33de0:	stp	x19, x20, [sp, #-48]!
   33de4:	mov	x19, x0
   33de8:	mov	x20, x1
   33dec:	ldr	x0, [x0, #8]
   33df0:	stp	x23, x30, [sp, #32]
   33df4:	mov	x23, x2
   33df8:	ldr	x1, [x1, #8]
   33dfc:	cmp	x0, x1
   33e00:	b.eq	33e3c <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1d4>  // b.none
   33e04:	stp	x21, x22, [sp, #16]
   33e08:	adrp	x22, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   33e0c:	adrp	x21, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   33e10:	ldr	x22, [x22, #3912]
   33e14:	ldr	x21, [x21, #4064]
   33e18:	ldrb	w3, [x0]
   33e1c:	cmp	w3, #0x2a
   33e20:	b.eq	33e50 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1e8>  // b.none
   33e24:	ldrb	w2, [x1]
   33e28:	cmp	w2, #0x2a
   33e2c:	b.eq	33e50 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1e8>  // b.none
   33e30:	bl	1a560 <__sanitizer_set_report_fd@@Base+0x26e0>
   33e34:	cbnz	w0, 33e50 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1e8>
   33e38:	ldp	x21, x22, [sp, #16]
   33e3c:	cmp	x23, #0x0
   33e40:	cset	w0, eq  // eq = none
   33e44:	ldp	x23, x30, [sp, #32]
   33e48:	ldp	x19, x20, [sp], #48
   33e4c:	ret
   33e50:	mov	x2, x22
   33e54:	mov	x1, x21
   33e58:	mov	x0, x19
   33e5c:	mov	x3, #0x0                   	// #0
   33e60:	bl	6430 <__dynamic_cast@plt>
   33e64:	cbz	x0, 33e80 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x218>
   33e68:	ldr	x19, [x0, #16]
   33e6c:	ldr	x1, [x20, #8]
   33e70:	ldr	x0, [x19, #8]
   33e74:	cmp	x0, x1
   33e78:	b.ne	33e18 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1b0>  // b.any
   33e7c:	b	33e38 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1d0>
   33e80:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   33e84:	mov	x1, x21
   33e88:	mov	x0, x19
   33e8c:	mov	x3, #0x0                   	// #0
   33e90:	ldr	x2, [x2, #3856]
   33e94:	bl	6430 <__dynamic_cast@plt>
   33e98:	mov	x21, x0
   33e9c:	cbz	x0, 33ee8 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x280>
   33ea0:	ldr	w0, [x0, #20]
   33ea4:	cbz	w0, 33ee8 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x280>
   33ea8:	mov	w19, #0x0                   	// #0
   33eac:	ubfiz	x3, x19, #4, #32
   33eb0:	mov	x1, x20
   33eb4:	add	x3, x21, x3
   33eb8:	add	w19, w19, #0x1
   33ebc:	ldr	x0, [x3, #32]
   33ec0:	asr	x2, x0, #8
   33ec4:	tbnz	w0, #0, 33efc <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x294>
   33ec8:	ldr	x0, [x3, #24]
   33ecc:	sub	x2, x23, x2
   33ed0:	bl	33de0 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x178>
   33ed4:	tst	w0, #0xff
   33ed8:	b.ne	33efc <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x294>  // b.any
   33edc:	ldr	w0, [x21, #20]
   33ee0:	cmp	w0, w19
   33ee4:	b.ne	33eac <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x244>  // b.any
   33ee8:	mov	w0, #0x0                   	// #0
   33eec:	ldp	x21, x22, [sp, #16]
   33ef0:	ldp	x23, x30, [sp, #32]
   33ef4:	ldp	x19, x20, [sp], #48
   33ef8:	ret
   33efc:	mov	w0, #0x1                   	// #1
   33f00:	ldp	x21, x22, [sp, #16]
   33f04:	ldp	x23, x30, [sp, #32]
   33f08:	ldp	x19, x20, [sp], #48
   33f0c:	ret
   33f10:	stp	x19, x20, [sp, #-48]!
   33f14:	mov	x19, x2
   33f18:	and	w2, w2, #0xffff
   33f1c:	eor	w6, w2, #0x1
   33f20:	stp	x21, x22, [sp, #16]
   33f24:	adrp	x21, 931000 <__ubsan_vptr_type_cache@@Base+0x1e8>
   33f28:	add	x5, x21, #0x220
   33f2c:	mov	x20, x1
   33f30:	ldr	x3, [x5, x6, lsl #3]
   33f34:	str	x30, [sp, #32]
   33f38:	cbz	x3, 340c8 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x460>
   33f3c:	cmp	x19, x3
   33f40:	b.eq	340b8 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x450>  // b.none
   33f44:	lsr	w1, w19, #16
   33f48:	add	w3, w6, w1
   33f4c:	add	w2, w3, #0x1
   33f50:	sub	w3, w3, #0x10, lsl #12
   33f54:	cmp	w2, #0x10, lsl #12
   33f58:	csel	w2, w3, w2, hi  // hi = pmore
   33f5c:	mov	w4, w2
   33f60:	ldr	x3, [x5, x4, lsl #3]
   33f64:	cbz	x3, 340c4 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x45c>
   33f68:	cmp	x19, x3
   33f6c:	b.eq	340d8 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x470>  // b.none
   33f70:	add	w2, w1, w2
   33f74:	add	w4, w2, #0x1
   33f78:	sub	w2, w2, #0x10, lsl #12
   33f7c:	cmp	w4, #0x10, lsl #12
   33f80:	csel	w4, w2, w4, hi  // hi = pmore
   33f84:	mov	w2, w4
   33f88:	ldr	x3, [x5, x2, lsl #3]
   33f8c:	cbz	x3, 340e0 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x478>
   33f90:	cmp	x19, x3
   33f94:	b.eq	340b4 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x44c>  // b.none
   33f98:	add	w4, w1, w4
   33f9c:	add	w2, w4, #0x1
   33fa0:	sub	w4, w4, #0x10, lsl #12
   33fa4:	cmp	w2, #0x10, lsl #12
   33fa8:	csel	w2, w4, w2, hi  // hi = pmore
   33fac:	mov	w4, w2
   33fb0:	ldr	x3, [x5, x4, lsl #3]
   33fb4:	cbz	x3, 340c4 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x45c>
   33fb8:	cmp	x19, x3
   33fbc:	b.eq	340d8 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x470>  // b.none
   33fc0:	add	w1, w1, w2
   33fc4:	add	w2, w1, #0x1
   33fc8:	sub	w1, w1, #0x10, lsl #12
   33fcc:	cmp	w2, #0x10, lsl #12
   33fd0:	csel	w2, w1, w2, hi  // hi = pmore
   33fd4:	mov	w1, w2
   33fd8:	ldr	x3, [x5, x1, lsl #3]
   33fdc:	cbz	x3, 340ec <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x484>
   33fe0:	cmp	x19, x3
   33fe4:	b.eq	340f8 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x490>  // b.none
   33fe8:	ldr	x3, [x5, x6, lsl #3]
   33fec:	add	x21, x5, x6, lsl #3
   33ff0:	cmp	x3, x19
   33ff4:	b.eq	34090 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x428>  // b.none
   33ff8:	ldr	x22, [x0]
   33ffc:	mov	x1, #0x10                  	// #16
   34000:	sub	x0, x22, #0x10
   34004:	bl	24b58 <__sanitizer_sandbox_on_notify@@Base+0x1510>
   34008:	tst	w0, #0xff
   3400c:	b.eq	3407c <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x414>  // b.none
   34010:	ldur	x0, [x22, #-8]
   34014:	cbz	x0, 3407c <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x414>
   34018:	ldur	x22, [x22, #-16]
   3401c:	add	x1, x22, #0x100, lsl #12
   34020:	cmp	x1, #0x200, lsl #12
   34024:	b.hi	3407c <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x414>  // b.pmore
   34028:	adrp	x2, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   3402c:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   34030:	mov	x3, #0x0                   	// #0
   34034:	ldr	x2, [x2, #4064]
   34038:	ldr	x1, [x1, #3872]
   3403c:	bl	6430 <__dynamic_cast@plt>
   34040:	cbz	x0, 3407c <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x414>
   34044:	neg	x2, x22
   34048:	mov	x1, x20
   3404c:	bl	33de0 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x178>
   34050:	ands	w0, w0, #0xff
   34054:	b.eq	3407c <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x414>  // b.none
   34058:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   3405c:	and	x2, x19, #0x7f
   34060:	str	x19, [x21]
   34064:	ldr	x1, [x1, #3672]
   34068:	ldp	x21, x22, [sp, #16]
   3406c:	str	x19, [x1, x2, lsl #3]
   34070:	ldr	x30, [sp, #32]
   34074:	ldp	x19, x20, [sp], #48
   34078:	ret
   3407c:	mov	w0, #0x0                   	// #0
   34080:	ldp	x21, x22, [sp, #16]
   34084:	ldr	x30, [sp, #32]
   34088:	ldp	x19, x20, [sp], #48
   3408c:	ret
   34090:	adrp	x1, 59000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x25398>
   34094:	and	x2, x3, #0x7f
   34098:	mov	w0, #0x1                   	// #1
   3409c:	ldr	x1, [x1, #3672]
   340a0:	ldp	x21, x22, [sp, #16]
   340a4:	str	x3, [x1, x2, lsl #3]
   340a8:	ldr	x30, [sp, #32]
   340ac:	ldp	x19, x20, [sp], #48
   340b0:	ret
   340b4:	mov	x6, x2
   340b8:	add	x21, x21, #0x220
   340bc:	add	x21, x21, x6, lsl #3
   340c0:	b	33ff0 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x388>
   340c4:	mov	x6, x4
   340c8:	mov	x3, #0x0                   	// #0
   340cc:	add	x21, x21, #0x220
   340d0:	add	x21, x21, x6, lsl #3
   340d4:	b	33ff0 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x388>
   340d8:	mov	x6, x4
   340dc:	b	340b8 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x450>
   340e0:	mov	x6, x2
   340e4:	mov	x3, #0x0                   	// #0
   340e8:	b	340cc <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x464>
   340ec:	mov	x6, x1
   340f0:	mov	x3, #0x0                   	// #0
   340f4:	b	340cc <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x464>
   340f8:	mov	w6, w2
   340fc:	b	340b8 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x450>
   34100:	stp	x19, x20, [sp, #-32]!
   34104:	mov	x1, #0x10                  	// #16
   34108:	mov	x20, x0
   3410c:	mov	x19, x8
   34110:	sub	x0, x0, #0x10
   34114:	str	x30, [sp, #24]
   34118:	bl	24b58 <__sanitizer_sandbox_on_notify@@Base+0x1510>
   3411c:	tst	w0, #0xff
   34120:	b.eq	34190 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x528>  // b.none
   34124:	str	x21, [sp, #16]
   34128:	ldur	x21, [x20, #-8]
   3412c:	cbz	x21, 3418c <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x524>
   34130:	ldur	x1, [x20, #-16]
   34134:	add	x0, x1, #0x100, lsl #12
   34138:	cmp	x0, #0x200, lsl #12
   3413c:	b.ls	34158 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4f0>  // b.plast
   34140:	ldr	x21, [sp, #16]
   34144:	stp	xzr, x1, [x19]
   34148:	str	xzr, [x19, #16]
   3414c:	ldr	x30, [sp, #24]
   34150:	ldp	x19, x20, [sp], #32
   34154:	ret
   34158:	neg	x20, x1
   3415c:	mov	x0, x21
   34160:	mov	x1, x20
   34164:	bl	33cc8 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x60>
   34168:	ldr	x1, [x21, #8]
   3416c:	cbz	x0, 341a4 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x53c>
   34170:	ldr	x0, [x0, #8]
   34174:	ldr	x21, [sp, #16]
   34178:	stp	x1, x20, [x19]
   3417c:	str	x0, [x19, #16]
   34180:	ldr	x30, [sp, #24]
   34184:	ldp	x19, x20, [sp], #32
   34188:	ret
   3418c:	ldr	x21, [sp, #16]
   34190:	stp	xzr, xzr, [x19]
   34194:	str	xzr, [x19, #16]
   34198:	ldr	x30, [sp, #24]
   3419c:	ldp	x19, x20, [sp], #32
   341a0:	ret
   341a4:	adrp	x0, 3e000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0xa398>
   341a8:	add	x0, x0, #0x220
   341ac:	b	34174 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x50c>
   341b0:	ldr	x2, [x0, #8]
   341b4:	ldrb	w0, [x2]
   341b8:	cmp	w0, #0x2a
   341bc:	b.eq	341f4 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x58c>  // b.none
   341c0:	ldr	x1, [x1, #8]
   341c4:	mov	w0, #0x0                   	// #0
   341c8:	ldrb	w3, [x1]
   341cc:	cmp	w3, #0x2a
   341d0:	b.ne	341d8 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x570>  // b.any
   341d4:	ret
   341d8:	str	x30, [sp, #-16]!
   341dc:	mov	x0, x2
   341e0:	bl	1a560 <__sanitizer_set_report_fd@@Base+0x26e0>
   341e4:	cmp	w0, #0x0
   341e8:	cset	w0, eq  // eq = none
   341ec:	ldr	x30, [sp], #16
   341f0:	ret
   341f4:	mov	w0, #0x0                   	// #0
   341f8:	ret
   341fc:	nop
   34200:	adrp	x2, 5a000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x26398>
   34204:	mov	x1, #0x0                   	// #0
   34208:	ldr	x2, [x2, #608]
   3420c:	b	6440 <__cxa_atexit@plt>

Disassembly of section .fini:

0000000000034210 <.fini>:
   34210:	stp	x29, x30, [sp, #-16]!
   34214:	mov	x29, sp
   34218:	ldp	x29, x30, [sp], #16
   3421c:	ret
