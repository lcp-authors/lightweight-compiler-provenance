In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libLLVMDebugInfoMSF.a_gcc_-O1:

MappedBlockStream.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>:
       0:	ldr	w0, [x0, #16]
       4:	ret

0000000000000008 <_ZN4llvm3msf25WritableMappedBlockStream9getLengthEv>:
       8:	stp	x29, x30, [sp, #-16]!
       c:	mov	x29, sp
      10:	add	x0, x0, #0x8
      14:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
      18:	ldp	x29, x30, [sp], #16
      1c:	ret

0000000000000020 <_ZN4llvm3msf25WritableMappedBlockStream6commitEv>:
      20:	stp	x29, x30, [sp, #-32]!
      24:	mov	x29, sp
      28:	str	x19, [sp, #16]
      2c:	mov	x19, x8
      30:	add	x0, x0, #0x88
      34:	bl	0 <_ZN4llvm23WritableBinaryStreamRef6commitEv>
      38:	mov	x0, x19
      3c:	ldr	x19, [sp, #16]
      40:	ldp	x29, x30, [sp], #32
      44:	ret

0000000000000048 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED1Ev>:
      48:	stp	x29, x30, [sp, #-48]!
      4c:	mov	x29, sp
      50:	stp	x19, x20, [sp, #16]
      54:	mov	x19, x0
      58:	mov	x1, x0
      5c:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
      60:	ldr	x0, [x0]
      64:	add	x0, x0, #0x10
      68:	str	x0, [x1], #96
      6c:	ldr	w0, [x1, #24]
      70:	cbz	w0, b4 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED1Ev+0x6c>
      74:	str	x21, [sp, #32]
      78:	ldr	x20, [x19, #104]
      7c:	ubfiz	x0, x0, #5, #32
      80:	add	x21, x20, x0
      84:	b	98 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED1Ev+0x50>
      88:	bl	0 <_ZdlPv>
      8c:	add	x20, x20, #0x20
      90:	cmp	x21, x20
      94:	b.eq	b0 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED1Ev+0x68>  // b.none
      98:	ldr	w0, [x20]
      9c:	cmn	w0, #0x3
      a0:	b.hi	8c <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED1Ev+0x44>  // b.pmore
      a4:	ldr	x0, [x20, #8]
      a8:	cbnz	x0, 88 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED1Ev+0x40>
      ac:	b	8c <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED1Ev+0x44>
      b0:	ldr	x21, [sp, #32]
      b4:	ldr	w1, [x19, #120]
      b8:	lsl	x1, x1, #5
      bc:	ldr	x0, [x19, #104]
      c0:	bl	0 <_ZdlPvm>
      c4:	ldr	x20, [x19, #56]
      c8:	cbz	x20, f4 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED1Ev+0xac>
      cc:	adrp	x0, 0 <__pthread_key_create>
      d0:	ldr	x0, [x0]
      d4:	cbz	x0, 10c <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED1Ev+0xc4>
      d8:	add	x1, x20, #0x8
      dc:	ldaxr	w0, [x1]
      e0:	sub	w2, w0, #0x1
      e4:	stlxr	w3, w2, [x1]
      e8:	cbnz	w3, dc <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED1Ev+0x94>
      ec:	cmp	w0, #0x1
      f0:	b.eq	11c <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED1Ev+0xd4>  // b.none
      f4:	ldr	x0, [x19, #24]
      f8:	cbz	x0, 100 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED1Ev+0xb8>
      fc:	bl	0 <_ZdlPv>
     100:	ldp	x19, x20, [sp, #16]
     104:	ldp	x29, x30, [sp], #48
     108:	ret
     10c:	ldr	w0, [x20, #8]
     110:	sub	w1, w0, #0x1
     114:	str	w1, [x20, #8]
     118:	b	ec <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED1Ev+0xa4>
     11c:	ldr	x0, [x20]
     120:	ldr	x1, [x0, #16]
     124:	mov	x0, x20
     128:	blr	x1
     12c:	adrp	x0, 0 <__pthread_key_create>
     130:	ldr	x0, [x0]
     134:	cbz	x0, 168 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED1Ev+0x120>
     138:	add	x1, x20, #0xc
     13c:	ldaxr	w0, [x1]
     140:	sub	w2, w0, #0x1
     144:	stlxr	w3, w2, [x1]
     148:	cbnz	w3, 13c <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED1Ev+0xf4>
     14c:	cmp	w0, #0x1
     150:	b.ne	f4 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED1Ev+0xac>  // b.any
     154:	ldr	x0, [x20]
     158:	ldr	x1, [x0, #24]
     15c:	mov	x0, x20
     160:	blr	x1
     164:	b	f4 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED1Ev+0xac>
     168:	ldr	w0, [x20, #12]
     16c:	sub	w1, w0, #0x1
     170:	str	w1, [x20, #12]
     174:	b	14c <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED1Ev+0x104>

0000000000000178 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev>:
     178:	stp	x29, x30, [sp, #-48]!
     17c:	mov	x29, sp
     180:	stp	x19, x20, [sp, #16]
     184:	mov	x19, x0
     188:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     18c:	ldr	x0, [x0]
     190:	add	x0, x0, #0x10
     194:	str	x0, [x19]
     198:	ldr	x20, [x19, #144]
     19c:	cbz	x20, 1c8 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev+0x50>
     1a0:	adrp	x0, 0 <__pthread_key_create>
     1a4:	ldr	x0, [x0]
     1a8:	cbz	x0, 1f4 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev+0x7c>
     1ac:	add	x1, x20, #0x8
     1b0:	ldaxr	w0, [x1]
     1b4:	sub	w2, w0, #0x1
     1b8:	stlxr	w3, w2, [x1]
     1bc:	cbnz	w3, 1b0 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev+0x38>
     1c0:	cmp	w0, #0x1
     1c4:	b.eq	204 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev+0x8c>  // b.none
     1c8:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     1cc:	ldr	x0, [x0]
     1d0:	add	x0, x0, #0x10
     1d4:	str	x0, [x19, #8]
     1d8:	ldr	w0, [x19, #128]
     1dc:	cbz	w0, 28c <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev+0x114>
     1e0:	str	x21, [sp, #32]
     1e4:	ldr	x20, [x19, #112]
     1e8:	ubfiz	x0, x0, #5, #32
     1ec:	add	x21, x20, x0
     1f0:	b	270 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev+0xf8>
     1f4:	ldr	w0, [x20, #8]
     1f8:	sub	w1, w0, #0x1
     1fc:	str	w1, [x20, #8]
     200:	b	1c0 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev+0x48>
     204:	ldr	x0, [x20]
     208:	ldr	x1, [x0, #16]
     20c:	mov	x0, x20
     210:	blr	x1
     214:	adrp	x0, 0 <__pthread_key_create>
     218:	ldr	x0, [x0]
     21c:	cbz	x0, 250 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev+0xd8>
     220:	add	x1, x20, #0xc
     224:	ldaxr	w0, [x1]
     228:	sub	w2, w0, #0x1
     22c:	stlxr	w3, w2, [x1]
     230:	cbnz	w3, 224 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev+0xac>
     234:	cmp	w0, #0x1
     238:	b.ne	1c8 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev+0x50>  // b.any
     23c:	ldr	x0, [x20]
     240:	ldr	x1, [x0, #24]
     244:	mov	x0, x20
     248:	blr	x1
     24c:	b	1c8 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev+0x50>
     250:	ldr	w0, [x20, #12]
     254:	sub	w1, w0, #0x1
     258:	str	w1, [x20, #12]
     25c:	b	234 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev+0xbc>
     260:	bl	0 <_ZdlPv>
     264:	add	x20, x20, #0x20
     268:	cmp	x21, x20
     26c:	b.eq	288 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev+0x110>  // b.none
     270:	ldr	w0, [x20]
     274:	cmn	w0, #0x3
     278:	b.hi	264 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev+0xec>  // b.pmore
     27c:	ldr	x0, [x20, #8]
     280:	cbnz	x0, 260 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev+0xe8>
     284:	b	264 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev+0xec>
     288:	ldr	x21, [sp, #32]
     28c:	ldr	w1, [x19, #128]
     290:	lsl	x1, x1, #5
     294:	ldr	x0, [x19, #112]
     298:	bl	0 <_ZdlPvm>
     29c:	ldr	x20, [x19, #64]
     2a0:	cbz	x20, 2cc <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev+0x154>
     2a4:	adrp	x0, 0 <__pthread_key_create>
     2a8:	ldr	x0, [x0]
     2ac:	cbz	x0, 2e4 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev+0x16c>
     2b0:	add	x1, x20, #0x8
     2b4:	ldaxr	w0, [x1]
     2b8:	sub	w2, w0, #0x1
     2bc:	stlxr	w3, w2, [x1]
     2c0:	cbnz	w3, 2b4 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev+0x13c>
     2c4:	cmp	w0, #0x1
     2c8:	b.eq	2f4 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev+0x17c>  // b.none
     2cc:	ldr	x0, [x19, #32]
     2d0:	cbz	x0, 2d8 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev+0x160>
     2d4:	bl	0 <_ZdlPv>
     2d8:	ldp	x19, x20, [sp, #16]
     2dc:	ldp	x29, x30, [sp], #48
     2e0:	ret
     2e4:	ldr	w0, [x20, #8]
     2e8:	sub	w1, w0, #0x1
     2ec:	str	w1, [x20, #8]
     2f0:	b	2c4 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev+0x14c>
     2f4:	ldr	x0, [x20]
     2f8:	ldr	x1, [x0, #16]
     2fc:	mov	x0, x20
     300:	blr	x1
     304:	adrp	x0, 0 <__pthread_key_create>
     308:	ldr	x0, [x0]
     30c:	cbz	x0, 340 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev+0x1c8>
     310:	add	x1, x20, #0xc
     314:	ldaxr	w0, [x1]
     318:	sub	w2, w0, #0x1
     31c:	stlxr	w3, w2, [x1]
     320:	cbnz	w3, 314 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev+0x19c>
     324:	cmp	w0, #0x1
     328:	b.ne	2cc <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev+0x154>  // b.any
     32c:	ldr	x0, [x20]
     330:	ldr	x1, [x0, #24]
     334:	mov	x0, x20
     338:	blr	x1
     33c:	b	2cc <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev+0x154>
     340:	ldr	w0, [x20, #12]
     344:	sub	w1, w0, #0x1
     348:	str	w1, [x20, #12]
     34c:	b	324 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED1Ev+0x1ac>

0000000000000350 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED0Ev>:
     350:	stp	x29, x30, [sp, #-48]!
     354:	mov	x29, sp
     358:	stp	x19, x20, [sp, #16]
     35c:	mov	x19, x0
     360:	mov	x1, x0
     364:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     368:	ldr	x0, [x0]
     36c:	add	x0, x0, #0x10
     370:	str	x0, [x1], #96
     374:	ldr	w0, [x1, #24]
     378:	cbz	w0, 3bc <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED0Ev+0x6c>
     37c:	str	x21, [sp, #32]
     380:	ldr	x20, [x19, #104]
     384:	ubfiz	x0, x0, #5, #32
     388:	add	x21, x20, x0
     38c:	b	3a0 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED0Ev+0x50>
     390:	bl	0 <_ZdlPv>
     394:	add	x20, x20, #0x20
     398:	cmp	x21, x20
     39c:	b.eq	3b8 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED0Ev+0x68>  // b.none
     3a0:	ldr	w0, [x20]
     3a4:	cmn	w0, #0x3
     3a8:	b.hi	394 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED0Ev+0x44>  // b.pmore
     3ac:	ldr	x0, [x20, #8]
     3b0:	cbnz	x0, 390 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED0Ev+0x40>
     3b4:	b	394 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED0Ev+0x44>
     3b8:	ldr	x21, [sp, #32]
     3bc:	ldr	w1, [x19, #120]
     3c0:	lsl	x1, x1, #5
     3c4:	ldr	x0, [x19, #104]
     3c8:	bl	0 <_ZdlPvm>
     3cc:	ldr	x20, [x19, #56]
     3d0:	cbz	x20, 3fc <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED0Ev+0xac>
     3d4:	adrp	x0, 0 <__pthread_key_create>
     3d8:	ldr	x0, [x0]
     3dc:	cbz	x0, 420 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED0Ev+0xd0>
     3e0:	add	x1, x20, #0x8
     3e4:	ldaxr	w0, [x1]
     3e8:	sub	w2, w0, #0x1
     3ec:	stlxr	w3, w2, [x1]
     3f0:	cbnz	w3, 3e4 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED0Ev+0x94>
     3f4:	cmp	w0, #0x1
     3f8:	b.eq	430 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED0Ev+0xe0>  // b.none
     3fc:	ldr	x0, [x19, #24]
     400:	cbz	x0, 408 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED0Ev+0xb8>
     404:	bl	0 <_ZdlPv>
     408:	mov	x1, #0x80                  	// #128
     40c:	mov	x0, x19
     410:	bl	0 <_ZdlPvm>
     414:	ldp	x19, x20, [sp, #16]
     418:	ldp	x29, x30, [sp], #48
     41c:	ret
     420:	ldr	w0, [x20, #8]
     424:	sub	w1, w0, #0x1
     428:	str	w1, [x20, #8]
     42c:	b	3f4 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED0Ev+0xa4>
     430:	ldr	x0, [x20]
     434:	ldr	x1, [x0, #16]
     438:	mov	x0, x20
     43c:	blr	x1
     440:	adrp	x0, 0 <__pthread_key_create>
     444:	ldr	x0, [x0]
     448:	cbz	x0, 47c <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED0Ev+0x12c>
     44c:	add	x1, x20, #0xc
     450:	ldaxr	w0, [x1]
     454:	sub	w2, w0, #0x1
     458:	stlxr	w3, w2, [x1]
     45c:	cbnz	w3, 450 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED0Ev+0x100>
     460:	cmp	w0, #0x1
     464:	b.ne	3fc <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED0Ev+0xac>  // b.any
     468:	ldr	x0, [x20]
     46c:	ldr	x1, [x0, #24]
     470:	mov	x0, x20
     474:	blr	x1
     478:	b	3fc <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED0Ev+0xac>
     47c:	ldr	w0, [x20, #12]
     480:	sub	w1, w0, #0x1
     484:	str	w1, [x20, #12]
     488:	b	460 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf17MappedBlockStreamEED0Ev+0x110>

000000000000048c <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev>:
     48c:	stp	x29, x30, [sp, #-48]!
     490:	mov	x29, sp
     494:	stp	x19, x20, [sp, #16]
     498:	mov	x19, x0
     49c:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     4a0:	ldr	x0, [x0]
     4a4:	add	x0, x0, #0x10
     4a8:	str	x0, [x19]
     4ac:	ldr	x20, [x19, #144]
     4b0:	cbz	x20, 4dc <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev+0x50>
     4b4:	adrp	x0, 0 <__pthread_key_create>
     4b8:	ldr	x0, [x0]
     4bc:	cbz	x0, 508 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev+0x7c>
     4c0:	add	x1, x20, #0x8
     4c4:	ldaxr	w0, [x1]
     4c8:	sub	w2, w0, #0x1
     4cc:	stlxr	w3, w2, [x1]
     4d0:	cbnz	w3, 4c4 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev+0x38>
     4d4:	cmp	w0, #0x1
     4d8:	b.eq	518 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev+0x8c>  // b.none
     4dc:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     4e0:	ldr	x0, [x0]
     4e4:	add	x0, x0, #0x10
     4e8:	str	x0, [x19, #8]
     4ec:	ldr	w0, [x19, #128]
     4f0:	cbz	w0, 5a0 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev+0x114>
     4f4:	str	x21, [sp, #32]
     4f8:	ldr	x20, [x19, #112]
     4fc:	ubfiz	x0, x0, #5, #32
     500:	add	x21, x20, x0
     504:	b	584 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev+0xf8>
     508:	ldr	w0, [x20, #8]
     50c:	sub	w1, w0, #0x1
     510:	str	w1, [x20, #8]
     514:	b	4d4 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev+0x48>
     518:	ldr	x0, [x20]
     51c:	ldr	x1, [x0, #16]
     520:	mov	x0, x20
     524:	blr	x1
     528:	adrp	x0, 0 <__pthread_key_create>
     52c:	ldr	x0, [x0]
     530:	cbz	x0, 564 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev+0xd8>
     534:	add	x1, x20, #0xc
     538:	ldaxr	w0, [x1]
     53c:	sub	w2, w0, #0x1
     540:	stlxr	w3, w2, [x1]
     544:	cbnz	w3, 538 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev+0xac>
     548:	cmp	w0, #0x1
     54c:	b.ne	4dc <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev+0x50>  // b.any
     550:	ldr	x0, [x20]
     554:	ldr	x1, [x0, #24]
     558:	mov	x0, x20
     55c:	blr	x1
     560:	b	4dc <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev+0x50>
     564:	ldr	w0, [x20, #12]
     568:	sub	w1, w0, #0x1
     56c:	str	w1, [x20, #12]
     570:	b	548 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev+0xbc>
     574:	bl	0 <_ZdlPv>
     578:	add	x20, x20, #0x20
     57c:	cmp	x21, x20
     580:	b.eq	59c <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev+0x110>  // b.none
     584:	ldr	w0, [x20]
     588:	cmn	w0, #0x3
     58c:	b.hi	578 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev+0xec>  // b.pmore
     590:	ldr	x0, [x20, #8]
     594:	cbnz	x0, 574 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev+0xe8>
     598:	b	578 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev+0xec>
     59c:	ldr	x21, [sp, #32]
     5a0:	ldr	w1, [x19, #128]
     5a4:	lsl	x1, x1, #5
     5a8:	ldr	x0, [x19, #112]
     5ac:	bl	0 <_ZdlPvm>
     5b0:	ldr	x20, [x19, #64]
     5b4:	cbz	x20, 5e0 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev+0x154>
     5b8:	adrp	x0, 0 <__pthread_key_create>
     5bc:	ldr	x0, [x0]
     5c0:	cbz	x0, 604 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev+0x178>
     5c4:	add	x1, x20, #0x8
     5c8:	ldaxr	w0, [x1]
     5cc:	sub	w2, w0, #0x1
     5d0:	stlxr	w3, w2, [x1]
     5d4:	cbnz	w3, 5c8 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev+0x13c>
     5d8:	cmp	w0, #0x1
     5dc:	b.eq	614 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev+0x188>  // b.none
     5e0:	ldr	x0, [x19, #32]
     5e4:	cbz	x0, 5ec <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev+0x160>
     5e8:	bl	0 <_ZdlPv>
     5ec:	mov	x1, #0xb0                  	// #176
     5f0:	mov	x0, x19
     5f4:	bl	0 <_ZdlPvm>
     5f8:	ldp	x19, x20, [sp, #16]
     5fc:	ldp	x29, x30, [sp], #48
     600:	ret
     604:	ldr	w0, [x20, #8]
     608:	sub	w1, w0, #0x1
     60c:	str	w1, [x20, #8]
     610:	b	5d8 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev+0x14c>
     614:	ldr	x0, [x20]
     618:	ldr	x1, [x0, #16]
     61c:	mov	x0, x20
     620:	blr	x1
     624:	adrp	x0, 0 <__pthread_key_create>
     628:	ldr	x0, [x0]
     62c:	cbz	x0, 660 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev+0x1d4>
     630:	add	x1, x20, #0xc
     634:	ldaxr	w0, [x1]
     638:	sub	w2, w0, #0x1
     63c:	stlxr	w3, w2, [x1]
     640:	cbnz	w3, 634 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev+0x1a8>
     644:	cmp	w0, #0x1
     648:	b.ne	5e0 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev+0x154>  // b.any
     64c:	ldr	x0, [x20]
     650:	ldr	x1, [x0, #24]
     654:	mov	x0, x20
     658:	blr	x1
     65c:	b	5e0 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev+0x154>
     660:	ldr	w0, [x20, #12]
     664:	sub	w1, w0, #0x1
     668:	str	w1, [x20, #12]
     66c:	b	644 <_ZN12_GLOBAL__N_121MappedBlockStreamImplIN4llvm3msf25WritableMappedBlockStreamEED0Ev+0x1b8>

0000000000000670 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>:
     670:	stp	x29, x30, [sp, #-64]!
     674:	mov	x29, sp
     678:	stp	x19, x20, [sp, #16]
     67c:	stp	x21, x22, [sp, #32]
     680:	stp	x23, x24, [sp, #48]
     684:	mov	x19, x0
     688:	mov	x23, x2
     68c:	mov	x22, x3
     690:	mov	x24, x4
     694:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     698:	ldr	x0, [x0]
     69c:	add	x0, x0, #0x10
     6a0:	str	x0, [x19]
     6a4:	str	w1, [x19, #8]
     6a8:	mov	x0, x2
     6ac:	ldr	w1, [x0], #8
     6b0:	str	w1, [x19, #16]
     6b4:	ldr	x21, [x0, #8]
     6b8:	ldr	x0, [x2, #8]
     6bc:	sub	x21, x21, x0
     6c0:	str	xzr, [x19, #24]
     6c4:	str	xzr, [x19, #32]
     6c8:	str	xzr, [x19, #40]
     6cc:	cmp	xzr, x21, asr #2
     6d0:	b.eq	7a4 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x134>  // b.none
     6d4:	asr	x1, x21, #2
     6d8:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
     6dc:	cmp	x1, x0
     6e0:	b.hi	7a0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x130>  // b.pmore
     6e4:	mov	x0, x21
     6e8:	bl	0 <_Znwm>
     6ec:	mov	x20, x0
     6f0:	str	x20, [x19, #24]
     6f4:	str	x20, [x19, #32]
     6f8:	add	x21, x20, x21
     6fc:	str	x21, [x19, #40]
     700:	ldr	x1, [x23, #8]
     704:	ldr	x0, [x23, #16]
     708:	sub	x21, x0, x1
     70c:	cmp	x1, x0
     710:	b.eq	720 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xb0>  // b.none
     714:	mov	x2, x21
     718:	mov	x0, x20
     71c:	bl	0 <memmove>
     720:	add	x20, x20, x21
     724:	str	x20, [x19, #32]
     728:	ldr	x0, [x22]
     72c:	str	x0, [x19, #48]
     730:	ldr	x0, [x22, #8]
     734:	str	x0, [x19, #56]
     738:	cbz	x0, 75c <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xec>
     73c:	adrp	x1, 0 <__pthread_key_create>
     740:	ldr	x1, [x1]
     744:	cbz	x1, 7ac <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x13c>
     748:	add	x0, x0, #0x8
     74c:	ldaxr	w1, [x0]
     750:	add	w1, w1, #0x1
     754:	stlxr	w2, w1, [x0]
     758:	cbnz	w2, 74c <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xdc>
     75c:	ldr	x1, [x22, #16]
     760:	str	x1, [x19, #64]
     764:	ldr	w1, [x22, #24]
     768:	str	w1, [x19, #72]
     76c:	ldur	x1, [x22, #28]
     770:	stur	x1, [x19, #76]
     774:	str	x24, [x19, #88]
     778:	str	xzr, [x19, #96]
     77c:	str	wzr, [x19, #120]
     780:	str	xzr, [x19, #104]
     784:	str	wzr, [x19, #112]
     788:	str	wzr, [x19, #116]
     78c:	ldp	x19, x20, [sp, #16]
     790:	ldp	x21, x22, [sp, #32]
     794:	ldp	x23, x24, [sp, #48]
     798:	ldp	x29, x30, [sp], #64
     79c:	ret
     7a0:	bl	0 <_ZSt17__throw_bad_allocv>
     7a4:	mov	x20, #0x0                   	// #0
     7a8:	b	6f0 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x80>
     7ac:	ldr	w1, [x0, #8]
     7b0:	add	w1, w1, #0x1
     7b4:	str	w1, [x0, #8]
     7b8:	b	75c <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xec>

00000000000007bc <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>:
     7bc:	stp	x29, x30, [sp, #-112]!
     7c0:	mov	x29, sp
     7c4:	stp	x19, x20, [sp, #16]
     7c8:	stp	x21, x22, [sp, #32]
     7cc:	stp	x23, x24, [sp, #48]
     7d0:	mov	x21, x8
     7d4:	mov	w22, w0
     7d8:	mov	x23, x1
     7dc:	mov	x19, x2
     7e0:	mov	x24, x3
     7e4:	mov	x0, #0x80                  	// #128
     7e8:	bl	0 <_Znwm>
     7ec:	mov	x20, x0
     7f0:	ldr	x0, [x19]
     7f4:	str	x0, [sp, #72]
     7f8:	ldr	x2, [x19, #8]
     7fc:	str	x2, [sp, #80]
     800:	cbz	x2, 824 <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x68>
     804:	adrp	x0, 0 <__pthread_key_create>
     808:	ldr	x0, [x0]
     80c:	cbz	x0, 8b0 <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xf4>
     810:	add	x2, x2, #0x8
     814:	ldaxr	w0, [x2]
     818:	add	w0, w0, #0x1
     81c:	stlxr	w1, w0, [x2]
     820:	cbnz	w1, 814 <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x58>
     824:	ldr	x0, [x19, #16]
     828:	str	x0, [sp, #88]
     82c:	ldr	w0, [x19, #24]
     830:	str	w0, [sp, #96]
     834:	ldur	x0, [x19, #28]
     838:	stur	x0, [sp, #100]
     83c:	mov	x4, x24
     840:	add	x3, sp, #0x48
     844:	mov	x2, x23
     848:	mov	w1, w22
     84c:	mov	x0, x20
     850:	bl	670 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     854:	ldr	x19, [sp, #80]
     858:	cbz	x19, 884 <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xc8>
     85c:	adrp	x0, 0 <__pthread_key_create>
     860:	ldr	x0, [x0]
     864:	cbz	x0, 8c0 <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x104>
     868:	add	x1, x19, #0x8
     86c:	ldaxr	w0, [x1]
     870:	sub	w2, w0, #0x1
     874:	stlxr	w3, w2, [x1]
     878:	cbnz	w3, 86c <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xb0>
     87c:	cmp	w0, #0x1
     880:	b.eq	8d0 <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x114>  // b.none
     884:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     888:	add	x0, x0, #0x0
     88c:	add	x0, x0, #0x10
     890:	str	x0, [x20]
     894:	str	x20, [x21]
     898:	mov	x0, x21
     89c:	ldp	x19, x20, [sp, #16]
     8a0:	ldp	x21, x22, [sp, #32]
     8a4:	ldp	x23, x24, [sp, #48]
     8a8:	ldp	x29, x30, [sp], #112
     8ac:	ret
     8b0:	ldr	w0, [x2, #8]
     8b4:	add	w0, w0, #0x1
     8b8:	str	w0, [x2, #8]
     8bc:	b	824 <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x68>
     8c0:	ldr	w0, [x19, #8]
     8c4:	sub	w1, w0, #0x1
     8c8:	str	w1, [x19, #8]
     8cc:	b	87c <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xc0>
     8d0:	ldr	x0, [x19]
     8d4:	ldr	x1, [x0, #16]
     8d8:	mov	x0, x19
     8dc:	blr	x1
     8e0:	adrp	x0, 0 <__pthread_key_create>
     8e4:	ldr	x0, [x0]
     8e8:	cbz	x0, 91c <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x160>
     8ec:	add	x1, x19, #0xc
     8f0:	ldaxr	w0, [x1]
     8f4:	sub	w2, w0, #0x1
     8f8:	stlxr	w3, w2, [x1]
     8fc:	cbnz	w3, 8f0 <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x134>
     900:	cmp	w0, #0x1
     904:	b.ne	884 <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xc8>  // b.any
     908:	ldr	x0, [x19]
     90c:	ldr	x1, [x0, #24]
     910:	mov	x0, x19
     914:	blr	x1
     918:	b	884 <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xc8>
     91c:	ldr	w0, [x19, #12]
     920:	sub	w1, w0, #0x1
     924:	str	w1, [x19, #12]
     928:	b	900 <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x144>

000000000000092c <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>:
     92c:	stp	x29, x30, [sp, #-176]!
     930:	mov	x29, sp
     934:	stp	x19, x20, [sp, #16]
     938:	stp	x21, x22, [sp, #32]
     93c:	stp	x23, x24, [sp, #48]
     940:	stp	x25, x26, [sp, #64]
     944:	str	x27, [sp, #80]
     948:	mov	x19, x0
     94c:	mov	x20, x1
     950:	ldr	x1, [x0, #64]
     954:	ldr	x0, [x0, #72]
     958:	sub	x0, x0, x1
     95c:	asr	x0, x0, #4
     960:	cmp	x0, w2, uxtw
     964:	b.ls	ae4 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1b8>  // b.plast
     968:	mov	x21, x8
     96c:	mov	x22, x3
     970:	mov	w23, w2
     974:	str	xzr, [sp, #152]
     978:	str	xzr, [sp, #160]
     97c:	str	xzr, [sp, #168]
     980:	lsl	x0, x23, #4
     984:	add	x2, x1, x0
     988:	ldr	x26, [x1, x0]
     98c:	ldr	x1, [x2, #8]
     990:	lsl	x25, x1, #2
     994:	sbfx	x1, x1, #0, #62
     998:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
     99c:	cmp	x1, x0
     9a0:	b.hi	b04 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1d8>  // b.pmore
     9a4:	mov	x24, #0x0                   	// #0
     9a8:	cbz	x1, 9b8 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x8c>
     9ac:	mov	x0, x25
     9b0:	bl	0 <_Znwm>
     9b4:	mov	x24, x0
     9b8:	add	x27, x24, x25
     9bc:	cbz	x25, 9d0 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xa4>
     9c0:	mov	x2, x25
     9c4:	mov	x1, x26
     9c8:	mov	x0, x24
     9cc:	bl	0 <memcpy>
     9d0:	ldr	x0, [sp, #152]
     9d4:	str	x24, [sp, #152]
     9d8:	str	x27, [sp, #160]
     9dc:	str	x27, [sp, #168]
     9e0:	cbz	x0, 9e8 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xbc>
     9e4:	bl	0 <_ZdlPv>
     9e8:	ldr	x0, [x19, #56]
     9ec:	cmp	x23, x0
     9f0:	b.cs	b10 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1e4>  // b.hs, b.nlast
     9f4:	ldr	x0, [x19, #48]
     9f8:	ldr	w0, [x0, x23, lsl #2]
     9fc:	str	w0, [sp, #144]
     a00:	ldr	x23, [x19]
     a04:	mov	x0, #0x80                  	// #128
     a08:	bl	0 <_Znwm>
     a0c:	mov	x19, x0
     a10:	ldr	w1, [x23, #32]
     a14:	ldr	x0, [x20]
     a18:	str	x0, [sp, #104]
     a1c:	ldr	x0, [x20, #8]
     a20:	str	x0, [sp, #112]
     a24:	cbz	x0, a48 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x11c>
     a28:	adrp	x2, 0 <__pthread_key_create>
     a2c:	ldr	x2, [x2]
     a30:	cbz	x2, b30 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x204>
     a34:	add	x0, x0, #0x8
     a38:	ldaxr	w2, [x0]
     a3c:	add	w2, w2, #0x1
     a40:	stlxr	w3, w2, [x0]
     a44:	cbnz	w3, a38 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x10c>
     a48:	ldr	x0, [x20, #16]
     a4c:	str	x0, [sp, #120]
     a50:	ldr	w0, [x20, #24]
     a54:	str	w0, [sp, #128]
     a58:	ldur	x0, [x20, #28]
     a5c:	stur	x0, [sp, #132]
     a60:	mov	x4, x22
     a64:	add	x3, sp, #0x68
     a68:	add	x2, sp, #0x90
     a6c:	mov	x0, x19
     a70:	bl	670 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     a74:	ldr	x20, [sp, #112]
     a78:	cbz	x20, aa4 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x178>
     a7c:	adrp	x0, 0 <__pthread_key_create>
     a80:	ldr	x0, [x0]
     a84:	cbz	x0, b40 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x214>
     a88:	add	x1, x20, #0x8
     a8c:	ldaxr	w0, [x1]
     a90:	sub	w2, w0, #0x1
     a94:	stlxr	w3, w2, [x1]
     a98:	cbnz	w3, a8c <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x160>
     a9c:	cmp	w0, #0x1
     aa0:	b.eq	b50 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x224>  // b.none
     aa4:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     aa8:	add	x0, x0, #0x0
     aac:	add	x0, x0, #0x10
     ab0:	str	x0, [x19]
     ab4:	str	x19, [x21]
     ab8:	ldr	x0, [sp, #152]
     abc:	cbz	x0, ac4 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x198>
     ac0:	bl	0 <_ZdlPv>
     ac4:	mov	x0, x21
     ac8:	ldp	x19, x20, [sp, #16]
     acc:	ldp	x21, x22, [sp, #32]
     ad0:	ldp	x23, x24, [sp, #48]
     ad4:	ldp	x25, x26, [sp, #64]
     ad8:	ldr	x27, [sp, #80]
     adc:	ldp	x29, x30, [sp], #176
     ae0:	ret
     ae4:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     ae8:	add	x3, x3, #0x0
     aec:	mov	w2, #0x3e                  	// #62
     af0:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     af4:	add	x1, x1, #0x0
     af8:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     afc:	add	x0, x0, #0x0
     b00:	bl	0 <__assert_fail>
     b04:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     b08:	add	x0, x0, #0x0
     b0c:	bl	0 <_ZSt20__throw_length_errorPKc>
     b10:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     b14:	add	x3, x3, #0x0
     b18:	mov	w2, #0xfa                  	// #250
     b1c:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     b20:	add	x1, x1, #0x0
     b24:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     b28:	add	x0, x0, #0x0
     b2c:	bl	0 <__assert_fail>
     b30:	ldr	w2, [x0, #8]
     b34:	add	w2, w2, #0x1
     b38:	str	w2, [x0, #8]
     b3c:	b	a48 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x11c>
     b40:	ldr	w0, [x20, #8]
     b44:	sub	w1, w0, #0x1
     b48:	str	w1, [x20, #8]
     b4c:	b	a9c <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x170>
     b50:	ldr	x0, [x20]
     b54:	ldr	x1, [x0, #16]
     b58:	mov	x0, x20
     b5c:	blr	x1
     b60:	adrp	x0, 0 <__pthread_key_create>
     b64:	ldr	x0, [x0]
     b68:	cbz	x0, b9c <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x270>
     b6c:	add	x1, x20, #0xc
     b70:	ldaxr	w0, [x1]
     b74:	sub	w2, w0, #0x1
     b78:	stlxr	w3, w2, [x1]
     b7c:	cbnz	w3, b70 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x244>
     b80:	cmp	w0, #0x1
     b84:	b.ne	aa4 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x178>  // b.any
     b88:	ldr	x0, [x20]
     b8c:	ldr	x1, [x0, #24]
     b90:	mov	x0, x20
     b94:	blr	x1
     b98:	b	aa4 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x178>
     b9c:	ldr	w0, [x20, #12]
     ba0:	sub	w1, w0, #0x1
     ba4:	str	w1, [x20, #12]
     ba8:	b	b80 <_ZN4llvm3msf17MappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x254>

0000000000000bac <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>:
     bac:	stp	x29, x30, [sp, #-160]!
     bb0:	mov	x29, sp
     bb4:	stp	x19, x20, [sp, #16]
     bb8:	stp	x21, x22, [sp, #32]
     bbc:	stp	x23, x24, [sp, #48]
     bc0:	stp	x25, x26, [sp, #64]
     bc4:	mov	x20, x0
     bc8:	mov	x19, x1
     bcc:	str	xzr, [sp, #136]
     bd0:	str	xzr, [sp, #144]
     bd4:	str	xzr, [sp, #152]
     bd8:	ldr	x25, [x0, #32]
     bdc:	ldr	x0, [x0, #40]
     be0:	lsl	x24, x0, #2
     be4:	sbfx	x1, x0, #0, #62
     be8:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
     bec:	cmp	x1, x0
     bf0:	b.hi	d08 <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x15c>  // b.pmore
     bf4:	mov	x22, x8
     bf8:	mov	x23, x2
     bfc:	mov	x21, #0x0                   	// #0
     c00:	cbz	x1, c10 <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x64>
     c04:	mov	x0, x24
     c08:	bl	0 <_Znwm>
     c0c:	mov	x21, x0
     c10:	add	x26, x21, x24
     c14:	cbz	x24, c28 <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x7c>
     c18:	mov	x2, x24
     c1c:	mov	x1, x25
     c20:	mov	x0, x21
     c24:	bl	0 <memcpy>
     c28:	ldr	x0, [sp, #136]
     c2c:	str	x21, [sp, #136]
     c30:	str	x26, [sp, #144]
     c34:	str	x26, [sp, #152]
     c38:	cbz	x0, c40 <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x94>
     c3c:	bl	0 <_ZdlPv>
     c40:	ldr	x0, [x20]
     c44:	ldr	w1, [x0, #44]
     c48:	str	w1, [sp, #128]
     c4c:	ldr	w0, [x0, #32]
     c50:	ldr	x1, [x19]
     c54:	str	x1, [sp, #88]
     c58:	ldr	x1, [x19, #8]
     c5c:	str	x1, [sp, #96]
     c60:	cbz	x1, c84 <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xd8>
     c64:	adrp	x2, 0 <__pthread_key_create>
     c68:	ldr	x2, [x2]
     c6c:	cbz	x2, d14 <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x168>
     c70:	add	x1, x1, #0x8
     c74:	ldaxr	w2, [x1]
     c78:	add	w2, w2, #0x1
     c7c:	stlxr	w3, w2, [x1]
     c80:	cbnz	w3, c74 <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xc8>
     c84:	ldr	x1, [x19, #16]
     c88:	str	x1, [sp, #104]
     c8c:	ldr	w1, [x19, #24]
     c90:	str	w1, [sp, #112]
     c94:	ldur	x1, [x19, #28]
     c98:	stur	x1, [sp, #116]
     c9c:	mov	x8, x22
     ca0:	mov	x3, x23
     ca4:	add	x2, sp, #0x58
     ca8:	add	x1, sp, #0x80
     cac:	bl	7bc <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     cb0:	ldr	x19, [sp, #96]
     cb4:	cbz	x19, ce0 <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x134>
     cb8:	adrp	x0, 0 <__pthread_key_create>
     cbc:	ldr	x0, [x0]
     cc0:	cbz	x0, d24 <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x178>
     cc4:	add	x1, x19, #0x8
     cc8:	ldaxr	w0, [x1]
     ccc:	sub	w2, w0, #0x1
     cd0:	stlxr	w3, w2, [x1]
     cd4:	cbnz	w3, cc8 <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x11c>
     cd8:	cmp	w0, #0x1
     cdc:	b.eq	d34 <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x188>  // b.none
     ce0:	ldr	x0, [sp, #136]
     ce4:	cbz	x0, cec <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x140>
     ce8:	bl	0 <_ZdlPv>
     cec:	mov	x0, x22
     cf0:	ldp	x19, x20, [sp, #16]
     cf4:	ldp	x21, x22, [sp, #32]
     cf8:	ldp	x23, x24, [sp, #48]
     cfc:	ldp	x25, x26, [sp, #64]
     d00:	ldp	x29, x30, [sp], #160
     d04:	ret
     d08:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
     d0c:	add	x0, x0, #0x0
     d10:	bl	0 <_ZSt20__throw_length_errorPKc>
     d14:	ldr	w2, [x1, #8]
     d18:	add	w2, w2, #0x1
     d1c:	str	w2, [x1, #8]
     d20:	b	c84 <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xd8>
     d24:	ldr	w0, [x19, #8]
     d28:	sub	w1, w0, #0x1
     d2c:	str	w1, [x19, #8]
     d30:	b	cd8 <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x12c>
     d34:	ldr	x0, [x19]
     d38:	ldr	x1, [x0, #16]
     d3c:	mov	x0, x19
     d40:	blr	x1
     d44:	adrp	x0, 0 <__pthread_key_create>
     d48:	ldr	x0, [x0]
     d4c:	cbz	x0, d80 <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1d4>
     d50:	add	x1, x19, #0xc
     d54:	ldaxr	w0, [x1]
     d58:	sub	w2, w0, #0x1
     d5c:	stlxr	w3, w2, [x1]
     d60:	cbnz	w3, d54 <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1a8>
     d64:	cmp	w0, #0x1
     d68:	b.ne	ce0 <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x134>  // b.any
     d6c:	ldr	x0, [x19]
     d70:	ldr	x1, [x0, #24]
     d74:	mov	x0, x19
     d78:	blr	x1
     d7c:	b	ce0 <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x134>
     d80:	ldr	w0, [x19, #12]
     d84:	sub	w1, w0, #0x1
     d88:	str	w1, [x19, #12]
     d8c:	b	d64 <_ZN4llvm3msf17MappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1b8>

0000000000000d90 <_ZN4llvm3msf17MappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>:
     d90:	stp	x29, x30, [sp, #-128]!
     d94:	mov	x29, sp
     d98:	stp	x19, x20, [sp, #16]
     d9c:	stp	x21, x22, [sp, #32]
     da0:	mov	x20, x8
     da4:	mov	x22, x0
     da8:	mov	x19, x1
     dac:	mov	x21, x2
     db0:	add	x8, sp, #0x60
     db4:	mov	w2, #0x0                   	// #0
     db8:	mov	w1, #0x0                   	// #0
     dbc:	bl	0 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb>
     dc0:	ldr	x0, [x22]
     dc4:	ldr	w0, [x0, #32]
     dc8:	ldr	x1, [x19]
     dcc:	str	x1, [sp, #56]
     dd0:	ldr	x1, [x19, #8]
     dd4:	str	x1, [sp, #64]
     dd8:	cbz	x1, dfc <_ZN4llvm3msf17MappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x6c>
     ddc:	adrp	x2, 0 <__pthread_key_create>
     de0:	ldr	x2, [x2]
     de4:	cbz	x2, e78 <_ZN4llvm3msf17MappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xe8>
     de8:	add	x1, x1, #0x8
     dec:	ldaxr	w2, [x1]
     df0:	add	w2, w2, #0x1
     df4:	stlxr	w3, w2, [x1]
     df8:	cbnz	w3, dec <_ZN4llvm3msf17MappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x5c>
     dfc:	ldr	x1, [x19, #16]
     e00:	str	x1, [sp, #72]
     e04:	ldr	w1, [x19, #24]
     e08:	str	w1, [sp, #80]
     e0c:	ldur	x1, [x19, #28]
     e10:	stur	x1, [sp, #84]
     e14:	mov	x8, x20
     e18:	mov	x3, x21
     e1c:	add	x2, sp, #0x38
     e20:	add	x1, sp, #0x60
     e24:	bl	7bc <_ZN4llvm3msf17MappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     e28:	ldr	x19, [sp, #64]
     e2c:	cbz	x19, e58 <_ZN4llvm3msf17MappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xc8>
     e30:	adrp	x0, 0 <__pthread_key_create>
     e34:	ldr	x0, [x0]
     e38:	cbz	x0, e88 <_ZN4llvm3msf17MappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xf8>
     e3c:	add	x1, x19, #0x8
     e40:	ldaxr	w0, [x1]
     e44:	sub	w2, w0, #0x1
     e48:	stlxr	w3, w2, [x1]
     e4c:	cbnz	w3, e40 <_ZN4llvm3msf17MappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xb0>
     e50:	cmp	w0, #0x1
     e54:	b.eq	e98 <_ZN4llvm3msf17MappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x108>  // b.none
     e58:	ldr	x0, [sp, #104]
     e5c:	cbz	x0, e64 <_ZN4llvm3msf17MappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xd4>
     e60:	bl	0 <_ZdlPv>
     e64:	mov	x0, x20
     e68:	ldp	x19, x20, [sp, #16]
     e6c:	ldp	x21, x22, [sp, #32]
     e70:	ldp	x29, x30, [sp], #128
     e74:	ret
     e78:	ldr	w2, [x1, #8]
     e7c:	add	w2, w2, #0x1
     e80:	str	w2, [x1, #8]
     e84:	b	dfc <_ZN4llvm3msf17MappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x6c>
     e88:	ldr	w0, [x19, #8]
     e8c:	sub	w1, w0, #0x1
     e90:	str	w1, [x19, #8]
     e94:	b	e50 <_ZN4llvm3msf17MappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xc0>
     e98:	ldr	x0, [x19]
     e9c:	ldr	x1, [x0, #16]
     ea0:	mov	x0, x19
     ea4:	blr	x1
     ea8:	adrp	x0, 0 <__pthread_key_create>
     eac:	ldr	x0, [x0]
     eb0:	cbz	x0, ee4 <_ZN4llvm3msf17MappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x154>
     eb4:	add	x1, x19, #0xc
     eb8:	ldaxr	w0, [x1]
     ebc:	sub	w2, w0, #0x1
     ec0:	stlxr	w3, w2, [x1]
     ec4:	cbnz	w3, eb8 <_ZN4llvm3msf17MappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x128>
     ec8:	cmp	w0, #0x1
     ecc:	b.ne	e58 <_ZN4llvm3msf17MappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xc8>  // b.any
     ed0:	ldr	x0, [x19]
     ed4:	ldr	x1, [x0, #24]
     ed8:	mov	x0, x19
     edc:	blr	x1
     ee0:	b	e58 <_ZN4llvm3msf17MappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xc8>
     ee4:	ldr	w0, [x19, #12]
     ee8:	sub	w1, w0, #0x1
     eec:	str	w1, [x19, #12]
     ef0:	b	ec8 <_ZN4llvm3msf17MappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x138>

0000000000000ef4 <_ZN4llvm3msf17MappedBlockStream15invalidateCacheEv>:
     ef4:	stp	x29, x30, [sp, #-64]!
     ef8:	mov	x29, sp
     efc:	stp	x19, x20, [sp, #16]
     f00:	stp	x21, x22, [sp, #32]
     f04:	mov	x20, x0
     f08:	ldr	w22, [x0, #120]
     f0c:	ldr	w21, [x0, #112]
     f10:	cbz	w22, 10f4 <_ZN4llvm3msf17MappedBlockStream15invalidateCacheEv+0x200>
     f14:	str	x23, [sp, #48]
     f18:	ldr	x19, [x0, #104]
     f1c:	ubfiz	x23, x22, #5, #32
     f20:	add	x23, x19, x23
     f24:	b	f38 <_ZN4llvm3msf17MappedBlockStream15invalidateCacheEv+0x44>
     f28:	bl	0 <_ZdlPv>
     f2c:	add	x19, x19, #0x20
     f30:	cmp	x23, x19
     f34:	b.eq	f50 <_ZN4llvm3msf17MappedBlockStream15invalidateCacheEv+0x5c>  // b.none
     f38:	ldr	w0, [x19]
     f3c:	cmn	w0, #0x3
     f40:	b.hi	f2c <_ZN4llvm3msf17MappedBlockStream15invalidateCacheEv+0x38>  // b.pmore
     f44:	ldr	x0, [x19, #8]
     f48:	cbnz	x0, f28 <_ZN4llvm3msf17MappedBlockStream15invalidateCacheEv+0x34>
     f4c:	b	f2c <_ZN4llvm3msf17MappedBlockStream15invalidateCacheEv+0x38>
     f50:	cbz	w21, 104c <_ZN4llvm3msf17MappedBlockStream15invalidateCacheEv+0x158>
     f54:	ldr	x23, [sp, #48]
     f58:	subs	w21, w21, #0x1
     f5c:	b.eq	10e0 <_ZN4llvm3msf17MappedBlockStream15invalidateCacheEv+0x1ec>  // b.none
     f60:	clz	w21, w21
     f64:	mov	w19, #0x21                  	// #33
     f68:	sub	w21, w19, w21
     f6c:	mov	w19, #0x1                   	// #1
     f70:	lsl	w19, w19, w21
     f74:	cmp	w19, #0x40
     f78:	mov	w0, #0x40                  	// #64
     f7c:	csel	w19, w19, w0, ge  // ge = tcont
     f80:	ldr	w0, [x20, #120]
     f84:	cmp	w19, w0
     f88:	b.eq	1014 <_ZN4llvm3msf17MappedBlockStream15invalidateCacheEv+0x120>  // b.none
     f8c:	ubfiz	x1, x22, #5, #32
     f90:	ldr	x0, [x20, #104]
     f94:	bl	0 <_ZdlPvm>
     f98:	lsl	w0, w19, #2
     f9c:	mov	w19, #0xaaab                	// #43691
     fa0:	movk	w19, #0xaaaa, lsl #16
     fa4:	umull	x0, w0, w19
     fa8:	lsr	x0, x0, #33
     fac:	add	w0, w0, #0x1
     fb0:	orr	x0, x0, x0, lsr #1
     fb4:	orr	x0, x0, x0, lsr #2
     fb8:	orr	x0, x0, x0, lsr #4
     fbc:	orr	x0, x0, x0, lsr #8
     fc0:	orr	x0, x0, x0, lsr #16
     fc4:	add	x0, x0, #0x1
     fc8:	str	w0, [x20, #120]
     fcc:	lsl	x0, x0, #5
     fd0:	bl	0 <_Znwm>
     fd4:	str	x0, [x20, #104]
     fd8:	str	wzr, [x20, #112]
     fdc:	str	wzr, [x20, #116]
     fe0:	ldr	w1, [x20, #120]
     fe4:	sub	w2, w1, #0x1
     fe8:	tst	w2, w1
     fec:	b.ne	108c <_ZN4llvm3msf17MappedBlockStream15invalidateCacheEv+0x198>  // b.any
     ff0:	ubfiz	x1, x1, #5, #32
     ff4:	add	x1, x0, x1
     ff8:	cmp	x0, x1
     ffc:	b.eq	1074 <_ZN4llvm3msf17MappedBlockStream15invalidateCacheEv+0x180>  // b.none
    1000:	mov	w2, #0xffffffff            	// #-1
    1004:	str	w2, [x0], #32
    1008:	cmp	x1, x0
    100c:	b.ne	1004 <_ZN4llvm3msf17MappedBlockStream15invalidateCacheEv+0x110>  // b.any
    1010:	b	1074 <_ZN4llvm3msf17MappedBlockStream15invalidateCacheEv+0x180>
    1014:	str	wzr, [x20, #112]
    1018:	str	wzr, [x20, #116]
    101c:	sub	w0, w19, #0x1
    1020:	tst	w0, w19
    1024:	b.eq	10b8 <_ZN4llvm3msf17MappedBlockStream15invalidateCacheEv+0x1c4>  // b.none
    1028:	str	x23, [sp, #48]
    102c:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1030:	add	x3, x3, #0x0
    1034:	mov	w2, #0x15b                 	// #347
    1038:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    103c:	add	x1, x1, #0x0
    1040:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1044:	add	x0, x0, #0x0
    1048:	bl	0 <__assert_fail>
    104c:	ldr	w0, [x20, #120]
    1050:	cbz	w0, 1084 <_ZN4llvm3msf17MappedBlockStream15invalidateCacheEv+0x190>
    1054:	ubfiz	x1, x22, #5, #32
    1058:	ldr	x0, [x20, #104]
    105c:	bl	0 <_ZdlPvm>
    1060:	str	wzr, [x20, #120]
    1064:	str	xzr, [x20, #104]
    1068:	str	wzr, [x20, #112]
    106c:	str	wzr, [x20, #116]
    1070:	ldr	x23, [sp, #48]
    1074:	ldp	x19, x20, [sp, #16]
    1078:	ldp	x21, x22, [sp, #32]
    107c:	ldp	x29, x30, [sp], #64
    1080:	ret
    1084:	ldr	x23, [sp, #48]
    1088:	b	10f8 <_ZN4llvm3msf17MappedBlockStream15invalidateCacheEv+0x204>
    108c:	str	x23, [sp, #48]
    1090:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1094:	add	x3, x3, #0x0
    1098:	mov	w2, #0x15b                 	// #347
    109c:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    10a0:	add	x1, x1, #0x0
    10a4:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    10a8:	add	x0, x0, #0x0
    10ac:	bl	0 <__assert_fail>
    10b0:	str	wzr, [x20, #112]
    10b4:	str	wzr, [x20, #116]
    10b8:	ldr	x0, [x20, #104]
    10bc:	ubfiz	x19, x19, #5, #32
    10c0:	add	x19, x0, x19
    10c4:	cmp	x0, x19
    10c8:	b.eq	1074 <_ZN4llvm3msf17MappedBlockStream15invalidateCacheEv+0x180>  // b.none
    10cc:	mov	w1, #0xffffffff            	// #-1
    10d0:	str	w1, [x0], #32
    10d4:	cmp	x19, x0
    10d8:	b.ne	10d0 <_ZN4llvm3msf17MappedBlockStream15invalidateCacheEv+0x1dc>  // b.any
    10dc:	b	1074 <_ZN4llvm3msf17MappedBlockStream15invalidateCacheEv+0x180>
    10e0:	ldr	w19, [x20, #120]
    10e4:	cmp	w19, #0x40
    10e8:	b.eq	10b0 <_ZN4llvm3msf17MappedBlockStream15invalidateCacheEv+0x1bc>  // b.none
    10ec:	mov	w19, #0x40                  	// #64
    10f0:	b	f8c <_ZN4llvm3msf17MappedBlockStream15invalidateCacheEv+0x98>
    10f4:	cbnz	w21, f58 <_ZN4llvm3msf17MappedBlockStream15invalidateCacheEv+0x64>
    10f8:	str	wzr, [x20, #112]
    10fc:	str	wzr, [x20, #116]
    1100:	b	1074 <_ZN4llvm3msf17MappedBlockStream15invalidateCacheEv+0x180>

0000000000001104 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE>:
    1104:	stp	x29, x30, [sp, #-128]!
    1108:	mov	x29, sp
    110c:	stp	x19, x20, [sp, #16]
    1110:	stp	x21, x22, [sp, #32]
    1114:	stp	x23, x24, [sp, #48]
    1118:	stp	x25, x26, [sp, #64]
    111c:	stp	x27, x28, [sp, #80]
    1120:	str	x0, [sp, #112]
    1124:	mov	w21, w1
    1128:	mov	x26, x2
    112c:	ldr	w0, [x0, #112]
    1130:	cbz	w0, 117c <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x78>
    1134:	ldr	x0, [sp, #112]
    1138:	add	x27, x0, #0x60
    113c:	ldr	x19, [x27, #8]
    1140:	ldr	w23, [x27, #24]
    1144:	add	x23, x19, x23, lsl #5
    1148:	ldr	x0, [x0, #96]
    114c:	str	x0, [sp, #96]
    1150:	cmp	x19, x23
    1154:	b.hi	1250 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x14c>  // b.pmore
    1158:	b.eq	1270 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x16c>  // b.none
    115c:	ldr	w0, [x19]
    1160:	cmn	w0, #0x3
    1164:	b.ls	119c <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x98>  // b.plast
    1168:	add	x19, x19, #0x20
    116c:	cmp	x23, x19
    1170:	b.ne	115c <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x58>  // b.any
    1174:	mov	x23, x19
    1178:	b	119c <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x98>
    117c:	ldr	x1, [sp, #112]
    1180:	add	x27, x1, #0x60
    1184:	ldr	w19, [x1, #120]
    1188:	ldr	x0, [x27, #8]
    118c:	add	x19, x0, x19, lsl #5
    1190:	ldr	x0, [x1, #96]
    1194:	str	x0, [sp, #96]
    1198:	mov	x23, x19
    119c:	ldr	x2, [sp, #112]
    11a0:	add	x0, x2, #0x60
    11a4:	ldr	w28, [x2, #120]
    11a8:	ldr	x1, [x2, #104]
    11ac:	add	x28, x1, x28, lsl #5
    11b0:	str	x0, [sp, #104]
    11b4:	ldr	x0, [x2, #96]
    11b8:	str	x0, [sp, #120]
    11bc:	mov	w25, w21
    11c0:	add	x22, x25, x3
    11c4:	cbz	x19, 11d8 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0xd4>
    11c8:	ldr	x0, [x27]
    11cc:	ldr	x1, [sp, #96]
    11d0:	cmp	x0, x1
    11d4:	b.ne	1280 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x17c>  // b.any
    11d8:	cbz	x28, 11f0 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0xec>
    11dc:	ldr	x0, [sp, #112]
    11e0:	ldr	x0, [x0, #96]
    11e4:	ldr	x1, [sp, #120]
    11e8:	cmp	x1, x0
    11ec:	b.ne	12a0 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x19c>  // b.any
    11f0:	ldr	x0, [sp, #104]
    11f4:	cmp	x0, x27
    11f8:	b.ne	12c0 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x1bc>  // b.any
    11fc:	cmp	x28, x19
    1200:	b.eq	13ec <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x2e8>  // b.none
    1204:	ldr	x0, [x27]
    1208:	ldr	x1, [sp, #96]
    120c:	cmp	x0, x1
    1210:	b.ne	12e0 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x1dc>  // b.any
    1214:	ldr	w0, [x19]
    1218:	cmp	x22, x0
    121c:	b.cs	1300 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x1fc>  // b.hs, b.nlast
    1220:	add	x19, x19, #0x20
    1224:	cmp	x19, x23
    1228:	b.hi	13cc <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x2c8>  // b.pmore
    122c:	b.eq	1278 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x174>  // b.none
    1230:	ldr	w0, [x19]
    1234:	cmn	w0, #0x3
    1238:	b.ls	11c4 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0xc0>  // b.plast
    123c:	add	x19, x19, #0x20
    1240:	cmp	x19, x23
    1244:	b.ne	1230 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x12c>  // b.any
    1248:	mov	x19, x23
    124c:	b	11c4 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0xc0>
    1250:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1254:	add	x3, x3, #0x0
    1258:	mov	w2, #0x4e0                 	// #1248
    125c:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1260:	add	x1, x1, #0x0
    1264:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1268:	add	x0, x0, #0x0
    126c:	bl	0 <__assert_fail>
    1270:	mov	x19, x23
    1274:	b	119c <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x98>
    1278:	mov	x19, x23
    127c:	b	11c4 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0xc0>
    1280:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1284:	add	x3, x3, #0x0
    1288:	mov	w2, #0x4c7                 	// #1223
    128c:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1290:	add	x1, x1, #0x0
    1294:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1298:	add	x0, x0, #0x0
    129c:	bl	0 <__assert_fail>
    12a0:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    12a4:	add	x3, x3, #0x0
    12a8:	mov	w2, #0x4c8                 	// #1224
    12ac:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    12b0:	add	x1, x1, #0x0
    12b4:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    12b8:	add	x0, x0, #0x0
    12bc:	bl	0 <__assert_fail>
    12c0:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    12c4:	add	x3, x3, #0x0
    12c8:	mov	w2, #0x4c9                 	// #1225
    12cc:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    12d0:	add	x1, x1, #0x0
    12d4:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    12d8:	add	x0, x0, #0x0
    12dc:	bl	0 <__assert_fail>
    12e0:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    12e4:	add	x3, x3, #0x0
    12e8:	mov	w2, #0x4b3                 	// #1203
    12ec:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    12f0:	add	x1, x1, #0x0
    12f4:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    12f8:	add	x0, x0, #0x0
    12fc:	bl	0 <__assert_fail>
    1300:	ldr	x20, [x19, #8]
    1304:	ldr	x24, [x19, #16]
    1308:	cmp	x20, x24
    130c:	b.ne	1340 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x23c>  // b.any
    1310:	b	1220 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x11c>
    1314:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1318:	add	x3, x3, #0x0
    131c:	mov	w2, #0x12a                 	// #298
    1320:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1324:	add	x1, x1, #0x0
    1328:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    132c:	add	x0, x0, #0x0
    1330:	bl	0 <__assert_fail>
    1334:	add	x20, x20, #0x10
    1338:	cmp	x24, x20
    133c:	b.eq	139c <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x298>  // b.none
    1340:	ldr	w0, [x19]
    1344:	ldr	x1, [x20, #8]
    1348:	add	x1, x1, w0, uxtw
    134c:	cmp	x25, x1
    1350:	b.hi	1334 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x230>  // b.pmore
    1354:	cmp	w0, w21
    1358:	csel	w3, w0, w21, cs  // cs = hs, nlast
    135c:	cmp	w22, w1
    1360:	csel	w2, w22, w1, cc  // cc = lo, ul, last
    1364:	cmp	w2, w3
    1368:	b.cc	1314 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x210>  // b.lo, b.ul, b.last
    136c:	cmp	w0, w3
    1370:	csel	w1, w0, w3, cs  // cs = hs, nlast
    1374:	sub	w0, w1, w0
    1378:	ldr	x4, [x20]
    137c:	cmp	w21, w3
    1380:	csel	w1, w21, w3, cs  // cs = hs, nlast
    1384:	sub	w1, w1, w21
    1388:	sub	w2, w2, w3
    138c:	add	x1, x1, x26
    1390:	add	x0, x4, x0
    1394:	bl	0 <memcpy>
    1398:	b	1334 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x230>
    139c:	ldr	x0, [x27]
    13a0:	ldr	x1, [sp, #96]
    13a4:	cmp	x0, x1
    13a8:	b.eq	1220 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE+0x11c>  // b.none
    13ac:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    13b0:	add	x3, x3, #0x0
    13b4:	mov	w2, #0x4cf                 	// #1231
    13b8:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    13bc:	add	x1, x1, #0x0
    13c0:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    13c4:	add	x0, x0, #0x0
    13c8:	bl	0 <__assert_fail>
    13cc:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    13d0:	add	x3, x3, #0x0
    13d4:	mov	w2, #0x4e0                 	// #1248
    13d8:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    13dc:	add	x1, x1, #0x0
    13e0:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    13e4:	add	x0, x0, #0x0
    13e8:	bl	0 <__assert_fail>
    13ec:	ldp	x19, x20, [sp, #16]
    13f0:	ldp	x21, x22, [sp, #32]
    13f4:	ldp	x23, x24, [sp, #48]
    13f8:	ldp	x25, x26, [sp, #64]
    13fc:	ldp	x27, x28, [sp, #80]
    1400:	ldp	x29, x30, [sp], #128
    1404:	ret

0000000000001408 <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>:
    1408:	stp	x29, x30, [sp, #-128]!
    140c:	mov	x29, sp
    1410:	stp	x19, x20, [sp, #16]
    1414:	stp	x21, x22, [sp, #32]
    1418:	stp	x23, x24, [sp, #48]
    141c:	str	x25, [sp, #64]
    1420:	mov	x19, x0
    1424:	mov	w22, w1
    1428:	mov	x23, x2
    142c:	mov	x20, x3
    1430:	mov	x24, x4
    1434:	mov	x21, x0
    1438:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    143c:	ldr	x0, [x0]
    1440:	add	x0, x0, #0x10
    1444:	str	x0, [x21], #8
    1448:	add	x25, sp, #0x58
    144c:	mov	x8, x25
    1450:	mov	x0, x3
    1454:	bl	0 <_ZNK4llvm23WritableBinaryStreamRefcvNS_15BinaryStreamRefEEv>
    1458:	mov	x4, x24
    145c:	mov	x3, x25
    1460:	mov	x2, x23
    1464:	mov	w1, w22
    1468:	mov	x0, x21
    146c:	bl	670 <_ZN4llvm3msf17MappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_15BinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1470:	ldr	x21, [sp, #96]
    1474:	cbz	x21, 14a0 <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x98>
    1478:	adrp	x0, 0 <__pthread_key_create>
    147c:	ldr	x0, [x0]
    1480:	cbz	x0, 1504 <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xfc>
    1484:	add	x1, x21, #0x8
    1488:	ldaxr	w0, [x1]
    148c:	sub	w2, w0, #0x1
    1490:	stlxr	w3, w2, [x1]
    1494:	cbnz	w3, 1488 <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x80>
    1498:	cmp	w0, #0x1
    149c:	b.eq	1514 <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x10c>  // b.none
    14a0:	ldr	x0, [x20]
    14a4:	str	x0, [x19, #136]
    14a8:	ldr	x0, [x20, #8]
    14ac:	str	x0, [x19, #144]
    14b0:	cbz	x0, 14d4 <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xcc>
    14b4:	adrp	x1, 0 <__pthread_key_create>
    14b8:	ldr	x1, [x1]
    14bc:	cbz	x1, 1570 <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x168>
    14c0:	add	x0, x0, #0x8
    14c4:	ldaxr	w1, [x0]
    14c8:	add	w1, w1, #0x1
    14cc:	stlxr	w2, w1, [x0]
    14d0:	cbnz	w2, 14c4 <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xbc>
    14d4:	ldr	x0, [x20, #16]
    14d8:	str	x0, [x19, #152]
    14dc:	ldr	w0, [x20, #24]
    14e0:	str	w0, [x19, #160]
    14e4:	ldur	x0, [x20, #28]
    14e8:	stur	x0, [x19, #164]
    14ec:	ldp	x19, x20, [sp, #16]
    14f0:	ldp	x21, x22, [sp, #32]
    14f4:	ldp	x23, x24, [sp, #48]
    14f8:	ldr	x25, [sp, #64]
    14fc:	ldp	x29, x30, [sp], #128
    1500:	ret
    1504:	ldr	w0, [x21, #8]
    1508:	sub	w1, w0, #0x1
    150c:	str	w1, [x21, #8]
    1510:	b	1498 <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x90>
    1514:	ldr	x0, [x21]
    1518:	ldr	x1, [x0, #16]
    151c:	mov	x0, x21
    1520:	blr	x1
    1524:	adrp	x0, 0 <__pthread_key_create>
    1528:	ldr	x0, [x0]
    152c:	cbz	x0, 1560 <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x158>
    1530:	add	x1, x21, #0xc
    1534:	ldaxr	w0, [x1]
    1538:	sub	w2, w0, #0x1
    153c:	stlxr	w3, w2, [x1]
    1540:	cbnz	w3, 1534 <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x12c>
    1544:	cmp	w0, #0x1
    1548:	b.ne	14a0 <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x98>  // b.any
    154c:	ldr	x0, [x21]
    1550:	ldr	x1, [x0, #24]
    1554:	mov	x0, x21
    1558:	blr	x1
    155c:	b	14a0 <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x98>
    1560:	ldr	w0, [x21, #12]
    1564:	sub	w1, w0, #0x1
    1568:	str	w1, [x21, #12]
    156c:	b	1544 <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x13c>
    1570:	ldr	w1, [x0, #8]
    1574:	add	w1, w1, #0x1
    1578:	str	w1, [x0, #8]
    157c:	b	14d4 <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xcc>

0000000000001580 <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>:
    1580:	stp	x29, x30, [sp, #-112]!
    1584:	mov	x29, sp
    1588:	stp	x19, x20, [sp, #16]
    158c:	stp	x21, x22, [sp, #32]
    1590:	stp	x23, x24, [sp, #48]
    1594:	mov	x21, x8
    1598:	mov	w22, w0
    159c:	mov	x23, x1
    15a0:	mov	x19, x2
    15a4:	mov	x24, x3
    15a8:	mov	x0, #0xb0                  	// #176
    15ac:	bl	0 <_Znwm>
    15b0:	mov	x20, x0
    15b4:	ldr	x0, [x19]
    15b8:	str	x0, [sp, #72]
    15bc:	ldr	x2, [x19, #8]
    15c0:	str	x2, [sp, #80]
    15c4:	cbz	x2, 15e8 <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x68>
    15c8:	adrp	x0, 0 <__pthread_key_create>
    15cc:	ldr	x0, [x0]
    15d0:	cbz	x0, 1674 <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xf4>
    15d4:	add	x2, x2, #0x8
    15d8:	ldaxr	w0, [x2]
    15dc:	add	w0, w0, #0x1
    15e0:	stlxr	w1, w0, [x2]
    15e4:	cbnz	w1, 15d8 <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x58>
    15e8:	ldr	x0, [x19, #16]
    15ec:	str	x0, [sp, #88]
    15f0:	ldr	w0, [x19, #24]
    15f4:	str	w0, [sp, #96]
    15f8:	ldur	x0, [x19, #28]
    15fc:	stur	x0, [sp, #100]
    1600:	mov	x4, x24
    1604:	add	x3, sp, #0x48
    1608:	mov	x2, x23
    160c:	mov	w1, w22
    1610:	mov	x0, x20
    1614:	bl	1408 <_ZN4llvm3msf25WritableMappedBlockStreamC1EjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1618:	ldr	x19, [sp, #80]
    161c:	cbz	x19, 1648 <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xc8>
    1620:	adrp	x0, 0 <__pthread_key_create>
    1624:	ldr	x0, [x0]
    1628:	cbz	x0, 1684 <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x104>
    162c:	add	x1, x19, #0x8
    1630:	ldaxr	w0, [x1]
    1634:	sub	w2, w0, #0x1
    1638:	stlxr	w3, w2, [x1]
    163c:	cbnz	w3, 1630 <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xb0>
    1640:	cmp	w0, #0x1
    1644:	b.eq	1694 <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x114>  // b.none
    1648:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    164c:	add	x0, x0, #0x0
    1650:	add	x0, x0, #0x58
    1654:	str	x0, [x20]
    1658:	str	x20, [x21]
    165c:	mov	x0, x21
    1660:	ldp	x19, x20, [sp, #16]
    1664:	ldp	x21, x22, [sp, #32]
    1668:	ldp	x23, x24, [sp, #48]
    166c:	ldp	x29, x30, [sp], #112
    1670:	ret
    1674:	ldr	w0, [x2, #8]
    1678:	add	w0, w0, #0x1
    167c:	str	w0, [x2, #8]
    1680:	b	15e8 <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x68>
    1684:	ldr	w0, [x19, #8]
    1688:	sub	w1, w0, #0x1
    168c:	str	w1, [x19, #8]
    1690:	b	1640 <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xc0>
    1694:	ldr	x0, [x19]
    1698:	ldr	x1, [x0, #16]
    169c:	mov	x0, x19
    16a0:	blr	x1
    16a4:	adrp	x0, 0 <__pthread_key_create>
    16a8:	ldr	x0, [x0]
    16ac:	cbz	x0, 16e0 <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x160>
    16b0:	add	x1, x19, #0xc
    16b4:	ldaxr	w0, [x1]
    16b8:	sub	w2, w0, #0x1
    16bc:	stlxr	w3, w2, [x1]
    16c0:	cbnz	w3, 16b4 <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x134>
    16c4:	cmp	w0, #0x1
    16c8:	b.ne	1648 <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xc8>  // b.any
    16cc:	ldr	x0, [x19]
    16d0:	ldr	x1, [x0, #24]
    16d4:	mov	x0, x19
    16d8:	blr	x1
    16dc:	b	1648 <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xc8>
    16e0:	ldr	w0, [x19, #12]
    16e4:	sub	w1, w0, #0x1
    16e8:	str	w1, [x19, #12]
    16ec:	b	16c4 <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x144>

00000000000016f0 <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>:
    16f0:	stp	x29, x30, [sp, #-176]!
    16f4:	mov	x29, sp
    16f8:	stp	x19, x20, [sp, #16]
    16fc:	stp	x21, x22, [sp, #32]
    1700:	stp	x23, x24, [sp, #48]
    1704:	stp	x25, x26, [sp, #64]
    1708:	str	x27, [sp, #80]
    170c:	mov	x19, x0
    1710:	mov	x20, x1
    1714:	ldr	x1, [x0, #64]
    1718:	ldr	x0, [x0, #72]
    171c:	sub	x0, x0, x1
    1720:	asr	x0, x0, #4
    1724:	cmp	x0, w2, uxtw
    1728:	b.ls	1888 <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x198>  // b.plast
    172c:	mov	x21, x8
    1730:	mov	x22, x3
    1734:	mov	w23, w2
    1738:	str	xzr, [sp, #152]
    173c:	str	xzr, [sp, #160]
    1740:	str	xzr, [sp, #168]
    1744:	lsl	x0, x23, #4
    1748:	add	x2, x1, x0
    174c:	ldr	x26, [x1, x0]
    1750:	ldr	x1, [x2, #8]
    1754:	lsl	x25, x1, #2
    1758:	sbfx	x1, x1, #0, #62
    175c:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
    1760:	cmp	x1, x0
    1764:	b.hi	18a8 <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1b8>  // b.pmore
    1768:	mov	x24, #0x0                   	// #0
    176c:	cbz	x1, 177c <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x8c>
    1770:	mov	x0, x25
    1774:	bl	0 <_Znwm>
    1778:	mov	x24, x0
    177c:	add	x27, x24, x25
    1780:	cbz	x25, 1794 <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xa4>
    1784:	mov	x2, x25
    1788:	mov	x1, x26
    178c:	mov	x0, x24
    1790:	bl	0 <memcpy>
    1794:	ldr	x0, [sp, #152]
    1798:	str	x24, [sp, #152]
    179c:	str	x27, [sp, #160]
    17a0:	str	x27, [sp, #168]
    17a4:	cbz	x0, 17ac <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xbc>
    17a8:	bl	0 <_ZdlPv>
    17ac:	ldr	x0, [x19, #56]
    17b0:	cmp	x23, x0
    17b4:	b.cs	18b4 <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1c4>  // b.hs, b.nlast
    17b8:	ldr	x0, [x19, #48]
    17bc:	ldr	w0, [x0, x23, lsl #2]
    17c0:	str	w0, [sp, #144]
    17c4:	ldr	x0, [x19]
    17c8:	ldr	w0, [x0, #32]
    17cc:	ldr	x1, [x20]
    17d0:	str	x1, [sp, #104]
    17d4:	ldr	x1, [x20, #8]
    17d8:	str	x1, [sp, #112]
    17dc:	cbz	x1, 1800 <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x110>
    17e0:	adrp	x2, 0 <__pthread_key_create>
    17e4:	ldr	x2, [x2]
    17e8:	cbz	x2, 18d4 <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1e4>
    17ec:	add	x1, x1, #0x8
    17f0:	ldaxr	w2, [x1]
    17f4:	add	w2, w2, #0x1
    17f8:	stlxr	w3, w2, [x1]
    17fc:	cbnz	w3, 17f0 <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x100>
    1800:	ldr	x1, [x20, #16]
    1804:	str	x1, [sp, #120]
    1808:	ldr	w1, [x20, #24]
    180c:	str	w1, [sp, #128]
    1810:	ldur	x1, [x20, #28]
    1814:	stur	x1, [sp, #132]
    1818:	mov	x8, x21
    181c:	mov	x3, x22
    1820:	add	x2, sp, #0x68
    1824:	add	x1, sp, #0x90
    1828:	bl	1580 <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    182c:	ldr	x19, [sp, #112]
    1830:	cbz	x19, 185c <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x16c>
    1834:	adrp	x0, 0 <__pthread_key_create>
    1838:	ldr	x0, [x0]
    183c:	cbz	x0, 18e4 <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1f4>
    1840:	add	x1, x19, #0x8
    1844:	ldaxr	w0, [x1]
    1848:	sub	w2, w0, #0x1
    184c:	stlxr	w3, w2, [x1]
    1850:	cbnz	w3, 1844 <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x154>
    1854:	cmp	w0, #0x1
    1858:	b.eq	18f4 <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x204>  // b.none
    185c:	ldr	x0, [sp, #152]
    1860:	cbz	x0, 1868 <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x178>
    1864:	bl	0 <_ZdlPv>
    1868:	mov	x0, x21
    186c:	ldp	x19, x20, [sp, #16]
    1870:	ldp	x21, x22, [sp, #32]
    1874:	ldp	x23, x24, [sp, #48]
    1878:	ldp	x25, x26, [sp, #64]
    187c:	ldr	x27, [sp, #80]
    1880:	ldp	x29, x30, [sp], #176
    1884:	ret
    1888:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    188c:	add	x3, x3, #0x0
    1890:	mov	w2, #0x14a                 	// #330
    1894:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1898:	add	x1, x1, #0x0
    189c:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    18a0:	add	x0, x0, #0x0
    18a4:	bl	0 <__assert_fail>
    18a8:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    18ac:	add	x0, x0, #0x0
    18b0:	bl	0 <_ZSt20__throw_length_errorPKc>
    18b4:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    18b8:	add	x3, x3, #0x0
    18bc:	mov	w2, #0xfa                  	// #250
    18c0:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    18c4:	add	x1, x1, #0x0
    18c8:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    18cc:	add	x0, x0, #0x0
    18d0:	bl	0 <__assert_fail>
    18d4:	ldr	w2, [x1, #8]
    18d8:	add	w2, w2, #0x1
    18dc:	str	w2, [x1, #8]
    18e0:	b	1800 <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x110>
    18e4:	ldr	w0, [x19, #8]
    18e8:	sub	w1, w0, #0x1
    18ec:	str	w1, [x19, #8]
    18f0:	b	1854 <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x164>
    18f4:	ldr	x0, [x19]
    18f8:	ldr	x1, [x0, #16]
    18fc:	mov	x0, x19
    1900:	blr	x1
    1904:	adrp	x0, 0 <__pthread_key_create>
    1908:	ldr	x0, [x0]
    190c:	cbz	x0, 1940 <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x250>
    1910:	add	x1, x19, #0xc
    1914:	ldaxr	w0, [x1]
    1918:	sub	w2, w0, #0x1
    191c:	stlxr	w3, w2, [x1]
    1920:	cbnz	w3, 1914 <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x224>
    1924:	cmp	w0, #0x1
    1928:	b.ne	185c <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x16c>  // b.any
    192c:	ldr	x0, [x19]
    1930:	ldr	x1, [x0, #24]
    1934:	mov	x0, x19
    1938:	blr	x1
    193c:	b	185c <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x16c>
    1940:	ldr	w0, [x19, #12]
    1944:	sub	w1, w0, #0x1
    1948:	str	w1, [x19, #12]
    194c:	b	1924 <_ZN4llvm3msf25WritableMappedBlockStream19createIndexedStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefEjRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x234>

0000000000001950 <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>:
    1950:	stp	x29, x30, [sp, #-160]!
    1954:	mov	x29, sp
    1958:	stp	x19, x20, [sp, #16]
    195c:	stp	x21, x22, [sp, #32]
    1960:	stp	x23, x24, [sp, #48]
    1964:	stp	x25, x26, [sp, #64]
    1968:	mov	x20, x0
    196c:	mov	x19, x1
    1970:	str	xzr, [sp, #136]
    1974:	str	xzr, [sp, #144]
    1978:	str	xzr, [sp, #152]
    197c:	ldr	x25, [x0, #32]
    1980:	ldr	x0, [x0, #40]
    1984:	lsl	x24, x0, #2
    1988:	sbfx	x1, x0, #0, #62
    198c:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
    1990:	cmp	x1, x0
    1994:	b.hi	1aac <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x15c>  // b.pmore
    1998:	mov	x22, x8
    199c:	mov	x23, x2
    19a0:	mov	x21, #0x0                   	// #0
    19a4:	cbz	x1, 19b4 <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x64>
    19a8:	mov	x0, x24
    19ac:	bl	0 <_Znwm>
    19b0:	mov	x21, x0
    19b4:	add	x26, x21, x24
    19b8:	cbz	x24, 19cc <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x7c>
    19bc:	mov	x2, x24
    19c0:	mov	x1, x25
    19c4:	mov	x0, x21
    19c8:	bl	0 <memcpy>
    19cc:	ldr	x0, [sp, #136]
    19d0:	str	x21, [sp, #136]
    19d4:	str	x26, [sp, #144]
    19d8:	str	x26, [sp, #152]
    19dc:	cbz	x0, 19e4 <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x94>
    19e0:	bl	0 <_ZdlPv>
    19e4:	ldr	x0, [x20]
    19e8:	ldr	w1, [x0, #44]
    19ec:	str	w1, [sp, #128]
    19f0:	ldr	w0, [x0, #32]
    19f4:	ldr	x1, [x19]
    19f8:	str	x1, [sp, #88]
    19fc:	ldr	x1, [x19, #8]
    1a00:	str	x1, [sp, #96]
    1a04:	cbz	x1, 1a28 <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xd8>
    1a08:	adrp	x2, 0 <__pthread_key_create>
    1a0c:	ldr	x2, [x2]
    1a10:	cbz	x2, 1ab8 <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x168>
    1a14:	add	x1, x1, #0x8
    1a18:	ldaxr	w2, [x1]
    1a1c:	add	w2, w2, #0x1
    1a20:	stlxr	w3, w2, [x1]
    1a24:	cbnz	w3, 1a18 <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xc8>
    1a28:	ldr	x1, [x19, #16]
    1a2c:	str	x1, [sp, #104]
    1a30:	ldr	w1, [x19, #24]
    1a34:	str	w1, [sp, #112]
    1a38:	ldur	x1, [x19, #28]
    1a3c:	stur	x1, [sp, #116]
    1a40:	mov	x8, x22
    1a44:	mov	x3, x23
    1a48:	add	x2, sp, #0x58
    1a4c:	add	x1, sp, #0x80
    1a50:	bl	1580 <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1a54:	ldr	x19, [sp, #96]
    1a58:	cbz	x19, 1a84 <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x134>
    1a5c:	adrp	x0, 0 <__pthread_key_create>
    1a60:	ldr	x0, [x0]
    1a64:	cbz	x0, 1ac8 <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x178>
    1a68:	add	x1, x19, #0x8
    1a6c:	ldaxr	w0, [x1]
    1a70:	sub	w2, w0, #0x1
    1a74:	stlxr	w3, w2, [x1]
    1a78:	cbnz	w3, 1a6c <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x11c>
    1a7c:	cmp	w0, #0x1
    1a80:	b.eq	1ad8 <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x188>  // b.none
    1a84:	ldr	x0, [sp, #136]
    1a88:	cbz	x0, 1a90 <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x140>
    1a8c:	bl	0 <_ZdlPv>
    1a90:	mov	x0, x22
    1a94:	ldp	x19, x20, [sp, #16]
    1a98:	ldp	x21, x22, [sp, #32]
    1a9c:	ldp	x23, x24, [sp, #48]
    1aa0:	ldp	x25, x26, [sp, #64]
    1aa4:	ldp	x29, x30, [sp], #160
    1aa8:	ret
    1aac:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1ab0:	add	x0, x0, #0x0
    1ab4:	bl	0 <_ZSt20__throw_length_errorPKc>
    1ab8:	ldr	w2, [x1, #8]
    1abc:	add	w2, w2, #0x1
    1ac0:	str	w2, [x1, #8]
    1ac4:	b	1a28 <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xd8>
    1ac8:	ldr	w0, [x19, #8]
    1acc:	sub	w1, w0, #0x1
    1ad0:	str	w1, [x19, #8]
    1ad4:	b	1a7c <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x12c>
    1ad8:	ldr	x0, [x19]
    1adc:	ldr	x1, [x0, #16]
    1ae0:	mov	x0, x19
    1ae4:	blr	x1
    1ae8:	adrp	x0, 0 <__pthread_key_create>
    1aec:	ldr	x0, [x0]
    1af0:	cbz	x0, 1b24 <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1d4>
    1af4:	add	x1, x19, #0xc
    1af8:	ldaxr	w0, [x1]
    1afc:	sub	w2, w0, #0x1
    1b00:	stlxr	w3, w2, [x1]
    1b04:	cbnz	w3, 1af8 <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1a8>
    1b08:	cmp	w0, #0x1
    1b0c:	b.ne	1a84 <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x134>  // b.any
    1b10:	ldr	x0, [x19]
    1b14:	ldr	x1, [x0, #24]
    1b18:	mov	x0, x19
    1b1c:	blr	x1
    1b20:	b	1a84 <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x134>
    1b24:	ldr	w0, [x19, #12]
    1b28:	sub	w1, w0, #0x1
    1b2c:	str	w1, [x19, #12]
    1b30:	b	1b08 <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1b8>

0000000000001b34 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb>:
    1b34:	stp	x29, x30, [sp, #-320]!
    1b38:	mov	x29, sp
    1b3c:	stp	x19, x20, [sp, #16]
    1b40:	stp	x21, x22, [sp, #32]
    1b44:	stp	x23, x24, [sp, #48]
    1b48:	mov	x21, x8
    1b4c:	mov	x20, x0
    1b50:	mov	x19, x1
    1b54:	mov	x22, x2
    1b58:	and	w23, w3, #0xff
    1b5c:	add	x8, sp, #0x118
    1b60:	mov	w2, w23
    1b64:	mov	w1, #0x0                   	// #0
    1b68:	bl	0 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb>
    1b6c:	add	x8, sp, #0xf8
    1b70:	mov	w2, w23
    1b74:	mov	w1, #0x1                   	// #1
    1b78:	mov	x0, x20
    1b7c:	bl	0 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb>
    1b80:	ldr	x0, [x20]
    1b84:	ldr	w0, [x0, #32]
    1b88:	ldr	x1, [x19]
    1b8c:	str	x1, [sp, #136]
    1b90:	ldr	x1, [x19, #8]
    1b94:	str	x1, [sp, #144]
    1b98:	cbz	x1, 1bbc <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x88>
    1b9c:	adrp	x2, 0 <__pthread_key_create>
    1ba0:	ldr	x2, [x2]
    1ba4:	cbz	x2, 1c6c <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x138>
    1ba8:	add	x1, x1, #0x8
    1bac:	ldaxr	w2, [x1]
    1bb0:	add	w2, w2, #0x1
    1bb4:	stlxr	w3, w2, [x1]
    1bb8:	cbnz	w3, 1bac <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x78>
    1bbc:	ldr	x1, [x19, #16]
    1bc0:	str	x1, [sp, #152]
    1bc4:	ldr	w1, [x19, #24]
    1bc8:	str	w1, [sp, #160]
    1bcc:	ldur	x1, [x19, #28]
    1bd0:	stur	x1, [sp, #164]
    1bd4:	add	x8, sp, #0xf0
    1bd8:	mov	x3, x22
    1bdc:	add	x2, sp, #0x88
    1be0:	add	x1, sp, #0xf8
    1be4:	bl	1580 <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1be8:	ldr	x23, [sp, #144]
    1bec:	cbz	x23, 1c18 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0xe4>
    1bf0:	adrp	x0, 0 <__pthread_key_create>
    1bf4:	ldr	x0, [x0]
    1bf8:	cbz	x0, 1c7c <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x148>
    1bfc:	add	x1, x23, #0x8
    1c00:	ldaxr	w0, [x1]
    1c04:	sub	w2, w0, #0x1
    1c08:	stlxr	w3, w2, [x1]
    1c0c:	cbnz	w3, 1c00 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0xcc>
    1c10:	cmp	w0, #0x1
    1c14:	b.eq	1c8c <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x158>  // b.none
    1c18:	ldr	x0, [sp, #240]
    1c1c:	cbz	x0, 1ce8 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x1b4>
    1c20:	stp	x25, x26, [sp, #64]
    1c24:	str	x27, [sp, #80]
    1c28:	ldr	x0, [x20]
    1c2c:	ldr	w24, [x0, #32]
    1c30:	mov	x23, #0x0                   	// #0
    1c34:	cbz	x24, 1c50 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x11c>
    1c38:	mov	x0, x24
    1c3c:	bl	0 <_Znwm>
    1c40:	mov	x23, x0
    1c44:	mov	x2, x24
    1c48:	mov	w1, #0xff                  	// #255
    1c4c:	bl	0 <memset>
    1c50:	ldr	x1, [sp, #240]
    1c54:	add	x0, sp, #0xb8
    1c58:	bl	0 <_ZN4llvm18BinaryStreamWriterC1ERNS_20WritableBinaryStreamE>
    1c5c:	mov	w27, #0x0                   	// #0
    1c60:	add	x26, sp, #0xb8
    1c64:	add	x25, sp, #0x138
    1c68:	b	1d50 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x21c>
    1c6c:	ldr	w2, [x1, #8]
    1c70:	add	w2, w2, #0x1
    1c74:	str	w2, [x1, #8]
    1c78:	b	1bbc <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x88>
    1c7c:	ldr	w0, [x23, #8]
    1c80:	sub	w1, w0, #0x1
    1c84:	str	w1, [x23, #8]
    1c88:	b	1c10 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0xdc>
    1c8c:	ldr	x0, [x23]
    1c90:	ldr	x1, [x0, #16]
    1c94:	mov	x0, x23
    1c98:	blr	x1
    1c9c:	adrp	x0, 0 <__pthread_key_create>
    1ca0:	ldr	x0, [x0]
    1ca4:	cbz	x0, 1cd8 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x1a4>
    1ca8:	add	x1, x23, #0xc
    1cac:	ldaxr	w0, [x1]
    1cb0:	sub	w2, w0, #0x1
    1cb4:	stlxr	w3, w2, [x1]
    1cb8:	cbnz	w3, 1cac <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x178>
    1cbc:	cmp	w0, #0x1
    1cc0:	b.ne	1c18 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0xe4>  // b.any
    1cc4:	ldr	x0, [x23]
    1cc8:	ldr	x1, [x0, #24]
    1ccc:	mov	x0, x23
    1cd0:	blr	x1
    1cd4:	b	1c18 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0xe4>
    1cd8:	ldr	w0, [x23, #12]
    1cdc:	sub	w1, w0, #0x1
    1ce0:	str	w1, [x23, #12]
    1ce4:	b	1cbc <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x188>
    1ce8:	str	xzr, [x21]
    1cec:	b	1f90 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x45c>
    1cf0:	ldr	x0, [sp, #208]
    1cf4:	mov	w1, w27
    1cf8:	cbz	x0, 1d10 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x1dc>
    1cfc:	ldr	x1, [x0]
    1d00:	ldr	x1, [x1, #40]
    1d04:	blr	x1
    1d08:	ldr	w1, [sp, #216]
    1d0c:	sub	w1, w0, w1
    1d10:	ldr	w0, [sp, #232]
    1d14:	cmp	w0, w1
    1d18:	b.eq	1e90 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x35c>  // b.none
    1d1c:	mov	x8, x25
    1d20:	mov	x1, x23
    1d24:	mov	x2, x24
    1d28:	mov	x0, x26
    1d2c:	bl	0 <_ZN4llvm18BinaryStreamWriter10writeBytesENS_8ArrayRefIhEE>
    1d30:	ldr	x3, [sp, #312]
    1d34:	ands	x0, x3, #0xfffffffffffffffe
    1d38:	cset	x3, ne  // ne = any
    1d3c:	orr	x3, x3, x0
    1d40:	str	x3, [sp, #312]
    1d44:	tst	x3, #0xfffffffffffffffe
    1d48:	b.ne	1d60 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x22c>  // b.any
    1d4c:	tbnz	w3, #0, 1e88 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x354>
    1d50:	ldrb	w0, [sp, #224]
    1d54:	cbz	w0, 1cf0 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x1bc>
    1d58:	ldr	w1, [sp, #220]
    1d5c:	b	1d10 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x1dc>
    1d60:	add	x1, sp, #0x68
    1d64:	add	x0, sp, #0x78
    1d68:	str	x0, [sp, #104]
    1d6c:	str	xzr, [sp, #112]
    1d70:	strb	wzr, [sp, #120]
    1d74:	mov	w0, #0x1                   	// #1
    1d78:	str	w0, [sp, #168]
    1d7c:	str	xzr, [sp, #160]
    1d80:	str	xzr, [sp, #152]
    1d84:	str	xzr, [sp, #144]
    1d88:	adrp	x0, 0 <_ZTVN4llvm18raw_string_ostreamE>
    1d8c:	ldr	x0, [x0]
    1d90:	add	x0, x0, #0x10
    1d94:	str	x0, [sp, #136]
    1d98:	str	x1, [sp, #176]
    1d9c:	mov	x2, #0x31                  	// #49
    1da0:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1da4:	add	x1, x1, #0x0
    1da8:	add	x0, sp, #0x88
    1dac:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1db0:	ldr	x1, [x0, #24]
    1db4:	ldr	x2, [x0, #16]
    1db8:	cmp	x2, x1
    1dbc:	b.eq	1dd8 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x2a4>  // b.none
    1dc0:	mov	w2, #0xa                   	// #10
    1dc4:	strb	w2, [x1]
    1dc8:	ldr	x1, [x0, #24]
    1dcc:	add	x1, x1, #0x1
    1dd0:	str	x1, [x0, #24]
    1dd4:	b	1de8 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x2b4>
    1dd8:	mov	x2, #0x1                   	// #1
    1ddc:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1de0:	add	x1, x1, #0x0
    1de4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1de8:	ldr	x2, [sp, #312]
    1dec:	ands	x2, x2, #0xfffffffffffffffe
    1df0:	b.eq	1e38 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x304>  // b.none
    1df4:	ldr	x1, [x2]
    1df8:	ldr	x3, [x1, #16]
    1dfc:	mov	x1, x0
    1e00:	mov	x0, x2
    1e04:	blr	x3
    1e08:	ldr	x1, [sp, #160]
    1e0c:	ldr	x0, [sp, #144]
    1e10:	cmp	x1, x0
    1e14:	b.eq	1e20 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x2ec>  // b.none
    1e18:	add	x0, sp, #0x88
    1e1c:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
    1e20:	mov	w2, #0x2c9                 	// #713
    1e24:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1e28:	add	x1, x1, #0x0
    1e2c:	ldr	x0, [sp, #176]
    1e30:	ldr	x0, [x0]
    1e34:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    1e38:	ldr	x2, [x0, #24]
    1e3c:	ldr	x1, [x0, #16]
    1e40:	sub	x1, x1, x2
    1e44:	cmp	x1, #0x6
    1e48:	b.ls	1e74 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x340>  // b.plast
    1e4c:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1e50:	add	x1, x1, #0x0
    1e54:	ldr	w3, [x1]
    1e58:	str	w3, [x2]
    1e5c:	ldur	w1, [x1, #3]
    1e60:	stur	w1, [x2, #3]
    1e64:	ldr	x1, [x0, #24]
    1e68:	add	x1, x1, #0x7
    1e6c:	str	x1, [x0, #24]
    1e70:	b	1e08 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x2d4>
    1e74:	mov	x2, #0x7                   	// #7
    1e78:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1e7c:	add	x1, x1, #0x0
    1e80:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1e84:	b	1e08 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x2d4>
    1e88:	add	x0, sp, #0x138
    1e8c:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    1e90:	ldr	x0, [x20]
    1e94:	ldr	w0, [x0, #32]
    1e98:	ldr	x1, [x19]
    1e9c:	str	x1, [sp, #136]
    1ea0:	ldr	x1, [x19, #8]
    1ea4:	str	x1, [sp, #144]
    1ea8:	cbz	x1, 1ecc <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x398>
    1eac:	adrp	x2, 0 <__pthread_key_create>
    1eb0:	ldr	x2, [x2]
    1eb4:	cbz	x2, 1fc0 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x48c>
    1eb8:	add	x1, x1, #0x8
    1ebc:	ldaxr	w2, [x1]
    1ec0:	add	w2, w2, #0x1
    1ec4:	stlxr	w3, w2, [x1]
    1ec8:	cbnz	w3, 1ebc <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x388>
    1ecc:	ldr	x1, [x19, #16]
    1ed0:	str	x1, [sp, #152]
    1ed4:	ldr	w1, [x19, #24]
    1ed8:	str	w1, [sp, #160]
    1edc:	ldur	x1, [x19, #28]
    1ee0:	stur	x1, [sp, #164]
    1ee4:	mov	x8, x21
    1ee8:	mov	x3, x22
    1eec:	add	x2, sp, #0x88
    1ef0:	add	x1, sp, #0x118
    1ef4:	bl	1580 <_ZN4llvm3msf25WritableMappedBlockStream12createStreamEjRKNS0_15MSFStreamLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1ef8:	ldr	x19, [sp, #144]
    1efc:	cbz	x19, 1f28 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x3f4>
    1f00:	adrp	x0, 0 <__pthread_key_create>
    1f04:	ldr	x0, [x0]
    1f08:	cbz	x0, 1fd0 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x49c>
    1f0c:	add	x1, x19, #0x8
    1f10:	ldaxr	w0, [x1]
    1f14:	sub	w2, w0, #0x1
    1f18:	stlxr	w3, w2, [x1]
    1f1c:	cbnz	w3, 1f10 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x3dc>
    1f20:	cmp	w0, #0x1
    1f24:	b.eq	1fe0 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x4ac>  // b.none
    1f28:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    1f2c:	ldr	x0, [x0]
    1f30:	add	x0, x0, #0x10
    1f34:	str	x0, [sp, #184]
    1f38:	ldr	x19, [sp, #200]
    1f3c:	cbz	x19, 1f68 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x434>
    1f40:	adrp	x0, 0 <__pthread_key_create>
    1f44:	ldr	x0, [x0]
    1f48:	cbz	x0, 203c <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x508>
    1f4c:	add	x1, x19, #0x8
    1f50:	ldaxr	w0, [x1]
    1f54:	sub	w2, w0, #0x1
    1f58:	stlxr	w3, w2, [x1]
    1f5c:	cbnz	w3, 1f50 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x41c>
    1f60:	cmp	w0, #0x1
    1f64:	b.eq	204c <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x518>  // b.none
    1f68:	cbz	x23, 1f74 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x440>
    1f6c:	mov	x0, x23
    1f70:	bl	0 <_ZdlPv>
    1f74:	ldr	x0, [sp, #240]
    1f78:	cbz	x0, 20a8 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x574>
    1f7c:	ldr	x1, [x0]
    1f80:	ldr	x1, [x1, #8]
    1f84:	blr	x1
    1f88:	ldp	x25, x26, [sp, #64]
    1f8c:	ldr	x27, [sp, #80]
    1f90:	ldr	x0, [sp, #256]
    1f94:	cbz	x0, 1f9c <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x468>
    1f98:	bl	0 <_ZdlPv>
    1f9c:	ldr	x0, [sp, #288]
    1fa0:	cbz	x0, 1fa8 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x474>
    1fa4:	bl	0 <_ZdlPv>
    1fa8:	mov	x0, x21
    1fac:	ldp	x19, x20, [sp, #16]
    1fb0:	ldp	x21, x22, [sp, #32]
    1fb4:	ldp	x23, x24, [sp, #48]
    1fb8:	ldp	x29, x30, [sp], #320
    1fbc:	ret
    1fc0:	ldr	w2, [x1, #8]
    1fc4:	add	w2, w2, #0x1
    1fc8:	str	w2, [x1, #8]
    1fcc:	b	1ecc <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x398>
    1fd0:	ldr	w0, [x19, #8]
    1fd4:	sub	w1, w0, #0x1
    1fd8:	str	w1, [x19, #8]
    1fdc:	b	1f20 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x3ec>
    1fe0:	ldr	x0, [x19]
    1fe4:	ldr	x1, [x0, #16]
    1fe8:	mov	x0, x19
    1fec:	blr	x1
    1ff0:	adrp	x0, 0 <__pthread_key_create>
    1ff4:	ldr	x0, [x0]
    1ff8:	cbz	x0, 202c <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x4f8>
    1ffc:	add	x1, x19, #0xc
    2000:	ldaxr	w0, [x1]
    2004:	sub	w2, w0, #0x1
    2008:	stlxr	w3, w2, [x1]
    200c:	cbnz	w3, 2000 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x4cc>
    2010:	cmp	w0, #0x1
    2014:	b.ne	1f28 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x3f4>  // b.any
    2018:	ldr	x0, [x19]
    201c:	ldr	x1, [x0, #24]
    2020:	mov	x0, x19
    2024:	blr	x1
    2028:	b	1f28 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x3f4>
    202c:	ldr	w0, [x19, #12]
    2030:	sub	w1, w0, #0x1
    2034:	str	w1, [x19, #12]
    2038:	b	2010 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x4dc>
    203c:	ldr	w0, [x19, #8]
    2040:	sub	w1, w0, #0x1
    2044:	str	w1, [x19, #8]
    2048:	b	1f60 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x42c>
    204c:	ldr	x0, [x19]
    2050:	ldr	x1, [x0, #16]
    2054:	mov	x0, x19
    2058:	blr	x1
    205c:	adrp	x0, 0 <__pthread_key_create>
    2060:	ldr	x0, [x0]
    2064:	cbz	x0, 2098 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x564>
    2068:	add	x1, x19, #0xc
    206c:	ldaxr	w0, [x1]
    2070:	sub	w2, w0, #0x1
    2074:	stlxr	w3, w2, [x1]
    2078:	cbnz	w3, 206c <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x538>
    207c:	cmp	w0, #0x1
    2080:	b.ne	1f68 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x434>  // b.any
    2084:	ldr	x0, [x19]
    2088:	ldr	x1, [x0, #24]
    208c:	mov	x0, x19
    2090:	blr	x1
    2094:	b	1f68 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x434>
    2098:	ldr	w0, [x19, #12]
    209c:	sub	w1, w0, #0x1
    20a0:	str	w1, [x19, #12]
    20a4:	b	207c <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x548>
    20a8:	ldp	x25, x26, [sp, #64]
    20ac:	ldr	x27, [sp, #80]
    20b0:	b	1f90 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb+0x45c>

00000000000020b4 <_ZN4llvm3msf25WritableMappedBlockStream10writeBytesEjNS_8ArrayRefIhEE>:
    20b4:	stp	x29, x30, [sp, #-144]!
    20b8:	mov	x29, sp
    20bc:	stp	x19, x20, [sp, #16]
    20c0:	stp	x21, x22, [sp, #32]
    20c4:	stp	x23, x24, [sp, #48]
    20c8:	str	x8, [sp, #104]
    20cc:	mov	x19, x0
    20d0:	mov	w21, w1
    20d4:	mov	x22, x2
    20d8:	mov	x23, x3
    20dc:	mov	w20, w3
    20e0:	ldr	x1, [x0]
    20e4:	ldr	x1, [x1, #48]
    20e8:	blr	x1
    20ec:	cmp	w0, #0x3
    20f0:	b.hi	2164 <_ZN4llvm3msf25WritableMappedBlockStream10writeBytesEjNS_8ArrayRefIhEE+0xb0>  // b.pmore
    20f4:	tbz	w0, #1, 218c <_ZN4llvm3msf25WritableMappedBlockStream10writeBytesEjNS_8ArrayRefIhEE+0xd8>
    20f8:	ldr	x0, [x19]
    20fc:	ldr	x1, [x0, #40]
    2100:	mov	x0, x19
    2104:	blr	x1
    2108:	cmp	w21, w0
    210c:	b.ls	21fc <_ZN4llvm3msf25WritableMappedBlockStream10writeBytesEjNS_8ArrayRefIhEE+0x148>  // b.plast
    2110:	mov	w0, #0x3                   	// #3
    2114:	str	w0, [sp, #132]
    2118:	add	x8, sp, #0x78
    211c:	add	x0, sp, #0x84
    2120:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2124:	ldr	x0, [sp, #120]
    2128:	ands	x1, x0, #0xfffffffffffffffe
    212c:	cset	x0, ne  // ne = any
    2130:	orr	x0, x0, x1
    2134:	str	x0, [sp, #120]
    2138:	ands	x1, x0, #0xfffffffffffffffe
    213c:	b.eq	2218 <_ZN4llvm3msf25WritableMappedBlockStream10writeBytesEjNS_8ArrayRefIhEE+0x164>  // b.none
    2140:	orr	x0, x1, #0x1
    2144:	ldr	x1, [sp, #104]
    2148:	str	x0, [x1]
    214c:	ldr	x0, [sp, #104]
    2150:	ldp	x19, x20, [sp, #16]
    2154:	ldp	x21, x22, [sp, #32]
    2158:	ldp	x23, x24, [sp, #48]
    215c:	ldp	x29, x30, [sp], #144
    2160:	ret
    2164:	stp	x25, x26, [sp, #64]
    2168:	stp	x27, x28, [sp, #80]
    216c:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2170:	add	x3, x3, #0x0
    2174:	mov	w2, #0x5d                  	// #93
    2178:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    217c:	add	x1, x1, #0x0
    2180:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2184:	add	x0, x0, #0x0
    2188:	bl	0 <__assert_fail>
    218c:	ldr	x0, [x19]
    2190:	ldr	x1, [x0, #40]
    2194:	mov	x0, x19
    2198:	blr	x1
    219c:	cmp	w21, w0
    21a0:	b.hi	21d8 <_ZN4llvm3msf25WritableMappedBlockStream10writeBytesEjNS_8ArrayRefIhEE+0x124>  // b.pmore
    21a4:	ldr	x0, [x19]
    21a8:	ldr	x1, [x0, #40]
    21ac:	mov	x0, x19
    21b0:	blr	x1
    21b4:	add	w1, w21, w23
    21b8:	cmp	w0, w1
    21bc:	b.cs	21f0 <_ZN4llvm3msf25WritableMappedBlockStream10writeBytesEjNS_8ArrayRefIhEE+0x13c>  // b.hs, b.nlast
    21c0:	mov	w0, #0x1                   	// #1
    21c4:	str	w0, [sp, #136]
    21c8:	add	x8, sp, #0x78
    21cc:	add	x0, sp, #0x88
    21d0:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    21d4:	b	2124 <_ZN4llvm3msf25WritableMappedBlockStream10writeBytesEjNS_8ArrayRefIhEE+0x70>
    21d8:	mov	w0, #0x3                   	// #3
    21dc:	str	w0, [sp, #140]
    21e0:	add	x8, sp, #0x78
    21e4:	add	x0, sp, #0x8c
    21e8:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    21ec:	b	2124 <_ZN4llvm3msf25WritableMappedBlockStream10writeBytesEjNS_8ArrayRefIhEE+0x70>
    21f0:	mov	x0, #0x1                   	// #1
    21f4:	str	x0, [sp, #120]
    21f8:	b	2204 <_ZN4llvm3msf25WritableMappedBlockStream10writeBytesEjNS_8ArrayRefIhEE+0x150>
    21fc:	mov	x0, #0x1                   	// #1
    2200:	str	x0, [sp, #120]
    2204:	ldr	x0, [sp, #120]
    2208:	ands	x1, x0, #0xfffffffffffffffe
    220c:	cset	x0, ne  // ne = any
    2210:	orr	x0, x0, x1
    2214:	str	x0, [sp, #120]
    2218:	tbnz	w0, #0, 22d0 <_ZN4llvm3msf25WritableMappedBlockStream10writeBytesEjNS_8ArrayRefIhEE+0x21c>
    221c:	stp	x25, x26, [sp, #64]
    2220:	ldr	w0, [x19, #16]
    2224:	udiv	w25, w21, w0
    2228:	msub	w0, w25, w0, w21
    222c:	cbz	w23, 22a8 <_ZN4llvm3msf25WritableMappedBlockStream10writeBytesEjNS_8ArrayRefIhEE+0x1f4>
    2230:	stp	x27, x28, [sp, #80]
    2234:	mov	w26, #0x0                   	// #0
    2238:	add	x28, x19, #0x88
    223c:	add	x27, sp, #0x78
    2240:	ldr	x2, [x19, #32]
    2244:	ldr	w1, [x19, #16]
    2248:	sub	w3, w1, w0
    224c:	cmp	w3, w20
    2250:	csel	w24, w3, w20, ls  // ls = plast
    2254:	ldr	w4, [x2, w25, uxtw #2]
    2258:	mov	x8, x27
    225c:	add	x2, x22, w26, uxtw
    2260:	csel	w3, w3, w20, ls  // ls = plast
    2264:	madd	w1, w1, w4, w0
    2268:	mov	x0, x28
    226c:	bl	0 <_ZNK4llvm23WritableBinaryStreamRef10writeBytesEjNS_8ArrayRefIhEE>
    2270:	ldr	x0, [sp, #120]
    2274:	ands	x1, x0, #0xfffffffffffffffe
    2278:	cset	x0, ne  // ne = any
    227c:	orr	x0, x0, x1
    2280:	str	x0, [sp, #120]
    2284:	ands	x1, x0, #0xfffffffffffffffe
    2288:	b.ne	22e0 <_ZN4llvm3msf25WritableMappedBlockStream10writeBytesEjNS_8ArrayRefIhEE+0x22c>  // b.any
    228c:	tbnz	w0, #0, 22f8 <_ZN4llvm3msf25WritableMappedBlockStream10writeBytesEjNS_8ArrayRefIhEE+0x244>
    2290:	add	w26, w26, w24
    2294:	add	w25, w25, #0x1
    2298:	mov	w0, #0x0                   	// #0
    229c:	subs	w20, w20, w24
    22a0:	b.ne	2240 <_ZN4llvm3msf25WritableMappedBlockStream10writeBytesEjNS_8ArrayRefIhEE+0x18c>  // b.any
    22a4:	ldp	x27, x28, [sp, #80]
    22a8:	mov	x2, x22
    22ac:	mov	x3, x23
    22b0:	mov	w1, w21
    22b4:	add	x0, x19, #0x8
    22b8:	bl	1104 <_ZNK4llvm3msf17MappedBlockStream18fixCacheAfterWriteEjNS_8ArrayRefIhEE>
    22bc:	mov	x0, #0x1                   	// #1
    22c0:	ldr	x1, [sp, #104]
    22c4:	str	x0, [x1]
    22c8:	ldp	x25, x26, [sp, #64]
    22cc:	b	214c <_ZN4llvm3msf25WritableMappedBlockStream10writeBytesEjNS_8ArrayRefIhEE+0x98>
    22d0:	stp	x25, x26, [sp, #64]
    22d4:	stp	x27, x28, [sp, #80]
    22d8:	add	x0, sp, #0x78
    22dc:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    22e0:	orr	x1, x1, #0x1
    22e4:	ldr	x0, [sp, #104]
    22e8:	str	x1, [x0]
    22ec:	ldp	x25, x26, [sp, #64]
    22f0:	ldp	x27, x28, [sp, #80]
    22f4:	b	214c <_ZN4llvm3msf25WritableMappedBlockStream10writeBytesEjNS_8ArrayRefIhEE+0x98>
    22f8:	add	x0, sp, #0x78
    22fc:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

0000000000002300 <_ZN4llvm3msf17MappedBlockStream9readBytesEjNS_15MutableArrayRefIhEE>:
    2300:	stp	x29, x30, [sp, #-144]!
    2304:	mov	x29, sp
    2308:	stp	x19, x20, [sp, #16]
    230c:	stp	x21, x22, [sp, #32]
    2310:	stp	x23, x24, [sp, #48]
    2314:	stp	x25, x26, [sp, #64]
    2318:	mov	x22, x8
    231c:	mov	x19, x0
    2320:	mov	w21, w1
    2324:	mov	x25, x2
    2328:	mov	x23, x3
    232c:	ldr	w24, [x0, #8]
    2330:	mov	w20, w3
    2334:	ldr	x1, [x0]
    2338:	ldr	x1, [x1, #40]
    233c:	blr	x1
    2340:	cmp	w21, w0
    2344:	b.hi	23b8 <_ZN4llvm3msf17MappedBlockStream9readBytesEjNS_15MutableArrayRefIhEE+0xb8>  // b.pmore
    2348:	ldr	x0, [x19]
    234c:	ldr	x1, [x0, #40]
    2350:	mov	x0, x19
    2354:	blr	x1
    2358:	add	w1, w21, w23
    235c:	cmp	w0, w1
    2360:	b.cs	23d4 <_ZN4llvm3msf17MappedBlockStream9readBytesEjNS_15MutableArrayRefIhEE+0xd4>  // b.hs, b.nlast
    2364:	mov	w0, #0x1                   	// #1
    2368:	str	w0, [sp, #136]
    236c:	add	x8, sp, #0x78
    2370:	add	x0, sp, #0x88
    2374:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2378:	ldr	x0, [sp, #120]
    237c:	ands	x1, x0, #0xfffffffffffffffe
    2380:	cset	x0, ne  // ne = any
    2384:	orr	x0, x0, x1
    2388:	str	x0, [sp, #120]
    238c:	ands	x1, x0, #0xfffffffffffffffe
    2390:	b.eq	23d0 <_ZN4llvm3msf17MappedBlockStream9readBytesEjNS_15MutableArrayRefIhEE+0xd0>  // b.none
    2394:	orr	x1, x1, #0x1
    2398:	str	x1, [x22]
    239c:	mov	x0, x22
    23a0:	ldp	x19, x20, [sp, #16]
    23a4:	ldp	x21, x22, [sp, #32]
    23a8:	ldp	x23, x24, [sp, #48]
    23ac:	ldp	x25, x26, [sp, #64]
    23b0:	ldp	x29, x30, [sp], #144
    23b4:	ret
    23b8:	mov	w0, #0x3                   	// #3
    23bc:	str	w0, [sp, #140]
    23c0:	add	x8, sp, #0x78
    23c4:	add	x0, sp, #0x8c
    23c8:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    23cc:	b	2378 <_ZN4llvm3msf17MappedBlockStream9readBytesEjNS_15MutableArrayRefIhEE+0x78>
    23d0:	tbnz	w0, #0, 248c <_ZN4llvm3msf17MappedBlockStream9readBytesEjNS_15MutableArrayRefIhEE+0x18c>
    23d4:	str	x25, [sp, #104]
    23d8:	cbz	w23, 2480 <_ZN4llvm3msf17MappedBlockStream9readBytesEjNS_15MutableArrayRefIhEE+0x180>
    23dc:	stp	x27, x28, [sp, #80]
    23e0:	udiv	w23, w21, w24
    23e4:	msub	w21, w23, w24, w21
    23e8:	mov	w25, #0x0                   	// #0
    23ec:	add	x28, sp, #0x78
    23f0:	add	x27, x19, #0x30
    23f4:	add	x26, sp, #0x70
    23f8:	ldr	x0, [x19, #24]
    23fc:	ldr	w1, [x0, w23, uxtw #2]
    2400:	str	xzr, [sp, #120]
    2404:	str	xzr, [sp, #128]
    2408:	ldr	w2, [x19, #8]
    240c:	mov	x8, x26
    2410:	mov	x3, x28
    2414:	mul	w1, w2, w1
    2418:	mov	x0, x27
    241c:	bl	0 <_ZNK4llvm15BinaryStreamRef9readBytesEjjRNS_8ArrayRefIhEE>
    2420:	ldr	x0, [sp, #112]
    2424:	ands	x1, x0, #0xfffffffffffffffe
    2428:	cset	x0, ne  // ne = any
    242c:	orr	x0, x0, x1
    2430:	str	x0, [sp, #112]
    2434:	ands	x1, x0, #0xfffffffffffffffe
    2438:	b.ne	2498 <_ZN4llvm3msf17MappedBlockStream9readBytesEjNS_15MutableArrayRefIhEE+0x198>  // b.any
    243c:	tbnz	w0, #0, 24a8 <_ZN4llvm3msf17MappedBlockStream9readBytesEjNS_15MutableArrayRefIhEE+0x1a8>
    2440:	ldr	w2, [x19, #8]
    2444:	sub	w2, w2, w21
    2448:	cmp	w2, w20
    244c:	csel	w24, w2, w20, ls  // ls = plast
    2450:	csel	w2, w2, w20, ls  // ls = plast
    2454:	ldr	x1, [sp, #120]
    2458:	add	x1, x1, w21, uxtw
    245c:	ldr	x0, [sp, #104]
    2460:	add	x0, x0, w25, uxtw
    2464:	bl	0 <memcpy>
    2468:	add	w25, w25, w24
    246c:	add	w23, w23, #0x1
    2470:	mov	w21, #0x0                   	// #0
    2474:	subs	w20, w20, w24
    2478:	b.ne	23f8 <_ZN4llvm3msf17MappedBlockStream9readBytesEjNS_15MutableArrayRefIhEE+0xf8>  // b.any
    247c:	ldp	x27, x28, [sp, #80]
    2480:	mov	x0, #0x1                   	// #1
    2484:	str	x0, [x22]
    2488:	b	239c <_ZN4llvm3msf17MappedBlockStream9readBytesEjNS_15MutableArrayRefIhEE+0x9c>
    248c:	stp	x27, x28, [sp, #80]
    2490:	add	x0, sp, #0x78
    2494:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    2498:	orr	x1, x1, #0x1
    249c:	str	x1, [x22]
    24a0:	ldp	x27, x28, [sp, #80]
    24a4:	b	239c <_ZN4llvm3msf17MappedBlockStream9readBytesEjNS_15MutableArrayRefIhEE+0x9c>
    24a8:	add	x0, sp, #0x70
    24ac:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

00000000000024b0 <_ZN4llvm3msf17MappedBlockStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE>:
    24b0:	stp	x29, x30, [sp, #-112]!
    24b4:	mov	x29, sp
    24b8:	stp	x19, x20, [sp, #16]
    24bc:	stp	x21, x22, [sp, #32]
    24c0:	stp	x23, x24, [sp, #48]
    24c4:	mov	x22, x8
    24c8:	mov	x20, x0
    24cc:	mov	w21, w1
    24d0:	mov	x23, x2
    24d4:	ldr	x1, [x0]
    24d8:	ldr	x1, [x1, #40]
    24dc:	blr	x1
    24e0:	cmp	w21, w0
    24e4:	b.hi	2554 <_ZN4llvm3msf17MappedBlockStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0xa4>  // b.pmore
    24e8:	ldr	x0, [x20]
    24ec:	ldr	x1, [x0, #40]
    24f0:	mov	x0, x20
    24f4:	blr	x1
    24f8:	add	w1, w21, #0x1
    24fc:	cmp	w0, w1
    2500:	b.cs	257c <_ZN4llvm3msf17MappedBlockStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0xcc>  // b.hs, b.nlast
    2504:	mov	w0, #0x1                   	// #1
    2508:	str	w0, [sp, #104]
    250c:	add	x8, sp, #0x50
    2510:	add	x0, sp, #0x68
    2514:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2518:	ldr	x0, [sp, #80]
    251c:	ands	x1, x0, #0xfffffffffffffffe
    2520:	cset	x0, ne  // ne = any
    2524:	orr	x0, x0, x1
    2528:	str	x0, [sp, #80]
    252c:	ands	x1, x0, #0xfffffffffffffffe
    2530:	b.eq	256c <_ZN4llvm3msf17MappedBlockStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0xbc>  // b.none
    2534:	orr	x1, x1, #0x1
    2538:	str	x1, [x22]
    253c:	mov	x0, x22
    2540:	ldp	x19, x20, [sp, #16]
    2544:	ldp	x21, x22, [sp, #32]
    2548:	ldp	x23, x24, [sp, #48]
    254c:	ldp	x29, x30, [sp], #112
    2550:	ret
    2554:	mov	w0, #0x3                   	// #3
    2558:	str	w0, [sp, #108]
    255c:	add	x8, sp, #0x50
    2560:	add	x0, sp, #0x6c
    2564:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2568:	b	2518 <_ZN4llvm3msf17MappedBlockStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0x68>
    256c:	str	x25, [sp, #64]
    2570:	tbz	w0, #0, 2580 <_ZN4llvm3msf17MappedBlockStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0xd0>
    2574:	add	x0, sp, #0x50
    2578:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    257c:	str	x25, [sp, #64]
    2580:	ldr	w24, [x20, #8]
    2584:	udiv	w25, w21, w24
    2588:	ldr	x6, [x20, #24]
    258c:	ldr	x5, [x20, #32]
    2590:	sub	x5, x5, x6
    2594:	asr	x5, x5, #2
    2598:	sub	w5, w5, #0x1
    259c:	mov	w7, w25
    25a0:	add	x0, x6, w25, uxtw #2
    25a4:	mov	w19, w25
    25a8:	b	25b0 <_ZN4llvm3msf17MappedBlockStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0x100>
    25ac:	mov	w19, w4
    25b0:	cmp	w5, w19
    25b4:	b.ls	25d4 <_ZN4llvm3msf17MappedBlockStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0x124>  // b.plast
    25b8:	ldr	w1, [x0], #4
    25bc:	add	w4, w19, #0x1
    25c0:	add	w2, w19, #0x1
    25c4:	ldr	w3, [x6, x2, lsl #2]
    25c8:	sub	w3, w3, #0x1
    25cc:	cmp	w3, w1
    25d0:	b.eq	25ac <_ZN4llvm3msf17MappedBlockStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0xfc>  // b.none
    25d4:	str	xzr, [sp, #88]
    25d8:	str	xzr, [sp, #96]
    25dc:	ldr	w1, [x6, x7, lsl #2]
    25e0:	add	x8, sp, #0x50
    25e4:	add	x3, sp, #0x58
    25e8:	mov	w2, w24
    25ec:	mul	w1, w24, w1
    25f0:	add	x0, x20, #0x30
    25f4:	bl	0 <_ZNK4llvm15BinaryStreamRef9readBytesEjjRNS_8ArrayRefIhEE>
    25f8:	ldr	x0, [sp, #80]
    25fc:	ands	x1, x0, #0xfffffffffffffffe
    2600:	cset	x0, ne  // ne = any
    2604:	orr	x0, x0, x1
    2608:	str	x0, [sp, #80]
    260c:	ands	x1, x0, #0xfffffffffffffffe
    2610:	b.eq	2624 <_ZN4llvm3msf17MappedBlockStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0x174>  // b.none
    2614:	orr	x1, x1, #0x1
    2618:	str	x1, [x22]
    261c:	ldr	x25, [sp, #64]
    2620:	b	253c <_ZN4llvm3msf17MappedBlockStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0x8c>
    2624:	tbnz	w0, #0, 266c <_ZN4llvm3msf17MappedBlockStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0x1bc>
    2628:	udiv	w0, w21, w24
    262c:	msub	w21, w0, w24, w21
    2630:	mov	w1, w21
    2634:	ldr	x0, [sp, #96]
    2638:	cmp	x0, w21, uxtw
    263c:	b.cc	2674 <_ZN4llvm3msf17MappedBlockStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0x1c4>  // b.lo, b.ul, b.last
    2640:	ldr	x0, [sp, #88]
    2644:	add	x0, x0, x1
    2648:	str	x0, [x23]
    264c:	sub	w0, w19, w25
    2650:	sub	w21, w24, w21
    2654:	madd	w0, w0, w24, w21
    2658:	str	x0, [x23, #8]
    265c:	mov	x0, #0x1                   	// #1
    2660:	str	x0, [x22]
    2664:	ldr	x25, [sp, #64]
    2668:	b	253c <_ZN4llvm3msf17MappedBlockStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0x8c>
    266c:	add	x0, sp, #0x50
    2670:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    2674:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2678:	add	x3, x3, #0x0
    267c:	mov	w2, #0xc6                  	// #198
    2680:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2684:	add	x1, x1, #0x0
    2688:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    268c:	add	x0, x0, #0x0
    2690:	bl	0 <__assert_fail>

0000000000002694 <_ZN4llvm3msf25WritableMappedBlockStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE>:
    2694:	stp	x29, x30, [sp, #-32]!
    2698:	mov	x29, sp
    269c:	str	x19, [sp, #16]
    26a0:	mov	x19, x8
    26a4:	add	x0, x0, #0x8
    26a8:	bl	24b0 <_ZN4llvm3msf17MappedBlockStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE>
    26ac:	mov	x0, x19
    26b0:	ldr	x19, [sp, #16]
    26b4:	ldp	x29, x30, [sp], #32
    26b8:	ret

00000000000026bc <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE>:
    26bc:	stp	x29, x30, [sp, #-96]!
    26c0:	mov	x29, sp
    26c4:	str	x21, [sp, #32]
    26c8:	mov	x21, x3
    26cc:	cbz	w2, 2758 <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE+0x9c>
    26d0:	stp	x19, x20, [sp, #16]
    26d4:	mov	w19, w2
    26d8:	ldr	w2, [x0, #8]
    26dc:	udiv	w7, w1, w2
    26e0:	msub	w20, w7, w2, w1
    26e4:	sub	w1, w2, w20
    26e8:	cmp	w1, w19
    26ec:	csel	w1, w1, w19, ls  // ls = plast
    26f0:	sub	w1, w19, w1
    26f4:	mov	w10, w2
    26f8:	cbz	w2, 2770 <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE+0xb4>
    26fc:	sub	x6, x10, #0x1
    2700:	add	x6, x6, x1
    2704:	udiv	x6, x6, x10
    2708:	mul	x6, x6, x10
    270c:	udiv	x6, x6, x10
    2710:	ldr	x9, [x0, #24]
    2714:	mov	w1, w7
    2718:	ldr	w8, [x9, x1, lsl #2]
    271c:	adds	w6, w6, #0x1
    2720:	b.eq	2790 <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE+0xd4>  // b.none
    2724:	add	w6, w6, w8
    2728:	mov	w4, w8
    272c:	add	w4, w4, #0x1
    2730:	cmp	w4, w6
    2734:	b.eq	2790 <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE+0xd4>  // b.none
    2738:	add	w5, w7, w4
    273c:	sub	w5, w5, w8
    2740:	ldr	w3, [x9, x5, lsl #2]
    2744:	cmp	w4, w3
    2748:	b.eq	272c <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE+0x70>  // b.none
    274c:	mov	w0, #0x0                   	// #0
    2750:	ldp	x19, x20, [sp, #16]
    2754:	b	2764 <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE+0xa8>
    2758:	str	xzr, [x3]
    275c:	str	xzr, [x3, #8]
    2760:	mov	w0, #0x1                   	// #1
    2764:	ldr	x21, [sp, #32]
    2768:	ldp	x29, x30, [sp], #96
    276c:	ret
    2770:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2774:	add	x3, x3, #0x0
    2778:	mov	w2, #0x2ce                 	// #718
    277c:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2780:	add	x1, x1, #0x0
    2784:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2788:	add	x0, x0, #0x0
    278c:	bl	0 <__assert_fail>
    2790:	str	xzr, [sp, #56]
    2794:	str	xzr, [sp, #64]
    2798:	ldr	w1, [x9, x1, lsl #2]
    279c:	add	x8, sp, #0x30
    27a0:	add	x3, sp, #0x38
    27a4:	mul	w1, w1, w10
    27a8:	add	x0, x0, #0x30
    27ac:	bl	0 <_ZNK4llvm15BinaryStreamRef9readBytesEjjRNS_8ArrayRefIhEE>
    27b0:	ldr	x0, [sp, #48]
    27b4:	ands	x1, x0, #0xfffffffffffffffe
    27b8:	cset	x0, ne  // ne = any
    27bc:	orr	x0, x0, x1
    27c0:	str	x0, [sp, #48]
    27c4:	ands	x1, x0, #0xfffffffffffffffe
    27c8:	b.ne	2800 <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE+0x144>  // b.any
    27cc:	tbnz	w0, #0, 2858 <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE+0x19c>
    27d0:	mov	w1, w20
    27d4:	ldr	x0, [sp, #64]
    27d8:	cmp	x0, w20, uxtw
    27dc:	b.cc	2860 <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE+0x1a4>  // b.lo, b.ul, b.last
    27e0:	ldr	x0, [sp, #56]
    27e4:	add	x0, x0, x1
    27e8:	str	x0, [x21]
    27ec:	mov	w19, w19
    27f0:	str	x19, [x21, #8]
    27f4:	mov	w0, #0x1                   	// #1
    27f8:	ldp	x19, x20, [sp, #16]
    27fc:	b	2764 <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE+0xa8>
    2800:	str	xzr, [sp, #48]
    2804:	orr	x1, x1, #0x1
    2808:	str	x1, [sp, #88]
    280c:	str	xzr, [sp, #72]
    2810:	add	x1, sp, #0x50
    2814:	add	x0, sp, #0x58
    2818:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    281c:	ldr	x0, [sp, #88]
    2820:	cbnz	x0, 2840 <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE+0x184>
    2824:	ldr	x0, [sp, #72]
    2828:	cbnz	x0, 2848 <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE+0x18c>
    282c:	ldr	x1, [sp, #48]
    2830:	mov	w0, #0x0                   	// #0
    2834:	cbnz	x1, 2850 <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE+0x194>
    2838:	ldp	x19, x20, [sp, #16]
    283c:	b	2764 <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE+0xa8>
    2840:	add	x0, sp, #0x58
    2844:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    2848:	add	x0, sp, #0x48
    284c:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    2850:	add	x0, sp, #0x30
    2854:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    2858:	add	x0, sp, #0x30
    285c:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    2860:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2864:	add	x3, x3, #0x0
    2868:	mov	w2, #0xc6                  	// #198
    286c:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2870:	add	x1, x1, #0x0
    2874:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2878:	add	x0, x0, #0x0
    287c:	bl	0 <__assert_fail>

0000000000002880 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE>:
    2880:	stp	x29, x30, [sp, #-176]!
    2884:	mov	x29, sp
    2888:	stp	x19, x20, [sp, #16]
    288c:	stp	x21, x22, [sp, #32]
    2890:	stp	x23, x24, [sp, #48]
    2894:	mov	x21, x8
    2898:	mov	x20, x0
    289c:	mov	w19, w1
    28a0:	str	w2, [sp, #124]
    28a4:	mov	x22, x3
    28a8:	mov	w23, w2
    28ac:	ldr	x1, [x0]
    28b0:	ldr	x1, [x1, #40]
    28b4:	blr	x1
    28b8:	cmp	w0, w19
    28bc:	b.cc	292c <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xac>  // b.lo, b.ul, b.last
    28c0:	ldr	x0, [x20]
    28c4:	ldr	x1, [x0, #40]
    28c8:	mov	x0, x20
    28cc:	blr	x1
    28d0:	add	w2, w23, w19
    28d4:	cmp	w0, w2
    28d8:	b.cs	2948 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xc8>  // b.hs, b.nlast
    28dc:	mov	w0, #0x1                   	// #1
    28e0:	str	w0, [sp, #160]
    28e4:	add	x8, sp, #0x80
    28e8:	add	x0, sp, #0xa0
    28ec:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    28f0:	ldr	x0, [sp, #128]
    28f4:	ands	x1, x0, #0xfffffffffffffffe
    28f8:	cset	x0, ne  // ne = any
    28fc:	orr	x0, x0, x1
    2900:	str	x0, [sp, #128]
    2904:	ands	x1, x0, #0xfffffffffffffffe
    2908:	b.eq	2944 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xc4>  // b.none
    290c:	orr	x1, x1, #0x1
    2910:	str	x1, [x21]
    2914:	mov	x0, x21
    2918:	ldp	x19, x20, [sp, #16]
    291c:	ldp	x21, x22, [sp, #32]
    2920:	ldp	x23, x24, [sp, #48]
    2924:	ldp	x29, x30, [sp], #176
    2928:	ret
    292c:	mov	w0, #0x3                   	// #3
    2930:	str	w0, [sp, #164]
    2934:	add	x8, sp, #0x80
    2938:	add	x0, sp, #0xa4
    293c:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2940:	b	28f0 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x70>
    2944:	tbnz	w0, #0, 2970 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xf0>
    2948:	mov	x3, x22
    294c:	ldr	w2, [sp, #124]
    2950:	mov	w1, w19
    2954:	mov	x0, x20
    2958:	bl	26bc <_ZN4llvm3msf17MappedBlockStream19tryReadContiguouslyEjjRNS_8ArrayRefIhEE>
    295c:	and	w0, w0, #0xff
    2960:	cbz	w0, 2980 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x100>
    2964:	mov	x0, #0x1                   	// #1
    2968:	str	x0, [x21]
    296c:	b	2914 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x94>
    2970:	stp	x25, x26, [sp, #64]
    2974:	stp	x27, x28, [sp, #80]
    2978:	add	x0, sp, #0x80
    297c:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    2980:	stp	x25, x26, [sp, #64]
    2984:	ldr	x0, [x20, #104]
    2988:	ldr	w1, [x20, #120]
    298c:	cbz	w1, 2a58 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x1d8>
    2990:	cmn	w19, #0x3
    2994:	b.hi	2a24 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x1a4>  // b.pmore
    2998:	sub	w3, w1, #0x1
    299c:	mov	w2, #0x25                  	// #37
    29a0:	mul	w2, w19, w2
    29a4:	and	w4, w2, w3
    29a8:	and	w2, w2, w3
    29ac:	lsl	x2, x2, #5
    29b0:	add	x23, x0, x2
    29b4:	ldr	w2, [x0, x2]
    29b8:	cmp	w2, w19
    29bc:	b.ne	2a48 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x1c8>  // b.any
    29c0:	ldr	x26, [x20, #96]
    29c4:	ubfiz	x1, x1, #5, #32
    29c8:	add	x1, x0, x1
    29cc:	ldr	x8, [x20, #96]
    29d0:	cbz	x23, 397c <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x10fc>
    29d4:	cmp	x8, x26
    29d8:	b.ne	2aa0 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x220>  // b.any
    29dc:	cbz	x1, 2ae8 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x268>
    29e0:	ldr	x2, [x20, #96]
    29e4:	cmp	x2, x8
    29e8:	b.ne	2ac4 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x244>  // b.any
    29ec:	cmp	x1, x23
    29f0:	b.ne	2ae8 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x268>  // b.any
    29f4:	ldr	w2, [x20, #112]
    29f8:	cbz	w2, 2b64 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x2e4>
    29fc:	cmp	x1, x0
    2a00:	b.cc	2b6c <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x2ec>  // b.lo, b.ul, b.last
    2a04:	b.eq	2c64 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x3e4>  // b.none
    2a08:	ldr	w2, [x0]
    2a0c:	cmn	w2, #0x3
    2a10:	b.ls	2c64 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x3e4>  // b.plast
    2a14:	add	x0, x0, #0x20
    2a18:	cmp	x1, x0
    2a1c:	b.ne	2a08 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x188>  // b.any
    2a20:	b	2c64 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x3e4>
    2a24:	stp	x27, x28, [sp, #80]
    2a28:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2a2c:	add	x3, x3, #0x0
    2a30:	mov	w2, #0x250                 	// #592
    2a34:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2a38:	add	x1, x1, #0x0
    2a3c:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2a40:	add	x0, x0, #0x0
    2a44:	bl	0 <__assert_fail>
    2a48:	mov	w5, #0x1                   	// #1
    2a4c:	mov	x6, #0x0                   	// #0
    2a50:	cmn	w2, #0x1
    2a54:	b.ne	2a68 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x1e8>  // b.any
    2a58:	ubfiz	x23, x1, #5, #32
    2a5c:	add	x23, x0, x23
    2a60:	ldr	x26, [x20, #96]
    2a64:	b	29c4 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x144>
    2a68:	cmp	x6, #0x0
    2a6c:	ccmn	w2, #0x2, #0x0, eq  // eq = none
    2a70:	csel	x6, x6, x23, ne  // ne = any
    2a74:	add	w7, w5, #0x1
    2a78:	add	w5, w5, w4
    2a7c:	and	w4, w3, w5
    2a80:	and	w5, w3, w5
    2a84:	lsl	x2, x5, #5
    2a88:	add	x23, x0, x2
    2a8c:	ldr	w2, [x0, x2]
    2a90:	cmp	w2, w19
    2a94:	b.eq	29c0 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x140>  // b.none
    2a98:	mov	w5, w7
    2a9c:	b	2a50 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x1d0>
    2aa0:	stp	x27, x28, [sp, #80]
    2aa4:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2aa8:	add	x3, x3, #0x0
    2aac:	mov	w2, #0x4c7                 	// #1223
    2ab0:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2ab4:	add	x1, x1, #0x0
    2ab8:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2abc:	add	x0, x0, #0x0
    2ac0:	bl	0 <__assert_fail>
    2ac4:	stp	x27, x28, [sp, #80]
    2ac8:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2acc:	add	x3, x3, #0x0
    2ad0:	mov	w2, #0x4c8                 	// #1224
    2ad4:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2ad8:	add	x1, x1, #0x0
    2adc:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2ae0:	add	x0, x0, #0x0
    2ae4:	bl	0 <__assert_fail>
    2ae8:	ldr	x2, [x20, #96]
    2aec:	cmp	x2, x26
    2af0:	b.ne	2b24 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x2a4>  // b.any
    2af4:	ldr	x2, [x23, #8]
    2af8:	ldr	x4, [x23, #16]
    2afc:	cmp	x4, x2
    2b00:	b.eq	29f4 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x174>  // b.none
    2b04:	ldr	w5, [sp, #124]
    2b08:	ldr	x3, [x2, #8]
    2b0c:	cmp	x5, x3
    2b10:	b.ls	2b48 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x2c8>  // b.plast
    2b14:	add	x2, x2, #0x10
    2b18:	cmp	x4, x2
    2b1c:	b.ne	2b08 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x288>  // b.any
    2b20:	b	29f4 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x174>
    2b24:	stp	x27, x28, [sp, #80]
    2b28:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2b2c:	add	x3, x3, #0x0
    2b30:	mov	w2, #0x4b9                 	// #1209
    2b34:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2b38:	add	x1, x1, #0x0
    2b3c:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2b40:	add	x0, x0, #0x0
    2b44:	bl	0 <__assert_fail>
    2b48:	ldr	x0, [x2]
    2b4c:	str	x0, [x22]
    2b50:	str	x5, [x22, #8]
    2b54:	mov	x0, #0x1                   	// #1
    2b58:	str	x0, [x21]
    2b5c:	ldp	x25, x26, [sp, #64]
    2b60:	b	2914 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x94>
    2b64:	mov	x0, x1
    2b68:	b	2c64 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x3e4>
    2b6c:	stp	x27, x28, [sp, #80]
    2b70:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2b74:	add	x3, x3, #0x0
    2b78:	mov	w2, #0x4e0                 	// #1248
    2b7c:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2b80:	add	x1, x1, #0x0
    2b84:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2b88:	add	x0, x0, #0x0
    2b8c:	bl	0 <__assert_fail>
    2b90:	stp	x27, x28, [sp, #80]
    2b94:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2b98:	add	x3, x3, #0x0
    2b9c:	mov	w2, #0x4c7                 	// #1223
    2ba0:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2ba4:	add	x1, x1, #0x0
    2ba8:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2bac:	add	x0, x0, #0x0
    2bb0:	bl	0 <__assert_fail>
    2bb4:	cbz	x1, 2d24 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x4a4>
    2bb8:	ldr	x2, [x20, #96]
    2bbc:	cmp	x8, x2
    2bc0:	b.ne	2bf4 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x374>  // b.any
    2bc4:	ldr	x2, [x20, #96]
    2bc8:	cmp	x8, x2
    2bcc:	b.eq	2c7c <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x3fc>  // b.none
    2bd0:	stp	x27, x28, [sp, #80]
    2bd4:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2bd8:	add	x3, x3, #0x0
    2bdc:	mov	w2, #0x4b3                 	// #1203
    2be0:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2be4:	add	x1, x1, #0x0
    2be8:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2bec:	add	x0, x0, #0x0
    2bf0:	bl	0 <__assert_fail>
    2bf4:	stp	x27, x28, [sp, #80]
    2bf8:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2bfc:	add	x3, x3, #0x0
    2c00:	mov	w2, #0x4c8                 	// #1224
    2c04:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2c08:	add	x1, x1, #0x0
    2c0c:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2c10:	add	x0, x0, #0x0
    2c14:	bl	0 <__assert_fail>
    2c18:	stp	x27, x28, [sp, #80]
    2c1c:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2c20:	add	x3, x3, #0x0
    2c24:	mov	w2, #0x169                 	// #361
    2c28:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2c2c:	add	x1, x1, #0x0
    2c30:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2c34:	add	x0, x0, #0x0
    2c38:	bl	0 <__assert_fail>
    2c3c:	add	x0, x0, #0x20
    2c40:	cmp	x1, x0
    2c44:	b.cc	2d00 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x480>  // b.lo, b.ul, b.last
    2c48:	b.eq	2c64 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x3e4>  // b.none
    2c4c:	ldr	w2, [x0]
    2c50:	cmn	w2, #0x3
    2c54:	b.ls	2c64 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x3e4>  // b.plast
    2c58:	add	x0, x0, #0x20
    2c5c:	cmp	x1, x0
    2c60:	b.ne	2c4c <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x3cc>  // b.any
    2c64:	cbz	x0, 2bb4 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x334>
    2c68:	ldr	x2, [x20, #96]
    2c6c:	cmp	x8, x2
    2c70:	b.ne	2b90 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x310>  // b.any
    2c74:	cmp	x1, x0
    2c78:	b.eq	2d24 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x4a4>  // b.none
    2c7c:	ldr	w4, [sp, #124]
    2c80:	add	w3, w4, w19
    2c84:	ldr	w2, [x0]
    2c88:	cmp	w3, w2
    2c8c:	ccmp	w2, w19, #0x4, hi  // hi = pmore
    2c90:	b.eq	2c3c <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x3bc>  // b.none
    2c94:	ldr	x5, [x0, #16]
    2c98:	ldr	x6, [x0, #8]
    2c9c:	cmp	x6, x5
    2ca0:	b.eq	2c3c <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x3bc>  // b.none
    2ca4:	ldur	x9, [x5, #-16]
    2ca8:	ldur	x6, [x5, #-8]
    2cac:	add	x5, x6, w2, uxtw
    2cb0:	add	w7, w2, w5
    2cb4:	cmp	w7, w19
    2cb8:	b.ls	2c3c <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x3bc>  // b.plast
    2cbc:	cmp	w3, w5
    2cc0:	ccmp	w2, w19, #0x2, ls  // ls = plast
    2cc4:	b.hi	2c3c <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x3bc>  // b.pmore
    2cc8:	cmp	w2, w19
    2ccc:	csel	w19, w2, w19, cs  // cs = hs, nlast
    2cd0:	sub	w2, w19, w2
    2cd4:	mov	w4, w4
    2cd8:	add	x0, x2, x4
    2cdc:	cmp	x0, x6
    2ce0:	b.hi	2c18 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x398>  // b.pmore
    2ce4:	add	x9, x9, x2
    2ce8:	str	x9, [x22]
    2cec:	str	x4, [x22, #8]
    2cf0:	mov	x0, #0x1                   	// #1
    2cf4:	str	x0, [x21]
    2cf8:	ldp	x25, x26, [sp, #64]
    2cfc:	b	2914 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x94>
    2d00:	stp	x27, x28, [sp, #80]
    2d04:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2d08:	add	x3, x3, #0x0
    2d0c:	mov	w2, #0x4e0                 	// #1248
    2d10:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2d14:	add	x1, x1, #0x0
    2d18:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2d1c:	add	x0, x0, #0x0
    2d20:	bl	0 <__assert_fail>
    2d24:	ldr	x24, [x20, #88]
    2d28:	ldr	w25, [sp, #124]
    2d2c:	ldr	x0, [x24, #80]
    2d30:	add	x0, x0, x25
    2d34:	str	x0, [x24, #80]
    2d38:	ldr	x1, [x24]
    2d3c:	add	x0, x1, #0x7
    2d40:	and	x0, x0, #0xfffffffffffffff8
    2d44:	sub	x0, x0, x1
    2d48:	adds	x3, x25, x0
    2d4c:	b.cs	2df0 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x570>  // b.hs, b.nlast
    2d50:	ldr	x2, [x24, #8]
    2d54:	sub	x2, x2, x1
    2d58:	cmp	x3, x2
    2d5c:	b.ls	2e14 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x594>  // b.plast
    2d60:	stp	x27, x28, [sp, #80]
    2d64:	add	x28, x25, #0x7
    2d68:	cmp	x28, #0x1, lsl #12
    2d6c:	b.ls	2fd0 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x750>  // b.plast
    2d70:	mov	x0, x28
    2d74:	bl	0 <malloc>
    2d78:	mov	x27, x0
    2d7c:	cbz	x0, 2e64 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x5e4>
    2d80:	ldr	w0, [x24, #76]
    2d84:	ldr	w1, [x24, #72]
    2d88:	cmp	w1, w0
    2d8c:	b.cs	2e78 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x5f8>  // b.hs, b.nlast
    2d90:	ldr	w0, [x24, #72]
    2d94:	lsl	x0, x0, #4
    2d98:	ldr	x1, [x24, #64]
    2d9c:	add	x2, x1, x0
    2da0:	str	x27, [x1, x0]
    2da4:	str	x28, [x2, #8]
    2da8:	ldr	w0, [x24, #72]
    2dac:	mov	w1, w0
    2db0:	add	x1, x1, #0x1
    2db4:	ldr	w2, [x24, #76]
    2db8:	cmp	x1, x2
    2dbc:	b.hi	2f70 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x6f0>  // b.pmore
    2dc0:	add	w0, w0, #0x1
    2dc4:	str	w0, [x24, #72]
    2dc8:	adds	x0, x27, #0x7
    2dcc:	b.cs	2f90 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x710>  // b.hs, b.nlast
    2dd0:	and	x0, x0, #0xfffffffffffffff8
    2dd4:	add	x25, x25, x0
    2dd8:	add	x27, x27, x28
    2ddc:	mov	x2, x0
    2de0:	cmp	x25, x27
    2de4:	b.hi	2fb0 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x730>  // b.pmore
    2de8:	ldp	x27, x28, [sp, #80]
    2dec:	b	2e20 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x5a0>
    2df0:	stp	x27, x28, [sp, #80]
    2df4:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2df8:	add	x3, x3, #0x0
    2dfc:	mov	w2, #0xdc                  	// #220
    2e00:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2e04:	add	x1, x1, #0x0
    2e08:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2e0c:	add	x0, x0, #0x0
    2e10:	bl	0 <__assert_fail>
    2e14:	add	x2, x1, x0
    2e18:	add	x25, x2, x25
    2e1c:	str	x25, [x24]
    2e20:	str	x2, [sp, #152]
    2e24:	add	x8, sp, #0x80
    2e28:	ldr	w3, [sp, #124]
    2e2c:	mov	w1, w19
    2e30:	mov	x0, x20
    2e34:	bl	2300 <_ZN4llvm3msf17MappedBlockStream9readBytesEjNS_15MutableArrayRefIhEE>
    2e38:	ldr	x0, [sp, #128]
    2e3c:	ands	x1, x0, #0xfffffffffffffffe
    2e40:	cset	x0, ne  // ne = any
    2e44:	orr	x0, x0, x1
    2e48:	str	x0, [sp, #128]
    2e4c:	ands	x1, x0, #0xfffffffffffffffe
    2e50:	b.eq	3118 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x898>  // b.none
    2e54:	orr	x1, x1, #0x1
    2e58:	str	x1, [x21]
    2e5c:	ldp	x25, x26, [sp, #64]
    2e60:	b	2914 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x94>
    2e64:	mov	w1, #0x1                   	// #1
    2e68:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2e6c:	add	x0, x0, #0x0
    2e70:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    2e74:	b	2d80 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x500>
    2e78:	mov	w0, w0
    2e7c:	add	x0, x0, #0x2
    2e80:	orr	x0, x0, x0, lsr #1
    2e84:	orr	x0, x0, x0, lsr #2
    2e88:	orr	x0, x0, x0, lsr #4
    2e8c:	orr	x0, x0, x0, lsr #8
    2e90:	orr	x1, x0, x0, lsr #16
    2e94:	orr	x0, x1, x0, lsr #32
    2e98:	add	x0, x0, #0x1
    2e9c:	str	x0, [sp, #128]
    2ea0:	mov	x1, #0xffffffff            	// #4294967295
    2ea4:	str	x1, [sp, #168]
    2ea8:	cmp	x0, x1
    2eac:	add	x0, sp, #0x80
    2eb0:	add	x1, sp, #0xa8
    2eb4:	csel	x0, x0, x1, ls  // ls = plast
    2eb8:	ldr	x0, [x0]
    2ebc:	str	x0, [sp, #104]
    2ec0:	lsl	x0, x0, #4
    2ec4:	str	x0, [sp, #112]
    2ec8:	bl	0 <malloc>
    2ecc:	str	x0, [sp, #96]
    2ed0:	cbz	x0, 2f44 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x6c4>
    2ed4:	ldr	x0, [x24, #64]
    2ed8:	ldr	w4, [x24, #72]
    2edc:	add	x4, x0, x4, lsl #4
    2ee0:	cmp	x0, x4
    2ee4:	b.eq	2f1c <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x69c>  // b.none
    2ee8:	ldr	x1, [sp, #96]
    2eec:	ldp	x2, x3, [x0], #16
    2ef0:	stp	x2, x3, [x1], #16
    2ef4:	cmp	x4, x0
    2ef8:	b.ne	2eec <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x66c>  // b.any
    2efc:	ldr	x1, [x24, #64]
    2f00:	ldr	w0, [x24, #72]
    2f04:	add	x0, x1, x0, lsl #4
    2f08:	cmp	x1, x0
    2f0c:	b.eq	2f1c <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x69c>  // b.none
    2f10:	sub	x0, x0, #0x10
    2f14:	cmp	x1, x0
    2f18:	b.ne	2f10 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x690>  // b.any
    2f1c:	ldr	x0, [x24, #64]
    2f20:	add	x1, x24, #0x50
    2f24:	cmp	x0, x1
    2f28:	b.eq	2f30 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x6b0>  // b.none
    2f2c:	bl	0 <free>
    2f30:	ldr	x0, [sp, #96]
    2f34:	str	x0, [x24, #64]
    2f38:	ldr	w0, [sp, #104]
    2f3c:	str	w0, [x24, #76]
    2f40:	b	2d90 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x510>
    2f44:	ldr	x0, [sp, #112]
    2f48:	cbnz	x0, 2f5c <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x6dc>
    2f4c:	mov	x0, #0x1                   	// #1
    2f50:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2f54:	str	x0, [sp, #96]
    2f58:	b	2ed4 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x654>
    2f5c:	mov	w1, #0x1                   	// #1
    2f60:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2f64:	add	x0, x0, #0x0
    2f68:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    2f6c:	b	2ed4 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x654>
    2f70:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2f74:	add	x3, x3, #0x0
    2f78:	mov	w2, #0x43                  	// #67
    2f7c:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2f80:	add	x1, x1, #0x0
    2f84:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2f88:	add	x0, x0, #0x0
    2f8c:	bl	0 <__assert_fail>
    2f90:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2f94:	add	x3, x3, #0x0
    2f98:	mov	w2, #0xba                  	// #186
    2f9c:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2fa0:	add	x1, x1, #0x0
    2fa4:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2fa8:	add	x0, x0, #0x0
    2fac:	bl	0 <__assert_fail>
    2fb0:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2fb4:	add	x3, x3, #0x0
    2fb8:	mov	w2, #0xfb                  	// #251
    2fbc:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2fc0:	add	x1, x1, #0x0
    2fc4:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    2fc8:	add	x0, x0, #0x0
    2fcc:	bl	0 <__assert_fail>
    2fd0:	ldr	w0, [x24, #24]
    2fd4:	lsr	w1, w0, #7
    2fd8:	cmp	w0, #0xeff
    2fdc:	b.ls	3068 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x7e8>  // b.plast
    2fe0:	mov	x0, #0x40000000000         	// #4398046511104
    2fe4:	bl	0 <malloc>
    2fe8:	mov	x27, x0
    2fec:	cbz	x0, 3084 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x804>
    2ff0:	mov	x28, #0x40000000000         	// #4398046511104
    2ff4:	ldr	w1, [x24, #24]
    2ff8:	ldr	w0, [x24, #28]
    2ffc:	cmp	w1, w0
    3000:	b.cs	30a0 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x820>  // b.hs, b.nlast
    3004:	ldr	w1, [x24, #24]
    3008:	ldr	x0, [x24, #16]
    300c:	str	x27, [x0, x1, lsl #3]
    3010:	ldr	w0, [x24, #24]
    3014:	mov	w1, w0
    3018:	add	x1, x1, #0x1
    301c:	ldr	w2, [x24, #28]
    3020:	cmp	x1, x2
    3024:	b.hi	30b8 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x838>  // b.pmore
    3028:	add	w0, w0, #0x1
    302c:	str	w0, [x24, #24]
    3030:	str	x27, [x24]
    3034:	add	x28, x27, x28
    3038:	str	x28, [x24, #8]
    303c:	adds	x0, x27, #0x7
    3040:	b.cs	30d8 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x858>  // b.hs, b.nlast
    3044:	and	x0, x0, #0xfffffffffffffff8
    3048:	add	x1, x25, x0
    304c:	cmp	x28, x1
    3050:	b.cc	30f8 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x878>  // b.lo, b.ul, b.last
    3054:	mov	x2, x0
    3058:	add	x0, x0, x25
    305c:	str	x0, [x24]
    3060:	ldp	x27, x28, [sp, #80]
    3064:	b	2e20 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x5a0>
    3068:	mov	x28, #0x1000                	// #4096
    306c:	lsl	x28, x28, x1
    3070:	mov	x0, x28
    3074:	bl	0 <malloc>
    3078:	mov	x27, x0
    307c:	cbnz	x0, 2ff4 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x774>
    3080:	b	3088 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x808>
    3084:	mov	x28, #0x40000000000         	// #4398046511104
    3088:	mov	w1, #0x1                   	// #1
    308c:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    3090:	add	x0, x0, #0x0
    3094:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    3098:	mov	x27, #0x0                   	// #0
    309c:	b	2ff4 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x774>
    30a0:	mov	x3, #0x8                   	// #8
    30a4:	mov	x2, #0x0                   	// #0
    30a8:	add	x1, x24, #0x20
    30ac:	add	x0, x24, #0x10
    30b0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    30b4:	b	3004 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x784>
    30b8:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    30bc:	add	x3, x3, #0x0
    30c0:	mov	w2, #0x43                  	// #67
    30c4:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    30c8:	add	x1, x1, #0x0
    30cc:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    30d0:	add	x0, x0, #0x0
    30d4:	bl	0 <__assert_fail>
    30d8:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    30dc:	add	x3, x3, #0x0
    30e0:	mov	w2, #0xba                  	// #186
    30e4:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    30e8:	add	x1, x1, #0x0
    30ec:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    30f0:	add	x0, x0, #0x0
    30f4:	bl	0 <__assert_fail>
    30f8:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    30fc:	add	x3, x3, #0x0
    3100:	mov	w2, #0x105                 	// #261
    3104:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    3108:	add	x1, x1, #0x0
    310c:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    3110:	add	x0, x0, #0x0
    3114:	bl	0 <__assert_fail>
    3118:	tbnz	w0, #0, 322c <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x9ac>
    311c:	ldr	w0, [x20, #120]
    3120:	ldr	x1, [x20, #104]
    3124:	add	x0, x1, x0, lsl #5
    3128:	ldr	x1, [x20, #96]
    312c:	cbz	x23, 3970 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x10f0>
    3130:	cmp	x1, x26
    3134:	b.ne	3238 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x9b8>  // b.any
    3138:	cbz	x0, 3280 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xa00>
    313c:	ldr	x2, [x20, #96]
    3140:	cmp	x2, x1
    3144:	b.ne	325c <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x9dc>  // b.any
    3148:	cmp	x0, x23
    314c:	b.ne	3280 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xa00>  // b.any
    3150:	stp	x27, x28, [sp, #80]
    3154:	str	xzr, [sp, #128]
    3158:	str	xzr, [sp, #136]
    315c:	str	xzr, [sp, #144]
    3160:	add	x2, sp, #0x7c
    3164:	add	x1, sp, #0x98
    3168:	add	x0, sp, #0x80
    316c:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    3170:	ldr	x26, [sp, #136]
    3174:	ldr	x0, [sp, #128]
    3178:	sub	x26, x26, x0
    317c:	asr	x0, x26, #4
    3180:	cmp	xzr, x26, asr #4
    3184:	b.eq	32e4 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xa64>  // b.none
    3188:	mov	x1, #0x7ffffffffffffff     	// #576460752303423487
    318c:	cmp	x0, x1
    3190:	b.hi	32e0 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xa60>  // b.pmore
    3194:	mov	x0, x26
    3198:	bl	0 <_Znwm>
    319c:	mov	x24, x0
    31a0:	ldr	x23, [sp, #128]
    31a4:	ldr	x4, [sp, #136]
    31a8:	cmp	x23, x4
    31ac:	b.eq	32ec <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xa6c>  // b.none
    31b0:	mov	x0, x23
    31b4:	mov	x1, x24
    31b8:	ldp	x2, x3, [x0], #16
    31bc:	stp	x2, x3, [x1], #16
    31c0:	cmp	x4, x0
    31c4:	b.ne	31b8 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x938>  // b.any
    31c8:	sub	x4, x4, x23
    31cc:	add	x23, x24, x4
    31d0:	ldr	x25, [x20, #104]
    31d4:	ldr	w27, [x20, #120]
    31d8:	cbz	w27, 38cc <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x104c>
    31dc:	cmn	w19, #0x3
    31e0:	b.hi	32f4 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xa74>  // b.pmore
    31e4:	sub	w2, w27, #0x1
    31e8:	mov	w0, #0x25                  	// #37
    31ec:	mul	w0, w19, w0
    31f0:	and	w5, w0, w2
    31f4:	and	w0, w0, w2
    31f8:	lsl	x0, x0, #5
    31fc:	add	x4, x25, x0
    3200:	ldr	w3, [x25, x0]
    3204:	cmp	w3, w19
    3208:	b.ne	3314 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xa94>  // b.any
    320c:	cbz	x24, 3218 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x998>
    3210:	mov	x0, x24
    3214:	bl	0 <_ZdlPv>
    3218:	ldr	x0, [sp, #128]
    321c:	cbz	x0, 375c <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xedc>
    3220:	bl	0 <_ZdlPv>
    3224:	ldp	x27, x28, [sp, #80]
    3228:	b	329c <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xa1c>
    322c:	stp	x27, x28, [sp, #80]
    3230:	add	x0, sp, #0x80
    3234:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    3238:	stp	x27, x28, [sp, #80]
    323c:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    3240:	add	x3, x3, #0x0
    3244:	mov	w2, #0x4c7                 	// #1223
    3248:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    324c:	add	x1, x1, #0x0
    3250:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    3254:	add	x0, x0, #0x0
    3258:	bl	0 <__assert_fail>
    325c:	stp	x27, x28, [sp, #80]
    3260:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    3264:	add	x3, x3, #0x0
    3268:	mov	w2, #0x4c8                 	// #1224
    326c:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    3270:	add	x1, x1, #0x0
    3274:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    3278:	add	x0, x0, #0x0
    327c:	bl	0 <__assert_fail>
    3280:	ldr	x0, [x20, #96]
    3284:	cmp	x0, x26
    3288:	b.ne	32bc <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xa3c>  // b.any
    328c:	add	x2, sp, #0x7c
    3290:	add	x1, sp, #0x98
    3294:	add	x0, x23, #0x8
    3298:	bl	0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    329c:	ldr	w0, [sp, #124]
    32a0:	ldr	x1, [sp, #152]
    32a4:	str	x1, [x22]
    32a8:	str	x0, [x22, #8]
    32ac:	mov	x0, #0x1                   	// #1
    32b0:	str	x0, [x21]
    32b4:	ldp	x25, x26, [sp, #64]
    32b8:	b	2914 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x94>
    32bc:	stp	x27, x28, [sp, #80]
    32c0:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    32c4:	add	x3, x3, #0x0
    32c8:	mov	w2, #0x4b9                 	// #1209
    32cc:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    32d0:	add	x1, x1, #0x0
    32d4:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    32d8:	add	x0, x0, #0x0
    32dc:	bl	0 <__assert_fail>
    32e0:	bl	0 <_ZSt17__throw_bad_allocv>
    32e4:	mov	x24, #0x0                   	// #0
    32e8:	b	31a0 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x920>
    32ec:	mov	x23, x24
    32f0:	b	31d0 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x950>
    32f4:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    32f8:	add	x3, x3, #0x0
    32fc:	mov	w2, #0x250                 	// #592
    3300:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    3304:	add	x1, x1, #0x0
    3308:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    330c:	add	x0, x0, #0x0
    3310:	bl	0 <__assert_fail>
    3314:	mov	w1, #0x1                   	// #1
    3318:	mov	x0, #0x0                   	// #0
    331c:	cmn	w3, #0x1
    3320:	b.ne	33a8 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xb28>  // b.any
    3324:	cmp	x0, #0x0
    3328:	csel	x0, x0, x4, ne  // ne = any
    332c:	ldr	x1, [x20, #96]
    3330:	add	x1, x1, #0x1
    3334:	str	x1, [x20, #96]
    3338:	ldr	w1, [x20, #112]
    333c:	add	w2, w1, #0x1
    3340:	add	w1, w27, w27, lsl #1
    3344:	cmp	w1, w2, lsl #2
    3348:	b.ls	38d8 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x1058>  // b.plast
    334c:	ldr	w1, [x20, #116]
    3350:	sub	w1, w27, w1
    3354:	sub	w1, w1, w2
    3358:	cmp	w1, w27, lsr #3
    335c:	b.ls	3544 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xcc4>  // b.plast
    3360:	cbz	x0, 373c <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xebc>
    3364:	add	x2, x20, #0x60
    3368:	ldr	w1, [x20, #112]
    336c:	add	w1, w1, #0x1
    3370:	str	w1, [x20, #112]
    3374:	ldr	w1, [x0]
    3378:	cmn	w1, #0x1
    337c:	b.eq	338c <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xb0c>  // b.none
    3380:	ldr	w1, [x2, #20]
    3384:	sub	w1, w1, #0x1
    3388:	str	w1, [x2, #20]
    338c:	mov	x1, x0
    3390:	str	w19, [x1], #8
    3394:	str	x24, [x0, #8]
    3398:	str	x23, [x1, #8]
    339c:	add	x24, x24, x26
    33a0:	str	x24, [x1, #16]
    33a4:	b	3218 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x998>
    33a8:	cmp	x0, #0x0
    33ac:	ccmn	w3, #0x2, #0x0, eq  // eq = none
    33b0:	csel	x0, x0, x4, ne  // ne = any
    33b4:	add	w6, w1, #0x1
    33b8:	add	w1, w1, w5
    33bc:	and	w5, w2, w1
    33c0:	and	w1, w2, w1
    33c4:	lsl	x3, x1, #5
    33c8:	add	x4, x25, x1, lsl #5
    33cc:	ldr	w3, [x25, x3]
    33d0:	cmp	w3, w19
    33d4:	b.eq	320c <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x98c>  // b.none
    33d8:	mov	w1, w6
    33dc:	b	331c <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xa9c>
    33e0:	str	wzr, [x28, #16]
    33e4:	str	wzr, [x28, #20]
    33e8:	ldr	w1, [x28, #24]
    33ec:	sub	w2, w1, #0x1
    33f0:	tst	w2, w1
    33f4:	b.ne	3414 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xb94>  // b.any
    33f8:	ubfiz	x1, x1, #5, #32
    33fc:	add	x1, x0, x1
    3400:	mov	w2, #0xffffffff            	// #-1
    3404:	cmp	x1, x0
    3408:	b.eq	34b4 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xc34>  // b.none
    340c:	str	w2, [x0], #32
    3410:	b	3404 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xb84>
    3414:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    3418:	add	x3, x3, #0x0
    341c:	mov	w2, #0x15b                 	// #347
    3420:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    3424:	add	x1, x1, #0x0
    3428:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    342c:	add	x0, x0, #0x0
    3430:	bl	0 <__assert_fail>
    3434:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    3438:	add	x3, x3, #0x0
    343c:	mov	w2, #0x15b                 	// #347
    3440:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    3444:	add	x1, x1, #0x0
    3448:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    344c:	add	x0, x0, #0x0
    3450:	bl	0 <__assert_fail>
    3454:	mov	w1, #0x1                   	// #1
    3458:	mov	x0, #0x0                   	// #0
    345c:	cmn	w4, #0x1
    3460:	b.ne	3470 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xbf0>  // b.any
    3464:	cmp	x0, #0x0
    3468:	csel	x0, x0, x6, ne  // ne = any
    346c:	b	3768 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xee8>
    3470:	cmp	x0, #0x0
    3474:	ccmn	w4, #0x2, #0x0, eq  // eq = none
    3478:	csel	x0, x0, x6, ne  // ne = any
    347c:	add	w8, w1, #0x1
    3480:	add	w1, w7, w1
    3484:	and	w7, w3, w1
    3488:	and	w1, w3, w1
    348c:	lsl	x4, x1, #5
    3490:	add	x6, x5, x1, lsl #5
    3494:	ldr	w4, [x5, x4]
    3498:	cmp	w2, w4
    349c:	b.eq	37f8 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xf78>  // b.none
    34a0:	mov	w1, w8
    34a4:	b	345c <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xbdc>
    34a8:	ldr	x1, [sp, #96]
    34ac:	mov	x0, x25
    34b0:	bl	0 <_ZdlPvm>
    34b4:	ldr	w3, [x20, #120]
    34b8:	cbz	w3, 373c <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xebc>
    34bc:	cmn	w19, #0x3
    34c0:	b.hi	3508 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xc88>  // b.pmore
    34c4:	ldr	x6, [x20, #104]
    34c8:	sub	w3, w3, #0x1
    34cc:	mov	w1, #0x25                  	// #37
    34d0:	mul	w1, w19, w1
    34d4:	and	w1, w1, w3
    34d8:	mov	w4, #0x1                   	// #1
    34dc:	mov	x2, #0x0                   	// #0
    34e0:	ubfiz	x5, x1, #5, #32
    34e4:	add	x0, x6, x5
    34e8:	ldr	w5, [x6, x5]
    34ec:	cmp	w5, w19
    34f0:	b.eq	3364 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xae4>  // b.none
    34f4:	cmn	w5, #0x1
    34f8:	b.ne	3528 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xca8>  // b.any
    34fc:	cmp	x2, #0x0
    3500:	csel	x0, x0, x2, eq  // eq = none
    3504:	b	3364 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xae4>
    3508:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    350c:	add	x3, x3, #0x0
    3510:	mov	w2, #0x250                 	// #592
    3514:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    3518:	add	x1, x1, #0x0
    351c:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    3520:	add	x0, x0, #0x0
    3524:	bl	0 <__assert_fail>
    3528:	cmp	x2, #0x0
    352c:	ccmn	w5, #0x2, #0x0, eq  // eq = none
    3530:	add	w1, w1, w4
    3534:	and	w1, w3, w1
    3538:	add	w4, w4, #0x1
    353c:	csel	x2, x0, x2, eq  // eq = none
    3540:	b	34e0 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xc60>
    3544:	sub	w0, w27, #0x1
    3548:	orr	x0, x0, x0, lsr #1
    354c:	orr	x0, x0, x0, lsr #2
    3550:	orr	x0, x0, x0, lsr #4
    3554:	orr	x0, x0, x0, lsr #8
    3558:	orr	x0, x0, x0, lsr #16
    355c:	add	x0, x0, #0x1
    3560:	cmp	w0, #0x40
    3564:	mov	w1, #0x40                  	// #64
    3568:	csel	w0, w0, w1, cs  // cs = hs, nlast
    356c:	add	x28, x20, #0x60
    3570:	str	w0, [x28, #24]
    3574:	ubfiz	x0, x0, #5, #32
    3578:	bl	0 <_Znwm>
    357c:	str	x0, [x28, #8]
    3580:	cbz	x25, 35d8 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xd58>
    3584:	ubfiz	x1, x27, #5, #32
    3588:	str	x1, [sp, #96]
    358c:	add	x28, x25, x1
    3590:	str	wzr, [x20, #112]
    3594:	str	wzr, [x20, #116]
    3598:	ldr	w1, [x20, #120]
    359c:	sub	w2, w1, #0x1
    35a0:	tst	w2, w1
    35a4:	b.ne	362c <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xdac>  // b.any
    35a8:	ubfiz	x1, x1, #5, #32
    35ac:	add	x1, x0, x1
    35b0:	mov	w2, #0xffffffff            	// #-1
    35b4:	cmp	x0, x1
    35b8:	b.eq	35c8 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xd48>  // b.none
    35bc:	str	w2, [x0], #32
    35c0:	cmp	x1, x0
    35c4:	b.ne	35bc <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xd3c>  // b.any
    35c8:	cmp	x25, x28
    35cc:	b.eq	36a0 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xe20>  // b.none
    35d0:	mov	x27, x25
    35d4:	b	386c <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xfec>
    35d8:	str	wzr, [x28, #16]
    35dc:	str	wzr, [x28, #20]
    35e0:	ldr	w1, [x28, #24]
    35e4:	sub	w2, w1, #0x1
    35e8:	tst	w2, w1
    35ec:	b.ne	360c <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xd8c>  // b.any
    35f0:	ubfiz	x1, x1, #5, #32
    35f4:	add	x1, x0, x1
    35f8:	mov	w2, #0xffffffff            	// #-1
    35fc:	cmp	x1, x0
    3600:	b.eq	36ac <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xe2c>  // b.none
    3604:	str	w2, [x0], #32
    3608:	b	35fc <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xd7c>
    360c:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    3610:	add	x3, x3, #0x0
    3614:	mov	w2, #0x15b                 	// #347
    3618:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    361c:	add	x1, x1, #0x0
    3620:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    3624:	add	x0, x0, #0x0
    3628:	bl	0 <__assert_fail>
    362c:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    3630:	add	x3, x3, #0x0
    3634:	mov	w2, #0x15b                 	// #347
    3638:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    363c:	add	x1, x1, #0x0
    3640:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    3644:	add	x0, x0, #0x0
    3648:	bl	0 <__assert_fail>
    364c:	mov	w1, #0x1                   	// #1
    3650:	mov	x0, #0x0                   	// #0
    3654:	cmn	w4, #0x1
    3658:	b.ne	3668 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xde8>  // b.any
    365c:	cmp	x0, #0x0
    3660:	csel	x0, x0, x6, ne  // ne = any
    3664:	b	381c <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xf9c>
    3668:	cmp	x0, #0x0
    366c:	ccmn	w4, #0x2, #0x0, eq  // eq = none
    3670:	csel	x0, x0, x6, ne  // ne = any
    3674:	add	w8, w1, #0x1
    3678:	add	w1, w1, w7
    367c:	and	w7, w3, w1
    3680:	and	w1, w3, w1
    3684:	lsl	x4, x1, #5
    3688:	add	x6, x5, x1, lsl #5
    368c:	ldr	w4, [x5, x4]
    3690:	cmp	w2, w4
    3694:	b.eq	38ac <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x102c>  // b.none
    3698:	mov	w1, w8
    369c:	b	3654 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xdd4>
    36a0:	ldr	x1, [sp, #96]
    36a4:	mov	x0, x25
    36a8:	bl	0 <_ZdlPvm>
    36ac:	ldr	w3, [x20, #120]
    36b0:	cbz	w3, 373c <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xebc>
    36b4:	cmn	w19, #0x3
    36b8:	b.hi	3700 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xe80>  // b.pmore
    36bc:	ldr	x6, [x20, #104]
    36c0:	sub	w3, w3, #0x1
    36c4:	mov	w1, #0x25                  	// #37
    36c8:	mul	w1, w19, w1
    36cc:	and	w1, w1, w3
    36d0:	mov	w4, #0x1                   	// #1
    36d4:	mov	x2, #0x0                   	// #0
    36d8:	ubfiz	x5, x1, #5, #32
    36dc:	add	x0, x6, x5
    36e0:	ldr	w5, [x6, x5]
    36e4:	cmp	w5, w19
    36e8:	b.eq	3364 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xae4>  // b.none
    36ec:	cmn	w5, #0x1
    36f0:	b.ne	3720 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xea0>  // b.any
    36f4:	cmp	x2, #0x0
    36f8:	csel	x0, x0, x2, eq  // eq = none
    36fc:	b	3364 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xae4>
    3700:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    3704:	add	x3, x3, #0x0
    3708:	mov	w2, #0x250                 	// #592
    370c:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    3710:	add	x1, x1, #0x0
    3714:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    3718:	add	x0, x0, #0x0
    371c:	bl	0 <__assert_fail>
    3720:	cmp	x2, #0x0
    3724:	ccmn	w5, #0x2, #0x0, eq  // eq = none
    3728:	add	w1, w1, w4
    372c:	and	w1, w3, w1
    3730:	add	w4, w4, #0x1
    3734:	csel	x2, x0, x2, eq  // eq = none
    3738:	b	36d8 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xe58>
    373c:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    3740:	add	x3, x3, #0x0
    3744:	mov	w2, #0x22f                 	// #559
    3748:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    374c:	add	x1, x1, #0x0
    3750:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    3754:	add	x0, x0, #0x0
    3758:	bl	0 <__assert_fail>
    375c:	ldp	x27, x28, [sp, #80]
    3760:	b	329c <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xa1c>
    3764:	mov	x0, #0x0                   	// #0
    3768:	mov	x1, x0
    376c:	str	w2, [x1], #8
    3770:	ldr	x2, [x27, #8]
    3774:	str	x2, [x0, #8]
    3778:	ldr	x0, [x27, #16]
    377c:	str	x0, [x1, #8]
    3780:	ldr	x0, [x27, #24]
    3784:	str	x0, [x1, #16]
    3788:	str	xzr, [x27, #24]
    378c:	str	xzr, [x27, #16]
    3790:	str	xzr, [x27, #8]
    3794:	ldr	w0, [x20, #112]
    3798:	add	w0, w0, #0x1
    379c:	str	w0, [x20, #112]
    37a0:	ldr	x0, [x27, #8]
    37a4:	cbz	x0, 37ac <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xf2c>
    37a8:	bl	0 <_ZdlPv>
    37ac:	add	x27, x27, #0x20
    37b0:	cmp	x28, x27
    37b4:	b.eq	34a8 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xc28>  // b.none
    37b8:	ldr	w2, [x27]
    37bc:	cmn	w2, #0x3
    37c0:	b.hi	37ac <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xf2c>  // b.pmore
    37c4:	ldr	w3, [x20, #120]
    37c8:	cbz	w3, 3764 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xee4>
    37cc:	ldr	x5, [x20, #104]
    37d0:	sub	w3, w3, #0x1
    37d4:	mov	w0, #0x25                  	// #37
    37d8:	mul	w0, w2, w0
    37dc:	and	w7, w0, w3
    37e0:	and	w0, w0, w3
    37e4:	lsl	x0, x0, #5
    37e8:	add	x6, x5, x0
    37ec:	ldr	w4, [x5, x0]
    37f0:	cmp	w4, w2
    37f4:	b.ne	3454 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xbd4>  // b.any
    37f8:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    37fc:	add	x3, x3, #0x0
    3800:	mov	w2, #0x17a                 	// #378
    3804:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    3808:	add	x1, x1, #0x0
    380c:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    3810:	add	x0, x0, #0x0
    3814:	bl	0 <__assert_fail>
    3818:	mov	x0, #0x0                   	// #0
    381c:	mov	x1, x0
    3820:	str	w2, [x1], #8
    3824:	ldr	x2, [x27, #8]
    3828:	str	x2, [x0, #8]
    382c:	ldr	x0, [x27, #16]
    3830:	str	x0, [x1, #8]
    3834:	ldr	x0, [x27, #24]
    3838:	str	x0, [x1, #16]
    383c:	str	xzr, [x27, #24]
    3840:	str	xzr, [x27, #16]
    3844:	str	xzr, [x27, #8]
    3848:	ldr	w0, [x20, #112]
    384c:	add	w0, w0, #0x1
    3850:	str	w0, [x20, #112]
    3854:	ldr	x0, [x27, #8]
    3858:	cbz	x0, 3860 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xfe0>
    385c:	bl	0 <_ZdlPv>
    3860:	add	x27, x27, #0x20
    3864:	cmp	x28, x27
    3868:	b.eq	36a0 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xe20>  // b.none
    386c:	ldr	w2, [x27]
    3870:	cmn	w2, #0x3
    3874:	b.hi	3860 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xfe0>  // b.pmore
    3878:	ldr	w3, [x20, #120]
    387c:	cbz	w3, 3818 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xf98>
    3880:	ldr	x5, [x20, #104]
    3884:	sub	w3, w3, #0x1
    3888:	mov	w0, #0x25                  	// #37
    388c:	mul	w0, w2, w0
    3890:	and	w7, w0, w3
    3894:	and	w0, w0, w3
    3898:	lsl	x0, x0, #5
    389c:	add	x6, x5, x0
    38a0:	ldr	w4, [x5, x0]
    38a4:	cmp	w4, w2
    38a8:	b.ne	364c <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xdcc>  // b.any
    38ac:	adrp	x3, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    38b0:	add	x3, x3, #0x0
    38b4:	mov	w2, #0x17a                 	// #378
    38b8:	adrp	x1, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    38bc:	add	x1, x1, #0x0
    38c0:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStream9getLengthEv>
    38c4:	add	x0, x0, #0x0
    38c8:	bl	0 <__assert_fail>
    38cc:	ldr	x0, [x20, #96]
    38d0:	add	x0, x0, #0x1
    38d4:	str	x0, [x20, #96]
    38d8:	lsl	w0, w27, #1
    38dc:	sub	w0, w0, #0x1
    38e0:	orr	x0, x0, x0, lsr #1
    38e4:	orr	x0, x0, x0, lsr #2
    38e8:	orr	x0, x0, x0, lsr #4
    38ec:	orr	x0, x0, x0, lsr #8
    38f0:	orr	x0, x0, x0, lsr #16
    38f4:	add	x0, x0, #0x1
    38f8:	cmp	w0, #0x40
    38fc:	mov	w1, #0x40                  	// #64
    3900:	csel	w0, w0, w1, cs  // cs = hs, nlast
    3904:	add	x28, x20, #0x60
    3908:	str	w0, [x28, #24]
    390c:	ubfiz	x0, x0, #5, #32
    3910:	bl	0 <_Znwm>
    3914:	str	x0, [x28, #8]
    3918:	cbz	x25, 33e0 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xb60>
    391c:	ubfiz	x1, x27, #5, #32
    3920:	str	x1, [sp, #96]
    3924:	add	x28, x25, x1
    3928:	str	wzr, [x20, #112]
    392c:	str	wzr, [x20, #116]
    3930:	ldr	w1, [x20, #120]
    3934:	sub	w2, w1, #0x1
    3938:	tst	w2, w1
    393c:	b.ne	3434 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xbb4>  // b.any
    3940:	ubfiz	x1, x1, #5, #32
    3944:	add	x1, x0, x1
    3948:	mov	w2, #0xffffffff            	// #-1
    394c:	cmp	x0, x1
    3950:	b.eq	3960 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x10e0>  // b.none
    3954:	str	w2, [x0], #32
    3958:	cmp	x1, x0
    395c:	b.ne	3954 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x10d4>  // b.any
    3960:	cmp	x25, x28
    3964:	b.eq	34a8 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xc28>  // b.none
    3968:	mov	x27, x25
    396c:	b	37b8 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0xf38>
    3970:	cbnz	x0, 313c <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x8bc>
    3974:	stp	x27, x28, [sp, #80]
    3978:	b	3154 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x8d4>
    397c:	cbnz	x1, 29e0 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x160>
    3980:	b	29f4 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE+0x174>

0000000000003984 <_ZN4llvm3msf25WritableMappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE>:
    3984:	stp	x29, x30, [sp, #-32]!
    3988:	mov	x29, sp
    398c:	str	x19, [sp, #16]
    3990:	mov	x19, x8
    3994:	add	x0, x0, #0x8
    3998:	bl	2880 <_ZN4llvm3msf17MappedBlockStream9readBytesEjjRNS_8ArrayRefIhEE>
    399c:	mov	x0, x19
    39a0:	ldr	x19, [sp, #16]
    39a4:	ldp	x29, x30, [sp], #32
    39a8:	ret

Disassembly of section .text._ZNK4llvm12BinaryStream8getFlagsEv:

0000000000000000 <_ZNK4llvm12BinaryStream8getFlagsEv>:
   0:	mov	w0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZNK4llvm20WritableBinaryStream8getFlagsEv:

0000000000000000 <_ZNK4llvm20WritableBinaryStream8getFlagsEv>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZNK4llvm3msf17MappedBlockStream9getEndianEv:

0000000000000000 <_ZNK4llvm3msf17MappedBlockStream9getEndianEv>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZNK4llvm3msf25WritableMappedBlockStream9getEndianEv:

0000000000000000 <_ZNK4llvm3msf25WritableMappedBlockStream9getEndianEv>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZN4llvm3msf17MappedBlockStreamD0Ev:

0000000000000000 <_ZN4llvm3msf17MappedBlockStreamD0Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x1, x0
  14:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStreamD0Ev>
  18:	ldr	x0, [x0]
  1c:	add	x0, x0, #0x10
  20:	str	x0, [x1], #96
  24:	ldr	w0, [x1, #24]
  28:	cbz	w0, 6c <_ZN4llvm3msf17MappedBlockStreamD0Ev+0x6c>
  2c:	str	x21, [sp, #32]
  30:	ldr	x20, [x19, #104]
  34:	ubfiz	x0, x0, #5, #32
  38:	add	x21, x20, x0
  3c:	b	50 <_ZN4llvm3msf17MappedBlockStreamD0Ev+0x50>
  40:	bl	0 <_ZdlPv>
  44:	add	x20, x20, #0x20
  48:	cmp	x21, x20
  4c:	b.eq	68 <_ZN4llvm3msf17MappedBlockStreamD0Ev+0x68>  // b.none
  50:	ldr	w0, [x20]
  54:	cmn	w0, #0x3
  58:	b.hi	44 <_ZN4llvm3msf17MappedBlockStreamD0Ev+0x44>  // b.pmore
  5c:	ldr	x0, [x20, #8]
  60:	cbnz	x0, 40 <_ZN4llvm3msf17MappedBlockStreamD0Ev+0x40>
  64:	b	44 <_ZN4llvm3msf17MappedBlockStreamD0Ev+0x44>
  68:	ldr	x21, [sp, #32]
  6c:	ldr	w1, [x19, #120]
  70:	lsl	x1, x1, #5
  74:	ldr	x0, [x19, #104]
  78:	bl	0 <_ZdlPvm>
  7c:	ldr	x20, [x19, #56]
  80:	cbz	x20, ac <_ZN4llvm3msf17MappedBlockStreamD0Ev+0xac>
  84:	adrp	x0, 0 <__pthread_key_create>
  88:	ldr	x0, [x0]
  8c:	cbz	x0, d0 <_ZN4llvm3msf17MappedBlockStreamD0Ev+0xd0>
  90:	add	x1, x20, #0x8
  94:	ldaxr	w0, [x1]
  98:	sub	w2, w0, #0x1
  9c:	stlxr	w3, w2, [x1]
  a0:	cbnz	w3, 94 <_ZN4llvm3msf17MappedBlockStreamD0Ev+0x94>
  a4:	cmp	w0, #0x1
  a8:	b.eq	e0 <_ZN4llvm3msf17MappedBlockStreamD0Ev+0xe0>  // b.none
  ac:	ldr	x0, [x19, #24]
  b0:	cbz	x0, b8 <_ZN4llvm3msf17MappedBlockStreamD0Ev+0xb8>
  b4:	bl	0 <_ZdlPv>
  b8:	mov	x1, #0x80                  	// #128
  bc:	mov	x0, x19
  c0:	bl	0 <_ZdlPvm>
  c4:	ldp	x19, x20, [sp, #16]
  c8:	ldp	x29, x30, [sp], #48
  cc:	ret
  d0:	ldr	w0, [x20, #8]
  d4:	sub	w1, w0, #0x1
  d8:	str	w1, [x20, #8]
  dc:	b	a4 <_ZN4llvm3msf17MappedBlockStreamD0Ev+0xa4>
  e0:	ldr	x0, [x20]
  e4:	ldr	x1, [x0, #16]
  e8:	mov	x0, x20
  ec:	blr	x1
  f0:	adrp	x0, 0 <__pthread_key_create>
  f4:	ldr	x0, [x0]
  f8:	cbz	x0, 12c <_ZN4llvm3msf17MappedBlockStreamD0Ev+0x12c>
  fc:	add	x1, x20, #0xc
 100:	ldaxr	w0, [x1]
 104:	sub	w2, w0, #0x1
 108:	stlxr	w3, w2, [x1]
 10c:	cbnz	w3, 100 <_ZN4llvm3msf17MappedBlockStreamD0Ev+0x100>
 110:	cmp	w0, #0x1
 114:	b.ne	ac <_ZN4llvm3msf17MappedBlockStreamD0Ev+0xac>  // b.any
 118:	ldr	x0, [x20]
 11c:	ldr	x1, [x0, #24]
 120:	mov	x0, x20
 124:	blr	x1
 128:	b	ac <_ZN4llvm3msf17MappedBlockStreamD0Ev+0xac>
 12c:	ldr	w0, [x20, #12]
 130:	sub	w1, w0, #0x1
 134:	str	w1, [x20, #12]
 138:	b	110 <_ZN4llvm3msf17MappedBlockStreamD0Ev+0x110>

Disassembly of section .text._ZN4llvm3msf25WritableMappedBlockStreamD0Ev:

0000000000000000 <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	adrp	x0, 0 <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev>
  14:	ldr	x0, [x0]
  18:	add	x0, x0, #0x10
  1c:	str	x0, [x19]
  20:	ldr	x20, [x19, #144]
  24:	cbz	x20, 50 <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev+0x50>
  28:	adrp	x0, 0 <__pthread_key_create>
  2c:	ldr	x0, [x0]
  30:	cbz	x0, 7c <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev+0x7c>
  34:	add	x1, x20, #0x8
  38:	ldaxr	w0, [x1]
  3c:	sub	w2, w0, #0x1
  40:	stlxr	w3, w2, [x1]
  44:	cbnz	w3, 38 <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev+0x38>
  48:	cmp	w0, #0x1
  4c:	b.eq	8c <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev+0x8c>  // b.none
  50:	adrp	x0, 0 <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev>
  54:	ldr	x0, [x0]
  58:	add	x0, x0, #0x10
  5c:	str	x0, [x19, #8]
  60:	ldr	w0, [x19, #128]
  64:	cbz	w0, 114 <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev+0x114>
  68:	str	x21, [sp, #32]
  6c:	ldr	x20, [x19, #112]
  70:	ubfiz	x0, x0, #5, #32
  74:	add	x21, x20, x0
  78:	b	f8 <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev+0xf8>
  7c:	ldr	w0, [x20, #8]
  80:	sub	w1, w0, #0x1
  84:	str	w1, [x20, #8]
  88:	b	48 <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev+0x48>
  8c:	ldr	x0, [x20]
  90:	ldr	x1, [x0, #16]
  94:	mov	x0, x20
  98:	blr	x1
  9c:	adrp	x0, 0 <__pthread_key_create>
  a0:	ldr	x0, [x0]
  a4:	cbz	x0, d8 <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev+0xd8>
  a8:	add	x1, x20, #0xc
  ac:	ldaxr	w0, [x1]
  b0:	sub	w2, w0, #0x1
  b4:	stlxr	w3, w2, [x1]
  b8:	cbnz	w3, ac <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev+0xac>
  bc:	cmp	w0, #0x1
  c0:	b.ne	50 <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev+0x50>  // b.any
  c4:	ldr	x0, [x20]
  c8:	ldr	x1, [x0, #24]
  cc:	mov	x0, x20
  d0:	blr	x1
  d4:	b	50 <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev+0x50>
  d8:	ldr	w0, [x20, #12]
  dc:	sub	w1, w0, #0x1
  e0:	str	w1, [x20, #12]
  e4:	b	bc <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev+0xbc>
  e8:	bl	0 <_ZdlPv>
  ec:	add	x20, x20, #0x20
  f0:	cmp	x21, x20
  f4:	b.eq	110 <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev+0x110>  // b.none
  f8:	ldr	w0, [x20]
  fc:	cmn	w0, #0x3
 100:	b.hi	ec <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev+0xec>  // b.pmore
 104:	ldr	x0, [x20, #8]
 108:	cbnz	x0, e8 <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev+0xe8>
 10c:	b	ec <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev+0xec>
 110:	ldr	x21, [sp, #32]
 114:	ldr	w1, [x19, #128]
 118:	lsl	x1, x1, #5
 11c:	ldr	x0, [x19, #112]
 120:	bl	0 <_ZdlPvm>
 124:	ldr	x20, [x19, #64]
 128:	cbz	x20, 154 <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev+0x154>
 12c:	adrp	x0, 0 <__pthread_key_create>
 130:	ldr	x0, [x0]
 134:	cbz	x0, 178 <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev+0x178>
 138:	add	x1, x20, #0x8
 13c:	ldaxr	w0, [x1]
 140:	sub	w2, w0, #0x1
 144:	stlxr	w3, w2, [x1]
 148:	cbnz	w3, 13c <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev+0x13c>
 14c:	cmp	w0, #0x1
 150:	b.eq	188 <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev+0x188>  // b.none
 154:	ldr	x0, [x19, #32]
 158:	cbz	x0, 160 <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev+0x160>
 15c:	bl	0 <_ZdlPv>
 160:	mov	x1, #0xb0                  	// #176
 164:	mov	x0, x19
 168:	bl	0 <_ZdlPvm>
 16c:	ldp	x19, x20, [sp, #16]
 170:	ldp	x29, x30, [sp], #48
 174:	ret
 178:	ldr	w0, [x20, #8]
 17c:	sub	w1, w0, #0x1
 180:	str	w1, [x20, #8]
 184:	b	14c <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev+0x14c>
 188:	ldr	x0, [x20]
 18c:	ldr	x1, [x0, #16]
 190:	mov	x0, x20
 194:	blr	x1
 198:	adrp	x0, 0 <__pthread_key_create>
 19c:	ldr	x0, [x0]
 1a0:	cbz	x0, 1d4 <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev+0x1d4>
 1a4:	add	x1, x20, #0xc
 1a8:	ldaxr	w0, [x1]
 1ac:	sub	w2, w0, #0x1
 1b0:	stlxr	w3, w2, [x1]
 1b4:	cbnz	w3, 1a8 <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev+0x1a8>
 1b8:	cmp	w0, #0x1
 1bc:	b.ne	154 <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev+0x154>  // b.any
 1c0:	ldr	x0, [x20]
 1c4:	ldr	x1, [x0, #24]
 1c8:	mov	x0, x20
 1cc:	blr	x1
 1d0:	b	154 <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev+0x154>
 1d4:	ldr	w0, [x20, #12]
 1d8:	sub	w1, w0, #0x1
 1dc:	str	w1, [x20, #12]
 1e0:	b	1b8 <_ZN4llvm3msf25WritableMappedBlockStreamD0Ev+0x1b8>

Disassembly of section .text._ZN4llvm18BinaryStreamWriterD2Ev:

0000000000000000 <_ZN4llvm18BinaryStreamWriterD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	adrp	x1, 0 <_ZN4llvm18BinaryStreamWriterD1Ev>
  10:	ldr	x1, [x1]
  14:	add	x1, x1, #0x10
  18:	str	x1, [x0]
  1c:	ldr	x19, [x0, #16]
  20:	cbz	x19, 4c <_ZN4llvm18BinaryStreamWriterD1Ev+0x4c>
  24:	adrp	x0, 0 <__pthread_key_create>
  28:	ldr	x0, [x0]
  2c:	cbz	x0, 58 <_ZN4llvm18BinaryStreamWriterD1Ev+0x58>
  30:	add	x1, x19, #0x8
  34:	ldaxr	w0, [x1]
  38:	sub	w2, w0, #0x1
  3c:	stlxr	w3, w2, [x1]
  40:	cbnz	w3, 34 <_ZN4llvm18BinaryStreamWriterD1Ev+0x34>
  44:	cmp	w0, #0x1
  48:	b.eq	68 <_ZN4llvm18BinaryStreamWriterD1Ev+0x68>  // b.none
  4c:	ldr	x19, [sp, #16]
  50:	ldp	x29, x30, [sp], #32
  54:	ret
  58:	ldr	w0, [x19, #8]
  5c:	sub	w1, w0, #0x1
  60:	str	w1, [x19, #8]
  64:	b	44 <_ZN4llvm18BinaryStreamWriterD1Ev+0x44>
  68:	ldr	x0, [x19]
  6c:	ldr	x1, [x0, #16]
  70:	mov	x0, x19
  74:	blr	x1
  78:	adrp	x0, 0 <__pthread_key_create>
  7c:	ldr	x0, [x0]
  80:	cbz	x0, b4 <_ZN4llvm18BinaryStreamWriterD1Ev+0xb4>
  84:	add	x1, x19, #0xc
  88:	ldaxr	w0, [x1]
  8c:	sub	w2, w0, #0x1
  90:	stlxr	w3, w2, [x1]
  94:	cbnz	w3, 88 <_ZN4llvm18BinaryStreamWriterD1Ev+0x88>
  98:	cmp	w0, #0x1
  9c:	b.ne	4c <_ZN4llvm18BinaryStreamWriterD1Ev+0x4c>  // b.any
  a0:	ldr	x0, [x19]
  a4:	ldr	x1, [x0, #24]
  a8:	mov	x0, x19
  ac:	blr	x1
  b0:	b	4c <_ZN4llvm18BinaryStreamWriterD1Ev+0x4c>
  b4:	ldr	w0, [x19, #12]
  b8:	sub	w1, w0, #0x1
  bc:	str	w1, [x19, #12]
  c0:	b	98 <_ZN4llvm18BinaryStreamWriterD1Ev+0x98>

Disassembly of section .text._ZN4llvm3msf25WritableMappedBlockStreamD2Ev:

0000000000000000 <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	adrp	x0, 0 <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev>
  14:	ldr	x0, [x0]
  18:	add	x0, x0, #0x10
  1c:	str	x0, [x19]
  20:	ldr	x20, [x19, #144]
  24:	cbz	x20, 50 <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev+0x50>
  28:	adrp	x0, 0 <__pthread_key_create>
  2c:	ldr	x0, [x0]
  30:	cbz	x0, 7c <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev+0x7c>
  34:	add	x1, x20, #0x8
  38:	ldaxr	w0, [x1]
  3c:	sub	w2, w0, #0x1
  40:	stlxr	w3, w2, [x1]
  44:	cbnz	w3, 38 <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev+0x38>
  48:	cmp	w0, #0x1
  4c:	b.eq	8c <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev+0x8c>  // b.none
  50:	adrp	x0, 0 <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev>
  54:	ldr	x0, [x0]
  58:	add	x0, x0, #0x10
  5c:	str	x0, [x19, #8]
  60:	ldr	w0, [x19, #128]
  64:	cbz	w0, 114 <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev+0x114>
  68:	str	x21, [sp, #32]
  6c:	ldr	x20, [x19, #112]
  70:	ubfiz	x0, x0, #5, #32
  74:	add	x21, x20, x0
  78:	b	f8 <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev+0xf8>
  7c:	ldr	w0, [x20, #8]
  80:	sub	w1, w0, #0x1
  84:	str	w1, [x20, #8]
  88:	b	48 <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev+0x48>
  8c:	ldr	x0, [x20]
  90:	ldr	x1, [x0, #16]
  94:	mov	x0, x20
  98:	blr	x1
  9c:	adrp	x0, 0 <__pthread_key_create>
  a0:	ldr	x0, [x0]
  a4:	cbz	x0, d8 <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev+0xd8>
  a8:	add	x1, x20, #0xc
  ac:	ldaxr	w0, [x1]
  b0:	sub	w2, w0, #0x1
  b4:	stlxr	w3, w2, [x1]
  b8:	cbnz	w3, ac <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev+0xac>
  bc:	cmp	w0, #0x1
  c0:	b.ne	50 <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev+0x50>  // b.any
  c4:	ldr	x0, [x20]
  c8:	ldr	x1, [x0, #24]
  cc:	mov	x0, x20
  d0:	blr	x1
  d4:	b	50 <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev+0x50>
  d8:	ldr	w0, [x20, #12]
  dc:	sub	w1, w0, #0x1
  e0:	str	w1, [x20, #12]
  e4:	b	bc <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev+0xbc>
  e8:	bl	0 <_ZdlPv>
  ec:	add	x20, x20, #0x20
  f0:	cmp	x21, x20
  f4:	b.eq	110 <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev+0x110>  // b.none
  f8:	ldr	w0, [x20]
  fc:	cmn	w0, #0x3
 100:	b.hi	ec <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev+0xec>  // b.pmore
 104:	ldr	x0, [x20, #8]
 108:	cbnz	x0, e8 <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev+0xe8>
 10c:	b	ec <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev+0xec>
 110:	ldr	x21, [sp, #32]
 114:	ldr	w1, [x19, #128]
 118:	lsl	x1, x1, #5
 11c:	ldr	x0, [x19, #112]
 120:	bl	0 <_ZdlPvm>
 124:	ldr	x20, [x19, #64]
 128:	cbz	x20, 154 <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev+0x154>
 12c:	adrp	x0, 0 <__pthread_key_create>
 130:	ldr	x0, [x0]
 134:	cbz	x0, 16c <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev+0x16c>
 138:	add	x1, x20, #0x8
 13c:	ldaxr	w0, [x1]
 140:	sub	w2, w0, #0x1
 144:	stlxr	w3, w2, [x1]
 148:	cbnz	w3, 13c <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev+0x13c>
 14c:	cmp	w0, #0x1
 150:	b.eq	17c <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev+0x17c>  // b.none
 154:	ldr	x0, [x19, #32]
 158:	cbz	x0, 160 <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev+0x160>
 15c:	bl	0 <_ZdlPv>
 160:	ldp	x19, x20, [sp, #16]
 164:	ldp	x29, x30, [sp], #48
 168:	ret
 16c:	ldr	w0, [x20, #8]
 170:	sub	w1, w0, #0x1
 174:	str	w1, [x20, #8]
 178:	b	14c <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev+0x14c>
 17c:	ldr	x0, [x20]
 180:	ldr	x1, [x0, #16]
 184:	mov	x0, x20
 188:	blr	x1
 18c:	adrp	x0, 0 <__pthread_key_create>
 190:	ldr	x0, [x0]
 194:	cbz	x0, 1c8 <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev+0x1c8>
 198:	add	x1, x20, #0xc
 19c:	ldaxr	w0, [x1]
 1a0:	sub	w2, w0, #0x1
 1a4:	stlxr	w3, w2, [x1]
 1a8:	cbnz	w3, 19c <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev+0x19c>
 1ac:	cmp	w0, #0x1
 1b0:	b.ne	154 <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev+0x154>  // b.any
 1b4:	ldr	x0, [x20]
 1b8:	ldr	x1, [x0, #24]
 1bc:	mov	x0, x20
 1c0:	blr	x1
 1c4:	b	154 <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev+0x154>
 1c8:	ldr	w0, [x20, #12]
 1cc:	sub	w1, w0, #0x1
 1d0:	str	w1, [x20, #12]
 1d4:	b	1ac <_ZN4llvm3msf25WritableMappedBlockStreamD1Ev+0x1ac>

Disassembly of section .text._ZN4llvm18BinaryStreamWriterD0Ev:

0000000000000000 <_ZN4llvm18BinaryStreamWriterD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	adrp	x0, 0 <_ZN4llvm18BinaryStreamWriterD0Ev>
  14:	ldr	x0, [x0]
  18:	add	x0, x0, #0x10
  1c:	str	x0, [x19]
  20:	ldr	x20, [x19, #16]
  24:	cbz	x20, 50 <_ZN4llvm18BinaryStreamWriterD0Ev+0x50>
  28:	adrp	x0, 0 <__pthread_key_create>
  2c:	ldr	x0, [x0]
  30:	cbz	x0, 68 <_ZN4llvm18BinaryStreamWriterD0Ev+0x68>
  34:	add	x1, x20, #0x8
  38:	ldaxr	w0, [x1]
  3c:	sub	w2, w0, #0x1
  40:	stlxr	w3, w2, [x1]
  44:	cbnz	w3, 38 <_ZN4llvm18BinaryStreamWriterD0Ev+0x38>
  48:	cmp	w0, #0x1
  4c:	b.eq	78 <_ZN4llvm18BinaryStreamWriterD0Ev+0x78>  // b.none
  50:	mov	x1, #0x38                  	// #56
  54:	mov	x0, x19
  58:	bl	0 <_ZdlPvm>
  5c:	ldp	x19, x20, [sp, #16]
  60:	ldp	x29, x30, [sp], #32
  64:	ret
  68:	ldr	w0, [x20, #8]
  6c:	sub	w1, w0, #0x1
  70:	str	w1, [x20, #8]
  74:	b	48 <_ZN4llvm18BinaryStreamWriterD0Ev+0x48>
  78:	ldr	x0, [x20]
  7c:	ldr	x1, [x0, #16]
  80:	mov	x0, x20
  84:	blr	x1
  88:	adrp	x0, 0 <__pthread_key_create>
  8c:	ldr	x0, [x0]
  90:	cbz	x0, c4 <_ZN4llvm18BinaryStreamWriterD0Ev+0xc4>
  94:	add	x1, x20, #0xc
  98:	ldaxr	w0, [x1]
  9c:	sub	w2, w0, #0x1
  a0:	stlxr	w3, w2, [x1]
  a4:	cbnz	w3, 98 <_ZN4llvm18BinaryStreamWriterD0Ev+0x98>
  a8:	cmp	w0, #0x1
  ac:	b.ne	50 <_ZN4llvm18BinaryStreamWriterD0Ev+0x50>  // b.any
  b0:	ldr	x0, [x20]
  b4:	ldr	x1, [x0, #24]
  b8:	mov	x0, x20
  bc:	blr	x1
  c0:	b	50 <_ZN4llvm18BinaryStreamWriterD0Ev+0x50>
  c4:	ldr	w0, [x20, #12]
  c8:	sub	w1, w0, #0x1
  cc:	str	w1, [x20, #12]
  d0:	b	a8 <_ZN4llvm18BinaryStreamWriterD0Ev+0xa8>

Disassembly of section .text._ZN4llvm3msf17MappedBlockStreamD2Ev:

0000000000000000 <_ZN4llvm3msf17MappedBlockStreamD1Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x1, x0
  14:	adrp	x0, 0 <_ZN4llvm3msf17MappedBlockStreamD1Ev>
  18:	ldr	x0, [x0]
  1c:	add	x0, x0, #0x10
  20:	str	x0, [x1], #96
  24:	ldr	w0, [x1, #24]
  28:	cbz	w0, 6c <_ZN4llvm3msf17MappedBlockStreamD1Ev+0x6c>
  2c:	str	x21, [sp, #32]
  30:	ldr	x20, [x19, #104]
  34:	ubfiz	x0, x0, #5, #32
  38:	add	x21, x20, x0
  3c:	b	50 <_ZN4llvm3msf17MappedBlockStreamD1Ev+0x50>
  40:	bl	0 <_ZdlPv>
  44:	add	x20, x20, #0x20
  48:	cmp	x21, x20
  4c:	b.eq	68 <_ZN4llvm3msf17MappedBlockStreamD1Ev+0x68>  // b.none
  50:	ldr	w0, [x20]
  54:	cmn	w0, #0x3
  58:	b.hi	44 <_ZN4llvm3msf17MappedBlockStreamD1Ev+0x44>  // b.pmore
  5c:	ldr	x0, [x20, #8]
  60:	cbnz	x0, 40 <_ZN4llvm3msf17MappedBlockStreamD1Ev+0x40>
  64:	b	44 <_ZN4llvm3msf17MappedBlockStreamD1Ev+0x44>
  68:	ldr	x21, [sp, #32]
  6c:	ldr	w1, [x19, #120]
  70:	lsl	x1, x1, #5
  74:	ldr	x0, [x19, #104]
  78:	bl	0 <_ZdlPvm>
  7c:	ldr	x20, [x19, #56]
  80:	cbz	x20, ac <_ZN4llvm3msf17MappedBlockStreamD1Ev+0xac>
  84:	adrp	x0, 0 <__pthread_key_create>
  88:	ldr	x0, [x0]
  8c:	cbz	x0, c4 <_ZN4llvm3msf17MappedBlockStreamD1Ev+0xc4>
  90:	add	x1, x20, #0x8
  94:	ldaxr	w0, [x1]
  98:	sub	w2, w0, #0x1
  9c:	stlxr	w3, w2, [x1]
  a0:	cbnz	w3, 94 <_ZN4llvm3msf17MappedBlockStreamD1Ev+0x94>
  a4:	cmp	w0, #0x1
  a8:	b.eq	d4 <_ZN4llvm3msf17MappedBlockStreamD1Ev+0xd4>  // b.none
  ac:	ldr	x0, [x19, #24]
  b0:	cbz	x0, b8 <_ZN4llvm3msf17MappedBlockStreamD1Ev+0xb8>
  b4:	bl	0 <_ZdlPv>
  b8:	ldp	x19, x20, [sp, #16]
  bc:	ldp	x29, x30, [sp], #48
  c0:	ret
  c4:	ldr	w0, [x20, #8]
  c8:	sub	w1, w0, #0x1
  cc:	str	w1, [x20, #8]
  d0:	b	a4 <_ZN4llvm3msf17MappedBlockStreamD1Ev+0xa4>
  d4:	ldr	x0, [x20]
  d8:	ldr	x1, [x0, #16]
  dc:	mov	x0, x20
  e0:	blr	x1
  e4:	adrp	x0, 0 <__pthread_key_create>
  e8:	ldr	x0, [x0]
  ec:	cbz	x0, 120 <_ZN4llvm3msf17MappedBlockStreamD1Ev+0x120>
  f0:	add	x1, x20, #0xc
  f4:	ldaxr	w0, [x1]
  f8:	sub	w2, w0, #0x1
  fc:	stlxr	w3, w2, [x1]
 100:	cbnz	w3, f4 <_ZN4llvm3msf17MappedBlockStreamD1Ev+0xf4>
 104:	cmp	w0, #0x1
 108:	b.ne	ac <_ZN4llvm3msf17MappedBlockStreamD1Ev+0xac>  // b.any
 10c:	ldr	x0, [x20]
 110:	ldr	x1, [x0, #24]
 114:	mov	x0, x20
 118:	blr	x1
 11c:	b	ac <_ZN4llvm3msf17MappedBlockStreamD1Ev+0xac>
 120:	ldr	w0, [x20, #12]
 124:	sub	w1, w0, #0x1
 128:	str	w1, [x20, #12]
 12c:	b	104 <_ZN4llvm3msf17MappedBlockStreamD1Ev+0x104>

Disassembly of section .text._ZN4llvm11safe_mallocEm:

0000000000000000 <_ZN4llvm11safe_mallocEm>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	bl	0 <malloc>
  14:	mov	x19, x0
  18:	cbz	x0, 2c <_ZN4llvm11safe_mallocEm+0x2c>
  1c:	mov	x0, x19
  20:	ldp	x19, x20, [sp, #16]
  24:	ldp	x29, x30, [sp], #32
  28:	ret
  2c:	cbnz	x20, 40 <_ZN4llvm11safe_mallocEm+0x40>
  30:	mov	x0, #0x1                   	// #1
  34:	bl	0 <_ZN4llvm11safe_mallocEm>
  38:	mov	x19, x0
  3c:	b	1c <_ZN4llvm11safe_mallocEm+0x1c>
  40:	mov	w1, #0x1                   	// #1
  44:	adrp	x0, 0 <_ZN4llvm11safe_mallocEm>
  48:	add	x0, x0, #0x0
  4c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  50:	b	1c <_ZN4llvm11safe_mallocEm+0x1c>

Disassembly of section .text._ZN4llvm11raw_ostreamlsEPKc:

0000000000000000 <_ZN4llvm11raw_ostreamlsEPKc>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	cbz	x1, 78 <_ZN4llvm11raw_ostreamlsEPKc+0x78>
  14:	str	x21, [sp, #32]
  18:	mov	x20, x1
  1c:	mov	x0, x1
  20:	bl	0 <strlen>
  24:	mov	x21, x0
  28:	ldr	x0, [x19, #24]
  2c:	ldr	x1, [x19, #16]
  30:	sub	x1, x1, x0
  34:	cmp	x21, x1
  38:	b.hi	60 <_ZN4llvm11raw_ostreamlsEPKc+0x60>  // b.pmore
  3c:	cbz	x21, 88 <_ZN4llvm11raw_ostreamlsEPKc+0x88>
  40:	mov	x2, x21
  44:	mov	x1, x20
  48:	bl	0 <memcpy>
  4c:	ldr	x0, [x19, #24]
  50:	add	x21, x0, x21
  54:	str	x21, [x19, #24]
  58:	ldr	x21, [sp, #32]
  5c:	b	78 <_ZN4llvm11raw_ostreamlsEPKc+0x78>
  60:	mov	x2, x21
  64:	mov	x1, x20
  68:	mov	x0, x19
  6c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  70:	mov	x19, x0
  74:	ldr	x21, [sp, #32]
  78:	mov	x0, x19
  7c:	ldp	x19, x20, [sp, #16]
  80:	ldp	x29, x30, [sp], #48
  84:	ret
  88:	ldr	x21, [sp, #32]
  8c:	b	78 <_ZN4llvm11raw_ostreamlsEPKc+0x78>

Disassembly of section .text._ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE:

0000000000000000 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	ldr	x0, [x1]
  14:	ands	x0, x0, #0xfffffffffffffffe
  18:	b.eq	3c <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE+0x3c>  // b.none
  1c:	ldr	x1, [x0]
  20:	ldr	x2, [x1, #16]
  24:	mov	x1, x19
  28:	blr	x2
  2c:	mov	x0, x19
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	ret
  3c:	ldr	x1, [x19, #24]
  40:	ldr	x0, [x19, #16]
  44:	sub	x0, x0, x1
  48:	cmp	x0, #0x6
  4c:	b.ls	78 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE+0x78>  // b.plast
  50:	adrp	x0, 0 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE>
  54:	add	x0, x0, #0x0
  58:	ldr	w2, [x0]
  5c:	str	w2, [x1]
  60:	ldur	w0, [x0, #3]
  64:	stur	w0, [x1, #3]
  68:	ldr	x0, [x19, #24]
  6c:	add	x0, x0, #0x7
  70:	str	x0, [x19, #24]
  74:	b	2c <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE+0x2c>
  78:	mov	x2, #0x7                   	// #7
  7c:	adrp	x1, 0 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE>
  80:	add	x1, x1, #0x0
  84:	mov	x0, x19
  88:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  8c:	b	2c <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE+0x2c>

Disassembly of section .text._ZN4llvm10make_errorINS_17BinaryStreamErrorEJNS_17stream_error_codeEEEENS_5ErrorEDpOT0_:

0000000000000000 <_ZN4llvm10make_errorINS_17BinaryStreamErrorEJNS_17stream_error_codeEEEENS_5ErrorEDpOT0_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	str	x21, [sp, #32]
  10:	mov	x20, x8
  14:	ldr	w21, [x0]
  18:	mov	x0, #0x30                  	// #48
  1c:	bl	0 <_Znwm>
  20:	mov	x19, x0
  24:	mov	w1, w21
  28:	bl	0 <_ZN4llvm17BinaryStreamErrorC1ENS_17stream_error_codeE>
  2c:	orr	x19, x19, #0x1
  30:	str	x19, [x20]
  34:	mov	x0, x20
  38:	ldp	x19, x20, [sp, #16]
  3c:	ldr	x21, [sp, #32]
  40:	ldp	x29, x30, [sp], #48
  44:	ret

Disassembly of section .text._ZNSt6vectorIN4llvm15MutableArrayRefIhEESaIS2_EE12emplace_backIJRPhRjEEEvDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm15MutableArrayRefIhEESaIS2_EE12emplace_backIJRPhRjEEEvDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x23, x24, [sp, #48]
  10:	stp	x25, x26, [sp, #64]
  14:	mov	x19, x0
  18:	mov	x24, x1
  1c:	mov	x25, x2
  20:	ldr	x20, [x0, #8]
  24:	ldr	x0, [x0, #16]
  28:	cmp	x20, x0
  2c:	b.eq	60 <_ZNSt6vectorIN4llvm15MutableArrayRefIhEESaIS2_EE12emplace_backIJRPhRjEEEvDpOT_+0x60>  // b.none
  30:	ldr	x1, [x1]
  34:	ldr	w0, [x2]
  38:	str	x1, [x20]
  3c:	str	x0, [x20, #8]
  40:	ldr	x0, [x19, #8]
  44:	add	x0, x0, #0x10
  48:	str	x0, [x19, #8]
  4c:	ldp	x19, x20, [sp, #16]
  50:	ldp	x23, x24, [sp, #48]
  54:	ldp	x25, x26, [sp, #64]
  58:	ldp	x29, x30, [sp], #80
  5c:	ret
  60:	stp	x21, x22, [sp, #32]
  64:	ldr	x23, [x19]
  68:	sub	x26, x20, x23
  6c:	asr	x1, x26, #4
  70:	mov	x0, #0x7ffffffffffffff     	// #576460752303423487
  74:	cmp	x0, x26, asr #4
  78:	b.eq	110 <_ZNSt6vectorIN4llvm15MutableArrayRefIhEESaIS2_EE12emplace_backIJRPhRjEEEvDpOT_+0x110>  // b.none
  7c:	cmp	x1, #0x0
  80:	csinc	x0, x1, xzr, ne  // ne = any
  84:	adds	x0, x0, x1
  88:	b.cs	11c <_ZNSt6vectorIN4llvm15MutableArrayRefIhEESaIS2_EE12emplace_backIJRPhRjEEEvDpOT_+0x11c>  // b.hs, b.nlast
  8c:	mov	x22, #0x7ffffffffffffff     	// #576460752303423487
  90:	cmp	x0, x22
  94:	csel	x22, x0, x22, ls  // ls = plast
  98:	mov	x21, #0x0                   	// #0
  9c:	cbz	x0, ac <_ZNSt6vectorIN4llvm15MutableArrayRefIhEESaIS2_EE12emplace_backIJRPhRjEEEvDpOT_+0xac>
  a0:	lsl	x0, x22, #4
  a4:	bl	0 <_Znwm>
  a8:	mov	x21, x0
  ac:	add	x0, x21, x26
  b0:	ldr	w1, [x25]
  b4:	ldr	x2, [x24]
  b8:	str	x2, [x21, x26]
  bc:	str	x1, [x0, #8]
  c0:	cmp	x20, x23
  c4:	b.eq	124 <_ZNSt6vectorIN4llvm15MutableArrayRefIhEESaIS2_EE12emplace_backIJRPhRjEEEvDpOT_+0x124>  // b.none
  c8:	mov	x2, x21
  cc:	mov	x1, x23
  d0:	ldp	x4, x5, [x1], #16
  d4:	stp	x4, x5, [x2], #16
  d8:	cmp	x20, x1
  dc:	b.ne	d0 <_ZNSt6vectorIN4llvm15MutableArrayRefIhEESaIS2_EE12emplace_backIJRPhRjEEEvDpOT_+0xd0>  // b.any
  e0:	sub	x20, x20, x23
  e4:	add	x20, x21, x20
  e8:	add	x20, x20, #0x10
  ec:	cbz	x23, f8 <_ZNSt6vectorIN4llvm15MutableArrayRefIhEESaIS2_EE12emplace_backIJRPhRjEEEvDpOT_+0xf8>
  f0:	mov	x0, x23
  f4:	bl	0 <_ZdlPv>
  f8:	str	x21, [x19]
  fc:	str	x20, [x19, #8]
 100:	add	x21, x21, x22, lsl #4
 104:	str	x21, [x19, #16]
 108:	ldp	x21, x22, [sp, #32]
 10c:	b	4c <_ZNSt6vectorIN4llvm15MutableArrayRefIhEESaIS2_EE12emplace_backIJRPhRjEEEvDpOT_+0x4c>
 110:	adrp	x0, 0 <_ZNSt6vectorIN4llvm15MutableArrayRefIhEESaIS2_EE12emplace_backIJRPhRjEEEvDpOT_>
 114:	add	x0, x0, #0x0
 118:	bl	0 <_ZSt20__throw_length_errorPKc>
 11c:	mov	x22, #0x7ffffffffffffff     	// #576460752303423487
 120:	b	a0 <_ZNSt6vectorIN4llvm15MutableArrayRefIhEESaIS2_EE12emplace_backIJRPhRjEEEvDpOT_+0xa0>
 124:	mov	x20, x21
 128:	b	e8 <_ZNSt6vectorIN4llvm15MutableArrayRefIhEESaIS2_EE12emplace_backIJRPhRjEEEvDpOT_+0xe8>

Disassembly of section .text._ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	stp	x25, x26, [sp, #64]
  18:	str	x27, [sp, #80]
  1c:	mov	x24, x0
  20:	mov	x19, x2
  24:	ldr	x21, [x0, #8]
  28:	ldr	x25, [x0]
  2c:	sub	x0, x21, x25
  30:	mov	x2, #0xfffffffffffffff     	// #1152921504606846975
  34:	cmp	x2, x0, asr #3
  38:	b.eq	9c <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x9c>  // b.none
  3c:	mov	x22, x1
  40:	mov	x27, x1
  44:	asr	x1, x0, #3
  48:	cmp	x1, #0x0
  4c:	csinc	x0, x1, xzr, ne  // ne = any
  50:	adds	x0, x0, x1
  54:	b.cs	150 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x150>  // b.hs, b.nlast
  58:	mov	x26, #0xfffffffffffffff     	// #1152921504606846975
  5c:	cmp	x0, x26
  60:	csel	x26, x0, x26, ls  // ls = plast
  64:	sub	x20, x22, x25
  68:	mov	x23, #0x0                   	// #0
  6c:	cbz	x0, 7c <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x7c>
  70:	lsl	x0, x26, #3
  74:	bl	0 <_Znwm>
  78:	mov	x23, x0
  7c:	ldr	x0, [x19]
  80:	str	xzr, [x19]
  84:	str	x0, [x23, x20]
  88:	cmp	x22, x25
  8c:	b.eq	148 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x148>  // b.none
  90:	mov	x20, x23
  94:	mov	x19, x25
  98:	b	b8 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xb8>
  9c:	adrp	x0, 0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
  a0:	add	x0, x0, #0x0
  a4:	bl	0 <_ZSt20__throw_length_errorPKc>
  a8:	add	x19, x19, #0x8
  ac:	add	x20, x20, #0x8
  b0:	cmp	x27, x19
  b4:	b.eq	dc <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xdc>  // b.none
  b8:	ldr	x0, [x19]
  bc:	str	xzr, [x19]
  c0:	str	x0, [x20]
  c4:	ldr	x0, [x19]
  c8:	cbz	x0, a8 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xa8>
  cc:	ldr	x1, [x0]
  d0:	ldr	x1, [x1, #8]
  d4:	blr	x1
  d8:	b	a8 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xa8>
  dc:	sub	x19, x22, x25
  e0:	add	x19, x23, x19
  e4:	add	x19, x19, #0x8
  e8:	cmp	x22, x21
  ec:	b.eq	110 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x110>  // b.none
  f0:	mov	x2, x22
  f4:	mov	x0, x19
  f8:	ldr	x1, [x2], #8
  fc:	str	x1, [x0], #8
 100:	cmp	x2, x21
 104:	b.ne	f8 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xf8>  // b.any
 108:	sub	x21, x21, x22
 10c:	add	x19, x19, x21
 110:	cbz	x25, 11c <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x11c>
 114:	mov	x0, x25
 118:	bl	0 <_ZdlPv>
 11c:	str	x23, [x24]
 120:	str	x19, [x24, #8]
 124:	add	x23, x23, x26, lsl #3
 128:	str	x23, [x24, #16]
 12c:	ldp	x19, x20, [sp, #16]
 130:	ldp	x21, x22, [sp, #32]
 134:	ldp	x23, x24, [sp, #48]
 138:	ldp	x25, x26, [sp, #64]
 13c:	ldr	x27, [sp, #80]
 140:	ldp	x29, x30, [sp], #96
 144:	ret
 148:	mov	x19, x23
 14c:	b	e4 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xe4>
 150:	sub	x20, x22, x25
 154:	mov	x26, #0xfffffffffffffff     	// #1152921504606846975
 158:	b	70 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x70>

Disassembly of section .text._ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE12emplace_backIJS5_EEEvDpOT_:

0000000000000000 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE12emplace_backIJS5_EEEvDpOT_>:
   0:	mov	x2, x1
   4:	ldr	x1, [x0, #8]
   8:	ldr	x3, [x0, #16]
   c:	cmp	x1, x3
  10:	b.eq	30 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE12emplace_backIJS5_EEEvDpOT_+0x30>  // b.none
  14:	ldr	x3, [x2]
  18:	str	xzr, [x2]
  1c:	str	x3, [x1]
  20:	ldr	x1, [x0, #8]
  24:	add	x1, x1, #0x8
  28:	str	x1, [x0, #8]
  2c:	ret
  30:	stp	x29, x30, [sp, #-16]!
  34:	mov	x29, sp
  38:	bl	0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE12emplace_backIJS5_EEEvDpOT_>
  3c:	ldp	x29, x30, [sp], #16
  40:	ret

Disassembly of section .text._ZN4llvm15handleErrorImplIZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_:

0000000000000000 <_ZN4llvm15handleErrorImplIZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x8
  10:	mov	x19, x0
  14:	ldr	x0, [x0]
  18:	ldr	x1, [x0]
  1c:	ldr	x2, [x1, #48]
  20:	adrp	x1, 0 <_ZN4llvm13ErrorInfoBase2IDE>
  24:	ldr	x1, [x1]
  28:	blr	x2
  2c:	and	w0, w0, #0xff
  30:	cbnz	w0, 54 <_ZN4llvm15handleErrorImplIZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_+0x54>
  34:	ldr	x0, [x19]
  38:	str	xzr, [x19]
  3c:	orr	x0, x0, #0x1
  40:	str	x0, [x20]
  44:	mov	x0, x20
  48:	ldp	x19, x20, [sp, #16]
  4c:	ldp	x29, x30, [sp], #48
  50:	ret
  54:	str	x21, [sp, #32]
  58:	ldr	x21, [x19]
  5c:	str	xzr, [x19]
  60:	ldr	x0, [x21]
  64:	ldr	x2, [x0, #48]
  68:	adrp	x1, 0 <_ZN4llvm13ErrorInfoBase2IDE>
  6c:	ldr	x1, [x1]
  70:	mov	x0, x21
  74:	blr	x2
  78:	and	w0, w0, #0xff
  7c:	cbz	w0, a0 <_ZN4llvm15handleErrorImplIZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_+0xa0>
  80:	mov	x0, #0x1                   	// #1
  84:	str	x0, [x20]
  88:	ldr	x0, [x21]
  8c:	ldr	x1, [x0, #8]
  90:	mov	x0, x21
  94:	blr	x1
  98:	ldr	x21, [sp, #32]
  9c:	b	44 <_ZN4llvm15handleErrorImplIZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_+0x44>
  a0:	adrp	x3, 0 <_ZN4llvm15handleErrorImplIZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_>
  a4:	add	x3, x3, #0x0
  a8:	mov	w2, #0x329                 	// #809
  ac:	adrp	x1, 0 <_ZN4llvm15handleErrorImplIZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_>
  b0:	add	x1, x1, #0x0
  b4:	adrp	x0, 0 <_ZN4llvm15handleErrorImplIZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_JEEES1_St10unique_ptrIS2_St14default_deleteIS2_EEOT_DpOT0_>
  b8:	add	x0, x0, #0x0
  bc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_:

0000000000000000 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>:
   0:	stp	x29, x30, [sp, #-192]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x20, x8
  14:	mov	x21, x1
  18:	ldr	x19, [x0]
  1c:	ands	x1, x19, #0xfffffffffffffffe
  20:	cset	x19, ne  // ne = any
  24:	orr	x19, x19, x1
  28:	str	x19, [x0]
  2c:	ands	x19, x19, #0xfffffffffffffffe
  30:	b.eq	1a4 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1a4>  // b.none
  34:	str	xzr, [x0]
  38:	ldr	x0, [x19]
  3c:	ldr	x2, [x0, #48]
  40:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
  44:	ldr	x1, [x1]
  48:	mov	x0, x19
  4c:	blr	x2
  50:	and	w0, w0, #0xff
  54:	cbz	w0, 4c4 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x4c4>
  58:	stp	x23, x24, [sp, #48]
  5c:	mov	x0, #0x1                   	// #1
  60:	str	x0, [sp, #120]
  64:	ldr	x22, [x19, #8]
  68:	ldr	x24, [x19, #16]
  6c:	cmp	x24, x22
  70:	b.eq	214 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x214>  // b.none
  74:	stp	x25, x26, [sp, #64]
  78:	stp	x27, x28, [sp, #80]
  7c:	add	x26, sp, #0x90
  80:	add	x25, sp, #0x88
  84:	adrp	x23, 0 <_ZTVN4llvm9ErrorListE>
  88:	ldr	x23, [x23]
  8c:	add	x23, x23, #0x10
  90:	ldr	x0, [sp, #120]
  94:	orr	x0, x0, #0x1
  98:	str	x0, [sp, #128]
  9c:	str	xzr, [sp, #120]
  a0:	ldr	x0, [x22]
  a4:	str	xzr, [x22]
  a8:	str	x0, [sp, #144]
  ac:	mov	x8, x25
  b0:	mov	x1, x21
  b4:	mov	x0, x26
  b8:	bl	0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
  bc:	ldr	x0, [sp, #128]
  c0:	ands	x1, x0, #0xfffffffffffffffe
  c4:	cset	x0, ne  // ne = any
  c8:	orr	x0, x0, x1
  cc:	str	x0, [sp, #128]
  d0:	ands	x0, x0, #0xfffffffffffffffe
  d4:	b.eq	1c0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1c0>  // b.none
  d8:	ldr	x1, [sp, #136]
  dc:	ands	x2, x1, #0xfffffffffffffffe
  e0:	cset	x1, ne  // ne = any
  e4:	orr	x1, x1, x2
  e8:	str	x1, [sp, #136]
  ec:	tst	x1, #0xfffffffffffffffe
  f0:	b.eq	238 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x238>  // b.none
  f4:	ldr	x1, [x0]
  f8:	ldr	x2, [x1, #48]
  fc:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
 100:	ldr	x1, [x1]
 104:	blr	x2
 108:	and	w0, w0, #0xff
 10c:	cbz	w0, 288 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x288>
 110:	ldr	x0, [sp, #128]
 114:	and	x0, x0, #0xfffffffffffffffe
 118:	str	x0, [sp, #96]
 11c:	ldr	x0, [sp, #136]
 120:	ands	x0, x0, #0xfffffffffffffffe
 124:	b.eq	244 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x244>  // b.none
 128:	ldr	x1, [x0]
 12c:	ldr	x2, [x1, #48]
 130:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
 134:	ldr	x1, [x1]
 138:	blr	x2
 13c:	and	w0, w0, #0xff
 140:	cbz	w0, 244 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x244>
 144:	ldr	x0, [sp, #136]
 148:	and	x1, x0, #0xfffffffffffffffe
 14c:	str	x1, [sp, #104]
 150:	str	xzr, [sp, #136]
 154:	ldr	x27, [x1, #8]
 158:	ldr	x28, [x1, #16]
 15c:	cmp	x27, x28
 160:	b.eq	188 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x188>  // b.none
 164:	ldr	x0, [sp, #96]
 168:	add	x0, x0, #0x8
 16c:	str	x0, [sp, #96]
 170:	mov	x1, x27
 174:	ldr	x0, [sp, #96]
 178:	bl	0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 17c:	add	x27, x27, #0x8
 180:	cmp	x28, x27
 184:	b.ne	170 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x170>  // b.any
 188:	ldr	x2, [sp, #104]
 18c:	cbz	x2, 278 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x278>
 190:	ldr	x0, [x2]
 194:	ldr	x1, [x0, #8]
 198:	mov	x0, x2
 19c:	blr	x1
 1a0:	b	278 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x278>
 1a4:	mov	x0, #0x1                   	// #1
 1a8:	str	x0, [x8]
 1ac:	mov	x0, x20
 1b0:	ldp	x19, x20, [sp, #16]
 1b4:	ldp	x21, x22, [sp, #32]
 1b8:	ldp	x29, x30, [sp], #192
 1bc:	ret
 1c0:	ldr	x0, [sp, #136]
 1c4:	orr	x27, x0, #0x1
 1c8:	str	xzr, [sp, #136]
 1cc:	ldr	x0, [sp, #120]
 1d0:	cbnz	x0, 4ac <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x4ac>
 1d4:	orr	x0, x27, #0x1
 1d8:	str	x0, [sp, #120]
 1dc:	ldr	x0, [sp, #136]
 1e0:	cbnz	x0, 4b4 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x4b4>
 1e4:	ldr	x0, [sp, #144]
 1e8:	cbz	x0, 1f8 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1f8>
 1ec:	ldr	x1, [x0]
 1f0:	ldr	x1, [x1, #8]
 1f4:	blr	x1
 1f8:	ldr	x0, [sp, #128]
 1fc:	cbnz	x0, 4bc <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x4bc>
 200:	add	x22, x22, #0x8
 204:	cmp	x24, x22
 208:	b.ne	90 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x90>  // b.any
 20c:	ldp	x25, x26, [sp, #64]
 210:	ldp	x27, x28, [sp, #80]
 214:	ldr	x0, [sp, #120]
 218:	orr	x0, x0, #0x1
 21c:	str	x0, [x20]
 220:	ldr	x0, [x19]
 224:	ldr	x1, [x0, #8]
 228:	mov	x0, x19
 22c:	blr	x1
 230:	ldp	x23, x24, [sp, #48]
 234:	b	1ac <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1ac>
 238:	orr	x27, x0, #0x1
 23c:	str	xzr, [sp, #128]
 240:	b	1cc <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1cc>
 244:	ldr	x0, [sp, #136]
 248:	and	x0, x0, #0xfffffffffffffffe
 24c:	str	x0, [sp, #184]
 250:	str	xzr, [sp, #136]
 254:	add	x1, sp, #0xb8
 258:	ldr	x0, [sp, #96]
 25c:	add	x0, x0, #0x8
 260:	bl	0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 264:	ldr	x0, [sp, #184]
 268:	cbz	x0, 278 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x278>
 26c:	ldr	x1, [x0]
 270:	ldr	x1, [x1, #8]
 274:	blr	x1
 278:	ldr	x0, [sp, #128]
 27c:	orr	x27, x0, #0x1
 280:	str	xzr, [sp, #128]
 284:	b	1cc <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1cc>
 288:	ldr	x0, [sp, #136]
 28c:	ands	x0, x0, #0xfffffffffffffffe
 290:	b.eq	3c4 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x3c4>  // b.none
 294:	ldr	x1, [x0]
 298:	ldr	x2, [x1, #48]
 29c:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
 2a0:	ldr	x1, [x1]
 2a4:	blr	x2
 2a8:	and	w0, w0, #0xff
 2ac:	cbz	w0, 3c4 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x3c4>
 2b0:	ldr	x0, [sp, #136]
 2b4:	and	x0, x0, #0xfffffffffffffffe
 2b8:	mov	x1, x0
 2bc:	ldr	x4, [x1, #8]!
 2c0:	str	x4, [sp, #96]
 2c4:	ldr	x3, [sp, #128]
 2c8:	and	x3, x3, #0xfffffffffffffffe
 2cc:	str	x3, [sp, #176]
 2d0:	str	xzr, [sp, #128]
 2d4:	ldr	x2, [x1, #8]
 2d8:	ldr	x1, [x1, #16]
 2dc:	cmp	x2, x1
 2e0:	b.eq	3b0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x3b0>  // b.none
 2e4:	cmp	x4, x2
 2e8:	b.eq	344 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x344>  // b.none
 2ec:	ldur	x1, [x2, #-8]
 2f0:	stur	xzr, [x2, #-8]
 2f4:	str	x1, [x2]
 2f8:	ldr	x27, [x0, #16]
 2fc:	add	x1, x27, #0x8
 300:	str	x1, [x0, #16]
 304:	sub	x0, x27, #0x8
 308:	ldr	x1, [sp, #96]
 30c:	sub	x0, x0, x1
 310:	asr	x28, x0, #3
 314:	cmp	x0, #0x0
 318:	b.gt	388 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x388>
 31c:	ldr	x1, [sp, #176]
 320:	str	xzr, [sp, #176]
 324:	ldr	x2, [sp, #96]
 328:	ldr	x0, [x2]
 32c:	str	x1, [x2]
 330:	cbz	x0, 358 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x358>
 334:	ldr	x1, [x0]
 338:	ldr	x1, [x1, #8]
 33c:	blr	x1
 340:	b	358 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x358>
 344:	str	xzr, [sp, #176]
 348:	str	x3, [x2]
 34c:	ldr	x1, [x0, #16]
 350:	add	x1, x1, #0x8
 354:	str	x1, [x0, #16]
 358:	ldr	x0, [sp, #176]
 35c:	cbz	x0, 36c <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x36c>
 360:	ldr	x1, [x0]
 364:	ldr	x1, [x1, #8]
 368:	blr	x1
 36c:	ldr	x0, [sp, #136]
 370:	orr	x27, x0, #0x1
 374:	str	xzr, [sp, #136]
 378:	b	1cc <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1cc>
 37c:	sub	x28, x28, #0x1
 380:	cmp	x28, #0x0
 384:	b.le	31c <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x31c>
 388:	sub	x27, x27, #0x8
 38c:	ldur	x1, [x27, #-8]
 390:	stur	xzr, [x27, #-8]
 394:	ldr	x0, [x27]
 398:	str	x1, [x27]
 39c:	cbz	x0, 37c <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x37c>
 3a0:	ldr	x1, [x0]
 3a4:	ldr	x1, [x1, #8]
 3a8:	blr	x1
 3ac:	b	37c <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x37c>
 3b0:	add	x2, sp, #0xb0
 3b4:	ldr	x1, [sp, #96]
 3b8:	add	x0, x0, #0x8
 3bc:	bl	0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 3c0:	b	358 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x358>
 3c4:	ldr	x0, [sp, #128]
 3c8:	and	x0, x0, #0xfffffffffffffffe
 3cc:	str	x0, [sp, #168]
 3d0:	str	xzr, [sp, #128]
 3d4:	ldr	x0, [sp, #136]
 3d8:	and	x0, x0, #0xfffffffffffffffe
 3dc:	str	x0, [sp, #160]
 3e0:	str	xzr, [sp, #136]
 3e4:	mov	x0, #0x20                  	// #32
 3e8:	bl	0 <_Znwm>
 3ec:	mov	x27, x0
 3f0:	mov	x28, x0
 3f4:	str	x23, [x28], #8
 3f8:	str	xzr, [x0, #8]
 3fc:	str	xzr, [x28, #8]
 400:	str	xzr, [x28, #16]
 404:	ldr	x0, [sp, #168]
 408:	ldr	x1, [x0]
 40c:	ldr	x2, [x1, #48]
 410:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
 414:	ldr	x1, [x1]
 418:	blr	x2
 41c:	and	w0, w0, #0xff
 420:	cbnz	w0, 48c <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x48c>
 424:	ldr	x0, [sp, #160]
 428:	ldr	x1, [x0]
 42c:	ldr	x2, [x1, #48]
 430:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
 434:	ldr	x1, [x1]
 438:	blr	x2
 43c:	and	w0, w0, #0xff
 440:	cbnz	w0, 48c <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x48c>
 444:	add	x1, sp, #0xa8
 448:	mov	x0, x28
 44c:	bl	0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 450:	add	x1, sp, #0xa0
 454:	mov	x0, x28
 458:	bl	0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 45c:	orr	x27, x27, #0x1
 460:	ldr	x0, [sp, #160]
 464:	cbz	x0, 474 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x474>
 468:	ldr	x1, [x0]
 46c:	ldr	x1, [x1, #8]
 470:	blr	x1
 474:	ldr	x0, [sp, #168]
 478:	cbz	x0, 1cc <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1cc>
 47c:	ldr	x1, [x0]
 480:	ldr	x1, [x1, #8]
 484:	blr	x1
 488:	b	1cc <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1cc>
 48c:	adrp	x3, 0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 490:	add	x3, x3, #0x0
 494:	mov	w2, #0x181                 	// #385
 498:	adrp	x1, 0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 49c:	add	x1, x1, #0x0
 4a0:	adrp	x0, 0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 4a4:	add	x0, x0, #0x0
 4a8:	bl	0 <__assert_fail>
 4ac:	add	x0, sp, #0x78
 4b0:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 4b4:	add	x0, sp, #0x88
 4b8:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 4bc:	add	x0, sp, #0x80
 4c0:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 4c4:	str	x19, [sp, #152]
 4c8:	mov	x8, x20
 4cc:	mov	x1, x21
 4d0:	add	x0, sp, #0x98
 4d4:	bl	0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 4d8:	ldr	x0, [sp, #152]
 4dc:	cbz	x0, 1ac <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1ac>
 4e0:	ldr	x1, [x0]
 4e4:	ldr	x1, [x1, #8]
 4e8:	blr	x1
 4ec:	b	1ac <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1ac>

Disassembly of section .text._ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_:

0000000000000000 <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	ldr	x2, [x0]
   c:	orr	x2, x2, #0x1
  10:	str	x2, [sp, #104]
  14:	str	xzr, [x0]
  18:	add	x8, sp, #0x60
  1c:	add	x0, sp, #0x68
  20:	bl	0 <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_>
  24:	ldr	x0, [sp, #96]
  28:	ands	x1, x0, #0xfffffffffffffffe
  2c:	cset	x0, ne  // ne = any
  30:	orr	x0, x0, x1
  34:	str	x0, [sp, #96]
  38:	tst	x0, #0xfffffffffffffffe
  3c:	b.ne	54 <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_+0x54>  // b.any
  40:	tbnz	w0, #0, e4 <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_+0xe4>
  44:	ldr	x0, [sp, #104]
  48:	cbnz	x0, ec <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_+0xec>
  4c:	ldp	x29, x30, [sp], #112
  50:	ret
  54:	add	x1, sp, #0x10
  58:	add	x0, sp, #0x20
  5c:	str	x0, [sp, #16]
  60:	str	xzr, [sp, #24]
  64:	strb	wzr, [sp, #32]
  68:	mov	w0, #0x1                   	// #1
  6c:	str	w0, [sp, #80]
  70:	str	xzr, [sp, #72]
  74:	str	xzr, [sp, #64]
  78:	str	xzr, [sp, #56]
  7c:	adrp	x0, 0 <_ZTVN4llvm18raw_string_ostreamE>
  80:	ldr	x0, [x0]
  84:	add	x0, x0, #0x10
  88:	str	x0, [sp, #48]
  8c:	str	x1, [sp, #88]
  90:	adrp	x1, 0 <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_>
  94:	add	x1, x1, #0x0
  98:	add	x0, sp, #0x30
  9c:	bl	0 <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_>
  a0:	adrp	x1, 0 <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_>
  a4:	add	x1, x1, #0x0
  a8:	bl	0 <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_>
  ac:	add	x1, sp, #0x60
  b0:	bl	0 <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_>
  b4:	ldr	x1, [sp, #72]
  b8:	ldr	x0, [sp, #56]
  bc:	cmp	x1, x0
  c0:	b.eq	cc <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_+0xcc>  // b.none
  c4:	add	x0, sp, #0x30
  c8:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
  cc:	mov	w2, #0x2c9                 	// #713
  d0:	adrp	x1, 0 <_ZN4llvm15handleAllErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEEvS1_DpOT_>
  d4:	add	x1, x1, #0x0
  d8:	ldr	x0, [sp, #88]
  dc:	ldr	x0, [x0]
  e0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
  e4:	add	x0, sp, #0x60
  e8:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
  ec:	add	x0, sp, #0x68
  f0:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

MSFBuilder.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>:
       0:	stp	x29, x30, [sp, #-48]!
       4:	mov	x29, sp
       8:	stp	x19, x20, [sp, #16]
       c:	stp	x21, x22, [sp, #32]
      10:	mov	x19, x0
      14:	str	x4, [x0]
      18:	strb	w3, [x0, #8]
      1c:	mov	w0, #0x2                   	// #2
      20:	str	w0, [x19, #12]
      24:	str	wzr, [x19, #16]
      28:	str	w1, [x19, #20]
      2c:	mov	w0, #0x3                   	// #3
      30:	str	w0, [x19, #24]
      34:	str	xzr, [x19, #32]
      38:	str	xzr, [x19, #40]
      3c:	str	w2, [x19, #48]
      40:	add	w2, w2, #0x3f
      44:	lsr	w20, w2, #6
      48:	lsl	x22, x20, #3
      4c:	mov	x0, x22
      50:	bl	0 <malloc>
      54:	mov	x21, x0
      58:	cbz	x0, 15c <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x15c>
      5c:	str	x21, [x19, #32]
      60:	str	x20, [x19, #40]
      64:	cbnz	x20, 184 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x184>
      68:	ldr	w0, [x19, #48]
      6c:	add	w0, w0, #0x3f
      70:	lsr	w22, w0, #6
      74:	ldr	w1, [x19, #48]
      78:	ands	w2, w1, #0x3f
      7c:	b.eq	1e8 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1e8>  // b.none
      80:	mov	x0, #0xffffffffffffffff    	// #-1
      84:	lsl	x0, x0, x2
      88:	sub	w2, w22, #0x1
      8c:	ldr	x3, [x19, #40]
      90:	cmp	x2, x3
      94:	b.cs	1c8 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x1c8>  // b.hs, b.nlast
      98:	ldr	x3, [x19, #32]
      9c:	ldr	x4, [x3, x2, lsl #3]
      a0:	bic	x0, x4, x0
      a4:	str	x0, [x3, x2, lsl #3]
      a8:	str	xzr, [x19, #56]
      ac:	str	xzr, [x19, #64]
      b0:	str	xzr, [x19, #72]
      b4:	str	xzr, [x19, #80]
      b8:	str	xzr, [x19, #88]
      bc:	str	xzr, [x19, #96]
      c0:	ldr	x0, [x19, #40]
      c4:	cbz	x0, 224 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x224>
      c8:	ldr	x2, [x19, #32]
      cc:	ldr	x0, [x2]
      d0:	and	x0, x0, #0xfffffffffffffffe
      d4:	str	x0, [x2]
      d8:	cmp	w1, #0x1
      dc:	b.ls	244 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x244>  // b.plast
      e0:	ldr	x0, [x19, #40]
      e4:	cbz	x0, 264 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x264>
      e8:	ldr	x2, [x19, #32]
      ec:	ldr	x0, [x2]
      f0:	and	x0, x0, #0xfffffffffffffffd
      f4:	str	x0, [x2]
      f8:	cmp	w1, #0x2
      fc:	b.ls	284 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x284>  // b.plast
     100:	ldr	x0, [x19, #40]
     104:	cbz	x0, 2a4 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x2a4>
     108:	ldr	x2, [x19, #32]
     10c:	ldr	x0, [x2]
     110:	and	x0, x0, #0xfffffffffffffffb
     114:	str	x0, [x2]
     118:	ldr	w2, [x19, #24]
     11c:	cmp	w2, w1
     120:	b.cs	2c4 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x2c4>  // b.hs, b.nlast
     124:	lsr	w1, w2, #6
     128:	ldr	x0, [x19, #40]
     12c:	cmp	x1, x0
     130:	b.cs	2e4 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x2e4>  // b.hs, b.nlast
     134:	ldr	x3, [x19, #32]
     138:	mov	x0, #0x1                   	// #1
     13c:	lsl	x0, x0, x2
     140:	ldr	x2, [x3, x1, lsl #3]
     144:	bic	x0, x2, x0
     148:	str	x0, [x3, x1, lsl #3]
     14c:	ldp	x19, x20, [sp, #16]
     150:	ldp	x21, x22, [sp, #32]
     154:	ldp	x29, x30, [sp], #48
     158:	ret
     15c:	cbnz	x22, 170 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x170>
     160:	mov	x0, #0x1                   	// #1
     164:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     168:	mov	x21, x0
     16c:	b	5c <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x5c>
     170:	mov	w1, #0x1                   	// #1
     174:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     178:	add	x0, x0, #0x0
     17c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
     180:	b	5c <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x5c>
     184:	mov	x2, x22
     188:	mov	w1, #0xffffffff            	// #-1
     18c:	mov	x0, x21
     190:	bl	0 <memset>
     194:	ldr	w0, [x19, #48]
     198:	add	w0, w0, #0x3f
     19c:	lsr	w22, w0, #6
     1a0:	lsr	w0, w0, #6
     1a4:	cmp	x20, x0
     1a8:	b.ls	74 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x74>  // b.plast
     1ac:	subs	x20, x20, x0
     1b0:	b.eq	74 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x74>  // b.none
     1b4:	lsl	x2, x20, #3
     1b8:	mov	w1, #0x0                   	// #0
     1bc:	add	x0, x21, x0, lsl #3
     1c0:	bl	0 <memset>
     1c4:	b	74 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0x74>
     1c8:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     1cc:	add	x3, x3, #0x0
     1d0:	mov	w2, #0x1ab                 	// #427
     1d4:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     1d8:	add	x1, x1, #0x0
     1dc:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     1e0:	add	x0, x0, #0x0
     1e4:	bl	0 <__assert_fail>
     1e8:	str	xzr, [x19, #56]
     1ec:	str	xzr, [x19, #64]
     1f0:	str	xzr, [x19, #72]
     1f4:	str	xzr, [x19, #80]
     1f8:	str	xzr, [x19, #88]
     1fc:	str	xzr, [x19, #96]
     200:	cbnz	w1, c0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE+0xc0>
     204:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     208:	add	x3, x3, #0x0
     20c:	mov	w2, #0x1eb                 	// #491
     210:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     214:	add	x1, x1, #0x0
     218:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     21c:	add	x0, x0, #0x0
     220:	bl	0 <__assert_fail>
     224:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     228:	add	x3, x3, #0x0
     22c:	mov	w2, #0x1ab                 	// #427
     230:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     234:	add	x1, x1, #0x0
     238:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     23c:	add	x0, x0, #0x0
     240:	bl	0 <__assert_fail>
     244:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     248:	add	x3, x3, #0x0
     24c:	mov	w2, #0x1eb                 	// #491
     250:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     254:	add	x1, x1, #0x0
     258:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     25c:	add	x0, x0, #0x0
     260:	bl	0 <__assert_fail>
     264:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     268:	add	x3, x3, #0x0
     26c:	mov	w2, #0x1ab                 	// #427
     270:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     274:	add	x1, x1, #0x0
     278:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     27c:	add	x0, x0, #0x0
     280:	bl	0 <__assert_fail>
     284:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     288:	add	x3, x3, #0x0
     28c:	mov	w2, #0x1eb                 	// #491
     290:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     294:	add	x1, x1, #0x0
     298:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     29c:	add	x0, x0, #0x0
     2a0:	bl	0 <__assert_fail>
     2a4:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     2a8:	add	x3, x3, #0x0
     2ac:	mov	w2, #0x1ab                 	// #427
     2b0:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     2b4:	add	x1, x1, #0x0
     2b8:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     2bc:	add	x0, x0, #0x0
     2c0:	bl	0 <__assert_fail>
     2c4:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     2c8:	add	x3, x3, #0x0
     2cc:	mov	w2, #0x1eb                 	// #491
     2d0:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     2d4:	add	x1, x1, #0x0
     2d8:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     2dc:	add	x0, x0, #0x0
     2e0:	bl	0 <__assert_fail>
     2e4:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     2e8:	add	x3, x3, #0x0
     2ec:	mov	w2, #0x1ab                 	// #427
     2f0:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     2f4:	add	x1, x1, #0x0
     2f8:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     2fc:	add	x0, x0, #0x0
     300:	bl	0 <__assert_fail>

0000000000000304 <_ZN4llvm3msf10MSFBuilder14setFreePageMapEj>:
     304:	str	w1, [x0, #12]
     308:	ret

000000000000030c <_ZN4llvm3msf10MSFBuilder11setUnknown1Ej>:
     30c:	str	w1, [x0, #16]
     310:	ret

0000000000000314 <_ZNK4llvm3msf10MSFBuilder16getNumFreeBlocksEv>:
     314:	mov	x3, x0
     318:	ldr	w0, [x0, #48]
     31c:	add	w0, w0, #0x3f
     320:	cmp	w0, #0x3f
     324:	b.ls	390 <_ZNK4llvm3msf10MSFBuilder16getNumFreeBlocksEv+0x7c>  // b.plast
     328:	lsr	w4, w0, #6
     32c:	ldr	x5, [x3, #40]
     330:	mov	x2, #0x0                   	// #0
     334:	mov	w0, #0x0                   	// #0
     338:	cmp	x2, x5
     33c:	b.eq	368 <_ZNK4llvm3msf10MSFBuilder16getNumFreeBlocksEv+0x54>  // b.none
     340:	ldr	x1, [x3, #32]
     344:	ldr	d0, [x1, x2, lsl #3]
     348:	cnt	v0.8b, v0.8b
     34c:	addv	b0, v0.8b
     350:	umov	w1, v0.b[0]
     354:	add	w0, w0, w1
     358:	add	x2, x2, #0x1
     35c:	cmp	w4, w2
     360:	b.hi	338 <_ZNK4llvm3msf10MSFBuilder16getNumFreeBlocksEv+0x24>  // b.pmore
     364:	ret
     368:	stp	x29, x30, [sp, #-16]!
     36c:	mov	x29, sp
     370:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     374:	add	x3, x3, #0x0
     378:	mov	w2, #0x1ab                 	// #427
     37c:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     380:	add	x1, x1, #0x0
     384:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     388:	add	x0, x0, #0x0
     38c:	bl	0 <__assert_fail>
     390:	mov	w0, #0x0                   	// #0
     394:	ret

0000000000000398 <_ZNK4llvm3msf10MSFBuilder18getTotalBlockCountEv>:
     398:	ldr	w0, [x0, #48]
     39c:	ret

00000000000003a0 <_ZNK4llvm3msf10MSFBuilder16getNumUsedBlocksEv>:
     3a0:	stp	x29, x30, [sp, #-32]!
     3a4:	mov	x29, sp
     3a8:	stp	x19, x20, [sp, #16]
     3ac:	mov	x20, x0
     3b0:	bl	398 <_ZNK4llvm3msf10MSFBuilder18getTotalBlockCountEv>
     3b4:	mov	w19, w0
     3b8:	mov	x0, x20
     3bc:	bl	314 <_ZNK4llvm3msf10MSFBuilder16getNumFreeBlocksEv>
     3c0:	sub	w0, w19, w0
     3c4:	ldp	x19, x20, [sp, #16]
     3c8:	ldp	x29, x30, [sp], #32
     3cc:	ret

00000000000003d0 <_ZNK4llvm3msf10MSFBuilder11isBlockFreeEj>:
     3d0:	stp	x29, x30, [sp, #-16]!
     3d4:	mov	x29, sp
     3d8:	ldr	w2, [x0, #48]
     3dc:	cmp	w1, w2
     3e0:	b.cs	414 <_ZNK4llvm3msf10MSFBuilder11isBlockFreeEj+0x44>  // b.hs, b.nlast
     3e4:	mov	x2, #0x1                   	// #1
     3e8:	lsl	x2, x2, x1
     3ec:	lsr	w1, w1, #6
     3f0:	ldr	x3, [x0, #40]
     3f4:	cmp	x1, x3
     3f8:	b.cs	434 <_ZNK4llvm3msf10MSFBuilder11isBlockFreeEj+0x64>  // b.hs, b.nlast
     3fc:	ldr	x0, [x0, #32]
     400:	ldr	x0, [x0, x1, lsl #3]
     404:	tst	x2, x0
     408:	cset	w0, ne  // ne = any
     40c:	ldp	x29, x30, [sp], #16
     410:	ret
     414:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     418:	add	x3, x3, #0x0
     41c:	mov	w2, #0x1f0                 	// #496
     420:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     424:	add	x1, x1, #0x0
     428:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     42c:	add	x0, x0, #0x0
     430:	bl	0 <__assert_fail>
     434:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     438:	add	x3, x3, #0x0
     43c:	mov	w2, #0x1ab                 	// #427
     440:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     444:	add	x1, x1, #0x0
     448:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     44c:	add	x0, x0, #0x0
     450:	bl	0 <__assert_fail>

0000000000000454 <_ZNK4llvm3msf10MSFBuilder13getNumStreamsEv>:
     454:	ldr	x1, [x0, #88]
     458:	ldr	x0, [x0, #80]
     45c:	sub	x0, x1, x0
     460:	ubfx	x0, x0, #5, #32
     464:	ret

0000000000000468 <_ZNK4llvm3msf10MSFBuilder13getStreamSizeEj>:
     468:	ldr	x0, [x0, #80]
     46c:	ubfiz	x1, x1, #5, #32
     470:	ldr	w0, [x0, x1]
     474:	ret

0000000000000478 <_ZNK4llvm3msf10MSFBuilder15getStreamBlocksEj>:
     478:	ubfiz	x2, x1, #5, #32
     47c:	ldr	x1, [x0, #80]
     480:	add	x1, x1, x2
     484:	ldr	x0, [x1, #8]
     488:	ldr	x1, [x1, #16]
     48c:	sub	x1, x1, x0
     490:	asr	x1, x1, #2
     494:	ret

0000000000000498 <_ZNK4llvm3msf10MSFBuilder24computeDirectoryByteSizeEv>:
     498:	mov	x3, x0
     49c:	ldr	x6, [x0, #88]
     4a0:	ldr	x2, [x0, #80]
     4a4:	sub	x1, x6, x2
     4a8:	asr	x1, x1, #5
     4ac:	lsl	x1, x1, #2
     4b0:	add	w0, w1, #0x4
     4b4:	cmp	x2, x6
     4b8:	b.eq	554 <_ZNK4llvm3msf10MSFBuilder24computeDirectoryByteSizeEv+0xbc>  // b.none
     4bc:	stp	x29, x30, [sp, #-16]!
     4c0:	mov	x29, sp
     4c4:	ldr	w4, [x3, #20]
     4c8:	sub	x7, x4, #0x1
     4cc:	ldr	w1, [x2]
     4d0:	cbz	x4, 514 <_ZNK4llvm3msf10MSFBuilder24computeDirectoryByteSizeEv+0x7c>
     4d4:	add	x1, x1, x7
     4d8:	udiv	x1, x1, x4
     4dc:	mul	x1, x1, x4
     4e0:	udiv	x1, x1, x4
     4e4:	ldr	x3, [x2, #16]
     4e8:	ldr	x5, [x2, #8]
     4ec:	sub	x3, x3, x5
     4f0:	asr	x3, x3, #2
     4f4:	cmp	x3, w1, uxtw
     4f8:	b.ne	534 <_ZNK4llvm3msf10MSFBuilder24computeDirectoryByteSizeEv+0x9c>  // b.any
     4fc:	add	w0, w0, w1, lsl #2
     500:	add	x2, x2, #0x20
     504:	cmp	x6, x2
     508:	b.ne	4cc <_ZNK4llvm3msf10MSFBuilder24computeDirectoryByteSizeEv+0x34>  // b.any
     50c:	ldp	x29, x30, [sp], #16
     510:	ret
     514:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     518:	add	x3, x3, #0x0
     51c:	mov	w2, #0x2ce                 	// #718
     520:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     524:	add	x1, x1, #0x0
     528:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     52c:	add	x0, x0, #0x0
     530:	bl	0 <__assert_fail>
     534:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     538:	add	x3, x3, #0x0
     53c:	mov	w2, #0xf3                  	// #243
     540:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     544:	add	x1, x1, #0x0
     548:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     54c:	add	x0, x0, #0x0
     550:	bl	0 <__assert_fail>
     554:	ret

0000000000000558 <_ZN4llvm3msf10MSFBuilder6createERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEjjb>:
     558:	stp	x29, x30, [sp, #-160]!
     55c:	mov	x29, sp
     560:	str	x19, [sp, #16]
     564:	mov	x19, x8
     568:	and	w3, w3, #0xff
     56c:	cmp	w1, #0x800
     570:	b.eq	5d8 <_ZN4llvm3msf10MSFBuilder6createERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEjjb+0x80>  // b.none
     574:	b.hi	5d0 <_ZN4llvm3msf10MSFBuilder6createERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEjjb+0x78>  // b.pmore
     578:	sub	w4, w1, #0x200
     57c:	tst	w4, #0xfffffdff
     580:	b.eq	5d8 <_ZN4llvm3msf10MSFBuilder6createERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEjjb+0x80>  // b.none
     584:	mov	w0, #0x5                   	// #5
     588:	str	w0, [sp, #156]
     58c:	add	x8, sp, #0x90
     590:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     594:	add	x1, x1, #0x0
     598:	add	x0, sp, #0x9c
     59c:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     5a0:	ldrb	w0, [x19, #104]
     5a4:	orr	w0, w0, #0x3
     5a8:	strb	w0, [x19, #104]
     5ac:	ldr	x0, [sp, #144]
     5b0:	ands	x1, x0, #0xfffffffffffffffe
     5b4:	cset	x0, ne  // ne = any
     5b8:	orr	x0, x0, x1
     5bc:	str	x0, [sp, #144]
     5c0:	ands	x0, x0, #0xfffffffffffffffe
     5c4:	b.eq	680 <_ZN4llvm3msf10MSFBuilder6createERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEjjb+0x128>  // b.none
     5c8:	str	x0, [x19]
     5cc:	b	670 <_ZN4llvm3msf10MSFBuilder6createERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEjjb+0x118>
     5d0:	cmp	w1, #0x1, lsl #12
     5d4:	b.ne	584 <_ZN4llvm3msf10MSFBuilder6createERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEjjb+0x2c>  // b.any
     5d8:	cmp	w2, #0x4
     5dc:	mov	x4, x0
     5e0:	mov	w0, #0x4                   	// #4
     5e4:	csel	w2, w2, w0, cs  // cs = hs, nlast
     5e8:	add	x0, sp, #0x28
     5ec:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     5f0:	ldrb	w0, [x19, #104]
     5f4:	and	w0, w0, #0xfffffffe
     5f8:	orr	w0, w0, #0x2
     5fc:	strb	w0, [x19, #104]
     600:	ldr	x0, [sp, #40]
     604:	str	x0, [x19]
     608:	ldrb	w0, [sp, #48]
     60c:	strb	w0, [x19, #8]
     610:	ldr	w0, [sp, #52]
     614:	str	w0, [x19, #12]
     618:	ldr	w0, [sp, #56]
     61c:	str	w0, [x19, #16]
     620:	ldr	w0, [sp, #60]
     624:	str	w0, [x19, #20]
     628:	ldr	w0, [sp, #64]
     62c:	str	w0, [x19, #24]
     630:	ldp	x0, x1, [sp, #72]
     634:	stp	x0, x1, [x19, #32]
     638:	ldr	w0, [sp, #88]
     63c:	str	w0, [x19, #48]
     640:	ldr	x1, [sp, #96]
     644:	str	x1, [x19, #56]
     648:	ldr	x1, [sp, #104]
     64c:	str	x1, [x19, #64]
     650:	ldr	x1, [sp, #112]
     654:	str	x1, [x19, #72]
     658:	ldr	x1, [sp, #120]
     65c:	str	x1, [x19, #80]
     660:	ldr	x1, [sp, #128]
     664:	str	x1, [x19, #88]
     668:	ldr	x1, [sp, #136]
     66c:	str	x1, [x19, #96]
     670:	mov	x0, x19
     674:	ldr	x19, [sp, #16]
     678:	ldp	x29, x30, [sp], #160
     67c:	ret
     680:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     684:	add	x3, x3, #0x0
     688:	mov	w2, #0x1ce                 	// #462
     68c:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     690:	add	x1, x1, #0x0
     694:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     698:	add	x0, x0, #0x0
     69c:	bl	0 <__assert_fail>

00000000000006a0 <_ZN4llvm3msf10MSFBuilder15setBlockMapAddrEj>:
     6a0:	stp	x29, x30, [sp, #-64]!
     6a4:	mov	x29, sp
     6a8:	stp	x19, x20, [sp, #16]
     6ac:	str	x21, [sp, #32]
     6b0:	mov	x21, x8
     6b4:	mov	x19, x0
     6b8:	ldr	w0, [x0, #24]
     6bc:	cmp	w0, w1
     6c0:	b.eq	708 <_ZN4llvm3msf10MSFBuilder15setBlockMapAddrEj+0x68>  // b.none
     6c4:	mov	w20, w1
     6c8:	ldr	w0, [x19, #48]
     6cc:	cmp	w1, w0
     6d0:	b.cc	724 <_ZN4llvm3msf10MSFBuilder15setBlockMapAddrEj+0x84>  // b.lo, b.ul, b.last
     6d4:	ldrb	w0, [x19, #8]
     6d8:	cbnz	w0, 714 <_ZN4llvm3msf10MSFBuilder15setBlockMapAddrEj+0x74>
     6dc:	mov	w0, #0x2                   	// #2
     6e0:	str	w0, [sp, #56]
     6e4:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     6e8:	add	x1, x1, #0x0
     6ec:	add	x0, sp, #0x38
     6f0:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     6f4:	mov	x0, x21
     6f8:	ldp	x19, x20, [sp, #16]
     6fc:	ldr	x21, [sp, #32]
     700:	ldp	x29, x30, [sp], #64
     704:	ret
     708:	mov	x0, #0x1                   	// #1
     70c:	str	x0, [x8]
     710:	b	6f4 <_ZN4llvm3msf10MSFBuilder15setBlockMapAddrEj+0x54>
     714:	mov	w2, #0x1                   	// #1
     718:	add	w1, w1, #0x1
     71c:	add	x0, x19, #0x20
     720:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     724:	mov	w1, w20
     728:	mov	x0, x19
     72c:	bl	3d0 <_ZNK4llvm3msf10MSFBuilder11isBlockFreeEj>
     730:	and	w0, w0, #0xff
     734:	cbnz	w0, 758 <_ZN4llvm3msf10MSFBuilder15setBlockMapAddrEj+0xb8>
     738:	mov	w0, #0x6                   	// #6
     73c:	str	w0, [sp, #60]
     740:	mov	x8, x21
     744:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     748:	add	x1, x1, #0x0
     74c:	add	x0, sp, #0x3c
     750:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     754:	b	6f4 <_ZN4llvm3msf10MSFBuilder15setBlockMapAddrEj+0x54>
     758:	ldr	w3, [x19, #24]
     75c:	ldr	w0, [x19, #48]
     760:	cmp	w3, w0
     764:	b.cs	7d4 <_ZN4llvm3msf10MSFBuilder15setBlockMapAddrEj+0x134>  // b.hs, b.nlast
     768:	lsr	w1, w3, #6
     76c:	ldr	x0, [x19, #40]
     770:	cmp	x1, x0
     774:	b.cs	7f4 <_ZN4llvm3msf10MSFBuilder15setBlockMapAddrEj+0x154>  // b.hs, b.nlast
     778:	mov	x0, x19
     77c:	ldr	x4, [x0, #32]!
     780:	mov	x2, #0x1                   	// #1
     784:	lsl	x3, x2, x3
     788:	ldr	x2, [x4, x1, lsl #3]
     78c:	orr	x2, x2, x3
     790:	str	x2, [x4, x1, lsl #3]
     794:	ldr	w0, [x0, #16]
     798:	cmp	w20, w0
     79c:	b.cs	814 <_ZN4llvm3msf10MSFBuilder15setBlockMapAddrEj+0x174>  // b.hs, b.nlast
     7a0:	lsr	w0, w20, #6
     7a4:	ldr	x1, [x19, #40]
     7a8:	cmp	x0, x1
     7ac:	b.cs	834 <_ZN4llvm3msf10MSFBuilder15setBlockMapAddrEj+0x194>  // b.hs, b.nlast
     7b0:	ldr	x3, [x19, #32]
     7b4:	mov	x2, #0x1                   	// #1
     7b8:	lsl	x1, x2, x20
     7bc:	ldr	x4, [x3, x0, lsl #3]
     7c0:	bic	x1, x4, x1
     7c4:	str	x1, [x3, x0, lsl #3]
     7c8:	str	w20, [x19, #24]
     7cc:	str	x2, [x21]
     7d0:	b	6f4 <_ZN4llvm3msf10MSFBuilder15setBlockMapAddrEj+0x54>
     7d4:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     7d8:	add	x3, x3, #0x0
     7dc:	mov	w2, #0x1eb                 	// #491
     7e0:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     7e4:	add	x1, x1, #0x0
     7e8:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     7ec:	add	x0, x0, #0x0
     7f0:	bl	0 <__assert_fail>
     7f4:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     7f8:	add	x3, x3, #0x0
     7fc:	mov	w2, #0x1ab                 	// #427
     800:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     804:	add	x1, x1, #0x0
     808:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     80c:	add	x0, x0, #0x0
     810:	bl	0 <__assert_fail>
     814:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     818:	add	x3, x3, #0x0
     81c:	mov	w2, #0x1eb                 	// #491
     820:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     824:	add	x1, x1, #0x0
     828:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     82c:	add	x0, x0, #0x0
     830:	bl	0 <__assert_fail>
     834:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     838:	add	x3, x3, #0x0
     83c:	mov	w2, #0x1ab                 	// #427
     840:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     844:	add	x1, x1, #0x0
     848:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     84c:	add	x0, x0, #0x0
     850:	bl	0 <__assert_fail>

0000000000000854 <_ZN4llvm3msf10MSFBuilder22setDirectoryBlocksHintENS_8ArrayRefIjEE>:
     854:	stp	x29, x30, [sp, #-96]!
     858:	mov	x29, sp
     85c:	stp	x19, x20, [sp, #16]
     860:	stp	x21, x22, [sp, #32]
     864:	stp	x23, x24, [sp, #48]
     868:	stp	x25, x26, [sp, #64]
     86c:	mov	x22, x8
     870:	mov	x20, x0
     874:	mov	x21, x1
     878:	ldr	x3, [x0, #56]
     87c:	ldr	x6, [x0, #64]
     880:	cmp	x3, x6
     884:	b.eq	8cc <_ZN4llvm3msf10MSFBuilder22setDirectoryBlocksHintENS_8ArrayRefIjEE+0x78>  // b.none
     888:	mov	x7, #0x1                   	// #1
     88c:	ldr	w0, [x3]
     890:	ldr	w1, [x20, #48]
     894:	cmp	w0, w1
     898:	b.cs	9b4 <_ZN4llvm3msf10MSFBuilder22setDirectoryBlocksHintENS_8ArrayRefIjEE+0x160>  // b.hs, b.nlast
     89c:	lsr	w1, w0, #6
     8a0:	ldr	x4, [x20, #40]
     8a4:	cmp	x1, x4
     8a8:	b.cs	9d4 <_ZN4llvm3msf10MSFBuilder22setDirectoryBlocksHintENS_8ArrayRefIjEE+0x180>  // b.hs, b.nlast
     8ac:	ldr	x5, [x20, #32]
     8b0:	lsl	x0, x7, x0
     8b4:	ldr	x4, [x5, x1, lsl #3]
     8b8:	orr	x0, x4, x0
     8bc:	str	x0, [x5, x1, lsl #3]
     8c0:	add	x3, x3, #0x4
     8c4:	cmp	x6, x3
     8c8:	b.ne	88c <_ZN4llvm3msf10MSFBuilder22setDirectoryBlocksHintENS_8ArrayRefIjEE+0x38>  // b.any
     8cc:	lsl	x26, x2, #2
     8d0:	add	x24, x21, x26
     8d4:	cmp	x21, x24
     8d8:	b.eq	938 <_ZN4llvm3msf10MSFBuilder22setDirectoryBlocksHintENS_8ArrayRefIjEE+0xe4>  // b.none
     8dc:	mov	x23, x21
     8e0:	mov	x25, #0x1                   	// #1
     8e4:	ldr	w19, [x23]
     8e8:	mov	w1, w19
     8ec:	mov	x0, x20
     8f0:	bl	3d0 <_ZNK4llvm3msf10MSFBuilder11isBlockFreeEj>
     8f4:	and	w0, w0, #0xff
     8f8:	cbz	w0, 9f4 <_ZN4llvm3msf10MSFBuilder22setDirectoryBlocksHintENS_8ArrayRefIjEE+0x1a0>
     8fc:	ldr	w0, [x20, #48]
     900:	cmp	w19, w0
     904:	b.cs	a14 <_ZN4llvm3msf10MSFBuilder22setDirectoryBlocksHintENS_8ArrayRefIjEE+0x1c0>  // b.hs, b.nlast
     908:	lsr	w0, w19, #6
     90c:	ldr	x1, [x20, #40]
     910:	cmp	x0, x1
     914:	b.cs	a34 <_ZN4llvm3msf10MSFBuilder22setDirectoryBlocksHintENS_8ArrayRefIjEE+0x1e0>  // b.hs, b.nlast
     918:	ldr	x1, [x20, #32]
     91c:	lsl	x19, x25, x19
     920:	ldr	x2, [x1, x0, lsl #3]
     924:	bic	x19, x2, x19
     928:	str	x19, [x1, x0, lsl #3]
     92c:	add	x23, x23, #0x4
     930:	cmp	x24, x23
     934:	b.ne	8e4 <_ZN4llvm3msf10MSFBuilder22setDirectoryBlocksHintENS_8ArrayRefIjEE+0x90>  // b.any
     938:	asr	x0, x26, #2
     93c:	mov	x1, #0x1fffffffffffffff    	// #2305843009213693951
     940:	cmp	x1, x26, asr #2
     944:	b.cc	a54 <_ZN4llvm3msf10MSFBuilder22setDirectoryBlocksHintENS_8ArrayRefIjEE+0x200>  // b.lo, b.ul, b.last
     948:	mov	x19, #0x0                   	// #0
     94c:	cbz	x0, 95c <_ZN4llvm3msf10MSFBuilder22setDirectoryBlocksHintENS_8ArrayRefIjEE+0x108>
     950:	mov	x0, x26
     954:	bl	0 <_Znwm>
     958:	mov	x19, x0
     95c:	add	x23, x19, x26
     960:	cmp	x21, x24
     964:	b.eq	978 <_ZN4llvm3msf10MSFBuilder22setDirectoryBlocksHintENS_8ArrayRefIjEE+0x124>  // b.none
     968:	mov	x2, x26
     96c:	mov	x1, x21
     970:	mov	x0, x19
     974:	bl	0 <memcpy>
     978:	ldr	x0, [x20, #56]
     97c:	str	x19, [x20, #56]
     980:	str	x23, [x20, #64]
     984:	str	x23, [x20, #72]
     988:	cbz	x0, 990 <_ZN4llvm3msf10MSFBuilder22setDirectoryBlocksHintENS_8ArrayRefIjEE+0x13c>
     98c:	bl	0 <_ZdlPv>
     990:	mov	x0, #0x1                   	// #1
     994:	str	x0, [x22]
     998:	mov	x0, x22
     99c:	ldp	x19, x20, [sp, #16]
     9a0:	ldp	x21, x22, [sp, #32]
     9a4:	ldp	x23, x24, [sp, #48]
     9a8:	ldp	x25, x26, [sp, #64]
     9ac:	ldp	x29, x30, [sp], #96
     9b0:	ret
     9b4:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     9b8:	add	x3, x3, #0x0
     9bc:	mov	w2, #0x1eb                 	// #491
     9c0:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     9c4:	add	x1, x1, #0x0
     9c8:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     9cc:	add	x0, x0, #0x0
     9d0:	bl	0 <__assert_fail>
     9d4:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     9d8:	add	x3, x3, #0x0
     9dc:	mov	w2, #0x1ab                 	// #427
     9e0:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     9e4:	add	x1, x1, #0x0
     9e8:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     9ec:	add	x0, x0, #0x0
     9f0:	bl	0 <__assert_fail>
     9f4:	mov	w0, #0x1                   	// #1
     9f8:	str	w0, [sp, #92]
     9fc:	mov	x8, x22
     a00:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     a04:	add	x1, x1, #0x0
     a08:	add	x0, sp, #0x5c
     a0c:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     a10:	b	998 <_ZN4llvm3msf10MSFBuilder22setDirectoryBlocksHintENS_8ArrayRefIjEE+0x144>
     a14:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     a18:	add	x3, x3, #0x0
     a1c:	mov	w2, #0x1eb                 	// #491
     a20:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     a24:	add	x1, x1, #0x0
     a28:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     a2c:	add	x0, x0, #0x0
     a30:	bl	0 <__assert_fail>
     a34:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     a38:	add	x3, x3, #0x0
     a3c:	mov	w2, #0x1ab                 	// #427
     a40:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     a44:	add	x1, x1, #0x0
     a48:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     a4c:	add	x0, x0, #0x0
     a50:	bl	0 <__assert_fail>
     a54:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     a58:	add	x0, x0, #0x0
     a5c:	bl	0 <_ZSt20__throw_length_errorPKc>

0000000000000a60 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE>:
     a60:	stp	x29, x30, [sp, #-144]!
     a64:	mov	x29, sp
     a68:	str	x8, [sp, #120]
     a6c:	str	x2, [sp, #104]
     a70:	str	x3, [sp, #96]
     a74:	cbnz	w1, a8c <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x2c>
     a78:	mov	x0, #0x1                   	// #1
     a7c:	str	x0, [x8]
     a80:	ldr	x0, [sp, #120]
     a84:	ldp	x29, x30, [sp], #144
     a88:	ret
     a8c:	stp	x19, x20, [sp, #16]
     a90:	stp	x23, x24, [sp, #48]
     a94:	stp	x27, x28, [sp, #80]
     a98:	mov	x20, x0
     a9c:	mov	w23, w1
     aa0:	ldr	w5, [x0, #48]
     aa4:	add	w0, w5, #0x3f
     aa8:	lsr	w3, w0, #6
     aac:	cmp	w0, #0x3f
     ab0:	b.ls	b60 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x100>  // b.plast
     ab4:	ldr	x4, [x20, #40]
     ab8:	mov	x1, #0x0                   	// #0
     abc:	mov	w2, #0x0                   	// #0
     ac0:	cmp	x4, x1
     ac4:	b.eq	b28 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0xc8>  // b.none
     ac8:	ldr	x0, [x20, #32]
     acc:	ldr	d0, [x0, x1, lsl #3]
     ad0:	cnt	v0.8b, v0.8b
     ad4:	addv	b0, v0.8b
     ad8:	umov	w0, v0.b[0]
     adc:	add	w2, w2, w0
     ae0:	add	x1, x1, #0x1
     ae4:	cmp	w3, w1
     ae8:	b.hi	ac0 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x60>  // b.pmore
     aec:	cmp	w23, w2
     af0:	b.ls	b50 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0xf0>  // b.plast
     af4:	ldrb	w0, [x20, #8]
     af8:	cbnz	w0, b6c <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x10c>
     afc:	mov	w0, #0x2                   	// #2
     b00:	str	w0, [sp, #140]
     b04:	ldr	x8, [sp, #120]
     b08:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     b0c:	add	x1, x1, #0x0
     b10:	add	x0, sp, #0x8c
     b14:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     b18:	ldp	x19, x20, [sp, #16]
     b1c:	ldp	x23, x24, [sp, #48]
     b20:	ldp	x27, x28, [sp, #80]
     b24:	b	a80 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x20>
     b28:	stp	x21, x22, [sp, #32]
     b2c:	stp	x25, x26, [sp, #64]
     b30:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     b34:	add	x3, x3, #0x0
     b38:	mov	w2, #0x1ab                 	// #427
     b3c:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     b40:	add	x1, x1, #0x0
     b44:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     b48:	add	x0, x0, #0x0
     b4c:	bl	0 <__assert_fail>
     b50:	stp	x21, x22, [sp, #32]
     b54:	stp	x25, x26, [sp, #64]
     b58:	ldr	w27, [x20, #48]
     b5c:	b	1050 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x5f0>
     b60:	cbz	w1, 1040 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x5e0>
     b64:	mov	w2, #0x0                   	// #0
     b68:	b	af4 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x94>
     b6c:	stp	x21, x22, [sp, #32]
     b70:	stp	x25, x26, [sp, #64]
     b74:	add	w21, w23, w5
     b78:	sub	w21, w21, w2
     b7c:	mov	w19, w5
     b80:	ldr	w0, [x20, #20]
     b84:	cbz	x0, bc8 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x168>
     b88:	add	x19, x19, x0
     b8c:	sub	x19, x19, #0x1
     b90:	udiv	x19, x19, x0
     b94:	mul	x19, x19, x0
     b98:	add	w19, w19, #0x1
     b9c:	mov	w2, #0x1                   	// #1
     ba0:	mov	w1, w21
     ba4:	add	x0, x20, #0x20
     ba8:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     bac:	cmp	w21, w19
     bb0:	b.ls	1048 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x5e8>  // b.plast
     bb4:	mov	x27, #0xffffffffffffffff    	// #-1
     bb8:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     bbc:	add	x0, x0, #0x0
     bc0:	str	x0, [sp, #112]
     bc4:	b	e84 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x424>
     bc8:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     bcc:	add	x3, x3, #0x0
     bd0:	mov	w2, #0x2ce                 	// #718
     bd4:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     bd8:	add	x1, x1, #0x0
     bdc:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     be0:	add	x0, x0, #0x0
     be4:	bl	0 <__assert_fail>
     be8:	add	w24, w22, #0x41
     bec:	lsr	w24, w24, #6
     bf0:	lsl	x0, x25, #1
     bf4:	cmp	x24, x0
     bf8:	csel	x24, x24, x0, cs  // cs = hs, nlast
     bfc:	cbz	x24, c98 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x238>
     c00:	lsl	x28, x24, #3
     c04:	mov	x1, x28
     c08:	ldr	x0, [x20, #32]
     c0c:	bl	0 <realloc>
     c10:	mov	x26, x0
     c14:	cbz	x0, cb8 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x258>
     c18:	str	x26, [x20, #32]
     c1c:	str	x24, [x20, #40]
     c20:	ldr	w0, [x20, #48]
     c24:	add	w0, w0, #0x3f
     c28:	lsr	w28, w0, #6
     c2c:	lsr	w0, w0, #6
     c30:	cmp	x0, x24
     c34:	b.cc	cdc <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x27c>  // b.lo, b.ul, b.last
     c38:	ldr	w0, [x20, #48]
     c3c:	ands	w0, w0, #0x3f
     c40:	b.eq	c68 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x208>  // b.none
     c44:	lsl	x0, x27, x0
     c48:	sub	w28, w28, #0x1
     c4c:	ldr	x1, [x20, #40]
     c50:	cmp	x28, x1
     c54:	b.cs	cf8 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x298>  // b.hs, b.nlast
     c58:	ldr	x1, [x20, #32]
     c5c:	ldr	x2, [x1, x28, lsl #3]
     c60:	bic	x0, x2, x0
     c64:	str	x0, [x1, x28, lsl #3]
     c68:	and	x0, x25, #0xffffffff
     c6c:	ldr	x2, [x20, #40]
     c70:	cmp	x2, w25, uxtw
     c74:	b.cc	d18 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x2b8>  // b.lo, b.ul, b.last
     c78:	subs	x2, x2, x0
     c7c:	b.eq	e9c <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x43c>  // b.none
     c80:	ldr	x3, [x20, #32]
     c84:	lsl	x2, x2, #3
     c88:	mov	w1, #0xffffffff            	// #-1
     c8c:	add	x0, x3, x0, lsl #3
     c90:	bl	0 <memset>
     c94:	b	e9c <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x43c>
     c98:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     c9c:	add	x3, x3, #0x0
     ca0:	mov	w2, #0x376                 	// #886
     ca4:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     ca8:	add	x1, x1, #0x0
     cac:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     cb0:	add	x0, x0, #0x0
     cb4:	bl	0 <__assert_fail>
     cb8:	cbnz	x28, ccc <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x26c>
     cbc:	mov	x0, #0x1                   	// #1
     cc0:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     cc4:	mov	x26, x0
     cc8:	b	c18 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x1b8>
     ccc:	mov	w1, #0x1                   	// #1
     cd0:	ldr	x0, [sp, #112]
     cd4:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
     cd8:	b	c18 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x1b8>
     cdc:	subs	x2, x24, x0
     ce0:	b.eq	c38 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x1d8>  // b.none
     ce4:	lsl	x2, x2, #3
     ce8:	mov	w1, #0x0                   	// #0
     cec:	add	x0, x26, x0, lsl #3
     cf0:	bl	0 <memset>
     cf4:	b	c38 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x1d8>
     cf8:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     cfc:	add	x3, x3, #0x0
     d00:	mov	w2, #0x1ab                 	// #427
     d04:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     d08:	add	x1, x1, #0x0
     d0c:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     d10:	add	x0, x0, #0x0
     d14:	bl	0 <__assert_fail>
     d18:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     d1c:	add	x3, x3, #0x0
     d20:	mov	w2, #0x174                 	// #372
     d24:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     d28:	add	x1, x1, #0x0
     d2c:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     d30:	add	x0, x0, #0x0
     d34:	bl	0 <__assert_fail>
     d38:	add	w0, w0, #0x3f
     d3c:	lsr	w24, w0, #6
     d40:	ldr	x1, [x20, #40]
     d44:	lsr	w0, w0, #6
     d48:	cmp	x1, x0
     d4c:	b.hi	d84 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x324>  // b.pmore
     d50:	ldr	w0, [x20, #48]
     d54:	ands	w0, w0, #0x3f
     d58:	b.eq	ea8 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x448>  // b.none
     d5c:	lsl	x0, x27, x0
     d60:	sub	w24, w24, #0x1
     d64:	ldr	x1, [x20, #40]
     d68:	cmp	x24, x1
     d6c:	b.cs	da4 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x344>  // b.hs, b.nlast
     d70:	ldr	x2, [x20, #32]
     d74:	ldr	x1, [x2, x24, lsl #3]
     d78:	orr	x0, x1, x0
     d7c:	str	x0, [x2, x24, lsl #3]
     d80:	b	ea8 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x448>
     d84:	subs	x1, x1, x0
     d88:	b.eq	d50 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x2f0>  // b.none
     d8c:	ldr	x3, [x20, #32]
     d90:	lsl	x2, x1, #3
     d94:	mov	w1, #0xffffffff            	// #-1
     d98:	add	x0, x3, x0, lsl #3
     d9c:	bl	0 <memset>
     da0:	b	d50 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x2f0>
     da4:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     da8:	add	x3, x3, #0x0
     dac:	mov	w2, #0x1ab                 	// #427
     db0:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     db4:	add	x1, x1, #0x0
     db8:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     dbc:	add	x0, x0, #0x0
     dc0:	bl	0 <__assert_fail>
     dc4:	subs	x2, x0, x22
     dc8:	b.eq	ec4 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x464>  // b.none
     dcc:	ldr	x0, [x20, #32]
     dd0:	lsl	x2, x2, #3
     dd4:	mov	w1, #0x0                   	// #0
     dd8:	add	x0, x0, x22, lsl #3
     ddc:	bl	0 <memset>
     de0:	b	ec4 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x464>
     de4:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     de8:	add	x3, x3, #0x0
     dec:	mov	w2, #0x1ab                 	// #427
     df0:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     df4:	add	x1, x1, #0x0
     df8:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     dfc:	add	x0, x0, #0x0
     e00:	bl	0 <__assert_fail>
     e04:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     e08:	add	x3, x3, #0x0
     e0c:	mov	w2, #0x1c2                 	// #450
     e10:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     e14:	add	x1, x1, #0x0
     e18:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     e1c:	add	x0, x0, #0x0
     e20:	bl	0 <__assert_fail>
     e24:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     e28:	add	x3, x3, #0x0
     e2c:	mov	w2, #0x1c3                 	// #451
     e30:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     e34:	add	x1, x1, #0x0
     e38:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     e3c:	add	x0, x0, #0x0
     e40:	bl	0 <__assert_fail>
     e44:	mov	x1, #0x1                   	// #1
     e48:	lsl	x3, x1, x3
     e4c:	lsl	x1, x1, x19
     e50:	sub	x3, x3, x1
     e54:	mov	w2, w0
     e58:	ldr	x1, [x20, #40]
     e5c:	cmp	x1, w0, uxtw
     e60:	b.ls	f5c <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x4fc>  // b.plast
     e64:	ldr	x1, [x20, #32]
     e68:	ldr	x0, [x1, x2, lsl #3]
     e6c:	bic	x0, x0, x3
     e70:	str	x0, [x1, x2, lsl #3]
     e74:	ldr	w0, [x20, #20]
     e78:	add	w19, w19, w0
     e7c:	cmp	w21, w19
     e80:	b.ls	1048 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x5e8>  // b.plast
     e84:	mov	w22, w21
     e88:	add	w21, w21, #0x2
     e8c:	ldr	x25, [x20, #40]
     e90:	lsl	x0, x25, #6
     e94:	cmp	x0, w21, uxtw
     e98:	b.cc	be8 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x188>  // b.lo, b.ul, b.last
     e9c:	ldr	w0, [x20, #48]
     ea0:	cmp	w21, w0
     ea4:	b.hi	d38 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x2d8>  // b.pmore
     ea8:	str	w21, [x20, #48]
     eac:	add	w22, w22, #0x41
     eb0:	lsr	w24, w22, #6
     eb4:	ldr	x0, [x20, #40]
     eb8:	lsr	w22, w22, #6
     ebc:	cmp	x0, x22
     ec0:	b.hi	dc4 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x364>  // b.pmore
     ec4:	ldr	w0, [x20, #48]
     ec8:	ands	w0, w0, #0x3f
     ecc:	b.eq	ef4 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x494>  // b.none
     ed0:	lsl	x0, x27, x0
     ed4:	sub	w24, w24, #0x1
     ed8:	ldr	x1, [x20, #40]
     edc:	cmp	x24, x1
     ee0:	b.cs	de4 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x384>  // b.hs, b.nlast
     ee4:	ldr	x1, [x20, #32]
     ee8:	ldr	x2, [x1, x24, lsl #3]
     eec:	bic	x0, x2, x0
     ef0:	str	x0, [x1, x24, lsl #3]
     ef4:	adds	w3, w19, #0x2
     ef8:	b.cs	e04 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x3a4>  // b.hs, b.nlast
     efc:	ldr	w0, [x20, #48]
     f00:	cmp	w3, w0
     f04:	b.hi	e24 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x3c4>  // b.pmore
     f08:	lsr	w0, w19, #6
     f0c:	lsr	w1, w3, #6
     f10:	cmp	w1, w19, lsr #6
     f14:	b.eq	e44 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x3e4>  // b.none
     f18:	lsl	x1, x27, x19
     f1c:	mov	w4, w0
     f20:	ldr	x2, [x20, #40]
     f24:	cmp	x2, w0, uxtw
     f28:	b.ls	f7c <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x51c>  // b.plast
     f2c:	ldr	x2, [x20, #32]
     f30:	ldr	x0, [x2, x4, lsl #3]
     f34:	bic	x0, x0, x1
     f38:	str	x0, [x2, x4, lsl #3]
     f3c:	mov	w0, w19
     f40:	add	x0, x0, #0x3f
     f44:	and	x0, x0, #0xffffffffffffffc0
     f48:	add	w1, w0, #0x40
     f4c:	cmp	w3, w1
     f50:	b.cs	fa0 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x540>  // b.hs, b.nlast
     f54:	mov	w1, w0
     f58:	b	fc8 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x568>
     f5c:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     f60:	add	x3, x3, #0x0
     f64:	mov	w2, #0x1ab                 	// #427
     f68:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     f6c:	add	x1, x1, #0x0
     f70:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     f74:	add	x0, x0, #0x0
     f78:	bl	0 <__assert_fail>
     f7c:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     f80:	add	x3, x3, #0x0
     f84:	mov	w2, #0x1ab                 	// #427
     f88:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     f8c:	add	x1, x1, #0x0
     f90:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     f94:	add	x0, x0, #0x0
     f98:	bl	0 <__assert_fail>
     f9c:	mov	w1, w0
     fa0:	sub	w0, w1, #0x40
     fa4:	lsr	w0, w0, #6
     fa8:	ldr	x2, [x20, #40]
     fac:	cmp	x0, x2
     fb0:	b.cs	1000 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x5a0>  // b.hs, b.nlast
     fb4:	ldr	x2, [x20, #32]
     fb8:	str	xzr, [x2, x0, lsl #3]
     fbc:	add	w0, w1, #0x40
     fc0:	cmp	w3, w0
     fc4:	b.cs	f9c <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x53c>  // b.hs, b.nlast
     fc8:	cmp	w3, w1
     fcc:	b.ls	e74 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x414>  // b.plast
     fd0:	lsr	w1, w1, #6
     fd4:	ldr	x0, [x20, #40]
     fd8:	cmp	x1, x0
     fdc:	b.cs	1020 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x5c0>  // b.hs, b.nlast
     fe0:	ldr	x2, [x20, #32]
     fe4:	mov	x0, #0x1                   	// #1
     fe8:	lsl	x3, x0, x3
     fec:	neg	x3, x3
     ff0:	ldr	x0, [x2, x1, lsl #3]
     ff4:	and	x3, x0, x3
     ff8:	str	x3, [x2, x1, lsl #3]
     ffc:	b	e74 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x414>
    1000:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1004:	add	x3, x3, #0x0
    1008:	mov	w2, #0x1ab                 	// #427
    100c:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1010:	add	x1, x1, #0x0
    1014:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1018:	add	x0, x0, #0x0
    101c:	bl	0 <__assert_fail>
    1020:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1024:	add	x3, x3, #0x0
    1028:	mov	w2, #0x1ab                 	// #427
    102c:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1030:	add	x1, x1, #0x0
    1034:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1038:	add	x0, x0, #0x0
    103c:	bl	0 <__assert_fail>
    1040:	stp	x21, x22, [sp, #32]
    1044:	stp	x25, x26, [sp, #64]
    1048:	ldr	w27, [x20, #48]
    104c:	cbz	w27, 1100 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x6a0>
    1050:	sub	w27, w27, #0x1
    1054:	lsr	w25, w27, #6
    1058:	ldr	x24, [x20, #40]
    105c:	lsr	w26, w27, #6
    1060:	mov	x21, #0x0                   	// #0
    1064:	and	w27, w27, #0x3f
    1068:	add	w27, w27, #0x1
    106c:	b	10c0 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x660>
    1070:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1074:	add	x3, x3, #0x0
    1078:	mov	w2, #0x1ab                 	// #427
    107c:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1080:	add	x1, x1, #0x0
    1084:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1088:	add	x0, x0, #0x0
    108c:	bl	0 <__assert_fail>
    1090:	mov	w0, #0x0                   	// #0
    1094:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1098:	bic	x22, x22, x0
    109c:	b	10d8 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x678>
    10a0:	mov	w0, w27
    10a4:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    10a8:	and	x22, x22, x0
    10ac:	cbnz	x22, 10e4 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x684>
    10b0:	add	x0, x21, #0x1
    10b4:	cmp	x26, x21
    10b8:	b.eq	1100 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x6a0>  // b.none
    10bc:	mov	x21, x0
    10c0:	mov	w19, w21
    10c4:	cmp	x24, x21
    10c8:	b.eq	1070 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x610>  // b.none
    10cc:	ldr	x0, [x20, #32]
    10d0:	ldr	x22, [x0, x21, lsl #3]
    10d4:	cbz	w21, 1090 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x630>
    10d8:	cmp	w19, w25
    10dc:	b.ne	10ac <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x64c>  // b.any
    10e0:	b	10a0 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x640>
    10e4:	rbit	x22, x22
    10e8:	clz	x22, x22
    10ec:	add	w19, w22, w19, lsl #6
    10f0:	sub	w0, w23, #0x1
    10f4:	str	x0, [sp, #112]
    10f8:	mov	x25, #0x0                   	// #0
    10fc:	b	11e4 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x784>
    1100:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1104:	add	x3, x3, #0x0
    1108:	mov	w2, #0x86                  	// #134
    110c:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1110:	add	x1, x1, #0x0
    1114:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1118:	add	x0, x0, #0x0
    111c:	bl	0 <__assert_fail>
    1120:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1124:	add	x3, x3, #0x0
    1128:	mov	w2, #0x1ab                 	// #427
    112c:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1130:	add	x1, x1, #0x0
    1134:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1138:	add	x0, x0, #0x0
    113c:	bl	0 <__assert_fail>
    1140:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1144:	add	x3, x3, #0x0
    1148:	mov	w2, #0x1ab                 	// #427
    114c:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1150:	add	x1, x1, #0x0
    1154:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1158:	add	x0, x0, #0x0
    115c:	bl	0 <__assert_fail>
    1160:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1164:	add	x3, x3, #0x0
    1168:	mov	w2, #0xd0                  	// #208
    116c:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1170:	add	x1, x1, #0x0
    1174:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1178:	add	x0, x0, #0x0
    117c:	bl	0 <__assert_fail>
    1180:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1184:	add	x3, x3, #0x0
    1188:	mov	w2, #0x1ab                 	// #427
    118c:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1190:	add	x1, x1, #0x0
    1194:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1198:	add	x0, x0, #0x0
    119c:	bl	0 <__assert_fail>
    11a0:	mov	w0, w21
    11a4:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    11a8:	bic	x22, x22, x0
    11ac:	b	1298 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x838>
    11b0:	and	w0, w23, #0x3f
    11b4:	add	w0, w0, #0x1
    11b8:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    11bc:	ands	x22, x22, x0
    11c0:	b.eq	1268 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x808>  // b.none
    11c4:	rbit	x22, x22
    11c8:	clz	x22, x22
    11cc:	add	w19, w22, w19, lsl #6
    11d0:	add	x0, x25, #0x1
    11d4:	ldr	x1, [sp, #112]
    11d8:	cmp	x1, x25
    11dc:	b.eq	12c4 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x864>  // b.none
    11e0:	mov	x25, x0
    11e4:	cmn	w19, #0x1
    11e8:	b.eq	1100 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x6a0>  // b.none
    11ec:	mov	w21, w19
    11f0:	ldr	x0, [sp, #96]
    11f4:	cmp	x0, x25
    11f8:	b.eq	1120 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x6c0>  // b.none
    11fc:	ldr	x0, [sp, #104]
    1200:	str	w19, [x0, x25, lsl #2]
    1204:	lsr	w19, w19, #6
    1208:	ldr	x0, [x20, #40]
    120c:	cmp	x19, x0
    1210:	b.cs	1140 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x6e0>  // b.hs, b.nlast
    1214:	mov	x0, x20
    1218:	ldr	x2, [x0, #32]!
    121c:	mov	x1, #0x1                   	// #1
    1220:	lsl	x1, x1, x21
    1224:	ldr	x3, [x2, x19, lsl #3]
    1228:	bic	x1, x3, x1
    122c:	str	x1, [x2, x19, lsl #3]
    1230:	add	w21, w21, #0x1
    1234:	ldr	w23, [x0, #16]
    1238:	cmp	w23, w21
    123c:	b.cc	1160 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x700>  // b.lo, b.ul, b.last
    1240:	b.eq	12b4 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x854>  // b.none
    1244:	lsr	w26, w21, #6
    1248:	sub	w23, w23, #0x1
    124c:	lsr	w19, w23, #6
    1250:	cmp	w19, w21, lsr #6
    1254:	b.cc	12bc <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x85c>  // b.lo, b.ul, b.last
    1258:	ldr	x28, [x20, #40]
    125c:	mov	w24, w26
    1260:	and	w21, w21, #0x3f
    1264:	b	127c <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x81c>
    1268:	mov	w19, #0xffffffff            	// #-1
    126c:	b	11d0 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x770>
    1270:	add	x24, x24, #0x1
    1274:	cmp	w19, w24
    1278:	b.cc	12ac <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x84c>  // b.lo, b.ul, b.last
    127c:	mov	w27, w24
    1280:	cmp	x24, x28
    1284:	b.cs	1180 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x720>  // b.hs, b.nlast
    1288:	ldr	x0, [x20, #32]
    128c:	ldr	x22, [x0, x24, lsl #3]
    1290:	cmp	w24, w26
    1294:	b.eq	11a0 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x740>  // b.none
    1298:	cmp	w27, w19
    129c:	b.eq	11b0 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x750>  // b.none
    12a0:	cbz	x22, 1270 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x810>
    12a4:	mov	w19, w27
    12a8:	b	11c4 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x764>
    12ac:	mov	w19, #0xffffffff            	// #-1
    12b0:	b	11d0 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x770>
    12b4:	mov	w19, #0xffffffff            	// #-1
    12b8:	b	11d0 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x770>
    12bc:	mov	w19, #0xffffffff            	// #-1
    12c0:	b	11d0 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x770>
    12c4:	mov	x0, #0x1                   	// #1
    12c8:	ldr	x1, [sp, #120]
    12cc:	str	x0, [x1]
    12d0:	ldp	x19, x20, [sp, #16]
    12d4:	ldp	x21, x22, [sp, #32]
    12d8:	ldp	x23, x24, [sp, #48]
    12dc:	ldp	x25, x26, [sp, #64]
    12e0:	ldp	x27, x28, [sp, #80]
    12e4:	b	a80 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE+0x20>

00000000000012e8 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE>:
    12e8:	stp	x29, x30, [sp, #-208]!
    12ec:	mov	x29, sp
    12f0:	stp	x19, x20, [sp, #16]
    12f4:	mov	x20, x0
    12f8:	str	w1, [sp, #116]
    12fc:	str	x2, [sp, #104]
    1300:	mov	w0, w1
    1304:	ldr	w1, [x20, #20]
    1308:	cbz	x1, 1368 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x80>
    130c:	stp	x23, x24, [sp, #48]
    1310:	mov	x24, x8
    1314:	sub	x0, x0, #0x1
    1318:	add	x0, x0, x1
    131c:	udiv	x0, x0, x1
    1320:	mul	x0, x0, x1
    1324:	udiv	x0, x0, x1
    1328:	cmp	x3, w0, uxtw
    132c:	b.ne	1398 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0xb0>  // b.any
    1330:	stp	x21, x22, [sp, #32]
    1334:	stp	x25, x26, [sp, #64]
    1338:	lsl	x25, x3, #2
    133c:	ldr	x0, [sp, #104]
    1340:	add	x23, x0, x25
    1344:	cmp	x0, x23
    1348:	b.eq	1814 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x52c>  // b.none
    134c:	stp	x27, x28, [sp, #80]
    1350:	mov	x22, x0
    1354:	mov	x21, x0
    1358:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    135c:	add	x0, x0, #0x0
    1360:	str	x0, [sp, #136]
    1364:	b	169c <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x3b4>
    1368:	stp	x21, x22, [sp, #32]
    136c:	stp	x23, x24, [sp, #48]
    1370:	stp	x25, x26, [sp, #64]
    1374:	stp	x27, x28, [sp, #80]
    1378:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    137c:	add	x3, x3, #0x0
    1380:	mov	w2, #0x2ce                 	// #718
    1384:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1388:	add	x1, x1, #0x0
    138c:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1390:	add	x0, x0, #0x0
    1394:	bl	0 <__assert_fail>
    1398:	mov	w0, #0x5                   	// #5
    139c:	str	w0, [sp, #188]
    13a0:	add	x8, sp, #0xb0
    13a4:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    13a8:	add	x1, x1, #0x0
    13ac:	add	x0, sp, #0xbc
    13b0:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    13b4:	ldrb	w0, [x24, #8]
    13b8:	orr	w0, w0, #0x3
    13bc:	strb	w0, [x24, #8]
    13c0:	ldr	x0, [sp, #176]
    13c4:	ands	x1, x0, #0xfffffffffffffffe
    13c8:	cset	x0, ne  // ne = any
    13cc:	orr	x0, x0, x1
    13d0:	str	x0, [sp, #176]
    13d4:	ands	x0, x0, #0xfffffffffffffffe
    13d8:	b.eq	13f4 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x10c>  // b.none
    13dc:	str	x0, [x24]
    13e0:	mov	x0, x24
    13e4:	ldp	x23, x24, [sp, #48]
    13e8:	ldp	x19, x20, [sp, #16]
    13ec:	ldp	x29, x30, [sp], #208
    13f0:	ret
    13f4:	stp	x21, x22, [sp, #32]
    13f8:	stp	x25, x26, [sp, #64]
    13fc:	stp	x27, x28, [sp, #80]
    1400:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1404:	add	x3, x3, #0x0
    1408:	mov	w2, #0x1ce                 	// #462
    140c:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1410:	add	x1, x1, #0x0
    1414:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1418:	add	x0, x0, #0x0
    141c:	bl	0 <__assert_fail>
    1420:	add	w26, w19, #0x40
    1424:	lsr	w26, w26, #6
    1428:	lsl	x2, x28, #1
    142c:	cmp	x26, x2
    1430:	csel	x26, x26, x2, cs  // cs = hs, nlast
    1434:	cbz	x26, 14e4 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x1fc>
    1438:	lsl	x0, x26, #3
    143c:	str	x0, [sp, #128]
    1440:	mov	x1, x0
    1444:	ldr	x0, [x20, #32]
    1448:	bl	0 <realloc>
    144c:	str	x0, [sp, #120]
    1450:	cbz	x0, 1504 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x21c>
    1454:	ldr	x0, [sp, #120]
    1458:	str	x0, [x20, #32]
    145c:	str	x26, [x20, #40]
    1460:	ldr	w0, [x20, #48]
    1464:	add	w0, w0, #0x3f
    1468:	lsr	w1, w0, #6
    146c:	str	w1, [sp, #128]
    1470:	lsr	w0, w0, #6
    1474:	cmp	x26, x0
    1478:	b.hi	152c <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x244>  // b.pmore
    147c:	ldr	w0, [x20, #48]
    1480:	ands	w0, w0, #0x3f
    1484:	b.eq	14b4 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x1cc>  // b.none
    1488:	mov	x1, #0xffffffffffffffff    	// #-1
    148c:	lsl	x0, x1, x0
    1490:	ldr	w1, [sp, #128]
    1494:	sub	w1, w1, #0x1
    1498:	ldr	x2, [x20, #40]
    149c:	cmp	x1, x2
    14a0:	b.cs	154c <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x264>  // b.hs, b.nlast
    14a4:	ldr	x2, [x20, #32]
    14a8:	ldr	x3, [x2, x1, lsl #3]
    14ac:	bic	x0, x3, x0
    14b0:	str	x0, [x2, x1, lsl #3]
    14b4:	and	x0, x28, #0xffffffff
    14b8:	ldr	x2, [x20, #40]
    14bc:	cmp	x2, w28, uxtw
    14c0:	b.cc	156c <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x284>  // b.lo, b.ul, b.last
    14c4:	subs	x2, x2, x0
    14c8:	b.eq	16c0 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x3d8>  // b.none
    14cc:	ldr	x3, [x20, #32]
    14d0:	lsl	x2, x2, #3
    14d4:	mov	w1, #0xffffffff            	// #-1
    14d8:	add	x0, x3, x0, lsl #3
    14dc:	bl	0 <memset>
    14e0:	b	16c0 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x3d8>
    14e4:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    14e8:	add	x3, x3, #0x0
    14ec:	mov	w2, #0x376                 	// #886
    14f0:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    14f4:	add	x1, x1, #0x0
    14f8:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    14fc:	add	x0, x0, #0x0
    1500:	bl	0 <__assert_fail>
    1504:	ldr	x0, [sp, #128]
    1508:	cbnz	x0, 151c <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x234>
    150c:	mov	x0, #0x1                   	// #1
    1510:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1514:	str	x0, [sp, #120]
    1518:	b	1454 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x16c>
    151c:	mov	w1, #0x1                   	// #1
    1520:	ldr	x0, [sp, #136]
    1524:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    1528:	b	1454 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x16c>
    152c:	subs	x26, x26, x0
    1530:	b.eq	147c <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x194>  // b.none
    1534:	lsl	x2, x26, #3
    1538:	mov	w1, #0x0                   	// #0
    153c:	ldr	x3, [sp, #120]
    1540:	add	x0, x3, x0, lsl #3
    1544:	bl	0 <memset>
    1548:	b	147c <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x194>
    154c:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1550:	add	x3, x3, #0x0
    1554:	mov	w2, #0x1ab                 	// #427
    1558:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    155c:	add	x1, x1, #0x0
    1560:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1564:	add	x0, x0, #0x0
    1568:	bl	0 <__assert_fail>
    156c:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1570:	add	x3, x3, #0x0
    1574:	mov	w2, #0x174                 	// #372
    1578:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    157c:	add	x1, x1, #0x0
    1580:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1584:	add	x0, x0, #0x0
    1588:	bl	0 <__assert_fail>
    158c:	add	w0, w0, #0x3f
    1590:	lsr	w26, w0, #6
    1594:	ldr	x2, [x20, #40]
    1598:	lsr	w0, w0, #6
    159c:	cmp	x2, x0
    15a0:	b.hi	15dc <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x2f4>  // b.pmore
    15a4:	ldr	w0, [x20, #48]
    15a8:	ands	w0, w0, #0x3f
    15ac:	b.eq	16cc <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x3e4>  // b.none
    15b0:	mov	x1, #0xffffffffffffffff    	// #-1
    15b4:	lsl	x0, x1, x0
    15b8:	sub	w26, w26, #0x1
    15bc:	ldr	x1, [x20, #40]
    15c0:	cmp	x26, x1
    15c4:	b.cs	15fc <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x314>  // b.hs, b.nlast
    15c8:	ldr	x2, [x20, #32]
    15cc:	ldr	x1, [x2, x26, lsl #3]
    15d0:	orr	x0, x1, x0
    15d4:	str	x0, [x2, x26, lsl #3]
    15d8:	b	16cc <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x3e4>
    15dc:	subs	x2, x2, x0
    15e0:	b.eq	15a4 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x2bc>  // b.none
    15e4:	ldr	x3, [x20, #32]
    15e8:	lsl	x2, x2, #3
    15ec:	mov	w1, #0xffffffff            	// #-1
    15f0:	add	x0, x3, x0, lsl #3
    15f4:	bl	0 <memset>
    15f8:	b	15a4 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x2bc>
    15fc:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1600:	add	x3, x3, #0x0
    1604:	mov	w2, #0x1ab                 	// #427
    1608:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    160c:	add	x1, x1, #0x0
    1610:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1614:	add	x0, x0, #0x0
    1618:	bl	0 <__assert_fail>
    161c:	subs	x2, x2, x0
    1620:	b.eq	16e8 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x400>  // b.none
    1624:	ldr	x3, [x20, #32]
    1628:	lsl	x2, x2, #3
    162c:	mov	w1, #0x0                   	// #0
    1630:	add	x0, x3, x0, lsl #3
    1634:	bl	0 <memset>
    1638:	b	16e8 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x400>
    163c:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1640:	add	x3, x3, #0x0
    1644:	mov	w2, #0x1ab                 	// #427
    1648:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    164c:	add	x1, x1, #0x0
    1650:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1654:	add	x0, x0, #0x0
    1658:	bl	0 <__assert_fail>
    165c:	ldr	w0, [x20, #48]
    1660:	cmp	w19, w0
    1664:	b.cs	1720 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x438>  // b.hs, b.nlast
    1668:	mov	x0, #0x1                   	// #1
    166c:	lsl	x0, x0, x19
    1670:	lsr	w19, w19, #6
    1674:	ldr	x1, [x20, #40]
    1678:	cmp	x19, x1
    167c:	b.cs	1740 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x458>  // b.hs, b.nlast
    1680:	ldr	x1, [x20, #32]
    1684:	ldr	x1, [x1, x19, lsl #3]
    1688:	tst	x0, x1
    168c:	b.eq	1760 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x478>  // b.none
    1690:	add	x21, x21, #0x4
    1694:	cmp	x23, x21
    1698:	b.eq	17d8 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x4f0>  // b.none
    169c:	ldr	w19, [x21]
    16a0:	ldr	w0, [x20, #48]
    16a4:	cmp	w0, w19
    16a8:	b.hi	1668 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x380>  // b.pmore
    16ac:	add	w27, w19, #0x1
    16b0:	ldr	x28, [x20, #40]
    16b4:	add	w0, w19, #0x1
    16b8:	cmp	x0, x28, lsl #6
    16bc:	b.hi	1420 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x138>  // b.pmore
    16c0:	ldr	w0, [x20, #48]
    16c4:	cmp	w27, w0
    16c8:	b.hi	158c <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x2a4>  // b.pmore
    16cc:	str	w27, [x20, #48]
    16d0:	add	w0, w19, #0x40
    16d4:	lsr	w26, w0, #6
    16d8:	ldr	x2, [x20, #40]
    16dc:	lsr	w0, w0, #6
    16e0:	cmp	x2, x0
    16e4:	b.hi	161c <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x334>  // b.pmore
    16e8:	ldr	w0, [x20, #48]
    16ec:	ands	w0, w0, #0x3f
    16f0:	b.eq	165c <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x374>  // b.none
    16f4:	mov	x1, #0xffffffffffffffff    	// #-1
    16f8:	lsl	x0, x1, x0
    16fc:	sub	w26, w26, #0x1
    1700:	ldr	x1, [x20, #40]
    1704:	cmp	x26, x1
    1708:	b.cs	163c <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x354>  // b.hs, b.nlast
    170c:	ldr	x1, [x20, #32]
    1710:	ldr	x2, [x1, x26, lsl #3]
    1714:	bic	x0, x2, x0
    1718:	str	x0, [x1, x26, lsl #3]
    171c:	b	165c <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x374>
    1720:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1724:	add	x3, x3, #0x0
    1728:	mov	w2, #0x1f0                 	// #496
    172c:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1730:	add	x1, x1, #0x0
    1734:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1738:	add	x0, x0, #0x0
    173c:	bl	0 <__assert_fail>
    1740:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1744:	add	x3, x3, #0x0
    1748:	mov	w2, #0x1ab                 	// #427
    174c:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1750:	add	x1, x1, #0x0
    1754:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1758:	add	x0, x0, #0x0
    175c:	bl	0 <__assert_fail>
    1760:	mov	w0, #0x1                   	// #1
    1764:	str	w0, [sp, #204]
    1768:	add	x8, sp, #0xc0
    176c:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1770:	add	x1, x1, #0x0
    1774:	add	x0, sp, #0xcc
    1778:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    177c:	ldrb	w0, [x24, #8]
    1780:	orr	w0, w0, #0x3
    1784:	strb	w0, [x24, #8]
    1788:	ldr	x0, [sp, #192]
    178c:	ands	x1, x0, #0xfffffffffffffffe
    1790:	cset	x0, ne  // ne = any
    1794:	orr	x0, x0, x1
    1798:	str	x0, [sp, #192]
    179c:	ands	x0, x0, #0xfffffffffffffffe
    17a0:	b.eq	17b8 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x4d0>  // b.none
    17a4:	str	x0, [x24]
    17a8:	ldp	x21, x22, [sp, #32]
    17ac:	ldp	x25, x26, [sp, #64]
    17b0:	ldp	x27, x28, [sp, #80]
    17b4:	b	13e0 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0xf8>
    17b8:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    17bc:	add	x3, x3, #0x0
    17c0:	mov	w2, #0x1ce                 	// #462
    17c4:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    17c8:	add	x1, x1, #0x0
    17cc:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    17d0:	add	x0, x0, #0x0
    17d4:	bl	0 <__assert_fail>
    17d8:	mov	x4, #0x1                   	// #1
    17dc:	ldr	w0, [x22]
    17e0:	lsr	w1, w0, #6
    17e4:	ldr	x2, [x20, #40]
    17e8:	cmp	x1, x2
    17ec:	b.cs	18a0 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x5b8>  // b.hs, b.nlast
    17f0:	ldr	x2, [x20, #32]
    17f4:	lsl	x0, x4, x0
    17f8:	ldr	x3, [x2, x1, lsl #3]
    17fc:	bic	x0, x3, x0
    1800:	str	x0, [x2, x1, lsl #3]
    1804:	add	x22, x22, #0x4
    1808:	cmp	x23, x22
    180c:	b.ne	17dc <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x4f4>  // b.any
    1810:	ldp	x27, x28, [sp, #80]
    1814:	add	x21, x20, #0x50
    1818:	ldr	w0, [sp, #116]
    181c:	str	w0, [sp, #144]
    1820:	str	xzr, [sp, #152]
    1824:	str	xzr, [sp, #160]
    1828:	str	xzr, [sp, #168]
    182c:	cbz	x25, 18c0 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x5d8>
    1830:	mov	x0, x25
    1834:	bl	0 <_Znwm>
    1838:	str	x0, [sp, #152]
    183c:	add	x19, x0, x25
    1840:	str	x19, [sp, #168]
    1844:	mov	x2, x25
    1848:	ldr	x1, [sp, #104]
    184c:	bl	0 <memcpy>
    1850:	str	x19, [sp, #160]
    1854:	add	x1, sp, #0x90
    1858:	mov	x0, x21
    185c:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1860:	ldr	x0, [sp, #152]
    1864:	cbz	x0, 186c <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x584>
    1868:	bl	0 <_ZdlPv>
    186c:	ldr	x0, [x20, #88]
    1870:	ldr	x1, [x20, #80]
    1874:	sub	x0, x0, x1
    1878:	asr	x0, x0, #5
    187c:	sub	x0, x0, #0x1
    1880:	ldrb	w1, [x24, #8]
    1884:	and	w1, w1, #0xfffffffe
    1888:	orr	w1, w1, #0x2
    188c:	strb	w1, [x24, #8]
    1890:	str	w0, [x24]
    1894:	ldp	x21, x22, [sp, #32]
    1898:	ldp	x25, x26, [sp, #64]
    189c:	b	13e0 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0xf8>
    18a0:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    18a4:	add	x3, x3, #0x0
    18a8:	mov	w2, #0x1ab                 	// #427
    18ac:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    18b0:	add	x1, x1, #0x0
    18b4:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    18b8:	add	x0, x0, #0x0
    18bc:	bl	0 <__assert_fail>
    18c0:	str	xzr, [sp, #152]
    18c4:	mov	x19, x25
    18c8:	str	x25, [sp, #168]
    18cc:	b	1850 <_ZN4llvm3msf10MSFBuilder9addStreamEjNS_8ArrayRefIjEE+0x568>

00000000000018d0 <_ZN4llvm3msf10MSFBuilder9addStreamEj>:
    18d0:	stp	x29, x30, [sp, #-128]!
    18d4:	mov	x29, sp
    18d8:	stp	x21, x22, [sp, #32]
    18dc:	mov	x21, x0
    18e0:	ldr	w0, [x0, #20]
    18e4:	cbz	x0, 198c <_ZN4llvm3msf10MSFBuilder9addStreamEj+0xbc>
    18e8:	stp	x19, x20, [sp, #16]
    18ec:	mov	x20, x8
    18f0:	mov	w22, w1
    18f4:	mov	w2, w1
    18f8:	sub	x19, x2, #0x1
    18fc:	add	x19, x19, x0
    1900:	udiv	x19, x19, x0
    1904:	mul	x19, x19, x0
    1908:	udiv	x19, x19, x0
    190c:	str	xzr, [sp, #104]
    1910:	str	xzr, [sp, #112]
    1914:	str	xzr, [sp, #120]
    1918:	and	x1, x19, #0xffffffff
    191c:	cbnz	w19, 19b4 <_ZN4llvm3msf10MSFBuilder9addStreamEj+0xe4>
    1920:	ldr	x2, [sp, #104]
    1924:	ldr	x3, [sp, #112]
    1928:	sub	x3, x3, x2
    192c:	add	x8, sp, #0x48
    1930:	asr	x3, x3, #2
    1934:	mov	w1, w19
    1938:	mov	x0, x21
    193c:	bl	a60 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE>
    1940:	ldr	x2, [sp, #72]
    1944:	ands	x0, x2, #0xfffffffffffffffe
    1948:	cset	x2, ne  // ne = any
    194c:	orr	x2, x2, x0
    1950:	str	x2, [sp, #72]
    1954:	ands	x1, x2, #0xfffffffffffffffe
    1958:	b.eq	19c0 <_ZN4llvm3msf10MSFBuilder9addStreamEj+0xf0>  // b.none
    195c:	ldrb	w0, [x20, #8]
    1960:	orr	w0, w0, #0x3
    1964:	strb	w0, [x20, #8]
    1968:	str	x1, [x20]
    196c:	ldr	x0, [sp, #104]
    1970:	cbz	x0, 1978 <_ZN4llvm3msf10MSFBuilder9addStreamEj+0xa8>
    1974:	bl	0 <_ZdlPv>
    1978:	mov	x0, x20
    197c:	ldp	x19, x20, [sp, #16]
    1980:	ldp	x21, x22, [sp, #32]
    1984:	ldp	x29, x30, [sp], #128
    1988:	ret
    198c:	stp	x19, x20, [sp, #16]
    1990:	str	x23, [sp, #48]
    1994:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1998:	add	x3, x3, #0x0
    199c:	mov	w2, #0x2ce                 	// #718
    19a0:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    19a4:	add	x1, x1, #0x0
    19a8:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    19ac:	add	x0, x0, #0x0
    19b0:	bl	0 <__assert_fail>
    19b4:	add	x0, sp, #0x68
    19b8:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    19bc:	b	1920 <_ZN4llvm3msf10MSFBuilder9addStreamEj+0x50>
    19c0:	str	x23, [sp, #48]
    19c4:	tbnz	w2, #0, 1a8c <_ZN4llvm3msf10MSFBuilder9addStreamEj+0x1bc>
    19c8:	add	x23, x21, #0x50
    19cc:	str	w22, [sp, #72]
    19d0:	ldr	x22, [sp, #112]
    19d4:	ldr	x0, [sp, #104]
    19d8:	sub	x22, x22, x0
    19dc:	asr	x0, x22, #2
    19e0:	str	xzr, [sp, #80]
    19e4:	str	xzr, [sp, #88]
    19e8:	str	xzr, [sp, #96]
    19ec:	cmp	xzr, x22, asr #2
    19f0:	b.eq	1a98 <_ZN4llvm3msf10MSFBuilder9addStreamEj+0x1c8>  // b.none
    19f4:	mov	x1, #0x1fffffffffffffff    	// #2305843009213693951
    19f8:	cmp	x0, x1
    19fc:	b.hi	1a94 <_ZN4llvm3msf10MSFBuilder9addStreamEj+0x1c4>  // b.pmore
    1a00:	mov	x0, x22
    1a04:	bl	0 <_Znwm>
    1a08:	mov	x19, x0
    1a0c:	str	x19, [sp, #80]
    1a10:	str	x19, [sp, #88]
    1a14:	add	x22, x19, x22
    1a18:	str	x22, [sp, #96]
    1a1c:	ldr	x1, [sp, #104]
    1a20:	ldr	x0, [sp, #112]
    1a24:	sub	x22, x0, x1
    1a28:	cmp	x1, x0
    1a2c:	b.eq	1a3c <_ZN4llvm3msf10MSFBuilder9addStreamEj+0x16c>  // b.none
    1a30:	mov	x2, x22
    1a34:	mov	x0, x19
    1a38:	bl	0 <memmove>
    1a3c:	add	x19, x19, x22
    1a40:	str	x19, [sp, #88]
    1a44:	add	x1, sp, #0x48
    1a48:	mov	x0, x23
    1a4c:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1a50:	ldr	x0, [sp, #80]
    1a54:	cbz	x0, 1a5c <_ZN4llvm3msf10MSFBuilder9addStreamEj+0x18c>
    1a58:	bl	0 <_ZdlPv>
    1a5c:	ldr	x0, [x21, #88]
    1a60:	ldr	x1, [x21, #80]
    1a64:	sub	x0, x0, x1
    1a68:	asr	x0, x0, #5
    1a6c:	sub	x0, x0, #0x1
    1a70:	ldrb	w1, [x20, #8]
    1a74:	and	w1, w1, #0xfffffffe
    1a78:	orr	w1, w1, #0x2
    1a7c:	strb	w1, [x20, #8]
    1a80:	str	w0, [x20]
    1a84:	ldr	x23, [sp, #48]
    1a88:	b	196c <_ZN4llvm3msf10MSFBuilder9addStreamEj+0x9c>
    1a8c:	add	x0, sp, #0x48
    1a90:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    1a94:	bl	0 <_ZSt17__throw_bad_allocv>
    1a98:	mov	x19, #0x0                   	// #0
    1a9c:	b	1a0c <_ZN4llvm3msf10MSFBuilder9addStreamEj+0x13c>

0000000000001aa0 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj>:
    1aa0:	stp	x29, x30, [sp, #-128]!
    1aa4:	mov	x29, sp
    1aa8:	stp	x19, x20, [sp, #16]
    1aac:	stp	x21, x22, [sp, #32]
    1ab0:	mov	x22, x8
    1ab4:	mov	x19, x0
    1ab8:	mov	w21, w1
    1abc:	mov	w20, w2
    1ac0:	bl	468 <_ZNK4llvm3msf10MSFBuilder13getStreamSizeEj>
    1ac4:	cmp	w0, w20
    1ac8:	b.eq	1b34 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x94>  // b.none
    1acc:	mov	w3, w20
    1ad0:	ldr	w2, [x19, #20]
    1ad4:	cbz	x2, 1b40 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0xa0>
    1ad8:	sub	x3, x3, #0x1
    1adc:	add	x3, x3, x2
    1ae0:	udiv	x3, x3, x2
    1ae4:	mul	x3, x3, x2
    1ae8:	udiv	x3, x3, x2
    1aec:	sub	x1, x2, #0x1
    1af0:	add	x1, x1, w0, uxtw
    1af4:	udiv	x1, x1, x2
    1af8:	mul	x1, x1, x2
    1afc:	udiv	x1, x1, x2
    1b00:	cmp	w3, w1
    1b04:	b.hi	1b6c <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0xcc>  // b.pmore
    1b08:	b.cc	1c38 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x198>  // b.lo, b.ul, b.last
    1b0c:	ldr	x0, [x19, #80]
    1b10:	ubfiz	x21, x21, #5, #32
    1b14:	str	w20, [x0, x21]
    1b18:	mov	x0, #0x1                   	// #1
    1b1c:	str	x0, [x22]
    1b20:	mov	x0, x22
    1b24:	ldp	x19, x20, [sp, #16]
    1b28:	ldp	x21, x22, [sp, #32]
    1b2c:	ldp	x29, x30, [sp], #128
    1b30:	ret
    1b34:	mov	x0, #0x1                   	// #1
    1b38:	str	x0, [x22]
    1b3c:	b	1b20 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x80>
    1b40:	stp	x23, x24, [sp, #48]
    1b44:	stp	x25, x26, [sp, #64]
    1b48:	str	x27, [sp, #80]
    1b4c:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1b50:	add	x3, x3, #0x0
    1b54:	mov	w2, #0x2ce                 	// #718
    1b58:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1b5c:	add	x1, x1, #0x0
    1b60:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1b64:	add	x0, x0, #0x0
    1b68:	bl	0 <__assert_fail>
    1b6c:	stp	x23, x24, [sp, #48]
    1b70:	sub	w23, w3, w1
    1b74:	str	xzr, [sp, #104]
    1b78:	str	xzr, [sp, #112]
    1b7c:	str	xzr, [sp, #120]
    1b80:	sub	w1, w3, w1
    1b84:	cbnz	x1, 1be0 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x140>
    1b88:	ldr	x2, [sp, #104]
    1b8c:	ldr	x3, [sp, #112]
    1b90:	sub	x3, x3, x2
    1b94:	add	x8, sp, #0x60
    1b98:	asr	x3, x3, #2
    1b9c:	mov	w1, w23
    1ba0:	mov	x0, x19
    1ba4:	bl	a60 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE>
    1ba8:	ldr	x0, [sp, #96]
    1bac:	ands	x1, x0, #0xfffffffffffffffe
    1bb0:	cset	x0, ne  // ne = any
    1bb4:	orr	x0, x0, x1
    1bb8:	str	x0, [sp, #96]
    1bbc:	ands	x1, x0, #0xfffffffffffffffe
    1bc0:	b.eq	1bec <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x14c>  // b.none
    1bc4:	orr	x1, x1, #0x1
    1bc8:	str	x1, [x22]
    1bcc:	ldr	x0, [sp, #104]
    1bd0:	cbz	x0, 1e14 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x374>
    1bd4:	bl	0 <_ZdlPv>
    1bd8:	ldp	x23, x24, [sp, #48]
    1bdc:	b	1b20 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x80>
    1be0:	add	x0, sp, #0x68
    1be4:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1be8:	b	1b88 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0xe8>
    1bec:	tbnz	w0, #0, 1c28 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x188>
    1bf0:	ubfiz	x0, x21, #5, #32
    1bf4:	ldr	x1, [x19, #80]
    1bf8:	add	x0, x1, x0
    1bfc:	mov	w4, #0x0                   	// #0
    1c00:	ldr	x3, [sp, #112]
    1c04:	ldr	x2, [sp, #104]
    1c08:	ldr	x1, [x0, #16]
    1c0c:	add	x0, x0, #0x8
    1c10:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1c14:	ldr	x0, [sp, #104]
    1c18:	cbz	x0, 1dfc <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x35c>
    1c1c:	bl	0 <_ZdlPv>
    1c20:	ldp	x23, x24, [sp, #48]
    1c24:	b	1b0c <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x6c>
    1c28:	stp	x25, x26, [sp, #64]
    1c2c:	str	x27, [sp, #80]
    1c30:	add	x0, sp, #0x60
    1c34:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    1c38:	stp	x23, x24, [sp, #48]
    1c3c:	stp	x25, x26, [sp, #64]
    1c40:	str	x27, [sp, #80]
    1c44:	sub	w1, w1, w3
    1c48:	ubfiz	x9, x21, #5, #32
    1c4c:	ldr	x0, [x19, #80]
    1c50:	add	x0, x0, x9
    1c54:	ldr	x23, [x0, #8]
    1c58:	ldr	x0, [x0, #16]
    1c5c:	sub	x0, x0, x23
    1c60:	asr	x8, x0, #2
    1c64:	and	x3, x3, #0xffffffff
    1c68:	cmp	x3, x0, asr #2
    1c6c:	b.hi	1d50 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x2b0>  // b.pmore
    1c70:	add	x2, x23, x3, lsl #2
    1c74:	sub	x3, x8, x3
    1c78:	add	x3, x2, x3, lsl #2
    1c7c:	cmp	x3, x2
    1c80:	b.eq	1cc8 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x228>  // b.none
    1c84:	mov	x7, #0x1                   	// #1
    1c88:	ldr	w0, [x2]
    1c8c:	ldr	w4, [x19, #48]
    1c90:	cmp	w0, w4
    1c94:	b.cs	1d70 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x2d0>  // b.hs, b.nlast
    1c98:	lsr	w4, w0, #6
    1c9c:	ldr	x5, [x19, #40]
    1ca0:	cmp	x4, x5
    1ca4:	b.cs	1d90 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x2f0>  // b.hs, b.nlast
    1ca8:	ldr	x6, [x19, #32]
    1cac:	lsl	x0, x7, x0
    1cb0:	ldr	x5, [x6, x4, lsl #3]
    1cb4:	orr	x0, x5, x0
    1cb8:	str	x0, [x6, x4, lsl #3]
    1cbc:	add	x2, x2, #0x4
    1cc0:	cmp	x3, x2
    1cc4:	b.ne	1c88 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x1e8>  // b.any
    1cc8:	ldr	x24, [x19, #80]
    1ccc:	add	x24, x24, x9
    1cd0:	mov	w0, w1
    1cd4:	cmp	x8, w1, uxtw
    1cd8:	b.cc	1db0 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x310>  // b.lo, b.ul, b.last
    1cdc:	sub	x0, x8, x0
    1ce0:	cmp	x8, x0
    1ce4:	b.cc	1dd0 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x330>  // b.lo, b.ul, b.last
    1ce8:	lsl	x26, x0, #2
    1cec:	sbfx	x1, x0, #0, #62
    1cf0:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
    1cf4:	cmp	x1, x0
    1cf8:	b.hi	1df0 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x350>  // b.pmore
    1cfc:	mov	x25, #0x0                   	// #0
    1d00:	cbz	x1, 1d10 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x270>
    1d04:	mov	x0, x26
    1d08:	bl	0 <_Znwm>
    1d0c:	mov	x25, x0
    1d10:	add	x27, x25, x26
    1d14:	cbz	x26, 1d28 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x288>
    1d18:	mov	x2, x26
    1d1c:	mov	x1, x23
    1d20:	mov	x0, x25
    1d24:	bl	0 <memcpy>
    1d28:	ldr	x0, [x24, #8]
    1d2c:	str	x25, [x24, #8]
    1d30:	str	x27, [x24, #16]
    1d34:	str	x27, [x24, #24]
    1d38:	cbz	x0, 1e04 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x364>
    1d3c:	bl	0 <_ZdlPv>
    1d40:	ldp	x23, x24, [sp, #48]
    1d44:	ldp	x25, x26, [sp, #64]
    1d48:	ldr	x27, [sp, #80]
    1d4c:	b	1b0c <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x6c>
    1d50:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1d54:	add	x3, x3, #0x0
    1d58:	mov	w2, #0xc6                  	// #198
    1d5c:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1d60:	add	x1, x1, #0x0
    1d64:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1d68:	add	x0, x0, #0x0
    1d6c:	bl	0 <__assert_fail>
    1d70:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1d74:	add	x3, x3, #0x0
    1d78:	mov	w2, #0x1eb                 	// #491
    1d7c:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1d80:	add	x1, x1, #0x0
    1d84:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1d88:	add	x0, x0, #0x0
    1d8c:	bl	0 <__assert_fail>
    1d90:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1d94:	add	x3, x3, #0x0
    1d98:	mov	w2, #0x1ab                 	// #427
    1d9c:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1da0:	add	x1, x1, #0x0
    1da4:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1da8:	add	x0, x0, #0x0
    1dac:	bl	0 <__assert_fail>
    1db0:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1db4:	add	x3, x3, #0x0
    1db8:	mov	w2, #0xcc                  	// #204
    1dbc:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1dc0:	add	x1, x1, #0x0
    1dc4:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1dc8:	add	x0, x0, #0x0
    1dcc:	bl	0 <__assert_fail>
    1dd0:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1dd4:	add	x3, x3, #0x0
    1dd8:	mov	w2, #0xbd                  	// #189
    1ddc:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1de0:	add	x1, x1, #0x0
    1de4:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1de8:	add	x0, x0, #0x0
    1dec:	bl	0 <__assert_fail>
    1df0:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1df4:	add	x0, x0, #0x0
    1df8:	bl	0 <_ZSt20__throw_length_errorPKc>
    1dfc:	ldp	x23, x24, [sp, #48]
    1e00:	b	1b0c <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x6c>
    1e04:	ldp	x23, x24, [sp, #48]
    1e08:	ldp	x25, x26, [sp, #64]
    1e0c:	ldr	x27, [sp, #80]
    1e10:	b	1b0c <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x6c>
    1e14:	ldp	x23, x24, [sp, #48]
    1e18:	b	1b20 <_ZN4llvm3msf10MSFBuilder13setStreamSizeEjj+0x80>

0000000000001e1c <_ZN4llvm3msf10MSFBuilder14generateLayoutEv>:
    1e1c:	stp	x29, x30, [sp, #-240]!
    1e20:	mov	x29, sp
    1e24:	stp	x19, x20, [sp, #16]
    1e28:	stp	x21, x22, [sp, #32]
    1e2c:	mov	x20, x8
    1e30:	mov	x19, x0
    1e34:	ldr	x22, [x0]
    1e38:	ldr	x0, [x22, #80]
    1e3c:	add	x0, x0, #0x38
    1e40:	str	x0, [x22, #80]
    1e44:	ldr	x21, [x22]
    1e48:	ldr	x0, [x22, #8]
    1e4c:	sub	x0, x0, x21
    1e50:	cmp	x0, #0x37
    1e54:	b.hi	1ee4 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0xc8>  // b.pmore
    1e58:	stp	x23, x24, [sp, #48]
    1e5c:	ldr	w0, [x22, #24]
    1e60:	lsr	w1, w0, #7
    1e64:	cmp	w0, #0xeff
    1e68:	b.ls	2100 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x2e4>  // b.plast
    1e6c:	mov	x0, #0x40000000000         	// #4398046511104
    1e70:	bl	0 <malloc>
    1e74:	mov	x21, x0
    1e78:	cbz	x0, 2130 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x314>
    1e7c:	mov	x23, #0x40000000000         	// #4398046511104
    1e80:	ldr	w1, [x22, #24]
    1e84:	ldr	w0, [x22, #28]
    1e88:	cmp	w1, w0
    1e8c:	b.cs	2138 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x31c>  // b.hs, b.nlast
    1e90:	ldr	w1, [x22, #24]
    1e94:	ldr	x0, [x22, #16]
    1e98:	str	x21, [x0, x1, lsl #3]
    1e9c:	ldr	w0, [x22, #24]
    1ea0:	mov	w1, w0
    1ea4:	add	x1, x1, #0x1
    1ea8:	ldr	w2, [x22, #28]
    1eac:	cmp	x1, x2
    1eb0:	b.hi	2150 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x334>  // b.pmore
    1eb4:	add	w0, w0, #0x1
    1eb8:	str	w0, [x22, #24]
    1ebc:	str	x21, [x22]
    1ec0:	add	x0, x21, x23
    1ec4:	str	x0, [x22, #8]
    1ec8:	add	x1, x21, #0x38
    1ecc:	cmp	x0, x1
    1ed0:	b.cc	2178 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x35c>  // b.lo, b.ul, b.last
    1ed4:	add	x0, x21, #0x38
    1ed8:	str	x0, [x22]
    1edc:	ldp	x23, x24, [sp, #48]
    1ee0:	b	1eec <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0xd0>
    1ee4:	add	x0, x21, #0x38
    1ee8:	str	x0, [x22]
    1eec:	str	xzr, [sp, #160]
    1ef0:	str	xzr, [sp, #168]
    1ef4:	str	wzr, [sp, #176]
    1ef8:	str	xzr, [sp, #184]
    1efc:	str	xzr, [sp, #192]
    1f00:	str	xzr, [sp, #200]
    1f04:	str	xzr, [sp, #208]
    1f08:	str	xzr, [sp, #216]
    1f0c:	str	xzr, [sp, #224]
    1f10:	str	xzr, [sp, #232]
    1f14:	str	x21, [sp, #152]
    1f18:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    1f1c:	add	x0, x0, #0x0
    1f20:	ldp	x2, x3, [x0]
    1f24:	stp	x2, x3, [x21]
    1f28:	ldp	x0, x1, [x0, #16]
    1f2c:	stp	x0, x1, [x21, #16]
    1f30:	ldr	w0, [x19, #24]
    1f34:	str	w0, [x21, #52]
    1f38:	ldr	w0, [x19, #20]
    1f3c:	str	w0, [x21, #32]
    1f40:	mov	x0, x19
    1f44:	bl	498 <_ZNK4llvm3msf10MSFBuilder24computeDirectoryByteSizeEv>
    1f48:	str	w0, [x21, #44]
    1f4c:	ldr	w0, [x19, #12]
    1f50:	str	w0, [x21, #36]
    1f54:	ldr	w0, [x19, #16]
    1f58:	str	w0, [x21, #48]
    1f5c:	ldr	w2, [x21, #44]
    1f60:	ldr	w0, [x19, #20]
    1f64:	cbz	x0, 21a0 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x384>
    1f68:	stp	x23, x24, [sp, #48]
    1f6c:	sub	x1, x0, #0x1
    1f70:	add	x1, x1, x2
    1f74:	udiv	x1, x1, x0
    1f78:	mul	x1, x1, x0
    1f7c:	udiv	x1, x1, x0
    1f80:	and	x22, x1, #0xffffffff
    1f84:	ldr	x2, [x19, #56]
    1f88:	ldr	x3, [x19, #64]
    1f8c:	sub	x3, x3, x2
    1f90:	asr	x3, x3, #2
    1f94:	cmp	x3, w1, uxtw
    1f98:	b.cc	21cc <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x3b0>  // b.lo, b.ul, b.last
    1f9c:	cmp	x22, x3
    1fa0:	b.cc	2294 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x478>  // b.lo, b.ul, b.last
    1fa4:	ldr	w0, [x19, #48]
    1fa8:	str	w0, [x21, #40]
    1fac:	ldr	x23, [x19]
    1fb0:	lsl	x24, x22, #2
    1fb4:	ldr	x0, [x23, #80]
    1fb8:	add	x0, x0, x24
    1fbc:	str	x0, [x23, #80]
    1fc0:	ldr	x21, [x23]
    1fc4:	ldr	x0, [x23, #8]
    1fc8:	sub	x0, x0, x21
    1fcc:	cmp	x24, x0
    1fd0:	b.ls	23e0 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x5c4>  // b.plast
    1fd4:	cmp	x24, #0x1, lsl #12
    1fd8:	b.ls	2448 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x62c>  // b.plast
    1fdc:	mov	x0, x24
    1fe0:	bl	0 <malloc>
    1fe4:	mov	x21, x0
    1fe8:	cbz	x0, 23fc <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x5e0>
    1fec:	ldr	w1, [x23, #72]
    1ff0:	ldr	w0, [x23, #76]
    1ff4:	cmp	w1, w0
    1ff8:	b.cs	2410 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x5f4>  // b.hs, b.nlast
    1ffc:	ldr	w0, [x23, #72]
    2000:	lsl	x0, x0, #4
    2004:	ldr	x1, [x23, #64]
    2008:	add	x2, x1, x0
    200c:	str	x21, [x1, x0]
    2010:	str	x24, [x2, #8]
    2014:	ldr	w0, [x23, #72]
    2018:	mov	w1, w0
    201c:	add	x1, x1, #0x1
    2020:	ldr	w2, [x23, #76]
    2024:	cmp	x1, x2
    2028:	b.hi	2420 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x604>  // b.pmore
    202c:	add	w0, w0, #0x1
    2030:	str	w0, [x23, #72]
    2034:	ldr	x1, [x19, #56]
    2038:	asr	x0, x24, #2
    203c:	mov	x3, x21
    2040:	ldr	w2, [x1], #4
    2044:	str	w2, [x21], #4
    2048:	sub	x0, x0, #0x1
    204c:	cmp	x0, #0x0
    2050:	b.gt	2040 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x224>
    2054:	str	x3, [sp, #184]
    2058:	str	x22, [sp, #192]
    205c:	ldr	x21, [x19, #80]
    2060:	ldr	x0, [x19, #88]
    2064:	cmp	x21, x0
    2068:	b.eq	28a4 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0xa88>  // b.none
    206c:	ldr	x23, [x19]
    2070:	sub	x21, x0, x21
    2074:	asr	x21, x21, #5
    2078:	lsl	x21, x21, #2
    207c:	ldr	x0, [x23, #80]
    2080:	add	x0, x0, x21
    2084:	str	x0, [x23, #80]
    2088:	ldr	x22, [x23]
    208c:	ldr	x0, [x23, #8]
    2090:	sub	x0, x0, x22
    2094:	cmp	x21, x0
    2098:	b.ls	256c <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x750>  // b.plast
    209c:	cmp	x21, #0x1, lsl #12
    20a0:	b.ls	260c <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x7f0>  // b.plast
    20a4:	mov	x0, x21
    20a8:	bl	0 <malloc>
    20ac:	mov	x22, x0
    20b0:	cbz	x0, 25c0 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x7a4>
    20b4:	ldr	w1, [x23, #72]
    20b8:	ldr	w0, [x23, #76]
    20bc:	cmp	w1, w0
    20c0:	b.cs	25d4 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x7b8>  // b.hs, b.nlast
    20c4:	ldr	w0, [x23, #72]
    20c8:	lsl	x0, x0, #4
    20cc:	ldr	x1, [x23, #64]
    20d0:	add	x2, x1, x0
    20d4:	str	x22, [x1, x0]
    20d8:	str	x21, [x2, #8]
    20dc:	ldr	w0, [x23, #72]
    20e0:	mov	w1, w0
    20e4:	add	x1, x1, #0x1
    20e8:	ldr	w2, [x23, #76]
    20ec:	cmp	x1, x2
    20f0:	b.hi	25e4 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x7c8>  // b.pmore
    20f4:	add	w0, w0, #0x1
    20f8:	str	w0, [x23, #72]
    20fc:	b	2574 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x758>
    2100:	mov	x0, #0x1000                	// #4096
    2104:	lsl	x23, x0, x1
    2108:	mov	x0, x23
    210c:	bl	0 <malloc>
    2110:	mov	x21, x0
    2114:	cbnz	x0, 1e80 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x64>
    2118:	mov	w1, #0x1                   	// #1
    211c:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2120:	add	x0, x0, #0x0
    2124:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    2128:	mov	x21, #0x0                   	// #0
    212c:	b	1e80 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x64>
    2130:	mov	x23, #0x40000000000         	// #4398046511104
    2134:	b	2118 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x2fc>
    2138:	mov	x3, #0x8                   	// #8
    213c:	mov	x2, #0x0                   	// #0
    2140:	add	x1, x22, #0x20
    2144:	add	x0, x22, #0x10
    2148:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    214c:	b	1e90 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x74>
    2150:	stp	x25, x26, [sp, #64]
    2154:	stp	x27, x28, [sp, #80]
    2158:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    215c:	add	x3, x3, #0x0
    2160:	mov	w2, #0x43                  	// #67
    2164:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2168:	add	x1, x1, #0x0
    216c:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2170:	add	x0, x0, #0x0
    2174:	bl	0 <__assert_fail>
    2178:	stp	x25, x26, [sp, #64]
    217c:	stp	x27, x28, [sp, #80]
    2180:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2184:	add	x3, x3, #0x0
    2188:	mov	w2, #0x105                 	// #261
    218c:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2190:	add	x1, x1, #0x0
    2194:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2198:	add	x0, x0, #0x0
    219c:	bl	0 <__assert_fail>
    21a0:	stp	x23, x24, [sp, #48]
    21a4:	stp	x25, x26, [sp, #64]
    21a8:	stp	x27, x28, [sp, #80]
    21ac:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    21b0:	add	x3, x3, #0x0
    21b4:	mov	w2, #0x2ce                 	// #718
    21b8:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    21bc:	add	x1, x1, #0x0
    21c0:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    21c4:	add	x0, x0, #0x0
    21c8:	bl	0 <__assert_fail>
    21cc:	str	xzr, [sp, #128]
    21d0:	str	xzr, [sp, #136]
    21d4:	str	xzr, [sp, #144]
    21d8:	sub	w23, w1, w3
    21dc:	sub	w1, w1, w3
    21e0:	cbnz	x1, 224c <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x430>
    21e4:	ldr	x2, [sp, #128]
    21e8:	ldr	x3, [sp, #136]
    21ec:	sub	x3, x3, x2
    21f0:	add	x8, sp, #0x78
    21f4:	asr	x3, x3, #2
    21f8:	mov	w1, w23
    21fc:	mov	x0, x19
    2200:	bl	a60 <_ZN4llvm3msf10MSFBuilder14allocateBlocksEjNS_15MutableArrayRefIjEE>
    2204:	ldr	x0, [sp, #120]
    2208:	ands	x1, x0, #0xfffffffffffffffe
    220c:	cset	x0, ne  // ne = any
    2210:	orr	x0, x0, x1
    2214:	str	x0, [sp, #120]
    2218:	ands	x1, x0, #0xfffffffffffffffe
    221c:	b.eq	2258 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x43c>  // b.none
    2220:	ldrb	w0, [x20, #88]
    2224:	orr	w0, w0, #0x3
    2228:	strb	w0, [x20, #88]
    222c:	str	x1, [x20]
    2230:	ldr	x0, [sp, #128]
    2234:	cbz	x0, 223c <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x420>
    2238:	bl	0 <_ZdlPv>
    223c:	ldr	x0, [sp, #216]
    2240:	cbz	x0, 295c <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0xb40>
    2244:	bl	0 <_ZdlPv>
    2248:	b	295c <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0xb40>
    224c:	add	x0, sp, #0x80
    2250:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2254:	b	21e4 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x3c8>
    2258:	tbnz	w0, #0, 2284 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x468>
    225c:	mov	w4, #0x0                   	// #0
    2260:	ldr	x3, [sp, #136]
    2264:	ldr	x2, [sp, #128]
    2268:	ldr	x1, [x19, #64]
    226c:	add	x0, x19, #0x38
    2270:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2274:	ldr	x0, [sp, #128]
    2278:	cbz	x0, 1fa4 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x188>
    227c:	bl	0 <_ZdlPv>
    2280:	b	1fa4 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x188>
    2284:	stp	x25, x26, [sp, #64]
    2288:	stp	x27, x28, [sp, #80]
    228c:	add	x0, sp, #0x78
    2290:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    2294:	sub	w0, w3, w1
    2298:	cmp	x0, x3
    229c:	b.hi	2330 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x514>  // b.pmore
    22a0:	sub	x0, x3, x0
    22a4:	cmp	x3, x0
    22a8:	b.cc	2358 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x53c>  // b.lo, b.ul, b.last
    22ac:	add	x0, x2, x0, lsl #2
    22b0:	cmp	x2, x0
    22b4:	b.eq	22fc <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x4e0>  // b.none
    22b8:	mov	x6, #0x1                   	// #1
    22bc:	ldr	w1, [x2]
    22c0:	ldr	w3, [x19, #48]
    22c4:	cmp	w1, w3
    22c8:	b.cs	2380 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x564>  // b.hs, b.nlast
    22cc:	lsr	w3, w1, #6
    22d0:	ldr	x4, [x19, #40]
    22d4:	cmp	x3, x4
    22d8:	b.cs	23a8 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x58c>  // b.hs, b.nlast
    22dc:	ldr	x5, [x19, #32]
    22e0:	lsl	x1, x6, x1
    22e4:	ldr	x4, [x5, x3, lsl #3]
    22e8:	orr	x1, x4, x1
    22ec:	str	x1, [x5, x3, lsl #3]
    22f0:	add	x2, x2, #0x4
    22f4:	cmp	x0, x2
    22f8:	b.ne	22bc <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x4a0>  // b.any
    22fc:	ldr	x3, [x19, #64]
    2300:	ldr	x0, [x19, #56]
    2304:	sub	x2, x3, x0
    2308:	asr	x1, x2, #2
    230c:	cmp	x22, x2, asr #2
    2310:	b.hi	23d0 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x5b4>  // b.pmore
    2314:	cmp	x22, x1
    2318:	b.cs	1fa4 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x188>  // b.hs, b.nlast
    231c:	add	x0, x0, x22, lsl #2
    2320:	cmp	x3, x0
    2324:	b.eq	1fa4 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x188>  // b.none
    2328:	str	x0, [x19, #64]
    232c:	b	1fa4 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x188>
    2330:	stp	x25, x26, [sp, #64]
    2334:	stp	x27, x28, [sp, #80]
    2338:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    233c:	add	x3, x3, #0x0
    2340:	mov	w2, #0xcc                  	// #204
    2344:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2348:	add	x1, x1, #0x0
    234c:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2350:	add	x0, x0, #0x0
    2354:	bl	0 <__assert_fail>
    2358:	stp	x25, x26, [sp, #64]
    235c:	stp	x27, x28, [sp, #80]
    2360:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2364:	add	x3, x3, #0x0
    2368:	mov	w2, #0xbd                  	// #189
    236c:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2370:	add	x1, x1, #0x0
    2374:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2378:	add	x0, x0, #0x0
    237c:	bl	0 <__assert_fail>
    2380:	stp	x25, x26, [sp, #64]
    2384:	stp	x27, x28, [sp, #80]
    2388:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    238c:	add	x3, x3, #0x0
    2390:	mov	w2, #0x1eb                 	// #491
    2394:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2398:	add	x1, x1, #0x0
    239c:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    23a0:	add	x0, x0, #0x0
    23a4:	bl	0 <__assert_fail>
    23a8:	stp	x25, x26, [sp, #64]
    23ac:	stp	x27, x28, [sp, #80]
    23b0:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    23b4:	add	x3, x3, #0x0
    23b8:	mov	w2, #0x1ab                 	// #427
    23bc:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    23c0:	add	x1, x1, #0x0
    23c4:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    23c8:	add	x0, x0, #0x0
    23cc:	bl	0 <__assert_fail>
    23d0:	sub	x1, x22, x1
    23d4:	add	x0, x19, #0x38
    23d8:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    23dc:	b	1fa4 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x188>
    23e0:	add	x0, x21, x24
    23e4:	str	x0, [x23]
    23e8:	ldr	x1, [x19, #56]
    23ec:	asr	x0, x24, #2
    23f0:	mov	x3, x21
    23f4:	cbnz	x24, 2040 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x224>
    23f8:	b	2054 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x238>
    23fc:	mov	w1, #0x1                   	// #1
    2400:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2404:	add	x0, x0, #0x0
    2408:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    240c:	b	1fec <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x1d0>
    2410:	mov	x1, #0x0                   	// #0
    2414:	add	x0, x23, #0x40
    2418:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    241c:	b	1ffc <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x1e0>
    2420:	stp	x25, x26, [sp, #64]
    2424:	stp	x27, x28, [sp, #80]
    2428:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    242c:	add	x3, x3, #0x0
    2430:	mov	w2, #0x43                  	// #67
    2434:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2438:	add	x1, x1, #0x0
    243c:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2440:	add	x0, x0, #0x0
    2444:	bl	0 <__assert_fail>
    2448:	stp	x25, x26, [sp, #64]
    244c:	ldr	w0, [x23, #24]
    2450:	lsr	w1, w0, #7
    2454:	cmp	w0, #0xeff
    2458:	b.ls	24d4 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x6b8>  // b.plast
    245c:	mov	x0, #0x40000000000         	// #4398046511104
    2460:	bl	0 <malloc>
    2464:	mov	x21, x0
    2468:	cbz	x0, 2504 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x6e8>
    246c:	mov	x25, #0x40000000000         	// #4398046511104
    2470:	ldr	w1, [x23, #24]
    2474:	ldr	w0, [x23, #28]
    2478:	cmp	w1, w0
    247c:	b.cs	250c <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x6f0>  // b.hs, b.nlast
    2480:	ldr	w1, [x23, #24]
    2484:	ldr	x0, [x23, #16]
    2488:	str	x21, [x0, x1, lsl #3]
    248c:	ldr	w0, [x23, #24]
    2490:	mov	w1, w0
    2494:	add	x1, x1, #0x1
    2498:	ldr	w2, [x23, #28]
    249c:	cmp	x1, x2
    24a0:	b.hi	2524 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x708>  // b.pmore
    24a4:	add	w0, w0, #0x1
    24a8:	str	w0, [x23, #24]
    24ac:	str	x21, [x23]
    24b0:	add	x25, x21, x25
    24b4:	str	x25, [x23, #8]
    24b8:	add	x0, x21, x24
    24bc:	cmp	x25, x0
    24c0:	b.cc	2548 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x72c>  // b.lo, b.ul, b.last
    24c4:	add	x0, x21, x24
    24c8:	str	x0, [x23]
    24cc:	ldp	x25, x26, [sp, #64]
    24d0:	b	2034 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x218>
    24d4:	mov	x25, #0x1000                	// #4096
    24d8:	lsl	x25, x25, x1
    24dc:	mov	x0, x25
    24e0:	bl	0 <malloc>
    24e4:	mov	x21, x0
    24e8:	cbnz	x0, 2470 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x654>
    24ec:	mov	w1, #0x1                   	// #1
    24f0:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    24f4:	add	x0, x0, #0x0
    24f8:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    24fc:	mov	x21, #0x0                   	// #0
    2500:	b	2470 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x654>
    2504:	mov	x25, #0x40000000000         	// #4398046511104
    2508:	b	24ec <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x6d0>
    250c:	mov	x3, #0x8                   	// #8
    2510:	mov	x2, #0x0                   	// #0
    2514:	add	x1, x23, #0x20
    2518:	add	x0, x23, #0x10
    251c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2520:	b	2480 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x664>
    2524:	stp	x27, x28, [sp, #80]
    2528:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    252c:	add	x3, x3, #0x0
    2530:	mov	w2, #0x43                  	// #67
    2534:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2538:	add	x1, x1, #0x0
    253c:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2540:	add	x0, x0, #0x0
    2544:	bl	0 <__assert_fail>
    2548:	stp	x27, x28, [sp, #80]
    254c:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2550:	add	x3, x3, #0x0
    2554:	mov	w2, #0x105                 	// #261
    2558:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    255c:	add	x1, x1, #0x0
    2560:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2564:	add	x0, x0, #0x0
    2568:	bl	0 <__assert_fail>
    256c:	add	x21, x22, x21
    2570:	str	x21, [x23]
    2574:	ldr	x0, [x19, #88]
    2578:	ldr	x1, [x19, #80]
    257c:	sub	x0, x0, x1
    2580:	asr	x0, x0, #5
    2584:	str	x22, [sp, #200]
    2588:	str	x0, [sp, #208]
    258c:	ldr	x3, [sp, #224]
    2590:	ldr	x4, [sp, #216]
    2594:	sub	x2, x3, x4
    2598:	asr	x1, x2, #4
    259c:	cmp	x0, x2, asr #4
    25a0:	b.hi	2730 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x914>  // b.pmore
    25a4:	cmp	x0, x1
    25a8:	b.cs	273c <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x920>  // b.hs, b.nlast
    25ac:	add	x0, x4, x0, lsl #4
    25b0:	cmp	x3, x0
    25b4:	b.eq	273c <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x920>  // b.none
    25b8:	str	x0, [sp, #224]
    25bc:	b	273c <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x920>
    25c0:	mov	w1, #0x1                   	// #1
    25c4:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    25c8:	add	x0, x0, #0x0
    25cc:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    25d0:	b	20b4 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x298>
    25d4:	mov	x1, #0x0                   	// #0
    25d8:	add	x0, x23, #0x40
    25dc:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    25e0:	b	20c4 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x2a8>
    25e4:	stp	x25, x26, [sp, #64]
    25e8:	stp	x27, x28, [sp, #80]
    25ec:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    25f0:	add	x3, x3, #0x0
    25f4:	mov	w2, #0x43                  	// #67
    25f8:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    25fc:	add	x1, x1, #0x0
    2600:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2604:	add	x0, x0, #0x0
    2608:	bl	0 <__assert_fail>
    260c:	ldr	w0, [x23, #24]
    2610:	lsr	w1, w0, #7
    2614:	cmp	w0, #0xeff
    2618:	b.ls	2690 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x874>  // b.plast
    261c:	mov	x0, #0x40000000000         	// #4398046511104
    2620:	bl	0 <malloc>
    2624:	mov	x22, x0
    2628:	cbz	x0, 26c0 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x8a4>
    262c:	mov	x24, #0x40000000000         	// #4398046511104
    2630:	ldr	w1, [x23, #24]
    2634:	ldr	w0, [x23, #28]
    2638:	cmp	w1, w0
    263c:	b.cs	26c8 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x8ac>  // b.hs, b.nlast
    2640:	ldr	w1, [x23, #24]
    2644:	ldr	x0, [x23, #16]
    2648:	str	x22, [x0, x1, lsl #3]
    264c:	ldr	w0, [x23, #24]
    2650:	mov	w1, w0
    2654:	add	x1, x1, #0x1
    2658:	ldr	w2, [x23, #28]
    265c:	cmp	x1, x2
    2660:	b.hi	26e0 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x8c4>  // b.pmore
    2664:	add	w0, w0, #0x1
    2668:	str	w0, [x23, #24]
    266c:	str	x22, [x23]
    2670:	add	x0, x22, x24
    2674:	str	x0, [x23, #8]
    2678:	add	x1, x22, x21
    267c:	cmp	x0, x1
    2680:	b.cc	2708 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x8ec>  // b.lo, b.ul, b.last
    2684:	add	x21, x22, x21
    2688:	str	x21, [x23]
    268c:	b	2574 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x758>
    2690:	mov	x0, #0x1000                	// #4096
    2694:	lsl	x24, x0, x1
    2698:	mov	x0, x24
    269c:	bl	0 <malloc>
    26a0:	mov	x22, x0
    26a4:	cbnz	x0, 2630 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x814>
    26a8:	mov	w1, #0x1                   	// #1
    26ac:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    26b0:	add	x0, x0, #0x0
    26b4:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    26b8:	mov	x22, #0x0                   	// #0
    26bc:	b	2630 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x814>
    26c0:	mov	x24, #0x40000000000         	// #4398046511104
    26c4:	b	26a8 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x88c>
    26c8:	mov	x3, #0x8                   	// #8
    26cc:	mov	x2, #0x0                   	// #0
    26d0:	add	x1, x23, #0x20
    26d4:	add	x0, x23, #0x10
    26d8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    26dc:	b	2640 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x824>
    26e0:	stp	x25, x26, [sp, #64]
    26e4:	stp	x27, x28, [sp, #80]
    26e8:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    26ec:	add	x3, x3, #0x0
    26f0:	mov	w2, #0x43                  	// #67
    26f4:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    26f8:	add	x1, x1, #0x0
    26fc:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2700:	add	x0, x0, #0x0
    2704:	bl	0 <__assert_fail>
    2708:	stp	x25, x26, [sp, #64]
    270c:	stp	x27, x28, [sp, #80]
    2710:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2714:	add	x3, x3, #0x0
    2718:	mov	w2, #0x105                 	// #261
    271c:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2720:	add	x1, x1, #0x0
    2724:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2728:	add	x0, x0, #0x0
    272c:	bl	0 <__assert_fail>
    2730:	sub	x1, x0, x1
    2734:	add	x0, sp, #0xd8
    2738:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    273c:	ldr	x0, [x19, #80]
    2740:	ldr	x1, [x19, #88]
    2744:	cmp	x1, x0
    2748:	b.eq	28a4 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0xa88>  // b.none
    274c:	stp	x25, x26, [sp, #64]
    2750:	stp	x27, x28, [sp, #80]
    2754:	mov	w27, #0x0                   	// #0
    2758:	mov	x25, #0x0                   	// #0
    275c:	mov	x28, #0x40000000000         	// #4398046511104
    2760:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2764:	add	x1, x1, #0x0
    2768:	str	x1, [sp, #96]
    276c:	lsl	x26, x25, #5
    2770:	add	x1, x0, x26
    2774:	ldr	w0, [x0, x26]
    2778:	str	w0, [x22, x25, lsl #2]
    277c:	ldr	x21, [x19]
    2780:	ldr	x23, [x1, #16]
    2784:	ldr	x0, [x1, #8]
    2788:	sub	x23, x23, x0
    278c:	ldr	x0, [x21, #80]
    2790:	add	x0, x0, x23
    2794:	str	x0, [x21, #80]
    2798:	ldr	x24, [x21]
    279c:	ldr	x0, [x21, #8]
    27a0:	sub	x0, x0, x24
    27a4:	cmp	x23, x0
    27a8:	b.ls	2810 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x9f4>  // b.plast
    27ac:	cmp	x23, #0x1, lsl #12
    27b0:	b.ls	29bc <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0xba0>  // b.plast
    27b4:	mov	x0, x23
    27b8:	bl	0 <malloc>
    27bc:	mov	x24, x0
    27c0:	cbz	x0, 297c <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0xb60>
    27c4:	ldr	w1, [x21, #72]
    27c8:	ldr	w0, [x21, #76]
    27cc:	cmp	w1, w0
    27d0:	b.cs	298c <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0xb70>  // b.hs, b.nlast
    27d4:	ldr	w0, [x21, #72]
    27d8:	lsl	x0, x0, #4
    27dc:	ldr	x1, [x21, #64]
    27e0:	add	x2, x1, x0
    27e4:	str	x24, [x1, x0]
    27e8:	str	x23, [x2, #8]
    27ec:	ldr	w0, [x21, #72]
    27f0:	mov	w1, w0
    27f4:	add	x1, x1, #0x1
    27f8:	ldr	w2, [x21, #76]
    27fc:	cmp	x1, x2
    2800:	b.hi	299c <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0xb80>  // b.pmore
    2804:	add	w0, w0, #0x1
    2808:	str	w0, [x21, #72]
    280c:	b	2818 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x9fc>
    2810:	add	x23, x24, x23
    2814:	str	x23, [x21]
    2818:	ldr	x0, [x19, #80]
    281c:	add	x0, x0, x26
    2820:	ldr	x1, [x0, #8]!
    2824:	ldr	x2, [x0, #8]
    2828:	sub	x2, x2, x1
    282c:	asr	x0, x2, #2
    2830:	cmp	x2, #0x0
    2834:	b.le	2850 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0xa34>
    2838:	mov	x2, x24
    283c:	ldr	w3, [x1], #4
    2840:	str	w3, [x2], #4
    2844:	sub	x0, x0, #0x1
    2848:	cmp	x0, #0x0
    284c:	b.gt	283c <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0xa20>
    2850:	ldr	x0, [x19, #80]
    2854:	add	x26, x0, x26
    2858:	ldr	x0, [x26, #16]
    285c:	ldr	x1, [x26, #8]
    2860:	sub	x0, x0, x1
    2864:	asr	x0, x0, #2
    2868:	lsl	x25, x25, #4
    286c:	ldr	x1, [sp, #216]
    2870:	add	x2, x1, x25
    2874:	str	x24, [x1, x25]
    2878:	str	x0, [x2, #8]
    287c:	add	w27, w27, #0x1
    2880:	mov	w25, w27
    2884:	ldr	x0, [x19, #80]
    2888:	ldr	x1, [x19, #88]
    288c:	sub	x1, x1, x0
    2890:	asr	x1, x1, #5
    2894:	cmp	x1, w27, uxtw
    2898:	b.hi	276c <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x950>  // b.pmore
    289c:	ldp	x25, x26, [sp, #64]
    28a0:	ldp	x27, x28, [sp, #80]
    28a4:	ldr	w21, [x19, #48]
    28a8:	str	w21, [sp, #176]
    28ac:	add	w1, w21, #0x3f
    28b0:	lsr	w0, w1, #6
    28b4:	ldr	x2, [sp, #168]
    28b8:	lsl	x3, x2, #6
    28bc:	cmp	x3, w21, uxtw
    28c0:	b.cs	2ad0 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0xcb4>  // b.hs, b.nlast
    28c4:	cmp	w1, #0x3f
    28c8:	b.ls	2b8c <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0xd70>  // b.plast
    28cc:	mov	w23, w0
    28d0:	ubfiz	x21, x0, #3, #26
    28d4:	mov	x0, x21
    28d8:	bl	0 <malloc>
    28dc:	mov	x22, x0
    28e0:	cbz	x0, 2bb4 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0xd98>
    28e4:	mov	x2, x21
    28e8:	ldr	x1, [x19, #32]
    28ec:	mov	x0, x22
    28f0:	bl	0 <memcpy>
    28f4:	ldr	x0, [sp, #160]
    28f8:	bl	0 <free>
    28fc:	str	x22, [sp, #160]
    2900:	str	x23, [sp, #168]
    2904:	ldrb	w0, [x20, #88]
    2908:	and	w0, w0, #0xfffffffe
    290c:	orr	w0, w0, #0x2
    2910:	strb	w0, [x20, #88]
    2914:	mov	x0, x20
    2918:	ldr	x1, [sp, #152]
    291c:	str	x1, [x0], #8
    2920:	ldp	x2, x3, [sp, #160]
    2924:	stp	x2, x3, [x20, #8]
    2928:	ldr	w1, [sp, #176]
    292c:	str	w1, [x0, #16]
    2930:	str	xzr, [sp, #160]
    2934:	ldp	x0, x1, [sp, #184]
    2938:	stp	x0, x1, [x20, #32]
    293c:	ldp	x0, x1, [sp, #200]
    2940:	stp	x0, x1, [x20, #48]
    2944:	ldr	x1, [sp, #216]
    2948:	str	x1, [x20, #64]
    294c:	ldr	x1, [sp, #224]
    2950:	str	x1, [x20, #72]
    2954:	ldr	x1, [sp, #232]
    2958:	str	x1, [x20, #80]
    295c:	ldr	x0, [sp, #160]
    2960:	bl	0 <free>
    2964:	mov	x0, x20
    2968:	ldp	x23, x24, [sp, #48]
    296c:	ldp	x19, x20, [sp, #16]
    2970:	ldp	x21, x22, [sp, #32]
    2974:	ldp	x29, x30, [sp], #240
    2978:	ret
    297c:	mov	w1, #0x1                   	// #1
    2980:	ldr	x0, [sp, #96]
    2984:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    2988:	b	27c4 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x9a8>
    298c:	mov	x1, #0x0                   	// #0
    2990:	add	x0, x21, #0x40
    2994:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2998:	b	27d4 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x9b8>
    299c:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    29a0:	add	x3, x3, #0x0
    29a4:	mov	w2, #0x43                  	// #67
    29a8:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    29ac:	add	x1, x1, #0x0
    29b0:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    29b4:	add	x0, x0, #0x0
    29b8:	bl	0 <__assert_fail>
    29bc:	ldr	w0, [x21, #24]
    29c0:	lsr	w1, w0, #7
    29c4:	cmp	w0, #0xeff
    29c8:	b.ls	2a44 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0xc28>  // b.plast
    29cc:	mov	x0, x28
    29d0:	bl	0 <malloc>
    29d4:	mov	x24, x0
    29d8:	cbz	x0, 2a70 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0xc54>
    29dc:	str	x28, [sp, #104]
    29e0:	ldr	w1, [x21, #24]
    29e4:	ldr	w0, [x21, #28]
    29e8:	cmp	w1, w0
    29ec:	b.cs	2a78 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0xc5c>  // b.hs, b.nlast
    29f0:	ldr	w1, [x21, #24]
    29f4:	ldr	x0, [x21, #16]
    29f8:	str	x24, [x0, x1, lsl #3]
    29fc:	ldr	w0, [x21, #24]
    2a00:	mov	w1, w0
    2a04:	add	x1, x1, #0x1
    2a08:	ldr	w2, [x21, #28]
    2a0c:	cmp	x1, x2
    2a10:	b.hi	2a90 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0xc74>  // b.pmore
    2a14:	add	w0, w0, #0x1
    2a18:	str	w0, [x21, #24]
    2a1c:	str	x24, [x21]
    2a20:	ldr	x0, [sp, #104]
    2a24:	add	x0, x24, x0
    2a28:	str	x0, [x21, #8]
    2a2c:	add	x1, x24, x23
    2a30:	cmp	x0, x1
    2a34:	b.cc	2ab0 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0xc94>  // b.lo, b.ul, b.last
    2a38:	add	x23, x24, x23
    2a3c:	str	x23, [x21]
    2a40:	b	2818 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0x9fc>
    2a44:	mov	x0, #0x1000                	// #4096
    2a48:	lsl	x0, x0, x1
    2a4c:	str	x0, [sp, #104]
    2a50:	bl	0 <malloc>
    2a54:	mov	x24, x0
    2a58:	cbnz	x0, 29e0 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0xbc4>
    2a5c:	mov	w1, #0x1                   	// #1
    2a60:	ldr	x0, [sp, #96]
    2a64:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    2a68:	mov	x24, #0x0                   	// #0
    2a6c:	b	29e0 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0xbc4>
    2a70:	str	x28, [sp, #104]
    2a74:	b	2a5c <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0xc40>
    2a78:	mov	x3, #0x8                   	// #8
    2a7c:	mov	x2, #0x0                   	// #0
    2a80:	add	x1, x21, #0x20
    2a84:	add	x0, x21, #0x10
    2a88:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2a8c:	b	29f0 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0xbd4>
    2a90:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2a94:	add	x3, x3, #0x0
    2a98:	mov	w2, #0x43                  	// #67
    2a9c:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2aa0:	add	x1, x1, #0x0
    2aa4:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2aa8:	add	x0, x0, #0x0
    2aac:	bl	0 <__assert_fail>
    2ab0:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2ab4:	add	x3, x3, #0x0
    2ab8:	mov	w2, #0x105                 	// #261
    2abc:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2ac0:	add	x1, x1, #0x0
    2ac4:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2ac8:	add	x0, x0, #0x0
    2acc:	bl	0 <__assert_fail>
    2ad0:	cbnz	w21, 2af4 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0xcd8>
    2ad4:	cbz	x2, 2904 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0xae8>
    2ad8:	mov	x0, #0x0                   	// #0
    2adc:	lsl	x2, x2, #3
    2ae0:	mov	w1, #0x0                   	// #0
    2ae4:	ldr	x3, [sp, #160]
    2ae8:	add	x0, x3, x0, lsl #3
    2aec:	bl	0 <memset>
    2af0:	b	2b20 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0xd04>
    2af4:	ubfiz	x2, x0, #3, #26
    2af8:	ldr	x1, [x19, #32]
    2afc:	ldr	x0, [sp, #160]
    2b00:	bl	0 <memcpy>
    2b04:	ldr	w0, [sp, #176]
    2b08:	add	w0, w0, #0x3f
    2b0c:	lsr	w21, w0, #6
    2b10:	ldr	x2, [sp, #168]
    2b14:	lsr	w0, w0, #6
    2b18:	cmp	x2, x0
    2b1c:	b.hi	2b58 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0xd3c>  // b.pmore
    2b20:	ldr	w0, [sp, #176]
    2b24:	ands	w1, w0, #0x3f
    2b28:	b.eq	2904 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0xae8>  // b.none
    2b2c:	mov	x0, #0xffffffffffffffff    	// #-1
    2b30:	lsl	x0, x0, x1
    2b34:	sub	w21, w21, #0x1
    2b38:	ldr	x1, [sp, #168]
    2b3c:	cmp	x21, x1
    2b40:	b.cs	2b64 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0xd48>  // b.hs, b.nlast
    2b44:	ldr	x1, [sp, #160]
    2b48:	ldr	x2, [x1, x21, lsl #3]
    2b4c:	bic	x0, x2, x0
    2b50:	str	x0, [x1, x21, lsl #3]
    2b54:	b	2904 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0xae8>
    2b58:	subs	x2, x2, x0
    2b5c:	b.eq	2b20 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0xd04>  // b.none
    2b60:	b	2adc <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0xcc0>
    2b64:	stp	x25, x26, [sp, #64]
    2b68:	stp	x27, x28, [sp, #80]
    2b6c:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2b70:	add	x3, x3, #0x0
    2b74:	mov	w2, #0x1ab                 	// #427
    2b78:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2b7c:	add	x1, x1, #0x0
    2b80:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2b84:	add	x0, x0, #0x0
    2b88:	bl	0 <__assert_fail>
    2b8c:	stp	x25, x26, [sp, #64]
    2b90:	stp	x27, x28, [sp, #80]
    2b94:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2b98:	add	x3, x3, #0x0
    2b9c:	mov	w2, #0x2dc                 	// #732
    2ba0:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2ba4:	add	x1, x1, #0x0
    2ba8:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2bac:	add	x0, x0, #0x0
    2bb0:	bl	0 <__assert_fail>
    2bb4:	cbnz	x21, 2bc8 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0xdac>
    2bb8:	mov	x0, #0x1                   	// #1
    2bbc:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2bc0:	mov	x22, x0
    2bc4:	b	28e4 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0xac8>
    2bc8:	mov	w1, #0x1                   	// #1
    2bcc:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2bd0:	add	x0, x0, #0x0
    2bd4:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    2bd8:	b	28e4 <_ZN4llvm3msf10MSFBuilder14generateLayoutEv+0xac8>

0000000000002bdc <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE>:
    2bdc:	sub	sp, sp, #0x250
    2be0:	stp	x29, x30, [sp]
    2be4:	mov	x29, sp
    2be8:	stp	x19, x20, [sp, #16]
    2bec:	stp	x21, x22, [sp, #32]
    2bf0:	stp	x23, x24, [sp, #48]
    2bf4:	mov	x20, x8
    2bf8:	mov	x22, x0
    2bfc:	mov	x23, x1
    2c00:	mov	x21, x2
    2c04:	mov	x19, x3
    2c08:	add	x8, sp, #0x1d0
    2c0c:	bl	1e1c <_ZN4llvm3msf10MSFBuilder14generateLayoutEv>
    2c10:	ldrb	w0, [sp, #552]
    2c14:	and	w1, w0, #0x1
    2c18:	bfi	w0, w1, #1, #1
    2c1c:	strb	w0, [sp, #552]
    2c20:	cbz	w1, 2ca8 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xcc>
    2c24:	and	x0, x0, #0xff
    2c28:	and	w0, w0, #0xfffffffd
    2c2c:	strb	w0, [sp, #552]
    2c30:	ldr	x0, [sp, #464]
    2c34:	str	xzr, [sp, #464]
    2c38:	ldrb	w1, [x20, #72]
    2c3c:	orr	w1, w1, #0x3
    2c40:	strb	w1, [x20, #72]
    2c44:	ands	x0, x0, #0xfffffffffffffffe
    2c48:	cbz	x0, 2c80 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xa4>
    2c4c:	str	x0, [x20]
    2c50:	ldr	x0, [sp, #464]
    2c54:	cbz	x0, 2c64 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x88>
    2c58:	ldr	x1, [x0]
    2c5c:	ldr	x1, [x1, #8]
    2c60:	blr	x1
    2c64:	mov	x0, x20
    2c68:	ldp	x19, x20, [sp, #16]
    2c6c:	ldp	x21, x22, [sp, #32]
    2c70:	ldp	x23, x24, [sp, #48]
    2c74:	ldp	x29, x30, [sp]
    2c78:	add	sp, sp, #0x250
    2c7c:	ret
    2c80:	stp	x25, x26, [sp, #64]
    2c84:	str	x27, [sp, #80]
    2c88:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2c8c:	add	x3, x3, #0x0
    2c90:	mov	w2, #0x1ce                 	// #462
    2c94:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2c98:	add	x1, x1, #0x0
    2c9c:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2ca0:	add	x0, x0, #0x0
    2ca4:	bl	0 <__assert_fail>
    2ca8:	ldr	x0, [sp, #464]
    2cac:	str	x0, [x19]
    2cb0:	mov	x24, x19
    2cb4:	ldr	x0, [x24, #8]!
    2cb8:	bl	0 <free>
    2cbc:	add	x0, sp, #0x200
    2cc0:	ldp	x0, x1, [x0, #-40]
    2cc4:	stp	x0, x1, [x19, #8]
    2cc8:	ldr	w0, [sp, #488]
    2ccc:	str	w0, [x24, #16]
    2cd0:	str	xzr, [sp, #472]
    2cd4:	str	xzr, [sp, #480]
    2cd8:	str	wzr, [sp, #488]
    2cdc:	ldp	x0, x1, [sp, #496]
    2ce0:	stp	x0, x1, [x19, #32]
    2ce4:	add	x0, sp, #0x200
    2ce8:	ldp	x0, x1, [x0]
    2cec:	stp	x0, x1, [x19, #48]
    2cf0:	ldr	x0, [x19, #64]
    2cf4:	ldr	x2, [sp, #528]
    2cf8:	str	x2, [x19, #64]
    2cfc:	ldr	x2, [sp, #536]
    2d00:	str	x2, [x19, #72]
    2d04:	ldr	x2, [sp, #544]
    2d08:	str	x2, [x19, #80]
    2d0c:	str	xzr, [sp, #528]
    2d10:	str	xzr, [sp, #536]
    2d14:	str	xzr, [sp, #544]
    2d18:	cbz	x0, 2d20 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x144>
    2d1c:	bl	0 <_ZdlPv>
    2d20:	ldr	x0, [x19]
    2d24:	ldr	w2, [x0, #40]
    2d28:	ldr	w0, [x0, #32]
    2d2c:	add	x8, sp, #0x1c0
    2d30:	mov	w3, #0x0                   	// #0
    2d34:	mul	w2, w2, w0
    2d38:	mov	x0, x23
    2d3c:	mov	x1, x21
    2d40:	bl	0 <_ZN4llvm16FileOutputBuffer6createENS_9StringRefEmj>
    2d44:	ldrb	w0, [sp, #456]
    2d48:	and	w0, w0, #0xfffffffd
    2d4c:	strb	w0, [sp, #456]
    2d50:	and	w2, w0, #0x1
    2d54:	tbz	w0, #0, 2dc8 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x1ec>
    2d58:	ldr	x0, [sp, #448]
    2d5c:	str	xzr, [sp, #448]
    2d60:	orr	x0, x0, #0x1
    2d64:	str	x0, [sp, #200]
    2d68:	ldr	x0, [sp, #200]
    2d6c:	ands	x1, x0, #0xfffffffffffffffe
    2d70:	cset	x0, ne  // ne = any
    2d74:	orr	x0, x0, x1
    2d78:	str	x0, [sp, #200]
    2d7c:	ands	x1, x0, #0xfffffffffffffffe
    2d80:	b.eq	2dd4 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x1f8>  // b.none
    2d84:	ldrb	w0, [x20, #72]
    2d88:	orr	w0, w0, #0x3
    2d8c:	strb	w0, [x20, #72]
    2d90:	str	x1, [x20]
    2d94:	ldrb	w0, [sp, #456]
    2d98:	tbnz	w0, #0, 3980 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xda4>
    2d9c:	ldr	x0, [sp, #448]
    2da0:	cbz	x0, 2db0 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x1d4>
    2da4:	ldr	x1, [x0]
    2da8:	ldr	x1, [x1, #40]
    2dac:	blr	x1
    2db0:	ldrb	w0, [sp, #552]
    2db4:	tbz	w0, #1, 3998 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xdbc>
    2db8:	stp	x25, x26, [sp, #64]
    2dbc:	str	x27, [sp, #80]
    2dc0:	add	x0, sp, #0x1d0
    2dc4:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2dc8:	mov	x0, #0x1                   	// #1
    2dcc:	str	x0, [sp, #200]
    2dd0:	b	2d68 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x18c>
    2dd4:	tbnz	w0, #0, 2f34 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x358>
    2dd8:	cbnz	w2, 2f44 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x368>
    2ddc:	ldr	x21, [sp, #448]
    2de0:	str	xzr, [sp, #448]
    2de4:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2de8:	ldr	x0, [x0]
    2dec:	add	x0, x0, #0x10
    2df0:	str	x0, [sp, #376]
    2df4:	ldr	x0, [x21]
    2df8:	ldr	x1, [x0]
    2dfc:	mov	x0, x21
    2e00:	blr	x1
    2e04:	mov	x23, x0
    2e08:	ldr	x0, [x21]
    2e0c:	ldr	x1, [x0, #8]
    2e10:	mov	x0, x21
    2e14:	blr	x1
    2e18:	sub	x0, x0, x23
    2e1c:	str	x23, [sp, #392]
    2e20:	str	x0, [sp, #400]
    2e24:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2e28:	ldr	x1, [x1]
    2e2c:	add	x1, x1, #0x10
    2e30:	str	x1, [sp, #408]
    2e34:	mov	w1, #0x1                   	// #1
    2e38:	str	w1, [sp, #416]
    2e3c:	str	x23, [sp, #424]
    2e40:	str	x0, [sp, #432]
    2e44:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2e48:	ldr	x0, [x0]
    2e4c:	add	x0, x0, #0x10
    2e50:	str	x0, [sp, #384]
    2e54:	str	x21, [sp, #440]
    2e58:	add	x21, sp, #0x140
    2e5c:	add	x1, sp, #0x178
    2e60:	mov	x0, x21
    2e64:	bl	0 <_ZN4llvm18BinaryStreamWriterC1ERNS_20WritableBinaryStreamE>
    2e68:	add	x8, sp, #0xc8
    2e6c:	ldr	x1, [x19]
    2e70:	mov	x2, #0x38                  	// #56
    2e74:	mov	x0, x21
    2e78:	bl	0 <_ZN4llvm18BinaryStreamWriter10writeBytesENS_8ArrayRefIhEE>
    2e7c:	ldr	x0, [sp, #200]
    2e80:	ands	x1, x0, #0xfffffffffffffffe
    2e84:	cset	x0, ne  // ne = any
    2e88:	orr	x0, x0, x1
    2e8c:	str	x0, [sp, #200]
    2e90:	ands	x1, x0, #0xfffffffffffffffe
    2e94:	b.eq	2f6c <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x390>  // b.none
    2e98:	ldrb	w0, [x20, #72]
    2e9c:	orr	w0, w0, #0x3
    2ea0:	strb	w0, [x20, #72]
    2ea4:	str	x1, [x20]
    2ea8:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2eac:	ldr	x0, [x0]
    2eb0:	add	x0, x0, #0x10
    2eb4:	str	x0, [sp, #320]
    2eb8:	ldr	x19, [sp, #336]
    2ebc:	cbz	x19, 2ee8 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x30c>
    2ec0:	adrp	x0, 0 <__pthread_key_create>
    2ec4:	ldr	x0, [x0]
    2ec8:	cbz	x0, 3914 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xd38>
    2ecc:	add	x1, x19, #0x8
    2ed0:	ldaxr	w0, [x1]
    2ed4:	sub	w2, w0, #0x1
    2ed8:	stlxr	w3, w2, [x1]
    2edc:	cbnz	w3, 2ed0 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x2f4>
    2ee0:	cmp	w0, #0x1
    2ee4:	b.eq	3924 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xd48>  // b.none
    2ee8:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2eec:	ldr	x0, [x0]
    2ef0:	add	x0, x0, #0x10
    2ef4:	str	x0, [sp, #376]
    2ef8:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2efc:	ldr	x0, [x0]
    2f00:	add	x0, x0, #0x10
    2f04:	str	x0, [sp, #384]
    2f08:	ldr	x0, [sp, #440]
    2f0c:	cbz	x0, 2f1c <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x340>
    2f10:	ldr	x1, [x0]
    2f14:	ldr	x1, [x1, #40]
    2f18:	blr	x1
    2f1c:	ldrb	w0, [sp, #456]
    2f20:	tbz	w0, #1, 2d94 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x1b8>
    2f24:	stp	x25, x26, [sp, #64]
    2f28:	str	x27, [sp, #80]
    2f2c:	add	x0, sp, #0x1c0
    2f30:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2f34:	stp	x25, x26, [sp, #64]
    2f38:	str	x27, [sp, #80]
    2f3c:	add	x0, sp, #0xc8
    2f40:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    2f44:	stp	x25, x26, [sp, #64]
    2f48:	str	x27, [sp, #80]
    2f4c:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2f50:	add	x3, x3, #0x0
    2f54:	mov	w2, #0x272                 	// #626
    2f58:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2f5c:	add	x1, x1, #0x0
    2f60:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    2f64:	add	x0, x0, #0x0
    2f68:	bl	0 <__assert_fail>
    2f6c:	tbnz	w0, #0, 3078 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x49c>
    2f70:	ldr	x23, [x22]
    2f74:	add	x21, sp, #0xc8
    2f78:	add	x1, sp, #0x178
    2f7c:	mov	x0, x21
    2f80:	bl	0 <_ZN4llvm23WritableBinaryStreamRefC1ERNS_20WritableBinaryStreamE>
    2f84:	add	x8, sp, #0x70
    2f88:	mov	w3, #0x0                   	// #0
    2f8c:	mov	x2, x23
    2f90:	mov	x1, x21
    2f94:	mov	x0, x19
    2f98:	bl	0 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb>
    2f9c:	ldr	x21, [sp, #208]
    2fa0:	cbz	x21, 2fcc <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x3f0>
    2fa4:	adrp	x0, 0 <__pthread_key_create>
    2fa8:	ldr	x0, [x0]
    2fac:	cbz	x0, 3088 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x4ac>
    2fb0:	add	x1, x21, #0x8
    2fb4:	ldaxr	w0, [x1]
    2fb8:	sub	w2, w0, #0x1
    2fbc:	stlxr	w3, w2, [x1]
    2fc0:	cbnz	w3, 2fb4 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x3d8>
    2fc4:	cmp	w0, #0x1
    2fc8:	b.eq	3098 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x4bc>  // b.none
    2fcc:	add	x21, sp, #0xc8
    2fd0:	add	x1, sp, #0x178
    2fd4:	mov	x0, x21
    2fd8:	bl	0 <_ZN4llvm23WritableBinaryStreamRefC1ERNS_20WritableBinaryStreamE>
    2fdc:	add	x8, sp, #0x240
    2fe0:	mov	w3, #0x1                   	// #1
    2fe4:	mov	x2, x23
    2fe8:	mov	x1, x21
    2fec:	mov	x0, x19
    2ff0:	bl	0 <_ZN4llvm3msf25WritableMappedBlockStream15createFpmStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEb>
    2ff4:	ldr	x0, [sp, #576]
    2ff8:	cbz	x0, 3008 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x42c>
    2ffc:	ldr	x1, [x0]
    3000:	ldr	x1, [x1, #8]
    3004:	blr	x1
    3008:	ldr	x21, [sp, #208]
    300c:	cbz	x21, 3038 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x45c>
    3010:	adrp	x0, 0 <__pthread_key_create>
    3014:	ldr	x0, [x0]
    3018:	cbz	x0, 30f4 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x518>
    301c:	add	x1, x21, #0x8
    3020:	ldaxr	w0, [x1]
    3024:	sub	w2, w0, #0x1
    3028:	stlxr	w3, w2, [x1]
    302c:	cbnz	w3, 3020 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x444>
    3030:	cmp	w0, #0x1
    3034:	b.eq	3104 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x528>  // b.none
    3038:	ldr	x1, [sp, #112]
    303c:	add	x0, sp, #0xc8
    3040:	bl	0 <_ZN4llvm18BinaryStreamWriterC1ERNS_20WritableBinaryStreamE>
    3044:	ldr	x0, [x19]
    3048:	add	x3, x0, #0x28
    304c:	ldr	w0, [x0, #40]
    3050:	cbz	w0, 3390 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x7b4>
    3054:	stp	x25, x26, [sp, #64]
    3058:	str	x27, [sp, #80]
    305c:	mov	w21, #0x0                   	// #0
    3060:	mov	x24, #0x1                   	// #1
    3064:	mov	w23, #0x1                   	// #1
    3068:	mov	x27, x24
    306c:	add	x26, sp, #0x6f
    3070:	add	x25, sp, #0xc8
    3074:	b	324c <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x670>
    3078:	stp	x25, x26, [sp, #64]
    307c:	str	x27, [sp, #80]
    3080:	add	x0, sp, #0xc8
    3084:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    3088:	ldr	w0, [x21, #8]
    308c:	sub	w1, w0, #0x1
    3090:	str	w1, [x21, #8]
    3094:	b	2fc4 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x3e8>
    3098:	ldr	x0, [x21]
    309c:	ldr	x1, [x0, #16]
    30a0:	mov	x0, x21
    30a4:	blr	x1
    30a8:	adrp	x0, 0 <__pthread_key_create>
    30ac:	ldr	x0, [x0]
    30b0:	cbz	x0, 30e4 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x508>
    30b4:	add	x1, x21, #0xc
    30b8:	ldaxr	w0, [x1]
    30bc:	sub	w2, w0, #0x1
    30c0:	stlxr	w3, w2, [x1]
    30c4:	cbnz	w3, 30b8 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x4dc>
    30c8:	cmp	w0, #0x1
    30cc:	b.ne	2fcc <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x3f0>  // b.any
    30d0:	ldr	x0, [x21]
    30d4:	ldr	x1, [x0, #24]
    30d8:	mov	x0, x21
    30dc:	blr	x1
    30e0:	b	2fcc <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x3f0>
    30e4:	ldr	w0, [x21, #12]
    30e8:	sub	w1, w0, #0x1
    30ec:	str	w1, [x21, #12]
    30f0:	b	30c8 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x4ec>
    30f4:	ldr	w0, [x21, #8]
    30f8:	sub	w1, w0, #0x1
    30fc:	str	w1, [x21, #8]
    3100:	b	3030 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x454>
    3104:	ldr	x0, [x21]
    3108:	ldr	x1, [x0, #16]
    310c:	mov	x0, x21
    3110:	blr	x1
    3114:	adrp	x0, 0 <__pthread_key_create>
    3118:	ldr	x0, [x0]
    311c:	cbz	x0, 3150 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x574>
    3120:	add	x1, x21, #0xc
    3124:	ldaxr	w0, [x1]
    3128:	sub	w2, w0, #0x1
    312c:	stlxr	w3, w2, [x1]
    3130:	cbnz	w3, 3124 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x548>
    3134:	cmp	w0, #0x1
    3138:	b.ne	3038 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x45c>  // b.any
    313c:	ldr	x0, [x21]
    3140:	ldr	x1, [x0, #24]
    3144:	mov	x0, x21
    3148:	blr	x1
    314c:	b	3038 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x45c>
    3150:	ldr	w0, [x21, #12]
    3154:	sub	w1, w0, #0x1
    3158:	str	w1, [x21, #12]
    315c:	b	3134 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x558>
    3160:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    3164:	add	x3, x3, #0x0
    3168:	mov	w2, #0x1f0                 	// #496
    316c:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    3170:	add	x1, x1, #0x0
    3174:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    3178:	add	x0, x0, #0x0
    317c:	bl	0 <__assert_fail>
    3180:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    3184:	add	x3, x3, #0x0
    3188:	mov	w2, #0x1ab                 	// #427
    318c:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    3190:	add	x1, x1, #0x0
    3194:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    3198:	add	x0, x0, #0x0
    319c:	bl	0 <__assert_fail>
    31a0:	lsl	w1, w1, w0
    31a4:	ldrb	w2, [sp, #111]
    31a8:	orr	w1, w1, w2
    31ac:	strb	w1, [sp, #111]
    31b0:	add	w21, w21, #0x1
    31b4:	add	w0, w0, #0x1
    31b8:	cmp	w0, #0x8
    31bc:	b.eq	3204 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x628>  // b.none
    31c0:	ldr	w2, [x3]
    31c4:	mov	w1, w23
    31c8:	cmp	w2, w21
    31cc:	b.ls	31a0 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x5c4>  // b.plast
    31d0:	ldr	w1, [x19, #24]
    31d4:	cmp	w1, w21
    31d8:	b.ls	3160 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x584>  // b.plast
    31dc:	lsl	x4, x24, x21
    31e0:	lsr	w1, w21, #6
    31e4:	ldr	x2, [x19, #16]
    31e8:	cmp	x1, x2
    31ec:	b.cs	3180 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x5a4>  // b.hs, b.nlast
    31f0:	ldr	x2, [x19, #8]
    31f4:	ldr	x1, [x2, x1, lsl #3]
    31f8:	tst	x4, x1
    31fc:	cset	w1, ne  // ne = any
    3200:	b	31a0 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x5c4>
    3204:	add	x8, sp, #0x238
    3208:	mov	x1, x26
    320c:	mov	x2, x27
    3210:	mov	x0, x25
    3214:	bl	0 <_ZN4llvm18BinaryStreamWriter10writeBytesENS_8ArrayRefIhEE>
    3218:	ldr	x0, [sp, #568]
    321c:	ands	x1, x0, #0xfffffffffffffffe
    3220:	cset	x0, ne  // ne = any
    3224:	orr	x0, x0, x1
    3228:	str	x0, [sp, #568]
    322c:	tst	x0, #0xfffffffffffffffe
    3230:	b.ne	3258 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x67c>  // b.any
    3234:	tbnz	w0, #0, 3380 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x7a4>
    3238:	ldr	x0, [x19]
    323c:	add	x3, x0, #0x28
    3240:	ldr	w0, [x0, #40]
    3244:	cmp	w0, w21
    3248:	b.ls	3388 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x7ac>  // b.plast
    324c:	strb	wzr, [sp, #111]
    3250:	mov	w0, #0x0                   	// #0
    3254:	b	31c0 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x5e4>
    3258:	add	x1, sp, #0x78
    325c:	add	x0, sp, #0x88
    3260:	str	x0, [sp, #120]
    3264:	str	xzr, [sp, #128]
    3268:	strb	wzr, [sp, #136]
    326c:	mov	w0, #0x1                   	// #1
    3270:	str	w0, [sp, #184]
    3274:	str	xzr, [sp, #176]
    3278:	str	xzr, [sp, #168]
    327c:	str	xzr, [sp, #160]
    3280:	adrp	x0, 0 <_ZTVN4llvm18raw_string_ostreamE>
    3284:	ldr	x0, [x0]
    3288:	add	x0, x0, #0x10
    328c:	str	x0, [sp, #152]
    3290:	str	x1, [sp, #192]
    3294:	mov	x2, #0x31                  	// #49
    3298:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    329c:	add	x1, x1, #0x0
    32a0:	add	x0, sp, #0x98
    32a4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    32a8:	ldr	x1, [x0, #24]
    32ac:	ldr	x2, [x0, #16]
    32b0:	cmp	x2, x1
    32b4:	b.eq	32d0 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x6f4>  // b.none
    32b8:	mov	w2, #0xa                   	// #10
    32bc:	strb	w2, [x1]
    32c0:	ldr	x1, [x0, #24]
    32c4:	add	x1, x1, #0x1
    32c8:	str	x1, [x0, #24]
    32cc:	b	32e0 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x704>
    32d0:	mov	x2, #0x1                   	// #1
    32d4:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    32d8:	add	x1, x1, #0x0
    32dc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    32e0:	ldr	x2, [sp, #568]
    32e4:	ands	x2, x2, #0xfffffffffffffffe
    32e8:	b.eq	3330 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x754>  // b.none
    32ec:	ldr	x1, [x2]
    32f0:	ldr	x3, [x1, #16]
    32f4:	mov	x1, x0
    32f8:	mov	x0, x2
    32fc:	blr	x3
    3300:	ldr	x1, [sp, #176]
    3304:	ldr	x0, [sp, #160]
    3308:	cmp	x1, x0
    330c:	b.eq	3318 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x73c>  // b.none
    3310:	add	x0, sp, #0x98
    3314:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
    3318:	mov	w2, #0x2c9                 	// #713
    331c:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    3320:	add	x1, x1, #0x0
    3324:	ldr	x0, [sp, #192]
    3328:	ldr	x0, [x0]
    332c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    3330:	ldr	x2, [x0, #24]
    3334:	ldr	x1, [x0, #16]
    3338:	sub	x1, x1, x2
    333c:	cmp	x1, #0x6
    3340:	b.ls	336c <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x790>  // b.plast
    3344:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    3348:	add	x1, x1, #0x0
    334c:	ldr	w3, [x1]
    3350:	str	w3, [x2]
    3354:	ldur	w1, [x1, #3]
    3358:	stur	w1, [x2, #3]
    335c:	ldr	x1, [x0, #24]
    3360:	add	x1, x1, #0x7
    3364:	str	x1, [x0, #24]
    3368:	b	3300 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x724>
    336c:	mov	x2, #0x7                   	// #7
    3370:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    3374:	add	x1, x1, #0x0
    3378:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    337c:	b	3300 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x724>
    3380:	add	x0, sp, #0x238
    3384:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    3388:	ldp	x25, x26, [sp, #64]
    338c:	ldr	x27, [sp, #80]
    3390:	ldrb	w0, [sp, #240]
    3394:	cbz	w0, 3468 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x88c>
    3398:	ldr	w1, [sp, #236]
    339c:	ldr	w0, [sp, #248]
    33a0:	cmp	w0, w1
    33a4:	b.ne	348c <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x8b0>  // b.any
    33a8:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    33ac:	ldr	x0, [x0]
    33b0:	add	x0, x0, #0x10
    33b4:	str	x0, [sp, #200]
    33b8:	ldr	x21, [sp, #216]
    33bc:	cbz	x21, 33e8 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x80c>
    33c0:	adrp	x0, 0 <__pthread_key_create>
    33c4:	ldr	x0, [x0]
    33c8:	cbz	x0, 34b4 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x8d8>
    33cc:	add	x1, x21, #0x8
    33d0:	ldaxr	w0, [x1]
    33d4:	sub	w2, w0, #0x1
    33d8:	stlxr	w3, w2, [x1]
    33dc:	cbnz	w3, 33d0 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x7f4>
    33e0:	cmp	w0, #0x1
    33e4:	b.eq	34c4 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x8e8>  // b.none
    33e8:	ldr	x0, [sp, #112]
    33ec:	cbz	x0, 33fc <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x820>
    33f0:	ldr	x1, [x0]
    33f4:	ldr	x1, [x1, #8]
    33f8:	blr	x1
    33fc:	ldr	x1, [x19]
    3400:	ldr	w0, [x1, #52]
    3404:	ldr	w1, [x1, #32]
    3408:	mul	x0, x0, x1
    340c:	str	w0, [sp, #368]
    3410:	ldr	x2, [x19, #40]
    3414:	cbz	x2, 353c <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x960>
    3418:	mov	x0, #0x3fffffff            	// #1073741823
    341c:	cmp	x2, x0
    3420:	b.ls	3520 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x944>  // b.plast
    3424:	mov	w0, #0x2                   	// #2
    3428:	str	w0, [sp, #564]
    342c:	add	x8, sp, #0xc8
    3430:	add	x0, sp, #0x234
    3434:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    3438:	ldr	x0, [sp, #200]
    343c:	ands	x1, x0, #0xfffffffffffffffe
    3440:	cset	x0, ne  // ne = any
    3444:	orr	x0, x0, x1
    3448:	str	x0, [sp, #200]
    344c:	ands	x1, x0, #0xfffffffffffffffe
    3450:	b.eq	3538 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x95c>  // b.none
    3454:	ldrb	w0, [x20, #72]
    3458:	orr	w0, w0, #0x3
    345c:	strb	w0, [x20, #72]
    3460:	str	x1, [x20]
    3464:	b	2ea8 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x2cc>
    3468:	ldr	x0, [sp, #224]
    346c:	mov	w1, #0x0                   	// #0
    3470:	cbz	x0, 339c <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x7c0>
    3474:	ldr	x1, [x0]
    3478:	ldr	x1, [x1, #40]
    347c:	blr	x1
    3480:	ldr	w1, [sp, #232]
    3484:	sub	w1, w0, w1
    3488:	b	339c <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x7c0>
    348c:	stp	x25, x26, [sp, #64]
    3490:	str	x27, [sp, #80]
    3494:	adrp	x3, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    3498:	add	x3, x3, #0x0
    349c:	mov	w2, #0x14f                 	// #335
    34a0:	adrp	x1, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    34a4:	add	x1, x1, #0x0
    34a8:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    34ac:	add	x0, x0, #0x0
    34b0:	bl	0 <__assert_fail>
    34b4:	ldr	w0, [x21, #8]
    34b8:	sub	w1, w0, #0x1
    34bc:	str	w1, [x21, #8]
    34c0:	b	33e0 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x804>
    34c4:	ldr	x0, [x21]
    34c8:	ldr	x1, [x0, #16]
    34cc:	mov	x0, x21
    34d0:	blr	x1
    34d4:	adrp	x0, 0 <__pthread_key_create>
    34d8:	ldr	x0, [x0]
    34dc:	cbz	x0, 3510 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x934>
    34e0:	add	x1, x21, #0xc
    34e4:	ldaxr	w0, [x1]
    34e8:	sub	w2, w0, #0x1
    34ec:	stlxr	w3, w2, [x1]
    34f0:	cbnz	w3, 34e4 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x908>
    34f4:	cmp	w0, #0x1
    34f8:	b.ne	33e8 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x80c>  // b.any
    34fc:	ldr	x0, [x21]
    3500:	ldr	x1, [x0, #24]
    3504:	mov	x0, x21
    3508:	blr	x1
    350c:	b	33e8 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x80c>
    3510:	ldr	w0, [x21, #12]
    3514:	sub	w1, w0, #0x1
    3518:	str	w1, [x21, #12]
    351c:	b	34f4 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x918>
    3520:	add	x8, sp, #0xc8
    3524:	ldr	x1, [x19, #32]
    3528:	lsl	x2, x2, #2
    352c:	add	x0, sp, #0x140
    3530:	bl	0 <_ZN4llvm18BinaryStreamWriter10writeBytesENS_8ArrayRefIhEE>
    3534:	b	3438 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x85c>
    3538:	tbnz	w0, #0, 365c <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xa80>
    353c:	add	x21, sp, #0xc8
    3540:	add	x1, sp, #0x178
    3544:	mov	x0, x21
    3548:	bl	0 <_ZN4llvm23WritableBinaryStreamRefC1ERNS_20WritableBinaryStreamE>
    354c:	add	x8, sp, #0x138
    3550:	ldr	x2, [x22]
    3554:	mov	x1, x21
    3558:	mov	x0, x19
    355c:	bl	0 <_ZN4llvm3msf25WritableMappedBlockStream21createDirectoryStreamERKNS0_9MSFLayoutENS_23WritableBinaryStreamRefERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    3560:	ldr	x21, [sp, #208]
    3564:	cbz	x21, 3590 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x9b4>
    3568:	adrp	x0, 0 <__pthread_key_create>
    356c:	ldr	x0, [x0]
    3570:	cbz	x0, 366c <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xa90>
    3574:	add	x1, x21, #0x8
    3578:	ldaxr	w0, [x1]
    357c:	sub	w2, w0, #0x1
    3580:	stlxr	w3, w2, [x1]
    3584:	cbnz	w3, 3578 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x99c>
    3588:	cmp	w0, #0x1
    358c:	b.eq	367c <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xaa0>  // b.none
    3590:	ldr	x1, [sp, #312]
    3594:	add	x0, sp, #0x100
    3598:	bl	0 <_ZN4llvm18BinaryStreamWriterC1ERNS_20WritableBinaryStreamE>
    359c:	ldr	x21, [x19, #56]
    35a0:	ldr	x0, [sp, #280]
    35a4:	ldr	x1, [x0]
    35a8:	ldr	x1, [x1, #16]
    35ac:	blr	x1
    35b0:	sub	w0, w0, #0x1
    35b4:	rev	w1, w21
    35b8:	cmp	w0, #0x1
    35bc:	csel	w21, w21, w1, ls  // ls = plast
    35c0:	str	w21, [sp, #152]
    35c4:	add	x8, sp, #0xc8
    35c8:	add	x1, sp, #0x98
    35cc:	mov	x2, #0x4                   	// #4
    35d0:	add	x0, sp, #0x100
    35d4:	bl	0 <_ZN4llvm18BinaryStreamWriter10writeBytesENS_8ArrayRefIhEE>
    35d8:	ldr	x0, [sp, #200]
    35dc:	ands	x1, x0, #0xfffffffffffffffe
    35e0:	cset	x0, ne  // ne = any
    35e4:	orr	x0, x0, x1
    35e8:	str	x0, [sp, #200]
    35ec:	ands	x1, x0, #0xfffffffffffffffe
    35f0:	b.eq	36d8 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xafc>  // b.none
    35f4:	ldrb	w0, [x20, #72]
    35f8:	orr	w0, w0, #0x3
    35fc:	strb	w0, [x20, #72]
    3600:	str	x1, [x20]
    3604:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    3608:	ldr	x0, [x0]
    360c:	add	x0, x0, #0x10
    3610:	str	x0, [sp, #256]
    3614:	ldr	x19, [sp, #272]
    3618:	cbz	x19, 3644 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xa68>
    361c:	adrp	x0, 0 <__pthread_key_create>
    3620:	ldr	x0, [x0]
    3624:	cbz	x0, 38a8 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xccc>
    3628:	add	x1, x19, #0x8
    362c:	ldaxr	w0, [x1]
    3630:	sub	w2, w0, #0x1
    3634:	stlxr	w3, w2, [x1]
    3638:	cbnz	w3, 362c <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xa50>
    363c:	cmp	w0, #0x1
    3640:	b.eq	38b8 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xcdc>  // b.none
    3644:	ldr	x0, [sp, #312]
    3648:	cbz	x0, 2ea8 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x2cc>
    364c:	ldr	x1, [x0]
    3650:	ldr	x1, [x1, #8]
    3654:	blr	x1
    3658:	b	2ea8 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x2cc>
    365c:	stp	x25, x26, [sp, #64]
    3660:	str	x27, [sp, #80]
    3664:	add	x0, sp, #0xc8
    3668:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    366c:	ldr	w0, [x21, #8]
    3670:	sub	w1, w0, #0x1
    3674:	str	w1, [x21, #8]
    3678:	b	3588 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x9ac>
    367c:	ldr	x0, [x21]
    3680:	ldr	x1, [x0, #16]
    3684:	mov	x0, x21
    3688:	blr	x1
    368c:	adrp	x0, 0 <__pthread_key_create>
    3690:	ldr	x0, [x0]
    3694:	cbz	x0, 36c8 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xaec>
    3698:	add	x1, x21, #0xc
    369c:	ldaxr	w0, [x1]
    36a0:	sub	w2, w0, #0x1
    36a4:	stlxr	w3, w2, [x1]
    36a8:	cbnz	w3, 369c <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xac0>
    36ac:	cmp	w0, #0x1
    36b0:	b.ne	3590 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x9b4>  // b.any
    36b4:	ldr	x0, [x21]
    36b8:	ldr	x1, [x0, #24]
    36bc:	mov	x0, x21
    36c0:	blr	x1
    36c4:	b	3590 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x9b4>
    36c8:	ldr	w0, [x21, #12]
    36cc:	sub	w1, w0, #0x1
    36d0:	str	w1, [x21, #12]
    36d4:	b	36ac <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xad0>
    36d8:	tbnz	w0, #0, 3734 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xb58>
    36dc:	ldr	x2, [x19, #56]
    36e0:	cbz	x2, 3760 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xb84>
    36e4:	mov	x0, #0x3fffffff            	// #1073741823
    36e8:	cmp	x2, x0
    36ec:	b.ls	3744 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xb68>  // b.plast
    36f0:	mov	w0, #0x2                   	// #2
    36f4:	str	w0, [sp, #584]
    36f8:	add	x8, sp, #0xc8
    36fc:	add	x0, sp, #0x248
    3700:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    3704:	ldr	x0, [sp, #200]
    3708:	ands	x1, x0, #0xfffffffffffffffe
    370c:	cset	x0, ne  // ne = any
    3710:	orr	x0, x0, x1
    3714:	str	x0, [sp, #200]
    3718:	ands	x1, x0, #0xfffffffffffffffe
    371c:	b.eq	375c <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xb80>  // b.none
    3720:	ldrb	w0, [x20, #72]
    3724:	orr	w0, w0, #0x3
    3728:	strb	w0, [x20, #72]
    372c:	str	x1, [x20]
    3730:	b	3604 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xa28>
    3734:	stp	x25, x26, [sp, #64]
    3738:	str	x27, [sp, #80]
    373c:	add	x0, sp, #0xc8
    3740:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    3744:	add	x8, sp, #0xc8
    3748:	ldr	x1, [x19, #48]
    374c:	lsl	x2, x2, #2
    3750:	add	x0, sp, #0x100
    3754:	bl	0 <_ZN4llvm18BinaryStreamWriter10writeBytesENS_8ArrayRefIhEE>
    3758:	b	3704 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xb28>
    375c:	tbnz	w0, #0, 3790 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xbb4>
    3760:	ldr	x0, [x19, #64]
    3764:	ldr	x21, [x19, #72]
    3768:	cmp	x21, x0
    376c:	b.eq	382c <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xc50>  // b.none
    3770:	stp	x25, x26, [sp, #64]
    3774:	mov	x19, x0
    3778:	mov	x23, #0x3fffffff            	// #1073741823
    377c:	add	x26, sp, #0x100
    3780:	add	x22, sp, #0xc8
    3784:	mov	w25, #0x2                   	// #2
    3788:	add	x24, sp, #0x24c
    378c:	b	37e0 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xc04>
    3790:	stp	x25, x26, [sp, #64]
    3794:	str	x27, [sp, #80]
    3798:	add	x0, sp, #0xc8
    379c:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    37a0:	mov	x8, x22
    37a4:	ldr	x1, [x19]
    37a8:	lsl	x2, x2, #2
    37ac:	mov	x0, x26
    37b0:	bl	0 <_ZN4llvm18BinaryStreamWriter10writeBytesENS_8ArrayRefIhEE>
    37b4:	ldr	x0, [sp, #200]
    37b8:	ands	x1, x0, #0xfffffffffffffffe
    37bc:	cset	x0, ne  // ne = any
    37c0:	orr	x0, x0, x1
    37c4:	str	x0, [sp, #200]
    37c8:	ands	x1, x0, #0xfffffffffffffffe
    37cc:	b.ne	3804 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xc28>  // b.any
    37d0:	tbnz	w0, #0, 381c <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xc40>
    37d4:	add	x19, x19, #0x10
    37d8:	cmp	x21, x19
    37dc:	b.eq	3828 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xc4c>  // b.none
    37e0:	ldr	x2, [x19, #8]
    37e4:	cbz	x2, 37d4 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xbf8>
    37e8:	cmp	x2, x23
    37ec:	b.ls	37a0 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xbc4>  // b.plast
    37f0:	str	w25, [sp, #588]
    37f4:	mov	x8, x22
    37f8:	mov	x0, x24
    37fc:	bl	0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    3800:	b	37b4 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xbd8>
    3804:	ldrb	w0, [x20, #72]
    3808:	orr	w0, w0, #0x3
    380c:	strb	w0, [x20, #72]
    3810:	str	x1, [x20]
    3814:	ldp	x25, x26, [sp, #64]
    3818:	b	3604 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xa28>
    381c:	str	x27, [sp, #80]
    3820:	add	x0, sp, #0xc8
    3824:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    3828:	ldp	x25, x26, [sp, #64]
    382c:	ldrb	w0, [x20, #72]
    3830:	and	w0, w0, #0xfffffffe
    3834:	orr	w0, w0, #0x2
    3838:	strb	w0, [x20, #72]
    383c:	mov	x1, x20
    3840:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    3844:	ldr	x0, [x0]
    3848:	add	x0, x0, #0x10
    384c:	str	x0, [x1], #8
    3850:	add	x0, sp, #0x200
    3854:	ldp	x2, x3, [x0, #-120]
    3858:	stp	x2, x3, [x1, #8]
    385c:	add	x1, x20, #0x20
    3860:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    3864:	ldr	x0, [x0]
    3868:	add	x0, x0, #0x10
    386c:	str	x0, [x20, #32]
    3870:	ldr	w2, [sp, #416]
    3874:	mov	x0, x1
    3878:	str	w2, [x1, #8]
    387c:	add	x1, sp, #0x200
    3880:	ldp	x2, x3, [x1, #-88]
    3884:	stp	x2, x3, [x0, #16]
    3888:	adrp	x0, 0 <_ZN4llvm3msf10MSFBuilderC1EjjbRNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
    388c:	ldr	x0, [x0]
    3890:	add	x0, x0, #0x10
    3894:	str	x0, [x20, #8]
    3898:	ldr	x0, [sp, #440]
    389c:	str	xzr, [sp, #440]
    38a0:	str	x0, [x20, #64]
    38a4:	b	3604 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xa28>
    38a8:	ldr	w0, [x19, #8]
    38ac:	sub	w1, w0, #0x1
    38b0:	str	w1, [x19, #8]
    38b4:	b	363c <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xa60>
    38b8:	ldr	x0, [x19]
    38bc:	ldr	x1, [x0, #16]
    38c0:	mov	x0, x19
    38c4:	blr	x1
    38c8:	adrp	x0, 0 <__pthread_key_create>
    38cc:	ldr	x0, [x0]
    38d0:	cbz	x0, 3904 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xd28>
    38d4:	add	x1, x19, #0xc
    38d8:	ldaxr	w0, [x1]
    38dc:	sub	w2, w0, #0x1
    38e0:	stlxr	w3, w2, [x1]
    38e4:	cbnz	w3, 38d8 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xcfc>
    38e8:	cmp	w0, #0x1
    38ec:	b.ne	3644 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xa68>  // b.any
    38f0:	ldr	x0, [x19]
    38f4:	ldr	x1, [x0, #24]
    38f8:	mov	x0, x19
    38fc:	blr	x1
    3900:	b	3644 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xa68>
    3904:	ldr	w0, [x19, #12]
    3908:	sub	w1, w0, #0x1
    390c:	str	w1, [x19, #12]
    3910:	b	38e8 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xd0c>
    3914:	ldr	w0, [x19, #8]
    3918:	sub	w1, w0, #0x1
    391c:	str	w1, [x19, #8]
    3920:	b	2ee0 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x304>
    3924:	ldr	x0, [x19]
    3928:	ldr	x1, [x0, #16]
    392c:	mov	x0, x19
    3930:	blr	x1
    3934:	adrp	x0, 0 <__pthread_key_create>
    3938:	ldr	x0, [x0]
    393c:	cbz	x0, 3970 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xd94>
    3940:	add	x1, x19, #0xc
    3944:	ldaxr	w0, [x1]
    3948:	sub	w2, w0, #0x1
    394c:	stlxr	w3, w2, [x1]
    3950:	cbnz	w3, 3944 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xd68>
    3954:	cmp	w0, #0x1
    3958:	b.ne	2ee8 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x30c>  // b.any
    395c:	ldr	x0, [x19]
    3960:	ldr	x1, [x0, #24]
    3964:	mov	x0, x19
    3968:	blr	x1
    396c:	b	2ee8 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x30c>
    3970:	ldr	w0, [x19, #12]
    3974:	sub	w1, w0, #0x1
    3978:	str	w1, [x19, #12]
    397c:	b	3954 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xd78>
    3980:	ldr	x0, [sp, #448]
    3984:	cbz	x0, 2db0 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x1d4>
    3988:	ldr	x1, [x0]
    398c:	ldr	x1, [x1, #8]
    3990:	blr	x1
    3994:	b	2db0 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x1d4>
    3998:	ldrb	w0, [sp, #552]
    399c:	tbnz	w0, #0, 2c50 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x74>
    39a0:	ldr	x0, [sp, #528]
    39a4:	cbz	x0, 39ac <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0xdd0>
    39a8:	bl	0 <_ZdlPv>
    39ac:	ldr	x0, [sp, #472]
    39b0:	bl	0 <free>
    39b4:	b	2c64 <_ZN4llvm3msf10MSFBuilder6commitENS_9StringRefERNS0_9MSFLayoutE+0x88>

Disassembly of section .text._ZNK4llvm12BinaryStream8getFlagsEv:

0000000000000000 <_ZNK4llvm12BinaryStream8getFlagsEv>:
   0:	mov	w0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZNK4llvm20WritableBinaryStream8getFlagsEv:

0000000000000000 <_ZNK4llvm20WritableBinaryStream8getFlagsEv>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZNK4llvm16BinaryByteStream9getEndianEv:

0000000000000000 <_ZNK4llvm16BinaryByteStream9getEndianEv>:
   0:	ldr	w0, [x0, #8]
   4:	ret

Disassembly of section .text._ZN4llvm16BinaryByteStream9getLengthEv:

0000000000000000 <_ZN4llvm16BinaryByteStream9getLengthEv>:
   0:	ldr	w0, [x0, #24]
   4:	ret

Disassembly of section .text._ZN4llvm16BinaryByteStreamD2Ev:

0000000000000000 <_ZN4llvm16BinaryByteStreamD1Ev>:
   0:	ret

Disassembly of section .text._ZNK4llvm23MutableBinaryByteStream9getEndianEv:

0000000000000000 <_ZNK4llvm23MutableBinaryByteStream9getEndianEv>:
   0:	ldr	w0, [x0, #32]
   4:	ret

Disassembly of section .text._ZN4llvm23MutableBinaryByteStream9getLengthEv:

0000000000000000 <_ZN4llvm23MutableBinaryByteStream9getLengthEv>:
   0:	ldr	w0, [x0, #48]
   4:	ret

Disassembly of section .text._ZNK4llvm20FileBufferByteStream9getEndianEv:

0000000000000000 <_ZNK4llvm20FileBufferByteStream9getEndianEv>:
   0:	ldr	w0, [x0, #40]
   4:	ret

Disassembly of section .text._ZN4llvm20FileBufferByteStream9getLengthEv:

0000000000000000 <_ZN4llvm20FileBufferByteStream9getLengthEv>:
   0:	ldr	w0, [x0, #56]
   4:	ret

Disassembly of section .text._ZN4llvm20FileBufferByteStreamD2Ev:

0000000000000000 <_ZN4llvm20FileBufferByteStreamD1Ev>:
   0:	adrp	x1, 0 <_ZN4llvm20FileBufferByteStreamD1Ev>
   4:	ldr	x1, [x1]
   8:	add	x1, x1, #0x10
   c:	str	x1, [x0]
  10:	adrp	x1, 0 <_ZN4llvm20FileBufferByteStreamD1Ev>
  14:	ldr	x1, [x1]
  18:	add	x1, x1, #0x10
  1c:	str	x1, [x0, #8]
  20:	ldr	x0, [x0, #64]
  24:	cbz	x0, 44 <_ZN4llvm20FileBufferByteStreamD1Ev+0x44>
  28:	stp	x29, x30, [sp, #-16]!
  2c:	mov	x29, sp
  30:	ldr	x1, [x0]
  34:	ldr	x1, [x1, #40]
  38:	blr	x1
  3c:	ldp	x29, x30, [sp], #16
  40:	ret
  44:	ret

Disassembly of section .text._ZN4llvm20FileBufferByteStream10StreamImplD2Ev:

0000000000000000 <_ZN4llvm20FileBufferByteStream10StreamImplD1Ev>:
   0:	adrp	x1, 0 <_ZN4llvm20FileBufferByteStream10StreamImplD1Ev>
   4:	ldr	x1, [x1]
   8:	add	x1, x1, #0x10
   c:	str	x1, [x0]
  10:	ldr	x0, [x0, #56]
  14:	cbz	x0, 34 <_ZN4llvm20FileBufferByteStream10StreamImplD1Ev+0x34>
  18:	stp	x29, x30, [sp, #-16]!
  1c:	mov	x29, sp
  20:	ldr	x1, [x0]
  24:	ldr	x1, [x1, #40]
  28:	blr	x1
  2c:	ldp	x29, x30, [sp], #16
  30:	ret
  34:	ret

Disassembly of section .text._ZNK4llvm9ErrorInfoINS_3msf8MSFErrorENS_11StringErrorEE14dynamicClassIDEv:

0000000000000000 <_ZNK4llvm9ErrorInfoINS_3msf8MSFErrorENS_11StringErrorEE14dynamicClassIDEv>:
   0:	adrp	x0, 0 <_ZN4llvm3msf8MSFError2IDE>
   4:	ldr	x0, [x0]
   8:	ret

Disassembly of section .text._ZNK4llvm9ErrorInfoINS_3msf8MSFErrorENS_11StringErrorEE3isAEPKv:

0000000000000000 <_ZNK4llvm9ErrorInfoINS_3msf8MSFErrorENS_11StringErrorEE3isAEPKv>:
   0:	adrp	x0, 0 <_ZN4llvm11StringError2IDE>
   4:	ldr	x0, [x0]
   8:	cmp	x1, x0
   c:	adrp	x0, 0 <_ZN4llvm3msf8MSFError2IDE>
  10:	ldr	x0, [x0]
  14:	ccmp	x1, x0, #0x4, ne  // ne = any
  18:	adrp	x0, 0 <_ZN4llvm13ErrorInfoBase2IDE>
  1c:	ldr	x0, [x0]
  20:	ccmp	x1, x0, #0x4, ne  // ne = any
  24:	cset	w0, eq  // eq = none
  28:	ret

Disassembly of section .text._ZN4llvm3msf8MSFErrorD2Ev:

0000000000000000 <_ZN4llvm3msf8MSFErrorD1Ev>:
   0:	mov	x1, x0
   4:	adrp	x0, 0 <_ZTVN4llvm11StringErrorE>
   8:	ldr	x0, [x0]
   c:	add	x0, x0, #0x10
  10:	str	x0, [x1]
  14:	ldr	x0, [x1, #8]
  18:	add	x1, x1, #0x18
  1c:	cmp	x0, x1
  20:	b.eq	38 <_ZN4llvm3msf8MSFErrorD1Ev+0x38>  // b.none
  24:	stp	x29, x30, [sp, #-16]!
  28:	mov	x29, sp
  2c:	bl	0 <_ZdlPv>
  30:	ldp	x29, x30, [sp], #16
  34:	ret
  38:	ret

Disassembly of section .text._ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev:

0000000000000000 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev>:
   0:	stp	x29, x30, [sp, #-144]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	str	x21, [sp, #32]
  10:	mov	x19, x8
  14:	add	x2, sp, #0x70
  18:	add	x1, sp, #0x80
  1c:	str	x1, [sp, #112]
  20:	str	xzr, [sp, #120]
  24:	strb	wzr, [sp, #128]
  28:	mov	w1, #0x1                   	// #1
  2c:	str	w1, [sp, #96]
  30:	str	xzr, [sp, #88]
  34:	str	xzr, [sp, #80]
  38:	str	xzr, [sp, #72]
  3c:	adrp	x1, 0 <_ZTVN4llvm18raw_string_ostreamE>
  40:	ldr	x1, [x1]
  44:	add	x1, x1, #0x10
  48:	str	x1, [sp, #64]
  4c:	str	x2, [sp, #104]
  50:	ldr	x1, [x0]
  54:	ldr	x2, [x1, #16]
  58:	add	x1, sp, #0x40
  5c:	blr	x2
  60:	ldr	x1, [sp, #88]
  64:	ldr	x0, [sp, #72]
  68:	cmp	x1, x0
  6c:	b.eq	78 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0x78>  // b.none
  70:	add	x0, sp, #0x40
  74:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
  78:	ldr	x0, [sp, #104]
  7c:	add	x1, x19, #0x10
  80:	str	x1, [x19]
  84:	ldr	x21, [x0]
  88:	ldr	x20, [x0, #8]
  8c:	cmp	x21, #0x0
  90:	ccmp	x20, #0x0, #0x4, eq  // eq = none
  94:	b.ne	f8 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0xf8>  // b.any
  98:	str	x20, [sp, #56]
  9c:	cmp	x20, #0xf
  a0:	b.hi	104 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0x104>  // b.pmore
  a4:	ldr	x0, [x19]
  a8:	cmp	x20, #0x1
  ac:	b.ne	130 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0x130>  // b.any
  b0:	ldrb	w1, [x21]
  b4:	strb	w1, [x0]
  b8:	ldr	x0, [sp, #56]
  bc:	str	x0, [x19, #8]
  c0:	ldr	x1, [x19]
  c4:	strb	wzr, [x1, x0]
  c8:	add	x0, sp, #0x40
  cc:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
  d0:	ldr	x0, [sp, #112]
  d4:	add	x1, sp, #0x80
  d8:	cmp	x0, x1
  dc:	b.eq	e4 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0xe4>  // b.none
  e0:	bl	0 <_ZdlPv>
  e4:	mov	x0, x19
  e8:	ldp	x19, x20, [sp, #16]
  ec:	ldr	x21, [sp, #32]
  f0:	ldp	x29, x30, [sp], #144
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev>
  fc:	add	x0, x0, #0x0
 100:	bl	0 <_ZSt19__throw_logic_errorPKc>
 104:	mov	x2, #0x0                   	// #0
 108:	add	x1, sp, #0x38
 10c:	mov	x0, x19
 110:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
 114:	str	x0, [x19]
 118:	ldr	x1, [sp, #56]
 11c:	str	x1, [x19, #16]
 120:	mov	x2, x20
 124:	mov	x1, x21
 128:	bl	0 <memcpy>
 12c:	b	b8 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0xb8>
 130:	cbz	x20, b8 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0xb8>
 134:	b	120 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0x120>

Disassembly of section .text._ZN4llvm16BinaryByteStreamD0Ev:

0000000000000000 <_ZN4llvm16BinaryByteStreamD0Ev>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	x1, #0x20                  	// #32
   c:	bl	0 <_ZdlPvm>
  10:	ldp	x29, x30, [sp], #16
  14:	ret

Disassembly of section .text._ZN4llvm20FileBufferByteStreamD0Ev:

0000000000000000 <_ZN4llvm20FileBufferByteStreamD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	adrp	x0, 0 <_ZN4llvm20FileBufferByteStreamD0Ev>
  14:	ldr	x0, [x0]
  18:	add	x0, x0, #0x10
  1c:	str	x0, [x19]
  20:	adrp	x0, 0 <_ZN4llvm20FileBufferByteStreamD0Ev>
  24:	ldr	x0, [x0]
  28:	add	x0, x0, #0x10
  2c:	str	x0, [x19, #8]
  30:	ldr	x0, [x19, #64]
  34:	cbz	x0, 44 <_ZN4llvm20FileBufferByteStreamD0Ev+0x44>
  38:	ldr	x1, [x0]
  3c:	ldr	x1, [x1, #40]
  40:	blr	x1
  44:	mov	x1, #0x48                  	// #72
  48:	mov	x0, x19
  4c:	bl	0 <_ZdlPvm>
  50:	ldr	x19, [sp, #16]
  54:	ldp	x29, x30, [sp], #32
  58:	ret

Disassembly of section .text._ZN4llvm20FileBufferByteStream10StreamImplD0Ev:

0000000000000000 <_ZN4llvm20FileBufferByteStream10StreamImplD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	adrp	x0, 0 <_ZN4llvm20FileBufferByteStream10StreamImplD0Ev>
  14:	ldr	x0, [x0]
  18:	add	x0, x0, #0x10
  1c:	str	x0, [x19]
  20:	ldr	x0, [x19, #56]
  24:	cbz	x0, 34 <_ZN4llvm20FileBufferByteStream10StreamImplD0Ev+0x34>
  28:	ldr	x1, [x0]
  2c:	ldr	x1, [x1, #40]
  30:	blr	x1
  34:	mov	x1, #0x40                  	// #64
  38:	mov	x0, x19
  3c:	bl	0 <_ZdlPvm>
  40:	ldr	x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret

Disassembly of section .text._ZN4llvm3msf8MSFErrorD0Ev:

0000000000000000 <_ZN4llvm3msf8MSFErrorD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	adrp	x0, 0 <_ZTVN4llvm11StringErrorE>
  14:	ldr	x0, [x0]
  18:	add	x0, x0, #0x10
  1c:	str	x0, [x19]
  20:	ldr	x0, [x19, #8]
  24:	add	x1, x19, #0x18
  28:	cmp	x0, x1
  2c:	b.eq	34 <_ZN4llvm3msf8MSFErrorD0Ev+0x34>  // b.none
  30:	bl	0 <_ZdlPv>
  34:	mov	x1, #0x40                  	// #64
  38:	mov	x0, x19
  3c:	bl	0 <_ZdlPvm>
  40:	ldr	x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret

Disassembly of section .text._ZN4llvm18BinaryStreamWriterD2Ev:

0000000000000000 <_ZN4llvm18BinaryStreamWriterD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	adrp	x1, 0 <_ZN4llvm18BinaryStreamWriterD1Ev>
  10:	ldr	x1, [x1]
  14:	add	x1, x1, #0x10
  18:	str	x1, [x0]
  1c:	ldr	x19, [x0, #16]
  20:	cbz	x19, 4c <_ZN4llvm18BinaryStreamWriterD1Ev+0x4c>
  24:	adrp	x0, 0 <__pthread_key_create>
  28:	ldr	x0, [x0]
  2c:	cbz	x0, 58 <_ZN4llvm18BinaryStreamWriterD1Ev+0x58>
  30:	add	x1, x19, #0x8
  34:	ldaxr	w0, [x1]
  38:	sub	w2, w0, #0x1
  3c:	stlxr	w3, w2, [x1]
  40:	cbnz	w3, 34 <_ZN4llvm18BinaryStreamWriterD1Ev+0x34>
  44:	cmp	w0, #0x1
  48:	b.eq	68 <_ZN4llvm18BinaryStreamWriterD1Ev+0x68>  // b.none
  4c:	ldr	x19, [sp, #16]
  50:	ldp	x29, x30, [sp], #32
  54:	ret
  58:	ldr	w0, [x19, #8]
  5c:	sub	w1, w0, #0x1
  60:	str	w1, [x19, #8]
  64:	b	44 <_ZN4llvm18BinaryStreamWriterD1Ev+0x44>
  68:	ldr	x0, [x19]
  6c:	ldr	x1, [x0, #16]
  70:	mov	x0, x19
  74:	blr	x1
  78:	adrp	x0, 0 <__pthread_key_create>
  7c:	ldr	x0, [x0]
  80:	cbz	x0, b4 <_ZN4llvm18BinaryStreamWriterD1Ev+0xb4>
  84:	add	x1, x19, #0xc
  88:	ldaxr	w0, [x1]
  8c:	sub	w2, w0, #0x1
  90:	stlxr	w3, w2, [x1]
  94:	cbnz	w3, 88 <_ZN4llvm18BinaryStreamWriterD1Ev+0x88>
  98:	cmp	w0, #0x1
  9c:	b.ne	4c <_ZN4llvm18BinaryStreamWriterD1Ev+0x4c>  // b.any
  a0:	ldr	x0, [x19]
  a4:	ldr	x1, [x0, #24]
  a8:	mov	x0, x19
  ac:	blr	x1
  b0:	b	4c <_ZN4llvm18BinaryStreamWriterD1Ev+0x4c>
  b4:	ldr	w0, [x19, #12]
  b8:	sub	w1, w0, #0x1
  bc:	str	w1, [x19, #12]
  c0:	b	98 <_ZN4llvm18BinaryStreamWriterD1Ev+0x98>

Disassembly of section .text._ZN4llvm18BinaryStreamWriterD0Ev:

0000000000000000 <_ZN4llvm18BinaryStreamWriterD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	adrp	x0, 0 <_ZN4llvm18BinaryStreamWriterD0Ev>
  14:	ldr	x0, [x0]
  18:	add	x0, x0, #0x10
  1c:	str	x0, [x19]
  20:	ldr	x20, [x19, #16]
  24:	cbz	x20, 50 <_ZN4llvm18BinaryStreamWriterD0Ev+0x50>
  28:	adrp	x0, 0 <__pthread_key_create>
  2c:	ldr	x0, [x0]
  30:	cbz	x0, 68 <_ZN4llvm18BinaryStreamWriterD0Ev+0x68>
  34:	add	x1, x20, #0x8
  38:	ldaxr	w0, [x1]
  3c:	sub	w2, w0, #0x1
  40:	stlxr	w3, w2, [x1]
  44:	cbnz	w3, 38 <_ZN4llvm18BinaryStreamWriterD0Ev+0x38>
  48:	cmp	w0, #0x1
  4c:	b.eq	78 <_ZN4llvm18BinaryStreamWriterD0Ev+0x78>  // b.none
  50:	mov	x1, #0x38                  	// #56
  54:	mov	x0, x19
  58:	bl	0 <_ZdlPvm>
  5c:	ldp	x19, x20, [sp, #16]
  60:	ldp	x29, x30, [sp], #32
  64:	ret
  68:	ldr	w0, [x20, #8]
  6c:	sub	w1, w0, #0x1
  70:	str	w1, [x20, #8]
  74:	b	48 <_ZN4llvm18BinaryStreamWriterD0Ev+0x48>
  78:	ldr	x0, [x20]
  7c:	ldr	x1, [x0, #16]
  80:	mov	x0, x20
  84:	blr	x1
  88:	adrp	x0, 0 <__pthread_key_create>
  8c:	ldr	x0, [x0]
  90:	cbz	x0, c4 <_ZN4llvm18BinaryStreamWriterD0Ev+0xc4>
  94:	add	x1, x20, #0xc
  98:	ldaxr	w0, [x1]
  9c:	sub	w2, w0, #0x1
  a0:	stlxr	w3, w2, [x1]
  a4:	cbnz	w3, 98 <_ZN4llvm18BinaryStreamWriterD0Ev+0x98>
  a8:	cmp	w0, #0x1
  ac:	b.ne	50 <_ZN4llvm18BinaryStreamWriterD0Ev+0x50>  // b.any
  b0:	ldr	x0, [x20]
  b4:	ldr	x1, [x0, #24]
  b8:	mov	x0, x20
  bc:	blr	x1
  c0:	b	50 <_ZN4llvm18BinaryStreamWriterD0Ev+0x50>
  c4:	ldr	w0, [x20, #12]
  c8:	sub	w1, w0, #0x1
  cc:	str	w1, [x20, #12]
  d0:	b	a8 <_ZN4llvm18BinaryStreamWriterD0Ev+0xa8>

Disassembly of section .text._ZN4llvm11safe_mallocEm:

0000000000000000 <_ZN4llvm11safe_mallocEm>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	bl	0 <malloc>
  14:	mov	x19, x0
  18:	cbz	x0, 2c <_ZN4llvm11safe_mallocEm+0x2c>
  1c:	mov	x0, x19
  20:	ldp	x19, x20, [sp, #16]
  24:	ldp	x29, x30, [sp], #32
  28:	ret
  2c:	cbnz	x20, 40 <_ZN4llvm11safe_mallocEm+0x40>
  30:	mov	x0, #0x1                   	// #1
  34:	bl	0 <_ZN4llvm11safe_mallocEm>
  38:	mov	x19, x0
  3c:	b	1c <_ZN4llvm11safe_mallocEm+0x1c>
  40:	mov	w1, #0x1                   	// #1
  44:	adrp	x0, 0 <_ZN4llvm11safe_mallocEm>
  48:	add	x0, x0, #0x0
  4c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  50:	b	1c <_ZN4llvm11safe_mallocEm+0x1c>

Disassembly of section .text._ZN4llvm9BitVector6resizeEjb:

0000000000000000 <_ZN4llvm9BitVector6resizeEjb>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	mov	x19, x0
  18:	mov	w20, w1
  1c:	and	w22, w2, #0xff
  20:	ldr	x23, [x0, #8]
  24:	lsl	x0, x23, #6
  28:	cmp	x0, w1, uxtw
  2c:	b.cc	64 <_ZN4llvm9BitVector6resizeEjb+0x64>  // b.lo, b.ul, b.last
  30:	ldr	w0, [x19, #16]
  34:	cmp	w0, w20
  38:	b.cc	1cc <_ZN4llvm9BitVector6resizeEjb+0x1cc>  // b.lo, b.ul, b.last
  3c:	ldr	w0, [x19, #16]
  40:	str	w20, [x19, #16]
  44:	cmp	w22, #0x0
  48:	ccmp	w20, w0, #0x0, eq  // eq = none
  4c:	b.cc	220 <_ZN4llvm9BitVector6resizeEjb+0x220>  // b.lo, b.ul, b.last
  50:	ldp	x19, x20, [sp, #16]
  54:	ldp	x21, x22, [sp, #32]
  58:	ldp	x23, x24, [sp, #48]
  5c:	ldp	x29, x30, [sp], #80
  60:	ret
  64:	str	x25, [sp, #64]
  68:	add	w21, w1, #0x3f
  6c:	lsr	w21, w21, #6
  70:	lsl	x2, x23, #1
  74:	cmp	x21, x2
  78:	csel	x21, x21, x2, cs  // cs = hs, nlast
  7c:	cbz	x21, 10c <_ZN4llvm9BitVector6resizeEjb+0x10c>
  80:	lsl	x25, x21, #3
  84:	mov	x1, x25
  88:	ldr	x0, [x19]
  8c:	bl	0 <realloc>
  90:	mov	x24, x0
  94:	cbz	x0, 12c <_ZN4llvm9BitVector6resizeEjb+0x12c>
  98:	str	x24, [x19]
  9c:	str	x21, [x19, #8]
  a0:	ldr	w1, [x19, #16]
  a4:	add	w1, w1, #0x3f
  a8:	lsr	w25, w1, #6
  ac:	lsr	w0, w1, #6
  b0:	cmp	x21, x0
  b4:	b.hi	154 <_ZN4llvm9BitVector6resizeEjb+0x154>  // b.pmore
  b8:	ldr	w0, [x19, #16]
  bc:	ands	w0, w0, #0x3f
  c0:	b.eq	ec <_ZN4llvm9BitVector6resizeEjb+0xec>  // b.none
  c4:	mov	x1, #0xffffffffffffffff    	// #-1
  c8:	lsl	x0, x1, x0
  cc:	sub	w25, w25, #0x1
  d0:	ldr	x1, [x19, #8]
  d4:	cmp	x25, x1
  d8:	b.cs	170 <_ZN4llvm9BitVector6resizeEjb+0x170>  // b.hs, b.nlast
  dc:	ldr	x1, [x19]
  e0:	ldr	x2, [x1, x25, lsl #3]
  e4:	bic	x0, x2, x0
  e8:	str	x0, [x1, x25, lsl #3]
  ec:	and	x0, x23, #0xffffffff
  f0:	ldr	x2, [x19, #8]
  f4:	cmp	x2, w23, uxtw
  f8:	b.cc	190 <_ZN4llvm9BitVector6resizeEjb+0x190>  // b.lo, b.ul, b.last
  fc:	subs	x2, x2, x0
 100:	b.ne	1b0 <_ZN4llvm9BitVector6resizeEjb+0x1b0>  // b.any
 104:	ldr	x25, [sp, #64]
 108:	b	30 <_ZN4llvm9BitVector6resizeEjb+0x30>
 10c:	adrp	x3, 0 <_ZN4llvm9BitVector6resizeEjb>
 110:	add	x3, x3, #0x0
 114:	mov	w2, #0x376                 	// #886
 118:	adrp	x1, 0 <_ZN4llvm9BitVector6resizeEjb>
 11c:	add	x1, x1, #0x0
 120:	adrp	x0, 0 <_ZN4llvm9BitVector6resizeEjb>
 124:	add	x0, x0, #0x0
 128:	bl	0 <__assert_fail>
 12c:	cbnz	x25, 140 <_ZN4llvm9BitVector6resizeEjb+0x140>
 130:	mov	x0, #0x1                   	// #1
 134:	bl	0 <_ZN4llvm9BitVector6resizeEjb>
 138:	mov	x24, x0
 13c:	b	98 <_ZN4llvm9BitVector6resizeEjb+0x98>
 140:	mov	w1, #0x1                   	// #1
 144:	adrp	x0, 0 <_ZN4llvm9BitVector6resizeEjb>
 148:	add	x0, x0, #0x0
 14c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 150:	b	98 <_ZN4llvm9BitVector6resizeEjb+0x98>
 154:	subs	x21, x21, x0
 158:	b.eq	b8 <_ZN4llvm9BitVector6resizeEjb+0xb8>  // b.none
 15c:	lsl	x2, x21, #3
 160:	mov	w1, #0x0                   	// #0
 164:	add	x0, x24, x0, lsl #3
 168:	bl	0 <memset>
 16c:	b	b8 <_ZN4llvm9BitVector6resizeEjb+0xb8>
 170:	adrp	x3, 0 <_ZN4llvm9BitVector6resizeEjb>
 174:	add	x3, x3, #0x0
 178:	mov	w2, #0x1ab                 	// #427
 17c:	adrp	x1, 0 <_ZN4llvm9BitVector6resizeEjb>
 180:	add	x1, x1, #0x0
 184:	adrp	x0, 0 <_ZN4llvm9BitVector6resizeEjb>
 188:	add	x0, x0, #0x0
 18c:	bl	0 <__assert_fail>
 190:	adrp	x3, 0 <_ZN4llvm9BitVector6resizeEjb>
 194:	add	x3, x3, #0x0
 198:	mov	w2, #0x174                 	// #372
 19c:	adrp	x1, 0 <_ZN4llvm9BitVector6resizeEjb>
 1a0:	add	x1, x1, #0x0
 1a4:	adrp	x0, 0 <_ZN4llvm9BitVector6resizeEjb>
 1a8:	add	x0, x0, #0x0
 1ac:	bl	0 <__assert_fail>
 1b0:	ldr	x3, [x19]
 1b4:	lsl	x2, x2, #3
 1b8:	neg	w1, w22
 1bc:	add	x0, x3, x0, lsl #3
 1c0:	bl	0 <memset>
 1c4:	ldr	x25, [sp, #64]
 1c8:	b	30 <_ZN4llvm9BitVector6resizeEjb+0x30>
 1cc:	add	w0, w0, #0x3f
 1d0:	lsr	w21, w0, #6
 1d4:	ldr	x2, [x19, #8]
 1d8:	lsr	w0, w0, #6
 1dc:	cmp	x2, x0
 1e0:	b.hi	270 <_ZN4llvm9BitVector6resizeEjb+0x270>  // b.pmore
 1e4:	ldr	w0, [x19, #16]
 1e8:	ands	w0, w0, #0x3f
 1ec:	b.eq	3c <_ZN4llvm9BitVector6resizeEjb+0x3c>  // b.none
 1f0:	mov	x1, #0xffffffffffffffff    	// #-1
 1f4:	lsl	x0, x1, x0
 1f8:	cbz	w22, 2b4 <_ZN4llvm9BitVector6resizeEjb+0x2b4>
 1fc:	sub	w21, w21, #0x1
 200:	ldr	x1, [x19, #8]
 204:	cmp	x21, x1
 208:	b.cs	290 <_ZN4llvm9BitVector6resizeEjb+0x290>  // b.hs, b.nlast
 20c:	ldr	x2, [x19]
 210:	ldr	x1, [x2, x21, lsl #3]
 214:	orr	x0, x1, x0
 218:	str	x0, [x2, x21, lsl #3]
 21c:	str	w20, [x19, #16]
 220:	add	w20, w20, #0x3f
 224:	lsr	w21, w20, #6
 228:	ldr	x2, [x19, #8]
 22c:	lsr	w20, w20, #6
 230:	cmp	x2, x20
 234:	b.hi	2fc <_ZN4llvm9BitVector6resizeEjb+0x2fc>  // b.pmore
 238:	ldr	w0, [x19, #16]
 23c:	ands	w0, w0, #0x3f
 240:	b.eq	50 <_ZN4llvm9BitVector6resizeEjb+0x50>  // b.none
 244:	mov	x1, #0xffffffffffffffff    	// #-1
 248:	lsl	x0, x1, x0
 24c:	sub	w1, w21, #0x1
 250:	ldr	x2, [x19, #8]
 254:	cmp	x1, x2
 258:	b.cs	31c <_ZN4llvm9BitVector6resizeEjb+0x31c>  // b.hs, b.nlast
 25c:	ldr	x2, [x19]
 260:	ldr	x3, [x2, x1, lsl #3]
 264:	bic	x0, x3, x0
 268:	str	x0, [x2, x1, lsl #3]
 26c:	b	50 <_ZN4llvm9BitVector6resizeEjb+0x50>
 270:	subs	x2, x2, x0
 274:	b.eq	1e4 <_ZN4llvm9BitVector6resizeEjb+0x1e4>  // b.none
 278:	ldr	x3, [x19]
 27c:	lsl	x2, x2, #3
 280:	neg	w1, w22
 284:	add	x0, x3, x0, lsl #3
 288:	bl	0 <memset>
 28c:	b	1e4 <_ZN4llvm9BitVector6resizeEjb+0x1e4>
 290:	str	x25, [sp, #64]
 294:	adrp	x3, 0 <_ZN4llvm9BitVector6resizeEjb>
 298:	add	x3, x3, #0x0
 29c:	mov	w2, #0x1ab                 	// #427
 2a0:	adrp	x1, 0 <_ZN4llvm9BitVector6resizeEjb>
 2a4:	add	x1, x1, #0x0
 2a8:	adrp	x0, 0 <_ZN4llvm9BitVector6resizeEjb>
 2ac:	add	x0, x0, #0x0
 2b0:	bl	0 <__assert_fail>
 2b4:	sub	w21, w21, #0x1
 2b8:	ldr	x1, [x19, #8]
 2bc:	cmp	x21, x1
 2c0:	b.cs	2d8 <_ZN4llvm9BitVector6resizeEjb+0x2d8>  // b.hs, b.nlast
 2c4:	ldr	x1, [x19]
 2c8:	ldr	x2, [x1, x21, lsl #3]
 2cc:	bic	x0, x2, x0
 2d0:	str	x0, [x1, x21, lsl #3]
 2d4:	b	3c <_ZN4llvm9BitVector6resizeEjb+0x3c>
 2d8:	str	x25, [sp, #64]
 2dc:	adrp	x3, 0 <_ZN4llvm9BitVector6resizeEjb>
 2e0:	add	x3, x3, #0x0
 2e4:	mov	w2, #0x1ab                 	// #427
 2e8:	adrp	x1, 0 <_ZN4llvm9BitVector6resizeEjb>
 2ec:	add	x1, x1, #0x0
 2f0:	adrp	x0, 0 <_ZN4llvm9BitVector6resizeEjb>
 2f4:	add	x0, x0, #0x0
 2f8:	bl	0 <__assert_fail>
 2fc:	subs	x2, x2, x20
 300:	b.eq	238 <_ZN4llvm9BitVector6resizeEjb+0x238>  // b.none
 304:	ldr	x0, [x19]
 308:	lsl	x2, x2, #3
 30c:	mov	w1, #0x0                   	// #0
 310:	add	x0, x0, x20, lsl #3
 314:	bl	0 <memset>
 318:	b	238 <_ZN4llvm9BitVector6resizeEjb+0x238>
 31c:	str	x25, [sp, #64]
 320:	adrp	x3, 0 <_ZN4llvm9BitVector6resizeEjb>
 324:	add	x3, x3, #0x0
 328:	mov	w2, #0x1ab                 	// #427
 32c:	adrp	x1, 0 <_ZN4llvm9BitVector6resizeEjb>
 330:	add	x1, x1, #0x0
 334:	adrp	x0, 0 <_ZN4llvm9BitVector6resizeEjb>
 338:	add	x0, x0, #0x0
 33c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm11raw_ostreamlsEPKc:

0000000000000000 <_ZN4llvm11raw_ostreamlsEPKc>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	cbz	x1, 78 <_ZN4llvm11raw_ostreamlsEPKc+0x78>
  14:	str	x21, [sp, #32]
  18:	mov	x20, x1
  1c:	mov	x0, x1
  20:	bl	0 <strlen>
  24:	mov	x21, x0
  28:	ldr	x0, [x19, #24]
  2c:	ldr	x1, [x19, #16]
  30:	sub	x1, x1, x0
  34:	cmp	x21, x1
  38:	b.hi	60 <_ZN4llvm11raw_ostreamlsEPKc+0x60>  // b.pmore
  3c:	cbz	x21, 88 <_ZN4llvm11raw_ostreamlsEPKc+0x88>
  40:	mov	x2, x21
  44:	mov	x1, x20
  48:	bl	0 <memcpy>
  4c:	ldr	x0, [x19, #24]
  50:	add	x21, x0, x21
  54:	str	x21, [x19, #24]
  58:	ldr	x21, [sp, #32]
  5c:	b	78 <_ZN4llvm11raw_ostreamlsEPKc+0x78>
  60:	mov	x2, x21
  64:	mov	x1, x20
  68:	mov	x0, x19
  6c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  70:	mov	x19, x0
  74:	ldr	x21, [sp, #32]
  78:	mov	x0, x19
  7c:	ldp	x19, x20, [sp, #16]
  80:	ldp	x29, x30, [sp], #48
  84:	ret
  88:	ldr	x21, [sp, #32]
  8c:	b	78 <_ZN4llvm11raw_ostreamlsEPKc+0x78>

Disassembly of section .text._ZN4llvm16maskTrailingOnesImEET_j:

0000000000000000 <_ZN4llvm16maskTrailingOnesImEET_j>:
   0:	cmp	w0, #0x40
   4:	b.hi	20 <_ZN4llvm16maskTrailingOnesImEET_j+0x20>  // b.pmore
   8:	neg	w2, w0
   c:	mov	x1, #0xffffffffffffffff    	// #-1
  10:	lsr	x1, x1, x2
  14:	cmp	w0, #0x0
  18:	csel	x0, x1, xzr, ne  // ne = any
  1c:	ret
  20:	stp	x29, x30, [sp, #-16]!
  24:	mov	x29, sp
  28:	adrp	x3, 0 <_ZN4llvm16maskTrailingOnesImEET_j>
  2c:	add	x3, x3, #0x0
  30:	mov	w2, #0xfb                  	// #251
  34:	adrp	x1, 0 <_ZN4llvm16maskTrailingOnesImEET_j>
  38:	add	x1, x1, #0x0
  3c:	adrp	x0, 0 <_ZN4llvm16maskTrailingOnesImEET_j>
  40:	add	x0, x0, #0x0
  44:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm10make_errorINS_17BinaryStreamErrorEJNS_17stream_error_codeEEEENS_5ErrorEDpOT0_:

0000000000000000 <_ZN4llvm10make_errorINS_17BinaryStreamErrorEJNS_17stream_error_codeEEEENS_5ErrorEDpOT0_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	str	x21, [sp, #32]
  10:	mov	x20, x8
  14:	ldr	w21, [x0]
  18:	mov	x0, #0x30                  	// #48
  1c:	bl	0 <_Znwm>
  20:	mov	x19, x0
  24:	mov	w1, w21
  28:	bl	0 <_ZN4llvm17BinaryStreamErrorC1ENS_17stream_error_codeE>
  2c:	orr	x19, x19, #0x1
  30:	str	x19, [x20]
  34:	mov	x0, x20
  38:	ldp	x19, x20, [sp, #16]
  3c:	ldr	x21, [sp, #32]
  40:	ldp	x29, x30, [sp], #48
  44:	ret

Disassembly of section .text._ZN4llvm20FileBufferByteStream10StreamImpl6commitEv:

0000000000000000 <_ZN4llvm20FileBufferByteStream10StreamImpl6commitEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x8
  10:	ldr	x0, [x0, #56]
  14:	ldr	x1, [x0]
  18:	add	x8, sp, #0x28
  1c:	ldr	x1, [x1, #24]
  20:	blr	x1
  24:	ldr	x0, [sp, #40]
  28:	ands	x1, x0, #0xfffffffffffffffe
  2c:	cset	x0, ne  // ne = any
  30:	orr	x0, x0, x1
  34:	str	x0, [sp, #40]
  38:	cbnz	x0, 54 <_ZN4llvm20FileBufferByteStream10StreamImpl6commitEv+0x54>
  3c:	mov	x0, #0x1                   	// #1
  40:	str	x0, [x19]
  44:	mov	x0, x19
  48:	ldr	x19, [sp, #16]
  4c:	ldp	x29, x30, [sp], #48
  50:	ret
  54:	add	x0, sp, #0x28
  58:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

Disassembly of section .text._ZN4llvm20FileBufferByteStream6commitEv:

0000000000000000 <_ZN4llvm20FileBufferByteStream6commitEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x8
  10:	ldr	x0, [x0, #64]
  14:	ldr	x1, [x0]
  18:	add	x8, sp, #0x28
  1c:	ldr	x1, [x1, #24]
  20:	blr	x1
  24:	ldr	x0, [sp, #40]
  28:	ands	x1, x0, #0xfffffffffffffffe
  2c:	cset	x0, ne  // ne = any
  30:	orr	x0, x0, x1
  34:	str	x0, [sp, #40]
  38:	cbnz	x0, 54 <_ZN4llvm20FileBufferByteStream6commitEv+0x54>
  3c:	mov	x0, #0x1                   	// #1
  40:	str	x0, [x19]
  44:	mov	x0, x19
  48:	ldr	x19, [sp, #16]
  4c:	ldp	x29, x30, [sp], #48
  50:	ret
  54:	add	x0, sp, #0x28
  58:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

Disassembly of section .text._ZN4llvm20FileBufferByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE:

0000000000000000 <_ZN4llvm20FileBufferByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	str	x23, [sp, #48]
  14:	mov	x21, x8
  18:	mov	x19, x0
  1c:	mov	w20, w1
  20:	mov	x22, x2
  24:	add	x23, x0, #0x20
  28:	ldr	x0, [x0, #32]
  2c:	ldr	x1, [x0, #40]
  30:	mov	x0, x23
  34:	blr	x1
  38:	cmp	w20, w0
  3c:	b.hi	ac <_ZN4llvm20FileBufferByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0xac>  // b.pmore
  40:	ldr	x0, [x19, #32]
  44:	ldr	x1, [x0, #40]
  48:	mov	x0, x23
  4c:	blr	x1
  50:	add	w1, w20, #0x1
  54:	cmp	w0, w1
  58:	b.cs	c8 <_ZN4llvm20FileBufferByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0xc8>  // b.hs, b.nlast
  5c:	mov	w0, #0x1                   	// #1
  60:	str	w0, [sp, #72]
  64:	add	x8, sp, #0x40
  68:	add	x0, sp, #0x48
  6c:	bl	0 <_ZN4llvm20FileBufferByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE>
  70:	ldr	x0, [sp, #64]
  74:	ands	x1, x0, #0xfffffffffffffffe
  78:	cset	x0, ne  // ne = any
  7c:	orr	x0, x0, x1
  80:	str	x0, [sp, #64]
  84:	ands	x1, x0, #0xfffffffffffffffe
  88:	b.eq	c4 <_ZN4llvm20FileBufferByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0xc4>  // b.none
  8c:	orr	x1, x1, #0x1
  90:	str	x1, [x21]
  94:	mov	x0, x21
  98:	ldp	x19, x20, [sp, #16]
  9c:	ldp	x21, x22, [sp, #32]
  a0:	ldr	x23, [sp, #48]
  a4:	ldp	x29, x30, [sp], #80
  a8:	ret
  ac:	mov	w0, #0x3                   	// #3
  b0:	str	w0, [sp, #76]
  b4:	add	x8, sp, #0x40
  b8:	add	x0, sp, #0x4c
  bc:	bl	0 <_ZN4llvm20FileBufferByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE>
  c0:	b	70 <_ZN4llvm20FileBufferByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0x70>
  c4:	tbnz	w0, #0, f0 <_ZN4llvm20FileBufferByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0xf0>
  c8:	mov	w20, w20
  cc:	ldr	x0, [x19, #56]
  d0:	sub	x0, x0, x20
  d4:	ldr	x1, [x19, #48]
  d8:	add	x20, x1, x20
  dc:	str	x20, [x22]
  e0:	str	x0, [x22, #8]
  e4:	mov	x0, #0x1                   	// #1
  e8:	str	x0, [x21]
  ec:	b	94 <_ZN4llvm20FileBufferByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0x94>
  f0:	add	x0, sp, #0x40
  f4:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

Disassembly of section .text._ZN4llvm23MutableBinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE:

0000000000000000 <_ZN4llvm23MutableBinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	str	x23, [sp, #48]
  14:	mov	x21, x8
  18:	mov	x19, x0
  1c:	mov	w20, w1
  20:	mov	x22, x2
  24:	add	x23, x0, #0x18
  28:	ldr	x0, [x0, #24]
  2c:	ldr	x1, [x0, #40]
  30:	mov	x0, x23
  34:	blr	x1
  38:	cmp	w20, w0
  3c:	b.hi	ac <_ZN4llvm23MutableBinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0xac>  // b.pmore
  40:	ldr	x0, [x19, #24]
  44:	ldr	x1, [x0, #40]
  48:	mov	x0, x23
  4c:	blr	x1
  50:	add	w1, w20, #0x1
  54:	cmp	w0, w1
  58:	b.cs	c8 <_ZN4llvm23MutableBinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0xc8>  // b.hs, b.nlast
  5c:	mov	w0, #0x1                   	// #1
  60:	str	w0, [sp, #72]
  64:	add	x8, sp, #0x40
  68:	add	x0, sp, #0x48
  6c:	bl	0 <_ZN4llvm23MutableBinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE>
  70:	ldr	x0, [sp, #64]
  74:	ands	x1, x0, #0xfffffffffffffffe
  78:	cset	x0, ne  // ne = any
  7c:	orr	x0, x0, x1
  80:	str	x0, [sp, #64]
  84:	ands	x1, x0, #0xfffffffffffffffe
  88:	b.eq	c4 <_ZN4llvm23MutableBinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0xc4>  // b.none
  8c:	orr	x1, x1, #0x1
  90:	str	x1, [x21]
  94:	mov	x0, x21
  98:	ldp	x19, x20, [sp, #16]
  9c:	ldp	x21, x22, [sp, #32]
  a0:	ldr	x23, [sp, #48]
  a4:	ldp	x29, x30, [sp], #80
  a8:	ret
  ac:	mov	w0, #0x3                   	// #3
  b0:	str	w0, [sp, #76]
  b4:	add	x8, sp, #0x40
  b8:	add	x0, sp, #0x4c
  bc:	bl	0 <_ZN4llvm23MutableBinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE>
  c0:	b	70 <_ZN4llvm23MutableBinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0x70>
  c4:	tbnz	w0, #0, f0 <_ZN4llvm23MutableBinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0xf0>
  c8:	mov	w20, w20
  cc:	ldr	x0, [x19, #48]
  d0:	sub	x0, x0, x20
  d4:	ldr	x1, [x19, #40]
  d8:	add	x20, x1, x20
  dc:	str	x20, [x22]
  e0:	str	x0, [x22, #8]
  e4:	mov	x0, #0x1                   	// #1
  e8:	str	x0, [x21]
  ec:	b	94 <_ZN4llvm23MutableBinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0x94>
  f0:	add	x0, sp, #0x40
  f4:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

Disassembly of section .text._ZN4llvm16BinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE:

0000000000000000 <_ZN4llvm16BinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x21, x8
  14:	mov	x20, x0
  18:	mov	w19, w1
  1c:	mov	x22, x2
  20:	ldr	x1, [x0]
  24:	ldr	x1, [x1, #40]
  28:	blr	x1
  2c:	cmp	w19, w0
  30:	b.hi	9c <_ZN4llvm16BinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0x9c>  // b.pmore
  34:	ldr	x0, [x20]
  38:	ldr	x1, [x0, #40]
  3c:	mov	x0, x20
  40:	blr	x1
  44:	add	w1, w19, #0x1
  48:	cmp	w0, w1
  4c:	b.cs	b8 <_ZN4llvm16BinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0xb8>  // b.hs, b.nlast
  50:	mov	w0, #0x1                   	// #1
  54:	str	w0, [sp, #56]
  58:	add	x8, sp, #0x30
  5c:	add	x0, sp, #0x38
  60:	bl	0 <_ZN4llvm16BinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE>
  64:	ldr	x0, [sp, #48]
  68:	ands	x1, x0, #0xfffffffffffffffe
  6c:	cset	x0, ne  // ne = any
  70:	orr	x0, x0, x1
  74:	str	x0, [sp, #48]
  78:	ands	x1, x0, #0xfffffffffffffffe
  7c:	b.eq	b4 <_ZN4llvm16BinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0xb4>  // b.none
  80:	orr	x1, x1, #0x1
  84:	str	x1, [x21]
  88:	mov	x0, x21
  8c:	ldp	x19, x20, [sp, #16]
  90:	ldp	x21, x22, [sp, #32]
  94:	ldp	x29, x30, [sp], #64
  98:	ret
  9c:	mov	w0, #0x3                   	// #3
  a0:	str	w0, [sp, #60]
  a4:	add	x8, sp, #0x30
  a8:	add	x0, sp, #0x3c
  ac:	bl	0 <_ZN4llvm16BinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE>
  b0:	b	64 <_ZN4llvm16BinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0x64>
  b4:	tbnz	w0, #0, e0 <_ZN4llvm16BinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0xe0>
  b8:	mov	w19, w19
  bc:	ldr	x0, [x20, #24]
  c0:	sub	x0, x0, x19
  c4:	ldr	x1, [x20, #16]
  c8:	add	x19, x1, x19
  cc:	str	x19, [x22]
  d0:	str	x0, [x22, #8]
  d4:	mov	x0, #0x1                   	// #1
  d8:	str	x0, [x21]
  dc:	b	88 <_ZN4llvm16BinaryByteStream26readLongestContiguousChunkEjRNS_8ArrayRefIhEE+0x88>
  e0:	add	x0, sp, #0x30
  e4:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

Disassembly of section .text._ZN4llvm16BinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE:

0000000000000000 <_ZN4llvm16BinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	str	x23, [sp, #48]
  14:	mov	x22, x8
  18:	mov	x20, x0
  1c:	mov	w19, w1
  20:	mov	w21, w2
  24:	mov	x23, x3
  28:	ldr	x1, [x0]
  2c:	ldr	x1, [x1, #40]
  30:	blr	x1
  34:	cmp	w19, w0
  38:	b.hi	a8 <_ZN4llvm16BinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE+0xa8>  // b.pmore
  3c:	ldr	x0, [x20]
  40:	ldr	x1, [x0, #40]
  44:	mov	x0, x20
  48:	blr	x1
  4c:	add	w1, w19, w21
  50:	cmp	w0, w1
  54:	b.cs	c4 <_ZN4llvm16BinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE+0xc4>  // b.hs, b.nlast
  58:	mov	w0, #0x1                   	// #1
  5c:	str	w0, [sp, #72]
  60:	add	x8, sp, #0x40
  64:	add	x0, sp, #0x48
  68:	bl	0 <_ZN4llvm16BinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE>
  6c:	ldr	x0, [sp, #64]
  70:	ands	x1, x0, #0xfffffffffffffffe
  74:	cset	x0, ne  // ne = any
  78:	orr	x0, x0, x1
  7c:	str	x0, [sp, #64]
  80:	ands	x1, x0, #0xfffffffffffffffe
  84:	b.eq	c0 <_ZN4llvm16BinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE+0xc0>  // b.none
  88:	orr	x1, x1, #0x1
  8c:	str	x1, [x22]
  90:	mov	x0, x22
  94:	ldp	x19, x20, [sp, #16]
  98:	ldp	x21, x22, [sp, #32]
  9c:	ldr	x23, [sp, #48]
  a0:	ldp	x29, x30, [sp], #80
  a4:	ret
  a8:	mov	w0, #0x3                   	// #3
  ac:	str	w0, [sp, #76]
  b0:	add	x8, sp, #0x40
  b4:	add	x0, sp, #0x4c
  b8:	bl	0 <_ZN4llvm16BinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE>
  bc:	b	6c <_ZN4llvm16BinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE+0x6c>
  c0:	tbnz	w0, #0, f8 <_ZN4llvm16BinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE+0xf8>
  c4:	mov	w19, w19
  c8:	mov	w21, w21
  cc:	add	x1, x19, x21
  d0:	ldr	x0, [x20, #24]
  d4:	cmp	x1, x0
  d8:	b.hi	100 <_ZN4llvm16BinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE+0x100>  // b.pmore
  dc:	ldr	x0, [x20, #16]
  e0:	add	x19, x0, x19
  e4:	str	x19, [x23]
  e8:	str	x21, [x23, #8]
  ec:	mov	x0, #0x1                   	// #1
  f0:	str	x0, [x22]
  f4:	b	90 <_ZN4llvm16BinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE+0x90>
  f8:	add	x0, sp, #0x40
  fc:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 100:	adrp	x3, 0 <_ZN4llvm16BinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE>
 104:	add	x3, x3, #0x0
 108:	mov	w2, #0xbd                  	// #189
 10c:	adrp	x1, 0 <_ZN4llvm16BinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE>
 110:	add	x1, x1, #0x0
 114:	adrp	x0, 0 <_ZN4llvm16BinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE>
 118:	add	x0, x0, #0x0
 11c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm20FileBufferByteStream9readBytesEjjRNS_8ArrayRefIhEE:

0000000000000000 <_ZN4llvm20FileBufferByteStream9readBytesEjjRNS_8ArrayRefIhEE>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	mov	x22, x8
  18:	mov	x19, x0
  1c:	mov	w20, w1
  20:	mov	w21, w2
  24:	mov	x23, x3
  28:	add	x24, x0, #0x20
  2c:	ldr	x0, [x0, #32]
  30:	ldr	x1, [x0, #40]
  34:	mov	x0, x24
  38:	blr	x1
  3c:	cmp	w20, w0
  40:	b.hi	b0 <_ZN4llvm20FileBufferByteStream9readBytesEjjRNS_8ArrayRefIhEE+0xb0>  // b.pmore
  44:	ldr	x0, [x19, #32]
  48:	ldr	x1, [x0, #40]
  4c:	mov	x0, x24
  50:	blr	x1
  54:	add	w1, w20, w21
  58:	cmp	w0, w1
  5c:	b.cs	cc <_ZN4llvm20FileBufferByteStream9readBytesEjjRNS_8ArrayRefIhEE+0xcc>  // b.hs, b.nlast
  60:	mov	w0, #0x1                   	// #1
  64:	str	w0, [sp, #72]
  68:	add	x8, sp, #0x40
  6c:	add	x0, sp, #0x48
  70:	bl	0 <_ZN4llvm20FileBufferByteStream9readBytesEjjRNS_8ArrayRefIhEE>
  74:	ldr	x0, [sp, #64]
  78:	ands	x1, x0, #0xfffffffffffffffe
  7c:	cset	x0, ne  // ne = any
  80:	orr	x0, x0, x1
  84:	str	x0, [sp, #64]
  88:	ands	x1, x0, #0xfffffffffffffffe
  8c:	b.eq	c8 <_ZN4llvm20FileBufferByteStream9readBytesEjjRNS_8ArrayRefIhEE+0xc8>  // b.none
  90:	orr	x1, x1, #0x1
  94:	str	x1, [x22]
  98:	mov	x0, x22
  9c:	ldp	x19, x20, [sp, #16]
  a0:	ldp	x21, x22, [sp, #32]
  a4:	ldp	x23, x24, [sp, #48]
  a8:	ldp	x29, x30, [sp], #80
  ac:	ret
  b0:	mov	w0, #0x3                   	// #3
  b4:	str	w0, [sp, #76]
  b8:	add	x8, sp, #0x40
  bc:	add	x0, sp, #0x4c
  c0:	bl	0 <_ZN4llvm20FileBufferByteStream9readBytesEjjRNS_8ArrayRefIhEE>
  c4:	b	74 <_ZN4llvm20FileBufferByteStream9readBytesEjjRNS_8ArrayRefIhEE+0x74>
  c8:	tbnz	w0, #0, 100 <_ZN4llvm20FileBufferByteStream9readBytesEjjRNS_8ArrayRefIhEE+0x100>
  cc:	mov	w20, w20
  d0:	mov	w21, w21
  d4:	add	x1, x20, x21
  d8:	ldr	x0, [x19, #56]
  dc:	cmp	x1, x0
  e0:	b.hi	108 <_ZN4llvm20FileBufferByteStream9readBytesEjjRNS_8ArrayRefIhEE+0x108>  // b.pmore
  e4:	ldr	x0, [x19, #48]
  e8:	add	x20, x0, x20
  ec:	str	x20, [x23]
  f0:	str	x21, [x23, #8]
  f4:	mov	x0, #0x1                   	// #1
  f8:	str	x0, [x22]
  fc:	b	98 <_ZN4llvm20FileBufferByteStream9readBytesEjjRNS_8ArrayRefIhEE+0x98>
 100:	add	x0, sp, #0x40
 104:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 108:	adrp	x3, 0 <_ZN4llvm20FileBufferByteStream9readBytesEjjRNS_8ArrayRefIhEE>
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xbd                  	// #189
 114:	adrp	x1, 0 <_ZN4llvm20FileBufferByteStream9readBytesEjjRNS_8ArrayRefIhEE>
 118:	add	x1, x1, #0x0
 11c:	adrp	x0, 0 <_ZN4llvm20FileBufferByteStream9readBytesEjjRNS_8ArrayRefIhEE>
 120:	add	x0, x0, #0x0
 124:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23MutableBinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE:

0000000000000000 <_ZN4llvm23MutableBinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	mov	x22, x8
  18:	mov	x19, x0
  1c:	mov	w20, w1
  20:	mov	w21, w2
  24:	mov	x23, x3
  28:	add	x24, x0, #0x18
  2c:	ldr	x0, [x0, #24]
  30:	ldr	x1, [x0, #40]
  34:	mov	x0, x24
  38:	blr	x1
  3c:	cmp	w20, w0
  40:	b.hi	b0 <_ZN4llvm23MutableBinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE+0xb0>  // b.pmore
  44:	ldr	x0, [x19, #24]
  48:	ldr	x1, [x0, #40]
  4c:	mov	x0, x24
  50:	blr	x1
  54:	add	w1, w20, w21
  58:	cmp	w0, w1
  5c:	b.cs	cc <_ZN4llvm23MutableBinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE+0xcc>  // b.hs, b.nlast
  60:	mov	w0, #0x1                   	// #1
  64:	str	w0, [sp, #72]
  68:	add	x8, sp, #0x40
  6c:	add	x0, sp, #0x48
  70:	bl	0 <_ZN4llvm23MutableBinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE>
  74:	ldr	x0, [sp, #64]
  78:	ands	x1, x0, #0xfffffffffffffffe
  7c:	cset	x0, ne  // ne = any
  80:	orr	x0, x0, x1
  84:	str	x0, [sp, #64]
  88:	ands	x1, x0, #0xfffffffffffffffe
  8c:	b.eq	c8 <_ZN4llvm23MutableBinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE+0xc8>  // b.none
  90:	orr	x1, x1, #0x1
  94:	str	x1, [x22]
  98:	mov	x0, x22
  9c:	ldp	x19, x20, [sp, #16]
  a0:	ldp	x21, x22, [sp, #32]
  a4:	ldp	x23, x24, [sp, #48]
  a8:	ldp	x29, x30, [sp], #80
  ac:	ret
  b0:	mov	w0, #0x3                   	// #3
  b4:	str	w0, [sp, #76]
  b8:	add	x8, sp, #0x40
  bc:	add	x0, sp, #0x4c
  c0:	bl	0 <_ZN4llvm23MutableBinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE>
  c4:	b	74 <_ZN4llvm23MutableBinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE+0x74>
  c8:	tbnz	w0, #0, 100 <_ZN4llvm23MutableBinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE+0x100>
  cc:	mov	w20, w20
  d0:	mov	w21, w21
  d4:	add	x1, x20, x21
  d8:	ldr	x0, [x19, #48]
  dc:	cmp	x1, x0
  e0:	b.hi	108 <_ZN4llvm23MutableBinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE+0x108>  // b.pmore
  e4:	ldr	x0, [x19, #40]
  e8:	add	x20, x0, x20
  ec:	str	x20, [x23]
  f0:	str	x21, [x23, #8]
  f4:	mov	x0, #0x1                   	// #1
  f8:	str	x0, [x22]
  fc:	b	98 <_ZN4llvm23MutableBinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE+0x98>
 100:	add	x0, sp, #0x40
 104:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 108:	adrp	x3, 0 <_ZN4llvm23MutableBinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE>
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0xbd                  	// #189
 114:	adrp	x1, 0 <_ZN4llvm23MutableBinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE>
 118:	add	x1, x1, #0x0
 11c:	adrp	x0, 0 <_ZN4llvm23MutableBinaryByteStream9readBytesEjjRNS_8ArrayRefIhEE>
 120:	add	x0, x0, #0x0
 124:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm17BitmaskEnumDetailanINS_17BinaryStreamFlagsEvEET_S3_S3_:

0000000000000000 <_ZN4llvm17BitmaskEnumDetailanINS_17BinaryStreamFlagsEvEET_S3_S3_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cmp	w0, #0x3
   c:	b.hi	24 <_ZN4llvm17BitmaskEnumDetailanINS_17BinaryStreamFlagsEvEET_S3_S3_+0x24>  // b.pmore
  10:	cmp	w1, #0x3
  14:	b.hi	44 <_ZN4llvm17BitmaskEnumDetailanINS_17BinaryStreamFlagsEvEET_S3_S3_+0x44>  // b.pmore
  18:	and	w0, w0, w1
  1c:	ldp	x29, x30, [sp], #16
  20:	ret
  24:	adrp	x3, 0 <_ZN4llvm17BitmaskEnumDetailanINS_17BinaryStreamFlagsEvEET_S3_S3_>
  28:	add	x3, x3, #0x0
  2c:	mov	w2, #0x5d                  	// #93
  30:	adrp	x1, 0 <_ZN4llvm17BitmaskEnumDetailanINS_17BinaryStreamFlagsEvEET_S3_S3_>
  34:	add	x1, x1, #0x0
  38:	adrp	x0, 0 <_ZN4llvm17BitmaskEnumDetailanINS_17BinaryStreamFlagsEvEET_S3_S3_>
  3c:	add	x0, x0, #0x0
  40:	bl	0 <__assert_fail>
  44:	adrp	x3, 0 <_ZN4llvm17BitmaskEnumDetailanINS_17BinaryStreamFlagsEvEET_S3_S3_>
  48:	add	x3, x3, #0x0
  4c:	mov	w2, #0x5d                  	// #93
  50:	adrp	x1, 0 <_ZN4llvm17BitmaskEnumDetailanINS_17BinaryStreamFlagsEvEET_S3_S3_>
  54:	add	x1, x1, #0x0
  58:	adrp	x0, 0 <_ZN4llvm17BitmaskEnumDetailanINS_17BinaryStreamFlagsEvEET_S3_S3_>
  5c:	add	x0, x0, #0x0
  60:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE:

0000000000000000 <_ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x8
  10:	cbnz	x3, 2c <_ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE+0x2c>
  14:	mov	x0, #0x1                   	// #1
  18:	str	x0, [x8]
  1c:	mov	x0, x20
  20:	ldp	x19, x20, [sp, #16]
  24:	ldp	x29, x30, [sp], #96
  28:	ret
  2c:	stp	x21, x22, [sp, #32]
  30:	str	x23, [sp, #48]
  34:	mov	x19, x0
  38:	mov	w23, w1
  3c:	mov	x22, x2
  40:	mov	x21, x3
  44:	ldr	x0, [x0]
  48:	ldr	x1, [x0, #48]
  4c:	mov	x0, x19
  50:	blr	x1
  54:	mov	w1, #0x2                   	// #2
  58:	bl	0 <_ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE>
  5c:	cbz	w0, bc <_ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE+0xbc>
  60:	ldr	x0, [x19]
  64:	ldr	x1, [x0, #40]
  68:	mov	x0, x19
  6c:	blr	x1
  70:	cmp	w23, w0
  74:	b.ls	12c <_ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE+0x12c>  // b.plast
  78:	mov	w0, #0x3                   	// #3
  7c:	str	w0, [sp, #84]
  80:	add	x8, sp, #0x48
  84:	add	x0, sp, #0x54
  88:	bl	0 <_ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE>
  8c:	ldr	x0, [sp, #72]
  90:	ands	x1, x0, #0xfffffffffffffffe
  94:	cset	x0, ne  // ne = any
  98:	orr	x0, x0, x1
  9c:	str	x0, [sp, #72]
  a0:	ands	x1, x0, #0xfffffffffffffffe
  a4:	b.eq	148 <_ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE+0x148>  // b.none
  a8:	orr	x0, x1, #0x1
  ac:	str	x0, [x20]
  b0:	ldp	x21, x22, [sp, #32]
  b4:	ldr	x23, [sp, #48]
  b8:	b	1c <_ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE+0x1c>
  bc:	ldr	x0, [x19]
  c0:	ldr	x1, [x0, #40]
  c4:	mov	x0, x19
  c8:	blr	x1
  cc:	cmp	w23, w0
  d0:	b.hi	108 <_ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE+0x108>  // b.pmore
  d4:	ldr	x0, [x19]
  d8:	ldr	x1, [x0, #40]
  dc:	mov	x0, x19
  e0:	blr	x1
  e4:	add	w1, w23, w21
  e8:	cmp	w0, w1
  ec:	b.cs	120 <_ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE+0x120>  // b.hs, b.nlast
  f0:	mov	w0, #0x1                   	// #1
  f4:	str	w0, [sp, #88]
  f8:	add	x8, sp, #0x48
  fc:	add	x0, sp, #0x58
 100:	bl	0 <_ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE>
 104:	b	8c <_ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE+0x8c>
 108:	mov	w0, #0x3                   	// #3
 10c:	str	w0, [sp, #92]
 110:	add	x8, sp, #0x48
 114:	add	x0, sp, #0x5c
 118:	bl	0 <_ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE>
 11c:	b	8c <_ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE+0x8c>
 120:	mov	x0, #0x1                   	// #1
 124:	str	x0, [sp, #72]
 128:	b	134 <_ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE+0x134>
 12c:	mov	x0, #0x1                   	// #1
 130:	str	x0, [sp, #72]
 134:	ldr	x0, [sp, #72]
 138:	ands	x1, x0, #0xfffffffffffffffe
 13c:	cset	x0, ne  // ne = any
 140:	orr	x0, x0, x1
 144:	str	x0, [sp, #72]
 148:	tbnz	w0, #0, 174 <_ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE+0x174>
 14c:	ldr	x0, [x19, #8]
 150:	mov	x2, x21
 154:	mov	x1, x22
 158:	add	x0, x0, w23, uxtw
 15c:	bl	0 <memcpy>
 160:	mov	x0, #0x1                   	// #1
 164:	str	x0, [x20]
 168:	ldp	x21, x22, [sp, #32]
 16c:	ldr	x23, [sp, #48]
 170:	b	1c <_ZN4llvm23MutableBinaryByteStream10writeBytesEjNS_8ArrayRefIhEE+0x1c>
 174:	add	x0, sp, #0x48
 178:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

Disassembly of section .text._ZN4llvm20FileBufferByteStream10writeBytesEjNS_8ArrayRefIhEE:

0000000000000000 <_ZN4llvm20FileBufferByteStream10writeBytesEjNS_8ArrayRefIhEE>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x8
  10:	cbnz	x3, 2c <_ZN4llvm20FileBufferByteStream10writeBytesEjNS_8ArrayRefIhEE+0x2c>
  14:	mov	x0, #0x1                   	// #1
  18:	str	x0, [x8]
  1c:	mov	x0, x20
  20:	ldp	x19, x20, [sp, #16]
  24:	ldp	x29, x30, [sp], #96
  28:	ret
  2c:	stp	x21, x22, [sp, #32]
  30:	stp	x23, x24, [sp, #48]
  34:	mov	x19, x0
  38:	mov	w23, w1
  3c:	mov	x22, x2
  40:	mov	x21, x3
  44:	add	x24, x0, #0x8
  48:	ldr	x0, [x0, #8]
  4c:	ldr	x1, [x0, #48]
  50:	mov	x0, x24
  54:	blr	x1
  58:	mov	w1, #0x2                   	// #2
  5c:	bl	0 <_ZN4llvm20FileBufferByteStream10writeBytesEjNS_8ArrayRefIhEE>
  60:	cbz	w0, c0 <_ZN4llvm20FileBufferByteStream10writeBytesEjNS_8ArrayRefIhEE+0xc0>
  64:	ldr	x0, [x19, #8]
  68:	ldr	x1, [x0, #40]
  6c:	mov	x0, x24
  70:	blr	x1
  74:	cmp	w23, w0
  78:	b.ls	130 <_ZN4llvm20FileBufferByteStream10writeBytesEjNS_8ArrayRefIhEE+0x130>  // b.plast
  7c:	mov	w0, #0x3                   	// #3
  80:	str	w0, [sp, #84]
  84:	add	x8, sp, #0x48
  88:	add	x0, sp, #0x54
  8c:	bl	0 <_ZN4llvm20FileBufferByteStream10writeBytesEjNS_8ArrayRefIhEE>
  90:	ldr	x0, [sp, #72]
  94:	ands	x1, x0, #0xfffffffffffffffe
  98:	cset	x0, ne  // ne = any
  9c:	orr	x0, x0, x1
  a0:	str	x0, [sp, #72]
  a4:	ands	x1, x0, #0xfffffffffffffffe
  a8:	b.eq	14c <_ZN4llvm20FileBufferByteStream10writeBytesEjNS_8ArrayRefIhEE+0x14c>  // b.none
  ac:	orr	x0, x1, #0x1
  b0:	str	x0, [x20]
  b4:	ldp	x21, x22, [sp, #32]
  b8:	ldp	x23, x24, [sp, #48]
  bc:	b	1c <_ZN4llvm20FileBufferByteStream10writeBytesEjNS_8ArrayRefIhEE+0x1c>
  c0:	ldr	x0, [x19, #8]
  c4:	ldr	x1, [x0, #40]
  c8:	mov	x0, x24
  cc:	blr	x1
  d0:	cmp	w23, w0
  d4:	b.hi	10c <_ZN4llvm20FileBufferByteStream10writeBytesEjNS_8ArrayRefIhEE+0x10c>  // b.pmore
  d8:	ldr	x0, [x19, #8]
  dc:	ldr	x1, [x0, #40]
  e0:	mov	x0, x24
  e4:	blr	x1
  e8:	add	w1, w23, w21
  ec:	cmp	w0, w1
  f0:	b.cs	124 <_ZN4llvm20FileBufferByteStream10writeBytesEjNS_8ArrayRefIhEE+0x124>  // b.hs, b.nlast
  f4:	mov	w0, #0x1                   	// #1
  f8:	str	w0, [sp, #88]
  fc:	add	x8, sp, #0x48
 100:	add	x0, sp, #0x58
 104:	bl	0 <_ZN4llvm20FileBufferByteStream10writeBytesEjNS_8ArrayRefIhEE>
 108:	b	90 <_ZN4llvm20FileBufferByteStream10writeBytesEjNS_8ArrayRefIhEE+0x90>
 10c:	mov	w0, #0x3                   	// #3
 110:	str	w0, [sp, #92]
 114:	add	x8, sp, #0x48
 118:	add	x0, sp, #0x5c
 11c:	bl	0 <_ZN4llvm20FileBufferByteStream10writeBytesEjNS_8ArrayRefIhEE>
 120:	b	90 <_ZN4llvm20FileBufferByteStream10writeBytesEjNS_8ArrayRefIhEE+0x90>
 124:	mov	x0, #0x1                   	// #1
 128:	str	x0, [sp, #72]
 12c:	b	138 <_ZN4llvm20FileBufferByteStream10writeBytesEjNS_8ArrayRefIhEE+0x138>
 130:	mov	x0, #0x1                   	// #1
 134:	str	x0, [sp, #72]
 138:	ldr	x0, [sp, #72]
 13c:	ands	x1, x0, #0xfffffffffffffffe
 140:	cset	x0, ne  // ne = any
 144:	orr	x0, x0, x1
 148:	str	x0, [sp, #72]
 14c:	tbnz	w0, #0, 178 <_ZN4llvm20FileBufferByteStream10writeBytesEjNS_8ArrayRefIhEE+0x178>
 150:	ldr	x0, [x19, #16]
 154:	mov	x2, x21
 158:	mov	x1, x22
 15c:	add	x0, x0, w23, uxtw
 160:	bl	0 <memcpy>
 164:	mov	x0, #0x1                   	// #1
 168:	str	x0, [x20]
 16c:	ldp	x21, x22, [sp, #32]
 170:	ldp	x23, x24, [sp, #48]
 174:	b	1c <_ZN4llvm20FileBufferByteStream10writeBytesEjNS_8ArrayRefIhEE+0x1c>
 178:	add	x0, sp, #0x48
 17c:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

Disassembly of section .text._ZN4llvm10make_errorINS_3msf8MSFErrorEJNS1_14msf_error_codeERA40_KcEEENS_5ErrorEDpOT0_:

0000000000000000 <_ZN4llvm10make_errorINS_3msf8MSFErrorEJNS1_14msf_error_codeERA40_KcEEENS_5ErrorEDpOT0_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x20, x8
  14:	mov	x19, x1
  18:	ldr	w22, [x0]
  1c:	bl	0 <_ZN4llvm3msf14MSFErrCategoryEv>
  20:	mov	x21, x0
  24:	str	xzr, [sp, #56]
  28:	str	xzr, [sp, #64]
  2c:	mov	w0, #0x1                   	// #1
  30:	strb	w0, [sp, #72]
  34:	strb	w0, [sp, #73]
  38:	ldrb	w0, [x19]
  3c:	cbz	w0, 4c <_ZN4llvm10make_errorINS_3msf8MSFErrorEJNS1_14msf_error_codeERA40_KcEEENS_5ErrorEDpOT0_+0x4c>
  40:	str	x19, [sp, #56]
  44:	mov	w0, #0x3                   	// #3
  48:	strb	w0, [sp, #72]
  4c:	mov	x0, #0x40                  	// #64
  50:	bl	0 <_Znwm>
  54:	mov	x19, x0
  58:	add	x3, sp, #0x38
  5c:	mov	w1, w22
  60:	mov	x2, x21
  64:	bl	0 <_ZN4llvm11StringErrorC2ESt10error_codeRKNS_5TwineE>
  68:	adrp	x0, 0 <_ZN4llvm10make_errorINS_3msf8MSFErrorEJNS1_14msf_error_codeERA40_KcEEENS_5ErrorEDpOT0_>
  6c:	ldr	x0, [x0]
  70:	add	x0, x0, #0x10
  74:	str	x0, [x19]
  78:	orr	x19, x19, #0x1
  7c:	str	x19, [x20]
  80:	mov	x0, x20
  84:	ldp	x19, x20, [sp, #16]
  88:	ldp	x21, x22, [sp, #32]
  8c:	ldp	x29, x30, [sp], #80
  90:	ret

Disassembly of section .text._ZN4llvm10make_errorINS_3msf8MSFErrorEJNS1_14msf_error_codeERA33_KcEEENS_5ErrorEDpOT0_:

0000000000000000 <_ZN4llvm10make_errorINS_3msf8MSFErrorEJNS1_14msf_error_codeERA33_KcEEENS_5ErrorEDpOT0_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x20, x8
  14:	mov	x19, x1
  18:	ldr	w22, [x0]
  1c:	bl	0 <_ZN4llvm3msf14MSFErrCategoryEv>
  20:	mov	x21, x0
  24:	str	xzr, [sp, #56]
  28:	str	xzr, [sp, #64]
  2c:	mov	w0, #0x1                   	// #1
  30:	strb	w0, [sp, #72]
  34:	strb	w0, [sp, #73]
  38:	ldrb	w0, [x19]
  3c:	cbz	w0, 4c <_ZN4llvm10make_errorINS_3msf8MSFErrorEJNS1_14msf_error_codeERA33_KcEEENS_5ErrorEDpOT0_+0x4c>
  40:	str	x19, [sp, #56]
  44:	mov	w0, #0x3                   	// #3
  48:	strb	w0, [sp, #72]
  4c:	mov	x0, #0x40                  	// #64
  50:	bl	0 <_Znwm>
  54:	mov	x19, x0
  58:	add	x3, sp, #0x38
  5c:	mov	w1, w22
  60:	mov	x2, x21
  64:	bl	0 <_ZN4llvm11StringErrorC2ESt10error_codeRKNS_5TwineE>
  68:	adrp	x0, 0 <_ZN4llvm10make_errorINS_3msf8MSFErrorEJNS1_14msf_error_codeERA33_KcEEENS_5ErrorEDpOT0_>
  6c:	ldr	x0, [x0]
  70:	add	x0, x0, #0x10
  74:	str	x0, [x19]
  78:	orr	x19, x19, #0x1
  7c:	str	x19, [x20]
  80:	mov	x0, x20
  84:	ldp	x19, x20, [sp, #16]
  88:	ldp	x21, x22, [sp, #32]
  8c:	ldp	x29, x30, [sp], #80
  90:	ret

Disassembly of section .text._ZN4llvm10make_errorINS_3msf8MSFErrorEJNS1_14msf_error_codeERA46_KcEEENS_5ErrorEDpOT0_:

0000000000000000 <_ZN4llvm10make_errorINS_3msf8MSFErrorEJNS1_14msf_error_codeERA46_KcEEENS_5ErrorEDpOT0_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x20, x8
  14:	mov	x19, x1
  18:	ldr	w22, [x0]
  1c:	bl	0 <_ZN4llvm3msf14MSFErrCategoryEv>
  20:	mov	x21, x0
  24:	str	xzr, [sp, #56]
  28:	str	xzr, [sp, #64]
  2c:	mov	w0, #0x1                   	// #1
  30:	strb	w0, [sp, #72]
  34:	strb	w0, [sp, #73]
  38:	ldrb	w0, [x19]
  3c:	cbz	w0, 4c <_ZN4llvm10make_errorINS_3msf8MSFErrorEJNS1_14msf_error_codeERA46_KcEEENS_5ErrorEDpOT0_+0x4c>
  40:	str	x19, [sp, #56]
  44:	mov	w0, #0x3                   	// #3
  48:	strb	w0, [sp, #72]
  4c:	mov	x0, #0x40                  	// #64
  50:	bl	0 <_Znwm>
  54:	mov	x19, x0
  58:	add	x3, sp, #0x38
  5c:	mov	w1, w22
  60:	mov	x2, x21
  64:	bl	0 <_ZN4llvm11StringErrorC2ESt10error_codeRKNS_5TwineE>
  68:	adrp	x0, 0 <_ZN4llvm10make_errorINS_3msf8MSFErrorEJNS1_14msf_error_codeERA46_KcEEENS_5ErrorEDpOT0_>
  6c:	ldr	x0, [x0]
  70:	add	x0, x0, #0x10
  74:	str	x0, [x19]
  78:	orr	x19, x19, #0x1
  7c:	str	x19, [x20]
  80:	mov	x0, x20
  84:	ldp	x19, x20, [sp, #16]
  88:	ldp	x21, x22, [sp, #32]
  8c:	ldp	x29, x30, [sp], #80
  90:	ret

Disassembly of section .text._ZN4llvm10make_errorINS_3msf8MSFErrorEJNS1_14msf_error_codeERA36_KcEEENS_5ErrorEDpOT0_:

0000000000000000 <_ZN4llvm10make_errorINS_3msf8MSFErrorEJNS1_14msf_error_codeERA36_KcEEENS_5ErrorEDpOT0_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x20, x8
  14:	mov	x19, x1
  18:	ldr	w22, [x0]
  1c:	bl	0 <_ZN4llvm3msf14MSFErrCategoryEv>
  20:	mov	x21, x0
  24:	str	xzr, [sp, #56]
  28:	str	xzr, [sp, #64]
  2c:	mov	w0, #0x1                   	// #1
  30:	strb	w0, [sp, #72]
  34:	strb	w0, [sp, #73]
  38:	ldrb	w0, [x19]
  3c:	cbz	w0, 4c <_ZN4llvm10make_errorINS_3msf8MSFErrorEJNS1_14msf_error_codeERA36_KcEEENS_5ErrorEDpOT0_+0x4c>
  40:	str	x19, [sp, #56]
  44:	mov	w0, #0x3                   	// #3
  48:	strb	w0, [sp, #72]
  4c:	mov	x0, #0x40                  	// #64
  50:	bl	0 <_Znwm>
  54:	mov	x19, x0
  58:	add	x3, sp, #0x38
  5c:	mov	w1, w22
  60:	mov	x2, x21
  64:	bl	0 <_ZN4llvm11StringErrorC2ESt10error_codeRKNS_5TwineE>
  68:	adrp	x0, 0 <_ZN4llvm10make_errorINS_3msf8MSFErrorEJNS1_14msf_error_codeERA36_KcEEENS_5ErrorEDpOT0_>
  6c:	ldr	x0, [x0]
  70:	add	x0, x0, #0x10
  74:	str	x0, [x19]
  78:	orr	x19, x19, #0x1
  7c:	str	x19, [x20]
  80:	mov	x0, x20
  84:	ldp	x19, x20, [sp, #16]
  88:	ldp	x21, x22, [sp, #32]
  8c:	ldp	x29, x30, [sp], #80
  90:	ret

Disassembly of section .text._ZN4llvm10make_errorINS_3msf8MSFErrorEJNS1_14msf_error_codeERA37_KcEEENS_5ErrorEDpOT0_:

0000000000000000 <_ZN4llvm10make_errorINS_3msf8MSFErrorEJNS1_14msf_error_codeERA37_KcEEENS_5ErrorEDpOT0_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x20, x8
  14:	mov	x19, x1
  18:	ldr	w22, [x0]
  1c:	bl	0 <_ZN4llvm3msf14MSFErrCategoryEv>
  20:	mov	x21, x0
  24:	str	xzr, [sp, #56]
  28:	str	xzr, [sp, #64]
  2c:	mov	w0, #0x1                   	// #1
  30:	strb	w0, [sp, #72]
  34:	strb	w0, [sp, #73]
  38:	ldrb	w0, [x19]
  3c:	cbz	w0, 4c <_ZN4llvm10make_errorINS_3msf8MSFErrorEJNS1_14msf_error_codeERA37_KcEEENS_5ErrorEDpOT0_+0x4c>
  40:	str	x19, [sp, #56]
  44:	mov	w0, #0x3                   	// #3
  48:	strb	w0, [sp, #72]
  4c:	mov	x0, #0x40                  	// #64
  50:	bl	0 <_Znwm>
  54:	mov	x19, x0
  58:	add	x3, sp, #0x38
  5c:	mov	w1, w22
  60:	mov	x2, x21
  64:	bl	0 <_ZN4llvm11StringErrorC2ESt10error_codeRKNS_5TwineE>
  68:	adrp	x0, 0 <_ZN4llvm10make_errorINS_3msf8MSFErrorEJNS1_14msf_error_codeERA37_KcEEENS_5ErrorEDpOT0_>
  6c:	ldr	x0, [x0]
  70:	add	x0, x0, #0x10
  74:	str	x0, [x19]
  78:	orr	x19, x19, #0x1
  7c:	str	x19, [x20]
  80:	mov	x0, x20
  84:	ldp	x19, x20, [sp, #16]
  88:	ldp	x21, x22, [sp, #32]
  8c:	ldp	x29, x30, [sp], #80
  90:	ret

Disassembly of section .text._ZN4llvm10make_errorINS_3msf8MSFErrorEJNS1_14msf_error_codeERA53_KcEEENS_5ErrorEDpOT0_:

0000000000000000 <_ZN4llvm10make_errorINS_3msf8MSFErrorEJNS1_14msf_error_codeERA53_KcEEENS_5ErrorEDpOT0_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x20, x8
  14:	mov	x19, x1
  18:	ldr	w22, [x0]
  1c:	bl	0 <_ZN4llvm3msf14MSFErrCategoryEv>
  20:	mov	x21, x0
  24:	str	xzr, [sp, #56]
  28:	str	xzr, [sp, #64]
  2c:	mov	w0, #0x1                   	// #1
  30:	strb	w0, [sp, #72]
  34:	strb	w0, [sp, #73]
  38:	ldrb	w0, [x19]
  3c:	cbz	w0, 4c <_ZN4llvm10make_errorINS_3msf8MSFErrorEJNS1_14msf_error_codeERA53_KcEEENS_5ErrorEDpOT0_+0x4c>
  40:	str	x19, [sp, #56]
  44:	mov	w0, #0x3                   	// #3
  48:	strb	w0, [sp, #72]
  4c:	mov	x0, #0x40                  	// #64
  50:	bl	0 <_Znwm>
  54:	mov	x19, x0
  58:	add	x3, sp, #0x38
  5c:	mov	w1, w22
  60:	mov	x2, x21
  64:	bl	0 <_ZN4llvm11StringErrorC2ESt10error_codeRKNS_5TwineE>
  68:	adrp	x0, 0 <_ZN4llvm10make_errorINS_3msf8MSFErrorEJNS1_14msf_error_codeERA53_KcEEENS_5ErrorEDpOT0_>
  6c:	ldr	x0, [x0]
  70:	add	x0, x0, #0x10
  74:	str	x0, [x19]
  78:	orr	x19, x19, #0x1
  7c:	str	x19, [x20]
  80:	mov	x0, x20
  84:	ldp	x19, x20, [sp, #16]
  88:	ldp	x21, x22, [sp, #32]
  8c:	ldp	x29, x30, [sp], #80
  90:	ret

Disassembly of section .text._ZN4llvm10make_errorINS_3msf8MSFErrorEJNS1_14msf_error_codeERA45_KcEEENS_5ErrorEDpOT0_:

0000000000000000 <_ZN4llvm10make_errorINS_3msf8MSFErrorEJNS1_14msf_error_codeERA45_KcEEENS_5ErrorEDpOT0_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x20, x8
  14:	mov	x19, x1
  18:	ldr	w22, [x0]
  1c:	bl	0 <_ZN4llvm3msf14MSFErrCategoryEv>
  20:	mov	x21, x0
  24:	str	xzr, [sp, #56]
  28:	str	xzr, [sp, #64]
  2c:	mov	w0, #0x1                   	// #1
  30:	strb	w0, [sp, #72]
  34:	strb	w0, [sp, #73]
  38:	ldrb	w0, [x19]
  3c:	cbz	w0, 4c <_ZN4llvm10make_errorINS_3msf8MSFErrorEJNS1_14msf_error_codeERA45_KcEEENS_5ErrorEDpOT0_+0x4c>
  40:	str	x19, [sp, #56]
  44:	mov	w0, #0x3                   	// #3
  48:	strb	w0, [sp, #72]
  4c:	mov	x0, #0x40                  	// #64
  50:	bl	0 <_Znwm>
  54:	mov	x19, x0
  58:	add	x3, sp, #0x38
  5c:	mov	w1, w22
  60:	mov	x2, x21
  64:	bl	0 <_ZN4llvm11StringErrorC2ESt10error_codeRKNS_5TwineE>
  68:	adrp	x0, 0 <_ZN4llvm10make_errorINS_3msf8MSFErrorEJNS1_14msf_error_codeERA45_KcEEENS_5ErrorEDpOT0_>
  6c:	ldr	x0, [x0]
  70:	add	x0, x0, #0x10
  74:	str	x0, [x19]
  78:	orr	x19, x19, #0x1
  7c:	str	x19, [x20]
  80:	mov	x0, x20
  84:	ldp	x19, x20, [sp, #16]
  88:	ldp	x21, x22, [sp, #32]
  8c:	ldp	x29, x30, [sp], #80
  90:	ret

Disassembly of section .text._ZNSt6vectorIjSaIjEE17_M_default_appendEm:

0000000000000000 <_ZNSt6vectorIjSaIjEE17_M_default_appendEm>:
   0:	cbz	x1, 11c <_ZNSt6vectorIjSaIjEE17_M_default_appendEm+0x11c>
   4:	stp	x29, x30, [sp, #-64]!
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	stp	x21, x22, [sp, #32]
  14:	mov	x21, x0
  18:	mov	x19, x1
  1c:	ldr	x0, [x0, #8]
  20:	ldr	x1, [x21]
  24:	sub	x20, x0, x1
  28:	asr	x22, x20, #2
  2c:	mov	x1, #0x1fffffffffffffff    	// #2305843009213693951
  30:	sub	x2, x1, x22
  34:	ldr	x1, [x21, #16]
  38:	sub	x1, x1, x0
  3c:	cmp	x19, x1, asr #2
  40:	b.hi	70 <_ZNSt6vectorIjSaIjEE17_M_default_appendEm+0x70>  // b.pmore
  44:	mov	x2, #0x0                   	// #0
  48:	str	wzr, [x0, x2, lsl #2]
  4c:	add	x2, x2, #0x1
  50:	cmp	x19, x2
  54:	b.ne	48 <_ZNSt6vectorIjSaIjEE17_M_default_appendEm+0x48>  // b.any
  58:	add	x2, x0, x2, lsl #2
  5c:	str	x2, [x21, #8]
  60:	ldp	x19, x20, [sp, #16]
  64:	ldp	x21, x22, [sp, #32]
  68:	ldp	x29, x30, [sp], #64
  6c:	ret
  70:	stp	x23, x24, [sp, #48]
  74:	cmp	x2, x19
  78:	b.cc	dc <_ZNSt6vectorIjSaIjEE17_M_default_appendEm+0xdc>  // b.lo, b.ul, b.last
  7c:	cmp	x22, x19
  80:	csel	x0, x22, x19, cs  // cs = hs, nlast
  84:	mov	x24, #0x1fffffffffffffff    	// #2305843009213693951
  88:	adds	x0, x0, x22
  8c:	b.cs	98 <_ZNSt6vectorIjSaIjEE17_M_default_appendEm+0x98>  // b.hs, b.nlast
  90:	cmp	x0, x24
  94:	csel	x24, x0, x24, ls  // ls = plast
  98:	lsl	x24, x24, #2
  9c:	mov	x0, x24
  a0:	bl	0 <_Znwm>
  a4:	mov	x23, x0
  a8:	add	x1, x0, x20
  ac:	mov	x20, #0x0                   	// #0
  b0:	str	wzr, [x1, x20, lsl #2]
  b4:	add	x20, x20, #0x1
  b8:	cmp	x19, x20
  bc:	b.ne	b0 <_ZNSt6vectorIjSaIjEE17_M_default_appendEm+0xb0>  // b.any
  c0:	ldr	x19, [x21]
  c4:	ldr	x2, [x21, #8]
  c8:	sub	x2, x2, x19
  cc:	cmp	x2, #0x0
  d0:	b.gt	e8 <_ZNSt6vectorIjSaIjEE17_M_default_appendEm+0xe8>
  d4:	cbz	x19, fc <_ZNSt6vectorIjSaIjEE17_M_default_appendEm+0xfc>
  d8:	b	f4 <_ZNSt6vectorIjSaIjEE17_M_default_appendEm+0xf4>
  dc:	adrp	x0, 0 <_ZNSt6vectorIjSaIjEE17_M_default_appendEm>
  e0:	add	x0, x0, #0x0
  e4:	bl	0 <_ZSt20__throw_length_errorPKc>
  e8:	mov	x1, x19
  ec:	mov	x0, x23
  f0:	bl	0 <memmove>
  f4:	mov	x0, x19
  f8:	bl	0 <_ZdlPv>
  fc:	str	x23, [x21]
 100:	add	x20, x22, x20
 104:	add	x20, x23, x20, lsl #2
 108:	str	x20, [x21, #8]
 10c:	add	x23, x23, x24
 110:	str	x23, [x21, #16]
 114:	ldp	x23, x24, [sp, #48]
 118:	b	60 <_ZNSt6vectorIjSaIjEE17_M_default_appendEm+0x60>
 11c:	ret

Disassembly of section .text._ZNSt6vectorIN4llvm8ArrayRefINS0_7support6detail31packed_endian_specific_integralIjLNS2_10endiannessE1ELm1ELm1EEEEESaIS7_EE17_M_default_appendEm:

0000000000000000 <_ZNSt6vectorIN4llvm8ArrayRefINS0_7support6detail31packed_endian_specific_integralIjLNS2_10endiannessE1ELm1ELm1EEEEESaIS7_EE17_M_default_appendEm>:
   0:	cbz	x1, 128 <_ZNSt6vectorIN4llvm8ArrayRefINS0_7support6detail31packed_endian_specific_integralIjLNS2_10endiannessE1ELm1ELm1EEEEESaIS7_EE17_M_default_appendEm+0x128>
   4:	stp	x29, x30, [sp, #-64]!
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	stp	x21, x22, [sp, #32]
  14:	mov	x21, x0
  18:	mov	x20, x1
  1c:	ldr	x0, [x0, #8]
  20:	ldr	x2, [x21]
  24:	sub	x19, x0, x2
  28:	asr	x22, x19, #4
  2c:	mov	x1, #0x7ffffffffffffff     	// #576460752303423487
  30:	sub	x2, x1, x22
  34:	ldr	x1, [x21, #16]
  38:	sub	x1, x1, x0
  3c:	cmp	x20, x1, asr #4
  40:	b.hi	78 <_ZNSt6vectorIN4llvm8ArrayRefINS0_7support6detail31packed_endian_specific_integralIjLNS2_10endiannessE1ELm1ELm1EEEEESaIS7_EE17_M_default_appendEm+0x78>  // b.pmore
  44:	mov	x2, x0
  48:	mov	x3, x20
  4c:	str	xzr, [x2]
  50:	str	xzr, [x2, #8]
  54:	add	x2, x2, #0x10
  58:	subs	x3, x3, #0x1
  5c:	b.ne	4c <_ZNSt6vectorIN4llvm8ArrayRefINS0_7support6detail31packed_endian_specific_integralIjLNS2_10endiannessE1ELm1ELm1EEEEESaIS7_EE17_M_default_appendEm+0x4c>  // b.any
  60:	add	x20, x0, x20, lsl #4
  64:	str	x20, [x21, #8]
  68:	ldp	x19, x20, [sp, #16]
  6c:	ldp	x21, x22, [sp, #32]
  70:	ldp	x29, x30, [sp], #64
  74:	ret
  78:	stp	x23, x24, [sp, #48]
  7c:	cmp	x2, x20
  80:	b.cc	11c <_ZNSt6vectorIN4llvm8ArrayRefINS0_7support6detail31packed_endian_specific_integralIjLNS2_10endiannessE1ELm1ELm1EEEEESaIS7_EE17_M_default_appendEm+0x11c>  // b.lo, b.ul, b.last
  84:	cmp	x22, x20
  88:	csel	x0, x22, x20, cs  // cs = hs, nlast
  8c:	mov	x24, #0x7ffffffffffffff     	// #576460752303423487
  90:	adds	x0, x0, x22
  94:	b.cs	a0 <_ZNSt6vectorIN4llvm8ArrayRefINS0_7support6detail31packed_endian_specific_integralIjLNS2_10endiannessE1ELm1ELm1EEEEESaIS7_EE17_M_default_appendEm+0xa0>  // b.hs, b.nlast
  98:	cmp	x0, x24
  9c:	csel	x24, x0, x24, ls  // ls = plast
  a0:	lsl	x24, x24, #4
  a4:	mov	x0, x24
  a8:	bl	0 <_Znwm>
  ac:	mov	x23, x0
  b0:	add	x2, x0, x19
  b4:	mov	x1, x20
  b8:	str	xzr, [x2]
  bc:	str	xzr, [x2, #8]
  c0:	add	x2, x2, #0x10
  c4:	subs	x1, x1, #0x1
  c8:	b.ne	b8 <_ZNSt6vectorIN4llvm8ArrayRefINS0_7support6detail31packed_endian_specific_integralIjLNS2_10endiannessE1ELm1ELm1EEEEESaIS7_EE17_M_default_appendEm+0xb8>  // b.any
  cc:	ldr	x1, [x21]
  d0:	ldr	x0, [x21, #8]
  d4:	cmp	x1, x0
  d8:	b.eq	f0 <_ZNSt6vectorIN4llvm8ArrayRefINS0_7support6detail31packed_endian_specific_integralIjLNS2_10endiannessE1ELm1ELm1EEEEESaIS7_EE17_M_default_appendEm+0xf0>  // b.none
  dc:	mov	x2, x23
  e0:	ldp	x4, x5, [x1], #16
  e4:	stp	x4, x5, [x2], #16
  e8:	cmp	x0, x1
  ec:	b.ne	e0 <_ZNSt6vectorIN4llvm8ArrayRefINS0_7support6detail31packed_endian_specific_integralIjLNS2_10endiannessE1ELm1ELm1EEEEESaIS7_EE17_M_default_appendEm+0xe0>  // b.any
  f0:	ldr	x0, [x21]
  f4:	cbz	x0, fc <_ZNSt6vectorIN4llvm8ArrayRefINS0_7support6detail31packed_endian_specific_integralIjLNS2_10endiannessE1ELm1ELm1EEEEESaIS7_EE17_M_default_appendEm+0xfc>
  f8:	bl	0 <_ZdlPv>
  fc:	str	x23, [x21]
 100:	add	x20, x22, x20
 104:	add	x20, x23, x20, lsl #4
 108:	str	x20, [x21, #8]
 10c:	add	x23, x23, x24
 110:	str	x23, [x21, #16]
 114:	ldp	x23, x24, [sp, #48]
 118:	b	68 <_ZNSt6vectorIN4llvm8ArrayRefINS0_7support6detail31packed_endian_specific_integralIjLNS2_10endiannessE1ELm1ELm1EEEEESaIS7_EE17_M_default_appendEm+0x68>
 11c:	adrp	x0, 0 <_ZNSt6vectorIN4llvm8ArrayRefINS0_7support6detail31packed_endian_specific_integralIjLNS2_10endiannessE1ELm1ELm1EEEEESaIS7_EE17_M_default_appendEm>
 120:	add	x0, x0, #0x0
 124:	bl	0 <_ZSt20__throw_length_errorPKc>
 128:	ret

Disassembly of section .text._ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	stp	x25, x26, [sp, #64]
  18:	str	x27, [sp, #80]
  1c:	mov	x22, x0
  20:	mov	x26, x2
  24:	ldr	x19, [x0, #8]
  28:	ldr	x23, [x0]
  2c:	sub	x0, x19, x23
  30:	mov	x2, #0x3ffffffffffffff     	// #288230376151711743
  34:	cmp	x2, x0, asr #5
  38:	b.eq	180 <_ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x180>  // b.none
  3c:	mov	x20, x1
  40:	mov	x25, x1
  44:	asr	x1, x0, #5
  48:	cmp	x1, #0x0
  4c:	csinc	x0, x1, xzr, ne  // ne = any
  50:	adds	x0, x0, x1
  54:	b.cs	194 <_ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x194>  // b.hs, b.nlast
  58:	mov	x24, #0x3ffffffffffffff     	// #288230376151711743
  5c:	cmp	x0, x24
  60:	csel	x24, x0, x24, ls  // ls = plast
  64:	sub	x27, x20, x23
  68:	mov	x21, #0x0                   	// #0
  6c:	cbz	x0, 7c <_ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x7c>
  70:	lsl	x0, x24, #5
  74:	bl	0 <_Znwm>
  78:	mov	x21, x0
  7c:	add	x2, x21, x27
  80:	mov	x0, x26
  84:	ldr	w1, [x0], #8
  88:	str	w1, [x21, x27]
  8c:	add	x1, x2, #0x8
  90:	ldr	x3, [x26, #8]
  94:	str	x3, [x2, #8]
  98:	ldr	x2, [x0, #8]
  9c:	str	x2, [x1, #8]
  a0:	ldr	x2, [x0, #16]
  a4:	str	x2, [x1, #16]
  a8:	str	xzr, [x0, #16]
  ac:	str	xzr, [x0, #8]
  b0:	str	xzr, [x26, #8]
  b4:	cmp	x20, x23
  b8:	b.eq	18c <_ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x18c>  // b.none
  bc:	mov	x3, x21
  c0:	mov	x2, x23
  c4:	ldr	w0, [x2]
  c8:	str	w0, [x3]
  cc:	ldr	x0, [x2, #8]
  d0:	str	x0, [x3, #8]
  d4:	ldr	x0, [x2, #16]
  d8:	str	x0, [x3, #16]
  dc:	ldr	x0, [x2, #24]
  e0:	str	x0, [x3, #24]
  e4:	add	x2, x2, #0x20
  e8:	add	x3, x3, #0x20
  ec:	cmp	x25, x2
  f0:	b.ne	c4 <_ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xc4>  // b.any
  f4:	sub	x25, x20, x23
  f8:	add	x25, x21, x25
  fc:	add	x25, x25, #0x20
 100:	cmp	x20, x19
 104:	b.eq	148 <_ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x148>  // b.none
 108:	mov	x2, x20
 10c:	mov	x3, x25
 110:	ldr	w0, [x2]
 114:	str	w0, [x3]
 118:	ldr	x0, [x2, #8]
 11c:	str	x0, [x3, #8]
 120:	ldr	x0, [x2, #16]
 124:	str	x0, [x3, #16]
 128:	ldr	x0, [x2, #24]
 12c:	str	x0, [x3, #24]
 130:	add	x2, x2, #0x20
 134:	add	x3, x3, #0x20
 138:	cmp	x2, x19
 13c:	b.ne	110 <_ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x110>  // b.any
 140:	sub	x19, x19, x20
 144:	add	x25, x25, x19
 148:	cbz	x23, 154 <_ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x154>
 14c:	mov	x0, x23
 150:	bl	0 <_ZdlPv>
 154:	str	x21, [x22]
 158:	str	x25, [x22, #8]
 15c:	add	x21, x21, x24, lsl #5
 160:	str	x21, [x22, #16]
 164:	ldp	x19, x20, [sp, #16]
 168:	ldp	x21, x22, [sp, #32]
 16c:	ldp	x23, x24, [sp, #48]
 170:	ldp	x25, x26, [sp, #64]
 174:	ldr	x27, [sp, #80]
 178:	ldp	x29, x30, [sp], #96
 17c:	ret
 180:	adrp	x0, 0 <_ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
 184:	add	x0, x0, #0x0
 188:	bl	0 <_ZSt20__throw_length_errorPKc>
 18c:	mov	x25, x21
 190:	b	fc <_ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xfc>
 194:	sub	x27, x20, x23
 198:	mov	x24, #0x3ffffffffffffff     	// #288230376151711743
 19c:	b	70 <_ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x70>

Disassembly of section .text._ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE12emplace_backIJS3_EEEvDpOT_:

0000000000000000 <_ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE12emplace_backIJS3_EEEvDpOT_>:
   0:	mov	x2, x1
   4:	ldr	x1, [x0, #8]
   8:	ldr	x3, [x0, #16]
   c:	cmp	x1, x3
  10:	b.eq	58 <_ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE12emplace_backIJS3_EEEvDpOT_+0x58>  // b.none
  14:	mov	x3, x2
  18:	ldr	w5, [x3], #8
  1c:	mov	x4, x1
  20:	str	w5, [x4], #8
  24:	ldr	x5, [x2, #8]
  28:	str	x5, [x1, #8]
  2c:	ldr	x1, [x3, #8]
  30:	str	x1, [x4, #8]
  34:	ldr	x1, [x3, #16]
  38:	str	x1, [x4, #16]
  3c:	str	xzr, [x3, #16]
  40:	str	xzr, [x3, #8]
  44:	str	xzr, [x2, #8]
  48:	ldr	x1, [x0, #8]
  4c:	add	x1, x1, #0x20
  50:	str	x1, [x0, #8]
  54:	ret
  58:	stp	x29, x30, [sp, #-16]!
  5c:	mov	x29, sp
  60:	bl	0 <_ZNSt6vectorISt4pairIjS_IjSaIjEEESaIS3_EE12emplace_backIJS3_EEEvDpOT_>
  64:	ldp	x29, x30, [sp], #16
  68:	ret

Disassembly of section .text._ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag:

0000000000000000 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag>:
   0:	cmp	x3, x2
   4:	b.eq	200 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0x200>  // b.none
   8:	stp	x29, x30, [sp, #-80]!
   c:	mov	x29, sp
  10:	stp	x19, x20, [sp, #16]
  14:	stp	x21, x22, [sp, #32]
  18:	stp	x23, x24, [sp, #48]
  1c:	stp	x25, x26, [sp, #64]
  20:	mov	x19, x0
  24:	mov	x21, x1
  28:	mov	x20, x2
  2c:	sub	x24, x3, x2
  30:	asr	x23, x24, #2
  34:	ldr	x22, [x0, #8]
  38:	ldr	x1, [x0, #16]
  3c:	sub	x1, x1, x22
  40:	asr	x1, x1, #2
  44:	cmp	x1, x24, asr #2
  48:	b.cc	110 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0x110>  // b.lo, b.ul, b.last
  4c:	sub	x25, x22, x21
  50:	asr	x26, x25, #2
  54:	cmp	x23, x25, asr #2
  58:	b.cc	c4 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0xc4>  // b.lo, b.ul, b.last
  5c:	add	x24, x2, x25
  60:	cmp	x3, x24
  64:	b.eq	78 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0x78>  // b.none
  68:	sub	x2, x3, x24
  6c:	mov	x1, x24
  70:	mov	x0, x22
  74:	bl	0 <memmove>
  78:	sub	x23, x23, x26
  7c:	ldr	x0, [x19, #8]
  80:	add	x0, x0, x23, lsl #2
  84:	str	x0, [x19, #8]
  88:	cmp	x22, x21
  8c:	b.eq	9c <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0x9c>  // b.none
  90:	mov	x2, x25
  94:	mov	x1, x21
  98:	bl	0 <memmove>
  9c:	ldr	x0, [x19, #8]
  a0:	add	x0, x0, x25
  a4:	str	x0, [x19, #8]
  a8:	cmp	x20, x24
  ac:	b.eq	1d4 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0x1d4>  // b.none
  b0:	mov	x2, x25
  b4:	mov	x1, x20
  b8:	mov	x0, x21
  bc:	bl	0 <memmove>
  c0:	b	1d4 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0x1d4>
  c4:	sub	x23, x22, x24
  c8:	mov	x2, x24
  cc:	mov	x1, x23
  d0:	mov	x0, x22
  d4:	bl	0 <memmove>
  d8:	ldr	x0, [x19, #8]
  dc:	add	x0, x0, x24
  e0:	str	x0, [x19, #8]
  e4:	cmp	x23, x21
  e8:	b.eq	fc <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0xfc>  // b.none
  ec:	sub	x2, x23, x21
  f0:	mov	x1, x21
  f4:	sub	x0, x22, x2
  f8:	bl	0 <memmove>
  fc:	mov	x2, x24
 100:	mov	x1, x20
 104:	mov	x0, x21
 108:	bl	0 <memmove>
 10c:	b	1d4 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0x1d4>
 110:	ldr	x0, [x0]
 114:	sub	x22, x22, x0
 118:	asr	x22, x22, #2
 11c:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
 120:	sub	x0, x0, x22
 124:	cmp	x23, x0
 128:	b.hi	1ec <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0x1ec>  // b.pmore
 12c:	cmp	x23, x22
 130:	csel	x23, x23, x22, cs  // cs = hs, nlast
 134:	adds	x23, x23, x22
 138:	b.cs	1f8 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0x1f8>  // b.hs, b.nlast
 13c:	mov	x25, #0x1fffffffffffffff    	// #2305843009213693951
 140:	cmp	x23, x25
 144:	csel	x25, x23, x25, ls  // ls = plast
 148:	mov	x26, #0x0                   	// #0
 14c:	cbz	x23, 15c <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0x15c>
 150:	lsl	x0, x25, #2
 154:	bl	0 <_Znwm>
 158:	mov	x26, x0
 15c:	ldr	x23, [x19]
 160:	sub	x22, x21, x23
 164:	cmp	x21, x23
 168:	b.eq	17c <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0x17c>  // b.none
 16c:	mov	x2, x22
 170:	mov	x1, x23
 174:	mov	x0, x26
 178:	bl	0 <memmove>
 17c:	add	x22, x26, x22
 180:	mov	x2, x24
 184:	mov	x1, x20
 188:	mov	x0, x22
 18c:	bl	0 <memcpy>
 190:	add	x24, x22, x24
 194:	ldr	x0, [x19, #8]
 198:	sub	x22, x0, x21
 19c:	cmp	x21, x0
 1a0:	b.eq	1b4 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0x1b4>  // b.none
 1a4:	mov	x2, x22
 1a8:	mov	x1, x21
 1ac:	mov	x0, x24
 1b0:	bl	0 <memcpy>
 1b4:	add	x24, x24, x22
 1b8:	cbz	x23, 1c4 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0x1c4>
 1bc:	mov	x0, x23
 1c0:	bl	0 <_ZdlPv>
 1c4:	str	x26, [x19]
 1c8:	str	x24, [x19, #8]
 1cc:	add	x25, x26, x25, lsl #2
 1d0:	str	x25, [x19, #16]
 1d4:	ldp	x19, x20, [sp, #16]
 1d8:	ldp	x21, x22, [sp, #32]
 1dc:	ldp	x23, x24, [sp, #48]
 1e0:	ldp	x25, x26, [sp, #64]
 1e4:	ldp	x29, x30, [sp], #80
 1e8:	ret
 1ec:	adrp	x0, 0 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag>
 1f0:	add	x0, x0, #0x0
 1f4:	bl	0 <_ZSt20__throw_length_errorPKc>
 1f8:	mov	x25, #0x1fffffffffffffff    	// #2305843009213693951
 1fc:	b	150 <_ZNSt6vectorIjSaIjEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPjS1_EEEEvS6_T_S7_St20forward_iterator_tag+0x150>
 200:	ret

Disassembly of section .text._ZNK4llvm8ExpectedINS_3msf9MSFLayoutEE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedINS_3msf9MSFLayoutEE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_3msf9MSFLayoutEE22fatalUncheckedExpectedEv>
  18:	add	x1, x1, #0x0
  1c:	bl	0 <_ZNK4llvm8ExpectedINS_3msf9MSFLayoutEE22fatalUncheckedExpectedEv>
  20:	ldrb	w0, [x19, #88]
  24:	tbz	w0, #0, 80 <_ZNK4llvm8ExpectedINS_3msf9MSFLayoutEE22fatalUncheckedExpectedEv+0x80>
  28:	bl	0 <_ZN4llvm4dbgsEv>
  2c:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_3msf9MSFLayoutEE22fatalUncheckedExpectedEv>
  30:	add	x1, x1, #0x0
  34:	bl	0 <_ZNK4llvm8ExpectedINS_3msf9MSFLayoutEE22fatalUncheckedExpectedEv>
  38:	ldrb	w0, [x19, #88]
  3c:	tbz	w0, #0, 60 <_ZNK4llvm8ExpectedINS_3msf9MSFLayoutEE22fatalUncheckedExpectedEv+0x60>
  40:	ldr	x19, [x19]
  44:	ldr	x0, [x19]
  48:	ldr	x20, [x0, #16]
  4c:	bl	0 <_ZN4llvm4dbgsEv>
  50:	mov	x1, x0
  54:	mov	x0, x19
  58:	blr	x20
  5c:	bl	0 <abort>
  60:	adrp	x3, 0 <_ZNK4llvm8ExpectedINS_3msf9MSFLayoutEE22fatalUncheckedExpectedEv>
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x281                 	// #641
  6c:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_3msf9MSFLayoutEE22fatalUncheckedExpectedEv>
  70:	add	x1, x1, #0x0
  74:	adrp	x0, 0 <_ZNK4llvm8ExpectedINS_3msf9MSFLayoutEE22fatalUncheckedExpectedEv>
  78:	add	x0, x0, #0x0
  7c:	bl	0 <__assert_fail>
  80:	bl	0 <_ZN4llvm4dbgsEv>
  84:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_3msf9MSFLayoutEE22fatalUncheckedExpectedEv>
  88:	add	x1, x1, #0x0
  8c:	bl	0 <_ZNK4llvm8ExpectedINS_3msf9MSFLayoutEE22fatalUncheckedExpectedEv>
  90:	b	5c <_ZNK4llvm8ExpectedINS_3msf9MSFLayoutEE22fatalUncheckedExpectedEv+0x5c>

Disassembly of section .text._ZNK4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	adrp	x1, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv>
  18:	add	x1, x1, #0x0
  1c:	bl	0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv>
  20:	ldrb	w0, [x19, #8]
  24:	tbz	w0, #0, 80 <_ZNK4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv+0x80>
  28:	bl	0 <_ZN4llvm4dbgsEv>
  2c:	adrp	x1, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv>
  30:	add	x1, x1, #0x0
  34:	bl	0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv>
  38:	ldrb	w0, [x19, #8]
  3c:	tbz	w0, #0, 60 <_ZNK4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv+0x60>
  40:	ldr	x19, [x19]
  44:	ldr	x0, [x19]
  48:	ldr	x20, [x0, #16]
  4c:	bl	0 <_ZN4llvm4dbgsEv>
  50:	mov	x1, x0
  54:	mov	x0, x19
  58:	blr	x20
  5c:	bl	0 <abort>
  60:	adrp	x3, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv>
  64:	add	x3, x3, #0x0
  68:	mov	w2, #0x281                 	// #641
  6c:	adrp	x1, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv>
  70:	add	x1, x1, #0x0
  74:	adrp	x0, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv>
  78:	add	x0, x0, #0x0
  7c:	bl	0 <__assert_fail>
  80:	bl	0 <_ZN4llvm4dbgsEv>
  84:	adrp	x1, 0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv>
  88:	add	x1, x1, #0x0
  8c:	bl	0 <_ZNK4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv>
  90:	b	5c <_ZNK4llvm8ExpectedISt10unique_ptrINS_16FileOutputBufferESt14default_deleteIS2_EEE22fatalUncheckedExpectedEv+0x5c>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x19, x0
  14:	str	x1, [sp, #56]
  18:	mov	x20, x1
  1c:	mov	x0, #0xffffffff            	// #4294967295
  20:	cmp	x1, x0
  24:	b.hi	f4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xf4>  // b.pmore
  28:	ldr	w2, [x19, #12]
  2c:	add	x2, x2, #0x2
  30:	orr	x2, x2, x2, lsr #1
  34:	orr	x2, x2, x2, lsr #2
  38:	orr	x2, x2, x2, lsr #4
  3c:	orr	x2, x2, x2, lsr #8
  40:	orr	x0, x2, x2, lsr #16
  44:	orr	x2, x0, x2, lsr #32
  48:	add	x2, x2, #0x1
  4c:	str	x2, [sp, #64]
  50:	cmp	x20, x2
  54:	add	x0, sp, #0x40
  58:	add	x1, sp, #0x38
  5c:	csel	x0, x0, x1, ls  // ls = plast
  60:	mov	x1, #0xffffffff            	// #4294967295
  64:	str	x1, [sp, #72]
  68:	ldr	x2, [x0]
  6c:	cmp	x2, x1
  70:	add	x1, sp, #0x48
  74:	csel	x0, x1, x0, hi  // hi = pmore
  78:	ldr	x21, [x0]
  7c:	lsl	x22, x21, #4
  80:	mov	x0, x22
  84:	bl	0 <malloc>
  88:	mov	x20, x0
  8c:	cbz	x0, 108 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0x108>
  90:	ldr	x6, [x19]
  94:	ldr	w1, [x19, #8]
  98:	add	x1, x6, x1, lsl #4
  9c:	cmp	x1, x6
  a0:	b.eq	c8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xc8>  // b.none
  a4:	mov	x2, x6
  a8:	mov	x3, x20
  ac:	ldp	x4, x5, [x2], #16
  b0:	stp	x4, x5, [x3], #16
  b4:	cmp	x1, x2
  b8:	b.ne	ac <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xac>  // b.any
  bc:	sub	x1, x1, #0x10
  c0:	cmp	x1, x6
  c4:	b.ne	bc <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xbc>  // b.any
  c8:	mov	x1, x19
  cc:	ldr	x0, [x1], #16
  d0:	cmp	x0, x1
  d4:	b.eq	dc <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xdc>  // b.none
  d8:	bl	0 <free>
  dc:	str	x20, [x19]
  e0:	str	w21, [x19, #12]
  e4:	ldp	x19, x20, [sp, #16]
  e8:	ldp	x21, x22, [sp, #32]
  ec:	ldp	x29, x30, [sp], #80
  f0:	ret
  f4:	mov	w1, #0x1                   	// #1
  f8:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm>
  fc:	add	x0, x0, #0x0
 100:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 104:	b	28 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0x28>
 108:	cbnz	x22, 11c <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0x11c>
 10c:	mov	x0, #0x1                   	// #1
 110:	bl	0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm>
 114:	mov	x20, x0
 118:	b	90 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0x90>
 11c:	mov	w1, #0x1                   	// #1
 120:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm>
 124:	add	x0, x0, #0x0
 128:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 12c:	b	90 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0x90>

MSFCommon.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x8
  10:	mov	x20, x0
  14:	mov	x2, #0x20                  	// #32
  18:	adrp	x1, 0 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE>
  1c:	add	x1, x1, #0x0
  20:	bl	0 <memcmp>
  24:	cbnz	w0, 70 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x70>
  28:	ldr	w0, [x20, #32]
  2c:	cmp	w0, #0x800
  30:	b.eq	98 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x98>  // b.none
  34:	b.hi	90 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x90>  // b.pmore
  38:	sub	w1, w0, #0x200
  3c:	tst	w1, #0xfffffdff
  40:	b.eq	f4 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0xf4>  // b.none
  44:	mov	w0, #0x5                   	// #5
  48:	str	w0, [sp, #40]
  4c:	mov	x8, x19
  50:	adrp	x1, 0 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE>
  54:	add	x1, x1, #0x0
  58:	add	x0, sp, #0x28
  5c:	bl	0 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE>
  60:	mov	x0, x19
  64:	ldp	x19, x20, [sp, #16]
  68:	ldp	x29, x30, [sp], #64
  6c:	ret
  70:	mov	w0, #0x5                   	// #5
  74:	str	w0, [sp, #36]
  78:	mov	x8, x19
  7c:	adrp	x1, 0 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE>
  80:	add	x1, x1, #0x0
  84:	add	x0, sp, #0x24
  88:	bl	0 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE>
  8c:	b	60 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x60>
  90:	cmp	w0, #0x1, lsl #12
  94:	b.ne	44 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x44>  // b.any
  98:	ldr	w1, [x20, #44]
  9c:	tst	x1, #0x3
  a0:	b.ne	128 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x128>  // b.any
  a4:	mov	w2, w0
  a8:	sub	x0, x2, #0x1
  ac:	add	x0, x0, w1, uxtw
  b0:	udiv	x0, x0, x2
  b4:	mul	x0, x0, x2
  b8:	udiv	x0, x0, x2
  bc:	cmp	x0, x2, lsr #2
  c0:	b.hi	148 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x148>  // b.pmore
  c4:	ldr	w0, [x20, #52]
  c8:	cbz	w0, 168 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x168>
  cc:	ldr	w1, [x20, #40]
  d0:	cmp	w0, w1
  d4:	b.cs	188 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x188>  // b.hs, b.nlast
  d8:	ldr	w0, [x20, #36]
  dc:	sub	w0, w0, #0x1
  e0:	cmp	w0, #0x1
  e4:	b.hi	1a8 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x1a8>  // b.pmore
  e8:	mov	x0, #0x1                   	// #1
  ec:	str	x0, [x19]
  f0:	b	60 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x60>
  f4:	ldr	w1, [x20, #44]
  f8:	tst	x1, #0x3
  fc:	b.ne	128 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x128>  // b.any
 100:	mov	w2, w0
 104:	cbnz	w0, a8 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0xa8>
 108:	adrp	x3, 0 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE>
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0x2ce                 	// #718
 114:	adrp	x1, 0 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE>
 118:	add	x1, x1, #0x0
 11c:	adrp	x0, 0 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE>
 120:	add	x0, x0, #0x0
 124:	bl	0 <__assert_fail>
 128:	mov	w0, #0x5                   	// #5
 12c:	str	w0, [sp, #44]
 130:	mov	x8, x19
 134:	adrp	x1, 0 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE>
 138:	add	x1, x1, #0x0
 13c:	add	x0, sp, #0x2c
 140:	bl	0 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE>
 144:	b	60 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x60>
 148:	mov	w0, #0x5                   	// #5
 14c:	str	w0, [sp, #48]
 150:	mov	x8, x19
 154:	adrp	x1, 0 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE>
 158:	add	x1, x1, #0x0
 15c:	add	x0, sp, #0x30
 160:	bl	0 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE>
 164:	b	60 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x60>
 168:	mov	w0, #0x5                   	// #5
 16c:	str	w0, [sp, #52]
 170:	mov	x8, x19
 174:	adrp	x1, 0 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE>
 178:	add	x1, x1, #0x0
 17c:	add	x0, sp, #0x34
 180:	bl	0 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE>
 184:	b	60 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x60>
 188:	mov	w0, #0x5                   	// #5
 18c:	str	w0, [sp, #56]
 190:	mov	x8, x19
 194:	adrp	x1, 0 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE>
 198:	add	x1, x1, #0x0
 19c:	add	x0, sp, #0x38
 1a0:	bl	0 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE>
 1a4:	b	60 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x60>
 1a8:	mov	w0, #0x5                   	// #5
 1ac:	str	w0, [sp, #60]
 1b0:	mov	x8, x19
 1b4:	adrp	x1, 0 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE>
 1b8:	add	x1, x1, #0x0
 1bc:	add	x0, sp, #0x3c
 1c0:	bl	0 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE>
 1c4:	b	60 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE+0x60>

00000000000001c8 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb>:
 1c8:	stp	x29, x30, [sp, #-96]!
 1cc:	mov	x29, sp
 1d0:	stp	x19, x20, [sp, #16]
 1d4:	stp	x21, x22, [sp, #32]
 1d8:	stp	x23, x24, [sp, #48]
 1dc:	stp	x25, x26, [sp, #64]
 1e0:	mov	x21, x8
 1e4:	mov	x23, x0
 1e8:	and	w25, w1, #0xff
 1ec:	str	xzr, [x8, #8]
 1f0:	str	xzr, [x8, #16]
 1f4:	str	xzr, [x8, #24]
 1f8:	ldr	x3, [x0]
 1fc:	ldr	w1, [x3, #32]
 200:	ldr	w0, [x3, #40]
 204:	ands	w2, w2, #0xff
 208:	b.eq	2c4 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0xfc>  // b.none
 20c:	ldr	w5, [x3, #36]
 210:	sub	w4, w5, #0x1
 214:	cmp	w4, #0x1
 218:	b.hi	2a4 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0xdc>  // b.pmore
 21c:	mov	w4, #0x3                   	// #3
 220:	sub	w4, w4, w5
 224:	cbz	w25, 314 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0x14c>
 228:	sub	w0, w0, w4
 22c:	mov	w4, w1
 230:	cbz	w1, 2f4 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0x12c>
 234:	sub	x22, x4, #0x1
 238:	add	x0, x22, x0
 23c:	udiv	x22, x0, x4
 240:	mul	x22, x22, x4
 244:	udiv	x22, x22, x4
 248:	cbz	w2, 378 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0x1b0>
 24c:	ldr	w0, [x3, #36]
 250:	sub	w1, w0, #0x1
 254:	cmp	w1, #0x1
 258:	b.hi	358 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0x190>  // b.pmore
 25c:	mov	w19, #0x3                   	// #3
 260:	sub	w19, w19, w0
 264:	add	x24, sp, #0x58
 268:	mov	w20, #0x0                   	// #0
 26c:	mov	x26, x24
 270:	cbnz	w22, 3d4 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0x20c>
 274:	cbz	w25, 3f8 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0x230>
 278:	ldr	x0, [x23]
 27c:	ldr	w0, [x0, #32]
 280:	mul	w22, w22, w0
 284:	str	w22, [x21]
 288:	mov	x0, x21
 28c:	ldp	x19, x20, [sp, #16]
 290:	ldp	x21, x22, [sp, #32]
 294:	ldp	x23, x24, [sp, #48]
 298:	ldp	x25, x26, [sp, #64]
 29c:	ldp	x29, x30, [sp], #96
 2a0:	ret
 2a4:	adrp	x3, 0 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE>
 2a8:	add	x3, x3, #0x0
 2ac:	mov	w2, #0x37                  	// #55
 2b0:	adrp	x1, 0 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE>
 2b4:	add	x1, x1, #0x0
 2b8:	adrp	x0, 0 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE>
 2bc:	add	x0, x0, #0x0
 2c0:	bl	0 <__assert_fail>
 2c4:	ldr	w4, [x3, #36]
 2c8:	sub	w5, w4, #0x1
 2cc:	cmp	w5, #0x1
 2d0:	b.ls	224 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0x5c>  // b.plast
 2d4:	adrp	x3, 0 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE>
 2d8:	add	x3, x3, #0x0
 2dc:	mov	w2, #0x37                  	// #55
 2e0:	adrp	x1, 0 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE>
 2e4:	add	x1, x1, #0x0
 2e8:	adrp	x0, 0 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE>
 2ec:	add	x0, x0, #0x0
 2f0:	bl	0 <__assert_fail>
 2f4:	adrp	x3, 0 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE>
 2f8:	add	x3, x3, #0x0
 2fc:	mov	w2, #0x2ce                 	// #718
 300:	adrp	x1, 0 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE>
 304:	add	x1, x1, #0x0
 308:	adrp	x0, 0 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE>
 30c:	add	x0, x0, #0x0
 310:	bl	0 <__assert_fail>
 314:	mov	w0, w0
 318:	lsl	w1, w1, #3
 31c:	cbz	x1, 338 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0x170>
 320:	sub	x0, x0, #0x1
 324:	add	x22, x0, x1
 328:	udiv	x22, x22, x1
 32c:	mul	x22, x22, x1
 330:	udiv	x22, x22, x1
 334:	b	248 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0x80>
 338:	adrp	x3, 0 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE>
 33c:	add	x3, x3, #0x0
 340:	mov	w2, #0x2ce                 	// #718
 344:	adrp	x1, 0 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE>
 348:	add	x1, x1, #0x0
 34c:	adrp	x0, 0 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE>
 350:	add	x0, x0, #0x0
 354:	bl	0 <__assert_fail>
 358:	adrp	x3, 0 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE>
 35c:	add	x3, x3, #0x0
 360:	mov	w2, #0x37                  	// #55
 364:	adrp	x1, 0 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE>
 368:	add	x1, x1, #0x0
 36c:	adrp	x0, 0 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE>
 370:	add	x0, x0, #0x0
 374:	bl	0 <__assert_fail>
 378:	ldr	w19, [x3, #36]
 37c:	sub	w0, w19, #0x1
 380:	cmp	w0, #0x1
 384:	b.ls	264 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0x9c>  // b.plast
 388:	adrp	x3, 0 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE>
 38c:	add	x3, x3, #0x0
 390:	mov	w2, #0x37                  	// #55
 394:	adrp	x1, 0 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE>
 398:	add	x1, x1, #0x0
 39c:	adrp	x0, 0 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE>
 3a0:	add	x0, x0, #0x0
 3a4:	bl	0 <__assert_fail>
 3a8:	ldr	w0, [sp, #88]
 3ac:	str	w0, [x1]
 3b0:	ldr	x1, [x21, #16]
 3b4:	add	x1, x1, #0x4
 3b8:	str	x1, [x21, #16]
 3bc:	ldr	x0, [x23]
 3c0:	ldr	w0, [x0, #32]
 3c4:	add	w19, w19, w0
 3c8:	add	w20, w20, #0x1
 3cc:	cmp	w20, w22
 3d0:	b.eq	274 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0xac>  // b.none
 3d4:	str	w19, [x24]
 3d8:	ldr	x1, [x21, #16]
 3dc:	ldr	x0, [x21, #24]
 3e0:	cmp	x1, x0
 3e4:	b.ne	3a8 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0x1e0>  // b.any
 3e8:	mov	x2, x26
 3ec:	add	x0, x21, #0x8
 3f0:	bl	0 <_ZN4llvm3msf18validateSuperBlockERKNS0_10SuperBlockE>
 3f4:	b	3bc <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0x1f4>
 3f8:	ldr	x0, [x23]
 3fc:	ldr	w22, [x0, #40]
 400:	add	x22, x22, #0x7
 404:	ubfx	x22, x22, #3, #32
 408:	b	284 <_ZN4llvm3msf18getFpmStreamLayoutERKNS0_9MSFLayoutEbb+0xbc>

Disassembly of section .text._ZNK4llvm9ErrorInfoINS_3msf8MSFErrorENS_11StringErrorEE14dynamicClassIDEv:

0000000000000000 <_ZNK4llvm9ErrorInfoINS_3msf8MSFErrorENS_11StringErrorEE14dynamicClassIDEv>:
   0:	adrp	x0, 0 <_ZN4llvm3msf8MSFError2IDE>
   4:	ldr	x0, [x0]
   8:	ret

Disassembly of section .text._ZNK4llvm9ErrorInfoINS_3msf8MSFErrorENS_11StringErrorEE3isAEPKv:

0000000000000000 <_ZNK4llvm9ErrorInfoINS_3msf8MSFErrorENS_11StringErrorEE3isAEPKv>:
   0:	adrp	x0, 0 <_ZN4llvm11StringError2IDE>
   4:	ldr	x0, [x0]
   8:	cmp	x1, x0
   c:	adrp	x0, 0 <_ZN4llvm3msf8MSFError2IDE>
  10:	ldr	x0, [x0]
  14:	ccmp	x1, x0, #0x4, ne  // ne = any
  18:	adrp	x0, 0 <_ZN4llvm13ErrorInfoBase2IDE>
  1c:	ldr	x0, [x0]
  20:	ccmp	x1, x0, #0x4, ne  // ne = any
  24:	cset	w0, eq  // eq = none
  28:	ret

Disassembly of section .text._ZN4llvm3msf8MSFErrorD2Ev:

0000000000000000 <_ZN4llvm3msf8MSFErrorD1Ev>:
   0:	mov	x1, x0
   4:	adrp	x0, 0 <_ZTVN4llvm11StringErrorE>
   8:	ldr	x0, [x0]
   c:	add	x0, x0, #0x10
  10:	str	x0, [x1]
  14:	ldr	x0, [x1, #8]
  18:	add	x1, x1, #0x18
  1c:	cmp	x0, x1
  20:	b.eq	38 <_ZN4llvm3msf8MSFErrorD1Ev+0x38>  // b.none
  24:	stp	x29, x30, [sp, #-16]!
  28:	mov	x29, sp
  2c:	bl	0 <_ZdlPv>
  30:	ldp	x29, x30, [sp], #16
  34:	ret
  38:	ret

Disassembly of section .text._ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev:

0000000000000000 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev>:
   0:	stp	x29, x30, [sp, #-144]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	str	x21, [sp, #32]
  10:	mov	x19, x8
  14:	add	x2, sp, #0x70
  18:	add	x1, sp, #0x80
  1c:	str	x1, [sp, #112]
  20:	str	xzr, [sp, #120]
  24:	strb	wzr, [sp, #128]
  28:	mov	w1, #0x1                   	// #1
  2c:	str	w1, [sp, #96]
  30:	str	xzr, [sp, #88]
  34:	str	xzr, [sp, #80]
  38:	str	xzr, [sp, #72]
  3c:	adrp	x1, 0 <_ZTVN4llvm18raw_string_ostreamE>
  40:	ldr	x1, [x1]
  44:	add	x1, x1, #0x10
  48:	str	x1, [sp, #64]
  4c:	str	x2, [sp, #104]
  50:	ldr	x1, [x0]
  54:	ldr	x2, [x1, #16]
  58:	add	x1, sp, #0x40
  5c:	blr	x2
  60:	ldr	x1, [sp, #88]
  64:	ldr	x0, [sp, #72]
  68:	cmp	x1, x0
  6c:	b.eq	78 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0x78>  // b.none
  70:	add	x0, sp, #0x40
  74:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
  78:	ldr	x0, [sp, #104]
  7c:	add	x1, x19, #0x10
  80:	str	x1, [x19]
  84:	ldr	x21, [x0]
  88:	ldr	x20, [x0, #8]
  8c:	cmp	x21, #0x0
  90:	ccmp	x20, #0x0, #0x4, eq  // eq = none
  94:	b.ne	f8 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0xf8>  // b.any
  98:	str	x20, [sp, #56]
  9c:	cmp	x20, #0xf
  a0:	b.hi	104 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0x104>  // b.pmore
  a4:	ldr	x0, [x19]
  a8:	cmp	x20, #0x1
  ac:	b.ne	130 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0x130>  // b.any
  b0:	ldrb	w1, [x21]
  b4:	strb	w1, [x0]
  b8:	ldr	x0, [sp, #56]
  bc:	str	x0, [x19, #8]
  c0:	ldr	x1, [x19]
  c4:	strb	wzr, [x1, x0]
  c8:	add	x0, sp, #0x40
  cc:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
  d0:	ldr	x0, [sp, #112]
  d4:	add	x1, sp, #0x80
  d8:	cmp	x0, x1
  dc:	b.eq	e4 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0xe4>  // b.none
  e0:	bl	0 <_ZdlPv>
  e4:	mov	x0, x19
  e8:	ldp	x19, x20, [sp, #16]
  ec:	ldr	x21, [sp, #32]
  f0:	ldp	x29, x30, [sp], #144
  f4:	ret
  f8:	adrp	x0, 0 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev>
  fc:	add	x0, x0, #0x0
 100:	bl	0 <_ZSt19__throw_logic_errorPKc>
 104:	mov	x2, #0x0                   	// #0
 108:	add	x1, sp, #0x38
 10c:	mov	x0, x19
 110:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
 114:	str	x0, [x19]
 118:	ldr	x1, [sp, #56]
 11c:	str	x1, [x19, #16]
 120:	mov	x2, x20
 124:	mov	x1, x21
 128:	bl	0 <memcpy>
 12c:	b	b8 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0xb8>
 130:	cbz	x20, b8 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0xb8>
 134:	b	120 <_ZNK4llvm13ErrorInfoBase7messageB5cxx11Ev+0x120>

Disassembly of section .text._ZN4llvm3msf8MSFErrorD0Ev:

0000000000000000 <_ZN4llvm3msf8MSFErrorD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	adrp	x0, 0 <_ZTVN4llvm11StringErrorE>
  14:	ldr	x0, [x0]
  18:	add	x0, x0, #0x10
  1c:	str	x0, [x19]
  20:	ldr	x0, [x19, #8]
  24:	add	x1, x19, #0x18
  28:	cmp	x0, x1
  2c:	b.eq	34 <_ZN4llvm3msf8MSFErrorD0Ev+0x34>  // b.none
  30:	bl	0 <_ZdlPv>
  34:	mov	x1, #0x40                  	// #64
  38:	mov	x0, x19
  3c:	bl	0 <_ZdlPvm>
  40:	ldr	x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret

Disassembly of section .text._ZN4llvm10make_errorINS_3msf8MSFErrorEJNS1_14msf_error_codeERA31_KcEEENS_5ErrorEDpOT0_:

0000000000000000 <_ZN4llvm10make_errorINS_3msf8MSFErrorEJNS1_14msf_error_codeERA31_KcEEENS_5ErrorEDpOT0_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x20, x8
  14:	mov	x19, x1
  18:	ldr	w22, [x0]
  1c:	bl	0 <_ZN4llvm3msf14MSFErrCategoryEv>
  20:	mov	x21, x0
  24:	str	xzr, [sp, #56]
  28:	str	xzr, [sp, #64]
  2c:	mov	w0, #0x1                   	// #1
  30:	strb	w0, [sp, #72]
  34:	strb	w0, [sp, #73]
  38:	ldrb	w0, [x19]
  3c:	cbz	w0, 4c <_ZN4llvm10make_errorINS_3msf8MSFErrorEJNS1_14msf_error_codeERA31_KcEEENS_5ErrorEDpOT0_+0x4c>
  40:	str	x19, [sp, #56]
  44:	mov	w0, #0x3                   	// #3
  48:	strb	w0, [sp, #72]
  4c:	mov	x0, #0x40                  	// #64
  50:	bl	0 <_Znwm>
  54:	mov	x19, x0
  58:	add	x3, sp, #0x38
  5c:	mov	w1, w22
  60:	mov	x2, x21
  64:	bl	0 <_ZN4llvm11StringErrorC2ESt10error_codeRKNS_5TwineE>
  68:	adrp	x0, 0 <_ZN4llvm10make_errorINS_3msf8MSFErrorEJNS1_14msf_error_codeERA31_KcEEENS_5ErrorEDpOT0_>
  6c:	ldr	x0, [x0]
  70:	add	x0, x0, #0x10
  74:	str	x0, [x19]
  78:	orr	x19, x19, #0x1
  7c:	str	x19, [x20]
  80:	mov	x0, x20
  84:	ldp	x19, x20, [sp, #16]
  88:	ldp	x21, x22, [sp, #32]
  8c:	ldp	x29, x30, [sp], #80
  90:	ret

Disassembly of section .text._ZN4llvm10make_errorINS_3msf8MSFErrorEJNS1_14msf_error_codeERA24_KcEEENS_5ErrorEDpOT0_:

0000000000000000 <_ZN4llvm10make_errorINS_3msf8MSFErrorEJNS1_14msf_error_codeERA24_KcEEENS_5ErrorEDpOT0_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x20, x8
  14:	mov	x19, x1
  18:	ldr	w22, [x0]
  1c:	bl	0 <_ZN4llvm3msf14MSFErrCategoryEv>
  20:	mov	x21, x0
  24:	str	xzr, [sp, #56]
  28:	str	xzr, [sp, #64]
  2c:	mov	w0, #0x1                   	// #1
  30:	strb	w0, [sp, #72]
  34:	strb	w0, [sp, #73]
  38:	ldrb	w0, [x19]
  3c:	cbz	w0, 4c <_ZN4llvm10make_errorINS_3msf8MSFErrorEJNS1_14msf_error_codeERA24_KcEEENS_5ErrorEDpOT0_+0x4c>
  40:	str	x19, [sp, #56]
  44:	mov	w0, #0x3                   	// #3
  48:	strb	w0, [sp, #72]
  4c:	mov	x0, #0x40                  	// #64
  50:	bl	0 <_Znwm>
  54:	mov	x19, x0
  58:	add	x3, sp, #0x38
  5c:	mov	w1, w22
  60:	mov	x2, x21
  64:	bl	0 <_ZN4llvm11StringErrorC2ESt10error_codeRKNS_5TwineE>
  68:	adrp	x0, 0 <_ZN4llvm10make_errorINS_3msf8MSFErrorEJNS1_14msf_error_codeERA24_KcEEENS_5ErrorEDpOT0_>
  6c:	ldr	x0, [x0]
  70:	add	x0, x0, #0x10
  74:	str	x0, [x19]
  78:	orr	x19, x19, #0x1
  7c:	str	x19, [x20]
  80:	mov	x0, x20
  84:	ldp	x19, x20, [sp, #16]
  88:	ldp	x21, x22, [sp, #32]
  8c:	ldp	x29, x30, [sp], #80
  90:	ret

Disassembly of section .text._ZN4llvm10make_errorINS_3msf8MSFErrorEJNS1_14msf_error_codeERA37_KcEEENS_5ErrorEDpOT0_:

0000000000000000 <_ZN4llvm10make_errorINS_3msf8MSFErrorEJNS1_14msf_error_codeERA37_KcEEENS_5ErrorEDpOT0_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x20, x8
  14:	mov	x19, x1
  18:	ldr	w22, [x0]
  1c:	bl	0 <_ZN4llvm3msf14MSFErrCategoryEv>
  20:	mov	x21, x0
  24:	str	xzr, [sp, #56]
  28:	str	xzr, [sp, #64]
  2c:	mov	w0, #0x1                   	// #1
  30:	strb	w0, [sp, #72]
  34:	strb	w0, [sp, #73]
  38:	ldrb	w0, [x19]
  3c:	cbz	w0, 4c <_ZN4llvm10make_errorINS_3msf8MSFErrorEJNS1_14msf_error_codeERA37_KcEEENS_5ErrorEDpOT0_+0x4c>
  40:	str	x19, [sp, #56]
  44:	mov	w0, #0x3                   	// #3
  48:	strb	w0, [sp, #72]
  4c:	mov	x0, #0x40                  	// #64
  50:	bl	0 <_Znwm>
  54:	mov	x19, x0
  58:	add	x3, sp, #0x38
  5c:	mov	w1, w22
  60:	mov	x2, x21
  64:	bl	0 <_ZN4llvm11StringErrorC2ESt10error_codeRKNS_5TwineE>
  68:	adrp	x0, 0 <_ZN4llvm10make_errorINS_3msf8MSFErrorEJNS1_14msf_error_codeERA37_KcEEENS_5ErrorEDpOT0_>
  6c:	ldr	x0, [x0]
  70:	add	x0, x0, #0x10
  74:	str	x0, [x19]
  78:	orr	x19, x19, #0x1
  7c:	str	x19, [x20]
  80:	mov	x0, x20
  84:	ldp	x19, x20, [sp, #16]
  88:	ldp	x21, x22, [sp, #32]
  8c:	ldp	x29, x30, [sp], #80
  90:	ret

Disassembly of section .text._ZN4llvm10make_errorINS_3msf8MSFErrorEJNS1_14msf_error_codeERA27_KcEEENS_5ErrorEDpOT0_:

0000000000000000 <_ZN4llvm10make_errorINS_3msf8MSFErrorEJNS1_14msf_error_codeERA27_KcEEENS_5ErrorEDpOT0_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x20, x8
  14:	mov	x19, x1
  18:	ldr	w22, [x0]
  1c:	bl	0 <_ZN4llvm3msf14MSFErrCategoryEv>
  20:	mov	x21, x0
  24:	str	xzr, [sp, #56]
  28:	str	xzr, [sp, #64]
  2c:	mov	w0, #0x1                   	// #1
  30:	strb	w0, [sp, #72]
  34:	strb	w0, [sp, #73]
  38:	ldrb	w0, [x19]
  3c:	cbz	w0, 4c <_ZN4llvm10make_errorINS_3msf8MSFErrorEJNS1_14msf_error_codeERA27_KcEEENS_5ErrorEDpOT0_+0x4c>
  40:	str	x19, [sp, #56]
  44:	mov	w0, #0x3                   	// #3
  48:	strb	w0, [sp, #72]
  4c:	mov	x0, #0x40                  	// #64
  50:	bl	0 <_Znwm>
  54:	mov	x19, x0
  58:	add	x3, sp, #0x38
  5c:	mov	w1, w22
  60:	mov	x2, x21
  64:	bl	0 <_ZN4llvm11StringErrorC2ESt10error_codeRKNS_5TwineE>
  68:	adrp	x0, 0 <_ZN4llvm10make_errorINS_3msf8MSFErrorEJNS1_14msf_error_codeERA27_KcEEENS_5ErrorEDpOT0_>
  6c:	ldr	x0, [x0]
  70:	add	x0, x0, #0x10
  74:	str	x0, [x19]
  78:	orr	x19, x19, #0x1
  7c:	str	x19, [x20]
  80:	mov	x0, x20
  84:	ldp	x19, x20, [sp, #16]
  88:	ldp	x21, x22, [sp, #32]
  8c:	ldp	x29, x30, [sp], #80
  90:	ret

Disassembly of section .text._ZN4llvm10make_errorINS_3msf8MSFErrorEJNS1_14msf_error_codeERA20_KcEEENS_5ErrorEDpOT0_:

0000000000000000 <_ZN4llvm10make_errorINS_3msf8MSFErrorEJNS1_14msf_error_codeERA20_KcEEENS_5ErrorEDpOT0_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x20, x8
  14:	mov	x19, x1
  18:	ldr	w22, [x0]
  1c:	bl	0 <_ZN4llvm3msf14MSFErrCategoryEv>
  20:	mov	x21, x0
  24:	str	xzr, [sp, #56]
  28:	str	xzr, [sp, #64]
  2c:	mov	w0, #0x1                   	// #1
  30:	strb	w0, [sp, #72]
  34:	strb	w0, [sp, #73]
  38:	ldrb	w0, [x19]
  3c:	cbz	w0, 4c <_ZN4llvm10make_errorINS_3msf8MSFErrorEJNS1_14msf_error_codeERA20_KcEEENS_5ErrorEDpOT0_+0x4c>
  40:	str	x19, [sp, #56]
  44:	mov	w0, #0x3                   	// #3
  48:	strb	w0, [sp, #72]
  4c:	mov	x0, #0x40                  	// #64
  50:	bl	0 <_Znwm>
  54:	mov	x19, x0
  58:	add	x3, sp, #0x38
  5c:	mov	w1, w22
  60:	mov	x2, x21
  64:	bl	0 <_ZN4llvm11StringErrorC2ESt10error_codeRKNS_5TwineE>
  68:	adrp	x0, 0 <_ZN4llvm10make_errorINS_3msf8MSFErrorEJNS1_14msf_error_codeERA20_KcEEENS_5ErrorEDpOT0_>
  6c:	ldr	x0, [x0]
  70:	add	x0, x0, #0x10
  74:	str	x0, [x19]
  78:	orr	x19, x19, #0x1
  7c:	str	x19, [x20]
  80:	mov	x0, x20
  84:	ldp	x19, x20, [sp, #16]
  88:	ldp	x21, x22, [sp, #32]
  8c:	ldp	x29, x30, [sp], #80
  90:	ret

Disassembly of section .text._ZN4llvm10make_errorINS_3msf8MSFErrorEJNS1_14msf_error_codeERA30_KcEEENS_5ErrorEDpOT0_:

0000000000000000 <_ZN4llvm10make_errorINS_3msf8MSFErrorEJNS1_14msf_error_codeERA30_KcEEENS_5ErrorEDpOT0_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x20, x8
  14:	mov	x19, x1
  18:	ldr	w22, [x0]
  1c:	bl	0 <_ZN4llvm3msf14MSFErrCategoryEv>
  20:	mov	x21, x0
  24:	str	xzr, [sp, #56]
  28:	str	xzr, [sp, #64]
  2c:	mov	w0, #0x1                   	// #1
  30:	strb	w0, [sp, #72]
  34:	strb	w0, [sp, #73]
  38:	ldrb	w0, [x19]
  3c:	cbz	w0, 4c <_ZN4llvm10make_errorINS_3msf8MSFErrorEJNS1_14msf_error_codeERA30_KcEEENS_5ErrorEDpOT0_+0x4c>
  40:	str	x19, [sp, #56]
  44:	mov	w0, #0x3                   	// #3
  48:	strb	w0, [sp, #72]
  4c:	mov	x0, #0x40                  	// #64
  50:	bl	0 <_Znwm>
  54:	mov	x19, x0
  58:	add	x3, sp, #0x38
  5c:	mov	w1, w22
  60:	mov	x2, x21
  64:	bl	0 <_ZN4llvm11StringErrorC2ESt10error_codeRKNS_5TwineE>
  68:	adrp	x0, 0 <_ZN4llvm10make_errorINS_3msf8MSFErrorEJNS1_14msf_error_codeERA30_KcEEENS_5ErrorEDpOT0_>
  6c:	ldr	x0, [x0]
  70:	add	x0, x0, #0x10
  74:	str	x0, [x19]
  78:	orr	x19, x19, #0x1
  7c:	str	x19, [x20]
  80:	mov	x0, x20
  84:	ldp	x19, x20, [sp, #16]
  88:	ldp	x21, x22, [sp, #32]
  8c:	ldp	x29, x30, [sp], #80
  90:	ret

Disassembly of section .text._ZN4llvm10make_errorINS_3msf8MSFErrorEJNS1_14msf_error_codeERA48_KcEEENS_5ErrorEDpOT0_:

0000000000000000 <_ZN4llvm10make_errorINS_3msf8MSFErrorEJNS1_14msf_error_codeERA48_KcEEENS_5ErrorEDpOT0_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x20, x8
  14:	mov	x19, x1
  18:	ldr	w22, [x0]
  1c:	bl	0 <_ZN4llvm3msf14MSFErrCategoryEv>
  20:	mov	x21, x0
  24:	str	xzr, [sp, #56]
  28:	str	xzr, [sp, #64]
  2c:	mov	w0, #0x1                   	// #1
  30:	strb	w0, [sp, #72]
  34:	strb	w0, [sp, #73]
  38:	ldrb	w0, [x19]
  3c:	cbz	w0, 4c <_ZN4llvm10make_errorINS_3msf8MSFErrorEJNS1_14msf_error_codeERA48_KcEEENS_5ErrorEDpOT0_+0x4c>
  40:	str	x19, [sp, #56]
  44:	mov	w0, #0x3                   	// #3
  48:	strb	w0, [sp, #72]
  4c:	mov	x0, #0x40                  	// #64
  50:	bl	0 <_Znwm>
  54:	mov	x19, x0
  58:	add	x3, sp, #0x38
  5c:	mov	w1, w22
  60:	mov	x2, x21
  64:	bl	0 <_ZN4llvm11StringErrorC2ESt10error_codeRKNS_5TwineE>
  68:	adrp	x0, 0 <_ZN4llvm10make_errorINS_3msf8MSFErrorEJNS1_14msf_error_codeERA48_KcEEENS_5ErrorEDpOT0_>
  6c:	ldr	x0, [x0]
  70:	add	x0, x0, #0x10
  74:	str	x0, [x19]
  78:	orr	x19, x19, #0x1
  7c:	str	x19, [x20]
  80:	mov	x0, x20
  84:	ldp	x19, x20, [sp, #16]
  88:	ldp	x21, x22, [sp, #32]
  8c:	ldp	x29, x30, [sp], #80
  90:	ret

Disassembly of section .text._ZNSt6vectorIN4llvm7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	stp	x25, x26, [sp, #64]
  18:	mov	x25, x1
  1c:	mov	x26, x2
  20:	ldr	x23, [x0, #8]
  24:	ldr	x24, [x0]
  28:	sub	x1, x23, x24
  2c:	mov	x2, #0x1fffffffffffffff    	// #2305843009213693951
  30:	cmp	x2, x1, asr #2
  34:	b.eq	e0 <_ZNSt6vectorIN4llvm7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xe0>  // b.none
  38:	mov	x20, x0
  3c:	asr	x0, x1, #2
  40:	cmp	x0, #0x0
  44:	csinc	x3, x0, xzr, ne  // ne = any
  48:	adds	x3, x3, x0
  4c:	b.cs	118 <_ZNSt6vectorIN4llvm7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x118>  // b.hs, b.nlast
  50:	mov	x22, #0x1fffffffffffffff    	// #2305843009213693951
  54:	cmp	x3, x22
  58:	csel	x22, x3, x22, ls  // ls = plast
  5c:	sub	x19, x25, x24
  60:	mov	x21, #0x0                   	// #0
  64:	cbz	x3, 74 <_ZNSt6vectorIN4llvm7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x74>
  68:	lsl	x0, x22, #2
  6c:	bl	0 <_Znwm>
  70:	mov	x21, x0
  74:	ldr	w0, [x26]
  78:	str	w0, [x21, x19]
  7c:	cmp	x19, #0x0
  80:	b.gt	ec <_ZNSt6vectorIN4llvm7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xec>
  84:	add	x19, x19, #0x4
  88:	add	x19, x21, x19
  8c:	sub	x23, x23, x25
  90:	cmp	x23, #0x0
  94:	b.le	a8 <_ZNSt6vectorIN4llvm7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xa8>
  98:	mov	x2, x23
  9c:	mov	x1, x25
  a0:	mov	x0, x19
  a4:	bl	0 <memcpy>
  a8:	add	x19, x19, x23
  ac:	cbz	x24, b8 <_ZNSt6vectorIN4llvm7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xb8>
  b0:	mov	x0, x24
  b4:	bl	0 <_ZdlPv>
  b8:	str	x21, [x20]
  bc:	str	x19, [x20, #8]
  c0:	add	x21, x21, x22, lsl #2
  c4:	str	x21, [x20, #16]
  c8:	ldp	x19, x20, [sp, #16]
  cc:	ldp	x21, x22, [sp, #32]
  d0:	ldp	x23, x24, [sp, #48]
  d4:	ldp	x25, x26, [sp, #64]
  d8:	ldp	x29, x30, [sp], #80
  dc:	ret
  e0:	adrp	x0, 0 <_ZNSt6vectorIN4llvm7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
  e4:	add	x0, x0, #0x0
  e8:	bl	0 <_ZSt20__throw_length_errorPKc>
  ec:	mov	x2, x19
  f0:	mov	x1, x24
  f4:	mov	x0, x21
  f8:	bl	0 <memmove>
  fc:	add	x19, x19, #0x4
 100:	add	x19, x21, x19
 104:	sub	x23, x23, x25
 108:	cmp	x23, #0x0
 10c:	b.gt	98 <_ZNSt6vectorIN4llvm7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x98>
 110:	add	x19, x19, x23
 114:	b	b0 <_ZNSt6vectorIN4llvm7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xb0>
 118:	sub	x19, x25, x24
 11c:	mov	x22, #0x1fffffffffffffff    	// #2305843009213693951
 120:	b	68 <_ZNSt6vectorIN4llvm7support6detail31packed_endian_specific_integralIjLNS1_10endiannessE1ELm1ELm1EEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x68>

MSFError.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK12_GLOBAL__N_116MSFErrorCategory4nameEv>:
   0:	adrp	x0, 0 <_ZNK12_GLOBAL__N_116MSFErrorCategory4nameEv>
   4:	add	x0, x0, #0x0
   8:	ret

000000000000000c <_ZN4llvm14object_deleterIN12_GLOBAL__N_116MSFErrorCategoryEE4callEPv>:
   c:	cbz	x0, 2c <_ZN4llvm14object_deleterIN12_GLOBAL__N_116MSFErrorCategoryEE4callEPv+0x20>
  10:	stp	x29, x30, [sp, #-16]!
  14:	mov	x29, sp
  18:	ldr	x1, [x0]
  1c:	ldr	x1, [x1, #8]
  20:	blr	x1
  24:	ldp	x29, x30, [sp], #16
  28:	ret
  2c:	ret

0000000000000030 <_ZN4llvm14object_creatorIN12_GLOBAL__N_116MSFErrorCategoryEE4callEv>:
  30:	stp	x29, x30, [sp, #-16]!
  34:	mov	x29, sp
  38:	mov	x0, #0x8                   	// #8
  3c:	bl	0 <_Znwm>
  40:	adrp	x1, 0 <_ZNK12_GLOBAL__N_116MSFErrorCategory4nameEv>
  44:	add	x1, x1, #0x0
  48:	add	x1, x1, #0x10
  4c:	str	x1, [x0]
  50:	ldp	x29, x30, [sp], #16
  54:	ret

0000000000000058 <_ZN12_GLOBAL__N_116MSFErrorCategoryD1Ev>:
  58:	stp	x29, x30, [sp, #-16]!
  5c:	mov	x29, sp
  60:	adrp	x1, 0 <_ZNK12_GLOBAL__N_116MSFErrorCategory4nameEv>
  64:	add	x1, x1, #0x0
  68:	add	x1, x1, #0x10
  6c:	str	x1, [x0]
  70:	bl	0 <_ZNSt3_V214error_categoryD2Ev>
  74:	ldp	x29, x30, [sp], #16
  78:	ret

000000000000007c <_ZN12_GLOBAL__N_116MSFErrorCategoryD0Ev>:
  7c:	stp	x29, x30, [sp, #-32]!
  80:	mov	x29, sp
  84:	str	x19, [sp, #16]
  88:	mov	x19, x0
  8c:	adrp	x1, 0 <_ZNK12_GLOBAL__N_116MSFErrorCategory4nameEv>
  90:	add	x1, x1, #0x0
  94:	add	x1, x1, #0x10
  98:	str	x1, [x0]
  9c:	bl	0 <_ZNSt3_V214error_categoryD2Ev>
  a0:	mov	x1, #0x8                   	// #8
  a4:	mov	x0, x19
  a8:	bl	0 <_ZdlPvm>
  ac:	ldr	x19, [sp, #16]
  b0:	ldp	x29, x30, [sp], #32
  b4:	ret

00000000000000b8 <_ZN4llvm3msf14MSFErrCategoryEv>:
  b8:	adrp	x0, 0 <_ZNK12_GLOBAL__N_116MSFErrorCategory4nameEv>
  bc:	add	x0, x0, #0x0
  c0:	ldar	x0, [x0]
  c4:	cbz	x0, d8 <_ZN4llvm3msf14MSFErrCategoryEv+0x20>
  c8:	adrp	x0, 0 <_ZNK12_GLOBAL__N_116MSFErrorCategory4nameEv>
  cc:	add	x0, x0, #0x0
  d0:	ldr	x0, [x0]
  d4:	ret
  d8:	stp	x29, x30, [sp, #-16]!
  dc:	mov	x29, sp
  e0:	adrp	x2, 0 <_ZNK12_GLOBAL__N_116MSFErrorCategory4nameEv>
  e4:	add	x2, x2, #0x0
  e8:	adrp	x1, 0 <_ZNK12_GLOBAL__N_116MSFErrorCategory4nameEv>
  ec:	add	x1, x1, #0x0
  f0:	adrp	x0, 0 <_ZNK12_GLOBAL__N_116MSFErrorCategory4nameEv>
  f4:	add	x0, x0, #0x0
  f8:	bl	0 <_ZNK4llvm17ManagedStaticBase21RegisterManagedStaticEPFPvvEPFvS1_E>
  fc:	adrp	x0, 0 <_ZNK12_GLOBAL__N_116MSFErrorCategory4nameEv>
 100:	add	x0, x0, #0x0
 104:	ldr	x0, [x0]
 108:	ldp	x29, x30, [sp], #16
 10c:	ret

0000000000000110 <_ZNK12_GLOBAL__N_116MSFErrorCategory7messageEi>:
 110:	stp	x29, x30, [sp, #-32]!
 114:	mov	x29, sp
 118:	str	x19, [sp, #16]
 11c:	mov	x19, x8
 120:	cmp	w1, #0x4
 124:	b.eq	200 <_ZNK12_GLOBAL__N_116MSFErrorCategory7messageEi+0xf0>  // b.none
 128:	b.gt	1a0 <_ZNK12_GLOBAL__N_116MSFErrorCategory7messageEi+0x90>
 12c:	cmp	w1, #0x2
 130:	b.eq	1d8 <_ZNK12_GLOBAL__N_116MSFErrorCategory7messageEi+0xc8>  // b.none
 134:	cmp	w1, #0x3
 138:	b.ne	164 <_ZNK12_GLOBAL__N_116MSFErrorCategory7messageEi+0x54>  // b.any
 13c:	add	x0, x8, #0x10
 140:	str	x0, [x8]
 144:	mov	w3, #0x0                   	// #0
 148:	adrp	x2, 78 <_ZN12_GLOBAL__N_116MSFErrorCategoryD1Ev+0x20>
 14c:	add	x2, x2, #0x0
 150:	adrp	x1, 0 <_ZNK12_GLOBAL__N_116MSFErrorCategory4nameEv>
 154:	add	x1, x1, #0x0
 158:	mov	x0, x8
 15c:	bl	0 <_ZNK12_GLOBAL__N_116MSFErrorCategory4nameEv>
 160:	b	190 <_ZNK12_GLOBAL__N_116MSFErrorCategory7messageEi+0x80>
 164:	cmp	w1, #0x1
 168:	b.ne	250 <_ZNK12_GLOBAL__N_116MSFErrorCategory7messageEi+0x140>  // b.any
 16c:	add	x0, x8, #0x10
 170:	str	x0, [x8]
 174:	mov	w3, #0x0                   	// #0
 178:	adrp	x2, 10 <_ZN4llvm14object_deleterIN12_GLOBAL__N_116MSFErrorCategoryEE4callEPv+0x4>
 17c:	add	x2, x2, #0x0
 180:	adrp	x1, 0 <_ZNK12_GLOBAL__N_116MSFErrorCategory4nameEv>
 184:	add	x1, x1, #0x0
 188:	mov	x0, x8
 18c:	bl	0 <_ZNK12_GLOBAL__N_116MSFErrorCategory4nameEv>
 190:	mov	x0, x19
 194:	ldr	x19, [sp, #16]
 198:	ldp	x29, x30, [sp], #32
 19c:	ret
 1a0:	cmp	w1, #0x5
 1a4:	b.eq	228 <_ZNK12_GLOBAL__N_116MSFErrorCategory7messageEi+0x118>  // b.none
 1a8:	cmp	w1, #0x6
 1ac:	b.ne	250 <_ZNK12_GLOBAL__N_116MSFErrorCategory7messageEi+0x140>  // b.any
 1b0:	add	x0, x8, #0x10
 1b4:	str	x0, [x8]
 1b8:	mov	w3, #0x0                   	// #0
 1bc:	adrp	x2, f0 <_ZN4llvm3msf14MSFErrCategoryEv+0x38>
 1c0:	add	x2, x2, #0x0
 1c4:	adrp	x1, 0 <_ZNK12_GLOBAL__N_116MSFErrorCategory4nameEv>
 1c8:	add	x1, x1, #0x0
 1cc:	mov	x0, x8
 1d0:	bl	0 <_ZNK12_GLOBAL__N_116MSFErrorCategory4nameEv>
 1d4:	b	190 <_ZNK12_GLOBAL__N_116MSFErrorCategory7messageEi+0x80>
 1d8:	add	x0, x8, #0x10
 1dc:	str	x0, [x8]
 1e0:	mov	w3, #0x0                   	// #0
 1e4:	adrp	x2, 30 <_ZN4llvm14object_creatorIN12_GLOBAL__N_116MSFErrorCategoryEE4callEv>
 1e8:	add	x2, x2, #0x0
 1ec:	adrp	x1, 0 <_ZNK12_GLOBAL__N_116MSFErrorCategory4nameEv>
 1f0:	add	x1, x1, #0x0
 1f4:	mov	x0, x8
 1f8:	bl	0 <_ZNK12_GLOBAL__N_116MSFErrorCategory4nameEv>
 1fc:	b	190 <_ZNK12_GLOBAL__N_116MSFErrorCategory7messageEi+0x80>
 200:	add	x0, x8, #0x10
 204:	str	x0, [x8]
 208:	mov	w3, #0x0                   	// #0
 20c:	adrp	x2, a0 <_ZN12_GLOBAL__N_116MSFErrorCategoryD0Ev+0x24>
 210:	add	x2, x2, #0x0
 214:	adrp	x1, 0 <_ZNK12_GLOBAL__N_116MSFErrorCategory4nameEv>
 218:	add	x1, x1, #0x0
 21c:	mov	x0, x8
 220:	bl	0 <_ZNK12_GLOBAL__N_116MSFErrorCategory4nameEv>
 224:	b	190 <_ZNK12_GLOBAL__N_116MSFErrorCategory7messageEi+0x80>
 228:	add	x0, x8, #0x10
 22c:	str	x0, [x8]
 230:	mov	w3, #0x0                   	// #0
 234:	adrp	x2, c8 <_ZN4llvm3msf14MSFErrCategoryEv+0x10>
 238:	add	x2, x2, #0x0
 23c:	adrp	x1, 0 <_ZNK12_GLOBAL__N_116MSFErrorCategory4nameEv>
 240:	add	x1, x1, #0x0
 244:	mov	x0, x8
 248:	bl	0 <_ZNK12_GLOBAL__N_116MSFErrorCategory4nameEv>
 24c:	b	190 <_ZNK12_GLOBAL__N_116MSFErrorCategory7messageEi+0x80>
 250:	mov	w2, #0x27                  	// #39
 254:	adrp	x1, 0 <_ZNK12_GLOBAL__N_116MSFErrorCategory4nameEv>
 258:	add	x1, x1, #0x0
 25c:	adrp	x0, 0 <_ZNK12_GLOBAL__N_116MSFErrorCategory4nameEv>
 260:	add	x0, x0, #0x0
 264:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag:

0000000000000000 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	str	x21, [sp, #32]
  10:	cmp	x1, #0x0
  14:	ccmp	x1, x2, #0x4, eq  // eq = none
  18:	b.ne	68 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x68>  // b.any
  1c:	mov	x20, x0
  20:	mov	x21, x1
  24:	sub	x19, x2, x1
  28:	str	x19, [sp, #56]
  2c:	cmp	x19, #0xf
  30:	b.hi	74 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x74>  // b.pmore
  34:	ldr	x0, [x0]
  38:	cmp	x19, #0x1
  3c:	b.ne	9c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x9c>  // b.any
  40:	ldrb	w1, [x1]
  44:	strb	w1, [x0]
  48:	ldr	x0, [sp, #56]
  4c:	str	x0, [x20, #8]
  50:	ldr	x1, [x20]
  54:	strb	wzr, [x1, x0]
  58:	ldp	x19, x20, [sp, #16]
  5c:	ldr	x21, [sp, #32]
  60:	ldp	x29, x30, [sp], #64
  64:	ret
  68:	adrp	x0, 0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
  6c:	add	x0, x0, #0x0
  70:	bl	0 <_ZSt19__throw_logic_errorPKc>
  74:	mov	x2, #0x0                   	// #0
  78:	add	x1, sp, #0x38
  7c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  80:	str	x0, [x20]
  84:	ldr	x1, [sp, #56]
  88:	str	x1, [x20, #16]
  8c:	mov	x2, x19
  90:	mov	x1, x21
  94:	bl	0 <memcpy>
  98:	b	48 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x48>
  9c:	cbz	x19, 48 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x48>
  a0:	b	8c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x8c>
