
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//uname_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000007f8 <_init>:
 7f8:	stp	x29, x30, [sp, #-16]!
 7fc:	mov	x29, sp
 800:	bl	8e0 <call_weak_fn>
 804:	ldp	x29, x30, [sp], #16
 808:	ret

Disassembly of section .plt:

0000000000000810 <.plt>:
 810:	stp	x16, x30, [sp, #-16]!
 814:	adrp	x16, 11000 <__FRAME_END__+0x10080>
 818:	ldr	x17, [x16, #4088]
 81c:	add	x16, x16, #0xff8
 820:	br	x17
 824:	nop
 828:	nop
 82c:	nop

0000000000000830 <builtin_error@plt>:
 830:	adrp	x16, 12000 <builtin_error>
 834:	ldr	x17, [x16]
 838:	add	x16, x16, #0x0
 83c:	br	x17

0000000000000840 <__cxa_finalize@plt>:
 840:	adrp	x16, 12000 <builtin_error>
 844:	ldr	x17, [x16, #8]
 848:	add	x16, x16, #0x8
 84c:	br	x17

0000000000000850 <builtin_help@plt>:
 850:	adrp	x16, 12000 <builtin_error>
 854:	ldr	x17, [x16, #16]
 858:	add	x16, x16, #0x10
 85c:	br	x17

0000000000000860 <builtin_usage@plt>:
 860:	adrp	x16, 12000 <builtin_error>
 864:	ldr	x17, [x16, #24]
 868:	add	x16, x16, #0x18
 86c:	br	x17

0000000000000870 <strerror@plt>:
 870:	adrp	x16, 12000 <builtin_error>
 874:	ldr	x17, [x16, #32]
 878:	add	x16, x16, #0x20
 87c:	br	x17

0000000000000880 <__gmon_start__@plt>:
 880:	adrp	x16, 12000 <builtin_error>
 884:	ldr	x17, [x16, #40]
 888:	add	x16, x16, #0x28
 88c:	br	x17

0000000000000890 <internal_getopt@plt>:
 890:	adrp	x16, 12000 <builtin_error>
 894:	ldr	x17, [x16, #48]
 898:	add	x16, x16, #0x30
 89c:	br	x17

00000000000008a0 <reset_internal_getopt@plt>:
 8a0:	adrp	x16, 12000 <builtin_error>
 8a4:	ldr	x17, [x16, #56]
 8a8:	add	x16, x16, #0x38
 8ac:	br	x17

00000000000008b0 <printf@plt>:
 8b0:	adrp	x16, 12000 <builtin_error>
 8b4:	ldr	x17, [x16, #64]
 8b8:	add	x16, x16, #0x40
 8bc:	br	x17

00000000000008c0 <__errno_location@plt>:
 8c0:	adrp	x16, 12000 <builtin_error>
 8c4:	ldr	x17, [x16, #72]
 8c8:	add	x16, x16, #0x48
 8cc:	br	x17

00000000000008d0 <uname@plt>:
 8d0:	adrp	x16, 12000 <builtin_error>
 8d4:	ldr	x17, [x16, #80]
 8d8:	add	x16, x16, #0x50
 8dc:	br	x17

Disassembly of section .text:

00000000000008e0 <call_weak_fn>:
 8e0:	adrp	x0, 11000 <__FRAME_END__+0x10080>
 8e4:	ldr	x0, [x0, #4048]
 8e8:	cbz	x0, 8f0 <call_weak_fn+0x10>
 8ec:	b	880 <__gmon_start__@plt>
 8f0:	ret

00000000000008f4 <deregister_tm_clones>:
 8f4:	stp	x29, x30, [sp, #-32]!
 8f8:	mov	x29, sp
 8fc:	adrp	x0, 12000 <builtin_error>
 900:	add	x0, x0, #0xb0
 904:	str	x0, [sp, #24]
 908:	ldr	x0, [sp, #24]
 90c:	str	x0, [sp, #24]
 910:	ldr	x1, [sp, #24]
 914:	adrp	x0, 12000 <builtin_error>
 918:	add	x0, x0, #0xb0
 91c:	cmp	x1, x0
 920:	b.eq	958 <deregister_tm_clones+0x64>  // b.none
 924:	adrp	x0, 11000 <__FRAME_END__+0x10080>
 928:	ldr	x0, [x0, #4032]
 92c:	str	x0, [sp, #16]
 930:	ldr	x0, [sp, #16]
 934:	str	x0, [sp, #16]
 938:	ldr	x0, [sp, #16]
 93c:	cmp	x0, #0x0
 940:	b.eq	95c <deregister_tm_clones+0x68>  // b.none
 944:	ldr	x1, [sp, #16]
 948:	adrp	x0, 12000 <builtin_error>
 94c:	add	x0, x0, #0xb0
 950:	blr	x1
 954:	b	95c <deregister_tm_clones+0x68>
 958:	nop
 95c:	ldp	x29, x30, [sp], #32
 960:	ret

0000000000000964 <register_tm_clones>:
 964:	stp	x29, x30, [sp, #-48]!
 968:	mov	x29, sp
 96c:	adrp	x0, 12000 <builtin_error>
 970:	add	x0, x0, #0xb0
 974:	str	x0, [sp, #40]
 978:	ldr	x0, [sp, #40]
 97c:	str	x0, [sp, #40]
 980:	ldr	x1, [sp, #40]
 984:	adrp	x0, 12000 <builtin_error>
 988:	add	x0, x0, #0xb0
 98c:	sub	x0, x1, x0
 990:	asr	x0, x0, #3
 994:	lsr	x1, x0, #63
 998:	add	x0, x1, x0
 99c:	asr	x0, x0, #1
 9a0:	str	x0, [sp, #32]
 9a4:	ldr	x0, [sp, #32]
 9a8:	cmp	x0, #0x0
 9ac:	b.eq	9e8 <register_tm_clones+0x84>  // b.none
 9b0:	adrp	x0, 11000 <__FRAME_END__+0x10080>
 9b4:	ldr	x0, [x0, #4064]
 9b8:	str	x0, [sp, #24]
 9bc:	ldr	x0, [sp, #24]
 9c0:	str	x0, [sp, #24]
 9c4:	ldr	x0, [sp, #24]
 9c8:	cmp	x0, #0x0
 9cc:	b.eq	9ec <register_tm_clones+0x88>  // b.none
 9d0:	ldr	x2, [sp, #24]
 9d4:	ldr	x1, [sp, #32]
 9d8:	adrp	x0, 12000 <builtin_error>
 9dc:	add	x0, x0, #0xb0
 9e0:	blr	x2
 9e4:	b	9ec <register_tm_clones+0x88>
 9e8:	nop
 9ec:	ldp	x29, x30, [sp], #48
 9f0:	ret

00000000000009f4 <__do_global_dtors_aux>:
 9f4:	stp	x29, x30, [sp, #-16]!
 9f8:	mov	x29, sp
 9fc:	adrp	x0, 12000 <builtin_error>
 a00:	add	x0, x0, #0xb0
 a04:	ldrb	w0, [x0]
 a08:	and	x0, x0, #0xff
 a0c:	cmp	x0, #0x0
 a10:	b.ne	a4c <__do_global_dtors_aux+0x58>  // b.any
 a14:	adrp	x0, 11000 <__FRAME_END__+0x10080>
 a18:	ldr	x0, [x0, #4040]
 a1c:	cmp	x0, #0x0
 a20:	b.eq	a34 <__do_global_dtors_aux+0x40>  // b.none
 a24:	adrp	x0, 12000 <builtin_error>
 a28:	add	x0, x0, #0x58
 a2c:	ldr	x0, [x0]
 a30:	bl	840 <__cxa_finalize@plt>
 a34:	bl	8f4 <deregister_tm_clones>
 a38:	adrp	x0, 12000 <builtin_error>
 a3c:	add	x0, x0, #0xb0
 a40:	mov	w1, #0x1                   	// #1
 a44:	strb	w1, [x0]
 a48:	b	a50 <__do_global_dtors_aux+0x5c>
 a4c:	nop
 a50:	ldp	x29, x30, [sp], #16
 a54:	ret

0000000000000a58 <frame_dummy>:
 a58:	stp	x29, x30, [sp, #-16]!
 a5c:	mov	x29, sp
 a60:	bl	964 <register_tm_clones>
 a64:	nop
 a68:	ldp	x29, x30, [sp], #16
 a6c:	ret

0000000000000a70 <uname_builtin>:
 a70:	stp	x29, x30, [sp, #-432]!
 a74:	mov	x29, sp
 a78:	str	x0, [sp, #24]
 a7c:	adrp	x0, 12000 <builtin_error>
 a80:	add	x0, x0, #0xb4
 a84:	str	wzr, [x0]
 a88:	bl	8a0 <reset_internal_getopt@plt>
 a8c:	b	c10 <uname_builtin+0x1a0>
 a90:	ldr	w0, [sp, #428]
 a94:	cmp	w0, #0x76
 a98:	b.eq	bd8 <uname_builtin+0x168>  // b.none
 a9c:	ldr	w0, [sp, #428]
 aa0:	cmp	w0, #0x76
 aa4:	b.gt	c04 <uname_builtin+0x194>
 aa8:	ldr	w0, [sp, #428]
 aac:	cmp	w0, #0x73
 ab0:	b.eq	bb8 <uname_builtin+0x148>  // b.none
 ab4:	ldr	w0, [sp, #428]
 ab8:	cmp	w0, #0x73
 abc:	b.gt	c04 <uname_builtin+0x194>
 ac0:	ldr	w0, [sp, #428]
 ac4:	cmp	w0, #0x72
 ac8:	b.eq	b98 <uname_builtin+0x128>  // b.none
 acc:	ldr	w0, [sp, #428]
 ad0:	cmp	w0, #0x72
 ad4:	b.gt	c04 <uname_builtin+0x194>
 ad8:	ldr	w0, [sp, #428]
 adc:	cmp	w0, #0x70
 ae0:	b.eq	b58 <uname_builtin+0xe8>  // b.none
 ae4:	ldr	w0, [sp, #428]
 ae8:	cmp	w0, #0x70
 aec:	b.gt	c04 <uname_builtin+0x194>
 af0:	ldr	w0, [sp, #428]
 af4:	cmp	w0, #0x6e
 af8:	b.eq	b78 <uname_builtin+0x108>  // b.none
 afc:	ldr	w0, [sp, #428]
 b00:	cmp	w0, #0x6e
 b04:	b.gt	c04 <uname_builtin+0x194>
 b08:	ldr	w0, [sp, #428]
 b0c:	cmp	w0, #0x6d
 b10:	b.eq	b58 <uname_builtin+0xe8>  // b.none
 b14:	ldr	w0, [sp, #428]
 b18:	cmp	w0, #0x6d
 b1c:	b.gt	c04 <uname_builtin+0x194>
 b20:	ldr	w0, [sp, #428]
 b24:	cmn	w0, #0x63
 b28:	b.eq	bf8 <uname_builtin+0x188>  // b.none
 b2c:	ldr	w0, [sp, #428]
 b30:	cmp	w0, #0x61
 b34:	b.ne	c04 <uname_builtin+0x194>  // b.any
 b38:	adrp	x0, 12000 <builtin_error>
 b3c:	add	x0, x0, #0xb4
 b40:	ldr	w0, [x0]
 b44:	orr	w1, w0, #0x1f
 b48:	adrp	x0, 12000 <builtin_error>
 b4c:	add	x0, x0, #0xb4
 b50:	str	w1, [x0]
 b54:	b	c10 <uname_builtin+0x1a0>
 b58:	adrp	x0, 12000 <builtin_error>
 b5c:	add	x0, x0, #0xb4
 b60:	ldr	w0, [x0]
 b64:	orr	w1, w0, #0x10
 b68:	adrp	x0, 12000 <builtin_error>
 b6c:	add	x0, x0, #0xb4
 b70:	str	w1, [x0]
 b74:	b	c10 <uname_builtin+0x1a0>
 b78:	adrp	x0, 12000 <builtin_error>
 b7c:	add	x0, x0, #0xb4
 b80:	ldr	w0, [x0]
 b84:	orr	w1, w0, #0x2
 b88:	adrp	x0, 12000 <builtin_error>
 b8c:	add	x0, x0, #0xb4
 b90:	str	w1, [x0]
 b94:	b	c10 <uname_builtin+0x1a0>
 b98:	adrp	x0, 12000 <builtin_error>
 b9c:	add	x0, x0, #0xb4
 ba0:	ldr	w0, [x0]
 ba4:	orr	w1, w0, #0x4
 ba8:	adrp	x0, 12000 <builtin_error>
 bac:	add	x0, x0, #0xb4
 bb0:	str	w1, [x0]
 bb4:	b	c10 <uname_builtin+0x1a0>
 bb8:	adrp	x0, 12000 <builtin_error>
 bbc:	add	x0, x0, #0xb4
 bc0:	ldr	w0, [x0]
 bc4:	orr	w1, w0, #0x1
 bc8:	adrp	x0, 12000 <builtin_error>
 bcc:	add	x0, x0, #0xb4
 bd0:	str	w1, [x0]
 bd4:	b	c10 <uname_builtin+0x1a0>
 bd8:	adrp	x0, 12000 <builtin_error>
 bdc:	add	x0, x0, #0xb4
 be0:	ldr	w0, [x0]
 be4:	orr	w1, w0, #0x8
 be8:	adrp	x0, 12000 <builtin_error>
 bec:	add	x0, x0, #0xb4
 bf0:	str	w1, [x0]
 bf4:	b	c10 <uname_builtin+0x1a0>
 bf8:	bl	850 <builtin_help@plt>
 bfc:	mov	w0, #0x102                 	// #258
 c00:	b	d14 <uname_builtin+0x2a4>
 c04:	bl	860 <builtin_usage@plt>
 c08:	mov	w0, #0x102                 	// #258
 c0c:	b	d14 <uname_builtin+0x2a4>
 c10:	adrp	x0, 0 <_init-0x7f8>
 c14:	add	x1, x0, #0xdc0
 c18:	ldr	x0, [sp, #24]
 c1c:	bl	890 <internal_getopt@plt>
 c20:	str	w0, [sp, #428]
 c24:	ldr	w0, [sp, #428]
 c28:	cmn	w0, #0x1
 c2c:	b.ne	a90 <uname_builtin+0x20>  // b.any
 c30:	adrp	x0, 11000 <__FRAME_END__+0x10080>
 c34:	ldr	x0, [x0, #4056]
 c38:	ldr	x0, [x0]
 c3c:	str	x0, [sp, #24]
 c40:	ldr	x0, [sp, #24]
 c44:	cmp	x0, #0x0
 c48:	b.eq	c58 <uname_builtin+0x1e8>  // b.none
 c4c:	bl	860 <builtin_usage@plt>
 c50:	mov	w0, #0x102                 	// #258
 c54:	b	d14 <uname_builtin+0x2a4>
 c58:	adrp	x0, 12000 <builtin_error>
 c5c:	add	x0, x0, #0xb4
 c60:	ldr	w0, [x0]
 c64:	cmp	w0, #0x0
 c68:	b.ne	c7c <uname_builtin+0x20c>  // b.any
 c6c:	adrp	x0, 12000 <builtin_error>
 c70:	add	x0, x0, #0xb4
 c74:	mov	w1, #0x1                   	// #1
 c78:	str	w1, [x0]
 c7c:	add	x0, sp, #0x20
 c80:	bl	8d0 <uname@plt>
 c84:	cmp	w0, #0x0
 c88:	b.ge	cb0 <uname_builtin+0x240>  // b.tcont
 c8c:	bl	8c0 <__errno_location@plt>
 c90:	ldr	w0, [x0]
 c94:	bl	870 <strerror@plt>
 c98:	mov	x1, x0
 c9c:	adrp	x0, 0 <_init-0x7f8>
 ca0:	add	x0, x0, #0xdc8
 ca4:	bl	830 <builtin_error@plt>
 ca8:	mov	w0, #0x1                   	// #1
 cac:	b	d14 <uname_builtin+0x2a4>
 cb0:	add	x0, sp, #0x20
 cb4:	mov	x1, x0
 cb8:	mov	w0, #0x1                   	// #1
 cbc:	bl	d1c <uprint>
 cc0:	add	x0, sp, #0x20
 cc4:	add	x0, x0, #0x41
 cc8:	mov	x1, x0
 ccc:	mov	w0, #0x2                   	// #2
 cd0:	bl	d1c <uprint>
 cd4:	add	x0, sp, #0x20
 cd8:	add	x0, x0, #0x82
 cdc:	mov	x1, x0
 ce0:	mov	w0, #0x4                   	// #4
 ce4:	bl	d1c <uprint>
 ce8:	add	x0, sp, #0x20
 cec:	add	x0, x0, #0xc3
 cf0:	mov	x1, x0
 cf4:	mov	w0, #0x8                   	// #8
 cf8:	bl	d1c <uprint>
 cfc:	add	x0, sp, #0x20
 d00:	add	x0, x0, #0x104
 d04:	mov	x1, x0
 d08:	mov	w0, #0x10                  	// #16
 d0c:	bl	d1c <uprint>
 d10:	mov	w0, #0x0                   	// #0
 d14:	ldp	x29, x30, [sp], #432
 d18:	ret

0000000000000d1c <uprint>:
 d1c:	stp	x29, x30, [sp, #-32]!
 d20:	mov	x29, sp
 d24:	str	w0, [sp, #28]
 d28:	str	x1, [sp, #16]
 d2c:	adrp	x0, 12000 <builtin_error>
 d30:	add	x0, x0, #0xb4
 d34:	ldr	w1, [x0]
 d38:	ldr	w0, [sp, #28]
 d3c:	and	w0, w1, w0
 d40:	cmp	w0, #0x0
 d44:	b.eq	da0 <uprint+0x84>  // b.none
 d48:	ldr	w0, [sp, #28]
 d4c:	mvn	w1, w0
 d50:	adrp	x0, 12000 <builtin_error>
 d54:	add	x0, x0, #0xb4
 d58:	ldr	w0, [x0]
 d5c:	and	w1, w1, w0
 d60:	adrp	x0, 12000 <builtin_error>
 d64:	add	x0, x0, #0xb4
 d68:	str	w1, [x0]
 d6c:	adrp	x0, 12000 <builtin_error>
 d70:	add	x0, x0, #0xb4
 d74:	ldr	w0, [x0]
 d78:	cmp	w0, #0x0
 d7c:	b.eq	d88 <uprint+0x6c>  // b.none
 d80:	mov	w0, #0x20                  	// #32
 d84:	b	d8c <uprint+0x70>
 d88:	mov	w0, #0xa                   	// #10
 d8c:	mov	w2, w0
 d90:	ldr	x1, [sp, #16]
 d94:	adrp	x0, 0 <_init-0x7f8>
 d98:	add	x0, x0, #0xde8
 d9c:	bl	8b0 <printf@plt>
 da0:	nop
 da4:	ldp	x29, x30, [sp], #32
 da8:	ret

Disassembly of section .fini:

0000000000000dac <_fini>:
 dac:	stp	x29, x30, [sp, #-16]!
 db0:	mov	x29, sp
 db4:	ldp	x29, x30, [sp], #16
 db8:	ret
