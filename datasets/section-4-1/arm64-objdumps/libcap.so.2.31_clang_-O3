
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libcap.so.2.31_clang_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000001938 <.init>:
    1938:	stp	x29, x30, [sp, #-16]!
    193c:	mov	x29, sp
    1940:	bl	1be0 <syscall@plt+0x10>
    1944:	ldp	x29, x30, [sp], #16
    1948:	ret

Disassembly of section .plt:

0000000000001950 <removexattr@plt-0x20>:
    1950:	stp	x16, x30, [sp, #-16]!
    1954:	adrp	x16, 14000 <cap_set_nsowner@@Base+0xf910>
    1958:	ldr	x17, [x16, #4088]
    195c:	add	x16, x16, #0xff8
    1960:	br	x17
    1964:	nop
    1968:	nop
    196c:	nop

0000000000001970 <removexattr@plt>:
    1970:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1974:	ldr	x17, [x16]
    1978:	add	x16, x16, #0x0
    197c:	br	x17

0000000000001980 <setuid@plt>:
    1980:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1984:	ldr	x17, [x16, #8]
    1988:	add	x16, x16, #0x8
    198c:	br	x17

0000000000001990 <strtoul@plt>:
    1990:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1994:	ldr	x17, [x16, #16]
    1998:	add	x16, x16, #0x10
    199c:	br	x17

00000000000019a0 <strlen@plt>:
    19a0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    19a4:	ldr	x17, [x16, #24]
    19a8:	add	x16, x16, #0x18
    19ac:	br	x17

00000000000019b0 <psx_load_syscalls@plt>:
    19b0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    19b4:	ldr	x17, [x16, #32]
    19b8:	add	x16, x16, #0x20
    19bc:	br	x17

00000000000019c0 <cap_clear_flag@plt>:
    19c0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    19c4:	ldr	x17, [x16, #40]
    19c8:	add	x16, x16, #0x28
    19cc:	br	x17

00000000000019d0 <cap_max_bits@plt>:
    19d0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    19d4:	ldr	x17, [x16, #48]
    19d8:	add	x16, x16, #0x30
    19dc:	br	x17

00000000000019e0 <_libcap_strdup@plt>:
    19e0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    19e4:	ldr	x17, [x16, #56]
    19e8:	add	x16, x16, #0x38
    19ec:	br	x17

00000000000019f0 <__cxa_finalize@plt>:
    19f0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    19f4:	ldr	x17, [x16, #64]
    19f8:	add	x16, x16, #0x40
    19fc:	br	x17

0000000000001a00 <sprintf@plt>:
    1a00:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1a04:	ldr	x17, [x16, #72]
    1a08:	add	x16, x16, #0x48
    1a0c:	br	x17

0000000000001a10 <asprintf@plt>:
    1a10:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1a14:	ldr	x17, [x16, #80]
    1a18:	add	x16, x16, #0x50
    1a1c:	br	x17

0000000000001a20 <__ctype_tolower_loc@plt>:
    1a20:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1a24:	ldr	x17, [x16, #88]
    1a28:	add	x16, x16, #0x58
    1a2c:	br	x17

0000000000001a30 <capset@plt>:
    1a30:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1a34:	ldr	x17, [x16, #96]
    1a38:	add	x16, x16, #0x60
    1a3c:	br	x17

0000000000001a40 <malloc@plt>:
    1a40:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1a44:	ldr	x17, [x16, #104]
    1a48:	add	x16, x16, #0x68
    1a4c:	br	x17

0000000000001a50 <cap_set_syscall@plt>:
    1a50:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1a54:	ldr	x17, [x16, #112]
    1a58:	add	x16, x16, #0x70
    1a5c:	br	x17

0000000000001a60 <setxattr@plt>:
    1a60:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1a64:	ldr	x17, [x16, #120]
    1a68:	add	x16, x16, #0x78
    1a6c:	br	x17

0000000000001a70 <cap_get_bound@plt>:
    1a70:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1a74:	ldr	x17, [x16, #128]
    1a78:	add	x16, x16, #0x80
    1a7c:	br	x17

0000000000001a80 <memset@plt>:
    1a80:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1a84:	ldr	x17, [x16, #136]
    1a88:	add	x16, x16, #0x88
    1a8c:	br	x17

0000000000001a90 <calloc@plt>:
    1a90:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1a94:	ldr	x17, [x16, #144]
    1a98:	add	x16, x16, #0x90
    1a9c:	br	x17

0000000000001aa0 <__gmon_start__@plt>:
    1aa0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1aa4:	ldr	x17, [x16, #152]
    1aa8:	add	x16, x16, #0x98
    1aac:	br	x17

0000000000001ab0 <fremovexattr@plt>:
    1ab0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1ab4:	ldr	x17, [x16, #160]
    1ab8:	add	x16, x16, #0xa0
    1abc:	br	x17

0000000000001ac0 <setgid@plt>:
    1ac0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1ac4:	ldr	x17, [x16, #168]
    1ac8:	add	x16, x16, #0xa8
    1acc:	br	x17

0000000000001ad0 <cap_init@plt>:
    1ad0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1ad4:	ldr	x17, [x16, #176]
    1ad8:	add	x16, x16, #0xb0
    1adc:	br	x17

0000000000001ae0 <getxattr@plt>:
    1ae0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1ae4:	ldr	x17, [x16, #184]
    1ae8:	add	x16, x16, #0xb8
    1aec:	br	x17

0000000000001af0 <__ctype_b_loc@plt>:
    1af0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1af4:	ldr	x17, [x16, #192]
    1af8:	add	x16, x16, #0xc0
    1afc:	br	x17

0000000000001b00 <__lxstat64@plt>:
    1b00:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1b04:	ldr	x17, [x16, #200]
    1b08:	add	x16, x16, #0xc8
    1b0c:	br	x17

0000000000001b10 <free@plt>:
    1b10:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1b14:	ldr	x17, [x16, #208]
    1b18:	add	x16, x16, #0xd0
    1b1c:	br	x17

0000000000001b20 <__fxstat64@plt>:
    1b20:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1b24:	ldr	x17, [x16, #216]
    1b28:	add	x16, x16, #0xd8
    1b2c:	br	x17

0000000000001b30 <fgetxattr@plt>:
    1b30:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1b34:	ldr	x17, [x16, #224]
    1b38:	add	x16, x16, #0xe0
    1b3c:	br	x17

0000000000001b40 <setgroups@plt>:
    1b40:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1b44:	ldr	x17, [x16, #232]
    1b48:	add	x16, x16, #0xe8
    1b4c:	br	x17

0000000000001b50 <strcpy@plt>:
    1b50:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1b54:	ldr	x17, [x16, #240]
    1b58:	add	x16, x16, #0xf0
    1b5c:	br	x17

0000000000001b60 <fsetxattr@plt>:
    1b60:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1b64:	ldr	x17, [x16, #248]
    1b68:	add	x16, x16, #0xf8
    1b6c:	br	x17

0000000000001b70 <cap_free@plt>:
    1b70:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1b74:	ldr	x17, [x16, #256]
    1b78:	add	x16, x16, #0x100
    1b7c:	br	x17

0000000000001b80 <cap_set_flag@plt>:
    1b80:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1b84:	ldr	x17, [x16, #264]
    1b88:	add	x16, x16, #0x108
    1b8c:	br	x17

0000000000001b90 <cap_compare@plt>:
    1b90:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1b94:	ldr	x17, [x16, #272]
    1b98:	add	x16, x16, #0x110
    1b9c:	br	x17

0000000000001ba0 <capget@plt>:
    1ba0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1ba4:	ldr	x17, [x16, #280]
    1ba8:	add	x16, x16, #0x118
    1bac:	br	x17

0000000000001bb0 <__errno_location@plt>:
    1bb0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1bb4:	ldr	x17, [x16, #288]
    1bb8:	add	x16, x16, #0x120
    1bbc:	br	x17

0000000000001bc0 <prctl@plt>:
    1bc0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1bc4:	ldr	x17, [x16, #296]
    1bc8:	add	x16, x16, #0x128
    1bcc:	br	x17

0000000000001bd0 <syscall@plt>:
    1bd0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1bd4:	ldr	x17, [x16, #304]
    1bd8:	add	x16, x16, #0x130
    1bdc:	br	x17

Disassembly of section .text:

0000000000001be0 <cap_max_bits@@Base-0x164>:
    1be0:	adrp	x0, 14000 <cap_set_nsowner@@Base+0xf910>
    1be4:	ldr	x0, [x0, #4056]
    1be8:	cbz	x0, 1bf0 <syscall@plt+0x20>
    1bec:	b	1aa0 <__gmon_start__@plt>
    1bf0:	ret
    1bf4:	nop
    1bf8:	adrp	x0, 15000 <cap_set_nsowner@@Base+0x10910>
    1bfc:	add	x0, x0, #0x280
    1c00:	adrp	x1, 15000 <cap_set_nsowner@@Base+0x10910>
    1c04:	add	x1, x1, #0x280
    1c08:	cmp	x1, x0
    1c0c:	b.eq	1c24 <syscall@plt+0x54>  // b.none
    1c10:	adrp	x1, 14000 <cap_set_nsowner@@Base+0xf910>
    1c14:	ldr	x1, [x1, #4040]
    1c18:	cbz	x1, 1c24 <syscall@plt+0x54>
    1c1c:	mov	x16, x1
    1c20:	br	x16
    1c24:	ret
    1c28:	adrp	x0, 15000 <cap_set_nsowner@@Base+0x10910>
    1c2c:	add	x0, x0, #0x280
    1c30:	adrp	x1, 15000 <cap_set_nsowner@@Base+0x10910>
    1c34:	add	x1, x1, #0x280
    1c38:	sub	x1, x1, x0
    1c3c:	lsr	x2, x1, #63
    1c40:	add	x1, x2, x1, asr #3
    1c44:	cmp	xzr, x1, asr #1
    1c48:	asr	x1, x1, #1
    1c4c:	b.eq	1c64 <syscall@plt+0x94>  // b.none
    1c50:	adrp	x2, 14000 <cap_set_nsowner@@Base+0xf910>
    1c54:	ldr	x2, [x2, #4064]
    1c58:	cbz	x2, 1c64 <syscall@plt+0x94>
    1c5c:	mov	x16, x2
    1c60:	br	x16
    1c64:	ret
    1c68:	stp	x29, x30, [sp, #-32]!
    1c6c:	mov	x29, sp
    1c70:	str	x19, [sp, #16]
    1c74:	adrp	x19, 15000 <cap_set_nsowner@@Base+0x10910>
    1c78:	ldrb	w0, [x19, #640]
    1c7c:	cbnz	w0, 1ca4 <syscall@plt+0xd4>
    1c80:	adrp	x0, 14000 <cap_set_nsowner@@Base+0xf910>
    1c84:	ldr	x0, [x0, #4048]
    1c88:	cbz	x0, 1c98 <syscall@plt+0xc8>
    1c8c:	adrp	x0, 15000 <cap_set_nsowner@@Base+0x10910>
    1c90:	ldr	x0, [x0, #312]
    1c94:	bl	19f0 <__cxa_finalize@plt>
    1c98:	bl	1bf8 <syscall@plt+0x28>
    1c9c:	mov	w0, #0x1                   	// #1
    1ca0:	strb	w0, [x19, #640]
    1ca4:	ldr	x19, [sp, #16]
    1ca8:	ldp	x29, x30, [sp], #32
    1cac:	ret
    1cb0:	b	1c28 <syscall@plt+0x58>
    1cb4:	stp	x29, x30, [sp, #-48]!
    1cb8:	stp	x22, x21, [sp, #16]
    1cbc:	stp	x20, x19, [sp, #32]
    1cc0:	mov	x29, sp
    1cc4:	adrp	x20, 15000 <cap_set_nsowner@@Base+0x10910>
    1cc8:	ldr	w8, [x20, #644]
    1ccc:	cbz	w8, 1ce0 <syscall@plt+0x110>
    1cd0:	ldp	x20, x19, [sp, #32]
    1cd4:	ldp	x22, x21, [sp, #16]
    1cd8:	ldp	x29, x30, [sp], #48
    1cdc:	ret
    1ce0:	mov	x0, xzr
    1ce4:	mov	x1, xzr
    1ce8:	bl	1a50 <cap_set_syscall@plt>
    1cec:	mov	w21, wzr
    1cf0:	mov	w22, #0x40                  	// #64
    1cf4:	add	w8, w21, w22
    1cf8:	cmp	w8, #0x0
    1cfc:	cinc	w8, w8, lt  // lt = tstop
    1d00:	asr	w19, w8, #1
    1d04:	mov	w0, w19
    1d08:	bl	1a70 <cap_get_bound@plt>
    1d0c:	sub	w8, w19, #0x1
    1d10:	cmp	w0, #0x0
    1d14:	csel	w22, w8, w22, lt  // lt = tstop
    1d18:	csinc	w21, w21, w19, lt  // lt = tstop
    1d1c:	cmp	w21, w22
    1d20:	b.le	1cf4 <syscall@plt+0x124>
    1d24:	cmp	w21, #0x0
    1d28:	mov	w8, #0x26                  	// #38
    1d2c:	csel	w8, w8, w21, eq  // eq = none
    1d30:	str	w8, [x20, #644]
    1d34:	ldp	x20, x19, [sp, #32]
    1d38:	ldp	x22, x21, [sp, #16]
    1d3c:	ldp	x29, x30, [sp], #48
    1d40:	ret

0000000000001d44 <cap_max_bits@@Base>:
    1d44:	adrp	x8, 15000 <cap_set_nsowner@@Base+0x10910>
    1d48:	ldr	w0, [x8, #644]
    1d4c:	ret

0000000000001d50 <cap_init@@Base>:
    1d50:	stp	x29, x30, [sp, #-32]!
    1d54:	stp	x20, x19, [sp, #16]
    1d58:	mov	x29, sp
    1d5c:	mov	w0, #0x1                   	// #1
    1d60:	mov	w1, #0x28                  	// #40
    1d64:	bl	1a90 <calloc@plt>
    1d68:	cbz	x0, 1e00 <cap_init@@Base+0xb0>
    1d6c:	adrp	x8, 4000 <cap_to_text@@Base+0x52c>
    1d70:	ldr	d0, [x8, #1808]
    1d74:	mov	x19, x0
    1d78:	mov	x20, x0
    1d7c:	mov	x1, xzr
    1d80:	str	d0, [x19], #4
    1d84:	mov	x0, x19
    1d88:	bl	1ba0 <capget@plt>
    1d8c:	ldr	w8, [x19]
    1d90:	mov	w9, #0x330                 	// #816
    1d94:	movk	w9, #0x1998, lsl #16
    1d98:	cmp	w8, w9
    1d9c:	b.eq	1df0 <cap_init@@Base+0xa0>  // b.none
    1da0:	mov	w9, #0x1026                	// #4134
    1da4:	movk	w9, #0x2007, lsl #16
    1da8:	cmp	w8, w9
    1dac:	b.eq	1df0 <cap_init@@Base+0xa0>  // b.none
    1db0:	mov	w9, #0x522                 	// #1314
    1db4:	movk	w9, #0x2008, lsl #16
    1db8:	cmp	w8, w9
    1dbc:	b.eq	1df0 <cap_init@@Base+0xa0>  // b.none
    1dc0:	ldr	w8, [x20]
    1dc4:	mov	w9, #0x95d0                	// #38352
    1dc8:	movk	w9, #0xca, lsl #16
    1dcc:	cmp	w8, w9
    1dd0:	b.eq	1de4 <cap_init@@Base+0x94>  // b.none
    1dd4:	mov	w9, #0x90d0                	// #37072
    1dd8:	movk	w9, #0xca, lsl #16
    1ddc:	cmp	w8, w9
    1de0:	b.ne	1e20 <cap_init@@Base+0xd0>  // b.any
    1de4:	mov	x0, x20
    1de8:	bl	1b10 <free@plt>
    1dec:	mov	x19, xzr
    1df0:	mov	x0, x19
    1df4:	ldp	x20, x19, [sp, #16]
    1df8:	ldp	x29, x30, [sp], #32
    1dfc:	ret
    1e00:	bl	1bb0 <__errno_location@plt>
    1e04:	mov	x19, xzr
    1e08:	mov	w8, #0xc                   	// #12
    1e0c:	str	w8, [x0]
    1e10:	mov	x0, x19
    1e14:	ldp	x20, x19, [sp, #16]
    1e18:	ldp	x29, x30, [sp], #32
    1e1c:	ret
    1e20:	bl	1bb0 <__errno_location@plt>
    1e24:	mov	x19, xzr
    1e28:	mov	w8, #0x16                  	// #22
    1e2c:	b	1e0c <cap_init@@Base+0xbc>

0000000000001e30 <cap_free@@Base>:
    1e30:	stp	x29, x30, [sp, #-32]!
    1e34:	str	x19, [sp, #16]
    1e38:	mov	x29, sp
    1e3c:	cbz	x0, 1e98 <cap_free@@Base+0x68>
    1e40:	mov	x19, x0
    1e44:	ldr	w8, [x19, #-4]!
    1e48:	mov	w9, #0x95d0                	// #38352
    1e4c:	movk	w9, #0xca, lsl #16
    1e50:	cmp	w8, w9
    1e54:	b.eq	1e78 <cap_free@@Base+0x48>  // b.none
    1e58:	mov	w9, #0x90d0                	// #37072
    1e5c:	movk	w9, #0xca, lsl #16
    1e60:	cmp	w8, w9
    1e64:	b.ne	1ea4 <cap_free@@Base+0x74>  // b.any
    1e68:	movi	v0.2d, #0x0
    1e6c:	str	xzr, [x19, #32]
    1e70:	stp	q0, q0, [x19]
    1e74:	b	1e8c <cap_free@@Base+0x5c>
    1e78:	bl	19a0 <strlen@plt>
    1e7c:	add	x2, x0, #0x4
    1e80:	mov	x0, x19
    1e84:	mov	w1, wzr
    1e88:	bl	1a80 <memset@plt>
    1e8c:	mov	x0, x19
    1e90:	bl	1b10 <free@plt>
    1e94:	mov	w0, wzr
    1e98:	ldr	x19, [sp, #16]
    1e9c:	ldp	x29, x30, [sp], #32
    1ea0:	ret
    1ea4:	bl	1bb0 <__errno_location@plt>
    1ea8:	mov	w8, #0x16                  	// #22
    1eac:	str	w8, [x0]
    1eb0:	mov	w0, #0xffffffff            	// #-1
    1eb4:	ldr	x19, [sp, #16]
    1eb8:	ldp	x29, x30, [sp], #32
    1ebc:	ret

0000000000001ec0 <_libcap_strdup@@Base>:
    1ec0:	stp	x29, x30, [sp, #-32]!
    1ec4:	str	x19, [sp, #16]
    1ec8:	mov	x29, sp
    1ecc:	cbz	x0, 1f04 <_libcap_strdup@@Base+0x44>
    1ed0:	mov	x19, x0
    1ed4:	bl	19a0 <strlen@plt>
    1ed8:	add	x0, x0, #0x5
    1edc:	bl	1a40 <malloc@plt>
    1ee0:	cbz	x0, 1f14 <_libcap_strdup@@Base+0x54>
    1ee4:	mov	w8, #0x95d0                	// #38352
    1ee8:	movk	w8, #0xca, lsl #16
    1eec:	str	w8, [x0], #4
    1ef0:	mov	x1, x19
    1ef4:	bl	1b50 <strcpy@plt>
    1ef8:	ldr	x19, [sp, #16]
    1efc:	ldp	x29, x30, [sp], #32
    1f00:	ret
    1f04:	bl	1bb0 <__errno_location@plt>
    1f08:	mov	x8, x0
    1f0c:	mov	w9, #0x16                  	// #22
    1f10:	b	1f20 <_libcap_strdup@@Base+0x60>
    1f14:	bl	1bb0 <__errno_location@plt>
    1f18:	mov	x8, x0
    1f1c:	mov	w9, #0xc                   	// #12
    1f20:	mov	x0, xzr
    1f24:	str	w9, [x8]
    1f28:	ldr	x19, [sp, #16]
    1f2c:	ldp	x29, x30, [sp], #32
    1f30:	ret

0000000000001f34 <cap_dup@@Base>:
    1f34:	stp	x29, x30, [sp, #-32]!
    1f38:	str	x19, [sp, #16]
    1f3c:	mov	x29, sp
    1f40:	cbz	x0, 1f80 <cap_dup@@Base+0x4c>
    1f44:	ldur	w8, [x0, #-4]
    1f48:	mov	w9, #0x90d0                	// #37072
    1f4c:	movk	w9, #0xca, lsl #16
    1f50:	mov	x19, x0
    1f54:	cmp	w8, w9
    1f58:	b.ne	1f80 <cap_dup@@Base+0x4c>  // b.any
    1f5c:	bl	1ad0 <cap_init@plt>
    1f60:	cbz	x0, 1f74 <cap_dup@@Base+0x40>
    1f64:	ldr	w8, [x19, #32]
    1f68:	ldp	q1, q0, [x19]
    1f6c:	str	w8, [x0, #32]
    1f70:	stp	q1, q0, [x0]
    1f74:	ldr	x19, [sp, #16]
    1f78:	ldp	x29, x30, [sp], #32
    1f7c:	ret
    1f80:	bl	1bb0 <__errno_location@plt>
    1f84:	mov	x8, x0
    1f88:	mov	w9, #0x16                  	// #22
    1f8c:	mov	x0, xzr
    1f90:	str	w9, [x8]
    1f94:	ldr	x19, [sp, #16]
    1f98:	ldp	x29, x30, [sp], #32
    1f9c:	ret

0000000000001fa0 <psx_load_syscalls@@Base>:
    1fa0:	adrp	x8, 15000 <cap_set_nsowner@@Base+0x10910>
    1fa4:	mov	w9, #0x1                   	// #1
    1fa8:	strb	w9, [x8, #648]
    1fac:	ret

0000000000001fb0 <cap_set_syscall@@Base>:
    1fb0:	cbz	x0, 1fc4 <cap_set_syscall@@Base+0x14>
    1fb4:	adrp	x8, 15000 <cap_set_nsowner@@Base+0x10910>
    1fb8:	add	x8, x8, #0x140
    1fbc:	stp	x0, x1, [x8]
    1fc0:	ret
    1fc4:	adrp	x0, 15000 <cap_set_nsowner@@Base+0x10910>
    1fc8:	add	x0, x0, #0x140
    1fcc:	add	x1, x0, #0x8
    1fd0:	b	19b0 <psx_load_syscalls@plt>

0000000000001fd4 <cap_get_proc@@Base>:
    1fd4:	stp	x29, x30, [sp, #-32]!
    1fd8:	str	x19, [sp, #16]
    1fdc:	mov	x29, sp
    1fe0:	bl	1ad0 <cap_init@plt>
    1fe4:	mov	x19, x0
    1fe8:	cbz	x0, 2008 <cap_get_proc@@Base+0x34>
    1fec:	add	x1, x19, #0x8
    1ff0:	mov	x0, x19
    1ff4:	bl	1ba0 <capget@plt>
    1ff8:	cbz	w0, 2008 <cap_get_proc@@Base+0x34>
    1ffc:	mov	x0, x19
    2000:	bl	1b70 <cap_free@plt>
    2004:	mov	x19, xzr
    2008:	mov	x0, x19
    200c:	ldr	x19, [sp, #16]
    2010:	ldp	x29, x30, [sp], #32
    2014:	ret

0000000000002018 <cap_set_proc@@Base>:
    2018:	stp	x29, x30, [sp, #-16]!
    201c:	mov	x29, sp
    2020:	cbz	x0, 205c <cap_set_proc@@Base+0x44>
    2024:	ldur	w8, [x0, #-4]
    2028:	mov	w9, #0x90d0                	// #37072
    202c:	movk	w9, #0xca, lsl #16
    2030:	mov	x1, x0
    2034:	cmp	w8, w9
    2038:	b.ne	205c <cap_set_proc@@Base+0x44>  // b.any
    203c:	adrp	x8, 15000 <cap_set_nsowner@@Base+0x10910>
    2040:	ldr	x8, [x8, #320]
    2044:	add	x2, x1, #0x8
    2048:	mov	w0, #0x5b                  	// #91
    204c:	mov	x3, xzr
    2050:	blr	x8
    2054:	ldp	x29, x30, [sp], #16
    2058:	ret
    205c:	bl	1bb0 <__errno_location@plt>
    2060:	mov	w8, #0x16                  	// #22
    2064:	str	w8, [x0]
    2068:	mov	w0, #0xffffffff            	// #-1
    206c:	ldp	x29, x30, [sp], #16
    2070:	ret

0000000000002074 <capgetp@@Base>:
    2074:	stp	x29, x30, [sp, #-32]!
    2078:	str	x19, [sp, #16]
    207c:	mov	x29, sp
    2080:	cbz	x1, 20bc <capgetp@@Base+0x48>
    2084:	ldur	w8, [x1, #-4]
    2088:	mov	w9, #0x90d0                	// #37072
    208c:	movk	w9, #0xca, lsl #16
    2090:	mov	x19, x1
    2094:	cmp	w8, w9
    2098:	b.ne	20bc <capgetp@@Base+0x48>  // b.any
    209c:	str	w0, [x19, #4]
    20a0:	add	x1, x19, #0x8
    20a4:	mov	x0, x19
    20a8:	bl	1ba0 <capget@plt>
    20ac:	str	wzr, [x19, #4]
    20b0:	ldr	x19, [sp, #16]
    20b4:	ldp	x29, x30, [sp], #32
    20b8:	ret
    20bc:	bl	1bb0 <__errno_location@plt>
    20c0:	mov	x8, x0
    20c4:	mov	w9, #0x16                  	// #22
    20c8:	mov	w0, #0xffffffff            	// #-1
    20cc:	str	w9, [x8]
    20d0:	ldr	x19, [sp, #16]
    20d4:	ldp	x29, x30, [sp], #32
    20d8:	ret

00000000000020dc <cap_get_pid@@Base>:
    20dc:	stp	x29, x30, [sp, #-48]!
    20e0:	str	x21, [sp, #16]
    20e4:	stp	x20, x19, [sp, #32]
    20e8:	mov	x29, sp
    20ec:	mov	w20, w0
    20f0:	bl	1ad0 <cap_init@plt>
    20f4:	mov	x19, x0
    20f8:	cbz	x0, 2158 <cap_get_pid@@Base+0x7c>
    20fc:	ldur	w8, [x19, #-4]
    2100:	mov	w9, #0x90d0                	// #37072
    2104:	movk	w9, #0xca, lsl #16
    2108:	cmp	w8, w9
    210c:	b.ne	2134 <cap_get_pid@@Base+0x58>  // b.any
    2110:	add	x1, x19, #0x8
    2114:	mov	x0, x19
    2118:	str	w20, [x19, #4]
    211c:	bl	1ba0 <capget@plt>
    2120:	str	wzr, [x19, #4]
    2124:	cbz	w0, 2158 <cap_get_pid@@Base+0x7c>
    2128:	bl	1bb0 <__errno_location@plt>
    212c:	mov	x20, x0
    2130:	b	2144 <cap_get_pid@@Base+0x68>
    2134:	bl	1bb0 <__errno_location@plt>
    2138:	mov	w8, #0x16                  	// #22
    213c:	mov	x20, x0
    2140:	str	w8, [x0]
    2144:	ldr	w21, [x20]
    2148:	mov	x0, x19
    214c:	bl	1b70 <cap_free@plt>
    2150:	mov	x19, xzr
    2154:	str	w21, [x20]
    2158:	mov	x0, x19
    215c:	ldp	x20, x19, [sp, #32]
    2160:	ldr	x21, [sp, #16]
    2164:	ldp	x29, x30, [sp], #48
    2168:	ret

000000000000216c <capsetp@@Base>:
    216c:	stp	x29, x30, [sp, #-32]!
    2170:	str	x19, [sp, #16]
    2174:	mov	x29, sp
    2178:	cbz	x1, 21bc <capsetp@@Base+0x50>
    217c:	ldur	w8, [x1, #-4]
    2180:	mov	w9, #0x90d0                	// #37072
    2184:	movk	w9, #0xca, lsl #16
    2188:	mov	x19, x1
    218c:	cmp	w8, w9
    2190:	b.ne	21bc <capsetp@@Base+0x50>  // b.any
    2194:	str	w0, [x19, #4]
    2198:	add	x1, x19, #0x8
    219c:	mov	x0, x19
    21a0:	bl	1a30 <capset@plt>
    21a4:	mov	w8, #0x522                 	// #1314
    21a8:	movk	w8, #0x2008, lsl #16
    21ac:	str	x8, [x19]
    21b0:	ldr	x19, [sp, #16]
    21b4:	ldp	x29, x30, [sp], #32
    21b8:	ret
    21bc:	bl	1bb0 <__errno_location@plt>
    21c0:	mov	x8, x0
    21c4:	mov	w9, #0x16                  	// #22
    21c8:	mov	w0, #0xffffffff            	// #-1
    21cc:	str	w9, [x8]
    21d0:	ldr	x19, [sp, #16]
    21d4:	ldp	x29, x30, [sp], #32
    21d8:	ret

00000000000021dc <cap_get_bound@@Base>:
    21dc:	stp	x29, x30, [sp, #-32]!
    21e0:	str	x19, [sp, #16]
    21e4:	mov	x29, sp
    21e8:	adrp	x8, 15000 <cap_set_nsowner@@Base+0x10910>
    21ec:	ldr	x8, [x8, #320]
    21f0:	sxtw	x2, w0
    21f4:	mov	w0, #0xa7                  	// #167
    21f8:	mov	w1, #0x17                  	// #23
    21fc:	mov	x3, xzr
    2200:	blr	x8
    2204:	tbnz	w0, #31, 2214 <cap_get_bound@@Base+0x38>
    2208:	ldr	x19, [sp, #16]
    220c:	ldp	x29, x30, [sp], #32
    2210:	ret
    2214:	neg	w19, w0
    2218:	bl	1bb0 <__errno_location@plt>
    221c:	str	w19, [x0]
    2220:	mov	w0, #0xffffffff            	// #-1
    2224:	ldr	x19, [sp, #16]
    2228:	ldp	x29, x30, [sp], #32
    222c:	ret

0000000000002230 <cap_drop_bound@@Base>:
    2230:	stp	x29, x30, [sp, #-32]!
    2234:	str	x19, [sp, #16]
    2238:	mov	x29, sp
    223c:	adrp	x8, 15000 <cap_set_nsowner@@Base+0x10910>
    2240:	ldr	x8, [x8, #320]
    2244:	sxtw	x2, w0
    2248:	mov	w0, #0xa7                  	// #167
    224c:	mov	w1, #0x18                  	// #24
    2250:	mov	x3, xzr
    2254:	blr	x8
    2258:	tbnz	w0, #31, 2268 <cap_drop_bound@@Base+0x38>
    225c:	ldr	x19, [sp, #16]
    2260:	ldp	x29, x30, [sp], #32
    2264:	ret
    2268:	neg	w19, w0
    226c:	bl	1bb0 <__errno_location@plt>
    2270:	str	w19, [x0]
    2274:	mov	w0, #0xffffffff            	// #-1
    2278:	ldr	x19, [sp, #16]
    227c:	ldp	x29, x30, [sp], #32
    2280:	ret

0000000000002284 <cap_get_ambient@@Base>:
    2284:	stp	x29, x30, [sp, #-32]!
    2288:	str	x19, [sp, #16]
    228c:	mov	x29, sp
    2290:	sxtw	x2, w0
    2294:	mov	w0, #0x2f                  	// #47
    2298:	mov	w1, #0x1                   	// #1
    229c:	mov	x3, xzr
    22a0:	mov	x4, xzr
    22a4:	bl	1bc0 <prctl@plt>
    22a8:	tbnz	w0, #31, 22b8 <cap_get_ambient@@Base+0x34>
    22ac:	ldr	x19, [sp, #16]
    22b0:	ldp	x29, x30, [sp], #32
    22b4:	ret
    22b8:	neg	w19, w0
    22bc:	bl	1bb0 <__errno_location@plt>
    22c0:	str	w19, [x0]
    22c4:	mov	w0, #0xffffffff            	// #-1
    22c8:	ldr	x19, [sp, #16]
    22cc:	ldp	x29, x30, [sp], #32
    22d0:	ret

00000000000022d4 <cap_set_ambient@@Base>:
    22d4:	stp	x29, x30, [sp, #-32]!
    22d8:	str	x19, [sp, #16]
    22dc:	mov	x29, sp
    22e0:	cmp	w1, #0x1
    22e4:	b.eq	22f4 <cap_set_ambient@@Base+0x20>  // b.none
    22e8:	cbnz	w1, 232c <cap_set_ambient@@Base+0x58>
    22ec:	mov	w2, #0x3                   	// #3
    22f0:	b	22f8 <cap_set_ambient@@Base+0x24>
    22f4:	mov	w2, #0x2                   	// #2
    22f8:	adrp	x8, 15000 <cap_set_nsowner@@Base+0x10910>
    22fc:	ldr	x8, [x8, #328]
    2300:	sxtw	x3, w0
    2304:	mov	w0, #0xa7                  	// #167
    2308:	mov	w1, #0x2f                  	// #47
    230c:	mov	x4, xzr
    2310:	mov	x5, xzr
    2314:	mov	x6, xzr
    2318:	blr	x8
    231c:	tbnz	w0, #31, 2334 <cap_set_ambient@@Base+0x60>
    2320:	ldr	x19, [sp, #16]
    2324:	ldp	x29, x30, [sp], #32
    2328:	ret
    232c:	mov	w19, #0x16                  	// #22
    2330:	b	2338 <cap_set_ambient@@Base+0x64>
    2334:	neg	w19, w0
    2338:	bl	1bb0 <__errno_location@plt>
    233c:	str	w19, [x0]
    2340:	mov	w0, #0xffffffff            	// #-1
    2344:	ldr	x19, [sp, #16]
    2348:	ldp	x29, x30, [sp], #32
    234c:	ret

0000000000002350 <cap_reset_ambient@@Base>:
    2350:	stp	x29, x30, [sp, #-48]!
    2354:	str	x21, [sp, #16]
    2358:	stp	x20, x19, [sp, #32]
    235c:	mov	x29, sp
    2360:	bl	1bb0 <__errno_location@plt>
    2364:	ldr	w21, [x0]
    2368:	mov	x19, x0
    236c:	mov	x20, xzr
    2370:	mov	w0, #0x2f                  	// #47
    2374:	mov	w1, #0x1                   	// #1
    2378:	mov	x2, x20
    237c:	mov	x3, xzr
    2380:	mov	x4, xzr
    2384:	bl	1bc0 <prctl@plt>
    2388:	tbnz	w0, #31, 23d0 <cap_reset_ambient@@Base+0x80>
    238c:	add	x20, x20, #0x1
    2390:	cbz	w0, 2370 <cap_reset_ambient@@Base+0x20>
    2394:	adrp	x8, 15000 <cap_set_nsowner@@Base+0x10910>
    2398:	ldr	x8, [x8, #328]
    239c:	mov	w0, #0xa7                  	// #167
    23a0:	mov	w1, #0x2f                  	// #47
    23a4:	mov	w2, #0x4                   	// #4
    23a8:	mov	x3, xzr
    23ac:	mov	x4, xzr
    23b0:	mov	x5, xzr
    23b4:	mov	x6, xzr
    23b8:	blr	x8
    23bc:	tbnz	w0, #31, 23d8 <cap_reset_ambient@@Base+0x88>
    23c0:	ldp	x20, x19, [sp, #32]
    23c4:	ldr	x21, [sp, #16]
    23c8:	ldp	x29, x30, [sp], #48
    23cc:	ret
    23d0:	mov	w0, wzr
    23d4:	b	23e0 <cap_reset_ambient@@Base+0x90>
    23d8:	neg	w21, w0
    23dc:	mov	w0, #0xffffffff            	// #-1
    23e0:	str	w21, [x19]
    23e4:	ldp	x20, x19, [sp, #32]
    23e8:	ldr	x21, [sp, #16]
    23ec:	ldp	x29, x30, [sp], #48
    23f0:	ret

00000000000023f4 <cap_get_secbits@@Base>:
    23f4:	mov	w0, #0x1b                  	// #27
    23f8:	mov	x1, xzr
    23fc:	mov	x2, xzr
    2400:	b	1bc0 <prctl@plt>

0000000000002404 <cap_set_secbits@@Base>:
    2404:	stp	x29, x30, [sp, #-16]!
    2408:	mov	x29, sp
    240c:	adrp	x8, 15000 <cap_set_nsowner@@Base+0x10910>
    2410:	ldr	x8, [x8, #320]
    2414:	mov	w2, w0
    2418:	mov	w0, #0xa7                  	// #167
    241c:	mov	w1, #0x1c                  	// #28
    2420:	mov	x3, xzr
    2424:	blr	x8
    2428:	ldp	x29, x30, [sp], #16
    242c:	ret

0000000000002430 <cap_set_mode@@Base>:
    2430:	sub	sp, sp, #0x50
    2434:	stp	x29, x30, [sp, #16]
    2438:	stp	x24, x23, [sp, #32]
    243c:	stp	x22, x21, [sp, #48]
    2440:	stp	x20, x19, [sp, #64]
    2444:	add	x29, sp, #0x10
    2448:	mov	w8, #0x8                   	// #8
    244c:	mov	w20, w0
    2450:	stur	w8, [x29, #-4]
    2454:	bl	1ad0 <cap_init@plt>
    2458:	cbz	x0, 2478 <cap_set_mode@@Base+0x48>
    245c:	add	x22, x0, #0x8
    2460:	mov	x1, x22
    2464:	mov	x19, x0
    2468:	bl	1ba0 <capget@plt>
    246c:	cbz	w0, 2530 <cap_set_mode@@Base+0x100>
    2470:	mov	x0, x19
    2474:	bl	1b70 <cap_free@plt>
    2478:	sub	x3, x29, #0x4
    247c:	mov	w2, #0x1                   	// #1
    2480:	mov	w4, #0x1                   	// #1
    2484:	mov	x0, xzr
    2488:	mov	w1, wzr
    248c:	mov	w23, #0x1                   	// #1
    2490:	bl	1b80 <cap_set_flag@plt>
    2494:	mov	w21, w0
    2498:	mov	x19, xzr
    249c:	bl	1bb0 <__errno_location@plt>
    24a0:	mov	w8, #0x16                  	// #22
    24a4:	str	w8, [x0]
    24a8:	mov	w0, #0xffffffff            	// #-1
    24ac:	orr	w21, w0, w21
    24b0:	cbz	w21, 2588 <cap_set_mode@@Base+0x158>
    24b4:	mov	x0, x19
    24b8:	mov	w1, wzr
    24bc:	bl	19c0 <cap_clear_flag@plt>
    24c0:	tbnz	w23, #0, 24f8 <cap_set_mode@@Base+0xc8>
    24c4:	ldur	w8, [x19, #-4]
    24c8:	mov	w9, #0x90d0                	// #37072
    24cc:	movk	w9, #0xca, lsl #16
    24d0:	cmp	w8, w9
    24d4:	b.ne	24f8 <cap_set_mode@@Base+0xc8>  // b.any
    24d8:	adrp	x8, 15000 <cap_set_nsowner@@Base+0x10910>
    24dc:	ldr	x8, [x8, #320]
    24e0:	add	x2, x19, #0x8
    24e4:	mov	w0, #0x5b                  	// #91
    24e8:	mov	x1, x19
    24ec:	mov	x3, xzr
    24f0:	blr	x8
    24f4:	b	2508 <cap_set_mode@@Base+0xd8>
    24f8:	bl	1bb0 <__errno_location@plt>
    24fc:	mov	w8, #0x16                  	// #22
    2500:	str	w8, [x0]
    2504:	mov	w0, #0xffffffff            	// #-1
    2508:	orr	w20, w0, w21
    250c:	mov	x0, x19
    2510:	bl	1b70 <cap_free@plt>
    2514:	mov	w0, w20
    2518:	ldp	x20, x19, [sp, #64]
    251c:	ldp	x22, x21, [sp, #48]
    2520:	ldp	x24, x23, [sp, #32]
    2524:	ldp	x29, x30, [sp, #16]
    2528:	add	sp, sp, #0x50
    252c:	ret
    2530:	sub	x3, x29, #0x4
    2534:	mov	w2, #0x1                   	// #1
    2538:	mov	w4, #0x1                   	// #1
    253c:	mov	x0, x19
    2540:	mov	w1, wzr
    2544:	bl	1b80 <cap_set_flag@plt>
    2548:	ldur	w8, [x19, #-4]
    254c:	mov	w9, #0x90d0                	// #37072
    2550:	movk	w9, #0xca, lsl #16
    2554:	mov	w21, w0
    2558:	cmp	w8, w9
    255c:	b.ne	2634 <cap_set_mode@@Base+0x204>  // b.any
    2560:	adrp	x8, 15000 <cap_set_nsowner@@Base+0x10910>
    2564:	ldr	x8, [x8, #320]
    2568:	mov	w0, #0x5b                  	// #91
    256c:	mov	x1, x19
    2570:	mov	x2, x22
    2574:	mov	x3, xzr
    2578:	blr	x8
    257c:	mov	w23, wzr
    2580:	orr	w21, w0, w21
    2584:	cbnz	w21, 24b4 <cap_set_mode@@Base+0x84>
    2588:	sub	w8, w20, #0x1
    258c:	cmp	w8, #0x2
    2590:	b.cs	25a4 <cap_set_mode@@Base+0x174>  // b.hs, b.nlast
    2594:	mov	w1, #0x2                   	// #2
    2598:	mov	x0, x19
    259c:	bl	19c0 <cap_clear_flag@plt>
    25a0:	b	25ac <cap_set_mode@@Base+0x17c>
    25a4:	cmp	w20, #0x3
    25a8:	b.ne	2660 <cap_set_mode@@Base+0x230>  // b.any
    25ac:	mov	w0, #0x2f                  	// #47
    25b0:	mov	w1, #0x1                   	// #1
    25b4:	mov	x2, xzr
    25b8:	mov	x3, xzr
    25bc:	mov	x4, xzr
    25c0:	bl	1bc0 <prctl@plt>
    25c4:	tbnz	w0, #31, 263c <cap_set_mode@@Base+0x20c>
    25c8:	bl	1bb0 <__errno_location@plt>
    25cc:	ldr	w24, [x0]
    25d0:	mov	x22, x0
    25d4:	mov	x21, xzr
    25d8:	mov	w0, #0x2f                  	// #47
    25dc:	mov	w1, #0x1                   	// #1
    25e0:	mov	x2, x21
    25e4:	mov	x3, xzr
    25e8:	mov	x4, xzr
    25ec:	bl	1bc0 <prctl@plt>
    25f0:	tbnz	w0, #31, 2674 <cap_set_mode@@Base+0x244>
    25f4:	add	x21, x21, #0x1
    25f8:	cbz	w0, 25d8 <cap_set_mode@@Base+0x1a8>
    25fc:	adrp	x8, 15000 <cap_set_nsowner@@Base+0x10910>
    2600:	ldr	x8, [x8, #328]
    2604:	mov	w0, #0xa7                  	// #167
    2608:	mov	w1, #0x2f                  	// #47
    260c:	mov	w2, #0x4                   	// #4
    2610:	mov	x3, xzr
    2614:	mov	x4, xzr
    2618:	mov	x5, xzr
    261c:	mov	x6, xzr
    2620:	blr	x8
    2624:	mov	x21, x0
    2628:	tbnz	w21, #31, 2738 <cap_set_mode@@Base+0x308>
    262c:	cbnz	w21, 24b4 <cap_set_mode@@Base+0x84>
    2630:	b	2678 <cap_set_mode@@Base+0x248>
    2634:	mov	w23, wzr
    2638:	b	249c <cap_set_mode@@Base+0x6c>
    263c:	neg	w21, w0
    2640:	bl	1bb0 <__errno_location@plt>
    2644:	str	w21, [x0]
    2648:	adrp	x8, 15000 <cap_set_nsowner@@Base+0x10910>
    264c:	ldr	x8, [x8, #320]
    2650:	mov	w0, #0xa7                  	// #167
    2654:	mov	w1, #0x1c                  	// #28
    2658:	mov	w2, #0x2f                  	// #47
    265c:	b	268c <cap_set_mode@@Base+0x25c>
    2660:	bl	1bb0 <__errno_location@plt>
    2664:	mov	w8, #0x16                  	// #22
    2668:	str	w8, [x0]
    266c:	mov	w21, #0xffffffff            	// #-1
    2670:	b	24b4 <cap_set_mode@@Base+0x84>
    2674:	str	w24, [x22]
    2678:	adrp	x8, 15000 <cap_set_nsowner@@Base+0x10910>
    267c:	ldr	x8, [x8, #320]
    2680:	mov	w0, #0xa7                  	// #167
    2684:	mov	w1, #0x1c                  	// #28
    2688:	mov	w2, #0xef                  	// #239
    268c:	mov	x3, xzr
    2690:	blr	x8
    2694:	mov	x21, x0
    2698:	cmp	w20, #0x1
    269c:	b.ne	24b4 <cap_set_mode@@Base+0x84>  // b.any
    26a0:	adrp	x22, 15000 <cap_set_nsowner@@Base+0x10910>
    26a4:	ldr	x8, [x22, #320]
    26a8:	mov	w0, #0xa7                  	// #167
    26ac:	mov	w1, #0x17                  	// #23
    26b0:	mov	x2, xzr
    26b4:	mov	x3, xzr
    26b8:	blr	x8
    26bc:	tbnz	w0, #31, 271c <cap_set_mode@@Base+0x2ec>
    26c0:	mov	x20, xzr
    26c4:	mov	w24, #0x1                   	// #1
    26c8:	b	26f0 <cap_set_mode@@Base+0x2c0>
    26cc:	ldr	x8, [x22, #320]
    26d0:	sxtw	x20, w24
    26d4:	mov	w0, #0xa7                  	// #167
    26d8:	mov	w1, #0x17                  	// #23
    26dc:	mov	x2, x20
    26e0:	mov	x3, xzr
    26e4:	blr	x8
    26e8:	add	w24, w24, #0x1
    26ec:	tbnz	w0, #31, 271c <cap_set_mode@@Base+0x2ec>
    26f0:	ldr	x8, [x22, #320]
    26f4:	mov	w0, #0xa7                  	// #167
    26f8:	mov	w1, #0x18                  	// #24
    26fc:	mov	x2, x20
    2700:	mov	x3, xzr
    2704:	blr	x8
    2708:	tbz	w0, #31, 26cc <cap_set_mode@@Base+0x29c>
    270c:	neg	w20, w0
    2710:	bl	1bb0 <__errno_location@plt>
    2714:	str	w20, [x0]
    2718:	b	26cc <cap_set_mode@@Base+0x29c>
    271c:	neg	w20, w0
    2720:	bl	1bb0 <__errno_location@plt>
    2724:	str	w20, [x0]
    2728:	mov	w1, #0x1                   	// #1
    272c:	mov	x0, x19
    2730:	bl	19c0 <cap_clear_flag@plt>
    2734:	b	24b4 <cap_set_mode@@Base+0x84>
    2738:	neg	w8, w21
    273c:	str	w8, [x22]
    2740:	mov	w21, #0xffffffff            	// #-1
    2744:	b	24b4 <cap_set_mode@@Base+0x84>

0000000000002748 <cap_get_mode@@Base>:
    2748:	stp	x29, x30, [sp, #-48]!
    274c:	stp	x22, x21, [sp, #16]
    2750:	stp	x20, x19, [sp, #32]
    2754:	mov	x29, sp
    2758:	mov	w0, #0x1b                  	// #27
    275c:	mov	x1, xzr
    2760:	mov	x2, xzr
    2764:	bl	1bc0 <prctl@plt>
    2768:	mov	w8, #0x2f                  	// #47
    276c:	bics	wzr, w8, w0
    2770:	b.ne	27d4 <cap_get_mode@@Base+0x8c>  // b.any
    2774:	mov	w20, w0
    2778:	bl	1bb0 <__errno_location@plt>
    277c:	ldr	w22, [x0]
    2780:	mov	x19, x0
    2784:	mov	w0, #0x2f                  	// #47
    2788:	mov	w1, #0x1                   	// #1
    278c:	mov	x2, xzr
    2790:	mov	x3, xzr
    2794:	mov	x4, xzr
    2798:	bl	1bc0 <prctl@plt>
    279c:	tbnz	w0, #31, 27e8 <cap_get_mode@@Base+0xa0>
    27a0:	mov	w21, #0x1                   	// #1
    27a4:	cbnz	w0, 27d4 <cap_get_mode@@Base+0x8c>
    27a8:	mov	w0, #0x2f                  	// #47
    27ac:	mov	w1, #0x1                   	// #1
    27b0:	mov	x2, x21
    27b4:	mov	x3, xzr
    27b8:	mov	x4, xzr
    27bc:	bl	1bc0 <prctl@plt>
    27c0:	add	x21, x21, #0x1
    27c4:	tbz	w0, #31, 27a4 <cap_get_mode@@Base+0x5c>
    27c8:	cmp	w20, #0xef
    27cc:	str	w22, [x19]
    27d0:	b.eq	27ec <cap_get_mode@@Base+0xa4>  // b.none
    27d4:	mov	w0, wzr
    27d8:	ldp	x20, x19, [sp, #32]
    27dc:	ldp	x22, x21, [sp, #16]
    27e0:	ldp	x29, x30, [sp], #48
    27e4:	ret
    27e8:	str	w22, [x19]
    27ec:	bl	1ad0 <cap_init@plt>
    27f0:	mov	x20, x0
    27f4:	cbz	x0, 2814 <cap_get_mode@@Base+0xcc>
    27f8:	add	x1, x20, #0x8
    27fc:	mov	x0, x20
    2800:	bl	1ba0 <capget@plt>
    2804:	cbz	w0, 2814 <cap_get_mode@@Base+0xcc>
    2808:	mov	x0, x20
    280c:	bl	1b70 <cap_free@plt>
    2810:	mov	x20, xzr
    2814:	bl	1ad0 <cap_init@plt>
    2818:	mov	x1, x20
    281c:	mov	x22, x0
    2820:	bl	1b90 <cap_compare@plt>
    2824:	mov	w21, w0
    2828:	mov	x0, x22
    282c:	bl	1b70 <cap_free@plt>
    2830:	mov	x0, x20
    2834:	bl	1b70 <cap_free@plt>
    2838:	tbnz	w21, #2, 2858 <cap_get_mode@@Base+0x110>
    283c:	tst	w21, #0x3
    2840:	b.eq	286c <cap_get_mode@@Base+0x124>  // b.none
    2844:	mov	w0, #0x2                   	// #2
    2848:	ldp	x20, x19, [sp, #32]
    284c:	ldp	x22, x21, [sp, #16]
    2850:	ldp	x29, x30, [sp], #48
    2854:	ret
    2858:	mov	w0, #0x3                   	// #3
    285c:	ldp	x20, x19, [sp, #32]
    2860:	ldp	x22, x21, [sp, #16]
    2864:	ldp	x29, x30, [sp], #48
    2868:	ret
    286c:	adrp	x21, 15000 <cap_set_nsowner@@Base+0x10910>
    2870:	ldr	x8, [x21, #320]
    2874:	mov	w0, #0xa7                  	// #167
    2878:	mov	w1, #0x17                  	// #23
    287c:	mov	x2, xzr
    2880:	mov	x3, xzr
    2884:	blr	x8
    2888:	tbnz	w0, #31, 28b4 <cap_get_mode@@Base+0x16c>
    288c:	mov	w20, #0x1                   	// #1
    2890:	cbnz	w0, 2844 <cap_get_mode@@Base+0xfc>
    2894:	ldr	x8, [x21, #320]
    2898:	mov	w0, #0xa7                  	// #167
    289c:	mov	w1, #0x17                  	// #23
    28a0:	mov	x2, x20
    28a4:	mov	x3, xzr
    28a8:	blr	x8
    28ac:	add	x20, x20, #0x1
    28b0:	tbz	w0, #31, 2890 <cap_get_mode@@Base+0x148>
    28b4:	neg	w8, w0
    28b8:	mov	w0, #0x1                   	// #1
    28bc:	str	w8, [x19]
    28c0:	ldp	x20, x19, [sp, #32]
    28c4:	ldp	x22, x21, [sp, #16]
    28c8:	ldp	x29, x30, [sp], #48
    28cc:	ret

00000000000028d0 <cap_setuid@@Base>:
    28d0:	sub	sp, sp, #0x50
    28d4:	stp	x29, x30, [sp, #16]
    28d8:	stp	x24, x23, [sp, #32]
    28dc:	stp	x22, x21, [sp, #48]
    28e0:	stp	x20, x19, [sp, #64]
    28e4:	add	x29, sp, #0x10
    28e8:	mov	w8, #0x7                   	// #7
    28ec:	mov	w20, w0
    28f0:	stur	w8, [x29, #-4]
    28f4:	bl	1ad0 <cap_init@plt>
    28f8:	mov	x19, x0
    28fc:	cbz	x0, 291c <cap_setuid@@Base+0x4c>
    2900:	add	x1, x19, #0x8
    2904:	mov	x0, x19
    2908:	bl	1ba0 <capget@plt>
    290c:	cbz	w0, 291c <cap_setuid@@Base+0x4c>
    2910:	mov	x0, x19
    2914:	bl	1b70 <cap_free@plt>
    2918:	mov	x19, xzr
    291c:	mov	w22, #0x90d0                	// #37072
    2920:	sub	x3, x29, #0x4
    2924:	mov	w2, #0x1                   	// #1
    2928:	mov	w4, #0x1                   	// #1
    292c:	mov	x0, x19
    2930:	mov	w1, wzr
    2934:	movk	w22, #0xca, lsl #16
    2938:	bl	1b80 <cap_set_flag@plt>
    293c:	adrp	x23, 15000 <cap_set_nsowner@@Base+0x10910>
    2940:	ldr	x8, [x23, #320]
    2944:	mov	w0, #0xa7                  	// #167
    2948:	mov	w1, #0x8                   	// #8
    294c:	mov	w2, #0x1                   	// #1
    2950:	mov	x3, xzr
    2954:	blr	x8
    2958:	cbz	x19, 29a4 <cap_setuid@@Base+0xd4>
    295c:	ldur	w8, [x19, #-4]
    2960:	cmp	w8, w22
    2964:	b.ne	29a4 <cap_setuid@@Base+0xd4>  // b.any
    2968:	ldr	x8, [x23, #320]
    296c:	add	x2, x19, #0x8
    2970:	mov	w0, #0x5b                  	// #91
    2974:	mov	x1, x19
    2978:	mov	x3, xzr
    297c:	blr	x8
    2980:	mov	x21, x0
    2984:	cbnz	w21, 29b4 <cap_setuid@@Base+0xe4>
    2988:	adrp	x8, 15000 <cap_set_nsowner@@Base+0x10910>
    298c:	ldrb	w8, [x8, #648]
    2990:	tbz	w8, #0, 2a40 <cap_setuid@@Base+0x170>
    2994:	mov	w0, w20
    2998:	bl	1980 <setuid@plt>
    299c:	mov	w21, w0
    29a0:	b	29b4 <cap_setuid@@Base+0xe4>
    29a4:	bl	1bb0 <__errno_location@plt>
    29a8:	mov	w8, #0x16                  	// #22
    29ac:	str	w8, [x0]
    29b0:	mov	w21, #0xffffffff            	// #-1
    29b4:	bl	1bb0 <__errno_location@plt>
    29b8:	ldr	x8, [x23, #320]
    29bc:	ldr	w24, [x0]
    29c0:	mov	x20, x0
    29c4:	mov	w0, #0xa7                  	// #167
    29c8:	mov	w1, #0x8                   	// #8
    29cc:	mov	x2, xzr
    29d0:	mov	x3, xzr
    29d4:	blr	x8
    29d8:	mov	x0, x19
    29dc:	mov	w1, wzr
    29e0:	bl	19c0 <cap_clear_flag@plt>
    29e4:	cbz	x19, 2a10 <cap_setuid@@Base+0x140>
    29e8:	ldur	w8, [x19, #-4]
    29ec:	cmp	w8, w22
    29f0:	b.ne	2a10 <cap_setuid@@Base+0x140>  // b.any
    29f4:	ldr	x8, [x23, #320]
    29f8:	add	x2, x19, #0x8
    29fc:	mov	w0, #0x5b                  	// #91
    2a00:	mov	x1, x19
    2a04:	mov	x3, xzr
    2a08:	blr	x8
    2a0c:	b	2a18 <cap_setuid@@Base+0x148>
    2a10:	mov	w8, #0x16                  	// #22
    2a14:	str	w8, [x20]
    2a18:	mov	x0, x19
    2a1c:	bl	1b70 <cap_free@plt>
    2a20:	str	w24, [x20]
    2a24:	mov	w0, w21
    2a28:	ldp	x20, x19, [sp, #64]
    2a2c:	ldp	x22, x21, [sp, #48]
    2a30:	ldp	x24, x23, [sp, #32]
    2a34:	ldp	x29, x30, [sp, #16]
    2a38:	add	sp, sp, #0x50
    2a3c:	ret
    2a40:	ldr	x8, [x23, #320]
    2a44:	mov	w1, w20
    2a48:	mov	w0, #0x92                  	// #146
    2a4c:	mov	x2, xzr
    2a50:	mov	x3, xzr
    2a54:	blr	x8
    2a58:	mov	x21, x0
    2a5c:	tbz	w21, #31, 29b4 <cap_setuid@@Base+0xe4>
    2a60:	neg	w20, w21
    2a64:	bl	1bb0 <__errno_location@plt>
    2a68:	str	w20, [x0]
    2a6c:	b	29b0 <cap_setuid@@Base+0xe0>

0000000000002a70 <cap_setgroups@@Base>:
    2a70:	stp	x29, x30, [sp, #-80]!
    2a74:	str	x25, [sp, #16]
    2a78:	stp	x24, x23, [sp, #32]
    2a7c:	stp	x22, x21, [sp, #48]
    2a80:	stp	x20, x19, [sp, #64]
    2a84:	mov	x29, sp
    2a88:	mov	w8, #0x6                   	// #6
    2a8c:	mov	x20, x2
    2a90:	mov	x21, x1
    2a94:	mov	w22, w0
    2a98:	str	w8, [x29, #28]
    2a9c:	bl	1ad0 <cap_init@plt>
    2aa0:	cbz	x0, 2ac0 <cap_setgroups@@Base+0x50>
    2aa4:	add	x23, x0, #0x8
    2aa8:	mov	x1, x23
    2aac:	mov	x19, x0
    2ab0:	bl	1ba0 <capget@plt>
    2ab4:	cbz	w0, 2b24 <cap_setgroups@@Base+0xb4>
    2ab8:	mov	x0, x19
    2abc:	bl	1b70 <cap_free@plt>
    2ac0:	add	x3, x29, #0x1c
    2ac4:	mov	w2, #0x1                   	// #1
    2ac8:	mov	w4, #0x1                   	// #1
    2acc:	mov	x0, xzr
    2ad0:	mov	w1, wzr
    2ad4:	mov	w24, #0x1                   	// #1
    2ad8:	bl	1b80 <cap_set_flag@plt>
    2adc:	mov	x19, xzr
    2ae0:	bl	1bb0 <__errno_location@plt>
    2ae4:	mov	w8, #0x16                  	// #22
    2ae8:	str	w8, [x0]
    2aec:	mov	w23, #0xffffffff            	// #-1
    2af0:	adrp	x8, 15000 <cap_set_nsowner@@Base+0x10910>
    2af4:	ldrb	w8, [x8, #648]
    2af8:	tbz	w8, #0, 2b80 <cap_setgroups@@Base+0x110>
    2afc:	cbnz	w23, 2bbc <cap_setgroups@@Base+0x14c>
    2b00:	mov	w0, w22
    2b04:	bl	1ac0 <setgid@plt>
    2b08:	mov	w23, w0
    2b0c:	cbnz	w0, 2bbc <cap_setgroups@@Base+0x14c>
    2b10:	mov	x0, x21
    2b14:	mov	x1, x20
    2b18:	bl	1b40 <setgroups@plt>
    2b1c:	mov	w23, w0
    2b20:	b	2bbc <cap_setgroups@@Base+0x14c>
    2b24:	add	x3, x29, #0x1c
    2b28:	mov	w2, #0x1                   	// #1
    2b2c:	mov	w4, #0x1                   	// #1
    2b30:	mov	x0, x19
    2b34:	mov	w1, wzr
    2b38:	bl	1b80 <cap_set_flag@plt>
    2b3c:	ldur	w8, [x19, #-4]
    2b40:	mov	w9, #0x90d0                	// #37072
    2b44:	movk	w9, #0xca, lsl #16
    2b48:	cmp	w8, w9
    2b4c:	b.ne	2c3c <cap_setgroups@@Base+0x1cc>  // b.any
    2b50:	adrp	x8, 15000 <cap_set_nsowner@@Base+0x10910>
    2b54:	ldr	x8, [x8, #320]
    2b58:	mov	w0, #0x5b                  	// #91
    2b5c:	mov	x1, x19
    2b60:	mov	x2, x23
    2b64:	mov	x3, xzr
    2b68:	blr	x8
    2b6c:	mov	x23, x0
    2b70:	mov	w24, wzr
    2b74:	adrp	x8, 15000 <cap_set_nsowner@@Base+0x10910>
    2b78:	ldrb	w8, [x8, #648]
    2b7c:	tbnz	w8, #0, 2afc <cap_setgroups@@Base+0x8c>
    2b80:	cbnz	w23, 2ba8 <cap_setgroups@@Base+0x138>
    2b84:	adrp	x25, 15000 <cap_set_nsowner@@Base+0x10910>
    2b88:	ldr	x8, [x25, #320]
    2b8c:	mov	w1, w22
    2b90:	mov	w0, #0x90                  	// #144
    2b94:	mov	x2, xzr
    2b98:	mov	x3, xzr
    2b9c:	blr	x8
    2ba0:	mov	x23, x0
    2ba4:	cbz	w23, 2c44 <cap_setgroups@@Base+0x1d4>
    2ba8:	tbz	w23, #31, 2bbc <cap_setgroups@@Base+0x14c>
    2bac:	neg	w20, w23
    2bb0:	bl	1bb0 <__errno_location@plt>
    2bb4:	str	w20, [x0]
    2bb8:	mov	w23, #0xffffffff            	// #-1
    2bbc:	bl	1bb0 <__errno_location@plt>
    2bc0:	ldr	w21, [x0]
    2bc4:	mov	x20, x0
    2bc8:	mov	x0, x19
    2bcc:	mov	w1, wzr
    2bd0:	bl	19c0 <cap_clear_flag@plt>
    2bd4:	tbnz	w24, #0, 2c0c <cap_setgroups@@Base+0x19c>
    2bd8:	ldur	w8, [x19, #-4]
    2bdc:	mov	w9, #0x90d0                	// #37072
    2be0:	movk	w9, #0xca, lsl #16
    2be4:	cmp	w8, w9
    2be8:	b.ne	2c0c <cap_setgroups@@Base+0x19c>  // b.any
    2bec:	adrp	x8, 15000 <cap_set_nsowner@@Base+0x10910>
    2bf0:	ldr	x8, [x8, #320]
    2bf4:	add	x2, x19, #0x8
    2bf8:	mov	w0, #0x5b                  	// #91
    2bfc:	mov	x1, x19
    2c00:	mov	x3, xzr
    2c04:	blr	x8
    2c08:	b	2c14 <cap_setgroups@@Base+0x1a4>
    2c0c:	mov	w8, #0x16                  	// #22
    2c10:	str	w8, [x20]
    2c14:	mov	x0, x19
    2c18:	bl	1b70 <cap_free@plt>
    2c1c:	str	w21, [x20]
    2c20:	mov	w0, w23
    2c24:	ldp	x20, x19, [sp, #64]
    2c28:	ldp	x22, x21, [sp, #48]
    2c2c:	ldp	x24, x23, [sp, #32]
    2c30:	ldr	x25, [sp, #16]
    2c34:	ldp	x29, x30, [sp], #80
    2c38:	ret
    2c3c:	mov	w24, wzr
    2c40:	b	2ae0 <cap_setgroups@@Base+0x70>
    2c44:	ldr	x8, [x25, #320]
    2c48:	mov	w0, #0x9f                  	// #159
    2c4c:	mov	x1, x21
    2c50:	mov	x2, x20
    2c54:	mov	x3, xzr
    2c58:	blr	x8
    2c5c:	mov	x23, x0
    2c60:	tbz	w23, #31, 2bbc <cap_setgroups@@Base+0x14c>
    2c64:	b	2bac <cap_setgroups@@Base+0x13c>
    2c68:	b	1bd0 <syscall@plt>
    2c6c:	b	1bd0 <syscall@plt>

0000000000002c70 <cap_size@@Base>:
    2c70:	mov	w0, #0x1d                  	// #29
    2c74:	ret

0000000000002c78 <cap_copy_ext@@Base>:
    2c78:	stp	x29, x30, [sp, #-16]!
    2c7c:	mov	x29, sp
    2c80:	cbz	x1, 2d84 <cap_copy_ext@@Base+0x10c>
    2c84:	cbz	x0, 2d84 <cap_copy_ext@@Base+0x10c>
    2c88:	cmp	x2, #0x1d
    2c8c:	b.lt	2d84 <cap_copy_ext@@Base+0x10c>  // b.tstop
    2c90:	ldur	w8, [x1, #-4]
    2c94:	mov	w9, #0x90d0                	// #37072
    2c98:	movk	w9, #0xca, lsl #16
    2c9c:	cmp	w8, w9
    2ca0:	b.ne	2d84 <cap_copy_ext@@Base+0x10c>  // b.any
    2ca4:	mov	w8, #0xc290                	// #49808
    2ca8:	movk	w8, #0x5101, lsl #16
    2cac:	mov	w9, #0x8                   	// #8
    2cb0:	str	w8, [x0]
    2cb4:	strb	w9, [x0, #4]
    2cb8:	ldr	w8, [x1, #8]
    2cbc:	lsr	w9, w8, #8
    2cc0:	strb	w8, [x0, #5]
    2cc4:	strb	w9, [x0, #8]
    2cc8:	lsr	w9, w8, #16
    2ccc:	lsr	w8, w8, #24
    2cd0:	strb	w9, [x0, #11]
    2cd4:	strb	w8, [x0, #14]
    2cd8:	ldr	w8, [x1, #20]
    2cdc:	lsr	w9, w8, #8
    2ce0:	strb	w8, [x0, #17]
    2ce4:	strb	w9, [x0, #20]
    2ce8:	lsr	w9, w8, #16
    2cec:	lsr	w8, w8, #24
    2cf0:	strb	w9, [x0, #23]
    2cf4:	strb	w8, [x0, #26]
    2cf8:	ldr	w8, [x1, #12]
    2cfc:	lsr	w9, w8, #8
    2d00:	strb	w8, [x0, #6]
    2d04:	strb	w9, [x0, #9]
    2d08:	lsr	w9, w8, #16
    2d0c:	lsr	w8, w8, #24
    2d10:	strb	w9, [x0, #12]
    2d14:	strb	w8, [x0, #15]
    2d18:	ldr	w8, [x1, #24]
    2d1c:	lsr	w9, w8, #8
    2d20:	strb	w8, [x0, #18]
    2d24:	strb	w9, [x0, #21]
    2d28:	lsr	w9, w8, #16
    2d2c:	lsr	w8, w8, #24
    2d30:	strb	w9, [x0, #24]
    2d34:	strb	w8, [x0, #27]
    2d38:	ldr	w8, [x1, #16]
    2d3c:	lsr	w9, w8, #8
    2d40:	strb	w8, [x0, #7]
    2d44:	strb	w9, [x0, #10]
    2d48:	lsr	w9, w8, #16
    2d4c:	lsr	w8, w8, #24
    2d50:	strb	w9, [x0, #13]
    2d54:	strb	w8, [x0, #16]
    2d58:	ldr	w8, [x1, #28]
    2d5c:	strb	w8, [x0, #19]
    2d60:	lsr	w9, w8, #8
    2d64:	lsr	w10, w8, #16
    2d68:	lsr	w8, w8, #24
    2d6c:	strb	w9, [x0, #22]
    2d70:	strb	w10, [x0, #25]
    2d74:	strb	w8, [x0, #28]
    2d78:	mov	w0, #0x1d                  	// #29
    2d7c:	ldp	x29, x30, [sp], #16
    2d80:	ret
    2d84:	bl	1bb0 <__errno_location@plt>
    2d88:	mov	w8, #0x16                  	// #22
    2d8c:	str	w8, [x0]
    2d90:	mov	x0, #0xffffffffffffffff    	// #-1
    2d94:	ldp	x29, x30, [sp], #16
    2d98:	ret

0000000000002d9c <cap_copy_int@@Base>:
    2d9c:	stp	x29, x30, [sp, #-32]!
    2da0:	str	x19, [sp, #16]
    2da4:	mov	x29, sp
    2da8:	cbz	x0, 2dc4 <cap_copy_int@@Base+0x28>
    2dac:	ldr	w8, [x0]
    2db0:	mov	w9, #0xc290                	// #49808
    2db4:	movk	w9, #0x5101, lsl #16
    2db8:	mov	x19, x0
    2dbc:	cmp	w8, w9
    2dc0:	b.eq	2de4 <cap_copy_int@@Base+0x48>  // b.none
    2dc4:	bl	1bb0 <__errno_location@plt>
    2dc8:	mov	x8, x0
    2dcc:	mov	w9, #0x16                  	// #22
    2dd0:	mov	x0, xzr
    2dd4:	str	w9, [x8]
    2dd8:	ldr	x19, [sp, #16]
    2ddc:	ldp	x29, x30, [sp], #32
    2de0:	ret
    2de4:	bl	1ad0 <cap_init@plt>
    2de8:	cbz	x0, 2dd8 <cap_copy_int@@Base+0x3c>
    2dec:	ldrb	w9, [x19, #4]
    2df0:	add	x8, x19, #0x5
    2df4:	cbz	w9, 2e0c <cap_copy_int@@Base+0x70>
    2df8:	ldrb	w11, [x8]
    2dfc:	mov	w10, #0x1                   	// #1
    2e00:	cmp	w10, w9
    2e04:	b.ne	2e1c <cap_copy_int@@Base+0x80>  // b.any
    2e08:	b	2e50 <cap_copy_int@@Base+0xb4>
    2e0c:	mov	w10, wzr
    2e10:	mov	w11, wzr
    2e14:	cmp	w10, w9
    2e18:	b.eq	2e50 <cap_copy_int@@Base+0xb4>  // b.none
    2e1c:	mov	x12, x10
    2e20:	bfi	x12, x10, #1, #1
    2e24:	ldrb	w13, [x8, x12]
    2e28:	add	w12, w10, #0x1
    2e2c:	cmp	w12, w9
    2e30:	bfi	w11, w13, #8, #8
    2e34:	b.eq	2e50 <cap_copy_int@@Base+0xb4>  // b.none
    2e38:	add	x12, x12, w12, uxtw #1
    2e3c:	ldrb	w12, [x8, x12]
    2e40:	orr	w13, w10, #0x2
    2e44:	cmp	w13, w9
    2e48:	bfi	w11, w12, #16, #8
    2e4c:	b.ne	2f48 <cap_copy_int@@Base+0x1ac>  // b.any
    2e50:	mov	w12, wzr
    2e54:	str	w11, [x0, #8]
    2e58:	str	w12, [x0, #20]
    2e5c:	cbz	w9, 2e74 <cap_copy_int@@Base+0xd8>
    2e60:	ldrb	w11, [x19, #6]
    2e64:	mov	w10, #0x1                   	// #1
    2e68:	cmp	w10, w9
    2e6c:	b.ne	2e84 <cap_copy_int@@Base+0xe8>  // b.any
    2e70:	b	2ec0 <cap_copy_int@@Base+0x124>
    2e74:	mov	w10, wzr
    2e78:	mov	w11, wzr
    2e7c:	cmp	w10, w9
    2e80:	b.eq	2ec0 <cap_copy_int@@Base+0x124>  // b.none
    2e84:	mov	x12, x10
    2e88:	bfi	x12, x10, #1, #1
    2e8c:	add	x12, x8, x12
    2e90:	ldrb	w13, [x12, #1]
    2e94:	add	w12, w10, #0x1
    2e98:	cmp	w12, w9
    2e9c:	bfi	w11, w13, #8, #8
    2ea0:	b.eq	2ec0 <cap_copy_int@@Base+0x124>  // b.none
    2ea4:	add	x12, x12, w12, uxtw #1
    2ea8:	add	x12, x8, x12
    2eac:	ldrb	w12, [x12, #1]
    2eb0:	orr	w13, w10, #0x2
    2eb4:	cmp	w13, w9
    2eb8:	bfi	w11, w12, #16, #8
    2ebc:	b.ne	2f6c <cap_copy_int@@Base+0x1d0>  // b.any
    2ec0:	mov	w12, wzr
    2ec4:	str	w11, [x0, #12]
    2ec8:	str	w12, [x0, #24]
    2ecc:	cbz	w9, 2ee4 <cap_copy_int@@Base+0x148>
    2ed0:	ldrb	w11, [x19, #7]
    2ed4:	mov	w10, #0x1                   	// #1
    2ed8:	cmp	w10, w9
    2edc:	b.ne	2ef4 <cap_copy_int@@Base+0x158>  // b.any
    2ee0:	b	2f30 <cap_copy_int@@Base+0x194>
    2ee4:	mov	w10, wzr
    2ee8:	mov	w11, wzr
    2eec:	cmp	w10, w9
    2ef0:	b.eq	2f30 <cap_copy_int@@Base+0x194>  // b.none
    2ef4:	mov	x12, x10
    2ef8:	bfi	x12, x10, #1, #1
    2efc:	add	x12, x8, x12
    2f00:	ldrb	w13, [x12, #2]
    2f04:	add	w12, w10, #0x1
    2f08:	cmp	w12, w9
    2f0c:	bfi	w11, w13, #8, #8
    2f10:	b.eq	2f30 <cap_copy_int@@Base+0x194>  // b.none
    2f14:	add	x12, x12, w12, uxtw #1
    2f18:	add	x12, x8, x12
    2f1c:	ldrb	w12, [x12, #2]
    2f20:	orr	w13, w10, #0x2
    2f24:	cmp	w13, w9
    2f28:	bfi	w11, w12, #16, #8
    2f2c:	b.ne	2f94 <cap_copy_int@@Base+0x1f8>  // b.any
    2f30:	mov	w12, wzr
    2f34:	str	w11, [x0, #16]
    2f38:	str	w12, [x0, #28]
    2f3c:	ldr	x19, [sp, #16]
    2f40:	ldp	x29, x30, [sp], #32
    2f44:	ret
    2f48:	add	x12, x13, w13, uxtw #1
    2f4c:	ldrb	w14, [x8, x12]
    2f50:	add	w12, w13, #0x1
    2f54:	cmp	w12, w9
    2f58:	bfi	w11, w14, #24, #8
    2f5c:	str	w11, [x0, #8]
    2f60:	b.ne	2fc8 <cap_copy_int@@Base+0x22c>  // b.any
    2f64:	mov	w12, wzr
    2f68:	b	2e58 <cap_copy_int@@Base+0xbc>
    2f6c:	add	x12, x13, w13, uxtw #1
    2f70:	add	x12, x8, x12
    2f74:	ldrb	w14, [x12, #1]
    2f78:	add	w12, w13, #0x1
    2f7c:	cmp	w12, w9
    2f80:	bfi	w11, w14, #24, #8
    2f84:	str	w11, [x0, #12]
    2f88:	b.ne	301c <cap_copy_int@@Base+0x280>  // b.any
    2f8c:	mov	w12, wzr
    2f90:	b	2ec8 <cap_copy_int@@Base+0x12c>
    2f94:	add	x12, x13, w13, uxtw #1
    2f98:	add	x12, x8, x12
    2f9c:	ldrb	w14, [x12, #2]
    2fa0:	add	w12, w13, #0x1
    2fa4:	cmp	w12, w9
    2fa8:	bfi	w11, w14, #24, #8
    2fac:	str	w11, [x0, #16]
    2fb0:	b.ne	3080 <cap_copy_int@@Base+0x2e4>  // b.any
    2fb4:	mov	w12, wzr
    2fb8:	str	w12, [x0, #28]
    2fbc:	ldr	x19, [sp, #16]
    2fc0:	ldp	x29, x30, [sp], #32
    2fc4:	ret
    2fc8:	add	x11, x12, w12, uxtw #1
    2fcc:	ldrb	w12, [x8, x11]
    2fd0:	add	w11, w13, #0x2
    2fd4:	cmp	w11, w9
    2fd8:	b.eq	2e58 <cap_copy_int@@Base+0xbc>  // b.none
    2fdc:	add	x11, x11, w11, uxtw #1
    2fe0:	ldrb	w14, [x8, x11]
    2fe4:	add	w11, w13, #0x3
    2fe8:	cmp	w11, w9
    2fec:	bfi	w12, w14, #8, #8
    2ff0:	b.eq	2e58 <cap_copy_int@@Base+0xbc>  // b.none
    2ff4:	add	x11, x11, w11, uxtw #1
    2ff8:	ldrb	w11, [x8, x11]
    2ffc:	orr	w10, w10, #0x6
    3000:	cmp	w10, w9
    3004:	bfi	w12, w11, #16, #8
    3008:	b.eq	2e58 <cap_copy_int@@Base+0xbc>  // b.none
    300c:	add	x10, x10, w10, uxtw #1
    3010:	ldrb	w10, [x8, x10]
    3014:	bfi	w12, w10, #24, #8
    3018:	b	2e58 <cap_copy_int@@Base+0xbc>
    301c:	add	x11, x12, w12, uxtw #1
    3020:	add	x11, x8, x11
    3024:	ldrb	w12, [x11, #1]
    3028:	add	w11, w13, #0x2
    302c:	cmp	w11, w9
    3030:	b.eq	2ec8 <cap_copy_int@@Base+0x12c>  // b.none
    3034:	add	x11, x11, w11, uxtw #1
    3038:	add	x11, x8, x11
    303c:	ldrb	w14, [x11, #1]
    3040:	add	w11, w13, #0x3
    3044:	cmp	w11, w9
    3048:	bfi	w12, w14, #8, #8
    304c:	b.eq	2ec8 <cap_copy_int@@Base+0x12c>  // b.none
    3050:	add	x11, x11, w11, uxtw #1
    3054:	add	x11, x8, x11
    3058:	ldrb	w11, [x11, #1]
    305c:	orr	w10, w10, #0x6
    3060:	cmp	w10, w9
    3064:	bfi	w12, w11, #16, #8
    3068:	b.eq	2ec8 <cap_copy_int@@Base+0x12c>  // b.none
    306c:	add	x10, x10, w10, uxtw #1
    3070:	add	x10, x8, x10
    3074:	ldrb	w10, [x10, #1]
    3078:	bfi	w12, w10, #24, #8
    307c:	b	2ec8 <cap_copy_int@@Base+0x12c>
    3080:	add	x11, x12, w12, uxtw #1
    3084:	add	x11, x8, x11
    3088:	ldrb	w12, [x11, #2]
    308c:	add	w11, w13, #0x2
    3090:	cmp	w11, w9
    3094:	b.eq	2f38 <cap_copy_int@@Base+0x19c>  // b.none
    3098:	add	x11, x11, w11, uxtw #1
    309c:	add	x11, x8, x11
    30a0:	ldrb	w14, [x11, #2]
    30a4:	add	w11, w13, #0x3
    30a8:	cmp	w11, w9
    30ac:	bfi	w12, w14, #8, #8
    30b0:	b.eq	2f38 <cap_copy_int@@Base+0x19c>  // b.none
    30b4:	add	x11, x11, w11, uxtw #1
    30b8:	add	x11, x8, x11
    30bc:	ldrb	w11, [x11, #2]
    30c0:	orr	w10, w10, #0x6
    30c4:	cmp	w10, w9
    30c8:	bfi	w12, w11, #16, #8
    30cc:	b.eq	2f38 <cap_copy_int@@Base+0x19c>  // b.none
    30d0:	add	x9, x10, w10, uxtw #1
    30d4:	add	x8, x8, x9
    30d8:	ldrb	w8, [x8, #2]
    30dc:	bfi	w12, w8, #24, #8
    30e0:	str	w12, [x0, #28]
    30e4:	ldr	x19, [sp, #16]
    30e8:	ldp	x29, x30, [sp], #32
    30ec:	ret

00000000000030f0 <cap_get_flag@@Base>:
    30f0:	stp	x29, x30, [sp, #-16]!
    30f4:	mov	x29, sp
    30f8:	cbz	x0, 3154 <cap_get_flag@@Base+0x64>
    30fc:	cbz	x3, 3154 <cap_get_flag@@Base+0x64>
    3100:	cmp	w2, #0x2
    3104:	b.hi	3154 <cap_get_flag@@Base+0x64>  // b.pmore
    3108:	cmp	w1, #0x3f
    310c:	b.hi	3154 <cap_get_flag@@Base+0x64>  // b.pmore
    3110:	ldur	w8, [x0, #-4]
    3114:	mov	w9, #0x90d0                	// #37072
    3118:	movk	w9, #0xca, lsl #16
    311c:	cmp	w8, w9
    3120:	b.ne	3154 <cap_get_flag@@Base+0x64>  // b.any
    3124:	lsr	w9, w1, #5
    3128:	mov	w10, #0xc                   	// #12
    312c:	umaddl	x9, w9, w10, x0
    3130:	add	x9, x9, w2, uxtw #2
    3134:	ldr	w9, [x9, #8]
    3138:	mov	w8, wzr
    313c:	lsr	w9, w9, w1
    3140:	and	w9, w9, #0x1
    3144:	str	w9, [x3]
    3148:	mov	w0, w8
    314c:	ldp	x29, x30, [sp], #16
    3150:	ret
    3154:	bl	1bb0 <__errno_location@plt>
    3158:	mov	w8, #0x16                  	// #22
    315c:	str	w8, [x0]
    3160:	mov	w8, #0xffffffff            	// #-1
    3164:	mov	w0, w8
    3168:	ldp	x29, x30, [sp], #16
    316c:	ret

0000000000003170 <cap_set_flag@@Base>:
    3170:	stp	x29, x30, [sp, #-16]!
    3174:	mov	x29, sp
    3178:	cbz	x0, 3238 <cap_set_flag@@Base+0xc8>
    317c:	cmp	w1, #0x2
    3180:	b.hi	3238 <cap_set_flag@@Base+0xc8>  // b.pmore
    3184:	sub	w8, w2, #0x1
    3188:	cmp	w8, #0x3e
    318c:	b.hi	3238 <cap_set_flag@@Base+0xc8>  // b.pmore
    3190:	ldur	w8, [x0, #-4]
    3194:	mov	w9, #0x90d0                	// #37072
    3198:	movk	w9, #0xca, lsl #16
    319c:	cmp	w8, w9
    31a0:	b.ne	3238 <cap_set_flag@@Base+0xc8>  // b.any
    31a4:	cmp	w4, #0x1
    31a8:	b.hi	3238 <cap_set_flag@@Base+0xc8>  // b.pmore
    31ac:	mov	w8, w1
    31b0:	cmp	w4, #0x1
    31b4:	mov	w9, w2
    31b8:	mov	w10, #0x1                   	// #1
    31bc:	mov	w11, #0xc                   	// #12
    31c0:	b.eq	31d4 <cap_set_flag@@Base+0x64>  // b.none
    31c4:	b	320c <cap_set_flag@@Base+0x9c>
    31c8:	subs	x9, x9, #0x1
    31cc:	add	x3, x3, #0x4
    31d0:	b.eq	3250 <cap_set_flag@@Base+0xe0>  // b.none
    31d4:	ldr	w12, [x3]
    31d8:	cmp	w12, #0x3f
    31dc:	b.hi	31c8 <cap_set_flag@@Base+0x58>  // b.pmore
    31e0:	lsr	x13, x12, #5
    31e4:	madd	x13, x13, x11, x0
    31e8:	add	x13, x13, x8, lsl #2
    31ec:	ldr	w14, [x13, #8]
    31f0:	lsl	w12, w10, w12
    31f4:	orr	w12, w14, w12
    31f8:	str	w12, [x13, #8]
    31fc:	b	31c8 <cap_set_flag@@Base+0x58>
    3200:	subs	x9, x9, #0x1
    3204:	add	x3, x3, #0x4
    3208:	b.eq	3250 <cap_set_flag@@Base+0xe0>  // b.none
    320c:	ldr	w12, [x3]
    3210:	cmp	w12, #0x3f
    3214:	b.hi	3200 <cap_set_flag@@Base+0x90>  // b.pmore
    3218:	lsr	x13, x12, #5
    321c:	madd	x13, x13, x11, x0
    3220:	add	x13, x13, x8, lsl #2
    3224:	ldr	w14, [x13, #8]
    3228:	lsl	w12, w10, w12
    322c:	bic	w12, w14, w12
    3230:	str	w12, [x13, #8]
    3234:	b	3200 <cap_set_flag@@Base+0x90>
    3238:	bl	1bb0 <__errno_location@plt>
    323c:	mov	w8, #0x16                  	// #22
    3240:	str	w8, [x0]
    3244:	mov	w0, #0xffffffff            	// #-1
    3248:	ldp	x29, x30, [sp], #16
    324c:	ret
    3250:	mov	w0, wzr
    3254:	ldp	x29, x30, [sp], #16
    3258:	ret

000000000000325c <cap_clear@@Base>:
    325c:	stp	x29, x30, [sp, #-16]!
    3260:	mov	x29, sp
    3264:	cbz	x0, 3294 <cap_clear@@Base+0x38>
    3268:	ldur	w9, [x0, #-4]
    326c:	mov	w10, #0x90d0                	// #37072
    3270:	movk	w10, #0xca, lsl #16
    3274:	mov	x8, x0
    3278:	cmp	w9, w10
    327c:	b.ne	3294 <cap_clear@@Base+0x38>  // b.any
    3280:	mov	w0, wzr
    3284:	stp	xzr, xzr, [x8, #8]
    3288:	str	xzr, [x8, #24]
    328c:	ldp	x29, x30, [sp], #16
    3290:	ret
    3294:	bl	1bb0 <__errno_location@plt>
    3298:	mov	w8, #0x16                  	// #22
    329c:	str	w8, [x0]
    32a0:	mov	w0, #0xffffffff            	// #-1
    32a4:	ldp	x29, x30, [sp], #16
    32a8:	ret

00000000000032ac <cap_clear_flag@@Base>:
    32ac:	stp	x29, x30, [sp, #-16]!
    32b0:	mov	x29, sp
    32b4:	cbz	x0, 32f0 <cap_clear_flag@@Base+0x44>
    32b8:	cmp	w1, #0x2
    32bc:	b.hi	32f0 <cap_clear_flag@@Base+0x44>  // b.pmore
    32c0:	ldur	w8, [x0, #-4]
    32c4:	mov	w9, #0x90d0                	// #37072
    32c8:	movk	w9, #0xca, lsl #16
    32cc:	cmp	w8, w9
    32d0:	b.ne	32f0 <cap_clear_flag@@Base+0x44>  // b.any
    32d4:	add	x9, x0, w1, uxtw #2
    32d8:	mov	w8, wzr
    32dc:	str	wzr, [x9, #8]
    32e0:	str	wzr, [x9, #20]
    32e4:	mov	w0, w8
    32e8:	ldp	x29, x30, [sp], #16
    32ec:	ret
    32f0:	bl	1bb0 <__errno_location@plt>
    32f4:	mov	w8, #0x16                  	// #22
    32f8:	str	w8, [x0]
    32fc:	mov	w8, #0xffffffff            	// #-1
    3300:	mov	w0, w8
    3304:	ldp	x29, x30, [sp], #16
    3308:	ret

000000000000330c <cap_compare@@Base>:
    330c:	stp	x29, x30, [sp, #-16]!
    3310:	mov	x29, sp
    3314:	cbz	x0, 33a0 <cap_compare@@Base+0x94>
    3318:	cbz	x1, 33a0 <cap_compare@@Base+0x94>
    331c:	ldur	w9, [x0, #-4]
    3320:	mov	w8, #0x90d0                	// #37072
    3324:	movk	w8, #0xca, lsl #16
    3328:	cmp	w9, w8
    332c:	b.ne	33a0 <cap_compare@@Base+0x94>  // b.any
    3330:	ldur	w9, [x1, #-4]
    3334:	cmp	w9, w8
    3338:	b.ne	33a0 <cap_compare@@Base+0x94>  // b.any
    333c:	ldp	w8, w9, [x0, #8]
    3340:	ldp	w10, w11, [x1, #8]
    3344:	ldp	w12, w13, [x0, #16]
    3348:	cmp	w8, w10
    334c:	ldp	w14, w8, [x1, #16]
    3350:	cset	w10, ne  // ne = any
    3354:	cmp	w12, w14
    3358:	cset	w12, ne  // ne = any
    335c:	cmp	w9, w11
    3360:	cset	w9, ne  // ne = any
    3364:	cmp	w13, w8
    3368:	ldp	w11, w8, [x0, #24]
    336c:	bfi	w10, w12, #2, #1
    3370:	ldp	w13, w12, [x1, #24]
    3374:	bfi	w10, w9, #1, #1
    3378:	cset	w9, ne  // ne = any
    337c:	orr	w9, w10, w9
    3380:	cmp	w8, w12
    3384:	cset	w8, ne  // ne = any
    3388:	cmp	w11, w13
    338c:	cset	w10, ne  // ne = any
    3390:	orr	w8, w9, w8, lsl #2
    3394:	orr	w0, w8, w10, lsl #1
    3398:	ldp	x29, x30, [sp], #16
    339c:	ret
    33a0:	bl	1bb0 <__errno_location@plt>
    33a4:	mov	w8, #0x16                  	// #22
    33a8:	str	w8, [x0]
    33ac:	mov	w0, #0xffffffff            	// #-1
    33b0:	ldp	x29, x30, [sp], #16
    33b4:	ret

00000000000033b8 <cap_from_text@@Base>:
    33b8:	sub	sp, sp, #0x90
    33bc:	stp	x29, x30, [sp, #48]
    33c0:	stp	x28, x27, [sp, #64]
    33c4:	stp	x26, x25, [sp, #80]
    33c8:	stp	x24, x23, [sp, #96]
    33cc:	stp	x22, x21, [sp, #112]
    33d0:	stp	x20, x19, [sp, #128]
    33d4:	add	x29, sp, #0x30
    33d8:	stur	x0, [x29, #-8]
    33dc:	cbz	x0, 38c4 <cap_from_text@@Base+0x50c>
    33e0:	mov	x21, x0
    33e4:	bl	1ad0 <cap_init@plt>
    33e8:	mov	x19, x0
    33ec:	cbz	x0, 38d4 <cap_from_text@@Base+0x51c>
    33f0:	ldr	w8, [x19]
    33f4:	mov	w9, #0x330                 	// #816
    33f8:	movk	w9, #0x1998, lsl #16
    33fc:	cmp	w8, w9
    3400:	b.eq	342c <cap_from_text@@Base+0x74>  // b.none
    3404:	mov	w9, #0x522                 	// #1314
    3408:	movk	w9, #0x2008, lsl #16
    340c:	cmp	w8, w9
    3410:	b.eq	3424 <cap_from_text@@Base+0x6c>  // b.none
    3414:	mov	w9, #0x1026                	// #4134
    3418:	movk	w9, #0x2007, lsl #16
    341c:	cmp	w8, w9
    3420:	b.ne	38c4 <cap_from_text@@Base+0x50c>  // b.any
    3424:	mov	w22, #0x2                   	// #2
    3428:	b	3430 <cap_from_text@@Base+0x78>
    342c:	mov	w22, #0x1                   	// #1
    3430:	bl	1af0 <__ctype_b_loc@plt>
    3434:	ldrb	w11, [x21]
    3438:	lsl	w8, w22, #5
    343c:	str	w8, [sp, #20]
    3440:	sub	w8, w22, #0x1
    3444:	sub	x10, x29, #0x10
    3448:	mov	w9, #0xc                   	// #12
    344c:	add	x8, x10, w8, uxtw #2
    3450:	madd	x28, x22, x9, x19
    3454:	mov	x20, x0
    3458:	lsl	x26, x22, #2
    345c:	str	x8, [sp, #8]
    3460:	sub	x24, x10, #0x4
    3464:	sub	x8, x28, #0x4
    3468:	add	x23, x28, #0x4
    346c:	str	x8, [sp, #24]
    3470:	stur	xzr, [x29, #-16]
    3474:	ldr	x25, [x20]
    3478:	and	x8, x11, #0xff
    347c:	ldrh	w8, [x25, x8, lsl #1]
    3480:	tbz	w8, #13, 3494 <cap_from_text@@Base+0xdc>
    3484:	ldrb	w11, [x21, #1]!
    3488:	ldrh	w8, [x25, x11, lsl #1]
    348c:	tbnz	w8, #13, 3484 <cap_from_text@@Base+0xcc>
    3490:	stur	x21, [x29, #-8]
    3494:	tst	w11, #0xff
    3498:	b.eq	38d4 <cap_from_text@@Base+0x51c>  // b.none
    349c:	and	w9, w11, #0xff
    34a0:	cmp	w9, #0x5f
    34a4:	b.eq	3518 <cap_from_text@@Base+0x160>  // b.none
    34a8:	tbnz	w8, #3, 3518 <cap_from_text@@Base+0x160>
    34ac:	and	w8, w11, #0xff
    34b0:	cmp	w8, #0x2b
    34b4:	b.eq	38bc <cap_from_text@@Base+0x504>  // b.none
    34b8:	cmp	w8, #0x2d
    34bc:	b.eq	38bc <cap_from_text@@Base+0x504>  // b.none
    34c0:	bl	19d0 <cap_max_bits@plt>
    34c4:	add	w8, w0, #0x1f
    34c8:	cmp	w0, #0x0
    34cc:	csel	w8, w8, w0, lt  // lt = tstop
    34d0:	and	w8, w8, #0xffffffe0
    34d4:	sub	w8, w0, w8
    34d8:	mov	x9, #0xffffffffffffffff    	// #-1
    34dc:	lsl	x8, x9, x8
    34e0:	ldr	x9, [sp, #8]
    34e4:	ldr	w10, [sp, #20]
    34e8:	mvn	w8, w8
    34ec:	sub	w11, w10, #0x20
    34f0:	cmp	w0, w11
    34f4:	csel	w12, w8, wzr, hi  // hi = pmore
    34f8:	cmp	w0, w10
    34fc:	csinv	w10, w12, wzr, cc  // cc = lo, ul, last
    3500:	str	w10, [x9], #-4
    3504:	mov	w10, w11
    3508:	cbnz	w11, 34ec <cap_from_text@@Base+0x134>
    350c:	mov	w8, wzr
    3510:	mov	x27, x21
    3514:	b	362c <cap_from_text@@Base+0x274>
    3518:	bl	1a20 <__ctype_tolower_loc@plt>
    351c:	ldrb	w8, [x21]
    3520:	mov	x22, x0
    3524:	ldr	x9, [x22]
    3528:	and	x8, x8, #0xff
    352c:	ldr	w8, [x9, x8, lsl #2]
    3530:	cmp	w8, #0x61
    3534:	b.ne	35c4 <cap_from_text@@Base+0x20c>  // b.any
    3538:	ldrb	w8, [x21, #1]
    353c:	ldr	w8, [x9, x8, lsl #2]
    3540:	cmp	w8, #0x6c
    3544:	b.ne	35c4 <cap_from_text@@Base+0x20c>  // b.any
    3548:	ldrb	w8, [x21, #2]
    354c:	ldr	w8, [x9, x8, lsl #2]
    3550:	cmp	w8, #0x6c
    3554:	b.ne	35c4 <cap_from_text@@Base+0x20c>  // b.any
    3558:	add	x27, x21, #0x3
    355c:	ldrb	w8, [x27]
    3560:	cmp	x8, #0x5f
    3564:	b.eq	35c4 <cap_from_text@@Base+0x20c>  // b.none
    3568:	ldrh	w8, [x25, x8, lsl #1]
    356c:	tbnz	w8, #3, 35c4 <cap_from_text@@Base+0x20c>
    3570:	stur	x27, [x29, #-8]
    3574:	bl	19d0 <cap_max_bits@plt>
    3578:	add	w8, w0, #0x1f
    357c:	cmp	w0, #0x0
    3580:	csel	w8, w8, w0, lt  // lt = tstop
    3584:	and	w8, w8, #0xffffffe0
    3588:	sub	w8, w0, w8
    358c:	mov	x9, #0xffffffffffffffff    	// #-1
    3590:	lsl	x8, x9, x8
    3594:	ldr	x9, [sp, #8]
    3598:	ldr	w10, [sp, #20]
    359c:	mvn	w8, w8
    35a0:	sub	w11, w10, #0x20
    35a4:	cmp	w0, w11
    35a8:	csel	w12, w8, wzr, hi  // hi = pmore
    35ac:	cmp	w0, w10
    35b0:	csinv	w10, w12, wzr, cc  // cc = lo, ul, last
    35b4:	str	w10, [x9], #-4
    35b8:	mov	w10, w11
    35bc:	cbnz	w11, 35a0 <cap_from_text@@Base+0x1e8>
    35c0:	b	35f8 <cap_from_text@@Base+0x240>
    35c4:	sub	x0, x29, #0x8
    35c8:	bl	38f8 <cap_from_text@@Base+0x540>
    35cc:	cmn	w0, #0x1
    35d0:	b.eq	38bc <cap_from_text@@Base+0x504>  // b.none
    35d4:	asr	w8, w0, #5
    35d8:	sbfiz	x8, x8, #2, #32
    35dc:	sub	x11, x29, #0x10
    35e0:	ldr	w9, [x11, x8]
    35e4:	ldur	x27, [x29, #-8]
    35e8:	mov	w10, #0x1                   	// #1
    35ec:	lsl	w10, w10, w0
    35f0:	orr	w9, w9, w10
    35f4:	str	w9, [x11, x8]
    35f8:	ldrb	w8, [x27]
    35fc:	cmp	w8, #0x2c
    3600:	b.ne	3628 <cap_from_text@@Base+0x270>  // b.any
    3604:	add	x21, x27, #0x1
    3608:	ldr	x25, [x20]
    360c:	stur	x21, [x29, #-8]
    3610:	ldrb	w8, [x27, #1]
    3614:	cmp	x8, #0x5f
    3618:	b.eq	3524 <cap_from_text@@Base+0x16c>  // b.none
    361c:	ldrh	w9, [x25, x8, lsl #1]
    3620:	tbnz	w9, #3, 3524 <cap_from_text@@Base+0x16c>
    3624:	b	38bc <cap_from_text@@Base+0x504>
    3628:	mov	w8, #0x1                   	// #1
    362c:	add	x21, x27, #0x1
    3630:	stur	x21, [x29, #-8]
    3634:	ldrb	w9, [x27]
    3638:	cmp	w9, #0x2b
    363c:	b.eq	3688 <cap_from_text@@Base+0x2d0>  // b.none
    3640:	cmp	w9, #0x2d
    3644:	b.eq	3688 <cap_from_text@@Base+0x2d0>  // b.none
    3648:	cmp	w9, #0x3d
    364c:	b.ne	38bc <cap_from_text@@Base+0x504>  // b.any
    3650:	ldrb	w9, [x21]
    3654:	cmp	w9, #0x2d
    3658:	b.eq	3664 <cap_from_text@@Base+0x2ac>  // b.none
    365c:	cmp	w9, #0x2b
    3660:	b.ne	3684 <cap_from_text@@Base+0x2cc>  // b.any
    3664:	cbz	w8, 38bc <cap_from_text@@Base+0x504>
    3668:	cmp	w9, #0x2b
    366c:	mov	w9, #0x4d                  	// #77
    3670:	mov	w10, #0x50                  	// #80
    3674:	add	x21, x27, #0x2
    3678:	csel	w9, w10, w9, eq  // eq = none
    367c:	stur	x21, [x29, #-8]
    3680:	b	3688 <cap_from_text@@Base+0x2d0>
    3684:	mov	w9, #0x3d                  	// #61
    3688:	ldrb	w11, [x21]
    368c:	mov	w10, wzr
    3690:	tst	w11, #0xff
    3694:	b.eq	36d4 <cap_from_text@@Base+0x31c>  // b.none
    3698:	ldr	x12, [x20]
    369c:	and	x13, x11, #0xff
    36a0:	ldrh	w12, [x12, x13, lsl #1]
    36a4:	tbnz	w12, #13, 36d4 <cap_from_text@@Base+0x31c>
    36a8:	and	w11, w11, #0xff
    36ac:	add	x21, x21, #0x1
    36b0:	cmp	w11, #0x65
    36b4:	stur	x21, [x29, #-8]
    36b8:	b.eq	37bc <cap_from_text@@Base+0x404>  // b.none
    36bc:	cmp	w11, #0x70
    36c0:	b.eq	37c4 <cap_from_text@@Base+0x40c>  // b.none
    36c4:	cmp	w11, #0x69
    36c8:	b.ne	38bc <cap_from_text@@Base+0x504>  // b.any
    36cc:	mov	w11, #0x4                   	// #4
    36d0:	b	37c8 <cap_from_text@@Base+0x410>
    36d4:	and	w11, w9, #0xff
    36d8:	cmp	w11, #0x3d
    36dc:	b.ne	38bc <cap_from_text@@Base+0x504>  // b.any
    36e0:	ldr	x12, [sp, #24]
    36e4:	mov	x11, x26
    36e8:	ldr	w13, [x24, x11]
    36ec:	ldr	w14, [x12]
    36f0:	subs	x11, x11, #0x4
    36f4:	bic	w13, w14, w13
    36f8:	str	w13, [x12], #-12
    36fc:	b.ne	36e8 <cap_from_text@@Base+0x330>  // b.any
    3700:	mov	x11, x26
    3704:	mov	x12, x28
    3708:	ldr	w13, [x24, x11]
    370c:	ldr	w14, [x12]
    3710:	subs	x11, x11, #0x4
    3714:	bic	w13, w14, w13
    3718:	str	w13, [x12], #-12
    371c:	b.ne	3708 <cap_from_text@@Base+0x350>  // b.any
    3720:	mov	x11, x26
    3724:	mov	x12, x23
    3728:	ldr	w13, [x24, x11]
    372c:	ldr	w14, [x12]
    3730:	subs	x11, x11, #0x4
    3734:	bic	w13, w14, w13
    3738:	str	w13, [x12], #-12
    373c:	b.ne	3728 <cap_from_text@@Base+0x370>  // b.any
    3740:	and	w11, w9, #0xff
    3744:	cmp	w11, #0x4d
    3748:	b.ne	37f4 <cap_from_text@@Base+0x43c>  // b.any
    374c:	tbz	w10, #0, 3770 <cap_from_text@@Base+0x3b8>
    3750:	ldr	x12, [sp, #24]
    3754:	mov	x11, x26
    3758:	ldr	w13, [x24, x11]
    375c:	ldr	w14, [x12]
    3760:	subs	x11, x11, #0x4
    3764:	bic	w13, w14, w13
    3768:	str	w13, [x12], #-12
    376c:	b.ne	3758 <cap_from_text@@Base+0x3a0>  // b.any
    3770:	tbz	w10, #1, 3794 <cap_from_text@@Base+0x3dc>
    3774:	mov	x11, x26
    3778:	mov	x12, x28
    377c:	ldr	w13, [x24, x11]
    3780:	ldr	w14, [x12]
    3784:	subs	x11, x11, #0x4
    3788:	bic	w13, w14, w13
    378c:	str	w13, [x12], #-12
    3790:	b.ne	377c <cap_from_text@@Base+0x3c4>  // b.any
    3794:	tbz	w10, #2, 3860 <cap_from_text@@Base+0x4a8>
    3798:	mov	x11, x26
    379c:	mov	x12, x23
    37a0:	ldr	w13, [x24, x11]
    37a4:	ldr	w14, [x12]
    37a8:	subs	x11, x11, #0x4
    37ac:	bic	w13, w14, w13
    37b0:	str	w13, [x12], #-12
    37b4:	b.ne	37a0 <cap_from_text@@Base+0x3e8>  // b.any
    37b8:	b	3860 <cap_from_text@@Base+0x4a8>
    37bc:	mov	w11, #0x1                   	// #1
    37c0:	b	37c8 <cap_from_text@@Base+0x410>
    37c4:	mov	w11, #0x2                   	// #2
    37c8:	and	w12, w9, #0xff
    37cc:	sub	w12, w12, #0x2b
    37d0:	cmp	w12, #0x25
    37d4:	orr	w10, w10, w11
    37d8:	b.hi	3860 <cap_from_text@@Base+0x4a8>  // b.pmore
    37dc:	adrp	x14, 4000 <cap_to_text@@Base+0x52c>
    37e0:	add	x14, x14, #0x71d
    37e4:	adr	x11, 36e0 <cap_from_text@@Base+0x328>
    37e8:	ldrb	w13, [x14, x12]
    37ec:	add	x11, x11, x13, lsl #2
    37f0:	br	x11
    37f4:	tbz	w10, #0, 3818 <cap_from_text@@Base+0x460>
    37f8:	ldr	x12, [sp, #24]
    37fc:	mov	x11, x26
    3800:	ldr	w13, [x24, x11]
    3804:	ldr	w14, [x12]
    3808:	subs	x11, x11, #0x4
    380c:	orr	w13, w14, w13
    3810:	str	w13, [x12], #-12
    3814:	b.ne	3800 <cap_from_text@@Base+0x448>  // b.any
    3818:	tbz	w10, #1, 383c <cap_from_text@@Base+0x484>
    381c:	mov	x11, x26
    3820:	mov	x12, x28
    3824:	ldr	w13, [x24, x11]
    3828:	ldr	w14, [x12]
    382c:	subs	x11, x11, #0x4
    3830:	orr	w13, w14, w13
    3834:	str	w13, [x12], #-12
    3838:	b.ne	3824 <cap_from_text@@Base+0x46c>  // b.any
    383c:	tbz	w10, #2, 3860 <cap_from_text@@Base+0x4a8>
    3840:	mov	x11, x26
    3844:	mov	x12, x23
    3848:	ldr	w13, [x24, x11]
    384c:	ldr	w14, [x12]
    3850:	subs	x11, x11, #0x4
    3854:	orr	w13, w14, w13
    3858:	str	w13, [x12], #-12
    385c:	b.ne	3848 <cap_from_text@@Base+0x490>  // b.any
    3860:	ldrb	w12, [x21]
    3864:	cmp	w12, #0x2b
    3868:	b.eq	3874 <cap_from_text@@Base+0x4bc>  // b.none
    386c:	cmp	w12, #0x2d
    3870:	b.ne	38a4 <cap_from_text@@Base+0x4ec>  // b.any
    3874:	cbz	w8, 38bc <cap_from_text@@Base+0x504>
    3878:	add	x9, x21, #0x1
    387c:	stur	x9, [x29, #-8]
    3880:	ldr	x10, [x20]
    3884:	ldrb	w11, [x21, #1]
    3888:	ldrh	w10, [x10, x11, lsl #1]
    388c:	tbz	w10, #10, 38bc <cap_from_text@@Base+0x504>
    3890:	mov	w10, wzr
    3894:	mov	x21, x9
    3898:	mov	w9, w12
    389c:	cbnz	w11, 38ac <cap_from_text@@Base+0x4f4>
    38a0:	b	3470 <cap_from_text@@Base+0xb8>
    38a4:	ldrb	w11, [x21]
    38a8:	cbz	w11, 3470 <cap_from_text@@Base+0xb8>
    38ac:	ldr	x12, [x20]
    38b0:	ldrh	w12, [x12, w11, uxtw #1]
    38b4:	tbz	w12, #13, 3690 <cap_from_text@@Base+0x2d8>
    38b8:	b	3470 <cap_from_text@@Base+0xb8>
    38bc:	mov	x0, x19
    38c0:	bl	1b70 <cap_free@plt>
    38c4:	bl	1bb0 <__errno_location@plt>
    38c8:	mov	x19, xzr
    38cc:	mov	w8, #0x16                  	// #22
    38d0:	str	w8, [x0]
    38d4:	mov	x0, x19
    38d8:	ldp	x20, x19, [sp, #128]
    38dc:	ldp	x22, x21, [sp, #112]
    38e0:	ldp	x24, x23, [sp, #96]
    38e4:	ldp	x26, x25, [sp, #80]
    38e8:	ldp	x28, x27, [sp, #64]
    38ec:	ldp	x29, x30, [sp, #48]
    38f0:	add	sp, sp, #0x90
    38f4:	ret
    38f8:	sub	sp, sp, #0x60
    38fc:	stp	x29, x30, [sp, #16]
    3900:	stp	x26, x25, [sp, #32]
    3904:	stp	x24, x23, [sp, #48]
    3908:	stp	x22, x21, [sp, #64]
    390c:	stp	x20, x19, [sp, #80]
    3910:	add	x29, sp, #0x10
    3914:	ldr	x20, [x0]
    3918:	mov	x19, x0
    391c:	str	x20, [sp, #8]
    3920:	bl	1af0 <__ctype_b_loc@plt>
    3924:	ldr	x8, [x0]
    3928:	ldrb	w10, [x20]
    392c:	ldrh	w9, [x8, x10, lsl #1]
    3930:	tbnz	w9, #11, 39e8 <cap_from_text@@Base+0x630>
    3934:	mov	x21, x0
    3938:	cbz	w10, 3968 <cap_from_text@@Base+0x5b0>
    393c:	cmp	w10, #0x5f
    3940:	b.eq	3948 <cap_from_text@@Base+0x590>  // b.none
    3944:	tbz	w9, #10, 3968 <cap_from_text@@Base+0x5b0>
    3948:	mov	w9, #0x1                   	// #1
    394c:	ldrb	w10, [x20, w9, uxtw]
    3950:	cbz	x10, 3968 <cap_from_text@@Base+0x5b0>
    3954:	cmp	w10, #0x5f
    3958:	add	w9, w9, #0x1
    395c:	b.eq	394c <cap_from_text@@Base+0x594>  // b.none
    3960:	ldrh	w10, [x8, x10, lsl #1]
    3964:	tbnz	w10, #10, 394c <cap_from_text@@Base+0x594>
    3968:	bl	19d0 <cap_max_bits@plt>
    396c:	cbz	w0, 3a00 <cap_from_text@@Base+0x648>
    3970:	adrp	x24, 14000 <cap_set_nsowner@@Base+0xf910>
    3974:	ldr	x24, [x24, #4032]
    3978:	mov	w23, w0
    397c:	b	3988 <cap_from_text@@Base+0x5d0>
    3980:	sub	x23, x23, #0x1
    3984:	cbz	w22, 3a00 <cap_from_text@@Base+0x648>
    3988:	sub	w22, w23, #0x1
    398c:	ldr	x26, [x24, w22, uxtw #3]
    3990:	cbz	x26, 3980 <cap_from_text@@Base+0x5c8>
    3994:	ldrb	w25, [x26]
    3998:	mov	x8, x20
    399c:	cbz	w25, 39cc <cap_from_text@@Base+0x614>
    39a0:	bl	1a20 <__ctype_tolower_loc@plt>
    39a4:	ldr	x9, [x0]
    39a8:	add	x10, x26, #0x1
    39ac:	mov	x8, x20
    39b0:	ldrb	w11, [x8]
    39b4:	ldr	w11, [x9, x11, lsl #2]
    39b8:	cmp	w11, w25, uxtb
    39bc:	b.ne	3980 <cap_from_text@@Base+0x5c8>  // b.any
    39c0:	ldrb	w25, [x10], #1
    39c4:	add	x8, x8, #0x1
    39c8:	cbnz	w25, 39b0 <cap_from_text@@Base+0x5f8>
    39cc:	ldrb	w9, [x8]
    39d0:	cmp	x9, #0x5f
    39d4:	b.eq	3980 <cap_from_text@@Base+0x5c8>  // b.none
    39d8:	ldr	x10, [x21]
    39dc:	ldrh	w9, [x10, x9, lsl #1]
    39e0:	tbnz	w9, #3, 3980 <cap_from_text@@Base+0x5c8>
    39e4:	b	3a10 <cap_from_text@@Base+0x658>
    39e8:	add	x1, sp, #0x8
    39ec:	mov	x0, x20
    39f0:	mov	w2, wzr
    39f4:	bl	1990 <strtoul@plt>
    39f8:	cmp	x0, #0x3f
    39fc:	b.ls	3a08 <cap_from_text@@Base+0x650>  // b.plast
    3a00:	mov	w22, #0xffffffff            	// #-1
    3a04:	b	3a14 <cap_from_text@@Base+0x65c>
    3a08:	ldr	x8, [sp, #8]
    3a0c:	mov	x22, x0
    3a10:	str	x8, [x19]
    3a14:	mov	w0, w22
    3a18:	ldp	x20, x19, [sp, #80]
    3a1c:	ldp	x22, x21, [sp, #64]
    3a20:	ldp	x24, x23, [sp, #48]
    3a24:	ldp	x26, x25, [sp, #32]
    3a28:	ldp	x29, x30, [sp, #16]
    3a2c:	add	sp, sp, #0x60
    3a30:	ret

0000000000003a34 <cap_from_name@@Base>:
    3a34:	stp	x29, x30, [sp, #-32]!
    3a38:	str	x19, [sp, #16]
    3a3c:	mov	x29, sp
    3a40:	str	x0, [x29, #24]
    3a44:	add	x0, x29, #0x18
    3a48:	mov	x19, x1
    3a4c:	bl	38f8 <cap_from_text@@Base+0x540>
    3a50:	cbz	x19, 3a5c <cap_from_name@@Base+0x28>
    3a54:	tbnz	w0, #31, 3a5c <cap_from_name@@Base+0x28>
    3a58:	str	w0, [x19]
    3a5c:	ldr	x19, [sp, #16]
    3a60:	asr	w0, w0, #31
    3a64:	ldp	x29, x30, [sp], #32
    3a68:	ret

0000000000003a6c <cap_to_name@@Base>:
    3a6c:	stp	x29, x30, [sp, #-32]!
    3a70:	str	x19, [sp, #16]
    3a74:	mov	x29, sp
    3a78:	mov	w2, w0
    3a7c:	cmp	w0, #0x26
    3a80:	b.cc	3abc <cap_to_name@@Base+0x50>  // b.lo, b.ul, b.last
    3a84:	adrp	x1, 4000 <cap_to_text@@Base+0x52c>
    3a88:	add	x1, x1, #0x961
    3a8c:	add	x0, x29, #0x18
    3a90:	bl	1a10 <asprintf@plt>
    3a94:	ldr	x0, [x29, #24]
    3a98:	bl	19e0 <_libcap_strdup@plt>
    3a9c:	ldr	x8, [x29, #24]
    3aa0:	mov	x19, x0
    3aa4:	mov	x0, x8
    3aa8:	bl	1b10 <free@plt>
    3aac:	mov	x0, x19
    3ab0:	ldr	x19, [sp, #16]
    3ab4:	ldp	x29, x30, [sp], #32
    3ab8:	ret
    3abc:	adrp	x8, 14000 <cap_set_nsowner@@Base+0xf910>
    3ac0:	ldr	x8, [x8, #4032]
    3ac4:	ldr	x19, [sp, #16]
    3ac8:	ldr	x0, [x8, w2, uxtw #3]
    3acc:	ldp	x29, x30, [sp], #32
    3ad0:	b	19e0 <_libcap_strdup@plt>

0000000000003ad4 <cap_to_text@@Base>:
    3ad4:	stp	x29, x30, [sp, #-96]!
    3ad8:	stp	x28, x27, [sp, #16]
    3adc:	stp	x26, x25, [sp, #32]
    3ae0:	stp	x24, x23, [sp, #48]
    3ae4:	stp	x22, x21, [sp, #64]
    3ae8:	stp	x20, x19, [sp, #80]
    3aec:	mov	x29, sp
    3af0:	sub	sp, sp, #0x610
    3af4:	cbz	x0, 3ba0 <cap_to_text@@Base+0xcc>
    3af8:	ldur	w8, [x0, #-4]
    3afc:	mov	w9, #0x90d0                	// #37072
    3b00:	movk	w9, #0xca, lsl #16
    3b04:	mov	x20, x0
    3b08:	cmp	w8, w9
    3b0c:	b.ne	3ba0 <cap_to_text@@Base+0xcc>  // b.any
    3b10:	movi	v0.2d, #0x0
    3b14:	mov	x19, x1
    3b18:	stp	q0, q0, [sp, #48]
    3b1c:	bl	19d0 <cap_max_bits@plt>
    3b20:	mov	w22, w0
    3b24:	mov	w8, wzr
    3b28:	str	x19, [sp, #40]
    3b2c:	cbz	w0, 3bb8 <cap_to_text@@Base+0xe4>
    3b30:	mov	w9, #0xc                   	// #12
    3b34:	mov	w10, #0x1                   	// #1
    3b38:	add	x11, sp, #0x30
    3b3c:	asr	w12, w8, #5
    3b40:	smaddl	x12, w12, w9, x20
    3b44:	ldp	w13, w15, [x12, #8]
    3b48:	lsl	w14, w10, w8
    3b4c:	ldr	w12, [x12, #16]
    3b50:	add	w8, w8, #0x1
    3b54:	tst	w13, w14
    3b58:	cset	w13, ne  // ne = any
    3b5c:	tst	w15, w14
    3b60:	orr	w15, w13, #0x2
    3b64:	csel	w13, w13, w15, eq  // eq = none
    3b68:	tst	w12, w14
    3b6c:	orr	w12, w13, #0x4
    3b70:	csel	w12, w13, w12, eq  // eq = none
    3b74:	lsl	x12, x12, #2
    3b78:	ldr	w13, [x11, x12]
    3b7c:	cmp	w22, w8
    3b80:	add	w13, w13, #0x1
    3b84:	str	w13, [x11, x12]
    3b88:	b.ne	3b3c <cap_to_text@@Base+0x68>  // b.any
    3b8c:	ldp	w14, w15, [sp, #72]
    3b90:	ldp	w12, w13, [sp, #64]
    3b94:	ldp	w10, w11, [sp, #56]
    3b98:	ldp	w8, w9, [sp, #48]
    3b9c:	b	3bd4 <cap_to_text@@Base+0x100>
    3ba0:	bl	1bb0 <__errno_location@plt>
    3ba4:	mov	x8, x0
    3ba8:	mov	w9, #0x16                  	// #22
    3bac:	mov	x0, xzr
    3bb0:	str	w9, [x8]
    3bb4:	b	416c <cap_to_text@@Base+0x698>
    3bb8:	mov	w9, wzr
    3bbc:	mov	w10, wzr
    3bc0:	mov	w11, wzr
    3bc4:	mov	w12, wzr
    3bc8:	mov	w13, wzr
    3bcc:	mov	w15, wzr
    3bd0:	mov	w14, wzr
    3bd4:	cmp	w14, w15
    3bd8:	mov	w14, #0x6                   	// #6
    3bdc:	add	x19, sp, #0x30
    3be0:	cinc	w14, w14, lt  // lt = tstop
    3be4:	ldr	w15, [x19, w14, uxtw #2]
    3be8:	adrp	x1, 4000 <cap_to_text@@Base+0x52c>
    3bec:	add	x1, x1, #0x964
    3bf0:	add	x0, sp, #0x5c
    3bf4:	cmp	w13, w15
    3bf8:	mov	w13, #0x5                   	// #5
    3bfc:	csel	w13, w14, w13, lt  // lt = tstop
    3c00:	ldr	w14, [x19, w13, uxtw #2]
    3c04:	mov	w15, #0x4                   	// #4
    3c08:	add	x21, sp, #0x5c
    3c0c:	cmp	w12, w14
    3c10:	csel	w12, w13, w15, lt  // lt = tstop
    3c14:	ldr	w13, [x19, w12, uxtw #2]
    3c18:	mov	w14, #0x3                   	// #3
    3c1c:	cmp	w11, w13
    3c20:	csel	w11, w12, w14, lt  // lt = tstop
    3c24:	ldr	w12, [x19, w11, uxtw #2]
    3c28:	mov	w13, #0x2                   	// #2
    3c2c:	adrp	x14, 4000 <cap_to_text@@Base+0x52c>
    3c30:	add	x14, x14, #0x905
    3c34:	cmp	w10, w12
    3c38:	csel	w10, w11, w13, lt  // lt = tstop
    3c3c:	ldr	w11, [x19, w10, uxtw #2]
    3c40:	adrp	x12, 4000 <cap_to_text@@Base+0x52c>
    3c44:	add	x12, x12, #0x85c
    3c48:	adrp	x13, 4000 <cap_to_text@@Base+0x52c>
    3c4c:	cmp	w9, w11
    3c50:	csinc	w9, w10, wzr, lt  // lt = tstop
    3c54:	ldr	w10, [x19, w9, uxtw #2]
    3c58:	adrp	x11, 4000 <cap_to_text@@Base+0x52c>
    3c5c:	add	x11, x11, #0x971
    3c60:	add	x13, x13, #0x96c
    3c64:	cmp	w8, w10
    3c68:	csel	w25, w9, wzr, lt  // lt = tstop
    3c6c:	tst	w25, #0x1
    3c70:	csel	x2, x11, x12, eq  // eq = none
    3c74:	tst	w25, #0x4
    3c78:	csel	x3, x11, x13, eq  // eq = none
    3c7c:	tst	w25, #0x2
    3c80:	csel	x4, x11, x14, eq  // eq = none
    3c84:	bl	1a00 <sprintf@plt>
    3c88:	add	x21, x21, w0, sxtw
    3c8c:	mvn	w27, w25
    3c90:	mov	w23, w22
    3c94:	sub	x12, x19, #0x4
    3c98:	add	w13, w25, #0x1
    3c9c:	mov	w24, #0x8                   	// #8
    3ca0:	mov	w14, #0x20                  	// #32
    3ca4:	mov	w28, #0xc                   	// #12
    3ca8:	mov	w15, #0x1                   	// #1
    3cac:	cbz	w24, 3ecc <cap_to_text@@Base+0x3f8>
    3cb0:	mov	x19, xzr
    3cb4:	add	x8, x12, w24, sxtw #2
    3cb8:	sub	w9, w13, w24
    3cbc:	neg	w10, w24
    3cc0:	b	3cd0 <cap_to_text@@Base+0x1fc>
    3cc4:	sub	x19, x19, #0x1
    3cc8:	cmp	w10, w19
    3ccc:	b.eq	3ecc <cap_to_text@@Base+0x3f8>  // b.none
    3cd0:	cmp	w9, w19
    3cd4:	b.eq	3cc4 <cap_to_text@@Base+0x1f0>  // b.none
    3cd8:	ldr	w11, [x8, x19, lsl #2]
    3cdc:	cbz	w11, 3cc4 <cap_to_text@@Base+0x1f0>
    3ce0:	sub	w8, w24, #0x1
    3ce4:	strb	w14, [x21], #1
    3ce8:	str	w27, [sp, #36]
    3cec:	str	x12, [sp, #24]
    3cf0:	str	w13, [sp, #20]
    3cf4:	str	x8, [sp, #8]
    3cf8:	cbz	w22, 3de4 <cap_to_text@@Base+0x310>
    3cfc:	mov	x27, xzr
    3d00:	add	x26, x8, x19
    3d04:	b	3d14 <cap_to_text@@Base+0x240>
    3d08:	add	x27, x27, #0x1
    3d0c:	cmp	x23, x27
    3d10:	b.eq	3de4 <cap_to_text@@Base+0x310>  // b.none
    3d14:	asr	w8, w27, #5
    3d18:	smaddl	x8, w8, w28, x20
    3d1c:	ldp	w9, w11, [x8, #8]
    3d20:	lsl	w10, w15, w27
    3d24:	ldr	w8, [x8, #16]
    3d28:	tst	w9, w10
    3d2c:	cset	w9, ne  // ne = any
    3d30:	tst	w11, w10
    3d34:	orr	w11, w9, #0x2
    3d38:	csel	w9, w9, w11, eq  // eq = none
    3d3c:	orr	w11, w9, #0x4
    3d40:	tst	w8, w10
    3d44:	csel	w8, w9, w11, eq  // eq = none
    3d48:	cmp	w26, w8
    3d4c:	b.ne	3d08 <cap_to_text@@Base+0x234>  // b.any
    3d50:	cmp	x27, #0x26
    3d54:	b.cc	3d88 <cap_to_text@@Base+0x2b4>  // b.lo, b.ul, b.last
    3d58:	adrp	x1, 4000 <cap_to_text@@Base+0x52c>
    3d5c:	sub	x0, x29, #0x10
    3d60:	add	x1, x1, #0x961
    3d64:	mov	w2, w27
    3d68:	bl	1a10 <asprintf@plt>
    3d6c:	ldur	x0, [x29, #-16]
    3d70:	bl	19e0 <_libcap_strdup@plt>
    3d74:	ldur	x8, [x29, #-16]
    3d78:	mov	x28, x0
    3d7c:	mov	x0, x8
    3d80:	bl	1b10 <free@plt>
    3d84:	b	3d9c <cap_to_text@@Base+0x2c8>
    3d88:	adrp	x8, 14000 <cap_set_nsowner@@Base+0xf910>
    3d8c:	ldr	x8, [x8, #4032]
    3d90:	ldr	x0, [x8, x27, lsl #3]
    3d94:	bl	19e0 <_libcap_strdup@plt>
    3d98:	mov	x28, x0
    3d9c:	mov	x0, x28
    3da0:	bl	19a0 <strlen@plt>
    3da4:	add	x8, sp, #0x5c
    3da8:	sub	x8, x21, x8
    3dac:	add	x8, x8, x0
    3db0:	cmp	x8, #0x540
    3db4:	b.hi	418c <cap_to_text@@Base+0x6b8>  // b.pmore
    3db8:	adrp	x1, 4000 <cap_to_text@@Base+0x52c>
    3dbc:	mov	x0, x21
    3dc0:	add	x1, x1, #0x96e
    3dc4:	mov	x2, x28
    3dc8:	bl	1a00 <sprintf@plt>
    3dcc:	add	x21, x21, w0, sxtw
    3dd0:	mov	x0, x28
    3dd4:	bl	1b70 <cap_free@plt>
    3dd8:	mov	w28, #0xc                   	// #12
    3ddc:	mov	w15, #0x1                   	// #1
    3de0:	b	3d08 <cap_to_text@@Base+0x234>
    3de4:	ldr	x8, [sp, #8]
    3de8:	ldr	w27, [sp, #36]
    3dec:	sub	x21, x21, #0x1
    3df0:	add	x26, x8, x19
    3df4:	ands	w8, w26, w27
    3df8:	b.eq	3e48 <cap_to_text@@Base+0x374>  // b.none
    3dfc:	adrp	x9, 4000 <cap_to_text@@Base+0x52c>
    3e00:	adrp	x10, 4000 <cap_to_text@@Base+0x52c>
    3e04:	tst	w8, #0x1
    3e08:	add	x9, x9, #0x85c
    3e0c:	add	x10, x10, #0x971
    3e10:	csel	x2, x10, x9, eq  // eq = none
    3e14:	adrp	x9, 4000 <cap_to_text@@Base+0x52c>
    3e18:	tst	w8, #0x4
    3e1c:	add	x9, x9, #0x96c
    3e20:	csel	x3, x10, x9, eq  // eq = none
    3e24:	tst	w8, #0x2
    3e28:	adrp	x8, 4000 <cap_to_text@@Base+0x52c>
    3e2c:	add	x8, x8, #0x905
    3e30:	adrp	x1, 4000 <cap_to_text@@Base+0x52c>
    3e34:	csel	x4, x10, x8, eq  // eq = none
    3e38:	mov	x0, x21
    3e3c:	add	x1, x1, #0x972
    3e40:	bl	1a00 <sprintf@plt>
    3e44:	add	x21, x21, w0, sxtw
    3e48:	add	w8, w24, w19
    3e4c:	neg	w8, w8
    3e50:	ands	w8, w25, w8
    3e54:	b.eq	3ea4 <cap_to_text@@Base+0x3d0>  // b.none
    3e58:	adrp	x9, 4000 <cap_to_text@@Base+0x52c>
    3e5c:	adrp	x10, 4000 <cap_to_text@@Base+0x52c>
    3e60:	tst	w8, #0x1
    3e64:	add	x9, x9, #0x85c
    3e68:	add	x10, x10, #0x971
    3e6c:	csel	x2, x10, x9, eq  // eq = none
    3e70:	adrp	x9, 4000 <cap_to_text@@Base+0x52c>
    3e74:	tst	w8, #0x4
    3e78:	add	x9, x9, #0x96c
    3e7c:	csel	x3, x10, x9, eq  // eq = none
    3e80:	tst	w8, #0x2
    3e84:	adrp	x8, 4000 <cap_to_text@@Base+0x52c>
    3e88:	add	x8, x8, #0x905
    3e8c:	adrp	x1, 4000 <cap_to_text@@Base+0x52c>
    3e90:	csel	x4, x10, x8, eq  // eq = none
    3e94:	mov	x0, x21
    3e98:	add	x1, x1, #0x97a
    3e9c:	bl	1a00 <sprintf@plt>
    3ea0:	add	x21, x21, w0, sxtw
    3ea4:	ldr	x12, [sp, #24]
    3ea8:	ldr	w13, [sp, #20]
    3eac:	add	x8, sp, #0x5c
    3eb0:	sub	x8, x21, x8
    3eb4:	mov	w15, #0x1                   	// #1
    3eb8:	cmp	x8, #0x541
    3ebc:	mov	w24, w26
    3ec0:	mov	w14, #0x20                  	// #32
    3ec4:	b.lt	3cac <cap_to_text@@Base+0x1d8>  // b.tstop
    3ec8:	b	419c <cap_to_text@@Base+0x6c8>
    3ecc:	movi	v0.2d, #0x0
    3ed0:	cmp	w22, #0x3f
    3ed4:	stp	q0, q0, [sp, #48]
    3ed8:	b.hi	40b8 <cap_to_text@@Base+0x5e4>  // b.pmore
    3edc:	mov	w8, #0xc                   	// #12
    3ee0:	mov	w9, #0x1                   	// #1
    3ee4:	add	x10, sp, #0x30
    3ee8:	mov	w11, w22
    3eec:	lsr	w12, w11, #5
    3ef0:	umaddl	x12, w12, w8, x20
    3ef4:	ldp	w13, w15, [x12, #8]
    3ef8:	lsl	w14, w9, w11
    3efc:	ldr	w12, [x12, #16]
    3f00:	tst	w13, w14
    3f04:	cset	w13, ne  // ne = any
    3f08:	tst	w15, w14
    3f0c:	orr	w15, w13, #0x2
    3f10:	csel	w13, w13, w15, eq  // eq = none
    3f14:	tst	w12, w14
    3f18:	orr	w12, w13, #0x4
    3f1c:	csel	w12, w13, w12, eq  // eq = none
    3f20:	lsl	x12, x12, #2
    3f24:	ldr	w13, [x10, x12]
    3f28:	cmp	w11, #0x3f
    3f2c:	add	w11, w11, #0x1
    3f30:	add	w13, w13, #0x1
    3f34:	str	w13, [x10, x12]
    3f38:	b.cc	3eec <cap_to_text@@Base+0x418>  // b.lo, b.ul, b.last
    3f3c:	cmp	w22, #0x40
    3f40:	b.cs	40b8 <cap_to_text@@Base+0x5e4>  // b.hs, b.nlast
    3f44:	add	x8, sp, #0x30
    3f48:	mov	w19, #0x8                   	// #8
    3f4c:	mov	w10, #0x20                  	// #32
    3f50:	mov	w24, #0xc                   	// #12
    3f54:	mov	w27, #0x1                   	// #1
    3f58:	add	x22, sp, #0x5c
    3f5c:	sub	x28, x8, #0x4
    3f60:	sxtw	x8, w19
    3f64:	subs	x19, x8, #0x1
    3f68:	b.le	4150 <cap_to_text@@Base+0x67c>
    3f6c:	ldr	w9, [x28, x8, lsl #2]
    3f70:	mov	x8, x19
    3f74:	cbz	w9, 3f64 <cap_to_text@@Base+0x490>
    3f78:	strb	w10, [x21], #1
    3f7c:	mov	x25, x23
    3f80:	b	3f90 <cap_to_text@@Base+0x4bc>
    3f84:	cmp	x25, #0x3f
    3f88:	add	x25, x25, #0x1
    3f8c:	b.cs	4054 <cap_to_text@@Base+0x580>  // b.hs, b.nlast
    3f90:	ubfx	x8, x25, #5, #27
    3f94:	madd	x8, x8, x24, x20
    3f98:	ldp	w9, w11, [x8, #8]
    3f9c:	lsl	w10, w27, w25
    3fa0:	ldr	w8, [x8, #16]
    3fa4:	tst	w9, w10
    3fa8:	cset	w9, ne  // ne = any
    3fac:	tst	w11, w10
    3fb0:	orr	w11, w9, #0x2
    3fb4:	csel	w9, w9, w11, eq  // eq = none
    3fb8:	orr	w11, w9, #0x4
    3fbc:	tst	w8, w10
    3fc0:	csel	w8, w9, w11, eq  // eq = none
    3fc4:	cmp	w8, w19
    3fc8:	b.ne	3f84 <cap_to_text@@Base+0x4b0>  // b.any
    3fcc:	cmp	x25, #0x25
    3fd0:	b.ls	4004 <cap_to_text@@Base+0x530>  // b.plast
    3fd4:	adrp	x1, 4000 <cap_to_text@@Base+0x52c>
    3fd8:	sub	x0, x29, #0x10
    3fdc:	add	x1, x1, #0x961
    3fe0:	mov	w2, w25
    3fe4:	bl	1a10 <asprintf@plt>
    3fe8:	ldur	x0, [x29, #-16]
    3fec:	bl	19e0 <_libcap_strdup@plt>
    3ff0:	ldur	x8, [x29, #-16]
    3ff4:	mov	x26, x0
    3ff8:	mov	x0, x8
    3ffc:	bl	1b10 <free@plt>
    4000:	b	4018 <cap_to_text@@Base+0x544>
    4004:	adrp	x8, 14000 <cap_set_nsowner@@Base+0xf910>
    4008:	ldr	x8, [x8, #4032]
    400c:	ldr	x0, [x8, x25, lsl #3]
    4010:	bl	19e0 <_libcap_strdup@plt>
    4014:	mov	x26, x0
    4018:	mov	x0, x26
    401c:	bl	19a0 <strlen@plt>
    4020:	sub	x8, x21, x22
    4024:	add	x8, x8, x0
    4028:	cmp	x8, #0x540
    402c:	b.hi	4194 <cap_to_text@@Base+0x6c0>  // b.pmore
    4030:	adrp	x1, 4000 <cap_to_text@@Base+0x52c>
    4034:	mov	x0, x21
    4038:	add	x1, x1, #0x96e
    403c:	mov	x2, x26
    4040:	bl	1a00 <sprintf@plt>
    4044:	add	x21, x21, w0, sxtw
    4048:	mov	x0, x26
    404c:	bl	1b70 <cap_free@plt>
    4050:	b	3f84 <cap_to_text@@Base+0x4b0>
    4054:	adrp	x8, 4000 <cap_to_text@@Base+0x52c>
    4058:	adrp	x9, 4000 <cap_to_text@@Base+0x52c>
    405c:	tst	w19, #0x1
    4060:	add	x8, x8, #0x85c
    4064:	add	x9, x9, #0x971
    4068:	csel	x2, x9, x8, eq  // eq = none
    406c:	adrp	x8, 4000 <cap_to_text@@Base+0x52c>
    4070:	tst	w19, #0x4
    4074:	add	x8, x8, #0x96c
    4078:	csel	x3, x9, x8, eq  // eq = none
    407c:	adrp	x8, 4000 <cap_to_text@@Base+0x52c>
    4080:	sub	x21, x21, #0x1
    4084:	tst	w19, #0x2
    4088:	add	x8, x8, #0x905
    408c:	adrp	x1, 4000 <cap_to_text@@Base+0x52c>
    4090:	csel	x4, x9, x8, eq  // eq = none
    4094:	mov	x0, x21
    4098:	add	x1, x1, #0x972
    409c:	bl	1a00 <sprintf@plt>
    40a0:	add	x21, x21, w0, sxtw
    40a4:	sub	x8, x21, x22
    40a8:	cmp	x8, #0x540
    40ac:	mov	w10, #0x20                  	// #32
    40b0:	b.le	3f60 <cap_to_text@@Base+0x48c>
    40b4:	b	419c <cap_to_text@@Base+0x6c8>
    40b8:	add	x8, sp, #0x30
    40bc:	mov	w24, #0x8                   	// #8
    40c0:	adrp	x20, 4000 <cap_to_text@@Base+0x52c>
    40c4:	mov	w19, #0x20                  	// #32
    40c8:	add	x20, x20, #0x972
    40cc:	sub	x22, x8, #0x4
    40d0:	add	x23, sp, #0x5c
    40d4:	sxtw	x8, w24
    40d8:	cmp	x8, #0x2
    40dc:	b.lt	4150 <cap_to_text@@Base+0x67c>  // b.tstop
    40e0:	ldr	w9, [x22, x8, lsl #2]
    40e4:	sub	x24, x8, #0x1
    40e8:	mov	x8, x24
    40ec:	cbz	w9, 40d8 <cap_to_text@@Base+0x604>
    40f0:	adrp	x8, 4000 <cap_to_text@@Base+0x52c>
    40f4:	adrp	x9, 4000 <cap_to_text@@Base+0x52c>
    40f8:	tst	w24, #0x1
    40fc:	add	x8, x8, #0x85c
    4100:	add	x9, x9, #0x971
    4104:	csel	x2, x9, x8, eq  // eq = none
    4108:	adrp	x8, 4000 <cap_to_text@@Base+0x52c>
    410c:	tst	w24, #0x4
    4110:	add	x8, x8, #0x96c
    4114:	csel	x3, x9, x8, eq  // eq = none
    4118:	adrp	x8, 4000 <cap_to_text@@Base+0x52c>
    411c:	tst	w24, #0x2
    4120:	add	x8, x8, #0x905
    4124:	csel	x4, x9, x8, eq  // eq = none
    4128:	mov	x0, x21
    412c:	mov	x1, x20
    4130:	strb	w19, [x21]
    4134:	bl	1a00 <sprintf@plt>
    4138:	add	x21, x21, w0, sxtw
    413c:	sub	x8, x21, x23
    4140:	cmp	x8, #0x540
    4144:	b.gt	419c <cap_to_text@@Base+0x6c8>
    4148:	sxtw	x8, w24
    414c:	b	40d8 <cap_to_text@@Base+0x604>
    4150:	ldr	x9, [sp, #40]
    4154:	cbz	x9, 4164 <cap_to_text@@Base+0x690>
    4158:	add	x8, sp, #0x5c
    415c:	sub	x8, x21, x8
    4160:	str	x8, [x9]
    4164:	add	x0, sp, #0x5c
    4168:	bl	19e0 <_libcap_strdup@plt>
    416c:	add	sp, sp, #0x610
    4170:	ldp	x20, x19, [sp, #80]
    4174:	ldp	x22, x21, [sp, #64]
    4178:	ldp	x24, x23, [sp, #48]
    417c:	ldp	x26, x25, [sp, #32]
    4180:	ldp	x28, x27, [sp, #16]
    4184:	ldp	x29, x30, [sp], #96
    4188:	ret
    418c:	mov	x0, x28
    4190:	b	4198 <cap_to_text@@Base+0x6c4>
    4194:	mov	x0, x26
    4198:	bl	1b70 <cap_free@plt>
    419c:	bl	1bb0 <__errno_location@plt>
    41a0:	mov	x8, x0
    41a4:	mov	w9, #0x22                  	// #34
    41a8:	mov	x0, xzr
    41ac:	str	w9, [x8]
    41b0:	b	416c <cap_to_text@@Base+0x698>

00000000000041b4 <cap_mode_name@@Base>:
    41b4:	cmp	w0, #0x3
    41b8:	b.hi	41cc <cap_mode_name@@Base+0x18>  // b.pmore
    41bc:	adrp	x8, 14000 <cap_set_nsowner@@Base+0xf910>
    41c0:	add	x8, x8, #0xdb8
    41c4:	ldr	x0, [x8, w0, sxtw #3]
    41c8:	ret
    41cc:	adrp	x0, 4000 <cap_to_text@@Base+0x52c>
    41d0:	add	x0, x0, #0x9a6
    41d4:	ret

00000000000041d8 <cap_get_fd@@Base>:
    41d8:	sub	sp, sp, #0x40
    41dc:	stp	x29, x30, [sp, #32]
    41e0:	stp	x20, x19, [sp, #48]
    41e4:	add	x29, sp, #0x20
    41e8:	mov	w20, w0
    41ec:	bl	1ad0 <cap_init@plt>
    41f0:	cbz	x0, 4228 <cap_get_fd@@Base+0x50>
    41f4:	adrp	x1, 4000 <cap_to_text@@Base+0x52c>
    41f8:	mov	x19, x0
    41fc:	add	x1, x1, #0x9ae
    4200:	add	x2, sp, #0x8
    4204:	mov	w3, #0x18                  	// #24
    4208:	mov	w0, w20
    420c:	bl	1b30 <fgetxattr@plt>
    4210:	mov	x2, x0
    4214:	cmp	w2, #0x3
    4218:	b.gt	4238 <cap_get_fd@@Base+0x60>
    421c:	mov	x0, x19
    4220:	bl	1b70 <cap_free@plt>
    4224:	mov	x0, xzr
    4228:	ldp	x20, x19, [sp, #48]
    422c:	ldp	x29, x30, [sp, #32]
    4230:	add	sp, sp, #0x40
    4234:	ret
    4238:	add	x0, sp, #0x8
    423c:	mov	x1, x19
    4240:	bl	4254 <cap_get_fd@@Base+0x7c>
    4244:	ldp	x20, x19, [sp, #48]
    4248:	ldp	x29, x30, [sp, #32]
    424c:	add	sp, sp, #0x40
    4250:	ret
    4254:	stp	x29, x30, [sp, #-16]!
    4258:	mov	x29, sp
    425c:	ldr	w10, [x0]
    4260:	mov	w11, #0x3000000             	// #50331648
    4264:	mov	x8, x0
    4268:	mov	x0, x1
    426c:	and	w9, w10, #0xff000000
    4270:	cmp	w9, w11
    4274:	b.eq	42d0 <cap_get_fd@@Base+0xf8>  // b.none
    4278:	mov	w11, #0x2000000             	// #33554432
    427c:	cmp	w9, w11
    4280:	b.eq	42e8 <cap_get_fd@@Base+0x110>  // b.none
    4284:	mov	w11, #0x1000000             	// #16777216
    4288:	cmp	w9, w11
    428c:	b.ne	42f4 <cap_get_fd@@Base+0x11c>  // b.any
    4290:	sub	w11, w2, #0xc
    4294:	mov	w9, #0x1                   	// #1
    4298:	cbnz	w11, 42f4 <cap_get_fd@@Base+0x11c>
    429c:	add	x8, x8, #0x8
    42a0:	tbnz	w10, #0, 4304 <cap_get_fd@@Base+0x12c>
    42a4:	add	x10, x0, #0x10
    42a8:	mov	x11, x9
    42ac:	ldr	w12, [x8]
    42b0:	subs	x11, x11, #0x1
    42b4:	str	w12, [x10]
    42b8:	ldur	w12, [x8, #-4]
    42bc:	add	x8, x8, #0x8
    42c0:	stur	w12, [x10, #-4]
    42c4:	add	x10, x10, #0xc
    42c8:	b.ne	42ac <cap_get_fd@@Base+0xd4>  // b.any
    42cc:	b	4330 <cap_get_fd@@Base+0x158>
    42d0:	ldr	w9, [x8, #20]
    42d4:	sub	w11, w2, #0x18
    42d8:	str	w9, [x0, #32]
    42dc:	mov	w9, #0x2                   	// #2
    42e0:	cbnz	w11, 42f4 <cap_get_fd@@Base+0x11c>
    42e4:	b	429c <cap_get_fd@@Base+0xc4>
    42e8:	sub	w11, w2, #0x14
    42ec:	mov	w9, #0x2                   	// #2
    42f0:	cbz	w11, 429c <cap_get_fd@@Base+0xc4>
    42f4:	bl	1b70 <cap_free@plt>
    42f8:	mov	x0, xzr
    42fc:	ldp	x29, x30, [sp], #16
    4300:	ret
    4304:	add	x10, x0, #0x10
    4308:	mov	x11, x9
    430c:	ldr	w12, [x8]
    4310:	subs	x11, x11, #0x1
    4314:	str	w12, [x10]
    4318:	ldur	w13, [x8, #-4]
    431c:	add	x8, x8, #0x8
    4320:	orr	w12, w13, w12
    4324:	stp	w12, w13, [x10, #-8]
    4328:	add	x10, x10, #0xc
    432c:	b.ne	430c <cap_get_fd@@Base+0x134>  // b.any
    4330:	cmp	w9, #0x1
    4334:	b.hi	42fc <cap_get_fd@@Base+0x124>  // b.pmore
    4338:	mov	w8, #0xc                   	// #12
    433c:	umaddl	x8, w9, w8, x0
    4340:	str	xzr, [x8, #8]
    4344:	str	wzr, [x8, #16]
    4348:	ldp	x29, x30, [sp], #16
    434c:	ret

0000000000004350 <cap_get_file@@Base>:
    4350:	sub	sp, sp, #0x40
    4354:	stp	x29, x30, [sp, #32]
    4358:	stp	x20, x19, [sp, #48]
    435c:	add	x29, sp, #0x20
    4360:	mov	x20, x0
    4364:	bl	1ad0 <cap_init@plt>
    4368:	cbz	x0, 43a0 <cap_get_file@@Base+0x50>
    436c:	adrp	x1, 4000 <cap_to_text@@Base+0x52c>
    4370:	mov	x19, x0
    4374:	add	x1, x1, #0x9ae
    4378:	add	x2, sp, #0x8
    437c:	mov	w3, #0x18                  	// #24
    4380:	mov	x0, x20
    4384:	bl	1ae0 <getxattr@plt>
    4388:	mov	x2, x0
    438c:	cmp	w2, #0x3
    4390:	b.gt	43b0 <cap_get_file@@Base+0x60>
    4394:	mov	x0, x19
    4398:	bl	1b70 <cap_free@plt>
    439c:	mov	x0, xzr
    43a0:	ldp	x20, x19, [sp, #48]
    43a4:	ldp	x29, x30, [sp, #32]
    43a8:	add	sp, sp, #0x40
    43ac:	ret
    43b0:	add	x0, sp, #0x8
    43b4:	mov	x1, x19
    43b8:	bl	4254 <cap_get_fd@@Base+0x7c>
    43bc:	ldp	x20, x19, [sp, #48]
    43c0:	ldp	x29, x30, [sp, #32]
    43c4:	add	sp, sp, #0x40
    43c8:	ret

00000000000043cc <cap_get_nsowner@@Base>:
    43cc:	ldr	w0, [x0, #32]
    43d0:	ret

00000000000043d4 <cap_set_fd@@Base>:
    43d4:	sub	sp, sp, #0xc0
    43d8:	stp	x29, x30, [sp, #160]
    43dc:	stp	x20, x19, [sp, #176]
    43e0:	add	x29, sp, #0xa0
    43e4:	mov	w19, w0
    43e8:	mov	x20, x1
    43ec:	mov	x2, sp
    43f0:	mov	w0, wzr
    43f4:	mov	w1, w19
    43f8:	bl	1b20 <__fxstat64@plt>
    43fc:	cbnz	w0, 4460 <cap_set_fd@@Base+0x8c>
    4400:	ldr	w8, [sp, #16]
    4404:	and	w8, w8, #0xf000
    4408:	cmp	w8, #0x8, lsl #12
    440c:	b.ne	4454 <cap_set_fd@@Base+0x80>  // b.any
    4410:	cbz	x20, 4474 <cap_set_fd@@Base+0xa0>
    4414:	sub	x0, x29, #0x18
    4418:	sub	x2, x29, #0x1c
    441c:	mov	x1, x20
    4420:	bl	4494 <cap_set_fd@@Base+0xc0>
    4424:	cbnz	w0, 4460 <cap_set_fd@@Base+0x8c>
    4428:	ldursw	x3, [x29, #-28]
    442c:	adrp	x1, 4000 <cap_to_text@@Base+0x52c>
    4430:	add	x1, x1, #0x9ae
    4434:	sub	x2, x29, #0x18
    4438:	mov	w0, w19
    443c:	mov	w4, wzr
    4440:	bl	1b60 <fsetxattr@plt>
    4444:	ldp	x20, x19, [sp, #176]
    4448:	ldp	x29, x30, [sp, #160]
    444c:	add	sp, sp, #0xc0
    4450:	ret
    4454:	bl	1bb0 <__errno_location@plt>
    4458:	mov	w8, #0x16                  	// #22
    445c:	str	w8, [x0]
    4460:	mov	w0, #0xffffffff            	// #-1
    4464:	ldp	x20, x19, [sp, #176]
    4468:	ldp	x29, x30, [sp, #160]
    446c:	add	sp, sp, #0xc0
    4470:	ret
    4474:	adrp	x1, 4000 <cap_to_text@@Base+0x52c>
    4478:	add	x1, x1, #0x9ae
    447c:	mov	w0, w19
    4480:	bl	1ab0 <fremovexattr@plt>
    4484:	ldp	x20, x19, [sp, #176]
    4488:	ldp	x29, x30, [sp, #160]
    448c:	add	sp, sp, #0xc0
    4490:	ret
    4494:	stp	x29, x30, [sp, #-16]!
    4498:	mov	x29, sp
    449c:	cbz	x1, 459c <cap_set_fd@@Base+0x1c8>
    44a0:	ldur	w8, [x1, #-4]
    44a4:	mov	w9, #0x90d0                	// #37072
    44a8:	movk	w9, #0xca, lsl #16
    44ac:	cmp	w8, w9
    44b0:	b.ne	459c <cap_set_fd@@Base+0x1c8>  // b.any
    44b4:	ldr	w8, [x1]
    44b8:	mov	w9, #0x330                 	// #816
    44bc:	movk	w9, #0x1998, lsl #16
    44c0:	cmp	w8, w9
    44c4:	b.eq	4504 <cap_set_fd@@Base+0x130>  // b.none
    44c8:	mov	w9, #0x522                 	// #1314
    44cc:	movk	w9, #0x2008, lsl #16
    44d0:	cmp	w8, w9
    44d4:	b.eq	44e8 <cap_set_fd@@Base+0x114>  // b.none
    44d8:	mov	w9, #0x1026                	// #4134
    44dc:	movk	w9, #0x2007, lsl #16
    44e0:	cmp	w8, w9
    44e4:	b.ne	459c <cap_set_fd@@Base+0x1c8>  // b.any
    44e8:	mov	w8, #0x2                   	// #2
    44ec:	mov	w9, #0x2000000             	// #33554432
    44f0:	mov	w10, #0x14                  	// #20
    44f4:	str	w10, [x2]
    44f8:	ldr	w10, [x1, #32]
    44fc:	cbnz	w10, 451c <cap_set_fd@@Base+0x148>
    4500:	b	4548 <cap_set_fd@@Base+0x174>
    4504:	mov	w8, #0x1                   	// #1
    4508:	mov	w9, #0x1000000             	// #16777216
    450c:	mov	w10, #0xc                   	// #12
    4510:	str	w10, [x2]
    4514:	ldr	w10, [x1, #32]
    4518:	cbz	w10, 4548 <cap_set_fd@@Base+0x174>
    451c:	ldr	w8, [x1]
    4520:	mov	w9, #0x521                 	// #1313
    4524:	movk	w9, #0x2008, lsl #16
    4528:	cmp	w8, w9
    452c:	b.ls	459c <cap_set_fd@@Base+0x1c8>  // b.plast
    4530:	mov	w8, #0x18                  	// #24
    4534:	str	w8, [x2]
    4538:	ldr	w9, [x1, #32]
    453c:	mov	w8, #0x2                   	// #2
    4540:	str	w9, [x0, #20]
    4544:	mov	w9, #0x3000000             	// #50331648
    4548:	mov	w10, wzr
    454c:	add	x11, x1, #0x8
    4550:	mov	x12, x8
    4554:	ldr	w13, [x11], #12
    4558:	subs	x12, x12, #0x1
    455c:	orr	w10, w13, w10
    4560:	b.ne	4554 <cap_set_fd@@Base+0x180>  // b.any
    4564:	cmp	w8, #0x1
    4568:	b.ne	45b8 <cap_set_fd@@Base+0x1e4>  // b.any
    456c:	mov	w11, #0xc                   	// #12
    4570:	madd	x11, x8, x11, x1
    4574:	ldr	w11, [x11, #8]
    4578:	cbnz	w11, 459c <cap_set_fd@@Base+0x1c8>
    457c:	mov	w11, #0xc                   	// #12
    4580:	madd	x11, x8, x11, x1
    4584:	ldr	w11, [x11, #16]
    4588:	cbnz	w11, 459c <cap_set_fd@@Base+0x1c8>
    458c:	mov	w11, #0xc                   	// #12
    4590:	madd	x11, x8, x11, x1
    4594:	ldr	w11, [x11, #12]
    4598:	cbz	w11, 45b8 <cap_set_fd@@Base+0x1e4>
    459c:	bl	1bb0 <__errno_location@plt>
    45a0:	mov	w8, #0x16                  	// #22
    45a4:	str	w8, [x0]
    45a8:	mov	w8, #0xffffffff            	// #-1
    45ac:	mov	w0, w8
    45b0:	ldp	x29, x30, [sp], #16
    45b4:	ret
    45b8:	add	x11, x1, #0x10
    45bc:	add	x12, x0, #0x8
    45c0:	cbz	w10, 45fc <cap_set_fd@@Base+0x228>
    45c4:	ldur	w13, [x11, #-4]
    45c8:	stur	w13, [x12, #-4]
    45cc:	ldr	w13, [x11]
    45d0:	str	w13, [x12]
    45d4:	ldp	w13, w14, [x11, #-4]
    45d8:	ldur	w15, [x11, #-8]
    45dc:	orr	w13, w14, w13
    45e0:	bics	wzr, w13, w15
    45e4:	b.ne	459c <cap_set_fd@@Base+0x1c8>  // b.any
    45e8:	add	x11, x11, #0xc
    45ec:	subs	x8, x8, #0x1
    45f0:	add	x12, x12, #0x8
    45f4:	b.ne	45c4 <cap_set_fd@@Base+0x1f0>  // b.any
    45f8:	b	4614 <cap_set_fd@@Base+0x240>
    45fc:	ldur	w13, [x11, #-4]
    4600:	subs	x8, x8, #0x1
    4604:	stur	w13, [x12, #-4]
    4608:	ldr	w13, [x11], #12
    460c:	str	w13, [x12], #8
    4610:	b.ne	45fc <cap_set_fd@@Base+0x228>  // b.any
    4614:	mov	w8, wzr
    4618:	cbz	w10, 4620 <cap_set_fd@@Base+0x24c>
    461c:	orr	w9, w9, #0x1
    4620:	str	w9, [x0]
    4624:	mov	w0, w8
    4628:	ldp	x29, x30, [sp], #16
    462c:	ret

0000000000004630 <cap_set_file@@Base>:
    4630:	sub	sp, sp, #0xc0
    4634:	stp	x29, x30, [sp, #160]
    4638:	stp	x20, x19, [sp, #176]
    463c:	add	x29, sp, #0xa0
    4640:	mov	x19, x0
    4644:	mov	x20, x1
    4648:	mov	x2, sp
    464c:	mov	w0, wzr
    4650:	mov	x1, x19
    4654:	bl	1b00 <__lxstat64@plt>
    4658:	cbnz	w0, 46bc <cap_set_file@@Base+0x8c>
    465c:	ldr	w8, [sp, #16]
    4660:	and	w8, w8, #0xf000
    4664:	cmp	w8, #0x8, lsl #12
    4668:	b.ne	46b0 <cap_set_file@@Base+0x80>  // b.any
    466c:	cbz	x20, 46d0 <cap_set_file@@Base+0xa0>
    4670:	sub	x0, x29, #0x18
    4674:	sub	x2, x29, #0x1c
    4678:	mov	x1, x20
    467c:	bl	4494 <cap_set_fd@@Base+0xc0>
    4680:	cbnz	w0, 46bc <cap_set_file@@Base+0x8c>
    4684:	ldursw	x3, [x29, #-28]
    4688:	adrp	x1, 4000 <cap_to_text@@Base+0x52c>
    468c:	add	x1, x1, #0x9ae
    4690:	sub	x2, x29, #0x18
    4694:	mov	x0, x19
    4698:	mov	w4, wzr
    469c:	bl	1a60 <setxattr@plt>
    46a0:	ldp	x20, x19, [sp, #176]
    46a4:	ldp	x29, x30, [sp, #160]
    46a8:	add	sp, sp, #0xc0
    46ac:	ret
    46b0:	bl	1bb0 <__errno_location@plt>
    46b4:	mov	w8, #0x16                  	// #22
    46b8:	str	w8, [x0]
    46bc:	mov	w0, #0xffffffff            	// #-1
    46c0:	ldp	x20, x19, [sp, #176]
    46c4:	ldp	x29, x30, [sp, #160]
    46c8:	add	sp, sp, #0xc0
    46cc:	ret
    46d0:	adrp	x1, 4000 <cap_to_text@@Base+0x52c>
    46d4:	add	x1, x1, #0x9ae
    46d8:	mov	x0, x19
    46dc:	bl	1970 <removexattr@plt>
    46e0:	ldp	x20, x19, [sp, #176]
    46e4:	ldp	x29, x30, [sp, #160]
    46e8:	add	sp, sp, #0xc0
    46ec:	ret

00000000000046f0 <cap_set_nsowner@@Base>:
    46f0:	str	w1, [x0, #32]
    46f4:	mov	w0, wzr
    46f8:	ret

Disassembly of section .fini:

00000000000046fc <.fini>:
    46fc:	stp	x29, x30, [sp, #-16]!
    4700:	mov	x29, sp
    4704:	ldp	x29, x30, [sp], #16
    4708:	ret
