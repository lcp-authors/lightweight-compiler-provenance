
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libffi.so.7.1.0_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000001a20 <.init>:
    1a20:	stp	x29, x30, [sp, #-16]!
    1a24:	mov	x29, sp
    1a28:	bl	1d20 <ffi_prep_java_raw_closure_loc@plt+0x10>
    1a2c:	ldp	x29, x30, [sp], #16
    1a30:	ret

Disassembly of section .plt:

0000000000001a40 <memcpy@plt-0x20>:
    1a40:	stp	x16, x30, [sp, #-16]!
    1a44:	adrp	x16, 1d000 <ffi_type_longdouble@@LIBFFI_BASE_7.0+0x10f10>
    1a48:	ldr	x17, [x16, #4088]
    1a4c:	add	x16, x16, #0xff8
    1a50:	br	x17
    1a54:	nop
    1a58:	nop
    1a5c:	nop

0000000000001a60 <memcpy@plt>:
    1a60:	adrp	x16, 1e000 <memcpy@GLIBC_2.17>
    1a64:	ldr	x17, [x16]
    1a68:	add	x16, x16, #0x0
    1a6c:	br	x17

0000000000001a70 <ffi_prep_closure_loc@plt>:
    1a70:	adrp	x16, 1e000 <memcpy@GLIBC_2.17>
    1a74:	ldr	x17, [x16, #8]
    1a78:	add	x16, x16, #0x8
    1a7c:	br	x17

0000000000001a80 <strlen@plt>:
    1a80:	adrp	x16, 1e000 <memcpy@GLIBC_2.17>
    1a84:	ldr	x17, [x16, #16]
    1a88:	add	x16, x16, #0x10
    1a8c:	br	x17

0000000000001a90 <ffi_java_raw_to_ptrarray@plt>:
    1a90:	adrp	x16, 1e000 <memcpy@GLIBC_2.17>
    1a94:	ldr	x17, [x16, #24]
    1a98:	add	x16, x16, #0x18
    1a9c:	br	x17

0000000000001aa0 <__cxa_finalize@plt>:
    1aa0:	adrp	x16, 1e000 <memcpy@GLIBC_2.17>
    1aa4:	ldr	x17, [x16, #32]
    1aa8:	add	x16, x16, #0x20
    1aac:	br	x17

0000000000001ab0 <statfs@plt>:
    1ab0:	adrp	x16, 1e000 <memcpy@GLIBC_2.17>
    1ab4:	ldr	x17, [x16, #40]
    1ab8:	add	x16, x16, #0x28
    1abc:	br	x17

0000000000001ac0 <fclose@plt>:
    1ac0:	adrp	x16, 1e000 <memcpy@GLIBC_2.17>
    1ac4:	ldr	x17, [x16, #48]
    1ac8:	add	x16, x16, #0x30
    1acc:	br	x17

0000000000001ad0 <fopen@plt>:
    1ad0:	adrp	x16, 1e000 <memcpy@GLIBC_2.17>
    1ad4:	ldr	x17, [x16, #56]
    1ad8:	add	x16, x16, #0x38
    1adc:	br	x17

0000000000001ae0 <open@plt>:
    1ae0:	adrp	x16, 1e000 <memcpy@GLIBC_2.17>
    1ae4:	ldr	x17, [x16, #64]
    1ae8:	add	x16, x16, #0x40
    1aec:	br	x17

0000000000001af0 <strncmp@plt>:
    1af0:	adrp	x16, 1e000 <memcpy@GLIBC_2.17>
    1af4:	ldr	x17, [x16, #72]
    1af8:	add	x16, x16, #0x48
    1afc:	br	x17

0000000000001b00 <memset@plt>:
    1b00:	adrp	x16, 1e000 <memcpy@GLIBC_2.17>
    1b04:	ldr	x17, [x16, #80]
    1b08:	add	x16, x16, #0x50
    1b0c:	br	x17

0000000000001b10 <ffi_raw_to_ptrarray@plt>:
    1b10:	adrp	x16, 1e000 <memcpy@GLIBC_2.17>
    1b14:	ldr	x17, [x16, #88]
    1b18:	add	x16, x16, #0x58
    1b1c:	br	x17

0000000000001b20 <ffi_prep_raw_closure_loc@plt>:
    1b20:	adrp	x16, 1e000 <memcpy@GLIBC_2.17>
    1b24:	ldr	x17, [x16, #96]
    1b28:	add	x16, x16, #0x60
    1b2c:	br	x17

0000000000001b30 <setmntent@plt>:
    1b30:	adrp	x16, 1e000 <memcpy@GLIBC_2.17>
    1b34:	ldr	x17, [x16, #104]
    1b38:	add	x16, x16, #0x68
    1b3c:	br	x17

0000000000001b40 <endmntent@plt>:
    1b40:	adrp	x16, 1e000 <memcpy@GLIBC_2.17>
    1b44:	ldr	x17, [x16, #112]
    1b48:	add	x16, x16, #0x70
    1b4c:	br	x17

0000000000001b50 <pthread_mutex_init@plt>:
    1b50:	adrp	x16, 1e000 <memcpy@GLIBC_2.17>
    1b54:	ldr	x17, [x16, #120]
    1b58:	add	x16, x16, #0x78
    1b5c:	br	x17

0000000000001b60 <close@plt>:
    1b60:	adrp	x16, 1e000 <memcpy@GLIBC_2.17>
    1b64:	ldr	x17, [x16, #128]
    1b68:	add	x16, x16, #0x80
    1b6c:	br	x17

0000000000001b70 <__gmon_start__@plt>:
    1b70:	adrp	x16, 1e000 <memcpy@GLIBC_2.17>
    1b74:	ldr	x17, [x16, #136]
    1b78:	add	x16, x16, #0x88
    1b7c:	br	x17

0000000000001b80 <write@plt>:
    1b80:	adrp	x16, 1e000 <memcpy@GLIBC_2.17>
    1b84:	ldr	x17, [x16, #144]
    1b88:	add	x16, x16, #0x90
    1b8c:	br	x17

0000000000001b90 <abort@plt>:
    1b90:	adrp	x16, 1e000 <memcpy@GLIBC_2.17>
    1b94:	ldr	x17, [x16, #152]
    1b98:	add	x16, x16, #0x98
    1b9c:	br	x17

0000000000001ba0 <mkostemp@plt>:
    1ba0:	adrp	x16, 1e000 <memcpy@GLIBC_2.17>
    1ba4:	ldr	x17, [x16, #160]
    1ba8:	add	x16, x16, #0xa0
    1bac:	br	x17

0000000000001bb0 <access@plt>:
    1bb0:	adrp	x16, 1e000 <memcpy@GLIBC_2.17>
    1bb4:	ldr	x17, [x16, #168]
    1bb8:	add	x16, x16, #0xa8
    1bbc:	br	x17

0000000000001bc0 <mmap@plt>:
    1bc0:	adrp	x16, 1e000 <memcpy@GLIBC_2.17>
    1bc4:	ldr	x17, [x16, #176]
    1bc8:	add	x16, x16, #0xb0
    1bcc:	br	x17

0000000000001bd0 <getline@plt>:
    1bd0:	adrp	x16, 1e000 <memcpy@GLIBC_2.17>
    1bd4:	ldr	x17, [x16, #184]
    1bd8:	add	x16, x16, #0xb8
    1bdc:	br	x17

0000000000001be0 <free@plt>:
    1be0:	adrp	x16, 1e000 <memcpy@GLIBC_2.17>
    1be4:	ldr	x17, [x16, #192]
    1be8:	add	x16, x16, #0xc0
    1bec:	br	x17

0000000000001bf0 <ffi_java_raw_size@plt>:
    1bf0:	adrp	x16, 1e000 <memcpy@GLIBC_2.17>
    1bf4:	ldr	x17, [x16, #200]
    1bf8:	add	x16, x16, #0xc8
    1bfc:	br	x17

0000000000001c00 <ffi_raw_size@plt>:
    1c00:	adrp	x16, 1e000 <memcpy@GLIBC_2.17>
    1c04:	ldr	x17, [x16, #208]
    1c08:	add	x16, x16, #0xd0
    1c0c:	br	x17

0000000000001c10 <ffi_ptrarray_to_raw@plt>:
    1c10:	adrp	x16, 1e000 <memcpy@GLIBC_2.17>
    1c14:	ldr	x17, [x16, #216]
    1c18:	add	x16, x16, #0xd8
    1c1c:	br	x17

0000000000001c20 <hasmntopt@plt>:
    1c20:	adrp	x16, 1e000 <memcpy@GLIBC_2.17>
    1c24:	ldr	x17, [x16, #224]
    1c28:	add	x16, x16, #0xe0
    1c2c:	br	x17

0000000000001c30 <strchr@plt>:
    1c30:	adrp	x16, 1e000 <memcpy@GLIBC_2.17>
    1c34:	ldr	x17, [x16, #232]
    1c38:	add	x16, x16, #0xe8
    1c3c:	br	x17

0000000000001c40 <munmap@plt>:
    1c40:	adrp	x16, 1e000 <memcpy@GLIBC_2.17>
    1c44:	ldr	x17, [x16, #240]
    1c48:	add	x16, x16, #0xf0
    1c4c:	br	x17

0000000000001c50 <ffi_call@plt>:
    1c50:	adrp	x16, 1e000 <memcpy@GLIBC_2.17>
    1c54:	ldr	x17, [x16, #248]
    1c58:	add	x16, x16, #0xf8
    1c5c:	br	x17

0000000000001c60 <sysconf@plt>:
    1c60:	adrp	x16, 1e000 <memcpy@GLIBC_2.17>
    1c64:	ldr	x17, [x16, #256]
    1c68:	add	x16, x16, #0x100
    1c6c:	br	x17

0000000000001c70 <getmntent_r@plt>:
    1c70:	adrp	x16, 1e000 <memcpy@GLIBC_2.17>
    1c74:	ldr	x17, [x16, #264]
    1c78:	add	x16, x16, #0x108
    1c7c:	br	x17

0000000000001c80 <ftruncate@plt>:
    1c80:	adrp	x16, 1e000 <memcpy@GLIBC_2.17>
    1c84:	ldr	x17, [x16, #272]
    1c88:	add	x16, x16, #0x110
    1c8c:	br	x17

0000000000001c90 <__errno_location@plt>:
    1c90:	adrp	x16, 1e000 <memcpy@GLIBC_2.17>
    1c94:	ldr	x17, [x16, #280]
    1c98:	add	x16, x16, #0x118
    1c9c:	br	x17

0000000000001ca0 <ffs@plt>:
    1ca0:	adrp	x16, 1e000 <memcpy@GLIBC_2.17>
    1ca4:	ldr	x17, [x16, #288]
    1ca8:	add	x16, x16, #0x120
    1cac:	br	x17

0000000000001cb0 <getenv@plt>:
    1cb0:	adrp	x16, 1e000 <memcpy@GLIBC_2.17>
    1cb4:	ldr	x17, [x16, #296]
    1cb8:	add	x16, x16, #0x128
    1cbc:	br	x17

0000000000001cc0 <ffi_java_ptrarray_to_raw@plt>:
    1cc0:	adrp	x16, 1e000 <memcpy@GLIBC_2.17>
    1cc4:	ldr	x17, [x16, #304]
    1cc8:	add	x16, x16, #0x130
    1ccc:	br	x17

0000000000001cd0 <pthread_mutex_lock@plt>:
    1cd0:	adrp	x16, 1e000 <memcpy@GLIBC_2.17>
    1cd4:	ldr	x17, [x16, #312]
    1cd8:	add	x16, x16, #0x138
    1cdc:	br	x17

0000000000001ce0 <pthread_mutex_unlock@plt>:
    1ce0:	adrp	x16, 1e000 <memcpy@GLIBC_2.17>
    1ce4:	ldr	x17, [x16, #320]
    1ce8:	add	x16, x16, #0x140
    1cec:	br	x17

0000000000001cf0 <unlink@plt>:
    1cf0:	adrp	x16, 1e000 <memcpy@GLIBC_2.17>
    1cf4:	ldr	x17, [x16, #328]
    1cf8:	add	x16, x16, #0x148
    1cfc:	br	x17

0000000000001d00 <fprintf@plt>:
    1d00:	adrp	x16, 1e000 <memcpy@GLIBC_2.17>
    1d04:	ldr	x17, [x16, #336]
    1d08:	add	x16, x16, #0x150
    1d0c:	br	x17

0000000000001d10 <ffi_prep_java_raw_closure_loc@plt>:
    1d10:	adrp	x16, 1e000 <memcpy@GLIBC_2.17>
    1d14:	ldr	x17, [x16, #344]
    1d18:	add	x16, x16, #0x158
    1d1c:	br	x17

Disassembly of section .text:

0000000000001d20 <ffi_prep_cif@@LIBFFI_BASE_7.0-0x55c>:
    1d20:	adrp	x0, 1d000 <ffi_type_longdouble@@LIBFFI_BASE_7.0+0x10f10>
    1d24:	ldr	x0, [x0, #4056]
    1d28:	cbz	x0, 1d30 <ffi_prep_java_raw_closure_loc@plt+0x20>
    1d2c:	b	1b70 <__gmon_start__@plt>
    1d30:	ret
    1d34:	stp	x29, x30, [sp, #-32]!
    1d38:	mov	x29, sp
    1d3c:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    1d40:	add	x0, x0, #0x248
    1d44:	str	x0, [sp, #24]
    1d48:	ldr	x0, [sp, #24]
    1d4c:	str	x0, [sp, #24]
    1d50:	ldr	x1, [sp, #24]
    1d54:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    1d58:	add	x0, x0, #0x248
    1d5c:	cmp	x1, x0
    1d60:	b.eq	1d98 <ffi_prep_java_raw_closure_loc@plt+0x88>  // b.none
    1d64:	adrp	x0, 1d000 <ffi_type_longdouble@@LIBFFI_BASE_7.0+0x10f10>
    1d68:	ldr	x0, [x0, #4032]
    1d6c:	str	x0, [sp, #16]
    1d70:	ldr	x0, [sp, #16]
    1d74:	str	x0, [sp, #16]
    1d78:	ldr	x0, [sp, #16]
    1d7c:	cmp	x0, #0x0
    1d80:	b.eq	1d9c <ffi_prep_java_raw_closure_loc@plt+0x8c>  // b.none
    1d84:	ldr	x1, [sp, #16]
    1d88:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    1d8c:	add	x0, x0, #0x248
    1d90:	blr	x1
    1d94:	b	1d9c <ffi_prep_java_raw_closure_loc@plt+0x8c>
    1d98:	nop
    1d9c:	ldp	x29, x30, [sp], #32
    1da0:	ret
    1da4:	stp	x29, x30, [sp, #-48]!
    1da8:	mov	x29, sp
    1dac:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    1db0:	add	x0, x0, #0x248
    1db4:	str	x0, [sp, #40]
    1db8:	ldr	x0, [sp, #40]
    1dbc:	str	x0, [sp, #40]
    1dc0:	ldr	x1, [sp, #40]
    1dc4:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    1dc8:	add	x0, x0, #0x248
    1dcc:	sub	x0, x1, x0
    1dd0:	asr	x0, x0, #3
    1dd4:	lsr	x1, x0, #63
    1dd8:	add	x0, x1, x0
    1ddc:	asr	x0, x0, #1
    1de0:	str	x0, [sp, #32]
    1de4:	ldr	x0, [sp, #32]
    1de8:	cmp	x0, #0x0
    1dec:	b.eq	1e28 <ffi_prep_java_raw_closure_loc@plt+0x118>  // b.none
    1df0:	adrp	x0, 1d000 <ffi_type_longdouble@@LIBFFI_BASE_7.0+0x10f10>
    1df4:	ldr	x0, [x0, #4064]
    1df8:	str	x0, [sp, #24]
    1dfc:	ldr	x0, [sp, #24]
    1e00:	str	x0, [sp, #24]
    1e04:	ldr	x0, [sp, #24]
    1e08:	cmp	x0, #0x0
    1e0c:	b.eq	1e2c <ffi_prep_java_raw_closure_loc@plt+0x11c>  // b.none
    1e10:	ldr	x2, [sp, #24]
    1e14:	ldr	x1, [sp, #32]
    1e18:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    1e1c:	add	x0, x0, #0x248
    1e20:	blr	x2
    1e24:	b	1e2c <ffi_prep_java_raw_closure_loc@plt+0x11c>
    1e28:	nop
    1e2c:	ldp	x29, x30, [sp], #48
    1e30:	ret
    1e34:	stp	x29, x30, [sp, #-16]!
    1e38:	mov	x29, sp
    1e3c:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    1e40:	add	x0, x0, #0x248
    1e44:	ldrb	w0, [x0]
    1e48:	and	x0, x0, #0xff
    1e4c:	cmp	x0, #0x0
    1e50:	b.ne	1e8c <ffi_prep_java_raw_closure_loc@plt+0x17c>  // b.any
    1e54:	adrp	x0, 1d000 <ffi_type_longdouble@@LIBFFI_BASE_7.0+0x10f10>
    1e58:	ldr	x0, [x0, #4040]
    1e5c:	cmp	x0, #0x0
    1e60:	b.eq	1e74 <ffi_prep_java_raw_closure_loc@plt+0x164>  // b.none
    1e64:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    1e68:	add	x0, x0, #0x160
    1e6c:	ldr	x0, [x0]
    1e70:	bl	1aa0 <__cxa_finalize@plt>
    1e74:	bl	1d34 <ffi_prep_java_raw_closure_loc@plt+0x24>
    1e78:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    1e7c:	add	x0, x0, #0x248
    1e80:	mov	w1, #0x1                   	// #1
    1e84:	strb	w1, [x0]
    1e88:	b	1e90 <ffi_prep_java_raw_closure_loc@plt+0x180>
    1e8c:	nop
    1e90:	ldp	x29, x30, [sp], #16
    1e94:	ret
    1e98:	stp	x29, x30, [sp, #-16]!
    1e9c:	mov	x29, sp
    1ea0:	bl	1da4 <ffi_prep_java_raw_closure_loc@plt+0x94>
    1ea4:	nop
    1ea8:	ldp	x29, x30, [sp], #16
    1eac:	ret
    1eb0:	stp	x29, x30, [sp, #-48]!
    1eb4:	mov	x29, sp
    1eb8:	str	x0, [sp, #24]
    1ebc:	str	x1, [sp, #16]
    1ec0:	ldr	x0, [sp, #24]
    1ec4:	cmp	x0, #0x0
    1ec8:	b.eq	1edc <ffi_prep_java_raw_closure_loc@plt+0x1cc>  // b.none
    1ecc:	ldr	x0, [sp, #24]
    1ed0:	ldr	x0, [x0, #16]
    1ed4:	cmp	x0, #0x0
    1ed8:	b.ne	1ee4 <ffi_prep_java_raw_closure_loc@plt+0x1d4>  // b.any
    1edc:	mov	w0, #0x1                   	// #1
    1ee0:	b	1ee8 <ffi_prep_java_raw_closure_loc@plt+0x1d8>
    1ee4:	mov	w0, #0x0                   	// #0
    1ee8:	cmp	w0, #0x0
    1eec:	cset	w0, ne  // ne = any
    1ef0:	and	w0, w0, #0xff
    1ef4:	and	x0, x0, #0xff
    1ef8:	cmp	x0, #0x0
    1efc:	b.eq	1f08 <ffi_prep_java_raw_closure_loc@plt+0x1f8>  // b.none
    1f00:	mov	w0, #0x1                   	// #1
    1f04:	b	20a8 <ffi_prep_java_raw_closure_loc@plt+0x398>
    1f08:	ldr	x0, [sp, #24]
    1f0c:	str	xzr, [x0]
    1f10:	ldr	x0, [sp, #24]
    1f14:	strh	wzr, [x0, #8]
    1f18:	ldr	x0, [sp, #24]
    1f1c:	ldr	x0, [x0, #16]
    1f20:	str	x0, [sp, #40]
    1f24:	ldr	x0, [sp, #40]
    1f28:	cmp	x0, #0x0
    1f2c:	cset	w0, eq  // eq = none
    1f30:	and	w0, w0, #0xff
    1f34:	and	x0, x0, #0xff
    1f38:	cmp	x0, #0x0
    1f3c:	b.eq	2050 <ffi_prep_java_raw_closure_loc@plt+0x340>  // b.none
    1f40:	mov	w0, #0x1                   	// #1
    1f44:	b	20a8 <ffi_prep_java_raw_closure_loc@plt+0x398>
    1f48:	ldr	x0, [sp, #40]
    1f4c:	ldr	x0, [x0]
    1f50:	ldr	x0, [x0]
    1f54:	cmp	x0, #0x0
    1f58:	b.ne	1f7c <ffi_prep_java_raw_closure_loc@plt+0x26c>  // b.any
    1f5c:	ldr	x0, [sp, #40]
    1f60:	ldr	x0, [x0]
    1f64:	mov	x1, #0x0                   	// #0
    1f68:	bl	1eb0 <ffi_prep_java_raw_closure_loc@plt+0x1a0>
    1f6c:	cmp	w0, #0x0
    1f70:	b.eq	1f7c <ffi_prep_java_raw_closure_loc@plt+0x26c>  // b.none
    1f74:	mov	w0, #0x1                   	// #1
    1f78:	b	1f80 <ffi_prep_java_raw_closure_loc@plt+0x270>
    1f7c:	mov	w0, #0x0                   	// #0
    1f80:	cmp	w0, #0x0
    1f84:	cset	w0, ne  // ne = any
    1f88:	and	w0, w0, #0xff
    1f8c:	and	x0, x0, #0xff
    1f90:	cmp	x0, #0x0
    1f94:	b.eq	1fa0 <ffi_prep_java_raw_closure_loc@plt+0x290>  // b.none
    1f98:	mov	w0, #0x1                   	// #1
    1f9c:	b	20a8 <ffi_prep_java_raw_closure_loc@plt+0x398>
    1fa0:	ldr	x0, [sp, #24]
    1fa4:	ldr	x0, [x0]
    1fa8:	sub	x1, x0, #0x1
    1fac:	ldr	x0, [sp, #40]
    1fb0:	ldr	x0, [x0]
    1fb4:	ldrh	w0, [x0, #8]
    1fb8:	sub	w0, w0, #0x1
    1fbc:	sxtw	x0, w0
    1fc0:	orr	x0, x1, x0
    1fc4:	add	x1, x0, #0x1
    1fc8:	ldr	x0, [sp, #24]
    1fcc:	str	x1, [x0]
    1fd0:	ldr	x0, [sp, #16]
    1fd4:	cmp	x0, #0x0
    1fd8:	b.eq	1ff4 <ffi_prep_java_raw_closure_loc@plt+0x2e4>  // b.none
    1fdc:	ldr	x0, [sp, #16]
    1fe0:	add	x1, x0, #0x8
    1fe4:	str	x1, [sp, #16]
    1fe8:	ldr	x1, [sp, #24]
    1fec:	ldr	x1, [x1]
    1ff0:	str	x1, [x0]
    1ff4:	ldr	x0, [sp, #24]
    1ff8:	ldr	x1, [x0]
    1ffc:	ldr	x0, [sp, #40]
    2000:	ldr	x0, [x0]
    2004:	ldr	x0, [x0]
    2008:	add	x1, x1, x0
    200c:	ldr	x0, [sp, #24]
    2010:	str	x1, [x0]
    2014:	ldr	x0, [sp, #40]
    2018:	ldr	x0, [x0]
    201c:	ldrh	w0, [x0, #8]
    2020:	ldr	x1, [sp, #24]
    2024:	ldrh	w1, [x1, #8]
    2028:	mov	w2, w1
    202c:	and	w1, w2, #0xffff
    2030:	cmp	w1, w0
    2034:	csel	w0, w2, w0, hi  // hi = pmore
    2038:	and	w1, w0, #0xffff
    203c:	ldr	x0, [sp, #24]
    2040:	strh	w1, [x0, #8]
    2044:	ldr	x0, [sp, #40]
    2048:	add	x0, x0, #0x8
    204c:	str	x0, [sp, #40]
    2050:	ldr	x0, [sp, #40]
    2054:	ldr	x0, [x0]
    2058:	cmp	x0, #0x0
    205c:	b.ne	1f48 <ffi_prep_java_raw_closure_loc@plt+0x238>  // b.any
    2060:	ldr	x0, [sp, #24]
    2064:	ldr	x0, [x0]
    2068:	sub	x1, x0, #0x1
    206c:	ldr	x0, [sp, #24]
    2070:	ldrh	w0, [x0, #8]
    2074:	sub	w0, w0, #0x1
    2078:	sxtw	x0, w0
    207c:	orr	x0, x1, x0
    2080:	add	x1, x0, #0x1
    2084:	ldr	x0, [sp, #24]
    2088:	str	x1, [x0]
    208c:	ldr	x0, [sp, #24]
    2090:	ldr	x0, [x0]
    2094:	cmp	x0, #0x0
    2098:	b.ne	20a4 <ffi_prep_java_raw_closure_loc@plt+0x394>  // b.any
    209c:	mov	w0, #0x1                   	// #1
    20a0:	b	20a8 <ffi_prep_java_raw_closure_loc@plt+0x398>
    20a4:	mov	w0, #0x0                   	// #0
    20a8:	ldp	x29, x30, [sp], #48
    20ac:	ret
    20b0:	stp	x29, x30, [sp, #-80]!
    20b4:	mov	x29, sp
    20b8:	str	x0, [sp, #56]
    20bc:	str	w1, [sp, #52]
    20c0:	str	w2, [sp, #48]
    20c4:	str	w3, [sp, #44]
    20c8:	str	w4, [sp, #40]
    20cc:	str	x5, [sp, #32]
    20d0:	str	x6, [sp, #24]
    20d4:	str	wzr, [sp, #76]
    20d8:	ldr	w0, [sp, #52]
    20dc:	cmp	w0, #0x0
    20e0:	b.eq	20f0 <ffi_prep_java_raw_closure_loc@plt+0x3e0>  // b.none
    20e4:	ldr	w0, [sp, #52]
    20e8:	cmp	w0, #0x1
    20ec:	b.ls	20f8 <ffi_prep_java_raw_closure_loc@plt+0x3e8>  // b.plast
    20f0:	mov	w0, #0x2                   	// #2
    20f4:	b	2274 <ffi_prep_java_raw_closure_loc@plt+0x564>
    20f8:	ldr	x0, [sp, #56]
    20fc:	ldr	w1, [sp, #52]
    2100:	str	w1, [x0]
    2104:	ldr	x0, [sp, #56]
    2108:	ldr	x1, [sp, #24]
    210c:	str	x1, [x0, #8]
    2110:	ldr	x0, [sp, #56]
    2114:	ldr	w1, [sp, #40]
    2118:	str	w1, [x0, #4]
    211c:	ldr	x0, [sp, #56]
    2120:	ldr	x1, [sp, #32]
    2124:	str	x1, [x0, #16]
    2128:	ldr	x0, [sp, #56]
    212c:	str	wzr, [x0, #28]
    2130:	ldr	x0, [sp, #56]
    2134:	ldr	x0, [x0, #16]
    2138:	ldr	x0, [x0]
    213c:	cmp	x0, #0x0
    2140:	b.ne	2164 <ffi_prep_java_raw_closure_loc@plt+0x454>  // b.any
    2144:	ldr	x0, [sp, #56]
    2148:	ldr	x0, [x0, #16]
    214c:	mov	x1, #0x0                   	// #0
    2150:	bl	1eb0 <ffi_prep_java_raw_closure_loc@plt+0x1a0>
    2154:	cmp	w0, #0x0
    2158:	b.eq	2164 <ffi_prep_java_raw_closure_loc@plt+0x454>  // b.none
    215c:	mov	w0, #0x1                   	// #1
    2160:	b	2274 <ffi_prep_java_raw_closure_loc@plt+0x564>
    2164:	ldr	x0, [sp, #56]
    2168:	ldr	x0, [x0, #16]
    216c:	ldrh	w0, [x0, #10]
    2170:	cmp	w0, #0xd
    2174:	b.ne	2180 <ffi_prep_java_raw_closure_loc@plt+0x470>  // b.any
    2178:	mov	w0, #0x8                   	// #8
    217c:	str	w0, [sp, #76]
    2180:	ldr	x0, [sp, #56]
    2184:	ldr	x0, [x0, #8]
    2188:	str	x0, [sp, #64]
    218c:	ldr	x0, [sp, #56]
    2190:	ldr	w0, [x0, #4]
    2194:	str	w0, [sp, #72]
    2198:	b	2254 <ffi_prep_java_raw_closure_loc@plt+0x544>
    219c:	ldr	x0, [sp, #64]
    21a0:	ldr	x0, [x0]
    21a4:	ldr	x0, [x0]
    21a8:	cmp	x0, #0x0
    21ac:	b.ne	21d0 <ffi_prep_java_raw_closure_loc@plt+0x4c0>  // b.any
    21b0:	ldr	x0, [sp, #64]
    21b4:	ldr	x0, [x0]
    21b8:	mov	x1, #0x0                   	// #0
    21bc:	bl	1eb0 <ffi_prep_java_raw_closure_loc@plt+0x1a0>
    21c0:	cmp	w0, #0x0
    21c4:	b.eq	21d0 <ffi_prep_java_raw_closure_loc@plt+0x4c0>  // b.none
    21c8:	mov	w0, #0x1                   	// #1
    21cc:	b	2274 <ffi_prep_java_raw_closure_loc@plt+0x564>
    21d0:	ldr	x0, [sp, #64]
    21d4:	ldr	x0, [x0]
    21d8:	ldrh	w0, [x0, #8]
    21dc:	sub	w0, w0, #0x1
    21e0:	mov	w1, w0
    21e4:	ldr	w0, [sp, #76]
    21e8:	and	w0, w1, w0
    21ec:	cmp	w0, #0x0
    21f0:	b.eq	2218 <ffi_prep_java_raw_closure_loc@plt+0x508>  // b.none
    21f4:	ldr	w0, [sp, #76]
    21f8:	sub	w0, w0, #0x1
    21fc:	ldr	x1, [sp, #64]
    2200:	ldr	x1, [x1]
    2204:	ldrh	w1, [x1, #8]
    2208:	sub	w1, w1, #0x1
    220c:	orr	w0, w0, w1
    2210:	add	w0, w0, #0x1
    2214:	str	w0, [sp, #76]
    2218:	ldr	x0, [sp, #64]
    221c:	ldr	x0, [x0]
    2220:	ldr	x0, [x0]
    2224:	sub	w0, w0, #0x1
    2228:	orr	w1, w0, #0x7
    222c:	ldr	w0, [sp, #76]
    2230:	add	w0, w1, w0
    2234:	add	w0, w0, #0x1
    2238:	str	w0, [sp, #76]
    223c:	ldr	w0, [sp, #72]
    2240:	sub	w0, w0, #0x1
    2244:	str	w0, [sp, #72]
    2248:	ldr	x0, [sp, #64]
    224c:	add	x0, x0, #0x8
    2250:	str	x0, [sp, #64]
    2254:	ldr	w0, [sp, #72]
    2258:	cmp	w0, #0x0
    225c:	b.ne	219c <ffi_prep_java_raw_closure_loc@plt+0x48c>  // b.any
    2260:	ldr	x0, [sp, #56]
    2264:	ldr	w1, [sp, #76]
    2268:	str	w1, [x0, #24]
    226c:	ldr	x0, [sp, #56]
    2270:	bl	af08 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xa3c>
    2274:	ldp	x29, x30, [sp], #80
    2278:	ret

000000000000227c <ffi_prep_cif@@LIBFFI_BASE_7.0>:
    227c:	stp	x29, x30, [sp, #-48]!
    2280:	mov	x29, sp
    2284:	str	x0, [sp, #40]
    2288:	str	w1, [sp, #36]
    228c:	str	w2, [sp, #32]
    2290:	str	x3, [sp, #24]
    2294:	str	x4, [sp, #16]
    2298:	ldr	x6, [sp, #16]
    229c:	ldr	x5, [sp, #24]
    22a0:	ldr	w4, [sp, #32]
    22a4:	ldr	w3, [sp, #32]
    22a8:	mov	w2, #0x0                   	// #0
    22ac:	ldr	w1, [sp, #36]
    22b0:	ldr	x0, [sp, #40]
    22b4:	bl	20b0 <ffi_prep_java_raw_closure_loc@plt+0x3a0>
    22b8:	ldp	x29, x30, [sp], #48
    22bc:	ret

00000000000022c0 <ffi_prep_cif_var@@LIBFFI_BASE_7.0>:
    22c0:	stp	x29, x30, [sp, #-64]!
    22c4:	mov	x29, sp
    22c8:	str	x0, [sp, #56]
    22cc:	str	w1, [sp, #52]
    22d0:	str	w2, [sp, #48]
    22d4:	str	w3, [sp, #44]
    22d8:	str	x4, [sp, #32]
    22dc:	str	x5, [sp, #24]
    22e0:	ldr	x6, [sp, #24]
    22e4:	ldr	x5, [sp, #32]
    22e8:	ldr	w4, [sp, #44]
    22ec:	ldr	w3, [sp, #48]
    22f0:	mov	w2, #0x1                   	// #1
    22f4:	ldr	w1, [sp, #52]
    22f8:	ldr	x0, [sp, #56]
    22fc:	bl	20b0 <ffi_prep_java_raw_closure_loc@plt+0x3a0>
    2300:	ldp	x29, x30, [sp], #64
    2304:	ret

0000000000002308 <ffi_prep_closure@@LIBFFI_CLOSURE_7.0>:
    2308:	stp	x29, x30, [sp, #-48]!
    230c:	mov	x29, sp
    2310:	str	x0, [sp, #40]
    2314:	str	x1, [sp, #32]
    2318:	str	x2, [sp, #24]
    231c:	str	x3, [sp, #16]
    2320:	ldr	x4, [sp, #40]
    2324:	ldr	x3, [sp, #16]
    2328:	ldr	x2, [sp, #24]
    232c:	ldr	x1, [sp, #32]
    2330:	ldr	x0, [sp, #40]
    2334:	bl	1a70 <ffi_prep_closure_loc@plt>
    2338:	ldp	x29, x30, [sp], #48
    233c:	ret

0000000000002340 <ffi_get_struct_offsets@@LIBFFI_BASE_7.1>:
    2340:	stp	x29, x30, [sp, #-48]!
    2344:	mov	x29, sp
    2348:	str	w0, [sp, #44]
    234c:	str	x1, [sp, #32]
    2350:	str	x2, [sp, #24]
    2354:	ldr	w0, [sp, #44]
    2358:	cmp	w0, #0x0
    235c:	b.eq	236c <ffi_get_struct_offsets@@LIBFFI_BASE_7.1+0x2c>  // b.none
    2360:	ldr	w0, [sp, #44]
    2364:	cmp	w0, #0x1
    2368:	b.ls	2374 <ffi_get_struct_offsets@@LIBFFI_BASE_7.1+0x34>  // b.plast
    236c:	mov	w0, #0x2                   	// #2
    2370:	b	2398 <ffi_get_struct_offsets@@LIBFFI_BASE_7.1+0x58>
    2374:	ldr	x0, [sp, #32]
    2378:	ldrh	w0, [x0, #10]
    237c:	cmp	w0, #0xd
    2380:	b.eq	238c <ffi_get_struct_offsets@@LIBFFI_BASE_7.1+0x4c>  // b.none
    2384:	mov	w0, #0x1                   	// #1
    2388:	b	2398 <ffi_get_struct_offsets@@LIBFFI_BASE_7.1+0x58>
    238c:	ldr	x1, [sp, #24]
    2390:	ldr	x0, [sp, #32]
    2394:	bl	1eb0 <ffi_prep_java_raw_closure_loc@plt+0x1a0>
    2398:	ldp	x29, x30, [sp], #48
    239c:	ret

00000000000023a0 <ffi_raw_size@@LIBFFI_BASE_7.0>:
    23a0:	sub	sp, sp, #0x30
    23a4:	str	x0, [sp, #8]
    23a8:	str	xzr, [sp, #40]
    23ac:	ldr	x0, [sp, #8]
    23b0:	ldr	x0, [x0, #8]
    23b4:	str	x0, [sp, #24]
    23b8:	ldr	x0, [sp, #8]
    23bc:	ldr	w0, [x0, #4]
    23c0:	sub	w0, w0, #0x1
    23c4:	str	w0, [sp, #36]
    23c8:	b	242c <ffi_raw_size@@LIBFFI_BASE_7.0+0x8c>
    23cc:	ldr	x0, [sp, #24]
    23d0:	ldr	x0, [x0]
    23d4:	ldrh	w0, [x0, #10]
    23d8:	cmp	w0, #0xd
    23dc:	b.ne	23f0 <ffi_raw_size@@LIBFFI_BASE_7.0+0x50>  // b.any
    23e0:	ldr	x0, [sp, #40]
    23e4:	add	x0, x0, #0x8
    23e8:	str	x0, [sp, #40]
    23ec:	b	2414 <ffi_raw_size@@LIBFFI_BASE_7.0+0x74>
    23f0:	ldr	x0, [sp, #24]
    23f4:	ldr	x0, [x0]
    23f8:	ldr	x0, [x0]
    23fc:	sub	x0, x0, #0x1
    2400:	orr	x1, x0, #0x7
    2404:	ldr	x0, [sp, #40]
    2408:	add	x0, x1, x0
    240c:	add	x0, x0, #0x1
    2410:	str	x0, [sp, #40]
    2414:	ldr	w0, [sp, #36]
    2418:	sub	w0, w0, #0x1
    241c:	str	w0, [sp, #36]
    2420:	ldr	x0, [sp, #24]
    2424:	add	x0, x0, #0x8
    2428:	str	x0, [sp, #24]
    242c:	ldr	w0, [sp, #36]
    2430:	cmp	w0, #0x0
    2434:	b.ge	23cc <ffi_raw_size@@LIBFFI_BASE_7.0+0x2c>  // b.tcont
    2438:	ldr	x0, [sp, #40]
    243c:	add	sp, sp, #0x30
    2440:	ret

0000000000002444 <ffi_raw_to_ptrarray@@LIBFFI_BASE_7.0>:
    2444:	sub	sp, sp, #0x30
    2448:	str	x0, [sp, #24]
    244c:	str	x1, [sp, #16]
    2450:	str	x2, [sp, #8]
    2454:	ldr	x0, [sp, #24]
    2458:	ldr	x0, [x0, #8]
    245c:	str	x0, [sp, #32]
    2460:	str	wzr, [sp, #44]
    2464:	b	2520 <ffi_raw_to_ptrarray@@LIBFFI_BASE_7.0+0xdc>
    2468:	ldr	x0, [sp, #32]
    246c:	ldr	x0, [x0]
    2470:	ldrh	w0, [x0, #10]
    2474:	cmp	w0, #0xd
    2478:	b.ne	2498 <ffi_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x54>  // b.any
    247c:	ldr	x0, [sp, #16]
    2480:	add	x1, x0, #0x8
    2484:	str	x1, [sp, #16]
    2488:	ldr	x1, [x0]
    248c:	ldr	x0, [sp, #8]
    2490:	str	x1, [x0]
    2494:	b	24fc <ffi_raw_to_ptrarray@@LIBFFI_BASE_7.0+0xb8>
    2498:	ldr	x0, [sp, #32]
    249c:	ldr	x0, [x0]
    24a0:	ldrh	w0, [x0, #10]
    24a4:	cmp	w0, #0xf
    24a8:	b.ne	24c8 <ffi_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x84>  // b.any
    24ac:	ldr	x0, [sp, #16]
    24b0:	add	x1, x0, #0x8
    24b4:	str	x1, [sp, #16]
    24b8:	ldr	x1, [x0]
    24bc:	ldr	x0, [sp, #8]
    24c0:	str	x1, [x0]
    24c4:	b	24fc <ffi_raw_to_ptrarray@@LIBFFI_BASE_7.0+0xb8>
    24c8:	ldr	x0, [sp, #8]
    24cc:	ldr	x1, [sp, #16]
    24d0:	str	x1, [x0]
    24d4:	ldr	x0, [sp, #32]
    24d8:	ldr	x0, [x0]
    24dc:	ldr	x0, [x0]
    24e0:	sub	x0, x0, #0x1
    24e4:	orr	x0, x0, #0x7
    24e8:	add	x0, x0, #0x1
    24ec:	and	x0, x0, #0xfffffffffffffff8
    24f0:	ldr	x1, [sp, #16]
    24f4:	add	x0, x1, x0
    24f8:	str	x0, [sp, #16]
    24fc:	ldr	w0, [sp, #44]
    2500:	add	w0, w0, #0x1
    2504:	str	w0, [sp, #44]
    2508:	ldr	x0, [sp, #32]
    250c:	add	x0, x0, #0x8
    2510:	str	x0, [sp, #32]
    2514:	ldr	x0, [sp, #8]
    2518:	add	x0, x0, #0x8
    251c:	str	x0, [sp, #8]
    2520:	ldr	x0, [sp, #24]
    2524:	ldr	w0, [x0, #4]
    2528:	ldr	w1, [sp, #44]
    252c:	cmp	w1, w0
    2530:	b.cc	2468 <ffi_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x24>  // b.lo, b.ul, b.last
    2534:	nop
    2538:	nop
    253c:	add	sp, sp, #0x30
    2540:	ret

0000000000002544 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0>:
    2544:	stp	x29, x30, [sp, #-64]!
    2548:	mov	x29, sp
    254c:	str	x0, [sp, #40]
    2550:	str	x1, [sp, #32]
    2554:	str	x2, [sp, #24]
    2558:	ldr	x0, [sp, #40]
    255c:	ldr	x0, [x0, #8]
    2560:	str	x0, [sp, #48]
    2564:	str	wzr, [sp, #60]
    2568:	b	279c <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x258>
    256c:	ldr	x0, [sp, #48]
    2570:	ldr	x0, [x0]
    2574:	ldrh	w0, [x0, #10]
    2578:	cmp	w0, #0xf
    257c:	b.eq	26f0 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x1ac>  // b.none
    2580:	cmp	w0, #0xf
    2584:	b.gt	272c <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x1e8>
    2588:	cmp	w0, #0xe
    258c:	b.eq	270c <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x1c8>  // b.none
    2590:	cmp	w0, #0xe
    2594:	b.gt	272c <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x1e8>
    2598:	cmp	w0, #0xd
    259c:	b.eq	26d4 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x190>  // b.none
    25a0:	cmp	w0, #0xd
    25a4:	b.gt	272c <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x1e8>
    25a8:	cmp	w0, #0xa
    25ac:	b.eq	26b0 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x16c>  // b.none
    25b0:	cmp	w0, #0xa
    25b4:	b.gt	272c <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x1e8>
    25b8:	cmp	w0, #0x9
    25bc:	b.eq	268c <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x148>  // b.none
    25c0:	cmp	w0, #0x9
    25c4:	b.gt	272c <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x1e8>
    25c8:	cmp	w0, #0x8
    25cc:	b.eq	2668 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x124>  // b.none
    25d0:	cmp	w0, #0x8
    25d4:	b.gt	272c <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x1e8>
    25d8:	cmp	w0, #0x7
    25dc:	b.eq	2644 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x100>  // b.none
    25e0:	cmp	w0, #0x7
    25e4:	b.gt	272c <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x1e8>
    25e8:	cmp	w0, #0x5
    25ec:	b.eq	25fc <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0xb8>  // b.none
    25f0:	cmp	w0, #0x6
    25f4:	b.eq	2620 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0xdc>  // b.none
    25f8:	b	272c <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x1e8>
    25fc:	ldr	x0, [sp, #32]
    2600:	ldr	x0, [x0]
    2604:	ldrb	w2, [x0]
    2608:	ldr	x0, [sp, #24]
    260c:	add	x1, x0, #0x8
    2610:	str	x1, [sp, #24]
    2614:	and	x1, x2, #0xff
    2618:	str	x1, [x0]
    261c:	b	2778 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x234>
    2620:	ldr	x0, [sp, #32]
    2624:	ldr	x0, [x0]
    2628:	ldrsb	w2, [x0]
    262c:	ldr	x0, [sp, #24]
    2630:	add	x1, x0, #0x8
    2634:	str	x1, [sp, #24]
    2638:	sxtb	x1, w2
    263c:	str	x1, [x0]
    2640:	b	2778 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x234>
    2644:	ldr	x0, [sp, #32]
    2648:	ldr	x0, [x0]
    264c:	ldrh	w2, [x0]
    2650:	ldr	x0, [sp, #24]
    2654:	add	x1, x0, #0x8
    2658:	str	x1, [sp, #24]
    265c:	and	x1, x2, #0xffff
    2660:	str	x1, [x0]
    2664:	b	2778 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x234>
    2668:	ldr	x0, [sp, #32]
    266c:	ldr	x0, [x0]
    2670:	ldrsh	w2, [x0]
    2674:	ldr	x0, [sp, #24]
    2678:	add	x1, x0, #0x8
    267c:	str	x1, [sp, #24]
    2680:	sxth	x1, w2
    2684:	str	x1, [x0]
    2688:	b	2778 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x234>
    268c:	ldr	x0, [sp, #32]
    2690:	ldr	x0, [x0]
    2694:	ldr	w2, [x0]
    2698:	ldr	x0, [sp, #24]
    269c:	add	x1, x0, #0x8
    26a0:	str	x1, [sp, #24]
    26a4:	mov	w1, w2
    26a8:	str	x1, [x0]
    26ac:	b	2778 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x234>
    26b0:	ldr	x0, [sp, #32]
    26b4:	ldr	x0, [x0]
    26b8:	ldr	w2, [x0]
    26bc:	ldr	x0, [sp, #24]
    26c0:	add	x1, x0, #0x8
    26c4:	str	x1, [sp, #24]
    26c8:	sxtw	x1, w2
    26cc:	str	x1, [x0]
    26d0:	b	2778 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x234>
    26d4:	ldr	x0, [sp, #24]
    26d8:	add	x1, x0, #0x8
    26dc:	str	x1, [sp, #24]
    26e0:	ldr	x1, [sp, #32]
    26e4:	ldr	x1, [x1]
    26e8:	str	x1, [x0]
    26ec:	b	2778 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x234>
    26f0:	ldr	x0, [sp, #24]
    26f4:	add	x1, x0, #0x8
    26f8:	str	x1, [sp, #24]
    26fc:	ldr	x1, [sp, #32]
    2700:	ldr	x1, [x1]
    2704:	str	x1, [x0]
    2708:	b	2778 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x234>
    270c:	ldr	x0, [sp, #32]
    2710:	ldr	x1, [x0]
    2714:	ldr	x0, [sp, #24]
    2718:	add	x2, x0, #0x8
    271c:	str	x2, [sp, #24]
    2720:	ldr	x1, [x1]
    2724:	str	x1, [x0]
    2728:	b	2778 <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x234>
    272c:	ldr	x3, [sp, #24]
    2730:	ldr	x0, [sp, #32]
    2734:	ldr	x1, [x0]
    2738:	ldr	x0, [sp, #48]
    273c:	ldr	x0, [x0]
    2740:	ldr	x0, [x0]
    2744:	mov	x2, x0
    2748:	mov	x0, x3
    274c:	bl	1a60 <memcpy@plt>
    2750:	ldr	x0, [sp, #48]
    2754:	ldr	x0, [x0]
    2758:	ldr	x0, [x0]
    275c:	sub	x0, x0, #0x1
    2760:	orr	x0, x0, #0x7
    2764:	add	x0, x0, #0x1
    2768:	and	x0, x0, #0xfffffffffffffff8
    276c:	ldr	x1, [sp, #24]
    2770:	add	x0, x1, x0
    2774:	str	x0, [sp, #24]
    2778:	ldr	w0, [sp, #60]
    277c:	add	w0, w0, #0x1
    2780:	str	w0, [sp, #60]
    2784:	ldr	x0, [sp, #48]
    2788:	add	x0, x0, #0x8
    278c:	str	x0, [sp, #48]
    2790:	ldr	x0, [sp, #32]
    2794:	add	x0, x0, #0x8
    2798:	str	x0, [sp, #32]
    279c:	ldr	x0, [sp, #40]
    27a0:	ldr	w0, [x0, #4]
    27a4:	ldr	w1, [sp, #60]
    27a8:	cmp	w1, w0
    27ac:	b.cc	256c <ffi_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x28>  // b.lo, b.ul, b.last
    27b0:	nop
    27b4:	nop
    27b8:	ldp	x29, x30, [sp], #64
    27bc:	ret

00000000000027c0 <ffi_raw_call@@LIBFFI_BASE_7.0>:
    27c0:	stp	x29, x30, [sp, #-64]!
    27c4:	mov	x29, sp
    27c8:	str	x0, [x29, #40]
    27cc:	str	x1, [x29, #32]
    27d0:	str	x2, [x29, #24]
    27d4:	str	x3, [x29, #16]
    27d8:	ldr	x0, [x29, #40]
    27dc:	ldr	w0, [x0, #4]
    27e0:	mov	w0, w0
    27e4:	lsl	x0, x0, #3
    27e8:	add	x0, x0, #0xf
    27ec:	lsr	x0, x0, #4
    27f0:	lsl	x0, x0, #4
    27f4:	sub	sp, sp, x0
    27f8:	mov	x0, sp
    27fc:	add	x0, x0, #0xf
    2800:	lsr	x0, x0, #4
    2804:	lsl	x0, x0, #4
    2808:	str	x0, [x29, #56]
    280c:	ldr	x2, [x29, #56]
    2810:	ldr	x1, [x29, #16]
    2814:	ldr	x0, [x29, #40]
    2818:	bl	1b10 <ffi_raw_to_ptrarray@plt>
    281c:	ldr	x3, [x29, #56]
    2820:	ldr	x2, [x29, #24]
    2824:	ldr	x1, [x29, #32]
    2828:	ldr	x0, [x29, #40]
    282c:	bl	1c50 <ffi_call@plt>
    2830:	nop
    2834:	mov	sp, x29
    2838:	ldp	x29, x30, [sp], #64
    283c:	ret
    2840:	stp	x29, x30, [sp, #-64]!
    2844:	mov	x29, sp
    2848:	str	x0, [x29, #40]
    284c:	str	x1, [x29, #32]
    2850:	str	x2, [x29, #24]
    2854:	str	x3, [x29, #16]
    2858:	ldr	x0, [x29, #40]
    285c:	bl	1c00 <ffi_raw_size@plt>
    2860:	add	x0, x0, #0xf
    2864:	lsr	x0, x0, #4
    2868:	lsl	x0, x0, #4
    286c:	sub	sp, sp, x0
    2870:	mov	x0, sp
    2874:	add	x0, x0, #0xf
    2878:	lsr	x0, x0, #4
    287c:	lsl	x0, x0, #4
    2880:	str	x0, [x29, #56]
    2884:	ldr	x0, [x29, #16]
    2888:	str	x0, [x29, #48]
    288c:	ldr	x2, [x29, #56]
    2890:	ldr	x1, [x29, #24]
    2894:	ldr	x0, [x29, #40]
    2898:	bl	1c10 <ffi_ptrarray_to_raw@plt>
    289c:	ldr	x0, [x29, #48]
    28a0:	ldr	x4, [x0, #48]
    28a4:	ldr	x0, [x29, #48]
    28a8:	ldr	x0, [x0, #56]
    28ac:	mov	x3, x0
    28b0:	ldr	x2, [x29, #56]
    28b4:	ldr	x1, [x29, #32]
    28b8:	ldr	x0, [x29, #40]
    28bc:	blr	x4
    28c0:	nop
    28c4:	mov	sp, x29
    28c8:	ldp	x29, x30, [sp], #64
    28cc:	ret

00000000000028d0 <ffi_prep_raw_closure_loc@@LIBFFI_CLOSURE_7.0>:
    28d0:	stp	x29, x30, [sp, #-80]!
    28d4:	mov	x29, sp
    28d8:	str	x0, [sp, #56]
    28dc:	str	x1, [sp, #48]
    28e0:	str	x2, [sp, #40]
    28e4:	str	x3, [sp, #32]
    28e8:	str	x4, [sp, #24]
    28ec:	ldr	x4, [sp, #24]
    28f0:	ldr	x3, [sp, #24]
    28f4:	adrp	x0, 2000 <ffi_prep_java_raw_closure_loc@plt+0x2f0>
    28f8:	add	x2, x0, #0x840
    28fc:	ldr	x1, [sp, #48]
    2900:	ldr	x0, [sp, #56]
    2904:	bl	1a70 <ffi_prep_closure_loc@plt>
    2908:	str	w0, [sp, #76]
    290c:	ldr	w0, [sp, #76]
    2910:	cmp	w0, #0x0
    2914:	b.ne	2930 <ffi_prep_raw_closure_loc@@LIBFFI_CLOSURE_7.0+0x60>  // b.any
    2918:	ldr	x0, [sp, #56]
    291c:	ldr	x1, [sp, #40]
    2920:	str	x1, [x0, #48]
    2924:	ldr	x0, [sp, #56]
    2928:	ldr	x1, [sp, #32]
    292c:	str	x1, [x0, #56]
    2930:	ldr	w0, [sp, #76]
    2934:	ldp	x29, x30, [sp], #80
    2938:	ret

000000000000293c <ffi_prep_raw_closure@@LIBFFI_CLOSURE_7.0>:
    293c:	stp	x29, x30, [sp, #-48]!
    2940:	mov	x29, sp
    2944:	str	x0, [sp, #40]
    2948:	str	x1, [sp, #32]
    294c:	str	x2, [sp, #24]
    2950:	str	x3, [sp, #16]
    2954:	ldr	x4, [sp, #40]
    2958:	ldr	x3, [sp, #16]
    295c:	ldr	x2, [sp, #24]
    2960:	ldr	x1, [sp, #32]
    2964:	ldr	x0, [sp, #40]
    2968:	bl	1b20 <ffi_prep_raw_closure_loc@plt>
    296c:	ldp	x29, x30, [sp], #48
    2970:	ret

0000000000002974 <ffi_java_raw_size@@LIBFFI_BASE_7.0>:
    2974:	stp	x29, x30, [sp, #-64]!
    2978:	mov	x29, sp
    297c:	str	x0, [sp, #24]
    2980:	str	xzr, [sp, #56]
    2984:	ldr	x0, [sp, #24]
    2988:	ldr	x0, [x0, #8]
    298c:	str	x0, [sp, #40]
    2990:	ldr	x0, [sp, #24]
    2994:	ldr	w0, [x0, #4]
    2998:	sub	w0, w0, #0x1
    299c:	str	w0, [sp, #52]
    29a0:	b	2a28 <ffi_java_raw_size@@LIBFFI_BASE_7.0+0xb4>
    29a4:	ldr	x0, [sp, #40]
    29a8:	ldr	x0, [x0]
    29ac:	ldrh	w0, [x0, #10]
    29b0:	cmp	w0, #0xf
    29b4:	b.eq	2a00 <ffi_java_raw_size@@LIBFFI_BASE_7.0+0x8c>  // b.none
    29b8:	cmp	w0, #0xf
    29bc:	b.gt	2a04 <ffi_java_raw_size@@LIBFFI_BASE_7.0+0x90>
    29c0:	cmp	w0, #0xd
    29c4:	b.eq	29fc <ffi_java_raw_size@@LIBFFI_BASE_7.0+0x88>  // b.none
    29c8:	cmp	w0, #0xd
    29cc:	b.gt	2a04 <ffi_java_raw_size@@LIBFFI_BASE_7.0+0x90>
    29d0:	cmp	w0, #0x3
    29d4:	b.eq	29ec <ffi_java_raw_size@@LIBFFI_BASE_7.0+0x78>  // b.none
    29d8:	cmp	w0, #0x3
    29dc:	b.lt	2a04 <ffi_java_raw_size@@LIBFFI_BASE_7.0+0x90>  // b.tstop
    29e0:	sub	w0, w0, #0xb
    29e4:	cmp	w0, #0x1
    29e8:	b.hi	2a04 <ffi_java_raw_size@@LIBFFI_BASE_7.0+0x90>  // b.pmore
    29ec:	ldr	x0, [sp, #56]
    29f0:	add	x0, x0, #0x10
    29f4:	str	x0, [sp, #56]
    29f8:	b	2a10 <ffi_java_raw_size@@LIBFFI_BASE_7.0+0x9c>
    29fc:	bl	1b90 <abort@plt>
    2a00:	bl	1b90 <abort@plt>
    2a04:	ldr	x0, [sp, #56]
    2a08:	add	x0, x0, #0x8
    2a0c:	str	x0, [sp, #56]
    2a10:	ldr	w0, [sp, #52]
    2a14:	sub	w0, w0, #0x1
    2a18:	str	w0, [sp, #52]
    2a1c:	ldr	x0, [sp, #40]
    2a20:	add	x0, x0, #0x8
    2a24:	str	x0, [sp, #40]
    2a28:	ldr	w0, [sp, #52]
    2a2c:	cmp	w0, #0x0
    2a30:	b.ge	29a4 <ffi_java_raw_size@@LIBFFI_BASE_7.0+0x30>  // b.tcont
    2a34:	ldr	x0, [sp, #56]
    2a38:	ldp	x29, x30, [sp], #64
    2a3c:	ret

0000000000002a40 <ffi_java_raw_to_ptrarray@@LIBFFI_BASE_7.0>:
    2a40:	stp	x29, x30, [sp, #-64]!
    2a44:	mov	x29, sp
    2a48:	str	x0, [sp, #40]
    2a4c:	str	x1, [sp, #32]
    2a50:	str	x2, [sp, #24]
    2a54:	ldr	x0, [sp, #40]
    2a58:	ldr	x0, [x0, #8]
    2a5c:	str	x0, [sp, #48]
    2a60:	str	wzr, [sp, #60]
    2a64:	b	2af8 <ffi_java_raw_to_ptrarray@@LIBFFI_BASE_7.0+0xb8>
    2a68:	ldr	x0, [sp, #48]
    2a6c:	ldr	x0, [x0]
    2a70:	ldrh	w0, [x0, #10]
    2a74:	cmp	w0, #0xf
    2a78:	b.eq	2abc <ffi_java_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x7c>  // b.none
    2a7c:	cmp	w0, #0xf
    2a80:	b.gt	2ac0 <ffi_java_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x80>
    2a84:	cmp	w0, #0x3
    2a88:	b.eq	2aa0 <ffi_java_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x60>  // b.none
    2a8c:	cmp	w0, #0x3
    2a90:	b.lt	2ac0 <ffi_java_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x80>  // b.tstop
    2a94:	sub	w0, w0, #0xb
    2a98:	cmp	w0, #0x1
    2a9c:	b.hi	2ac0 <ffi_java_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x80>  // b.pmore
    2aa0:	ldr	x0, [sp, #24]
    2aa4:	ldr	x1, [sp, #32]
    2aa8:	str	x1, [x0]
    2aac:	ldr	x0, [sp, #32]
    2ab0:	add	x0, x0, #0x10
    2ab4:	str	x0, [sp, #32]
    2ab8:	b	2ad4 <ffi_java_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x94>
    2abc:	bl	1b90 <abort@plt>
    2ac0:	ldr	x0, [sp, #32]
    2ac4:	add	x1, x0, #0x8
    2ac8:	str	x1, [sp, #32]
    2acc:	ldr	x1, [sp, #24]
    2ad0:	str	x0, [x1]
    2ad4:	ldr	w0, [sp, #60]
    2ad8:	add	w0, w0, #0x1
    2adc:	str	w0, [sp, #60]
    2ae0:	ldr	x0, [sp, #48]
    2ae4:	add	x0, x0, #0x8
    2ae8:	str	x0, [sp, #48]
    2aec:	ldr	x0, [sp, #24]
    2af0:	add	x0, x0, #0x8
    2af4:	str	x0, [sp, #24]
    2af8:	ldr	x0, [sp, #40]
    2afc:	ldr	w0, [x0, #4]
    2b00:	ldr	w1, [sp, #60]
    2b04:	cmp	w1, w0
    2b08:	b.cc	2a68 <ffi_java_raw_to_ptrarray@@LIBFFI_BASE_7.0+0x28>  // b.lo, b.ul, b.last
    2b0c:	nop
    2b10:	nop
    2b14:	ldp	x29, x30, [sp], #64
    2b18:	ret

0000000000002b1c <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0>:
    2b1c:	sub	sp, sp, #0x30
    2b20:	str	x0, [sp, #24]
    2b24:	str	x1, [sp, #16]
    2b28:	str	x2, [sp, #8]
    2b2c:	ldr	x0, [sp, #24]
    2b30:	ldr	x0, [x0, #8]
    2b34:	str	x0, [sp, #32]
    2b38:	str	wzr, [sp, #44]
    2b3c:	b	2d40 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x224>
    2b40:	ldr	x0, [sp, #32]
    2b44:	ldr	x0, [x0]
    2b48:	ldrh	w0, [x0, #10]
    2b4c:	cmp	w0, #0xe
    2b50:	b.eq	2cfc <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x1e0>  // b.none
    2b54:	cmp	w0, #0xe
    2b58:	b.gt	2d1c <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x200>
    2b5c:	cmp	w0, #0xc
    2b60:	b.gt	2d1c <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x200>
    2b64:	cmp	w0, #0xb
    2b68:	b.ge	2cd8 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x1bc>  // b.tcont
    2b6c:	cmp	w0, #0xa
    2b70:	b.eq	2c94 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x178>  // b.none
    2b74:	cmp	w0, #0xa
    2b78:	b.gt	2d1c <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x200>
    2b7c:	cmp	w0, #0x9
    2b80:	b.eq	2c70 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x154>  // b.none
    2b84:	cmp	w0, #0x9
    2b88:	b.gt	2d1c <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x200>
    2b8c:	cmp	w0, #0x8
    2b90:	b.eq	2c4c <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x130>  // b.none
    2b94:	cmp	w0, #0x8
    2b98:	b.gt	2d1c <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x200>
    2b9c:	cmp	w0, #0x7
    2ba0:	b.eq	2c28 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x10c>  // b.none
    2ba4:	cmp	w0, #0x7
    2ba8:	b.gt	2d1c <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x200>
    2bac:	cmp	w0, #0x6
    2bb0:	b.eq	2c04 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0xe8>  // b.none
    2bb4:	cmp	w0, #0x6
    2bb8:	b.gt	2d1c <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x200>
    2bbc:	cmp	w0, #0x5
    2bc0:	b.eq	2be0 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0xc4>  // b.none
    2bc4:	cmp	w0, #0x5
    2bc8:	b.gt	2d1c <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x200>
    2bcc:	cmp	w0, #0x2
    2bd0:	b.eq	2cb8 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x19c>  // b.none
    2bd4:	cmp	w0, #0x3
    2bd8:	b.eq	2cd8 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x1bc>  // b.none
    2bdc:	b	2d1c <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x200>
    2be0:	ldr	x0, [sp, #16]
    2be4:	ldr	x0, [x0]
    2be8:	ldrb	w2, [x0]
    2bec:	ldr	x0, [sp, #8]
    2bf0:	add	x1, x0, #0x8
    2bf4:	str	x1, [sp, #8]
    2bf8:	and	x1, x2, #0xff
    2bfc:	str	x1, [x0]
    2c00:	b	2d1c <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x200>
    2c04:	ldr	x0, [sp, #16]
    2c08:	ldr	x0, [x0]
    2c0c:	ldrsb	w2, [x0]
    2c10:	ldr	x0, [sp, #8]
    2c14:	add	x1, x0, #0x8
    2c18:	str	x1, [sp, #8]
    2c1c:	sxtb	x1, w2
    2c20:	str	x1, [x0]
    2c24:	b	2d1c <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x200>
    2c28:	ldr	x0, [sp, #16]
    2c2c:	ldr	x0, [x0]
    2c30:	ldrh	w2, [x0]
    2c34:	ldr	x0, [sp, #8]
    2c38:	add	x1, x0, #0x8
    2c3c:	str	x1, [sp, #8]
    2c40:	and	x1, x2, #0xffff
    2c44:	str	x1, [x0]
    2c48:	b	2d1c <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x200>
    2c4c:	ldr	x0, [sp, #16]
    2c50:	ldr	x0, [x0]
    2c54:	ldrsh	w2, [x0]
    2c58:	ldr	x0, [sp, #8]
    2c5c:	add	x1, x0, #0x8
    2c60:	str	x1, [sp, #8]
    2c64:	sxth	x1, w2
    2c68:	str	x1, [x0]
    2c6c:	b	2d1c <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x200>
    2c70:	ldr	x0, [sp, #16]
    2c74:	ldr	x0, [x0]
    2c78:	ldr	w2, [x0]
    2c7c:	ldr	x0, [sp, #8]
    2c80:	add	x1, x0, #0x8
    2c84:	str	x1, [sp, #8]
    2c88:	mov	w1, w2
    2c8c:	str	x1, [x0]
    2c90:	b	2d1c <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x200>
    2c94:	ldr	x0, [sp, #16]
    2c98:	ldr	x0, [x0]
    2c9c:	ldr	w2, [x0]
    2ca0:	ldr	x0, [sp, #8]
    2ca4:	add	x1, x0, #0x8
    2ca8:	str	x1, [sp, #8]
    2cac:	sxtw	x1, w2
    2cb0:	str	x1, [x0]
    2cb4:	b	2d1c <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x200>
    2cb8:	ldr	x0, [sp, #16]
    2cbc:	ldr	x1, [x0]
    2cc0:	ldr	x0, [sp, #8]
    2cc4:	add	x2, x0, #0x8
    2cc8:	str	x2, [sp, #8]
    2ccc:	ldr	s0, [x1]
    2cd0:	str	s0, [x0]
    2cd4:	b	2d1c <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x200>
    2cd8:	ldr	x0, [sp, #16]
    2cdc:	ldr	x0, [x0]
    2ce0:	ldr	x1, [x0]
    2ce4:	ldr	x0, [sp, #8]
    2ce8:	str	x1, [x0]
    2cec:	ldr	x0, [sp, #8]
    2cf0:	add	x0, x0, #0x10
    2cf4:	str	x0, [sp, #8]
    2cf8:	b	2d1c <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x200>
    2cfc:	ldr	x0, [sp, #16]
    2d00:	ldr	x1, [x0]
    2d04:	ldr	x0, [sp, #8]
    2d08:	add	x2, x0, #0x8
    2d0c:	str	x2, [sp, #8]
    2d10:	ldr	x1, [x1]
    2d14:	str	x1, [x0]
    2d18:	nop
    2d1c:	ldr	w0, [sp, #44]
    2d20:	add	w0, w0, #0x1
    2d24:	str	w0, [sp, #44]
    2d28:	ldr	x0, [sp, #32]
    2d2c:	add	x0, x0, #0x8
    2d30:	str	x0, [sp, #32]
    2d34:	ldr	x0, [sp, #16]
    2d38:	add	x0, x0, #0x8
    2d3c:	str	x0, [sp, #16]
    2d40:	ldr	x0, [sp, #24]
    2d44:	ldr	w0, [x0, #4]
    2d48:	ldr	w1, [sp, #44]
    2d4c:	cmp	w1, w0
    2d50:	b.cc	2b40 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x24>  // b.lo, b.ul, b.last
    2d54:	nop
    2d58:	nop
    2d5c:	add	sp, sp, #0x30
    2d60:	ret
    2d64:	sub	sp, sp, #0x10
    2d68:	str	x0, [sp, #8]
    2d6c:	str	x1, [sp]
    2d70:	nop
    2d74:	add	sp, sp, #0x10
    2d78:	ret
    2d7c:	sub	sp, sp, #0x10
    2d80:	str	x0, [sp, #8]
    2d84:	str	x1, [sp]
    2d88:	nop
    2d8c:	add	sp, sp, #0x10
    2d90:	ret

0000000000002d94 <ffi_java_raw_call@@LIBFFI_BASE_7.0>:
    2d94:	stp	x29, x30, [sp, #-64]!
    2d98:	mov	x29, sp
    2d9c:	str	x0, [x29, #40]
    2da0:	str	x1, [x29, #32]
    2da4:	str	x2, [x29, #24]
    2da8:	str	x3, [x29, #16]
    2dac:	ldr	x0, [x29, #40]
    2db0:	ldr	w0, [x0, #4]
    2db4:	mov	w0, w0
    2db8:	lsl	x0, x0, #3
    2dbc:	add	x0, x0, #0xf
    2dc0:	lsr	x0, x0, #4
    2dc4:	lsl	x0, x0, #4
    2dc8:	sub	sp, sp, x0
    2dcc:	mov	x0, sp
    2dd0:	add	x0, x0, #0xf
    2dd4:	lsr	x0, x0, #4
    2dd8:	lsl	x0, x0, #4
    2ddc:	str	x0, [x29, #56]
    2de0:	ldr	x2, [x29, #56]
    2de4:	ldr	x1, [x29, #16]
    2de8:	ldr	x0, [x29, #40]
    2dec:	bl	1a90 <ffi_java_raw_to_ptrarray@plt>
    2df0:	ldr	x3, [x29, #56]
    2df4:	ldr	x2, [x29, #24]
    2df8:	ldr	x1, [x29, #32]
    2dfc:	ldr	x0, [x29, #40]
    2e00:	bl	1c50 <ffi_call@plt>
    2e04:	ldr	x1, [x29, #24]
    2e08:	ldr	x0, [x29, #40]
    2e0c:	bl	2d64 <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x248>
    2e10:	nop
    2e14:	mov	sp, x29
    2e18:	ldp	x29, x30, [sp], #64
    2e1c:	ret
    2e20:	stp	x29, x30, [sp, #-64]!
    2e24:	mov	x29, sp
    2e28:	str	x0, [x29, #40]
    2e2c:	str	x1, [x29, #32]
    2e30:	str	x2, [x29, #24]
    2e34:	str	x3, [x29, #16]
    2e38:	ldr	x0, [x29, #40]
    2e3c:	bl	1bf0 <ffi_java_raw_size@plt>
    2e40:	add	x0, x0, #0xf
    2e44:	lsr	x0, x0, #4
    2e48:	lsl	x0, x0, #4
    2e4c:	sub	sp, sp, x0
    2e50:	mov	x0, sp
    2e54:	add	x0, x0, #0xf
    2e58:	lsr	x0, x0, #4
    2e5c:	lsl	x0, x0, #4
    2e60:	str	x0, [x29, #56]
    2e64:	ldr	x0, [x29, #16]
    2e68:	str	x0, [x29, #48]
    2e6c:	ldr	x2, [x29, #56]
    2e70:	ldr	x1, [x29, #24]
    2e74:	ldr	x0, [x29, #40]
    2e78:	bl	1cc0 <ffi_java_ptrarray_to_raw@plt>
    2e7c:	ldr	x0, [x29, #48]
    2e80:	ldr	x4, [x0, #48]
    2e84:	ldr	x0, [x29, #48]
    2e88:	ldr	x0, [x0, #56]
    2e8c:	mov	x3, x0
    2e90:	ldr	x2, [x29, #56]
    2e94:	ldr	x1, [x29, #32]
    2e98:	ldr	x0, [x29, #40]
    2e9c:	blr	x4
    2ea0:	ldr	x1, [x29, #32]
    2ea4:	ldr	x0, [x29, #40]
    2ea8:	bl	2d7c <ffi_java_ptrarray_to_raw@@LIBFFI_BASE_7.0+0x260>
    2eac:	nop
    2eb0:	mov	sp, x29
    2eb4:	ldp	x29, x30, [sp], #64
    2eb8:	ret

0000000000002ebc <ffi_prep_java_raw_closure_loc@@LIBFFI_CLOSURE_7.0>:
    2ebc:	stp	x29, x30, [sp, #-80]!
    2ec0:	mov	x29, sp
    2ec4:	str	x0, [sp, #56]
    2ec8:	str	x1, [sp, #48]
    2ecc:	str	x2, [sp, #40]
    2ed0:	str	x3, [sp, #32]
    2ed4:	str	x4, [sp, #24]
    2ed8:	ldr	x4, [sp, #24]
    2edc:	ldr	x3, [sp, #24]
    2ee0:	adrp	x0, 2000 <ffi_prep_java_raw_closure_loc@plt+0x2f0>
    2ee4:	add	x2, x0, #0xe20
    2ee8:	ldr	x1, [sp, #48]
    2eec:	ldr	x0, [sp, #56]
    2ef0:	bl	1a70 <ffi_prep_closure_loc@plt>
    2ef4:	str	w0, [sp, #76]
    2ef8:	ldr	w0, [sp, #76]
    2efc:	cmp	w0, #0x0
    2f00:	b.ne	2f1c <ffi_prep_java_raw_closure_loc@@LIBFFI_CLOSURE_7.0+0x60>  // b.any
    2f04:	ldr	x0, [sp, #56]
    2f08:	ldr	x1, [sp, #40]
    2f0c:	str	x1, [x0, #48]
    2f10:	ldr	x0, [sp, #56]
    2f14:	ldr	x1, [sp, #32]
    2f18:	str	x1, [x0, #56]
    2f1c:	ldr	w0, [sp, #76]
    2f20:	ldp	x29, x30, [sp], #80
    2f24:	ret

0000000000002f28 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0>:
    2f28:	stp	x29, x30, [sp, #-48]!
    2f2c:	mov	x29, sp
    2f30:	str	x0, [sp, #40]
    2f34:	str	x1, [sp, #32]
    2f38:	str	x2, [sp, #24]
    2f3c:	str	x3, [sp, #16]
    2f40:	ldr	x4, [sp, #40]
    2f44:	ldr	x3, [sp, #16]
    2f48:	ldr	x2, [sp, #24]
    2f4c:	ldr	x1, [sp, #32]
    2f50:	ldr	x0, [sp, #40]
    2f54:	bl	1d10 <ffi_prep_java_raw_closure_loc@plt>
    2f58:	ldp	x29, x30, [sp], #48
    2f5c:	ret
    2f60:	stp	x29, x30, [sp, #-176]!
    2f64:	mov	x29, sp
    2f68:	str	xzr, [sp, #32]
    2f6c:	str	xzr, [sp, #24]
    2f70:	add	x0, sp, #0x28
    2f74:	mov	x1, x0
    2f78:	adrp	x0, c000 <ffi_type_sint8@@LIBFFI_BASE_7.0>
    2f7c:	add	x0, x0, #0x108
    2f80:	bl	1ab0 <statfs@plt>
    2f84:	cmp	w0, #0x0
    2f88:	b.lt	2fac <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x84>  // b.tstop
    2f8c:	ldr	x0, [sp, #40]
    2f90:	mov	w1, w0
    2f94:	mov	w0, #0xff8c                	// #65420
    2f98:	movk	w0, #0xf97c, lsl #16
    2f9c:	cmp	w1, w0
    2fa0:	b.ne	2fac <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x84>  // b.any
    2fa4:	mov	w0, #0x1                   	// #1
    2fa8:	b	308c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x164>
    2fac:	adrp	x0, c000 <ffi_type_sint8@@LIBFFI_BASE_7.0>
    2fb0:	add	x1, x0, #0x118
    2fb4:	adrp	x0, c000 <ffi_type_sint8@@LIBFFI_BASE_7.0>
    2fb8:	add	x0, x0, #0x120
    2fbc:	bl	1ad0 <fopen@plt>
    2fc0:	str	x0, [sp, #168]
    2fc4:	ldr	x0, [sp, #168]
    2fc8:	cmp	x0, #0x0
    2fcc:	b.ne	3050 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x128>  // b.any
    2fd0:	mov	w0, #0x0                   	// #0
    2fd4:	b	308c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x164>
    2fd8:	ldr	x0, [sp, #32]
    2fdc:	mov	w1, #0x20                  	// #32
    2fe0:	bl	1c30 <strchr@plt>
    2fe4:	str	x0, [sp, #160]
    2fe8:	ldr	x0, [sp, #160]
    2fec:	cmp	x0, #0x0
    2ff0:	b.eq	306c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x144>  // b.none
    2ff4:	ldr	x0, [sp, #160]
    2ff8:	add	x0, x0, #0x1
    2ffc:	mov	w1, #0x20                  	// #32
    3000:	bl	1c30 <strchr@plt>
    3004:	str	x0, [sp, #160]
    3008:	ldr	x0, [sp, #160]
    300c:	cmp	x0, #0x0
    3010:	b.eq	3074 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x14c>  // b.none
    3014:	ldr	x0, [sp, #160]
    3018:	add	x3, x0, #0x1
    301c:	mov	x2, #0xa                   	// #10
    3020:	adrp	x0, c000 <ffi_type_sint8@@LIBFFI_BASE_7.0>
    3024:	add	x1, x0, #0x130
    3028:	mov	x0, x3
    302c:	bl	1af0 <strncmp@plt>
    3030:	cmp	w0, #0x0
    3034:	b.ne	3050 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x128>  // b.any
    3038:	ldr	x0, [sp, #32]
    303c:	bl	1be0 <free@plt>
    3040:	ldr	x0, [sp, #168]
    3044:	bl	1ac0 <fclose@plt>
    3048:	mov	w0, #0x1                   	// #1
    304c:	b	308c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x164>
    3050:	add	x1, sp, #0x18
    3054:	add	x0, sp, #0x20
    3058:	ldr	x2, [sp, #168]
    305c:	bl	1bd0 <getline@plt>
    3060:	cmp	x0, #0x0
    3064:	b.ge	2fd8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0xb0>  // b.tcont
    3068:	b	3078 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x150>
    306c:	nop
    3070:	b	3078 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x150>
    3074:	nop
    3078:	ldr	x0, [sp, #32]
    307c:	bl	1be0 <free@plt>
    3080:	ldr	x0, [sp, #168]
    3084:	bl	1ac0 <fclose@plt>
    3088:	mov	w0, #0x0                   	// #0
    308c:	ldp	x29, x30, [sp], #176
    3090:	ret
    3094:	sub	sp, sp, #0x20
    3098:	str	x0, [sp, #8]
    309c:	str	x1, [sp]
    30a0:	ldr	x0, [sp, #8]
    30a4:	add	x0, x0, #0x398
    30a8:	str	x0, [sp, #24]
    30ac:	ldr	x0, [sp, #24]
    30b0:	ldr	x0, [x0]
    30b4:	ldr	x1, [sp]
    30b8:	cmp	x1, x0
    30bc:	b.cc	30e8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1c0>  // b.lo, b.ul, b.last
    30c0:	ldr	x0, [sp, #24]
    30c4:	ldr	x1, [x0]
    30c8:	ldr	x0, [sp, #24]
    30cc:	ldr	x0, [x0, #8]
    30d0:	add	x0, x1, x0
    30d4:	ldr	x1, [sp]
    30d8:	cmp	x1, x0
    30dc:	b.cs	30e8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1c0>  // b.hs, b.nlast
    30e0:	ldr	x0, [sp, #24]
    30e4:	b	3104 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1dc>
    30e8:	ldr	x0, [sp, #24]
    30ec:	ldr	x0, [x0, #16]
    30f0:	str	x0, [sp, #24]
    30f4:	ldr	x0, [sp, #24]
    30f8:	cmp	x0, #0x0
    30fc:	b.ne	30ac <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x184>  // b.any
    3100:	mov	x0, #0x0                   	// #0
    3104:	add	sp, sp, #0x20
    3108:	ret
    310c:	sub	sp, sp, #0x20
    3110:	str	x0, [sp, #8]
    3114:	str	x1, [sp]
    3118:	ldr	x0, [sp, #8]
    311c:	add	x0, x0, #0x398
    3120:	str	x0, [sp, #24]
    3124:	ldr	x0, [sp]
    3128:	ldr	x0, [x0]
    312c:	ldr	x1, [sp, #24]
    3130:	cmp	x1, x0
    3134:	b.cc	3160 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x238>  // b.lo, b.ul, b.last
    3138:	ldr	x0, [sp]
    313c:	ldr	x1, [x0]
    3140:	ldr	x0, [sp]
    3144:	ldr	x0, [x0, #8]
    3148:	add	x0, x1, x0
    314c:	ldr	x1, [sp, #24]
    3150:	cmp	x1, x0
    3154:	b.cs	3160 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x238>  // b.hs, b.nlast
    3158:	mov	w0, #0x1                   	// #1
    315c:	b	317c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x254>
    3160:	ldr	x0, [sp, #24]
    3164:	ldr	x0, [x0, #16]
    3168:	str	x0, [sp, #24]
    316c:	ldr	x0, [sp, #24]
    3170:	cmp	x0, #0x0
    3174:	b.ne	3124 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1fc>  // b.any
    3178:	mov	w0, #0x0                   	// #0
    317c:	add	sp, sp, #0x20
    3180:	ret
    3184:	stp	x29, x30, [sp, #-32]!
    3188:	mov	x29, sp
    318c:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    3190:	add	x0, x0, #0x280
    3194:	ldr	x0, [x0, #8]
    3198:	cmp	x0, #0x0
    319c:	b.ne	32e0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3b8>  // b.any
    31a0:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    31a4:	add	x0, x0, #0x280
    31a8:	mov	x1, #0xffffffffffffffff    	// #-1
    31ac:	str	x1, [x0, #24]
    31b0:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    31b4:	add	x0, x0, #0x280
    31b8:	mov	x1, #0x200000              	// #2097152
    31bc:	str	x1, [x0, #32]
    31c0:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    31c4:	add	x0, x0, #0x280
    31c8:	mov	w1, #0x7                   	// #7
    31cc:	str	w1, [x0, #40]
    31d0:	mov	x0, #0x5858                	// #22616
    31d4:	movk	x0, #0x5858, lsl #16
    31d8:	str	x0, [sp, #24]
    31dc:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    31e0:	add	x0, x0, #0x250
    31e4:	bl	1cd0 <pthread_mutex_lock@plt>
    31e8:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    31ec:	add	x0, x0, #0x280
    31f0:	ldr	x0, [x0]
    31f4:	cmp	x0, #0x0
    31f8:	b.ne	3234 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x30c>  // b.any
    31fc:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    3200:	add	x0, x0, #0x280
    3204:	ldr	x1, [sp, #24]
    3208:	str	x1, [x0]
    320c:	mov	x1, #0x0                   	// #0
    3210:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    3214:	add	x0, x0, #0x618
    3218:	bl	1b50 <pthread_mutex_init@plt>
    321c:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    3220:	add	x0, x0, #0x280
    3224:	ldr	w1, [x0, #40]
    3228:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    322c:	add	x0, x0, #0x2b0
    3230:	str	w1, [x0, #864]
    3234:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    3238:	add	x0, x0, #0x250
    323c:	bl	1ce0 <pthread_mutex_unlock@plt>
    3240:	mov	w0, #0x1e                  	// #30
    3244:	bl	1c60 <sysconf@plt>
    3248:	mov	x1, x0
    324c:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    3250:	add	x0, x0, #0x280
    3254:	str	x1, [x0, #8]
    3258:	mov	w0, #0x1e                  	// #30
    325c:	bl	1c60 <sysconf@plt>
    3260:	cmp	x0, #0x0
    3264:	b.eq	3274 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x34c>  // b.none
    3268:	mov	w0, #0x1e                  	// #30
    326c:	bl	1c60 <sysconf@plt>
    3270:	b	3280 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x358>
    3274:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    3278:	add	x0, x0, #0x280
    327c:	ldr	x0, [x0, #8]
    3280:	adrp	x1, 1e000 <memcpy@GLIBC_2.17>
    3284:	add	x1, x1, #0x280
    3288:	str	x0, [x1, #16]
    328c:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    3290:	add	x0, x0, #0x280
    3294:	ldr	x1, [x0, #16]
    3298:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    329c:	add	x0, x0, #0x280
    32a0:	ldr	x0, [x0, #16]
    32a4:	sub	x0, x0, #0x1
    32a8:	and	x0, x1, x0
    32ac:	cmp	x0, #0x0
    32b0:	b.ne	32dc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3b4>  // b.any
    32b4:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    32b8:	add	x0, x0, #0x280
    32bc:	ldr	x1, [x0, #8]
    32c0:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    32c4:	add	x0, x0, #0x280
    32c8:	ldr	x0, [x0, #8]
    32cc:	sub	x0, x0, #0x1
    32d0:	and	x0, x1, x0
    32d4:	cmp	x0, #0x0
    32d8:	b.eq	32e0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3b8>  // b.none
    32dc:	bl	1b90 <abort@plt>
    32e0:	mov	w0, #0x0                   	// #0
    32e4:	ldp	x29, x30, [sp], #32
    32e8:	ret
    32ec:	stp	x29, x30, [sp, #-48]!
    32f0:	mov	x29, sp
    32f4:	str	w0, [sp, #28]
    32f8:	str	w1, [sp, #24]
    32fc:	ldrsw	x0, [sp, #24]
    3300:	str	x0, [sp, #40]
    3304:	bl	3184 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x25c>
    3308:	ldr	w0, [sp, #28]
    330c:	cmn	w0, #0x1
    3310:	b.eq	333c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x414>  // b.none
    3314:	ldr	w0, [sp, #28]
    3318:	cmp	w0, #0x0
    331c:	b.ge	33bc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x494>  // b.tcont
    3320:	ldr	w0, [sp, #28]
    3324:	cmn	w0, #0x3
    3328:	b.eq	33a4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x47c>  // b.none
    332c:	ldr	w0, [sp, #28]
    3330:	cmn	w0, #0x2
    3334:	b.eq	3354 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x42c>  // b.none
    3338:	b	33bc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x494>
    333c:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    3340:	add	x0, x0, #0x280
    3344:	ldr	x1, [sp, #40]
    3348:	str	x1, [x0, #32]
    334c:	mov	w0, #0x1                   	// #1
    3350:	b	33c0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x498>
    3354:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    3358:	add	x0, x0, #0x280
    335c:	ldr	x0, [x0, #8]
    3360:	ldr	x1, [sp, #40]
    3364:	cmp	x1, x0
    3368:	b.cc	339c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x474>  // b.lo, b.ul, b.last
    336c:	ldr	x0, [sp, #40]
    3370:	sub	x1, x0, #0x1
    3374:	ldr	x0, [sp, #40]
    3378:	and	x0, x1, x0
    337c:	cmp	x0, #0x0
    3380:	b.ne	339c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x474>  // b.any
    3384:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    3388:	add	x0, x0, #0x280
    338c:	ldr	x1, [sp, #40]
    3390:	str	x1, [x0, #16]
    3394:	mov	w0, #0x1                   	// #1
    3398:	b	33c0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x498>
    339c:	mov	w0, #0x0                   	// #0
    33a0:	b	33c0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x498>
    33a4:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    33a8:	add	x0, x0, #0x280
    33ac:	ldr	x1, [sp, #40]
    33b0:	str	x1, [x0, #24]
    33b4:	mov	w0, #0x1                   	// #1
    33b8:	b	33c0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x498>
    33bc:	mov	w0, #0x0                   	// #0
    33c0:	ldp	x29, x30, [sp], #48
    33c4:	ret
    33c8:	stp	x29, x30, [sp, #-80]!
    33cc:	mov	x29, sp
    33d0:	str	x0, [sp, #24]
    33d4:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    33d8:	add	x0, x0, #0x280
    33dc:	ldr	x0, [x0, #8]
    33e0:	cmp	x0, #0x0
    33e4:	b.ne	33f4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4cc>  // b.any
    33e8:	bl	3184 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x25c>
    33ec:	cmp	w0, #0x0
    33f0:	b.ne	3408 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4e0>  // b.any
    33f4:	ldr	x0, [sp, #24]
    33f8:	ldr	w0, [x0, #864]
    33fc:	and	w0, w0, #0x2
    3400:	cmp	w0, #0x0
    3404:	b.eq	341c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4f4>  // b.none
    3408:	ldr	x0, [sp, #24]
    340c:	add	x0, x0, #0x368
    3410:	bl	1cd0 <pthread_mutex_lock@plt>
    3414:	cmp	w0, #0x0
    3418:	b.ne	35f4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6cc>  // b.any
    341c:	str	xzr, [sp, #72]
    3420:	str	xzr, [sp, #64]
    3424:	str	xzr, [sp, #56]
    3428:	ldr	x0, [sp, #24]
    342c:	ldr	x0, [x0, #40]
    3430:	cmp	x0, #0x0
    3434:	b.eq	3574 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x64c>  // b.none
    3438:	ldr	x0, [sp, #24]
    343c:	add	x0, x0, #0x398
    3440:	str	x0, [sp, #48]
    3444:	ldr	x0, [sp, #24]
    3448:	ldr	x0, [x0, #856]
    344c:	str	x0, [sp, #72]
    3450:	ldr	x0, [sp, #24]
    3454:	ldr	x0, [x0, #848]
    3458:	str	x0, [sp, #64]
    345c:	ldr	x0, [sp, #24]
    3460:	ldr	x0, [x0, #16]
    3464:	ldr	x1, [sp, #64]
    3468:	sub	x0, x1, x0
    346c:	sub	x0, x0, #0x48
    3470:	str	x0, [sp, #56]
    3474:	b	3568 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x640>
    3478:	ldr	x0, [sp, #48]
    347c:	ldr	x1, [x0]
    3480:	ldr	x0, [sp, #48]
    3484:	ldr	x0, [x0]
    3488:	add	x0, x0, #0x10
    348c:	and	x0, x0, #0x7
    3490:	cmp	x0, #0x0
    3494:	b.eq	34b0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x588>  // b.none
    3498:	ldr	x0, [sp, #48]
    349c:	ldr	x0, [x0]
    34a0:	add	x0, x0, #0x10
    34a4:	neg	x0, x0
    34a8:	and	x0, x0, #0x7
    34ac:	b	34b4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x58c>
    34b0:	mov	x0, #0x0                   	// #0
    34b4:	add	x0, x1, x0
    34b8:	str	x0, [sp, #40]
    34bc:	b	3504 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5dc>
    34c0:	ldr	x0, [sp, #40]
    34c4:	ldr	x0, [x0, #8]
    34c8:	and	x0, x0, #0x2
    34cc:	cmp	x0, #0x0
    34d0:	b.ne	34ec <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5c4>  // b.any
    34d4:	ldr	x0, [sp, #40]
    34d8:	ldr	x0, [x0, #8]
    34dc:	and	x0, x0, #0xfffffffffffffffc
    34e0:	ldr	x1, [sp, #56]
    34e4:	sub	x0, x1, x0
    34e8:	str	x0, [sp, #56]
    34ec:	ldr	x0, [sp, #40]
    34f0:	ldr	x0, [x0, #8]
    34f4:	and	x0, x0, #0xfffffffffffffffc
    34f8:	ldr	x1, [sp, #40]
    34fc:	add	x0, x1, x0
    3500:	str	x0, [sp, #40]
    3504:	ldr	x0, [sp, #48]
    3508:	ldr	x0, [x0]
    350c:	ldr	x1, [sp, #40]
    3510:	cmp	x1, x0
    3514:	b.cc	355c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x634>  // b.lo, b.ul, b.last
    3518:	ldr	x0, [sp, #48]
    351c:	ldr	x1, [x0]
    3520:	ldr	x0, [sp, #48]
    3524:	ldr	x0, [x0, #8]
    3528:	add	x0, x1, x0
    352c:	ldr	x1, [sp, #40]
    3530:	cmp	x1, x0
    3534:	b.cs	355c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x634>  // b.hs, b.nlast
    3538:	ldr	x0, [sp, #24]
    353c:	ldr	x0, [x0, #40]
    3540:	ldr	x1, [sp, #40]
    3544:	cmp	x1, x0
    3548:	b.eq	355c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x634>  // b.none
    354c:	ldr	x0, [sp, #40]
    3550:	ldr	x0, [x0, #8]
    3554:	cmp	x0, #0xb
    3558:	b.ne	34c0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x598>  // b.any
    355c:	ldr	x0, [sp, #48]
    3560:	ldr	x0, [x0, #16]
    3564:	str	x0, [sp, #48]
    3568:	ldr	x0, [sp, #48]
    356c:	cmp	x0, #0x0
    3570:	b.ne	3478 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x550>  // b.any
    3574:	adrp	x0, 1d000 <ffi_type_longdouble@@LIBFFI_BASE_7.0+0x10f10>
    3578:	ldr	x0, [x0, #4048]
    357c:	ldr	x3, [x0]
    3580:	ldr	x2, [sp, #72]
    3584:	adrp	x0, c000 <ffi_type_sint8@@LIBFFI_BASE_7.0>
    3588:	add	x1, x0, #0x140
    358c:	mov	x0, x3
    3590:	bl	1d00 <fprintf@plt>
    3594:	adrp	x0, 1d000 <ffi_type_longdouble@@LIBFFI_BASE_7.0+0x10f10>
    3598:	ldr	x0, [x0, #4048]
    359c:	ldr	x3, [x0]
    35a0:	ldr	x2, [sp, #64]
    35a4:	adrp	x0, c000 <ffi_type_sint8@@LIBFFI_BASE_7.0>
    35a8:	add	x1, x0, #0x160
    35ac:	mov	x0, x3
    35b0:	bl	1d00 <fprintf@plt>
    35b4:	adrp	x0, 1d000 <ffi_type_longdouble@@LIBFFI_BASE_7.0+0x10f10>
    35b8:	ldr	x0, [x0, #4048]
    35bc:	ldr	x3, [x0]
    35c0:	ldr	x2, [sp, #56]
    35c4:	adrp	x0, c000 <ffi_type_sint8@@LIBFFI_BASE_7.0>
    35c8:	add	x1, x0, #0x180
    35cc:	mov	x0, x3
    35d0:	bl	1d00 <fprintf@plt>
    35d4:	ldr	x0, [sp, #24]
    35d8:	ldr	w0, [x0, #864]
    35dc:	and	w0, w0, #0x2
    35e0:	cmp	w0, #0x0
    35e4:	b.eq	35f4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6cc>  // b.none
    35e8:	ldr	x0, [sp, #24]
    35ec:	add	x0, x0, #0x368
    35f0:	bl	1ce0 <pthread_mutex_unlock@plt>
    35f4:	nop
    35f8:	ldp	x29, x30, [sp], #80
    35fc:	ret
    3600:	stp	x29, x30, [sp, #-80]!
    3604:	mov	x29, sp
    3608:	str	x0, [sp, #24]
    360c:	str	x1, [sp, #16]
    3610:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    3614:	add	x0, x0, #0x280
    3618:	ldr	x1, [x0, #16]
    361c:	ldr	x0, [sp, #16]
    3620:	add	x0, x1, x0
    3624:	add	x1, x0, #0x37
    3628:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    362c:	add	x0, x0, #0x280
    3630:	ldr	x0, [x0, #16]
    3634:	neg	x0, x0
    3638:	and	x0, x1, x0
    363c:	str	x0, [sp, #72]
    3640:	ldr	x1, [sp, #72]
    3644:	ldr	x0, [sp, #16]
    3648:	cmp	x1, x0
    364c:	b.ls	3784 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x85c>  // b.plast
    3650:	mov	x5, #0x0                   	// #0
    3654:	mov	w4, #0xffffffff            	// #-1
    3658:	mov	w3, #0x22                  	// #34
    365c:	mov	w2, #0x3                   	// #3
    3660:	ldr	x1, [sp, #72]
    3664:	mov	x0, #0x0                   	// #0
    3668:	bl	a1fc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x72d4>
    366c:	str	x0, [sp, #64]
    3670:	ldr	x0, [sp, #64]
    3674:	cmn	x0, #0x1
    3678:	b.eq	3784 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x85c>  // b.none
    367c:	ldr	x0, [sp, #64]
    3680:	add	x0, x0, #0x10
    3684:	and	x0, x0, #0x7
    3688:	cmp	x0, #0x0
    368c:	b.eq	36a4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x77c>  // b.none
    3690:	ldr	x0, [sp, #64]
    3694:	add	x0, x0, #0x10
    3698:	neg	x0, x0
    369c:	and	x0, x0, #0x7
    36a0:	b	36a8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x780>
    36a4:	mov	x0, #0x0                   	// #0
    36a8:	str	x0, [sp, #56]
    36ac:	ldr	x1, [sp, #72]
    36b0:	ldr	x0, [sp, #56]
    36b4:	sub	x0, x1, x0
    36b8:	sub	x0, x0, #0x20
    36bc:	str	x0, [sp, #48]
    36c0:	ldr	x1, [sp, #64]
    36c4:	ldr	x0, [sp, #56]
    36c8:	add	x0, x1, x0
    36cc:	str	x0, [sp, #40]
    36d0:	ldr	x0, [sp, #56]
    36d4:	orr	x1, x0, #0x1
    36d8:	ldr	x0, [sp, #40]
    36dc:	str	x1, [x0]
    36e0:	ldr	x0, [sp, #48]
    36e4:	orr	x1, x0, #0x2
    36e8:	ldr	x0, [sp, #40]
    36ec:	str	x1, [x0, #8]
    36f0:	ldr	x1, [sp, #40]
    36f4:	ldr	x0, [sp, #48]
    36f8:	add	x0, x1, x0
    36fc:	mov	x1, #0xb                   	// #11
    3700:	str	x1, [x0, #8]
    3704:	ldr	x0, [sp, #48]
    3708:	add	x0, x0, #0x8
    370c:	ldr	x1, [sp, #40]
    3710:	add	x0, x1, x0
    3714:	str	xzr, [x0, #8]
    3718:	ldr	x0, [sp, #24]
    371c:	ldr	x0, [x0, #24]
    3720:	ldr	x1, [sp, #64]
    3724:	cmp	x1, x0
    3728:	b.cs	3738 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x810>  // b.hs, b.nlast
    372c:	ldr	x0, [sp, #24]
    3730:	ldr	x1, [sp, #64]
    3734:	str	x1, [x0, #24]
    3738:	ldr	x0, [sp, #24]
    373c:	ldr	x1, [x0, #848]
    3740:	ldr	x0, [sp, #72]
    3744:	add	x1, x1, x0
    3748:	ldr	x0, [sp, #24]
    374c:	str	x1, [x0, #848]
    3750:	ldr	x0, [sp, #24]
    3754:	ldr	x1, [x0, #848]
    3758:	ldr	x0, [sp, #24]
    375c:	ldr	x0, [x0, #856]
    3760:	cmp	x1, x0
    3764:	b.ls	3778 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x850>  // b.plast
    3768:	ldr	x0, [sp, #24]
    376c:	ldr	x1, [x0, #848]
    3770:	ldr	x0, [sp, #24]
    3774:	str	x1, [x0, #856]
    3778:	ldr	x0, [sp, #40]
    377c:	add	x0, x0, #0x10
    3780:	b	3788 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x860>
    3784:	mov	x0, #0x0                   	// #0
    3788:	ldp	x29, x30, [sp], #80
    378c:	ret
    3790:	sub	sp, sp, #0x60
    3794:	str	x0, [sp, #24]
    3798:	str	x1, [sp, #16]
    379c:	str	x2, [sp, #8]
    37a0:	ldr	x0, [sp, #16]
    37a4:	ldr	x0, [x0, #8]
    37a8:	and	x0, x0, #0xfffffffffffffffc
    37ac:	str	x0, [sp, #88]
    37b0:	ldr	x0, [sp, #8]
    37b4:	lsr	x0, x0, #3
    37b8:	cmp	x0, #0x1f
    37bc:	b.hi	37c8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x8a0>  // b.pmore
    37c0:	mov	x0, #0x0                   	// #0
    37c4:	b	3940 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0xa18>
    37c8:	ldr	x0, [sp, #8]
    37cc:	add	x0, x0, #0x8
    37d0:	ldr	x1, [sp, #88]
    37d4:	cmp	x1, x0
    37d8:	b.cc	3808 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x8e0>  // b.lo, b.ul, b.last
    37dc:	ldr	x1, [sp, #88]
    37e0:	ldr	x0, [sp, #8]
    37e4:	sub	x1, x1, x0
    37e8:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    37ec:	add	x0, x0, #0x280
    37f0:	ldr	x0, [x0, #16]
    37f4:	lsl	x0, x0, #1
    37f8:	cmp	x1, x0
    37fc:	b.hi	3808 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x8e0>  // b.pmore
    3800:	ldr	x0, [sp, #16]
    3804:	b	3940 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0xa18>
    3808:	ldr	x0, [sp, #16]
    380c:	ldr	x0, [x0]
    3810:	and	x0, x0, #0xfffffffffffffffe
    3814:	str	x0, [sp, #80]
    3818:	ldr	x1, [sp, #88]
    381c:	ldr	x0, [sp, #80]
    3820:	add	x0, x1, x0
    3824:	add	x0, x0, #0x20
    3828:	str	x0, [sp, #72]
    382c:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    3830:	add	x0, x0, #0x280
    3834:	ldr	x1, [x0, #16]
    3838:	ldr	x0, [sp, #8]
    383c:	add	x0, x1, x0
    3840:	add	x1, x0, #0x37
    3844:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    3848:	add	x0, x0, #0x280
    384c:	ldr	x0, [x0, #16]
    3850:	neg	x0, x0
    3854:	and	x0, x1, x0
    3858:	str	x0, [sp, #64]
    385c:	mov	x0, #0xffffffffffffffff    	// #-1
    3860:	str	x0, [sp, #56]
    3864:	ldr	x0, [sp, #56]
    3868:	cmn	x0, #0x1
    386c:	b.eq	393c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0xa14>  // b.none
    3870:	ldr	x1, [sp, #56]
    3874:	ldr	x0, [sp, #80]
    3878:	add	x0, x1, x0
    387c:	str	x0, [sp, #48]
    3880:	ldr	x1, [sp, #64]
    3884:	ldr	x0, [sp, #80]
    3888:	sub	x0, x1, x0
    388c:	sub	x0, x0, #0x20
    3890:	str	x0, [sp, #40]
    3894:	ldr	x0, [sp, #40]
    3898:	orr	x1, x0, #0x2
    389c:	ldr	x0, [sp, #48]
    38a0:	str	x1, [x0, #8]
    38a4:	ldr	x1, [sp, #48]
    38a8:	ldr	x0, [sp, #40]
    38ac:	add	x0, x1, x0
    38b0:	mov	x1, #0xb                   	// #11
    38b4:	str	x1, [x0, #8]
    38b8:	ldr	x0, [sp, #40]
    38bc:	add	x0, x0, #0x8
    38c0:	ldr	x1, [sp, #48]
    38c4:	add	x0, x1, x0
    38c8:	str	xzr, [x0, #8]
    38cc:	ldr	x0, [sp, #24]
    38d0:	ldr	x0, [x0, #24]
    38d4:	ldr	x1, [sp, #56]
    38d8:	cmp	x1, x0
    38dc:	b.cs	38ec <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x9c4>  // b.hs, b.nlast
    38e0:	ldr	x0, [sp, #24]
    38e4:	ldr	x1, [sp, #56]
    38e8:	str	x1, [x0, #24]
    38ec:	ldr	x0, [sp, #24]
    38f0:	ldr	x1, [x0, #848]
    38f4:	ldr	x2, [sp, #64]
    38f8:	ldr	x0, [sp, #72]
    38fc:	sub	x0, x2, x0
    3900:	add	x1, x1, x0
    3904:	ldr	x0, [sp, #24]
    3908:	str	x1, [x0, #848]
    390c:	ldr	x0, [sp, #24]
    3910:	ldr	x1, [x0, #848]
    3914:	ldr	x0, [sp, #24]
    3918:	ldr	x0, [x0, #856]
    391c:	cmp	x1, x0
    3920:	b.ls	3934 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0xa0c>  // b.plast
    3924:	ldr	x0, [sp, #24]
    3928:	ldr	x1, [x0, #848]
    392c:	ldr	x0, [sp, #24]
    3930:	str	x1, [x0, #856]
    3934:	ldr	x0, [sp, #48]
    3938:	b	3940 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0xa18>
    393c:	mov	x0, #0x0                   	// #0
    3940:	add	sp, sp, #0x60
    3944:	ret
    3948:	sub	sp, sp, #0x30
    394c:	str	x0, [sp, #24]
    3950:	str	x1, [sp, #16]
    3954:	str	x2, [sp, #8]
    3958:	ldr	x0, [sp, #16]
    395c:	add	x0, x0, #0x10
    3960:	and	x0, x0, #0x7
    3964:	cmp	x0, #0x0
    3968:	b.eq	3980 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0xa58>  // b.none
    396c:	ldr	x0, [sp, #16]
    3970:	add	x0, x0, #0x10
    3974:	neg	x0, x0
    3978:	and	x0, x0, #0x7
    397c:	b	3984 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0xa5c>
    3980:	mov	x0, #0x0                   	// #0
    3984:	str	x0, [sp, #40]
    3988:	ldr	x1, [sp, #16]
    398c:	ldr	x0, [sp, #40]
    3990:	add	x0, x1, x0
    3994:	str	x0, [sp, #16]
    3998:	ldr	x1, [sp, #8]
    399c:	ldr	x0, [sp, #40]
    39a0:	sub	x0, x1, x0
    39a4:	str	x0, [sp, #8]
    39a8:	ldr	x0, [sp, #24]
    39ac:	ldr	x1, [sp, #16]
    39b0:	str	x1, [x0, #40]
    39b4:	ldr	x0, [sp, #24]
    39b8:	ldr	x1, [sp, #8]
    39bc:	str	x1, [x0, #16]
    39c0:	ldr	x0, [sp, #8]
    39c4:	orr	x1, x0, #0x1
    39c8:	ldr	x0, [sp, #16]
    39cc:	str	x1, [x0, #8]
    39d0:	ldr	x1, [sp, #16]
    39d4:	ldr	x0, [sp, #8]
    39d8:	add	x0, x1, x0
    39dc:	mov	x1, #0x48                  	// #72
    39e0:	str	x1, [x0, #8]
    39e4:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    39e8:	add	x0, x0, #0x280
    39ec:	ldr	x1, [x0, #32]
    39f0:	ldr	x0, [sp, #24]
    39f4:	str	x1, [x0, #48]
    39f8:	nop
    39fc:	add	sp, sp, #0x30
    3a00:	ret
    3a04:	sub	sp, sp, #0x20
    3a08:	str	x0, [sp, #8]
    3a0c:	str	xzr, [sp, #24]
    3a10:	b	3a58 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0xb30>
    3a14:	ldr	x0, [sp, #24]
    3a18:	lsl	x0, x0, #1
    3a1c:	add	x0, x0, #0x8
    3a20:	lsl	x0, x0, #3
    3a24:	ldr	x1, [sp, #8]
    3a28:	add	x0, x1, x0
    3a2c:	str	x0, [sp, #16]
    3a30:	ldr	x0, [sp, #16]
    3a34:	ldr	x1, [sp, #16]
    3a38:	str	x1, [x0, #24]
    3a3c:	ldr	x0, [sp, #16]
    3a40:	ldr	x1, [x0, #24]
    3a44:	ldr	x0, [sp, #16]
    3a48:	str	x1, [x0, #16]
    3a4c:	ldr	x0, [sp, #24]
    3a50:	add	x0, x0, #0x1
    3a54:	str	x0, [sp, #24]
    3a58:	ldr	x0, [sp, #24]
    3a5c:	cmp	x0, #0x1f
    3a60:	b.ls	3a14 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0xaec>  // b.plast
    3a64:	nop
    3a68:	nop
    3a6c:	add	sp, sp, #0x20
    3a70:	ret
    3a74:	stp	x29, x30, [sp, #-320]!
    3a78:	mov	x29, sp
    3a7c:	str	x0, [sp, #40]
    3a80:	str	x1, [sp, #32]
    3a84:	str	x2, [sp, #24]
    3a88:	str	x3, [sp, #16]
    3a8c:	ldr	x0, [sp, #32]
    3a90:	add	x0, x0, #0x10
    3a94:	and	x0, x0, #0x7
    3a98:	cmp	x0, #0x0
    3a9c:	b.eq	3ab4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0xb8c>  // b.none
    3aa0:	ldr	x0, [sp, #32]
    3aa4:	add	x0, x0, #0x10
    3aa8:	neg	x0, x0
    3aac:	and	x0, x0, #0x7
    3ab0:	b	3ab8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0xb90>
    3ab4:	mov	x0, #0x0                   	// #0
    3ab8:	ldr	x1, [sp, #32]
    3abc:	add	x0, x1, x0
    3ac0:	str	x0, [sp, #240]
    3ac4:	ldr	x0, [sp, #24]
    3ac8:	add	x0, x0, #0x10
    3acc:	and	x0, x0, #0x7
    3ad0:	cmp	x0, #0x0
    3ad4:	b.eq	3aec <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0xbc4>  // b.none
    3ad8:	ldr	x0, [sp, #24]
    3adc:	add	x0, x0, #0x10
    3ae0:	neg	x0, x0
    3ae4:	and	x0, x0, #0x7
    3ae8:	b	3af0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0xbc8>
    3aec:	mov	x0, #0x0                   	// #0
    3af0:	ldr	x1, [sp, #24]
    3af4:	add	x0, x1, x0
    3af8:	str	x0, [sp, #312]
    3afc:	ldr	x1, [sp, #312]
    3b00:	ldr	x0, [sp, #240]
    3b04:	sub	x0, x1, x0
    3b08:	str	x0, [sp, #232]
    3b0c:	ldr	x1, [sp, #240]
    3b10:	ldr	x0, [sp, #16]
    3b14:	add	x0, x1, x0
    3b18:	str	x0, [sp, #224]
    3b1c:	ldr	x1, [sp, #232]
    3b20:	ldr	x0, [sp, #16]
    3b24:	sub	x0, x1, x0
    3b28:	str	x0, [sp, #304]
    3b2c:	ldr	x0, [sp, #16]
    3b30:	orr	x1, x0, #0x3
    3b34:	ldr	x0, [sp, #240]
    3b38:	str	x1, [x0, #8]
    3b3c:	ldr	x0, [sp, #40]
    3b40:	ldr	x0, [x0, #40]
    3b44:	ldr	x1, [sp, #312]
    3b48:	cmp	x1, x0
    3b4c:	b.ne	3b94 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0xc6c>  // b.any
    3b50:	ldr	x0, [sp, #40]
    3b54:	ldr	x1, [x0, #16]
    3b58:	ldr	x0, [sp, #304]
    3b5c:	add	x1, x1, x0
    3b60:	ldr	x0, [sp, #40]
    3b64:	str	x1, [x0, #16]
    3b68:	ldr	x0, [sp, #40]
    3b6c:	ldr	x0, [x0, #16]
    3b70:	str	x0, [sp, #56]
    3b74:	ldr	x0, [sp, #40]
    3b78:	ldr	x1, [sp, #224]
    3b7c:	str	x1, [x0, #40]
    3b80:	ldr	x0, [sp, #56]
    3b84:	orr	x1, x0, #0x1
    3b88:	ldr	x0, [sp, #224]
    3b8c:	str	x1, [x0, #8]
    3b90:	b	4578 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1650>
    3b94:	ldr	x0, [sp, #40]
    3b98:	ldr	x0, [x0, #32]
    3b9c:	ldr	x1, [sp, #312]
    3ba0:	cmp	x1, x0
    3ba4:	b.ne	3c00 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0xcd8>  // b.any
    3ba8:	ldr	x0, [sp, #40]
    3bac:	ldr	x1, [x0, #8]
    3bb0:	ldr	x0, [sp, #304]
    3bb4:	add	x1, x1, x0
    3bb8:	ldr	x0, [sp, #40]
    3bbc:	str	x1, [x0, #8]
    3bc0:	ldr	x0, [sp, #40]
    3bc4:	ldr	x0, [x0, #8]
    3bc8:	str	x0, [sp, #64]
    3bcc:	ldr	x0, [sp, #40]
    3bd0:	ldr	x1, [sp, #224]
    3bd4:	str	x1, [x0, #32]
    3bd8:	ldr	x0, [sp, #64]
    3bdc:	orr	x1, x0, #0x1
    3be0:	ldr	x0, [sp, #224]
    3be4:	str	x1, [x0, #8]
    3be8:	ldr	x1, [sp, #224]
    3bec:	ldr	x0, [sp, #64]
    3bf0:	add	x0, x1, x0
    3bf4:	ldr	x1, [sp, #64]
    3bf8:	str	x1, [x0]
    3bfc:	b	4578 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1650>
    3c00:	ldr	x0, [sp, #312]
    3c04:	ldr	x0, [x0, #8]
    3c08:	and	x0, x0, #0x2
    3c0c:	cmp	x0, #0x0
    3c10:	b.ne	40d8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x11b0>  // b.any
    3c14:	ldr	x0, [sp, #312]
    3c18:	ldr	x0, [x0, #8]
    3c1c:	and	x0, x0, #0xfffffffffffffffc
    3c20:	str	x0, [sp, #216]
    3c24:	ldr	x0, [sp, #216]
    3c28:	lsr	x0, x0, #3
    3c2c:	cmp	x0, #0x1f
    3c30:	b.hi	3d8c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0xe64>  // b.pmore
    3c34:	ldr	x0, [sp, #312]
    3c38:	ldr	x0, [x0, #16]
    3c3c:	str	x0, [sp, #160]
    3c40:	ldr	x0, [sp, #312]
    3c44:	ldr	x0, [x0, #24]
    3c48:	str	x0, [sp, #152]
    3c4c:	ldr	x0, [sp, #216]
    3c50:	lsr	x0, x0, #3
    3c54:	str	x0, [sp, #144]
    3c58:	ldr	x1, [sp, #160]
    3c5c:	ldr	x0, [sp, #152]
    3c60:	cmp	x1, x0
    3c64:	b.ne	3c94 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0xd6c>  // b.any
    3c68:	ldr	x0, [sp, #40]
    3c6c:	ldr	w1, [x0]
    3c70:	ldr	x0, [sp, #144]
    3c74:	mov	w2, w0
    3c78:	mov	w0, #0x1                   	// #1
    3c7c:	lsl	w0, w0, w2
    3c80:	mvn	w0, w0
    3c84:	and	w1, w1, w0
    3c88:	ldr	x0, [sp, #40]
    3c8c:	str	w1, [x0]
    3c90:	b	40b8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1190>
    3c94:	ldr	x0, [sp, #144]
    3c98:	lsl	x0, x0, #1
    3c9c:	add	x0, x0, #0x8
    3ca0:	lsl	x0, x0, #3
    3ca4:	ldr	x1, [sp, #40]
    3ca8:	add	x0, x1, x0
    3cac:	ldr	x1, [sp, #160]
    3cb0:	cmp	x1, x0
    3cb4:	cset	w0, eq  // eq = none
    3cb8:	and	w0, w0, #0xff
    3cbc:	and	x0, x0, #0xff
    3cc0:	cmp	x0, #0x0
    3cc4:	b.ne	3cec <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0xdc4>  // b.any
    3cc8:	ldr	x0, [sp, #40]
    3ccc:	ldr	x0, [x0, #24]
    3cd0:	ldr	x1, [sp, #160]
    3cd4:	cmp	x1, x0
    3cd8:	cset	w0, cs  // cs = hs, nlast
    3cdc:	and	w0, w0, #0xff
    3ce0:	and	x0, x0, #0xff
    3ce4:	cmp	x0, #0x0
    3ce8:	b.eq	3cf4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0xdcc>  // b.none
    3cec:	mov	w0, #0x1                   	// #1
    3cf0:	b	3cf8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0xdd0>
    3cf4:	mov	w0, #0x0                   	// #0
    3cf8:	cmp	w0, #0x0
    3cfc:	b.eq	3d88 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0xe60>  // b.none
    3d00:	ldr	x0, [sp, #144]
    3d04:	lsl	x0, x0, #1
    3d08:	add	x0, x0, #0x8
    3d0c:	lsl	x0, x0, #3
    3d10:	ldr	x1, [sp, #40]
    3d14:	add	x0, x1, x0
    3d18:	ldr	x1, [sp, #152]
    3d1c:	cmp	x1, x0
    3d20:	cset	w0, eq  // eq = none
    3d24:	and	w0, w0, #0xff
    3d28:	and	x0, x0, #0xff
    3d2c:	cmp	x0, #0x0
    3d30:	b.ne	3d58 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0xe30>  // b.any
    3d34:	ldr	x0, [sp, #40]
    3d38:	ldr	x0, [x0, #24]
    3d3c:	ldr	x1, [sp, #152]
    3d40:	cmp	x1, x0
    3d44:	cset	w0, cs  // cs = hs, nlast
    3d48:	and	w0, w0, #0xff
    3d4c:	and	x0, x0, #0xff
    3d50:	cmp	x0, #0x0
    3d54:	b.eq	3d60 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0xe38>  // b.none
    3d58:	mov	w0, #0x1                   	// #1
    3d5c:	b	3d64 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0xe3c>
    3d60:	mov	w0, #0x0                   	// #0
    3d64:	cmp	w0, #0x0
    3d68:	b.eq	3d88 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0xe60>  // b.none
    3d6c:	ldr	x0, [sp, #160]
    3d70:	ldr	x1, [sp, #152]
    3d74:	str	x1, [x0, #24]
    3d78:	ldr	x0, [sp, #152]
    3d7c:	ldr	x1, [sp, #160]
    3d80:	str	x1, [x0, #16]
    3d84:	b	40b8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1190>
    3d88:	bl	1b90 <abort@plt>
    3d8c:	ldr	x0, [sp, #312]
    3d90:	str	x0, [sp, #208]
    3d94:	ldr	x0, [sp, #208]
    3d98:	ldr	x0, [x0, #48]
    3d9c:	str	x0, [sp, #200]
    3da0:	ldr	x0, [sp, #208]
    3da4:	ldr	x0, [x0, #24]
    3da8:	ldr	x1, [sp, #208]
    3dac:	cmp	x1, x0
    3db0:	b.eq	3e10 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0xee8>  // b.none
    3db4:	ldr	x0, [sp, #208]
    3db8:	ldr	x0, [x0, #16]
    3dbc:	str	x0, [sp, #192]
    3dc0:	ldr	x0, [sp, #208]
    3dc4:	ldr	x0, [x0, #24]
    3dc8:	str	x0, [sp, #296]
    3dcc:	ldr	x0, [sp, #40]
    3dd0:	ldr	x0, [x0, #24]
    3dd4:	ldr	x1, [sp, #192]
    3dd8:	cmp	x1, x0
    3ddc:	cset	w0, cs  // cs = hs, nlast
    3de0:	and	w0, w0, #0xff
    3de4:	and	x0, x0, #0xff
    3de8:	cmp	x0, #0x0
    3dec:	b.eq	3e0c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0xee4>  // b.none
    3df0:	ldr	x0, [sp, #192]
    3df4:	ldr	x1, [sp, #296]
    3df8:	str	x1, [x0, #24]
    3dfc:	ldr	x0, [sp, #296]
    3e00:	ldr	x1, [sp, #192]
    3e04:	str	x1, [x0, #16]
    3e08:	b	3edc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0xfb4>
    3e0c:	bl	1b90 <abort@plt>
    3e10:	ldr	x0, [sp, #208]
    3e14:	add	x0, x0, #0x28
    3e18:	str	x0, [sp, #288]
    3e1c:	ldr	x0, [sp, #288]
    3e20:	ldr	x0, [x0]
    3e24:	str	x0, [sp, #296]
    3e28:	ldr	x0, [sp, #296]
    3e2c:	cmp	x0, #0x0
    3e30:	b.ne	3e70 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0xf48>  // b.any
    3e34:	ldr	x0, [sp, #208]
    3e38:	add	x0, x0, #0x20
    3e3c:	str	x0, [sp, #288]
    3e40:	ldr	x0, [sp, #288]
    3e44:	ldr	x0, [x0]
    3e48:	str	x0, [sp, #296]
    3e4c:	ldr	x0, [sp, #296]
    3e50:	cmp	x0, #0x0
    3e54:	b.eq	3edc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0xfb4>  // b.none
    3e58:	b	3e70 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0xf48>
    3e5c:	ldr	x0, [sp, #280]
    3e60:	str	x0, [sp, #288]
    3e64:	ldr	x0, [sp, #288]
    3e68:	ldr	x0, [x0]
    3e6c:	str	x0, [sp, #296]
    3e70:	ldr	x0, [sp, #296]
    3e74:	add	x0, x0, #0x28
    3e78:	str	x0, [sp, #280]
    3e7c:	ldr	x0, [sp, #280]
    3e80:	ldr	x0, [x0]
    3e84:	cmp	x0, #0x0
    3e88:	b.ne	3e5c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0xf34>  // b.any
    3e8c:	ldr	x0, [sp, #296]
    3e90:	add	x0, x0, #0x20
    3e94:	str	x0, [sp, #280]
    3e98:	ldr	x0, [sp, #280]
    3e9c:	ldr	x0, [x0]
    3ea0:	cmp	x0, #0x0
    3ea4:	b.ne	3e5c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0xf34>  // b.any
    3ea8:	ldr	x0, [sp, #40]
    3eac:	ldr	x0, [x0, #24]
    3eb0:	ldr	x1, [sp, #288]
    3eb4:	cmp	x1, x0
    3eb8:	cset	w0, cs  // cs = hs, nlast
    3ebc:	and	w0, w0, #0xff
    3ec0:	and	x0, x0, #0xff
    3ec4:	cmp	x0, #0x0
    3ec8:	b.eq	3ed8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0xfb0>  // b.none
    3ecc:	ldr	x0, [sp, #288]
    3ed0:	str	xzr, [x0]
    3ed4:	b	3edc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0xfb4>
    3ed8:	bl	1b90 <abort@plt>
    3edc:	ldr	x0, [sp, #200]
    3ee0:	cmp	x0, #0x0
    3ee4:	b.eq	40b8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1190>  // b.none
    3ee8:	ldr	x0, [sp, #208]
    3eec:	ldr	x0, [x0, #56]
    3ef0:	add	x0, x0, #0x4a
    3ef4:	lsl	x0, x0, #3
    3ef8:	ldr	x1, [sp, #40]
    3efc:	add	x0, x1, x0
    3f00:	str	x0, [sp, #184]
    3f04:	ldr	x0, [sp, #184]
    3f08:	ldr	x0, [x0]
    3f0c:	ldr	x1, [sp, #208]
    3f10:	cmp	x1, x0
    3f14:	b.ne	3f64 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x103c>  // b.any
    3f18:	ldr	x0, [sp, #184]
    3f1c:	ldr	x1, [sp, #296]
    3f20:	str	x1, [x0]
    3f24:	ldr	x0, [sp, #184]
    3f28:	ldr	x0, [x0]
    3f2c:	cmp	x0, #0x0
    3f30:	b.ne	3fc0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1098>  // b.any
    3f34:	ldr	x0, [sp, #40]
    3f38:	ldr	w1, [x0, #4]
    3f3c:	ldr	x0, [sp, #208]
    3f40:	ldr	x0, [x0, #56]
    3f44:	mov	w2, w0
    3f48:	mov	w0, #0x1                   	// #1
    3f4c:	lsl	w0, w0, w2
    3f50:	mvn	w0, w0
    3f54:	and	w1, w1, w0
    3f58:	ldr	x0, [sp, #40]
    3f5c:	str	w1, [x0, #4]
    3f60:	b	3fc0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1098>
    3f64:	ldr	x0, [sp, #40]
    3f68:	ldr	x0, [x0, #24]
    3f6c:	ldr	x1, [sp, #200]
    3f70:	cmp	x1, x0
    3f74:	cset	w0, cs  // cs = hs, nlast
    3f78:	and	w0, w0, #0xff
    3f7c:	and	x0, x0, #0xff
    3f80:	cmp	x0, #0x0
    3f84:	b.eq	3fbc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1094>  // b.none
    3f88:	ldr	x0, [sp, #200]
    3f8c:	ldr	x0, [x0, #32]
    3f90:	ldr	x1, [sp, #208]
    3f94:	cmp	x1, x0
    3f98:	b.ne	3fac <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1084>  // b.any
    3f9c:	ldr	x0, [sp, #200]
    3fa0:	ldr	x1, [sp, #296]
    3fa4:	str	x1, [x0, #32]
    3fa8:	b	3fc0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1098>
    3fac:	ldr	x0, [sp, #200]
    3fb0:	ldr	x1, [sp, #296]
    3fb4:	str	x1, [x0, #40]
    3fb8:	b	3fc0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1098>
    3fbc:	bl	1b90 <abort@plt>
    3fc0:	ldr	x0, [sp, #296]
    3fc4:	cmp	x0, #0x0
    3fc8:	b.eq	40b8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1190>  // b.none
    3fcc:	ldr	x0, [sp, #40]
    3fd0:	ldr	x0, [x0, #24]
    3fd4:	ldr	x1, [sp, #296]
    3fd8:	cmp	x1, x0
    3fdc:	cset	w0, cs  // cs = hs, nlast
    3fe0:	and	w0, w0, #0xff
    3fe4:	and	x0, x0, #0xff
    3fe8:	cmp	x0, #0x0
    3fec:	b.eq	40b4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x118c>  // b.none
    3ff0:	ldr	x0, [sp, #296]
    3ff4:	ldr	x1, [sp, #200]
    3ff8:	str	x1, [x0, #48]
    3ffc:	ldr	x0, [sp, #208]
    4000:	ldr	x0, [x0, #32]
    4004:	str	x0, [sp, #176]
    4008:	ldr	x0, [sp, #176]
    400c:	cmp	x0, #0x0
    4010:	b.eq	4058 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1130>  // b.none
    4014:	ldr	x0, [sp, #40]
    4018:	ldr	x0, [x0, #24]
    401c:	ldr	x1, [sp, #176]
    4020:	cmp	x1, x0
    4024:	cset	w0, cs  // cs = hs, nlast
    4028:	and	w0, w0, #0xff
    402c:	and	x0, x0, #0xff
    4030:	cmp	x0, #0x0
    4034:	b.eq	4054 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x112c>  // b.none
    4038:	ldr	x0, [sp, #296]
    403c:	ldr	x1, [sp, #176]
    4040:	str	x1, [x0, #32]
    4044:	ldr	x0, [sp, #176]
    4048:	ldr	x1, [sp, #296]
    404c:	str	x1, [x0, #48]
    4050:	b	4058 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1130>
    4054:	bl	1b90 <abort@plt>
    4058:	ldr	x0, [sp, #208]
    405c:	ldr	x0, [x0, #40]
    4060:	str	x0, [sp, #168]
    4064:	ldr	x0, [sp, #168]
    4068:	cmp	x0, #0x0
    406c:	b.eq	40b8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1190>  // b.none
    4070:	ldr	x0, [sp, #40]
    4074:	ldr	x0, [x0, #24]
    4078:	ldr	x1, [sp, #168]
    407c:	cmp	x1, x0
    4080:	cset	w0, cs  // cs = hs, nlast
    4084:	and	w0, w0, #0xff
    4088:	and	x0, x0, #0xff
    408c:	cmp	x0, #0x0
    4090:	b.eq	40b0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1188>  // b.none
    4094:	ldr	x0, [sp, #296]
    4098:	ldr	x1, [sp, #168]
    409c:	str	x1, [x0, #40]
    40a0:	ldr	x0, [sp, #168]
    40a4:	ldr	x1, [sp, #296]
    40a8:	str	x1, [x0, #48]
    40ac:	b	40b8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1190>
    40b0:	bl	1b90 <abort@plt>
    40b4:	bl	1b90 <abort@plt>
    40b8:	ldr	x1, [sp, #312]
    40bc:	ldr	x0, [sp, #216]
    40c0:	add	x0, x1, x0
    40c4:	str	x0, [sp, #312]
    40c8:	ldr	x1, [sp, #304]
    40cc:	ldr	x0, [sp, #216]
    40d0:	add	x0, x1, x0
    40d4:	str	x0, [sp, #304]
    40d8:	ldr	x0, [sp, #312]
    40dc:	ldr	x0, [x0, #8]
    40e0:	and	x1, x0, #0xfffffffffffffffe
    40e4:	ldr	x0, [sp, #312]
    40e8:	str	x1, [x0, #8]
    40ec:	ldr	x0, [sp, #304]
    40f0:	orr	x1, x0, #0x1
    40f4:	ldr	x0, [sp, #224]
    40f8:	str	x1, [x0, #8]
    40fc:	ldr	x1, [sp, #224]
    4100:	ldr	x0, [sp, #304]
    4104:	add	x0, x1, x0
    4108:	ldr	x1, [sp, #304]
    410c:	str	x1, [x0]
    4110:	ldr	x0, [sp, #304]
    4114:	lsr	x0, x0, #3
    4118:	cmp	x0, #0x1f
    411c:	b.hi	420c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x12e4>  // b.pmore
    4120:	ldr	x0, [sp, #304]
    4124:	lsr	x0, x0, #3
    4128:	str	x0, [sp, #80]
    412c:	ldr	x0, [sp, #80]
    4130:	lsl	x0, x0, #1
    4134:	add	x0, x0, #0x8
    4138:	lsl	x0, x0, #3
    413c:	ldr	x1, [sp, #40]
    4140:	add	x0, x1, x0
    4144:	str	x0, [sp, #72]
    4148:	ldr	x0, [sp, #72]
    414c:	str	x0, [sp, #272]
    4150:	ldr	x0, [sp, #40]
    4154:	ldr	w1, [x0]
    4158:	ldr	x0, [sp, #80]
    415c:	mov	w2, w0
    4160:	mov	w0, #0x1                   	// #1
    4164:	lsl	w0, w0, w2
    4168:	and	w0, w1, w0
    416c:	cmp	w0, #0x0
    4170:	b.ne	419c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1274>  // b.any
    4174:	ldr	x0, [sp, #40]
    4178:	ldr	w1, [x0]
    417c:	ldr	x0, [sp, #80]
    4180:	mov	w2, w0
    4184:	mov	w0, #0x1                   	// #1
    4188:	lsl	w0, w0, w2
    418c:	orr	w1, w1, w0
    4190:	ldr	x0, [sp, #40]
    4194:	str	w1, [x0]
    4198:	b	41d8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x12b0>
    419c:	ldr	x0, [sp, #72]
    41a0:	ldr	x1, [x0, #16]
    41a4:	ldr	x0, [sp, #40]
    41a8:	ldr	x0, [x0, #24]
    41ac:	cmp	x1, x0
    41b0:	cset	w0, cs  // cs = hs, nlast
    41b4:	and	w0, w0, #0xff
    41b8:	and	x0, x0, #0xff
    41bc:	cmp	x0, #0x0
    41c0:	b.eq	41d4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x12ac>  // b.none
    41c4:	ldr	x0, [sp, #72]
    41c8:	ldr	x0, [x0, #16]
    41cc:	str	x0, [sp, #272]
    41d0:	b	41d8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x12b0>
    41d4:	bl	1b90 <abort@plt>
    41d8:	ldr	x0, [sp, #72]
    41dc:	ldr	x1, [sp, #224]
    41e0:	str	x1, [x0, #16]
    41e4:	ldr	x0, [sp, #272]
    41e8:	ldr	x1, [sp, #224]
    41ec:	str	x1, [x0, #24]
    41f0:	ldr	x0, [sp, #224]
    41f4:	ldr	x1, [sp, #272]
    41f8:	str	x1, [x0, #16]
    41fc:	ldr	x0, [sp, #224]
    4200:	ldr	x1, [sp, #72]
    4204:	str	x1, [x0, #24]
    4208:	b	4578 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1650>
    420c:	ldr	x0, [sp, #224]
    4210:	str	x0, [sp, #136]
    4214:	ldr	x0, [sp, #304]
    4218:	lsr	x0, x0, #8
    421c:	str	x0, [sp, #128]
    4220:	ldr	x0, [sp, #128]
    4224:	cmp	x0, #0x0
    4228:	b.ne	4234 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x130c>  // b.any
    422c:	str	xzr, [sp, #264]
    4230:	b	4324 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x13fc>
    4234:	ldr	x1, [sp, #128]
    4238:	mov	x0, #0xffff                	// #65535
    423c:	cmp	x1, x0
    4240:	b.ls	4250 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1328>  // b.plast
    4244:	mov	x0, #0x1f                  	// #31
    4248:	str	x0, [sp, #264]
    424c:	b	4324 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x13fc>
    4250:	ldr	x0, [sp, #128]
    4254:	str	w0, [sp, #124]
    4258:	ldr	w0, [sp, #124]
    425c:	sub	w0, w0, #0x100
    4260:	lsr	w0, w0, #16
    4264:	and	w0, w0, #0x8
    4268:	str	w0, [sp, #120]
    426c:	ldr	w0, [sp, #120]
    4270:	ldr	w1, [sp, #124]
    4274:	lsl	w0, w1, w0
    4278:	str	w0, [sp, #124]
    427c:	ldr	w0, [sp, #124]
    4280:	sub	w0, w0, #0x1, lsl #12
    4284:	lsr	w0, w0, #16
    4288:	and	w0, w0, #0x4
    428c:	str	w0, [sp, #116]
    4290:	ldr	w1, [sp, #120]
    4294:	ldr	w0, [sp, #116]
    4298:	add	w0, w1, w0
    429c:	str	w0, [sp, #120]
    42a0:	ldr	w0, [sp, #116]
    42a4:	ldr	w1, [sp, #124]
    42a8:	lsl	w0, w1, w0
    42ac:	str	w0, [sp, #124]
    42b0:	ldr	w0, [sp, #124]
    42b4:	sub	w0, w0, #0x4, lsl #12
    42b8:	lsr	w0, w0, #16
    42bc:	and	w0, w0, #0x2
    42c0:	str	w0, [sp, #116]
    42c4:	ldr	w0, [sp, #116]
    42c8:	ldr	w1, [sp, #120]
    42cc:	add	w0, w1, w0
    42d0:	str	w0, [sp, #120]
    42d4:	ldr	w0, [sp, #116]
    42d8:	ldr	w1, [sp, #124]
    42dc:	lsl	w0, w1, w0
    42e0:	str	w0, [sp, #124]
    42e4:	ldr	w0, [sp, #124]
    42e8:	lsr	w1, w0, #15
    42ec:	ldr	w0, [sp, #120]
    42f0:	sub	w0, w1, w0
    42f4:	add	w0, w0, #0xe
    42f8:	str	w0, [sp, #116]
    42fc:	ldr	w0, [sp, #116]
    4300:	lsl	w0, w0, #1
    4304:	mov	w1, w0
    4308:	ldr	w0, [sp, #116]
    430c:	add	w0, w0, #0x7
    4310:	ldr	x2, [sp, #304]
    4314:	lsr	x0, x2, x0
    4318:	and	x0, x0, #0x1
    431c:	add	x0, x1, x0
    4320:	str	x0, [sp, #264]
    4324:	ldr	x0, [sp, #264]
    4328:	add	x0, x0, #0x4a
    432c:	lsl	x0, x0, #3
    4330:	ldr	x1, [sp, #40]
    4334:	add	x0, x1, x0
    4338:	str	x0, [sp, #104]
    433c:	ldr	x0, [sp, #136]
    4340:	ldr	x1, [sp, #264]
    4344:	str	x1, [x0, #56]
    4348:	ldr	x0, [sp, #136]
    434c:	str	xzr, [x0, #40]
    4350:	ldr	x0, [sp, #136]
    4354:	ldr	x1, [x0, #40]
    4358:	ldr	x0, [sp, #136]
    435c:	str	x1, [x0, #32]
    4360:	ldr	x0, [sp, #40]
    4364:	ldr	w1, [x0, #4]
    4368:	ldr	x0, [sp, #264]
    436c:	mov	w2, w0
    4370:	mov	w0, #0x1                   	// #1
    4374:	lsl	w0, w0, w2
    4378:	and	w0, w1, w0
    437c:	cmp	w0, #0x0
    4380:	b.ne	43e0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x14b8>  // b.any
    4384:	ldr	x0, [sp, #40]
    4388:	ldr	w1, [x0, #4]
    438c:	ldr	x0, [sp, #264]
    4390:	mov	w2, w0
    4394:	mov	w0, #0x1                   	// #1
    4398:	lsl	w0, w0, w2
    439c:	orr	w1, w1, w0
    43a0:	ldr	x0, [sp, #40]
    43a4:	str	w1, [x0, #4]
    43a8:	ldr	x0, [sp, #104]
    43ac:	ldr	x1, [sp, #136]
    43b0:	str	x1, [x0]
    43b4:	ldr	x0, [sp, #136]
    43b8:	ldr	x1, [sp, #104]
    43bc:	str	x1, [x0, #48]
    43c0:	ldr	x0, [sp, #136]
    43c4:	ldr	x1, [sp, #136]
    43c8:	str	x1, [x0, #24]
    43cc:	ldr	x0, [sp, #136]
    43d0:	ldr	x1, [x0, #24]
    43d4:	ldr	x0, [sp, #136]
    43d8:	str	x1, [x0, #16]
    43dc:	b	4578 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1650>
    43e0:	ldr	x0, [sp, #104]
    43e4:	ldr	x0, [x0]
    43e8:	str	x0, [sp, #256]
    43ec:	ldr	x0, [sp, #264]
    43f0:	cmp	x0, #0x1f
    43f4:	b.eq	4410 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x14e8>  // b.none
    43f8:	ldr	x0, [sp, #264]
    43fc:	lsr	x0, x0, #1
    4400:	mov	w1, w0
    4404:	mov	w0, #0x39                  	// #57
    4408:	sub	w0, w0, w1
    440c:	b	4414 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x14ec>
    4410:	mov	w0, #0x0                   	// #0
    4414:	ldr	x1, [sp, #304]
    4418:	lsl	x0, x1, x0
    441c:	str	x0, [sp, #248]
    4420:	ldr	x0, [sp, #256]
    4424:	ldr	x0, [x0, #8]
    4428:	and	x0, x0, #0xfffffffffffffffc
    442c:	ldr	x1, [sp, #304]
    4430:	cmp	x1, x0
    4434:	b.eq	44e0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x15b8>  // b.none
    4438:	ldr	x0, [sp, #248]
    443c:	lsr	x0, x0, #63
    4440:	add	x0, x0, #0x4
    4444:	lsl	x0, x0, #3
    4448:	ldr	x1, [sp, #256]
    444c:	add	x0, x1, x0
    4450:	str	x0, [sp, #88]
    4454:	ldr	x0, [sp, #248]
    4458:	lsl	x0, x0, #1
    445c:	str	x0, [sp, #248]
    4460:	ldr	x0, [sp, #88]
    4464:	ldr	x0, [x0]
    4468:	cmp	x0, #0x0
    446c:	b.eq	4480 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1558>  // b.none
    4470:	ldr	x0, [sp, #88]
    4474:	ldr	x0, [x0]
    4478:	str	x0, [sp, #256]
    447c:	b	4420 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x14f8>
    4480:	ldr	x0, [sp, #40]
    4484:	ldr	x0, [x0, #24]
    4488:	ldr	x1, [sp, #88]
    448c:	cmp	x1, x0
    4490:	cset	w0, cs  // cs = hs, nlast
    4494:	and	w0, w0, #0xff
    4498:	and	x0, x0, #0xff
    449c:	cmp	x0, #0x0
    44a0:	b.eq	44dc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x15b4>  // b.none
    44a4:	ldr	x0, [sp, #88]
    44a8:	ldr	x1, [sp, #136]
    44ac:	str	x1, [x0]
    44b0:	ldr	x0, [sp, #136]
    44b4:	ldr	x1, [sp, #256]
    44b8:	str	x1, [x0, #48]
    44bc:	ldr	x0, [sp, #136]
    44c0:	ldr	x1, [sp, #136]
    44c4:	str	x1, [x0, #24]
    44c8:	ldr	x0, [sp, #136]
    44cc:	ldr	x1, [x0, #24]
    44d0:	ldr	x0, [sp, #136]
    44d4:	str	x1, [x0, #16]
    44d8:	b	4578 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1650>
    44dc:	bl	1b90 <abort@plt>
    44e0:	ldr	x0, [sp, #256]
    44e4:	ldr	x0, [x0, #16]
    44e8:	str	x0, [sp, #96]
    44ec:	ldr	x0, [sp, #40]
    44f0:	ldr	x0, [x0, #24]
    44f4:	ldr	x1, [sp, #256]
    44f8:	cmp	x1, x0
    44fc:	cset	w0, cs  // cs = hs, nlast
    4500:	and	w0, w0, #0xff
    4504:	and	x0, x0, #0xff
    4508:	cmp	x0, #0x0
    450c:	b.eq	4574 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x164c>  // b.none
    4510:	ldr	x0, [sp, #40]
    4514:	ldr	x0, [x0, #24]
    4518:	ldr	x1, [sp, #96]
    451c:	cmp	x1, x0
    4520:	cset	w0, cs  // cs = hs, nlast
    4524:	and	w0, w0, #0xff
    4528:	and	x0, x0, #0xff
    452c:	cmp	x0, #0x0
    4530:	b.eq	4574 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x164c>  // b.none
    4534:	ldr	x0, [sp, #96]
    4538:	ldr	x1, [sp, #136]
    453c:	str	x1, [x0, #24]
    4540:	ldr	x0, [sp, #96]
    4544:	ldr	x1, [x0, #24]
    4548:	ldr	x0, [sp, #256]
    454c:	str	x1, [x0, #16]
    4550:	ldr	x0, [sp, #136]
    4554:	ldr	x1, [sp, #96]
    4558:	str	x1, [x0, #16]
    455c:	ldr	x0, [sp, #136]
    4560:	ldr	x1, [sp, #256]
    4564:	str	x1, [x0, #24]
    4568:	ldr	x0, [sp, #136]
    456c:	str	xzr, [x0, #48]
    4570:	b	4578 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1650>
    4574:	bl	1b90 <abort@plt>
    4578:	ldr	x0, [sp, #240]
    457c:	add	x0, x0, #0x10
    4580:	ldp	x29, x30, [sp], #320
    4584:	ret
    4588:	stp	x29, x30, [sp, #-288]!
    458c:	mov	x29, sp
    4590:	str	x0, [sp, #40]
    4594:	str	x1, [sp, #32]
    4598:	str	x2, [sp, #24]
    459c:	str	w3, [sp, #20]
    45a0:	ldr	x0, [sp, #40]
    45a4:	ldr	x0, [x0, #40]
    45a8:	str	x0, [sp, #232]
    45ac:	ldr	x1, [sp, #232]
    45b0:	ldr	x0, [sp, #40]
    45b4:	bl	3094 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x16c>
    45b8:	str	x0, [sp, #224]
    45bc:	ldr	x0, [sp, #224]
    45c0:	ldr	x1, [x0]
    45c4:	ldr	x0, [sp, #224]
    45c8:	ldr	x0, [x0, #8]
    45cc:	add	x0, x1, x0
    45d0:	str	x0, [sp, #216]
    45d4:	mov	x0, #0x28                  	// #40
    45d8:	str	x0, [sp, #208]
    45dc:	mov	x1, #0xffffffffffffffd9    	// #-39
    45e0:	ldr	x0, [sp, #208]
    45e4:	sub	x0, x1, x0
    45e8:	ldr	x1, [sp, #216]
    45ec:	add	x0, x1, x0
    45f0:	str	x0, [sp, #200]
    45f4:	ldr	x0, [sp, #200]
    45f8:	add	x0, x0, #0x10
    45fc:	and	x0, x0, #0x7
    4600:	cmp	x0, #0x0
    4604:	b.eq	461c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x16f4>  // b.none
    4608:	ldr	x0, [sp, #200]
    460c:	add	x0, x0, #0x10
    4610:	neg	x0, x0
    4614:	and	x0, x0, #0x7
    4618:	b	4620 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x16f8>
    461c:	mov	x0, #0x0                   	// #0
    4620:	str	x0, [sp, #192]
    4624:	ldr	x1, [sp, #200]
    4628:	ldr	x0, [sp, #192]
    462c:	add	x0, x1, x0
    4630:	str	x0, [sp, #184]
    4634:	ldr	x0, [sp, #232]
    4638:	add	x0, x0, #0x20
    463c:	ldr	x1, [sp, #184]
    4640:	cmp	x1, x0
    4644:	b.cs	4650 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1728>  // b.hs, b.nlast
    4648:	ldr	x0, [sp, #232]
    464c:	b	4654 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x172c>
    4650:	ldr	x0, [sp, #184]
    4654:	str	x0, [sp, #176]
    4658:	ldr	x0, [sp, #176]
    465c:	str	x0, [sp, #168]
    4660:	ldr	x0, [sp, #168]
    4664:	add	x0, x0, #0x10
    4668:	str	x0, [sp, #160]
    466c:	ldr	x1, [sp, #168]
    4670:	ldr	x0, [sp, #208]
    4674:	add	x0, x1, x0
    4678:	str	x0, [sp, #152]
    467c:	ldr	x0, [sp, #152]
    4680:	str	x0, [sp, #280]
    4684:	str	wzr, [sp, #276]
    4688:	ldr	x0, [sp, #24]
    468c:	sub	x0, x0, #0x48
    4690:	mov	x2, x0
    4694:	ldr	x1, [sp, #32]
    4698:	ldr	x0, [sp, #40]
    469c:	bl	3948 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0xa20>
    46a0:	ldr	x0, [sp, #208]
    46a4:	orr	x1, x0, #0x3
    46a8:	ldr	x0, [sp, #168]
    46ac:	str	x1, [x0, #8]
    46b0:	ldr	x1, [sp, #160]
    46b4:	ldr	x0, [sp, #40]
    46b8:	add	x0, x0, #0x400
    46bc:	sub	x0, x0, #0x68
    46c0:	mov	x2, x1
    46c4:	mov	x3, x0
    46c8:	ldp	x0, x1, [x3]
    46cc:	stp	x0, x1, [x2]
    46d0:	ldp	x0, x1, [x3, #16]
    46d4:	stp	x0, x1, [x2, #16]
    46d8:	ldr	x0, [sp, #40]
    46dc:	ldr	x1, [sp, #32]
    46e0:	str	x1, [x0, #920]
    46e4:	ldr	x0, [sp, #40]
    46e8:	ldr	x1, [sp, #24]
    46ec:	str	x1, [x0, #928]
    46f0:	ldr	w0, [sp, #20]
    46f4:	cmp	w0, #0x1
    46f8:	b.eq	4700 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x17d8>  // b.none
    46fc:	bl	1b90 <abort@plt>
    4700:	ldr	x0, [sp, #40]
    4704:	ldr	x1, [x0, #920]
    4708:	ldr	x0, [sp, #40]
    470c:	ldr	x0, [x0, #928]
    4710:	sub	x0, x0, #0x8
    4714:	add	x0, x1, x0
    4718:	ldr	x1, [x0]
    471c:	ldr	x0, [sp, #40]
    4720:	str	x1, [x0, #944]
    4724:	ldr	x0, [sp, #40]
    4728:	ldr	x1, [x0, #920]
    472c:	ldr	x0, [sp, #40]
    4730:	ldr	x0, [x0, #944]
    4734:	mov	x2, x0
    4738:	ldr	x0, [sp, #40]
    473c:	ldr	x0, [x0, #928]
    4740:	add	x0, x2, x0
    4744:	sub	x0, x0, #0x8
    4748:	add	x0, x1, x0
    474c:	ldr	x1, [x0]
    4750:	ldr	x0, [sp, #40]
    4754:	ldr	x0, [x0, #944]
    4758:	cmp	x1, x0
    475c:	b.eq	4764 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x183c>  // b.none
    4760:	bl	1b90 <abort@plt>
    4764:	ldr	x0, [sp, #40]
    4768:	ldr	x1, [x0, #920]
    476c:	ldr	x0, [sp, #40]
    4770:	ldr	x0, [x0, #928]
    4774:	sub	x0, x0, #0x8
    4778:	add	x0, x1, x0
    477c:	str	xzr, [x0]
    4780:	ldr	x0, [sp, #40]
    4784:	ldr	x1, [sp, #160]
    4788:	str	x1, [x0, #936]
    478c:	ldr	x0, [sp, #280]
    4790:	add	x0, x0, #0x8
    4794:	str	x0, [sp, #144]
    4798:	ldr	x0, [sp, #280]
    479c:	mov	x1, #0xb                   	// #11
    47a0:	str	x1, [x0, #8]
    47a4:	ldr	w0, [sp, #276]
    47a8:	add	w0, w0, #0x1
    47ac:	str	w0, [sp, #276]
    47b0:	ldr	x0, [sp, #144]
    47b4:	add	x0, x0, #0x8
    47b8:	ldr	x1, [sp, #216]
    47bc:	cmp	x1, x0
    47c0:	b.ls	47d0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x18a8>  // b.plast
    47c4:	ldr	x0, [sp, #144]
    47c8:	str	x0, [sp, #280]
    47cc:	b	478c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1864>
    47d0:	nop
    47d4:	ldr	x1, [sp, #176]
    47d8:	ldr	x0, [sp, #232]
    47dc:	cmp	x1, x0
    47e0:	b.eq	4cac <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1d84>  // b.none
    47e4:	ldr	x0, [sp, #232]
    47e8:	str	x0, [sp, #136]
    47ec:	ldr	x1, [sp, #176]
    47f0:	ldr	x0, [sp, #232]
    47f4:	sub	x0, x1, x0
    47f8:	str	x0, [sp, #128]
    47fc:	ldr	x1, [sp, #136]
    4800:	ldr	x0, [sp, #128]
    4804:	add	x0, x1, x0
    4808:	str	x0, [sp, #120]
    480c:	ldr	x0, [sp, #120]
    4810:	ldr	x0, [x0, #8]
    4814:	and	x1, x0, #0xfffffffffffffffe
    4818:	ldr	x0, [sp, #120]
    481c:	str	x1, [x0, #8]
    4820:	ldr	x0, [sp, #128]
    4824:	orr	x1, x0, #0x1
    4828:	ldr	x0, [sp, #136]
    482c:	str	x1, [x0, #8]
    4830:	ldr	x1, [sp, #136]
    4834:	ldr	x0, [sp, #128]
    4838:	add	x0, x1, x0
    483c:	ldr	x1, [sp, #128]
    4840:	str	x1, [x0]
    4844:	ldr	x0, [sp, #128]
    4848:	lsr	x0, x0, #3
    484c:	cmp	x0, #0x1f
    4850:	b.hi	4940 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1a18>  // b.pmore
    4854:	ldr	x0, [sp, #128]
    4858:	lsr	x0, x0, #3
    485c:	str	x0, [sp, #56]
    4860:	ldr	x0, [sp, #56]
    4864:	lsl	x0, x0, #1
    4868:	add	x0, x0, #0x8
    486c:	lsl	x0, x0, #3
    4870:	ldr	x1, [sp, #40]
    4874:	add	x0, x1, x0
    4878:	str	x0, [sp, #48]
    487c:	ldr	x0, [sp, #48]
    4880:	str	x0, [sp, #264]
    4884:	ldr	x0, [sp, #40]
    4888:	ldr	w1, [x0]
    488c:	ldr	x0, [sp, #56]
    4890:	mov	w2, w0
    4894:	mov	w0, #0x1                   	// #1
    4898:	lsl	w0, w0, w2
    489c:	and	w0, w1, w0
    48a0:	cmp	w0, #0x0
    48a4:	b.ne	48d0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x19a8>  // b.any
    48a8:	ldr	x0, [sp, #40]
    48ac:	ldr	w1, [x0]
    48b0:	ldr	x0, [sp, #56]
    48b4:	mov	w2, w0
    48b8:	mov	w0, #0x1                   	// #1
    48bc:	lsl	w0, w0, w2
    48c0:	orr	w1, w1, w0
    48c4:	ldr	x0, [sp, #40]
    48c8:	str	w1, [x0]
    48cc:	b	490c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x19e4>
    48d0:	ldr	x0, [sp, #48]
    48d4:	ldr	x1, [x0, #16]
    48d8:	ldr	x0, [sp, #40]
    48dc:	ldr	x0, [x0, #24]
    48e0:	cmp	x1, x0
    48e4:	cset	w0, cs  // cs = hs, nlast
    48e8:	and	w0, w0, #0xff
    48ec:	and	x0, x0, #0xff
    48f0:	cmp	x0, #0x0
    48f4:	b.eq	4908 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x19e0>  // b.none
    48f8:	ldr	x0, [sp, #48]
    48fc:	ldr	x0, [x0, #16]
    4900:	str	x0, [sp, #264]
    4904:	b	490c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x19e4>
    4908:	bl	1b90 <abort@plt>
    490c:	ldr	x0, [sp, #48]
    4910:	ldr	x1, [sp, #136]
    4914:	str	x1, [x0, #16]
    4918:	ldr	x0, [sp, #264]
    491c:	ldr	x1, [sp, #136]
    4920:	str	x1, [x0, #24]
    4924:	ldr	x0, [sp, #136]
    4928:	ldr	x1, [sp, #264]
    492c:	str	x1, [x0, #16]
    4930:	ldr	x0, [sp, #136]
    4934:	ldr	x1, [sp, #48]
    4938:	str	x1, [x0, #24]
    493c:	b	4cac <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1d84>
    4940:	ldr	x0, [sp, #136]
    4944:	str	x0, [sp, #112]
    4948:	ldr	x0, [sp, #128]
    494c:	lsr	x0, x0, #8
    4950:	str	x0, [sp, #104]
    4954:	ldr	x0, [sp, #104]
    4958:	cmp	x0, #0x0
    495c:	b.ne	4968 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1a40>  // b.any
    4960:	str	xzr, [sp, #256]
    4964:	b	4a58 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1b30>
    4968:	ldr	x1, [sp, #104]
    496c:	mov	x0, #0xffff                	// #65535
    4970:	cmp	x1, x0
    4974:	b.ls	4984 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1a5c>  // b.plast
    4978:	mov	x0, #0x1f                  	// #31
    497c:	str	x0, [sp, #256]
    4980:	b	4a58 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1b30>
    4984:	ldr	x0, [sp, #104]
    4988:	str	w0, [sp, #100]
    498c:	ldr	w0, [sp, #100]
    4990:	sub	w0, w0, #0x100
    4994:	lsr	w0, w0, #16
    4998:	and	w0, w0, #0x8
    499c:	str	w0, [sp, #96]
    49a0:	ldr	w0, [sp, #96]
    49a4:	ldr	w1, [sp, #100]
    49a8:	lsl	w0, w1, w0
    49ac:	str	w0, [sp, #100]
    49b0:	ldr	w0, [sp, #100]
    49b4:	sub	w0, w0, #0x1, lsl #12
    49b8:	lsr	w0, w0, #16
    49bc:	and	w0, w0, #0x4
    49c0:	str	w0, [sp, #92]
    49c4:	ldr	w1, [sp, #96]
    49c8:	ldr	w0, [sp, #92]
    49cc:	add	w0, w1, w0
    49d0:	str	w0, [sp, #96]
    49d4:	ldr	w0, [sp, #92]
    49d8:	ldr	w1, [sp, #100]
    49dc:	lsl	w0, w1, w0
    49e0:	str	w0, [sp, #100]
    49e4:	ldr	w0, [sp, #100]
    49e8:	sub	w0, w0, #0x4, lsl #12
    49ec:	lsr	w0, w0, #16
    49f0:	and	w0, w0, #0x2
    49f4:	str	w0, [sp, #92]
    49f8:	ldr	w0, [sp, #92]
    49fc:	ldr	w1, [sp, #96]
    4a00:	add	w0, w1, w0
    4a04:	str	w0, [sp, #96]
    4a08:	ldr	w0, [sp, #92]
    4a0c:	ldr	w1, [sp, #100]
    4a10:	lsl	w0, w1, w0
    4a14:	str	w0, [sp, #100]
    4a18:	ldr	w0, [sp, #100]
    4a1c:	lsr	w1, w0, #15
    4a20:	ldr	w0, [sp, #96]
    4a24:	sub	w0, w1, w0
    4a28:	add	w0, w0, #0xe
    4a2c:	str	w0, [sp, #92]
    4a30:	ldr	w0, [sp, #92]
    4a34:	lsl	w0, w0, #1
    4a38:	mov	w1, w0
    4a3c:	ldr	w0, [sp, #92]
    4a40:	add	w0, w0, #0x7
    4a44:	ldr	x2, [sp, #128]
    4a48:	lsr	x0, x2, x0
    4a4c:	and	x0, x0, #0x1
    4a50:	add	x0, x1, x0
    4a54:	str	x0, [sp, #256]
    4a58:	ldr	x0, [sp, #256]
    4a5c:	add	x0, x0, #0x4a
    4a60:	lsl	x0, x0, #3
    4a64:	ldr	x1, [sp, #40]
    4a68:	add	x0, x1, x0
    4a6c:	str	x0, [sp, #80]
    4a70:	ldr	x0, [sp, #112]
    4a74:	ldr	x1, [sp, #256]
    4a78:	str	x1, [x0, #56]
    4a7c:	ldr	x0, [sp, #112]
    4a80:	str	xzr, [x0, #40]
    4a84:	ldr	x0, [sp, #112]
    4a88:	ldr	x1, [x0, #40]
    4a8c:	ldr	x0, [sp, #112]
    4a90:	str	x1, [x0, #32]
    4a94:	ldr	x0, [sp, #40]
    4a98:	ldr	w1, [x0, #4]
    4a9c:	ldr	x0, [sp, #256]
    4aa0:	mov	w2, w0
    4aa4:	mov	w0, #0x1                   	// #1
    4aa8:	lsl	w0, w0, w2
    4aac:	and	w0, w1, w0
    4ab0:	cmp	w0, #0x0
    4ab4:	b.ne	4b14 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1bec>  // b.any
    4ab8:	ldr	x0, [sp, #40]
    4abc:	ldr	w1, [x0, #4]
    4ac0:	ldr	x0, [sp, #256]
    4ac4:	mov	w2, w0
    4ac8:	mov	w0, #0x1                   	// #1
    4acc:	lsl	w0, w0, w2
    4ad0:	orr	w1, w1, w0
    4ad4:	ldr	x0, [sp, #40]
    4ad8:	str	w1, [x0, #4]
    4adc:	ldr	x0, [sp, #80]
    4ae0:	ldr	x1, [sp, #112]
    4ae4:	str	x1, [x0]
    4ae8:	ldr	x0, [sp, #112]
    4aec:	ldr	x1, [sp, #80]
    4af0:	str	x1, [x0, #48]
    4af4:	ldr	x0, [sp, #112]
    4af8:	ldr	x1, [sp, #112]
    4afc:	str	x1, [x0, #24]
    4b00:	ldr	x0, [sp, #112]
    4b04:	ldr	x1, [x0, #24]
    4b08:	ldr	x0, [sp, #112]
    4b0c:	str	x1, [x0, #16]
    4b10:	b	4cac <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1d84>
    4b14:	ldr	x0, [sp, #80]
    4b18:	ldr	x0, [x0]
    4b1c:	str	x0, [sp, #248]
    4b20:	ldr	x0, [sp, #256]
    4b24:	cmp	x0, #0x1f
    4b28:	b.eq	4b44 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1c1c>  // b.none
    4b2c:	ldr	x0, [sp, #256]
    4b30:	lsr	x0, x0, #1
    4b34:	mov	w1, w0
    4b38:	mov	w0, #0x39                  	// #57
    4b3c:	sub	w0, w0, w1
    4b40:	b	4b48 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1c20>
    4b44:	mov	w0, #0x0                   	// #0
    4b48:	ldr	x1, [sp, #128]
    4b4c:	lsl	x0, x1, x0
    4b50:	str	x0, [sp, #240]
    4b54:	ldr	x0, [sp, #248]
    4b58:	ldr	x0, [x0, #8]
    4b5c:	and	x0, x0, #0xfffffffffffffffc
    4b60:	ldr	x1, [sp, #128]
    4b64:	cmp	x1, x0
    4b68:	b.eq	4c14 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1cec>  // b.none
    4b6c:	ldr	x0, [sp, #240]
    4b70:	lsr	x0, x0, #63
    4b74:	add	x0, x0, #0x4
    4b78:	lsl	x0, x0, #3
    4b7c:	ldr	x1, [sp, #248]
    4b80:	add	x0, x1, x0
    4b84:	str	x0, [sp, #64]
    4b88:	ldr	x0, [sp, #240]
    4b8c:	lsl	x0, x0, #1
    4b90:	str	x0, [sp, #240]
    4b94:	ldr	x0, [sp, #64]
    4b98:	ldr	x0, [x0]
    4b9c:	cmp	x0, #0x0
    4ba0:	b.eq	4bb4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1c8c>  // b.none
    4ba4:	ldr	x0, [sp, #64]
    4ba8:	ldr	x0, [x0]
    4bac:	str	x0, [sp, #248]
    4bb0:	b	4b54 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1c2c>
    4bb4:	ldr	x0, [sp, #40]
    4bb8:	ldr	x0, [x0, #24]
    4bbc:	ldr	x1, [sp, #64]
    4bc0:	cmp	x1, x0
    4bc4:	cset	w0, cs  // cs = hs, nlast
    4bc8:	and	w0, w0, #0xff
    4bcc:	and	x0, x0, #0xff
    4bd0:	cmp	x0, #0x0
    4bd4:	b.eq	4c10 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1ce8>  // b.none
    4bd8:	ldr	x0, [sp, #64]
    4bdc:	ldr	x1, [sp, #112]
    4be0:	str	x1, [x0]
    4be4:	ldr	x0, [sp, #112]
    4be8:	ldr	x1, [sp, #248]
    4bec:	str	x1, [x0, #48]
    4bf0:	ldr	x0, [sp, #112]
    4bf4:	ldr	x1, [sp, #112]
    4bf8:	str	x1, [x0, #24]
    4bfc:	ldr	x0, [sp, #112]
    4c00:	ldr	x1, [x0, #24]
    4c04:	ldr	x0, [sp, #112]
    4c08:	str	x1, [x0, #16]
    4c0c:	b	4cac <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1d84>
    4c10:	bl	1b90 <abort@plt>
    4c14:	ldr	x0, [sp, #248]
    4c18:	ldr	x0, [x0, #16]
    4c1c:	str	x0, [sp, #72]
    4c20:	ldr	x0, [sp, #40]
    4c24:	ldr	x0, [x0, #24]
    4c28:	ldr	x1, [sp, #248]
    4c2c:	cmp	x1, x0
    4c30:	cset	w0, cs  // cs = hs, nlast
    4c34:	and	w0, w0, #0xff
    4c38:	and	x0, x0, #0xff
    4c3c:	cmp	x0, #0x0
    4c40:	b.eq	4ca8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1d80>  // b.none
    4c44:	ldr	x0, [sp, #40]
    4c48:	ldr	x0, [x0, #24]
    4c4c:	ldr	x1, [sp, #72]
    4c50:	cmp	x1, x0
    4c54:	cset	w0, cs  // cs = hs, nlast
    4c58:	and	w0, w0, #0xff
    4c5c:	and	x0, x0, #0xff
    4c60:	cmp	x0, #0x0
    4c64:	b.eq	4ca8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1d80>  // b.none
    4c68:	ldr	x0, [sp, #72]
    4c6c:	ldr	x1, [sp, #112]
    4c70:	str	x1, [x0, #24]
    4c74:	ldr	x0, [sp, #72]
    4c78:	ldr	x1, [x0, #24]
    4c7c:	ldr	x0, [sp, #248]
    4c80:	str	x1, [x0, #16]
    4c84:	ldr	x0, [sp, #112]
    4c88:	ldr	x1, [sp, #72]
    4c8c:	str	x1, [x0, #16]
    4c90:	ldr	x0, [sp, #112]
    4c94:	ldr	x1, [sp, #248]
    4c98:	str	x1, [x0, #24]
    4c9c:	ldr	x0, [sp, #112]
    4ca0:	str	xzr, [x0, #48]
    4ca4:	b	4cac <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1d84>
    4ca8:	bl	1b90 <abort@plt>
    4cac:	nop
    4cb0:	ldp	x29, x30, [sp], #288
    4cb4:	ret
    4cb8:	stp	x29, x30, [sp, #-144]!
    4cbc:	mov	x29, sp
    4cc0:	str	x0, [sp, #24]
    4cc4:	str	x1, [sp, #16]
    4cc8:	mov	x0, #0xffffffffffffffff    	// #-1
    4ccc:	str	x0, [sp, #112]
    4cd0:	str	xzr, [sp, #104]
    4cd4:	str	wzr, [sp, #100]
    4cd8:	bl	3184 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x25c>
    4cdc:	ldr	x0, [sp, #24]
    4ce0:	ldr	w0, [x0, #864]
    4ce4:	mov	w0, w0
    4ce8:	and	x0, x0, #0x1
    4cec:	cmp	x0, #0x0
    4cf0:	b.eq	4d30 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1e08>  // b.none
    4cf4:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    4cf8:	add	x0, x0, #0x280
    4cfc:	ldr	x0, [x0, #24]
    4d00:	ldr	x1, [sp, #16]
    4d04:	cmp	x1, x0
    4d08:	b.cc	4d30 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1e08>  // b.lo, b.ul, b.last
    4d0c:	ldr	x1, [sp, #16]
    4d10:	ldr	x0, [sp, #24]
    4d14:	bl	3600 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6d8>
    4d18:	str	x0, [sp, #88]
    4d1c:	ldr	x0, [sp, #88]
    4d20:	cmp	x0, #0x0
    4d24:	b.eq	4d30 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1e08>  // b.none
    4d28:	ldr	x0, [sp, #88]
    4d2c:	b	5218 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x22f0>
    4d30:	ldr	x0, [sp, #112]
    4d34:	cmn	x0, #0x1
    4d38:	b.ne	4dc8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1ea0>  // b.any
    4d3c:	ldr	x0, [sp, #16]
    4d40:	add	x0, x0, #0x49
    4d44:	str	x0, [sp, #80]
    4d48:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    4d4c:	add	x0, x0, #0x280
    4d50:	ldr	x1, [x0, #16]
    4d54:	ldr	x0, [sp, #80]
    4d58:	add	x1, x1, x0
    4d5c:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    4d60:	add	x0, x0, #0x280
    4d64:	ldr	x0, [x0, #16]
    4d68:	neg	x0, x0
    4d6c:	and	x0, x1, x0
    4d70:	str	x0, [sp, #72]
    4d74:	ldr	x1, [sp, #72]
    4d78:	ldr	x0, [sp, #16]
    4d7c:	cmp	x1, x0
    4d80:	b.ls	4dc8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1ea0>  // b.plast
    4d84:	mov	x5, #0x0                   	// #0
    4d88:	mov	w4, #0xffffffff            	// #-1
    4d8c:	mov	w3, #0x22                  	// #34
    4d90:	mov	w2, #0x3                   	// #3
    4d94:	ldr	x1, [sp, #72]
    4d98:	mov	x0, #0x0                   	// #0
    4d9c:	bl	a1fc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x72d4>
    4da0:	str	x0, [sp, #120]
    4da4:	ldr	x0, [sp, #120]
    4da8:	cmn	x0, #0x1
    4dac:	b.eq	4dc8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1ea0>  // b.none
    4db0:	ldr	x0, [sp, #120]
    4db4:	str	x0, [sp, #112]
    4db8:	ldr	x0, [sp, #72]
    4dbc:	str	x0, [sp, #104]
    4dc0:	mov	w0, #0x1                   	// #1
    4dc4:	str	w0, [sp, #100]
    4dc8:	ldr	x0, [sp, #112]
    4dcc:	cmn	x0, #0x1
    4dd0:	b.eq	5204 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x22dc>  // b.none
    4dd4:	ldr	x0, [sp, #24]
    4dd8:	ldr	x1, [x0, #848]
    4ddc:	ldr	x0, [sp, #104]
    4de0:	add	x1, x1, x0
    4de4:	ldr	x0, [sp, #24]
    4de8:	str	x1, [x0, #848]
    4dec:	ldr	x0, [sp, #24]
    4df0:	ldr	x1, [x0, #848]
    4df4:	ldr	x0, [sp, #24]
    4df8:	ldr	x0, [x0, #856]
    4dfc:	cmp	x1, x0
    4e00:	b.ls	4e14 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1eec>  // b.plast
    4e04:	ldr	x0, [sp, #24]
    4e08:	ldr	x1, [x0, #848]
    4e0c:	ldr	x0, [sp, #24]
    4e10:	str	x1, [x0, #856]
    4e14:	ldr	x0, [sp, #24]
    4e18:	ldr	x0, [x0, #40]
    4e1c:	cmp	x0, #0x0
    4e20:	b.ne	4f74 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x204c>  // b.any
    4e24:	ldr	x0, [sp, #24]
    4e28:	ldr	x1, [sp, #112]
    4e2c:	str	x1, [x0, #24]
    4e30:	ldr	x0, [sp, #24]
    4e34:	ldr	x1, [x0, #24]
    4e38:	ldr	x0, [sp, #24]
    4e3c:	str	x1, [x0, #920]
    4e40:	ldr	x0, [sp, #24]
    4e44:	ldr	x1, [sp, #104]
    4e48:	str	x1, [x0, #928]
    4e4c:	ldr	w0, [sp, #100]
    4e50:	cmp	w0, #0x1
    4e54:	b.eq	4e5c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1f34>  // b.none
    4e58:	bl	1b90 <abort@plt>
    4e5c:	ldr	x0, [sp, #24]
    4e60:	ldr	x1, [x0, #920]
    4e64:	ldr	x0, [sp, #24]
    4e68:	ldr	x0, [x0, #928]
    4e6c:	sub	x0, x0, #0x8
    4e70:	add	x0, x1, x0
    4e74:	ldr	x1, [x0]
    4e78:	ldr	x0, [sp, #24]
    4e7c:	str	x1, [x0, #944]
    4e80:	ldr	x0, [sp, #24]
    4e84:	ldr	x1, [x0, #920]
    4e88:	ldr	x0, [sp, #24]
    4e8c:	ldr	x0, [x0, #944]
    4e90:	mov	x2, x0
    4e94:	ldr	x0, [sp, #24]
    4e98:	ldr	x0, [x0, #928]
    4e9c:	add	x0, x2, x0
    4ea0:	sub	x0, x0, #0x8
    4ea4:	add	x0, x1, x0
    4ea8:	ldr	x1, [x0]
    4eac:	ldr	x0, [sp, #24]
    4eb0:	ldr	x0, [x0, #944]
    4eb4:	cmp	x1, x0
    4eb8:	b.eq	4ec0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1f98>  // b.none
    4ebc:	bl	1b90 <abort@plt>
    4ec0:	ldr	x0, [sp, #24]
    4ec4:	ldr	x1, [x0, #920]
    4ec8:	ldr	x0, [sp, #24]
    4ecc:	ldr	x0, [x0, #928]
    4ed0:	sub	x0, x0, #0x8
    4ed4:	add	x0, x1, x0
    4ed8:	str	xzr, [x0]
    4edc:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    4ee0:	add	x0, x0, #0x280
    4ee4:	ldr	x1, [x0]
    4ee8:	ldr	x0, [sp, #24]
    4eec:	str	x1, [x0, #56]
    4ef0:	ldr	x0, [sp, #24]
    4ef4:	bl	3a04 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0xadc>
    4ef8:	ldr	x1, [sp, #24]
    4efc:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    4f00:	add	x0, x0, #0x2b0
    4f04:	cmp	x1, x0
    4f08:	b.ne	4f28 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2000>  // b.any
    4f0c:	ldr	x0, [sp, #104]
    4f10:	sub	x0, x0, #0x48
    4f14:	mov	x2, x0
    4f18:	ldr	x1, [sp, #112]
    4f1c:	ldr	x0, [sp, #24]
    4f20:	bl	3948 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0xa20>
    4f24:	b	5174 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x224c>
    4f28:	ldr	x0, [sp, #24]
    4f2c:	sub	x0, x0, #0x10
    4f30:	ldr	x0, [x0, #8]
    4f34:	and	x0, x0, #0xfffffffffffffffc
    4f38:	sub	x0, x0, #0x10
    4f3c:	ldr	x1, [sp, #24]
    4f40:	add	x0, x1, x0
    4f44:	str	x0, [sp, #64]
    4f48:	ldr	x1, [sp, #112]
    4f4c:	ldr	x0, [sp, #104]
    4f50:	add	x1, x1, x0
    4f54:	ldr	x0, [sp, #64]
    4f58:	sub	x0, x1, x0
    4f5c:	sub	x0, x0, #0x48
    4f60:	mov	x2, x0
    4f64:	ldr	x1, [sp, #64]
    4f68:	ldr	x0, [sp, #24]
    4f6c:	bl	3948 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0xa20>
    4f70:	b	5174 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x224c>
    4f74:	ldr	x0, [sp, #24]
    4f78:	add	x0, x0, #0x398
    4f7c:	str	x0, [sp, #136]
    4f80:	b	4f90 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2068>
    4f84:	ldr	x0, [sp, #136]
    4f88:	ldr	x0, [x0, #16]
    4f8c:	str	x0, [sp, #136]
    4f90:	ldr	x0, [sp, #136]
    4f94:	cmp	x0, #0x0
    4f98:	b.eq	4fbc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2094>  // b.none
    4f9c:	ldr	x0, [sp, #136]
    4fa0:	ldr	x1, [x0]
    4fa4:	ldr	x0, [sp, #136]
    4fa8:	ldr	x0, [x0, #8]
    4fac:	add	x0, x1, x0
    4fb0:	ldr	x1, [sp, #112]
    4fb4:	cmp	x1, x0
    4fb8:	b.ne	4f84 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x205c>  // b.any
    4fbc:	ldr	x0, [sp, #136]
    4fc0:	cmp	x0, #0x0
    4fc4:	b.eq	5078 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2150>  // b.none
    4fc8:	ldr	x0, [sp, #104]
    4fcc:	sub	x0, x0, #0x8
    4fd0:	ldr	x1, [sp, #112]
    4fd4:	add	x0, x1, x0
    4fd8:	ldr	x1, [x0]
    4fdc:	ldr	x0, [sp, #136]
    4fe0:	ldr	x0, [x0, #24]
    4fe4:	cmp	x1, x0
    4fe8:	b.ne	5078 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2150>  // b.any
    4fec:	ldr	w0, [sp, #100]
    4ff0:	cmp	w0, #0x1
    4ff4:	b.ne	5078 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2150>  // b.any
    4ff8:	ldr	x0, [sp, #24]
    4ffc:	ldr	x1, [x0, #40]
    5000:	ldr	x0, [sp, #136]
    5004:	ldr	x0, [x0]
    5008:	cmp	x1, x0
    500c:	b.cc	5078 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2150>  // b.lo, b.ul, b.last
    5010:	ldr	x0, [sp, #24]
    5014:	ldr	x1, [x0, #40]
    5018:	ldr	x0, [sp, #136]
    501c:	ldr	x2, [x0]
    5020:	ldr	x0, [sp, #136]
    5024:	ldr	x0, [x0, #8]
    5028:	add	x0, x2, x0
    502c:	cmp	x1, x0
    5030:	b.cs	5078 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2150>  // b.hs, b.nlast
    5034:	ldr	x0, [sp, #136]
    5038:	ldr	x1, [x0, #8]
    503c:	ldr	x0, [sp, #104]
    5040:	add	x1, x1, x0
    5044:	ldr	x0, [sp, #136]
    5048:	str	x1, [x0, #8]
    504c:	ldr	x0, [sp, #24]
    5050:	ldr	x3, [x0, #40]
    5054:	ldr	x0, [sp, #24]
    5058:	ldr	x1, [x0, #16]
    505c:	ldr	x0, [sp, #104]
    5060:	add	x0, x1, x0
    5064:	mov	x2, x0
    5068:	mov	x1, x3
    506c:	ldr	x0, [sp, #24]
    5070:	bl	3948 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0xa20>
    5074:	b	5174 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x224c>
    5078:	ldr	x0, [sp, #24]
    507c:	ldr	x0, [x0, #24]
    5080:	ldr	x1, [sp, #112]
    5084:	cmp	x1, x0
    5088:	b.cs	5098 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2170>  // b.hs, b.nlast
    508c:	ldr	x0, [sp, #24]
    5090:	ldr	x1, [sp, #112]
    5094:	str	x1, [x0, #24]
    5098:	ldr	x0, [sp, #24]
    509c:	add	x0, x0, #0x398
    50a0:	str	x0, [sp, #136]
    50a4:	b	50b4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x218c>
    50a8:	ldr	x0, [sp, #136]
    50ac:	ldr	x0, [x0, #16]
    50b0:	str	x0, [sp, #136]
    50b4:	ldr	x0, [sp, #136]
    50b8:	cmp	x0, #0x0
    50bc:	b.eq	50dc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x21b4>  // b.none
    50c0:	ldr	x0, [sp, #136]
    50c4:	ldr	x1, [x0]
    50c8:	ldr	x2, [sp, #112]
    50cc:	ldr	x0, [sp, #104]
    50d0:	add	x0, x2, x0
    50d4:	cmp	x1, x0
    50d8:	b.ne	50a8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2180>  // b.any
    50dc:	ldr	x0, [sp, #136]
    50e0:	cmp	x0, #0x0
    50e4:	b.eq	5160 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2238>  // b.none
    50e8:	ldr	x0, [sp, #104]
    50ec:	sub	x0, x0, #0x8
    50f0:	ldr	x1, [sp, #112]
    50f4:	add	x0, x1, x0
    50f8:	ldr	x1, [x0]
    50fc:	ldr	x0, [sp, #136]
    5100:	ldr	x0, [x0, #24]
    5104:	cmp	x1, x0
    5108:	b.ne	5160 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2238>  // b.any
    510c:	ldr	w0, [sp, #100]
    5110:	cmp	w0, #0x1
    5114:	b.ne	5160 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2238>  // b.any
    5118:	ldr	x0, [sp, #136]
    511c:	ldr	x0, [x0]
    5120:	str	x0, [sp, #128]
    5124:	ldr	x0, [sp, #136]
    5128:	ldr	x1, [sp, #112]
    512c:	str	x1, [x0]
    5130:	ldr	x0, [sp, #136]
    5134:	ldr	x1, [x0, #8]
    5138:	ldr	x0, [sp, #104]
    513c:	add	x1, x1, x0
    5140:	ldr	x0, [sp, #136]
    5144:	str	x1, [x0, #8]
    5148:	ldr	x3, [sp, #16]
    514c:	ldr	x2, [sp, #128]
    5150:	ldr	x1, [sp, #112]
    5154:	ldr	x0, [sp, #24]
    5158:	bl	3a74 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0xb4c>
    515c:	b	5218 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x22f0>
    5160:	ldr	w3, [sp, #100]
    5164:	ldr	x2, [sp, #104]
    5168:	ldr	x1, [sp, #112]
    516c:	ldr	x0, [sp, #24]
    5170:	bl	4588 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1660>
    5174:	ldr	x0, [sp, #24]
    5178:	ldr	x0, [x0, #16]
    517c:	ldr	x1, [sp, #16]
    5180:	cmp	x1, x0
    5184:	b.cs	5204 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x22dc>  // b.hs, b.nlast
    5188:	ldr	x0, [sp, #24]
    518c:	ldr	x1, [x0, #16]
    5190:	ldr	x0, [sp, #16]
    5194:	sub	x1, x1, x0
    5198:	ldr	x0, [sp, #24]
    519c:	str	x1, [x0, #16]
    51a0:	ldr	x0, [sp, #24]
    51a4:	ldr	x0, [x0, #16]
    51a8:	str	x0, [sp, #56]
    51ac:	ldr	x0, [sp, #24]
    51b0:	ldr	x0, [x0, #40]
    51b4:	str	x0, [sp, #48]
    51b8:	ldr	x1, [sp, #48]
    51bc:	ldr	x0, [sp, #16]
    51c0:	add	x1, x1, x0
    51c4:	ldr	x0, [sp, #24]
    51c8:	str	x1, [x0, #40]
    51cc:	ldr	x0, [sp, #24]
    51d0:	ldr	x0, [x0, #40]
    51d4:	str	x0, [sp, #40]
    51d8:	ldr	x0, [sp, #56]
    51dc:	orr	x1, x0, #0x1
    51e0:	ldr	x0, [sp, #40]
    51e4:	str	x1, [x0, #8]
    51e8:	ldr	x0, [sp, #16]
    51ec:	orr	x1, x0, #0x3
    51f0:	ldr	x0, [sp, #48]
    51f4:	str	x1, [x0, #8]
    51f8:	ldr	x0, [sp, #48]
    51fc:	add	x0, x0, #0x10
    5200:	b	5218 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x22f0>
    5204:	bl	1c90 <__errno_location@plt>
    5208:	mov	x1, x0
    520c:	mov	w0, #0xc                   	// #12
    5210:	str	w0, [x1]
    5214:	mov	x0, #0x0                   	// #0
    5218:	ldp	x29, x30, [sp], #144
    521c:	ret
    5220:	stp	x29, x30, [sp, #-240]!
    5224:	mov	x29, sp
    5228:	str	x0, [sp, #24]
    522c:	str	xzr, [sp, #232]
    5230:	ldr	x0, [sp, #24]
    5234:	add	x0, x0, #0x398
    5238:	str	x0, [sp, #224]
    523c:	ldr	x0, [sp, #224]
    5240:	ldr	x0, [x0, #16]
    5244:	str	x0, [sp, #216]
    5248:	b	5a0c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2ae4>
    524c:	ldr	x0, [sp, #216]
    5250:	ldr	x0, [x0]
    5254:	str	x0, [sp, #160]
    5258:	ldr	x0, [sp, #216]
    525c:	ldr	x0, [x0, #8]
    5260:	str	x0, [sp, #152]
    5264:	ldr	x0, [sp, #216]
    5268:	ldr	x0, [x0, #16]
    526c:	str	x0, [sp, #144]
    5270:	ldr	x0, [sp, #160]
    5274:	add	x0, x0, #0x10
    5278:	and	x0, x0, #0x7
    527c:	cmp	x0, #0x0
    5280:	b.eq	5298 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2370>  // b.none
    5284:	ldr	x0, [sp, #160]
    5288:	add	x0, x0, #0x10
    528c:	neg	x0, x0
    5290:	and	x0, x0, #0x7
    5294:	b	529c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2374>
    5298:	mov	x0, #0x0                   	// #0
    529c:	ldr	x1, [sp, #160]
    52a0:	add	x0, x1, x0
    52a4:	str	x0, [sp, #136]
    52a8:	ldr	x0, [sp, #136]
    52ac:	ldr	x0, [x0, #8]
    52b0:	and	x0, x0, #0xfffffffffffffffc
    52b4:	str	x0, [sp, #128]
    52b8:	ldr	x0, [sp, #136]
    52bc:	ldr	x0, [x0, #8]
    52c0:	and	x0, x0, #0x2
    52c4:	cmp	x0, #0x0
    52c8:	b.ne	59fc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2ad4>  // b.any
    52cc:	ldr	x1, [sp, #136]
    52d0:	ldr	x0, [sp, #128]
    52d4:	add	x1, x1, x0
    52d8:	ldr	x0, [sp, #152]
    52dc:	sub	x0, x0, #0x48
    52e0:	ldr	x2, [sp, #160]
    52e4:	add	x0, x2, x0
    52e8:	cmp	x1, x0
    52ec:	b.cc	59fc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2ad4>  // b.lo, b.ul, b.last
    52f0:	ldr	x0, [sp, #136]
    52f4:	str	x0, [sp, #120]
    52f8:	ldr	x0, [sp, #24]
    52fc:	ldr	x0, [x0, #32]
    5300:	ldr	x1, [sp, #136]
    5304:	cmp	x1, x0
    5308:	b.ne	5320 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x23f8>  // b.any
    530c:	ldr	x0, [sp, #24]
    5310:	str	xzr, [x0, #32]
    5314:	ldr	x0, [sp, #24]
    5318:	str	xzr, [x0, #8]
    531c:	b	5644 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x271c>
    5320:	ldr	x0, [sp, #120]
    5324:	ldr	x0, [x0, #48]
    5328:	str	x0, [sp, #112]
    532c:	ldr	x0, [sp, #120]
    5330:	ldr	x0, [x0, #24]
    5334:	ldr	x1, [sp, #120]
    5338:	cmp	x1, x0
    533c:	b.eq	539c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2474>  // b.none
    5340:	ldr	x0, [sp, #120]
    5344:	ldr	x0, [x0, #16]
    5348:	str	x0, [sp, #104]
    534c:	ldr	x0, [sp, #120]
    5350:	ldr	x0, [x0, #24]
    5354:	str	x0, [sp, #208]
    5358:	ldr	x0, [sp, #24]
    535c:	ldr	x0, [x0, #24]
    5360:	ldr	x1, [sp, #104]
    5364:	cmp	x1, x0
    5368:	cset	w0, cs  // cs = hs, nlast
    536c:	and	w0, w0, #0xff
    5370:	and	x0, x0, #0xff
    5374:	cmp	x0, #0x0
    5378:	b.eq	5398 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2470>  // b.none
    537c:	ldr	x0, [sp, #104]
    5380:	ldr	x1, [sp, #208]
    5384:	str	x1, [x0, #24]
    5388:	ldr	x0, [sp, #208]
    538c:	ldr	x1, [sp, #104]
    5390:	str	x1, [x0, #16]
    5394:	b	5468 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2540>
    5398:	bl	1b90 <abort@plt>
    539c:	ldr	x0, [sp, #120]
    53a0:	add	x0, x0, #0x28
    53a4:	str	x0, [sp, #200]
    53a8:	ldr	x0, [sp, #200]
    53ac:	ldr	x0, [x0]
    53b0:	str	x0, [sp, #208]
    53b4:	ldr	x0, [sp, #208]
    53b8:	cmp	x0, #0x0
    53bc:	b.ne	53fc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x24d4>  // b.any
    53c0:	ldr	x0, [sp, #120]
    53c4:	add	x0, x0, #0x20
    53c8:	str	x0, [sp, #200]
    53cc:	ldr	x0, [sp, #200]
    53d0:	ldr	x0, [x0]
    53d4:	str	x0, [sp, #208]
    53d8:	ldr	x0, [sp, #208]
    53dc:	cmp	x0, #0x0
    53e0:	b.eq	5468 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2540>  // b.none
    53e4:	b	53fc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x24d4>
    53e8:	ldr	x0, [sp, #192]
    53ec:	str	x0, [sp, #200]
    53f0:	ldr	x0, [sp, #200]
    53f4:	ldr	x0, [x0]
    53f8:	str	x0, [sp, #208]
    53fc:	ldr	x0, [sp, #208]
    5400:	add	x0, x0, #0x28
    5404:	str	x0, [sp, #192]
    5408:	ldr	x0, [sp, #192]
    540c:	ldr	x0, [x0]
    5410:	cmp	x0, #0x0
    5414:	b.ne	53e8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x24c0>  // b.any
    5418:	ldr	x0, [sp, #208]
    541c:	add	x0, x0, #0x20
    5420:	str	x0, [sp, #192]
    5424:	ldr	x0, [sp, #192]
    5428:	ldr	x0, [x0]
    542c:	cmp	x0, #0x0
    5430:	b.ne	53e8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x24c0>  // b.any
    5434:	ldr	x0, [sp, #24]
    5438:	ldr	x0, [x0, #24]
    543c:	ldr	x1, [sp, #200]
    5440:	cmp	x1, x0
    5444:	cset	w0, cs  // cs = hs, nlast
    5448:	and	w0, w0, #0xff
    544c:	and	x0, x0, #0xff
    5450:	cmp	x0, #0x0
    5454:	b.eq	5464 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x253c>  // b.none
    5458:	ldr	x0, [sp, #200]
    545c:	str	xzr, [x0]
    5460:	b	5468 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2540>
    5464:	bl	1b90 <abort@plt>
    5468:	ldr	x0, [sp, #112]
    546c:	cmp	x0, #0x0
    5470:	b.eq	5644 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x271c>  // b.none
    5474:	ldr	x0, [sp, #120]
    5478:	ldr	x0, [x0, #56]
    547c:	add	x0, x0, #0x4a
    5480:	lsl	x0, x0, #3
    5484:	ldr	x1, [sp, #24]
    5488:	add	x0, x1, x0
    548c:	str	x0, [sp, #96]
    5490:	ldr	x0, [sp, #96]
    5494:	ldr	x0, [x0]
    5498:	ldr	x1, [sp, #120]
    549c:	cmp	x1, x0
    54a0:	b.ne	54f0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x25c8>  // b.any
    54a4:	ldr	x0, [sp, #96]
    54a8:	ldr	x1, [sp, #208]
    54ac:	str	x1, [x0]
    54b0:	ldr	x0, [sp, #96]
    54b4:	ldr	x0, [x0]
    54b8:	cmp	x0, #0x0
    54bc:	b.ne	554c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2624>  // b.any
    54c0:	ldr	x0, [sp, #24]
    54c4:	ldr	w1, [x0, #4]
    54c8:	ldr	x0, [sp, #120]
    54cc:	ldr	x0, [x0, #56]
    54d0:	mov	w2, w0
    54d4:	mov	w0, #0x1                   	// #1
    54d8:	lsl	w0, w0, w2
    54dc:	mvn	w0, w0
    54e0:	and	w1, w1, w0
    54e4:	ldr	x0, [sp, #24]
    54e8:	str	w1, [x0, #4]
    54ec:	b	554c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2624>
    54f0:	ldr	x0, [sp, #24]
    54f4:	ldr	x0, [x0, #24]
    54f8:	ldr	x1, [sp, #112]
    54fc:	cmp	x1, x0
    5500:	cset	w0, cs  // cs = hs, nlast
    5504:	and	w0, w0, #0xff
    5508:	and	x0, x0, #0xff
    550c:	cmp	x0, #0x0
    5510:	b.eq	5548 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2620>  // b.none
    5514:	ldr	x0, [sp, #112]
    5518:	ldr	x0, [x0, #32]
    551c:	ldr	x1, [sp, #120]
    5520:	cmp	x1, x0
    5524:	b.ne	5538 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2610>  // b.any
    5528:	ldr	x0, [sp, #112]
    552c:	ldr	x1, [sp, #208]
    5530:	str	x1, [x0, #32]
    5534:	b	554c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2624>
    5538:	ldr	x0, [sp, #112]
    553c:	ldr	x1, [sp, #208]
    5540:	str	x1, [x0, #40]
    5544:	b	554c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2624>
    5548:	bl	1b90 <abort@plt>
    554c:	ldr	x0, [sp, #208]
    5550:	cmp	x0, #0x0
    5554:	b.eq	5644 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x271c>  // b.none
    5558:	ldr	x0, [sp, #24]
    555c:	ldr	x0, [x0, #24]
    5560:	ldr	x1, [sp, #208]
    5564:	cmp	x1, x0
    5568:	cset	w0, cs  // cs = hs, nlast
    556c:	and	w0, w0, #0xff
    5570:	and	x0, x0, #0xff
    5574:	cmp	x0, #0x0
    5578:	b.eq	5640 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2718>  // b.none
    557c:	ldr	x0, [sp, #208]
    5580:	ldr	x1, [sp, #112]
    5584:	str	x1, [x0, #48]
    5588:	ldr	x0, [sp, #120]
    558c:	ldr	x0, [x0, #32]
    5590:	str	x0, [sp, #88]
    5594:	ldr	x0, [sp, #88]
    5598:	cmp	x0, #0x0
    559c:	b.eq	55e4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x26bc>  // b.none
    55a0:	ldr	x0, [sp, #24]
    55a4:	ldr	x0, [x0, #24]
    55a8:	ldr	x1, [sp, #88]
    55ac:	cmp	x1, x0
    55b0:	cset	w0, cs  // cs = hs, nlast
    55b4:	and	w0, w0, #0xff
    55b8:	and	x0, x0, #0xff
    55bc:	cmp	x0, #0x0
    55c0:	b.eq	55e0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x26b8>  // b.none
    55c4:	ldr	x0, [sp, #208]
    55c8:	ldr	x1, [sp, #88]
    55cc:	str	x1, [x0, #32]
    55d0:	ldr	x0, [sp, #88]
    55d4:	ldr	x1, [sp, #208]
    55d8:	str	x1, [x0, #48]
    55dc:	b	55e4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x26bc>
    55e0:	bl	1b90 <abort@plt>
    55e4:	ldr	x0, [sp, #120]
    55e8:	ldr	x0, [x0, #40]
    55ec:	str	x0, [sp, #80]
    55f0:	ldr	x0, [sp, #80]
    55f4:	cmp	x0, #0x0
    55f8:	b.eq	5644 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x271c>  // b.none
    55fc:	ldr	x0, [sp, #24]
    5600:	ldr	x0, [x0, #24]
    5604:	ldr	x1, [sp, #80]
    5608:	cmp	x1, x0
    560c:	cset	w0, cs  // cs = hs, nlast
    5610:	and	w0, w0, #0xff
    5614:	and	x0, x0, #0xff
    5618:	cmp	x0, #0x0
    561c:	b.eq	563c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2714>  // b.none
    5620:	ldr	x0, [sp, #208]
    5624:	ldr	x1, [sp, #80]
    5628:	str	x1, [x0, #40]
    562c:	ldr	x0, [sp, #80]
    5630:	ldr	x1, [sp, #208]
    5634:	str	x1, [x0, #48]
    5638:	b	5644 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x271c>
    563c:	bl	1b90 <abort@plt>
    5640:	bl	1b90 <abort@plt>
    5644:	ldr	x1, [sp, #152]
    5648:	ldr	x0, [sp, #160]
    564c:	bl	a374 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x744c>
    5650:	cmp	w0, #0x0
    5654:	b.ne	5698 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2770>  // b.any
    5658:	ldr	x1, [sp, #232]
    565c:	ldr	x0, [sp, #152]
    5660:	add	x0, x1, x0
    5664:	str	x0, [sp, #232]
    5668:	ldr	x0, [sp, #24]
    566c:	ldr	x1, [x0, #848]
    5670:	ldr	x0, [sp, #152]
    5674:	sub	x1, x1, x0
    5678:	ldr	x0, [sp, #24]
    567c:	str	x1, [x0, #848]
    5680:	ldr	x0, [sp, #224]
    5684:	str	x0, [sp, #216]
    5688:	ldr	x0, [sp, #216]
    568c:	ldr	x1, [sp, #144]
    5690:	str	x1, [x0, #16]
    5694:	b	59fc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2ad4>
    5698:	ldr	x0, [sp, #128]
    569c:	lsr	x0, x0, #8
    56a0:	str	x0, [sp, #72]
    56a4:	ldr	x0, [sp, #72]
    56a8:	cmp	x0, #0x0
    56ac:	b.ne	56b8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2790>  // b.any
    56b0:	str	xzr, [sp, #184]
    56b4:	b	57a8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2880>
    56b8:	ldr	x1, [sp, #72]
    56bc:	mov	x0, #0xffff                	// #65535
    56c0:	cmp	x1, x0
    56c4:	b.ls	56d4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x27ac>  // b.plast
    56c8:	mov	x0, #0x1f                  	// #31
    56cc:	str	x0, [sp, #184]
    56d0:	b	57a8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2880>
    56d4:	ldr	x0, [sp, #72]
    56d8:	str	w0, [sp, #68]
    56dc:	ldr	w0, [sp, #68]
    56e0:	sub	w0, w0, #0x100
    56e4:	lsr	w0, w0, #16
    56e8:	and	w0, w0, #0x8
    56ec:	str	w0, [sp, #64]
    56f0:	ldr	w0, [sp, #64]
    56f4:	ldr	w1, [sp, #68]
    56f8:	lsl	w0, w1, w0
    56fc:	str	w0, [sp, #68]
    5700:	ldr	w0, [sp, #68]
    5704:	sub	w0, w0, #0x1, lsl #12
    5708:	lsr	w0, w0, #16
    570c:	and	w0, w0, #0x4
    5710:	str	w0, [sp, #60]
    5714:	ldr	w1, [sp, #64]
    5718:	ldr	w0, [sp, #60]
    571c:	add	w0, w1, w0
    5720:	str	w0, [sp, #64]
    5724:	ldr	w0, [sp, #60]
    5728:	ldr	w1, [sp, #68]
    572c:	lsl	w0, w1, w0
    5730:	str	w0, [sp, #68]
    5734:	ldr	w0, [sp, #68]
    5738:	sub	w0, w0, #0x4, lsl #12
    573c:	lsr	w0, w0, #16
    5740:	and	w0, w0, #0x2
    5744:	str	w0, [sp, #60]
    5748:	ldr	w0, [sp, #60]
    574c:	ldr	w1, [sp, #64]
    5750:	add	w0, w1, w0
    5754:	str	w0, [sp, #64]
    5758:	ldr	w0, [sp, #60]
    575c:	ldr	w1, [sp, #68]
    5760:	lsl	w0, w1, w0
    5764:	str	w0, [sp, #68]
    5768:	ldr	w0, [sp, #68]
    576c:	lsr	w1, w0, #15
    5770:	ldr	w0, [sp, #64]
    5774:	sub	w0, w1, w0
    5778:	add	w0, w0, #0xe
    577c:	str	w0, [sp, #60]
    5780:	ldr	w0, [sp, #60]
    5784:	lsl	w0, w0, #1
    5788:	mov	w1, w0
    578c:	ldr	w0, [sp, #60]
    5790:	add	w0, w0, #0x7
    5794:	ldr	x2, [sp, #128]
    5798:	lsr	x0, x2, x0
    579c:	and	x0, x0, #0x1
    57a0:	add	x0, x1, x0
    57a4:	str	x0, [sp, #184]
    57a8:	ldr	x0, [sp, #184]
    57ac:	add	x0, x0, #0x4a
    57b0:	lsl	x0, x0, #3
    57b4:	ldr	x1, [sp, #24]
    57b8:	add	x0, x1, x0
    57bc:	str	x0, [sp, #48]
    57c0:	ldr	x0, [sp, #120]
    57c4:	ldr	x1, [sp, #184]
    57c8:	str	x1, [x0, #56]
    57cc:	ldr	x0, [sp, #120]
    57d0:	str	xzr, [x0, #40]
    57d4:	ldr	x0, [sp, #120]
    57d8:	ldr	x1, [x0, #40]
    57dc:	ldr	x0, [sp, #120]
    57e0:	str	x1, [x0, #32]
    57e4:	ldr	x0, [sp, #24]
    57e8:	ldr	w1, [x0, #4]
    57ec:	ldr	x0, [sp, #184]
    57f0:	mov	w2, w0
    57f4:	mov	w0, #0x1                   	// #1
    57f8:	lsl	w0, w0, w2
    57fc:	and	w0, w1, w0
    5800:	cmp	w0, #0x0
    5804:	b.ne	5864 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x293c>  // b.any
    5808:	ldr	x0, [sp, #24]
    580c:	ldr	w1, [x0, #4]
    5810:	ldr	x0, [sp, #184]
    5814:	mov	w2, w0
    5818:	mov	w0, #0x1                   	// #1
    581c:	lsl	w0, w0, w2
    5820:	orr	w1, w1, w0
    5824:	ldr	x0, [sp, #24]
    5828:	str	w1, [x0, #4]
    582c:	ldr	x0, [sp, #48]
    5830:	ldr	x1, [sp, #120]
    5834:	str	x1, [x0]
    5838:	ldr	x0, [sp, #120]
    583c:	ldr	x1, [sp, #48]
    5840:	str	x1, [x0, #48]
    5844:	ldr	x0, [sp, #120]
    5848:	ldr	x1, [sp, #120]
    584c:	str	x1, [x0, #24]
    5850:	ldr	x0, [sp, #120]
    5854:	ldr	x1, [x0, #24]
    5858:	ldr	x0, [sp, #120]
    585c:	str	x1, [x0, #16]
    5860:	b	59fc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2ad4>
    5864:	ldr	x0, [sp, #48]
    5868:	ldr	x0, [x0]
    586c:	str	x0, [sp, #176]
    5870:	ldr	x0, [sp, #184]
    5874:	cmp	x0, #0x1f
    5878:	b.eq	5894 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x296c>  // b.none
    587c:	ldr	x0, [sp, #184]
    5880:	lsr	x0, x0, #1
    5884:	mov	w1, w0
    5888:	mov	w0, #0x39                  	// #57
    588c:	sub	w0, w0, w1
    5890:	b	5898 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2970>
    5894:	mov	w0, #0x0                   	// #0
    5898:	ldr	x1, [sp, #128]
    589c:	lsl	x0, x1, x0
    58a0:	str	x0, [sp, #168]
    58a4:	ldr	x0, [sp, #176]
    58a8:	ldr	x0, [x0, #8]
    58ac:	and	x0, x0, #0xfffffffffffffffc
    58b0:	ldr	x1, [sp, #128]
    58b4:	cmp	x1, x0
    58b8:	b.eq	5964 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2a3c>  // b.none
    58bc:	ldr	x0, [sp, #168]
    58c0:	lsr	x0, x0, #63
    58c4:	add	x0, x0, #0x4
    58c8:	lsl	x0, x0, #3
    58cc:	ldr	x1, [sp, #176]
    58d0:	add	x0, x1, x0
    58d4:	str	x0, [sp, #32]
    58d8:	ldr	x0, [sp, #168]
    58dc:	lsl	x0, x0, #1
    58e0:	str	x0, [sp, #168]
    58e4:	ldr	x0, [sp, #32]
    58e8:	ldr	x0, [x0]
    58ec:	cmp	x0, #0x0
    58f0:	b.eq	5904 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x29dc>  // b.none
    58f4:	ldr	x0, [sp, #32]
    58f8:	ldr	x0, [x0]
    58fc:	str	x0, [sp, #176]
    5900:	b	58a4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x297c>
    5904:	ldr	x0, [sp, #24]
    5908:	ldr	x0, [x0, #24]
    590c:	ldr	x1, [sp, #32]
    5910:	cmp	x1, x0
    5914:	cset	w0, cs  // cs = hs, nlast
    5918:	and	w0, w0, #0xff
    591c:	and	x0, x0, #0xff
    5920:	cmp	x0, #0x0
    5924:	b.eq	5960 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2a38>  // b.none
    5928:	ldr	x0, [sp, #32]
    592c:	ldr	x1, [sp, #120]
    5930:	str	x1, [x0]
    5934:	ldr	x0, [sp, #120]
    5938:	ldr	x1, [sp, #176]
    593c:	str	x1, [x0, #48]
    5940:	ldr	x0, [sp, #120]
    5944:	ldr	x1, [sp, #120]
    5948:	str	x1, [x0, #24]
    594c:	ldr	x0, [sp, #120]
    5950:	ldr	x1, [x0, #24]
    5954:	ldr	x0, [sp, #120]
    5958:	str	x1, [x0, #16]
    595c:	b	59fc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2ad4>
    5960:	bl	1b90 <abort@plt>
    5964:	ldr	x0, [sp, #176]
    5968:	ldr	x0, [x0, #16]
    596c:	str	x0, [sp, #40]
    5970:	ldr	x0, [sp, #24]
    5974:	ldr	x0, [x0, #24]
    5978:	ldr	x1, [sp, #176]
    597c:	cmp	x1, x0
    5980:	cset	w0, cs  // cs = hs, nlast
    5984:	and	w0, w0, #0xff
    5988:	and	x0, x0, #0xff
    598c:	cmp	x0, #0x0
    5990:	b.eq	59f8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2ad0>  // b.none
    5994:	ldr	x0, [sp, #24]
    5998:	ldr	x0, [x0, #24]
    599c:	ldr	x1, [sp, #40]
    59a0:	cmp	x1, x0
    59a4:	cset	w0, cs  // cs = hs, nlast
    59a8:	and	w0, w0, #0xff
    59ac:	and	x0, x0, #0xff
    59b0:	cmp	x0, #0x0
    59b4:	b.eq	59f8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2ad0>  // b.none
    59b8:	ldr	x0, [sp, #40]
    59bc:	ldr	x1, [sp, #120]
    59c0:	str	x1, [x0, #24]
    59c4:	ldr	x0, [sp, #40]
    59c8:	ldr	x1, [x0, #24]
    59cc:	ldr	x0, [sp, #176]
    59d0:	str	x1, [x0, #16]
    59d4:	ldr	x0, [sp, #120]
    59d8:	ldr	x1, [sp, #40]
    59dc:	str	x1, [x0, #16]
    59e0:	ldr	x0, [sp, #120]
    59e4:	ldr	x1, [sp, #176]
    59e8:	str	x1, [x0, #24]
    59ec:	ldr	x0, [sp, #120]
    59f0:	str	xzr, [x0, #48]
    59f4:	b	59fc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2ad4>
    59f8:	bl	1b90 <abort@plt>
    59fc:	ldr	x0, [sp, #216]
    5a00:	str	x0, [sp, #224]
    5a04:	ldr	x0, [sp, #144]
    5a08:	str	x0, [sp, #216]
    5a0c:	ldr	x0, [sp, #216]
    5a10:	cmp	x0, #0x0
    5a14:	b.ne	524c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2324>  // b.any
    5a18:	ldr	x0, [sp, #232]
    5a1c:	ldp	x29, x30, [sp], #240
    5a20:	ret
    5a24:	stp	x29, x30, [sp, #-80]!
    5a28:	mov	x29, sp
    5a2c:	str	x0, [sp, #24]
    5a30:	str	x1, [sp, #16]
    5a34:	str	xzr, [sp, #72]
    5a38:	ldr	x0, [sp, #16]
    5a3c:	cmn	x0, #0x81
    5a40:	b.hi	5bc8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2ca0>  // b.pmore
    5a44:	ldr	x0, [sp, #24]
    5a48:	ldr	x0, [x0, #40]
    5a4c:	cmp	x0, #0x0
    5a50:	b.eq	5bc8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2ca0>  // b.none
    5a54:	ldr	x0, [sp, #16]
    5a58:	add	x0, x0, #0x48
    5a5c:	str	x0, [sp, #16]
    5a60:	ldr	x0, [sp, #24]
    5a64:	ldr	x0, [x0, #16]
    5a68:	ldr	x1, [sp, #16]
    5a6c:	cmp	x1, x0
    5a70:	b.cs	5b98 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2c70>  // b.hs, b.nlast
    5a74:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    5a78:	add	x0, x0, #0x280
    5a7c:	ldr	x0, [x0, #16]
    5a80:	str	x0, [sp, #64]
    5a84:	ldr	x0, [sp, #24]
    5a88:	ldr	x1, [x0, #16]
    5a8c:	ldr	x0, [sp, #16]
    5a90:	sub	x1, x1, x0
    5a94:	ldr	x0, [sp, #64]
    5a98:	add	x0, x1, x0
    5a9c:	sub	x1, x0, #0x1
    5aa0:	ldr	x0, [sp, #64]
    5aa4:	udiv	x0, x1, x0
    5aa8:	sub	x0, x0, #0x1
    5aac:	ldr	x1, [sp, #64]
    5ab0:	mul	x0, x1, x0
    5ab4:	str	x0, [sp, #56]
    5ab8:	ldr	x0, [sp, #24]
    5abc:	ldr	x0, [x0, #40]
    5ac0:	mov	x1, x0
    5ac4:	ldr	x0, [sp, #24]
    5ac8:	bl	3094 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x16c>
    5acc:	str	x0, [sp, #48]
    5ad0:	ldr	x0, [sp, #48]
    5ad4:	ldr	x0, [x0, #8]
    5ad8:	ldr	x1, [sp, #56]
    5adc:	cmp	x1, x0
    5ae0:	b.hi	5b34 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2c0c>  // b.pmore
    5ae4:	ldr	x1, [sp, #48]
    5ae8:	ldr	x0, [sp, #24]
    5aec:	bl	310c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1e4>
    5af0:	cmp	w0, #0x0
    5af4:	b.ne	5b34 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2c0c>  // b.any
    5af8:	ldr	x0, [sp, #48]
    5afc:	ldr	x1, [x0, #8]
    5b00:	ldr	x0, [sp, #56]
    5b04:	sub	x0, x1, x0
    5b08:	str	x0, [sp, #40]
    5b0c:	ldr	x0, [sp, #48]
    5b10:	ldr	x1, [x0]
    5b14:	ldr	x0, [sp, #40]
    5b18:	add	x0, x1, x0
    5b1c:	ldr	x1, [sp, #56]
    5b20:	bl	a374 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x744c>
    5b24:	cmp	w0, #0x0
    5b28:	b.ne	5b34 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2c0c>  // b.any
    5b2c:	ldr	x0, [sp, #56]
    5b30:	str	x0, [sp, #72]
    5b34:	ldr	x0, [sp, #72]
    5b38:	cmp	x0, #0x0
    5b3c:	b.eq	5b98 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2c70>  // b.none
    5b40:	ldr	x0, [sp, #48]
    5b44:	ldr	x1, [x0, #8]
    5b48:	ldr	x0, [sp, #72]
    5b4c:	sub	x1, x1, x0
    5b50:	ldr	x0, [sp, #48]
    5b54:	str	x1, [x0, #8]
    5b58:	ldr	x0, [sp, #24]
    5b5c:	ldr	x1, [x0, #848]
    5b60:	ldr	x0, [sp, #72]
    5b64:	sub	x1, x1, x0
    5b68:	ldr	x0, [sp, #24]
    5b6c:	str	x1, [x0, #848]
    5b70:	ldr	x0, [sp, #24]
    5b74:	ldr	x3, [x0, #40]
    5b78:	ldr	x0, [sp, #24]
    5b7c:	ldr	x1, [x0, #16]
    5b80:	ldr	x0, [sp, #72]
    5b84:	sub	x0, x1, x0
    5b88:	mov	x2, x0
    5b8c:	mov	x1, x3
    5b90:	ldr	x0, [sp, #24]
    5b94:	bl	3948 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0xa20>
    5b98:	ldr	x0, [sp, #24]
    5b9c:	bl	5220 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x22f8>
    5ba0:	mov	x1, x0
    5ba4:	ldr	x0, [sp, #72]
    5ba8:	add	x0, x0, x1
    5bac:	str	x0, [sp, #72]
    5bb0:	ldr	x0, [sp, #72]
    5bb4:	cmp	x0, #0x0
    5bb8:	b.ne	5bc8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2ca0>  // b.any
    5bbc:	ldr	x0, [sp, #24]
    5bc0:	mov	x1, #0xffffffffffffffff    	// #-1
    5bc4:	str	x1, [x0, #48]
    5bc8:	ldr	x0, [sp, #72]
    5bcc:	cmp	x0, #0x0
    5bd0:	cset	w0, ne  // ne = any
    5bd4:	and	w0, w0, #0xff
    5bd8:	ldp	x29, x30, [sp], #80
    5bdc:	ret
    5be0:	stp	x29, x30, [sp, #-320]!
    5be4:	mov	x29, sp
    5be8:	str	x0, [sp, #24]
    5bec:	str	x1, [sp, #16]
    5bf0:	str	xzr, [sp, #312]
    5bf4:	ldr	x0, [sp, #16]
    5bf8:	neg	x0, x0
    5bfc:	str	x0, [sp, #304]
    5c00:	ldr	x0, [sp, #16]
    5c04:	lsr	x0, x0, #8
    5c08:	str	x0, [sp, #208]
    5c0c:	ldr	x0, [sp, #208]
    5c10:	cmp	x0, #0x0
    5c14:	b.ne	5c20 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2cf8>  // b.any
    5c18:	str	xzr, [sp, #288]
    5c1c:	b	5d10 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2de8>
    5c20:	ldr	x1, [sp, #208]
    5c24:	mov	x0, #0xffff                	// #65535
    5c28:	cmp	x1, x0
    5c2c:	b.ls	5c3c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2d14>  // b.plast
    5c30:	mov	x0, #0x1f                  	// #31
    5c34:	str	x0, [sp, #288]
    5c38:	b	5d10 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2de8>
    5c3c:	ldr	x0, [sp, #208]
    5c40:	str	w0, [sp, #204]
    5c44:	ldr	w0, [sp, #204]
    5c48:	sub	w0, w0, #0x100
    5c4c:	lsr	w0, w0, #16
    5c50:	and	w0, w0, #0x8
    5c54:	str	w0, [sp, #200]
    5c58:	ldr	w0, [sp, #200]
    5c5c:	ldr	w1, [sp, #204]
    5c60:	lsl	w0, w1, w0
    5c64:	str	w0, [sp, #204]
    5c68:	ldr	w0, [sp, #204]
    5c6c:	sub	w0, w0, #0x1, lsl #12
    5c70:	lsr	w0, w0, #16
    5c74:	and	w0, w0, #0x4
    5c78:	str	w0, [sp, #196]
    5c7c:	ldr	w1, [sp, #200]
    5c80:	ldr	w0, [sp, #196]
    5c84:	add	w0, w1, w0
    5c88:	str	w0, [sp, #200]
    5c8c:	ldr	w0, [sp, #196]
    5c90:	ldr	w1, [sp, #204]
    5c94:	lsl	w0, w1, w0
    5c98:	str	w0, [sp, #204]
    5c9c:	ldr	w0, [sp, #204]
    5ca0:	sub	w0, w0, #0x4, lsl #12
    5ca4:	lsr	w0, w0, #16
    5ca8:	and	w0, w0, #0x2
    5cac:	str	w0, [sp, #196]
    5cb0:	ldr	w0, [sp, #196]
    5cb4:	ldr	w1, [sp, #200]
    5cb8:	add	w0, w1, w0
    5cbc:	str	w0, [sp, #200]
    5cc0:	ldr	w0, [sp, #196]
    5cc4:	ldr	w1, [sp, #204]
    5cc8:	lsl	w0, w1, w0
    5ccc:	str	w0, [sp, #204]
    5cd0:	ldr	w0, [sp, #204]
    5cd4:	lsr	w1, w0, #15
    5cd8:	ldr	w0, [sp, #200]
    5cdc:	sub	w0, w1, w0
    5ce0:	add	w0, w0, #0xe
    5ce4:	str	w0, [sp, #196]
    5ce8:	ldr	w0, [sp, #196]
    5cec:	lsl	w0, w0, #1
    5cf0:	mov	w1, w0
    5cf4:	ldr	w0, [sp, #196]
    5cf8:	add	w0, w0, #0x7
    5cfc:	ldr	x2, [sp, #16]
    5d00:	lsr	x0, x2, x0
    5d04:	and	x0, x0, #0x1
    5d08:	add	x0, x1, x0
    5d0c:	str	x0, [sp, #288]
    5d10:	ldr	x0, [sp, #24]
    5d14:	ldr	x1, [sp, #288]
    5d18:	add	x1, x1, #0x4a
    5d1c:	ldr	x0, [x0, x1, lsl #3]
    5d20:	str	x0, [sp, #296]
    5d24:	ldr	x0, [sp, #296]
    5d28:	cmp	x0, #0x0
    5d2c:	b.eq	5e20 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2ef8>  // b.none
    5d30:	ldr	x0, [sp, #288]
    5d34:	cmp	x0, #0x1f
    5d38:	b.eq	5d54 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2e2c>  // b.none
    5d3c:	ldr	x0, [sp, #288]
    5d40:	lsr	x0, x0, #1
    5d44:	mov	w1, w0
    5d48:	mov	w0, #0x39                  	// #57
    5d4c:	sub	w0, w0, w1
    5d50:	b	5d58 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2e30>
    5d54:	mov	w0, #0x0                   	// #0
    5d58:	ldr	x1, [sp, #16]
    5d5c:	lsl	x0, x1, x0
    5d60:	str	x0, [sp, #280]
    5d64:	str	xzr, [sp, #272]
    5d68:	ldr	x0, [sp, #296]
    5d6c:	ldr	x0, [x0, #8]
    5d70:	and	x1, x0, #0xfffffffffffffffc
    5d74:	ldr	x0, [sp, #16]
    5d78:	sub	x0, x1, x0
    5d7c:	str	x0, [sp, #184]
    5d80:	ldr	x1, [sp, #184]
    5d84:	ldr	x0, [sp, #304]
    5d88:	cmp	x1, x0
    5d8c:	b.cs	5dac <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2e84>  // b.hs, b.nlast
    5d90:	ldr	x0, [sp, #296]
    5d94:	str	x0, [sp, #312]
    5d98:	ldr	x0, [sp, #184]
    5d9c:	str	x0, [sp, #304]
    5da0:	ldr	x0, [sp, #304]
    5da4:	cmp	x0, #0x0
    5da8:	b.eq	5e1c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2ef4>  // b.none
    5dac:	ldr	x0, [sp, #296]
    5db0:	ldr	x0, [x0, #40]
    5db4:	str	x0, [sp, #176]
    5db8:	ldr	x0, [sp, #280]
    5dbc:	lsr	x1, x0, #63
    5dc0:	ldr	x0, [sp, #296]
    5dc4:	add	x1, x1, #0x4
    5dc8:	ldr	x0, [x0, x1, lsl #3]
    5dcc:	str	x0, [sp, #296]
    5dd0:	ldr	x0, [sp, #176]
    5dd4:	cmp	x0, #0x0
    5dd8:	b.eq	5df4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2ecc>  // b.none
    5ddc:	ldr	x1, [sp, #176]
    5de0:	ldr	x0, [sp, #296]
    5de4:	cmp	x1, x0
    5de8:	b.eq	5df4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2ecc>  // b.none
    5dec:	ldr	x0, [sp, #176]
    5df0:	str	x0, [sp, #272]
    5df4:	ldr	x0, [sp, #296]
    5df8:	cmp	x0, #0x0
    5dfc:	b.ne	5e0c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2ee4>  // b.any
    5e00:	ldr	x0, [sp, #272]
    5e04:	str	x0, [sp, #296]
    5e08:	b	5e20 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2ef8>
    5e0c:	ldr	x0, [sp, #280]
    5e10:	lsl	x0, x0, #1
    5e14:	str	x0, [sp, #280]
    5e18:	b	5d68 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2e40>
    5e1c:	nop
    5e20:	ldr	x0, [sp, #296]
    5e24:	cmp	x0, #0x0
    5e28:	b.ne	5f24 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2ffc>  // b.any
    5e2c:	ldr	x0, [sp, #312]
    5e30:	cmp	x0, #0x0
    5e34:	b.ne	5f24 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2ffc>  // b.any
    5e38:	ldr	x0, [sp, #288]
    5e3c:	mov	w1, w0
    5e40:	mov	w0, #0x1                   	// #1
    5e44:	lsl	w0, w0, w1
    5e48:	lsl	w1, w0, #1
    5e4c:	ldr	x0, [sp, #288]
    5e50:	mov	w2, w0
    5e54:	mov	w0, #0x1                   	// #1
    5e58:	lsl	w0, w0, w2
    5e5c:	lsl	w0, w0, #1
    5e60:	neg	w0, w0
    5e64:	orr	w1, w1, w0
    5e68:	ldr	x0, [sp, #24]
    5e6c:	ldr	w0, [x0, #4]
    5e70:	and	w0, w1, w0
    5e74:	str	w0, [sp, #172]
    5e78:	ldr	w0, [sp, #172]
    5e7c:	cmp	w0, #0x0
    5e80:	b.eq	5f24 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2ffc>  // b.none
    5e84:	ldr	w0, [sp, #172]
    5e88:	neg	w0, w0
    5e8c:	ldr	w1, [sp, #172]
    5e90:	and	w0, w1, w0
    5e94:	str	w0, [sp, #168]
    5e98:	ldr	w0, [sp, #168]
    5e9c:	bl	1ca0 <ffs@plt>
    5ea0:	sub	w0, w0, #0x1
    5ea4:	sxtw	x0, w0
    5ea8:	str	x0, [sp, #160]
    5eac:	ldr	x0, [sp, #24]
    5eb0:	ldr	x1, [sp, #160]
    5eb4:	add	x1, x1, #0x4a
    5eb8:	ldr	x0, [x0, x1, lsl #3]
    5ebc:	str	x0, [sp, #296]
    5ec0:	b	5f24 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2ffc>
    5ec4:	ldr	x0, [sp, #296]
    5ec8:	ldr	x0, [x0, #8]
    5ecc:	and	x1, x0, #0xfffffffffffffffc
    5ed0:	ldr	x0, [sp, #16]
    5ed4:	sub	x0, x1, x0
    5ed8:	str	x0, [sp, #32]
    5edc:	ldr	x1, [sp, #32]
    5ee0:	ldr	x0, [sp, #304]
    5ee4:	cmp	x1, x0
    5ee8:	b.cs	5efc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2fd4>  // b.hs, b.nlast
    5eec:	ldr	x0, [sp, #32]
    5ef0:	str	x0, [sp, #304]
    5ef4:	ldr	x0, [sp, #296]
    5ef8:	str	x0, [sp, #312]
    5efc:	ldr	x0, [sp, #296]
    5f00:	ldr	x0, [x0, #32]
    5f04:	cmp	x0, #0x0
    5f08:	b.eq	5f18 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2ff0>  // b.none
    5f0c:	ldr	x0, [sp, #296]
    5f10:	ldr	x0, [x0, #32]
    5f14:	b	5f20 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2ff8>
    5f18:	ldr	x0, [sp, #296]
    5f1c:	ldr	x0, [x0, #40]
    5f20:	str	x0, [sp, #296]
    5f24:	ldr	x0, [sp, #296]
    5f28:	cmp	x0, #0x0
    5f2c:	b.ne	5ec4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2f9c>  // b.any
    5f30:	ldr	x0, [sp, #312]
    5f34:	cmp	x0, #0x0
    5f38:	b.eq	67d8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x38b0>  // b.none
    5f3c:	ldr	x0, [sp, #24]
    5f40:	ldr	x1, [x0, #8]
    5f44:	ldr	x0, [sp, #16]
    5f48:	sub	x0, x1, x0
    5f4c:	ldr	x1, [sp, #304]
    5f50:	cmp	x1, x0
    5f54:	b.cs	67d8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x38b0>  // b.hs, b.nlast
    5f58:	ldr	x0, [sp, #24]
    5f5c:	ldr	x0, [x0, #24]
    5f60:	ldr	x1, [sp, #312]
    5f64:	cmp	x1, x0
    5f68:	cset	w0, cs  // cs = hs, nlast
    5f6c:	and	w0, w0, #0xff
    5f70:	and	x0, x0, #0xff
    5f74:	cmp	x0, #0x0
    5f78:	b.eq	67d4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x38ac>  // b.none
    5f7c:	ldr	x1, [sp, #312]
    5f80:	ldr	x0, [sp, #16]
    5f84:	add	x0, x1, x0
    5f88:	str	x0, [sp, #152]
    5f8c:	ldr	x1, [sp, #312]
    5f90:	ldr	x0, [sp, #152]
    5f94:	cmp	x1, x0
    5f98:	cset	w0, cc  // cc = lo, ul, last
    5f9c:	and	w0, w0, #0xff
    5fa0:	and	x0, x0, #0xff
    5fa4:	cmp	x0, #0x0
    5fa8:	b.eq	67d4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x38ac>  // b.none
    5fac:	ldr	x0, [sp, #312]
    5fb0:	ldr	x0, [x0, #48]
    5fb4:	str	x0, [sp, #144]
    5fb8:	ldr	x0, [sp, #312]
    5fbc:	ldr	x0, [x0, #24]
    5fc0:	ldr	x1, [sp, #312]
    5fc4:	cmp	x1, x0
    5fc8:	b.eq	6028 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3100>  // b.none
    5fcc:	ldr	x0, [sp, #312]
    5fd0:	ldr	x0, [x0, #16]
    5fd4:	str	x0, [sp, #136]
    5fd8:	ldr	x0, [sp, #312]
    5fdc:	ldr	x0, [x0, #24]
    5fe0:	str	x0, [sp, #264]
    5fe4:	ldr	x0, [sp, #24]
    5fe8:	ldr	x0, [x0, #24]
    5fec:	ldr	x1, [sp, #136]
    5ff0:	cmp	x1, x0
    5ff4:	cset	w0, cs  // cs = hs, nlast
    5ff8:	and	w0, w0, #0xff
    5ffc:	and	x0, x0, #0xff
    6000:	cmp	x0, #0x0
    6004:	b.eq	6024 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x30fc>  // b.none
    6008:	ldr	x0, [sp, #136]
    600c:	ldr	x1, [sp, #264]
    6010:	str	x1, [x0, #24]
    6014:	ldr	x0, [sp, #264]
    6018:	ldr	x1, [sp, #136]
    601c:	str	x1, [x0, #16]
    6020:	b	60f4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x31cc>
    6024:	bl	1b90 <abort@plt>
    6028:	ldr	x0, [sp, #312]
    602c:	add	x0, x0, #0x28
    6030:	str	x0, [sp, #256]
    6034:	ldr	x0, [sp, #256]
    6038:	ldr	x0, [x0]
    603c:	str	x0, [sp, #264]
    6040:	ldr	x0, [sp, #264]
    6044:	cmp	x0, #0x0
    6048:	b.ne	6088 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3160>  // b.any
    604c:	ldr	x0, [sp, #312]
    6050:	add	x0, x0, #0x20
    6054:	str	x0, [sp, #256]
    6058:	ldr	x0, [sp, #256]
    605c:	ldr	x0, [x0]
    6060:	str	x0, [sp, #264]
    6064:	ldr	x0, [sp, #264]
    6068:	cmp	x0, #0x0
    606c:	b.eq	60f4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x31cc>  // b.none
    6070:	b	6088 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3160>
    6074:	ldr	x0, [sp, #248]
    6078:	str	x0, [sp, #256]
    607c:	ldr	x0, [sp, #256]
    6080:	ldr	x0, [x0]
    6084:	str	x0, [sp, #264]
    6088:	ldr	x0, [sp, #264]
    608c:	add	x0, x0, #0x28
    6090:	str	x0, [sp, #248]
    6094:	ldr	x0, [sp, #248]
    6098:	ldr	x0, [x0]
    609c:	cmp	x0, #0x0
    60a0:	b.ne	6074 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x314c>  // b.any
    60a4:	ldr	x0, [sp, #264]
    60a8:	add	x0, x0, #0x20
    60ac:	str	x0, [sp, #248]
    60b0:	ldr	x0, [sp, #248]
    60b4:	ldr	x0, [x0]
    60b8:	cmp	x0, #0x0
    60bc:	b.ne	6074 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x314c>  // b.any
    60c0:	ldr	x0, [sp, #24]
    60c4:	ldr	x0, [x0, #24]
    60c8:	ldr	x1, [sp, #256]
    60cc:	cmp	x1, x0
    60d0:	cset	w0, cs  // cs = hs, nlast
    60d4:	and	w0, w0, #0xff
    60d8:	and	x0, x0, #0xff
    60dc:	cmp	x0, #0x0
    60e0:	b.eq	60f0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x31c8>  // b.none
    60e4:	ldr	x0, [sp, #256]
    60e8:	str	xzr, [x0]
    60ec:	b	60f4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x31cc>
    60f0:	bl	1b90 <abort@plt>
    60f4:	ldr	x0, [sp, #144]
    60f8:	cmp	x0, #0x0
    60fc:	b.eq	62d0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x33a8>  // b.none
    6100:	ldr	x0, [sp, #312]
    6104:	ldr	x0, [x0, #56]
    6108:	add	x0, x0, #0x4a
    610c:	lsl	x0, x0, #3
    6110:	ldr	x1, [sp, #24]
    6114:	add	x0, x1, x0
    6118:	str	x0, [sp, #128]
    611c:	ldr	x0, [sp, #128]
    6120:	ldr	x0, [x0]
    6124:	ldr	x1, [sp, #312]
    6128:	cmp	x1, x0
    612c:	b.ne	617c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3254>  // b.any
    6130:	ldr	x0, [sp, #128]
    6134:	ldr	x1, [sp, #264]
    6138:	str	x1, [x0]
    613c:	ldr	x0, [sp, #128]
    6140:	ldr	x0, [x0]
    6144:	cmp	x0, #0x0
    6148:	b.ne	61d8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x32b0>  // b.any
    614c:	ldr	x0, [sp, #24]
    6150:	ldr	w1, [x0, #4]
    6154:	ldr	x0, [sp, #312]
    6158:	ldr	x0, [x0, #56]
    615c:	mov	w2, w0
    6160:	mov	w0, #0x1                   	// #1
    6164:	lsl	w0, w0, w2
    6168:	mvn	w0, w0
    616c:	and	w1, w1, w0
    6170:	ldr	x0, [sp, #24]
    6174:	str	w1, [x0, #4]
    6178:	b	61d8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x32b0>
    617c:	ldr	x0, [sp, #24]
    6180:	ldr	x0, [x0, #24]
    6184:	ldr	x1, [sp, #144]
    6188:	cmp	x1, x0
    618c:	cset	w0, cs  // cs = hs, nlast
    6190:	and	w0, w0, #0xff
    6194:	and	x0, x0, #0xff
    6198:	cmp	x0, #0x0
    619c:	b.eq	61d4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x32ac>  // b.none
    61a0:	ldr	x0, [sp, #144]
    61a4:	ldr	x0, [x0, #32]
    61a8:	ldr	x1, [sp, #312]
    61ac:	cmp	x1, x0
    61b0:	b.ne	61c4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x329c>  // b.any
    61b4:	ldr	x0, [sp, #144]
    61b8:	ldr	x1, [sp, #264]
    61bc:	str	x1, [x0, #32]
    61c0:	b	61d8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x32b0>
    61c4:	ldr	x0, [sp, #144]
    61c8:	ldr	x1, [sp, #264]
    61cc:	str	x1, [x0, #40]
    61d0:	b	61d8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x32b0>
    61d4:	bl	1b90 <abort@plt>
    61d8:	ldr	x0, [sp, #264]
    61dc:	cmp	x0, #0x0
    61e0:	b.eq	62d0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x33a8>  // b.none
    61e4:	ldr	x0, [sp, #24]
    61e8:	ldr	x0, [x0, #24]
    61ec:	ldr	x1, [sp, #264]
    61f0:	cmp	x1, x0
    61f4:	cset	w0, cs  // cs = hs, nlast
    61f8:	and	w0, w0, #0xff
    61fc:	and	x0, x0, #0xff
    6200:	cmp	x0, #0x0
    6204:	b.eq	62cc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x33a4>  // b.none
    6208:	ldr	x0, [sp, #264]
    620c:	ldr	x1, [sp, #144]
    6210:	str	x1, [x0, #48]
    6214:	ldr	x0, [sp, #312]
    6218:	ldr	x0, [x0, #32]
    621c:	str	x0, [sp, #120]
    6220:	ldr	x0, [sp, #120]
    6224:	cmp	x0, #0x0
    6228:	b.eq	6270 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3348>  // b.none
    622c:	ldr	x0, [sp, #24]
    6230:	ldr	x0, [x0, #24]
    6234:	ldr	x1, [sp, #120]
    6238:	cmp	x1, x0
    623c:	cset	w0, cs  // cs = hs, nlast
    6240:	and	w0, w0, #0xff
    6244:	and	x0, x0, #0xff
    6248:	cmp	x0, #0x0
    624c:	b.eq	626c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3344>  // b.none
    6250:	ldr	x0, [sp, #264]
    6254:	ldr	x1, [sp, #120]
    6258:	str	x1, [x0, #32]
    625c:	ldr	x0, [sp, #120]
    6260:	ldr	x1, [sp, #264]
    6264:	str	x1, [x0, #48]
    6268:	b	6270 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3348>
    626c:	bl	1b90 <abort@plt>
    6270:	ldr	x0, [sp, #312]
    6274:	ldr	x0, [x0, #40]
    6278:	str	x0, [sp, #112]
    627c:	ldr	x0, [sp, #112]
    6280:	cmp	x0, #0x0
    6284:	b.eq	62d0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x33a8>  // b.none
    6288:	ldr	x0, [sp, #24]
    628c:	ldr	x0, [x0, #24]
    6290:	ldr	x1, [sp, #112]
    6294:	cmp	x1, x0
    6298:	cset	w0, cs  // cs = hs, nlast
    629c:	and	w0, w0, #0xff
    62a0:	and	x0, x0, #0xff
    62a4:	cmp	x0, #0x0
    62a8:	b.eq	62c8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x33a0>  // b.none
    62ac:	ldr	x0, [sp, #264]
    62b0:	ldr	x1, [sp, #112]
    62b4:	str	x1, [x0, #40]
    62b8:	ldr	x0, [sp, #112]
    62bc:	ldr	x1, [sp, #264]
    62c0:	str	x1, [x0, #48]
    62c4:	b	62d0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x33a8>
    62c8:	bl	1b90 <abort@plt>
    62cc:	bl	1b90 <abort@plt>
    62d0:	ldr	x0, [sp, #304]
    62d4:	cmp	x0, #0x1f
    62d8:	b.hi	632c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3404>  // b.pmore
    62dc:	ldr	x1, [sp, #304]
    62e0:	ldr	x0, [sp, #16]
    62e4:	add	x0, x1, x0
    62e8:	orr	x1, x0, #0x3
    62ec:	ldr	x0, [sp, #312]
    62f0:	str	x1, [x0, #8]
    62f4:	ldr	x1, [sp, #304]
    62f8:	ldr	x0, [sp, #16]
    62fc:	add	x0, x1, x0
    6300:	ldr	x1, [sp, #312]
    6304:	add	x0, x1, x0
    6308:	ldr	x1, [x0, #8]
    630c:	ldr	x2, [sp, #304]
    6310:	ldr	x0, [sp, #16]
    6314:	add	x0, x2, x0
    6318:	ldr	x2, [sp, #312]
    631c:	add	x0, x2, x0
    6320:	orr	x1, x1, #0x1
    6324:	str	x1, [x0, #8]
    6328:	b	67c8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x38a0>
    632c:	ldr	x0, [sp, #16]
    6330:	orr	x1, x0, #0x3
    6334:	ldr	x0, [sp, #312]
    6338:	str	x1, [x0, #8]
    633c:	ldr	x0, [sp, #304]
    6340:	orr	x1, x0, #0x1
    6344:	ldr	x0, [sp, #152]
    6348:	str	x1, [x0, #8]
    634c:	ldr	x1, [sp, #152]
    6350:	ldr	x0, [sp, #304]
    6354:	add	x0, x1, x0
    6358:	ldr	x1, [sp, #304]
    635c:	str	x1, [x0]
    6360:	ldr	x0, [sp, #304]
    6364:	lsr	x0, x0, #3
    6368:	cmp	x0, #0x1f
    636c:	b.hi	645c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3534>  // b.pmore
    6370:	ldr	x0, [sp, #304]
    6374:	lsr	x0, x0, #3
    6378:	str	x0, [sp, #48]
    637c:	ldr	x0, [sp, #48]
    6380:	lsl	x0, x0, #1
    6384:	add	x0, x0, #0x8
    6388:	lsl	x0, x0, #3
    638c:	ldr	x1, [sp, #24]
    6390:	add	x0, x1, x0
    6394:	str	x0, [sp, #40]
    6398:	ldr	x0, [sp, #40]
    639c:	str	x0, [sp, #240]
    63a0:	ldr	x0, [sp, #24]
    63a4:	ldr	w1, [x0]
    63a8:	ldr	x0, [sp, #48]
    63ac:	mov	w2, w0
    63b0:	mov	w0, #0x1                   	// #1
    63b4:	lsl	w0, w0, w2
    63b8:	and	w0, w1, w0
    63bc:	cmp	w0, #0x0
    63c0:	b.ne	63ec <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x34c4>  // b.any
    63c4:	ldr	x0, [sp, #24]
    63c8:	ldr	w1, [x0]
    63cc:	ldr	x0, [sp, #48]
    63d0:	mov	w2, w0
    63d4:	mov	w0, #0x1                   	// #1
    63d8:	lsl	w0, w0, w2
    63dc:	orr	w1, w1, w0
    63e0:	ldr	x0, [sp, #24]
    63e4:	str	w1, [x0]
    63e8:	b	6428 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3500>
    63ec:	ldr	x0, [sp, #40]
    63f0:	ldr	x1, [x0, #16]
    63f4:	ldr	x0, [sp, #24]
    63f8:	ldr	x0, [x0, #24]
    63fc:	cmp	x1, x0
    6400:	cset	w0, cs  // cs = hs, nlast
    6404:	and	w0, w0, #0xff
    6408:	and	x0, x0, #0xff
    640c:	cmp	x0, #0x0
    6410:	b.eq	6424 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x34fc>  // b.none
    6414:	ldr	x0, [sp, #40]
    6418:	ldr	x0, [x0, #16]
    641c:	str	x0, [sp, #240]
    6420:	b	6428 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3500>
    6424:	bl	1b90 <abort@plt>
    6428:	ldr	x0, [sp, #40]
    642c:	ldr	x1, [sp, #152]
    6430:	str	x1, [x0, #16]
    6434:	ldr	x0, [sp, #240]
    6438:	ldr	x1, [sp, #152]
    643c:	str	x1, [x0, #24]
    6440:	ldr	x0, [sp, #152]
    6444:	ldr	x1, [sp, #240]
    6448:	str	x1, [x0, #16]
    644c:	ldr	x0, [sp, #152]
    6450:	ldr	x1, [sp, #40]
    6454:	str	x1, [x0, #24]
    6458:	b	67c8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x38a0>
    645c:	ldr	x0, [sp, #152]
    6460:	str	x0, [sp, #104]
    6464:	ldr	x0, [sp, #304]
    6468:	lsr	x0, x0, #8
    646c:	str	x0, [sp, #96]
    6470:	ldr	x0, [sp, #96]
    6474:	cmp	x0, #0x0
    6478:	b.ne	6484 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x355c>  // b.any
    647c:	str	xzr, [sp, #232]
    6480:	b	6574 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x364c>
    6484:	ldr	x1, [sp, #96]
    6488:	mov	x0, #0xffff                	// #65535
    648c:	cmp	x1, x0
    6490:	b.ls	64a0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3578>  // b.plast
    6494:	mov	x0, #0x1f                  	// #31
    6498:	str	x0, [sp, #232]
    649c:	b	6574 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x364c>
    64a0:	ldr	x0, [sp, #96]
    64a4:	str	w0, [sp, #92]
    64a8:	ldr	w0, [sp, #92]
    64ac:	sub	w0, w0, #0x100
    64b0:	lsr	w0, w0, #16
    64b4:	and	w0, w0, #0x8
    64b8:	str	w0, [sp, #88]
    64bc:	ldr	w0, [sp, #88]
    64c0:	ldr	w1, [sp, #92]
    64c4:	lsl	w0, w1, w0
    64c8:	str	w0, [sp, #92]
    64cc:	ldr	w0, [sp, #92]
    64d0:	sub	w0, w0, #0x1, lsl #12
    64d4:	lsr	w0, w0, #16
    64d8:	and	w0, w0, #0x4
    64dc:	str	w0, [sp, #84]
    64e0:	ldr	w1, [sp, #88]
    64e4:	ldr	w0, [sp, #84]
    64e8:	add	w0, w1, w0
    64ec:	str	w0, [sp, #88]
    64f0:	ldr	w0, [sp, #84]
    64f4:	ldr	w1, [sp, #92]
    64f8:	lsl	w0, w1, w0
    64fc:	str	w0, [sp, #92]
    6500:	ldr	w0, [sp, #92]
    6504:	sub	w0, w0, #0x4, lsl #12
    6508:	lsr	w0, w0, #16
    650c:	and	w0, w0, #0x2
    6510:	str	w0, [sp, #84]
    6514:	ldr	w0, [sp, #84]
    6518:	ldr	w1, [sp, #88]
    651c:	add	w0, w1, w0
    6520:	str	w0, [sp, #88]
    6524:	ldr	w0, [sp, #84]
    6528:	ldr	w1, [sp, #92]
    652c:	lsl	w0, w1, w0
    6530:	str	w0, [sp, #92]
    6534:	ldr	w0, [sp, #92]
    6538:	lsr	w1, w0, #15
    653c:	ldr	w0, [sp, #88]
    6540:	sub	w0, w1, w0
    6544:	add	w0, w0, #0xe
    6548:	str	w0, [sp, #84]
    654c:	ldr	w0, [sp, #84]
    6550:	lsl	w0, w0, #1
    6554:	mov	w1, w0
    6558:	ldr	w0, [sp, #84]
    655c:	add	w0, w0, #0x7
    6560:	ldr	x2, [sp, #304]
    6564:	lsr	x0, x2, x0
    6568:	and	x0, x0, #0x1
    656c:	add	x0, x1, x0
    6570:	str	x0, [sp, #232]
    6574:	ldr	x0, [sp, #232]
    6578:	add	x0, x0, #0x4a
    657c:	lsl	x0, x0, #3
    6580:	ldr	x1, [sp, #24]
    6584:	add	x0, x1, x0
    6588:	str	x0, [sp, #72]
    658c:	ldr	x0, [sp, #104]
    6590:	ldr	x1, [sp, #232]
    6594:	str	x1, [x0, #56]
    6598:	ldr	x0, [sp, #104]
    659c:	str	xzr, [x0, #40]
    65a0:	ldr	x0, [sp, #104]
    65a4:	ldr	x1, [x0, #40]
    65a8:	ldr	x0, [sp, #104]
    65ac:	str	x1, [x0, #32]
    65b0:	ldr	x0, [sp, #24]
    65b4:	ldr	w1, [x0, #4]
    65b8:	ldr	x0, [sp, #232]
    65bc:	mov	w2, w0
    65c0:	mov	w0, #0x1                   	// #1
    65c4:	lsl	w0, w0, w2
    65c8:	and	w0, w1, w0
    65cc:	cmp	w0, #0x0
    65d0:	b.ne	6630 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3708>  // b.any
    65d4:	ldr	x0, [sp, #24]
    65d8:	ldr	w1, [x0, #4]
    65dc:	ldr	x0, [sp, #232]
    65e0:	mov	w2, w0
    65e4:	mov	w0, #0x1                   	// #1
    65e8:	lsl	w0, w0, w2
    65ec:	orr	w1, w1, w0
    65f0:	ldr	x0, [sp, #24]
    65f4:	str	w1, [x0, #4]
    65f8:	ldr	x0, [sp, #72]
    65fc:	ldr	x1, [sp, #104]
    6600:	str	x1, [x0]
    6604:	ldr	x0, [sp, #104]
    6608:	ldr	x1, [sp, #72]
    660c:	str	x1, [x0, #48]
    6610:	ldr	x0, [sp, #104]
    6614:	ldr	x1, [sp, #104]
    6618:	str	x1, [x0, #24]
    661c:	ldr	x0, [sp, #104]
    6620:	ldr	x1, [x0, #24]
    6624:	ldr	x0, [sp, #104]
    6628:	str	x1, [x0, #16]
    662c:	b	67c8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x38a0>
    6630:	ldr	x0, [sp, #72]
    6634:	ldr	x0, [x0]
    6638:	str	x0, [sp, #224]
    663c:	ldr	x0, [sp, #232]
    6640:	cmp	x0, #0x1f
    6644:	b.eq	6660 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3738>  // b.none
    6648:	ldr	x0, [sp, #232]
    664c:	lsr	x0, x0, #1
    6650:	mov	w1, w0
    6654:	mov	w0, #0x39                  	// #57
    6658:	sub	w0, w0, w1
    665c:	b	6664 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x373c>
    6660:	mov	w0, #0x0                   	// #0
    6664:	ldr	x1, [sp, #304]
    6668:	lsl	x0, x1, x0
    666c:	str	x0, [sp, #216]
    6670:	ldr	x0, [sp, #224]
    6674:	ldr	x0, [x0, #8]
    6678:	and	x0, x0, #0xfffffffffffffffc
    667c:	ldr	x1, [sp, #304]
    6680:	cmp	x1, x0
    6684:	b.eq	6730 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3808>  // b.none
    6688:	ldr	x0, [sp, #216]
    668c:	lsr	x0, x0, #63
    6690:	add	x0, x0, #0x4
    6694:	lsl	x0, x0, #3
    6698:	ldr	x1, [sp, #224]
    669c:	add	x0, x1, x0
    66a0:	str	x0, [sp, #56]
    66a4:	ldr	x0, [sp, #216]
    66a8:	lsl	x0, x0, #1
    66ac:	str	x0, [sp, #216]
    66b0:	ldr	x0, [sp, #56]
    66b4:	ldr	x0, [x0]
    66b8:	cmp	x0, #0x0
    66bc:	b.eq	66d0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x37a8>  // b.none
    66c0:	ldr	x0, [sp, #56]
    66c4:	ldr	x0, [x0]
    66c8:	str	x0, [sp, #224]
    66cc:	b	6670 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3748>
    66d0:	ldr	x0, [sp, #24]
    66d4:	ldr	x0, [x0, #24]
    66d8:	ldr	x1, [sp, #56]
    66dc:	cmp	x1, x0
    66e0:	cset	w0, cs  // cs = hs, nlast
    66e4:	and	w0, w0, #0xff
    66e8:	and	x0, x0, #0xff
    66ec:	cmp	x0, #0x0
    66f0:	b.eq	672c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3804>  // b.none
    66f4:	ldr	x0, [sp, #56]
    66f8:	ldr	x1, [sp, #104]
    66fc:	str	x1, [x0]
    6700:	ldr	x0, [sp, #104]
    6704:	ldr	x1, [sp, #224]
    6708:	str	x1, [x0, #48]
    670c:	ldr	x0, [sp, #104]
    6710:	ldr	x1, [sp, #104]
    6714:	str	x1, [x0, #24]
    6718:	ldr	x0, [sp, #104]
    671c:	ldr	x1, [x0, #24]
    6720:	ldr	x0, [sp, #104]
    6724:	str	x1, [x0, #16]
    6728:	b	67c8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x38a0>
    672c:	bl	1b90 <abort@plt>
    6730:	ldr	x0, [sp, #224]
    6734:	ldr	x0, [x0, #16]
    6738:	str	x0, [sp, #64]
    673c:	ldr	x0, [sp, #24]
    6740:	ldr	x0, [x0, #24]
    6744:	ldr	x1, [sp, #224]
    6748:	cmp	x1, x0
    674c:	cset	w0, cs  // cs = hs, nlast
    6750:	and	w0, w0, #0xff
    6754:	and	x0, x0, #0xff
    6758:	cmp	x0, #0x0
    675c:	b.eq	67c4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x389c>  // b.none
    6760:	ldr	x0, [sp, #24]
    6764:	ldr	x0, [x0, #24]
    6768:	ldr	x1, [sp, #64]
    676c:	cmp	x1, x0
    6770:	cset	w0, cs  // cs = hs, nlast
    6774:	and	w0, w0, #0xff
    6778:	and	x0, x0, #0xff
    677c:	cmp	x0, #0x0
    6780:	b.eq	67c4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x389c>  // b.none
    6784:	ldr	x0, [sp, #64]
    6788:	ldr	x1, [sp, #104]
    678c:	str	x1, [x0, #24]
    6790:	ldr	x0, [sp, #64]
    6794:	ldr	x1, [x0, #24]
    6798:	ldr	x0, [sp, #224]
    679c:	str	x1, [x0, #16]
    67a0:	ldr	x0, [sp, #104]
    67a4:	ldr	x1, [sp, #64]
    67a8:	str	x1, [x0, #16]
    67ac:	ldr	x0, [sp, #104]
    67b0:	ldr	x1, [sp, #224]
    67b4:	str	x1, [x0, #24]
    67b8:	ldr	x0, [sp, #104]
    67bc:	str	xzr, [x0, #48]
    67c0:	b	67c8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x38a0>
    67c4:	bl	1b90 <abort@plt>
    67c8:	ldr	x0, [sp, #312]
    67cc:	add	x0, x0, #0x10
    67d0:	b	67dc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x38b4>
    67d4:	bl	1b90 <abort@plt>
    67d8:	mov	x0, #0x0                   	// #0
    67dc:	ldp	x29, x30, [sp], #320
    67e0:	ret
    67e4:	stp	x29, x30, [sp, #-192]!
    67e8:	mov	x29, sp
    67ec:	str	x0, [sp, #24]
    67f0:	str	x1, [sp, #16]
    67f4:	ldr	x0, [sp, #24]
    67f8:	ldr	w1, [x0, #4]
    67fc:	ldr	x0, [sp, #24]
    6800:	ldr	w0, [x0, #4]
    6804:	neg	w0, w0
    6808:	and	w0, w1, w0
    680c:	str	w0, [sp, #132]
    6810:	ldr	w0, [sp, #132]
    6814:	bl	1ca0 <ffs@plt>
    6818:	sub	w0, w0, #0x1
    681c:	sxtw	x0, w0
    6820:	str	x0, [sp, #120]
    6824:	ldr	x0, [sp, #24]
    6828:	ldr	x1, [sp, #120]
    682c:	add	x1, x1, #0x4a
    6830:	ldr	x0, [x0, x1, lsl #3]
    6834:	str	x0, [sp, #184]
    6838:	ldr	x0, [sp, #184]
    683c:	str	x0, [sp, #176]
    6840:	ldr	x0, [sp, #184]
    6844:	ldr	x0, [x0, #8]
    6848:	and	x1, x0, #0xfffffffffffffffc
    684c:	ldr	x0, [sp, #16]
    6850:	sub	x0, x1, x0
    6854:	str	x0, [sp, #168]
    6858:	b	6894 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x396c>
    685c:	ldr	x0, [sp, #184]
    6860:	ldr	x0, [x0, #8]
    6864:	and	x1, x0, #0xfffffffffffffffc
    6868:	ldr	x0, [sp, #16]
    686c:	sub	x0, x1, x0
    6870:	str	x0, [sp, #32]
    6874:	ldr	x1, [sp, #32]
    6878:	ldr	x0, [sp, #168]
    687c:	cmp	x1, x0
    6880:	b.cs	6894 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x396c>  // b.hs, b.nlast
    6884:	ldr	x0, [sp, #32]
    6888:	str	x0, [sp, #168]
    688c:	ldr	x0, [sp, #184]
    6890:	str	x0, [sp, #176]
    6894:	ldr	x0, [sp, #184]
    6898:	ldr	x0, [x0, #32]
    689c:	cmp	x0, #0x0
    68a0:	b.eq	68b0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3988>  // b.none
    68a4:	ldr	x0, [sp, #184]
    68a8:	ldr	x0, [x0, #32]
    68ac:	b	68b8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3990>
    68b0:	ldr	x0, [sp, #184]
    68b4:	ldr	x0, [x0, #40]
    68b8:	str	x0, [sp, #184]
    68bc:	ldr	x0, [sp, #184]
    68c0:	cmp	x0, #0x0
    68c4:	b.ne	685c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3934>  // b.any
    68c8:	ldr	x0, [sp, #24]
    68cc:	ldr	x0, [x0, #24]
    68d0:	ldr	x1, [sp, #176]
    68d4:	cmp	x1, x0
    68d8:	cset	w0, cs  // cs = hs, nlast
    68dc:	and	w0, w0, #0xff
    68e0:	and	x0, x0, #0xff
    68e4:	cmp	x0, #0x0
    68e8:	b.eq	6e00 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3ed8>  // b.none
    68ec:	ldr	x1, [sp, #176]
    68f0:	ldr	x0, [sp, #16]
    68f4:	add	x0, x1, x0
    68f8:	str	x0, [sp, #112]
    68fc:	ldr	x1, [sp, #176]
    6900:	ldr	x0, [sp, #112]
    6904:	cmp	x1, x0
    6908:	cset	w0, cc  // cc = lo, ul, last
    690c:	and	w0, w0, #0xff
    6910:	and	x0, x0, #0xff
    6914:	cmp	x0, #0x0
    6918:	b.eq	6e00 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3ed8>  // b.none
    691c:	ldr	x0, [sp, #176]
    6920:	ldr	x0, [x0, #48]
    6924:	str	x0, [sp, #104]
    6928:	ldr	x0, [sp, #176]
    692c:	ldr	x0, [x0, #24]
    6930:	ldr	x1, [sp, #176]
    6934:	cmp	x1, x0
    6938:	b.eq	6998 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3a70>  // b.none
    693c:	ldr	x0, [sp, #176]
    6940:	ldr	x0, [x0, #16]
    6944:	str	x0, [sp, #96]
    6948:	ldr	x0, [sp, #176]
    694c:	ldr	x0, [x0, #24]
    6950:	str	x0, [sp, #160]
    6954:	ldr	x0, [sp, #24]
    6958:	ldr	x0, [x0, #24]
    695c:	ldr	x1, [sp, #96]
    6960:	cmp	x1, x0
    6964:	cset	w0, cs  // cs = hs, nlast
    6968:	and	w0, w0, #0xff
    696c:	and	x0, x0, #0xff
    6970:	cmp	x0, #0x0
    6974:	b.eq	6994 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3a6c>  // b.none
    6978:	ldr	x0, [sp, #96]
    697c:	ldr	x1, [sp, #160]
    6980:	str	x1, [x0, #24]
    6984:	ldr	x0, [sp, #160]
    6988:	ldr	x1, [sp, #96]
    698c:	str	x1, [x0, #16]
    6990:	b	6a64 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3b3c>
    6994:	bl	1b90 <abort@plt>
    6998:	ldr	x0, [sp, #176]
    699c:	add	x0, x0, #0x28
    69a0:	str	x0, [sp, #152]
    69a4:	ldr	x0, [sp, #152]
    69a8:	ldr	x0, [x0]
    69ac:	str	x0, [sp, #160]
    69b0:	ldr	x0, [sp, #160]
    69b4:	cmp	x0, #0x0
    69b8:	b.ne	69f8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3ad0>  // b.any
    69bc:	ldr	x0, [sp, #176]
    69c0:	add	x0, x0, #0x20
    69c4:	str	x0, [sp, #152]
    69c8:	ldr	x0, [sp, #152]
    69cc:	ldr	x0, [x0]
    69d0:	str	x0, [sp, #160]
    69d4:	ldr	x0, [sp, #160]
    69d8:	cmp	x0, #0x0
    69dc:	b.eq	6a64 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3b3c>  // b.none
    69e0:	b	69f8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3ad0>
    69e4:	ldr	x0, [sp, #144]
    69e8:	str	x0, [sp, #152]
    69ec:	ldr	x0, [sp, #152]
    69f0:	ldr	x0, [x0]
    69f4:	str	x0, [sp, #160]
    69f8:	ldr	x0, [sp, #160]
    69fc:	add	x0, x0, #0x28
    6a00:	str	x0, [sp, #144]
    6a04:	ldr	x0, [sp, #144]
    6a08:	ldr	x0, [x0]
    6a0c:	cmp	x0, #0x0
    6a10:	b.ne	69e4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3abc>  // b.any
    6a14:	ldr	x0, [sp, #160]
    6a18:	add	x0, x0, #0x20
    6a1c:	str	x0, [sp, #144]
    6a20:	ldr	x0, [sp, #144]
    6a24:	ldr	x0, [x0]
    6a28:	cmp	x0, #0x0
    6a2c:	b.ne	69e4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3abc>  // b.any
    6a30:	ldr	x0, [sp, #24]
    6a34:	ldr	x0, [x0, #24]
    6a38:	ldr	x1, [sp, #152]
    6a3c:	cmp	x1, x0
    6a40:	cset	w0, cs  // cs = hs, nlast
    6a44:	and	w0, w0, #0xff
    6a48:	and	x0, x0, #0xff
    6a4c:	cmp	x0, #0x0
    6a50:	b.eq	6a60 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3b38>  // b.none
    6a54:	ldr	x0, [sp, #152]
    6a58:	str	xzr, [x0]
    6a5c:	b	6a64 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3b3c>
    6a60:	bl	1b90 <abort@plt>
    6a64:	ldr	x0, [sp, #104]
    6a68:	cmp	x0, #0x0
    6a6c:	b.eq	6c40 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3d18>  // b.none
    6a70:	ldr	x0, [sp, #176]
    6a74:	ldr	x0, [x0, #56]
    6a78:	add	x0, x0, #0x4a
    6a7c:	lsl	x0, x0, #3
    6a80:	ldr	x1, [sp, #24]
    6a84:	add	x0, x1, x0
    6a88:	str	x0, [sp, #88]
    6a8c:	ldr	x0, [sp, #88]
    6a90:	ldr	x0, [x0]
    6a94:	ldr	x1, [sp, #176]
    6a98:	cmp	x1, x0
    6a9c:	b.ne	6aec <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3bc4>  // b.any
    6aa0:	ldr	x0, [sp, #88]
    6aa4:	ldr	x1, [sp, #160]
    6aa8:	str	x1, [x0]
    6aac:	ldr	x0, [sp, #88]
    6ab0:	ldr	x0, [x0]
    6ab4:	cmp	x0, #0x0
    6ab8:	b.ne	6b48 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3c20>  // b.any
    6abc:	ldr	x0, [sp, #24]
    6ac0:	ldr	w1, [x0, #4]
    6ac4:	ldr	x0, [sp, #176]
    6ac8:	ldr	x0, [x0, #56]
    6acc:	mov	w2, w0
    6ad0:	mov	w0, #0x1                   	// #1
    6ad4:	lsl	w0, w0, w2
    6ad8:	mvn	w0, w0
    6adc:	and	w1, w1, w0
    6ae0:	ldr	x0, [sp, #24]
    6ae4:	str	w1, [x0, #4]
    6ae8:	b	6b48 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3c20>
    6aec:	ldr	x0, [sp, #24]
    6af0:	ldr	x0, [x0, #24]
    6af4:	ldr	x1, [sp, #104]
    6af8:	cmp	x1, x0
    6afc:	cset	w0, cs  // cs = hs, nlast
    6b00:	and	w0, w0, #0xff
    6b04:	and	x0, x0, #0xff
    6b08:	cmp	x0, #0x0
    6b0c:	b.eq	6b44 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3c1c>  // b.none
    6b10:	ldr	x0, [sp, #104]
    6b14:	ldr	x0, [x0, #32]
    6b18:	ldr	x1, [sp, #176]
    6b1c:	cmp	x1, x0
    6b20:	b.ne	6b34 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3c0c>  // b.any
    6b24:	ldr	x0, [sp, #104]
    6b28:	ldr	x1, [sp, #160]
    6b2c:	str	x1, [x0, #32]
    6b30:	b	6b48 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3c20>
    6b34:	ldr	x0, [sp, #104]
    6b38:	ldr	x1, [sp, #160]
    6b3c:	str	x1, [x0, #40]
    6b40:	b	6b48 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3c20>
    6b44:	bl	1b90 <abort@plt>
    6b48:	ldr	x0, [sp, #160]
    6b4c:	cmp	x0, #0x0
    6b50:	b.eq	6c40 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3d18>  // b.none
    6b54:	ldr	x0, [sp, #24]
    6b58:	ldr	x0, [x0, #24]
    6b5c:	ldr	x1, [sp, #160]
    6b60:	cmp	x1, x0
    6b64:	cset	w0, cs  // cs = hs, nlast
    6b68:	and	w0, w0, #0xff
    6b6c:	and	x0, x0, #0xff
    6b70:	cmp	x0, #0x0
    6b74:	b.eq	6c3c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3d14>  // b.none
    6b78:	ldr	x0, [sp, #160]
    6b7c:	ldr	x1, [sp, #104]
    6b80:	str	x1, [x0, #48]
    6b84:	ldr	x0, [sp, #176]
    6b88:	ldr	x0, [x0, #32]
    6b8c:	str	x0, [sp, #80]
    6b90:	ldr	x0, [sp, #80]
    6b94:	cmp	x0, #0x0
    6b98:	b.eq	6be0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3cb8>  // b.none
    6b9c:	ldr	x0, [sp, #24]
    6ba0:	ldr	x0, [x0, #24]
    6ba4:	ldr	x1, [sp, #80]
    6ba8:	cmp	x1, x0
    6bac:	cset	w0, cs  // cs = hs, nlast
    6bb0:	and	w0, w0, #0xff
    6bb4:	and	x0, x0, #0xff
    6bb8:	cmp	x0, #0x0
    6bbc:	b.eq	6bdc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3cb4>  // b.none
    6bc0:	ldr	x0, [sp, #160]
    6bc4:	ldr	x1, [sp, #80]
    6bc8:	str	x1, [x0, #32]
    6bcc:	ldr	x0, [sp, #80]
    6bd0:	ldr	x1, [sp, #160]
    6bd4:	str	x1, [x0, #48]
    6bd8:	b	6be0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3cb8>
    6bdc:	bl	1b90 <abort@plt>
    6be0:	ldr	x0, [sp, #176]
    6be4:	ldr	x0, [x0, #40]
    6be8:	str	x0, [sp, #72]
    6bec:	ldr	x0, [sp, #72]
    6bf0:	cmp	x0, #0x0
    6bf4:	b.eq	6c40 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3d18>  // b.none
    6bf8:	ldr	x0, [sp, #24]
    6bfc:	ldr	x0, [x0, #24]
    6c00:	ldr	x1, [sp, #72]
    6c04:	cmp	x1, x0
    6c08:	cset	w0, cs  // cs = hs, nlast
    6c0c:	and	w0, w0, #0xff
    6c10:	and	x0, x0, #0xff
    6c14:	cmp	x0, #0x0
    6c18:	b.eq	6c38 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3d10>  // b.none
    6c1c:	ldr	x0, [sp, #160]
    6c20:	ldr	x1, [sp, #72]
    6c24:	str	x1, [x0, #40]
    6c28:	ldr	x0, [sp, #72]
    6c2c:	ldr	x1, [sp, #160]
    6c30:	str	x1, [x0, #48]
    6c34:	b	6c40 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3d18>
    6c38:	bl	1b90 <abort@plt>
    6c3c:	bl	1b90 <abort@plt>
    6c40:	ldr	x0, [sp, #168]
    6c44:	cmp	x0, #0x1f
    6c48:	b.hi	6c9c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3d74>  // b.pmore
    6c4c:	ldr	x1, [sp, #168]
    6c50:	ldr	x0, [sp, #16]
    6c54:	add	x0, x1, x0
    6c58:	orr	x1, x0, #0x3
    6c5c:	ldr	x0, [sp, #176]
    6c60:	str	x1, [x0, #8]
    6c64:	ldr	x1, [sp, #168]
    6c68:	ldr	x0, [sp, #16]
    6c6c:	add	x0, x1, x0
    6c70:	ldr	x1, [sp, #176]
    6c74:	add	x0, x1, x0
    6c78:	ldr	x1, [x0, #8]
    6c7c:	ldr	x2, [sp, #168]
    6c80:	ldr	x0, [sp, #16]
    6c84:	add	x0, x2, x0
    6c88:	ldr	x2, [sp, #176]
    6c8c:	add	x0, x2, x0
    6c90:	orr	x1, x1, #0x1
    6c94:	str	x1, [x0, #8]
    6c98:	b	6df4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3ecc>
    6c9c:	ldr	x0, [sp, #16]
    6ca0:	orr	x1, x0, #0x3
    6ca4:	ldr	x0, [sp, #176]
    6ca8:	str	x1, [x0, #8]
    6cac:	ldr	x0, [sp, #168]
    6cb0:	orr	x1, x0, #0x1
    6cb4:	ldr	x0, [sp, #112]
    6cb8:	str	x1, [x0, #8]
    6cbc:	ldr	x1, [sp, #112]
    6cc0:	ldr	x0, [sp, #168]
    6cc4:	add	x0, x1, x0
    6cc8:	ldr	x1, [sp, #168]
    6ccc:	str	x1, [x0]
    6cd0:	ldr	x0, [sp, #24]
    6cd4:	ldr	x0, [x0, #8]
    6cd8:	str	x0, [sp, #64]
    6cdc:	ldr	x0, [sp, #64]
    6ce0:	cmp	x0, #0x0
    6ce4:	b.eq	6ddc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3eb4>  // b.none
    6ce8:	ldr	x0, [sp, #24]
    6cec:	ldr	x0, [x0, #32]
    6cf0:	str	x0, [sp, #56]
    6cf4:	ldr	x0, [sp, #64]
    6cf8:	lsr	x0, x0, #3
    6cfc:	str	x0, [sp, #48]
    6d00:	ldr	x0, [sp, #48]
    6d04:	lsl	x0, x0, #1
    6d08:	add	x0, x0, #0x8
    6d0c:	lsl	x0, x0, #3
    6d10:	ldr	x1, [sp, #24]
    6d14:	add	x0, x1, x0
    6d18:	str	x0, [sp, #40]
    6d1c:	ldr	x0, [sp, #40]
    6d20:	str	x0, [sp, #136]
    6d24:	ldr	x0, [sp, #24]
    6d28:	ldr	w1, [x0]
    6d2c:	ldr	x0, [sp, #48]
    6d30:	mov	w2, w0
    6d34:	mov	w0, #0x1                   	// #1
    6d38:	lsl	w0, w0, w2
    6d3c:	and	w0, w1, w0
    6d40:	cmp	w0, #0x0
    6d44:	b.ne	6d70 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3e48>  // b.any
    6d48:	ldr	x0, [sp, #24]
    6d4c:	ldr	w1, [x0]
    6d50:	ldr	x0, [sp, #48]
    6d54:	mov	w2, w0
    6d58:	mov	w0, #0x1                   	// #1
    6d5c:	lsl	w0, w0, w2
    6d60:	orr	w1, w1, w0
    6d64:	ldr	x0, [sp, #24]
    6d68:	str	w1, [x0]
    6d6c:	b	6dac <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3e84>
    6d70:	ldr	x0, [sp, #40]
    6d74:	ldr	x1, [x0, #16]
    6d78:	ldr	x0, [sp, #24]
    6d7c:	ldr	x0, [x0, #24]
    6d80:	cmp	x1, x0
    6d84:	cset	w0, cs  // cs = hs, nlast
    6d88:	and	w0, w0, #0xff
    6d8c:	and	x0, x0, #0xff
    6d90:	cmp	x0, #0x0
    6d94:	b.eq	6da8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3e80>  // b.none
    6d98:	ldr	x0, [sp, #40]
    6d9c:	ldr	x0, [x0, #16]
    6da0:	str	x0, [sp, #136]
    6da4:	b	6dac <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3e84>
    6da8:	bl	1b90 <abort@plt>
    6dac:	ldr	x0, [sp, #40]
    6db0:	ldr	x1, [sp, #56]
    6db4:	str	x1, [x0, #16]
    6db8:	ldr	x0, [sp, #136]
    6dbc:	ldr	x1, [sp, #56]
    6dc0:	str	x1, [x0, #24]
    6dc4:	ldr	x0, [sp, #56]
    6dc8:	ldr	x1, [sp, #136]
    6dcc:	str	x1, [x0, #16]
    6dd0:	ldr	x0, [sp, #56]
    6dd4:	ldr	x1, [sp, #40]
    6dd8:	str	x1, [x0, #24]
    6ddc:	ldr	x0, [sp, #24]
    6de0:	ldr	x1, [sp, #168]
    6de4:	str	x1, [x0, #8]
    6de8:	ldr	x0, [sp, #24]
    6dec:	ldr	x1, [sp, #112]
    6df0:	str	x1, [x0, #32]
    6df4:	ldr	x0, [sp, #176]
    6df8:	add	x0, x0, #0x10
    6dfc:	b	6e04 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3edc>
    6e00:	bl	1b90 <abort@plt>
    6e04:	ldp	x29, x30, [sp], #192
    6e08:	ret
    6e0c:	stp	x29, x30, [sp, #-160]!
    6e10:	mov	x29, sp
    6e14:	str	x0, [sp, #40]
    6e18:	str	x1, [sp, #32]
    6e1c:	str	x2, [sp, #24]
    6e20:	ldr	x0, [sp, #24]
    6e24:	cmn	x0, #0x81
    6e28:	b.ls	6e44 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3f1c>  // b.plast
    6e2c:	bl	1c90 <__errno_location@plt>
    6e30:	mov	x1, x0
    6e34:	mov	w0, #0xc                   	// #12
    6e38:	str	w0, [x1]
    6e3c:	mov	x0, #0x0                   	// #0
    6e40:	b	7278 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4350>
    6e44:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    6e48:	add	x0, x0, #0x280
    6e4c:	ldr	x0, [x0, #8]
    6e50:	cmp	x0, #0x0
    6e54:	b.ne	6e64 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3f3c>  // b.any
    6e58:	bl	3184 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x25c>
    6e5c:	cmp	w0, #0x0
    6e60:	b.ne	6e78 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3f50>  // b.any
    6e64:	ldr	x0, [sp, #40]
    6e68:	ldr	w0, [x0, #864]
    6e6c:	and	w0, w0, #0x2
    6e70:	cmp	w0, #0x0
    6e74:	b.eq	6e8c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3f64>  // b.none
    6e78:	ldr	x0, [sp, #40]
    6e7c:	add	x0, x0, #0x368
    6e80:	bl	1cd0 <pthread_mutex_lock@plt>
    6e84:	cmp	w0, #0x0
    6e88:	b.ne	7274 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x434c>  // b.any
    6e8c:	ldr	x0, [sp, #32]
    6e90:	sub	x0, x0, #0x10
    6e94:	str	x0, [sp, #136]
    6e98:	ldr	x0, [sp, #136]
    6e9c:	ldr	x0, [x0, #8]
    6ea0:	and	x0, x0, #0xfffffffffffffffc
    6ea4:	str	x0, [sp, #128]
    6ea8:	ldr	x1, [sp, #136]
    6eac:	ldr	x0, [sp, #128]
    6eb0:	add	x0, x1, x0
    6eb4:	str	x0, [sp, #120]
    6eb8:	str	xzr, [sp, #144]
    6ebc:	str	xzr, [sp, #152]
    6ec0:	ldr	x0, [sp, #40]
    6ec4:	ldr	x0, [x0, #24]
    6ec8:	ldr	x1, [sp, #136]
    6ecc:	cmp	x1, x0
    6ed0:	cset	w0, cs  // cs = hs, nlast
    6ed4:	and	w0, w0, #0xff
    6ed8:	and	x0, x0, #0xff
    6edc:	cmp	x0, #0x0
    6ee0:	b.eq	6f10 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3fe8>  // b.none
    6ee4:	ldr	x0, [sp, #136]
    6ee8:	ldr	x0, [x0, #8]
    6eec:	and	x0, x0, #0x2
    6ef0:	cmp	x0, #0x0
    6ef4:	cset	w0, ne  // ne = any
    6ef8:	and	w0, w0, #0xff
    6efc:	and	x0, x0, #0xff
    6f00:	cmp	x0, #0x0
    6f04:	b.eq	6f10 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3fe8>  // b.none
    6f08:	mov	w0, #0x1                   	// #1
    6f0c:	b	6f14 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3fec>
    6f10:	mov	w0, #0x0                   	// #0
    6f14:	cmp	w0, #0x0
    6f18:	b.eq	6f44 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x401c>  // b.none
    6f1c:	ldr	x1, [sp, #136]
    6f20:	ldr	x0, [sp, #120]
    6f24:	cmp	x1, x0
    6f28:	cset	w0, cc  // cc = lo, ul, last
    6f2c:	and	w0, w0, #0xff
    6f30:	and	x0, x0, #0xff
    6f34:	cmp	x0, #0x0
    6f38:	b.eq	6f44 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x401c>  // b.none
    6f3c:	mov	w0, #0x1                   	// #1
    6f40:	b	6f48 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4020>
    6f44:	mov	w0, #0x0                   	// #0
    6f48:	cmp	w0, #0x0
    6f4c:	b.eq	7194 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x426c>  // b.none
    6f50:	ldr	x0, [sp, #120]
    6f54:	ldr	x0, [x0, #8]
    6f58:	and	x0, x0, #0x1
    6f5c:	cmp	x0, #0x0
    6f60:	cset	w0, ne  // ne = any
    6f64:	and	w0, w0, #0xff
    6f68:	and	x0, x0, #0xff
    6f6c:	cmp	x0, #0x0
    6f70:	b.eq	7194 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x426c>  // b.none
    6f74:	ldr	x0, [sp, #24]
    6f78:	cmp	x0, #0x16
    6f7c:	b.ls	6f90 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4068>  // b.plast
    6f80:	ldr	x0, [sp, #24]
    6f84:	add	x0, x0, #0xf
    6f88:	and	x0, x0, #0xfffffffffffffff8
    6f8c:	b	6f94 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x406c>
    6f90:	mov	x0, #0x20                  	// #32
    6f94:	str	x0, [sp, #112]
    6f98:	ldr	x0, [sp, #136]
    6f9c:	ldr	x0, [x0, #8]
    6fa0:	and	x0, x0, #0x1
    6fa4:	cmp	x0, #0x0
    6fa8:	b.ne	6fdc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x40b4>  // b.any
    6fac:	ldr	x0, [sp, #136]
    6fb0:	ldr	x0, [x0]
    6fb4:	and	x0, x0, #0x1
    6fb8:	cmp	x0, #0x0
    6fbc:	b.eq	6fdc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x40b4>  // b.none
    6fc0:	ldr	x2, [sp, #112]
    6fc4:	ldr	x1, [sp, #136]
    6fc8:	ldr	x0, [sp, #40]
    6fcc:	bl	3790 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x868>
    6fd0:	str	x0, [sp, #144]
    6fd4:	nop
    6fd8:	b	7198 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4270>
    6fdc:	ldr	x1, [sp, #128]
    6fe0:	ldr	x0, [sp, #112]
    6fe4:	cmp	x1, x0
    6fe8:	b.cc	70b8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4190>  // b.lo, b.ul, b.last
    6fec:	ldr	x1, [sp, #128]
    6ff0:	ldr	x0, [sp, #112]
    6ff4:	sub	x0, x1, x0
    6ff8:	str	x0, [sp, #80]
    6ffc:	ldr	x0, [sp, #136]
    7000:	str	x0, [sp, #144]
    7004:	ldr	x0, [sp, #80]
    7008:	cmp	x0, #0x1f
    700c:	b.ls	7198 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4270>  // b.plast
    7010:	ldr	x1, [sp, #144]
    7014:	ldr	x0, [sp, #112]
    7018:	add	x0, x1, x0
    701c:	str	x0, [sp, #72]
    7020:	ldr	x0, [sp, #144]
    7024:	ldr	x0, [x0, #8]
    7028:	and	x1, x0, #0x1
    702c:	ldr	x0, [sp, #112]
    7030:	orr	x0, x1, x0
    7034:	orr	x1, x0, #0x2
    7038:	ldr	x0, [sp, #144]
    703c:	str	x1, [x0, #8]
    7040:	ldr	x1, [sp, #144]
    7044:	ldr	x0, [sp, #112]
    7048:	add	x0, x1, x0
    704c:	ldr	x1, [x0, #8]
    7050:	ldr	x2, [sp, #144]
    7054:	ldr	x0, [sp, #112]
    7058:	add	x0, x2, x0
    705c:	orr	x1, x1, #0x1
    7060:	str	x1, [x0, #8]
    7064:	ldr	x0, [sp, #72]
    7068:	ldr	x0, [x0, #8]
    706c:	and	x1, x0, #0x1
    7070:	ldr	x0, [sp, #80]
    7074:	orr	x0, x1, x0
    7078:	orr	x1, x0, #0x2
    707c:	ldr	x0, [sp, #72]
    7080:	str	x1, [x0, #8]
    7084:	ldr	x1, [sp, #72]
    7088:	ldr	x0, [sp, #80]
    708c:	add	x0, x1, x0
    7090:	ldr	x1, [x0, #8]
    7094:	ldr	x2, [sp, #72]
    7098:	ldr	x0, [sp, #80]
    709c:	add	x0, x2, x0
    70a0:	orr	x1, x1, #0x1
    70a4:	str	x1, [x0, #8]
    70a8:	ldr	x0, [sp, #72]
    70ac:	add	x0, x0, #0x10
    70b0:	str	x0, [sp, #152]
    70b4:	b	7198 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4270>
    70b8:	ldr	x0, [sp, #40]
    70bc:	ldr	x0, [x0, #40]
    70c0:	ldr	x1, [sp, #120]
    70c4:	cmp	x1, x0
    70c8:	b.ne	7198 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4270>  // b.any
    70cc:	ldr	x0, [sp, #40]
    70d0:	ldr	x1, [x0, #16]
    70d4:	ldr	x0, [sp, #128]
    70d8:	add	x0, x1, x0
    70dc:	ldr	x1, [sp, #112]
    70e0:	cmp	x1, x0
    70e4:	b.cs	7198 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4270>  // b.hs, b.nlast
    70e8:	ldr	x0, [sp, #40]
    70ec:	ldr	x0, [x0, #16]
    70f0:	ldr	x1, [sp, #128]
    70f4:	add	x0, x1, x0
    70f8:	str	x0, [sp, #104]
    70fc:	ldr	x1, [sp, #104]
    7100:	ldr	x0, [sp, #112]
    7104:	sub	x0, x1, x0
    7108:	str	x0, [sp, #96]
    710c:	ldr	x1, [sp, #136]
    7110:	ldr	x0, [sp, #112]
    7114:	add	x0, x1, x0
    7118:	str	x0, [sp, #88]
    711c:	ldr	x0, [sp, #136]
    7120:	ldr	x0, [x0, #8]
    7124:	and	x1, x0, #0x1
    7128:	ldr	x0, [sp, #112]
    712c:	orr	x0, x1, x0
    7130:	orr	x1, x0, #0x2
    7134:	ldr	x0, [sp, #136]
    7138:	str	x1, [x0, #8]
    713c:	ldr	x1, [sp, #136]
    7140:	ldr	x0, [sp, #112]
    7144:	add	x0, x1, x0
    7148:	ldr	x1, [x0, #8]
    714c:	ldr	x2, [sp, #136]
    7150:	ldr	x0, [sp, #112]
    7154:	add	x0, x2, x0
    7158:	orr	x1, x1, #0x1
    715c:	str	x1, [x0, #8]
    7160:	ldr	x0, [sp, #96]
    7164:	orr	x1, x0, #0x1
    7168:	ldr	x0, [sp, #88]
    716c:	str	x1, [x0, #8]
    7170:	ldr	x0, [sp, #40]
    7174:	ldr	x1, [sp, #88]
    7178:	str	x1, [x0, #40]
    717c:	ldr	x0, [sp, #40]
    7180:	ldr	x1, [sp, #96]
    7184:	str	x1, [x0, #16]
    7188:	ldr	x0, [sp, #136]
    718c:	str	x0, [sp, #144]
    7190:	b	7198 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4270>
    7194:	bl	1b90 <abort@plt>
    7198:	nop
    719c:	ldr	x0, [sp, #40]
    71a0:	ldr	w0, [x0, #864]
    71a4:	and	w0, w0, #0x2
    71a8:	cmp	w0, #0x0
    71ac:	b.eq	71bc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4294>  // b.none
    71b0:	ldr	x0, [sp, #40]
    71b4:	add	x0, x0, #0x368
    71b8:	bl	1ce0 <pthread_mutex_unlock@plt>
    71bc:	ldr	x0, [sp, #144]
    71c0:	cmp	x0, #0x0
    71c4:	b.eq	71e8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x42c0>  // b.none
    71c8:	ldr	x0, [sp, #152]
    71cc:	cmp	x0, #0x0
    71d0:	b.eq	71dc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x42b4>  // b.none
    71d4:	ldr	x0, [sp, #152]
    71d8:	bl	82c8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x53a0>
    71dc:	ldr	x0, [sp, #144]
    71e0:	add	x0, x0, #0x10
    71e4:	b	7278 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4350>
    71e8:	ldr	x0, [sp, #24]
    71ec:	bl	7ac4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4b9c>
    71f0:	str	x0, [sp, #64]
    71f4:	ldr	x0, [sp, #64]
    71f8:	cmp	x0, #0x0
    71fc:	b.eq	726c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4344>  // b.none
    7200:	ldr	x0, [sp, #136]
    7204:	ldr	x0, [x0, #8]
    7208:	and	x0, x0, #0x1
    720c:	cmp	x0, #0x0
    7210:	b.ne	7230 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4308>  // b.any
    7214:	ldr	x0, [sp, #136]
    7218:	ldr	x0, [x0]
    721c:	and	x0, x0, #0x1
    7220:	cmp	x0, #0x0
    7224:	b.eq	7230 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4308>  // b.none
    7228:	mov	x0, #0x10                  	// #16
    722c:	b	7234 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x430c>
    7230:	mov	x0, #0x8                   	// #8
    7234:	ldr	x1, [sp, #128]
    7238:	sub	x0, x1, x0
    723c:	str	x0, [sp, #56]
    7240:	ldr	x0, [sp, #56]
    7244:	ldr	x2, [sp, #24]
    7248:	ldr	x1, [sp, #24]
    724c:	cmp	x2, x0
    7250:	csel	x0, x1, x0, ls  // ls = plast
    7254:	mov	x2, x0
    7258:	ldr	x1, [sp, #32]
    725c:	ldr	x0, [sp, #64]
    7260:	bl	1a60 <memcpy@plt>
    7264:	ldr	x0, [sp, #32]
    7268:	bl	82c8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x53a0>
    726c:	ldr	x0, [sp, #64]
    7270:	b	7278 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4350>
    7274:	mov	x0, #0x0                   	// #0
    7278:	ldp	x29, x30, [sp], #160
    727c:	ret
    7280:	stp	x29, x30, [sp, #-176]!
    7284:	mov	x29, sp
    7288:	str	x0, [sp, #40]
    728c:	str	x1, [sp, #32]
    7290:	str	x2, [sp, #24]
    7294:	ldr	x0, [sp, #32]
    7298:	cmp	x0, #0x8
    729c:	b.hi	72ac <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4384>  // b.pmore
    72a0:	ldr	x0, [sp, #24]
    72a4:	bl	7ac4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4b9c>
    72a8:	b	76e0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x47b8>
    72ac:	ldr	x0, [sp, #32]
    72b0:	cmp	x0, #0x1f
    72b4:	b.hi	72c0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4398>  // b.pmore
    72b8:	mov	x0, #0x20                  	// #32
    72bc:	str	x0, [sp, #32]
    72c0:	ldr	x0, [sp, #32]
    72c4:	sub	x1, x0, #0x1
    72c8:	ldr	x0, [sp, #32]
    72cc:	and	x0, x1, x0
    72d0:	cmp	x0, #0x0
    72d4:	b.eq	7308 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x43e0>  // b.none
    72d8:	mov	x0, #0x10                  	// #16
    72dc:	str	x0, [sp, #168]
    72e0:	b	72f0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x43c8>
    72e4:	ldr	x0, [sp, #168]
    72e8:	lsl	x0, x0, #1
    72ec:	str	x0, [sp, #168]
    72f0:	ldr	x1, [sp, #168]
    72f4:	ldr	x0, [sp, #32]
    72f8:	cmp	x1, x0
    72fc:	b.cc	72e4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x43bc>  // b.lo, b.ul, b.last
    7300:	ldr	x0, [sp, #168]
    7304:	str	x0, [sp, #32]
    7308:	mov	x1, #0xffffffffffffff80    	// #-128
    730c:	ldr	x0, [sp, #32]
    7310:	sub	x0, x1, x0
    7314:	ldr	x1, [sp, #24]
    7318:	cmp	x1, x0
    731c:	b.cc	7340 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4418>  // b.lo, b.ul, b.last
    7320:	ldr	x0, [sp, #40]
    7324:	cmp	x0, #0x0
    7328:	b.eq	76dc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x47b4>  // b.none
    732c:	bl	1c90 <__errno_location@plt>
    7330:	mov	x1, x0
    7334:	mov	w0, #0xc                   	// #12
    7338:	str	w0, [x1]
    733c:	b	76dc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x47b4>
    7340:	ldr	x0, [sp, #24]
    7344:	cmp	x0, #0x16
    7348:	b.ls	735c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4434>  // b.plast
    734c:	ldr	x0, [sp, #24]
    7350:	add	x0, x0, #0xf
    7354:	and	x0, x0, #0xfffffffffffffff8
    7358:	b	7360 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4438>
    735c:	mov	x0, #0x20                  	// #32
    7360:	str	x0, [sp, #136]
    7364:	ldr	x1, [sp, #136]
    7368:	ldr	x0, [sp, #32]
    736c:	add	x0, x1, x0
    7370:	add	x0, x0, #0x18
    7374:	str	x0, [sp, #128]
    7378:	ldr	x0, [sp, #128]
    737c:	bl	7ac4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4b9c>
    7380:	str	x0, [sp, #120]
    7384:	ldr	x0, [sp, #120]
    7388:	cmp	x0, #0x0
    738c:	b.eq	76dc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x47b4>  // b.none
    7390:	str	xzr, [sp, #160]
    7394:	str	xzr, [sp, #152]
    7398:	ldr	x0, [sp, #120]
    739c:	sub	x0, x0, #0x10
    73a0:	str	x0, [sp, #144]
    73a4:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    73a8:	add	x0, x0, #0x280
    73ac:	ldr	x0, [x0, #8]
    73b0:	cmp	x0, #0x0
    73b4:	b.ne	73c4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x449c>  // b.any
    73b8:	bl	3184 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x25c>
    73bc:	cmp	w0, #0x0
    73c0:	b.ne	73d8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x44b0>  // b.any
    73c4:	ldr	x0, [sp, #40]
    73c8:	ldr	w0, [x0, #864]
    73cc:	and	w0, w0, #0x2
    73d0:	cmp	w0, #0x0
    73d4:	b.eq	73f4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x44cc>  // b.none
    73d8:	ldr	x0, [sp, #40]
    73dc:	add	x0, x0, #0x368
    73e0:	bl	1cd0 <pthread_mutex_lock@plt>
    73e4:	cmp	w0, #0x0
    73e8:	b.eq	73f4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x44cc>  // b.none
    73ec:	mov	x0, #0x0                   	// #0
    73f0:	b	76e0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x47b8>
    73f4:	ldr	x0, [sp, #120]
    73f8:	ldr	x1, [sp, #32]
    73fc:	udiv	x2, x0, x1
    7400:	ldr	x1, [sp, #32]
    7404:	mul	x1, x2, x1
    7408:	sub	x0, x0, x1
    740c:	cmp	x0, #0x0
    7410:	b.eq	7588 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4660>  // b.none
    7414:	ldr	x0, [sp, #32]
    7418:	sub	x0, x0, #0x1
    741c:	ldr	x1, [sp, #120]
    7420:	add	x0, x1, x0
    7424:	mov	x1, x0
    7428:	ldr	x0, [sp, #32]
    742c:	neg	x0, x0
    7430:	and	x0, x1, x0
    7434:	sub	x0, x0, #0x10
    7438:	str	x0, [sp, #112]
    743c:	ldr	x1, [sp, #112]
    7440:	ldr	x0, [sp, #144]
    7444:	sub	x0, x1, x0
    7448:	cmp	x0, #0x1f
    744c:	b.hi	7460 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4538>  // b.pmore
    7450:	ldr	x1, [sp, #112]
    7454:	ldr	x0, [sp, #32]
    7458:	add	x0, x1, x0
    745c:	b	7464 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x453c>
    7460:	ldr	x0, [sp, #112]
    7464:	str	x0, [sp, #104]
    7468:	ldr	x0, [sp, #104]
    746c:	str	x0, [sp, #96]
    7470:	ldr	x1, [sp, #104]
    7474:	ldr	x0, [sp, #144]
    7478:	sub	x0, x1, x0
    747c:	str	x0, [sp, #88]
    7480:	ldr	x0, [sp, #144]
    7484:	ldr	x0, [x0, #8]
    7488:	and	x1, x0, #0xfffffffffffffffc
    748c:	ldr	x0, [sp, #88]
    7490:	sub	x0, x1, x0
    7494:	str	x0, [sp, #80]
    7498:	ldr	x0, [sp, #144]
    749c:	ldr	x0, [x0, #8]
    74a0:	and	x0, x0, #0x1
    74a4:	cmp	x0, #0x0
    74a8:	b.ne	74ec <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x45c4>  // b.any
    74ac:	ldr	x0, [sp, #144]
    74b0:	ldr	x0, [x0]
    74b4:	and	x0, x0, #0x1
    74b8:	cmp	x0, #0x0
    74bc:	b.eq	74ec <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x45c4>  // b.none
    74c0:	ldr	x0, [sp, #144]
    74c4:	ldr	x1, [x0]
    74c8:	ldr	x0, [sp, #88]
    74cc:	add	x1, x1, x0
    74d0:	ldr	x0, [sp, #96]
    74d4:	str	x1, [x0]
    74d8:	ldr	x0, [sp, #80]
    74dc:	orr	x1, x0, #0x2
    74e0:	ldr	x0, [sp, #96]
    74e4:	str	x1, [x0, #8]
    74e8:	b	7580 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4658>
    74ec:	ldr	x0, [sp, #96]
    74f0:	ldr	x0, [x0, #8]
    74f4:	and	x1, x0, #0x1
    74f8:	ldr	x0, [sp, #80]
    74fc:	orr	x0, x1, x0
    7500:	orr	x1, x0, #0x2
    7504:	ldr	x0, [sp, #96]
    7508:	str	x1, [x0, #8]
    750c:	ldr	x1, [sp, #96]
    7510:	ldr	x0, [sp, #80]
    7514:	add	x0, x1, x0
    7518:	ldr	x1, [x0, #8]
    751c:	ldr	x2, [sp, #96]
    7520:	ldr	x0, [sp, #80]
    7524:	add	x0, x2, x0
    7528:	orr	x1, x1, #0x1
    752c:	str	x1, [x0, #8]
    7530:	ldr	x0, [sp, #144]
    7534:	ldr	x0, [x0, #8]
    7538:	and	x1, x0, #0x1
    753c:	ldr	x0, [sp, #88]
    7540:	orr	x0, x1, x0
    7544:	orr	x1, x0, #0x2
    7548:	ldr	x0, [sp, #144]
    754c:	str	x1, [x0, #8]
    7550:	ldr	x1, [sp, #144]
    7554:	ldr	x0, [sp, #88]
    7558:	add	x0, x1, x0
    755c:	ldr	x1, [x0, #8]
    7560:	ldr	x2, [sp, #144]
    7564:	ldr	x0, [sp, #88]
    7568:	add	x0, x2, x0
    756c:	orr	x1, x1, #0x1
    7570:	str	x1, [x0, #8]
    7574:	ldr	x0, [sp, #144]
    7578:	add	x0, x0, #0x10
    757c:	str	x0, [sp, #160]
    7580:	ldr	x0, [sp, #96]
    7584:	str	x0, [sp, #144]
    7588:	ldr	x0, [sp, #144]
    758c:	ldr	x0, [x0, #8]
    7590:	and	x0, x0, #0x1
    7594:	cmp	x0, #0x0
    7598:	b.ne	75b0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4688>  // b.any
    759c:	ldr	x0, [sp, #144]
    75a0:	ldr	x0, [x0]
    75a4:	and	x0, x0, #0x1
    75a8:	cmp	x0, #0x0
    75ac:	b.ne	7688 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4760>  // b.any
    75b0:	ldr	x0, [sp, #144]
    75b4:	ldr	x0, [x0, #8]
    75b8:	and	x0, x0, #0xfffffffffffffffc
    75bc:	str	x0, [sp, #72]
    75c0:	ldr	x0, [sp, #136]
    75c4:	add	x0, x0, #0x20
    75c8:	ldr	x1, [sp, #72]
    75cc:	cmp	x1, x0
    75d0:	b.ls	7688 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4760>  // b.plast
    75d4:	ldr	x1, [sp, #72]
    75d8:	ldr	x0, [sp, #136]
    75dc:	sub	x0, x1, x0
    75e0:	str	x0, [sp, #64]
    75e4:	ldr	x1, [sp, #144]
    75e8:	ldr	x0, [sp, #136]
    75ec:	add	x0, x1, x0
    75f0:	str	x0, [sp, #56]
    75f4:	ldr	x0, [sp, #144]
    75f8:	ldr	x0, [x0, #8]
    75fc:	and	x1, x0, #0x1
    7600:	ldr	x0, [sp, #136]
    7604:	orr	x0, x1, x0
    7608:	orr	x1, x0, #0x2
    760c:	ldr	x0, [sp, #144]
    7610:	str	x1, [x0, #8]
    7614:	ldr	x1, [sp, #144]
    7618:	ldr	x0, [sp, #136]
    761c:	add	x0, x1, x0
    7620:	ldr	x1, [x0, #8]
    7624:	ldr	x2, [sp, #144]
    7628:	ldr	x0, [sp, #136]
    762c:	add	x0, x2, x0
    7630:	orr	x1, x1, #0x1
    7634:	str	x1, [x0, #8]
    7638:	ldr	x0, [sp, #56]
    763c:	ldr	x0, [x0, #8]
    7640:	and	x1, x0, #0x1
    7644:	ldr	x0, [sp, #64]
    7648:	orr	x0, x1, x0
    764c:	orr	x1, x0, #0x2
    7650:	ldr	x0, [sp, #56]
    7654:	str	x1, [x0, #8]
    7658:	ldr	x1, [sp, #56]
    765c:	ldr	x0, [sp, #64]
    7660:	add	x0, x1, x0
    7664:	ldr	x1, [x0, #8]
    7668:	ldr	x2, [sp, #56]
    766c:	ldr	x0, [sp, #64]
    7670:	add	x0, x2, x0
    7674:	orr	x1, x1, #0x1
    7678:	str	x1, [x0, #8]
    767c:	ldr	x0, [sp, #56]
    7680:	add	x0, x0, #0x10
    7684:	str	x0, [sp, #152]
    7688:	ldr	x0, [sp, #40]
    768c:	ldr	w0, [x0, #864]
    7690:	and	w0, w0, #0x2
    7694:	cmp	w0, #0x0
    7698:	b.eq	76a8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4780>  // b.none
    769c:	ldr	x0, [sp, #40]
    76a0:	add	x0, x0, #0x368
    76a4:	bl	1ce0 <pthread_mutex_unlock@plt>
    76a8:	ldr	x0, [sp, #160]
    76ac:	cmp	x0, #0x0
    76b0:	b.eq	76bc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4794>  // b.none
    76b4:	ldr	x0, [sp, #160]
    76b8:	bl	82c8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x53a0>
    76bc:	ldr	x0, [sp, #152]
    76c0:	cmp	x0, #0x0
    76c4:	b.eq	76d0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x47a8>  // b.none
    76c8:	ldr	x0, [sp, #152]
    76cc:	bl	82c8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x53a0>
    76d0:	ldr	x0, [sp, #144]
    76d4:	add	x0, x0, #0x10
    76d8:	b	76e0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x47b8>
    76dc:	mov	x0, #0x0                   	// #0
    76e0:	ldp	x29, x30, [sp], #176
    76e4:	ret
    76e8:	stp	x29, x30, [sp, #-160]!
    76ec:	mov	x29, sp
    76f0:	str	x0, [sp, #56]
    76f4:	str	x1, [sp, #48]
    76f8:	str	x2, [sp, #40]
    76fc:	str	w3, [sp, #36]
    7700:	str	x4, [sp, #24]
    7704:	ldr	x0, [sp, #24]
    7708:	cmp	x0, #0x0
    770c:	b.eq	7734 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x480c>  // b.none
    7710:	ldr	x0, [sp, #48]
    7714:	cmp	x0, #0x0
    7718:	b.ne	7724 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x47fc>  // b.any
    771c:	ldr	x0, [sp, #24]
    7720:	b	7abc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4b94>
    7724:	ldr	x0, [sp, #24]
    7728:	str	x0, [sp, #112]
    772c:	str	xzr, [sp, #136]
    7730:	b	7780 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4858>
    7734:	ldr	x0, [sp, #48]
    7738:	cmp	x0, #0x0
    773c:	b.ne	774c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4824>  // b.any
    7740:	mov	x0, #0x0                   	// #0
    7744:	bl	7ac4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4b9c>
    7748:	b	7abc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4b94>
    774c:	str	xzr, [sp, #112]
    7750:	ldr	x0, [sp, #48]
    7754:	lsl	x0, x0, #3
    7758:	cmp	x0, #0x16
    775c:	b.ls	7778 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4850>  // b.plast
    7760:	ldr	x0, [sp, #48]
    7764:	add	x0, x0, #0x1
    7768:	lsl	x0, x0, #3
    776c:	add	x0, x0, #0x7
    7770:	and	x0, x0, #0xfffffffffffffff8
    7774:	b	777c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4854>
    7778:	mov	x0, #0x20                  	// #32
    777c:	str	x0, [sp, #136]
    7780:	ldr	w0, [sp, #36]
    7784:	and	w0, w0, #0x1
    7788:	cmp	w0, #0x0
    778c:	b.eq	77d0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x48a8>  // b.none
    7790:	ldr	x0, [sp, #40]
    7794:	ldr	x0, [x0]
    7798:	cmp	x0, #0x16
    779c:	b.ls	77b4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x488c>  // b.plast
    77a0:	ldr	x0, [sp, #40]
    77a4:	ldr	x0, [x0]
    77a8:	add	x0, x0, #0xf
    77ac:	and	x0, x0, #0xfffffffffffffff8
    77b0:	b	77b8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4890>
    77b4:	mov	x0, #0x20                  	// #32
    77b8:	str	x0, [sp, #152]
    77bc:	ldr	x1, [sp, #48]
    77c0:	ldr	x0, [sp, #152]
    77c4:	mul	x0, x1, x0
    77c8:	str	x0, [sp, #144]
    77cc:	b	7848 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4920>
    77d0:	str	xzr, [sp, #152]
    77d4:	str	xzr, [sp, #144]
    77d8:	str	xzr, [sp, #96]
    77dc:	b	7838 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4910>
    77e0:	ldr	x0, [sp, #96]
    77e4:	lsl	x0, x0, #3
    77e8:	ldr	x1, [sp, #40]
    77ec:	add	x0, x1, x0
    77f0:	ldr	x0, [x0]
    77f4:	cmp	x0, #0x16
    77f8:	b.ls	781c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x48f4>  // b.plast
    77fc:	ldr	x0, [sp, #96]
    7800:	lsl	x0, x0, #3
    7804:	ldr	x1, [sp, #40]
    7808:	add	x0, x1, x0
    780c:	ldr	x0, [x0]
    7810:	add	x0, x0, #0xf
    7814:	and	x0, x0, #0xfffffffffffffff8
    7818:	b	7820 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x48f8>
    781c:	mov	x0, #0x20                  	// #32
    7820:	ldr	x1, [sp, #144]
    7824:	add	x0, x1, x0
    7828:	str	x0, [sp, #144]
    782c:	ldr	x0, [sp, #96]
    7830:	add	x0, x0, #0x1
    7834:	str	x0, [sp, #96]
    7838:	ldr	x1, [sp, #96]
    783c:	ldr	x0, [sp, #48]
    7840:	cmp	x1, x0
    7844:	b.ne	77e0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x48b8>  // b.any
    7848:	ldr	x1, [sp, #144]
    784c:	ldr	x0, [sp, #136]
    7850:	add	x0, x1, x0
    7854:	str	x0, [sp, #104]
    7858:	ldr	x0, [sp, #56]
    785c:	ldr	w0, [x0, #864]
    7860:	and	w0, w0, #0x1
    7864:	str	w0, [sp, #92]
    7868:	ldr	x0, [sp, #56]
    786c:	ldr	w0, [x0, #864]
    7870:	and	w1, w0, #0xfffffffe
    7874:	ldr	x0, [sp, #56]
    7878:	str	w1, [x0, #864]
    787c:	ldr	x0, [sp, #104]
    7880:	sub	x0, x0, #0x8
    7884:	bl	7ac4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4b9c>
    7888:	str	x0, [sp, #80]
    788c:	ldr	w0, [sp, #92]
    7890:	cmp	w0, #0x0
    7894:	b.eq	78ac <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4984>  // b.none
    7898:	ldr	x0, [sp, #56]
    789c:	ldr	w0, [x0, #864]
    78a0:	orr	w1, w0, #0x1
    78a4:	ldr	x0, [sp, #56]
    78a8:	str	w1, [x0, #864]
    78ac:	ldr	x0, [sp, #80]
    78b0:	cmp	x0, #0x0
    78b4:	b.ne	78c0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4998>  // b.any
    78b8:	mov	x0, #0x0                   	// #0
    78bc:	b	7abc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4b94>
    78c0:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    78c4:	add	x0, x0, #0x280
    78c8:	ldr	x0, [x0, #8]
    78cc:	cmp	x0, #0x0
    78d0:	b.ne	78e0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x49b8>  // b.any
    78d4:	bl	3184 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x25c>
    78d8:	cmp	w0, #0x0
    78dc:	b.ne	78f4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x49cc>  // b.any
    78e0:	ldr	x0, [sp, #56]
    78e4:	ldr	w0, [x0, #864]
    78e8:	and	w0, w0, #0x2
    78ec:	cmp	w0, #0x0
    78f0:	b.eq	7910 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x49e8>  // b.none
    78f4:	ldr	x0, [sp, #56]
    78f8:	add	x0, x0, #0x368
    78fc:	bl	1cd0 <pthread_mutex_lock@plt>
    7900:	cmp	w0, #0x0
    7904:	b.eq	7910 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x49e8>  // b.none
    7908:	mov	x0, #0x0                   	// #0
    790c:	b	7abc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4b94>
    7910:	ldr	x0, [sp, #80]
    7914:	sub	x0, x0, #0x10
    7918:	str	x0, [sp, #128]
    791c:	ldr	x0, [sp, #128]
    7920:	ldr	x0, [x0, #8]
    7924:	and	x0, x0, #0xfffffffffffffffc
    7928:	str	x0, [sp, #120]
    792c:	ldr	w0, [sp, #36]
    7930:	and	w0, w0, #0x2
    7934:	cmp	w0, #0x0
    7938:	b.eq	795c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4a34>  // b.none
    793c:	ldr	x1, [sp, #120]
    7940:	ldr	x0, [sp, #136]
    7944:	sub	x0, x1, x0
    7948:	sub	x0, x0, #0x8
    794c:	mov	x2, x0
    7950:	mov	w1, #0x0                   	// #0
    7954:	ldr	x0, [sp, #80]
    7958:	bl	1b00 <memset@plt>
    795c:	ldr	x0, [sp, #112]
    7960:	cmp	x0, #0x0
    7964:	b.ne	79ac <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4a84>  // b.any
    7968:	ldr	x1, [sp, #128]
    796c:	ldr	x0, [sp, #144]
    7970:	add	x0, x1, x0
    7974:	str	x0, [sp, #72]
    7978:	ldr	x1, [sp, #120]
    797c:	ldr	x0, [sp, #144]
    7980:	sub	x0, x1, x0
    7984:	str	x0, [sp, #64]
    7988:	ldr	x0, [sp, #72]
    798c:	add	x0, x0, #0x10
    7990:	str	x0, [sp, #112]
    7994:	ldr	x0, [sp, #64]
    7998:	orr	x1, x0, #0x3
    799c:	ldr	x0, [sp, #72]
    79a0:	str	x1, [x0, #8]
    79a4:	ldr	x0, [sp, #144]
    79a8:	str	x0, [sp, #120]
    79ac:	str	xzr, [sp, #96]
    79b0:	ldr	x0, [sp, #96]
    79b4:	lsl	x0, x0, #3
    79b8:	ldr	x1, [sp, #112]
    79bc:	add	x0, x1, x0
    79c0:	ldr	x1, [sp, #128]
    79c4:	add	x1, x1, #0x10
    79c8:	str	x1, [x0]
    79cc:	ldr	x0, [sp, #48]
    79d0:	sub	x0, x0, #0x1
    79d4:	ldr	x1, [sp, #96]
    79d8:	cmp	x1, x0
    79dc:	b.eq	7a70 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4b48>  // b.none
    79e0:	ldr	x0, [sp, #152]
    79e4:	cmp	x0, #0x0
    79e8:	b.eq	79f8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4ad0>  // b.none
    79ec:	ldr	x0, [sp, #152]
    79f0:	str	x0, [sp, #104]
    79f4:	b	7a3c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4b14>
    79f8:	ldr	x0, [sp, #96]
    79fc:	lsl	x0, x0, #3
    7a00:	ldr	x1, [sp, #40]
    7a04:	add	x0, x1, x0
    7a08:	ldr	x0, [x0]
    7a0c:	cmp	x0, #0x16
    7a10:	b.ls	7a34 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4b0c>  // b.plast
    7a14:	ldr	x0, [sp, #96]
    7a18:	lsl	x0, x0, #3
    7a1c:	ldr	x1, [sp, #40]
    7a20:	add	x0, x1, x0
    7a24:	ldr	x0, [x0]
    7a28:	add	x0, x0, #0xf
    7a2c:	and	x0, x0, #0xfffffffffffffff8
    7a30:	b	7a38 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4b10>
    7a34:	mov	x0, #0x20                  	// #32
    7a38:	str	x0, [sp, #104]
    7a3c:	ldr	x1, [sp, #120]
    7a40:	ldr	x0, [sp, #104]
    7a44:	sub	x0, x1, x0
    7a48:	str	x0, [sp, #120]
    7a4c:	ldr	x0, [sp, #104]
    7a50:	orr	x1, x0, #0x3
    7a54:	ldr	x0, [sp, #128]
    7a58:	str	x1, [x0, #8]
    7a5c:	ldr	x1, [sp, #128]
    7a60:	ldr	x0, [sp, #104]
    7a64:	add	x0, x1, x0
    7a68:	str	x0, [sp, #128]
    7a6c:	b	7a9c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4b74>
    7a70:	ldr	x0, [sp, #120]
    7a74:	orr	x1, x0, #0x3
    7a78:	ldr	x0, [sp, #128]
    7a7c:	str	x1, [x0, #8]
    7a80:	nop
    7a84:	ldr	x0, [sp, #56]
    7a88:	ldr	w0, [x0, #864]
    7a8c:	and	w0, w0, #0x2
    7a90:	cmp	w0, #0x0
    7a94:	b.eq	7ab8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4b90>  // b.none
    7a98:	b	7aac <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4b84>
    7a9c:	ldr	x0, [sp, #96]
    7aa0:	add	x0, x0, #0x1
    7aa4:	str	x0, [sp, #96]
    7aa8:	b	79b0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4a88>
    7aac:	ldr	x0, [sp, #56]
    7ab0:	add	x0, x0, #0x368
    7ab4:	bl	1ce0 <pthread_mutex_unlock@plt>
    7ab8:	ldr	x0, [sp, #112]
    7abc:	ldp	x29, x30, [sp], #160
    7ac0:	ret
    7ac4:	stp	x29, x30, [sp, #-240]!
    7ac8:	mov	x29, sp
    7acc:	str	x0, [sp, #24]
    7ad0:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    7ad4:	add	x0, x0, #0x280
    7ad8:	ldr	x0, [x0, #8]
    7adc:	cmp	x0, #0x0
    7ae0:	b.ne	7af0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4bc8>  // b.any
    7ae4:	bl	3184 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x25c>
    7ae8:	cmp	w0, #0x0
    7aec:	b.ne	7b08 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4be0>  // b.any
    7af0:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    7af4:	add	x0, x0, #0x2b0
    7af8:	ldr	w0, [x0, #864]
    7afc:	and	w0, w0, #0x2
    7b00:	cmp	w0, #0x0
    7b04:	b.eq	7b1c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4bf4>  // b.none
    7b08:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    7b0c:	add	x0, x0, #0x618
    7b10:	bl	1cd0 <pthread_mutex_lock@plt>
    7b14:	cmp	w0, #0x0
    7b18:	b.ne	82bc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5394>  // b.any
    7b1c:	ldr	x0, [sp, #24]
    7b20:	cmp	x0, #0xf0
    7b24:	b.hi	8040 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5118>  // b.pmore
    7b28:	ldr	x0, [sp, #24]
    7b2c:	cmp	x0, #0x16
    7b30:	b.ls	7b44 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4c1c>  // b.plast
    7b34:	ldr	x0, [sp, #24]
    7b38:	add	x0, x0, #0xf
    7b3c:	and	x0, x0, #0xfffffffffffffff8
    7b40:	b	7b48 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4c20>
    7b44:	mov	x0, #0x20                  	// #32
    7b48:	str	x0, [sp, #224]
    7b4c:	ldr	x0, [sp, #224]
    7b50:	lsr	x0, x0, #3
    7b54:	str	x0, [sp, #208]
    7b58:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    7b5c:	add	x0, x0, #0x2b0
    7b60:	ldr	w0, [x0]
    7b64:	ldr	x1, [sp, #208]
    7b68:	lsr	w0, w0, w1
    7b6c:	str	w0, [sp, #204]
    7b70:	ldr	w0, [sp, #204]
    7b74:	and	w0, w0, #0x3
    7b78:	cmp	w0, #0x0
    7b7c:	b.eq	7cb0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4d88>  // b.none
    7b80:	ldr	w0, [sp, #204]
    7b84:	mvn	w0, w0
    7b88:	mov	w0, w0
    7b8c:	and	x0, x0, #0x1
    7b90:	ldr	x1, [sp, #208]
    7b94:	add	x0, x1, x0
    7b98:	str	x0, [sp, #208]
    7b9c:	ldr	x0, [sp, #208]
    7ba0:	lsl	x0, x0, #1
    7ba4:	add	x0, x0, #0x8
    7ba8:	lsl	x1, x0, #3
    7bac:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    7bb0:	add	x0, x0, #0x2b0
    7bb4:	add	x0, x1, x0
    7bb8:	str	x0, [sp, #104]
    7bbc:	ldr	x0, [sp, #104]
    7bc0:	ldr	x0, [x0, #16]
    7bc4:	str	x0, [sp, #96]
    7bc8:	ldr	x0, [sp, #96]
    7bcc:	ldr	x0, [x0, #16]
    7bd0:	str	x0, [sp, #88]
    7bd4:	ldr	x1, [sp, #104]
    7bd8:	ldr	x0, [sp, #88]
    7bdc:	cmp	x1, x0
    7be0:	b.ne	7c18 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4cf0>  // b.any
    7be4:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    7be8:	add	x0, x0, #0x2b0
    7bec:	ldr	w1, [x0]
    7bf0:	ldr	x0, [sp, #208]
    7bf4:	mov	w2, w0
    7bf8:	mov	w0, #0x1                   	// #1
    7bfc:	lsl	w0, w0, w2
    7c00:	mvn	w0, w0
    7c04:	and	w1, w1, w0
    7c08:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    7c0c:	add	x0, x0, #0x2b0
    7c10:	str	w1, [x0]
    7c14:	b	7c60 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4d38>
    7c18:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    7c1c:	add	x0, x0, #0x2b0
    7c20:	ldr	x0, [x0, #24]
    7c24:	ldr	x1, [sp, #88]
    7c28:	cmp	x1, x0
    7c2c:	cset	w0, cs  // cs = hs, nlast
    7c30:	and	w0, w0, #0xff
    7c34:	and	x0, x0, #0xff
    7c38:	cmp	x0, #0x0
    7c3c:	b.eq	7c5c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4d34>  // b.none
    7c40:	ldr	x0, [sp, #104]
    7c44:	ldr	x1, [sp, #88]
    7c48:	str	x1, [x0, #16]
    7c4c:	ldr	x0, [sp, #88]
    7c50:	ldr	x1, [sp, #104]
    7c54:	str	x1, [x0, #24]
    7c58:	b	7c60 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4d38>
    7c5c:	bl	1b90 <abort@plt>
    7c60:	ldr	x0, [sp, #208]
    7c64:	lsl	x0, x0, #3
    7c68:	orr	x1, x0, #0x3
    7c6c:	ldr	x0, [sp, #96]
    7c70:	str	x1, [x0, #8]
    7c74:	ldr	x0, [sp, #208]
    7c78:	lsl	x0, x0, #3
    7c7c:	ldr	x1, [sp, #96]
    7c80:	add	x0, x1, x0
    7c84:	ldr	x1, [x0, #8]
    7c88:	ldr	x0, [sp, #208]
    7c8c:	lsl	x0, x0, #3
    7c90:	ldr	x2, [sp, #96]
    7c94:	add	x0, x2, x0
    7c98:	orr	x1, x1, #0x1
    7c9c:	str	x1, [x0, #8]
    7ca0:	ldr	x0, [sp, #96]
    7ca4:	add	x0, x0, #0x10
    7ca8:	str	x0, [sp, #232]
    7cac:	b	8290 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5368>
    7cb0:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    7cb4:	add	x0, x0, #0x2b0
    7cb8:	ldr	x0, [x0, #8]
    7cbc:	ldr	x1, [sp, #224]
    7cc0:	cmp	x1, x0
    7cc4:	b.ls	809c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5174>  // b.plast
    7cc8:	ldr	w0, [sp, #204]
    7ccc:	cmp	w0, #0x0
    7cd0:	b.eq	8008 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x50e0>  // b.none
    7cd4:	ldr	x0, [sp, #208]
    7cd8:	mov	w1, w0
    7cdc:	ldr	w0, [sp, #204]
    7ce0:	lsl	w1, w0, w1
    7ce4:	ldr	x0, [sp, #208]
    7ce8:	mov	w2, w0
    7cec:	mov	w0, #0x1                   	// #1
    7cf0:	lsl	w0, w0, w2
    7cf4:	lsl	w2, w0, #1
    7cf8:	ldr	x0, [sp, #208]
    7cfc:	mov	w3, w0
    7d00:	mov	w0, #0x1                   	// #1
    7d04:	lsl	w0, w0, w3
    7d08:	lsl	w0, w0, #1
    7d0c:	neg	w0, w0
    7d10:	orr	w0, w2, w0
    7d14:	and	w0, w1, w0
    7d18:	str	w0, [sp, #200]
    7d1c:	ldr	w0, [sp, #200]
    7d20:	neg	w0, w0
    7d24:	ldr	w1, [sp, #200]
    7d28:	and	w0, w1, w0
    7d2c:	str	w0, [sp, #196]
    7d30:	ldr	w0, [sp, #196]
    7d34:	bl	1ca0 <ffs@plt>
    7d38:	sub	w0, w0, #0x1
    7d3c:	sxtw	x0, w0
    7d40:	str	x0, [sp, #184]
    7d44:	ldr	x0, [sp, #184]
    7d48:	lsl	x0, x0, #1
    7d4c:	add	x0, x0, #0x8
    7d50:	lsl	x1, x0, #3
    7d54:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    7d58:	add	x0, x0, #0x2b0
    7d5c:	add	x0, x1, x0
    7d60:	str	x0, [sp, #176]
    7d64:	ldr	x0, [sp, #176]
    7d68:	ldr	x0, [x0, #16]
    7d6c:	str	x0, [sp, #168]
    7d70:	ldr	x0, [sp, #168]
    7d74:	ldr	x0, [x0, #16]
    7d78:	str	x0, [sp, #160]
    7d7c:	ldr	x1, [sp, #176]
    7d80:	ldr	x0, [sp, #160]
    7d84:	cmp	x1, x0
    7d88:	b.ne	7dc0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4e98>  // b.any
    7d8c:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    7d90:	add	x0, x0, #0x2b0
    7d94:	ldr	w1, [x0]
    7d98:	ldr	x0, [sp, #184]
    7d9c:	mov	w2, w0
    7da0:	mov	w0, #0x1                   	// #1
    7da4:	lsl	w0, w0, w2
    7da8:	mvn	w0, w0
    7dac:	and	w1, w1, w0
    7db0:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    7db4:	add	x0, x0, #0x2b0
    7db8:	str	w1, [x0]
    7dbc:	b	7e08 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4ee0>
    7dc0:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    7dc4:	add	x0, x0, #0x2b0
    7dc8:	ldr	x0, [x0, #24]
    7dcc:	ldr	x1, [sp, #160]
    7dd0:	cmp	x1, x0
    7dd4:	cset	w0, cs  // cs = hs, nlast
    7dd8:	and	w0, w0, #0xff
    7ddc:	and	x0, x0, #0xff
    7de0:	cmp	x0, #0x0
    7de4:	b.eq	7e04 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4edc>  // b.none
    7de8:	ldr	x0, [sp, #176]
    7dec:	ldr	x1, [sp, #160]
    7df0:	str	x1, [x0, #16]
    7df4:	ldr	x0, [sp, #160]
    7df8:	ldr	x1, [sp, #176]
    7dfc:	str	x1, [x0, #24]
    7e00:	b	7e08 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4ee0>
    7e04:	bl	1b90 <abort@plt>
    7e08:	ldr	x0, [sp, #184]
    7e0c:	lsl	x1, x0, #3
    7e10:	ldr	x0, [sp, #224]
    7e14:	sub	x0, x1, x0
    7e18:	str	x0, [sp, #152]
    7e1c:	ldr	x0, [sp, #152]
    7e20:	cmp	x0, #0x1f
    7e24:	b.hi	7e6c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4f44>  // b.pmore
    7e28:	ldr	x0, [sp, #184]
    7e2c:	lsl	x0, x0, #3
    7e30:	orr	x1, x0, #0x3
    7e34:	ldr	x0, [sp, #168]
    7e38:	str	x1, [x0, #8]
    7e3c:	ldr	x0, [sp, #184]
    7e40:	lsl	x0, x0, #3
    7e44:	ldr	x1, [sp, #168]
    7e48:	add	x0, x1, x0
    7e4c:	ldr	x1, [x0, #8]
    7e50:	ldr	x0, [sp, #184]
    7e54:	lsl	x0, x0, #3
    7e58:	ldr	x2, [sp, #168]
    7e5c:	add	x0, x2, x0
    7e60:	orr	x1, x1, #0x1
    7e64:	str	x1, [x0, #8]
    7e68:	b	7ff8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x50d0>
    7e6c:	ldr	x0, [sp, #224]
    7e70:	orr	x1, x0, #0x3
    7e74:	ldr	x0, [sp, #168]
    7e78:	str	x1, [x0, #8]
    7e7c:	ldr	x1, [sp, #168]
    7e80:	ldr	x0, [sp, #224]
    7e84:	add	x0, x1, x0
    7e88:	str	x0, [sp, #144]
    7e8c:	ldr	x0, [sp, #152]
    7e90:	orr	x1, x0, #0x1
    7e94:	ldr	x0, [sp, #144]
    7e98:	str	x1, [x0, #8]
    7e9c:	ldr	x1, [sp, #144]
    7ea0:	ldr	x0, [sp, #152]
    7ea4:	add	x0, x1, x0
    7ea8:	ldr	x1, [sp, #152]
    7eac:	str	x1, [x0]
    7eb0:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    7eb4:	add	x0, x0, #0x2b0
    7eb8:	ldr	x0, [x0, #8]
    7ebc:	str	x0, [sp, #136]
    7ec0:	ldr	x0, [sp, #136]
    7ec4:	cmp	x0, #0x0
    7ec8:	b.eq	7fd8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x50b0>  // b.none
    7ecc:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    7ed0:	add	x0, x0, #0x2b0
    7ed4:	ldr	x0, [x0, #32]
    7ed8:	str	x0, [sp, #128]
    7edc:	ldr	x0, [sp, #136]
    7ee0:	lsr	x0, x0, #3
    7ee4:	str	x0, [sp, #120]
    7ee8:	ldr	x0, [sp, #120]
    7eec:	lsl	x0, x0, #1
    7ef0:	add	x0, x0, #0x8
    7ef4:	lsl	x1, x0, #3
    7ef8:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    7efc:	add	x0, x0, #0x2b0
    7f00:	add	x0, x1, x0
    7f04:	str	x0, [sp, #112]
    7f08:	ldr	x0, [sp, #112]
    7f0c:	str	x0, [sp, #216]
    7f10:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    7f14:	add	x0, x0, #0x2b0
    7f18:	ldr	w1, [x0]
    7f1c:	ldr	x0, [sp, #120]
    7f20:	mov	w2, w0
    7f24:	mov	w0, #0x1                   	// #1
    7f28:	lsl	w0, w0, w2
    7f2c:	and	w0, w1, w0
    7f30:	cmp	w0, #0x0
    7f34:	b.ne	7f68 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5040>  // b.any
    7f38:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    7f3c:	add	x0, x0, #0x2b0
    7f40:	ldr	w1, [x0]
    7f44:	ldr	x0, [sp, #120]
    7f48:	mov	w2, w0
    7f4c:	mov	w0, #0x1                   	// #1
    7f50:	lsl	w0, w0, w2
    7f54:	orr	w1, w1, w0
    7f58:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    7f5c:	add	x0, x0, #0x2b0
    7f60:	str	w1, [x0]
    7f64:	b	7fa8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5080>
    7f68:	ldr	x0, [sp, #112]
    7f6c:	ldr	x1, [x0, #16]
    7f70:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    7f74:	add	x0, x0, #0x2b0
    7f78:	ldr	x0, [x0, #24]
    7f7c:	cmp	x1, x0
    7f80:	cset	w0, cs  // cs = hs, nlast
    7f84:	and	w0, w0, #0xff
    7f88:	and	x0, x0, #0xff
    7f8c:	cmp	x0, #0x0
    7f90:	b.eq	7fa4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x507c>  // b.none
    7f94:	ldr	x0, [sp, #112]
    7f98:	ldr	x0, [x0, #16]
    7f9c:	str	x0, [sp, #216]
    7fa0:	b	7fa8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5080>
    7fa4:	bl	1b90 <abort@plt>
    7fa8:	ldr	x0, [sp, #112]
    7fac:	ldr	x1, [sp, #128]
    7fb0:	str	x1, [x0, #16]
    7fb4:	ldr	x0, [sp, #216]
    7fb8:	ldr	x1, [sp, #128]
    7fbc:	str	x1, [x0, #24]
    7fc0:	ldr	x0, [sp, #128]
    7fc4:	ldr	x1, [sp, #216]
    7fc8:	str	x1, [x0, #16]
    7fcc:	ldr	x0, [sp, #128]
    7fd0:	ldr	x1, [sp, #112]
    7fd4:	str	x1, [x0, #24]
    7fd8:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    7fdc:	add	x0, x0, #0x2b0
    7fe0:	ldr	x1, [sp, #152]
    7fe4:	str	x1, [x0, #8]
    7fe8:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    7fec:	add	x0, x0, #0x2b0
    7ff0:	ldr	x1, [sp, #144]
    7ff4:	str	x1, [x0, #32]
    7ff8:	ldr	x0, [sp, #168]
    7ffc:	add	x0, x0, #0x10
    8000:	str	x0, [sp, #232]
    8004:	b	8290 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5368>
    8008:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    800c:	add	x0, x0, #0x2b0
    8010:	ldr	w0, [x0, #4]
    8014:	cmp	w0, #0x0
    8018:	b.eq	809c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5174>  // b.none
    801c:	ldr	x1, [sp, #224]
    8020:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    8024:	add	x0, x0, #0x2b0
    8028:	bl	67e4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x38bc>
    802c:	str	x0, [sp, #232]
    8030:	ldr	x0, [sp, #232]
    8034:	cmp	x0, #0x0
    8038:	b.eq	809c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5174>  // b.none
    803c:	b	8290 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5368>
    8040:	ldr	x0, [sp, #24]
    8044:	cmn	x0, #0x81
    8048:	b.ls	8058 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5130>  // b.plast
    804c:	mov	x0, #0xffffffffffffffff    	// #-1
    8050:	str	x0, [sp, #224]
    8054:	b	809c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5174>
    8058:	ldr	x0, [sp, #24]
    805c:	add	x0, x0, #0xf
    8060:	and	x0, x0, #0xfffffffffffffff8
    8064:	str	x0, [sp, #224]
    8068:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    806c:	add	x0, x0, #0x2b0
    8070:	ldr	w0, [x0, #4]
    8074:	cmp	w0, #0x0
    8078:	b.eq	809c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5174>  // b.none
    807c:	ldr	x1, [sp, #224]
    8080:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    8084:	add	x0, x0, #0x2b0
    8088:	bl	5be0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2cb8>
    808c:	str	x0, [sp, #232]
    8090:	ldr	x0, [sp, #232]
    8094:	cmp	x0, #0x0
    8098:	b.ne	828c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5364>  // b.any
    809c:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    80a0:	add	x0, x0, #0x2b0
    80a4:	ldr	x0, [x0, #8]
    80a8:	ldr	x1, [sp, #224]
    80ac:	cmp	x1, x0
    80b0:	b.hi	81c4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x529c>  // b.pmore
    80b4:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    80b8:	add	x0, x0, #0x2b0
    80bc:	ldr	x1, [x0, #8]
    80c0:	ldr	x0, [sp, #224]
    80c4:	sub	x0, x1, x0
    80c8:	str	x0, [sp, #56]
    80cc:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    80d0:	add	x0, x0, #0x2b0
    80d4:	ldr	x0, [x0, #32]
    80d8:	str	x0, [sp, #48]
    80dc:	ldr	x0, [sp, #56]
    80e0:	cmp	x0, #0x1f
    80e4:	b.ls	8158 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5230>  // b.plast
    80e8:	ldr	x1, [sp, #48]
    80ec:	ldr	x0, [sp, #224]
    80f0:	add	x1, x1, x0
    80f4:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    80f8:	add	x0, x0, #0x2b0
    80fc:	str	x1, [x0, #32]
    8100:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    8104:	add	x0, x0, #0x2b0
    8108:	ldr	x0, [x0, #32]
    810c:	str	x0, [sp, #32]
    8110:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    8114:	add	x0, x0, #0x2b0
    8118:	ldr	x1, [sp, #56]
    811c:	str	x1, [x0, #8]
    8120:	ldr	x0, [sp, #56]
    8124:	orr	x1, x0, #0x1
    8128:	ldr	x0, [sp, #32]
    812c:	str	x1, [x0, #8]
    8130:	ldr	x1, [sp, #32]
    8134:	ldr	x0, [sp, #56]
    8138:	add	x0, x1, x0
    813c:	ldr	x1, [sp, #56]
    8140:	str	x1, [x0]
    8144:	ldr	x0, [sp, #224]
    8148:	orr	x1, x0, #0x3
    814c:	ldr	x0, [sp, #48]
    8150:	str	x1, [x0, #8]
    8154:	b	81b4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x528c>
    8158:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    815c:	add	x0, x0, #0x2b0
    8160:	ldr	x0, [x0, #8]
    8164:	str	x0, [sp, #40]
    8168:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    816c:	add	x0, x0, #0x2b0
    8170:	str	xzr, [x0, #8]
    8174:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    8178:	add	x0, x0, #0x2b0
    817c:	str	xzr, [x0, #32]
    8180:	ldr	x0, [sp, #40]
    8184:	orr	x1, x0, #0x3
    8188:	ldr	x0, [sp, #48]
    818c:	str	x1, [x0, #8]
    8190:	ldr	x1, [sp, #48]
    8194:	ldr	x0, [sp, #40]
    8198:	add	x0, x1, x0
    819c:	ldr	x1, [x0, #8]
    81a0:	ldr	x2, [sp, #48]
    81a4:	ldr	x0, [sp, #40]
    81a8:	add	x0, x2, x0
    81ac:	orr	x1, x1, #0x1
    81b0:	str	x1, [x0, #8]
    81b4:	ldr	x0, [sp, #48]
    81b8:	add	x0, x0, #0x10
    81bc:	str	x0, [sp, #232]
    81c0:	b	8290 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5368>
    81c4:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    81c8:	add	x0, x0, #0x2b0
    81cc:	ldr	x0, [x0, #16]
    81d0:	ldr	x1, [sp, #224]
    81d4:	cmp	x1, x0
    81d8:	b.cs	8274 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x534c>  // b.hs, b.nlast
    81dc:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    81e0:	add	x0, x0, #0x2b0
    81e4:	ldr	x1, [x0, #16]
    81e8:	ldr	x0, [sp, #224]
    81ec:	sub	x1, x1, x0
    81f0:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    81f4:	add	x0, x0, #0x2b0
    81f8:	str	x1, [x0, #16]
    81fc:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    8200:	add	x0, x0, #0x2b0
    8204:	ldr	x0, [x0, #16]
    8208:	str	x0, [sp, #80]
    820c:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    8210:	add	x0, x0, #0x2b0
    8214:	ldr	x0, [x0, #40]
    8218:	str	x0, [sp, #72]
    821c:	ldr	x1, [sp, #72]
    8220:	ldr	x0, [sp, #224]
    8224:	add	x1, x1, x0
    8228:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    822c:	add	x0, x0, #0x2b0
    8230:	str	x1, [x0, #40]
    8234:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    8238:	add	x0, x0, #0x2b0
    823c:	ldr	x0, [x0, #40]
    8240:	str	x0, [sp, #64]
    8244:	ldr	x0, [sp, #80]
    8248:	orr	x1, x0, #0x1
    824c:	ldr	x0, [sp, #64]
    8250:	str	x1, [x0, #8]
    8254:	ldr	x0, [sp, #224]
    8258:	orr	x1, x0, #0x3
    825c:	ldr	x0, [sp, #72]
    8260:	str	x1, [x0, #8]
    8264:	ldr	x0, [sp, #72]
    8268:	add	x0, x0, #0x10
    826c:	str	x0, [sp, #232]
    8270:	b	8290 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5368>
    8274:	ldr	x1, [sp, #224]
    8278:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    827c:	add	x0, x0, #0x2b0
    8280:	bl	4cb8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x1d90>
    8284:	str	x0, [sp, #232]
    8288:	b	8290 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5368>
    828c:	nop
    8290:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    8294:	add	x0, x0, #0x2b0
    8298:	ldr	w0, [x0, #864]
    829c:	and	w0, w0, #0x2
    82a0:	cmp	w0, #0x0
    82a4:	b.eq	82b4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x538c>  // b.none
    82a8:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    82ac:	add	x0, x0, #0x618
    82b0:	bl	1ce0 <pthread_mutex_unlock@plt>
    82b4:	ldr	x0, [sp, #232]
    82b8:	b	82c0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5398>
    82bc:	mov	x0, #0x0                   	// #0
    82c0:	ldp	x29, x30, [sp], #240
    82c4:	ret
    82c8:	stp	x29, x30, [sp, #-400]!
    82cc:	mov	x29, sp
    82d0:	str	x0, [sp, #24]
    82d4:	ldr	x0, [sp, #24]
    82d8:	cmp	x0, #0x0
    82dc:	b.eq	95c4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x669c>  // b.none
    82e0:	ldr	x0, [sp, #24]
    82e4:	sub	x0, x0, #0x10
    82e8:	str	x0, [sp, #392]
    82ec:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    82f0:	add	x0, x0, #0x280
    82f4:	ldr	x0, [x0, #8]
    82f8:	cmp	x0, #0x0
    82fc:	b.ne	830c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x53e4>  // b.any
    8300:	bl	3184 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x25c>
    8304:	cmp	w0, #0x0
    8308:	b.ne	8324 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x53fc>  // b.any
    830c:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    8310:	add	x0, x0, #0x2b0
    8314:	ldr	w0, [x0, #864]
    8318:	and	w0, w0, #0x2
    831c:	cmp	w0, #0x0
    8320:	b.eq	8338 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5410>  // b.none
    8324:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    8328:	add	x0, x0, #0x618
    832c:	bl	1cd0 <pthread_mutex_lock@plt>
    8330:	cmp	w0, #0x0
    8334:	b.ne	95c4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x669c>  // b.any
    8338:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    833c:	add	x0, x0, #0x2b0
    8340:	ldr	x0, [x0, #24]
    8344:	ldr	x1, [sp, #392]
    8348:	cmp	x1, x0
    834c:	cset	w0, cs  // cs = hs, nlast
    8350:	and	w0, w0, #0xff
    8354:	and	x0, x0, #0xff
    8358:	cmp	x0, #0x0
    835c:	b.eq	9584 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x665c>  // b.none
    8360:	ldr	x0, [sp, #392]
    8364:	ldr	x0, [x0, #8]
    8368:	and	x0, x0, #0x2
    836c:	cmp	x0, #0x0
    8370:	cset	w0, ne  // ne = any
    8374:	and	w0, w0, #0xff
    8378:	and	x0, x0, #0xff
    837c:	cmp	x0, #0x0
    8380:	b.eq	9584 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x665c>  // b.none
    8384:	ldr	x0, [sp, #392]
    8388:	ldr	x0, [x0, #8]
    838c:	and	x0, x0, #0xfffffffffffffffc
    8390:	str	x0, [sp, #384]
    8394:	ldr	x1, [sp, #392]
    8398:	ldr	x0, [sp, #384]
    839c:	add	x0, x1, x0
    83a0:	str	x0, [sp, #296]
    83a4:	ldr	x0, [sp, #392]
    83a8:	ldr	x0, [x0, #8]
    83ac:	and	x0, x0, #0x1
    83b0:	cmp	x0, #0x0
    83b4:	b.ne	89d4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5aac>  // b.any
    83b8:	ldr	x0, [sp, #392]
    83bc:	ldr	x0, [x0]
    83c0:	str	x0, [sp, #288]
    83c4:	ldr	x0, [sp, #288]
    83c8:	and	x0, x0, #0x1
    83cc:	cmp	x0, #0x0
    83d0:	b.eq	8438 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5510>  // b.none
    83d4:	ldr	x0, [sp, #288]
    83d8:	and	x0, x0, #0xfffffffffffffffe
    83dc:	str	x0, [sp, #288]
    83e0:	ldr	x1, [sp, #288]
    83e4:	ldr	x0, [sp, #384]
    83e8:	add	x0, x1, x0
    83ec:	add	x0, x0, #0x20
    83f0:	str	x0, [sp, #384]
    83f4:	ldr	x0, [sp, #288]
    83f8:	neg	x0, x0
    83fc:	ldr	x1, [sp, #392]
    8400:	add	x0, x1, x0
    8404:	ldr	x1, [sp, #384]
    8408:	bl	a374 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x744c>
    840c:	cmp	w0, #0x0
    8410:	b.ne	9594 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x666c>  // b.any
    8414:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    8418:	add	x0, x0, #0x2b0
    841c:	ldr	x1, [x0, #848]
    8420:	ldr	x0, [sp, #384]
    8424:	sub	x1, x1, x0
    8428:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    842c:	add	x0, x0, #0x2b0
    8430:	str	x1, [x0, #848]
    8434:	b	9594 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x666c>
    8438:	ldr	x0, [sp, #288]
    843c:	neg	x0, x0
    8440:	ldr	x1, [sp, #392]
    8444:	add	x0, x1, x0
    8448:	str	x0, [sp, #280]
    844c:	ldr	x1, [sp, #384]
    8450:	ldr	x0, [sp, #288]
    8454:	add	x0, x1, x0
    8458:	str	x0, [sp, #384]
    845c:	ldr	x0, [sp, #280]
    8460:	str	x0, [sp, #392]
    8464:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    8468:	add	x0, x0, #0x2b0
    846c:	ldr	x0, [x0, #24]
    8470:	ldr	x1, [sp, #280]
    8474:	cmp	x1, x0
    8478:	cset	w0, cs  // cs = hs, nlast
    847c:	and	w0, w0, #0xff
    8480:	and	x0, x0, #0xff
    8484:	cmp	x0, #0x0
    8488:	b.eq	958c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6664>  // b.none
    848c:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    8490:	add	x0, x0, #0x2b0
    8494:	ldr	x0, [x0, #32]
    8498:	ldr	x1, [sp, #392]
    849c:	cmp	x1, x0
    84a0:	b.eq	8974 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5a4c>  // b.none
    84a4:	ldr	x0, [sp, #288]
    84a8:	lsr	x0, x0, #3
    84ac:	cmp	x0, #0x1f
    84b0:	b.hi	8624 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x56fc>  // b.pmore
    84b4:	ldr	x0, [sp, #392]
    84b8:	ldr	x0, [x0, #16]
    84bc:	str	x0, [sp, #224]
    84c0:	ldr	x0, [sp, #392]
    84c4:	ldr	x0, [x0, #24]
    84c8:	str	x0, [sp, #216]
    84cc:	ldr	x0, [sp, #288]
    84d0:	lsr	x0, x0, #3
    84d4:	str	x0, [sp, #208]
    84d8:	ldr	x1, [sp, #224]
    84dc:	ldr	x0, [sp, #216]
    84e0:	cmp	x1, x0
    84e4:	b.ne	851c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x55f4>  // b.any
    84e8:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    84ec:	add	x0, x0, #0x2b0
    84f0:	ldr	w1, [x0]
    84f4:	ldr	x0, [sp, #208]
    84f8:	mov	w2, w0
    84fc:	mov	w0, #0x1                   	// #1
    8500:	lsl	w0, w0, w2
    8504:	mvn	w0, w0
    8508:	and	w1, w1, w0
    850c:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    8510:	add	x0, x0, #0x2b0
    8514:	str	w1, [x0]
    8518:	b	89d4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5aac>
    851c:	ldr	x0, [sp, #208]
    8520:	lsl	x0, x0, #1
    8524:	add	x0, x0, #0x8
    8528:	lsl	x1, x0, #3
    852c:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    8530:	add	x0, x0, #0x2b0
    8534:	add	x0, x1, x0
    8538:	ldr	x1, [sp, #224]
    853c:	cmp	x1, x0
    8540:	cset	w0, eq  // eq = none
    8544:	and	w0, w0, #0xff
    8548:	and	x0, x0, #0xff
    854c:	cmp	x0, #0x0
    8550:	b.ne	857c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5654>  // b.any
    8554:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    8558:	add	x0, x0, #0x2b0
    855c:	ldr	x0, [x0, #24]
    8560:	ldr	x1, [sp, #224]
    8564:	cmp	x1, x0
    8568:	cset	w0, cs  // cs = hs, nlast
    856c:	and	w0, w0, #0xff
    8570:	and	x0, x0, #0xff
    8574:	cmp	x0, #0x0
    8578:	b.eq	8584 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x565c>  // b.none
    857c:	mov	w0, #0x1                   	// #1
    8580:	b	8588 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5660>
    8584:	mov	w0, #0x0                   	// #0
    8588:	cmp	w0, #0x0
    858c:	b.eq	8620 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x56f8>  // b.none
    8590:	ldr	x0, [sp, #208]
    8594:	lsl	x0, x0, #1
    8598:	add	x0, x0, #0x8
    859c:	lsl	x1, x0, #3
    85a0:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    85a4:	add	x0, x0, #0x2b0
    85a8:	add	x0, x1, x0
    85ac:	ldr	x1, [sp, #216]
    85b0:	cmp	x1, x0
    85b4:	cset	w0, eq  // eq = none
    85b8:	and	w0, w0, #0xff
    85bc:	and	x0, x0, #0xff
    85c0:	cmp	x0, #0x0
    85c4:	b.ne	85f0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x56c8>  // b.any
    85c8:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    85cc:	add	x0, x0, #0x2b0
    85d0:	ldr	x0, [x0, #24]
    85d4:	ldr	x1, [sp, #216]
    85d8:	cmp	x1, x0
    85dc:	cset	w0, cs  // cs = hs, nlast
    85e0:	and	w0, w0, #0xff
    85e4:	and	x0, x0, #0xff
    85e8:	cmp	x0, #0x0
    85ec:	b.eq	85f8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x56d0>  // b.none
    85f0:	mov	w0, #0x1                   	// #1
    85f4:	b	85fc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x56d4>
    85f8:	mov	w0, #0x0                   	// #0
    85fc:	cmp	w0, #0x0
    8600:	b.eq	8620 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x56f8>  // b.none
    8604:	ldr	x0, [sp, #224]
    8608:	ldr	x1, [sp, #216]
    860c:	str	x1, [x0, #24]
    8610:	ldr	x0, [sp, #216]
    8614:	ldr	x1, [sp, #224]
    8618:	str	x1, [x0, #16]
    861c:	b	89d4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5aac>
    8620:	bl	1b90 <abort@plt>
    8624:	ldr	x0, [sp, #392]
    8628:	str	x0, [sp, #272]
    862c:	ldr	x0, [sp, #272]
    8630:	ldr	x0, [x0, #48]
    8634:	str	x0, [sp, #264]
    8638:	ldr	x0, [sp, #272]
    863c:	ldr	x0, [x0, #24]
    8640:	ldr	x1, [sp, #272]
    8644:	cmp	x1, x0
    8648:	b.eq	86ac <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5784>  // b.none
    864c:	ldr	x0, [sp, #272]
    8650:	ldr	x0, [x0, #16]
    8654:	str	x0, [sp, #256]
    8658:	ldr	x0, [sp, #272]
    865c:	ldr	x0, [x0, #24]
    8660:	str	x0, [sp, #376]
    8664:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    8668:	add	x0, x0, #0x2b0
    866c:	ldr	x0, [x0, #24]
    8670:	ldr	x1, [sp, #256]
    8674:	cmp	x1, x0
    8678:	cset	w0, cs  // cs = hs, nlast
    867c:	and	w0, w0, #0xff
    8680:	and	x0, x0, #0xff
    8684:	cmp	x0, #0x0
    8688:	b.eq	86a8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5780>  // b.none
    868c:	ldr	x0, [sp, #256]
    8690:	ldr	x1, [sp, #376]
    8694:	str	x1, [x0, #24]
    8698:	ldr	x0, [sp, #376]
    869c:	ldr	x1, [sp, #256]
    86a0:	str	x1, [x0, #16]
    86a4:	b	877c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5854>
    86a8:	bl	1b90 <abort@plt>
    86ac:	ldr	x0, [sp, #272]
    86b0:	add	x0, x0, #0x28
    86b4:	str	x0, [sp, #368]
    86b8:	ldr	x0, [sp, #368]
    86bc:	ldr	x0, [x0]
    86c0:	str	x0, [sp, #376]
    86c4:	ldr	x0, [sp, #376]
    86c8:	cmp	x0, #0x0
    86cc:	b.ne	870c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x57e4>  // b.any
    86d0:	ldr	x0, [sp, #272]
    86d4:	add	x0, x0, #0x20
    86d8:	str	x0, [sp, #368]
    86dc:	ldr	x0, [sp, #368]
    86e0:	ldr	x0, [x0]
    86e4:	str	x0, [sp, #376]
    86e8:	ldr	x0, [sp, #376]
    86ec:	cmp	x0, #0x0
    86f0:	b.eq	877c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5854>  // b.none
    86f4:	b	870c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x57e4>
    86f8:	ldr	x0, [sp, #360]
    86fc:	str	x0, [sp, #368]
    8700:	ldr	x0, [sp, #368]
    8704:	ldr	x0, [x0]
    8708:	str	x0, [sp, #376]
    870c:	ldr	x0, [sp, #376]
    8710:	add	x0, x0, #0x28
    8714:	str	x0, [sp, #360]
    8718:	ldr	x0, [sp, #360]
    871c:	ldr	x0, [x0]
    8720:	cmp	x0, #0x0
    8724:	b.ne	86f8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x57d0>  // b.any
    8728:	ldr	x0, [sp, #376]
    872c:	add	x0, x0, #0x20
    8730:	str	x0, [sp, #360]
    8734:	ldr	x0, [sp, #360]
    8738:	ldr	x0, [x0]
    873c:	cmp	x0, #0x0
    8740:	b.ne	86f8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x57d0>  // b.any
    8744:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    8748:	add	x0, x0, #0x2b0
    874c:	ldr	x0, [x0, #24]
    8750:	ldr	x1, [sp, #368]
    8754:	cmp	x1, x0
    8758:	cset	w0, cs  // cs = hs, nlast
    875c:	and	w0, w0, #0xff
    8760:	and	x0, x0, #0xff
    8764:	cmp	x0, #0x0
    8768:	b.eq	8778 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5850>  // b.none
    876c:	ldr	x0, [sp, #368]
    8770:	str	xzr, [x0]
    8774:	b	877c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5854>
    8778:	bl	1b90 <abort@plt>
    877c:	ldr	x0, [sp, #264]
    8780:	cmp	x0, #0x0
    8784:	b.eq	89d4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5aac>  // b.none
    8788:	ldr	x0, [sp, #272]
    878c:	ldr	x0, [x0, #56]
    8790:	add	x0, x0, #0x4a
    8794:	lsl	x1, x0, #3
    8798:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    879c:	add	x0, x0, #0x2b0
    87a0:	add	x0, x1, x0
    87a4:	str	x0, [sp, #248]
    87a8:	ldr	x0, [sp, #248]
    87ac:	ldr	x0, [x0]
    87b0:	ldr	x1, [sp, #272]
    87b4:	cmp	x1, x0
    87b8:	b.ne	8810 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x58e8>  // b.any
    87bc:	ldr	x0, [sp, #248]
    87c0:	ldr	x1, [sp, #376]
    87c4:	str	x1, [x0]
    87c8:	ldr	x0, [sp, #248]
    87cc:	ldr	x0, [x0]
    87d0:	cmp	x0, #0x0
    87d4:	b.ne	8870 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5948>  // b.any
    87d8:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    87dc:	add	x0, x0, #0x2b0
    87e0:	ldr	w1, [x0, #4]
    87e4:	ldr	x0, [sp, #272]
    87e8:	ldr	x0, [x0, #56]
    87ec:	mov	w2, w0
    87f0:	mov	w0, #0x1                   	// #1
    87f4:	lsl	w0, w0, w2
    87f8:	mvn	w0, w0
    87fc:	and	w1, w1, w0
    8800:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    8804:	add	x0, x0, #0x2b0
    8808:	str	w1, [x0, #4]
    880c:	b	8870 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5948>
    8810:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    8814:	add	x0, x0, #0x2b0
    8818:	ldr	x0, [x0, #24]
    881c:	ldr	x1, [sp, #264]
    8820:	cmp	x1, x0
    8824:	cset	w0, cs  // cs = hs, nlast
    8828:	and	w0, w0, #0xff
    882c:	and	x0, x0, #0xff
    8830:	cmp	x0, #0x0
    8834:	b.eq	886c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5944>  // b.none
    8838:	ldr	x0, [sp, #264]
    883c:	ldr	x0, [x0, #32]
    8840:	ldr	x1, [sp, #272]
    8844:	cmp	x1, x0
    8848:	b.ne	885c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5934>  // b.any
    884c:	ldr	x0, [sp, #264]
    8850:	ldr	x1, [sp, #376]
    8854:	str	x1, [x0, #32]
    8858:	b	8870 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5948>
    885c:	ldr	x0, [sp, #264]
    8860:	ldr	x1, [sp, #376]
    8864:	str	x1, [x0, #40]
    8868:	b	8870 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5948>
    886c:	bl	1b90 <abort@plt>
    8870:	ldr	x0, [sp, #376]
    8874:	cmp	x0, #0x0
    8878:	b.eq	89d4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5aac>  // b.none
    887c:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    8880:	add	x0, x0, #0x2b0
    8884:	ldr	x0, [x0, #24]
    8888:	ldr	x1, [sp, #376]
    888c:	cmp	x1, x0
    8890:	cset	w0, cs  // cs = hs, nlast
    8894:	and	w0, w0, #0xff
    8898:	and	x0, x0, #0xff
    889c:	cmp	x0, #0x0
    88a0:	b.eq	8970 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5a48>  // b.none
    88a4:	ldr	x0, [sp, #376]
    88a8:	ldr	x1, [sp, #264]
    88ac:	str	x1, [x0, #48]
    88b0:	ldr	x0, [sp, #272]
    88b4:	ldr	x0, [x0, #32]
    88b8:	str	x0, [sp, #240]
    88bc:	ldr	x0, [sp, #240]
    88c0:	cmp	x0, #0x0
    88c4:	b.eq	8910 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x59e8>  // b.none
    88c8:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    88cc:	add	x0, x0, #0x2b0
    88d0:	ldr	x0, [x0, #24]
    88d4:	ldr	x1, [sp, #240]
    88d8:	cmp	x1, x0
    88dc:	cset	w0, cs  // cs = hs, nlast
    88e0:	and	w0, w0, #0xff
    88e4:	and	x0, x0, #0xff
    88e8:	cmp	x0, #0x0
    88ec:	b.eq	890c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x59e4>  // b.none
    88f0:	ldr	x0, [sp, #376]
    88f4:	ldr	x1, [sp, #240]
    88f8:	str	x1, [x0, #32]
    88fc:	ldr	x0, [sp, #240]
    8900:	ldr	x1, [sp, #376]
    8904:	str	x1, [x0, #48]
    8908:	b	8910 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x59e8>
    890c:	bl	1b90 <abort@plt>
    8910:	ldr	x0, [sp, #272]
    8914:	ldr	x0, [x0, #40]
    8918:	str	x0, [sp, #232]
    891c:	ldr	x0, [sp, #232]
    8920:	cmp	x0, #0x0
    8924:	b.eq	89d4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5aac>  // b.none
    8928:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    892c:	add	x0, x0, #0x2b0
    8930:	ldr	x0, [x0, #24]
    8934:	ldr	x1, [sp, #232]
    8938:	cmp	x1, x0
    893c:	cset	w0, cs  // cs = hs, nlast
    8940:	and	w0, w0, #0xff
    8944:	and	x0, x0, #0xff
    8948:	cmp	x0, #0x0
    894c:	b.eq	896c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5a44>  // b.none
    8950:	ldr	x0, [sp, #376]
    8954:	ldr	x1, [sp, #232]
    8958:	str	x1, [x0, #40]
    895c:	ldr	x0, [sp, #232]
    8960:	ldr	x1, [sp, #376]
    8964:	str	x1, [x0, #48]
    8968:	b	89d4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5aac>
    896c:	bl	1b90 <abort@plt>
    8970:	bl	1b90 <abort@plt>
    8974:	ldr	x0, [sp, #296]
    8978:	ldr	x0, [x0, #8]
    897c:	and	x0, x0, #0x3
    8980:	cmp	x0, #0x3
    8984:	b.ne	89d4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5aac>  // b.any
    8988:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    898c:	add	x0, x0, #0x2b0
    8990:	ldr	x1, [sp, #384]
    8994:	str	x1, [x0, #8]
    8998:	ldr	x0, [sp, #296]
    899c:	ldr	x0, [x0, #8]
    89a0:	and	x1, x0, #0xfffffffffffffffe
    89a4:	ldr	x0, [sp, #296]
    89a8:	str	x1, [x0, #8]
    89ac:	ldr	x0, [sp, #384]
    89b0:	orr	x1, x0, #0x1
    89b4:	ldr	x0, [sp, #392]
    89b8:	str	x1, [x0, #8]
    89bc:	ldr	x1, [sp, #392]
    89c0:	ldr	x0, [sp, #384]
    89c4:	add	x0, x1, x0
    89c8:	ldr	x1, [sp, #384]
    89cc:	str	x1, [x0]
    89d0:	b	95a0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6678>
    89d4:	ldr	x1, [sp, #392]
    89d8:	ldr	x0, [sp, #296]
    89dc:	cmp	x1, x0
    89e0:	cset	w0, cc  // cc = lo, ul, last
    89e4:	and	w0, w0, #0xff
    89e8:	and	x0, x0, #0xff
    89ec:	cmp	x0, #0x0
    89f0:	b.eq	9584 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x665c>  // b.none
    89f4:	ldr	x0, [sp, #296]
    89f8:	ldr	x0, [x0, #8]
    89fc:	and	x0, x0, #0x1
    8a00:	cmp	x0, #0x0
    8a04:	cset	w0, ne  // ne = any
    8a08:	and	w0, w0, #0xff
    8a0c:	and	x0, x0, #0xff
    8a10:	cmp	x0, #0x0
    8a14:	b.eq	9584 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x665c>  // b.none
    8a18:	ldr	x0, [sp, #296]
    8a1c:	ldr	x0, [x0, #8]
    8a20:	and	x0, x0, #0x2
    8a24:	cmp	x0, #0x0
    8a28:	b.ne	90b0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6188>  // b.any
    8a2c:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    8a30:	add	x0, x0, #0x2b0
    8a34:	ldr	x0, [x0, #40]
    8a38:	ldr	x1, [sp, #296]
    8a3c:	cmp	x1, x0
    8a40:	b.ne	8af0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5bc8>  // b.any
    8a44:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    8a48:	add	x0, x0, #0x2b0
    8a4c:	ldr	x1, [x0, #16]
    8a50:	ldr	x0, [sp, #384]
    8a54:	add	x1, x1, x0
    8a58:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    8a5c:	add	x0, x0, #0x2b0
    8a60:	str	x1, [x0, #16]
    8a64:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    8a68:	add	x0, x0, #0x2b0
    8a6c:	ldr	x0, [x0, #16]
    8a70:	str	x0, [sp, #112]
    8a74:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    8a78:	add	x0, x0, #0x2b0
    8a7c:	ldr	x1, [sp, #392]
    8a80:	str	x1, [x0, #40]
    8a84:	ldr	x0, [sp, #112]
    8a88:	orr	x1, x0, #0x1
    8a8c:	ldr	x0, [sp, #392]
    8a90:	str	x1, [x0, #8]
    8a94:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    8a98:	add	x0, x0, #0x2b0
    8a9c:	ldr	x0, [x0, #32]
    8aa0:	ldr	x1, [sp, #392]
    8aa4:	cmp	x1, x0
    8aa8:	b.ne	8ac4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5b9c>  // b.any
    8aac:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    8ab0:	add	x0, x0, #0x2b0
    8ab4:	str	xzr, [x0, #32]
    8ab8:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    8abc:	add	x0, x0, #0x2b0
    8ac0:	str	xzr, [x0, #8]
    8ac4:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    8ac8:	add	x0, x0, #0x2b0
    8acc:	ldr	x0, [x0, #48]
    8ad0:	ldr	x1, [sp, #112]
    8ad4:	cmp	x1, x0
    8ad8:	b.ls	959c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6674>  // b.plast
    8adc:	mov	x1, #0x0                   	// #0
    8ae0:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    8ae4:	add	x0, x0, #0x2b0
    8ae8:	bl	5a24 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2afc>
    8aec:	b	959c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6674>
    8af0:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    8af4:	add	x0, x0, #0x2b0
    8af8:	ldr	x0, [x0, #32]
    8afc:	ldr	x1, [sp, #296]
    8b00:	cmp	x1, x0
    8b04:	b.ne	8b70 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5c48>  // b.any
    8b08:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    8b0c:	add	x0, x0, #0x2b0
    8b10:	ldr	x1, [x0, #8]
    8b14:	ldr	x0, [sp, #384]
    8b18:	add	x1, x1, x0
    8b1c:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    8b20:	add	x0, x0, #0x2b0
    8b24:	str	x1, [x0, #8]
    8b28:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    8b2c:	add	x0, x0, #0x2b0
    8b30:	ldr	x0, [x0, #8]
    8b34:	str	x0, [sp, #120]
    8b38:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    8b3c:	add	x0, x0, #0x2b0
    8b40:	ldr	x1, [sp, #392]
    8b44:	str	x1, [x0, #32]
    8b48:	ldr	x0, [sp, #120]
    8b4c:	orr	x1, x0, #0x1
    8b50:	ldr	x0, [sp, #392]
    8b54:	str	x1, [x0, #8]
    8b58:	ldr	x1, [sp, #392]
    8b5c:	ldr	x0, [sp, #120]
    8b60:	add	x0, x1, x0
    8b64:	ldr	x1, [sp, #120]
    8b68:	str	x1, [x0]
    8b6c:	b	95a0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6678>
    8b70:	ldr	x0, [sp, #296]
    8b74:	ldr	x0, [x0, #8]
    8b78:	and	x0, x0, #0xfffffffffffffffc
    8b7c:	str	x0, [sp, #200]
    8b80:	ldr	x1, [sp, #384]
    8b84:	ldr	x0, [sp, #200]
    8b88:	add	x0, x1, x0
    8b8c:	str	x0, [sp, #384]
    8b90:	ldr	x0, [sp, #200]
    8b94:	lsr	x0, x0, #3
    8b98:	cmp	x0, #0x1f
    8b9c:	b.hi	8d10 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5de8>  // b.pmore
    8ba0:	ldr	x0, [sp, #296]
    8ba4:	ldr	x0, [x0, #16]
    8ba8:	str	x0, [sp, #144]
    8bac:	ldr	x0, [sp, #296]
    8bb0:	ldr	x0, [x0, #24]
    8bb4:	str	x0, [sp, #136]
    8bb8:	ldr	x0, [sp, #200]
    8bbc:	lsr	x0, x0, #3
    8bc0:	str	x0, [sp, #128]
    8bc4:	ldr	x1, [sp, #144]
    8bc8:	ldr	x0, [sp, #136]
    8bcc:	cmp	x1, x0
    8bd0:	b.ne	8c08 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5ce0>  // b.any
    8bd4:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    8bd8:	add	x0, x0, #0x2b0
    8bdc:	ldr	w1, [x0]
    8be0:	ldr	x0, [sp, #128]
    8be4:	mov	w2, w0
    8be8:	mov	w0, #0x1                   	// #1
    8bec:	lsl	w0, w0, w2
    8bf0:	mvn	w0, w0
    8bf4:	and	w1, w1, w0
    8bf8:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    8bfc:	add	x0, x0, #0x2b0
    8c00:	str	w1, [x0]
    8c04:	b	9060 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6138>
    8c08:	ldr	x0, [sp, #128]
    8c0c:	lsl	x0, x0, #1
    8c10:	add	x0, x0, #0x8
    8c14:	lsl	x1, x0, #3
    8c18:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    8c1c:	add	x0, x0, #0x2b0
    8c20:	add	x0, x1, x0
    8c24:	ldr	x1, [sp, #144]
    8c28:	cmp	x1, x0
    8c2c:	cset	w0, eq  // eq = none
    8c30:	and	w0, w0, #0xff
    8c34:	and	x0, x0, #0xff
    8c38:	cmp	x0, #0x0
    8c3c:	b.ne	8c68 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5d40>  // b.any
    8c40:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    8c44:	add	x0, x0, #0x2b0
    8c48:	ldr	x0, [x0, #24]
    8c4c:	ldr	x1, [sp, #144]
    8c50:	cmp	x1, x0
    8c54:	cset	w0, cs  // cs = hs, nlast
    8c58:	and	w0, w0, #0xff
    8c5c:	and	x0, x0, #0xff
    8c60:	cmp	x0, #0x0
    8c64:	b.eq	8c70 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5d48>  // b.none
    8c68:	mov	w0, #0x1                   	// #1
    8c6c:	b	8c74 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5d4c>
    8c70:	mov	w0, #0x0                   	// #0
    8c74:	cmp	w0, #0x0
    8c78:	b.eq	8d0c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5de4>  // b.none
    8c7c:	ldr	x0, [sp, #128]
    8c80:	lsl	x0, x0, #1
    8c84:	add	x0, x0, #0x8
    8c88:	lsl	x1, x0, #3
    8c8c:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    8c90:	add	x0, x0, #0x2b0
    8c94:	add	x0, x1, x0
    8c98:	ldr	x1, [sp, #136]
    8c9c:	cmp	x1, x0
    8ca0:	cset	w0, eq  // eq = none
    8ca4:	and	w0, w0, #0xff
    8ca8:	and	x0, x0, #0xff
    8cac:	cmp	x0, #0x0
    8cb0:	b.ne	8cdc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5db4>  // b.any
    8cb4:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    8cb8:	add	x0, x0, #0x2b0
    8cbc:	ldr	x0, [x0, #24]
    8cc0:	ldr	x1, [sp, #136]
    8cc4:	cmp	x1, x0
    8cc8:	cset	w0, cs  // cs = hs, nlast
    8ccc:	and	w0, w0, #0xff
    8cd0:	and	x0, x0, #0xff
    8cd4:	cmp	x0, #0x0
    8cd8:	b.eq	8ce4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5dbc>  // b.none
    8cdc:	mov	w0, #0x1                   	// #1
    8ce0:	b	8ce8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5dc0>
    8ce4:	mov	w0, #0x0                   	// #0
    8ce8:	cmp	w0, #0x0
    8cec:	b.eq	8d0c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5de4>  // b.none
    8cf0:	ldr	x0, [sp, #144]
    8cf4:	ldr	x1, [sp, #136]
    8cf8:	str	x1, [x0, #24]
    8cfc:	ldr	x0, [sp, #136]
    8d00:	ldr	x1, [sp, #144]
    8d04:	str	x1, [x0, #16]
    8d08:	b	9060 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6138>
    8d0c:	bl	1b90 <abort@plt>
    8d10:	ldr	x0, [sp, #296]
    8d14:	str	x0, [sp, #192]
    8d18:	ldr	x0, [sp, #192]
    8d1c:	ldr	x0, [x0, #48]
    8d20:	str	x0, [sp, #184]
    8d24:	ldr	x0, [sp, #192]
    8d28:	ldr	x0, [x0, #24]
    8d2c:	ldr	x1, [sp, #192]
    8d30:	cmp	x1, x0
    8d34:	b.eq	8d98 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5e70>  // b.none
    8d38:	ldr	x0, [sp, #192]
    8d3c:	ldr	x0, [x0, #16]
    8d40:	str	x0, [sp, #176]
    8d44:	ldr	x0, [sp, #192]
    8d48:	ldr	x0, [x0, #24]
    8d4c:	str	x0, [sp, #352]
    8d50:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    8d54:	add	x0, x0, #0x2b0
    8d58:	ldr	x0, [x0, #24]
    8d5c:	ldr	x1, [sp, #176]
    8d60:	cmp	x1, x0
    8d64:	cset	w0, cs  // cs = hs, nlast
    8d68:	and	w0, w0, #0xff
    8d6c:	and	x0, x0, #0xff
    8d70:	cmp	x0, #0x0
    8d74:	b.eq	8d94 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5e6c>  // b.none
    8d78:	ldr	x0, [sp, #176]
    8d7c:	ldr	x1, [sp, #352]
    8d80:	str	x1, [x0, #24]
    8d84:	ldr	x0, [sp, #352]
    8d88:	ldr	x1, [sp, #176]
    8d8c:	str	x1, [x0, #16]
    8d90:	b	8e68 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5f40>
    8d94:	bl	1b90 <abort@plt>
    8d98:	ldr	x0, [sp, #192]
    8d9c:	add	x0, x0, #0x28
    8da0:	str	x0, [sp, #344]
    8da4:	ldr	x0, [sp, #344]
    8da8:	ldr	x0, [x0]
    8dac:	str	x0, [sp, #352]
    8db0:	ldr	x0, [sp, #352]
    8db4:	cmp	x0, #0x0
    8db8:	b.ne	8df8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5ed0>  // b.any
    8dbc:	ldr	x0, [sp, #192]
    8dc0:	add	x0, x0, #0x20
    8dc4:	str	x0, [sp, #344]
    8dc8:	ldr	x0, [sp, #344]
    8dcc:	ldr	x0, [x0]
    8dd0:	str	x0, [sp, #352]
    8dd4:	ldr	x0, [sp, #352]
    8dd8:	cmp	x0, #0x0
    8ddc:	b.eq	8e68 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5f40>  // b.none
    8de0:	b	8df8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5ed0>
    8de4:	ldr	x0, [sp, #336]
    8de8:	str	x0, [sp, #344]
    8dec:	ldr	x0, [sp, #344]
    8df0:	ldr	x0, [x0]
    8df4:	str	x0, [sp, #352]
    8df8:	ldr	x0, [sp, #352]
    8dfc:	add	x0, x0, #0x28
    8e00:	str	x0, [sp, #336]
    8e04:	ldr	x0, [sp, #336]
    8e08:	ldr	x0, [x0]
    8e0c:	cmp	x0, #0x0
    8e10:	b.ne	8de4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5ebc>  // b.any
    8e14:	ldr	x0, [sp, #352]
    8e18:	add	x0, x0, #0x20
    8e1c:	str	x0, [sp, #336]
    8e20:	ldr	x0, [sp, #336]
    8e24:	ldr	x0, [x0]
    8e28:	cmp	x0, #0x0
    8e2c:	b.ne	8de4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5ebc>  // b.any
    8e30:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    8e34:	add	x0, x0, #0x2b0
    8e38:	ldr	x0, [x0, #24]
    8e3c:	ldr	x1, [sp, #344]
    8e40:	cmp	x1, x0
    8e44:	cset	w0, cs  // cs = hs, nlast
    8e48:	and	w0, w0, #0xff
    8e4c:	and	x0, x0, #0xff
    8e50:	cmp	x0, #0x0
    8e54:	b.eq	8e64 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5f3c>  // b.none
    8e58:	ldr	x0, [sp, #344]
    8e5c:	str	xzr, [x0]
    8e60:	b	8e68 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5f40>
    8e64:	bl	1b90 <abort@plt>
    8e68:	ldr	x0, [sp, #184]
    8e6c:	cmp	x0, #0x0
    8e70:	b.eq	9060 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6138>  // b.none
    8e74:	ldr	x0, [sp, #192]
    8e78:	ldr	x0, [x0, #56]
    8e7c:	add	x0, x0, #0x4a
    8e80:	lsl	x1, x0, #3
    8e84:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    8e88:	add	x0, x0, #0x2b0
    8e8c:	add	x0, x1, x0
    8e90:	str	x0, [sp, #168]
    8e94:	ldr	x0, [sp, #168]
    8e98:	ldr	x0, [x0]
    8e9c:	ldr	x1, [sp, #192]
    8ea0:	cmp	x1, x0
    8ea4:	b.ne	8efc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x5fd4>  // b.any
    8ea8:	ldr	x0, [sp, #168]
    8eac:	ldr	x1, [sp, #352]
    8eb0:	str	x1, [x0]
    8eb4:	ldr	x0, [sp, #168]
    8eb8:	ldr	x0, [x0]
    8ebc:	cmp	x0, #0x0
    8ec0:	b.ne	8f5c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6034>  // b.any
    8ec4:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    8ec8:	add	x0, x0, #0x2b0
    8ecc:	ldr	w1, [x0, #4]
    8ed0:	ldr	x0, [sp, #192]
    8ed4:	ldr	x0, [x0, #56]
    8ed8:	mov	w2, w0
    8edc:	mov	w0, #0x1                   	// #1
    8ee0:	lsl	w0, w0, w2
    8ee4:	mvn	w0, w0
    8ee8:	and	w1, w1, w0
    8eec:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    8ef0:	add	x0, x0, #0x2b0
    8ef4:	str	w1, [x0, #4]
    8ef8:	b	8f5c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6034>
    8efc:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    8f00:	add	x0, x0, #0x2b0
    8f04:	ldr	x0, [x0, #24]
    8f08:	ldr	x1, [sp, #184]
    8f0c:	cmp	x1, x0
    8f10:	cset	w0, cs  // cs = hs, nlast
    8f14:	and	w0, w0, #0xff
    8f18:	and	x0, x0, #0xff
    8f1c:	cmp	x0, #0x0
    8f20:	b.eq	8f58 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6030>  // b.none
    8f24:	ldr	x0, [sp, #184]
    8f28:	ldr	x0, [x0, #32]
    8f2c:	ldr	x1, [sp, #192]
    8f30:	cmp	x1, x0
    8f34:	b.ne	8f48 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6020>  // b.any
    8f38:	ldr	x0, [sp, #184]
    8f3c:	ldr	x1, [sp, #352]
    8f40:	str	x1, [x0, #32]
    8f44:	b	8f5c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6034>
    8f48:	ldr	x0, [sp, #184]
    8f4c:	ldr	x1, [sp, #352]
    8f50:	str	x1, [x0, #40]
    8f54:	b	8f5c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6034>
    8f58:	bl	1b90 <abort@plt>
    8f5c:	ldr	x0, [sp, #352]
    8f60:	cmp	x0, #0x0
    8f64:	b.eq	9060 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6138>  // b.none
    8f68:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    8f6c:	add	x0, x0, #0x2b0
    8f70:	ldr	x0, [x0, #24]
    8f74:	ldr	x1, [sp, #352]
    8f78:	cmp	x1, x0
    8f7c:	cset	w0, cs  // cs = hs, nlast
    8f80:	and	w0, w0, #0xff
    8f84:	and	x0, x0, #0xff
    8f88:	cmp	x0, #0x0
    8f8c:	b.eq	905c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6134>  // b.none
    8f90:	ldr	x0, [sp, #352]
    8f94:	ldr	x1, [sp, #184]
    8f98:	str	x1, [x0, #48]
    8f9c:	ldr	x0, [sp, #192]
    8fa0:	ldr	x0, [x0, #32]
    8fa4:	str	x0, [sp, #160]
    8fa8:	ldr	x0, [sp, #160]
    8fac:	cmp	x0, #0x0
    8fb0:	b.eq	8ffc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x60d4>  // b.none
    8fb4:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    8fb8:	add	x0, x0, #0x2b0
    8fbc:	ldr	x0, [x0, #24]
    8fc0:	ldr	x1, [sp, #160]
    8fc4:	cmp	x1, x0
    8fc8:	cset	w0, cs  // cs = hs, nlast
    8fcc:	and	w0, w0, #0xff
    8fd0:	and	x0, x0, #0xff
    8fd4:	cmp	x0, #0x0
    8fd8:	b.eq	8ff8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x60d0>  // b.none
    8fdc:	ldr	x0, [sp, #352]
    8fe0:	ldr	x1, [sp, #160]
    8fe4:	str	x1, [x0, #32]
    8fe8:	ldr	x0, [sp, #160]
    8fec:	ldr	x1, [sp, #352]
    8ff0:	str	x1, [x0, #48]
    8ff4:	b	8ffc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x60d4>
    8ff8:	bl	1b90 <abort@plt>
    8ffc:	ldr	x0, [sp, #192]
    9000:	ldr	x0, [x0, #40]
    9004:	str	x0, [sp, #152]
    9008:	ldr	x0, [sp, #152]
    900c:	cmp	x0, #0x0
    9010:	b.eq	9060 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6138>  // b.none
    9014:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    9018:	add	x0, x0, #0x2b0
    901c:	ldr	x0, [x0, #24]
    9020:	ldr	x1, [sp, #152]
    9024:	cmp	x1, x0
    9028:	cset	w0, cs  // cs = hs, nlast
    902c:	and	w0, w0, #0xff
    9030:	and	x0, x0, #0xff
    9034:	cmp	x0, #0x0
    9038:	b.eq	9058 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6130>  // b.none
    903c:	ldr	x0, [sp, #352]
    9040:	ldr	x1, [sp, #152]
    9044:	str	x1, [x0, #40]
    9048:	ldr	x0, [sp, #152]
    904c:	ldr	x1, [sp, #352]
    9050:	str	x1, [x0, #48]
    9054:	b	9060 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6138>
    9058:	bl	1b90 <abort@plt>
    905c:	bl	1b90 <abort@plt>
    9060:	ldr	x0, [sp, #384]
    9064:	orr	x1, x0, #0x1
    9068:	ldr	x0, [sp, #392]
    906c:	str	x1, [x0, #8]
    9070:	ldr	x1, [sp, #392]
    9074:	ldr	x0, [sp, #384]
    9078:	add	x0, x1, x0
    907c:	ldr	x1, [sp, #384]
    9080:	str	x1, [x0]
    9084:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    9088:	add	x0, x0, #0x2b0
    908c:	ldr	x0, [x0, #32]
    9090:	ldr	x1, [sp, #392]
    9094:	cmp	x1, x0
    9098:	b.ne	90e8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x61c0>  // b.any
    909c:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    90a0:	add	x0, x0, #0x2b0
    90a4:	ldr	x1, [sp, #384]
    90a8:	str	x1, [x0, #8]
    90ac:	b	95a0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6678>
    90b0:	ldr	x0, [sp, #296]
    90b4:	ldr	x0, [x0, #8]
    90b8:	and	x1, x0, #0xfffffffffffffffe
    90bc:	ldr	x0, [sp, #296]
    90c0:	str	x1, [x0, #8]
    90c4:	ldr	x0, [sp, #384]
    90c8:	orr	x1, x0, #0x1
    90cc:	ldr	x0, [sp, #392]
    90d0:	str	x1, [x0, #8]
    90d4:	ldr	x1, [sp, #392]
    90d8:	ldr	x0, [sp, #384]
    90dc:	add	x0, x1, x0
    90e0:	ldr	x1, [sp, #384]
    90e4:	str	x1, [x0]
    90e8:	ldr	x0, [sp, #384]
    90ec:	lsr	x0, x0, #3
    90f0:	cmp	x0, #0x1f
    90f4:	b.hi	91f8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x62d0>  // b.pmore
    90f8:	ldr	x0, [sp, #384]
    90fc:	lsr	x0, x0, #3
    9100:	str	x0, [sp, #48]
    9104:	ldr	x0, [sp, #48]
    9108:	lsl	x0, x0, #1
    910c:	add	x0, x0, #0x8
    9110:	lsl	x1, x0, #3
    9114:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    9118:	add	x0, x0, #0x2b0
    911c:	add	x0, x1, x0
    9120:	str	x0, [sp, #40]
    9124:	ldr	x0, [sp, #40]
    9128:	str	x0, [sp, #328]
    912c:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    9130:	add	x0, x0, #0x2b0
    9134:	ldr	w1, [x0]
    9138:	ldr	x0, [sp, #48]
    913c:	mov	w2, w0
    9140:	mov	w0, #0x1                   	// #1
    9144:	lsl	w0, w0, w2
    9148:	and	w0, w1, w0
    914c:	cmp	w0, #0x0
    9150:	b.ne	9184 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x625c>  // b.any
    9154:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    9158:	add	x0, x0, #0x2b0
    915c:	ldr	w1, [x0]
    9160:	ldr	x0, [sp, #48]
    9164:	mov	w2, w0
    9168:	mov	w0, #0x1                   	// #1
    916c:	lsl	w0, w0, w2
    9170:	orr	w1, w1, w0
    9174:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    9178:	add	x0, x0, #0x2b0
    917c:	str	w1, [x0]
    9180:	b	91c4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x629c>
    9184:	ldr	x0, [sp, #40]
    9188:	ldr	x1, [x0, #16]
    918c:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    9190:	add	x0, x0, #0x2b0
    9194:	ldr	x0, [x0, #24]
    9198:	cmp	x1, x0
    919c:	cset	w0, cs  // cs = hs, nlast
    91a0:	and	w0, w0, #0xff
    91a4:	and	x0, x0, #0xff
    91a8:	cmp	x0, #0x0
    91ac:	b.eq	91c0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6298>  // b.none
    91b0:	ldr	x0, [sp, #40]
    91b4:	ldr	x0, [x0, #16]
    91b8:	str	x0, [sp, #328]
    91bc:	b	91c4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x629c>
    91c0:	bl	1b90 <abort@plt>
    91c4:	ldr	x0, [sp, #40]
    91c8:	ldr	x1, [sp, #392]
    91cc:	str	x1, [x0, #16]
    91d0:	ldr	x0, [sp, #328]
    91d4:	ldr	x1, [sp, #392]
    91d8:	str	x1, [x0, #24]
    91dc:	ldr	x0, [sp, #392]
    91e0:	ldr	x1, [sp, #328]
    91e4:	str	x1, [x0, #16]
    91e8:	ldr	x0, [sp, #392]
    91ec:	ldr	x1, [sp, #40]
    91f0:	str	x1, [x0, #24]
    91f4:	b	95a0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6678>
    91f8:	ldr	x0, [sp, #392]
    91fc:	str	x0, [sp, #104]
    9200:	ldr	x0, [sp, #384]
    9204:	lsr	x0, x0, #8
    9208:	str	x0, [sp, #96]
    920c:	ldr	x0, [sp, #96]
    9210:	cmp	x0, #0x0
    9214:	b.ne	9220 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x62f8>  // b.any
    9218:	str	xzr, [sp, #320]
    921c:	b	9310 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x63e8>
    9220:	ldr	x1, [sp, #96]
    9224:	mov	x0, #0xffff                	// #65535
    9228:	cmp	x1, x0
    922c:	b.ls	923c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6314>  // b.plast
    9230:	mov	x0, #0x1f                  	// #31
    9234:	str	x0, [sp, #320]
    9238:	b	9310 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x63e8>
    923c:	ldr	x0, [sp, #96]
    9240:	str	w0, [sp, #92]
    9244:	ldr	w0, [sp, #92]
    9248:	sub	w0, w0, #0x100
    924c:	lsr	w0, w0, #16
    9250:	and	w0, w0, #0x8
    9254:	str	w0, [sp, #88]
    9258:	ldr	w0, [sp, #88]
    925c:	ldr	w1, [sp, #92]
    9260:	lsl	w0, w1, w0
    9264:	str	w0, [sp, #92]
    9268:	ldr	w0, [sp, #92]
    926c:	sub	w0, w0, #0x1, lsl #12
    9270:	lsr	w0, w0, #16
    9274:	and	w0, w0, #0x4
    9278:	str	w0, [sp, #84]
    927c:	ldr	w1, [sp, #88]
    9280:	ldr	w0, [sp, #84]
    9284:	add	w0, w1, w0
    9288:	str	w0, [sp, #88]
    928c:	ldr	w0, [sp, #84]
    9290:	ldr	w1, [sp, #92]
    9294:	lsl	w0, w1, w0
    9298:	str	w0, [sp, #92]
    929c:	ldr	w0, [sp, #92]
    92a0:	sub	w0, w0, #0x4, lsl #12
    92a4:	lsr	w0, w0, #16
    92a8:	and	w0, w0, #0x2
    92ac:	str	w0, [sp, #84]
    92b0:	ldr	w0, [sp, #84]
    92b4:	ldr	w1, [sp, #88]
    92b8:	add	w0, w1, w0
    92bc:	str	w0, [sp, #88]
    92c0:	ldr	w0, [sp, #84]
    92c4:	ldr	w1, [sp, #92]
    92c8:	lsl	w0, w1, w0
    92cc:	str	w0, [sp, #92]
    92d0:	ldr	w0, [sp, #92]
    92d4:	lsr	w1, w0, #15
    92d8:	ldr	w0, [sp, #88]
    92dc:	sub	w0, w1, w0
    92e0:	add	w0, w0, #0xe
    92e4:	str	w0, [sp, #84]
    92e8:	ldr	w0, [sp, #84]
    92ec:	lsl	w0, w0, #1
    92f0:	mov	w1, w0
    92f4:	ldr	w0, [sp, #84]
    92f8:	add	w0, w0, #0x7
    92fc:	ldr	x2, [sp, #384]
    9300:	lsr	x0, x2, x0
    9304:	and	x0, x0, #0x1
    9308:	add	x0, x1, x0
    930c:	str	x0, [sp, #320]
    9310:	ldr	x0, [sp, #320]
    9314:	add	x0, x0, #0x4a
    9318:	lsl	x1, x0, #3
    931c:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    9320:	add	x0, x0, #0x2b0
    9324:	add	x0, x1, x0
    9328:	str	x0, [sp, #72]
    932c:	ldr	x0, [sp, #104]
    9330:	ldr	x1, [sp, #320]
    9334:	str	x1, [x0, #56]
    9338:	ldr	x0, [sp, #104]
    933c:	str	xzr, [x0, #40]
    9340:	ldr	x0, [sp, #104]
    9344:	ldr	x1, [x0, #40]
    9348:	ldr	x0, [sp, #104]
    934c:	str	x1, [x0, #32]
    9350:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    9354:	add	x0, x0, #0x2b0
    9358:	ldr	w1, [x0, #4]
    935c:	ldr	x0, [sp, #320]
    9360:	mov	w2, w0
    9364:	mov	w0, #0x1                   	// #1
    9368:	lsl	w0, w0, w2
    936c:	and	w0, w1, w0
    9370:	cmp	w0, #0x0
    9374:	b.ne	93dc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x64b4>  // b.any
    9378:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    937c:	add	x0, x0, #0x2b0
    9380:	ldr	w1, [x0, #4]
    9384:	ldr	x0, [sp, #320]
    9388:	mov	w2, w0
    938c:	mov	w0, #0x1                   	// #1
    9390:	lsl	w0, w0, w2
    9394:	orr	w1, w1, w0
    9398:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    939c:	add	x0, x0, #0x2b0
    93a0:	str	w1, [x0, #4]
    93a4:	ldr	x0, [sp, #72]
    93a8:	ldr	x1, [sp, #104]
    93ac:	str	x1, [x0]
    93b0:	ldr	x0, [sp, #104]
    93b4:	ldr	x1, [sp, #72]
    93b8:	str	x1, [x0, #48]
    93bc:	ldr	x0, [sp, #104]
    93c0:	ldr	x1, [sp, #104]
    93c4:	str	x1, [x0, #24]
    93c8:	ldr	x0, [sp, #104]
    93cc:	ldr	x1, [x0, #24]
    93d0:	ldr	x0, [sp, #104]
    93d4:	str	x1, [x0, #16]
    93d8:	b	95a0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6678>
    93dc:	ldr	x0, [sp, #72]
    93e0:	ldr	x0, [x0]
    93e4:	str	x0, [sp, #312]
    93e8:	ldr	x0, [sp, #320]
    93ec:	cmp	x0, #0x1f
    93f0:	b.eq	940c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x64e4>  // b.none
    93f4:	ldr	x0, [sp, #320]
    93f8:	lsr	x0, x0, #1
    93fc:	mov	w1, w0
    9400:	mov	w0, #0x39                  	// #57
    9404:	sub	w0, w0, w1
    9408:	b	9410 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x64e8>
    940c:	mov	w0, #0x0                   	// #0
    9410:	ldr	x1, [sp, #384]
    9414:	lsl	x0, x1, x0
    9418:	str	x0, [sp, #304]
    941c:	ldr	x0, [sp, #312]
    9420:	ldr	x0, [x0, #8]
    9424:	and	x0, x0, #0xfffffffffffffffc
    9428:	ldr	x1, [sp, #384]
    942c:	cmp	x1, x0
    9430:	b.eq	94e0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x65b8>  // b.none
    9434:	ldr	x0, [sp, #304]
    9438:	lsr	x0, x0, #63
    943c:	add	x0, x0, #0x4
    9440:	lsl	x0, x0, #3
    9444:	ldr	x1, [sp, #312]
    9448:	add	x0, x1, x0
    944c:	str	x0, [sp, #56]
    9450:	ldr	x0, [sp, #304]
    9454:	lsl	x0, x0, #1
    9458:	str	x0, [sp, #304]
    945c:	ldr	x0, [sp, #56]
    9460:	ldr	x0, [x0]
    9464:	cmp	x0, #0x0
    9468:	b.eq	947c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6554>  // b.none
    946c:	ldr	x0, [sp, #56]
    9470:	ldr	x0, [x0]
    9474:	str	x0, [sp, #312]
    9478:	b	941c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x64f4>
    947c:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    9480:	add	x0, x0, #0x2b0
    9484:	ldr	x0, [x0, #24]
    9488:	ldr	x1, [sp, #56]
    948c:	cmp	x1, x0
    9490:	cset	w0, cs  // cs = hs, nlast
    9494:	and	w0, w0, #0xff
    9498:	and	x0, x0, #0xff
    949c:	cmp	x0, #0x0
    94a0:	b.eq	94dc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x65b4>  // b.none
    94a4:	ldr	x0, [sp, #56]
    94a8:	ldr	x1, [sp, #104]
    94ac:	str	x1, [x0]
    94b0:	ldr	x0, [sp, #104]
    94b4:	ldr	x1, [sp, #312]
    94b8:	str	x1, [x0, #48]
    94bc:	ldr	x0, [sp, #104]
    94c0:	ldr	x1, [sp, #104]
    94c4:	str	x1, [x0, #24]
    94c8:	ldr	x0, [sp, #104]
    94cc:	ldr	x1, [x0, #24]
    94d0:	ldr	x0, [sp, #104]
    94d4:	str	x1, [x0, #16]
    94d8:	b	9580 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6658>
    94dc:	bl	1b90 <abort@plt>
    94e0:	ldr	x0, [sp, #312]
    94e4:	ldr	x0, [x0, #16]
    94e8:	str	x0, [sp, #64]
    94ec:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    94f0:	add	x0, x0, #0x2b0
    94f4:	ldr	x0, [x0, #24]
    94f8:	ldr	x1, [sp, #312]
    94fc:	cmp	x1, x0
    9500:	cset	w0, cs  // cs = hs, nlast
    9504:	and	w0, w0, #0xff
    9508:	and	x0, x0, #0xff
    950c:	cmp	x0, #0x0
    9510:	b.eq	957c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6654>  // b.none
    9514:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    9518:	add	x0, x0, #0x2b0
    951c:	ldr	x0, [x0, #24]
    9520:	ldr	x1, [sp, #64]
    9524:	cmp	x1, x0
    9528:	cset	w0, cs  // cs = hs, nlast
    952c:	and	w0, w0, #0xff
    9530:	and	x0, x0, #0xff
    9534:	cmp	x0, #0x0
    9538:	b.eq	957c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6654>  // b.none
    953c:	ldr	x0, [sp, #64]
    9540:	ldr	x1, [sp, #104]
    9544:	str	x1, [x0, #24]
    9548:	ldr	x0, [sp, #64]
    954c:	ldr	x1, [x0, #24]
    9550:	ldr	x0, [sp, #312]
    9554:	str	x1, [x0, #16]
    9558:	ldr	x0, [sp, #104]
    955c:	ldr	x1, [sp, #64]
    9560:	str	x1, [x0, #16]
    9564:	ldr	x0, [sp, #104]
    9568:	ldr	x1, [sp, #312]
    956c:	str	x1, [x0, #24]
    9570:	ldr	x0, [sp, #104]
    9574:	str	xzr, [x0, #48]
    9578:	b	9580 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6658>
    957c:	bl	1b90 <abort@plt>
    9580:	b	95a0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6678>
    9584:	nop
    9588:	b	9590 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6668>
    958c:	nop
    9590:	bl	1b90 <abort@plt>
    9594:	nop
    9598:	b	95a0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6678>
    959c:	nop
    95a0:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    95a4:	add	x0, x0, #0x2b0
    95a8:	ldr	w0, [x0, #864]
    95ac:	and	w0, w0, #0x2
    95b0:	cmp	w0, #0x0
    95b4:	b.eq	95c4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x669c>  // b.none
    95b8:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    95bc:	add	x0, x0, #0x618
    95c0:	bl	1ce0 <pthread_mutex_unlock@plt>
    95c4:	nop
    95c8:	ldp	x29, x30, [sp], #400
    95cc:	ret
    95d0:	stp	x29, x30, [sp, #-48]!
    95d4:	mov	x29, sp
    95d8:	str	x0, [sp, #24]
    95dc:	str	x1, [sp, #16]
    95e0:	str	xzr, [sp, #40]
    95e4:	ldr	x0, [sp, #24]
    95e8:	cmp	x0, #0x0
    95ec:	b.eq	9638 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6710>  // b.none
    95f0:	ldr	x1, [sp, #24]
    95f4:	ldr	x0, [sp, #16]
    95f8:	mul	x0, x1, x0
    95fc:	str	x0, [sp, #40]
    9600:	ldr	x1, [sp, #24]
    9604:	ldr	x0, [sp, #16]
    9608:	orr	x0, x1, x0
    960c:	and	x0, x0, #0xffffffffffff0000
    9610:	cmp	x0, #0x0
    9614:	b.eq	9638 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6710>  // b.none
    9618:	ldr	x1, [sp, #40]
    961c:	ldr	x0, [sp, #24]
    9620:	udiv	x0, x1, x0
    9624:	ldr	x1, [sp, #16]
    9628:	cmp	x1, x0
    962c:	b.eq	9638 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6710>  // b.none
    9630:	mov	x0, #0xffffffffffffffff    	// #-1
    9634:	str	x0, [sp, #40]
    9638:	ldr	x0, [sp, #40]
    963c:	bl	7ac4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4b9c>
    9640:	str	x0, [sp, #32]
    9644:	ldr	x0, [sp, #32]
    9648:	cmp	x0, #0x0
    964c:	b.eq	9690 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6768>  // b.none
    9650:	ldr	x0, [sp, #32]
    9654:	sub	x0, x0, #0x10
    9658:	ldr	x0, [x0, #8]
    965c:	and	x0, x0, #0x1
    9660:	cmp	x0, #0x0
    9664:	b.ne	9680 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6758>  // b.any
    9668:	ldr	x0, [sp, #32]
    966c:	sub	x0, x0, #0x10
    9670:	ldr	x0, [x0]
    9674:	and	x0, x0, #0x1
    9678:	cmp	x0, #0x0
    967c:	b.ne	9690 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6768>  // b.any
    9680:	ldr	x2, [sp, #40]
    9684:	mov	w1, #0x0                   	// #0
    9688:	ldr	x0, [sp, #32]
    968c:	bl	1b00 <memset@plt>
    9690:	ldr	x0, [sp, #32]
    9694:	ldp	x29, x30, [sp], #48
    9698:	ret
    969c:	stp	x29, x30, [sp, #-48]!
    96a0:	mov	x29, sp
    96a4:	str	x0, [sp, #24]
    96a8:	str	x1, [sp, #16]
    96ac:	ldr	x0, [sp, #24]
    96b0:	cmp	x0, #0x0
    96b4:	b.ne	96c4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x679c>  // b.any
    96b8:	ldr	x0, [sp, #16]
    96bc:	bl	7ac4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4b9c>
    96c0:	b	96e0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x67b8>
    96c4:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    96c8:	add	x0, x0, #0x2b0
    96cc:	str	x0, [sp, #40]
    96d0:	ldr	x2, [sp, #16]
    96d4:	ldr	x1, [sp, #24]
    96d8:	ldr	x0, [sp, #40]
    96dc:	bl	6e0c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3ee4>
    96e0:	ldp	x29, x30, [sp], #48
    96e4:	ret
    96e8:	stp	x29, x30, [sp, #-32]!
    96ec:	mov	x29, sp
    96f0:	str	x0, [sp, #24]
    96f4:	str	x1, [sp, #16]
    96f8:	ldr	x2, [sp, #16]
    96fc:	ldr	x1, [sp, #24]
    9700:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    9704:	add	x0, x0, #0x2b0
    9708:	bl	7280 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4358>
    970c:	ldp	x29, x30, [sp], #32
    9710:	ret
    9714:	stp	x29, x30, [sp, #-64]!
    9718:	mov	x29, sp
    971c:	str	x0, [sp, #40]
    9720:	str	x1, [sp, #32]
    9724:	str	x2, [sp, #24]
    9728:	ldr	x0, [sp, #32]
    972c:	str	x0, [sp, #56]
    9730:	add	x0, sp, #0x38
    9734:	ldr	x4, [sp, #24]
    9738:	mov	w3, #0x3                   	// #3
    973c:	mov	x2, x0
    9740:	ldr	x1, [sp, #40]
    9744:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    9748:	add	x0, x0, #0x2b0
    974c:	bl	76e8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x47c0>
    9750:	ldp	x29, x30, [sp], #64
    9754:	ret
    9758:	stp	x29, x30, [sp, #-48]!
    975c:	mov	x29, sp
    9760:	str	x0, [sp, #40]
    9764:	str	x1, [sp, #32]
    9768:	str	x2, [sp, #24]
    976c:	ldr	x4, [sp, #24]
    9770:	mov	w3, #0x0                   	// #0
    9774:	ldr	x2, [sp, #32]
    9778:	ldr	x1, [sp, #40]
    977c:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    9780:	add	x0, x0, #0x2b0
    9784:	bl	76e8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x47c0>
    9788:	ldp	x29, x30, [sp], #48
    978c:	ret
    9790:	stp	x29, x30, [sp, #-48]!
    9794:	mov	x29, sp
    9798:	str	x0, [sp, #24]
    979c:	bl	3184 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x25c>
    97a0:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    97a4:	add	x0, x0, #0x280
    97a8:	ldr	x0, [x0, #8]
    97ac:	str	x0, [sp, #40]
    97b0:	ldr	x1, [sp, #24]
    97b4:	ldr	x0, [sp, #40]
    97b8:	bl	96e8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x67c0>
    97bc:	ldp	x29, x30, [sp], #48
    97c0:	ret
    97c4:	stp	x29, x30, [sp, #-48]!
    97c8:	mov	x29, sp
    97cc:	str	x0, [sp, #24]
    97d0:	bl	3184 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x25c>
    97d4:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    97d8:	add	x0, x0, #0x280
    97dc:	ldr	x0, [x0, #8]
    97e0:	str	x0, [sp, #40]
    97e4:	ldr	x1, [sp, #24]
    97e8:	ldr	x0, [sp, #40]
    97ec:	add	x0, x1, x0
    97f0:	sub	x1, x0, #0x1
    97f4:	ldr	x0, [sp, #40]
    97f8:	neg	x0, x0
    97fc:	and	x0, x1, x0
    9800:	mov	x1, x0
    9804:	ldr	x0, [sp, #40]
    9808:	bl	96e8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x67c0>
    980c:	ldp	x29, x30, [sp], #48
    9810:	ret
    9814:	stp	x29, x30, [sp, #-48]!
    9818:	mov	x29, sp
    981c:	str	x0, [sp, #24]
    9820:	str	wzr, [sp, #44]
    9824:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    9828:	add	x0, x0, #0x280
    982c:	ldr	x0, [x0, #8]
    9830:	cmp	x0, #0x0
    9834:	b.ne	9844 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x691c>  // b.any
    9838:	bl	3184 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x25c>
    983c:	cmp	w0, #0x0
    9840:	b.ne	985c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6934>  // b.any
    9844:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    9848:	add	x0, x0, #0x2b0
    984c:	ldr	w0, [x0, #864]
    9850:	and	w0, w0, #0x2
    9854:	cmp	w0, #0x0
    9858:	b.eq	9870 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6948>  // b.none
    985c:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    9860:	add	x0, x0, #0x618
    9864:	bl	1cd0 <pthread_mutex_lock@plt>
    9868:	cmp	w0, #0x0
    986c:	b.ne	98a8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6980>  // b.any
    9870:	ldr	x1, [sp, #24]
    9874:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    9878:	add	x0, x0, #0x2b0
    987c:	bl	5a24 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x2afc>
    9880:	str	w0, [sp, #44]
    9884:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    9888:	add	x0, x0, #0x2b0
    988c:	ldr	w0, [x0, #864]
    9890:	and	w0, w0, #0x2
    9894:	cmp	w0, #0x0
    9898:	b.eq	98a8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6980>  // b.none
    989c:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    98a0:	add	x0, x0, #0x618
    98a4:	bl	1ce0 <pthread_mutex_unlock@plt>
    98a8:	ldr	w0, [sp, #44]
    98ac:	ldp	x29, x30, [sp], #48
    98b0:	ret
    98b4:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    98b8:	add	x0, x0, #0x2b0
    98bc:	ldr	x0, [x0, #848]
    98c0:	ret
    98c4:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    98c8:	add	x0, x0, #0x2b0
    98cc:	ldr	x0, [x0, #856]
    98d0:	ret
    98d4:	stp	x29, x30, [sp, #-16]!
    98d8:	mov	x29, sp
    98dc:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    98e0:	add	x0, x0, #0x2b0
    98e4:	bl	33c8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4a0>
    98e8:	nop
    98ec:	ldp	x29, x30, [sp], #16
    98f0:	ret
    98f4:	sub	sp, sp, #0x20
    98f8:	str	x0, [sp, #8]
    98fc:	ldr	x0, [sp, #8]
    9900:	cmp	x0, #0x0
    9904:	b.eq	9970 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6a48>  // b.none
    9908:	ldr	x0, [sp, #8]
    990c:	sub	x0, x0, #0x10
    9910:	str	x0, [sp, #24]
    9914:	ldr	x0, [sp, #24]
    9918:	ldr	x0, [x0, #8]
    991c:	and	x0, x0, #0x2
    9920:	cmp	x0, #0x0
    9924:	b.eq	9970 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6a48>  // b.none
    9928:	ldr	x0, [sp, #24]
    992c:	ldr	x0, [x0, #8]
    9930:	and	x1, x0, #0xfffffffffffffffc
    9934:	ldr	x0, [sp, #24]
    9938:	ldr	x0, [x0, #8]
    993c:	and	x0, x0, #0x1
    9940:	cmp	x0, #0x0
    9944:	b.ne	9964 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6a3c>  // b.any
    9948:	ldr	x0, [sp, #24]
    994c:	ldr	x0, [x0]
    9950:	and	x0, x0, #0x1
    9954:	cmp	x0, #0x0
    9958:	b.eq	9964 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6a3c>  // b.none
    995c:	mov	x0, #0x10                  	// #16
    9960:	b	9968 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6a40>
    9964:	mov	x0, #0x8                   	// #8
    9968:	sub	x0, x1, x0
    996c:	b	9974 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6a4c>
    9970:	mov	x0, #0x0                   	// #0
    9974:	add	sp, sp, #0x20
    9978:	ret
    997c:	stp	x29, x30, [sp, #-32]!
    9980:	mov	x29, sp
    9984:	str	w0, [sp, #28]
    9988:	str	w1, [sp, #24]
    998c:	ldr	w1, [sp, #24]
    9990:	ldr	w0, [sp, #28]
    9994:	bl	32ec <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x3c4>
    9998:	ldp	x29, x30, [sp], #32
    999c:	ret
    99a0:	stp	x29, x30, [sp, #-48]!
    99a4:	mov	x29, sp
    99a8:	str	x0, [sp, #24]
    99ac:	str	w1, [sp, #20]
    99b0:	ldr	w1, [sp, #20]
    99b4:	ldr	x0, [sp, #24]
    99b8:	bl	1ba0 <mkostemp@plt>
    99bc:	str	w0, [sp, #44]
    99c0:	ldr	w0, [sp, #44]
    99c4:	cmn	w0, #0x1
    99c8:	b.eq	99d4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6aac>  // b.none
    99cc:	ldr	x0, [sp, #24]
    99d0:	bl	1cf0 <unlink@plt>
    99d4:	ldr	w0, [sp, #44]
    99d8:	ldp	x29, x30, [sp], #48
    99dc:	ret
    99e0:	stp	x29, x30, [sp, #-64]!
    99e4:	mov	x29, sp
    99e8:	str	x0, [x29, #24]
    99ec:	mov	w0, #0x80000               	// #524288
    99f0:	str	w0, [x29, #60]
    99f4:	ldr	w1, [x29, #60]
    99f8:	mov	w0, #0x4082                	// #16514
    99fc:	movk	w0, #0x40, lsl #16
    9a00:	orr	w0, w1, w0
    9a04:	mov	w2, #0x1c0                 	// #448
    9a08:	mov	w1, w0
    9a0c:	ldr	x0, [x29, #24]
    9a10:	bl	1ae0 <open@plt>
    9a14:	str	w0, [x29, #56]
    9a18:	ldr	w0, [x29, #56]
    9a1c:	cmn	w0, #0x1
    9a20:	b.ne	9a54 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6b2c>  // b.any
    9a24:	bl	1c90 <__errno_location@plt>
    9a28:	ldr	w0, [x0]
    9a2c:	cmp	w0, #0x16
    9a30:	b.eq	9a5c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6b34>  // b.none
    9a34:	bl	1c90 <__errno_location@plt>
    9a38:	ldr	w0, [x0]
    9a3c:	cmp	w0, #0x15
    9a40:	b.eq	9a5c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6b34>  // b.none
    9a44:	bl	1c90 <__errno_location@plt>
    9a48:	ldr	w0, [x0]
    9a4c:	cmp	w0, #0x5f
    9a50:	b.eq	9a5c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6b34>  // b.none
    9a54:	ldr	w0, [x29, #56]
    9a58:	b	9af8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6bd0>
    9a5c:	bl	1c90 <__errno_location@plt>
    9a60:	str	wzr, [x0]
    9a64:	ldr	x0, [x29, #24]
    9a68:	bl	1a80 <strlen@plt>
    9a6c:	str	w0, [x29, #52]
    9a70:	ldrsw	x0, [x29, #52]
    9a74:	add	x0, x0, #0xb
    9a78:	add	x0, x0, #0xf
    9a7c:	lsr	x0, x0, #4
    9a80:	lsl	x0, x0, #4
    9a84:	sub	sp, sp, x0
    9a88:	mov	x0, sp
    9a8c:	add	x0, x0, #0xf
    9a90:	lsr	x0, x0, #4
    9a94:	lsl	x0, x0, #4
    9a98:	str	x0, [x29, #40]
    9a9c:	ldr	x0, [x29, #40]
    9aa0:	cmp	x0, #0x0
    9aa4:	b.ne	9ab0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6b88>  // b.any
    9aa8:	mov	w0, #0xffffffff            	// #-1
    9aac:	b	9af8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6bd0>
    9ab0:	ldrsw	x0, [x29, #52]
    9ab4:	mov	x2, x0
    9ab8:	ldr	x1, [x29, #24]
    9abc:	ldr	x0, [x29, #40]
    9ac0:	bl	1a60 <memcpy@plt>
    9ac4:	ldrsw	x0, [x29, #52]
    9ac8:	ldr	x1, [x29, #40]
    9acc:	add	x2, x1, x0
    9ad0:	adrp	x0, c000 <ffi_type_sint8@@LIBFFI_BASE_7.0>
    9ad4:	add	x1, x0, #0x1f8
    9ad8:	mov	x0, x2
    9adc:	ldr	x2, [x1]
    9ae0:	str	x2, [x0]
    9ae4:	ldur	w1, [x1, #7]
    9ae8:	stur	w1, [x0, #7]
    9aec:	ldr	w1, [x29, #60]
    9af0:	ldr	x0, [x29, #40]
    9af4:	bl	99a0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6a78>
    9af8:	mov	sp, x29
    9afc:	ldp	x29, x30, [sp], #64
    9b00:	ret
    9b04:	stp	x29, x30, [sp, #-48]!
    9b08:	mov	x29, sp
    9b0c:	str	x0, [sp, #24]
    9b10:	ldr	x0, [sp, #24]
    9b14:	bl	1cb0 <getenv@plt>
    9b18:	str	x0, [sp, #40]
    9b1c:	ldr	x0, [sp, #40]
    9b20:	cmp	x0, #0x0
    9b24:	b.ne	9b30 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6c08>  // b.any
    9b28:	mov	w0, #0xffffffff            	// #-1
    9b2c:	b	9b38 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6c10>
    9b30:	ldr	x0, [sp, #40]
    9b34:	bl	99e0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6ab8>
    9b38:	ldp	x29, x30, [sp], #48
    9b3c:	ret
    9b40:	mov	x12, #0x3050                	// #12368
    9b44:	sub	sp, sp, x12
    9b48:	stp	x29, x30, [sp]
    9b4c:	mov	x29, sp
    9b50:	str	x0, [sp, #24]
    9b54:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    9b58:	add	x0, x0, #0x6a8
    9b5c:	ldr	x0, [x0]
    9b60:	ldr	x1, [sp, #24]
    9b64:	cmp	x1, x0
    9b68:	b.eq	9bdc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6cb4>  // b.none
    9b6c:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    9b70:	add	x0, x0, #0x6b0
    9b74:	ldr	x0, [x0]
    9b78:	cmp	x0, #0x0
    9b7c:	b.eq	9b90 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6c68>  // b.none
    9b80:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    9b84:	add	x0, x0, #0x6b0
    9b88:	ldr	x0, [x0]
    9b8c:	bl	1b40 <endmntent@plt>
    9b90:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    9b94:	add	x0, x0, #0x6a8
    9b98:	ldr	x1, [sp, #24]
    9b9c:	str	x1, [x0]
    9ba0:	ldr	x0, [sp, #24]
    9ba4:	cmp	x0, #0x0
    9ba8:	b.eq	9bd0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6ca8>  // b.none
    9bac:	adrp	x0, c000 <ffi_type_sint8@@LIBFFI_BASE_7.0>
    9bb0:	add	x1, x0, #0x118
    9bb4:	ldr	x0, [sp, #24]
    9bb8:	bl	1b30 <setmntent@plt>
    9bbc:	mov	x1, x0
    9bc0:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    9bc4:	add	x0, x0, #0x6b0
    9bc8:	str	x1, [x0]
    9bcc:	b	9bdc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6cb4>
    9bd0:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    9bd4:	add	x0, x0, #0x6b0
    9bd8:	str	xzr, [x0]
    9bdc:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    9be0:	add	x0, x0, #0x6b0
    9be4:	ldr	x0, [x0]
    9be8:	cmp	x0, #0x0
    9bec:	b.ne	9bf8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6cd0>  // b.any
    9bf0:	mov	w0, #0xffffffff            	// #-1
    9bf4:	b	9c98 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6d70>
    9bf8:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    9bfc:	add	x0, x0, #0x6b0
    9c00:	ldr	x0, [x0]
    9c04:	add	x2, sp, #0x48
    9c08:	add	x1, sp, #0x20
    9c0c:	mov	w3, #0x3000                	// #12288
    9c10:	bl	1c70 <getmntent_r@plt>
    9c14:	cmp	x0, #0x0
    9c18:	b.ne	9c24 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6cfc>  // b.any
    9c1c:	mov	w0, #0xffffffff            	// #-1
    9c20:	b	9c98 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6d70>
    9c24:	add	x2, sp, #0x20
    9c28:	adrp	x0, c000 <ffi_type_sint8@@LIBFFI_BASE_7.0>
    9c2c:	add	x1, x0, #0x1a0
    9c30:	mov	x0, x2
    9c34:	bl	1c20 <hasmntopt@plt>
    9c38:	cmp	x0, #0x0
    9c3c:	b.ne	9c90 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6d68>  // b.any
    9c40:	add	x2, sp, #0x20
    9c44:	adrp	x0, c000 <ffi_type_sint8@@LIBFFI_BASE_7.0>
    9c48:	add	x1, x0, #0x1a8
    9c4c:	mov	x0, x2
    9c50:	bl	1c20 <hasmntopt@plt>
    9c54:	cmp	x0, #0x0
    9c58:	b.ne	9c90 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6d68>  // b.any
    9c5c:	ldr	x0, [sp, #40]
    9c60:	mov	w1, #0x2                   	// #2
    9c64:	bl	1bb0 <access@plt>
    9c68:	cmp	w0, #0x0
    9c6c:	b.ne	9c90 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6d68>  // b.any
    9c70:	ldr	x0, [sp, #40]
    9c74:	bl	99e0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6ab8>
    9c78:	str	w0, [sp, #12364]
    9c7c:	ldr	w0, [sp, #12364]
    9c80:	cmn	w0, #0x1
    9c84:	b.eq	9bf8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6cd0>  // b.none
    9c88:	ldr	w0, [sp, #12364]
    9c8c:	b	9c98 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6d70>
    9c90:	nop
    9c94:	b	9bf8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6cd0>
    9c98:	ldp	x29, x30, [sp]
    9c9c:	mov	x12, #0x3050                	// #12368
    9ca0:	add	sp, sp, x12
    9ca4:	ret
    9ca8:	stp	x29, x30, [sp, #-16]!
    9cac:	mov	x29, sp
    9cb0:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    9cb4:	add	x0, x0, #0x6a0
    9cb8:	ldr	w1, [x0]
    9cbc:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    9cc0:	add	x2, x0, #0x1a0
    9cc4:	sxtw	x1, w1
    9cc8:	mov	x0, x1
    9ccc:	lsl	x0, x0, #1
    9cd0:	add	x0, x0, x1
    9cd4:	lsl	x0, x0, #3
    9cd8:	add	x0, x2, x0
    9cdc:	ldr	w0, [x0, #16]
    9ce0:	cmp	w0, #0x0
    9ce4:	b.eq	9d20 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6df8>  // b.none
    9ce8:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    9cec:	add	x0, x0, #0x6a0
    9cf0:	ldr	w1, [x0]
    9cf4:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    9cf8:	add	x2, x0, #0x1a0
    9cfc:	sxtw	x1, w1
    9d00:	mov	x0, x1
    9d04:	lsl	x0, x0, #1
    9d08:	add	x0, x0, x1
    9d0c:	lsl	x0, x0, #3
    9d10:	add	x0, x2, x0
    9d14:	ldr	x1, [x0]
    9d18:	mov	x0, #0x0                   	// #0
    9d1c:	blr	x1
    9d20:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    9d24:	add	x0, x0, #0x6a0
    9d28:	ldr	w0, [x0]
    9d2c:	add	w1, w0, #0x1
    9d30:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    9d34:	add	x0, x0, #0x6a0
    9d38:	str	w1, [x0]
    9d3c:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    9d40:	add	x0, x0, #0x6a0
    9d44:	ldr	w0, [x0]
    9d48:	cmp	w0, #0x7
    9d4c:	b.ne	9d64 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6e3c>  // b.any
    9d50:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    9d54:	add	x0, x0, #0x6a0
    9d58:	str	wzr, [x0]
    9d5c:	mov	w0, #0x1                   	// #1
    9d60:	b	9d68 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6e40>
    9d64:	mov	w0, #0x0                   	// #0
    9d68:	ldp	x29, x30, [sp], #16
    9d6c:	ret
    9d70:	stp	x29, x30, [sp, #-32]!
    9d74:	mov	x29, sp
    9d78:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    9d7c:	add	x0, x0, #0x6a0
    9d80:	ldr	w1, [x0]
    9d84:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    9d88:	add	x2, x0, #0x1a0
    9d8c:	sxtw	x1, w1
    9d90:	mov	x0, x1
    9d94:	lsl	x0, x0, #1
    9d98:	add	x0, x0, x1
    9d9c:	lsl	x0, x0, #3
    9da0:	add	x0, x2, x0
    9da4:	ldr	x2, [x0]
    9da8:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    9dac:	add	x0, x0, #0x6a0
    9db0:	ldr	w1, [x0]
    9db4:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    9db8:	add	x3, x0, #0x1a0
    9dbc:	sxtw	x1, w1
    9dc0:	mov	x0, x1
    9dc4:	lsl	x0, x0, #1
    9dc8:	add	x0, x0, x1
    9dcc:	lsl	x0, x0, #3
    9dd0:	add	x0, x3, x0
    9dd4:	ldr	x0, [x0, #8]
    9dd8:	blr	x2
    9ddc:	str	w0, [sp, #28]
    9de0:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    9de4:	add	x0, x0, #0x6a0
    9de8:	ldr	w1, [x0]
    9dec:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    9df0:	add	x2, x0, #0x1a0
    9df4:	sxtw	x1, w1
    9df8:	mov	x0, x1
    9dfc:	lsl	x0, x0, #1
    9e00:	add	x0, x0, x1
    9e04:	lsl	x0, x0, #3
    9e08:	add	x0, x2, x0
    9e0c:	ldr	w0, [x0, #16]
    9e10:	cmp	w0, #0x0
    9e14:	b.eq	9e24 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6efc>  // b.none
    9e18:	ldr	w0, [sp, #28]
    9e1c:	cmn	w0, #0x1
    9e20:	b.ne	9e30 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6f08>  // b.any
    9e24:	bl	9ca8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6d80>
    9e28:	cmp	w0, #0x0
    9e2c:	b.ne	9e40 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6f18>  // b.any
    9e30:	ldr	w0, [sp, #28]
    9e34:	cmn	w0, #0x1
    9e38:	b.eq	9d78 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6e50>  // b.none
    9e3c:	b	9e44 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6f1c>
    9e40:	nop
    9e44:	ldr	w0, [sp, #28]
    9e48:	ldp	x29, x30, [sp], #32
    9e4c:	ret
    9e50:	stp	x29, x30, [sp, #-160]!
    9e54:	mov	x29, sp
    9e58:	stp	x19, x20, [sp, #16]
    9e5c:	stp	x21, x22, [sp, #32]
    9e60:	stp	x23, x24, [sp, #48]
    9e64:	stp	x25, x26, [sp, #64]
    9e68:	str	x27, [sp, #80]
    9e6c:	str	w0, [x29, #124]
    9e70:	str	x1, [x29, #112]
    9e74:	str	x2, [x29, #104]
    9e78:	mov	x0, sp
    9e7c:	mov	x19, x0
    9e80:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    9e84:	add	x0, x0, #0x6b8
    9e88:	ldr	x0, [x0]
    9e8c:	cmp	x0, #0x0
    9e90:	b.ne	9eac <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6f84>  // b.any
    9e94:	mov	w0, #0x1e                  	// #30
    9e98:	bl	1c60 <sysconf@plt>
    9e9c:	mov	x1, x0
    9ea0:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    9ea4:	add	x0, x0, #0x6b8
    9ea8:	str	x1, [x0]
    9eac:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    9eb0:	add	x0, x0, #0x6b8
    9eb4:	ldr	x0, [x0]
    9eb8:	mov	x1, x0
    9ebc:	sub	x1, x1, #0x1
    9ec0:	str	x1, [x29, #152]
    9ec4:	mov	x26, x0
    9ec8:	mov	x27, #0x0                   	// #0
    9ecc:	lsr	x1, x26, #61
    9ed0:	lsl	x23, x27, #3
    9ed4:	orr	x23, x1, x23
    9ed8:	lsl	x22, x26, #3
    9edc:	mov	x24, x0
    9ee0:	mov	x25, #0x0                   	// #0
    9ee4:	lsr	x1, x24, #61
    9ee8:	lsl	x21, x25, #3
    9eec:	orr	x21, x1, x21
    9ef0:	lsl	x20, x24, #3
    9ef4:	add	x0, x0, #0xf
    9ef8:	lsr	x0, x0, #4
    9efc:	lsl	x0, x0, #4
    9f00:	sub	sp, sp, x0
    9f04:	mov	x0, sp
    9f08:	add	x0, x0, #0x0
    9f0c:	str	x0, [x29, #144]
    9f10:	ldr	x3, [x29, #144]
    9f14:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    9f18:	add	x0, x0, #0x6b8
    9f1c:	ldr	x0, [x0]
    9f20:	mov	x2, x0
    9f24:	mov	w1, #0x0                   	// #0
    9f28:	mov	x0, x3
    9f2c:	bl	1b00 <memset@plt>
    9f30:	b	9f90 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x7068>
    9f34:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    9f38:	add	x0, x0, #0x6b8
    9f3c:	ldr	x1, [x0]
    9f40:	ldr	x0, [x29, #104]
    9f44:	cmp	x1, x0
    9f48:	csel	x0, x1, x0, ls  // ls = plast
    9f4c:	str	x0, [x29, #136]
    9f50:	ldr	x0, [x29, #144]
    9f54:	ldr	x1, [x29, #136]
    9f58:	mov	x2, x1
    9f5c:	mov	x1, x0
    9f60:	ldr	w0, [x29, #124]
    9f64:	bl	1b80 <write@plt>
    9f68:	mov	x1, x0
    9f6c:	ldr	x0, [x29, #136]
    9f70:	cmp	x0, x1
    9f74:	b.le	9f80 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x7058>
    9f78:	mov	w0, #0xffffffff            	// #-1
    9f7c:	b	9fa0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x7078>
    9f80:	ldr	x1, [x29, #104]
    9f84:	ldr	x0, [x29, #136]
    9f88:	sub	x0, x1, x0
    9f8c:	str	x0, [x29, #104]
    9f90:	ldr	x0, [x29, #104]
    9f94:	cmp	x0, #0x0
    9f98:	b.gt	9f34 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x700c>
    9f9c:	mov	w0, #0x0                   	// #0
    9fa0:	mov	sp, x19
    9fa4:	mov	sp, x29
    9fa8:	ldp	x19, x20, [sp, #16]
    9fac:	ldp	x21, x22, [sp, #32]
    9fb0:	ldp	x23, x24, [sp, #48]
    9fb4:	ldp	x25, x26, [sp, #64]
    9fb8:	ldr	x27, [sp, #80]
    9fbc:	ldp	x29, x30, [sp], #160
    9fc0:	ret
    9fc4:	stp	x29, x30, [sp, #-64]!
    9fc8:	mov	x29, sp
    9fcc:	str	x0, [sp, #40]
    9fd0:	str	x1, [sp, #32]
    9fd4:	str	w2, [sp, #28]
    9fd8:	str	w3, [sp, #24]
    9fdc:	str	x4, [sp, #16]
    9fe0:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    9fe4:	add	x0, x0, #0x19c
    9fe8:	ldr	w0, [x0]
    9fec:	cmn	w0, #0x1
    9ff0:	b.ne	a030 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x7108>  // b.any
    9ff4:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    9ff8:	add	x0, x0, #0x6a0
    9ffc:	str	wzr, [x0]
    a000:	bl	9d70 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6e48>
    a004:	mov	w1, w0
    a008:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    a00c:	add	x0, x0, #0x19c
    a010:	str	w1, [x0]
    a014:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    a018:	add	x0, x0, #0x19c
    a01c:	ldr	w0, [x0]
    a020:	cmn	w0, #0x1
    a024:	b.ne	a030 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x7108>  // b.any
    a028:	mov	x0, #0xffffffffffffffff    	// #-1
    a02c:	b	a1f4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x72cc>
    a030:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    a034:	add	x0, x0, #0x698
    a038:	ldr	x0, [x0]
    a03c:	str	x0, [sp, #16]
    a040:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    a044:	add	x0, x0, #0x19c
    a048:	ldr	w0, [x0]
    a04c:	ldr	x1, [sp, #32]
    a050:	mov	x2, x1
    a054:	ldr	x1, [sp, #16]
    a058:	bl	9e50 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6f28>
    a05c:	cmp	w0, #0x0
    a060:	b.eq	a06c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x7144>  // b.none
    a064:	mov	x0, #0xffffffffffffffff    	// #-1
    a068:	b	a1f4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x72cc>
    a06c:	ldr	w1, [sp, #24]
    a070:	mov	w0, #0xffffffdd            	// #-35
    a074:	and	w0, w1, w0
    a078:	str	w0, [sp, #24]
    a07c:	ldr	w0, [sp, #24]
    a080:	orr	w0, w0, #0x1
    a084:	str	w0, [sp, #24]
    a088:	ldr	w0, [sp, #28]
    a08c:	and	w0, w0, #0xfffffff9
    a090:	orr	w1, w0, #0x4
    a094:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    a098:	add	x0, x0, #0x19c
    a09c:	ldr	w0, [x0]
    a0a0:	ldr	x5, [sp, #16]
    a0a4:	mov	w4, w0
    a0a8:	ldr	w3, [sp, #24]
    a0ac:	mov	w2, w1
    a0b0:	ldr	x1, [sp, #32]
    a0b4:	mov	x0, #0x0                   	// #0
    a0b8:	bl	1bc0 <mmap@plt>
    a0bc:	str	x0, [sp, #56]
    a0c0:	ldr	x0, [sp, #56]
    a0c4:	cmn	x0, #0x1
    a0c8:	b.ne	a108 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x71e0>  // b.any
    a0cc:	ldr	x0, [sp, #16]
    a0d0:	cmp	x0, #0x0
    a0d4:	b.ne	a0ec <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x71c4>  // b.any
    a0d8:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    a0dc:	add	x0, x0, #0x19c
    a0e0:	ldr	w0, [x0]
    a0e4:	bl	1b60 <close@plt>
    a0e8:	b	a000 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x70d8>
    a0ec:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    a0f0:	add	x0, x0, #0x19c
    a0f4:	ldr	w0, [x0]
    a0f8:	ldr	x1, [sp, #16]
    a0fc:	bl	1c80 <ftruncate@plt>
    a100:	mov	x0, #0xffffffffffffffff    	// #-1
    a104:	b	a1f4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x72cc>
    a108:	ldr	x0, [sp, #16]
    a10c:	cmp	x0, #0x0
    a110:	b.ne	a150 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x7228>  // b.any
    a114:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    a118:	add	x0, x0, #0x6a0
    a11c:	ldr	w1, [x0]
    a120:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    a124:	add	x2, x0, #0x1a0
    a128:	sxtw	x1, w1
    a12c:	mov	x0, x1
    a130:	lsl	x0, x0, #1
    a134:	add	x0, x0, x1
    a138:	lsl	x0, x0, #3
    a13c:	add	x0, x2, x0
    a140:	ldr	w0, [x0, #16]
    a144:	cmp	w0, #0x0
    a148:	b.eq	a150 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x7228>  // b.none
    a14c:	bl	9ca8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x6d80>
    a150:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    a154:	add	x0, x0, #0x19c
    a158:	ldr	w0, [x0]
    a15c:	ldr	x5, [sp, #16]
    a160:	mov	w4, w0
    a164:	ldr	w3, [sp, #24]
    a168:	ldr	w2, [sp, #28]
    a16c:	ldr	x1, [sp, #32]
    a170:	ldr	x0, [sp, #40]
    a174:	bl	1bc0 <mmap@plt>
    a178:	str	x0, [sp, #40]
    a17c:	ldr	x0, [sp, #40]
    a180:	cmn	x0, #0x1
    a184:	b.ne	a1b0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x7288>  // b.any
    a188:	ldr	x1, [sp, #32]
    a18c:	ldr	x0, [sp, #56]
    a190:	bl	1c40 <munmap@plt>
    a194:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    a198:	add	x0, x0, #0x19c
    a19c:	ldr	w0, [x0]
    a1a0:	ldr	x1, [sp, #16]
    a1a4:	bl	1c80 <ftruncate@plt>
    a1a8:	ldr	x0, [sp, #40]
    a1ac:	b	a1f4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x72cc>
    a1b0:	ldr	x0, [sp, #32]
    a1b4:	sub	x0, x0, #0x8
    a1b8:	ldr	x1, [sp, #40]
    a1bc:	add	x0, x1, x0
    a1c0:	ldr	x2, [sp, #56]
    a1c4:	ldr	x1, [sp, #40]
    a1c8:	sub	x1, x2, x1
    a1cc:	str	x1, [x0]
    a1d0:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    a1d4:	add	x0, x0, #0x698
    a1d8:	ldr	x1, [x0]
    a1dc:	ldr	x0, [sp, #32]
    a1e0:	add	x1, x1, x0
    a1e4:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    a1e8:	add	x0, x0, #0x698
    a1ec:	str	x1, [x0]
    a1f0:	ldr	x0, [sp, #40]
    a1f4:	ldp	x29, x30, [sp], #64
    a1f8:	ret
    a1fc:	stp	x29, x30, [sp, #-80]!
    a200:	mov	x29, sp
    a204:	str	x0, [sp, #56]
    a208:	str	x1, [sp, #48]
    a20c:	str	w2, [sp, #44]
    a210:	str	w3, [sp, #40]
    a214:	str	w4, [sp, #36]
    a218:	str	x5, [sp, #24]
    a21c:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    a220:	add	x0, x0, #0x19c
    a224:	ldr	w0, [x0]
    a228:	cmn	w0, #0x1
    a22c:	b.ne	a2f0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x73c8>  // b.any
    a230:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    a234:	add	x0, x0, #0x198
    a238:	ldr	w0, [x0]
    a23c:	cmp	w0, #0x0
    a240:	b.lt	a260 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x7338>  // b.tstop
    a244:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    a248:	add	x0, x0, #0x198
    a24c:	ldr	w0, [x0]
    a250:	cmp	w0, #0x0
    a254:	cset	w0, eq  // eq = none
    a258:	and	w0, w0, #0xff
    a25c:	b	a28c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x7364>
    a260:	bl	2f60 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x38>
    a264:	mov	w1, w0
    a268:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    a26c:	add	x0, x0, #0x198
    a270:	str	w1, [x0]
    a274:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    a278:	add	x0, x0, #0x198
    a27c:	ldr	w0, [x0]
    a280:	cmp	w0, #0x0
    a284:	cset	w0, eq  // eq = none
    a288:	and	w0, w0, #0xff
    a28c:	cmp	w0, #0x0
    a290:	b.eq	a2f0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x73c8>  // b.none
    a294:	ldr	w0, [sp, #44]
    a298:	orr	w0, w0, #0x4
    a29c:	ldr	x5, [sp, #24]
    a2a0:	ldr	w4, [sp, #36]
    a2a4:	ldr	w3, [sp, #40]
    a2a8:	mov	w2, w0
    a2ac:	ldr	x1, [sp, #48]
    a2b0:	ldr	x0, [sp, #56]
    a2b4:	bl	1bc0 <mmap@plt>
    a2b8:	str	x0, [sp, #72]
    a2bc:	ldr	x0, [sp, #72]
    a2c0:	cmn	x0, #0x1
    a2c4:	b.ne	a2e8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x73c0>  // b.any
    a2c8:	bl	1c90 <__errno_location@plt>
    a2cc:	ldr	w0, [x0]
    a2d0:	cmp	w0, #0x1
    a2d4:	b.eq	a2f0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x73c8>  // b.none
    a2d8:	bl	1c90 <__errno_location@plt>
    a2dc:	ldr	w0, [x0]
    a2e0:	cmp	w0, #0xd
    a2e4:	b.eq	a2f0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x73c8>  // b.none
    a2e8:	ldr	x0, [sp, #72]
    a2ec:	b	a36c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x7444>
    a2f0:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    a2f4:	add	x0, x0, #0x698
    a2f8:	ldr	x0, [x0]
    a2fc:	cmp	x0, #0x0
    a300:	b.eq	a318 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x73f0>  // b.none
    a304:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    a308:	add	x0, x0, #0x19c
    a30c:	ldr	w0, [x0]
    a310:	cmn	w0, #0x1
    a314:	b.ne	a354 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x742c>  // b.any
    a318:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    a31c:	add	x0, x0, #0x668
    a320:	bl	1cd0 <pthread_mutex_lock@plt>
    a324:	ldr	x4, [sp, #24]
    a328:	ldr	w3, [sp, #40]
    a32c:	ldr	w2, [sp, #44]
    a330:	ldr	x1, [sp, #48]
    a334:	ldr	x0, [sp, #56]
    a338:	bl	9fc4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x709c>
    a33c:	str	x0, [sp, #72]
    a340:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    a344:	add	x0, x0, #0x668
    a348:	bl	1ce0 <pthread_mutex_unlock@plt>
    a34c:	ldr	x0, [sp, #72]
    a350:	b	a36c <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x7444>
    a354:	ldr	x4, [sp, #24]
    a358:	ldr	w3, [sp, #40]
    a35c:	ldr	w2, [sp, #44]
    a360:	ldr	x1, [sp, #48]
    a364:	ldr	x0, [sp, #56]
    a368:	bl	9fc4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x709c>
    a36c:	ldp	x29, x30, [sp], #80
    a370:	ret
    a374:	stp	x29, x30, [sp, #-64]!
    a378:	mov	x29, sp
    a37c:	str	x0, [sp, #24]
    a380:	str	x1, [sp, #16]
    a384:	ldr	x1, [sp, #24]
    a388:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    a38c:	add	x0, x0, #0x2b0
    a390:	bl	3094 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x16c>
    a394:	str	x0, [sp, #56]
    a398:	ldr	x0, [sp, #56]
    a39c:	cmp	x0, #0x0
    a3a0:	b.eq	a3f0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x74c8>  // b.none
    a3a4:	ldr	x0, [sp, #56]
    a3a8:	ldr	x0, [x0, #24]
    a3ac:	mov	x1, x0
    a3b0:	ldr	x0, [sp, #24]
    a3b4:	add	x0, x0, x1
    a3b8:	str	x0, [sp, #48]
    a3bc:	ldr	x1, [sp, #48]
    a3c0:	ldr	x0, [sp, #24]
    a3c4:	cmp	x1, x0
    a3c8:	b.eq	a3f0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x74c8>  // b.none
    a3cc:	ldr	x1, [sp, #16]
    a3d0:	ldr	x0, [sp, #48]
    a3d4:	bl	1c40 <munmap@plt>
    a3d8:	str	w0, [sp, #44]
    a3dc:	ldr	w0, [sp, #44]
    a3e0:	cmp	w0, #0x0
    a3e4:	b.eq	a3f0 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x74c8>  // b.none
    a3e8:	ldr	w0, [sp, #44]
    a3ec:	b	a3fc <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x74d4>
    a3f0:	ldr	x1, [sp, #16]
    a3f4:	ldr	x0, [sp, #24]
    a3f8:	bl	1c40 <munmap@plt>
    a3fc:	ldp	x29, x30, [sp], #64
    a400:	ret

000000000000a404 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0>:
    a404:	stp	x29, x30, [sp, #-48]!
    a408:	mov	x29, sp
    a40c:	str	x0, [sp, #24]
    a410:	str	x1, [sp, #16]
    a414:	ldr	x0, [sp, #16]
    a418:	cmp	x0, #0x0
    a41c:	b.ne	a428 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x24>  // b.any
    a420:	mov	x0, #0x0                   	// #0
    a424:	b	a474 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x70>
    a428:	ldr	x0, [sp, #24]
    a42c:	bl	7ac4 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x4b9c>
    a430:	str	x0, [sp, #40]
    a434:	ldr	x0, [sp, #40]
    a438:	cmp	x0, #0x0
    a43c:	b.eq	a470 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x6c>  // b.none
    a440:	ldr	x1, [sp, #40]
    a444:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    a448:	add	x0, x0, #0x2b0
    a44c:	bl	3094 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x16c>
    a450:	str	x0, [sp, #32]
    a454:	ldr	x0, [sp, #32]
    a458:	ldr	x0, [x0, #24]
    a45c:	mov	x1, x0
    a460:	ldr	x0, [sp, #40]
    a464:	add	x1, x0, x1
    a468:	ldr	x0, [sp, #16]
    a46c:	str	x1, [x0]
    a470:	ldr	x0, [sp, #40]
    a474:	ldp	x29, x30, [sp], #48
    a478:	ret
    a47c:	stp	x29, x30, [sp, #-48]!
    a480:	mov	x29, sp
    a484:	str	x0, [sp, #24]
    a488:	ldr	x1, [sp, #24]
    a48c:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    a490:	add	x0, x0, #0x2b0
    a494:	bl	3094 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x16c>
    a498:	str	x0, [sp, #40]
    a49c:	ldr	x0, [sp, #40]
    a4a0:	cmp	x0, #0x0
    a4a4:	b.eq	a4c0 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xbc>  // b.none
    a4a8:	ldr	x0, [sp, #40]
    a4ac:	ldr	x0, [x0, #24]
    a4b0:	mov	x1, x0
    a4b4:	ldr	x0, [sp, #24]
    a4b8:	add	x0, x0, x1
    a4bc:	b	a4c4 <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0xc0>
    a4c0:	ldr	x0, [sp, #24]
    a4c4:	ldp	x29, x30, [sp], #48
    a4c8:	ret

000000000000a4cc <ffi_closure_free@@LIBFFI_CLOSURE_7.0>:
    a4cc:	stp	x29, x30, [sp, #-32]!
    a4d0:	mov	x29, sp
    a4d4:	str	x0, [sp, #24]
    a4d8:	ldr	x0, [sp, #24]
    a4dc:	bl	82c8 <ffi_prep_java_raw_closure@@LIBFFI_CLOSURE_7.0+0x53a0>
    a4e0:	nop
    a4e4:	ldp	x29, x30, [sp], #32
    a4e8:	ret
    a4ec:	stp	x29, x30, [sp, #-32]!
    a4f0:	mov	x29, sp
    a4f4:	str	x0, [sp, #24]
    a4f8:	str	x1, [sp, #16]
    a4fc:	ldr	x1, [sp, #16]
    a500:	ldr	x0, [sp, #24]
    a504:	bl	be84 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x734>
    a508:	nop
    a50c:	ldp	x29, x30, [sp], #32
    a510:	ret
    a514:	stp	x29, x30, [sp, #-48]!
    a518:	mov	x29, sp
    a51c:	str	x0, [sp, #24]
    a520:	ldr	x0, [sp, #24]
    a524:	ldr	x0, [x0, #16]
    a528:	str	x0, [sp, #32]
    a52c:	mov	w0, #0xffffffff            	// #-1
    a530:	str	w0, [sp, #40]
    a534:	ldr	x0, [sp, #32]
    a538:	cmp	x0, #0x0
    a53c:	b.eq	a5d4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x108>  // b.none
    a540:	str	wzr, [sp, #44]
    a544:	b	a5b0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xe4>
    a548:	ldrsw	x0, [sp, #44]
    a54c:	lsl	x0, x0, #3
    a550:	ldr	x1, [sp, #32]
    a554:	add	x0, x1, x0
    a558:	ldr	x0, [x0]
    a55c:	ldrh	w0, [x0, #10]
    a560:	str	w0, [sp, #40]
    a564:	ldr	w0, [sp, #40]
    a568:	cmp	w0, #0xd
    a56c:	b.eq	a57c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb0>  // b.none
    a570:	ldr	w0, [sp, #40]
    a574:	cmp	w0, #0xf
    a578:	b.ne	a5d0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x104>  // b.any
    a57c:	ldrsw	x0, [sp, #44]
    a580:	lsl	x0, x0, #3
    a584:	ldr	x1, [sp, #32]
    a588:	add	x0, x1, x0
    a58c:	ldr	x0, [x0]
    a590:	bl	a514 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x48>
    a594:	str	w0, [sp, #40]
    a598:	ldr	w0, [sp, #40]
    a59c:	cmp	w0, #0x0
    a5a0:	b.ge	a5d0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x104>  // b.tcont
    a5a4:	ldr	w0, [sp, #44]
    a5a8:	add	w0, w0, #0x1
    a5ac:	str	w0, [sp, #44]
    a5b0:	ldrsw	x0, [sp, #44]
    a5b4:	lsl	x0, x0, #3
    a5b8:	ldr	x1, [sp, #32]
    a5bc:	add	x0, x1, x0
    a5c0:	ldr	x0, [x0]
    a5c4:	cmp	x0, #0x0
    a5c8:	b.ne	a548 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x7c>  // b.any
    a5cc:	b	a5d4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x108>
    a5d0:	nop
    a5d4:	ldr	w0, [sp, #40]
    a5d8:	ldp	x29, x30, [sp], #48
    a5dc:	ret
    a5e0:	stp	x29, x30, [sp, #-64]!
    a5e4:	mov	x29, sp
    a5e8:	str	x0, [sp, #24]
    a5ec:	str	w1, [sp, #20]
    a5f0:	ldr	x0, [sp, #24]
    a5f4:	ldr	x0, [x0, #16]
    a5f8:	str	x0, [sp, #48]
    a5fc:	ldr	x0, [sp, #48]
    a600:	cmp	x0, #0x0
    a604:	b.eq	a6b0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1e4>  // b.none
    a608:	str	wzr, [sp, #60]
    a60c:	b	a694 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1c8>
    a610:	ldrsw	x0, [sp, #60]
    a614:	lsl	x0, x0, #3
    a618:	ldr	x1, [sp, #48]
    a61c:	add	x0, x1, x0
    a620:	ldr	x0, [x0]
    a624:	ldrh	w0, [x0, #10]
    a628:	str	w0, [sp, #44]
    a62c:	ldr	w0, [sp, #44]
    a630:	cmp	w0, #0xd
    a634:	b.eq	a644 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x178>  // b.none
    a638:	ldr	w0, [sp, #44]
    a63c:	cmp	w0, #0xf
    a640:	b.ne	a670 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1a4>  // b.any
    a644:	ldrsw	x0, [sp, #60]
    a648:	lsl	x0, x0, #3
    a64c:	ldr	x1, [sp, #48]
    a650:	add	x0, x1, x0
    a654:	ldr	x0, [x0]
    a658:	ldr	w1, [sp, #20]
    a65c:	bl	a5e0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x114>
    a660:	cmp	w0, #0x0
    a664:	b.ne	a688 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1bc>  // b.any
    a668:	mov	w0, #0x0                   	// #0
    a66c:	b	a6b4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1e8>
    a670:	ldr	w1, [sp, #44]
    a674:	ldr	w0, [sp, #20]
    a678:	cmp	w1, w0
    a67c:	b.eq	a688 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1bc>  // b.none
    a680:	mov	w0, #0x0                   	// #0
    a684:	b	a6b4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1e8>
    a688:	ldr	w0, [sp, #60]
    a68c:	add	w0, w0, #0x1
    a690:	str	w0, [sp, #60]
    a694:	ldrsw	x0, [sp, #60]
    a698:	lsl	x0, x0, #3
    a69c:	ldr	x1, [sp, #48]
    a6a0:	add	x0, x1, x0
    a6a4:	ldr	x0, [x0]
    a6a8:	cmp	x0, #0x0
    a6ac:	b.ne	a610 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x144>  // b.any
    a6b0:	mov	w0, #0x1                   	// #1
    a6b4:	ldp	x29, x30, [sp], #64
    a6b8:	ret
    a6bc:	stp	x29, x30, [sp, #-80]!
    a6c0:	mov	x29, sp
    a6c4:	str	x0, [sp, #24]
    a6c8:	ldr	x0, [sp, #24]
    a6cc:	ldrh	w0, [x0, #10]
    a6d0:	str	w0, [sp, #76]
    a6d4:	ldr	w0, [sp, #76]
    a6d8:	cmp	w0, #0xf
    a6dc:	b.eq	a728 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x25c>  // b.none
    a6e0:	ldr	w0, [sp, #76]
    a6e4:	cmp	w0, #0xf
    a6e8:	b.gt	a714 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x248>
    a6ec:	ldr	w0, [sp, #76]
    a6f0:	cmp	w0, #0x4
    a6f4:	b.gt	a708 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x23c>
    a6f8:	ldr	w0, [sp, #76]
    a6fc:	cmp	w0, #0x2
    a700:	b.ge	a71c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x250>  // b.tcont
    a704:	b	a714 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x248>
    a708:	ldr	w0, [sp, #76]
    a70c:	cmp	w0, #0xd
    a710:	b.eq	a760 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x294>  // b.none
    a714:	mov	w0, #0x0                   	// #0
    a718:	b	a9a8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4dc>
    a71c:	mov	x0, #0x1                   	// #1
    a720:	str	x0, [sp, #64]
    a724:	b	a98c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4c0>
    a728:	ldr	x0, [sp, #24]
    a72c:	ldr	x0, [x0, #16]
    a730:	ldr	x0, [x0]
    a734:	ldrh	w0, [x0, #10]
    a738:	str	w0, [sp, #76]
    a73c:	ldr	w0, [sp, #76]
    a740:	sub	w0, w0, #0x2
    a744:	cmp	w0, #0x2
    a748:	b.hi	a758 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x28c>  // b.pmore
    a74c:	mov	x0, #0x2                   	// #2
    a750:	str	x0, [sp, #64]
    a754:	b	a98c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4c0>
    a758:	mov	w0, #0x0                   	// #0
    a75c:	b	a9a8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4dc>
    a760:	nop
    a764:	ldr	x0, [sp, #24]
    a768:	ldr	x0, [x0]
    a76c:	str	x0, [sp, #56]
    a770:	ldr	x0, [sp, #56]
    a774:	cmp	x0, #0x3
    a778:	b.ls	a788 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2bc>  // b.plast
    a77c:	ldr	x0, [sp, #56]
    a780:	cmp	x0, #0x40
    a784:	b.ls	a790 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2c4>  // b.plast
    a788:	mov	w0, #0x0                   	// #0
    a78c:	b	a9a8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4dc>
    a790:	ldr	x0, [sp, #24]
    a794:	ldr	x0, [x0, #16]
    a798:	str	x0, [sp, #48]
    a79c:	ldr	x0, [sp, #48]
    a7a0:	ldr	x0, [x0]
    a7a4:	ldrh	w0, [x0, #10]
    a7a8:	str	w0, [sp, #76]
    a7ac:	ldr	w0, [sp, #76]
    a7b0:	cmp	w0, #0xd
    a7b4:	b.eq	a7c4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2f8>  // b.none
    a7b8:	ldr	w0, [sp, #76]
    a7bc:	cmp	w0, #0xf
    a7c0:	b.ne	a804 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x338>  // b.any
    a7c4:	str	wzr, [sp, #72]
    a7c8:	ldrsw	x0, [sp, #72]
    a7cc:	lsl	x0, x0, #3
    a7d0:	ldr	x1, [sp, #48]
    a7d4:	add	x0, x1, x0
    a7d8:	ldr	x0, [x0]
    a7dc:	bl	a514 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x48>
    a7e0:	str	w0, [sp, #76]
    a7e4:	ldr	w0, [sp, #76]
    a7e8:	cmp	w0, #0x0
    a7ec:	b.ge	a800 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x334>  // b.tcont
    a7f0:	ldr	w0, [sp, #72]
    a7f4:	add	w0, w0, #0x1
    a7f8:	str	w0, [sp, #72]
    a7fc:	b	a7c8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x2fc>
    a800:	nop
    a804:	ldr	w0, [sp, #76]
    a808:	cmp	w0, #0x4
    a80c:	b.eq	a888 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3bc>  // b.none
    a810:	ldr	w0, [sp, #76]
    a814:	cmp	w0, #0x4
    a818:	b.gt	a8b0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3e4>
    a81c:	ldr	w0, [sp, #76]
    a820:	cmp	w0, #0x2
    a824:	b.eq	a838 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x36c>  // b.none
    a828:	ldr	w0, [sp, #76]
    a82c:	cmp	w0, #0x3
    a830:	b.eq	a860 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x394>  // b.none
    a834:	b	a8b0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3e4>
    a838:	ldr	x0, [sp, #56]
    a83c:	lsr	x0, x0, #2
    a840:	str	x0, [sp, #64]
    a844:	ldr	x0, [sp, #64]
    a848:	lsl	x0, x0, #2
    a84c:	ldr	x1, [sp, #56]
    a850:	cmp	x1, x0
    a854:	b.eq	a8b8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3ec>  // b.none
    a858:	mov	w0, #0x0                   	// #0
    a85c:	b	a9a8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4dc>
    a860:	ldr	x0, [sp, #56]
    a864:	lsr	x0, x0, #3
    a868:	str	x0, [sp, #64]
    a86c:	ldr	x0, [sp, #64]
    a870:	lsl	x0, x0, #3
    a874:	ldr	x1, [sp, #56]
    a878:	cmp	x1, x0
    a87c:	b.eq	a8c0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3f4>  // b.none
    a880:	mov	w0, #0x0                   	// #0
    a884:	b	a9a8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4dc>
    a888:	ldr	x0, [sp, #56]
    a88c:	lsr	x0, x0, #4
    a890:	str	x0, [sp, #64]
    a894:	ldr	x0, [sp, #64]
    a898:	lsl	x0, x0, #4
    a89c:	ldr	x1, [sp, #56]
    a8a0:	cmp	x1, x0
    a8a4:	b.eq	a8c8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x3fc>  // b.none
    a8a8:	mov	w0, #0x0                   	// #0
    a8ac:	b	a9a8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4dc>
    a8b0:	mov	w0, #0x0                   	// #0
    a8b4:	b	a9a8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4dc>
    a8b8:	nop
    a8bc:	b	a8cc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x400>
    a8c0:	nop
    a8c4:	b	a8cc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x400>
    a8c8:	nop
    a8cc:	ldr	x0, [sp, #64]
    a8d0:	cmp	x0, #0x4
    a8d4:	b.ls	a8e0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x414>  // b.plast
    a8d8:	mov	w0, #0x0                   	// #0
    a8dc:	b	a9a8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4dc>
    a8e0:	str	wzr, [sp, #72]
    a8e4:	b	a96c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4a0>
    a8e8:	ldrsw	x0, [sp, #72]
    a8ec:	lsl	x0, x0, #3
    a8f0:	ldr	x1, [sp, #48]
    a8f4:	add	x0, x1, x0
    a8f8:	ldr	x0, [x0]
    a8fc:	ldrh	w0, [x0, #10]
    a900:	str	w0, [sp, #44]
    a904:	ldr	w0, [sp, #44]
    a908:	cmp	w0, #0xd
    a90c:	b.eq	a91c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x450>  // b.none
    a910:	ldr	w0, [sp, #44]
    a914:	cmp	w0, #0xf
    a918:	b.ne	a948 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x47c>  // b.any
    a91c:	ldrsw	x0, [sp, #72]
    a920:	lsl	x0, x0, #3
    a924:	ldr	x1, [sp, #48]
    a928:	add	x0, x1, x0
    a92c:	ldr	x0, [x0]
    a930:	ldr	w1, [sp, #76]
    a934:	bl	a5e0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x114>
    a938:	cmp	w0, #0x0
    a93c:	b.ne	a960 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x494>  // b.any
    a940:	mov	w0, #0x0                   	// #0
    a944:	b	a9a8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4dc>
    a948:	ldr	w1, [sp, #44]
    a94c:	ldr	w0, [sp, #76]
    a950:	cmp	w1, w0
    a954:	b.eq	a960 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x494>  // b.none
    a958:	mov	w0, #0x0                   	// #0
    a95c:	b	a9a8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4dc>
    a960:	ldr	w0, [sp, #72]
    a964:	add	w0, w0, #0x1
    a968:	str	w0, [sp, #72]
    a96c:	ldrsw	x0, [sp, #72]
    a970:	lsl	x0, x0, #3
    a974:	ldr	x1, [sp, #48]
    a978:	add	x0, x1, x0
    a97c:	ldr	x0, [x0]
    a980:	cmp	x0, #0x0
    a984:	b.ne	a8e8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x41c>  // b.any
    a988:	nop
    a98c:	ldr	w0, [sp, #76]
    a990:	lsl	w1, w0, #2
    a994:	ldr	x0, [sp, #64]
    a998:	mov	w2, w0
    a99c:	mov	w0, #0x4                   	// #4
    a9a0:	sub	w0, w0, w2
    a9a4:	add	w0, w1, w0
    a9a8:	ldp	x29, x30, [sp], #80
    a9ac:	ret
    a9b0:	sub	sp, sp, #0x10
    a9b4:	str	x0, [sp, #8]
    a9b8:	ldr	x0, [sp, #8]
    a9bc:	str	wzr, [x0]
    a9c0:	ldr	x0, [sp, #8]
    a9c4:	str	wzr, [x0, #4]
    a9c8:	ldr	x0, [sp, #8]
    a9cc:	str	xzr, [x0, #8]
    a9d0:	nop
    a9d4:	add	sp, sp, #0x10
    a9d8:	ret
    a9dc:	sub	sp, sp, #0x30
    a9e0:	str	x0, [sp, #24]
    a9e4:	str	x1, [sp, #16]
    a9e8:	str	x2, [sp, #8]
    a9ec:	str	x3, [sp]
    a9f0:	ldr	x0, [sp, #24]
    a9f4:	ldr	x0, [x0, #8]
    a9f8:	str	x0, [sp, #40]
    a9fc:	ldr	x0, [sp, #8]
    aa00:	cmp	x0, #0x7
    aa04:	b.hi	aa10 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x544>  // b.pmore
    aa08:	mov	x0, #0x8                   	// #8
    aa0c:	str	x0, [sp, #8]
    aa10:	ldr	x0, [sp, #40]
    aa14:	sub	x1, x0, #0x1
    aa18:	ldr	x0, [sp, #8]
    aa1c:	sub	x0, x0, #0x1
    aa20:	orr	x0, x1, x0
    aa24:	add	x0, x0, #0x1
    aa28:	str	x0, [sp, #40]
    aa2c:	ldr	x1, [sp, #40]
    aa30:	ldr	x0, [sp]
    aa34:	add	x1, x1, x0
    aa38:	ldr	x0, [sp, #24]
    aa3c:	str	x1, [x0, #8]
    aa40:	ldr	x1, [sp, #16]
    aa44:	ldr	x0, [sp, #40]
    aa48:	add	x0, x1, x0
    aa4c:	add	sp, sp, #0x30
    aa50:	ret
    aa54:	stp	x29, x30, [sp, #-32]!
    aa58:	mov	x29, sp
    aa5c:	str	x0, [sp, #24]
    aa60:	str	w1, [sp, #20]
    aa64:	ldr	w0, [sp, #20]
    aa68:	cmp	w0, #0xe
    aa6c:	b.eq	ab90 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x6c4>  // b.none
    aa70:	ldr	w0, [sp, #20]
    aa74:	cmp	w0, #0xe
    aa78:	b.gt	ab9c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x6d0>
    aa7c:	ldr	w0, [sp, #20]
    aa80:	cmp	w0, #0xc
    aa84:	b.gt	ab9c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x6d0>
    aa88:	ldr	w0, [sp, #20]
    aa8c:	cmp	w0, #0xb
    aa90:	b.ge	ab84 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x6b8>  // b.tcont
    aa94:	ldr	w0, [sp, #20]
    aa98:	cmp	w0, #0xa
    aa9c:	b.eq	ab74 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x6a8>  // b.none
    aaa0:	ldr	w0, [sp, #20]
    aaa4:	cmp	w0, #0xa
    aaa8:	b.gt	ab9c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x6d0>
    aaac:	ldr	w0, [sp, #20]
    aab0:	cmp	w0, #0x9
    aab4:	b.eq	ab64 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x698>  // b.none
    aab8:	ldr	w0, [sp, #20]
    aabc:	cmp	w0, #0x9
    aac0:	b.gt	ab9c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x6d0>
    aac4:	ldr	w0, [sp, #20]
    aac8:	cmp	w0, #0x8
    aacc:	b.eq	ab54 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x688>  // b.none
    aad0:	ldr	w0, [sp, #20]
    aad4:	cmp	w0, #0x8
    aad8:	b.gt	ab9c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x6d0>
    aadc:	ldr	w0, [sp, #20]
    aae0:	cmp	w0, #0x7
    aae4:	b.eq	ab44 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x678>  // b.none
    aae8:	ldr	w0, [sp, #20]
    aaec:	cmp	w0, #0x7
    aaf0:	b.gt	ab9c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x6d0>
    aaf4:	ldr	w0, [sp, #20]
    aaf8:	cmp	w0, #0x6
    aafc:	b.eq	ab34 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x668>  // b.none
    ab00:	ldr	w0, [sp, #20]
    ab04:	cmp	w0, #0x6
    ab08:	b.gt	ab9c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x6d0>
    ab0c:	ldr	w0, [sp, #20]
    ab10:	cmp	w0, #0x1
    ab14:	b.eq	ab74 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x6a8>  // b.none
    ab18:	ldr	w0, [sp, #20]
    ab1c:	cmp	w0, #0x5
    ab20:	b.ne	ab9c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x6d0>  // b.any
    ab24:	ldr	x0, [sp, #24]
    ab28:	ldrb	w0, [x0]
    ab2c:	and	x0, x0, #0xff
    ab30:	b	aba0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x6d4>
    ab34:	ldr	x0, [sp, #24]
    ab38:	ldrsb	w0, [x0]
    ab3c:	sxtb	x0, w0
    ab40:	b	aba0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x6d4>
    ab44:	ldr	x0, [sp, #24]
    ab48:	ldrh	w0, [x0]
    ab4c:	and	x0, x0, #0xffff
    ab50:	b	aba0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x6d4>
    ab54:	ldr	x0, [sp, #24]
    ab58:	ldrsh	w0, [x0]
    ab5c:	sxth	x0, w0
    ab60:	b	aba0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x6d4>
    ab64:	ldr	x0, [sp, #24]
    ab68:	ldr	w0, [x0]
    ab6c:	mov	w0, w0
    ab70:	b	aba0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x6d4>
    ab74:	ldr	x0, [sp, #24]
    ab78:	ldr	w0, [x0]
    ab7c:	sxtw	x0, w0
    ab80:	b	aba0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x6d4>
    ab84:	ldr	x0, [sp, #24]
    ab88:	ldr	x0, [x0]
    ab8c:	b	aba0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x6d4>
    ab90:	ldr	x0, [sp, #24]
    ab94:	ldr	x0, [x0]
    ab98:	b	aba0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x6d4>
    ab9c:	bl	1b90 <abort@plt>
    aba0:	ldp	x29, x30, [sp], #32
    aba4:	ret
    aba8:	sub	sp, sp, #0x30
    abac:	str	x0, [sp, #24]
    abb0:	str	x1, [sp, #16]
    abb4:	str	w2, [sp, #12]
    abb8:	ldr	w0, [sp, #12]
    abbc:	sub	w0, w0, #0x8
    abc0:	sxtw	x0, w0
    abc4:	str	x0, [sp, #40]
    abc8:	ldr	x1, [sp, #40]
    abcc:	mov	x0, x1
    abd0:	lsl	x0, x0, #1
    abd4:	add	x0, x0, x1
    abd8:	lsl	x0, x0, #2
    abdc:	mov	x3, x0
    abe0:	ldr	x1, [sp, #24]
    abe4:	ldr	x2, [sp, #16]
    abe8:	adr	x0, abf4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x728>
    abec:	add	x0, x0, x3
    abf0:	br	x0
    abf4:	ldp	s16, s17, [x2]
    abf8:	ldp	s18, s19, [x2, #8]
    abfc:	b	ac80 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x7b4>
    ac00:	ldp	s16, s17, [x2]
    ac04:	ldr	s18, [x2, #8]
    ac08:	b	ac84 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x7b8>
    ac0c:	ldp	s16, s17, [x2]
    ac10:	b	ac88 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x7bc>
    ac14:	nop
    ac18:	ldr	s16, [x2]
    ac1c:	b	ac8c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x7c0>
    ac20:	nop
    ac24:	ldp	d16, d17, [x2]
    ac28:	ldp	d18, d19, [x2, #16]
    ac2c:	b	ac80 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x7b4>
    ac30:	ldp	d16, d17, [x2]
    ac34:	ldr	d18, [x2, #16]
    ac38:	b	ac84 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x7b8>
    ac3c:	ldp	d16, d17, [x2]
    ac40:	b	ac88 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x7bc>
    ac44:	nop
    ac48:	ldr	d16, [x2]
    ac4c:	b	ac8c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x7c0>
    ac50:	nop
    ac54:	ldp	q16, q17, [x2]
    ac58:	ldp	q18, q19, [x2, #32]
    ac5c:	b	ac80 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x7b4>
    ac60:	ldp	q16, q17, [x2]
    ac64:	ldr	q18, [x2, #32]
    ac68:	b	ac84 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x7b8>
    ac6c:	ldp	q16, q17, [x2]
    ac70:	b	ac88 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x7bc>
    ac74:	nop
    ac78:	ldr	q16, [x2]
    ac7c:	b	ac8c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x7c0>
    ac80:	str	q19, [x1, #48]
    ac84:	str	q18, [x1, #32]
    ac88:	str	q17, [x1, #16]
    ac8c:	str	q16, [x1]
    ac90:	str	x0, [sp, #32]
    ac94:	nop
    ac98:	add	sp, sp, #0x30
    ac9c:	ret
    aca0:	stp	x29, x30, [sp, #-48]!
    aca4:	mov	x29, sp
    aca8:	str	x0, [sp, #40]
    acac:	str	x1, [sp, #32]
    acb0:	str	w2, [sp, #28]
    acb4:	ldr	w0, [sp, #28]
    acb8:	cmp	w0, #0xf
    acbc:	b.eq	adc8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x8fc>  // b.none
    acc0:	ldr	w0, [sp, #28]
    acc4:	cmp	w0, #0xf
    acc8:	b.gt	ae30 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x964>
    accc:	ldr	w0, [sp, #28]
    acd0:	cmp	w0, #0xe
    acd4:	b.eq	adec <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x920>  // b.none
    acd8:	ldr	w0, [sp, #28]
    acdc:	cmp	w0, #0xe
    ace0:	b.gt	ae30 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x964>
    ace4:	ldr	w0, [sp, #28]
    ace8:	cmp	w0, #0xd
    acec:	b.eq	ae00 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x934>  // b.none
    acf0:	ldr	w0, [sp, #28]
    acf4:	cmp	w0, #0xd
    acf8:	b.gt	ae30 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x964>
    acfc:	ldr	w0, [sp, #28]
    ad00:	cmp	w0, #0xc
    ad04:	b.eq	ae18 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x94c>  // b.none
    ad08:	ldr	w0, [sp, #28]
    ad0c:	cmp	w0, #0xc
    ad10:	b.gt	ae30 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x964>
    ad14:	ldr	w0, [sp, #28]
    ad18:	cmp	w0, #0xb
    ad1c:	b.eq	ad60 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x894>  // b.none
    ad20:	ldr	w0, [sp, #28]
    ad24:	cmp	w0, #0xb
    ad28:	b.gt	ae30 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x964>
    ad2c:	ldr	w0, [sp, #28]
    ad30:	cmp	w0, #0xa
    ad34:	b.eq	ad84 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x8b8>  // b.none
    ad38:	ldr	w0, [sp, #28]
    ad3c:	cmp	w0, #0xa
    ad40:	b.gt	ae30 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x964>
    ad44:	ldr	w0, [sp, #28]
    ad48:	cmp	w0, #0x8
    ad4c:	b.eq	adb0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x8e4>  // b.none
    ad50:	ldr	w0, [sp, #28]
    ad54:	cmp	w0, #0x9
    ad58:	b.eq	ad98 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x8cc>  // b.none
    ad5c:	b	ae30 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x964>
    ad60:	ldr	x1, [sp, #40]
    ad64:	ldr	x0, [sp, #32]
    ad68:	cmp	x1, x0
    ad6c:	b.eq	ae6c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x9a0>  // b.none
    ad70:	ldr	x0, [sp, #32]
    ad74:	ldr	s0, [x0]
    ad78:	ldr	x0, [sp, #40]
    ad7c:	str	s0, [x0]
    ad80:	b	ae6c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x9a0>
    ad84:	ldr	x0, [sp, #40]
    ad88:	ldr	x1, [sp, #32]
    ad8c:	ldp	q16, q17, [x1]
    ad90:	st2	{v16.s, v17.s}[0], [x0]
    ad94:	b	ae80 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x9b4>
    ad98:	ldr	x0, [sp, #40]
    ad9c:	ldr	x1, [sp, #32]
    ada0:	ldp	q16, q17, [x1]
    ada4:	ldr	q18, [x1, #32]
    ada8:	st3	{v16.s-v18.s}[0], [x0]
    adac:	b	ae80 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x9b4>
    adb0:	ldr	x0, [sp, #40]
    adb4:	ldr	x1, [sp, #32]
    adb8:	ldp	q16, q17, [x1]
    adbc:	ldp	q18, q19, [x1, #32]
    adc0:	st4	{v16.s-v19.s}[0], [x0]
    adc4:	b	ae80 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x9b4>
    adc8:	ldr	x1, [sp, #40]
    adcc:	ldr	x0, [sp, #32]
    add0:	cmp	x1, x0
    add4:	b.eq	ae74 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x9a8>  // b.none
    add8:	ldr	x0, [sp, #32]
    addc:	ldr	d0, [x0]
    ade0:	ldr	x0, [sp, #40]
    ade4:	str	d0, [x0]
    ade8:	b	ae74 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x9a8>
    adec:	ldr	x0, [sp, #40]
    adf0:	ldr	x1, [sp, #32]
    adf4:	ldp	q16, q17, [x1]
    adf8:	st2	{v16.d, v17.d}[0], [x0]
    adfc:	b	ae80 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x9b4>
    ae00:	ldr	x0, [sp, #40]
    ae04:	ldr	x1, [sp, #32]
    ae08:	ldp	q16, q17, [x1]
    ae0c:	ldr	q18, [x1, #32]
    ae10:	st3	{v16.d-v18.d}[0], [x0]
    ae14:	b	ae80 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x9b4>
    ae18:	ldr	x0, [sp, #40]
    ae1c:	ldr	x1, [sp, #32]
    ae20:	ldp	q16, q17, [x1]
    ae24:	ldp	q18, q19, [x1, #32]
    ae28:	st4	{v16.d-v19.d}[0], [x0]
    ae2c:	b	ae80 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x9b4>
    ae30:	ldr	x1, [sp, #40]
    ae34:	ldr	x0, [sp, #32]
    ae38:	cmp	x1, x0
    ae3c:	b.eq	ae7c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x9b0>  // b.none
    ae40:	ldr	w0, [sp, #28]
    ae44:	and	w0, w0, #0x3
    ae48:	mov	w1, #0x4                   	// #4
    ae4c:	sub	w0, w1, w0
    ae50:	lsl	w0, w0, #4
    ae54:	sxtw	x0, w0
    ae58:	mov	x2, x0
    ae5c:	ldr	x1, [sp, #32]
    ae60:	ldr	x0, [sp, #40]
    ae64:	bl	1a60 <memcpy@plt>
    ae68:	b	ae84 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x9b8>
    ae6c:	nop
    ae70:	b	ae80 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x9b4>
    ae74:	nop
    ae78:	b	ae80 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x9b4>
    ae7c:	nop
    ae80:	ldr	x0, [sp, #40]
    ae84:	ldp	x29, x30, [sp], #48
    ae88:	ret
    ae8c:	stp	x29, x30, [sp, #-48]!
    ae90:	mov	x29, sp
    ae94:	str	x0, [sp, #40]
    ae98:	str	x1, [sp, #32]
    ae9c:	str	x2, [sp, #24]
    aea0:	str	x3, [sp, #16]
    aea4:	ldr	x0, [sp, #32]
    aea8:	ldr	w0, [x0]
    aeac:	cmp	w0, #0x7
    aeb0:	b.hi	aee0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xa14>  // b.pmore
    aeb4:	ldr	x0, [sp, #32]
    aeb8:	ldr	w0, [x0]
    aebc:	add	w2, w0, #0x1
    aec0:	ldr	x1, [sp, #32]
    aec4:	str	w2, [x1]
    aec8:	mov	w0, w0
    aecc:	add	x0, x0, #0x10
    aed0:	lsl	x0, x0, #3
    aed4:	ldr	x1, [sp, #40]
    aed8:	add	x0, x1, x0
    aedc:	b	af00 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xa34>
    aee0:	ldr	x0, [sp, #32]
    aee4:	mov	w1, #0x8                   	// #8
    aee8:	str	w1, [x0]
    aeec:	ldr	x3, [sp, #16]
    aef0:	ldr	x2, [sp, #16]
    aef4:	ldr	x1, [sp, #24]
    aef8:	ldr	x0, [sp, #32]
    aefc:	bl	a9dc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x510>
    af00:	ldp	x29, x30, [sp], #48
    af04:	ret
    af08:	stp	x29, x30, [sp, #-80]!
    af0c:	mov	x29, sp
    af10:	str	x0, [sp, #24]
    af14:	ldr	x0, [sp, #24]
    af18:	ldr	x0, [x0, #16]
    af1c:	str	x0, [sp, #56]
    af20:	ldr	x0, [sp, #24]
    af24:	ldr	w0, [x0, #24]
    af28:	mov	w0, w0
    af2c:	str	x0, [sp, #72]
    af30:	ldr	x0, [sp, #56]
    af34:	ldrh	w0, [x0, #10]
    af38:	cmp	w0, #0xf
    af3c:	b.eq	b064 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb98>  // b.none
    af40:	cmp	w0, #0xf
    af44:	b.gt	b0e8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc1c>
    af48:	cmp	w0, #0xe
    af4c:	b.eq	b058 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb8c>  // b.none
    af50:	cmp	w0, #0xe
    af54:	b.gt	b0e8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc1c>
    af58:	cmp	w0, #0xd
    af5c:	b.eq	b064 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb98>  // b.none
    af60:	cmp	w0, #0xd
    af64:	b.gt	b0e8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc1c>
    af68:	cmp	w0, #0xc
    af6c:	b.gt	b0e8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc1c>
    af70:	cmp	w0, #0xb
    af74:	b.ge	b04c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb80>  // b.tcont
    af78:	cmp	w0, #0xa
    af7c:	b.eq	b040 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb74>  // b.none
    af80:	cmp	w0, #0xa
    af84:	b.gt	b0e8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc1c>
    af88:	cmp	w0, #0x9
    af8c:	b.eq	b01c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb50>  // b.none
    af90:	cmp	w0, #0x9
    af94:	b.gt	b0e8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc1c>
    af98:	cmp	w0, #0x8
    af9c:	b.eq	b034 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb68>  // b.none
    afa0:	cmp	w0, #0x8
    afa4:	b.gt	b0e8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc1c>
    afa8:	cmp	w0, #0x7
    afac:	b.eq	b010 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb44>  // b.none
    afb0:	cmp	w0, #0x7
    afb4:	b.gt	b0e8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc1c>
    afb8:	cmp	w0, #0x6
    afbc:	b.eq	b028 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb5c>  // b.none
    afc0:	cmp	w0, #0x6
    afc4:	b.gt	b0e8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc1c>
    afc8:	cmp	w0, #0x5
    afcc:	b.eq	b004 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb38>  // b.none
    afd0:	cmp	w0, #0x5
    afd4:	b.gt	b0e8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc1c>
    afd8:	cmp	w0, #0x4
    afdc:	b.gt	b0e8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc1c>
    afe0:	cmp	w0, #0x2
    afe4:	b.ge	b064 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb98>  // b.tcont
    afe8:	cmp	w0, #0x0
    afec:	b.eq	affc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb30>  // b.none
    aff0:	cmp	w0, #0x1
    aff4:	b.eq	b040 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb74>  // b.none
    aff8:	b	b0e8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc1c>
    affc:	str	wzr, [sp, #68]
    b000:	b	b0f0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc24>
    b004:	mov	w0, #0x14                  	// #20
    b008:	str	w0, [sp, #68]
    b00c:	b	b0f0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc24>
    b010:	mov	w0, #0x16                  	// #22
    b014:	str	w0, [sp, #68]
    b018:	b	b0f0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc24>
    b01c:	mov	w0, #0x18                  	// #24
    b020:	str	w0, [sp, #68]
    b024:	b	b0f0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc24>
    b028:	mov	w0, #0x1a                  	// #26
    b02c:	str	w0, [sp, #68]
    b030:	b	b0f0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc24>
    b034:	mov	w0, #0x1c                  	// #28
    b038:	str	w0, [sp, #68]
    b03c:	b	b0f0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc24>
    b040:	mov	w0, #0x1e                  	// #30
    b044:	str	w0, [sp, #68]
    b048:	b	b0f0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc24>
    b04c:	mov	w0, #0x1                   	// #1
    b050:	str	w0, [sp, #68]
    b054:	b	b0f0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc24>
    b058:	mov	w0, #0x1                   	// #1
    b05c:	str	w0, [sp, #68]
    b060:	b	b0f0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc24>
    b064:	ldr	x0, [sp, #56]
    b068:	bl	a6bc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1f0>
    b06c:	str	w0, [sp, #68]
    b070:	ldr	w0, [sp, #68]
    b074:	cmp	w0, #0x0
    b078:	b.ne	b0ec <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc20>  // b.any
    b07c:	ldr	x0, [sp, #56]
    b080:	ldr	x0, [x0]
    b084:	str	x0, [sp, #48]
    b088:	ldr	x0, [sp, #48]
    b08c:	cmp	x0, #0x10
    b090:	b.ls	b0ac <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xbe0>  // b.plast
    b094:	mov	w0, #0x20                  	// #32
    b098:	str	w0, [sp, #68]
    b09c:	ldr	x0, [sp, #72]
    b0a0:	add	x0, x0, #0x8
    b0a4:	str	x0, [sp, #72]
    b0a8:	b	b0ec <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc20>
    b0ac:	ldr	x0, [sp, #48]
    b0b0:	cmp	x0, #0x10
    b0b4:	b.ne	b0c4 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xbf8>  // b.any
    b0b8:	mov	w0, #0x2                   	// #2
    b0bc:	str	w0, [sp, #68]
    b0c0:	b	b0ec <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc20>
    b0c4:	ldr	x0, [sp, #48]
    b0c8:	cmp	x0, #0x8
    b0cc:	b.ne	b0dc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc10>  // b.any
    b0d0:	mov	w0, #0x1                   	// #1
    b0d4:	str	w0, [sp, #68]
    b0d8:	b	b0ec <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc20>
    b0dc:	mov	w0, #0x42                  	// #66
    b0e0:	str	w0, [sp, #68]
    b0e4:	b	b0ec <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc20>
    b0e8:	bl	1b90 <abort@plt>
    b0ec:	nop
    b0f0:	str	wzr, [sp, #64]
    b0f4:	ldr	x0, [sp, #24]
    b0f8:	ldr	w0, [x0, #4]
    b0fc:	str	w0, [sp, #44]
    b100:	b	b144 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc78>
    b104:	ldr	x0, [sp, #24]
    b108:	ldr	x1, [x0, #8]
    b10c:	ldrsw	x0, [sp, #64]
    b110:	lsl	x0, x0, #3
    b114:	add	x0, x1, x0
    b118:	ldr	x0, [x0]
    b11c:	bl	a6bc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1f0>
    b120:	cmp	w0, #0x0
    b124:	b.eq	b138 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc6c>  // b.none
    b128:	ldr	w0, [sp, #68]
    b12c:	orr	w0, w0, #0x80
    b130:	str	w0, [sp, #68]
    b134:	b	b154 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc88>
    b138:	ldr	w0, [sp, #64]
    b13c:	add	w0, w0, #0x1
    b140:	str	w0, [sp, #64]
    b144:	ldr	w1, [sp, #64]
    b148:	ldr	w0, [sp, #44]
    b14c:	cmp	w1, w0
    b150:	b.lt	b104 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xc38>  // b.tstop
    b154:	ldr	x0, [sp, #72]
    b158:	sub	w0, w0, #0x1
    b15c:	orr	w0, w0, #0xf
    b160:	add	w1, w0, #0x1
    b164:	ldr	x0, [sp, #24]
    b168:	str	w1, [x0, #24]
    b16c:	ldr	w1, [sp, #68]
    b170:	ldr	x0, [sp, #24]
    b174:	str	w1, [x0, #28]
    b178:	mov	w0, #0x0                   	// #0
    b17c:	ldp	x29, x30, [sp], #80
    b180:	ret
    b184:	stp	x29, x30, [sp, #-240]!
    b188:	mov	x29, sp
    b18c:	str	x0, [x29, #56]
    b190:	str	x1, [x29, #48]
    b194:	str	x2, [x29, #40]
    b198:	str	x3, [x29, #32]
    b19c:	str	x4, [x29, #24]
    b1a0:	ldr	x0, [x29, #56]
    b1a4:	ldr	w0, [x0, #28]
    b1a8:	str	w0, [x29, #224]
    b1ac:	ldr	x0, [x29, #56]
    b1b0:	ldr	x0, [x0, #16]
    b1b4:	str	x0, [x29, #184]
    b1b8:	ldr	x0, [x29, #184]
    b1bc:	ldr	x0, [x0]
    b1c0:	str	x0, [x29, #176]
    b1c4:	ldr	x0, [x29, #56]
    b1c8:	ldr	w0, [x0, #24]
    b1cc:	mov	w0, w0
    b1d0:	str	x0, [x29, #168]
    b1d4:	str	xzr, [x29, #232]
    b1d8:	ldr	w0, [x29, #224]
    b1dc:	and	w0, w0, #0x20
    b1e0:	cmp	w0, #0x0
    b1e4:	b.eq	b200 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xd34>  // b.none
    b1e8:	ldr	x0, [x29, #40]
    b1ec:	cmp	x0, #0x0
    b1f0:	b.ne	b234 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xd68>  // b.any
    b1f4:	ldr	x0, [x29, #176]
    b1f8:	str	x0, [x29, #232]
    b1fc:	b	b234 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xd68>
    b200:	ldr	x0, [x29, #40]
    b204:	cmp	x0, #0x0
    b208:	b.ne	b21c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xd50>  // b.any
    b20c:	ldr	w0, [x29, #224]
    b210:	and	w0, w0, #0x80
    b214:	str	w0, [x29, #224]
    b218:	b	b234 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xd68>
    b21c:	ldr	w0, [x29, #224]
    b220:	and	w0, w0, #0x40
    b224:	cmp	w0, #0x0
    b228:	b.eq	b234 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xd68>  // b.none
    b22c:	mov	x0, #0x10                  	// #16
    b230:	str	x0, [x29, #232]
    b234:	ldr	x1, [x29, #168]
    b238:	ldr	x0, [x29, #232]
    b23c:	add	x0, x1, x0
    b240:	add	x0, x0, #0xe0
    b244:	add	x0, x0, #0xf
    b248:	lsr	x0, x0, #4
    b24c:	lsl	x0, x0, #4
    b250:	sub	sp, sp, x0
    b254:	mov	x0, sp
    b258:	add	x0, x0, #0xf
    b25c:	lsr	x0, x0, #4
    b260:	lsl	x0, x0, #4
    b264:	str	x0, [x29, #160]
    b268:	ldr	x0, [x29, #160]
    b26c:	add	x0, x0, #0xc0
    b270:	str	x0, [x29, #152]
    b274:	ldr	x1, [x29, #152]
    b278:	ldr	x0, [x29, #168]
    b27c:	add	x0, x1, x0
    b280:	str	x0, [x29, #144]
    b284:	ldr	x0, [x29, #232]
    b288:	cmp	x0, #0x0
    b28c:	b.eq	b29c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xdd0>  // b.none
    b290:	ldr	x0, [x29, #144]
    b294:	add	x0, x0, #0x20
    b298:	b	b2a0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xdd4>
    b29c:	ldr	x0, [x29, #40]
    b2a0:	str	x0, [x29, #136]
    b2a4:	add	x0, x29, #0x40
    b2a8:	bl	a9b0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4e4>
    b2ac:	str	wzr, [x29, #228]
    b2b0:	ldr	x0, [x29, #56]
    b2b4:	ldr	w0, [x0, #4]
    b2b8:	str	w0, [x29, #132]
    b2bc:	b	b584 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x10b8>
    b2c0:	ldr	x0, [x29, #56]
    b2c4:	ldr	x1, [x0, #8]
    b2c8:	ldrsw	x0, [x29, #228]
    b2cc:	lsl	x0, x0, #3
    b2d0:	add	x0, x1, x0
    b2d4:	ldr	x0, [x0]
    b2d8:	str	x0, [x29, #120]
    b2dc:	ldr	x0, [x29, #120]
    b2e0:	ldr	x0, [x0]
    b2e4:	str	x0, [x29, #216]
    b2e8:	ldrsw	x0, [x29, #228]
    b2ec:	lsl	x0, x0, #3
    b2f0:	ldr	x1, [x29, #32]
    b2f4:	add	x0, x1, x0
    b2f8:	ldr	x0, [x0]
    b2fc:	str	x0, [x29, #208]
    b300:	ldr	x0, [x29, #120]
    b304:	ldrh	w0, [x0, #10]
    b308:	str	w0, [x29, #204]
    b30c:	ldr	w0, [x29, #204]
    b310:	cmp	w0, #0xf
    b314:	cset	w1, hi  // hi = pmore
    b318:	and	w1, w1, #0xff
    b31c:	cmp	w1, #0x0
    b320:	b.ne	b574 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x10a8>  // b.any
    b324:	mov	x1, #0x1                   	// #1
    b328:	lsl	x0, x1, x0
    b32c:	mov	x1, #0x5fe2                	// #24546
    b330:	and	x1, x0, x1
    b334:	cmp	x1, #0x0
    b338:	cset	w1, ne  // ne = any
    b33c:	and	w1, w1, #0xff
    b340:	cmp	w1, #0x0
    b344:	b.ne	b380 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xeb4>  // b.any
    b348:	mov	x1, #0xa01c                	// #40988
    b34c:	and	x1, x0, x1
    b350:	cmp	x1, #0x0
    b354:	cset	w1, ne  // ne = any
    b358:	and	w1, w1, #0xff
    b35c:	cmp	w1, #0x0
    b360:	b.ne	b3fc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xf30>  // b.any
    b364:	and	x0, x0, #0x1
    b368:	cmp	x0, #0x0
    b36c:	cset	w0, ne  // ne = any
    b370:	and	w0, w0, #0xff
    b374:	cmp	w0, #0x0
    b378:	b.eq	b574 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x10a8>  // b.none
    b37c:	b	b578 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x10ac>
    b380:	ldr	w1, [x29, #204]
    b384:	ldr	x0, [x29, #208]
    b388:	bl	aa54 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x588>
    b38c:	str	x0, [x29, #88]
    b390:	ldr	w0, [x29, #64]
    b394:	cmp	w0, #0x7
    b398:	b.hi	b3c0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xef4>  // b.pmore
    b39c:	ldr	w0, [x29, #64]
    b3a0:	add	w1, w0, #0x1
    b3a4:	str	w1, [x29, #64]
    b3a8:	ldr	x1, [x29, #160]
    b3ac:	mov	w0, w0
    b3b0:	add	x0, x0, #0x10
    b3b4:	ldr	x2, [x29, #88]
    b3b8:	str	x2, [x1, x0, lsl #3]
    b3bc:	b	b578 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x10ac>
    b3c0:	ldr	x0, [x29, #120]
    b3c4:	ldrh	w0, [x0, #8]
    b3c8:	and	x1, x0, #0xffff
    b3cc:	add	x0, x29, #0x40
    b3d0:	ldr	x3, [x29, #216]
    b3d4:	mov	x2, x1
    b3d8:	ldr	x1, [x29, #152]
    b3dc:	bl	a9dc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x510>
    b3e0:	str	x0, [x29, #80]
    b3e4:	mov	w0, #0x8                   	// #8
    b3e8:	str	w0, [x29, #64]
    b3ec:	ldr	x0, [x29, #80]
    b3f0:	ldr	x1, [x29, #88]
    b3f4:	str	x1, [x0]
    b3f8:	b	b578 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x10ac>
    b3fc:	ldr	x0, [x29, #120]
    b400:	bl	a6bc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1f0>
    b404:	str	w0, [x29, #116]
    b408:	ldr	w0, [x29, #116]
    b40c:	cmp	w0, #0x0
    b410:	b.eq	b4a8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xfdc>  // b.none
    b414:	ldr	w0, [x29, #116]
    b418:	and	w0, w0, #0x3
    b41c:	mov	w1, #0x4                   	// #4
    b420:	sub	w0, w1, w0
    b424:	str	w0, [x29, #100]
    b428:	ldr	w1, [x29, #68]
    b42c:	ldr	w0, [x29, #100]
    b430:	add	w0, w1, w0
    b434:	cmp	w0, #0x8
    b438:	b.hi	b478 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xfac>  // b.pmore
    b43c:	ldr	w0, [x29, #68]
    b440:	mov	w0, w0
    b444:	lsl	x0, x0, #4
    b448:	ldr	x1, [x29, #160]
    b44c:	add	x0, x1, x0
    b450:	str	x0, [x29, #192]
    b454:	ldr	w1, [x29, #68]
    b458:	ldr	w0, [x29, #100]
    b45c:	add	w0, w1, w0
    b460:	str	w0, [x29, #68]
    b464:	ldr	w2, [x29, #116]
    b468:	ldr	x1, [x29, #208]
    b46c:	ldr	x0, [x29, #192]
    b470:	bl	aba8 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x6dc>
    b474:	b	b578 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x10ac>
    b478:	mov	w0, #0x8                   	// #8
    b47c:	str	w0, [x29, #68]
    b480:	ldr	x0, [x29, #120]
    b484:	ldrh	w0, [x0, #8]
    b488:	and	x1, x0, #0xffff
    b48c:	add	x0, x29, #0x40
    b490:	ldr	x3, [x29, #216]
    b494:	mov	x2, x1
    b498:	ldr	x1, [x29, #152]
    b49c:	bl	a9dc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x510>
    b4a0:	str	x0, [x29, #192]
    b4a4:	b	b560 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1094>
    b4a8:	ldr	x0, [x29, #216]
    b4ac:	cmp	x0, #0x10
    b4b0:	b.ls	b4dc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1010>  // b.plast
    b4b4:	ldrsw	x0, [x29, #228]
    b4b8:	lsl	x0, x0, #3
    b4bc:	ldr	x1, [x29, #32]
    b4c0:	add	x0, x1, x0
    b4c4:	str	x0, [x29, #208]
    b4c8:	mov	w0, #0xe                   	// #14
    b4cc:	str	w0, [x29, #204]
    b4d0:	mov	x0, #0x8                   	// #8
    b4d4:	str	x0, [x29, #216]
    b4d8:	b	b380 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xeb4>
    b4dc:	ldr	x0, [x29, #216]
    b4e0:	add	x0, x0, #0x7
    b4e4:	lsr	x0, x0, #3
    b4e8:	str	x0, [x29, #104]
    b4ec:	ldr	w0, [x29, #64]
    b4f0:	mov	w1, w0
    b4f4:	ldr	x0, [x29, #104]
    b4f8:	add	x0, x1, x0
    b4fc:	cmp	x0, #0x8
    b500:	b.hi	b534 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1068>  // b.pmore
    b504:	ldr	w0, [x29, #64]
    b508:	mov	w0, w0
    b50c:	add	x0, x0, #0x10
    b510:	lsl	x0, x0, #3
    b514:	ldr	x1, [x29, #160]
    b518:	add	x0, x1, x0
    b51c:	str	x0, [x29, #192]
    b520:	ldr	w0, [x29, #64]
    b524:	ldr	x1, [x29, #104]
    b528:	add	w0, w0, w1
    b52c:	str	w0, [x29, #64]
    b530:	b	b560 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1094>
    b534:	mov	w0, #0x8                   	// #8
    b538:	str	w0, [x29, #64]
    b53c:	ldr	x0, [x29, #120]
    b540:	ldrh	w0, [x0, #8]
    b544:	and	x1, x0, #0xffff
    b548:	add	x0, x29, #0x40
    b54c:	ldr	x3, [x29, #216]
    b550:	mov	x2, x1
    b554:	ldr	x1, [x29, #152]
    b558:	bl	a9dc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x510>
    b55c:	str	x0, [x29, #192]
    b560:	ldr	x2, [x29, #216]
    b564:	ldr	x1, [x29, #208]
    b568:	ldr	x0, [x29, #192]
    b56c:	bl	1a60 <memcpy@plt>
    b570:	b	b578 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x10ac>
    b574:	bl	1b90 <abort@plt>
    b578:	ldr	w0, [x29, #228]
    b57c:	add	w0, w0, #0x1
    b580:	str	w0, [x29, #228]
    b584:	ldr	w1, [x29, #228]
    b588:	ldr	w0, [x29, #132]
    b58c:	cmp	w1, w0
    b590:	b.lt	b2c0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xdf4>  // b.tstop
    b594:	ldr	x5, [x29, #24]
    b598:	ldr	w4, [x29, #224]
    b59c:	ldr	x3, [x29, #136]
    b5a0:	ldr	x2, [x29, #48]
    b5a4:	ldr	x1, [x29, #144]
    b5a8:	ldr	x0, [x29, #160]
    b5ac:	bl	bb60 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x410>
    b5b0:	ldr	w0, [x29, #224]
    b5b4:	and	w0, w0, #0x40
    b5b8:	cmp	w0, #0x0
    b5bc:	b.eq	b5d0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1104>  // b.none
    b5c0:	ldr	x2, [x29, #176]
    b5c4:	ldr	x1, [x29, #136]
    b5c8:	ldr	x0, [x29, #40]
    b5cc:	bl	1a60 <memcpy@plt>
    b5d0:	nop
    b5d4:	mov	sp, x29
    b5d8:	ldp	x29, x30, [sp], #240
    b5dc:	ret

000000000000b5e0 <ffi_call@@LIBFFI_BASE_7.0>:
    b5e0:	stp	x29, x30, [sp, #-48]!
    b5e4:	mov	x29, sp
    b5e8:	str	x0, [sp, #40]
    b5ec:	str	x1, [sp, #32]
    b5f0:	str	x2, [sp, #24]
    b5f4:	str	x3, [sp, #16]
    b5f8:	mov	x4, #0x0                   	// #0
    b5fc:	ldr	x3, [sp, #16]
    b600:	ldr	x2, [sp, #24]
    b604:	ldr	x1, [sp, #32]
    b608:	ldr	x0, [sp, #40]
    b60c:	bl	b184 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xcb8>
    b610:	nop
    b614:	ldp	x29, x30, [sp], #48
    b618:	ret

000000000000b61c <ffi_call_go@@LIBFFI_GO_CLOSURE_7.0>:
    b61c:	stp	x29, x30, [sp, #-64]!
    b620:	mov	x29, sp
    b624:	str	x0, [sp, #56]
    b628:	str	x1, [sp, #48]
    b62c:	str	x2, [sp, #40]
    b630:	str	x3, [sp, #32]
    b634:	str	x4, [sp, #24]
    b638:	ldr	x4, [sp, #24]
    b63c:	ldr	x3, [sp, #32]
    b640:	ldr	x2, [sp, #40]
    b644:	ldr	x1, [sp, #48]
    b648:	ldr	x0, [sp, #56]
    b64c:	bl	b184 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xcb8>
    b650:	nop
    b654:	ldp	x29, x30, [sp], #64
    b658:	ret

000000000000b65c <ffi_prep_closure_loc@@LIBFFI_CLOSURE_7.0>:
    b65c:	stp	x29, x30, [sp, #-96]!
    b660:	mov	x29, sp
    b664:	str	x0, [sp, #56]
    b668:	str	x1, [sp, #48]
    b66c:	str	x2, [sp, #40]
    b670:	str	x3, [sp, #32]
    b674:	str	x4, [sp, #24]
    b678:	ldr	x0, [sp, #48]
    b67c:	ldr	w0, [x0]
    b680:	cmp	w0, #0x1
    b684:	b.eq	b690 <ffi_prep_closure_loc@@LIBFFI_CLOSURE_7.0+0x34>  // b.none
    b688:	mov	w0, #0x2                   	// #2
    b68c:	b	b748 <ffi_prep_closure_loc@@LIBFFI_CLOSURE_7.0+0xec>
    b690:	ldr	x0, [sp, #48]
    b694:	ldr	w0, [x0, #28]
    b698:	and	w0, w0, #0x80
    b69c:	cmp	w0, #0x0
    b6a0:	b.eq	b6b4 <ffi_prep_closure_loc@@LIBFFI_CLOSURE_7.0+0x58>  // b.none
    b6a4:	adrp	x0, b000 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb34>
    b6a8:	add	x0, x0, #0xcd0
    b6ac:	str	x0, [sp, #88]
    b6b0:	b	b6c0 <ffi_prep_closure_loc@@LIBFFI_CLOSURE_7.0+0x64>
    b6b4:	adrp	x0, b000 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb34>
    b6b8:	add	x0, x0, #0xcf0
    b6bc:	str	x0, [sp, #88]
    b6c0:	ldr	x0, [sp, #56]
    b6c4:	str	x0, [sp, #80]
    b6c8:	adrp	x0, c000 <ffi_type_sint8@@LIBFFI_BASE_7.0>
    b6cc:	add	x0, x0, #0x208
    b6d0:	ldp	x0, x1, [x0]
    b6d4:	ldr	x2, [sp, #80]
    b6d8:	stp	x0, x1, [x2]
    b6dc:	ldr	x0, [sp, #80]
    b6e0:	add	x0, x0, #0x10
    b6e4:	ldr	x1, [sp, #88]
    b6e8:	str	x1, [x0]
    b6ec:	ldr	x0, [sp, #80]
    b6f0:	add	x0, x0, #0x18
    b6f4:	mov	x1, x0
    b6f8:	ldr	x0, [sp, #80]
    b6fc:	bl	a4ec <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x20>
    b700:	ldr	x0, [sp, #80]
    b704:	bl	a47c <ffi_closure_alloc@@LIBFFI_CLOSURE_7.0+0x78>
    b708:	str	x0, [sp, #72]
    b70c:	ldr	x0, [sp, #72]
    b710:	add	x0, x0, #0x18
    b714:	mov	x1, x0
    b718:	ldr	x0, [sp, #72]
    b71c:	bl	a4ec <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x20>
    b720:	ldr	x0, [sp, #56]
    b724:	ldr	x1, [sp, #48]
    b728:	str	x1, [x0, #24]
    b72c:	ldr	x0, [sp, #56]
    b730:	ldr	x1, [sp, #40]
    b734:	str	x1, [x0, #32]
    b738:	ldr	x0, [sp, #56]
    b73c:	ldr	x1, [sp, #32]
    b740:	str	x1, [x0, #40]
    b744:	mov	w0, #0x0                   	// #0
    b748:	ldp	x29, x30, [sp], #96
    b74c:	ret

000000000000b750 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0>:
    b750:	sub	sp, sp, #0x30
    b754:	str	x0, [sp, #24]
    b758:	str	x1, [sp, #16]
    b75c:	str	x2, [sp, #8]
    b760:	ldr	x0, [sp, #16]
    b764:	ldr	w0, [x0]
    b768:	cmp	w0, #0x1
    b76c:	b.eq	b778 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x28>  // b.none
    b770:	mov	w0, #0x2                   	// #2
    b774:	b	b7d0 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x80>
    b778:	ldr	x0, [sp, #16]
    b77c:	ldr	w0, [x0, #28]
    b780:	and	w0, w0, #0x80
    b784:	cmp	w0, #0x0
    b788:	b.eq	b79c <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x4c>  // b.none
    b78c:	adrp	x0, b000 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb34>
    b790:	add	x0, x0, #0xe40
    b794:	str	x0, [sp, #40]
    b798:	b	b7a8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x58>
    b79c:	adrp	x0, b000 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0xb34>
    b7a0:	add	x0, x0, #0xe60
    b7a4:	str	x0, [sp, #40]
    b7a8:	ldr	x0, [sp, #24]
    b7ac:	ldr	x1, [sp, #40]
    b7b0:	str	x1, [x0]
    b7b4:	ldr	x0, [sp, #24]
    b7b8:	ldr	x1, [sp, #16]
    b7bc:	str	x1, [x0, #8]
    b7c0:	ldr	x0, [sp, #24]
    b7c4:	ldr	x1, [sp, #8]
    b7c8:	str	x1, [x0, #16]
    b7cc:	mov	w0, #0x0                   	// #0
    b7d0:	add	sp, sp, #0x30
    b7d4:	ret
    b7d8:	stp	x29, x30, [sp, #-192]!
    b7dc:	mov	x29, sp
    b7e0:	str	x19, [sp, #16]
    b7e4:	str	x0, [x29, #88]
    b7e8:	str	x1, [x29, #80]
    b7ec:	str	x2, [x29, #72]
    b7f0:	str	x3, [x29, #64]
    b7f4:	str	x4, [x29, #56]
    b7f8:	str	x5, [x29, #48]
    b7fc:	str	x6, [x29, #40]
    b800:	ldr	x0, [x29, #88]
    b804:	ldr	w0, [x0, #4]
    b808:	mov	w0, w0
    b80c:	lsl	x0, x0, #3
    b810:	add	x0, x0, #0xf
    b814:	lsr	x0, x0, #4
    b818:	lsl	x0, x0, #4
    b81c:	sub	sp, sp, x0
    b820:	mov	x0, sp
    b824:	add	x0, x0, #0xf
    b828:	lsr	x0, x0, #4
    b82c:	lsl	x0, x0, #4
    b830:	str	x0, [x29, #176]
    b834:	add	x0, x29, #0x68
    b838:	bl	a9b0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x4e4>
    b83c:	str	wzr, [x29, #188]
    b840:	ldr	x0, [x29, #88]
    b844:	ldr	w0, [x0, #4]
    b848:	str	w0, [x29, #172]
    b84c:	b	baf4 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x3a4>
    b850:	ldr	x0, [x29, #88]
    b854:	ldr	x1, [x0, #8]
    b858:	ldrsw	x0, [x29, #188]
    b85c:	lsl	x0, x0, #3
    b860:	add	x0, x1, x0
    b864:	ldr	x0, [x0]
    b868:	str	x0, [x29, #160]
    b86c:	ldr	x0, [x29, #160]
    b870:	ldrh	w0, [x0, #10]
    b874:	str	w0, [x29, #156]
    b878:	ldr	x0, [x29, #160]
    b87c:	ldr	x0, [x0]
    b880:	str	x0, [x29, #144]
    b884:	ldr	w0, [x29, #156]
    b888:	cmp	w0, #0xf
    b88c:	cset	w1, hi  // hi = pmore
    b890:	and	w1, w1, #0xff
    b894:	cmp	w1, #0x0
    b898:	b.ne	bae4 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x394>  // b.any
    b89c:	mov	x1, #0x1                   	// #1
    b8a0:	lsl	x0, x1, x0
    b8a4:	mov	x1, #0x5fe2                	// #24546
    b8a8:	and	x1, x0, x1
    b8ac:	cmp	x1, #0x0
    b8b0:	cset	w1, ne  // ne = any
    b8b4:	and	w1, w1, #0xff
    b8b8:	cmp	w1, #0x0
    b8bc:	b.ne	b8f8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x1a8>  // b.any
    b8c0:	mov	x1, #0xa01c                	// #40988
    b8c4:	and	x1, x0, x1
    b8c8:	cmp	x1, #0x0
    b8cc:	cset	w1, ne  // ne = any
    b8d0:	and	w1, w1, #0xff
    b8d4:	cmp	w1, #0x0
    b8d8:	b.ne	b928 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x1d8>  // b.any
    b8dc:	and	x0, x0, #0x1
    b8e0:	cmp	x0, #0x0
    b8e4:	cset	w0, ne  // ne = any
    b8e8:	and	w0, w0, #0xff
    b8ec:	cmp	w0, #0x0
    b8f0:	b.eq	bae4 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x394>  // b.none
    b8f4:	b	bae8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x398>
    b8f8:	ldrsw	x0, [x29, #188]
    b8fc:	lsl	x0, x0, #3
    b900:	ldr	x1, [x29, #176]
    b904:	add	x19, x1, x0
    b908:	add	x0, x29, #0x68
    b90c:	ldr	x3, [x29, #144]
    b910:	ldr	x2, [x29, #56]
    b914:	mov	x1, x0
    b918:	ldr	x0, [x29, #64]
    b91c:	bl	ae8c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x9c0>
    b920:	str	x0, [x19]
    b924:	b	bae8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x398>
    b928:	ldr	x0, [x29, #160]
    b92c:	bl	a6bc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x1f0>
    b930:	str	w0, [x29, #140]
    b934:	ldr	w0, [x29, #140]
    b938:	cmp	w0, #0x0
    b93c:	b.eq	b9fc <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x2ac>  // b.none
    b940:	ldr	w0, [x29, #140]
    b944:	and	w0, w0, #0x3
    b948:	mov	w1, #0x4                   	// #4
    b94c:	sub	w0, w1, w0
    b950:	sxtw	x0, w0
    b954:	str	x0, [x29, #128]
    b958:	ldr	w0, [x29, #108]
    b95c:	mov	w1, w0
    b960:	ldr	x0, [x29, #128]
    b964:	add	x0, x1, x0
    b968:	cmp	x0, #0x8
    b96c:	b.hi	b9c0 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x270>  // b.pmore
    b970:	ldr	w0, [x29, #108]
    b974:	mov	w0, w0
    b978:	lsl	x0, x0, #4
    b97c:	ldr	x1, [x29, #64]
    b980:	add	x0, x1, x0
    b984:	str	x0, [x29, #120]
    b988:	ldr	w0, [x29, #108]
    b98c:	ldr	x1, [x29, #128]
    b990:	add	w0, w0, w1
    b994:	str	w0, [x29, #108]
    b998:	ldrsw	x0, [x29, #188]
    b99c:	lsl	x0, x0, #3
    b9a0:	ldr	x1, [x29, #176]
    b9a4:	add	x19, x1, x0
    b9a8:	ldr	w2, [x29, #140]
    b9ac:	ldr	x1, [x29, #120]
    b9b0:	ldr	x0, [x29, #120]
    b9b4:	bl	aca0 <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x7d4>
    b9b8:	str	x0, [x19]
    b9bc:	b	bae8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x398>
    b9c0:	mov	w0, #0x8                   	// #8
    b9c4:	str	w0, [x29, #108]
    b9c8:	ldr	x0, [x29, #160]
    b9cc:	ldrh	w0, [x0, #8]
    b9d0:	and	x2, x0, #0xffff
    b9d4:	ldrsw	x0, [x29, #188]
    b9d8:	lsl	x0, x0, #3
    b9dc:	ldr	x1, [x29, #176]
    b9e0:	add	x19, x1, x0
    b9e4:	add	x0, x29, #0x68
    b9e8:	ldr	x3, [x29, #144]
    b9ec:	ldr	x1, [x29, #56]
    b9f0:	bl	a9dc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x510>
    b9f4:	str	x0, [x19]
    b9f8:	b	bae8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x398>
    b9fc:	ldr	x0, [x29, #144]
    ba00:	cmp	x0, #0x10
    ba04:	b.ls	ba40 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x2f0>  // b.plast
    ba08:	add	x0, x29, #0x68
    ba0c:	mov	x3, #0x8                   	// #8
    ba10:	ldr	x2, [x29, #56]
    ba14:	mov	x1, x0
    ba18:	ldr	x0, [x29, #64]
    ba1c:	bl	ae8c <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x9c0>
    ba20:	mov	x2, x0
    ba24:	ldrsw	x0, [x29, #188]
    ba28:	lsl	x0, x0, #3
    ba2c:	ldr	x1, [x29, #176]
    ba30:	add	x0, x1, x0
    ba34:	ldr	x1, [x2]
    ba38:	str	x1, [x0]
    ba3c:	b	bae8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x398>
    ba40:	ldr	x0, [x29, #144]
    ba44:	add	x0, x0, #0x7
    ba48:	lsr	x0, x0, #3
    ba4c:	str	x0, [x29, #128]
    ba50:	ldr	w0, [x29, #104]
    ba54:	mov	w1, w0
    ba58:	ldr	x0, [x29, #128]
    ba5c:	add	x0, x1, x0
    ba60:	cmp	x0, #0x8
    ba64:	b.hi	baa8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x358>  // b.pmore
    ba68:	ldr	w2, [x29, #104]
    ba6c:	ldrsw	x0, [x29, #188]
    ba70:	lsl	x0, x0, #3
    ba74:	ldr	x1, [x29, #176]
    ba78:	add	x0, x1, x0
    ba7c:	mov	w1, w2
    ba80:	add	x1, x1, #0x10
    ba84:	lsl	x1, x1, #3
    ba88:	ldr	x2, [x29, #64]
    ba8c:	add	x1, x2, x1
    ba90:	str	x1, [x0]
    ba94:	ldr	w0, [x29, #104]
    ba98:	ldr	x1, [x29, #128]
    ba9c:	add	w0, w0, w1
    baa0:	str	w0, [x29, #104]
    baa4:	b	bae8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x398>
    baa8:	mov	w0, #0x8                   	// #8
    baac:	str	w0, [x29, #104]
    bab0:	ldr	x0, [x29, #160]
    bab4:	ldrh	w0, [x0, #8]
    bab8:	and	x2, x0, #0xffff
    babc:	ldrsw	x0, [x29, #188]
    bac0:	lsl	x0, x0, #3
    bac4:	ldr	x1, [x29, #176]
    bac8:	add	x19, x1, x0
    bacc:	add	x0, x29, #0x68
    bad0:	ldr	x3, [x29, #144]
    bad4:	ldr	x1, [x29, #56]
    bad8:	bl	a9dc <ffi_closure_free@@LIBFFI_CLOSURE_7.0+0x510>
    badc:	str	x0, [x19]
    bae0:	b	bae8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x398>
    bae4:	bl	1b90 <abort@plt>
    bae8:	ldr	w0, [x29, #188]
    baec:	add	w0, w0, #0x1
    baf0:	str	w0, [x29, #188]
    baf4:	ldr	w1, [x29, #188]
    baf8:	ldr	w0, [x29, #172]
    bafc:	cmp	w1, w0
    bb00:	b.lt	b850 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x100>  // b.tstop
    bb04:	ldr	x0, [x29, #88]
    bb08:	ldr	w0, [x0, #28]
    bb0c:	str	w0, [x29, #168]
    bb10:	ldr	w0, [x29, #168]
    bb14:	and	w0, w0, #0x20
    bb18:	cmp	w0, #0x0
    bb1c:	b.eq	bb28 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x3d8>  // b.none
    bb20:	ldr	x0, [x29, #40]
    bb24:	str	x0, [x29, #48]
    bb28:	ldr	x4, [x29, #80]
    bb2c:	ldr	x3, [x29, #72]
    bb30:	ldr	x2, [x29, #176]
    bb34:	ldr	x1, [x29, #48]
    bb38:	ldr	x0, [x29, #88]
    bb3c:	blr	x4
    bb40:	ldr	w0, [x29, #168]
    bb44:	mov	sp, x29
    bb48:	ldr	x19, [sp, #16]
    bb4c:	ldp	x29, x30, [sp], #192
    bb50:	ret
    bb54:	nop
    bb58:	nop
    bb5c:	nop
    bb60:	stp	x29, x30, [x1]
    bb64:	mov	x29, x1
    bb68:	mov	sp, x0
    bb6c:	mov	x9, x2
    bb70:	mov	x8, x3
    bb74:	mov	x18, x5
    bb78:	stp	x3, x4, [x29, #16]
    bb7c:	tbz	w4, #7, bb90 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x440>
    bb80:	ldp	q0, q1, [sp]
    bb84:	ldp	q2, q3, [sp, #32]
    bb88:	ldp	q4, q5, [sp, #64]
    bb8c:	ldp	q6, q7, [sp, #96]
    bb90:	ldp	x0, x1, [sp, #128]
    bb94:	ldp	x2, x3, [sp, #144]
    bb98:	ldp	x4, x5, [sp, #160]
    bb9c:	ldp	x6, x7, [sp, #176]
    bba0:	add	sp, sp, #0xc0
    bba4:	blr	x9
    bba8:	ldp	x3, x4, [x29, #16]
    bbac:	mov	sp, x29
    bbb0:	ldp	x29, x30, [x29]
    bbb4:	adr	x5, bbd0 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x480>
    bbb8:	and	w4, w4, #0x1f
    bbbc:	add	x5, x5, x4, lsl #3
    bbc0:	br	x5
    bbc4:	nop
    bbc8:	nop
    bbcc:	nop
    bbd0:	ret
    bbd4:	nop
    bbd8:	str	x0, [x3]
    bbdc:	ret
    bbe0:	stp	x0, x1, [x3]
    bbe4:	ret
    bbe8:	brk	#0x3e8
    bbec:	ret
    bbf0:	brk	#0x3e8
    bbf4:	ret
    bbf8:	brk	#0x3e8
    bbfc:	ret
    bc00:	brk	#0x3e8
    bc04:	ret
    bc08:	brk	#0x3e8
    bc0c:	ret
    bc10:	st4	{v0.s-v3.s}[0], [x3]
    bc14:	ret
    bc18:	st3	{v0.s-v2.s}[0], [x3]
    bc1c:	ret
    bc20:	stp	s0, s1, [x3]
    bc24:	ret
    bc28:	str	s0, [x3]
    bc2c:	ret
    bc30:	st4	{v0.d-v3.d}[0], [x3]
    bc34:	ret
    bc38:	st3	{v0.d-v2.d}[0], [x3]
    bc3c:	ret
    bc40:	stp	d0, d1, [x3]
    bc44:	ret
    bc48:	str	d0, [x3]
    bc4c:	ret
    bc50:	str	q3, [x3, #48]
    bc54:	nop
    bc58:	str	q2, [x3, #32]
    bc5c:	nop
    bc60:	stp	q0, q1, [x3]
    bc64:	ret
    bc68:	str	q0, [x3]
    bc6c:	ret
    bc70:	uxtb	w0, w0
    bc74:	str	x0, [x3]
    bc78:	ret
    bc7c:	nop
    bc80:	uxth	w0, w0
    bc84:	str	x0, [x3]
    bc88:	ret
    bc8c:	nop
    bc90:	mov	w0, w0
    bc94:	str	x0, [x3]
    bc98:	ret
    bc9c:	nop
    bca0:	sxtb	x0, w0
    bca4:	str	x0, [x3]
    bca8:	ret
    bcac:	nop
    bcb0:	sxth	x0, w0
    bcb4:	str	x0, [x3]
    bcb8:	ret
    bcbc:	nop
    bcc0:	sxtw	x0, w0
    bcc4:	str	x0, [x3]
    bcc8:	ret
    bccc:	nop
    bcd0:	stp	x29, x30, [sp, #-272]!
    bcd4:	stp	q0, q1, [sp, #16]
    bcd8:	stp	q2, q3, [sp, #48]
    bcdc:	stp	q4, q5, [sp, #80]
    bce0:	stp	q6, q7, [sp, #112]
    bce4:	b	bcf4 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x5a4>
    bce8:	nop
    bcec:	nop
    bcf0:	stp	x29, x30, [sp, #-272]!
    bcf4:	mov	x29, sp
    bcf8:	stp	x0, x1, [sp, #144]
    bcfc:	stp	x2, x3, [sp, #160]
    bd00:	stp	x4, x5, [sp, #176]
    bd04:	stp	x6, x7, [sp, #192]
    bd08:	ldp	x0, x1, [x17, #24]
    bd0c:	ldr	x2, [x17, #40]
    bd10:	add	x3, sp, #0x10
    bd14:	add	x4, sp, #0x110
    bd18:	add	x5, sp, #0xd0
    bd1c:	mov	x6, x8
    bd20:	bl	b7d8 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x88>
    bd24:	adr	x1, bd40 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x5f0>
    bd28:	and	w0, w0, #0x1f
    bd2c:	add	x1, x1, x0, lsl #3
    bd30:	add	x3, sp, #0xd0
    bd34:	br	x1
    bd38:	nop
    bd3c:	nop
    bd40:	b	be38 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x6e8>
    bd44:	nop
    bd48:	ldr	x0, [x3]
    bd4c:	b	be38 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x6e8>
    bd50:	ldp	x0, x1, [x3]
    bd54:	b	be38 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x6e8>
    bd58:	brk	#0x3e8
    bd5c:	nop
    bd60:	brk	#0x3e8
    bd64:	nop
    bd68:	brk	#0x3e8
    bd6c:	nop
    bd70:	brk	#0x3e8
    bd74:	nop
    bd78:	brk	#0x3e8
    bd7c:	nop
    bd80:	ldr	s3, [x3, #12]
    bd84:	nop
    bd88:	ldr	s2, [x3, #8]
    bd8c:	nop
    bd90:	ldp	s0, s1, [x3]
    bd94:	b	be38 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x6e8>
    bd98:	ldr	s0, [x3]
    bd9c:	b	be38 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x6e8>
    bda0:	ldr	d3, [x3, #24]
    bda4:	nop
    bda8:	ldr	d2, [x3, #16]
    bdac:	nop
    bdb0:	ldp	d0, d1, [x3]
    bdb4:	b	be38 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x6e8>
    bdb8:	ldr	d0, [x3]
    bdbc:	b	be38 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x6e8>
    bdc0:	ldr	q3, [x3, #48]
    bdc4:	nop
    bdc8:	ldr	q2, [x3, #32]
    bdcc:	nop
    bdd0:	ldp	q0, q1, [x3]
    bdd4:	b	be38 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x6e8>
    bdd8:	ldr	q0, [x3]
    bddc:	b	be38 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x6e8>
    bde0:	ldrb	w0, [x3]
    bde4:	b	be38 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x6e8>
    bde8:	brk	#0x3e8
    bdec:	nop
    bdf0:	ldrh	w0, [x3]
    bdf4:	b	be38 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x6e8>
    bdf8:	brk	#0x3e8
    bdfc:	nop
    be00:	ldr	w0, [x3]
    be04:	b	be38 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x6e8>
    be08:	brk	#0x3e8
    be0c:	nop
    be10:	ldrsb	x0, [x3]
    be14:	b	be38 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x6e8>
    be18:	brk	#0x3e8
    be1c:	nop
    be20:	ldrsh	x0, [x3]
    be24:	b	be38 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x6e8>
    be28:	brk	#0x3e8
    be2c:	nop
    be30:	ldrsw	x0, [x3]
    be34:	nop
    be38:	ldp	x29, x30, [sp], #272
    be3c:	ret
    be40:	stp	x29, x30, [sp, #-272]!
    be44:	stp	q0, q1, [sp, #16]
    be48:	stp	q2, q3, [sp, #48]
    be4c:	stp	q4, q5, [sp, #80]
    be50:	stp	q6, q7, [sp, #112]
    be54:	b	be64 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x714>
    be58:	nop
    be5c:	nop
    be60:	stp	x29, x30, [sp, #-272]!
    be64:	mov	x29, sp
    be68:	stp	x0, x1, [sp, #144]
    be6c:	stp	x2, x3, [sp, #160]
    be70:	stp	x4, x5, [sp, #176]
    be74:	stp	x6, x7, [sp, #192]
    be78:	ldp	x0, x1, [x18, #8]
    be7c:	mov	x2, x18
    be80:	b	bd10 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x5c0>
    be84:	stp	x29, x30, [sp, #-32]!
    be88:	mov	x29, sp
    be8c:	str	x0, [sp, #24]
    be90:	str	x1, [sp, #16]
    be94:	ldr	x1, [sp, #16]
    be98:	ldr	x0, [sp, #24]
    be9c:	bl	beac <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x75c>
    bea0:	nop
    bea4:	ldp	x29, x30, [sp], #32
    bea8:	ret
    beac:	sub	sp, sp, #0x20
    beb0:	str	x0, [sp, #8]
    beb4:	str	x1, [sp]
    beb8:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    bebc:	add	x0, x0, #0x6c0
    bec0:	ldr	w0, [x0]
    bec4:	cmp	w0, #0x0
    bec8:	b.ne	bedc <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x78c>  // b.any
    becc:	mrs	x1, ctr_el0
    bed0:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    bed4:	add	x0, x0, #0x6c0
    bed8:	str	w1, [x0]
    bedc:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    bee0:	add	x0, x0, #0x6c0
    bee4:	ldr	w0, [x0]
    bee8:	and	w0, w0, #0xf
    beec:	mov	w1, #0x4                   	// #4
    bef0:	lsl	w0, w1, w0
    bef4:	str	w0, [sp, #20]
    bef8:	adrp	x0, 1e000 <memcpy@GLIBC_2.17>
    befc:	add	x0, x0, #0x6c0
    bf00:	ldr	w0, [x0]
    bf04:	lsr	w0, w0, #16
    bf08:	and	w0, w0, #0xf
    bf0c:	mov	w1, #0x4                   	// #4
    bf10:	lsl	w0, w1, w0
    bf14:	str	w0, [sp, #16]
    bf18:	ldr	w0, [sp, #16]
    bf1c:	sub	w0, w0, #0x1
    bf20:	mov	w0, w0
    bf24:	mvn	x1, x0
    bf28:	ldr	x0, [sp, #8]
    bf2c:	and	x0, x1, x0
    bf30:	str	x0, [sp, #24]
    bf34:	b	bf50 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x800>
    bf38:	ldr	x0, [sp, #24]
    bf3c:	dc	cvau, x0
    bf40:	ldr	w0, [sp, #16]
    bf44:	ldr	x1, [sp, #24]
    bf48:	add	x0, x1, x0
    bf4c:	str	x0, [sp, #24]
    bf50:	ldr	x1, [sp, #24]
    bf54:	ldr	x0, [sp]
    bf58:	cmp	x1, x0
    bf5c:	b.cc	bf38 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x7e8>  // b.lo, b.ul, b.last
    bf60:	dsb	ish
    bf64:	ldr	w0, [sp, #20]
    bf68:	sub	w0, w0, #0x1
    bf6c:	mov	w0, w0
    bf70:	mvn	x1, x0
    bf74:	ldr	x0, [sp, #8]
    bf78:	and	x0, x1, x0
    bf7c:	str	x0, [sp, #24]
    bf80:	b	bf9c <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x84c>
    bf84:	ldr	x0, [sp, #24]
    bf88:	ic	ivau, x0
    bf8c:	ldr	w0, [sp, #20]
    bf90:	ldr	x1, [sp, #24]
    bf94:	add	x0, x1, x0
    bf98:	str	x0, [sp, #24]
    bf9c:	ldr	x1, [sp, #24]
    bfa0:	ldr	x0, [sp]
    bfa4:	cmp	x1, x0
    bfa8:	b.cc	bf84 <ffi_prep_go_closure@@LIBFFI_GO_CLOSURE_7.0+0x834>  // b.lo, b.ul, b.last
    bfac:	dsb	ish
    bfb0:	isb
    bfb4:	nop
    bfb8:	add	sp, sp, #0x20
    bfbc:	ret

Disassembly of section .fini:

000000000000bfc0 <.fini>:
    bfc0:	stp	x29, x30, [sp, #-16]!
    bfc4:	mov	x29, sp
    bfc8:	ldp	x29, x30, [sp], #16
    bfcc:	ret
