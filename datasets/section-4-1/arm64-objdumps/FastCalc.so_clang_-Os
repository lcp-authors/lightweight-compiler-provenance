
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//FastCalc.so_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000c08 <.init>:
 c08:	stp	x29, x30, [sp, #-16]!
 c0c:	mov	x29, sp
 c10:	bl	e00 <Perl_av_extend@plt+0x10>
 c14:	ldp	x29, x30, [sp], #16
 c18:	ret

Disassembly of section .plt:

0000000000000c20 <Perl_sv_2iv_flags@plt-0x20>:
 c20:	stp	x16, x30, [sp, #-16]!
 c24:	adrp	x16, 12000 <boot_Math__BigInt__FastCalc@@Base+0x1112c>
 c28:	ldr	x17, [x16, #4088]
 c2c:	add	x16, x16, #0xff8
 c30:	br	x17
 c34:	nop
 c38:	nop
 c3c:	nop

0000000000000c40 <Perl_sv_2iv_flags@plt>:
 c40:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 c44:	ldr	x17, [x16]
 c48:	add	x16, x16, #0x0
 c4c:	br	x17

0000000000000c50 <Perl_sv_setnv@plt>:
 c50:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 c54:	ldr	x17, [x16, #8]
 c58:	add	x16, x16, #0x8
 c5c:	br	x17

0000000000000c60 <Perl_newRV_noinc@plt>:
 c60:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 c64:	ldr	x17, [x16, #16]
 c68:	add	x16, x16, #0x10
 c6c:	br	x17

0000000000000c70 <Perl_sv_2uv_flags@plt>:
 c70:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 c74:	ldr	x17, [x16, #24]
 c78:	add	x16, x16, #0x18
 c7c:	br	x17

0000000000000c80 <__cxa_finalize@plt>:
 c80:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 c84:	ldr	x17, [x16, #32]
 c88:	add	x16, x16, #0x20
 c8c:	br	x17

0000000000000c90 <Perl_av_len@plt>:
 c90:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 c94:	ldr	x17, [x16, #40]
 c98:	add	x16, x16, #0x28
 c9c:	br	x17

0000000000000ca0 <Perl_av_store@plt>:
 ca0:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 ca4:	ldr	x17, [x16, #48]
 ca8:	add	x16, x16, #0x30
 cac:	br	x17

0000000000000cb0 <Perl_newSVnv@plt>:
 cb0:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 cb4:	ldr	x17, [x16, #56]
 cb8:	add	x16, x16, #0x38
 cbc:	br	x17

0000000000000cc0 <Perl_sv_2pv_flags@plt>:
 cc0:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 cc4:	ldr	x17, [x16, #64]
 cc8:	add	x16, x16, #0x40
 ccc:	br	x17

0000000000000cd0 <Perl_xs_boot_epilog@plt>:
 cd0:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 cd4:	ldr	x17, [x16, #72]
 cd8:	add	x16, x16, #0x48
 cdc:	br	x17

0000000000000ce0 <__stack_chk_fail@plt>:
 ce0:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 ce4:	ldr	x17, [x16, #80]
 ce8:	add	x16, x16, #0x50
 cec:	br	x17

0000000000000cf0 <__gmon_start__@plt>:
 cf0:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 cf4:	ldr	x17, [x16, #88]
 cf8:	add	x16, x16, #0x58
 cfc:	br	x17

0000000000000d00 <Perl_croak_xs_usage@plt>:
 d00:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 d04:	ldr	x17, [x16, #96]
 d08:	add	x16, x16, #0x60
 d0c:	br	x17

0000000000000d10 <Perl_sv_2nv_flags@plt>:
 d10:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 d14:	ldr	x17, [x16, #104]
 d18:	add	x16, x16, #0x68
 d1c:	br	x17

0000000000000d20 <Perl_av_push@plt>:
 d20:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 d24:	ldr	x17, [x16, #112]
 d28:	add	x16, x16, #0x70
 d2c:	br	x17

0000000000000d30 <Perl_av_pop@plt>:
 d30:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 d34:	ldr	x17, [x16, #120]
 d38:	add	x16, x16, #0x78
 d3c:	br	x17

0000000000000d40 <Perl_croak_nocontext@plt>:
 d40:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 d44:	ldr	x17, [x16, #128]
 d48:	add	x16, x16, #0x80
 d4c:	br	x17

0000000000000d50 <Perl_newXS_deffile@plt>:
 d50:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 d54:	ldr	x17, [x16, #136]
 d58:	add	x16, x16, #0x88
 d5c:	br	x17

0000000000000d60 <Perl_sv_2mortal@plt>:
 d60:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 d64:	ldr	x17, [x16, #144]
 d68:	add	x16, x16, #0x90
 d6c:	br	x17

0000000000000d70 <Perl_newSVuv@plt>:
 d70:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 d74:	ldr	x17, [x16, #152]
 d78:	add	x16, x16, #0x98
 d7c:	br	x17

0000000000000d80 <Perl_xs_handshake@plt>:
 d80:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 d84:	ldr	x17, [x16, #160]
 d88:	add	x16, x16, #0xa0
 d8c:	br	x17

0000000000000d90 <Perl_av_fetch@plt>:
 d90:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 d94:	ldr	x17, [x16, #168]
 d98:	add	x16, x16, #0xa8
 d9c:	br	x17

0000000000000da0 <Perl_newRV@plt>:
 da0:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 da4:	ldr	x17, [x16, #176]
 da8:	add	x16, x16, #0xb0
 dac:	br	x17

0000000000000db0 <Perl_newSV_type@plt>:
 db0:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 db4:	ldr	x17, [x16, #184]
 db8:	add	x16, x16, #0xb8
 dbc:	br	x17

0000000000000dc0 <Perl_newSViv@plt>:
 dc0:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 dc4:	ldr	x17, [x16, #192]
 dc8:	add	x16, x16, #0xc0
 dcc:	br	x17

0000000000000dd0 <Perl_sv_setiv@plt>:
 dd0:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 dd4:	ldr	x17, [x16, #200]
 dd8:	add	x16, x16, #0xc8
 ddc:	br	x17

0000000000000de0 <Perl_newSVpvn@plt>:
 de0:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 de4:	ldr	x17, [x16, #208]
 de8:	add	x16, x16, #0xd0
 dec:	br	x17

0000000000000df0 <Perl_av_extend@plt>:
 df0:	adrp	x16, 13000 <Perl_sv_2iv_flags>
 df4:	ldr	x17, [x16, #216]
 df8:	add	x16, x16, #0xd8
 dfc:	br	x17

Disassembly of section .text:

0000000000000e00 <boot_Math__BigInt__FastCalc@@Base-0xd4>:
     e00:	adrp	x0, 12000 <boot_Math__BigInt__FastCalc@@Base+0x1112c>
     e04:	ldr	x0, [x0, #4048]
     e08:	cbz	x0, e10 <Perl_av_extend@plt+0x20>
     e0c:	b	cf0 <__gmon_start__@plt>
     e10:	ret
     e14:	nop
     e18:	adrp	x0, 13000 <boot_Math__BigInt__FastCalc@@Base+0x1212c>
     e1c:	add	x0, x0, #0xe8
     e20:	adrp	x1, 13000 <boot_Math__BigInt__FastCalc@@Base+0x1212c>
     e24:	add	x1, x1, #0xe8
     e28:	cmp	x1, x0
     e2c:	b.eq	e44 <Perl_av_extend@plt+0x54>  // b.none
     e30:	adrp	x1, 12000 <boot_Math__BigInt__FastCalc@@Base+0x1112c>
     e34:	ldr	x1, [x1, #4032]
     e38:	cbz	x1, e44 <Perl_av_extend@plt+0x54>
     e3c:	mov	x16, x1
     e40:	br	x16
     e44:	ret
     e48:	adrp	x0, 13000 <boot_Math__BigInt__FastCalc@@Base+0x1212c>
     e4c:	add	x0, x0, #0xe8
     e50:	adrp	x1, 13000 <boot_Math__BigInt__FastCalc@@Base+0x1212c>
     e54:	add	x1, x1, #0xe8
     e58:	sub	x1, x1, x0
     e5c:	lsr	x2, x1, #63
     e60:	add	x1, x2, x1, asr #3
     e64:	cmp	xzr, x1, asr #1
     e68:	asr	x1, x1, #1
     e6c:	b.eq	e84 <Perl_av_extend@plt+0x94>  // b.none
     e70:	adrp	x2, 12000 <boot_Math__BigInt__FastCalc@@Base+0x1112c>
     e74:	ldr	x2, [x2, #4064]
     e78:	cbz	x2, e84 <Perl_av_extend@plt+0x94>
     e7c:	mov	x16, x2
     e80:	br	x16
     e84:	ret
     e88:	stp	x29, x30, [sp, #-32]!
     e8c:	mov	x29, sp
     e90:	str	x19, [sp, #16]
     e94:	adrp	x19, 13000 <boot_Math__BigInt__FastCalc@@Base+0x1212c>
     e98:	ldrb	w0, [x19, #232]
     e9c:	cbnz	w0, ec4 <Perl_av_extend@plt+0xd4>
     ea0:	adrp	x0, 12000 <boot_Math__BigInt__FastCalc@@Base+0x1112c>
     ea4:	ldr	x0, [x0, #4040]
     ea8:	cbz	x0, eb8 <Perl_av_extend@plt+0xc8>
     eac:	adrp	x0, 13000 <boot_Math__BigInt__FastCalc@@Base+0x1212c>
     eb0:	ldr	x0, [x0, #224]
     eb4:	bl	c80 <__cxa_finalize@plt>
     eb8:	bl	e18 <Perl_av_extend@plt+0x28>
     ebc:	mov	w0, #0x1                   	// #1
     ec0:	strb	w0, [x19, #232]
     ec4:	ldr	x19, [sp, #16]
     ec8:	ldp	x29, x30, [sp], #32
     ecc:	ret
     ed0:	b	e48 <Perl_av_extend@plt+0x58>

0000000000000ed4 <boot_Math__BigInt__FastCalc@@Base>:
     ed4:	stp	x29, x30, [sp, #-80]!
     ed8:	stp	x20, x19, [sp, #64]
     edc:	mov	x19, x0
     ee0:	adrp	x2, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
     ee4:	adrp	x3, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
     ee8:	adrp	x4, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
     eec:	mov	w0, #0x6e7                 	// #1767
     ef0:	add	x2, x2, #0x128
     ef4:	add	x3, x3, #0x133
     ef8:	add	x4, x4, #0x13b
     efc:	movk	w0, #0xd30, lsl #16
     f00:	mov	x1, x19
     f04:	str	x25, [sp, #16]
     f08:	stp	x24, x23, [sp, #32]
     f0c:	stp	x22, x21, [sp, #48]
     f10:	mov	x29, sp
     f14:	bl	d80 <Perl_xs_handshake@plt>
     f18:	ldr	x8, [x19, #24]
     f1c:	ldr	x9, [x19]
     f20:	adrp	x1, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
     f24:	adrp	x2, 1000 <boot_Math__BigInt__FastCalc@@Base+0x12c>
     f28:	add	x8, x8, w0, sxtw #3
     f2c:	mov	w20, w0
     f30:	sub	x8, x9, x8
     f34:	add	x1, x1, #0x142
     f38:	add	x2, x2, #0x1d4
     f3c:	mov	x0, x19
     f40:	lsr	x22, x8, #3
     f44:	bl	d50 <Perl_newXS_deffile@plt>
     f48:	adrp	x1, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
     f4c:	adrp	x2, 1000 <boot_Math__BigInt__FastCalc@@Base+0x12c>
     f50:	add	x1, x1, #0x15f
     f54:	add	x2, x2, #0x3f0
     f58:	mov	x0, x19
     f5c:	bl	d50 <Perl_newXS_deffile@plt>
     f60:	adrp	x1, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
     f64:	adrp	x2, 1000 <boot_Math__BigInt__FastCalc@@Base+0x12c>
     f68:	add	x1, x1, #0x17d
     f6c:	add	x2, x2, #0x568
     f70:	mov	x0, x19
     f74:	bl	d50 <Perl_newXS_deffile@plt>
     f78:	adrp	x1, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
     f7c:	adrp	x2, 1000 <boot_Math__BigInt__FastCalc@@Base+0x12c>
     f80:	add	x1, x1, #0x1a3
     f84:	add	x2, x2, #0x6bc
     f88:	mov	x0, x19
     f8c:	bl	d50 <Perl_newXS_deffile@plt>
     f90:	adrp	x1, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
     f94:	adrp	x2, 1000 <boot_Math__BigInt__FastCalc@@Base+0x12c>
     f98:	add	x1, x1, #0x1c0
     f9c:	add	x2, x2, #0x894
     fa0:	mov	x0, x19
     fa4:	bl	d50 <Perl_newXS_deffile@plt>
     fa8:	adrp	x21, 1000 <boot_Math__BigInt__FastCalc@@Base+0x12c>
     fac:	adrp	x1, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
     fb0:	add	x21, x21, #0xa70
     fb4:	add	x1, x1, #0x1dd
     fb8:	mov	x0, x19
     fbc:	mov	x2, x21
     fc0:	bl	d50 <Perl_newXS_deffile@plt>
     fc4:	ldr	x8, [x0]
     fc8:	adrp	x1, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
     fcc:	mov	w23, #0x1                   	// #1
     fd0:	add	x1, x1, #0x1fa
     fd4:	mov	x0, x19
     fd8:	mov	x2, x21
     fdc:	str	w23, [x8, #40]
     fe0:	bl	d50 <Perl_newXS_deffile@plt>
     fe4:	ldr	x8, [x0]
     fe8:	adrp	x1, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
     fec:	mov	w24, #0xa                   	// #10
     ff0:	add	x1, x1, #0x217
     ff4:	mov	x0, x19
     ff8:	mov	x2, x21
     ffc:	str	w24, [x8, #40]
    1000:	bl	d50 <Perl_newXS_deffile@plt>
    1004:	ldr	x8, [x0]
    1008:	adrp	x1, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
    100c:	mov	w25, #0x2                   	// #2
    1010:	add	x1, x1, #0x234
    1014:	mov	x0, x19
    1018:	mov	x2, x21
    101c:	str	w25, [x8, #40]
    1020:	bl	d50 <Perl_newXS_deffile@plt>
    1024:	ldr	x8, [x0]
    1028:	adrp	x21, 1000 <boot_Math__BigInt__FastCalc@@Base+0x12c>
    102c:	adrp	x1, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
    1030:	add	x21, x21, #0xb38
    1034:	add	x1, x1, #0x252
    1038:	mov	x0, x19
    103c:	mov	x2, x21
    1040:	str	wzr, [x8, #40]
    1044:	bl	d50 <Perl_newXS_deffile@plt>
    1048:	ldr	x8, [x0]
    104c:	adrp	x1, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
    1050:	add	x1, x1, #0x273
    1054:	mov	x0, x19
    1058:	mov	x2, x21
    105c:	str	wzr, [x8, #40]
    1060:	bl	d50 <Perl_newXS_deffile@plt>
    1064:	ldr	x8, [x0]
    1068:	adrp	x21, 1000 <boot_Math__BigInt__FastCalc@@Base+0x12c>
    106c:	adrp	x1, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
    1070:	add	x21, x21, #0xc24
    1074:	add	x1, x1, #0x293
    1078:	mov	x0, x19
    107c:	mov	x2, x21
    1080:	str	w23, [x8, #40]
    1084:	bl	d50 <Perl_newXS_deffile@plt>
    1088:	ldr	x8, [x0]
    108c:	adrp	x1, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
    1090:	add	x1, x1, #0x2b3
    1094:	mov	x0, x19
    1098:	mov	x2, x21
    109c:	str	w23, [x8, #40]
    10a0:	bl	d50 <Perl_newXS_deffile@plt>
    10a4:	ldr	x8, [x0]
    10a8:	adrp	x1, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
    10ac:	add	x1, x1, #0x2d3
    10b0:	mov	x0, x19
    10b4:	mov	x2, x21
    10b8:	str	w24, [x8, #40]
    10bc:	bl	d50 <Perl_newXS_deffile@plt>
    10c0:	ldr	x8, [x0]
    10c4:	adrp	x1, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
    10c8:	add	x1, x1, #0x2f3
    10cc:	mov	x0, x19
    10d0:	mov	x2, x21
    10d4:	str	w25, [x8, #40]
    10d8:	bl	d50 <Perl_newXS_deffile@plt>
    10dc:	ldr	x8, [x0]
    10e0:	adrp	x1, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
    10e4:	adrp	x2, 1000 <boot_Math__BigInt__FastCalc@@Base+0x12c>
    10e8:	add	x1, x1, #0x314
    10ec:	add	x2, x2, #0xd30
    10f0:	mov	x0, x19
    10f4:	str	wzr, [x8, #40]
    10f8:	bl	d50 <Perl_newXS_deffile@plt>
    10fc:	adrp	x1, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
    1100:	adrp	x2, 1000 <boot_Math__BigInt__FastCalc@@Base+0x12c>
    1104:	add	x1, x1, #0x331
    1108:	add	x2, x2, #0xe74
    110c:	mov	x0, x19
    1110:	bl	d50 <Perl_newXS_deffile@plt>
    1114:	cmp	w22, #0x3
    1118:	b.le	11c8 <boot_Math__BigInt__FastCalc@@Base+0x2f4>
    111c:	ldr	x8, [x19, #24]
    1120:	sxtw	x20, w20
    1124:	mov	w21, #0x100                 	// #256
    1128:	movk	w21, #0x20, lsl #16
    112c:	add	x9, x8, x20, lsl #3
    1130:	ldr	x1, [x9, #16]
    1134:	ldr	w9, [x1, #12]
    1138:	and	w9, w9, w21
    113c:	cmp	w9, #0x100
    1140:	b.ne	1150 <boot_Math__BigInt__FastCalc@@Base+0x27c>  // b.any
    1144:	ldr	x9, [x1]
    1148:	ldr	x0, [x9, #32]
    114c:	b	1160 <boot_Math__BigInt__FastCalc@@Base+0x28c>
    1150:	mov	w2, #0x2                   	// #2
    1154:	mov	x0, x19
    1158:	bl	c40 <Perl_sv_2iv_flags@plt>
    115c:	ldr	x8, [x19, #24]
    1160:	scvtf	d0, x0
    1164:	adrp	x9, 13000 <boot_Math__BigInt__FastCalc@@Base+0x1212c>
    1168:	str	d0, [x9, #240]
    116c:	add	x8, x8, x20, lsl #3
    1170:	ldr	x1, [x8, #24]
    1174:	add	w9, w21, #0x100
    1178:	ldr	w8, [x1, #12]
    117c:	and	w8, w8, w9
    1180:	cmp	w8, #0x200
    1184:	b.ne	1194 <boot_Math__BigInt__FastCalc@@Base+0x2c0>  // b.any
    1188:	ldr	x8, [x1]
    118c:	ldr	d0, [x8, #40]
    1190:	b	11a0 <boot_Math__BigInt__FastCalc@@Base+0x2cc>
    1194:	mov	w2, #0x2                   	// #2
    1198:	mov	x0, x19
    119c:	bl	d10 <Perl_sv_2nv_flags@plt>
    11a0:	adrp	x8, 13000 <boot_Math__BigInt__FastCalc@@Base+0x1212c>
    11a4:	str	d0, [x8, #248]
    11a8:	mov	x0, x19
    11ac:	mov	w1, w20
    11b0:	ldp	x20, x19, [sp, #64]
    11b4:	ldp	x22, x21, [sp, #48]
    11b8:	ldp	x24, x23, [sp, #32]
    11bc:	ldr	x25, [sp, #16]
    11c0:	ldp	x29, x30, [sp], #80
    11c4:	b	cd0 <Perl_xs_boot_epilog@plt>
    11c8:	adrp	x0, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
    11cc:	add	x0, x0, #0x34f
    11d0:	bl	d40 <Perl_croak_nocontext@plt>
    11d4:	sub	sp, sp, #0x50
    11d8:	stp	x29, x30, [sp, #16]
    11dc:	str	x23, [sp, #32]
    11e0:	stp	x22, x21, [sp, #48]
    11e4:	stp	x20, x19, [sp, #64]
    11e8:	adrp	x8, 12000 <boot_Math__BigInt__FastCalc@@Base+0x1112c>
    11ec:	ldr	x8, [x8, #4056]
    11f0:	add	x29, sp, #0x10
    11f4:	ldr	x8, [x8]
    11f8:	str	x8, [sp, #8]
    11fc:	ldr	x8, [x0, #120]
    1200:	ldr	x10, [x0]
    1204:	sub	x9, x8, #0x4
    1208:	str	x9, [x0, #120]
    120c:	ldr	w8, [x8]
    1210:	ldr	x9, [x0, #24]
    1214:	add	x11, x9, x8, lsl #3
    1218:	sub	x10, x10, x11
    121c:	and	x10, x10, #0x7fffffff8
    1220:	cmp	x10, #0x10
    1224:	b.ne	13dc <boot_Math__BigInt__FastCalc@@Base+0x508>  // b.any
    1228:	add	w10, w8, #0x2
    122c:	ldr	x21, [x9, w10, sxtw #3]
    1230:	mov	w23, #0x100                 	// #256
    1234:	mov	w1, #0xb                   	// #11
    1238:	mov	x19, x0
    123c:	add	w22, w8, #0x1
    1240:	movk	w23, #0x8000, lsl #16
    1244:	bl	db0 <Perl_newSV_type@plt>
    1248:	ldr	w8, [x21, #12]
    124c:	mov	x20, x0
    1250:	bics	wzr, w23, w8
    1254:	b.ne	12b8 <boot_Math__BigInt__FastCalc@@Base+0x3e4>  // b.any
    1258:	add	w9, w23, #0x200, lsl #12
    125c:	and	w8, w8, w9
    1260:	cmp	w8, w23
    1264:	b.ne	1274 <boot_Math__BigInt__FastCalc@@Base+0x3a0>  // b.any
    1268:	ldr	x8, [x21]
    126c:	ldr	x0, [x8, #32]
    1270:	b	1284 <boot_Math__BigInt__FastCalc@@Base+0x3b0>
    1274:	mov	w2, #0x2                   	// #2
    1278:	mov	x0, x19
    127c:	mov	x1, x21
    1280:	bl	c70 <Perl_sv_2uv_flags@plt>
    1284:	adrp	x8, 13000 <boot_Math__BigInt__FastCalc@@Base+0x1212c>
    1288:	ldr	d0, [x8, #248]
    128c:	ldr	w8, [x21, #12]
    1290:	ucvtf	d1, x0
    1294:	fcmp	d0, d1
    1298:	b.le	12b8 <boot_Math__BigInt__FastCalc@@Base+0x3e4>
    129c:	add	w9, w23, #0x200, lsl #12
    12a0:	and	w8, w8, w9
    12a4:	cmp	w8, w23
    12a8:	b.ne	1350 <boot_Math__BigInt__FastCalc@@Base+0x47c>  // b.any
    12ac:	ldr	x8, [x21]
    12b0:	ldr	x1, [x8, #32]
    12b4:	b	1364 <boot_Math__BigInt__FastCalc@@Base+0x490>
    12b8:	mov	w9, #0x400                 	// #1024
    12bc:	movk	w9, #0x20, lsl #16
    12c0:	and	w8, w8, w9
    12c4:	cmp	w8, #0x400
    12c8:	b.ne	12e4 <boot_Math__BigInt__FastCalc@@Base+0x410>  // b.any
    12cc:	ldr	x8, [x21]
    12d0:	ldr	x8, [x8, #16]
    12d4:	str	x8, [sp]
    12d8:	ldr	x0, [x21, #16]
    12dc:	cbnz	x8, 1300 <boot_Math__BigInt__FastCalc@@Base+0x42c>
    12e0:	b	137c <boot_Math__BigInt__FastCalc@@Base+0x4a8>
    12e4:	mov	x2, sp
    12e8:	mov	w3, #0x2                   	// #2
    12ec:	mov	x0, x19
    12f0:	mov	x1, x21
    12f4:	bl	cc0 <Perl_sv_2pv_flags@plt>
    12f8:	ldr	x8, [sp]
    12fc:	cbz	x8, 137c <boot_Math__BigInt__FastCalc@@Base+0x4a8>
    1300:	add	x21, x0, x8
    1304:	adrp	x23, 13000 <boot_Math__BigInt__FastCalc@@Base+0x1212c>
    1308:	ldr	d0, [x23, #240]
    130c:	fcvtzu	x9, d0
    1310:	cmp	x8, x9
    1314:	csel	x2, x8, x9, cc  // cc = lo, ul, last
    1318:	sub	x21, x21, x2
    131c:	sub	x8, x8, x2
    1320:	str	x8, [sp]
    1324:	cbz	x2, 1348 <boot_Math__BigInt__FastCalc@@Base+0x474>
    1328:	mov	x0, x19
    132c:	mov	x1, x21
    1330:	bl	de0 <Perl_newSVpvn@plt>
    1334:	mov	x2, x0
    1338:	mov	x0, x19
    133c:	mov	x1, x20
    1340:	bl	d20 <Perl_av_push@plt>
    1344:	ldr	x8, [sp]
    1348:	cbnz	x8, 1308 <boot_Math__BigInt__FastCalc@@Base+0x434>
    134c:	b	137c <boot_Math__BigInt__FastCalc@@Base+0x4a8>
    1350:	mov	w2, #0x2                   	// #2
    1354:	mov	x0, x19
    1358:	mov	x1, x21
    135c:	bl	c70 <Perl_sv_2uv_flags@plt>
    1360:	mov	x1, x0
    1364:	mov	x0, x19
    1368:	bl	d70 <Perl_newSVuv@plt>
    136c:	mov	x2, x0
    1370:	mov	x0, x19
    1374:	mov	x1, x20
    1378:	bl	d20 <Perl_av_push@plt>
    137c:	mov	x0, x19
    1380:	mov	x1, x20
    1384:	bl	c60 <Perl_newRV_noinc@plt>
    1388:	mov	x1, x0
    138c:	mov	x0, x19
    1390:	bl	d60 <Perl_sv_2mortal@plt>
    1394:	ldr	x8, [x19, #24]
    1398:	adrp	x9, 12000 <boot_Math__BigInt__FastCalc@@Base+0x1112c>
    139c:	str	x0, [x8, w22, sxtw #3]
    13a0:	ldr	x8, [x19, #24]
    13a4:	add	x8, x8, w22, sxtw #3
    13a8:	str	x8, [x19]
    13ac:	ldr	x8, [sp, #8]
    13b0:	ldr	x9, [x9, #4056]
    13b4:	ldr	x9, [x9]
    13b8:	cmp	x9, x8
    13bc:	b.ne	13d8 <boot_Math__BigInt__FastCalc@@Base+0x504>  // b.any
    13c0:	ldp	x20, x19, [sp, #64]
    13c4:	ldp	x22, x21, [sp, #48]
    13c8:	ldr	x23, [sp, #32]
    13cc:	ldp	x29, x30, [sp, #16]
    13d0:	add	sp, sp, #0x50
    13d4:	ret
    13d8:	bl	ce0 <__stack_chk_fail@plt>
    13dc:	adrp	x8, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
    13e0:	add	x8, x8, #0x395
    13e4:	mov	x0, x1
    13e8:	mov	x1, x8
    13ec:	bl	d00 <Perl_croak_xs_usage@plt>
    13f0:	stp	x29, x30, [sp, #-80]!
    13f4:	stp	x24, x23, [sp, #32]
    13f8:	stp	x22, x21, [sp, #48]
    13fc:	stp	x20, x19, [sp, #64]
    1400:	ldr	x8, [x0, #120]
    1404:	ldr	x10, [x0]
    1408:	str	x25, [sp, #16]
    140c:	mov	x29, sp
    1410:	sub	x9, x8, #0x4
    1414:	str	x9, [x0, #120]
    1418:	ldr	w8, [x8]
    141c:	ldr	x9, [x0, #24]
    1420:	add	x11, x9, x8, lsl #3
    1424:	sub	x10, x10, x11
    1428:	and	x10, x10, #0x7fffffff8
    142c:	cmp	x10, #0x10
    1430:	b.ne	1554 <boot_Math__BigInt__FastCalc@@Base+0x680>  // b.any
    1434:	add	w10, w8, #0x2
    1438:	ldr	x9, [x9, w10, sxtw #3]
    143c:	mov	x19, x0
    1440:	add	w23, w8, #0x1
    1444:	ldr	x20, [x9, #16]
    1448:	mov	x1, x20
    144c:	bl	c90 <Perl_av_len@plt>
    1450:	mov	x21, x0
    1454:	mov	w1, #0xb                   	// #11
    1458:	mov	x0, x19
    145c:	bl	db0 <Perl_newSV_type@plt>
    1460:	mov	x1, x0
    1464:	mov	x0, x19
    1468:	bl	d60 <Perl_sv_2mortal@plt>
    146c:	mov	x22, x0
    1470:	mov	x0, x19
    1474:	mov	x1, x22
    1478:	mov	x2, x21
    147c:	bl	df0 <Perl_av_extend@plt>
    1480:	tbnz	x21, #63, 1510 <boot_Math__BigInt__FastCalc@@Base+0x63c>
    1484:	mov	w24, #0x200                 	// #512
    1488:	movk	w24, #0x20, lsl #16
    148c:	mov	x0, x19
    1490:	mov	x1, x20
    1494:	mov	x2, x21
    1498:	mov	w3, wzr
    149c:	bl	d90 <Perl_av_fetch@plt>
    14a0:	ldr	x8, [x0]
    14a4:	mov	x0, x19
    14a8:	mov	x1, x20
    14ac:	mov	x2, x21
    14b0:	ldr	w8, [x8, #12]
    14b4:	mov	w3, wzr
    14b8:	and	w25, w8, w24
    14bc:	bl	d90 <Perl_av_fetch@plt>
    14c0:	cmp	w25, #0x200
    14c4:	b.ne	14d8 <boot_Math__BigInt__FastCalc@@Base+0x604>  // b.any
    14c8:	ldr	x8, [x0]
    14cc:	ldr	x8, [x8]
    14d0:	ldr	d0, [x8, #40]
    14d4:	b	14e8 <boot_Math__BigInt__FastCalc@@Base+0x614>
    14d8:	ldr	x1, [x0]
    14dc:	mov	w2, #0x2                   	// #2
    14e0:	mov	x0, x19
    14e4:	bl	d10 <Perl_sv_2nv_flags@plt>
    14e8:	mov	x0, x19
    14ec:	bl	cb0 <Perl_newSVnv@plt>
    14f0:	mov	x3, x0
    14f4:	mov	x0, x19
    14f8:	mov	x1, x22
    14fc:	mov	x2, x21
    1500:	bl	ca0 <Perl_av_store@plt>
    1504:	cmp	x21, #0x0
    1508:	sub	x21, x21, #0x1
    150c:	b.gt	148c <boot_Math__BigInt__FastCalc@@Base+0x5b8>
    1510:	mov	x0, x19
    1514:	mov	x1, x22
    1518:	bl	da0 <Perl_newRV@plt>
    151c:	mov	x1, x0
    1520:	mov	x0, x19
    1524:	bl	d60 <Perl_sv_2mortal@plt>
    1528:	ldr	x8, [x19, #24]
    152c:	ldr	x25, [sp, #16]
    1530:	str	x0, [x8, w23, sxtw #3]
    1534:	ldr	x8, [x19, #24]
    1538:	add	x8, x8, w23, sxtw #3
    153c:	str	x8, [x19]
    1540:	ldp	x20, x19, [sp, #64]
    1544:	ldp	x22, x21, [sp, #48]
    1548:	ldp	x24, x23, [sp, #32]
    154c:	ldp	x29, x30, [sp], #80
    1550:	ret
    1554:	adrp	x8, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
    1558:	add	x8, x8, #0x395
    155c:	mov	x0, x1
    1560:	mov	x1, x8
    1564:	bl	d00 <Perl_croak_xs_usage@plt>
    1568:	stp	x29, x30, [sp, #-64]!
    156c:	stp	x24, x23, [sp, #16]
    1570:	stp	x22, x21, [sp, #32]
    1574:	stp	x20, x19, [sp, #48]
    1578:	ldr	x8, [x0, #120]
    157c:	ldr	x10, [x0]
    1580:	mov	x29, sp
    1584:	sub	x9, x8, #0x4
    1588:	str	x9, [x0, #120]
    158c:	ldrsw	x8, [x8]
    1590:	ldr	x9, [x0, #24]
    1594:	add	x11, x9, x8, lsl #3
    1598:	sub	x10, x10, x11
    159c:	and	x10, x10, #0x7fffffff8
    15a0:	cmp	x10, #0x8
    15a4:	b.ne	16a8 <boot_Math__BigInt__FastCalc@@Base+0x7d4>  // b.any
    15a8:	add	x23, x8, #0x1
    15ac:	ldr	x22, [x9, x23, lsl #3]
    15b0:	mov	x19, x0
    15b4:	ldr	x20, [x22, #16]
    15b8:	mov	x1, x20
    15bc:	bl	c90 <Perl_av_len@plt>
    15c0:	ldr	x8, [x19, #24]
    15c4:	cmn	x0, #0x1
    15c8:	str	x22, [x8, x23, lsl #3]
    15cc:	b.eq	166c <boot_Math__BigInt__FastCalc@@Base+0x798>  // b.none
    15d0:	mov	x21, x0
    15d4:	cbz	x0, 1688 <boot_Math__BigInt__FastCalc@@Base+0x7b4>
    15d8:	cmp	x21, #0x1
    15dc:	b.lt	1688 <boot_Math__BigInt__FastCalc@@Base+0x7b4>  // b.tstop
    15e0:	mov	w24, #0x200                 	// #512
    15e4:	movk	w24, #0x20, lsl #16
    15e8:	mov	x22, x21
    15ec:	mov	x0, x19
    15f0:	mov	x1, x20
    15f4:	mov	x2, x22
    15f8:	mov	w3, wzr
    15fc:	bl	d90 <Perl_av_fetch@plt>
    1600:	ldr	x1, [x0]
    1604:	ldr	w8, [x1, #12]
    1608:	and	w8, w8, w24
    160c:	cmp	w8, #0x200
    1610:	b.ne	1620 <boot_Math__BigInt__FastCalc@@Base+0x74c>  // b.any
    1614:	ldr	x8, [x1]
    1618:	ldr	d0, [x8, #40]
    161c:	b	162c <boot_Math__BigInt__FastCalc@@Base+0x758>
    1620:	mov	w2, #0x2                   	// #2
    1624:	mov	x0, x19
    1628:	bl	d10 <Perl_sv_2nv_flags@plt>
    162c:	fcmp	d0, #0.0
    1630:	b.ne	163c <boot_Math__BigInt__FastCalc@@Base+0x768>  // b.any
    1634:	subs	x22, x22, #0x1
    1638:	b.gt	15ec <boot_Math__BigInt__FastCalc@@Base+0x718>
    163c:	subs	x8, x21, x22
    1640:	b.le	1688 <boot_Math__BigInt__FastCalc@@Base+0x7b4>
    1644:	cmp	x8, #0x1
    1648:	b.lt	1688 <boot_Math__BigInt__FastCalc@@Base+0x7b4>  // b.tstop
    164c:	add	x21, x8, #0x1
    1650:	mov	x0, x19
    1654:	mov	x1, x20
    1658:	bl	d30 <Perl_av_pop@plt>
    165c:	sub	x21, x21, #0x1
    1660:	cmp	x21, #0x1
    1664:	b.gt	1650 <boot_Math__BigInt__FastCalc@@Base+0x77c>
    1668:	b	1688 <boot_Math__BigInt__FastCalc@@Base+0x7b4>
    166c:	mov	x0, x19
    1670:	mov	x1, xzr
    1674:	bl	dc0 <Perl_newSViv@plt>
    1678:	mov	x2, x0
    167c:	mov	x0, x19
    1680:	mov	x1, x20
    1684:	bl	d20 <Perl_av_push@plt>
    1688:	ldr	x8, [x19, #24]
    168c:	add	x8, x8, x23, lsl #3
    1690:	str	x8, [x19]
    1694:	ldp	x20, x19, [sp, #48]
    1698:	ldp	x22, x21, [sp, #32]
    169c:	ldp	x24, x23, [sp, #16]
    16a0:	ldp	x29, x30, [sp], #64
    16a4:	ret
    16a8:	adrp	x8, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
    16ac:	add	x8, x8, #0x39c
    16b0:	mov	x0, x1
    16b4:	mov	x1, x8
    16b8:	bl	d00 <Perl_croak_xs_usage@plt>
    16bc:	stp	d9, d8, [sp, #-96]!
    16c0:	stp	x29, x30, [sp, #16]
    16c4:	stp	x26, x25, [sp, #32]
    16c8:	stp	x24, x23, [sp, #48]
    16cc:	stp	x22, x21, [sp, #64]
    16d0:	stp	x20, x19, [sp, #80]
    16d4:	ldr	x8, [x0, #120]
    16d8:	ldr	x10, [x0]
    16dc:	mov	x29, sp
    16e0:	sub	x9, x8, #0x4
    16e4:	str	x9, [x0, #120]
    16e8:	ldr	w8, [x8]
    16ec:	ldr	x9, [x0, #24]
    16f0:	add	x11, x9, x8, lsl #3
    16f4:	sub	x10, x10, x11
    16f8:	and	x10, x10, #0x7fffffff8
    16fc:	cmp	x10, #0x10
    1700:	b.ne	1880 <boot_Math__BigInt__FastCalc@@Base+0x9ac>  // b.any
    1704:	add	w10, w8, #0x2
    1708:	ldr	x22, [x9, w10, sxtw #3]
    170c:	mov	x19, x0
    1710:	add	w23, w8, #0x1
    1714:	ldr	x20, [x22, #16]
    1718:	mov	x1, x20
    171c:	bl	c90 <Perl_av_len@plt>
    1720:	ldr	x8, [x19, #24]
    1724:	sxtw	x24, w23
    1728:	str	x22, [x8, w23, sxtw #3]
    172c:	tbnz	x0, #63, 1858 <boot_Math__BigInt__FastCalc@@Base+0x984>
    1730:	adrp	x8, 13000 <boot_Math__BigInt__FastCalc@@Base+0x1212c>
    1734:	ldr	d0, [x8, #248]
    1738:	fmov	d9, #-1.000000000000000000e+00
    173c:	mov	w25, #0x200                 	// #512
    1740:	mov	x21, x0
    1744:	mov	x22, xzr
    1748:	movk	w25, #0x20, lsl #16
    174c:	fadd	d8, d0, d9
    1750:	add	x26, x0, #0x1
    1754:	mov	x0, x19
    1758:	mov	x1, x20
    175c:	mov	x2, x22
    1760:	mov	w3, wzr
    1764:	bl	d90 <Perl_av_fetch@plt>
    1768:	ldr	x23, [x0]
    176c:	ldr	w8, [x23, #12]
    1770:	and	w8, w8, w25
    1774:	cmp	w8, #0x200
    1778:	b.ne	1788 <boot_Math__BigInt__FastCalc@@Base+0x8b4>  // b.any
    177c:	ldr	x8, [x23]
    1780:	ldr	d0, [x8, #40]
    1784:	b	1798 <boot_Math__BigInt__FastCalc@@Base+0x8c4>
    1788:	mov	w2, #0x2                   	// #2
    178c:	mov	x0, x19
    1790:	mov	x1, x23
    1794:	bl	d10 <Perl_sv_2nv_flags@plt>
    1798:	fadd	d0, d0, d9
    179c:	mov	x0, x19
    17a0:	mov	x1, x23
    17a4:	bl	c50 <Perl_sv_setnv@plt>
    17a8:	ldr	w8, [x23, #12]
    17ac:	and	w8, w8, w25
    17b0:	cmp	w8, #0x200
    17b4:	b.ne	17c4 <boot_Math__BigInt__FastCalc@@Base+0x8f0>  // b.any
    17b8:	ldr	x8, [x23]
    17bc:	ldr	d0, [x8, #40]
    17c0:	b	17d4 <boot_Math__BigInt__FastCalc@@Base+0x900>
    17c4:	mov	w2, #0x2                   	// #2
    17c8:	mov	x0, x19
    17cc:	mov	x1, x23
    17d0:	bl	d10 <Perl_sv_2nv_flags@plt>
    17d4:	fcmp	d0, #0.0
    17d8:	b.ge	17f8 <boot_Math__BigInt__FastCalc@@Base+0x924>  // b.tcont
    17dc:	mov	x0, x19
    17e0:	mov	x1, x23
    17e4:	mov	v0.16b, v8.16b
    17e8:	bl	c50 <Perl_sv_setnv@plt>
    17ec:	add	x22, x22, #0x1
    17f0:	cmp	x26, x22
    17f4:	b.ne	1754 <boot_Math__BigInt__FastCalc@@Base+0x880>  // b.any
    17f8:	cmp	x21, #0x1
    17fc:	b.lt	1858 <boot_Math__BigInt__FastCalc@@Base+0x984>  // b.tstop
    1800:	mov	x0, x19
    1804:	mov	x1, x20
    1808:	mov	x2, x21
    180c:	mov	w3, wzr
    1810:	bl	d90 <Perl_av_fetch@plt>
    1814:	ldr	x1, [x0]
    1818:	sub	w9, w25, #0x100
    181c:	ldr	w8, [x1, #12]
    1820:	and	w8, w8, w9
    1824:	cmp	w8, #0x100
    1828:	b.ne	183c <boot_Math__BigInt__FastCalc@@Base+0x968>  // b.any
    182c:	ldr	x8, [x1]
    1830:	ldr	x0, [x8, #32]
    1834:	cbnz	x0, 1858 <boot_Math__BigInt__FastCalc@@Base+0x984>
    1838:	b	184c <boot_Math__BigInt__FastCalc@@Base+0x978>
    183c:	mov	w2, #0x2                   	// #2
    1840:	mov	x0, x19
    1844:	bl	c40 <Perl_sv_2iv_flags@plt>
    1848:	cbnz	x0, 1858 <boot_Math__BigInt__FastCalc@@Base+0x984>
    184c:	mov	x0, x19
    1850:	mov	x1, x20
    1854:	bl	d30 <Perl_av_pop@plt>
    1858:	ldr	x8, [x19, #24]
    185c:	add	x8, x8, x24, lsl #3
    1860:	str	x8, [x19]
    1864:	ldp	x20, x19, [sp, #80]
    1868:	ldp	x22, x21, [sp, #64]
    186c:	ldp	x24, x23, [sp, #48]
    1870:	ldp	x26, x25, [sp, #32]
    1874:	ldp	x29, x30, [sp, #16]
    1878:	ldp	d9, d8, [sp], #96
    187c:	ret
    1880:	adrp	x8, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
    1884:	add	x8, x8, #0x395
    1888:	mov	x0, x1
    188c:	mov	x1, x8
    1890:	bl	d00 <Perl_croak_xs_usage@plt>
    1894:	stp	d9, d8, [sp, #-96]!
    1898:	stp	x29, x30, [sp, #16]
    189c:	stp	x26, x25, [sp, #32]
    18a0:	stp	x24, x23, [sp, #48]
    18a4:	stp	x22, x21, [sp, #64]
    18a8:	stp	x20, x19, [sp, #80]
    18ac:	ldr	x8, [x0, #120]
    18b0:	ldr	x10, [x0]
    18b4:	mov	x29, sp
    18b8:	sub	x9, x8, #0x4
    18bc:	str	x9, [x0, #120]
    18c0:	ldr	w8, [x8]
    18c4:	ldr	x9, [x0, #24]
    18c8:	add	x11, x9, x8, lsl #3
    18cc:	sub	x10, x10, x11
    18d0:	and	x10, x10, #0x7fffffff8
    18d4:	cmp	x10, #0x10
    18d8:	b.ne	1a5c <boot_Math__BigInt__FastCalc@@Base+0xb88>  // b.any
    18dc:	add	w10, w8, #0x2
    18e0:	ldr	x22, [x9, w10, sxtw #3]
    18e4:	mov	w25, #0x200                 	// #512
    18e8:	mov	x19, x0
    18ec:	movk	w25, #0x20, lsl #16
    18f0:	ldr	x20, [x22, #16]
    18f4:	add	w23, w8, #0x1
    18f8:	mov	x1, x20
    18fc:	bl	c90 <Perl_av_len@plt>
    1900:	ldr	x8, [x19, #24]
    1904:	mov	x21, x0
    1908:	sxtw	x24, w23
    190c:	str	x22, [x8, w23, sxtw #3]
    1910:	tbnz	x0, #63, 19cc <boot_Math__BigInt__FastCalc@@Base+0xaf8>
    1914:	adrp	x8, 13000 <boot_Math__BigInt__FastCalc@@Base+0x1212c>
    1918:	ldr	d8, [x8, #248]
    191c:	mov	x22, xzr
    1920:	add	x26, x21, #0x1
    1924:	fmov	d9, #1.000000000000000000e+00
    1928:	mov	x0, x19
    192c:	mov	x1, x20
    1930:	mov	x2, x22
    1934:	mov	w3, wzr
    1938:	bl	d90 <Perl_av_fetch@plt>
    193c:	ldr	x23, [x0]
    1940:	ldr	w8, [x23, #12]
    1944:	and	w8, w8, w25
    1948:	cmp	w8, #0x200
    194c:	b.ne	195c <boot_Math__BigInt__FastCalc@@Base+0xa88>  // b.any
    1950:	ldr	x8, [x23]
    1954:	ldr	d0, [x8, #40]
    1958:	b	196c <boot_Math__BigInt__FastCalc@@Base+0xa98>
    195c:	mov	w2, #0x2                   	// #2
    1960:	mov	x0, x19
    1964:	mov	x1, x23
    1968:	bl	d10 <Perl_sv_2nv_flags@plt>
    196c:	fadd	d0, d0, d9
    1970:	mov	x0, x19
    1974:	mov	x1, x23
    1978:	bl	c50 <Perl_sv_setnv@plt>
    197c:	ldr	w8, [x23, #12]
    1980:	and	w8, w8, w25
    1984:	cmp	w8, #0x200
    1988:	b.ne	1998 <boot_Math__BigInt__FastCalc@@Base+0xac4>  // b.any
    198c:	ldr	x8, [x23]
    1990:	ldr	d0, [x8, #40]
    1994:	b	19a8 <boot_Math__BigInt__FastCalc@@Base+0xad4>
    1998:	mov	w2, #0x2                   	// #2
    199c:	mov	x0, x19
    19a0:	mov	x1, x23
    19a4:	bl	d10 <Perl_sv_2nv_flags@plt>
    19a8:	fcmp	d0, d8
    19ac:	b.mi	1a34 <boot_Math__BigInt__FastCalc@@Base+0xb60>  // b.first
    19b0:	mov	x0, x19
    19b4:	mov	x1, x23
    19b8:	mov	x2, xzr
    19bc:	bl	dd0 <Perl_sv_setiv@plt>
    19c0:	add	x22, x22, #0x1
    19c4:	cmp	x26, x22
    19c8:	b.ne	1928 <boot_Math__BigInt__FastCalc@@Base+0xa54>  // b.any
    19cc:	mov	x0, x19
    19d0:	mov	x1, x20
    19d4:	mov	x2, x21
    19d8:	mov	w3, wzr
    19dc:	bl	d90 <Perl_av_fetch@plt>
    19e0:	ldr	x1, [x0]
    19e4:	sub	w9, w25, #0x100
    19e8:	ldr	w8, [x1, #12]
    19ec:	and	w8, w8, w9
    19f0:	cmp	w8, #0x100
    19f4:	b.ne	1a08 <boot_Math__BigInt__FastCalc@@Base+0xb34>  // b.any
    19f8:	ldr	x8, [x1]
    19fc:	ldr	x0, [x8, #32]
    1a00:	cbnz	x0, 1a34 <boot_Math__BigInt__FastCalc@@Base+0xb60>
    1a04:	b	1a18 <boot_Math__BigInt__FastCalc@@Base+0xb44>
    1a08:	mov	w2, #0x2                   	// #2
    1a0c:	mov	x0, x19
    1a10:	bl	c40 <Perl_sv_2iv_flags@plt>
    1a14:	cbnz	x0, 1a34 <boot_Math__BigInt__FastCalc@@Base+0xb60>
    1a18:	mov	w1, #0x1                   	// #1
    1a1c:	mov	x0, x19
    1a20:	bl	dc0 <Perl_newSViv@plt>
    1a24:	mov	x2, x0
    1a28:	mov	x0, x19
    1a2c:	mov	x1, x20
    1a30:	bl	d20 <Perl_av_push@plt>
    1a34:	ldr	x8, [x19, #24]
    1a38:	add	x8, x8, x24, lsl #3
    1a3c:	str	x8, [x19]
    1a40:	ldp	x20, x19, [sp, #80]
    1a44:	ldp	x22, x21, [sp, #64]
    1a48:	ldp	x24, x23, [sp, #48]
    1a4c:	ldp	x26, x25, [sp, #32]
    1a50:	ldp	x29, x30, [sp, #16]
    1a54:	ldp	d9, d8, [sp], #96
    1a58:	ret
    1a5c:	adrp	x8, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
    1a60:	add	x8, x8, #0x395
    1a64:	mov	x0, x1
    1a68:	mov	x1, x8
    1a6c:	bl	d00 <Perl_croak_xs_usage@plt>
    1a70:	stp	x29, x30, [sp, #-48]!
    1a74:	stp	x22, x21, [sp, #16]
    1a78:	stp	x20, x19, [sp, #32]
    1a7c:	ldr	x8, [x0, #120]
    1a80:	ldr	x10, [x0]
    1a84:	mov	x29, sp
    1a88:	sub	x9, x8, #0x4
    1a8c:	str	x9, [x0, #120]
    1a90:	ldrsw	x8, [x8]
    1a94:	ldr	x9, [x0, #24]
    1a98:	add	x9, x9, x8, lsl #3
    1a9c:	sub	x9, x10, x9
    1aa0:	and	x9, x9, #0x7fffffff8
    1aa4:	cmp	x9, #0x8
    1aa8:	b.ne	1b24 <boot_Math__BigInt__FastCalc@@Base+0xc50>  // b.any
    1aac:	ldr	x9, [x1]
    1ab0:	mov	w1, #0xb                   	// #11
    1ab4:	mov	x19, x0
    1ab8:	lsl	x22, x8, #3
    1abc:	ldrsw	x20, [x9, #40]
    1ac0:	bl	db0 <Perl_newSV_type@plt>
    1ac4:	mov	x21, x0
    1ac8:	mov	x0, x19
    1acc:	mov	x1, x20
    1ad0:	bl	dc0 <Perl_newSViv@plt>
    1ad4:	mov	x2, x0
    1ad8:	mov	x0, x19
    1adc:	mov	x1, x21
    1ae0:	bl	d20 <Perl_av_push@plt>
    1ae4:	mov	x0, x19
    1ae8:	mov	x1, x21
    1aec:	bl	c60 <Perl_newRV_noinc@plt>
    1af0:	mov	x1, x0
    1af4:	mov	x0, x19
    1af8:	bl	d60 <Perl_sv_2mortal@plt>
    1afc:	ldr	x8, [x19, #24]
    1b00:	add	x9, x22, #0x8
    1b04:	str	x0, [x8, x9]
    1b08:	ldr	x8, [x19, #24]
    1b0c:	add	x8, x8, x9
    1b10:	str	x8, [x19]
    1b14:	ldp	x20, x19, [sp, #32]
    1b18:	ldp	x22, x21, [sp, #16]
    1b1c:	ldp	x29, x30, [sp], #48
    1b20:	ret
    1b24:	adrp	x8, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
    1b28:	add	x8, x8, #0x39e
    1b2c:	mov	x0, x1
    1b30:	mov	x1, x8
    1b34:	bl	d00 <Perl_croak_xs_usage@plt>
    1b38:	stp	x29, x30, [sp, #-48]!
    1b3c:	stp	x20, x19, [sp, #32]
    1b40:	ldr	x8, [x0, #120]
    1b44:	ldr	x10, [x0]
    1b48:	str	x21, [sp, #16]
    1b4c:	mov	x29, sp
    1b50:	sub	x9, x8, #0x4
    1b54:	str	x9, [x0, #120]
    1b58:	ldr	w8, [x8]
    1b5c:	ldr	x9, [x0, #24]
    1b60:	add	x11, x9, x8, lsl #3
    1b64:	sub	x10, x10, x11
    1b68:	and	x10, x10, #0x7fffffff8
    1b6c:	cmp	x10, #0x10
    1b70:	b.ne	1c10 <boot_Math__BigInt__FastCalc@@Base+0xd3c>  // b.any
    1b74:	add	w11, w8, #0x2
    1b78:	ldr	x9, [x9, w11, sxtw #3]
    1b7c:	ldr	x10, [x1]
    1b80:	mov	x2, xzr
    1b84:	mov	w3, wzr
    1b88:	ldr	x1, [x9, #16]
    1b8c:	ldrsw	x21, [x10, #40]
    1b90:	mov	x19, x0
    1b94:	add	w20, w8, #0x1
    1b98:	bl	d90 <Perl_av_fetch@plt>
    1b9c:	ldr	x1, [x0]
    1ba0:	mov	w9, #0x100                 	// #256
    1ba4:	movk	w9, #0x20, lsl #16
    1ba8:	ldr	w8, [x1, #12]
    1bac:	and	w8, w8, w9
    1bb0:	cmp	w8, #0x100
    1bb4:	b.ne	1bc4 <boot_Math__BigInt__FastCalc@@Base+0xcf0>  // b.any
    1bb8:	ldr	x8, [x1]
    1bbc:	ldr	x0, [x8, #32]
    1bc0:	b	1bd0 <boot_Math__BigInt__FastCalc@@Base+0xcfc>
    1bc4:	mov	w2, #0x2                   	// #2
    1bc8:	mov	x0, x19
    1bcc:	bl	c40 <Perl_sv_2iv_flags@plt>
    1bd0:	and	x8, x0, #0x1
    1bd4:	add	x9, x19, #0x138
    1bd8:	add	x10, x19, #0x168
    1bdc:	cmp	x8, x21
    1be0:	csel	x1, x9, x10, eq  // eq = none
    1be4:	mov	x0, x19
    1be8:	bl	d60 <Perl_sv_2mortal@plt>
    1bec:	ldr	x8, [x19, #24]
    1bf0:	ldr	x21, [sp, #16]
    1bf4:	str	x0, [x8, w20, sxtw #3]
    1bf8:	ldr	x8, [x19, #24]
    1bfc:	add	x8, x8, w20, sxtw #3
    1c00:	str	x8, [x19]
    1c04:	ldp	x20, x19, [sp, #32]
    1c08:	ldp	x29, x30, [sp], #48
    1c0c:	ret
    1c10:	adrp	x8, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
    1c14:	add	x8, x8, #0x395
    1c18:	mov	x0, x1
    1c1c:	mov	x1, x8
    1c20:	bl	d00 <Perl_croak_xs_usage@plt>
    1c24:	stp	x29, x30, [sp, #-48]!
    1c28:	stp	x22, x21, [sp, #16]
    1c2c:	stp	x20, x19, [sp, #32]
    1c30:	ldr	x8, [x0, #120]
    1c34:	ldr	x10, [x0]
    1c38:	mov	x29, sp
    1c3c:	sub	x9, x8, #0x4
    1c40:	str	x9, [x0, #120]
    1c44:	ldrsw	x8, [x8]
    1c48:	ldr	x9, [x0, #24]
    1c4c:	add	x9, x9, x8, lsl #3
    1c50:	sub	x10, x10, x9
    1c54:	and	x10, x10, #0x7fffffff8
    1c58:	cmp	x10, #0x10
    1c5c:	b.ne	1d1c <boot_Math__BigInt__FastCalc@@Base+0xe48>  // b.any
    1c60:	ldr	x9, [x9, #16]
    1c64:	ldr	x10, [x1]
    1c68:	mov	x19, x0
    1c6c:	add	x21, x8, #0x1
    1c70:	ldr	x20, [x9, #16]
    1c74:	ldrsw	x22, [x10, #40]
    1c78:	mov	x1, x20
    1c7c:	bl	c90 <Perl_av_len@plt>
    1c80:	cbz	x0, 1c98 <boot_Math__BigInt__FastCalc@@Base+0xdc4>
    1c84:	ldr	x9, [x19, #24]
    1c88:	add	x8, x19, #0x168
    1c8c:	mov	x10, x21
    1c90:	add	x9, x9, x21, lsl #3
    1c94:	b	1cfc <boot_Math__BigInt__FastCalc@@Base+0xe28>
    1c98:	mov	x0, x19
    1c9c:	mov	x1, x20
    1ca0:	mov	x2, xzr
    1ca4:	mov	w3, wzr
    1ca8:	bl	d90 <Perl_av_fetch@plt>
    1cac:	ldr	x1, [x0]
    1cb0:	mov	w9, #0x100                 	// #256
    1cb4:	movk	w9, #0x20, lsl #16
    1cb8:	ldr	w8, [x1, #12]
    1cbc:	and	w8, w8, w9
    1cc0:	cmp	w8, #0x100
    1cc4:	b.ne	1cd4 <boot_Math__BigInt__FastCalc@@Base+0xe00>  // b.any
    1cc8:	ldr	x8, [x1]
    1ccc:	ldr	x0, [x8, #32]
    1cd0:	b	1ce0 <boot_Math__BigInt__FastCalc@@Base+0xe0c>
    1cd4:	mov	w2, #0x2                   	// #2
    1cd8:	mov	x0, x19
    1cdc:	bl	c40 <Perl_sv_2iv_flags@plt>
    1ce0:	ldr	x11, [x19, #24]
    1ce4:	add	x8, x19, #0x138
    1ce8:	add	x9, x19, #0x168
    1cec:	cmp	x0, x22
    1cf0:	csel	x8, x8, x9, eq  // eq = none
    1cf4:	sxtw	x10, w21
    1cf8:	add	x9, x11, w21, sxtw #3
    1cfc:	str	x8, [x9]
    1d00:	ldr	x8, [x19, #24]
    1d04:	add	x8, x8, x10, lsl #3
    1d08:	str	x8, [x19]
    1d0c:	ldp	x20, x19, [sp, #32]
    1d10:	ldp	x22, x21, [sp, #16]
    1d14:	ldp	x29, x30, [sp], #48
    1d18:	ret
    1d1c:	adrp	x8, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
    1d20:	add	x8, x8, #0x395
    1d24:	mov	x0, x1
    1d28:	mov	x1, x8
    1d2c:	bl	d00 <Perl_croak_xs_usage@plt>
    1d30:	sub	sp, sp, #0x40
    1d34:	stp	x29, x30, [sp, #16]
    1d38:	stp	x22, x21, [sp, #32]
    1d3c:	stp	x20, x19, [sp, #48]
    1d40:	adrp	x8, 12000 <boot_Math__BigInt__FastCalc@@Base+0x1112c>
    1d44:	ldr	x8, [x8, #4056]
    1d48:	add	x29, sp, #0x10
    1d4c:	ldr	x8, [x8]
    1d50:	str	x8, [sp, #8]
    1d54:	ldr	x8, [x0, #120]
    1d58:	ldr	x10, [x0]
    1d5c:	sub	x9, x8, #0x4
    1d60:	str	x9, [x0, #120]
    1d64:	ldr	w8, [x8]
    1d68:	ldr	x9, [x0, #24]
    1d6c:	add	x11, x9, x8, lsl #3
    1d70:	sub	x10, x10, x11
    1d74:	and	x10, x10, #0x7fffffff8
    1d78:	cmp	x10, #0x10
    1d7c:	b.ne	1e60 <boot_Math__BigInt__FastCalc@@Base+0xf8c>  // b.any
    1d80:	add	w10, w8, #0x2
    1d84:	ldr	x9, [x9, w10, sxtw #3]
    1d88:	mov	x19, x0
    1d8c:	add	w22, w8, #0x1
    1d90:	ldr	x21, [x9, #16]
    1d94:	mov	x1, x21
    1d98:	bl	c90 <Perl_av_len@plt>
    1d9c:	mov	x20, x0
    1da0:	mov	x0, x19
    1da4:	mov	x1, x21
    1da8:	mov	x2, x20
    1dac:	mov	w3, wzr
    1db0:	bl	d90 <Perl_av_fetch@plt>
    1db4:	ldr	x1, [x0]
    1db8:	mov	w9, #0x400                 	// #1024
    1dbc:	movk	w9, #0x20, lsl #16
    1dc0:	ldr	w8, [x1, #12]
    1dc4:	and	w8, w8, w9
    1dc8:	cmp	w8, #0x400
    1dcc:	b.ne	1de0 <boot_Math__BigInt__FastCalc@@Base+0xf0c>  // b.any
    1dd0:	ldr	x8, [x1]
    1dd4:	ldr	x8, [x8, #16]
    1dd8:	str	x8, [sp]
    1ddc:	b	1df4 <boot_Math__BigInt__FastCalc@@Base+0xf20>
    1de0:	mov	x2, sp
    1de4:	mov	w3, #0x2                   	// #2
    1de8:	mov	x0, x19
    1dec:	bl	cc0 <Perl_sv_2pv_flags@plt>
    1df0:	ldr	x8, [sp]
    1df4:	adrp	x9, 13000 <boot_Math__BigInt__FastCalc@@Base+0x1212c>
    1df8:	ldr	d0, [x9, #240]
    1dfc:	mov	x0, x19
    1e00:	fcvtzs	x9, d0
    1e04:	madd	x1, x20, x9, x8
    1e08:	str	x1, [sp]
    1e0c:	bl	dc0 <Perl_newSViv@plt>
    1e10:	mov	x1, x0
    1e14:	mov	x0, x19
    1e18:	bl	d60 <Perl_sv_2mortal@plt>
    1e1c:	ldr	x8, [x19, #24]
    1e20:	adrp	x9, 12000 <boot_Math__BigInt__FastCalc@@Base+0x1112c>
    1e24:	str	x0, [x8, w22, sxtw #3]
    1e28:	ldr	x8, [x19, #24]
    1e2c:	add	x8, x8, w22, sxtw #3
    1e30:	str	x8, [x19]
    1e34:	ldr	x8, [sp, #8]
    1e38:	ldr	x9, [x9, #4056]
    1e3c:	ldr	x9, [x9]
    1e40:	cmp	x9, x8
    1e44:	b.ne	1e5c <boot_Math__BigInt__FastCalc@@Base+0xf88>  // b.any
    1e48:	ldp	x20, x19, [sp, #48]
    1e4c:	ldp	x22, x21, [sp, #32]
    1e50:	ldp	x29, x30, [sp, #16]
    1e54:	add	sp, sp, #0x40
    1e58:	ret
    1e5c:	bl	ce0 <__stack_chk_fail@plt>
    1e60:	adrp	x8, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
    1e64:	add	x8, x8, #0x395
    1e68:	mov	x0, x1
    1e6c:	mov	x1, x8
    1e70:	bl	d00 <Perl_croak_xs_usage@plt>
    1e74:	sub	sp, sp, #0x80
    1e78:	str	d8, [sp, #32]
    1e7c:	stp	x29, x30, [sp, #48]
    1e80:	stp	x26, x25, [sp, #64]
    1e84:	stp	x24, x23, [sp, #80]
    1e88:	stp	x22, x21, [sp, #96]
    1e8c:	stp	x20, x19, [sp, #112]
    1e90:	adrp	x8, 12000 <boot_Math__BigInt__FastCalc@@Base+0x1112c>
    1e94:	ldr	x8, [x8, #4056]
    1e98:	add	x29, sp, #0x20
    1e9c:	ldr	x8, [x8]
    1ea0:	stur	x8, [x29, #-8]
    1ea4:	ldr	x8, [x0, #120]
    1ea8:	ldr	x10, [x0]
    1eac:	sub	x9, x8, #0x4
    1eb0:	str	x9, [x0, #120]
    1eb4:	ldr	w8, [x8]
    1eb8:	ldr	x9, [x0, #24]
    1ebc:	add	x11, x9, x8, lsl #3
    1ec0:	sub	x10, x10, x11
    1ec4:	and	x10, x10, #0x7fffffff8
    1ec8:	cmp	x10, #0x18
    1ecc:	b.ne	2104 <boot_Math__BigInt__FastCalc@@Base+0x1230>  // b.any
    1ed0:	add	w10, w8, #0x2
    1ed4:	ldr	x10, [x9, w10, sxtw #3]
    1ed8:	add	w11, w8, #0x3
    1edc:	ldr	x9, [x9, w11, sxtw #3]
    1ee0:	mov	x19, x0
    1ee4:	ldr	x20, [x10, #16]
    1ee8:	add	w25, w8, #0x1
    1eec:	ldr	x21, [x9, #16]
    1ef0:	mov	x1, x20
    1ef4:	bl	c90 <Perl_av_len@plt>
    1ef8:	mov	x22, x0
    1efc:	mov	x0, x19
    1f00:	mov	x1, x21
    1f04:	bl	c90 <Perl_av_len@plt>
    1f08:	sub	x8, x22, x0
    1f0c:	cmp	x8, #0x1
    1f10:	b.lt	1f78 <boot_Math__BigInt__FastCalc@@Base+0x10a4>  // b.tstop
    1f14:	mov	w1, #0x1                   	// #1
    1f18:	mov	x0, x19
    1f1c:	bl	dc0 <Perl_newSViv@plt>
    1f20:	mov	x1, x0
    1f24:	mov	x0, x19
    1f28:	bl	d60 <Perl_sv_2mortal@plt>
    1f2c:	ldr	x8, [x19, #24]
    1f30:	adrp	x9, 12000 <boot_Math__BigInt__FastCalc@@Base+0x1112c>
    1f34:	str	x0, [x8, w25, sxtw #3]
    1f38:	ldr	x8, [x19, #24]
    1f3c:	add	x8, x8, w25, sxtw #3
    1f40:	str	x8, [x19]
    1f44:	ldur	x8, [x29, #-8]
    1f48:	ldr	x9, [x9, #4056]
    1f4c:	ldr	x9, [x9]
    1f50:	cmp	x9, x8
    1f54:	b.ne	2100 <boot_Math__BigInt__FastCalc@@Base+0x122c>  // b.any
    1f58:	ldp	x20, x19, [sp, #112]
    1f5c:	ldp	x22, x21, [sp, #96]
    1f60:	ldp	x24, x23, [sp, #80]
    1f64:	ldp	x26, x25, [sp, #64]
    1f68:	ldp	x29, x30, [sp, #48]
    1f6c:	ldr	d8, [sp, #32]
    1f70:	add	sp, sp, #0x80
    1f74:	ret
    1f78:	tbnz	x8, #63, 20ec <boot_Math__BigInt__FastCalc@@Base+0x1218>
    1f7c:	mov	w26, #0x200                 	// #512
    1f80:	mov	x0, x19
    1f84:	mov	x1, x20
    1f88:	mov	x2, x22
    1f8c:	mov	w3, wzr
    1f90:	movk	w26, #0x20, lsl #16
    1f94:	bl	d90 <Perl_av_fetch@plt>
    1f98:	ldr	x24, [x0]
    1f9c:	mov	x0, x19
    1fa0:	mov	x1, x21
    1fa4:	mov	x2, x22
    1fa8:	mov	w3, wzr
    1fac:	bl	d90 <Perl_av_fetch@plt>
    1fb0:	ldr	w8, [x24, #12]
    1fb4:	ldr	x23, [x0]
    1fb8:	add	w9, w26, #0x200
    1fbc:	and	w8, w8, w9
    1fc0:	cmp	w8, #0x400
    1fc4:	b.ne	1fd8 <boot_Math__BigInt__FastCalc@@Base+0x1104>  // b.any
    1fc8:	ldr	x8, [x24]
    1fcc:	ldr	x8, [x8, #16]
    1fd0:	str	x8, [sp, #16]
    1fd4:	b	1fec <boot_Math__BigInt__FastCalc@@Base+0x1118>
    1fd8:	add	x2, sp, #0x10
    1fdc:	mov	w3, #0x2                   	// #2
    1fe0:	mov	x0, x19
    1fe4:	mov	x1, x24
    1fe8:	bl	cc0 <Perl_sv_2pv_flags@plt>
    1fec:	ldr	w8, [x23, #12]
    1ff0:	add	w9, w26, #0x200
    1ff4:	and	w8, w8, w9
    1ff8:	cmp	w8, #0x400
    1ffc:	b.ne	2010 <boot_Math__BigInt__FastCalc@@Base+0x113c>  // b.any
    2000:	ldr	x8, [x23]
    2004:	ldr	x8, [x8, #16]
    2008:	str	x8, [sp, #8]
    200c:	b	2028 <boot_Math__BigInt__FastCalc@@Base+0x1154>
    2010:	add	x2, sp, #0x8
    2014:	mov	w3, #0x2                   	// #2
    2018:	mov	x0, x19
    201c:	mov	x1, x23
    2020:	bl	cc0 <Perl_sv_2pv_flags@plt>
    2024:	ldr	x8, [sp, #8]
    2028:	ldr	x9, [sp, #16]
    202c:	sub	x8, x9, x8
    2030:	cmp	x8, #0x1
    2034:	b.ge	1f14 <boot_Math__BigInt__FastCalc@@Base+0x1040>  // b.tcont
    2038:	tbnz	x8, #63, 20ec <boot_Math__BigInt__FastCalc@@Base+0x1218>
    203c:	tbnz	x22, #63, 20f4 <boot_Math__BigInt__FastCalc@@Base+0x1220>
    2040:	mov	x0, x19
    2044:	mov	x1, x20
    2048:	mov	x2, x22
    204c:	mov	w3, wzr
    2050:	bl	d90 <Perl_av_fetch@plt>
    2054:	ldr	x24, [x0]
    2058:	mov	x0, x19
    205c:	mov	x1, x21
    2060:	mov	x2, x22
    2064:	mov	w3, wzr
    2068:	bl	d90 <Perl_av_fetch@plt>
    206c:	ldr	w8, [x24, #12]
    2070:	ldr	x23, [x0]
    2074:	and	w8, w8, w26
    2078:	cmp	w8, #0x200
    207c:	b.ne	208c <boot_Math__BigInt__FastCalc@@Base+0x11b8>  // b.any
    2080:	ldr	x8, [x24]
    2084:	ldr	d8, [x8, #40]
    2088:	b	20a0 <boot_Math__BigInt__FastCalc@@Base+0x11cc>
    208c:	mov	w2, #0x2                   	// #2
    2090:	mov	x0, x19
    2094:	mov	x1, x24
    2098:	bl	d10 <Perl_sv_2nv_flags@plt>
    209c:	mov	v8.16b, v0.16b
    20a0:	ldr	w8, [x23, #12]
    20a4:	and	w8, w8, w26
    20a8:	cmp	w8, #0x200
    20ac:	b.ne	20bc <boot_Math__BigInt__FastCalc@@Base+0x11e8>  // b.any
    20b0:	ldr	x8, [x23]
    20b4:	ldr	d0, [x8, #40]
    20b8:	b	20cc <boot_Math__BigInt__FastCalc@@Base+0x11f8>
    20bc:	mov	w2, #0x2                   	// #2
    20c0:	mov	x0, x19
    20c4:	mov	x1, x23
    20c8:	bl	d10 <Perl_sv_2nv_flags@plt>
    20cc:	fsub	d0, d8, d0
    20d0:	fcmp	d0, #0.0
    20d4:	b.ne	20e0 <boot_Math__BigInt__FastCalc@@Base+0x120c>  // b.any
    20d8:	subs	x22, x22, #0x1
    20dc:	b.ge	2040 <boot_Math__BigInt__FastCalc@@Base+0x116c>  // b.tcont
    20e0:	fcmp	d0, #0.0
    20e4:	b.gt	1f14 <boot_Math__BigInt__FastCalc@@Base+0x1040>
    20e8:	b.pl	20f4 <boot_Math__BigInt__FastCalc@@Base+0x1220>  // b.nfrst
    20ec:	mov	x1, #0xffffffffffffffff    	// #-1
    20f0:	b	1f18 <boot_Math__BigInt__FastCalc@@Base+0x1044>
    20f4:	mov	x0, x19
    20f8:	mov	x1, xzr
    20fc:	b	1f1c <boot_Math__BigInt__FastCalc@@Base+0x1048>
    2100:	bl	ce0 <__stack_chk_fail@plt>
    2104:	adrp	x8, 2000 <boot_Math__BigInt__FastCalc@@Base+0x112c>
    2108:	add	x8, x8, #0x3a4
    210c:	mov	x0, x1
    2110:	mov	x1, x8
    2114:	bl	d00 <Perl_croak_xs_usage@plt>

Disassembly of section .fini:

0000000000002118 <.fini>:
    2118:	stp	x29, x30, [sp, #-16]!
    211c:	mov	x29, sp
    2120:	ldp	x29, x30, [sp], #16
    2124:	ret
