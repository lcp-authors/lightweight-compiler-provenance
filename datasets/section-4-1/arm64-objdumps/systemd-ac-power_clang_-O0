
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-ac-power_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400bd0 <_init>:
  400bd0:	stp	x29, x30, [sp, #-16]!
  400bd4:	mov	x29, sp
  400bd8:	bl	400d88 <call_weak_fn>
  400bdc:	ldp	x29, x30, [sp], #16
  400be0:	ret

Disassembly of section .plt:

0000000000400be8 <__libc_start_main@plt-0x20>:
  400be8:	stp	x16, x30, [sp, #-16]!
  400bec:	adrp	x16, 41f000 <__FRAME_END__+0x1d7f0>
  400bf0:	ldr	x17, [x16, #3936]
  400bf4:	add	x16, x16, #0xf60
  400bf8:	br	x17
  400bfc:	nop
  400c00:	nop
  400c04:	nop

0000000000400c08 <__libc_start_main@plt>:
  400c08:	adrp	x16, 41f000 <__FRAME_END__+0x1d7f0>
  400c0c:	ldr	x17, [x16, #3944]
  400c10:	add	x16, x16, #0xf68
  400c14:	br	x17

0000000000400c18 <abort@plt>:
  400c18:	adrp	x16, 41f000 <__FRAME_END__+0x1d7f0>
  400c1c:	ldr	x17, [x16, #3952]
  400c20:	add	x16, x16, #0xf70
  400c24:	br	x17

0000000000400c28 <__gmon_start__@plt>:
  400c28:	adrp	x16, 41f000 <__FRAME_END__+0x1d7f0>
  400c2c:	ldr	x17, [x16, #3960]
  400c30:	add	x16, x16, #0xf78
  400c34:	br	x17

0000000000400c38 <ask_password_agent_close@plt>:
  400c38:	adrp	x16, 41f000 <__FRAME_END__+0x1d7f0>
  400c3c:	ldr	x17, [x16, #3968]
  400c40:	add	x16, x16, #0xf80
  400c44:	br	x17

0000000000400c48 <polkit_agent_close@plt>:
  400c48:	adrp	x16, 41f000 <__FRAME_END__+0x1d7f0>
  400c4c:	ldr	x17, [x16, #3976]
  400c50:	add	x16, x16, #0xf88
  400c54:	br	x17

0000000000400c58 <pager_close@plt>:
  400c58:	adrp	x16, 41f000 <__FRAME_END__+0x1d7f0>
  400c5c:	ldr	x17, [x16, #3984]
  400c60:	add	x16, x16, #0xf90
  400c64:	br	x17

0000000000400c68 <mac_selinux_finish@plt>:
  400c68:	adrp	x16, 41f000 <__FRAME_END__+0x1d7f0>
  400c6c:	ldr	x17, [x16, #3992]
  400c70:	add	x16, x16, #0xf98
  400c74:	br	x17

0000000000400c78 <log_parse_environment_realm@plt>:
  400c78:	adrp	x16, 41f000 <__FRAME_END__+0x1d7f0>
  400c7c:	ldr	x17, [x16, #4000]
  400c80:	add	x16, x16, #0xfa0
  400c84:	br	x17

0000000000400c88 <log_open@plt>:
  400c88:	adrp	x16, 41f000 <__FRAME_END__+0x1d7f0>
  400c8c:	ldr	x17, [x16, #4008]
  400c90:	add	x16, x16, #0xfa8
  400c94:	br	x17

0000000000400c98 <on_ac_power@plt>:
  400c98:	adrp	x16, 41f000 <__FRAME_END__+0x1d7f0>
  400c9c:	ldr	x17, [x16, #4016]
  400ca0:	add	x16, x16, #0xfb0
  400ca4:	br	x17

0000000000400ca8 <log_get_max_level_realm@plt>:
  400ca8:	adrp	x16, 41f000 <__FRAME_END__+0x1d7f0>
  400cac:	ldr	x17, [x16, #4024]
  400cb0:	add	x16, x16, #0xfb8
  400cb4:	br	x17

0000000000400cb8 <log_internal_realm@plt>:
  400cb8:	adrp	x16, 41f000 <__FRAME_END__+0x1d7f0>
  400cbc:	ldr	x17, [x16, #4032]
  400cc0:	add	x16, x16, #0xfc0
  400cc4:	br	x17

0000000000400cc8 <abs@plt>:
  400cc8:	adrp	x16, 41f000 <__FRAME_END__+0x1d7f0>
  400ccc:	ldr	x17, [x16, #4040]
  400cd0:	add	x16, x16, #0xfc8
  400cd4:	br	x17

0000000000400cd8 <puts@plt>:
  400cd8:	adrp	x16, 41f000 <__FRAME_END__+0x1d7f0>
  400cdc:	ldr	x17, [x16, #4048]
  400ce0:	add	x16, x16, #0xfd0
  400ce4:	br	x17

0000000000400ce8 <log_assert_failed_realm@plt>:
  400ce8:	adrp	x16, 41f000 <__FRAME_END__+0x1d7f0>
  400cec:	ldr	x17, [x16, #4056]
  400cf0:	add	x16, x16, #0xfd8
  400cf4:	br	x17

0000000000400cf8 <getopt_long@plt>:
  400cf8:	adrp	x16, 41f000 <__FRAME_END__+0x1d7f0>
  400cfc:	ldr	x17, [x16, #4064]
  400d00:	add	x16, x16, #0xfe0
  400d04:	br	x17

0000000000400d08 <version@plt>:
  400d08:	adrp	x16, 41f000 <__FRAME_END__+0x1d7f0>
  400d0c:	ldr	x17, [x16, #4072]
  400d10:	add	x16, x16, #0xfe8
  400d14:	br	x17

0000000000400d18 <log_assert_failed_unreachable_realm@plt>:
  400d18:	adrp	x16, 41f000 <__FRAME_END__+0x1d7f0>
  400d1c:	ldr	x17, [x16, #4080]
  400d20:	add	x16, x16, #0xff0
  400d24:	br	x17

0000000000400d28 <printf@plt>:
  400d28:	adrp	x16, 41f000 <__FRAME_END__+0x1d7f0>
  400d2c:	ldr	x17, [x16, #4088]
  400d30:	add	x16, x16, #0xff8
  400d34:	br	x17

Disassembly of section .text:

0000000000400d38 <_start>:
  400d38:	mov	x29, #0x0                   	// #0
  400d3c:	mov	x30, #0x0                   	// #0
  400d40:	mov	x5, x0
  400d44:	ldr	x1, [sp]
  400d48:	add	x2, sp, #0x8
  400d4c:	mov	x6, sp
  400d50:	movz	x0, #0x0, lsl #48
  400d54:	movk	x0, #0x0, lsl #32
  400d58:	movk	x0, #0x40, lsl #16
  400d5c:	movk	x0, #0xf00
  400d60:	movz	x3, #0x0, lsl #48
  400d64:	movk	x3, #0x0, lsl #32
  400d68:	movk	x3, #0x40, lsl #16
  400d6c:	movk	x3, #0x1478
  400d70:	movz	x4, #0x0, lsl #48
  400d74:	movk	x4, #0x0, lsl #32
  400d78:	movk	x4, #0x40, lsl #16
  400d7c:	movk	x4, #0x14f8
  400d80:	bl	400c08 <__libc_start_main@plt>
  400d84:	bl	400c18 <abort@plt>

0000000000400d88 <call_weak_fn>:
  400d88:	adrp	x0, 41f000 <__FRAME_END__+0x1d7f0>
  400d8c:	ldr	x0, [x0, #3896]
  400d90:	cbz	x0, 400d98 <call_weak_fn+0x10>
  400d94:	b	400c28 <__gmon_start__@plt>
  400d98:	ret

0000000000400d9c <deregister_tm_clones>:
  400d9c:	stp	x29, x30, [sp, #-32]!
  400da0:	mov	x29, sp
  400da4:	adrp	x0, 420000 <completed.8445>
  400da8:	add	x0, x0, #0x0
  400dac:	str	x0, [sp, #24]
  400db0:	ldr	x0, [sp, #24]
  400db4:	str	x0, [sp, #24]
  400db8:	ldr	x1, [sp, #24]
  400dbc:	adrp	x0, 420000 <completed.8445>
  400dc0:	add	x0, x0, #0x0
  400dc4:	cmp	x1, x0
  400dc8:	b.eq	400e04 <deregister_tm_clones+0x68>  // b.none
  400dcc:	adrp	x0, 401000 <run+0x4c>
  400dd0:	add	x0, x0, #0x510
  400dd4:	ldr	x0, [x0]
  400dd8:	str	x0, [sp, #16]
  400ddc:	ldr	x0, [sp, #16]
  400de0:	str	x0, [sp, #16]
  400de4:	ldr	x0, [sp, #16]
  400de8:	cmp	x0, #0x0
  400dec:	b.eq	400e08 <deregister_tm_clones+0x6c>  // b.none
  400df0:	ldr	x1, [sp, #16]
  400df4:	adrp	x0, 420000 <completed.8445>
  400df8:	add	x0, x0, #0x0
  400dfc:	blr	x1
  400e00:	b	400e08 <deregister_tm_clones+0x6c>
  400e04:	nop
  400e08:	ldp	x29, x30, [sp], #32
  400e0c:	ret

0000000000400e10 <register_tm_clones>:
  400e10:	stp	x29, x30, [sp, #-48]!
  400e14:	mov	x29, sp
  400e18:	adrp	x0, 420000 <completed.8445>
  400e1c:	add	x0, x0, #0x0
  400e20:	str	x0, [sp, #40]
  400e24:	ldr	x0, [sp, #40]
  400e28:	str	x0, [sp, #40]
  400e2c:	ldr	x1, [sp, #40]
  400e30:	adrp	x0, 420000 <completed.8445>
  400e34:	add	x0, x0, #0x0
  400e38:	sub	x0, x1, x0
  400e3c:	asr	x0, x0, #3
  400e40:	lsr	x1, x0, #63
  400e44:	add	x0, x1, x0
  400e48:	asr	x0, x0, #1
  400e4c:	str	x0, [sp, #32]
  400e50:	ldr	x0, [sp, #32]
  400e54:	cmp	x0, #0x0
  400e58:	b.eq	400e98 <register_tm_clones+0x88>  // b.none
  400e5c:	adrp	x0, 401000 <run+0x4c>
  400e60:	add	x0, x0, #0x518
  400e64:	ldr	x0, [x0]
  400e68:	str	x0, [sp, #24]
  400e6c:	ldr	x0, [sp, #24]
  400e70:	str	x0, [sp, #24]
  400e74:	ldr	x0, [sp, #24]
  400e78:	cmp	x0, #0x0
  400e7c:	b.eq	400e9c <register_tm_clones+0x8c>  // b.none
  400e80:	ldr	x2, [sp, #24]
  400e84:	ldr	x1, [sp, #32]
  400e88:	adrp	x0, 420000 <completed.8445>
  400e8c:	add	x0, x0, #0x0
  400e90:	blr	x2
  400e94:	b	400e9c <register_tm_clones+0x8c>
  400e98:	nop
  400e9c:	ldp	x29, x30, [sp], #48
  400ea0:	ret

0000000000400ea4 <__do_global_dtors_aux>:
  400ea4:	stp	x29, x30, [sp, #-16]!
  400ea8:	mov	x29, sp
  400eac:	adrp	x0, 420000 <completed.8445>
  400eb0:	add	x0, x0, #0x0
  400eb4:	ldrb	w0, [x0]
  400eb8:	and	x0, x0, #0xff
  400ebc:	cmp	x0, #0x0
  400ec0:	b.ne	400edc <__do_global_dtors_aux+0x38>  // b.any
  400ec4:	bl	400d9c <deregister_tm_clones>
  400ec8:	adrp	x0, 420000 <completed.8445>
  400ecc:	add	x0, x0, #0x0
  400ed0:	mov	w1, #0x1                   	// #1
  400ed4:	strb	w1, [x0]
  400ed8:	b	400ee0 <__do_global_dtors_aux+0x3c>
  400edc:	nop
  400ee0:	ldp	x29, x30, [sp], #16
  400ee4:	ret

0000000000400ee8 <frame_dummy>:
  400ee8:	stp	x29, x30, [sp, #-16]!
  400eec:	mov	x29, sp
  400ef0:	bl	400e10 <register_tm_clones>
  400ef4:	nop
  400ef8:	ldp	x29, x30, [sp], #16
  400efc:	ret

0000000000400f00 <main>:
  400f00:	sub	sp, sp, #0x30
  400f04:	stp	x29, x30, [sp, #32]
  400f08:	add	x29, sp, #0x20
  400f0c:	stur	wzr, [x29, #-4]
  400f10:	stur	w0, [x29, #-8]
  400f14:	str	x1, [sp, #16]
  400f18:	ldur	w0, [x29, #-8]
  400f1c:	ldr	x1, [sp, #16]
  400f20:	bl	400f80 <save_argc_argv>
  400f24:	ldur	w0, [x29, #-8]
  400f28:	ldr	x1, [sp, #16]
  400f2c:	bl	400fb4 <run>
  400f30:	str	w0, [sp, #12]
  400f34:	bl	400c38 <ask_password_agent_close@plt>
  400f38:	bl	400c48 <polkit_agent_close@plt>
  400f3c:	bl	400c58 <pager_close@plt>
  400f40:	bl	400c68 <mac_selinux_finish@plt>
  400f44:	bl	401108 <static_destruct>
  400f48:	ldr	w8, [sp, #12]
  400f4c:	cmp	w8, #0x0
  400f50:	cset	w8, ge  // ge = tcont
  400f54:	tbnz	w8, #0, 400f64 <main+0x64>
  400f58:	mov	w8, #0x1                   	// #1
  400f5c:	str	w8, [sp, #8]
  400f60:	b	400f6c <main+0x6c>
  400f64:	ldr	w8, [sp, #12]
  400f68:	str	w8, [sp, #8]
  400f6c:	ldr	w8, [sp, #8]
  400f70:	mov	w0, w8
  400f74:	ldp	x29, x30, [sp, #32]
  400f78:	add	sp, sp, #0x30
  400f7c:	ret

0000000000400f80 <save_argc_argv>:
  400f80:	sub	sp, sp, #0x10
  400f84:	adrp	x8, 420000 <completed.8445>
  400f88:	add	x8, x8, #0x8
  400f8c:	adrp	x9, 420000 <completed.8445>
  400f90:	add	x9, x9, #0x10
  400f94:	str	w0, [sp, #12]
  400f98:	str	x1, [sp]
  400f9c:	ldr	w10, [sp, #12]
  400fa0:	str	w10, [x8]
  400fa4:	ldr	x8, [sp]
  400fa8:	str	x8, [x9]
  400fac:	add	sp, sp, #0x10
  400fb0:	ret

0000000000400fb4 <run>:
  400fb4:	sub	sp, sp, #0x50
  400fb8:	stp	x29, x30, [sp, #64]
  400fbc:	add	x29, sp, #0x40
  400fc0:	mov	w8, wzr
  400fc4:	adrp	x9, 401000 <run+0x4c>
  400fc8:	add	x9, x9, #0x520
  400fcc:	add	x2, x9, #0x3
  400fd0:	stur	w0, [x29, #-8]
  400fd4:	stur	x1, [x29, #-16]
  400fd8:	mov	w0, w8
  400fdc:	str	x2, [sp, #16]
  400fe0:	bl	400c78 <log_parse_environment_realm@plt>
  400fe4:	bl	400c88 <log_open@plt>
  400fe8:	ldur	w8, [x29, #-8]
  400fec:	ldur	x1, [x29, #-16]
  400ff0:	mov	w0, w8
  400ff4:	bl	401188 <parse_argv>
  400ff8:	stur	w0, [x29, #-20]
  400ffc:	ldur	w8, [x29, #-20]
  401000:	cmp	w8, #0x0
  401004:	cset	w8, gt
  401008:	tbnz	w8, #0, 401018 <run+0x64>
  40100c:	ldur	w8, [x29, #-20]
  401010:	stur	w8, [x29, #-4]
  401014:	b	4010f8 <run+0x144>
  401018:	bl	400c98 <on_ac_power@plt>
  40101c:	stur	w0, [x29, #-20]
  401020:	ldur	w8, [x29, #-20]
  401024:	cmp	w8, #0x0
  401028:	cset	w8, ge  // ge = tcont
  40102c:	tbnz	w8, #0, 4010b8 <run+0x104>
  401030:	mov	w8, #0x3                   	// #3
  401034:	stur	w8, [x29, #-24]
  401038:	ldur	w8, [x29, #-20]
  40103c:	stur	w8, [x29, #-28]
  401040:	str	wzr, [sp, #32]
  401044:	ldr	w0, [sp, #32]
  401048:	bl	400ca8 <log_get_max_level_realm@plt>
  40104c:	ldur	w8, [x29, #-24]
  401050:	and	w8, w8, #0x7
  401054:	cmp	w0, w8
  401058:	b.lt	401090 <run+0xdc>  // b.tstop
  40105c:	ldr	w8, [sp, #32]
  401060:	ldur	w9, [x29, #-24]
  401064:	orr	w0, w9, w8, lsl #10
  401068:	ldur	w1, [x29, #-28]
  40106c:	ldr	x2, [sp, #16]
  401070:	mov	w3, #0x52                  	// #82
  401074:	adrp	x4, 401000 <run+0x4c>
  401078:	add	x4, x4, #0x53b
  40107c:	adrp	x5, 401000 <run+0x4c>
  401080:	add	x5, x5, #0x53f
  401084:	bl	400cb8 <log_internal_realm@plt>
  401088:	str	w0, [sp, #12]
  40108c:	b	4010a4 <run+0xf0>
  401090:	ldur	w0, [x29, #-28]
  401094:	bl	400cc8 <abs@plt>
  401098:	mov	w8, wzr
  40109c:	subs	w8, w8, w0, uxtb
  4010a0:	str	w8, [sp, #12]
  4010a4:	ldr	w8, [sp, #12]
  4010a8:	str	w8, [sp, #28]
  4010ac:	ldr	w8, [sp, #28]
  4010b0:	stur	w8, [x29, #-4]
  4010b4:	b	4010f8 <run+0x144>
  4010b8:	adrp	x8, 420000 <completed.8445>
  4010bc:	add	x8, x8, #0x1
  4010c0:	ldrb	w9, [x8]
  4010c4:	tbnz	w9, #0, 4010cc <run+0x118>
  4010c8:	b	4010e4 <run+0x130>
  4010cc:	ldur	w8, [x29, #-20]
  4010d0:	cmp	w8, #0x0
  4010d4:	cset	w8, ne  // ne = any
  4010d8:	and	w0, w8, #0x1
  4010dc:	bl	4013ec <yes_no>
  4010e0:	bl	400cd8 <puts@plt>
  4010e4:	ldur	w8, [x29, #-20]
  4010e8:	cmp	w8, #0x0
  4010ec:	cset	w8, eq  // eq = none
  4010f0:	and	w8, w8, #0x1
  4010f4:	stur	w8, [x29, #-4]
  4010f8:	ldur	w0, [x29, #-4]
  4010fc:	ldp	x29, x30, [sp, #64]
  401100:	add	sp, sp, #0x50
  401104:	ret

0000000000401108 <static_destruct>:
  401108:	sub	sp, sp, #0x20
  40110c:	stp	x29, x30, [sp, #16]
  401110:	add	x29, sp, #0x10
  401114:	adrp	x8, 41f000 <__FRAME_END__+0x1d7f0>
  401118:	ldr	x8, [x8, #3904]
  40111c:	str	x8, [sp]
  401120:	cbnz	x8, 401128 <static_destruct+0x20>
  401124:	b	40117c <static_destruct+0x74>
  401128:	ldr	x0, [sp]
  40112c:	mov	x1, #0x8                   	// #8
  401130:	bl	401444 <ALIGN_TO>
  401134:	str	x0, [sp, #8]
  401138:	ldr	x8, [sp, #8]
  40113c:	adrp	x9, 41f000 <__FRAME_END__+0x1d7f0>
  401140:	ldr	x9, [x9, #3912]
  401144:	cmp	x8, x9
  401148:	b.cs	40117c <static_destruct+0x74>  // b.hs, b.nlast
  40114c:	ldr	x8, [sp, #8]
  401150:	ldr	x8, [x8, #8]
  401154:	ldr	x9, [sp, #8]
  401158:	ldr	x0, [x9]
  40115c:	blr	x8
  401160:	ldr	x8, [sp, #8]
  401164:	add	x8, x8, #0x10
  401168:	mov	x0, x8
  40116c:	mov	x1, #0x8                   	// #8
  401170:	bl	401444 <ALIGN_TO>
  401174:	str	x0, [sp, #8]
  401178:	b	401138 <static_destruct+0x30>
  40117c:	ldp	x29, x30, [sp, #16]
  401180:	add	sp, sp, #0x20
  401184:	ret

0000000000401188 <parse_argv>:
  401188:	sub	sp, sp, #0x50
  40118c:	stp	x29, x30, [sp, #64]
  401190:	add	x29, sp, #0x40
  401194:	adrp	x8, 401000 <run+0x4c>
  401198:	add	x8, x8, #0x520
  40119c:	add	x8, x8, #0x3
  4011a0:	adrp	x9, 401000 <run+0x4c>
  4011a4:	add	x9, x9, #0x57b
  4011a8:	stur	w0, [x29, #-8]
  4011ac:	stur	x1, [x29, #-16]
  4011b0:	str	x8, [sp, #16]
  4011b4:	str	x9, [sp, #8]
  4011b8:	ldur	w8, [x29, #-8]
  4011bc:	cmp	w8, #0x0
  4011c0:	cset	w8, ge  // ge = tcont
  4011c4:	mov	w9, #0x1                   	// #1
  4011c8:	eor	w8, w8, #0x1
  4011cc:	eor	w8, w8, w9
  4011d0:	eor	w8, w8, w9
  4011d4:	and	w8, w8, #0x1
  4011d8:	mov	w0, w8
  4011dc:	sxtw	x10, w0
  4011e0:	cbz	x10, 401204 <parse_argv+0x7c>
  4011e4:	mov	w8, wzr
  4011e8:	mov	w0, w8
  4011ec:	adrp	x1, 401000 <run+0x4c>
  4011f0:	add	x1, x1, #0x571
  4011f4:	ldr	x2, [sp, #16]
  4011f8:	mov	w3, #0x22                  	// #34
  4011fc:	ldr	x4, [sp, #8]
  401200:	bl	400ce8 <log_assert_failed_realm@plt>
  401204:	ldur	x8, [x29, #-16]
  401208:	cmp	x8, #0x0
  40120c:	cset	w9, ne  // ne = any
  401210:	mov	w10, #0x1                   	// #1
  401214:	eor	w9, w9, #0x1
  401218:	eor	w9, w9, w10
  40121c:	eor	w9, w9, w10
  401220:	and	w9, w9, #0x1
  401224:	mov	w0, w9
  401228:	sxtw	x8, w0
  40122c:	cbz	x8, 401250 <parse_argv+0xc8>
  401230:	mov	w8, wzr
  401234:	mov	w0, w8
  401238:	adrp	x1, 401000 <run+0x4c>
  40123c:	add	x1, x1, #0x598
  401240:	ldr	x2, [sp, #16]
  401244:	mov	w3, #0x23                  	// #35
  401248:	ldr	x4, [sp, #8]
  40124c:	bl	400ce8 <log_assert_failed_realm@plt>
  401250:	ldur	w0, [x29, #-8]
  401254:	ldur	x1, [x29, #-16]
  401258:	adrp	x2, 401000 <run+0x4c>
  40125c:	add	x2, x2, #0x59d
  401260:	adrp	x3, 401000 <run+0x4c>
  401264:	add	x3, x3, #0x6a0
  401268:	mov	x8, xzr
  40126c:	mov	x4, x8
  401270:	bl	400cf8 <getopt_long@plt>
  401274:	stur	w0, [x29, #-20]
  401278:	cmp	w0, #0x0
  40127c:	cset	w9, lt  // lt = tstop
  401280:	tbnz	w9, #0, 401324 <parse_argv+0x19c>
  401284:	ldur	w8, [x29, #-20]
  401288:	cmp	w8, #0x3f
  40128c:	str	w8, [sp, #4]
  401290:	b.eq	4012f4 <parse_argv+0x16c>  // b.none
  401294:	b	401298 <parse_argv+0x110>
  401298:	ldr	w8, [sp, #4]
  40129c:	cmp	w8, #0x68
  4012a0:	b.eq	4012c8 <parse_argv+0x140>  // b.none
  4012a4:	b	4012a8 <parse_argv+0x120>
  4012a8:	ldr	w8, [sp, #4]
  4012ac:	cmp	w8, #0x76
  4012b0:	b.eq	4012e0 <parse_argv+0x158>  // b.none
  4012b4:	b	4012b8 <parse_argv+0x130>
  4012b8:	ldr	w8, [sp, #4]
  4012bc:	cmp	w8, #0x100
  4012c0:	b.eq	4012d4 <parse_argv+0x14c>  // b.none
  4012c4:	b	401300 <parse_argv+0x178>
  4012c8:	bl	40141c <help>
  4012cc:	stur	wzr, [x29, #-4]
  4012d0:	b	4013dc <parse_argv+0x254>
  4012d4:	bl	400d08 <version@plt>
  4012d8:	stur	w0, [x29, #-4]
  4012dc:	b	4013dc <parse_argv+0x254>
  4012e0:	adrp	x8, 420000 <completed.8445>
  4012e4:	add	x8, x8, #0x1
  4012e8:	mov	w9, #0x1                   	// #1
  4012ec:	strb	w9, [x8]
  4012f0:	b	401320 <parse_argv+0x198>
  4012f4:	mov	w8, #0xffffffea            	// #-22
  4012f8:	stur	w8, [x29, #-4]
  4012fc:	b	4013dc <parse_argv+0x254>
  401300:	mov	w8, wzr
  401304:	mov	w0, w8
  401308:	adrp	x1, 401000 <run+0x4c>
  40130c:	add	x1, x1, #0x5a0
  401310:	ldr	x2, [sp, #16]
  401314:	mov	w3, #0x38                  	// #56
  401318:	ldr	x4, [sp, #8]
  40131c:	bl	400d18 <log_assert_failed_unreachable_realm@plt>
  401320:	b	401250 <parse_argv+0xc8>
  401324:	adrp	x8, 420000 <completed.8445>
  401328:	add	x8, x8, #0x18
  40132c:	ldr	w9, [x8]
  401330:	ldur	w10, [x29, #-8]
  401334:	cmp	w9, w10
  401338:	b.ge	4013d4 <parse_argv+0x24c>  // b.tcont
  40133c:	mov	w8, #0x3                   	// #3
  401340:	stur	w8, [x29, #-24]
  401344:	mov	w8, #0x16                  	// #22
  401348:	movk	w8, #0x4000, lsl #16
  40134c:	stur	w8, [x29, #-28]
  401350:	str	wzr, [sp, #32]
  401354:	ldr	w0, [sp, #32]
  401358:	bl	400ca8 <log_get_max_level_realm@plt>
  40135c:	ldur	w8, [x29, #-24]
  401360:	and	w8, w8, #0x7
  401364:	cmp	w0, w8
  401368:	b.lt	4013ac <parse_argv+0x224>  // b.tstop
  40136c:	ldr	w8, [sp, #32]
  401370:	ldur	w9, [x29, #-24]
  401374:	orr	w0, w9, w8, lsl #10
  401378:	ldur	w1, [x29, #-28]
  40137c:	adrp	x10, 420000 <completed.8445>
  401380:	add	x10, x10, #0x20
  401384:	ldr	x6, [x10]
  401388:	ldr	x2, [sp, #16]
  40138c:	mov	w3, #0x3e                  	// #62
  401390:	adrp	x4, 401000 <run+0x4c>
  401394:	add	x4, x4, #0x5b1
  401398:	adrp	x5, 401000 <run+0x4c>
  40139c:	add	x5, x5, #0x5bc
  4013a0:	bl	400cb8 <log_internal_realm@plt>
  4013a4:	str	w0, [sp]
  4013a8:	b	4013c0 <parse_argv+0x238>
  4013ac:	ldur	w0, [x29, #-28]
  4013b0:	bl	400cc8 <abs@plt>
  4013b4:	mov	w8, wzr
  4013b8:	subs	w8, w8, w0, uxtb
  4013bc:	str	w8, [sp]
  4013c0:	ldr	w8, [sp]
  4013c4:	str	w8, [sp, #28]
  4013c8:	ldr	w8, [sp, #28]
  4013cc:	stur	w8, [x29, #-4]
  4013d0:	b	4013dc <parse_argv+0x254>
  4013d4:	mov	w8, #0x1                   	// #1
  4013d8:	stur	w8, [x29, #-4]
  4013dc:	ldur	w0, [x29, #-4]
  4013e0:	ldp	x29, x30, [sp, #64]
  4013e4:	add	sp, sp, #0x50
  4013e8:	ret

00000000004013ec <yes_no>:
  4013ec:	sub	sp, sp, #0x10
  4013f0:	adrp	x8, 401000 <run+0x4c>
  4013f4:	add	x8, x8, #0x695
  4013f8:	adrp	x9, 401000 <run+0x4c>
  4013fc:	add	x9, x9, #0x699
  401400:	and	w10, w0, #0x1
  401404:	strb	w10, [sp, #15]
  401408:	ldrb	w10, [sp, #15]
  40140c:	tst	w10, #0x1
  401410:	csel	x0, x8, x9, ne  // ne = any
  401414:	add	sp, sp, #0x10
  401418:	ret

000000000040141c <help>:
  40141c:	stp	x29, x30, [sp, #-16]!
  401420:	mov	x29, sp
  401424:	adrp	x8, 420000 <completed.8445>
  401428:	add	x8, x8, #0x20
  40142c:	adrp	x0, 401000 <run+0x4c>
  401430:	add	x0, x0, #0x5d3
  401434:	ldr	x1, [x8]
  401438:	bl	400d28 <printf@plt>
  40143c:	ldp	x29, x30, [sp], #16
  401440:	ret

0000000000401444 <ALIGN_TO>:
  401444:	sub	sp, sp, #0x10
  401448:	str	x0, [sp, #8]
  40144c:	str	x1, [sp]
  401450:	ldr	x8, [sp, #8]
  401454:	ldr	x9, [sp]
  401458:	add	x8, x8, x9
  40145c:	subs	x8, x8, #0x1
  401460:	ldr	x9, [sp]
  401464:	subs	x9, x9, #0x1
  401468:	bic	x0, x8, x9
  40146c:	add	sp, sp, #0x10
  401470:	ret
  401474:	udf	#0

0000000000401478 <__libc_csu_init>:
  401478:	stp	x29, x30, [sp, #-64]!
  40147c:	mov	x29, sp
  401480:	stp	x19, x20, [sp, #16]
  401484:	adrp	x20, 41f000 <__FRAME_END__+0x1d7f0>
  401488:	add	x20, x20, #0xd10
  40148c:	stp	x21, x22, [sp, #32]
  401490:	adrp	x21, 41f000 <__FRAME_END__+0x1d7f0>
  401494:	add	x21, x21, #0xd08
  401498:	sub	x20, x20, x21
  40149c:	mov	w22, w0
  4014a0:	stp	x23, x24, [sp, #48]
  4014a4:	mov	x23, x1
  4014a8:	mov	x24, x2
  4014ac:	bl	400bd0 <_init>
  4014b0:	cmp	xzr, x20, asr #3
  4014b4:	b.eq	4014e0 <__libc_csu_init+0x68>  // b.none
  4014b8:	asr	x20, x20, #3
  4014bc:	mov	x19, #0x0                   	// #0
  4014c0:	ldr	x3, [x21, x19, lsl #3]
  4014c4:	mov	x2, x24
  4014c8:	add	x19, x19, #0x1
  4014cc:	mov	x1, x23
  4014d0:	mov	w0, w22
  4014d4:	blr	x3
  4014d8:	cmp	x20, x19
  4014dc:	b.ne	4014c0 <__libc_csu_init+0x48>  // b.any
  4014e0:	ldp	x19, x20, [sp, #16]
  4014e4:	ldp	x21, x22, [sp, #32]
  4014e8:	ldp	x23, x24, [sp, #48]
  4014ec:	ldp	x29, x30, [sp], #64
  4014f0:	ret
  4014f4:	nop

00000000004014f8 <__libc_csu_fini>:
  4014f8:	ret

Disassembly of section .fini:

00000000004014fc <_fini>:
  4014fc:	stp	x29, x30, [sp, #-16]!
  401500:	mov	x29, sp
  401504:	ldp	x29, x30, [sp], #16
  401508:	ret
