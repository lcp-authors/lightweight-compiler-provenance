
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//normal.mod_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_normal_free_menu-0x268>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	mov	x29, sp
       8:	str	x19, [sp, #16]
       c:	mov	x19, x0
      10:	bl	2218 <read_command_list>
      14:	mov	x0, x19
      18:	bl	2c60 <read_fs_list>
      1c:	mov	x0, x19
      20:	bl	9230 <read_crypto_list>
      24:	mov	x0, x19
      28:	bl	9cf0 <read_terminal_list>
      2c:	mov	x0, x19
      30:	ldr	x19, [sp, #16]
      34:	ldp	x29, x30, [sp], #32
      38:	b	0 <grub_gettext_reread_prefix>
      3c:	nop
      40:	stp	x29, x30, [sp, #-32]!
      44:	mov	x0, x1
      48:	mov	x29, sp
      4c:	str	x19, [sp, #16]
      50:	mov	x19, x1
      54:	bl	0 <grub_normal_free_menu-0x268>
      58:	cbz	x19, 6c <grub_normal_free_menu-0x1fc>
      5c:	mov	x0, x19
      60:	ldr	x19, [sp, #16]
      64:	ldp	x29, x30, [sp], #32
      68:	b	0 <grub_strdup>
      6c:	mov	x0, #0x0                   	// #0
      70:	ldr	x19, [sp, #16]
      74:	ldp	x29, x30, [sp], #32
      78:	ret
      7c:	nop
      80:	stp	x29, x30, [sp, #-32]!
      84:	mov	x29, sp
      88:	stp	x19, x20, [sp, #16]
      8c:	mov	x20, x0
      90:	mov	x19, x2
      94:	b	a8 <grub_normal_free_menu-0x1c0>
      98:	ldrb	w1, [x0]
      9c:	cmp	w1, #0x23
      a0:	b.ne	d0 <grub_normal_free_menu-0x198>  // b.any
      a4:	bl	0 <grub_free>
      a8:	mov	x0, x19
      ac:	bl	ded8 <grub_file_getline>
      b0:	str	x0, [x20]
      b4:	cbnz	x0, 98 <grub_normal_free_menu-0x1d0>
      b8:	adrp	x0, 0 <grub_normal_free_menu-0x268>
      bc:	ldp	x19, x20, [sp, #16]
      c0:	ldr	x0, [x0]
      c4:	ldp	x29, x30, [sp], #32
      c8:	ldr	w0, [x0]
      cc:	ret
      d0:	mov	w0, #0x0                   	// #0
      d4:	ldp	x19, x20, [sp, #16]
      d8:	ldp	x29, x30, [sp], #32
      dc:	ret
	...
      e8:	stp	x29, x30, [sp, #-32]!
      ec:	mov	x29, sp
      f0:	ldrb	w0, [x1]
      f4:	str	x19, [sp, #16]
      f8:	mov	x19, x1
      fc:	cmp	w0, #0x31
     100:	cset	w0, eq  // eq = none
     104:	bl	9bc0 <grub_set_more>
     108:	mov	x0, x19
     10c:	ldr	x19, [sp, #16]
     110:	ldp	x29, x30, [sp], #32
     114:	b	0 <grub_strdup>
     118:	stp	x29, x30, [sp, #-16]!
     11c:	mov	x29, sp
     120:	bl	b438 <grub_cls>
     124:	mov	w0, #0x0                   	// #0
     128:	ldp	x29, x30, [sp], #16
     12c:	ret
     130:	stp	x29, x30, [sp, #-48]!
     134:	adrp	x3, 0 <grub_normal_free_menu-0x268>
     138:	mov	x29, sp
     13c:	ldr	x3, [x3]
     140:	stp	x19, x20, [sp, #16]
     144:	mov	w20, w1
     148:	stp	x21, x22, [sp, #32]
     14c:	mov	w19, w2
     150:	mov	x22, x0
     154:	ldr	x1, [x3]
     158:	cbz	w20, 1a0 <grub_normal_free_menu-0xc8>
     15c:	adrp	x0, 0 <grub_normal_free_menu-0x268>
     160:	orr	w19, w20, w19
     164:	ldr	x0, [x0]
     168:	blr	x1
     16c:	mov	x21, x0
     170:	cbnz	x21, 17c <grub_normal_free_menu-0xec>
     174:	b	1b8 <grub_normal_free_menu-0xb0>
     178:	cbnz	w19, 1d4 <grub_normal_free_menu-0x94>
     17c:	mov	x0, x21
     180:	bl	16b0 <grub_cmdline_get>
     184:	str	x0, [x22]
     188:	cbz	x0, 178 <grub_normal_free_menu-0xf0>
     18c:	mov	w0, #0x0                   	// #0
     190:	ldp	x19, x20, [sp, #16]
     194:	ldp	x21, x22, [sp, #32]
     198:	ldp	x29, x30, [sp], #48
     19c:	ret
     1a0:	adrp	x0, 0 <grub_normal_free_menu-0x268>
     1a4:	orr	w19, w20, w19
     1a8:	ldr	x0, [x0]
     1ac:	blr	x1
     1b0:	mov	x21, x0
     1b4:	cbnz	x21, 17c <grub_normal_free_menu-0xec>
     1b8:	adrp	x0, 0 <grub_normal_free_menu-0x268>
     1bc:	ldp	x19, x20, [sp, #16]
     1c0:	ldr	x0, [x0]
     1c4:	ldp	x21, x22, [sp, #32]
     1c8:	ldr	w0, [x0]
     1cc:	ldp	x29, x30, [sp], #48
     1d0:	ret
     1d4:	bl	0 <grub_free>
     1d8:	adrp	x0, 0 <grub_normal_free_menu-0x268>
     1dc:	ldp	x19, x20, [sp, #16]
     1e0:	ldr	x0, [x0]
     1e4:	ldr	w0, [x0]
     1e8:	str	xzr, [x22]
     1ec:	ldp	x21, x22, [sp, #32]
     1f0:	ldp	x29, x30, [sp], #48
     1f4:	ret
	...
     218:	mov	w2, #0x0                   	// #0
     21c:	b	130 <grub_normal_free_menu-0x138>
     220:	adrp	x0, 0 <grub_normal_free_menu-0x268>
     224:	ldr	x2, [x0]
     228:	ldp	w0, w1, [x2]
     22c:	cmp	w1, w0
     230:	b.le	244 <grub_normal_free_menu-0x24>
     234:	add	w1, w0, #0x1
     238:	mov	w0, #0x0                   	// #0
     23c:	str	w1, [x2]
     240:	ret
     244:	adrp	x1, 0 <grub_normal_free_menu-0x268>
     248:	mov	w0, #0x12                  	// #18
     24c:	ldr	x1, [x1]
     250:	b	0 <grub_error>
     254:	nop
	...

0000000000000268 <grub_normal_free_menu>:
     268:	stp	x29, x30, [sp, #-48]!
     26c:	mov	x29, sp
     270:	stp	x21, x22, [sp, #32]
     274:	mov	x22, x0
     278:	ldr	x21, [x0, #8]
     27c:	cbz	x21, 324 <grub_normal_free_menu+0xbc>
     280:	stp	x19, x20, [sp, #16]
     284:	b	2bc <grub_normal_free_menu+0x54>
     288:	ldr	x1, [x20, #56]
     28c:	cbnz	x1, 2f0 <grub_normal_free_menu+0x88>
     290:	ldr	x0, [x20, #8]
     294:	bl	0 <grub_free>
     298:	ldr	x0, [x20, #24]
     29c:	bl	0 <grub_free>
     2a0:	ldr	x0, [x20]
     2a4:	bl	0 <grub_free>
     2a8:	ldr	x0, [x20, #40]
     2ac:	bl	0 <grub_free>
     2b0:	mov	x0, x20
     2b4:	bl	0 <grub_free>
     2b8:	cbz	x21, 320 <grub_normal_free_menu+0xb8>
     2bc:	ldr	x19, [x21, #32]
     2c0:	mov	x20, x21
     2c4:	ldr	x21, [x21, #72]
     2c8:	cbz	x19, 288 <grub_normal_free_menu+0x20>
     2cc:	nop
     2d0:	ldr	x0, [x19]
     2d4:	bl	0 <grub_free>
     2d8:	ldr	x19, [x19, #8]
     2dc:	cbnz	x19, 2d0 <grub_normal_free_menu+0x68>
     2e0:	ldr	x0, [x20, #32]
     2e4:	bl	0 <grub_free>
     2e8:	ldr	x1, [x20, #56]
     2ec:	cbz	x1, 290 <grub_normal_free_menu+0x28>
     2f0:	ldr	x0, [x1]
     2f4:	cbz	x0, 314 <grub_normal_free_menu+0xac>
     2f8:	mov	x19, #0x8                   	// #8
     2fc:	nop
     300:	bl	0 <grub_free>
     304:	ldr	x1, [x20, #56]
     308:	ldr	x0, [x1, x19]
     30c:	add	x19, x19, #0x8
     310:	cbnz	x0, 300 <grub_normal_free_menu+0x98>
     314:	mov	x0, x1
     318:	bl	0 <grub_free>
     31c:	b	290 <grub_normal_free_menu+0x28>
     320:	ldp	x19, x20, [sp, #16]
     324:	mov	x0, x22
     328:	bl	0 <grub_free>
     32c:	ldp	x21, x22, [sp, #32]
     330:	ldp	x29, x30, [sp], #48
     334:	b	b518 <grub_env_unset_menu>

0000000000000338 <grub_normal_init_page>:
     338:	stp	x29, x30, [sp, #-64]!
     33c:	mov	x29, sp
     340:	stp	x21, x22, [sp, #32]
     344:	mov	w21, w1
     348:	ldr	x1, [x0, #80]
     34c:	stp	x19, x20, [sp, #16]
     350:	mov	x19, x0
     354:	cbz	x1, 43c <grub_normal_init_page+0x104>
     358:	blr	x1
     35c:	adrp	x1, 0 <grub_normal_free_menu-0x268>
     360:	adrp	x0, 0 <grub_normal_free_menu-0x268>
     364:	ldr	x1, [x1]
     368:	ldr	x0, [x0]
     36c:	ldr	x1, [x1]
     370:	blr	x1
     374:	adrp	x1, 0 <grub_normal_free_menu-0x268>
     378:	ldr	x1, [x1]
     37c:	bl	0 <grub_xasprintf>
     380:	mov	x20, x0
     384:	cbz	x0, 42c <grub_normal_init_page+0xf4>
     388:	add	x2, sp, #0x38
     38c:	add	x1, sp, #0x30
     390:	bl	c018 <grub_utf8_to_ucs4_alloc>
     394:	mov	x22, x0
     398:	mov	x0, x20
     39c:	bl	0 <grub_free>
     3a0:	tbnz	x22, #63, 42c <grub_normal_init_page+0xf4>
     3a4:	ldp	x0, x1, [sp, #48]
     3a8:	mov	x2, x19
     3ac:	bl	82b8 <grub_getstringwidth>
     3b0:	mov	x20, x0
     3b4:	ldr	x1, [x19, #56]
     3b8:	mov	x0, x19
     3bc:	blr	x1
     3c0:	ands	w2, w0, #0xffff
     3c4:	mov	w0, #0x50                  	// #80
     3c8:	csel	w2, w2, w0, ne  // ne = any
     3cc:	sub	w2, w2, w20
     3d0:	mov	w1, #0x0                   	// #0
     3d4:	cmn	w2, #0x2
     3d8:	mov	x0, x19
     3dc:	add	w2, w2, w2, lsr #31
     3e0:	ldr	x3, [x19, #72]
     3e4:	ubfx	x2, x2, #1, #16
     3e8:	csel	w2, w2, wzr, gt
     3ec:	bfxil	w1, w2, #0, #16
     3f0:	bfi	w1, w21, #16, #16
     3f4:	blr	x3
     3f8:	ldp	x0, x1, [sp, #48]
     3fc:	mov	x4, x19
     400:	mov	w3, #0x0                   	// #0
     404:	mov	w2, #0x0                   	// #0
     408:	bl	af28 <grub_print_ucs4>
     40c:	mov	x1, x19
     410:	mov	w0, #0xa                   	// #10
     414:	bl	9f48 <grub_putcode>
     418:	mov	w0, #0xa                   	// #10
     41c:	mov	x1, x19
     420:	bl	9f48 <grub_putcode>
     424:	ldr	x0, [sp, #48]
     428:	bl	0 <grub_free>
     42c:	ldp	x19, x20, [sp, #16]
     430:	ldp	x21, x22, [sp, #32]
     434:	ldp	x29, x30, [sp], #64
     438:	ret
     43c:	mov	x1, x0
     440:	mov	w0, #0xa                   	// #10
     444:	bl	9f48 <grub_putcode>
     448:	ldr	x1, [x19, #104]
     44c:	cbz	x1, 35c <grub_normal_init_page+0x24>
     450:	mov	x0, x19
     454:	b	358 <grub_normal_init_page+0x20>
	...

0000000000000470 <grub_normal_execute>:
     470:	stp	x29, x30, [sp, #-112]!
     474:	mov	x29, sp
     478:	stp	x19, x20, [sp, #16]
     47c:	mov	x19, x0
     480:	mov	w20, w1
     484:	stp	x21, x22, [sp, #32]
     488:	mov	w22, w2
     48c:	cbz	w1, 62c <grub_normal_execute+0x1bc>
     490:	cbz	x19, 61c <grub_normal_execute+0x1ac>
     494:	stp	x25, x26, [sp, #64]
     498:	bl	b538 <grub_env_get_menu>
     49c:	mov	x25, x0
     4a0:	cbz	x0, 68c <grub_normal_execute+0x21c>
     4a4:	stp	x23, x24, [sp, #48]
     4a8:	mov	x0, x19
     4ac:	mov	w1, #0x33                  	// #51
     4b0:	bl	0 <grub_file_open>
     4b4:	mov	x23, x0
     4b8:	cbz	x0, 6d8 <grub_normal_execute+0x268>
     4bc:	mov	x1, #0x0                   	// #0
     4c0:	bl	0 <grub_bufio_open>
     4c4:	mov	x21, x0
     4c8:	cbz	x0, 6fc <grub_normal_execute+0x28c>
     4cc:	adrp	x0, 0 <grub_normal_free_menu-0x268>
     4d0:	stp	x27, x28, [sp, #80]
     4d4:	ldr	x26, [x0]
     4d8:	mov	x0, x26
     4dc:	bl	0 <grub_env_get>
     4e0:	mov	x24, x0
     4e4:	cbz	x0, 4f0 <grub_normal_execute+0x80>
     4e8:	bl	0 <grub_strdup>
     4ec:	mov	x24, x0
     4f0:	adrp	x0, 0 <grub_normal_free_menu-0x268>
     4f4:	ldr	x27, [x0]
     4f8:	mov	x0, x27
     4fc:	bl	0 <grub_env_get>
     500:	mov	x23, x0
     504:	cbz	x0, 510 <grub_normal_execute+0xa0>
     508:	bl	0 <grub_strdup>
     50c:	mov	x23, x0
     510:	ldrb	w0, [x19]
     514:	cmp	w0, #0x28
     518:	b.eq	6a8 <grub_normal_execute+0x238>  // b.none
     51c:	adrp	x0, 0 <grub_normal_free_menu-0x268>
     520:	ldr	x0, [x0]
     524:	bl	0 <grub_env_get>
     528:	mov	x1, x0
     52c:	adrp	x3, 0 <grub_normal_free_menu-0x268>
     530:	mov	x2, x19
     534:	ldr	x0, [x3]
     538:	bl	0 <grub_xasprintf>
     53c:	mov	x19, x0
     540:	cbz	x0, 578 <grub_normal_execute+0x108>
     544:	mov	x1, x0
     548:	mov	x0, x26
     54c:	bl	0 <grub_env_set>
     550:	mov	x0, x19
     554:	mov	w1, #0x2f                  	// #47
     558:	bl	0 <grub_strrchr>
     55c:	cbz	x0, 564 <grub_normal_execute+0xf4>
     560:	strb	wzr, [x0]
     564:	mov	x1, x19
     568:	mov	x0, x27
     56c:	bl	0 <grub_env_set>
     570:	mov	x0, x19
     574:	bl	0 <grub_free>
     578:	mov	x0, x26
     57c:	bl	0 <grub_env_export>
     580:	mov	x0, x27
     584:	bl	0 <grub_env_export>
     588:	adrp	x0, 0 <grub_normal_free_menu-0x268>
     58c:	adrp	x28, 0 <grub_normal_free_menu-0x268>
     590:	ldr	x19, [x0]
     594:	b	5b0 <grub_normal_execute+0x140>
     598:	ldr	x0, [sp, #104]
     59c:	cbz	x0, 5d0 <grub_normal_execute+0x160>
     5a0:	ldr	x1, [x28]
     5a4:	bl	dff0 <grub_normal_parse_line>
     5a8:	ldr	x0, [sp, #104]
     5ac:	bl	0 <grub_free>
     5b0:	bl	0 <grub_print_error>
     5b4:	str	wzr, [x19]
     5b8:	mov	x2, x21
     5bc:	add	x0, sp, #0x68
     5c0:	mov	w1, #0x0                   	// #0
     5c4:	bl	80 <grub_normal_free_menu-0x1e8>
     5c8:	mov	x2, x21
     5cc:	cbz	w0, 598 <grub_normal_execute+0x128>
     5d0:	mov	x0, x26
     5d4:	cbz	x24, 6d0 <grub_normal_execute+0x260>
     5d8:	mov	x1, x24
     5dc:	bl	0 <grub_env_set>
     5e0:	mov	x0, x27
     5e4:	cbz	x23, 6c8 <grub_normal_execute+0x258>
     5e8:	mov	x1, x23
     5ec:	bl	0 <grub_env_set>
     5f0:	mov	x0, x24
     5f4:	bl	0 <grub_free>
     5f8:	mov	x0, x23
     5fc:	bl	0 <grub_free>
     600:	mov	x0, x21
     604:	bl	0 <grub_file_close>
     608:	str	wzr, [x19]
     60c:	cbz	w22, 658 <grub_normal_execute+0x1e8>
     610:	ldp	x23, x24, [sp, #48]
     614:	ldp	x25, x26, [sp, #64]
     618:	ldp	x27, x28, [sp, #80]
     61c:	ldp	x19, x20, [sp, #16]
     620:	ldp	x21, x22, [sp, #32]
     624:	ldp	x29, x30, [sp], #112
     628:	ret
     62c:	adrp	x0, 0 <grub_normal_free_menu-0x268>
     630:	ldr	x21, [x0]
     634:	mov	x0, x21
     638:	bl	0 <grub_env_get>
     63c:	bl	0 <grub_normal_free_menu-0x268>
     640:	adrp	x2, 0 <grub_normal_free_menu-0x268>
     644:	mov	x0, x21
     648:	mov	x1, #0x0                   	// #0
     64c:	ldr	x2, [x2]
     650:	bl	0 <grub_register_variable_hook>
     654:	b	490 <grub_normal_execute+0x20>
     658:	ldr	w0, [x25]
     65c:	cbz	w0, 610 <grub_normal_execute+0x1a0>
     660:	mov	w1, w20
     664:	mov	x0, x25
     668:	mov	w2, #0x0                   	// #0
     66c:	bl	42c0 <grub_show_menu>
     670:	cbz	w20, 610 <grub_normal_execute+0x1a0>
     674:	mov	x0, x25
     678:	bl	268 <grub_normal_free_menu>
     67c:	ldp	x23, x24, [sp, #48]
     680:	ldp	x25, x26, [sp, #64]
     684:	ldp	x27, x28, [sp, #80]
     688:	b	61c <grub_normal_execute+0x1ac>
     68c:	mov	x0, #0x10                  	// #16
     690:	bl	0 <grub_zalloc>
     694:	mov	x25, x0
     698:	cbz	x0, 6dc <grub_normal_execute+0x26c>
     69c:	stp	x23, x24, [sp, #48]
     6a0:	bl	b558 <grub_env_set_menu>
     6a4:	b	4a8 <grub_normal_execute+0x38>
     6a8:	mov	x1, x19
     6ac:	mov	x0, x26
     6b0:	bl	0 <grub_env_set>
     6b4:	mov	x0, x19
     6b8:	bl	0 <grub_strdup>
     6bc:	mov	x19, x0
     6c0:	cbnz	x0, 550 <grub_normal_execute+0xe0>
     6c4:	b	578 <grub_normal_execute+0x108>
     6c8:	bl	0 <grub_env_unset>
     6cc:	b	5f0 <grub_normal_execute+0x180>
     6d0:	bl	0 <grub_env_unset>
     6d4:	b	5e0 <grub_normal_execute+0x170>
     6d8:	ldp	x23, x24, [sp, #48]
     6dc:	adrp	x0, 0 <grub_normal_free_menu-0x268>
     6e0:	ldp	x25, x26, [sp, #64]
     6e4:	ldr	x0, [x0]
     6e8:	ldp	x19, x20, [sp, #16]
     6ec:	str	wzr, [x0]
     6f0:	ldp	x21, x22, [sp, #32]
     6f4:	ldp	x29, x30, [sp], #112
     6f8:	ret
     6fc:	mov	x0, x23
     700:	bl	0 <grub_file_close>
     704:	adrp	x0, 0 <grub_normal_free_menu-0x268>
     708:	ldp	x23, x24, [sp, #48]
     70c:	ldr	x0, [x0]
     710:	ldp	x25, x26, [sp, #64]
     714:	str	wzr, [x0]
     718:	b	61c <grub_normal_execute+0x1ac>
     71c:	nop
	...

0000000000000760 <grub_cmdline_run>:
     760:	stp	x29, x30, [sp, #-64]!
     764:	cmp	w1, #0x0
     768:	mov	x29, sp
     76c:	stp	x19, x20, [sp, #16]
     770:	mov	w20, w0
     774:	cset	w19, ne  // ne = any
     778:	mov	x0, #0x0                   	// #0
     77c:	bl	2830 <grub_auth_check_authentication>
     780:	cmp	w0, #0x0
     784:	ccmp	w19, #0x0, #0x4, ne  // ne = any
     788:	b.ne	778 <grub_cmdline_run+0x18>  // b.any
     78c:	cbnz	w0, 8f8 <grub_cmdline_run+0x198>
     790:	adrp	x1, 0 <grub_normal_free_menu-0x268>
     794:	stp	x21, x22, [sp, #32]
     798:	adrp	x0, 0 <grub_normal_free_menu-0x268>
     79c:	ldr	x21, [x1]
     7a0:	ldr	x0, [x0]
     7a4:	ldr	x1, [x21]
     7a8:	blr	x1
     7ac:	mov	x19, x0
     7b0:	adrp	x2, 0 <grub_normal_free_menu-0x268>
     7b4:	ldr	x1, [x21]
     7b8:	ldr	x0, [x2]
     7bc:	blr	x1
     7c0:	adrp	x1, 0 <grub_normal_free_menu-0x268>
     7c4:	cmp	w20, #0x0
     7c8:	ldr	x1, [x1]
     7cc:	csel	x1, x19, x1, ne  // ne = any
     7d0:	bl	0 <grub_xasprintf>
     7d4:	mov	x21, x0
     7d8:	cbz	x0, 7f8 <grub_cmdline_run+0x98>
     7dc:	adrp	x0, 0 <grub_normal_free_menu-0x268>
     7e0:	ldr	x0, [x0]
     7e4:	ldr	x19, [x0]
     7e8:	cbnz	x19, 8a4 <grub_cmdline_run+0x144>
     7ec:	nop
     7f0:	mov	x0, x21
     7f4:	bl	0 <grub_free>
     7f8:	adrp	x0, 0 <grub_normal_free_menu-0x268>
     7fc:	str	xzr, [sp, #56]
     800:	ldr	x19, [x0]
     804:	ldr	w0, [x19]
     808:	cbnz	w0, 85c <grub_cmdline_run+0xfc>
     80c:	adrp	x0, 0 <grub_normal_free_menu-0x268>
     810:	adrp	x22, 0 <grub_normal_free_menu-0x268>
     814:	ldr	x21, [x0]
     818:	b	838 <grub_cmdline_run+0xd8>
     81c:	ldr	x1, [x22]
     820:	bl	dff0 <grub_normal_parse_line>
     824:	ldr	x0, [sp, #56]
     828:	bl	0 <grub_free>
     82c:	str	xzr, [sp, #56]
     830:	ldr	w1, [x19]
     834:	cbnz	w1, 85c <grub_cmdline_run+0xfc>
     838:	bl	0 <grub_print_error>
     83c:	str	wzr, [x21]
     840:	mov	w2, w20
     844:	add	x0, sp, #0x38
     848:	mov	w1, #0x0                   	// #0
     84c:	bl	130 <grub_normal_free_menu-0x138>
     850:	ldr	x0, [sp, #56]
     854:	mov	x2, #0x0                   	// #0
     858:	cbnz	x0, 81c <grub_cmdline_run+0xbc>
     85c:	ldp	x19, x20, [sp, #16]
     860:	ldp	x21, x22, [sp, #32]
     864:	ldp	x29, x30, [sp], #64
     868:	ret
     86c:	mov	w2, #0x6                   	// #6
     870:	mov	w1, #0x3                   	// #3
     874:	bl	83e8 <grub_print_message_indented>
     878:	mov	x1, x19
     87c:	mov	w0, #0xa                   	// #10
     880:	bl	9f48 <grub_putcode>
     884:	mov	x1, x19
     888:	mov	w0, #0xa                   	// #10
     88c:	bl	9f48 <grub_putcode>
     890:	mov	x1, x19
     894:	mov	w0, #0xa                   	// #10
     898:	bl	9f48 <grub_putcode>
     89c:	ldr	x19, [x19]
     8a0:	cbz	x19, 7f0 <grub_cmdline_run+0x90>
     8a4:	mov	x0, x19
     8a8:	mov	w1, #0x1                   	// #1
     8ac:	bl	338 <grub_normal_init_page>
     8b0:	ldr	x2, [x19, #96]
     8b4:	mov	x0, x19
     8b8:	mov	w1, #0x1                   	// #1
     8bc:	cbz	x2, 8c4 <grub_cmdline_run+0x164>
     8c0:	blr	x2
     8c4:	ldr	x1, [x19, #56]
     8c8:	mov	x0, x19
     8cc:	blr	x1
     8d0:	sub	w1, w0, #0x1
     8d4:	and	w1, w1, #0xffff
     8d8:	mov	x3, x19
     8dc:	mov	x0, x21
     8e0:	cmp	w1, #0x1c
     8e4:	b.hi	86c <grub_cmdline_run+0x10c>  // b.pmore
     8e8:	mov	w2, #0x0                   	// #0
     8ec:	mov	w1, #0x0                   	// #0
     8f0:	bl	83e8 <grub_print_message_indented>
     8f4:	b	878 <grub_cmdline_run+0x118>
     8f8:	bl	0 <grub_print_error>
     8fc:	adrp	x0, 0 <grub_normal_free_menu-0x268>
     900:	ldp	x19, x20, [sp, #16]
     904:	ldr	x0, [x0]
     908:	str	wzr, [x0]
     90c:	ldp	x29, x30, [sp], #64
     910:	ret
     914:	nop
	...

0000000000000958 <grub_enter_normal_mode>:
     958:	stp	x29, x30, [sp, #-32]!
     95c:	adrp	x3, 0 <grub_normal_free_menu-0x268>
     960:	mov	w2, #0x0                   	// #0
     964:	mov	x29, sp
     968:	str	x19, [sp, #16]
     96c:	mov	w1, #0x0                   	// #0
     970:	ldr	x19, [x3]
     974:	ldr	w3, [x19, #4]
     978:	add	w3, w3, #0x1
     97c:	str	w3, [x19, #4]
     980:	bl	470 <grub_normal_execute>
     984:	mov	w1, #0x1                   	// #1
     988:	mov	w0, #0x0                   	// #0
     98c:	bl	760 <grub_cmdline_run>
     990:	ldp	w1, w0, [x19]
     994:	sub	w0, w0, #0x1
     998:	str	w0, [x19, #4]
     99c:	cbz	w1, 9a8 <grub_enter_normal_mode+0x50>
     9a0:	sub	w1, w1, #0x1
     9a4:	str	w1, [x19]
     9a8:	ldr	x19, [sp, #16]
     9ac:	ldp	x29, x30, [sp], #32
     9b0:	ret
     9b4:	nop
	...
     9c0:	stp	x29, x30, [sp, #-32]!
     9c4:	mov	x29, sp
     9c8:	cbnz	w1, a14 <grub_enter_normal_mode+0xbc>
     9cc:	adrp	x0, 0 <grub_normal_free_menu-0x268>
     9d0:	ldr	x0, [x0]
     9d4:	bl	0 <grub_env_get>
     9d8:	mov	x1, x0
     9dc:	cbz	x0, a18 <grub_enter_normal_mode+0xc0>
     9e0:	adrp	x0, 0 <grub_normal_free_menu-0x268>
     9e4:	str	x19, [sp, #16]
     9e8:	ldr	x0, [x0]
     9ec:	bl	0 <grub_xasprintf>
     9f0:	mov	x19, x0
     9f4:	cbz	x0, a28 <grub_enter_normal_mode+0xd0>
     9f8:	bl	958 <grub_enter_normal_mode>
     9fc:	mov	x0, x19
     a00:	bl	0 <grub_free>
     a04:	mov	w0, #0x0                   	// #0
     a08:	ldr	x19, [sp, #16]
     a0c:	ldp	x29, x30, [sp], #32
     a10:	ret
     a14:	ldr	x0, [x2]
     a18:	bl	958 <grub_enter_normal_mode>
     a1c:	mov	w0, #0x0                   	// #0
     a20:	ldp	x29, x30, [sp], #32
     a24:	ret
     a28:	mov	w0, #0x0                   	// #0
     a2c:	ldr	x19, [sp, #16]
     a30:	ldp	x29, x30, [sp], #32
     a34:	ret
	...

0000000000000a48 <grub_mod_init>:
     a48:	stp	x29, x30, [sp, #-48]!
     a4c:	adrp	x1, 0 <grub_normal_free_menu-0x268>
     a50:	mov	x29, sp
     a54:	stp	x19, x20, [sp, #16]
     a58:	mov	x19, x0
     a5c:	ldr	x0, [x1]
     a60:	stp	x21, x22, [sp, #32]
     a64:	bl	0 <grub_dl_load>
     a68:	adrp	x0, 0 <grub_normal_free_menu-0x268>
     a6c:	ldr	x0, [x0]
     a70:	str	wzr, [x0]
     a74:	bl	2af0 <grub_normal_auth_init>
     a78:	bl	b880 <grub_context_init>
     a7c:	bl	e060 <grub_script_init>
     a80:	bl	11d88 <grub_menu_init>
     a84:	adrp	x0, 0 <grub_normal_free_menu-0x268>
     a88:	adrp	x2, 0 <grub_normal_free_menu-0x268>
     a8c:	adrp	x1, 0 <grub_normal_free_menu-0x268>
     a90:	ldr	x0, [x0]
     a94:	ldr	x20, [x2]
     a98:	ldr	x2, [x1]
     a9c:	ldr	x1, [x0]
     aa0:	str	x2, [x0]
     aa4:	str	x1, [x20, #8]
     aa8:	cbz	x19, ab4 <grub_mod_init+0x6c>
     aac:	mov	x0, x19
     ab0:	bl	0 <grub_dl_ref>
     ab4:	adrp	x2, 0 <grub_normal_free_menu-0x268>
     ab8:	adrp	x1, 0 <grub_normal_free_menu-0x268>
     abc:	adrp	x0, 0 <grub_normal_free_menu-0x268>
     ac0:	mov	w4, #0x0                   	// #0
     ac4:	ldr	x3, [x2]
     ac8:	mov	x2, #0x0                   	// #0
     acc:	ldr	x1, [x1]
     ad0:	ldr	x0, [x0]
     ad4:	bl	0 <grub_register_command_prio>
     ad8:	mov	x1, x0
     adc:	mov	w0, #0x32                  	// #50
     ae0:	str	x1, [x20, #16]
     ae4:	bl	1558 <grub_set_history>
     ae8:	adrp	x2, 0 <grub_normal_free_menu-0x268>
     aec:	adrp	x0, 0 <grub_normal_free_menu-0x268>
     af0:	mov	x1, #0x0                   	// #0
     af4:	ldr	x19, [x2]
     af8:	ldr	x2, [x0]
     afc:	mov	x0, x19
     b00:	bl	0 <grub_register_variable_hook>
     b04:	mov	x0, x19
     b08:	bl	0 <grub_env_export>
     b0c:	adrp	x2, 0 <grub_normal_free_menu-0x268>
     b10:	adrp	x1, 0 <grub_normal_free_menu-0x268>
     b14:	adrp	x0, 0 <grub_normal_free_menu-0x268>
     b18:	mov	w4, #0x0                   	// #0
     b1c:	ldr	x3, [x2]
     b20:	mov	x2, #0x0                   	// #0
     b24:	ldr	x1, [x1]
     b28:	ldr	x0, [x0]
     b2c:	bl	0 <grub_register_command_prio>
     b30:	adrp	x2, 0 <grub_normal_free_menu-0x268>
     b34:	adrp	x1, 0 <grub_normal_free_menu-0x268>
     b38:	adrp	x0, 0 <grub_normal_free_menu-0x268>
     b3c:	mov	w4, #0x0                   	// #0
     b40:	ldr	x3, [x2]
     b44:	mov	x2, #0x0                   	// #0
     b48:	ldr	x1, [x1]
     b4c:	ldr	x0, [x0]
     b50:	bl	0 <grub_register_command_prio>
     b54:	adrp	x2, 0 <grub_normal_free_menu-0x268>
     b58:	adrp	x0, 0 <grub_normal_free_menu-0x268>
     b5c:	mov	x1, #0x0                   	// #0
     b60:	ldr	x2, [x2]
     b64:	ldr	x20, [x0]
     b68:	mov	x0, x20
     b6c:	bl	0 <grub_register_variable_hook>
     b70:	adrp	x2, 0 <grub_normal_free_menu-0x268>
     b74:	adrp	x0, 0 <grub_normal_free_menu-0x268>
     b78:	mov	x1, #0x0                   	// #0
     b7c:	ldr	x19, [x2]
     b80:	ldr	x2, [x0]
     b84:	mov	x0, x19
     b88:	bl	0 <grub_register_variable_hook>
     b8c:	mov	x0, x20
     b90:	bl	0 <grub_env_export>
     b94:	mov	x0, x19
     b98:	bl	0 <grub_env_export>
     b9c:	adrp	x1, 0 <grub_normal_free_menu-0x268>
     ba0:	mov	x0, x20
     ba4:	ldr	x1, [x1]
     ba8:	bl	0 <grub_env_set>
     bac:	adrp	x1, 0 <grub_normal_free_menu-0x268>
     bb0:	mov	x0, x19
     bb4:	ldr	x1, [x1]
     bb8:	bl	0 <grub_env_set>
     bbc:	adrp	x2, 0 <grub_normal_free_menu-0x268>
     bc0:	adrp	x1, 0 <grub_normal_free_menu-0x268>
     bc4:	adrp	x0, 0 <grub_normal_free_menu-0x268>
     bc8:	ldr	x19, [x2]
     bcc:	ldr	x20, [x1]
     bd0:	add	x22, x19, #0x50
     bd4:	ldr	x21, [x0]
     bd8:	b	be0 <grub_mod_init+0x198>
     bdc:	ldr	x20, [x19]
     be0:	mov	x1, x21
     be4:	mov	x0, x20
     be8:	bl	0 <grub_env_set>
     bec:	add	x19, x19, #0x8
     bf0:	mov	x0, x20
     bf4:	bl	0 <grub_env_export>
     bf8:	cmp	x19, x22
     bfc:	b.ne	bdc <grub_mod_init+0x194>  // b.any
     c00:	adrp	x1, 0 <grub_normal_free_menu-0x268>
     c04:	adrp	x0, 0 <grub_normal_free_menu-0x268>
     c08:	ldr	x19, [x1]
     c0c:	ldr	x1, [x0]
     c10:	mov	x0, x19
     c14:	bl	0 <grub_env_set>
     c18:	mov	x0, x19
     c1c:	bl	0 <grub_env_export>
     c20:	adrp	x1, 0 <grub_normal_free_menu-0x268>
     c24:	adrp	x0, 0 <grub_normal_free_menu-0x268>
     c28:	ldr	x19, [x1]
     c2c:	ldr	x1, [x0]
     c30:	mov	x0, x19
     c34:	bl	0 <grub_env_set>
     c38:	mov	x0, x19
     c3c:	ldp	x19, x20, [sp, #16]
     c40:	ldp	x21, x22, [sp, #32]
     c44:	ldp	x29, x30, [sp], #48
     c48:	b	0 <grub_env_export>
     c4c:	nop
	...

0000000000000d38 <grub_mod_fini>:
     d38:	stp	x29, x30, [sp, #-32]!
     d3c:	mov	x29, sp
     d40:	str	x19, [sp, #16]
     d44:	bl	b8f0 <grub_context_fini>
     d48:	bl	e1e8 <grub_script_fini>
     d4c:	bl	11e60 <grub_menu_fini>
     d50:	bl	2b60 <grub_normal_auth_fini>
     d54:	adrp	x2, 0 <grub_normal_free_menu-0x268>
     d58:	adrp	x1, 0 <grub_normal_free_menu-0x268>
     d5c:	mov	w0, #0x0                   	// #0
     d60:	ldr	x19, [x2]
     d64:	ldr	x1, [x1]
     d68:	ldr	x2, [x19, #8]
     d6c:	str	x2, [x1]
     d70:	bl	1558 <grub_set_history>
     d74:	adrp	x0, 0 <grub_normal_free_menu-0x268>
     d78:	mov	x2, #0x0                   	// #0
     d7c:	mov	x1, #0x0                   	// #0
     d80:	ldr	x0, [x0]
     d84:	bl	0 <grub_register_variable_hook>
     d88:	adrp	x1, 0 <grub_normal_free_menu-0x268>
     d8c:	ldr	x0, [x19, #16]
     d90:	ldr	x1, [x1]
     d94:	ldr	x19, [sp, #16]
     d98:	str	xzr, [x1]
     d9c:	ldp	x29, x30, [sp], #32
     da0:	b	0 <grub_unregister_command>
     da4:	nop
	...
     dc8:	cbz	w1, e40 <grub_mod_fini+0x108>
     dcc:	stp	x29, x30, [sp, #-48]!
     dd0:	sub	w1, w1, #0x1
     dd4:	mov	x29, sp
     dd8:	stp	x19, x20, [sp, #16]
     ddc:	mov	x19, x0
     de0:	mov	w0, #0x20                  	// #32
     de4:	str	x21, [sp, #32]
     de8:	add	x21, x19, #0x20
     dec:	mov	x20, x2
     df0:	umaddl	x21, w1, w0, x21
     df4:	nop
     df8:	ldr	w3, [x19, #16]
     dfc:	ldp	w4, w1, [x19, #4]
     e00:	add	x3, x3, x20
     e04:	ldr	x0, [x19, #24]
     e08:	udiv	x5, x3, x1
     e0c:	ldr	x2, [x0, #72]
     e10:	msub	x1, x5, x1, x3
     e14:	add	w4, w4, w5
     e18:	strh	w1, [x19]
     e1c:	strh	w4, [x19, #2]
     e20:	ldr	w1, [x19], #32
     e24:	blr	x2
     e28:	cmp	x21, x19
     e2c:	b.ne	df8 <grub_mod_fini+0xc0>  // b.any
     e30:	ldp	x19, x20, [sp, #16]
     e34:	ldr	x21, [sp, #32]
     e38:	ldp	x29, x30, [sp], #48
     e3c:	ret
     e40:	ret
     e44:	nop
     e48:	stp	x29, x30, [sp, #-32]!
     e4c:	mov	x29, sp
     e50:	ldr	w1, [x0, #16]
     e54:	str	x19, [sp, #16]
     e58:	mov	x19, x0
     e5c:	strh	w1, [x0]
     e60:	ldr	x0, [x0, #24]
     e64:	ldr	x1, [x0, #64]
     e68:	blr	x1
     e6c:	lsr	w1, w0, #16
     e70:	ldr	x2, [x19, #24]
     e74:	str	w1, [x19, #4]
     e78:	lsr	w3, w0, #16
     e7c:	strh	w3, [x19, #2]
     e80:	mov	x0, x2
     e84:	ldr	x1, [x2, #56]
     e88:	blr	x1
     e8c:	ands	w1, w0, #0xffff
     e90:	ldr	x2, [x19, #24]
     e94:	mov	w0, #0x50                  	// #80
     e98:	csel	w1, w1, w0, ne  // ne = any
     e9c:	str	w1, [x19, #8]
     ea0:	mov	x0, x2
     ea4:	ldr	x1, [x2, #56]
     ea8:	blr	x1
     eac:	lsr	w0, w0, #16
     eb0:	cmp	w0, #0x0
     eb4:	mov	w1, #0x18                  	// #24
     eb8:	csel	w0, w0, w1, ne  // ne = any
     ebc:	str	w0, [x19, #12]
     ec0:	ldr	x19, [sp, #16]
     ec4:	ldp	x29, x30, [sp], #32
     ec8:	ret
     ecc:	nop
     ed0:	cbz	w1, fd0 <grub_mod_fini+0x298>
     ed4:	stp	x29, x30, [sp, #-80]!
     ed8:	sub	w1, w1, #0x1
     edc:	mov	x29, sp
     ee0:	stp	x21, x22, [sp, #32]
     ee4:	sub	x21, x4, #0x1
     ee8:	sub	x21, x21, x3
     eec:	stp	x23, x24, [sp, #48]
     ef0:	add	x23, x0, #0x20
     ef4:	and	x21, x21, #0xfffffffffffffffc
     ef8:	stp	x19, x20, [sp, #16]
     efc:	mov	x19, x0
     f00:	mov	w0, #0x20                  	// #32
     f04:	add	x21, x21, #0x4
     f08:	mov	w20, w2
     f0c:	umaddl	x23, w1, w0, x23
     f10:	mov	x22, x3
     f14:	mov	x24, x4
     f18:	add	x21, x3, x21
     f1c:	str	x25, [sp, #64]
     f20:	cmp	x22, x24
     f24:	mov	x25, x22
     f28:	b.cc	f54 <grub_mod_fini+0x21c>  // b.lo, b.ul, b.last
     f2c:	b	fac <grub_mod_fini+0x274>
     f30:	ldr	w0, [x19, #4]
     f34:	sub	w0, w0, #0x1
     f38:	str	w0, [x19, #4]
     f3c:	ldr	x1, [x19, #24]
     f40:	mov	w0, #0xa                   	// #10
     f44:	bl	9f48 <grub_putcode>
     f48:	add	x25, x25, #0x4
     f4c:	cmp	x21, x25
     f50:	b.eq	fac <grub_mod_fini+0x274>  // b.none
     f54:	mov	w0, w20
     f58:	ldr	x1, [x19, #24]
     f5c:	cbnz	w20, f64 <grub_mod_fini+0x22c>
     f60:	ldr	w0, [x25]
     f64:	bl	9f48 <grub_putcode>
     f68:	ldrh	w0, [x19]
     f6c:	ldr	w1, [x19, #8]
     f70:	add	w0, w0, #0x1
     f74:	and	w0, w0, #0xffff
     f78:	strh	w0, [x19]
     f7c:	sub	w1, w1, #0x1
     f80:	cmp	w0, w1
     f84:	b.cc	f48 <grub_mod_fini+0x210>  // b.lo, b.ul, b.last
     f88:	ldr	w0, [x19, #12]
     f8c:	ldrh	w1, [x19, #2]
     f90:	strh	wzr, [x19]
     f94:	sub	w0, w0, #0x1
     f98:	add	w2, w1, #0x1
     f9c:	cmp	w1, w0
     fa0:	b.cs	f30 <grub_mod_fini+0x1f8>  // b.hs, b.nlast
     fa4:	strh	w2, [x19, #2]
     fa8:	b	f3c <grub_mod_fini+0x204>
     fac:	add	x19, x19, #0x20
     fb0:	cmp	x19, x23
     fb4:	b.ne	f20 <grub_mod_fini+0x1e8>  // b.any
     fb8:	ldp	x19, x20, [sp, #16]
     fbc:	ldp	x21, x22, [sp, #32]
     fc0:	ldp	x23, x24, [sp, #48]
     fc4:	ldr	x25, [sp, #64]
     fc8:	ldp	x29, x30, [sp], #80
     fcc:	ret
     fd0:	ret
     fd4:	nop
     fd8:	stp	x29, x30, [sp, #-80]!
     fdc:	mov	x29, sp
     fe0:	stp	x21, x22, [sp, #32]
     fe4:	mov	w21, w5
     fe8:	stp	x19, x20, [sp, #16]
     fec:	mov	x19, x3
     ff0:	stp	x25, x26, [sp, #64]
     ff4:	add	x25, x21, x3
     ff8:	ldr	x3, [x4]
     ffc:	cmp	x25, x3
    1000:	b.ls	1018 <grub_mod_fini+0x2e0>  // b.plast
    1004:	ldp	x19, x20, [sp, #16]
    1008:	ldp	x21, x22, [sp, #32]
    100c:	ldp	x25, x26, [sp, #64]
    1010:	ldp	x29, x30, [sp], #80
    1014:	ret
    1018:	mov	x20, x4
    101c:	mov	x22, x2
    1020:	sub	x2, x3, x21
    1024:	stp	x23, x24, [sp, #48]
    1028:	mov	x23, x0
    102c:	mov	w24, w1
    1030:	bl	dc8 <grub_mod_fini+0x90>
    1034:	ldr	x4, [x20]
    1038:	mov	w1, w24
    103c:	mov	x0, x23
    1040:	mov	w2, #0x20                  	// #32
    1044:	sub	x3, x4, x21
    1048:	add	x26, x22, x19, lsl #2
    104c:	add	x4, x22, x4, lsl #2
    1050:	add	x3, x22, x3, lsl #2
    1054:	bl	ed0 <grub_mod_fini+0x198>
    1058:	mov	x2, x19
    105c:	mov	w1, w24
    1060:	mov	x0, x23
    1064:	bl	dc8 <grub_mod_fini+0x90>
    1068:	ldr	x2, [x20]
    106c:	add	x1, x22, x25, lsl #2
    1070:	mov	x0, x26
    1074:	add	x2, x2, #0x1
    1078:	sub	x2, x2, x19
    107c:	lsl	x2, x2, #2
    1080:	bl	0 <grub_memmove>
    1084:	ldr	x4, [x20]
    1088:	mov	x3, x26
    108c:	mov	w1, w24
    1090:	mov	x0, x23
    1094:	sub	x4, x4, x21
    1098:	str	x4, [x20]
    109c:	mov	w2, #0x0                   	// #0
    10a0:	add	x4, x22, x4, lsl #2
    10a4:	bl	ed0 <grub_mod_fini+0x198>
    10a8:	mov	x2, x19
    10ac:	mov	w1, w24
    10b0:	mov	x0, x23
    10b4:	ldp	x19, x20, [sp, #16]
    10b8:	ldp	x21, x22, [sp, #32]
    10bc:	ldp	x23, x24, [sp, #48]
    10c0:	ldp	x25, x26, [sp, #64]
    10c4:	ldp	x29, x30, [sp], #80
    10c8:	b	dc8 <grub_mod_fini+0x90>
    10cc:	nop
    10d0:	stp	x29, x30, [sp, #-64]!
    10d4:	adrp	x3, 0 <grub_normal_free_menu-0x268>
    10d8:	mov	x29, sp
    10dc:	stp	x21, x22, [sp, #32]
    10e0:	mov	x22, x1
    10e4:	ldr	x21, [x3]
    10e8:	stp	x19, x20, [sp, #16]
    10ec:	sxtw	x20, w0
    10f0:	add	x19, x2, #0x1
    10f4:	ldr	x0, [x21]
    10f8:	lsl	x19, x19, #2
    10fc:	ldr	x0, [x0, x20, lsl #3]
    1100:	str	x23, [sp, #48]
    1104:	bl	0 <grub_free>
    1108:	ldr	x23, [x21]
    110c:	mov	x0, x19
    1110:	bl	0 <grub_malloc>
    1114:	ldr	x1, [x21]
    1118:	str	x0, [x23, x20, lsl #3]
    111c:	ldr	x0, [x1, x20, lsl #3]
    1120:	cbz	x0, 1154 <grub_mod_fini+0x41c>
    1124:	sub	x19, x19, #0x4
    1128:	mov	x1, x22
    112c:	mov	x2, x19
    1130:	bl	0 <grub_memmove>
    1134:	ldr	x0, [x21]
    1138:	ldp	x21, x22, [sp, #32]
    113c:	ldr	x0, [x0, x20, lsl #3]
    1140:	ldr	x23, [sp, #48]
    1144:	str	wzr, [x0, x19]
    1148:	ldp	x19, x20, [sp, #16]
    114c:	ldp	x29, x30, [sp], #64
    1150:	ret
    1154:	bl	0 <grub_print_error>
    1158:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    115c:	ldp	x19, x20, [sp, #16]
    1160:	ldr	x0, [x0]
    1164:	ldp	x21, x22, [sp, #32]
    1168:	str	wzr, [x0]
    116c:	ldr	x23, [sp, #48]
    1170:	ldp	x29, x30, [sp], #64
    1174:	ret
	...
    1188:	stp	x29, x30, [sp, #-48]!
    118c:	adrp	x2, 0 <grub_normal_free_menu-0x268>
    1190:	mov	x29, sp
    1194:	stp	x19, x20, [sp, #16]
    1198:	mov	x20, x0
    119c:	ldr	x19, [x2]
    11a0:	ldr	w0, [x19, #8]
    11a4:	str	x21, [sp, #32]
    11a8:	mov	x21, x1
    11ac:	ldr	w1, [x19, #12]
    11b0:	cmp	w0, w1
    11b4:	b.lt	1210 <grub_mod_fini+0x4d8>  // b.tstop
    11b8:	ldr	w0, [x19, #16]
    11bc:	subs	w0, w0, #0x1
    11c0:	b.mi	121c <grub_mod_fini+0x4e4>  // b.first
    11c4:	ldr	x1, [x19]
    11c8:	str	w0, [x19, #16]
    11cc:	ldr	x0, [x1, w0, sxtw #3]
    11d0:	bl	0 <grub_free>
    11d4:	ldr	w3, [x19, #20]
    11d8:	sub	w0, w3, #0x1
    11dc:	str	w0, [x19, #20]
    11e0:	tbz	w0, #31, 11f0 <grub_mod_fini+0x4b8>
    11e4:	ldr	w1, [x19, #12]
    11e8:	add	w0, w0, w1
    11ec:	str	w0, [x19, #20]
    11f0:	ldr	x3, [x19]
    11f4:	mov	x2, x21
    11f8:	mov	x1, x20
    11fc:	ldp	x19, x20, [sp, #16]
    1200:	str	xzr, [x3, w0, sxtw #3]
    1204:	ldr	x21, [sp, #32]
    1208:	ldp	x29, x30, [sp], #48
    120c:	b	10d0 <grub_mod_fini+0x398>
    1210:	add	w0, w0, #0x1
    1214:	str	w0, [x19, #8]
    1218:	b	11d4 <grub_mod_fini+0x49c>
    121c:	add	w0, w0, w1
    1220:	b	11c4 <grub_mod_fini+0x48c>
    1224:	nop
	...
    1230:	stp	x29, x30, [sp, #-64]!
    1234:	mov	x29, sp
    1238:	stp	x19, x20, [sp, #16]
    123c:	mov	x20, x0
    1240:	mov	w19, w1
    1244:	cbnz	w2, 12cc <grub_mod_fini+0x594>
    1248:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    124c:	stp	x21, x22, [sp, #32]
    1250:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    1254:	ldr	x21, [x1]
    1258:	mov	w2, #0xa                   	// #10
    125c:	ldr	x22, [x0]
    1260:	strh	w2, [sp, #56]
    1264:	ldr	x1, [x21]
    1268:	mov	x0, x22
    126c:	blr	x1
    1270:	ldr	x1, [x21]
    1274:	add	x0, sp, #0x38
    1278:	blr	x1
    127c:	cmp	w19, #0x2
    1280:	b.eq	1344 <grub_mod_fini+0x60c>  // b.none
    1284:	b.ls	12f0 <grub_mod_fini+0x5b8>  // b.plast
    1288:	cmp	w19, #0x3
    128c:	b.eq	1334 <grub_mod_fini+0x5fc>  // b.none
    1290:	cmp	w19, #0x4
    1294:	b.ne	1354 <grub_mod_fini+0x61c>  // b.any
    1298:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    129c:	ldr	x0, [x0]
    12a0:	bl	0 <grub_puts_>
    12a4:	nop
    12a8:	ldr	x1, [x21]
    12ac:	mov	w0, #0xa                   	// #10
    12b0:	strh	w0, [sp, #56]
    12b4:	mov	x0, x22
    12b8:	blr	x1
    12bc:	ldr	x1, [x21]
    12c0:	add	x0, sp, #0x38
    12c4:	blr	x1
    12c8:	ldp	x21, x22, [sp, #32]
    12cc:	cmp	w19, #0x2
    12d0:	b.eq	1304 <grub_mod_fini+0x5cc>  // b.none
    12d4:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    12d8:	mov	x1, x20
    12dc:	ldr	x0, [x0]
    12e0:	bl	0 <grub_printf>
    12e4:	ldp	x19, x20, [sp, #16]
    12e8:	ldp	x29, x30, [sp], #64
    12ec:	ret
    12f0:	cbz	w19, 1324 <grub_mod_fini+0x5ec>
    12f4:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    12f8:	ldr	x0, [x0]
    12fc:	bl	0 <grub_puts_>
    1300:	b	12a8 <grub_mod_fini+0x570>
    1304:	mov	x0, x20
    1308:	bl	8c70 <grub_normal_print_device_info>
    130c:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    1310:	ldp	x19, x20, [sp, #16]
    1314:	ldr	x0, [x0]
    1318:	str	wzr, [x0]
    131c:	ldp	x29, x30, [sp], #64
    1320:	ret
    1324:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    1328:	ldr	x0, [x0]
    132c:	bl	0 <grub_puts_>
    1330:	b	12a8 <grub_mod_fini+0x570>
    1334:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    1338:	ldr	x0, [x0]
    133c:	bl	0 <grub_puts_>
    1340:	b	12a8 <grub_mod_fini+0x570>
    1344:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    1348:	ldr	x0, [x0]
    134c:	bl	0 <grub_puts_>
    1350:	b	12a8 <grub_mod_fini+0x570>
    1354:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    1358:	ldr	x0, [x0]
    135c:	bl	0 <grub_puts_>
    1360:	b	12a8 <grub_mod_fini+0x570>
    1364:	nop
	...
    13b8:	stp	x29, x30, [sp, #-96]!
    13bc:	mov	x29, sp
    13c0:	stp	x19, x20, [sp, #16]
    13c4:	mov	x20, x6
    13c8:	ldr	w6, [x6]
    13cc:	stp	x21, x22, [sp, #32]
    13d0:	mov	x22, x0
    13d4:	mov	x21, x3
    13d8:	stp	x23, x24, [sp, #48]
    13dc:	mov	w23, w1
    13e0:	mov	x24, x5
    13e4:	stp	x25, x26, [sp, #64]
    13e8:	mov	x25, x4
    13ec:	str	x27, [sp, #80]
    13f0:	mov	x27, x2
    13f4:	cbz	w6, 1518 <grub_mod_fini+0x7e0>
    13f8:	mov	x7, x20
    13fc:	nop
    1400:	ldr	w8, [x7, #4]!
    1404:	cbnz	w8, 1400 <grub_mod_fini+0x6c8>
    1408:	sub	x19, x7, x20
    140c:	asr	x26, x19, #2
    1410:	ldr	x3, [x21]
    1414:	ldr	x1, [x25]
    1418:	add	x4, x3, x26
    141c:	ldr	x0, [x24]
    1420:	cmp	x4, x1
    1424:	b.cs	14d0 <grub_mod_fini+0x798>  // b.hs, b.nlast
    1428:	ldr	x1, [x27]
    142c:	sub	x3, x3, x1
    1430:	add	x2, x1, x26
    1434:	add	x3, x3, #0x1
    1438:	add	x1, x0, x1, lsl #2
    143c:	add	x0, x0, x2, lsl #2
    1440:	lsl	x2, x3, #2
    1444:	bl	0 <grub_memmove>
    1448:	ldr	x3, [x27]
    144c:	mov	x2, x19
    1450:	ldr	x0, [x24]
    1454:	mov	x1, x20
    1458:	add	x0, x0, x3, lsl #2
    145c:	bl	0 <grub_memmove>
    1460:	ldr	x2, [x21]
    1464:	mov	w1, w23
    1468:	mov	x0, x22
    146c:	add	x2, x2, x26
    1470:	str	x2, [x21]
    1474:	ldr	x2, [x27]
    1478:	bl	dc8 <grub_mod_fini+0x90>
    147c:	ldr	x3, [x24]
    1480:	mov	w1, w23
    1484:	ldr	x5, [x27]
    1488:	mov	x0, x22
    148c:	ldr	x4, [x21]
    1490:	mov	w2, #0x0                   	// #0
    1494:	add	x4, x3, x4, lsl #2
    1498:	add	x3, x3, x5, lsl #2
    149c:	bl	ed0 <grub_mod_fini+0x198>
    14a0:	ldr	x2, [x27]
    14a4:	mov	w1, w23
    14a8:	mov	x0, x22
    14ac:	add	x2, x26, x2
    14b0:	ldp	x19, x20, [sp, #16]
    14b4:	ldp	x21, x22, [sp, #32]
    14b8:	ldp	x23, x24, [sp, #48]
    14bc:	ldp	x25, x26, [sp, #64]
    14c0:	str	x2, [x27]
    14c4:	ldr	x27, [sp, #80]
    14c8:	ldp	x29, x30, [sp], #96
    14cc:	b	dc8 <grub_mod_fini+0x90>
    14d0:	lsl	x2, x1, #1
    14d4:	str	x2, [x25]
    14d8:	lsl	x1, x1, #3
    14dc:	bl	0 <grub_realloc>
    14e0:	cbz	x0, 1524 <grub_mod_fini+0x7ec>
    14e4:	ldr	x1, [x25]
    14e8:	str	x0, [x24]
    14ec:	ldr	x3, [x21]
    14f0:	add	x0, x3, x26
    14f4:	cmp	x0, x1
    14f8:	b.cc	1544 <grub_mod_fini+0x80c>  // b.lo, b.ul, b.last
    14fc:	ldp	x19, x20, [sp, #16]
    1500:	ldp	x21, x22, [sp, #32]
    1504:	ldp	x23, x24, [sp, #48]
    1508:	ldp	x25, x26, [sp, #64]
    150c:	ldr	x27, [sp, #80]
    1510:	ldp	x29, x30, [sp], #96
    1514:	ret
    1518:	mov	x26, #0x0                   	// #0
    151c:	mov	x19, #0x0                   	// #0
    1520:	b	1410 <grub_mod_fini+0x6d8>
    1524:	bl	0 <grub_print_error>
    1528:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    152c:	ldr	x1, [x25]
    1530:	ldr	x0, [x0]
    1534:	lsr	x1, x1, #1
    1538:	str	wzr, [x0]
    153c:	str	x1, [x25]
    1540:	b	14ec <grub_mod_fini+0x7b4>
    1544:	ldr	x0, [x24]
    1548:	b	1428 <grub_mod_fini+0x6f0>
    154c:	nop
	...

0000000000001558 <grub_set_history>:
    1558:	stp	x29, x30, [sp, #-64]!
    155c:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    1560:	mov	x29, sp
    1564:	stp	x19, x20, [sp, #16]
    1568:	ldr	x19, [x1]
    156c:	stp	x21, x22, [sp, #32]
    1570:	mov	w21, w0
    1574:	sbfiz	x0, x0, #3, #32
    1578:	ldr	x22, [x19]
    157c:	bl	0 <grub_malloc>
    1580:	str	x0, [x19]
    1584:	cbz	x22, 1600 <grub_set_history+0xa8>
    1588:	stp	x23, x24, [sp, #48]
    158c:	ldr	w24, [x19, #8]
    1590:	ldr	w2, [x19, #16]
    1594:	cmp	w24, w21
    1598:	b.le	15e8 <grub_set_history+0x90>
    159c:	sub	w24, w24, w21
    15a0:	mov	x20, #0x1                   	// #1
    15a4:	str	w21, [x19, #8]
    15a8:	sxtw	x23, w24
    15ac:	add	x23, x23, x20
    15b0:	sxtw	x2, w2
    15b4:	subs	x2, x2, x20
    15b8:	add	x20, x20, #0x1
    15bc:	b.pl	15c8 <grub_set_history+0x70>  // b.nfrst
    15c0:	ldrsw	x0, [x19, #12]
    15c4:	add	x2, x0, x2
    15c8:	ldr	x0, [x22, x2, lsl #3]
    15cc:	bl	0 <grub_free>
    15d0:	ldr	w2, [x19, #16]
    15d4:	cmp	x20, x23
    15d8:	b.cc	15b0 <grub_set_history+0x58>  // b.lo, b.ul, b.last
    15dc:	sub	w2, w2, w24
    15e0:	str	w2, [x19, #16]
    15e4:	tbnz	w2, #31, 1644 <grub_set_history+0xec>
    15e8:	ldr	w3, [x19, #20]
    15ec:	cmp	w3, w2
    15f0:	b.lt	1628 <grub_set_history+0xd0>  // b.tstop
    15f4:	ldr	w0, [x19, #8]
    15f8:	cbnz	w0, 1660 <grub_set_history+0x108>
    15fc:	ldp	x23, x24, [sp, #48]
    1600:	mov	x0, x22
    1604:	bl	0 <grub_free>
    1608:	str	wzr, [x19, #20]
    160c:	ldr	w1, [x19, #8]
    1610:	mov	w0, #0x0                   	// #0
    1614:	stp	w21, w1, [x19, #12]
    1618:	ldp	x19, x20, [sp, #16]
    161c:	ldp	x21, x22, [sp, #32]
    1620:	ldp	x29, x30, [sp], #64
    1624:	ret
    1628:	ldr	x0, [x19]
    162c:	sub	w2, w2, w3
    1630:	add	x1, x22, w3, sxtw #3
    1634:	sbfiz	x2, x2, #3, #32
    1638:	bl	0 <grub_memmove>
    163c:	ldp	x23, x24, [sp, #48]
    1640:	b	1600 <grub_set_history+0xa8>
    1644:	ldr	w0, [x19, #12]
    1648:	ldr	w3, [x19, #20]
    164c:	add	w2, w2, w0
    1650:	str	w2, [x19, #16]
    1654:	cmp	w3, w2
    1658:	b.ge	15f4 <grub_set_history+0x9c>  // b.tcont
    165c:	b	1628 <grub_set_history+0xd0>
    1660:	ldr	w2, [x19, #12]
    1664:	add	x1, x22, w3, sxtw #3
    1668:	ldr	x0, [x19]
    166c:	sub	w2, w2, w3
    1670:	sbfiz	x2, x2, #3, #32
    1674:	bl	0 <grub_memmove>
    1678:	ldrsw	x2, [x19, #20]
    167c:	mov	x1, x22
    1680:	ldrsw	x0, [x19, #12]
    1684:	ldr	x3, [x19]
    1688:	sub	x0, x0, x2
    168c:	ldrsw	x2, [x19, #16]
    1690:	add	x0, x3, x0, lsl #3
    1694:	lsl	x2, x2, #3
    1698:	bl	0 <grub_memmove>
    169c:	ldp	x23, x24, [sp, #48]
    16a0:	b	1600 <grub_set_history+0xa8>
    16a4:	nop
	...

00000000000016b0 <grub_cmdline_get>:
    16b0:	stp	x29, x30, [sp, #-160]!
    16b4:	mov	x1, #0x100                 	// #256
    16b8:	mov	x29, sp
    16bc:	stp	x21, x22, [sp, #32]
    16c0:	stp	x23, x24, [sp, #48]
    16c4:	mov	x23, x0
    16c8:	mov	x0, #0x400                 	// #1024
    16cc:	str	x1, [sp, #144]
    16d0:	bl	0 <grub_malloc>
    16d4:	str	x0, [sp, #136]
    16d8:	mov	x22, x0
    16dc:	cbz	x0, 1944 <grub_cmdline_get+0x294>
    16e0:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    16e4:	stp	x19, x20, [sp, #16]
    16e8:	ldr	x20, [x0]
    16ec:	stp	x25, x26, [sp, #64]
    16f0:	stp	xzr, xzr, [sp, #120]
    16f4:	ldr	x19, [x20]
    16f8:	str	wzr, [x22]
    16fc:	cbnz	x19, 170c <grub_cmdline_get+0x5c>
    1700:	b	1734 <grub_cmdline_get+0x84>
    1704:	ldr	x19, [x19]
    1708:	cbz	x19, 1734 <grub_cmdline_get+0x84>
    170c:	ldr	x1, [x19, #64]
    1710:	mov	x0, x19
    1714:	blr	x1
    1718:	tst	w0, #0xffff
    171c:	b.eq	1704 <grub_cmdline_get+0x54>  // b.none
    1720:	mov	x1, x19
    1724:	mov	w0, #0xa                   	// #10
    1728:	bl	9f48 <grub_putcode>
    172c:	ldr	x19, [x19]
    1730:	cbnz	x19, 170c <grub_cmdline_get+0x5c>
    1734:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    1738:	mov	x0, x23
    173c:	mov	w21, #0x0                   	// #0
    1740:	ldr	x24, [x1]
    1744:	ldr	x1, [x24]
    1748:	blr	x1
    174c:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    1750:	ldr	x1, [x24]
    1754:	ldr	x0, [x0]
    1758:	str	x0, [sp, #96]
    175c:	blr	x1
    1760:	bl	9b88 <grub_normal_reset_more>
    1764:	mov	x0, x23
    1768:	bl	0 <grub_strlen>
    176c:	ldr	x1, [x20]
    1770:	mov	x19, x0
    1774:	add	x22, x0, #0x3
    1778:	mov	x0, #0x0                   	// #0
    177c:	cbz	x1, 1790 <grub_cmdline_get+0xe0>
    1780:	ldr	x1, [x1]
    1784:	add	w21, w21, #0x1
    1788:	cbnz	x1, 1780 <grub_cmdline_get+0xd0>
    178c:	ubfiz	x0, x21, #5, #32
    1790:	bl	0 <grub_malloc>
    1794:	mov	x26, x0
    1798:	cbz	x0, 1fac <grub_cmdline_get+0x8fc>
    179c:	lsl	x0, x22, #2
    17a0:	bl	0 <grub_malloc>
    17a4:	mov	x22, x0
    17a8:	cbz	x0, 1fc4 <grub_cmdline_get+0x914>
    17ac:	add	x1, x19, #0x2
    17b0:	mov	x2, x23
    17b4:	mov	x4, #0x0                   	// #0
    17b8:	mov	x3, #0xffffffffffffffff    	// #-1
    17bc:	stp	x27, x28, [sp, #80]
    17c0:	bl	beb0 <grub_utf8_to_ucs4>
    17c4:	mov	w1, #0x20                  	// #32
    17c8:	ldr	x19, [x20]
    17cc:	str	w1, [x22, x0, lsl #2]
    17d0:	add	x27, x22, x0, lsl #2
    17d4:	mov	x20, x26
    17d8:	add	x27, x27, #0x4
    17dc:	cbz	x19, 180c <grub_cmdline_get+0x15c>
    17e0:	str	x19, [x20, #24]
    17e4:	mov	x2, x19
    17e8:	mov	x1, x27
    17ec:	mov	x0, x22
    17f0:	bl	82b8 <grub_getstringwidth>
    17f4:	str	w0, [x20, #16]
    17f8:	mov	x0, x20
    17fc:	add	x20, x20, #0x20
    1800:	bl	e48 <grub_mod_fini+0x110>
    1804:	ldr	x19, [x19]
    1808:	cbnz	x19, 17e0 <grub_cmdline_get+0x130>
    180c:	mov	x0, x22
    1810:	bl	0 <grub_free>
    1814:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    1818:	ldr	x19, [x0]
    181c:	ldr	w0, [x19, #8]
    1820:	cbz	w0, 1eb4 <grub_cmdline_get+0x804>
    1824:	bl	0 <grub_refresh>
    1828:	sub	w22, w21, #0x1
    182c:	add	x0, x26, #0x20
    1830:	mov	w1, #0x20                  	// #32
    1834:	mov	w20, #0x61                  	// #97
    1838:	mov	w27, #0x0                   	// #0
    183c:	movk	w20, #0x200, lsl #16
    1840:	umaddl	x22, w22, w1, x0
    1844:	bl	0 <grub_getkey>
    1848:	cmp	w0, #0xd
    184c:	ccmp	w0, #0xa, #0x4, ne  // ne = any
    1850:	b.eq	18bc <grub_cmdline_get+0x20c>  // b.none
    1854:	nop
    1858:	cmp	w0, w20
    185c:	b.eq	1894 <grub_cmdline_get+0x1e4>  // b.none
    1860:	b.gt	19ec <grub_cmdline_get+0x33c>
    1864:	mov	w1, #0x48                  	// #72
    1868:	movk	w1, #0x80, lsl #16
    186c:	cmp	w0, w1
    1870:	b.eq	1b74 <grub_cmdline_get+0x4c4>  // b.none
    1874:	b.gt	19a8 <grub_cmdline_get+0x2f8>
    1878:	cmp	w0, #0x1b
    187c:	b.eq	1e80 <grub_cmdline_get+0x7d0>  // b.none
    1880:	b.le	1958 <grub_cmdline_get+0x2a8>
    1884:	mov	w1, #0x47                  	// #71
    1888:	movk	w1, #0x80, lsl #16
    188c:	cmp	w0, w1
    1890:	b.ne	1f74 <grub_cmdline_get+0x8c4>  // b.any
    1894:	mov	w1, w21
    1898:	mov	x0, x26
    189c:	mov	x2, #0x0                   	// #0
    18a0:	str	xzr, [sp, #120]
    18a4:	bl	dc8 <grub_mod_fini+0x90>
    18a8:	bl	0 <grub_refresh>
    18ac:	bl	0 <grub_getkey>
    18b0:	cmp	w0, #0xd
    18b4:	ccmp	w0, #0xa, #0x4, ne  // ne = any
    18b8:	b.ne	1858 <grub_cmdline_get+0x1a8>  // b.any
    18bc:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    18c0:	ldr	x1, [x24]
    18c4:	ldr	x0, [x0]
    18c8:	blr	x1
    18cc:	bl	0 <grub_refresh>
    18d0:	ldr	x1, [sp, #136]
    18d4:	mov	x0, x1
    18d8:	ldr	w2, [x1]
    18dc:	cbz	w2, 2030 <grub_cmdline_get+0x980>
    18e0:	ldr	w2, [x0, #4]!
    18e4:	cbnz	w2, 18e0 <grub_cmdline_get+0x230>
    18e8:	cmp	x1, x0
    18ec:	ldr	x2, [sp, #128]
    18f0:	b.eq	191c <grub_cmdline_get+0x26c>  // b.none
    18f4:	ldr	w3, [x19, #12]
    18f8:	ldr	w0, [x19, #20]
    18fc:	str	wzr, [sp, #152]
    1900:	udiv	w4, w0, w3
    1904:	msub	w0, w4, w3, w0
    1908:	bl	10d0 <grub_mod_fini+0x398>
    190c:	add	x0, sp, #0x98
    1910:	mov	x1, #0x0                   	// #0
    1914:	bl	1188 <grub_mod_fini+0x450>
    1918:	ldp	x2, x0, [sp, #128]
    191c:	add	x1, x2, #0x1
    1920:	bl	bd48 <grub_ucs4_to_utf8_alloc>
    1924:	mov	x22, x0
    1928:	ldr	x0, [sp, #136]
    192c:	bl	0 <grub_free>
    1930:	mov	x0, x26
    1934:	bl	0 <grub_free>
    1938:	ldp	x19, x20, [sp, #16]
    193c:	ldp	x25, x26, [sp, #64]
    1940:	ldp	x27, x28, [sp, #80]
    1944:	mov	x0, x22
    1948:	ldp	x21, x22, [sp, #32]
    194c:	ldp	x23, x24, [sp, #48]
    1950:	ldp	x29, x30, [sp], #160
    1954:	ret
    1958:	cmp	w0, #0x8
    195c:	b.ne	1a50 <grub_cmdline_get+0x3a0>  // b.any
    1960:	ldr	x0, [sp, #120]
    1964:	cbz	x0, 18a8 <grub_cmdline_get+0x1f8>
    1968:	sub	x2, x0, #0x1
    196c:	mov	w1, w21
    1970:	mov	x0, x26
    1974:	str	x2, [sp, #120]
    1978:	bl	dc8 <grub_mod_fini+0x90>
    197c:	ldp	x3, x0, [sp, #120]
    1980:	cmp	x3, x0
    1984:	b.cs	18a8 <grub_cmdline_get+0x1f8>  // b.hs, b.nlast
    1988:	ldr	x2, [sp, #136]
    198c:	add	x4, sp, #0x80
    1990:	mov	w1, w21
    1994:	mov	x0, x26
    1998:	mov	w5, #0x1                   	// #1
    199c:	bl	fd8 <grub_mod_fini+0x2a0>
    19a0:	bl	0 <grub_refresh>
    19a4:	b	18ac <grub_cmdline_get+0x1fc>
    19a8:	mov	w1, #0x4f                  	// #79
    19ac:	movk	w1, #0x80, lsl #16
    19b0:	cmp	w0, w1
    19b4:	b.eq	1e64 <grub_cmdline_get+0x7b4>  // b.none
    19b8:	b.le	1c18 <grub_cmdline_get+0x568>
    19bc:	mov	w1, #0x50                  	// #80
    19c0:	movk	w1, #0x80, lsl #16
    19c4:	cmp	w0, w1
    19c8:	b.eq	1df8 <grub_cmdline_get+0x748>  // b.none
    19cc:	add	w1, w1, #0x3
    19d0:	cmp	w0, w1
    19d4:	b.ne	18a8 <grub_cmdline_get+0x1f8>  // b.any
    19d8:	ldp	x3, x0, [sp, #120]
    19dc:	cmp	x3, x0
    19e0:	b.cc	1988 <grub_cmdline_get+0x2d8>  // b.lo, b.ul, b.last
    19e4:	bl	0 <grub_refresh>
    19e8:	b	18ac <grub_cmdline_get+0x1fc>
    19ec:	mov	w1, #0x6b                  	// #107
    19f0:	movk	w1, #0x200, lsl #16
    19f4:	cmp	w0, w1
    19f8:	b.eq	1d90 <grub_cmdline_get+0x6e0>  // b.none
    19fc:	b.le	1be4 <grub_cmdline_get+0x534>
    1a00:	mov	w1, #0x75                  	// #117
    1a04:	movk	w1, #0x200, lsl #16
    1a08:	cmp	w0, w1
    1a0c:	b.eq	1cfc <grub_cmdline_get+0x64c>  // b.none
    1a10:	b.le	1b58 <grub_cmdline_get+0x4a8>
    1a14:	mov	w1, #0x79                  	// #121
    1a18:	movk	w1, #0x200, lsl #16
    1a1c:	cmp	w0, w1
    1a20:	b.ne	18a8 <grub_cmdline_get+0x1f8>  // b.any
    1a24:	ldr	x6, [x19, #24]
    1a28:	cbz	x6, 18a8 <grub_cmdline_get+0x1f8>
    1a2c:	add	x5, sp, #0x88
    1a30:	add	x4, sp, #0x90
    1a34:	add	x3, sp, #0x80
    1a38:	add	x2, sp, #0x78
    1a3c:	mov	w1, w21
    1a40:	mov	x0, x26
    1a44:	bl	13b8 <grub_mod_fini+0x680>
    1a48:	bl	0 <grub_refresh>
    1a4c:	b	18ac <grub_cmdline_get+0x1fc>
    1a50:	cmp	w0, #0x9
    1a54:	b.ne	18a8 <grub_cmdline_get+0x1f8>  // b.any
    1a58:	ldr	x1, [sp, #120]
    1a5c:	ldr	x0, [sp, #136]
    1a60:	ldr	w25, [x0, x1, lsl #2]
    1a64:	str	wzr, [x0, x1, lsl #2]
    1a68:	bl	bd48 <grub_ucs4_to_utf8_alloc>
    1a6c:	mov	x28, x0
    1a70:	ldr	x2, [sp, #120]
    1a74:	ldr	x1, [sp, #136]
    1a78:	str	w25, [x1, x2, lsl #2]
    1a7c:	cbz	x0, 1ef4 <grub_cmdline_get+0x844>
    1a80:	adrp	x2, 0 <grub_normal_free_menu-0x268>
    1a84:	add	x1, sp, #0x98
    1a88:	ldr	x2, [x2]
    1a8c:	bl	3590 <grub_normal_do_completion>
    1a90:	mov	x1, x0
    1a94:	mov	x0, x28
    1a98:	mov	x28, x1
    1a9c:	bl	0 <grub_free>
    1aa0:	bl	9b88 <grub_normal_reset_more>
    1aa4:	ldr	w0, [sp, #152]
    1aa8:	cbnz	w0, 1f0c <grub_cmdline_get+0x85c>
    1aac:	cbz	x28, 1cc0 <grub_cmdline_get+0x610>
    1ab0:	mov	x0, x28
    1ab4:	bl	0 <grub_strlen>
    1ab8:	mov	x3, x0
    1abc:	add	x0, x0, #0x1
    1ac0:	str	x3, [sp, #104]
    1ac4:	lsl	x0, x0, #2
    1ac8:	bl	0 <grub_malloc>
    1acc:	ldr	x3, [sp, #104]
    1ad0:	cbz	x0, 1eec <grub_cmdline_get+0x83c>
    1ad4:	mov	x1, x3
    1ad8:	mov	x2, x28
    1adc:	mov	x4, #0x0                   	// #0
    1ae0:	str	x0, [sp, #104]
    1ae4:	bl	beb0 <grub_utf8_to_ucs4>
    1ae8:	cmp	x0, #0x0
    1aec:	ldr	x6, [sp, #104]
    1af0:	b.le	1ca8 <grub_cmdline_get+0x5f8>
    1af4:	lsl	x1, x0, #2
    1af8:	sub	x1, x1, #0x4
    1afc:	ldr	w2, [x6, x1]
    1b00:	cmp	w2, #0x20
    1b04:	b.ne	1c80 <grub_cmdline_get+0x5d0>  // b.any
    1b08:	ldr	x2, [sp, #120]
    1b0c:	ldr	x3, [sp, #136]
    1b10:	ldr	w3, [x3, x2, lsl #2]
    1b14:	cmp	w3, #0x20
    1b18:	b.ne	1c80 <grub_cmdline_get+0x5d0>  // b.any
    1b1c:	str	wzr, [x6, x1]
    1b20:	cmp	x0, #0x1
    1b24:	b.eq	1b4c <grub_cmdline_get+0x49c>  // b.none
    1b28:	add	x2, sp, #0x78
    1b2c:	add	x5, sp, #0x88
    1b30:	add	x4, sp, #0x90
    1b34:	add	x3, sp, #0x80
    1b38:	mov	w1, w21
    1b3c:	mov	x0, x26
    1b40:	bl	13b8 <grub_mod_fini+0x680>
    1b44:	ldr	x6, [sp, #104]
    1b48:	ldr	x2, [sp, #120]
    1b4c:	add	x2, x2, #0x1
    1b50:	str	x2, [sp, #120]
    1b54:	b	1ca8 <grub_cmdline_get+0x5f8>
    1b58:	mov	w1, #0x6e                  	// #110
    1b5c:	movk	w1, #0x200, lsl #16
    1b60:	cmp	w0, w1
    1b64:	b.eq	1df8 <grub_cmdline_get+0x748>  // b.none
    1b68:	add	w1, w1, #0x2
    1b6c:	cmp	w0, w1
    1b70:	b.ne	18a8 <grub_cmdline_get+0x1f8>  // b.any
    1b74:	ldr	w0, [x19, #8]
    1b78:	mov	x3, #0x0                   	// #0
    1b7c:	str	xzr, [sp, #120]
    1b80:	sub	w0, w0, #0x1
    1b84:	cmp	w0, w27
    1b88:	ldp	x5, x1, [sp, #128]
    1b8c:	b.gt	1ec0 <grub_cmdline_get+0x810>
    1b90:	mov	x2, x1
    1b94:	add	x4, sp, #0x80
    1b98:	mov	w1, w21
    1b9c:	mov	x0, x26
    1ba0:	bl	fd8 <grub_mod_fini+0x2a0>
    1ba4:	ldr	w6, [x19, #20]
    1ba8:	add	x5, sp, #0x88
    1bac:	ldr	w8, [x19, #12]
    1bb0:	add	x4, sp, #0x90
    1bb4:	add	w6, w27, w6
    1bb8:	udiv	w7, w6, w8
    1bbc:	add	x3, sp, #0x80
    1bc0:	ldr	x9, [x19]
    1bc4:	add	x2, sp, #0x78
    1bc8:	mov	w1, w21
    1bcc:	mov	x0, x26
    1bd0:	msub	w6, w7, w8, w6
    1bd4:	ldr	x6, [x9, x6, lsl #3]
    1bd8:	bl	13b8 <grub_mod_fini+0x680>
    1bdc:	bl	0 <grub_refresh>
    1be0:	b	18ac <grub_cmdline_get+0x1fc>
    1be4:	mov	w1, #0x65                  	// #101
    1be8:	movk	w1, #0x200, lsl #16
    1bec:	cmp	w0, w1
    1bf0:	b.eq	1e64 <grub_cmdline_get+0x7b4>  // b.none
    1bf4:	b.le	1c5c <grub_cmdline_get+0x5ac>
    1bf8:	mov	w1, #0x66                  	// #102
    1bfc:	movk	w1, #0x200, lsl #16
    1c00:	cmp	w0, w1
    1c04:	b.eq	1c34 <grub_cmdline_get+0x584>  // b.none
    1c08:	add	w1, w1, #0x3
    1c0c:	cmp	w0, w1
    1c10:	b.eq	1a58 <grub_cmdline_get+0x3a8>  // b.none
    1c14:	b	18a8 <grub_cmdline_get+0x1f8>
    1c18:	mov	w1, #0x4b                  	// #75
    1c1c:	movk	w1, #0x80, lsl #16
    1c20:	cmp	w0, w1
    1c24:	b.eq	1cd8 <grub_cmdline_get+0x628>  // b.none
    1c28:	add	w1, w1, #0x2
    1c2c:	cmp	w0, w1
    1c30:	b.ne	18a8 <grub_cmdline_get+0x1f8>  // b.any
    1c34:	ldp	x0, x1, [sp, #120]
    1c38:	cmp	x0, x1
    1c3c:	b.cs	18a8 <grub_cmdline_get+0x1f8>  // b.hs, b.nlast
    1c40:	add	x2, x0, #0x1
    1c44:	mov	w1, w21
    1c48:	mov	x0, x26
    1c4c:	str	x2, [sp, #120]
    1c50:	bl	dc8 <grub_mod_fini+0x90>
    1c54:	bl	0 <grub_refresh>
    1c58:	b	18ac <grub_cmdline_get+0x1fc>
    1c5c:	mov	w1, #0x62                  	// #98
    1c60:	movk	w1, #0x200, lsl #16
    1c64:	cmp	w0, w1
    1c68:	b.eq	1cd8 <grub_cmdline_get+0x628>  // b.none
    1c6c:	add	w1, w1, #0x2
    1c70:	cmp	w0, w1
    1c74:	b.eq	19d8 <grub_cmdline_get+0x328>  // b.none
    1c78:	bl	0 <grub_refresh>
    1c7c:	b	18ac <grub_cmdline_get+0x1fc>
    1c80:	str	wzr, [x6, x0, lsl #2]
    1c84:	add	x5, sp, #0x88
    1c88:	add	x4, sp, #0x90
    1c8c:	add	x3, sp, #0x80
    1c90:	add	x2, sp, #0x78
    1c94:	mov	w1, w21
    1c98:	mov	x0, x26
    1c9c:	str	x6, [sp, #104]
    1ca0:	bl	13b8 <grub_mod_fini+0x680>
    1ca4:	ldr	x6, [sp, #104]
    1ca8:	mov	x0, x28
    1cac:	str	x6, [sp, #104]
    1cb0:	bl	0 <grub_free>
    1cb4:	ldr	x6, [sp, #104]
    1cb8:	mov	x0, x6
    1cbc:	bl	0 <grub_free>
    1cc0:	ldr	x2, [sp, #120]
    1cc4:	mov	w1, w21
    1cc8:	mov	x0, x26
    1ccc:	bl	dc8 <grub_mod_fini+0x90>
    1cd0:	bl	0 <grub_refresh>
    1cd4:	b	18ac <grub_cmdline_get+0x1fc>
    1cd8:	ldr	x0, [sp, #120]
    1cdc:	cbz	x0, 18a8 <grub_cmdline_get+0x1f8>
    1ce0:	sub	x2, x0, #0x1
    1ce4:	mov	w1, w21
    1ce8:	mov	x0, x26
    1cec:	str	x2, [sp, #120]
    1cf0:	bl	dc8 <grub_mod_fini+0x90>
    1cf4:	bl	0 <grub_refresh>
    1cf8:	b	18ac <grub_cmdline_get+0x1fc>
    1cfc:	ldr	x28, [sp, #120]
    1d00:	cbz	x28, 18a8 <grub_cmdline_get+0x1f8>
    1d04:	ldr	x0, [x19, #24]
    1d08:	bl	0 <grub_free>
    1d0c:	add	x2, x28, #0x1
    1d10:	lsl	x2, x2, #2
    1d14:	str	x2, [sp, #104]
    1d18:	mov	x0, x2
    1d1c:	bl	0 <grub_malloc>
    1d20:	str	x0, [x19, #24]
    1d24:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    1d28:	ldr	x2, [sp, #104]
    1d2c:	ldr	x1, [x1]
    1d30:	ldr	w3, [x1]
    1d34:	cbnz	w3, 2010 <grub_cmdline_get+0x960>
    1d38:	cbz	x0, 1d58 <grub_cmdline_get+0x6a8>
    1d3c:	ldr	x1, [sp, #136]
    1d40:	sub	x2, x2, #0x4
    1d44:	str	x2, [sp, #104]
    1d48:	bl	0 <grub_memmove>
    1d4c:	ldr	x0, [x19, #24]
    1d50:	ldr	x2, [sp, #104]
    1d54:	str	wzr, [x0, x2]
    1d58:	mov	w1, w21
    1d5c:	mov	x0, x26
    1d60:	mov	x2, #0x0                   	// #0
    1d64:	str	xzr, [sp, #120]
    1d68:	bl	dc8 <grub_mod_fini+0x90>
    1d6c:	ldr	x3, [sp, #120]
    1d70:	mov	w5, w28
    1d74:	ldr	x2, [sp, #136]
    1d78:	add	x4, sp, #0x80
    1d7c:	mov	w1, w21
    1d80:	mov	x0, x26
    1d84:	bl	fd8 <grub_mod_fini+0x2a0>
    1d88:	bl	0 <grub_refresh>
    1d8c:	b	18ac <grub_cmdline_get+0x1fc>
    1d90:	ldp	x1, x0, [sp, #120]
    1d94:	cmp	x1, x0
    1d98:	b.cs	18a8 <grub_cmdline_get+0x1f8>  // b.hs, b.nlast
    1d9c:	ldr	x0, [x19, #24]
    1da0:	bl	0 <grub_free>
    1da4:	ldp	x1, x0, [sp, #120]
    1da8:	add	x0, x0, #0x1
    1dac:	sub	x0, x0, x1
    1db0:	lsl	x0, x0, #2
    1db4:	bl	0 <grub_malloc>
    1db8:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    1dbc:	str	x0, [x19, #24]
    1dc0:	ldr	x28, [x1]
    1dc4:	ldr	w1, [x28]
    1dc8:	cbz	w1, 1fe0 <grub_cmdline_get+0x930>
    1dcc:	bl	0 <grub_print_error>
    1dd0:	str	wzr, [x28]
    1dd4:	ldp	x3, x5, [sp, #120]
    1dd8:	sub	w5, w5, w3
    1ddc:	ldr	x2, [sp, #136]
    1de0:	add	x4, sp, #0x80
    1de4:	mov	w1, w21
    1de8:	mov	x0, x26
    1dec:	bl	fd8 <grub_mod_fini+0x2a0>
    1df0:	bl	0 <grub_refresh>
    1df4:	b	18ac <grub_cmdline_get+0x1fc>
    1df8:	str	xzr, [sp, #120]
    1dfc:	mov	w28, #0x0                   	// #0
    1e00:	mov	x3, #0x0                   	// #0
    1e04:	ldp	x5, x1, [sp, #128]
    1e08:	cbz	w27, 1e38 <grub_cmdline_get+0x788>
    1e0c:	ldr	w3, [x19, #20]
    1e10:	mov	x2, x5
    1e14:	ldr	w0, [x19, #12]
    1e18:	add	w3, w27, w3
    1e1c:	sub	w27, w27, #0x1
    1e20:	mov	w28, w27
    1e24:	udiv	w4, w3, w0
    1e28:	msub	w0, w4, w0, w3
    1e2c:	bl	10d0 <grub_mod_fini+0x398>
    1e30:	ldp	x3, x5, [sp, #120]
    1e34:	ldr	x1, [sp, #136]
    1e38:	mov	x2, x1
    1e3c:	add	x4, sp, #0x80
    1e40:	mov	w1, w21
    1e44:	mov	x0, x26
    1e48:	bl	fd8 <grub_mod_fini+0x2a0>
    1e4c:	ldr	w6, [x19, #20]
    1e50:	add	x5, sp, #0x88
    1e54:	ldr	w8, [x19, #12]
    1e58:	add	x4, sp, #0x90
    1e5c:	add	w6, w28, w6
    1e60:	b	1bb8 <grub_cmdline_get+0x508>
    1e64:	ldr	x2, [sp, #128]
    1e68:	mov	w1, w21
    1e6c:	mov	x0, x26
    1e70:	str	x2, [sp, #120]
    1e74:	bl	dc8 <grub_mod_fini+0x90>
    1e78:	bl	0 <grub_refresh>
    1e7c:	b	18ac <grub_cmdline_get+0x1fc>
    1e80:	mov	x0, x26
    1e84:	bl	0 <grub_free>
    1e88:	ldr	x0, [sp, #136]
    1e8c:	mov	x22, #0x0                   	// #0
    1e90:	bl	0 <grub_free>
    1e94:	mov	x0, x22
    1e98:	ldp	x19, x20, [sp, #16]
    1e9c:	ldp	x21, x22, [sp, #32]
    1ea0:	ldp	x23, x24, [sp, #48]
    1ea4:	ldp	x25, x26, [sp, #64]
    1ea8:	ldp	x27, x28, [sp, #80]
    1eac:	ldp	x29, x30, [sp], #160
    1eb0:	ret
    1eb4:	ldp	x1, x0, [sp, #128]
    1eb8:	bl	1188 <grub_mod_fini+0x450>
    1ebc:	b	1824 <grub_cmdline_get+0x174>
    1ec0:	ldr	w3, [x19, #20]
    1ec4:	mov	x2, x5
    1ec8:	ldr	w0, [x19, #12]
    1ecc:	add	w3, w27, w3
    1ed0:	add	w27, w27, #0x1
    1ed4:	udiv	w4, w3, w0
    1ed8:	msub	w0, w4, w0, w3
    1edc:	bl	10d0 <grub_mod_fini+0x398>
    1ee0:	ldp	x3, x5, [sp, #120]
    1ee4:	ldr	x1, [sp, #136]
    1ee8:	b	1b90 <grub_cmdline_get+0x4e0>
    1eec:	mov	x0, x28
    1ef0:	bl	0 <grub_free>
    1ef4:	bl	0 <grub_print_error>
    1ef8:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    1efc:	ldr	x0, [x0]
    1f00:	str	wzr, [x0]
    1f04:	bl	0 <grub_refresh>
    1f08:	b	18ac <grub_cmdline_get+0x1fc>
    1f0c:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    1f10:	mov	x25, x26
    1f14:	ldr	x2, [x24]
    1f18:	ldr	x0, [x0]
    1f1c:	blr	x2
    1f20:	ldr	x2, [x24]
    1f24:	mov	x0, x23
    1f28:	blr	x2
    1f2c:	ldr	x2, [x24]
    1f30:	ldr	x0, [sp, #96]
    1f34:	blr	x2
    1f38:	cbz	w21, 1f54 <grub_cmdline_get+0x8a4>
    1f3c:	nop
    1f40:	mov	x0, x25
    1f44:	add	x25, x25, #0x20
    1f48:	bl	e48 <grub_mod_fini+0x110>
    1f4c:	cmp	x22, x25
    1f50:	b.ne	1f40 <grub_cmdline_get+0x890>  // b.any
    1f54:	ldp	x4, x3, [sp, #128]
    1f58:	mov	w1, w21
    1f5c:	mov	x0, x26
    1f60:	mov	w2, #0x0                   	// #0
    1f64:	add	x4, x3, x4, lsl #2
    1f68:	bl	ed0 <grub_mod_fini+0x198>
    1f6c:	cbnz	x28, 1ab0 <grub_cmdline_get+0x400>
    1f70:	b	1cc0 <grub_cmdline_get+0x610>
    1f74:	sub	w1, w0, #0x20
    1f78:	cmp	w1, #0x5e
    1f7c:	b.hi	18a8 <grub_cmdline_get+0x1f8>  // b.pmore
    1f80:	add	x6, sp, #0x98
    1f84:	add	x5, sp, #0x88
    1f88:	add	x4, sp, #0x90
    1f8c:	add	x3, sp, #0x80
    1f90:	add	x2, sp, #0x78
    1f94:	mov	w1, w21
    1f98:	stp	w0, wzr, [sp, #152]
    1f9c:	mov	x0, x26
    1fa0:	bl	13b8 <grub_mod_fini+0x680>
    1fa4:	bl	0 <grub_refresh>
    1fa8:	b	18ac <grub_cmdline_get+0x1fc>
    1fac:	ldr	x0, [sp, #136]
    1fb0:	mov	x22, #0x0                   	// #0
    1fb4:	bl	0 <grub_free>
    1fb8:	ldp	x19, x20, [sp, #16]
    1fbc:	ldp	x25, x26, [sp, #64]
    1fc0:	b	1944 <grub_cmdline_get+0x294>
    1fc4:	ldr	x0, [sp, #136]
    1fc8:	bl	0 <grub_free>
    1fcc:	mov	x0, x26
    1fd0:	bl	0 <grub_free>
    1fd4:	ldp	x19, x20, [sp, #16]
    1fd8:	ldp	x25, x26, [sp, #64]
    1fdc:	b	1944 <grub_cmdline_get+0x294>
    1fe0:	ldp	x1, x2, [sp, #120]
    1fe4:	ldr	x3, [sp, #136]
    1fe8:	add	x2, x2, #0x1
    1fec:	sub	x2, x2, x1
    1ff0:	add	x1, x3, x1, lsl #2
    1ff4:	lsl	x2, x2, #2
    1ff8:	bl	0 <grub_memmove>
    1ffc:	ldp	x3, x5, [sp, #120]
    2000:	ldr	x0, [x19, #24]
    2004:	sub	x1, x5, x3
    2008:	str	wzr, [x0, x1, lsl #2]
    200c:	b	1dd8 <grub_cmdline_get+0x728>
    2010:	bl	0 <grub_print_error>
    2014:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    2018:	add	x0, x0, #0x0
    201c:	ldr	x2, [sp, #104]
    2020:	ldr	x1, [x0]
    2024:	ldr	x0, [x19, #24]
    2028:	str	wzr, [x1]
    202c:	b	1d38 <grub_cmdline_get+0x688>
    2030:	ldr	x2, [sp, #128]
    2034:	b	191c <grub_cmdline_get+0x26c>
	...
    2070:	stp	x29, x30, [sp, #-80]!
    2074:	mov	x29, sp
    2078:	stp	x21, x22, [sp, #32]
    207c:	mov	w22, w1
    2080:	ldr	x21, [x0]
    2084:	stp	x23, x24, [sp, #48]
    2088:	mov	x24, x2
    208c:	stp	x19, x20, [sp, #16]
    2090:	mov	x20, x0
    2094:	ldr	x23, [x21, #24]
    2098:	str	x25, [sp, #64]
    209c:	ldr	x25, [x21]
    20a0:	mov	x0, x23
    20a4:	bl	0 <grub_dl_load>
    20a8:	cbz	x0, 2140 <grub_cmdline_get+0xa90>
    20ac:	mov	x19, x0
    20b0:	mov	x0, x23
    20b4:	bl	0 <grub_free>
    20b8:	mov	x0, x19
    20bc:	bl	0 <grub_dl_ref>
    20c0:	mov	x0, x21
    20c4:	ldr	x21, [x25, #16]
    20c8:	bl	0 <grub_unregister_extcmd>
    20cc:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    20d0:	mov	x1, x21
    20d4:	ldr	x0, [x0]
    20d8:	ldr	x0, [x0]
    20dc:	bl	0 <grub_named_list_find>
    20e0:	cbz	x0, 2130 <grub_cmdline_get+0xa80>
    20e4:	ldr	w1, [x0, #40]
    20e8:	mov	w2, #0x50                  	// #80
    20ec:	and	w1, w1, w2
    20f0:	cmp	w1, w2
    20f4:	b.eq	2168 <grub_cmdline_get+0xab8>  // b.none
    20f8:	ldr	x3, [x0, #32]
    20fc:	mov	x2, x24
    2100:	mov	w1, w22
    2104:	blr	x3
    2108:	mov	w19, w0
    210c:	mov	x0, x21
    2110:	bl	0 <grub_free>
    2114:	mov	w0, w19
    2118:	ldp	x19, x20, [sp, #16]
    211c:	ldp	x21, x22, [sp, #32]
    2120:	ldp	x23, x24, [sp, #48]
    2124:	ldr	x25, [sp, #64]
    2128:	ldp	x29, x30, [sp], #80
    212c:	ret
    2130:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    2134:	ldr	x0, [x0]
    2138:	ldr	w19, [x0]
    213c:	b	210c <grub_cmdline_get+0xa5c>
    2140:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    2144:	ldp	x21, x22, [sp, #32]
    2148:	ldr	x0, [x0]
    214c:	ldp	x23, x24, [sp, #48]
    2150:	ldr	w19, [x0]
    2154:	ldr	x25, [sp, #64]
    2158:	mov	w0, w19
    215c:	ldp	x19, x20, [sp, #16]
    2160:	ldp	x29, x30, [sp], #80
    2164:	ret
    2168:	ldr	x3, [x20, #16]
    216c:	mov	x2, x24
    2170:	mov	w1, w22
    2174:	bl	0 <grub_extcmd_dispatcher>
    2178:	mov	w19, w0
    217c:	b	210c <grub_cmdline_get+0xa5c>
	...

0000000000002190 <grub_dyncmd_get_cmd>:
    2190:	stp	x29, x30, [sp, #-48]!
    2194:	mov	x29, sp
    2198:	stp	x21, x22, [sp, #32]
    219c:	ldr	x21, [x0, #64]
    21a0:	stp	x19, x20, [sp, #16]
    21a4:	mov	x20, x0
    21a8:	ldr	x22, [x21, #24]
    21ac:	mov	x0, x22
    21b0:	bl	0 <grub_dl_load>
    21b4:	mov	x19, x0
    21b8:	cbz	x0, 21f8 <grub_dyncmd_get_cmd+0x68>
    21bc:	mov	x0, x22
    21c0:	bl	0 <grub_free>
    21c4:	mov	x0, x19
    21c8:	bl	0 <grub_dl_ref>
    21cc:	mov	x0, x21
    21d0:	ldr	x20, [x20, #16]
    21d4:	bl	0 <grub_unregister_extcmd>
    21d8:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    21dc:	mov	x1, x20
    21e0:	ldr	x0, [x0]
    21e4:	ldr	x0, [x0]
    21e8:	bl	0 <grub_named_list_find>
    21ec:	mov	x19, x0
    21f0:	mov	x0, x20
    21f4:	bl	0 <grub_free>
    21f8:	mov	x0, x19
    21fc:	ldp	x19, x20, [sp, #16]
    2200:	ldp	x21, x22, [sp, #32]
    2204:	ldp	x29, x30, [sp], #48
    2208:	ret
    220c:	nop
	...

0000000000002218 <read_command_list>:
    2218:	cbz	x0, 23c0 <read_command_list+0x1a8>
    221c:	stp	x29, x30, [sp, #-96]!
    2220:	mov	x1, x0
    2224:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    2228:	mov	x29, sp
    222c:	ldr	x0, [x0]
    2230:	stp	x23, x24, [sp, #48]
    2234:	bl	0 <grub_xasprintf>
    2238:	mov	x23, x0
    223c:	cbz	x0, 23a0 <read_command_list+0x188>
    2240:	mov	w1, #0x32                  	// #50
    2244:	stp	x21, x22, [sp, #32]
    2248:	bl	0 <grub_file_open>
    224c:	mov	x22, x0
    2250:	cbz	x0, 2394 <read_command_list+0x17c>
    2254:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    2258:	stp	x19, x20, [sp, #16]
    225c:	mov	x21, #0x0                   	// #0
    2260:	ldr	x24, [x0]
    2264:	stp	x25, x26, [sp, #64]
    2268:	stp	x27, x28, [sp, #80]
    226c:	ldr	x19, [x24]
    2270:	cbz	x19, 22a0 <read_command_list+0x88>
    2274:	ldr	w0, [x19, #40]
    2278:	mov	x20, x19
    227c:	ldr	x19, [x19]
    2280:	tbz	w0, #5, 23b8 <read_command_list+0x1a0>
    2284:	cbz	x21, 23d0 <read_command_list+0x1b8>
    2288:	str	x19, [x21]
    228c:	ldr	x0, [x20, #64]
    2290:	bl	0 <grub_free>
    2294:	mov	x0, x20
    2298:	bl	0 <grub_free>
    229c:	cbnz	x19, 2274 <read_command_list+0x5c>
    22a0:	mov	x0, x22
    22a4:	adrp	x25, 0 <grub_normal_free_menu-0x268>
    22a8:	bl	ded8 <grub_file_getline>
    22ac:	adrp	x27, 0 <grub_normal_free_menu-0x268>
    22b0:	mov	x21, x0
    22b4:	cbz	x0, 2380 <read_command_list+0x168>
    22b8:	mov	x20, x0
    22bc:	b	22c4 <read_command_list+0xac>
    22c0:	add	x20, x20, #0x1
    22c4:	ldrb	w0, [x20]
    22c8:	bl	0 <grub_isspace>
    22cc:	mov	w19, w0
    22d0:	cbnz	w0, 22c0 <read_command_list+0xa8>
    22d4:	ldrb	w0, [x20]
    22d8:	cmp	w0, #0x2a
    22dc:	b.ne	22ec <read_command_list+0xd4>  // b.any
    22e0:	ldrb	w0, [x20, #1]
    22e4:	add	x20, x20, #0x1
    22e8:	mov	w19, #0x1                   	// #1
    22ec:	sub	w0, w0, #0x21
    22f0:	cmp	w0, #0x5d
    22f4:	b.hi	2368 <read_command_list+0x150>  // b.pmore
    22f8:	mov	x0, x20
    22fc:	mov	w1, #0x3a                  	// #58
    2300:	bl	0 <grub_strchr>
    2304:	cbz	x0, 2368 <read_command_list+0x150>
    2308:	mov	x28, x0
    230c:	strb	wzr, [x28], #1
    2310:	ldrb	w0, [x0, #1]
    2314:	cmp	w0, #0x20
    2318:	ccmp	w0, #0x9, #0x4, ne  // ne = any
    231c:	b.ne	2330 <read_command_list+0x118>  // b.any
    2320:	ldrb	w0, [x28, #1]!
    2324:	cmp	w0, #0x20
    2328:	ccmp	w0, #0x9, #0x4, ne  // ne = any
    232c:	b.eq	2320 <read_command_list+0x108>  // b.none
    2330:	sub	w0, w0, #0x21
    2334:	cmp	w0, #0x5d
    2338:	b.hi	2368 <read_command_list+0x150>  // b.pmore
    233c:	ldr	x0, [x25]
    2340:	ldr	x26, [x0]
    2344:	cbnz	x26, 2354 <read_command_list+0x13c>
    2348:	b	23d8 <read_command_list+0x1c0>
    234c:	ldr	x26, [x26, #112]
    2350:	cbz	x26, 23d8 <read_command_list+0x1c0>
    2354:	ldr	x1, [x26]
    2358:	mov	x0, x28
    235c:	bl	0 <grub_strcmp>
    2360:	cbnz	w0, 234c <read_command_list+0x134>
    2364:	nop
    2368:	mov	x0, x21
    236c:	bl	0 <grub_free>
    2370:	mov	x0, x22
    2374:	bl	ded8 <grub_file_getline>
    2378:	mov	x21, x0
    237c:	cbnz	x0, 22b8 <read_command_list+0xa0>
    2380:	mov	x0, x22
    2384:	bl	0 <grub_file_close>
    2388:	ldp	x19, x20, [sp, #16]
    238c:	ldp	x25, x26, [sp, #64]
    2390:	ldp	x27, x28, [sp, #80]
    2394:	mov	x0, x23
    2398:	bl	0 <grub_free>
    239c:	ldp	x21, x22, [sp, #32]
    23a0:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    23a4:	ldp	x23, x24, [sp, #48]
    23a8:	ldr	x0, [x0]
    23ac:	str	wzr, [x0]
    23b0:	ldp	x29, x30, [sp], #96
    23b4:	ret
    23b8:	mov	x21, x20
    23bc:	b	2270 <read_command_list+0x58>
    23c0:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    23c4:	ldr	x0, [x0]
    23c8:	str	wzr, [x0]
    23cc:	ret
    23d0:	str	x19, [x24]
    23d4:	b	228c <read_command_list+0x74>
    23d8:	mov	x0, x20
    23dc:	bl	0 <grub_strdup>
    23e0:	mov	x20, x0
    23e4:	cbz	x0, 2368 <read_command_list+0x150>
    23e8:	mov	x0, x28
    23ec:	bl	0 <grub_strdup>
    23f0:	mov	x28, x0
    23f4:	cbz	x0, 2438 <read_command_list+0x220>
    23f8:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    23fc:	mov	w6, w19
    2400:	ldr	x4, [x27]
    2404:	mov	x5, #0x0                   	// #0
    2408:	ldr	x1, [x0]
    240c:	mov	x3, #0x0                   	// #0
    2410:	mov	x0, x20
    2414:	mov	w2, #0x70                  	// #112
    2418:	bl	0 <grub_register_extcmd_prio>
    241c:	mov	x1, x0
    2420:	cbz	x0, 2444 <read_command_list+0x22c>
    2424:	ldr	x0, [x24]
    2428:	str	x28, [x1, #24]
    242c:	mov	x1, x20
    2430:	bl	0 <grub_named_list_find>
    2434:	b	2368 <read_command_list+0x150>
    2438:	mov	x0, x20
    243c:	bl	0 <grub_free>
    2440:	b	2368 <read_command_list+0x150>
    2444:	mov	x0, x20
    2448:	bl	0 <grub_free>
    244c:	mov	x0, x28
    2450:	bl	0 <grub_free>
    2454:	b	2368 <read_command_list+0x150>
	...
    2488:	stp	x29, x30, [sp, #-48]!
    248c:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    2490:	mov	x29, sp
    2494:	stp	x19, x20, [sp, #16]
    2498:	mov	x20, x0
    249c:	ldr	x0, [x1]
    24a0:	bl	0 <grub_env_get>
    24a4:	cbz	x0, 250c <read_command_list+0x2f4>
    24a8:	str	x21, [sp, #32]
    24ac:	mov	x21, x0
    24b0:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    24b4:	ldr	x0, [x0]
    24b8:	ldr	x19, [x0]
    24bc:	cbz	x19, 24f4 <read_command_list+0x2dc>
    24c0:	ldr	w1, [x19, #40]
    24c4:	mov	x0, x20
    24c8:	cbz	w1, 24ec <read_command_list+0x2d4>
    24cc:	ldr	x1, [x19, #16]
    24d0:	cbz	x20, 24e0 <read_command_list+0x2c8>
    24d4:	bl	0 <grub_strword>
    24d8:	cbnz	w0, 2508 <read_command_list+0x2f0>
    24dc:	ldr	x1, [x19, #16]
    24e0:	mov	x0, x21
    24e4:	bl	0 <grub_strword>
    24e8:	cbnz	w0, 2508 <read_command_list+0x2f0>
    24ec:	ldr	x19, [x19]
    24f0:	cbnz	x19, 24c0 <read_command_list+0x2a8>
    24f4:	mov	w0, #0x0                   	// #0
    24f8:	ldp	x19, x20, [sp, #16]
    24fc:	ldr	x21, [sp, #32]
    2500:	ldp	x29, x30, [sp], #48
    2504:	ret
    2508:	ldr	x21, [sp, #32]
    250c:	mov	w0, #0x1                   	// #1
    2510:	ldp	x19, x20, [sp, #16]
    2514:	ldp	x29, x30, [sp], #48
    2518:	ret
    251c:	nop
	...

0000000000002530 <grub_auth_register_authentication>:
    2530:	stp	x29, x30, [sp, #-64]!
    2534:	adrp	x3, 0 <grub_normal_free_menu-0x268>
    2538:	mov	x29, sp
    253c:	str	x23, [sp, #48]
    2540:	ldr	x23, [x3]
    2544:	stp	x19, x20, [sp, #16]
    2548:	mov	x20, x0
    254c:	stp	x21, x22, [sp, #32]
    2550:	mov	x22, x1
    2554:	mov	x1, x0
    2558:	ldr	x0, [x23]
    255c:	mov	x21, x2
    2560:	bl	0 <grub_named_list_find>
    2564:	mov	x19, x0
    2568:	cbz	x0, 2594 <grub_auth_register_authentication+0x64>
    256c:	ldr	x0, [x19, #16]
    2570:	stp	x22, x21, [x19, #24]
    2574:	mov	w21, #0x0                   	// #0
    2578:	cbz	x0, 25c8 <grub_auth_register_authentication+0x98>
    257c:	mov	w0, w21
    2580:	ldp	x19, x20, [sp, #16]
    2584:	ldp	x21, x22, [sp, #32]
    2588:	ldr	x23, [sp, #48]
    258c:	ldp	x29, x30, [sp], #64
    2590:	ret
    2594:	mov	x0, #0x30                  	// #48
    2598:	bl	0 <grub_zalloc>
    259c:	mov	x19, x0
    25a0:	cbnz	x0, 256c <grub_auth_register_authentication+0x3c>
    25a4:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    25a8:	ldp	x19, x20, [sp, #16]
    25ac:	ldr	x0, [x0]
    25b0:	ldr	x23, [sp, #48]
    25b4:	ldr	w21, [x0]
    25b8:	mov	w0, w21
    25bc:	ldp	x21, x22, [sp, #32]
    25c0:	ldp	x29, x30, [sp], #64
    25c4:	ret
    25c8:	mov	x0, x20
    25cc:	bl	0 <grub_strdup>
    25d0:	str	x0, [x19, #16]
    25d4:	cbz	x0, 25fc <grub_auth_register_authentication+0xcc>
    25d8:	mov	x1, x19
    25dc:	mov	x0, x23
    25e0:	bl	0 <grub_list_push>
    25e4:	mov	w0, w21
    25e8:	ldp	x19, x20, [sp, #16]
    25ec:	ldp	x21, x22, [sp, #32]
    25f0:	ldr	x23, [sp, #48]
    25f4:	ldp	x29, x30, [sp], #64
    25f8:	ret
    25fc:	mov	x0, x19
    2600:	bl	0 <grub_free>
    2604:	b	25a4 <grub_auth_register_authentication+0x74>
	...

0000000000002618 <grub_auth_unregister_authentication>:
    2618:	stp	x29, x30, [sp, #-32]!
    261c:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    2620:	mov	x29, sp
    2624:	stp	x19, x20, [sp, #16]
    2628:	mov	x20, x0
    262c:	ldr	x0, [x1]
    2630:	mov	x1, x20
    2634:	ldr	x0, [x0]
    2638:	bl	0 <grub_named_list_find>
    263c:	cbz	x0, 2688 <grub_auth_unregister_authentication+0x70>
    2640:	mov	x19, x0
    2644:	ldr	w0, [x0, #40]
    2648:	cbz	w0, 2660 <grub_auth_unregister_authentication+0x48>
    264c:	stp	xzr, xzr, [x19, #24]
    2650:	mov	w0, #0x0                   	// #0
    2654:	ldp	x19, x20, [sp, #16]
    2658:	ldp	x29, x30, [sp], #32
    265c:	ret
    2660:	ldr	x0, [x19, #16]
    2664:	bl	0 <grub_free>
    2668:	mov	x0, x19
    266c:	bl	0 <grub_list_remove>
    2670:	mov	x0, x19
    2674:	bl	0 <grub_free>
    2678:	mov	w0, #0x0                   	// #0
    267c:	ldp	x19, x20, [sp, #16]
    2680:	ldp	x29, x30, [sp], #32
    2684:	ret
    2688:	mov	x2, x20
    268c:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    2690:	ldp	x19, x20, [sp, #16]
    2694:	mov	w0, #0x12                  	// #18
    2698:	ldp	x29, x30, [sp], #32
    269c:	ldr	x1, [x1]
    26a0:	b	0 <grub_error>
    26a4:	nop
	...

00000000000026b8 <grub_auth_authenticate>:
    26b8:	stp	x29, x30, [sp, #-48]!
    26bc:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    26c0:	mov	x29, sp
    26c4:	stp	x21, x22, [sp, #32]
    26c8:	ldr	x21, [x1]
    26cc:	mov	x1, x0
    26d0:	stp	x19, x20, [sp, #16]
    26d4:	mov	x20, x0
    26d8:	ldr	x0, [x21]
    26dc:	bl	0 <grub_named_list_find>
    26e0:	mov	x19, x0
    26e4:	cbz	x0, 2710 <grub_auth_authenticate+0x58>
    26e8:	ldr	x0, [x19, #16]
    26ec:	mov	w1, #0x1                   	// #1
    26f0:	str	w1, [x19, #40]
    26f4:	mov	w22, #0x0                   	// #0
    26f8:	cbz	x0, 2740 <grub_auth_authenticate+0x88>
    26fc:	mov	w0, w22
    2700:	ldp	x19, x20, [sp, #16]
    2704:	ldp	x21, x22, [sp, #32]
    2708:	ldp	x29, x30, [sp], #48
    270c:	ret
    2710:	mov	x0, #0x30                  	// #48
    2714:	bl	0 <grub_zalloc>
    2718:	mov	x19, x0
    271c:	cbnz	x0, 26e8 <grub_auth_authenticate+0x30>
    2720:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    2724:	ldp	x19, x20, [sp, #16]
    2728:	ldr	x0, [x0]
    272c:	ldr	w22, [x0]
    2730:	mov	w0, w22
    2734:	ldp	x21, x22, [sp, #32]
    2738:	ldp	x29, x30, [sp], #48
    273c:	ret
    2740:	mov	x0, x20
    2744:	bl	0 <grub_strdup>
    2748:	str	x0, [x19, #16]
    274c:	cbz	x0, 2770 <grub_auth_authenticate+0xb8>
    2750:	mov	x1, x19
    2754:	mov	x0, x21
    2758:	bl	0 <grub_list_push>
    275c:	mov	w0, w22
    2760:	ldp	x19, x20, [sp, #16]
    2764:	ldp	x21, x22, [sp, #32]
    2768:	ldp	x29, x30, [sp], #48
    276c:	ret
    2770:	mov	x0, x19
    2774:	bl	0 <grub_free>
    2778:	b	2720 <grub_auth_authenticate+0x68>
    277c:	nop
	...

0000000000002790 <grub_auth_deauthenticate>:
    2790:	stp	x29, x30, [sp, #-32]!
    2794:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    2798:	mov	x29, sp
    279c:	stp	x19, x20, [sp, #16]
    27a0:	mov	x20, x0
    27a4:	ldr	x0, [x1]
    27a8:	mov	x1, x20
    27ac:	ldr	x0, [x0]
    27b0:	bl	0 <grub_named_list_find>
    27b4:	cbz	x0, 2800 <grub_auth_deauthenticate+0x70>
    27b8:	mov	x19, x0
    27bc:	ldr	x0, [x0, #24]
    27c0:	cbz	x0, 27d8 <grub_auth_deauthenticate+0x48>
    27c4:	str	wzr, [x19, #40]
    27c8:	mov	w0, #0x0                   	// #0
    27cc:	ldp	x19, x20, [sp, #16]
    27d0:	ldp	x29, x30, [sp], #32
    27d4:	ret
    27d8:	ldr	x0, [x19, #16]
    27dc:	bl	0 <grub_free>
    27e0:	mov	x0, x19
    27e4:	bl	0 <grub_list_remove>
    27e8:	mov	x0, x19
    27ec:	bl	0 <grub_free>
    27f0:	mov	w0, #0x0                   	// #0
    27f4:	ldp	x19, x20, [sp, #16]
    27f8:	ldp	x29, x30, [sp], #32
    27fc:	ret
    2800:	mov	x2, x20
    2804:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    2808:	ldp	x19, x20, [sp, #16]
    280c:	mov	w0, #0x12                  	// #18
    2810:	ldp	x29, x30, [sp], #32
    2814:	ldr	x1, [x1]
    2818:	b	0 <grub_error>
    281c:	nop
	...

0000000000002830 <grub_auth_check_authentication>:
    2830:	sub	sp, sp, #0x840
    2834:	mov	x2, #0x400                 	// #1024
    2838:	mov	w1, #0x0                   	// #0
    283c:	stp	x29, x30, [sp]
    2840:	mov	x29, sp
    2844:	stp	x21, x22, [sp, #32]
    2848:	mov	x21, x0
    284c:	add	x0, sp, #0x40
    2850:	bl	0 <grub_memset>
    2854:	mov	x0, x21
    2858:	bl	2488 <read_command_list+0x270>
    285c:	cbz	w0, 2884 <grub_auth_check_authentication+0x54>
    2860:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    2864:	mov	x2, #0x1                   	// #1
    2868:	mov	w0, #0x0                   	// #0
    286c:	ldr	x1, [x1]
    2870:	ldp	x29, x30, [sp]
    2874:	str	x2, [x1]
    2878:	ldp	x21, x22, [sp, #32]
    287c:	add	sp, sp, #0x840
    2880:	ret
    2884:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    2888:	adrp	x22, 0 <grub_normal_free_menu-0x268>
    288c:	stp	x19, x20, [sp, #16]
    2890:	mov	w20, #0x0                   	// #0
    2894:	ldr	x0, [x0]
    2898:	str	x23, [sp, #48]
    289c:	adrp	x23, 0 <grub_normal_free_menu-0x268>
    28a0:	bl	0 <grub_puts_>
    28a4:	nop
    28a8:	bl	0 <grub_getkey>
    28ac:	mov	w19, w0
    28b0:	cmp	w19, #0xa
    28b4:	add	w0, w20, #0x2
    28b8:	sub	w1, w19, #0x20
    28bc:	ccmp	w19, #0xd, #0x4, ne  // ne = any
    28c0:	b.eq	2920 <grub_auth_check_authentication+0xf0>  // b.none
    28c4:	cmp	w19, #0x1b
    28c8:	b.eq	2a44 <grub_auth_check_authentication+0x214>  // b.none
    28cc:	cmp	w19, #0x8
    28d0:	b.eq	2a30 <grub_auth_check_authentication+0x200>  // b.none
    28d4:	cmp	w1, #0x5e
    28d8:	b.hi	28a8 <grub_auth_check_authentication+0x78>  // b.pmore
    28dc:	cmp	w0, #0x3fe
    28e0:	b.hi	28a8 <grub_auth_check_authentication+0x78>  // b.pmore
    28e4:	add	x3, sp, #0x40
    28e8:	add	w2, w20, #0x1
    28ec:	ldr	x0, [x22]
    28f0:	mov	w1, w19
    28f4:	strb	w19, [x3, w20, uxtw]
    28f8:	mov	w20, w2
    28fc:	bl	0 <grub_printf>
    2900:	bl	0 <grub_getkey>
    2904:	mov	w19, w0
    2908:	cmp	w19, #0xa
    290c:	add	w0, w20, #0x2
    2910:	sub	w1, w19, #0x20
    2914:	ccmp	w19, #0xd, #0x4, ne  // ne = any
    2918:	b.ne	28c4 <grub_auth_check_authentication+0x94>  // b.any
    291c:	nop
    2920:	add	x0, sp, #0x40
    2924:	mov	w1, #0x0                   	// #0
    2928:	add	x0, x0, w20, uxtw
    292c:	mov	w2, #0x3ff                 	// #1023
    2930:	sub	w2, w2, w20
    2934:	bl	0 <grub_memset>
    2938:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    293c:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    2940:	ldr	x1, [x1]
    2944:	ldr	x0, [x0]
    2948:	ldr	x1, [x1]
    294c:	blr	x1
    2950:	bl	0 <grub_refresh>
    2954:	cmp	w19, #0x1b
    2958:	b.eq	29d8 <grub_auth_check_authentication+0x1a8>  // b.none
    295c:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    2960:	ldr	x0, [x0]
    2964:	bl	0 <grub_puts_>
    2968:	add	x0, sp, #0x440
    296c:	mov	w1, #0x400                 	// #1024
    2970:	bl	0 <grub_password_get>
    2974:	cbz	w0, 29d8 <grub_auth_check_authentication+0x1a8>
    2978:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    297c:	ldr	x0, [x0]
    2980:	ldr	x19, [x0]
    2984:	cbz	x19, 29d8 <grub_auth_check_authentication+0x1a8>
    2988:	mov	x20, #0x0                   	// #0
    298c:	nop
    2990:	ldr	x1, [x19, #16]
    2994:	add	x0, sp, #0x40
    2998:	bl	0 <grub_strcmp>
    299c:	cmp	w0, #0x0
    29a0:	csel	x20, x20, x19, ne  // ne = any
    29a4:	ldr	x19, [x19]
    29a8:	cbnz	x19, 2990 <grub_auth_check_authentication+0x160>
    29ac:	cbz	x20, 29d8 <grub_auth_check_authentication+0x1a8>
    29b0:	ldr	x3, [x20, #24]
    29b4:	cbz	x3, 29d8 <grub_auth_check_authentication+0x1a8>
    29b8:	ldr	x2, [x20, #32]
    29bc:	add	x1, sp, #0x440
    29c0:	add	x0, sp, #0x40
    29c4:	blr	x3
    29c8:	mov	x0, x21
    29cc:	bl	2488 <read_command_list+0x270>
    29d0:	cbnz	w0, 2a74 <grub_auth_check_authentication+0x244>
    29d4:	nop
    29d8:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    29dc:	mov	w1, #0x3e8                 	// #1000
    29e0:	ldr	x19, [x0]
    29e4:	ldr	x0, [x19]
    29e8:	mul	w0, w1, w0
    29ec:	bl	0 <grub_millisleep>
    29f0:	ldr	x0, [x19]
    29f4:	mov	x1, #0x7ffffffffffffffe    	// #9223372036854775806
    29f8:	cmp	x0, x1
    29fc:	b.hi	2a08 <grub_auth_check_authentication+0x1d8>  // b.pmore
    2a00:	lsl	x0, x0, #1
    2a04:	str	x0, [x19]
    2a08:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    2a0c:	mov	w0, #0x1e                  	// #30
    2a10:	ldr	x1, [x1]
    2a14:	bl	0 <grub_error>
    2a18:	ldp	x29, x30, [sp]
    2a1c:	ldp	x19, x20, [sp, #16]
    2a20:	ldp	x21, x22, [sp, #32]
    2a24:	ldr	x23, [sp, #48]
    2a28:	add	sp, sp, #0x840
    2a2c:	ret
    2a30:	cbz	w20, 28a8 <grub_auth_check_authentication+0x78>
    2a34:	ldr	x0, [x23]
    2a38:	sub	w20, w20, #0x1
    2a3c:	bl	0 <grub_printf>
    2a40:	b	28a8 <grub_auth_check_authentication+0x78>
    2a44:	mov	x2, #0x3ff                 	// #1023
    2a48:	add	x0, sp, #0x40
    2a4c:	mov	w1, #0x0                   	// #0
    2a50:	bl	0 <grub_memset>
    2a54:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    2a58:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    2a5c:	ldr	x1, [x1]
    2a60:	ldr	x0, [x0]
    2a64:	ldr	x1, [x1]
    2a68:	blr	x1
    2a6c:	bl	0 <grub_refresh>
    2a70:	b	29d8 <grub_auth_check_authentication+0x1a8>
    2a74:	ldp	x19, x20, [sp, #16]
    2a78:	ldr	x23, [sp, #48]
    2a7c:	b	2860 <grub_auth_check_authentication+0x30>
	...
    2ac8:	cmp	w1, #0x0
    2acc:	b.le	2ad8 <grub_auth_check_authentication+0x2a8>
    2ad0:	ldr	x0, [x2]
    2ad4:	b	2830 <grub_auth_check_authentication>
    2ad8:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    2adc:	ldr	x0, [x0]
    2ae0:	b	2830 <grub_auth_check_authentication>
    2ae4:	nop
	...

0000000000002af0 <grub_normal_auth_init>:
    2af0:	stp	x29, x30, [sp, #-16]!
    2af4:	adrp	x3, 0 <grub_normal_free_menu-0x268>
    2af8:	adrp	x2, 0 <grub_normal_free_menu-0x268>
    2afc:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    2b00:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    2b04:	mov	x29, sp
    2b08:	ldr	x3, [x3]
    2b0c:	mov	w4, #0x0                   	// #0
    2b10:	ldr	x2, [x2]
    2b14:	ldr	x1, [x1]
    2b18:	ldr	x0, [x0]
    2b1c:	bl	0 <grub_register_command_prio>
    2b20:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    2b24:	ldr	x1, [x1]
    2b28:	str	x0, [x1, #8]
    2b2c:	ldp	x29, x30, [sp], #16
    2b30:	ret
    2b34:	nop
	...

0000000000002b60 <grub_normal_auth_fini>:
    2b60:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    2b64:	ldr	x0, [x0]
    2b68:	ldr	x0, [x0, #8]
    2b6c:	b	0 <grub_unregister_command>
	...
    2b78:	stp	x29, x30, [sp, #-64]!
    2b7c:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    2b80:	mov	x29, sp
    2b84:	stp	x21, x22, [sp, #32]
    2b88:	ldr	x22, [x0]
    2b8c:	stp	x19, x20, [sp, #16]
    2b90:	ldr	x19, [x22]
    2b94:	cbz	x19, 2c00 <grub_normal_auth_fini+0xa0>
    2b98:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    2b9c:	stp	x23, x24, [sp, #48]
    2ba0:	adrp	x24, 0 <grub_normal_free_menu-0x268>
    2ba4:	ldr	x23, [x0]
    2ba8:	ldr	x20, [x23]
    2bac:	ldr	x21, [x19, #16]
    2bb0:	cbnz	x20, 2bc0 <grub_normal_auth_fini+0x60>
    2bb4:	b	2c18 <grub_normal_auth_fini+0xb8>
    2bb8:	ldr	x20, [x20, #112]
    2bbc:	cbz	x20, 2c14 <grub_normal_auth_fini+0xb4>
    2bc0:	ldr	x1, [x20]
    2bc4:	mov	x0, x21
    2bc8:	bl	0 <grub_strcmp>
    2bcc:	cbnz	w0, 2bb8 <grub_normal_auth_fini+0x58>
    2bd0:	ldr	x0, [x24]
    2bd4:	ldr	w0, [x0]
    2bd8:	cbnz	w0, 2c3c <grub_normal_auth_fini+0xdc>
    2bdc:	ldr	x1, [x19]
    2be0:	str	x1, [x22]
    2be4:	ldr	x0, [x19, #16]
    2be8:	bl	0 <grub_free>
    2bec:	mov	x0, x19
    2bf0:	bl	0 <grub_free>
    2bf4:	ldr	x19, [x22]
    2bf8:	cbnz	x19, 2ba8 <grub_normal_auth_fini+0x48>
    2bfc:	ldp	x23, x24, [sp, #48]
    2c00:	mov	w0, #0x0                   	// #0
    2c04:	ldp	x19, x20, [sp, #16]
    2c08:	ldp	x21, x22, [sp, #32]
    2c0c:	ldp	x29, x30, [sp], #64
    2c10:	ret
    2c14:	ldr	x21, [x19, #16]
    2c18:	mov	x0, x21
    2c1c:	bl	0 <grub_dl_load>
    2c20:	cbz	x0, 2bd0 <grub_normal_auth_fini+0x70>
    2c24:	mov	w0, #0x1                   	// #1
    2c28:	ldp	x19, x20, [sp, #16]
    2c2c:	ldp	x21, x22, [sp, #32]
    2c30:	ldp	x23, x24, [sp, #48]
    2c34:	ldp	x29, x30, [sp], #64
    2c38:	ret
    2c3c:	bl	0 <grub_print_error>
    2c40:	b	2bdc <grub_normal_auth_fini+0x7c>
    2c44:	nop
	...

0000000000002c60 <read_fs_list>:
    2c60:	stp	x29, x30, [sp, #-80]!
    2c64:	mov	x29, sp
    2c68:	stp	x23, x24, [sp, #48]
    2c6c:	cbz	x0, 2de8 <read_fs_list+0x188>
    2c70:	mov	x1, x0
    2c74:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    2c78:	stp	x25, x26, [sp, #64]
    2c7c:	ldr	x0, [x0]
    2c80:	bl	0 <grub_xasprintf>
    2c84:	mov	x25, x0
    2c88:	cbz	x0, 2dac <read_fs_list+0x14c>
    2c8c:	adrp	x2, 0 <grub_normal_free_menu-0x268>
    2c90:	mov	w1, #0x32                  	// #50
    2c94:	ldr	x24, [x2]
    2c98:	ldr	x26, [x24]
    2c9c:	str	xzr, [x24]
    2ca0:	bl	0 <grub_file_open>
    2ca4:	mov	x23, x0
    2ca8:	cbz	x0, 2d9c <read_fs_list+0x13c>
    2cac:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    2cb0:	stp	x21, x22, [sp, #32]
    2cb4:	ldr	x22, [x0]
    2cb8:	stp	x19, x20, [sp, #16]
    2cbc:	ldr	x19, [x22]
    2cc0:	cbz	x19, 2ce0 <read_fs_list+0x80>
    2cc4:	nop
    2cc8:	mov	x0, x19
    2ccc:	ldr	x19, [x19]
    2cd0:	bl	0 <grub_free>
    2cd4:	str	x19, [x22]
    2cd8:	cbnz	x19, 2cc8 <read_fs_list+0x68>
    2cdc:	nop
    2ce0:	mov	x0, x23
    2ce4:	bl	ded8 <grub_file_getline>
    2ce8:	mov	x21, x0
    2cec:	cbz	x0, 2d88 <read_fs_list+0x128>
    2cf0:	bl	0 <grub_strlen>
    2cf4:	sub	x19, x0, #0x1
    2cf8:	mov	x20, x21
    2cfc:	add	x19, x21, x19
    2d00:	b	2d08 <read_fs_list+0xa8>
    2d04:	add	x20, x20, #0x1
    2d08:	ldrb	w0, [x20]
    2d0c:	bl	0 <grub_isspace>
    2d10:	cbnz	w0, 2d04 <read_fs_list+0xa4>
    2d14:	cmp	x20, x19
    2d18:	b.cc	2d2c <read_fs_list+0xcc>  // b.lo, b.ul, b.last
    2d1c:	b	2ddc <read_fs_list+0x17c>
    2d20:	strb	wzr, [x19], #-1
    2d24:	cmp	x20, x19
    2d28:	b.eq	2ddc <read_fs_list+0x17c>  // b.none
    2d2c:	ldrb	w0, [x19]
    2d30:	bl	0 <grub_isspace>
    2d34:	cbnz	w0, 2d20 <read_fs_list+0xc0>
    2d38:	cmp	x20, x19
    2d3c:	b.cs	2ddc <read_fs_list+0x17c>  // b.hs, b.nlast
    2d40:	mov	x0, #0x18                  	// #24
    2d44:	bl	0 <grub_malloc>
    2d48:	mov	x19, x0
    2d4c:	cbz	x0, 2ddc <read_fs_list+0x17c>
    2d50:	mov	x0, x20
    2d54:	bl	0 <grub_strdup>
    2d58:	str	x0, [x19, #16]
    2d5c:	mov	x0, x21
    2d60:	bl	0 <grub_free>
    2d64:	ldr	x0, [x19, #16]
    2d68:	cbz	x0, 2df4 <read_fs_list+0x194>
    2d6c:	ldr	x0, [x22]
    2d70:	str	x0, [x19]
    2d74:	mov	x0, x23
    2d78:	str	x19, [x22]
    2d7c:	bl	ded8 <grub_file_getline>
    2d80:	mov	x21, x0
    2d84:	cbnz	x0, 2cf0 <read_fs_list+0x90>
    2d88:	mov	x0, x23
    2d8c:	bl	0 <grub_file_close>
    2d90:	ldp	x19, x20, [sp, #16]
    2d94:	ldp	x21, x22, [sp, #32]
    2d98:	str	x26, [x24]
    2d9c:	mov	x0, x25
    2da0:	bl	0 <grub_free>
    2da4:	ldp	x25, x26, [sp, #64]
    2da8:	b	2db8 <read_fs_list+0x158>
    2dac:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    2db0:	ldp	x25, x26, [sp, #64]
    2db4:	ldr	x24, [x0]
    2db8:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    2dbc:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    2dc0:	ldr	x0, [x0]
    2dc4:	ldr	x1, [x1]
    2dc8:	str	x1, [x24]
    2dcc:	str	wzr, [x0]
    2dd0:	ldp	x23, x24, [sp, #48]
    2dd4:	ldp	x29, x30, [sp], #80
    2dd8:	ret
    2ddc:	mov	x0, x21
    2de0:	bl	0 <grub_free>
    2de4:	b	2ce0 <read_fs_list+0x80>
    2de8:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    2dec:	ldr	x24, [x0]
    2df0:	b	2db8 <read_fs_list+0x158>
    2df4:	mov	x0, x19
    2df8:	bl	0 <grub_free>
    2dfc:	b	2ce0 <read_fs_list+0x80>
	...
    2e28:	stp	x29, x30, [sp, #-80]!
    2e2c:	mov	x29, sp
    2e30:	stp	x21, x22, [sp, #32]
    2e34:	stp	x23, x24, [sp, #48]
    2e38:	mov	x24, x0
    2e3c:	mov	x0, x1
    2e40:	bl	0 <grub_strdup>
    2e44:	cbz	x0, 2f38 <read_fs_list+0x2d8>
    2e48:	mov	x22, x0
    2e4c:	mov	w1, #0x2f                  	// #47
    2e50:	bl	0 <grub_strchr>
    2e54:	mov	x23, x0
    2e58:	cbz	x0, 2f68 <read_fs_list+0x308>
    2e5c:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    2e60:	stp	x19, x20, [sp, #16]
    2e64:	adrp	x21, 0 <grub_normal_free_menu-0x268>
    2e68:	ldr	x20, [x0]
    2e6c:	mov	x19, #0x0                   	// #0
    2e70:	strb	wzr, [x23]
    2e74:	mov	x1, x20
    2e78:	b	2e84 <read_fs_list+0x224>
    2e7c:	ldr	x2, [x21]
    2e80:	ldr	x1, [x2, x19, lsl #3]
    2e84:	mov	x0, x22
    2e88:	bl	0 <grub_strcmp>
    2e8c:	cbz	w0, 2ed4 <read_fs_list+0x274>
    2e90:	add	x19, x19, #0x1
    2e94:	cmp	x19, #0x10
    2e98:	b.ne	2e7c <read_fs_list+0x21c>  // b.any
    2e9c:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    2ea0:	mov	x1, x22
    2ea4:	mov	w21, #0x1                   	// #1
    2ea8:	ldr	x0, [x0]
    2eac:	bl	0 <grub_printf_>
    2eb0:	bl	40d0 <grub_wait_after_message>
    2eb4:	ldp	x19, x20, [sp, #16]
    2eb8:	mov	x0, x22
    2ebc:	bl	0 <grub_free>
    2ec0:	mov	w0, w21
    2ec4:	ldp	x21, x22, [sp, #32]
    2ec8:	ldp	x23, x24, [sp, #48]
    2ecc:	ldp	x29, x30, [sp], #80
    2ed0:	ret
    2ed4:	mov	x1, x20
    2ed8:	add	x23, x23, #0x1
    2edc:	mov	x20, #0x0                   	// #0
    2ee0:	str	x25, [sp, #64]
    2ee4:	adrp	x25, 0 <grub_normal_free_menu-0x268>
    2ee8:	b	2ef4 <read_fs_list+0x294>
    2eec:	ldr	x0, [x25]
    2ef0:	ldr	x1, [x0, x20, lsl #3]
    2ef4:	mov	x0, x23
    2ef8:	bl	0 <grub_strcmp>
    2efc:	mov	w21, w0
    2f00:	and	w0, w20, #0xff
    2f04:	add	x20, x20, #0x1
    2f08:	cbz	w21, 2f54 <read_fs_list+0x2f4>
    2f0c:	cmp	x20, #0x10
    2f10:	b.ne	2eec <read_fs_list+0x28c>  // b.any
    2f14:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    2f18:	mov	x1, x23
    2f1c:	mov	w21, #0x1                   	// #1
    2f20:	ldr	x0, [x0]
    2f24:	bl	0 <grub_printf_>
    2f28:	bl	40d0 <grub_wait_after_message>
    2f2c:	ldp	x19, x20, [sp, #16]
    2f30:	ldr	x25, [sp, #64]
    2f34:	b	2eb8 <read_fs_list+0x258>
    2f38:	bl	40d0 <grub_wait_after_message>
    2f3c:	mov	w21, #0x1                   	// #1
    2f40:	mov	w0, w21
    2f44:	ldp	x21, x22, [sp, #32]
    2f48:	ldp	x23, x24, [sp, #48]
    2f4c:	ldp	x29, x30, [sp], #80
    2f50:	ret
    2f54:	orr	w0, w19, w0, lsl #4
    2f58:	strb	w0, [x24]
    2f5c:	ldp	x19, x20, [sp, #16]
    2f60:	ldr	x25, [sp, #64]
    2f64:	b	2eb8 <read_fs_list+0x258>
    2f68:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    2f6c:	mov	x1, x22
    2f70:	mov	w21, #0x1                   	// #1
    2f74:	ldr	x0, [x0]
    2f78:	bl	0 <grub_printf_>
    2f7c:	bl	40d0 <grub_wait_after_message>
    2f80:	b	2eb8 <read_fs_list+0x258>
    2f84:	nop
	...

0000000000002fb0 <grub_parse_color_name_pair>:
    2fb0:	cbz	x1, 2fb8 <grub_parse_color_name_pair+0x8>
    2fb4:	b	2e28 <read_fs_list+0x1c8>
    2fb8:	mov	w0, #0x1                   	// #1
    2fbc:	ret

0000000000002fc0 <grub_env_write_color_normal>:
    2fc0:	cbz	x1, 3034 <grub_env_write_color_normal+0x74>
    2fc4:	stp	x29, x30, [sp, #-32]!
    2fc8:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    2fcc:	mov	x29, sp
    2fd0:	ldr	x0, [x0]
    2fd4:	stp	x19, x20, [sp, #16]
    2fd8:	mov	x20, x1
    2fdc:	bl	2e28 <read_fs_list+0x1c8>
    2fe0:	cbnz	w0, 3024 <grub_env_write_color_normal+0x64>
    2fe4:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    2fe8:	ldr	x0, [x0]
    2fec:	ldr	x19, [x0]
    2ff0:	cbz	x19, 3014 <grub_env_write_color_normal+0x54>
    2ff4:	nop
    2ff8:	ldr	x2, [x19, #88]
    2ffc:	mov	x0, x19
    3000:	mov	w1, #0x1                   	// #1
    3004:	cbz	x2, 300c <grub_env_write_color_normal+0x4c>
    3008:	blr	x2
    300c:	ldr	x19, [x19]
    3010:	cbnz	x19, 2ff8 <grub_env_write_color_normal+0x38>
    3014:	mov	x0, x20
    3018:	ldp	x19, x20, [sp, #16]
    301c:	ldp	x29, x30, [sp], #32
    3020:	b	0 <grub_strdup>
    3024:	mov	x0, #0x0                   	// #0
    3028:	ldp	x19, x20, [sp, #16]
    302c:	ldp	x29, x30, [sp], #32
    3030:	ret
    3034:	mov	x0, #0x0                   	// #0
    3038:	ret
    303c:	nop
	...

0000000000003050 <grub_env_write_color_highlight>:
    3050:	cbz	x1, 30c4 <grub_env_write_color_highlight+0x74>
    3054:	stp	x29, x30, [sp, #-32]!
    3058:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    305c:	mov	x29, sp
    3060:	ldr	x0, [x0]
    3064:	stp	x19, x20, [sp, #16]
    3068:	mov	x20, x1
    306c:	bl	2e28 <read_fs_list+0x1c8>
    3070:	cbnz	w0, 30b4 <grub_env_write_color_highlight+0x64>
    3074:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    3078:	ldr	x0, [x0]
    307c:	ldr	x19, [x0]
    3080:	cbz	x19, 30a4 <grub_env_write_color_highlight+0x54>
    3084:	nop
    3088:	ldr	x2, [x19, #88]
    308c:	mov	x0, x19
    3090:	mov	w1, #0x1                   	// #1
    3094:	cbz	x2, 309c <grub_env_write_color_highlight+0x4c>
    3098:	blr	x2
    309c:	ldr	x19, [x19]
    30a0:	cbnz	x19, 3088 <grub_env_write_color_highlight+0x38>
    30a4:	mov	x0, x20
    30a8:	ldp	x19, x20, [sp, #16]
    30ac:	ldp	x29, x30, [sp], #32
    30b0:	b	0 <grub_strdup>
    30b4:	mov	x0, #0x0                   	// #0
    30b8:	ldp	x19, x20, [sp, #16]
    30bc:	ldp	x29, x30, [sp], #32
    30c0:	ret
    30c4:	mov	x0, #0x0                   	// #0
    30c8:	ret
    30cc:	nop
	...
    30e0:	stp	x29, x30, [sp, #-64]!
    30e4:	adrp	x3, 0 <grub_normal_free_menu-0x268>
    30e8:	mov	x29, sp
    30ec:	stp	x21, x22, [sp, #32]
    30f0:	ldr	x22, [x3]
    30f4:	stp	x19, x20, [sp, #16]
    30f8:	mov	x19, x0
    30fc:	mov	x20, x1
    3100:	stp	x23, x24, [sp, #48]
    3104:	mov	w23, w2
    3108:	ldr	x21, [x22]
    310c:	mov	x0, x21
    3110:	bl	0 <grub_strlen>
    3114:	mov	x1, x19
    3118:	mov	x2, x0
    311c:	mov	x0, x21
    3120:	mov	w21, #0x0                   	// #0
    3124:	bl	0 <grub_strncmp>
    3128:	cbnz	w0, 320c <grub_env_write_color_highlight+0x1bc>
    312c:	ldr	w24, [x22, #8]
    3130:	mov	w21, w0
    3134:	add	w24, w24, #0x1
    3138:	str	w24, [x22, #8]
    313c:	cmp	w24, #0x1
    3140:	b.eq	3244 <grub_env_write_color_highlight+0x1f4>  // b.none
    3144:	cmp	w24, #0x2
    3148:	b.eq	3224 <grub_env_write_color_highlight+0x1d4>  // b.none
    314c:	ldr	x3, [x22, #32]
    3150:	ldr	x20, [x22, #16]
    3154:	cbz	x3, 3290 <grub_env_write_color_highlight+0x240>
    3158:	ldr	w2, [x22, #8]
    315c:	mov	x0, x19
    3160:	mov	w1, w23
    3164:	sub	w2, w2, #0x1
    3168:	blr	x3
    316c:	ldr	x0, [x22, #16]
    3170:	ldrb	w1, [x20]
    3174:	cbnz	w1, 3188 <grub_env_write_color_highlight+0x138>
    3178:	b	31a0 <grub_env_write_color_highlight+0x150>
    317c:	ldrb	w1, [x20, #1]
    3180:	cbz	w1, 3270 <grub_env_write_color_highlight+0x220>
    3184:	mov	x20, x3
    3188:	ldrb	w2, [x19]
    318c:	add	x3, x20, #0x1
    3190:	add	x19, x19, #0x1
    3194:	cmp	w2, #0x0
    3198:	ccmp	w2, w1, #0x0, ne  // ne = any
    319c:	b.eq	317c <grub_env_write_color_highlight+0x12c>  // b.none
    31a0:	sub	x1, x20, #0x1
    31a4:	cmp	x0, x1
    31a8:	b.ls	31bc <grub_env_write_color_highlight+0x16c>  // b.plast
    31ac:	b	3208 <grub_env_write_color_highlight+0x1b8>
    31b0:	sub	x1, x1, #0x1
    31b4:	cmp	x1, x0
    31b8:	b.cc	3208 <grub_env_write_color_highlight+0x1b8>  // b.lo, b.ul, b.last
    31bc:	ldrb	w2, [x1]
    31c0:	and	w3, w2, #0xc0
    31c4:	cmp	w3, #0x80
    31c8:	b.eq	31b0 <grub_env_write_color_highlight+0x160>  // b.none
    31cc:	cmp	x0, x1
    31d0:	b.hi	3208 <grub_env_write_color_highlight+0x1b8>  // b.pmore
    31d4:	add	x0, x1, #0x1
    31d8:	tbz	w2, #7, 3208 <grub_env_write_color_highlight+0x1b8>
    31dc:	and	w0, w2, #0xe0
    31e0:	cmp	w0, #0xc0
    31e4:	b.eq	3298 <grub_env_write_color_highlight+0x248>  // b.none
    31e8:	and	w0, w2, #0xf0
    31ec:	cmp	w0, #0xe0
    31f0:	b.eq	32ac <grub_env_write_color_highlight+0x25c>  // b.none
    31f4:	and	w2, w2, #0xf8
    31f8:	mov	x0, x1
    31fc:	cmp	w2, #0xf0
    3200:	b.eq	327c <grub_env_write_color_highlight+0x22c>  // b.none
    3204:	nop
    3208:	strb	wzr, [x0]
    320c:	mov	w0, w21
    3210:	ldp	x19, x20, [sp, #16]
    3214:	ldp	x21, x22, [sp, #32]
    3218:	ldp	x23, x24, [sp, #48]
    321c:	ldp	x29, x30, [sp], #64
    3220:	ret
    3224:	ldr	x3, [x22, #32]
    3228:	ldr	x20, [x22, #16]
    322c:	mov	x0, x20
    3230:	cbz	x3, 3170 <grub_env_write_color_highlight+0x120>
    3234:	mov	w1, w23
    3238:	mov	w2, #0x0                   	// #0
    323c:	blr	x3
    3240:	b	314c <grub_env_write_color_highlight+0xfc>
    3244:	mov	x0, x19
    3248:	bl	0 <grub_strdup>
    324c:	str	x0, [x22, #16]
    3250:	cbz	x0, 32c0 <grub_env_write_color_highlight+0x270>
    3254:	str	x20, [x22, #24]
    3258:	mov	w0, w21
    325c:	ldp	x19, x20, [sp, #16]
    3260:	ldp	x21, x22, [sp, #32]
    3264:	ldp	x23, x24, [sp, #48]
    3268:	ldp	x29, x30, [sp], #64
    326c:	ret
    3270:	mov	x1, x20
    3274:	mov	x20, x3
    3278:	b	31a4 <grub_env_write_color_highlight+0x154>
    327c:	add	x0, x1, #0x4
    3280:	cmp	x0, x20
    3284:	csel	x0, x0, x1, ls  // ls = plast
    3288:	strb	wzr, [x0]
    328c:	b	320c <grub_env_write_color_highlight+0x1bc>
    3290:	mov	x0, x20
    3294:	b	3170 <grub_env_write_color_highlight+0x120>
    3298:	add	x0, x1, #0x2
    329c:	cmp	x0, x20
    32a0:	b.hi	31e8 <grub_env_write_color_highlight+0x198>  // b.pmore
    32a4:	strb	wzr, [x0]
    32a8:	b	320c <grub_env_write_color_highlight+0x1bc>
    32ac:	add	x0, x1, #0x3
    32b0:	cmp	x0, x20
    32b4:	b.hi	31f4 <grub_env_write_color_highlight+0x1a4>  // b.pmore
    32b8:	strb	wzr, [x0]
    32bc:	b	320c <grub_env_write_color_highlight+0x1bc>
    32c0:	mov	w21, w24
    32c4:	b	320c <grub_env_write_color_highlight+0x1bc>
	...
    32d0:	stp	x29, x30, [sp, #-32]!
    32d4:	mov	x29, sp
    32d8:	stp	x19, x20, [sp, #16]
    32dc:	mov	x20, x0
    32e0:	bl	0 <grub_device_open>
    32e4:	cbz	x0, 3370 <grub_env_write_color_highlight+0x320>
    32e8:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    32ec:	mov	x19, x0
    32f0:	mov	x0, x20
    32f4:	ldr	x1, [x1]
    32f8:	ldr	x1, [x1]
    32fc:	bl	0 <grub_strcmp>
    3300:	cbnz	w0, 3350 <grub_env_write_color_highlight+0x300>
    3304:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    3308:	mov	x0, x20
    330c:	mov	w2, #0x2                   	// #2
    3310:	ldr	x1, [x1]
    3314:	bl	30e0 <grub_env_write_color_highlight+0x90>
    3318:	cbnz	w0, 3338 <grub_env_write_color_highlight+0x2e8>
    331c:	ldr	x0, [x19]
    3320:	cbz	x0, 3368 <grub_env_write_color_highlight+0x318>
    3324:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    3328:	mov	x2, #0x0                   	// #0
    332c:	ldr	x1, [x1]
    3330:	bl	0 <grub_partition_iterate>
    3334:	cbz	w0, 3368 <grub_env_write_color_highlight+0x318>
    3338:	mov	x0, x19
    333c:	bl	0 <grub_device_close>
    3340:	mov	w0, #0x1                   	// #1
    3344:	ldp	x19, x20, [sp, #16]
    3348:	ldp	x29, x30, [sp], #32
    334c:	ret
    3350:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    3354:	mov	x0, x20
    3358:	mov	w2, #0x1                   	// #1
    335c:	ldr	x1, [x1]
    3360:	bl	30e0 <grub_env_write_color_highlight+0x90>
    3364:	cbnz	w0, 3338 <grub_env_write_color_highlight+0x2e8>
    3368:	mov	x0, x19
    336c:	bl	0 <grub_device_close>
    3370:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    3374:	mov	w0, #0x0                   	// #0
    3378:	ldp	x19, x20, [sp, #16]
    337c:	ldr	x1, [x1]
    3380:	str	wzr, [x1]
    3384:	ldp	x29, x30, [sp], #32
    3388:	ret
    338c:	nop
	...
    33b8:	stp	x29, x30, [sp, #-32]!
    33bc:	mov	x2, x0
    33c0:	mov	x0, x1
    33c4:	mov	x29, sp
    33c8:	stp	x19, x20, [sp, #16]
    33cc:	ldr	x20, [x2]
    33d0:	bl	0 <grub_partition_get_name>
    33d4:	cbz	x0, 3430 <grub_env_write_color_highlight+0x3e0>
    33d8:	mov	x19, x0
    33dc:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    33e0:	mov	x1, x20
    33e4:	mov	x2, x19
    33e8:	ldr	x0, [x0]
    33ec:	bl	0 <grub_xasprintf>
    33f0:	mov	x20, x0
    33f4:	mov	x0, x19
    33f8:	bl	0 <grub_free>
    33fc:	cbz	x20, 3430 <grub_env_write_color_highlight+0x3e0>
    3400:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    3404:	mov	w2, #0x2                   	// #2
    3408:	mov	x0, x20
    340c:	ldr	x1, [x1]
    3410:	bl	30e0 <grub_env_write_color_highlight+0x90>
    3414:	mov	w19, w0
    3418:	mov	x0, x20
    341c:	bl	0 <grub_free>
    3420:	mov	w0, w19
    3424:	ldp	x19, x20, [sp, #16]
    3428:	ldp	x29, x30, [sp], #32
    342c:	ret
    3430:	mov	w19, #0x1                   	// #1
    3434:	mov	w0, w19
    3438:	ldp	x19, x20, [sp, #16]
    343c:	ldp	x29, x30, [sp], #32
    3440:	ret
    3444:	nop
	...
    3458:	stp	x29, x30, [sp, #-32]!
    345c:	mov	x29, sp
    3460:	ldrb	w1, [x1]
    3464:	stp	x19, x20, [sp, #16]
    3468:	mov	x19, x0
    346c:	tbnz	w1, #0, 34c4 <grub_env_write_color_highlight+0x474>
    3470:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    3474:	ldr	x0, [x0]
    3478:	ldr	w0, [x0, #40]
    347c:	cmp	w0, #0x4
    3480:	b.eq	34b8 <grub_env_write_color_highlight+0x468>  // b.none
    3484:	cmp	w0, #0x3
    3488:	b.eq	3534 <grub_env_write_color_highlight+0x4e4>  // b.none
    348c:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    3490:	ldr	x1, [x0]
    3494:	mov	x0, x19
    3498:	mov	w2, #0x3                   	// #3
    349c:	bl	30e0 <grub_env_write_color_highlight+0x90>
    34a0:	cmp	w0, #0x0
    34a4:	cset	w19, ne  // ne = any
    34a8:	mov	w0, w19
    34ac:	ldp	x19, x20, [sp, #16]
    34b0:	ldp	x29, x30, [sp], #32
    34b4:	ret
    34b8:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    34bc:	ldr	x1, [x0]
    34c0:	b	3494 <grub_env_write_color_highlight+0x444>
    34c4:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    34c8:	ldr	x1, [x1]
    34cc:	bl	0 <grub_strcmp>
    34d0:	cbnz	w0, 34e8 <grub_env_write_color_highlight+0x498>
    34d4:	mov	w19, #0x0                   	// #0
    34d8:	mov	w0, w19
    34dc:	ldp	x19, x20, [sp, #16]
    34e0:	ldp	x29, x30, [sp], #32
    34e4:	ret
    34e8:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    34ec:	mov	x0, x19
    34f0:	ldr	x1, [x1]
    34f4:	bl	0 <grub_strcmp>
    34f8:	cbz	w0, 34d4 <grub_env_write_color_highlight+0x484>
    34fc:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    3500:	mov	x1, x19
    3504:	ldr	x0, [x0]
    3508:	bl	0 <grub_xasprintf>
    350c:	mov	x20, x0
    3510:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    3514:	mov	w2, #0x3                   	// #3
    3518:	ldr	x1, [x1]
    351c:	bl	30e0 <grub_env_write_color_highlight+0x90>
    3520:	mov	w19, w0
    3524:	mov	x0, x20
    3528:	cbnz	w19, 3540 <grub_env_write_color_highlight+0x4f0>
    352c:	bl	0 <grub_free>
    3530:	b	34a8 <grub_env_write_color_highlight+0x458>
    3534:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    3538:	ldr	x1, [x0]
    353c:	b	3494 <grub_env_write_color_highlight+0x444>
    3540:	mov	w19, #0x1                   	// #1
    3544:	bl	0 <grub_free>
    3548:	b	34a8 <grub_env_write_color_highlight+0x458>
    354c:	nop
	...

0000000000003590 <grub_normal_do_completion>:
    3590:	stp	x29, x30, [sp, #-96]!
    3594:	adrp	x3, 0 <grub_normal_free_menu-0x268>
    3598:	mov	x5, x2
    359c:	mov	x29, sp
    35a0:	stp	x21, x22, [sp, #32]
    35a4:	mov	x21, x1
    35a8:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    35ac:	stp	x19, x20, [sp, #16]
    35b0:	mov	x22, x0
    35b4:	add	x4, sp, #0x58
    35b8:	ldr	x20, [x3]
    35bc:	stp	x23, x24, [sp, #48]
    35c0:	mov	w3, #0x1                   	// #1
    35c4:	str	w3, [x21]
    35c8:	mov	x2, #0x0                   	// #0
    35cc:	ldr	x24, [x1]
    35d0:	add	x3, sp, #0x54
    35d4:	mov	x1, #0x0                   	// #0
    35d8:	str	wzr, [x20, #8]
    35dc:	stp	xzr, x24, [x20, #16]
    35e0:	str	x5, [x20, #32]
    35e4:	bl	0 <grub_parser_split_cmdline>
    35e8:	cbnz	w0, 396c <grub_normal_do_completion+0x3dc>
    35ec:	mov	w23, w0
    35f0:	ldr	w0, [sp, #84]
    35f4:	cbz	w0, 36b8 <grub_normal_do_completion+0x128>
    35f8:	ldr	x1, [sp, #88]
    35fc:	cmp	w0, #0x1
    3600:	add	x0, x1, w0, sxtw #3
    3604:	ldur	x0, [x0, #-8]
    3608:	str	x0, [x20]
    360c:	b.le	3624 <grub_normal_do_completion+0x94>
    3610:	adrp	x2, 0 <grub_normal_free_menu-0x268>
    3614:	ldr	x0, [x1]
    3618:	ldr	x1, [x2]
    361c:	bl	0 <grub_strcmp>
    3620:	cbz	w0, 39ac <grub_normal_do_completion+0x41c>
    3624:	ldrb	w1, [x22]
    3628:	mov	x19, x22
    362c:	mov	w0, #0x1                   	// #1
    3630:	cbz	w1, 3a70 <grub_normal_do_completion+0x4e0>
    3634:	nop
    3638:	add	x2, sp, #0x50
    363c:	bl	0 <grub_parser_cmdline_state>
    3640:	ldrb	w1, [x19, #1]!
    3644:	cbnz	w1, 3638 <grub_normal_do_completion+0xa8>
    3648:	str	w0, [x20, #40]
    364c:	ldr	w0, [sp, #84]
    3650:	cmp	w0, #0x1
    3654:	b.ls	36c0 <grub_normal_do_completion+0x130>  // b.plast
    3658:	ldr	x0, [x20]
    365c:	ldrb	w1, [x0]
    3660:	cmp	w1, #0x2d
    3664:	b.eq	39d4 <grub_normal_do_completion+0x444>  // b.none
    3668:	cmp	w1, #0x28
    366c:	b.eq	3998 <grub_normal_do_completion+0x408>  // b.none
    3670:	bl	0 <grub_file_get_device_name>
    3674:	mov	x23, x0
    3678:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    367c:	ldr	x22, [x1]
    3680:	ldr	w1, [x22]
    3684:	cbz	w1, 38b0 <grub_normal_do_completion+0x320>
    3688:	ldr	w0, [sp, #84]
    368c:	cbnz	w0, 370c <grub_normal_do_completion+0x17c>
    3690:	ldr	x0, [x20, #16]
    3694:	mov	x19, #0x0                   	// #0
    3698:	bl	0 <grub_free>
    369c:	str	wzr, [x22]
    36a0:	mov	x0, x19
    36a4:	ldp	x19, x20, [sp, #16]
    36a8:	ldp	x21, x22, [sp, #32]
    36ac:	ldp	x23, x24, [sp, #48]
    36b0:	ldp	x29, x30, [sp], #96
    36b4:	ret
    36b8:	str	x24, [x20]
    36bc:	b	3624 <grub_normal_do_completion+0x94>
    36c0:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    36c4:	ldr	x0, [x0]
    36c8:	ldr	x19, [x0]
    36cc:	cbz	x19, 3790 <grub_normal_do_completion+0x200>
    36d0:	adrp	x22, 0 <grub_normal_free_menu-0x268>
    36d4:	b	36e0 <grub_normal_do_completion+0x150>
    36d8:	ldr	x19, [x19]
    36dc:	cbz	x19, 3790 <grub_normal_do_completion+0x200>
    36e0:	ldr	w0, [x19, #24]
    36e4:	tbz	w0, #8, 36d8 <grub_normal_do_completion+0x148>
    36e8:	ldr	x1, [x22]
    36ec:	mov	w2, #0x0                   	// #0
    36f0:	ldr	x0, [x19, #16]
    36f4:	bl	30e0 <grub_env_write_color_highlight+0x90>
    36f8:	cbz	w0, 36d8 <grub_normal_do_completion+0x148>
    36fc:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    3700:	ldr	x22, [x0]
    3704:	ldr	w0, [sp, #84]
    3708:	cbz	w0, 3690 <grub_normal_do_completion+0x100>
    370c:	ldr	x0, [sp, #88]
    3710:	ldr	x0, [x0]
    3714:	bl	0 <grub_free>
    3718:	ldr	x0, [sp, #88]
    371c:	bl	0 <grub_free>
    3720:	b	3690 <grub_normal_do_completion+0x100>
    3724:	ldr	x0, [x20]
    3728:	mov	w1, #0x2c                  	// #44
    372c:	add	x0, x0, #0x1
    3730:	str	x0, [x20]
    3734:	bl	0 <grub_strchr>
    3738:	mov	x19, x0
    373c:	cbz	x0, 3b80 <grub_normal_do_completion+0x5f0>
    3740:	strb	wzr, [x0]
    3744:	ldr	x0, [x20]
    3748:	bl	0 <grub_device_open>
    374c:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    3750:	mov	w2, #0x2c                  	// #44
    3754:	strb	w2, [x19]
    3758:	mov	x19, x0
    375c:	ldr	x22, [x1]
    3760:	str	wzr, [x22]
    3764:	cbz	x0, 3688 <grub_normal_do_completion+0xf8>
    3768:	ldr	x0, [x0]
    376c:	cbz	x0, 3784 <grub_normal_do_completion+0x1f4>
    3770:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    3774:	mov	x2, #0x0                   	// #0
    3778:	ldr	x1, [x1]
    377c:	bl	0 <grub_partition_iterate>
    3780:	cbnz	w0, 3be0 <grub_normal_do_completion+0x650>
    3784:	mov	x0, x19
    3788:	bl	0 <grub_device_close>
    378c:	nop
    3790:	ldr	w1, [x20, #8]
    3794:	ldr	x0, [x20, #16]
    3798:	cmp	w1, #0x1
    379c:	cset	w1, gt
    37a0:	str	w1, [x21]
    37a4:	cbz	x0, 36fc <grub_normal_do_completion+0x16c>
    37a8:	ldr	x0, [x20]
    37ac:	bl	0 <grub_strlen>
    37b0:	mov	x23, x0
    37b4:	sxtw	x22, w0
    37b8:	ldr	x0, [x20, #16]
    37bc:	bl	0 <grub_strlen>
    37c0:	mov	x21, x0
    37c4:	ldr	x2, [x20, #16]
    37c8:	ldrb	w1, [x2, w23, sxtw]
    37cc:	add	x2, x2, w23, sxtw
    37d0:	cbz	w1, 3a90 <grub_normal_do_completion+0x500>
    37d4:	mov	w3, #0x0                   	// #0
    37d8:	cmp	w1, #0x20
    37dc:	ldrb	w1, [x2, #1]!
    37e0:	cinc	w3, w3, eq  // eq = none
    37e4:	cbnz	w1, 37d8 <grub_normal_do_completion+0x248>
    37e8:	sxtw	x19, w3
    37ec:	ldr	x0, [x20, #24]
    37f0:	sub	w21, w21, w23
    37f4:	sxtw	x21, w21
    37f8:	bl	0 <grub_strlen>
    37fc:	add	x21, x21, #0x1
    3800:	add	x0, x0, x19
    3804:	add	x0, x21, x0
    3808:	bl	0 <grub_malloc>
    380c:	ldr	x1, [x20, #16]
    3810:	mov	x19, x0
    3814:	add	x2, x1, x22
    3818:	ldrb	w1, [x1, x22]
    381c:	cbz	w1, 3870 <grub_normal_do_completion+0x2e0>
    3820:	ldr	w4, [x20, #40]
    3824:	mov	w5, #0x5c                  	// #92
    3828:	b	3844 <grub_normal_do_completion+0x2b4>
    382c:	mov	x1, x0
    3830:	mov	x0, x3
    3834:	ldrb	w3, [x2]
    3838:	strb	w3, [x1]
    383c:	ldrb	w1, [x2, #1]!
    3840:	cbz	w1, 3870 <grub_normal_do_completion+0x2e0>
    3844:	cmp	w1, #0x20
    3848:	add	x1, x0, #0x1
    384c:	mov	x3, x1
    3850:	b.ne	382c <grub_normal_do_completion+0x29c>  // b.any
    3854:	cmp	w4, #0x3
    3858:	b.eq	382c <grub_normal_do_completion+0x29c>  // b.none
    385c:	strb	w5, [x0], #2
    3860:	ldrb	w3, [x2]
    3864:	strb	w3, [x1]
    3868:	ldrb	w1, [x2, #1]!
    386c:	cbnz	w1, 3844 <grub_normal_do_completion+0x2b4>
    3870:	ldr	w1, [x20, #8]
    3874:	strb	wzr, [x0]
    3878:	cmp	w1, #0x1
    387c:	b.eq	39c8 <grub_normal_do_completion+0x438>  // b.none
    3880:	ldrb	w0, [x19]
    3884:	cbz	w0, 3a78 <grub_normal_do_completion+0x4e8>
    3888:	ldr	w0, [sp, #84]
    388c:	cbnz	w0, 3988 <grub_normal_do_completion+0x3f8>
    3890:	ldr	x0, [x20, #16]
    3894:	bl	0 <grub_free>
    3898:	mov	x0, x19
    389c:	ldp	x19, x20, [sp, #16]
    38a0:	ldp	x21, x22, [sp, #32]
    38a4:	ldp	x23, x24, [sp, #48]
    38a8:	ldp	x29, x30, [sp], #96
    38ac:	ret
    38b0:	bl	0 <grub_device_open>
    38b4:	mov	x19, x0
    38b8:	cbz	x0, 3a84 <grub_normal_do_completion+0x4f4>
    38bc:	stp	x25, x26, [sp, #64]
    38c0:	bl	0 <grub_fs_probe>
    38c4:	mov	x25, x0
    38c8:	cbz	x0, 3a98 <grub_normal_do_completion+0x508>
    38cc:	ldr	x26, [x20]
    38d0:	cbz	x23, 38e4 <grub_normal_do_completion+0x354>
    38d4:	mov	x0, x23
    38d8:	bl	0 <grub_strlen>
    38dc:	add	x0, x0, #0x2
    38e0:	add	x26, x26, x0
    38e4:	mov	x0, x26
    38e8:	mov	w1, #0x2f                  	// #47
    38ec:	bl	0 <grub_strchr>
    38f0:	mov	x26, x0
    38f4:	ldr	x0, [x20]
    38f8:	mov	w1, #0x2f                  	// #47
    38fc:	bl	0 <grub_strrchr>
    3900:	cbz	x26, 3ab0 <grub_normal_do_completion+0x520>
    3904:	add	x1, x0, #0x1
    3908:	mov	x0, x26
    390c:	str	x1, [x20]
    3910:	bl	0 <grub_strdup>
    3914:	mov	x24, x0
    3918:	cbz	x0, 3a98 <grub_normal_do_completion+0x508>
    391c:	mov	w1, #0x2f                  	// #47
    3920:	bl	0 <grub_strrchr>
    3924:	adrp	x2, 0 <grub_normal_free_menu-0x268>
    3928:	strb	wzr, [x0, #1]
    392c:	mov	x1, x24
    3930:	mov	x3, #0x0                   	// #0
    3934:	ldr	x2, [x2]
    3938:	mov	x0, x19
    393c:	ldr	x4, [x25, #24]
    3940:	blr	x4
    3944:	mov	x0, x24
    3948:	bl	0 <grub_free>
    394c:	ldr	w24, [x22]
    3950:	mov	x0, x19
    3954:	bl	0 <grub_device_close>
    3958:	mov	x0, x23
    395c:	bl	0 <grub_free>
    3960:	ldp	x25, x26, [sp, #64]
    3964:	cbz	w24, 3790 <grub_normal_do_completion+0x200>
    3968:	b	3688 <grub_normal_do_completion+0xf8>
    396c:	mov	x19, #0x0                   	// #0
    3970:	mov	x0, x19
    3974:	ldp	x19, x20, [sp, #16]
    3978:	ldp	x21, x22, [sp, #32]
    397c:	ldp	x23, x24, [sp, #48]
    3980:	ldp	x29, x30, [sp], #96
    3984:	ret
    3988:	ldr	x0, [sp, #88]
    398c:	ldr	x0, [x0]
    3990:	bl	0 <grub_free>
    3994:	b	3890 <grub_normal_do_completion+0x300>
    3998:	mov	w1, #0x29                  	// #41
    399c:	bl	0 <grub_strchr>
    39a0:	cbz	x0, 3724 <grub_normal_do_completion+0x194>
    39a4:	ldr	x0, [x20]
    39a8:	b	3670 <grub_normal_do_completion+0xe0>
    39ac:	ldr	x0, [x20]
    39b0:	mov	w1, #0x3d                  	// #61
    39b4:	bl	0 <grub_strchr>
    39b8:	cbz	x0, 3624 <grub_normal_do_completion+0x94>
    39bc:	add	x0, x0, #0x1
    39c0:	str	x0, [x20]
    39c4:	b	3624 <grub_normal_do_completion+0x94>
    39c8:	ldr	x1, [x20, #24]
    39cc:	bl	0 <grub_strcpy>
    39d0:	b	3880 <grub_normal_do_completion+0x2f0>
    39d4:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    39d8:	adrp	x2, 0 <grub_normal_free_menu-0x268>
    39dc:	mov	x1, x22
    39e0:	ldr	x2, [x2]
    39e4:	ldr	x0, [x0]
    39e8:	ldrh	w3, [x2]
    39ec:	ldrb	w2, [x2, #2]
    39f0:	ldr	x0, [x0]
    39f4:	strh	w3, [sp, #80]
    39f8:	strb	w2, [sp, #82]
    39fc:	bl	0 <grub_named_list_find>
    3a00:	cbz	x0, 3790 <grub_normal_do_completion+0x200>
    3a04:	ldr	w1, [x0, #40]
    3a08:	tbz	w1, #4, 3790 <grub_normal_do_completion+0x200>
    3a0c:	ldr	x23, [x0, #64]
    3a10:	ldr	x0, [x23, #16]
    3a14:	cbz	x0, 3790 <grub_normal_do_completion+0x200>
    3a18:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    3a1c:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    3a20:	mov	w2, #0x4                   	// #4
    3a24:	ldr	x0, [x0]
    3a28:	ldr	x22, [x1]
    3a2c:	mov	x1, x22
    3a30:	bl	30e0 <grub_env_write_color_highlight+0x90>
    3a34:	cbnz	w0, 36fc <grub_normal_do_completion+0x16c>
    3a38:	ldr	x19, [x23, #16]
    3a3c:	nop
    3a40:	ldr	x0, [x19, #16]
    3a44:	cbz	x0, 3b00 <grub_normal_do_completion+0x570>
    3a48:	ldr	w3, [x19, #8]
    3a4c:	mov	x1, x22
    3a50:	add	x0, sp, #0x50
    3a54:	add	x19, x19, #0x28
    3a58:	mov	w2, #0x4                   	// #4
    3a5c:	cbz	w3, 3a40 <grub_normal_do_completion+0x4b0>
    3a60:	strb	w3, [sp, #81]
    3a64:	bl	30e0 <grub_env_write_color_highlight+0x90>
    3a68:	cbz	w0, 3a40 <grub_normal_do_completion+0x4b0>
    3a6c:	b	36fc <grub_normal_do_completion+0x16c>
    3a70:	mov	w0, #0x1                   	// #1
    3a74:	b	3648 <grub_normal_do_completion+0xb8>
    3a78:	mov	x0, x19
    3a7c:	bl	0 <grub_free>
    3a80:	b	36fc <grub_normal_do_completion+0x16c>
    3a84:	mov	x0, x23
    3a88:	bl	0 <grub_free>
    3a8c:	b	3688 <grub_normal_do_completion+0xf8>
    3a90:	mov	x19, #0x0                   	// #0
    3a94:	b	37ec <grub_normal_do_completion+0x25c>
    3a98:	mov	x0, x19
    3a9c:	bl	0 <grub_device_close>
    3aa0:	mov	x0, x23
    3aa4:	bl	0 <grub_free>
    3aa8:	ldp	x25, x26, [sp, #64]
    3aac:	b	3688 <grub_normal_do_completion+0xf8>
    3ab0:	ldr	x0, [x20]
    3ab4:	bl	0 <grub_strlen>
    3ab8:	mov	x2, x0
    3abc:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    3ac0:	ldr	x1, [x20]
    3ac4:	ldr	x0, [x0]
    3ac8:	add	x1, x1, x2
    3acc:	str	x1, [x20]
    3ad0:	bl	0 <grub_strdup>
    3ad4:	str	x0, [x20, #16]
    3ad8:	cbz	x0, 3a98 <grub_normal_do_completion+0x508>
    3adc:	mov	w1, #0x1                   	// #1
    3ae0:	mov	x0, x19
    3ae4:	str	w1, [x20, #8]
    3ae8:	str	x24, [x20, #24]
    3aec:	bl	0 <grub_device_close>
    3af0:	mov	x0, x23
    3af4:	bl	0 <grub_free>
    3af8:	ldp	x25, x26, [sp, #64]
    3afc:	b	3790 <grub_normal_do_completion+0x200>
    3b00:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    3b04:	mov	x1, x22
    3b08:	mov	w2, #0x4                   	// #4
    3b0c:	ldr	x0, [x0]
    3b10:	bl	30e0 <grub_env_write_color_highlight+0x90>
    3b14:	cbnz	w0, 36fc <grub_normal_do_completion+0x16c>
    3b18:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    3b1c:	mov	x1, x22
    3b20:	mov	w2, #0x4                   	// #4
    3b24:	ldr	x0, [x0]
    3b28:	bl	30e0 <grub_env_write_color_highlight+0x90>
    3b2c:	cbnz	w0, 36fc <grub_normal_do_completion+0x16c>
    3b30:	ldr	x19, [x23, #16]
    3b34:	ldr	x0, [x19, #16]
    3b38:	cbz	x0, 3790 <grub_normal_do_completion+0x200>
    3b3c:	adrp	x24, 0 <grub_normal_free_menu-0x268>
    3b40:	ldr	x1, [x19]
    3b44:	add	x19, x19, #0x28
    3b48:	cbz	x1, 3b74 <grub_normal_do_completion+0x5e4>
    3b4c:	ldr	x0, [x24]
    3b50:	bl	0 <grub_xasprintf>
    3b54:	mov	x23, x0
    3b58:	cbz	x0, 36fc <grub_normal_do_completion+0x16c>
    3b5c:	mov	x1, x22
    3b60:	mov	w2, #0x4                   	// #4
    3b64:	bl	30e0 <grub_env_write_color_highlight+0x90>
    3b68:	cbnz	w0, 3bcc <grub_normal_do_completion+0x63c>
    3b6c:	mov	x0, x23
    3b70:	bl	0 <grub_free>
    3b74:	ldr	x0, [x19, #16]
    3b78:	cbnz	x0, 3b40 <grub_normal_do_completion+0x5b0>
    3b7c:	b	3790 <grub_normal_do_completion+0x200>
    3b80:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    3b84:	adrp	x22, 0 <grub_normal_free_menu-0x268>
    3b88:	ldr	x24, [x0]
    3b8c:	ldr	x19, [x24]
    3b90:	cbz	x19, 3bbc <grub_normal_do_completion+0x62c>
    3b94:	nop
    3b98:	ldr	x3, [x19, #16]
    3b9c:	mov	w2, w23
    3ba0:	mov	x1, #0x0                   	// #0
    3ba4:	cbz	x3, 3bb4 <grub_normal_do_completion+0x624>
    3ba8:	ldr	x0, [x22]
    3bac:	blr	x3
    3bb0:	cbnz	w0, 36fc <grub_normal_do_completion+0x16c>
    3bb4:	ldr	x19, [x19, #56]
    3bb8:	cbnz	x19, 3b98 <grub_normal_do_completion+0x608>
    3bbc:	add	w23, w23, #0x1
    3bc0:	cmp	w23, #0x3
    3bc4:	b.eq	3790 <grub_normal_do_completion+0x200>  // b.none
    3bc8:	b	3b8c <grub_normal_do_completion+0x5fc>
    3bcc:	mov	x0, x23
    3bd0:	bl	0 <grub_free>
    3bd4:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    3bd8:	ldr	x22, [x0]
    3bdc:	b	3688 <grub_normal_do_completion+0xf8>
    3be0:	mov	x0, x19
    3be4:	bl	0 <grub_device_close>
    3be8:	b	3688 <grub_normal_do_completion+0xf8>
    3bec:	nop
	...

0000000000003c70 <grub_get_weekday>:
    3c70:	ldrb	w7, [x0, #2]
    3c74:	mov	w4, #0xc                   	// #12
    3c78:	ldrh	w2, [x0]
    3c7c:	mov	w6, #0x851f                	// #34079
    3c80:	cmp	w7, #0x2
    3c84:	movk	w6, #0x51eb, lsl #16
    3c88:	csel	w3, w4, wzr, ls  // ls = plast
    3c8c:	cset	w1, ls  // ls = plast
    3c90:	add	w3, w3, w7
    3c94:	sub	w2, w2, w1
    3c98:	sub	w3, w3, #0x2
    3c9c:	mov	w8, #0xaaab                	// #43691
    3ca0:	movk	w8, #0xaaaa, lsl #16
    3ca4:	ldrb	w0, [x0, #3]
    3ca8:	lsl	w1, w3, #5
    3cac:	umull	x4, w2, w6
    3cb0:	sub	w1, w1, w3
    3cb4:	add	w0, w0, w2
    3cb8:	mov	w5, #0x4925                	// #18725
    3cbc:	lsr	x3, x4, #39
    3cc0:	lsr	x4, x4, #37
    3cc4:	umull	x1, w1, w8
    3cc8:	add	w2, w3, w2, lsr #2
    3ccc:	add	w2, w2, w0
    3cd0:	movk	w5, #0x2492, lsl #16
    3cd4:	lsr	x1, x1, #35
    3cd8:	sub	w1, w1, w4
    3cdc:	add	w1, w1, w2
    3ce0:	umull	x0, w1, w5
    3ce4:	lsr	x2, x0, #32
    3ce8:	sub	w0, w1, w2
    3cec:	add	w0, w2, w0, lsr #1
    3cf0:	lsr	w0, w0, #2
    3cf4:	lsl	w2, w0, #3
    3cf8:	sub	w0, w2, w0
    3cfc:	sub	w0, w1, w0
    3d00:	ret
    3d04:	nop

0000000000003d08 <grub_get_weekday_name>:
    3d08:	stp	x29, x30, [sp, #-16]!
    3d0c:	mov	x29, sp
    3d10:	bl	3c70 <grub_get_weekday>
    3d14:	adrp	x2, 0 <grub_normal_free_menu-0x268>
    3d18:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    3d1c:	ldp	x29, x30, [sp], #16
    3d20:	ldr	x2, [x2]
    3d24:	ldr	x1, [x1]
    3d28:	ldr	x0, [x2, w0, sxtw #3]
    3d2c:	ldr	x1, [x1]
    3d30:	mov	x16, x1
    3d34:	br	x16
	...

0000000000003d48 <grub_unixtime2datetime>:
    3d48:	adrp	x2, 0 <grub_normal_free_menu-0x268>
    3d4c:	sub	sp, sp, #0x10
    3d50:	ldr	x2, [x2]
    3d54:	ldr	x3, [x2]
    3d58:	str	x3, [sp]
    3d5c:	ldr	w2, [x2, #8]
    3d60:	str	w2, [sp, #8]
    3d64:	tbnz	w0, #31, 3ebc <grub_unixtime2datetime+0x174>
    3d68:	mov	w6, #0x4507                	// #17671
    3d6c:	movk	w6, #0xc22e, lsl #16
    3d70:	umull	x6, w0, w6
    3d74:	lsr	x6, x6, #48
    3d78:	mov	w2, #0x6272                	// #25202
    3d7c:	add	w4, w6, w2
    3d80:	mov	w2, #0xb073                	// #45171
    3d84:	mov	w3, #0xae80                	// #44672
    3d88:	movk	w2, #0x166d, lsl #16
    3d8c:	movk	w3, #0xfffe, lsl #16
    3d90:	mov	w5, #0x5b5                 	// #1461
    3d94:	umull	x2, w4, w2
    3d98:	madd	w6, w6, w3, w0
    3d9c:	lsr	x2, x2, #39
    3da0:	ubfiz	w3, w2, #2, #14
    3da4:	msub	w0, w2, w5, w4
    3da8:	sub	w2, w0, #0x5b4
    3dac:	cmp	w2, #0x16c
    3db0:	b.hi	3e88 <grub_unixtime2datetime+0x140>  // b.pmore
    3db4:	add	w3, w3, #0x770
    3db8:	mov	w2, #0x16d                 	// #365
    3dbc:	and	w3, w3, #0xffff
    3dc0:	and	w7, w3, #0x3
    3dc4:	mov	x4, sp
    3dc8:	mov	w0, #0x0                   	// #0
    3dcc:	strh	w3, [x1]
    3dd0:	b	3df8 <grub_unixtime2datetime+0xb0>
    3dd4:	ldrb	w3, [x4]
    3dd8:	cmp	w3, w2
    3ddc:	b.hi	3ee0 <grub_unixtime2datetime+0x198>  // b.pmore
    3de0:	add	w5, w0, #0x1
    3de4:	sub	w2, w2, w3
    3de8:	cmp	w5, #0xc
    3dec:	b.eq	3e20 <grub_unixtime2datetime+0xd8>  // b.none
    3df0:	add	w0, w0, #0x1
    3df4:	add	x4, x4, #0x1
    3df8:	cmp	w0, #0x1
    3dfc:	b.ne	3dd4 <grub_unixtime2datetime+0x8c>  // b.any
    3e00:	cbz	w7, 3e78 <grub_unixtime2datetime+0x130>
    3e04:	ldrb	w3, [x4]
    3e08:	cmp	w3, w2
    3e0c:	b.hi	3ee0 <grub_unixtime2datetime+0x198>  // b.pmore
    3e10:	mov	w5, #0x2                   	// #2
    3e14:	sub	w2, w2, w3
    3e18:	cmp	w5, #0xc
    3e1c:	b.ne	3df0 <grub_unixtime2datetime+0xa8>  // b.any
    3e20:	mov	w0, #0xd                   	// #13
    3e24:	mov	w3, #0xb3c5                	// #46021
    3e28:	strb	w0, [x1, #2]
    3e2c:	movk	w3, #0x91a2, lsl #16
    3e30:	mov	w5, #0xe10                 	// #3600
    3e34:	mov	w4, #0x8889                	// #34953
    3e38:	add	w2, w2, #0x1
    3e3c:	umull	x3, w6, w3
    3e40:	movk	w4, #0x8888, lsl #16
    3e44:	strb	w2, [x1, #3]
    3e48:	lsr	x0, x3, #43
    3e4c:	strb	w0, [x1, #4]
    3e50:	msub	w6, w0, w5, w6
    3e54:	umull	x0, w6, w4
    3e58:	lsr	x0, x0, #37
    3e5c:	strb	w0, [x1, #5]
    3e60:	lsl	w2, w0, #4
    3e64:	sub	w0, w2, w0
    3e68:	sub	w6, w6, w0, lsl #2
    3e6c:	strb	w6, [x1, #6]
    3e70:	add	sp, sp, #0x10
    3e74:	ret
    3e78:	cmp	w2, #0x1c
    3e7c:	b.ls	3eec <grub_unixtime2datetime+0x1a4>  // b.plast
    3e80:	sub	w2, w2, #0x1d
    3e84:	b	3df0 <grub_unixtime2datetime+0xa8>
    3e88:	mov	w2, #0xf361                	// #62305
    3e8c:	mov	w5, #0x16d                 	// #365
    3e90:	movk	w2, #0x6719, lsl #16
    3e94:	umull	x2, w0, w2
    3e98:	lsr	x4, x2, #32
    3e9c:	sub	w2, w0, w4
    3ea0:	add	w2, w4, w2, lsr #1
    3ea4:	lsr	w2, w2, #8
    3ea8:	add	w3, w3, w2
    3eac:	add	w3, w3, #0x76d
    3eb0:	msub	w2, w2, w5, w0
    3eb4:	and	w3, w3, #0xffff
    3eb8:	b	3dc0 <grub_unixtime2datetime+0x78>
    3ebc:	mov	w6, #0x517f                	// #20863
    3ec0:	mov	w2, #0x4507                	// #17671
    3ec4:	movk	w6, #0x1, lsl #16
    3ec8:	sub	w6, w6, w0
    3ecc:	movk	w2, #0xc22e, lsl #16
    3ed0:	umull	x6, w6, w2
    3ed4:	lsr	x6, x6, #48
    3ed8:	neg	w6, w6
    3edc:	b	3d78 <grub_unixtime2datetime+0x30>
    3ee0:	add	w0, w0, #0x1
    3ee4:	and	w0, w0, #0xff
    3ee8:	b	3e24 <grub_unixtime2datetime+0xdc>
    3eec:	mov	w0, #0x2                   	// #2
    3ef0:	b	3e24 <grub_unixtime2datetime+0xdc>
    3ef4:	nop
	...
    3f00:	ldrb	w2, [x1]
    3f04:	cmp	w2, #0x3e
    3f08:	b.eq	3f34 <grub_unixtime2datetime+0x1ec>  // b.none
    3f0c:	nop
    3f10:	ldrb	w3, [x0]
    3f14:	cmp	w2, w3
    3f18:	b.ne	3f60 <grub_unixtime2datetime+0x218>  // b.any
    3f1c:	cbz	w2, 3f68 <grub_unixtime2datetime+0x220>
    3f20:	ldrb	w2, [x1, #1]
    3f24:	add	x1, x1, #0x1
    3f28:	add	x0, x0, #0x1
    3f2c:	cmp	w2, #0x3e
    3f30:	b.ne	3f10 <grub_unixtime2datetime+0x1c8>  // b.any
    3f34:	ldrb	w2, [x1, #1]
    3f38:	cmp	w2, #0x3e
    3f3c:	b.eq	3f50 <grub_unixtime2datetime+0x208>  // b.none
    3f40:	ldrb	w0, [x0]
    3f44:	cmp	w0, #0x0
    3f48:	cset	w0, eq  // eq = none
    3f4c:	ret
    3f50:	ldrb	w2, [x0]
    3f54:	add	x1, x1, #0x1
    3f58:	cmp	w2, #0x3e
    3f5c:	b.eq	3f20 <grub_unixtime2datetime+0x1d8>  // b.none
    3f60:	mov	w0, #0x0                   	// #0
    3f64:	ret
    3f68:	mov	w0, #0x1                   	// #1
    3f6c:	ret
    3f70:	stp	x29, x30, [sp, #-32]!
    3f74:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    3f78:	mov	x29, sp
    3f7c:	str	x19, [sp, #16]
    3f80:	mov	x19, x0
    3f84:	ldr	x0, [x1]
    3f88:	bl	0 <grub_printf>
    3f8c:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    3f90:	ldr	x1, [x19]
    3f94:	ldr	x0, [x0]
    3f98:	bl	0 <grub_printf_>
    3f9c:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    3fa0:	ldr	x19, [sp, #16]
    3fa4:	ldp	x29, x30, [sp], #32
    3fa8:	ldr	x0, [x0]
    3fac:	b	0 <grub_printf>
	...
    3fc8:	stp	x29, x30, [sp, #-32]!
    3fcc:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    3fd0:	mov	x29, sp
    3fd4:	str	x19, [sp, #16]
    3fd8:	mov	x19, x0
    3fdc:	ldr	x0, [x1]
    3fe0:	bl	0 <grub_printf>
    3fe4:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    3fe8:	ldr	x1, [x19]
    3fec:	ldr	x0, [x0]
    3ff0:	bl	0 <grub_printf_>
    3ff4:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    3ff8:	ldr	x0, [x0]
    3ffc:	bl	0 <grub_printf>
    4000:	ldr	x19, [sp, #16]
    4004:	mov	w0, #0x9c4                 	// #2500
    4008:	ldp	x29, x30, [sp], #32
    400c:	b	0 <grub_millisleep>
	...
    4028:	stp	x29, x30, [sp, #-48]!
    402c:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    4030:	mov	x29, sp
    4034:	str	x21, [sp, #32]
    4038:	ldr	x21, [x0]
    403c:	stp	x19, x20, [sp, #16]
    4040:	ldr	x19, [x21]
    4044:	cbz	x19, 4068 <grub_unixtime2datetime+0x320>
    4048:	mov	x20, x19
    404c:	ldr	x19, [x19]
    4050:	ldr	x0, [x20, #8]
    4054:	ldr	x1, [x20, #40]
    4058:	blr	x1
    405c:	mov	x0, x20
    4060:	bl	0 <grub_free>
    4064:	cbnz	x19, 4048 <grub_unixtime2datetime+0x300>
    4068:	ldp	x19, x20, [sp, #16]
    406c:	str	xzr, [x21]
    4070:	ldr	x21, [sp, #32]
    4074:	ldp	x29, x30, [sp], #48
    4078:	ret
    407c:	nop
	...
    4088:	stp	x29, x30, [sp, #-32]!
    408c:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    4090:	mov	w3, w0
    4094:	mov	x29, sp
    4098:	ldr	x2, [x1]
    409c:	add	x0, sp, #0x10
    40a0:	mov	x1, #0x10                  	// #16
    40a4:	bl	0 <grub_snprintf>
    40a8:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    40ac:	add	x1, sp, #0x10
    40b0:	ldr	x0, [x0]
    40b4:	bl	0 <grub_env_set>
    40b8:	ldp	x29, x30, [sp], #32
    40bc:	ret
	...

00000000000040d0 <grub_wait_after_message>:
    40d0:	stp	x29, x30, [sp, #-48]!
    40d4:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    40d8:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    40dc:	mov	x29, sp
    40e0:	str	x21, [sp, #32]
    40e4:	ldr	x21, [x1]
    40e8:	stp	x19, x20, [sp, #16]
    40ec:	ldr	x20, [x0]
    40f0:	ldr	x1, [x21]
    40f4:	mov	x0, x20
    40f8:	blr	x1
    40fc:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    4100:	ldr	x0, [x0]
    4104:	bl	0 <grub_printf_>
    4108:	bl	0 <grub_refresh>
    410c:	bl	0 <grub_get_time_ms>
    4110:	mov	x1, #0x2710                	// #10000
    4114:	add	x19, x0, x1
    4118:	b	4124 <grub_wait_after_message+0x54>
    411c:	bl	0 <grub_getkey_noblock>
    4120:	cbnz	w0, 4130 <grub_wait_after_message+0x60>
    4124:	bl	0 <grub_get_time_ms>
    4128:	cmp	x0, x19
    412c:	b.cc	411c <grub_wait_after_message+0x4c>  // b.lo, b.ul, b.last
    4130:	mov	x0, x20
    4134:	ldr	x1, [x21]
    4138:	ldp	x19, x20, [sp, #16]
    413c:	mov	x16, x1
    4140:	ldr	x21, [sp, #32]
    4144:	ldp	x29, x30, [sp], #48
    4148:	br	x16
    414c:	nop
	...
    4168:	stp	x29, x30, [sp, #-32]!
    416c:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    4170:	mov	x29, sp
    4174:	str	x19, [sp, #16]
    4178:	ldr	x19, [x0]
    417c:	ldr	w0, [x19]
    4180:	cbnz	w0, 41a8 <grub_wait_after_message+0xd8>
    4184:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    4188:	ldr	x0, [x0]
    418c:	bl	0 <grub_printf>
    4190:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    4194:	ldr	x0, [x0]
    4198:	bl	0 <grub_printf_>
    419c:	ldr	x19, [sp, #16]
    41a0:	ldp	x29, x30, [sp], #32
    41a4:	b	40d0 <grub_wait_after_message>
    41a8:	bl	0 <grub_print_error>
    41ac:	str	wzr, [x19]
    41b0:	b	4184 <grub_wait_after_message+0xb4>
    41b4:	nop
	...

00000000000041d0 <grub_menu_get_entry>:
    41d0:	ldr	x0, [x0, #8]
    41d4:	cmp	x0, #0x0
    41d8:	ccmp	w1, #0x0, #0x4, ne  // ne = any
    41dc:	b.le	41f4 <grub_menu_get_entry+0x24>
    41e0:	ldr	x0, [x0, #72]
    41e4:	sub	w1, w1, #0x1
    41e8:	cmp	x0, #0x0
    41ec:	ccmp	w1, #0x0, #0x4, ne  // ne = any
    41f0:	b.gt	41e0 <grub_menu_get_entry+0x10>
    41f4:	ret

00000000000041f8 <grub_menu_get_timeout>:
    41f8:	stp	x29, x30, [sp, #-48]!
    41fc:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    4200:	mov	x29, sp
    4204:	stp	x19, x20, [sp, #16]
    4208:	ldr	x20, [x0]
    420c:	mov	x0, x20
    4210:	bl	0 <grub_env_get>
    4214:	cbz	x0, 4274 <grub_menu_get_timeout+0x7c>
    4218:	mov	x19, x0
    421c:	str	x21, [sp, #32]
    4220:	bl	0 <grub_error_push>
    4224:	mov	x0, x19
    4228:	mov	x1, #0x0                   	// #0
    422c:	mov	w2, #0x0                   	// #0
    4230:	bl	0 <grub_strtoul>
    4234:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    4238:	mov	w19, w0
    423c:	ldr	x21, [x1]
    4240:	ldr	w1, [x21]
    4244:	cbnz	w1, 4260 <grub_menu_get_timeout+0x68>
    4248:	bl	0 <grub_error_pop>
    424c:	ldr	x21, [sp, #32]
    4250:	mov	w0, w19
    4254:	ldp	x19, x20, [sp, #16]
    4258:	ldp	x29, x30, [sp], #48
    425c:	ret
    4260:	mov	x0, x20
    4264:	mov	w19, #0xffffffff            	// #-1
    4268:	bl	0 <grub_env_unset>
    426c:	str	wzr, [x21]
    4270:	b	4248 <grub_menu_get_timeout+0x50>
    4274:	mov	w19, #0xffffffff            	// #-1
    4278:	b	4250 <grub_menu_get_timeout+0x58>
    427c:	nop
	...

0000000000004290 <grub_menu_set_timeout>:
    4290:	cmp	w0, #0x0
    4294:	b.gt	429c <grub_menu_set_timeout+0xc>
    4298:	ret
    429c:	b	4088 <grub_unixtime2datetime+0x340>

00000000000042a0 <grub_menu_register_viewer>:
    42a0:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    42a4:	ldr	x1, [x1]
    42a8:	ldr	x2, [x1]
    42ac:	str	x2, [x0]
    42b0:	str	x0, [x1]
    42b4:	ret
	...

00000000000042c0 <grub_show_menu>:
    42c0:	stp	x29, x30, [sp, #-160]!
    42c4:	adrp	x4, 0 <grub_normal_free_menu-0x268>
    42c8:	adrp	x5, 0 <grub_normal_free_menu-0x268>
    42cc:	mov	x29, sp
    42d0:	adrp	x3, 0 <grub_normal_free_menu-0x268>
    42d4:	ldr	x5, [x5]
    42d8:	stp	x27, x28, [sp, #80]
    42dc:	mov	w27, w1
    42e0:	ldr	x28, [x4]
    42e4:	stp	x21, x22, [sp, #32]
    42e8:	mov	x21, x0
    42ec:	ldr	x0, [x3]
    42f0:	stp	x23, x24, [sp, #48]
    42f4:	mov	w24, w2
    42f8:	stp	x19, x20, [sp, #16]
    42fc:	stp	x25, x26, [sp, #64]
    4300:	str	x0, [sp, #120]
    4304:	str	x5, [sp, #136]
    4308:	ldr	x0, [sp, #136]
    430c:	bl	0 <grub_env_get>
    4310:	mov	x19, x0
    4314:	cbz	x0, 4948 <grub_show_menu+0x688>
    4318:	bl	0 <grub_error_push>
    431c:	mov	x1, #0x0                   	// #0
    4320:	mov	x0, x19
    4324:	mov	w2, #0x0                   	// #0
    4328:	bl	0 <grub_strtoul>
    432c:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    4330:	mov	x20, x0
    4334:	ldr	x0, [x1]
    4338:	ldr	w1, [x0]
    433c:	cmp	w1, #0xa
    4340:	b.eq	4c04 <grub_show_menu+0x944>  // b.none
    4344:	cbz	w1, 4c68 <grub_show_menu+0x9a8>
    4348:	mov	w22, #0x0                   	// #0
    434c:	str	wzr, [x0]
    4350:	bl	0 <grub_error_pop>
    4354:	bl	41f8 <grub_menu_get_timeout>
    4358:	mov	w19, w0
    435c:	mov	x0, x28
    4360:	tbnz	w19, #31, 45e8 <grub_show_menu+0x328>
    4364:	bl	0 <grub_env_get>
    4368:	mov	x25, x0
    436c:	cbz	x0, 4ca4 <grub_show_menu+0x9e4>
    4370:	adrp	x2, 0 <grub_normal_free_menu-0x268>
    4374:	ldr	x20, [x2]
    4378:	ldr	x0, [x20]
    437c:	cbnz	x0, 438c <grub_show_menu+0xcc>
    4380:	b	4ca4 <grub_show_menu+0x9e4>
    4384:	ldr	x0, [x20, #16]!
    4388:	cbz	x0, 4ca4 <grub_show_menu+0x9e4>
    438c:	mov	x1, x25
    4390:	bl	0 <grub_strcmp>
    4394:	mov	w23, w0
    4398:	cbnz	w0, 4384 <grub_show_menu+0xc4>
    439c:	ldr	w25, [x20, #8]
    43a0:	sub	w0, w25, #0x1
    43a4:	cmp	w0, #0x1
    43a8:	b.hi	4ca4 <grub_show_menu+0x9e4>  // b.pmore
    43ac:	cmp	w19, #0x0
    43b0:	ccmp	w25, #0x1, #0x0, ne  // ne = any
    43b4:	b.eq	4bd8 <grub_show_menu+0x918>  // b.none
    43b8:	bl	0 <grub_get_time_ms>
    43bc:	mov	x20, x0
    43c0:	adrp	x26, 0 <grub_normal_free_menu-0x268>
    43c4:	bl	0 <grub_getkey_noblock>
    43c8:	cbnz	w0, 43e8 <grub_show_menu+0x128>
    43cc:	cmp	w19, #0x0
    43d0:	mov	x2, x20
    43d4:	b.gt	459c <grub_show_menu+0x2dc>
    43d8:	cbz	w19, 4c90 <grub_show_menu+0x9d0>
    43dc:	mov	x20, x2
    43e0:	bl	0 <grub_getkey_noblock>
    43e4:	cbz	w0, 43cc <grub_show_menu+0x10c>
    43e8:	ldr	w3, [x21]
    43ec:	ldr	x2, [x21, #8]
    43f0:	cmp	w3, #0x0
    43f4:	b.le	4c84 <grub_show_menu+0x9c4>
    43f8:	mov	w1, #0x0                   	// #0
    43fc:	b	4410 <grub_show_menu+0x150>
    4400:	add	w1, w1, #0x1
    4404:	cmp	w3, w1
    4408:	ldr	x2, [x2, #72]
    440c:	b.eq	4c84 <grub_show_menu+0x9c4>  // b.none
    4410:	ldr	w4, [x2, #64]
    4414:	cmp	w0, w4
    4418:	b.ne	4400 <grub_show_menu+0x140>  // b.any
    441c:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    4420:	mov	w22, w1
    4424:	ldr	x0, [x0]
    4428:	bl	0 <grub_env_unset>
    442c:	mov	x0, x28
    4430:	bl	0 <grub_env_unset>
    4434:	ldr	x19, [x21, #8]
    4438:	cmp	x19, #0x0
    443c:	ccmp	w22, #0x0, #0x4, ne  // ne = any
    4440:	b.gt	4848 <grub_show_menu+0x588>
    4444:	nop
    4448:	cbz	x19, 4308 <grub_show_menu+0x48>
    444c:	bl	b438 <grub_cls>
    4450:	cbz	w23, 4950 <grub_show_menu+0x690>
    4454:	adrp	x2, 0 <grub_normal_free_menu-0x268>
    4458:	mov	x0, x19
    445c:	mov	x1, #0x0                   	// #0
    4460:	adrp	x25, 0 <grub_normal_free_menu-0x268>
    4464:	ldr	x20, [x2]
    4468:	ldr	x2, [x20, #64]
    446c:	blr	x2
    4470:	mov	x0, x19
    4474:	mov	w1, #0x1                   	// #1
    4478:	bl	4d80 <grub_show_menu+0xac0>
    447c:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    4480:	ldr	x23, [x0]
    4484:	mov	x0, x23
    4488:	bl	0 <grub_env_get>
    448c:	mov	x19, x0
    4490:	cbz	x0, 4558 <grub_show_menu+0x298>
    4494:	nop
    4498:	bl	0 <grub_error_push>
    449c:	mov	x0, x19
    44a0:	add	x1, sp, #0x98
    44a4:	mov	w2, #0x0                   	// #0
    44a8:	bl	0 <grub_strtoul>
    44ac:	ldr	x22, [x25]
    44b0:	mov	x19, x0
    44b4:	ldr	w0, [x22]
    44b8:	cbnz	w0, 4918 <grub_show_menu+0x658>
    44bc:	ldr	x1, [sp, #152]
    44c0:	ldrb	w0, [x1]
    44c4:	cbnz	w0, 44e0 <grub_show_menu+0x220>
    44c8:	b	44ec <grub_show_menu+0x22c>
    44cc:	ldr	x0, [sp, #152]
    44d0:	add	x1, x0, #0x1
    44d4:	str	x1, [sp, #152]
    44d8:	ldrb	w0, [x0, #1]
    44dc:	cbz	w0, 44ec <grub_show_menu+0x22c>
    44e0:	bl	0 <grub_isspace>
    44e4:	cbnz	w0, 44cc <grub_show_menu+0x20c>
    44e8:	ldr	x1, [sp, #152]
    44ec:	mov	w26, w19
    44f0:	mov	x0, x23
    44f4:	bl	0 <grub_env_set>
    44f8:	bl	0 <grub_error_pop>
    44fc:	tbnz	w19, #31, 4558 <grub_show_menu+0x298>
    4500:	bl	0 <grub_print_error>
    4504:	str	wzr, [x22]
    4508:	ldr	x22, [x21, #8]
    450c:	cmp	w19, #0x0
    4510:	ccmp	x22, #0x0, #0x4, gt
    4514:	b.eq	452c <grub_show_menu+0x26c>  // b.none
    4518:	ldr	x22, [x22, #72]
    451c:	sub	w26, w26, #0x1
    4520:	cmp	x22, #0x0
    4524:	ccmp	w26, #0x0, #0x4, ne  // ne = any
    4528:	b.gt	4518 <grub_show_menu+0x258>
    452c:	ldr	x2, [x20, #72]
    4530:	mov	x0, x22
    4534:	mov	x1, #0x0                   	// #0
    4538:	blr	x2
    453c:	mov	w1, #0x1                   	// #1
    4540:	mov	x0, x22
    4544:	bl	4d80 <grub_show_menu+0xac0>
    4548:	mov	x0, x23
    454c:	bl	0 <grub_env_get>
    4550:	mov	x19, x0
    4554:	cbnz	x0, 4498 <grub_show_menu+0x1d8>
    4558:	cbz	w24, 492c <grub_show_menu+0x66c>
    455c:	nop
    4560:	bl	0 <grub_print_error>
    4564:	ldr	x0, [sp, #120]
    4568:	ldr	w24, [x0]
    456c:	cbnz	w24, 457c <grub_show_menu+0x2bc>
    4570:	mov	x0, #0x0                   	// #0
    4574:	bl	2830 <grub_auth_check_authentication>
    4578:	cbnz	w0, 4cf8 <grub_show_menu+0xa38>
    457c:	mov	w0, #0x0                   	// #0
    4580:	ldp	x19, x20, [sp, #16]
    4584:	ldp	x21, x22, [sp, #32]
    4588:	ldp	x23, x24, [sp, #48]
    458c:	ldp	x25, x26, [sp, #64]
    4590:	ldp	x27, x28, [sp, #80]
    4594:	ldp	x29, x30, [sp], #160
    4598:	ret
    459c:	bl	0 <grub_get_time_ms>
    45a0:	mov	x2, x0
    45a4:	sub	x0, x0, x20
    45a8:	cmp	x0, #0x3e7
    45ac:	b.ls	43c4 <grub_show_menu+0x104>  // b.plast
    45b0:	sub	w19, w19, #0x1
    45b4:	cmp	w25, #0x1
    45b8:	b.ne	43d8 <grub_show_menu+0x118>  // b.any
    45bc:	ldr	x20, [x26]
    45c0:	str	x2, [sp, #104]
    45c4:	ldr	x0, [x20, #8]
    45c8:	bl	9c98 <grub_term_restore_pos>
    45cc:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    45d0:	mov	w1, w19
    45d4:	ldr	x0, [x0]
    45d8:	bl	0 <grub_printf>
    45dc:	bl	0 <grub_refresh>
    45e0:	ldr	x2, [sp, #104]
    45e4:	b	43d8 <grub_show_menu+0x118>
    45e8:	bl	0 <grub_env_unset>
    45ec:	mov	x0, x28
    45f0:	bl	0 <grub_env_get>
    45f4:	mov	x25, x0
    45f8:	cbz	x0, 4610 <grub_show_menu+0x350>
    45fc:	adrp	x2, 0 <grub_normal_free_menu-0x268>
    4600:	ldr	x20, [x2]
    4604:	ldr	x0, [x20]
    4608:	cbnz	x0, 438c <grub_show_menu+0xcc>
    460c:	nop
    4610:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    4614:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    4618:	mov	w19, w22
    461c:	ldr	x20, [x1]
    4620:	ldr	x0, [x0]
    4624:	str	x0, [sp, #112]
    4628:	ldr	x0, [sp, #112]
    462c:	ldr	x26, [x0]
    4630:	mov	x25, x26
    4634:	cbnz	x26, 4644 <grub_show_menu+0x384>
    4638:	b	46fc <grub_show_menu+0x43c>
    463c:	ldr	x25, [x25]
    4640:	cbz	x25, 4c7c <grub_show_menu+0x9bc>
    4644:	ldr	x0, [x25, #112]
    4648:	cbz	x0, 463c <grub_show_menu+0x37c>
    464c:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    4650:	ldr	x0, [x0]
    4654:	bl	0 <grub_env_get>
    4658:	cbz	x0, 4684 <grub_show_menu+0x3c4>
    465c:	ldr	x3, [x20, #16]
    4660:	cbz	x3, 4cc4 <grub_show_menu+0xa04>
    4664:	mov	w2, w27
    4668:	mov	x1, x21
    466c:	mov	w0, w19
    4670:	mov	w23, #0x1                   	// #1
    4674:	blr	x3
    4678:	cbz	w0, 469c <grub_show_menu+0x3dc>
    467c:	bl	0 <grub_print_error>
    4680:	bl	40d0 <grub_wait_after_message>
    4684:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    4688:	mov	w23, #0x0                   	// #0
    468c:	ldr	x0, [x25, #112]
    4690:	ldr	x1, [x1]
    4694:	str	wzr, [x1]
    4698:	blr	x0
    469c:	ldr	x0, [sp, #112]
    46a0:	ldr	x26, [x0]
    46a4:	cbz	x26, 46fc <grub_show_menu+0x43c>
    46a8:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    46ac:	adrp	x25, 0 <grub_normal_free_menu-0x268>
    46b0:	ldr	x0, [x0]
    46b4:	str	x0, [sp, #104]
    46b8:	ldr	x0, [x26, #16]
    46bc:	ldr	x1, [sp, #104]
    46c0:	bl	0 <grub_strcmp>
    46c4:	cmp	w0, #0x0
    46c8:	mov	w3, w27
    46cc:	ccmp	w23, #0x0, #0x4, eq  // eq = none
    46d0:	b.ne	46f4 <grub_show_menu+0x434>  // b.any
    46d4:	mov	x2, x21
    46d8:	mov	w1, w19
    46dc:	mov	x0, x26
    46e0:	bl	8978 <grub_menu_try_text>
    46e4:	cbz	w0, 46f4 <grub_show_menu+0x434>
    46e8:	bl	0 <grub_print_error>
    46ec:	ldr	x0, [x25]
    46f0:	str	wzr, [x0]
    46f4:	ldr	x26, [x26]
    46f8:	cbnz	x26, 46b8 <grub_show_menu+0x3f8>
    46fc:	bl	0 <grub_get_time_ms>
    4700:	str	x0, [sp, #104]
    4704:	bl	41f8 <grub_menu_get_timeout>
    4708:	mov	w26, w0
    470c:	cmp	w0, #0x0
    4710:	b.le	4964 <grub_show_menu+0x6a4>
    4714:	ldr	x23, [x20]
    4718:	cbz	x23, 4738 <grub_show_menu+0x478>
    471c:	nop
    4720:	ldr	x1, [x23, #8]
    4724:	mov	w0, w26
    4728:	ldr	x2, [x23, #24]
    472c:	blr	x2
    4730:	ldr	x23, [x23]
    4734:	cbnz	x23, 4720 <grub_show_menu+0x460>
    4738:	bl	41f8 <grub_menu_get_timeout>
    473c:	mov	w26, w0
    4740:	ldr	x1, [sp, #120]
    4744:	ldr	w23, [x1]
    4748:	cbnz	w23, 4560 <grub_show_menu+0x2a0>
    474c:	cmp	w0, #0x0
    4750:	b.gt	47c8 <grub_show_menu+0x508>
    4754:	cbz	w26, 4818 <grub_show_menu+0x558>
    4758:	bl	0 <grub_getkey_noblock>
    475c:	mov	w25, w0
    4760:	cmp	w0, #0x0
    4764:	b.le	4738 <grub_show_menu+0x478>
    4768:	tbz	w26, #31, 489c <grub_show_menu+0x5dc>
    476c:	mov	w0, #0x49                  	// #73
    4770:	movk	w0, #0x80, lsl #16
    4774:	cmp	w25, w0
    4778:	b.eq	48e8 <grub_show_menu+0x628>  // b.none
    477c:	b.gt	4a00 <grub_show_menu+0x740>
    4780:	cmp	w25, #0x63
    4784:	b.eq	4b84 <grub_show_menu+0x8c4>  // b.none
    4788:	b.le	4b70 <grub_show_menu+0x8b0>
    478c:	cmp	w25, #0x76
    4790:	b.eq	4b98 <grub_show_menu+0x8d8>  // b.none
    4794:	b.le	49c0 <grub_show_menu+0x700>
    4798:	mov	w0, #0x47                  	// #71
    479c:	movk	w0, #0x80, lsl #16
    47a0:	cmp	w25, w0
    47a4:	b.ne	4988 <grub_show_menu+0x6c8>  // b.any
    47a8:	ldr	x19, [x20]
    47ac:	cbz	x19, 4afc <grub_show_menu+0x83c>
    47b0:	ldp	x1, x2, [x19, #8]
    47b4:	mov	w0, #0x0                   	// #0
    47b8:	blr	x2
    47bc:	ldr	x19, [x19]
    47c0:	cbnz	x19, 47b0 <grub_show_menu+0x4f0>
    47c4:	b	4738 <grub_show_menu+0x478>
    47c8:	bl	0 <grub_get_time_ms>
    47cc:	str	x0, [sp, #128]
    47d0:	ldr	x1, [sp, #104]
    47d4:	sub	x0, x0, x1
    47d8:	cmp	x0, #0x3e7
    47dc:	b.ls	488c <grub_show_menu+0x5cc>  // b.plast
    47e0:	subs	w26, w26, #0x1
    47e4:	b.ne	4860 <grub_show_menu+0x5a0>  // b.any
    47e8:	ldr	x25, [x20]
    47ec:	cbz	x25, 4818 <grub_show_menu+0x558>
    47f0:	ldr	x1, [x25, #8]
    47f4:	mov	w0, w26
    47f8:	ldr	x3, [x25, #24]
    47fc:	blr	x3
    4800:	ldr	x25, [x25]
    4804:	cbnz	x25, 47f0 <grub_show_menu+0x530>
    4808:	ldr	x0, [sp, #128]
    480c:	str	x0, [sp, #104]
    4810:	cbnz	w26, 4758 <grub_show_menu+0x498>
    4814:	nop
    4818:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    481c:	mov	w23, #0x1                   	// #1
    4820:	ldr	x0, [x0]
    4824:	bl	0 <grub_env_unset>
    4828:	bl	4028 <grub_unixtime2datetime+0x2e0>
    482c:	nop
    4830:	tbnz	w22, #31, 4560 <grub_show_menu+0x2a0>
    4834:	ldr	x19, [x21, #8]
    4838:	cmp	x19, #0x0
    483c:	ccmp	w22, #0x0, #0x4, ne  // ne = any
    4840:	b.le	4448 <grub_show_menu+0x188>
    4844:	nop
    4848:	ldr	x19, [x19, #72]
    484c:	sub	w22, w22, #0x1
    4850:	cmp	x19, #0x0
    4854:	ccmp	w22, #0x0, #0x4, ne  // ne = any
    4858:	b.gt	4848 <grub_show_menu+0x588>
    485c:	b	4448 <grub_show_menu+0x188>
    4860:	mov	w0, w26
    4864:	bl	4088 <grub_unixtime2datetime+0x340>
    4868:	ldr	x25, [x20]
    486c:	cbnz	x25, 47f0 <grub_show_menu+0x530>
    4870:	bl	0 <grub_getkey_noblock>
    4874:	mov	w25, w0
    4878:	cmp	w0, #0x0
    487c:	ldr	x0, [sp, #128]
    4880:	str	x0, [sp, #104]
    4884:	b.le	4738 <grub_show_menu+0x478>
    4888:	b	489c <grub_show_menu+0x5dc>
    488c:	bl	0 <grub_getkey_noblock>
    4890:	mov	w25, w0
    4894:	cmp	w0, #0x0
    4898:	b.le	4738 <grub_show_menu+0x478>
    489c:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    48a0:	ldr	x0, [x0]
    48a4:	bl	0 <grub_env_unset>
    48a8:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    48ac:	ldr	x0, [x0]
    48b0:	bl	0 <grub_env_unset>
    48b4:	ldr	x26, [x20]
    48b8:	cbz	x26, 476c <grub_show_menu+0x4ac>
    48bc:	nop
    48c0:	ldr	x0, [x26, #8]
    48c4:	ldr	x2, [x26, #32]
    48c8:	blr	x2
    48cc:	ldr	x26, [x26]
    48d0:	cbnz	x26, 48c0 <grub_show_menu+0x600>
    48d4:	mov	w0, #0x49                  	// #73
    48d8:	movk	w0, #0x80, lsl #16
    48dc:	cmp	w25, w0
    48e0:	b.ne	477c <grub_show_menu+0x4bc>  // b.any
    48e4:	nop
    48e8:	ldr	x23, [x20]
    48ec:	cmp	w19, #0x9
    48f0:	sub	w19, w19, #0xa
    48f4:	csel	w19, w19, wzr, gt
    48f8:	cbz	x23, 4738 <grub_show_menu+0x478>
    48fc:	nop
    4900:	ldp	x1, x2, [x23, #8]
    4904:	mov	w0, w19
    4908:	blr	x2
    490c:	ldr	x23, [x23]
    4910:	cbnz	x23, 4900 <grub_show_menu+0x640>
    4914:	b	4738 <grub_show_menu+0x478>
    4918:	mov	x0, x23
    491c:	bl	0 <grub_env_unset>
    4920:	str	wzr, [x22]
    4924:	bl	0 <grub_error_pop>
    4928:	cbnz	w24, 4560 <grub_show_menu+0x2a0>
    492c:	ldr	x1, [x20, #80]
    4930:	mov	x0, #0x0                   	// #0
    4934:	blr	x1
    4938:	ldr	x0, [sp, #136]
    493c:	bl	0 <grub_env_get>
    4940:	mov	x19, x0
    4944:	cbnz	x0, 4318 <grub_show_menu+0x58>
    4948:	mov	w22, #0x0                   	// #0
    494c:	b	4354 <grub_show_menu+0x94>
    4950:	mov	x0, x19
    4954:	mov	w1, #0x0                   	// #0
    4958:	bl	4d80 <grub_show_menu+0xac0>
    495c:	cbz	w24, 4308 <grub_show_menu+0x48>
    4960:	b	4560 <grub_show_menu+0x2a0>
    4964:	ldr	x23, [x20]
    4968:	cbz	x23, 4738 <grub_show_menu+0x478>
    496c:	nop
    4970:	ldr	x0, [x23, #8]
    4974:	ldr	x1, [x23, #32]
    4978:	blr	x1
    497c:	ldr	x23, [x23]
    4980:	cbnz	x23, 4970 <grub_show_menu+0x6b0>
    4984:	b	4738 <grub_show_menu+0x478>
    4988:	add	w0, w0, #0x1
    498c:	cmp	w25, w0
    4990:	b.ne	4a48 <grub_show_menu+0x788>  // b.any
    4994:	ldr	x23, [x20]
    4998:	cmp	w19, #0x0
    499c:	cset	w0, gt
    49a0:	sub	w19, w19, w0
    49a4:	cbz	x23, 4738 <grub_show_menu+0x478>
    49a8:	ldp	x1, x2, [x23, #8]
    49ac:	mov	w0, w19
    49b0:	blr	x2
    49b4:	ldr	x23, [x23]
    49b8:	cbnz	x23, 49a8 <grub_show_menu+0x6e8>
    49bc:	b	4738 <grub_show_menu+0x478>
    49c0:	cmp	w25, #0x65
    49c4:	b.ne	4a48 <grub_show_menu+0x788>  // b.any
    49c8:	bl	4028 <grub_unixtime2datetime+0x2e0>
    49cc:	ldr	x0, [x21, #8]
    49d0:	cmp	w19, #0x0
    49d4:	ccmp	x0, #0x0, #0x4, gt
    49d8:	b.eq	49f4 <grub_show_menu+0x734>  // b.none
    49dc:	mov	w1, w19
    49e0:	ldr	x0, [x0, #72]
    49e4:	sub	w1, w1, #0x1
    49e8:	cmp	x0, #0x0
    49ec:	ccmp	w1, #0x0, #0x4, ne  // ne = any
    49f0:	b.gt	49e0 <grub_show_menu+0x720>
    49f4:	cbz	x0, 4628 <grub_show_menu+0x368>
    49f8:	bl	6540 <grub_menu_entry_run>
    49fc:	b	4628 <grub_show_menu+0x368>
    4a00:	mov	w0, #0x63                  	// #99
    4a04:	movk	w0, #0x200, lsl #16
    4a08:	cmp	w25, w0
    4a0c:	b.eq	4b04 <grub_show_menu+0x844>  // b.none
    4a10:	b.le	4ac0 <grub_show_menu+0x800>
    4a14:	mov	w0, #0x67                  	// #103
    4a18:	movk	w0, #0x200, lsl #16
    4a1c:	cmp	w25, w0
    4a20:	b.eq	48e8 <grub_show_menu+0x628>  // b.none
    4a24:	b.le	4a88 <grub_show_menu+0x7c8>
    4a28:	mov	w0, #0x6e                  	// #110
    4a2c:	movk	w0, #0x200, lsl #16
    4a30:	cmp	w25, w0
    4a34:	b.eq	4b98 <grub_show_menu+0x8d8>  // b.none
    4a38:	add	w0, w0, #0x2
    4a3c:	cmp	w25, w0
    4a40:	b.eq	4994 <grub_show_menu+0x6d4>  // b.none
    4a44:	nop
    4a48:	ldr	w2, [x21]
    4a4c:	ldr	x0, [x21, #8]
    4a50:	cmp	w2, #0x0
    4a54:	b.le	4738 <grub_show_menu+0x478>
    4a58:	mov	w26, #0x0                   	// #0
    4a5c:	b	4a70 <grub_show_menu+0x7b0>
    4a60:	add	w26, w26, #0x1
    4a64:	cmp	w2, w26
    4a68:	ldr	x0, [x0, #72]
    4a6c:	b.eq	4738 <grub_show_menu+0x478>  // b.none
    4a70:	ldr	w3, [x0, #64]
    4a74:	cmp	w3, w25
    4a78:	b.ne	4a60 <grub_show_menu+0x7a0>  // b.any
    4a7c:	mov	w22, w26
    4a80:	bl	4028 <grub_unixtime2datetime+0x2e0>
    4a84:	b	4834 <grub_show_menu+0x574>
    4a88:	mov	w0, #0x65                  	// #101
    4a8c:	movk	w0, #0x200, lsl #16
    4a90:	cmp	w25, w0
    4a94:	b.ne	4b38 <grub_show_menu+0x878>  // b.any
    4a98:	ldr	x23, [x20]
    4a9c:	ldr	w19, [x21]
    4aa0:	sub	w19, w19, #0x1
    4aa4:	cbz	x23, 4738 <grub_show_menu+0x478>
    4aa8:	ldp	x1, x2, [x23, #8]
    4aac:	mov	w0, w19
    4ab0:	blr	x2
    4ab4:	ldr	x23, [x23]
    4ab8:	cbnz	x23, 4aa8 <grub_show_menu+0x7e8>
    4abc:	b	4738 <grub_show_menu+0x478>
    4ac0:	mov	w0, #0x50                  	// #80
    4ac4:	movk	w0, #0x80, lsl #16
    4ac8:	cmp	w25, w0
    4acc:	b.eq	4b98 <grub_show_menu+0x8d8>  // b.none
    4ad0:	b.le	4b50 <grub_show_menu+0x890>
    4ad4:	mov	w0, #0x51                  	// #81
    4ad8:	movk	w0, #0x80, lsl #16
    4adc:	cmp	w25, w0
    4ae0:	b.eq	4b04 <grub_show_menu+0x844>  // b.none
    4ae4:	mov	w0, #0x61                  	// #97
    4ae8:	movk	w0, #0x200, lsl #16
    4aec:	cmp	w25, w0
    4af0:	b.ne	4a48 <grub_show_menu+0x788>  // b.any
    4af4:	ldr	x19, [x20]
    4af8:	cbnz	x19, 47b0 <grub_show_menu+0x4f0>
    4afc:	mov	w19, #0x0                   	// #0
    4b00:	b	4738 <grub_show_menu+0x478>
    4b04:	ldr	x23, [x20]
    4b08:	add	w19, w19, #0xa
    4b0c:	ldr	w0, [x21]
    4b10:	cmp	w19, w0
    4b14:	sub	w0, w0, #0x1
    4b18:	csel	w19, w0, w19, ge  // ge = tcont
    4b1c:	cbz	x23, 4738 <grub_show_menu+0x478>
    4b20:	ldp	x1, x2, [x23, #8]
    4b24:	mov	w0, w19
    4b28:	blr	x2
    4b2c:	ldr	x23, [x23]
    4b30:	cbnz	x23, 4b20 <grub_show_menu+0x860>
    4b34:	b	4738 <grub_show_menu+0x478>
    4b38:	add	w0, w0, #0x1
    4b3c:	cmp	w25, w0
    4b40:	b.ne	4a48 <grub_show_menu+0x788>  // b.any
    4b44:	mov	w22, w19
    4b48:	bl	4028 <grub_unixtime2datetime+0x2e0>
    4b4c:	b	4830 <grub_show_menu+0x570>
    4b50:	mov	w0, #0x4d                  	// #77
    4b54:	movk	w0, #0x80, lsl #16
    4b58:	cmp	w25, w0
    4b5c:	b.eq	4b44 <grub_show_menu+0x884>  // b.none
    4b60:	add	w0, w0, #0x2
    4b64:	cmp	w25, w0
    4b68:	b.eq	4a98 <grub_show_menu+0x7d8>  // b.none
    4b6c:	b	4a48 <grub_show_menu+0x788>
    4b70:	cmp	w25, #0x1b
    4b74:	b.ne	4bc8 <grub_show_menu+0x908>  // b.any
    4b78:	cbz	w27, 4738 <grub_show_menu+0x478>
    4b7c:	bl	4028 <grub_unixtime2datetime+0x2e0>
    4b80:	b	4560 <grub_show_menu+0x2a0>
    4b84:	bl	4028 <grub_unixtime2datetime+0x2e0>
    4b88:	mov	w1, #0x0                   	// #0
    4b8c:	mov	w0, #0x1                   	// #1
    4b90:	bl	760 <grub_cmdline_run>
    4b94:	b	4628 <grub_show_menu+0x368>
    4b98:	ldr	w0, [x21]
    4b9c:	ldr	x23, [x20]
    4ba0:	sub	w0, w0, #0x1
    4ba4:	cmp	w19, w0
    4ba8:	cinc	w19, w19, lt  // lt = tstop
    4bac:	cbz	x23, 4738 <grub_show_menu+0x478>
    4bb0:	ldp	x1, x2, [x23, #8]
    4bb4:	mov	w0, w19
    4bb8:	blr	x2
    4bbc:	ldr	x23, [x23]
    4bc0:	cbnz	x23, 4bb0 <grub_show_menu+0x8f0>
    4bc4:	b	4738 <grub_show_menu+0x478>
    4bc8:	b.le	4cb0 <grub_show_menu+0x9f0>
    4bcc:	cmp	w25, #0x5e
    4bd0:	b.eq	4994 <grub_show_menu+0x6d4>  // b.none
    4bd4:	b	4a48 <grub_show_menu+0x788>
    4bd8:	bl	9c00 <grub_term_save_pos>
    4bdc:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    4be0:	ldr	x20, [x1]
    4be4:	str	x0, [x20, #8]
    4be8:	bl	9c98 <grub_term_restore_pos>
    4bec:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    4bf0:	mov	w1, w19
    4bf4:	ldr	x0, [x0]
    4bf8:	bl	0 <grub_printf>
    4bfc:	bl	0 <grub_refresh>
    4c00:	b	43b8 <grub_show_menu+0xf8>
    4c04:	ldr	x4, [x21, #8]
    4c08:	str	wzr, [x0]
    4c0c:	cbz	x4, 4c5c <grub_show_menu+0x99c>
    4c10:	mov	w22, #0x0                   	// #0
    4c14:	b	4c34 <grub_show_menu+0x974>
    4c18:	ldr	x0, [x4, #8]
    4c1c:	mov	x1, x19
    4c20:	bl	3f00 <grub_unixtime2datetime+0x1b8>
    4c24:	cbnz	w0, 4c44 <grub_show_menu+0x984>
    4c28:	ldr	x4, [x4, #72]
    4c2c:	add	w22, w22, #0x1
    4c30:	cbz	x4, 4c5c <grub_show_menu+0x99c>
    4c34:	ldr	x0, [x4]
    4c38:	mov	x1, x19
    4c3c:	bl	3f00 <grub_unixtime2datetime+0x1b8>
    4c40:	cbz	w0, 4c18 <grub_show_menu+0x958>
    4c44:	bl	0 <grub_error_pop>
    4c48:	ldr	w0, [x21]
    4c4c:	cmp	w0, w22
    4c50:	b.gt	4354 <grub_show_menu+0x94>
    4c54:	mov	w22, #0x0                   	// #0
    4c58:	b	4354 <grub_show_menu+0x94>
    4c5c:	mov	w22, #0x0                   	// #0
    4c60:	bl	0 <grub_error_pop>
    4c64:	b	4354 <grub_show_menu+0x94>
    4c68:	mov	w22, w20
    4c6c:	bl	0 <grub_error_pop>
    4c70:	tbz	w20, #31, 4c48 <grub_show_menu+0x988>
    4c74:	mov	w22, #0x0                   	// #0
    4c78:	b	4354 <grub_show_menu+0x94>
    4c7c:	mov	w23, #0x0                   	// #0
    4c80:	b	46a8 <grub_show_menu+0x3e8>
    4c84:	cmp	w0, #0x1b
    4c88:	b.ne	43cc <grub_show_menu+0x10c>  // b.any
    4c8c:	mov	w19, #0xffffffff            	// #-1
    4c90:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    4c94:	ldr	x0, [x0]
    4c98:	bl	0 <grub_env_unset>
    4c9c:	mov	x0, x28
    4ca0:	bl	0 <grub_env_unset>
    4ca4:	cbnz	w19, 4610 <grub_show_menu+0x350>
    4ca8:	mov	w23, #0x1                   	// #1
    4cac:	b	4830 <grub_show_menu+0x570>
    4cb0:	cmp	w25, #0xa
    4cb4:	b.eq	4b44 <grub_show_menu+0x884>  // b.none
    4cb8:	cmp	w25, #0xd
    4cbc:	b.eq	4b44 <grub_show_menu+0x884>  // b.none
    4cc0:	b	4a48 <grub_show_menu+0x788>
    4cc4:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    4cc8:	ldr	x23, [x0]
    4ccc:	mov	x0, x23
    4cd0:	bl	0 <grub_dl_load>
    4cd4:	bl	0 <grub_print_error>
    4cd8:	ldr	x3, [x20, #16]
    4cdc:	cbnz	x3, 4664 <grub_show_menu+0x3a4>
    4ce0:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    4ce4:	mov	x2, x23
    4ce8:	mov	w0, #0x2                   	// #2
    4cec:	ldr	x1, [x1]
    4cf0:	bl	0 <grub_error>
    4cf4:	b	467c <grub_show_menu+0x3bc>
    4cf8:	bl	0 <grub_print_error>
    4cfc:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    4d00:	ldr	x0, [x0]
    4d04:	str	wzr, [x0]
    4d08:	b	4308 <grub_show_menu+0x48>
    4d0c:	nop
	...
    4d80:	stp	x29, x30, [sp, #-128]!
    4d84:	mov	x29, sp
    4d88:	stp	x19, x20, [sp, #16]
    4d8c:	mov	x20, x0
    4d90:	ldr	w0, [x0, #16]
    4d94:	str	w1, [sp, #124]
    4d98:	cbz	w0, 4da8 <grub_show_menu+0xae8>
    4d9c:	ldr	x0, [x20, #24]
    4da0:	bl	2830 <grub_auth_check_authentication>
    4da4:	cbnz	w0, 50ac <grub_show_menu+0xdec>
    4da8:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    4dac:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    4db0:	stp	x21, x22, [sp, #32]
    4db4:	ldr	x1, [x1]
    4db8:	stp	x23, x24, [sp, #48]
    4dbc:	ldr	x21, [x0]
    4dc0:	stp	x25, x26, [sp, #64]
    4dc4:	mov	x0, x21
    4dc8:	stp	x27, x28, [sp, #80]
    4dcc:	ldr	w27, [x1]
    4dd0:	str	x1, [sp, #96]
    4dd4:	bl	0 <grub_env_get>
    4dd8:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    4ddc:	mov	x25, x0
    4de0:	ldr	x24, [x1]
    4de4:	mov	x0, x24
    4de8:	bl	0 <grub_env_get>
    4dec:	ldr	w1, [x20, #68]
    4df0:	mov	x28, x0
    4df4:	cbnz	w1, 5018 <grub_show_menu+0xd58>
    4df8:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    4dfc:	mov	x26, #0x0                   	// #0
    4e00:	ldr	x0, [x0]
    4e04:	str	x0, [sp, #104]
    4e08:	ldr	x5, [x20, #8]
    4e0c:	ldrb	w3, [x5]
    4e10:	cbz	w3, 5158 <grub_show_menu+0xe98>
    4e14:	mov	x19, #0x0                   	// #0
    4e18:	cmp	w3, #0x3e
    4e1c:	ldrb	w3, [x5, #1]!
    4e20:	cset	x1, eq  // eq = none
    4e24:	add	x1, x1, #0x1
    4e28:	add	x19, x19, x1
    4e2c:	cbnz	w3, 4e18 <grub_show_menu+0xb58>
    4e30:	add	x19, x19, #0x1
    4e34:	cbz	x25, 4f30 <grub_show_menu+0xc70>
    4e38:	mov	x0, x25
    4e3c:	bl	0 <grub_strdup>
    4e40:	mov	x22, x0
    4e44:	cbz	x0, 5164 <grub_show_menu+0xea4>
    4e48:	mov	x23, #0x0                   	// #0
    4e4c:	cbz	x28, 4e60 <grub_show_menu+0xba0>
    4e50:	mov	x0, x28
    4e54:	bl	0 <grub_strdup>
    4e58:	mov	x23, x0
    4e5c:	cbz	x0, 516c <grub_show_menu+0xeac>
    4e60:	add	x19, x19, #0x1
    4e64:	mov	x0, x25
    4e68:	bl	0 <grub_strlen>
    4e6c:	add	x0, x19, x0
    4e70:	bl	0 <grub_malloc>
    4e74:	mov	x19, x0
    4e78:	mov	x1, x0
    4e7c:	cbz	x0, 509c <grub_show_menu+0xddc>
    4e80:	ldrb	w0, [x25]
    4e84:	mov	x3, x19
    4e88:	strb	w0, [x19], #1
    4e8c:	ldrb	w0, [x25], #1
    4e90:	cbnz	w0, 4e80 <grub_show_menu+0xbc0>
    4e94:	mov	w0, #0x3e                  	// #62
    4e98:	strb	w0, [x3]
    4e9c:	ldr	x4, [x20, #8]
    4ea0:	ldrb	w3, [x4]
    4ea4:	cbnz	w3, 4ec4 <grub_show_menu+0xc04>
    4ea8:	b	4ee8 <grub_show_menu+0xc28>
    4eac:	mov	x0, x19
    4eb0:	ldrb	w3, [x4]
    4eb4:	mov	x19, x5
    4eb8:	strb	w3, [x0]
    4ebc:	ldrb	w3, [x4, #1]!
    4ec0:	cbz	w3, 4ee8 <grub_show_menu+0xc28>
    4ec4:	add	x0, x19, #0x1
    4ec8:	cmp	w3, #0x3e
    4ecc:	mov	x5, x0
    4ed0:	b.ne	4eac <grub_show_menu+0xbec>  // b.any
    4ed4:	strb	w3, [x19], #2
    4ed8:	ldrb	w3, [x4]
    4edc:	strb	w3, [x0]
    4ee0:	ldrb	w3, [x4, #1]!
    4ee4:	cbnz	w3, 4ec4 <grub_show_menu+0xc04>
    4ee8:	strb	wzr, [x19]
    4eec:	mov	x0, x21
    4ef0:	str	x1, [sp, #112]
    4ef4:	bl	0 <grub_env_set>
    4ef8:	mov	x0, x21
    4efc:	bl	0 <grub_env_export>
    4f00:	ldr	x1, [sp, #112]
    4f04:	mov	x0, x1
    4f08:	bl	0 <grub_free>
    4f0c:	cbz	x28, 4f70 <grub_show_menu+0xcb0>
    4f10:	ldrb	w1, [x28]
    4f14:	nop
    4f18:	cbz	w1, 4f70 <grub_show_menu+0xcb0>
    4f1c:	cmp	w1, #0x3e
    4f20:	ldrb	w1, [x28, #1]
    4f24:	b.eq	4f64 <grub_show_menu+0xca4>  // b.none
    4f28:	add	x28, x28, #0x1
    4f2c:	b	4f18 <grub_show_menu+0xc58>
    4f30:	mov	x23, #0x0                   	// #0
    4f34:	cbz	x28, 4f48 <grub_show_menu+0xc88>
    4f38:	mov	x0, x28
    4f3c:	bl	0 <grub_strdup>
    4f40:	mov	x23, x0
    4f44:	cbz	x0, 5174 <grub_show_menu+0xeb4>
    4f48:	add	x0, x19, #0x1
    4f4c:	bl	0 <grub_malloc>
    4f50:	mov	x19, x0
    4f54:	cbz	x0, 50a0 <grub_show_menu+0xde0>
    4f58:	mov	x1, x0
    4f5c:	mov	x22, #0x0                   	// #0
    4f60:	b	4e9c <grub_show_menu+0xbdc>
    4f64:	cmp	w1, #0x3e
    4f68:	b.eq	5008 <grub_show_menu+0xd48>  // b.none
    4f6c:	cbnz	w1, 5134 <grub_show_menu+0xe74>
    4f70:	mov	x0, x24
    4f74:	bl	0 <grub_env_unset>
    4f78:	ldr	w1, [x20, #48]
    4f7c:	ldr	x0, [x20, #40]
    4f80:	ldr	x2, [x20, #56]
    4f84:	bl	10140 <grub_script_execute_new_scope>
    4f88:	ldr	x19, [sp, #96]
    4f8c:	ldr	w0, [x19]
    4f90:	cmp	w0, w27
    4f94:	b.eq	4fa0 <grub_show_menu+0xce0>  // b.none
    4f98:	bl	40d0 <grub_wait_after_message>
    4f9c:	ldr	w27, [x19]
    4fa0:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    4fa4:	ldr	x0, [x0]
    4fa8:	ldr	w0, [x0]
    4fac:	cbz	w0, 5048 <grub_show_menu+0xd88>
    4fb0:	ldr	w0, [x20, #68]
    4fb4:	cbz	w0, 4fc8 <grub_show_menu+0xd08>
    4fb8:	cbz	x26, 4fc4 <grub_show_menu+0xd04>
    4fbc:	ldr	w0, [x26]
    4fc0:	cbnz	w0, 50c8 <grub_show_menu+0xe08>
    4fc4:	bl	b578 <grub_env_context_close>
    4fc8:	cbz	x22, 5090 <grub_show_menu+0xdd0>
    4fcc:	mov	x1, x22
    4fd0:	mov	x0, x21
    4fd4:	bl	0 <grub_env_set>
    4fd8:	cbz	x23, 5068 <grub_show_menu+0xda8>
    4fdc:	mov	x1, x23
    4fe0:	mov	x0, x24
    4fe4:	bl	0 <grub_env_set>
    4fe8:	ldp	x19, x20, [sp, #16]
    4fec:	ldp	x21, x22, [sp, #32]
    4ff0:	ldp	x23, x24, [sp, #48]
    4ff4:	ldp	x25, x26, [sp, #64]
    4ff8:	ldp	x27, x28, [sp, #80]
    4ffc:	ldr	x0, [sp, #104]
    5000:	ldp	x29, x30, [sp], #128
    5004:	b	0 <grub_env_unset>
    5008:	ldrb	w1, [x28, #2]
    500c:	add	x28, x28, #0x1
    5010:	add	x28, x28, #0x1
    5014:	b	4f18 <grub_show_menu+0xc58>
    5018:	bl	b790 <grub_env_context_open>
    501c:	mov	x0, #0x10                  	// #16
    5020:	bl	0 <grub_zalloc>
    5024:	mov	x26, x0
    5028:	cbz	x0, 5144 <grub_show_menu+0xe84>
    502c:	bl	b558 <grub_env_set_menu>
    5030:	ldr	w0, [sp, #124]
    5034:	cbnz	w0, 5118 <grub_show_menu+0xe58>
    5038:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    503c:	ldr	x0, [x0]
    5040:	str	x0, [sp, #104]
    5044:	b	4e08 <grub_show_menu+0xb48>
    5048:	bl	0 <grub_loader_is_loaded>
    504c:	cbnz	w0, 50e8 <grub_show_menu+0xe28>
    5050:	ldr	x0, [sp, #96]
    5054:	ldr	w0, [x0]
    5058:	cmp	w0, w27
    505c:	b.eq	4fb0 <grub_show_menu+0xcf0>  // b.none
    5060:	bl	40d0 <grub_wait_after_message>
    5064:	b	4fb0 <grub_show_menu+0xcf0>
    5068:	mov	x0, x24
    506c:	bl	0 <grub_env_unset>
    5070:	ldp	x19, x20, [sp, #16]
    5074:	ldp	x21, x22, [sp, #32]
    5078:	ldp	x23, x24, [sp, #48]
    507c:	ldp	x25, x26, [sp, #64]
    5080:	ldp	x27, x28, [sp, #80]
    5084:	ldr	x0, [sp, #104]
    5088:	ldp	x29, x30, [sp], #128
    508c:	b	0 <grub_env_unset>
    5090:	mov	x0, x21
    5094:	bl	0 <grub_env_unset>
    5098:	b	4fd8 <grub_show_menu+0xd18>
    509c:	mov	x19, x22
    50a0:	mov	x22, x19
    50a4:	bl	0 <grub_print_error>
    50a8:	b	4f0c <grub_show_menu+0xc4c>
    50ac:	bl	0 <grub_print_error>
    50b0:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    50b4:	ldr	x0, [x0]
    50b8:	str	wzr, [x0]
    50bc:	ldp	x19, x20, [sp, #16]
    50c0:	ldp	x29, x30, [sp], #128
    50c4:	ret
    50c8:	ldr	w2, [sp, #124]
    50cc:	mov	w1, #0x1                   	// #1
    50d0:	mov	x0, x26
    50d4:	bl	42c0 <grub_show_menu>
    50d8:	mov	x0, x26
    50dc:	bl	268 <grub_normal_free_menu>
    50e0:	bl	b578 <grub_env_context_close>
    50e4:	b	4fc8 <grub_show_menu+0xd08>
    50e8:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    50ec:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    50f0:	ldr	x0, [x0]
    50f4:	ldr	x1, [x1]
    50f8:	ldr	x0, [x0]
    50fc:	bl	0 <grub_named_list_find>
    5100:	cbz	x0, 5050 <grub_show_menu+0xd90>
    5104:	ldr	x3, [x0, #32]
    5108:	mov	x2, #0x0                   	// #0
    510c:	mov	w1, #0x0                   	// #0
    5110:	blr	x3
    5114:	b	5050 <grub_show_menu+0xd90>
    5118:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    511c:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    5120:	ldr	x1, [x1]
    5124:	ldr	x0, [x0]
    5128:	str	x0, [sp, #104]
    512c:	bl	0 <grub_env_set>
    5130:	b	4e08 <grub_show_menu+0xb48>
    5134:	add	x1, x28, #0x1
    5138:	mov	x0, x24
    513c:	bl	0 <grub_env_set>
    5140:	b	4f78 <grub_show_menu+0xcb8>
    5144:	ldp	x21, x22, [sp, #32]
    5148:	ldp	x23, x24, [sp, #48]
    514c:	ldp	x25, x26, [sp, #64]
    5150:	ldp	x27, x28, [sp, #80]
    5154:	b	50bc <grub_show_menu+0xdfc>
    5158:	mov	x19, #0x1                   	// #1
    515c:	cbnz	x25, 4e38 <grub_show_menu+0xb78>
    5160:	b	4f30 <grub_show_menu+0xc70>
    5164:	bl	0 <grub_print_error>
    5168:	b	4e48 <grub_show_menu+0xb88>
    516c:	bl	0 <grub_print_error>
    5170:	b	4e60 <grub_show_menu+0xba0>
    5174:	bl	0 <grub_print_error>
    5178:	b	4f48 <grub_show_menu+0xc88>
    517c:	nop
	...
    51c0:	stp	x29, x30, [sp, #-64]!
    51c4:	mov	x29, sp
    51c8:	stp	x19, x20, [sp, #16]
    51cc:	ldr	x20, [x0]
    51d0:	stp	x21, x22, [sp, #32]
    51d4:	mov	x21, x0
    51d8:	cbz	x20, 5264 <grub_show_menu+0xfa4>
    51dc:	ldr	w0, [x0, #8]
    51e0:	cmp	w0, #0x0
    51e4:	b.le	5264 <grub_show_menu+0xfa4>
    51e8:	mov	x22, #0x0                   	// #0
    51ec:	str	x23, [sp, #48]
    51f0:	mov	w23, #0x0                   	// #0
    51f4:	b	5220 <grub_show_menu+0xf60>
    51f8:	ldr	x0, [x20]
    51fc:	bl	0 <grub_free>
    5200:	ldr	x0, [x20, #16]
    5204:	bl	0 <grub_free>
    5208:	ldr	w0, [x21, #8]
    520c:	add	w23, w23, #0x1
    5210:	add	x22, x22, #0x18
    5214:	cmp	w0, w23
    5218:	b.le	5260 <grub_show_menu+0xfa0>
    521c:	ldr	x20, [x21]
    5220:	adds	x20, x20, x22
    5224:	b.eq	520c <grub_show_menu+0xf4c>  // b.none
    5228:	ldr	x1, [x20, #16]
    522c:	cbz	x1, 51f8 <grub_show_menu+0xf38>
    5230:	ldr	w0, [x21, #48]
    5234:	cbz	w0, 51f8 <grub_show_menu+0xf38>
    5238:	mov	w19, #0x0                   	// #0
    523c:	b	5244 <grub_show_menu+0xf84>
    5240:	ldr	x1, [x20, #16]
    5244:	ldr	x0, [x1, w19, uxtw #3]
    5248:	add	w19, w19, #0x1
    524c:	bl	0 <grub_free>
    5250:	ldr	w0, [x21, #48]
    5254:	cmp	w0, w19
    5258:	b.hi	5240 <grub_show_menu+0xf80>  // b.pmore
    525c:	b	51f8 <grub_show_menu+0xf38>
    5260:	ldr	x23, [sp, #48]
    5264:	ldr	x0, [x21, #24]
    5268:	bl	0 <grub_free>
    526c:	ldr	x0, [x21]
    5270:	bl	0 <grub_free>
    5274:	ldr	x0, [x21, #40]
    5278:	bl	0 <grub_free>
    527c:	mov	x0, x21
    5280:	ldp	x19, x20, [sp, #16]
    5284:	ldp	x21, x22, [sp, #32]
    5288:	ldp	x29, x30, [sp], #64
    528c:	b	0 <grub_free>
    5290:	stp	x29, x30, [sp, #-32]!
    5294:	mov	x29, sp
    5298:	stp	x19, x20, [sp, #16]
    529c:	mov	x19, x0
    52a0:	ldr	w0, [x0, #20]
    52a4:	mov	w20, #0x18                  	// #24
    52a8:	ldr	x2, [x19]
    52ac:	smull	x0, w0, w20
    52b0:	add	x3, x2, x0
    52b4:	ldr	x2, [x2, x0]
    52b8:	ldr	w0, [x3, #8]
    52bc:	cmp	w0, w1
    52c0:	csel	w1, w0, w1, le
    52c4:	add	x0, x2, w0, sxtw #2
    52c8:	add	x1, x2, w1, sxtw #2
    52cc:	bl	de50 <grub_unicode_get_comb_end>
    52d0:	ldr	w1, [x19, #20]
    52d4:	ldr	x2, [x19]
    52d8:	smull	x1, w1, w20
    52dc:	ldr	x1, [x2, x1]
    52e0:	sub	x0, x0, x1
    52e4:	asr	x0, x0, #2
    52e8:	str	w0, [x19, #12]
    52ec:	ldp	x19, x20, [sp, #16]
    52f0:	ldp	x29, x30, [sp], #32
    52f4:	ret
    52f8:	stp	x29, x30, [sp, #-32]!
    52fc:	mov	x29, sp
    5300:	ldr	w2, [x0, #8]
    5304:	str	x19, [sp, #16]
    5308:	mov	x19, x0
    530c:	ldr	w0, [x0, #12]
    5310:	add	w1, w1, w2
    5314:	cmp	w0, w1
    5318:	b.lt	532c <grub_show_menu+0x106c>  // b.tstop
    531c:	mov	w0, #0x1                   	// #1
    5320:	ldr	x19, [sp, #16]
    5324:	ldp	x29, x30, [sp], #32
    5328:	ret
    532c:	lsl	w1, w1, #1
    5330:	str	w1, [x19, #12]
    5334:	ldr	x0, [x19]
    5338:	add	w2, w1, #0x1
    533c:	sbfiz	x1, x2, #2, #32
    5340:	bl	0 <grub_realloc>
    5344:	str	x0, [x19]
    5348:	cmp	x0, #0x0
    534c:	cset	w0, ne  // ne = any
    5350:	ldr	x19, [sp, #16]
    5354:	ldp	x29, x30, [sp], #32
    5358:	ret
    535c:	nop
    5360:	stp	x29, x30, [sp, #-64]!
    5364:	adrp	x2, 0 <grub_normal_free_menu-0x268>
    5368:	mov	x29, sp
    536c:	stp	x19, x20, [sp, #16]
    5370:	ldr	x19, [x2]
    5374:	stp	x21, x22, [sp, #32]
    5378:	mov	x21, x0
    537c:	mov	x20, x19
    5380:	str	x23, [sp, #48]
    5384:	str	w1, [x20], #8
    5388:	ldp	x22, x23, [x20, #8]
    538c:	bl	0 <grub_strlen>
    5390:	add	x22, x22, #0x2
    5394:	add	x0, x22, w0, sxtw
    5398:	cmp	x23, x0
    539c:	b.cc	53f4 <grub_show_menu+0x1134>  // b.lo, b.ul, b.last
    53a0:	ldr	x2, [x20, #8]
    53a4:	ldr	x1, [x19, #8]
    53a8:	add	x0, x1, x2
    53ac:	cbnz	x2, 53e0 <grub_show_menu+0x1120>
    53b0:	mov	x1, x21
    53b4:	bl	0 <grub_strcpy>
    53b8:	mov	x0, x21
    53bc:	bl	0 <grub_strlen>
    53c0:	ldr	x1, [x19, #16]
    53c4:	add	x1, x1, x0
    53c8:	str	x1, [x19, #16]
    53cc:	ldp	x19, x20, [sp, #16]
    53d0:	ldp	x21, x22, [sp, #32]
    53d4:	ldr	x23, [sp, #48]
    53d8:	ldp	x29, x30, [sp], #64
    53dc:	ret
    53e0:	add	x2, x2, #0x1
    53e4:	mov	w1, #0x20                  	// #32
    53e8:	strb	w1, [x0], #1
    53ec:	str	x2, [x19, #16]
    53f0:	b	53b0 <grub_show_menu+0x10f0>
    53f4:	ldr	x22, [x20, #8]
    53f8:	mov	x0, x21
    53fc:	bl	0 <grub_strlen>
    5400:	add	x22, x22, #0x50
    5404:	add	x22, x22, x0
    5408:	ldr	x0, [x19, #8]
    540c:	mov	x1, x22
    5410:	bl	0 <grub_realloc>
    5414:	mov	x1, x0
    5418:	cbz	x0, 5438 <grub_show_menu+0x1178>
    541c:	ldr	x2, [x20, #8]
    5420:	str	x1, [x19, #8]
    5424:	str	x22, [x20, #16]
    5428:	add	x0, x0, x2
    542c:	strb	wzr, [x1, x2]
    5430:	cbz	x2, 53b0 <grub_show_menu+0x10f0>
    5434:	b	53e0 <grub_show_menu+0x1120>
    5438:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    543c:	ldr	x0, [x0]
    5440:	str	wzr, [x0]
    5444:	b	53cc <grub_show_menu+0x110c>
	...
    5458:	stp	x29, x30, [sp, #-32]!
    545c:	mov	x29, sp
    5460:	stp	x19, x20, [sp, #16]
    5464:	mov	x19, x1
    5468:	mov	x20, x0
    546c:	mov	x1, #0x5000000000          	// #343597383680
    5470:	mov	x0, #0x144                 	// #324
    5474:	str	x1, [x19, #8]
    5478:	bl	0 <grub_malloc>
    547c:	ldr	w1, [x20]
    5480:	str	x0, [x19]
    5484:	lsl	x0, x1, #3
    5488:	bl	0 <grub_zalloc>
    548c:	str	x0, [x19, #16]
    5490:	ldr	x2, [x19]
    5494:	cmp	x0, #0x0
    5498:	mov	w0, #0x1                   	// #1
    549c:	ccmp	x2, #0x0, #0x4, ne  // ne = any
    54a0:	b.eq	54b0 <grub_show_menu+0x11f0>  // b.none
    54a4:	ldp	x19, x20, [sp, #16]
    54a8:	ldp	x29, x30, [sp], #32
    54ac:	ret
    54b0:	mov	x0, x2
    54b4:	bl	0 <grub_free>
    54b8:	ldr	x0, [x19, #16]
    54bc:	bl	0 <grub_free>
    54c0:	mov	w0, #0x0                   	// #0
    54c4:	ldp	x19, x20, [sp, #16]
    54c8:	ldp	x29, x30, [sp], #32
    54cc:	ret
    54d0:	sub	sp, sp, #0x90
    54d4:	stp	x29, x30, [sp, #16]
    54d8:	add	x29, sp, #0x10
    54dc:	stp	x19, x20, [sp, #32]
    54e0:	mov	x20, x0
    54e4:	ldr	w0, [x0, #20]
    54e8:	stp	x21, x22, [sp, #48]
    54ec:	mov	w22, w2
    54f0:	cmp	w0, #0x0
    54f4:	stp	x23, x24, [sp, #64]
    54f8:	stp	x27, x28, [sp, #96]
    54fc:	mov	x28, x1
    5500:	ldr	w27, [x1, #8]
    5504:	str	w5, [sp, #124]
    5508:	stp	w3, w4, [sp, #132]
    550c:	ldr	x19, [x20]
    5510:	b.le	5560 <grub_show_menu+0x12a0>
    5514:	mov	w24, #0x0                   	// #0
    5518:	ldr	x0, [x19]
    551c:	add	w24, w24, #0x1
    5520:	ldr	x2, [x28]
    5524:	add	x19, x19, #0x18
    5528:	ldursw	x1, [x19, #-16]
    552c:	add	x1, x0, x1, lsl #2
    5530:	bl	82b8 <grub_getstringwidth>
    5534:	mov	w1, #0x1                   	// #1
    5538:	cbz	x0, 554c <grub_show_menu+0x128c>
    553c:	ldr	w2, [x28, #24]
    5540:	sub	x1, x2, #0x1
    5544:	add	x1, x1, x0
    5548:	udiv	x1, x1, x2
    554c:	ldr	w0, [x20, #20]
    5550:	add	w27, w27, w1
    5554:	cmp	w24, w0
    5558:	b.lt	5518 <grub_show_menu+0x1258>  // b.tstop
    555c:	ldr	x19, [x20]
    5560:	mov	w1, #0x18                  	// #24
    5564:	ldr	x2, [x28]
    5568:	smull	x0, w0, w1
    556c:	ldrsw	x1, [x20, #12]
    5570:	add	x24, x19, x0
    5574:	ldr	x0, [x19, x0]
    5578:	add	x1, x0, x1, lsl #2
    557c:	bl	82b8 <grub_getstringwidth>
    5580:	ldr	w1, [x28, #24]
    5584:	udiv	x19, x0, x1
    5588:	msub	x1, x19, x1, x0
    558c:	add	w27, w27, w19
    5590:	cmp	x1, #0x0
    5594:	ccmp	x0, #0x0, #0x4, eq  // eq = none
    5598:	b.ne	5aec <grub_show_menu+0x182c>  // b.any
    559c:	ldr	x2, [x28]
    55a0:	ldr	x3, [x2, #96]
    55a4:	tbnz	w27, #31, 57b4 <grub_show_menu+0x14f4>
    55a8:	ldr	w0, [x28, #12]
    55ac:	cmp	w27, w0
    55b0:	b.lt	5770 <grub_show_menu+0x14b0>  // b.tstop
    55b4:	sub	w19, w0, #0x1
    55b8:	sub	w27, w19, w27
    55bc:	ldr	w19, [x28, #8]
    55c0:	add	w19, w27, w19
    55c4:	str	w19, [x28, #8]
    55c8:	cbz	x3, 57c8 <grub_show_menu+0x1508>
    55cc:	mov	w0, #0x1                   	// #1
    55d0:	mov	w22, #0x0                   	// #0
    55d4:	stp	w0, w0, [sp, #132]
    55d8:	mov	w0, #0x2                   	// #2
    55dc:	str	w0, [sp, #124]
    55e0:	mov	x0, x2
    55e4:	mov	w1, #0x0                   	// #0
    55e8:	blr	x3
    55ec:	ldr	x2, [x28]
    55f0:	ldr	w0, [sp, #124]
    55f4:	cbnz	w0, 57e4 <grub_show_menu+0x1524>
    55f8:	ldr	w4, [x20, #20]
    55fc:	mov	w3, #0x18                  	// #24
    5600:	ldr	x0, [x20]
    5604:	mov	x5, #0x6db7                	// #28087
    5608:	ldr	x1, [x20, #40]
    560c:	movk	x5, #0xb6db, lsl #16
    5610:	smaddl	x3, w4, w3, x0
    5614:	movk	x5, #0xdb6d, lsl #32
    5618:	sub	x1, x28, x1
    561c:	movk	x5, #0x6db6, lsl #48
    5620:	asr	x1, x1, #3
    5624:	ldr	x3, [x3, #16]
    5628:	mul	x1, x1, x5
    562c:	ldr	x3, [x3, x1, lsl #3]
    5630:	cbz	x3, 572c <grub_show_menu+0x146c>
    5634:	ldrsw	x19, [x20, #12]
    5638:	add	x19, x3, x19, lsl #2
    563c:	cmp	x3, x19
    5640:	b.ls	5654 <grub_show_menu+0x1394>  // b.plast
    5644:	b	565c <grub_show_menu+0x139c>
    5648:	sub	x19, x19, #0x4
    564c:	cmp	x3, x19
    5650:	b.hi	565c <grub_show_menu+0x139c>  // b.pmore
    5654:	ldrb	w1, [x19]
    5658:	tbz	w1, #0, 5648 <grub_show_menu+0x1388>
    565c:	ldr	w23, [x28, #8]
    5660:	cmp	w4, #0x0
    5664:	b.le	56ec <grub_show_menu+0x142c>
    5668:	mov	x21, #0x0                   	// #0
    566c:	mov	w22, #0x0                   	// #0
    5670:	add	x1, x0, x21
    5674:	add	w22, w22, #0x1
    5678:	ldr	x0, [x0, x21]
    567c:	add	x21, x21, #0x18
    5680:	ldrsw	x1, [x1, #8]
    5684:	add	x1, x0, x1, lsl #2
    5688:	bl	82b8 <grub_getstringwidth>
    568c:	mov	w1, #0x1                   	// #1
    5690:	cbz	x0, 56a4 <grub_show_menu+0x13e4>
    5694:	ldr	w2, [x28, #24]
    5698:	sub	x1, x2, #0x1
    569c:	add	x0, x1, x0
    56a0:	udiv	x1, x0, x2
    56a4:	ldr	w3, [x20, #20]
    56a8:	add	w23, w23, w1
    56ac:	ldr	x0, [x20]
    56b0:	cmp	w22, w3
    56b4:	ldr	x2, [x28]
    56b8:	b.lt	5670 <grub_show_menu+0x13b0>  // b.tstop
    56bc:	ldr	x1, [x20, #40]
    56c0:	mov	w5, #0x18                  	// #24
    56c4:	mov	x4, #0x6db7                	// #28087
    56c8:	sub	x1, x28, x1
    56cc:	smaddl	x0, w3, w5, x0
    56d0:	movk	x4, #0xb6db, lsl #16
    56d4:	asr	x1, x1, #3
    56d8:	movk	x4, #0xdb6d, lsl #32
    56dc:	movk	x4, #0x6db6, lsl #48
    56e0:	ldr	x3, [x0, #16]
    56e4:	mul	x0, x1, x4
    56e8:	ldr	x3, [x3, x0, lsl #3]
    56ec:	cmp	x19, x3
    56f0:	ldrh	w4, [x28, #20]
    56f4:	and	w23, w23, #0xffff
    56f8:	ldrh	w3, [x28, #16]
    56fc:	ldr	x5, [x2, #72]
    5700:	b.cc	5778 <grub_show_menu+0x14b8>  // b.lo, b.ul, b.last
    5704:	ldrh	w6, [x19, #2]
    5708:	mov	x0, x2
    570c:	ldrh	w1, [x19]
    5710:	add	w3, w3, w6
    5714:	add	w23, w23, w3
    5718:	ubfx	x1, x1, #1, #15
    571c:	add	w1, w4, w1
    5720:	bfi	w1, w23, #16, #16
    5724:	blr	x5
    5728:	ldr	x2, [x28]
    572c:	ldr	x3, [x2, #96]
    5730:	cbz	x3, 5744 <grub_show_menu+0x1484>
    5734:	mov	x0, x2
    5738:	mov	w1, #0x1                   	// #1
    573c:	blr	x3
    5740:	ldr	x2, [x28]
    5744:	ldr	x1, [x2, #104]
    5748:	cbz	x1, 5798 <grub_show_menu+0x14d8>
    574c:	ldp	x29, x30, [sp, #16]
    5750:	mov	x0, x2
    5754:	ldp	x19, x20, [sp, #32]
    5758:	mov	x16, x1
    575c:	ldp	x21, x22, [sp, #48]
    5760:	ldp	x23, x24, [sp, #64]
    5764:	ldp	x27, x28, [sp, #96]
    5768:	add	sp, sp, #0x90
    576c:	br	x16
    5770:	cbnz	x3, 55e0 <grub_show_menu+0x1320>
    5774:	b	55f0 <grub_show_menu+0x1330>
    5778:	mov	w1, #0x0                   	// #0
    577c:	add	w23, w3, w23
    5780:	bfxil	w1, w4, #0, #16
    5784:	mov	x0, x2
    5788:	bfi	w1, w23, #16, #16
    578c:	blr	x5
    5790:	ldr	x2, [x28]
    5794:	b	572c <grub_show_menu+0x146c>
    5798:	ldp	x29, x30, [sp, #16]
    579c:	ldp	x19, x20, [sp, #32]
    57a0:	ldp	x21, x22, [sp, #48]
    57a4:	ldp	x23, x24, [sp, #64]
    57a8:	ldp	x27, x28, [sp, #96]
    57ac:	add	sp, sp, #0x90
    57b0:	ret
    57b4:	ldr	w19, [x28, #8]
    57b8:	neg	w27, w27
    57bc:	add	w19, w27, w19
    57c0:	str	w19, [x28, #8]
    57c4:	cbnz	x3, 55cc <grub_show_menu+0x130c>
    57c8:	mov	w0, #0x1                   	// #1
    57cc:	mov	w22, #0x0                   	// #0
    57d0:	stp	x25, x26, [sp, #80]
    57d4:	stp	w0, w0, [sp, #132]
    57d8:	mov	w0, #0x2                   	// #2
    57dc:	str	w0, [sp, #124]
    57e0:	b	57ec <grub_show_menu+0x152c>
    57e4:	ldr	w19, [x28, #8]
    57e8:	stp	x25, x26, [sp, #80]
    57ec:	mov	w26, #0x0                   	// #0
    57f0:	ldr	x27, [x20]
    57f4:	b	5808 <grub_show_menu+0x1548>
    57f8:	ldr	x2, [x28]
    57fc:	add	w26, w26, #0x1
    5800:	add	x27, x27, #0x18
    5804:	mov	w19, w0
    5808:	ldr	x0, [x27]
    580c:	ldrsw	x1, [x27, #8]
    5810:	add	x1, x0, x1, lsl #2
    5814:	bl	82b8 <grub_getstringwidth>
    5818:	mov	w1, #0x1                   	// #1
    581c:	cbz	x0, 5830 <grub_show_menu+0x1570>
    5820:	ldr	w2, [x28, #24]
    5824:	sub	x1, x2, #0x1
    5828:	add	x0, x1, x0
    582c:	udiv	x1, x0, x2
    5830:	add	w0, w19, w1
    5834:	cmp	w0, #0x0
    5838:	b.le	57f8 <grub_show_menu+0x1538>
    583c:	cmp	w26, #0x0
    5840:	ldr	w0, [x20, #8]
    5844:	cset	w1, gt
    5848:	orr	w1, w1, w19, lsr #31
    584c:	str	w1, [sp, #140]
    5850:	ldr	x1, [x20]
    5854:	mov	w2, #0x18                  	// #24
    5858:	smaddl	x0, w0, w2, x1
    585c:	cmp	x27, x0
    5860:	b.cs	59c0 <grub_show_menu+0x1700>  // b.hs, b.nlast
    5864:	ldr	x10, [x20, #40]
    5868:	mov	x0, #0x6db7                	// #28087
    586c:	movk	x0, #0xb6db, lsl #16
    5870:	sub	x10, x28, x10
    5874:	movk	x0, #0xdb6d, lsl #32
    5878:	movk	x0, #0x6db6, lsl #48
    587c:	asr	x10, x10, #3
    5880:	ldr	x23, [x27, #16]
    5884:	mul	x24, x10, x0
    5888:	ldr	x0, [x23, x24, lsl #3]
    588c:	cbz	x0, 5ad4 <grub_show_menu+0x1814>
    5890:	cmp	w26, w22
    5894:	b.eq	58c0 <grub_show_menu+0x1600>  // b.none
    5898:	ldr	w0, [x20, #20]
    589c:	mov	w2, #0x18                  	// #24
    58a0:	ldr	x1, [x20]
    58a4:	smaddl	x0, w0, w2, x1
    58a8:	cmp	x27, x0
    58ac:	b.eq	58c0 <grub_show_menu+0x1600>  // b.none
    58b0:	ldr	w0, [sp, #124]
    58b4:	cmp	w26, w22
    58b8:	ccmp	w0, #0x2, #0x0, gt
    58bc:	b.ne	5928 <grub_show_menu+0x1668>  // b.any
    58c0:	ldr	x0, [x28]
    58c4:	cmp	w19, #0x0
    58c8:	ldp	w1, w3, [x28, #16]
    58cc:	csel	w6, w19, wzr, ge  // ge = tcont
    58d0:	ldr	x2, [x0, #72]
    58d4:	add	w1, w1, w6
    58d8:	bfxil	w21, w3, #0, #16
    58dc:	str	w6, [sp, #128]
    58e0:	bfi	w21, w1, #16, #16
    58e4:	mov	w1, w21
    58e8:	blr	x2
    58ec:	ldr	x10, [x23, x24, lsl #3]
    58f0:	cmp	w19, #0x0
    58f4:	ldrsw	x1, [x27, #8]
    58f8:	csneg	w5, wzr, w19, ge  // ge = tcont
    58fc:	ldr	w2, [x28, #20]
    5900:	mov	w7, #0x5c                  	// #92
    5904:	ldr	w3, [x28, #40]
    5908:	ldr	x0, [x27]
    590c:	ldr	x4, [x28]
    5910:	str	x10, [sp]
    5914:	ldr	w6, [sp, #128]
    5918:	add	x1, x0, x1, lsl #2
    591c:	ldr	w10, [x28, #12]
    5920:	sub	w6, w10, w6
    5924:	bl	aee0 <grub_print_ucs4_menu>
    5928:	ldr	x0, [x27]
    592c:	ldr	x2, [x28]
    5930:	ldrsw	x1, [x27, #8]
    5934:	add	x1, x0, x1, lsl #2
    5938:	bl	82b8 <grub_getstringwidth>
    593c:	mov	w1, #0x1                   	// #1
    5940:	cbz	x0, 5954 <grub_show_menu+0x1694>
    5944:	ldr	w2, [x28, #24]
    5948:	sub	x1, x2, #0x1
    594c:	add	x0, x1, x0
    5950:	udiv	x1, x0, x2
    5954:	ldr	w2, [x28, #12]
    5958:	add	w19, w19, w1
    595c:	ldr	w0, [x20, #8]
    5960:	add	w26, w26, #0x1
    5964:	add	x27, x27, #0x18
    5968:	cmp	w19, w2
    596c:	b.lt	59a0 <grub_show_menu+0x16e0>  // b.tstop
    5970:	cmp	w0, w26
    5974:	b.le	5a40 <grub_show_menu+0x1780>
    5978:	mov	w19, #0x1                   	// #1
    597c:	cmp	w2, #0x1
    5980:	ldr	w0, [sp, #132]
    5984:	ldr	x2, [x28]
    5988:	b.eq	59d8 <grub_show_menu+0x1718>  // b.none
    598c:	cbnz	w0, 5b5c <grub_show_menu+0x189c>
    5990:	ldr	w0, [sp, #136]
    5994:	cbnz	w0, 5b04 <grub_show_menu+0x1844>
    5998:	ldp	x25, x26, [sp, #80]
    599c:	b	55f8 <grub_show_menu+0x1338>
    59a0:	ldr	w1, [sp, #124]
    59a4:	cmp	w1, #0x2
    59a8:	b.eq	5a4c <grub_show_menu+0x178c>  // b.none
    59ac:	ldr	x1, [x20]
    59b0:	mov	w2, #0x18                  	// #24
    59b4:	smaddl	x0, w0, w2, x1
    59b8:	cmp	x27, x0
    59bc:	b.cc	5864 <grub_show_menu+0x15a4>  // b.lo, b.ul, b.last
    59c0:	ldr	w2, [x28, #12]
    59c4:	mov	w19, #0x0                   	// #0
    59c8:	ldr	w0, [sp, #132]
    59cc:	cmp	w2, #0x1
    59d0:	ldr	x2, [x28]
    59d4:	b.ne	598c <grub_show_menu+0x16cc>  // b.any
    59d8:	ldr	w1, [sp, #136]
    59dc:	orr	w26, w0, w1
    59e0:	cbz	w26, 5998 <grub_show_menu+0x16d8>
    59e4:	ldp	w3, w5, [x28, #20]
    59e8:	mov	x0, x2
    59ec:	ldr	w4, [x28, #36]
    59f0:	mov	w1, #0x0                   	// #0
    59f4:	add	w3, w3, w5
    59f8:	ldrh	w5, [x28, #16]
    59fc:	add	w4, w4, #0x1
    5a00:	add	w3, w3, w4
    5a04:	ldr	x2, [x2, #72]
    5a08:	bfxil	w1, w3, #0, #16
    5a0c:	bfi	w1, w5, #16, #16
    5a10:	blr	x2
    5a14:	ldr	w0, [sp, #140]
    5a18:	ldr	x1, [x28]
    5a1c:	tst	w0, w19
    5a20:	b.ne	5bcc <grub_show_menu+0x190c>  // b.any
    5a24:	ldr	w0, [sp, #140]
    5a28:	cbz	w0, 5b44 <grub_show_menu+0x1884>
    5a2c:	mov	w0, #0x2191                	// #8593
    5a30:	bl	9f48 <grub_putcode>
    5a34:	ldr	x2, [x28]
    5a38:	ldp	x25, x26, [sp, #80]
    5a3c:	b	55f8 <grub_show_menu+0x1338>
    5a40:	ldr	w1, [sp, #124]
    5a44:	cmp	w1, #0x2
    5a48:	b.ne	5abc <grub_show_menu+0x17fc>  // b.any
    5a4c:	cmp	w0, w26
    5a50:	b.ne	5ac4 <grub_show_menu+0x1804>  // b.any
    5a54:	cmp	w19, w2
    5a58:	b.ge	5abc <grub_show_menu+0x17fc>  // b.tcont
    5a5c:	nop
    5a60:	ldr	x0, [x28]
    5a64:	mov	w21, #0x0                   	// #0
    5a68:	ldp	w1, w3, [x28, #16]
    5a6c:	ldr	x2, [x0, #72]
    5a70:	add	w1, w1, w19
    5a74:	bfxil	w25, w3, #0, #16
    5a78:	bfi	w25, w1, #16, #16
    5a7c:	mov	w1, w25
    5a80:	blr	x2
    5a84:	ldr	w0, [x28, #24]
    5a88:	tbnz	w0, #31, 5aac <grub_show_menu+0x17ec>
    5a8c:	nop
    5a90:	ldr	x1, [x28]
    5a94:	mov	w0, #0x20                  	// #32
    5a98:	add	w21, w21, #0x1
    5a9c:	bl	9f48 <grub_putcode>
    5aa0:	ldr	w0, [x28, #24]
    5aa4:	cmp	w21, w0
    5aa8:	b.le	5a90 <grub_show_menu+0x17d0>
    5aac:	ldr	w2, [x28, #12]
    5ab0:	add	w19, w19, #0x1
    5ab4:	cmp	w19, w2
    5ab8:	b.lt	5a60 <grub_show_menu+0x17a0>  // b.tstop
    5abc:	mov	w19, #0x0                   	// #0
    5ac0:	b	597c <grub_show_menu+0x16bc>
    5ac4:	cmp	w19, w2
    5ac8:	b.lt	5850 <grub_show_menu+0x1590>  // b.tstop
    5acc:	mov	w19, #0x0                   	// #0
    5ad0:	b	597c <grub_show_menu+0x16bc>
    5ad4:	ldr	w0, [x27, #8]
    5ad8:	add	w0, w0, #0x1
    5adc:	sbfiz	x0, x0, #2, #32
    5ae0:	bl	0 <grub_zalloc>
    5ae4:	str	x0, [x23, x24, lsl #3]
    5ae8:	b	5890 <grub_show_menu+0x15d0>
    5aec:	ldr	w0, [x24, #8]
    5af0:	ldr	w1, [x20, #12]
    5af4:	cmp	w1, w0
    5af8:	cset	w0, eq  // eq = none
    5afc:	sub	w27, w27, w0
    5b00:	b	559c <grub_show_menu+0x12dc>
    5b04:	ldp	w4, w3, [x28, #20]
    5b08:	mov	x0, x2
    5b0c:	ldr	w6, [x28, #12]
    5b10:	mov	w1, #0x0                   	// #0
    5b14:	ldr	w5, [x28, #36]
    5b18:	add	w4, w4, w3
    5b1c:	ldr	w3, [x28, #16]
    5b20:	add	w5, w5, #0x1
    5b24:	add	w3, w3, w6
    5b28:	add	w4, w4, w5
    5b2c:	ldr	x2, [x2, #72]
    5b30:	sub	w3, w3, #0x1
    5b34:	bfxil	w1, w4, #0, #16
    5b38:	bfi	w1, w3, #16, #16
    5b3c:	blr	x2
    5b40:	ldr	x1, [x28]
    5b44:	cbz	w19, 5ba8 <grub_show_menu+0x18e8>
    5b48:	mov	w0, #0x2193                	// #8595
    5b4c:	bl	9f48 <grub_putcode>
    5b50:	ldr	x2, [x28]
    5b54:	ldp	x25, x26, [sp, #80]
    5b58:	b	55f8 <grub_show_menu+0x1338>
    5b5c:	ldp	w3, w5, [x28, #20]
    5b60:	mov	x0, x2
    5b64:	ldr	w4, [x28, #36]
    5b68:	mov	w1, #0x0                   	// #0
    5b6c:	add	w3, w3, w5
    5b70:	ldrh	w5, [x28, #16]
    5b74:	add	w4, w4, #0x1
    5b78:	add	w3, w3, w4
    5b7c:	ldr	x2, [x2, #72]
    5b80:	bfxil	w1, w3, #0, #16
    5b84:	bfi	w1, w5, #16, #16
    5b88:	blr	x2
    5b8c:	ldr	w0, [sp, #140]
    5b90:	ldr	x1, [x28]
    5b94:	cbz	w0, 5bbc <grub_show_menu+0x18fc>
    5b98:	mov	w0, #0x2191                	// #8593
    5b9c:	bl	9f48 <grub_putcode>
    5ba0:	ldr	x2, [x28]
    5ba4:	b	5990 <grub_show_menu+0x16d0>
    5ba8:	mov	w0, #0x20                  	// #32
    5bac:	bl	9f48 <grub_putcode>
    5bb0:	ldr	x2, [x28]
    5bb4:	ldp	x25, x26, [sp, #80]
    5bb8:	b	55f8 <grub_show_menu+0x1338>
    5bbc:	mov	w0, #0x20                  	// #32
    5bc0:	bl	9f48 <grub_putcode>
    5bc4:	ldr	x2, [x28]
    5bc8:	b	5990 <grub_show_menu+0x16d0>
    5bcc:	mov	w0, #0x2195                	// #8597
    5bd0:	bl	9f48 <grub_putcode>
    5bd4:	ldr	x2, [x28]
    5bd8:	ldp	x25, x26, [sp, #80]
    5bdc:	b	55f8 <grub_show_menu+0x1338>
    5be0:	stp	x29, x30, [sp, #-96]!
    5be4:	mov	x29, sp
    5be8:	stp	x19, x20, [sp, #16]
    5bec:	mov	x19, x0
    5bf0:	ldr	w0, [x0, #12]
    5bf4:	stp	x21, x22, [sp, #32]
    5bf8:	mov	w21, w1
    5bfc:	ldr	w3, [x19, #20]
    5c00:	cmp	w0, #0x0
    5c04:	b.gt	5c8c <grub_show_menu+0x19cc>
    5c08:	cmp	w3, #0x0
    5c0c:	b.le	5c2c <grub_show_menu+0x196c>
    5c10:	ldr	x0, [x19]
    5c14:	sub	w3, w3, #0x1
    5c18:	mov	w1, #0x18                  	// #24
    5c1c:	str	w3, [x19, #20]
    5c20:	smaddl	x3, w3, w1, x0
    5c24:	ldr	w0, [x3, #8]
    5c28:	str	w0, [x19, #12]
    5c2c:	str	w0, [x19, #16]
    5c30:	cbz	w21, 5c78 <grub_show_menu+0x19b8>
    5c34:	ldr	w0, [x19, #48]
    5c38:	ldr	w21, [x19, #8]
    5c3c:	cbz	w0, 5c78 <grub_show_menu+0x19b8>
    5c40:	mov	w20, #0x0                   	// #0
    5c44:	mov	w22, #0x38                  	// #56
    5c48:	ldr	x1, [x19, #40]
    5c4c:	mov	x0, x19
    5c50:	mov	w2, w21
    5c54:	mov	w5, #0x0                   	// #0
    5c58:	mov	w4, #0x0                   	// #0
    5c5c:	mov	w3, #0x0                   	// #0
    5c60:	umaddl	x1, w20, w22, x1
    5c64:	add	w20, w20, #0x1
    5c68:	bl	54d0 <grub_show_menu+0x1210>
    5c6c:	ldr	w0, [x19, #48]
    5c70:	cmp	w20, w0
    5c74:	b.cc	5c48 <grub_show_menu+0x1988>  // b.lo, b.ul, b.last
    5c78:	mov	w0, #0x1                   	// #1
    5c7c:	ldp	x19, x20, [sp, #16]
    5c80:	ldp	x21, x22, [sp, #32]
    5c84:	ldp	x29, x30, [sp], #96
    5c88:	ret
    5c8c:	ldr	x22, [x19]
    5c90:	str	x23, [sp, #48]
    5c94:	mov	w23, #0x18                  	// #24
    5c98:	sub	w1, w0, #0x1
    5c9c:	smull	x20, w3, w23
    5ca0:	ldr	x0, [x22, x20]
    5ca4:	str	w1, [x19, #12]
    5ca8:	add	x1, x0, w1, sxtw #2
    5cac:	bl	ddc8 <grub_unicode_get_comb_start>
    5cb0:	ldr	w1, [x19, #20]
    5cb4:	add	x2, sp, #0x40
    5cb8:	ldr	x3, [x19]
    5cbc:	ldr	x5, [x22, x20]
    5cc0:	smull	x1, w1, w23
    5cc4:	add	x4, x3, x1
    5cc8:	sub	x0, x0, x5
    5ccc:	ldr	x3, [x3, x1]
    5cd0:	asr	x0, x0, #2
    5cd4:	ldr	w1, [x4, #8]
    5cd8:	str	w0, [x19, #12]
    5cdc:	sub	w1, w1, w0
    5ce0:	add	x0, x3, w0, sxtw #2
    5ce4:	sxtw	x1, w1
    5ce8:	bl	c228 <grub_unicode_aglomerate_comb>
    5cec:	ldr	x0, [x22, x20]
    5cf0:	ldrsw	x1, [x19, #12]
    5cf4:	add	x1, x0, x1, lsl #2
    5cf8:	bl	ddc8 <grub_unicode_get_comb_start>
    5cfc:	ldr	x2, [x22, x20]
    5d00:	ldrh	w1, [sp, #70]
    5d04:	sub	x0, x0, x2
    5d08:	asr	x0, x0, #2
    5d0c:	str	w0, [x19, #12]
    5d10:	ubfx	x1, x1, #3, #8
    5d14:	cmp	w1, #0x2
    5d18:	b.hi	5d2c <grub_show_menu+0x1a6c>  // b.pmore
    5d1c:	ldr	x23, [sp, #48]
    5d20:	str	w0, [x19, #16]
    5d24:	cbz	w21, 5c78 <grub_show_menu+0x19b8>
    5d28:	b	5c34 <grub_show_menu+0x1974>
    5d2c:	ldr	x0, [sp, #88]
    5d30:	bl	0 <grub_free>
    5d34:	ldr	w0, [x19, #12]
    5d38:	ldr	x23, [sp, #48]
    5d3c:	str	w0, [x19, #16]
    5d40:	cbz	w21, 5c78 <grub_show_menu+0x19b8>
    5d44:	b	5c34 <grub_show_menu+0x1974>
    5d48:	stp	x29, x30, [sp, #-112]!
    5d4c:	mov	x29, sp
    5d50:	stp	x19, x20, [sp, #16]
    5d54:	mov	x19, x1
    5d58:	ldr	w1, [x0, #48]
    5d5c:	stp	x25, x26, [sp, #64]
    5d60:	ldr	w26, [x0, #8]
    5d64:	stp	x27, x28, [sp, #80]
    5d68:	mov	x28, x0
    5d6c:	str	w2, [sp, #108]
    5d70:	cbz	w1, 5da0 <grub_show_menu+0x1ae0>
    5d74:	ldr	x0, [x0, #40]
    5d78:	sub	w1, w1, #0x1
    5d7c:	mov	w3, #0x38                  	// #56
    5d80:	add	x2, x0, #0x68
    5d84:	add	x0, x0, #0x30
    5d88:	umaddl	x1, w1, w3, x2
    5d8c:	nop
    5d90:	stp	wzr, wzr, [x0]
    5d94:	add	x0, x0, #0x38
    5d98:	cmp	x1, x0
    5d9c:	b.ne	5d90 <grub_show_menu+0x1ad0>  // b.any
    5da0:	ldrb	w0, [x19]
    5da4:	cbz	w0, 5fe4 <grub_show_menu+0x1d24>
    5da8:	mov	x25, #0x1                   	// #1
    5dac:	stp	x21, x22, [sp, #32]
    5db0:	movk	x25, #0x2, lsl #32
    5db4:	stp	x23, x24, [sp, #48]
    5db8:	mov	w24, #0x1                   	// #1
    5dbc:	nop
    5dc0:	cmp	w0, #0xa
    5dc4:	b.eq	6048 <grub_show_menu+0x1d88>  // b.none
    5dc8:	mov	x0, x19
    5dcc:	mov	w1, #0xa                   	// #10
    5dd0:	bl	0 <grub_strchr>
    5dd4:	str	x0, [sp, #96]
    5dd8:	cbz	x0, 6184 <grub_show_menu+0x1ec4>
    5ddc:	ldr	w23, [x28, #20]
    5de0:	mov	w1, #0x18                  	// #24
    5de4:	ldr	x0, [sp, #96]
    5de8:	ldr	x27, [x28]
    5dec:	smull	x23, w23, w1
    5df0:	sub	x20, x0, x19
    5df4:	add	x21, x27, x23
    5df8:	lsl	x0, x20, #2
    5dfc:	bl	0 <grub_malloc>
    5e00:	mov	x22, x0
    5e04:	cbz	x0, 61d0 <grub_show_menu+0x1f10>
    5e08:	mov	x2, x19
    5e0c:	mov	x3, x20
    5e10:	mov	x4, #0x0                   	// #0
    5e14:	mov	x1, x20
    5e18:	bl	beb0 <grub_utf8_to_ucs4>
    5e1c:	mov	x20, x0
    5e20:	mov	w1, w20
    5e24:	mov	x0, x21
    5e28:	bl	52f8 <grub_show_menu+0x1038>
    5e2c:	mov	w19, w0
    5e30:	cbz	w0, 6234 <grub_show_menu+0x1f74>
    5e34:	ldr	w1, [x28, #12]
    5e38:	sxtw	x19, w20
    5e3c:	ldr	w2, [x21, #8]
    5e40:	ldr	x3, [x27, x23]
    5e44:	add	x0, x19, w1, sxtw
    5e48:	sub	w2, w2, w1
    5e4c:	add	x0, x3, x0, lsl #2
    5e50:	add	x1, x3, w1, sxtw #2
    5e54:	sbfiz	x2, x2, #2, #32
    5e58:	bl	0 <grub_memmove>
    5e5c:	ldrsw	x3, [x28, #12]
    5e60:	lsl	x2, x19, #2
    5e64:	ldr	x0, [x27, x23]
    5e68:	mov	x1, x22
    5e6c:	add	x0, x0, x3, lsl #2
    5e70:	bl	0 <grub_memmove>
    5e74:	mov	x0, x22
    5e78:	bl	0 <grub_free>
    5e7c:	ldr	w0, [x28, #48]
    5e80:	cbz	w0, 61f4 <grub_show_menu+0x1f34>
    5e84:	ldr	x0, [x21, #16]
    5e88:	mov	w19, #0x0                   	// #0
    5e8c:	nop
    5e90:	mov	w22, w19
    5e94:	add	w19, w19, #0x1
    5e98:	ldr	x0, [x0, x22, lsl #3]
    5e9c:	bl	0 <grub_free>
    5ea0:	ldr	x0, [x21, #16]
    5ea4:	ldr	w1, [x28, #48]
    5ea8:	str	xzr, [x0, x22, lsl #3]
    5eac:	cmp	w1, w19
    5eb0:	b.hi	5e90 <grub_show_menu+0x1bd0>  // b.pmore
    5eb4:	cbz	w1, 61f4 <grub_show_menu+0x1f34>
    5eb8:	mov	w22, #0x0                   	// #0
    5ebc:	mov	w19, #0x38                  	// #56
    5ec0:	umull	x2, w22, w19
    5ec4:	ldrsw	x1, [x21, #8]
    5ec8:	ldr	x3, [x28, #40]
    5ecc:	add	w22, w22, #0x1
    5ed0:	ldr	x0, [x21]
    5ed4:	add	x23, x3, x2
    5ed8:	ldr	x2, [x3, x2]
    5edc:	add	x1, x0, x1, lsl #2
    5ee0:	bl	82b8 <grub_getstringwidth>
    5ee4:	sub	x2, x0, #0x1
    5ee8:	mov	w1, #0x1                   	// #1
    5eec:	cbz	x0, 5efc <grub_show_menu+0x1c3c>
    5ef0:	ldr	w1, [x23, #24]
    5ef4:	add	x2, x2, x1
    5ef8:	udiv	x1, x2, x1
    5efc:	ldr	w0, [x28, #48]
    5f00:	str	w1, [x23, #44]
    5f04:	cmp	w0, w22
    5f08:	b.hi	5ec0 <grub_show_menu+0x1c00>  // b.pmore
    5f0c:	ldr	w1, [x21, #8]
    5f10:	ldr	w2, [x28, #20]
    5f14:	add	w1, w1, w20
    5f18:	str	w1, [x21, #8]
    5f1c:	cmp	w26, w2
    5f20:	csel	w26, w26, w2, le
    5f24:	cbz	w0, 5fb8 <grub_show_menu+0x1cf8>
    5f28:	mov	w27, #0x0                   	// #0
    5f2c:	mov	w22, #0x38                  	// #56
    5f30:	ldr	x2, [x28, #40]
    5f34:	b	5f50 <grub_show_menu+0x1c90>
    5f38:	str	x25, [x19, #48]
    5f3c:	ldr	w0, [x28, #48]
    5f40:	add	w27, w27, #0x1
    5f44:	cmp	w0, w27
    5f48:	b.ls	5fb8 <grub_show_menu+0x1cf8>  // b.plast
    5f4c:	ldr	w1, [x21, #8]
    5f50:	umull	x19, w27, w22
    5f54:	ldr	x0, [x21]
    5f58:	add	x23, x2, x19
    5f5c:	ldr	x2, [x2, x19]
    5f60:	add	x1, x0, w1, sxtw #2
    5f64:	bl	82b8 <grub_getstringwidth>
    5f68:	sub	x2, x0, #0x1
    5f6c:	mov	w1, #0x1                   	// #1
    5f70:	cbz	x0, 5f80 <grub_show_menu+0x1cc0>
    5f74:	ldr	w1, [x23, #24]
    5f78:	add	x2, x2, x1
    5f7c:	udiv	x1, x2, x1
    5f80:	ldr	x2, [x28, #40]
    5f84:	add	x19, x2, x19
    5f88:	ldr	w0, [x19, #44]
    5f8c:	cmp	w0, w1
    5f90:	b.ne	5f38 <grub_show_menu+0x1c78>  // b.any
    5f94:	ldr	w0, [x19, #52]
    5f98:	cmp	w0, #0x2
    5f9c:	b.eq	5f3c <grub_show_menu+0x1c7c>  // b.none
    5fa0:	ldr	w0, [x28, #48]
    5fa4:	add	w27, w27, #0x1
    5fa8:	str	w24, [x19, #52]
    5fac:	cmp	w0, w27
    5fb0:	b.hi	5f4c <grub_show_menu+0x1c8c>  // b.pmore
    5fb4:	nop
    5fb8:	ldr	w1, [x28, #12]
    5fbc:	mov	x0, x28
    5fc0:	ldr	x19, [sp, #96]
    5fc4:	add	w1, w1, w20
    5fc8:	bl	5290 <grub_show_menu+0xfd0>
    5fcc:	ldr	w0, [x28, #12]
    5fd0:	str	w0, [x28, #16]
    5fd4:	ldrb	w0, [x19]
    5fd8:	cbnz	w0, 5dc0 <grub_show_menu+0x1b00>
    5fdc:	ldp	x21, x22, [sp, #32]
    5fe0:	ldp	x23, x24, [sp, #48]
    5fe4:	ldr	w0, [sp, #108]
    5fe8:	cbz	w0, 602c <grub_show_menu+0x1d6c>
    5fec:	ldr	w0, [x28, #48]
    5ff0:	cbz	w0, 602c <grub_show_menu+0x1d6c>
    5ff4:	mov	w19, #0x0                   	// #0
    5ff8:	mov	w20, #0x38                  	// #56
    5ffc:	nop
    6000:	ldr	x1, [x28, #40]
    6004:	mov	x0, x28
    6008:	mov	w2, w26
    600c:	mov	w3, #0x0                   	// #0
    6010:	umaddl	x1, w19, w20, x1
    6014:	add	w19, w19, #0x1
    6018:	ldp	w4, w5, [x1, #48]
    601c:	bl	54d0 <grub_show_menu+0x1210>
    6020:	ldr	w0, [x28, #48]
    6024:	cmp	w0, w19
    6028:	b.hi	6000 <grub_show_menu+0x1d40>  // b.pmore
    602c:	mov	w19, #0x1                   	// #1
    6030:	mov	w0, w19
    6034:	ldp	x19, x20, [sp, #16]
    6038:	ldp	x25, x26, [sp, #64]
    603c:	ldp	x27, x28, [sp, #80]
    6040:	ldp	x29, x30, [sp], #112
    6044:	ret
    6048:	ldr	w1, [x28, #8]
    604c:	mov	w20, #0x18                  	// #24
    6050:	ldr	x0, [x28]
    6054:	add	w1, w1, #0x1
    6058:	str	w1, [x28, #8]
    605c:	smull	x1, w1, w20
    6060:	bl	0 <grub_realloc>
    6064:	str	x0, [x28]
    6068:	cbz	x0, 61d0 <grub_show_menu+0x1f10>
    606c:	ldr	w2, [x28, #20]
    6070:	ldr	w4, [x28, #8]
    6074:	sxtw	x1, w2
    6078:	sub	w3, w4, #0x2
    607c:	add	x1, x1, #0x1
    6080:	cmp	w2, w3
    6084:	add	x1, x1, x1, lsl #1
    6088:	lsl	x3, x1, #3
    608c:	add	x1, x0, x3
    6090:	b.lt	6198 <grub_show_menu+0x1ed8>  // b.tstop
    6094:	add	x0, x28, #0x30
    6098:	bl	5458 <grub_show_menu+0x1198>
    609c:	cbz	w0, 61d0 <grub_show_menu+0x1f10>
    60a0:	ldr	w20, [x28, #20]
    60a4:	mov	w0, #0x18                  	// #24
    60a8:	ldr	x27, [x28]
    60ac:	ldr	w1, [x28, #12]
    60b0:	smull	x20, w20, w0
    60b4:	add	x21, x27, x20
    60b8:	add	x23, x21, #0x18
    60bc:	mov	x0, x23
    60c0:	ldr	w22, [x21, #8]
    60c4:	sub	w22, w22, w1
    60c8:	mov	w1, w22
    60cc:	bl	52f8 <grub_show_menu+0x1038>
    60d0:	cbz	w0, 61d0 <grub_show_menu+0x1f10>
    60d4:	ldrsw	x3, [x28, #12]
    60d8:	sbfiz	x2, x22, #2, #32
    60dc:	ldr	x1, [x27, x20]
    60e0:	ldr	x0, [x21, #24]
    60e4:	add	x1, x1, x3, lsl #2
    60e8:	bl	0 <grub_memmove>
    60ec:	ldr	w0, [x28, #48]
    60f0:	ldr	w1, [x28, #12]
    60f4:	str	w1, [x21, #8]
    60f8:	cbz	w0, 6210 <grub_show_menu+0x1f50>
    60fc:	ldr	x0, [x21, #16]
    6100:	mov	w20, #0x0                   	// #0
    6104:	nop
    6108:	mov	w27, w20
    610c:	add	w20, w20, #0x1
    6110:	ldr	x0, [x0, x27, lsl #3]
    6114:	bl	0 <grub_free>
    6118:	ldr	x0, [x21, #16]
    611c:	ldr	w1, [x28, #48]
    6120:	str	xzr, [x0, x27, lsl #3]
    6124:	cmp	w1, w20
    6128:	b.hi	6108 <grub_show_menu+0x1e48>  // b.pmore
    612c:	ldr	w3, [x28, #20]
    6130:	str	w22, [x23, #8]
    6134:	cmp	w26, w3
    6138:	csel	w26, w26, w3, le
    613c:	cbz	w1, 6170 <grub_show_menu+0x1eb0>
    6140:	ldr	x0, [x28, #40]
    6144:	sub	w1, w1, #0x1
    6148:	mov	w5, #0x38                  	// #56
    614c:	mov	w2, #0x2                   	// #2
    6150:	add	x4, x0, #0x68
    6154:	add	x0, x0, #0x30
    6158:	umaddl	x1, w1, w5, x4
    615c:	nop
    6160:	str	w2, [x0, #4]
    6164:	str	w24, [x0], #56
    6168:	cmp	x1, x0
    616c:	b.ne	6160 <grub_show_menu+0x1ea0>  // b.any
    6170:	add	w3, w3, #0x1
    6174:	add	x19, x19, #0x1
    6178:	stur	xzr, [x28, #12]
    617c:	str	w3, [x28, #20]
    6180:	b	5fd4 <grub_show_menu+0x1d14>
    6184:	mov	x0, x19
    6188:	bl	0 <grub_strlen>
    618c:	add	x0, x19, x0
    6190:	str	x0, [sp, #96]
    6194:	b	5ddc <grub_show_menu+0x1b1c>
    6198:	sub	w4, w4, w2
    619c:	add	x3, x3, #0x18
    61a0:	sub	w2, w4, #0x2
    61a4:	add	x0, x0, x3
    61a8:	smull	x2, w2, w20
    61ac:	bl	0 <grub_memmove>
    61b0:	ldrsw	x1, [x28, #20]
    61b4:	ldr	x0, [x28]
    61b8:	add	x1, x1, #0x1
    61bc:	add	x1, x1, x1, lsl #1
    61c0:	add	x1, x0, x1, lsl #3
    61c4:	add	x0, x28, #0x30
    61c8:	bl	5458 <grub_show_menu+0x1198>
    61cc:	cbnz	w0, 60a0 <grub_show_menu+0x1de0>
    61d0:	mov	w19, #0x0                   	// #0
    61d4:	mov	w0, w19
    61d8:	ldp	x19, x20, [sp, #16]
    61dc:	ldp	x21, x22, [sp, #32]
    61e0:	ldp	x23, x24, [sp, #48]
    61e4:	ldp	x25, x26, [sp, #64]
    61e8:	ldp	x27, x28, [sp, #80]
    61ec:	ldp	x29, x30, [sp], #112
    61f0:	ret
    61f4:	ldr	w1, [x28, #20]
    61f8:	ldr	w0, [x21, #8]
    61fc:	cmp	w26, w1
    6200:	add	w0, w0, w20
    6204:	csel	w26, w26, w1, le
    6208:	str	w0, [x21, #8]
    620c:	b	5fb8 <grub_show_menu+0x1cf8>
    6210:	ldr	w3, [x28, #20]
    6214:	add	x19, x19, #0x1
    6218:	str	w22, [x23, #8]
    621c:	cmp	w26, w3
    6220:	stur	xzr, [x28, #12]
    6224:	csel	w26, w26, w3, le
    6228:	add	w3, w3, #0x1
    622c:	str	w3, [x28, #20]
    6230:	b	5fd4 <grub_show_menu+0x1d14>
    6234:	mov	x0, x22
    6238:	bl	0 <grub_free>
    623c:	mov	w0, w19
    6240:	ldp	x19, x20, [sp, #16]
    6244:	ldp	x21, x22, [sp, #32]
    6248:	ldp	x23, x24, [sp, #48]
    624c:	ldp	x25, x26, [sp, #64]
    6250:	ldp	x27, x28, [sp, #80]
    6254:	ldp	x29, x30, [sp], #112
    6258:	ret
    625c:	nop
    6260:	stp	x29, x30, [sp, #-80]!
    6264:	mov	x29, sp
    6268:	ldr	w2, [x0, #20]
    626c:	stp	x21, x22, [sp, #32]
    6270:	mov	w22, #0x18                  	// #24
    6274:	stp	x23, x24, [sp, #48]
    6278:	smull	x22, w2, w22
    627c:	ldr	x24, [x0]
    6280:	stp	x19, x20, [sp, #16]
    6284:	mov	x19, x0
    6288:	add	x20, x24, x22
    628c:	ldr	w0, [x0, #12]
    6290:	ldr	w1, [x20, #8]
    6294:	cmp	w1, w0
    6298:	b.le	641c <grub_show_menu+0x215c>
    629c:	ldr	w2, [x19, #48]
    62a0:	str	x25, [sp, #64]
    62a4:	cbz	w2, 6300 <grub_show_menu+0x2040>
    62a8:	mov	w21, #0x0                   	// #0
    62ac:	mov	w23, #0x38                  	// #56
    62b0:	umull	x2, w21, w23
    62b4:	add	w21, w21, #0x1
    62b8:	ldr	x3, [x19, #40]
    62bc:	ldr	x0, [x20]
    62c0:	add	x25, x3, x2
    62c4:	ldr	x2, [x3, x2]
    62c8:	add	x1, x0, w1, sxtw #2
    62cc:	bl	82b8 <grub_getstringwidth>
    62d0:	sub	x1, x0, #0x1
    62d4:	mov	w2, #0x1                   	// #1
    62d8:	cbz	x0, 62e8 <grub_show_menu+0x2028>
    62dc:	ldr	w2, [x25, #24]
    62e0:	add	x1, x1, x2
    62e4:	udiv	x2, x1, x2
    62e8:	ldr	w0, [x19, #48]
    62ec:	ldr	w1, [x20, #8]
    62f0:	str	w2, [x25, #44]
    62f4:	cmp	w21, w0
    62f8:	b.cc	62b0 <grub_show_menu+0x1ff0>  // b.lo, b.ul, b.last
    62fc:	ldr	w0, [x19, #12]
    6300:	ldr	x3, [x24, x22]
    6304:	sub	w1, w1, w0
    6308:	sub	w2, w1, #0x1
    630c:	sbfiz	x0, x0, #2, #32
    6310:	add	x1, x0, #0x4
    6314:	add	x0, x3, x0
    6318:	add	x1, x3, x1
    631c:	sbfiz	x2, x2, #2, #32
    6320:	bl	0 <grub_memmove>
    6324:	ldr	w0, [x20, #8]
    6328:	ldr	w1, [x19, #48]
    632c:	sub	w0, w0, #0x1
    6330:	str	w0, [x20, #8]
    6334:	cbz	w1, 652c <grub_show_menu+0x226c>
    6338:	ldr	x0, [x20, #16]
    633c:	mov	w21, #0x0                   	// #0
    6340:	mov	w22, w21
    6344:	add	w21, w21, #0x1
    6348:	ldr	x0, [x0, x22, lsl #3]
    634c:	bl	0 <grub_free>
    6350:	ldr	x0, [x20, #16]
    6354:	ldr	w1, [x19, #48]
    6358:	str	xzr, [x0, x22, lsl #3]
    635c:	cmp	w21, w1
    6360:	b.cc	6340 <grub_show_menu+0x2080>  // b.lo, b.ul, b.last
    6364:	ldr	w0, [x19, #12]
    6368:	mov	w21, #0x0                   	// #0
    636c:	str	w0, [x19, #16]
    6370:	mov	w23, #0x38                  	// #56
    6374:	ldr	w22, [x19, #20]
    6378:	cbz	w1, 6400 <grub_show_menu+0x2140>
    637c:	nop
    6380:	umull	x24, w21, w23
    6384:	ldrsw	x1, [x20, #8]
    6388:	ldr	x2, [x19, #40]
    638c:	ldr	x0, [x20]
    6390:	add	x25, x2, x24
    6394:	ldr	x2, [x2, x24]
    6398:	add	x1, x0, x1, lsl #2
    639c:	bl	82b8 <grub_getstringwidth>
    63a0:	sub	x1, x0, #0x1
    63a4:	mov	w6, #0x1                   	// #1
    63a8:	cbz	x0, 63b8 <grub_show_menu+0x20f8>
    63ac:	ldr	w6, [x25, #24]
    63b0:	add	x1, x1, x6
    63b4:	udiv	x6, x1, x6
    63b8:	ldr	x1, [x19, #40]
    63bc:	mov	w2, w22
    63c0:	mov	x0, x19
    63c4:	mov	w5, #0x2                   	// #2
    63c8:	add	x1, x1, x24
    63cc:	mov	w4, #0x0                   	// #0
    63d0:	mov	w3, #0x0                   	// #0
    63d4:	ldr	w7, [x1, #44]
    63d8:	cmp	w7, w6
    63dc:	b.ne	63ec <grub_show_menu+0x212c>  // b.any
    63e0:	mov	w5, #0x1                   	// #1
    63e4:	mov	w4, #0x0                   	// #0
    63e8:	mov	w3, #0x0                   	// #0
    63ec:	bl	54d0 <grub_show_menu+0x1210>
    63f0:	add	w21, w21, #0x1
    63f4:	ldr	w0, [x19, #48]
    63f8:	cmp	w21, w0
    63fc:	b.cc	6380 <grub_show_menu+0x20c0>  // b.lo, b.ul, b.last
    6400:	ldr	x25, [sp, #64]
    6404:	mov	w0, #0x1                   	// #1
    6408:	ldp	x19, x20, [sp, #16]
    640c:	ldp	x21, x22, [sp, #32]
    6410:	ldp	x23, x24, [sp, #48]
    6414:	ldp	x29, x30, [sp], #80
    6418:	ret
    641c:	ldr	w0, [x19, #8]
    6420:	add	w2, w2, #0x1
    6424:	cmp	w0, w2
    6428:	b.le	6404 <grub_show_menu+0x2144>
    642c:	ldr	w1, [x20, #32]
    6430:	add	x23, x20, #0x18
    6434:	mov	x0, x20
    6438:	bl	52f8 <grub_show_menu+0x1038>
    643c:	cbz	w0, 6408 <grub_show_menu+0x2148>
    6440:	ldrsw	x3, [x20, #8]
    6444:	ldr	x0, [x24, x22]
    6448:	ldr	x1, [x20, #24]
    644c:	ldrsw	x2, [x23, #8]
    6450:	add	x0, x0, x3, lsl #2
    6454:	lsl	x2, x2, #2
    6458:	bl	0 <grub_memmove>
    645c:	ldr	w0, [x20, #8]
    6460:	ldr	w2, [x23, #8]
    6464:	ldr	w1, [x19, #48]
    6468:	add	w0, w0, w2
    646c:	str	w0, [x20, #8]
    6470:	cbz	w1, 64a4 <grub_show_menu+0x21e4>
    6474:	ldr	x0, [x20, #16]
    6478:	mov	w21, #0x0                   	// #0
    647c:	nop
    6480:	mov	w22, w21
    6484:	add	w21, w21, #0x1
    6488:	ldr	x0, [x0, x22, lsl #3]
    648c:	bl	0 <grub_free>
    6490:	ldr	x0, [x20, #16]
    6494:	ldr	w1, [x19, #48]
    6498:	str	xzr, [x0, x22, lsl #3]
    649c:	cmp	w21, w1
    64a0:	b.cc	6480 <grub_show_menu+0x21c0>  // b.lo, b.ul, b.last
    64a4:	ldr	x0, [x20, #24]
    64a8:	mov	w21, #0x0                   	// #0
    64ac:	mov	w22, #0x38                  	// #56
    64b0:	bl	0 <grub_free>
    64b4:	ldr	w2, [x19, #8]
    64b8:	mov	w3, #0x18                  	// #24
    64bc:	ldr	w4, [x19, #20]
    64c0:	add	x1, x20, #0x30
    64c4:	mov	x0, x23
    64c8:	sub	w2, w2, w4
    64cc:	sub	w2, w2, #0x2
    64d0:	smull	x2, w2, w3
    64d4:	bl	0 <grub_memmove>
    64d8:	ldr	w20, [x19, #20]
    64dc:	ldp	w0, w2, [x19, #8]
    64e0:	str	w2, [x19, #16]
    64e4:	ldr	w1, [x19, #48]
    64e8:	sub	w0, w0, #0x1
    64ec:	str	w0, [x19, #8]
    64f0:	cbz	w1, 6404 <grub_show_menu+0x2144>
    64f4:	nop
    64f8:	ldr	x1, [x19, #40]
    64fc:	mov	x0, x19
    6500:	mov	w4, #0x1                   	// #1
    6504:	mov	w2, w20
    6508:	mov	w5, #0x2                   	// #2
    650c:	mov	w3, #0x0                   	// #0
    6510:	umaddl	x1, w21, w22, x1
    6514:	add	w21, w21, w4
    6518:	bl	54d0 <grub_show_menu+0x1210>
    651c:	ldr	w0, [x19, #48]
    6520:	cmp	w21, w0
    6524:	b.cc	64f8 <grub_show_menu+0x2238>  // b.lo, b.ul, b.last
    6528:	b	6404 <grub_show_menu+0x2144>
    652c:	ldr	w0, [x19, #12]
    6530:	ldr	x25, [sp, #64]
    6534:	str	w0, [x19, #16]
    6538:	b	6404 <grub_show_menu+0x2144>
    653c:	nop

0000000000006540 <grub_menu_entry_run>:
    6540:	stp	x29, x30, [sp, #-160]!
    6544:	mov	x29, sp
    6548:	stp	x19, x20, [sp, #16]
    654c:	mov	x19, x0
    6550:	mov	x0, #0x0                   	// #0
    6554:	bl	2830 <grub_auth_check_authentication>
    6558:	cbnz	w0, 6ff0 <grub_menu_entry_run+0xab0>
    655c:	mov	x0, #0x38                  	// #56
    6560:	stp	x27, x28, [sp, #80]
    6564:	bl	0 <grub_zalloc>
    6568:	mov	x28, x0
    656c:	cbz	x0, 700c <grub_menu_entry_run+0xacc>
    6570:	ldr	w1, [x19, #68]
    6574:	mov	w0, #0x1                   	// #1
    6578:	str	w0, [x28, #8]
    657c:	mov	x0, #0x18                  	// #24
    6580:	str	w1, [x28, #36]
    6584:	bl	0 <grub_malloc>
    6588:	str	x0, [x28]
    658c:	mov	x1, x0
    6590:	cbz	x0, 66c8 <grub_menu_entry_run+0x188>
    6594:	add	x0, x28, #0x30
    6598:	bl	5458 <grub_show_menu+0x1198>
    659c:	cbz	w0, 66c8 <grub_menu_entry_run+0x188>
    65a0:	ldr	x1, [x19, #40]
    65a4:	mov	x0, x28
    65a8:	mov	w2, #0x0                   	// #0
    65ac:	stp	x21, x22, [sp, #32]
    65b0:	stp	x23, x24, [sp, #48]
    65b4:	stp	x25, x26, [sp, #64]
    65b8:	bl	5d48 <grub_show_menu+0x1a88>
    65bc:	ldr	w1, [x28, #48]
    65c0:	str	wzr, [x28, #12]
    65c4:	str	xzr, [x28, #16]
    65c8:	cbz	w1, 65f4 <grub_menu_entry_run+0xb4>
    65cc:	ldr	x0, [x28, #40]
    65d0:	sub	w1, w1, #0x1
    65d4:	mov	w3, #0x38                  	// #56
    65d8:	add	x2, x0, #0x40
    65dc:	add	x0, x0, #0x8
    65e0:	umaddl	x1, w1, w3, x2
    65e4:	nop
    65e8:	str	wzr, [x0], #56
    65ec:	cmp	x1, x0
    65f0:	b.ne	65e8 <grub_menu_entry_run+0xa8>  // b.any
    65f4:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    65f8:	mov	x0, #0x0                   	// #0
    65fc:	str	xzr, [x28, #40]
    6600:	ldr	x1, [x1]
    6604:	str	x1, [sp, #104]
    6608:	bl	0 <grub_free>
    660c:	str	wzr, [x28, #48]
    6610:	ldr	x0, [sp, #104]
    6614:	ldr	x0, [x0]
    6618:	cbz	x0, 6634 <grub_menu_entry_run+0xf4>
    661c:	mov	w1, #0x1                   	// #1
    6620:	ldr	x0, [x0]
    6624:	mov	w2, w1
    6628:	add	w1, w1, #0x1
    662c:	cbnz	x0, 6620 <grub_menu_entry_run+0xe0>
    6630:	str	w2, [x28, #48]
    6634:	ldr	w0, [x28, #8]
    6638:	cbz	w0, 66e0 <grub_menu_entry_run+0x1a0>
    663c:	mov	w21, #0x0                   	// #0
    6640:	mov	w20, #0x18                  	// #24
    6644:	ldr	x1, [x28]
    6648:	b	6658 <grub_menu_entry_run+0x118>
    664c:	ldr	w0, [x28, #8]
    6650:	cmp	w0, w21
    6654:	b.ls	66e0 <grub_menu_entry_run+0x1a0>  // b.plast
    6658:	umull	x19, w21, w20
    665c:	add	w21, w21, #0x1
    6660:	add	x1, x1, x19
    6664:	ldr	x0, [x1, #16]
    6668:	bl	0 <grub_free>
    666c:	ldr	w0, [x28, #48]
    6670:	ldr	x22, [x28]
    6674:	lsl	x0, x0, #3
    6678:	bl	0 <grub_zalloc>
    667c:	ldr	x1, [x28]
    6680:	add	x22, x22, x19
    6684:	add	x19, x1, x19
    6688:	str	x0, [x22, #16]
    668c:	ldr	x0, [x19, #16]
    6690:	cbnz	x0, 664c <grub_menu_entry_run+0x10c>
    6694:	bl	0 <grub_print_error>
    6698:	mov	x0, x28
    669c:	bl	51c0 <grub_show_menu+0xf00>
    66a0:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    66a4:	ldp	x21, x22, [sp, #32]
    66a8:	ldr	x0, [x0]
    66ac:	ldp	x23, x24, [sp, #48]
    66b0:	ldp	x25, x26, [sp, #64]
    66b4:	ldp	x27, x28, [sp, #80]
    66b8:	str	wzr, [x0]
    66bc:	ldp	x19, x20, [sp, #16]
    66c0:	ldp	x29, x30, [sp], #160
    66c4:	ret
    66c8:	mov	x0, x28
    66cc:	bl	51c0 <grub_show_menu+0xf00>
    66d0:	ldp	x19, x20, [sp, #16]
    66d4:	ldp	x27, x28, [sp, #80]
    66d8:	ldp	x29, x30, [sp], #160
    66dc:	ret
    66e0:	ldr	w0, [x28, #48]
    66e4:	mov	w19, #0x38                  	// #56
    66e8:	umull	x0, w0, w19
    66ec:	bl	0 <grub_zalloc>
    66f0:	str	x0, [x28, #40]
    66f4:	mov	x3, x0
    66f8:	cbz	x0, 6694 <grub_menu_entry_run+0x154>
    66fc:	ldr	x0, [sp, #104]
    6700:	mov	w5, w19
    6704:	mov	w2, #0x0                   	// #0
    6708:	ldr	x1, [x0]
    670c:	cbz	x1, 672c <grub_menu_entry_run+0x1ec>
    6710:	umull	x0, w2, w5
    6714:	add	w2, w2, #0x1
    6718:	add	x4, x3, x0
    671c:	str	x1, [x3, x0]
    6720:	ldr	x1, [x1]
    6724:	str	wzr, [x4, #8]
    6728:	cbnz	x1, 6710 <grub_menu_entry_run+0x1d0>
    672c:	ldr	w0, [x28, #48]
    6730:	mov	w19, #0x0                   	// #0
    6734:	mov	w20, #0x38                  	// #56
    6738:	cbnz	w0, 6744 <grub_menu_entry_run+0x204>
    673c:	b	67ec <grub_menu_entry_run+0x2ac>
    6740:	ldr	x3, [x28, #40]
    6744:	umull	x4, w19, w20
    6748:	mov	w1, #0x1                   	// #1
    674c:	mov	w0, #0x0                   	// #0
    6750:	add	x2, x3, x4
    6754:	add	w19, w19, w1
    6758:	add	x2, x2, #0xc
    675c:	ldr	x3, [x3, x4]
    6760:	bl	83f0 <grub_menu_init_page>
    6764:	ldr	w0, [x28, #48]
    6768:	cmp	w0, w19
    676c:	b.hi	6740 <grub_menu_entry_run+0x200>  // b.pmore
    6770:	cbz	w0, 67ec <grub_menu_entry_run+0x2ac>
    6774:	mov	w19, #0x0                   	// #0
    6778:	mov	w20, #0x38                  	// #56
    677c:	nop
    6780:	ldr	x1, [x28, #40]
    6784:	mov	w4, #0x1                   	// #1
    6788:	mov	w2, #0x0                   	// #0
    678c:	mov	w3, w4
    6790:	mov	x0, x28
    6794:	mov	w5, #0x2                   	// #2
    6798:	umaddl	x1, w19, w20, x1
    679c:	add	w19, w19, w4
    67a0:	bl	54d0 <grub_show_menu+0x1210>
    67a4:	ldr	w2, [x28, #48]
    67a8:	cmp	w19, w2
    67ac:	b.cc	6780 <grub_menu_entry_run+0x240>  // b.lo, b.ul, b.last
    67b0:	cbz	w2, 67ec <grub_menu_entry_run+0x2ac>
    67b4:	mov	w19, #0x0                   	// #0
    67b8:	mov	w20, #0x38                  	// #56
    67bc:	nop
    67c0:	umull	x0, w19, w20
    67c4:	mov	w1, #0x1                   	// #1
    67c8:	ldr	x3, [x28, #40]
    67cc:	add	w19, w19, w1
    67d0:	ldr	x0, [x3, x0]
    67d4:	ldr	x3, [x0, #96]
    67d8:	cbz	x3, 67e4 <grub_menu_entry_run+0x2a4>
    67dc:	blr	x3
    67e0:	ldr	w2, [x28, #48]
    67e4:	cmp	w2, w19
    67e8:	b.hi	67c0 <grub_menu_entry_run+0x280>  // b.pmore
    67ec:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    67f0:	str	wzr, [sp, #112]
    67f4:	ldr	x0, [x0]
    67f8:	str	x0, [sp, #96]
    67fc:	bl	0 <grub_getkey>
    6800:	mov	w19, w0
    6804:	ldr	w1, [x28, #32]
    6808:	cbnz	w1, 689c <grub_menu_entry_run+0x35c>
    680c:	nop
    6810:	ldr	x0, [sp, #96]
    6814:	ldr	w25, [x0]
    6818:	cbnz	w25, 6c2c <grub_menu_entry_run+0x6ec>
    681c:	mov	w0, #0x63                  	// #99
    6820:	movk	w0, #0x200, lsl #16
    6824:	cmp	w19, w0
    6828:	b.eq	7318 <grub_menu_entry_run+0xdd8>  // b.none
    682c:	b.gt	6c84 <grub_menu_entry_run+0x744>
    6830:	mov	w0, #0x47                  	// #71
    6834:	movk	w0, #0x80, lsl #16
    6838:	cmp	w19, w0
    683c:	b.eq	72c8 <grub_menu_entry_run+0xd88>  // b.none
    6840:	b.le	6a88 <grub_menu_entry_run+0x548>
    6844:	mov	w0, #0x50                  	// #80
    6848:	movk	w0, #0x80, lsl #16
    684c:	cmp	w19, w0
    6850:	b.eq	6d40 <grub_menu_entry_run+0x800>  // b.none
    6854:	b.le	69f8 <grub_menu_entry_run+0x4b8>
    6858:	mov	w0, #0x61                  	// #97
    685c:	movk	w0, #0x200, lsl #16
    6860:	cmp	w19, w0
    6864:	b.eq	72c8 <grub_menu_entry_run+0xd88>  // b.none
    6868:	add	w0, w0, #0x1
    686c:	cmp	w19, w0
    6870:	b.ne	6980 <grub_menu_entry_run+0x440>  // b.any
    6874:	mov	x0, x28
    6878:	mov	w1, #0x1                   	// #1
    687c:	bl	5be0 <grub_show_menu+0x1920>
    6880:	cbz	w0, 699c <grub_menu_entry_run+0x45c>
    6884:	nop
    6888:	str	w19, [sp, #112]
    688c:	bl	0 <grub_getkey>
    6890:	mov	w19, w0
    6894:	ldr	w1, [x28, #32]
    6898:	cbz	w1, 6810 <grub_menu_entry_run+0x2d0>
    689c:	ldr	w0, [x28, #48]
    68a0:	mov	w23, #0x0                   	// #0
    68a4:	cbz	w0, 6978 <grub_menu_entry_run+0x438>
    68a8:	mov	w0, #0x38                  	// #56
    68ac:	and	w24, w24, #0xffff0000
    68b0:	ldr	x22, [x28, #40]
    68b4:	umull	x21, w23, w0
    68b8:	mov	w20, #0x0                   	// #0
    68bc:	add	x27, x22, x21
    68c0:	ldr	x0, [x22, x21]
    68c4:	ldr	x1, [x0, #64]
    68c8:	blr	x1
    68cc:	mov	w25, w0
    68d0:	ldr	x1, [x22, x21]
    68d4:	ldrh	w4, [x27, #28]
    68d8:	mov	x0, x1
    68dc:	ldr	x3, [x1, #72]
    68e0:	bfi	w24, w4, #16, #16
    68e4:	mov	w1, w24
    68e8:	blr	x3
    68ec:	ldr	w0, [x27, #32]
    68f0:	cmp	w0, #0x0
    68f4:	b.le	6fe8 <grub_menu_entry_run+0xaa8>
    68f8:	mov	w26, #0x0                   	// #0
    68fc:	b	6908 <grub_menu_entry_run+0x3c8>
    6900:	mov	x1, x3
    6904:	bl	9f48 <grub_putcode>
    6908:	ldr	x0, [x27]
    690c:	ldr	x1, [x0, #56]
    6910:	blr	x1
    6914:	ands	w1, w0, #0xffff
    6918:	sub	w1, w1, #0x1
    691c:	mov	w2, #0x4f                  	// #79
    6920:	csel	w1, w1, w2, ne  // ne = any
    6924:	mov	w0, #0x20                  	// #32
    6928:	cmp	w26, w1
    692c:	add	w26, w26, #0x1
    6930:	ldr	x3, [x27]
    6934:	b.cc	6900 <grub_menu_entry_run+0x3c0>  // b.lo, b.ul, b.last
    6938:	ldr	w0, [x27, #32]
    693c:	add	w20, w20, #0x1
    6940:	cmp	w20, w0
    6944:	b.lt	6fd0 <grub_menu_entry_run+0xa90>  // b.tstop
    6948:	ldr	x2, [x3, #72]
    694c:	mov	w1, w25
    6950:	mov	x0, x3
    6954:	blr	x2
    6958:	ldr	x0, [x22, x21]
    695c:	ldr	x1, [x0, #104]
    6960:	cbz	x1, 6968 <grub_menu_entry_run+0x428>
    6964:	blr	x1
    6968:	ldr	w0, [x28, #48]
    696c:	add	w23, w23, #0x1
    6970:	cmp	w23, w0
    6974:	b.cc	68a8 <grub_menu_entry_run+0x368>  // b.lo, b.ul, b.last
    6978:	str	wzr, [x28, #32]
    697c:	b	6810 <grub_menu_entry_run+0x2d0>
    6980:	mov	w0, #0x53                  	// #83
    6984:	movk	w0, #0x80, lsl #16
    6988:	cmp	w19, w0
    698c:	b.ne	6888 <grub_menu_entry_run+0x348>  // b.any
    6990:	mov	x0, x28
    6994:	bl	6260 <grub_show_menu+0x1fa0>
    6998:	cbnz	w0, 6888 <grub_menu_entry_run+0x348>
    699c:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    69a0:	ldr	x20, [x0]
    69a4:	mov	x0, x28
    69a8:	bl	51c0 <grub_show_menu+0xf00>
    69ac:	bl	b438 <grub_cls>
    69b0:	bl	0 <grub_print_error>
    69b4:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    69b8:	adrp	x2, 0 <grub_normal_free_menu-0x268>
    69bc:	mov	x0, x20
    69c0:	ldr	x1, [x1]
    69c4:	ldr	x2, [x2]
    69c8:	ldr	x1, [x1]
    69cc:	str	wzr, [x2]
    69d0:	blr	x1
    69d4:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    69d8:	ldr	x0, [x0]
    69dc:	bl	0 <grub_printf_>
    69e0:	bl	0 <grub_getkey>
    69e4:	ldp	x21, x22, [sp, #32]
    69e8:	ldp	x23, x24, [sp, #48]
    69ec:	ldp	x25, x26, [sp, #64]
    69f0:	ldp	x27, x28, [sp, #80]
    69f4:	b	66bc <grub_menu_entry_run+0x17c>
    69f8:	mov	w0, #0x4d                  	// #77
    69fc:	movk	w0, #0x80, lsl #16
    6a00:	cmp	w19, w0
    6a04:	b.eq	6f34 <grub_menu_entry_run+0x9f4>  // b.none
    6a08:	b.le	6c00 <grub_menu_entry_run+0x6c0>
    6a0c:	mov	w0, #0x4f                  	// #79
    6a10:	movk	w0, #0x80, lsl #16
    6a14:	cmp	w19, w0
    6a18:	b.ne	6888 <grub_menu_entry_run+0x348>  // b.any
    6a1c:	ldr	w1, [x28, #20]
    6a20:	mov	w3, #0x18                  	// #24
    6a24:	ldr	x2, [x28]
    6a28:	mov	x0, x28
    6a2c:	smaddl	x1, w1, w3, x2
    6a30:	ldr	w1, [x1, #8]
    6a34:	bl	5290 <grub_show_menu+0xfd0>
    6a38:	ldr	w22, [x28, #8]
    6a3c:	ldr	w0, [x28, #48]
    6a40:	cbz	w0, 6888 <grub_menu_entry_run+0x348>
    6a44:	mov	w20, #0x0                   	// #0
    6a48:	mov	w21, #0x38                  	// #56
    6a4c:	nop
    6a50:	ldr	x1, [x28, #40]
    6a54:	mov	x0, x28
    6a58:	mov	w2, w22
    6a5c:	mov	w5, #0x0                   	// #0
    6a60:	mov	w4, #0x0                   	// #0
    6a64:	mov	w3, #0x0                   	// #0
    6a68:	umaddl	x1, w20, w21, x1
    6a6c:	add	w20, w20, #0x1
    6a70:	bl	54d0 <grub_show_menu+0x1210>
    6a74:	ldr	w0, [x28, #48]
    6a78:	cmp	w20, w0
    6a7c:	b.cc	6a50 <grub_menu_entry_run+0x510>  // b.lo, b.ul, b.last
    6a80:	str	w19, [sp, #112]
    6a84:	b	688c <grub_menu_entry_run+0x34c>
    6a88:	cmp	w19, #0xd
    6a8c:	b.eq	6c60 <grub_menu_entry_run+0x720>  // b.none
    6a90:	b.le	6c50 <grub_menu_entry_run+0x710>
    6a94:	mov	w0, #0x3c                  	// #60
    6a98:	movk	w0, #0x80, lsl #16
    6a9c:	cmp	w19, w0
    6aa0:	b.eq	7318 <grub_menu_entry_run+0xdd8>  // b.none
    6aa4:	add	w0, w0, #0x8
    6aa8:	cmp	w19, w0
    6aac:	b.ne	6c24 <grub_menu_entry_run+0x6e4>  // b.any
    6ab0:	str	xzr, [sp, #152]
    6ab4:	bl	b438 <grub_cls>
    6ab8:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    6abc:	mov	x21, #0x0                   	// #0
    6ac0:	ldr	x0, [x0]
    6ac4:	bl	0 <grub_printf>
    6ac8:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    6acc:	ldr	x0, [x0]
    6ad0:	bl	0 <grub_printf_>
    6ad4:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    6ad8:	ldr	x0, [x0]
    6adc:	bl	0 <grub_printf>
    6ae0:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    6ae4:	ldr	w0, [x28, #36]
    6ae8:	ldr	x26, [x1]
    6aec:	ldr	w1, [x26]
    6af0:	str	w1, [sp, #96]
    6af4:	cbnz	w0, 73b8 <grub_menu_entry_run+0xe78>
    6af8:	ldr	w0, [x28, #8]
    6afc:	cmp	w0, #0x0
    6b00:	b.le	7684 <grub_menu_entry_run+0x1144>
    6b04:	mov	w27, #0x0                   	// #0
    6b08:	mov	x20, #0x0                   	// #0
    6b0c:	mov	x19, #0x0                   	// #0
    6b10:	ldr	x0, [x28]
    6b14:	add	w27, w27, #0x1
    6b18:	add	x1, x0, x20
    6b1c:	ldr	x0, [x0, x20]
    6b20:	add	x20, x20, #0x18
    6b24:	ldrsw	x1, [x1, #8]
    6b28:	bl	bcd0 <grub_get_num_of_utf8_bytes>
    6b2c:	add	x0, x0, #0x1
    6b30:	ldr	w1, [x28, #8]
    6b34:	add	x19, x19, x0
    6b38:	cmp	w27, w1
    6b3c:	b.lt	6b10 <grub_menu_entry_run+0x5d0>  // b.tstop
    6b40:	add	x0, x19, #0x1
    6b44:	bl	0 <grub_malloc>
    6b48:	mov	x22, x0
    6b4c:	cbz	x0, 6bf8 <grub_menu_entry_run+0x6b8>
    6b50:	ldr	w0, [x28, #8]
    6b54:	cmp	w0, #0x0
    6b58:	b.le	7710 <grub_menu_entry_run+0x11d0>
    6b5c:	mov	x23, #0x0                   	// #0
    6b60:	mov	x27, #0x0                   	// #0
    6b64:	mov	w20, #0xa                   	// #10
    6b68:	ldr	x1, [x28]
    6b6c:	sub	x3, x19, x27
    6b70:	add	x2, x22, x27
    6b74:	add	w25, w25, #0x1
    6b78:	add	x7, x1, x23
    6b7c:	ldr	x0, [x1, x23]
    6b80:	add	x23, x23, #0x18
    6b84:	ldrsw	x1, [x7, #8]
    6b88:	bl	bc18 <grub_ucs4_to_utf8>
    6b8c:	add	x0, x0, x27
    6b90:	add	x27, x0, #0x1
    6b94:	strb	w20, [x22, x0]
    6b98:	ldr	w0, [x28, #8]
    6b9c:	cmp	w25, w0
    6ba0:	b.lt	6b68 <grub_menu_entry_run+0x628>  // b.tstop
    6ba4:	add	x27, x22, x27
    6ba8:	add	x2, sp, #0x98
    6bac:	strb	wzr, [x27]
    6bb0:	mov	w1, #0x0                   	// #0
    6bb4:	mov	x0, x22
    6bb8:	bl	10140 <grub_script_execute_new_scope>
    6bbc:	mov	x0, x22
    6bc0:	bl	0 <grub_free>
    6bc4:	ldr	w0, [x26]
    6bc8:	ldr	w1, [sp, #96]
    6bcc:	cmp	w1, w0
    6bd0:	b.ne	73a0 <grub_menu_entry_run+0xe60>  // b.any
    6bd4:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    6bd8:	ldr	x19, [x0]
    6bdc:	ldr	w0, [x19]
    6be0:	cbz	w0, 7414 <grub_menu_entry_run+0xed4>
    6be4:	ldr	w0, [x28, #36]
    6be8:	cbnz	w0, 7434 <grub_menu_entry_run+0xef4>
    6bec:	bl	0 <grub_print_error>
    6bf0:	str	wzr, [x19]
    6bf4:	bl	40d0 <grub_wait_after_message>
    6bf8:	ldr	x0, [x28, #40]
    6bfc:	b	6608 <grub_menu_entry_run+0xc8>
    6c00:	mov	w0, #0x48                  	// #72
    6c04:	movk	w0, #0x80, lsl #16
    6c08:	cmp	w19, w0
    6c0c:	b.eq	6cd4 <grub_menu_entry_run+0x794>  // b.none
    6c10:	add	w0, w0, #0x3
    6c14:	cmp	w19, w0
    6c18:	b.eq	6874 <grub_menu_entry_run+0x334>  // b.none
    6c1c:	str	w19, [sp, #112]
    6c20:	b	688c <grub_menu_entry_run+0x34c>
    6c24:	cmp	w19, #0x1b
    6c28:	b.ne	7654 <grub_menu_entry_run+0x1114>  // b.any
    6c2c:	mov	x0, x28
    6c30:	bl	51c0 <grub_show_menu+0xf00>
    6c34:	ldp	x19, x20, [sp, #16]
    6c38:	ldp	x21, x22, [sp, #32]
    6c3c:	ldp	x23, x24, [sp, #48]
    6c40:	ldp	x25, x26, [sp, #64]
    6c44:	ldp	x27, x28, [sp, #80]
    6c48:	ldp	x29, x30, [sp], #160
    6c4c:	ret
    6c50:	cmp	w19, #0x9
    6c54:	b.eq	701c <grub_menu_entry_run+0xadc>  // b.none
    6c58:	cmp	w19, #0xa
    6c5c:	b.ne	6ed8 <grub_menu_entry_run+0x998>  // b.any
    6c60:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    6c64:	mov	x0, x28
    6c68:	mov	w2, #0x1                   	// #1
    6c6c:	ldr	x20, [x1]
    6c70:	mov	x1, x20
    6c74:	bl	5d48 <grub_show_menu+0x1a88>
    6c78:	cbz	w0, 69a4 <grub_menu_entry_run+0x464>
    6c7c:	str	w19, [sp, #112]
    6c80:	b	688c <grub_menu_entry_run+0x34c>
    6c84:	mov	w0, #0x6c                  	// #108
    6c88:	movk	w0, #0x200, lsl #16
    6c8c:	cmp	w19, w0
    6c90:	b.eq	6bf8 <grub_menu_entry_run+0x6b8>  // b.none
    6c94:	b.le	6e0c <grub_menu_entry_run+0x8cc>
    6c98:	mov	w0, #0x75                  	// #117
    6c9c:	movk	w0, #0x200, lsl #16
    6ca0:	cmp	w19, w0
    6ca4:	b.gt	6dd0 <grub_menu_entry_run+0x890>
    6ca8:	mov	w0, #0x71                  	// #113
    6cac:	movk	w0, #0x200, lsl #16
    6cb0:	cmp	w19, w0
    6cb4:	b.gt	6888 <grub_menu_entry_run+0x348>
    6cb8:	mov	w0, #0x6f                  	// #111
    6cbc:	movk	w0, #0x200, lsl #16
    6cc0:	cmp	w19, w0
    6cc4:	b.eq	7250 <grub_menu_entry_run+0xd10>  // b.none
    6cc8:	add	w0, w0, #0x1
    6ccc:	cmp	w19, w0
    6cd0:	b.ne	6d30 <grub_menu_entry_run+0x7f0>  // b.any
    6cd4:	ldr	w0, [x28, #20]
    6cd8:	cmp	w0, #0x0
    6cdc:	b.gt	736c <grub_menu_entry_run+0xe2c>
    6ce0:	str	wzr, [x28, #12]
    6ce4:	ldr	w0, [x28, #48]
    6ce8:	ldr	w22, [x28, #8]
    6cec:	cbz	w0, 6888 <grub_menu_entry_run+0x348>
    6cf0:	mov	w20, #0x0                   	// #0
    6cf4:	mov	w21, #0x38                  	// #56
    6cf8:	ldr	x1, [x28, #40]
    6cfc:	mov	x0, x28
    6d00:	mov	w2, w22
    6d04:	mov	w5, #0x0                   	// #0
    6d08:	mov	w4, #0x0                   	// #0
    6d0c:	mov	w3, #0x0                   	// #0
    6d10:	umaddl	x1, w20, w21, x1
    6d14:	add	w20, w20, #0x1
    6d18:	bl	54d0 <grub_show_menu+0x1210>
    6d1c:	ldr	w0, [x28, #48]
    6d20:	cmp	w20, w0
    6d24:	b.cc	6cf8 <grub_menu_entry_run+0x7b8>  // b.lo, b.ul, b.last
    6d28:	str	w19, [sp, #112]
    6d2c:	b	688c <grub_menu_entry_run+0x34c>
    6d30:	mov	w0, #0x6e                  	// #110
    6d34:	movk	w0, #0x200, lsl #16
    6d38:	cmp	w19, w0
    6d3c:	b.ne	6888 <grub_menu_entry_run+0x348>  // b.any
    6d40:	ldr	w0, [x28, #20]
    6d44:	mov	w2, #0x18                  	// #24
    6d48:	ldr	x3, [x28]
    6d4c:	ldr	w1, [x28, #8]
    6d50:	sub	w1, w1, #0x1
    6d54:	smaddl	x3, w0, w2, x3
    6d58:	cmp	w0, w1
    6d5c:	b.ge	735c <grub_menu_entry_run+0xe1c>  // b.tcont
    6d60:	ldr	w3, [x3, #32]
    6d64:	add	w2, w0, #0x1
    6d68:	ldr	w1, [x28, #16]
    6d6c:	mov	x0, x28
    6d70:	str	wzr, [x28, #12]
    6d74:	cmp	w3, w1
    6d78:	str	w2, [x28, #20]
    6d7c:	csel	w1, w3, w1, le
    6d80:	bl	5290 <grub_show_menu+0xfd0>
    6d84:	ldr	w0, [x28, #48]
    6d88:	ldr	w22, [x28, #8]
    6d8c:	cbz	w0, 6888 <grub_menu_entry_run+0x348>
    6d90:	mov	w20, #0x0                   	// #0
    6d94:	mov	w21, #0x38                  	// #56
    6d98:	ldr	x1, [x28, #40]
    6d9c:	mov	x0, x28
    6da0:	mov	w2, w22
    6da4:	mov	w5, #0x0                   	// #0
    6da8:	mov	w4, #0x0                   	// #0
    6dac:	mov	w3, #0x0                   	// #0
    6db0:	umaddl	x1, w20, w21, x1
    6db4:	add	w20, w20, #0x1
    6db8:	bl	54d0 <grub_show_menu+0x1210>
    6dbc:	ldr	w0, [x28, #48]
    6dc0:	cmp	w20, w0
    6dc4:	b.cc	6d98 <grub_menu_entry_run+0x858>  // b.lo, b.ul, b.last
    6dc8:	str	w19, [sp, #112]
    6dcc:	b	688c <grub_menu_entry_run+0x34c>
    6dd0:	mov	w0, #0x78                  	// #120
    6dd4:	movk	w0, #0x200, lsl #16
    6dd8:	cmp	w19, w0
    6ddc:	b.eq	6ab0 <grub_menu_entry_run+0x570>  // b.none
    6de0:	add	w0, w0, #0x1
    6de4:	cmp	w19, w0
    6de8:	b.ne	6888 <grub_menu_entry_run+0x348>  // b.any
    6dec:	ldr	x1, [x28, #24]
    6df0:	cbz	x1, 6888 <grub_menu_entry_run+0x348>
    6df4:	mov	x0, x28
    6df8:	mov	w2, #0x1                   	// #1
    6dfc:	bl	5d48 <grub_show_menu+0x1a88>
    6e00:	cbz	w0, 699c <grub_menu_entry_run+0x45c>
    6e04:	str	w19, [sp, #112]
    6e08:	b	688c <grub_menu_entry_run+0x34c>
    6e0c:	mov	w0, #0x68                  	// #104
    6e10:	movk	w0, #0x200, lsl #16
    6e14:	cmp	w19, w0
    6e18:	b.eq	6ee0 <grub_menu_entry_run+0x9a0>  // b.none
    6e1c:	b.le	6f18 <grub_menu_entry_run+0x9d8>
    6e20:	mov	w0, #0x69                  	// #105
    6e24:	movk	w0, #0x200, lsl #16
    6e28:	cmp	w19, w0
    6e2c:	b.eq	701c <grub_menu_entry_run+0xadc>  // b.none
    6e30:	add	w0, w0, #0x2
    6e34:	cmp	w19, w0
    6e38:	b.ne	6888 <grub_menu_entry_run+0x348>  // b.any
    6e3c:	ldr	x23, [x28, #24]
    6e40:	ldr	w0, [sp, #112]
    6e44:	cmp	x23, #0x0
    6e48:	ccmp	w0, w19, #0x4, ne  // ne = any
    6e4c:	b.eq	7338 <grub_menu_entry_run+0xdf8>  // b.none
    6e50:	strb	wzr, [x23]
    6e54:	mov	w2, #0x18                  	// #24
    6e58:	ldr	w22, [x28, #20]
    6e5c:	ldr	x1, [x28]
    6e60:	ldr	w0, [x28, #12]
    6e64:	smaddl	x22, w22, w2, x1
    6e68:	ldr	w21, [x22, #8]
    6e6c:	sub	w21, w21, w0
    6e70:	mov	x0, x23
    6e74:	bl	0 <grub_strlen>
    6e78:	mov	w25, w0
    6e7c:	cmp	w21, #0x0
    6e80:	b.gt	74fc <grub_menu_entry_run+0xfbc>
    6e84:	ldr	w0, [x28, #20]
    6e88:	ldr	w1, [x28, #8]
    6e8c:	add	w0, w0, #0x1
    6e90:	cmp	w0, w1
    6e94:	b.ge	6888 <grub_menu_entry_run+0x348>  // b.tcont
    6e98:	add	w1, w25, #0x2
    6e9c:	mov	x0, x23
    6ea0:	sxtw	x1, w1
    6ea4:	bl	0 <grub_realloc>
    6ea8:	mov	x1, x0
    6eac:	cbz	x0, 699c <grub_menu_entry_run+0x45c>
    6eb0:	add	x2, x0, w25, sxtw
    6eb4:	mov	w0, #0xa                   	// #10
    6eb8:	strb	w0, [x1, w25, sxtw]
    6ebc:	mov	x0, x28
    6ec0:	strb	wzr, [x2, #1]
    6ec4:	str	x1, [x28, #24]
    6ec8:	bl	6260 <grub_show_menu+0x1fa0>
    6ecc:	cbz	w0, 699c <grub_menu_entry_run+0x45c>
    6ed0:	str	w19, [sp, #112]
    6ed4:	b	688c <grub_menu_entry_run+0x34c>
    6ed8:	cmp	w19, #0x8
    6edc:	b.ne	6888 <grub_menu_entry_run+0x348>  // b.any
    6ee0:	ldr	w20, [x28, #12]
    6ee4:	mov	x0, x28
    6ee8:	ldr	w21, [x28, #20]
    6eec:	mov	w1, #0x0                   	// #0
    6ef0:	bl	5be0 <grub_show_menu+0x1920>
    6ef4:	cbz	w0, 699c <grub_menu_entry_run+0x45c>
    6ef8:	ldr	w0, [x28, #12]
    6efc:	cmp	w20, w0
    6f00:	b.ne	6990 <grub_menu_entry_run+0x450>  // b.any
    6f04:	ldr	w0, [x28, #20]
    6f08:	cmp	w21, w0
    6f0c:	b.ne	6990 <grub_menu_entry_run+0x450>  // b.any
    6f10:	str	w19, [sp, #112]
    6f14:	b	688c <grub_menu_entry_run+0x34c>
    6f18:	mov	w0, #0x65                  	// #101
    6f1c:	movk	w0, #0x200, lsl #16
    6f20:	cmp	w19, w0
    6f24:	b.eq	6a1c <grub_menu_entry_run+0x4dc>  // b.none
    6f28:	add	w0, w0, #0x1
    6f2c:	cmp	w19, w0
    6f30:	b.ne	6fb8 <grub_menu_entry_run+0xa78>  // b.any
    6f34:	ldr	w2, [x28, #20]
    6f38:	mov	w20, #0x18                  	// #24
    6f3c:	ldr	x4, [x28]
    6f40:	ldr	w1, [x28, #12]
    6f44:	smull	x3, w2, w20
    6f48:	add	x0, x4, x3
    6f4c:	ldr	w0, [x0, #8]
    6f50:	cmp	w1, w0
    6f54:	b.lt	73d4 <grub_menu_entry_run+0xe94>  // b.tstop
    6f58:	ldr	w22, [x28, #8]
    6f5c:	add	w2, w2, #0x1
    6f60:	cmp	w22, w2
    6f64:	b.gt	73a8 <grub_menu_entry_run+0xe68>
    6f68:	ldr	w0, [x28, #48]
    6f6c:	str	w1, [x28, #16]
    6f70:	cbz	w0, 6888 <grub_menu_entry_run+0x348>
    6f74:	mov	w20, #0x0                   	// #0
    6f78:	mov	w21, #0x38                  	// #56
    6f7c:	nop
    6f80:	ldr	x1, [x28, #40]
    6f84:	mov	x0, x28
    6f88:	mov	w2, w22
    6f8c:	mov	w5, #0x0                   	// #0
    6f90:	mov	w4, #0x0                   	// #0
    6f94:	mov	w3, #0x0                   	// #0
    6f98:	umaddl	x1, w20, w21, x1
    6f9c:	add	w20, w20, #0x1
    6fa0:	bl	54d0 <grub_show_menu+0x1210>
    6fa4:	ldr	w0, [x28, #48]
    6fa8:	cmp	w20, w0
    6fac:	b.cc	6f80 <grub_menu_entry_run+0xa40>  // b.lo, b.ul, b.last
    6fb0:	str	w19, [sp, #112]
    6fb4:	b	688c <grub_menu_entry_run+0x34c>
    6fb8:	mov	w0, #0x64                  	// #100
    6fbc:	movk	w0, #0x200, lsl #16
    6fc0:	cmp	w19, w0
    6fc4:	b.eq	6990 <grub_menu_entry_run+0x450>  // b.none
    6fc8:	str	w19, [sp, #112]
    6fcc:	b	688c <grub_menu_entry_run+0x34c>
    6fd0:	mov	w0, #0xa                   	// #10
    6fd4:	mov	x1, x3
    6fd8:	bl	9f48 <grub_putcode>
    6fdc:	ldr	w0, [x27, #32]
    6fe0:	cmp	w20, w0
    6fe4:	b.lt	68f8 <grub_menu_entry_run+0x3b8>  // b.tstop
    6fe8:	ldr	x3, [x22, x21]
    6fec:	b	6948 <grub_menu_entry_run+0x408>
    6ff0:	bl	0 <grub_print_error>
    6ff4:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    6ff8:	ldp	x19, x20, [sp, #16]
    6ffc:	ldr	x0, [x0]
    7000:	str	wzr, [x0]
    7004:	ldp	x29, x30, [sp], #160
    7008:	ret
    700c:	ldp	x19, x20, [sp, #16]
    7010:	ldp	x27, x28, [sp, #80]
    7014:	ldp	x29, x30, [sp], #160
    7018:	ret
    701c:	ldr	w0, [sp, #112]
    7020:	cmp	w0, w19
    7024:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    7028:	ldr	x22, [x0]
    702c:	b.eq	732c <grub_menu_entry_run+0xdec>  // b.none
    7030:	ldr	w0, [x28, #20]
    7034:	mov	w4, #0x18                  	// #24
    7038:	ldr	x2, [x28]
    703c:	adrp	x3, 0 <grub_normal_free_menu-0x268>
    7040:	ldrsw	x1, [x28, #12]
    7044:	smull	x0, w0, w4
    7048:	str	w25, [x22]
    704c:	ldr	x21, [x3]
    7050:	ldr	x0, [x2, x0]
    7054:	stp	xzr, xzr, [x21, #8]
    7058:	str	xzr, [x21, #24]
    705c:	bl	bd48 <grub_ucs4_to_utf8_alloc>
    7060:	cbz	x0, 6888 <grub_menu_entry_run+0x348>
    7064:	adrp	x2, 0 <grub_normal_free_menu-0x268>
    7068:	add	x1, sp, #0x98
    706c:	ldr	x2, [x2]
    7070:	bl	3590 <grub_normal_do_completion>
    7074:	str	x0, [sp, #128]
    7078:	ldr	x1, [x21, #8]
    707c:	cbz	x1, 7214 <grub_menu_entry_run+0xcd4>
    7080:	mov	x0, x1
    7084:	bl	0 <grub_strlen>
    7088:	mov	x20, x0
    708c:	add	x0, x0, #0x1
    7090:	lsl	x0, x0, #2
    7094:	bl	0 <grub_malloc>
    7098:	str	x0, [sp, #120]
    709c:	cbz	x0, 7718 <grub_menu_entry_run+0x11d8>
    70a0:	ldr	x2, [x21, #8]
    70a4:	mov	x1, x20
    70a8:	mov	x3, x20
    70ac:	mov	x4, #0x0                   	// #0
    70b0:	bl	beb0 <grub_utf8_to_ucs4>
    70b4:	ldr	x1, [sp, #120]
    70b8:	str	wzr, [x1, x0, lsl #2]
    70bc:	add	x2, x1, x0, lsl #2
    70c0:	str	x2, [sp, #136]
    70c4:	ldr	w0, [sp, #152]
    70c8:	cbz	w0, 7214 <grub_menu_entry_run+0xcd4>
    70cc:	ldr	w0, [x28, #48]
    70d0:	cbz	w0, 7214 <grub_menu_entry_run+0xcd4>
    70d4:	mov	w23, #0x0                   	// #0
    70d8:	b	71e4 <grub_menu_entry_run+0xca4>
    70dc:	cmp	w25, #0x2
    70e0:	b.hi	7740 <grub_menu_entry_run+0x1200>  // b.pmore
    70e4:	and	x2, x25, #0xffff
    70e8:	ubfiz	x26, x25, #2, #16
    70ec:	ldr	x0, [x28, #40]
    70f0:	ldr	w1, [sp, #116]
    70f4:	and	w1, w1, #0xffff0000
    70f8:	str	w1, [sp, #116]
    70fc:	ldr	x0, [x0, x20]
    7100:	ldr	x1, [x21, #16]
    7104:	ldr	x3, [x0, #64]
    7108:	sub	x1, x1, #0x1
    710c:	add	x1, x1, x2
    7110:	udiv	x27, x1, x2
    7114:	blr	x3
    7118:	ldr	x1, [x28, #40]
    711c:	mov	w2, #0x1                   	// #1
    7120:	str	w2, [x28, #32]
    7124:	add	x2, x1, x20
    7128:	str	w0, [sp, #112]
    712c:	ldr	x0, [x1, x20]
    7130:	ldr	w3, [sp, #116]
    7134:	ldrh	w1, [x2, #28]
    7138:	ldr	x2, [x0, #72]
    713c:	bfi	w3, w1, #16, #16
    7140:	str	w3, [sp, #116]
    7144:	mov	w1, w3
    7148:	blr	x2
    714c:	ldr	x1, [x28, #40]
    7150:	add	x0, x1, x20
    7154:	ldr	w2, [x0, #32]
    7158:	cmp	w2, #0x1
    715c:	b.gt	7468 <grub_menu_entry_run+0xf28>
    7160:	ldr	w2, [x22]
    7164:	ldr	x1, [x0]
    7168:	udiv	w0, w2, w27
    716c:	msub	w0, w0, w27, w2
    7170:	mul	w25, w0, w25
    7174:	ldr	x0, [sp, #120]
    7178:	add	x25, x0, x25, lsl #2
    717c:	add	x27, x25, x26
    7180:	cmp	x0, x25
    7184:	b.eq	7648 <grub_menu_entry_run+0x1108>  // b.none
    7188:	mov	w0, #0x2190                	// #8592
    718c:	bl	9f48 <grub_putcode>
    7190:	ldr	x4, [x28, #40]
    7194:	mov	x0, x25
    7198:	ldr	x1, [sp, #136]
    719c:	mov	w3, #0x0                   	// #0
    71a0:	ldr	x4, [x4, x20]
    71a4:	cmp	x1, x27
    71a8:	mov	x25, x1
    71ac:	mov	w2, #0x0                   	// #0
    71b0:	csel	x1, x1, x27, ls  // ls = plast
    71b4:	bl	af28 <grub_print_ucs4>
    71b8:	cmp	x25, x27
    71bc:	b.hi	7634 <grub_menu_entry_run+0x10f4>  // b.pmore
    71c0:	ldr	x0, [x28, #40]
    71c4:	add	w23, w23, #0x1
    71c8:	ldr	w1, [sp, #112]
    71cc:	ldr	x0, [x0, x20]
    71d0:	ldr	x2, [x0, #72]
    71d4:	blr	x2
    71d8:	ldr	w0, [x28, #48]
    71dc:	cmp	w23, w0
    71e0:	b.cs	7214 <grub_menu_entry_run+0xcd4>  // b.hs, b.nlast
    71e4:	mov	w0, #0x38                  	// #56
    71e8:	umull	x20, w23, w0
    71ec:	ldr	x0, [x28, #40]
    71f0:	ldr	x0, [x0, x20]
    71f4:	ldr	x1, [x0, #56]
    71f8:	blr	x1
    71fc:	ands	w25, w0, #0xffff
    7200:	b.ne	70dc <grub_menu_entry_run+0xb9c>  // b.any
    7204:	mov	x2, #0x48                  	// #72
    7208:	mov	x26, #0x120                 	// #288
    720c:	mov	w25, w2
    7210:	b	70ec <grub_menu_entry_run+0xbac>
    7214:	ldr	x0, [sp, #128]
    7218:	cbz	x0, 740c <grub_menu_entry_run+0xecc>
    721c:	ldr	x20, [sp, #128]
    7220:	mov	x0, x28
    7224:	mov	w2, #0x1                   	// #1
    7228:	mov	x1, x20
    722c:	bl	5d48 <grub_show_menu+0x1a88>
    7230:	mov	w1, #0xffffffff            	// #-1
    7234:	mov	x0, x20
    7238:	str	w1, [x22]
    723c:	bl	0 <grub_free>
    7240:	ldr	x0, [x21, #8]
    7244:	bl	0 <grub_free>
    7248:	str	w19, [sp, #112]
    724c:	b	688c <grub_menu_entry_run+0x34c>
    7250:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    7254:	mov	x0, x28
    7258:	mov	w2, #0x0                   	// #0
    725c:	ldr	x20, [x1]
    7260:	mov	x1, x20
    7264:	bl	5d48 <grub_show_menu+0x1a88>
    7268:	cbz	w0, 69a4 <grub_menu_entry_run+0x464>
    726c:	mov	x0, x28
    7270:	mov	w1, #0x0                   	// #0
    7274:	bl	5be0 <grub_show_menu+0x1920>
    7278:	cbz	w0, 69a4 <grub_menu_entry_run+0x464>
    727c:	ldr	w0, [x28, #48]
    7280:	mov	w20, #0x0                   	// #0
    7284:	ldr	w22, [x28, #20]
    7288:	mov	w21, #0x38                  	// #56
    728c:	cbz	w0, 6888 <grub_menu_entry_run+0x348>
    7290:	ldr	x1, [x28, #40]
    7294:	mov	x0, x28
    7298:	mov	w4, #0x1                   	// #1
    729c:	mov	w2, w22
    72a0:	mov	w5, #0x2                   	// #2
    72a4:	mov	w3, #0x0                   	// #0
    72a8:	umaddl	x1, w20, w21, x1
    72ac:	add	w20, w20, w4
    72b0:	bl	54d0 <grub_show_menu+0x1210>
    72b4:	ldr	w0, [x28, #48]
    72b8:	cmp	w20, w0
    72bc:	b.cc	7290 <grub_menu_entry_run+0xd50>  // b.lo, b.ul, b.last
    72c0:	str	w19, [sp, #112]
    72c4:	b	688c <grub_menu_entry_run+0x34c>
    72c8:	ldr	w0, [x28, #48]
    72cc:	stur	xzr, [x28, #12]
    72d0:	ldr	w22, [x28, #8]
    72d4:	cbz	w0, 6888 <grub_menu_entry_run+0x348>
    72d8:	mov	w20, #0x0                   	// #0
    72dc:	mov	w21, #0x38                  	// #56
    72e0:	ldr	x1, [x28, #40]
    72e4:	mov	x0, x28
    72e8:	mov	w2, w22
    72ec:	mov	w5, #0x0                   	// #0
    72f0:	mov	w4, #0x0                   	// #0
    72f4:	mov	w3, #0x0                   	// #0
    72f8:	umaddl	x1, w20, w21, x1
    72fc:	add	w20, w20, #0x1
    7300:	bl	54d0 <grub_show_menu+0x1210>
    7304:	ldr	w0, [x28, #48]
    7308:	cmp	w20, w0
    730c:	b.cc	72e0 <grub_menu_entry_run+0xda0>  // b.lo, b.ul, b.last
    7310:	str	w19, [sp, #112]
    7314:	b	688c <grub_menu_entry_run+0x34c>
    7318:	mov	w0, #0x1                   	// #1
    731c:	mov	w1, #0x0                   	// #0
    7320:	bl	760 <grub_cmdline_run>
    7324:	ldr	x0, [x28, #40]
    7328:	b	6608 <grub_menu_entry_run+0xc8>
    732c:	ldr	w25, [x22]
    7330:	add	w25, w25, #0x1
    7334:	b	7030 <grub_menu_entry_run+0xaf0>
    7338:	ldr	w22, [x28, #20]
    733c:	mov	w2, #0x18                  	// #24
    7340:	ldr	x1, [x28]
    7344:	ldr	w0, [x28, #12]
    7348:	smaddl	x22, w22, w2, x1
    734c:	ldr	w21, [x22, #8]
    7350:	sub	w21, w21, w0
    7354:	cbz	x23, 6e7c <grub_menu_entry_run+0x93c>
    7358:	b	6e70 <grub_menu_entry_run+0x930>
    735c:	ldr	w1, [x3, #8]
    7360:	mov	x0, x28
    7364:	bl	5290 <grub_show_menu+0xfd0>
    7368:	b	6d84 <grub_menu_entry_run+0x844>
    736c:	ldr	x3, [x28]
    7370:	sub	w2, w0, #0x1
    7374:	mov	w4, #0x18                  	// #24
    7378:	str	w2, [x28, #20]
    737c:	ldr	w1, [x28, #16]
    7380:	mov	x0, x28
    7384:	smaddl	x2, w2, w4, x3
    7388:	ldr	w2, [x2, #8]
    738c:	str	wzr, [x28, #12]
    7390:	cmp	w2, w1
    7394:	csel	w1, w2, w1, le
    7398:	bl	5290 <grub_show_menu+0xfd0>
    739c:	b	6ce4 <grub_menu_entry_run+0x7a4>
    73a0:	bl	40d0 <grub_wait_after_message>
    73a4:	b	6bd4 <grub_menu_entry_run+0x694>
    73a8:	mov	w1, #0x0                   	// #0
    73ac:	str	wzr, [x28, #12]
    73b0:	str	w2, [x28, #20]
    73b4:	b	6f68 <grub_menu_entry_run+0xa28>
    73b8:	bl	b790 <grub_env_context_open>
    73bc:	mov	x0, #0x10                  	// #16
    73c0:	bl	0 <grub_zalloc>
    73c4:	mov	x21, x0
    73c8:	cbz	x0, 6bf8 <grub_menu_entry_run+0x6b8>
    73cc:	bl	b558 <grub_env_set_menu>
    73d0:	b	6af8 <grub_menu_entry_run+0x5b8>
    73d4:	ldr	x2, [x4, x3]
    73d8:	add	x1, x2, w1, sxtw #2
    73dc:	add	x0, x2, w0, sxtw #2
    73e0:	add	x1, x1, #0x4
    73e4:	bl	de50 <grub_unicode_get_comb_end>
    73e8:	ldr	w1, [x28, #20]
    73ec:	ldr	x2, [x28]
    73f0:	ldr	w22, [x28, #8]
    73f4:	smull	x20, w1, w20
    73f8:	ldr	x1, [x2, x20]
    73fc:	sub	x1, x0, x1
    7400:	asr	x1, x1, #2
    7404:	str	w1, [x28, #12]
    7408:	b	6f68 <grub_menu_entry_run+0xa28>
    740c:	bl	0 <grub_refresh>
    7410:	b	7240 <grub_menu_entry_run+0xd00>
    7414:	bl	0 <grub_loader_is_loaded>
    7418:	cbnz	w0, 76e0 <grub_menu_entry_run+0x11a0>
    741c:	ldr	w0, [x28, #36]
    7420:	cbnz	w0, 7434 <grub_menu_entry_run+0xef4>
    7424:	ldr	w0, [x19]
    7428:	cbnz	w0, 6bec <grub_menu_entry_run+0x6ac>
    742c:	ldr	x0, [x28, #40]
    7430:	b	6608 <grub_menu_entry_run+0xc8>
    7434:	cbz	x21, 7440 <grub_menu_entry_run+0xf00>
    7438:	ldr	w0, [x21]
    743c:	cbnz	w0, 7448 <grub_menu_entry_run+0xf08>
    7440:	bl	b578 <grub_env_context_close>
    7444:	b	7424 <grub_menu_entry_run+0xee4>
    7448:	mov	w2, #0x0                   	// #0
    744c:	mov	w1, #0x1                   	// #1
    7450:	mov	x0, x21
    7454:	bl	42c0 <grub_show_menu>
    7458:	mov	x0, x21
    745c:	bl	268 <grub_normal_free_menu>
    7460:	bl	b578 <grub_env_context_close>
    7464:	b	7424 <grub_menu_entry_run+0xee4>
    7468:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    746c:	ldr	x1, [x1, x20]
    7470:	ldr	x0, [x0]
    7474:	bl	ada0 <grub_puts_terminal>
    7478:	ldr	w0, [x21]
    747c:	cmp	w0, #0x2
    7480:	b.eq	76a4 <grub_menu_entry_run+0x1164>  // b.none
    7484:	b.gt	74d8 <grub_menu_entry_run+0xf98>
    7488:	cbz	w0, 76cc <grub_menu_entry_run+0x118c>
    748c:	cmp	w0, #0x1
    7490:	b.ne	76b8 <grub_menu_entry_run+0x1178>  // b.any
    7494:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    7498:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    749c:	ldr	x1, [x1]
    74a0:	ldr	x0, [x0]
    74a4:	ldr	x1, [x1]
    74a8:	blr	x1
    74ac:	ldr	x1, [x28, #40]
    74b0:	ldr	x1, [x1, x20]
    74b4:	bl	ada0 <grub_puts_terminal>
    74b8:	ldr	x1, [x28, #40]
    74bc:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    74c0:	ldr	x0, [x0]
    74c4:	ldr	x1, [x1, x20]
    74c8:	bl	ada0 <grub_puts_terminal>
    74cc:	ldr	x0, [x28, #40]
    74d0:	add	x0, x0, x20
    74d4:	b	7160 <grub_menu_entry_run+0xc20>
    74d8:	cmp	w0, #0x3
    74dc:	b.eq	7690 <grub_menu_entry_run+0x1150>  // b.none
    74e0:	cmp	w0, #0x4
    74e4:	b.ne	76b8 <grub_menu_entry_run+0x1178>  // b.any
    74e8:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    74ec:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    74f0:	ldr	x1, [x1]
    74f4:	ldr	x0, [x0]
    74f8:	b	74a4 <grub_menu_entry_run+0xf64>
    74fc:	add	w20, w25, w21
    7500:	mov	x0, x23
    7504:	add	w1, w20, #0x1
    7508:	sxtw	x1, w1
    750c:	bl	0 <grub_realloc>
    7510:	mov	x23, x0
    7514:	cbz	x0, 699c <grub_menu_entry_run+0x45c>
    7518:	ldrsw	x3, [x28, #12]
    751c:	sxtw	x2, w21
    7520:	ldr	x1, [x22]
    7524:	add	x0, x0, w25, sxtw
    7528:	add	x1, x1, x3, lsl #2
    752c:	bl	0 <grub_memmove>
    7530:	strb	wzr, [x23, w20, sxtw]
    7534:	str	x23, [x28, #24]
    7538:	ldr	w0, [x28, #48]
    753c:	cbz	w0, 7730 <grub_menu_entry_run+0x11f0>
    7540:	mov	w21, #0x0                   	// #0
    7544:	mov	w20, #0x38                  	// #56
    7548:	umull	x2, w21, w20
    754c:	ldrsw	x1, [x22, #8]
    7550:	ldr	x3, [x28, #40]
    7554:	add	w21, w21, #0x1
    7558:	ldr	x0, [x22]
    755c:	add	x23, x3, x2
    7560:	ldr	x2, [x3, x2]
    7564:	add	x1, x0, x1, lsl #2
    7568:	bl	82b8 <grub_getstringwidth>
    756c:	sub	x2, x0, #0x1
    7570:	mov	w1, #0x1                   	// #1
    7574:	cbz	x0, 7584 <grub_menu_entry_run+0x1044>
    7578:	ldr	w1, [x23, #24]
    757c:	add	x2, x2, x1
    7580:	udiv	x1, x2, x1
    7584:	ldr	w0, [x28, #48]
    7588:	str	w1, [x23, #44]
    758c:	cmp	w21, w0
    7590:	b.cc	7548 <grub_menu_entry_run+0x1008>  // b.lo, b.ul, b.last
    7594:	ldr	w1, [x28, #12]
    7598:	mov	w23, #0x0                   	// #0
    759c:	str	w1, [x22, #8]
    75a0:	mov	w21, #0x38                  	// #56
    75a4:	cbnz	w0, 75b0 <grub_menu_entry_run+0x1070>
    75a8:	b	6888 <grub_menu_entry_run+0x348>
    75ac:	ldr	w1, [x22, #8]
    75b0:	umull	x25, w23, w21
    75b4:	ldr	x2, [x28, #40]
    75b8:	ldr	x0, [x22]
    75bc:	add	x20, x2, x25
    75c0:	ldr	x2, [x2, x25]
    75c4:	add	x1, x0, w1, sxtw #2
    75c8:	bl	82b8 <grub_getstringwidth>
    75cc:	sub	x1, x0, #0x1
    75d0:	mov	w7, #0x1                   	// #1
    75d4:	cbz	x0, 75e4 <grub_menu_entry_run+0x10a4>
    75d8:	ldr	w7, [x20, #24]
    75dc:	add	x1, x1, x7
    75e0:	udiv	x7, x1, x7
    75e4:	ldr	x1, [x28, #40]
    75e8:	mov	x0, x28
    75ec:	ldr	w2, [x28, #20]
    75f0:	mov	w5, #0x2                   	// #2
    75f4:	add	x1, x1, x25
    75f8:	mov	w4, #0x1                   	// #1
    75fc:	mov	w3, #0x0                   	// #0
    7600:	ldr	w8, [x1, #44]
    7604:	cmp	w8, w7
    7608:	b.ne	7618 <grub_menu_entry_run+0x10d8>  // b.any
    760c:	mov	w5, #0x1                   	// #1
    7610:	mov	w4, #0x0                   	// #0
    7614:	mov	w3, #0x0                   	// #0
    7618:	bl	54d0 <grub_show_menu+0x1210>
    761c:	add	w23, w23, #0x1
    7620:	ldr	w0, [x28, #48]
    7624:	cmp	w23, w0
    7628:	b.cc	75ac <grub_menu_entry_run+0x106c>  // b.lo, b.ul, b.last
    762c:	str	w19, [sp, #112]
    7630:	b	688c <grub_menu_entry_run+0x34c>
    7634:	ldr	x1, [x28, #40]
    7638:	mov	w0, #0x2192                	// #8594
    763c:	ldr	x1, [x1, x20]
    7640:	bl	9f48 <grub_putcode>
    7644:	b	71c0 <grub_menu_entry_run+0xc80>
    7648:	mov	w0, #0x20                  	// #32
    764c:	bl	9f48 <grub_putcode>
    7650:	b	7190 <grub_menu_entry_run+0xc50>
    7654:	sub	w0, w19, #0x20
    7658:	cmp	w0, #0x5e
    765c:	b.hi	6888 <grub_menu_entry_run+0x348>  // b.pmore
    7660:	add	x1, sp, #0x98
    7664:	mov	x0, x28
    7668:	mov	w2, #0x1                   	// #1
    766c:	strb	w19, [sp, #152]
    7670:	strb	wzr, [sp, #153]
    7674:	bl	5d48 <grub_show_menu+0x1a88>
    7678:	cbz	w0, 699c <grub_menu_entry_run+0x45c>
    767c:	str	w19, [sp, #112]
    7680:	b	688c <grub_menu_entry_run+0x34c>
    7684:	mov	x0, #0x1                   	// #1
    7688:	mov	x19, #0x0                   	// #0
    768c:	b	6b44 <grub_menu_entry_run+0x604>
    7690:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    7694:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    7698:	ldr	x1, [x1]
    769c:	ldr	x0, [x0]
    76a0:	b	74a4 <grub_menu_entry_run+0xf64>
    76a4:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    76a8:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    76ac:	ldr	x1, [x1]
    76b0:	ldr	x0, [x0]
    76b4:	b	74a4 <grub_menu_entry_run+0xf64>
    76b8:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    76bc:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    76c0:	ldr	x1, [x1]
    76c4:	ldr	x0, [x0]
    76c8:	b	74a4 <grub_menu_entry_run+0xf64>
    76cc:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    76d0:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    76d4:	ldr	x1, [x1]
    76d8:	ldr	x0, [x0]
    76dc:	b	74a4 <grub_menu_entry_run+0xf64>
    76e0:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    76e4:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    76e8:	ldr	x0, [x0]
    76ec:	ldr	x1, [x1]
    76f0:	ldr	x0, [x0]
    76f4:	bl	0 <grub_named_list_find>
    76f8:	cbz	x0, 741c <grub_menu_entry_run+0xedc>
    76fc:	ldr	x3, [x0, #32]
    7700:	mov	x2, #0x0                   	// #0
    7704:	mov	w1, #0x0                   	// #0
    7708:	blr	x3
    770c:	b	741c <grub_menu_entry_run+0xedc>
    7710:	mov	x27, x22
    7714:	b	6ba8 <grub_menu_entry_run+0x668>
    7718:	bl	0 <grub_print_error>
    771c:	str	w19, [sp, #112]
    7720:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    7724:	ldr	x0, [x0]
    7728:	str	wzr, [x0]
    772c:	b	688c <grub_menu_entry_run+0x34c>
    7730:	ldr	w0, [x28, #12]
    7734:	str	w0, [x22, #8]
    7738:	str	w19, [sp, #112]
    773c:	b	688c <grub_menu_entry_run+0x34c>
    7740:	sub	w0, w25, #0x2
    7744:	cmp	w0, #0xf
    7748:	b.ls	775c <grub_menu_entry_run+0x121c>  // b.plast
    774c:	sub	w2, w25, #0x8
    7750:	mov	x25, x2
    7754:	ubfiz	x26, x2, #2, #32
    7758:	b	70ec <grub_menu_entry_run+0xbac>
    775c:	mov	w2, w0
    7760:	ubfiz	x26, x0, #2, #32
    7764:	mov	w25, w0
    7768:	b	70ec <grub_menu_entry_run+0xbac>
    776c:	nop
	...
    7830:	sub	sp, sp, #0x60
    7834:	stp	x29, x30, [sp, #16]
    7838:	add	x29, sp, #0x10
    783c:	stp	x19, x20, [sp, #32]
    7840:	stp	x21, x22, [sp, #48]
    7844:	mov	w21, w1
    7848:	mov	w22, w2
    784c:	stp	x23, x24, [sp, #64]
    7850:	mov	x23, x3
    7854:	mov	w24, w4
    7858:	str	x25, [sp, #80]
    785c:	mov	x25, x0
    7860:	bl	0 <grub_strlen>
    7864:	add	x20, x0, #0x2
    7868:	lsl	x0, x20, #2
    786c:	bl	0 <grub_malloc>
    7870:	cbz	x0, 7904 <grub_menu_entry_run+0x13c4>
    7874:	mov	x19, x0
    7878:	mov	x1, x20
    787c:	mov	x2, x25
    7880:	mov	x4, #0x0                   	// #0
    7884:	mov	x3, #0xffffffffffffffff    	// #-1
    7888:	bl	beb0 <grub_utf8_to_ucs4>
    788c:	str	wzr, [x19, x0, lsl #2]
    7890:	add	x1, x19, x0, lsl #2
    7894:	cbnz	w24, 78e8 <grub_menu_entry_run+0x13a8>
    7898:	str	xzr, [sp]
    789c:	mov	x4, x23
    78a0:	mov	w3, w22
    78a4:	mov	w2, w21
    78a8:	mov	x0, x19
    78ac:	mov	w20, #0x0                   	// #0
    78b0:	mov	w7, #0x0                   	// #0
    78b4:	mov	w6, #0xffffffff            	// #-1
    78b8:	mov	w5, #0x0                   	// #0
    78bc:	bl	aee0 <grub_print_ucs4_menu>
    78c0:	mov	x0, x19
    78c4:	bl	0 <grub_free>
    78c8:	mov	w0, w20
    78cc:	ldp	x29, x30, [sp, #16]
    78d0:	ldp	x19, x20, [sp, #32]
    78d4:	ldp	x21, x22, [sp, #48]
    78d8:	ldp	x23, x24, [sp, #64]
    78dc:	ldr	x25, [sp, #80]
    78e0:	add	sp, sp, #0x60
    78e4:	ret
    78e8:	mov	x4, x23
    78ec:	mov	w3, w22
    78f0:	mov	w2, w21
    78f4:	mov	x0, x19
    78f8:	bl	af68 <grub_ucs4_count_lines>
    78fc:	mov	w20, w0
    7900:	b	78c0 <grub_menu_entry_run+0x1380>
    7904:	mov	w20, #0x0                   	// #0
    7908:	mov	w0, w20
    790c:	ldp	x29, x30, [sp, #16]
    7910:	ldp	x19, x20, [sp, #32]
    7914:	ldp	x21, x22, [sp, #48]
    7918:	ldp	x23, x24, [sp, #64]
    791c:	ldr	x25, [sp, #80]
    7920:	add	sp, sp, #0x60
    7924:	ret
    7928:	sub	sp, sp, #0x70
    792c:	stp	x29, x30, [sp, #16]
    7930:	add	x29, sp, #0x10
    7934:	stp	x19, x20, [sp, #32]
    7938:	mov	w20, w0
    793c:	stp	x21, x22, [sp, #48]
    7940:	mov	w21, w1
    7944:	stp	x23, x24, [sp, #64]
    7948:	stp	x27, x28, [sp, #96]
    794c:	mov	x27, x3
    7950:	cbz	x2, 7b14 <grub_menu_entry_run+0x15d4>
    7954:	ldr	x23, [x2]
    7958:	mov	x0, x23
    795c:	bl	0 <grub_strlen>
    7960:	mov	x22, x0
    7964:	lsl	x0, x0, #2
    7968:	bl	0 <grub_malloc>
    796c:	mov	x19, x0
    7970:	cbz	x0, 7af8 <grub_menu_entry_run+0x15b8>
    7974:	mov	x2, x23
    7978:	mov	x1, x22
    797c:	mov	x4, #0x0                   	// #0
    7980:	mov	x3, #0xffffffffffffffff    	// #-1
    7984:	bl	beb0 <grub_utf8_to_ucs4>
    7988:	mov	x28, x0
    798c:	mov	x0, x19
    7990:	tbnz	x28, #63, 7adc <grub_menu_entry_run+0x159c>
    7994:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    7998:	adrp	x3, 0 <grub_normal_free_menu-0x268>
    799c:	adrp	x2, 0 <grub_normal_free_menu-0x268>
    79a0:	stp	x25, x26, [sp, #80]
    79a4:	ldr	x0, [x27, #56]
    79a8:	ldr	x1, [x1]
    79ac:	ldr	x23, [x3]
    79b0:	ldr	x22, [x2]
    79b4:	ldr	x2, [x0, #88]
    79b8:	ldrb	w3, [x1]
    79bc:	ldrb	w1, [x1, #1]
    79c0:	ldrb	w26, [x23]
    79c4:	ldrb	w25, [x22]
    79c8:	strb	w3, [x23]
    79cc:	strb	w1, [x22]
    79d0:	cbz	x2, 79e0 <grub_menu_entry_run+0x14a0>
    79d4:	add	w1, w21, #0x1
    79d8:	blr	x2
    79dc:	ldr	x0, [x27, #56]
    79e0:	mov	w1, #0x0                   	// #0
    79e4:	ldr	w3, [x27, #16]
    79e8:	and	w20, w20, #0xffff
    79ec:	ldr	x2, [x0, #72]
    79f0:	lsl	x24, x28, #2
    79f4:	bfxil	w1, w3, #0, #16
    79f8:	bfi	w1, w20, #16, #16
    79fc:	blr	x2
    7a00:	add	x1, x19, x24
    7a04:	mov	x2, x19
    7a08:	mov	w3, #0x20                  	// #32
    7a0c:	cbz	x28, 7b20 <grub_menu_entry_run+0x15e0>
    7a10:	ldr	w4, [x2]
    7a14:	cmp	w4, #0x1b
    7a18:	and	w0, w4, #0xfffffffd
    7a1c:	ccmp	w4, #0xd, #0x4, ne  // ne = any
    7a20:	ccmp	w0, #0x8, #0x4, ne  // ne = any
    7a24:	b.ne	7a2c <grub_menu_entry_run+0x14ec>  // b.any
    7a28:	str	w3, [x2]
    7a2c:	add	x2, x2, #0x4
    7a30:	cmp	x1, x2
    7a34:	b.ne	7a10 <grub_menu_entry_run+0x14d0>  // b.any
    7a38:	ldr	w0, [x27, #8]
    7a3c:	cmp	w0, #0x1
    7a40:	b.le	7a5c <grub_menu_entry_run+0x151c>
    7a44:	ldr	x1, [x27, #56]
    7a48:	cmp	w21, #0x0
    7a4c:	mov	w2, #0x2a                  	// #42
    7a50:	mov	w0, #0x20                  	// #32
    7a54:	csel	w0, w2, w0, ne  // ne = any
    7a58:	bl	9f48 <grub_putcode>
    7a5c:	ldr	w3, [x27, #36]
    7a60:	mov	x0, x19
    7a64:	ldr	x4, [x27, #56]
    7a68:	str	xzr, [sp]
    7a6c:	mov	w2, #0x0                   	// #0
    7a70:	add	x1, x19, x24
    7a74:	mov	w7, #0x2192                	// #8594
    7a78:	mov	w6, #0x1                   	// #1
    7a7c:	mov	w5, #0x0                   	// #0
    7a80:	bl	aee0 <grub_print_ucs4_menu>
    7a84:	ldr	x0, [x27, #56]
    7a88:	ldr	x2, [x0, #88]
    7a8c:	cbz	x2, 7a9c <grub_menu_entry_run+0x155c>
    7a90:	mov	w1, #0x1                   	// #1
    7a94:	blr	x2
    7a98:	ldr	x0, [x27, #56]
    7a9c:	mov	w1, #0x0                   	// #0
    7aa0:	ldp	w2, w4, [x27, #16]
    7aa4:	ldr	x3, [x0, #72]
    7aa8:	add	w2, w2, w4
    7aac:	bfxil	w1, w2, #0, #16
    7ab0:	bfi	w1, w20, #16, #16
    7ab4:	blr	x3
    7ab8:	ldr	x0, [x27, #56]
    7abc:	strb	w26, [x23]
    7ac0:	strb	w25, [x22]
    7ac4:	ldr	x2, [x0, #88]
    7ac8:	cbz	x2, 7ad4 <grub_menu_entry_run+0x1594>
    7acc:	mov	w1, #0x1                   	// #1
    7ad0:	blr	x2
    7ad4:	ldp	x25, x26, [sp, #80]
    7ad8:	mov	x0, x19
    7adc:	ldp	x29, x30, [sp, #16]
    7ae0:	ldp	x19, x20, [sp, #32]
    7ae4:	ldp	x21, x22, [sp, #48]
    7ae8:	ldp	x23, x24, [sp, #64]
    7aec:	ldp	x27, x28, [sp, #96]
    7af0:	add	sp, sp, #0x70
    7af4:	b	0 <grub_free>
    7af8:	ldp	x29, x30, [sp, #16]
    7afc:	ldp	x19, x20, [sp, #32]
    7b00:	ldp	x21, x22, [sp, #48]
    7b04:	ldp	x23, x24, [sp, #64]
    7b08:	ldp	x27, x28, [sp, #96]
    7b0c:	add	sp, sp, #0x70
    7b10:	ret
    7b14:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    7b18:	ldr	x23, [x0]
    7b1c:	b	7958 <grub_menu_entry_run+0x1418>
    7b20:	mov	x24, #0x0                   	// #0
    7b24:	b	7a38 <grub_menu_entry_run+0x14f8>
	...
    7b48:	stp	x29, x30, [sp, #-48]!
    7b4c:	mov	x29, sp
    7b50:	stp	x21, x22, [sp, #32]
    7b54:	mov	w21, w0
    7b58:	ldr	x0, [x1, #56]
    7b5c:	stp	x19, x20, [sp, #16]
    7b60:	mov	x19, x1
    7b64:	ldrh	w1, [x1, #24]
    7b68:	ldr	x2, [x0, #72]
    7b6c:	lsl	w1, w1, #16
    7b70:	blr	x2
    7b74:	ldr	w0, [x19, #40]
    7b78:	sub	w0, w0, #0x2
    7b7c:	cmp	w0, #0x1
    7b80:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    7b84:	b.ls	7c2c <grub_menu_entry_run+0x16ec>  // b.plast
    7b88:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    7b8c:	ldr	x22, [x0]
    7b90:	ldr	x0, [x1]
    7b94:	ldr	x1, [x22]
    7b98:	blr	x1
    7b9c:	mov	w1, w21
    7ba0:	bl	0 <grub_xasprintf>
    7ba4:	mov	x20, x0
    7ba8:	cbz	x0, 7c3c <grub_menu_entry_run+0x16fc>
    7bac:	ldr	w0, [x19, #40]
    7bb0:	ldr	x3, [x19, #56]
    7bb4:	cbz	w0, 7c5c <grub_menu_entry_run+0x171c>
    7bb8:	cmp	w0, #0x3
    7bbc:	mov	w1, #0x3                   	// #3
    7bc0:	csel	w1, wzr, w1, eq  // eq = none
    7bc4:	cmp	w0, #0x3
    7bc8:	mov	w4, #0x0                   	// #0
    7bcc:	cset	w2, ne  // ne = any
    7bd0:	mov	x0, x20
    7bd4:	bl	7830 <grub_menu_entry_run+0x12f0>
    7bd8:	mov	x0, x20
    7bdc:	bl	0 <grub_free>
    7be0:	ldr	x0, [x19, #56]
    7be4:	mov	w1, #0x0                   	// #0
    7be8:	ldp	w2, w3, [x19, #12]
    7bec:	ldr	w4, [x19, #20]
    7bf0:	ldr	w5, [x19, #4]
    7bf4:	add	w3, w3, w4
    7bf8:	ldr	x4, [x0, #72]
    7bfc:	add	w2, w2, w5
    7c00:	bfxil	w1, w3, #0, #16
    7c04:	bfi	w1, w2, #16, #16
    7c08:	blr	x4
    7c0c:	ldr	x0, [x19, #56]
    7c10:	ldr	x1, [x0, #104]
    7c14:	cbz	x1, 7c4c <grub_menu_entry_run+0x170c>
    7c18:	ldp	x19, x20, [sp, #16]
    7c1c:	mov	x16, x1
    7c20:	ldp	x21, x22, [sp, #32]
    7c24:	ldp	x29, x30, [sp], #48
    7c28:	br	x16
    7c2c:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    7c30:	ldr	x22, [x0]
    7c34:	ldr	x0, [x1]
    7c38:	b	7b94 <grub_menu_entry_run+0x1654>
    7c3c:	bl	0 <grub_print_error>
    7c40:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    7c44:	ldr	x0, [x0]
    7c48:	str	wzr, [x0]
    7c4c:	ldp	x19, x20, [sp, #16]
    7c50:	ldp	x21, x22, [sp, #32]
    7c54:	ldp	x29, x30, [sp], #48
    7c58:	ret
    7c5c:	mov	w4, #0x1                   	// #1
    7c60:	mov	w1, #0x3                   	// #3
    7c64:	mov	w2, w4
    7c68:	mov	x0, x20
    7c6c:	bl	7830 <grub_menu_entry_run+0x12f0>
    7c70:	ldr	w1, [x19, #28]
    7c74:	cmp	w0, w1
    7c78:	b.le	7cd4 <grub_menu_entry_run+0x1794>
    7c7c:	mov	w0, #0x2                   	// #2
    7c80:	str	w0, [x19, #40]
    7c84:	mov	x0, x20
    7c88:	bl	0 <grub_free>
    7c8c:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    7c90:	ldr	x1, [x22]
    7c94:	ldr	x0, [x0]
    7c98:	blr	x1
    7c9c:	mov	w1, w21
    7ca0:	bl	0 <grub_xasprintf>
    7ca4:	ldr	x1, [x19, #56]
    7ca8:	mov	x20, x0
    7cac:	mov	x0, x1
    7cb0:	ldr	x1, [x1, #56]
    7cb4:	blr	x1
    7cb8:	sub	w0, w0, #0x1
    7cbc:	and	w0, w0, #0xffff
    7cc0:	cmp	w0, #0x8
    7cc4:	b.ls	7cec <grub_menu_entry_run+0x17ac>  // b.plast
    7cc8:	ldr	w0, [x19, #40]
    7ccc:	ldr	x3, [x19, #56]
    7cd0:	b	7bb8 <grub_menu_entry_run+0x1678>
    7cd4:	mov	w2, #0x1                   	// #1
    7cd8:	mov	w1, #0x3                   	// #3
    7cdc:	mov	w0, w2
    7ce0:	str	w2, [x19, #40]
    7ce4:	ldr	x3, [x19, #56]
    7ce8:	b	7bc4 <grub_menu_entry_run+0x1684>
    7cec:	mov	w2, #0x3                   	// #3
    7cf0:	mov	w1, #0x0                   	// #0
    7cf4:	mov	w0, w2
    7cf8:	str	w2, [x19, #40]
    7cfc:	ldr	x3, [x19, #56]
    7d00:	b	7bc4 <grub_menu_entry_run+0x1684>
    7d04:	nop
	...
    7d28:	stp	x29, x30, [sp, #-48]!
    7d2c:	mov	w4, #0x0                   	// #0
    7d30:	mov	x29, sp
    7d34:	ldp	w2, w3, [x1, #16]
    7d38:	stp	x19, x20, [sp, #16]
    7d3c:	mov	x19, x1
    7d40:	ldrh	w5, [x1, #12]
    7d44:	add	w2, w2, w3
    7d48:	ldr	w1, [x1, #32]
    7d4c:	mov	x20, x0
    7d50:	ldr	x0, [x19, #56]
    7d54:	add	w1, w1, #0x1
    7d58:	add	w2, w2, w1
    7d5c:	bfxil	w4, w2, #0, #16
    7d60:	ldr	x3, [x0, #72]
    7d64:	bfi	w4, w5, #16, #16
    7d68:	str	x21, [sp, #32]
    7d6c:	mov	w1, w4
    7d70:	blr	x3
    7d74:	ldr	w0, [x19, #8]
    7d78:	cmp	w0, #0x1
    7d7c:	b.eq	7d94 <grub_menu_entry_run+0x1854>  // b.none
    7d80:	ldr	w0, [x19]
    7d84:	ldr	x1, [x19, #56]
    7d88:	cbz	w0, 7e80 <grub_menu_entry_run+0x1940>
    7d8c:	mov	w0, #0x2191                	// #8593
    7d90:	bl	9f48 <grub_putcode>
    7d94:	ldr	w1, [x19]
    7d98:	mov	x0, x20
    7d9c:	bl	41d0 <grub_menu_get_entry>
    7da0:	mov	x21, x0
    7da4:	ldr	w2, [x19, #8]
    7da8:	cmp	w2, #0x0
    7dac:	b.le	7df0 <grub_menu_entry_run+0x18b0>
    7db0:	mov	w20, #0x0                   	// #0
    7db4:	nop
    7db8:	ldr	w1, [x19, #4]
    7dbc:	mov	x3, x19
    7dc0:	ldr	w0, [x19, #12]
    7dc4:	mov	x2, x21
    7dc8:	cmp	w1, w20
    7dcc:	add	w0, w20, w0
    7dd0:	cset	w1, eq  // eq = none
    7dd4:	add	w20, w20, #0x1
    7dd8:	bl	7928 <grub_menu_entry_run+0x13e8>
    7ddc:	cbz	x21, 7de4 <grub_menu_entry_run+0x18a4>
    7de0:	ldr	x21, [x21, #72]
    7de4:	ldr	w2, [x19, #8]
    7de8:	cmp	w2, w20
    7dec:	b.gt	7db8 <grub_menu_entry_run+0x1878>
    7df0:	ldp	w3, w4, [x19, #12]
    7df4:	mov	w1, #0x0                   	// #0
    7df8:	ldr	x0, [x19, #56]
    7dfc:	sub	w3, w3, #0x1
    7e00:	ldr	w6, [x19, #20]
    7e04:	add	w2, w3, w2
    7e08:	ldr	w5, [x19, #32]
    7e0c:	add	w4, w4, w6
    7e10:	add	w5, w5, #0x1
    7e14:	add	w4, w4, w5
    7e18:	ldr	x5, [x0, #72]
    7e1c:	bfxil	w1, w4, #0, #16
    7e20:	bfi	w1, w2, #16, #16
    7e24:	blr	x5
    7e28:	ldr	w0, [x19, #8]
    7e2c:	cmp	w0, #0x1
    7e30:	b.eq	7e8c <grub_menu_entry_run+0x194c>  // b.none
    7e34:	ldr	x1, [x19, #56]
    7e38:	cbz	x21, 7ea8 <grub_menu_entry_run+0x1968>
    7e3c:	mov	w0, #0x2193                	// #8595
    7e40:	bl	9f48 <grub_putcode>
    7e44:	ldr	x0, [x19, #56]
    7e48:	mov	w1, #0x0                   	// #0
    7e4c:	ldp	w2, w3, [x19, #12]
    7e50:	ldr	w4, [x19, #20]
    7e54:	ldr	w5, [x19, #4]
    7e58:	ldp	x19, x20, [sp, #16]
    7e5c:	add	w3, w3, w4
    7e60:	ldr	x21, [sp, #32]
    7e64:	add	w2, w2, w5
    7e68:	ldp	x29, x30, [sp], #48
    7e6c:	bfxil	w1, w3, #0, #16
    7e70:	ldr	x4, [x0, #72]
    7e74:	bfi	w1, w2, #16, #16
    7e78:	mov	x16, x4
    7e7c:	br	x16
    7e80:	mov	w0, #0x20                  	// #32
    7e84:	bl	9f48 <grub_putcode>
    7e88:	b	7d94 <grub_menu_entry_run+0x1854>
    7e8c:	ldr	w0, [x19]
    7e90:	ldr	x1, [x19, #56]
    7e94:	cbz	w0, 7e38 <grub_menu_entry_run+0x18f8>
    7e98:	cbz	x21, 7eb4 <grub_menu_entry_run+0x1974>
    7e9c:	mov	w0, #0x2195                	// #8597
    7ea0:	bl	9f48 <grub_putcode>
    7ea4:	b	7e44 <grub_menu_entry_run+0x1904>
    7ea8:	mov	w0, #0x20                  	// #32
    7eac:	bl	9f48 <grub_putcode>
    7eb0:	b	7e44 <grub_menu_entry_run+0x1904>
    7eb4:	mov	w0, #0x2191                	// #8593
    7eb8:	bl	9f48 <grub_putcode>
    7ebc:	b	7e44 <grub_menu_entry_run+0x1904>
    7ec0:	stp	x29, x30, [sp, #-64]!
    7ec4:	mov	x29, sp
    7ec8:	stp	x21, x22, [sp, #32]
    7ecc:	mov	x21, x0
    7ed0:	ldr	w0, [x0, #28]
    7ed4:	cmp	w0, #0x0
    7ed8:	b.le	7f60 <grub_menu_entry_run+0x1a20>
    7edc:	mov	w22, #0x0                   	// #0
    7ee0:	stp	x19, x20, [sp, #16]
    7ee4:	str	x23, [sp, #48]
    7ee8:	ldr	x0, [x21, #56]
    7eec:	and	w23, w23, #0xffff0000
    7ef0:	ldr	w1, [x21, #24]
    7ef4:	ldr	x2, [x0, #72]
    7ef8:	add	w1, w1, w22
    7efc:	bfi	w23, w1, #16, #16
    7f00:	mov	w1, w23
    7f04:	blr	x2
    7f08:	ldr	x20, [x21, #56]
    7f0c:	mov	x0, x20
    7f10:	ldr	x1, [x20, #56]
    7f14:	blr	x1
    7f18:	ands	w0, w0, #0xffff
    7f1c:	b.eq	7fb4 <grub_menu_entry_run+0x1a74>  // b.none
    7f20:	cmp	w0, #0x1
    7f24:	sub	w19, w0, #0x2
    7f28:	b.eq	7f48 <grub_menu_entry_run+0x1a08>  // b.none
    7f2c:	nop
    7f30:	sub	w19, w19, #0x1
    7f34:	mov	x1, x20
    7f38:	mov	w0, #0x20                  	// #32
    7f3c:	bl	9f48 <grub_putcode>
    7f40:	cmn	w19, #0x1
    7f44:	b.ne	7f30 <grub_menu_entry_run+0x19f0>  // b.any
    7f48:	ldr	w0, [x21, #28]
    7f4c:	add	w22, w22, #0x1
    7f50:	cmp	w0, w22
    7f54:	b.gt	7ee8 <grub_menu_entry_run+0x19a8>
    7f58:	ldp	x19, x20, [sp, #16]
    7f5c:	ldr	x23, [sp, #48]
    7f60:	ldr	x0, [x21, #56]
    7f64:	ldr	w5, [x21, #8]
    7f68:	ldrh	w2, [x21, #12]
    7f6c:	ldp	w1, w3, [x21, #16]
    7f70:	cmp	w5, #0x5
    7f74:	ldr	x4, [x0, #72]
    7f78:	b.gt	7f84 <grub_menu_entry_run+0x1a44>
    7f7c:	ldr	w6, [x21, #32]
    7f80:	cbz	w6, 7fbc <grub_menu_entry_run+0x1a7c>
    7f84:	add	w1, w1, w3
    7f88:	ldr	w3, [x21, #4]
    7f8c:	add	w2, w2, w3
    7f90:	bfi	w1, w2, #16, #16
    7f94:	blr	x4
    7f98:	ldr	x0, [x21, #56]
    7f9c:	ldr	x1, [x0, #104]
    7fa0:	cbz	x1, 8034 <grub_menu_entry_run+0x1af4>
    7fa4:	ldp	x21, x22, [sp, #32]
    7fa8:	mov	x16, x1
    7fac:	ldp	x29, x30, [sp], #64
    7fb0:	br	x16
    7fb4:	mov	w19, #0x4e                  	// #78
    7fb8:	b	7f30 <grub_menu_entry_run+0x19f0>
    7fbc:	add	w1, w1, w3
    7fc0:	add	w2, w2, w5
    7fc4:	add	w3, w1, #0x1
    7fc8:	sub	w2, w2, #0x1
    7fcc:	mov	w1, #0x0                   	// #0
    7fd0:	bfxil	w1, w3, #0, #16
    7fd4:	bfi	w1, w2, #16, #16
    7fd8:	blr	x4
    7fdc:	ldr	x1, [x21, #56]
    7fe0:	mov	w0, #0x20                  	// #32
    7fe4:	bl	9f48 <grub_putcode>
    7fe8:	str	wzr, [x21, #28]
    7fec:	ldr	w1, [x21, #8]
    7ff0:	ldr	x0, [x21, #48]
    7ff4:	add	w1, w1, #0x1
    7ff8:	str	w1, [x21, #8]
    7ffc:	mov	x1, x21
    8000:	bl	7d28 <grub_menu_entry_run+0x17e8>
    8004:	ldp	w1, w3, [x21, #16]
    8008:	ldr	x0, [x21, #56]
    800c:	add	w1, w1, w3
    8010:	ldrh	w2, [x21, #12]
    8014:	ldr	w3, [x21, #4]
    8018:	ldr	x4, [x0, #72]
    801c:	add	w2, w2, w3
    8020:	bfi	w1, w2, #16, #16
    8024:	blr	x4
    8028:	ldr	x0, [x21, #56]
    802c:	ldr	x1, [x0, #104]
    8030:	cbnz	x1, 7fa4 <grub_menu_entry_run+0x1a64>
    8034:	ldp	x21, x22, [sp, #32]
    8038:	ldp	x29, x30, [sp], #64
    803c:	ret
    8040:	stp	x29, x30, [sp, #-32]!
    8044:	mov	w2, w0
    8048:	mov	x29, sp
    804c:	stp	x19, x20, [sp, #16]
    8050:	mov	x19, x1
    8054:	ldr	w1, [x1]
    8058:	ldp	w5, w3, [x19, #4]
    805c:	sub	w4, w0, w1
    8060:	str	w4, [x19, #4]
    8064:	cmp	w4, w3
    8068:	ldr	x0, [x19, #48]
    806c:	b.ge	80dc <grub_menu_entry_run+0x1b9c>  // b.tcont
    8070:	tbnz	w4, #31, 8110 <grub_menu_entry_run+0x1bd0>
    8074:	ldr	w20, [x19, #12]
    8078:	add	w1, w1, w5
    807c:	add	w20, w5, w20
    8080:	bl	41d0 <grub_menu_get_entry>
    8084:	mov	x3, x19
    8088:	mov	x2, x0
    808c:	mov	w1, #0x0                   	// #0
    8090:	mov	w0, w20
    8094:	bl	7928 <grub_menu_entry_run+0x13e8>
    8098:	ldr	w20, [x19, #12]
    809c:	ldp	w1, w2, [x19]
    80a0:	ldr	x0, [x19, #48]
    80a4:	add	w1, w2, w1
    80a8:	add	w20, w2, w20
    80ac:	bl	41d0 <grub_menu_get_entry>
    80b0:	mov	x2, x0
    80b4:	mov	w1, #0x1                   	// #1
    80b8:	mov	w0, w20
    80bc:	mov	x3, x19
    80c0:	bl	7928 <grub_menu_entry_run+0x13e8>
    80c4:	ldr	x0, [x19, #56]
    80c8:	ldr	x1, [x0, #104]
    80cc:	cbnz	x1, 8100 <grub_menu_entry_run+0x1bc0>
    80d0:	ldp	x19, x20, [sp, #16]
    80d4:	ldp	x29, x30, [sp], #32
    80d8:	ret
    80dc:	sub	w3, w3, #0x1
    80e0:	sub	w1, w2, w3
    80e4:	stp	w1, w3, [x19]
    80e8:	tbnz	w3, #31, 8110 <grub_menu_entry_run+0x1bd0>
    80ec:	mov	x1, x19
    80f0:	bl	7d28 <grub_menu_entry_run+0x17e8>
    80f4:	ldr	x0, [x19, #56]
    80f8:	ldr	x1, [x0, #104]
    80fc:	cbz	x1, 80d0 <grub_menu_entry_run+0x1b90>
    8100:	ldp	x19, x20, [sp, #16]
    8104:	mov	x16, x1
    8108:	ldp	x29, x30, [sp], #32
    810c:	br	x16
    8110:	stp	w2, wzr, [x19]
    8114:	b	80ec <grub_menu_entry_run+0x1bac>
    8118:	stp	x29, x30, [sp, #-64]!
    811c:	mov	x29, sp
    8120:	stp	x19, x20, [sp, #16]
    8124:	mov	x19, x2
    8128:	mov	w20, w3
    812c:	ldr	x2, [x2, #88]
    8130:	stp	x21, x22, [sp, #32]
    8134:	mov	w22, w0
    8138:	stp	x23, x24, [sp, #48]
    813c:	mov	w21, w1
    8140:	cbz	x2, 8150 <grub_menu_entry_run+0x1c10>
    8144:	mov	x0, x19
    8148:	mov	w1, #0x1                   	// #1
    814c:	blr	x2
    8150:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    8154:	ldr	x23, [x0]
    8158:	ldr	x1, [x23]
    815c:	cbz	w21, 8190 <grub_menu_entry_run+0x1c50>
    8160:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    8164:	ldr	x0, [x0]
    8168:	blr	x1
    816c:	mov	w4, w20
    8170:	mov	x3, x19
    8174:	ldp	x19, x20, [sp, #16]
    8178:	mov	w2, #0x6                   	// #6
    817c:	ldp	x21, x22, [sp, #32]
    8180:	mov	w1, w2
    8184:	ldp	x23, x24, [sp, #48]
    8188:	ldp	x29, x30, [sp], #64
    818c:	b	7830 <grub_menu_entry_run+0x12f0>
    8190:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    8194:	mov	w24, #0x0                   	// #0
    8198:	ldr	x0, [x0]
    819c:	blr	x1
    81a0:	mov	w2, #0x2193                	// #8595
    81a4:	mov	w1, #0x2191                	// #8593
    81a8:	bl	0 <grub_xasprintf>
    81ac:	mov	x21, x0
    81b0:	cbz	x0, 8200 <grub_menu_entry_run+0x1cc0>
    81b4:	mov	w2, #0x6                   	// #6
    81b8:	mov	w4, w20
    81bc:	mov	w1, w2
    81c0:	mov	x3, x19
    81c4:	bl	7830 <grub_menu_entry_run+0x12f0>
    81c8:	mov	w24, w0
    81cc:	mov	x0, x21
    81d0:	bl	0 <grub_free>
    81d4:	cbnz	w22, 8218 <grub_menu_entry_run+0x1cd8>
    81d8:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    81dc:	ldr	x1, [x23]
    81e0:	ldr	x0, [x0]
    81e4:	blr	x1
    81e8:	mov	w2, #0x6                   	// #6
    81ec:	mov	w4, w20
    81f0:	mov	x3, x19
    81f4:	mov	w1, w2
    81f8:	bl	7830 <grub_menu_entry_run+0x12f0>
    81fc:	add	w24, w24, w0
    8200:	mov	w0, w24
    8204:	ldp	x19, x20, [sp, #16]
    8208:	ldp	x21, x22, [sp, #32]
    820c:	ldp	x23, x24, [sp, #48]
    8210:	ldp	x29, x30, [sp], #64
    8214:	ret
    8218:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    821c:	ldr	x1, [x23]
    8220:	ldr	x0, [x0]
    8224:	b	81e4 <grub_menu_entry_run+0x1ca4>
	...
    8250:	stp	x29, x30, [sp, #-32]!
    8254:	mov	x29, sp
    8258:	stp	x19, x20, [sp, #16]
    825c:	mov	x19, x0
    8260:	ldr	x20, [x0, #56]
    8264:	ldr	x2, [x20, #96]
    8268:	cbz	x2, 827c <grub_menu_entry_run+0x1d3c>
    826c:	mov	x0, x20
    8270:	mov	w1, #0x1                   	// #1
    8274:	blr	x2
    8278:	ldr	x20, [x19, #56]
    827c:	ldr	x1, [x20, #80]
    8280:	cbz	x1, 829c <grub_menu_entry_run+0x1d5c>
    8284:	mov	x0, x20
    8288:	blr	x1
    828c:	mov	x0, x19
    8290:	ldp	x19, x20, [sp, #16]
    8294:	ldp	x29, x30, [sp], #32
    8298:	b	0 <grub_free>
    829c:	mov	x1, x20
    82a0:	mov	w0, #0xa                   	// #10
    82a4:	bl	9f48 <grub_putcode>
    82a8:	ldr	x1, [x20, #104]
    82ac:	cbnz	x1, 8284 <grub_menu_entry_run+0x1d44>
    82b0:	b	828c <grub_menu_entry_run+0x1d4c>
    82b4:	nop

00000000000082b8 <grub_getstringwidth>:
    82b8:	stp	x29, x30, [sp, #-96]!
    82bc:	cmp	x0, x1
    82c0:	mov	x29, sp
    82c4:	str	x23, [sp, #48]
    82c8:	b.cs	83d0 <grub_getstringwidth+0x118>  // b.hs, b.nlast
    82cc:	stp	x19, x20, [sp, #16]
    82d0:	mov	x19, x0
    82d4:	mov	x20, #0x0                   	// #0
    82d8:	stp	x21, x22, [sp, #32]
    82dc:	mov	x22, x1
    82e0:	mov	x21, x2
    82e4:	b	8310 <grub_getstringwidth+0x58>
    82e8:	blr	x4
    82ec:	mov	x3, x0
    82f0:	ldrh	w0, [sp, #70]
    82f4:	add	x20, x20, x3
    82f8:	mov	x23, x20
    82fc:	ubfx	x0, x0, #3, #8
    8300:	cmp	w0, #0x2
    8304:	b.hi	83a0 <grub_getstringwidth+0xe8>  // b.pmore
    8308:	cmp	x22, x19
    830c:	b.ls	83b0 <grub_getstringwidth+0xf8>  // b.plast
    8310:	ldrh	w3, [sp, #70]
    8314:	sub	x1, x22, x19
    8318:	add	x2, sp, #0x40
    831c:	mov	x0, x19
    8320:	and	w3, w3, #0xfffff807
    8324:	asr	x1, x1, #2
    8328:	strh	w3, [sp, #70]
    832c:	bl	c228 <grub_unicode_aglomerate_comb>
    8330:	mov	x4, x0
    8334:	ldr	w2, [sp, #64]
    8338:	add	x1, sp, #0x40
    833c:	mov	x0, x21
    8340:	add	x19, x19, x4, lsl #2
    8344:	and	w3, w2, #0x7fffff
    8348:	cmp	w3, #0x9
    834c:	b.eq	83c8 <grub_getstringwidth+0x110>  // b.none
    8350:	ldr	x4, [x21, #48]
    8354:	mov	x3, #0x1                   	// #1
    8358:	cbnz	x4, 82e8 <grub_getstringwidth+0x30>
    835c:	ldr	w1, [x21, #120]
    8360:	and	w0, w2, #0x7fffff
    8364:	and	w2, w1, #0x38
    8368:	and	w1, w1, #0x30
    836c:	cmp	w2, #0x20
    8370:	ccmp	w1, #0x10, #0x4, ne  // ne = any
    8374:	b.ne	82f0 <grub_getstringwidth+0x38>  // b.any
    8378:	bl	c088 <grub_unicode_get_comb_type>
    837c:	cmp	w0, #0x0
    8380:	ldrh	w0, [sp, #70]
    8384:	cset	x3, eq  // eq = none
    8388:	add	x20, x20, x3
    838c:	mov	x23, x20
    8390:	ubfx	x0, x0, #3, #8
    8394:	cmp	w0, #0x2
    8398:	b.ls	8308 <grub_getstringwidth+0x50>  // b.plast
    839c:	nop
    83a0:	ldr	x0, [sp, #88]
    83a4:	bl	0 <grub_free>
    83a8:	cmp	x22, x19
    83ac:	b.hi	8310 <grub_getstringwidth+0x58>  // b.pmore
    83b0:	mov	x0, x23
    83b4:	ldp	x19, x20, [sp, #16]
    83b8:	ldp	x21, x22, [sp, #32]
    83bc:	ldr	x23, [sp, #48]
    83c0:	ldp	x29, x30, [sp], #96
    83c4:	ret
    83c8:	mov	x3, #0x8                   	// #8
    83cc:	b	82f0 <grub_getstringwidth+0x38>
    83d0:	mov	x23, #0x0                   	// #0
    83d4:	mov	x0, x23
    83d8:	ldr	x23, [sp, #48]
    83dc:	ldp	x29, x30, [sp], #96
    83e0:	ret
    83e4:	nop

00000000000083e8 <grub_print_message_indented>:
    83e8:	mov	w4, #0x0                   	// #0
    83ec:	b	7830 <grub_menu_entry_run+0x12f0>

00000000000083f0 <grub_menu_init_page>:
    83f0:	stp	x29, x30, [sp, #-128]!
    83f4:	mov	x29, sp
    83f8:	stp	x25, x26, [sp, #64]
    83fc:	mov	x25, x2
    8400:	mov	x26, x3
    8404:	ldr	x2, [x3, #56]
    8408:	stp	x19, x20, [sp, #16]
    840c:	mov	w19, #0x2                   	// #2
    8410:	stp	x21, x22, [sp, #32]
    8414:	mov	w20, #0x1                   	// #1
    8418:	mov	w22, w1
    841c:	stp	x23, x24, [sp, #48]
    8420:	mov	w21, w0
    8424:	mov	x0, x3
    8428:	str	w19, [x25, #8]
    842c:	str	w20, [x25, #24]
    8430:	blr	x2
    8434:	ands	w0, w0, #0xffff
    8438:	ldr	x1, [x26, #56]
    843c:	sub	w0, w0, #0x5
    8440:	mov	w3, #0x4b                  	// #75
    8444:	mov	w2, #0x4                   	// #4
    8448:	csel	w0, w0, w3, ne  // ne = any
    844c:	str	w2, [x25, #4]
    8450:	str	w0, [x25, #12]
    8454:	mov	x0, x26
    8458:	str	w19, [x25, #20]
    845c:	blr	x1
    8460:	lsr	w0, w0, #16
    8464:	ldr	w2, [x25, #20]
    8468:	cmp	w0, #0x0
    846c:	ldr	w1, [x25, #4]
    8470:	sub	w0, w0, #0x3
    8474:	mov	w3, #0x15                  	// #21
    8478:	csel	w0, w0, w3, ne  // ne = any
    847c:	add	w1, w1, w2
    8480:	mov	w3, w20
    8484:	sub	w0, w0, w1
    8488:	str	w0, [x25]
    848c:	mov	w1, w22
    8490:	mov	x2, x26
    8494:	mov	w0, w21
    8498:	bl	8118 <grub_menu_entry_run+0x1bd8>
    849c:	ldr	w1, [x25]
    84a0:	mov	w19, w0
    84a4:	sub	w0, w1, w0
    84a8:	cmp	w0, #0x2
    84ac:	ldr	w0, [x25, #12]
    84b0:	b.le	84bc <grub_menu_init_page+0xcc>
    84b4:	cmp	w0, #0x9
    84b8:	b.gt	869c <grub_menu_init_page+0x2ac>
    84bc:	ldp	w3, w2, [x25, #4]
    84c0:	add	w6, w1, #0x4
    84c4:	add	w7, w0, #0x1
    84c8:	sub	w8, w6, w19
    84cc:	sub	w3, w3, #0x2
    84d0:	sub	w2, w2, #0x1
    84d4:	stp	w6, w3, [x25]
    84d8:	cmp	w8, #0x2
    84dc:	stp	w2, w7, [x25, #8]
    84e0:	b.gt	8688 <grub_menu_init_page+0x298>
    84e4:	add	w0, w0, #0x3
    84e8:	add	w1, w1, #0x6
    84ec:	cmp	w0, #0x0
    84f0:	sub	w3, w3, #0x1
    84f4:	sub	w2, w2, #0x1
    84f8:	mov	w6, #0x1                   	// #1
    84fc:	csel	w0, w6, w0, le
    8500:	stp	w1, w3, [x25]
    8504:	stp	w2, w0, [x25, #8]
    8508:	str	wzr, [x25, #24]
    850c:	str	wzr, [sp, #108]
    8510:	sub	w0, w1, w19
    8514:	cmp	w0, #0x2
    8518:	b.gt	86ac <grub_menu_init_page+0x2bc>
    851c:	ldr	w3, [x25, #20]
    8520:	add	w2, w1, #0x1
    8524:	sub	w0, w2, w19
    8528:	cmp	w3, #0x2
    852c:	b.eq	8914 <grub_menu_init_page+0x524>  // b.none
    8530:	adrp	x6, 0 <grub_normal_free_menu-0x268>
    8534:	adrp	x3, 0 <grub_normal_free_menu-0x268>
    8538:	ldr	w1, [x25, #4]
    853c:	cmp	w0, #0x1
    8540:	ldr	x23, [x6]
    8544:	sub	w1, w1, #0x1
    8548:	ldr	x24, [x3]
    854c:	stp	w2, w1, [x25]
    8550:	ldrb	w1, [x23]
    8554:	str	w1, [sp, #112]
    8558:	ldrb	w1, [x24]
    855c:	str	w1, [sp, #116]
    8560:	b.le	88fc <grub_menu_init_page+0x50c>
    8564:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    8568:	adrp	x3, 0 <grub_normal_free_menu-0x268>
    856c:	str	w0, [x25]
    8570:	mov	w0, #0x1                   	// #1
    8574:	ldr	x20, [x1]
    8578:	str	w0, [sp, #120]
    857c:	ldr	x0, [x3]
    8580:	ldrb	w1, [sp, #112]
    8584:	strb	w1, [x20]
    8588:	ldrb	w1, [sp, #116]
    858c:	strb	w1, [x20, #1]
    8590:	bl	0 <grub_env_get>
    8594:	mov	x1, x0
    8598:	mov	x0, x20
    859c:	bl	2fb0 <grub_parse_color_name_pair>
    85a0:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    85a4:	ldr	x0, [x0]
    85a8:	bl	0 <grub_env_get>
    85ac:	mov	x1, x0
    85b0:	add	x0, x20, #0x1
    85b4:	bl	2fb0 <grub_parse_color_name_pair>
    85b8:	ldr	x1, [x26, #80]
    85bc:	cbz	x1, 8934 <grub_menu_init_page+0x544>
    85c0:	mov	x0, x26
    85c4:	blr	x1
    85c8:	ldr	w3, [x25, #24]
    85cc:	ldrb	w1, [x20]
    85d0:	ldrb	w0, [x20, #1]
    85d4:	strb	w1, [x23]
    85d8:	strb	w0, [x24]
    85dc:	cbnz	w3, 8738 <grub_menu_init_page+0x348>
    85e0:	ldrb	w0, [sp, #112]
    85e4:	strb	w0, [x23]
    85e8:	ldrb	w0, [sp, #116]
    85ec:	strb	w0, [x24]
    85f0:	ldp	w0, w1, [x25]
    85f4:	add	w1, w1, w0
    85f8:	ldr	w0, [sp, #108]
    85fc:	add	w1, w1, w3
    8600:	add	w20, w1, w0
    8604:	ldr	w0, [sp, #120]
    8608:	str	w20, [x25, #16]
    860c:	cbz	w0, 8644 <grub_menu_init_page+0x254>
    8610:	ldr	x2, [x26, #72]
    8614:	lsl	w20, w20, #16
    8618:	orr	w1, w20, #0x1
    861c:	mov	x0, x26
    8620:	blr	x2
    8624:	mov	w1, w22
    8628:	mov	w0, w21
    862c:	mov	x2, x26
    8630:	mov	w3, #0x0                   	// #0
    8634:	bl	8118 <grub_menu_entry_run+0x1bd8>
    8638:	ldr	w0, [x25, #16]
    863c:	add	w19, w0, w19
    8640:	str	w19, [x25, #16]
    8644:	ldr	x1, [x26, #56]
    8648:	mov	x0, x26
    864c:	blr	x1
    8650:	ands	w0, w0, #0xffff
    8654:	ldp	w1, w3, [x25, #8]
    8658:	sub	w0, w0, #0x1
    865c:	mov	w2, #0x4f                  	// #79
    8660:	csel	w0, w0, w2, ne  // ne = any
    8664:	add	w1, w1, w3
    8668:	sub	w0, w0, w1
    866c:	ldp	x19, x20, [sp, #16]
    8670:	ldp	x21, x22, [sp, #32]
    8674:	ldp	x23, x24, [sp, #48]
    8678:	str	w0, [x25, #28]
    867c:	ldp	x25, x26, [sp, #64]
    8680:	ldp	x29, x30, [sp], #128
    8684:	ret
    8688:	cmp	w7, #0x9
    868c:	b.le	84e4 <grub_menu_init_page+0xf4>
    8690:	mov	w1, w6
    8694:	str	wzr, [sp, #108]
    8698:	b	8510 <grub_menu_init_page+0x120>
    869c:	str	w20, [sp, #108]
    86a0:	sub	w0, w1, w19
    86a4:	cmp	w0, #0x2
    86a8:	b.le	851c <grub_menu_init_page+0x12c>
    86ac:	adrp	x3, 0 <grub_normal_free_menu-0x268>
    86b0:	adrp	x6, 0 <grub_normal_free_menu-0x268>
    86b4:	adrp	x7, 0 <grub_normal_free_menu-0x268>
    86b8:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    86bc:	ldr	x24, [x3]
    86c0:	str	w0, [x25]
    86c4:	ldr	x23, [x6]
    86c8:	mov	w0, #0x1                   	// #1
    86cc:	ldr	x20, [x1]
    86d0:	str	w0, [sp, #120]
    86d4:	ldrb	w2, [x24]
    86d8:	ldr	x0, [x7]
    86dc:	strb	w2, [x20, #1]
    86e0:	ldrb	w1, [x23]
    86e4:	strb	w1, [x20]
    86e8:	stp	w1, w2, [sp, #112]
    86ec:	bl	0 <grub_env_get>
    86f0:	mov	x1, x0
    86f4:	mov	x0, x20
    86f8:	bl	2fb0 <grub_parse_color_name_pair>
    86fc:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    8700:	ldr	x0, [x0]
    8704:	bl	0 <grub_env_get>
    8708:	mov	x1, x0
    870c:	add	x0, x20, #0x1
    8710:	bl	2fb0 <grub_parse_color_name_pair>
    8714:	ldr	w1, [sp, #108]
    8718:	mov	x0, x26
    871c:	bl	338 <grub_normal_init_page>
    8720:	ldr	w3, [x25, #24]
    8724:	ldrb	w1, [x20]
    8728:	ldrb	w0, [x20, #1]
    872c:	strb	w1, [x23]
    8730:	strb	w0, [x24]
    8734:	cbz	w3, 85e0 <grub_menu_init_page+0x1f0>
    8738:	ldr	x2, [x26, #88]
    873c:	stp	x27, x28, [sp, #80]
    8740:	cbz	x2, 8750 <grub_menu_init_page+0x360>
    8744:	mov	x0, x26
    8748:	mov	w1, #0x1                   	// #1
    874c:	blr	x2
    8750:	ldp	w3, w6, [x25, #4]
    8754:	mov	w1, #0x0                   	// #0
    8758:	ldr	x7, [x26, #72]
    875c:	sub	w6, w6, #0x1
    8760:	sub	w3, w3, #0x1
    8764:	mov	x0, x26
    8768:	bfxil	w1, w6, #0, #16
    876c:	mov	w20, #0x0                   	// #0
    8770:	bfi	w1, w3, #16, #16
    8774:	blr	x7
    8778:	mov	w0, #0x250f                	// #9487
    877c:	mov	x1, x26
    8780:	bl	9f48 <grub_putcode>
    8784:	ldr	w0, [x25, #12]
    8788:	tbnz	w0, #31, 87ac <grub_menu_init_page+0x3bc>
    878c:	nop
    8790:	mov	w0, #0x2501                	// #9473
    8794:	mov	x1, x26
    8798:	bl	9f48 <grub_putcode>
    879c:	add	w20, w20, #0x1
    87a0:	ldr	w0, [x25, #12]
    87a4:	cmp	w20, w0
    87a8:	b.le	8790 <grub_menu_init_page+0x3a0>
    87ac:	mov	x1, x26
    87b0:	mov	w0, #0x2513                	// #9491
    87b4:	bl	9f48 <grub_putcode>
    87b8:	mov	w20, #0x0                   	// #0
    87bc:	ldr	w3, [x25]
    87c0:	cmp	w3, #0x0
    87c4:	b.le	884c <grub_menu_init_page+0x45c>
    87c8:	ldp	w1, w6, [x25, #4]
    87cc:	and	w3, w20, #0xffff
    87d0:	ldr	x7, [x26, #72]
    87d4:	sub	w6, w6, #0x1
    87d8:	add	w1, w1, w20, uxth
    87dc:	mov	x0, x26
    87e0:	bfxil	w27, w6, #0, #16
    87e4:	str	w3, [sp, #124]
    87e8:	bfi	w27, w1, #16, #16
    87ec:	add	w20, w20, #0x1
    87f0:	mov	w1, w27
    87f4:	blr	x7
    87f8:	mov	x1, x26
    87fc:	mov	w0, #0x2503                	// #9475
    8800:	bl	9f48 <grub_putcode>
    8804:	ldp	w6, w1, [x25, #4]
    8808:	mov	x0, x26
    880c:	ldr	w7, [x25, #12]
    8810:	ldr	w3, [sp, #124]
    8814:	add	w1, w1, w7
    8818:	add	w3, w3, w6
    881c:	add	w1, w1, #0x1
    8820:	ldr	x6, [x26, #72]
    8824:	bfxil	w28, w1, #0, #16
    8828:	bfi	w28, w3, #16, #16
    882c:	mov	w1, w28
    8830:	blr	x6
    8834:	mov	x1, x26
    8838:	mov	w0, #0x2503                	// #9475
    883c:	bl	9f48 <grub_putcode>
    8840:	ldr	w3, [x25]
    8844:	cmp	w20, w3
    8848:	b.lt	87c8 <grub_menu_init_page+0x3d8>  // b.tstop
    884c:	ldp	w2, w6, [x25, #4]
    8850:	mov	w1, #0x0                   	// #0
    8854:	ldr	x7, [x26, #72]
    8858:	sub	w6, w6, #0x1
    885c:	add	w3, w2, w3
    8860:	mov	x0, x26
    8864:	bfxil	w1, w6, #0, #16
    8868:	mov	w27, #0x0                   	// #0
    886c:	bfi	w1, w3, #16, #16
    8870:	blr	x7
    8874:	mov	w0, #0x2517                	// #9495
    8878:	mov	x1, x26
    887c:	bl	9f48 <grub_putcode>
    8880:	ldr	w0, [x25, #12]
    8884:	tbnz	w0, #31, 88a4 <grub_menu_init_page+0x4b4>
    8888:	mov	w0, #0x2501                	// #9473
    888c:	mov	x1, x26
    8890:	bl	9f48 <grub_putcode>
    8894:	add	w27, w27, #0x1
    8898:	ldr	w0, [x25, #12]
    889c:	cmp	w27, w0
    88a0:	b.le	8888 <grub_menu_init_page+0x498>
    88a4:	mov	x1, x26
    88a8:	mov	w0, #0x251b                	// #9499
    88ac:	bl	9f48 <grub_putcode>
    88b0:	ldr	x2, [x26, #88]
    88b4:	cbz	x2, 88c4 <grub_menu_init_page+0x4d4>
    88b8:	mov	x0, x26
    88bc:	mov	w1, #0x1                   	// #1
    88c0:	blr	x2
    88c4:	ldp	w6, w2, [x25]
    88c8:	mov	w1, #0x0                   	// #0
    88cc:	ldr	w3, [x25, #8]
    88d0:	mov	x0, x26
    88d4:	add	w2, w2, w6
    88d8:	ldr	x6, [x26, #72]
    88dc:	sub	w3, w3, #0x1
    88e0:	add	w2, w2, #0x1
    88e4:	bfxil	w1, w3, #0, #16
    88e8:	bfi	w1, w2, #16, #16
    88ec:	blr	x6
    88f0:	ldr	w3, [x25, #24]
    88f4:	ldp	x27, x28, [sp, #80]
    88f8:	b	85e0 <grub_menu_init_page+0x1f0>
    88fc:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    8900:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    8904:	str	wzr, [sp, #120]
    8908:	ldr	x20, [x1]
    890c:	ldr	x0, [x0]
    8910:	b	8580 <grub_menu_init_page+0x190>
    8914:	mov	w3, #0x1                   	// #1
    8918:	str	w2, [x25]
    891c:	str	w3, [x25, #20]
    8920:	cmp	w0, #0x2
    8924:	b.gt	86ac <grub_menu_init_page+0x2bc>
    8928:	add	w2, w1, #0x2
    892c:	sub	w0, w2, w19
    8930:	b	8530 <grub_menu_init_page+0x140>
    8934:	mov	x1, x26
    8938:	mov	w0, #0xa                   	// #10
    893c:	bl	9f48 <grub_putcode>
    8940:	ldr	x1, [x26, #104]
    8944:	cbnz	x1, 85c0 <grub_menu_init_page+0x1d0>
    8948:	b	85c8 <grub_menu_init_page+0x1d8>
    894c:	nop
	...

0000000000008978 <grub_menu_try_text>:
    8978:	stp	x29, x30, [sp, #-64]!
    897c:	mov	x29, sp
    8980:	stp	x21, x22, [sp, #32]
    8984:	mov	x21, x0
    8988:	mov	x22, x2
    898c:	mov	x0, #0x30                  	// #48
    8990:	stp	x23, x24, [sp, #48]
    8994:	mov	w24, w1
    8998:	mov	w23, w3
    899c:	bl	0 <grub_zalloc>
    89a0:	cbz	x0, 8a78 <grub_menu_try_text+0x100>
    89a4:	stp	x19, x20, [sp, #16]
    89a8:	mov	x20, x0
    89ac:	mov	x0, #0x40                  	// #64
    89b0:	bl	0 <grub_zalloc>
    89b4:	mov	x19, x0
    89b8:	cbz	x0, 8a94 <grub_menu_try_text+0x11c>
    89bc:	adrp	x2, 0 <grub_normal_free_menu-0x268>
    89c0:	adrp	x3, 0 <grub_normal_free_menu-0x268>
    89c4:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    89c8:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    89cc:	ldr	x2, [x2]
    89d0:	str	x21, [x19, #56]
    89d4:	ldr	x3, [x3]
    89d8:	str	x2, [x20, #24]
    89dc:	ldr	x1, [x1]
    89e0:	stp	x19, x3, [x20, #8]
    89e4:	ldr	x0, [x0]
    89e8:	ldr	x2, [x21, #96]
    89ec:	stp	x1, x0, [x20, #32]
    89f0:	stp	wzr, w24, [x19]
    89f4:	str	x22, [x19, #48]
    89f8:	cbz	x2, 8a0c <grub_menu_try_text+0x94>
    89fc:	mov	x0, x21
    8a00:	mov	w1, #0x0                   	// #0
    8a04:	blr	x2
    8a08:	ldr	x21, [x19, #56]
    8a0c:	mov	w0, w23
    8a10:	mov	w1, #0x0                   	// #0
    8a14:	mov	x3, x21
    8a18:	add	x2, x19, #0x8
    8a1c:	bl	83f0 <grub_menu_init_page>
    8a20:	ldp	w1, w0, [x19, #4]
    8a24:	cmp	w0, w1
    8a28:	b.gt	8a3c <grub_menu_try_text+0xc4>
    8a2c:	sub	w0, w0, #0x1
    8a30:	str	w0, [x19, #4]
    8a34:	sub	w0, w1, w0
    8a38:	str	w0, [x19]
    8a3c:	mov	x0, x22
    8a40:	mov	x1, x19
    8a44:	bl	7d28 <grub_menu_entry_run+0x17e8>
    8a48:	ldr	x0, [x19, #56]
    8a4c:	ldr	x1, [x0, #104]
    8a50:	cbz	x1, 8a58 <grub_menu_try_text+0xe0>
    8a54:	blr	x1
    8a58:	mov	x0, x20
    8a5c:	bl	42a0 <grub_menu_register_viewer>
    8a60:	ldp	x19, x20, [sp, #16]
    8a64:	mov	w0, #0x0                   	// #0
    8a68:	ldp	x21, x22, [sp, #32]
    8a6c:	ldp	x23, x24, [sp, #48]
    8a70:	ldp	x29, x30, [sp], #64
    8a74:	ret
    8a78:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    8a7c:	ldp	x21, x22, [sp, #32]
    8a80:	ldr	x0, [x0]
    8a84:	ldp	x23, x24, [sp, #48]
    8a88:	ldr	w0, [x0]
    8a8c:	ldp	x29, x30, [sp], #64
    8a90:	ret
    8a94:	mov	x0, x20
    8a98:	bl	0 <grub_free>
    8a9c:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    8aa0:	ldp	x19, x20, [sp, #16]
    8aa4:	ldr	x0, [x0]
    8aa8:	ldr	w0, [x0]
    8aac:	b	8a68 <grub_menu_try_text+0xf0>
	...

0000000000008ad8 <grub_get_human_size>:
    8ad8:	stp	x29, x30, [sp, #-64]!
    8adc:	adrp	x2, 0 <grub_normal_free_menu-0x268>
    8ae0:	mov	x29, sp
    8ae4:	stp	x21, x22, [sp, #32]
    8ae8:	mov	w21, w1
    8aec:	cmp	w21, #0x2
    8af0:	ldr	x1, [x2]
    8af4:	stp	x19, x20, [sp, #16]
    8af8:	mov	x22, x0
    8afc:	ldr	x3, [x1]
    8b00:	b.eq	8c18 <grub_get_human_size+0x140>  // b.none
    8b04:	add	x2, x0, x0, lsl #1
    8b08:	mov	x0, #0x8fff                	// #36863
    8b0c:	movk	x0, #0x1, lsl #16
    8b10:	add	x2, x22, x2, lsl #3
    8b14:	cmp	x0, x2, lsl #2
    8b18:	lsl	x19, x2, #2
    8b1c:	b.cs	8bc0 <grub_get_human_size+0xe8>  // b.hs, b.nlast
    8b20:	mov	x4, #0x8fff                	// #36863
    8b24:	mov	w20, #0x0                   	// #0
    8b28:	movk	x4, #0x1, lsl #16
    8b2c:	nop
    8b30:	add	x2, x19, #0x200
    8b34:	add	w20, w20, #0x1
    8b38:	cmp	x4, x2, lsr #10
    8b3c:	lsr	x19, x2, #10
    8b40:	b.cc	8b30 <grub_get_human_size+0x58>  // b.lo, b.ul, b.last
    8b44:	ubfiz	x1, x21, #1, #32
    8b48:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    8b4c:	add	x1, x1, w21, uxtw
    8b50:	ldr	x0, [x0]
    8b54:	lsl	x1, x1, #1
    8b58:	add	x1, x1, w20, uxtw
    8b5c:	ldr	x0, [x0, x1, lsl #3]
    8b60:	blr	x3
    8b64:	cmp	w20, #0x0
    8b68:	mov	x20, x0
    8b6c:	ccmp	w21, #0x2, #0x4, eq  // eq = none
    8b70:	b.ne	8be0 <grub_get_human_size+0x108>  // b.any
    8b74:	add	x2, sp, #0x38
    8b78:	mov	x0, x19
    8b7c:	mov	x1, #0x64                  	// #100
    8b80:	bl	0 <grub_divmod64>
    8b84:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    8b88:	adrp	x6, 0 <grub_normal_free_menu-0x268>
    8b8c:	ldr	x4, [sp, #56]
    8b90:	mov	x3, x0
    8b94:	ldr	x2, [x1]
    8b98:	mov	x5, x20
    8b9c:	ldr	x19, [x6]
    8ba0:	mov	x1, #0x1e                  	// #30
    8ba4:	mov	x0, x19
    8ba8:	bl	0 <grub_snprintf>
    8bac:	mov	x0, x19
    8bb0:	ldp	x19, x20, [sp, #16]
    8bb4:	ldp	x21, x22, [sp, #32]
    8bb8:	ldp	x29, x30, [sp], #64
    8bbc:	ret
    8bc0:	ubfiz	x1, x21, #1, #32
    8bc4:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    8bc8:	add	x1, x1, w21, uxtw
    8bcc:	ldr	x0, [x0]
    8bd0:	lsl	x1, x1, #4
    8bd4:	ldr	x0, [x0, x1]
    8bd8:	blr	x3
    8bdc:	mov	x20, x0
    8be0:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    8be4:	adrp	x6, 0 <grub_normal_free_menu-0x268>
    8be8:	mov	x4, x20
    8bec:	mov	x3, x22
    8bf0:	ldr	x2, [x0]
    8bf4:	mov	x1, #0x1e                  	// #30
    8bf8:	ldr	x19, [x6]
    8bfc:	mov	x0, x19
    8c00:	bl	0 <grub_snprintf>
    8c04:	mov	x0, x19
    8c08:	ldp	x19, x20, [sp, #16]
    8c0c:	ldp	x21, x22, [sp, #32]
    8c10:	ldp	x29, x30, [sp], #64
    8c14:	ret
    8c18:	mov	x19, x0
    8c1c:	mov	x0, #0x8fff                	// #36863
    8c20:	movk	x0, #0x1, lsl #16
    8c24:	cmp	x22, x0
    8c28:	b.hi	8b20 <grub_get_human_size+0x48>  // b.pmore
    8c2c:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    8c30:	ldr	x0, [x0]
    8c34:	blr	x3
    8c38:	mov	x20, x0
    8c3c:	b	8b74 <grub_get_human_size+0x9c>
	...

0000000000008c70 <grub_normal_print_device_info>:
    8c70:	stp	x29, x30, [sp, #-112]!
    8c74:	mov	w1, #0x2c                  	// #44
    8c78:	mov	x29, sp
    8c7c:	stp	x19, x20, [sp, #16]
    8c80:	mov	x19, x0
    8c84:	stp	x21, x22, [sp, #32]
    8c88:	stp	x23, x24, [sp, #48]
    8c8c:	bl	0 <grub_strchr>
    8c90:	cbz	x0, 8f30 <grub_normal_print_device_info+0x2c0>
    8c94:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    8c98:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    8c9c:	ldr	x20, [x1]
    8ca0:	ldr	x0, [x0]
    8ca4:	ldr	x1, [x20]
    8ca8:	blr	x1
    8cac:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    8cb0:	mov	x1, x19
    8cb4:	ldr	x0, [x0]
    8cb8:	bl	0 <grub_printf_>
    8cbc:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    8cc0:	ldr	x1, [x20]
    8cc4:	ldr	x23, [x0]
    8cc8:	mov	x0, x23
    8ccc:	blr	x1
    8cd0:	mov	x0, x19
    8cd4:	bl	0 <grub_device_open>
    8cd8:	mov	x19, x0
    8cdc:	cbz	x0, 8ef0 <grub_normal_print_device_info+0x280>
    8ce0:	ldr	x1, [x0]
    8ce4:	cbz	x1, 8eb8 <grub_normal_print_device_info+0x248>
    8ce8:	bl	0 <grub_fs_probe>
    8cec:	mov	x22, x0
    8cf0:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    8cf4:	ldr	x21, [x1]
    8cf8:	str	wzr, [x21]
    8cfc:	cbz	x0, 8f60 <grub_normal_print_device_info+0x2f0>
    8d00:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    8d04:	ldr	x24, [x22, #16]
    8d08:	ldr	x1, [x0]
    8d0c:	mov	x0, x24
    8d10:	bl	0 <grub_strcmp>
    8d14:	cmp	w0, #0x0
    8d18:	adrp	x2, 0 <grub_normal_free_menu-0x268>
    8d1c:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    8d20:	ldr	x0, [x2]
    8d24:	ldr	x1, [x1]
    8d28:	csel	x1, x24, x1, ne  // ne = any
    8d2c:	bl	0 <grub_printf_>
    8d30:	ldr	x2, [x22, #56]
    8d34:	cbz	x2, 8d84 <grub_normal_print_device_info+0x114>
    8d38:	add	x1, sp, #0x68
    8d3c:	mov	x0, x19
    8d40:	blr	x2
    8d44:	ldr	w0, [x21]
    8d48:	cbnz	w0, 8d80 <grub_normal_print_device_info+0x110>
    8d4c:	ldr	x0, [sp, #104]
    8d50:	cbz	x0, 8d7c <grub_normal_print_device_info+0x10c>
    8d54:	bl	0 <grub_strlen>
    8d58:	cbz	x0, 8d78 <grub_normal_print_device_info+0x108>
    8d5c:	ldr	x1, [x20]
    8d60:	mov	x0, x23
    8d64:	blr	x1
    8d68:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    8d6c:	ldr	x1, [sp, #104]
    8d70:	ldr	x0, [x0]
    8d74:	bl	0 <grub_printf_>
    8d78:	ldr	x0, [sp, #104]
    8d7c:	bl	0 <grub_free>
    8d80:	str	wzr, [x21]
    8d84:	ldr	x2, [x22, #72]
    8d88:	cbz	x2, 8da4 <grub_normal_print_device_info+0x134>
    8d8c:	add	x1, sp, #0x64
    8d90:	mov	x0, x19
    8d94:	blr	x2
    8d98:	ldr	w0, [x21]
    8d9c:	cbz	w0, 8fc4 <grub_normal_print_device_info+0x354>
    8da0:	str	wzr, [x21]
    8da4:	ldr	x2, [x22, #64]
    8da8:	cbz	x2, 8ddc <grub_normal_print_device_info+0x16c>
    8dac:	add	x1, sp, #0x68
    8db0:	mov	x0, x19
    8db4:	blr	x2
    8db8:	ldr	w0, [x21]
    8dbc:	cbnz	w0, 8dd8 <grub_normal_print_device_info+0x168>
    8dc0:	ldr	x0, [sp, #104]
    8dc4:	cbz	x0, 8dd4 <grub_normal_print_device_info+0x164>
    8dc8:	bl	0 <grub_strlen>
    8dcc:	cbnz	x0, 903c <grub_normal_print_device_info+0x3cc>
    8dd0:	ldr	x0, [sp, #104]
    8dd4:	bl	0 <grub_free>
    8dd8:	str	wzr, [x21]
    8ddc:	ldr	x0, [x19]
    8de0:	ldr	x1, [x0, #40]
    8de4:	cbz	x1, 8fa8 <grub_normal_print_device_info+0x338>
    8de8:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    8dec:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    8df0:	ldr	x1, [x1]
    8df4:	ldr	x0, [x0]
    8df8:	ldr	x1, [x1]
    8dfc:	blr	x1
    8e00:	ldr	x1, [x19]
    8e04:	ldr	x2, [x1, #40]
    8e08:	cbz	x2, 9054 <grub_normal_print_device_info+0x3e4>
    8e0c:	mov	x3, x2
    8e10:	mov	x1, #0x0                   	// #0
    8e14:	nop
    8e18:	ldr	x4, [x3, #8]
    8e1c:	ldr	x3, [x3, #40]
    8e20:	add	x1, x1, x4
    8e24:	cbnz	x3, 8e18 <grub_normal_print_device_info+0x1a8>
    8e28:	lsr	x1, x1, #1
    8e2c:	mov	x3, #0x0                   	// #0
    8e30:	ldr	x4, [x2, #8]
    8e34:	ldr	x2, [x2, #40]
    8e38:	add	x3, x3, x4
    8e3c:	cbnz	x2, 8e30 <grub_normal_print_device_info+0x1c0>
    8e40:	tbz	w3, #0, 8f24 <grub_normal_print_device_info+0x2b4>
    8e44:	adrp	x2, 0 <grub_normal_free_menu-0x268>
    8e48:	ldr	x2, [x2]
    8e4c:	bl	0 <grub_printf>
    8e50:	ldr	x0, [x19]
    8e54:	bl	0 <grub_disk_get_size>
    8e58:	cmn	x0, #0x1
    8e5c:	b.eq	8f98 <grub_normal_print_device_info+0x328>  // b.none
    8e60:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    8e64:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    8e68:	ldr	x24, [x1]
    8e6c:	ldr	x0, [x0]
    8e70:	ldr	x1, [x24]
    8e74:	blr	x1
    8e78:	mov	x22, x0
    8e7c:	ldr	x0, [x19]
    8e80:	bl	0 <grub_disk_get_size>
    8e84:	lsr	x23, x0, #1
    8e88:	ldr	x0, [x19]
    8e8c:	bl	0 <grub_disk_get_size>
    8e90:	tbz	w0, #0, 8f8c <grub_normal_print_device_info+0x31c>
    8e94:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    8e98:	ldr	x1, [x24]
    8e9c:	ldr	x0, [x0]
    8ea0:	blr	x1
    8ea4:	mov	x2, x0
    8ea8:	mov	x1, x23
    8eac:	mov	x0, x22
    8eb0:	bl	0 <grub_printf>
    8eb4:	b	8ec0 <grub_normal_print_device_info+0x250>
    8eb8:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    8ebc:	ldr	x21, [x0]
    8ec0:	mov	x0, x19
    8ec4:	bl	0 <grub_device_close>
    8ec8:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    8ecc:	ldr	x1, [x20]
    8ed0:	ldr	x0, [x0]
    8ed4:	blr	x1
    8ed8:	ldr	w0, [x21]
    8edc:	ldp	x19, x20, [sp, #16]
    8ee0:	ldp	x21, x22, [sp, #32]
    8ee4:	ldp	x23, x24, [sp, #48]
    8ee8:	ldp	x29, x30, [sp], #112
    8eec:	ret
    8ef0:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    8ef4:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    8ef8:	ldr	x1, [x1]
    8efc:	ldr	x0, [x0]
    8f00:	ldr	x1, [x1]
    8f04:	blr	x1
    8f08:	mov	x1, x0
    8f0c:	adrp	x2, 0 <grub_normal_free_menu-0x268>
    8f10:	ldr	x0, [x2]
    8f14:	bl	0 <grub_printf>
    8f18:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    8f1c:	ldr	x21, [x0]
    8f20:	b	8ec8 <grub_normal_print_device_info+0x258>
    8f24:	adrp	x2, 0 <grub_normal_free_menu-0x268>
    8f28:	ldr	x2, [x2]
    8f2c:	b	8e4c <grub_normal_print_device_info+0x1dc>
    8f30:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    8f34:	mov	x1, x19
    8f38:	ldr	x0, [x0]
    8f3c:	bl	0 <grub_printf_>
    8f40:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    8f44:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    8f48:	ldr	x20, [x1]
    8f4c:	ldr	x23, [x0]
    8f50:	ldr	x1, [x20]
    8f54:	mov	x0, x23
    8f58:	blr	x1
    8f5c:	b	8cd0 <grub_normal_print_device_info+0x60>
    8f60:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    8f64:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    8f68:	ldr	x1, [x1]
    8f6c:	ldr	x0, [x0]
    8f70:	ldr	x1, [x1]
    8f74:	blr	x1
    8f78:	mov	x1, x0
    8f7c:	adrp	x2, 0 <grub_normal_free_menu-0x268>
    8f80:	ldr	x0, [x2]
    8f84:	bl	0 <grub_printf>
    8f88:	b	8ddc <grub_normal_print_device_info+0x16c>
    8f8c:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    8f90:	ldr	x2, [x0]
    8f94:	b	8ea8 <grub_normal_print_device_info+0x238>
    8f98:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    8f9c:	ldr	x0, [x0]
    8fa0:	bl	0 <grub_puts_>
    8fa4:	b	8ec0 <grub_normal_print_device_info+0x250>
    8fa8:	adrp	x3, 0 <grub_normal_free_menu-0x268>
    8fac:	ldr	w1, [x0, #24]
    8fb0:	mov	w2, #0x1                   	// #1
    8fb4:	ldr	x0, [x3]
    8fb8:	lsl	w1, w2, w1
    8fbc:	bl	0 <grub_printf_>
    8fc0:	b	8e50 <grub_normal_print_device_info+0x1e0>
    8fc4:	ldr	w0, [sp, #100]
    8fc8:	add	x1, sp, #0x68
    8fcc:	stp	x25, x26, [sp, #64]
    8fd0:	stp	x27, x28, [sp, #80]
    8fd4:	bl	3d48 <grub_unixtime2datetime>
    8fd8:	ldr	x1, [x20]
    8fdc:	mov	x0, x23
    8fe0:	blr	x1
    8fe4:	ldrb	w25, [sp, #107]
    8fe8:	ldrb	w26, [sp, #108]
    8fec:	add	x0, sp, #0x68
    8ff0:	ldrb	w27, [sp, #109]
    8ff4:	ldrb	w28, [sp, #110]
    8ff8:	ldrh	w23, [sp, #104]
    8ffc:	ldrb	w24, [sp, #106]
    9000:	bl	3d08 <grub_get_weekday_name>
    9004:	mov	x7, x0
    9008:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    900c:	mov	w6, w28
    9010:	mov	w5, w27
    9014:	ldr	x0, [x0]
    9018:	mov	w4, w26
    901c:	mov	w3, w25
    9020:	mov	w2, w24
    9024:	mov	w1, w23
    9028:	bl	0 <grub_printf_>
    902c:	ldp	x25, x26, [sp, #64]
    9030:	ldp	x27, x28, [sp, #80]
    9034:	str	wzr, [x21]
    9038:	b	8da4 <grub_normal_print_device_info+0x134>
    903c:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    9040:	ldr	x1, [sp, #104]
    9044:	ldr	x0, [x0]
    9048:	bl	0 <grub_printf>
    904c:	ldr	x0, [sp, #104]
    9050:	b	8dd4 <grub_normal_print_device_info+0x164>
    9054:	adrp	x2, 0 <grub_normal_free_menu-0x268>
    9058:	mov	x1, #0x0                   	// #0
    905c:	ldr	x2, [x2]
    9060:	b	8e4c <grub_normal_print_device_info+0x1dc>
    9064:	nop
	...
    9120:	stp	x29, x30, [sp, #-48]!
    9124:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    9128:	mov	x29, sp
    912c:	stp	x19, x20, [sp, #16]
    9130:	ldr	x20, [x1]
    9134:	stp	x21, x22, [sp, #32]
    9138:	mov	x22, x0
    913c:	ldr	w0, [x20]
    9140:	cbnz	w0, 91bc <grub_normal_print_device_info+0x54c>
    9144:	ldr	x19, [x20, #8]
    9148:	mov	w1, #0x1                   	// #1
    914c:	str	w1, [x20]
    9150:	cbz	x19, 91b8 <grub_normal_print_device_info+0x548>
    9154:	adrp	x21, 0 <grub_normal_free_menu-0x268>
    9158:	ldrb	w2, [x22]
    915c:	mov	x7, x22
    9160:	ldr	x3, [x19, #8]
    9164:	cbnz	w2, 9180 <grub_normal_print_device_info+0x510>
    9168:	b	91cc <grub_normal_print_device_info+0x55c>
    916c:	csel	w4, w4, w1, cc  // cc = lo, ul, last
    9170:	cmp	w4, w0
    9174:	b.ne	9210 <grub_normal_print_device_info+0x5a0>  // b.any
    9178:	ldrb	w2, [x7, #1]!
    917c:	cbz	w2, 91cc <grub_normal_print_device_info+0x55c>
    9180:	ldrb	w1, [x3]
    9184:	sub	w8, w2, #0x41
    9188:	cmp	w8, #0x1a
    918c:	add	w5, w2, #0x20
    9190:	sub	w6, w1, #0x41
    9194:	csel	w0, w5, w2, cc  // cc = lo, ul, last
    9198:	add	x3, x3, #0x1
    919c:	add	w4, w1, #0x20
    91a0:	cmp	w6, #0x1a
    91a4:	cbnz	w1, 916c <grub_normal_print_device_info+0x4fc>
    91a8:	ldr	x19, [x19]
    91ac:	cbnz	x19, 9158 <grub_normal_print_device_info+0x4e8>
    91b0:	ldr	w0, [x20]
    91b4:	sub	w0, w0, #0x1
    91b8:	str	w0, [x20]
    91bc:	ldp	x19, x20, [sp, #16]
    91c0:	ldp	x21, x22, [sp, #32]
    91c4:	ldp	x29, x30, [sp], #48
    91c8:	ret
    91cc:	ldrb	w1, [x3]
    91d0:	mov	w2, #0x0                   	// #0
    91d4:	sub	w6, w1, #0x41
    91d8:	cmp	w6, #0x1a
    91dc:	add	w0, w1, #0x20
    91e0:	csel	w1, w0, w1, cc  // cc = lo, ul, last
    91e4:	cmp	w2, w1
    91e8:	b.ne	91a8 <grub_normal_print_device_info+0x538>  // b.any
    91ec:	ldr	x0, [x19, #16]
    91f0:	bl	0 <grub_dl_load>
    91f4:	cbz	x0, 91fc <grub_normal_print_device_info+0x58c>
    91f8:	bl	0 <grub_dl_ref>
    91fc:	ldr	x0, [x21]
    9200:	ldr	x19, [x19]
    9204:	str	wzr, [x0]
    9208:	cbnz	x19, 9158 <grub_normal_print_device_info+0x4e8>
    920c:	b	91b0 <grub_normal_print_device_info+0x540>
    9210:	cmp	w8, #0x1a
    9214:	csel	w2, w5, w2, cc  // cc = lo, ul, last
    9218:	b	91d8 <grub_normal_print_device_info+0x568>
    921c:	nop
	...

0000000000009230 <read_crypto_list>:
    9230:	cbz	x0, 93d0 <read_crypto_list+0x1a0>
    9234:	stp	x29, x30, [sp, #-80]!
    9238:	mov	x1, x0
    923c:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    9240:	mov	x29, sp
    9244:	ldr	x0, [x0]
    9248:	stp	x19, x20, [sp, #16]
    924c:	bl	0 <grub_xasprintf>
    9250:	mov	x19, x0
    9254:	cbz	x0, 93b0 <read_crypto_list+0x180>
    9258:	mov	w1, #0x32                  	// #50
    925c:	stp	x21, x22, [sp, #32]
    9260:	bl	0 <grub_file_open>
    9264:	mov	x22, x0
    9268:	mov	x0, x19
    926c:	bl	0 <grub_free>
    9270:	cbz	x22, 93ac <read_crypto_list+0x17c>
    9274:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    9278:	stp	x23, x24, [sp, #48]
    927c:	ldr	x23, [x0]
    9280:	ldr	x19, [x23, #8]
    9284:	str	x25, [sp, #64]
    9288:	cbz	x19, 92b4 <read_crypto_list+0x84>
    928c:	nop
    9290:	mov	x20, x19
    9294:	ldr	x19, [x19]
    9298:	ldr	x0, [x20, #8]
    929c:	bl	0 <grub_free>
    92a0:	ldr	x0, [x20, #16]
    92a4:	bl	0 <grub_free>
    92a8:	mov	x0, x20
    92ac:	bl	0 <grub_free>
    92b0:	cbnz	x19, 9290 <read_crypto_list+0x60>
    92b4:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    92b8:	str	xzr, [x23, #8]
    92bc:	ldr	x24, [x0]
    92c0:	mov	x0, x22
    92c4:	bl	ded8 <grub_file_getline>
    92c8:	mov	x21, x0
    92cc:	cbz	x0, 9374 <read_crypto_list+0x144>
    92d0:	mov	x19, x0
    92d4:	b	92dc <read_crypto_list+0xac>
    92d8:	add	x19, x19, #0x1
    92dc:	ldrb	w0, [x19]
    92e0:	bl	0 <grub_isspace>
    92e4:	cbnz	w0, 92d8 <read_crypto_list+0xa8>
    92e8:	mov	x0, x19
    92ec:	mov	w1, #0x3a                  	// #58
    92f0:	bl	0 <grub_strchr>
    92f4:	cbz	x0, 935c <read_crypto_list+0x12c>
    92f8:	mov	x20, x0
    92fc:	strb	wzr, [x20], #1
    9300:	ldrb	w0, [x0, #1]
    9304:	cmp	w0, #0x20
    9308:	ccmp	w0, #0x9, #0x4, ne  // ne = any
    930c:	b.ne	9320 <read_crypto_list+0xf0>  // b.any
    9310:	ldrb	w1, [x20, #1]!
    9314:	cmp	w1, #0x20
    9318:	ccmp	w1, #0x9, #0x4, ne  // ne = any
    931c:	b.eq	9310 <read_crypto_list+0xe0>  // b.none
    9320:	mov	x0, #0x18                  	// #24
    9324:	bl	0 <grub_malloc>
    9328:	mov	x25, x0
    932c:	cbz	x0, 93c8 <read_crypto_list+0x198>
    9330:	mov	x0, x19
    9334:	bl	0 <grub_strdup>
    9338:	str	x0, [x25, #8]
    933c:	cbz	x0, 93e0 <read_crypto_list+0x1b0>
    9340:	mov	x0, x20
    9344:	bl	0 <grub_strdup>
    9348:	str	x0, [x25, #16]
    934c:	cbz	x0, 93f0 <read_crypto_list+0x1c0>
    9350:	ldr	x0, [x23, #8]
    9354:	str	x0, [x25]
    9358:	str	x25, [x23, #8]
    935c:	mov	x0, x21
    9360:	bl	0 <grub_free>
    9364:	mov	x0, x22
    9368:	bl	ded8 <grub_file_getline>
    936c:	mov	x21, x0
    9370:	cbnz	x0, 92d0 <read_crypto_list+0xa0>
    9374:	mov	x0, x22
    9378:	bl	0 <grub_file_close>
    937c:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    9380:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    9384:	ldp	x21, x22, [sp, #32]
    9388:	ldr	x0, [x0]
    938c:	ldr	x1, [x1]
    9390:	ldr	x25, [sp, #64]
    9394:	str	wzr, [x24]
    9398:	str	x1, [x0]
    939c:	ldp	x19, x20, [sp, #16]
    93a0:	ldp	x23, x24, [sp, #48]
    93a4:	ldp	x29, x30, [sp], #80
    93a8:	ret
    93ac:	ldp	x21, x22, [sp, #32]
    93b0:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    93b4:	ldp	x19, x20, [sp, #16]
    93b8:	ldr	x0, [x0]
    93bc:	str	wzr, [x0]
    93c0:	ldp	x29, x30, [sp], #80
    93c4:	ret
    93c8:	str	wzr, [x24]
    93cc:	b	935c <read_crypto_list+0x12c>
    93d0:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    93d4:	ldr	x0, [x0]
    93d8:	str	wzr, [x0]
    93dc:	ret
    93e0:	mov	x0, x25
    93e4:	str	wzr, [x24]
    93e8:	bl	0 <grub_free>
    93ec:	b	935c <read_crypto_list+0x12c>
    93f0:	ldr	x0, [x25, #8]
    93f4:	str	wzr, [x24]
    93f8:	bl	0 <grub_free>
    93fc:	mov	x0, x25
    9400:	bl	0 <grub_free>
    9404:	b	935c <read_crypto_list+0x12c>
	...
    9430:	stp	x29, x30, [sp, #-144]!
    9434:	mov	x29, sp
    9438:	stp	x21, x22, [sp, #32]
    943c:	mov	x22, x0
    9440:	mov	w0, #0x1                   	// #1
    9444:	stp	xzr, xzr, [sp, #112]
    9448:	strb	w0, [sp, #120]
    944c:	ldr	w0, [x22]
    9450:	stp	x19, x20, [sp, #16]
    9454:	mov	x19, x1
    9458:	and	w1, w0, #0x7fffff
    945c:	stp	xzr, xzr, [sp, #128]
    9460:	cmp	w1, #0x9
    9464:	b.eq	95ac <read_crypto_list+0x37c>  // b.none
    9468:	ldr	w1, [x19, #120]
    946c:	and	w1, w1, #0x30
    9470:	cmp	w1, #0x10
    9474:	b.eq	94c8 <read_crypto_list+0x298>  // b.none
    9478:	ldr	x2, [x19, #40]
    947c:	mov	x1, x22
    9480:	mov	x0, x19
    9484:	blr	x2
    9488:	ldr	w0, [x22]
    948c:	and	w0, w0, #0x7fffff
    9490:	cmp	w0, #0xa
    9494:	b.ne	94b8 <read_crypto_list+0x288>  // b.any
    9498:	ldr	w1, [sp, #112]
    949c:	mov	w3, #0xd                   	// #13
    94a0:	ldr	x2, [x19, #40]
    94a4:	mov	x0, x19
    94a8:	bfxil	w1, w3, #0, #23
    94ac:	str	w1, [sp, #112]
    94b0:	add	x1, sp, #0x70
    94b4:	blr	x2
    94b8:	ldp	x19, x20, [sp, #16]
    94bc:	ldp	x21, x22, [sp, #32]
    94c0:	ldp	x29, x30, [sp], #144
    94c4:	ret
    94c8:	ldr	x2, [x19, #48]
    94cc:	stp	x23, x24, [sp, #48]
    94d0:	str	x25, [sp, #64]
    94d4:	cbz	x2, 96bc <read_crypto_list+0x48c>
    94d8:	mov	x1, x22
    94dc:	mov	x0, x19
    94e0:	blr	x2
    94e4:	sxtb	w2, w0
    94e8:	ldrh	w0, [x22, #6]
    94ec:	add	x25, x22, #0x18
    94f0:	add	x21, sp, #0x70
    94f4:	mov	x24, #0xfffffffffffffffc    	// #-4
    94f8:	mov	w23, #0xffffffff            	// #-1
    94fc:	strb	w2, [sp, #120]
    9500:	ubfx	x1, x0, #3, #8
    9504:	nop
    9508:	cmn	w23, #0x1
    950c:	b.eq	962c <read_crypto_list+0x3fc>  // b.none
    9510:	tst	w0, #0x7f8
    9514:	b.eq	9660 <read_crypto_list+0x430>  // b.none
    9518:	cmp	w1, #0x2
    951c:	mov	x0, x25
    9520:	b.ls	9528 <read_crypto_list+0x2f8>  // b.plast
    9524:	ldr	x0, [x22, #24]
    9528:	ldr	w0, [x0, x24]
    952c:	ubfx	x0, x0, #0, #21
    9530:	str	w0, [sp, #84]
    9534:	add	x2, sp, #0x58
    9538:	add	x0, sp, #0x54
    953c:	mov	x3, #0x14                  	// #20
    9540:	mov	x1, #0x1                   	// #1
    9544:	bl	bc18 <grub_ucs4_to_utf8>
    9548:	add	x20, sp, #0x58
    954c:	ldrb	w2, [sp, #88]
    9550:	cbz	w2, 9580 <read_crypto_list+0x350>
    9554:	nop
    9558:	ldr	w3, [sp, #112]
    955c:	mov	x1, x21
    9560:	ldr	x4, [x19, #40]
    9564:	mov	x0, x19
    9568:	bfxil	w3, w2, #0, #23
    956c:	str	w3, [sp, #112]
    9570:	blr	x4
    9574:	strb	wzr, [sp, #120]
    9578:	ldrb	w2, [x20, #1]!
    957c:	cbnz	w2, 9558 <read_crypto_list+0x328>
    9580:	ldrh	w0, [x22, #6]
    9584:	add	w23, w23, #0x1
    9588:	add	x24, x24, #0x4
    958c:	ubfx	x1, x0, #3, #8
    9590:	cmp	w1, w23
    9594:	b.gt	9508 <read_crypto_list+0x2d8>
    9598:	mov	w0, #0x1                   	// #1
    959c:	strb	w0, [sp, #120]
    95a0:	ldp	x23, x24, [sp, #48]
    95a4:	ldr	x25, [sp, #64]
    95a8:	b	9488 <read_crypto_list+0x258>
    95ac:	cbnz	w2, 9668 <read_crypto_list+0x438>
    95b0:	ldr	x1, [x19, #64]
    95b4:	cbz	x1, 960c <read_crypto_list+0x3dc>
    95b8:	mov	x0, x19
    95bc:	blr	x1
    95c0:	ldr	w1, [sp, #112]
    95c4:	mvn	w20, w0
    95c8:	and	w20, w20, #0x7
    95cc:	mov	w0, #0x20                  	// #32
    95d0:	add	x21, sp, #0x70
    95d4:	bfxil	w1, w0, #0, #23
    95d8:	str	w1, [sp, #112]
    95dc:	nop
    95e0:	ldr	x2, [x19, #40]
    95e4:	sub	w20, w20, #0x1
    95e8:	mov	x1, x21
    95ec:	mov	x0, x19
    95f0:	blr	x2
    95f4:	cmn	w20, #0x1
    95f8:	b.ne	95e0 <read_crypto_list+0x3b0>  // b.any
    95fc:	ldp	x19, x20, [sp, #16]
    9600:	ldp	x21, x22, [sp, #32]
    9604:	ldp	x29, x30, [sp], #144
    9608:	ret
    960c:	ldr	w0, [x19, #120]
    9610:	and	w0, w0, #0x30
    9614:	cmp	w0, #0x10
    9618:	b.ne	9478 <read_crypto_list+0x248>  // b.any
    961c:	mov	w2, #0x8                   	// #8
    9620:	stp	x23, x24, [sp, #48]
    9624:	str	x25, [sp, #64]
    9628:	b	94e8 <read_crypto_list+0x2b8>
    962c:	ldr	w0, [x22]
    9630:	ldr	w1, [x19, #120]
    9634:	ubfx	x0, x0, #0, #23
    9638:	str	w0, [sp, #84]
    963c:	and	w1, w1, #0x38
    9640:	cmp	w1, #0x18
    9644:	b.ne	9534 <read_crypto_list+0x304>  // b.any
    9648:	ldrb	w2, [x22, #4]
    964c:	and	w1, w2, #0x1f
    9650:	tbnz	w2, #0, 96a8 <read_crypto_list+0x478>
    9654:	bl	dd30 <grub_unicode_shape_code>
    9658:	str	w0, [sp, #84]
    965c:	b	9534 <read_crypto_list+0x304>
    9660:	mov	x0, #0x0                   	// #0
    9664:	b	9528 <read_crypto_list+0x2f8>
    9668:	ldr	w0, [sp, #112]
    966c:	mov	w1, #0x20                  	// #32
    9670:	add	x21, sp, #0x70
    9674:	mov	w20, #0x8                   	// #8
    9678:	bfxil	w0, w1, #0, #23
    967c:	str	w0, [sp, #112]
    9680:	ldr	x2, [x19, #40]
    9684:	mov	x1, x21
    9688:	mov	x0, x19
    968c:	blr	x2
    9690:	subs	w20, w20, #0x1
    9694:	b.ne	9680 <read_crypto_list+0x450>  // b.any
    9698:	ldp	x19, x20, [sp, #16]
    969c:	ldp	x21, x22, [sp, #32]
    96a0:	ldp	x29, x30, [sp], #144
    96a4:	ret
    96a8:	bl	dce8 <grub_unicode_mirror_code>
    96ac:	str	w0, [sp, #84]
    96b0:	ldrb	w1, [x22, #4]
    96b4:	and	w1, w1, #0x1f
    96b8:	b	9654 <read_crypto_list+0x424>
    96bc:	and	w0, w0, #0x7fffff
    96c0:	bl	c088 <grub_unicode_get_comb_type>
    96c4:	cmp	w0, #0x0
    96c8:	cset	w2, eq  // eq = none
    96cc:	b	94e8 <read_crypto_list+0x2b8>
    96d0:	stp	x29, x30, [sp, #-48]!
    96d4:	mov	w3, #0x1                   	// #1
    96d8:	cmp	w0, #0x7f
    96dc:	mov	x29, sp
    96e0:	stp	xzr, xzr, [sp, #16]
    96e4:	strb	w3, [sp, #24]
    96e8:	stp	xzr, xzr, [sp, #32]
    96ec:	b.ls	9704 <read_crypto_list+0x4d4>  // b.plast
    96f0:	ldr	w3, [x1, #120]
    96f4:	ands	w3, w3, #0x38
    96f8:	b.eq	9784 <read_crypto_list+0x554>  // b.none
    96fc:	cmp	w3, #0x8
    9700:	b.eq	9724 <read_crypto_list+0x4f4>  // b.none
    9704:	and	w3, w0, #0x7fffff
    9708:	ldr	w4, [sp, #16]
    970c:	add	x0, sp, #0x10
    9710:	bfxil	w4, w3, #0, #23
    9714:	str	w4, [sp, #16]
    9718:	bl	9430 <read_crypto_list+0x200>
    971c:	ldp	x29, x30, [sp], #48
    9720:	ret
    9724:	mov	w3, #0x2501                	// #9473
    9728:	cmp	w0, w3
    972c:	b.eq	9968 <read_crypto_list+0x738>  // b.none
    9730:	b.ls	9840 <read_crypto_list+0x610>  // b.plast
    9734:	mov	w3, #0x2513                	// #9491
    9738:	cmp	w0, w3
    973c:	b.eq	9958 <read_crypto_list+0x728>  // b.none
    9740:	b.ls	98d0 <read_crypto_list+0x6a0>  // b.plast
    9744:	mov	w4, #0x2517                	// #9495
    9748:	mov	w3, #0xc0                  	// #192
    974c:	cmp	w0, w4
    9750:	b.eq	9708 <read_crypto_list+0x4d8>  // b.none
    9754:	ldr	w4, [sp, #16]
    9758:	mov	w3, #0x251b                	// #9499
    975c:	cmp	w0, w3
    9760:	mov	w0, #0xd9                  	// #217
    9764:	mov	w3, #0x3f                  	// #63
    9768:	csel	w3, w3, w0, ne  // ne = any
    976c:	add	x0, sp, #0x10
    9770:	bfxil	w4, w3, #0, #23
    9774:	str	w4, [sp, #16]
    9778:	bl	9430 <read_crypto_list+0x200>
    977c:	ldp	x29, x30, [sp], #48
    9780:	ret
    9784:	mov	w3, #0x2193                	// #8595
    9788:	cmp	w0, w3
    978c:	b.eq	9960 <read_crypto_list+0x730>  // b.none
    9790:	b.ls	97f0 <read_crypto_list+0x5c0>  // b.plast
    9794:	mov	w3, #0xffffdaff            	// #-9473
    9798:	add	w0, w0, w3
    979c:	cmp	w0, #0x1a
    97a0:	mov	w3, #0x3f                  	// #63
    97a4:	b.hi	9708 <read_crypto_list+0x4d8>  // b.pmore
    97a8:	mov	x3, #0x1                   	// #1
    97ac:	mov	x4, #0x4000                	// #16384
    97b0:	movk	x4, #0x444, lsl #16
    97b4:	lsl	x0, x3, x0
    97b8:	tst	x0, x4
    97bc:	b.ne	9930 <read_crypto_list+0x700>  // b.any
    97c0:	tbnz	w0, #2, 9910 <read_crypto_list+0x6e0>
    97c4:	ldr	w4, [sp, #16]
    97c8:	tst	x0, #0x1
    97cc:	mov	w3, #0x3f                  	// #63
    97d0:	mov	w0, #0x2d                  	// #45
    97d4:	csel	w3, w3, w0, eq  // eq = none
    97d8:	add	x0, sp, #0x10
    97dc:	bfxil	w4, w3, #0, #23
    97e0:	str	w4, [sp, #16]
    97e4:	bl	9430 <read_crypto_list+0x200>
    97e8:	ldp	x29, x30, [sp], #48
    97ec:	ret
    97f0:	mov	w4, #0x2191                	// #8593
    97f4:	mov	w3, #0x5e                  	// #94
    97f8:	cmp	w0, w4
    97fc:	b.eq	9708 <read_crypto_list+0x4d8>  // b.none
    9800:	mov	w4, #0x2192                	// #8594
    9804:	mov	w3, #0x3e                  	// #62
    9808:	cmp	w0, w4
    980c:	b.eq	9708 <read_crypto_list+0x4d8>  // b.none
    9810:	ldr	w4, [sp, #16]
    9814:	mov	w3, #0x2190                	// #8592
    9818:	cmp	w0, w3
    981c:	mov	w0, #0x3c                  	// #60
    9820:	mov	w3, #0x3f                  	// #63
    9824:	csel	w3, w3, w0, ne  // ne = any
    9828:	add	x0, sp, #0x10
    982c:	bfxil	w4, w3, #0, #23
    9830:	str	w4, [sp, #16]
    9834:	bl	9430 <read_crypto_list+0x200>
    9838:	ldp	x29, x30, [sp], #48
    983c:	ret
    9840:	mov	w3, #0x2192                	// #8594
    9844:	cmp	w0, w3
    9848:	b.eq	9950 <read_crypto_list+0x720>  // b.none
    984c:	b.ls	9890 <read_crypto_list+0x660>  // b.plast
    9850:	mov	w4, #0x2193                	// #8595
    9854:	mov	w3, #0x19                  	// #25
    9858:	cmp	w0, w4
    985c:	b.eq	9708 <read_crypto_list+0x4d8>  // b.none
    9860:	ldr	w4, [sp, #16]
    9864:	mov	w3, #0x2195                	// #8597
    9868:	cmp	w0, w3
    986c:	mov	w0, #0x12                  	// #18
    9870:	mov	w3, #0x3f                  	// #63
    9874:	csel	w3, w3, w0, ne  // ne = any
    9878:	add	x0, sp, #0x10
    987c:	bfxil	w4, w3, #0, #23
    9880:	str	w4, [sp, #16]
    9884:	bl	9430 <read_crypto_list+0x200>
    9888:	ldp	x29, x30, [sp], #48
    988c:	ret
    9890:	mov	w4, #0x2190                	// #8592
    9894:	mov	w3, #0x1b                  	// #27
    9898:	cmp	w0, w4
    989c:	b.eq	9708 <read_crypto_list+0x4d8>  // b.none
    98a0:	ldr	w4, [sp, #16]
    98a4:	mov	w3, #0x2191                	// #8593
    98a8:	cmp	w0, w3
    98ac:	mov	w0, #0x18                  	// #24
    98b0:	mov	w3, #0x3f                  	// #63
    98b4:	csel	w3, w3, w0, ne  // ne = any
    98b8:	add	x0, sp, #0x10
    98bc:	bfxil	w4, w3, #0, #23
    98c0:	str	w4, [sp, #16]
    98c4:	bl	9430 <read_crypto_list+0x200>
    98c8:	ldp	x29, x30, [sp], #48
    98cc:	ret
    98d0:	mov	w4, #0x2503                	// #9475
    98d4:	mov	w3, #0xb3                  	// #179
    98d8:	cmp	w0, w4
    98dc:	b.eq	9708 <read_crypto_list+0x4d8>  // b.none
    98e0:	ldr	w4, [sp, #16]
    98e4:	mov	w3, #0x250f                	// #9487
    98e8:	cmp	w0, w3
    98ec:	mov	w0, #0xda                  	// #218
    98f0:	mov	w3, #0x3f                  	// #63
    98f4:	csel	w3, w3, w0, ne  // ne = any
    98f8:	add	x0, sp, #0x10
    98fc:	bfxil	w4, w3, #0, #23
    9900:	str	w4, [sp, #16]
    9904:	bl	9430 <read_crypto_list+0x200>
    9908:	ldp	x29, x30, [sp], #48
    990c:	ret
    9910:	ldr	w4, [sp, #16]
    9914:	mov	w3, #0x7c                  	// #124
    9918:	add	x0, sp, #0x10
    991c:	bfxil	w4, w3, #0, #23
    9920:	str	w4, [sp, #16]
    9924:	bl	9430 <read_crypto_list+0x200>
    9928:	ldp	x29, x30, [sp], #48
    992c:	ret
    9930:	ldr	w4, [sp, #16]
    9934:	mov	w3, #0x2b                  	// #43
    9938:	add	x0, sp, #0x10
    993c:	bfxil	w4, w3, #0, #23
    9940:	str	w4, [sp, #16]
    9944:	bl	9430 <read_crypto_list+0x200>
    9948:	ldp	x29, x30, [sp], #48
    994c:	ret
    9950:	mov	w3, #0x1a                  	// #26
    9954:	b	9708 <read_crypto_list+0x4d8>
    9958:	mov	w3, #0xbf                  	// #191
    995c:	b	9708 <read_crypto_list+0x4d8>
    9960:	mov	w3, #0x76                  	// #118
    9964:	b	9708 <read_crypto_list+0x4d8>
    9968:	mov	w3, #0xc4                  	// #196
    996c:	b	9708 <read_crypto_list+0x4d8>
    9970:	stp	x29, x30, [sp, #-48]!
    9974:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    9978:	mov	x29, sp
    997c:	str	x21, [sp, #32]
    9980:	ldr	x21, [x1]
    9984:	stp	x19, x20, [sp, #16]
    9988:	mov	x20, x0
    998c:	ldr	x19, [x21]
    9990:	cbnz	x19, 99a0 <read_crypto_list+0x770>
    9994:	b	99c4 <read_crypto_list+0x794>
    9998:	ldr	x19, [x19]
    999c:	cbz	x19, 99c4 <read_crypto_list+0x794>
    99a0:	ldr	x1, [x20]
    99a4:	ldr	x0, [x19, #128]
    99a8:	bl	0 <grub_strcmp>
    99ac:	cbnz	w0, 9998 <read_crypto_list+0x768>
    99b0:	mov	x0, x19
    99b4:	ldp	x19, x20, [sp, #16]
    99b8:	ldr	x21, [sp, #32]
    99bc:	ldp	x29, x30, [sp], #48
    99c0:	ret
    99c4:	mov	x0, #0x88                  	// #136
    99c8:	bl	0 <grub_zalloc>
    99cc:	mov	x19, x0
    99d0:	cbz	x0, 9a00 <read_crypto_list+0x7d0>
    99d4:	ldr	x0, [x20]
    99d8:	bl	0 <grub_strdup>
    99dc:	str	x0, [x19, #128]
    99e0:	ldr	x1, [x21]
    99e4:	str	x1, [x19]
    99e8:	str	x19, [x21]
    99ec:	mov	x0, x19
    99f0:	ldp	x19, x20, [sp, #16]
    99f4:	ldr	x21, [sp, #32]
    99f8:	ldp	x29, x30, [sp], #48
    99fc:	ret
    9a00:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    9a04:	ldr	x0, [x0]
    9a08:	str	wzr, [x0]
    9a0c:	b	99b0 <read_crypto_list+0x780>
	...
    9a20:	mov	x2, x0
    9a24:	mov	x0, x1
    9a28:	ldr	w1, [x2]
    9a2c:	and	w3, w1, #0x7fffff
    9a30:	cmp	w3, #0x9
    9a34:	b.eq	9a8c <read_crypto_list+0x85c>  // b.none
    9a38:	ldr	x3, [x0, #48]
    9a3c:	cbz	x3, 9a4c <read_crypto_list+0x81c>
    9a40:	mov	x1, x2
    9a44:	mov	x16, x3
    9a48:	br	x16
    9a4c:	ldr	w2, [x0, #120]
    9a50:	mov	x0, #0x1                   	// #1
    9a54:	and	w3, w2, #0x38
    9a58:	and	w2, w2, #0x30
    9a5c:	cmp	w3, #0x20
    9a60:	ccmp	w2, #0x10, #0x4, ne  // ne = any
    9a64:	b.eq	9a6c <read_crypto_list+0x83c>  // b.none
    9a68:	ret
    9a6c:	stp	x29, x30, [sp, #-16]!
    9a70:	and	w0, w1, #0x7fffff
    9a74:	mov	x29, sp
    9a78:	bl	c088 <grub_unicode_get_comb_type>
    9a7c:	cmp	w0, #0x0
    9a80:	cset	x0, eq  // eq = none
    9a84:	ldp	x29, x30, [sp], #16
    9a88:	ret
    9a8c:	mov	x0, #0x8                   	// #8
    9a90:	ret
    9a94:	nop
    9a98:	stp	x29, x30, [sp, #-80]!
    9a9c:	mov	w3, #0x20                  	// #32
    9aa0:	mov	x29, sp
    9aa4:	stp	xzr, xzr, [sp, #48]
    9aa8:	str	w3, [sp, #48]
    9aac:	stp	x19, x20, [sp, #16]
    9ab0:	mov	w19, w1
    9ab4:	ldr	x3, [x0, #56]
    9ab8:	stp	x21, x22, [sp, #32]
    9abc:	mov	w22, w2
    9ac0:	stp	xzr, xzr, [sp, #64]
    9ac4:	mov	x21, x0
    9ac8:	blr	x3
    9acc:	and	x20, x0, #0xffff
    9ad0:	ldr	w1, [sp, #48]
    9ad4:	tst	w0, #0xffff
    9ad8:	sub	x20, x20, #0x1
    9adc:	mov	x2, #0x4f                  	// #79
    9ae0:	and	w0, w1, #0x7fffff
    9ae4:	csel	x20, x20, x2, ne  // ne = any
    9ae8:	cmp	w0, #0x9
    9aec:	b.eq	9b68 <read_crypto_list+0x938>  // b.none
    9af0:	ldr	x2, [x21, #48]
    9af4:	cbz	x2, 9b20 <read_crypto_list+0x8f0>
    9af8:	mov	x0, x21
    9afc:	add	x1, sp, #0x30
    9b00:	blr	x2
    9b04:	add	w19, w19, w22
    9b08:	ldp	x21, x22, [sp, #32]
    9b0c:	sxtw	x19, w19
    9b10:	msub	x0, x19, x0, x20
    9b14:	ldp	x19, x20, [sp, #16]
    9b18:	ldp	x29, x30, [sp], #80
    9b1c:	ret
    9b20:	ldr	w2, [x21, #120]
    9b24:	mov	x0, #0x1                   	// #1
    9b28:	and	w3, w2, #0x38
    9b2c:	and	w2, w2, #0x30
    9b30:	cmp	w3, #0x20
    9b34:	ccmp	w2, #0x10, #0x4, ne  // ne = any
    9b38:	b.ne	9b04 <read_crypto_list+0x8d4>  // b.any
    9b3c:	add	w19, w19, w22
    9b40:	and	w0, w1, #0x7fffff
    9b44:	bl	c088 <grub_unicode_get_comb_type>
    9b48:	cmp	w0, #0x0
    9b4c:	cset	x0, eq  // eq = none
    9b50:	sxtw	x19, w19
    9b54:	ldp	x21, x22, [sp, #32]
    9b58:	msub	x0, x19, x0, x20
    9b5c:	ldp	x19, x20, [sp, #16]
    9b60:	ldp	x29, x30, [sp], #80
    9b64:	ret
    9b68:	add	w19, w19, w22
    9b6c:	mov	x0, #0x8                   	// #8
    9b70:	ldp	x21, x22, [sp, #32]
    9b74:	sxtw	x19, w19
    9b78:	msub	x0, x19, x0, x20
    9b7c:	ldp	x19, x20, [sp, #16]
    9b80:	ldp	x29, x30, [sp], #80
    9b84:	ret

0000000000009b88 <grub_normal_reset_more>:
    9b88:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    9b8c:	ldr	x1, [x0]
    9b90:	ldr	x0, [x1]
    9b94:	str	x0, [x1, #8]
    9b98:	cbz	x0, 9bb0 <grub_normal_reset_more+0x28>
    9b9c:	nop
    9ba0:	str	wzr, [x0, #120]
    9ba4:	ldr	x0, [x0]
    9ba8:	cbnz	x0, 9ba0 <grub_normal_reset_more+0x18>
    9bac:	str	xzr, [x1, #8]
    9bb0:	ret
    9bb4:	nop
	...

0000000000009bc0 <grub_set_more>:
    9bc0:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    9bc4:	cmp	w0, #0x0
    9bc8:	cset	w2, ne  // ne = any
    9bcc:	ldr	x1, [x1]
    9bd0:	ldr	x0, [x1]
    9bd4:	str	x0, [x1, #8]
    9bd8:	str	w2, [x1, #16]
    9bdc:	cbz	x0, 9bf0 <grub_set_more+0x30>
    9be0:	str	wzr, [x0, #120]
    9be4:	ldr	x0, [x0]
    9be8:	cbnz	x0, 9be0 <grub_set_more+0x20>
    9bec:	str	xzr, [x1, #8]
    9bf0:	ret
    9bf4:	nop
	...

0000000000009c00 <grub_term_save_pos>:
    9c00:	stp	x29, x30, [sp, #-48]!
    9c04:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    9c08:	mov	x29, sp
    9c0c:	stp	x19, x20, [sp, #16]
    9c10:	ldr	x19, [x0]
    9c14:	ldr	x1, [x19]
    9c18:	str	x21, [sp, #32]
    9c1c:	cbz	x1, 9c84 <grub_term_save_pos+0x84>
    9c20:	mov	w0, #0x0                   	// #0
    9c24:	nop
    9c28:	ldr	x1, [x1]
    9c2c:	add	w0, w0, #0x1
    9c30:	cbnz	x1, 9c28 <grub_term_save_pos+0x28>
    9c34:	ubfiz	x0, x0, #2, #32
    9c38:	bl	0 <grub_malloc>
    9c3c:	mov	x21, x0
    9c40:	cbz	x0, 9c70 <grub_term_save_pos+0x70>
    9c44:	ldr	x19, [x19]
    9c48:	cbz	x19, 9c70 <grub_term_save_pos+0x70>
    9c4c:	mov	x20, x0
    9c50:	ldr	x1, [x19, #64]
    9c54:	mov	x0, x19
    9c58:	blr	x1
    9c5c:	strh	w0, [x20], #4
    9c60:	ldr	x19, [x19]
    9c64:	lsr	w0, w0, #16
    9c68:	sturh	w0, [x20, #-2]
    9c6c:	cbnz	x19, 9c50 <grub_term_save_pos+0x50>
    9c70:	mov	x0, x21
    9c74:	ldp	x19, x20, [sp, #16]
    9c78:	ldr	x21, [sp, #32]
    9c7c:	ldp	x29, x30, [sp], #48
    9c80:	ret
    9c84:	mov	x0, #0x0                   	// #0
    9c88:	b	9c38 <grub_term_save_pos+0x38>
    9c8c:	nop
	...

0000000000009c98 <grub_term_restore_pos>:
    9c98:	cbz	x0, 9ce4 <grub_term_restore_pos+0x4c>
    9c9c:	stp	x29, x30, [sp, #-32]!
    9ca0:	mov	x29, sp
    9ca4:	stp	x19, x20, [sp, #16]
    9ca8:	mov	x20, x0
    9cac:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    9cb0:	ldr	x0, [x0]
    9cb4:	ldr	x19, [x0]
    9cb8:	cbz	x19, 9cd8 <grub_term_restore_pos+0x40>
    9cbc:	nop
    9cc0:	ldr	w1, [x20], #4
    9cc4:	mov	x0, x19
    9cc8:	ldr	x2, [x19, #72]
    9ccc:	blr	x2
    9cd0:	ldr	x19, [x19]
    9cd4:	cbnz	x19, 9cc0 <grub_term_restore_pos+0x28>
    9cd8:	ldp	x19, x20, [sp, #16]
    9cdc:	ldp	x29, x30, [sp], #32
    9ce0:	ret
    9ce4:	ret
	...

0000000000009cf0 <read_terminal_list>:
    9cf0:	cbz	x0, 9eec <read_terminal_list+0x1fc>
    9cf4:	stp	x29, x30, [sp, #-96]!
    9cf8:	mov	x1, x0
    9cfc:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    9d00:	mov	x29, sp
    9d04:	ldr	x0, [x0]
    9d08:	stp	x19, x20, [sp, #16]
    9d0c:	bl	0 <grub_xasprintf>
    9d10:	mov	x19, x0
    9d14:	cbz	x0, 9ec4 <read_terminal_list+0x1d4>
    9d18:	mov	w1, #0x32                  	// #50
    9d1c:	stp	x21, x22, [sp, #32]
    9d20:	bl	0 <grub_file_open>
    9d24:	mov	x22, x0
    9d28:	mov	x0, x19
    9d2c:	bl	0 <grub_free>
    9d30:	cbz	x22, 9ec0 <read_terminal_list+0x1d0>
    9d34:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    9d38:	stp	x23, x24, [sp, #48]
    9d3c:	ldr	x23, [x0]
    9d40:	stp	x25, x26, [sp, #64]
    9d44:	ldr	x19, [x23]
    9d48:	str	x27, [sp, #80]
    9d4c:	cbz	x19, 9d74 <read_terminal_list+0x84>
    9d50:	mov	x20, x19
    9d54:	ldr	x19, [x19]
    9d58:	ldr	x0, [x20, #8]
    9d5c:	bl	0 <grub_free>
    9d60:	ldr	x0, [x20, #16]
    9d64:	bl	0 <grub_free>
    9d68:	mov	x0, x20
    9d6c:	bl	0 <grub_free>
    9d70:	cbnz	x19, 9d50 <read_terminal_list+0x60>
    9d74:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    9d78:	ldr	x24, [x0]
    9d7c:	ldr	x19, [x24]
    9d80:	cbz	x19, 9dac <read_terminal_list+0xbc>
    9d84:	nop
    9d88:	mov	x20, x19
    9d8c:	ldr	x19, [x19]
    9d90:	ldr	x0, [x20, #8]
    9d94:	bl	0 <grub_free>
    9d98:	ldr	x0, [x20, #16]
    9d9c:	bl	0 <grub_free>
    9da0:	mov	x0, x20
    9da4:	bl	0 <grub_free>
    9da8:	cbnz	x19, 9d88 <read_terminal_list+0x98>
    9dac:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    9db0:	str	xzr, [x23]
    9db4:	str	xzr, [x24]
    9db8:	ldr	x25, [x0]
    9dbc:	mov	x0, x22
    9dc0:	bl	ded8 <grub_file_getline>
    9dc4:	mov	x21, x0
    9dc8:	cbz	x0, 9e98 <read_terminal_list+0x1a8>
    9dcc:	nop
    9dd0:	mov	x19, x0
    9dd4:	b	9ddc <read_terminal_list+0xec>
    9dd8:	add	x19, x19, #0x1
    9ddc:	ldrb	w0, [x19]
    9de0:	bl	0 <grub_isspace>
    9de4:	cbnz	w0, 9dd8 <read_terminal_list+0xe8>
    9de8:	ldrb	w0, [x19]
    9dec:	cmp	w0, #0x69
    9df0:	b.eq	9edc <read_terminal_list+0x1ec>  // b.none
    9df4:	mov	x26, x23
    9df8:	cmp	w0, #0x6f
    9dfc:	b.ne	9e80 <read_terminal_list+0x190>  // b.any
    9e00:	add	x19, x19, #0x1
    9e04:	mov	w1, #0x3a                  	// #58
    9e08:	mov	x0, x19
    9e0c:	bl	0 <grub_strchr>
    9e10:	cbz	x0, 9e80 <read_terminal_list+0x190>
    9e14:	mov	x20, x0
    9e18:	strb	wzr, [x20], #1
    9e1c:	ldrb	w0, [x0, #1]
    9e20:	cmp	w0, #0x20
    9e24:	ccmp	w0, #0x9, #0x4, ne  // ne = any
    9e28:	b.ne	9e40 <read_terminal_list+0x150>  // b.any
    9e2c:	nop
    9e30:	ldrb	w1, [x20, #1]!
    9e34:	cmp	w1, #0x20
    9e38:	ccmp	w1, #0x9, #0x4, ne  // ne = any
    9e3c:	b.eq	9e30 <read_terminal_list+0x140>  // b.none
    9e40:	mov	x0, #0x18                  	// #24
    9e44:	bl	0 <grub_malloc>
    9e48:	mov	x27, x0
    9e4c:	cbz	x0, 9ee4 <read_terminal_list+0x1f4>
    9e50:	mov	x0, x19
    9e54:	bl	0 <grub_strdup>
    9e58:	str	x0, [x27, #8]
    9e5c:	cbz	x0, 9efc <read_terminal_list+0x20c>
    9e60:	mov	x0, x20
    9e64:	bl	0 <grub_strdup>
    9e68:	str	x0, [x27, #16]
    9e6c:	cbz	x0, 9f0c <read_terminal_list+0x21c>
    9e70:	ldr	x0, [x26]
    9e74:	str	x0, [x27]
    9e78:	str	x27, [x26]
    9e7c:	nop
    9e80:	mov	x0, x21
    9e84:	bl	0 <grub_free>
    9e88:	mov	x0, x22
    9e8c:	bl	ded8 <grub_file_getline>
    9e90:	mov	x21, x0
    9e94:	cbnz	x0, 9dd0 <read_terminal_list+0xe0>
    9e98:	mov	x0, x22
    9e9c:	bl	0 <grub_file_close>
    9ea0:	ldp	x21, x22, [sp, #32]
    9ea4:	ldp	x23, x24, [sp, #48]
    9ea8:	ldr	x27, [sp, #80]
    9eac:	str	wzr, [x25]
    9eb0:	ldp	x19, x20, [sp, #16]
    9eb4:	ldp	x25, x26, [sp, #64]
    9eb8:	ldp	x29, x30, [sp], #96
    9ebc:	ret
    9ec0:	ldp	x21, x22, [sp, #32]
    9ec4:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    9ec8:	ldp	x19, x20, [sp, #16]
    9ecc:	ldr	x0, [x0]
    9ed0:	str	wzr, [x0]
    9ed4:	ldp	x29, x30, [sp], #96
    9ed8:	ret
    9edc:	mov	x26, x24
    9ee0:	b	9e00 <read_terminal_list+0x110>
    9ee4:	str	wzr, [x25]
    9ee8:	b	9e80 <read_terminal_list+0x190>
    9eec:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    9ef0:	ldr	x0, [x0]
    9ef4:	str	wzr, [x0]
    9ef8:	ret
    9efc:	mov	x0, x27
    9f00:	str	wzr, [x25]
    9f04:	bl	0 <grub_free>
    9f08:	b	9e80 <read_terminal_list+0x190>
    9f0c:	ldr	x0, [x27, #8]
    9f10:	str	wzr, [x25]
    9f14:	bl	0 <grub_free>
    9f18:	mov	x0, x27
    9f1c:	bl	0 <grub_free>
    9f20:	b	9e80 <read_terminal_list+0x190>
    9f24:	nop
	...

0000000000009f48 <grub_putcode>:
    9f48:	stp	x29, x30, [sp, #-32]!
    9f4c:	mov	x29, sp
    9f50:	stp	x19, x20, [sp, #16]
    9f54:	mov	x20, x1
    9f58:	mov	w19, w0
    9f5c:	bl	c088 <grub_unicode_get_comb_type>
    9f60:	cbz	w0, 9f70 <grub_putcode+0x28>
    9f64:	ldp	x19, x20, [sp, #16]
    9f68:	ldp	x29, x30, [sp], #32
    9f6c:	ret
    9f70:	mov	x1, x20
    9f74:	mov	w0, w19
    9f78:	ldp	x19, x20, [sp, #16]
    9f7c:	mov	w2, #0x0                   	// #0
    9f80:	ldp	x29, x30, [sp], #32
    9f84:	b	96d0 <read_crypto_list+0x4a0>
    9f88:	stp	x29, x30, [sp, #-48]!
    9f8c:	mov	x29, sp
    9f90:	str	x22, [sp, #32]
    9f94:	mov	w22, w1
    9f98:	ldr	x1, [x0, #56]
    9f9c:	stp	x19, x21, [sp, #16]
    9fa0:	mov	x21, x0
    9fa4:	blr	x1
    9fa8:	and	w19, w0, #0xffff
    9fac:	ldr	x1, [x21, #64]
    9fb0:	mov	x0, x21
    9fb4:	blr	x1
    9fb8:	sub	w19, w19, w0, uxth
    9fbc:	sub	w19, w19, w22
    9fc0:	cmp	w19, #0x0
    9fc4:	b.le	9fe8 <grub_putcode+0xa0>
    9fc8:	sub	w19, w19, #0x1
    9fcc:	nop
    9fd0:	sub	w19, w19, #0x1
    9fd4:	mov	x1, x21
    9fd8:	mov	w0, #0x20                  	// #32
    9fdc:	bl	9f48 <grub_putcode>
    9fe0:	cmn	w19, #0x1
    9fe4:	b.ne	9fd0 <grub_putcode+0x88>  // b.any
    9fe8:	ldp	x19, x21, [sp, #16]
    9fec:	ldr	x22, [sp, #32]
    9ff0:	ldp	x29, x30, [sp], #48
    9ff4:	ret
    9ff8:	stp	x29, x30, [sp, #-128]!
    9ffc:	mov	x29, sp
    a000:	stp	x19, x20, [sp, #16]
    a004:	ldr	w20, [sp, #128]
    a008:	stp	x21, x22, [sp, #32]
    a00c:	add	x22, x0, x1, lsl #5
    a010:	cmp	x0, x22
    a014:	stp	x27, x28, [sp, #80]
    a018:	mov	x27, x4
    a01c:	str	w3, [sp, #104]
    a020:	stp	x0, x1, [sp, #112]
    a024:	b.cs	a230 <grub_putcode+0x2e8>  // b.hs, b.nlast
    a028:	and	w1, w20, #0x1
    a02c:	mov	w21, w6
    a030:	mov	w20, w1
    a034:	mov	x28, x0
    a038:	mov	w19, #0x1                   	// #1
    a03c:	stp	x23, x24, [sp, #48]
    a040:	mov	x23, x5
    a044:	stp	x25, x26, [sp, #64]
    a048:	mov	w25, w2
    a04c:	mov	w26, w7
    a050:	str	w1, [sp, #108]
    a054:	b	a080 <grub_putcode+0x138>
    a058:	ldrh	w0, [x28, #6]
    a05c:	ubfx	x0, x0, #3, #8
    a060:	cmp	w0, #0x2
    a064:	b.hi	a134 <grub_putcode+0x1ec>  // b.pmore
    a068:	ldrh	w0, [x28, #6]
    a06c:	add	x28, x28, #0x20
    a070:	and	w0, w0, #0xfffff807
    a074:	sturh	w0, [x28, #-26]
    a078:	cmp	x28, x22
    a07c:	b.cs	a154 <grub_putcode+0x20c>  // b.hs, b.nlast
    a080:	ldr	w0, [x28]
    a084:	cmp	w20, #0x0
    a088:	and	w0, w0, #0x7fffff
    a08c:	ccmp	w0, #0xa, #0x0, ne  // ne = any
    a090:	b.eq	a18c <grub_putcode+0x244>  // b.none
    a094:	mov	x0, x28
    a098:	mov	w2, w21
    a09c:	mov	x1, x27
    a0a0:	bl	9430 <read_crypto_list+0x200>
    a0a4:	ldr	w0, [x28]
    a0a8:	add	w19, w19, #0x1
    a0ac:	and	w0, w0, #0x7fffff
    a0b0:	cmp	w0, #0xa
    a0b4:	b.ne	a058 <grub_putcode+0x110>  // b.any
    a0b8:	cbz	x23, a0f4 <grub_putcode+0x1ac>
    a0bc:	ldr	w1, [x23, #120]
    a0c0:	mov	x0, x27
    a0c4:	ldr	x2, [x27, #56]
    a0c8:	add	w1, w1, #0x1
    a0cc:	str	w1, [x23, #120]
    a0d0:	sxtw	x19, w1
    a0d4:	blr	x2
    a0d8:	lsr	w1, w0, #16
    a0dc:	cmp	wzr, w0, lsr #16
    a0e0:	sub	x1, x1, #0x2
    a0e4:	mov	x0, #0x16                  	// #22
    a0e8:	csel	x1, x1, x0, ne  // ne = any
    a0ec:	cmp	x19, x1
    a0f0:	b.ge	a1ec <grub_putcode+0x2a4>  // b.tcont
    a0f4:	cbz	w26, a19c <grub_putcode+0x254>
    a0f8:	ldr	x1, [x27, #64]
    a0fc:	mov	x0, x27
    a100:	bfxil	w24, w25, #0, #16
    a104:	mov	w19, #0x0                   	// #0
    a108:	blr	x1
    a10c:	lsr	w1, w0, #16
    a110:	ldr	x2, [x27, #72]
    a114:	bfi	w24, w1, #16, #16
    a118:	mov	x0, x27
    a11c:	mov	w1, w24
    a120:	blr	x2
    a124:	ldrh	w0, [x28, #6]
    a128:	ubfx	x0, x0, #3, #8
    a12c:	cmp	w0, #0x2
    a130:	b.ls	a068 <grub_putcode+0x120>  // b.plast
    a134:	ldr	x0, [x28, #24]
    a138:	add	x28, x28, #0x20
    a13c:	bl	0 <grub_free>
    a140:	ldurh	w0, [x28, #-26]
    a144:	and	w0, w0, #0xfffff807
    a148:	sturh	w0, [x28, #-26]
    a14c:	cmp	x28, x22
    a150:	b.cc	a080 <grub_putcode+0x138>  // b.lo, b.ul, b.last
    a154:	ldp	x23, x24, [sp, #48]
    a158:	cmp	w19, #0x0
    a15c:	ldp	x25, x26, [sp, #64]
    a160:	cset	w0, ne  // ne = any
    a164:	ldr	w1, [sp, #108]
    a168:	mov	w19, #0x0                   	// #0
    a16c:	tst	w0, w1
    a170:	b.ne	a1c8 <grub_putcode+0x280>  // b.any
    a174:	mov	w0, w19
    a178:	ldp	x19, x20, [sp, #16]
    a17c:	ldp	x21, x22, [sp, #32]
    a180:	ldp	x27, x28, [sp, #80]
    a184:	ldp	x29, x30, [sp], #128
    a188:	ret
    a18c:	ldr	w1, [sp, #104]
    a190:	mov	x0, x27
    a194:	bl	9f88 <grub_putcode+0x40>
    a198:	b	a094 <grub_putcode+0x14c>
    a19c:	subs	w19, w25, #0x1
    a1a0:	b.mi	a1c0 <grub_putcode+0x278>  // b.first
    a1a4:	nop
    a1a8:	sub	w19, w19, #0x1
    a1ac:	mov	x1, x27
    a1b0:	mov	w0, #0x20                  	// #32
    a1b4:	bl	9f48 <grub_putcode>
    a1b8:	cmn	w19, #0x1
    a1bc:	b.ne	a1a8 <grub_putcode+0x260>  // b.any
    a1c0:	mov	w19, #0x0                   	// #0
    a1c4:	b	a058 <grub_putcode+0x110>
    a1c8:	ldr	w1, [sp, #104]
    a1cc:	mov	x0, x27
    a1d0:	bl	9f88 <grub_putcode+0x40>
    a1d4:	mov	w0, w19
    a1d8:	ldp	x19, x20, [sp, #16]
    a1dc:	ldp	x21, x22, [sp, #32]
    a1e0:	ldp	x27, x28, [sp, #80]
    a1e4:	ldp	x29, x30, [sp], #128
    a1e8:	ret
    a1ec:	ldp	x0, x1, [sp, #112]
    a1f0:	add	x3, x28, #0x20
    a1f4:	ldp	x25, x26, [sp, #64]
    a1f8:	str	x3, [x23, #8]
    a1fc:	str	w21, [x23, #24]
    a200:	mov	w19, #0x1                   	// #1
    a204:	ldp	x21, x22, [sp, #32]
    a208:	sub	x0, x28, x0
    a20c:	ldp	x27, x28, [sp, #80]
    a210:	sub	x0, x1, x0, asr #5
    a214:	sub	x0, x0, #0x1
    a218:	str	x0, [x23, #32]
    a21c:	mov	w0, w19
    a220:	ldp	x19, x20, [sp, #16]
    a224:	ldp	x23, x24, [sp, #48]
    a228:	ldp	x29, x30, [sp], #128
    a22c:	ret
    a230:	and	w0, w20, #0x1
    a234:	str	w0, [sp, #108]
    a238:	mov	w0, #0x1                   	// #1
    a23c:	b	a164 <grub_putcode+0x21c>
    a240:	stp	x29, x30, [sp, #-352]!
    a244:	mov	x29, sp
    a248:	stp	x19, x20, [sp, #16]
    a24c:	mov	x19, x4
    a250:	mov	x20, x5
    a254:	stp	x21, x22, [sp, #32]
    a258:	stp	x23, x24, [sp, #48]
    a25c:	mov	w24, w7
    a260:	stp	x25, x26, [sp, #64]
    a264:	ldr	w25, [sp, #352]
    a268:	stp	x27, x28, [sp, #80]
    a26c:	stp	x0, x1, [sp, #112]
    a270:	stp	w6, w2, [sp, #144]
    a274:	str	xzr, [sp, #160]
    a278:	str	w3, [sp, #172]
    a27c:	cbnz	w6, a2a0 <grub_putcode+0x358>
    a280:	ldr	x1, [x4, #64]
    a284:	mov	w21, w2
    a288:	mov	x0, x4
    a28c:	blr	x1
    a290:	and	w0, w0, #0xffff
    a294:	sub	w0, w0, w21
    a298:	sxtw	x0, w0
    a29c:	str	x0, [sp, #160]
    a2a0:	ldr	w1, [sp, #148]
    a2a4:	mov	x0, x19
    a2a8:	ldr	w2, [sp, #172]
    a2ac:	bl	9a98 <read_crypto_list+0x868>
    a2b0:	ldr	x1, [sp, #112]
    a2b4:	sub	x1, x1, #0x4
    a2b8:	stp	x0, x1, [sp, #96]
    a2bc:	cbz	x20, a910 <grub_putcode+0x9c8>
    a2c0:	ldr	w0, [x20, #40]
    a2c4:	add	x21, x20, #0x2c
    a2c8:	mov	x22, #0x0                   	// #0
    a2cc:	cmp	w0, #0x0
    a2d0:	b.le	a2fc <grub_putcode+0x3b4>
    a2d4:	nop
    a2d8:	ldrb	w0, [x21, x22]
    a2dc:	mov	w2, w24
    a2e0:	mov	x1, x19
    a2e4:	add	x22, x22, #0x1
    a2e8:	orr	w0, w0, #0x2000
    a2ec:	bl	96d0 <read_crypto_list+0x4a0>
    a2f0:	ldr	w0, [x20, #40]
    a2f4:	cmp	w0, w22
    a2f8:	b.gt	a2d8 <grub_putcode+0x390>
    a2fc:	ldp	x0, x1, [sp, #112]
    a300:	cmp	x0, x1
    a304:	b.cs	a968 <grub_putcode+0xa20>  // b.hs, b.nlast
    a308:	ldr	w0, [sp, #376]
    a30c:	mov	w27, #0x0                   	// #0
    a310:	ldr	x26, [sp, #112]
    a314:	eor	w0, w0, #0x1
    a318:	and	w0, w0, #0x1
    a31c:	str	w0, [sp, #140]
    a320:	ldr	x0, [sp, #96]
    a324:	mov	x28, x26
    a328:	str	xzr, [sp, #128]
    a32c:	sub	x0, x0, #0x5
    a330:	str	x0, [sp, #152]
    a334:	ldr	x21, [sp, #160]
    a338:	b	a3ac <grub_putcode+0x464>
    a33c:	mov	w2, #0xffffdfd6            	// #-8234
    a340:	add	w1, w0, w2
    a344:	cmp	w1, #0x1
    a348:	b.hi	a368 <grub_putcode+0x420>  // b.pmore
    a34c:	ldr	w1, [x20, #40]
    a350:	cmp	w1, #0x3c
    a354:	b.le	a3dc <grub_putcode+0x494>
    a358:	ldr	w0, [x20, #108]
    a35c:	add	w0, w0, #0x1
    a360:	str	w0, [x20, #108]
    a364:	ldr	w0, [x26]
    a368:	bl	c088 <grub_unicode_get_comb_type>
    a36c:	cbz	w0, a3f8 <grub_putcode+0x4b0>
    a370:	ldr	w23, [x26]
    a374:	mov	x22, #0x0                   	// #0
    a378:	ldr	w0, [sp, #140]
    a37c:	cmp	w23, #0x20
    a380:	ccmp	w0, #0x0, #0x4, eq  // eq = none
    a384:	ldr	x0, [sp, #96]
    a388:	b.ne	a480 <grub_putcode+0x538>  // b.any
    a38c:	cmp	x21, x0
    a390:	b.gt	a494 <grub_putcode+0x54c>
    a394:	cmp	w23, #0xa
    a398:	b.eq	a76c <grub_putcode+0x824>  // b.none
    a39c:	ldr	x0, [sp, #120]
    a3a0:	add	x26, x26, #0x4
    a3a4:	cmp	x0, x26
    a3a8:	b.ls	a5e8 <grub_putcode+0x6a0>  // b.plast
    a3ac:	ldr	w0, [x26]
    a3b0:	mov	w1, #0x202c                	// #8236
    a3b4:	cmp	w0, w1
    a3b8:	b.eq	a700 <grub_putcode+0x7b8>  // b.none
    a3bc:	b.ls	a33c <grub_putcode+0x3f4>  // b.plast
    a3c0:	mov	w1, #0xffffdfd3            	// #-8237
    a3c4:	add	w1, w0, w1
    a3c8:	cmp	w1, #0x1
    a3cc:	b.hi	a368 <grub_putcode+0x420>  // b.pmore
    a3d0:	ldr	w1, [x20, #40]
    a3d4:	cmp	w1, #0x3c
    a3d8:	b.gt	a358 <grub_putcode+0x410>
    a3dc:	add	x2, x20, w1, sxtw
    a3e0:	add	w1, w1, #0x1
    a3e4:	str	w1, [x20, #40]
    a3e8:	strb	w0, [x2, #44]
    a3ec:	ldr	w0, [x26]
    a3f0:	bl	c088 <grub_unicode_get_comb_type>
    a3f4:	cbnz	w0, a370 <grub_putcode+0x428>
    a3f8:	ldr	w23, [x26]
    a3fc:	mov	w0, #0x0                   	// #0
    a400:	stp	xzr, xzr, [sp, #184]
    a404:	bfxil	w0, w23, #0, #23
    a408:	str	w0, [sp, #184]
    a40c:	ldr	x0, [sp, #392]
    a410:	stp	xzr, xzr, [sp, #200]
    a414:	cbz	x0, a43c <grub_putcode+0x4f4>
    a418:	ldr	x0, [sp, #112]
    a41c:	ldr	x2, [sp, #392]
    a420:	sub	x1, x26, x0
    a424:	ubfiz	w0, w21, #1, #15
    a428:	add	x2, x2, x1
    a42c:	orr	w0, w0, #0x1
    a430:	strh	w27, [x2, #2]
    a434:	ldr	x2, [sp, #392]
    a438:	strh	w0, [x2, x1]
    a43c:	ldr	w0, [sp, #184]
    a440:	and	w0, w0, #0x7fffff
    a444:	cmp	w0, #0x9
    a448:	b.eq	a858 <grub_putcode+0x910>  // b.none
    a44c:	ldr	x2, [x19, #48]
    a450:	cbz	x2, a778 <grub_putcode+0x830>
    a454:	add	x1, sp, #0xb8
    a458:	mov	x0, x19
    a45c:	blr	x2
    a460:	ldr	w23, [x26]
    a464:	mov	x22, x0
    a468:	add	x21, x21, x22
    a46c:	ldr	w0, [sp, #140]
    a470:	cmp	w23, #0x20
    a474:	ccmp	w0, #0x0, #0x4, eq  // eq = none
    a478:	ldr	x0, [sp, #96]
    a47c:	b.eq	a38c <grub_putcode+0x444>  // b.none
    a480:	str	x26, [sp, #104]
    a484:	cmp	x21, x0
    a488:	str	x21, [sp, #128]
    a48c:	b.gt	a49c <grub_putcode+0x554>
    a490:	b	a39c <grub_putcode+0x454>
    a494:	cmp	w23, #0xa
    a498:	b.eq	a76c <grub_putcode+0x824>  // b.none
    a49c:	ldp	x0, x3, [sp, #96]
    a4a0:	add	w27, w27, #0x1
    a4a4:	ldr	w2, [sp, #144]
    a4a8:	mov	w1, w2
    a4ac:	orr	w2, w25, w2
    a4b0:	cmp	x21, x0
    a4b4:	cset	w0, gt
    a4b8:	cmp	w0, #0x0
    a4bc:	ccmp	x28, x3, #0x2, ne  // ne = any
    a4c0:	b.cc	a6c4 <grub_putcode+0x77c>  // b.lo, b.ul, b.last
    a4c4:	cmp	w0, #0x0
    a4c8:	ldr	x0, [sp, #112]
    a4cc:	ccmp	x0, x28, #0x0, ne  // ne = any
    a4d0:	b.ne	a718 <grub_putcode+0x7d0>  // b.any
    a4d4:	ldr	x0, [sp, #128]
    a4d8:	ldr	x3, [sp, #152]
    a4dc:	sub	x0, x21, x0
    a4e0:	cmp	x0, x3
    a4e4:	b.ge	a718 <grub_putcode+0x7d0>  // b.tcont
    a4e8:	ldr	x0, [sp, #160]
    a4ec:	cbz	w2, a7b0 <grub_putcode+0x868>
    a4f0:	ldr	x26, [sp, #112]
    a4f4:	sub	x21, x21, x0
    a4f8:	str	x0, [sp, #128]
    a4fc:	nop
    a500:	ldr	x0, [sp, #104]
    a504:	cmp	x0, x26
    a508:	b.eq	a6d4 <grub_putcode+0x78c>  // b.none
    a50c:	ldr	w0, [x26]
    a510:	cmp	w0, #0xa
    a514:	b.eq	a6d4 <grub_putcode+0x78c>  // b.none
    a518:	ldr	x0, [sp, #392]
    a51c:	cbz	x0, a548 <grub_putcode+0x600>
    a520:	ldr	x0, [sp, #112]
    a524:	sub	w22, w21, w22
    a528:	ldr	x2, [sp, #392]
    a52c:	sub	x0, x26, x0
    a530:	ubfiz	w22, w22, #1, #15
    a534:	add	x2, x2, x0
    a538:	orr	w22, w22, #0x1
    a53c:	strh	w27, [x2, #2]
    a540:	ldr	x2, [sp, #392]
    a544:	strh	w22, [x2, x0]
    a548:	cbz	w25, a6dc <grub_putcode+0x794>
    a54c:	sub	w25, w25, #0x1
    a550:	orr	w1, w1, w25
    a554:	mov	x28, x26
    a558:	cbnz	w1, a39c <grub_putcode+0x454>
    a55c:	ldr	w0, [sp, #368]
    a560:	cbz	w0, a8a8 <grub_putcode+0x960>
    a564:	ldr	w2, [sp, #148]
    a568:	mov	x0, x19
    a56c:	ldr	x1, [x19, #64]
    a570:	ldr	w22, [sp, #168]
    a574:	bfxil	w22, w2, #0, #16
    a578:	blr	x1
    a57c:	ldr	x2, [x19, #72]
    a580:	lsr	w1, w0, #16
    a584:	mov	x0, x19
    a588:	bfi	w22, w1, #16, #16
    a58c:	str	w22, [sp, #168]
    a590:	mov	w1, w22
    a594:	blr	x2
    a598:	ldr	w0, [x20, #40]
    a59c:	mov	x22, x20
    a5a0:	cmp	w0, #0x0
    a5a4:	b.le	a5d0 <grub_putcode+0x688>
    a5a8:	ldrb	w0, [x22, #44]
    a5ac:	mov	w2, w24
    a5b0:	mov	x1, x19
    a5b4:	add	x22, x22, #0x1
    a5b8:	orr	w0, w0, #0x2000
    a5bc:	bl	96d0 <read_crypto_list+0x4a0>
    a5c0:	ldr	w3, [x20, #40]
    a5c4:	sub	w0, w22, w20
    a5c8:	cmp	w3, w0
    a5cc:	b.gt	a5a8 <grub_putcode+0x660>
    a5d0:	ldr	x0, [sp, #120]
    a5d4:	mov	x28, x26
    a5d8:	add	x26, x26, #0x4
    a5dc:	mov	w25, #0x0                   	// #0
    a5e0:	cmp	x0, x26
    a5e4:	b.hi	a3ac <grub_putcode+0x464>  // b.pmore
    a5e8:	ldr	w0, [sp, #144]
    a5ec:	orr	w25, w25, w0
    a5f0:	ldr	x0, [sp, #392]
    a5f4:	cbz	x0, a624 <grub_putcode+0x6dc>
    a5f8:	ldr	x0, [sp, #112]
    a5fc:	and	w1, w27, #0xffff
    a600:	sub	x3, x26, x0
    a604:	ldr	x0, [sp, #392]
    a608:	add	x0, x0, x3
    a60c:	str	x0, [sp, #392]
    a610:	ldr	x2, [sp, #392]
    a614:	ubfiz	w0, w21, #1, #15
    a618:	orr	w0, w0, #0x1
    a61c:	strh	w0, [x2]
    a620:	strh	w1, [x2, #2]
    a624:	ldr	x0, [sp, #120]
    a628:	cmp	x0, x28
    a62c:	cinc	w27, w27, hi  // hi = pmore
    a630:	cbnz	w25, a8d4 <grub_putcode+0x98c>
    a634:	ldr	w0, [sp, #360]
    a638:	cbz	w0, a6a0 <grub_putcode+0x758>
    a63c:	ldr	x0, [sp, #120]
    a640:	cmp	x0, x28
    a644:	b.ls	a698 <grub_putcode+0x750>  // b.plast
    a648:	ldr	x0, [sp, #120]
    a64c:	sub	x20, x0, #0x1
    a650:	sub	x20, x20, x28
    a654:	and	x20, x20, #0xfffffffffffffffc
    a658:	add	x20, x20, #0x4
    a65c:	add	x20, x28, x20
    a660:	ldr	w2, [x19, #120]
    a664:	ldr	w0, [x28]
    a668:	and	w2, w2, #0x38
    a66c:	cmp	w2, #0x10
    a670:	b.eq	a680 <grub_putcode+0x738>  // b.none
    a674:	bl	c088 <grub_unicode_get_comb_type>
    a678:	cbnz	w0, a68c <grub_putcode+0x744>
    a67c:	ldr	w0, [x28]
    a680:	mov	w2, w24
    a684:	mov	x1, x19
    a688:	bl	96d0 <read_crypto_list+0x4a0>
    a68c:	add	x28, x28, #0x4
    a690:	cmp	x28, x20
    a694:	b.ne	a660 <grub_putcode+0x718>  // b.any
    a698:	ldr	w0, [sp, #384]
    a69c:	cbnz	w0, a8fc <grub_putcode+0x9b4>
    a6a0:	mov	w27, #0x0                   	// #0
    a6a4:	mov	w0, w27
    a6a8:	ldp	x19, x20, [sp, #16]
    a6ac:	ldp	x21, x22, [sp, #32]
    a6b0:	ldp	x23, x24, [sp, #48]
    a6b4:	ldp	x25, x26, [sp, #64]
    a6b8:	ldp	x27, x28, [sp, #80]
    a6bc:	ldp	x29, x30, [sp], #352
    a6c0:	ret
    a6c4:	cbz	w2, a850 <grub_putcode+0x908>
    a6c8:	ldr	x0, [sp, #128]
    a6cc:	ldr	x26, [sp, #104]
    a6d0:	sub	x21, x21, x0
    a6d4:	add	x26, x26, #0x4
    a6d8:	cbnz	w25, a54c <grub_putcode+0x604>
    a6dc:	ldr	w0, [sp, #360]
    a6e0:	cmn	w0, #0x1
    a6e4:	b.eq	a554 <grub_putcode+0x60c>  // b.none
    a6e8:	subs	w0, w0, #0x1
    a6ec:	str	w0, [sp, #360]
    a6f0:	b.ne	a554 <grub_putcode+0x60c>  // b.any
    a6f4:	ldr	w25, [sp, #144]
    a6f8:	mov	x28, x26
    a6fc:	b	a5f0 <grub_putcode+0x6a8>
    a700:	ldr	w1, [x20, #108]
    a704:	cbz	w1, a838 <grub_putcode+0x8f0>
    a708:	sub	w1, w1, #0x1
    a70c:	str	w1, [x20, #108]
    a710:	ldr	w0, [x26]
    a714:	b	a368 <grub_putcode+0x420>
    a718:	sub	x0, x21, x22
    a71c:	str	x0, [sp, #128]
    a720:	cbz	w2, a730 <grub_putcode+0x7e8>
    a724:	mov	x21, x22
    a728:	b	a500 <grub_putcode+0x5b8>
    a72c:	add	x28, x28, #0x4
    a730:	cmp	x28, x26
    a734:	b.cs	a7b8 <grub_putcode+0x870>  // b.hs, b.nlast
    a738:	ldr	w2, [x19, #120]
    a73c:	ldr	w0, [x28]
    a740:	and	w2, w2, #0x38
    a744:	cmp	w2, #0x10
    a748:	b.eq	a758 <grub_putcode+0x810>  // b.none
    a74c:	bl	c088 <grub_unicode_get_comb_type>
    a750:	cbnz	w0, a72c <grub_putcode+0x7e4>
    a754:	ldr	w0, [x28]
    a758:	mov	w2, w24
    a75c:	mov	x1, x19
    a760:	add	x28, x28, #0x4
    a764:	bl	96d0 <read_crypto_list+0x4a0>
    a768:	b	a730 <grub_putcode+0x7e8>
    a76c:	str	wzr, [x20, #40]
    a770:	str	wzr, [x20, #108]
    a774:	b	a49c <grub_putcode+0x554>
    a778:	ldr	w0, [x19, #120]
    a77c:	mov	x22, #0x1                   	// #1
    a780:	and	w1, w0, #0x38
    a784:	and	w0, w0, #0x30
    a788:	cmp	w1, #0x20
    a78c:	ccmp	w0, #0x10, #0x4, ne  // ne = any
    a790:	b.ne	a468 <grub_putcode+0x520>  // b.any
    a794:	and	w0, w23, #0x7fffff
    a798:	bl	c088 <grub_unicode_get_comb_type>
    a79c:	cmp	w0, #0x0
    a7a0:	ldr	w23, [x26]
    a7a4:	cset	x22, eq  // eq = none
    a7a8:	add	x21, x21, x22
    a7ac:	b	a46c <grub_putcode+0x524>
    a7b0:	ldr	x26, [sp, #112]
    a7b4:	str	x0, [sp, #128]
    a7b8:	ldr	w0, [sp, #368]
    a7bc:	cmp	w0, #0x0
    a7c0:	ccmp	w23, #0xa, #0x4, ne  // ne = any
    a7c4:	b.ne	a864 <grub_putcode+0x91c>  // b.any
    a7c8:	ldr	w0, [sp, #384]
    a7cc:	cbnz	w0, a878 <grub_putcode+0x930>
    a7d0:	ldr	w0, [sp, #368]
    a7d4:	cmp	w0, #0x0
    a7d8:	ldr	w0, [sp, #360]
    a7dc:	ccmp	w0, #0x1, #0x0, ne  // ne = any
    a7e0:	b.ne	a898 <grub_putcode+0x950>  // b.any
    a7e4:	add	x0, sp, #0xd8
    a7e8:	cmp	x20, x0
    a7ec:	b.eq	a828 <grub_putcode+0x8e0>  // b.none
    a7f0:	ldr	w1, [x20, #120]
    a7f4:	mov	x0, x19
    a7f8:	ldr	x2, [x19, #56]
    a7fc:	add	w1, w1, #0x1
    a800:	str	w1, [x20, #120]
    a804:	sxtw	x23, w1
    a808:	blr	x2
    a80c:	lsr	w1, w0, #16
    a810:	cmp	wzr, w0, lsr #16
    a814:	sub	x1, x1, #0x2
    a818:	mov	x2, #0x16                  	// #22
    a81c:	csel	x1, x1, x2, ne  // ne = any
    a820:	cmp	x23, x1
    a824:	b.ge	a928 <grub_putcode+0x9e0>  // b.tcont
    a828:	ldr	x0, [sp, #128]
    a82c:	mov	w1, #0x0                   	// #0
    a830:	sub	x21, x21, x0
    a834:	b	a500 <grub_putcode+0x5b8>
    a838:	ldr	w1, [x20, #40]
    a83c:	cbz	w1, a368 <grub_putcode+0x420>
    a840:	sub	w1, w1, #0x1
    a844:	str	w1, [x20, #40]
    a848:	ldr	w0, [x26]
    a84c:	b	a368 <grub_putcode+0x420>
    a850:	ldr	x26, [sp, #104]
    a854:	b	a738 <grub_putcode+0x7f0>
    a858:	mov	x22, #0x8                   	// #8
    a85c:	add	x21, x21, x22
    a860:	b	a46c <grub_putcode+0x524>
    a864:	mov	w2, w24
    a868:	mov	x1, x19
    a86c:	bl	96d0 <read_crypto_list+0x4a0>
    a870:	ldr	w0, [sp, #384]
    a874:	cbz	w0, a7d0 <grub_putcode+0x888>
    a878:	ldr	w1, [sp, #172]
    a87c:	mov	x0, x19
    a880:	bl	9f88 <grub_putcode+0x40>
    a884:	ldr	w0, [sp, #368]
    a888:	cmp	w0, #0x0
    a88c:	ldr	w0, [sp, #360]
    a890:	ccmp	w0, #0x1, #0x0, ne  // ne = any
    a894:	b.eq	a7e4 <grub_putcode+0x89c>  // b.none
    a898:	mov	x1, x19
    a89c:	mov	w0, #0xa                   	// #10
    a8a0:	bl	9f48 <grub_putcode>
    a8a4:	b	a7e4 <grub_putcode+0x89c>
    a8a8:	ldr	w0, [sp, #148]
    a8ac:	subs	w22, w0, #0x1
    a8b0:	b.mi	a598 <grub_putcode+0x650>  // b.first
    a8b4:	nop
    a8b8:	sub	w22, w22, #0x1
    a8bc:	mov	x1, x19
    a8c0:	mov	w0, #0x20                  	// #32
    a8c4:	bl	9f48 <grub_putcode>
    a8c8:	cmn	w22, #0x1
    a8cc:	b.ne	a8b8 <grub_putcode+0x970>  // b.any
    a8d0:	b	a598 <grub_putcode+0x650>
    a8d4:	ldr	w0, [sp, #144]
    a8d8:	cbz	w0, a6a0 <grub_putcode+0x758>
    a8dc:	mov	w0, w27
    a8e0:	ldp	x19, x20, [sp, #16]
    a8e4:	ldp	x21, x22, [sp, #32]
    a8e8:	ldp	x23, x24, [sp, #48]
    a8ec:	ldp	x25, x26, [sp, #64]
    a8f0:	ldp	x27, x28, [sp, #80]
    a8f4:	ldp	x29, x30, [sp], #352
    a8f8:	ret
    a8fc:	ldr	w1, [sp, #172]
    a900:	mov	x0, x19
    a904:	mov	w27, #0x0                   	// #0
    a908:	bl	9f88 <grub_putcode+0x40>
    a90c:	b	a8dc <grub_putcode+0x994>
    a910:	add	x20, sp, #0xd8
    a914:	mov	x2, #0x88                  	// #136
    a918:	mov	x0, x20
    a91c:	mov	w1, #0x0                   	// #0
    a920:	bl	0 <grub_memset>
    a924:	b	a2c0 <grub_putcode+0x378>
    a928:	ldr	x0, [sp, #104]
    a92c:	cmp	x26, x0
    a930:	b.eq	a960 <grub_putcode+0xa18>  // b.none
    a934:	ldr	w0, [x26]
    a938:	cmp	w0, #0xa
    a93c:	b.eq	a960 <grub_putcode+0xa18>  // b.none
    a940:	ldr	x0, [sp, #120]
    a944:	mov	w27, #0x1                   	// #1
    a948:	str	x26, [x20, #16]
    a94c:	sub	x0, x0, x26
    a950:	str	w24, [x20, #24]
    a954:	asr	x0, x0, #2
    a958:	str	x0, [x20, #32]
    a95c:	b	a8dc <grub_putcode+0x994>
    a960:	add	x26, x26, #0x4
    a964:	b	a940 <grub_putcode+0x9f8>
    a968:	ldr	w0, [sp, #144]
    a96c:	mov	w27, #0x0                   	// #0
    a970:	ldr	x28, [sp, #112]
    a974:	orr	w25, w25, w0
    a978:	ldr	x0, [sp, #392]
    a97c:	cbz	x0, a630 <grub_putcode+0x6e8>
    a980:	mov	w1, #0x0                   	// #0
    a984:	mov	w27, #0x0                   	// #0
    a988:	ldr	x21, [sp, #160]
    a98c:	b	a610 <grub_putcode+0x6c8>
    a990:	sub	sp, sp, #0xb0
    a994:	stp	x29, x30, [sp, #48]
    a998:	add	x29, sp, #0x30
    a99c:	stp	x19, x20, [sp, #64]
    a9a0:	mov	x19, x1
    a9a4:	mov	w20, w2
    a9a8:	stp	x21, x22, [sp, #80]
    a9ac:	mov	w22, w6
    a9b0:	ldr	w21, [sp, #176]
    a9b4:	stp	x23, x24, [sp, #96]
    a9b8:	mov	w24, w3
    a9bc:	mov	x23, x4
    a9c0:	stp	x25, x26, [sp, #112]
    a9c4:	mov	w25, w7
    a9c8:	stp	x27, x28, [sp, #128]
    a9cc:	mov	x28, x0
    a9d0:	cbnz	w6, aab4 <grub_putcode+0xb6c>
    a9d4:	mov	x27, #0x0                   	// #0
    a9d8:	cbnz	w5, acb8 <grub_putcode+0xd70>
    a9dc:	ldr	x1, [x23, #64]
    a9e0:	mov	x0, x23
    a9e4:	blr	x1
    a9e8:	and	w2, w0, #0xffff
    a9ec:	cmp	w20, w0, uxth
    a9f0:	b.le	aa20 <grub_putcode+0xad8>
    a9f4:	ldr	w1, [sp, #192]
    a9f8:	cbnz	w1, ace0 <grub_putcode+0xd98>
    a9fc:	sub	w2, w20, w2
    aa00:	sub	w26, w2, #0x1
    aa04:	nop
    aa08:	sub	w26, w26, #0x1
    aa0c:	mov	x1, x23
    aa10:	mov	w0, #0x20                  	// #32
    aa14:	bl	9f48 <grub_putcode>
    aa18:	cmn	w26, #0x1
    aa1c:	b.ne	aa08 <grub_putcode+0xac0>  // b.any
    aa20:	ldr	w0, [x23, #120]
    aa24:	and	w0, w0, #0x38
    aa28:	sub	w0, w0, #0x18
    aa2c:	tst	w0, #0xfffffff0
    aa30:	b.eq	ac78 <grub_putcode+0xd30>  // b.none
    aa34:	ldr	w0, [sp, #192]
    aa38:	mov	w2, w20
    aa3c:	ldr	w1, [sp, #184]
    aa40:	mov	w7, w25
    aa44:	cmp	w0, #0x0
    aa48:	str	w1, [sp, #8]
    aa4c:	cset	w0, ne  // ne = any
    aa50:	str	w0, [sp, #24]
    aa54:	ldr	w0, [sp, #200]
    aa58:	mov	w6, w22
    aa5c:	ldr	w1, [sp, #192]
    aa60:	mov	x5, x27
    aa64:	str	w0, [sp, #32]
    aa68:	mov	x4, x23
    aa6c:	ldr	x0, [sp, #208]
    aa70:	str	w21, [sp]
    aa74:	str	w1, [sp, #16]
    aa78:	mov	w3, w24
    aa7c:	str	x0, [sp, #40]
    aa80:	mov	x1, x19
    aa84:	mov	x0, x28
    aa88:	bl	a240 <grub_putcode+0x2f8>
    aa8c:	mov	w20, w0
    aa90:	mov	w0, w20
    aa94:	ldp	x29, x30, [sp, #48]
    aa98:	ldp	x19, x20, [sp, #64]
    aa9c:	ldp	x21, x22, [sp, #80]
    aaa0:	ldp	x23, x24, [sp, #96]
    aaa4:	ldp	x25, x26, [sp, #112]
    aaa8:	ldp	x27, x28, [sp, #128]
    aaac:	add	sp, sp, #0xb0
    aab0:	ret
    aab4:	ldr	w0, [x4, #120]
    aab8:	mov	x27, #0x0                   	// #0
    aabc:	and	w0, w0, #0x38
    aac0:	sub	w0, w0, #0x18
    aac4:	tst	w0, #0xfffffff0
    aac8:	b.ne	aa34 <grub_putcode+0xaec>  // b.any
    aacc:	sub	x19, x19, x28
    aad0:	mov	w2, w24
    aad4:	mov	w1, w20
    aad8:	mov	x0, x23
    aadc:	asr	x7, x19, #2
    aae0:	str	x7, [sp, #152]
    aae4:	mov	x27, #0x0                   	// #0
    aae8:	bl	9a98 <read_crypto_list+0x868>
    aaec:	mov	x19, x0
    aaf0:	ldr	x7, [sp, #152]
    aaf4:	mov	x6, #0x0                   	// #0
    aaf8:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    aafc:	ldr	w0, [sp, #192]
    ab00:	ldr	x2, [sp, #208]
    ab04:	cmp	w0, #0x0
    ab08:	ldr	x3, [x1]
    ab0c:	mov	x1, x7
    ab10:	ldr	w7, [sp, #192]
    ab14:	cset	w0, ne  // ne = any
    ab18:	str	x2, [sp]
    ab1c:	mov	x5, x19
    ab20:	str	w0, [sp, #8]
    ab24:	mov	x4, x23
    ab28:	mov	x0, x28
    ab2c:	add	x2, sp, #0xa8
    ab30:	bl	dae8 <grub_bidi_logical_to_visual>
    ab34:	tbnz	x0, #63, ad24 <grub_putcode+0xddc>
    ab38:	ldr	x19, [sp, #168]
    ab3c:	cbz	w21, ad90 <grub_putcode+0xe48>
    ab40:	add	x2, x19, x0, lsl #5
    ab44:	mov	x5, x19
    ab48:	cmp	x2, x19
    ab4c:	b.hi	ab5c <grub_putcode+0xc14>  // b.pmore
    ab50:	b	ab78 <grub_putcode+0xc30>
    ab54:	cmp	x2, x5
    ab58:	b.ls	ab78 <grub_putcode+0xc30>  // b.plast
    ab5c:	ldr	w1, [x5]
    ab60:	add	x5, x5, #0x20
    ab64:	and	w1, w1, #0x7fffff
    ab68:	cmp	w1, #0xa
    ab6c:	b.ne	ab54 <grub_putcode+0xc0c>  // b.any
    ab70:	subs	w21, w21, #0x1
    ab74:	b.ne	ab54 <grub_putcode+0xc0c>  // b.any
    ab78:	ldr	w1, [sp, #184]
    ab7c:	cmn	w1, #0x1
    ab80:	b.eq	ad30 <grub_putcode+0xde8>  // b.none
    ab84:	cbz	w1, ad88 <grub_putcode+0xe40>
    ab88:	add	x3, x19, x0, lsl #5
    ab8c:	cmp	x3, x5
    ab90:	b.ls	ad88 <grub_putcode+0xe40>  // b.plast
    ab94:	mov	x1, x5
    ab98:	b	aba4 <grub_putcode+0xc5c>
    ab9c:	cmp	x3, x1
    aba0:	b.ls	abc8 <grub_putcode+0xc80>  // b.plast
    aba4:	ldr	w2, [x1]
    aba8:	add	x1, x1, #0x20
    abac:	and	w2, w2, #0x7fffff
    abb0:	cmp	w2, #0xa
    abb4:	b.ne	ab9c <grub_putcode+0xc54>  // b.any
    abb8:	ldr	w2, [sp, #184]
    abbc:	subs	w2, w2, #0x1
    abc0:	str	w2, [sp, #184]
    abc4:	b.ne	ab9c <grub_putcode+0xc54>  // b.any
    abc8:	sub	x1, x1, x5
    abcc:	asr	x1, x1, #5
    abd0:	cbz	w22, ad40 <grub_putcode+0xdf8>
    abd4:	lsl	x4, x1, #5
    abd8:	mov	w20, #0x0                   	// #0
    abdc:	add	x3, x5, x4
    abe0:	cmp	x3, x5
    abe4:	b.ls	ac00 <grub_putcode+0xcb8>  // b.plast
    abe8:	ldr	w2, [x5], #32
    abec:	and	w2, w2, #0x7fffff
    abf0:	cmp	w2, #0xa
    abf4:	cinc	w20, w20, eq  // eq = none
    abf8:	cmp	x3, x5
    abfc:	b.hi	abe8 <grub_putcode+0xca0>  // b.pmore
    ac00:	cbnz	x1, ad0c <grub_putcode+0xdc4>
    ac04:	lsl	x21, x0, #5
    ac08:	add	x0, x19, x21
    ac0c:	cmp	x19, x0
    ac10:	b.cc	ac38 <grub_putcode+0xcf0>  // b.lo, b.ul, b.last
    ac14:	b	ad7c <grub_putcode+0xe34>
    ac18:	ldrh	w1, [x19, #6]
    ac1c:	add	x19, x19, #0x20
    ac20:	and	w1, w1, #0xfffff807
    ac24:	sturh	w1, [x19, #-26]
    ac28:	ldr	x0, [sp, #168]
    ac2c:	add	x1, x0, x21
    ac30:	cmp	x19, x1
    ac34:	b.cs	ac70 <grub_putcode+0xd28>  // b.hs, b.nlast
    ac38:	ldrh	w1, [x19, #6]
    ac3c:	ubfx	x1, x1, #3, #8
    ac40:	cmp	w1, #0x2
    ac44:	b.ls	ac18 <grub_putcode+0xcd0>  // b.plast
    ac48:	ldr	x0, [x19, #24]
    ac4c:	add	x19, x19, #0x20
    ac50:	bl	0 <grub_free>
    ac54:	ldurh	w1, [x19, #-26]
    ac58:	and	w1, w1, #0xfffff807
    ac5c:	sturh	w1, [x19, #-26]
    ac60:	ldr	x0, [sp, #168]
    ac64:	add	x1, x0, x21
    ac68:	cmp	x19, x1
    ac6c:	b.cc	ac38 <grub_putcode+0xcf0>  // b.lo, b.ul, b.last
    ac70:	bl	0 <grub_free>
    ac74:	b	aa90 <grub_putcode+0xb48>
    ac78:	sub	x19, x19, x28
    ac7c:	mov	w2, w24
    ac80:	mov	w1, w20
    ac84:	mov	x0, x23
    ac88:	asr	x7, x19, #2
    ac8c:	str	x7, [sp, #152]
    ac90:	bl	9a98 <read_crypto_list+0x868>
    ac94:	mov	x19, x0
    ac98:	ldr	x1, [x23, #64]
    ac9c:	mov	x0, x23
    aca0:	blr	x1
    aca4:	and	w6, w0, #0xffff
    aca8:	sub	w6, w6, w20
    acac:	ldr	x7, [sp, #152]
    acb0:	sxtw	x6, w6
    acb4:	b	aaf8 <grub_putcode+0xbb0>
    acb8:	add	x0, x4, #0x10
    acbc:	bl	9970 <read_crypto_list+0x740>
    acc0:	ldr	x1, [x23, #64]
    acc4:	mov	x27, x0
    acc8:	mov	x0, x23
    accc:	blr	x1
    acd0:	and	w2, w0, #0xffff
    acd4:	cmp	w20, w0, uxth
    acd8:	b.le	aa20 <grub_putcode+0xad8>
    acdc:	b	a9f4 <grub_putcode+0xaac>
    ace0:	ldr	x2, [x23, #72]
    ace4:	bfxil	w0, w20, #0, #16
    ace8:	mov	w1, w0
    acec:	mov	x0, x23
    acf0:	blr	x2
    acf4:	ldr	w0, [x23, #120]
    acf8:	and	w0, w0, #0x38
    acfc:	sub	w0, w0, #0x18
    ad00:	tst	w0, #0xfffffff0
    ad04:	b.eq	ac78 <grub_putcode+0xd30>  // b.none
    ad08:	b	aa34 <grub_putcode+0xaec>
    ad0c:	add	x4, x19, x4
    ad10:	ldur	w1, [x4, #-32]
    ad14:	and	w1, w1, #0x7fffff
    ad18:	cmp	w1, #0xa
    ad1c:	cinc	w20, w20, ne  // ne = any
    ad20:	b	ac04 <grub_putcode+0xcbc>
    ad24:	mov	w20, #0x0                   	// #0
    ad28:	bl	0 <grub_print_error>
    ad2c:	b	aa90 <grub_putcode+0xb48>
    ad30:	add	x1, x19, x0, lsl #5
    ad34:	sub	x1, x1, x5
    ad38:	asr	x1, x1, #5
    ad3c:	b	abd0 <grub_putcode+0xc88>
    ad40:	ldr	w7, [sp, #192]
    ad44:	mov	w2, w20
    ad48:	ldr	w0, [sp, #200]
    ad4c:	mov	w6, w25
    ad50:	str	w0, [sp]
    ad54:	mov	x4, x23
    ad58:	mov	x0, x5
    ad5c:	mov	w3, w24
    ad60:	mov	x5, x27
    ad64:	bl	9ff8 <grub_putcode+0xb0>
    ad68:	mov	w20, w0
    ad6c:	ldr	x0, [sp, #168]
    ad70:	cbz	w20, ac70 <grub_putcode+0xd28>
    ad74:	str	x0, [x27, #112]
    ad78:	b	aa90 <grub_putcode+0xb48>
    ad7c:	mov	x0, x19
    ad80:	bl	0 <grub_free>
    ad84:	b	aa90 <grub_putcode+0xb48>
    ad88:	mov	x1, #0x0                   	// #0
    ad8c:	b	abd0 <grub_putcode+0xc88>
    ad90:	mov	x5, x19
    ad94:	b	ab78 <grub_putcode+0xc30>
	...

000000000000ada0 <grub_puts_terminal>:
    ada0:	sub	sp, sp, #0xa0
    ada4:	stp	x29, x30, [sp, #48]
    ada8:	add	x29, sp, #0x30
    adac:	stp	x19, x20, [sp, #64]
    adb0:	mov	x20, x0
    adb4:	mov	x19, x1
    adb8:	bl	0 <grub_error_push>
    adbc:	add	x2, sp, #0x78
    adc0:	add	x1, sp, #0x70
    adc4:	mov	x0, x20
    adc8:	bl	c018 <grub_utf8_to_ucs4_alloc>
    adcc:	bl	0 <grub_error_pop>
    add0:	ldr	x0, [sp, #112]
    add4:	cbz	x0, ae28 <grub_puts_terminal+0x88>
    add8:	ldr	x1, [sp, #120]
    addc:	mov	w2, #0xffffffff            	// #-1
    ade0:	str	wzr, [sp]
    ade4:	mov	x4, x19
    ade8:	str	w2, [sp, #8]
    adec:	mov	w7, #0x0                   	// #0
    adf0:	str	wzr, [sp, #16]
    adf4:	mov	w6, #0x0                   	// #0
    adf8:	str	wzr, [sp, #24]
    adfc:	mov	w5, #0x0                   	// #0
    ae00:	str	xzr, [sp, #32]
    ae04:	mov	w3, #0x0                   	// #0
    ae08:	mov	w2, #0x0                   	// #0
    ae0c:	bl	a990 <grub_putcode+0xa48>
    ae10:	ldr	x0, [sp, #112]
    ae14:	bl	0 <grub_free>
    ae18:	ldp	x29, x30, [sp, #48]
    ae1c:	ldp	x19, x20, [sp, #64]
    ae20:	add	sp, sp, #0xa0
    ae24:	ret
    ae28:	ldrb	w0, [x20]
    ae2c:	cbz	w0, ae18 <grub_puts_terminal+0x78>
    ae30:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    ae34:	stp	x21, x22, [sp, #80]
    ae38:	mov	w22, #0x1                   	// #1
    ae3c:	ldr	x21, [x1]
    ae40:	str	x23, [sp, #96]
    ae44:	mov	w23, #0xd                   	// #13
    ae48:	ldr	x19, [x21]
    ae4c:	stp	xzr, xzr, [sp, #128]
    ae50:	str	w0, [sp, #128]
    ae54:	strb	w22, [sp, #136]
    ae58:	stp	xzr, xzr, [sp, #144]
    ae5c:	cbz	x19, ae78 <grub_puts_terminal+0xd8>
    ae60:	ldr	x2, [x19, #40]
    ae64:	mov	x0, x19
    ae68:	add	x1, sp, #0x80
    ae6c:	blr	x2
    ae70:	ldr	x19, [x19]
    ae74:	cbnz	x19, ae60 <grub_puts_terminal+0xc0>
    ae78:	ldrb	w0, [x20]
    ae7c:	cmp	w0, #0xa
    ae80:	b.eq	aea4 <grub_puts_terminal+0x104>  // b.none
    ae84:	ldrb	w0, [x20, #1]!
    ae88:	cbnz	w0, ae48 <grub_puts_terminal+0xa8>
    ae8c:	ldp	x29, x30, [sp, #48]
    ae90:	ldp	x19, x20, [sp, #64]
    ae94:	ldp	x21, x22, [sp, #80]
    ae98:	ldr	x23, [sp, #96]
    ae9c:	add	sp, sp, #0xa0
    aea0:	ret
    aea4:	ldr	w0, [sp, #128]
    aea8:	ldr	x19, [x21]
    aeac:	bfxil	w0, w23, #0, #23
    aeb0:	str	w0, [sp, #128]
    aeb4:	cbz	x19, ae84 <grub_puts_terminal+0xe4>
    aeb8:	ldr	x2, [x19, #40]
    aebc:	mov	x0, x19
    aec0:	add	x1, sp, #0x80
    aec4:	blr	x2
    aec8:	ldr	x19, [x19]
    aecc:	cbnz	x19, aeb8 <grub_puts_terminal+0x118>
    aed0:	b	ae84 <grub_puts_terminal+0xe4>
    aed4:	nop
	...

000000000000aee0 <grub_print_ucs4_menu>:
    aee0:	sub	sp, sp, #0x40
    aee4:	mov	w9, w7
    aee8:	mov	w7, #0x1                   	// #1
    aeec:	stp	x29, x30, [sp, #48]
    aef0:	add	x29, sp, #0x30
    aef4:	ldr	x8, [sp, #64]
    aef8:	str	w5, [sp]
    aefc:	str	w6, [sp, #8]
    af00:	mov	w5, #0x0                   	// #0
    af04:	str	w9, [sp, #16]
    af08:	mov	w6, #0x0                   	// #0
    af0c:	str	w7, [sp, #24]
    af10:	str	x8, [sp, #32]
    af14:	bl	a990 <grub_putcode+0xa48>
    af18:	ldp	x29, x30, [sp, #48]
    af1c:	add	sp, sp, #0x40
    af20:	ret
    af24:	nop

000000000000af28 <grub_print_ucs4>:
    af28:	sub	sp, sp, #0x40
    af2c:	mov	w5, #0xffffffff            	// #-1
    af30:	mov	w7, #0x1                   	// #1
    af34:	mov	w6, #0x0                   	// #0
    af38:	stp	x29, x30, [sp, #48]
    af3c:	add	x29, sp, #0x30
    af40:	str	wzr, [sp]
    af44:	str	w5, [sp, #8]
    af48:	mov	w5, #0x0                   	// #0
    af4c:	str	wzr, [sp, #16]
    af50:	str	wzr, [sp, #24]
    af54:	str	xzr, [sp, #32]
    af58:	bl	a990 <grub_putcode+0xa48>
    af5c:	ldp	x29, x30, [sp, #48]
    af60:	add	sp, sp, #0x40
    af64:	ret

000000000000af68 <grub_ucs4_count_lines>:
    af68:	sub	sp, sp, #0x40
    af6c:	mov	w5, #0xffffffff            	// #-1
    af70:	mov	w7, #0x1                   	// #1
    af74:	mov	w6, w7
    af78:	stp	x29, x30, [sp, #48]
    af7c:	add	x29, sp, #0x30
    af80:	str	wzr, [sp]
    af84:	str	w5, [sp, #8]
    af88:	mov	w5, #0x0                   	// #0
    af8c:	str	wzr, [sp, #16]
    af90:	str	wzr, [sp, #24]
    af94:	str	xzr, [sp, #32]
    af98:	bl	a990 <grub_putcode+0xa48>
    af9c:	ldp	x29, x30, [sp, #48]
    afa0:	add	sp, sp, #0x40
    afa4:	ret

000000000000afa8 <grub_xnputs>:
    afa8:	sub	sp, sp, #0xd0
    afac:	stp	x29, x30, [sp, #48]
    afb0:	add	x29, sp, #0x30
    afb4:	stp	x19, x20, [sp, #64]
    afb8:	mov	x19, x1
    afbc:	stp	x21, x22, [sp, #80]
    afc0:	mov	x22, x0
    afc4:	stp	x25, x26, [sp, #112]
    afc8:	bl	0 <grub_error_push>
    afcc:	lsl	x0, x19, #2
    afd0:	bl	0 <grub_malloc>
    afd4:	mov	x26, x0
    afd8:	bl	0 <grub_error_pop>
    afdc:	cbz	x26, b33c <grub_xnputs+0x394>
    afe0:	mov	x1, x19
    afe4:	mov	x2, x22
    afe8:	mov	x0, x26
    afec:	mov	x4, #0x0                   	// #0
    aff0:	mov	x3, #0xffffffffffffffff    	// #-1
    aff4:	bl	beb0 <grub_utf8_to_ucs4>
    aff8:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    affc:	add	x21, x26, x0, lsl #2
    b000:	ldr	x20, [x1]
    b004:	ldr	x19, [x20]
    b008:	cbz	x19, b290 <grub_xnputs+0x2e8>
    b00c:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    b010:	stp	x23, x24, [sp, #96]
    b014:	mov	w22, #0x0                   	// #0
    b018:	ldr	x24, [x0]
    b01c:	mov	w25, #0xffffffff            	// #-1
    b020:	mov	w23, #0x1                   	// #1
    b024:	nop
    b028:	str	wzr, [sp]
    b02c:	mov	x4, x19
    b030:	str	w25, [sp, #8]
    b034:	mov	x1, x21
    b038:	str	wzr, [sp, #16]
    b03c:	mov	x0, x26
    b040:	str	wzr, [sp, #24]
    b044:	mov	w7, #0x0                   	// #0
    b048:	str	xzr, [sp, #32]
    b04c:	mov	w6, #0x0                   	// #0
    b050:	mov	w3, #0x0                   	// #0
    b054:	mov	w2, #0x0                   	// #0
    b058:	ldr	w5, [x24, #16]
    b05c:	bl	a990 <grub_putcode+0xa48>
    b060:	cmp	w0, #0x0
    b064:	ldr	x19, [x19]
    b068:	csel	w22, w22, w23, eq  // eq = none
    b06c:	cbnz	x19, b028 <grub_xnputs+0x80>
    b070:	cbz	w22, b3dc <grub_xnputs+0x434>
    b074:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    b078:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    b07c:	add	x21, sp, #0xb0
    b080:	mov	w25, #0xffffffff            	// #-1
    b084:	ldr	x1, [x1]
    b088:	stp	x27, x28, [sp, #128]
    b08c:	ldr	x0, [x0]
    b090:	stp	x0, x1, [sp, #144]
    b094:	nop
    b098:	ldp	x1, x0, [sp, #144]
    b09c:	ldr	x1, [x1]
    b0a0:	blr	x1
    b0a4:	mov	x2, x21
    b0a8:	add	x1, sp, #0xa8
    b0ac:	bl	c018 <grub_utf8_to_ucs4_alloc>
    b0b0:	ldr	x0, [sp, #168]
    b0b4:	cbz	x0, b32c <grub_xnputs+0x384>
    b0b8:	bl	9c00 <grub_term_save_pos>
    b0bc:	mov	x19, x0
    b0c0:	ldr	x23, [x20]
    b0c4:	cbz	x23, b134 <grub_xnputs+0x18c>
    b0c8:	ldr	x2, [x23, #88]
    b0cc:	mov	x0, x23
    b0d0:	mov	w1, #0x2                   	// #2
    b0d4:	cbz	x2, b0dc <grub_xnputs+0x134>
    b0d8:	blr	x2
    b0dc:	ldr	x23, [x23]
    b0e0:	cbnz	x23, b0c8 <grub_xnputs+0x120>
    b0e4:	ldr	x23, [x20]
    b0e8:	cbz	x23, b134 <grub_xnputs+0x18c>
    b0ec:	nop
    b0f0:	ldp	x0, x1, [sp, #168]
    b0f4:	mov	x4, x23
    b0f8:	mov	w3, #0x0                   	// #0
    b0fc:	mov	w2, #0x0                   	// #0
    b100:	bl	af28 <grub_print_ucs4>
    b104:	ldr	x23, [x23]
    b108:	cbnz	x23, b0f0 <grub_xnputs+0x148>
    b10c:	ldr	x23, [x20]
    b110:	cbz	x23, b134 <grub_xnputs+0x18c>
    b114:	nop
    b118:	ldr	x2, [x23, #88]
    b11c:	mov	x0, x23
    b120:	mov	w1, #0x1                   	// #1
    b124:	cbz	x2, b12c <grub_xnputs+0x184>
    b128:	blr	x2
    b12c:	ldr	x23, [x23]
    b130:	cbnz	x23, b118 <grub_xnputs+0x170>
    b134:	ldr	x0, [sp, #168]
    b138:	bl	0 <grub_free>
    b13c:	bl	0 <grub_getkey>
    b140:	and	w23, w0, #0xff
    b144:	cbz	x19, b170 <grub_xnputs+0x1c8>
    b148:	ldr	x28, [x20]
    b14c:	cbz	x28, b1c8 <grub_xnputs+0x220>
    b150:	mov	x27, x19
    b154:	nop
    b158:	ldr	w1, [x27], #4
    b15c:	mov	x0, x28
    b160:	ldr	x3, [x28, #72]
    b164:	blr	x3
    b168:	ldr	x28, [x28]
    b16c:	cbnz	x28, b158 <grub_xnputs+0x1b0>
    b170:	ldr	x27, [x20]
    b174:	cbz	x27, b1c8 <grub_xnputs+0x220>
    b178:	mov	w28, #0x8                   	// #8
    b17c:	nop
    b180:	mov	x1, x27
    b184:	mov	w0, #0x20                  	// #32
    b188:	bl	9f48 <grub_putcode>
    b18c:	subs	w28, w28, #0x1
    b190:	b.ne	b180 <grub_xnputs+0x1d8>  // b.any
    b194:	ldr	x27, [x27]
    b198:	cbnz	x27, b178 <grub_xnputs+0x1d0>
    b19c:	cbz	x19, b1c8 <grub_xnputs+0x220>
    b1a0:	ldr	x27, [x20]
    b1a4:	cbz	x27, b1c8 <grub_xnputs+0x220>
    b1a8:	mov	x28, x19
    b1ac:	nop
    b1b0:	ldr	w1, [x28], #4
    b1b4:	mov	x0, x27
    b1b8:	ldr	x3, [x27, #72]
    b1bc:	blr	x3
    b1c0:	ldr	x27, [x27]
    b1c4:	cbnz	x27, b1b0 <grub_xnputs+0x208>
    b1c8:	mov	x0, x19
    b1cc:	bl	0 <grub_free>
    b1d0:	cmp	w23, #0xd
    b1d4:	ccmp	w23, #0xa, #0x4, ne  // ne = any
    b1d8:	b.ne	b308 <grub_xnputs+0x360>  // b.any
    b1dc:	ldr	x0, [x24]
    b1e0:	str	x0, [x24, #24]
    b1e4:	cbz	x0, b200 <grub_xnputs+0x258>
    b1e8:	ldr	w1, [x0, #120]
    b1ec:	sub	w1, w1, #0x1
    b1f0:	str	w1, [x0, #120]
    b1f4:	ldr	x0, [x0]
    b1f8:	cbnz	x0, b1e8 <grub_xnputs+0x240>
    b1fc:	str	xzr, [x24, #24]
    b200:	ldr	x28, [x20]
    b204:	cbz	x28, b288 <grub_xnputs+0x2e0>
    b208:	mov	w23, #0x0                   	// #0
    b20c:	b	b220 <grub_xnputs+0x278>
    b210:	ldr	x0, [x19, #8]
    b214:	cbnz	x0, b2c8 <grub_xnputs+0x320>
    b218:	ldr	x28, [x28]
    b21c:	cbz	x28, b284 <grub_xnputs+0x2dc>
    b220:	add	x0, x28, #0x10
    b224:	bl	9970 <read_crypto_list+0x740>
    b228:	mov	x19, x0
    b22c:	cbz	x0, b218 <grub_xnputs+0x270>
    b230:	ldr	x0, [x0, #16]
    b234:	cbz	x0, b210 <grub_xnputs+0x268>
    b238:	ldr	w7, [x19, #24]
    b23c:	mov	x5, x19
    b240:	ldr	x1, [x19, #32]
    b244:	str	wzr, [sp]
    b248:	str	w25, [sp, #8]
    b24c:	mov	x4, x28
    b250:	str	wzr, [sp, #16]
    b254:	mov	w6, #0x0                   	// #0
    b258:	str	wzr, [sp, #24]
    b25c:	add	x1, x0, x1, lsl #2
    b260:	str	wzr, [sp, #32]
    b264:	mov	w3, #0x0                   	// #0
    b268:	str	xzr, [sp, #40]
    b26c:	mov	w2, #0x0                   	// #0
    b270:	bl	a240 <grub_putcode+0x2f8>
    b274:	cbz	w0, b2b0 <grub_xnputs+0x308>
    b278:	ldr	x28, [x28]
    b27c:	mov	w23, w22
    b280:	cbnz	x28, b220 <grub_xnputs+0x278>
    b284:	cbnz	w23, b098 <grub_xnputs+0xf0>
    b288:	ldp	x23, x24, [sp, #96]
    b28c:	ldp	x27, x28, [sp, #128]
    b290:	mov	x0, x26
    b294:	bl	0 <grub_free>
    b298:	ldp	x29, x30, [sp, #48]
    b29c:	ldp	x19, x20, [sp, #64]
    b2a0:	ldp	x21, x22, [sp, #80]
    b2a4:	ldp	x25, x26, [sp, #112]
    b2a8:	add	sp, sp, #0xd0
    b2ac:	ret
    b2b0:	ldr	x0, [x19, #112]
    b2b4:	bl	0 <grub_free>
    b2b8:	str	xzr, [x19, #16]
    b2bc:	str	xzr, [x19, #32]
    b2c0:	str	xzr, [x19, #112]
    b2c4:	b	b218 <grub_xnputs+0x270>
    b2c8:	ldr	w6, [x19, #24]
    b2cc:	mov	x5, x19
    b2d0:	ldr	x1, [x19, #32]
    b2d4:	str	wzr, [sp]
    b2d8:	mov	x4, x28
    b2dc:	mov	w7, #0x0                   	// #0
    b2e0:	mov	w3, #0x0                   	// #0
    b2e4:	mov	w2, #0x0                   	// #0
    b2e8:	bl	9ff8 <grub_putcode+0xb0>
    b2ec:	cbnz	w0, b278 <grub_xnputs+0x2d0>
    b2f0:	ldr	x0, [x19, #112]
    b2f4:	bl	0 <grub_free>
    b2f8:	str	xzr, [x19, #8]
    b2fc:	str	xzr, [x19, #32]
    b300:	str	xzr, [x19, #112]
    b304:	b	b218 <grub_xnputs+0x270>
    b308:	ldr	x0, [x24]
    b30c:	str	x0, [x24, #8]
    b310:	cbz	x0, b200 <grub_xnputs+0x258>
    b314:	nop
    b318:	str	wzr, [x0, #120]
    b31c:	ldr	x0, [x0]
    b320:	cbnz	x0, b318 <grub_xnputs+0x370>
    b324:	str	xzr, [x24, #8]
    b328:	b	b200 <grub_xnputs+0x258>
    b32c:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    b330:	ldr	x0, [x0]
    b334:	str	wzr, [x0]
    b338:	b	b200 <grub_xnputs+0x258>
    b33c:	cbz	x19, b298 <grub_xnputs+0x2f0>
    b340:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    b344:	add	x21, sp, #0xb0
    b348:	stp	x23, x24, [sp, #96]
    b34c:	mov	w23, #0x1                   	// #1
    b350:	mov	w24, #0xd                   	// #13
    b354:	ldr	x20, [x1]
    b358:	ldr	x19, [x20]
    b35c:	nop
    b360:	stp	xzr, xzr, [sp, #176]
    b364:	ldrb	w0, [x22]
    b368:	str	w0, [sp, #176]
    b36c:	strb	w23, [sp, #184]
    b370:	stp	xzr, xzr, [sp, #192]
    b374:	cbz	x19, b3a0 <grub_xnputs+0x3f8>
    b378:	ldr	x2, [x19, #40]
    b37c:	mov	x0, x19
    b380:	mov	x1, x21
    b384:	blr	x2
    b388:	ldr	x19, [x19]
    b38c:	cbnz	x19, b378 <grub_xnputs+0x3d0>
    b390:	ldrb	w0, [x22]
    b394:	ldr	x19, [x20]
    b398:	cmp	w0, #0xa
    b39c:	b.eq	b3a8 <grub_xnputs+0x400>  // b.none
    b3a0:	add	x22, x22, #0x1
    b3a4:	b	b360 <grub_xnputs+0x3b8>
    b3a8:	ldr	w0, [sp, #176]
    b3ac:	bfxil	w0, w24, #0, #23
    b3b0:	str	w0, [sp, #176]
    b3b4:	cbz	x19, b3a0 <grub_xnputs+0x3f8>
    b3b8:	ldr	x2, [x19, #40]
    b3bc:	mov	x0, x19
    b3c0:	mov	x1, x21
    b3c4:	blr	x2
    b3c8:	ldr	x19, [x19]
    b3cc:	cbnz	x19, b3b8 <grub_xnputs+0x410>
    b3d0:	add	x22, x22, #0x1
    b3d4:	ldr	x19, [x20]
    b3d8:	b	b360 <grub_xnputs+0x3b8>
    b3dc:	ldp	x23, x24, [sp, #96]
    b3e0:	b	b290 <grub_xnputs+0x2e8>
    b3e4:	nop
	...

000000000000b410 <grub_xputs_normal>:
    b410:	stp	x29, x30, [sp, #-32]!
    b414:	mov	x29, sp
    b418:	str	x19, [sp, #16]
    b41c:	mov	x19, x0
    b420:	bl	0 <grub_strlen>
    b424:	mov	x1, x0
    b428:	mov	x0, x19
    b42c:	ldr	x19, [sp, #16]
    b430:	ldp	x29, x30, [sp], #32
    b434:	b	afa8 <grub_xnputs>

000000000000b438 <grub_cls>:
    b438:	stp	x29, x30, [sp, #-32]!
    b43c:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    b440:	mov	x29, sp
    b444:	ldr	x0, [x0]
    b448:	stp	x19, x20, [sp, #16]
    b44c:	ldr	x19, [x0]
    b450:	cbz	x19, b490 <grub_cls+0x58>
    b454:	adrp	x20, 0 <grub_normal_free_menu-0x268>
    b458:	ldr	w0, [x19, #120]
    b45c:	tbnz	w0, #2, b46c <grub_cls+0x34>
    b460:	ldr	x0, [x20]
    b464:	bl	0 <grub_env_get>
    b468:	cbz	x0, b49c <grub_cls+0x64>
    b46c:	mov	x1, x19
    b470:	mov	w0, #0xa                   	// #10
    b474:	bl	9f48 <grub_putcode>
    b478:	ldr	x1, [x19, #104]
    b47c:	mov	x0, x19
    b480:	cbz	x1, b488 <grub_cls+0x50>
    b484:	blr	x1
    b488:	ldr	x19, [x19]
    b48c:	cbnz	x19, b458 <grub_cls+0x20>
    b490:	ldp	x19, x20, [sp, #16]
    b494:	ldp	x29, x30, [sp], #32
    b498:	ret
    b49c:	mov	x0, x19
    b4a0:	ldr	x1, [x19, #80]
    b4a4:	b	b484 <grub_cls+0x4c>
	...
    b4b8:	cmp	w1, #0x0
    b4bc:	b.le	b500 <grub_cls+0xc8>
    b4c0:	stp	x29, x30, [sp, #-32]!
    b4c4:	sub	w1, w1, #0x1
    b4c8:	mov	x29, sp
    b4cc:	stp	x19, x20, [sp, #16]
    b4d0:	add	x20, x2, #0x8
    b4d4:	mov	x19, x2
    b4d8:	add	x20, x20, w1, uxtw #3
    b4dc:	nop
    b4e0:	ldr	x0, [x19], #8
    b4e4:	bl	0 <grub_env_export>
    b4e8:	cmp	x19, x20
    b4ec:	b.ne	b4e0 <grub_cls+0xa8>  // b.any
    b4f0:	mov	w0, #0x0                   	// #0
    b4f4:	ldp	x19, x20, [sp, #16]
    b4f8:	ldp	x29, x30, [sp], #32
    b4fc:	ret
    b500:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    b504:	mov	w0, #0x12                  	// #18
    b508:	ldr	x1, [x1]
    b50c:	b	0 <grub_error>
	...

000000000000b518 <grub_env_unset_menu>:
    b518:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    b51c:	ldr	x0, [x0]
    b520:	ldr	x0, [x0]
    b524:	str	xzr, [x0]
    b528:	ret
    b52c:	nop
	...

000000000000b538 <grub_env_get_menu>:
    b538:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    b53c:	ldr	x0, [x0]
    b540:	ldr	x0, [x0]
    b544:	ldr	x0, [x0]
    b548:	ret
    b54c:	nop
	...

000000000000b558 <grub_env_set_menu>:
    b558:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    b55c:	ldr	x1, [x1]
    b560:	ldr	x1, [x1]
    b564:	str	x0, [x1]
    b568:	ret
    b56c:	nop
	...

000000000000b578 <grub_env_context_close>:
    b578:	stp	x29, x30, [sp, #-48]!
    b57c:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    b580:	mov	x29, sp
    b584:	stp	x21, x22, [sp, #32]
    b588:	ldr	x22, [x0]
    b58c:	ldr	x0, [x22]
    b590:	ldr	x1, [x0, #104]
    b594:	cbz	x1, b624 <grub_env_context_close+0xac>
    b598:	mov	w21, #0x0                   	// #0
    b59c:	stp	x19, x20, [sp, #16]
    b5a0:	ldr	x19, [x0, w21, sxtw #3]
    b5a4:	cbz	x19, b5d0 <grub_env_context_close+0x58>
    b5a8:	mov	x20, x19
    b5ac:	ldr	x19, [x19, #32]
    b5b0:	ldr	x0, [x20]
    b5b4:	bl	0 <grub_free>
    b5b8:	ldr	x0, [x20, #8]
    b5bc:	bl	0 <grub_free>
    b5c0:	mov	x0, x20
    b5c4:	bl	0 <grub_free>
    b5c8:	cbnz	x19, b5a8 <grub_env_context_close+0x30>
    b5cc:	ldr	x0, [x22]
    b5d0:	add	w21, w21, #0x1
    b5d4:	cmp	w21, #0xd
    b5d8:	b.ne	b5a0 <grub_env_context_close+0x28>  // b.any
    b5dc:	ldr	x19, [x0, #104]
    b5e0:	bl	0 <grub_free>
    b5e4:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    b5e8:	str	x19, [x22]
    b5ec:	ldr	x19, [x0]
    b5f0:	ldr	x0, [x19]
    b5f4:	ldp	x1, x20, [x0]
    b5f8:	cbz	x1, b608 <grub_env_context_close+0x90>
    b5fc:	mov	x0, x1
    b600:	bl	268 <grub_normal_free_menu>
    b604:	ldr	x0, [x19]
    b608:	bl	0 <grub_free>
    b60c:	ldp	x21, x22, [sp, #32]
    b610:	str	x20, [x19]
    b614:	mov	w0, #0x0                   	// #0
    b618:	ldp	x19, x20, [sp, #16]
    b61c:	ldp	x29, x30, [sp], #48
    b620:	ret
    b624:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    b628:	mov	w0, #0x12                  	// #18
    b62c:	ldp	x21, x22, [sp, #32]
    b630:	ldp	x29, x30, [sp], #48
    b634:	ldr	x1, [x1]
    b638:	b	0 <grub_error>
    b63c:	nop
	...
    b658:	stp	x29, x30, [sp, #-48]!
    b65c:	mov	x29, sp
    b660:	stp	x19, x20, [sp, #16]
    b664:	mov	w20, w0
    b668:	mov	x0, #0x70                  	// #112
    b66c:	bl	0 <grub_zalloc>
    b670:	cbz	x0, b730 <grub_env_context_close+0x1b8>
    b674:	stp	x21, x22, [sp, #32]
    b678:	mov	x22, x0
    b67c:	mov	x0, #0x10                  	// #16
    b680:	bl	0 <grub_zalloc>
    b684:	cbz	x0, b75c <grub_env_context_close+0x1e4>
    b688:	adrp	x2, 0 <grub_normal_free_menu-0x268>
    b68c:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    b690:	mov	w21, #0x0                   	// #0
    b694:	ldr	x3, [x2]
    b698:	ldr	x2, [x1]
    b69c:	ldr	x1, [x3]
    b6a0:	str	x1, [x22, #104]
    b6a4:	ldr	x4, [x2]
    b6a8:	str	x22, [x3]
    b6ac:	str	x0, [x2]
    b6b0:	str	x4, [x0, #8]
    b6b4:	ldr	x19, [x1, w21, sxtw #3]
    b6b8:	cbnz	x19, b6c8 <grub_env_context_close+0x150>
    b6bc:	b	b6fc <grub_env_context_close+0x184>
    b6c0:	ldr	x19, [x19, #32]
    b6c4:	cbz	x19, b6fc <grub_env_context_close+0x184>
    b6c8:	ldr	w1, [x19, #56]
    b6cc:	orr	w1, w20, w1
    b6d0:	cbz	w1, b6c0 <grub_env_context_close+0x148>
    b6d4:	ldp	x0, x1, [x19]
    b6d8:	bl	0 <grub_env_set>
    b6dc:	cbnz	w0, b710 <grub_env_context_close+0x198>
    b6e0:	ldr	x0, [x19]
    b6e4:	bl	0 <grub_env_export>
    b6e8:	ldp	x1, x2, [x19, #16]
    b6ec:	ldr	x0, [x19]
    b6f0:	bl	0 <grub_register_variable_hook>
    b6f4:	ldr	x19, [x19, #32]
    b6f8:	cbnz	x19, b6c8 <grub_env_context_close+0x150>
    b6fc:	add	w21, w21, #0x1
    b700:	cmp	w21, #0xd
    b704:	b.eq	b748 <grub_env_context_close+0x1d0>  // b.none
    b708:	ldr	x1, [x22, #104]
    b70c:	b	b6b4 <grub_env_context_close+0x13c>
    b710:	bl	b578 <grub_env_context_close>
    b714:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    b718:	ldp	x21, x22, [sp, #32]
    b71c:	ldr	x0, [x0]
    b720:	ldr	w0, [x0]
    b724:	ldp	x19, x20, [sp, #16]
    b728:	ldp	x29, x30, [sp], #48
    b72c:	ret
    b730:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    b734:	ldp	x19, x20, [sp, #16]
    b738:	ldr	x0, [x0]
    b73c:	ldp	x29, x30, [sp], #48
    b740:	ldr	w0, [x0]
    b744:	ret
    b748:	mov	w0, #0x0                   	// #0
    b74c:	ldp	x19, x20, [sp, #16]
    b750:	ldp	x21, x22, [sp, #32]
    b754:	ldp	x29, x30, [sp], #48
    b758:	ret
    b75c:	mov	x0, x22
    b760:	bl	0 <grub_free>
    b764:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    b768:	ldp	x21, x22, [sp, #32]
    b76c:	ldr	x0, [x0]
    b770:	ldr	w0, [x0]
    b774:	b	b724 <grub_env_context_close+0x1ac>
	...

000000000000b790 <grub_env_context_open>:
    b790:	mov	w0, #0x0                   	// #0
    b794:	b	b658 <grub_env_context_close+0xe0>

000000000000b798 <grub_env_extractor_open>:
    b798:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    b79c:	ldr	x2, [x1]
    b7a0:	ldr	w1, [x2]
    b7a4:	add	w1, w1, #0x1
    b7a8:	str	w1, [x2]
    b7ac:	b	b658 <grub_env_context_close+0xe0>
	...

000000000000b7b8 <grub_env_extractor_close>:
    b7b8:	stp	x29, x30, [sp, #-32]!
    b7bc:	mov	x29, sp
    b7c0:	cbz	w0, b840 <grub_env_extractor_close+0x88>
    b7c4:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    b7c8:	stp	x19, x20, [sp, #16]
    b7cc:	ldr	x20, [x0]
    b7d0:	ldr	x0, [x20]
    b7d4:	ldr	x19, [x0]
    b7d8:	str	xzr, [x0]
    b7dc:	bl	b578 <grub_env_context_close>
    b7e0:	cbz	x19, b868 <grub_env_extractor_close+0xb0>
    b7e4:	ldr	x1, [x20]
    b7e8:	ldr	x3, [x1]
    b7ec:	ldr	x1, [x3, #8]
    b7f0:	cbz	x1, b860 <grub_env_extractor_close+0xa8>
    b7f4:	nop
    b7f8:	mov	x2, x1
    b7fc:	ldr	x1, [x1, #72]
    b800:	cbnz	x1, b7f8 <grub_env_extractor_close+0x40>
    b804:	add	x2, x2, #0x48
    b808:	ldr	w4, [x19]
    b80c:	ldr	w1, [x3]
    b810:	ldr	x5, [x19, #8]
    b814:	add	w1, w1, w4
    b818:	ldp	x19, x20, [sp, #16]
    b81c:	str	x5, [x2]
    b820:	str	w1, [x3]
    b824:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    b828:	ldr	x2, [x1]
    b82c:	ldr	w1, [x2]
    b830:	sub	w1, w1, #0x1
    b834:	str	w1, [x2]
    b838:	ldp	x29, x30, [sp], #32
    b83c:	ret
    b840:	bl	b578 <grub_env_context_close>
    b844:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    b848:	ldr	x2, [x1]
    b84c:	ldr	w1, [x2]
    b850:	sub	w1, w1, #0x1
    b854:	str	w1, [x2]
    b858:	ldp	x29, x30, [sp], #32
    b85c:	ret
    b860:	add	x2, x3, #0x8
    b864:	b	b808 <grub_env_extractor_close+0x50>
    b868:	ldp	x19, x20, [sp, #16]
    b86c:	b	b844 <grub_env_extractor_close+0x8c>
	...

000000000000b880 <grub_context_init>:
    b880:	stp	x29, x30, [sp, #-16]!
    b884:	adrp	x3, 0 <grub_normal_free_menu-0x268>
    b888:	adrp	x2, 0 <grub_normal_free_menu-0x268>
    b88c:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    b890:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    b894:	mov	x29, sp
    b898:	ldr	x3, [x3]
    b89c:	mov	w4, #0x0                   	// #0
    b8a0:	ldr	x2, [x2]
    b8a4:	ldr	x1, [x1]
    b8a8:	ldr	x0, [x0]
    b8ac:	bl	0 <grub_register_command_prio>
    b8b0:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    b8b4:	ldr	x1, [x1]
    b8b8:	str	x0, [x1, #8]
    b8bc:	ldp	x29, x30, [sp], #16
    b8c0:	ret
    b8c4:	nop
	...

000000000000b8f0 <grub_context_fini>:
    b8f0:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    b8f4:	ldr	x0, [x0]
    b8f8:	ldr	x0, [x0, #8]
    b8fc:	b	0 <grub_unregister_command>
	...
    b908:	stp	x29, x30, [sp, #-16]!
    b90c:	mov	x0, #0x20000               	// #131072
    b910:	mov	x29, sp
    b914:	bl	0 <grub_zalloc>
    b918:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    b91c:	ldr	x1, [x1]
    b920:	str	x0, [x1]
    b924:	cbz	x0, b9f4 <grub_context_fini+0x104>
    b928:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    b92c:	mov	w8, #0x1ffff               	// #131071
    b930:	ldr	x2, [x1]
    b934:	mov	x1, x2
    b938:	ldrh	w3, [x2, #2]
    b93c:	ubfx	x3, x3, #5, #9
    b940:	cbz	w3, b9ec <grub_context_fini+0xfc>
    b944:	nop
    b948:	ldrb	w5, [x1]
    b94c:	ldrb	w4, [x1, #1]
    b950:	ldrb	w2, [x1, #2]
    b954:	orr	x4, x5, x4, lsl #8
    b958:	ubfiz	x2, x2, #16, #5
    b95c:	orr	x2, x2, x4
    b960:	add	w3, w3, w2
    b964:	mov	w4, w2
    b968:	cmp	w2, w3
    b96c:	add	x6, x0, x2
    b970:	ccmp	w2, w8, #0x2, cc  // cc = lo, ul, last
    b974:	b.ls	b9bc <grub_context_fini+0xcc>  // b.plast
    b978:	b	b9dc <grub_context_fini+0xec>
    b97c:	orr	w2, w2, #0xffffff80
    b980:	strb	w2, [x6]
    b984:	ldrb	w7, [x1]
    b988:	add	w4, w4, #0x1
    b98c:	ldrb	w5, [x1, #1]
    b990:	add	x6, x6, #0x1
    b994:	ldrb	w3, [x1, #2]
    b998:	ldrh	w2, [x1, #2]
    b99c:	orr	x5, x7, x5, lsl #8
    b9a0:	ubfiz	x3, x3, #16, #5
    b9a4:	orr	x3, x3, x5
    b9a8:	ubfx	x2, x2, #5, #9
    b9ac:	add	w2, w2, w3
    b9b0:	cmp	w2, w4
    b9b4:	ccmp	w4, w8, #0x2, hi  // hi = pmore
    b9b8:	b.hi	b9dc <grub_context_fini+0xec>  // b.pmore
    b9bc:	ldrb	w3, [x1, #4]
    b9c0:	ldrb	w5, [x1, #5]
    b9c4:	ldrb	w2, [x1, #3]
    b9c8:	ubfiz	x3, x3, #2, #3
    b9cc:	orr	w2, w3, w2, lsr #6
    b9d0:	tbnz	w5, #3, b97c <grub_context_fini+0x8c>
    b9d4:	strb	w2, [x6]
    b9d8:	b	b984 <grub_context_fini+0x94>
    b9dc:	ldrh	w3, [x1, #8]
    b9e0:	add	x1, x1, #0x6
    b9e4:	ubfx	x3, x3, #5, #9
    b9e8:	cbnz	w3, b948 <grub_context_fini+0x58>
    b9ec:	ldp	x29, x30, [sp], #16
    b9f0:	ret
    b9f4:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    b9f8:	ldr	x0, [x0]
    b9fc:	str	wzr, [x0]
    ba00:	ldp	x29, x30, [sp], #16
    ba04:	ret
	...
    ba20:	stp	x29, x30, [sp, #-16]!
    ba24:	mov	x0, #0x20000               	// #131072
    ba28:	mov	x29, sp
    ba2c:	bl	0 <grub_zalloc>
    ba30:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    ba34:	ldr	x1, [x1]
    ba38:	str	x0, [x1, #8]
    ba3c:	cbz	x0, bae8 <grub_context_fini+0x1f8>
    ba40:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    ba44:	mov	w8, #0x1ffff               	// #131071
    ba48:	ldr	x1, [x1]
    ba4c:	mov	x3, x1
    ba50:	ldrh	w2, [x1, #2]
    ba54:	ubfx	x2, x2, #5, #9
    ba58:	cbz	w2, bae0 <grub_context_fini+0x1f0>
    ba5c:	nop
    ba60:	ldrb	w5, [x3]
    ba64:	ldrb	w4, [x3, #1]
    ba68:	ldrb	w1, [x3, #2]
    ba6c:	orr	x4, x5, x4, lsl #8
    ba70:	ubfiz	x1, x1, #16, #5
    ba74:	orr	x1, x1, x4
    ba78:	add	w2, w2, w1
    ba7c:	mov	w4, w1
    ba80:	cmp	w1, w2
    ba84:	add	x6, x0, x1
    ba88:	ccmp	w1, w8, #0x2, cc  // cc = lo, ul, last
    ba8c:	b.hi	bad0 <grub_context_fini+0x1e0>  // b.pmore
    ba90:	ldrb	w1, [x3, #5]
    ba94:	add	w4, w4, #0x1
    ba98:	ubfx	x1, x1, #4, #3
    ba9c:	strb	w1, [x6], #1
    baa0:	ldrb	w7, [x3]
    baa4:	ldrb	w5, [x3, #1]
    baa8:	ldrb	w2, [x3, #2]
    baac:	ldrh	w1, [x3, #2]
    bab0:	orr	x5, x7, x5, lsl #8
    bab4:	ubfiz	x2, x2, #16, #5
    bab8:	orr	x2, x2, x5
    babc:	ubfx	x1, x1, #5, #9
    bac0:	add	w1, w1, w2
    bac4:	cmp	w1, w4
    bac8:	ccmp	w4, w8, #0x2, hi  // hi = pmore
    bacc:	b.ls	ba90 <grub_context_fini+0x1a0>  // b.plast
    bad0:	ldrh	w2, [x3, #8]
    bad4:	add	x3, x3, #0x6
    bad8:	ubfx	x2, x2, #5, #9
    badc:	cbnz	w2, ba60 <grub_context_fini+0x170>
    bae0:	ldp	x29, x30, [sp], #16
    bae4:	ret
    bae8:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    baec:	ldr	x0, [x0]
    baf0:	str	wzr, [x0]
    baf4:	ldp	x29, x30, [sp], #16
    baf8:	ret
    bafc:	nop
	...

000000000000bb18 <grub_encode_utf8_character>:
    bb18:	mov	x3, x0
    bb1c:	cmp	x0, x1
    bb20:	b.cs	bc04 <grub_encode_utf8_character+0xec>  // b.hs, b.nlast
    bb24:	cmp	w2, #0x7f
    bb28:	b.ls	bbb4 <grub_encode_utf8_character+0x9c>  // b.plast
    bb2c:	cmp	w2, #0x7ff
    bb30:	b.hi	bb60 <grub_encode_utf8_character+0x48>  // b.pmore
    bb34:	add	x0, x0, #0x1
    bb38:	cmp	x1, x0
    bb3c:	b.ls	bc04 <grub_encode_utf8_character+0xec>  // b.plast
    bb40:	lsr	w1, w2, #6
    bb44:	and	w2, w2, #0x3f
    bb48:	orr	w1, w1, #0xffffffc0
    bb4c:	orr	w2, w2, #0xffffff80
    bb50:	mov	x0, #0x2                   	// #2
    bb54:	strb	w1, [x3]
    bb58:	strb	w2, [x3, #1]
    bb5c:	ret
    bb60:	mov	w0, #0xffff2800            	// #-55296
    bb64:	add	w0, w2, w0
    bb68:	cmp	w0, #0x7ff
    bb6c:	b.ls	bc0c <grub_encode_utf8_character+0xf4>  // b.plast
    bb70:	mov	w0, #0xffff                	// #65535
    bb74:	cmp	w2, w0
    bb78:	b.hi	bbc0 <grub_encode_utf8_character+0xa8>  // b.pmore
    bb7c:	add	x0, x3, #0x2
    bb80:	cmp	x1, x0
    bb84:	b.ls	bc04 <grub_encode_utf8_character+0xec>  // b.plast
    bb88:	lsr	w4, w2, #12
    bb8c:	ubfx	x1, x2, #6, #6
    bb90:	and	w2, w2, #0x3f
    bb94:	orr	w4, w4, #0xffffffe0
    bb98:	orr	w1, w1, #0xffffff80
    bb9c:	orr	w2, w2, #0xffffff80
    bba0:	mov	x0, #0x3                   	// #3
    bba4:	strb	w4, [x3]
    bba8:	strb	w1, [x3, #1]
    bbac:	strb	w2, [x3, #2]
    bbb0:	ret
    bbb4:	mov	x0, #0x1                   	// #1
    bbb8:	strb	w2, [x3]
    bbbc:	ret
    bbc0:	add	x0, x3, #0x3
    bbc4:	cmp	x1, x0
    bbc8:	b.ls	bc04 <grub_encode_utf8_character+0xec>  // b.plast
    bbcc:	lsr	w5, w2, #18
    bbd0:	ubfx	x4, x2, #12, #6
    bbd4:	ubfx	x1, x2, #6, #6
    bbd8:	and	w2, w2, #0x3f
    bbdc:	orr	w5, w5, #0xfffffff0
    bbe0:	orr	w4, w4, #0xffffff80
    bbe4:	orr	w1, w1, #0xffffff80
    bbe8:	orr	w2, w2, #0xffffff80
    bbec:	mov	x0, #0x4                   	// #4
    bbf0:	strb	w5, [x3]
    bbf4:	strb	w4, [x3, #1]
    bbf8:	strb	w1, [x3, #2]
    bbfc:	strb	w2, [x3, #3]
    bc00:	ret
    bc04:	mov	x0, #0xfffffffffffffffe    	// #-2
    bc08:	ret
    bc0c:	mov	x0, #0xffffffffffffffff    	// #-1
    bc10:	ret
    bc14:	nop

000000000000bc18 <grub_ucs4_to_utf8>:
    bc18:	sub	x3, x3, #0x1
    bc1c:	cmp	x1, #0x0
    bc20:	add	x8, x2, x3
    bc24:	mov	x11, x2
    bc28:	ccmp	x2, x8, #0x2, ne  // ne = any
    bc2c:	b.cs	bcc0 <grub_ucs4_to_utf8+0xa8>  // b.hs, b.nlast
    bc30:	stp	x29, x30, [sp, #-16]!
    bc34:	sub	x9, x1, #0x1
    bc38:	mov	x10, x0
    bc3c:	mov	x29, sp
    bc40:	mov	x6, x2
    bc44:	mov	x7, #0x0                   	// #0
    bc48:	mov	w12, #0x3f                  	// #63
    bc4c:	b	bc70 <grub_ucs4_to_utf8+0x58>
    bc50:	cmp	x7, x9
    bc54:	add	x6, x6, x0
    bc58:	cset	w3, ne  // ne = any
    bc5c:	cmp	x8, x6
    bc60:	cset	w1, hi  // hi = pmore
    bc64:	add	x7, x7, #0x1
    bc68:	tst	w3, w1
    bc6c:	b.eq	bcb0 <grub_ucs4_to_utf8+0x98>  // b.none
    bc70:	ldr	w2, [x10, x7, lsl #2]
    bc74:	mov	x1, x8
    bc78:	mov	x0, x6
    bc7c:	bl	bb18 <grub_encode_utf8_character>
    bc80:	cmn	x0, #0x2
    bc84:	b.eq	bcb0 <grub_ucs4_to_utf8+0x98>  // b.none
    bc88:	cmn	x0, #0x1
    bc8c:	b.ne	bc50 <grub_ucs4_to_utf8+0x38>  // b.any
    bc90:	strb	w12, [x6], #1
    bc94:	cmp	x7, x9
    bc98:	cset	w3, ne  // ne = any
    bc9c:	add	x7, x7, #0x1
    bca0:	cmp	x8, x6
    bca4:	cset	w1, hi  // hi = pmore
    bca8:	tst	w3, w1
    bcac:	b.ne	bc70 <grub_ucs4_to_utf8+0x58>  // b.any
    bcb0:	strb	wzr, [x6]
    bcb4:	sub	x0, x6, x11
    bcb8:	ldp	x29, x30, [sp], #16
    bcbc:	ret
    bcc0:	mov	x0, #0x0                   	// #0
    bcc4:	strb	wzr, [x2]
    bcc8:	ret
    bccc:	nop

000000000000bcd0 <grub_get_num_of_utf8_bytes>:
    bcd0:	mov	x4, x0
    bcd4:	cbz	x1, bd40 <grub_get_num_of_utf8_bytes+0x70>
    bcd8:	mov	x2, #0x0                   	// #0
    bcdc:	mov	x0, #0x0                   	// #0
    bce0:	mov	w6, #0xffff2800            	// #-55296
    bce4:	mov	w7, #0xffff                	// #65535
    bce8:	b	bd08 <grub_get_num_of_utf8_bytes+0x38>
    bcec:	add	w5, w3, w6
    bcf0:	cmp	w3, #0x7ff
    bcf4:	b.hi	bd28 <grub_get_num_of_utf8_bytes+0x58>  // b.pmore
    bcf8:	add	x0, x0, #0x2
    bcfc:	add	x2, x2, #0x1
    bd00:	cmp	x2, x1
    bd04:	b.eq	bd24 <grub_get_num_of_utf8_bytes+0x54>  // b.none
    bd08:	ldr	w3, [x4, x2, lsl #2]
    bd0c:	cmp	w3, #0x7f
    bd10:	b.hi	bcec <grub_get_num_of_utf8_bytes+0x1c>  // b.pmore
    bd14:	add	x2, x2, #0x1
    bd18:	add	x0, x0, #0x1
    bd1c:	cmp	x2, x1
    bd20:	b.ne	bd08 <grub_get_num_of_utf8_bytes+0x38>  // b.any
    bd24:	ret
    bd28:	cmp	w5, #0x7ff
    bd2c:	b.ls	bd14 <grub_get_num_of_utf8_bytes+0x44>  // b.plast
    bd30:	cmp	w3, w7
    bd34:	cinc	x0, x0, hi  // hi = pmore
    bd38:	add	x0, x0, #0x3
    bd3c:	b	bcfc <grub_get_num_of_utf8_bytes+0x2c>
    bd40:	mov	x0, #0x0                   	// #0
    bd44:	ret

000000000000bd48 <grub_ucs4_to_utf8_alloc>:
    bd48:	stp	x29, x30, [sp, #-48]!
    bd4c:	mov	x29, sp
    bd50:	stp	x19, x20, [sp, #16]
    bd54:	mov	x20, x0
    bd58:	str	x21, [sp, #32]
    bd5c:	mov	x21, x1
    bd60:	bl	bcd0 <grub_get_num_of_utf8_bytes>
    bd64:	add	x19, x0, #0x1
    bd68:	mov	x0, x19
    bd6c:	bl	0 <grub_malloc>
    bd70:	mov	x13, x0
    bd74:	cbz	x0, bd8c <grub_ucs4_to_utf8_alloc+0x44>
    bd78:	mov	x3, x19
    bd7c:	mov	x1, x21
    bd80:	mov	x0, x20
    bd84:	mov	x2, x13
    bd88:	bl	bc18 <grub_ucs4_to_utf8>
    bd8c:	mov	x0, x13
    bd90:	ldp	x19, x20, [sp, #16]
    bd94:	ldr	x21, [sp, #32]
    bd98:	ldp	x29, x30, [sp], #48
    bd9c:	ret

000000000000bda0 <grub_is_valid_utf8>:
    bda0:	mov	x3, x0
    bda4:	cbz	x1, be1c <grub_is_valid_utf8+0x7c>
    bda8:	mov	w4, #0x0                   	// #0
    bdac:	mov	w0, #0x0                   	// #0
    bdb0:	mov	w6, #0x10ffff              	// #1114111
    bdb4:	nop
    bdb8:	cmn	x1, #0x1
    bdbc:	ldrb	w2, [x3], #1
    bdc0:	cset	x5, ne  // ne = any
    bdc4:	sub	x1, x1, x5
    bdc8:	cbz	w0, be24 <grub_is_valid_utf8+0x84>
    bdcc:	and	w5, w2, #0xc0
    bdd0:	cmp	w5, #0x80
    bdd4:	b.ne	be00 <grub_is_valid_utf8+0x60>  // b.any
    bdd8:	sub	w0, w0, #0x1
    bddc:	bfi	w2, w4, #6, #26
    bde0:	mov	w4, w2
    bde4:	cmp	w0, #0x1
    bde8:	b.eq	be84 <grub_is_valid_utf8+0xe4>  // b.none
    bdec:	cmp	w0, #0x2
    bdf0:	b.ne	be5c <grub_is_valid_utf8+0xbc>  // b.any
    bdf4:	cmp	w2, #0xf
    bdf8:	b.hi	be18 <grub_is_valid_utf8+0x78>  // b.pmore
    bdfc:	nop
    be00:	mov	w0, #0x0                   	// #0
    be04:	ret
    be08:	tst	w2, #0x1e
    be0c:	b.eq	be04 <grub_is_valid_utf8+0x64>  // b.none
    be10:	and	w4, w2, #0x1f
    be14:	mov	w0, #0x1                   	// #1
    be18:	cbnz	x1, bdb8 <grub_is_valid_utf8+0x18>
    be1c:	mov	w0, #0x1                   	// #1
    be20:	ret
    be24:	tbz	w2, #7, be74 <grub_is_valid_utf8+0xd4>
    be28:	and	w4, w2, #0xe0
    be2c:	cmp	w4, #0xc0
    be30:	b.eq	be08 <grub_is_valid_utf8+0x68>  // b.none
    be34:	and	w4, w2, #0xf0
    be38:	cmp	w4, #0xe0
    be3c:	b.eq	be94 <grub_is_valid_utf8+0xf4>  // b.none
    be40:	and	w4, w2, #0xf8
    be44:	cmp	w4, #0xf0
    be48:	b.ne	be04 <grub_is_valid_utf8+0x64>  // b.any
    be4c:	and	w4, w2, #0x7
    be50:	mov	w0, #0x3                   	// #3
    be54:	cbnz	x1, bdb8 <grub_is_valid_utf8+0x18>
    be58:	b	be1c <grub_is_valid_utf8+0x7c>
    be5c:	cbnz	w0, bea4 <grub_is_valid_utf8+0x104>
    be60:	cbz	w2, be1c <grub_is_valid_utf8+0x7c>
    be64:	cmp	w2, w6
    be68:	b.hi	be04 <grub_is_valid_utf8+0x64>  // b.pmore
    be6c:	cbnz	x1, bdb8 <grub_is_valid_utf8+0x18>
    be70:	b	be1c <grub_is_valid_utf8+0x7c>
    be74:	mov	w4, w2
    be78:	cbz	w2, be1c <grub_is_valid_utf8+0x7c>
    be7c:	cbnz	x1, bdb8 <grub_is_valid_utf8+0x18>
    be80:	b	be1c <grub_is_valid_utf8+0x7c>
    be84:	cmp	w2, #0x1f
    be88:	b.ls	be00 <grub_is_valid_utf8+0x60>  // b.plast
    be8c:	cbnz	x1, bdb8 <grub_is_valid_utf8+0x18>
    be90:	b	be1c <grub_is_valid_utf8+0x7c>
    be94:	and	w4, w2, #0xf
    be98:	mov	w0, #0x2                   	// #2
    be9c:	cbnz	x1, bdb8 <grub_is_valid_utf8+0x18>
    bea0:	b	be1c <grub_is_valid_utf8+0x7c>
    bea4:	mov	w0, #0x1                   	// #1
    bea8:	cbnz	x1, bdb8 <grub_is_valid_utf8+0x18>
    beac:	b	be1c <grub_is_valid_utf8+0x7c>

000000000000beb0 <grub_utf8_to_ucs4>:
    beb0:	cbz	x4, bff8 <grub_utf8_to_ucs4+0x148>
    beb4:	str	x2, [x4]
    beb8:	cmp	x1, #0x0
    bebc:	ccmp	x3, #0x0, #0x4, ne  // ne = any
    bec0:	b.eq	c00c <grub_utf8_to_ucs4+0x15c>  // b.none
    bec4:	mov	x6, x0
    bec8:	mov	w9, #0x0                   	// #0
    becc:	mov	w8, #0x0                   	// #0
    bed0:	mov	x5, x2
    bed4:	cmn	x3, #0x1
    bed8:	cset	x7, ne  // ne = any
    bedc:	sub	x3, x3, x7
    bee0:	ldrb	w7, [x5], #1
    bee4:	cbz	w8, bf60 <grub_utf8_to_ucs4+0xb0>
    bee8:	and	w10, w7, #0xc0
    beec:	cmp	w10, #0x80
    bef0:	b.ne	bf18 <grub_utf8_to_ucs4+0x68>  // b.any
    bef4:	sub	w8, w8, #0x1
    bef8:	bfi	w7, w9, #6, #26
    befc:	mov	w9, w7
    bf00:	cmp	w8, #0x1
    bf04:	b.eq	bf50 <grub_utf8_to_ucs4+0xa0>  // b.none
    bf08:	cmp	w8, #0x2
    bf0c:	b.ne	bfb8 <grub_utf8_to_ucs4+0x108>  // b.any
    bf10:	cmp	w7, #0xf
    bf14:	b.hi	bf58 <grub_utf8_to_ucs4+0xa8>  // b.pmore
    bf18:	mov	x5, x2
    bf1c:	mov	w9, #0x3f                  	// #63
    bf20:	sub	x1, x1, #0x1
    bf24:	mov	x2, x5
    bf28:	mov	w8, #0x0                   	// #0
    bf2c:	str	w9, [x6], #4
    bf30:	cmp	x3, #0x0
    bf34:	ccmp	x1, #0x0, #0x4, ne  // ne = any
    bf38:	b.ne	bed0 <grub_utf8_to_ucs4+0x20>  // b.any
    bf3c:	sub	x6, x6, x0
    bf40:	asr	x0, x6, #2
    bf44:	cbz	x4, bf4c <grub_utf8_to_ucs4+0x9c>
    bf48:	str	x2, [x4]
    bf4c:	ret
    bf50:	cmp	w7, #0x1f
    bf54:	b.ls	bf18 <grub_utf8_to_ucs4+0x68>  // b.plast
    bf58:	mov	x2, x5
    bf5c:	b	bf30 <grub_utf8_to_ucs4+0x80>
    bf60:	mov	w9, w7
    bf64:	tbz	w7, #7, bfa0 <grub_utf8_to_ucs4+0xf0>
    bf68:	and	w2, w7, #0xe0
    bf6c:	cmp	w2, #0xc0
    bf70:	b.eq	bfc8 <grub_utf8_to_ucs4+0x118>  // b.none
    bf74:	and	w2, w7, #0xf0
    bf78:	cmp	w2, #0xe0
    bf7c:	b.eq	bfe8 <grub_utf8_to_ucs4+0x138>  // b.none
    bf80:	and	w2, w7, #0xf8
    bf84:	mov	w9, #0x3f                  	// #63
    bf88:	cmp	w2, #0xf0
    bf8c:	b.ne	bf20 <grub_utf8_to_ucs4+0x70>  // b.any
    bf90:	and	w9, w7, #0x7
    bf94:	mov	x2, x5
    bf98:	mov	w8, #0x3                   	// #3
    bf9c:	b	bf30 <grub_utf8_to_ucs4+0x80>
    bfa0:	cbnz	w9, bf20 <grub_utf8_to_ucs4+0x70>
    bfa4:	sub	x6, x6, x0
    bfa8:	mov	x2, x5
    bfac:	asr	x0, x6, #2
    bfb0:	cbnz	x4, bf48 <grub_utf8_to_ucs4+0x98>
    bfb4:	b	bf4c <grub_utf8_to_ucs4+0x9c>
    bfb8:	cbz	w8, bfa0 <grub_utf8_to_ucs4+0xf0>
    bfbc:	mov	x2, x5
    bfc0:	mov	w8, #0x1                   	// #1
    bfc4:	b	bf30 <grub_utf8_to_ucs4+0x80>
    bfc8:	tst	w7, #0x1e
    bfcc:	b.eq	bfe0 <grub_utf8_to_ucs4+0x130>  // b.none
    bfd0:	and	w9, w7, #0x1f
    bfd4:	mov	x2, x5
    bfd8:	mov	w8, #0x1                   	// #1
    bfdc:	b	bf30 <grub_utf8_to_ucs4+0x80>
    bfe0:	mov	w9, #0x3f                  	// #63
    bfe4:	b	bf20 <grub_utf8_to_ucs4+0x70>
    bfe8:	and	w9, w7, #0xf
    bfec:	mov	x2, x5
    bff0:	mov	w8, #0x2                   	// #2
    bff4:	b	bf30 <grub_utf8_to_ucs4+0x80>
    bff8:	cmp	x1, #0x0
    bffc:	ccmp	x3, #0x0, #0x4, ne  // ne = any
    c000:	b.ne	bec4 <grub_utf8_to_ucs4+0x14>  // b.any
    c004:	mov	x0, #0x0                   	// #0
    c008:	ret
    c00c:	mov	x0, #0x0                   	// #0
    c010:	str	x2, [x4]
    c014:	b	bf4c <grub_utf8_to_ucs4+0x9c>

000000000000c018 <grub_utf8_to_ucs4_alloc>:
    c018:	stp	x29, x30, [sp, #-48]!
    c01c:	mov	x29, sp
    c020:	stp	x19, x20, [sp, #16]
    c024:	mov	x20, x1
    c028:	stp	x21, x22, [sp, #32]
    c02c:	mov	x21, x2
    c030:	mov	x22, x0
    c034:	bl	0 <grub_strlen>
    c038:	mov	x19, x0
    c03c:	lsl	x0, x0, #2
    c040:	bl	0 <grub_malloc>
    c044:	str	x0, [x20]
    c048:	cbz	x0, c080 <grub_utf8_to_ucs4_alloc+0x68>
    c04c:	mov	x2, x22
    c050:	mov	x1, x19
    c054:	mov	x4, #0x0                   	// #0
    c058:	mov	x3, #0xffffffffffffffff    	// #-1
    c05c:	bl	beb0 <grub_utf8_to_ucs4>
    c060:	cbz	x21, c070 <grub_utf8_to_ucs4_alloc+0x58>
    c064:	ldr	x1, [x20]
    c068:	add	x1, x1, x0, lsl #2
    c06c:	str	x1, [x21]
    c070:	ldp	x19, x20, [sp, #16]
    c074:	ldp	x21, x22, [sp, #32]
    c078:	ldp	x29, x30, [sp], #48
    c07c:	ret
    c080:	mov	x0, #0xffffffffffffffff    	// #-1
    c084:	b	c070 <grub_utf8_to_ucs4_alloc+0x58>

000000000000c088 <grub_unicode_get_comb_type>:
    c088:	stp	x29, x30, [sp, #-32]!
    c08c:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    c090:	mov	x29, sp
    c094:	stp	x19, x20, [sp, #16]
    c098:	mov	w19, w0
    c09c:	ldr	x20, [x1]
    c0a0:	ldr	x0, [x20, #16]
    c0a4:	cbz	x0, c144 <grub_unicode_get_comb_type+0xbc>
    c0a8:	mov	w1, #0x1ffff               	// #131071
    c0ac:	cmp	w19, w1
    c0b0:	cset	w9, ls  // ls = plast
    c0b4:	cbnz	w9, c134 <grub_unicode_get_comb_type+0xac>
    c0b8:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    c0bc:	ldr	x0, [x0]
    c0c0:	mov	x3, x0
    c0c4:	ldrh	w2, [x0, #2]
    c0c8:	ubfx	x2, x2, #5, #9
    c0cc:	cbz	w2, c10c <grub_unicode_get_comb_type+0x84>
    c0d0:	ldrb	w5, [x3]
    c0d4:	ldrb	w4, [x3, #1]
    c0d8:	ldrb	w1, [x3, #2]
    c0dc:	orr	x4, x5, x4, lsl #8
    c0e0:	ubfiz	x1, x1, #16, #5
    c0e4:	orr	x1, x1, x4
    c0e8:	add	w2, w2, w1
    c0ec:	cmp	w1, w19
    c0f0:	b.hi	c0fc <grub_unicode_get_comb_type+0x74>  // b.pmore
    c0f4:	cmp	w2, w19
    c0f8:	b.hi	c11c <grub_unicode_get_comb_type+0x94>  // b.pmore
    c0fc:	ldrh	w2, [x3, #8]
    c100:	add	x3, x3, #0x6
    c104:	ubfx	x2, x2, #5, #9
    c108:	cbnz	w2, c0d0 <grub_unicode_get_comb_type+0x48>
    c10c:	mov	w0, #0x0                   	// #0
    c110:	ldp	x19, x20, [sp, #16]
    c114:	ldp	x29, x30, [sp], #32
    c118:	ret
    c11c:	ldrh	w0, [x3, #4]
    c120:	ldp	x19, x20, [sp, #16]
    c124:	ubfx	x0, x0, #3, #8
    c128:	ldp	x29, x30, [sp], #32
    c12c:	ret
    c130:	b.hi	c10c <grub_unicode_get_comb_type+0x84>  // b.pmore
    c134:	ldrb	w0, [x0, w19, uxtw]
    c138:	ldp	x19, x20, [sp, #16]
    c13c:	ldp	x29, x30, [sp], #32
    c140:	ret
    c144:	mov	x0, #0x20000               	// #131072
    c148:	bl	0 <grub_zalloc>
    c14c:	str	x0, [x20, #16]
    c150:	cbz	x0, c1fc <grub_unicode_get_comb_type+0x174>
    c154:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    c158:	mov	w8, #0x1ffff               	// #131071
    c15c:	cmp	w19, w8
    c160:	ldr	x3, [x1]
    c164:	cset	w9, ls  // ls = plast
    c168:	ldrh	w2, [x3, #2]
    c16c:	ubfx	x2, x2, #5, #9
    c170:	cbz	w2, c130 <grub_unicode_get_comb_type+0xa8>
    c174:	nop
    c178:	ldrb	w5, [x3]
    c17c:	ldrb	w4, [x3, #1]
    c180:	ldrb	w1, [x3, #2]
    c184:	orr	x4, x5, x4, lsl #8
    c188:	ubfiz	x1, x1, #16, #5
    c18c:	orr	x1, x1, x4
    c190:	add	w2, w2, w1
    c194:	mov	w4, w1
    c198:	cmp	w1, w2
    c19c:	add	x6, x0, x1
    c1a0:	ccmp	w1, w8, #0x2, cc  // cc = lo, ul, last
    c1a4:	b.hi	c1e8 <grub_unicode_get_comb_type+0x160>  // b.pmore
    c1a8:	ldrh	w1, [x3, #4]
    c1ac:	add	w4, w4, #0x1
    c1b0:	ubfx	x1, x1, #3, #8
    c1b4:	strb	w1, [x6], #1
    c1b8:	ldrb	w7, [x3]
    c1bc:	ldrb	w5, [x3, #1]
    c1c0:	ldrb	w2, [x3, #2]
    c1c4:	ldrh	w1, [x3, #2]
    c1c8:	orr	x5, x7, x5, lsl #8
    c1cc:	ubfiz	x2, x2, #16, #5
    c1d0:	orr	x2, x2, x5
    c1d4:	ubfx	x1, x1, #5, #9
    c1d8:	add	w1, w1, w2
    c1dc:	cmp	w1, w4
    c1e0:	ccmp	w4, w8, #0x2, hi  // hi = pmore
    c1e4:	b.ls	c1a8 <grub_unicode_get_comb_type+0x120>  // b.plast
    c1e8:	ldrh	w2, [x3, #8]
    c1ec:	add	x3, x3, #0x6
    c1f0:	ubfx	x2, x2, #5, #9
    c1f4:	cbnz	w2, c178 <grub_unicode_get_comb_type+0xf0>
    c1f8:	b	c0b4 <grub_unicode_get_comb_type+0x2c>
    c1fc:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    c200:	ldr	x0, [x0]
    c204:	str	wzr, [x0]
    c208:	b	c0b8 <grub_unicode_get_comb_type+0x30>
    c20c:	nop
	...

000000000000c228 <grub_unicode_aglomerate_comb>:
    c228:	stp	x29, x30, [sp, #-112]!
    c22c:	mov	x29, sp
    c230:	stp	x21, x22, [sp, #32]
    c234:	mov	x22, x0
    c238:	mov	x0, x2
    c23c:	stp	x25, x26, [sp, #64]
    c240:	mov	x26, x2
    c244:	mov	x2, #0x20                  	// #32
    c248:	stp	x27, x28, [sp, #80]
    c24c:	mov	x27, x1
    c250:	mov	w1, #0x0                   	// #0
    c254:	bl	0 <grub_memset>
    c258:	cbz	x27, c358 <grub_unicode_aglomerate_comb+0x130>
    c25c:	ldr	w0, [x22]
    c260:	stp	x19, x20, [sp, #16]
    c264:	cmp	w0, #0x7f
    c268:	stp	x23, x24, [sp, #48]
    c26c:	ccmp	w0, #0x1f, #0x0, ne  // ne = any
    c270:	b.ls	c4c0 <grub_unicode_aglomerate_comb+0x298>  // b.plast
    c274:	add	x27, x22, x27, lsl #2
    c278:	cmp	x22, x27
    c27c:	b.cs	c534 <grub_unicode_aglomerate_comb+0x30c>  // b.hs, b.nlast
    c280:	mov	w21, #0xff00                	// #65280
    c284:	mov	x25, #0xffe000000000        	// #281337537757184
    c288:	mov	x19, x22
    c28c:	mov	w23, #0x0                   	// #0
    c290:	mov	w28, #0x0                   	// #0
    c294:	mov	w24, #0xffff0200            	// #-65024
    c298:	movk	w21, #0xfff1, lsl #16
    c29c:	movk	x25, #0xf807, lsl #48
    c2a0:	b	c2c8 <grub_unicode_aglomerate_comb+0xa0>
    c2a4:	cbz	w28, c2b8 <grub_unicode_aglomerate_comb+0x90>
    c2a8:	ldrh	w1, [x26, #2]
    c2ac:	sub	w0, w0, #0xef
    c2b0:	bfi	w1, w0, #7, #9
    c2b4:	strh	w1, [x26, #2]
    c2b8:	add	x19, x19, #0x4
    c2bc:	cmp	x19, x27
    c2c0:	b.cs	c348 <grub_unicode_aglomerate_comb+0x120>  // b.hs, b.nlast
    c2c4:	ldr	w0, [x19]
    c2c8:	add	w1, w0, w24
    c2cc:	cmp	w1, #0xf
    c2d0:	b.ls	c370 <grub_unicode_aglomerate_comb+0x148>  // b.plast
    c2d4:	add	w1, w0, w21
    c2d8:	cmp	w1, #0xef
    c2dc:	b.ls	c2a4 <grub_unicode_aglomerate_comb+0x7c>  // b.plast
    c2e0:	bl	c088 <grub_unicode_get_comb_type>
    c2e4:	mov	w20, w0
    c2e8:	cbz	w0, c388 <grub_unicode_aglomerate_comb+0x160>
    c2ec:	cbz	w28, c2b8 <grub_unicode_aglomerate_comb+0x90>
    c2f0:	ldrh	w3, [x26, #6]
    c2f4:	sub	w0, w0, #0xfd
    c2f8:	cmp	w0, #0x2
    c2fc:	add	x8, x26, #0x18
    c300:	ubfx	x3, x3, #3, #8
    c304:	csel	w23, w23, w3, hi  // hi = pmore
    c308:	cmp	w3, #0x1
    c30c:	b.ls	c3e0 <grub_unicode_aglomerate_comb+0x1b8>  // b.plast
    c310:	cmp	w3, #0x2
    c314:	b.eq	c3b4 <grub_unicode_aglomerate_comb+0x18c>  // b.none
    c318:	ldr	x0, [x26, #24]
    c31c:	add	w1, w3, #0x1
    c320:	sbfiz	x1, x1, #2, #32
    c324:	bl	0 <grub_realloc>
    c328:	mov	x8, x0
    c32c:	cbnz	x0, c4b0 <grub_unicode_aglomerate_comb+0x288>
    c330:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    c334:	add	x19, x19, #0x4
    c338:	cmp	x19, x27
    c33c:	ldr	x0, [x0]
    c340:	str	wzr, [x0]
    c344:	b.cc	c2c4 <grub_unicode_aglomerate_comb+0x9c>  // b.lo, b.ul, b.last
    c348:	sub	x19, x19, x22
    c34c:	ldp	x23, x24, [sp, #48]
    c350:	asr	x27, x19, #2
    c354:	ldp	x19, x20, [sp, #16]
    c358:	mov	x0, x27
    c35c:	ldp	x21, x22, [sp, #32]
    c360:	ldp	x25, x26, [sp, #64]
    c364:	ldp	x27, x28, [sp, #80]
    c368:	ldp	x29, x30, [sp], #112
    c36c:	ret
    c370:	cbz	w28, c2b8 <grub_unicode_aglomerate_comb+0x90>
    c374:	ldrh	w1, [x26, #2]
    c378:	add	w0, w0, #0x201
    c37c:	bfi	w1, w0, #7, #9
    c380:	strh	w1, [x26, #2]
    c384:	b	c2b8 <grub_unicode_aglomerate_comb+0x90>
    c388:	cbnz	w28, c500 <grub_unicode_aglomerate_comb+0x2d8>
    c38c:	ldr	x1, [x26]
    c390:	mov	w2, #0x1                   	// #1
    c394:	ldr	w0, [x19]
    c398:	mov	w28, #0x1                   	// #1
    c39c:	and	x1, x1, x25
    c3a0:	strb	w2, [x26, #8]
    c3a4:	and	x0, x0, #0x7fffff
    c3a8:	orr	x0, x0, x1
    c3ac:	str	x0, [x26]
    c3b0:	b	c2b8 <grub_unicode_aglomerate_comb+0x90>
    c3b4:	mov	x0, #0xc                   	// #12
    c3b8:	bl	0 <grub_malloc>
    c3bc:	cbz	x0, c330 <grub_unicode_aglomerate_comb+0x108>
    c3c0:	add	x1, x26, #0x18
    c3c4:	mov	x2, #0x8                   	// #8
    c3c8:	str	x0, [sp, #104]
    c3cc:	bl	0 <grub_memmove>
    c3d0:	ldrh	w3, [x26, #6]
    c3d4:	ldr	x8, [sp, #104]
    c3d8:	str	x8, [x26, #24]
    c3dc:	ubfx	x3, x3, #3, #8
    c3e0:	cmp	w23, w3
    c3e4:	b.cs	c524 <grub_unicode_aglomerate_comb+0x2fc>  // b.hs, b.nlast
    c3e8:	cmp	w20, #0x20
    c3ec:	mov	w5, w23
    c3f0:	cset	w9, ls  // ls = plast
    c3f4:	add	x6, x8, w23, uxtw #2
    c3f8:	ldrh	w2, [x6, #2]
    c3fc:	mov	w0, w5
    c400:	mov	x1, x6
    c404:	ubfx	x2, x2, #5, #8
    c408:	sub	w7, w2, #0x1b
    c40c:	cmp	w2, #0x21
    c410:	and	w7, w7, #0xff
    c414:	ccmp	w9, #0x0, #0x4, eq  // eq = none
    c418:	b.eq	c47c <grub_unicode_aglomerate_comb+0x254>  // b.none
    c41c:	cmp	w20, #0x1a
    c420:	b.hi	c490 <grub_unicode_aglomerate_comb+0x268>  // b.pmore
    c424:	add	x5, x5, #0x1
    c428:	sub	w2, w3, w0
    c42c:	str	x1, [sp, #104]
    c430:	lsl	x2, x2, #2
    c434:	add	x0, x8, x5, lsl #2
    c438:	bl	0 <grub_memmove>
    c43c:	ldr	x1, [sp, #104]
    c440:	ubfiz	w0, w20, #21, #8
    c444:	ldr	w3, [x19]
    c448:	ldr	w2, [x1]
    c44c:	and	w20, w3, #0x1fffff
    c450:	orr	w0, w0, w20
    c454:	and	w2, w2, #0xe0000000
    c458:	orr	w0, w0, w2
    c45c:	str	w0, [x1]
    c460:	ldrh	w0, [x26, #6]
    c464:	mov	w1, w0
    c468:	ubfx	x0, x0, #3, #8
    c46c:	add	w0, w0, #0x1
    c470:	bfi	w1, w0, #3, #8
    c474:	strh	w1, [x26, #6]
    c478:	b	c2b8 <grub_unicode_aglomerate_comb+0x90>
    c47c:	cmp	w20, #0x21
    c480:	ccmp	w7, #0x5, #0x2, eq  // eq = none
    c484:	b.ls	c424 <grub_unicode_aglomerate_comb+0x1fc>  // b.plast
    c488:	cmp	w2, w20
    c48c:	b.hi	c424 <grub_unicode_aglomerate_comb+0x1fc>  // b.pmore
    c490:	add	x5, x5, #0x1
    c494:	add	w0, w0, #0x1
    c498:	cmp	w3, w5
    c49c:	add	x6, x6, #0x4
    c4a0:	b.hi	c3f8 <grub_unicode_aglomerate_comb+0x1d0>  // b.pmore
    c4a4:	mov	w5, w0
    c4a8:	add	x1, x8, w0, uxtw #2
    c4ac:	b	c424 <grub_unicode_aglomerate_comb+0x1fc>
    c4b0:	ldrh	w3, [x26, #6]
    c4b4:	str	x0, [x26, #24]
    c4b8:	ubfx	x3, x3, #3, #8
    c4bc:	b	c3e0 <grub_unicode_aglomerate_comb+0x1b8>
    c4c0:	ldr	x2, [x26]
    c4c4:	and	x1, x0, #0x7fffff
    c4c8:	mov	w3, #0x1                   	// #1
    c4cc:	strb	w3, [x26, #8]
    c4d0:	and	x2, x2, #0xffffffe000000000
    c4d4:	mov	x0, #0x1                   	// #1
    c4d8:	and	x2, x2, #0xf807ffffffffffff
    c4dc:	orr	x1, x2, x1
    c4e0:	ldp	x19, x20, [sp, #16]
    c4e4:	ldp	x23, x24, [sp, #48]
    c4e8:	str	x1, [x26]
    c4ec:	ldp	x21, x22, [sp, #32]
    c4f0:	ldp	x25, x26, [sp, #64]
    c4f4:	ldp	x27, x28, [sp, #80]
    c4f8:	ldp	x29, x30, [sp], #112
    c4fc:	ret
    c500:	sub	x19, x19, x22
    c504:	ldp	x21, x22, [sp, #32]
    c508:	asr	x0, x19, #2
    c50c:	ldp	x19, x20, [sp, #16]
    c510:	ldp	x23, x24, [sp, #48]
    c514:	ldp	x25, x26, [sp, #64]
    c518:	ldp	x27, x28, [sp, #80]
    c51c:	ldp	x29, x30, [sp], #112
    c520:	ret
    c524:	mov	w5, w23
    c528:	add	x1, x8, w23, uxtw #2
    c52c:	mov	w0, w23
    c530:	b	c424 <grub_unicode_aglomerate_comb+0x1fc>
    c534:	mov	x27, #0x0                   	// #0
    c538:	ldp	x19, x20, [sp, #16]
    c53c:	ldp	x23, x24, [sp, #48]
    c540:	b	c358 <grub_unicode_aglomerate_comb+0x130>
    c544:	nop
	...
    c550:	sub	sp, sp, #0x310
    c554:	stp	x29, x30, [sp]
    c558:	mov	x29, sp
    c55c:	stp	x19, x20, [sp, #16]
    c560:	stp	x23, x24, [sp, #48]
    c564:	mov	x24, x0
    c568:	mov	x23, x1
    c56c:	lsl	x0, x1, #5
    c570:	stp	x3, x5, [sp, #112]
    c574:	str	w7, [sp, #164]
    c578:	stp	x4, x6, [sp, #192]
    c57c:	str	x2, [sp, #208]
    c580:	ldr	x19, [sp, #784]
    c584:	bl	0 <grub_malloc>
    c588:	cbz	x0, dacc <grub_unicode_aglomerate_comb+0x18a4>
    c58c:	stp	x21, x22, [sp, #32]
    c590:	stp	x25, x26, [sp, #64]
    c594:	stp	x27, x28, [sp, #80]
    c598:	mov	x27, x0
    c59c:	cbz	x23, c624 <grub_unicode_aglomerate_comb+0x3fc>
    c5a0:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    c5a4:	mov	w21, #0x0                   	// #0
    c5a8:	mov	x1, #0x0                   	// #0
    c5ac:	mov	w22, #0x1ffff               	// #131071
    c5b0:	ldr	x26, [x0]
    c5b4:	adrp	x25, 0 <grub_normal_free_menu-0x268>
    c5b8:	ldr	x6, [x26]
    c5bc:	nop
    c5c0:	ldr	w20, [x24, x1, lsl #2]
    c5c4:	cbz	x6, ca74 <grub_unicode_aglomerate_comb+0x84c>
    c5c8:	cmp	x6, #0x0
    c5cc:	ccmp	w20, w22, #0x2, ne  // ne = any
    c5d0:	b.ls	ca30 <grub_unicode_aglomerate_comb+0x808>  // b.plast
    c5d4:	ldr	x2, [x25]
    c5d8:	ldrh	w1, [x2, #2]
    c5dc:	ubfx	x1, x1, #5, #9
    c5e0:	cbz	w1, c624 <grub_unicode_aglomerate_comb+0x3fc>
    c5e4:	nop
    c5e8:	ldrb	w4, [x2]
    c5ec:	ldrb	w3, [x2, #1]
    c5f0:	ldrb	w0, [x2, #2]
    c5f4:	orr	x3, x4, x3, lsl #8
    c5f8:	ubfiz	x0, x0, #16, #5
    c5fc:	orr	x0, x0, x3
    c600:	add	w1, w1, w0
    c604:	cmp	w20, w0
    c608:	b.cc	c614 <grub_unicode_aglomerate_comb+0x3ec>  // b.lo, b.ul, b.last
    c60c:	cmp	w20, w1
    c610:	b.cc	c9e0 <grub_unicode_aglomerate_comb+0x7b8>  // b.lo, b.ul, b.last
    c614:	ldrh	w1, [x2, #8]
    c618:	add	x2, x2, #0x6
    c61c:	ubfx	x1, x1, #5, #9
    c620:	cbnz	w1, c5e8 <grub_unicode_aglomerate_comb+0x3c0>
    c624:	mov	w25, #0x0                   	// #0
    c628:	add	x23, x24, x23, lsl #2
    c62c:	cmp	x24, x23
    c630:	b.cs	ca28 <grub_unicode_aglomerate_comb+0x800>  // b.hs, b.nlast
    c634:	mov	w6, w25
    c638:	mov	w20, #0x0                   	// #0
    c63c:	mov	x22, x24
    c640:	mov	w8, #0x0                   	// #0
    c644:	mov	w7, #0x0                   	// #0
    c648:	mov	w9, #0x0                   	// #0
    c64c:	mov	w26, w9
    c650:	str	x24, [sp, #136]
    c654:	mov	x24, x27
    c658:	mov	w27, w8
    c65c:	str	w25, [sp, #144]
    c660:	mov	w25, w7
    c664:	str	x19, [sp, #784]
    c668:	mov	w19, w20
    c66c:	mov	w20, w6
    c670:	mov	w21, #0x0                   	// #0
    c674:	mov	w28, #0x0                   	// #0
    c678:	mov	w3, #0x200d                	// #8205
    c67c:	mov	w5, #0x200c                	// #8204
    c680:	str	wzr, [sp, #160]
    c684:	nop
    c688:	ldr	w0, [x22]
    c68c:	cmp	w0, w3
    c690:	b.eq	ca3c <grub_unicode_aglomerate_comb+0x814>  // b.none
    c694:	cmp	w0, w5
    c698:	b.eq	ca80 <grub_unicode_aglomerate_comb+0x858>  // b.none
    c69c:	sub	w0, w0, #0xe0, lsl #12
    c6a0:	cmp	w0, #0x7f
    c6a4:	b.ls	c7d0 <grub_unicode_aglomerate_comb+0x5a8>  // b.plast
    c6a8:	ubfiz	x4, x19, #5, #32
    c6ac:	sub	x1, x23, x22
    c6b0:	add	x2, x24, x4
    c6b4:	mov	x0, x22
    c6b8:	asr	x1, x1, #2
    c6bc:	str	x2, [sp, #104]
    c6c0:	str	x4, [sp, #128]
    c6c4:	bl	c228 <grub_unicode_aglomerate_comb>
    c6c8:	ldp	x4, x1, [sp, #128]
    c6cc:	mov	w3, #0x200d                	// #8205
    c6d0:	ldr	x2, [sp, #104]
    c6d4:	mov	w5, #0x200c                	// #8204
    c6d8:	sub	x1, x22, x1
    c6dc:	asr	x1, x1, #2
    c6e0:	str	x1, [x2, #16]
    c6e4:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    c6e8:	add	x1, x1, #0x0
    c6ec:	ldr	w12, [x24, x4]
    c6f0:	ldr	x1, [x1]
    c6f4:	ubfx	x12, x12, #0, #23
    c6f8:	ldr	x1, [x1]
    c6fc:	cbz	x1, ce7c <grub_unicode_aglomerate_comb+0xc54>
    c700:	cmp	x1, #0x0
    c704:	mov	w4, #0x1ffff               	// #131071
    c708:	ccmp	w12, w4, #0x2, ne  // ne = any
    c70c:	b.ls	cac0 <grub_unicode_aglomerate_comb+0x898>  // b.plast
    c710:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    c714:	ldr	x1, [x1]
    c718:	mov	x13, x1
    c71c:	ldrh	w4, [x1, #2]
    c720:	ubfx	x4, x4, #5, #9
    c724:	cbz	w4, c764 <grub_unicode_aglomerate_comb+0x53c>
    c728:	ldrb	w7, [x13]
    c72c:	ldrb	w6, [x13, #1]
    c730:	ldrb	w1, [x13, #2]
    c734:	orr	x6, x7, x6, lsl #8
    c738:	ubfiz	x1, x1, #16, #5
    c73c:	orr	x1, x1, x6
    c740:	add	w4, w4, w1
    c744:	cmp	w12, w1
    c748:	b.cc	c754 <grub_unicode_aglomerate_comb+0x52c>  // b.lo, b.ul, b.last
    c74c:	cmp	w12, w4
    c750:	b.cc	cb80 <grub_unicode_aglomerate_comb+0x958>  // b.lo, b.ul, b.last
    c754:	ldrh	w4, [x13, #8]
    c758:	add	x13, x13, #0x6
    c75c:	ubfx	x4, x4, #5, #9
    c760:	cbnz	w4, c728 <grub_unicode_aglomerate_comb+0x500>
    c764:	mov	w1, #0x0                   	// #0
    c768:	ldr	w4, [sp, #160]
    c76c:	cmp	w4, #0x2
    c770:	b.eq	caf4 <grub_unicode_aglomerate_comb+0x8cc>  // b.none
    c774:	ldr	w4, [sp, #160]
    c778:	cmp	w4, #0x1
    c77c:	b.ne	c798 <grub_unicode_aglomerate_comb+0x570>  // b.any
    c780:	ldrb	w4, [x2, #4]
    c784:	mov	w8, #0x1d                  	// #29
    c788:	and	w8, w8, w4
    c78c:	orr	w8, w8, #0x8
    c790:	bfxil	w4, w8, #0, #5
    c794:	strb	w4, [x2, #4]
    c798:	ldrb	w4, [x2, #5]
    c79c:	bfxil	w4, w20, #0, #6
    c7a0:	strb	w4, [x2, #5]
    c7a4:	cbz	w26, cb14 <grub_unicode_aglomerate_comb+0x8ec>
    c7a8:	ldr	w4, [x2, #4]
    c7ac:	cmp	w26, #0x2
    c7b0:	mov	w1, #0x3                   	// #3
    c7b4:	csel	w1, wzr, w1, eq  // eq = none
    c7b8:	bfi	w4, w1, #14, #5
    c7bc:	str	w4, [x2, #4]
    c7c0:	add	w19, w19, #0x1
    c7c4:	mov	w27, #0x1                   	// #1
    c7c8:	str	wzr, [sp, #160]
    c7cc:	add	x22, x22, x0, lsl #2
    c7d0:	cmp	x22, x23
    c7d4:	b.cc	c688 <grub_unicode_aglomerate_comb+0x460>  // b.lo, b.ul, b.last
    c7d8:	mov	w20, w19
    c7dc:	ldr	w25, [sp, #144]
    c7e0:	mov	x27, x24
    c7e4:	ldr	x19, [sp, #784]
    c7e8:	cbz	w21, d900 <grub_unicode_aglomerate_comb+0x16d8>
    c7ec:	add	x23, x24, #0x20
    c7f0:	mov	w1, #0x0                   	// #0
    c7f4:	cbz	w20, ca28 <grub_unicode_aglomerate_comb+0x800>
    c7f8:	mov	w14, #0x3                   	// #3
    c7fc:	mov	w4, #0x8000                	// #32768
    c800:	mov	w22, w14
    c804:	mov	w21, #0x8                   	// #8
    c808:	mov	w17, #0x12                  	// #18
    c80c:	mov	w3, #0xb                   	// #11
    c810:	mov	w5, #0x3c000               	// #245760
    c814:	movk	w4, #0x4, lsl #16
    c818:	ubfiz	x7, x1, #5, #32
    c81c:	add	w2, w1, #0x1
    c820:	add	x7, x27, x7
    c824:	mov	w13, w1
    c828:	add	x2, x27, x2, lsl #5
    c82c:	mov	w9, w1
    c830:	ldrb	w6, [x7, #5]
    c834:	mov	w0, w6
    c838:	b	c844 <grub_unicode_aglomerate_comb+0x61c>
    c83c:	ldrb	w0, [x2, #5]
    c840:	add	x2, x2, #0x20
    c844:	eor	w0, w6, w0
    c848:	tst	x0, #0x3f
    c84c:	b.ne	c85c <grub_unicode_aglomerate_comb+0x634>  // b.any
    c850:	add	w9, w9, #0x1
    c854:	cmp	w20, w9
    c858:	b.hi	c83c <grub_unicode_aglomerate_comb+0x614>  // b.pmore
    c85c:	mov	w10, w25
    c860:	cbz	w1, c874 <grub_unicode_aglomerate_comb+0x64c>
    c864:	sub	w0, w1, #0x1
    c868:	add	x0, x27, x0, lsl #5
    c86c:	ldrb	w10, [x0, #5]
    c870:	and	w10, w10, #0x1
    c874:	cmp	w20, w9
    c878:	mov	w11, w25
    c87c:	b.eq	c890 <grub_unicode_aglomerate_comb+0x668>  // b.none
    c880:	ubfiz	x0, x9, #5, #32
    c884:	add	x0, x27, x0
    c888:	ldrb	w11, [x0, #5]
    c88c:	and	w11, w11, #0x3f
    c890:	ldrb	w12, [x7, #5]
    c894:	cmp	w10, #0x0
    c898:	csel	w10, w10, w14, eq  // eq = none
    c89c:	cmp	w9, w1
    c8a0:	and	w12, w12, #0x3f
    c8a4:	b.ls	cda0 <grub_unicode_aglomerate_comb+0xb78>  // b.plast
    c8a8:	mov	w15, w10
    c8ac:	mov	w16, w10
    c8b0:	mov	w2, w1
    c8b4:	mov	w8, w1
    c8b8:	b	c8fc <grub_unicode_aglomerate_comb+0x6d4>
    c8bc:	cmp	w0, #0x4
    c8c0:	b.eq	ccd0 <grub_unicode_aglomerate_comb+0xaa8>  // b.none
    c8c4:	b.ls	cbd0 <grub_unicode_aglomerate_comb+0x9a8>  // b.plast
    c8c8:	cmp	w0, #0x8
    c8cc:	b.ne	cd44 <grub_unicode_aglomerate_comb+0xb1c>  // b.any
    c8d0:	add	w2, w2, #0x1
    c8d4:	mov	w16, w0
    c8d8:	cmp	w15, #0x4
    c8dc:	b.eq	ce5c <grub_unicode_aglomerate_comb+0xc34>  // b.none
    c8e0:	ldr	w0, [x6, #4]
    c8e4:	and	w0, w0, #0x7c000
    c8e8:	cmp	w0, #0x20, lsl #12
    c8ec:	b.eq	c940 <grub_unicode_aglomerate_comb+0x718>  // b.none
    c8f0:	cmp	w9, w2
    c8f4:	b.ls	c958 <grub_unicode_aglomerate_comb+0x730>  // b.plast
    c8f8:	mov	w8, w2
    c8fc:	add	x6, x27, x8, lsl #5
    c900:	ldr	w7, [x6, #4]
    c904:	ubfx	x0, x7, #14, #5
    c908:	cmp	w0, #0x9
    c90c:	b.eq	cd50 <grub_unicode_aglomerate_comb+0xb28>  // b.none
    c910:	b.ls	c8bc <grub_unicode_aglomerate_comb+0x694>  // b.plast
    c914:	cmp	w0, #0xc
    c918:	b.eq	cce8 <grub_unicode_aglomerate_comb+0xac0>  // b.none
    c91c:	cmp	w0, #0xd
    c920:	b.ne	cbec <grub_unicode_aglomerate_comb+0x9c4>  // b.any
    c924:	bfi	w7, w16, #14, #5
    c928:	str	w7, [x6, #4]
    c92c:	add	w2, w2, #0x1
    c930:	ldr	w0, [x6, #4]
    c934:	and	w0, w0, #0x7c000
    c938:	cmp	w0, #0x20, lsl #12
    c93c:	b.ne	c8f0 <grub_unicode_aglomerate_comb+0x6c8>  // b.any
    c940:	cbnz	w15, c8f0 <grub_unicode_aglomerate_comb+0x6c8>
    c944:	ldr	w0, [x6, #4]
    c948:	cmp	w9, w2
    c94c:	and	w0, w0, #0xfff83fff
    c950:	str	w0, [x6, #4]
    c954:	b.hi	c8f8 <grub_unicode_aglomerate_comb+0x6d0>  // b.pmore
    c958:	tst	x12, #0x1
    c95c:	csel	w12, w22, wzr, ne  // ne = any
    c960:	and	w12, w12, #0xff
    c964:	nop
    c968:	cmp	w9, w1
    c96c:	b.ls	c9b8 <grub_unicode_aglomerate_comb+0x790>  // b.plast
    c970:	add	x7, x27, x13, lsl #5
    c974:	mov	w2, w1
    c978:	mov	x6, x7
    c97c:	nop
    c980:	ldr	w0, [x6, #4]
    c984:	add	x6, x6, #0x20
    c988:	and	w8, w0, #0x78000
    c98c:	and	w0, w0, #0x7c000
    c990:	cmp	w8, #0x40, lsl #12
    c994:	ccmp	w0, w5, #0x4, ne  // ne = any
    c998:	ccmp	w0, w4, #0x4, ne  // ne = any
    c99c:	b.ne	ce2c <grub_unicode_aglomerate_comb+0xc04>  // b.any
    c9a0:	add	w2, w2, #0x1
    c9a4:	cmp	w9, w2
    c9a8:	b.ne	c980 <grub_unicode_aglomerate_comb+0x758>  // b.any
    c9ac:	mov	w2, w9
    c9b0:	cmp	w9, w1
    c9b4:	b.ne	cdb0 <grub_unicode_aglomerate_comb+0xb88>  // b.any
    c9b8:	add	x0, x27, x13, lsl #5
    c9bc:	add	w2, w1, #0x1
    c9c0:	ldr	w10, [x0, #4]
    c9c4:	ands	w10, w10, #0x7c000
    c9c8:	csel	w10, w10, w14, eq  // eq = none
    c9cc:	cmp	w9, w2
    c9d0:	b.ls	cda0 <grub_unicode_aglomerate_comb+0xb78>  // b.plast
    c9d4:	mov	w13, w2
    c9d8:	mov	x1, x13
    c9dc:	b	c968 <grub_unicode_aglomerate_comb+0x740>
    c9e0:	ldrb	w1, [x2, #4]
    c9e4:	ldrb	w0, [x2, #3]
    c9e8:	ubfiz	x1, x1, #2, #3
    c9ec:	orr	w0, w1, w0, lsr #6
    c9f0:	and	w1, w0, #0xfffffffb
    c9f4:	cbz	w1, ca10 <grub_unicode_aglomerate_comb+0x7e8>
    c9f8:	cmp	w0, #0x3
    c9fc:	b.eq	da00 <grub_unicode_aglomerate_comb+0x17d8>  // b.none
    ca00:	add	w1, w21, #0x1
    ca04:	mov	x21, x1
    ca08:	cmp	x23, w1, uxtw
    ca0c:	b.hi	c5c0 <grub_unicode_aglomerate_comb+0x398>  // b.pmore
    ca10:	sub	w0, w0, #0x3
    ca14:	add	x23, x24, x23, lsl #2
    ca18:	cmp	w0, #0x1
    ca1c:	cset	w25, ls  // ls = plast
    ca20:	cmp	x24, x23
    ca24:	b.cc	c634 <grub_unicode_aglomerate_comb+0x40c>  // b.lo, b.ul, b.last
    ca28:	mov	x19, #0x0                   	// #0
    ca2c:	b	d054 <grub_unicode_aglomerate_comb+0xe2c>
    ca30:	ldrb	w0, [x6, w20, uxtw]
    ca34:	and	w0, w0, #0x7f
    ca38:	b	c9f0 <grub_unicode_aglomerate_comb+0x7c8>
    ca3c:	cbz	w27, ca58 <grub_unicode_aglomerate_comb+0x830>
    ca40:	sub	w0, w19, #0x1
    ca44:	mov	w2, #0x14                  	// #20
    ca48:	add	x0, x24, x0, lsl #5
    ca4c:	ldrb	w1, [x0, #4]
    ca50:	orr	w1, w1, w2
    ca54:	strb	w1, [x0, #4]
    ca58:	mov	w0, #0x2                   	// #2
    ca5c:	str	w0, [sp, #160]
    ca60:	add	x22, x22, #0x4
    ca64:	mov	w27, #0x0                   	// #0
    ca68:	cmp	x22, x23
    ca6c:	b.cc	c688 <grub_unicode_aglomerate_comb+0x460>  // b.lo, b.ul, b.last
    ca70:	b	c7d8 <grub_unicode_aglomerate_comb+0x5b0>
    ca74:	bl	b908 <grub_context_fini+0x18>
    ca78:	ldr	x6, [x26]
    ca7c:	b	c5c8 <grub_unicode_aglomerate_comb+0x3a0>
    ca80:	cbz	w27, caa4 <grub_unicode_aglomerate_comb+0x87c>
    ca84:	sub	w0, w19, #0x1
    ca88:	mov	w2, #0x1b                  	// #27
    ca8c:	add	x0, x24, x0, lsl #5
    ca90:	ldrb	w1, [x0, #4]
    ca94:	and	w2, w2, w1
    ca98:	orr	w2, w2, #0x10
    ca9c:	bfxil	w1, w2, #0, #5
    caa0:	strb	w1, [x0, #4]
    caa4:	mov	w0, #0x1                   	// #1
    caa8:	str	w0, [sp, #160]
    caac:	add	x22, x22, #0x4
    cab0:	mov	w27, #0x0                   	// #0
    cab4:	cmp	x22, x23
    cab8:	b.cc	c688 <grub_unicode_aglomerate_comb+0x460>  // b.lo, b.ul, b.last
    cabc:	b	c7d8 <grub_unicode_aglomerate_comb+0x5b0>
    cac0:	ldrb	w1, [x1, w12, uxtw]
    cac4:	and	w1, w1, #0x7f
    cac8:	cmp	w1, #0x5
    cacc:	b.eq	cb98 <grub_unicode_aglomerate_comb+0x970>  // b.none
    cad0:	b.hi	cb24 <grub_unicode_aglomerate_comb+0x8fc>  // b.pmore
    cad4:	cmp	w1, #0x2
    cad8:	b.eq	d9c8 <grub_unicode_aglomerate_comb+0x17a0>  // b.none
    cadc:	b.ls	cb5c <grub_unicode_aglomerate_comb+0x934>  // b.plast
    cae0:	ldr	w4, [sp, #160]
    cae4:	cmp	w1, #0x5
    cae8:	csinc	w21, w21, wzr, eq  // eq = none
    caec:	cmp	w4, #0x2
    caf0:	b.ne	c774 <grub_unicode_aglomerate_comb+0x54c>  // b.any
    caf4:	ldrb	w4, [x2, #4]
    caf8:	mov	w8, #0xa                   	// #10
    cafc:	orr	w4, w4, w8
    cb00:	strb	w4, [x2, #4]
    cb04:	ldrb	w4, [x2, #5]
    cb08:	bfxil	w4, w20, #0, #6
    cb0c:	strb	w4, [x2, #5]
    cb10:	cbnz	w26, c7a8 <grub_unicode_aglomerate_comb+0x580>
    cb14:	ldr	w4, [x2, #4]
    cb18:	bfi	w4, w1, #14, #5
    cb1c:	str	w4, [x2, #4]
    cb20:	b	c7c0 <grub_unicode_aglomerate_comb+0x598>
    cb24:	cmp	w1, #0x7
    cb28:	b.eq	d9a0 <grub_unicode_aglomerate_comb+0x1778>  // b.none
    cb2c:	cmp	w1, #0xe
    cb30:	b.eq	c7cc <grub_unicode_aglomerate_comb+0x5a4>  // b.none
    cb34:	cmp	w1, #0x6
    cb38:	b.ne	c768 <grub_unicode_aglomerate_comb+0x540>  // b.any
    cb3c:	orr	w1, w20, #0x1
    cb40:	add	w1, w1, #0x1
    cb44:	cmp	w1, #0x3d
    cb48:	b.ls	da24 <grub_unicode_aglomerate_comb+0x17fc>  // b.plast
    cb4c:	add	w25, w25, #0x1
    cb50:	add	x22, x22, x0, lsl #2
    cb54:	mov	w21, #0x1                   	// #1
    cb58:	b	c7d0 <grub_unicode_aglomerate_comb+0x5a8>
    cb5c:	cmp	w1, #0x1
    cb60:	b.ne	c768 <grub_unicode_aglomerate_comb+0x540>  // b.any
    cb64:	and	w2, w20, #0xfffffffe
    cb68:	add	w2, w2, #0x2
    cb6c:	cmp	w2, #0x3d
    cb70:	b.ls	da50 <grub_unicode_aglomerate_comb+0x1828>  // b.plast
    cb74:	add	w25, w25, #0x1
    cb78:	add	x22, x22, x0, lsl #2
    cb7c:	b	c7d0 <grub_unicode_aglomerate_comb+0x5a8>
    cb80:	ldrb	w1, [x13, #4]
    cb84:	ldrb	w4, [x13, #3]
    cb88:	ubfiz	x1, x1, #2, #3
    cb8c:	orr	w1, w1, w4, lsr #6
    cb90:	cmp	w1, #0x5
    cb94:	b.ne	cad0 <grub_unicode_aglomerate_comb+0x8a8>  // b.any
    cb98:	orr	w2, w20, #0x1
    cb9c:	add	w2, w2, #0x1
    cba0:	cmp	w2, #0x3d
    cba4:	b.hi	cb4c <grub_unicode_aglomerate_comb+0x924>  // b.pmore
    cba8:	mov	w1, w28
    cbac:	add	x4, sp, #0x110
    cbb0:	mov	w21, #0x1                   	// #1
    cbb4:	add	x22, x22, x0, lsl #2
    cbb8:	add	w28, w28, w21
    cbbc:	str	w20, [x4, x1, lsl #2]
    cbc0:	mov	w20, w2
    cbc4:	add	x2, sp, #0x210
    cbc8:	str	w26, [x2, x1, lsl #2]
    cbcc:	b	c7d0 <grub_unicode_aglomerate_comb+0x5a8>
    cbd0:	cbz	w0, cbdc <grub_unicode_aglomerate_comb+0x9b4>
    cbd4:	cmp	w0, #0x3
    cbd8:	b.ne	cd44 <grub_unicode_aglomerate_comb+0xb1c>  // b.any
    cbdc:	mov	w15, w0
    cbe0:	add	w2, w2, #0x1
    cbe4:	mov	w16, w0
    cbe8:	b	c8e0 <grub_unicode_aglomerate_comb+0x6b8>
    cbec:	cmp	w0, #0xa
    cbf0:	b.ne	cd44 <grub_unicode_aglomerate_comb+0xb1c>  // b.any
    cbf4:	cmp	w16, #0x8
    cbf8:	b.eq	c924 <grub_unicode_aglomerate_comb+0x6fc>  // b.none
    cbfc:	mov	w0, w2
    cc00:	ubfiz	x7, x0, #5, #32
    cc04:	add	x7, x27, x7
    cc08:	ldr	w7, [x7, #4]
    cc0c:	and	w7, w7, #0x7c000
    cc10:	cmp	w7, #0x28, lsl #12
    cc14:	b.ne	cc24 <grub_unicode_aglomerate_comb+0x9fc>  // b.any
    cc18:	add	w0, w0, #0x1
    cc1c:	cmp	w9, w0
    cc20:	b.hi	cc00 <grub_unicode_aglomerate_comb+0x9d8>  // b.pmore
    cc24:	cmp	w9, w0
    cc28:	b.eq	cc44 <grub_unicode_aglomerate_comb+0xa1c>  // b.none
    cc2c:	ubfiz	x0, x0, #5, #32
    cc30:	add	x0, x27, x0
    cc34:	ldr	w0, [x0, #4]
    cc38:	and	w0, w0, #0x7c000
    cc3c:	cmp	w0, #0x20, lsl #12
    cc40:	b.eq	cc98 <grub_unicode_aglomerate_comb+0xa70>  // b.none
    cc44:	mov	x7, x6
    cc48:	cmp	w9, w2
    cc4c:	b.hi	cc6c <grub_unicode_aglomerate_comb+0xa44>  // b.pmore
    cc50:	b	cc84 <grub_unicode_aglomerate_comb+0xa5c>
    cc54:	bfi	w8, w17, #14, #5
    cc58:	str	w8, [x7, #4]
    cc5c:	add	w2, w2, #0x1
    cc60:	add	x7, x6, #0x20
    cc64:	cmp	w9, w2
    cc68:	b.eq	ce70 <grub_unicode_aglomerate_comb+0xc48>  // b.none
    cc6c:	ldr	w0, [x7, #4]
    cc70:	mov	x6, x7
    cc74:	mov	w8, w0
    cc78:	and	w0, w0, #0x7c000
    cc7c:	cmp	w0, #0x28, lsl #12
    cc80:	b.eq	cc54 <grub_unicode_aglomerate_comb+0xa2c>  // b.none
    cc84:	sub	w6, w2, #0x1
    cc88:	add	x6, x27, x6, lsl #5
    cc8c:	ldr	w16, [x6, #4]
    cc90:	ubfx	x16, x16, #14, #5
    cc94:	b	c8e0 <grub_unicode_aglomerate_comb+0x6b8>
    cc98:	add	x6, x27, x8, lsl #5
    cc9c:	ldr	w0, [x6, #4]
    cca0:	mov	w7, w0
    cca4:	and	w0, w0, #0x7c000
    cca8:	cmp	w0, #0x28, lsl #12
    ccac:	b.ne	cc84 <grub_unicode_aglomerate_comb+0xa5c>  // b.any
    ccb0:	bfi	w7, w21, #14, #5
    ccb4:	str	w7, [x6, #4]
    ccb8:	add	w8, w2, #0x1
    ccbc:	mov	x2, x8
    ccc0:	cmp	w9, w8
    ccc4:	b.hi	cc98 <grub_unicode_aglomerate_comb+0xa70>  // b.pmore
    ccc8:	mov	w16, #0x8                   	// #8
    cccc:	b	c8e0 <grub_unicode_aglomerate_comb+0x6b8>
    ccd0:	bfi	w7, w14, #14, #5
    ccd4:	add	w2, w2, #0x1
    ccd8:	mov	w16, #0x3                   	// #3
    ccdc:	mov	w15, #0x4                   	// #4
    cce0:	str	w7, [x6, #4]
    cce4:	b	c8f0 <grub_unicode_aglomerate_comb+0x6c8>
    cce8:	add	w2, w2, #0x1
    ccec:	cmp	w16, #0x8
    ccf0:	b.eq	cd5c <grub_unicode_aglomerate_comb+0xb34>  // b.none
    ccf4:	cmp	w16, #0xb
    ccf8:	b.ne	cd30 <grub_unicode_aglomerate_comb+0xb08>  // b.any
    ccfc:	cmp	w9, w2
    cd00:	b.ls	cd30 <grub_unicode_aglomerate_comb+0xb08>  // b.plast
    cd04:	ubfiz	x0, x2, #5, #32
    cd08:	mov	w8, w2
    cd0c:	add	x0, x27, x0
    cd10:	ldr	w0, [x0, #4]
    cd14:	and	w0, w0, #0x7c000
    cd18:	cmp	w0, #0x2c, lsl #12
    cd1c:	b.eq	da08 <grub_unicode_aglomerate_comb+0x17e0>  // b.none
    cd20:	cmp	w0, #0x20, lsl #12
    cd24:	ccmp	w15, #0x4, #0x0, eq  // eq = none
    cd28:	b.eq	da08 <grub_unicode_aglomerate_comb+0x17e0>  // b.none
    cd2c:	nop
    cd30:	ldr	w0, [x6, #4]
    cd34:	mov	w16, #0x12                  	// #18
    cd38:	bfi	w0, w17, #14, #5
    cd3c:	str	w0, [x6, #4]
    cd40:	b	c8e0 <grub_unicode_aglomerate_comb+0x6b8>
    cd44:	mov	w16, w0
    cd48:	add	w2, w2, #0x1
    cd4c:	b	c8e0 <grub_unicode_aglomerate_comb+0x6b8>
    cd50:	add	w2, w2, #0x1
    cd54:	cmp	w16, #0x8
    cd58:	b.ne	cd30 <grub_unicode_aglomerate_comb+0xb08>  // b.any
    cd5c:	cmp	w9, w2
    cd60:	b.ls	cd30 <grub_unicode_aglomerate_comb+0xb08>  // b.plast
    cd64:	ubfiz	x0, x2, #5, #32
    cd68:	mov	w8, w2
    cd6c:	add	x0, x27, x0
    cd70:	ldr	w0, [x0, #4]
    cd74:	and	w0, w0, #0x7c000
    cd78:	cmp	w0, #0x20, lsl #12
    cd7c:	b.ne	cd30 <grub_unicode_aglomerate_comb+0xb08>  // b.any
    cd80:	bfi	w7, w16, #14, #5
    cd84:	str	w7, [x6, #4]
    cd88:	ldr	w0, [x6, #4]
    cd8c:	mov	w16, #0x8                   	// #8
    cd90:	and	w0, w0, #0x7c000
    cd94:	cmp	w0, #0x20, lsl #12
    cd98:	b.ne	c8fc <grub_unicode_aglomerate_comb+0x6d4>  // b.any
    cd9c:	b	c940 <grub_unicode_aglomerate_comb+0x718>
    cda0:	cmp	w20, w9
    cda4:	b.ls	ceb0 <grub_unicode_aglomerate_comb+0xc88>  // b.plast
    cda8:	mov	w1, w9
    cdac:	b	c818 <grub_unicode_aglomerate_comb+0x5f0>
    cdb0:	ands	w6, w11, #0x1
    cdb4:	csel	w6, w6, w14, eq  // eq = none
    cdb8:	cmp	w6, w10
    cdbc:	b.eq	cdf4 <grub_unicode_aglomerate_comb+0xbcc>  // b.none
    cdc0:	cmp	w2, w1
    cdc4:	b.ls	ce54 <grub_unicode_aglomerate_comb+0xc2c>  // b.plast
    cdc8:	mvn	w0, w1
    cdcc:	add	w0, w0, w2
    cdd0:	add	x0, x0, x13
    cdd4:	add	x0, x23, x0, lsl #5
    cdd8:	ldr	w1, [x7, #4]
    cddc:	add	x7, x7, #0x20
    cde0:	bfi	w1, w12, #14, #5
    cde4:	stur	w1, [x7, #-28]
    cde8:	cmp	x0, x7
    cdec:	b.ne	cdd8 <grub_unicode_aglomerate_comb+0xbb0>  // b.any
    cdf0:	b	c9cc <grub_unicode_aglomerate_comb+0x7a4>
    cdf4:	cmp	w2, w1
    cdf8:	b.ls	ce54 <grub_unicode_aglomerate_comb+0xc2c>  // b.plast
    cdfc:	mvn	w0, w1
    ce00:	and	w6, w10, #0x1f
    ce04:	add	w0, w0, w2
    ce08:	add	x0, x0, x13
    ce0c:	add	x0, x23, x0, lsl #5
    ce10:	ldr	w1, [x7, #4]
    ce14:	add	x7, x7, #0x20
    ce18:	bfi	w1, w6, #14, #5
    ce1c:	stur	w1, [x7, #-28]
    ce20:	cmp	x0, x7
    ce24:	b.ne	ce10 <grub_unicode_aglomerate_comb+0xbe8>  // b.any
    ce28:	b	c9cc <grub_unicode_aglomerate_comb+0x7a4>
    ce2c:	cmp	w2, w1
    ce30:	b.eq	c9b8 <grub_unicode_aglomerate_comb+0x790>  // b.none
    ce34:	cmp	w9, w2
    ce38:	b.eq	cdb0 <grub_unicode_aglomerate_comb+0xb88>  // b.none
    ce3c:	ubfiz	x0, x2, #5, #32
    ce40:	add	x0, x27, x0
    ce44:	ldr	w6, [x0, #4]
    ce48:	ands	w6, w6, #0x7c000
    ce4c:	csel	w6, w6, w14, eq  // eq = none
    ce50:	b	cdb8 <grub_unicode_aglomerate_comb+0xb90>
    ce54:	mov	w2, w1
    ce58:	b	c9d4 <grub_unicode_aglomerate_comb+0x7ac>
    ce5c:	bfi	w7, w3, #14, #5
    ce60:	mov	w16, #0xb                   	// #11
    ce64:	mov	w15, #0x4                   	// #4
    ce68:	str	w7, [x6, #4]
    ce6c:	b	c8f0 <grub_unicode_aglomerate_comb+0x6c8>
    ce70:	mov	w2, w9
    ce74:	mov	w16, #0x12                  	// #18
    ce78:	b	c8e0 <grub_unicode_aglomerate_comb+0x6b8>
    ce7c:	str	w12, [sp, #128]
    ce80:	str	x0, [sp, #152]
    ce84:	bl	b908 <grub_context_fini+0x18>
    ce88:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    ce8c:	add	x0, x0, #0x0
    ce90:	ldr	w12, [sp, #128]
    ce94:	mov	w5, #0x200c                	// #8204
    ce98:	mov	w3, #0x200d                	// #8205
    ce9c:	ldr	x0, [x0]
    cea0:	ldr	x2, [sp, #104]
    cea4:	ldr	x1, [x0]
    cea8:	ldr	x0, [sp, #152]
    ceac:	b	c700 <grub_unicode_aglomerate_comb+0x4d8>
    ceb0:	sub	w5, w20, #0x1
    ceb4:	mov	w0, #0x20                  	// #32
    ceb8:	mov	w7, #0xc000                	// #49152
    cebc:	mov	x1, x27
    cec0:	movk	w7, #0x5, lsl #16
    cec4:	mov	w8, #0x20000               	// #131072
    cec8:	umaddl	x5, w5, w0, x23
    cecc:	b	cef4 <grub_unicode_aglomerate_comb+0xccc>
    ced0:	add	w3, w3, #0x1
    ced4:	cmp	w0, #0x2c, lsl #12
    ced8:	ccmp	w4, #0x0, #0x4, ne  // ne = any
    cedc:	bfxil	w2, w3, #0, #6
    cee0:	b.ne	cee8 <grub_unicode_aglomerate_comb+0xcc0>  // b.any
    cee4:	strb	w2, [x1, #5]
    cee8:	add	x1, x1, #0x20
    ceec:	cmp	x5, x1
    cef0:	b.eq	cf38 <grub_unicode_aglomerate_comb+0xd10>  // b.none
    cef4:	ldrb	w2, [x1, #5]
    cef8:	ldr	w0, [x1, #4]
    cefc:	and	w3, w2, #0x3f
    cf00:	and	w4, w0, w7
    cf04:	and	w0, w0, #0x7c000
    cf08:	tbnz	w2, #0, ced0 <grub_unicode_aglomerate_comb+0xca8>
    cf0c:	cmp	w0, #0xc, lsl #12
    cf10:	b.eq	d990 <grub_unicode_aglomerate_comb+0x1768>  // b.none
    cf14:	cmp	w0, #0x2c, lsl #12
    cf18:	ccmp	w0, w8, #0x4, ne  // ne = any
    cf1c:	b.ne	cee8 <grub_unicode_aglomerate_comb+0xcc0>  // b.any
    cf20:	add	w3, w3, #0x2
    cf24:	add	x1, x1, #0x20
    cf28:	bfxil	w2, w3, #0, #6
    cf2c:	sturb	w2, [x1, #-27]
    cf30:	cmp	x5, x1
    cf34:	b.ne	cef4 <grub_unicode_aglomerate_comb+0xccc>  // b.any
    cf38:	ldr	x0, [sp, #120]
    cf3c:	cmp	x0, #0x0
    cf40:	cset	w1, gt
    cf44:	str	w1, [sp, #128]
    cf48:	cmp	w1, #0x0
    cf4c:	ldr	x1, [sp, #200]
    cf50:	ccmp	x0, x1, #0x2, ne  // ne = any
    cf54:	b.ls	d950 <grub_unicode_aglomerate_comb+0x1728>  // b.plast
    cf58:	ldr	x0, [sp, #208]
    cf5c:	mov	x2, x1
    cf60:	mov	x24, x0
    cf64:	ldr	x0, [sp, #800]
    cf68:	mov	w22, w20
    cf6c:	mov	w13, #0x0                   	// #0
    cf70:	mov	x25, x24
    cf74:	str	x23, [sp, #152]
    cf78:	mov	w23, w13
    cf7c:	add	x0, x19, x0, lsl #2
    cf80:	str	w20, [sp, #220]
    cf84:	mov	x20, x2
    cf88:	stp	x0, xzr, [sp, #224]
    cf8c:	mov	x0, #0xffffffffffffffff    	// #-1
    cf90:	mov	w21, #0x0                   	// #0
    cf94:	str	x0, [sp, #136]
    cf98:	mov	x0, #0x0                   	// #0
    cf9c:	str	wzr, [sp, #160]
    cfa0:	cmp	x0, x22
    cfa4:	cset	w1, ne  // ne = any
    cfa8:	cset	w28, eq  // eq = none
    cfac:	cbz	x19, d4b0 <grub_unicode_aglomerate_comb+0x1288>
    cfb0:	ldrh	w3, [sp, #160]
    cfb4:	and	w2, w20, #0x7fff
    cfb8:	b.eq	d7b0 <grub_unicode_aglomerate_comb+0x1588>  // b.none
    cfbc:	add	x24, x27, x0, lsl #5
    cfc0:	ldr	x0, [x24, #16]
    cfc4:	lsl	x0, x0, #2
    cfc8:	add	x4, x19, x0
    cfcc:	ldrh	w1, [x19, x0]
    cfd0:	bfi	w1, w2, #1, #15
    cfd4:	strh	w1, [x19, x0]
    cfd8:	strh	w3, [x4, #2]
    cfdc:	orr	w1, w1, #0x1
    cfe0:	strb	w1, [x19, x0]
    cfe4:	ldr	x0, [sp, #112]
    cfe8:	cbz	x0, d824 <grub_unicode_aglomerate_comb+0x15fc>
    cfec:	ldr	x2, [sp, #112]
    cff0:	mov	x0, x24
    cff4:	ldr	x1, [sp, #192]
    cff8:	blr	x2
    cffc:	add	x20, x20, x0
    d000:	ldr	w1, [sp, #128]
    d004:	cmp	w1, #0x0
    d008:	ldr	x1, [sp, #120]
    d00c:	ccmp	x1, x20, #0x0, ne  // ne = any
    d010:	cset	w1, lt  // lt = tstop
    d014:	orr	w28, w28, w1
    d018:	ldr	w1, [x24]
    d01c:	and	w1, w1, #0x7fffff
    d020:	cmp	w1, #0x20
    d024:	ccmp	w1, #0x9, #0x4, ne  // ne = any
    d028:	ldr	w1, [sp, #792]
    d02c:	ccmp	w1, #0x0, #0x0, eq  // eq = none
    d030:	b.eq	d080 <grub_unicode_aglomerate_comb+0xe58>  // b.none
    d034:	cbnz	w28, d090 <grub_unicode_aglomerate_comb+0xe68>
    d038:	add	w0, w21, #0x1
    d03c:	mov	x21, x0
    d040:	cmp	x22, w0, uxtw
    d044:	b.cs	cfa0 <grub_unicode_aglomerate_comb+0xd78>  // b.hs, b.nlast
    d048:	ldr	x1, [sp, #208]
    d04c:	sub	x19, x25, x1
    d050:	asr	x19, x19, #5
    d054:	mov	x0, x27
    d058:	bl	0 <grub_free>
    d05c:	ldp	x21, x22, [sp, #32]
    d060:	ldp	x25, x26, [sp, #64]
    d064:	ldp	x27, x28, [sp, #80]
    d068:	mov	x0, x19
    d06c:	ldp	x29, x30, [sp]
    d070:	ldp	x19, x20, [sp, #16]
    d074:	ldp	x23, x24, [sp, #48]
    d078:	add	sp, sp, #0x310
    d07c:	ret
    d080:	mov	w1, w21
    d084:	str	x1, [sp, #136]
    d088:	str	x20, [sp, #232]
    d08c:	cbz	w28, d038 <grub_unicode_aglomerate_comb+0xe10>
    d090:	ldr	x1, [sp, #136]
    d094:	cmp	x1, w23, sxtw
    d098:	ldr	w1, [sp, #160]
    d09c:	add	w2, w1, #0x1
    d0a0:	b.le	d844 <grub_unicode_aglomerate_comb+0x161c>
    d0a4:	ldr	x0, [sp, #232]
    d0a8:	str	w2, [sp, #160]
    d0ac:	ldr	w15, [sp, #136]
    d0b0:	sub	x20, x20, x0
    d0b4:	sxtw	x0, w15
    d0b8:	str	x0, [sp, #144]
    d0bc:	cmp	w15, w23
    d0c0:	sub	w24, w15, #0x1
    d0c4:	b.ls	d814 <grub_unicode_aglomerate_comb+0x15ec>  // b.plast
    d0c8:	mvn	w28, w23
    d0cc:	mov	w0, w23
    d0d0:	add	w2, w28, w15
    d0d4:	str	x0, [sp, #104]
    d0d8:	add	x2, x2, x0
    d0dc:	ubfiz	x30, x23, #5, #32
    d0e0:	ldr	x0, [sp, #152]
    d0e4:	add	x30, x27, x30
    d0e8:	mov	x1, x30
    d0ec:	mov	w17, #0xffffffff            	// #-1
    d0f0:	mov	w12, #0x0                   	// #0
    d0f4:	add	x2, x0, x2, lsl #5
    d0f8:	ldrb	w0, [x1, #5]
    d0fc:	add	x1, x1, #0x20
    d100:	and	w0, w0, #0x3f
    d104:	cmp	w12, w0
    d108:	csel	w12, w12, w0, cs  // cs = hs, nlast
    d10c:	cmp	w0, w17
    d110:	b.cs	d11c <grub_unicode_aglomerate_comb+0xef4>  // b.hs, b.nlast
    d114:	tst	x0, #0x1
    d118:	csel	w17, w17, w0, eq  // eq = none
    d11c:	cmp	x1, x2
    d120:	b.ne	d0f8 <grub_unicode_aglomerate_comb+0xed0>  // b.any
    d124:	sub	w0, w17, #0x1
    d128:	cmp	w12, w0
    d12c:	b.ls	dac4 <grub_unicode_aglomerate_comb+0x189c>  // b.plast
    d130:	ldr	x0, [sp, #104]
    d134:	add	w16, w23, #0x1
    d138:	sub	x16, x16, x0
    d13c:	lsl	x16, x16, #5
    d140:	mov	x10, x30
    d144:	mov	w3, w23
    d148:	mov	w13, w23
    d14c:	nop
    d150:	ldrb	w0, [x10, #5]
    d154:	cmp	w23, w3
    d158:	and	w0, w0, #0x3f
    d15c:	b.eq	d1bc <grub_unicode_aglomerate_comb+0xf94>  // b.none
    d160:	cmp	w12, w0
    d164:	add	w9, w3, #0x1
    d168:	b.hi	d1c8 <grub_unicode_aglomerate_comb+0xfa0>  // b.pmore
    d16c:	sub	w0, w3, #0x1
    d170:	add	x0, x27, x0, lsl #5
    d174:	ldrb	w0, [x0, #5]
    d178:	and	w0, w0, #0x3f
    d17c:	cmp	w0, w12
    d180:	csel	w13, w13, w3, cs  // cs = hs, nlast
    d184:	add	w9, w3, #0x1
    d188:	cmp	w15, w9
    d18c:	b.eq	d4c8 <grub_unicode_aglomerate_comb+0x12a0>  // b.none
    d190:	add	x0, x16, x10
    d194:	ldrb	w0, [x0, #5]
    d198:	and	w0, w0, #0x3f
    d19c:	cmp	w0, w12
    d1a0:	b.cc	d4c8 <grub_unicode_aglomerate_comb+0x12a0>  // b.lo, b.ul, b.last
    d1a4:	ldrb	w0, [x10, #37]
    d1a8:	mov	w3, w9
    d1ac:	add	x10, x10, #0x20
    d1b0:	cmp	w23, w3
    d1b4:	and	w0, w0, #0x3f
    d1b8:	b.ne	d160 <grub_unicode_aglomerate_comb+0xf38>  // b.any
    d1bc:	cmp	w12, w0
    d1c0:	add	w9, w23, #0x1
    d1c4:	b.ls	d184 <grub_unicode_aglomerate_comb+0xf5c>  // b.plast
    d1c8:	add	x10, x10, #0x20
    d1cc:	cmp	w15, w9
    d1d0:	mov	w3, w9
    d1d4:	b.ne	d150 <grub_unicode_aglomerate_comb+0xf28>  // b.any
    d1d8:	cmp	w17, w12
    d1dc:	sub	w12, w12, #0x1
    d1e0:	b.ne	d140 <grub_unicode_aglomerate_comb+0xf18>  // b.any
    d1e4:	mov	w26, w9
    d1e8:	cmp	w23, w15
    d1ec:	b.cs	d81c <grub_unicode_aglomerate_comb+0x15f4>  // b.hs, b.nlast
    d1f0:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    d1f4:	add	w5, w28, w26
    d1f8:	ldr	x1, [sp, #104]
    d1fc:	stp	x20, x22, [sp, #168]
    d200:	mov	w7, #0x1ffff               	// #131071
    d204:	ldr	x28, [x0]
    d208:	add	x5, x5, x1
    d20c:	ldr	x0, [sp, #152]
    d210:	add	x4, x27, x1, lsl #5
    d214:	mov	x20, x4
    d218:	str	w21, [sp, #216]
    d21c:	mov	x21, x28
    d220:	mov	w10, #0xa                   	// #10
    d224:	add	x5, x0, x5, lsl #5
    d228:	mov	w9, #0x14                  	// #20
    d22c:	ldr	x14, [x28]
    d230:	mov	x28, x19
    d234:	mov	x19, x5
    d238:	adrp	x8, 0 <grub_normal_free_menu-0x268>
    d23c:	str	x4, [sp, #184]
    d240:	ldr	w4, [x20]
    d244:	ubfx	x22, x4, #0, #23
    d248:	cbz	x14, d76c <grub_unicode_aglomerate_comb+0x1544>
    d24c:	cmp	x14, #0x0
    d250:	ccmp	w22, w7, #0x2, ne  // ne = any
    d254:	b.ls	d744 <grub_unicode_aglomerate_comb+0x151c>  // b.plast
    d258:	ldr	x0, [x8]
    d25c:	mov	x2, x0
    d260:	ldrh	w1, [x0, #2]
    d264:	ubfx	x1, x1, #5, #9
    d268:	cbz	w1, d2ac <grub_unicode_aglomerate_comb+0x1084>
    d26c:	nop
    d270:	ldrb	w4, [x2]
    d274:	ldrb	w3, [x2, #1]
    d278:	ldrb	w0, [x2, #2]
    d27c:	orr	x3, x4, x3, lsl #8
    d280:	ubfiz	x0, x0, #16, #5
    d284:	orr	x0, x0, x3
    d288:	add	w1, w1, w0
    d28c:	cmp	w22, w0
    d290:	b.cc	d29c <grub_unicode_aglomerate_comb+0x1074>  // b.lo, b.ul, b.last
    d294:	cmp	w22, w1
    d298:	b.cc	d70c <grub_unicode_aglomerate_comb+0x14e4>  // b.lo, b.ul, b.last
    d29c:	ldrh	w1, [x2, #8]
    d2a0:	add	x2, x2, #0x6
    d2a4:	ubfx	x1, x1, #5, #9
    d2a8:	cbnz	w1, d270 <grub_unicode_aglomerate_comb+0x1048>
    d2ac:	ldrb	w0, [x20, #4]
    d2b0:	tst	w0, #0x1e
    d2b4:	and	w1, w0, #0x1f
    d2b8:	b.eq	d2ec <grub_unicode_aglomerate_comb+0x10c4>  // b.none
    d2bc:	ldrb	w0, [x20, #5]
    d2c0:	tst	x0, #0x3f
    d2c4:	b.eq	d2ec <grub_unicode_aglomerate_comb+0x10c4>  // b.none
    d2c8:	and	w3, w1, w9
    d2cc:	and	w2, w1, w10
    d2d0:	and	w0, w1, #0x1
    d2d4:	ldrb	w4, [x20, #4]
    d2d8:	asr	w1, w3, #1
    d2dc:	orr	w1, w1, w2, lsl #1
    d2e0:	orr	w0, w1, w0
    d2e4:	bfxil	w4, w0, #0, #5
    d2e8:	strb	w4, [x20, #4]
    d2ec:	add	x20, x20, #0x20
    d2f0:	cmp	x19, x20
    d2f4:	b.ne	d240 <grub_unicode_aglomerate_comb+0x1018>  // b.any
    d2f8:	mov	x5, x19
    d2fc:	mov	x19, x28
    d300:	mov	x28, x21
    d304:	mov	x22, x21
    d308:	ldr	x4, [sp, #184]
    d30c:	mov	w6, #0x0                   	// #0
    d310:	ldr	w21, [sp, #216]
    d314:	mov	x20, x5
    d318:	ldr	x10, [x28, #8]
    d31c:	str	w21, [sp, #216]
    d320:	mov	x21, x4
    d324:	str	x19, [sp, #784]
    d328:	mov	w19, w6
    d32c:	mov	w7, #0x1ffff               	// #131071
    d330:	adrp	x8, 0 <grub_normal_free_menu-0x268>
    d334:	nop
    d338:	ldr	w28, [x21]
    d33c:	ubfx	x28, x28, #0, #23
    d340:	cbz	x10, d758 <grub_unicode_aglomerate_comb+0x1530>
    d344:	cmp	x10, #0x0
    d348:	ccmp	w28, w7, #0x2, ne  // ne = any
    d34c:	b.ls	d750 <grub_unicode_aglomerate_comb+0x1528>  // b.plast
    d350:	ldr	x0, [x8]
    d354:	mov	x2, x0
    d358:	ldrh	w1, [x0, #2]
    d35c:	ubfx	x1, x1, #5, #9
    d360:	cbz	w1, d3a4 <grub_unicode_aglomerate_comb+0x117c>
    d364:	nop
    d368:	ldrb	w4, [x2]
    d36c:	ldrb	w3, [x2, #1]
    d370:	ldrb	w0, [x2, #2]
    d374:	orr	x3, x4, x3, lsl #8
    d378:	ubfiz	x0, x0, #16, #5
    d37c:	orr	x0, x0, x3
    d380:	add	w1, w1, w0
    d384:	cmp	w28, w0
    d388:	b.cc	d394 <grub_unicode_aglomerate_comb+0x116c>  // b.lo, b.ul, b.last
    d38c:	cmp	w28, w1
    d390:	b.cc	d6c4 <grub_unicode_aglomerate_comb+0x149c>  // b.lo, b.ul, b.last
    d394:	ldrh	w1, [x2, #8]
    d398:	add	x2, x2, #0x6
    d39c:	ubfx	x1, x1, #5, #9
    d3a0:	cbnz	w1, d368 <grub_unicode_aglomerate_comb+0x1140>
    d3a4:	mov	w19, #0x0                   	// #0
    d3a8:	add	x21, x21, #0x20
    d3ac:	cmp	x20, x21
    d3b0:	b.ne	d338 <grub_unicode_aglomerate_comb+0x1110>  // b.any
    d3b4:	mov	x28, x22
    d3b8:	ldr	w21, [sp, #216]
    d3bc:	ldp	x20, x22, [sp, #168]
    d3c0:	ldr	x19, [sp, #784]
    d3c4:	tbnz	w24, #31, d624 <grub_unicode_aglomerate_comb+0x13fc>
    d3c8:	sbfiz	x4, x24, #5, #32
    d3cc:	str	w21, [sp, #216]
    d3d0:	add	x4, x27, x4
    d3d4:	str	x20, [sp, #168]
    d3d8:	mov	x21, x4
    d3dc:	mov	w20, w23
    d3e0:	ldr	x10, [x28, #8]
    d3e4:	mov	w23, w24
    d3e8:	ldr	w24, [x21]
    d3ec:	mov	w5, #0x0                   	// #0
    d3f0:	str	x19, [sp, #784]
    d3f4:	mov	w6, #0x1ffff               	// #131071
    d3f8:	mov	w19, w5
    d3fc:	adrp	x7, 0 <grub_normal_free_menu-0x268>
    d400:	ubfx	x24, x24, #0, #23
    d404:	cbz	x10, d48c <grub_unicode_aglomerate_comb+0x1264>
    d408:	cmp	x10, #0x0
    d40c:	ccmp	w24, w6, #0x2, ne  // ne = any
    d410:	b.ls	d4a8 <grub_unicode_aglomerate_comb+0x1280>  // b.plast
    d414:	ldr	x0, [x7]
    d418:	mov	x2, x0
    d41c:	ldrh	w1, [x0, #2]
    d420:	ubfx	x1, x1, #5, #9
    d424:	cbz	w1, d464 <grub_unicode_aglomerate_comb+0x123c>
    d428:	ldrb	w4, [x2]
    d42c:	ldrb	w3, [x2, #1]
    d430:	ldrb	w0, [x2, #2]
    d434:	orr	x3, x4, x3, lsl #8
    d438:	ubfiz	x0, x0, #16, #5
    d43c:	orr	x0, x0, x3
    d440:	add	w1, w1, w0
    d444:	cmp	w24, w0
    d448:	b.cc	d454 <grub_unicode_aglomerate_comb+0x122c>  // b.lo, b.ul, b.last
    d44c:	cmp	w24, w1
    d450:	b.cc	d5b4 <grub_unicode_aglomerate_comb+0x138c>  // b.lo, b.ul, b.last
    d454:	ldrh	w1, [x2, #8]
    d458:	add	x2, x2, #0x6
    d45c:	ubfx	x1, x1, #5, #9
    d460:	cbnz	w1, d428 <grub_unicode_aglomerate_comb+0x1200>
    d464:	sub	w0, w23, #0x1
    d468:	mov	w19, #0x0                   	// #0
    d46c:	cbz	w23, d614 <grub_unicode_aglomerate_comb+0x13ec>
    d470:	sub	x21, x21, #0x20
    d474:	cmp	w23, w20
    d478:	b.ls	d614 <grub_unicode_aglomerate_comb+0x13ec>  // b.plast
    d47c:	ldr	w24, [x21]
    d480:	mov	w23, w0
    d484:	ubfx	x24, x24, #0, #23
    d488:	cbnz	x10, d408 <grub_unicode_aglomerate_comb+0x11e0>
    d48c:	bl	ba20 <grub_context_fini+0x130>
    d490:	ldr	x10, [x28, #8]
    d494:	mov	w6, #0x1ffff               	// #131071
    d498:	adrp	x7, 0 <grub_normal_free_menu-0x268>
    d49c:	cmp	x10, #0x0
    d4a0:	ccmp	w24, w6, #0x2, ne  // ne = any
    d4a4:	b.hi	d414 <grub_unicode_aglomerate_comb+0x11ec>  // b.pmore
    d4a8:	ldrb	w0, [x10, w24, uxtw]
    d4ac:	b	d5bc <grub_unicode_aglomerate_comb+0x1394>
    d4b0:	ldr	x2, [sp, #112]
    d4b4:	cmp	x2, #0x0
    d4b8:	ccmp	w1, #0x0, #0x4, ne  // ne = any
    d4bc:	b.eq	d894 <grub_unicode_aglomerate_comb+0x166c>  // b.none
    d4c0:	add	x24, x27, x0, lsl #5
    d4c4:	b	cfec <grub_unicode_aglomerate_comb+0xdc4>
    d4c8:	cbz	x19, d5a8 <grub_unicode_aglomerate_comb+0x1380>
    d4cc:	ubfiz	x1, x13, #5, #32
    d4d0:	add	x1, x27, x1
    d4d4:	ldr	x0, [x10, #16]
    d4d8:	ldr	x1, [x1, #16]
    d4dc:	lsl	x0, x0, #2
    d4e0:	lsl	x1, x1, #2
    d4e4:	ldrh	w0, [x19, x0]
    d4e8:	ldrh	w8, [x19, x1]
    d4ec:	ubfx	x0, x0, #1, #15
    d4f0:	ubfx	x8, x8, #1, #15
    d4f4:	sub	w1, w3, w13
    d4f8:	add	w8, w8, w0
    d4fc:	add	w11, w13, #0x1
    d500:	and	w8, w8, #0xffff
    d504:	add	w3, w3, w13
    d508:	add	w11, w11, w1, lsr #1
    d50c:	mov	w2, w13
    d510:	mov	w18, w15
    d514:	nop
    d518:	sub	w0, w3, w2
    d51c:	ubfiz	x1, x2, #5, #32
    d520:	add	x1, x27, x1
    d524:	add	w2, w2, #0x1
    d528:	add	x0, x27, x0, lsl #5
    d52c:	cmp	w11, w2
    d530:	ldp	x6, x7, [x1]
    d534:	stp	x6, x7, [sp, #240]
    d538:	ldp	x4, x5, [x0]
    d53c:	stp	x4, x5, [x1]
    d540:	ldp	x14, x15, [x0, #16]
    d544:	ldp	x4, x5, [x1, #16]
    d548:	stp	x14, x15, [x1, #16]
    d54c:	stp	x6, x7, [x0]
    d550:	stp	x4, x5, [x0, #16]
    d554:	stp	x4, x5, [sp, #256]
    d558:	cbz	x19, d59c <grub_unicode_aglomerate_comb+0x1374>
    d55c:	ldr	x4, [x1, #16]
    d560:	ldr	x1, [x0, #16]
    d564:	lsl	x4, x4, #2
    d568:	lsl	x1, x1, #2
    d56c:	ldrh	w0, [x19, x4]
    d570:	mov	w5, w0
    d574:	ubfx	x0, x0, #1, #15
    d578:	sub	w0, w8, w0
    d57c:	bfi	w5, w0, #1, #15
    d580:	strh	w5, [x19, x4]
    d584:	ldrh	w0, [x19, x1]
    d588:	mov	w4, w0
    d58c:	ubfx	x0, x0, #1, #15
    d590:	sub	w0, w8, w0
    d594:	bfi	w4, w0, #1, #15
    d598:	strh	w4, [x19, x1]
    d59c:	b.ne	d518 <grub_unicode_aglomerate_comb+0x12f0>  // b.any
    d5a0:	mov	w15, w18
    d5a4:	b	d1c8 <grub_unicode_aglomerate_comb+0xfa0>
    d5a8:	mov	w0, #0x0                   	// #0
    d5ac:	mov	w8, #0x0                   	// #0
    d5b0:	b	d4f4 <grub_unicode_aglomerate_comb+0x12cc>
    d5b4:	ldrb	w0, [x2, #5]
    d5b8:	ubfx	x0, x0, #4, #3
    d5bc:	ldrb	w1, [x21, #4]
    d5c0:	and	w2, w1, #0x1f
    d5c4:	tbnz	w1, #4, d5e4 <grub_unicode_aglomerate_comb+0x13bc>
    d5c8:	sub	w3, w0, #0x2
    d5cc:	cmp	w3, #0x1
    d5d0:	b.hi	d5e4 <grub_unicode_aglomerate_comb+0x13bc>  // b.pmore
    d5d4:	cbz	w19, d79c <grub_unicode_aglomerate_comb+0x1574>
    d5d8:	orr	w2, w2, #0x4
    d5dc:	bfxil	w1, w2, #0, #5
    d5e0:	strb	w1, [x21, #4]
    d5e4:	sub	w1, w0, #0x3
    d5e8:	and	w2, w0, #0xfffffffd
    d5ec:	cmp	w1, #0x1
    d5f0:	cset	w1, ls  // ls = plast
    d5f4:	cmp	w0, #0x1
    d5f8:	csinc	w0, w1, wzr, ne  // ne = any
    d5fc:	cmp	w2, #0x0
    d600:	csel	w19, w19, wzr, ne  // ne = any
    d604:	cmp	w0, #0x0
    d608:	csinc	w19, w19, wzr, eq  // eq = none
    d60c:	sub	w0, w23, #0x1
    d610:	cbnz	w23, d470 <grub_unicode_aglomerate_comb+0x1248>
    d614:	mov	w23, w20
    d618:	ldr	w21, [sp, #216]
    d61c:	ldr	x20, [sp, #168]
    d620:	ldr	x19, [sp, #784]
    d624:	sub	w13, w26, w23
    d628:	ldr	x0, [sp, #104]
    d62c:	lsl	x24, x13, #5
    d630:	mov	x2, x24
    d634:	add	x1, x27, x0, lsl #5
    d638:	mov	x0, x25
    d63c:	bl	0 <grub_memmove>
    d640:	add	x25, x25, x24
    d644:	ldr	w0, [sp, #220]
    d648:	cmp	w0, w26
    d64c:	b.eq	d680 <grub_unicode_aglomerate_comb+0x1458>  // b.none
    d650:	ldr	w0, [sp, #164]
    d654:	add	x24, x25, #0x20
    d658:	cbnz	w0, d8d0 <grub_unicode_aglomerate_comb+0x16a8>
    d65c:	mov	x0, x25
    d660:	mov	w1, #0x0                   	// #0
    d664:	mov	x2, #0x20                  	// #32
    d668:	bl	0 <grub_memset>
    d66c:	ldr	w0, [x25]
    d670:	mov	w1, #0xa                   	// #10
    d674:	bfxil	w0, w1, #0, #23
    d678:	str	w0, [x25]
    d67c:	mov	x25, x24
    d680:	ldp	x1, x0, [sp, #136]
    d684:	cmp	x0, x1
    d688:	cinc	w23, w26, eq  // eq = none
    d68c:	cbz	x19, d038 <grub_unicode_aglomerate_comb+0xe10>
    d690:	cmp	x22, w23, uxtw
    d694:	mov	w0, w23
    d698:	b.eq	d038 <grub_unicode_aglomerate_comb+0xe10>  // b.none
    d69c:	add	x24, x27, x0, lsl #5
    d6a0:	ldr	x0, [x24, #16]
    d6a4:	lsl	x0, x0, #2
    d6a8:	add	x2, x19, x0
    d6ac:	ldrh	w1, [x19, x0]
    d6b0:	and	w1, w1, #0x1
    d6b4:	strh	w1, [x19, x0]
    d6b8:	ldrh	w0, [sp, #160]
    d6bc:	strh	w0, [x2, #2]
    d6c0:	b	d038 <grub_unicode_aglomerate_comb+0xe10>
    d6c4:	ldrb	w0, [x2, #5]
    d6c8:	ubfx	x0, x0, #4, #3
    d6cc:	ldrb	w1, [x21, #4]
    d6d0:	and	w2, w1, #0x1f
    d6d4:	tbnz	w1, #3, d6f4 <grub_unicode_aglomerate_comb+0x14cc>
    d6d8:	and	w3, w0, #0xfffffffd
    d6dc:	cmp	w3, #0x1
    d6e0:	b.ne	d6f4 <grub_unicode_aglomerate_comb+0x14cc>  // b.any
    d6e4:	cbz	w19, d788 <grub_unicode_aglomerate_comb+0x1560>
    d6e8:	orr	w2, w2, #0x2
    d6ec:	bfxil	w1, w2, #0, #5
    d6f0:	strb	w1, [x21, #4]
    d6f4:	cmp	w0, #0x1
    d6f8:	b.ls	d3a4 <grub_unicode_aglomerate_comb+0x117c>  // b.plast
    d6fc:	sub	w0, w0, #0x2
    d700:	cmp	w0, #0x2
    d704:	csinc	w19, w19, wzr, hi  // hi = pmore
    d708:	b	d3a8 <grub_unicode_aglomerate_comb+0x1180>
    d70c:	ldrb	w1, [x2, #5]
    d710:	ubfx	x1, x1, #3, #1
    d714:	ldrb	w0, [x20, #4]
    d718:	and	w2, w0, #0x1f
    d71c:	cbz	w1, d2b0 <grub_unicode_aglomerate_comb+0x1088>
    d720:	ldrb	w1, [x20, #5]
    d724:	tst	x1, #0x3f
    d728:	b.eq	d2ec <grub_unicode_aglomerate_comb+0x10c4>  // b.none
    d72c:	orr	w1, w2, #0x1
    d730:	tst	w2, #0x1e
    d734:	bfxil	w0, w1, #0, #5
    d738:	strb	w0, [x20, #4]
    d73c:	b.ne	d2c8 <grub_unicode_aglomerate_comb+0x10a0>  // b.any
    d740:	b	d2ec <grub_unicode_aglomerate_comb+0x10c4>
    d744:	ldrsb	w1, [x14, w22, uxtw]
    d748:	lsr	w1, w1, #31
    d74c:	b	d714 <grub_unicode_aglomerate_comb+0x14ec>
    d750:	ldrb	w0, [x10, w28, uxtw]
    d754:	b	d6cc <grub_unicode_aglomerate_comb+0x14a4>
    d758:	bl	ba20 <grub_context_fini+0x130>
    d75c:	adrp	x8, 0 <grub_normal_free_menu-0x268>
    d760:	mov	w7, #0x1ffff               	// #131071
    d764:	ldr	x10, [x22, #8]
    d768:	b	d344 <grub_unicode_aglomerate_comb+0x111c>
    d76c:	bl	b908 <grub_context_fini+0x18>
    d770:	adrp	x8, 0 <grub_normal_free_menu-0x268>
    d774:	mov	w9, #0x14                  	// #20
    d778:	mov	w10, #0xa                   	// #10
    d77c:	mov	w7, #0x1ffff               	// #131071
    d780:	ldr	x14, [x21]
    d784:	b	d24c <grub_unicode_aglomerate_comb+0x1024>
    d788:	mov	w3, #0x1d                  	// #29
    d78c:	and	w2, w2, w3
    d790:	bfxil	w1, w2, #0, #5
    d794:	strb	w1, [x21, #4]
    d798:	b	d6f4 <grub_unicode_aglomerate_comb+0x14cc>
    d79c:	mov	w3, #0x1b                  	// #27
    d7a0:	and	w2, w2, w3
    d7a4:	bfxil	w1, w2, #0, #5
    d7a8:	strb	w1, [x21, #4]
    d7ac:	b	d5e4 <grub_unicode_aglomerate_comb+0x13bc>
    d7b0:	ldr	w4, [sp, #128]
    d7b4:	ldr	x1, [sp, #224]
    d7b8:	cmp	w4, #0x0
    d7bc:	ldr	x4, [sp, #120]
    d7c0:	ldrh	w0, [x1]
    d7c4:	ccmp	x4, x20, #0x0, ne  // ne = any
    d7c8:	mov	x4, x1
    d7cc:	strh	w3, [x1, #2]
    d7d0:	cset	w1, lt  // lt = tstop
    d7d4:	bfi	w0, w2, #1, #15
    d7d8:	orr	w28, w28, w1
    d7dc:	strh	w0, [x4]
    d7e0:	orr	w0, w0, #0x1
    d7e4:	strb	w0, [x4]
    d7e8:	cbz	w28, d038 <grub_unicode_aglomerate_comb+0xe10>
    d7ec:	ldr	w0, [sp, #160]
    d7f0:	mov	w15, w21
    d7f4:	cmp	w15, w23
    d7f8:	sub	w24, w15, #0x1
    d7fc:	add	w0, w0, #0x1
    d800:	str	w0, [sp, #160]
    d804:	sxtw	x0, w15
    d808:	str	x0, [sp, #144]
    d80c:	mov	x20, #0x0                   	// #0
    d810:	b.hi	d0c8 <grub_unicode_aglomerate_comb+0xea0>  // b.pmore
    d814:	mov	w0, w23
    d818:	str	x0, [sp, #104]
    d81c:	mov	w26, w15
    d820:	b	d624 <grub_unicode_aglomerate_comb+0x13fc>
    d824:	ldr	w0, [sp, #128]
    d828:	ldr	x1, [sp, #120]
    d82c:	cmp	w0, #0x0
    d830:	mov	x0, #0x0                   	// #0
    d834:	ccmp	x1, x20, #0x0, ne  // ne = any
    d838:	cset	w1, lt  // lt = tstop
    d83c:	orr	w28, w28, w1
    d840:	b	d018 <grub_unicode_aglomerate_comb+0xdf0>
    d844:	ldr	w1, [sp, #792]
    d848:	ldr	w3, [sp, #160]
    d84c:	orr	w1, w1, w23
    d850:	orr	w26, w1, w3
    d854:	ldr	x1, [sp, #200]
    d858:	cmp	w26, #0x0
    d85c:	ccmp	x1, #0x0, #0x4, eq  // eq = none
    d860:	b.eq	d8c0 <grub_unicode_aglomerate_comb+0x1698>  // b.none
    d864:	sub	x20, x20, x1
    d868:	ldr	x1, [sp, #120]
    d86c:	cmp	x1, x20
    d870:	b.ls	da74 <grub_unicode_aglomerate_comb+0x184c>  // b.plast
    d874:	mov	w0, #0x1                   	// #1
    d878:	mov	w15, #0x0                   	// #0
    d87c:	mov	w26, w15
    d880:	str	xzr, [sp, #144]
    d884:	str	w0, [sp, #160]
    d888:	mov	w0, w23
    d88c:	str	x0, [sp, #104]
    d890:	b	d624 <grub_unicode_aglomerate_comb+0x13fc>
    d894:	ldr	w1, [sp, #128]
    d898:	cmp	w1, #0x0
    d89c:	ldr	x1, [sp, #120]
    d8a0:	ccmp	x1, x20, #0x0, ne  // ne = any
    d8a4:	cset	w1, lt  // lt = tstop
    d8a8:	cmp	x0, x22
    d8ac:	orr	w28, w28, w1
    d8b0:	b.eq	d7e8 <grub_unicode_aglomerate_comb+0x15c0>  // b.none
    d8b4:	add	x24, x27, x0, lsl #5
    d8b8:	mov	x0, #0x0                   	// #0
    d8bc:	b	d018 <grub_unicode_aglomerate_comb+0xdf0>
    d8c0:	mov	x20, x0
    d8c4:	mov	w15, w21
    d8c8:	str	w2, [sp, #160]
    d8cc:	b	d0b4 <grub_unicode_aglomerate_comb+0xe8c>
    d8d0:	mov	x0, x25
    d8d4:	mov	x2, #0x20                  	// #32
    d8d8:	mov	w1, #0x0                   	// #0
    d8dc:	bl	0 <grub_memset>
    d8e0:	ldr	w1, [x25]
    d8e4:	mov	x0, x25
    d8e8:	ldr	w2, [sp, #164]
    d8ec:	mov	x25, x24
    d8f0:	bfxil	w1, w2, #0, #23
    d8f4:	str	w1, [x0], #64
    d8f8:	mov	x24, x0
    d8fc:	b	d65c <grub_unicode_aglomerate_comb+0x1434>
    d900:	cbz	w20, ca28 <grub_unicode_aglomerate_comb+0x800>
    d904:	sub	w2, w20, #0x1
    d908:	add	x23, x24, #0x20
    d90c:	mov	w1, #0x20                  	// #32
    d910:	mov	x0, x24
    d914:	umaddl	x2, w2, w1, x23
    d918:	ldrb	w1, [x0, #5]
    d91c:	add	x0, x0, #0x20
    d920:	and	w1, w1, #0xffffffc0
    d924:	sturb	w1, [x0, #-27]
    d928:	cmp	x2, x0
    d92c:	b.ne	d918 <grub_unicode_aglomerate_comb+0x16f0>  // b.any
    d930:	ldr	x0, [sp, #120]
    d934:	cmp	x0, #0x0
    d938:	cset	w1, gt
    d93c:	str	w1, [sp, #128]
    d940:	cmp	w1, #0x0
    d944:	ldr	x1, [sp, #200]
    d948:	ccmp	x0, x1, #0x2, ne  // ne = any
    d94c:	b.hi	cf58 <grub_unicode_aglomerate_comb+0xd30>  // b.pmore
    d950:	ldr	x21, [sp, #208]
    d954:	add	x0, x21, #0x20
    d958:	mov	x24, x0
    d95c:	ldr	w0, [sp, #164]
    d960:	cbnz	w0, da94 <grub_unicode_aglomerate_comb+0x186c>
    d964:	mov	x2, #0x20                  	// #32
    d968:	mov	w1, #0x0                   	// #0
    d96c:	mov	x0, x21
    d970:	bl	0 <grub_memset>
    d974:	ldr	w0, [x21]
    d978:	mov	w1, #0xa                   	// #10
    d97c:	str	xzr, [sp, #200]
    d980:	mov	x2, #0x0                   	// #0
    d984:	bfxil	w0, w1, #0, #23
    d988:	str	w0, [x21]
    d98c:	b	cf64 <grub_unicode_aglomerate_comb+0xd3c>
    d990:	add	w3, w3, #0x1
    d994:	bfxil	w2, w3, #0, #6
    d998:	strb	w2, [x1, #5]
    d99c:	b	cee8 <grub_unicode_aglomerate_comb+0xcc0>
    d9a0:	cbnz	w25, da18 <grub_unicode_aglomerate_comb+0x17f0>
    d9a4:	cbz	w28, da88 <grub_unicode_aglomerate_comb+0x1860>
    d9a8:	sub	w1, w28, #0x1
    d9ac:	add	x2, sp, #0x110
    d9b0:	mov	x28, x1
    d9b4:	add	x22, x22, x0, lsl #2
    d9b8:	ldr	w20, [x2, x1, lsl #2]
    d9bc:	add	x2, sp, #0x210
    d9c0:	ldr	w26, [x2, x1, lsl #2]
    d9c4:	b	c7d0 <grub_unicode_aglomerate_comb+0x5a8>
    d9c8:	and	w4, w20, #0xfffffffe
    d9cc:	add	w4, w4, #0x2
    d9d0:	cmp	w4, #0x3d
    d9d4:	b.hi	cb74 <grub_unicode_aglomerate_comb+0x94c>  // b.pmore
    d9d8:	mov	w2, w28
    d9dc:	add	x6, sp, #0x110
    d9e0:	add	w28, w28, #0x1
    d9e4:	add	x22, x22, x0, lsl #2
    d9e8:	str	w20, [x6, x2, lsl #2]
    d9ec:	mov	w20, w4
    d9f0:	add	x4, sp, #0x210
    d9f4:	str	w26, [x4, x2, lsl #2]
    d9f8:	mov	w26, w1
    d9fc:	b	c7d0 <grub_unicode_aglomerate_comb+0x5a8>
    da00:	mov	w25, #0x1                   	// #1
    da04:	b	c628 <grub_unicode_aglomerate_comb+0x400>
    da08:	ldr	w0, [x6, #4]
    da0c:	bfi	w0, w21, #14, #5
    da10:	str	w0, [x6, #4]
    da14:	b	cd88 <grub_unicode_aglomerate_comb+0xb60>
    da18:	sub	w25, w25, #0x1
    da1c:	add	x22, x22, x0, lsl #2
    da20:	b	c7d0 <grub_unicode_aglomerate_comb+0x5a8>
    da24:	mov	w2, w28
    da28:	add	x4, sp, #0x210
    da2c:	add	w28, w28, #0x1
    da30:	add	x22, x22, x0, lsl #2
    da34:	str	w26, [x4, x2, lsl #2]
    da38:	add	x4, sp, #0x110
    da3c:	mov	w26, #0x1                   	// #1
    da40:	mov	w21, w26
    da44:	str	w20, [x4, x2, lsl #2]
    da48:	mov	w20, w1
    da4c:	b	c7d0 <grub_unicode_aglomerate_comb+0x5a8>
    da50:	mov	w1, w28
    da54:	add	x4, sp, #0x110
    da58:	add	w28, w28, #0x1
    da5c:	add	x22, x22, x0, lsl #2
    da60:	str	w20, [x4, x1, lsl #2]
    da64:	mov	w20, w2
    da68:	add	x2, sp, #0x210
    da6c:	str	w26, [x2, x1, lsl #2]
    da70:	b	c7d0 <grub_unicode_aglomerate_comb+0x5a8>
    da74:	mov	x20, x0
    da78:	mov	w15, w21
    da7c:	mov	w0, #0x1                   	// #1
    da80:	str	w0, [sp, #160]
    da84:	b	d0b4 <grub_unicode_aglomerate_comb+0xe8c>
    da88:	mov	w25, w28
    da8c:	add	x22, x22, x0, lsl #2
    da90:	b	c7d0 <grub_unicode_aglomerate_comb+0x5a8>
    da94:	mov	x0, x21
    da98:	mov	x2, #0x20                  	// #32
    da9c:	mov	w1, #0x0                   	// #0
    daa0:	bl	0 <grub_memset>
    daa4:	mov	x0, x21
    daa8:	ldr	w2, [sp, #164]
    daac:	mov	x21, x24
    dab0:	ldr	w1, [x0]
    dab4:	bfxil	w1, w2, #0, #23
    dab8:	str	w1, [x0], #64
    dabc:	mov	x24, x0
    dac0:	b	d964 <grub_unicode_aglomerate_comb+0x173c>
    dac4:	mov	w26, w15
    dac8:	b	d1f0 <grub_unicode_aglomerate_comb+0xfc8>
    dacc:	mov	x19, #0xffffffffffffffff    	// #-1
    dad0:	b	d068 <grub_unicode_aglomerate_comb+0xe40>
    dad4:	nop
	...

000000000000dae8 <grub_bidi_logical_to_visual>:
    dae8:	sub	sp, sp, #0x90
    daec:	stp	x29, x30, [sp, #32]
    daf0:	add	x29, sp, #0x20
    daf4:	stp	x19, x20, [sp, #48]
    daf8:	mov	x20, x1
    dafc:	add	x1, x1, x1, lsl #1
    db00:	mov	x19, x2
    db04:	stp	x21, x22, [sp, #64]
    db08:	lsl	x1, x1, #5
    db0c:	mov	x21, x3
    db10:	mov	x22, x4
    db14:	stp	x23, x24, [sp, #80]
    db18:	mov	x23, x5
    db1c:	mov	w24, w7
    db20:	stp	x27, x28, [sp, #112]
    db24:	mov	x27, x0
    db28:	add	x0, x1, #0xc0
    db2c:	stp	x2, x6, [sp, #128]
    db30:	bl	0 <grub_malloc>
    db34:	str	x0, [x19]
    db38:	cbz	x0, dcdc <grub_bidi_logical_to_visual+0x1f4>
    db3c:	stp	x25, x26, [sp, #96]
    db40:	add	x25, x27, x20, lsl #2
    db44:	cmp	x27, x25
    db48:	b.hi	dcd0 <grub_bidi_logical_to_visual+0x1e8>  // b.pmore
    db4c:	mov	x28, x0
    db50:	mov	x19, x27
    db54:	mov	w26, #0x200e                	// #8206
    db58:	ldr	x6, [sp, #136]
    db5c:	b	db6c <grub_bidi_logical_to_visual+0x84>
    db60:	add	x19, x19, #0x4
    db64:	cmp	x25, x19
    db68:	b.cc	dc58 <grub_bidi_logical_to_visual+0x170>  // b.lo, b.ul, b.last
    db6c:	cmp	x25, x19
    db70:	b.eq	db80 <grub_bidi_logical_to_visual+0x98>  // b.none
    db74:	ldr	w1, [x19]
    db78:	cmp	w1, #0xa
    db7c:	b.ne	db60 <grub_bidi_logical_to_visual+0x78>  // b.any
    db80:	ldr	x0, [sp, #144]
    db84:	str	x0, [sp]
    db88:	ldr	w0, [sp, #152]
    db8c:	sub	x1, x19, x27
    db90:	str	w0, [sp, #8]
    db94:	mov	x3, x21
    db98:	str	x20, [sp, #16]
    db9c:	asr	x1, x1, #2
    dba0:	mov	w7, w24
    dba4:	mov	x5, x23
    dba8:	mov	x4, x22
    dbac:	mov	x2, x28
    dbb0:	mov	x0, x27
    dbb4:	bl	c550 <grub_unicode_aglomerate_comb+0x328>
    dbb8:	mov	x3, x0
    dbbc:	cmp	x0, #0x0
    dbc0:	b.lt	dc98 <grub_bidi_logical_to_visual+0x1b0>  // b.tstop
    dbc4:	b.eq	dc1c <grub_bidi_logical_to_visual+0x134>  // b.none
    dbc8:	add	x3, x28, x0, lsl #5
    dbcc:	mov	x6, x28
    dbd0:	mov	x1, #0x0                   	// #0
    dbd4:	nop
    dbd8:	ldrh	w0, [x6, #6]
    dbdc:	add	x2, x28, x1, lsl #5
    dbe0:	tst	w0, #0x7f8
    dbe4:	b.ne	dbf8 <grub_bidi_logical_to_visual+0x110>  // b.any
    dbe8:	ldr	w0, [x6]
    dbec:	and	w0, w0, #0x7ffffe
    dbf0:	cmp	w0, w26
    dbf4:	b.eq	dc0c <grub_bidi_logical_to_visual+0x124>  // b.none
    dbf8:	ldp	x4, x5, [x6]
    dbfc:	stp	x4, x5, [x2]
    dc00:	add	x1, x1, #0x1
    dc04:	ldp	x4, x5, [x6, #16]
    dc08:	stp	x4, x5, [x2, #16]
    dc0c:	add	x6, x6, #0x20
    dc10:	cmp	x3, x6
    dc14:	b.ne	dbd8 <grub_bidi_logical_to_visual+0xf0>  // b.any
    dc18:	add	x28, x28, x1, lsl #5
    dc1c:	cmp	x25, x19
    dc20:	add	x19, x19, #0x4
    dc24:	b.eq	dc8c <grub_bidi_logical_to_visual+0x1a4>  // b.none
    dc28:	mov	x0, x28
    dc2c:	mov	w1, #0x0                   	// #0
    dc30:	mov	x2, #0x20                  	// #32
    dc34:	bl	0 <grub_memset>
    dc38:	ldr	w0, [x28]
    dc3c:	mov	w1, #0xa                   	// #10
    dc40:	mov	x27, x19
    dc44:	cmp	x25, x19
    dc48:	mov	x6, #0x0                   	// #0
    dc4c:	bfxil	w0, w1, #0, #23
    dc50:	str	w0, [x28], #32
    dc54:	b.cs	db6c <grub_bidi_logical_to_visual+0x84>  // b.hs, b.nlast
    dc58:	ldr	x0, [sp, #128]
    dc5c:	ldp	x25, x26, [sp, #96]
    dc60:	ldr	x0, [x0]
    dc64:	sub	x28, x28, x0
    dc68:	asr	x3, x28, #5
    dc6c:	mov	x0, x3
    dc70:	ldp	x29, x30, [sp, #32]
    dc74:	ldp	x19, x20, [sp, #48]
    dc78:	ldp	x21, x22, [sp, #64]
    dc7c:	ldp	x23, x24, [sp, #80]
    dc80:	ldp	x27, x28, [sp, #112]
    dc84:	add	sp, sp, #0x90
    dc88:	ret
    dc8c:	mov	x27, x25
    dc90:	mov	x6, #0x0                   	// #0
    dc94:	b	db64 <grub_bidi_logical_to_visual+0x7c>
    dc98:	ldr	x0, [sp, #128]
    dc9c:	str	x3, [sp, #136]
    dca0:	ldr	x0, [x0]
    dca4:	bl	0 <grub_free>
    dca8:	ldr	x3, [sp, #136]
    dcac:	ldp	x29, x30, [sp, #32]
    dcb0:	mov	x0, x3
    dcb4:	ldp	x19, x20, [sp, #48]
    dcb8:	ldp	x21, x22, [sp, #64]
    dcbc:	ldp	x23, x24, [sp, #80]
    dcc0:	ldp	x25, x26, [sp, #96]
    dcc4:	ldp	x27, x28, [sp, #112]
    dcc8:	add	sp, sp, #0x90
    dccc:	ret
    dcd0:	mov	x3, #0x0                   	// #0
    dcd4:	ldp	x25, x26, [sp, #96]
    dcd8:	b	dc6c <grub_bidi_logical_to_visual+0x184>
    dcdc:	mov	x3, #0xffffffffffffffff    	// #-1
    dce0:	b	dc6c <grub_bidi_logical_to_visual+0x184>
    dce4:	nop

000000000000dce8 <grub_unicode_mirror_code>:
    dce8:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    dcec:	ldr	x4, [x1]
    dcf0:	ldr	w1, [x4]
    dcf4:	cbz	w1, dd20 <grub_unicode_mirror_code+0x38>
    dcf8:	mov	x3, x4
    dcfc:	mov	w2, #0x0                   	// #0
    dd00:	b	dd10 <grub_unicode_mirror_code+0x28>
    dd04:	ldr	w1, [x3, #8]!
    dd08:	add	w2, w2, #0x1
    dd0c:	cbz	w1, dd20 <grub_unicode_mirror_code+0x38>
    dd10:	cmp	w0, w1
    dd14:	b.ne	dd04 <grub_unicode_mirror_code+0x1c>  // b.any
    dd18:	add	x2, x4, w2, sxtw #3
    dd1c:	ldr	w0, [x2, #4]
    dd20:	ret
    dd24:	nop
	...

000000000000dd30 <grub_unicode_shape_code>:
    dd30:	sub	w2, w0, #0x600
    dd34:	and	w1, w1, #0xff
    dd38:	cmp	w2, #0xff
    dd3c:	b.hi	dd8c <grub_unicode_shape_code+0x5c>  // b.pmore
    dd40:	adrp	x2, 0 <grub_normal_free_menu-0x268>
    dd44:	ldr	x3, [x2]
    dd48:	ldr	w2, [x3]
    dd4c:	cbz	w2, dd8c <grub_unicode_shape_code+0x5c>
    dd50:	and	w1, w1, #0x6
    dd54:	b	dd60 <grub_unicode_shape_code+0x30>
    dd58:	ldr	w2, [x3, #20]!
    dd5c:	cbz	w2, dd8c <grub_unicode_shape_code+0x5c>
    dd60:	cmp	w2, w0
    dd64:	b.ne	dd58 <grub_unicode_shape_code+0x28>  // b.any
    dd68:	cmp	w1, #0x4
    dd6c:	b.eq	ddb0 <grub_unicode_shape_code+0x80>  // b.none
    dd70:	b.hi	dd90 <grub_unicode_shape_code+0x60>  // b.pmore
    dd74:	cbz	w1, dda4 <grub_unicode_shape_code+0x74>
    dd78:	cmp	w1, #0x2
    dd7c:	b.ne	dd58 <grub_unicode_shape_code+0x28>  // b.any
    dd80:	ldr	w2, [x3, #16]
    dd84:	cbz	w2, dd58 <grub_unicode_shape_code+0x28>
    dd88:	mov	w0, w2
    dd8c:	ret
    dd90:	cmp	w1, #0x6
    dd94:	b.ne	dd58 <grub_unicode_shape_code+0x28>  // b.any
    dd98:	ldr	w2, [x3, #12]
    dd9c:	cbz	w2, dd58 <grub_unicode_shape_code+0x28>
    dda0:	b	dd88 <grub_unicode_shape_code+0x58>
    dda4:	ldr	w2, [x3, #4]
    dda8:	cbz	w2, dd58 <grub_unicode_shape_code+0x28>
    ddac:	b	dd88 <grub_unicode_shape_code+0x58>
    ddb0:	ldr	w2, [x3, #8]
    ddb4:	cbz	w2, dd58 <grub_unicode_shape_code+0x28>
    ddb8:	b	dd88 <grub_unicode_shape_code+0x58>
    ddbc:	nop
	...

000000000000ddc8 <grub_unicode_get_comb_start>:
    ddc8:	stp	x29, x30, [sp, #-48]!
    ddcc:	cmp	x1, x0
    ddd0:	mov	x29, sp
    ddd4:	stp	x19, x20, [sp, #16]
    ddd8:	mov	x20, x0
    dddc:	b.cc	de3c <grub_unicode_get_comb_start+0x74>  // b.lo, b.ul, b.last
    dde0:	mov	x19, x1
    dde4:	stp	x21, x22, [sp, #32]
    dde8:	mov	w21, #0xff00                	// #65280
    ddec:	mov	w22, #0xffff0200            	// #-65024
    ddf0:	movk	w21, #0xfff1, lsl #16
    ddf4:	ldr	w0, [x19]
    ddf8:	add	w1, w0, w22
    ddfc:	add	w2, w0, w21
    de00:	cmp	w1, #0xf
    de04:	b.ls	de2c <grub_unicode_get_comb_start+0x64>  // b.plast
    de08:	cmp	w2, #0xef
    de0c:	b.ls	de2c <grub_unicode_get_comb_start+0x64>  // b.plast
    de10:	bl	c088 <grub_unicode_get_comb_type>
    de14:	cbnz	w0, de2c <grub_unicode_get_comb_start+0x64>
    de18:	mov	x0, x19
    de1c:	ldp	x19, x20, [sp, #16]
    de20:	ldp	x21, x22, [sp, #32]
    de24:	ldp	x29, x30, [sp], #48
    de28:	ret
    de2c:	sub	x19, x19, #0x4
    de30:	cmp	x20, x19
    de34:	b.ls	ddf4 <grub_unicode_get_comb_start+0x2c>  // b.plast
    de38:	ldp	x21, x22, [sp, #32]
    de3c:	mov	x19, x20
    de40:	mov	x0, x19
    de44:	ldp	x19, x20, [sp, #16]
    de48:	ldp	x29, x30, [sp], #48
    de4c:	ret

000000000000de50 <grub_unicode_get_comb_end>:
    de50:	stp	x29, x30, [sp, #-48]!
    de54:	cmp	x1, x0
    de58:	mov	x29, sp
    de5c:	stp	x19, x20, [sp, #16]
    de60:	mov	x20, x0
    de64:	b.cs	dec4 <grub_unicode_get_comb_end+0x74>  // b.hs, b.nlast
    de68:	mov	x19, x1
    de6c:	stp	x21, x22, [sp, #32]
    de70:	mov	w21, #0xff00                	// #65280
    de74:	mov	w22, #0xffff0200            	// #-65024
    de78:	movk	w21, #0xfff1, lsl #16
    de7c:	ldr	w0, [x19]
    de80:	add	w1, w0, w22
    de84:	add	w2, w0, w21
    de88:	cmp	w1, #0xf
    de8c:	b.ls	deb4 <grub_unicode_get_comb_end+0x64>  // b.plast
    de90:	cmp	w2, #0xef
    de94:	b.ls	deb4 <grub_unicode_get_comb_end+0x64>  // b.plast
    de98:	bl	c088 <grub_unicode_get_comb_type>
    de9c:	cbnz	w0, deb4 <grub_unicode_get_comb_end+0x64>
    dea0:	mov	x0, x19
    dea4:	ldp	x19, x20, [sp, #16]
    dea8:	ldp	x21, x22, [sp, #32]
    deac:	ldp	x29, x30, [sp], #48
    deb0:	ret
    deb4:	add	x19, x19, #0x4
    deb8:	cmp	x20, x19
    debc:	b.hi	de7c <grub_unicode_get_comb_end+0x2c>  // b.pmore
    dec0:	ldp	x21, x22, [sp, #32]
    dec4:	mov	x19, x20
    dec8:	mov	x0, x19
    decc:	ldp	x19, x20, [sp, #16]
    ded0:	ldp	x29, x30, [sp], #48
    ded4:	ret

000000000000ded8 <grub_file_getline>:
    ded8:	stp	x29, x30, [sp, #-80]!
    dedc:	mov	x29, sp
    dee0:	stp	x21, x22, [sp, #32]
    dee4:	str	x23, [sp, #48]
    dee8:	mov	x23, x0
    deec:	mov	x0, #0x40                  	// #64
    def0:	bl	0 <grub_malloc>
    def4:	mov	x21, x0
    def8:	cbz	x0, df74 <grub_file_getline+0x9c>
    defc:	mov	x22, #0x40                  	// #64
    df00:	stp	x19, x20, [sp, #16]
    df04:	mov	x19, #0x0                   	// #0
    df08:	add	x1, sp, #0x4f
    df0c:	mov	x0, x23
    df10:	mov	x2, #0x1                   	// #1
    df14:	add	x20, x19, #0x1
    df18:	bl	0 <grub_file_read>
    df1c:	cmp	x0, #0x1
    df20:	b.ne	df68 <grub_file_getline+0x90>  // b.any
    df24:	ldrb	w1, [sp, #79]
    df28:	cmp	w1, #0xd
    df2c:	b.eq	df08 <grub_file_getline+0x30>  // b.none
    df30:	cmp	x20, x22
    df34:	b.cs	df88 <grub_file_getline+0xb0>  // b.hs, b.nlast
    df38:	cmp	w1, #0xa
    df3c:	add	x0, x21, x19
    df40:	b.eq	dfb0 <grub_file_getline+0xd8>  // b.none
    df44:	strb	w1, [x21, x19]
    df48:	mov	x19, x20
    df4c:	add	x1, sp, #0x4f
    df50:	mov	x0, x23
    df54:	mov	x2, #0x1                   	// #1
    df58:	add	x20, x19, #0x1
    df5c:	bl	0 <grub_file_read>
    df60:	cmp	x0, #0x1
    df64:	b.eq	df24 <grub_file_getline+0x4c>  // b.none
    df68:	strb	wzr, [x21, x19]
    df6c:	cbz	x19, dfcc <grub_file_getline+0xf4>
    df70:	ldp	x19, x20, [sp, #16]
    df74:	mov	x0, x21
    df78:	ldp	x21, x22, [sp, #32]
    df7c:	ldr	x23, [sp, #48]
    df80:	ldp	x29, x30, [sp], #80
    df84:	ret
    df88:	lsl	x22, x22, #1
    df8c:	mov	x0, x21
    df90:	mov	x1, x22
    df94:	bl	0 <grub_realloc>
    df98:	cbz	x0, dfcc <grub_file_getline+0xf4>
    df9c:	ldrb	w1, [sp, #79]
    dfa0:	mov	x21, x0
    dfa4:	add	x0, x21, x19
    dfa8:	cmp	w1, #0xa
    dfac:	b.ne	df44 <grub_file_getline+0x6c>  // b.any
    dfb0:	strb	wzr, [x0]
    dfb4:	mov	x0, x21
    dfb8:	ldp	x19, x20, [sp, #16]
    dfbc:	ldp	x21, x22, [sp, #32]
    dfc0:	ldr	x23, [sp, #48]
    dfc4:	ldp	x29, x30, [sp], #80
    dfc8:	ret
    dfcc:	mov	x0, x21
    dfd0:	mov	x21, #0x0                   	// #0
    dfd4:	bl	0 <grub_free>
    dfd8:	mov	x0, x21
    dfdc:	ldp	x19, x20, [sp, #16]
    dfe0:	ldp	x21, x22, [sp, #32]
    dfe4:	ldr	x23, [sp, #48]
    dfe8:	ldp	x29, x30, [sp], #80
    dfec:	ret

000000000000dff0 <grub_normal_parse_line>:
    dff0:	stp	x29, x30, [sp, #-32]!
    dff4:	mov	x29, sp
    dff8:	bl	e868 <grub_script_parse>
    dffc:	cbz	x0, e020 <grub_normal_parse_line+0x30>
    e000:	str	x19, [sp, #16]
    e004:	mov	x19, x0
    e008:	bl	108a8 <grub_script_execute>
    e00c:	ldr	w0, [x19]
    e010:	cbz	w0, e034 <grub_normal_parse_line+0x44>
    e014:	sub	w0, w0, #0x1
    e018:	str	w0, [x19]
    e01c:	ldr	x19, [sp, #16]
    e020:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    e024:	ldp	x29, x30, [sp], #32
    e028:	ldr	x0, [x0]
    e02c:	ldr	w0, [x0]
    e030:	ret
    e034:	mov	x0, x19
    e038:	bl	e398 <grub_script_free>
    e03c:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    e040:	ldr	x19, [sp, #16]
    e044:	ldr	x0, [x0]
    e048:	ldp	x29, x30, [sp], #32
    e04c:	ldr	w0, [x0]
    e050:	ret
    e054:	nop
	...

000000000000e060 <grub_script_init>:
    e060:	stp	x29, x30, [sp, #-48]!
    e064:	adrp	x3, 0 <grub_normal_free_menu-0x268>
    e068:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    e06c:	adrp	x2, 0 <grub_normal_free_menu-0x268>
    e070:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    e074:	mov	x29, sp
    e078:	ldr	x3, [x3]
    e07c:	stp	x19, x20, [sp, #16]
    e080:	mov	w4, #0x0                   	// #0
    e084:	ldr	x0, [x0]
    e088:	str	x21, [sp, #32]
    e08c:	ldr	x20, [x2]
    e090:	ldr	x21, [x1]
    e094:	mov	x2, x20
    e098:	mov	x1, x21
    e09c:	bl	0 <grub_register_command_prio>
    e0a0:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    e0a4:	mov	x5, x0
    e0a8:	adrp	x2, 0 <grub_normal_free_menu-0x268>
    e0ac:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    e0b0:	ldr	x19, [x1]
    e0b4:	mov	w4, #0x0                   	// #0
    e0b8:	ldr	x3, [x2]
    e0bc:	mov	x1, x21
    e0c0:	ldr	x0, [x0]
    e0c4:	mov	x2, x20
    e0c8:	str	x5, [x19]
    e0cc:	bl	0 <grub_register_command_prio>
    e0d0:	str	x0, [x19, #8]
    e0d4:	adrp	x5, 0 <grub_normal_free_menu-0x268>
    e0d8:	adrp	x3, 0 <grub_normal_free_menu-0x268>
    e0dc:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    e0e0:	mov	x2, x20
    e0e4:	ldr	x3, [x3]
    e0e8:	mov	w4, #0x0                   	// #0
    e0ec:	ldr	x1, [x1]
    e0f0:	ldr	x0, [x5]
    e0f4:	bl	0 <grub_register_command_prio>
    e0f8:	str	x0, [x19, #16]
    e0fc:	adrp	x5, 0 <grub_normal_free_menu-0x268>
    e100:	adrp	x3, 0 <grub_normal_free_menu-0x268>
    e104:	adrp	x2, 0 <grub_normal_free_menu-0x268>
    e108:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    e10c:	ldr	x3, [x3]
    e110:	mov	w4, #0x0                   	// #0
    e114:	ldr	x2, [x2]
    e118:	ldr	x1, [x1]
    e11c:	ldr	x0, [x5]
    e120:	bl	0 <grub_register_command_prio>
    e124:	str	x0, [x19, #24]
    e128:	adrp	x5, 0 <grub_normal_free_menu-0x268>
    e12c:	adrp	x3, 0 <grub_normal_free_menu-0x268>
    e130:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    e134:	mov	x2, x20
    e138:	ldr	x3, [x3]
    e13c:	mov	w4, #0x0                   	// #0
    e140:	ldr	x1, [x1]
    e144:	ldr	x0, [x5]
    e148:	bl	0 <grub_register_command_prio>
    e14c:	ldr	x21, [sp, #32]
    e150:	str	x0, [x19, #32]
    e154:	ldp	x19, x20, [sp, #16]
    e158:	ldp	x29, x30, [sp], #48
    e15c:	ret
	...

000000000000e1e8 <grub_script_fini>:
    e1e8:	stp	x29, x30, [sp, #-32]!
    e1ec:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    e1f0:	mov	x29, sp
    e1f4:	str	x19, [sp, #16]
    e1f8:	ldr	x19, [x0]
    e1fc:	ldr	x0, [x19]
    e200:	cbz	x0, e208 <grub_script_fini+0x20>
    e204:	bl	0 <grub_unregister_command>
    e208:	ldr	x0, [x19, #8]
    e20c:	str	xzr, [x19]
    e210:	cbz	x0, e218 <grub_script_fini+0x30>
    e214:	bl	0 <grub_unregister_command>
    e218:	ldr	x0, [x19, #16]
    e21c:	str	xzr, [x19, #8]
    e220:	cbz	x0, e228 <grub_script_fini+0x40>
    e224:	bl	0 <grub_unregister_command>
    e228:	ldr	x0, [x19, #24]
    e22c:	str	xzr, [x19, #16]
    e230:	cbz	x0, e238 <grub_script_fini+0x50>
    e234:	bl	0 <grub_unregister_command>
    e238:	ldr	x0, [x19, #32]
    e23c:	str	xzr, [x19, #24]
    e240:	cbz	x0, e248 <grub_script_fini+0x60>
    e244:	bl	0 <grub_unregister_command>
    e248:	str	xzr, [x19, #32]
    e24c:	ldr	x19, [sp, #16]
    e250:	ldp	x29, x30, [sp], #32
    e254:	ret
	...

000000000000e260 <grub_script_malloc>:
    e260:	stp	x29, x30, [sp, #-32]!
    e264:	mov	x29, sp
    e268:	stp	x19, x20, [sp, #16]
    e26c:	mov	x20, x0
    e270:	add	x0, x1, #0xf
    e274:	bl	0 <grub_malloc>
    e278:	mov	x19, x0
    e27c:	cbz	x0, e2b4 <grub_script_malloc+0x54>
    e280:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    e284:	adrp	x2, 0 <grub_normal_free_menu-0x268>
    e288:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    e28c:	mov	x4, x19
    e290:	ldr	x3, [x1]
    e294:	mov	w1, #0x32                  	// #50
    e298:	ldr	x0, [x0]
    e29c:	ldr	x2, [x2]
    e2a0:	bl	0 <grub_real_dprintf>
    e2a4:	ldr	x0, [x20, #16]
    e2a8:	str	x0, [x19]
    e2ac:	str	x19, [x20, #16]
    e2b0:	add	x19, x19, #0x8
    e2b4:	mov	x0, x19
    e2b8:	ldp	x19, x20, [sp, #16]
    e2bc:	ldp	x29, x30, [sp], #32
    e2c0:	ret
    e2c4:	nop
	...

000000000000e2e0 <grub_script_mem_free>:
    e2e0:	cbz	x0, e358 <grub_script_mem_free+0x78>
    e2e4:	stp	x29, x30, [sp, #-64]!
    e2e8:	adrp	x2, 0 <grub_normal_free_menu-0x268>
    e2ec:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    e2f0:	mov	x29, sp
    e2f4:	stp	x19, x20, [sp, #16]
    e2f8:	mov	x19, x0
    e2fc:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    e300:	stp	x21, x22, [sp, #32]
    e304:	ldr	x22, [x1]
    e308:	str	x23, [sp, #48]
    e30c:	ldr	x21, [x0]
    e310:	ldr	x23, [x2]
    e314:	nop
    e318:	mov	x20, x19
    e31c:	mov	x4, x19
    e320:	mov	x3, x23
    e324:	ldr	x19, [x19]
    e328:	mov	x2, x22
    e32c:	mov	w1, #0x41                  	// #65
    e330:	mov	x0, x21
    e334:	bl	0 <grub_real_dprintf>
    e338:	mov	x0, x20
    e33c:	bl	0 <grub_free>
    e340:	cbnz	x19, e318 <grub_script_mem_free+0x38>
    e344:	ldp	x19, x20, [sp, #16]
    e348:	ldp	x21, x22, [sp, #32]
    e34c:	ldr	x23, [sp, #48]
    e350:	ldp	x29, x30, [sp], #64
    e354:	ret
    e358:	ret
    e35c:	nop
	...

000000000000e378 <grub_script_mem_record>:
    e378:	mov	x1, x0
    e37c:	ldr	x0, [x0, #16]
    e380:	str	xzr, [x1, #16]
    e384:	ret

000000000000e388 <grub_script_mem_record_stop>:
    e388:	mov	x2, x0
    e38c:	ldr	x0, [x0, #16]
    e390:	str	x1, [x2, #16]
    e394:	ret

000000000000e398 <grub_script_free>:
    e398:	cbz	x0, e3f4 <grub_script_free+0x5c>
    e39c:	stp	x29, x30, [sp, #-32]!
    e3a0:	mov	x29, sp
    e3a4:	stp	x19, x20, [sp, #16]
    e3a8:	mov	x20, x0
    e3ac:	ldr	x0, [x0, #8]
    e3b0:	cbz	x0, e3b8 <grub_script_free+0x20>
    e3b4:	bl	e2e0 <grub_script_mem_free>
    e3b8:	ldr	x19, [x20, #32]
    e3bc:	cbz	x19, e3dc <grub_script_free+0x44>
    e3c0:	ldr	w1, [x19]
    e3c4:	mov	x0, x19
    e3c8:	ldr	x19, [x19, #24]
    e3cc:	sub	w2, w1, #0x1
    e3d0:	cbz	w1, e3ec <grub_script_free+0x54>
    e3d4:	str	w2, [x0]
    e3d8:	cbnz	x19, e3c0 <grub_script_free+0x28>
    e3dc:	mov	x0, x20
    e3e0:	ldp	x19, x20, [sp, #16]
    e3e4:	ldp	x29, x30, [sp], #32
    e3e8:	b	0 <grub_free>
    e3ec:	bl	e398 <grub_script_free>
    e3f0:	b	e3bc <grub_script_free+0x24>
    e3f4:	ret

000000000000e3f8 <grub_script_arg_add>:
    e3f8:	stp	x29, x30, [sp, #-64]!
    e3fc:	mov	x29, sp
    e400:	stp	x19, x20, [sp, #16]
    e404:	mov	x20, x1
    e408:	mov	x1, #0x20                  	// #32
    e40c:	stp	x21, x22, [sp, #32]
    e410:	mov	w21, w2
    e414:	mov	x22, x3
    e418:	str	x23, [sp, #48]
    e41c:	mov	x23, x0
    e420:	bl	e260 <grub_script_malloc>
    e424:	cbz	x0, e480 <grub_script_arg_add+0x88>
    e428:	mov	x19, x0
    e42c:	mov	x0, x22
    e430:	str	w21, [x19]
    e434:	str	xzr, [x19, #16]
    e438:	bl	0 <grub_strlen>
    e43c:	add	w21, w0, #0x1
    e440:	mov	x0, x23
    e444:	sxtw	x21, w21
    e448:	mov	x1, x21
    e44c:	bl	e260 <grub_script_malloc>
    e450:	str	x0, [x19, #8]
    e454:	cbz	x0, e480 <grub_script_arg_add+0x88>
    e458:	mov	x2, x21
    e45c:	mov	x1, x22
    e460:	bl	0 <grub_memmove>
    e464:	str	xzr, [x19, #24]
    e468:	cbz	x20, e484 <grub_script_arg_add+0x8c>
    e46c:	mov	x2, x20
    e470:	mov	x0, x2
    e474:	ldr	x2, [x2, #24]
    e478:	cbnz	x2, e470 <grub_script_arg_add+0x78>
    e47c:	str	x19, [x0, #24]
    e480:	mov	x19, x20
    e484:	mov	x0, x19
    e488:	ldp	x19, x20, [sp, #16]
    e48c:	ldp	x21, x22, [sp, #32]
    e490:	ldr	x23, [sp, #48]
    e494:	ldp	x29, x30, [sp], #64
    e498:	ret
    e49c:	nop

000000000000e4a0 <grub_script_add_arglist>:
    e4a0:	stp	x29, x30, [sp, #-48]!
    e4a4:	adrp	x6, 0 <grub_normal_free_menu-0x268>
    e4a8:	adrp	x5, 0 <grub_normal_free_menu-0x268>
    e4ac:	adrp	x3, 0 <grub_normal_free_menu-0x268>
    e4b0:	mov	x29, sp
    e4b4:	ldr	x3, [x3]
    e4b8:	stp	x19, x20, [sp, #16]
    e4bc:	mov	x20, x0
    e4c0:	ldr	x0, [x5]
    e4c4:	str	x21, [sp, #32]
    e4c8:	mov	x21, x2
    e4cc:	mov	x19, x1
    e4d0:	ldr	x2, [x6]
    e4d4:	mov	w1, #0xa3                  	// #163
    e4d8:	bl	0 <grub_real_dprintf>
    e4dc:	mov	x0, x20
    e4e0:	mov	x1, #0x18                  	// #24
    e4e4:	bl	e260 <grub_script_malloc>
    e4e8:	cbz	x0, e518 <grub_script_add_arglist+0x78>
    e4ec:	stp	xzr, x21, [x0]
    e4f0:	str	wzr, [x0, #16]
    e4f4:	cbz	x19, e52c <grub_script_add_arglist+0x8c>
    e4f8:	ldr	w1, [x19, #16]
    e4fc:	mov	x2, x19
    e500:	add	w1, w1, #0x1
    e504:	str	w1, [x19, #16]
    e508:	mov	x1, x2
    e50c:	ldr	x2, [x2]
    e510:	cbnz	x2, e508 <grub_script_add_arglist+0x68>
    e514:	str	x0, [x1]
    e518:	mov	x0, x19
    e51c:	ldp	x19, x20, [sp, #16]
    e520:	ldr	x21, [sp, #32]
    e524:	ldp	x29, x30, [sp], #48
    e528:	ret
    e52c:	mov	w1, #0x1                   	// #1
    e530:	str	w1, [x0, #16]
    e534:	mov	x19, x0
    e538:	mov	x0, x19
    e53c:	ldp	x19, x20, [sp, #16]
    e540:	ldr	x21, [sp, #32]
    e544:	ldp	x29, x30, [sp], #48
    e548:	ret
    e54c:	nop
	...

000000000000e568 <grub_script_create_cmdline>:
    e568:	stp	x29, x30, [sp, #-32]!
    e56c:	adrp	x4, 0 <grub_normal_free_menu-0x268>
    e570:	adrp	x3, 0 <grub_normal_free_menu-0x268>
    e574:	adrp	x2, 0 <grub_normal_free_menu-0x268>
    e578:	mov	x29, sp
    e57c:	ldr	x3, [x3]
    e580:	stp	x19, x20, [sp, #16]
    e584:	mov	x19, x0
    e588:	ldr	x2, [x2]
    e58c:	mov	x20, x1
    e590:	ldr	x0, [x4]
    e594:	mov	w1, #0xc6                  	// #198
    e598:	bl	0 <grub_real_dprintf>
    e59c:	mov	x0, x19
    e5a0:	mov	x1, #0x18                  	// #24
    e5a4:	bl	e260 <grub_script_malloc>
    e5a8:	cbz	x0, e5bc <grub_script_create_cmdline+0x54>
    e5ac:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    e5b0:	str	x20, [x0, #16]
    e5b4:	ldr	x1, [x1]
    e5b8:	stp	x1, xzr, [x0]
    e5bc:	ldp	x19, x20, [sp, #16]
    e5c0:	ldp	x29, x30, [sp], #32
    e5c4:	ret
	...

000000000000e5e8 <grub_script_create_cmdif>:
    e5e8:	stp	x29, x30, [sp, #-48]!
    e5ec:	adrp	x7, 0 <grub_normal_free_menu-0x268>
    e5f0:	adrp	x8, 0 <grub_normal_free_menu-0x268>
    e5f4:	adrp	x6, 0 <grub_normal_free_menu-0x268>
    e5f8:	mov	x29, sp
    e5fc:	stp	x19, x20, [sp, #16]
    e600:	mov	x19, x0
    e604:	mov	x20, x3
    e608:	ldr	x0, [x6]
    e60c:	stp	x21, x22, [sp, #32]
    e610:	mov	x21, x2
    e614:	ldr	x3, [x7]
    e618:	mov	x22, x1
    e61c:	ldr	x2, [x8]
    e620:	mov	w1, #0xdf                  	// #223
    e624:	bl	0 <grub_real_dprintf>
    e628:	mov	x0, x19
    e62c:	mov	x1, #0x28                  	// #40
    e630:	bl	e260 <grub_script_malloc>
    e634:	cbz	x0, e64c <grub_script_create_cmdif+0x64>
    e638:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    e63c:	stp	x22, x21, [x0, #16]
    e640:	ldr	x1, [x1]
    e644:	stp	x1, xzr, [x0]
    e648:	str	x20, [x0, #32]
    e64c:	ldp	x19, x20, [sp, #16]
    e650:	ldp	x21, x22, [sp, #32]
    e654:	ldp	x29, x30, [sp], #48
    e658:	ret
    e65c:	nop
	...

000000000000e680 <grub_script_create_cmdfor>:
    e680:	stp	x29, x30, [sp, #-48]!
    e684:	adrp	x7, 0 <grub_normal_free_menu-0x268>
    e688:	adrp	x8, 0 <grub_normal_free_menu-0x268>
    e68c:	adrp	x6, 0 <grub_normal_free_menu-0x268>
    e690:	mov	x29, sp
    e694:	stp	x19, x20, [sp, #16]
    e698:	mov	x19, x0
    e69c:	mov	x20, x3
    e6a0:	ldr	x0, [x6]
    e6a4:	stp	x21, x22, [sp, #32]
    e6a8:	mov	x21, x2
    e6ac:	ldr	x3, [x7]
    e6b0:	mov	x22, x1
    e6b4:	ldr	x2, [x8]
    e6b8:	mov	w1, #0xf7                  	// #247
    e6bc:	bl	0 <grub_real_dprintf>
    e6c0:	mov	x0, x19
    e6c4:	mov	x1, #0x28                  	// #40
    e6c8:	bl	e260 <grub_script_malloc>
    e6cc:	cbz	x0, e6e4 <grub_script_create_cmdfor+0x64>
    e6d0:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    e6d4:	stp	x22, x21, [x0, #16]
    e6d8:	ldr	x1, [x1]
    e6dc:	stp	x1, xzr, [x0]
    e6e0:	str	x20, [x0, #32]
    e6e4:	ldp	x19, x20, [sp, #16]
    e6e8:	ldp	x21, x22, [sp, #32]
    e6ec:	ldp	x29, x30, [sp], #48
    e6f0:	ret
    e6f4:	nop
	...

000000000000e718 <grub_script_create_cmdwhile>:
    e718:	stp	x29, x30, [sp, #-48]!
    e71c:	mov	x29, sp
    e720:	stp	x19, x20, [sp, #16]
    e724:	mov	x20, x2
    e728:	mov	w19, w3
    e72c:	str	x21, [sp, #32]
    e730:	mov	x21, x1
    e734:	mov	x1, #0x28                  	// #40
    e738:	bl	e260 <grub_script_malloc>
    e73c:	cbz	x0, e754 <grub_script_create_cmdwhile+0x3c>
    e740:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    e744:	stp	x21, x20, [x0, #16]
    e748:	ldr	x1, [x1]
    e74c:	stp	x1, xzr, [x0]
    e750:	str	w19, [x0, #32]
    e754:	ldp	x19, x20, [sp, #16]
    e758:	ldr	x21, [sp, #32]
    e75c:	ldp	x29, x30, [sp], #48
    e760:	ret
    e764:	nop
	...

000000000000e770 <grub_script_append_cmd>:
    e770:	stp	x29, x30, [sp, #-48]!
    e774:	adrp	x3, 0 <grub_normal_free_menu-0x268>
    e778:	adrp	x5, 0 <grub_normal_free_menu-0x268>
    e77c:	adrp	x4, 0 <grub_normal_free_menu-0x268>
    e780:	mov	x29, sp
    e784:	ldr	x3, [x3]
    e788:	stp	x19, x20, [sp, #16]
    e78c:	mov	x20, x2
    e790:	ldr	x2, [x5]
    e794:	str	x21, [sp, #32]
    e798:	mov	x21, x0
    e79c:	mov	x19, x1
    e7a0:	ldr	x0, [x4]
    e7a4:	mov	w1, #0x126                 	// #294
    e7a8:	bl	0 <grub_real_dprintf>
    e7ac:	cbz	x20, e7c8 <grub_script_append_cmd+0x58>
    e7b0:	mov	x3, x19
    e7b4:	cbz	x19, e7dc <grub_script_append_cmd+0x6c>
    e7b8:	mov	x4, x3
    e7bc:	ldr	x3, [x3, #8]
    e7c0:	cbnz	x3, e7b8 <grub_script_append_cmd+0x48>
    e7c4:	str	x20, [x4, #8]
    e7c8:	mov	x0, x19
    e7cc:	ldp	x19, x20, [sp, #16]
    e7d0:	ldr	x21, [sp, #32]
    e7d4:	ldp	x29, x30, [sp], #48
    e7d8:	ret
    e7dc:	mov	x0, x21
    e7e0:	mov	x1, #0x10                  	// #16
    e7e4:	bl	e260 <grub_script_malloc>
    e7e8:	mov	x19, x0
    e7ec:	cbz	x0, e7c8 <grub_script_append_cmd+0x58>
    e7f0:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    e7f4:	ldr	x21, [sp, #32]
    e7f8:	ldr	x0, [x0]
    e7fc:	stp	x0, x20, [x19]
    e800:	mov	x0, x19
    e804:	ldp	x19, x20, [sp, #16]
    e808:	ldp	x29, x30, [sp], #48
    e80c:	ret
	...

000000000000e830 <grub_script_create>:
    e830:	stp	x29, x30, [sp, #-32]!
    e834:	mov	x29, sp
    e838:	stp	x19, x20, [sp, #16]
    e83c:	mov	x19, x0
    e840:	mov	x20, x1
    e844:	mov	x0, #0x28                  	// #40
    e848:	bl	0 <grub_malloc>
    e84c:	cbz	x0, e85c <grub_script_create+0x2c>
    e850:	str	wzr, [x0]
    e854:	stp	x20, x19, [x0, #8]
    e858:	stp	xzr, xzr, [x0, #24]
    e85c:	ldp	x19, x20, [sp, #16]
    e860:	ldp	x29, x30, [sp], #32
    e864:	ret

000000000000e868 <grub_script_parse>:
    e868:	stp	x29, x30, [sp, #-64]!
    e86c:	mov	x29, sp
    e870:	stp	x19, x20, [sp, #16]
    e874:	stp	x21, x22, [sp, #32]
    e878:	mov	x21, x0
    e87c:	mov	x22, x1
    e880:	mov	x0, #0x28                  	// #40
    e884:	str	x23, [sp, #48]
    e888:	mov	x23, x2
    e88c:	bl	0 <grub_malloc>
    e890:	mov	x19, x0
    e894:	cbz	x0, e918 <grub_script_parse+0xb0>
    e898:	str	wzr, [x19]
    e89c:	mov	x0, #0x30                  	// #48
    e8a0:	stp	xzr, xzr, [x19, #8]
    e8a4:	stp	xzr, xzr, [x19, #24]
    e8a8:	bl	0 <grub_zalloc>
    e8ac:	mov	x20, x0
    e8b0:	cbz	x0, e950 <grub_script_parse+0xe8>
    e8b4:	mov	x1, x21
    e8b8:	mov	x3, x23
    e8bc:	mov	x2, x22
    e8c0:	bl	10fd0 <grub_script_lexer_init>
    e8c4:	mov	x21, x0
    e8c8:	cbz	x0, e974 <grub_script_parse+0x10c>
    e8cc:	str	x21, [x20, #40]
    e8d0:	mov	x0, x20
    e8d4:	ldr	x22, [x20, #16]
    e8d8:	str	xzr, [x20, #16]
    e8dc:	bl	11e98 <grub_script_yyparse>
    e8e0:	cbnz	w0, e930 <grub_script_parse+0xc8>
    e8e4:	ldr	w0, [x20, #8]
    e8e8:	ldr	x1, [x20, #16]
    e8ec:	cbnz	w0, e934 <grub_script_parse+0xcc>
    e8f0:	str	x22, [x20, #16]
    e8f4:	mov	x0, x21
    e8f8:	ldr	x2, [x20, #24]
    e8fc:	str	x1, [x19, #8]
    e900:	ldr	x1, [x20, #32]
    e904:	str	x1, [x19, #16]
    e908:	str	x2, [x19, #32]
    e90c:	bl	110b0 <grub_script_lexer_fini>
    e910:	mov	x0, x20
    e914:	bl	0 <grub_free>
    e918:	mov	x0, x19
    e91c:	ldp	x19, x20, [sp, #16]
    e920:	ldp	x21, x22, [sp, #32]
    e924:	ldr	x23, [sp, #48]
    e928:	ldp	x29, x30, [sp], #64
    e92c:	ret
    e930:	ldr	x1, [x20, #16]
    e934:	str	x22, [x20, #16]
    e938:	mov	x0, x1
    e93c:	bl	e2e0 <grub_script_mem_free>
    e940:	mov	x0, x21
    e944:	bl	110b0 <grub_script_lexer_fini>
    e948:	mov	x0, x20
    e94c:	bl	0 <grub_free>
    e950:	mov	x0, x19
    e954:	mov	x19, #0x0                   	// #0
    e958:	bl	0 <grub_free>
    e95c:	mov	x0, x19
    e960:	ldp	x19, x20, [sp, #16]
    e964:	ldp	x21, x22, [sp, #32]
    e968:	ldr	x23, [sp, #48]
    e96c:	ldp	x29, x30, [sp], #64
    e970:	ret
    e974:	mov	x0, x19
    e978:	bl	0 <grub_free>
    e97c:	mov	x0, x20
    e980:	mov	x19, #0x0                   	// #0
    e984:	bl	0 <grub_free>
    e988:	b	e918 <grub_script_parse+0xb0>
    e98c:	nop
    e990:	ldrb	w1, [x0]
    e994:	sub	w1, w1, #0x30
    e998:	cmp	w1, #0x9
    e99c:	b.hi	e9a8 <grub_script_parse+0x140>  // b.pmore
    e9a0:	mov	w0, #0x1                   	// #1
    e9a4:	ret
    e9a8:	stp	x29, x30, [sp, #-32]!
    e9ac:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    e9b0:	mov	x29, sp
    e9b4:	ldr	x1, [x1]
    e9b8:	str	x19, [sp, #16]
    e9bc:	mov	x19, x0
    e9c0:	bl	0 <grub_strcmp>
    e9c4:	cbz	w0, e9dc <grub_script_parse+0x174>
    e9c8:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    e9cc:	mov	x0, x19
    e9d0:	ldr	x1, [x1]
    e9d4:	bl	0 <grub_strcmp>
    e9d8:	cbnz	w0, e9ec <grub_script_parse+0x184>
    e9dc:	mov	w0, #0x1                   	// #1
    e9e0:	ldr	x19, [sp, #16]
    e9e4:	ldp	x29, x30, [sp], #32
    e9e8:	ret
    e9ec:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    e9f0:	mov	x0, x19
    e9f4:	ldr	x1, [x1]
    e9f8:	bl	0 <grub_strcmp>
    e9fc:	cmp	w0, #0x0
    ea00:	cset	w0, eq  // eq = none
    ea04:	ldr	x19, [sp, #16]
    ea08:	ldp	x29, x30, [sp], #32
    ea0c:	ret
	...
    ea28:	stp	x29, x30, [sp, #-32]!
    ea2c:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    ea30:	mov	x29, sp
    ea34:	stp	x19, x20, [sp, #16]
    ea38:	mov	x19, x0
    ea3c:	ldr	x20, [x1]
    ea40:	ldr	x0, [x20]
    ea44:	cbz	x0, ea6c <grub_script_parse+0x204>
    ea48:	ldp	w3, w4, [x0]
    ea4c:	ldr	x2, [x0, #16]
    ea50:	ldr	w1, [x0, #8]
    ea54:	sub	x2, x2, w4, uxtw #3
    ea58:	add	w1, w1, w4
    ea5c:	str	w1, [x0, #8]
    ea60:	str	x2, [x0, #16]
    ea64:	tbnz	w3, #1, ea90 <grub_script_parse+0x228>
    ea68:	tbnz	w3, #0, ea7c <grub_script_parse+0x214>
    ea6c:	str	x19, [x20]
    ea70:	ldp	x19, x20, [sp, #16]
    ea74:	ldp	x29, x30, [sp], #32
    ea78:	ret
    ea7c:	bl	0 <grub_free>
    ea80:	str	x19, [x20]
    ea84:	ldp	x19, x20, [sp, #16]
    ea88:	ldp	x29, x30, [sp], #32
    ea8c:	ret
    ea90:	add	x0, x0, #0x8
    ea94:	bl	11288 <grub_script_argv_free>
    ea98:	ldr	x0, [x20]
    ea9c:	ldr	w3, [x0]
    eaa0:	tbz	w3, #0, ea6c <grub_script_parse+0x204>
    eaa4:	b	ea7c <grub_script_parse+0x214>
	...
    eab0:	stp	x29, x30, [sp, #-80]!
    eab4:	mov	x29, sp
    eab8:	str	x3, [sp, #72]
    eabc:	cbz	x0, eb40 <grub_script_parse+0x2d8>
    eac0:	stp	x19, x20, [sp, #16]
    eac4:	mov	x20, x2
    eac8:	mov	x19, x1
    eacc:	stp	x21, x22, [sp, #32]
    ead0:	mov	w2, #0x0                   	// #0
    ead4:	mov	x22, x0
    ead8:	str	x23, [sp, #48]
    eadc:	mov	w21, #0x24                  	// #36
    eae0:	ldrb	w3, [x0]
    eae4:	cbz	w3, eb34 <grub_script_parse+0x2cc>
    eae8:	cmp	w3, #0x24
    eaec:	add	x23, x22, #0x1
    eaf0:	b.eq	eb58 <grub_script_parse+0x2f0>  // b.none
    eaf4:	ldr	x1, [sp, #72]
    eaf8:	mov	w4, #0x5c                  	// #92
    eafc:	cmp	w3, #0x5c
    eb00:	b.ne	ec54 <grub_script_parse+0x3ec>  // b.any
    eb04:	cmp	x1, #0x0
    eb08:	and	w4, w2, #0x1
    eb0c:	csel	w4, w4, wzr, ne  // ne = any
    eb10:	eor	w0, w2, #0x1
    eb14:	cbz	w4, eb24 <grub_script_parse+0x2bc>
    eb18:	add	x2, x1, #0x1
    eb1c:	str	x2, [sp, #72]
    eb20:	strb	w3, [x1]
    eb24:	ldrb	w3, [x22, #1]
    eb28:	mov	w2, w0
    eb2c:	mov	x22, x23
    eb30:	cbnz	w3, eae8 <grub_script_parse+0x280>
    eb34:	ldp	x19, x20, [sp, #16]
    eb38:	ldp	x21, x22, [sp, #32]
    eb3c:	ldr	x23, [sp, #48]
    eb40:	mov	w0, #0x0                   	// #0
    eb44:	ldr	x1, [sp, #72]
    eb48:	cbz	x1, eb50 <grub_script_parse+0x2e8>
    eb4c:	strb	wzr, [x1]
    eb50:	ldp	x29, x30, [sp], #80
    eb54:	ret
    eb58:	cbz	w2, ebe4 <grub_script_parse+0x37c>
    eb5c:	ldr	x1, [sp, #72]
    eb60:	cbz	x1, eb74 <grub_script_parse+0x30c>
    eb64:	add	x0, x1, #0x1
    eb68:	str	x0, [sp, #72]
    eb6c:	ldrb	w0, [x22]
    eb70:	strb	w0, [x1]
    eb74:	ldrb	w3, [x22, #1]
    eb78:	cbz	w3, eb34 <grub_script_parse+0x2cc>
    eb7c:	add	x0, x22, #0x2
    eb80:	cmp	w3, #0x24
    eb84:	b.eq	ebf0 <grub_script_parse+0x388>  // b.none
    eb88:	mov	x22, x23
    eb8c:	mov	w2, #0x0                   	// #0
    eb90:	mov	x23, x0
    eb94:	ldr	x1, [sp, #72]
    eb98:	b	eaf8 <grub_script_parse+0x290>
    eb9c:	mov	x22, x0
    eba0:	mov	x23, x22
    eba4:	ldrb	w1, [x22, #1]!
    eba8:	sub	w1, w1, #0x30
    ebac:	and	w1, w1, #0xff
    ebb0:	cmp	w1, #0x9
    ebb4:	b.ls	eba0 <grub_script_parse+0x338>  // b.plast
    ebb8:	add	x2, sp, #0x48
    ebbc:	mov	x3, x20
    ebc0:	sub	x1, x22, x0
    ebc4:	blr	x19
    ebc8:	mov	w2, w0
    ebcc:	cbnz	w0, edec <grub_script_parse+0x584>
    ebd0:	ldrb	w3, [x22]
    ebd4:	cbz	w3, eb34 <grub_script_parse+0x2cc>
    ebd8:	add	x23, x23, #0x2
    ebdc:	cmp	w3, #0x24
    ebe0:	b.ne	eaf4 <grub_script_parse+0x28c>  // b.any
    ebe4:	mov	x0, x23
    ebe8:	mov	x23, x22
    ebec:	nop
    ebf0:	ldrb	w3, [x23, #1]
    ebf4:	cmp	w3, #0x5a
    ebf8:	b.hi	ed2c <grub_script_parse+0x4c4>  // b.pmore
    ebfc:	cmp	w3, #0x40
    ec00:	b.hi	ecc0 <grub_script_parse+0x458>  // b.pmore
    ec04:	cmp	w3, #0x39
    ec08:	b.hi	ed70 <grub_script_parse+0x508>  // b.pmore
    ec0c:	cmp	w3, #0x2f
    ec10:	b.hi	eb9c <grub_script_parse+0x334>  // b.pmore
    ec14:	cmp	w3, #0x23
    ec18:	b.ne	ee00 <grub_script_parse+0x598>  // b.any
    ec1c:	add	x2, sp, #0x48
    ec20:	mov	x3, x20
    ec24:	mov	x1, #0x1                   	// #1
    ec28:	blr	x19
    ec2c:	mov	w2, w0
    ec30:	cbnz	w0, edec <grub_script_parse+0x584>
    ec34:	ldrb	w3, [x23, #2]
    ec38:	add	x22, x23, #0x2
    ec3c:	cbz	w3, eb34 <grub_script_parse+0x2cc>
    ec40:	add	x23, x23, #0x3
    ec44:	cmp	w3, #0x24
    ec48:	b.eq	ebe4 <grub_script_parse+0x37c>  // b.none
    ec4c:	ldr	x1, [sp, #72]
    ec50:	b	eaf8 <grub_script_parse+0x290>
    ec54:	cbz	w2, ec6c <grub_script_parse+0x404>
    ec58:	add	x0, x1, #0x1
    ec5c:	cbz	x1, ec80 <grub_script_parse+0x418>
    ec60:	str	x0, [sp, #72]
    ec64:	strb	w4, [x1]
    ec68:	ldr	x1, [sp, #72]
    ec6c:	add	x0, x1, #0x1
    ec70:	cbz	x1, ec80 <grub_script_parse+0x418>
    ec74:	str	x0, [sp, #72]
    ec78:	ldrb	w0, [x22]
    ec7c:	strb	w0, [x1]
    ec80:	ldrb	w3, [x22, #1]
    ec84:	add	x0, x23, #0x1
    ec88:	mov	x22, x23
    ec8c:	mov	w2, #0x0                   	// #0
    ec90:	cmp	w3, #0x24
    ec94:	cbz	w3, eb34 <grub_script_parse+0x2cc>
    ec98:	b.eq	ebf0 <grub_script_parse+0x388>  // b.none
    ec9c:	mov	x23, x0
    eca0:	ldr	x1, [sp, #72]
    eca4:	b	eafc <grub_script_parse+0x294>
    eca8:	cmp	w3, #0x5f
    ecac:	b.eq	ecc0 <grub_script_parse+0x458>  // b.none
    ecb0:	sub	w1, w3, #0x61
    ecb4:	and	w1, w1, #0xff
    ecb8:	cmp	w1, #0x19
    ecbc:	b.hi	ed38 <grub_script_parse+0x4d0>  // b.pmore
    ecc0:	mov	x22, x0
    ecc4:	nop
    ecc8:	and	w4, w3, #0xffffffdf
    eccc:	sub	w5, w3, #0x30
    ecd0:	sub	w4, w4, #0x41
    ecd4:	and	w5, w5, #0xff
    ecd8:	and	w4, w4, #0xff
    ecdc:	cmp	w5, #0x9
    ece0:	b.ls	ecf0 <grub_script_parse+0x488>  // b.plast
    ece4:	cmp	w3, #0x5f
    ece8:	ccmp	w4, #0x19, #0x0, ne  // ne = any
    ecec:	b.hi	ecf8 <grub_script_parse+0x490>  // b.pmore
    ecf0:	ldrb	w3, [x22, #1]!
    ecf4:	b	ecc8 <grub_script_parse+0x460>
    ecf8:	add	x2, sp, #0x48
    ecfc:	mov	x3, x20
    ed00:	sub	x1, x22, x0
    ed04:	blr	x19
    ed08:	mov	w2, w0
    ed0c:	cbnz	w0, edec <grub_script_parse+0x584>
    ed10:	ldrb	w3, [x22]
    ed14:	cbz	w3, eb34 <grub_script_parse+0x2cc>
    ed18:	cmp	w3, #0x24
    ed1c:	add	x23, x22, #0x1
    ed20:	b.eq	ebe4 <grub_script_parse+0x37c>  // b.none
    ed24:	ldr	x1, [sp, #72]
    ed28:	b	eaf8 <grub_script_parse+0x290>
    ed2c:	cmp	w3, #0x7b
    ed30:	b.eq	ed98 <grub_script_parse+0x530>  // b.none
    ed34:	b.ls	eca8 <grub_script_parse+0x440>  // b.plast
    ed38:	ldr	x1, [sp, #72]
    ed3c:	cbz	x1, ed80 <grub_script_parse+0x518>
    ed40:	add	x2, x1, #0x1
    ed44:	str	x2, [sp, #72]
    ed48:	strb	w21, [x1]
    ed4c:	ldrb	w3, [x23, #1]
    ed50:	cbz	w3, eb34 <grub_script_parse+0x2cc>
    ed54:	cmp	w3, #0x24
    ed58:	add	x23, x0, #0x1
    ed5c:	mov	w2, #0x0                   	// #0
    ed60:	b.eq	eddc <grub_script_parse+0x574>  // b.none
    ed64:	mov	x22, x0
    ed68:	ldr	x1, [sp, #72]
    ed6c:	b	eaf8 <grub_script_parse+0x290>
    ed70:	cmp	w3, #0x3f
    ed74:	b.eq	ec1c <grub_script_parse+0x3b4>  // b.none
    ed78:	ldr	x1, [sp, #72]
    ed7c:	cbnz	x1, ed40 <grub_script_parse+0x4d8>
    ed80:	cmp	w3, #0x24
    ed84:	add	x23, x0, #0x1
    ed88:	mov	w2, #0x0                   	// #0
    ed8c:	b.eq	eddc <grub_script_parse+0x574>  // b.none
    ed90:	mov	x22, x0
    ed94:	b	eaf8 <grub_script_parse+0x290>
    ed98:	add	x22, x23, #0x2
    ed9c:	mov	w1, #0x7d                  	// #125
    eda0:	mov	x0, x22
    eda4:	bl	0 <grub_strchr>
    eda8:	mov	x23, x0
    edac:	cbz	x0, eb34 <grub_script_parse+0x2cc>
    edb0:	add	x2, sp, #0x48
    edb4:	sub	x1, x0, x22
    edb8:	mov	x3, x20
    edbc:	mov	x0, x22
    edc0:	blr	x19
    edc4:	mov	w2, w0
    edc8:	cbnz	w0, edec <grub_script_parse+0x584>
    edcc:	ldrb	w3, [x23, #1]
    edd0:	add	x22, x23, #0x1
    edd4:	cbnz	w3, ebd8 <grub_script_parse+0x370>
    edd8:	b	eb34 <grub_script_parse+0x2cc>
    eddc:	mov	x1, x23
    ede0:	mov	x23, x0
    ede4:	mov	x0, x1
    ede8:	b	ebf0 <grub_script_parse+0x388>
    edec:	mov	w0, #0x1                   	// #1
    edf0:	ldp	x19, x20, [sp, #16]
    edf4:	ldp	x21, x22, [sp, #32]
    edf8:	ldr	x23, [sp, #48]
    edfc:	b	eb50 <grub_script_parse+0x2e8>
    ee00:	ldr	x1, [sp, #72]
    ee04:	cbnz	x1, ed40 <grub_script_parse+0x4d8>
    ee08:	cbnz	w3, ed80 <grub_script_parse+0x518>
    ee0c:	mov	w0, #0x0                   	// #0
    ee10:	ldp	x19, x20, [sp, #16]
    ee14:	ldp	x21, x22, [sp, #32]
    ee18:	ldr	x23, [sp, #48]
    ee1c:	b	eb50 <grub_script_parse+0x2e8>
    ee20:	stp	x29, x30, [sp, #-48]!
    ee24:	mov	x29, sp
    ee28:	stp	x19, x20, [sp, #16]
    ee2c:	mov	x19, x3
    ee30:	ldr	x20, [x3, #8]
    ee34:	str	x21, [sp, #32]
    ee38:	ldr	x21, [x3]
    ee3c:	add	x2, x20, #0x1
    ee40:	str	x2, [x3, #8]
    ee44:	bl	0 <grub_strndup>
    ee48:	ldr	x1, [x19]
    ee4c:	str	x0, [x21, x20, lsl #3]
    ee50:	ldr	x0, [x19, #8]
    ee54:	ldp	x19, x20, [sp, #16]
    ee58:	add	x0, x1, x0, lsl #3
    ee5c:	ldr	x21, [sp, #32]
    ee60:	ldur	x0, [x0, #-8]
    ee64:	ldp	x29, x30, [sp], #48
    ee68:	cmp	x0, #0x0
    ee6c:	cset	w0, eq  // eq = none
    ee70:	ret
    ee74:	nop
    ee78:	stp	x29, x30, [sp, #-48]!
    ee7c:	mov	x29, sp
    ee80:	str	x21, [sp, #32]
    ee84:	mov	x21, x0
    ee88:	ldr	x0, [x2]
    ee8c:	cbz	x0, eee0 <grub_script_parse+0x678>
    ee90:	stp	x19, x20, [sp, #16]
    ee94:	mov	x19, x2
    ee98:	mov	w1, #0xa                   	// #10
    ee9c:	bl	0 <grub_strchr>
    eea0:	mov	x20, x0
    eea4:	ldr	x0, [x19]
    eea8:	cbz	x20, eed4 <grub_script_parse+0x66c>
    eeac:	sub	x1, x20, x0
    eeb0:	add	x20, x20, #0x1
    eeb4:	bl	0 <grub_strndup>
    eeb8:	str	x0, [x21]
    eebc:	str	x20, [x19]
    eec0:	mov	w0, #0x0                   	// #0
    eec4:	ldp	x19, x20, [sp, #16]
    eec8:	ldr	x21, [sp, #32]
    eecc:	ldp	x29, x30, [sp], #48
    eed0:	ret
    eed4:	bl	0 <grub_strdup>
    eed8:	str	x0, [x21]
    eedc:	b	eebc <grub_script_parse+0x654>
    eee0:	str	xzr, [x21]
    eee4:	mov	w0, #0x0                   	// #0
    eee8:	ldr	x21, [sp, #32]
    eeec:	ldp	x29, x30, [sp], #48
    eef0:	ret
    eef4:	nop
    eef8:	stp	x29, x30, [sp, #-32]!
    eefc:	mov	x29, sp
    ef00:	str	x19, [sp, #16]
    ef04:	mov	x19, x0
    ef08:	bl	0 <grub_strlen>
    ef0c:	lsl	w0, w0, #1
    ef10:	add	w0, w0, #0x1
    ef14:	sxtw	x0, w0
    ef18:	bl	0 <grub_malloc>
    ef1c:	cbz	x0, ef8c <grub_script_parse+0x724>
    ef20:	mov	x3, x19
    ef24:	ldrb	w1, [x3], #1
    ef28:	cbz	w1, ef98 <grub_script_parse+0x730>
    ef2c:	mov	w2, #0x0                   	// #0
    ef30:	mov	w6, #0x5c                  	// #92
    ef34:	mov	w9, #0x3f                  	// #63
    ef38:	b	ef54 <grub_script_parse+0x6ec>
    ef3c:	strb	w6, [x0, w2, sxtw]
    ef40:	add	w2, w2, #0x2
    ef44:	strb	w1, [x4]
    ef48:	add	x8, x0, w2, sxtw
    ef4c:	ldrb	w1, [x3], #1
    ef50:	cbz	w1, ef88 <grub_script_parse+0x720>
    ef54:	cmp	w1, #0x2a
    ef58:	add	w5, w2, #0x1
    ef5c:	ccmp	w1, w6, #0x4, ne  // ne = any
    ef60:	add	x7, x0, w2, sxtw
    ef64:	ccmp	w1, w9, #0x4, ne  // ne = any
    ef68:	add	x4, x0, w5, sxtw
    ef6c:	b.eq	ef3c <grub_script_parse+0x6d4>  // b.none
    ef70:	mov	x8, x4
    ef74:	mov	x4, x7
    ef78:	mov	w2, w5
    ef7c:	strb	w1, [x4]
    ef80:	ldrb	w1, [x3], #1
    ef84:	cbnz	w1, ef54 <grub_script_parse+0x6ec>
    ef88:	strb	wzr, [x8]
    ef8c:	ldr	x19, [sp, #16]
    ef90:	ldp	x29, x30, [sp], #32
    ef94:	ret
    ef98:	mov	x8, x0
    ef9c:	strb	wzr, [x8]
    efa0:	b	ef8c <grub_script_parse+0x724>
    efa4:	nop
    efa8:	stp	x29, x30, [sp, #-48]!
    efac:	mov	x29, sp
    efb0:	str	x19, [sp, #16]
    efb4:	cbz	x0, effc <grub_script_parse+0x794>
    efb8:	ldr	x1, [x0]
    efbc:	blr	x1
    efc0:	mov	w3, w0
    efc4:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    efc8:	mov	w19, w0
    efcc:	add	x0, sp, #0x20
    efd0:	ldr	x2, [x1]
    efd4:	mov	x1, #0xe                   	// #14
    efd8:	bl	0 <grub_snprintf>
    efdc:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    efe0:	add	x1, sp, #0x20
    efe4:	ldr	x0, [x0]
    efe8:	bl	0 <grub_env_set>
    efec:	mov	w0, w19
    eff0:	ldr	x19, [sp, #16]
    eff4:	ldp	x29, x30, [sp], #48
    eff8:	ret
    effc:	mov	w19, #0x0                   	// #0
    f000:	mov	w0, w19
    f004:	ldr	x19, [sp, #16]
    f008:	ldp	x29, x30, [sp], #48
    f00c:	ret
	...
    f020:	stp	x29, x30, [sp, #-64]!
    f024:	mov	x29, sp
    f028:	stp	x21, x22, [sp, #32]
    f02c:	mov	x22, x0
    f030:	ldr	x0, [x3, #8]
    f034:	cbz	x0, f0d8 <grub_script_parse+0x870>
    f038:	mov	x21, x1
    f03c:	stp	x19, x20, [sp, #16]
    f040:	mov	x20, x3
    f044:	str	x23, [sp, #48]
    f048:	mov	x23, x2
    f04c:	mov	x19, #0x0                   	// #0
    f050:	ldr	x3, [x20]
    f054:	mov	x2, x21
    f058:	mov	x1, x22
    f05c:	ldr	x0, [x3, x19, lsl #3]
    f060:	bl	0 <grub_strncmp>
    f064:	cbnz	w0, f078 <grub_script_parse+0x810>
    f068:	ldr	x0, [x20]
    f06c:	ldr	x0, [x0, x19, lsl #3]
    f070:	ldrb	w0, [x0, x21]
    f074:	cbz	w0, f100 <grub_script_parse+0x898>
    f078:	ldr	x3, [x20, #8]
    f07c:	add	x19, x19, #0x1
    f080:	cmp	x3, x19
    f084:	b.hi	f050 <grub_script_parse+0x7e8>  // b.pmore
    f088:	cmp	x3, x19
    f08c:	b.eq	f0e8 <grub_script_parse+0x880>  // b.none
    f090:	cmp	x21, #0x1
    f094:	b.ne	f0a4 <grub_script_parse+0x83c>  // b.any
    f098:	ldrb	w0, [x22]
    f09c:	cmp	w0, #0x23
    f0a0:	b.eq	f108 <grub_script_parse+0x8a0>  // b.none
    f0a4:	ldr	x0, [x20]
    f0a8:	ldr	x0, [x0, x19, lsl #3]
    f0ac:	bl	0 <grub_env_get>
    f0b0:	cbz	x0, f0e8 <grub_script_parse+0x880>
    f0b4:	ldr	x1, [x23]
    f0b8:	mov	x3, x1
    f0bc:	ldrb	w2, [x0]
    f0c0:	strb	w2, [x1], #1
    f0c4:	ldrb	w2, [x0], #1
    f0c8:	cbnz	w2, f0b8 <grub_script_parse+0x850>
    f0cc:	ldp	x19, x20, [sp, #16]
    f0d0:	str	x3, [x23]
    f0d4:	ldr	x23, [sp, #48]
    f0d8:	mov	w0, #0x0                   	// #0
    f0dc:	ldp	x21, x22, [sp, #32]
    f0e0:	ldp	x29, x30, [sp], #64
    f0e4:	ret
    f0e8:	mov	w0, #0x0                   	// #0
    f0ec:	ldp	x19, x20, [sp, #16]
    f0f0:	ldp	x21, x22, [sp, #32]
    f0f4:	ldr	x23, [sp, #48]
    f0f8:	ldp	x29, x30, [sp], #64
    f0fc:	ret
    f100:	ldr	x3, [x20, #8]
    f104:	b	f088 <grub_script_parse+0x820>
    f108:	adrp	x3, 0 <grub_normal_free_menu-0x268>
    f10c:	adrp	x2, 0 <grub_normal_free_menu-0x268>
    f110:	ldr	x0, [x23]
    f114:	mov	x1, #0x1e                  	// #30
    f118:	ldr	x3, [x3]
    f11c:	ldr	x2, [x2]
    f120:	ldr	x3, [x3]
    f124:	ldr	w3, [x3, #8]
    f128:	bl	0 <grub_snprintf>
    f12c:	ldr	x0, [x23]
    f130:	bl	0 <grub_strlen>
    f134:	ldr	x1, [x23]
    f138:	ldp	x19, x20, [sp, #16]
    f13c:	add	x1, x1, x0
    f140:	str	x1, [x23]
    f144:	ldr	x23, [sp, #48]
    f148:	b	f0d8 <grub_script_parse+0x870>
    f14c:	nop
	...
    f160:	stp	x29, x30, [sp, #-48]!
    f164:	mov	x29, sp
    f168:	stp	x21, x22, [sp, #32]
    f16c:	mov	x22, x0
    f170:	ldr	x0, [x3, #8]
    f174:	cbz	x0, f200 <grub_script_parse+0x998>
    f178:	mov	x21, x1
    f17c:	stp	x19, x20, [sp, #16]
    f180:	mov	x20, x3
    f184:	mov	x19, #0x0                   	// #0
    f188:	ldr	x3, [x20]
    f18c:	mov	x2, x21
    f190:	mov	x1, x22
    f194:	ldr	x0, [x3, x19, lsl #3]
    f198:	bl	0 <grub_strncmp>
    f19c:	cbnz	w0, f1b0 <grub_script_parse+0x948>
    f1a0:	ldr	x0, [x20]
    f1a4:	ldr	x0, [x0, x19, lsl #3]
    f1a8:	ldrb	w0, [x0, x21]
    f1ac:	cbz	w0, f224 <grub_script_parse+0x9bc>
    f1b0:	ldr	x3, [x20, #8]
    f1b4:	add	x19, x19, #0x1
    f1b8:	cmp	x3, x19
    f1bc:	b.hi	f188 <grub_script_parse+0x920>  // b.pmore
    f1c0:	cmp	x3, x19
    f1c4:	b.eq	f210 <grub_script_parse+0x9a8>  // b.none
    f1c8:	cmp	x21, #0x1
    f1cc:	b.ne	f1dc <grub_script_parse+0x974>  // b.any
    f1d0:	ldrb	w0, [x22]
    f1d4:	cmp	w0, #0x23
    f1d8:	b.eq	f22c <grub_script_parse+0x9c4>  // b.none
    f1dc:	ldr	x0, [x20]
    f1e0:	ldr	x0, [x0, x19, lsl #3]
    f1e4:	bl	0 <grub_env_get>
    f1e8:	cbz	x0, f210 <grub_script_parse+0x9a8>
    f1ec:	bl	0 <grub_strlen>
    f1f0:	ldr	x1, [x20, #16]
    f1f4:	add	x1, x1, x0
    f1f8:	str	x1, [x20, #16]
    f1fc:	ldp	x19, x20, [sp, #16]
    f200:	mov	w0, #0x0                   	// #0
    f204:	ldp	x21, x22, [sp, #32]
    f208:	ldp	x29, x30, [sp], #48
    f20c:	ret
    f210:	mov	w0, #0x0                   	// #0
    f214:	ldp	x19, x20, [sp, #16]
    f218:	ldp	x21, x22, [sp, #32]
    f21c:	ldp	x29, x30, [sp], #48
    f220:	ret
    f224:	ldr	x3, [x20, #8]
    f228:	b	f1c0 <grub_script_parse+0x958>
    f22c:	ldr	x0, [x20, #16]
    f230:	add	x0, x0, #0x1e
    f234:	str	x0, [x20, #16]
    f238:	ldp	x19, x20, [sp, #16]
    f23c:	b	f200 <grub_script_parse+0x998>
    f240:	stp	x29, x30, [sp, #-32]!
    f244:	mov	x29, sp
    f248:	stp	x19, x20, [sp, #16]
    f24c:	mov	x20, x1
    f250:	mov	x19, x0
    f254:	bl	e990 <grub_script_parse+0x128>
    f258:	cbnz	w0, f270 <grub_script_parse+0xa08>
    f25c:	mov	x1, x20
    f260:	mov	x0, x19
    f264:	ldp	x19, x20, [sp, #16]
    f268:	ldp	x29, x30, [sp], #32
    f26c:	b	0 <grub_env_set>
    f270:	mov	x2, x19
    f274:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    f278:	ldp	x19, x20, [sp, #16]
    f27c:	mov	w0, #0x12                  	// #18
    f280:	ldp	x29, x30, [sp], #32
    f284:	ldr	x1, [x1]
    f288:	b	0 <grub_error>
    f28c:	nop
	...
    f298:	stp	x29, x30, [sp, #-176]!
    f29c:	mov	x29, sp
    f2a0:	stp	x19, x20, [sp, #16]
    f2a4:	stp	x21, x22, [sp, #32]
    f2a8:	stp	x23, x24, [sp, #48]
    f2ac:	stp	x25, x26, [sp, #64]
    f2b0:	str	x1, [sp, #104]
    f2b4:	str	wzr, [sp, #128]
    f2b8:	stp	xzr, xzr, [sp, #136]
    f2bc:	cbz	x0, fbb4 <grub_script_parse+0x134c>
    f2c0:	mov	x22, x0
    f2c4:	mov	w21, #0x2a                  	// #42
    f2c8:	stp	x27, x28, [sp, #80]
    f2cc:	ldr	x0, [x22, #8]
    f2d0:	cbz	x0, f5ec <grub_script_parse+0xd84>
    f2d4:	add	x0, sp, #0x80
    f2d8:	mov	x23, x0
    f2dc:	bl	112e8 <grub_script_argv_next>
    f2e0:	cbnz	w0, f448 <grub_script_parse+0xbe0>
    f2e4:	ldr	x20, [x22, #8]
    f2e8:	cbz	x20, f5e4 <grub_script_parse+0xd7c>
    f2ec:	nop
    f2f0:	ldr	w19, [x20]
    f2f4:	cmp	w19, #0x3
    f2f8:	b.eq	f474 <grub_script_parse+0xc0c>  // b.none
    f2fc:	b.hi	f6b4 <grub_script_parse+0xe4c>  // b.pmore
    f300:	cmp	w19, #0x1
    f304:	b.eq	f800 <grub_script_parse+0xf98>  // b.none
    f308:	cmp	w19, #0x2
    f30c:	b.ne	f470 <grub_script_parse+0xc08>  // b.any
    f310:	ldr	x19, [x20, #8]
    f314:	mov	x0, #0x1                   	// #1
    f318:	stp	xzr, xzr, [sp, #152]
    f31c:	str	x0, [sp, #168]
    f320:	ldrb	w1, [x19]
    f324:	cbz	w1, f95c <grub_script_parse+0x10f4>
    f328:	mov	x2, x19
    f32c:	mov	x0, #0x0                   	// #0
    f330:	cmp	w1, #0x24
    f334:	ldrb	w1, [x2, #1]!
    f338:	cinc	x0, x0, eq  // eq = none
    f33c:	cbnz	w1, f330 <grub_script_parse+0xac8>
    f340:	lsl	x0, x0, #3
    f344:	bl	0 <grub_malloc>
    f348:	mov	x4, x0
    f34c:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    f350:	add	x2, sp, #0x98
    f354:	mov	x3, #0x0                   	// #0
    f358:	str	x4, [sp, #152]
    f35c:	ldr	x1, [x0]
    f360:	mov	x0, x19
    f364:	bl	eab0 <grub_script_parse+0x248>
    f368:	cbnz	w0, f82c <grub_script_parse+0xfc4>
    f36c:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    f370:	mov	x0, x19
    f374:	ldr	x1, [x1]
    f378:	ldr	x1, [x1]
    f37c:	blr	x1
    f380:	mov	x25, x0
    f384:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    f388:	add	x2, sp, #0x98
    f38c:	mov	x3, #0x0                   	// #0
    f390:	ldr	x1, [x1]
    f394:	bl	eab0 <grub_script_parse+0x248>
    f398:	cbnz	w0, f82c <grub_script_parse+0xfc4>
    f39c:	mov	x0, x25
    f3a0:	bl	0 <grub_strlen>
    f3a4:	ldr	x1, [sp, #168]
    f3a8:	add	x0, x0, x1
    f3ac:	bl	0 <grub_malloc>
    f3b0:	mov	x19, x0
    f3b4:	cbz	x0, f82c <grub_script_parse+0xfc4>
    f3b8:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    f3bc:	mov	x0, x25
    f3c0:	mov	x3, x19
    f3c4:	add	x2, sp, #0x98
    f3c8:	ldr	x1, [x1]
    f3cc:	mov	w25, #0x1                   	// #1
    f3d0:	bl	eab0 <grub_script_parse+0x248>
    f3d4:	cbnz	w0, f408 <grub_script_parse+0xba0>
    f3d8:	mov	x0, x19
    f3dc:	bl	eef8 <grub_script_parse+0x690>
    f3e0:	mov	x26, x0
    f3e4:	bl	0 <grub_strlen>
    f3e8:	mov	x1, x26
    f3ec:	mov	x2, x0
    f3f0:	add	x0, sp, #0x80
    f3f4:	bl	11390 <grub_script_argv_append>
    f3f8:	mov	w25, w0
    f3fc:	mov	x0, x26
    f400:	cbnz	w25, f9b8 <grub_script_parse+0x1150>
    f404:	bl	0 <grub_free>
    f408:	mov	x0, x19
    f40c:	bl	0 <grub_free>
    f410:	ldr	x0, [sp, #160]
    f414:	mov	x19, #0x0                   	// #0
    f418:	cbz	x0, f43c <grub_script_parse+0xbd4>
    f41c:	nop
    f420:	ldr	x1, [sp, #152]
    f424:	ldr	x0, [x1, x19, lsl #3]
    f428:	add	x19, x19, #0x1
    f42c:	bl	0 <grub_free>
    f430:	ldr	x1, [sp, #160]
    f434:	cmp	x19, x1
    f438:	b.cc	f420 <grub_script_parse+0xbb8>  // b.lo, b.ul, b.last
    f43c:	ldr	x0, [sp, #152]
    f440:	bl	0 <grub_free>
    f444:	cbz	w25, f6f8 <grub_script_parse+0xe90>
    f448:	ldp	x27, x28, [sp, #80]
    f44c:	mov	x0, x23
    f450:	bl	11288 <grub_script_argv_free>
    f454:	mov	w0, #0x1                   	// #1
    f458:	ldp	x19, x20, [sp, #16]
    f45c:	ldp	x21, x22, [sp, #32]
    f460:	ldp	x23, x24, [sp, #48]
    f464:	ldp	x25, x26, [sp, #64]
    f468:	ldp	x29, x30, [sp], #176
    f46c:	ret
    f470:	cbnz	w19, f6f8 <grub_script_parse+0xe90>
    f474:	add	x0, sp, #0x98
    f478:	ldr	x25, [x20, #8]
    f47c:	str	wzr, [sp, #152]
    f480:	stp	xzr, xzr, [sp, #160]
    f484:	bl	112e8 <grub_script_argv_next>
    f488:	mov	w27, w0
    f48c:	cbnz	w0, f850 <grub_script_parse+0xfe8>
    f490:	mov	x0, x25
    f494:	bl	e990 <grub_script_parse+0x128>
    f498:	cbz	w0, f864 <grub_script_parse+0xffc>
    f49c:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    f4a0:	ldr	x26, [x0]
    f4a4:	ldr	x0, [x26]
    f4a8:	cbz	x0, f838 <grub_script_parse+0xfd0>
    f4ac:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    f4b0:	mov	x0, x25
    f4b4:	ldr	x1, [x1]
    f4b8:	bl	0 <grub_strcmp>
    f4bc:	cbnz	w0, f894 <grub_script_parse+0x102c>
    f4c0:	ldr	x3, [x26]
    f4c4:	adrp	x2, 0 <grub_normal_free_menu-0x268>
    f4c8:	mov	x1, #0xe                   	// #14
    f4cc:	add	x0, sp, #0x70
    f4d0:	ldr	x2, [x2]
    f4d4:	ldr	w3, [x3, #8]
    f4d8:	bl	0 <grub_snprintf>
    f4dc:	add	x0, sp, #0x70
    f4e0:	bl	0 <grub_strlen>
    f4e4:	add	x1, sp, #0x70
    f4e8:	mov	x2, x0
    f4ec:	add	x0, sp, #0x98
    f4f0:	bl	11390 <grub_script_argv_append>
    f4f4:	cbnz	w0, f850 <grub_script_parse+0xfe8>
    f4f8:	ldr	x25, [sp, #160]
    f4fc:	mov	x26, #0x0                   	// #0
    f500:	cbz	x25, fba0 <grub_script_parse+0x1338>
    f504:	ldr	x19, [x25, x26, lsl #3]
    f508:	cbz	x19, f5d0 <grub_script_parse+0xd68>
    f50c:	nop
    f510:	cbnz	w27, f5bc <grub_script_parse+0xd54>
    f514:	cbnz	x26, f7ec <grub_script_parse+0xf84>
    f518:	ldr	w0, [x20]
    f51c:	cbnz	w0, f780 <grub_script_parse+0xf18>
    f520:	mov	x0, x19
    f524:	bl	0 <grub_strlen>
    f528:	lsl	w0, w0, #1
    f52c:	add	w0, w0, #0x1
    f530:	sxtw	x0, w0
    f534:	bl	0 <grub_malloc>
    f538:	mov	x28, x0
    f53c:	cbz	x0, f7c4 <grub_script_parse+0xf5c>
    f540:	ldrb	w2, [x19], #1
    f544:	mov	x3, x0
    f548:	cbnz	w2, f564 <grub_script_parse+0xcfc>
    f54c:	b	f954 <grub_script_parse+0x10ec>
    f550:	mov	x4, x3
    f554:	mov	x3, x5
    f558:	strb	w2, [x4]
    f55c:	ldrb	w2, [x19], #1
    f560:	cbz	w2, f598 <grub_script_parse+0xd30>
    f564:	add	x4, x3, #0x1
    f568:	cmp	w2, #0x5c
    f56c:	mov	x5, x4
    f570:	b.ne	f550 <grub_script_parse+0xce8>  // b.any
    f574:	strb	w2, [x3]
    f578:	ldrb	w0, [x19]
    f57c:	cmp	w0, #0x3f
    f580:	ccmp	w0, w21, #0x4, ne  // ne = any
    f584:	b.eq	f7dc <grub_script_parse+0xf74>  // b.none
    f588:	strb	w2, [x4]
    f58c:	add	x3, x3, #0x2
    f590:	ldrb	w2, [x19], #1
    f594:	cbnz	w2, f564 <grub_script_parse+0xcfc>
    f598:	sub	x2, x3, x28
    f59c:	mov	x1, x28
    f5a0:	strb	wzr, [x3]
    f5a4:	add	x0, sp, #0x80
    f5a8:	bl	11390 <grub_script_argv_append>
    f5ac:	mov	w27, w0
    f5b0:	mov	x0, x28
    f5b4:	bl	0 <grub_free>
    f5b8:	ldr	x19, [x25, x26, lsl #3]
    f5bc:	add	x26, x26, #0x1
    f5c0:	mov	x0, x19
    f5c4:	bl	0 <grub_free>
    f5c8:	ldr	x19, [x25, x26, lsl #3]
    f5cc:	cbnz	x19, f510 <grub_script_parse+0xca8>
    f5d0:	mov	x0, x25
    f5d4:	bl	0 <grub_free>
    f5d8:	cbnz	w27, f448 <grub_script_parse+0xbe0>
    f5dc:	ldr	x20, [x20, #24]
    f5e0:	cbnz	x20, f2f0 <grub_script_parse+0xa88>
    f5e4:	ldr	x22, [x22]
    f5e8:	cbnz	x22, f2cc <grub_script_parse+0xa64>
    f5ec:	ldr	w0, [sp, #128]
    f5f0:	ldr	x1, [sp, #136]
    f5f4:	sub	w0, w0, #0x1
    f5f8:	ldp	x27, x28, [sp, #80]
    f5fc:	add	x1, x1, w0, uxtw #3
    f600:	ldr	x1, [x1]
    f604:	cbz	x1, fbc8 <grub_script_parse+0x1360>
    f608:	ldp	x0, x1, [sp, #128]
    f60c:	stp	x0, x1, [sp, #152]
    f610:	ldr	x0, [sp, #160]
    f614:	ldr	x1, [sp, #144]
    f618:	ldr	x0, [x0]
    f61c:	str	wzr, [sp, #128]
    f620:	str	xzr, [sp, #136]
    f624:	str	x1, [sp, #168]
    f628:	cbz	x0, fac4 <grub_script_parse+0x125c>
    f62c:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    f630:	mov	x21, #0x0                   	// #0
    f634:	ldr	x22, [x1]
    f638:	str	xzr, [sp, #112]
    f63c:	ldr	x1, [x22]
    f640:	cbz	x1, fae8 <grub_script_parse+0x1280>
    f644:	ldr	x2, [x1]
    f648:	add	x1, sp, #0x70
    f64c:	blr	x2
    f650:	cbnz	w0, fbc0 <grub_script_parse+0x1358>
    f654:	ldr	x0, [sp, #112]
    f658:	cbz	x0, fae8 <grub_script_parse+0x1280>
    f65c:	ldr	x2, [x0]
    f660:	add	x23, sp, #0x80
    f664:	mov	x20, #0x0                   	// #0
    f668:	mov	w1, #0x0                   	// #0
    f66c:	cbz	x2, fb98 <grub_script_parse+0x1330>
    f670:	add	x19, x20, #0x8
    f674:	cbnz	w1, f688 <grub_script_parse+0xe20>
    f678:	add	x0, sp, #0x80
    f67c:	bl	112e8 <grub_script_argv_next>
    f680:	cbz	w0, fa70 <grub_script_parse+0x1208>
    f684:	ldr	x0, [sp, #112]
    f688:	ldr	x0, [x0, x20]
    f68c:	mov	x20, x19
    f690:	bl	0 <grub_free>
    f694:	ldr	x0, [sp, #112]
    f698:	ldr	x1, [x0, x19]
    f69c:	add	x19, x19, #0x8
    f6a0:	cbnz	x1, f688 <grub_script_parse+0xe20>
    f6a4:	bl	0 <grub_free>
    f6a8:	add	x0, sp, #0x98
    f6ac:	bl	11288 <grub_script_argv_free>
    f6b0:	b	f44c <grub_script_parse+0xbe4>
    f6b4:	cmp	w19, #0x5
    f6b8:	b.hi	f70c <grub_script_parse+0xea4>  // b.pmore
    f6bc:	ldr	x0, [x20, #8]
    f6c0:	bl	eef8 <grub_script_parse+0x690>
    f6c4:	mov	x19, x0
    f6c8:	cbz	x0, f448 <grub_script_parse+0xbe0>
    f6cc:	bl	0 <grub_strlen>
    f6d0:	mov	x2, x0
    f6d4:	mov	x1, x19
    f6d8:	add	x0, sp, #0x80
    f6dc:	bl	11390 <grub_script_argv_append>
    f6e0:	mov	w1, w0
    f6e4:	mov	x0, x19
    f6e8:	mov	w19, w1
    f6ec:	bl	0 <grub_free>
    f6f0:	cbnz	w19, f448 <grub_script_parse+0xbe0>
    f6f4:	nop
    f6f8:	ldr	x20, [x20, #24]
    f6fc:	cbnz	x20, f2f0 <grub_script_parse+0xa88>
    f700:	ldr	x22, [x22]
    f704:	cbnz	x22, f2cc <grub_script_parse+0xa64>
    f708:	b	f5ec <grub_script_parse+0xd84>
    f70c:	cmp	w19, #0x6
    f710:	b.ne	f6f8 <grub_script_parse+0xe90>  // b.any
    f714:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    f718:	add	x0, sp, #0x80
    f71c:	mov	x2, #0x1                   	// #1
    f720:	ldr	x1, [x1]
    f724:	bl	11390 <grub_script_argv_append>
    f728:	cbnz	w0, f448 <grub_script_parse+0xbe0>
    f72c:	ldr	x0, [x20, #8]
    f730:	bl	eef8 <grub_script_parse+0x690>
    f734:	mov	x19, x0
    f738:	cbz	x0, f448 <grub_script_parse+0xbe0>
    f73c:	bl	0 <grub_strlen>
    f740:	mov	x2, x0
    f744:	mov	x1, x19
    f748:	add	x0, sp, #0x80
    f74c:	bl	11390 <grub_script_argv_append>
    f750:	cbnz	w0, fa60 <grub_script_parse+0x11f8>
    f754:	mov	x0, x19
    f758:	bl	0 <grub_free>
    f75c:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    f760:	add	x0, sp, #0x80
    f764:	mov	x2, #0x1                   	// #1
    f768:	ldr	x1, [x1]
    f76c:	bl	11390 <grub_script_argv_append>
    f770:	cbnz	w0, f448 <grub_script_parse+0xbe0>
    f774:	ldr	x0, [x20, #16]
    f778:	str	x0, [sp, #144]
    f77c:	b	f6f8 <grub_script_parse+0xe90>
    f780:	mov	x0, x19
    f784:	bl	eef8 <grub_script_parse+0x690>
    f788:	mov	x19, x0
    f78c:	cbz	x0, f7c4 <grub_script_parse+0xf5c>
    f790:	bl	0 <grub_strlen>
    f794:	mov	x2, x0
    f798:	mov	x1, x19
    f79c:	add	x0, sp, #0x80
    f7a0:	bl	11390 <grub_script_argv_append>
    f7a4:	mov	w27, w0
    f7a8:	mov	x0, x19
    f7ac:	bl	0 <grub_free>
    f7b0:	ldr	x19, [x25, x26, lsl #3]
    f7b4:	add	x26, x26, #0x1
    f7b8:	mov	x0, x19
    f7bc:	bl	0 <grub_free>
    f7c0:	b	f5c8 <grub_script_parse+0xd60>
    f7c4:	ldr	x19, [x25, x26, lsl #3]
    f7c8:	mov	w27, #0x1                   	// #1
    f7cc:	add	x26, x26, #0x1
    f7d0:	mov	x0, x19
    f7d4:	bl	0 <grub_free>
    f7d8:	b	f5c8 <grub_script_parse+0xd60>
    f7dc:	add	x4, x3, #0x2
    f7e0:	add	x3, x3, #0x3
    f7e4:	sturb	w2, [x3, #-2]
    f7e8:	b	f558 <grub_script_parse+0xcf0>
    f7ec:	add	x0, sp, #0x80
    f7f0:	bl	112e8 <grub_script_argv_next>
    f7f4:	cbnz	w0, f7c4 <grub_script_parse+0xf5c>
    f7f8:	ldr	x19, [x25, x26, lsl #3]
    f7fc:	b	f518 <grub_script_parse+0xcb0>
    f800:	ldr	x19, [x20, #8]
    f804:	ldrb	w0, [x19]
    f808:	cbz	w0, f6f8 <grub_script_parse+0xe90>
    f80c:	mov	x0, x19
    f810:	bl	0 <grub_strlen>
    f814:	mov	x1, x19
    f818:	mov	x2, x0
    f81c:	add	x0, sp, #0x80
    f820:	bl	11390 <grub_script_argv_append>
    f824:	cbz	w0, f6f8 <grub_script_parse+0xe90>
    f828:	b	f448 <grub_script_parse+0xbe0>
    f82c:	mov	w25, #0x1                   	// #1
    f830:	mov	x19, #0x0                   	// #0
    f834:	b	f408 <grub_script_parse+0xba0>
    f838:	add	x0, sp, #0x98
    f83c:	mov	x2, #0x0                   	// #0
    f840:	mov	x1, #0x0                   	// #0
    f844:	bl	11390 <grub_script_argv_append>
    f848:	cbz	w0, f4f8 <grub_script_parse+0xc90>
    f84c:	nop
    f850:	add	x0, sp, #0x98
    f854:	bl	11288 <grub_script_argv_free>
    f858:	mov	x0, #0x0                   	// #0
    f85c:	bl	0 <grub_free>
    f860:	b	f6f8 <grub_script_parse+0xe90>
    f864:	mov	x0, x25
    f868:	bl	0 <grub_env_get>
    f86c:	mov	x25, x0
    f870:	cbz	x0, f4f8 <grub_script_parse+0xc90>
    f874:	ldrb	w1, [x0]
    f878:	cbz	w1, f4f8 <grub_script_parse+0xc90>
    f87c:	cbnz	w19, f99c <grub_script_parse+0x1134>
    f880:	mov	x1, x25
    f884:	add	x0, sp, #0x98
    f888:	bl	11538 <grub_script_argv_split_append>
    f88c:	cbz	w0, f4f8 <grub_script_parse+0xc90>
    f890:	b	f850 <grub_script_parse+0xfe8>
    f894:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    f898:	mov	x0, x25
    f89c:	ldr	x1, [x1]
    f8a0:	bl	0 <grub_strcmp>
    f8a4:	cbnz	w0, f9c4 <grub_script_parse+0x115c>
    f8a8:	ldr	x0, [x26]
    f8ac:	ldr	w0, [x0, #8]
    f8b0:	cbz	w0, f4f8 <grub_script_parse+0xc90>
    f8b4:	mov	w25, #0x0                   	// #0
    f8b8:	adrp	x28, 0 <grub_normal_free_menu-0x268>
    f8bc:	cbnz	w19, f900 <grub_script_parse+0x1098>
    f8c0:	cbz	w25, f8d0 <grub_script_parse+0x1068>
    f8c4:	add	x0, sp, #0x98
    f8c8:	bl	112e8 <grub_script_argv_next>
    f8cc:	cbnz	w0, f850 <grub_script_parse+0xfe8>
    f8d0:	ldr	x1, [x26]
    f8d4:	add	x0, sp, #0x98
    f8d8:	ldr	x1, [x1, #16]
    f8dc:	ldr	x1, [x1, w25, uxtw #3]
    f8e0:	bl	11538 <grub_script_argv_split_append>
    f8e4:	cbnz	w0, f850 <grub_script_parse+0xfe8>
    f8e8:	ldr	x0, [x26]
    f8ec:	add	w25, w25, #0x1
    f8f0:	ldr	w0, [x0, #8]
    f8f4:	cmp	w25, w0
    f8f8:	b.cs	f4f8 <grub_script_parse+0xc90>  // b.hs, b.nlast
    f8fc:	cbz	w19, f8c0 <grub_script_parse+0x1058>
    f900:	cbz	w25, f918 <grub_script_parse+0x10b0>
    f904:	ldr	x1, [x28]
    f908:	add	x0, sp, #0x98
    f90c:	mov	x2, #0x1                   	// #1
    f910:	bl	11390 <grub_script_argv_append>
    f914:	cbnz	w0, f850 <grub_script_parse+0xfe8>
    f918:	ldr	x0, [x26]
    f91c:	ldr	x0, [x0, #16]
    f920:	ldr	x24, [x0, w25, uxtw #3]
    f924:	mov	x0, x24
    f928:	bl	0 <grub_strlen>
    f92c:	mov	x1, x24
    f930:	mov	x2, x0
    f934:	add	x0, sp, #0x98
    f938:	bl	11390 <grub_script_argv_append>
    f93c:	cbz	w0, f8e8 <grub_script_parse+0x1080>
    f940:	add	x0, sp, #0x98
    f944:	bl	11288 <grub_script_argv_free>
    f948:	mov	x0, #0x0                   	// #0
    f94c:	bl	0 <grub_free>
    f950:	b	f6f8 <grub_script_parse+0xe90>
    f954:	mov	x2, #0x0                   	// #0
    f958:	b	f59c <grub_script_parse+0xd34>
    f95c:	mov	x0, #0x0                   	// #0
    f960:	b	f344 <grub_script_parse+0xadc>
    f964:	mov	x0, x25
    f968:	mov	w2, #0xa                   	// #10
    f96c:	mov	x1, #0x0                   	// #0
    f970:	bl	0 <grub_strtoul>
    f974:	cbz	x0, f4f8 <grub_script_parse+0xc90>
    f978:	ldr	x1, [x26]
    f97c:	ldr	w2, [x1, #8]
    f980:	cmp	x0, x2
    f984:	b.hi	f4f8 <grub_script_parse+0xc90>  // b.pmore
    f988:	ldr	x1, [x1, #16]
    f98c:	add	x0, x1, x0, lsl #3
    f990:	ldur	x25, [x0, #-8]
    f994:	cbz	w19, f880 <grub_script_parse+0x1018>
    f998:	mov	x0, x25
    f99c:	bl	0 <grub_strlen>
    f9a0:	mov	x2, x0
    f9a4:	mov	x1, x25
    f9a8:	add	x0, sp, #0x98
    f9ac:	bl	11390 <grub_script_argv_append>
    f9b0:	cbz	w0, f4f8 <grub_script_parse+0xc90>
    f9b4:	b	f850 <grub_script_parse+0xfe8>
    f9b8:	mov	w25, #0x1                   	// #1
    f9bc:	bl	0 <grub_free>
    f9c0:	b	f408 <grub_script_parse+0xba0>
    f9c4:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    f9c8:	mov	x0, x25
    f9cc:	ldr	x1, [x1]
    f9d0:	bl	0 <grub_strcmp>
    f9d4:	cbnz	w0, f964 <grub_script_parse+0x10fc>
    f9d8:	ldr	x0, [x26]
    f9dc:	mov	w25, #0x0                   	// #0
    f9e0:	ldr	w1, [x0, #8]
    f9e4:	cbz	w1, f4f8 <grub_script_parse+0xc90>
    f9e8:	ldr	x1, [x0, #16]
    f9ec:	add	x0, sp, #0x98
    f9f0:	ldr	x28, [x1, w25, uxtw #3]
    f9f4:	add	w25, w25, #0x1
    f9f8:	cbnz	w19, fa40 <grub_script_parse+0x11d8>
    f9fc:	mov	x1, x28
    fa00:	bl	11538 <grub_script_argv_split_append>
    fa04:	cbnz	w0, f850 <grub_script_parse+0xfe8>
    fa08:	ldr	x0, [x26]
    fa0c:	ldr	w1, [x0, #8]
    fa10:	cmp	w25, w1
    fa14:	b.cs	f4f8 <grub_script_parse+0xc90>  // b.hs, b.nlast
    fa18:	cbz	w25, f9e8 <grub_script_parse+0x1180>
    fa1c:	add	x0, sp, #0x98
    fa20:	bl	112e8 <grub_script_argv_next>
    fa24:	cbnz	w0, f850 <grub_script_parse+0xfe8>
    fa28:	ldr	x0, [x26]
    fa2c:	ldr	x1, [x0, #16]
    fa30:	add	x0, sp, #0x98
    fa34:	ldr	x28, [x1, w25, uxtw #3]
    fa38:	add	w25, w25, #0x1
    fa3c:	cbz	w19, f9fc <grub_script_parse+0x1194>
    fa40:	mov	x0, x28
    fa44:	bl	0 <grub_strlen>
    fa48:	mov	x1, x28
    fa4c:	mov	x2, x0
    fa50:	add	x0, sp, #0x98
    fa54:	bl	11390 <grub_script_argv_append>
    fa58:	cbz	w0, fa08 <grub_script_parse+0x11a0>
    fa5c:	b	f850 <grub_script_parse+0xfe8>
    fa60:	mov	x0, x19
    fa64:	bl	0 <grub_free>
    fa68:	ldp	x27, x28, [sp, #80]
    fa6c:	b	f44c <grub_script_parse+0xbe4>
    fa70:	ldr	x0, [sp, #112]
    fa74:	ldr	x25, [x0, x20]
    fa78:	mov	x0, x25
    fa7c:	bl	0 <grub_strlen>
    fa80:	mov	x1, x25
    fa84:	mov	x2, x0
    fa88:	add	x0, sp, #0x80
    fa8c:	bl	11390 <grub_script_argv_append>
    fa90:	ldr	x1, [sp, #112]
    fa94:	mov	w25, w0
    fa98:	ldr	x0, [x1, x20]
    fa9c:	bl	0 <grub_free>
    faa0:	ldr	x0, [sp, #112]
    faa4:	ldr	x1, [x0, x19]
    faa8:	cbnz	x1, fbd0 <grub_script_parse+0x1368>
    faac:	bl	0 <grub_free>
    fab0:	cbnz	w25, f6a8 <grub_script_parse+0xe40>
    fab4:	ldr	x0, [sp, #160]
    fab8:	add	x21, x21, #0x8
    fabc:	ldr	x0, [x0, x21]
    fac0:	cbnz	x0, f638 <grub_script_parse+0xdd0>
    fac4:	add	x0, sp, #0x98
    fac8:	bl	11288 <grub_script_argv_free>
    facc:	ldr	x4, [sp, #104]
    fad0:	mov	w0, #0x0                   	// #0
    fad4:	ldp	x2, x3, [sp, #128]
    fad8:	ldr	x1, [sp, #144]
    fadc:	stp	x2, x3, [x4]
    fae0:	str	x1, [x4, #16]
    fae4:	b	f458 <grub_script_parse+0xbf0>
    fae8:	add	x0, sp, #0x80
    faec:	bl	112e8 <grub_script_argv_next>
    faf0:	ldr	x0, [sp, #160]
    faf4:	ldr	x19, [x0, x21]
    faf8:	mov	x0, x19
    fafc:	bl	0 <grub_strlen>
    fb00:	add	w0, w0, #0x1
    fb04:	sxtw	x0, w0
    fb08:	bl	0 <grub_malloc>
    fb0c:	mov	x20, x0
    fb10:	cbz	x0, fab4 <grub_script_parse+0x124c>
    fb14:	mov	x3, x19
    fb18:	ldrb	w4, [x3], #1
    fb1c:	cbz	w4, fbac <grub_script_parse+0x1344>
    fb20:	sub	x0, x0, #0x1
    fb24:	mov	x2, #0x1                   	// #1
    fb28:	b	fb44 <grub_script_parse+0x12dc>
    fb2c:	mov	x19, x3
    fb30:	strb	w4, [x0, x2]
    fb34:	mov	x3, x19
    fb38:	add	x2, x2, #0x1
    fb3c:	ldrb	w4, [x3], #1
    fb40:	cbz	w4, fb6c <grub_script_parse+0x1304>
    fb44:	cmp	w4, #0x5c
    fb48:	mov	w5, w2
    fb4c:	b.ne	fb2c <grub_script_parse+0x12c4>  // b.any
    fb50:	ldrb	w1, [x19, #1]
    fb54:	add	x19, x19, #0x2
    fb58:	mov	x3, x19
    fb5c:	strb	w1, [x0, x2]
    fb60:	add	x2, x2, #0x1
    fb64:	ldrb	w4, [x3], #1
    fb68:	cbnz	w4, fb44 <grub_script_parse+0x12dc>
    fb6c:	add	x5, x20, w5, sxtw
    fb70:	strb	wzr, [x5]
    fb74:	mov	x0, x20
    fb78:	bl	0 <grub_strlen>
    fb7c:	mov	x2, x0
    fb80:	mov	x1, x20
    fb84:	add	x0, sp, #0x80
    fb88:	bl	11390 <grub_script_argv_append>
    fb8c:	mov	x0, x20
    fb90:	bl	0 <grub_free>
    fb94:	b	fab4 <grub_script_parse+0x124c>
    fb98:	bl	0 <grub_free>
    fb9c:	b	fab4 <grub_script_parse+0x124c>
    fba0:	mov	x0, #0x0                   	// #0
    fba4:	bl	0 <grub_free>
    fba8:	b	f6f8 <grub_script_parse+0xe90>
    fbac:	mov	x5, x0
    fbb0:	b	fb70 <grub_script_parse+0x1308>
    fbb4:	mov	x1, #0x7fffffff8           	// #34359738360
    fbb8:	mov	w0, #0xffffffff            	// #-1
    fbbc:	b	f600 <grub_script_parse+0xd98>
    fbc0:	add	x23, sp, #0x80
    fbc4:	b	f6a8 <grub_script_parse+0xe40>
    fbc8:	str	w0, [sp, #128]
    fbcc:	b	f608 <grub_script_parse+0xda0>
    fbd0:	cmp	w25, #0x0
    fbd4:	mov	x20, x19
    fbd8:	cset	w1, ne  // ne = any
    fbdc:	b	f670 <grub_script_parse+0xe08>
	...

000000000000fc48 <grub_script_break>:
    fc48:	stp	x29, x30, [sp, #-48]!
    fc4c:	mov	x29, sp
    fc50:	stp	x19, x20, [sp, #16]
    fc54:	mov	x20, x0
    fc58:	str	xzr, [sp, #40]
    fc5c:	cbz	w1, fcf8 <grub_script_break+0xb0>
    fc60:	cmp	w1, #0x1
    fc64:	b.gt	fcdc <grub_script_break+0x94>
    fc68:	ldr	x0, [x2]
    fc6c:	add	x1, sp, #0x28
    fc70:	mov	w2, #0xa                   	// #10
    fc74:	bl	0 <grub_strtoul>
    fc78:	mov	x19, x0
    fc7c:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    fc80:	ldr	x0, [x1]
    fc84:	ldr	w0, [x0]
    fc88:	cbnz	w0, fcec <grub_script_break+0xa4>
    fc8c:	ldr	x0, [sp, #40]
    fc90:	ldrb	w0, [x0]
    fc94:	cbnz	w0, fd00 <grub_script_break+0xb8>
    fc98:	cbz	x19, fd14 <grub_script_break+0xcc>
    fc9c:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    fca0:	ldr	x0, [x20, #16]
    fca4:	ldr	x1, [x1]
    fca8:	bl	0 <grub_strcmp>
    fcac:	cmp	w0, #0x0
    fcb0:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    fcb4:	cset	x3, ne  // ne = any
    fcb8:	mov	w0, #0x0                   	// #0
    fcbc:	ldr	x1, [x1]
    fcc0:	ldr	x2, [x1, #24]
    fcc4:	cmp	x2, x19
    fcc8:	csel	x19, x19, x2, cs  // cs = hs, nlast
    fccc:	stp	x3, x19, [x1, #8]
    fcd0:	ldp	x19, x20, [sp, #16]
    fcd4:	ldp	x29, x30, [sp], #48
    fcd8:	ret
    fcdc:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    fce0:	mov	w0, #0x12                  	// #18
    fce4:	ldr	x1, [x1]
    fce8:	bl	0 <grub_error>
    fcec:	ldp	x19, x20, [sp, #16]
    fcf0:	ldp	x29, x30, [sp], #48
    fcf4:	ret
    fcf8:	mov	x19, #0x1                   	// #1
    fcfc:	b	fc9c <grub_script_break+0x54>
    fd00:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    fd04:	mov	w0, #0x12                  	// #18
    fd08:	ldr	x1, [x1]
    fd0c:	bl	0 <grub_error>
    fd10:	b	fcec <grub_script_break+0xa4>
    fd14:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    fd18:	mov	w0, #0x12                  	// #18
    fd1c:	ldr	x1, [x1]
    fd20:	bl	0 <grub_error>
    fd24:	b	fcec <grub_script_break+0xa4>
	...

000000000000fd58 <grub_script_shift>:
    fd58:	stp	x29, x30, [sp, #-48]!
    fd5c:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    fd60:	mov	x29, sp
    fd64:	str	x19, [sp, #16]
    fd68:	ldr	x19, [x0]
    fd6c:	str	xzr, [sp, #40]
    fd70:	ldr	x3, [x19]
    fd74:	cbz	x3, fe04 <grub_script_shift+0xac>
    fd78:	cbnz	w1, fdbc <grub_script_shift+0x64>
    fd7c:	ldr	w0, [x3, #8]
    fd80:	mov	x1, #0x1                   	// #1
    fd84:	cmp	x1, w0, uxtw
    fd88:	b.hi	fdf4 <grub_script_shift+0x9c>  // b.pmore
    fd8c:	ldr	x4, [x3, #16]
    fd90:	sub	w2, w0, w1
    fd94:	ldr	w5, [x3, #4]
    fd98:	mov	w0, #0x0                   	// #0
    fd9c:	str	w2, [x3, #8]
    fda0:	add	x2, x4, x1, lsl #3
    fda4:	add	w1, w5, w1
    fda8:	str	w1, [x3, #4]
    fdac:	str	x2, [x3, #16]
    fdb0:	ldr	x19, [sp, #16]
    fdb4:	ldp	x29, x30, [sp], #48
    fdb8:	ret
    fdbc:	cmp	w1, #0x1
    fdc0:	b.gt	fdf4 <grub_script_shift+0x9c>
    fdc4:	ldr	x0, [x2]
    fdc8:	add	x1, sp, #0x28
    fdcc:	mov	w2, #0xa                   	// #10
    fdd0:	bl	0 <grub_strtoul>
    fdd4:	mov	x1, x0
    fdd8:	ldr	x2, [sp, #40]
    fddc:	ldrb	w0, [x2]
    fde0:	cbnz	w0, fdf4 <grub_script_shift+0x9c>
    fde4:	ldr	x3, [x19]
    fde8:	ldr	w0, [x3, #8]
    fdec:	cmp	x1, w0, uxtw
    fdf0:	b.ls	fd8c <grub_script_shift+0x34>  // b.plast
    fdf4:	mov	w0, #0x12                  	// #18
    fdf8:	ldr	x19, [sp, #16]
    fdfc:	ldp	x29, x30, [sp], #48
    fe00:	ret
    fe04:	mov	w0, #0x0                   	// #0
    fe08:	ldr	x19, [sp, #16]
    fe0c:	ldp	x29, x30, [sp], #48
    fe10:	ret
    fe14:	nop
	...

000000000000fe20 <grub_script_setparams>:
    fe20:	stp	x29, x30, [sp, #-80]!
    fe24:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    fe28:	mov	x29, sp
    fe2c:	ldr	x0, [x0]
    fe30:	str	wzr, [sp, #56]
    fe34:	stp	xzr, xzr, [sp, #64]
    fe38:	ldr	x0, [x0]
    fe3c:	cbz	x0, fecc <grub_script_setparams+0xac>
    fe40:	mov	x0, #0x20                  	// #32
    fe44:	stp	x19, x20, [sp, #16]
    fe48:	mov	w20, w1
    fe4c:	str	x21, [sp, #32]
    fe50:	mov	x21, x2
    fe54:	bl	0 <grub_malloc>
    fe58:	mov	x19, x0
    fe5c:	cbz	x0, feb0 <grub_script_setparams+0x90>
    fe60:	mov	x2, x21
    fe64:	mov	w1, w20
    fe68:	add	x0, sp, #0x38
    fe6c:	bl	11488 <grub_script_argv_make>
    fe70:	cbnz	w0, fea8 <grub_script_setparams+0x88>
    fe74:	ldp	x2, x3, [sp, #56]
    fe78:	mov	x0, #0x3                   	// #3
    fe7c:	ldr	x1, [sp, #72]
    fe80:	str	x0, [x19]
    fe84:	stp	x2, x3, [x19, #8]
    fe88:	mov	x0, x19
    fe8c:	str	x1, [x19, #24]
    fe90:	bl	ea28 <grub_script_parse+0x1c0>
    fe94:	mov	w0, #0x0                   	// #0
    fe98:	ldp	x19, x20, [sp, #16]
    fe9c:	ldr	x21, [sp, #32]
    fea0:	ldp	x29, x30, [sp], #80
    fea4:	ret
    fea8:	mov	x0, x19
    feac:	bl	0 <grub_free>
    feb0:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    feb4:	ldp	x19, x20, [sp, #16]
    feb8:	ldr	x0, [x0]
    febc:	ldr	x21, [sp, #32]
    fec0:	ldr	w0, [x0]
    fec4:	ldp	x29, x30, [sp], #80
    fec8:	ret
    fecc:	mov	w0, #0x11                  	// #17
    fed0:	ldp	x29, x30, [sp], #80
    fed4:	ret
	...

000000000000fee8 <grub_script_return>:
    fee8:	stp	x29, x30, [sp, #-48]!
    feec:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    fef0:	mov	x29, sp
    fef4:	str	x19, [sp, #16]
    fef8:	ldr	x19, [x0]
    fefc:	ldr	x0, [x19]
    ff00:	cmp	x0, #0x0
    ff04:	ccmp	w1, #0x1, #0x0, ne  // ne = any
    ff08:	b.gt	ff8c <grub_script_return+0xa4>
    ff0c:	cbnz	w1, ff40 <grub_script_return+0x58>
    ff10:	adrp	x0, 0 <grub_normal_free_menu-0x268>
    ff14:	mov	x1, #0x1                   	// #1
    ff18:	str	x1, [x19, #32]
    ff1c:	ldr	x0, [x0]
    ff20:	bl	0 <grub_env_get>
    ff24:	cbz	x0, ff7c <grub_script_return+0x94>
    ff28:	mov	w2, #0xa                   	// #10
    ff2c:	mov	x1, #0x0                   	// #0
    ff30:	bl	0 <grub_strtoul>
    ff34:	ldr	x19, [sp, #16]
    ff38:	ldp	x29, x30, [sp], #48
    ff3c:	ret
    ff40:	ldr	x0, [x2]
    ff44:	add	x1, sp, #0x28
    ff48:	mov	w2, #0xa                   	// #10
    ff4c:	bl	0 <grub_strtoul>
    ff50:	mov	x1, x0
    ff54:	adrp	x2, 0 <grub_normal_free_menu-0x268>
    ff58:	ldr	x0, [x2]
    ff5c:	ldr	w0, [x0]
    ff60:	cbnz	w0, ff80 <grub_script_return+0x98>
    ff64:	ldr	x0, [sp, #40]
    ff68:	ldrb	w0, [x0]
    ff6c:	cbnz	w0, ffbc <grub_script_return+0xd4>
    ff70:	mov	x0, #0x1                   	// #1
    ff74:	str	x0, [x19, #32]
    ff78:	cbnz	x1, ffa8 <grub_script_return+0xc0>
    ff7c:	mov	w0, #0x0                   	// #0
    ff80:	ldr	x19, [sp, #16]
    ff84:	ldp	x29, x30, [sp], #48
    ff88:	ret
    ff8c:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    ff90:	mov	w0, #0x12                  	// #18
    ff94:	ldr	x1, [x1]
    ff98:	bl	0 <grub_error>
    ff9c:	ldr	x19, [sp, #16]
    ffa0:	ldp	x29, x30, [sp], #48
    ffa4:	ret
    ffa8:	adrp	x2, 0 <grub_normal_free_menu-0x268>
    ffac:	mov	w0, w1
    ffb0:	ldr	x1, [x2]
    ffb4:	bl	0 <grub_error>
    ffb8:	b	ff80 <grub_script_return+0x98>
    ffbc:	adrp	x1, 0 <grub_normal_free_menu-0x268>
    ffc0:	mov	w0, #0x12                  	// #18
    ffc4:	ldr	x1, [x1]
    ffc8:	bl	0 <grub_error>
    ffcc:	b	ff80 <grub_script_return+0x98>
	...

0000000000010000 <grub_script_function_call>:
   10000:	stp	x29, x30, [sp, #-80]!
   10004:	adrp	x3, 0 <grub_normal_free_menu-0x268>
   10008:	mov	x29, sp
   1000c:	stp	x19, x20, [sp, #16]
   10010:	mov	w20, #0x0                   	// #0
   10014:	ldr	x19, [x3]
   10018:	stp	x21, x22, [sp, #32]
   1001c:	add	x3, sp, #0x30
   10020:	ldr	x0, [x0, #8]
   10024:	str	xzr, [sp, #48]
   10028:	str	w1, [sp, #56]
   1002c:	str	x2, [sp, #64]
   10030:	ldr	x22, [x19]
   10034:	str	x3, [x19]
   10038:	ldr	x21, [x19, #24]
   1003c:	str	xzr, [x19, #24]
   10040:	cbz	x0, 10050 <grub_script_function_call+0x50>
   10044:	ldr	x0, [x0, #16]
   10048:	bl	efa8 <grub_script_parse+0x740>
   1004c:	mov	w20, w0
   10050:	mov	x0, x22
   10054:	stp	x21, xzr, [x19, #24]
   10058:	bl	ea28 <grub_script_parse+0x1c0>
   1005c:	mov	w0, w20
   10060:	ldp	x19, x20, [sp, #16]
   10064:	ldp	x21, x22, [sp, #32]
   10068:	ldp	x29, x30, [sp], #80
   1006c:	ret
	...

0000000000010078 <grub_script_execute_sourcecode>:
   10078:	stp	x29, x30, [sp, #-80]!
   1007c:	mov	x29, sp
   10080:	stp	x19, x20, [sp, #16]
   10084:	str	x0, [sp, #56]
   10088:	cbz	x0, 10124 <grub_script_execute_sourcecode+0xac>
   1008c:	adrp	x0, 0 <grub_normal_free_menu-0x268>
   10090:	str	x21, [sp, #32]
   10094:	ldr	x21, [x0]
   10098:	b	100c0 <grub_script_execute_sourcecode+0x48>
   1009c:	ldr	x0, [x0, #16]
   100a0:	bl	efa8 <grub_script_parse+0x740>
   100a4:	mov	w20, w0
   100a8:	mov	x0, x19
   100ac:	bl	e398 <grub_script_free>
   100b0:	ldr	x0, [sp, #72]
   100b4:	bl	0 <grub_free>
   100b8:	ldr	x0, [sp, #56]
   100bc:	cbz	x0, 10110 <grub_script_execute_sourcecode+0x98>
   100c0:	add	x2, sp, #0x38
   100c4:	mov	w1, #0x0                   	// #0
   100c8:	add	x0, sp, #0x48
   100cc:	bl	ee78 <grub_script_parse+0x610>
   100d0:	ldr	x0, [sp, #72]
   100d4:	add	x2, sp, #0x38
   100d8:	mov	x1, x21
   100dc:	bl	e868 <grub_script_parse>
   100e0:	mov	x19, x0
   100e4:	cbnz	x0, 1009c <grub_script_execute_sourcecode+0x24>
   100e8:	adrp	x1, 0 <grub_normal_free_menu-0x268>
   100ec:	ldr	x0, [sp, #72]
   100f0:	ldr	x1, [x1]
   100f4:	ldr	w20, [x1]
   100f8:	bl	0 <grub_free>
   100fc:	ldr	x21, [sp, #32]
   10100:	mov	w0, w20
   10104:	ldp	x19, x20, [sp, #16]
   10108:	ldp	x29, x30, [sp], #80
   1010c:	ret
   10110:	mov	w0, w20
   10114:	ldp	x19, x20, [sp, #16]
   10118:	ldr	x21, [sp, #32]
   1011c:	ldp	x29, x30, [sp], #80
   10120:	ret
   10124:	mov	w20, #0x0                   	// #0
   10128:	b	10100 <grub_script_execute_sourcecode+0x88>
   1012c:	nop
	...

0000000000010140 <grub_script_execute_new_scope>:
   10140:	stp	x29, x30, [sp, #-64]!
   10144:	adrp	x4, 0 <grub_normal_free_menu-0x268>
   10148:	mov	x29, sp
   1014c:	stp	x19, x20, [sp, #16]
   10150:	add	x3, sp, #0x20
   10154:	ldr	x19, [x4]
   10158:	str	wzr, [sp, #32]
   1015c:	str	w1, [sp, #40]
   10160:	str	x2, [sp, #48]
   10164:	ldr	x20, [x19]
   10168:	str	x3, [x19]
   1016c:	bl	10078 <grub_script_execute_sourcecode>
   10170:	str	x20, [x19]
   10174:	ldp	x19, x20, [sp, #16]
   10178:	ldp	x29, x30, [sp], #64
   1017c:	ret
	...

0000000000010188 <grub_script_execute_cmdline>:
   10188:	stp	x29, x30, [sp, #-128]!
   1018c:	mov	x29, sp
   10190:	ldr	x0, [x0, #16]
   10194:	add	x1, sp, #0x68
   10198:	stp	x19, x20, [sp, #16]
   1019c:	str	wzr, [sp, #104]
   101a0:	stp	xzr, xzr, [sp, #112]
   101a4:	bl	f298 <grub_script_parse+0xa30>
   101a8:	cbnz	w0, 103e4 <grub_script_execute_cmdline+0x25c>
   101ac:	stp	x21, x22, [sp, #32]
   101b0:	mov	w22, w0
   101b4:	ldr	x0, [sp, #112]
   101b8:	ldr	x0, [x0]
   101bc:	cbz	x0, 103e0 <grub_script_execute_cmdline+0x258>
   101c0:	ldr	w1, [sp, #104]
   101c4:	mov	w21, #0x0                   	// #0
   101c8:	stp	x23, x24, [sp, #48]
   101cc:	mov	w19, #0x0                   	// #0
   101d0:	str	x25, [sp, #64]
   101d4:	mov	x25, #0x0                   	// #0
   101d8:	cbnz	w1, 10378 <grub_script_execute_cmdline+0x1f0>
   101dc:	mov	x0, x25
   101e0:	bl	0 <grub_malloc>
   101e4:	mov	x23, x0
   101e8:	cbz	x0, 10400 <grub_script_execute_cmdline+0x278>
   101ec:	nop
   101f0:	ldr	w0, [sp, #104]
   101f4:	cbz	w0, 10238 <grub_script_execute_cmdline+0xb0>
   101f8:	adrp	x0, 0 <grub_normal_free_menu-0x268>
   101fc:	mov	w20, #0x0                   	// #0
   10200:	mov	w19, #0x0                   	// #0
   10204:	ldr	x24, [x0]
   10208:	sub	w1, w21, w20
   1020c:	ldr	x3, [sp, #112]
   10210:	sxtw	x1, w1
   10214:	add	x0, x23, w20, sxtw
   10218:	mov	x2, x24
   1021c:	ldr	x3, [x3, w19, uxtw #3]
   10220:	add	w19, w19, #0x1
   10224:	bl	0 <grub_snprintf>
   10228:	add	w20, w20, w0
   1022c:	ldr	w1, [sp, #104]
   10230:	cmp	w1, w19
   10234:	b.hi	10208 <grub_script_execute_cmdline+0x80>  // b.pmore
   10238:	add	x25, x23, x25
   1023c:	mov	w1, #0x2                   	// #2
   10240:	mov	x0, x23
   10244:	sturb	wzr, [x25, #-1]
   10248:	bl	0 <grub_verify_string>
   1024c:	mov	x0, x23
   10250:	bl	0 <grub_free>
   10254:	ldr	x19, [sp, #112]
   10258:	adrp	x0, 0 <grub_normal_free_menu-0x268>
   1025c:	ldr	w20, [sp, #104]
   10260:	ldr	x1, [x0]
   10264:	ldr	x21, [x19]
   10268:	mov	x0, x21
   1026c:	bl	0 <grub_strcmp>
   10270:	cbnz	w0, 10430 <grub_script_execute_cmdline+0x2a8>
   10274:	ldr	w1, [sp, #104]
   10278:	cmp	w1, #0x1
   1027c:	b.ls	1043c <grub_script_execute_cmdline+0x2b4>  // b.plast
   10280:	ldr	x19, [sp, #112]
   10284:	ldr	x21, [x19, #8]
   10288:	cbz	x21, 1043c <grub_script_execute_cmdline+0x2b4>
   1028c:	sub	w20, w1, #0x2
   10290:	add	x19, x19, #0x10
   10294:	mov	w22, #0x1                   	// #1
   10298:	adrp	x0, 0 <grub_normal_free_menu-0x268>
   1029c:	mov	x1, x21
   102a0:	ldr	x0, [x0]
   102a4:	ldr	x0, [x0]
   102a8:	bl	0 <grub_named_list_find>
   102ac:	cbz	x0, 10454 <grub_script_execute_cmdline+0x2cc>
   102b0:	adrp	x2, 0 <grub_normal_free_menu-0x268>
   102b4:	ldr	w1, [x0, #40]
   102b8:	ldr	x2, [x2]
   102bc:	ldr	w2, [x2]
   102c0:	cbz	w2, 103ac <grub_script_execute_cmdline+0x224>
   102c4:	tbnz	w1, #9, 103ac <grub_script_execute_cmdline+0x224>
   102c8:	adrp	x1, 0 <grub_normal_free_menu-0x268>
   102cc:	mov	x2, x21
   102d0:	mov	w0, #0x1f                  	// #31
   102d4:	ldr	x1, [x1]
   102d8:	bl	0 <grub_error>
   102dc:	mov	w19, w0
   102e0:	adrp	x1, 0 <grub_normal_free_menu-0x268>
   102e4:	ldr	x23, [x1]
   102e8:	cbz	w22, 10310 <grub_script_execute_cmdline+0x188>
   102ec:	nop
   102f0:	cmp	w19, #0x1
   102f4:	b.eq	10484 <grub_script_execute_cmdline+0x2fc>  // b.none
   102f8:	cbnz	w19, 10490 <grub_script_execute_cmdline+0x308>
   102fc:	adrp	x1, 0 <grub_normal_free_menu-0x268>
   10300:	mov	w0, #0x1                   	// #1
   10304:	ldr	x1, [x1]
   10308:	bl	0 <grub_error>
   1030c:	mov	w19, w0
   10310:	add	x0, sp, #0x68
   10314:	bl	11288 <grub_script_argv_free>
   10318:	ldr	w0, [x23]
   1031c:	cmp	w0, #0x1
   10320:	b.ne	10328 <grub_script_execute_cmdline+0x1a0>  // b.any
   10324:	str	wzr, [x23]
   10328:	bl	0 <grub_print_error>
   1032c:	adrp	x0, 0 <grub_normal_free_menu-0x268>
   10330:	mov	w3, w19
   10334:	mov	x1, #0x12                  	// #18
   10338:	ldr	x2, [x0]
   1033c:	add	x0, sp, #0x50
   10340:	bl	0 <grub_snprintf>
   10344:	adrp	x0, 0 <grub_normal_free_menu-0x268>
   10348:	add	x1, sp, #0x50
   1034c:	ldr	x0, [x0]
   10350:	bl	0 <grub_env_set>
   10354:	ldp	x21, x22, [sp, #32]
   10358:	ldp	x23, x24, [sp, #48]
   1035c:	ldr	x25, [sp, #64]
   10360:	mov	w0, w19
   10364:	ldp	x19, x20, [sp, #16]
   10368:	ldp	x29, x30, [sp], #128
   1036c:	ret
   10370:	ldr	x0, [sp, #112]
   10374:	ldr	x0, [x0, w19, uxtw #3]
   10378:	bl	0 <grub_strlen>
   1037c:	ldr	w1, [sp, #104]
   10380:	add	x0, x0, #0x1
   10384:	add	w19, w19, #0x1
   10388:	add	w21, w21, w0
   1038c:	cmp	w1, w19
   10390:	b.hi	10370 <grub_script_execute_cmdline+0x1e8>  // b.pmore
   10394:	sxtw	x25, w21
   10398:	mov	x0, x25
   1039c:	bl	0 <grub_malloc>
   103a0:	mov	x23, x0
   103a4:	cbnz	x0, 101f0 <grub_script_execute_cmdline+0x68>
   103a8:	b	10400 <grub_script_execute_cmdline+0x278>
   103ac:	mov	w2, #0x50                  	// #80
   103b0:	and	w1, w1, w2
   103b4:	cmp	w1, w2
   103b8:	b.eq	1049c <grub_script_execute_cmdline+0x314>  // b.none
   103bc:	ldr	x3, [x0, #32]
   103c0:	mov	x2, x19
   103c4:	mov	w1, w20
   103c8:	blr	x3
   103cc:	mov	w19, w0
   103d0:	adrp	x1, 0 <grub_normal_free_menu-0x268>
   103d4:	ldr	x23, [x1]
   103d8:	cbz	w22, 10310 <grub_script_execute_cmdline+0x188>
   103dc:	b	102f0 <grub_script_execute_cmdline+0x168>
   103e0:	ldp	x21, x22, [sp, #32]
   103e4:	adrp	x0, 0 <grub_normal_free_menu-0x268>
   103e8:	ldr	x0, [x0]
   103ec:	ldr	w19, [x0]
   103f0:	mov	w0, w19
   103f4:	ldp	x19, x20, [sp, #16]
   103f8:	ldp	x29, x30, [sp], #128
   103fc:	ret
   10400:	adrp	x1, 0 <grub_normal_free_menu-0x268>
   10404:	mov	w0, #0x3                   	// #3
   10408:	ldr	x1, [x1]
   1040c:	bl	0 <grub_error>
   10410:	mov	w19, w0
   10414:	mov	w0, w19
   10418:	ldp	x19, x20, [sp, #16]
   1041c:	ldp	x21, x22, [sp, #32]
   10420:	ldp	x23, x24, [sp, #48]
   10424:	ldr	x25, [sp, #64]
   10428:	ldp	x29, x30, [sp], #128
   1042c:	ret
   10430:	sub	w20, w20, #0x1
   10434:	add	x19, x19, #0x8
   10438:	b	10298 <grub_script_execute_cmdline+0x110>
   1043c:	add	x0, sp, #0x68
   10440:	bl	11288 <grub_script_argv_free>
   10444:	adrp	x1, 0 <grub_normal_free_menu-0x268>
   10448:	mov	w0, #0x12                  	// #18
   1044c:	ldr	x1, [x1]
   10450:	b	1040c <grub_script_execute_cmdline+0x284>
   10454:	adrp	x1, 0 <grub_normal_free_menu-0x268>
   10458:	mov	x0, x21
   1045c:	ldr	x23, [x1]
   10460:	str	wzr, [x23]
   10464:	bl	10a38 <grub_script_function_find>
   10468:	cbz	x0, 104c0 <grub_script_execute_cmdline+0x338>
   1046c:	mov	x2, x19
   10470:	mov	w1, w20
   10474:	bl	10000 <grub_script_function_call>
   10478:	mov	w19, w0
   1047c:	cbz	w22, 10310 <grub_script_execute_cmdline+0x188>
   10480:	b	102f0 <grub_script_execute_cmdline+0x168>
   10484:	mov	w19, #0x0                   	// #0
   10488:	str	wzr, [x23]
   1048c:	b	10310 <grub_script_execute_cmdline+0x188>
   10490:	mov	w19, #0x0                   	// #0
   10494:	bl	0 <grub_print_error>
   10498:	b	10310 <grub_script_execute_cmdline+0x188>
   1049c:	ldr	x3, [sp, #120]
   104a0:	mov	x2, x19
   104a4:	mov	w1, w20
   104a8:	bl	0 <grub_extcmd_dispatcher>
   104ac:	mov	w19, w0
   104b0:	adrp	x1, 0 <grub_normal_free_menu-0x268>
   104b4:	ldr	x23, [x1]
   104b8:	cbz	w22, 10310 <grub_script_execute_cmdline+0x188>
   104bc:	b	102f0 <grub_script_execute_cmdline+0x168>
   104c0:	mov	x0, x21
   104c4:	bl	0 <grub_strdup>
   104c8:	mov	w1, #0x3d                  	// #61
   104cc:	mov	x19, x0
   104d0:	bl	0 <grub_strchr>
   104d4:	mov	x1, x0
   104d8:	cbz	x0, 104ec <grub_script_execute_cmdline+0x364>
   104dc:	str	wzr, [x23]
   104e0:	mov	x0, x19
   104e4:	strb	wzr, [x1], #1
   104e8:	bl	f240 <grub_script_parse+0x9d8>
   104ec:	mov	x0, x19
   104f0:	bl	0 <grub_free>
   104f4:	adrp	x0, 0 <grub_normal_free_menu-0x268>
   104f8:	ldr	w3, [x23]
   104fc:	mov	x1, #0x12                  	// #18
   10500:	mov	w19, #0x0                   	// #0
   10504:	ldr	x2, [x0]
   10508:	add	x0, sp, #0x50
   1050c:	bl	0 <grub_snprintf>
   10510:	adrp	x0, 0 <grub_normal_free_menu-0x268>
   10514:	add	x1, sp, #0x50
   10518:	ldr	x0, [x0]
   1051c:	bl	f240 <grub_script_parse+0x9d8>
   10520:	add	x0, sp, #0x68
   10524:	bl	11288 <grub_script_argv_free>
   10528:	bl	0 <grub_print_error>
   1052c:	ldp	x21, x22, [sp, #32]
   10530:	ldp	x23, x24, [sp, #48]
   10534:	ldr	x25, [sp, #64]
   10538:	b	10360 <grub_script_execute_cmdline+0x1d8>
   1053c:	nop
	...

0000000000010598 <grub_script_execute_cmdlist>:
   10598:	stp	x29, x30, [sp, #-32]!
   1059c:	mov	x29, sp
   105a0:	stp	x19, x20, [sp, #16]
   105a4:	ldr	x19, [x0, #8]
   105a8:	cbz	x19, 105f0 <grub_script_execute_cmdlist+0x58>
   105ac:	adrp	x0, 0 <grub_normal_free_menu-0x268>
   105b0:	mov	w1, #0x0                   	// #0
   105b4:	ldr	x20, [x0]
   105b8:	b	105d4 <grub_script_execute_cmdlist+0x3c>
   105bc:	bl	efa8 <grub_script_parse+0x740>
   105c0:	mov	w1, w0
   105c4:	ldr	x2, [x20, #32]
   105c8:	cbnz	x2, 105e4 <grub_script_execute_cmdlist+0x4c>
   105cc:	ldr	x19, [x19, #8]
   105d0:	cbz	x19, 105e4 <grub_script_execute_cmdlist+0x4c>
   105d4:	ldr	x2, [x20, #16]
   105d8:	mov	x0, x19
   105dc:	cbz	x2, 105bc <grub_script_execute_cmdlist+0x24>
   105e0:	mov	w0, w1
   105e4:	ldp	x19, x20, [sp, #16]
   105e8:	ldp	x29, x30, [sp], #32
   105ec:	ret
   105f0:	mov	w0, #0x0                   	// #0
   105f4:	b	105e4 <grub_script_execute_cmdlist+0x4c>
	...

0000000000010600 <grub_script_execute_cmdif>:
   10600:	stp	x29, x30, [sp, #-32]!
   10604:	mov	x29, sp
   10608:	str	x19, [sp, #16]
   1060c:	mov	x19, x0
   10610:	ldr	x0, [x0, #16]
   10614:	bl	efa8 <grub_script_parse+0x740>
   10618:	adrp	x1, 0 <grub_normal_free_menu-0x268>
   1061c:	ldr	x1, [x1]
   10620:	ldr	x1, [x1, #32]
   10624:	cbz	x1, 10634 <grub_script_execute_cmdif+0x34>
   10628:	ldr	x19, [sp, #16]
   1062c:	ldp	x29, x30, [sp], #32
   10630:	ret
   10634:	adrp	x0, 0 <grub_normal_free_menu-0x268>
   10638:	ldr	x0, [x0]
   1063c:	bl	0 <grub_env_get>
   10640:	adrp	x1, 0 <grub_normal_free_menu-0x268>
   10644:	ldr	x1, [x1]
   10648:	str	wzr, [x1]
   1064c:	cbz	x0, 10660 <grub_script_execute_cmdif+0x60>
   10650:	adrp	x1, 0 <grub_normal_free_menu-0x268>
   10654:	ldr	x1, [x1]
   10658:	bl	0 <grub_strcmp>
   1065c:	cbz	w0, 10670 <grub_script_execute_cmdif+0x70>
   10660:	ldr	x0, [x19, #32]
   10664:	ldr	x19, [sp, #16]
   10668:	ldp	x29, x30, [sp], #32
   1066c:	b	efa8 <grub_script_parse+0x740>
   10670:	ldr	x0, [x19, #24]
   10674:	ldr	x19, [sp, #16]
   10678:	ldp	x29, x30, [sp], #32
   1067c:	b	efa8 <grub_script_parse+0x740>
	...

00000000000106a0 <grub_script_execute_cmdfor>:
   106a0:	stp	x29, x30, [sp, #-80]!
   106a4:	mov	x29, sp
   106a8:	stp	x21, x22, [sp, #32]
   106ac:	mov	x22, x0
   106b0:	add	x1, sp, #0x38
   106b4:	ldr	x0, [x0, #24]
   106b8:	str	wzr, [sp, #56]
   106bc:	stp	xzr, xzr, [sp, #64]
   106c0:	bl	f298 <grub_script_parse+0xa30>
   106c4:	cbnz	w0, 10788 <grub_script_execute_cmdfor+0xe8>
   106c8:	adrp	x0, 0 <grub_normal_free_menu-0x268>
   106cc:	stp	x19, x20, [sp, #16]
   106d0:	ldr	w3, [sp, #56]
   106d4:	ldr	x20, [x0]
   106d8:	mov	w21, w3
   106dc:	ldp	x1, x2, [x20, #16]
   106e0:	add	x0, x2, #0x1
   106e4:	str	x0, [x20, #24]
   106e8:	cbz	w3, 10720 <grub_script_execute_cmdfor+0x80>
   106ec:	mov	w21, #0x0                   	// #0
   106f0:	mov	w19, #0x0                   	// #0
   106f4:	nop
   106f8:	ldr	x2, [x20, #8]
   106fc:	cmp	x1, #0x1
   10700:	cbz	x2, 10708 <grub_script_execute_cmdfor+0x68>
   10704:	b.eq	10744 <grub_script_execute_cmdfor+0xa4>  // b.none
   10708:	cbz	x1, 10748 <grub_script_execute_cmdfor+0xa8>
   1070c:	add	w19, w19, #0x1
   10710:	cmp	w3, w19
   10714:	b.hi	106f8 <grub_script_execute_cmdfor+0x58>  // b.pmore
   10718:	ldr	x2, [x20, #24]
   1071c:	sub	x2, x2, #0x1
   10720:	cbnz	x1, 1077c <grub_script_execute_cmdfor+0xdc>
   10724:	add	x0, sp, #0x38
   10728:	str	x2, [x20, #24]
   1072c:	bl	11288 <grub_script_argv_free>
   10730:	mov	w0, w21
   10734:	ldp	x19, x20, [sp, #16]
   10738:	ldp	x21, x22, [sp, #32]
   1073c:	ldp	x29, x30, [sp], #80
   10740:	ret
   10744:	str	xzr, [x20, #16]
   10748:	ldr	x0, [x22, #16]
   1074c:	ldr	x1, [sp, #64]
   10750:	ldr	x0, [x0, #8]
   10754:	ldr	x1, [x1, w19, uxtw #3]
   10758:	bl	f240 <grub_script_parse+0x9d8>
   1075c:	ldr	x0, [x22, #32]
   10760:	bl	efa8 <grub_script_parse+0x740>
   10764:	mov	w21, w0
   10768:	ldr	x1, [x20, #32]
   1076c:	cbnz	x1, 107a4 <grub_script_execute_cmdfor+0x104>
   10770:	ldr	w3, [sp, #56]
   10774:	ldr	x1, [x20, #16]
   10778:	b	1070c <grub_script_execute_cmdfor+0x6c>
   1077c:	sub	x1, x1, #0x1
   10780:	str	x1, [x20, #16]
   10784:	b	10724 <grub_script_execute_cmdfor+0x84>
   10788:	adrp	x0, 0 <grub_normal_free_menu-0x268>
   1078c:	ldr	x0, [x0]
   10790:	ldr	w21, [x0]
   10794:	mov	w0, w21
   10798:	ldp	x21, x22, [sp, #32]
   1079c:	ldp	x29, x30, [sp], #80
   107a0:	ret
   107a4:	ldp	x1, x2, [x20, #16]
   107a8:	sub	x2, x2, #0x1
   107ac:	cbz	x1, 10724 <grub_script_execute_cmdfor+0x84>
   107b0:	b	1077c <grub_script_execute_cmdfor+0xdc>
   107b4:	nop
	...

00000000000107c8 <grub_script_execute_cmdwhile>:
   107c8:	stp	x29, x30, [sp, #-32]!
   107cc:	adrp	x1, 0 <grub_normal_free_menu-0x268>
   107d0:	mov	x29, sp
   107d4:	stp	x19, x20, [sp, #16]
   107d8:	mov	x20, x0
   107dc:	ldr	x19, [x1]
   107e0:	ldr	x0, [x19, #24]
   107e4:	add	x0, x0, #0x1
   107e8:	str	x0, [x19, #24]
   107ec:	ldr	x0, [x20, #16]
   107f0:	bl	efa8 <grub_script_parse+0x740>
   107f4:	cmp	w0, #0x0
   107f8:	ldr	x2, [x19, #32]
   107fc:	cset	w1, ne  // ne = any
   10800:	cbnz	x2, 1084c <grub_script_execute_cmdwhile+0x84>
   10804:	ldr	w2, [x20, #32]
   10808:	cbz	w2, 10810 <grub_script_execute_cmdwhile+0x48>
   1080c:	cset	w1, eq  // eq = none
   10810:	cbnz	w1, 1084c <grub_script_execute_cmdwhile+0x84>
   10814:	ldr	x0, [x20, #24]
   10818:	bl	efa8 <grub_script_parse+0x740>
   1081c:	ldr	x1, [x19, #32]
   10820:	cbnz	x1, 1084c <grub_script_execute_cmdwhile+0x84>
   10824:	ldr	x1, [x19, #16]
   10828:	cmp	x1, #0x1
   1082c:	b.eq	1086c <grub_script_execute_cmdwhile+0xa4>  // b.none
   10830:	cbnz	x1, 10874 <grub_script_execute_cmdwhile+0xac>
   10834:	ldr	x0, [x20, #16]
   10838:	bl	efa8 <grub_script_parse+0x740>
   1083c:	cmp	w0, #0x0
   10840:	ldr	x2, [x19, #32]
   10844:	cset	w1, ne  // ne = any
   10848:	cbz	x2, 10804 <grub_script_execute_cmdwhile+0x3c>
   1084c:	ldr	x1, [x19, #16]
   10850:	cbnz	x1, 10874 <grub_script_execute_cmdwhile+0xac>
   10854:	ldr	x1, [x19, #24]
   10858:	sub	x1, x1, #0x1
   1085c:	str	x1, [x19, #24]
   10860:	ldp	x19, x20, [sp, #16]
   10864:	ldp	x29, x30, [sp], #32
   10868:	ret
   1086c:	ldr	x2, [x19, #8]
   10870:	cbnz	x2, 10894 <grub_script_execute_cmdwhile+0xcc>
   10874:	sub	x1, x1, #0x1
   10878:	str	x1, [x19, #16]
   1087c:	ldr	x1, [x19, #24]
   10880:	sub	x1, x1, #0x1
   10884:	str	x1, [x19, #24]
   10888:	ldp	x19, x20, [sp, #16]
   1088c:	ldp	x29, x30, [sp], #32
   10890:	ret
   10894:	str	xzr, [x19, #16]
   10898:	b	107ec <grub_script_execute_cmdwhile+0x24>
   1089c:	nop
	...

00000000000108a8 <grub_script_execute>:
   108a8:	cbz	x0, 108b4 <grub_script_execute+0xc>
   108ac:	ldr	x0, [x0, #16]
   108b0:	b	efa8 <grub_script_parse+0x740>
   108b4:	mov	w0, #0x0                   	// #0
   108b8:	ret
   108bc:	nop

00000000000108c0 <grub_script_function_create>:
   108c0:	stp	x29, x30, [sp, #-48]!
   108c4:	mov	x29, sp
   108c8:	stp	x19, x20, [sp, #16]
   108cc:	mov	x19, x0
   108d0:	mov	x0, #0x28                  	// #40
   108d4:	str	x21, [sp, #32]
   108d8:	mov	x21, x1
   108dc:	bl	0 <grub_malloc>
   108e0:	mov	x20, x0
   108e4:	cbz	x0, 10954 <grub_script_function_create+0x94>
   108e8:	ldr	x0, [x19, #8]
   108ec:	bl	0 <grub_strdup>
   108f0:	str	x0, [x20]
   108f4:	mov	x1, x0
   108f8:	cbz	x0, 10998 <grub_script_function_create+0xd8>
   108fc:	adrp	x0, 0 <grub_normal_free_menu-0x268>
   10900:	str	x21, [x20, #8]
   10904:	ldr	x19, [x0]
   10908:	ldr	x2, [x19]
   1090c:	cbnz	x2, 10924 <grub_script_function_create+0x64>
   10910:	b	1094c <grub_script_function_create+0x8c>
   10914:	add	x19, x2, #0x18
   10918:	ldr	x2, [x2, #24]
   1091c:	cbz	x2, 1094c <grub_script_function_create+0x8c>
   10920:	ldr	x1, [x20]
   10924:	ldr	x0, [x2]
   10928:	bl	0 <grub_strcmp>
   1092c:	ldr	x2, [x19]
   10930:	tbnz	w0, #31, 10914 <grub_script_function_create+0x54>
   10934:	cbz	x2, 1094c <grub_script_function_create+0x8c>
   10938:	ldr	x0, [x2]
   1093c:	ldr	x1, [x20]
   10940:	bl	0 <grub_strcmp>
   10944:	cbz	w0, 10968 <grub_script_function_create+0xa8>
   10948:	ldr	x2, [x19]
   1094c:	str	x2, [x20, #24]
   10950:	str	x20, [x19]
   10954:	mov	x0, x20
   10958:	ldp	x19, x20, [sp, #16]
   1095c:	ldr	x21, [sp, #32]
   10960:	ldp	x29, x30, [sp], #48
   10964:	ret
   10968:	ldr	x19, [x19]
   1096c:	ldr	x0, [x19, #8]
   10970:	bl	e398 <grub_script_free>
   10974:	str	x21, [x19, #8]
   10978:	mov	x0, x20
   1097c:	mov	x20, x19
   10980:	bl	0 <grub_free>
   10984:	mov	x0, x20
   10988:	ldp	x19, x20, [sp, #16]
   1098c:	ldr	x21, [sp, #32]
   10990:	ldp	x29, x30, [sp], #48
   10994:	ret
   10998:	mov	x0, x20
   1099c:	mov	x20, #0x0                   	// #0
   109a0:	bl	0 <grub_free>
   109a4:	b	10954 <grub_script_function_create+0x94>
	...

00000000000109b0 <grub_script_function_remove>:
   109b0:	stp	x29, x30, [sp, #-48]!
   109b4:	adrp	x1, 0 <grub_normal_free_menu-0x268>
   109b8:	mov	x29, sp
   109bc:	stp	x19, x20, [sp, #16]
   109c0:	ldr	x20, [x1]
   109c4:	ldr	x19, [x20]
   109c8:	cbz	x19, 10a24 <grub_script_function_remove+0x74>
   109cc:	str	x21, [sp, #32]
   109d0:	mov	x21, x0
   109d4:	b	109e4 <grub_script_function_remove+0x34>
   109d8:	add	x20, x19, #0x18
   109dc:	ldr	x19, [x19, #24]
   109e0:	cbz	x19, 10a20 <grub_script_function_remove+0x70>
   109e4:	ldr	x1, [x19]
   109e8:	mov	x0, x21
   109ec:	bl	0 <grub_strcmp>
   109f0:	cbnz	w0, 109d8 <grub_script_function_remove+0x28>
   109f4:	ldr	x0, [x19]
   109f8:	ldr	x1, [x19, #24]
   109fc:	str	x1, [x20]
   10a00:	bl	0 <grub_free>
   10a04:	ldr	x0, [x19, #8]
   10a08:	bl	e398 <grub_script_free>
   10a0c:	mov	x0, x19
   10a10:	ldp	x19, x20, [sp, #16]
   10a14:	ldr	x21, [sp, #32]
   10a18:	ldp	x29, x30, [sp], #48
   10a1c:	b	0 <grub_free>
   10a20:	ldr	x21, [sp, #32]
   10a24:	ldp	x19, x20, [sp, #16]
   10a28:	ldp	x29, x30, [sp], #48
   10a2c:	ret
	...

0000000000010a38 <grub_script_function_find>:
   10a38:	stp	x29, x30, [sp, #-80]!
   10a3c:	adrp	x1, 0 <grub_normal_free_menu-0x268>
   10a40:	mov	x29, sp
   10a44:	stp	x19, x20, [sp, #16]
   10a48:	mov	x20, x0
   10a4c:	ldr	x0, [x1]
   10a50:	ldr	x19, [x0]
   10a54:	cbnz	x19, 10a64 <grub_script_function_find+0x2c>
   10a58:	b	10a84 <grub_script_function_find+0x4c>
   10a5c:	ldr	x19, [x19, #24]
   10a60:	cbz	x19, 10a84 <grub_script_function_find+0x4c>
   10a64:	ldr	x1, [x19]
   10a68:	mov	x0, x20
   10a6c:	bl	0 <grub_strcmp>
   10a70:	cbnz	w0, 10a5c <grub_script_function_find+0x24>
   10a74:	mov	x0, x19
   10a78:	ldp	x19, x20, [sp, #16]
   10a7c:	ldp	x29, x30, [sp], #80
   10a80:	ret
   10a84:	str	x21, [sp, #32]
   10a88:	add	x21, sp, #0x38
   10a8c:	add	x3, x20, #0x14
   10a90:	mov	x1, x21
   10a94:	b	10a9c <grub_script_function_find+0x64>
   10a98:	b.eq	10aac <grub_script_function_find+0x74>  // b.none
   10a9c:	ldrb	w0, [x20], #1
   10aa0:	strb	w0, [x1], #1
   10aa4:	cmp	x20, x3
   10aa8:	cbnz	w0, 10a98 <grub_script_function_find+0x60>
   10aac:	mov	x0, x21
   10ab0:	strb	wzr, [sp, #76]
   10ab4:	bl	0 <grub_strlen>
   10ab8:	add	x0, x21, x0
   10abc:	sub	x1, x0, #0x1
   10ac0:	cmp	x1, x21
   10ac4:	b.cc	10b50 <grub_script_function_find+0x118>  // b.lo, b.ul, b.last
   10ac8:	add	x2, sp, #0x37
   10acc:	b	10adc <grub_script_function_find+0xa4>
   10ad0:	sub	x1, x1, #0x1
   10ad4:	cmp	x1, x2
   10ad8:	b.eq	10b50 <grub_script_function_find+0x118>  // b.none
   10adc:	ldrb	w3, [x1]
   10ae0:	and	w4, w3, #0xc0
   10ae4:	cmp	w4, #0x80
   10ae8:	b.eq	10ad0 <grub_script_function_find+0x98>  // b.none
   10aec:	cmp	x1, x21
   10af0:	b.cc	10b50 <grub_script_function_find+0x118>  // b.lo, b.ul, b.last
   10af4:	tbz	w3, #7, 10b58 <grub_script_function_find+0x120>
   10af8:	and	w2, w3, #0xe0
   10afc:	cmp	w2, #0xc0
   10b00:	b.eq	10b8c <grub_script_function_find+0x154>  // b.none
   10b04:	and	w2, w3, #0xf0
   10b08:	cmp	w2, #0xe0
   10b0c:	b.eq	10b64 <grub_script_function_find+0x12c>  // b.none
   10b10:	and	w3, w3, #0xf8
   10b14:	cmp	w3, #0xf0
   10b18:	b.eq	10b78 <grub_script_function_find+0x140>  // b.none
   10b1c:	sub	x3, x1, x21
   10b20:	adrp	x1, 0 <grub_normal_free_menu-0x268>
   10b24:	mov	x2, x21
   10b28:	mov	x19, #0x0                   	// #0
   10b2c:	mov	w0, #0x10                  	// #16
   10b30:	ldr	x1, [x1]
   10b34:	strb	wzr, [x21, x3]
   10b38:	bl	0 <grub_error>
   10b3c:	mov	x0, x19
   10b40:	ldp	x19, x20, [sp, #16]
   10b44:	ldr	x21, [sp, #32]
   10b48:	ldp	x29, x30, [sp], #80
   10b4c:	ret
   10b50:	mov	x3, #0x0                   	// #0
   10b54:	b	10b20 <grub_script_function_find+0xe8>
   10b58:	add	x1, x1, #0x1
   10b5c:	sub	x3, x1, x21
   10b60:	b	10b20 <grub_script_function_find+0xe8>
   10b64:	add	x3, x1, #0x3
   10b68:	cmp	x0, x3
   10b6c:	b.cc	10b1c <grub_script_function_find+0xe4>  // b.lo, b.ul, b.last
   10b70:	sub	x3, x3, x21
   10b74:	b	10b20 <grub_script_function_find+0xe8>
   10b78:	add	x3, x1, #0x4
   10b7c:	cmp	x0, x3
   10b80:	b.cc	10b1c <grub_script_function_find+0xe4>  // b.lo, b.ul, b.last
   10b84:	sub	x3, x3, x21
   10b88:	b	10b20 <grub_script_function_find+0xe8>
   10b8c:	add	x2, x1, #0x2
   10b90:	cmp	x0, x2
   10b94:	b.cc	10b10 <grub_script_function_find+0xd8>  // b.lo, b.ul, b.last
   10b98:	sub	x3, x2, x21
   10b9c:	b	10b20 <grub_script_function_find+0xe8>
	...

0000000000010bb0 <grub_script_lexer_ref>:
   10bb0:	ldr	w1, [x0, #16]
   10bb4:	add	w1, w1, #0x1
   10bb8:	str	w1, [x0, #16]
   10bbc:	ret

0000000000010bc0 <grub_script_lexer_deref>:
   10bc0:	ldr	w1, [x0, #16]
   10bc4:	sub	w1, w1, #0x1
   10bc8:	str	w1, [x0, #16]
   10bcc:	ret

0000000000010bd0 <grub_script_lexer_record_start>:
   10bd0:	stp	x29, x30, [sp, #-32]!
   10bd4:	mov	x29, sp
   10bd8:	stp	x19, x20, [sp, #16]
   10bdc:	mov	x20, x0
   10be0:	ldr	x19, [x0, #40]
   10be4:	ldr	w0, [x19, #20]
   10be8:	ldr	x1, [x19, #24]
   10bec:	add	w0, w0, #0x1
   10bf0:	str	w0, [x19, #20]
   10bf4:	cbz	x1, 10c08 <grub_script_lexer_record_start+0x38>
   10bf8:	ldr	w0, [x19, #32]
   10bfc:	ldp	x19, x20, [sp, #16]
   10c00:	ldp	x29, x30, [sp], #32
   10c04:	ret
   10c08:	mov	x0, #0x10000000000         	// #1099511627776
   10c0c:	str	x0, [x19, #32]
   10c10:	mov	x0, #0x100                 	// #256
   10c14:	bl	0 <grub_malloc>
   10c18:	str	x0, [x19, #24]
   10c1c:	cbnz	x0, 10bf8 <grub_script_lexer_record_start+0x28>
   10c20:	bl	0 <grub_print_error>
   10c24:	ldr	w0, [x20, #8]
   10c28:	add	w0, w0, #0x1
   10c2c:	str	w0, [x20, #8]
   10c30:	str	wzr, [x19, #36]
   10c34:	b	10bf8 <grub_script_lexer_record_start+0x28>

0000000000010c38 <grub_script_lexer_record_stop>:
   10c38:	stp	x29, x30, [sp, #-48]!
   10c3c:	mov	x29, sp
   10c40:	stp	x21, x22, [sp, #32]
   10c44:	ldr	x21, [x0, #40]
   10c48:	stp	x19, x20, [sp, #16]
   10c4c:	mov	w19, w1
   10c50:	ldr	w1, [x21, #20]
   10c54:	cbz	w1, 10cf4 <grub_script_lexer_record_stop+0xbc>
   10c58:	ldr	x2, [x21, #24]
   10c5c:	sub	w1, w1, #0x1
   10c60:	str	w1, [x21, #20]
   10c64:	cbz	x2, 10cf4 <grub_script_lexer_record_stop+0xbc>
   10c68:	ldr	w22, [x21, #32]
   10c6c:	sub	w22, w22, w19
   10c70:	add	w1, w22, #0x1
   10c74:	sxtw	x1, w1
   10c78:	bl	e260 <grub_script_malloc>
   10c7c:	mov	x20, x0
   10c80:	cbz	x0, 10cb8 <grub_script_lexer_record_stop+0x80>
   10c84:	ldr	x3, [x21, #24]
   10c88:	sub	w0, w22, #0x1
   10c8c:	mov	x2, #0x0                   	// #0
   10c90:	add	x3, x3, w19, uxtw
   10c94:	b	10c9c <grub_script_lexer_record_stop+0x64>
   10c98:	b.eq	10cb4 <grub_script_lexer_record_stop+0x7c>  // b.none
   10c9c:	ldrb	w1, [x3, x2]
   10ca0:	add	x4, x2, #0x1
   10ca4:	strb	w1, [x20, x2]
   10ca8:	cmp	x0, x2
   10cac:	mov	x2, x4
   10cb0:	cbnz	w1, 10c98 <grub_script_lexer_record_stop+0x60>
   10cb4:	strb	wzr, [x20, w22, sxtw]
   10cb8:	ldr	w0, [x21, #20]
   10cbc:	cbz	w0, 10cd4 <grub_script_lexer_record_stop+0x9c>
   10cc0:	mov	x0, x20
   10cc4:	ldp	x19, x20, [sp, #16]
   10cc8:	ldp	x21, x22, [sp, #32]
   10ccc:	ldp	x29, x30, [sp], #48
   10cd0:	ret
   10cd4:	ldr	x0, [x21, #24]
   10cd8:	bl	0 <grub_free>
   10cdc:	stp	xzr, xzr, [x21, #24]
   10ce0:	mov	x0, x20
   10ce4:	ldp	x19, x20, [sp, #16]
   10ce8:	ldp	x21, x22, [sp, #32]
   10cec:	ldp	x29, x30, [sp], #48
   10cf0:	ret
   10cf4:	mov	x20, #0x0                   	// #0
   10cf8:	mov	x0, x20
   10cfc:	ldp	x19, x20, [sp, #16]
   10d00:	ldp	x21, x22, [sp, #32]
   10d04:	ldp	x29, x30, [sp], #48
   10d08:	ret
   10d0c:	nop

0000000000010d10 <grub_script_lexer_record>:
   10d10:	stp	x29, x30, [sp, #-64]!
   10d14:	mov	x29, sp
   10d18:	stp	x19, x20, [sp, #16]
   10d1c:	mov	x20, x0
   10d20:	ldr	x19, [x0, #40]
   10d24:	ldr	w0, [x19, #20]
   10d28:	cbz	w0, 10da8 <grub_script_lexer_record+0x98>
   10d2c:	ldr	x0, [x19, #24]
   10d30:	cbz	x0, 10da8 <grub_script_lexer_record+0x98>
   10d34:	mov	x0, x1
   10d38:	stp	x21, x22, [sp, #32]
   10d3c:	mov	x21, x1
   10d40:	bl	0 <grub_strlen>
   10d44:	mov	x22, x0
   10d48:	ldp	w2, w1, [x19, #32]
   10d4c:	add	w0, w2, w0
   10d50:	cmp	w0, w1
   10d54:	b.lt	10db4 <grub_script_lexer_record+0xa4>  // b.tstop
   10d58:	cmp	w22, w1
   10d5c:	str	x23, [sp, #48]
   10d60:	csel	w1, w22, w1, ge  // ge = tcont
   10d64:	ldr	x23, [x19, #24]
   10d68:	lsl	w1, w1, #1
   10d6c:	str	w1, [x19, #36]
   10d70:	mov	x0, x23
   10d74:	sxtw	x1, w1
   10d78:	bl	0 <grub_realloc>
   10d7c:	str	x0, [x19, #24]
   10d80:	cbz	x0, 10dbc <grub_script_lexer_record+0xac>
   10d84:	ldr	w2, [x19, #32]
   10d88:	ldr	x23, [sp, #48]
   10d8c:	mov	x1, x21
   10d90:	add	x0, x0, w2, sxtw
   10d94:	bl	0 <grub_strcpy>
   10d98:	ldr	w0, [x19, #32]
   10d9c:	add	w22, w0, w22
   10da0:	str	w22, [x19, #32]
   10da4:	ldp	x21, x22, [sp, #32]
   10da8:	ldp	x19, x20, [sp, #16]
   10dac:	ldp	x29, x30, [sp], #64
   10db0:	ret
   10db4:	ldr	x0, [x19, #24]
   10db8:	b	10d8c <grub_script_lexer_record+0x7c>
   10dbc:	mov	x0, x23
   10dc0:	bl	0 <grub_free>
   10dc4:	str	xzr, [x19, #32]
   10dc8:	bl	0 <grub_print_error>
   10dcc:	ldr	w0, [x20, #8]
   10dd0:	ldp	x21, x22, [sp, #32]
   10dd4:	add	w0, w0, #0x1
   10dd8:	ldr	x23, [sp, #48]
   10ddc:	str	w0, [x20, #8]
   10de0:	b	10da8 <grub_script_lexer_record+0x98>
   10de4:	nop

0000000000010de8 <grub_script_lexer_yywrap>:
   10de8:	stp	x29, x30, [sp, #-64]!
   10dec:	mov	x29, sp
   10df0:	stp	x21, x22, [sp, #32]
   10df4:	mov	x21, x0
   10df8:	mov	x0, x1
   10dfc:	stp	x19, x20, [sp, #16]
   10e00:	ldr	x19, [x21, #40]
   10e04:	str	xzr, [sp, #56]
   10e08:	ldr	w1, [x19, #16]
   10e0c:	cbnz	w1, 10e18 <grub_script_lexer_yywrap+0x30>
   10e10:	ldr	x1, [x19, #80]
   10e14:	cbz	x1, 10f58 <grub_script_lexer_yywrap+0x170>
   10e18:	ldr	x3, [x19]
   10e1c:	cbz	x3, 10ee0 <grub_script_lexer_yywrap+0xf8>
   10e20:	cbnz	x0, 10ee4 <grub_script_lexer_yywrap+0xfc>
   10e24:	ldr	x2, [x19, #8]
   10e28:	add	x0, sp, #0x38
   10e2c:	mov	w1, #0x1                   	// #1
   10e30:	blr	x3
   10e34:	ldr	x0, [sp, #56]
   10e38:	cbz	x0, 10ef0 <grub_script_lexer_yywrap+0x108>
   10e3c:	bl	0 <grub_strlen>
   10e40:	mov	x20, x0
   10e44:	ldr	x1, [sp, #56]
   10e48:	ldrb	w0, [x1]
   10e4c:	cbz	w0, 10f2c <grub_script_lexer_yywrap+0x144>
   10e50:	cbz	x20, 10e64 <grub_script_lexer_yywrap+0x7c>
   10e54:	add	x0, x1, x20
   10e58:	ldurb	w0, [x0, #-1]
   10e5c:	cmp	w0, #0xa
   10e60:	b.ne	10f64 <grub_script_lexer_yywrap+0x17c>  // b.any
   10e64:	ldr	x0, [x19, #80]
   10e68:	cbz	x0, 10f24 <grub_script_lexer_yywrap+0x13c>
   10e6c:	bl	0 <grub_strlen>
   10e70:	mov	x22, x0
   10e74:	add	x20, x20, #0x1
   10e78:	add	x0, x20, w0, sxtw
   10e7c:	sxtw	x22, w22
   10e80:	bl	0 <grub_malloc>
   10e84:	mov	x20, x0
   10e88:	cbz	x0, 10f94 <grub_script_lexer_yywrap+0x1ac>
   10e8c:	ldr	x1, [x19, #80]
   10e90:	bl	0 <grub_strcpy>
   10e94:	str	xzr, [x19, #80]
   10e98:	ldr	x1, [sp, #56]
   10e9c:	add	x0, x20, x22
   10ea0:	bl	0 <grub_strcpy>
   10ea4:	ldr	x0, [sp, #56]
   10ea8:	bl	0 <grub_free>
   10eac:	str	x20, [sp, #56]
   10eb0:	ldr	x1, [x19, #88]
   10eb4:	mov	x0, x20
   10eb8:	bl	133c8 <yy_scan_string>
   10ebc:	mov	x19, x0
   10ec0:	ldr	x0, [sp, #56]
   10ec4:	bl	0 <grub_free>
   10ec8:	mov	w0, #0x0                   	// #0
   10ecc:	cbz	x19, 10f00 <grub_script_lexer_yywrap+0x118>
   10ed0:	ldp	x19, x20, [sp, #16]
   10ed4:	ldp	x21, x22, [sp, #32]
   10ed8:	ldp	x29, x30, [sp], #64
   10edc:	ret
   10ee0:	cbz	x0, 10fa4 <grub_script_lexer_yywrap+0x1bc>
   10ee4:	bl	0 <grub_strdup>
   10ee8:	str	x0, [sp, #56]
   10eec:	cbnz	x0, 10e3c <grub_script_lexer_yywrap+0x54>
   10ef0:	adrp	x1, 0 <grub_normal_free_menu-0x268>
   10ef4:	mov	w0, #0x11                  	// #17
   10ef8:	ldr	x1, [x1]
   10efc:	bl	0 <grub_error>
   10f00:	bl	0 <grub_print_error>
   10f04:	ldr	w1, [x21, #8]
   10f08:	mov	w0, #0x1                   	// #1
   10f0c:	ldp	x19, x20, [sp, #16]
   10f10:	add	w1, w1, w0
   10f14:	str	w1, [x21, #8]
   10f18:	ldp	x21, x22, [sp, #32]
   10f1c:	ldp	x29, x30, [sp], #64
   10f20:	ret
   10f24:	ldr	x20, [sp, #56]
   10f28:	b	10eb0 <grub_script_lexer_yywrap+0xc8>
   10f2c:	mov	x0, x1
   10f30:	bl	0 <grub_free>
   10f34:	adrp	x0, 0 <grub_normal_free_menu-0x268>
   10f38:	mov	x20, #0x1                   	// #1
   10f3c:	ldr	x0, [x0]
   10f40:	bl	0 <grub_strdup>
   10f44:	str	x0, [sp, #56]
   10f48:	cbz	x0, 10ef0 <grub_script_lexer_yywrap+0x108>
   10f4c:	ldr	x0, [x19, #80]
   10f50:	cbnz	x0, 10e6c <grub_script_lexer_yywrap+0x84>
   10f54:	b	10f24 <grub_script_lexer_yywrap+0x13c>
   10f58:	cbnz	x0, 10ee4 <grub_script_lexer_yywrap+0xfc>
   10f5c:	mov	w0, #0x1                   	// #1
   10f60:	b	10ed0 <grub_script_lexer_yywrap+0xe8>
   10f64:	mov	x0, x1
   10f68:	add	x1, x20, #0x2
   10f6c:	bl	0 <grub_realloc>
   10f70:	cbz	x0, 10f88 <grub_script_lexer_yywrap+0x1a0>
   10f74:	add	x1, x20, #0x1
   10f78:	mov	w2, #0xa                   	// #10
   10f7c:	strb	w2, [x0, x20]
   10f80:	mov	x20, x1
   10f84:	strb	wzr, [x0, x1]
   10f88:	str	x0, [sp, #56]
   10f8c:	cbnz	x0, 10f4c <grub_script_lexer_yywrap+0x164>
   10f90:	b	10ef0 <grub_script_lexer_yywrap+0x108>
   10f94:	ldr	x0, [sp, #56]
   10f98:	bl	0 <grub_free>
   10f9c:	mov	w0, #0x1                   	// #1
   10fa0:	b	10ed0 <grub_script_lexer_yywrap+0xe8>
   10fa4:	adrp	x1, 0 <grub_normal_free_menu-0x268>
   10fa8:	mov	w0, #0x11                  	// #17
   10fac:	ldr	x1, [x1]
   10fb0:	bl	0 <grub_error>
   10fb4:	b	10f00 <grub_script_lexer_yywrap+0x118>
	...

0000000000010fd0 <grub_script_lexer_init>:
   10fd0:	stp	x29, x30, [sp, #-64]!
   10fd4:	mov	x29, sp
   10fd8:	stp	x19, x20, [sp, #16]
   10fdc:	mov	x20, x0
   10fe0:	mov	x0, #0x68                  	// #104
   10fe4:	stp	x21, x22, [sp, #32]
   10fe8:	mov	x21, x1
   10fec:	mov	x22, x3
   10ff0:	str	x23, [sp, #48]
   10ff4:	mov	x23, x2
   10ff8:	bl	0 <grub_zalloc>
   10ffc:	mov	x19, x0
   11000:	cbz	x0, 11058 <grub_script_lexer_init+0x88>
   11004:	mov	w0, #0x20                  	// #32
   11008:	str	w0, [x19, #68]
   1100c:	mov	x0, #0x20                  	// #32
   11010:	bl	0 <grub_malloc>
   11014:	str	x0, [x19, #56]
   11018:	cbz	x0, 11084 <grub_script_lexer_init+0xb4>
   1101c:	stp	x23, x22, [x19]
   11020:	add	x0, x19, #0x58
   11024:	bl	142d0 <yylex_init>
   11028:	cbnz	w0, 1107c <grub_script_lexer_init+0xac>
   1102c:	ldr	x1, [x19, #88]
   11030:	mov	x0, x20
   11034:	bl	14208 <yyset_extra>
   11038:	str	x19, [x20, #40]
   1103c:	adrp	x0, 0 <grub_normal_free_menu-0x268>
   11040:	cmp	x21, #0x0
   11044:	ldr	x1, [x0]
   11048:	mov	x0, x20
   1104c:	csel	x1, x21, x1, ne  // ne = any
   11050:	bl	10de8 <grub_script_lexer_yywrap>
   11054:	cbnz	w0, 11070 <grub_script_lexer_init+0xa0>
   11058:	mov	x0, x19
   1105c:	ldp	x19, x20, [sp, #16]
   11060:	ldp	x21, x22, [sp, #32]
   11064:	ldr	x23, [sp, #48]
   11068:	ldp	x29, x30, [sp], #64
   1106c:	ret
   11070:	ldr	x0, [x19, #88]
   11074:	str	xzr, [x20, #40]
   11078:	bl	14428 <yylex_destroy>
   1107c:	ldr	x0, [x19, #56]
   11080:	bl	0 <grub_free>
   11084:	mov	x0, x19
   11088:	mov	x19, #0x0                   	// #0
   1108c:	bl	0 <grub_free>
   11090:	mov	x0, x19
   11094:	ldp	x19, x20, [sp, #16]
   11098:	ldp	x21, x22, [sp, #32]
   1109c:	ldr	x23, [sp, #48]
   110a0:	ldp	x29, x30, [sp], #64
   110a4:	ret
	...

00000000000110b0 <grub_script_lexer_fini>:
   110b0:	cbz	x0, 110ec <grub_script_lexer_fini+0x3c>
   110b4:	stp	x29, x30, [sp, #-32]!
   110b8:	mov	x29, sp
   110bc:	str	x19, [sp, #16]
   110c0:	mov	x19, x0
   110c4:	ldr	x0, [x0, #88]
   110c8:	bl	14428 <yylex_destroy>
   110cc:	ldr	x0, [x19, #24]
   110d0:	bl	0 <grub_free>
   110d4:	ldr	x0, [x19, #56]
   110d8:	bl	0 <grub_free>
   110dc:	mov	x0, x19
   110e0:	ldr	x19, [sp, #16]
   110e4:	ldp	x29, x30, [sp], #32
   110e8:	b	0 <grub_free>
   110ec:	ret

00000000000110f0 <grub_script_yylex>:
   110f0:	stp	x29, x30, [sp, #-96]!
   110f4:	mov	x29, sp
   110f8:	stp	x19, x20, [sp, #16]
   110fc:	ldr	w20, [x1, #8]
   11100:	ldr	x19, [x1, #40]
   11104:	str	xzr, [x0]
   11108:	cbnz	w20, 11210 <grub_script_yylex+0x120>
   1110c:	stp	x21, x22, [sp, #32]
   11110:	mov	x21, x0
   11114:	ldr	w0, [x19, #40]
   11118:	cbnz	w0, 11224 <grub_script_yylex+0x134>
   1111c:	stp	x23, x24, [sp, #48]
   11120:	mov	x22, x1
   11124:	mov	w23, #0x1                   	// #1
   11128:	stp	x25, x26, [sp, #64]
   1112c:	adrp	x24, 0 <grub_normal_free_menu-0x268>
   11130:	adrp	x26, 0 <grub_normal_free_menu-0x268>
   11134:	stp	x27, x28, [sp, #80]
   11138:	adrp	x25, 0 <grub_normal_free_menu-0x268>
   1113c:	stur	xzr, [x19, #44]
   11140:	b	11190 <grub_script_yylex+0xa0>
   11144:	ldr	w28, [x19, #72]
   11148:	ldr	x27, [x19, #56]
   1114c:	mov	x5, x27
   11150:	ldr	x3, [x26]
   11154:	mov	w4, w20
   11158:	ldr	x2, [x25]
   1115c:	mov	w1, #0x141                 	// #321
   11160:	ldr	x0, [x24]
   11164:	bl	0 <grub_real_dprintf>
   11168:	ldr	x1, [x21]
   1116c:	mov	x3, x27
   11170:	mov	w2, w28
   11174:	mov	x0, x22
   11178:	bl	e3f8 <grub_script_arg_add>
   1117c:	ldr	w1, [x19, #44]
   11180:	str	x0, [x21]
   11184:	cbz	w1, 111d4 <grub_script_yylex+0xe4>
   11188:	ldr	w1, [x19, #48]
   1118c:	cbnz	w1, 111d4 <grub_script_yylex+0xe4>
   11190:	ldr	x1, [x19, #56]
   11194:	str	w23, [x19, #64]
   11198:	mov	x0, x21
   1119c:	strb	wzr, [x1]
   111a0:	ldr	x1, [x19, #88]
   111a4:	bl	13468 <yylex>
   111a8:	mov	w20, w0
   111ac:	cmp	w0, #0x102
   111b0:	b.eq	111d0 <grub_script_yylex+0xe0>  // b.none
   111b4:	ldr	w0, [x19, #44]
   111b8:	cbnz	w0, 11144 <grub_script_yylex+0x54>
   111bc:	ldr	x0, [x19, #88]
   111c0:	mov	w28, #0x1                   	// #1
   111c4:	bl	14200 <yyget_text>
   111c8:	mov	x27, x0
   111cc:	b	1114c <grub_script_yylex+0x5c>
   111d0:	ldr	x0, [x21]
   111d4:	cbz	x0, 11200 <grub_script_yylex+0x110>
   111d8:	ldr	w0, [x22, #8]
   111dc:	cbnz	w0, 11200 <grub_script_yylex+0x110>
   111e0:	mov	w0, w20
   111e4:	ldp	x19, x20, [sp, #16]
   111e8:	ldp	x21, x22, [sp, #32]
   111ec:	ldp	x23, x24, [sp, #48]
   111f0:	ldp	x25, x26, [sp, #64]
   111f4:	ldp	x27, x28, [sp, #80]
   111f8:	ldp	x29, x30, [sp], #96
   111fc:	ret
   11200:	ldp	x21, x22, [sp, #32]
   11204:	ldp	x23, x24, [sp, #48]
   11208:	ldp	x25, x26, [sp, #64]
   1120c:	ldp	x27, x28, [sp, #80]
   11210:	mov	w20, #0x102                 	// #258
   11214:	mov	w0, w20
   11218:	ldp	x19, x20, [sp, #16]
   1121c:	ldp	x29, x30, [sp], #96
   11220:	ret
   11224:	mov	w0, w20
   11228:	ldp	x19, x20, [sp, #16]
   1122c:	ldp	x21, x22, [sp, #32]
   11230:	ldp	x29, x30, [sp], #96
   11234:	ret
	...

0000000000011250 <grub_script_yyerror>:
   11250:	stp	x29, x30, [sp, #-32]!
   11254:	mov	x29, sp
   11258:	str	x19, [sp, #16]
   1125c:	mov	x19, x0
   11260:	cbz	x1, 1126c <grub_script_yyerror+0x1c>
   11264:	mov	w0, #0x11                  	// #17
   11268:	bl	0 <grub_error>
   1126c:	bl	0 <grub_print_error>
   11270:	ldr	w0, [x19, #8]
   11274:	add	w0, w0, #0x1
   11278:	str	w0, [x19, #8]
   1127c:	ldr	x19, [sp, #16]
   11280:	ldp	x29, x30, [sp], #32
   11284:	ret

0000000000011288 <grub_script_argv_free>:
   11288:	stp	x29, x30, [sp, #-32]!
   1128c:	mov	x29, sp
   11290:	stp	x19, x20, [sp, #16]
   11294:	mov	x20, x0
   11298:	ldr	x0, [x0, #8]
   1129c:	cbz	x0, 112d0 <grub_script_argv_free+0x48>
   112a0:	ldr	w1, [x20]
   112a4:	cbz	w1, 112cc <grub_script_argv_free+0x44>
   112a8:	mov	w19, #0x0                   	// #0
   112ac:	nop
   112b0:	ldr	x0, [x0, w19, uxtw #3]
   112b4:	add	w19, w19, #0x1
   112b8:	bl	0 <grub_free>
   112bc:	ldr	w0, [x20]
   112c0:	cmp	w0, w19
   112c4:	ldr	x0, [x20, #8]
   112c8:	b.hi	112b0 <grub_script_argv_free+0x28>  // b.pmore
   112cc:	bl	0 <grub_free>
   112d0:	str	wzr, [x20]
   112d4:	stp	xzr, xzr, [x20, #8]
   112d8:	ldp	x19, x20, [sp, #16]
   112dc:	ldp	x29, x30, [sp], #32
   112e0:	ret
   112e4:	nop

00000000000112e8 <grub_script_argv_next>:
   112e8:	stp	x29, x30, [sp, #-32]!
   112ec:	mov	x29, sp
   112f0:	ldr	w1, [x0]
   112f4:	str	x19, [sp, #16]
   112f8:	mov	x19, x0
   112fc:	ldr	x0, [x0, #8]
   11300:	cbz	x0, 11308 <grub_script_argv_next+0x20>
   11304:	cbnz	w1, 1136c <grub_script_argv_next+0x84>
   11308:	lsl	w1, w1, #3
   1130c:	add	w1, w1, #0xf
   11310:	orr	w1, w1, w1, lsr #1
   11314:	orr	w1, w1, w1, lsr #2
   11318:	orr	w1, w1, w1, lsr #4
   1131c:	orr	w1, w1, w1, lsr #8
   11320:	orr	w1, w1, w1, lsr #16
   11324:	adds	w1, w1, #0x1
   11328:	cinc	w1, w1, eq  // eq = none
   1132c:	mov	w1, w1
   11330:	bl	0 <grub_realloc>
   11334:	mov	x1, x0
   11338:	cbz	x0, 11380 <grub_script_argv_next+0x98>
   1133c:	ldr	w2, [x19]
   11340:	str	x0, [x19, #8]
   11344:	add	w2, w2, #0x1
   11348:	str	w2, [x19]
   1134c:	cmp	w2, #0x1
   11350:	b.ne	11358 <grub_script_argv_next+0x70>  // b.any
   11354:	str	xzr, [x0]
   11358:	mov	w0, #0x0                   	// #0
   1135c:	str	xzr, [x1, w2, uxtw #3]
   11360:	ldr	x19, [sp, #16]
   11364:	ldp	x29, x30, [sp], #32
   11368:	ret
   1136c:	sub	w2, w1, #0x1
   11370:	ldr	x2, [x0, x2, lsl #3]
   11374:	cbnz	x2, 11308 <grub_script_argv_next+0x20>
   11378:	mov	w0, #0x0                   	// #0
   1137c:	b	11360 <grub_script_argv_next+0x78>
   11380:	mov	w0, #0x1                   	// #1
   11384:	ldr	x19, [sp, #16]
   11388:	ldp	x29, x30, [sp], #32
   1138c:	ret

0000000000011390 <grub_script_argv_append>:
   11390:	stp	x29, x30, [sp, #-64]!
   11394:	mov	x29, sp
   11398:	stp	x19, x20, [sp, #16]
   1139c:	mov	x20, x0
   113a0:	ldr	w0, [x0]
   113a4:	stp	x21, x22, [sp, #32]
   113a8:	mov	x21, x1
   113ac:	ldr	x1, [x20, #8]
   113b0:	cbz	x21, 11470 <grub_script_argv_append+0xe0>
   113b4:	sub	w0, w0, #0x1
   113b8:	mov	x19, x2
   113bc:	ldr	x22, [x1, x0, lsl #3]
   113c0:	str	x23, [sp, #48]
   113c4:	cbz	x22, 11450 <grub_script_argv_append+0xc0>
   113c8:	mov	x0, x22
   113cc:	bl	0 <grub_strlen>
   113d0:	mov	x23, x0
   113d4:	mov	w3, w0
   113d8:	add	w3, w3, w19
   113dc:	mov	x0, x22
   113e0:	orr	w3, w3, w3, lsr #1
   113e4:	orr	w3, w3, w3, lsr #2
   113e8:	orr	w3, w3, w3, lsr #4
   113ec:	orr	w3, w3, w3, lsr #8
   113f0:	orr	w3, w3, w3, lsr #16
   113f4:	adds	w3, w3, #0x1
   113f8:	cinc	w3, w3, eq  // eq = none
   113fc:	mov	w1, w3
   11400:	bl	0 <grub_realloc>
   11404:	mov	x22, x0
   11408:	mov	w0, #0x1                   	// #1
   1140c:	cbz	x22, 1145c <grub_script_argv_append+0xcc>
   11410:	add	x23, x22, x23
   11414:	mov	x1, x21
   11418:	mov	x2, x19
   1141c:	mov	x0, x23
   11420:	bl	0 <grub_memmove>
   11424:	strb	wzr, [x23, x19]
   11428:	mov	w0, #0x0                   	// #0
   1142c:	ldr	w1, [x20]
   11430:	ldr	x2, [x20, #8]
   11434:	sub	w1, w1, #0x1
   11438:	ldp	x19, x20, [sp, #16]
   1143c:	str	x22, [x2, x1, lsl #3]
   11440:	ldp	x21, x22, [sp, #32]
   11444:	ldr	x23, [sp, #48]
   11448:	ldp	x29, x30, [sp], #64
   1144c:	ret
   11450:	mov	w3, #0x0                   	// #0
   11454:	mov	x23, #0x0                   	// #0
   11458:	b	113d8 <grub_script_argv_append+0x48>
   1145c:	ldp	x19, x20, [sp, #16]
   11460:	ldp	x21, x22, [sp, #32]
   11464:	ldr	x23, [sp, #48]
   11468:	ldp	x29, x30, [sp], #64
   1146c:	ret
   11470:	mov	w0, #0x0                   	// #0
   11474:	ldp	x19, x20, [sp, #16]
   11478:	ldp	x21, x22, [sp, #32]
   1147c:	ldp	x29, x30, [sp], #64
   11480:	ret
   11484:	nop

0000000000011488 <grub_script_argv_make>:
   11488:	stp	x29, x30, [sp, #-80]!
   1148c:	cmp	w1, #0x0
   11490:	mov	x29, sp
   11494:	stp	x21, x22, [sp, #32]
   11498:	mov	x22, x0
   1149c:	str	wzr, [sp, #56]
   114a0:	stp	xzr, xzr, [sp, #64]
   114a4:	b.le	11518 <grub_script_argv_make+0x90>
   114a8:	sub	w1, w1, #0x1
   114ac:	add	x21, x2, #0x8
   114b0:	stp	x19, x20, [sp, #16]
   114b4:	mov	x19, x2
   114b8:	add	x21, x21, w1, uxtw #3
   114bc:	b	114ec <grub_script_argv_make+0x64>
   114c0:	ldr	x20, [x19]
   114c4:	add	x19, x19, #0x8
   114c8:	mov	x0, x20
   114cc:	bl	0 <grub_strlen>
   114d0:	mov	x1, x20
   114d4:	mov	x2, x0
   114d8:	add	x0, sp, #0x38
   114dc:	bl	11390 <grub_script_argv_append>
   114e0:	cbnz	w0, 114f8 <grub_script_argv_make+0x70>
   114e4:	cmp	x19, x21
   114e8:	b.eq	11514 <grub_script_argv_make+0x8c>  // b.none
   114ec:	add	x0, sp, #0x38
   114f0:	bl	112e8 <grub_script_argv_next>
   114f4:	cbz	w0, 114c0 <grub_script_argv_make+0x38>
   114f8:	add	x0, sp, #0x38
   114fc:	bl	11288 <grub_script_argv_free>
   11500:	mov	w0, #0x1                   	// #1
   11504:	ldp	x19, x20, [sp, #16]
   11508:	ldp	x21, x22, [sp, #32]
   1150c:	ldp	x29, x30, [sp], #80
   11510:	ret
   11514:	ldp	x19, x20, [sp, #16]
   11518:	mov	w0, #0x0                   	// #0
   1151c:	ldp	x2, x3, [sp, #56]
   11520:	stp	x2, x3, [x22]
   11524:	ldr	x1, [sp, #72]
   11528:	str	x1, [x22, #16]
   1152c:	ldp	x21, x22, [sp, #32]
   11530:	ldp	x29, x30, [sp], #80
   11534:	ret

0000000000011538 <grub_script_argv_split_append>:
   11538:	stp	x29, x30, [sp, #-48]!
   1153c:	mov	x29, sp
   11540:	stp	x21, x22, [sp, #32]
   11544:	cbz	x1, 11600 <grub_script_argv_split_append+0xc8>
   11548:	stp	x19, x20, [sp, #16]
   1154c:	mov	x22, x0
   11550:	mov	x20, x1
   11554:	ldrb	w0, [x1]
   11558:	cbnz	w0, 11568 <grub_script_argv_split_append+0x30>
   1155c:	b	115fc <grub_script_argv_split_append+0xc4>
   11560:	ldrb	w0, [x20, #1]!
   11564:	cbz	w0, 115fc <grub_script_argv_split_append+0xc4>
   11568:	bl	0 <grub_isspace>
   1156c:	cbnz	w0, 11560 <grub_script_argv_split_append+0x28>
   11570:	ldrb	w0, [x20]
   11574:	cbz	w0, 115fc <grub_script_argv_split_append+0xc4>
   11578:	mov	x19, x20
   1157c:	b	11588 <grub_script_argv_split_append+0x50>
   11580:	ldrb	w0, [x19, #1]!
   11584:	cbz	w0, 11590 <grub_script_argv_split_append+0x58>
   11588:	bl	0 <grub_isspace>
   1158c:	cbz	w0, 11580 <grub_script_argv_split_append+0x48>
   11590:	sub	x2, x19, x20
   11594:	mov	x1, x20
   11598:	mov	x0, x22
   1159c:	bl	11390 <grub_script_argv_append>
   115a0:	mov	w21, w0
   115a4:	ldrb	w0, [x19]
   115a8:	cbnz	w0, 115b8 <grub_script_argv_split_append+0x80>
   115ac:	b	115f0 <grub_script_argv_split_append+0xb8>
   115b0:	ldrb	w0, [x19, #1]!
   115b4:	cbz	w0, 115f0 <grub_script_argv_split_append+0xb8>
   115b8:	bl	0 <grub_isspace>
   115bc:	cbnz	w0, 115b0 <grub_script_argv_split_append+0x78>
   115c0:	ldrb	w0, [x19]
   115c4:	mov	x20, x19
   115c8:	cbz	w0, 115d8 <grub_script_argv_split_append+0xa0>
   115cc:	mov	x0, x22
   115d0:	bl	112e8 <grub_script_argv_next>
   115d4:	add	w21, w21, w0
   115d8:	cbz	w21, 11570 <grub_script_argv_split_append+0x38>
   115dc:	mov	w0, w21
   115e0:	ldp	x19, x20, [sp, #16]
   115e4:	ldp	x21, x22, [sp, #32]
   115e8:	ldp	x29, x30, [sp], #48
   115ec:	ret
   115f0:	mov	x20, x19
   115f4:	cbz	w21, 11570 <grub_script_argv_split_append+0x38>
   115f8:	b	115dc <grub_script_argv_split_append+0xa4>
   115fc:	ldp	x19, x20, [sp, #16]
   11600:	mov	w21, #0x0                   	// #0
   11604:	mov	w0, w21
   11608:	ldp	x21, x22, [sp, #32]
   1160c:	ldp	x29, x30, [sp], #48
   11610:	ret
   11614:	nop

0000000000011618 <grub_normal_add_menu_entry>:
   11618:	stp	x29, x30, [sp, #-128]!
   1161c:	mov	x29, sp
   11620:	stp	x27, x28, [sp, #80]
   11624:	mov	w27, w0
   11628:	ldr	w0, [sp, #128]
   1162c:	stp	x19, x20, [sp, #16]
   11630:	mov	x19, x2
   11634:	mov	x20, x6
   11638:	stp	x21, x22, [sp, #32]
   1163c:	mov	x21, x4
   11640:	mov	x22, x5
   11644:	stp	x23, x24, [sp, #48]
   11648:	mov	x23, x7
   1164c:	stp	x25, x26, [sp, #64]
   11650:	mov	x25, x1
   11654:	str	x3, [sp, #112]
   11658:	str	w0, [sp, #120]
   1165c:	bl	b538 <grub_env_get_menu>
   11660:	cbz	x0, 11950 <grub_normal_add_menu_entry+0x338>
   11664:	mov	x24, x0
   11668:	adrp	x0, 0 <grub_normal_free_menu-0x268>
   1166c:	adrp	x1, 0 <grub_normal_free_menu-0x268>
   11670:	cmp	x20, #0x0
   11674:	ldr	x0, [x0]
   11678:	mov	x2, x23
   1167c:	ldr	x1, [x1]
   11680:	csel	x1, x20, x1, ne  // ne = any
   11684:	bl	0 <grub_xasprintf>
   11688:	mov	x23, x0
   1168c:	cbz	x0, 11784 <grub_normal_add_menu_entry+0x16c>
   11690:	cbz	x19, 117b0 <grub_normal_add_menu_entry+0x198>
   11694:	ldr	x0, [x19]
   11698:	cbz	x0, 117ac <grub_normal_add_menu_entry+0x194>
   1169c:	mov	x0, #0x0                   	// #0
   116a0:	mov	w2, w0
   116a4:	add	x0, x0, #0x1
   116a8:	ldr	x1, [x19, x0, lsl #3]
   116ac:	cbnz	x1, 116a0 <grub_normal_add_menu_entry+0x88>
   116b0:	add	w0, w2, #0x2
   116b4:	sbfiz	x0, x0, #4, #32
   116b8:	bl	0 <grub_zalloc>
   116bc:	mov	x26, x0
   116c0:	cbz	x0, 118d8 <grub_normal_add_menu_entry+0x2c0>
   116c4:	ldr	x0, [x19]
   116c8:	cbz	x0, 11a08 <grub_normal_add_menu_entry+0x3f0>
   116cc:	add	x1, x26, #0x10
   116d0:	str	x1, [sp, #104]
   116d4:	add	x19, x19, #0x8
   116d8:	bl	0 <grub_strdup>
   116dc:	mov	x20, x0
   116e0:	ldr	x1, [sp, #104]
   116e4:	stur	x0, [x1, #-16]
   116e8:	cbz	x0, 11718 <grub_normal_add_menu_entry+0x100>
   116ec:	ldr	x0, [x19]
   116f0:	add	x19, x19, #0x8
   116f4:	cbz	x0, 119fc <grub_normal_add_menu_entry+0x3e4>
   116f8:	stur	x1, [x1, #-8]
   116fc:	add	x1, x1, #0x10
   11700:	str	x1, [sp, #104]
   11704:	bl	0 <grub_strdup>
   11708:	mov	x20, x0
   1170c:	ldr	x1, [sp, #104]
   11710:	stur	x0, [x1, #-16]
   11714:	cbnz	x0, 116ec <grub_normal_add_menu_entry+0xd4>
   11718:	mov	x19, x26
   1171c:	mov	x22, #0x0                   	// #0
   11720:	mov	x26, #0x0                   	// #0
   11724:	mov	x21, #0x0                   	// #0
   11728:	mov	x0, x23
   1172c:	bl	0 <grub_free>
   11730:	mov	x23, x19
   11734:	b	1173c <grub_normal_add_menu_entry+0x124>
   11738:	bl	0 <grub_free>
   1173c:	ldr	x0, [x23], #16
   11740:	cbnz	x0, 11738 <grub_normal_add_menu_entry+0x120>
   11744:	mov	x0, x19
   11748:	bl	0 <grub_free>
   1174c:	cbz	x20, 11764 <grub_normal_add_menu_entry+0x14c>
   11750:	mov	x19, x20
   11754:	b	1175c <grub_normal_add_menu_entry+0x144>
   11758:	bl	0 <grub_free>
   1175c:	ldr	x0, [x19], #8
   11760:	cbnz	x0, 11758 <grub_normal_add_menu_entry+0x140>
   11764:	mov	x0, x20
   11768:	bl	0 <grub_free>
   1176c:	mov	x0, x21
   11770:	bl	0 <grub_free>
   11774:	mov	x0, x22
   11778:	bl	0 <grub_free>
   1177c:	mov	x0, x26
   11780:	bl	0 <grub_free>
   11784:	adrp	x0, 0 <grub_normal_free_menu-0x268>
   11788:	ldr	x0, [x0]
   1178c:	ldr	w0, [x0]
   11790:	ldp	x19, x20, [sp, #16]
   11794:	ldp	x21, x22, [sp, #32]
   11798:	ldp	x23, x24, [sp, #48]
   1179c:	ldp	x25, x26, [sp, #64]
   117a0:	ldp	x27, x28, [sp, #80]
   117a4:	ldp	x29, x30, [sp], #128
   117a8:	ret
   117ac:	mov	x19, #0x0                   	// #0
   117b0:	cbz	x21, 117c4 <grub_normal_add_menu_entry+0x1ac>
   117b4:	mov	x0, x21
   117b8:	bl	0 <grub_strdup>
   117bc:	mov	x21, x0
   117c0:	cbz	x0, 118cc <grub_normal_add_menu_entry+0x2b4>
   117c4:	str	wzr, [sp, #124]
   117c8:	cbz	x22, 11810 <grub_normal_add_menu_entry+0x1f8>
   117cc:	adrp	x0, 0 <grub_normal_free_menu-0x268>
   117d0:	mov	x28, #0x0                   	// #0
   117d4:	adrp	x26, 0 <grub_normal_free_menu-0x268>
   117d8:	ldr	x1, [x0]
   117dc:	b	117e8 <grub_normal_add_menu_entry+0x1d0>
   117e0:	ldr	x0, [x26]
   117e4:	ldr	x1, [x1, x0]
   117e8:	mov	w20, w28
   117ec:	add	x28, x28, #0x1
   117f0:	mov	x0, x22
   117f4:	bl	0 <grub_strcmp>
   117f8:	lsl	x1, x28, #4
   117fc:	cbz	w0, 11934 <grub_normal_add_menu_entry+0x31c>
   11800:	cmp	x28, #0x10
   11804:	b.ne	117e0 <grub_normal_add_menu_entry+0x1c8>  // b.any
   11808:	ldrb	w0, [x22]
   1180c:	str	w0, [sp, #124]
   11810:	cbz	w27, 11918 <grub_normal_add_menu_entry+0x300>
   11814:	ldr	x0, [x25]
   11818:	bl	0 <grub_strdup>
   1181c:	mov	x22, x0
   11820:	cbz	x0, 118ac <grub_normal_add_menu_entry+0x294>
   11824:	ldr	x0, [sp, #112]
   11828:	cmp	x0, #0x0
   1182c:	csel	x0, x0, x22, ne  // ne = any
   11830:	bl	0 <grub_strdup>
   11834:	mov	x26, x0
   11838:	cbz	x0, 118b0 <grub_normal_add_menu_entry+0x298>
   1183c:	add	w0, w27, #0x1
   11840:	sbfiz	x0, x0, #3, #32
   11844:	str	x0, [sp, #112]
   11848:	bl	0 <grub_malloc>
   1184c:	mov	x20, x0
   11850:	cbz	x0, 118b0 <grub_normal_add_menu_entry+0x298>
   11854:	cmp	w27, #0x0
   11858:	b.le	11978 <grub_normal_add_menu_entry+0x360>
   1185c:	sub	w0, w27, #0x1
   11860:	mov	x28, #0x0                   	// #0
   11864:	add	x0, x0, #0x1
   11868:	lsl	x0, x0, #3
   1186c:	str	x0, [sp, #104]
   11870:	b	11880 <grub_normal_add_menu_entry+0x268>
   11874:	ldr	x0, [sp, #104]
   11878:	cmp	x28, x0
   1187c:	b.eq	11978 <grub_normal_add_menu_entry+0x360>  // b.none
   11880:	ldr	x0, [x25, x28]
   11884:	bl	0 <grub_strdup>
   11888:	str	x0, [x20, x28]
   1188c:	add	x28, x28, #0x8
   11890:	cbnz	x0, 11874 <grub_normal_add_menu_entry+0x25c>
   11894:	mov	x0, x23
   11898:	bl	0 <grub_free>
   1189c:	cbnz	x19, 11730 <grub_normal_add_menu_entry+0x118>
   118a0:	mov	x0, #0x0                   	// #0
   118a4:	bl	0 <grub_free>
   118a8:	b	11750 <grub_normal_add_menu_entry+0x138>
   118ac:	mov	x26, #0x0                   	// #0
   118b0:	mov	x0, x23
   118b4:	mov	x20, #0x0                   	// #0
   118b8:	bl	0 <grub_free>
   118bc:	cbnz	x19, 11730 <grub_normal_add_menu_entry+0x118>
   118c0:	mov	x0, #0x0                   	// #0
   118c4:	bl	0 <grub_free>
   118c8:	b	11764 <grub_normal_add_menu_entry+0x14c>
   118cc:	mov	x26, #0x0                   	// #0
   118d0:	mov	x22, #0x0                   	// #0
   118d4:	b	118b0 <grub_normal_add_menu_entry+0x298>
   118d8:	mov	x0, x23
   118dc:	bl	0 <grub_free>
   118e0:	mov	x0, #0x0                   	// #0
   118e4:	bl	0 <grub_free>
   118e8:	mov	x20, #0x0                   	// #0
   118ec:	mov	x0, x20
   118f0:	bl	0 <grub_free>
   118f4:	mov	x21, #0x0                   	// #0
   118f8:	mov	x0, x21
   118fc:	bl	0 <grub_free>
   11900:	mov	x22, #0x0                   	// #0
   11904:	mov	x0, x22
   11908:	bl	0 <grub_free>
   1190c:	mov	x0, x26
   11910:	bl	0 <grub_free>
   11914:	b	11784 <grub_normal_add_menu_entry+0x16c>
   11918:	adrp	x1, 0 <grub_normal_free_menu-0x268>
   1191c:	mov	x26, #0x0                   	// #0
   11920:	mov	x22, #0x0                   	// #0
   11924:	mov	w0, #0x1b                  	// #27
   11928:	ldr	x1, [x1]
   1192c:	bl	0 <grub_error>
   11930:	b	118b0 <grub_normal_add_menu_entry+0x298>
   11934:	adrp	x0, 0 <grub_normal_free_menu-0x268>
   11938:	ubfiz	x20, x20, #4, #32
   1193c:	ldr	x0, [x0]
   11940:	add	x20, x0, x20
   11944:	ldr	w0, [x20, #8]
   11948:	str	w0, [sp, #124]
   1194c:	b	11810 <grub_normal_add_menu_entry+0x1f8>
   11950:	adrp	x1, 0 <grub_normal_free_menu-0x268>
   11954:	mov	w0, #0x1b                  	// #27
   11958:	ldp	x19, x20, [sp, #16]
   1195c:	ldr	x1, [x1]
   11960:	ldp	x21, x22, [sp, #32]
   11964:	ldp	x23, x24, [sp, #48]
   11968:	ldp	x25, x26, [sp, #64]
   1196c:	ldp	x27, x28, [sp, #80]
   11970:	ldp	x29, x30, [sp], #128
   11974:	b	0 <grub_error>
   11978:	ldr	x0, [sp, #112]
   1197c:	add	x1, x20, x0
   11980:	ldr	x0, [x24, #8]
   11984:	stur	xzr, [x1, #-8]
   11988:	cbz	x0, 11a10 <grub_normal_add_menu_entry+0x3f8>
   1198c:	nop
   11990:	mov	x1, x0
   11994:	ldr	x0, [x0, #72]
   11998:	cbnz	x0, 11990 <grub_normal_add_menu_entry+0x378>
   1199c:	add	x25, x1, #0x48
   119a0:	mov	x0, #0x50                  	// #80
   119a4:	bl	0 <grub_zalloc>
   119a8:	str	x0, [x25]
   119ac:	mov	x1, x0
   119b0:	cbz	x0, 11894 <grub_normal_add_menu_entry+0x27c>
   119b4:	ldr	w0, [sp, #124]
   119b8:	stp	x22, x26, [x1]
   119bc:	str	x19, [x1, #32]
   119c0:	str	w0, [x1, #64]
   119c4:	cbz	x21, 119d0 <grub_normal_add_menu_entry+0x3b8>
   119c8:	mov	w0, #0x1                   	// #1
   119cc:	str	w0, [x1, #16]
   119d0:	ldr	w2, [x24]
   119d4:	mov	w0, #0x0                   	// #0
   119d8:	ldr	w3, [sp, #120]
   119dc:	str	x21, [x1, #24]
   119e0:	add	w2, w2, #0x1
   119e4:	str	x23, [x1, #40]
   119e8:	str	w27, [x1, #48]
   119ec:	str	x20, [x1, #56]
   119f0:	str	w3, [x1, #68]
   119f4:	str	w2, [x24]
   119f8:	b	11790 <grub_normal_add_menu_entry+0x178>
   119fc:	mov	x19, x26
   11a00:	stur	xzr, [x1, #-8]
   11a04:	b	117b0 <grub_normal_add_menu_entry+0x198>
   11a08:	mov	x19, x26
   11a0c:	b	117b0 <grub_normal_add_menu_entry+0x198>
   11a10:	add	x25, x24, #0x8
   11a14:	b	119a0 <grub_normal_add_menu_entry+0x388>
	...
   11a50:	cbz	w1, 11ccc <grub_normal_add_menu_entry+0x6b4>
   11a54:	sub	sp, sp, #0x90
   11a58:	stp	x29, x30, [sp, #16]
   11a5c:	add	x29, sp, #0x10
   11a60:	stp	x19, x20, [sp, #32]
   11a64:	mov	x20, x0
   11a68:	mov	w0, w1
   11a6c:	stp	x25, x26, [sp, #80]
   11a70:	mov	x26, x2
   11a74:	ldp	x3, x2, [x20, #8]
   11a78:	ldr	w1, [x3, #48]
   11a7c:	cbz	w1, 11c10 <grub_normal_add_menu_entry+0x5f8>
   11a80:	cbnz	x2, 11cdc <grub_normal_add_menu_entry+0x6c4>
   11a84:	ldr	w1, [x3, #16]
   11a88:	cbz	w1, 11c4c <grub_normal_add_menu_entry+0x634>
   11a8c:	ldr	x1, [x3, #24]
   11a90:	str	x1, [sp, #128]
   11a94:	cbz	x2, 11c68 <grub_normal_add_menu_entry+0x650>
   11a98:	mov	x19, #0xfffffffffffffff8    	// #-8
   11a9c:	stp	x21, x22, [sp, #48]
   11aa0:	add	x19, x19, w0, sxtw #3
   11aa4:	stp	x23, x24, [sp, #64]
   11aa8:	sub	w21, w0, #0x1
   11aac:	ldr	x22, [x26, x19]
   11ab0:	str	xzr, [x26, x19]
   11ab4:	mov	x0, x22
   11ab8:	bl	0 <grub_strlen>
   11abc:	sub	w0, w0, #0x1
   11ac0:	cmp	w21, #0x0
   11ac4:	ldrb	w1, [x22, w0, uxtw]
   11ac8:	strb	wzr, [x22, w0, uxtw]
   11acc:	stp	w1, w0, [sp, #136]
   11ad0:	b.le	11d2c <grub_normal_add_menu_entry+0x714>
   11ad4:	mov	x2, #0x0                   	// #0
   11ad8:	mov	x0, #0xa                   	// #10
   11adc:	mov	x6, #0x3                   	// #3
   11ae0:	mov	x5, #0x1                   	// #1
   11ae4:	stp	x27, x28, [sp, #96]
   11ae8:	add	x0, x0, #0x3
   11aec:	ldr	x3, [x26, x2, lsl #3]
   11af0:	ldrb	w1, [x3]
   11af4:	cbz	w1, 11b0c <grub_normal_add_menu_entry+0x4f4>
   11af8:	cmp	w1, #0x27
   11afc:	ldrb	w1, [x3, #1]!
   11b00:	csel	x4, x6, x5, eq  // eq = none
   11b04:	add	x0, x0, x4
   11b08:	cbnz	w1, 11af8 <grub_normal_add_menu_entry+0x4e0>
   11b0c:	add	x2, x2, #0x1
   11b10:	cmp	w21, w2
   11b14:	b.gt	11ae8 <grub_normal_add_menu_entry+0x4d0>
   11b18:	add	x0, x0, #0x2
   11b1c:	bl	0 <grub_malloc>
   11b20:	mov	x23, x0
   11b24:	cbz	x0, 11cfc <grub_normal_add_menu_entry+0x6e4>
   11b28:	adrp	x1, 0 <grub_normal_free_menu-0x268>
   11b2c:	mov	x28, #0x0                   	// #0
   11b30:	adrp	x27, 0 <grub_normal_free_menu-0x268>
   11b34:	ldr	x1, [x1]
   11b38:	bl	0 <grub_strcpy>
   11b3c:	add	x3, x23, #0x9
   11b40:	mov	w0, #0x2720                	// #10016
   11b44:	strh	w0, [x3], #2
   11b48:	ldr	x25, [x26, x28, lsl #3]
   11b4c:	ldrb	w0, [x25]
   11b50:	cbz	w0, 11b74 <grub_normal_add_menu_entry+0x55c>
   11b54:	mov	x1, x3
   11b58:	add	x25, x25, #0x1
   11b5c:	cmp	w0, #0x27
   11b60:	b.eq	11c24 <grub_normal_add_menu_entry+0x60c>  // b.none
   11b64:	strb	w0, [x1], #1
   11b68:	ldrb	w0, [x25]
   11b6c:	mov	x3, x1
   11b70:	cbnz	w0, 11b54 <grub_normal_add_menu_entry+0x53c>
   11b74:	mov	w0, #0x27                  	// #39
   11b78:	strb	w0, [x3], #1
   11b7c:	add	x28, x28, #0x1
   11b80:	cmp	w21, w28
   11b84:	b.gt	11b40 <grub_normal_add_menu_entry+0x528>
   11b88:	ldp	x27, x28, [sp, #96]
   11b8c:	mov	w0, #0xa                   	// #10
   11b90:	strh	w0, [x3]
   11b94:	add	x7, x22, #0x1
   11b98:	ldr	x4, [sp, #128]
   11b9c:	mov	x6, x23
   11ba0:	ldp	x1, x3, [x20]
   11ba4:	mov	w0, w21
   11ba8:	ldr	x5, [x1]
   11bac:	mov	x1, x26
   11bb0:	ldr	x2, [x3, #8]
   11bb4:	ldr	x9, [x5, #16]
   11bb8:	ldr	x5, [x3, #40]
   11bbc:	ldrb	w9, [x9]
   11bc0:	ldr	x3, [x3, #72]
   11bc4:	cmp	w9, #0x73
   11bc8:	cset	w9, eq  // eq = none
   11bcc:	str	w9, [sp]
   11bd0:	bl	11618 <grub_normal_add_menu_entry>
   11bd4:	mov	w20, w0
   11bd8:	ldr	w1, [sp, #140]
   11bdc:	mov	x0, x23
   11be0:	ldrb	w2, [sp, #136]
   11be4:	strb	w2, [x22, w1, uxtw]
   11be8:	str	x22, [x26, x19]
   11bec:	bl	0 <grub_free>
   11bf0:	mov	w0, w20
   11bf4:	ldp	x29, x30, [sp, #16]
   11bf8:	ldp	x19, x20, [sp, #32]
   11bfc:	ldp	x21, x22, [sp, #48]
   11c00:	ldp	x23, x24, [sp, #64]
   11c04:	ldp	x25, x26, [sp, #80]
   11c08:	add	sp, sp, #0x90
   11c0c:	ret
   11c10:	cbnz	x2, 11a84 <grub_normal_add_menu_entry+0x46c>
   11c14:	adrp	x1, 0 <grub_normal_free_menu-0x268>
   11c18:	mov	w0, #0x12                  	// #18
   11c1c:	ldr	x1, [x1]
   11c20:	b	11ce8 <grub_normal_add_menu_entry+0x6d0>
   11c24:	ldr	x24, [x27]
   11c28:	mov	x0, x3
   11c2c:	str	x3, [sp, #120]
   11c30:	mov	x1, x24
   11c34:	bl	0 <grub_strcpy>
   11c38:	mov	x0, x24
   11c3c:	bl	0 <grub_strlen>
   11c40:	ldr	x3, [sp, #120]
   11c44:	add	x3, x3, x0
   11c48:	b	11b4c <grub_normal_add_menu_entry+0x534>
   11c4c:	adrp	x4, 0 <grub_normal_free_menu-0x268>
   11c50:	ldr	w1, [x3, #80]
   11c54:	ldr	x25, [x4]
   11c58:	cmp	w1, #0x0
   11c5c:	csel	x1, xzr, x25, ne  // ne = any
   11c60:	str	x1, [sp, #128]
   11c64:	cbnz	x2, 11a98 <grub_normal_add_menu_entry+0x480>
   11c68:	ldr	w1, [x3]
   11c6c:	cbz	w1, 11c74 <grub_normal_add_menu_entry+0x65c>
   11c70:	ldr	x2, [x3, #8]
   11c74:	mov	x1, x26
   11c78:	ldr	x6, [x20]
   11c7c:	ldr	x5, [x3, #40]
   11c80:	ldr	x6, [x6]
   11c84:	ldr	x7, [x3, #56]
   11c88:	ldr	x8, [x6, #16]
   11c8c:	mov	x6, #0x0                   	// #0
   11c90:	ldr	x3, [x3, #72]
   11c94:	ldrb	w8, [x8]
   11c98:	ldr	x4, [sp, #128]
   11c9c:	cmp	w8, #0x73
   11ca0:	cset	w8, eq  // eq = none
   11ca4:	str	w8, [sp]
   11ca8:	bl	11618 <grub_normal_add_menu_entry>
   11cac:	str	w0, [sp, #120]
   11cb0:	mov	w20, w0
   11cb4:	mov	w0, w20
   11cb8:	ldp	x29, x30, [sp, #16]
   11cbc:	ldp	x19, x20, [sp, #32]
   11cc0:	ldp	x25, x26, [sp, #80]
   11cc4:	add	sp, sp, #0x90
   11cc8:	ret
   11ccc:	adrp	x1, 0 <grub_normal_free_menu-0x268>
   11cd0:	mov	w0, #0x12                  	// #18
   11cd4:	ldr	x1, [x1]
   11cd8:	b	0 <grub_error>
   11cdc:	adrp	x1, 0 <grub_normal_free_menu-0x268>
   11ce0:	mov	w0, #0x12                  	// #18
   11ce4:	ldr	x1, [x1]
   11ce8:	ldp	x29, x30, [sp, #16]
   11cec:	ldp	x19, x20, [sp, #32]
   11cf0:	ldp	x25, x26, [sp, #80]
   11cf4:	add	sp, sp, #0x90
   11cf8:	b	0 <grub_error>
   11cfc:	ldp	x27, x28, [sp, #96]
   11d00:	adrp	x0, 0 <grub_normal_free_menu-0x268>
   11d04:	ldp	x29, x30, [sp, #16]
   11d08:	ldr	x0, [x0]
   11d0c:	ldp	x21, x22, [sp, #48]
   11d10:	ldr	w20, [x0]
   11d14:	ldp	x23, x24, [sp, #64]
   11d18:	mov	w0, w20
   11d1c:	ldp	x19, x20, [sp, #32]
   11d20:	ldp	x25, x26, [sp, #80]
   11d24:	add	sp, sp, #0x90
   11d28:	ret
   11d2c:	mov	x0, #0xc                   	// #12
   11d30:	bl	0 <grub_malloc>
   11d34:	mov	x23, x0
   11d38:	cbz	x0, 11d00 <grub_normal_add_menu_entry+0x6e8>
   11d3c:	adrp	x1, 0 <grub_normal_free_menu-0x268>
   11d40:	ldr	x1, [x1]
   11d44:	bl	0 <grub_strcpy>
   11d48:	add	x3, x23, #0x9
   11d4c:	b	11b8c <grub_normal_add_menu_entry+0x574>
	...

0000000000011d88 <grub_menu_init>:
   11d88:	stp	x29, x30, [sp, #-48]!
   11d8c:	adrp	x5, 0 <grub_normal_free_menu-0x268>
   11d90:	adrp	x4, 0 <grub_normal_free_menu-0x268>
   11d94:	adrp	x0, 0 <grub_normal_free_menu-0x268>
   11d98:	mov	x29, sp
   11d9c:	adrp	x3, 0 <grub_normal_free_menu-0x268>
   11da0:	adrp	x1, 0 <grub_normal_free_menu-0x268>
   11da4:	stp	x19, x20, [sp, #16]
   11da8:	mov	w2, #0x2c0                 	// #704
   11dac:	ldr	x19, [x5]
   11db0:	stp	x21, x22, [sp, #32]
   11db4:	ldr	x4, [x4]
   11db8:	add	x19, x19, #0x100
   11dbc:	ldr	x0, [x0]
   11dc0:	mov	x5, x19
   11dc4:	ldr	x22, [x3]
   11dc8:	ldr	x21, [x1]
   11dcc:	mov	x3, x22
   11dd0:	mov	x1, x21
   11dd4:	bl	0 <grub_register_extcmd>
   11dd8:	adrp	x2, 0 <grub_normal_free_menu-0x268>
   11ddc:	mov	x6, x0
   11de0:	adrp	x1, 0 <grub_normal_free_menu-0x268>
   11de4:	adrp	x0, 0 <grub_normal_free_menu-0x268>
   11de8:	ldr	x20, [x2]
   11dec:	mov	x5, x19
   11df0:	ldr	x4, [x1]
   11df4:	mov	x3, x22
   11df8:	ldr	x0, [x0]
   11dfc:	mov	x1, x21
   11e00:	mov	w2, #0x2c0                 	// #704
   11e04:	str	x6, [x20]
   11e08:	bl	0 <grub_register_extcmd>
   11e0c:	ldp	x21, x22, [sp, #32]
   11e10:	str	x0, [x20, #8]
   11e14:	ldp	x19, x20, [sp, #16]
   11e18:	ldp	x29, x30, [sp], #48
   11e1c:	ret
	...

0000000000011e60 <grub_menu_fini>:
   11e60:	stp	x29, x30, [sp, #-32]!
   11e64:	adrp	x0, 0 <grub_normal_free_menu-0x268>
   11e68:	mov	x29, sp
   11e6c:	str	x19, [sp, #16]
   11e70:	ldr	x19, [x0]
   11e74:	ldr	x0, [x19]
   11e78:	bl	0 <grub_unregister_extcmd>
   11e7c:	ldr	x0, [x19, #8]
   11e80:	ldr	x19, [sp, #16]
   11e84:	ldp	x29, x30, [sp], #32
   11e88:	b	0 <grub_unregister_extcmd>
   11e8c:	nop
	...

0000000000011e98 <grub_script_yyparse>:
   11e98:	mov	x12, #0x1460                	// #5216
   11e9c:	sub	sp, sp, x12
   11ea0:	adrp	x1, 0 <grub_normal_free_menu-0x268>
   11ea4:	add	x4, sp, #0x1a0
   11ea8:	stp	x29, x30, [sp]
   11eac:	mov	x29, sp
   11eb0:	stp	x21, x22, [sp, #32]
   11eb4:	ldr	x22, [x1]
   11eb8:	stp	x19, x20, [sp, #16]
   11ebc:	add	x19, sp, #0xd8
   11ec0:	add	x21, x22, #0x200
   11ec4:	stp	x25, x26, [sp, #64]
   11ec8:	mov	x26, x4
   11ecc:	stp	x27, x28, [sp, #80]
   11ed0:	mov	x27, x19
   11ed4:	mov	w28, #0x0                   	// #0
   11ed8:	stp	x23, x24, [sp, #48]
   11edc:	mov	w23, #0xfffffffe            	// #-2
   11ee0:	mov	x24, #0xc8                  	// #200
   11ee4:	str	wzr, [sp, #96]
   11ee8:	str	x0, [sp, #104]
   11eec:	strb	wzr, [sp, #216]
   11ef0:	ldrsh	w20, [x22, w28, sxtw #1]
   11ef4:	sxtw	x25, w28
   11ef8:	cmn	w20, #0x36
   11efc:	mov	w28, w20
   11f00:	b.eq	11f84 <grub_script_yyparse+0xec>  // b.none
   11f04:	cmn	w23, #0x2
   11f08:	b.eq	12318 <grub_script_yyparse+0x480>  // b.none
   11f0c:	cmp	w23, #0x0
   11f10:	b.le	122b4 <grub_script_yyparse+0x41c>
   11f14:	cmp	w23, #0x121
   11f18:	b.le	122c0 <grub_script_yyparse+0x428>
   11f1c:	add	w28, w20, #0x2
   11f20:	mov	w0, #0x2                   	// #2
   11f24:	cmp	w28, #0xdb
   11f28:	b.hi	11f84 <grub_script_yyparse+0xec>  // b.pmore
   11f2c:	ldrsb	w1, [x21, w28, sxtw]
   11f30:	cmp	w1, w0
   11f34:	b.ne	11f84 <grub_script_yyparse+0xec>  // b.any
   11f38:	adrp	x0, 0 <grub_normal_free_menu-0x268>
   11f3c:	ldr	x0, [x0]
   11f40:	ldrsb	w28, [x0, w28, sxtw]
   11f44:	cmp	w28, #0x0
   11f48:	mov	w2, w28
   11f4c:	b.le	12040 <grub_script_yyparse+0x1a8>
   11f50:	ldr	w5, [sp, #96]
   11f54:	add	x3, x4, #0x18
   11f58:	ldp	x0, x1, [sp, #168]
   11f5c:	cmp	w5, #0x0
   11f60:	stp	x0, x1, [x4, #24]
   11f64:	mov	w23, #0xfffffffe            	// #-2
   11f68:	cset	w1, ne  // ne = any
   11f6c:	sub	w1, w5, w1
   11f70:	str	w1, [sp, #96]
   11f74:	ldr	x0, [sp, #184]
   11f78:	mov	x4, x3
   11f7c:	str	x0, [x3, #16]
   11f80:	b	121dc <grub_script_yyparse+0x344>
   11f84:	add	x0, x22, #0x3c0
   11f88:	ldrsb	w28, [x0, x25]
   11f8c:	cbnz	w28, 12044 <grub_script_yyparse+0x1ac>
   11f90:	ldr	w0, [sp, #96]
   11f94:	cbz	w0, 12334 <grub_script_yyparse+0x49c>
   11f98:	ldr	w0, [sp, #96]
   11f9c:	cmp	w0, #0x3
   11fa0:	b.ne	1201c <grub_script_yyparse+0x184>  // b.any
   11fa4:	cmp	w23, #0x0
   11fa8:	b.gt	122d0 <grub_script_yyparse+0x438>
   11fac:	b.ne	1201c <grub_script_yyparse+0x184>  // b.any
   11fb0:	mov	w19, #0x1                   	// #1
   11fb4:	add	x0, sp, #0xd8
   11fb8:	cmp	x27, x0
   11fbc:	b.eq	11fc8 <grub_script_yyparse+0x130>  // b.none
   11fc0:	mov	x0, x27
   11fc4:	bl	0 <grub_free>
   11fc8:	mov	w0, w19
   11fcc:	mov	x12, #0x1460                	// #5216
   11fd0:	ldp	x29, x30, [sp]
   11fd4:	ldp	x19, x20, [sp, #16]
   11fd8:	ldp	x21, x22, [sp, #32]
   11fdc:	ldp	x23, x24, [sp, #48]
   11fe0:	ldp	x25, x26, [sp, #64]
   11fe4:	ldp	x27, x28, [sp, #80]
   11fe8:	add	sp, sp, x12
   11fec:	ret
   11ff0:	adrp	x0, 0 <grub_normal_free_menu-0x268>
   11ff4:	ldr	x0, [x0]
   11ff8:	ldrsb	w2, [x0, w1, sxtw]
   11ffc:	cmp	w2, #0x0
   12000:	mov	w28, w2
   12004:	b.gt	12350 <grub_script_yyparse+0x4b8>
   12008:	cmp	x19, x27
   1200c:	b.eq	11fb0 <grub_script_yyparse+0x118>  // b.none
   12010:	ldrsb	x1, [x19, #-1]!
   12014:	sub	x4, x4, #0x18
   12018:	ldrsh	w20, [x22, x1, lsl #1]
   1201c:	add	w1, w20, #0x1
   12020:	cmn	w20, #0x36
   12024:	b.eq	12008 <grub_script_yyparse+0x170>  // b.none
   12028:	cmp	w1, #0xdb
   1202c:	b.hi	12008 <grub_script_yyparse+0x170>  // b.pmore
   12030:	ldrsb	w0, [x21, w1, sxtw]
   12034:	cmp	w0, #0x1
   12038:	b.ne	12008 <grub_script_yyparse+0x170>  // b.any
   1203c:	b	11ff0 <grub_script_yyparse+0x158>
   12040:	neg	w28, w28
   12044:	add	x1, x22, #0x430
   12048:	sub	w3, w28, #0x2
   1204c:	sxtw	x20, w28
   12050:	mov	w2, #0x1                   	// #1
   12054:	mov	w0, #0x18                  	// #24
   12058:	cmp	w3, #0x3d
   1205c:	ldrsb	w28, [x1, w28, sxtw]
   12060:	sub	w2, w2, w28
   12064:	smaddl	x2, w2, w0, x4
   12068:	ldp	x12, x11, [x2, #8]
   1206c:	str	x11, [sp, #208]
   12070:	ldp	x0, x1, [x2]
   12074:	stp	x0, x1, [sp, #192]
   12078:	mov	x25, x11
   1207c:	b.hi	12180 <grub_script_yyparse+0x2e8>  // b.pmore
   12080:	adrp	x0, 0 <grub_normal_free_menu-0x268>
   12084:	ldr	x0, [x0]
   12088:	ldrh	w0, [x0, w3, uxtw #1]
   1208c:	adr	x1, 12098 <grub_script_yyparse+0x200>
   12090:	add	x0, x1, w0, sxth #2
   12094:	br	x0
   12098:	ldp	x1, x13, [x4, #-64]
   1209c:	sub	x2, x4, #0x48
   120a0:	ldr	x0, [sp, #104]
   120a4:	stp	x4, x2, [sp, #112]
   120a8:	stp	x13, x12, [sp, #136]
   120ac:	bl	e388 <grub_script_mem_record_stop>
   120b0:	ldr	x4, [sp, #112]
   120b4:	str	x0, [sp, #112]
   120b8:	ldr	x0, [sp, #104]
   120bc:	str	x4, [sp, #128]
   120c0:	ldur	w1, [x4, #-72]
   120c4:	bl	10c38 <grub_script_lexer_record_stop>
   120c8:	mov	x3, x0
   120cc:	ldp	x4, x13, [sp, #128]
   120d0:	ldr	x12, [sp, #144]
   120d4:	cbz	x0, 120f4 <grub_script_yyparse+0x25c>
   120d8:	mov	w1, #0x7d                  	// #125
   120dc:	str	x12, [sp, #128]
   120e0:	stp	x0, x4, [sp, #144]
   120e4:	bl	0 <grub_strrchr>
   120e8:	ldp	x12, x13, [sp, #128]
   120ec:	strb	wzr, [x0]
   120f0:	ldp	x3, x4, [sp, #144]
   120f4:	mov	w2, #0x6                   	// #6
   120f8:	ldr	x0, [sp, #104]
   120fc:	mov	x1, #0x0                   	// #0
   12100:	stp	x12, x13, [sp, #128]
   12104:	str	x4, [sp, #144]
   12108:	bl	e3f8 <grub_script_arg_add>
   1210c:	str	x0, [sp, #192]
   12110:	mov	x2, x0
   12114:	ldp	x12, x13, [sp, #128]
   12118:	ldr	x4, [sp, #144]
   1211c:	cbz	x0, 126d0 <grub_script_yyparse+0x838>
   12120:	ldur	x0, [x4, #-48]
   12124:	stp	x4, x12, [sp, #128]
   12128:	ldr	x1, [sp, #112]
   1212c:	stp	x2, x13, [sp, #144]
   12130:	bl	e830 <grub_script_create>
   12134:	ldr	x2, [sp, #144]
   12138:	ldp	x4, x12, [sp, #128]
   1213c:	str	x0, [x2, #16]
   12140:	cbz	x0, 126d0 <grub_script_yyparse+0x838>
   12144:	ldr	x1, [sp, #120]
   12148:	ldr	x3, [sp, #104]
   1214c:	ldr	x1, [x1, #16]
   12150:	ldr	x2, [x3, #24]
   12154:	cmp	x1, #0x0
   12158:	ldr	x13, [sp, #152]
   1215c:	str	x2, [x0, #32]
   12160:	csel	x1, x1, x0, ne  // ne = any
   12164:	str	x1, [x3, #24]
   12168:	cbnz	x13, 12614 <grub_script_yyparse+0x77c>
   1216c:	ldr	x0, [sp, #104]
   12170:	stp	x12, x4, [sp, #112]
   12174:	ldr	x0, [x0, #40]
   12178:	bl	10bc0 <grub_script_lexer_deref>
   1217c:	ldp	x12, x4, [sp, #112]
   12180:	mov	w1, #0x18                  	// #24
   12184:	add	x0, x22, #0x470
   12188:	stp	x12, x25, [sp, #200]
   1218c:	smsubl	x9, w28, w1, x4
   12190:	sub	x19, x19, w28, sxtb
   12194:	add	x3, x22, #0x4b0
   12198:	ldrsb	w2, [x0, x20]
   1219c:	add	x4, x9, #0x18
   121a0:	ldp	x0, x1, [sp, #192]
   121a4:	sub	w2, w2, #0x23
   121a8:	stp	x0, x1, [x9, #24]
   121ac:	str	x25, [x4, #16]
   121b0:	ldrsb	w0, [x3, w2, sxtw]
   121b4:	ldrsb	w1, [x19]
   121b8:	add	w0, w0, w1
   121bc:	cmp	w0, #0xdb
   121c0:	b.hi	121d0 <grub_script_yyparse+0x338>  // b.pmore
   121c4:	ldrsb	w3, [x21, w0, sxtw]
   121c8:	cmp	w3, w1
   121cc:	b.eq	122d8 <grub_script_yyparse+0x440>  // b.none
   121d0:	add	x0, x22, #0x4d0
   121d4:	ldrsb	w2, [x0, w2, sxtw]
   121d8:	mov	w28, w2
   121dc:	sub	x0, x24, #0x1
   121e0:	strb	w2, [x19, #1]
   121e4:	add	x0, x27, x0
   121e8:	add	x19, x19, #0x1
   121ec:	cmp	x19, x0
   121f0:	b.cc	122a4 <grub_script_yyparse+0x40c>  // b.lo, b.ul, b.last
   121f4:	sub	x19, x19, x27
   121f8:	mov	x0, #0x270f                	// #9999
   121fc:	add	x20, x19, #0x1
   12200:	cmp	x24, x0
   12204:	b.gt	12394 <grub_script_yyparse+0x4fc>
   12208:	lsl	x7, x24, #1
   1220c:	mov	x0, #0x2710                	// #10000
   12210:	cmp	x7, x0
   12214:	csel	x24, x7, x0, le
   12218:	add	x0, x24, x24, lsl #1
   1221c:	add	x0, x24, x0, lsl #3
   12220:	add	x0, x0, #0x17
   12224:	bl	0 <grub_malloc>
   12228:	mov	x25, x0
   1222c:	cbz	x0, 12394 <grub_script_yyparse+0x4fc>
   12230:	mov	x2, x20
   12234:	mov	x1, x27
   12238:	bl	0 <memcpy>
   1223c:	add	x20, x20, x20, lsl #1
   12240:	add	x3, x24, #0x17
   12244:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   12248:	movk	x0, #0xaaab
   1224c:	mov	x1, x26
   12250:	lsl	x20, x20, #3
   12254:	umulh	x26, x3, x0
   12258:	mov	x2, x20
   1225c:	lsr	x26, x26, #4
   12260:	add	x26, x26, x26, lsl #1
   12264:	add	x26, x25, x26, lsl #3
   12268:	mov	x0, x26
   1226c:	bl	0 <memcpy>
   12270:	add	x0, sp, #0xd8
   12274:	cmp	x27, x0
   12278:	b.eq	12284 <grub_script_yyparse+0x3ec>  // b.none
   1227c:	mov	x0, x27
   12280:	bl	0 <grub_free>
   12284:	sub	x0, x24, #0x1
   12288:	add	x19, x25, x19
   1228c:	sub	x4, x20, #0x18
   12290:	add	x0, x25, x0
   12294:	add	x4, x26, x4
   12298:	mov	x27, x25
   1229c:	cmp	x19, x0
   122a0:	b.cs	11fb0 <grub_script_yyparse+0x118>  // b.hs, b.nlast
   122a4:	cmp	w28, #0x3
   122a8:	b.ne	11ef0 <grub_script_yyparse+0x58>  // b.any
   122ac:	mov	w19, #0x0                   	// #0
   122b0:	b	11fb4 <grub_script_yyparse+0x11c>
   122b4:	mov	w0, #0x0                   	// #0
   122b8:	mov	w23, #0x0                   	// #0
   122bc:	b	11f24 <grub_script_yyparse+0x8c>
   122c0:	add	x0, x22, #0xd8
   122c4:	ldrsb	w0, [x0, w23, sxtw]
   122c8:	add	w28, w20, w0
   122cc:	b	11f24 <grub_script_yyparse+0x8c>
   122d0:	mov	w23, #0xfffffffe            	// #-2
   122d4:	b	1201c <grub_script_yyparse+0x184>
   122d8:	adrp	x1, 0 <grub_normal_free_menu-0x268>
   122dc:	ldr	x1, [x1]
   122e0:	ldrsb	w2, [x1, w0, sxtw]
   122e4:	mov	w28, w2
   122e8:	b	121dc <grub_script_yyparse+0x344>
   122ec:	ldr	x2, [x4]
   122f0:	mov	x1, #0x0                   	// #0
   122f4:	ldr	x0, [sp, #104]
   122f8:	stp	x4, x12, [sp, #112]
   122fc:	bl	e4a0 <grub_script_add_arglist>
   12300:	str	x0, [sp, #192]
   12304:	ldp	x4, x12, [sp, #112]
   12308:	b	12180 <grub_script_yyparse+0x2e8>
   1230c:	ldr	x0, [x4]
   12310:	str	x0, [sp, #192]
   12314:	b	12180 <grub_script_yyparse+0x2e8>
   12318:	ldr	x1, [sp, #104]
   1231c:	add	x0, sp, #0xa8
   12320:	str	x4, [sp, #112]
   12324:	bl	110f0 <grub_script_yylex>
   12328:	mov	w23, w0
   1232c:	ldr	x4, [sp, #112]
   12330:	b	11f0c <grub_script_yyparse+0x74>
   12334:	adrp	x1, 0 <grub_normal_free_menu-0x268>
   12338:	str	x4, [sp, #96]
   1233c:	ldr	x0, [sp, #104]
   12340:	ldr	x1, [x1]
   12344:	bl	11250 <grub_script_yyerror>
   12348:	ldr	x4, [sp, #96]
   1234c:	b	1201c <grub_script_yyparse+0x184>
   12350:	ldp	x0, x1, [sp, #168]
   12354:	add	x3, x4, #0x18
   12358:	stp	x0, x1, [x4, #24]
   1235c:	mov	x4, x3
   12360:	mov	w1, #0x3                   	// #3
   12364:	str	w1, [sp, #96]
   12368:	ldr	x0, [sp, #184]
   1236c:	str	x0, [x3, #16]
   12370:	b	121dc <grub_script_yyparse+0x344>
   12374:	ldr	x0, [sp, #104]
   12378:	stp	x12, x4, [sp, #112]
   1237c:	ldr	x0, [x0, #40]
   12380:	bl	10bb0 <grub_script_lexer_ref>
   12384:	ldp	x12, x4, [sp, #112]
   12388:	b	12180 <grub_script_yyparse+0x2e8>
   1238c:	str	xzr, [sp, #192]
   12390:	b	12180 <grub_script_yyparse+0x2e8>
   12394:	adrp	x1, 0 <grub_normal_free_menu-0x268>
   12398:	mov	w19, #0x2                   	// #2
   1239c:	ldr	x0, [sp, #104]
   123a0:	ldr	x1, [x1]
   123a4:	bl	11250 <grub_script_yyerror>
   123a8:	b	11fb4 <grub_script_yyparse+0x11c>
   123ac:	ldur	x1, [x4, #-120]
   123b0:	mov	w3, #0x1                   	// #1
   123b4:	ldur	x2, [x4, #-48]
   123b8:	stp	x4, x12, [sp, #112]
   123bc:	ldr	x0, [sp, #104]
   123c0:	bl	e718 <grub_script_create_cmdwhile>
   123c4:	mov	x1, x0
   123c8:	ldr	x0, [sp, #104]
   123cc:	str	x1, [sp, #192]
   123d0:	ldr	x0, [x0, #40]
   123d4:	bl	10bc0 <grub_script_lexer_deref>
   123d8:	ldp	x4, x12, [sp, #112]
   123dc:	b	12180 <grub_script_yyparse+0x2e8>
   123e0:	ldr	x2, [x4]
   123e4:	ldur	x0, [x4, #-24]
   123e8:	cbz	x2, 12400 <grub_script_yyparse+0x568>
   123ec:	mov	x1, x0
   123f0:	stp	x12, x4, [sp, #112]
   123f4:	ldr	x0, [sp, #104]
   123f8:	bl	e4a0 <grub_script_add_arglist>
   123fc:	ldp	x12, x4, [sp, #112]
   12400:	cmp	x0, #0x0
   12404:	ldur	x1, [x4, #-48]
   12408:	ccmp	x1, #0x0, #0x4, ne  // ne = any
   1240c:	b.eq	12428 <grub_script_yyparse+0x590>  // b.none
   12410:	ldr	w3, [x0, #16]
   12414:	ldr	w2, [x1, #16]
   12418:	str	x0, [x1]
   1241c:	add	w2, w2, w3
   12420:	str	w2, [x1, #16]
   12424:	str	wzr, [x0, #16]
   12428:	ldr	x0, [sp, #104]
   1242c:	stp	x12, x4, [sp, #112]
   12430:	bl	e568 <grub_script_create_cmdline>
   12434:	str	x0, [sp, #192]
   12438:	ldp	x12, x4, [sp, #112]
   1243c:	b	12180 <grub_script_yyparse+0x2e8>
   12440:	ldr	x0, [sp, #104]
   12444:	stp	x4, x12, [sp, #112]
   12448:	ldr	x1, [x0]
   1244c:	bl	e388 <grub_script_mem_record_stop>
   12450:	mov	x1, x0
   12454:	ldp	x2, x4, [sp, #104]
   12458:	ldur	x0, [x4, #-48]
   1245c:	str	x1, [x2]
   12460:	bl	e830 <grub_script_create>
   12464:	mov	x1, x0
   12468:	ldp	x4, x12, [sp, #112]
   1246c:	cbz	x0, 126e4 <grub_script_yyparse+0x84c>
   12470:	ldr	x2, [sp, #104]
   12474:	stp	x4, x12, [sp, #112]
   12478:	ldur	x0, [x4, #-144]
   1247c:	ldr	x2, [x2, #24]
   12480:	str	x2, [x1, #32]
   12484:	bl	108c0 <grub_script_function_create>
   12488:	ldp	x4, x12, [sp, #112]
   1248c:	stp	x4, x12, [sp, #112]
   12490:	ldr	x2, [sp, #104]
   12494:	ldur	x1, [x4, #-104]
   12498:	ldr	x0, [x2, #40]
   1249c:	str	x1, [x2, #24]
   124a0:	bl	10bc0 <grub_script_lexer_deref>
   124a4:	ldp	x4, x12, [sp, #112]
   124a8:	b	12180 <grub_script_yyparse+0x2e8>
   124ac:	ldur	x0, [x4, #-24]
   124b0:	cbz	x0, 12310 <grub_script_yyparse+0x478>
   124b4:	ldr	x1, [x4]
   124b8:	cbz	x1, 12310 <grub_script_yyparse+0x478>
   124bc:	ldr	w3, [x1, #16]
   124c0:	ldr	w2, [x0, #16]
   124c4:	str	x1, [x0]
   124c8:	add	w2, w2, w3
   124cc:	str	w2, [x0, #16]
   124d0:	str	wzr, [x1, #16]
   124d4:	str	x0, [sp, #192]
   124d8:	b	12180 <grub_script_yyparse+0x2e8>
   124dc:	ldur	x1, [x4, #-48]
   124e0:	str	x12, [sp, #120]
   124e4:	ldr	x2, [x4]
   124e8:	ldr	x0, [sp, #104]
   124ec:	str	x4, [sp, #112]
   124f0:	bl	e770 <grub_script_append_cmd>
   124f4:	str	x0, [sp, #192]
   124f8:	ldp	x4, x12, [sp, #112]
   124fc:	b	12180 <grub_script_yyparse+0x2e8>
   12500:	ldr	x2, [x4]
   12504:	mov	x1, #0x0                   	// #0
   12508:	ldr	x0, [sp, #104]
   1250c:	stp	x4, x12, [sp, #112]
   12510:	bl	e770 <grub_script_append_cmd>
   12514:	str	x0, [sp, #192]
   12518:	ldp	x4, x12, [sp, #112]
   1251c:	b	12180 <grub_script_yyparse+0x2e8>
   12520:	ldr	x1, [sp, #104]
   12524:	ldr	x0, [x4]
   12528:	str	wzr, [x1, #8]
   1252c:	str	x0, [x1, #32]
   12530:	b	12180 <grub_script_yyparse+0x2e8>
   12534:	ldr	x0, [sp, #104]
   12538:	str	wzr, [x0, #8]
   1253c:	b	12180 <grub_script_yyparse+0x2e8>
   12540:	ldur	x1, [x4, #-96]
   12544:	mov	x3, #0x0                   	// #0
   12548:	ldur	x2, [x4, #-24]
   1254c:	stp	x4, x12, [sp, #112]
   12550:	ldr	x0, [sp, #104]
   12554:	bl	e5e8 <grub_script_create_cmdif>
   12558:	str	x0, [sp, #192]
   1255c:	ldp	x4, x12, [sp, #112]
   12560:	b	12180 <grub_script_yyparse+0x2e8>
   12564:	ldr	x25, [sp, #104]
   12568:	str	x4, [sp, #112]
   1256c:	ldr	x0, [x25, #40]
   12570:	bl	10bb0 <grub_script_lexer_ref>
   12574:	mov	x0, x25
   12578:	bl	10bd0 <grub_script_lexer_record_start>
   1257c:	mov	w1, w0
   12580:	mov	x0, x25
   12584:	str	w1, [sp, #192]
   12588:	bl	e378 <grub_script_mem_record>
   1258c:	mov	x12, x0
   12590:	mov	x0, x25
   12594:	ldr	x25, [x25, #24]
   12598:	str	xzr, [x0, #24]
   1259c:	ldr	x4, [sp, #112]
   125a0:	b	12180 <grub_script_yyparse+0x2e8>
   125a4:	ldur	x1, [x4, #-168]
   125a8:	str	x12, [sp, #120]
   125ac:	ldur	x2, [x4, #-96]
   125b0:	ldur	x3, [x4, #-24]
   125b4:	ldr	x0, [sp, #104]
   125b8:	str	x4, [sp, #112]
   125bc:	bl	e5e8 <grub_script_create_cmdif>
   125c0:	str	x0, [sp, #192]
   125c4:	ldp	x4, x12, [sp, #112]
   125c8:	b	12180 <grub_script_yyparse+0x2e8>
   125cc:	str	x12, [sp, #120]
   125d0:	ldur	x1, [x4, #-72]
   125d4:	ldur	x2, [x4, #-48]
   125d8:	ldr	x0, [sp, #104]
   125dc:	b	124ec <grub_script_yyparse+0x654>
   125e0:	ldur	x1, [x4, #-120]
   125e4:	mov	w3, #0x0                   	// #0
   125e8:	ldur	x2, [x4, #-48]
   125ec:	stp	x4, x12, [sp, #112]
   125f0:	ldr	x0, [sp, #104]
   125f4:	bl	e718 <grub_script_create_cmdwhile>
   125f8:	mov	x1, x0
   125fc:	str	x1, [sp, #192]
   12600:	ldr	x0, [sp, #104]
   12604:	ldr	x0, [x0, #40]
   12608:	bl	10bc0 <grub_script_lexer_deref>
   1260c:	ldp	x4, x12, [sp, #112]
   12610:	b	12180 <grub_script_yyparse+0x2e8>
   12614:	mov	x1, x13
   12618:	ldr	x13, [x13, #24]
   1261c:	cbnz	x13, 12614 <grub_script_yyparse+0x77c>
   12620:	str	x0, [x1, #24]
   12624:	b	1216c <grub_script_yyparse+0x2d4>
   12628:	ldr	x0, [sp, #104]
   1262c:	stp	x4, x12, [sp, #112]
   12630:	ldur	x1, [x4, #-24]
   12634:	str	x1, [sp, #192]
   12638:	ldr	x0, [x0, #40]
   1263c:	bl	10bc0 <grub_script_lexer_deref>
   12640:	ldp	x4, x12, [sp, #112]
   12644:	b	12180 <grub_script_yyparse+0x2e8>
   12648:	ldr	x25, [sp, #104]
   1264c:	stp	x12, x4, [sp, #112]
   12650:	ldr	x0, [x25, #40]
   12654:	bl	10bb0 <grub_script_lexer_ref>
   12658:	mov	x0, x25
   1265c:	bl	e378 <grub_script_mem_record>
   12660:	mov	x1, x25
   12664:	str	x0, [x25]
   12668:	ldr	x25, [x25, #24]
   1266c:	str	xzr, [x1, #24]
   12670:	ldp	x12, x4, [sp, #112]
   12674:	b	12180 <grub_script_yyparse+0x2e8>
   12678:	ldur	x1, [x4, #-192]
   1267c:	stp	x4, x12, [sp, #112]
   12680:	ldur	x2, [x4, #-120]
   12684:	ldur	x3, [x4, #-48]
   12688:	ldr	x0, [sp, #104]
   1268c:	bl	e680 <grub_script_create_cmdfor>
   12690:	b	125f8 <grub_script_yyparse+0x760>
   12694:	adrp	x1, 0 <grub_normal_free_menu-0x268>
   12698:	str	wzr, [sp, #96]
   1269c:	ldr	x0, [sp, #104]
   126a0:	stp	x12, x4, [sp, #112]
   126a4:	ldr	x1, [x1]
   126a8:	str	xzr, [sp, #192]
   126ac:	bl	11250 <grub_script_yyerror>
   126b0:	ldp	x12, x4, [sp, #112]
   126b4:	b	12180 <grub_script_yyparse+0x2e8>
   126b8:	str	x12, [sp, #120]
   126bc:	ldur	x1, [x4, #-144]
   126c0:	ldur	x2, [x4, #-72]
   126c4:	ldr	x3, [x4]
   126c8:	ldr	x0, [sp, #104]
   126cc:	b	125b8 <grub_script_yyparse+0x720>
   126d0:	ldr	x0, [sp, #112]
   126d4:	stp	x12, x4, [sp, #120]
   126d8:	bl	e2e0 <grub_script_mem_free>
   126dc:	ldp	x12, x4, [sp, #120]
   126e0:	b	1216c <grub_script_yyparse+0x2d4>
   126e4:	ldr	x0, [sp, #104]
   126e8:	stp	x12, x4, [sp, #112]
   126ec:	ldr	x0, [x0]
   126f0:	bl	e2e0 <grub_script_mem_free>
   126f4:	ldp	x12, x4, [sp, #112]
   126f8:	b	1248c <grub_script_yyparse+0x5f4>
   126fc:	nop
	...
   12730:	mov	x11, x0
   12734:	ldr	w0, [x0, #76]
   12738:	ldr	x13, [x11, #64]
   1273c:	ldr	x9, [x11, #8320]
   12740:	cmp	x9, x13
   12744:	b.cs	127e8 <grub_script_yyparse+0x950>  // b.hs, b.nlast
   12748:	adrp	x1, 0 <grub_normal_free_menu-0x268>
   1274c:	ldr	x12, [x1]
   12750:	add	x15, x12, #0x100
   12754:	add	x7, x12, #0x278
   12758:	add	x6, x12, #0x428
   1275c:	add	x8, x12, #0xa98
   12760:	add	x10, x12, #0xc48
   12764:	add	x14, x12, #0xc70
   12768:	ldrb	w1, [x9]
   1276c:	cbz	w1, 127ec <grub_script_yyparse+0x954>
   12770:	ldrb	w2, [x12, w1, sxtw]
   12774:	mov	w4, w2
   12778:	ldrsh	w1, [x15, w0, sxtw #1]
   1277c:	sxtw	x3, w0
   12780:	cbz	w1, 1278c <grub_script_yyparse+0x8f4>
   12784:	str	w0, [x11, #104]
   12788:	str	x9, [x11, #112]
   1278c:	ldrsh	w1, [x7, x3, lsl #1]
   12790:	add	w1, w1, w4
   12794:	sxtw	x5, w1
   12798:	ldrsh	w1, [x6, w1, sxtw #1]
   1279c:	cmp	w1, w0
   127a0:	b.eq	127d8 <grub_script_yyparse+0x940>  // b.none
   127a4:	nop
   127a8:	ldrsh	w0, [x8, x3, lsl #1]
   127ac:	cmp	w0, #0xbb
   127b0:	b.le	127b8 <grub_script_yyparse+0x920>
   127b4:	ldrb	w2, [x10, w4, sxtw]
   127b8:	ldrsh	w1, [x7, w0, sxtw #1]
   127bc:	sxtw	x3, w0
   127c0:	mov	w4, w2
   127c4:	add	w1, w1, w2
   127c8:	sxtw	x5, w1
   127cc:	ldrsh	w1, [x6, w1, sxtw #1]
   127d0:	cmp	w1, w0
   127d4:	b.ne	127a8 <grub_script_yyparse+0x910>  // b.any
   127d8:	add	x9, x9, #0x1
   127dc:	ldrsh	w0, [x14, x5, lsl #1]
   127e0:	cmp	x9, x13
   127e4:	b.ne	12768 <grub_script_yyparse+0x8d0>  // b.any
   127e8:	ret
   127ec:	mov	w4, #0x1                   	// #1
   127f0:	mov	w2, w4
   127f4:	b	12778 <grub_script_yyparse+0x8e0>
	...
   12800:	stp	x29, x30, [sp, #-48]!
   12804:	mov	x29, sp
   12808:	stp	x19, x20, [sp, #16]
   1280c:	mov	x19, x0
   12810:	ldr	w0, [x0, #84]
   12814:	sub	w0, w0, #0x1
   12818:	str	w0, [x19, #84]
   1281c:	tbz	w0, #31, 12864 <grub_script_yyparse+0x9cc>
   12820:	adrp	x1, 0 <grub_normal_free_menu-0x268>
   12824:	str	x21, [sp, #32]
   12828:	adrp	x0, 0 <grub_normal_free_menu-0x268>
   1282c:	ldr	x21, [x1]
   12830:	ldr	x0, [x0]
   12834:	ldr	x1, [x21]
   12838:	blr	x1
   1283c:	mov	x20, x0
   12840:	adrp	x2, 0 <grub_normal_free_menu-0x268>
   12844:	ldr	x1, [x21]
   12848:	ldr	x0, [x2]
   1284c:	blr	x1
   12850:	mov	x1, x0
   12854:	mov	x0, x20
   12858:	bl	0 <grub_printf>
   1285c:	ldr	w0, [x19, #84]
   12860:	ldr	x21, [sp, #32]
   12864:	ldr	x1, [x19, #96]
   12868:	ldr	w0, [x1, w0, sxtw #2]
   1286c:	lsl	w0, w0, #1
   12870:	add	w0, w0, #0x1
   12874:	str	w0, [x19, #76]
   12878:	ldp	x19, x20, [sp, #16]
   1287c:	ldp	x29, x30, [sp], #48
   12880:	ret
   12884:	nop
	...
   128a0:	stp	x29, x30, [sp, #-48]!
   128a4:	mov	x29, sp
   128a8:	stp	x19, x20, [sp, #16]
   128ac:	mov	x19, x0
   128b0:	ldr	x0, [x0, #40]
   128b4:	cbz	x0, 1290c <grub_script_yyparse+0xa74>
   128b8:	ldp	x3, x1, [x19, #24]
   128bc:	sub	x2, x1, #0x1
   128c0:	cmp	x3, x2
   128c4:	b.cs	128d4 <grub_script_yyparse+0xa3c>  // b.hs, b.nlast
   128c8:	ldp	x19, x20, [sp, #16]
   128cc:	ldp	x29, x30, [sp], #48
   128d0:	ret
   128d4:	add	x20, x1, #0x8
   128d8:	lsl	x1, x20, #3
   128dc:	bl	0 <grub_realloc>
   128e0:	str	x0, [x19, #40]
   128e4:	cbz	x0, 12934 <grub_script_yyparse+0xa9c>
   128e8:	ldr	x3, [x19, #32]
   128ec:	mov	x2, #0x40                  	// #64
   128f0:	mov	w1, #0x0                   	// #0
   128f4:	add	x0, x0, x3, lsl #3
   128f8:	bl	0 <grub_memset>
   128fc:	str	x20, [x19, #32]
   12900:	ldp	x19, x20, [sp, #16]
   12904:	ldp	x29, x30, [sp], #48
   12908:	ret
   1290c:	mov	x0, #0x8                   	// #8
   12910:	bl	0 <grub_malloc>
   12914:	str	x0, [x19, #40]
   12918:	cbz	x0, 1297c <grub_script_yyparse+0xae4>
   1291c:	mov	x2, #0x8                   	// #8
   12920:	mov	w1, #0x0                   	// #0
   12924:	bl	0 <grub_memset>
   12928:	mov	x0, #0x1                   	// #1
   1292c:	stp	xzr, x0, [x19, #24]
   12930:	b	128c8 <grub_script_yyparse+0xa30>
   12934:	adrp	x1, 0 <grub_normal_free_menu-0x268>
   12938:	stp	x21, x22, [sp, #32]
   1293c:	adrp	x0, 0 <grub_normal_free_menu-0x268>
   12940:	ldr	x22, [x1]
   12944:	ldr	x0, [x0]
   12948:	ldr	x1, [x22]
   1294c:	blr	x1
   12950:	mov	x21, x0
   12954:	adrp	x2, 0 <grub_normal_free_menu-0x268>
   12958:	ldr	x1, [x22]
   1295c:	ldr	x0, [x2]
   12960:	blr	x1
   12964:	mov	x1, x0
   12968:	mov	x0, x21
   1296c:	bl	0 <grub_printf>
   12970:	ldp	x21, x22, [sp, #32]
   12974:	ldr	x0, [x19, #40]
   12978:	b	128e8 <grub_script_yyparse+0xa50>
   1297c:	adrp	x1, 0 <grub_normal_free_menu-0x268>
   12980:	stp	x21, x22, [sp, #32]
   12984:	adrp	x0, 0 <grub_normal_free_menu-0x268>
   12988:	ldr	x21, [x1]
   1298c:	ldr	x0, [x0]
   12990:	ldr	x1, [x21]
   12994:	blr	x1
   12998:	mov	x20, x0
   1299c:	adrp	x2, 0 <grub_normal_free_menu-0x268>
   129a0:	ldr	x1, [x21]
   129a4:	ldr	x0, [x2]
   129a8:	blr	x1
   129ac:	mov	x1, x0
   129b0:	mov	x0, x20
   129b4:	bl	0 <grub_printf>
   129b8:	ldp	x21, x22, [sp, #32]
   129bc:	ldr	x0, [x19, #40]
   129c0:	b	1291c <grub_script_yyparse+0xa84>
   129c4:	nop
	...
   129e0:	stp	x29, x30, [sp, #-48]!
   129e4:	mov	x29, sp
   129e8:	stp	x19, x20, [sp, #16]
   129ec:	mov	x19, x1
   129f0:	mov	w20, w0
   129f4:	ldp	w2, w1, [x1, #84]
   129f8:	ldr	x0, [x19, #96]
   129fc:	cmp	w2, w1
   12a00:	b.lt	12a24 <grub_script_yyparse+0xb8c>  // b.tstop
   12a04:	add	w1, w1, #0x19
   12a08:	str	w1, [x19, #88]
   12a0c:	sbfiz	x1, x1, #2, #32
   12a10:	cbz	x0, 12a58 <grub_script_yyparse+0xbc0>
   12a14:	bl	0 <grub_realloc>
   12a18:	str	x0, [x19, #96]
   12a1c:	cbz	x0, 12a68 <grub_script_yyparse+0xbd0>
   12a20:	ldr	w2, [x19, #84]
   12a24:	ldr	w1, [x19, #76]
   12a28:	add	w3, w2, #0x1
   12a2c:	str	w3, [x19, #84]
   12a30:	lsl	w20, w20, #1
   12a34:	sub	w1, w1, #0x1
   12a38:	add	w20, w20, #0x1
   12a3c:	add	w1, w1, w1, lsr #31
   12a40:	asr	w1, w1, #1
   12a44:	str	w1, [x0, w2, sxtw #2]
   12a48:	str	w20, [x19, #76]
   12a4c:	ldp	x19, x20, [sp, #16]
   12a50:	ldp	x29, x30, [sp], #48
   12a54:	ret
   12a58:	mov	x0, x1
   12a5c:	bl	0 <grub_malloc>
   12a60:	str	x0, [x19, #96]
   12a64:	cbnz	x0, 12a20 <grub_script_yyparse+0xb88>
   12a68:	adrp	x1, 0 <grub_normal_free_menu-0x268>
   12a6c:	stp	x21, x22, [sp, #32]
   12a70:	adrp	x0, 0 <grub_normal_free_menu-0x268>
   12a74:	ldr	x22, [x1]
   12a78:	ldr	x0, [x0]
   12a7c:	ldr	x1, [x22]
   12a80:	blr	x1
   12a84:	mov	x21, x0
   12a88:	adrp	x2, 0 <grub_normal_free_menu-0x268>
   12a8c:	ldr	x1, [x22]
   12a90:	ldr	x0, [x2]
   12a94:	blr	x1
   12a98:	mov	x1, x0
   12a9c:	mov	x0, x21
   12aa0:	bl	0 <grub_printf>
   12aa4:	ldr	w2, [x19, #84]
   12aa8:	ldp	x21, x22, [sp, #32]
   12aac:	ldr	x0, [x19, #96]
   12ab0:	b	12a24 <grub_script_yyparse+0xb8c>
   12ab4:	nop
	...
   12ad0:	stp	x29, x30, [sp, #-48]!
   12ad4:	mov	x29, sp
   12ad8:	stp	x19, x20, [sp, #16]
   12adc:	mov	x20, x0
   12ae0:	mov	w19, w2
   12ae4:	stp	x21, x22, [sp, #32]
   12ae8:	mov	x21, x1
   12aec:	cbz	w2, 12b68 <grub_script_yyparse+0xcd0>
   12af0:	ldr	x0, [x20, #40]
   12af4:	ldp	w2, w1, [x0, #64]
   12af8:	ldr	x0, [x0, #56]
   12afc:	add	w3, w2, w19
   12b00:	cmp	w3, w1
   12b04:	b.cc	12b34 <grub_script_yyparse+0xc9c>  // b.lo, b.ul, b.last
   12b08:	lsl	w1, w1, #1
   12b0c:	lsl	w2, w19, #1
   12b10:	cmp	w2, w1
   12b14:	csel	w22, w2, w1, cs  // cs = hs, nlast
   12b18:	mov	w1, w22
   12b1c:	bl	0 <grub_realloc>
   12b20:	cbz	x0, 12b78 <grub_script_yyparse+0xce0>
   12b24:	ldr	x1, [x20, #40]
   12b28:	ldr	w2, [x1, #64]
   12b2c:	str	x0, [x1, #56]
   12b30:	str	w22, [x1, #68]
   12b34:	mov	w2, w2
   12b38:	mov	x1, x21
   12b3c:	sub	x2, x2, #0x1
   12b40:	add	x0, x0, x2
   12b44:	bl	0 <grub_strcpy>
   12b48:	ldr	x0, [x20, #40]
   12b4c:	ldp	x21, x22, [sp, #32]
   12b50:	ldr	w2, [x0, #64]
   12b54:	add	w19, w2, w19
   12b58:	str	w19, [x0, #64]
   12b5c:	ldp	x19, x20, [sp, #16]
   12b60:	ldp	x29, x30, [sp], #48
   12b64:	ret
   12b68:	mov	x0, x1
   12b6c:	bl	0 <grub_strlen>
   12b70:	mov	w19, w0
   12b74:	b	12af0 <grub_script_yyparse+0xc58>
   12b78:	mov	x0, x20
   12b7c:	mov	x1, #0x0                   	// #0
   12b80:	ldp	x19, x20, [sp, #16]
   12b84:	ldp	x21, x22, [sp, #32]
   12b88:	ldp	x29, x30, [sp], #48
   12b8c:	b	11250 <grub_script_yyerror>
   12b90:	stp	x29, x30, [sp, #-48]!
   12b94:	mov	x29, sp
   12b98:	stp	x19, x20, [sp, #16]
   12b9c:	mov	x20, x0
   12ba0:	mov	x19, x1
   12ba4:	ldr	x0, [x1]
   12ba8:	str	x21, [sp, #32]
   12bac:	ldr	x21, [x0, #40]
   12bb0:	ldr	x0, [x21, #80]
   12bb4:	bl	0 <grub_free>
   12bb8:	mov	x0, x20
   12bbc:	bl	0 <grub_strdup>
   12bc0:	str	x0, [x21, #80]
   12bc4:	cbz	x0, 12bdc <grub_script_yyparse+0xd44>
   12bc8:	mov	w0, #0x0                   	// #0
   12bcc:	ldp	x19, x20, [sp, #16]
   12bd0:	ldr	x21, [sp, #32]
   12bd4:	ldp	x29, x30, [sp], #48
   12bd8:	ret
   12bdc:	adrp	x1, 0 <grub_normal_free_menu-0x268>
   12be0:	ldr	x0, [x19]
   12be4:	ldr	x1, [x1]
   12be8:	bl	11250 <grub_script_yyerror>
   12bec:	mov	w0, #0x1                   	// #1
   12bf0:	b	12bcc <grub_script_yyparse+0xd34>
   12bf4:	nop
	...

0000000000012c00 <yy_switch_to_buffer>:
   12c00:	stp	x29, x30, [sp, #-32]!
   12c04:	mov	x29, sp
   12c08:	stp	x19, x20, [sp, #16]
   12c0c:	mov	x19, x1
   12c10:	mov	x20, x0
   12c14:	mov	x0, x1
   12c18:	bl	128a0 <grub_script_yyparse+0xa08>
   12c1c:	ldr	x1, [x19, #40]
   12c20:	cbz	x1, 12ca4 <yy_switch_to_buffer+0xa4>
   12c24:	ldr	x0, [x19, #24]
   12c28:	ldr	x2, [x1, x0, lsl #3]
   12c2c:	add	x0, x1, x0, lsl #3
   12c30:	cmp	x2, x20
   12c34:	b.eq	12c98 <yy_switch_to_buffer+0x98>  // b.none
   12c38:	cbz	x2, 12c68 <yy_switch_to_buffer+0x68>
   12c3c:	ldr	x0, [x19, #64]
   12c40:	ldrb	w1, [x19, #48]
   12c44:	strb	w1, [x0]
   12c48:	ldr	x2, [x19, #24]
   12c4c:	ldr	x1, [x19, #40]
   12c50:	ldr	w3, [x19, #52]
   12c54:	ldr	x4, [x19, #64]
   12c58:	add	x0, x1, x2, lsl #3
   12c5c:	ldr	x1, [x1, x2, lsl #3]
   12c60:	str	x4, [x1, #16]
   12c64:	str	w3, [x1, #28]
   12c68:	ldr	x1, [x20, #16]
   12c6c:	ldr	w2, [x20, #28]
   12c70:	ldr	x3, [x20]
   12c74:	str	x20, [x0]
   12c78:	str	x3, [x19, #8]
   12c7c:	mov	w0, #0x1                   	// #1
   12c80:	str	w2, [x19, #52]
   12c84:	str	x1, [x19, #64]
   12c88:	str	x1, [x19, #8320]
   12c8c:	ldrb	w1, [x1]
   12c90:	strb	w1, [x19, #48]
   12c94:	str	w0, [x19, #80]
   12c98:	ldp	x19, x20, [sp, #16]
   12c9c:	ldp	x29, x30, [sp], #32
   12ca0:	ret
   12ca4:	cbz	x20, 12c98 <yy_switch_to_buffer+0x98>
   12ca8:	ldr	x0, [x19, #24]
   12cac:	lsl	x0, x0, #3
   12cb0:	b	12c68 <yy_switch_to_buffer+0x68>
   12cb4:	nop

0000000000012cb8 <yy_delete_buffer>:
   12cb8:	cbz	x0, 12d20 <yy_delete_buffer+0x68>
   12cbc:	stp	x29, x30, [sp, #-32]!
   12cc0:	mov	x29, sp
   12cc4:	str	x19, [sp, #16]
   12cc8:	mov	x19, x0
   12ccc:	ldr	x0, [x1, #40]
   12cd0:	cbz	x0, 12ce4 <yy_delete_buffer+0x2c>
   12cd4:	ldr	x1, [x1, #24]
   12cd8:	ldr	x2, [x0, x1, lsl #3]
   12cdc:	cmp	x19, x2
   12ce0:	b.eq	12cfc <yy_delete_buffer+0x44>  // b.none
   12ce4:	ldr	w0, [x19, #32]
   12ce8:	cbnz	w0, 12d08 <yy_delete_buffer+0x50>
   12cec:	mov	x0, x19
   12cf0:	ldr	x19, [sp, #16]
   12cf4:	ldp	x29, x30, [sp], #32
   12cf8:	b	0 <grub_free>
   12cfc:	str	xzr, [x0, x1, lsl #3]
   12d00:	ldr	w0, [x19, #32]
   12d04:	cbz	w0, 12cec <yy_delete_buffer+0x34>
   12d08:	ldr	x0, [x19, #8]
   12d0c:	bl	0 <grub_free>
   12d10:	mov	x0, x19
   12d14:	ldr	x19, [sp, #16]
   12d18:	ldp	x29, x30, [sp], #32
   12d1c:	b	0 <grub_free>
   12d20:	ret
   12d24:	nop

0000000000012d28 <yy_flush_buffer>:
   12d28:	cbz	x0, 12d6c <yy_flush_buffer+0x44>
   12d2c:	ldr	x3, [x0, #8]
   12d30:	str	wzr, [x0, #28]
   12d34:	mov	w2, #0x1                   	// #1
   12d38:	strb	wzr, [x3]
   12d3c:	ldr	x3, [x0, #8]
   12d40:	strb	wzr, [x3, #1]
   12d44:	ldr	x3, [x1, #40]
   12d48:	str	w2, [x0, #40]
   12d4c:	ldr	x2, [x0, #8]
   12d50:	str	x2, [x0, #16]
   12d54:	str	wzr, [x0, #56]
   12d58:	cbz	x3, 12d6c <yy_flush_buffer+0x44>
   12d5c:	ldr	x4, [x1, #24]
   12d60:	ldr	x3, [x3, x4, lsl #3]
   12d64:	cmp	x0, x3
   12d68:	b.eq	12d70 <yy_flush_buffer+0x48>  // b.none
   12d6c:	ret
   12d70:	ldr	x3, [x0]
   12d74:	ldr	w0, [x0, #28]
   12d78:	str	x3, [x1, #8]
   12d7c:	str	w0, [x1, #52]
   12d80:	str	x2, [x1, #64]
   12d84:	str	x2, [x1, #8320]
   12d88:	ldrb	w0, [x2]
   12d8c:	strb	w0, [x1, #48]
   12d90:	ret
   12d94:	nop
   12d98:	stp	x29, x30, [sp, #-16]!
   12d9c:	adrp	x3, 0 <grub_normal_free_menu-0x268>
   12da0:	mov	x5, x0
   12da4:	mov	x29, sp
   12da8:	ldr	x8, [x3]
   12dac:	mov	x7, x1
   12db0:	mov	x6, x2
   12db4:	mov	x1, x2
   12db8:	ldr	w9, [x8]
   12dbc:	bl	12d28 <yy_flush_buffer>
   12dc0:	ldr	x0, [x6, #40]
   12dc4:	mov	w1, #0x1                   	// #1
   12dc8:	str	x7, [x5]
   12dcc:	str	w1, [x5, #52]
   12dd0:	cbz	x0, 12de4 <yy_flush_buffer+0xbc>
   12dd4:	ldr	x1, [x6, #24]
   12dd8:	ldr	x0, [x0, x1, lsl #3]
   12ddc:	cmp	x5, x0
   12de0:	b.eq	12dec <yy_flush_buffer+0xc4>  // b.none
   12de4:	mov	x0, #0x1                   	// #1
   12de8:	stur	x0, [x5, #44]
   12dec:	str	w9, [x8]
   12df0:	str	wzr, [x5, #36]
   12df4:	ldp	x29, x30, [sp], #16
   12df8:	ret
   12dfc:	nop
	...

0000000000012e08 <yy_create_buffer>:
   12e08:	stp	x29, x30, [sp, #-64]!
   12e0c:	mov	x29, sp
   12e10:	stp	x19, x20, [sp, #16]
   12e14:	mov	w20, w1
   12e18:	stp	x21, x22, [sp, #32]
   12e1c:	mov	x21, x0
   12e20:	mov	x22, x2
   12e24:	mov	x0, #0x40                  	// #64
   12e28:	bl	0 <grub_malloc>
   12e2c:	mov	x19, x0
   12e30:	cbz	x0, 12e78 <yy_create_buffer+0x70>
   12e34:	add	w0, w20, #0x2
   12e38:	str	w20, [x19, #24]
   12e3c:	sxtw	x0, w0
   12e40:	bl	0 <grub_malloc>
   12e44:	str	x0, [x19, #8]
   12e48:	cbz	x0, 12ed0 <yy_create_buffer+0xc8>
   12e4c:	mov	w1, #0x1                   	// #1
   12e50:	str	w1, [x19, #32]
   12e54:	mov	x2, x22
   12e58:	mov	x0, x19
   12e5c:	mov	x1, x21
   12e60:	bl	12d98 <yy_flush_buffer+0x70>
   12e64:	mov	x0, x19
   12e68:	ldp	x19, x20, [sp, #16]
   12e6c:	ldp	x21, x22, [sp, #32]
   12e70:	ldp	x29, x30, [sp], #64
   12e74:	ret
   12e78:	adrp	x1, 0 <grub_normal_free_menu-0x268>
   12e7c:	stp	x23, x24, [sp, #48]
   12e80:	adrp	x0, 0 <grub_normal_free_menu-0x268>
   12e84:	ldr	x24, [x1]
   12e88:	ldr	x0, [x0]
   12e8c:	ldr	x1, [x24]
   12e90:	blr	x1
   12e94:	mov	x23, x0
   12e98:	adrp	x2, 0 <grub_normal_free_menu-0x268>
   12e9c:	ldr	x1, [x24]
   12ea0:	ldr	x0, [x2]
   12ea4:	blr	x1
   12ea8:	mov	x1, x0
   12eac:	mov	x0, x23
   12eb0:	bl	0 <grub_printf>
   12eb4:	add	w0, w20, #0x2
   12eb8:	ldp	x23, x24, [sp, #48]
   12ebc:	str	w20, [x19, #24]
   12ec0:	sxtw	x0, w0
   12ec4:	bl	0 <grub_malloc>
   12ec8:	str	x0, [x19, #8]
   12ecc:	cbnz	x0, 12e4c <yy_create_buffer+0x44>
   12ed0:	adrp	x1, 0 <grub_normal_free_menu-0x268>
   12ed4:	stp	x23, x24, [sp, #48]
   12ed8:	adrp	x0, 0 <grub_normal_free_menu-0x268>
   12edc:	ldr	x23, [x1]
   12ee0:	ldr	x0, [x0]
   12ee4:	ldr	x1, [x23]
   12ee8:	blr	x1
   12eec:	mov	x20, x0
   12ef0:	adrp	x2, 0 <grub_normal_free_menu-0x268>
   12ef4:	ldr	x1, [x23]
   12ef8:	ldr	x0, [x2]
   12efc:	blr	x1
   12f00:	mov	x1, x0
   12f04:	mov	x0, x20
   12f08:	bl	0 <grub_printf>
   12f0c:	ldp	x23, x24, [sp, #48]
   12f10:	b	12e4c <yy_create_buffer+0x44>
   12f14:	nop
	...

0000000000012f30 <yyrestart>:
   12f30:	stp	x29, x30, [sp, #-48]!
   12f34:	mov	x29, sp
   12f38:	stp	x19, x20, [sp, #16]
   12f3c:	mov	x20, x0
   12f40:	mov	x19, x1
   12f44:	ldr	x0, [x1, #40]
   12f48:	cbz	x0, 12fa0 <yyrestart+0x70>
   12f4c:	ldr	x1, [x1, #24]
   12f50:	ldr	x0, [x0, x1, lsl #3]
   12f54:	cbz	x0, 12fa0 <yyrestart+0x70>
   12f58:	mov	x1, x20
   12f5c:	mov	x2, x19
   12f60:	bl	12d98 <yy_flush_buffer+0x70>
   12f64:	ldr	x1, [x19, #24]
   12f68:	ldr	x0, [x19, #40]
   12f6c:	ldr	x1, [x0, x1, lsl #3]
   12f70:	ldr	x0, [x1, #16]
   12f74:	ldr	x2, [x1]
   12f78:	ldr	w1, [x1, #28]
   12f7c:	str	x2, [x19, #8]
   12f80:	str	w1, [x19, #52]
   12f84:	str	x0, [x19, #64]
   12f88:	str	x0, [x19, #8320]
   12f8c:	ldrb	w0, [x0]
   12f90:	strb	w0, [x19, #48]
   12f94:	ldp	x19, x20, [sp, #16]
   12f98:	ldp	x29, x30, [sp], #48
   12f9c:	ret
   12fa0:	mov	x0, x19
   12fa4:	stp	x21, x22, [sp, #32]
   12fa8:	bl	128a0 <grub_script_yyparse+0xa08>
   12fac:	ldr	x0, [x19, #8]
   12fb0:	mov	w1, #0x4000                	// #16384
   12fb4:	ldr	x22, [x19, #24]
   12fb8:	mov	x2, x19
   12fbc:	ldr	x21, [x19, #40]
   12fc0:	bl	12e08 <yy_create_buffer>
   12fc4:	mov	x1, x0
   12fc8:	ldr	x0, [x19, #40]
   12fcc:	str	x1, [x21, x22, lsl #3]
   12fd0:	cbnz	x0, 12fdc <yyrestart+0xac>
   12fd4:	ldp	x21, x22, [sp, #32]
   12fd8:	b	12f58 <yyrestart+0x28>
   12fdc:	ldr	x1, [x19, #24]
   12fe0:	ldp	x21, x22, [sp, #32]
   12fe4:	ldr	x0, [x0, x1, lsl #3]
   12fe8:	b	12f58 <yyrestart+0x28>
   12fec:	nop

0000000000012ff0 <yypush_buffer_state>:
   12ff0:	cbz	x0, 130a8 <yypush_buffer_state+0xb8>
   12ff4:	stp	x29, x30, [sp, #-32]!
   12ff8:	mov	x29, sp
   12ffc:	stp	x19, x20, [sp, #16]
   13000:	mov	x19, x1
   13004:	mov	x20, x0
   13008:	mov	x0, x1
   1300c:	bl	128a0 <grub_script_yyparse+0xa08>
   13010:	ldr	x1, [x19, #40]
   13014:	ldr	x0, [x19, #24]
   13018:	cbz	x1, 130a0 <yypush_buffer_state+0xb0>
   1301c:	ldr	x2, [x1, x0, lsl #3]
   13020:	add	x0, x1, x0, lsl #3
   13024:	cbz	x2, 13064 <yypush_buffer_state+0x74>
   13028:	ldr	x0, [x19, #64]
   1302c:	ldrb	w1, [x19, #48]
   13030:	strb	w1, [x0]
   13034:	ldr	x1, [x19, #24]
   13038:	ldr	x2, [x19, #40]
   1303c:	ldr	w4, [x19, #52]
   13040:	ldr	x5, [x19, #64]
   13044:	add	x0, x2, x1, lsl #3
   13048:	ldr	x3, [x2, x1, lsl #3]
   1304c:	str	x5, [x3, #16]
   13050:	str	w4, [x3, #28]
   13054:	cbz	x2, 13064 <yypush_buffer_state+0x74>
   13058:	add	x0, x1, #0x1
   1305c:	str	x0, [x19, #24]
   13060:	add	x0, x2, x0, lsl #3
   13064:	ldr	x1, [x20, #16]
   13068:	ldr	w2, [x20, #28]
   1306c:	ldr	x3, [x20]
   13070:	str	x20, [x0]
   13074:	str	x3, [x19, #8]
   13078:	mov	w0, #0x1                   	// #1
   1307c:	str	w2, [x19, #52]
   13080:	str	x1, [x19, #64]
   13084:	str	x1, [x19, #8320]
   13088:	ldrb	w1, [x1]
   1308c:	strb	w1, [x19, #48]
   13090:	str	w0, [x19, #80]
   13094:	ldp	x19, x20, [sp, #16]
   13098:	ldp	x29, x30, [sp], #32
   1309c:	ret
   130a0:	lsl	x0, x0, #3
   130a4:	b	13064 <yypush_buffer_state+0x74>
   130a8:	ret
   130ac:	nop

00000000000130b0 <yypop_buffer_state>:
   130b0:	stp	x29, x30, [sp, #-32]!
   130b4:	mov	x29, sp
   130b8:	str	x19, [sp, #16]
   130bc:	mov	x19, x0
   130c0:	ldr	x0, [x0, #40]
   130c4:	cbz	x0, 13130 <yypop_buffer_state+0x80>
   130c8:	ldr	x1, [x19, #24]
   130cc:	ldr	x0, [x0, x1, lsl #3]
   130d0:	cbz	x0, 13130 <yypop_buffer_state+0x80>
   130d4:	mov	x1, x19
   130d8:	bl	12cb8 <yy_delete_buffer>
   130dc:	ldr	x0, [x19, #24]
   130e0:	ldr	x1, [x19, #40]
   130e4:	str	xzr, [x1, x0, lsl #3]
   130e8:	cbz	x0, 130f4 <yypop_buffer_state+0x44>
   130ec:	sub	x0, x0, #0x1
   130f0:	str	x0, [x19, #24]
   130f4:	cbz	x1, 13130 <yypop_buffer_state+0x80>
   130f8:	ldr	x0, [x19, #24]
   130fc:	ldr	x0, [x1, x0, lsl #3]
   13100:	cbz	x0, 13130 <yypop_buffer_state+0x80>
   13104:	ldr	x1, [x0, #16]
   13108:	mov	w2, #0x1                   	// #1
   1310c:	ldr	x3, [x0]
   13110:	ldr	w0, [x0, #28]
   13114:	str	x3, [x19, #8]
   13118:	str	w0, [x19, #52]
   1311c:	str	x1, [x19, #64]
   13120:	str	x1, [x19, #8320]
   13124:	ldrb	w0, [x1]
   13128:	strb	w0, [x19, #48]
   1312c:	str	w2, [x19, #80]
   13130:	ldr	x19, [sp, #16]
   13134:	ldp	x29, x30, [sp], #32
   13138:	ret
   1313c:	nop

0000000000013140 <yy_scan_buffer>:
   13140:	stp	x29, x30, [sp, #-64]!
   13144:	cmp	x1, #0x1
   13148:	mov	x29, sp
   1314c:	stp	x19, x20, [sp, #16]
   13150:	b.ls	1323c <yy_scan_buffer+0xfc>  // b.plast
   13154:	stp	x21, x22, [sp, #32]
   13158:	mov	x21, x0
   1315c:	add	x0, x0, x1
   13160:	mov	x20, x1
   13164:	ldurb	w1, [x0, #-2]
   13168:	cbnz	w1, 13224 <yy_scan_buffer+0xe4>
   1316c:	ldurb	w0, [x0, #-1]
   13170:	mov	x19, #0x0                   	// #0
   13174:	cbnz	w0, 131cc <yy_scan_buffer+0x8c>
   13178:	mov	x22, x2
   1317c:	mov	x0, #0x40                  	// #64
   13180:	bl	0 <grub_malloc>
   13184:	mov	x19, x0
   13188:	cbz	x0, 131e0 <yy_scan_buffer+0xa0>
   1318c:	mov	w2, #0x1                   	// #1
   13190:	sub	w20, w20, #0x2
   13194:	stp	xzr, x21, [x19]
   13198:	mov	x1, x22
   1319c:	mov	x0, x19
   131a0:	str	x21, [x19, #16]
   131a4:	stp	w20, w20, [x19, #24]
   131a8:	str	xzr, [x19, #32]
   131ac:	str	w2, [x19, #40]
   131b0:	stur	xzr, [x19, #52]
   131b4:	bl	12c00 <yy_switch_to_buffer>
   131b8:	mov	x0, x19
   131bc:	ldp	x19, x20, [sp, #16]
   131c0:	ldp	x21, x22, [sp, #32]
   131c4:	ldp	x29, x30, [sp], #64
   131c8:	ret
   131cc:	mov	x0, x19
   131d0:	ldp	x19, x20, [sp, #16]
   131d4:	ldp	x21, x22, [sp, #32]
   131d8:	ldp	x29, x30, [sp], #64
   131dc:	ret
   131e0:	adrp	x1, 0 <grub_normal_free_menu-0x268>
   131e4:	stp	x23, x24, [sp, #48]
   131e8:	adrp	x0, 0 <grub_normal_free_menu-0x268>
   131ec:	ldr	x24, [x1]
   131f0:	ldr	x0, [x0]
   131f4:	ldr	x1, [x24]
   131f8:	blr	x1
   131fc:	mov	x23, x0
   13200:	adrp	x2, 0 <grub_normal_free_menu-0x268>
   13204:	ldr	x1, [x24]
   13208:	ldr	x0, [x2]
   1320c:	blr	x1
   13210:	mov	x1, x0
   13214:	mov	x0, x23
   13218:	bl	0 <grub_printf>
   1321c:	ldp	x23, x24, [sp, #48]
   13220:	b	1318c <yy_scan_buffer+0x4c>
   13224:	mov	x19, #0x0                   	// #0
   13228:	mov	x0, x19
   1322c:	ldp	x19, x20, [sp, #16]
   13230:	ldp	x21, x22, [sp, #32]
   13234:	ldp	x29, x30, [sp], #64
   13238:	ret
   1323c:	mov	x19, #0x0                   	// #0
   13240:	mov	x0, x19
   13244:	ldp	x19, x20, [sp, #16]
   13248:	ldp	x29, x30, [sp], #64
   1324c:	ret
	...

0000000000013268 <yy_scan_bytes>:
   13268:	stp	x29, x30, [sp, #-80]!
   1326c:	mov	x29, sp
   13270:	stp	x21, x22, [sp, #32]
   13274:	add	w22, w1, #0x2
   13278:	mov	x21, x0
   1327c:	sxtw	x22, w22
   13280:	stp	x19, x20, [sp, #16]
   13284:	mov	x0, x22
   13288:	mov	w20, w1
   1328c:	stp	x23, x24, [sp, #48]
   13290:	mov	x23, x2
   13294:	bl	0 <grub_malloc>
   13298:	mov	x19, x0
   1329c:	cbz	x0, 13308 <yy_scan_bytes+0xa0>
   132a0:	cmp	w20, #0x0
   132a4:	b.le	132c4 <yy_scan_bytes+0x5c>
   132a8:	mov	x3, #0x0                   	// #0
   132ac:	nop
   132b0:	ldrb	w4, [x21, x3]
   132b4:	strb	w4, [x19, x3]
   132b8:	add	x3, x3, #0x1
   132bc:	cmp	w20, w3
   132c0:	b.gt	132b0 <yy_scan_bytes+0x48>
   132c4:	add	x3, x19, w20, sxtw
   132c8:	mov	x0, x19
   132cc:	mov	x2, x23
   132d0:	mov	x1, x22
   132d4:	strb	wzr, [x3, #1]
   132d8:	strb	wzr, [x19, w20, sxtw]
   132dc:	bl	13140 <yy_scan_buffer>
   132e0:	mov	x19, x0
   132e4:	cbz	x0, 1334c <yy_scan_bytes+0xe4>
   132e8:	mov	w1, #0x1                   	// #1
   132ec:	mov	x0, x19
   132f0:	ldp	x21, x22, [sp, #32]
   132f4:	ldp	x23, x24, [sp, #48]
   132f8:	str	w1, [x19, #32]
   132fc:	ldp	x19, x20, [sp, #16]
   13300:	ldp	x29, x30, [sp], #80
   13304:	ret
   13308:	adrp	x1, 0 <grub_normal_free_menu-0x268>
   1330c:	str	x25, [sp, #64]
   13310:	adrp	x0, 0 <grub_normal_free_menu-0x268>
   13314:	ldr	x25, [x1]
   13318:	ldr	x0, [x0]
   1331c:	ldr	x1, [x25]
   13320:	blr	x1
   13324:	mov	x24, x0
   13328:	adrp	x2, 0 <grub_normal_free_menu-0x268>
   1332c:	ldr	x1, [x25]
   13330:	ldr	x0, [x2]
   13334:	blr	x1
   13338:	mov	x1, x0
   1333c:	mov	x0, x24
   13340:	bl	0 <grub_printf>
   13344:	ldr	x25, [sp, #64]
   13348:	b	132a0 <yy_scan_bytes+0x38>
   1334c:	adrp	x1, 0 <grub_normal_free_menu-0x268>
   13350:	adrp	x0, 0 <grub_normal_free_menu-0x268>
   13354:	ldr	x21, [x1]
   13358:	ldr	x0, [x0]
   1335c:	ldr	x1, [x21]
   13360:	blr	x1
   13364:	mov	x20, x0
   13368:	adrp	x2, 0 <grub_normal_free_menu-0x268>
   1336c:	ldr	x1, [x21]
   13370:	ldr	x0, [x2]
   13374:	blr	x1
   13378:	mov	x1, x0
   1337c:	mov	x0, x20
   13380:	bl	0 <grub_printf>
   13384:	mov	w1, #0x1                   	// #1
   13388:	mov	x0, x19
   1338c:	ldp	x21, x22, [sp, #32]
   13390:	ldp	x23, x24, [sp, #48]
   13394:	str	w1, [x19, #32]
   13398:	ldp	x19, x20, [sp, #16]
   1339c:	ldp	x29, x30, [sp], #80
   133a0:	ret
   133a4:	nop
	...

00000000000133c8 <yy_scan_string>:
   133c8:	stp	x29, x30, [sp, #-32]!
   133cc:	mov	x29, sp
   133d0:	stp	x19, x20, [sp, #16]
   133d4:	mov	x20, x1
   133d8:	mov	x19, x0
   133dc:	bl	0 <grub_strlen>
   133e0:	mov	w1, w0
   133e4:	mov	x2, x20
   133e8:	mov	x0, x19
   133ec:	ldp	x19, x20, [sp, #16]
   133f0:	ldp	x29, x30, [sp], #32
   133f4:	b	13268 <yy_scan_bytes>
   133f8:	stp	x29, x30, [sp, #-32]!
   133fc:	mov	x29, sp
   13400:	stp	x19, x20, [sp, #16]
   13404:	mov	x19, x1
   13408:	mov	x20, x0
   1340c:	bl	0 <grub_strlen>
   13410:	mov	w1, w0
   13414:	mov	x2, x19
   13418:	mov	x0, x20
   1341c:	bl	13268 <yy_scan_bytes>
   13420:	cbz	x0, 1344c <yy_scan_string+0x84>
   13424:	ldr	x2, [x19]
   13428:	mov	w0, #0x1                   	// #1
   1342c:	mov	x1, x19
   13430:	ldr	x2, [x2, #40]
   13434:	str	w0, [x2, #44]
   13438:	bl	129e0 <grub_script_yyparse+0xb48>
   1343c:	mov	w0, #0x0                   	// #0
   13440:	ldp	x19, x20, [sp, #16]
   13444:	ldp	x29, x30, [sp], #32
   13448:	ret
   1344c:	ldr	x0, [x19]
   13450:	mov	x1, #0x0                   	// #0
   13454:	bl	11250 <grub_script_yyerror>
   13458:	mov	w0, #0x1                   	// #1
   1345c:	ldp	x19, x20, [sp, #16]
   13460:	ldp	x29, x30, [sp], #32
   13464:	ret

0000000000013468 <yylex>:
   13468:	stp	x29, x30, [sp, #-128]!
   1346c:	mov	x29, sp
   13470:	stp	x19, x20, [sp, #16]
   13474:	mov	x20, x1
   13478:	ldr	w1, [x1, #72]
   1347c:	stp	x21, x22, [sp, #32]
   13480:	stp	x23, x24, [sp, #48]
   13484:	stp	x25, x26, [sp, #64]
   13488:	stp	x27, x28, [sp, #80]
   1348c:	str	x0, [x20, #8336]
   13490:	cbz	w1, 1363c <yylex+0x1d4>
   13494:	ldrb	w3, [x20, #48]
   13498:	ldr	x11, [x20, #64]
   1349c:	adrp	x1, 0 <grub_normal_free_menu-0x268>
   134a0:	adrp	x0, 0 <grub_normal_free_menu-0x268>
   134a4:	add	x22, x20, #0x80
   134a8:	ldr	x21, [x1]
   134ac:	ldr	x0, [x0]
   134b0:	str	x0, [sp, #104]
   134b4:	add	x28, x21, #0x100
   134b8:	strb	w3, [x11]
   134bc:	mov	x27, x11
   134c0:	ldr	w0, [x20, #76]
   134c4:	add	x7, x21, #0x278
   134c8:	add	x6, x21, #0x428
   134cc:	add	x8, x21, #0xa98
   134d0:	add	x1, x21, #0xc48
   134d4:	add	x12, x21, #0xc70
   134d8:	ldrsh	w2, [x28, w0, sxtw #1]
   134dc:	sxtw	x4, w0
   134e0:	ldrb	w3, [x21, w3, sxtw]
   134e4:	cbz	w2, 134f0 <yylex+0x88>
   134e8:	str	w0, [x20, #104]
   134ec:	str	x11, [x20, #112]
   134f0:	ldrsh	w2, [x7, x4, lsl #1]
   134f4:	b	13510 <yylex+0xa8>
   134f8:	ldrsh	w0, [x8, x4, lsl #1]
   134fc:	cmp	w0, #0xbb
   13500:	b.le	13508 <yylex+0xa0>
   13504:	ldrb	w3, [x1, w3, sxtw]
   13508:	ldrsh	w2, [x7, w0, sxtw #1]
   1350c:	sxtw	x4, w0
   13510:	add	w2, w2, w3
   13514:	sxtw	x5, w2
   13518:	ldrsh	w2, [x6, w2, sxtw #1]
   1351c:	cmp	w2, w0
   13520:	b.ne	134f8 <yylex+0x90>  // b.any
   13524:	ldrsh	w0, [x12, x5, lsl #1]
   13528:	add	x11, x11, #0x1
   1352c:	cmp	w0, #0xbb
   13530:	b.eq	1353c <yylex+0xd4>  // b.none
   13534:	ldrb	w3, [x11]
   13538:	b	134d8 <yylex+0x70>
   1353c:	ldr	w0, [x20, #104]
   13540:	adrp	x23, 0 <grub_normal_free_menu-0x268>
   13544:	ldr	x19, [x20, #112]
   13548:	sub	x1, x19, x27
   1354c:	str	w1, [x20, #56]
   13550:	mov	w2, #0x1fff                	// #8191
   13554:	str	x27, [x20, #8320]
   13558:	ldrsh	w24, [x28, w0, sxtw #1]
   1355c:	ldrb	w0, [x19]
   13560:	strb	w0, [x20, #48]
   13564:	strb	wzr, [x19]
   13568:	ldr	w1, [x20, #56]
   1356c:	cmp	w1, w2
   13570:	b.le	135ac <yylex+0x144>
   13574:	adrp	x1, 0 <grub_normal_free_menu-0x268>
   13578:	ldr	x0, [x23]
   1357c:	ldr	x26, [x1]
   13580:	ldr	x1, [x26]
   13584:	blr	x1
   13588:	mov	x25, x0
   1358c:	adrp	x2, 0 <grub_normal_free_menu-0x268>
   13590:	ldr	x1, [x26]
   13594:	ldr	x0, [x2]
   13598:	blr	x1
   1359c:	mov	x1, x0
   135a0:	mov	x0, x25
   135a4:	bl	0 <grub_printf>
   135a8:	ldr	w1, [x20, #56]
   135ac:	sxtw	x4, w1
   135b0:	mov	x0, #0x0                   	// #0
   135b4:	ldr	x3, [x20, #8320]
   135b8:	tbnz	w1, #31, 135d4 <yylex+0x16c>
   135bc:	nop
   135c0:	ldrb	w2, [x3, x0]
   135c4:	cmp	x4, x0
   135c8:	strb	w2, [x22, x0]
   135cc:	add	x0, x0, #0x1
   135d0:	b.ne	135c0 <yylex+0x158>  // b.any
   135d4:	mov	w25, #0x1                   	// #1
   135d8:	str	x19, [x20, #64]
   135dc:	cmp	w24, #0x4b
   135e0:	b.ls	13628 <yylex+0x1c0>  // b.plast
   135e4:	adrp	x1, 0 <grub_normal_free_menu-0x268>
   135e8:	adrp	x0, 0 <grub_normal_free_menu-0x268>
   135ec:	ldr	x24, [x1]
   135f0:	ldr	x0, [x0]
   135f4:	ldr	x1, [x24]
   135f8:	blr	x1
   135fc:	mov	x23, x0
   13600:	adrp	x2, 0 <grub_normal_free_menu-0x268>
   13604:	ldr	x1, [x24]
   13608:	ldr	x0, [x2]
   1360c:	blr	x1
   13610:	mov	x1, x0
   13614:	mov	x0, x23
   13618:	bl	0 <grub_printf>
   1361c:	ldrb	w3, [x20, #48]
   13620:	ldr	x11, [x20, #64]
   13624:	b	134b4 <yylex+0x4c>
   13628:	ldr	x0, [sp, #104]
   1362c:	ldrh	w0, [x0, w24, uxtw #1]
   13630:	adr	x1, 1363c <yylex+0x1d4>
   13634:	add	x0, x1, w0, sxth #2
   13638:	br	x0
   1363c:	ldr	w1, [x20, #76]
   13640:	mov	w0, #0x1                   	// #1
   13644:	str	w0, [x20, #72]
   13648:	cbnz	w1, 13650 <yylex+0x1e8>
   1364c:	str	w0, [x20, #76]
   13650:	ldr	x0, [x20, #40]
   13654:	cbz	x0, 1368c <yylex+0x224>
   13658:	ldr	x1, [x20, #24]
   1365c:	ldr	x0, [x0, x1, lsl #3]
   13660:	cbz	x0, 1368c <yylex+0x224>
   13664:	ldr	x11, [x0, #16]
   13668:	ldr	x1, [x0]
   1366c:	ldr	w0, [x0, #28]
   13670:	str	x1, [x20, #8]
   13674:	str	w0, [x20, #52]
   13678:	str	x11, [x20, #64]
   1367c:	str	x11, [x20, #8320]
   13680:	ldrb	w3, [x11]
   13684:	strb	w3, [x20, #48]
   13688:	b	1349c <yylex+0x34>
   1368c:	mov	x0, x20
   13690:	bl	128a0 <grub_script_yyparse+0xa08>
   13694:	ldr	x0, [x20, #8]
   13698:	mov	w1, #0x4000                	// #16384
   1369c:	ldr	x21, [x20, #24]
   136a0:	mov	x2, x20
   136a4:	ldr	x19, [x20, #40]
   136a8:	bl	12e08 <yy_create_buffer>
   136ac:	ldr	x1, [x20, #24]
   136b0:	str	x0, [x19, x21, lsl #3]
   136b4:	ldr	x0, [x20, #40]
   136b8:	ldr	x0, [x0, x1, lsl #3]
   136bc:	b	13664 <yylex+0x1fc>
   136c0:	ldr	w2, [x20, #56]
   136c4:	mov	x1, x22
   136c8:	ldr	x0, [x20]
   136cc:	bl	12ad0 <grub_script_yyparse+0xc38>
   136d0:	b	1361c <yylex+0x1b4>
   136d4:	mov	x0, x20
   136d8:	bl	130b0 <yypop_buffer_state>
   136dc:	ldr	x1, [x20]
   136e0:	mov	w2, #0x1                   	// #1
   136e4:	mov	w0, #0x0                   	// #0
   136e8:	ldr	x1, [x1, #40]
   136ec:	str	w2, [x1, #40]
   136f0:	ldp	x19, x20, [sp, #16]
   136f4:	ldp	x21, x22, [sp, #32]
   136f8:	ldp	x23, x24, [sp, #48]
   136fc:	ldp	x25, x26, [sp, #64]
   13700:	ldp	x27, x28, [sp, #80]
   13704:	ldp	x29, x30, [sp], #128
   13708:	ret
   1370c:	adrp	x1, 0 <grub_normal_free_menu-0x268>
   13710:	mov	w2, #0x1                   	// #1
   13714:	ldr	x0, [x20]
   13718:	ldr	x1, [x1]
   1371c:	bl	12ad0 <grub_script_yyparse+0xc38>
   13720:	b	1361c <yylex+0x1b4>
   13724:	adrp	x1, 0 <grub_normal_free_menu-0x268>
   13728:	mov	w2, #0x1                   	// #1
   1372c:	ldr	x0, [x20]
   13730:	ldr	x1, [x1]
   13734:	bl	12ad0 <grub_script_yyparse+0xc38>
   13738:	b	1361c <yylex+0x1b4>
   1373c:	ldr	w2, [x20, #56]
   13740:	mov	x1, x22
   13744:	ldr	x0, [x20]
   13748:	bl	12ad0 <grub_script_yyparse+0xc38>
   1374c:	mov	x0, x20
   13750:	bl	12800 <grub_script_yyparse+0x968>
   13754:	ldr	w0, [x20, #76]
   13758:	ldr	x1, [x20]
   1375c:	sub	w0, w0, #0x3
   13760:	cmp	w0, #0x1
   13764:	b.ls	13de8 <yylex+0x980>  // b.plast
   13768:	ldr	x1, [x1, #40]
   1376c:	mov	w2, #0x3                   	// #3
   13770:	mov	w0, #0x121                 	// #289
   13774:	str	w2, [x1, #72]
   13778:	b	136f0 <yylex+0x288>
   1377c:	ldrb	w3, [x20, #48]
   13780:	ldr	x11, [x20, #64]
   13784:	b	134b8 <yylex+0x50>
   13788:	ldr	w2, [x20, #56]
   1378c:	mov	x1, x20
   13790:	sub	w0, w2, #0x1
   13794:	sub	w2, w2, #0x2
   13798:	add	x0, x20, w0, sxtw
   1379c:	strb	wzr, [x0, #128]
   137a0:	ldr	x0, [x1], #129
   137a4:	b	13748 <yylex+0x2e0>
   137a8:	ldr	x0, [x20]
   137ac:	mov	x1, x22
   137b0:	bl	11250 <grub_script_yyerror>
   137b4:	mov	w0, #0x102                 	// #258
   137b8:	b	136f0 <yylex+0x288>
   137bc:	ldr	x0, [x20]
   137c0:	mov	x1, x22
   137c4:	bl	10d10 <grub_script_lexer_record>
   137c8:	ldr	x0, [x20, #40]
   137cc:	cbz	x0, 137d8 <yylex+0x370>
   137d0:	ldr	x1, [x20, #24]
   137d4:	ldr	x0, [x0, x1, lsl #3]
   137d8:	mov	x1, x20
   137dc:	bl	12ff0 <yypush_buffer_state>
   137e0:	mov	x1, x20
   137e4:	mov	x0, x22
   137e8:	bl	133f8 <yy_scan_string+0x30>
   137ec:	cbnz	w0, 14090 <yylex+0xc28>
   137f0:	ldr	x0, [x20]
   137f4:	mov	w1, #0x1                   	// #1
   137f8:	ldr	x0, [x0, #40]
   137fc:	str	w1, [x0, #76]
   13800:	b	1361c <yylex+0x1b4>
   13804:	ldr	x0, [x20]
   13808:	mov	x1, x22
   1380c:	bl	10d10 <grub_script_lexer_record>
   13810:	mov	w0, #0x107                 	// #263
   13814:	b	136f0 <yylex+0x288>
   13818:	mov	x1, x20
   1381c:	mov	w0, #0x5                   	// #5
   13820:	bl	129e0 <grub_script_yyparse+0xb48>
   13824:	ldr	x1, [x20]
   13828:	mov	w2, #0x4                   	// #4
   1382c:	mov	w0, #0x121                 	// #289
   13830:	ldr	x1, [x1, #40]
   13834:	str	w2, [x1, #72]
   13838:	b	136f0 <yylex+0x288>
   1383c:	ldr	x0, [x20]
   13840:	mov	x1, x22
   13844:	bl	10d10 <grub_script_lexer_record>
   13848:	mov	w0, #0x11f                 	// #287
   1384c:	b	136f0 <yylex+0x288>
   13850:	ldr	x0, [x20]
   13854:	mov	x1, x22
   13858:	bl	10d10 <grub_script_lexer_record>
   1385c:	mov	w0, #0x11e                 	// #286
   13860:	b	136f0 <yylex+0x288>
   13864:	ldr	x0, [x20]
   13868:	mov	x1, x22
   1386c:	bl	10d10 <grub_script_lexer_record>
   13870:	mov	w0, #0x11d                 	// #285
   13874:	b	136f0 <yylex+0x288>
   13878:	ldr	x0, [x20]
   1387c:	mov	x1, x22
   13880:	bl	10d10 <grub_script_lexer_record>
   13884:	mov	w0, #0x11c                 	// #284
   13888:	b	136f0 <yylex+0x288>
   1388c:	ldr	x0, [x20]
   13890:	mov	x1, x22
   13894:	bl	10d10 <grub_script_lexer_record>
   13898:	mov	w0, #0x11b                 	// #283
   1389c:	b	136f0 <yylex+0x288>
   138a0:	ldr	x0, [x20]
   138a4:	mov	x1, x22
   138a8:	bl	10d10 <grub_script_lexer_record>
   138ac:	mov	w0, #0x11a                 	// #282
   138b0:	b	136f0 <yylex+0x288>
   138b4:	ldr	x0, [x20]
   138b8:	mov	x1, x22
   138bc:	bl	10d10 <grub_script_lexer_record>
   138c0:	mov	w0, #0x119                 	// #281
   138c4:	b	136f0 <yylex+0x288>
   138c8:	ldr	x0, [x20]
   138cc:	mov	x1, x22
   138d0:	bl	10d10 <grub_script_lexer_record>
   138d4:	mov	w0, #0x118                 	// #280
   138d8:	b	136f0 <yylex+0x288>
   138dc:	mov	x0, x20
   138e0:	bl	12800 <grub_script_yyparse+0x968>
   138e4:	ldr	x1, [x20]
   138e8:	mov	w2, #0x5                   	// #5
   138ec:	mov	w0, #0x121                 	// #289
   138f0:	ldr	x1, [x1, #40]
   138f4:	str	w2, [x1, #72]
   138f8:	b	136f0 <yylex+0x288>
   138fc:	ldr	x0, [x20]
   13900:	mov	x1, x22
   13904:	bl	10d10 <grub_script_lexer_record>
   13908:	mov	w0, #0x120                 	// #288
   1390c:	b	136f0 <yylex+0x288>
   13910:	ldr	x4, [x20, #24]
   13914:	ldr	x3, [x20, #40]
   13918:	ldrsw	x0, [x20, #52]
   1391c:	ldr	x1, [x20, #64]
   13920:	add	x2, x0, #0x1
   13924:	ldr	x0, [x3, x4, lsl #3]
   13928:	add	x1, x1, #0x1
   1392c:	ldr	x0, [x0, #8]
   13930:	add	x0, x0, x2
   13934:	cmp	x1, x0
   13938:	b.ne	137bc <yylex+0x354>  // b.any
   1393c:	mov	x1, x20
   13940:	mov	x0, x22
   13944:	bl	12b90 <grub_script_yyparse+0xcf8>
   13948:	cbz	w0, 1361c <yylex+0x1b4>
   1394c:	mov	w0, #0x102                 	// #258
   13950:	b	136f0 <yylex+0x288>
   13954:	ldrb	w0, [x20, #48]
   13958:	ldr	x4, [x20, #8320]
   1395c:	strb	w0, [x19]
   13960:	ldr	x1, [x20, #24]
   13964:	sub	x4, x19, x4
   13968:	ldr	x0, [x20, #40]
   1396c:	sub	w4, w4, #0x1
   13970:	ldr	x2, [x0, x1, lsl #3]
   13974:	ldr	w3, [x2, #56]
   13978:	cbz	w3, 13df8 <yylex+0x990>
   1397c:	ldr	w3, [x20, #52]
   13980:	ldr	x5, [x2, #8]
   13984:	sxtw	x3, w3
   13988:	ldr	x6, [x20, #64]
   1398c:	add	x7, x5, x3
   13990:	ldr	x26, [x20, #8320]
   13994:	cmp	x6, x7
   13998:	b.ls	140a0 <yylex+0xc38>  // b.plast
   1399c:	add	x3, x3, #0x1
   139a0:	mov	x24, x26
   139a4:	add	x3, x5, x3
   139a8:	cmp	x6, x3
   139ac:	b.ls	13a0c <yylex+0x5a4>  // b.plast
   139b0:	adrp	x1, 0 <grub_normal_free_menu-0x268>
   139b4:	str	x5, [sp, #112]
   139b8:	ldr	x0, [x23]
   139bc:	ldr	x3, [x1]
   139c0:	ldr	x1, [x3]
   139c4:	blr	x1
   139c8:	mov	x24, x0
   139cc:	adrp	x0, 0 <grub_normal_free_menu-0x268>
   139d0:	add	x0, x0, #0x0
   139d4:	adrp	x2, 0 <grub_normal_free_menu-0x268>
   139d8:	ldr	x3, [x0]
   139dc:	ldr	x0, [x2]
   139e0:	ldr	x1, [x3]
   139e4:	blr	x1
   139e8:	mov	x1, x0
   139ec:	mov	x0, x24
   139f0:	bl	0 <grub_printf>
   139f4:	ldr	x1, [x20, #24]
   139f8:	ldr	x0, [x20, #40]
   139fc:	ldr	x6, [x20, #64]
   13a00:	ldr	x2, [x0, x1, lsl #3]
   13a04:	ldr	x5, [sp, #112]
   13a08:	ldr	x24, [x20, #8320]
   13a0c:	sub	x6, x6, x24
   13a10:	ldr	w3, [x2, #52]
   13a14:	cbnz	w3, 13e10 <yylex+0x9a8>
   13a18:	cmp	x6, #0x1
   13a1c:	b.ne	13fa8 <yylex+0xb40>  // b.any
   13a20:	ldr	x0, [x20]
   13a24:	ldr	x1, [x0, #40]
   13a28:	ldr	w1, [x1, #76]
   13a2c:	str	wzr, [x20, #80]
   13a30:	cbnz	w1, 13a40 <yylex+0x5d8>
   13a34:	mov	x1, #0x0                   	// #0
   13a38:	bl	10de8 <grub_script_lexer_yywrap>
   13a3c:	cbz	w0, 1412c <yylex+0xcc4>
   13a40:	ldr	w0, [x20, #76]
   13a44:	ldr	x1, [x20, #8320]
   13a48:	sub	w0, w0, #0x1
   13a4c:	str	x1, [x20, #64]
   13a50:	add	w0, w0, w0, lsr #31
   13a54:	asr	w24, w0, #1
   13a58:	add	w24, w24, #0x46
   13a5c:	b	135dc <yylex+0x174>
   13a60:	mov	x1, x20
   13a64:	mov	w0, #0x5                   	// #5
   13a68:	bl	129e0 <grub_script_yyparse+0xb48>
   13a6c:	ldr	x1, [x20]
   13a70:	mov	w2, #0x1                   	// #1
   13a74:	mov	w0, #0x121                 	// #289
   13a78:	ldr	x1, [x1, #40]
   13a7c:	str	w2, [x1, #72]
   13a80:	b	136f0 <yylex+0x288>
   13a84:	mov	x1, x20
   13a88:	mov	w0, #0x3                   	// #3
   13a8c:	bl	129e0 <grub_script_yyparse+0xb48>
   13a90:	ldr	x1, [x20]
   13a94:	mov	w2, #0x2                   	// #2
   13a98:	mov	w0, #0x121                 	// #289
   13a9c:	ldr	x1, [x1, #40]
   13aa0:	str	w2, [x1, #72]
   13aa4:	b	136f0 <yylex+0x288>
   13aa8:	adrp	x1, 0 <grub_normal_free_menu-0x268>
   13aac:	adrp	x0, 0 <grub_normal_free_menu-0x268>
   13ab0:	ldr	x24, [x1]
   13ab4:	ldr	x0, [x0]
   13ab8:	ldr	x1, [x24]
   13abc:	blr	x1
   13ac0:	mov	x23, x0
   13ac4:	adrp	x2, 0 <grub_normal_free_menu-0x268>
   13ac8:	ldr	x1, [x24]
   13acc:	ldr	x0, [x2]
   13ad0:	blr	x1
   13ad4:	mov	x1, x0
   13ad8:	mov	x0, x23
   13adc:	bl	0 <grub_printf>
   13ae0:	b	1361c <yylex+0x1b4>
   13ae4:	adrp	x1, 0 <grub_normal_free_menu-0x268>
   13ae8:	mov	w2, #0x2                   	// #2
   13aec:	ldr	x0, [x20]
   13af0:	ldr	x1, [x1]
   13af4:	bl	12ad0 <grub_script_yyparse+0xc38>
   13af8:	b	1361c <yylex+0x1b4>
   13afc:	mov	x0, x20
   13b00:	bl	12800 <grub_script_yyparse+0x968>
   13b04:	ldr	x1, [x20]
   13b08:	mov	w2, #0x4                   	// #4
   13b0c:	mov	w0, #0x121                 	// #289
   13b10:	ldr	x1, [x1, #40]
   13b14:	str	w2, [x1, #72]
   13b18:	b	136f0 <yylex+0x288>
   13b1c:	mov	x0, x20
   13b20:	bl	12800 <grub_script_yyparse+0x968>
   13b24:	ldr	x1, [x20]
   13b28:	mov	w2, #0x2                   	// #2
   13b2c:	mov	w0, #0x121                 	// #289
   13b30:	ldr	x1, [x1, #40]
   13b34:	str	w2, [x1, #72]
   13b38:	b	136f0 <yylex+0x288>
   13b3c:	mov	x1, x20
   13b40:	mov	w0, #0x2                   	// #2
   13b44:	b	13a68 <yylex+0x600>
   13b48:	adrp	x1, 0 <grub_normal_free_menu-0x268>
   13b4c:	mov	w2, #0x1                   	// #1
   13b50:	ldr	x0, [x20]
   13b54:	ldr	x1, [x1]
   13b58:	bl	12ad0 <grub_script_yyparse+0xc38>
   13b5c:	b	1361c <yylex+0x1b4>
   13b60:	ldr	x0, [x20]
   13b64:	mov	x1, x22
   13b68:	bl	10d10 <grub_script_lexer_record>
   13b6c:	mov	w0, #0x10e                 	// #270
   13b70:	b	136f0 <yylex+0x288>
   13b74:	ldr	x0, [x20]
   13b78:	mov	x1, x22
   13b7c:	bl	10d10 <grub_script_lexer_record>
   13b80:	mov	w0, #0x10d                 	// #269
   13b84:	b	136f0 <yylex+0x288>
   13b88:	ldr	x0, [x20]
   13b8c:	mov	x1, x22
   13b90:	bl	10d10 <grub_script_lexer_record>
   13b94:	mov	w0, #0x10b                 	// #267
   13b98:	b	136f0 <yylex+0x288>
   13b9c:	ldr	x0, [x20]
   13ba0:	mov	x1, x22
   13ba4:	bl	10d10 <grub_script_lexer_record>
   13ba8:	mov	w0, #0x10a                 	// #266
   13bac:	b	136f0 <yylex+0x288>
   13bb0:	ldr	x0, [x20]
   13bb4:	mov	x1, x22
   13bb8:	bl	10d10 <grub_script_lexer_record>
   13bbc:	mov	w0, #0x110                 	// #272
   13bc0:	b	136f0 <yylex+0x288>
   13bc4:	ldr	x0, [x20]
   13bc8:	mov	x1, x22
   13bcc:	bl	10d10 <grub_script_lexer_record>
   13bd0:	mov	w0, #0x10f                 	// #271
   13bd4:	b	136f0 <yylex+0x288>
   13bd8:	ldr	x0, [x20]
   13bdc:	mov	x1, x22
   13be0:	bl	10d10 <grub_script_lexer_record>
   13be4:	mov	w0, #0x109                 	// #265
   13be8:	b	136f0 <yylex+0x288>
   13bec:	ldr	x0, [x20]
   13bf0:	mov	x1, x22
   13bf4:	bl	10d10 <grub_script_lexer_record>
   13bf8:	mov	w0, #0x108                 	// #264
   13bfc:	b	136f0 <yylex+0x288>
   13c00:	mov	x1, x20
   13c04:	mov	w0, #0x4                   	// #4
   13c08:	b	13a68 <yylex+0x600>
   13c0c:	ldr	x0, [x20]
   13c10:	mov	x1, x22
   13c14:	bl	10d10 <grub_script_lexer_record>
   13c18:	mov	w0, #0x106                 	// #262
   13c1c:	b	136f0 <yylex+0x288>
   13c20:	ldr	x0, [x20]
   13c24:	mov	x1, x22
   13c28:	bl	10d10 <grub_script_lexer_record>
   13c2c:	mov	w0, #0x104                 	// #260
   13c30:	b	136f0 <yylex+0x288>
   13c34:	ldr	x0, [x20]
   13c38:	mov	x1, x22
   13c3c:	bl	10d10 <grub_script_lexer_record>
   13c40:	mov	w0, #0x105                 	// #261
   13c44:	b	136f0 <yylex+0x288>
   13c48:	ldr	x0, [x20]
   13c4c:	mov	x1, x22
   13c50:	bl	10d10 <grub_script_lexer_record>
   13c54:	mov	w0, #0x103                 	// #259
   13c58:	b	136f0 <yylex+0x288>
   13c5c:	mov	x23, x19
   13c60:	ldrb	w1, [x20, #48]
   13c64:	mov	w0, #0x1fff                	// #8191
   13c68:	strb	w1, [x23], #-1
   13c6c:	str	x27, [x20, #8320]
   13c70:	sub	x10, x23, x27
   13c74:	str	w10, [x20, #56]
   13c78:	str	x23, [x20, #64]
   13c7c:	ldurb	w1, [x19, #-1]
   13c80:	strb	w1, [x20, #48]
   13c84:	sturb	wzr, [x19, #-1]
   13c88:	ldr	w1, [x20, #56]
   13c8c:	cmp	w1, w0
   13c90:	b.le	13cd0 <yylex+0x868>
   13c94:	adrp	x1, 0 <grub_normal_free_menu-0x268>
   13c98:	adrp	x0, 0 <grub_normal_free_menu-0x268>
   13c9c:	ldr	x25, [x1]
   13ca0:	ldr	x0, [x0]
   13ca4:	ldr	x1, [x25]
   13ca8:	blr	x1
   13cac:	mov	x24, x0
   13cb0:	adrp	x2, 0 <grub_normal_free_menu-0x268>
   13cb4:	ldr	x1, [x25]
   13cb8:	ldr	x0, [x2]
   13cbc:	blr	x1
   13cc0:	mov	x1, x0
   13cc4:	mov	x0, x24
   13cc8:	bl	0 <grub_printf>
   13ccc:	ldr	w1, [x20, #56]
   13cd0:	sxtw	x3, w1
   13cd4:	mov	x0, #0x0                   	// #0
   13cd8:	ldr	x2, [x20, #8320]
   13cdc:	tbnz	w1, #31, 13cf4 <yylex+0x88c>
   13ce0:	ldrb	w4, [x2, x0]
   13ce4:	cmp	x3, x0
   13ce8:	strb	w4, [x22, x0]
   13cec:	add	x0, x0, #0x1
   13cf0:	b.ne	13ce0 <yylex+0x878>  // b.any
   13cf4:	ldr	x0, [x20]
   13cf8:	str	x23, [x20, #64]
   13cfc:	mov	x1, x22
   13d00:	bl	10d10 <grub_script_lexer_record>
   13d04:	b	1361c <yylex+0x1b4>
   13d08:	ldr	x0, [x20]
   13d0c:	mov	x1, x22
   13d10:	bl	10d10 <grub_script_lexer_record>
   13d14:	b	1361c <yylex+0x1b4>
   13d18:	ldrb	w0, [x20, #48]
   13d1c:	strb	w0, [x19]
   13d20:	ldr	w0, [x20, #104]
   13d24:	ldr	x19, [x20, #112]
   13d28:	b	13548 <yylex+0xe0>
   13d2c:	mov	x0, x20
   13d30:	bl	12800 <grub_script_yyparse+0x968>
   13d34:	mov	x0, x20
   13d38:	bl	130b0 <yypop_buffer_state>
   13d3c:	ldr	x1, [x20]
   13d40:	mov	w3, #0x1                   	// #1
   13d44:	mov	x2, #0x1                   	// #1
   13d48:	mov	w0, #0x121                 	// #289
   13d4c:	ldr	x1, [x1, #40]
   13d50:	str	w3, [x1, #48]
   13d54:	str	x2, [x1, #72]
   13d58:	b	136f0 <yylex+0x288>
   13d5c:	ldr	x0, [x20]
   13d60:	mov	x1, x22
   13d64:	bl	10d10 <grub_script_lexer_record>
   13d68:	mov	w0, #0x117                 	// #279
   13d6c:	b	136f0 <yylex+0x288>
   13d70:	ldr	x0, [x20]
   13d74:	mov	x1, x22
   13d78:	bl	10d10 <grub_script_lexer_record>
   13d7c:	mov	w0, #0x116                 	// #278
   13d80:	b	136f0 <yylex+0x288>
   13d84:	ldr	x0, [x20]
   13d88:	mov	x1, x22
   13d8c:	bl	10d10 <grub_script_lexer_record>
   13d90:	mov	w0, #0x115                 	// #277
   13d94:	b	136f0 <yylex+0x288>
   13d98:	ldr	x0, [x20]
   13d9c:	mov	x1, x22
   13da0:	bl	10d10 <grub_script_lexer_record>
   13da4:	mov	w0, #0x114                 	// #276
   13da8:	b	136f0 <yylex+0x288>
   13dac:	ldr	x0, [x20]
   13db0:	mov	x1, x22
   13db4:	bl	10d10 <grub_script_lexer_record>
   13db8:	mov	w0, #0x113                 	// #275
   13dbc:	b	136f0 <yylex+0x288>
   13dc0:	ldr	x0, [x20]
   13dc4:	mov	x1, x22
   13dc8:	bl	10d10 <grub_script_lexer_record>
   13dcc:	mov	w0, #0x112                 	// #274
   13dd0:	b	136f0 <yylex+0x288>
   13dd4:	ldr	x0, [x20]
   13dd8:	mov	x1, x22
   13ddc:	bl	10d10 <grub_script_lexer_record>
   13de0:	mov	w0, #0x111                 	// #273
   13de4:	b	136f0 <yylex+0x288>
   13de8:	ldr	x1, [x1, #40]
   13dec:	mov	w0, #0x121                 	// #289
   13df0:	str	wzr, [x1, #72]
   13df4:	b	136f0 <yylex+0x288>
   13df8:	ldr	w3, [x2, #28]
   13dfc:	str	w3, [x20, #52]
   13e00:	ldr	x6, [x20, #8]
   13e04:	str	x6, [x2]
   13e08:	str	w25, [x2, #56]
   13e0c:	b	13980 <yylex+0x518>
   13e10:	sub	w24, w6, #0x1
   13e14:	cmp	w24, #0x0
   13e18:	b.le	13e40 <yylex+0x9d8>
   13e1c:	mov	x0, #0x0                   	// #0
   13e20:	ldrb	w1, [x26, x0]
   13e24:	strb	w1, [x5, x0]
   13e28:	add	x0, x0, #0x1
   13e2c:	cmp	w24, w0
   13e30:	b.gt	13e20 <yylex+0x9b8>
   13e34:	ldr	x1, [x20, #24]
   13e38:	ldr	x0, [x20, #40]
   13e3c:	ldr	x2, [x0, x1, lsl #3]
   13e40:	ldr	w3, [x2, #56]
   13e44:	cmp	w3, #0x2
   13e48:	b.eq	13f30 <yylex+0xac8>  // b.none
   13e4c:	ldr	w3, [x2, #24]
   13e50:	sub	w3, w3, w24
   13e54:	cmp	w3, #0x1
   13e58:	b.gt	13f30 <yylex+0xac8>
   13e5c:	ldr	x26, [x20, #64]
   13e60:	b	13ec4 <yylex+0xa5c>
   13e64:	ldr	w3, [x2, #24]
   13e68:	str	x2, [sp, #112]
   13e6c:	cmp	w3, #0x0
   13e70:	add	w1, w3, #0x7
   13e74:	csel	w1, w1, w3, lt  // lt = tstop
   13e78:	lsl	w4, w3, #1
   13e7c:	add	w1, w3, w1, asr #3
   13e80:	csel	w1, w1, w4, le
   13e84:	str	w1, [x2, #24]
   13e88:	add	w1, w1, #0x2
   13e8c:	sxtw	x1, w1
   13e90:	bl	0 <grub_realloc>
   13e94:	ldr	x2, [sp, #112]
   13e98:	str	x0, [x2, #8]
   13e9c:	cbz	x0, 13ed8 <yylex+0xa70>
   13ea0:	add	x26, x0, w26, sxtw
   13ea4:	ldr	x1, [x20, #24]
   13ea8:	ldr	x0, [x20, #40]
   13eac:	ldr	x2, [x0, x1, lsl #3]
   13eb0:	ldr	w3, [x2, #24]
   13eb4:	str	x26, [x20, #64]
   13eb8:	sub	w3, w3, w24
   13ebc:	cmp	w3, #0x1
   13ec0:	b.gt	13f30 <yylex+0xac8>
   13ec4:	ldr	w1, [x2, #32]
   13ec8:	ldr	x0, [x2, #8]
   13ecc:	sub	x26, x26, x0
   13ed0:	cbnz	w1, 13e64 <yylex+0x9fc>
   13ed4:	str	xzr, [x2, #8]
   13ed8:	adrp	x0, 0 <grub_normal_free_menu-0x268>
   13edc:	str	x2, [sp, #120]
   13ee0:	ldr	x1, [x0]
   13ee4:	ldr	x0, [x23]
   13ee8:	ldr	x3, [x1]
   13eec:	blr	x3
   13ef0:	mov	x3, x0
   13ef4:	adrp	x1, 0 <grub_normal_free_menu-0x268>
   13ef8:	add	x1, x1, #0x0
   13efc:	str	x3, [sp, #112]
   13f00:	adrp	x0, 0 <grub_normal_free_menu-0x268>
   13f04:	ldr	x1, [x1]
   13f08:	ldr	x0, [x0]
   13f0c:	ldr	x1, [x1]
   13f10:	blr	x1
   13f14:	mov	x1, x0
   13f18:	ldr	x3, [sp, #112]
   13f1c:	mov	x0, x3
   13f20:	bl	0 <grub_printf>
   13f24:	ldr	x2, [sp, #120]
   13f28:	ldr	x0, [x2, #8]
   13f2c:	b	13ea0 <yylex+0xa38>
   13f30:	str	wzr, [x20, #52]
   13f34:	str	wzr, [x2, #28]
   13f38:	cbz	w24, 14010 <yylex+0xba8>
   13f3c:	ldr	x2, [x0, x1, lsl #3]
   13f40:	mov	w0, #0x2                   	// #2
   13f44:	str	w0, [sp, #112]
   13f48:	str	w0, [x2, #56]
   13f4c:	ldr	w26, [x20, #52]
   13f50:	ldr	w0, [x2, #24]
   13f54:	add	w1, w24, w26
   13f58:	cmp	w1, w0
   13f5c:	ldr	x0, [x2, #8]
   13f60:	b.gt	13fd0 <yylex+0xb68>
   13f64:	str	w1, [x20, #52]
   13f68:	ldr	w2, [sp, #112]
   13f6c:	strb	wzr, [x0, w1, sxtw]
   13f70:	cmp	w2, #0x1
   13f74:	ldr	x2, [x20, #24]
   13f78:	ldr	x0, [x20, #40]
   13f7c:	ldrsw	x1, [x20, #52]
   13f80:	ldr	x0, [x0, x2, lsl #3]
   13f84:	ldr	x0, [x0, #8]
   13f88:	add	x0, x0, x1
   13f8c:	strb	wzr, [x0, #1]
   13f90:	ldr	x1, [x20, #24]
   13f94:	ldr	x0, [x20, #40]
   13f98:	ldr	x2, [x0, x1, lsl #3]
   13f9c:	ldr	x2, [x2, #8]
   13fa0:	str	x2, [x20, #8320]
   13fa4:	b.eq	13a20 <yylex+0x5b8>  // b.none
   13fa8:	ldr	x1, [x0, x1, lsl #3]
   13fac:	mov	x0, x20
   13fb0:	ldrsw	x2, [x20, #52]
   13fb4:	ldr	x1, [x1, #8]
   13fb8:	add	x1, x1, x2
   13fbc:	str	x1, [x20, #64]
   13fc0:	bl	12730 <grub_script_yyparse+0x898>
   13fc4:	ldr	x19, [x20, #64]
   13fc8:	ldr	x27, [x20, #8320]
   13fcc:	b	13548 <yylex+0xe0>
   13fd0:	add	w26, w1, w26, asr #1
   13fd4:	str	x2, [sp, #120]
   13fd8:	sxtw	x1, w26
   13fdc:	bl	0 <grub_realloc>
   13fe0:	ldr	x2, [sp, #120]
   13fe4:	ldr	x1, [x20, #24]
   13fe8:	str	x0, [x2, #8]
   13fec:	ldr	x0, [x20, #40]
   13ff0:	ldr	x2, [x0, x1, lsl #3]
   13ff4:	ldr	x0, [x2, #8]
   13ff8:	cbz	x0, 14034 <yylex+0xbcc>
   13ffc:	ldr	w1, [x20, #52]
   14000:	sub	w26, w26, #0x2
   14004:	str	w26, [x2, #24]
   14008:	add	w1, w24, w1
   1400c:	b	13f64 <yylex+0xafc>
   14010:	ldr	x0, [x20, #8]
   14014:	mov	w2, #0x1                   	// #1
   14018:	mov	x1, x20
   1401c:	str	w2, [sp, #112]
   14020:	bl	12f30 <yyrestart>
   14024:	ldr	x1, [x20, #24]
   14028:	ldr	x0, [x20, #40]
   1402c:	ldr	x2, [x0, x1, lsl #3]
   14030:	b	13f4c <yylex+0xae4>
   14034:	adrp	x1, 0 <grub_normal_free_menu-0x268>
   14038:	ldr	x0, [x23]
   1403c:	ldr	x1, [x1]
   14040:	ldr	x2, [x1]
   14044:	blr	x2
   14048:	mov	x3, x0
   1404c:	adrp	x0, 0 <grub_normal_free_menu-0x268>
   14050:	add	x0, x0, #0x0
   14054:	str	x3, [sp, #120]
   14058:	adrp	x2, 0 <grub_normal_free_menu-0x268>
   1405c:	ldr	x1, [x0]
   14060:	ldr	x0, [x2]
   14064:	ldr	x1, [x1]
   14068:	blr	x1
   1406c:	mov	x1, x0
   14070:	ldr	x3, [sp, #120]
   14074:	mov	x0, x3
   14078:	bl	0 <grub_printf>
   1407c:	ldr	x1, [x20, #24]
   14080:	ldr	x0, [x20, #40]
   14084:	ldr	x2, [x0, x1, lsl #3]
   14088:	ldr	x0, [x2, #8]
   1408c:	b	13ffc <yylex+0xb94>
   14090:	mov	x0, x20
   14094:	bl	130b0 <yypop_buffer_state>
   14098:	mov	w0, #0x121                 	// #289
   1409c:	b	136f0 <yylex+0x288>
   140a0:	add	x0, x26, w4, sxtw
   140a4:	str	x0, [x20, #64]
   140a8:	mov	x0, x20
   140ac:	bl	12730 <grub_script_yyparse+0x898>
   140b0:	ldrsh	w1, [x28, w0, sxtw #1]
   140b4:	sxtw	x5, w0
   140b8:	ldr	x4, [x20, #64]
   140bc:	cbz	w1, 140c8 <yylex+0xc60>
   140c0:	str	w0, [x20, #104]
   140c4:	str	x4, [x20, #112]
   140c8:	add	x3, x21, #0x278
   140cc:	add	x2, x21, #0x428
   140d0:	ldrsh	w1, [x3, x5, lsl #1]
   140d4:	add	w1, w1, #0x1
   140d8:	sxtw	x6, w1
   140dc:	ldrsh	w1, [x2, w1, sxtw #1]
   140e0:	cmp	w1, w0
   140e4:	b.eq	14108 <yylex+0xca0>  // b.none
   140e8:	add	x7, x21, #0xa98
   140ec:	ldrsh	x5, [x7, x5, lsl #1]
   140f0:	ldrsh	w1, [x3, w5, sxtw #1]
   140f4:	add	w1, w1, #0x1
   140f8:	sxtw	x6, w1
   140fc:	ldrsh	w1, [x2, w1, sxtw #1]
   14100:	cmp	w5, w1
   14104:	b.ne	140ec <yylex+0xc84>  // b.any
   14108:	add	x0, x21, #0xc70
   1410c:	ldr	x27, [x20, #8320]
   14110:	ldrsh	w0, [x0, x6, lsl #1]
   14114:	cmp	w0, #0xbb
   14118:	b.eq	14120 <yylex+0xcb8>  // b.none
   1411c:	cbnz	w0, 14144 <yylex+0xcdc>
   14120:	ldr	w0, [x20, #104]
   14124:	ldr	x19, [x20, #112]
   14128:	b	13548 <yylex+0xe0>
   1412c:	ldr	w0, [x20, #80]
   14130:	cbnz	w0, 1361c <yylex+0x1b4>
   14134:	ldr	x0, [x20, #8]
   14138:	mov	x1, x20
   1413c:	bl	12f30 <yyrestart>
   14140:	b	1361c <yylex+0x1b4>
   14144:	add	x11, x4, #0x1
   14148:	str	x11, [x20, #64]
   1414c:	ldrb	w3, [x4, #1]
   14150:	b	134c4 <yylex+0x5c>
   14154:	nop
	...

00000000000141c8 <yyget_extra>:
   141c8:	ldr	x0, [x0]
   141cc:	ret

00000000000141d0 <yyget_column>:
   141d0:	ldr	x1, [x0, #40]
   141d4:	cbz	x1, 141ec <yyget_column+0x1c>
   141d8:	ldr	x0, [x0, #24]
   141dc:	ldr	x0, [x1, x0, lsl #3]
   141e0:	cbz	x0, 141ec <yyget_column+0x1c>
   141e4:	ldr	w0, [x0, #48]
   141e8:	ret
   141ec:	mov	w0, #0x0                   	// #0
   141f0:	ret
   141f4:	nop

00000000000141f8 <yyget_leng>:
   141f8:	ldr	w0, [x0, #56]
   141fc:	ret

0000000000014200 <yyget_text>:
   14200:	add	x0, x0, #0x80
   14204:	ret

0000000000014208 <yyset_extra>:
   14208:	str	x0, [x1]
   1420c:	ret

0000000000014210 <yyset_column>:
   14210:	stp	x29, x30, [sp, #-48]!
   14214:	mov	x29, sp
   14218:	stp	x19, x20, [sp, #16]
   1421c:	mov	w20, w0
   14220:	mov	x19, x1
   14224:	ldr	x0, [x1, #40]
   14228:	cbz	x0, 14248 <yyset_column+0x38>
   1422c:	ldr	x1, [x1, #24]
   14230:	ldr	x0, [x0, x1, lsl #3]
   14234:	cbz	x0, 14248 <yyset_column+0x38>
   14238:	str	w20, [x0, #48]
   1423c:	ldp	x19, x20, [sp, #16]
   14240:	ldp	x29, x30, [sp], #48
   14244:	ret
   14248:	adrp	x1, 0 <grub_normal_free_menu-0x268>
   1424c:	stp	x21, x22, [sp, #32]
   14250:	adrp	x0, 0 <grub_normal_free_menu-0x268>
   14254:	ldr	x22, [x1]
   14258:	ldr	x0, [x0]
   1425c:	ldr	x1, [x22]
   14260:	blr	x1
   14264:	mov	x21, x0
   14268:	adrp	x2, 0 <grub_normal_free_menu-0x268>
   1426c:	ldr	x1, [x22]
   14270:	ldr	x0, [x2]
   14274:	blr	x1
   14278:	mov	x1, x0
   1427c:	mov	x0, x21
   14280:	bl	0 <grub_printf>
   14284:	ldr	x1, [x19, #24]
   14288:	ldr	x0, [x19, #40]
   1428c:	ldp	x21, x22, [sp, #32]
   14290:	ldr	x0, [x0, x1, lsl #3]
   14294:	str	w20, [x0, #48]
   14298:	ldp	x19, x20, [sp, #16]
   1429c:	ldp	x29, x30, [sp], #48
   142a0:	ret
   142a4:	nop
	...

00000000000142c0 <yyget_lval>:
   142c0:	ldr	x0, [x0, #8336]
   142c4:	ret

00000000000142c8 <yyset_lval>:
   142c8:	str	x0, [x1, #8336]
   142cc:	ret

00000000000142d0 <yylex_init>:
   142d0:	cbz	x0, 14354 <yylex_init+0x84>
   142d4:	stp	x29, x30, [sp, #-32]!
   142d8:	mov	x29, sp
   142dc:	str	x19, [sp, #16]
   142e0:	mov	x19, x0
   142e4:	mov	x0, #0x2098                	// #8344
   142e8:	bl	0 <grub_malloc>
   142ec:	str	x0, [x19]
   142f0:	cbz	x0, 14334 <yylex_init+0x64>
   142f4:	mov	x2, #0x2098                	// #8344
   142f8:	mov	w1, #0x0                   	// #0
   142fc:	bl	0 <grub_memset>
   14300:	ldr	x1, [x19]
   14304:	mov	w0, #0x0                   	// #0
   14308:	ldr	x19, [sp, #16]
   1430c:	stp	xzr, xzr, [x1, #8]
   14310:	stp	xzr, xzr, [x1, #24]
   14314:	str	xzr, [x1, #40]
   14318:	stp	xzr, xzr, [x1, #64]
   1431c:	stur	xzr, [x1, #84]
   14320:	str	xzr, [x1, #96]
   14324:	str	xzr, [x1, #8320]
   14328:	str	xzr, [x1, #8328]
   1432c:	ldp	x29, x30, [sp], #32
   14330:	ret
   14334:	adrp	x1, 0 <grub_normal_free_menu-0x268>
   14338:	mov	w2, #0x3                   	// #3
   1433c:	mov	w0, #0x1                   	// #1
   14340:	ldr	x1, [x1]
   14344:	ldr	x19, [sp, #16]
   14348:	str	w2, [x1]
   1434c:	ldp	x29, x30, [sp], #32
   14350:	ret
   14354:	adrp	x1, 0 <grub_normal_free_menu-0x268>
   14358:	mov	w2, #0xa                   	// #10
   1435c:	mov	w0, #0x1                   	// #1
   14360:	ldr	x1, [x1]
   14364:	str	w2, [x1]
   14368:	ret
   1436c:	nop
	...

0000000000014378 <yylex_init_extra>:
   14378:	cbz	x1, 14408 <yylex_init_extra+0x90>
   1437c:	stp	x29, x30, [sp, #-32]!
   14380:	mov	x29, sp
   14384:	stp	x19, x20, [sp, #16]
   14388:	mov	x19, x1
   1438c:	mov	x20, x0
   14390:	mov	x0, #0x2098                	// #8344
   14394:	bl	0 <grub_malloc>
   14398:	str	x0, [x19]
   1439c:	cbz	x0, 143e8 <yylex_init_extra+0x70>
   143a0:	mov	x2, #0x2098                	// #8344
   143a4:	mov	w1, #0x0                   	// #0
   143a8:	bl	0 <grub_memset>
   143ac:	ldr	x1, [x19]
   143b0:	mov	w0, #0x0                   	// #0
   143b4:	str	x20, [x1]
   143b8:	ldr	x1, [x19]
   143bc:	ldp	x19, x20, [sp, #16]
   143c0:	stp	xzr, xzr, [x1, #8]
   143c4:	stp	xzr, xzr, [x1, #24]
   143c8:	str	xzr, [x1, #40]
   143cc:	stp	xzr, xzr, [x1, #64]
   143d0:	stur	xzr, [x1, #84]
   143d4:	str	xzr, [x1, #96]
   143d8:	str	xzr, [x1, #8320]
   143dc:	str	xzr, [x1, #8328]
   143e0:	ldp	x29, x30, [sp], #32
   143e4:	ret
   143e8:	adrp	x1, 0 <grub_normal_free_menu-0x268>
   143ec:	mov	w2, #0x3                   	// #3
   143f0:	mov	w0, #0x1                   	// #1
   143f4:	ldr	x1, [x1]
   143f8:	ldp	x19, x20, [sp, #16]
   143fc:	str	w2, [x1]
   14400:	ldp	x29, x30, [sp], #32
   14404:	ret
   14408:	adrp	x1, 0 <grub_normal_free_menu-0x268>
   1440c:	mov	w2, #0xa                   	// #10
   14410:	mov	w0, #0x1                   	// #1
   14414:	ldr	x1, [x1]
   14418:	str	w2, [x1]
   1441c:	ret
	...

0000000000014428 <yylex_destroy>:
   14428:	stp	x29, x30, [sp, #-32]!
   1442c:	mov	x29, sp
   14430:	ldr	x2, [x0, #40]
   14434:	str	x19, [sp, #16]
   14438:	mov	x19, x0
   1443c:	cbnz	x2, 14464 <yylex_destroy+0x3c>
   14440:	b	144c0 <yylex_destroy+0x98>
   14444:	bl	12cb8 <yy_delete_buffer>
   14448:	ldr	x2, [x19, #24]
   1444c:	mov	x0, x19
   14450:	ldr	x1, [x19, #40]
   14454:	str	xzr, [x1, x2, lsl #3]
   14458:	bl	130b0 <yypop_buffer_state>
   1445c:	ldr	x2, [x19, #40]
   14460:	cbz	x2, 144c0 <yylex_destroy+0x98>
   14464:	ldr	x0, [x19, #24]
   14468:	mov	x1, x19
   1446c:	ldr	x0, [x2, x0, lsl #3]
   14470:	cbnz	x0, 14444 <yylex_destroy+0x1c>
   14474:	mov	x0, x2
   14478:	bl	0 <grub_free>
   1447c:	ldr	x0, [x19, #96]
   14480:	str	xzr, [x19, #40]
   14484:	bl	0 <grub_free>
   14488:	stp	xzr, xzr, [x19, #8]
   1448c:	mov	x0, x19
   14490:	stp	xzr, xzr, [x19, #24]
   14494:	str	xzr, [x19, #40]
   14498:	stp	xzr, xzr, [x19, #64]
   1449c:	stur	xzr, [x19, #84]
   144a0:	str	xzr, [x19, #96]
   144a4:	str	xzr, [x19, #8320]
   144a8:	str	xzr, [x19, #8328]
   144ac:	bl	0 <grub_free>
   144b0:	mov	w0, #0x0                   	// #0
   144b4:	ldr	x19, [sp, #16]
   144b8:	ldp	x29, x30, [sp], #32
   144bc:	ret
   144c0:	mov	x2, #0x0                   	// #0
   144c4:	b	14474 <yylex_destroy+0x4c>

00000000000144c8 <yywrap>:
   144c8:	ldr	x0, [x0]
   144cc:	ldr	x1, [x0, #40]
   144d0:	ldr	w1, [x1, #76]
   144d4:	cbz	w1, 144e0 <yywrap+0x18>
   144d8:	mov	w0, #0x1                   	// #1
   144dc:	ret
   144e0:	mov	x1, #0x0                   	// #0
   144e4:	b	10de8 <grub_script_lexer_yywrap>
