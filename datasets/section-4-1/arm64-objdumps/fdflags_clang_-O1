
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//fdflags_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000b68 <_init>:
 b68:	stp	x29, x30, [sp, #-16]!
 b6c:	mov	x29, sp
 b70:	bl	ca0 <call_weak_fn>
 b74:	ldp	x29, x30, [sp], #16
 b78:	ret

Disassembly of section .plt:

0000000000000b80 <.plt>:
 b80:	stp	x16, x30, [sp, #-16]!
 b84:	adrp	x16, 11000 <__FRAME_END__+0xf86c>
 b88:	ldr	x17, [x16, #4088]
 b8c:	add	x16, x16, #0xff8
 b90:	br	x17
 b94:	nop
 b98:	nop
 b9c:	nop

0000000000000ba0 <strtok@plt>:
 ba0:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 ba4:	ldr	x17, [x16]
 ba8:	add	x16, x16, #0x0
 bac:	br	x17

0000000000000bb0 <builtin_error@plt>:
 bb0:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 bb4:	ldr	x17, [x16, #8]
 bb8:	add	x16, x16, #0x8
 bbc:	br	x17

0000000000000bc0 <__cxa_finalize@plt>:
 bc0:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 bc4:	ldr	x17, [x16, #16]
 bc8:	add	x16, x16, #0x10
 bcc:	br	x17

0000000000000bd0 <builtin_help@plt>:
 bd0:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 bd4:	ldr	x17, [x16, #24]
 bd8:	add	x16, x16, #0x18
 bdc:	br	x17

0000000000000be0 <builtin_usage@plt>:
 be0:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 be4:	ldr	x17, [x16, #32]
 be8:	add	x16, x16, #0x20
 bec:	br	x17

0000000000000bf0 <strerror@plt>:
 bf0:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 bf4:	ldr	x17, [x16, #40]
 bf8:	add	x16, x16, #0x28
 bfc:	br	x17

0000000000000c00 <__gmon_start__@plt>:
 c00:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c04:	ldr	x17, [x16, #48]
 c08:	add	x16, x16, #0x30
 c0c:	br	x17

0000000000000c10 <strcmp@plt>:
 c10:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c14:	ldr	x17, [x16, #56]
 c18:	add	x16, x16, #0x38
 c1c:	br	x17

0000000000000c20 <internal_getopt@plt>:
 c20:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c24:	ldr	x17, [x16, #64]
 c28:	add	x16, x16, #0x40
 c2c:	br	x17

0000000000000c30 <reset_internal_getopt@plt>:
 c30:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c34:	ldr	x17, [x16, #72]
 c38:	add	x16, x16, #0x48
 c3c:	br	x17

0000000000000c40 <fcntl@plt>:
 c40:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c44:	ldr	x17, [x16, #80]
 c48:	add	x16, x16, #0x50
 c4c:	br	x17

0000000000000c50 <legal_number@plt>:
 c50:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c54:	ldr	x17, [x16, #88]
 c58:	add	x16, x16, #0x58
 c5c:	br	x17

0000000000000c60 <printf@plt>:
 c60:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c64:	ldr	x17, [x16, #96]
 c68:	add	x16, x16, #0x60
 c6c:	br	x17

0000000000000c70 <__errno_location@plt>:
 c70:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c74:	ldr	x17, [x16, #104]
 c78:	add	x16, x16, #0x68
 c7c:	br	x17

0000000000000c80 <putchar@plt>:
 c80:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c84:	ldr	x17, [x16, #112]
 c88:	add	x16, x16, #0x70
 c8c:	br	x17

0000000000000c90 <getdtablesize@plt>:
 c90:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c94:	ldr	x17, [x16, #120]
 c98:	add	x16, x16, #0x78
 c9c:	br	x17

Disassembly of section .text:

0000000000000ca0 <call_weak_fn>:
     ca0:	adrp	x0, 11000 <__FRAME_END__+0xf86c>
     ca4:	ldr	x0, [x0, #4040]
     ca8:	cbz	x0, cb0 <call_weak_fn+0x10>
     cac:	b	c00 <__gmon_start__@plt>
     cb0:	ret
     cb4:	nop

0000000000000cb8 <deregister_tm_clones>:
     cb8:	adrp	x0, 12000 <strtok@GLIBC_2.17>
     cbc:	add	x0, x0, #0x128
     cc0:	adrp	x1, 12000 <strtok@GLIBC_2.17>
     cc4:	add	x1, x1, #0x128
     cc8:	cmp	x1, x0
     ccc:	b.eq	ce4 <deregister_tm_clones+0x2c>  // b.none
     cd0:	adrp	x1, 11000 <__FRAME_END__+0xf86c>
     cd4:	ldr	x1, [x1, #4024]
     cd8:	cbz	x1, ce4 <deregister_tm_clones+0x2c>
     cdc:	mov	x16, x1
     ce0:	br	x16
     ce4:	ret

0000000000000ce8 <register_tm_clones>:
     ce8:	adrp	x0, 12000 <strtok@GLIBC_2.17>
     cec:	add	x0, x0, #0x128
     cf0:	adrp	x1, 12000 <strtok@GLIBC_2.17>
     cf4:	add	x1, x1, #0x128
     cf8:	sub	x1, x1, x0
     cfc:	lsr	x2, x1, #63
     d00:	add	x1, x2, x1, asr #3
     d04:	cmp	xzr, x1, asr #1
     d08:	asr	x1, x1, #1
     d0c:	b.eq	d24 <register_tm_clones+0x3c>  // b.none
     d10:	adrp	x2, 11000 <__FRAME_END__+0xf86c>
     d14:	ldr	x2, [x2, #4064]
     d18:	cbz	x2, d24 <register_tm_clones+0x3c>
     d1c:	mov	x16, x2
     d20:	br	x16
     d24:	ret

0000000000000d28 <__do_global_dtors_aux>:
     d28:	stp	x29, x30, [sp, #-32]!
     d2c:	mov	x29, sp
     d30:	str	x19, [sp, #16]
     d34:	adrp	x19, 12000 <strtok@GLIBC_2.17>
     d38:	ldrb	w0, [x19, #296]
     d3c:	cbnz	w0, d64 <__do_global_dtors_aux+0x3c>
     d40:	adrp	x0, 11000 <__FRAME_END__+0xf86c>
     d44:	ldr	x0, [x0, #4032]
     d48:	cbz	x0, d58 <__do_global_dtors_aux+0x30>
     d4c:	adrp	x0, 12000 <strtok@GLIBC_2.17>
     d50:	ldr	x0, [x0, #128]
     d54:	bl	bc0 <__cxa_finalize@plt>
     d58:	bl	cb8 <deregister_tm_clones>
     d5c:	mov	w0, #0x1                   	// #1
     d60:	strb	w0, [x19, #296]
     d64:	ldr	x19, [sp, #16]
     d68:	ldp	x29, x30, [sp], #32
     d6c:	ret

0000000000000d70 <frame_dummy>:
     d70:	b	ce8 <register_tm_clones>

0000000000000d74 <fdflags_builtin>:
     d74:	sub	sp, sp, #0x50
     d78:	stp	x29, x30, [sp, #16]
     d7c:	stp	x24, x23, [sp, #32]
     d80:	stp	x22, x21, [sp, #48]
     d84:	stp	x20, x19, [sp, #64]
     d88:	add	x29, sp, #0x10
     d8c:	mov	x21, x0
     d90:	bl	c30 <reset_internal_getopt@plt>
     d94:	adrp	x24, 11000 <__FRAME_END__+0xf86c>
     d98:	ldr	x24, [x24, #4048]
     d9c:	adrp	x22, 1000 <setone>
     da0:	mov	w19, wzr
     da4:	mov	w23, wzr
     da8:	add	x22, x22, #0x348
     dac:	b	db8 <fdflags_builtin+0x44>
     db0:	ldr	x20, [x24]
     db4:	mov	w23, #0x1                   	// #1
     db8:	mov	x0, x21
     dbc:	mov	x1, x22
     dc0:	bl	c20 <internal_getopt@plt>
     dc4:	cmp	w0, #0x73
     dc8:	b.eq	db0 <fdflags_builtin+0x3c>  // b.none
     dcc:	cmn	w0, #0x63
     dd0:	b.eq	dec <fdflags_builtin+0x78>  // b.none
     dd4:	cmn	w0, #0x1
     dd8:	b.eq	df4 <fdflags_builtin+0x80>  // b.none
     ddc:	cmp	w0, #0x76
     de0:	b.ne	e10 <fdflags_builtin+0x9c>  // b.any
     de4:	mov	w19, #0x1                   	// #1
     de8:	b	db8 <fdflags_builtin+0x44>
     dec:	bl	bd0 <builtin_help@plt>
     df0:	b	e14 <fdflags_builtin+0xa0>
     df4:	adrp	x8, 11000 <__FRAME_END__+0xf86c>
     df8:	ldr	x8, [x8, #4056]
     dfc:	ldr	x24, [x8]
     e00:	cbz	w23, e34 <fdflags_builtin+0xc0>
     e04:	cbnz	x24, e34 <fdflags_builtin+0xc0>
     e08:	mov	w21, wzr
     e0c:	b	e18 <fdflags_builtin+0xa4>
     e10:	bl	be0 <builtin_usage@plt>
     e14:	mov	w21, #0x102                 	// #258
     e18:	mov	w0, w21
     e1c:	ldp	x20, x19, [sp, #64]
     e20:	ldp	x22, x21, [sp, #48]
     e24:	ldp	x24, x23, [sp, #32]
     e28:	ldp	x29, x30, [sp, #16]
     e2c:	add	sp, sp, #0x50
     e30:	ret
     e34:	cbz	x24, ea0 <fdflags_builtin+0x12c>
     e38:	adrp	x22, 1000 <setone>
     e3c:	mov	w21, wzr
     e40:	add	x22, x22, #0x361
     e44:	b	e64 <fdflags_builtin+0xf0>
     e48:	ldr	x8, [x24, #8]
     e4c:	mov	x0, x22
     e50:	ldr	x1, [x8]
     e54:	bl	bb0 <builtin_error@plt>
     e58:	mov	w21, #0x1                   	// #1
     e5c:	ldr	x24, [x24]
     e60:	cbz	x24, e18 <fdflags_builtin+0xa4>
     e64:	ldr	x8, [x24, #8]
     e68:	add	x1, sp, #0x8
     e6c:	ldr	x0, [x8]
     e70:	bl	c50 <legal_number@plt>
     e74:	cbz	w0, e48 <fdflags_builtin+0xd4>
     e78:	ldr	x0, [sp, #8]
     e7c:	tbnz	x0, #63, e48 <fdflags_builtin+0xd4>
     e80:	cbz	w23, e90 <fdflags_builtin+0x11c>
     e84:	mov	x1, x20
     e88:	bl	1000 <setone>
     e8c:	b	e5c <fdflags_builtin+0xe8>
     e90:	mov	w1, #0x1                   	// #1
     e94:	mov	w2, w19
     e98:	bl	efc <printone>
     e9c:	b	e5c <fdflags_builtin+0xe8>
     ea0:	bl	110c <getmaxfd>
     ea4:	tbnz	w0, #31, ed8 <fdflags_builtin+0x164>
     ea8:	mov	w20, w0
     eac:	cbz	w0, e08 <fdflags_builtin+0x94>
     eb0:	mov	w22, wzr
     eb4:	mov	w0, w22
     eb8:	mov	w1, wzr
     ebc:	mov	w2, w19
     ec0:	bl	efc <printone>
     ec4:	add	w22, w22, #0x1
     ec8:	cmp	w20, w22
     ecc:	mov	w21, wzr
     ed0:	b.ne	eb4 <fdflags_builtin+0x140>  // b.any
     ed4:	b	e18 <fdflags_builtin+0xa4>
     ed8:	bl	c70 <__errno_location@plt>
     edc:	ldr	w0, [x0]
     ee0:	bl	bf0 <strerror@plt>
     ee4:	mov	x1, x0
     ee8:	adrp	x0, 1000 <setone>
     eec:	add	x0, x0, #0x34c
     ef0:	bl	bb0 <builtin_error@plt>
     ef4:	mov	w21, #0x1                   	// #1
     ef8:	b	e18 <fdflags_builtin+0xa4>

0000000000000efc <printone>:
     efc:	stp	x29, x30, [sp, #-80]!
     f00:	stp	x26, x25, [sp, #16]
     f04:	stp	x24, x23, [sp, #32]
     f08:	stp	x22, x21, [sp, #48]
     f0c:	stp	x20, x19, [sp, #64]
     f10:	mov	x29, sp
     f14:	mov	w19, w2
     f18:	mov	w21, w0
     f1c:	bl	1160 <getflags>
     f20:	cmn	w0, #0x1
     f24:	b.eq	fe8 <printone+0xec>  // b.none
     f28:	mov	w20, w0
     f2c:	adrp	x0, 1000 <setone>
     f30:	add	x0, x0, #0x617
     f34:	mov	w1, w21
     f38:	bl	c60 <printf@plt>
     f3c:	adrp	x8, 1000 <setone>
     f40:	adrp	x9, 1000 <setone>
     f44:	add	x8, x8, #0x6f0
     f48:	add	x9, x9, #0x620
     f4c:	cmp	w19, #0x0
     f50:	adrp	x25, 11000 <__FRAME_END__+0xf86c>
     f54:	adrp	x21, 1000 <setone>
     f58:	adrp	x23, 1000 <setone>
     f5c:	mov	x24, xzr
     f60:	add	x25, x25, #0xd30
     f64:	add	x21, x21, #0x622
     f68:	csel	x22, x9, x8, ne  // ne = any
     f6c:	add	x23, x23, #0x61b
     f70:	b	f88 <printone+0x8c>
     f74:	mov	w0, #0x2c                  	// #44
     f78:	bl	c80 <putchar@plt>
     f7c:	add	x24, x24, #0x10
     f80:	cmp	x24, #0xa0
     f84:	b.eq	fe0 <printone+0xe4>  // b.none
     f88:	add	x8, x25, x24
     f8c:	ldr	w26, [x8, #8]
     f90:	tst	w26, w20
     f94:	b.eq	fb0 <printone+0xb4>  // b.none
     f98:	ldr	x2, [x25, x24]
     f9c:	mov	x0, x23
     fa0:	mov	x1, x22
     fa4:	bl	c60 <printf@plt>
     fa8:	bic	w20, w20, w26
     fac:	b	fc0 <printone+0xc4>
     fb0:	cbz	w19, f7c <printone+0x80>
     fb4:	ldr	x1, [x25, x24]
     fb8:	mov	x0, x21
     fbc:	bl	c60 <printf@plt>
     fc0:	cmp	w19, #0x0
     fc4:	cset	w8, ne  // ne = any
     fc8:	cmp	x24, #0x90
     fcc:	cset	w9, ne  // ne = any
     fd0:	and	w8, w8, w9
     fd4:	tbnz	w8, #0, f74 <printone+0x78>
     fd8:	cbz	w20, f7c <printone+0x80>
     fdc:	b	f74 <printone+0x78>
     fe0:	mov	w0, #0xa                   	// #10
     fe4:	bl	c80 <putchar@plt>
     fe8:	ldp	x20, x19, [sp, #64]
     fec:	ldp	x22, x21, [sp, #48]
     ff0:	ldp	x24, x23, [sp, #32]
     ff4:	ldp	x26, x25, [sp, #16]
     ff8:	ldp	x29, x30, [sp], #80
     ffc:	ret

0000000000001000 <setone>:
    1000:	stp	x29, x30, [sp, #-64]!
    1004:	stp	x22, x21, [sp, #32]
    1008:	mov	x21, x1
    100c:	mov	w1, #0x1                   	// #1
    1010:	str	x23, [sp, #16]
    1014:	stp	x20, x19, [sp, #48]
    1018:	mov	x29, sp
    101c:	mov	w19, w0
    1020:	mov	w23, #0x1                   	// #1
    1024:	bl	1160 <getflags>
    1028:	cmn	w0, #0x1
    102c:	b.eq	10f8 <setone+0xf8>  // b.none
    1030:	mov	w20, w0
    1034:	add	x1, x29, #0x1c
    1038:	add	x2, x29, #0x18
    103c:	mov	x0, x21
    1040:	bl	121c <parseflags>
    1044:	ldp	w22, w21, [x29, #24]
    1048:	tst	w20, #0x80000
    104c:	cset	w9, eq  // eq = none
    1050:	and	w8, w20, #0x80000
    1054:	and	w10, w21, #0x80000
    1058:	tst	w9, w10, lsr #19
    105c:	cneg	w9, w23, eq  // eq = none
    1060:	tst	w8, w22
    1064:	csel	w2, w9, wzr, eq  // eq = none
    1068:	cmn	w2, #0x1
    106c:	b.eq	10a4 <setone+0xa4>  // b.none
    1070:	mov	w1, #0x2                   	// #2
    1074:	mov	w0, w19
    1078:	bl	c40 <fcntl@plt>
    107c:	cmn	w0, #0x1
    1080:	b.ne	10a4 <setone+0xa4>  // b.any
    1084:	bl	c70 <__errno_location@plt>
    1088:	ldr	w0, [x0]
    108c:	bl	bf0 <strerror@plt>
    1090:	mov	x2, x0
    1094:	adrp	x0, 1000 <setone>
    1098:	add	x0, x0, #0x6a2
    109c:	mov	w1, w19
    10a0:	bl	bb0 <builtin_error@plt>
    10a4:	and	w8, w21, #0xfff7ffff
    10a8:	and	w9, w22, #0xfff7ffff
    10ac:	and	w10, w20, #0xfff7ffff
    10b0:	stp	w9, w8, [x29, #24]
    10b4:	orr	w8, w8, w10
    10b8:	bic	w2, w8, w9
    10bc:	cmp	w2, w10
    10c0:	b.eq	10f8 <setone+0xf8>  // b.none
    10c4:	mov	w1, #0x4                   	// #4
    10c8:	mov	w0, w19
    10cc:	bl	c40 <fcntl@plt>
    10d0:	cmn	w0, #0x1
    10d4:	b.ne	10f8 <setone+0xf8>  // b.any
    10d8:	bl	c70 <__errno_location@plt>
    10dc:	ldr	w0, [x0]
    10e0:	bl	bf0 <strerror@plt>
    10e4:	mov	x2, x0
    10e8:	adrp	x0, 1000 <setone>
    10ec:	add	x0, x0, #0x6c1
    10f0:	mov	w1, w19
    10f4:	bl	bb0 <builtin_error@plt>
    10f8:	ldp	x20, x19, [sp, #48]
    10fc:	ldp	x22, x21, [sp, #32]
    1100:	ldr	x23, [sp, #16]
    1104:	ldp	x29, x30, [sp], #64
    1108:	ret

000000000000110c <getmaxfd>:
    110c:	stp	x29, x30, [sp, #-32]!
    1110:	str	x19, [sp, #16]
    1114:	mov	x29, sp
    1118:	bl	c90 <getdtablesize@plt>
    111c:	subs	w8, w0, #0x1
    1120:	mov	w9, #0xff                  	// #255
    1124:	csel	w19, w9, w8, lt  // lt = tstop
    1128:	cmp	w19, #0x1
    112c:	b.lt	1150 <getmaxfd+0x44>  // b.tstop
    1130:	add	x2, x29, #0x1c
    1134:	mov	w1, #0x1                   	// #1
    1138:	mov	w0, w19
    113c:	bl	c40 <fcntl@plt>
    1140:	cmn	w0, #0x1
    1144:	b.ne	1150 <getmaxfd+0x44>  // b.any
    1148:	subs	w19, w19, #0x1
    114c:	b.gt	1130 <getmaxfd+0x24>
    1150:	mov	w0, w19
    1154:	ldr	x19, [sp, #16]
    1158:	ldp	x29, x30, [sp], #32
    115c:	ret

0000000000001160 <getflags>:
    1160:	stp	x29, x30, [sp, #-48]!
    1164:	stp	x20, x19, [sp, #32]
    1168:	mov	w20, w1
    116c:	mov	w1, #0x1                   	// #1
    1170:	str	x21, [sp, #16]
    1174:	mov	x29, sp
    1178:	mov	w19, w0
    117c:	bl	c40 <fcntl@plt>
    1180:	cmn	w0, #0x1
    1184:	b.eq	11b8 <getflags+0x58>  // b.none
    1188:	mov	w21, w0
    118c:	mov	w1, #0x3                   	// #3
    1190:	mov	w0, w19
    1194:	bl	c40 <fcntl@plt>
    1198:	cmn	w0, #0x1
    119c:	b.eq	11d8 <getflags+0x78>  // b.none
    11a0:	orr	w8, w0, #0x80000
    11a4:	cmp	w21, #0x0
    11a8:	csel	w19, w0, w8, eq  // eq = none
    11ac:	bl	1210 <getallflags>
    11b0:	and	w0, w0, w19
    11b4:	b	1200 <getflags+0xa0>
    11b8:	cbz	w20, 11fc <getflags+0x9c>
    11bc:	bl	c70 <__errno_location@plt>
    11c0:	ldr	w0, [x0]
    11c4:	bl	bf0 <strerror@plt>
    11c8:	mov	x2, x0
    11cc:	adrp	x0, 1000 <setone>
    11d0:	add	x0, x0, #0x626
    11d4:	b	11f4 <getflags+0x94>
    11d8:	cbz	w20, 11fc <getflags+0x9c>
    11dc:	bl	c70 <__errno_location@plt>
    11e0:	ldr	w0, [x0]
    11e4:	bl	bf0 <strerror@plt>
    11e8:	mov	x2, x0
    11ec:	adrp	x0, 1000 <setone>
    11f0:	add	x0, x0, #0x645
    11f4:	mov	w1, w19
    11f8:	bl	bb0 <builtin_error@plt>
    11fc:	mov	w0, #0xffffffff            	// #-1
    1200:	ldp	x20, x19, [sp, #32]
    1204:	ldr	x21, [sp, #16]
    1208:	ldp	x29, x30, [sp], #48
    120c:	ret

0000000000001210 <getallflags>:
    1210:	mov	w0, #0x3c00                	// #15360
    1214:	movk	w0, #0x1d, lsl #16
    1218:	ret

000000000000121c <parseflags>:
    121c:	stp	x29, x30, [sp, #-96]!
    1220:	mov	x29, sp
    1224:	stp	x26, x25, [sp, #32]
    1228:	stp	x24, x23, [sp, #48]
    122c:	stp	x22, x21, [sp, #64]
    1230:	stp	x20, x19, [sp, #80]
    1234:	mov	x20, x1
    1238:	str	wzr, [x29, #28]
    123c:	str	wzr, [x2]
    1240:	str	wzr, [x1]
    1244:	adrp	x1, 1000 <setone>
    1248:	add	x1, x1, #0x42a
    124c:	str	x27, [sp, #16]
    1250:	mov	x19, x2
    1254:	bl	ba0 <strtok@plt>
    1258:	cbz	x0, 131c <parseflags+0x100>
    125c:	adrp	x24, 11000 <__FRAME_END__+0xf86c>
    1260:	adrp	x21, 1000 <setone>
    1264:	adrp	x22, 1000 <setone>
    1268:	mov	x23, x0
    126c:	add	x24, x24, #0xd38
    1270:	add	x21, x21, #0x6df
    1274:	add	x22, x22, #0x42a
    1278:	b	1290 <parseflags+0x74>
    127c:	mov	x0, xzr
    1280:	mov	x1, x22
    1284:	bl	ba0 <strtok@plt>
    1288:	mov	x23, x0
    128c:	cbz	x0, 131c <parseflags+0x100>
    1290:	ldrb	w8, [x23]
    1294:	cmp	w8, #0x2d
    1298:	b.eq	12b0 <parseflags+0x94>  // b.none
    129c:	cmp	w8, #0x2b
    12a0:	b.ne	12bc <parseflags+0xa0>  // b.any
    12a4:	add	x23, x23, #0x1
    12a8:	mov	x25, x20
    12ac:	b	12c0 <parseflags+0xa4>
    12b0:	add	x23, x23, #0x1
    12b4:	mov	x25, x19
    12b8:	b	12c0 <parseflags+0xa4>
    12bc:	add	x25, x29, #0x1c
    12c0:	mov	x26, xzr
    12c4:	mov	x27, x24
    12c8:	ldur	x1, [x27, #-8]
    12cc:	mov	x0, x23
    12d0:	bl	c10 <strcmp@plt>
    12d4:	cbz	w0, 12f4 <parseflags+0xd8>
    12d8:	add	x26, x26, #0x1
    12dc:	cmp	x26, #0xa
    12e0:	add	x27, x27, #0x10
    12e4:	b.ne	12c8 <parseflags+0xac>  // b.any
    12e8:	cmp	x26, #0xa
    12ec:	b.ne	127c <parseflags+0x60>  // b.any
    12f0:	b	130c <parseflags+0xf0>
    12f4:	ldr	w8, [x27]
    12f8:	ldr	w9, [x25]
    12fc:	orr	w8, w9, w8
    1300:	str	w8, [x25]
    1304:	cmp	x26, #0xa
    1308:	b.ne	127c <parseflags+0x60>  // b.any
    130c:	mov	x0, x21
    1310:	mov	x1, x23
    1314:	bl	bb0 <builtin_error@plt>
    1318:	b	127c <parseflags+0x60>
    131c:	ldp	x20, x19, [sp, #80]
    1320:	ldp	x22, x21, [sp, #64]
    1324:	ldp	x24, x23, [sp, #48]
    1328:	ldp	x26, x25, [sp, #32]
    132c:	ldr	x27, [sp, #16]
    1330:	ldp	x29, x30, [sp], #96
    1334:	ret

Disassembly of section .fini:

0000000000001338 <_fini>:
    1338:	stp	x29, x30, [sp, #-16]!
    133c:	mov	x29, sp
    1340:	ldp	x29, x30, [sp], #16
    1344:	ret
