
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//iso9660.module_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_datetime2unixtime>:
       0:	mov	x3, x0
       4:	adrp	x0, 0 <grub_datetime2unixtime>
       8:	sub	sp, sp, #0x30
       c:	ldr	x0, [x0]
      10:	ldp	x4, x5, [x0]
      14:	stp	x4, x5, [sp, #24]
      18:	ldrh	w5, [x3]
      1c:	ldr	x0, [x0, #16]
      20:	str	x0, [sp, #40]
      24:	adrp	x0, 0 <grub_datetime2unixtime>
      28:	ldr	x0, [x0]
      2c:	ldr	x2, [x0]
      30:	str	x2, [sp, #8]
      34:	ldr	w0, [x0, #8]
      38:	str	w0, [sp, #16]
      3c:	sub	w0, w5, #0x76d
      40:	and	w0, w0, #0xffff
      44:	cmp	w0, #0x89
      48:	b.hi	140 <grub_datetime2unixtime+0x140>  // b.pmore
      4c:	ldrb	w7, [x3, #2]
      50:	sub	w6, w7, #0x1
      54:	and	w0, w6, #0xff
      58:	cmp	w0, #0xb
      5c:	b.hi	140 <grub_datetime2unixtime+0x140>  // b.pmore
      60:	sub	w4, w5, #0x1
      64:	sub	w2, w5, #0x7b5
      68:	mov	w8, #0x1f80                	// #8064
      6c:	asr	w4, w4, #2
      70:	movk	w8, #0x786, lsl #16
      74:	sub	w4, w4, #0x1ed
      78:	sub	w0, w2, w4, lsl #2
      7c:	mov	w2, #0xec00                	// #60416
      80:	movk	w2, #0x5a4, lsl #16
      84:	cmp	w0, #0x3
      88:	madd	w4, w4, w8, w2
      8c:	mov	w2, #0x3380                	// #13184
      90:	movk	w2, #0x1e1, lsl #16
      94:	sxtw	x8, w6
      98:	madd	w4, w0, w2, w4
      9c:	add	x2, sp, #0x18
      a0:	ldrh	w2, [x2, w6, sxtw #1]
      a4:	mov	w6, #0x5180                	// #20864
      a8:	movk	w6, #0x1, lsl #16
      ac:	madd	w4, w2, w6, w4
      b0:	b.ne	c0 <grub_datetime2unixtime+0xc0>  // b.any
      b4:	cmp	w7, #0x2
      b8:	b.ls	c0 <grub_datetime2unixtime+0xc0>  // b.plast
      bc:	add	w4, w4, w6
      c0:	add	x6, sp, #0x8
      c4:	ldrb	w2, [x3, #3]
      c8:	ldrb	w6, [x6, x8]
      cc:	cmp	w6, w2
      d0:	b.cs	e8 <grub_datetime2unixtime+0xe8>  // b.hs, b.nlast
      d4:	cbz	w0, 160 <grub_datetime2unixtime+0x160>
      d8:	ldrh	w6, [x3, #2]
      dc:	mov	w0, #0x1d02                	// #7426
      e0:	cmp	w6, w0
      e4:	b.ne	140 <grub_datetime2unixtime+0x140>  // b.any
      e8:	cbz	w2, 140 <grub_datetime2unixtime+0x140>
      ec:	ldrb	w7, [x3, #4]
      f0:	cmp	w7, #0x17
      f4:	b.hi	140 <grub_datetime2unixtime+0x140>  // b.pmore
      f8:	ldrb	w6, [x3, #5]
      fc:	cmp	w6, #0x3b
     100:	b.hi	140 <grub_datetime2unixtime+0x140>  // b.pmore
     104:	ldrb	w0, [x3, #6]
     108:	cmp	w0, #0x3c
     10c:	b.hi	140 <grub_datetime2unixtime+0x140>  // b.pmore
     110:	sub	w2, w2, #0x1
     114:	mov	w3, #0x5180                	// #20864
     118:	movk	w3, #0x1, lsl #16
     11c:	cmp	w5, #0x7bc
     120:	madd	w2, w2, w3, w4
     124:	mov	w4, #0xe10                 	// #3600
     128:	mov	w3, #0x3c                  	// #60
     12c:	madd	w2, w7, w4, w2
     130:	madd	w2, w6, w3, w2
     134:	add	w2, w0, w2
     138:	b.ls	148 <grub_datetime2unixtime+0x148>  // b.plast
     13c:	tbz	w2, #31, 158 <grub_datetime2unixtime+0x158>
     140:	mov	w0, #0x0                   	// #0
     144:	b	160 <grub_datetime2unixtime+0x160>
     148:	cmp	w5, #0x7a7
     14c:	b.hi	158 <grub_datetime2unixtime+0x158>  // b.pmore
     150:	cmp	w2, #0x0
     154:	b.gt	140 <grub_datetime2unixtime+0x140>
     158:	mov	w0, #0x1                   	// #1
     15c:	str	w2, [x1]
     160:	add	sp, sp, #0x30
     164:	ret
	...

0000000000000178 <grub_iso9660_close>:
     178:	stp	x29, x30, [sp, #-32]!
     17c:	mov	x29, sp
     180:	str	x19, [sp, #16]
     184:	ldr	x19, [x0, #80]
     188:	ldr	x0, [x19, #872]
     18c:	bl	0 <grub_free>
     190:	mov	x0, x19
     194:	bl	0 <grub_free>
     198:	adrp	x0, 0 <grub_datetime2unixtime>
     19c:	ldr	x0, [x0]
     1a0:	ldr	x0, [x0]
     1a4:	bl	0 <grub_dl_unref>
     1a8:	mov	w0, #0x0                   	// #0
     1ac:	ldr	x19, [sp, #16]
     1b0:	ldp	x29, x30, [sp], #32
     1b4:	ret
	...

00000000000001c0 <susp_iterate_set_rockridge>:
     1c0:	stp	x29, x30, [sp, #-32]!
     1c4:	mov	x2, #0x2                   	// #2
     1c8:	mov	x29, sp
     1cc:	str	x19, [sp, #16]
     1d0:	mov	x19, x1
     1d4:	adrp	x1, 0 <grub_datetime2unixtime>
     1d8:	ldr	x1, [x1]
     1dc:	bl	0 <grub_strncmp>
     1e0:	cbnz	w0, 1f8 <susp_iterate_set_rockridge+0x38>
     1e4:	mov	w0, #0x1                   	// #1
     1e8:	str	w0, [x19, #856]
     1ec:	ldr	x19, [sp, #16]
     1f0:	ldp	x29, x30, [sp], #32
     1f4:	ret
     1f8:	mov	w0, #0x0                   	// #0
     1fc:	b	1ec <susp_iterate_set_rockridge+0x2c>
	...

0000000000000208 <grub_iso9660_convert_string>:
     208:	stp	x29, x30, [sp, #-288]!
     20c:	mov	x29, sp
     210:	stp	x19, x20, [sp, #16]
     214:	sxtw	x19, w1
     218:	mov	x20, x0
     21c:	lsl	w0, w19, #2
     220:	add	w0, w0, #0x1
     224:	sxtw	x0, w0
     228:	bl	0 <grub_malloc>
     22c:	cbz	x0, 268 <grub_iso9660_convert_string+0x60>
     230:	add	x5, sp, #0x20
     234:	mov	x1, #0x0                   	// #0
     238:	cmp	w19, w1
     23c:	b.gt	274 <grub_iso9660_convert_string+0x6c>
     240:	mov	x2, x0
     244:	mov	w4, #0x0                   	// #0
     248:	mov	w7, #0xffff2800            	// #-55296
     24c:	mov	w8, #0xffff2400            	// #-56320
     250:	mov	w9, #0x3f                  	// #63
     254:	mov	w10, #0x2400                	// #9216
     258:	sub	x19, x19, #0x1
     25c:	cmn	x19, #0x1
     260:	b.ne	28c <grub_iso9660_convert_string+0x84>  // b.any
     264:	strb	wzr, [x2]
     268:	ldp	x19, x20, [sp, #16]
     26c:	ldp	x29, x30, [sp], #288
     270:	ret
     274:	ldrh	w2, [x20, x1, lsl #1]
     278:	lsr	w3, w2, #8
     27c:	orr	w2, w3, w2, lsl #8
     280:	strh	w2, [x5, x1, lsl #1]
     284:	add	x1, x1, #0x1
     288:	b	238 <grub_iso9660_convert_string+0x30>
     28c:	mov	x1, x5
     290:	ldrh	w3, [x1], #2
     294:	cbz	w4, 2fc <grub_iso9660_convert_string+0xf4>
     298:	add	w6, w3, w8
     29c:	cmp	w6, #0x3ff
     2a0:	b.hi	2f0 <grub_iso9660_convert_string+0xe8>  // b.pmore
     2a4:	add	w4, w4, w7
     2a8:	add	x2, x2, #0x4
     2ac:	add	w3, w3, w4, lsl #10
     2b0:	add	w3, w3, w10
     2b4:	lsr	w4, w3, #18
     2b8:	orr	w4, w4, #0xfffffff0
     2bc:	sturb	w4, [x2, #-4]
     2c0:	ubfx	x4, x3, #12, #6
     2c4:	orr	w4, w4, #0xffffff80
     2c8:	sturb	w4, [x2, #-3]
     2cc:	ubfx	x4, x3, #6, #6
     2d0:	and	w3, w3, #0x3f
     2d4:	orr	w4, w4, #0xffffff80
     2d8:	orr	w3, w3, #0xffffff80
     2dc:	sturb	w4, [x2, #-2]
     2e0:	sturb	w3, [x2, #-1]
     2e4:	mov	w4, #0x0                   	// #0
     2e8:	mov	x5, x1
     2ec:	b	258 <grub_iso9660_convert_string+0x50>
     2f0:	mov	x1, x5
     2f4:	strb	w9, [x2], #1
     2f8:	b	2e4 <grub_iso9660_convert_string+0xdc>
     2fc:	cmp	w3, #0x7f
     300:	b.hi	30c <grub_iso9660_convert_string+0x104>  // b.pmore
     304:	strb	w3, [x2], #1
     308:	b	2e8 <grub_iso9660_convert_string+0xe0>
     30c:	cmp	w3, #0x7ff
     310:	b.hi	338 <grub_iso9660_convert_string+0x130>  // b.pmore
     314:	mov	x5, x2
     318:	lsr	w6, w3, #6
     31c:	orr	w6, w6, #0xffffffc0
     320:	and	w3, w3, #0x3f
     324:	orr	w3, w3, #0xffffff80
     328:	strb	w6, [x5], #2
     32c:	strb	w3, [x2, #1]
     330:	mov	x2, x5
     334:	b	2e8 <grub_iso9660_convert_string+0xe0>
     338:	add	w5, w3, w7
     33c:	cmp	w5, #0x3ff
     340:	b.ls	384 <grub_iso9660_convert_string+0x17c>  // b.plast
     344:	add	w5, w3, w8
     348:	cmp	w5, #0x3ff
     34c:	b.hi	358 <grub_iso9660_convert_string+0x150>  // b.pmore
     350:	strb	w9, [x2], #1
     354:	b	2e8 <grub_iso9660_convert_string+0xe0>
     358:	lsr	w5, w3, #12
     35c:	add	x2, x2, #0x3
     360:	orr	w5, w5, #0xffffffe0
     364:	sturb	w5, [x2, #-3]
     368:	ubfx	x5, x3, #6, #6
     36c:	and	w3, w3, #0x3f
     370:	orr	w5, w5, #0xffffff80
     374:	orr	w3, w3, #0xffffff80
     378:	sturb	w5, [x2, #-2]
     37c:	sturb	w3, [x2, #-1]
     380:	b	2e8 <grub_iso9660_convert_string+0xe0>
     384:	mov	w4, w3
     388:	b	2e8 <grub_iso9660_convert_string+0xe0>

000000000000038c <grub_iso9660_dir_iter>:
     38c:	stp	x29, x30, [sp, #-80]!
     390:	mov	x29, sp
     394:	stp	x19, x20, [sp, #16]
     398:	mov	w20, w1
     39c:	mov	x19, x2
     3a0:	mov	w1, #0x0                   	// #0
     3a4:	and	w20, w20, #0xff
     3a8:	mov	x2, #0x10                  	// #16
     3ac:	stp	x21, x22, [sp, #32]
     3b0:	mov	x22, x0
     3b4:	mov	x21, x3
     3b8:	add	x0, sp, #0x40
     3bc:	bl	0 <grub_memset>
     3c0:	ldrb	w0, [sp, #64]
     3c4:	cmp	w20, #0x2
     3c8:	cset	w1, eq  // eq = none
     3cc:	bfxil	w0, w1, #0, #1
     3d0:	strb	w0, [sp, #64]
     3d4:	ldrb	w0, [x19, #46]
     3d8:	ldur	w1, [x19, #47]
     3dc:	add	w0, w0, #0x76c
     3e0:	strh	w0, [sp, #56]
     3e4:	ldrb	w0, [x19, #51]
     3e8:	stur	w1, [sp, #58]
     3ec:	add	x1, sp, #0x44
     3f0:	strb	w0, [sp, #62]
     3f4:	add	x0, sp, #0x38
     3f8:	bl	0 <grub_datetime2unixtime>
     3fc:	cbz	w0, 418 <grub_iso9660_dir_iter+0x8c>
     400:	ldr	w1, [sp, #68]
     404:	mov	w2, #0xfffffc7c            	// #-900
     408:	ldrb	w0, [x19, #52]
     40c:	madd	w0, w0, w2, w1
     410:	str	w0, [sp, #68]
     414:	mov	w0, #0x1                   	// #1
     418:	ldrb	w1, [sp, #64]
     41c:	bfi	w1, w0, #1, #1
     420:	mov	x0, x19
     424:	strb	w1, [sp, #64]
     428:	bl	0 <grub_free>
     42c:	ldp	x3, x2, [x21]
     430:	add	x1, sp, #0x40
     434:	mov	x0, x22
     438:	blr	x3
     43c:	ldp	x19, x20, [sp, #16]
     440:	ldp	x21, x22, [sp, #32]
     444:	ldp	x29, x30, [sp], #80
     448:	ret

000000000000044c <read_node>:
     44c:	stp	x29, x30, [sp, #-80]!
     450:	mov	x29, sp
     454:	stp	x19, x20, [sp, #16]
     458:	mov	x19, x1
     45c:	mov	x20, #0x0                   	// #0
     460:	stp	x21, x22, [sp, #32]
     464:	mov	x21, x2
     468:	stp	x23, x24, [sp, #48]
     46c:	mov	x23, x0
     470:	mov	x24, x3
     474:	str	x25, [sp, #64]
     478:	add	x25, x0, #0x26
     47c:	cbz	x21, 518 <read_node+0xcc>
     480:	ldr	x1, [x23, #8]
     484:	b	490 <read_node+0x44>
     488:	sub	x19, x19, x0
     48c:	add	x20, x20, #0x1
     490:	cmp	x1, x20
     494:	b.ls	4f0 <read_node+0xa4>  // b.plast
     498:	add	x0, x20, x20, lsl #5
     49c:	ldr	w0, [x25, x0]
     4a0:	cmp	x0, x19
     4a4:	b.ls	488 <read_node+0x3c>  // b.plast
     4a8:	add	x0, x20, x20, lsl #5
     4ac:	mov	x4, x24
     4b0:	add	x0, x23, x0
     4b4:	mov	x2, x19
     4b8:	ldur	w22, [x0, #38]
     4bc:	ldur	w1, [x0, #30]
     4c0:	ldr	x0, [x23]
     4c4:	cmp	x21, x22
     4c8:	csel	x22, x21, x22, ls  // ls = plast
     4cc:	lsl	x1, x1, #2
     4d0:	mov	x3, x22
     4d4:	ldr	x0, [x0, #848]
     4d8:	bl	0 <grub_disk_read>
     4dc:	cbnz	w0, 51c <read_node+0xd0>
     4e0:	sub	x21, x21, x22
     4e4:	add	x19, x19, x22
     4e8:	add	x24, x24, x22
     4ec:	b	47c <read_node+0x30>
     4f0:	b.ne	4a8 <read_node+0x5c>  // b.any
     4f4:	adrp	x0, 0 <grub_datetime2unixtime>
     4f8:	ldp	x19, x20, [sp, #16]
     4fc:	ldp	x21, x22, [sp, #32]
     500:	ldp	x23, x24, [sp, #48]
     504:	ldr	x25, [sp, #64]
     508:	ldp	x29, x30, [sp], #80
     50c:	ldr	x1, [x0]
     510:	mov	w0, #0xb                   	// #11
     514:	b	0 <grub_error>
     518:	mov	w0, #0x0                   	// #0
     51c:	ldp	x19, x20, [sp, #16]
     520:	ldp	x21, x22, [sp, #32]
     524:	ldp	x23, x24, [sp, #48]
     528:	ldr	x25, [sp, #64]
     52c:	ldp	x29, x30, [sp], #80
     530:	ret
     534:	nop
	...

0000000000000540 <grub_iso9660_read>:
     540:	stp	x29, x30, [sp, #-32]!
     544:	mov	x29, sp
     548:	stp	x19, x20, [sp, #16]
     54c:	mov	x19, x2
     550:	ldp	x20, x3, [x0, #80]
     554:	ldr	x4, [x20, #848]
     558:	str	x3, [x4, #48]
     55c:	ldr	x3, [x0, #96]
     560:	str	x3, [x4, #56]
     564:	mov	x3, x1
     568:	ldr	x1, [x0, #24]
     56c:	ldr	x0, [x20, #872]
     570:	bl	44c <read_node>
     574:	ldr	x1, [x20, #848]
     578:	str	xzr, [x1, #48]
     57c:	adrp	x1, 0 <grub_datetime2unixtime>
     580:	ldr	x1, [x1]
     584:	ldr	w1, [x1]
     588:	orr	w0, w0, w1
     58c:	cmp	w0, #0x0
     590:	csinv	x0, x19, xzr, eq  // eq = none
     594:	ldp	x19, x20, [sp, #16]
     598:	ldp	x29, x30, [sp], #32
     59c:	ret
	...

00000000000005a8 <grub_iso9660_susp_iterate.part.0>:
     5a8:	stp	x29, x30, [sp, #-112]!
     5ac:	mov	x29, sp
     5b0:	stp	x19, x20, [sp, #16]
     5b4:	mov	x19, x1
     5b8:	stp	x21, x22, [sp, #32]
     5bc:	mov	x21, x2
     5c0:	stp	x23, x24, [sp, #48]
     5c4:	mov	x23, x0
     5c8:	mov	x24, x3
     5cc:	mov	x0, x2
     5d0:	stp	x25, x26, [sp, #64]
     5d4:	mov	x25, x4
     5d8:	stp	x27, x28, [sp, #80]
     5dc:	bl	0 <grub_malloc>
     5e0:	cbnz	x0, 610 <grub_iso9660_susp_iterate.part.0+0x68>
     5e4:	adrp	x0, 0 <grub_datetime2unixtime>
     5e8:	ldr	x0, [x0]
     5ec:	ldr	w22, [x0]
     5f0:	mov	w0, w22
     5f4:	ldp	x19, x20, [sp, #16]
     5f8:	ldp	x21, x22, [sp, #32]
     5fc:	ldp	x23, x24, [sp, #48]
     600:	ldp	x25, x26, [sp, #64]
     604:	ldp	x27, x28, [sp, #80]
     608:	ldp	x29, x30, [sp], #112
     60c:	ret
     610:	mov	x3, x0
     614:	mov	x20, x0
     618:	mov	x2, x21
     61c:	mov	x1, x19
     620:	mov	x0, x23
     624:	bl	44c <read_node>
     628:	mov	w22, w0
     62c:	cbnz	w0, 5f0 <grub_iso9660_susp_iterate.part.0+0x48>
     630:	mov	x19, x20
     634:	adrp	x26, 0 <grub_datetime2unixtime>
     638:	adrp	x27, 0 <grub_datetime2unixtime>
     63c:	sub	x0, x21, #0x1
     640:	add	x0, x20, x0
     644:	cmp	x19, x0
     648:	b.cs	668 <grub_iso9660_susp_iterate.part.0+0xc0>  // b.hs, b.nlast
     64c:	ldrb	w0, [x19, #2]
     650:	cbz	w0, 668 <grub_iso9660_susp_iterate.part.0+0xc0>
     654:	ldr	x1, [x26]
     658:	mov	x0, x19
     65c:	mov	x2, #0x2                   	// #2
     660:	bl	0 <grub_strncmp>
     664:	cbnz	w0, 674 <grub_iso9660_susp_iterate.part.0+0xcc>
     668:	mov	x0, x20
     66c:	bl	0 <grub_free>
     670:	b	5f0 <grub_iso9660_susp_iterate.part.0+0x48>
     674:	ldr	x1, [x27]
     678:	mov	x0, x19
     67c:	mov	x2, #0x2                   	// #2
     680:	bl	0 <grub_strncmp>
     684:	cbnz	w0, 6d8 <grub_iso9660_susp_iterate.part.0+0x130>
     688:	ldr	w2, [x19, #12]
     68c:	mov	x0, x20
     690:	ldr	w28, [x19, #4]
     694:	ldr	w21, [x19, #20]
     698:	str	x2, [sp, #104]
     69c:	bl	0 <grub_free>
     6a0:	lsl	w28, w28, #2
     6a4:	mov	x0, x21
     6a8:	bl	0 <grub_malloc>
     6ac:	mov	x19, x0
     6b0:	ldr	x2, [sp, #104]
     6b4:	cbz	x0, 5e4 <grub_iso9660_susp_iterate.part.0+0x3c>
     6b8:	mov	x4, x0
     6bc:	mov	x3, x21
     6c0:	ldr	x0, [x23]
     6c4:	mov	x1, x28
     6c8:	ldr	x0, [x0, #848]
     6cc:	bl	0 <grub_disk_read>
     6d0:	cbnz	w0, 6f4 <grub_iso9660_susp_iterate.part.0+0x14c>
     6d4:	mov	x20, x19
     6d8:	mov	x1, x25
     6dc:	mov	x0, x19
     6e0:	blr	x24
     6e4:	cbnz	w0, 668 <grub_iso9660_susp_iterate.part.0+0xc0>
     6e8:	ldrb	w0, [x19, #2]
     6ec:	add	x19, x19, x0
     6f0:	b	63c <grub_iso9660_susp_iterate.part.0+0x94>
     6f4:	mov	w22, w0
     6f8:	b	5f0 <grub_iso9660_susp_iterate.part.0+0x48>
     6fc:	nop
	...

0000000000000718 <grub_iso9660_read_symlink>:
     718:	ldr	w1, [x0, #24]
     71c:	cbz	w1, 734 <grub_iso9660_read_symlink+0x1c>
     720:	ldr	x1, [x0, #8]
     724:	add	x1, x1, x1, lsl #5
     728:	add	x0, x0, x1
     72c:	add	x0, x0, #0x1c
     730:	b	0 <grub_strdup>
     734:	adrp	x0, 0 <grub_datetime2unixtime>
     738:	ldr	x0, [x0]
     73c:	b	730 <grub_iso9660_read_symlink+0x18>
	...

0000000000000748 <grub_iso9660_mount>:
     748:	sub	sp, sp, #0x4f0
     74c:	stp	x29, x30, [sp]
     750:	mov	x29, sp
     754:	stp	x19, x20, [sp, #16]
     758:	stp	x21, x22, [sp, #32]
     75c:	mov	x22, x0
     760:	mov	x0, #0x370                 	// #880
     764:	stp	x23, x24, [sp, #48]
     768:	stp	x25, x26, [sp, #64]
     76c:	bl	0 <grub_zalloc>
     770:	mov	x19, x0
     774:	cbz	x0, 990 <grub_iso9660_mount+0x248>
     778:	add	x24, sp, #0x1a1
     77c:	mov	w23, #0x40                  	// #64
     780:	str	x22, [x0, #848]
     784:	add	x4, sp, #0x1a0
     788:	sxtw	x1, w23
     78c:	mov	x0, x22
     790:	mov	x3, #0x34f                 	// #847
     794:	mov	x2, #0x0                   	// #0
     798:	bl	0 <grub_disk_read>
     79c:	cbz	w0, 7c0 <grub_iso9660_mount+0x78>
     7a0:	adrp	x0, 0 <grub_datetime2unixtime>
     7a4:	ldr	x1, [x0]
     7a8:	mov	w0, #0x9                   	// #9
     7ac:	bl	0 <grub_error>
     7b0:	mov	x0, x19
     7b4:	mov	x19, #0x0                   	// #0
     7b8:	bl	0 <grub_free>
     7bc:	b	990 <grub_iso9660_mount+0x248>
     7c0:	adrp	x0, 0 <grub_datetime2unixtime>
     7c4:	mov	x2, #0x5                   	// #5
     7c8:	ldr	x1, [x0]
     7cc:	mov	x0, x24
     7d0:	bl	0 <grub_strncmp>
     7d4:	cbnz	w0, 7a0 <grub_iso9660_mount+0x58>
     7d8:	ldrb	w0, [sp, #416]
     7dc:	cmp	w0, #0x1
     7e0:	b.eq	834 <grub_iso9660_mount+0xec>  // b.none
     7e4:	ldr	w1, [x19, #856]
     7e8:	cbnz	w1, 980 <grub_iso9660_mount+0x238>
     7ec:	cmp	w0, #0x2
     7f0:	b.ne	980 <grub_iso9660_mount+0x238>  // b.any
     7f4:	ldrb	w0, [sp, #504]
     7f8:	cmp	w0, #0x25
     7fc:	b.ne	980 <grub_iso9660_mount+0x238>  // b.any
     800:	ldrb	w0, [sp, #505]
     804:	cmp	w0, #0x2f
     808:	b.ne	980 <grub_iso9660_mount+0x238>  // b.any
     80c:	ldrb	w0, [sp, #506]
     810:	sub	w0, w0, #0x40
     814:	and	w0, w0, #0xff
     818:	cmp	w0, #0x5
     81c:	b.hi	980 <grub_iso9660_mount+0x238>  // b.pmore
     820:	mov	x1, #0x29                  	// #41
     824:	lsr	x0, x1, x0
     828:	tbz	w0, #0, 980 <grub_iso9660_mount+0x238>
     82c:	mov	w0, #0x1                   	// #1
     830:	str	w0, [x19, #864]
     834:	add	x1, sp, #0x1a0
     838:	mov	x2, #0x34f                 	// #847
     83c:	mov	x0, x19
     840:	bl	0 <grub_memmove>
     844:	ldr	x0, [x19, #848]
     848:	str	wzr, [x19, #856]
     84c:	ldur	w1, [x19, #158]
     850:	add	x4, sp, #0x50
     854:	mov	x3, #0x21                  	// #33
     858:	mov	x2, #0x0                   	// #0
     85c:	lsl	w1, w1, #2
     860:	bl	0 <grub_disk_read>
     864:	cbz	w0, 880 <grub_iso9660_mount+0x138>
     868:	adrp	x0, 0 <grub_datetime2unixtime>
     86c:	ldr	x1, [x0]
     870:	mov	w0, #0x9                   	// #9
     874:	bl	0 <grub_error>
     878:	cbnz	w0, 7b0 <grub_iso9660_mount+0x68>
     87c:	b	980 <grub_iso9660_mount+0x238>
     880:	ldrb	w20, [sp, #112]
     884:	ldrb	w25, [sp, #80]
     888:	add	w20, w20, #0x1
     88c:	and	w20, w20, #0xfffffffe
     890:	add	w20, w20, #0x20
     894:	subs	w25, w25, w20
     898:	b.eq	980 <grub_iso9660_mount+0x238>  // b.none
     89c:	sxtw	x26, w25
     8a0:	mov	x0, x26
     8a4:	bl	0 <grub_malloc>
     8a8:	mov	x21, x0
     8ac:	cbnz	x0, 8c0 <grub_iso9660_mount+0x178>
     8b0:	adrp	x0, 0 <grub_datetime2unixtime>
     8b4:	ldr	x0, [x0]
     8b8:	ldr	w0, [x0]
     8bc:	b	878 <grub_iso9660_mount+0x130>
     8c0:	mov	x4, x0
     8c4:	ldur	w1, [x19, #158]
     8c8:	ldr	x0, [x19, #848]
     8cc:	mov	x3, x26
     8d0:	mov	x2, x20
     8d4:	lsl	w1, w1, #2
     8d8:	bl	0 <grub_disk_read>
     8dc:	cbz	w0, 8ec <grub_iso9660_mount+0x1a4>
     8e0:	mov	x0, x21
     8e4:	bl	0 <grub_free>
     8e8:	b	868 <grub_iso9660_mount+0x120>
     8ec:	adrp	x0, 0 <grub_datetime2unixtime>
     8f0:	mov	x2, #0x2                   	// #2
     8f4:	ldr	x1, [x0]
     8f8:	mov	x0, x21
     8fc:	bl	0 <grub_strncmp>
     900:	cbnz	w0, 978 <grub_iso9660_mount+0x230>
     904:	mov	x0, #0x8                   	// #8
     908:	str	x0, [sp, #136]
     90c:	mov	x0, #0x1                   	// #1
     910:	str	x0, [sp, #128]
     914:	add	x0, x19, #0x9c
     918:	add	x1, sp, #0x4
     91c:	str	x19, [sp, #120]
     920:	cmp	w25, #0x0
     924:	str	wzr, [sp, #144]
     928:	ldp	x2, x3, [x0]
     92c:	stp	x2, x3, [x1, #144]
     930:	ldp	x2, x3, [x0, #16]
     934:	stp	x2, x3, [x1, #160]
     938:	ldrb	w0, [x19, #188]
     93c:	strb	w0, [sp, #180]
     940:	ldrb	w0, [x21, #6]
     944:	str	w0, [x19, #860]
     948:	b.le	978 <grub_iso9660_mount+0x230>
     94c:	adrp	x0, 0 <grub_datetime2unixtime>
     950:	mov	x4, x19
     954:	mov	x2, x26
     958:	mov	x1, x20
     95c:	ldr	x3, [x0]
     960:	add	x0, sp, #0x78
     964:	bl	5a8 <grub_iso9660_susp_iterate.part.0>
     968:	cbz	w0, 978 <grub_iso9660_mount+0x230>
     96c:	mov	x0, x21
     970:	bl	0 <grub_free>
     974:	b	8b0 <grub_iso9660_mount+0x168>
     978:	mov	x0, x21
     97c:	bl	0 <grub_free>
     980:	ldrb	w0, [sp, #416]
     984:	add	w23, w23, #0x4
     988:	cmp	w0, #0xff
     98c:	b.ne	784 <grub_iso9660_mount+0x3c>  // b.any
     990:	mov	x0, x19
     994:	ldp	x29, x30, [sp]
     998:	ldp	x19, x20, [sp, #16]
     99c:	ldp	x21, x22, [sp, #32]
     9a0:	ldp	x23, x24, [sp, #48]
     9a4:	ldp	x25, x26, [sp, #64]
     9a8:	add	sp, sp, #0x4f0
     9ac:	ret
	...

00000000000009d8 <grub_iso9660_mtime>:
     9d8:	stp	x29, x30, [sp, #-64]!
     9dc:	mov	x29, sp
     9e0:	stp	x19, x20, [sp, #16]
     9e4:	mov	x20, x1
     9e8:	ldr	x19, [x0]
     9ec:	adrp	x0, 0 <grub_datetime2unixtime>
     9f0:	str	x21, [sp, #32]
     9f4:	ldr	x21, [x0]
     9f8:	ldr	x0, [x21]
     9fc:	bl	0 <grub_dl_ref>
     a00:	mov	x0, x19
     a04:	bl	748 <grub_iso9660_mount>
     a08:	cbnz	x0, a34 <grub_iso9660_mtime+0x5c>
     a0c:	ldr	x0, [x21]
     a10:	bl	0 <grub_dl_unref>
     a14:	adrp	x0, 0 <grub_datetime2unixtime>
     a18:	ldr	x0, [x0]
     a1c:	ldr	w20, [x0]
     a20:	mov	w0, w20
     a24:	ldp	x19, x20, [sp, #16]
     a28:	ldr	x21, [sp, #32]
     a2c:	ldp	x29, x30, [sp], #64
     a30:	ret
     a34:	ldrb	w3, [x0, #832]
     a38:	mov	x19, x0
     a3c:	ldrb	w9, [x0, #833]
     a40:	add	x10, x0, #0x33e
     a44:	ldrb	w2, [x0, #830]
     a48:	ldrb	w4, [x0, #831]
     a4c:	orr	w16, w3, w9
     a50:	ldrb	w14, [x0, #834]
     a54:	ldrb	w15, [x0, #835]
     a58:	ldrb	w12, [x0, #836]
     a5c:	ldrb	w13, [x0, #837]
     a60:	ldrb	w8, [x0, #838]
     a64:	ldrb	w11, [x0, #839]
     a68:	ldrb	w6, [x0, #840]
     a6c:	ldrb	w7, [x0, #841]
     a70:	ldrb	w1, [x0, #842]
     a74:	ldrb	w5, [x0, #843]
     a78:	orr	w0, w2, w4
     a7c:	orr	w0, w0, w16
     a80:	orr	w16, w14, w15
     a84:	orr	w0, w0, w16
     a88:	orr	w16, w12, w13
     a8c:	orr	w0, w0, w16
     a90:	orr	w16, w8, w11
     a94:	orr	w0, w0, w16
     a98:	orr	w16, w6, w7
     a9c:	orr	w0, w0, w16
     aa0:	orr	w16, w1, w5
     aa4:	orr	w0, w0, w16
     aa8:	cbnz	w0, ae4 <grub_iso9660_mtime+0x10c>
     aac:	ldrb	w0, [x10, #14]
     ab0:	cbnz	w0, ae4 <grub_iso9660_mtime+0x10c>
     ab4:	ldrb	w0, [x10, #15]
     ab8:	cbnz	w0, ae4 <grub_iso9660_mtime+0x10c>
     abc:	adrp	x0, 0 <grub_datetime2unixtime>
     ac0:	ldr	x1, [x0]
     ac4:	mov	w0, #0xa                   	// #10
     ac8:	bl	0 <grub_error>
     acc:	mov	w20, w0
     ad0:	ldr	x0, [x21]
     ad4:	bl	0 <grub_dl_unref>
     ad8:	mov	x0, x19
     adc:	bl	0 <grub_free>
     ae0:	b	a20 <grub_iso9660_mtime+0x48>
     ae4:	sub	w4, w4, #0x30
     ae8:	mov	w0, #0x64                  	// #100
     aec:	sub	w2, w2, #0x30
     af0:	sub	w9, w9, #0x30
     af4:	sub	w3, w3, #0x30
     af8:	sub	w15, w15, #0x10
     afc:	mul	w4, w4, w0
     b00:	mov	w0, #0x3e8                 	// #1000
     b04:	sub	w13, w13, #0x10
     b08:	sub	w11, w11, #0x10
     b0c:	madd	w2, w2, w0, w4
     b10:	sub	w7, w7, #0x10
     b14:	sub	w5, w5, #0x10
     b18:	add	x0, sp, #0x38
     b1c:	add	w2, w2, w9
     b20:	mov	w9, #0xa                   	// #10
     b24:	madd	w14, w14, w9, w15
     b28:	madd	w2, w3, w9, w2
     b2c:	strb	w14, [sp, #58]
     b30:	madd	w12, w12, w9, w13
     b34:	strh	w2, [sp, #56]
     b38:	madd	w8, w8, w9, w11
     b3c:	strb	w12, [sp, #59]
     b40:	madd	w6, w6, w9, w7
     b44:	strb	w8, [sp, #60]
     b48:	madd	w1, w1, w9, w5
     b4c:	strb	w6, [sp, #61]
     b50:	strb	w1, [sp, #62]
     b54:	mov	x1, x20
     b58:	bl	0 <grub_datetime2unixtime>
     b5c:	cbnz	w0, b6c <grub_iso9660_mtime+0x194>
     b60:	adrp	x0, 0 <grub_datetime2unixtime>
     b64:	ldr	x1, [x0]
     b68:	b	ac4 <grub_iso9660_mtime+0xec>
     b6c:	ldr	w1, [x20]
     b70:	mov	w2, #0xfffffc7c            	// #-900
     b74:	ldrb	w0, [x10, #16]
     b78:	madd	w0, w0, w2, w1
     b7c:	str	w0, [x20]
     b80:	mov	w20, #0x0                   	// #0
     b84:	b	ad0 <grub_iso9660_mtime+0xf8>
	...

0000000000000ba8 <grub_iso9660_uuid>:
     ba8:	sub	sp, sp, #0x80
     bac:	stp	x29, x30, [sp, #80]
     bb0:	add	x29, sp, #0x50
     bb4:	stp	x19, x20, [sp, #96]
     bb8:	mov	x20, x1
     bbc:	ldr	x19, [x0]
     bc0:	adrp	x0, 0 <grub_datetime2unixtime>
     bc4:	str	x21, [sp, #112]
     bc8:	ldr	x21, [x0]
     bcc:	ldr	x0, [x21]
     bd0:	bl	0 <grub_dl_ref>
     bd4:	mov	x0, x19
     bd8:	bl	748 <grub_iso9660_mount>
     bdc:	mov	x19, x0
     be0:	cbz	x0, c10 <grub_iso9660_uuid+0x68>
     be4:	ldrh	w0, [x0, #830]
     be8:	cbnz	w0, c18 <grub_iso9660_uuid+0x70>
     bec:	ldr	x0, [x19, #832]
     bf0:	cbnz	x0, c18 <grub_iso9660_uuid+0x70>
     bf4:	ldr	x0, [x19, #840]
     bf8:	tst	x0, #0xffffffffffff
     bfc:	b.ne	c18 <grub_iso9660_uuid+0x70>  // b.any
     c00:	adrp	x0, 0 <grub_datetime2unixtime>
     c04:	ldr	x1, [x0]
     c08:	mov	w0, #0xa                   	// #10
     c0c:	bl	0 <grub_error>
     c10:	str	xzr, [x20]
     c14:	b	c8c <grub_iso9660_uuid+0xe4>
     c18:	ldrb	w0, [x19, #845]
     c1c:	ldrb	w7, [x19, #836]
     c20:	ldrb	w6, [x19, #835]
     c24:	ldrb	w5, [x19, #834]
     c28:	ldrb	w4, [x19, #833]
     c2c:	ldrb	w3, [x19, #832]
     c30:	ldrb	w2, [x19, #831]
     c34:	ldrb	w1, [x19, #830]
     c38:	str	w0, [sp, #64]
     c3c:	ldrb	w0, [x19, #844]
     c40:	str	w0, [sp, #56]
     c44:	ldrb	w0, [x19, #843]
     c48:	str	w0, [sp, #48]
     c4c:	ldrb	w0, [x19, #842]
     c50:	str	w0, [sp, #40]
     c54:	ldrb	w0, [x19, #841]
     c58:	str	w0, [sp, #32]
     c5c:	ldrb	w0, [x19, #840]
     c60:	str	w0, [sp, #24]
     c64:	ldrb	w0, [x19, #839]
     c68:	str	w0, [sp, #16]
     c6c:	ldrb	w0, [x19, #838]
     c70:	str	w0, [sp, #8]
     c74:	ldrb	w0, [x19, #837]
     c78:	str	w0, [sp]
     c7c:	adrp	x0, 0 <grub_datetime2unixtime>
     c80:	ldr	x0, [x0]
     c84:	bl	0 <grub_xasprintf>
     c88:	str	x0, [x20]
     c8c:	ldr	x0, [x21]
     c90:	bl	0 <grub_dl_unref>
     c94:	mov	x0, x19
     c98:	bl	0 <grub_free>
     c9c:	adrp	x0, 0 <grub_datetime2unixtime>
     ca0:	ldp	x29, x30, [sp, #80]
     ca4:	ldr	x0, [x0]
     ca8:	ldp	x19, x20, [sp, #96]
     cac:	ldr	w0, [x0]
     cb0:	ldr	x21, [sp, #112]
     cb4:	add	sp, sp, #0x80
     cb8:	ret
     cbc:	nop
	...

0000000000000ce0 <grub_iso9660_label>:
     ce0:	stp	x29, x30, [sp, #-32]!
     ce4:	mov	x29, sp
     ce8:	ldr	x0, [x0]
     cec:	stp	x19, x20, [sp, #16]
     cf0:	mov	x19, x1
     cf4:	bl	748 <grub_iso9660_mount>
     cf8:	cbz	x0, d7c <grub_iso9660_label+0x9c>
     cfc:	mov	x20, x0
     d00:	add	x0, x0, #0x28
     d04:	ldr	w1, [x20, #864]
     d08:	cbz	w1, d40 <grub_iso9660_label+0x60>
     d0c:	mov	w1, #0x10                  	// #16
     d10:	bl	208 <grub_iso9660_convert_string>
     d14:	str	x0, [x19]
     d18:	ldr	x2, [x19]
     d1c:	cbnz	x2, d50 <grub_iso9660_label+0x70>
     d20:	mov	x0, x20
     d24:	bl	0 <grub_free>
     d28:	adrp	x0, 0 <grub_datetime2unixtime>
     d2c:	ldp	x19, x20, [sp, #16]
     d30:	ldr	x0, [x0]
     d34:	ldp	x29, x30, [sp], #32
     d38:	ldr	w0, [x0]
     d3c:	ret
     d40:	mov	x1, #0x20                  	// #32
     d44:	bl	0 <grub_strndup>
     d48:	b	d14 <grub_iso9660_label+0x34>
     d4c:	add	x2, x2, #0x1
     d50:	ldrb	w0, [x2]
     d54:	cbnz	w0, d4c <grub_iso9660_label+0x6c>
     d58:	sub	x2, x2, #0x1
     d5c:	ldr	x0, [x19]
     d60:	cmp	x0, x2
     d64:	b.hi	d20 <grub_iso9660_label+0x40>  // b.pmore
     d68:	ldrb	w0, [x2]
     d6c:	cmp	w0, #0x20
     d70:	b.ne	d20 <grub_iso9660_label+0x40>  // b.any
     d74:	strb	wzr, [x2], #-1
     d78:	b	d5c <grub_iso9660_label+0x7c>
     d7c:	str	xzr, [x19]
     d80:	b	d28 <grub_iso9660_label+0x48>
     d84:	nop
	...

0000000000000d90 <add_part.isra.0>:
     d90:	stp	x29, x30, [sp, #-64]!
     d94:	mov	x29, sp
     d98:	stp	x19, x20, [sp, #16]
     d9c:	mov	x19, x0
     da0:	ldr	x0, [x0]
     da4:	stp	x21, x22, [sp, #32]
     da8:	mov	x22, x1
     dac:	str	x23, [sp, #48]
     db0:	mov	w21, w2
     db4:	cbz	x0, e08 <add_part.isra.0+0x78>
     db8:	bl	0 <grub_strlen>
     dbc:	mov	w20, w0
     dc0:	ldr	x0, [x19]
     dc4:	add	w23, w20, w21
     dc8:	add	w1, w23, #0x1
     dcc:	sxtw	x1, w1
     dd0:	bl	0 <grub_realloc>
     dd4:	str	x0, [x19]
     dd8:	cbz	x0, df4 <add_part.isra.0+0x64>
     ddc:	sxtw	x2, w21
     de0:	mov	x1, x22
     de4:	add	x0, x0, w20, sxtw
     de8:	bl	0 <grub_memmove>
     dec:	ldr	x0, [x19]
     df0:	strb	wzr, [x0, w23, sxtw]
     df4:	ldp	x19, x20, [sp, #16]
     df8:	ldp	x21, x22, [sp, #32]
     dfc:	ldr	x23, [sp, #48]
     e00:	ldp	x29, x30, [sp], #64
     e04:	ret
     e08:	mov	w20, #0x0                   	// #0
     e0c:	b	dc0 <add_part.isra.0+0x30>

0000000000000e10 <susp_iterate_dir>:
     e10:	stp	x29, x30, [sp, #-80]!
     e14:	mov	x2, #0x2                   	// #2
     e18:	mov	x29, sp
     e1c:	stp	x19, x20, [sp, #16]
     e20:	mov	x20, x0
     e24:	mov	x19, x1
     e28:	mov	x1, x0
     e2c:	adrp	x0, 0 <grub_datetime2unixtime>
     e30:	stp	x21, x22, [sp, #32]
     e34:	ldr	x0, [x0]
     e38:	stp	x23, x24, [sp, #48]
     e3c:	stp	x25, x26, [sp, #64]
     e40:	bl	0 <grub_strncmp>
     e44:	cbnz	w0, f20 <susp_iterate_dir+0x110>
     e48:	ldrb	w0, [x20, #4]
     e4c:	tbz	w0, #1, e78 <susp_iterate_dir+0x68>
     e50:	adrp	x0, 0 <grub_datetime2unixtime>
     e54:	ldr	x0, [x0]
     e58:	str	x0, [x19]
     e5c:	mov	w0, #0x0                   	// #0
     e60:	ldp	x19, x20, [sp, #16]
     e64:	ldp	x21, x22, [sp, #32]
     e68:	ldp	x23, x24, [sp, #48]
     e6c:	ldp	x25, x26, [sp, #64]
     e70:	ldp	x29, x30, [sp], #80
     e74:	ret
     e78:	tbz	w0, #2, e88 <susp_iterate_dir+0x78>
     e7c:	adrp	x0, 0 <grub_datetime2unixtime>
     e80:	ldr	x0, [x0]
     e84:	b	e58 <susp_iterate_dir+0x48>
     e88:	ldrb	w21, [x20, #2]
     e8c:	cmp	w21, #0x4
     e90:	b.ls	e5c <susp_iterate_dir+0x4c>  // b.plast
     e94:	ldr	w0, [x19, #8]
     e98:	sub	w21, w21, #0x5
     e9c:	ldr	x23, [x19]
     ea0:	sxtw	x21, w21
     ea4:	add	x24, x21, #0x1
     ea8:	cbz	w0, ee4 <susp_iterate_dir+0xd4>
     eac:	mov	x0, x23
     eb0:	bl	0 <grub_strlen>
     eb4:	add	x1, x0, x24
     eb8:	mov	x22, x0
     ebc:	ldr	x0, [x19]
     ec0:	bl	0 <grub_realloc>
     ec4:	str	x0, [x19]
     ec8:	ldr	x0, [x19]
     ecc:	cbnz	x0, ef8 <susp_iterate_dir+0xe8>
     ed0:	str	x23, [x19]
     ed4:	adrp	x0, 0 <grub_datetime2unixtime>
     ed8:	ldr	x0, [x0]
     edc:	ldr	w0, [x0]
     ee0:	b	e60 <susp_iterate_dir+0x50>
     ee4:	mov	x0, x24
     ee8:	mov	x22, #0x0                   	// #0
     eec:	bl	0 <grub_zalloc>
     ef0:	str	x0, [x19]
     ef4:	b	ec8 <susp_iterate_dir+0xb8>
     ef8:	mov	w1, #0x1                   	// #1
     efc:	str	w1, [x19, #8]
     f00:	add	x0, x0, x22
     f04:	mov	x2, x21
     f08:	add	x1, x20, #0x5
     f0c:	bl	0 <grub_memmove>
     f10:	ldr	x0, [x19]
     f14:	add	x22, x0, x22
     f18:	strb	wzr, [x22, x21]
     f1c:	b	e5c <susp_iterate_dir+0x4c>
     f20:	adrp	x0, 0 <grub_datetime2unixtime>
     f24:	mov	x2, #0x2                   	// #2
     f28:	ldr	x1, [x0]
     f2c:	mov	x0, x20
     f30:	bl	0 <grub_strncmp>
     f34:	cbnz	w0, f84 <susp_iterate_dir+0x174>
     f38:	ldrb	w0, [x20, #5]
     f3c:	ldrb	w1, [x20, #4]
     f40:	add	w0, w1, w0, lsl #8
     f44:	and	w0, w0, #0xf000
     f48:	cmp	w0, #0x8, lsl #12
     f4c:	b.eq	f6c <susp_iterate_dir+0x15c>  // b.none
     f50:	cmp	w0, #0xa, lsl #12
     f54:	b.eq	f74 <susp_iterate_dir+0x164>  // b.none
     f58:	cmp	w0, #0x4, lsl #12
     f5c:	b.ne	f7c <susp_iterate_dir+0x16c>  // b.any
     f60:	mov	w0, #0x2                   	// #2
     f64:	str	w0, [x19, #12]
     f68:	b	e5c <susp_iterate_dir+0x4c>
     f6c:	mov	w0, #0x1                   	// #1
     f70:	b	f64 <susp_iterate_dir+0x154>
     f74:	mov	w0, #0x3                   	// #3
     f78:	b	f64 <susp_iterate_dir+0x154>
     f7c:	str	wzr, [x19, #12]
     f80:	b	e5c <susp_iterate_dir+0x4c>
     f84:	adrp	x0, 0 <grub_datetime2unixtime>
     f88:	mov	x1, x20
     f8c:	mov	x2, #0x2                   	// #2
     f90:	ldr	x0, [x0]
     f94:	bl	0 <grub_strncmp>
     f98:	cbnz	w0, e5c <susp_iterate_dir+0x4c>
     f9c:	add	x25, x19, #0x10
     fa0:	mov	w22, #0x1                   	// #1
     fa4:	adrp	x24, 0 <grub_datetime2unixtime>
     fa8:	adrp	x23, 0 <grub_datetime2unixtime>
     fac:	b	100c <susp_iterate_dir+0x1fc>
     fb0:	ldr	x0, [x19, #16]
     fb4:	cbz	x0, fd0 <susp_iterate_dir+0x1c0>
     fb8:	ldr	w0, [x19, #24]
     fbc:	cbnz	w0, fd0 <susp_iterate_dir+0x1c0>
     fc0:	ldr	x1, [x23]
     fc4:	mov	x0, x25
     fc8:	mov	w2, #0x1                   	// #1
     fcc:	bl	d90 <add_part.isra.0>
     fd0:	add	x0, x20, w26, uxtw
     fd4:	add	w1, w22, #0x2
     fd8:	add	x21, x20, x21
     fdc:	add	x1, x1, #0x4
     fe0:	add	x1, x20, x1
     fe4:	ldrb	w2, [x0, #4]
     fe8:	mov	x0, x25
     fec:	bl	d90 <add_part.isra.0>
     ff0:	ldrb	w0, [x21, #4]
     ff4:	and	w0, w0, #0x1
     ff8:	str	w0, [x19, #24]
     ffc:	add	x1, x20, w26, uxtw
    1000:	ldrb	w0, [x1, #4]
    1004:	add	w0, w0, #0x2
    1008:	add	w22, w22, w0
    100c:	ldrb	w0, [x20, #2]
    1010:	mov	w21, w22
    1014:	add	x1, x21, #0x4
    1018:	cmp	x1, x0
    101c:	b.cs	ed4 <susp_iterate_dir+0xc4>  // b.hs, b.nlast
    1020:	add	x0, x20, x21
    1024:	add	w26, w22, #0x1
    1028:	ldrb	w1, [x0, #4]
    102c:	and	w1, w1, #0x1e
    1030:	cmp	w1, #0x8
    1034:	b.hi	ffc <susp_iterate_dir+0x1ec>  // b.pmore
    1038:	ldr	x0, [x24]
    103c:	ldrb	w0, [x0, w1, uxtw]
    1040:	adr	x1, 104c <susp_iterate_dir+0x23c>
    1044:	add	x0, x1, w0, sxtb #2
    1048:	br	x0
    104c:	adrp	x0, 0 <grub_datetime2unixtime>
    1050:	mov	w2, #0x2                   	// #2
    1054:	ldr	x1, [x0]
    1058:	mov	x0, x25
    105c:	bl	d90 <add_part.isra.0>
    1060:	b	ffc <susp_iterate_dir+0x1ec>
    1064:	adrp	x0, 0 <grub_datetime2unixtime>
    1068:	mov	w2, #0x3                   	// #3
    106c:	ldr	x1, [x0]
    1070:	b	1058 <susp_iterate_dir+0x248>
    1074:	ldr	x1, [x23]
    1078:	mov	w2, #0x1                   	// #1
    107c:	b	1058 <susp_iterate_dir+0x248>
	...

00000000000010d0 <grub_iso9660_open>:
    10d0:	stp	x29, x30, [sp, #-352]!
    10d4:	mov	x29, sp
    10d8:	stp	x19, x20, [sp, #16]
    10dc:	mov	x20, x0
    10e0:	adrp	x0, 0 <grub_datetime2unixtime>
    10e4:	stp	x21, x22, [sp, #32]
    10e8:	mov	x21, x1
    10ec:	ldr	x22, [x0]
    10f0:	ldr	x0, [x22]
    10f4:	bl	0 <grub_dl_ref>
    10f8:	ldr	x0, [x20, #8]
    10fc:	ldr	x0, [x0]
    1100:	bl	748 <grub_iso9660_mount>
    1104:	mov	x19, x0
    1108:	cbz	x0, 11b0 <grub_iso9660_open+0xe0>
    110c:	add	x0, x0, #0x9c
    1110:	add	x1, sp, #0x4
    1114:	mov	x5, #0x1                   	// #1
    1118:	stp	x19, x5, [sp, #56]
    111c:	ldp	x2, x3, [x0]
    1120:	stp	x2, x3, [x1, #80]
    1124:	ldp	x2, x3, [x0, #16]
    1128:	stp	x2, x3, [x1, #96]
    112c:	ldrb	w0, [x19, #188]
    1130:	strb	w0, [sp, #116]
    1134:	add	x2, sp, #0x30
    1138:	adrp	x0, 0 <grub_datetime2unixtime>
    113c:	add	x1, sp, #0x38
    1140:	str	xzr, [sp, #72]
    1144:	ldr	x4, [x0]
    1148:	adrp	x0, 0 <grub_datetime2unixtime>
    114c:	str	wzr, [sp, #80]
    1150:	ldr	x3, [x0]
    1154:	mov	x0, x21
    1158:	bl	0 <grub_fshelp_find_file>
    115c:	cbnz	w0, 11b0 <grub_iso9660_open+0xe0>
    1160:	ldr	x2, [sp, #48]
    1164:	mov	x1, #0x0                   	// #0
    1168:	mov	x3, #0x0                   	// #0
    116c:	ldr	x4, [x2, #8]
    1170:	str	x2, [x19, #872]
    1174:	add	x2, x2, #0x26
    1178:	str	x19, [x20, #80]
    117c:	cmp	x1, x4
    1180:	b.ne	119c <grub_iso9660_open+0xcc>  // b.any
    1184:	str	xzr, [x20, #24]
    1188:	str	x3, [x20, #64]
    118c:	ldp	x19, x20, [sp, #16]
    1190:	ldp	x21, x22, [sp, #32]
    1194:	ldp	x29, x30, [sp], #352
    1198:	ret
    119c:	add	x5, x1, x1, lsl #5
    11a0:	add	x1, x1, #0x1
    11a4:	ldr	w5, [x2, x5]
    11a8:	add	x3, x3, x5
    11ac:	b	117c <grub_iso9660_open+0xac>
    11b0:	ldr	x0, [x22]
    11b4:	bl	0 <grub_dl_unref>
    11b8:	mov	x0, x19
    11bc:	bl	0 <grub_free>
    11c0:	adrp	x0, 0 <grub_datetime2unixtime>
    11c4:	ldr	x0, [x0]
    11c8:	ldr	w0, [x0]
    11cc:	b	118c <grub_iso9660_open+0xbc>
	...

00000000000011f0 <grub_iso9660_iterate_dir>:
    11f0:	stp	x29, x30, [sp, #-432]!
    11f4:	mov	x29, sp
    11f8:	stp	x19, x20, [sp, #16]
    11fc:	stp	x21, x22, [sp, #32]
    1200:	mov	x21, x0
    1204:	stp	x23, x24, [sp, #48]
    1208:	mov	x24, x1
    120c:	mov	x23, #0x0                   	// #0
    1210:	stp	x25, x26, [sp, #64]
    1214:	mov	x25, x2
    1218:	add	x2, x0, #0x26
    121c:	ldr	x1, [x0, #8]
    1220:	mov	x0, #0x0                   	// #0
    1224:	str	x27, [sp, #80]
    1228:	cmp	x0, x1
    122c:	b.ne	1284 <grub_iso9660_iterate_dir+0x94>  // b.any
    1230:	add	x22, sp, #0xb0
    1234:	mov	x20, #0x0                   	// #0
    1238:	mov	x26, #0x42                  	// #66
    123c:	cmp	x20, x23
    1240:	b.cs	1264 <grub_iso9660_iterate_dir+0x74>  // b.hs, b.nlast
    1244:	add	x3, sp, #0x88
    1248:	mov	x1, x20
    124c:	mov	x0, x21
    1250:	mov	x2, #0x21                  	// #33
    1254:	str	xzr, [sp, #120]
    1258:	str	wzr, [sp, #128]
    125c:	bl	44c <read_node>
    1260:	cbz	w0, 1298 <grub_iso9660_iterate_dir+0xa8>
    1264:	mov	w0, #0x0                   	// #0
    1268:	ldp	x19, x20, [sp, #16]
    126c:	ldp	x21, x22, [sp, #32]
    1270:	ldp	x23, x24, [sp, #48]
    1274:	ldp	x25, x26, [sp, #64]
    1278:	ldr	x27, [sp, #80]
    127c:	ldp	x29, x30, [sp], #432
    1280:	ret
    1284:	add	x3, x0, x0, lsl #5
    1288:	add	x0, x0, #0x1
    128c:	ldr	w3, [x2, x3]
    1290:	add	x23, x23, x3
    1294:	b	1228 <grub_iso9660_iterate_dir+0x38>
    1298:	ldrb	w2, [sp, #136]
    129c:	cbnz	w2, 12b4 <grub_iso9660_iterate_dir+0xc4>
    12a0:	and	x20, x20, #0xfffffffffffff800
    12a4:	add	x20, x20, #0x800
    12a8:	ldrb	w0, [sp, #136]
    12ac:	add	x20, x20, x0
    12b0:	b	123c <grub_iso9660_iterate_dir+0x4c>
    12b4:	ldr	x3, [x21]
    12b8:	stp	xzr, xzr, [sp, #104]
    12bc:	ldrb	w0, [sp, #168]
    12c0:	add	w19, w20, #0x21
    12c4:	ldr	w1, [x3, #860]
    12c8:	ldr	w3, [x3, #856]
    12cc:	cbnz	w3, 1398 <grub_iso9660_iterate_dir+0x1a8>
    12d0:	ldrb	w2, [sp, #168]
    12d4:	mov	x3, x22
    12d8:	sxtw	x1, w19
    12dc:	mov	x0, x21
    12e0:	bl	44c <read_node>
    12e4:	cbnz	w0, 1264 <grub_iso9660_iterate_dir+0x74>
    12e8:	mov	x0, #0x128                 	// #296
    12ec:	bl	0 <grub_malloc>
    12f0:	mov	x19, x0
    12f4:	cbz	x0, 1264 <grub_iso9660_iterate_dir+0x74>
    12f8:	mov	x0, #0x8                   	// #8
    12fc:	mov	x1, #0x1                   	// #1
    1300:	stp	x1, x0, [x19, #8]
    1304:	ldr	x0, [x21]
    1308:	str	x0, [x19]
    130c:	ldr	w0, [sp, #116]
    1310:	str	wzr, [x19, #24]
    1314:	cbnz	w0, 132c <grub_iso9660_iterate_dir+0x13c>
    1318:	ldrb	w0, [sp, #161]
    131c:	and	w0, w0, #0x3
    1320:	cmp	w0, #0x2
    1324:	csel	w0, w0, w1, eq  // eq = none
    1328:	str	w0, [sp, #116]
    132c:	ldr	x0, [sp, #104]
    1330:	cbnz	x0, 1354 <grub_iso9660_iterate_dir+0x164>
    1334:	ldrb	w0, [sp, #168]
    1338:	cmp	w0, #0x1
    133c:	b.ne	1354 <grub_iso9660_iterate_dir+0x164>  // b.any
    1340:	ldrb	w0, [sp, #176]
    1344:	cbnz	w0, 13d8 <grub_iso9660_iterate_dir+0x1e8>
    1348:	adrp	x0, 0 <grub_datetime2unixtime>
    134c:	ldr	x0, [x0]
    1350:	str	x0, [sp, #104]
    1354:	ldr	x0, [x21]
    1358:	ldr	w1, [x0, #864]
    135c:	ldr	x0, [sp, #104]
    1360:	cbz	w1, 13ec <grub_iso9660_iterate_dir+0x1fc>
    1364:	cbnz	x0, 1440 <grub_iso9660_iterate_dir+0x250>
    1368:	ldrb	w1, [sp, #168]
    136c:	mov	x0, x22
    1370:	lsr	w1, w1, #1
    1374:	bl	208 <grub_iso9660_convert_string>
    1378:	mov	w1, #0x3b                  	// #59
    137c:	str	x0, [sp, #104]
    1380:	bl	0 <grub_strrchr>
    1384:	cbz	x0, 138c <grub_iso9660_iterate_dir+0x19c>
    1388:	strb	wzr, [x0]
    138c:	mov	w0, #0x1                   	// #1
    1390:	str	w0, [sp, #112]
    1394:	b	1440 <grub_iso9660_iterate_dir+0x250>
    1398:	and	w0, w0, #0xfffffffe
    139c:	add	w0, w0, #0x22
    13a0:	sub	w2, w2, w0
    13a4:	cmp	w2, #0x0
    13a8:	b.le	12d0 <grub_iso9660_iterate_dir+0xe0>
    13ac:	add	w0, w1, w0
    13b0:	add	x4, sp, #0x68
    13b4:	add	w1, w0, w20
    13b8:	adrp	x0, 0 <grub_datetime2unixtime>
    13bc:	sxtw	x2, w2
    13c0:	ldr	x3, [x0]
    13c4:	sxtw	x1, w1
    13c8:	mov	x0, x21
    13cc:	bl	5a8 <grub_iso9660_susp_iterate.part.0>
    13d0:	cbz	w0, 12d0 <grub_iso9660_iterate_dir+0xe0>
    13d4:	b	1264 <grub_iso9660_iterate_dir+0x74>
    13d8:	cmp	w0, #0x1
    13dc:	b.ne	1354 <grub_iso9660_iterate_dir+0x164>  // b.any
    13e0:	adrp	x0, 0 <grub_datetime2unixtime>
    13e4:	ldr	x0, [x0]
    13e8:	b	1350 <grub_iso9660_iterate_dir+0x160>
    13ec:	cbnz	x0, 1440 <grub_iso9660_iterate_dir+0x250>
    13f0:	ldrb	w0, [sp, #168]
    13f4:	mov	w1, #0x3b                  	// #59
    13f8:	strb	wzr, [x22, x0]
    13fc:	mov	x0, x22
    1400:	bl	0 <grub_strrchr>
    1404:	cbz	x0, 140c <grub_iso9660_iterate_dir+0x21c>
    1408:	strb	wzr, [x0]
    140c:	ldr	w0, [sp, #116]
    1410:	mov	x1, x22
    1414:	orr	w0, w0, #0x100
    1418:	str	w0, [sp, #116]
    141c:	ldrb	w0, [x1]
    1420:	cbnz	w0, 1514 <grub_iso9660_iterate_dir+0x324>
    1424:	cmp	x1, x22
    1428:	b.eq	143c <grub_iso9660_iterate_dir+0x24c>  // b.none
    142c:	ldurb	w0, [x1, #-1]
    1430:	cmp	w0, #0x2e
    1434:	b.ne	143c <grub_iso9660_iterate_dir+0x24c>  // b.any
    1438:	sturb	wzr, [x1, #-1]
    143c:	str	x22, [sp, #104]
    1440:	add	x0, x19, #0x1c
    1444:	ldrb	w1, [sp, #168]
    1448:	ldp	x2, x3, [sp, #136]
    144c:	stp	x2, x3, [x0]
    1450:	ldp	x2, x3, [sp, #152]
    1454:	stp	x2, x3, [x0, #16]
    1458:	strb	w1, [x19, #60]
    145c:	ldrsb	w0, [sp, #161]
    1460:	tbnz	w0, #31, 152c <grub_iso9660_iterate_dir+0x33c>
    1464:	ldr	x0, [sp, #120]
    1468:	cbz	x0, 14e4 <grub_iso9660_iterate_dir+0x2f4>
    146c:	ldp	x2, x1, [x19, #8]
    1470:	sub	x1, x1, x2
    1474:	add	x27, x1, x1, lsl #5
    1478:	bl	0 <grub_strlen>
    147c:	add	x0, x0, #0x1
    1480:	cmp	x27, x0
    1484:	b.cs	15c8 <grub_iso9660_iterate_dir+0x3d8>  // b.hs, b.nlast
    1488:	ldr	x0, [sp, #120]
    148c:	ldr	x27, [x19, #16]
    1490:	bl	0 <grub_strlen>
    1494:	add	x2, x27, #0x1
    1498:	add	x2, x2, x2, lsl #5
    149c:	add	x1, x2, x0
    14a0:	mov	x0, x19
    14a4:	bl	0 <grub_realloc>
    14a8:	mov	x27, x0
    14ac:	cbz	x0, 154c <grub_iso9660_iterate_dir+0x35c>
    14b0:	mov	w0, #0x1                   	// #1
    14b4:	str	w0, [x27, #24]
    14b8:	ldr	x0, [x27, #8]
    14bc:	mov	x19, x27
    14c0:	ldr	x1, [sp, #120]
    14c4:	add	x0, x0, x0, lsl #5
    14c8:	add	x0, x27, x0
    14cc:	add	x0, x0, #0x1c
    14d0:	bl	0 <grub_strcpy>
    14d4:	ldr	x0, [sp, #120]
    14d8:	bl	0 <grub_free>
    14dc:	str	xzr, [sp, #120]
    14e0:	str	wzr, [sp, #128]
    14e4:	ldr	w1, [sp, #116]
    14e8:	mov	x3, x25
    14ec:	ldr	x0, [sp, #104]
    14f0:	mov	x2, x19
    14f4:	blr	x24
    14f8:	ldr	w1, [sp, #112]
    14fc:	cbz	w0, 15d0 <grub_iso9660_iterate_dir+0x3e0>
    1500:	cbz	w1, 150c <grub_iso9660_iterate_dir+0x31c>
    1504:	ldr	x0, [sp, #104]
    1508:	bl	0 <grub_free>
    150c:	mov	w0, #0x1                   	// #1
    1510:	b	1268 <grub_iso9660_iterate_dir+0x78>
    1514:	sub	w2, w0, #0x41
    1518:	cmp	w2, #0x19
    151c:	b.hi	1524 <grub_iso9660_iterate_dir+0x334>  // b.pmore
    1520:	add	w0, w0, #0x20
    1524:	strb	w0, [x1], #1
    1528:	b	141c <grub_iso9660_iterate_dir+0x22c>
    152c:	ldrb	w0, [sp, #136]
    1530:	add	x3, sp, #0x88
    1534:	mov	x2, #0x21                  	// #33
    1538:	add	x20, x20, x0
    153c:	mov	x0, x21
    1540:	mov	x1, x20
    1544:	bl	44c <read_node>
    1548:	cbz	w0, 1568 <grub_iso9660_iterate_dir+0x378>
    154c:	ldr	w0, [sp, #112]
    1550:	cbz	w0, 155c <grub_iso9660_iterate_dir+0x36c>
    1554:	ldr	x0, [sp, #104]
    1558:	bl	0 <grub_free>
    155c:	mov	x0, x19
    1560:	bl	0 <grub_free>
    1564:	b	1264 <grub_iso9660_iterate_dir+0x74>
    1568:	ldp	x0, x1, [x19, #8]
    156c:	cmp	x0, x1
    1570:	b.cc	1594 <grub_iso9660_iterate_dir+0x3a4>  // b.lo, b.ul, b.last
    1574:	lsl	x0, x1, #1
    1578:	mul	x1, x1, x26
    157c:	str	x0, [x19, #16]
    1580:	mov	x0, x19
    1584:	add	x1, x1, #0x20
    1588:	bl	0 <grub_realloc>
    158c:	cbz	x0, 154c <grub_iso9660_iterate_dir+0x35c>
    1590:	mov	x19, x0
    1594:	ldr	x0, [x19, #8]
    1598:	ldp	x2, x3, [sp, #136]
    159c:	add	x1, x0, #0x1
    15a0:	add	x0, x0, x0, lsl #5
    15a4:	str	x1, [x19, #8]
    15a8:	add	x0, x19, x0
    15ac:	ldrb	w1, [sp, #168]
    15b0:	add	x0, x0, #0x1c
    15b4:	stp	x2, x3, [x0]
    15b8:	ldp	x2, x3, [sp, #152]
    15bc:	stp	x2, x3, [x0, #16]
    15c0:	strb	w1, [x0, #32]
    15c4:	b	145c <grub_iso9660_iterate_dir+0x26c>
    15c8:	mov	x27, x19
    15cc:	b	14b0 <grub_iso9660_iterate_dir+0x2c0>
    15d0:	cbz	w1, 12a8 <grub_iso9660_iterate_dir+0xb8>
    15d4:	ldr	x0, [sp, #104]
    15d8:	bl	0 <grub_free>
    15dc:	b	12a8 <grub_iso9660_iterate_dir+0xb8>
	...

00000000000015f8 <grub_iso9660_dir>:
    15f8:	stp	x29, x30, [sp, #-368]!
    15fc:	mov	x29, sp
    1600:	stp	x19, x20, [sp, #16]
    1604:	mov	x19, x0
    1608:	adrp	x0, 0 <grub_datetime2unixtime>
    160c:	stp	x21, x22, [sp, #32]
    1610:	mov	x20, x1
    1614:	ldr	x21, [x0]
    1618:	stp	x2, x3, [sp, #56]
    161c:	ldr	x0, [x21]
    1620:	bl	0 <grub_dl_ref>
    1624:	ldr	x0, [x19]
    1628:	bl	748 <grub_iso9660_mount>
    162c:	mov	x19, x0
    1630:	cbz	x0, 16b4 <grub_iso9660_dir+0xbc>
    1634:	mov	x0, #0x1                   	// #1
    1638:	stp	x19, x0, [sp, #72]
    163c:	add	x0, x19, #0x9c
    1640:	add	x1, sp, #0x4
    1644:	add	x22, sp, #0x48
    1648:	mov	w5, #0x2                   	// #2
    164c:	str	xzr, [sp, #88]
    1650:	ldp	x2, x3, [x0]
    1654:	stp	x2, x3, [x1, #96]
    1658:	ldp	x2, x3, [x0, #16]
    165c:	stp	x2, x3, [x1, #112]
    1660:	ldrb	w0, [x19, #188]
    1664:	strb	w0, [sp, #132]
    1668:	add	x2, sp, #0x30
    166c:	adrp	x0, 0 <grub_datetime2unixtime>
    1670:	mov	x1, x22
    1674:	str	wzr, [sp, #96]
    1678:	ldr	x4, [x0]
    167c:	adrp	x0, 0 <grub_datetime2unixtime>
    1680:	ldr	x3, [x0]
    1684:	mov	x0, x20
    1688:	bl	0 <grub_fshelp_find_file>
    168c:	cbnz	w0, 16b4 <grub_iso9660_dir+0xbc>
    1690:	adrp	x0, 0 <grub_datetime2unixtime>
    1694:	add	x2, sp, #0x38
    1698:	ldr	x1, [x0]
    169c:	ldr	x0, [sp, #48]
    16a0:	bl	11f0 <grub_iso9660_iterate_dir>
    16a4:	ldr	x0, [sp, #48]
    16a8:	cmp	x0, x22
    16ac:	b.eq	16b4 <grub_iso9660_dir+0xbc>  // b.none
    16b0:	bl	0 <grub_free>
    16b4:	mov	x0, x19
    16b8:	bl	0 <grub_free>
    16bc:	ldr	x0, [x21]
    16c0:	bl	0 <grub_dl_unref>
    16c4:	adrp	x0, 0 <grub_datetime2unixtime>
    16c8:	ldp	x19, x20, [sp, #16]
    16cc:	ldr	x0, [x0]
    16d0:	ldp	x21, x22, [sp, #32]
    16d4:	ldr	w0, [x0]
    16d8:	ldp	x29, x30, [sp], #368
    16dc:	ret
	...

0000000000001708 <grub_mod_init>:
    1708:	stp	x29, x30, [sp, #-32]!
    170c:	mov	x29, sp
    1710:	str	x19, [sp, #16]
    1714:	mov	x19, x0
    1718:	adrp	x0, 0 <grub_datetime2unixtime>
    171c:	ldr	x1, [x0]
    1720:	adrp	x0, 0 <grub_datetime2unixtime>
    1724:	ldr	x0, [x0]
    1728:	bl	0 <grub_list_push>
    172c:	adrp	x0, 0 <grub_datetime2unixtime>
    1730:	ldr	x0, [x0]
    1734:	str	x19, [x0]
    1738:	ldr	x19, [sp, #16]
    173c:	ldp	x29, x30, [sp], #32
    1740:	ret
    1744:	nop
	...

0000000000001760 <grub_mod_fini>:
    1760:	adrp	x0, 0 <grub_datetime2unixtime>
    1764:	ldr	x0, [x0]
    1768:	b	0 <grub_list_remove>
    176c:	nop
	...
