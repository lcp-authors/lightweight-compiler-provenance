In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libgcov.a_gcc_-O0:

_gcov_merge_add.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <gcov_get_counter>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	bl	0 <__gcov_read_counter>
   c:	ldp	x29, x30, [sp], #16
  10:	ret

0000000000000014 <__gcov_merge_add>:
  14:	stp	x29, x30, [sp, #-32]!
  18:	mov	x29, sp
  1c:	str	x0, [sp, #24]
  20:	str	w1, [sp, #20]
  24:	b	5c <__gcov_merge_add+0x48>
  28:	bl	0 <gcov_get_counter>
  2c:	mov	x1, x0
  30:	ldr	x0, [sp, #24]
  34:	ldr	x0, [x0]
  38:	add	x1, x1, x0
  3c:	ldr	x0, [sp, #24]
  40:	str	x1, [x0]
  44:	ldr	x0, [sp, #24]
  48:	add	x0, x0, #0x8
  4c:	str	x0, [sp, #24]
  50:	ldr	w0, [sp, #20]
  54:	sub	w0, w0, #0x1
  58:	str	w0, [sp, #20]
  5c:	ldr	w0, [sp, #20]
  60:	cmp	w0, #0x0
  64:	b.ne	28 <__gcov_merge_add+0x14>  // b.any
  68:	nop
  6c:	nop
  70:	ldp	x29, x30, [sp], #32
  74:	ret

_gcov_merge_single.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <gcov_get_counter>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	bl	0 <__gcov_read_counter>
   c:	ldp	x29, x30, [sp], #16
  10:	ret

0000000000000014 <gcov_get_counter_target>:
  14:	stp	x29, x30, [sp, #-16]!
  18:	mov	x29, sp
  1c:	bl	0 <__gcov_read_counter>
  20:	ldp	x29, x30, [sp], #16
  24:	ret

0000000000000028 <__gcov_merge_single>:
  28:	stp	x29, x30, [sp, #-64]!
  2c:	mov	x29, sp
  30:	str	x0, [sp, #24]
  34:	str	w1, [sp, #20]
  38:	ldr	w2, [sp, #20]
  3c:	mov	w0, #0xaaab                	// #43691
  40:	movk	w0, #0xaaaa, lsl #16
  44:	umull	x0, w2, w0
  48:	lsr	x0, x0, #32
  4c:	lsr	w1, w0, #1
  50:	mov	w0, w1
  54:	lsl	w0, w0, #1
  58:	add	w0, w0, w1
  5c:	sub	w1, w2, w0
  60:	cmp	w1, #0x0
  64:	b.eq	6c <__gcov_merge_single+0x44>  // b.none
  68:	bl	0 <abort>
  6c:	ldr	w1, [sp, #20]
  70:	mov	w0, #0xaaab                	// #43691
  74:	movk	w0, #0xaaaa, lsl #16
  78:	umull	x0, w1, w0
  7c:	lsr	x0, x0, #32
  80:	lsr	w0, w0, #1
  84:	str	w0, [sp, #56]
  88:	str	wzr, [sp, #60]
  8c:	b	180 <__gcov_merge_single+0x158>
  90:	bl	14 <gcov_get_counter_target>
  94:	str	x0, [sp, #48]
  98:	bl	0 <gcov_get_counter>
  9c:	str	x0, [sp, #40]
  a0:	bl	0 <gcov_get_counter>
  a4:	str	x0, [sp, #32]
  a8:	ldr	x0, [sp, #24]
  ac:	ldr	x0, [x0]
  b0:	ldr	x1, [sp, #48]
  b4:	cmp	x1, x0
  b8:	b.ne	e0 <__gcov_merge_single+0xb8>  // b.any
  bc:	ldr	x0, [sp, #24]
  c0:	add	x0, x0, #0x8
  c4:	ldr	x2, [x0]
  c8:	ldr	x0, [sp, #24]
  cc:	add	x0, x0, #0x8
  d0:	ldr	x1, [sp, #40]
  d4:	add	x1, x2, x1
  d8:	str	x1, [x0]
  dc:	b	148 <__gcov_merge_single+0x120>
  e0:	ldr	x0, [sp, #24]
  e4:	add	x0, x0, #0x8
  e8:	ldr	x0, [x0]
  ec:	ldr	x1, [sp, #40]
  f0:	cmp	x1, x0
  f4:	b.le	128 <__gcov_merge_single+0x100>
  f8:	ldr	x0, [sp, #24]
  fc:	ldr	x1, [sp, #48]
 100:	str	x1, [x0]
 104:	ldr	x0, [sp, #24]
 108:	add	x0, x0, #0x8
 10c:	ldr	x1, [x0]
 110:	ldr	x0, [sp, #24]
 114:	add	x0, x0, #0x8
 118:	ldr	x2, [sp, #40]
 11c:	sub	x1, x2, x1
 120:	str	x1, [x0]
 124:	b	148 <__gcov_merge_single+0x120>
 128:	ldr	x0, [sp, #24]
 12c:	add	x0, x0, #0x8
 130:	ldr	x2, [x0]
 134:	ldr	x0, [sp, #24]
 138:	add	x0, x0, #0x8
 13c:	ldr	x1, [sp, #40]
 140:	sub	x1, x2, x1
 144:	str	x1, [x0]
 148:	ldr	x0, [sp, #24]
 14c:	add	x0, x0, #0x10
 150:	ldr	x2, [x0]
 154:	ldr	x0, [sp, #24]
 158:	add	x0, x0, #0x10
 15c:	ldr	x1, [sp, #32]
 160:	add	x1, x2, x1
 164:	str	x1, [x0]
 168:	ldr	w0, [sp, #60]
 16c:	add	w0, w0, #0x1
 170:	str	w0, [sp, #60]
 174:	ldr	x0, [sp, #24]
 178:	add	x0, x0, #0x18
 17c:	str	x0, [sp, #24]
 180:	ldr	w1, [sp, #60]
 184:	ldr	w0, [sp, #56]
 188:	cmp	w1, w0
 18c:	b.cc	90 <__gcov_merge_single+0x68>  // b.lo, b.ul, b.last
 190:	nop
 194:	nop
 198:	ldp	x29, x30, [sp], #64
 19c:	ret

_gcov_merge_ior.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <gcov_get_counter_target>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	bl	0 <__gcov_read_counter>
   c:	ldp	x29, x30, [sp], #16
  10:	ret

0000000000000014 <__gcov_merge_ior>:
  14:	stp	x29, x30, [sp, #-32]!
  18:	mov	x29, sp
  1c:	str	x0, [sp, #24]
  20:	str	w1, [sp, #20]
  24:	b	5c <__gcov_merge_ior+0x48>
  28:	bl	0 <gcov_get_counter_target>
  2c:	mov	x1, x0
  30:	ldr	x0, [sp, #24]
  34:	ldr	x0, [x0]
  38:	orr	x1, x1, x0
  3c:	ldr	x0, [sp, #24]
  40:	str	x1, [x0]
  44:	ldr	x0, [sp, #24]
  48:	add	x0, x0, #0x8
  4c:	str	x0, [sp, #24]
  50:	ldr	w0, [sp, #20]
  54:	sub	w0, w0, #0x1
  58:	str	w0, [sp, #20]
  5c:	ldr	w0, [sp, #20]
  60:	cmp	w0, #0x0
  64:	b.ne	28 <__gcov_merge_ior+0x14>  // b.any
  68:	nop
  6c:	nop
  70:	ldp	x29, x30, [sp], #32
  74:	ret

_gcov_merge_time_profile.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <gcov_get_counter_target>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	bl	0 <__gcov_read_counter>
   c:	ldp	x29, x30, [sp], #16
  10:	ret

0000000000000014 <__gcov_merge_time_profile>:
  14:	stp	x29, x30, [sp, #-48]!
  18:	mov	x29, sp
  1c:	str	x0, [sp, #24]
  20:	str	w1, [sp, #20]
  24:	str	wzr, [sp, #44]
  28:	b	a0 <__gcov_merge_time_profile+0x8c>
  2c:	bl	0 <gcov_get_counter_target>
  30:	str	x0, [sp, #32]
  34:	ldr	x0, [sp, #32]
  38:	cmp	x0, #0x0
  3c:	b.eq	94 <__gcov_merge_time_profile+0x80>  // b.none
  40:	ldr	w0, [sp, #44]
  44:	lsl	x0, x0, #3
  48:	ldr	x1, [sp, #24]
  4c:	add	x0, x1, x0
  50:	ldr	x0, [x0]
  54:	cmp	x0, #0x0
  58:	b.eq	7c <__gcov_merge_time_profile+0x68>  // b.none
  5c:	ldr	w0, [sp, #44]
  60:	lsl	x0, x0, #3
  64:	ldr	x1, [sp, #24]
  68:	add	x0, x1, x0
  6c:	ldr	x0, [x0]
  70:	ldr	x1, [sp, #32]
  74:	cmp	x1, x0
  78:	b.ge	94 <__gcov_merge_time_profile+0x80>  // b.tcont
  7c:	ldr	w0, [sp, #44]
  80:	lsl	x0, x0, #3
  84:	ldr	x1, [sp, #24]
  88:	add	x0, x1, x0
  8c:	ldr	x1, [sp, #32]
  90:	str	x1, [x0]
  94:	ldr	w0, [sp, #44]
  98:	add	w0, w0, #0x1
  9c:	str	w0, [sp, #44]
  a0:	ldr	w1, [sp, #44]
  a4:	ldr	w0, [sp, #20]
  a8:	cmp	w1, w0
  ac:	b.cc	2c <__gcov_merge_time_profile+0x18>  // b.lo, b.ul, b.last
  b0:	nop
  b4:	nop
  b8:	ldp	x29, x30, [sp], #48
  bc:	ret

_gcov_merge_icall_topn.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <gcov_get_counter>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	bl	0 <__gcov_read_counter>
   c:	ldp	x29, x30, [sp], #16
  10:	ret

0000000000000014 <gcov_get_counter_target>:
  14:	stp	x29, x30, [sp, #-16]!
  18:	mov	x29, sp
  1c:	bl	0 <__gcov_read_counter>
  20:	ldp	x29, x30, [sp], #16
  24:	ret

0000000000000028 <__gcov_merge_icall_topn>:
  28:	stp	x29, x30, [sp, #-96]!
  2c:	mov	x29, sp
  30:	str	x0, [x29, #24]
  34:	str	w1, [x29, #20]
  38:	ldr	w2, [x29, #20]
  3c:	mov	w0, #0x8e39                	// #36409
  40:	movk	w0, #0x38e3, lsl #16
  44:	umull	x0, w2, w0
  48:	lsr	x0, x0, #32
  4c:	lsr	w1, w0, #1
  50:	mov	w0, w1
  54:	lsl	w0, w0, #3
  58:	add	w0, w0, w1
  5c:	sub	w1, w2, w0
  60:	cmp	w1, #0x0
  64:	b.eq	6c <__gcov_merge_icall_topn+0x44>  // b.none
  68:	bl	0 <abort>
  6c:	str	wzr, [x29, #92]
  70:	b	330 <__gcov_merge_icall_topn+0x308>
  74:	ldr	w0, [x29, #92]
  78:	add	w0, w0, #0x1
  7c:	mov	w0, w0
  80:	lsl	x0, x0, #3
  84:	ldr	x1, [x29, #24]
  88:	add	x0, x1, x0
  8c:	str	x0, [x29, #64]
  90:	mov	w0, #0x10                  	// #16
  94:	str	w0, [x29, #60]
  98:	ldr	w0, [x29, #60]
  9c:	lsl	x0, x0, #3
  a0:	add	x0, x0, #0xf
  a4:	lsr	x0, x0, #4
  a8:	lsl	x0, x0, #4
  ac:	sub	sp, sp, x0
  b0:	mov	x0, sp
  b4:	add	x0, x0, #0xf
  b8:	lsr	x0, x0, #4
  bc:	lsl	x0, x0, #4
  c0:	str	x0, [x29, #48]
  c4:	str	wzr, [x29, #88]
  c8:	b	ec <__gcov_merge_icall_topn+0xc4>
  cc:	ldr	w0, [x29, #88]
  d0:	lsl	x0, x0, #3
  d4:	ldr	x1, [x29, #48]
  d8:	add	x0, x1, x0
  dc:	str	xzr, [x0]
  e0:	ldr	w0, [x29, #88]
  e4:	add	w0, w0, #0x1
  e8:	str	w0, [x29, #88]
  ec:	ldr	w1, [x29, #88]
  f0:	ldr	w0, [x29, #60]
  f4:	cmp	w1, w0
  f8:	b.cc	cc <__gcov_merge_icall_topn+0xa4>  // b.lo, b.ul, b.last
  fc:	str	wzr, [x29, #88]
 100:	b	170 <__gcov_merge_icall_topn+0x148>
 104:	ldr	w0, [x29, #88]
 108:	lsl	x0, x0, #3
 10c:	ldr	x1, [x29, #64]
 110:	add	x1, x1, x0
 114:	ldr	w0, [x29, #88]
 118:	lsl	x0, x0, #3
 11c:	ldr	x2, [x29, #48]
 120:	add	x0, x2, x0
 124:	ldr	x1, [x1]
 128:	str	x1, [x0]
 12c:	ldr	w0, [x29, #88]
 130:	add	w0, w0, #0x1
 134:	mov	w0, w0
 138:	lsl	x0, x0, #3
 13c:	ldr	x1, [x29, #64]
 140:	add	x1, x1, x0
 144:	ldr	w0, [x29, #88]
 148:	add	w0, w0, #0x1
 14c:	mov	w0, w0
 150:	lsl	x0, x0, #3
 154:	ldr	x2, [x29, #48]
 158:	add	x0, x2, x0
 15c:	ldr	x1, [x1]
 160:	str	x1, [x0]
 164:	ldr	w0, [x29, #88]
 168:	add	w0, w0, #0x2
 16c:	str	w0, [x29, #88]
 170:	ldr	w0, [x29, #88]
 174:	cmp	w0, #0x7
 178:	b.ls	104 <__gcov_merge_icall_topn+0xdc>  // b.plast
 17c:	bl	0 <gcov_get_counter>
 180:	str	wzr, [x29, #84]
 184:	b	288 <__gcov_merge_icall_topn+0x260>
 188:	str	wzr, [x29, #76]
 18c:	bl	14 <gcov_get_counter_target>
 190:	str	x0, [x29, #40]
 194:	bl	0 <gcov_get_counter>
 198:	str	x0, [x29, #32]
 19c:	str	wzr, [x29, #80]
 1a0:	b	21c <__gcov_merge_icall_topn+0x1f4>
 1a4:	ldr	w0, [x29, #80]
 1a8:	lsl	x0, x0, #3
 1ac:	ldr	x1, [x29, #48]
 1b0:	add	x0, x1, x0
 1b4:	ldr	x0, [x0]
 1b8:	ldr	x1, [x29, #40]
 1bc:	cmp	x1, x0
 1c0:	b.ne	210 <__gcov_merge_icall_topn+0x1e8>  // b.any
 1c4:	mov	w0, #0x1                   	// #1
 1c8:	str	w0, [x29, #76]
 1cc:	ldr	w0, [x29, #80]
 1d0:	add	w0, w0, #0x1
 1d4:	mov	w0, w0
 1d8:	lsl	x0, x0, #3
 1dc:	ldr	x1, [x29, #48]
 1e0:	add	x0, x1, x0
 1e4:	ldr	x2, [x0]
 1e8:	ldr	w0, [x29, #80]
 1ec:	add	w0, w0, #0x1
 1f0:	mov	w0, w0
 1f4:	lsl	x0, x0, #3
 1f8:	ldr	x1, [x29, #48]
 1fc:	add	x0, x1, x0
 200:	ldr	x1, [x29, #32]
 204:	add	x1, x2, x1
 208:	str	x1, [x0]
 20c:	b	22c <__gcov_merge_icall_topn+0x204>
 210:	ldr	w0, [x29, #80]
 214:	add	w0, w0, #0x2
 218:	str	w0, [x29, #80]
 21c:	ldr	w1, [x29, #80]
 220:	ldr	w0, [x29, #88]
 224:	cmp	w1, w0
 228:	b.cc	1a4 <__gcov_merge_icall_topn+0x17c>  // b.lo, b.ul, b.last
 22c:	ldr	w0, [x29, #76]
 230:	cmp	w0, #0x0
 234:	b.ne	27c <__gcov_merge_icall_topn+0x254>  // b.any
 238:	ldr	w0, [x29, #88]
 23c:	lsl	x0, x0, #3
 240:	ldr	x1, [x29, #48]
 244:	add	x0, x1, x0
 248:	ldr	x1, [x29, #40]
 24c:	str	x1, [x0]
 250:	ldr	w0, [x29, #88]
 254:	add	w0, w0, #0x1
 258:	mov	w0, w0
 25c:	lsl	x0, x0, #3
 260:	ldr	x1, [x29, #48]
 264:	add	x0, x1, x0
 268:	ldr	x1, [x29, #32]
 26c:	str	x1, [x0]
 270:	ldr	w0, [x29, #88]
 274:	add	w0, w0, #0x2
 278:	str	w0, [x29, #88]
 27c:	ldr	w0, [x29, #84]
 280:	add	w0, w0, #0x2
 284:	str	w0, [x29, #84]
 288:	ldr	w0, [x29, #84]
 28c:	cmp	w0, #0x7
 290:	b.ls	188 <__gcov_merge_icall_topn+0x160>  // b.plast
 294:	ldr	w0, [x29, #88]
 298:	mov	w1, w0
 29c:	ldr	x0, [x29, #48]
 2a0:	bl	0 <__gcov_sort_n_vals>
 2a4:	str	wzr, [x29, #84]
 2a8:	b	318 <__gcov_merge_icall_topn+0x2f0>
 2ac:	ldr	w0, [x29, #84]
 2b0:	lsl	x0, x0, #3
 2b4:	ldr	x1, [x29, #48]
 2b8:	add	x1, x1, x0
 2bc:	ldr	w0, [x29, #84]
 2c0:	lsl	x0, x0, #3
 2c4:	ldr	x2, [x29, #64]
 2c8:	add	x0, x2, x0
 2cc:	ldr	x1, [x1]
 2d0:	str	x1, [x0]
 2d4:	ldr	w0, [x29, #84]
 2d8:	add	w0, w0, #0x1
 2dc:	mov	w0, w0
 2e0:	lsl	x0, x0, #3
 2e4:	ldr	x1, [x29, #48]
 2e8:	add	x1, x1, x0
 2ec:	ldr	w0, [x29, #84]
 2f0:	add	w0, w0, #0x1
 2f4:	mov	w0, w0
 2f8:	lsl	x0, x0, #3
 2fc:	ldr	x2, [x29, #64]
 300:	add	x0, x2, x0
 304:	ldr	x1, [x1]
 308:	str	x1, [x0]
 30c:	ldr	w0, [x29, #84]
 310:	add	w0, w0, #0x2
 314:	str	w0, [x29, #84]
 318:	ldr	w0, [x29, #84]
 31c:	cmp	w0, #0x7
 320:	b.ls	2ac <__gcov_merge_icall_topn+0x284>  // b.plast
 324:	ldr	w0, [x29, #92]
 328:	add	w0, w0, #0x9
 32c:	str	w0, [x29, #92]
 330:	ldr	w1, [x29, #92]
 334:	ldr	w0, [x29, #20]
 338:	cmp	w1, w0
 33c:	b.cc	74 <__gcov_merge_icall_topn+0x4c>  // b.lo, b.ul, b.last
 340:	nop
 344:	nop
 348:	mov	sp, x29
 34c:	ldp	x29, x30, [sp], #96
 350:	ret

_gcov_interval_profiler.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_interval_profiler>:
   0:	sub	sp, sp, #0x30
   4:	str	x0, [sp, #24]
   8:	str	x1, [sp, #16]
   c:	str	w2, [sp, #12]
  10:	str	w3, [sp, #8]
  14:	ldrsw	x0, [sp, #12]
  18:	ldr	x1, [sp, #16]
  1c:	sub	x0, x1, x0
  20:	str	x0, [sp, #40]
  24:	ldr	x0, [sp, #40]
  28:	cmp	x0, #0x0
  2c:	b.ge	58 <__gcov_interval_profiler+0x58>  // b.tcont
  30:	ldr	w0, [sp, #8]
  34:	add	w0, w0, #0x1
  38:	mov	w0, w0
  3c:	lsl	x0, x0, #3
  40:	ldr	x1, [sp, #24]
  44:	add	x0, x1, x0
  48:	ldr	x1, [x0]
  4c:	add	x1, x1, #0x1
  50:	str	x1, [x0]
  54:	b	a4 <__gcov_interval_profiler+0xa4>
  58:	ldr	w0, [sp, #8]
  5c:	ldr	x1, [sp, #40]
  60:	cmp	x1, x0
  64:	b.lt	88 <__gcov_interval_profiler+0x88>  // b.tstop
  68:	ldr	w0, [sp, #8]
  6c:	lsl	x0, x0, #3
  70:	ldr	x1, [sp, #24]
  74:	add	x0, x1, x0
  78:	ldr	x1, [x0]
  7c:	add	x1, x1, #0x1
  80:	str	x1, [x0]
  84:	b	a4 <__gcov_interval_profiler+0xa4>
  88:	ldr	x0, [sp, #40]
  8c:	lsl	x0, x0, #3
  90:	ldr	x1, [sp, #24]
  94:	add	x0, x1, x0
  98:	ldr	x1, [x0]
  9c:	add	x1, x1, #0x1
  a0:	str	x1, [x0]
  a4:	nop
  a8:	add	sp, sp, #0x30
  ac:	ret

_gcov_interval_profiler_atomic.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_interval_profiler_atomic>:
   0:	sub	sp, sp, #0x30
   4:	str	x0, [sp, #24]
   8:	str	x1, [sp, #16]
   c:	str	w2, [sp, #12]
  10:	str	w3, [sp, #8]
  14:	ldrsw	x0, [sp, #12]
  18:	ldr	x1, [sp, #16]
  1c:	sub	x0, x1, x0
  20:	str	x0, [sp, #40]
  24:	ldr	x0, [sp, #40]
  28:	cmp	x0, #0x0
  2c:	b.ge	5c <__gcov_interval_profiler_atomic+0x5c>  // b.tcont
  30:	ldr	w0, [sp, #8]
  34:	add	w0, w0, #0x1
  38:	mov	w0, w0
  3c:	lsl	x0, x0, #3
  40:	ldr	x1, [sp, #24]
  44:	add	x0, x1, x0
  48:	ldxr	x1, [x0]
  4c:	add	x1, x1, #0x1
  50:	stxr	w2, x1, [x0]
  54:	cbnz	w2, 48 <__gcov_interval_profiler_atomic+0x48>
  58:	b	b0 <__gcov_interval_profiler_atomic+0xb0>
  5c:	ldr	w0, [sp, #8]
  60:	ldr	x1, [sp, #40]
  64:	cmp	x1, x0
  68:	b.lt	90 <__gcov_interval_profiler_atomic+0x90>  // b.tstop
  6c:	ldr	w0, [sp, #8]
  70:	lsl	x0, x0, #3
  74:	ldr	x1, [sp, #24]
  78:	add	x0, x1, x0
  7c:	ldxr	x1, [x0]
  80:	add	x1, x1, #0x1
  84:	stxr	w2, x1, [x0]
  88:	cbnz	w2, 7c <__gcov_interval_profiler_atomic+0x7c>
  8c:	b	b0 <__gcov_interval_profiler_atomic+0xb0>
  90:	ldr	x0, [sp, #40]
  94:	lsl	x0, x0, #3
  98:	ldr	x1, [sp, #24]
  9c:	add	x0, x1, x0
  a0:	ldxr	x1, [x0]
  a4:	add	x1, x1, #0x1
  a8:	stxr	w2, x1, [x0]
  ac:	cbnz	w2, a0 <__gcov_interval_profiler_atomic+0xa0>
  b0:	nop
  b4:	add	sp, sp, #0x30
  b8:	ret

_gcov_pow2_profiler.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_pow2_profiler>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	str	x1, [sp]
   c:	ldr	x0, [sp]
  10:	cmp	x0, #0x0
  14:	b.eq	30 <__gcov_pow2_profiler+0x30>  // b.none
  18:	ldr	x0, [sp]
  1c:	sub	x1, x0, #0x1
  20:	ldr	x0, [sp]
  24:	and	x0, x1, x0
  28:	cmp	x0, #0x0
  2c:	b.eq	48 <__gcov_pow2_profiler+0x48>  // b.none
  30:	ldr	x0, [sp, #8]
  34:	ldr	x0, [x0]
  38:	add	x1, x0, #0x1
  3c:	ldr	x0, [sp, #8]
  40:	str	x1, [x0]
  44:	b	60 <__gcov_pow2_profiler+0x60>
  48:	ldr	x0, [sp, #8]
  4c:	add	x0, x0, #0x8
  50:	ldr	x1, [x0]
  54:	add	x1, x1, #0x1
  58:	str	x1, [x0]
  5c:	nop
  60:	nop
  64:	add	sp, sp, #0x10
  68:	ret

_gcov_pow2_profiler_atomic.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_pow2_profiler_atomic>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	str	x1, [sp]
   c:	ldr	x0, [sp]
  10:	cmp	x0, #0x0
  14:	b.eq	30 <__gcov_pow2_profiler_atomic+0x30>  // b.none
  18:	ldr	x0, [sp]
  1c:	sub	x1, x0, #0x1
  20:	ldr	x0, [sp]
  24:	and	x0, x1, x0
  28:	cmp	x0, #0x0
  2c:	b.eq	48 <__gcov_pow2_profiler_atomic+0x48>  // b.none
  30:	ldr	x0, [sp, #8]
  34:	ldxr	x1, [x0]
  38:	add	x1, x1, #0x1
  3c:	stxr	w2, x1, [x0]
  40:	cbnz	w2, 34 <__gcov_pow2_profiler_atomic+0x34>
  44:	b	64 <__gcov_pow2_profiler_atomic+0x64>
  48:	ldr	x0, [sp, #8]
  4c:	add	x0, x0, #0x8
  50:	ldxr	x1, [x0]
  54:	add	x1, x1, #0x1
  58:	stxr	w2, x1, [x0]
  5c:	cbnz	w2, 50 <__gcov_pow2_profiler_atomic+0x50>
  60:	nop
  64:	nop
  68:	add	sp, sp, #0x10
  6c:	ret

_gcov_one_value_profiler.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_one_value_profiler_body>:
   0:	sub	sp, sp, #0x20
   4:	str	x0, [sp, #24]
   8:	str	x1, [sp, #16]
   c:	str	w2, [sp, #12]
  10:	ldr	x0, [sp, #24]
  14:	ldr	x0, [x0]
  18:	ldr	x1, [sp, #16]
  1c:	cmp	x1, x0
  20:	b.ne	3c <__gcov_one_value_profiler_body+0x3c>  // b.any
  24:	ldr	x0, [sp, #24]
  28:	add	x0, x0, #0x8
  2c:	ldr	x1, [x0]
  30:	add	x1, x1, #0x1
  34:	str	x1, [x0]
  38:	b	84 <__gcov_one_value_profiler_body+0x84>
  3c:	ldr	x0, [sp, #24]
  40:	add	x0, x0, #0x8
  44:	ldr	x0, [x0]
  48:	cmp	x0, #0x0
  4c:	b.ne	70 <__gcov_one_value_profiler_body+0x70>  // b.any
  50:	ldr	x0, [sp, #24]
  54:	add	x0, x0, #0x8
  58:	mov	x1, #0x1                   	// #1
  5c:	str	x1, [x0]
  60:	ldr	x0, [sp, #24]
  64:	ldr	x1, [sp, #16]
  68:	str	x1, [x0]
  6c:	b	84 <__gcov_one_value_profiler_body+0x84>
  70:	ldr	x0, [sp, #24]
  74:	add	x0, x0, #0x8
  78:	ldr	x1, [x0]
  7c:	sub	x1, x1, #0x1
  80:	str	x1, [x0]
  84:	ldr	w0, [sp, #12]
  88:	cmp	w0, #0x0
  8c:	b.eq	ac <__gcov_one_value_profiler_body+0xac>  // b.none
  90:	ldr	x0, [sp, #24]
  94:	add	x0, x0, #0x10
  98:	ldxr	x1, [x0]
  9c:	add	x1, x1, #0x1
  a0:	stxr	w2, x1, [x0]
  a4:	cbnz	w2, 98 <__gcov_one_value_profiler_body+0x98>
  a8:	b	c0 <__gcov_one_value_profiler_body+0xc0>
  ac:	ldr	x0, [sp, #24]
  b0:	add	x0, x0, #0x10
  b4:	ldr	x1, [x0]
  b8:	add	x1, x1, #0x1
  bc:	str	x1, [x0]
  c0:	nop
  c4:	add	sp, sp, #0x20
  c8:	ret

00000000000000cc <__gcov_one_value_profiler>:
  cc:	stp	x29, x30, [sp, #-32]!
  d0:	mov	x29, sp
  d4:	str	x0, [sp, #24]
  d8:	str	x1, [sp, #16]
  dc:	mov	w2, #0x0                   	// #0
  e0:	ldr	x1, [sp, #16]
  e4:	ldr	x0, [sp, #24]
  e8:	bl	0 <__gcov_one_value_profiler_body>
  ec:	nop
  f0:	ldp	x29, x30, [sp], #32
  f4:	ret

_gcov_one_value_profiler_atomic.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_one_value_profiler_body>:
   0:	sub	sp, sp, #0x20
   4:	str	x0, [sp, #24]
   8:	str	x1, [sp, #16]
   c:	str	w2, [sp, #12]
  10:	ldr	x0, [sp, #24]
  14:	ldr	x0, [x0]
  18:	ldr	x1, [sp, #16]
  1c:	cmp	x1, x0
  20:	b.ne	3c <__gcov_one_value_profiler_body+0x3c>  // b.any
  24:	ldr	x0, [sp, #24]
  28:	add	x0, x0, #0x8
  2c:	ldr	x1, [x0]
  30:	add	x1, x1, #0x1
  34:	str	x1, [x0]
  38:	b	84 <__gcov_one_value_profiler_body+0x84>
  3c:	ldr	x0, [sp, #24]
  40:	add	x0, x0, #0x8
  44:	ldr	x0, [x0]
  48:	cmp	x0, #0x0
  4c:	b.ne	70 <__gcov_one_value_profiler_body+0x70>  // b.any
  50:	ldr	x0, [sp, #24]
  54:	add	x0, x0, #0x8
  58:	mov	x1, #0x1                   	// #1
  5c:	str	x1, [x0]
  60:	ldr	x0, [sp, #24]
  64:	ldr	x1, [sp, #16]
  68:	str	x1, [x0]
  6c:	b	84 <__gcov_one_value_profiler_body+0x84>
  70:	ldr	x0, [sp, #24]
  74:	add	x0, x0, #0x8
  78:	ldr	x1, [x0]
  7c:	sub	x1, x1, #0x1
  80:	str	x1, [x0]
  84:	ldr	w0, [sp, #12]
  88:	cmp	w0, #0x0
  8c:	b.eq	ac <__gcov_one_value_profiler_body+0xac>  // b.none
  90:	ldr	x0, [sp, #24]
  94:	add	x0, x0, #0x10
  98:	ldxr	x1, [x0]
  9c:	add	x1, x1, #0x1
  a0:	stxr	w2, x1, [x0]
  a4:	cbnz	w2, 98 <__gcov_one_value_profiler_body+0x98>
  a8:	b	c0 <__gcov_one_value_profiler_body+0xc0>
  ac:	ldr	x0, [sp, #24]
  b0:	add	x0, x0, #0x10
  b4:	ldr	x1, [x0]
  b8:	add	x1, x1, #0x1
  bc:	str	x1, [x0]
  c0:	nop
  c4:	add	sp, sp, #0x20
  c8:	ret

00000000000000cc <__gcov_one_value_profiler_atomic>:
  cc:	stp	x29, x30, [sp, #-32]!
  d0:	mov	x29, sp
  d4:	str	x0, [sp, #24]
  d8:	str	x1, [sp, #16]
  dc:	mov	w2, #0x1                   	// #1
  e0:	ldr	x1, [sp, #16]
  e4:	ldr	x0, [sp, #24]
  e8:	bl	0 <__gcov_one_value_profiler_body>
  ec:	nop
  f0:	ldp	x29, x30, [sp], #32
  f4:	ret

_gcov_average_profiler.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_average_profiler>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	str	x1, [sp]
   c:	ldr	x0, [sp, #8]
  10:	ldr	x1, [x0]
  14:	ldr	x0, [sp]
  18:	add	x1, x1, x0
  1c:	ldr	x0, [sp, #8]
  20:	str	x1, [x0]
  24:	ldr	x0, [sp, #8]
  28:	add	x0, x0, #0x8
  2c:	ldr	x1, [x0]
  30:	add	x1, x1, #0x1
  34:	str	x1, [x0]
  38:	nop
  3c:	add	sp, sp, #0x10
  40:	ret

_gcov_average_profiler_atomic.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_average_profiler_atomic>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	str	x1, [sp]
   c:	ldr	x1, [sp]
  10:	ldr	x0, [sp, #8]
  14:	ldxr	x2, [x0]
  18:	add	x2, x2, x1
  1c:	stxr	w3, x2, [x0]
  20:	cbnz	w3, 14 <__gcov_average_profiler_atomic+0x14>
  24:	ldr	x0, [sp, #8]
  28:	add	x0, x0, #0x8
  2c:	ldxr	x1, [x0]
  30:	add	x1, x1, #0x1
  34:	stxr	w2, x1, [x0]
  38:	cbnz	w2, 2c <__gcov_average_profiler_atomic+0x2c>
  3c:	nop
  40:	add	sp, sp, #0x10
  44:	ret

_gcov_ior_profiler.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_ior_profiler>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	str	x1, [sp]
   c:	ldr	x0, [sp, #8]
  10:	ldr	x1, [x0]
  14:	ldr	x0, [sp]
  18:	orr	x1, x1, x0
  1c:	ldr	x0, [sp, #8]
  20:	str	x1, [x0]
  24:	nop
  28:	add	sp, sp, #0x10
  2c:	ret

_gcov_ior_profiler_atomic.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_ior_profiler_atomic>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	str	x1, [sp]
   c:	ldr	x1, [sp]
  10:	ldr	x0, [sp, #8]
  14:	ldxr	x2, [x0]
  18:	orr	x2, x2, x1
  1c:	stxr	w3, x2, [x0]
  20:	cbnz	w3, 14 <__gcov_ior_profiler_atomic+0x14>
  24:	nop
  28:	add	sp, sp, #0x10
  2c:	ret

_gcov_indirect_call_profiler_v3.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_one_value_profiler_body>:
   0:	sub	sp, sp, #0x20
   4:	str	x0, [sp, #24]
   8:	str	x1, [sp, #16]
   c:	str	w2, [sp, #12]
  10:	ldr	x0, [sp, #24]
  14:	ldr	x0, [x0]
  18:	ldr	x1, [sp, #16]
  1c:	cmp	x1, x0
  20:	b.ne	3c <__gcov_one_value_profiler_body+0x3c>  // b.any
  24:	ldr	x0, [sp, #24]
  28:	add	x0, x0, #0x8
  2c:	ldr	x1, [x0]
  30:	add	x1, x1, #0x1
  34:	str	x1, [x0]
  38:	b	84 <__gcov_one_value_profiler_body+0x84>
  3c:	ldr	x0, [sp, #24]
  40:	add	x0, x0, #0x8
  44:	ldr	x0, [x0]
  48:	cmp	x0, #0x0
  4c:	b.ne	70 <__gcov_one_value_profiler_body+0x70>  // b.any
  50:	ldr	x0, [sp, #24]
  54:	add	x0, x0, #0x8
  58:	mov	x1, #0x1                   	// #1
  5c:	str	x1, [x0]
  60:	ldr	x0, [sp, #24]
  64:	ldr	x1, [sp, #16]
  68:	str	x1, [x0]
  6c:	b	84 <__gcov_one_value_profiler_body+0x84>
  70:	ldr	x0, [sp, #24]
  74:	add	x0, x0, #0x8
  78:	ldr	x1, [x0]
  7c:	sub	x1, x1, #0x1
  80:	str	x1, [x0]
  84:	ldr	w0, [sp, #12]
  88:	cmp	w0, #0x0
  8c:	b.eq	ac <__gcov_one_value_profiler_body+0xac>  // b.none
  90:	ldr	x0, [sp, #24]
  94:	add	x0, x0, #0x10
  98:	ldxr	x1, [x0]
  9c:	add	x1, x1, #0x1
  a0:	stxr	w2, x1, [x0]
  a4:	cbnz	w2, 98 <__gcov_one_value_profiler_body+0x98>
  a8:	b	c0 <__gcov_one_value_profiler_body+0xc0>
  ac:	ldr	x0, [sp, #24]
  b0:	add	x0, x0, #0x10
  b4:	ldr	x1, [x0]
  b8:	add	x1, x1, #0x1
  bc:	str	x1, [x0]
  c0:	nop
  c4:	add	sp, sp, #0x20
  c8:	ret

00000000000000cc <__gcov_indirect_call_profiler_v3>:
  cc:	stp	x29, x30, [sp, #-32]!
  d0:	mov	x29, sp
  d4:	str	x0, [sp, #24]
  d8:	str	x1, [sp, #16]
  dc:	adrp	x0, 0 <__gcov_one_value_profiler_body>
  e0:	ldr	x1, [x0]
  e4:	add	x0, x0, #0x0
  e8:	blr	x1
  ec:	mrs	x1, tpidr_el0
  f0:	add	x0, x1, x0
  f4:	ldr	x0, [x0]
  f8:	ldr	x1, [sp, #16]
  fc:	cmp	x1, x0
 100:	b.ne	12c <__gcov_indirect_call_profiler_v3+0x60>  // b.any
 104:	adrp	x0, 0 <__gcov_one_value_profiler_body>
 108:	ldr	x1, [x0]
 10c:	add	x0, x0, #0x0
 110:	blr	x1
 114:	mrs	x1, tpidr_el0
 118:	add	x0, x1, x0
 11c:	ldr	x0, [x0, #8]
 120:	mov	w2, #0x0                   	// #0
 124:	ldr	x1, [sp, #24]
 128:	bl	0 <__gcov_one_value_profiler_body>
 12c:	adrp	x0, 0 <__gcov_one_value_profiler_body>
 130:	ldr	x1, [x0]
 134:	add	x0, x0, #0x0
 138:	blr	x1
 13c:	mrs	x1, tpidr_el0
 140:	add	x0, x1, x0
 144:	str	xzr, [x0]
 148:	nop
 14c:	ldp	x29, x30, [sp], #32
 150:	ret

_gcov_time_profiler.o:     file format elf64-littleaarch64


_gcov_indirect_call_topn_profiler.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_topn_value_profiler_body>:
   0:	stp	x29, x30, [sp, #-128]!
   4:	mov	x29, sp
   8:	str	x0, [x29, #24]
   c:	str	x1, [x29, #16]
  10:	str	wzr, [x29, #120]
  14:	str	wzr, [x29, #116]
  18:	ldr	x0, [x29, #24]
  1c:	add	x0, x0, #0x8
  20:	str	x0, [x29, #104]
  24:	ldr	x0, [x29, #24]
  28:	add	x0, x0, #0x8
  2c:	str	x0, [x29, #72]
  30:	ldr	x0, [x29, #24]
  34:	str	x0, [x29, #64]
  38:	mov	w0, #0x2                   	// #2
  3c:	str	w0, [x29, #60]
  40:	str	wzr, [x29, #124]
  44:	b	ec <__gcov_topn_value_profiler_body+0xec>
  48:	ldr	w0, [x29, #124]
  4c:	lsl	x0, x0, #3
  50:	ldr	x1, [x29, #72]
  54:	add	x0, x1, x0
  58:	str	x0, [x29, #48]
  5c:	ldr	x0, [x29, #48]
  60:	ldr	x0, [x0]
  64:	ldr	x1, [x29, #16]
  68:	cmp	x1, x0
  6c:	b.ne	90 <__gcov_topn_value_profiler_body+0x90>  // b.any
  70:	ldr	x0, [x29, #48]
  74:	add	x0, x0, #0x8
  78:	ldr	x1, [x0]
  7c:	add	x1, x1, #0x1
  80:	str	x1, [x0]
  84:	mov	w0, #0x1                   	// #1
  88:	str	w0, [x29, #120]
  8c:	b	100 <__gcov_topn_value_profiler_body+0x100>
  90:	ldr	x0, [x29, #48]
  94:	add	x0, x0, #0x8
  98:	ldr	x0, [x0]
  9c:	cmp	x0, #0x0
  a0:	b.ne	b8 <__gcov_topn_value_profiler_body+0xb8>  // b.any
  a4:	ldr	x0, [x29, #48]
  a8:	str	x0, [x29, #104]
  ac:	mov	w0, #0x1                   	// #1
  b0:	str	w0, [x29, #116]
  b4:	b	e0 <__gcov_topn_value_profiler_body+0xe0>
  b8:	ldr	x0, [x29, #48]
  bc:	add	x0, x0, #0x8
  c0:	ldr	x1, [x0]
  c4:	ldr	x0, [x29, #104]
  c8:	add	x0, x0, #0x8
  cc:	ldr	x0, [x0]
  d0:	cmp	x1, x0
  d4:	b.ge	e0 <__gcov_topn_value_profiler_body+0xe0>  // b.tcont
  d8:	ldr	x0, [x29, #48]
  dc:	str	x0, [x29, #104]
  e0:	ldr	w0, [x29, #124]
  e4:	add	w0, w0, #0x2
  e8:	str	w0, [x29, #124]
  ec:	ldr	w0, [x29, #60]
  f0:	lsl	w0, w0, #2
  f4:	ldr	w1, [x29, #124]
  f8:	cmp	w1, w0
  fc:	b.cc	48 <__gcov_topn_value_profiler_body+0x48>  // b.lo, b.ul, b.last
 100:	ldr	w0, [x29, #120]
 104:	cmp	w0, #0x0
 108:	b.ne	398 <__gcov_topn_value_profiler_body+0x398>  // b.any
 10c:	ldr	x0, [x29, #104]
 110:	ldr	x1, [x29, #16]
 114:	str	x1, [x0]
 118:	ldr	x0, [x29, #104]
 11c:	add	x0, x0, #0x8
 120:	mov	x1, #0x1                   	// #1
 124:	str	x1, [x0]
 128:	ldr	w0, [x29, #116]
 12c:	cmp	w0, #0x0
 130:	b.ne	39c <__gcov_topn_value_profiler_body+0x39c>  // b.any
 134:	ldr	x0, [x29, #64]
 138:	ldr	x0, [x0]
 13c:	add	x1, x0, #0x1
 140:	ldr	x0, [x29, #64]
 144:	str	x1, [x0]
 148:	ldr	x0, [x29, #64]
 14c:	ldr	x0, [x0]
 150:	cmp	x0, #0xbb7
 154:	b.le	39c <__gcov_topn_value_profiler_body+0x39c>
 158:	ldr	w0, [x29, #60]
 15c:	lsl	x0, x0, #3
 160:	add	x0, x0, #0xf
 164:	lsr	x0, x0, #4
 168:	lsl	x0, x0, #4
 16c:	sub	sp, sp, x0
 170:	mov	x0, sp
 174:	add	x0, x0, #0xf
 178:	lsr	x0, x0, #4
 17c:	lsl	x0, x0, #4
 180:	str	x0, [x29, #40]
 184:	ldr	x0, [x29, #64]
 188:	str	xzr, [x0]
 18c:	str	wzr, [x29, #100]
 190:	b	1b4 <__gcov_topn_value_profiler_body+0x1b4>
 194:	ldr	w0, [x29, #100]
 198:	lsl	x0, x0, #3
 19c:	ldr	x1, [x29, #40]
 1a0:	add	x0, x1, x0
 1a4:	str	xzr, [x0]
 1a8:	ldr	w0, [x29, #100]
 1ac:	add	w0, w0, #0x1
 1b0:	str	w0, [x29, #100]
 1b4:	ldr	w1, [x29, #100]
 1b8:	ldr	w0, [x29, #60]
 1bc:	cmp	w1, w0
 1c0:	b.cc	194 <__gcov_topn_value_profiler_body+0x194>  // b.lo, b.ul, b.last
 1c4:	str	wzr, [x29, #100]
 1c8:	b	294 <__gcov_topn_value_profiler_body+0x294>
 1cc:	str	xzr, [x29, #88]
 1d0:	str	wzr, [x29, #96]
 1d4:	b	228 <__gcov_topn_value_profiler_body+0x228>
 1d8:	ldr	x0, [x29, #88]
 1dc:	cmp	x0, #0x0
 1e0:	b.eq	208 <__gcov_topn_value_profiler_body+0x208>  // b.none
 1e4:	ldr	w0, [x29, #96]
 1e8:	lsl	x0, x0, #3
 1ec:	ldr	x1, [x29, #40]
 1f0:	add	x0, x1, x0
 1f4:	ldr	x1, [x0]
 1f8:	ldr	x0, [x29, #88]
 1fc:	ldr	x0, [x0]
 200:	cmp	x1, x0
 204:	b.ge	21c <__gcov_topn_value_profiler_body+0x21c>  // b.tcont
 208:	ldr	w0, [x29, #96]
 20c:	lsl	x0, x0, #3
 210:	ldr	x1, [x29, #40]
 214:	add	x0, x1, x0
 218:	str	x0, [x29, #88]
 21c:	ldr	w0, [x29, #96]
 220:	add	w0, w0, #0x1
 224:	str	w0, [x29, #96]
 228:	ldr	w1, [x29, #96]
 22c:	ldr	w0, [x29, #60]
 230:	cmp	w1, w0
 234:	b.cc	1d8 <__gcov_topn_value_profiler_body+0x1d8>  // b.lo, b.ul, b.last
 238:	ldr	w0, [x29, #100]
 23c:	add	w0, w0, #0x1
 240:	mov	w0, w0
 244:	lsl	x0, x0, #3
 248:	ldr	x1, [x29, #72]
 24c:	add	x0, x1, x0
 250:	ldr	x1, [x0]
 254:	ldr	x0, [x29, #88]
 258:	ldr	x0, [x0]
 25c:	cmp	x1, x0
 260:	b.le	288 <__gcov_topn_value_profiler_body+0x288>
 264:	ldr	w0, [x29, #100]
 268:	add	w0, w0, #0x1
 26c:	mov	w0, w0
 270:	lsl	x0, x0, #3
 274:	ldr	x1, [x29, #72]
 278:	add	x0, x1, x0
 27c:	ldr	x1, [x0]
 280:	ldr	x0, [x29, #88]
 284:	str	x1, [x0]
 288:	ldr	w0, [x29, #100]
 28c:	add	w0, w0, #0x2
 290:	str	w0, [x29, #100]
 294:	ldr	w0, [x29, #60]
 298:	lsl	w0, w0, #1
 29c:	ldr	w1, [x29, #100]
 2a0:	cmp	w1, w0
 2a4:	b.cc	1cc <__gcov_topn_value_profiler_body+0x1cc>  // b.lo, b.ul, b.last
 2a8:	ldr	x0, [x29, #40]
 2ac:	ldr	x0, [x0]
 2b0:	str	x0, [x29, #80]
 2b4:	mov	w0, #0x1                   	// #1
 2b8:	str	w0, [x29, #96]
 2bc:	b	304 <__gcov_topn_value_profiler_body+0x304>
 2c0:	ldr	w0, [x29, #96]
 2c4:	lsl	x0, x0, #3
 2c8:	ldr	x1, [x29, #40]
 2cc:	add	x0, x1, x0
 2d0:	ldr	x0, [x0]
 2d4:	ldr	x1, [x29, #80]
 2d8:	cmp	x1, x0
 2dc:	b.le	2f8 <__gcov_topn_value_profiler_body+0x2f8>
 2e0:	ldr	w0, [x29, #96]
 2e4:	lsl	x0, x0, #3
 2e8:	ldr	x1, [x29, #40]
 2ec:	add	x0, x1, x0
 2f0:	ldr	x0, [x0]
 2f4:	str	x0, [x29, #80]
 2f8:	ldr	w0, [x29, #96]
 2fc:	add	w0, w0, #0x1
 300:	str	w0, [x29, #96]
 304:	ldr	w1, [x29, #96]
 308:	ldr	w0, [x29, #60]
 30c:	cmp	w1, w0
 310:	b.cc	2c0 <__gcov_topn_value_profiler_body+0x2c0>  // b.lo, b.ul, b.last
 314:	str	wzr, [x29, #100]
 318:	b	380 <__gcov_topn_value_profiler_body+0x380>
 31c:	ldr	w0, [x29, #100]
 320:	add	w0, w0, #0x1
 324:	mov	w0, w0
 328:	lsl	x0, x0, #3
 32c:	ldr	x1, [x29, #72]
 330:	add	x0, x1, x0
 334:	ldr	x0, [x0]
 338:	ldr	x1, [x29, #80]
 33c:	cmp	x1, x0
 340:	b.le	374 <__gcov_topn_value_profiler_body+0x374>
 344:	ldr	w0, [x29, #100]
 348:	lsl	x0, x0, #3
 34c:	ldr	x1, [x29, #72]
 350:	add	x0, x1, x0
 354:	str	xzr, [x0]
 358:	ldr	w0, [x29, #100]
 35c:	add	w0, w0, #0x1
 360:	mov	w0, w0
 364:	lsl	x0, x0, #3
 368:	ldr	x1, [x29, #72]
 36c:	add	x0, x1, x0
 370:	str	xzr, [x0]
 374:	ldr	w0, [x29, #100]
 378:	add	w0, w0, #0x2
 37c:	str	w0, [x29, #100]
 380:	ldr	w0, [x29, #60]
 384:	lsl	w0, w0, #1
 388:	ldr	w1, [x29, #100]
 38c:	cmp	w1, w0
 390:	b.cc	31c <__gcov_topn_value_profiler_body+0x31c>  // b.lo, b.ul, b.last
 394:	b	39c <__gcov_topn_value_profiler_body+0x39c>
 398:	nop
 39c:	mov	sp, x29
 3a0:	ldp	x29, x30, [sp], #128
 3a4:	ret

00000000000003a8 <__gcov_indirect_call_topn_profiler>:
 3a8:	stp	x29, x30, [sp, #-48]!
 3ac:	mov	x29, sp
 3b0:	str	x0, [sp, #24]
 3b4:	str	x1, [sp, #16]
 3b8:	adrp	x0, 0 <__gcov_topn_value_profiler_body>
 3bc:	ldr	x1, [x0]
 3c0:	add	x0, x0, #0x0
 3c4:	blr	x1
 3c8:	mrs	x1, tpidr_el0
 3cc:	add	x0, x1, x0
 3d0:	ldr	x0, [x0]
 3d4:	str	x0, [sp, #40]
 3d8:	ldr	x1, [sp, #16]
 3dc:	ldr	x0, [sp, #40]
 3e0:	cmp	x1, x0
 3e4:	b.ne	40c <__gcov_indirect_call_topn_profiler+0x64>  // b.any
 3e8:	adrp	x0, 0 <__gcov_topn_value_profiler_body>
 3ec:	ldr	x1, [x0]
 3f0:	add	x0, x0, #0x0
 3f4:	blr	x1
 3f8:	mrs	x1, tpidr_el0
 3fc:	add	x0, x1, x0
 400:	ldr	x0, [x0, #8]
 404:	ldr	x1, [sp, #24]
 408:	bl	0 <__gcov_topn_value_profiler_body>
 40c:	nop
 410:	ldp	x29, x30, [sp], #48
 414:	ret

_gcov_dump.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_dump_int>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	adrp	x0, 0 <__gcov_master>
   c:	ldr	x0, [x0]
  10:	ldr	w1, [x0]
  14:	mov	w0, #0x322a                	// #12842
  18:	movk	w0, #0x4139, lsl #16
  1c:	cmp	w1, w0
  20:	b.ne	34 <__gcov_dump_int+0x34>  // b.any
  24:	adrp	x0, 0 <__gcov_master>
  28:	ldr	x0, [x0]
  2c:	ldr	x0, [x0, #8]
  30:	b	3c <__gcov_dump_int+0x3c>
  34:	adrp	x0, 0 <__gcov_root>
  38:	add	x0, x0, #0x0
  3c:	str	x0, [sp, #24]
  40:	b	58 <__gcov_dump_int+0x58>
  44:	ldr	x0, [sp, #24]
  48:	bl	0 <__gcov_dump_one>
  4c:	ldr	x0, [sp, #24]
  50:	ldr	x0, [x0, #16]
  54:	str	x0, [sp, #24]
  58:	ldr	x0, [sp, #24]
  5c:	cmp	x0, #0x0
  60:	b.ne	44 <__gcov_dump_int+0x44>  // b.any
  64:	nop
  68:	nop
  6c:	ldp	x29, x30, [sp], #32
  70:	ret

0000000000000074 <__gcov_dump>:
  74:	stp	x29, x30, [sp, #-16]!
  78:	mov	x29, sp
  7c:	bl	0 <__gcov_dump_int>
  80:	nop
  84:	ldp	x29, x30, [sp], #16
  88:	ret

_gcov_flush.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gthread_active_p>:
   0:	adrp	x0, 0 <__gthread_active_p>
   4:	add	x0, x0, #0x0
   8:	ldr	x0, [x0]
   c:	cmp	x0, #0x0
  10:	cset	w0, ne  // ne = any
  14:	and	w0, w0, #0xff
  18:	ret

000000000000001c <__gthread_mutex_lock>:
  1c:	stp	x29, x30, [sp, #-32]!
  20:	mov	x29, sp
  24:	str	x0, [sp, #24]
  28:	bl	0 <__gthread_active_p>
  2c:	cmp	w0, #0x0
  30:	b.eq	40 <__gthread_mutex_lock+0x24>  // b.none
  34:	ldr	x0, [sp, #24]
  38:	bl	0 <pthread_mutex_lock>
  3c:	b	44 <__gthread_mutex_lock+0x28>
  40:	mov	w0, #0x0                   	// #0
  44:	ldp	x29, x30, [sp], #32
  48:	ret

000000000000004c <__gthread_mutex_unlock>:
  4c:	stp	x29, x30, [sp, #-32]!
  50:	mov	x29, sp
  54:	str	x0, [sp, #24]
  58:	bl	0 <__gthread_active_p>
  5c:	cmp	w0, #0x0
  60:	b.eq	70 <__gthread_mutex_unlock+0x24>  // b.none
  64:	ldr	x0, [sp, #24]
  68:	bl	0 <pthread_mutex_unlock>
  6c:	b	74 <__gthread_mutex_unlock+0x28>
  70:	mov	w0, #0x0                   	// #0
  74:	ldp	x29, x30, [sp], #32
  78:	ret

000000000000007c <__gcov_flush>:
  7c:	stp	x29, x30, [sp, #-16]!
  80:	mov	x29, sp
  84:	adrp	x0, 0 <__gthread_active_p>
  88:	add	x0, x0, #0x0
  8c:	bl	1c <__gthread_mutex_lock>
  90:	bl	0 <__gcov_dump_int>
  94:	bl	0 <__gcov_reset_int>
  98:	adrp	x0, 0 <__gthread_active_p>
  9c:	add	x0, x0, #0x0
  a0:	bl	4c <__gthread_mutex_unlock>
  a4:	nop
  a8:	ldp	x29, x30, [sp], #16
  ac:	ret

_gcov_fork.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gthread_active_p>:
   0:	adrp	x0, 0 <__gthread_active_p>
   4:	add	x0, x0, #0x0
   8:	ldr	x0, [x0]
   c:	cmp	x0, #0x0
  10:	cset	w0, ne  // ne = any
  14:	and	w0, w0, #0xff
  18:	ret

000000000000001c <__gthread_mutex_init_function>:
  1c:	stp	x29, x30, [sp, #-32]!
  20:	mov	x29, sp
  24:	str	x0, [sp, #24]
  28:	bl	0 <__gthread_active_p>
  2c:	cmp	w0, #0x0
  30:	b.eq	40 <__gthread_mutex_init_function+0x24>  // b.none
  34:	mov	x1, #0x0                   	// #0
  38:	ldr	x0, [sp, #24]
  3c:	bl	0 <pthread_mutex_init>
  40:	nop
  44:	ldp	x29, x30, [sp], #32
  48:	ret

000000000000004c <__gcov_fork>:
  4c:	stp	x29, x30, [sp, #-32]!
  50:	mov	x29, sp
  54:	bl	0 <__gcov_flush>
  58:	bl	0 <fork>
  5c:	str	w0, [sp, #28]
  60:	ldr	w0, [sp, #28]
  64:	cmp	w0, #0x0
  68:	b.ne	78 <__gcov_fork+0x2c>  // b.any
  6c:	adrp	x0, 0 <__gcov_flush_mx>
  70:	add	x0, x0, #0x0
  74:	bl	1c <__gthread_mutex_init_function>
  78:	ldr	w0, [sp, #28]
  7c:	ldp	x29, x30, [sp], #32
  80:	ret

_gcov_execl.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_execl>:
   0:	stp	x29, x30, [sp, #-288]!
   4:	mov	x29, sp
   8:	str	x0, [x29, #24]
   c:	str	x1, [x29, #16]
  10:	str	x2, [x29, #240]
  14:	str	x3, [x29, #248]
  18:	str	x4, [x29, #256]
  1c:	str	x5, [x29, #264]
  20:	str	x6, [x29, #272]
  24:	str	x7, [x29, #280]
  28:	str	q0, [x29, #112]
  2c:	str	q1, [x29, #128]
  30:	str	q2, [x29, #144]
  34:	str	q3, [x29, #160]
  38:	str	q4, [x29, #176]
  3c:	str	q5, [x29, #192]
  40:	str	q6, [x29, #208]
  44:	str	q7, [x29, #224]
  48:	bl	0 <__gcov_flush>
  4c:	add	x0, x29, #0x120
  50:	str	x0, [x29, #64]
  54:	add	x0, x29, #0x120
  58:	str	x0, [x29, #72]
  5c:	add	x0, x29, #0xf0
  60:	str	x0, [x29, #80]
  64:	mov	w0, #0xffffffd0            	// #-48
  68:	str	w0, [x29, #88]
  6c:	mov	w0, #0xffffff80            	// #-128
  70:	str	w0, [x29, #92]
  74:	add	x2, x29, #0x20
  78:	add	x3, x29, #0x40
  7c:	ldp	x0, x1, [x3]
  80:	stp	x0, x1, [x2]
  84:	ldp	x0, x1, [x3, #16]
  88:	stp	x0, x1, [x2, #16]
  8c:	mov	w0, #0x2                   	// #2
  90:	str	w0, [x29, #104]
  94:	b	a4 <__gcov_execl+0xa4>
  98:	ldr	w0, [x29, #104]
  9c:	add	w0, w0, #0x1
  a0:	str	w0, [x29, #104]
  a4:	ldr	w1, [x29, #88]
  a8:	ldr	x0, [x29, #64]
  ac:	cmp	w1, #0x0
  b0:	b.lt	c4 <__gcov_execl+0xc4>  // b.tstop
  b4:	add	x1, x0, #0xf
  b8:	and	x1, x1, #0xfffffffffffffff8
  bc:	str	x1, [x29, #64]
  c0:	b	f4 <__gcov_execl+0xf4>
  c4:	add	w2, w1, #0x8
  c8:	str	w2, [x29, #88]
  cc:	ldr	w2, [x29, #88]
  d0:	cmp	w2, #0x0
  d4:	b.le	e8 <__gcov_execl+0xe8>
  d8:	add	x1, x0, #0xf
  dc:	and	x1, x1, #0xfffffffffffffff8
  e0:	str	x1, [x29, #64]
  e4:	b	f4 <__gcov_execl+0xf4>
  e8:	ldr	x2, [x29, #72]
  ec:	sxtw	x0, w1
  f0:	add	x0, x2, x0
  f4:	ldr	x0, [x0]
  f8:	cmp	x0, #0x0
  fc:	b.ne	98 <__gcov_execl+0x98>  // b.any
 100:	ldr	w0, [x29, #104]
 104:	lsl	x0, x0, #3
 108:	add	x0, x0, #0xf
 10c:	lsr	x0, x0, #4
 110:	lsl	x0, x0, #4
 114:	sub	sp, sp, x0
 118:	mov	x0, sp
 11c:	add	x0, x0, #0xf
 120:	lsr	x0, x0, #4
 124:	lsl	x0, x0, #4
 128:	str	x0, [x29, #96]
 12c:	ldr	x0, [x29, #96]
 130:	ldr	x1, [x29, #16]
 134:	str	x1, [x0]
 138:	mov	w0, #0x1                   	// #1
 13c:	str	w0, [x29, #108]
 140:	b	1b8 <__gcov_execl+0x1b8>
 144:	ldr	w0, [x29, #108]
 148:	lsl	x0, x0, #3
 14c:	ldr	x1, [x29, #96]
 150:	add	x2, x1, x0
 154:	ldr	w1, [x29, #56]
 158:	ldr	x0, [x29, #32]
 15c:	cmp	w1, #0x0
 160:	b.lt	174 <__gcov_execl+0x174>  // b.tstop
 164:	add	x1, x0, #0xf
 168:	and	x1, x1, #0xfffffffffffffff8
 16c:	str	x1, [x29, #32]
 170:	b	1a4 <__gcov_execl+0x1a4>
 174:	add	w3, w1, #0x8
 178:	str	w3, [x29, #56]
 17c:	ldr	w3, [x29, #56]
 180:	cmp	w3, #0x0
 184:	b.le	198 <__gcov_execl+0x198>
 188:	add	x1, x0, #0xf
 18c:	and	x1, x1, #0xfffffffffffffff8
 190:	str	x1, [x29, #32]
 194:	b	1a4 <__gcov_execl+0x1a4>
 198:	ldr	x3, [x29, #40]
 19c:	sxtw	x0, w1
 1a0:	add	x0, x3, x0
 1a4:	ldr	x0, [x0]
 1a8:	str	x0, [x2]
 1ac:	ldr	w0, [x29, #108]
 1b0:	add	w0, w0, #0x1
 1b4:	str	w0, [x29, #108]
 1b8:	ldr	w1, [x29, #108]
 1bc:	ldr	w0, [x29, #104]
 1c0:	cmp	w1, w0
 1c4:	b.cc	144 <__gcov_execl+0x144>  // b.lo, b.ul, b.last
 1c8:	ldr	x1, [x29, #96]
 1cc:	ldr	x0, [x29, #24]
 1d0:	bl	0 <execv>
 1d4:	mov	sp, x29
 1d8:	ldp	x29, x30, [sp], #288
 1dc:	ret

_gcov_execlp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_execlp>:
   0:	stp	x29, x30, [sp, #-288]!
   4:	mov	x29, sp
   8:	str	x0, [x29, #24]
   c:	str	x1, [x29, #16]
  10:	str	x2, [x29, #240]
  14:	str	x3, [x29, #248]
  18:	str	x4, [x29, #256]
  1c:	str	x5, [x29, #264]
  20:	str	x6, [x29, #272]
  24:	str	x7, [x29, #280]
  28:	str	q0, [x29, #112]
  2c:	str	q1, [x29, #128]
  30:	str	q2, [x29, #144]
  34:	str	q3, [x29, #160]
  38:	str	q4, [x29, #176]
  3c:	str	q5, [x29, #192]
  40:	str	q6, [x29, #208]
  44:	str	q7, [x29, #224]
  48:	bl	0 <__gcov_flush>
  4c:	add	x0, x29, #0x120
  50:	str	x0, [x29, #64]
  54:	add	x0, x29, #0x120
  58:	str	x0, [x29, #72]
  5c:	add	x0, x29, #0xf0
  60:	str	x0, [x29, #80]
  64:	mov	w0, #0xffffffd0            	// #-48
  68:	str	w0, [x29, #88]
  6c:	mov	w0, #0xffffff80            	// #-128
  70:	str	w0, [x29, #92]
  74:	add	x2, x29, #0x20
  78:	add	x3, x29, #0x40
  7c:	ldp	x0, x1, [x3]
  80:	stp	x0, x1, [x2]
  84:	ldp	x0, x1, [x3, #16]
  88:	stp	x0, x1, [x2, #16]
  8c:	mov	w0, #0x2                   	// #2
  90:	str	w0, [x29, #104]
  94:	b	a4 <__gcov_execlp+0xa4>
  98:	ldr	w0, [x29, #104]
  9c:	add	w0, w0, #0x1
  a0:	str	w0, [x29, #104]
  a4:	ldr	w1, [x29, #88]
  a8:	ldr	x0, [x29, #64]
  ac:	cmp	w1, #0x0
  b0:	b.lt	c4 <__gcov_execlp+0xc4>  // b.tstop
  b4:	add	x1, x0, #0xf
  b8:	and	x1, x1, #0xfffffffffffffff8
  bc:	str	x1, [x29, #64]
  c0:	b	f4 <__gcov_execlp+0xf4>
  c4:	add	w2, w1, #0x8
  c8:	str	w2, [x29, #88]
  cc:	ldr	w2, [x29, #88]
  d0:	cmp	w2, #0x0
  d4:	b.le	e8 <__gcov_execlp+0xe8>
  d8:	add	x1, x0, #0xf
  dc:	and	x1, x1, #0xfffffffffffffff8
  e0:	str	x1, [x29, #64]
  e4:	b	f4 <__gcov_execlp+0xf4>
  e8:	ldr	x2, [x29, #72]
  ec:	sxtw	x0, w1
  f0:	add	x0, x2, x0
  f4:	ldr	x0, [x0]
  f8:	cmp	x0, #0x0
  fc:	b.ne	98 <__gcov_execlp+0x98>  // b.any
 100:	ldr	w0, [x29, #104]
 104:	lsl	x0, x0, #3
 108:	add	x0, x0, #0xf
 10c:	lsr	x0, x0, #4
 110:	lsl	x0, x0, #4
 114:	sub	sp, sp, x0
 118:	mov	x0, sp
 11c:	add	x0, x0, #0xf
 120:	lsr	x0, x0, #4
 124:	lsl	x0, x0, #4
 128:	str	x0, [x29, #96]
 12c:	ldr	x0, [x29, #96]
 130:	ldr	x1, [x29, #16]
 134:	str	x1, [x0]
 138:	mov	w0, #0x1                   	// #1
 13c:	str	w0, [x29, #108]
 140:	b	1b8 <__gcov_execlp+0x1b8>
 144:	ldr	w0, [x29, #108]
 148:	lsl	x0, x0, #3
 14c:	ldr	x1, [x29, #96]
 150:	add	x2, x1, x0
 154:	ldr	w1, [x29, #56]
 158:	ldr	x0, [x29, #32]
 15c:	cmp	w1, #0x0
 160:	b.lt	174 <__gcov_execlp+0x174>  // b.tstop
 164:	add	x1, x0, #0xf
 168:	and	x1, x1, #0xfffffffffffffff8
 16c:	str	x1, [x29, #32]
 170:	b	1a4 <__gcov_execlp+0x1a4>
 174:	add	w3, w1, #0x8
 178:	str	w3, [x29, #56]
 17c:	ldr	w3, [x29, #56]
 180:	cmp	w3, #0x0
 184:	b.le	198 <__gcov_execlp+0x198>
 188:	add	x1, x0, #0xf
 18c:	and	x1, x1, #0xfffffffffffffff8
 190:	str	x1, [x29, #32]
 194:	b	1a4 <__gcov_execlp+0x1a4>
 198:	ldr	x3, [x29, #40]
 19c:	sxtw	x0, w1
 1a0:	add	x0, x3, x0
 1a4:	ldr	x0, [x0]
 1a8:	str	x0, [x2]
 1ac:	ldr	w0, [x29, #108]
 1b0:	add	w0, w0, #0x1
 1b4:	str	w0, [x29, #108]
 1b8:	ldr	w1, [x29, #108]
 1bc:	ldr	w0, [x29, #104]
 1c0:	cmp	w1, w0
 1c4:	b.cc	144 <__gcov_execlp+0x144>  // b.lo, b.ul, b.last
 1c8:	ldr	x1, [x29, #96]
 1cc:	ldr	x0, [x29, #24]
 1d0:	bl	0 <execvp>
 1d4:	mov	sp, x29
 1d8:	ldp	x29, x30, [sp], #288
 1dc:	ret

_gcov_execle.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_execle>:
   0:	stp	x29, x30, [sp, #-304]!
   4:	mov	x29, sp
   8:	str	x0, [x29, #24]
   c:	str	x1, [x29, #16]
  10:	str	x2, [x29, #256]
  14:	str	x3, [x29, #264]
  18:	str	x4, [x29, #272]
  1c:	str	x5, [x29, #280]
  20:	str	x6, [x29, #288]
  24:	str	x7, [x29, #296]
  28:	str	q0, [x29, #128]
  2c:	str	q1, [x29, #144]
  30:	str	q2, [x29, #160]
  34:	str	q3, [x29, #176]
  38:	str	q4, [x29, #192]
  3c:	str	q5, [x29, #208]
  40:	str	q6, [x29, #224]
  44:	str	q7, [x29, #240]
  48:	bl	0 <__gcov_flush>
  4c:	add	x0, x29, #0x130
  50:	str	x0, [x29, #72]
  54:	add	x0, x29, #0x130
  58:	str	x0, [x29, #80]
  5c:	add	x0, x29, #0x100
  60:	str	x0, [x29, #88]
  64:	mov	w0, #0xffffffd0            	// #-48
  68:	str	w0, [x29, #96]
  6c:	mov	w0, #0xffffff80            	// #-128
  70:	str	w0, [x29, #100]
  74:	add	x2, x29, #0x28
  78:	add	x3, x29, #0x48
  7c:	ldp	x0, x1, [x3]
  80:	stp	x0, x1, [x2]
  84:	ldp	x0, x1, [x3, #16]
  88:	stp	x0, x1, [x2, #16]
  8c:	mov	w0, #0x2                   	// #2
  90:	str	w0, [x29, #120]
  94:	b	a4 <__gcov_execle+0xa4>
  98:	ldr	w0, [x29, #120]
  9c:	add	w0, w0, #0x1
  a0:	str	w0, [x29, #120]
  a4:	ldr	w1, [x29, #96]
  a8:	ldr	x0, [x29, #72]
  ac:	cmp	w1, #0x0
  b0:	b.lt	c4 <__gcov_execle+0xc4>  // b.tstop
  b4:	add	x1, x0, #0xf
  b8:	and	x1, x1, #0xfffffffffffffff8
  bc:	str	x1, [x29, #72]
  c0:	b	f4 <__gcov_execle+0xf4>
  c4:	add	w2, w1, #0x8
  c8:	str	w2, [x29, #96]
  cc:	ldr	w2, [x29, #96]
  d0:	cmp	w2, #0x0
  d4:	b.le	e8 <__gcov_execle+0xe8>
  d8:	add	x1, x0, #0xf
  dc:	and	x1, x1, #0xfffffffffffffff8
  e0:	str	x1, [x29, #72]
  e4:	b	f4 <__gcov_execle+0xf4>
  e8:	ldr	x2, [x29, #80]
  ec:	sxtw	x0, w1
  f0:	add	x0, x2, x0
  f4:	ldr	x0, [x0]
  f8:	cmp	x0, #0x0
  fc:	b.ne	98 <__gcov_execle+0x98>  // b.any
 100:	ldr	w0, [x29, #120]
 104:	lsl	x0, x0, #3
 108:	add	x0, x0, #0xf
 10c:	lsr	x0, x0, #4
 110:	lsl	x0, x0, #4
 114:	sub	sp, sp, x0
 118:	mov	x0, sp
 11c:	add	x0, x0, #0xf
 120:	lsr	x0, x0, #4
 124:	lsl	x0, x0, #4
 128:	str	x0, [x29, #112]
 12c:	ldr	x0, [x29, #112]
 130:	ldr	x1, [x29, #16]
 134:	str	x1, [x0]
 138:	mov	w0, #0x1                   	// #1
 13c:	str	w0, [x29, #124]
 140:	b	1b8 <__gcov_execle+0x1b8>
 144:	ldr	w0, [x29, #124]
 148:	lsl	x0, x0, #3
 14c:	ldr	x1, [x29, #112]
 150:	add	x2, x1, x0
 154:	ldr	w1, [x29, #64]
 158:	ldr	x0, [x29, #40]
 15c:	cmp	w1, #0x0
 160:	b.lt	174 <__gcov_execle+0x174>  // b.tstop
 164:	add	x1, x0, #0xf
 168:	and	x1, x1, #0xfffffffffffffff8
 16c:	str	x1, [x29, #40]
 170:	b	1a4 <__gcov_execle+0x1a4>
 174:	add	w3, w1, #0x8
 178:	str	w3, [x29, #64]
 17c:	ldr	w3, [x29, #64]
 180:	cmp	w3, #0x0
 184:	b.le	198 <__gcov_execle+0x198>
 188:	add	x1, x0, #0xf
 18c:	and	x1, x1, #0xfffffffffffffff8
 190:	str	x1, [x29, #40]
 194:	b	1a4 <__gcov_execle+0x1a4>
 198:	ldr	x3, [x29, #48]
 19c:	sxtw	x0, w1
 1a0:	add	x0, x3, x0
 1a4:	ldr	x0, [x0]
 1a8:	str	x0, [x2]
 1ac:	ldr	w0, [x29, #124]
 1b0:	add	w0, w0, #0x1
 1b4:	str	w0, [x29, #124]
 1b8:	ldr	w1, [x29, #124]
 1bc:	ldr	w0, [x29, #120]
 1c0:	cmp	w1, w0
 1c4:	b.cc	144 <__gcov_execle+0x144>  // b.lo, b.ul, b.last
 1c8:	ldr	w1, [x29, #64]
 1cc:	ldr	x0, [x29, #40]
 1d0:	cmp	w1, #0x0
 1d4:	b.lt	1e8 <__gcov_execle+0x1e8>  // b.tstop
 1d8:	add	x1, x0, #0xf
 1dc:	and	x1, x1, #0xfffffffffffffff8
 1e0:	str	x1, [x29, #40]
 1e4:	b	218 <__gcov_execle+0x218>
 1e8:	add	w2, w1, #0x8
 1ec:	str	w2, [x29, #64]
 1f0:	ldr	w2, [x29, #64]
 1f4:	cmp	w2, #0x0
 1f8:	b.le	20c <__gcov_execle+0x20c>
 1fc:	add	x1, x0, #0xf
 200:	and	x1, x1, #0xfffffffffffffff8
 204:	str	x1, [x29, #40]
 208:	b	218 <__gcov_execle+0x218>
 20c:	ldr	x2, [x29, #48]
 210:	sxtw	x0, w1
 214:	add	x0, x2, x0
 218:	ldr	x0, [x0]
 21c:	str	x0, [x29, #104]
 220:	ldr	x2, [x29, #104]
 224:	ldr	x1, [x29, #112]
 228:	ldr	x0, [x29, #24]
 22c:	bl	0 <execve>
 230:	mov	sp, x29
 234:	ldp	x29, x30, [sp], #304
 238:	ret

_gcov_execv.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_execv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	x1, [sp, #16]
  10:	bl	0 <__gcov_flush>
  14:	ldr	x1, [sp, #16]
  18:	ldr	x0, [sp, #24]
  1c:	bl	0 <execv>
  20:	ldp	x29, x30, [sp], #32
  24:	ret

_gcov_execvp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_execvp>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	x1, [sp, #16]
  10:	bl	0 <__gcov_flush>
  14:	ldr	x1, [sp, #16]
  18:	ldr	x0, [sp, #24]
  1c:	bl	0 <execvp>
  20:	ldp	x29, x30, [sp], #32
  24:	ret

_gcov_execve.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_execve>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #40]
   c:	str	x1, [sp, #32]
  10:	str	x2, [sp, #24]
  14:	bl	0 <__gcov_flush>
  18:	ldr	x2, [sp, #24]
  1c:	ldr	x1, [sp, #32]
  20:	ldr	x0, [sp, #40]
  24:	bl	0 <execve>
  28:	ldp	x29, x30, [sp], #48
  2c:	ret

_gcov_reset.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <gcov_clear>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	str	x0, [sp, #56]
  14:	b	110 <gcov_clear+0x110>
  18:	str	wzr, [sp, #52]
  1c:	b	f0 <gcov_clear+0xf0>
  20:	ldr	x0, [sp, #56]
  24:	ldr	x1, [x0, #112]
  28:	ldr	w0, [sp, #52]
  2c:	lsl	x0, x0, #3
  30:	add	x0, x1, x0
  34:	ldr	x0, [x0]
  38:	str	x0, [sp, #32]
  3c:	ldr	x0, [sp, #32]
  40:	cmp	x0, #0x0
  44:	b.eq	e0 <gcov_clear+0xe0>  // b.none
  48:	ldr	x0, [sp, #32]
  4c:	ldr	x0, [x0]
  50:	ldr	x1, [sp, #56]
  54:	cmp	x1, x0
  58:	b.ne	e0 <gcov_clear+0xe0>  // b.any
  5c:	ldr	x0, [sp, #32]
  60:	add	x0, x0, #0x18
  64:	str	x0, [sp, #40]
  68:	str	wzr, [sp, #48]
  6c:	b	d0 <gcov_clear+0xd0>
  70:	ldr	x0, [sp, #56]
  74:	ldr	w1, [sp, #48]
  78:	add	x1, x1, #0x4
  7c:	ldr	x0, [x0, x1, lsl #3]
  80:	cmp	x0, #0x0
  84:	b.eq	c0 <gcov_clear+0xc0>  // b.none
  88:	ldr	x0, [sp, #40]
  8c:	ldr	x3, [x0, #8]
  90:	ldr	x0, [sp, #40]
  94:	ldr	w0, [x0]
  98:	mov	w0, w0
  9c:	lsl	x0, x0, #3
  a0:	mov	x2, x0
  a4:	mov	w1, #0x0                   	// #0
  a8:	mov	x0, x3
  ac:	bl	0 <memset>
  b0:	ldr	x0, [sp, #40]
  b4:	add	x0, x0, #0x10
  b8:	str	x0, [sp, #40]
  bc:	b	c4 <gcov_clear+0xc4>
  c0:	nop
  c4:	ldr	w0, [sp, #48]
  c8:	add	w0, w0, #0x1
  cc:	str	w0, [sp, #48]
  d0:	ldr	w0, [sp, #48]
  d4:	cmp	w0, #0x9
  d8:	b.ne	70 <gcov_clear+0x70>  // b.any
  dc:	b	e4 <gcov_clear+0xe4>
  e0:	nop
  e4:	ldr	w0, [sp, #52]
  e8:	add	w0, w0, #0x1
  ec:	str	w0, [sp, #52]
  f0:	ldr	x0, [sp, #56]
  f4:	ldr	w0, [x0, #104]
  f8:	ldr	w1, [sp, #52]
  fc:	cmp	w1, w0
 100:	b.cc	20 <gcov_clear+0x20>  // b.lo, b.ul, b.last
 104:	ldr	x0, [sp, #56]
 108:	ldr	x0, [x0, #8]
 10c:	str	x0, [sp, #56]
 110:	ldr	x0, [sp, #56]
 114:	cmp	x0, #0x0
 118:	b.ne	18 <gcov_clear+0x18>  // b.any
 11c:	nop
 120:	nop
 124:	ldp	x29, x30, [sp], #64
 128:	ret

000000000000012c <__gcov_reset_int>:
 12c:	stp	x29, x30, [sp, #-32]!
 130:	mov	x29, sp
 134:	adrp	x0, 0 <__gcov_master>
 138:	ldr	x0, [x0]
 13c:	ldr	w1, [x0]
 140:	mov	w0, #0x322a                	// #12842
 144:	movk	w0, #0x4139, lsl #16
 148:	cmp	w1, w0
 14c:	b.ne	160 <__gcov_reset_int+0x34>  // b.any
 150:	adrp	x0, 0 <__gcov_master>
 154:	ldr	x0, [x0]
 158:	ldr	x0, [x0, #8]
 15c:	b	168 <__gcov_reset_int+0x3c>
 160:	adrp	x0, 0 <__gcov_root>
 164:	add	x0, x0, #0x0
 168:	str	x0, [sp, #24]
 16c:	b	198 <__gcov_reset_int+0x6c>
 170:	ldr	x0, [sp, #24]
 174:	ldr	x0, [x0]
 178:	bl	0 <gcov_clear>
 17c:	ldr	x0, [sp, #24]
 180:	ldrb	w1, [x0, #8]
 184:	and	w1, w1, #0xfffffffe
 188:	strb	w1, [x0, #8]
 18c:	ldr	x0, [sp, #24]
 190:	ldr	x0, [x0, #16]
 194:	str	x0, [sp, #24]
 198:	ldr	x0, [sp, #24]
 19c:	cmp	x0, #0x0
 1a0:	b.ne	170 <__gcov_reset_int+0x44>  // b.any
 1a4:	nop
 1a8:	nop
 1ac:	ldp	x29, x30, [sp], #32
 1b0:	ret

00000000000001b4 <__gcov_reset>:
 1b4:	stp	x29, x30, [sp, #-16]!
 1b8:	mov	x29, sp
 1bc:	bl	12c <__gcov_reset_int>
 1c0:	nop
 1c4:	ldp	x29, x30, [sp], #16
 1c8:	ret

_gcov.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__gcov_is_error>:
       0:	adrp	x0, 1028 <gcov_error+0x4c>
       4:	ldr	x0, [x0]
       8:	ldr	x0, [x0]
       c:	cmp	x0, #0x0
      10:	b.eq	24 <__gcov_is_error+0x24>  // b.none
      14:	adrp	x0, 1028 <gcov_error+0x4c>
      18:	ldr	x0, [x0]
      1c:	ldr	w0, [x0, #24]
      20:	b	28 <__gcov_is_error+0x28>
      24:	mov	w0, #0x1                   	// #1
      28:	ret

000000000000002c <__gcov_rewrite>:
      2c:	stp	x29, x30, [sp, #-16]!
      30:	mov	x29, sp
      34:	adrp	x0, 1028 <gcov_error+0x4c>
      38:	ldr	x0, [x0]
      3c:	mov	w1, #0xffffffff            	// #-1
      40:	str	w1, [x0, #28]
      44:	adrp	x0, 1028 <gcov_error+0x4c>
      48:	ldr	x0, [x0]
      4c:	str	wzr, [x0, #8]
      50:	adrp	x0, 1028 <gcov_error+0x4c>
      54:	ldr	x0, [x0]
      58:	str	wzr, [x0, #12]
      5c:	adrp	x0, 1028 <gcov_error+0x4c>
      60:	ldr	x0, [x0]
      64:	ldr	x0, [x0]
      68:	mov	w2, #0x0                   	// #0
      6c:	mov	x1, #0x0                   	// #0
      70:	bl	0 <fseek>
      74:	nop
      78:	ldp	x29, x30, [sp], #16
      7c:	ret

0000000000000080 <from_file>:
      80:	sub	sp, sp, #0x10
      84:	str	w0, [sp, #12]
      88:	ldr	w0, [sp, #12]
      8c:	add	sp, sp, #0x10
      90:	ret

0000000000000094 <__gcov_open>:
      94:	stp	x29, x30, [sp, #-80]!
      98:	mov	x29, sp
      9c:	str	x0, [sp, #24]
      a0:	str	wzr, [sp, #72]
      a4:	strh	wzr, [sp, #42]
      a8:	str	xzr, [sp, #48]
      ac:	str	xzr, [sp, #56]
      b0:	bl	0 <getpid>
      b4:	str	w0, [sp, #64]
      b8:	adrp	x0, 1028 <gcov_error+0x4c>
      bc:	ldr	x0, [x0]
      c0:	str	wzr, [x0, #8]
      c4:	adrp	x0, 1028 <gcov_error+0x4c>
      c8:	ldr	x0, [x0]
      cc:	str	wzr, [x0, #16]
      d0:	adrp	x0, 1028 <gcov_error+0x4c>
      d4:	ldr	x0, [x0]
      d8:	ldr	w1, [x0, #16]
      dc:	adrp	x0, 1028 <gcov_error+0x4c>
      e0:	ldr	x0, [x0]
      e4:	str	w1, [x0, #12]
      e8:	adrp	x0, 1028 <gcov_error+0x4c>
      ec:	ldr	x0, [x0]
      f0:	mov	w1, #0xffffffff            	// #-1
      f4:	str	w1, [x0, #20]
      f8:	adrp	x0, 1028 <gcov_error+0x4c>
      fc:	ldr	x0, [x0]
     100:	str	wzr, [x0, #24]
     104:	ldr	w0, [sp, #72]
     108:	cmp	w0, #0x0
     10c:	b.le	12c <__gcov_open+0x98>
     110:	strh	wzr, [sp, #40]
     114:	mov	w2, #0x180                 	// #384
     118:	mov	w1, #0x0                   	// #0
     11c:	ldr	x0, [sp, #24]
     120:	bl	0 <open>
     124:	str	w0, [sp, #76]
     128:	b	15c <__gcov_open+0xc8>
     12c:	mov	w0, #0x1                   	// #1
     130:	strh	w0, [sp, #40]
     134:	ldr	w0, [sp, #72]
     138:	asr	w0, w0, #22
     13c:	and	w1, w0, #0x200
     140:	mov	w0, #0x42                  	// #66
     144:	orr	w0, w1, w0
     148:	mov	w2, #0x1b6                 	// #438
     14c:	mov	w1, w0
     150:	ldr	x0, [sp, #24]
     154:	bl	0 <open>
     158:	str	w0, [sp, #76]
     15c:	ldr	w0, [sp, #76]
     160:	cmp	w0, #0x0
     164:	b.ge	174 <__gcov_open+0xe0>  // b.tcont
     168:	mov	w0, #0x0                   	// #0
     16c:	b	23c <__gcov_open+0x1a8>
     170:	nop
     174:	add	x0, sp, #0x28
     178:	mov	x2, x0
     17c:	mov	w1, #0x7                   	// #7
     180:	ldr	w0, [sp, #76]
     184:	bl	0 <fcntl>
     188:	cmp	w0, #0x0
     18c:	b.eq	1a0 <__gcov_open+0x10c>  // b.none
     190:	bl	0 <__errno_location>
     194:	ldr	w0, [x0]
     198:	cmp	w0, #0x4
     19c:	b.eq	170 <__gcov_open+0xdc>  // b.none
     1a0:	ldr	w0, [sp, #72]
     1a4:	cmp	w0, #0x0
     1a8:	b.le	1b8 <__gcov_open+0x124>
     1ac:	adrp	x0, 0 <__gcov_is_error>
     1b0:	add	x0, x0, #0x0
     1b4:	b	1c0 <__gcov_open+0x12c>
     1b8:	adrp	x0, 0 <__gcov_is_error>
     1bc:	add	x0, x0, #0x0
     1c0:	mov	x1, x0
     1c4:	ldr	w0, [sp, #76]
     1c8:	bl	0 <fdopen>
     1cc:	mov	x1, x0
     1d0:	adrp	x0, 1028 <gcov_error+0x4c>
     1d4:	ldr	x0, [x0]
     1d8:	str	x1, [x0]
     1dc:	adrp	x0, 1028 <gcov_error+0x4c>
     1e0:	ldr	x0, [x0]
     1e4:	ldr	x0, [x0]
     1e8:	cmp	x0, #0x0
     1ec:	b.ne	200 <__gcov_open+0x16c>  // b.any
     1f0:	ldr	w0, [sp, #76]
     1f4:	bl	0 <close>
     1f8:	mov	w0, #0x0                   	// #0
     1fc:	b	23c <__gcov_open+0x1a8>
     200:	ldr	w0, [sp, #72]
     204:	cmp	w0, #0x0
     208:	b.eq	214 <__gcov_open+0x180>  // b.none
     20c:	ldr	w0, [sp, #72]
     210:	b	218 <__gcov_open+0x184>
     214:	mov	w0, #0x1                   	// #1
     218:	adrp	x1, 1028 <gcov_error+0x4c>
     21c:	ldr	x1, [x1]
     220:	str	w0, [x1, #28]
     224:	adrp	x0, 1028 <gcov_error+0x4c>
     228:	ldr	x0, [x0]
     22c:	ldr	x0, [x0]
     230:	mov	x1, #0x0                   	// #0
     234:	bl	0 <setbuf>
     238:	mov	w0, #0x1                   	// #1
     23c:	ldp	x29, x30, [sp], #80
     240:	ret

0000000000000244 <__gcov_close>:
     244:	stp	x29, x30, [sp, #-16]!
     248:	mov	x29, sp
     24c:	adrp	x0, 1028 <gcov_error+0x4c>
     250:	ldr	x0, [x0]
     254:	ldr	x0, [x0]
     258:	cmp	x0, #0x0
     25c:	b.eq	2c0 <__gcov_close+0x7c>  // b.none
     260:	adrp	x0, 1028 <gcov_error+0x4c>
     264:	ldr	x0, [x0]
     268:	ldr	w0, [x0, #12]
     26c:	cmp	w0, #0x0
     270:	b.eq	298 <__gcov_close+0x54>  // b.none
     274:	adrp	x0, 1028 <gcov_error+0x4c>
     278:	ldr	x0, [x0]
     27c:	ldr	w0, [x0, #28]
     280:	cmp	w0, #0x0
     284:	b.ge	298 <__gcov_close+0x54>  // b.tcont
     288:	adrp	x0, 1028 <gcov_error+0x4c>
     28c:	ldr	x0, [x0]
     290:	ldr	w0, [x0, #12]
     294:	bl	2e0 <gcov_write_block>
     298:	adrp	x0, 1028 <gcov_error+0x4c>
     29c:	ldr	x0, [x0]
     2a0:	ldr	x0, [x0]
     2a4:	bl	0 <fclose>
     2a8:	adrp	x0, 1028 <gcov_error+0x4c>
     2ac:	ldr	x0, [x0]
     2b0:	str	xzr, [x0]
     2b4:	adrp	x0, 1028 <gcov_error+0x4c>
     2b8:	ldr	x0, [x0]
     2bc:	str	wzr, [x0, #16]
     2c0:	adrp	x0, 1028 <gcov_error+0x4c>
     2c4:	ldr	x0, [x0]
     2c8:	str	wzr, [x0, #28]
     2cc:	adrp	x0, 1028 <gcov_error+0x4c>
     2d0:	ldr	x0, [x0]
     2d4:	ldr	w0, [x0, #24]
     2d8:	ldp	x29, x30, [sp], #16
     2dc:	ret

00000000000002e0 <gcov_write_block>:
     2e0:	stp	x29, x30, [sp, #-32]!
     2e4:	mov	x29, sp
     2e8:	str	w0, [sp, #28]
     2ec:	ldr	w0, [sp, #28]
     2f0:	lsl	w0, w0, #2
     2f4:	mov	w1, w0
     2f8:	adrp	x0, 1028 <gcov_error+0x4c>
     2fc:	ldr	x0, [x0]
     300:	ldr	x0, [x0]
     304:	mov	x3, x0
     308:	mov	x2, #0x1                   	// #1
     30c:	adrp	x0, 1028 <gcov_error+0x4c>
     310:	ldr	x0, [x0]
     314:	add	x0, x0, #0x20
     318:	bl	0 <fwrite>
     31c:	cmp	x0, #0x1
     320:	b.eq	334 <gcov_write_block+0x54>  // b.none
     324:	adrp	x0, 1028 <gcov_error+0x4c>
     328:	ldr	x0, [x0]
     32c:	mov	w1, #0x1                   	// #1
     330:	str	w1, [x0, #24]
     334:	adrp	x0, 1028 <gcov_error+0x4c>
     338:	ldr	x0, [x0]
     33c:	ldr	w1, [x0, #8]
     340:	ldr	w0, [sp, #28]
     344:	add	w1, w1, w0
     348:	adrp	x0, 1028 <gcov_error+0x4c>
     34c:	ldr	x0, [x0]
     350:	str	w1, [x0, #8]
     354:	adrp	x0, 1028 <gcov_error+0x4c>
     358:	ldr	x0, [x0]
     35c:	ldr	w1, [x0, #12]
     360:	ldr	w0, [sp, #28]
     364:	sub	w1, w1, w0
     368:	adrp	x0, 1028 <gcov_error+0x4c>
     36c:	ldr	x0, [x0]
     370:	str	w1, [x0, #12]
     374:	nop
     378:	ldp	x29, x30, [sp], #32
     37c:	ret

0000000000000380 <gcov_write_words>:
     380:	stp	x29, x30, [sp, #-48]!
     384:	mov	x29, sp
     388:	str	w0, [sp, #28]
     38c:	adrp	x0, 1028 <gcov_error+0x4c>
     390:	ldr	x0, [x0]
     394:	ldr	w0, [x0, #12]
     398:	cmp	w0, #0x3ff
     39c:	b.ls	3dc <gcov_write_words+0x5c>  // b.plast
     3a0:	mov	w0, #0x400                 	// #1024
     3a4:	bl	2e0 <gcov_write_block>
     3a8:	adrp	x0, 1028 <gcov_error+0x4c>
     3ac:	ldr	x0, [x0]
     3b0:	ldr	w0, [x0, #12]
     3b4:	cmp	w0, #0x0
     3b8:	b.eq	3dc <gcov_write_words+0x5c>  // b.none
     3bc:	adrp	x0, 1028 <gcov_error+0x4c>
     3c0:	ldr	x1, [x0]
     3c4:	mov	x0, #0x1020                	// #4128
     3c8:	add	x0, x1, x0
     3cc:	ldr	w1, [x0]
     3d0:	adrp	x0, 1028 <gcov_error+0x4c>
     3d4:	ldr	x0, [x0]
     3d8:	str	w1, [x0, #32]
     3dc:	adrp	x0, 1028 <gcov_error+0x4c>
     3e0:	ldr	x0, [x0]
     3e4:	ldr	w0, [x0, #12]
     3e8:	mov	w0, w0
     3ec:	add	x0, x0, #0x8
     3f0:	lsl	x1, x0, #2
     3f4:	adrp	x0, 1028 <gcov_error+0x4c>
     3f8:	ldr	x0, [x0]
     3fc:	add	x0, x1, x0
     400:	str	x0, [sp, #40]
     404:	adrp	x0, 1028 <gcov_error+0x4c>
     408:	ldr	x0, [x0]
     40c:	ldr	w1, [x0, #12]
     410:	ldr	w0, [sp, #28]
     414:	add	w1, w1, w0
     418:	adrp	x0, 1028 <gcov_error+0x4c>
     41c:	ldr	x0, [x0]
     420:	str	w1, [x0, #12]
     424:	ldr	x0, [sp, #40]
     428:	ldp	x29, x30, [sp], #48
     42c:	ret

0000000000000430 <__gcov_write_unsigned>:
     430:	stp	x29, x30, [sp, #-48]!
     434:	mov	x29, sp
     438:	str	w0, [sp, #28]
     43c:	mov	w0, #0x1                   	// #1
     440:	bl	380 <gcov_write_words>
     444:	str	x0, [sp, #40]
     448:	ldr	x0, [sp, #40]
     44c:	ldr	w1, [sp, #28]
     450:	str	w1, [x0]
     454:	nop
     458:	ldp	x29, x30, [sp], #48
     45c:	ret

0000000000000460 <__gcov_write_counter>:
     460:	stp	x29, x30, [sp, #-48]!
     464:	mov	x29, sp
     468:	str	x0, [sp, #24]
     46c:	mov	w0, #0x2                   	// #2
     470:	bl	380 <gcov_write_words>
     474:	str	x0, [sp, #40]
     478:	ldr	x0, [sp, #24]
     47c:	mov	w1, w0
     480:	ldr	x0, [sp, #40]
     484:	str	w1, [x0]
     488:	ldr	x0, [sp, #24]
     48c:	asr	x1, x0, #32
     490:	ldr	x0, [sp, #40]
     494:	add	x0, x0, #0x4
     498:	str	w1, [x0]
     49c:	nop
     4a0:	ldp	x29, x30, [sp], #48
     4a4:	ret

00000000000004a8 <__gcov_write_tag_length>:
     4a8:	stp	x29, x30, [sp, #-48]!
     4ac:	mov	x29, sp
     4b0:	str	w0, [sp, #28]
     4b4:	str	w1, [sp, #24]
     4b8:	mov	w0, #0x2                   	// #2
     4bc:	bl	380 <gcov_write_words>
     4c0:	str	x0, [sp, #40]
     4c4:	ldr	x0, [sp, #40]
     4c8:	ldr	w1, [sp, #28]
     4cc:	str	w1, [x0]
     4d0:	ldr	x0, [sp, #40]
     4d4:	add	x0, x0, #0x4
     4d8:	ldr	w1, [sp, #24]
     4dc:	str	w1, [x0]
     4e0:	nop
     4e4:	ldp	x29, x30, [sp], #48
     4e8:	ret

00000000000004ec <__gcov_write_summary>:
     4ec:	stp	x29, x30, [sp, #-32]!
     4f0:	mov	x29, sp
     4f4:	str	w0, [sp, #28]
     4f8:	str	x1, [sp, #16]
     4fc:	mov	w1, #0x2                   	// #2
     500:	ldr	w0, [sp, #28]
     504:	bl	4a8 <__gcov_write_tag_length>
     508:	ldr	x0, [sp, #16]
     50c:	ldr	w0, [x0]
     510:	bl	430 <__gcov_write_unsigned>
     514:	ldr	x0, [sp, #16]
     518:	ldr	x0, [x0, #8]
     51c:	bl	430 <__gcov_write_unsigned>
     520:	nop
     524:	ldp	x29, x30, [sp], #32
     528:	ret

000000000000052c <gcov_read_words>:
     52c:	stp	x29, x30, [sp, #-48]!
     530:	mov	x29, sp
     534:	str	w0, [sp, #28]
     538:	adrp	x0, 1028 <gcov_error+0x4c>
     53c:	ldr	x0, [x0]
     540:	ldr	w1, [x0, #16]
     544:	adrp	x0, 1028 <gcov_error+0x4c>
     548:	ldr	x0, [x0]
     54c:	ldr	w0, [x0, #12]
     550:	sub	w0, w1, w0
     554:	str	w0, [sp, #44]
     558:	adrp	x0, 1028 <gcov_error+0x4c>
     55c:	ldr	x0, [x0]
     560:	ldr	w0, [x0, #28]
     564:	cmp	w0, #0x0
     568:	b.gt	574 <gcov_read_words+0x48>
     56c:	mov	x0, #0x0                   	// #0
     570:	b	730 <gcov_read_words+0x204>
     574:	ldr	w1, [sp, #44]
     578:	ldr	w0, [sp, #28]
     57c:	cmp	w1, w0
     580:	b.cs	6e4 <gcov_read_words+0x1b8>  // b.hs, b.nlast
     584:	adrp	x0, 1028 <gcov_error+0x4c>
     588:	ldr	x0, [x0]
     58c:	ldr	w1, [x0, #8]
     590:	adrp	x0, 1028 <gcov_error+0x4c>
     594:	ldr	x0, [x0]
     598:	ldr	w0, [x0, #12]
     59c:	add	w1, w1, w0
     5a0:	adrp	x0, 1028 <gcov_error+0x4c>
     5a4:	ldr	x0, [x0]
     5a8:	str	w1, [x0, #8]
     5ac:	ldr	w0, [sp, #44]
     5b0:	cmp	w0, #0x0
     5b4:	b.eq	5ec <gcov_read_words+0xc0>  // b.none
     5b8:	adrp	x0, 1028 <gcov_error+0x4c>
     5bc:	ldr	x0, [x0]
     5c0:	ldr	w0, [x0, #12]
     5c4:	mov	w0, w0
     5c8:	lsl	x1, x0, #2
     5cc:	adrp	x0, 1028 <gcov_error+0x4c>
     5d0:	ldr	x0, [x0]
     5d4:	add	x0, x0, #0x20
     5d8:	add	x0, x1, x0
     5dc:	ldr	w1, [x0]
     5e0:	adrp	x0, 1028 <gcov_error+0x4c>
     5e4:	ldr	x0, [x0]
     5e8:	str	w1, [x0, #32]
     5ec:	adrp	x0, 1028 <gcov_error+0x4c>
     5f0:	ldr	x0, [x0]
     5f4:	str	wzr, [x0, #12]
     5f8:	adrp	x0, 1028 <gcov_error+0x4c>
     5fc:	ldr	x0, [x0]
     600:	ldr	w1, [sp, #44]
     604:	str	w1, [x0, #16]
     608:	mov	w0, #0x400                 	// #1024
     60c:	str	w0, [sp, #44]
     610:	adrp	x0, 1028 <gcov_error+0x4c>
     614:	ldr	x0, [x0]
     618:	ldr	w0, [x0, #16]
     61c:	mov	w0, w0
     620:	lsl	x1, x0, #2
     624:	adrp	x0, 1028 <gcov_error+0x4c>
     628:	ldr	x0, [x0]
     62c:	add	x0, x0, #0x20
     630:	add	x4, x1, x0
     634:	ldr	w0, [sp, #44]
     638:	lsl	w0, w0, #2
     63c:	mov	w1, w0
     640:	adrp	x0, 1028 <gcov_error+0x4c>
     644:	ldr	x0, [x0]
     648:	ldr	x0, [x0]
     64c:	mov	x3, x0
     650:	mov	x2, x1
     654:	mov	x1, #0x1                   	// #1
     658:	mov	x0, x4
     65c:	bl	0 <fread>
     660:	lsr	x0, x0, #2
     664:	str	w0, [sp, #44]
     668:	adrp	x0, 1028 <gcov_error+0x4c>
     66c:	ldr	x0, [x0]
     670:	ldr	w1, [x0, #16]
     674:	ldr	w0, [sp, #44]
     678:	add	w1, w1, w0
     67c:	adrp	x0, 1028 <gcov_error+0x4c>
     680:	ldr	x0, [x0]
     684:	str	w1, [x0, #16]
     688:	adrp	x0, 1028 <gcov_error+0x4c>
     68c:	ldr	x0, [x0]
     690:	ldr	w0, [x0, #16]
     694:	ldr	w1, [sp, #28]
     698:	cmp	w1, w0
     69c:	b.ls	6e4 <gcov_read_words+0x1b8>  // b.plast
     6a0:	adrp	x0, 1028 <gcov_error+0x4c>
     6a4:	ldr	x0, [x0]
     6a8:	ldr	w1, [x0, #20]
     6ac:	adrp	x0, 1028 <gcov_error+0x4c>
     6b0:	ldr	x0, [x0]
     6b4:	ldr	w0, [x0, #16]
     6b8:	ldr	w2, [sp, #28]
     6bc:	sub	w0, w2, w0
     6c0:	add	w1, w1, w0
     6c4:	adrp	x0, 1028 <gcov_error+0x4c>
     6c8:	ldr	x0, [x0]
     6cc:	str	w1, [x0, #20]
     6d0:	adrp	x0, 1028 <gcov_error+0x4c>
     6d4:	ldr	x0, [x0]
     6d8:	str	wzr, [x0, #16]
     6dc:	mov	x0, #0x0                   	// #0
     6e0:	b	730 <gcov_read_words+0x204>
     6e4:	adrp	x0, 1028 <gcov_error+0x4c>
     6e8:	ldr	x0, [x0]
     6ec:	ldr	w0, [x0, #12]
     6f0:	mov	w0, w0
     6f4:	add	x0, x0, #0x8
     6f8:	lsl	x1, x0, #2
     6fc:	adrp	x0, 1028 <gcov_error+0x4c>
     700:	ldr	x0, [x0]
     704:	add	x0, x1, x0
     708:	str	x0, [sp, #32]
     70c:	adrp	x0, 1028 <gcov_error+0x4c>
     710:	ldr	x0, [x0]
     714:	ldr	w1, [x0, #12]
     718:	ldr	w0, [sp, #28]
     71c:	add	w1, w1, w0
     720:	adrp	x0, 1028 <gcov_error+0x4c>
     724:	ldr	x0, [x0]
     728:	str	w1, [x0, #12]
     72c:	ldr	x0, [sp, #32]
     730:	ldp	x29, x30, [sp], #48
     734:	ret

0000000000000738 <__gcov_read_unsigned>:
     738:	stp	x29, x30, [sp, #-32]!
     73c:	mov	x29, sp
     740:	mov	w0, #0x1                   	// #1
     744:	bl	52c <gcov_read_words>
     748:	str	x0, [sp, #24]
     74c:	ldr	x0, [sp, #24]
     750:	cmp	x0, #0x0
     754:	b.ne	760 <__gcov_read_unsigned+0x28>  // b.any
     758:	mov	w0, #0x0                   	// #0
     75c:	b	774 <__gcov_read_unsigned+0x3c>
     760:	ldr	x0, [sp, #24]
     764:	ldr	w0, [x0]
     768:	bl	80 <from_file>
     76c:	str	w0, [sp, #20]
     770:	ldr	w0, [sp, #20]
     774:	ldp	x29, x30, [sp], #32
     778:	ret

000000000000077c <__gcov_read_counter>:
     77c:	stp	x29, x30, [sp, #-32]!
     780:	mov	x29, sp
     784:	mov	w0, #0x2                   	// #2
     788:	bl	52c <gcov_read_words>
     78c:	str	x0, [sp, #24]
     790:	ldr	x0, [sp, #24]
     794:	cmp	x0, #0x0
     798:	b.ne	7a4 <__gcov_read_counter+0x28>  // b.any
     79c:	mov	x0, #0x0                   	// #0
     7a0:	b	7e0 <__gcov_read_counter+0x64>
     7a4:	ldr	x0, [sp, #24]
     7a8:	ldr	w0, [x0]
     7ac:	bl	80 <from_file>
     7b0:	mov	w0, w0
     7b4:	str	x0, [sp, #16]
     7b8:	ldr	x0, [sp, #24]
     7bc:	add	x0, x0, #0x4
     7c0:	ldr	w0, [x0]
     7c4:	bl	80 <from_file>
     7c8:	mov	w0, w0
     7cc:	lsl	x0, x0, #32
     7d0:	ldr	x1, [sp, #16]
     7d4:	orr	x0, x1, x0
     7d8:	str	x0, [sp, #16]
     7dc:	ldr	x0, [sp, #16]
     7e0:	ldp	x29, x30, [sp], #32
     7e4:	ret

00000000000007e8 <mangle_path>:
     7e8:	stp	x29, x30, [sp, #-64]!
     7ec:	mov	x29, sp
     7f0:	str	x0, [sp, #24]
     7f4:	ldr	x0, [sp, #24]
     7f8:	bl	0 <strlen>
     7fc:	add	x0, x0, #0x1
     800:	bl	0 <malloc>
     804:	str	x0, [sp, #40]
     808:	ldr	x0, [sp, #40]
     80c:	str	x0, [sp, #48]
     810:	b	904 <mangle_path+0x11c>
     814:	ldr	x0, [sp, #24]
     818:	str	x0, [sp, #56]
     81c:	b	83c <mangle_path+0x54>
     820:	ldr	x0, [sp, #56]
     824:	ldrb	w0, [x0]
     828:	cmp	w0, #0x2f
     82c:	b.eq	850 <mangle_path+0x68>  // b.none
     830:	ldr	x0, [sp, #56]
     834:	add	x0, x0, #0x1
     838:	str	x0, [sp, #56]
     83c:	ldr	x0, [sp, #56]
     840:	ldrb	w0, [x0]
     844:	cmp	w0, #0x0
     848:	b.ne	820 <mangle_path+0x38>  // b.any
     84c:	b	854 <mangle_path+0x6c>
     850:	nop
     854:	ldr	x1, [sp, #56]
     858:	ldr	x0, [sp, #24]
     85c:	sub	x0, x1, x0
     860:	str	x0, [sp, #32]
     864:	ldr	x0, [sp, #32]
     868:	cmp	x0, #0x2
     86c:	b.ne	8ac <mangle_path+0xc4>  // b.any
     870:	ldr	x0, [sp, #24]
     874:	ldrb	w0, [x0]
     878:	cmp	w0, #0x2e
     87c:	b.ne	8ac <mangle_path+0xc4>  // b.any
     880:	ldr	x0, [sp, #24]
     884:	add	x0, x0, #0x1
     888:	ldrb	w0, [x0]
     88c:	cmp	w0, #0x2e
     890:	b.ne	8ac <mangle_path+0xc4>  // b.any
     894:	ldr	x0, [sp, #48]
     898:	add	x1, x0, #0x1
     89c:	str	x1, [sp, #48]
     8a0:	mov	w1, #0x5e                  	// #94
     8a4:	strb	w1, [x0]
     8a8:	b	8cc <mangle_path+0xe4>
     8ac:	ldr	x2, [sp, #32]
     8b0:	ldr	x1, [sp, #24]
     8b4:	ldr	x0, [sp, #48]
     8b8:	bl	0 <memcpy>
     8bc:	ldr	x1, [sp, #48]
     8c0:	ldr	x0, [sp, #32]
     8c4:	add	x0, x1, x0
     8c8:	str	x0, [sp, #48]
     8cc:	ldr	x0, [sp, #56]
     8d0:	ldrb	w0, [x0]
     8d4:	cmp	w0, #0x0
     8d8:	b.eq	8fc <mangle_path+0x114>  // b.none
     8dc:	ldr	x0, [sp, #48]
     8e0:	add	x1, x0, #0x1
     8e4:	str	x1, [sp, #48]
     8e8:	mov	w1, #0x23                  	// #35
     8ec:	strb	w1, [x0]
     8f0:	ldr	x0, [sp, #56]
     8f4:	add	x0, x0, #0x1
     8f8:	str	x0, [sp, #56]
     8fc:	ldr	x0, [sp, #56]
     900:	str	x0, [sp, #24]
     904:	ldr	x0, [sp, #24]
     908:	ldrb	w0, [x0]
     90c:	cmp	w0, #0x0
     910:	b.ne	814 <mangle_path+0x2c>  // b.any
     914:	ldr	x0, [sp, #48]
     918:	strb	wzr, [x0]
     91c:	ldr	x0, [sp, #40]
     920:	ldp	x29, x30, [sp], #64
     924:	ret

0000000000000928 <__gcov_read_summary>:
     928:	stp	x29, x30, [sp, #-32]!
     92c:	mov	x29, sp
     930:	str	x0, [sp, #24]
     934:	bl	738 <__gcov_read_unsigned>
     938:	mov	w1, w0
     93c:	ldr	x0, [sp, #24]
     940:	str	w1, [x0]
     944:	bl	738 <__gcov_read_unsigned>
     948:	mov	w1, w0
     94c:	ldr	x0, [sp, #24]
     950:	str	x1, [x0, #8]
     954:	nop
     958:	ldp	x29, x30, [sp], #32
     95c:	ret

0000000000000960 <__gcov_seek>:
     960:	stp	x29, x30, [sp, #-32]!
     964:	mov	x29, sp
     968:	str	w0, [sp, #28]
     96c:	adrp	x0, 1028 <gcov_error+0x4c>
     970:	ldr	x0, [x0]
     974:	ldr	w0, [x0, #12]
     978:	cmp	w0, #0x0
     97c:	b.eq	990 <__gcov_seek+0x30>  // b.none
     980:	adrp	x0, 1028 <gcov_error+0x4c>
     984:	ldr	x0, [x0]
     988:	ldr	w0, [x0, #12]
     98c:	bl	2e0 <gcov_write_block>
     990:	adrp	x0, 1028 <gcov_error+0x4c>
     994:	ldr	x0, [x0]
     998:	ldr	x3, [x0]
     99c:	ldr	w0, [sp, #28]
     9a0:	lsl	w0, w0, #2
     9a4:	mov	w0, w0
     9a8:	mov	w2, #0x0                   	// #0
     9ac:	mov	x1, x0
     9b0:	mov	x0, x3
     9b4:	bl	0 <fseek>
     9b8:	adrp	x0, 1028 <gcov_error+0x4c>
     9bc:	ldr	x0, [x0]
     9c0:	ldr	x0, [x0]
     9c4:	bl	0 <ftell>
     9c8:	asr	x0, x0, #2
     9cc:	mov	w1, w0
     9d0:	adrp	x0, 1028 <gcov_error+0x4c>
     9d4:	ldr	x0, [x0]
     9d8:	str	w1, [x0, #8]
     9dc:	nop
     9e0:	ldp	x29, x30, [sp], #32
     9e4:	ret

00000000000009e8 <free_fn_data>:
     9e8:	stp	x29, x30, [sp, #-64]!
     9ec:	mov	x29, sp
     9f0:	str	x0, [sp, #40]
     9f4:	str	x1, [sp, #32]
     9f8:	str	w2, [sp, #28]
     9fc:	str	wzr, [sp, #56]
     a00:	ldr	x0, [sp, #32]
     a04:	cmp	x0, #0x0
     a08:	b.ne	a14 <free_fn_data+0x2c>  // b.any
     a0c:	mov	x0, #0x0                   	// #0
     a10:	b	a90 <free_fn_data+0xa8>
     a14:	ldr	x0, [sp, #32]
     a18:	ldr	x0, [x0]
     a1c:	str	x0, [sp, #48]
     a20:	str	wzr, [sp, #60]
     a24:	b	a74 <free_fn_data+0x8c>
     a28:	ldr	x0, [sp, #40]
     a2c:	ldr	w1, [sp, #60]
     a30:	add	x1, x1, #0x4
     a34:	ldr	x0, [x0, x1, lsl #3]
     a38:	cmp	x0, #0x0
     a3c:	b.eq	a68 <free_fn_data+0x80>  // b.none
     a40:	ldr	w0, [sp, #56]
     a44:	add	w1, w0, #0x1
     a48:	str	w1, [sp, #56]
     a4c:	ldr	x1, [sp, #32]
     a50:	mov	w0, w0
     a54:	add	x0, x0, #0x2
     a58:	lsl	x0, x0, #4
     a5c:	add	x0, x1, x0
     a60:	ldr	x0, [x0, #16]
     a64:	bl	0 <free>
     a68:	ldr	w0, [sp, #60]
     a6c:	add	w0, w0, #0x1
     a70:	str	w0, [sp, #60]
     a74:	ldr	w1, [sp, #60]
     a78:	ldr	w0, [sp, #28]
     a7c:	cmp	w1, w0
     a80:	b.ne	a28 <free_fn_data+0x40>  // b.any
     a84:	ldr	x0, [sp, #32]
     a88:	bl	0 <free>
     a8c:	ldr	x0, [sp, #48]
     a90:	ldp	x29, x30, [sp], #64
     a94:	ret

0000000000000a98 <buffer_fn_data>:
     a98:	stp	x29, x30, [sp, #-96]!
     a9c:	mov	x29, sp
     aa0:	str	x19, [sp, #16]
     aa4:	str	x0, [sp, #56]
     aa8:	str	x1, [sp, #48]
     aac:	str	x2, [sp, #40]
     ab0:	str	w3, [sp, #36]
     ab4:	str	wzr, [sp, #92]
     ab8:	str	wzr, [sp, #88]
     abc:	mov	w0, #0x9                   	// #9
     ac0:	str	w0, [sp, #88]
     ac4:	b	aec <buffer_fn_data+0x54>
     ac8:	ldr	x0, [sp, #48]
     acc:	ldr	w1, [sp, #88]
     ad0:	add	x1, x1, #0x4
     ad4:	ldr	x0, [x0, x1, lsl #3]
     ad8:	cmp	x0, #0x0
     adc:	b.eq	aec <buffer_fn_data+0x54>  // b.none
     ae0:	ldr	w0, [sp, #92]
     ae4:	add	w0, w0, #0x1
     ae8:	str	w0, [sp, #92]
     aec:	ldr	w0, [sp, #88]
     af0:	sub	w1, w0, #0x1
     af4:	str	w1, [sp, #88]
     af8:	cmp	w0, #0x0
     afc:	b.ne	ac8 <buffer_fn_data+0x30>  // b.any
     b00:	ldr	w0, [sp, #92]
     b04:	lsl	w0, w0, #4
     b08:	add	w0, w0, #0x38
     b0c:	str	w0, [sp, #84]
     b10:	ldr	w0, [sp, #84]
     b14:	bl	0 <malloc>
     b18:	str	x0, [sp, #64]
     b1c:	ldr	x0, [sp, #64]
     b20:	cmp	x0, #0x0
     b24:	b.eq	c90 <buffer_fn_data+0x1f8>  // b.none
     b28:	ldr	x0, [sp, #64]
     b2c:	str	xzr, [x0]
     b30:	ldr	x0, [sp, #64]
     b34:	ldr	w1, [sp, #36]
     b38:	str	w1, [x0, #8]
     b3c:	bl	738 <__gcov_read_unsigned>
     b40:	mov	w1, w0
     b44:	ldr	x0, [sp, #64]
     b48:	str	w1, [x0, #24]
     b4c:	bl	738 <__gcov_read_unsigned>
     b50:	mov	w1, w0
     b54:	ldr	x0, [sp, #64]
     b58:	str	w1, [x0, #28]
     b5c:	bl	738 <__gcov_read_unsigned>
     b60:	mov	w1, w0
     b64:	ldr	x0, [sp, #64]
     b68:	str	w1, [x0, #32]
     b6c:	str	wzr, [sp, #88]
     b70:	ldr	w0, [sp, #88]
     b74:	str	w0, [sp, #92]
     b78:	b	c70 <buffer_fn_data+0x1d8>
     b7c:	ldr	x0, [sp, #48]
     b80:	ldr	w1, [sp, #88]
     b84:	add	x1, x1, #0x4
     b88:	ldr	x0, [x0, x1, lsl #3]
     b8c:	cmp	x0, #0x0
     b90:	b.eq	c60 <buffer_fn_data+0x1c8>  // b.none
     b94:	bl	738 <__gcov_read_unsigned>
     b98:	mov	w2, w0
     b9c:	ldr	w0, [sp, #88]
     ba0:	lsl	w1, w0, #17
     ba4:	mov	w0, #0x1a10000             	// #27328512
     ba8:	add	w0, w1, w0
     bac:	cmp	w2, w0
     bb0:	b.eq	bbc <buffer_fn_data+0x124>  // b.none
     bb4:	str	wzr, [sp, #84]
     bb8:	b	c9c <buffer_fn_data+0x204>
     bbc:	bl	738 <__gcov_read_unsigned>
     bc0:	lsr	w0, w0, #1
     bc4:	str	w0, [sp, #80]
     bc8:	ldr	w0, [sp, #80]
     bcc:	lsl	w0, w0, #3
     bd0:	str	w0, [sp, #84]
     bd4:	ldr	w0, [sp, #84]
     bd8:	bl	0 <malloc>
     bdc:	str	x0, [sp, #72]
     be0:	ldr	x0, [sp, #72]
     be4:	cmp	x0, #0x0
     be8:	b.eq	c98 <buffer_fn_data+0x200>  // b.none
     bec:	ldr	x1, [sp, #64]
     bf0:	ldr	w0, [sp, #92]
     bf4:	add	x0, x0, #0x2
     bf8:	lsl	x0, x0, #4
     bfc:	add	x0, x1, x0
     c00:	ldr	w1, [sp, #80]
     c04:	str	w1, [x0, #8]
     c08:	ldr	x1, [sp, #64]
     c0c:	ldr	w0, [sp, #92]
     c10:	add	x0, x0, #0x2
     c14:	lsl	x0, x0, #4
     c18:	add	x0, x1, x0
     c1c:	ldr	x1, [sp, #72]
     c20:	str	x1, [x0, #16]
     c24:	b	c3c <buffer_fn_data+0x1a4>
     c28:	ldr	x19, [sp, #72]
     c2c:	add	x0, x19, #0x8
     c30:	str	x0, [sp, #72]
     c34:	bl	77c <__gcov_read_counter>
     c38:	str	x0, [x19]
     c3c:	ldr	w0, [sp, #80]
     c40:	sub	w1, w0, #0x1
     c44:	str	w1, [sp, #80]
     c48:	cmp	w0, #0x0
     c4c:	b.ne	c28 <buffer_fn_data+0x190>  // b.any
     c50:	ldr	w0, [sp, #92]
     c54:	add	w0, w0, #0x1
     c58:	str	w0, [sp, #92]
     c5c:	b	c64 <buffer_fn_data+0x1cc>
     c60:	nop
     c64:	ldr	w0, [sp, #88]
     c68:	add	w0, w0, #0x1
     c6c:	str	w0, [sp, #88]
     c70:	ldr	w0, [sp, #88]
     c74:	cmp	w0, #0x9
     c78:	b.ne	b7c <buffer_fn_data+0xe4>  // b.any
     c7c:	ldr	x0, [sp, #40]
     c80:	ldr	x1, [sp, #64]
     c84:	str	x1, [x0]
     c88:	ldr	x0, [sp, #64]
     c8c:	b	d04 <buffer_fn_data+0x26c>
     c90:	nop
     c94:	b	c9c <buffer_fn_data+0x204>
     c98:	nop
     c9c:	ldr	w0, [sp, #84]
     ca0:	cmp	w0, #0x0
     ca4:	b.eq	cb4 <buffer_fn_data+0x21c>  // b.none
     ca8:	adrp	x0, 0 <__gcov_is_error>
     cac:	add	x0, x0, #0x0
     cb0:	b	cbc <buffer_fn_data+0x224>
     cb4:	adrp	x0, 0 <__gcov_is_error>
     cb8:	add	x0, x0, #0x0
     cbc:	ldr	w1, [sp, #84]
     cc0:	cmp	w1, #0x0
     cc4:	b.eq	cd0 <buffer_fn_data+0x238>  // b.none
     cc8:	ldr	w1, [sp, #84]
     ccc:	b	cd4 <buffer_fn_data+0x23c>
     cd0:	ldr	w1, [sp, #88]
     cd4:	mov	w4, w1
     cd8:	mov	x3, x0
     cdc:	ldr	w2, [sp, #36]
     ce0:	ldr	x1, [sp, #56]
     ce4:	adrp	x0, 0 <__gcov_is_error>
     ce8:	add	x0, x0, #0x0
     cec:	bl	fdc <gcov_error>
     cf0:	ldr	w2, [sp, #88]
     cf4:	ldr	x1, [sp, #64]
     cf8:	ldr	x0, [sp, #48]
     cfc:	bl	9e8 <free_fn_data>
     d00:	nop
     d04:	ldr	x19, [sp, #16]
     d08:	ldp	x29, x30, [sp], #96
     d0c:	ret

0000000000000d10 <gcov_version_string>:
     d10:	stp	x29, x30, [sp, #-48]!
     d14:	mov	x29, sp
     d18:	str	x0, [sp, #24]
     d1c:	str	x1, [sp, #16]
     d20:	ldr	x0, [sp, #16]
     d24:	ldrb	w0, [x0]
     d28:	cmp	w0, #0x40
     d2c:	b.ls	d90 <gcov_version_string+0x80>  // b.plast
     d30:	ldr	x0, [sp, #16]
     d34:	ldrb	w0, [x0]
     d38:	cmp	w0, #0x5a
     d3c:	b.hi	d90 <gcov_version_string+0x80>  // b.pmore
     d40:	ldr	x0, [sp, #16]
     d44:	add	x0, x0, #0x1
     d48:	ldrb	w0, [x0]
     d4c:	cmp	w0, #0x2f
     d50:	b.ls	d90 <gcov_version_string+0x80>  // b.plast
     d54:	ldr	x0, [sp, #16]
     d58:	add	x0, x0, #0x1
     d5c:	ldrb	w0, [x0]
     d60:	cmp	w0, #0x39
     d64:	b.hi	d90 <gcov_version_string+0x80>  // b.pmore
     d68:	ldr	x0, [sp, #16]
     d6c:	add	x0, x0, #0x2
     d70:	ldrb	w0, [x0]
     d74:	cmp	w0, #0x2f
     d78:	b.ls	d90 <gcov_version_string+0x80>  // b.plast
     d7c:	ldr	x0, [sp, #16]
     d80:	add	x0, x0, #0x2
     d84:	ldrb	w0, [x0]
     d88:	cmp	w0, #0x39
     d8c:	b.ls	da4 <gcov_version_string+0x94>  // b.plast
     d90:	adrp	x0, 0 <__gcov_is_error>
     d94:	add	x1, x0, #0x0
     d98:	ldr	x0, [sp, #24]
     d9c:	bl	0 <sprintf>
     da0:	b	e34 <gcov_version_string+0x124>
     da4:	ldr	x0, [sp, #16]
     da8:	ldrb	w0, [x0]
     dac:	sub	w1, w0, #0x41
     db0:	mov	w0, w1
     db4:	lsl	w0, w0, #2
     db8:	add	w0, w0, w1
     dbc:	lsl	w0, w0, #1
     dc0:	mov	w1, w0
     dc4:	ldr	x0, [sp, #16]
     dc8:	add	x0, x0, #0x1
     dcc:	ldrb	w0, [x0]
     dd0:	sub	w0, w0, #0x30
     dd4:	add	w0, w1, w0
     dd8:	str	w0, [sp, #44]
     ddc:	ldr	x0, [sp, #16]
     de0:	add	x0, x0, #0x2
     de4:	ldrb	w0, [x0]
     de8:	sub	w0, w0, #0x30
     dec:	str	w0, [sp, #40]
     df0:	ldr	x0, [sp, #16]
     df4:	add	x0, x0, #0x3
     df8:	ldrb	w0, [x0]
     dfc:	cmp	w0, #0x2a
     e00:	b.ne	e10 <gcov_version_string+0x100>  // b.any
     e04:	adrp	x0, 0 <__gcov_is_error>
     e08:	add	x0, x0, #0x0
     e0c:	b	e18 <gcov_version_string+0x108>
     e10:	adrp	x0, 0 <__gcov_is_error>
     e14:	add	x0, x0, #0x0
     e18:	mov	x4, x0
     e1c:	ldr	w3, [sp, #40]
     e20:	ldr	w2, [sp, #44]
     e24:	adrp	x0, 0 <__gcov_is_error>
     e28:	add	x1, x0, #0x0
     e2c:	ldr	x0, [sp, #24]
     e30:	bl	0 <sprintf>
     e34:	ldr	x0, [sp, #24]
     e38:	ldp	x29, x30, [sp], #48
     e3c:	ret

0000000000000e40 <gcov_version>:
     e40:	stp	x29, x30, [sp, #-336]!
     e44:	mov	x29, sp
     e48:	stp	x19, x20, [sp, #16]
     e4c:	str	x0, [sp, #56]
     e50:	str	w1, [sp, #52]
     e54:	str	x2, [sp, #40]
     e58:	ldr	w1, [sp, #52]
     e5c:	mov	w0, #0x322a                	// #12842
     e60:	movk	w0, #0x4139, lsl #16
     e64:	cmp	w1, w0
     e68:	b.eq	f34 <gcov_version+0xf4>  // b.none
     e6c:	ldr	w0, [sp, #52]
     e70:	lsr	w0, w0, #24
     e74:	and	w0, w0, #0xff
     e78:	strb	w0, [sp, #328]
     e7c:	ldr	w0, [sp, #52]
     e80:	lsr	w0, w0, #16
     e84:	and	w0, w0, #0xff
     e88:	strb	w0, [sp, #329]
     e8c:	ldr	w0, [sp, #52]
     e90:	lsr	w0, w0, #8
     e94:	and	w0, w0, #0xff
     e98:	strb	w0, [sp, #330]
     e9c:	ldr	w0, [sp, #52]
     ea0:	and	w0, w0, #0xff
     ea4:	strb	w0, [sp, #331]
     ea8:	mov	w0, #0x41                  	// #65
     eac:	strb	w0, [sp, #320]
     eb0:	mov	w0, #0x39                  	// #57
     eb4:	strb	w0, [sp, #321]
     eb8:	mov	w0, #0x32                  	// #50
     ebc:	strb	w0, [sp, #322]
     ec0:	mov	w0, #0x2a                  	// #42
     ec4:	strb	w0, [sp, #323]
     ec8:	ldr	x0, [sp, #40]
     ecc:	cmp	x0, #0x0
     ed0:	b.ne	ee0 <gcov_version+0xa0>  // b.any
     ed4:	ldr	x0, [sp, #56]
     ed8:	ldr	x19, [x0, #24]
     edc:	b	ee4 <gcov_version+0xa4>
     ee0:	ldr	x19, [sp, #40]
     ee4:	add	x1, sp, #0x140
     ee8:	add	x0, sp, #0xc0
     eec:	bl	d10 <gcov_version_string>
     ef0:	mov	x20, x0
     ef4:	add	x1, sp, #0x148
     ef8:	add	x0, sp, #0x40
     efc:	bl	d10 <gcov_version_string>
     f00:	mov	x2, x0
     f04:	add	x1, sp, #0x148
     f08:	add	x0, sp, #0x140
     f0c:	mov	x5, x1
     f10:	mov	x4, x2
     f14:	mov	x3, x0
     f18:	mov	x2, x20
     f1c:	mov	x1, x19
     f20:	adrp	x0, 0 <__gcov_is_error>
     f24:	add	x0, x0, #0x0
     f28:	bl	fdc <gcov_error>
     f2c:	mov	w0, #0x0                   	// #0
     f30:	b	f38 <gcov_version+0xf8>
     f34:	mov	w0, #0x1                   	// #1
     f38:	ldp	x19, x20, [sp, #16]
     f3c:	ldp	x29, x30, [sp], #336
     f40:	ret

0000000000000f44 <get_gcov_error_file>:
     f44:	stp	x29, x30, [sp, #-32]!
     f48:	mov	x29, sp
     f4c:	adrp	x0, 0 <__gcov_is_error>
     f50:	ldr	x0, [x0]
     f54:	ldr	x0, [x0]
     f58:	cmp	x0, #0x0
     f5c:	b.ne	fc8 <get_gcov_error_file+0x84>  // b.any
     f60:	adrp	x0, 0 <__gcov_is_error>
     f64:	add	x0, x0, #0x0
     f68:	bl	0 <getenv>
     f6c:	str	x0, [sp, #24]
     f70:	ldr	x0, [sp, #24]
     f74:	cmp	x0, #0x0
     f78:	b.eq	f9c <get_gcov_error_file+0x58>  // b.none
     f7c:	adrp	x0, 0 <__gcov_is_error>
     f80:	add	x1, x0, #0x0
     f84:	ldr	x0, [sp, #24]
     f88:	bl	0 <fopen>
     f8c:	mov	x1, x0
     f90:	adrp	x0, 0 <__gcov_is_error>
     f94:	ldr	x0, [x0]
     f98:	str	x1, [x0]
     f9c:	adrp	x0, 0 <__gcov_is_error>
     fa0:	ldr	x0, [x0]
     fa4:	ldr	x0, [x0]
     fa8:	cmp	x0, #0x0
     fac:	b.ne	fc8 <get_gcov_error_file+0x84>  // b.any
     fb0:	adrp	x0, 0 <stderr>
     fb4:	ldr	x0, [x0]
     fb8:	ldr	x1, [x0]
     fbc:	adrp	x0, 0 <__gcov_is_error>
     fc0:	ldr	x0, [x0]
     fc4:	str	x1, [x0]
     fc8:	adrp	x0, 0 <__gcov_is_error>
     fcc:	ldr	x0, [x0]
     fd0:	ldr	x0, [x0]
     fd4:	ldp	x29, x30, [sp], #32
     fd8:	ret

0000000000000fdc <gcov_error>:
     fdc:	stp	x29, x30, [sp, #-304]!
     fe0:	mov	x29, sp
     fe4:	str	x0, [sp, #56]
     fe8:	str	x1, [sp, #248]
     fec:	str	x2, [sp, #256]
     ff0:	str	x3, [sp, #264]
     ff4:	str	x4, [sp, #272]
     ff8:	str	x5, [sp, #280]
     ffc:	str	x6, [sp, #288]
    1000:	str	x7, [sp, #296]
    1004:	str	q0, [sp, #112]
    1008:	str	q1, [sp, #128]
    100c:	str	q2, [sp, #144]
    1010:	str	q3, [sp, #160]
    1014:	str	q4, [sp, #176]
    1018:	str	q5, [sp, #192]
    101c:	str	q6, [sp, #208]
    1020:	str	q7, [sp, #224]
    1024:	add	x0, sp, #0x130
    1028:	str	x0, [sp, #64]
    102c:	add	x0, sp, #0x130
    1030:	str	x0, [sp, #72]
    1034:	add	x0, sp, #0xf0
    1038:	str	x0, [sp, #80]
    103c:	mov	w0, #0xffffffc8            	// #-56
    1040:	str	w0, [sp, #88]
    1044:	mov	w0, #0xffffff80            	// #-128
    1048:	str	w0, [sp, #92]
    104c:	bl	f44 <get_gcov_error_file>
    1050:	str	x0, [sp, #104]
    1054:	add	x2, sp, #0x10
    1058:	add	x3, sp, #0x40
    105c:	ldp	x0, x1, [x3]
    1060:	stp	x0, x1, [x2]
    1064:	ldp	x0, x1, [x3, #16]
    1068:	stp	x0, x1, [x2, #16]
    106c:	add	x0, sp, #0x10
    1070:	mov	x2, x0
    1074:	ldr	x1, [sp, #56]
    1078:	ldr	x0, [sp, #104]
    107c:	bl	0 <vfprintf>
    1080:	str	w0, [sp, #100]
    1084:	adrp	x0, 0 <__gcov_is_error>
    1088:	add	x0, x0, #0x0
    108c:	bl	0 <getenv>
    1090:	cmp	x0, #0x0
    1094:	b.eq	10b8 <gcov_error+0xdc>  // b.none
    1098:	ldr	x3, [sp, #104]
    109c:	mov	x2, #0x21                  	// #33
    10a0:	mov	x1, #0x1                   	// #1
    10a4:	adrp	x0, 0 <__gcov_is_error>
    10a8:	add	x0, x0, #0x0
    10ac:	bl	0 <fwrite>
    10b0:	mov	w0, #0x1                   	// #1
    10b4:	bl	0 <exit>
    10b8:	ldr	w0, [sp, #100]
    10bc:	ldp	x29, x30, [sp], #304
    10c0:	ret

00000000000010c4 <gcov_error_exit>:
    10c4:	stp	x29, x30, [sp, #-16]!
    10c8:	mov	x29, sp
    10cc:	adrp	x0, 0 <__gcov_is_error>
    10d0:	ldr	x0, [x0]
    10d4:	ldr	x0, [x0]
    10d8:	cmp	x0, #0x0
    10dc:	b.eq	111c <gcov_error_exit+0x58>  // b.none
    10e0:	adrp	x0, 0 <__gcov_is_error>
    10e4:	ldr	x0, [x0]
    10e8:	ldr	x1, [x0]
    10ec:	adrp	x0, 0 <stderr>
    10f0:	ldr	x0, [x0]
    10f4:	ldr	x0, [x0]
    10f8:	cmp	x1, x0
    10fc:	b.eq	111c <gcov_error_exit+0x58>  // b.none
    1100:	adrp	x0, 0 <__gcov_is_error>
    1104:	ldr	x0, [x0]
    1108:	ldr	x0, [x0]
    110c:	bl	0 <fclose>
    1110:	adrp	x0, 0 <__gcov_is_error>
    1114:	ldr	x0, [x0]
    1118:	str	xzr, [x0]
    111c:	nop
    1120:	ldp	x29, x30, [sp], #16
    1124:	ret

0000000000001128 <create_file_directory>:
    1128:	stp	x29, x30, [sp, #-48]!
    112c:	mov	x29, sp
    1130:	str	x0, [sp, #24]
    1134:	ldr	x0, [sp, #24]
    1138:	str	x0, [sp, #40]
    113c:	ldr	x0, [sp, #40]
    1140:	ldrb	w0, [x0]
    1144:	cmp	w0, #0x2f
    1148:	b.ne	11f4 <create_file_directory+0xcc>  // b.any
    114c:	ldr	x0, [sp, #40]
    1150:	add	x0, x0, #0x1
    1154:	str	x0, [sp, #40]
    1158:	b	11f4 <create_file_directory+0xcc>
    115c:	ldr	x0, [sp, #40]
    1160:	ldrb	w0, [x0]
    1164:	cmp	w0, #0x2f
    1168:	b.ne	11e8 <create_file_directory+0xc0>  // b.any
    116c:	ldr	x0, [sp, #40]
    1170:	ldrb	w0, [x0]
    1174:	strb	w0, [sp, #39]
    1178:	ldr	x0, [sp, #40]
    117c:	strb	wzr, [x0]
    1180:	mov	w1, #0x0                   	// #0
    1184:	ldr	x0, [sp, #24]
    1188:	bl	0 <access>
    118c:	cmn	w0, #0x1
    1190:	b.ne	11dc <create_file_directory+0xb4>  // b.any
    1194:	mov	w1, #0x1ed                 	// #493
    1198:	ldr	x0, [sp, #24]
    119c:	bl	0 <mkdir>
    11a0:	cmn	w0, #0x1
    11a4:	b.ne	11dc <create_file_directory+0xb4>  // b.any
    11a8:	bl	0 <__errno_location>
    11ac:	ldr	w0, [x0]
    11b0:	cmp	w0, #0x11
    11b4:	b.eq	11dc <create_file_directory+0xb4>  // b.none
    11b8:	ldr	x1, [sp, #24]
    11bc:	adrp	x0, 0 <__gcov_is_error>
    11c0:	add	x0, x0, #0x0
    11c4:	bl	fdc <gcov_error>
    11c8:	ldr	x0, [sp, #40]
    11cc:	ldrb	w1, [sp, #39]
    11d0:	strb	w1, [x0]
    11d4:	mov	w0, #0xffffffff            	// #-1
    11d8:	b	1208 <create_file_directory+0xe0>
    11dc:	ldr	x0, [sp, #40]
    11e0:	ldrb	w1, [sp, #39]
    11e4:	strb	w1, [x0]
    11e8:	ldr	x0, [sp, #40]
    11ec:	add	x0, x0, #0x1
    11f0:	str	x0, [sp, #40]
    11f4:	ldr	x0, [sp, #40]
    11f8:	ldrb	w0, [x0]
    11fc:	cmp	w0, #0x0
    1200:	b.ne	115c <create_file_directory+0x34>  // b.any
    1204:	mov	w0, #0x0                   	// #0
    1208:	ldp	x29, x30, [sp], #48
    120c:	ret

0000000000001210 <replace_filename_variables>:
    1210:	stp	x29, x30, [sp, #-112]!
    1214:	mov	x29, sp
    1218:	str	x0, [sp, #24]
    121c:	strb	wzr, [sp, #32]
    1220:	ldr	x0, [sp, #24]
    1224:	str	x0, [sp, #104]
    1228:	b	145c <replace_filename_variables+0x24c>
    122c:	ldr	x0, [sp, #24]
    1230:	bl	0 <strlen>
    1234:	str	w0, [sp, #92]
    1238:	ldr	x0, [sp, #104]
    123c:	ldrb	w0, [x0]
    1240:	cmp	w0, #0x25
    1244:	b.ne	1450 <replace_filename_variables+0x240>  // b.any
    1248:	ldr	x0, [sp, #104]
    124c:	add	x0, x0, #0x1
    1250:	ldrb	w0, [x0]
    1254:	cmp	w0, #0x0
    1258:	b.eq	1450 <replace_filename_variables+0x240>  // b.none
    125c:	ldr	x1, [sp, #104]
    1260:	ldr	x0, [sp, #24]
    1264:	sub	x0, x1, x0
    1268:	str	w0, [sp, #88]
    126c:	ldr	x0, [sp, #104]
    1270:	add	x0, x0, #0x1
    1274:	str	x0, [sp, #104]
    1278:	str	xzr, [sp, #96]
    127c:	ldr	x0, [sp, #104]
    1280:	ldrb	w0, [x0]
    1284:	cmp	w0, #0x70
    1288:	b.eq	1298 <replace_filename_variables+0x88>  // b.none
    128c:	cmp	w0, #0x71
    1290:	b.eq	12cc <replace_filename_variables+0xbc>  // b.none
    1294:	b	1348 <replace_filename_variables+0x138>
    1298:	bl	0 <getpid>
    129c:	add	x3, sp, #0x28
    12a0:	mov	w2, w0
    12a4:	adrp	x0, 0 <__gcov_is_error>
    12a8:	add	x1, x0, #0x0
    12ac:	mov	x0, x3
    12b0:	bl	0 <sprintf>
    12b4:	add	x0, sp, #0x28
    12b8:	str	x0, [sp, #96]
    12bc:	ldr	x0, [sp, #104]
    12c0:	add	x0, x0, #0x1
    12c4:	str	x0, [sp, #104]
    12c8:	b	1354 <replace_filename_variables+0x144>
    12cc:	ldr	x0, [sp, #104]
    12d0:	add	x0, x0, #0x1
    12d4:	ldrb	w0, [x0]
    12d8:	cmp	w0, #0x7b
    12dc:	b.ne	1350 <replace_filename_variables+0x140>  // b.any
    12e0:	ldr	x0, [sp, #104]
    12e4:	add	x0, x0, #0x2
    12e8:	str	x0, [sp, #104]
    12ec:	mov	w1, #0x7d                  	// #125
    12f0:	ldr	x0, [sp, #104]
    12f4:	bl	0 <strchr>
    12f8:	str	x0, [sp, #80]
    12fc:	ldr	x0, [sp, #80]
    1300:	cmp	x0, #0x0
    1304:	b.eq	1340 <replace_filename_variables+0x130>  // b.none
    1308:	ldr	x0, [sp, #80]
    130c:	strb	wzr, [x0]
    1310:	ldr	x0, [sp, #104]
    1314:	bl	0 <getenv>
    1318:	str	x0, [sp, #96]
    131c:	ldr	x0, [sp, #96]
    1320:	cmp	x0, #0x0
    1324:	b.ne	1330 <replace_filename_variables+0x120>  // b.any
    1328:	add	x0, sp, #0x20
    132c:	str	x0, [sp, #96]
    1330:	ldr	x0, [sp, #80]
    1334:	add	x0, x0, #0x1
    1338:	str	x0, [sp, #104]
    133c:	b	1350 <replace_filename_variables+0x140>
    1340:	ldr	x0, [sp, #24]
    1344:	b	1470 <replace_filename_variables+0x260>
    1348:	ldr	x0, [sp, #24]
    134c:	b	1470 <replace_filename_variables+0x260>
    1350:	nop
    1354:	ldr	x1, [sp, #104]
    1358:	ldr	x0, [sp, #24]
    135c:	sub	x0, x1, x0
    1360:	mov	w1, w0
    1364:	ldr	w0, [sp, #92]
    1368:	sub	w0, w0, w1
    136c:	str	w0, [sp, #76]
    1370:	ldr	x0, [sp, #96]
    1374:	bl	0 <strlen>
    1378:	str	w0, [sp, #72]
    137c:	ldr	w1, [sp, #88]
    1380:	ldr	w0, [sp, #76]
    1384:	add	w1, w1, w0
    1388:	ldr	w0, [sp, #72]
    138c:	add	w0, w1, w0
    1390:	add	w0, w0, #0x1
    1394:	mov	w0, w0
    1398:	bl	0 <malloc>
    139c:	str	x0, [sp, #64]
    13a0:	ldr	x0, [sp, #64]
    13a4:	str	x0, [sp, #56]
    13a8:	ldr	w0, [sp, #88]
    13ac:	mov	x2, x0
    13b0:	ldr	x1, [sp, #24]
    13b4:	ldr	x0, [sp, #56]
    13b8:	bl	0 <memcpy>
    13bc:	str	x0, [sp, #56]
    13c0:	ldr	w0, [sp, #88]
    13c4:	ldr	x1, [sp, #56]
    13c8:	add	x0, x1, x0
    13cc:	str	x0, [sp, #56]
    13d0:	ldr	w0, [sp, #72]
    13d4:	mov	x2, x0
    13d8:	ldr	x1, [sp, #96]
    13dc:	ldr	x0, [sp, #56]
    13e0:	bl	0 <memcpy>
    13e4:	str	x0, [sp, #56]
    13e8:	ldr	w0, [sp, #72]
    13ec:	ldr	x1, [sp, #56]
    13f0:	add	x0, x1, x0
    13f4:	str	x0, [sp, #56]
    13f8:	ldr	w0, [sp, #76]
    13fc:	mov	x2, x0
    1400:	ldr	x1, [sp, #104]
    1404:	ldr	x0, [sp, #56]
    1408:	bl	0 <memcpy>
    140c:	str	x0, [sp, #56]
    1410:	ldr	w0, [sp, #76]
    1414:	ldr	x1, [sp, #56]
    1418:	add	x0, x1, x0
    141c:	str	x0, [sp, #56]
    1420:	ldr	x0, [sp, #56]
    1424:	strb	wzr, [x0]
    1428:	ldr	x0, [sp, #24]
    142c:	bl	0 <free>
    1430:	ldr	x0, [sp, #64]
    1434:	str	x0, [sp, #24]
    1438:	ldr	w1, [sp, #88]
    143c:	ldr	w0, [sp, #72]
    1440:	add	x0, x1, x0
    1444:	ldr	x1, [sp, #64]
    1448:	add	x0, x1, x0
    144c:	str	x0, [sp, #104]
    1450:	ldr	x0, [sp, #104]
    1454:	add	x0, x0, #0x1
    1458:	str	x0, [sp, #104]
    145c:	ldr	x0, [sp, #104]
    1460:	ldrb	w0, [x0]
    1464:	cmp	w0, #0x0
    1468:	b.ne	122c <replace_filename_variables+0x1c>  // b.any
    146c:	ldr	x0, [sp, #24]
    1470:	ldp	x29, x30, [sp], #112
    1474:	ret

0000000000001478 <allocate_filename_struct>:
    1478:	stp	x29, x30, [sp, #-80]!
    147c:	mov	x29, sp
    1480:	str	x0, [sp, #24]
    1484:	str	wzr, [sp, #60]
    1488:	ldr	x0, [sp, #24]
    148c:	str	xzr, [x0]
    1490:	adrp	x0, 0 <__gcov_is_error>
    1494:	add	x0, x0, #0x0
    1498:	bl	0 <getenv>
    149c:	str	x0, [sp, #48]
    14a0:	ldr	x0, [sp, #48]
    14a4:	cmp	x0, #0x0
    14a8:	b.eq	14c8 <allocate_filename_struct+0x50>  // b.none
    14ac:	ldr	x0, [sp, #48]
    14b0:	bl	0 <atoi>
    14b4:	str	w0, [sp, #60]
    14b8:	ldr	w0, [sp, #60]
    14bc:	cmp	w0, #0x0
    14c0:	b.ge	14c8 <allocate_filename_struct+0x50>  // b.tcont
    14c4:	str	wzr, [sp, #60]
    14c8:	ldr	x0, [sp, #24]
    14cc:	ldr	w1, [sp, #60]
    14d0:	str	w1, [x0, #8]
    14d4:	adrp	x0, 0 <__gcov_is_error>
    14d8:	add	x0, x0, #0x0
    14dc:	bl	0 <getenv>
    14e0:	str	x0, [sp, #72]
    14e4:	ldr	x0, [sp, #72]
    14e8:	cmp	x0, #0x0
    14ec:	b.eq	14fc <allocate_filename_struct+0x84>  // b.none
    14f0:	ldr	x0, [sp, #72]
    14f4:	bl	0 <strlen>
    14f8:	b	1500 <allocate_filename_struct+0x88>
    14fc:	mov	x0, #0x0                   	// #0
    1500:	str	x0, [sp, #64]
    1504:	ldr	x0, [sp, #64]
    1508:	cmp	x0, #0x0
    150c:	b.eq	1538 <allocate_filename_struct+0xc0>  // b.none
    1510:	ldr	x0, [sp, #64]
    1514:	sub	x0, x0, #0x1
    1518:	ldr	x1, [sp, #72]
    151c:	add	x0, x1, x0
    1520:	ldrb	w0, [x0]
    1524:	cmp	w0, #0x2f
    1528:	b.ne	1538 <allocate_filename_struct+0xc0>  // b.any
    152c:	ldr	x0, [sp, #64]
    1530:	sub	x0, x0, #0x1
    1534:	str	x0, [sp, #64]
    1538:	ldr	x0, [sp, #64]
    153c:	cmp	x0, #0x0
    1540:	b.ne	1568 <allocate_filename_struct+0xf0>  // b.any
    1544:	ldr	x0, [sp, #24]
    1548:	ldr	w0, [x0, #8]
    154c:	cmp	w0, #0x0
    1550:	b.eq	1568 <allocate_filename_struct+0xf0>  // b.none
    1554:	adrp	x0, 0 <__gcov_is_error>
    1558:	add	x0, x0, #0x0
    155c:	str	x0, [sp, #72]
    1560:	mov	x0, #0x1                   	// #1
    1564:	str	x0, [sp, #64]
    1568:	ldr	x0, [sp, #64]
    156c:	cmp	x0, #0x0
    1570:	b.eq	15b8 <allocate_filename_struct+0x140>  // b.none
    1574:	ldr	x0, [sp, #64]
    1578:	add	x0, x0, #0x1
    157c:	bl	0 <malloc>
    1580:	mov	x1, x0
    1584:	ldr	x0, [sp, #24]
    1588:	str	x1, [x0, #16]
    158c:	ldr	x0, [sp, #24]
    1590:	ldr	x0, [x0, #16]
    1594:	ldr	x2, [sp, #64]
    1598:	ldr	x1, [sp, #72]
    159c:	bl	0 <memcpy>
    15a0:	str	x0, [sp, #40]
    15a4:	ldr	x1, [sp, #40]
    15a8:	ldr	x0, [sp, #64]
    15ac:	add	x0, x1, x0
    15b0:	strb	wzr, [x0]
    15b4:	b	15c0 <allocate_filename_struct+0x148>
    15b8:	ldr	x0, [sp, #24]
    15bc:	str	xzr, [x0, #16]
    15c0:	nop
    15c4:	ldp	x29, x30, [sp], #80
    15c8:	ret

00000000000015cc <gcov_exit_open_gcda_file>:
    15cc:	stp	x29, x30, [sp, #-80]!
    15d0:	mov	x29, sp
    15d4:	str	x0, [sp, #24]
    15d8:	str	x1, [sp, #16]
    15dc:	ldr	x0, [sp, #24]
    15e0:	ldr	x0, [x0, #24]
    15e4:	str	x0, [sp, #72]
    15e8:	str	wzr, [sp, #68]
    15ec:	ldr	x0, [sp, #24]
    15f0:	ldr	x0, [x0, #24]
    15f4:	str	x0, [sp, #72]
    15f8:	ldr	x0, [sp, #16]
    15fc:	ldr	w0, [x0, #8]
    1600:	cmp	w0, #0x0
    1604:	b.le	1688 <gcov_exit_open_gcda_file+0xbc>
    1608:	ldr	x0, [sp, #72]
    160c:	str	x0, [sp, #56]
    1610:	ldr	x0, [sp, #56]
    1614:	ldrb	w0, [x0]
    1618:	cmp	w0, #0x2f
    161c:	b.ne	162c <gcov_exit_open_gcda_file+0x60>  // b.any
    1620:	ldr	x0, [sp, #56]
    1624:	add	x0, x0, #0x1
    1628:	str	x0, [sp, #56]
    162c:	ldr	x0, [sp, #16]
    1630:	ldr	w0, [x0, #8]
    1634:	str	w0, [sp, #52]
    1638:	b	166c <gcov_exit_open_gcda_file+0xa0>
    163c:	ldr	x0, [sp, #56]
    1640:	ldrb	w0, [x0]
    1644:	cmp	w0, #0x2f
    1648:	b.ne	1660 <gcov_exit_open_gcda_file+0x94>  // b.any
    164c:	ldr	x0, [sp, #56]
    1650:	str	x0, [sp, #72]
    1654:	ldr	w0, [sp, #52]
    1658:	sub	w0, w0, #0x1
    165c:	str	w0, [sp, #52]
    1660:	ldr	x0, [sp, #56]
    1664:	add	x0, x0, #0x1
    1668:	str	x0, [sp, #56]
    166c:	ldr	x0, [sp, #56]
    1670:	ldrb	w0, [x0]
    1674:	cmp	w0, #0x0
    1678:	b.eq	1688 <gcov_exit_open_gcda_file+0xbc>  // b.none
    167c:	ldr	w0, [sp, #52]
    1680:	cmp	w0, #0x0
    1684:	b.ne	163c <gcov_exit_open_gcda_file+0x70>  // b.any
    1688:	ldr	x0, [sp, #16]
    168c:	ldr	x0, [x0, #16]
    1690:	cmp	x0, #0x0
    1694:	b.eq	16b0 <gcov_exit_open_gcda_file+0xe4>  // b.none
    1698:	ldr	x0, [sp, #72]
    169c:	ldrb	w0, [x0]
    16a0:	cmp	w0, #0x2f
    16a4:	b.eq	16b0 <gcov_exit_open_gcda_file+0xe4>  // b.none
    16a8:	mov	w0, #0x1                   	// #1
    16ac:	str	w0, [sp, #68]
    16b0:	ldr	x0, [sp, #16]
    16b4:	ldr	x0, [x0, #16]
    16b8:	cmp	x0, #0x0
    16bc:	b.eq	16d0 <gcov_exit_open_gcda_file+0x104>  // b.none
    16c0:	ldr	x0, [sp, #16]
    16c4:	ldr	x0, [x0, #16]
    16c8:	bl	0 <strlen>
    16cc:	b	16d4 <gcov_exit_open_gcda_file+0x108>
    16d0:	mov	x0, #0x0                   	// #0
    16d4:	str	x0, [sp, #40]
    16d8:	ldr	x0, [sp, #72]
    16dc:	bl	0 <strlen>
    16e0:	mov	x1, x0
    16e4:	ldr	x0, [sp, #40]
    16e8:	add	x0, x1, x0
    16ec:	add	x0, x0, #0x2
    16f0:	bl	0 <malloc>
    16f4:	mov	x1, x0
    16f8:	ldr	x0, [sp, #16]
    16fc:	str	x1, [x0]
    1700:	ldr	x0, [sp, #16]
    1704:	ldr	x0, [x0]
    1708:	strb	wzr, [x0]
    170c:	ldr	x0, [sp, #40]
    1710:	cmp	x0, #0x0
    1714:	b.eq	1734 <gcov_exit_open_gcda_file+0x168>  // b.none
    1718:	ldr	x0, [sp, #16]
    171c:	ldr	x2, [x0]
    1720:	ldr	x0, [sp, #16]
    1724:	ldr	x0, [x0, #16]
    1728:	mov	x1, x0
    172c:	mov	x0, x2
    1730:	bl	0 <strcat>
    1734:	ldr	w0, [sp, #68]
    1738:	cmp	w0, #0x0
    173c:	b.eq	175c <gcov_exit_open_gcda_file+0x190>  // b.none
    1740:	ldr	x0, [sp, #16]
    1744:	ldr	x0, [x0]
    1748:	add	x2, x0, #0x1
    174c:	ldr	x1, [sp, #16]
    1750:	str	x2, [x1]
    1754:	mov	w1, #0x2f                  	// #47
    1758:	strb	w1, [x0]
    175c:	ldr	x0, [sp, #16]
    1760:	ldr	x0, [x0]
    1764:	ldr	x1, [sp, #72]
    1768:	bl	0 <strcat>
    176c:	ldr	x0, [sp, #16]
    1770:	ldr	x0, [x0]
    1774:	bl	1210 <replace_filename_variables>
    1778:	mov	x1, x0
    177c:	ldr	x0, [sp, #16]
    1780:	str	x1, [x0]
    1784:	ldr	x0, [sp, #16]
    1788:	ldr	x0, [x0]
    178c:	bl	94 <__gcov_open>
    1790:	cmp	w0, #0x0
    1794:	b.ne	1820 <gcov_exit_open_gcda_file+0x254>  // b.any
    1798:	ldr	x0, [sp, #16]
    179c:	ldr	x0, [x0]
    17a0:	bl	1128 <create_file_directory>
    17a4:	cmp	w0, #0x0
    17a8:	b.eq	17dc <gcov_exit_open_gcda_file+0x210>  // b.none
    17ac:	adrp	x0, 0 <stderr>
    17b0:	ldr	x0, [x0]
    17b4:	ldr	x3, [x0]
    17b8:	ldr	x0, [sp, #16]
    17bc:	ldr	x0, [x0]
    17c0:	mov	x2, x0
    17c4:	adrp	x0, 0 <__gcov_is_error>
    17c8:	add	x1, x0, #0x0
    17cc:	mov	x0, x3
    17d0:	bl	0 <fprintf>
    17d4:	mov	w0, #0xffffffff            	// #-1
    17d8:	b	1824 <gcov_exit_open_gcda_file+0x258>
    17dc:	ldr	x0, [sp, #16]
    17e0:	ldr	x0, [x0]
    17e4:	bl	94 <__gcov_open>
    17e8:	cmp	w0, #0x0
    17ec:	b.ne	1820 <gcov_exit_open_gcda_file+0x254>  // b.any
    17f0:	adrp	x0, 0 <stderr>
    17f4:	ldr	x0, [x0]
    17f8:	ldr	x3, [x0]
    17fc:	ldr	x0, [sp, #16]
    1800:	ldr	x0, [x0]
    1804:	mov	x2, x0
    1808:	adrp	x0, 0 <__gcov_is_error>
    180c:	add	x1, x0, #0x0
    1810:	mov	x0, x3
    1814:	bl	0 <fprintf>
    1818:	mov	w0, #0xffffffff            	// #-1
    181c:	b	1824 <gcov_exit_open_gcda_file+0x258>
    1820:	mov	w0, #0x0                   	// #0
    1824:	ldp	x29, x30, [sp], #80
    1828:	ret

000000000000182c <merge_one_data>:
    182c:	stp	x29, x30, [sp, #-112]!
    1830:	mov	x29, sp
    1834:	str	x0, [sp, #40]
    1838:	str	x1, [sp, #32]
    183c:	str	x2, [sp, #24]
    1840:	mov	w0, #0xffffffff            	// #-1
    1844:	str	w0, [sp, #100]
    1848:	str	wzr, [sp, #76]
    184c:	adrp	x0, 0 <__gcov_is_error>
    1850:	add	x0, x0, #0x0
    1854:	str	x0, [sp, #88]
    1858:	bl	738 <__gcov_read_unsigned>
    185c:	str	w0, [sp, #72]
    1860:	ldr	x2, [sp, #40]
    1864:	ldr	w1, [sp, #72]
    1868:	ldr	x0, [sp, #32]
    186c:	bl	e40 <gcov_version>
    1870:	cmp	w0, #0x0
    1874:	b.ne	1880 <merge_one_data+0x54>  // b.any
    1878:	mov	w0, #0xffffffff            	// #-1
    187c:	b	1bdc <merge_one_data+0x3b0>
    1880:	bl	738 <__gcov_read_unsigned>
    1884:	str	w0, [sp, #72]
    1888:	ldr	x0, [sp, #32]
    188c:	ldr	w0, [x0, #16]
    1890:	ldr	w1, [sp, #72]
    1894:	cmp	w1, w0
    1898:	b.eq	18b4 <merge_one_data+0x88>  // b.none
    189c:	ldr	x1, [sp, #40]
    18a0:	adrp	x0, 0 <__gcov_is_error>
    18a4:	add	x0, x0, #0x0
    18a8:	bl	fdc <gcov_error>
    18ac:	mov	w0, #0x0                   	// #0
    18b0:	b	1bdc <merge_one_data+0x3b0>
    18b4:	bl	738 <__gcov_read_unsigned>
    18b8:	str	w0, [sp, #108]
    18bc:	ldr	w1, [sp, #108]
    18c0:	mov	w0, #0xa1000000            	// #-1593835520
    18c4:	cmp	w1, w0
    18c8:	b.ne	1b08 <merge_one_data+0x2dc>  // b.any
    18cc:	bl	738 <__gcov_read_unsigned>
    18d0:	str	w0, [sp, #72]
    18d4:	ldr	w0, [sp, #72]
    18d8:	cmp	w0, #0x0
    18dc:	b.ne	18e4 <merge_one_data+0xb8>  // b.any
    18e0:	bl	0 <abort>
    18e4:	ldr	x0, [sp, #24]
    18e8:	bl	928 <__gcov_read_summary>
    18ec:	bl	738 <__gcov_read_unsigned>
    18f0:	str	w0, [sp, #108]
    18f4:	str	wzr, [sp, #100]
    18f8:	b	1ae4 <merge_one_data+0x2b8>
    18fc:	ldr	x0, [sp, #32]
    1900:	ldr	x1, [x0, #112]
    1904:	ldrsw	x0, [sp, #100]
    1908:	lsl	x0, x0, #3
    190c:	add	x0, x1, x0
    1910:	ldr	x0, [x0]
    1914:	str	x0, [sp, #64]
    1918:	ldr	w1, [sp, #108]
    191c:	mov	w0, #0x1000000             	// #16777216
    1920:	cmp	w1, w0
    1924:	b.ne	1b10 <merge_one_data+0x2e4>  // b.any
    1928:	bl	738 <__gcov_read_unsigned>
    192c:	str	w0, [sp, #72]
    1930:	ldr	w0, [sp, #72]
    1934:	cmp	w0, #0x0
    1938:	b.eq	1ac4 <merge_one_data+0x298>  // b.none
    193c:	ldr	w0, [sp, #72]
    1940:	cmp	w0, #0x3
    1944:	b.ne	1b18 <merge_one_data+0x2ec>  // b.any
    1948:	ldr	x0, [sp, #64]
    194c:	cmp	x0, #0x0
    1950:	b.eq	1968 <merge_one_data+0x13c>  // b.none
    1954:	ldr	x0, [sp, #64]
    1958:	ldr	x0, [x0]
    195c:	ldr	x1, [sp, #32]
    1960:	cmp	x1, x0
    1964:	b.eq	1994 <merge_one_data+0x168>  // b.none
    1968:	ldr	w0, [sp, #100]
    196c:	mov	w3, w0
    1970:	ldr	x2, [sp, #88]
    1974:	ldr	x1, [sp, #32]
    1978:	ldr	x0, [sp, #40]
    197c:	bl	a98 <buffer_fn_data>
    1980:	str	x0, [sp, #88]
    1984:	ldr	x0, [sp, #88]
    1988:	cmp	x0, #0x0
    198c:	b.ne	1acc <merge_one_data+0x2a0>  // b.any
    1990:	b	1b3c <merge_one_data+0x310>
    1994:	bl	738 <__gcov_read_unsigned>
    1998:	str	w0, [sp, #72]
    199c:	ldr	x0, [sp, #64]
    19a0:	ldr	w0, [x0, #8]
    19a4:	ldr	w1, [sp, #72]
    19a8:	cmp	w1, w0
    19ac:	b.ne	1b20 <merge_one_data+0x2f4>  // b.any
    19b0:	bl	738 <__gcov_read_unsigned>
    19b4:	str	w0, [sp, #72]
    19b8:	ldr	x0, [sp, #64]
    19bc:	ldr	w0, [x0, #12]
    19c0:	ldr	w1, [sp, #72]
    19c4:	cmp	w1, w0
    19c8:	b.ne	1b28 <merge_one_data+0x2fc>  // b.any
    19cc:	bl	738 <__gcov_read_unsigned>
    19d0:	str	w0, [sp, #72]
    19d4:	ldr	x0, [sp, #64]
    19d8:	ldr	w0, [x0, #16]
    19dc:	ldr	w1, [sp, #72]
    19e0:	cmp	w1, w0
    19e4:	b.ne	1b30 <merge_one_data+0x304>  // b.any
    19e8:	ldr	x0, [sp, #64]
    19ec:	add	x0, x0, #0x18
    19f0:	str	x0, [sp, #80]
    19f4:	str	wzr, [sp, #104]
    19f8:	b	1aa0 <merge_one_data+0x274>
    19fc:	ldr	x0, [sp, #32]
    1a00:	ldr	w1, [sp, #104]
    1a04:	add	x1, x1, #0x4
    1a08:	ldr	x0, [x0, x1, lsl #3]
    1a0c:	str	x0, [sp, #56]
    1a10:	ldr	x0, [sp, #56]
    1a14:	cmp	x0, #0x0
    1a18:	b.eq	1a90 <merge_one_data+0x264>  // b.none
    1a1c:	bl	738 <__gcov_read_unsigned>
    1a20:	str	w0, [sp, #108]
    1a24:	bl	738 <__gcov_read_unsigned>
    1a28:	str	w0, [sp, #72]
    1a2c:	ldr	w0, [sp, #104]
    1a30:	lsl	w1, w0, #17
    1a34:	mov	w0, #0x1a10000             	// #27328512
    1a38:	add	w0, w1, w0
    1a3c:	ldr	w1, [sp, #108]
    1a40:	cmp	w1, w0
    1a44:	b.ne	1b38 <merge_one_data+0x30c>  // b.any
    1a48:	ldr	x0, [sp, #80]
    1a4c:	ldr	w0, [x0]
    1a50:	lsl	w0, w0, #1
    1a54:	ldr	w1, [sp, #72]
    1a58:	cmp	w1, w0
    1a5c:	b.ne	1b38 <merge_one_data+0x30c>  // b.any
    1a60:	ldr	x0, [sp, #80]
    1a64:	ldr	x3, [x0, #8]
    1a68:	ldr	x0, [sp, #80]
    1a6c:	ldr	w0, [x0]
    1a70:	ldr	x2, [sp, #56]
    1a74:	mov	w1, w0
    1a78:	mov	x0, x3
    1a7c:	blr	x2
    1a80:	ldr	x0, [sp, #80]
    1a84:	add	x0, x0, #0x10
    1a88:	str	x0, [sp, #80]
    1a8c:	b	1a94 <merge_one_data+0x268>
    1a90:	nop
    1a94:	ldr	w0, [sp, #104]
    1a98:	add	w0, w0, #0x1
    1a9c:	str	w0, [sp, #104]
    1aa0:	ldr	w0, [sp, #104]
    1aa4:	cmp	w0, #0x8
    1aa8:	b.ls	19fc <merge_one_data+0x1d0>  // b.plast
    1aac:	bl	0 <__gcov_is_error>
    1ab0:	str	w0, [sp, #76]
    1ab4:	ldr	w0, [sp, #76]
    1ab8:	cmp	w0, #0x0
    1abc:	b.ne	1ba0 <merge_one_data+0x374>  // b.any
    1ac0:	b	1ad0 <merge_one_data+0x2a4>
    1ac4:	nop
    1ac8:	b	1ad0 <merge_one_data+0x2a4>
    1acc:	nop
    1ad0:	ldr	w0, [sp, #100]
    1ad4:	add	w0, w0, #0x1
    1ad8:	str	w0, [sp, #100]
    1adc:	bl	738 <__gcov_read_unsigned>
    1ae0:	str	w0, [sp, #108]
    1ae4:	ldr	x0, [sp, #32]
    1ae8:	ldr	w1, [x0, #104]
    1aec:	ldr	w0, [sp, #100]
    1af0:	cmp	w1, w0
    1af4:	b.ne	18fc <merge_one_data+0xd0>  // b.any
    1af8:	ldr	w0, [sp, #108]
    1afc:	cmp	w0, #0x0
    1b00:	b.eq	1b98 <merge_one_data+0x36c>  // b.none
    1b04:	b	1b3c <merge_one_data+0x310>
    1b08:	nop
    1b0c:	b	1b3c <merge_one_data+0x310>
    1b10:	nop
    1b14:	b	1b3c <merge_one_data+0x310>
    1b18:	nop
    1b1c:	b	1b3c <merge_one_data+0x310>
    1b20:	nop
    1b24:	b	1b3c <merge_one_data+0x310>
    1b28:	nop
    1b2c:	b	1b3c <merge_one_data+0x310>
    1b30:	nop
    1b34:	b	1b3c <merge_one_data+0x310>
    1b38:	nop
    1b3c:	ldr	w0, [sp, #100]
    1b40:	cmp	w0, #0x0
    1b44:	b.lt	1b54 <merge_one_data+0x328>  // b.tstop
    1b48:	adrp	x0, 0 <__gcov_is_error>
    1b4c:	add	x0, x0, #0x0
    1b50:	b	1b5c <merge_one_data+0x330>
    1b54:	adrp	x0, 0 <__gcov_is_error>
    1b58:	add	x0, x0, #0x0
    1b5c:	ldr	w1, [sp, #100]
    1b60:	cmp	w1, #0x0
    1b64:	b.ge	1b74 <merge_one_data+0x348>  // b.tcont
    1b68:	ldr	w1, [sp, #100]
    1b6c:	mvn	w1, w1
    1b70:	b	1b78 <merge_one_data+0x34c>
    1b74:	ldr	w1, [sp, #100]
    1b78:	mov	w3, w1
    1b7c:	mov	x2, x0
    1b80:	ldr	x1, [sp, #40]
    1b84:	adrp	x0, 0 <__gcov_is_error>
    1b88:	add	x0, x0, #0x0
    1b8c:	bl	fdc <gcov_error>
    1b90:	mov	w0, #0xffffffff            	// #-1
    1b94:	b	1bdc <merge_one_data+0x3b0>
    1b98:	mov	w0, #0x0                   	// #0
    1b9c:	b	1bdc <merge_one_data+0x3b0>
    1ba0:	nop
    1ba4:	ldr	w0, [sp, #76]
    1ba8:	cmp	w0, #0x0
    1bac:	b.ge	1bbc <merge_one_data+0x390>  // b.tcont
    1bb0:	adrp	x0, 0 <__gcov_is_error>
    1bb4:	add	x0, x0, #0x0
    1bb8:	b	1bc4 <merge_one_data+0x398>
    1bbc:	adrp	x0, 0 <__gcov_is_error>
    1bc0:	add	x0, x0, #0x0
    1bc4:	mov	x2, x0
    1bc8:	ldr	x1, [sp, #40]
    1bcc:	adrp	x0, 0 <__gcov_is_error>
    1bd0:	add	x0, x0, #0x0
    1bd4:	bl	fdc <gcov_error>
    1bd8:	mov	w0, #0xffffffff            	// #-1
    1bdc:	ldp	x29, x30, [sp], #112
    1be0:	ret

0000000000001be4 <write_one_data>:
    1be4:	stp	x29, x30, [sp, #-80]!
    1be8:	mov	x29, sp
    1bec:	str	x0, [sp, #24]
    1bf0:	str	x1, [sp, #16]
    1bf4:	mov	w1, #0x322a                	// #12842
    1bf8:	movk	w1, #0x4139, lsl #16
    1bfc:	mov	w0, #0x6461                	// #25697
    1c00:	movk	w0, #0x6763, lsl #16
    1c04:	bl	4a8 <__gcov_write_tag_length>
    1c08:	ldr	x0, [sp, #24]
    1c0c:	ldr	w0, [x0, #16]
    1c10:	bl	430 <__gcov_write_unsigned>
    1c14:	ldr	x1, [sp, #16]
    1c18:	mov	w0, #0xa1000000            	// #-1593835520
    1c1c:	bl	4ec <__gcov_write_summary>
    1c20:	str	wzr, [sp, #76]
    1c24:	b	1e18 <write_one_data+0x234>
    1c28:	str	wzr, [sp, #72]
    1c2c:	adrp	x0, 0 <__gcov_is_error>
    1c30:	add	x0, x0, #0x0
    1c34:	ldr	x0, [x0]
    1c38:	cmp	x0, #0x0
    1c3c:	b.eq	1c84 <write_one_data+0xa0>  // b.none
    1c40:	adrp	x0, 0 <__gcov_is_error>
    1c44:	add	x0, x0, #0x0
    1c48:	ldr	x0, [x0]
    1c4c:	ldr	w0, [x0, #8]
    1c50:	ldr	w1, [sp, #76]
    1c54:	cmp	w1, w0
    1c58:	b.ne	1c84 <write_one_data+0xa0>  // b.any
    1c5c:	mov	w0, #0x1                   	// #1
    1c60:	str	w0, [sp, #72]
    1c64:	adrp	x0, 0 <__gcov_is_error>
    1c68:	add	x0, x0, #0x0
    1c6c:	ldr	x0, [x0]
    1c70:	add	x0, x0, #0x10
    1c74:	str	x0, [sp, #64]
    1c78:	mov	w0, #0x3                   	// #3
    1c7c:	str	w0, [sp, #52]
    1c80:	b	1cd0 <write_one_data+0xec>
    1c84:	ldr	x0, [sp, #24]
    1c88:	ldr	x1, [x0, #112]
    1c8c:	ldr	w0, [sp, #76]
    1c90:	lsl	x0, x0, #3
    1c94:	add	x0, x1, x0
    1c98:	ldr	x0, [x0]
    1c9c:	str	x0, [sp, #64]
    1ca0:	ldr	x0, [sp, #64]
    1ca4:	cmp	x0, #0x0
    1ca8:	b.eq	1ccc <write_one_data+0xe8>  // b.none
    1cac:	ldr	x0, [sp, #64]
    1cb0:	ldr	x0, [x0]
    1cb4:	ldr	x1, [sp, #24]
    1cb8:	cmp	x1, x0
    1cbc:	b.ne	1ccc <write_one_data+0xe8>  // b.any
    1cc0:	mov	w0, #0x3                   	// #3
    1cc4:	str	w0, [sp, #52]
    1cc8:	b	1cd0 <write_one_data+0xec>
    1ccc:	str	wzr, [sp, #52]
    1cd0:	ldr	w1, [sp, #52]
    1cd4:	mov	w0, #0x1000000             	// #16777216
    1cd8:	bl	4a8 <__gcov_write_tag_length>
    1cdc:	ldr	w0, [sp, #52]
    1ce0:	cmp	w0, #0x0
    1ce4:	b.eq	1e08 <write_one_data+0x224>  // b.none
    1ce8:	ldr	x0, [sp, #64]
    1cec:	ldr	w0, [x0, #8]
    1cf0:	bl	430 <__gcov_write_unsigned>
    1cf4:	ldr	x0, [sp, #64]
    1cf8:	ldr	w0, [x0, #12]
    1cfc:	bl	430 <__gcov_write_unsigned>
    1d00:	ldr	x0, [sp, #64]
    1d04:	ldr	w0, [x0, #16]
    1d08:	bl	430 <__gcov_write_unsigned>
    1d0c:	ldr	x0, [sp, #64]
    1d10:	add	x0, x0, #0x18
    1d14:	str	x0, [sp, #56]
    1d18:	str	wzr, [sp, #48]
    1d1c:	b	1dc0 <write_one_data+0x1dc>
    1d20:	ldr	x0, [sp, #24]
    1d24:	ldr	w1, [sp, #48]
    1d28:	add	x1, x1, #0x4
    1d2c:	ldr	x0, [x0, x1, lsl #3]
    1d30:	cmp	x0, #0x0
    1d34:	b.eq	1db0 <write_one_data+0x1cc>  // b.none
    1d38:	ldr	x0, [sp, #56]
    1d3c:	ldr	w0, [x0]
    1d40:	str	w0, [sp, #44]
    1d44:	ldr	w0, [sp, #48]
    1d48:	lsl	w1, w0, #17
    1d4c:	mov	w0, #0x1a10000             	// #27328512
    1d50:	add	w2, w1, w0
    1d54:	ldr	w0, [sp, #44]
    1d58:	lsl	w0, w0, #1
    1d5c:	mov	w1, w0
    1d60:	mov	w0, w2
    1d64:	bl	4a8 <__gcov_write_tag_length>
    1d68:	ldr	x0, [sp, #56]
    1d6c:	ldr	x0, [x0, #8]
    1d70:	str	x0, [sp, #32]
    1d74:	b	1d8c <write_one_data+0x1a8>
    1d78:	ldr	x0, [sp, #32]
    1d7c:	add	x1, x0, #0x8
    1d80:	str	x1, [sp, #32]
    1d84:	ldr	x0, [x0]
    1d88:	bl	460 <__gcov_write_counter>
    1d8c:	ldr	w0, [sp, #44]
    1d90:	sub	w1, w0, #0x1
    1d94:	str	w1, [sp, #44]
    1d98:	cmp	w0, #0x0
    1d9c:	b.ne	1d78 <write_one_data+0x194>  // b.any
    1da0:	ldr	x0, [sp, #56]
    1da4:	add	x0, x0, #0x10
    1da8:	str	x0, [sp, #56]
    1dac:	b	1db4 <write_one_data+0x1d0>
    1db0:	nop
    1db4:	ldr	w0, [sp, #48]
    1db8:	add	w0, w0, #0x1
    1dbc:	str	w0, [sp, #48]
    1dc0:	ldr	w0, [sp, #48]
    1dc4:	cmp	w0, #0x8
    1dc8:	b.ls	1d20 <write_one_data+0x13c>  // b.plast
    1dcc:	ldr	w0, [sp, #72]
    1dd0:	cmp	w0, #0x0
    1dd4:	b.eq	1e0c <write_one_data+0x228>  // b.none
    1dd8:	adrp	x0, 0 <__gcov_is_error>
    1ddc:	add	x0, x0, #0x0
    1de0:	ldr	x0, [x0]
    1de4:	mov	w2, #0x9                   	// #9
    1de8:	mov	x1, x0
    1dec:	ldr	x0, [sp, #24]
    1df0:	bl	9e8 <free_fn_data>
    1df4:	mov	x1, x0
    1df8:	adrp	x0, 0 <__gcov_is_error>
    1dfc:	add	x0, x0, #0x0
    1e00:	str	x1, [x0]
    1e04:	b	1e0c <write_one_data+0x228>
    1e08:	nop
    1e0c:	ldr	w0, [sp, #76]
    1e10:	add	w0, w0, #0x1
    1e14:	str	w0, [sp, #76]
    1e18:	ldr	x0, [sp, #24]
    1e1c:	ldr	w0, [x0, #104]
    1e20:	ldr	w1, [sp, #76]
    1e24:	cmp	w1, w0
    1e28:	b.ne	1c28 <write_one_data+0x44>  // b.any
    1e2c:	mov	w0, #0x0                   	// #0
    1e30:	bl	430 <__gcov_write_unsigned>
    1e34:	nop
    1e38:	ldp	x29, x30, [sp], #80
    1e3c:	ret

0000000000001e40 <merge_summary>:
    1e40:	sub	sp, sp, #0x20
    1e44:	str	w0, [sp, #28]
    1e48:	str	x1, [sp, #16]
    1e4c:	str	x2, [sp, #8]
    1e50:	ldr	w0, [sp, #28]
    1e54:	cmp	w0, #0x0
    1e58:	b.ne	1e88 <merge_summary+0x48>  // b.any
    1e5c:	ldr	x0, [sp, #16]
    1e60:	ldr	w0, [x0]
    1e64:	add	w1, w0, #0x1
    1e68:	ldr	x0, [sp, #16]
    1e6c:	str	w1, [x0]
    1e70:	ldr	x0, [sp, #16]
    1e74:	ldr	x1, [x0, #8]
    1e78:	ldr	x0, [sp, #8]
    1e7c:	add	x1, x1, x0
    1e80:	ldr	x0, [sp, #16]
    1e84:	str	x1, [x0, #8]
    1e88:	nop
    1e8c:	add	sp, sp, #0x20
    1e90:	ret

0000000000001e94 <__gcov_sort_n_vals>:
    1e94:	sub	sp, sp, #0x30
    1e98:	str	x0, [sp, #8]
    1e9c:	str	w1, [sp, #4]
    1ea0:	mov	w0, #0x2                   	// #2
    1ea4:	str	w0, [sp, #44]
    1ea8:	b	1fcc <__gcov_sort_n_vals+0x138>
    1eac:	ldrsw	x0, [sp, #44]
    1eb0:	lsl	x0, x0, #3
    1eb4:	ldr	x1, [sp, #8]
    1eb8:	add	x0, x1, x0
    1ebc:	ldr	x0, [x0]
    1ec0:	str	x0, [sp, #24]
    1ec4:	ldrsw	x0, [sp, #44]
    1ec8:	add	x0, x0, #0x1
    1ecc:	lsl	x0, x0, #3
    1ed0:	ldr	x1, [sp, #8]
    1ed4:	add	x0, x1, x0
    1ed8:	ldr	x0, [x0]
    1edc:	str	x0, [sp, #32]
    1ee0:	ldr	w0, [sp, #44]
    1ee4:	sub	w0, w0, #0x2
    1ee8:	str	w0, [sp, #40]
    1eec:	b	1f58 <__gcov_sort_n_vals+0xc4>
    1ef0:	ldrsw	x0, [sp, #40]
    1ef4:	lsl	x0, x0, #3
    1ef8:	ldr	x1, [sp, #8]
    1efc:	add	x1, x1, x0
    1f00:	ldrsw	x0, [sp, #40]
    1f04:	add	x0, x0, #0x2
    1f08:	lsl	x0, x0, #3
    1f0c:	ldr	x2, [sp, #8]
    1f10:	add	x0, x2, x0
    1f14:	ldr	x1, [x1]
    1f18:	str	x1, [x0]
    1f1c:	ldrsw	x0, [sp, #40]
    1f20:	add	x0, x0, #0x1
    1f24:	lsl	x0, x0, #3
    1f28:	ldr	x1, [sp, #8]
    1f2c:	add	x1, x1, x0
    1f30:	ldrsw	x0, [sp, #40]
    1f34:	add	x0, x0, #0x3
    1f38:	lsl	x0, x0, #3
    1f3c:	ldr	x2, [sp, #8]
    1f40:	add	x0, x2, x0
    1f44:	ldr	x1, [x1]
    1f48:	str	x1, [x0]
    1f4c:	ldr	w0, [sp, #40]
    1f50:	sub	w0, w0, #0x2
    1f54:	str	w0, [sp, #40]
    1f58:	ldr	w0, [sp, #40]
    1f5c:	cmp	w0, #0x0
    1f60:	b.lt	1f88 <__gcov_sort_n_vals+0xf4>  // b.tstop
    1f64:	ldrsw	x0, [sp, #40]
    1f68:	add	x0, x0, #0x1
    1f6c:	lsl	x0, x0, #3
    1f70:	ldr	x1, [sp, #8]
    1f74:	add	x0, x1, x0
    1f78:	ldr	x1, [x0]
    1f7c:	ldr	x0, [sp, #32]
    1f80:	cmp	x1, x0
    1f84:	b.lt	1ef0 <__gcov_sort_n_vals+0x5c>  // b.tstop
    1f88:	ldrsw	x0, [sp, #40]
    1f8c:	add	x0, x0, #0x2
    1f90:	lsl	x0, x0, #3
    1f94:	ldr	x1, [sp, #8]
    1f98:	add	x0, x1, x0
    1f9c:	ldr	x1, [sp, #24]
    1fa0:	str	x1, [x0]
    1fa4:	ldrsw	x0, [sp, #40]
    1fa8:	add	x0, x0, #0x3
    1fac:	lsl	x0, x0, #3
    1fb0:	ldr	x1, [sp, #8]
    1fb4:	add	x0, x1, x0
    1fb8:	ldr	x1, [sp, #32]
    1fbc:	str	x1, [x0]
    1fc0:	ldr	w0, [sp, #44]
    1fc4:	add	w0, w0, #0x2
    1fc8:	str	w0, [sp, #44]
    1fcc:	ldr	w1, [sp, #44]
    1fd0:	ldr	w0, [sp, #4]
    1fd4:	cmp	w1, w0
    1fd8:	b.lt	1eac <__gcov_sort_n_vals+0x18>  // b.tstop
    1fdc:	nop
    1fe0:	nop
    1fe4:	add	sp, sp, #0x30
    1fe8:	ret

0000000000001fec <gcov_sort_icall_topn_counter>:
    1fec:	stp	x29, x30, [sp, #-64]!
    1ff0:	mov	x29, sp
    1ff4:	str	x0, [sp, #24]
    1ff8:	ldr	x0, [sp, #24]
    1ffc:	ldr	w0, [x0]
    2000:	str	w0, [sp, #56]
    2004:	ldr	w2, [sp, #56]
    2008:	mov	w0, #0x8e39                	// #36409
    200c:	movk	w0, #0x38e3, lsl #16
    2010:	smull	x0, w2, w0
    2014:	lsr	x0, x0, #32
    2018:	asr	w1, w0, #1
    201c:	asr	w0, w2, #31
    2020:	sub	w1, w1, w0
    2024:	mov	w0, w1
    2028:	lsl	w0, w0, #3
    202c:	add	w0, w0, w1
    2030:	sub	w1, w2, w0
    2034:	cmp	w1, #0x0
    2038:	b.eq	2040 <gcov_sort_icall_topn_counter+0x54>  // b.none
    203c:	bl	0 <abort>
    2040:	ldr	x0, [sp, #24]
    2044:	ldr	x0, [x0, #8]
    2048:	str	x0, [sp, #48]
    204c:	str	wzr, [sp, #60]
    2050:	b	2084 <gcov_sort_icall_topn_counter+0x98>
    2054:	ldrsw	x0, [sp, #60]
    2058:	add	x0, x0, #0x1
    205c:	lsl	x0, x0, #3
    2060:	ldr	x1, [sp, #48]
    2064:	add	x0, x1, x0
    2068:	str	x0, [sp, #40]
    206c:	mov	w1, #0x8                   	// #8
    2070:	ldr	x0, [sp, #40]
    2074:	bl	1e94 <__gcov_sort_n_vals>
    2078:	ldr	w0, [sp, #60]
    207c:	add	w0, w0, #0x9
    2080:	str	w0, [sp, #60]
    2084:	ldr	w1, [sp, #60]
    2088:	ldr	w0, [sp, #56]
    208c:	cmp	w1, w0
    2090:	b.lt	2054 <gcov_sort_icall_topn_counter+0x68>  // b.tstop
    2094:	nop
    2098:	nop
    209c:	ldp	x29, x30, [sp], #64
    20a0:	ret

00000000000020a4 <gcov_sort_topn_counter_arrays>:
    20a4:	stp	x29, x30, [sp, #-64]!
    20a8:	mov	x29, sp
    20ac:	str	x0, [sp, #24]
    20b0:	ldr	x0, [sp, #24]
    20b4:	ldr	x0, [x0, #96]
    20b8:	cmp	x0, #0x0
    20bc:	b.eq	2178 <gcov_sort_topn_counter_arrays+0xd4>  // b.none
    20c0:	str	wzr, [sp, #56]
    20c4:	b	2160 <gcov_sort_topn_counter_arrays+0xbc>
    20c8:	ldr	x0, [sp, #24]
    20cc:	ldr	x1, [x0, #112]
    20d0:	ldrsw	x0, [sp, #56]
    20d4:	lsl	x0, x0, #3
    20d8:	add	x0, x1, x0
    20dc:	ldr	x0, [x0]
    20e0:	str	x0, [sp, #40]
    20e4:	ldr	x0, [sp, #40]
    20e8:	add	x0, x0, #0x18
    20ec:	str	x0, [sp, #48]
    20f0:	str	wzr, [sp, #60]
    20f4:	b	2148 <gcov_sort_topn_counter_arrays+0xa4>
    20f8:	ldr	x0, [sp, #24]
    20fc:	ldr	w1, [sp, #60]
    2100:	add	x1, x1, #0x4
    2104:	ldr	x0, [x0, x1, lsl #3]
    2108:	cmp	x0, #0x0
    210c:	b.eq	2138 <gcov_sort_topn_counter_arrays+0x94>  // b.none
    2110:	ldr	w0, [sp, #60]
    2114:	cmp	w0, #0x8
    2118:	b.ne	2128 <gcov_sort_topn_counter_arrays+0x84>  // b.any
    211c:	ldr	x0, [sp, #48]
    2120:	bl	1fec <gcov_sort_icall_topn_counter>
    2124:	b	2154 <gcov_sort_topn_counter_arrays+0xb0>
    2128:	ldr	x0, [sp, #48]
    212c:	add	x0, x0, #0x10
    2130:	str	x0, [sp, #48]
    2134:	b	213c <gcov_sort_topn_counter_arrays+0x98>
    2138:	nop
    213c:	ldr	w0, [sp, #60]
    2140:	add	w0, w0, #0x1
    2144:	str	w0, [sp, #60]
    2148:	ldr	w0, [sp, #60]
    214c:	cmp	w0, #0x8
    2150:	b.ls	20f8 <gcov_sort_topn_counter_arrays+0x54>  // b.plast
    2154:	ldr	w0, [sp, #56]
    2158:	add	w0, w0, #0x1
    215c:	str	w0, [sp, #56]
    2160:	ldr	x0, [sp, #24]
    2164:	ldr	w1, [x0, #104]
    2168:	ldr	w0, [sp, #56]
    216c:	cmp	w1, w0
    2170:	b.ne	20c8 <gcov_sort_topn_counter_arrays+0x24>  // b.any
    2174:	b	217c <gcov_sort_topn_counter_arrays+0xd8>
    2178:	nop
    217c:	ldp	x29, x30, [sp], #64
    2180:	ret

0000000000002184 <dump_one_gcov>:
    2184:	stp	x29, x30, [sp, #-80]!
    2188:	mov	x29, sp
    218c:	str	x0, [sp, #40]
    2190:	str	x1, [sp, #32]
    2194:	str	w2, [sp, #28]
    2198:	str	x3, [sp, #16]
    219c:	stp	xzr, xzr, [sp, #56]
    21a0:	adrp	x0, 0 <__gcov_is_error>
    21a4:	add	x0, x0, #0x0
    21a8:	str	xzr, [x0]
    21ac:	ldr	x0, [sp, #40]
    21b0:	bl	20a4 <gcov_sort_topn_counter_arrays>
    21b4:	ldr	x1, [sp, #32]
    21b8:	ldr	x0, [sp, #40]
    21bc:	bl	15cc <gcov_exit_open_gcda_file>
    21c0:	str	w0, [sp, #76]
    21c4:	ldr	w0, [sp, #76]
    21c8:	cmn	w0, #0x1
    21cc:	b.eq	22f0 <dump_one_gcov+0x16c>  // b.none
    21d0:	bl	738 <__gcov_read_unsigned>
    21d4:	str	w0, [sp, #72]
    21d8:	ldr	w0, [sp, #72]
    21dc:	cmp	w0, #0x0
    21e0:	b.eq	223c <dump_one_gcov+0xb8>  // b.none
    21e4:	ldr	w1, [sp, #72]
    21e8:	mov	w0, #0x6461                	// #25697
    21ec:	movk	w0, #0x6763, lsl #16
    21f0:	cmp	w1, w0
    21f4:	b.eq	2214 <dump_one_gcov+0x90>  // b.none
    21f8:	ldr	x0, [sp, #32]
    21fc:	ldr	x0, [x0]
    2200:	mov	x1, x0
    2204:	adrp	x0, 0 <__gcov_is_error>
    2208:	add	x0, x0, #0x0
    220c:	bl	fdc <gcov_error>
    2210:	b	2268 <dump_one_gcov+0xe4>
    2214:	ldr	x0, [sp, #32]
    2218:	ldr	x0, [x0]
    221c:	add	x1, sp, #0x38
    2220:	mov	x2, x1
    2224:	ldr	x1, [sp, #40]
    2228:	bl	182c <merge_one_data>
    222c:	str	w0, [sp, #76]
    2230:	ldr	w0, [sp, #76]
    2234:	cmn	w0, #0x1
    2238:	b.eq	2264 <dump_one_gcov+0xe0>  // b.none
    223c:	bl	2c <__gcov_rewrite>
    2240:	ldr	w0, [sp, #28]
    2244:	add	x1, sp, #0x38
    2248:	ldr	x2, [sp, #16]
    224c:	bl	1e40 <merge_summary>
    2250:	add	x0, sp, #0x38
    2254:	mov	x1, x0
    2258:	ldr	x0, [sp, #40]
    225c:	bl	1be4 <write_one_data>
    2260:	b	2298 <dump_one_gcov+0x114>
    2264:	nop
    2268:	b	2298 <dump_one_gcov+0x114>
    226c:	adrp	x0, 0 <__gcov_is_error>
    2270:	add	x0, x0, #0x0
    2274:	ldr	x0, [x0]
    2278:	mov	w2, #0x9                   	// #9
    227c:	mov	x1, x0
    2280:	ldr	x0, [sp, #40]
    2284:	bl	9e8 <free_fn_data>
    2288:	mov	x1, x0
    228c:	adrp	x0, 0 <__gcov_is_error>
    2290:	add	x0, x0, #0x0
    2294:	str	x1, [x0]
    2298:	adrp	x0, 0 <__gcov_is_error>
    229c:	add	x0, x0, #0x0
    22a0:	ldr	x0, [x0]
    22a4:	cmp	x0, #0x0
    22a8:	b.ne	226c <dump_one_gcov+0xe8>  // b.any
    22ac:	bl	244 <__gcov_close>
    22b0:	str	w0, [sp, #76]
    22b4:	ldr	w0, [sp, #76]
    22b8:	cmp	w0, #0x0
    22bc:	b.eq	22f4 <dump_one_gcov+0x170>  // b.none
    22c0:	ldr	w0, [sp, #76]
    22c4:	cmp	w0, #0x0
    22c8:	b.ge	22d8 <dump_one_gcov+0x154>  // b.tcont
    22cc:	adrp	x0, 0 <__gcov_is_error>
    22d0:	add	x0, x0, #0x0
    22d4:	b	22e0 <dump_one_gcov+0x15c>
    22d8:	adrp	x0, 0 <__gcov_is_error>
    22dc:	add	x0, x0, #0x0
    22e0:	ldr	x1, [sp, #32]
    22e4:	ldr	x1, [x1]
    22e8:	bl	fdc <gcov_error>
    22ec:	b	22f4 <dump_one_gcov+0x170>
    22f0:	nop
    22f4:	ldp	x29, x30, [sp], #80
    22f8:	ret

00000000000022fc <gcov_do_dump>:
    22fc:	stp	x29, x30, [sp, #-96]!
    2300:	mov	x29, sp
    2304:	str	x0, [sp, #24]
    2308:	str	w1, [sp, #20]
    230c:	str	xzr, [sp, #80]
    2310:	ldr	x0, [sp, #24]
    2314:	str	x0, [sp, #88]
    2318:	b	23d8 <gcov_do_dump+0xdc>
    231c:	str	wzr, [sp, #76]
    2320:	b	23b8 <gcov_do_dump+0xbc>
    2324:	ldr	x0, [sp, #88]
    2328:	ldr	x1, [x0, #112]
    232c:	ldr	w0, [sp, #76]
    2330:	lsl	x0, x0, #3
    2334:	add	x0, x1, x0
    2338:	ldr	x0, [x0]
    233c:	add	x0, x0, #0x18
    2340:	str	x0, [sp, #64]
    2344:	str	wzr, [sp, #72]
    2348:	b	2398 <gcov_do_dump+0x9c>
    234c:	ldr	x0, [sp, #64]
    2350:	ldr	x1, [x0, #8]
    2354:	ldr	w0, [sp, #72]
    2358:	lsl	x0, x0, #3
    235c:	add	x0, x1, x0
    2360:	ldr	x0, [x0]
    2364:	ldr	x1, [sp, #80]
    2368:	cmp	x1, x0
    236c:	b.ge	238c <gcov_do_dump+0x90>  // b.tcont
    2370:	ldr	x0, [sp, #64]
    2374:	ldr	x1, [x0, #8]
    2378:	ldr	w0, [sp, #72]
    237c:	lsl	x0, x0, #3
    2380:	add	x0, x1, x0
    2384:	ldr	x0, [x0]
    2388:	str	x0, [sp, #80]
    238c:	ldr	w0, [sp, #72]
    2390:	add	w0, w0, #0x1
    2394:	str	w0, [sp, #72]
    2398:	ldr	x0, [sp, #64]
    239c:	ldr	w0, [x0]
    23a0:	ldr	w1, [sp, #72]
    23a4:	cmp	w1, w0
    23a8:	b.cc	234c <gcov_do_dump+0x50>  // b.lo, b.ul, b.last
    23ac:	ldr	w0, [sp, #76]
    23b0:	add	w0, w0, #0x1
    23b4:	str	w0, [sp, #76]
    23b8:	ldr	x0, [sp, #88]
    23bc:	ldr	w0, [x0, #104]
    23c0:	ldr	w1, [sp, #76]
    23c4:	cmp	w1, w0
    23c8:	b.ne	2324 <gcov_do_dump+0x28>  // b.any
    23cc:	ldr	x0, [sp, #88]
    23d0:	ldr	x0, [x0, #8]
    23d4:	str	x0, [sp, #88]
    23d8:	ldr	x0, [sp, #88]
    23dc:	cmp	x0, #0x0
    23e0:	b.ne	231c <gcov_do_dump+0x20>  // b.any
    23e4:	add	x0, sp, #0x28
    23e8:	bl	1478 <allocate_filename_struct>
    23ec:	ldr	x0, [sp, #24]
    23f0:	str	x0, [sp, #88]
    23f4:	b	2428 <gcov_do_dump+0x12c>
    23f8:	ldr	w1, [sp, #20]
    23fc:	add	x0, sp, #0x28
    2400:	ldr	x3, [sp, #80]
    2404:	mov	w2, w1
    2408:	mov	x1, x0
    240c:	ldr	x0, [sp, #88]
    2410:	bl	2184 <dump_one_gcov>
    2414:	ldr	x0, [sp, #40]
    2418:	bl	0 <free>
    241c:	ldr	x0, [sp, #88]
    2420:	ldr	x0, [x0, #8]
    2424:	str	x0, [sp, #88]
    2428:	ldr	x0, [sp, #88]
    242c:	cmp	x0, #0x0
    2430:	b.ne	23f8 <gcov_do_dump+0xfc>  // b.any
    2434:	ldr	x0, [sp, #56]
    2438:	bl	0 <free>
    243c:	nop
    2440:	ldp	x29, x30, [sp], #96
    2444:	ret

0000000000002448 <__gcov_dump_one>:
    2448:	stp	x29, x30, [sp, #-32]!
    244c:	mov	x29, sp
    2450:	str	x0, [sp, #24]
    2454:	ldr	x0, [sp, #24]
    2458:	ldrb	w0, [x0, #8]
    245c:	and	w0, w0, #0x1
    2460:	and	w0, w0, #0xff
    2464:	cmp	w0, #0x0
    2468:	b.ne	24b4 <__gcov_dump_one+0x6c>  // b.any
    246c:	ldr	x0, [sp, #24]
    2470:	ldr	x2, [x0]
    2474:	ldr	x0, [sp, #24]
    2478:	ldrb	w0, [x0, #8]
    247c:	ubfx	x0, x0, #1, #1
    2480:	and	w0, w0, #0xff
    2484:	mov	w1, w0
    2488:	mov	x0, x2
    248c:	bl	22fc <gcov_do_dump>
    2490:	ldr	x0, [sp, #24]
    2494:	ldrb	w1, [x0, #8]
    2498:	orr	w1, w1, #0x1
    249c:	strb	w1, [x0, #8]
    24a0:	ldr	x0, [sp, #24]
    24a4:	ldrb	w1, [x0, #8]
    24a8:	orr	w1, w1, #0x2
    24ac:	strb	w1, [x0, #8]
    24b0:	b	24b8 <__gcov_dump_one+0x70>
    24b4:	nop
    24b8:	ldp	x29, x30, [sp], #32
    24bc:	ret

00000000000024c0 <__gcov_exit>:
    24c0:	stp	x29, x30, [sp, #-16]!
    24c4:	mov	x29, sp
    24c8:	adrp	x0, 20 <__gcov_is_error+0x20>
    24cc:	add	x0, x0, #0x0
    24d0:	bl	2448 <__gcov_dump_one>
    24d4:	adrp	x0, 20 <__gcov_is_error+0x20>
    24d8:	add	x0, x0, #0x0
    24dc:	ldr	x0, [x0, #16]
    24e0:	cmp	x0, #0x0
    24e4:	b.eq	2504 <__gcov_exit+0x44>  // b.none
    24e8:	adrp	x0, 20 <__gcov_is_error+0x20>
    24ec:	add	x0, x0, #0x0
    24f0:	ldr	x0, [x0, #16]
    24f4:	adrp	x1, 20 <__gcov_is_error+0x20>
    24f8:	add	x1, x1, #0x0
    24fc:	ldr	x1, [x1, #24]
    2500:	str	x1, [x0, #24]
    2504:	adrp	x0, 20 <__gcov_is_error+0x20>
    2508:	add	x0, x0, #0x0
    250c:	ldr	x0, [x0, #24]
    2510:	cmp	x0, #0x0
    2514:	b.eq	2538 <__gcov_exit+0x78>  // b.none
    2518:	adrp	x0, 20 <__gcov_is_error+0x20>
    251c:	add	x0, x0, #0x0
    2520:	ldr	x0, [x0, #24]
    2524:	adrp	x1, 20 <__gcov_is_error+0x20>
    2528:	add	x1, x1, #0x0
    252c:	ldr	x1, [x1, #16]
    2530:	str	x1, [x0, #16]
    2534:	b	2550 <__gcov_exit+0x90>
    2538:	adrp	x0, 20 <__gcov_is_error+0x20>
    253c:	add	x0, x0, #0x0
    2540:	ldr	x1, [x0, #16]
    2544:	adrp	x0, 0 <__gcov_is_error>
    2548:	ldr	x0, [x0]
    254c:	str	x1, [x0, #8]
    2550:	bl	10c4 <gcov_error_exit>
    2554:	nop
    2558:	ldp	x29, x30, [sp], #16
    255c:	ret

0000000000002560 <__gcov_init>:
    2560:	stp	x29, x30, [sp, #-32]!
    2564:	mov	x29, sp
    2568:	str	x0, [sp, #24]
    256c:	ldr	x0, [sp, #24]
    2570:	ldr	w0, [x0]
    2574:	cmp	w0, #0x0
    2578:	b.eq	2664 <__gcov_init+0x104>  // b.none
    257c:	ldr	x0, [sp, #24]
    2580:	ldr	w0, [x0, #104]
    2584:	cmp	w0, #0x0
    2588:	b.eq	2664 <__gcov_init+0x104>  // b.none
    258c:	ldr	x0, [sp, #24]
    2590:	ldr	w0, [x0]
    2594:	mov	x2, #0x0                   	// #0
    2598:	mov	w1, w0
    259c:	ldr	x0, [sp, #24]
    25a0:	bl	e40 <gcov_version>
    25a4:	cmp	w0, #0x0
    25a8:	b.eq	2668 <__gcov_init+0x108>  // b.none
    25ac:	adrp	x0, 20 <__gcov_is_error+0x20>
    25b0:	add	x0, x0, #0x0
    25b4:	ldr	x0, [x0]
    25b8:	cmp	x0, #0x0
    25bc:	b.ne	263c <__gcov_init+0xdc>  // b.any
    25c0:	adrp	x0, 0 <__gcov_is_error>
    25c4:	ldr	x0, [x0]
    25c8:	ldr	w1, [x0]
    25cc:	adrp	x0, 0 <__gcov_is_error>
    25d0:	add	x2, x0, #0x0
    25d4:	mov	x0, #0x0                   	// #0
    25d8:	bl	e40 <gcov_version>
    25dc:	cmp	w0, #0x0
    25e0:	b.eq	263c <__gcov_init+0xdc>  // b.none
    25e4:	adrp	x0, 0 <__gcov_is_error>
    25e8:	ldr	x0, [x0]
    25ec:	ldr	x1, [x0, #8]
    25f0:	adrp	x0, 20 <__gcov_is_error+0x20>
    25f4:	add	x0, x0, #0x0
    25f8:	str	x1, [x0, #16]
    25fc:	adrp	x0, 0 <__gcov_is_error>
    2600:	ldr	x0, [x0]
    2604:	ldr	x0, [x0, #8]
    2608:	cmp	x0, #0x0
    260c:	b.eq	2628 <__gcov_init+0xc8>  // b.none
    2610:	adrp	x0, 0 <__gcov_is_error>
    2614:	ldr	x0, [x0]
    2618:	ldr	x0, [x0, #8]
    261c:	adrp	x1, 20 <__gcov_is_error+0x20>
    2620:	add	x1, x1, #0x0
    2624:	str	x1, [x0, #24]
    2628:	adrp	x0, 0 <__gcov_is_error>
    262c:	ldr	x0, [x0]
    2630:	adrp	x1, 20 <__gcov_is_error+0x20>
    2634:	add	x1, x1, #0x0
    2638:	str	x1, [x0, #8]
    263c:	adrp	x0, 20 <__gcov_is_error+0x20>
    2640:	add	x0, x0, #0x0
    2644:	ldr	x1, [x0]
    2648:	ldr	x0, [sp, #24]
    264c:	str	x1, [x0, #8]
    2650:	adrp	x0, 20 <__gcov_is_error+0x20>
    2654:	add	x0, x0, #0x0
    2658:	ldr	x1, [sp, #24]
    265c:	str	x1, [x0]
    2660:	b	2668 <__gcov_init+0x108>
    2664:	nop
    2668:	ldp	x29, x30, [sp], #32
    266c:	ret
