
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-random-seed_clang_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400fe8 <_init>:
  400fe8:	stp	x29, x30, [sp, #-16]!
  400fec:	mov	x29, sp
  400ff0:	bl	4012c0 <call_weak_fn>
  400ff4:	ldp	x29, x30, [sp], #16
  400ff8:	ret

Disassembly of section .plt:

0000000000401000 <__libc_start_main@plt-0x20>:
  401000:	stp	x16, x30, [sp, #-16]!
  401004:	adrp	x16, 41f000 <__FRAME_END__+0x1c378>
  401008:	ldr	x17, [x16, #3792]
  40100c:	add	x16, x16, #0xed0
  401010:	br	x17
  401014:	nop
  401018:	nop
  40101c:	nop

0000000000401020 <__libc_start_main@plt>:
  401020:	adrp	x16, 41f000 <__FRAME_END__+0x1c378>
  401024:	ldr	x17, [x16, #3800]
  401028:	add	x16, x16, #0xed8
  40102c:	br	x17

0000000000401030 <abort@plt>:
  401030:	adrp	x16, 41f000 <__FRAME_END__+0x1c378>
  401034:	ldr	x17, [x16, #3808]
  401038:	add	x16, x16, #0xee0
  40103c:	br	x17

0000000000401040 <__gmon_start__@plt>:
  401040:	adrp	x16, 41f000 <__FRAME_END__+0x1c378>
  401044:	ldr	x17, [x16, #3816]
  401048:	add	x16, x16, #0xee8
  40104c:	br	x17

0000000000401050 <log_setup_service@plt>:
  401050:	adrp	x16, 41f000 <__FRAME_END__+0x1c378>
  401054:	ldr	x17, [x16, #3824]
  401058:	add	x16, x16, #0xef0
  40105c:	br	x17

0000000000401060 <umask@plt>:
  401060:	adrp	x16, 41f000 <__FRAME_END__+0x1c378>
  401064:	ldr	x17, [x16, #3832]
  401068:	add	x16, x16, #0xef8
  40106c:	br	x17

0000000000401070 <random_pool_size@plt>:
  401070:	adrp	x16, 41f000 <__FRAME_END__+0x1c378>
  401074:	ldr	x17, [x16, #3840]
  401078:	add	x16, x16, #0xf00
  40107c:	br	x17

0000000000401080 <mkdir_parents@plt>:
  401080:	adrp	x16, 41f000 <__FRAME_END__+0x1c378>
  401084:	ldr	x17, [x16, #3848]
  401088:	add	x16, x16, #0xf08
  40108c:	br	x17

0000000000401090 <strcmp@plt>:
  401090:	adrp	x16, 41f000 <__FRAME_END__+0x1c378>
  401094:	ldr	x17, [x16, #3856]
  401098:	add	x16, x16, #0xf10
  40109c:	br	x17

00000000004010a0 <log_get_max_level_realm@plt>:
  4010a0:	adrp	x16, 41f000 <__FRAME_END__+0x1c378>
  4010a4:	ldr	x17, [x16, #3864]
  4010a8:	add	x16, x16, #0xf18
  4010ac:	br	x17

00000000004010b0 <log_internal_realm@plt>:
  4010b0:	adrp	x16, 41f000 <__FRAME_END__+0x1c378>
  4010b4:	ldr	x17, [x16, #3872]
  4010b8:	add	x16, x16, #0xf20
  4010bc:	br	x17

00000000004010c0 <free@plt>:
  4010c0:	adrp	x16, 41f000 <__FRAME_END__+0x1c378>
  4010c4:	ldr	x17, [x16, #3880]
  4010c8:	add	x16, x16, #0xf28
  4010cc:	br	x17

00000000004010d0 <safe_close@plt>:
  4010d0:	adrp	x16, 41f000 <__FRAME_END__+0x1c378>
  4010d4:	ldr	x17, [x16, #3888]
  4010d8:	add	x16, x16, #0xf30
  4010dc:	br	x17

00000000004010e0 <ask_password_agent_close@plt>:
  4010e0:	adrp	x16, 41f000 <__FRAME_END__+0x1c378>
  4010e4:	ldr	x17, [x16, #3896]
  4010e8:	add	x16, x16, #0xf38
  4010ec:	br	x17

00000000004010f0 <polkit_agent_close@plt>:
  4010f0:	adrp	x16, 41f000 <__FRAME_END__+0x1c378>
  4010f4:	ldr	x17, [x16, #3904]
  4010f8:	add	x16, x16, #0xf40
  4010fc:	br	x17

0000000000401100 <pager_close@plt>:
  401100:	adrp	x16, 41f000 <__FRAME_END__+0x1c378>
  401104:	ldr	x17, [x16, #3912]
  401108:	add	x16, x16, #0xf48
  40110c:	br	x17

0000000000401110 <mac_selinux_finish@plt>:
  401110:	adrp	x16, 41f000 <__FRAME_END__+0x1c378>
  401114:	ldr	x17, [x16, #3920]
  401118:	add	x16, x16, #0xf50
  40111c:	br	x17

0000000000401120 <open64@plt>:
  401120:	adrp	x16, 41f000 <__FRAME_END__+0x1c378>
  401124:	ldr	x17, [x16, #3928]
  401128:	add	x16, x16, #0xf58
  40112c:	br	x17

0000000000401130 <__errno_location@plt>:
  401130:	adrp	x16, 41f000 <__FRAME_END__+0x1c378>
  401134:	ldr	x17, [x16, #3936]
  401138:	add	x16, x16, #0xf60
  40113c:	br	x17

0000000000401140 <__fxstat64@plt>:
  401140:	adrp	x16, 41f000 <__FRAME_END__+0x1c378>
  401144:	ldr	x17, [x16, #3944]
  401148:	add	x16, x16, #0xf68
  40114c:	br	x17

0000000000401150 <malloc@plt>:
  401150:	adrp	x16, 41f000 <__FRAME_END__+0x1c378>
  401154:	ldr	x17, [x16, #3952]
  401158:	add	x16, x16, #0xf70
  40115c:	br	x17

0000000000401160 <sd_id128_get_machine@plt>:
  401160:	adrp	x16, 41f000 <__FRAME_END__+0x1c378>
  401164:	ldr	x17, [x16, #3960]
  401168:	add	x16, x16, #0xf78
  40116c:	br	x17

0000000000401170 <loop_write@plt>:
  401170:	adrp	x16, 41f000 <__FRAME_END__+0x1c378>
  401174:	ldr	x17, [x16, #3968]
  401178:	add	x16, x16, #0xf80
  40117c:	br	x17

0000000000401180 <log_oom_internal@plt>:
  401180:	adrp	x16, 41f000 <__FRAME_END__+0x1c378>
  401184:	ldr	x17, [x16, #3976]
  401188:	add	x16, x16, #0xf88
  40118c:	br	x17

0000000000401190 <loop_read@plt>:
  401190:	adrp	x16, 41f000 <__FRAME_END__+0x1c378>
  401194:	ldr	x17, [x16, #3984]
  401198:	add	x16, x16, #0xf90
  40119c:	br	x17

00000000004011a0 <lseek64@plt>:
  4011a0:	adrp	x16, 41f000 <__FRAME_END__+0x1c378>
  4011a4:	ldr	x17, [x16, #3992]
  4011a8:	add	x16, x16, #0xf98
  4011ac:	br	x17

00000000004011b0 <getenv@plt>:
  4011b0:	adrp	x16, 41f000 <__FRAME_END__+0x1c378>
  4011b4:	ldr	x17, [x16, #4000]
  4011b8:	add	x16, x16, #0xfa0
  4011bc:	br	x17

00000000004011c0 <parse_boolean@plt>:
  4011c0:	adrp	x16, 41f000 <__FRAME_END__+0x1c378>
  4011c4:	ldr	x17, [x16, #4008]
  4011c8:	add	x16, x16, #0xfa8
  4011cc:	br	x17

00000000004011d0 <fgetxattr_malloc@plt>:
  4011d0:	adrp	x16, 41f000 <__FRAME_END__+0x1c378>
  4011d4:	ldr	x17, [x16, #4016]
  4011d8:	add	x16, x16, #0xfb0
  4011dc:	br	x17

00000000004011e0 <access@plt>:
  4011e0:	adrp	x16, 41f000 <__FRAME_END__+0x1c378>
  4011e4:	ldr	x17, [x16, #4024]
  4011e8:	add	x16, x16, #0xfb8
  4011ec:	br	x17

00000000004011f0 <fremovexattr@plt>:
  4011f0:	adrp	x16, 41f000 <__FRAME_END__+0x1c378>
  4011f4:	ldr	x17, [x16, #4032]
  4011f8:	add	x16, x16, #0xfc0
  4011fc:	br	x17

0000000000401200 <fsync_full@plt>:
  401200:	adrp	x16, 41f000 <__FRAME_END__+0x1c378>
  401204:	ldr	x17, [x16, #4040]
  401208:	add	x16, x16, #0xfc8
  40120c:	br	x17

0000000000401210 <memcpy@plt>:
  401210:	adrp	x16, 41f000 <__FRAME_END__+0x1c378>
  401214:	ldr	x17, [x16, #4048]
  401218:	add	x16, x16, #0xfd0
  40121c:	br	x17

0000000000401220 <ioctl@plt>:
  401220:	adrp	x16, 41f000 <__FRAME_END__+0x1c378>
  401224:	ldr	x17, [x16, #4056]
  401228:	add	x16, x16, #0xfd8
  40122c:	br	x17

0000000000401230 <fchmod_and_chown@plt>:
  401230:	adrp	x16, 41f000 <__FRAME_END__+0x1c378>
  401234:	ldr	x17, [x16, #4064]
  401238:	add	x16, x16, #0xfe0
  40123c:	br	x17

0000000000401240 <getrandom@plt>:
  401240:	adrp	x16, 41f000 <__FRAME_END__+0x1c378>
  401244:	ldr	x17, [x16, #4072]
  401248:	add	x16, x16, #0xfe8
  40124c:	br	x17

0000000000401250 <ftruncate64@plt>:
  401250:	adrp	x16, 41f000 <__FRAME_END__+0x1c378>
  401254:	ldr	x17, [x16, #4080]
  401258:	add	x16, x16, #0xff0
  40125c:	br	x17

0000000000401260 <fsetxattr@plt>:
  401260:	adrp	x16, 41f000 <__FRAME_END__+0x1c378>
  401264:	ldr	x17, [x16, #4088]
  401268:	add	x16, x16, #0xff8
  40126c:	br	x17

Disassembly of section .text:

0000000000401270 <_start>:
  401270:	mov	x29, #0x0                   	// #0
  401274:	mov	x30, #0x0                   	// #0
  401278:	mov	x5, x0
  40127c:	ldr	x1, [sp]
  401280:	add	x2, sp, #0x8
  401284:	mov	x6, sp
  401288:	movz	x0, #0x0, lsl #48
  40128c:	movk	x0, #0x0, lsl #32
  401290:	movk	x0, #0x40, lsl #16
  401294:	movk	x0, #0x137c
  401298:	movz	x3, #0x0, lsl #48
  40129c:	movk	x3, #0x0, lsl #32
  4012a0:	movk	x3, #0x40, lsl #16
  4012a4:	movk	x3, #0x22a8
  4012a8:	movz	x4, #0x0, lsl #48
  4012ac:	movk	x4, #0x0, lsl #32
  4012b0:	movk	x4, #0x40, lsl #16
  4012b4:	movk	x4, #0x2328
  4012b8:	bl	401020 <__libc_start_main@plt>
  4012bc:	bl	401030 <abort@plt>

00000000004012c0 <call_weak_fn>:
  4012c0:	adrp	x0, 41f000 <__FRAME_END__+0x1c378>
  4012c4:	ldr	x0, [x0, #3752]
  4012c8:	cbz	x0, 4012d0 <call_weak_fn+0x10>
  4012cc:	b	401040 <__gmon_start__@plt>
  4012d0:	ret
  4012d4:	udf	#0

00000000004012d8 <deregister_tm_clones>:
  4012d8:	adrp	x0, 420000 <completed.8445>
  4012dc:	add	x0, x0, #0x0
  4012e0:	adrp	x1, 420000 <completed.8445>
  4012e4:	add	x1, x1, #0x0
  4012e8:	cmp	x1, x0
  4012ec:	b.eq	401304 <deregister_tm_clones+0x2c>  // b.none
  4012f0:	adrp	x1, 402000 <main+0xc84>
  4012f4:	ldr	x1, [x1, #832]
  4012f8:	cbz	x1, 401304 <deregister_tm_clones+0x2c>
  4012fc:	mov	x16, x1
  401300:	br	x16
  401304:	ret

0000000000401308 <register_tm_clones>:
  401308:	adrp	x0, 420000 <completed.8445>
  40130c:	add	x0, x0, #0x0
  401310:	adrp	x1, 420000 <completed.8445>
  401314:	add	x1, x1, #0x0
  401318:	sub	x1, x1, x0
  40131c:	lsr	x2, x1, #63
  401320:	add	x1, x2, x1, asr #3
  401324:	cmp	xzr, x1, asr #1
  401328:	asr	x1, x1, #1
  40132c:	b.eq	401344 <register_tm_clones+0x3c>  // b.none
  401330:	adrp	x2, 402000 <main+0xc84>
  401334:	ldr	x2, [x2, #840]
  401338:	cbz	x2, 401344 <register_tm_clones+0x3c>
  40133c:	mov	x16, x2
  401340:	br	x16
  401344:	ret

0000000000401348 <__do_global_dtors_aux>:
  401348:	stp	x29, x30, [sp, #-32]!
  40134c:	mov	x29, sp
  401350:	str	x19, [sp, #16]
  401354:	adrp	x19, 420000 <completed.8445>
  401358:	ldrb	w0, [x19]
  40135c:	cbnz	w0, 40136c <__do_global_dtors_aux+0x24>
  401360:	bl	4012d8 <deregister_tm_clones>
  401364:	mov	w0, #0x1                   	// #1
  401368:	strb	w0, [x19]
  40136c:	ldr	x19, [sp, #16]
  401370:	ldp	x29, x30, [sp], #32
  401374:	ret

0000000000401378 <frame_dummy>:
  401378:	b	401308 <register_tm_clones>

000000000040137c <main>:
  40137c:	sub	sp, sp, #0xf0
  401380:	adrp	x8, 420000 <completed.8445>
  401384:	adrp	x9, 420000 <completed.8445>
  401388:	stp	x29, x30, [sp, #144]
  40138c:	str	x27, [sp, #160]
  401390:	stp	x26, x25, [sp, #176]
  401394:	stp	x24, x23, [sp, #192]
  401398:	stp	x22, x21, [sp, #208]
  40139c:	stp	x20, x19, [sp, #224]
  4013a0:	add	x29, sp, #0x90
  4013a4:	mov	x19, x1
  4013a8:	mov	w20, w0
  4013ac:	str	w0, [x8, #8]
  4013b0:	str	x1, [x9, #16]
  4013b4:	bl	401050 <log_setup_service@plt>
  4013b8:	cmp	w20, #0x2
  4013bc:	b.ne	401454 <main+0xd8>  // b.any
  4013c0:	mov	w0, #0x12                  	// #18
  4013c4:	bl	401060 <umask@plt>
  4013c8:	bl	401070 <random_pool_size@plt>
  4013cc:	mov	x21, x0
  4013d0:	adrp	x0, 402000 <main+0xc84>
  4013d4:	add	x0, x0, #0x399
  4013d8:	mov	w1, #0x1ed                 	// #493
  4013dc:	bl	401080 <mkdir_parents@plt>
  4013e0:	tbnz	w0, #31, 40149c <main+0x120>
  4013e4:	ldr	x19, [x19, #8]
  4013e8:	adrp	x1, 402000 <main+0xc84>
  4013ec:	add	x1, x1, #0x3e6
  4013f0:	mov	x0, x19
  4013f4:	bl	401090 <strcmp@plt>
  4013f8:	cbz	w0, 401574 <main+0x1f8>
  4013fc:	adrp	x1, 402000 <main+0xc84>
  401400:	add	x1, x1, #0x490
  401404:	mov	x0, x19
  401408:	bl	401090 <strcmp@plt>
  40140c:	cbz	w0, 4015bc <main+0x240>
  401410:	mov	w0, wzr
  401414:	bl	4010a0 <log_get_max_level_realm@plt>
  401418:	cmp	w0, #0x3
  40141c:	b.lt	401490 <main+0x114>  // b.tstop
  401420:	adrp	x2, 402000 <main+0xc84>
  401424:	adrp	x4, 402000 <main+0xc84>
  401428:	adrp	x5, 402000 <main+0xc84>
  40142c:	mov	w1, #0x16                  	// #22
  401430:	add	x2, x2, #0x353
  401434:	add	x4, x4, #0x371
  401438:	add	x5, x5, #0x4c5
  40143c:	mov	w0, #0x3                   	// #3
  401440:	movk	w1, #0x4000, lsl #16
  401444:	mov	w3, #0xac                  	// #172
  401448:	mov	x6, x19
  40144c:	bl	4010b0 <log_internal_realm@plt>
  401450:	b	4014d8 <main+0x15c>
  401454:	mov	w0, wzr
  401458:	bl	4010a0 <log_get_max_level_realm@plt>
  40145c:	cmp	w0, #0x3
  401460:	b.lt	401490 <main+0x114>  // b.tstop
  401464:	adrp	x2, 402000 <main+0xc84>
  401468:	adrp	x4, 402000 <main+0xc84>
  40146c:	adrp	x5, 402000 <main+0xc84>
  401470:	mov	w1, #0x16                  	// #22
  401474:	add	x2, x2, #0x353
  401478:	add	x4, x4, #0x371
  40147c:	add	x5, x5, #0x375
  401480:	mov	w0, #0x3                   	// #3
  401484:	movk	w1, #0x4000, lsl #16
  401488:	mov	w3, #0x74                  	// #116
  40148c:	b	4014d4 <main+0x158>
  401490:	mov	x21, xzr
  401494:	mov	w22, #0xffffffea            	// #-22
  401498:	b	4014e0 <main+0x164>
  40149c:	mov	w20, w0
  4014a0:	mov	w0, wzr
  4014a4:	bl	4010a0 <log_get_max_level_realm@plt>
  4014a8:	cmp	w0, #0x3
  4014ac:	b.lt	4015a4 <main+0x228>  // b.tstop
  4014b0:	adrp	x2, 402000 <main+0xc84>
  4014b4:	adrp	x4, 402000 <main+0xc84>
  4014b8:	adrp	x5, 402000 <main+0xc84>
  4014bc:	add	x2, x2, #0x353
  4014c0:	add	x4, x4, #0x371
  4014c4:	add	x5, x5, #0x3b6
  4014c8:	mov	w0, #0x3                   	// #3
  4014cc:	mov	w3, #0x7c                  	// #124
  4014d0:	mov	w1, w20
  4014d4:	bl	4010b0 <log_internal_realm@plt>
  4014d8:	mov	w22, w0
  4014dc:	mov	x21, xzr
  4014e0:	mov	w19, #0xffffffff            	// #-1
  4014e4:	mov	w20, #0xffffffff            	// #-1
  4014e8:	mov	x0, x21
  4014ec:	bl	4010c0 <free@plt>
  4014f0:	mov	w0, w20
  4014f4:	bl	4010d0 <safe_close@plt>
  4014f8:	mov	w0, w19
  4014fc:	bl	4010d0 <safe_close@plt>
  401500:	bl	4010e0 <ask_password_agent_close@plt>
  401504:	bl	4010f0 <polkit_agent_close@plt>
  401508:	bl	401100 <pager_close@plt>
  40150c:	bl	401110 <mac_selinux_finish@plt>
  401510:	adrp	x8, 41f000 <__FRAME_END__+0x1c378>
  401514:	ldr	x8, [x8, #3760]
  401518:	adrp	x19, 41f000 <__FRAME_END__+0x1c378>
  40151c:	ldr	x19, [x19, #3768]
  401520:	add	x9, x8, #0x7
  401524:	and	x20, x9, #0xfffffffffffffff8
  401528:	cmp	x20, x19
  40152c:	cset	w9, cs  // cs = hs, nlast
  401530:	cmp	x8, #0x0
  401534:	cset	w8, eq  // eq = none
  401538:	orr	w8, w8, w9
  40153c:	tbnz	w8, #0, 401550 <main+0x1d4>
  401540:	ldp	x0, x8, [x20], #16
  401544:	blr	x8
  401548:	cmp	x20, x19
  40154c:	b.cc	401540 <main+0x1c4>  // b.lo, b.ul, b.last
  401550:	lsr	w0, w22, #31
  401554:	ldp	x20, x19, [sp, #224]
  401558:	ldp	x22, x21, [sp, #208]
  40155c:	ldp	x24, x23, [sp, #192]
  401560:	ldp	x26, x25, [sp, #176]
  401564:	ldr	x27, [sp, #160]
  401568:	ldp	x29, x30, [sp, #144]
  40156c:	add	sp, sp, #0xf0
  401570:	ret
  401574:	mov	w20, #0x100                 	// #256
  401578:	movk	w20, #0x8, lsl #16
  40157c:	mov	w8, #0x42                  	// #66
  401580:	adrp	x0, 402000 <main+0xc84>
  401584:	orr	w1, w20, w8
  401588:	add	x0, x0, #0x399
  40158c:	mov	w2, #0x180                 	// #384
  401590:	bl	401120 <open64@plt>
  401594:	tbnz	w0, #31, 401608 <main+0x28c>
  401598:	mov	w19, w0
  40159c:	mov	w27, #0x1                   	// #1
  4015a0:	b	401634 <main+0x2b8>
  4015a4:	mov	w8, wzr
  4015a8:	neg	w9, w20
  4015ac:	mov	x21, xzr
  4015b0:	mov	w19, #0xffffffff            	// #-1
  4015b4:	sub	w22, w8, w9, uxtb
  4015b8:	b	4014e4 <main+0x168>
  4015bc:	adrp	x0, 402000 <main+0xc84>
  4015c0:	mov	w1, #0x100                 	// #256
  4015c4:	mov	w19, #0x100                 	// #256
  4015c8:	add	x0, x0, #0x463
  4015cc:	movk	w1, #0x8, lsl #16
  4015d0:	movk	w19, #0x8, lsl #16
  4015d4:	bl	401120 <open64@plt>
  4015d8:	mov	w20, w0
  4015dc:	tbnz	w0, #31, 401768 <main+0x3ec>
  4015e0:	adrp	x0, 402000 <main+0xc84>
  4015e4:	add	w1, w19, #0x41
  4015e8:	add	x0, x0, #0x399
  4015ec:	mov	w2, #0x180                 	// #384
  4015f0:	bl	401120 <open64@plt>
  4015f4:	mov	w19, w0
  4015f8:	tbnz	w0, #31, 4017d8 <main+0x45c>
  4015fc:	mov	w26, wzr
  401600:	mov	w27, #0x1                   	// #1
  401604:	b	401654 <main+0x2d8>
  401608:	bl	401130 <__errno_location@plt>
  40160c:	ldr	w24, [x0]
  401610:	mov	x22, x0
  401614:	adrp	x0, 402000 <main+0xc84>
  401618:	mov	w1, #0x100                 	// #256
  40161c:	add	x0, x0, #0x399
  401620:	movk	w1, #0x8, lsl #16
  401624:	bl	401120 <open64@plt>
  401628:	mov	w19, w0
  40162c:	tbnz	w0, #31, 40183c <main+0x4c0>
  401630:	mov	w27, wzr
  401634:	adrp	x0, 402000 <main+0xc84>
  401638:	add	w1, w20, #0x2
  40163c:	add	x0, x0, #0x463
  401640:	mov	w2, #0x180                 	// #384
  401644:	bl	401120 <open64@plt>
  401648:	mov	w20, w0
  40164c:	tbnz	w0, #31, 4016f0 <main+0x374>
  401650:	mov	w26, #0x1                   	// #1
  401654:	add	x2, sp, #0x10
  401658:	mov	w0, wzr
  40165c:	mov	w1, w19
  401660:	bl	401140 <__fxstat64@plt>
  401664:	tbnz	w0, #31, 40172c <main+0x3b0>
  401668:	ldr	x8, [sp, #64]
  40166c:	mov	w9, #0xa00000              	// #10485760
  401670:	cmp	x8, #0xa00, lsl #12
  401674:	csel	x9, x8, x9, lt  // lt = tstop
  401678:	cmp	x8, x21
  40167c:	csel	x22, x9, x21, hi  // hi = pmore
  401680:	mov	x0, x22
  401684:	bl	401150 <malloc@plt>
  401688:	mov	x21, x0
  40168c:	cbz	x0, 4017b8 <main+0x43c>
  401690:	cbz	w26, 401c1c <main+0x8a0>
  401694:	mov	x0, sp
  401698:	bl	401160 <sd_id128_get_machine@plt>
  40169c:	tbnz	w0, #31, 401908 <main+0x58c>
  4016a0:	mov	x1, sp
  4016a4:	mov	w2, #0x10                  	// #16
  4016a8:	mov	w0, w20
  4016ac:	mov	w3, wzr
  4016b0:	bl	401170 <loop_write@plt>
  4016b4:	tbz	w0, #31, 401944 <main+0x5c8>
  4016b8:	mov	w23, w0
  4016bc:	mov	w0, wzr
  4016c0:	bl	4010a0 <log_get_max_level_realm@plt>
  4016c4:	cmp	w0, #0x7
  4016c8:	b.lt	401944 <main+0x5c8>  // b.tstop
  4016cc:	adrp	x2, 402000 <main+0xc84>
  4016d0:	adrp	x4, 402000 <main+0xc84>
  4016d4:	adrp	x5, 402000 <main+0xc84>
  4016d8:	add	x2, x2, #0x353
  4016dc:	add	x4, x4, #0x371
  4016e0:	add	x5, x5, #0x53b
  4016e4:	mov	w0, #0x7                   	// #7
  4016e8:	mov	w3, #0xc9                  	// #201
  4016ec:	b	40193c <main+0x5c0>
  4016f0:	bl	401130 <__errno_location@plt>
  4016f4:	ldr	w22, [x0]
  4016f8:	mov	w0, wzr
  4016fc:	bl	4010a0 <log_get_max_level_realm@plt>
  401700:	cmp	w0, #0x3
  401704:	b.lt	401824 <main+0x4a8>  // b.tstop
  401708:	adrp	x2, 402000 <main+0xc84>
  40170c:	adrp	x4, 402000 <main+0xc84>
  401710:	adrp	x5, 402000 <main+0xc84>
  401714:	add	x2, x2, #0x353
  401718:	add	x4, x4, #0x371
  40171c:	add	x5, x5, #0x470
  401720:	mov	w0, #0x3                   	// #3
  401724:	mov	w3, #0x98                  	// #152
  401728:	b	401810 <main+0x494>
  40172c:	bl	401130 <__errno_location@plt>
  401730:	ldr	w22, [x0]
  401734:	mov	w0, wzr
  401738:	bl	4010a0 <log_get_max_level_realm@plt>
  40173c:	cmp	w0, #0x3
  401740:	b.lt	401824 <main+0x4a8>  // b.tstop
  401744:	adrp	x2, 402000 <main+0xc84>
  401748:	adrp	x4, 402000 <main+0xc84>
  40174c:	adrp	x5, 402000 <main+0xc84>
  401750:	add	x2, x2, #0x353
  401754:	add	x4, x4, #0x371
  401758:	add	x5, x5, #0x4d8
  40175c:	mov	w0, #0x3                   	// #3
  401760:	mov	w3, #0xaf                  	// #175
  401764:	b	401810 <main+0x494>
  401768:	bl	401130 <__errno_location@plt>
  40176c:	ldr	w19, [x0]
  401770:	mov	w0, wzr
  401774:	bl	4010a0 <log_get_max_level_realm@plt>
  401778:	cmp	w0, #0x3
  40177c:	b.lt	4018b4 <main+0x538>  // b.tstop
  401780:	adrp	x2, 402000 <main+0xc84>
  401784:	adrp	x4, 402000 <main+0xc84>
  401788:	adrp	x5, 402000 <main+0xc84>
  40178c:	add	x2, x2, #0x353
  401790:	add	x4, x4, #0x371
  401794:	add	x5, x5, #0x470
  401798:	mov	w0, #0x3                   	// #3
  40179c:	mov	w3, #0xa1                  	// #161
  4017a0:	mov	w1, w19
  4017a4:	bl	4010b0 <log_internal_realm@plt>
  4017a8:	mov	w22, w0
  4017ac:	mov	x21, xzr
  4017b0:	mov	w19, #0xffffffff            	// #-1
  4017b4:	b	4014e8 <main+0x16c>
  4017b8:	adrp	x1, 402000 <main+0xc84>
  4017bc:	adrp	x3, 402000 <main+0xc84>
  4017c0:	add	x1, x1, #0x353
  4017c4:	add	x3, x3, #0x371
  4017c8:	mov	w2, #0xb7                  	// #183
  4017cc:	bl	401180 <log_oom_internal@plt>
  4017d0:	mov	w22, w0
  4017d4:	b	4014e8 <main+0x16c>
  4017d8:	bl	401130 <__errno_location@plt>
  4017dc:	ldr	w22, [x0]
  4017e0:	mov	w0, wzr
  4017e4:	bl	4010a0 <log_get_max_level_realm@plt>
  4017e8:	cmp	w0, #0x3
  4017ec:	b.lt	401824 <main+0x4a8>  // b.tstop
  4017f0:	adrp	x2, 402000 <main+0xc84>
  4017f4:	adrp	x4, 402000 <main+0xc84>
  4017f8:	adrp	x5, 402000 <main+0xc84>
  4017fc:	add	x2, x2, #0x353
  401800:	add	x4, x4, #0x371
  401804:	add	x5, x5, #0x495
  401808:	mov	w0, #0x3                   	// #3
  40180c:	mov	w3, #0xa5                  	// #165
  401810:	mov	w1, w22
  401814:	bl	4010b0 <log_internal_realm@plt>
  401818:	mov	w22, w0
  40181c:	mov	x21, xzr
  401820:	b	4014e8 <main+0x16c>
  401824:	cmp	w22, #0x0
  401828:	mov	w8, wzr
  40182c:	cneg	w9, w22, mi  // mi = first
  401830:	mov	x21, xzr
  401834:	sub	w22, w8, w9, uxtb
  401838:	b	4014e8 <main+0x16c>
  40183c:	ldr	w23, [x22]
  401840:	mov	w8, #0x3                   	// #3
  401844:	mov	w9, #0x7                   	// #7
  401848:	mov	w0, wzr
  40184c:	cmp	w23, #0x2
  401850:	csel	w20, w9, w8, eq  // eq = none
  401854:	bl	4010a0 <log_get_max_level_realm@plt>
  401858:	cmp	w0, w20
  40185c:	mov	w21, w23
  401860:	b.lt	401890 <main+0x514>  // b.tstop
  401864:	adrp	x2, 402000 <main+0xc84>
  401868:	adrp	x4, 402000 <main+0xc84>
  40186c:	adrp	x5, 402000 <main+0xc84>
  401870:	neg	w1, w24
  401874:	add	x2, x2, #0x353
  401878:	add	x4, x4, #0x371
  40187c:	add	x5, x5, #0x3eb
  401880:	mov	w3, #0x8e                  	// #142
  401884:	mov	w0, w20
  401888:	bl	4010b0 <log_internal_realm@plt>
  40188c:	ldr	w21, [x22]
  401890:	mov	w0, wzr
  401894:	bl	4010a0 <log_get_max_level_realm@plt>
  401898:	cmp	w0, w20
  40189c:	b.ge	4018d0 <main+0x554>  // b.tcont
  4018a0:	cmp	w21, #0x0
  4018a4:	mov	w8, wzr
  4018a8:	cneg	w9, w21, mi  // mi = first
  4018ac:	sub	w0, w8, w9, uxtb
  4018b0:	b	4018f8 <main+0x57c>
  4018b4:	cmp	w19, #0x0
  4018b8:	mov	w8, wzr
  4018bc:	cneg	w9, w19, mi  // mi = first
  4018c0:	mov	x21, xzr
  4018c4:	sub	w22, w8, w9, uxtb
  4018c8:	mov	w19, #0xffffffff            	// #-1
  4018cc:	b	4014e8 <main+0x16c>
  4018d0:	adrp	x2, 402000 <main+0xc84>
  4018d4:	adrp	x4, 402000 <main+0xc84>
  4018d8:	adrp	x5, 402000 <main+0xc84>
  4018dc:	add	x2, x2, #0x353
  4018e0:	add	x4, x4, #0x371
  4018e4:	add	x5, x5, #0x427
  4018e8:	mov	w3, #0x90                  	// #144
  4018ec:	mov	w0, w20
  4018f0:	mov	w1, w21
  4018f4:	bl	4010b0 <log_internal_realm@plt>
  4018f8:	cmp	w23, #0x2
  4018fc:	mov	x21, xzr
  401900:	csel	w22, wzr, w0, eq  // eq = none
  401904:	b	4014e4 <main+0x168>
  401908:	mov	w23, w0
  40190c:	mov	w0, wzr
  401910:	bl	4010a0 <log_get_max_level_realm@plt>
  401914:	cmp	w0, #0x7
  401918:	b.lt	401944 <main+0x5c8>  // b.tstop
  40191c:	adrp	x2, 402000 <main+0xc84>
  401920:	adrp	x4, 402000 <main+0xc84>
  401924:	adrp	x5, 402000 <main+0xc84>
  401928:	add	x2, x2, #0x353
  40192c:	add	x4, x4, #0x371
  401930:	add	x5, x5, #0x514
  401934:	mov	w0, #0x7                   	// #7
  401938:	mov	w3, #0xc5                  	// #197
  40193c:	mov	w1, w23
  401940:	bl	4010b0 <log_internal_realm@plt>
  401944:	mov	w0, w19
  401948:	mov	x1, x21
  40194c:	mov	x2, x22
  401950:	mov	w3, wzr
  401954:	bl	401190 <loop_read@plt>
  401958:	mov	x23, x0
  40195c:	tbnz	x0, #63, 401a24 <main+0x6a8>
  401960:	cbz	x23, 401a5c <main+0x6e0>
  401964:	mov	w0, w19
  401968:	mov	x1, xzr
  40196c:	mov	w2, wzr
  401970:	bl	4011a0 <lseek64@plt>
  401974:	adrp	x0, 402000 <main+0xc84>
  401978:	add	x0, x0, #0x8d8
  40197c:	str	xzr, [x29, #24]
  401980:	bl	4011b0 <getenv@plt>
  401984:	cbz	x0, 401a94 <main+0x718>
  401988:	adrp	x1, 402000 <main+0xc84>
  40198c:	add	x1, x1, #0x93d
  401990:	mov	x24, x0
  401994:	bl	401090 <strcmp@plt>
  401998:	cbz	w0, 401e98 <main+0xb1c>
  40199c:	mov	x0, x24
  4019a0:	bl	4011c0 <parse_boolean@plt>
  4019a4:	cmp	w0, #0x0
  4019a8:	b.le	401f7c <main+0xc00>
  4019ac:	adrp	x1, 402000 <main+0xc84>
  4019b0:	add	x1, x1, #0x5f6
  4019b4:	add	x2, x29, #0x18
  4019b8:	mov	w0, w19
  4019bc:	bl	4011d0 <fgetxattr_malloc@plt>
  4019c0:	tbnz	w0, #31, 4020ac <main+0xd30>
  4019c4:	ldr	x24, [x29, #24]
  4019c8:	mov	x0, x24
  4019cc:	bl	4011c0 <parse_boolean@plt>
  4019d0:	cmp	w0, #0x0
  4019d4:	b.le	402130 <main+0xdb4>
  4019d8:	adrp	x0, 402000 <main+0xc84>
  4019dc:	add	x0, x0, #0xb0d
  4019e0:	mov	w1, wzr
  4019e4:	bl	4011e0 <access@plt>
  4019e8:	tbnz	w0, #31, 40219c <main+0xe20>
  4019ec:	mov	w0, wzr
  4019f0:	bl	4010a0 <log_get_max_level_realm@plt>
  4019f4:	cmp	w0, #0x7
  4019f8:	mov	w25, wzr
  4019fc:	b.lt	401ad0 <main+0x754>  // b.tstop
  401a00:	adrp	x2, 402000 <main+0xc84>
  401a04:	adrp	x4, 402000 <main+0xc84>
  401a08:	adrp	x5, 402000 <main+0xc84>
  401a0c:	add	x2, x2, #0x353
  401a10:	add	x4, x4, #0x8f3
  401a14:	add	x5, x5, #0xb72
  401a18:	mov	w0, #0x7                   	// #7
  401a1c:	mov	w3, #0x60                  	// #96
  401a20:	b	401ac4 <main+0x748>
  401a24:	mov	w0, wzr
  401a28:	bl	4010a0 <log_get_max_level_realm@plt>
  401a2c:	cmp	w0, #0x3
  401a30:	b.lt	401c1c <main+0x8a0>  // b.tstop
  401a34:	adrp	x2, 402000 <main+0xc84>
  401a38:	adrp	x4, 402000 <main+0xc84>
  401a3c:	adrp	x5, 402000 <main+0xc84>
  401a40:	add	x2, x2, #0x353
  401a44:	add	x4, x4, #0x371
  401a48:	add	x5, x5, #0x574
  401a4c:	mov	w0, #0x3                   	// #3
  401a50:	mov	w3, #0xce                  	// #206
  401a54:	mov	w1, w23
  401a58:	b	401c18 <main+0x89c>
  401a5c:	mov	w0, wzr
  401a60:	bl	4010a0 <log_get_max_level_realm@plt>
  401a64:	cmp	w0, #0x7
  401a68:	b.lt	401c1c <main+0x8a0>  // b.tstop
  401a6c:	adrp	x2, 402000 <main+0xc84>
  401a70:	adrp	x4, 402000 <main+0xc84>
  401a74:	adrp	x5, 402000 <main+0xc84>
  401a78:	add	x2, x2, #0x353
  401a7c:	add	x4, x4, #0x371
  401a80:	add	x5, x5, #0x5ae
  401a84:	mov	w0, #0x7                   	// #7
  401a88:	mov	w3, #0xd0                  	// #208
  401a8c:	mov	w1, wzr
  401a90:	b	401c18 <main+0x89c>
  401a94:	bl	4010a0 <log_get_max_level_realm@plt>
  401a98:	cmp	w0, #0x7
  401a9c:	mov	w25, wzr
  401aa0:	b.lt	401ad0 <main+0x754>  // b.tstop
  401aa4:	adrp	x2, 402000 <main+0xc84>
  401aa8:	adrp	x4, 402000 <main+0xc84>
  401aac:	adrp	x5, 402000 <main+0xc84>
  401ab0:	add	x2, x2, #0x353
  401ab4:	add	x4, x4, #0x8f3
  401ab8:	add	x5, x5, #0x8fe
  401abc:	mov	w0, #0x7                   	// #7
  401ac0:	mov	w3, #0x2d                  	// #45
  401ac4:	mov	w1, wzr
  401ac8:	bl	4010b0 <log_internal_realm@plt>
  401acc:	mov	w25, wzr
  401ad0:	ldr	x0, [x29, #24]
  401ad4:	bl	4010c0 <free@plt>
  401ad8:	adrp	x1, 402000 <main+0xc84>
  401adc:	add	x1, x1, #0x5f6
  401ae0:	mov	w0, w19
  401ae4:	bl	4011f0 <fremovexattr@plt>
  401ae8:	tbnz	w0, #31, 401b40 <main+0x7c4>
  401aec:	mov	w0, w19
  401af0:	bl	401200 <fsync_full@plt>
  401af4:	tbz	w0, #31, 401b70 <main+0x7f4>
  401af8:	mov	w24, w0
  401afc:	mov	w0, wzr
  401b00:	bl	4010a0 <log_get_max_level_realm@plt>
  401b04:	cmp	w0, #0x4
  401b08:	b.lt	401b34 <main+0x7b8>  // b.tstop
  401b0c:	adrp	x2, 402000 <main+0xc84>
  401b10:	adrp	x4, 402000 <main+0xc84>
  401b14:	adrp	x5, 402000 <main+0xc84>
  401b18:	add	x2, x2, #0x353
  401b1c:	add	x4, x4, #0x371
  401b20:	add	x5, x5, #0x644
  401b24:	mov	w0, #0x4                   	// #4
  401b28:	mov	w3, #0xe7                  	// #231
  401b2c:	mov	w1, w24
  401b30:	bl	4010b0 <log_internal_realm@plt>
  401b34:	cmp	w25, #0x1
  401b38:	csel	w25, wzr, w25, eq  // eq = none
  401b3c:	b	401b70 <main+0x7f4>
  401b40:	bl	401130 <__errno_location@plt>
  401b44:	ldr	w24, [x0]
  401b48:	sub	w8, w24, #0x26
  401b4c:	cmp	w8, #0x39
  401b50:	b.hi	402070 <main+0xcf4>  // b.pmore
  401b54:	mov	w9, #0x1                   	// #1
  401b58:	lsl	x8, x9, x8
  401b5c:	mov	x9, #0x1                   	// #1
  401b60:	movk	x9, #0x80, lsl #16
  401b64:	movk	x9, #0x200, lsl #48
  401b68:	tst	x8, x9
  401b6c:	b.eq	402070 <main+0xcf4>  // b.none
  401b70:	sub	w8, w25, #0x1
  401b74:	cmp	w8, #0x1
  401b78:	b.hi	401bc8 <main+0x84c>  // b.pmore
  401b7c:	add	x0, x23, #0x8
  401b80:	bl	401150 <malloc@plt>
  401b84:	mov	x24, x0
  401b88:	cbz	x0, 401f48 <main+0xbcc>
  401b8c:	lsl	w8, w23, #3
  401b90:	add	x0, x24, #0x8
  401b94:	mov	x1, x21
  401b98:	mov	x2, x23
  401b9c:	stp	w8, w23, [x24]
  401ba0:	bl	401210 <memcpy@plt>
  401ba4:	mov	w1, #0x5203                	// #20995
  401ba8:	movk	w1, #0x4008, lsl #16
  401bac:	mov	w0, w20
  401bb0:	mov	x2, x24
  401bb4:	bl	401220 <ioctl@plt>
  401bb8:	tbnz	w0, #31, 40200c <main+0xc90>
  401bbc:	mov	x0, x24
  401bc0:	bl	4010c0 <free@plt>
  401bc4:	b	401c1c <main+0x8a0>
  401bc8:	mov	w0, w20
  401bcc:	mov	x1, x21
  401bd0:	mov	x2, x23
  401bd4:	mov	w3, wzr
  401bd8:	bl	401170 <loop_write@plt>
  401bdc:	tbz	w0, #31, 401c1c <main+0x8a0>
  401be0:	mov	w23, w0
  401be4:	mov	w0, wzr
  401be8:	bl	4010a0 <log_get_max_level_realm@plt>
  401bec:	cmp	w0, #0x3
  401bf0:	b.lt	401c1c <main+0x8a0>  // b.tstop
  401bf4:	adrp	x2, 402000 <main+0xc84>
  401bf8:	adrp	x4, 402000 <main+0xc84>
  401bfc:	adrp	x5, 402000 <main+0xc84>
  401c00:	add	x2, x2, #0x353
  401c04:	add	x4, x4, #0x371
  401c08:	add	x5, x5, #0x6a9
  401c0c:	mov	w0, #0x3                   	// #3
  401c10:	mov	w3, #0xfe                  	// #254
  401c14:	mov	w1, w23
  401c18:	bl	4010b0 <log_internal_realm@plt>
  401c1c:	cbz	w27, 4022a0 <main+0xf24>
  401c20:	mov	w1, #0x180                 	// #384
  401c24:	mov	w0, w19
  401c28:	mov	w2, wzr
  401c2c:	mov	w3, wzr
  401c30:	bl	401230 <fchmod_and_chown@plt>
  401c34:	tbnz	w0, #31, 401c90 <main+0x914>
  401c38:	mov	w2, #0x1                   	// #1
  401c3c:	mov	x0, x21
  401c40:	mov	x1, x22
  401c44:	bl	401240 <getrandom@plt>
  401c48:	mov	x23, x0
  401c4c:	tbnz	x0, #63, 401ccc <main+0x950>
  401c50:	cmp	x23, x22
  401c54:	b.cs	401d98 <main+0xa1c>  // b.hs, b.nlast
  401c58:	mov	w0, wzr
  401c5c:	bl	4010a0 <log_get_max_level_realm@plt>
  401c60:	cmp	w0, #0x7
  401c64:	b.lt	401d70 <main+0x9f4>  // b.tstop
  401c68:	adrp	x2, 402000 <main+0xc84>
  401c6c:	adrp	x4, 402000 <main+0xc84>
  401c70:	adrp	x5, 402000 <main+0xc84>
  401c74:	add	x2, x2, #0x353
  401c78:	add	x4, x4, #0x371
  401c7c:	add	x5, x5, #0x797
  401c80:	mov	w0, #0x7                   	// #7
  401c84:	mov	w3, #0x116                 	// #278
  401c88:	mov	w1, wzr
  401c8c:	b	401d6c <main+0x9f0>
  401c90:	mov	w23, w0
  401c94:	mov	w0, wzr
  401c98:	bl	4010a0 <log_get_max_level_realm@plt>
  401c9c:	cmp	w0, #0x3
  401ca0:	b.lt	401e1c <main+0xaa0>  // b.tstop
  401ca4:	adrp	x2, 402000 <main+0xc84>
  401ca8:	adrp	x4, 402000 <main+0xc84>
  401cac:	adrp	x5, 402000 <main+0xc84>
  401cb0:	add	x2, x2, #0x353
  401cb4:	add	x4, x4, #0x371
  401cb8:	add	x5, x5, #0x6d2
  401cbc:	mov	w0, #0x3                   	// #3
  401cc0:	mov	w3, #0x10a                 	// #266
  401cc4:	mov	w1, w23
  401cc8:	b	401ff0 <main+0xc74>
  401ccc:	bl	401130 <__errno_location@plt>
  401cd0:	ldr	w8, [x0]
  401cd4:	mov	x24, x0
  401cd8:	cmp	w8, #0xb
  401cdc:	b.ne	401d38 <main+0x9bc>  // b.any
  401ce0:	eor	w8, w26, #0x1
  401ce4:	tbnz	w8, #0, 401d38 <main+0x9bc>
  401ce8:	mov	w0, wzr
  401cec:	bl	4010a0 <log_get_max_level_realm@plt>
  401cf0:	cmp	w0, #0x5
  401cf4:	b.lt	401d20 <main+0x9a4>  // b.tstop
  401cf8:	adrp	x2, 402000 <main+0xc84>
  401cfc:	adrp	x4, 402000 <main+0xc84>
  401d00:	adrp	x5, 402000 <main+0xc84>
  401d04:	add	x2, x2, #0x353
  401d08:	add	x4, x4, #0x371
  401d0c:	add	x5, x5, #0x708
  401d10:	mov	w0, #0x5                   	// #5
  401d14:	mov	w3, #0x110                 	// #272
  401d18:	mov	w1, wzr
  401d1c:	bl	4010b0 <log_internal_realm@plt>
  401d20:	mov	x0, x21
  401d24:	mov	x1, x22
  401d28:	mov	w2, wzr
  401d2c:	bl	401240 <getrandom@plt>
  401d30:	mov	x23, x0
  401d34:	tbz	x0, #63, 401c50 <main+0x8d4>
  401d38:	mov	w0, wzr
  401d3c:	bl	4010a0 <log_get_max_level_realm@plt>
  401d40:	cmp	w0, #0x7
  401d44:	b.lt	401d70 <main+0x9f4>  // b.tstop
  401d48:	ldr	w1, [x24]
  401d4c:	adrp	x2, 402000 <main+0xc84>
  401d50:	adrp	x4, 402000 <main+0xc84>
  401d54:	adrp	x5, 402000 <main+0xc84>
  401d58:	add	x2, x2, #0x353
  401d5c:	add	x4, x4, #0x371
  401d60:	add	x5, x5, #0x749
  401d64:	mov	w0, #0x7                   	// #7
  401d68:	mov	w3, #0x114                 	// #276
  401d6c:	bl	4010b0 <log_internal_realm@plt>
  401d70:	mov	w0, w20
  401d74:	mov	x1, x21
  401d78:	mov	x2, x22
  401d7c:	mov	w3, wzr
  401d80:	bl	401190 <loop_read@plt>
  401d84:	mov	x23, x0
  401d88:	tbnz	x0, #63, 401e2c <main+0xab0>
  401d8c:	cbz	x23, 401ed4 <main+0xb58>
  401d90:	mov	w24, wzr
  401d94:	b	401d9c <main+0xa20>
  401d98:	mov	w24, #0x1                   	// #1
  401d9c:	mov	w0, w19
  401da0:	mov	x1, x21
  401da4:	mov	x2, x23
  401da8:	mov	w3, wzr
  401dac:	bl	401170 <loop_write@plt>
  401db0:	mov	w22, w0
  401db4:	tbnz	w0, #31, 401e64 <main+0xae8>
  401db8:	mov	w0, w19
  401dbc:	mov	x1, x23
  401dc0:	bl	401250 <ftruncate64@plt>
  401dc4:	tbnz	w0, #31, 401f14 <main+0xb98>
  401dc8:	mov	w0, w19
  401dcc:	bl	401200 <fsync_full@plt>
  401dd0:	tbnz	w0, #31, 401fb8 <main+0xc3c>
  401dd4:	cbz	w24, 4022a0 <main+0xf24>
  401dd8:	adrp	x1, 402000 <main+0xc84>
  401ddc:	adrp	x2, 402000 <main+0xc84>
  401de0:	add	x1, x1, #0x5f6
  401de4:	add	x2, x2, #0x8a1
  401de8:	mov	w3, #0x1                   	// #1
  401dec:	mov	w0, w19
  401df0:	mov	w4, wzr
  401df4:	bl	401260 <fsetxattr@plt>
  401df8:	tbz	w0, #31, 4022a0 <main+0xf24>
  401dfc:	bl	401130 <__errno_location@plt>
  401e00:	ldr	w23, [x0]
  401e04:	cmp	w23, #0x5f
  401e08:	b.eq	401e14 <main+0xa98>  // b.none
  401e0c:	cmp	w23, #0x26
  401e10:	b.ne	402264 <main+0xee8>  // b.any
  401e14:	mov	w24, #0x7                   	// #7
  401e18:	b	402268 <main+0xeec>
  401e1c:	mov	w8, wzr
  401e20:	neg	w9, w23
  401e24:	sub	w22, w8, w9, uxtb
  401e28:	b	4014e8 <main+0x16c>
  401e2c:	mov	w0, wzr
  401e30:	bl	4010a0 <log_get_max_level_realm@plt>
  401e34:	cmp	w0, #0x3
  401e38:	b.lt	401f68 <main+0xbec>  // b.tstop
  401e3c:	adrp	x2, 402000 <main+0xc84>
  401e40:	adrp	x4, 402000 <main+0xc84>
  401e44:	adrp	x5, 402000 <main+0xc84>
  401e48:	add	x2, x2, #0x353
  401e4c:	add	x4, x4, #0x371
  401e50:	add	x5, x5, #0x7d5
  401e54:	mov	w0, #0x3                   	// #3
  401e58:	mov	w3, #0x11e                 	// #286
  401e5c:	mov	w1, w23
  401e60:	b	401ff0 <main+0xc74>
  401e64:	mov	w0, wzr
  401e68:	bl	4010a0 <log_get_max_level_realm@plt>
  401e6c:	cmp	w0, #0x3
  401e70:	b.lt	401ffc <main+0xc80>  // b.tstop
  401e74:	adrp	x2, 402000 <main+0xc84>
  401e78:	adrp	x4, 402000 <main+0xc84>
  401e7c:	adrp	x5, 402000 <main+0xc84>
  401e80:	add	x2, x2, #0x353
  401e84:	add	x4, x4, #0x371
  401e88:	add	x5, x5, #0x82c
  401e8c:	mov	w0, #0x3                   	// #3
  401e90:	mov	w3, #0x126                 	// #294
  401e94:	b	401fec <main+0xc70>
  401e98:	bl	4010a0 <log_get_max_level_realm@plt>
  401e9c:	cmp	w0, #0x7
  401ea0:	b.lt	402054 <main+0xcd8>  // b.tstop
  401ea4:	adrp	x2, 402000 <main+0xc84>
  401ea8:	adrp	x4, 402000 <main+0xc84>
  401eac:	adrp	x5, 402000 <main+0xc84>
  401eb0:	add	x2, x2, #0x353
  401eb4:	add	x4, x4, #0x8f3
  401eb8:	add	x5, x5, #0x943
  401ebc:	mov	w0, #0x7                   	// #7
  401ec0:	mov	w3, #0x31                  	// #49
  401ec4:	mov	w1, wzr
  401ec8:	bl	4010b0 <log_internal_realm@plt>
  401ecc:	mov	w25, #0x2                   	// #2
  401ed0:	b	401ad0 <main+0x754>
  401ed4:	mov	w0, wzr
  401ed8:	bl	4010a0 <log_get_max_level_realm@plt>
  401edc:	cmp	w0, #0x3
  401ee0:	b.lt	40205c <main+0xce0>  // b.tstop
  401ee4:	mov	w8, #0x16                  	// #22
  401ee8:	movk	w8, #0x4000, lsl #16
  401eec:	adrp	x2, 402000 <main+0xc84>
  401ef0:	adrp	x4, 402000 <main+0xc84>
  401ef4:	adrp	x5, 402000 <main+0xc84>
  401ef8:	sub	w1, w8, #0x11
  401efc:	add	x2, x2, #0x353
  401f00:	add	x4, x4, #0x371
  401f04:	add	x5, x5, #0x803
  401f08:	mov	w0, #0x3                   	// #3
  401f0c:	mov	w3, #0x121                 	// #289
  401f10:	b	401ff0 <main+0xc74>
  401f14:	mov	w0, wzr
  401f18:	bl	4010a0 <log_get_max_level_realm@plt>
  401f1c:	cmp	w0, #0x3
  401f20:	b.lt	402064 <main+0xce8>  // b.tstop
  401f24:	adrp	x2, 402000 <main+0xc84>
  401f28:	adrp	x4, 402000 <main+0xc84>
  401f2c:	adrp	x5, 402000 <main+0xc84>
  401f30:	add	x2, x2, #0x353
  401f34:	add	x4, x4, #0x371
  401f38:	add	x5, x5, #0x855
  401f3c:	mov	w0, #0x3                   	// #3
  401f40:	mov	w3, #0x129                 	// #297
  401f44:	b	401fec <main+0xc70>
  401f48:	adrp	x1, 402000 <main+0xc84>
  401f4c:	adrp	x3, 402000 <main+0xc84>
  401f50:	add	x1, x1, #0x353
  401f54:	add	x3, x3, #0x371
  401f58:	mov	w2, #0xf3                  	// #243
  401f5c:	bl	401180 <log_oom_internal@plt>
  401f60:	mov	w22, w0
  401f64:	b	402124 <main+0xda8>
  401f68:	cmp	w23, #0x0
  401f6c:	mov	w8, wzr
  401f70:	cneg	w9, w23, mi  // mi = first
  401f74:	sub	w22, w8, w9, uxtb
  401f78:	b	4014e8 <main+0x16c>
  401f7c:	mov	w24, w0
  401f80:	mov	w0, wzr
  401f84:	bl	4010a0 <log_get_max_level_realm@plt>
  401f88:	tbnz	w24, #31, 40216c <main+0xdf0>
  401f8c:	cmp	w0, #0x7
  401f90:	b.lt	401acc <main+0x750>  // b.tstop
  401f94:	adrp	x2, 402000 <main+0xc84>
  401f98:	adrp	x4, 402000 <main+0xc84>
  401f9c:	adrp	x5, 402000 <main+0xc84>
  401fa0:	add	x2, x2, #0x353
  401fa4:	add	x4, x4, #0x8f3
  401fa8:	add	x5, x5, #0x9cc
  401fac:	mov	w0, #0x7                   	// #7
  401fb0:	mov	w3, #0x3a                  	// #58
  401fb4:	b	401ac4 <main+0x748>
  401fb8:	mov	w22, w0
  401fbc:	mov	w0, wzr
  401fc0:	bl	4010a0 <log_get_max_level_realm@plt>
  401fc4:	cmp	w0, #0x3
  401fc8:	b.lt	401ffc <main+0xc80>  // b.tstop
  401fcc:	adrp	x2, 402000 <main+0xc84>
  401fd0:	adrp	x4, 402000 <main+0xc84>
  401fd4:	adrp	x5, 402000 <main+0xc84>
  401fd8:	add	x2, x2, #0x353
  401fdc:	add	x4, x4, #0x371
  401fe0:	add	x5, x5, #0x87d
  401fe4:	mov	w0, #0x3                   	// #3
  401fe8:	mov	w3, #0x12d                 	// #301
  401fec:	mov	w1, w22
  401ff0:	bl	4010b0 <log_internal_realm@plt>
  401ff4:	mov	w22, w0
  401ff8:	b	4014e8 <main+0x16c>
  401ffc:	mov	w8, wzr
  402000:	neg	w9, w22
  402004:	sub	w22, w8, w9, uxtb
  402008:	b	4014e8 <main+0x16c>
  40200c:	bl	401130 <__errno_location@plt>
  402010:	ldr	w22, [x0]
  402014:	mov	w0, wzr
  402018:	bl	4010a0 <log_get_max_level_realm@plt>
  40201c:	cmp	w0, #0x4
  402020:	b.lt	402114 <main+0xd98>  // b.tstop
  402024:	adrp	x2, 402000 <main+0xc84>
  402028:	adrp	x4, 402000 <main+0xc84>
  40202c:	adrp	x5, 402000 <main+0xc84>
  402030:	add	x2, x2, #0x353
  402034:	add	x4, x4, #0x371
  402038:	add	x5, x5, #0x682
  40203c:	mov	w0, #0x4                   	// #4
  402040:	mov	w3, #0xfa                  	// #250
  402044:	mov	w1, w22
  402048:	bl	4010b0 <log_internal_realm@plt>
  40204c:	mov	w22, w0
  402050:	b	402124 <main+0xda8>
  402054:	mov	w25, #0x2                   	// #2
  402058:	b	401ad0 <main+0x754>
  40205c:	mov	w22, #0xfffffffb            	// #-5
  402060:	b	4014e8 <main+0x16c>
  402064:	mov	w8, wzr
  402068:	sub	w22, w8, w22, uxtb
  40206c:	b	4014e8 <main+0x16c>
  402070:	mov	w0, wzr
  402074:	bl	4010a0 <log_get_max_level_realm@plt>
  402078:	cmp	w0, #0x4
  40207c:	b.lt	401b70 <main+0x7f4>  // b.tstop
  402080:	adrp	x2, 402000 <main+0xc84>
  402084:	adrp	x4, 402000 <main+0xc84>
  402088:	adrp	x5, 402000 <main+0xc84>
  40208c:	add	x2, x2, #0x353
  402090:	add	x4, x4, #0x371
  402094:	add	x5, x5, #0x612
  402098:	mov	w0, #0x4                   	// #4
  40209c:	mov	w3, #0xe1                  	// #225
  4020a0:	mov	w1, w24
  4020a4:	bl	4010b0 <log_internal_realm@plt>
  4020a8:	b	401b70 <main+0x7f4>
  4020ac:	add	w8, w0, #0x5f
  4020b0:	mov	w24, w0
  4020b4:	cmp	w8, #0x39
  4020b8:	b.hi	4021b4 <main+0xe38>  // b.pmore
  4020bc:	mov	w9, #0x1                   	// #1
  4020c0:	lsl	x8, x9, x8
  4020c4:	mov	x9, #0x1                   	// #1
  4020c8:	movk	x9, #0x4, lsl #32
  4020cc:	movk	x9, #0x200, lsl #48
  4020d0:	tst	x8, x9
  4020d4:	b.eq	4021b4 <main+0xe38>  // b.none
  4020d8:	mov	w0, wzr
  4020dc:	bl	4010a0 <log_get_max_level_realm@plt>
  4020e0:	cmp	w0, #0x7
  4020e4:	mov	w25, wzr
  4020e8:	b.lt	401ad0 <main+0x754>  // b.tstop
  4020ec:	adrp	x2, 402000 <main+0xc84>
  4020f0:	adrp	x4, 402000 <main+0xc84>
  4020f4:	adrp	x5, 402000 <main+0xc84>
  4020f8:	add	x2, x2, #0x353
  4020fc:	add	x4, x4, #0x8f3
  402100:	add	x5, x5, #0xa24
  402104:	mov	w0, #0x7                   	// #7
  402108:	mov	w3, #0x43                  	// #67
  40210c:	mov	w1, w24
  402110:	b	401ac8 <main+0x74c>
  402114:	cmp	w22, #0x0
  402118:	mov	w8, wzr
  40211c:	cneg	w9, w22, mi  // mi = first
  402120:	sub	w22, w8, w9, uxtb
  402124:	mov	x0, x24
  402128:	bl	4010c0 <free@plt>
  40212c:	b	4014e8 <main+0x16c>
  402130:	mov	w25, w0
  402134:	mov	w0, wzr
  402138:	bl	4010a0 <log_get_max_level_realm@plt>
  40213c:	tbnz	w25, #31, 4021f0 <main+0xe74>
  402140:	cmp	w0, #0x7
  402144:	b.lt	401acc <main+0x750>  // b.tstop
  402148:	adrp	x2, 402000 <main+0xc84>
  40214c:	adrp	x4, 402000 <main+0xc84>
  402150:	adrp	x5, 402000 <main+0xc84>
  402154:	add	x2, x2, #0x353
  402158:	add	x4, x4, #0x8f3
  40215c:	add	x5, x5, #0xad7
  402160:	mov	w0, #0x7                   	// #7
  402164:	mov	w3, #0x4f                  	// #79
  402168:	b	401ac4 <main+0x748>
  40216c:	cmp	w0, #0x4
  402170:	b.lt	401acc <main+0x750>  // b.tstop
  402174:	adrp	x2, 402000 <main+0xc84>
  402178:	adrp	x4, 402000 <main+0xc84>
  40217c:	adrp	x5, 402000 <main+0xc84>
  402180:	add	x2, x2, #0x353
  402184:	add	x4, x4, #0x8f3
  402188:	add	x5, x5, #0x985
  40218c:	mov	w0, #0x4                   	// #4
  402190:	mov	w3, #0x38                  	// #56
  402194:	mov	w1, w24
  402198:	b	401ac8 <main+0x74c>
  40219c:	bl	401130 <__errno_location@plt>
  4021a0:	ldr	w24, [x0]
  4021a4:	cmp	w24, #0x2
  4021a8:	b.ne	402228 <main+0xeac>  // b.any
  4021ac:	mov	w25, #0x1                   	// #1
  4021b0:	b	401ad0 <main+0x754>
  4021b4:	mov	w0, wzr
  4021b8:	bl	4010a0 <log_get_max_level_realm@plt>
  4021bc:	cmp	w0, #0x4
  4021c0:	mov	w25, wzr
  4021c4:	b.lt	401ad0 <main+0x754>  // b.tstop
  4021c8:	adrp	x2, 402000 <main+0xc84>
  4021cc:	adrp	x4, 402000 <main+0xc84>
  4021d0:	adrp	x5, 402000 <main+0xc84>
  4021d4:	add	x2, x2, #0x353
  4021d8:	add	x4, x4, #0x8f3
  4021dc:	add	x5, x5, #0xa5a
  4021e0:	mov	w0, #0x4                   	// #4
  4021e4:	mov	w3, #0x45                  	// #69
  4021e8:	mov	w1, w24
  4021ec:	b	401ac8 <main+0x74c>
  4021f0:	cmp	w0, #0x4
  4021f4:	b.lt	401acc <main+0x750>  // b.tstop
  4021f8:	adrp	x2, 402000 <main+0xc84>
  4021fc:	adrp	x4, 402000 <main+0xc84>
  402200:	adrp	x5, 402000 <main+0xc84>
  402204:	add	x2, x2, #0x353
  402208:	add	x4, x4, #0x8f3
  40220c:	add	x5, x5, #0xa8a
  402210:	mov	w0, #0x4                   	// #4
  402214:	mov	w3, #0x4d                  	// #77
  402218:	mov	w1, w25
  40221c:	mov	x6, x24
  402220:	bl	4010b0 <log_internal_realm@plt>
  402224:	b	401acc <main+0x750>
  402228:	mov	w0, wzr
  40222c:	bl	4010a0 <log_get_max_level_realm@plt>
  402230:	cmp	w0, #0x4
  402234:	mov	w25, wzr
  402238:	b.lt	401ad0 <main+0x754>  // b.tstop
  40223c:	adrp	x2, 402000 <main+0xc84>
  402240:	adrp	x4, 402000 <main+0xc84>
  402244:	adrp	x5, 402000 <main+0xc84>
  402248:	add	x2, x2, #0x353
  40224c:	add	x4, x4, #0x8f3
  402250:	add	x5, x5, #0xb25
  402254:	mov	w0, #0x4                   	// #4
  402258:	mov	w3, #0x5a                  	// #90
  40225c:	mov	w1, w24
  402260:	b	401ac8 <main+0x74c>
  402264:	mov	w24, #0x4                   	// #4
  402268:	mov	w0, wzr
  40226c:	bl	4010a0 <log_get_max_level_realm@plt>
  402270:	cmp	w0, w24
  402274:	b.lt	4022a0 <main+0xf24>  // b.tstop
  402278:	adrp	x2, 402000 <main+0xc84>
  40227c:	adrp	x4, 402000 <main+0xc84>
  402280:	adrp	x5, 402000 <main+0xc84>
  402284:	add	x2, x2, #0x353
  402288:	add	x4, x4, #0x371
  40228c:	add	x5, x5, #0x8a3
  402290:	mov	w3, #0x134                 	// #308
  402294:	mov	w0, w24
  402298:	mov	w1, w23
  40229c:	bl	4010b0 <log_internal_realm@plt>
  4022a0:	mov	w22, wzr
  4022a4:	b	4014e8 <main+0x16c>

00000000004022a8 <__libc_csu_init>:
  4022a8:	stp	x29, x30, [sp, #-64]!
  4022ac:	mov	x29, sp
  4022b0:	stp	x19, x20, [sp, #16]
  4022b4:	adrp	x20, 41f000 <__FRAME_END__+0x1c378>
  4022b8:	add	x20, x20, #0xc80
  4022bc:	stp	x21, x22, [sp, #32]
  4022c0:	adrp	x21, 41f000 <__FRAME_END__+0x1c378>
  4022c4:	add	x21, x21, #0xc78
  4022c8:	sub	x20, x20, x21
  4022cc:	mov	w22, w0
  4022d0:	stp	x23, x24, [sp, #48]
  4022d4:	mov	x23, x1
  4022d8:	mov	x24, x2
  4022dc:	bl	400fe8 <_init>
  4022e0:	cmp	xzr, x20, asr #3
  4022e4:	b.eq	402310 <__libc_csu_init+0x68>  // b.none
  4022e8:	asr	x20, x20, #3
  4022ec:	mov	x19, #0x0                   	// #0
  4022f0:	ldr	x3, [x21, x19, lsl #3]
  4022f4:	mov	x2, x24
  4022f8:	add	x19, x19, #0x1
  4022fc:	mov	x1, x23
  402300:	mov	w0, w22
  402304:	blr	x3
  402308:	cmp	x20, x19
  40230c:	b.ne	4022f0 <__libc_csu_init+0x48>  // b.any
  402310:	ldp	x19, x20, [sp, #16]
  402314:	ldp	x21, x22, [sp, #32]
  402318:	ldp	x23, x24, [sp, #48]
  40231c:	ldp	x29, x30, [sp], #64
  402320:	ret
  402324:	nop

0000000000402328 <__libc_csu_fini>:
  402328:	ret

Disassembly of section .fini:

000000000040232c <_fini>:
  40232c:	stp	x29, x30, [sp, #-16]!
  402330:	mov	x29, sp
  402334:	ldp	x29, x30, [sp], #16
  402338:	ret
