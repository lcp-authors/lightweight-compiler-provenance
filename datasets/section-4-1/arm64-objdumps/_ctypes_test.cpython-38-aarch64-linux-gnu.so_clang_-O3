
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_ctypes_test.cpython-38-aarch64-linux-gnu.so_clang_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000020a8 <.init>:
    20a8:	stp	x29, x30, [sp, #-16]!
    20ac:	mov	x29, sp
    20b0:	bl	21f0 <printf@plt+0x10>
    20b4:	ldp	x29, x30, [sp], #16
    20b8:	ret

Disassembly of section .plt:

00000000000020c0 <memcpy@plt-0x20>:
    20c0:	stp	x16, x30, [sp, #-16]!
    20c4:	adrp	x16, 15000 <PyInit__ctypes_test@@Base+0x11c44>
    20c8:	ldr	x17, [x16, #4088]
    20cc:	add	x16, x16, #0xff8
    20d0:	br	x17
    20d4:	nop
    20d8:	nop
    20dc:	nop

00000000000020e0 <memcpy@plt>:
    20e0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    20e4:	ldr	x17, [x16]
    20e8:	add	x16, x16, #0x0
    20ec:	br	x17

00000000000020f0 <strtok@plt>:
    20f0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    20f4:	ldr	x17, [x16, #8]
    20f8:	add	x16, x16, #0x8
    20fc:	br	x17

0000000000002100 <strlen@plt>:
    2100:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    2104:	ldr	x17, [x16, #16]
    2108:	add	x16, x16, #0x10
    210c:	br	x17

0000000000002110 <__cxa_finalize@plt>:
    2110:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    2114:	ldr	x17, [x16, #24]
    2118:	add	x16, x16, #0x18
    211c:	br	x17

0000000000002120 <qsort@plt>:
    2120:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    2124:	ldr	x17, [x16, #32]
    2128:	add	x16, x16, #0x20
    212c:	br	x17

0000000000002130 <sqrt@plt>:
    2130:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    2134:	ldr	x17, [x16, #40]
    2138:	add	x16, x16, #0x28
    213c:	br	x17

0000000000002140 <malloc@plt>:
    2140:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    2144:	ldr	x17, [x16, #48]
    2148:	add	x16, x16, #0x30
    214c:	br	x17

0000000000002150 <wcslen@plt>:
    2150:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    2154:	ldr	x17, [x16, #56]
    2158:	add	x16, x16, #0x38
    215c:	br	x17

0000000000002160 <__gmon_start__@plt>:
    2160:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    2164:	ldr	x17, [x16, #64]
    2168:	add	x16, x16, #0x40
    216c:	br	x17

0000000000002170 <PyModule_Create2@plt>:
    2170:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    2174:	ldr	x17, [x16, #72]
    2178:	add	x16, x16, #0x48
    217c:	br	x17

0000000000002180 <puts@plt>:
    2180:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    2184:	ldr	x17, [x16, #80]
    2188:	add	x16, x16, #0x50
    218c:	br	x17

0000000000002190 <PyArg_ParseTuple@plt>:
    2190:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    2194:	ldr	x17, [x16, #88]
    2198:	add	x16, x16, #0x58
    219c:	br	x17

00000000000021a0 <free@plt>:
    21a0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    21a4:	ldr	x17, [x16, #96]
    21a8:	add	x16, x16, #0x60
    21ac:	br	x17

00000000000021b0 <strchr@plt>:
    21b0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    21b4:	ldr	x17, [x16, #104]
    21b8:	add	x16, x16, #0x68
    21bc:	br	x17

00000000000021c0 <strcpy@plt>:
    21c0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    21c4:	ldr	x17, [x16, #112]
    21c8:	add	x16, x16, #0x70
    21cc:	br	x17

00000000000021d0 <vfprintf@plt>:
    21d0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    21d4:	ldr	x17, [x16, #120]
    21d8:	add	x16, x16, #0x78
    21dc:	br	x17

00000000000021e0 <printf@plt>:
    21e0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    21e4:	ldr	x17, [x16, #128]
    21e8:	add	x16, x16, #0x80
    21ec:	br	x17

Disassembly of section .text:

00000000000021f0 <_testfunc_cbk_reg_int@@Base-0xd4>:
    21f0:	adrp	x0, 15000 <PyInit__ctypes_test@@Base+0x11c44>
    21f4:	ldr	x0, [x0, #4000]
    21f8:	cbz	x0, 2200 <printf@plt+0x20>
    21fc:	b	2160 <__gmon_start__@plt>
    2200:	ret
    2204:	nop
    2208:	adrp	x0, 16000 <PyInit__ctypes_test@@Base+0x12c44>
    220c:	add	x0, x0, #0x1c0
    2210:	adrp	x1, 16000 <PyInit__ctypes_test@@Base+0x12c44>
    2214:	add	x1, x1, #0x1c0
    2218:	cmp	x1, x0
    221c:	b.eq	2234 <printf@plt+0x54>  // b.none
    2220:	adrp	x1, 15000 <PyInit__ctypes_test@@Base+0x11c44>
    2224:	ldr	x1, [x1, #3952]
    2228:	cbz	x1, 2234 <printf@plt+0x54>
    222c:	mov	x16, x1
    2230:	br	x16
    2234:	ret
    2238:	adrp	x0, 16000 <PyInit__ctypes_test@@Base+0x12c44>
    223c:	add	x0, x0, #0x1c0
    2240:	adrp	x1, 16000 <PyInit__ctypes_test@@Base+0x12c44>
    2244:	add	x1, x1, #0x1c0
    2248:	sub	x1, x1, x0
    224c:	lsr	x2, x1, #63
    2250:	add	x1, x2, x1, asr #3
    2254:	cmp	xzr, x1, asr #1
    2258:	asr	x1, x1, #1
    225c:	b.eq	2274 <printf@plt+0x94>  // b.none
    2260:	adrp	x2, 15000 <PyInit__ctypes_test@@Base+0x11c44>
    2264:	ldr	x2, [x2, #4048]
    2268:	cbz	x2, 2274 <printf@plt+0x94>
    226c:	mov	x16, x2
    2270:	br	x16
    2274:	ret
    2278:	stp	x29, x30, [sp, #-32]!
    227c:	mov	x29, sp
    2280:	str	x19, [sp, #16]
    2284:	adrp	x19, 16000 <PyInit__ctypes_test@@Base+0x12c44>
    2288:	ldrb	w0, [x19, #448]
    228c:	cbnz	w0, 22b4 <printf@plt+0xd4>
    2290:	adrp	x0, 15000 <PyInit__ctypes_test@@Base+0x11c44>
    2294:	ldr	x0, [x0, #3960]
    2298:	cbz	x0, 22a8 <printf@plt+0xc8>
    229c:	adrp	x0, 16000 <PyInit__ctypes_test@@Base+0x12c44>
    22a0:	ldr	x0, [x0, #136]
    22a4:	bl	2110 <__cxa_finalize@plt>
    22a8:	bl	2208 <printf@plt+0x28>
    22ac:	mov	w0, #0x1                   	// #1
    22b0:	strb	w0, [x19, #448]
    22b4:	ldr	x19, [sp, #16]
    22b8:	ldp	x29, x30, [sp], #32
    22bc:	ret
    22c0:	b	2238 <printf@plt+0x58>

00000000000022c4 <_testfunc_cbk_reg_int@@Base>:
    22c4:	mul	w0, w0, w0
    22c8:	mul	w1, w1, w1
    22cc:	mul	w2, w2, w2
    22d0:	mul	w3, w3, w3
    22d4:	mul	w4, w4, w4
    22d8:	br	x5

00000000000022dc <_testfunc_cbk_reg_double@@Base>:
    22dc:	fmul	d0, d0, d0
    22e0:	fmul	d1, d1, d1
    22e4:	fmul	d2, d2, d2
    22e8:	fmul	d3, d3, d3
    22ec:	fmul	d4, d4, d4
    22f0:	br	x0

00000000000022f4 <_testfunc_cbk_large_struct@@Base>:
    22f4:	sub	sp, sp, #0x30
    22f8:	stp	x29, x30, [sp, #32]
    22fc:	add	x29, sp, #0x20
    2300:	ldr	x8, [x0, #16]
    2304:	ldr	q0, [x0]
    2308:	mov	x0, sp
    230c:	str	x8, [sp, #16]
    2310:	str	q0, [sp]
    2314:	blr	x1
    2318:	ldp	x29, x30, [sp, #32]
    231c:	add	sp, sp, #0x30
    2320:	ret

0000000000002324 <_testfunc_large_struct_update_value@@Base>:
    2324:	mov	w8, #0xf00d                	// #61453
    2328:	movk	w8, #0xbad, lsl #16
    232c:	str	x8, [x0]
    2330:	str	x8, [x0, #8]
    2334:	str	x8, [x0, #16]
    2338:	ret

000000000000233c <_testfunc_reg_struct_update_value@@Base>:
    233c:	sub	sp, sp, #0x10
    2340:	str	w0, [sp, #12]
    2344:	adrp	x9, 15000 <PyInit__ctypes_test@@Base+0x11c44>
    2348:	ldr	x9, [x9, #4040]
    234c:	mov	w10, #0xf00d                	// #61453
    2350:	lsr	x8, x0, #32
    2354:	movk	w10, #0xbad, lsl #16
    2358:	str	w8, [sp, #8]
    235c:	stp	w0, w8, [x9]
    2360:	str	w10, [sp, #12]
    2364:	str	w10, [sp, #8]
    2368:	add	sp, sp, #0x10
    236c:	ret

0000000000002370 <_testfunc_array_in_struct1@@Base>:
    2370:	and	w8, w0, #0xff
    2374:	ubfx	x9, x0, #8, #24
    2378:	add	w8, w8, w9, uxtb
    237c:	ubfx	x9, x0, #16, #16
    2380:	add	w8, w8, w9, uxtb
    2384:	lsr	x9, x0, #32
    2388:	add	w8, w8, w0, lsr #24
    238c:	add	w8, w8, w9, uxtb
    2390:	lsr	x9, x0, #40
    2394:	add	w8, w8, w9, uxtb
    2398:	lsr	x9, x0, #48
    239c:	lsr	x10, x0, #56
    23a0:	add	w8, w8, w9, uxtb
    23a4:	add	w8, w8, w10
    23a8:	ubfx	x9, x1, #8, #24
    23ac:	add	w8, w8, w1, uxtb
    23b0:	ubfx	x10, x1, #16, #16
    23b4:	add	w8, w8, w9, uxtb
    23b8:	add	w8, w8, w10, uxtb
    23bc:	lsr	x9, x1, #32
    23c0:	add	w8, w8, w1, lsr #24
    23c4:	lsr	x10, x1, #40
    23c8:	add	w8, w8, w9, uxtb
    23cc:	lsr	x9, x1, #48
    23d0:	add	w8, w8, w10, uxtb
    23d4:	add	w8, w8, w9, uxtb
    23d8:	lsr	x9, x1, #56
    23dc:	add	w0, w8, w9
    23e0:	ret

00000000000023e4 <_testfunc_array_in_struct2@@Base>:
    23e4:	fmov	d2, xzr
    23e8:	fadd	d0, d0, d2
    23ec:	fadd	d0, d0, d1
    23f0:	ret

00000000000023f4 <_testfunc_array_in_struct2a@@Base>:
    23f4:	fcvt	d0, s0
    23f8:	fmov	d4, xzr
    23fc:	fcvt	d1, s1
    2400:	fadd	d0, d0, d4
    2404:	fcvt	d2, s2
    2408:	fadd	d0, d0, d1
    240c:	fadd	d0, d0, d2
    2410:	fcvt	d1, s3
    2414:	fadd	d0, d0, d1
    2418:	ret

000000000000241c <_testfunc_union_by_value1@@Base>:
    241c:	add	x8, x0, x0, asr #32
    2420:	add	x0, x8, w0, sxtw
    2424:	ret

0000000000002428 <_testfunc_union_by_value2@@Base>:
    2428:	ldr	w8, [x0]
    242c:	ldr	w9, [x0, #8]
    2430:	movi	v0.2d, #0x0
    2434:	stp	q0, q0, [x0]
    2438:	add	w8, w9, w8
    243c:	sxtw	x8, w8
    2440:	mov	x0, x8
    2444:	ret

0000000000002448 <_testfunc_union_by_reference1@@Base>:
    2448:	ldr	x8, [x0]
    244c:	str	xzr, [x0]
    2450:	mov	x0, x8
    2454:	ret

0000000000002458 <_testfunc_union_by_reference2@@Base>:
    2458:	ldp	w8, w9, [x0]
    245c:	str	xzr, [x0]
    2460:	add	w8, w9, w8
    2464:	sxtw	x8, w8
    2468:	mov	x0, x8
    246c:	ret

0000000000002470 <_testfunc_union_by_reference3@@Base>:
    2470:	ldr	w8, [x0]
    2474:	ldr	w9, [x0, #8]
    2478:	ldr	w10, [x0, #24]
    247c:	movi	v0.2d, #0x0
    2480:	stp	q0, q0, [x0]
    2484:	add	w8, w9, w8
    2488:	add	w8, w8, w10
    248c:	sxtw	x8, w8
    2490:	mov	x0, x8
    2494:	ret

0000000000002498 <_testfunc_bitfield_by_value1@@Base>:
    2498:	lsl	w9, w0, #5
    249c:	sxtb	w8, w0
    24a0:	sbfx	w9, w9, #6, #2
    24a4:	lsl	w10, w0, #2
    24a8:	add	w8, w9, w8, asr #6
    24ac:	and	w9, w0, #0x1
    24b0:	sxtb	w10, w10
    24b4:	sub	w8, w8, w9
    24b8:	add	w8, w8, w10, asr #5
    24bc:	sxtw	x0, w8
    24c0:	ret

00000000000024c4 <_testfunc_bitfield_by_reference1@@Base>:
    24c4:	ldrb	w8, [x0]
    24c8:	str	wzr, [x0]
    24cc:	lsl	w10, w8, #5
    24d0:	sxtb	w9, w8
    24d4:	sbfx	w10, w10, #6, #2
    24d8:	lsl	w11, w8, #2
    24dc:	add	w9, w10, w9, asr #6
    24e0:	and	w8, w8, #0x1
    24e4:	sxtb	w11, w11
    24e8:	sub	w8, w9, w8
    24ec:	add	w8, w8, w11, asr #5
    24f0:	sxtw	x0, w8
    24f4:	ret

00000000000024f8 <_testfunc_bitfield_by_reference2@@Base>:
    24f8:	ldrb	w8, [x0]
    24fc:	str	wzr, [x0]
    2500:	and	w9, w8, #0x1
    2504:	ubfx	w10, w8, #1, #2
    2508:	ubfx	w11, w8, #3, #3
    250c:	add	w8, w9, w8, lsr #6
    2510:	add	w8, w8, w10
    2514:	add	w0, w8, w11
    2518:	ret

000000000000251c <_testfunc_bitfield_by_value2@@Base>:
    251c:	lsl	w8, w0, #6
    2520:	sbfx	w9, w0, #0, #3
    2524:	and	w10, w0, #0x1
    2528:	sxtb	w8, w8
    252c:	sub	w9, w9, w10
    2530:	add	w8, w9, w8, asr #5
    2534:	sxtw	x0, w8
    2538:	ret

000000000000253c <testfunc_array@@Base>:
    253c:	ldp	w1, w2, [x0]
    2540:	ldp	w3, w4, [x0, #8]
    2544:	adrp	x0, 5000 <PyInit__ctypes_test@@Base+0x1c44>
    2548:	add	x0, x0, #0x4c8
    254c:	b	21e0 <printf@plt>

0000000000002550 <testfunc_Ddd@@Base>:
    2550:	sub	sp, sp, #0x30
    2554:	stp	x29, x30, [sp, #32]
    2558:	add	x29, sp, #0x20
    255c:	stur	d0, [x29, #-8]
    2560:	fmul	d0, d0, d1
    2564:	str	d1, [sp, #16]
    2568:	bl	5270 <PyInit__ctypes_test@@Base+0x1eb4>
    256c:	adrp	x0, 5000 <PyInit__ctypes_test@@Base+0x1c44>
    2570:	add	x0, x0, #0x4e4
    2574:	sub	x1, x29, #0x8
    2578:	add	x2, sp, #0x10
    257c:	str	q0, [sp]
    2580:	bl	21e0 <printf@plt>
    2584:	ldur	d0, [x29, #-8]
    2588:	ldr	d1, [sp, #16]
    258c:	adrp	x0, 5000 <PyInit__ctypes_test@@Base+0x1c44>
    2590:	add	x0, x0, #0x4fa
    2594:	bl	21e0 <printf@plt>
    2598:	ldr	q0, [sp]
    259c:	ldp	x29, x30, [sp, #32]
    25a0:	add	sp, sp, #0x30
    25a4:	ret

00000000000025a8 <testfunc_DDD@@Base>:
    25a8:	sub	sp, sp, #0x40
    25ac:	stp	x29, x30, [sp, #48]
    25b0:	add	x29, sp, #0x30
    25b4:	stur	q0, [x29, #-16]
    25b8:	str	q1, [sp, #16]
    25bc:	bl	4818 <PyInit__ctypes_test@@Base+0x145c>
    25c0:	adrp	x0, 5000 <PyInit__ctypes_test@@Base+0x1c44>
    25c4:	add	x0, x0, #0x510
    25c8:	sub	x1, x29, #0x10
    25cc:	add	x2, sp, #0x10
    25d0:	str	q0, [sp]
    25d4:	bl	21e0 <printf@plt>
    25d8:	ldur	q0, [x29, #-16]
    25dc:	ldr	q1, [sp, #16]
    25e0:	adrp	x0, 5000 <PyInit__ctypes_test@@Base+0x1c44>
    25e4:	add	x0, x0, #0x526
    25e8:	bl	21e0 <printf@plt>
    25ec:	ldr	q0, [sp]
    25f0:	ldp	x29, x30, [sp, #48]
    25f4:	add	sp, sp, #0x40
    25f8:	ret

00000000000025fc <testfunc_iii@@Base>:
    25fc:	stp	x29, x30, [sp, #-32]!
    2600:	str	x19, [sp, #16]
    2604:	mov	x29, sp
    2608:	stp	w1, w0, [x29, #24]
    260c:	mul	w19, w1, w0
    2610:	adrp	x0, 5000 <PyInit__ctypes_test@@Base+0x1c44>
    2614:	add	x0, x0, #0x53e
    2618:	add	x1, x29, #0x1c
    261c:	add	x2, x29, #0x18
    2620:	bl	21e0 <printf@plt>
    2624:	mov	w0, w19
    2628:	ldr	x19, [sp, #16]
    262c:	ldp	x29, x30, [sp], #32
    2630:	ret

0000000000002634 <myprintf@@Base>:
    2634:	sub	sp, sp, #0x120
    2638:	stp	x29, x30, [sp, #256]
    263c:	str	x28, [sp, #272]
    2640:	add	x29, sp, #0x100
    2644:	stp	x1, x2, [x29, #-120]
    2648:	stp	x3, x4, [x29, #-104]
    264c:	stp	x5, x6, [x29, #-88]
    2650:	stur	x7, [x29, #-72]
    2654:	stp	q0, q1, [sp]
    2658:	stp	q2, q3, [sp, #32]
    265c:	stp	q4, q5, [sp, #64]
    2660:	adrp	x13, 15000 <PyInit__ctypes_test@@Base+0x11c44>
    2664:	ldr	x13, [x13, #3984]
    2668:	mov	x9, #0xffffffffffffffc8    	// #-56
    266c:	mov	x10, sp
    2670:	sub	x11, x29, #0x78
    2674:	movk	x9, #0xff80, lsl #32
    2678:	add	x12, x29, #0x20
    267c:	add	x10, x10, #0x80
    2680:	add	x11, x11, #0x38
    2684:	stp	x10, x9, [x29, #-48]
    2688:	stp	x12, x11, [x29, #-64]
    268c:	mov	x8, x0
    2690:	ldr	x0, [x13]
    2694:	ldp	q0, q1, [x29, #-64]
    2698:	sub	x2, x29, #0x20
    269c:	mov	x1, x8
    26a0:	stp	q6, q7, [sp, #96]
    26a4:	stp	q0, q1, [x29, #-32]
    26a8:	bl	21d0 <vfprintf@plt>
    26ac:	ldr	x28, [sp, #272]
    26b0:	ldp	x29, x30, [sp, #256]
    26b4:	add	sp, sp, #0x120
    26b8:	ret

00000000000026bc <my_strtok@@Base>:
    26bc:	b	20f0 <strtok@plt>

00000000000026c0 <my_strchr@@Base>:
    26c0:	b	21b0 <strchr@plt>

00000000000026c4 <my_sqrt@@Base>:
    26c4:	fsqrt	d1, d0
    26c8:	fcmp	d1, d1
    26cc:	b.vs	26d8 <my_sqrt@@Base+0x14>
    26d0:	mov	v0.16b, v1.16b
    26d4:	ret
    26d8:	b	2130 <sqrt@plt>

00000000000026dc <my_qsort@@Base>:
    26dc:	b	2120 <qsort@plt>

00000000000026e0 <_testfunc_ai8@@Base>:
    26e0:	ret

00000000000026e4 <_testfunc_v@@Base>:
    26e4:	add	w8, w1, w0
    26e8:	str	w8, [x2]
    26ec:	ret

00000000000026f0 <_testfunc_i_bhilfd@@Base>:
    26f0:	sxth	w8, w1
    26f4:	add	w8, w8, w0, sxtb
    26f8:	add	w8, w8, w2
    26fc:	add	x8, x3, w8, sxtw
    2700:	scvtf	s2, x8
    2704:	fadd	s0, s2, s0
    2708:	fcvt	d0, s0
    270c:	fadd	d0, d0, d1
    2710:	fcvtzs	w0, d0
    2714:	ret

0000000000002718 <_testfunc_f_bhilfd@@Base>:
    2718:	sxth	w8, w1
    271c:	add	w8, w8, w0, sxtb
    2720:	add	w8, w8, w2
    2724:	add	x8, x3, w8, sxtw
    2728:	scvtf	s2, x8
    272c:	fadd	s0, s2, s0
    2730:	fcvt	d0, s0
    2734:	fadd	d0, d0, d1
    2738:	fcvt	s0, d0
    273c:	ret

0000000000002740 <_testfunc_d_bhilfd@@Base>:
    2740:	sxth	w8, w1
    2744:	add	w8, w8, w0, sxtb
    2748:	add	w8, w8, w2
    274c:	add	x8, x3, w8, sxtw
    2750:	scvtf	s2, x8
    2754:	fadd	s0, s2, s0
    2758:	fcvt	d0, s0
    275c:	fadd	d0, d0, d1
    2760:	ret

0000000000002764 <_testfunc_D_bhilfD@@Base>:
    2764:	sub	sp, sp, #0x20
    2768:	stp	x29, x30, [sp, #16]
    276c:	add	x29, sp, #0x10
    2770:	sxth	w8, w1
    2774:	add	w8, w8, w0, sxtb
    2778:	add	w8, w8, w2
    277c:	add	x8, x3, w8, sxtw
    2780:	str	q1, [sp]
    2784:	scvtf	s1, x8
    2788:	fadd	s0, s1, s0
    278c:	bl	5138 <PyInit__ctypes_test@@Base+0x1d7c>
    2790:	ldr	q1, [sp]
    2794:	bl	33d0 <PyInit__ctypes_test@@Base+0x14>
    2798:	ldp	x29, x30, [sp, #16]
    279c:	add	sp, sp, #0x20
    27a0:	ret

00000000000027a4 <_testfunc_p_p@@Base>:
    27a4:	ret

00000000000027a8 <_testfunc_c_p_p@@Base>:
    27a8:	ldr	w8, [x0]
    27ac:	sub	w8, w8, #0x1
    27b0:	ldr	x0, [x1, w8, sxtw #3]
    27b4:	ret

00000000000027b8 <get_strchr@@Base>:
    27b8:	adrp	x0, 15000 <PyInit__ctypes_test@@Base+0x11c44>
    27bc:	ldr	x0, [x0, #4016]
    27c0:	ret

00000000000027c4 <my_strdup@@Base>:
    27c4:	stp	x29, x30, [sp, #-32]!
    27c8:	str	x19, [sp, #16]
    27cc:	mov	x29, sp
    27d0:	mov	x19, x0
    27d4:	bl	2100 <strlen@plt>
    27d8:	add	x0, x0, #0x1
    27dc:	bl	2140 <malloc@plt>
    27e0:	cbz	x0, 27ec <my_strdup@@Base+0x28>
    27e4:	mov	x1, x19
    27e8:	bl	21c0 <strcpy@plt>
    27ec:	ldr	x19, [sp, #16]
    27f0:	ldp	x29, x30, [sp], #32
    27f4:	ret

00000000000027f8 <my_free@@Base>:
    27f8:	b	21a0 <free@plt>

00000000000027fc <my_wcsdup@@Base>:
    27fc:	stp	x29, x30, [sp, #-48]!
    2800:	str	x21, [sp, #16]
    2804:	stp	x20, x19, [sp, #32]
    2808:	mov	x29, sp
    280c:	mov	x19, x0
    2810:	bl	2150 <wcslen@plt>
    2814:	lsl	x8, x0, #2
    2818:	add	x21, x8, #0x4
    281c:	mov	x0, x21
    2820:	bl	2140 <malloc@plt>
    2824:	mov	x20, x0
    2828:	cbz	x0, 283c <my_wcsdup@@Base+0x40>
    282c:	mov	x0, x20
    2830:	mov	x1, x19
    2834:	mov	x2, x21
    2838:	bl	20e0 <memcpy@plt>
    283c:	mov	x0, x20
    2840:	ldp	x20, x19, [sp, #32]
    2844:	ldr	x21, [sp, #16]
    2848:	ldp	x29, x30, [sp], #48
    284c:	ret

0000000000002850 <my_wcslen@@Base>:
    2850:	b	2150 <wcslen@plt>

0000000000002854 <_testfunc_callfuncp@@Base>:
    2854:	stp	x29, x30, [sp, #-32]!
    2858:	str	x19, [sp, #16]
    285c:	mov	x29, sp
    2860:	ldr	x8, [x0]
    2864:	mov	x19, x0
    2868:	mov	w0, #0x1                   	// #1
    286c:	mov	w1, #0x2                   	// #2
    2870:	blr	x8
    2874:	ldr	x8, [x19, #8]
    2878:	mov	w0, #0x3                   	// #3
    287c:	mov	w1, #0x4                   	// #4
    2880:	blr	x8
    2884:	ldr	x19, [sp, #16]
    2888:	mov	w0, wzr
    288c:	ldp	x29, x30, [sp], #32
    2890:	ret

0000000000002894 <_testfunc_deref_pointer@@Base>:
    2894:	ldr	w0, [x0]
    2898:	ret

000000000000289c <_testfunc_callback_with_pointer@@Base>:
    289c:	sub	sp, sp, #0x40
    28a0:	stp	x29, x30, [sp, #48]
    28a4:	add	x29, sp, #0x30
    28a8:	adrp	x9, 5000 <PyInit__ctypes_test@@Base+0x1c44>
    28ac:	add	x9, x9, #0x468
    28b0:	ldp	q0, q1, [x9]
    28b4:	ldr	x9, [x9, #32]
    28b8:	mov	x8, x0
    28bc:	mov	x0, sp
    28c0:	stp	q0, q1, [sp]
    28c4:	str	x9, [sp, #32]
    28c8:	blr	x8
    28cc:	ldp	x29, x30, [sp, #48]
    28d0:	add	sp, sp, #0x40
    28d4:	ret

00000000000028d8 <_testfunc_q_bhilfdq@@Base>:
    28d8:	sxth	w8, w1
    28dc:	add	w8, w8, w0, sxtb
    28e0:	add	w8, w8, w2
    28e4:	add	x8, x3, w8, sxtw
    28e8:	scvtf	s2, x8
    28ec:	fadd	s0, s2, s0
    28f0:	fcvt	d0, s0
    28f4:	fadd	d0, d0, d1
    28f8:	scvtf	d1, x4
    28fc:	fadd	d0, d0, d1
    2900:	fcvtzs	x0, d0
    2904:	ret

0000000000002908 <_testfunc_q_bhilfd@@Base>:
    2908:	sxth	w8, w1
    290c:	add	w8, w8, w0, sxtb
    2910:	add	w8, w8, w2
    2914:	add	x8, x3, w8, sxtw
    2918:	scvtf	s2, x8
    291c:	fadd	s0, s2, s0
    2920:	fcvt	d0, s0
    2924:	fadd	d0, d0, d1
    2928:	fcvtzs	x0, d0
    292c:	ret

0000000000002930 <_testfunc_callback_i_if@@Base>:
    2930:	stp	x29, x30, [sp, #-48]!
    2934:	str	x21, [sp, #16]
    2938:	stp	x20, x19, [sp, #32]
    293c:	mov	x29, sp
    2940:	cbz	w0, 2978 <_testfunc_callback_i_if@@Base+0x48>
    2944:	mov	x19, x1
    2948:	mov	w21, w0
    294c:	mov	w20, wzr
    2950:	mov	w0, w21
    2954:	blr	x19
    2958:	cmp	w21, #0x0
    295c:	add	w8, w21, #0x1
    2960:	cinc	w9, w21, lt  // lt = tstop
    2964:	asr	w21, w9, #1
    2968:	cmp	w8, #0x2
    296c:	add	w20, w0, w20
    2970:	b.hi	2950 <_testfunc_callback_i_if@@Base+0x20>  // b.pmore
    2974:	b	297c <_testfunc_callback_i_if@@Base+0x4c>
    2978:	mov	w20, wzr
    297c:	mov	w0, w20
    2980:	ldp	x20, x19, [sp, #32]
    2984:	ldr	x21, [sp, #16]
    2988:	ldp	x29, x30, [sp], #48
    298c:	ret

0000000000002990 <_testfunc_callback_q_qf@@Base>:
    2990:	stp	x29, x30, [sp, #-48]!
    2994:	str	x21, [sp, #16]
    2998:	stp	x20, x19, [sp, #32]
    299c:	mov	x29, sp
    29a0:	cbz	x0, 29d8 <_testfunc_callback_q_qf@@Base+0x48>
    29a4:	mov	x19, x1
    29a8:	mov	x21, x0
    29ac:	mov	x20, xzr
    29b0:	mov	x0, x21
    29b4:	blr	x19
    29b8:	cmp	x21, #0x0
    29bc:	add	x8, x21, #0x1
    29c0:	cinc	x9, x21, lt  // lt = tstop
    29c4:	asr	x21, x9, #1
    29c8:	cmp	x8, #0x2
    29cc:	add	x20, x0, x20
    29d0:	b.hi	29b0 <_testfunc_callback_q_qf@@Base+0x20>  // b.pmore
    29d4:	b	29dc <_testfunc_callback_q_qf@@Base+0x4c>
    29d8:	mov	x20, xzr
    29dc:	mov	x0, x20
    29e0:	ldp	x20, x19, [sp, #32]
    29e4:	ldr	x21, [sp, #16]
    29e8:	ldp	x29, x30, [sp], #48
    29ec:	ret

00000000000029f0 <getSPAMANDEGGS@@Base>:
    29f0:	adrp	x9, 15000 <PyInit__ctypes_test@@Base+0x11c44>
    29f4:	ldr	x9, [x9, #3992]
    29f8:	mov	x8, x0
    29fc:	mov	w0, #0x1                   	// #1
    2a00:	str	x9, [x8]
    2a04:	ret

0000000000002a08 <_testfunc_byval@@Base>:
    2a08:	lsr	x8, x0, #32
    2a0c:	cbz	x1, 2a14 <_testfunc_byval@@Base+0xc>
    2a10:	stp	w0, w8, [x1]
    2a14:	add	w0, w8, w0
    2a18:	ret

0000000000002a1c <get_an_integer@@Base>:
    2a1c:	adrp	x8, 15000 <PyInit__ctypes_test@@Base+0x11c44>
    2a20:	ldr	x8, [x8, #4056]
    2a24:	ldr	w0, [x8]
    2a28:	ret

0000000000002a2c <integrate@@Base>:
    2a2c:	stp	d13, d12, [sp, #-80]!
    2a30:	stp	d11, d10, [sp, #16]
    2a34:	stp	d9, d8, [sp, #32]
    2a38:	stp	x29, x30, [sp, #48]
    2a3c:	str	x19, [sp, #64]
    2a40:	mov	x29, sp
    2a44:	mov	v9.16b, v0.16b
    2a48:	fsub	d0, d1, d0
    2a4c:	scvtf	d11, x1
    2a50:	mov	v8.16b, v1.16b
    2a54:	fmov	d1, #5.000000000000000000e-01
    2a58:	fdiv	d12, d0, d11
    2a5c:	fmul	d0, d12, d1
    2a60:	fadd	d10, d0, d9
    2a64:	fsub	d0, d8, d10
    2a68:	fsub	d1, d10, d9
    2a6c:	fmul	d0, d0, d1
    2a70:	fcmp	d0, #0.0
    2a74:	fmov	d13, xzr
    2a78:	b.le	2aa8 <integrate@@Base+0x7c>
    2a7c:	mov	x19, x0
    2a80:	fmov	d13, xzr
    2a84:	mov	v0.16b, v10.16b
    2a88:	blr	x19
    2a8c:	fadd	d10, d12, d10
    2a90:	fsub	d1, d8, d10
    2a94:	fsub	d2, d10, d9
    2a98:	fmul	d1, d1, d2
    2a9c:	fcmp	d1, #0.0
    2aa0:	fadd	d13, d13, d0
    2aa4:	b.gt	2a84 <integrate@@Base+0x58>
    2aa8:	fdiv	d0, d13, d11
    2aac:	ldr	x19, [sp, #64]
    2ab0:	ldp	x29, x30, [sp, #48]
    2ab4:	ldp	d9, d8, [sp, #32]
    2ab8:	ldp	d11, d10, [sp, #16]
    2abc:	ldp	d13, d12, [sp], #80
    2ac0:	ret
    2ac4:	stp	x29, x30, [sp, #-32]!
    2ac8:	stp	x20, x19, [sp, #16]
    2acc:	mov	x29, sp
    2ad0:	mov	x19, x1
    2ad4:	mov	x20, x0
    2ad8:	adrp	x0, 5000 <PyInit__ctypes_test@@Base+0x1c44>
    2adc:	add	x0, x0, #0x578
    2ae0:	mov	x1, x20
    2ae4:	mov	x2, x19
    2ae8:	bl	21e0 <printf@plt>
    2aec:	adrp	x0, 5000 <PyInit__ctypes_test@@Base+0x1c44>
    2af0:	add	x0, x0, #0x5bf
    2af4:	bl	2180 <puts@plt>
    2af8:	mov	w0, #0x20                  	// #32
    2afc:	blr	x20
    2b00:	mov	x20, x0
    2b04:	blr	x19
    2b08:	mov	x1, x20
    2b0c:	ldp	x20, x19, [sp, #16]
    2b10:	adrp	x0, 5000 <PyInit__ctypes_test@@Base+0x1c44>
    2b14:	add	x0, x0, #0x58d
    2b18:	ldp	x29, x30, [sp], #32
    2b1c:	b	21e0 <printf@plt>

0000000000002b20 <library_get@@Base>:
    2b20:	adrp	x0, 15000 <PyInit__ctypes_test@@Base+0x11c44>
    2b24:	ldr	x0, [x0, #4064]
    2b28:	ret

0000000000002b2c <py_func_si@@Base>:
    2b2c:	sub	sp, sp, #0x20
    2b30:	stp	x29, x30, [sp, #16]
    2b34:	add	x29, sp, #0x10
    2b38:	mov	x0, x1
    2b3c:	adrp	x1, 5000 <PyInit__ctypes_test@@Base+0x1c44>
    2b40:	add	x1, x1, #0x5b7
    2b44:	add	x2, sp, #0x8
    2b48:	add	x3, sp, #0x4
    2b4c:	bl	2190 <PyArg_ParseTuple@plt>
    2b50:	cbz	w0, 2b74 <py_func_si@@Base+0x48>
    2b54:	adrp	x0, 15000 <PyInit__ctypes_test@@Base+0x11c44>
    2b58:	ldr	x0, [x0, #4008]
    2b5c:	ldr	x8, [x0]
    2b60:	add	x8, x8, #0x1
    2b64:	str	x8, [x0]
    2b68:	ldp	x29, x30, [sp, #16]
    2b6c:	add	sp, sp, #0x20
    2b70:	ret
    2b74:	mov	x0, xzr
    2b78:	ldp	x29, x30, [sp, #16]
    2b7c:	add	sp, sp, #0x20
    2b80:	ret

0000000000002b84 <_py_func_si@@Base>:
    2b84:	ret

0000000000002b88 <py_func@@Base>:
    2b88:	adrp	x0, 15000 <PyInit__ctypes_test@@Base+0x11c44>
    2b8c:	ldr	x0, [x0, #4008]
    2b90:	ldr	x8, [x0]
    2b94:	add	x8, x8, #0x1
    2b98:	str	x8, [x0]
    2b9c:	ret

0000000000002ba0 <_py_func@@Base>:
    2ba0:	ret

0000000000002ba4 <set_bitfields@@Base>:
    2ba4:	and	w8, w1, #0xff
    2ba8:	sub	w8, w8, #0x41
    2bac:	cmp	w8, #0x12
    2bb0:	b.hi	2cdc <set_bitfields@@Base+0x138>  // b.pmore
    2bb4:	adrp	x9, 5000 <PyInit__ctypes_test@@Base+0x1c44>
    2bb8:	add	x9, x9, #0x440
    2bbc:	adr	x10, 2bcc <set_bitfields@@Base+0x28>
    2bc0:	ldrb	w11, [x9, x8]
    2bc4:	add	x10, x10, x11, lsl #2
    2bc8:	br	x10
    2bcc:	ldr	w8, [x0]
    2bd0:	bfxil	w8, w2, #0, #1
    2bd4:	str	w8, [x0]
    2bd8:	ret
    2bdc:	ldr	w8, [x0]
    2be0:	bfi	w8, w2, #1, #2
    2be4:	str	w8, [x0]
    2be8:	ret
    2bec:	ldr	w8, [x0]
    2bf0:	bfi	w8, w2, #3, #3
    2bf4:	str	w8, [x0]
    2bf8:	ret
    2bfc:	ldr	w8, [x0]
    2c00:	bfi	w8, w2, #6, #4
    2c04:	str	w8, [x0]
    2c08:	ret
    2c0c:	ldr	w8, [x0]
    2c10:	bfi	w8, w2, #10, #5
    2c14:	str	w8, [x0]
    2c18:	ret
    2c1c:	ldr	w8, [x0]
    2c20:	bfi	w8, w2, #15, #6
    2c24:	str	w8, [x0]
    2c28:	ret
    2c2c:	ldr	w8, [x0]
    2c30:	bfi	w8, w2, #21, #7
    2c34:	str	w8, [x0]
    2c38:	ret
    2c3c:	strb	w2, [x0, #4]
    2c40:	ret
    2c44:	ldur	x8, [x0, #4]
    2c48:	ubfiz	w9, w2, #8, #9
    2c4c:	and	x8, x8, #0xfffffffffffe00ff
    2c50:	orr	x8, x8, x9
    2c54:	b	2cd8 <set_bitfields@@Base+0x134>
    2c58:	ldur	x8, [x0, #4]
    2c5c:	ubfiz	w9, w2, #17, #1
    2c60:	and	x8, x8, #0xfffffffffffdffff
    2c64:	orr	x8, x8, x9
    2c68:	b	2cd8 <set_bitfields@@Base+0x134>
    2c6c:	ldur	x8, [x0, #4]
    2c70:	ubfiz	w9, w2, #18, #2
    2c74:	and	x8, x8, #0xfffffffffff3ffff
    2c78:	orr	x8, x8, x9
    2c7c:	b	2cd8 <set_bitfields@@Base+0x134>
    2c80:	ldur	x8, [x0, #4]
    2c84:	ubfiz	w9, w2, #20, #3
    2c88:	and	x8, x8, #0xffffffffff8fffff
    2c8c:	orr	x8, x8, x9
    2c90:	b	2cd8 <set_bitfields@@Base+0x134>
    2c94:	ldur	x8, [x0, #4]
    2c98:	ubfiz	w9, w2, #23, #4
    2c9c:	and	x8, x8, #0xfffffffff87fffff
    2ca0:	orr	x8, x8, x9
    2ca4:	b	2cd8 <set_bitfields@@Base+0x134>
    2ca8:	ldur	x8, [x0, #4]
    2cac:	lsl	w9, w2, #27
    2cb0:	and	x8, x8, #0xffffffff07ffffff
    2cb4:	orr	x8, x8, x9
    2cb8:	b	2cd8 <set_bitfields@@Base+0x134>
    2cbc:	ldur	x8, [x0, #4]
    2cc0:	and	w9, w2, #0x3f
    2cc4:	bfi	x8, x9, #32, #6
    2cc8:	b	2cd8 <set_bitfields@@Base+0x134>
    2ccc:	ldur	x8, [x0, #4]
    2cd0:	and	w9, w2, #0x7f
    2cd4:	bfi	x8, x9, #38, #7
    2cd8:	stur	x8, [x0, #4]
    2cdc:	ret

0000000000002ce0 <unpack_bitfields@@Base>:
    2ce0:	and	w9, w1, #0xff
    2ce4:	sub	w9, w9, #0x41
    2ce8:	mov	x8, x0
    2cec:	cmp	w9, #0x12
    2cf0:	mov	w0, #0x3e7                 	// #999
    2cf4:	b.hi	2dc8 <unpack_bitfields@@Base+0xe8>  // b.pmore
    2cf8:	adrp	x10, 5000 <PyInit__ctypes_test@@Base+0x1c44>
    2cfc:	add	x10, x10, #0x453
    2d00:	adr	x11, 2d10 <unpack_bitfields@@Base+0x30>
    2d04:	ldrb	w12, [x10, x9]
    2d08:	add	x11, x11, x12, lsl #2
    2d0c:	br	x11
    2d10:	ldr	w8, [x8]
    2d14:	sbfx	w0, w8, #0, #1
    2d18:	ret
    2d1c:	ldr	w8, [x8]
    2d20:	sbfx	w0, w8, #1, #2
    2d24:	ret
    2d28:	ldr	w8, [x8]
    2d2c:	sbfx	w0, w8, #3, #3
    2d30:	ret
    2d34:	ldr	w8, [x8]
    2d38:	sbfx	w0, w8, #6, #4
    2d3c:	ret
    2d40:	ldr	w8, [x8]
    2d44:	sbfx	w0, w8, #10, #5
    2d48:	ret
    2d4c:	ldr	w8, [x8]
    2d50:	sbfx	w0, w8, #15, #6
    2d54:	ret
    2d58:	ldr	w8, [x8]
    2d5c:	sbfx	w0, w8, #21, #7
    2d60:	ret
    2d64:	ldrsb	w0, [x8, #4]
    2d68:	ret
    2d6c:	ldur	x8, [x8, #4]
    2d70:	sbfx	x0, x8, #8, #9
    2d74:	ret
    2d78:	ldur	x8, [x8, #4]
    2d7c:	sbfx	x0, x8, #17, #1
    2d80:	ret
    2d84:	ldur	x8, [x8, #4]
    2d88:	sbfx	x0, x8, #18, #2
    2d8c:	ret
    2d90:	ldur	x8, [x8, #4]
    2d94:	sbfx	x0, x8, #20, #3
    2d98:	ret
    2d9c:	ldur	x8, [x8, #4]
    2da0:	sbfx	x0, x8, #23, #4
    2da4:	ret
    2da8:	ldur	x8, [x8, #4]
    2dac:	sbfx	x0, x8, #27, #5
    2db0:	ret
    2db4:	ldur	x8, [x8, #4]
    2db8:	sbfx	x0, x8, #32, #6
    2dbc:	ret
    2dc0:	ldur	x8, [x8, #4]
    2dc4:	sbfx	x0, x8, #38, #7
    2dc8:	ret

0000000000002dcc <tf_b@@Base>:
    2dcc:	adrp	x10, 15000 <PyInit__ctypes_test@@Base+0x11c44>
    2dd0:	mov	w11, #0x5556                	// #21846
    2dd4:	sxtb	w8, w0
    2dd8:	ldr	x10, [x10, #4024]
    2ddc:	movk	w11, #0x5555, lsl #16
    2de0:	smull	x8, w8, w11
    2de4:	lsr	x11, x8, #63
    2de8:	lsr	x8, x8, #32
    2dec:	sxtb	x9, w0
    2df0:	add	w0, w8, w11
    2df4:	str	x9, [x10]
    2df8:	ret

0000000000002dfc <tf_B@@Base>:
    2dfc:	adrp	x10, 15000 <PyInit__ctypes_test@@Base+0x11c44>
    2e00:	ldr	x10, [x10, #4032]
    2e04:	mov	w11, #0xaaab                	// #43691
    2e08:	and	w8, w0, #0xff
    2e0c:	movk	w11, #0xaaaa, lsl #16
    2e10:	umull	x8, w8, w11
    2e14:	and	x9, x0, #0xff
    2e18:	lsr	x0, x8, #33
    2e1c:	str	x9, [x10]
    2e20:	ret

0000000000002e24 <tf_h@@Base>:
    2e24:	adrp	x10, 15000 <PyInit__ctypes_test@@Base+0x11c44>
    2e28:	mov	w11, #0x5556                	// #21846
    2e2c:	sxth	w8, w0
    2e30:	ldr	x10, [x10, #4024]
    2e34:	movk	w11, #0x5555, lsl #16
    2e38:	smull	x8, w8, w11
    2e3c:	lsr	x11, x8, #63
    2e40:	lsr	x8, x8, #32
    2e44:	sxth	x9, w0
    2e48:	add	w0, w8, w11
    2e4c:	str	x9, [x10]
    2e50:	ret

0000000000002e54 <tf_H@@Base>:
    2e54:	adrp	x10, 15000 <PyInit__ctypes_test@@Base+0x11c44>
    2e58:	ldr	x10, [x10, #4032]
    2e5c:	mov	w11, #0xaaab                	// #43691
    2e60:	and	w8, w0, #0xffff
    2e64:	movk	w11, #0xaaaa, lsl #16
    2e68:	umull	x8, w8, w11
    2e6c:	and	x9, x0, #0xffff
    2e70:	lsr	x0, x8, #33
    2e74:	str	x9, [x10]
    2e78:	ret

0000000000002e7c <tf_i@@Base>:
    2e7c:	adrp	x9, 15000 <PyInit__ctypes_test@@Base+0x11c44>
    2e80:	mov	w10, #0x5556                	// #21846
    2e84:	ldr	x9, [x9, #4024]
    2e88:	movk	w10, #0x5555, lsl #16
    2e8c:	smull	x10, w0, w10
    2e90:	lsr	x11, x10, #63
    2e94:	lsr	x10, x10, #32
    2e98:	sxtw	x8, w0
    2e9c:	add	w0, w10, w11
    2ea0:	str	x8, [x9]
    2ea4:	ret

0000000000002ea8 <tf_I@@Base>:
    2ea8:	adrp	x9, 15000 <PyInit__ctypes_test@@Base+0x11c44>
    2eac:	ldr	x9, [x9, #4032]
    2eb0:	mov	w10, #0xaaab                	// #43691
    2eb4:	movk	w10, #0xaaaa, lsl #16
    2eb8:	umull	x10, w0, w10
    2ebc:	mov	w8, w0
    2ec0:	lsr	x0, x10, #33
    2ec4:	str	x8, [x9]
    2ec8:	ret

0000000000002ecc <tf_l@@Base>:
    2ecc:	adrp	x9, 15000 <PyInit__ctypes_test@@Base+0x11c44>
    2ed0:	ldr	x9, [x9, #4024]
    2ed4:	mov	x8, #0x5555555555555555    	// #6148914691236517205
    2ed8:	movk	x8, #0x5556
    2edc:	smulh	x8, x0, x8
    2ee0:	add	x8, x8, x8, lsr #63
    2ee4:	str	x0, [x9]
    2ee8:	mov	x0, x8
    2eec:	ret

0000000000002ef0 <tf_L@@Base>:
    2ef0:	adrp	x9, 15000 <PyInit__ctypes_test@@Base+0x11c44>
    2ef4:	ldr	x9, [x9, #4032]
    2ef8:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    2efc:	movk	x8, #0xaaab
    2f00:	umulh	x8, x0, x8
    2f04:	lsr	x8, x8, #1
    2f08:	str	x0, [x9]
    2f0c:	mov	x0, x8
    2f10:	ret

0000000000002f14 <tf_q@@Base>:
    2f14:	adrp	x9, 15000 <PyInit__ctypes_test@@Base+0x11c44>
    2f18:	ldr	x9, [x9, #4024]
    2f1c:	mov	x8, #0x5555555555555555    	// #6148914691236517205
    2f20:	movk	x8, #0x5556
    2f24:	smulh	x8, x0, x8
    2f28:	add	x8, x8, x8, lsr #63
    2f2c:	str	x0, [x9]
    2f30:	mov	x0, x8
    2f34:	ret

0000000000002f38 <tf_Q@@Base>:
    2f38:	adrp	x9, 15000 <PyInit__ctypes_test@@Base+0x11c44>
    2f3c:	ldr	x9, [x9, #4032]
    2f40:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    2f44:	movk	x8, #0xaaab
    2f48:	umulh	x8, x0, x8
    2f4c:	lsr	x8, x8, #1
    2f50:	str	x0, [x9]
    2f54:	mov	x0, x8
    2f58:	ret

0000000000002f5c <tf_f@@Base>:
    2f5c:	adrp	x9, 15000 <PyInit__ctypes_test@@Base+0x11c44>
    2f60:	ldr	x9, [x9, #4024]
    2f64:	fmov	s1, #3.000000000000000000e+00
    2f68:	fcvtzs	x8, s0
    2f6c:	fdiv	s0, s0, s1
    2f70:	str	x8, [x9]
    2f74:	ret

0000000000002f78 <tf_d@@Base>:
    2f78:	adrp	x9, 15000 <PyInit__ctypes_test@@Base+0x11c44>
    2f7c:	ldr	x9, [x9, #4024]
    2f80:	fmov	d1, #3.000000000000000000e+00
    2f84:	fcvtzs	x8, d0
    2f88:	fdiv	d0, d0, d1
    2f8c:	str	x8, [x9]
    2f90:	ret

0000000000002f94 <tf_D@@Base>:
    2f94:	sub	sp, sp, #0x20
    2f98:	stp	x29, x30, [sp, #16]
    2f9c:	add	x29, sp, #0x10
    2fa0:	str	q0, [sp]
    2fa4:	bl	5000 <PyInit__ctypes_test@@Base+0x1c44>
    2fa8:	adrp	x8, 15000 <PyInit__ctypes_test@@Base+0x11c44>
    2fac:	ldr	x8, [x8, #4024]
    2fb0:	ldr	q0, [sp]
    2fb4:	str	x0, [x8]
    2fb8:	adrp	x8, 5000 <PyInit__ctypes_test@@Base+0x1c44>
    2fbc:	ldr	q1, [x8, #1168]
    2fc0:	bl	3ef8 <PyInit__ctypes_test@@Base+0xb3c>
    2fc4:	ldp	x29, x30, [sp, #16]
    2fc8:	add	sp, sp, #0x20
    2fcc:	ret

0000000000002fd0 <tf_bb@@Base>:
    2fd0:	adrp	x10, 15000 <PyInit__ctypes_test@@Base+0x11c44>
    2fd4:	mov	w11, #0x5556                	// #21846
    2fd8:	sxtb	w8, w1
    2fdc:	ldr	x10, [x10, #4024]
    2fe0:	movk	w11, #0x5555, lsl #16
    2fe4:	smull	x8, w8, w11
    2fe8:	lsr	x11, x8, #63
    2fec:	lsr	x8, x8, #32
    2ff0:	sxtb	x9, w1
    2ff4:	add	w0, w8, w11
    2ff8:	str	x9, [x10]
    2ffc:	ret

0000000000003000 <tf_bB@@Base>:
    3000:	adrp	x10, 15000 <PyInit__ctypes_test@@Base+0x11c44>
    3004:	ldr	x10, [x10, #4032]
    3008:	mov	w11, #0xaaab                	// #43691
    300c:	and	w8, w1, #0xff
    3010:	movk	w11, #0xaaaa, lsl #16
    3014:	umull	x8, w8, w11
    3018:	and	x9, x1, #0xff
    301c:	lsr	x0, x8, #33
    3020:	str	x9, [x10]
    3024:	ret

0000000000003028 <tf_bh@@Base>:
    3028:	adrp	x10, 15000 <PyInit__ctypes_test@@Base+0x11c44>
    302c:	mov	w11, #0x5556                	// #21846
    3030:	sxth	w8, w1
    3034:	ldr	x10, [x10, #4024]
    3038:	movk	w11, #0x5555, lsl #16
    303c:	smull	x8, w8, w11
    3040:	lsr	x11, x8, #63
    3044:	lsr	x8, x8, #32
    3048:	sxth	x9, w1
    304c:	add	w0, w8, w11
    3050:	str	x9, [x10]
    3054:	ret

0000000000003058 <tf_bH@@Base>:
    3058:	adrp	x10, 15000 <PyInit__ctypes_test@@Base+0x11c44>
    305c:	ldr	x10, [x10, #4032]
    3060:	mov	w11, #0xaaab                	// #43691
    3064:	and	w8, w1, #0xffff
    3068:	movk	w11, #0xaaaa, lsl #16
    306c:	umull	x8, w8, w11
    3070:	and	x9, x1, #0xffff
    3074:	lsr	x0, x8, #33
    3078:	str	x9, [x10]
    307c:	ret

0000000000003080 <tf_bi@@Base>:
    3080:	adrp	x9, 15000 <PyInit__ctypes_test@@Base+0x11c44>
    3084:	mov	w10, #0x5556                	// #21846
    3088:	ldr	x9, [x9, #4024]
    308c:	movk	w10, #0x5555, lsl #16
    3090:	smull	x10, w1, w10
    3094:	lsr	x11, x10, #63
    3098:	lsr	x10, x10, #32
    309c:	sxtw	x8, w1
    30a0:	add	w0, w10, w11
    30a4:	str	x8, [x9]
    30a8:	ret

00000000000030ac <tf_bI@@Base>:
    30ac:	adrp	x9, 15000 <PyInit__ctypes_test@@Base+0x11c44>
    30b0:	ldr	x9, [x9, #4032]
    30b4:	mov	w10, #0xaaab                	// #43691
    30b8:	movk	w10, #0xaaaa, lsl #16
    30bc:	umull	x10, w1, w10
    30c0:	mov	w8, w1
    30c4:	lsr	x0, x10, #33
    30c8:	str	x8, [x9]
    30cc:	ret

00000000000030d0 <tf_bl@@Base>:
    30d0:	adrp	x8, 15000 <PyInit__ctypes_test@@Base+0x11c44>
    30d4:	ldr	x8, [x8, #4024]
    30d8:	mov	x9, #0x5555555555555555    	// #6148914691236517205
    30dc:	movk	x9, #0x5556
    30e0:	smulh	x9, x1, x9
    30e4:	add	x0, x9, x9, lsr #63
    30e8:	str	x1, [x8]
    30ec:	ret

00000000000030f0 <tf_bL@@Base>:
    30f0:	adrp	x8, 15000 <PyInit__ctypes_test@@Base+0x11c44>
    30f4:	ldr	x8, [x8, #4032]
    30f8:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    30fc:	movk	x9, #0xaaab
    3100:	umulh	x9, x1, x9
    3104:	lsr	x0, x9, #1
    3108:	str	x1, [x8]
    310c:	ret

0000000000003110 <tf_bq@@Base>:
    3110:	adrp	x8, 15000 <PyInit__ctypes_test@@Base+0x11c44>
    3114:	ldr	x8, [x8, #4024]
    3118:	mov	x9, #0x5555555555555555    	// #6148914691236517205
    311c:	movk	x9, #0x5556
    3120:	smulh	x9, x1, x9
    3124:	add	x0, x9, x9, lsr #63
    3128:	str	x1, [x8]
    312c:	ret

0000000000003130 <tf_bQ@@Base>:
    3130:	adrp	x8, 15000 <PyInit__ctypes_test@@Base+0x11c44>
    3134:	ldr	x8, [x8, #4032]
    3138:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    313c:	movk	x9, #0xaaab
    3140:	umulh	x9, x1, x9
    3144:	lsr	x0, x9, #1
    3148:	str	x1, [x8]
    314c:	ret

0000000000003150 <tf_bf@@Base>:
    3150:	adrp	x9, 15000 <PyInit__ctypes_test@@Base+0x11c44>
    3154:	ldr	x9, [x9, #4024]
    3158:	fmov	s1, #3.000000000000000000e+00
    315c:	fcvtzs	x8, s0
    3160:	fdiv	s0, s0, s1
    3164:	str	x8, [x9]
    3168:	ret

000000000000316c <tf_bd@@Base>:
    316c:	adrp	x9, 15000 <PyInit__ctypes_test@@Base+0x11c44>
    3170:	ldr	x9, [x9, #4024]
    3174:	fmov	d1, #3.000000000000000000e+00
    3178:	fcvtzs	x8, d0
    317c:	fdiv	d0, d0, d1
    3180:	str	x8, [x9]
    3184:	ret

0000000000003188 <tf_bD@@Base>:
    3188:	sub	sp, sp, #0x20
    318c:	stp	x29, x30, [sp, #16]
    3190:	add	x29, sp, #0x10
    3194:	str	q0, [sp]
    3198:	bl	5000 <PyInit__ctypes_test@@Base+0x1c44>
    319c:	adrp	x8, 15000 <PyInit__ctypes_test@@Base+0x11c44>
    31a0:	ldr	x8, [x8, #4024]
    31a4:	ldr	q0, [sp]
    31a8:	str	x0, [x8]
    31ac:	adrp	x8, 5000 <PyInit__ctypes_test@@Base+0x1c44>
    31b0:	ldr	q1, [x8, #1168]
    31b4:	bl	3ef8 <PyInit__ctypes_test@@Base+0xb3c>
    31b8:	ldp	x29, x30, [sp, #16]
    31bc:	add	sp, sp, #0x20
    31c0:	ret

00000000000031c4 <tv_i@@Base>:
    31c4:	adrp	x9, 15000 <PyInit__ctypes_test@@Base+0x11c44>
    31c8:	ldr	x9, [x9, #4024]
    31cc:	sxtw	x8, w0
    31d0:	str	x8, [x9]
    31d4:	ret

00000000000031d8 <PointInRect@@Base>:
    31d8:	ldr	x8, [x0]
    31dc:	cmp	x1, x8
    31e0:	b.ge	31ec <PointInRect@@Base+0x14>  // b.tcont
    31e4:	mov	w0, wzr
    31e8:	ret
    31ec:	ldr	x8, [x0, #16]
    31f0:	cmp	x1, x8
    31f4:	b.le	3200 <PointInRect@@Base+0x28>
    31f8:	mov	w0, wzr
    31fc:	ret
    3200:	ldr	x8, [x0, #8]
    3204:	cmp	x2, x8
    3208:	b.ge	3214 <PointInRect@@Base+0x3c>  // b.tcont
    320c:	mov	w0, wzr
    3210:	ret
    3214:	ldr	x8, [x0, #24]
    3218:	cmp	x2, x8
    321c:	cset	w0, le
    3220:	ret

0000000000003224 <ReturnRect@@Base>:
    3224:	adrp	x14, 15000 <PyInit__ctypes_test@@Base+0x11c44>
    3228:	ldr	x9, [sp, #16]
    322c:	ldr	x10, [x1]
    3230:	ldr	x11, [x2]
    3234:	ldr	x12, [x5]
    3238:	ldr	x13, [x6]
    323c:	ldr	x14, [x14, #3968]
    3240:	add	x10, x11, x10
    3244:	ldr	x11, [x9]
    3248:	add	x10, x10, x12
    324c:	ldr	x14, [x14]
    3250:	add	x10, x10, x13
    3254:	add	x10, x10, x11
    3258:	add	x11, x14, x14, lsl #2
    325c:	cmp	x10, x11
    3260:	b.ne	32d4 <ReturnRect@@Base+0xb0>  // b.any
    3264:	adrp	x15, 15000 <PyInit__ctypes_test@@Base+0x11c44>
    3268:	ldr	x10, [x1, #16]
    326c:	ldr	x11, [x2, #16]
    3270:	ldr	x12, [x5, #16]
    3274:	ldr	x13, [x6, #16]
    3278:	ldr	x14, [x9, #16]
    327c:	ldr	x15, [x15, #3976]
    3280:	add	x10, x11, x10
    3284:	add	x10, x10, x12
    3288:	add	x10, x10, x13
    328c:	ldr	x15, [x15]
    3290:	add	x10, x10, x14
    3294:	add	x11, x15, x15, lsl #2
    3298:	cmp	x10, x11
    329c:	b.ne	32e8 <ReturnRect@@Base+0xc4>  // b.any
    32a0:	ldp	x11, x10, [sp]
    32a4:	cmp	x3, x11
    32a8:	b.ne	32fc <ReturnRect@@Base+0xd8>  // b.any
    32ac:	cmp	x4, x10
    32b0:	b.ne	32fc <ReturnRect@@Base+0xd8>  // b.any
    32b4:	cmp	w0, #0x2
    32b8:	b.eq	3318 <ReturnRect@@Base+0xf4>  // b.none
    32bc:	cmp	w0, #0x1
    32c0:	b.ne	32c8 <ReturnRect@@Base+0xa4>  // b.any
    32c4:	mov	x1, x5
    32c8:	ldp	q1, q0, [x1]
    32cc:	stp	q1, q0, [x8]
    32d0:	ret
    32d4:	mov	w9, #0x64                  	// #100
    32d8:	str	x9, [x1]
    32dc:	ldp	q1, q0, [x1]
    32e0:	stp	q1, q0, [x8]
    32e4:	ret
    32e8:	mov	w9, #0x64                  	// #100
    32ec:	str	x9, [x1, #16]
    32f0:	ldp	q1, q0, [x1]
    32f4:	stp	q1, q0, [x8]
    32f8:	ret
    32fc:	cmp	x4, x10
    3300:	mov	x10, #0xffffffffffffff38    	// #-200
    3304:	mov	x11, #0xffffffffffffff9c    	// #-100
    3308:	csel	x10, x11, x10, eq  // eq = none
    330c:	str	x10, [x1]
    3310:	cmp	w0, #0x2
    3314:	b.ne	32bc <ReturnRect@@Base+0x98>  // b.any
    3318:	mov	x1, x9
    331c:	ldp	q1, q0, [x1]
    3320:	stp	q1, q0, [x8]
    3324:	ret

0000000000003328 <ret_2h_func@@Base>:
    3328:	ubfx	x8, x0, #16, #16
    332c:	add	w8, w8, w8, lsl #1
    3330:	ubfiz	w0, w0, #1, #15
    3334:	bfi	w0, w8, #16, #16
    3338:	ret

000000000000333c <ret_8i_func@@Base>:
    333c:	adrp	x9, 5000 <PyInit__ctypes_test@@Base+0x1c44>
    3340:	ldr	q2, [x9, #1184]
    3344:	adrp	x9, 5000 <PyInit__ctypes_test@@Base+0x1c44>
    3348:	ldp	q0, q1, [x0]
    334c:	ldr	q3, [x9, #1200]
    3350:	mul	v0.4s, v0.4s, v2.4s
    3354:	mul	v1.4s, v1.4s, v3.4s
    3358:	stp	q0, q1, [x0]
    335c:	ldp	q1, q0, [x0]
    3360:	stp	q1, q0, [x8]
    3364:	ret

0000000000003368 <GetRectangle@@Base>:
    3368:	cbz	w0, 339c <GetRectangle@@Base+0x34>
    336c:	adrp	x9, 5000 <PyInit__ctypes_test@@Base+0x1c44>
    3370:	ldr	d1, [x9, #1216]
    3374:	dup	v0.2s, w0
    3378:	sxtw	x8, w0
    337c:	add	w10, w0, #0x3
    3380:	add	v0.2s, v0.2s, v1.2s
    3384:	str	x8, [x1]
    3388:	sxtw	x8, w10
    338c:	sxtl	v0.2d, v0.2s
    3390:	mov	w0, #0x1                   	// #1
    3394:	str	x8, [x1, #24]
    3398:	stur	q0, [x1, #8]
    339c:	ret

00000000000033a0 <TwoOutArgs@@Base>:
    33a0:	ldr	w8, [x1]
    33a4:	add	w8, w8, w0
    33a8:	str	w8, [x1]
    33ac:	ldr	w8, [x3]
    33b0:	add	w8, w8, w2
    33b4:	str	w8, [x3]
    33b8:	ret

00000000000033bc <PyInit__ctypes_test@@Base>:
    33bc:	adrp	x0, 16000 <PyInit__ctypes_test@@Base+0x12c44>
    33c0:	add	x0, x0, #0xf8
    33c4:	mov	w1, #0x3f5                 	// #1013
    33c8:	b	2170 <PyModule_Create2@plt>
    33cc:	nop
    33d0:	stp	x29, x30, [sp, #-48]!
    33d4:	mov	x29, sp
    33d8:	str	q0, [sp, #16]
    33dc:	str	q1, [sp, #32]
    33e0:	ldp	x6, x1, [sp, #16]
    33e4:	ldp	x0, x3, [sp, #32]
    33e8:	mrs	x15, fpcr
    33ec:	lsr	x7, x1, #63
    33f0:	mov	x10, x0
    33f4:	ubfiz	x4, x3, #3, #48
    33f8:	lsr	x5, x3, #63
    33fc:	mov	x12, x7
    3400:	ubfiz	x2, x1, #3, #48
    3404:	orr	x4, x4, x0, lsr #61
    3408:	ubfx	x8, x1, #48, #15
    340c:	ubfx	x0, x3, #48, #15
    3410:	and	w7, w7, #0xff
    3414:	mov	x16, x12
    3418:	cmp	x12, x5
    341c:	and	w11, w5, #0xff
    3420:	orr	x2, x2, x6, lsr #61
    3424:	mov	x1, x8
    3428:	lsl	x9, x6, #3
    342c:	mov	x3, x0
    3430:	lsl	x13, x10, #3
    3434:	b.eq	35e0 <PyInit__ctypes_test@@Base+0x224>  // b.none
    3438:	sub	w0, w8, w0
    343c:	cmp	w0, #0x0
    3440:	b.le	358c <PyInit__ctypes_test@@Base+0x1d0>
    3444:	cbz	x3, 3640 <PyInit__ctypes_test@@Base+0x284>
    3448:	orr	x4, x4, #0x8000000000000
    344c:	mov	x3, #0x7fff                	// #32767
    3450:	cmp	x1, x3
    3454:	b.eq	3844 <PyInit__ctypes_test@@Base+0x488>  // b.none
    3458:	cmp	w0, #0x74
    345c:	b.gt	38c8 <PyInit__ctypes_test@@Base+0x50c>
    3460:	cmp	w0, #0x3f
    3464:	b.gt	3a28 <PyInit__ctypes_test@@Base+0x66c>
    3468:	mov	w3, #0x40                  	// #64
    346c:	sub	w3, w3, w0
    3470:	lsr	x6, x13, x0
    3474:	lsl	x13, x13, x3
    3478:	cmp	x13, #0x0
    347c:	cset	x5, ne  // ne = any
    3480:	lsl	x3, x4, x3
    3484:	orr	x3, x3, x6
    3488:	lsr	x0, x4, x0
    348c:	orr	x3, x3, x5
    3490:	sub	x2, x2, x0
    3494:	subs	x9, x9, x3
    3498:	sbc	x2, x2, xzr
    349c:	and	x3, x2, #0x7ffffffffffff
    34a0:	tbz	x2, #51, 3680 <PyInit__ctypes_test@@Base+0x2c4>
    34a4:	cbz	x3, 38ac <PyInit__ctypes_test@@Base+0x4f0>
    34a8:	clz	x0, x3
    34ac:	sub	w0, w0, #0xc
    34b0:	neg	w2, w0
    34b4:	lsl	x4, x3, x0
    34b8:	lsl	x3, x9, x0
    34bc:	lsr	x9, x9, x2
    34c0:	orr	x2, x9, x4
    34c4:	cmp	x1, w0, sxtw
    34c8:	sxtw	x4, w0
    34cc:	b.gt	388c <PyInit__ctypes_test@@Base+0x4d0>
    34d0:	sub	w1, w0, w1
    34d4:	add	w0, w1, #0x1
    34d8:	cmp	w0, #0x3f
    34dc:	b.gt	39f0 <PyInit__ctypes_test@@Base+0x634>
    34e0:	mov	w1, #0x40                  	// #64
    34e4:	sub	w1, w1, w0
    34e8:	lsr	x4, x3, x0
    34ec:	lsl	x3, x3, x1
    34f0:	cmp	x3, #0x0
    34f4:	lsl	x9, x2, x1
    34f8:	cset	x1, ne  // ne = any
    34fc:	orr	x9, x9, x4
    3500:	lsr	x2, x2, x0
    3504:	orr	x9, x9, x1
    3508:	orr	x8, x9, x2
    350c:	cbz	x8, 3694 <PyInit__ctypes_test@@Base+0x2d8>
    3510:	and	x0, x9, #0x7
    3514:	mov	x1, #0x0                   	// #0
    3518:	mov	w5, #0x1                   	// #1
    351c:	cbz	x0, 38d8 <PyInit__ctypes_test@@Base+0x51c>
    3520:	and	x3, x15, #0xc00000
    3524:	cmp	x3, #0x400, lsl #12
    3528:	b.eq	381c <PyInit__ctypes_test@@Base+0x460>  // b.none
    352c:	cmp	x3, #0x800, lsl #12
    3530:	b.eq	37fc <PyInit__ctypes_test@@Base+0x440>  // b.none
    3534:	cbz	x3, 3828 <PyInit__ctypes_test@@Base+0x46c>
    3538:	and	x3, x2, #0x8000000000000
    353c:	mov	w0, #0x10                  	// #16
    3540:	cbz	w5, 3548 <PyInit__ctypes_test@@Base+0x18c>
    3544:	orr	w0, w0, #0x8
    3548:	cbz	x3, 3860 <PyInit__ctypes_test@@Base+0x4a4>
    354c:	add	x1, x1, #0x1
    3550:	mov	x3, #0x7fff                	// #32767
    3554:	cmp	x1, x3
    3558:	b.eq	3744 <PyInit__ctypes_test@@Base+0x388>  // b.none
    355c:	and	w1, w1, #0x7fff
    3560:	extr	x8, x2, x9, #3
    3564:	ubfx	x2, x2, #3, #48
    3568:	mov	x5, #0x0                   	// #0
    356c:	orr	w1, w1, w7, lsl #15
    3570:	bfxil	x5, x2, #0, #48
    3574:	fmov	d0, x8
    3578:	bfi	x5, x1, #48, #16
    357c:	fmov	v0.d[1], x5
    3580:	cbnz	w0, 37a0 <PyInit__ctypes_test@@Base+0x3e4>
    3584:	ldp	x29, x30, [sp], #48
    3588:	ret
    358c:	mov	x14, x5
    3590:	b.eq	36ac <PyInit__ctypes_test@@Base+0x2f0>  // b.none
    3594:	cbnz	x8, 3930 <PyInit__ctypes_test@@Base+0x574>
    3598:	orr	x1, x2, x9
    359c:	cbz	x1, 365c <PyInit__ctypes_test@@Base+0x2a0>
    35a0:	cmn	w0, #0x1
    35a4:	b.eq	3d4c <PyInit__ctypes_test@@Base+0x990>  // b.none
    35a8:	mov	x1, #0x7fff                	// #32767
    35ac:	mvn	w0, w0
    35b0:	cmp	x3, x1
    35b4:	b.ne	3944 <PyInit__ctypes_test@@Base+0x588>  // b.any
    35b8:	orr	x0, x4, x13
    35bc:	cbnz	x0, 3ca4 <PyInit__ctypes_test@@Base+0x8e8>
    35c0:	mov	x16, x14
    35c4:	nop
    35c8:	mov	x4, #0x0                   	// #0
    35cc:	fmov	d0, x4
    35d0:	lsl	x16, x16, #63
    35d4:	orr	x5, x16, #0x7fff000000000000
    35d8:	fmov	v0.d[1], x5
    35dc:	b	3584 <PyInit__ctypes_test@@Base+0x1c8>
    35e0:	sub	w5, w8, w0
    35e4:	cmp	w5, #0x0
    35e8:	b.le	37b4 <PyInit__ctypes_test@@Base+0x3f8>
    35ec:	cbz	x0, 36f4 <PyInit__ctypes_test@@Base+0x338>
    35f0:	orr	x4, x4, #0x8000000000000
    35f4:	mov	x0, #0x7fff                	// #32767
    35f8:	cmp	x1, x0
    35fc:	b.eq	3844 <PyInit__ctypes_test@@Base+0x488>  // b.none
    3600:	cmp	w5, #0x74
    3604:	b.gt	39d8 <PyInit__ctypes_test@@Base+0x61c>
    3608:	cmp	w5, #0x3f
    360c:	b.gt	3ad8 <PyInit__ctypes_test@@Base+0x71c>
    3610:	mov	w0, #0x40                  	// #64
    3614:	sub	w0, w0, w5
    3618:	lsr	x6, x13, x5
    361c:	lsl	x13, x13, x0
    3620:	cmp	x13, #0x0
    3624:	lsl	x0, x4, x0
    3628:	cset	x3, ne  // ne = any
    362c:	orr	x0, x0, x6
    3630:	lsr	x4, x4, x5
    3634:	orr	x0, x0, x3
    3638:	add	x2, x2, x4
    363c:	b	39e4 <PyInit__ctypes_test@@Base+0x628>
    3640:	orr	x3, x4, x13
    3644:	cbz	x3, 39b4 <PyInit__ctypes_test@@Base+0x5f8>
    3648:	subs	w0, w0, #0x1
    364c:	b.ne	344c <PyInit__ctypes_test@@Base+0x90>  // b.any
    3650:	subs	x9, x9, x13
    3654:	sbc	x2, x2, x4
    3658:	b	349c <PyInit__ctypes_test@@Base+0xe0>
    365c:	mov	x0, #0x7fff                	// #32767
    3660:	cmp	x3, x0
    3664:	b.eq	3d98 <PyInit__ctypes_test@@Base+0x9dc>  // b.none
    3668:	mov	w7, w11
    366c:	mov	x2, x4
    3670:	mov	x9, x13
    3674:	mov	x1, x3
    3678:	mov	x12, x5
    367c:	nop
    3680:	orr	x8, x9, x2
    3684:	and	x0, x9, #0x7
    3688:	mov	w5, #0x0                   	// #0
    368c:	cbnz	x1, 351c <PyInit__ctypes_test@@Base+0x160>
    3690:	cbnz	x8, 3510 <PyInit__ctypes_test@@Base+0x154>
    3694:	mov	x2, #0x0                   	// #0
    3698:	mov	x1, #0x0                   	// #0
    369c:	mov	w0, #0x0                   	// #0
    36a0:	and	x2, x2, #0xffffffffffff
    36a4:	and	w1, w1, #0x7fff
    36a8:	b	3568 <PyInit__ctypes_test@@Base+0x1ac>
    36ac:	add	x5, x8, #0x1
    36b0:	tst	x5, #0x7ffe
    36b4:	b.ne	3984 <PyInit__ctypes_test@@Base+0x5c8>  // b.any
    36b8:	orr	x5, x2, x9
    36bc:	orr	x8, x4, x13
    36c0:	cbnz	x1, 3b44 <PyInit__ctypes_test@@Base+0x788>
    36c4:	cbz	x5, 3bec <PyInit__ctypes_test@@Base+0x830>
    36c8:	cbz	x8, 3c00 <PyInit__ctypes_test@@Base+0x844>
    36cc:	subs	x5, x9, x13
    36d0:	cmp	x9, x13
    36d4:	sbc	x3, x2, x4
    36d8:	tbz	x3, #51, 3dcc <PyInit__ctypes_test@@Base+0xa10>
    36dc:	subs	x9, x13, x9
    36e0:	mov	w7, w11
    36e4:	sbc	x2, x4, x2
    36e8:	mov	x12, x14
    36ec:	orr	x8, x9, x2
    36f0:	b	350c <PyInit__ctypes_test@@Base+0x150>
    36f4:	orr	x0, x4, x13
    36f8:	cbz	x0, 3bcc <PyInit__ctypes_test@@Base+0x810>
    36fc:	subs	w5, w5, #0x1
    3700:	b.ne	35f4 <PyInit__ctypes_test@@Base+0x238>  // b.any
    3704:	adds	x9, x9, x13
    3708:	adc	x2, x4, x2
    370c:	nop
    3710:	tbz	x2, #51, 3680 <PyInit__ctypes_test@@Base+0x2c4>
    3714:	add	x1, x1, #0x1
    3718:	mov	x0, #0x7fff                	// #32767
    371c:	cmp	x1, x0
    3720:	b.eq	3c0c <PyInit__ctypes_test@@Base+0x850>  // b.none
    3724:	and	x0, x9, #0x1
    3728:	and	x3, x2, #0xfff7ffffffffffff
    372c:	orr	x9, x0, x9, lsr #1
    3730:	mov	w5, #0x0                   	// #0
    3734:	orr	x9, x9, x2, lsl #63
    3738:	lsr	x2, x3, #1
    373c:	and	x0, x9, #0x7
    3740:	b	351c <PyInit__ctypes_test@@Base+0x160>
    3744:	and	x3, x15, #0xc00000
    3748:	cbz	x3, 3780 <PyInit__ctypes_test@@Base+0x3c4>
    374c:	cmp	x3, #0x400, lsl #12
    3750:	b.eq	3778 <PyInit__ctypes_test@@Base+0x3bc>  // b.none
    3754:	cmp	x3, #0x800, lsl #12
    3758:	csel	w12, w12, wzr, eq  // eq = none
    375c:	cbnz	w12, 3780 <PyInit__ctypes_test@@Base+0x3c4>
    3760:	mov	w1, #0x14                  	// #20
    3764:	mov	x2, #0x1fffffffffffffff    	// #2305843009213693951
    3768:	orr	w0, w0, w1
    376c:	mov	x8, #0xffffffffffffffff    	// #-1
    3770:	mov	x1, #0x7ffe                	// #32766
    3774:	b	36a0 <PyInit__ctypes_test@@Base+0x2e4>
    3778:	cbnz	x12, 3760 <PyInit__ctypes_test@@Base+0x3a4>
    377c:	nop
    3780:	mov	w1, #0x14                  	// #20
    3784:	and	x16, x7, #0xff
    3788:	orr	w0, w0, w1
    378c:	mov	x4, #0x0                   	// #0
    3790:	fmov	d0, x4
    3794:	lsl	x16, x16, #63
    3798:	orr	x5, x16, #0x7fff000000000000
    379c:	fmov	v0.d[1], x5
    37a0:	str	q0, [sp, #16]
    37a4:	bl	53c0 <PyInit__ctypes_test@@Base+0x2004>
    37a8:	ldr	q0, [sp, #16]
    37ac:	ldp	x29, x30, [sp], #48
    37b0:	ret
    37b4:	b.eq	38f4 <PyInit__ctypes_test@@Base+0x538>  // b.none
    37b8:	cbnz	x8, 3a78 <PyInit__ctypes_test@@Base+0x6bc>
    37bc:	orr	x0, x2, x9
    37c0:	cbz	x0, 3ce4 <PyInit__ctypes_test@@Base+0x928>
    37c4:	cmn	w5, #0x1
    37c8:	b.eq	3e44 <PyInit__ctypes_test@@Base+0xa88>  // b.none
    37cc:	mov	x0, #0x7fff                	// #32767
    37d0:	mvn	w5, w5
    37d4:	cmp	x3, x0
    37d8:	b.ne	3a8c <PyInit__ctypes_test@@Base+0x6d0>  // b.any
    37dc:	orr	x0, x4, x13
    37e0:	cbz	x0, 35c8 <PyInit__ctypes_test@@Base+0x20c>
    37e4:	lsr	x5, x4, #50
    37e8:	mov	x9, x13
    37ec:	eor	x5, x5, #0x1
    37f0:	mov	x2, x4
    37f4:	and	w5, w5, #0x1
    37f8:	b	3858 <PyInit__ctypes_test@@Base+0x49c>
    37fc:	mov	w0, #0x10                  	// #16
    3800:	cbz	x12, 380c <PyInit__ctypes_test@@Base+0x450>
    3804:	adds	x9, x9, #0x8
    3808:	cinc	x2, x2, cs  // cs = hs, nlast
    380c:	and	x3, x2, #0x8000000000000
    3810:	cbz	w5, 3548 <PyInit__ctypes_test@@Base+0x18c>
    3814:	orr	w0, w0, #0x8
    3818:	b	3548 <PyInit__ctypes_test@@Base+0x18c>
    381c:	mov	w0, #0x10                  	// #16
    3820:	cbnz	x12, 380c <PyInit__ctypes_test@@Base+0x450>
    3824:	b	3804 <PyInit__ctypes_test@@Base+0x448>
    3828:	and	x3, x9, #0xf
    382c:	mov	w0, #0x10                  	// #16
    3830:	cmp	x3, #0x4
    3834:	b.eq	380c <PyInit__ctypes_test@@Base+0x450>  // b.none
    3838:	adds	x9, x9, #0x4
    383c:	cinc	x2, x2, cs  // cs = hs, nlast
    3840:	b	380c <PyInit__ctypes_test@@Base+0x450>
    3844:	orr	x0, x2, x9
    3848:	cbz	x0, 35c8 <PyInit__ctypes_test@@Base+0x20c>
    384c:	lsr	x5, x2, #50
    3850:	eor	x5, x5, #0x1
    3854:	and	w5, w5, #0x1
    3858:	mov	w0, w5
    385c:	mov	x1, #0x7fff                	// #32767
    3860:	mov	x3, #0x7fff                	// #32767
    3864:	extr	x8, x2, x9, #3
    3868:	cmp	x1, x3
    386c:	lsr	x2, x2, #3
    3870:	b.ne	36a0 <PyInit__ctypes_test@@Base+0x2e4>  // b.any
    3874:	orr	x1, x8, x2
    3878:	cbz	x1, 3ee4 <PyInit__ctypes_test@@Base+0xb28>
    387c:	orr	x2, x2, #0x800000000000
    3880:	mov	w1, #0x7fff                	// #32767
    3884:	and	x2, x2, #0xffffffffffff
    3888:	b	3568 <PyInit__ctypes_test@@Base+0x1ac>
    388c:	mov	x9, x3
    3890:	and	x2, x2, #0xfff7ffffffffffff
    3894:	sub	x1, x1, x4
    3898:	orr	x8, x9, x2
    389c:	and	x0, x9, #0x7
    38a0:	mov	w5, #0x0                   	// #0
    38a4:	cbz	x1, 3690 <PyInit__ctypes_test@@Base+0x2d4>
    38a8:	b	351c <PyInit__ctypes_test@@Base+0x160>
    38ac:	clz	x2, x9
    38b0:	add	w0, w2, #0x34
    38b4:	cmp	w0, #0x3f
    38b8:	b.le	34b0 <PyInit__ctypes_test@@Base+0xf4>
    38bc:	sub	w2, w2, #0xc
    38c0:	lsl	x2, x9, x2
    38c4:	b	34c4 <PyInit__ctypes_test@@Base+0x108>
    38c8:	orr	x4, x4, x13
    38cc:	cmp	x4, #0x0
    38d0:	cset	x3, ne  // ne = any
    38d4:	b	3494 <PyInit__ctypes_test@@Base+0xd8>
    38d8:	and	x3, x2, #0x8000000000000
    38dc:	mov	w0, #0x0                   	// #0
    38e0:	cbz	w5, 3548 <PyInit__ctypes_test@@Base+0x18c>
    38e4:	mov	w0, #0x0                   	// #0
    38e8:	tbz	w15, #11, 3548 <PyInit__ctypes_test@@Base+0x18c>
    38ec:	orr	w0, w0, #0x8
    38f0:	b	3548 <PyInit__ctypes_test@@Base+0x18c>
    38f4:	add	x0, x8, #0x1
    38f8:	tst	x0, #0x7ffe
    38fc:	b.ne	3b04 <PyInit__ctypes_test@@Base+0x748>  // b.any
    3900:	orr	x0, x2, x9
    3904:	cbnz	x8, 3cc0 <PyInit__ctypes_test@@Base+0x904>
    3908:	orr	x8, x4, x13
    390c:	cbz	x0, 3d14 <PyInit__ctypes_test@@Base+0x958>
    3910:	cbz	x8, 3c00 <PyInit__ctypes_test@@Base+0x844>
    3914:	adds	x9, x9, x13
    3918:	adc	x2, x4, x2
    391c:	tbz	x2, #51, 36ec <PyInit__ctypes_test@@Base+0x330>
    3920:	and	x2, x2, #0xfff7ffffffffffff
    3924:	and	x0, x9, #0x7
    3928:	mov	x1, #0x1                   	// #1
    392c:	b	351c <PyInit__ctypes_test@@Base+0x160>
    3930:	mov	x1, #0x7fff                	// #32767
    3934:	neg	w0, w0
    3938:	orr	x2, x2, #0x8000000000000
    393c:	cmp	x3, x1
    3940:	b.eq	35b8 <PyInit__ctypes_test@@Base+0x1fc>  // b.none
    3944:	cmp	w0, #0x74
    3948:	b.gt	3a54 <PyInit__ctypes_test@@Base+0x698>
    394c:	cmp	w0, #0x3f
    3950:	b.gt	3c70 <PyInit__ctypes_test@@Base+0x8b4>
    3954:	mov	w1, #0x40                  	// #64
    3958:	sub	w1, w1, w0
    395c:	lsr	x5, x9, x0
    3960:	lsl	x9, x9, x1
    3964:	cmp	x9, #0x0
    3968:	lsl	x9, x2, x1
    396c:	cset	x1, ne  // ne = any
    3970:	orr	x9, x9, x5
    3974:	lsr	x0, x2, x0
    3978:	orr	x9, x9, x1
    397c:	sub	x4, x4, x0
    3980:	b	3a60 <PyInit__ctypes_test@@Base+0x6a4>
    3984:	subs	x5, x9, x13
    3988:	cmp	x9, x13
    398c:	sbc	x3, x2, x4
    3990:	tbnz	x3, #51, 3b2c <PyInit__ctypes_test@@Base+0x770>
    3994:	orr	x8, x5, x3
    3998:	cbnz	x8, 3c58 <PyInit__ctypes_test@@Base+0x89c>
    399c:	and	x15, x15, #0xc00000
    39a0:	mov	x2, #0x0                   	// #0
    39a4:	cmp	x15, #0x800, lsl #12
    39a8:	mov	x1, #0x0                   	// #0
    39ac:	cset	w7, eq  // eq = none
    39b0:	b	36a0 <PyInit__ctypes_test@@Base+0x2e4>
    39b4:	mov	x0, #0x7fff                	// #32767
    39b8:	cmp	x8, x0
    39bc:	b.ne	3680 <PyInit__ctypes_test@@Base+0x2c4>  // b.any
    39c0:	orr	x0, x2, x9
    39c4:	cbnz	x0, 384c <PyInit__ctypes_test@@Base+0x490>
    39c8:	mov	x2, #0x0                   	// #0
    39cc:	mov	x8, #0x0                   	// #0
    39d0:	mov	w0, #0x0                   	// #0
    39d4:	b	3874 <PyInit__ctypes_test@@Base+0x4b8>
    39d8:	orr	x4, x4, x13
    39dc:	cmp	x4, #0x0
    39e0:	cset	x0, ne  // ne = any
    39e4:	adds	x9, x0, x9
    39e8:	cinc	x2, x2, cs  // cs = hs, nlast
    39ec:	b	3710 <PyInit__ctypes_test@@Base+0x354>
    39f0:	mov	w4, #0x80                  	// #128
    39f4:	sub	w4, w4, w0
    39f8:	cmp	w0, #0x40
    39fc:	sub	w9, w1, #0x3f
    3a00:	lsl	x0, x2, x4
    3a04:	orr	x0, x3, x0
    3a08:	csel	x3, x0, x3, ne  // ne = any
    3a0c:	lsr	x9, x2, x9
    3a10:	cmp	x3, #0x0
    3a14:	mov	x2, #0x0                   	// #0
    3a18:	cset	x0, ne  // ne = any
    3a1c:	orr	x9, x0, x9
    3a20:	mov	x8, x9
    3a24:	b	350c <PyInit__ctypes_test@@Base+0x150>
    3a28:	mov	w5, #0x80                  	// #128
    3a2c:	sub	w5, w5, w0
    3a30:	subs	w0, w0, #0x40
    3a34:	lsl	x5, x4, x5
    3a38:	orr	x5, x13, x5
    3a3c:	csel	x13, x5, x13, ne  // ne = any
    3a40:	lsr	x4, x4, x0
    3a44:	cmp	x13, #0x0
    3a48:	cset	x3, ne  // ne = any
    3a4c:	orr	x3, x3, x4
    3a50:	b	3494 <PyInit__ctypes_test@@Base+0xd8>
    3a54:	orr	x2, x2, x9
    3a58:	cmp	x2, #0x0
    3a5c:	cset	x9, ne  // ne = any
    3a60:	subs	x9, x13, x9
    3a64:	mov	w7, w11
    3a68:	sbc	x2, x4, xzr
    3a6c:	mov	x1, x3
    3a70:	mov	x12, x14
    3a74:	b	349c <PyInit__ctypes_test@@Base+0xe0>
    3a78:	mov	x0, #0x7fff                	// #32767
    3a7c:	neg	w5, w5
    3a80:	orr	x2, x2, #0x8000000000000
    3a84:	cmp	x3, x0
    3a88:	b.eq	37dc <PyInit__ctypes_test@@Base+0x420>  // b.none
    3a8c:	cmp	w5, #0x74
    3a90:	b.gt	3c60 <PyInit__ctypes_test@@Base+0x8a4>
    3a94:	cmp	w5, #0x3f
    3a98:	b.gt	3d20 <PyInit__ctypes_test@@Base+0x964>
    3a9c:	mov	w1, #0x40                  	// #64
    3aa0:	sub	w1, w1, w5
    3aa4:	lsr	x6, x9, x5
    3aa8:	lsl	x9, x9, x1
    3aac:	cmp	x9, #0x0
    3ab0:	cset	x0, ne  // ne = any
    3ab4:	lsl	x9, x2, x1
    3ab8:	orr	x9, x9, x6
    3abc:	lsr	x5, x2, x5
    3ac0:	orr	x9, x9, x0
    3ac4:	add	x4, x4, x5
    3ac8:	adds	x9, x9, x13
    3acc:	mov	x1, x3
    3ad0:	cinc	x2, x4, cs  // cs = hs, nlast
    3ad4:	b	3710 <PyInit__ctypes_test@@Base+0x354>
    3ad8:	mov	w0, #0x80                  	// #128
    3adc:	sub	w0, w0, w5
    3ae0:	subs	w5, w5, #0x40
    3ae4:	lsl	x0, x4, x0
    3ae8:	orr	x0, x13, x0
    3aec:	csel	x13, x0, x13, ne  // ne = any
    3af0:	lsr	x4, x4, x5
    3af4:	cmp	x13, #0x0
    3af8:	cset	x0, ne  // ne = any
    3afc:	orr	x0, x0, x4
    3b00:	b	39e4 <PyInit__ctypes_test@@Base+0x628>
    3b04:	mov	x1, #0x7fff                	// #32767
    3b08:	cmp	x0, x1
    3b0c:	b.eq	3d68 <PyInit__ctypes_test@@Base+0x9ac>  // b.none
    3b10:	adds	x9, x9, x13
    3b14:	mov	x1, x0
    3b18:	adc	x2, x4, x2
    3b1c:	ubfx	x0, x9, #1, #3
    3b20:	extr	x9, x2, x9, #1
    3b24:	lsr	x2, x2, #1
    3b28:	b	351c <PyInit__ctypes_test@@Base+0x160>
    3b2c:	cmp	x13, x9
    3b30:	mov	w7, w11
    3b34:	sbc	x3, x4, x2
    3b38:	sub	x9, x13, x9
    3b3c:	mov	x12, x14
    3b40:	b	34a4 <PyInit__ctypes_test@@Base+0xe8>
    3b44:	mov	x12, #0x7fff                	// #32767
    3b48:	cmp	x1, x12
    3b4c:	b.eq	3b78 <PyInit__ctypes_test@@Base+0x7bc>  // b.none
    3b50:	cmp	x3, x12
    3b54:	b.eq	3da8 <PyInit__ctypes_test@@Base+0x9ec>  // b.none
    3b58:	cbnz	x5, 3b90 <PyInit__ctypes_test@@Base+0x7d4>
    3b5c:	mov	w5, w0
    3b60:	cbnz	x8, 3e88 <PyInit__ctypes_test@@Base+0xacc>
    3b64:	mov	w7, #0x0                   	// #0
    3b68:	mov	x2, #0xffffffffffff        	// #281474976710655
    3b6c:	mov	w0, #0x1                   	// #1
    3b70:	mov	x8, #0xffffffffffffffff    	// #-1
    3b74:	b	387c <PyInit__ctypes_test@@Base+0x4c0>
    3b78:	cbz	x5, 3ea4 <PyInit__ctypes_test@@Base+0xae8>
    3b7c:	lsr	x0, x2, #50
    3b80:	cmp	x3, x1
    3b84:	eor	x0, x0, #0x1
    3b88:	and	w0, w0, #0x1
    3b8c:	b.eq	3da8 <PyInit__ctypes_test@@Base+0x9ec>  // b.none
    3b90:	cbz	x8, 3dc4 <PyInit__ctypes_test@@Base+0xa08>
    3b94:	bfi	x6, x2, #61, #3
    3b98:	lsr	x3, x2, #3
    3b9c:	tbz	x2, #50, 3bb8 <PyInit__ctypes_test@@Base+0x7fc>
    3ba0:	lsr	x1, x4, #3
    3ba4:	tbnz	x4, #50, 3bb8 <PyInit__ctypes_test@@Base+0x7fc>
    3ba8:	mov	x6, x10
    3bac:	mov	w7, w11
    3bb0:	bfi	x6, x4, #61, #3
    3bb4:	mov	x3, x1
    3bb8:	extr	x2, x3, x6, #61
    3bbc:	bfi	x6, x2, #61, #3
    3bc0:	lsr	x2, x2, #3
    3bc4:	mov	x8, x6
    3bc8:	b	3874 <PyInit__ctypes_test@@Base+0x4b8>
    3bcc:	mov	x0, #0x7fff                	// #32767
    3bd0:	cmp	x8, x0
    3bd4:	b.ne	3680 <PyInit__ctypes_test@@Base+0x2c4>  // b.any
    3bd8:	orr	x0, x2, x9
    3bdc:	cbz	x0, 39c8 <PyInit__ctypes_test@@Base+0x60c>
    3be0:	lsr	x5, x2, #50
    3be4:	eor	w5, w5, #0x1
    3be8:	b	3858 <PyInit__ctypes_test@@Base+0x49c>
    3bec:	cbz	x8, 3d00 <PyInit__ctypes_test@@Base+0x944>
    3bf0:	mov	w7, w11
    3bf4:	mov	x2, x4
    3bf8:	mov	x9, x13
    3bfc:	mov	x12, x14
    3c00:	mov	x1, #0x0                   	// #0
    3c04:	mov	x3, #0x0                   	// #0
    3c08:	b	38e4 <PyInit__ctypes_test@@Base+0x528>
    3c0c:	ands	x3, x15, #0xc00000
    3c10:	b.eq	3c9c <PyInit__ctypes_test@@Base+0x8e0>  // b.none
    3c14:	cmp	x3, #0x400, lsl #12
    3c18:	eor	w0, w7, #0x1
    3c1c:	cset	w1, eq  // eq = none
    3c20:	tst	w1, w0
    3c24:	b.ne	3ec0 <PyInit__ctypes_test@@Base+0xb04>  // b.any
    3c28:	cmp	x3, #0x800, lsl #12
    3c2c:	b.eq	3e6c <PyInit__ctypes_test@@Base+0xab0>  // b.none
    3c30:	cmp	x3, #0x400, lsl #12
    3c34:	mov	w0, #0x14                  	// #20
    3c38:	b.ne	3748 <PyInit__ctypes_test@@Base+0x38c>  // b.any
    3c3c:	mov	x2, #0xffffffffffffffff    	// #-1
    3c40:	mov	x1, #0x7ffe                	// #32766
    3c44:	mov	x9, x2
    3c48:	mov	w5, #0x0                   	// #0
    3c4c:	mov	w0, #0x14                  	// #20
    3c50:	cbnz	x12, 380c <PyInit__ctypes_test@@Base+0x450>
    3c54:	b	3804 <PyInit__ctypes_test@@Base+0x448>
    3c58:	mov	x9, x5
    3c5c:	b	34a4 <PyInit__ctypes_test@@Base+0xe8>
    3c60:	orr	x2, x2, x9
    3c64:	cmp	x2, #0x0
    3c68:	cset	x9, ne  // ne = any
    3c6c:	b	3ac8 <PyInit__ctypes_test@@Base+0x70c>
    3c70:	mov	w1, #0x80                  	// #128
    3c74:	sub	w1, w1, w0
    3c78:	subs	w0, w0, #0x40
    3c7c:	lsl	x1, x2, x1
    3c80:	orr	x1, x9, x1
    3c84:	csel	x9, x1, x9, ne  // ne = any
    3c88:	lsr	x2, x2, x0
    3c8c:	cmp	x9, #0x0
    3c90:	cset	x9, ne  // ne = any
    3c94:	orr	x9, x9, x2
    3c98:	b	3a60 <PyInit__ctypes_test@@Base+0x6a4>
    3c9c:	mov	w0, #0x14                  	// #20
    3ca0:	b	378c <PyInit__ctypes_test@@Base+0x3d0>
    3ca4:	lsr	x5, x4, #50
    3ca8:	mov	w7, w11
    3cac:	eor	x5, x5, #0x1
    3cb0:	mov	x9, x13
    3cb4:	and	w5, w5, #0x1
    3cb8:	mov	x2, x4
    3cbc:	b	3858 <PyInit__ctypes_test@@Base+0x49c>
    3cc0:	mov	x8, #0x7fff                	// #32767
    3cc4:	cmp	x1, x8
    3cc8:	b.eq	3de8 <PyInit__ctypes_test@@Base+0xa2c>  // b.none
    3ccc:	cmp	x3, x8
    3cd0:	b.eq	3e5c <PyInit__ctypes_test@@Base+0xaa0>  // b.none
    3cd4:	cbnz	x0, 3e00 <PyInit__ctypes_test@@Base+0xa44>
    3cd8:	mov	x2, x4
    3cdc:	mov	x9, x13
    3ce0:	b	3858 <PyInit__ctypes_test@@Base+0x49c>
    3ce4:	mov	x0, #0x7fff                	// #32767
    3ce8:	cmp	x3, x0
    3cec:	b.eq	3e98 <PyInit__ctypes_test@@Base+0xadc>  // b.none
    3cf0:	mov	x2, x4
    3cf4:	mov	x9, x13
    3cf8:	mov	x1, x3
    3cfc:	b	3680 <PyInit__ctypes_test@@Base+0x2c4>
    3d00:	and	x15, x15, #0xc00000
    3d04:	mov	x2, #0x0                   	// #0
    3d08:	cmp	x15, #0x800, lsl #12
    3d0c:	cset	w7, eq  // eq = none
    3d10:	b	36a0 <PyInit__ctypes_test@@Base+0x2e4>
    3d14:	mov	x2, x4
    3d18:	mov	x9, x13
    3d1c:	b	350c <PyInit__ctypes_test@@Base+0x150>
    3d20:	mov	w0, #0x80                  	// #128
    3d24:	sub	w0, w0, w5
    3d28:	subs	w5, w5, #0x40
    3d2c:	lsl	x0, x2, x0
    3d30:	orr	x0, x9, x0
    3d34:	csel	x9, x0, x9, ne  // ne = any
    3d38:	lsr	x2, x2, x5
    3d3c:	cmp	x9, #0x0
    3d40:	cset	x9, ne  // ne = any
    3d44:	orr	x9, x9, x2
    3d48:	b	3ac8 <PyInit__ctypes_test@@Base+0x70c>
    3d4c:	cmp	x13, x9
    3d50:	mov	w7, w11
    3d54:	sbc	x2, x4, x2
    3d58:	sub	x9, x13, x9
    3d5c:	mov	x1, x3
    3d60:	mov	x12, x5
    3d64:	b	349c <PyInit__ctypes_test@@Base+0xe0>
    3d68:	ands	x3, x15, #0xc00000
    3d6c:	b.eq	3c9c <PyInit__ctypes_test@@Base+0x8e0>  // b.none
    3d70:	cmp	x3, #0x400, lsl #12
    3d74:	eor	w0, w7, #0x1
    3d78:	csel	w0, w0, wzr, eq  // eq = none
    3d7c:	cbnz	w0, 3ec0 <PyInit__ctypes_test@@Base+0xb04>
    3d80:	cmp	x3, #0x800, lsl #12
    3d84:	b.ne	3c30 <PyInit__ctypes_test@@Base+0x874>  // b.any
    3d88:	cbz	x12, 3e70 <PyInit__ctypes_test@@Base+0xab4>
    3d8c:	mov	w0, #0x14                  	// #20
    3d90:	mov	x16, #0x1                   	// #1
    3d94:	b	378c <PyInit__ctypes_test@@Base+0x3d0>
    3d98:	orr	x0, x4, x13
    3d9c:	cbnz	x0, 3ca4 <PyInit__ctypes_test@@Base+0x8e8>
    3da0:	mov	w7, w11
    3da4:	b	39c8 <PyInit__ctypes_test@@Base+0x60c>
    3da8:	cbz	x8, 3eb4 <PyInit__ctypes_test@@Base+0xaf8>
    3dac:	tst	x4, #0x4000000000000
    3db0:	csinc	w0, w0, wzr, ne  // ne = any
    3db4:	cbnz	x5, 3b94 <PyInit__ctypes_test@@Base+0x7d8>
    3db8:	mov	w7, w11
    3dbc:	mov	x2, x4
    3dc0:	mov	x9, x13
    3dc4:	mov	w5, w0
    3dc8:	b	3858 <PyInit__ctypes_test@@Base+0x49c>
    3dcc:	orr	x8, x5, x3
    3dd0:	cbz	x8, 3d00 <PyInit__ctypes_test@@Base+0x944>
    3dd4:	and	x0, x5, #0x7
    3dd8:	mov	x9, x5
    3ddc:	mov	x2, x3
    3de0:	mov	w5, #0x1                   	// #1
    3de4:	b	351c <PyInit__ctypes_test@@Base+0x160>
    3de8:	cbz	x0, 3e54 <PyInit__ctypes_test@@Base+0xa98>
    3dec:	lsr	x5, x2, #50
    3df0:	cmp	x3, x1
    3df4:	eor	x5, x5, #0x1
    3df8:	and	w5, w5, #0x1
    3dfc:	b.eq	3ecc <PyInit__ctypes_test@@Base+0xb10>  // b.none
    3e00:	orr	x13, x4, x13
    3e04:	cbz	x13, 3858 <PyInit__ctypes_test@@Base+0x49c>
    3e08:	bfi	x6, x2, #61, #3
    3e0c:	lsr	x0, x2, #3
    3e10:	tbz	x2, #50, 3e2c <PyInit__ctypes_test@@Base+0xa70>
    3e14:	lsr	x1, x4, #3
    3e18:	tbnz	x4, #50, 3e2c <PyInit__ctypes_test@@Base+0xa70>
    3e1c:	and	x6, x10, #0x1fffffffffffffff
    3e20:	mov	w7, w11
    3e24:	orr	x6, x6, x4, lsl #61
    3e28:	mov	x0, x1
    3e2c:	extr	x2, x0, x6, #61
    3e30:	mov	w0, w5
    3e34:	bfi	x6, x2, #61, #3
    3e38:	lsr	x2, x2, #3
    3e3c:	mov	x8, x6
    3e40:	b	3874 <PyInit__ctypes_test@@Base+0x4b8>
    3e44:	adds	x9, x9, x13
    3e48:	mov	x1, x3
    3e4c:	adc	x2, x4, x2
    3e50:	b	3710 <PyInit__ctypes_test@@Base+0x354>
    3e54:	cmp	x3, x1
    3e58:	b.ne	3cd8 <PyInit__ctypes_test@@Base+0x91c>  // b.any
    3e5c:	orr	x1, x4, x13
    3e60:	cbnz	x1, 3ed4 <PyInit__ctypes_test@@Base+0xb18>
    3e64:	cbz	x0, 39c8 <PyInit__ctypes_test@@Base+0x60c>
    3e68:	b	3858 <PyInit__ctypes_test@@Base+0x49c>
    3e6c:	cbnz	x16, 3d8c <PyInit__ctypes_test@@Base+0x9d0>
    3e70:	mov	x2, #0xffffffffffffffff    	// #-1
    3e74:	mov	w7, #0x0                   	// #0
    3e78:	mov	x9, x2
    3e7c:	mov	x1, #0x7ffe                	// #32766
    3e80:	mov	w0, #0x14                  	// #20
    3e84:	b	354c <PyInit__ctypes_test@@Base+0x190>
    3e88:	mov	w7, w11
    3e8c:	mov	x2, x4
    3e90:	mov	x9, x13
    3e94:	b	3858 <PyInit__ctypes_test@@Base+0x49c>
    3e98:	orr	x0, x4, x13
    3e9c:	cbz	x0, 39c8 <PyInit__ctypes_test@@Base+0x60c>
    3ea0:	b	37e4 <PyInit__ctypes_test@@Base+0x428>
    3ea4:	cmp	x3, x1
    3ea8:	b.eq	3da8 <PyInit__ctypes_test@@Base+0x9ec>  // b.none
    3eac:	mov	w5, #0x0                   	// #0
    3eb0:	b	3b60 <PyInit__ctypes_test@@Base+0x7a4>
    3eb4:	cbnz	x5, 3dc4 <PyInit__ctypes_test@@Base+0xa08>
    3eb8:	mov	w5, w0
    3ebc:	b	3b60 <PyInit__ctypes_test@@Base+0x7a4>
    3ec0:	mov	w0, #0x14                  	// #20
    3ec4:	mov	x16, #0x0                   	// #0
    3ec8:	b	378c <PyInit__ctypes_test@@Base+0x3d0>
    3ecc:	orr	x1, x4, x13
    3ed0:	cbz	x1, 3858 <PyInit__ctypes_test@@Base+0x49c>
    3ed4:	tst	x4, #0x4000000000000
    3ed8:	csinc	w5, w5, wzr, ne  // ne = any
    3edc:	cbnz	x0, 3e08 <PyInit__ctypes_test@@Base+0xa4c>
    3ee0:	b	3cd8 <PyInit__ctypes_test@@Base+0x91c>
    3ee4:	mov	x8, #0x0                   	// #0
    3ee8:	mov	w1, #0x7fff                	// #32767
    3eec:	mov	x2, #0x0                   	// #0
    3ef0:	b	3568 <PyInit__ctypes_test@@Base+0x1ac>
    3ef4:	nop
    3ef8:	stp	x29, x30, [sp, #-48]!
    3efc:	mov	x29, sp
    3f00:	str	q0, [sp, #16]
    3f04:	str	q1, [sp, #32]
    3f08:	ldp	x2, x0, [sp, #16]
    3f0c:	ldp	x5, x3, [sp, #32]
    3f10:	mrs	x10, fpcr
    3f14:	lsr	x1, x0, #63
    3f18:	ubfx	x6, x0, #0, #48
    3f1c:	and	w13, w1, #0xff
    3f20:	mov	x14, x1
    3f24:	ubfx	x7, x0, #48, #15
    3f28:	cbz	w7, 4348 <PyInit__ctypes_test@@Base+0xf8c>
    3f2c:	mov	w4, #0x7fff                	// #32767
    3f30:	cmp	w7, w4
    3f34:	b.eq	4390 <PyInit__ctypes_test@@Base+0xfd4>  // b.none
    3f38:	and	x7, x7, #0xffff
    3f3c:	extr	x6, x6, x2, #61
    3f40:	mov	x15, #0xffffffffffffc001    	// #-16383
    3f44:	orr	x4, x6, #0x8000000000000
    3f48:	add	x7, x7, x15
    3f4c:	lsl	x2, x2, #3
    3f50:	mov	x1, #0x0                   	// #0
    3f54:	mov	x16, #0x0                   	// #0
    3f58:	mov	w0, #0x0                   	// #0
    3f5c:	lsr	x8, x3, #63
    3f60:	ubfx	x6, x3, #0, #48
    3f64:	and	w15, w8, #0xff
    3f68:	ubfx	x9, x3, #48, #15
    3f6c:	cbz	w9, 4304 <PyInit__ctypes_test@@Base+0xf48>
    3f70:	mov	w11, #0x7fff                	// #32767
    3f74:	cmp	w9, w11
    3f78:	b.eq	403c <PyInit__ctypes_test@@Base+0xc80>  // b.none
    3f7c:	and	x9, x9, #0xffff
    3f80:	extr	x6, x6, x5, #61
    3f84:	mov	x12, #0xffffffffffffc001    	// #-16383
    3f88:	orr	x6, x6, #0x8000000000000
    3f8c:	add	x9, x9, x12
    3f90:	lsl	x5, x5, #3
    3f94:	sub	x7, x7, x9
    3f98:	mov	x9, #0x0                   	// #0
    3f9c:	eor	w11, w13, w15
    3fa0:	cmp	x1, #0x9
    3fa4:	and	x3, x11, #0xff
    3fa8:	mov	x12, x3
    3fac:	b.gt	42dc <PyInit__ctypes_test@@Base+0xf20>
    3fb0:	cmp	x1, #0x7
    3fb4:	b.gt	449c <PyInit__ctypes_test@@Base+0x10e0>
    3fb8:	cmp	x1, #0x3
    3fbc:	b.eq	3fd8 <PyInit__ctypes_test@@Base+0xc1c>  // b.none
    3fc0:	b.le	42ac <PyInit__ctypes_test@@Base+0xef0>
    3fc4:	cmp	x1, #0x5
    3fc8:	b.eq	42ec <PyInit__ctypes_test@@Base+0xf30>  // b.none
    3fcc:	b.le	40d0 <PyInit__ctypes_test@@Base+0xd14>
    3fd0:	cmp	x1, #0x6
    3fd4:	b.eq	40a0 <PyInit__ctypes_test@@Base+0xce4>  // b.none
    3fd8:	cmp	x9, #0x1
    3fdc:	b.eq	4420 <PyInit__ctypes_test@@Base+0x1064>  // b.none
    3fe0:	cbz	x9, 3ff4 <PyInit__ctypes_test@@Base+0xc38>
    3fe4:	cmp	x9, #0x2
    3fe8:	b.eq	4624 <PyInit__ctypes_test@@Base+0x1268>  // b.none
    3fec:	cmp	x9, #0x3
    3ff0:	b.eq	460c <PyInit__ctypes_test@@Base+0x1250>  // b.none
    3ff4:	mov	x1, #0x3fff                	// #16383
    3ff8:	mov	x12, x8
    3ffc:	add	x3, x7, x1
    4000:	cmp	x3, #0x0
    4004:	b.le	44e0 <PyInit__ctypes_test@@Base+0x1124>
    4008:	tst	x5, #0x7
    400c:	b.ne	4450 <PyInit__ctypes_test@@Base+0x1094>  // b.any
    4010:	and	w11, w12, #0x1
    4014:	tbz	x6, #52, 4020 <PyInit__ctypes_test@@Base+0xc64>
    4018:	and	x6, x6, #0xffefffffffffffff
    401c:	add	x3, x7, #0x4, lsl #12
    4020:	mov	x1, #0x7ffe                	// #32766
    4024:	cmp	x3, x1
    4028:	b.gt	45c8 <PyInit__ctypes_test@@Base+0x120c>
    402c:	and	w1, w3, #0x7fff
    4030:	extr	x2, x6, x5, #3
    4034:	ubfx	x6, x6, #3, #48
    4038:	b	40ac <PyInit__ctypes_test@@Base+0xcf0>
    403c:	mov	x9, #0xffffffffffff8001    	// #-32767
    4040:	orr	x3, x6, x5
    4044:	add	x7, x7, x9
    4048:	cbz	x3, 43c4 <PyInit__ctypes_test@@Base+0x1008>
    404c:	tst	x6, #0x800000000000
    4050:	orr	x1, x1, #0x3
    4054:	csinc	w0, w0, wzr, ne  // ne = any
    4058:	mov	x9, #0x3                   	// #3
    405c:	eor	w11, w13, w15
    4060:	cmp	x1, #0x9
    4064:	and	x3, x11, #0xff
    4068:	mov	x12, x3
    406c:	b.le	3fb0 <PyInit__ctypes_test@@Base+0xbf4>
    4070:	cmp	x1, #0xf
    4074:	b.ne	42dc <PyInit__ctypes_test@@Base+0xf20>  // b.any
    4078:	tbz	x4, #47, 4488 <PyInit__ctypes_test@@Base+0x10cc>
    407c:	tbnz	x6, #47, 4488 <PyInit__ctypes_test@@Base+0x10cc>
    4080:	orr	x6, x6, #0x800000000000
    4084:	mov	w11, w15
    4088:	and	x6, x6, #0xffffffffffff
    408c:	mov	x2, x5
    4090:	mov	w1, #0x7fff                	// #32767
    4094:	b	40ac <PyInit__ctypes_test@@Base+0xcf0>
    4098:	cmp	x1, #0x2
    409c:	b.ne	40d8 <PyInit__ctypes_test@@Base+0xd1c>  // b.any
    40a0:	mov	w1, #0x0                   	// #0
    40a4:	mov	x6, #0x0                   	// #0
    40a8:	mov	x2, #0x0                   	// #0
    40ac:	mov	x5, #0x0                   	// #0
    40b0:	orr	w1, w1, w11, lsl #15
    40b4:	bfxil	x5, x6, #0, #48
    40b8:	fmov	d0, x2
    40bc:	bfi	x5, x1, #48, #16
    40c0:	fmov	v0.d[1], x5
    40c4:	cbnz	w0, 42cc <PyInit__ctypes_test@@Base+0xf10>
    40c8:	ldp	x29, x30, [sp], #48
    40cc:	ret
    40d0:	cmp	x1, #0x4
    40d4:	b.eq	40a0 <PyInit__ctypes_test@@Base+0xce4>  // b.none
    40d8:	cmp	x4, x6
    40dc:	b.ls	4434 <PyInit__ctypes_test@@Base+0x1078>  // b.plast
    40e0:	lsr	x3, x4, #1
    40e4:	extr	x8, x4, x2, #1
    40e8:	lsl	x2, x2, #63
    40ec:	ubfx	x14, x6, #20, #32
    40f0:	extr	x9, x6, x5, #52
    40f4:	lsl	x13, x5, #12
    40f8:	and	x15, x9, #0xffffffff
    40fc:	udiv	x5, x3, x14
    4100:	msub	x3, x5, x14, x3
    4104:	mul	x1, x15, x5
    4108:	extr	x3, x3, x8, #32
    410c:	cmp	x1, x3
    4110:	b.ls	4124 <PyInit__ctypes_test@@Base+0xd68>  // b.plast
    4114:	adds	x3, x9, x3
    4118:	ccmp	x1, x3, #0x0, cc  // cc = lo, ul, last
    411c:	b.hi	4704 <PyInit__ctypes_test@@Base+0x1348>  // b.pmore
    4120:	sub	x5, x5, #0x1
    4124:	sub	x3, x3, x1
    4128:	mov	x4, x8
    412c:	udiv	x1, x3, x14
    4130:	msub	x3, x1, x14, x3
    4134:	mul	x6, x15, x1
    4138:	bfi	x4, x3, #32, #32
    413c:	cmp	x6, x4
    4140:	b.ls	4154 <PyInit__ctypes_test@@Base+0xd98>  // b.plast
    4144:	adds	x4, x9, x4
    4148:	ccmp	x6, x4, #0x0, cc  // cc = lo, ul, last
    414c:	b.hi	46f8 <PyInit__ctypes_test@@Base+0x133c>  // b.pmore
    4150:	sub	x1, x1, #0x1
    4154:	orr	x8, x1, x5, lsl #32
    4158:	and	x17, x13, #0xffffffff
    415c:	and	x1, x8, #0xffffffff
    4160:	lsr	x16, x13, #32
    4164:	lsr	x5, x8, #32
    4168:	sub	x4, x4, x6
    416c:	mov	x18, #0x100000000           	// #4294967296
    4170:	mul	x3, x1, x17
    4174:	mul	x30, x5, x17
    4178:	madd	x6, x16, x1, x30
    417c:	and	x1, x3, #0xffffffff
    4180:	mul	x5, x5, x16
    4184:	add	x3, x6, x3, lsr #32
    4188:	add	x6, x5, x18
    418c:	cmp	x30, x3
    4190:	csel	x5, x6, x5, hi  // hi = pmore
    4194:	add	x1, x1, x3, lsl #32
    4198:	add	x5, x5, x3, lsr #32
    419c:	cmp	x4, x5
    41a0:	b.cc	44ac <PyInit__ctypes_test@@Base+0x10f0>  // b.lo, b.ul, b.last
    41a4:	ccmp	x2, x1, #0x2, eq  // eq = none
    41a8:	mov	x6, x8
    41ac:	b.cc	44ac <PyInit__ctypes_test@@Base+0x10f0>  // b.lo, b.ul, b.last
    41b0:	subs	x8, x2, x1
    41b4:	mov	x3, #0x3fff                	// #16383
    41b8:	cmp	x2, x1
    41bc:	add	x3, x7, x3
    41c0:	sbc	x4, x4, x5
    41c4:	cmp	x9, x4
    41c8:	b.eq	4710 <PyInit__ctypes_test@@Base+0x1354>  // b.none
    41cc:	udiv	x5, x4, x14
    41d0:	msub	x4, x5, x14, x4
    41d4:	mul	x2, x15, x5
    41d8:	extr	x1, x4, x8, #32
    41dc:	cmp	x2, x1
    41e0:	b.ls	41f4 <PyInit__ctypes_test@@Base+0xe38>  // b.plast
    41e4:	adds	x1, x9, x1
    41e8:	ccmp	x2, x1, #0x0, cc  // cc = lo, ul, last
    41ec:	b.hi	47c8 <PyInit__ctypes_test@@Base+0x140c>  // b.pmore
    41f0:	sub	x5, x5, #0x1
    41f4:	sub	x1, x1, x2
    41f8:	udiv	x2, x1, x14
    41fc:	msub	x1, x2, x14, x1
    4200:	mul	x15, x15, x2
    4204:	bfi	x8, x1, #32, #32
    4208:	mov	x1, x8
    420c:	cmp	x15, x8
    4210:	b.ls	4224 <PyInit__ctypes_test@@Base+0xe68>  // b.plast
    4214:	adds	x1, x9, x8
    4218:	ccmp	x15, x1, #0x0, cc  // cc = lo, ul, last
    421c:	b.hi	47d4 <PyInit__ctypes_test@@Base+0x1418>  // b.pmore
    4220:	sub	x2, x2, #0x1
    4224:	orr	x5, x2, x5, lsl #32
    4228:	mov	x11, #0x100000000           	// #4294967296
    422c:	and	x4, x5, #0xffffffff
    4230:	sub	x1, x1, x15
    4234:	lsr	x14, x5, #32
    4238:	mul	x2, x17, x4
    423c:	mul	x17, x14, x17
    4240:	madd	x4, x16, x4, x17
    4244:	and	x8, x2, #0xffffffff
    4248:	mul	x16, x16, x14
    424c:	add	x2, x4, x2, lsr #32
    4250:	add	x4, x16, x11
    4254:	cmp	x17, x2
    4258:	csel	x16, x4, x16, hi  // hi = pmore
    425c:	add	x4, x8, x2, lsl #32
    4260:	add	x16, x16, x2, lsr #32
    4264:	cmp	x1, x16
    4268:	b.cs	4648 <PyInit__ctypes_test@@Base+0x128c>  // b.hs, b.nlast
    426c:	adds	x2, x9, x1
    4270:	sub	x8, x5, #0x1
    4274:	mov	x1, x2
    4278:	b.cs	428c <PyInit__ctypes_test@@Base+0xed0>  // b.hs, b.nlast
    427c:	cmp	x2, x16
    4280:	b.cc	4748 <PyInit__ctypes_test@@Base+0x138c>  // b.lo, b.ul, b.last
    4284:	ccmp	x13, x4, #0x2, eq  // eq = none
    4288:	b.cc	4748 <PyInit__ctypes_test@@Base+0x138c>  // b.lo, b.ul, b.last
    428c:	cmp	x13, x4
    4290:	mov	x5, x8
    4294:	cset	w2, ne  // ne = any
    4298:	cmp	w2, #0x0
    429c:	orr	x2, x5, #0x1
    42a0:	ccmp	x1, x16, #0x0, eq  // eq = none
    42a4:	csel	x5, x2, x5, ne  // ne = any
    42a8:	b	4000 <PyInit__ctypes_test@@Base+0xc44>
    42ac:	cmp	x1, #0x1
    42b0:	b.ne	4098 <PyInit__ctypes_test@@Base+0xcdc>  // b.any
    42b4:	mov	x4, #0x0                   	// #0
    42b8:	fmov	d0, x4
    42bc:	lsl	x3, x3, #63
    42c0:	orr	w0, w0, #0x2
    42c4:	orr	x5, x3, #0x7fff000000000000
    42c8:	fmov	v0.d[1], x5
    42cc:	str	q0, [sp, #16]
    42d0:	bl	53c0 <PyInit__ctypes_test@@Base+0x2004>
    42d4:	ldr	q0, [sp, #16]
    42d8:	b	40c8 <PyInit__ctypes_test@@Base+0xd0c>
    42dc:	cmp	x1, #0xb
    42e0:	b.gt	43b0 <PyInit__ctypes_test@@Base+0xff4>
    42e4:	cmp	x1, #0xa
    42e8:	b.ne	3fd8 <PyInit__ctypes_test@@Base+0xc1c>  // b.any
    42ec:	mov	w11, #0x0                   	// #0
    42f0:	mov	x6, #0xffffffffffff        	// #281474976710655
    42f4:	mov	x2, #0xffffffffffffffff    	// #-1
    42f8:	mov	w0, #0x1                   	// #1
    42fc:	mov	w1, #0x7fff                	// #32767
    4300:	b	40ac <PyInit__ctypes_test@@Base+0xcf0>
    4304:	orr	x3, x6, x5
    4308:	cbz	x3, 43f0 <PyInit__ctypes_test@@Base+0x1034>
    430c:	cbz	x6, 45a4 <PyInit__ctypes_test@@Base+0x11e8>
    4310:	clz	x3, x6
    4314:	sub	x9, x3, #0xf
    4318:	add	w12, w9, #0x3
    431c:	mov	w11, #0x3d                  	// #61
    4320:	sub	w9, w11, w9
    4324:	lsl	x6, x6, x12
    4328:	lsr	x9, x5, x9
    432c:	orr	x6, x9, x6
    4330:	lsl	x5, x5, x12
    4334:	add	x7, x3, x7
    4338:	mov	x11, #0x3fef                	// #16367
    433c:	mov	x9, #0x0                   	// #0
    4340:	add	x7, x7, x11
    4344:	b	3f9c <PyInit__ctypes_test@@Base+0xbe0>
    4348:	orr	x4, x6, x2
    434c:	cbz	x4, 43d8 <PyInit__ctypes_test@@Base+0x101c>
    4350:	cbz	x6, 4580 <PyInit__ctypes_test@@Base+0x11c4>
    4354:	clz	x0, x6
    4358:	sub	x4, x0, #0xf
    435c:	add	w7, w4, #0x3
    4360:	mov	w1, #0x3d                  	// #61
    4364:	sub	w4, w1, w4
    4368:	lsl	x6, x6, x7
    436c:	lsr	x4, x2, x4
    4370:	orr	x4, x4, x6
    4374:	lsl	x2, x2, x7
    4378:	mov	x7, #0xffffffffffffc011    	// #-16367
    437c:	mov	x1, #0x0                   	// #0
    4380:	sub	x7, x7, x0
    4384:	mov	x16, #0x0                   	// #0
    4388:	mov	w0, #0x0                   	// #0
    438c:	b	3f5c <PyInit__ctypes_test@@Base+0xba0>
    4390:	orr	x4, x6, x2
    4394:	cbnz	x4, 4404 <PyInit__ctypes_test@@Base+0x1048>
    4398:	mov	x2, #0x0                   	// #0
    439c:	mov	x1, #0x8                   	// #8
    43a0:	mov	x7, #0x7fff                	// #32767
    43a4:	mov	x16, #0x2                   	// #2
    43a8:	mov	w0, #0x0                   	// #0
    43ac:	b	3f5c <PyInit__ctypes_test@@Base+0xba0>
    43b0:	mov	x6, x4
    43b4:	mov	x5, x2
    43b8:	mov	x8, x14
    43bc:	mov	x9, x16
    43c0:	b	3fd8 <PyInit__ctypes_test@@Base+0xc1c>
    43c4:	orr	x1, x1, #0x2
    43c8:	mov	x6, #0x0                   	// #0
    43cc:	mov	x5, #0x0                   	// #0
    43d0:	mov	x9, #0x2                   	// #2
    43d4:	b	405c <PyInit__ctypes_test@@Base+0xca0>
    43d8:	mov	x2, #0x0                   	// #0
    43dc:	mov	x1, #0x4                   	// #4
    43e0:	mov	x7, #0x0                   	// #0
    43e4:	mov	x16, #0x1                   	// #1
    43e8:	mov	w0, #0x0                   	// #0
    43ec:	b	3f5c <PyInit__ctypes_test@@Base+0xba0>
    43f0:	orr	x1, x1, #0x1
    43f4:	mov	x6, #0x0                   	// #0
    43f8:	mov	x5, #0x0                   	// #0
    43fc:	mov	x9, #0x1                   	// #1
    4400:	b	3f9c <PyInit__ctypes_test@@Base+0xbe0>
    4404:	lsr	x0, x6, #47
    4408:	mov	x4, x6
    440c:	eor	w0, w0, #0x1
    4410:	mov	x1, #0xc                   	// #12
    4414:	mov	x7, #0x7fff                	// #32767
    4418:	mov	x16, #0x3                   	// #3
    441c:	b	3f5c <PyInit__ctypes_test@@Base+0xba0>
    4420:	mov	w11, w8
    4424:	mov	w1, #0x0                   	// #0
    4428:	mov	x6, #0x0                   	// #0
    442c:	mov	x2, #0x0                   	// #0
    4430:	b	40ac <PyInit__ctypes_test@@Base+0xcf0>
    4434:	ccmp	x5, x2, #0x2, eq  // eq = none
    4438:	b.ls	40e0 <PyInit__ctypes_test@@Base+0xd24>  // b.plast
    443c:	mov	x8, x2
    4440:	sub	x7, x7, #0x1
    4444:	mov	x3, x4
    4448:	mov	x2, #0x0                   	// #0
    444c:	b	40ec <PyInit__ctypes_test@@Base+0xd30>
    4450:	and	x1, x10, #0xc00000
    4454:	orr	w0, w0, #0x10
    4458:	cmp	x1, #0x400, lsl #12
    445c:	b.eq	47b0 <PyInit__ctypes_test@@Base+0x13f4>  // b.none
    4460:	cmp	x1, #0x800, lsl #12
    4464:	b.eq	46c4 <PyInit__ctypes_test@@Base+0x1308>  // b.none
    4468:	cbnz	x1, 4010 <PyInit__ctypes_test@@Base+0xc54>
    446c:	and	x1, x5, #0xf
    4470:	and	w11, w12, #0x1
    4474:	cmp	x1, #0x4
    4478:	b.eq	4014 <PyInit__ctypes_test@@Base+0xc58>  // b.none
    447c:	adds	x5, x5, #0x4
    4480:	cinc	x6, x6, cs  // cs = hs, nlast
    4484:	b	4014 <PyInit__ctypes_test@@Base+0xc58>
    4488:	orr	x6, x4, #0x800000000000
    448c:	mov	w11, w13
    4490:	and	x6, x6, #0xffffffffffff
    4494:	mov	w1, #0x7fff                	// #32767
    4498:	b	40ac <PyInit__ctypes_test@@Base+0xcf0>
    449c:	mov	w1, #0x7fff                	// #32767
    44a0:	mov	x6, #0x0                   	// #0
    44a4:	mov	x2, #0x0                   	// #0
    44a8:	b	40ac <PyInit__ctypes_test@@Base+0xcf0>
    44ac:	adds	x3, x2, x13
    44b0:	sub	x6, x8, #0x1
    44b4:	adc	x4, x4, x9
    44b8:	cset	x18, cs  // cs = hs, nlast
    44bc:	mov	x2, x3
    44c0:	cmp	x9, x4
    44c4:	b.cs	4638 <PyInit__ctypes_test@@Base+0x127c>  // b.hs, b.nlast
    44c8:	cmp	x5, x4
    44cc:	b.ls	4660 <PyInit__ctypes_test@@Base+0x12a4>  // b.plast
    44d0:	adds	x2, x13, x3
    44d4:	sub	x6, x8, #0x2
    44d8:	adc	x4, x4, x9
    44dc:	b	41b0 <PyInit__ctypes_test@@Base+0xdf4>
    44e0:	mov	x1, #0x1                   	// #1
    44e4:	sub	x1, x1, x3
    44e8:	cmp	x1, #0x74
    44ec:	and	w11, w12, #0x1
    44f0:	b.le	450c <PyInit__ctypes_test@@Base+0x1150>
    44f4:	orr	x2, x5, x6
    44f8:	cbnz	x2, 472c <PyInit__ctypes_test@@Base+0x1370>
    44fc:	orr	w0, w0, #0x8
    4500:	mov	w1, #0x0                   	// #0
    4504:	mov	x6, #0x0                   	// #0
    4508:	b	45f0 <PyInit__ctypes_test@@Base+0x1234>
    450c:	cmp	x1, #0x3f
    4510:	b.le	466c <PyInit__ctypes_test@@Base+0x12b0>
    4514:	mov	w2, #0x80                  	// #128
    4518:	sub	w2, w2, w1
    451c:	cmp	x1, #0x40
    4520:	sub	w1, w1, #0x40
    4524:	lsl	x2, x6, x2
    4528:	orr	x2, x5, x2
    452c:	csel	x5, x2, x5, ne  // ne = any
    4530:	lsr	x6, x6, x1
    4534:	cmp	x5, #0x0
    4538:	cset	x2, ne  // ne = any
    453c:	orr	x2, x2, x6
    4540:	ands	x6, x2, #0x7
    4544:	b.eq	46a0 <PyInit__ctypes_test@@Base+0x12e4>  // b.none
    4548:	mov	x6, #0x0                   	// #0
    454c:	and	x10, x10, #0xc00000
    4550:	orr	w0, w0, #0x10
    4554:	cmp	x10, #0x400, lsl #12
    4558:	b.eq	47ec <PyInit__ctypes_test@@Base+0x1430>  // b.none
    455c:	cmp	x10, #0x800, lsl #12
    4560:	b.eq	4800 <PyInit__ctypes_test@@Base+0x1444>  // b.none
    4564:	cbz	x10, 4768 <PyInit__ctypes_test@@Base+0x13ac>
    4568:	tbnz	x6, #51, 4780 <PyInit__ctypes_test@@Base+0x13c4>
    456c:	orr	w0, w0, #0x8
    4570:	extr	x2, x6, x2, #3
    4574:	mov	w1, #0x0                   	// #0
    4578:	ubfx	x6, x6, #3, #48
    457c:	b	45f0 <PyInit__ctypes_test@@Base+0x1234>
    4580:	clz	x7, x2
    4584:	add	x4, x7, #0x31
    4588:	add	x0, x7, #0x40
    458c:	cmp	x4, #0x3c
    4590:	b.le	435c <PyInit__ctypes_test@@Base+0xfa0>
    4594:	sub	w4, w4, #0x3d
    4598:	lsl	x4, x2, x4
    459c:	mov	x2, #0x0                   	// #0
    45a0:	b	4378 <PyInit__ctypes_test@@Base+0xfbc>
    45a4:	clz	x3, x5
    45a8:	add	x9, x3, #0x31
    45ac:	add	x3, x3, #0x40
    45b0:	cmp	x9, #0x3c
    45b4:	b.le	4318 <PyInit__ctypes_test@@Base+0xf5c>
    45b8:	sub	w6, w9, #0x3d
    45bc:	lsl	x6, x5, x6
    45c0:	mov	x5, #0x0                   	// #0
    45c4:	b	4334 <PyInit__ctypes_test@@Base+0xf78>
    45c8:	and	x2, x10, #0xc00000
    45cc:	cmp	x2, #0x400, lsl #12
    45d0:	b.eq	4794 <PyInit__ctypes_test@@Base+0x13d8>  // b.none
    45d4:	cmp	x2, #0x800, lsl #12
    45d8:	b.eq	46dc <PyInit__ctypes_test@@Base+0x1320>  // b.none
    45dc:	cbz	x2, 46b8 <PyInit__ctypes_test@@Base+0x12fc>
    45e0:	mov	x6, #0xffffffffffff        	// #281474976710655
    45e4:	mov	x2, #0xffffffffffffffff    	// #-1
    45e8:	mov	w3, #0x14                  	// #20
    45ec:	orr	w0, w0, w3
    45f0:	mov	x5, #0x0                   	// #0
    45f4:	orr	w1, w1, w11, lsl #15
    45f8:	bfxil	x5, x6, #0, #48
    45fc:	fmov	d0, x2
    4600:	bfi	x5, x1, #48, #16
    4604:	fmov	v0.d[1], x5
    4608:	b	42cc <PyInit__ctypes_test@@Base+0xf10>
    460c:	orr	x6, x6, #0x800000000000
    4610:	mov	w11, w8
    4614:	and	x6, x6, #0xffffffffffff
    4618:	mov	x2, x5
    461c:	mov	w1, #0x7fff                	// #32767
    4620:	b	40ac <PyInit__ctypes_test@@Base+0xcf0>
    4624:	mov	w11, w8
    4628:	mov	w1, #0x7fff                	// #32767
    462c:	mov	x6, #0x0                   	// #0
    4630:	mov	x2, #0x0                   	// #0
    4634:	b	40ac <PyInit__ctypes_test@@Base+0xcf0>
    4638:	cmp	x18, #0x0
    463c:	ccmp	x9, x4, #0x0, eq  // eq = none
    4640:	b.ne	41b0 <PyInit__ctypes_test@@Base+0xdf4>  // b.any
    4644:	b	44c8 <PyInit__ctypes_test@@Base+0x110c>
    4648:	cmp	x4, #0x0
    464c:	cset	w2, ne  // ne = any
    4650:	cmp	w2, #0x0
    4654:	ccmp	x1, x16, #0x0, ne  // ne = any
    4658:	b.ne	4298 <PyInit__ctypes_test@@Base+0xedc>  // b.any
    465c:	b	426c <PyInit__ctypes_test@@Base+0xeb0>
    4660:	ccmp	x1, x3, #0x0, eq  // eq = none
    4664:	b.ls	41b0 <PyInit__ctypes_test@@Base+0xdf4>  // b.plast
    4668:	b	44d0 <PyInit__ctypes_test@@Base+0x1114>
    466c:	mov	w2, #0x40                  	// #64
    4670:	sub	w2, w2, w1
    4674:	lsr	x4, x5, x1
    4678:	lsl	x5, x5, x2
    467c:	cmp	x5, #0x0
    4680:	cset	x3, ne  // ne = any
    4684:	lsl	x2, x6, x2
    4688:	orr	x2, x2, x4
    468c:	lsr	x6, x6, x1
    4690:	orr	x2, x2, x3
    4694:	tst	x2, #0x7
    4698:	b.ne	454c <PyInit__ctypes_test@@Base+0x1190>  // b.any
    469c:	tbnz	x6, #51, 480c <PyInit__ctypes_test@@Base+0x1450>
    46a0:	mov	w1, #0x0                   	// #0
    46a4:	extr	x2, x6, x2, #3
    46a8:	ubfx	x6, x6, #3, #48
    46ac:	tbz	w10, #11, 40ac <PyInit__ctypes_test@@Base+0xcf0>
    46b0:	orr	w0, w0, #0x8
    46b4:	b	45f0 <PyInit__ctypes_test@@Base+0x1234>
    46b8:	mov	w1, #0x7fff                	// #32767
    46bc:	mov	x6, #0x0                   	// #0
    46c0:	b	45e8 <PyInit__ctypes_test@@Base+0x122c>
    46c4:	mov	w11, #0x0                   	// #0
    46c8:	cbz	x12, 4014 <PyInit__ctypes_test@@Base+0xc58>
    46cc:	adds	x5, x5, #0x8
    46d0:	mov	w11, #0x1                   	// #1
    46d4:	cinc	x6, x6, cs  // cs = hs, nlast
    46d8:	b	4014 <PyInit__ctypes_test@@Base+0xc58>
    46dc:	cmp	x12, #0x0
    46e0:	mov	w2, #0x7fff                	// #32767
    46e4:	mov	x6, #0xffffffffffff        	// #281474976710655
    46e8:	csel	w1, w1, w2, eq  // eq = none
    46ec:	csel	x6, x6, xzr, eq  // eq = none
    46f0:	csetm	x2, eq  // eq = none
    46f4:	b	45e8 <PyInit__ctypes_test@@Base+0x122c>
    46f8:	sub	x1, x1, #0x2
    46fc:	add	x4, x4, x9
    4700:	b	4154 <PyInit__ctypes_test@@Base+0xd98>
    4704:	sub	x5, x5, #0x2
    4708:	add	x3, x3, x9
    470c:	b	4124 <PyInit__ctypes_test@@Base+0xd68>
    4710:	cmp	x3, #0x0
    4714:	mov	x5, #0xffffffffffffffff    	// #-1
    4718:	b.gt	4450 <PyInit__ctypes_test@@Base+0x1094>
    471c:	mov	x1, #0x1                   	// #1
    4720:	sub	x1, x1, x3
    4724:	cmp	x1, #0x74
    4728:	b.le	450c <PyInit__ctypes_test@@Base+0x1150>
    472c:	and	x10, x10, #0xc00000
    4730:	orr	w0, w0, #0x10
    4734:	cmp	x10, #0x400, lsl #12
    4738:	b.eq	47e0 <PyInit__ctypes_test@@Base+0x1424>  // b.none
    473c:	cmp	x10, #0x800, lsl #12
    4740:	csel	x2, x12, xzr, eq  // eq = none
    4744:	b	44fc <PyInit__ctypes_test@@Base+0x1140>
    4748:	lsl	x8, x13, #1
    474c:	sub	x5, x5, #0x2
    4750:	cmp	x13, x8
    4754:	cinc	x1, x9, hi  // hi = pmore
    4758:	cmp	x4, x8
    475c:	add	x1, x2, x1
    4760:	cset	w2, ne  // ne = any
    4764:	b	4298 <PyInit__ctypes_test@@Base+0xedc>
    4768:	and	x1, x2, #0xf
    476c:	cmp	x1, #0x4
    4770:	b.eq	477c <PyInit__ctypes_test@@Base+0x13c0>  // b.none
    4774:	adds	x2, x2, #0x4
    4778:	cinc	x6, x6, cs  // cs = hs, nlast
    477c:	tbz	x6, #51, 456c <PyInit__ctypes_test@@Base+0x11b0>
    4780:	orr	w0, w0, #0x8
    4784:	mov	w1, #0x1                   	// #1
    4788:	mov	x6, #0x0                   	// #0
    478c:	mov	x2, #0x0                   	// #0
    4790:	b	45f0 <PyInit__ctypes_test@@Base+0x1234>
    4794:	cmp	x12, #0x0
    4798:	mov	w2, #0x7fff                	// #32767
    479c:	mov	x6, #0xffffffffffff        	// #281474976710655
    47a0:	csel	w1, w1, w2, ne  // ne = any
    47a4:	csel	x6, x6, xzr, ne  // ne = any
    47a8:	csetm	x2, ne  // ne = any
    47ac:	b	45e8 <PyInit__ctypes_test@@Base+0x122c>
    47b0:	mov	w11, #0x1                   	// #1
    47b4:	cbnz	x12, 4014 <PyInit__ctypes_test@@Base+0xc58>
    47b8:	adds	x5, x5, #0x8
    47bc:	mov	w11, #0x0                   	// #0
    47c0:	cinc	x6, x6, cs  // cs = hs, nlast
    47c4:	b	4014 <PyInit__ctypes_test@@Base+0xc58>
    47c8:	sub	x5, x5, #0x2
    47cc:	add	x1, x1, x9
    47d0:	b	41f4 <PyInit__ctypes_test@@Base+0xe38>
    47d4:	sub	x2, x2, #0x2
    47d8:	add	x1, x1, x9
    47dc:	b	4224 <PyInit__ctypes_test@@Base+0xe68>
    47e0:	mov	x2, #0x1                   	// #1
    47e4:	sub	x2, x2, x12
    47e8:	b	44fc <PyInit__ctypes_test@@Base+0x1140>
    47ec:	cbnz	x12, 477c <PyInit__ctypes_test@@Base+0x13c0>
    47f0:	adds	x2, x2, #0x8
    47f4:	cinc	x6, x6, cs  // cs = hs, nlast
    47f8:	tbnz	x6, #51, 4780 <PyInit__ctypes_test@@Base+0x13c4>
    47fc:	b	456c <PyInit__ctypes_test@@Base+0x11b0>
    4800:	cbnz	x12, 47f0 <PyInit__ctypes_test@@Base+0x1434>
    4804:	tbnz	x6, #51, 4780 <PyInit__ctypes_test@@Base+0x13c4>
    4808:	b	456c <PyInit__ctypes_test@@Base+0x11b0>
    480c:	orr	w0, w0, #0x10
    4810:	b	4780 <PyInit__ctypes_test@@Base+0x13c4>
    4814:	nop
    4818:	stp	x29, x30, [sp, #-80]!
    481c:	mov	x29, sp
    4820:	str	q0, [sp, #48]
    4824:	str	q1, [sp, #64]
    4828:	ldp	x1, x0, [sp, #48]
    482c:	ldp	x6, x2, [sp, #64]
    4830:	mrs	x11, fpcr
    4834:	lsr	x3, x0, #63
    4838:	ubfx	x7, x0, #0, #48
    483c:	and	w12, w3, #0xff
    4840:	mov	x14, x3
    4844:	ubfx	x3, x0, #48, #15
    4848:	cbz	w3, 4bf0 <PyInit__ctypes_test@@Base+0x1834>
    484c:	mov	w4, #0x7fff                	// #32767
    4850:	cmp	w3, w4
    4854:	b.eq	4c94 <PyInit__ctypes_test@@Base+0x18d8>  // b.none
    4858:	and	x3, x3, #0xffff
    485c:	extr	x4, x7, x1, #61
    4860:	mov	x18, #0xffffffffffffc001    	// #-16383
    4864:	orr	x7, x4, #0x8000000000000
    4868:	add	x3, x3, x18
    486c:	lsl	x5, x1, #3
    4870:	mov	x16, #0x0                   	// #0
    4874:	mov	x1, #0x0                   	// #0
    4878:	mov	w0, #0x0                   	// #0
    487c:	lsr	x8, x2, #63
    4880:	ubfx	x4, x2, #0, #48
    4884:	and	w15, w8, #0xff
    4888:	mov	x13, x8
    488c:	ubfx	x9, x2, #48, #15
    4890:	cbz	w9, 4c50 <PyInit__ctypes_test@@Base+0x1894>
    4894:	mov	w8, #0x7fff                	// #32767
    4898:	cmp	w9, w8
    489c:	b.eq	4920 <PyInit__ctypes_test@@Base+0x1564>  // b.none
    48a0:	and	x9, x9, #0xffff
    48a4:	mov	x17, #0xffffffffffffc001    	// #-16383
    48a8:	add	x9, x9, x17
    48ac:	extr	x2, x4, x6, #61
    48b0:	add	x9, x9, x3
    48b4:	lsl	x6, x6, #3
    48b8:	orr	x4, x2, #0x8000000000000
    48bc:	mov	x2, #0x0                   	// #0
    48c0:	eor	w8, w12, w15
    48c4:	cmp	x1, #0xa
    48c8:	and	w10, w8, #0xff
    48cc:	add	x3, x9, #0x1
    48d0:	and	x8, x8, #0xff
    48d4:	b.le	4958 <PyInit__ctypes_test@@Base+0x159c>
    48d8:	cmp	x1, #0xb
    48dc:	b.eq	4ff0 <PyInit__ctypes_test@@Base+0x1c34>  // b.none
    48e0:	mov	w15, w12
    48e4:	mov	x13, x14
    48e8:	mov	w10, w15
    48ec:	cmp	x16, #0x2
    48f0:	b.eq	4cb4 <PyInit__ctypes_test@@Base+0x18f8>  // b.none
    48f4:	mov	x4, x7
    48f8:	mov	x6, x5
    48fc:	mov	x2, x16
    4900:	mov	x8, x13
    4904:	cmp	x2, #0x3
    4908:	b.ne	4974 <PyInit__ctypes_test@@Base+0x15b8>  // b.any
    490c:	orr	x4, x4, #0x800000000000
    4910:	mov	x5, x6
    4914:	and	x4, x4, #0xffffffffffff
    4918:	mov	w1, #0x7fff                	// #32767
    491c:	b	4988 <PyInit__ctypes_test@@Base+0x15cc>
    4920:	mov	x8, #0x7fff                	// #32767
    4924:	orr	x2, x4, x6
    4928:	add	x9, x3, x8
    492c:	cbnz	x2, 49ac <PyInit__ctypes_test@@Base+0x15f0>
    4930:	eor	w8, w12, w15
    4934:	orr	x1, x1, #0x2
    4938:	and	w10, w8, #0xff
    493c:	cmp	x1, #0xa
    4940:	add	x3, x3, #0x8, lsl #12
    4944:	and	x8, x8, #0xff
    4948:	mov	x6, #0x0                   	// #0
    494c:	b.gt	4f64 <PyInit__ctypes_test@@Base+0x1ba8>
    4950:	mov	x4, #0x0                   	// #0
    4954:	mov	x2, #0x2                   	// #2
    4958:	cmp	x1, #0x2
    495c:	b.gt	49d4 <PyInit__ctypes_test@@Base+0x1618>
    4960:	sub	x1, x1, #0x1
    4964:	cmp	x1, #0x1
    4968:	b.hi	4a10 <PyInit__ctypes_test@@Base+0x1654>  // b.pmore
    496c:	cmp	x2, #0x2
    4970:	b.eq	4cb4 <PyInit__ctypes_test@@Base+0x18f8>  // b.none
    4974:	cmp	x2, #0x1
    4978:	b.ne	4b70 <PyInit__ctypes_test@@Base+0x17b4>  // b.any
    497c:	mov	w1, #0x0                   	// #0
    4980:	mov	x4, #0x0                   	// #0
    4984:	mov	x5, #0x0                   	// #0
    4988:	mov	x3, #0x0                   	// #0
    498c:	orr	w1, w1, w10, lsl #15
    4990:	bfxil	x3, x4, #0, #48
    4994:	fmov	d0, x5
    4998:	bfi	x3, x1, #48, #16
    499c:	fmov	v0.d[1], x3
    49a0:	cbnz	w0, 4de0 <PyInit__ctypes_test@@Base+0x1a24>
    49a4:	ldp	x29, x30, [sp], #80
    49a8:	ret
    49ac:	tst	x4, #0x800000000000
    49b0:	eor	w8, w12, w15
    49b4:	orr	x1, x1, #0x3
    49b8:	csinc	w0, w0, wzr, ne  // ne = any
    49bc:	and	w10, w8, #0xff
    49c0:	add	x3, x3, #0x8, lsl #12
    49c4:	cmp	x1, #0xa
    49c8:	and	x8, x8, #0xff
    49cc:	mov	x2, #0x3                   	// #3
    49d0:	b.gt	4fe4 <PyInit__ctypes_test@@Base+0x1c28>
    49d4:	mov	x12, #0x1                   	// #1
    49d8:	mov	x14, #0x530                 	// #1328
    49dc:	lsl	x1, x12, x1
    49e0:	tst	x1, x14
    49e4:	b.ne	4be4 <PyInit__ctypes_test@@Base+0x1828>  // b.any
    49e8:	mov	x14, #0x240                 	// #576
    49ec:	tst	x1, x14
    49f0:	b.ne	4bcc <PyInit__ctypes_test@@Base+0x1810>  // b.any
    49f4:	mov	x12, #0x88                  	// #136
    49f8:	tst	x1, x12
    49fc:	b.eq	4a10 <PyInit__ctypes_test@@Base+0x1654>  // b.none
    4a00:	mov	x7, x4
    4a04:	mov	x5, x6
    4a08:	mov	x16, x2
    4a0c:	b	48e8 <PyInit__ctypes_test@@Base+0x152c>
    4a10:	lsr	x13, x5, #32
    4a14:	and	x12, x6, #0xffffffff
    4a18:	and	x15, x5, #0xffffffff
    4a1c:	lsr	x6, x6, #32
    4a20:	and	x18, x4, #0xffffffff
    4a24:	lsr	x2, x4, #32
    4a28:	mul	x4, x13, x12
    4a2c:	stp	x21, x22, [sp, #32]
    4a30:	lsr	x22, x7, #32
    4a34:	and	x5, x7, #0xffffffff
    4a38:	mul	x16, x12, x15
    4a3c:	madd	x7, x6, x15, x4
    4a40:	stp	x19, x20, [sp, #16]
    4a44:	mul	x1, x13, x18
    4a48:	mul	x17, x15, x18
    4a4c:	and	x30, x16, #0xffffffff
    4a50:	madd	x15, x2, x15, x1
    4a54:	add	x16, x7, x16, lsr #32
    4a58:	mul	x21, x22, x12
    4a5c:	cmp	x4, x16
    4a60:	mul	x20, x22, x18
    4a64:	mov	x14, #0x100000000           	// #4294967296
    4a68:	mul	x19, x13, x6
    4a6c:	add	x15, x15, x17, lsr #32
    4a70:	mul	x12, x12, x5
    4a74:	and	x17, x17, #0xffffffff
    4a78:	mul	x18, x5, x18
    4a7c:	add	x4, x19, x14
    4a80:	madd	x7, x6, x5, x21
    4a84:	csel	x19, x4, x19, hi  // hi = pmore
    4a88:	madd	x5, x2, x5, x20
    4a8c:	cmp	x1, x15
    4a90:	mul	x13, x13, x2
    4a94:	add	x17, x17, x15, lsl #32
    4a98:	mul	x6, x6, x22
    4a9c:	add	x7, x7, x12, lsr #32
    4aa0:	add	x5, x5, x18, lsr #32
    4aa4:	add	x4, x13, x14
    4aa8:	mul	x2, x2, x22
    4aac:	csel	x13, x4, x13, hi  // hi = pmore
    4ab0:	and	x1, x18, #0xffffffff
    4ab4:	cmp	x21, x7
    4ab8:	add	x4, x6, x14
    4abc:	add	x30, x30, x16, lsl #32
    4ac0:	csel	x6, x4, x6, hi  // hi = pmore
    4ac4:	add	x13, x13, x15, lsr #32
    4ac8:	cmp	x20, x5
    4acc:	add	x1, x1, x5, lsl #32
    4ad0:	add	x16, x17, x16, lsr #32
    4ad4:	add	x14, x2, x14
    4ad8:	csel	x2, x14, x2, hi  // hi = pmore
    4adc:	add	x16, x19, x16
    4ae0:	adds	x1, x1, x13
    4ae4:	and	x12, x12, #0xffffffff
    4ae8:	cset	x13, cs  // cs = hs, nlast
    4aec:	cmp	x16, x17
    4af0:	cset	x4, cc  // cc = lo, ul, last
    4af4:	add	x12, x12, x7, lsl #32
    4af8:	adds	x1, x1, x4
    4afc:	lsr	x5, x5, #32
    4b00:	cset	x4, cs  // cs = hs, nlast
    4b04:	cmp	x13, #0x0
    4b08:	ccmp	x4, #0x0, #0x0, eq  // eq = none
    4b0c:	add	x7, x6, x7, lsr #32
    4b10:	cinc	x5, x5, ne  // ne = any
    4b14:	adds	x6, x16, x12
    4b18:	cset	x4, cs  // cs = hs, nlast
    4b1c:	adds	x1, x1, x7
    4b20:	cset	x7, cs  // cs = hs, nlast
    4b24:	adds	x4, x1, x4
    4b28:	cset	x1, cs  // cs = hs, nlast
    4b2c:	cmp	x7, #0x0
    4b30:	orr	x30, x30, x6, lsl #13
    4b34:	ccmp	x1, #0x0, #0x0, eq  // eq = none
    4b38:	cinc	x1, x2, ne  // ne = any
    4b3c:	cmp	x30, #0x0
    4b40:	add	x1, x1, x5
    4b44:	cset	x2, ne  // ne = any
    4b48:	orr	x6, x2, x6, lsr #51
    4b4c:	orr	x6, x6, x4, lsl #13
    4b50:	extr	x4, x1, x4, #51
    4b54:	tbz	x1, #39, 4e68 <PyInit__ctypes_test@@Base+0x1aac>
    4b58:	ldp	x19, x20, [sp, #16]
    4b5c:	and	x1, x6, #0x1
    4b60:	ldp	x21, x22, [sp, #32]
    4b64:	orr	x6, x1, x6, lsr #1
    4b68:	orr	x6, x6, x4, lsl #63
    4b6c:	lsr	x4, x4, #1
    4b70:	mov	x1, #0x3fff                	// #16383
    4b74:	add	x2, x3, x1
    4b78:	cmp	x2, #0x0
    4b7c:	b.le	4d14 <PyInit__ctypes_test@@Base+0x1958>
    4b80:	tst	x6, #0x7
    4b84:	b.eq	4ba4 <PyInit__ctypes_test@@Base+0x17e8>  // b.none
    4b88:	and	x1, x11, #0xc00000
    4b8c:	orr	w0, w0, #0x10
    4b90:	cmp	x1, #0x400, lsl #12
    4b94:	b.eq	4f5c <PyInit__ctypes_test@@Base+0x1ba0>  // b.none
    4b98:	cmp	x1, #0x800, lsl #12
    4b9c:	b.eq	4f04 <PyInit__ctypes_test@@Base+0x1b48>  // b.none
    4ba0:	cbz	x1, 4eec <PyInit__ctypes_test@@Base+0x1b30>
    4ba4:	tbz	x4, #52, 4bb0 <PyInit__ctypes_test@@Base+0x17f4>
    4ba8:	and	x4, x4, #0xffefffffffffffff
    4bac:	add	x2, x3, #0x4, lsl #12
    4bb0:	mov	x1, #0x7ffe                	// #32766
    4bb4:	cmp	x2, x1
    4bb8:	b.gt	4e3c <PyInit__ctypes_test@@Base+0x1a80>
    4bbc:	and	w1, w2, #0x7fff
    4bc0:	extr	x5, x4, x6, #3
    4bc4:	ubfx	x4, x4, #3, #48
    4bc8:	b	4988 <PyInit__ctypes_test@@Base+0x15cc>
    4bcc:	mov	w0, w12
    4bd0:	mov	w10, #0x0                   	// #0
    4bd4:	mov	x4, #0xffffffffffff        	// #281474976710655
    4bd8:	mov	x5, #0xffffffffffffffff    	// #-1
    4bdc:	mov	w1, #0x7fff                	// #32767
    4be0:	b	4988 <PyInit__ctypes_test@@Base+0x15cc>
    4be4:	mov	w15, w10
    4be8:	mov	x13, x8
    4bec:	b	48e8 <PyInit__ctypes_test@@Base+0x152c>
    4bf0:	orr	x5, x7, x1
    4bf4:	cbz	x5, 4cfc <PyInit__ctypes_test@@Base+0x1940>
    4bf8:	cbz	x7, 4e18 <PyInit__ctypes_test@@Base+0x1a5c>
    4bfc:	clz	x0, x7
    4c00:	sub	x4, x0, #0xf
    4c04:	add	w5, w4, #0x3
    4c08:	mov	w3, #0x3d                  	// #61
    4c0c:	sub	w3, w3, w4
    4c10:	lsl	x4, x7, x5
    4c14:	lsr	x3, x1, x3
    4c18:	orr	x7, x3, x4
    4c1c:	lsl	x5, x1, x5
    4c20:	lsr	x8, x2, #63
    4c24:	mov	x3, #0xffffffffffffc011    	// #-16367
    4c28:	ubfx	x4, x2, #0, #48
    4c2c:	sub	x3, x3, x0
    4c30:	and	w15, w8, #0xff
    4c34:	mov	x13, x8
    4c38:	ubfx	x9, x2, #48, #15
    4c3c:	mov	x1, #0x0                   	// #0
    4c40:	mov	x16, #0x0                   	// #0
    4c44:	mov	w0, #0x0                   	// #0
    4c48:	cbnz	w9, 4894 <PyInit__ctypes_test@@Base+0x14d8>
    4c4c:	nop
    4c50:	orr	x2, x4, x6
    4c54:	cbz	x2, 4cc4 <PyInit__ctypes_test@@Base+0x1908>
    4c58:	cbz	x4, 4df4 <PyInit__ctypes_test@@Base+0x1a38>
    4c5c:	clz	x9, x4
    4c60:	sub	x2, x9, #0xf
    4c64:	add	w10, w2, #0x3
    4c68:	mov	w8, #0x3d                  	// #61
    4c6c:	sub	w8, w8, w2
    4c70:	lsl	x2, x4, x10
    4c74:	lsr	x8, x6, x8
    4c78:	orr	x4, x8, x2
    4c7c:	lsl	x6, x6, x10
    4c80:	sub	x9, x3, x9
    4c84:	mov	x10, #0xffffffffffffc011    	// #-16367
    4c88:	mov	x2, #0x0                   	// #0
    4c8c:	add	x9, x9, x10
    4c90:	b	48c0 <PyInit__ctypes_test@@Base+0x1504>
    4c94:	orr	x5, x7, x1
    4c98:	cbnz	x5, 4cdc <PyInit__ctypes_test@@Base+0x1920>
    4c9c:	mov	x7, #0x0                   	// #0
    4ca0:	mov	x1, #0x8                   	// #8
    4ca4:	mov	x3, #0x7fff                	// #32767
    4ca8:	mov	x16, #0x2                   	// #2
    4cac:	mov	w0, #0x0                   	// #0
    4cb0:	b	487c <PyInit__ctypes_test@@Base+0x14c0>
    4cb4:	mov	w1, #0x7fff                	// #32767
    4cb8:	mov	x4, #0x0                   	// #0
    4cbc:	mov	x5, #0x0                   	// #0
    4cc0:	b	4988 <PyInit__ctypes_test@@Base+0x15cc>
    4cc4:	orr	x1, x1, #0x1
    4cc8:	mov	x9, x3
    4ccc:	mov	x4, #0x0                   	// #0
    4cd0:	mov	x6, #0x0                   	// #0
    4cd4:	mov	x2, #0x1                   	// #1
    4cd8:	b	48c0 <PyInit__ctypes_test@@Base+0x1504>
    4cdc:	lsr	x0, x7, #47
    4ce0:	mov	x5, x1
    4ce4:	eor	x0, x0, #0x1
    4ce8:	mov	x1, #0xc                   	// #12
    4cec:	and	w0, w0, #0x1
    4cf0:	mov	x3, #0x7fff                	// #32767
    4cf4:	mov	x16, #0x3                   	// #3
    4cf8:	b	487c <PyInit__ctypes_test@@Base+0x14c0>
    4cfc:	mov	x7, #0x0                   	// #0
    4d00:	mov	x1, #0x4                   	// #4
    4d04:	mov	x3, #0x0                   	// #0
    4d08:	mov	x16, #0x1                   	// #1
    4d0c:	mov	w0, #0x0                   	// #0
    4d10:	b	487c <PyInit__ctypes_test@@Base+0x14c0>
    4d14:	mov	x1, #0x1                   	// #1
    4d18:	sub	x2, x1, x2
    4d1c:	cmp	x2, #0x74
    4d20:	b.gt	4d98 <PyInit__ctypes_test@@Base+0x19dc>
    4d24:	cmp	x2, #0x3f
    4d28:	b.le	4e78 <PyInit__ctypes_test@@Base+0x1abc>
    4d2c:	mov	w1, #0x80                  	// #128
    4d30:	sub	w1, w1, w2
    4d34:	cmp	x2, #0x40
    4d38:	sub	w2, w2, #0x40
    4d3c:	lsl	x1, x4, x1
    4d40:	orr	x1, x6, x1
    4d44:	csel	x6, x1, x6, ne  // ne = any
    4d48:	lsr	x2, x4, x2
    4d4c:	cmp	x6, #0x0
    4d50:	cset	x5, ne  // ne = any
    4d54:	orr	x5, x5, x2
    4d58:	ands	x2, x5, #0x7
    4d5c:	b.eq	4eac <PyInit__ctypes_test@@Base+0x1af0>  // b.none
    4d60:	mov	x2, #0x0                   	// #0
    4d64:	and	x11, x11, #0xc00000
    4d68:	orr	w0, w0, #0x10
    4d6c:	cmp	x11, #0x400, lsl #12
    4d70:	b.eq	4fbc <PyInit__ctypes_test@@Base+0x1c00>  // b.none
    4d74:	cmp	x11, #0x800, lsl #12
    4d78:	b.eq	4fd0 <PyInit__ctypes_test@@Base+0x1c14>  // b.none
    4d7c:	cbz	x11, 4f14 <PyInit__ctypes_test@@Base+0x1b58>
    4d80:	tbnz	x2, #51, 4f2c <PyInit__ctypes_test@@Base+0x1b70>
    4d84:	ubfx	x4, x2, #3, #48
    4d88:	extr	x5, x2, x5, #3
    4d8c:	orr	w0, w0, #0x8
    4d90:	mov	w1, #0x0                   	// #0
    4d94:	b	4dc8 <PyInit__ctypes_test@@Base+0x1a0c>
    4d98:	orr	x5, x6, x4
    4d9c:	cbz	x5, 4dbc <PyInit__ctypes_test@@Base+0x1a00>
    4da0:	and	x11, x11, #0xc00000
    4da4:	orr	w0, w0, #0x10
    4da8:	cmp	x11, #0x400, lsl #12
    4dac:	sub	x5, x1, x8
    4db0:	b.eq	4dbc <PyInit__ctypes_test@@Base+0x1a00>  // b.none
    4db4:	cmp	x11, #0x800, lsl #12
    4db8:	csel	x5, x8, xzr, eq  // eq = none
    4dbc:	orr	w0, w0, #0x8
    4dc0:	mov	w1, #0x0                   	// #0
    4dc4:	mov	x4, #0x0                   	// #0
    4dc8:	mov	x3, #0x0                   	// #0
    4dcc:	fmov	d0, x5
    4dd0:	bfxil	x3, x4, #0, #48
    4dd4:	bfi	x3, x1, #48, #15
    4dd8:	bfi	x3, x10, #63, #1
    4ddc:	fmov	v0.d[1], x3
    4de0:	str	q0, [sp, #48]
    4de4:	bl	53c0 <PyInit__ctypes_test@@Base+0x2004>
    4de8:	ldr	q0, [sp, #48]
    4dec:	ldp	x29, x30, [sp], #80
    4df0:	ret
    4df4:	clz	x9, x6
    4df8:	add	x2, x9, #0x31
    4dfc:	add	x9, x9, #0x40
    4e00:	cmp	x2, #0x3c
    4e04:	b.le	4c64 <PyInit__ctypes_test@@Base+0x18a8>
    4e08:	sub	w2, w2, #0x3d
    4e0c:	lsl	x4, x6, x2
    4e10:	mov	x6, #0x0                   	// #0
    4e14:	b	4c80 <PyInit__ctypes_test@@Base+0x18c4>
    4e18:	clz	x3, x1
    4e1c:	add	x4, x3, #0x31
    4e20:	add	x0, x3, #0x40
    4e24:	cmp	x4, #0x3c
    4e28:	b.le	4c04 <PyInit__ctypes_test@@Base+0x1848>
    4e2c:	sub	w4, w4, #0x3d
    4e30:	mov	x5, #0x0                   	// #0
    4e34:	lsl	x7, x1, x4
    4e38:	b	4c20 <PyInit__ctypes_test@@Base+0x1864>
    4e3c:	and	x5, x11, #0xc00000
    4e40:	cmp	x5, #0x400, lsl #12
    4e44:	b.eq	4f40 <PyInit__ctypes_test@@Base+0x1b84>  // b.none
    4e48:	cmp	x5, #0x800, lsl #12
    4e4c:	b.eq	4ed0 <PyInit__ctypes_test@@Base+0x1b14>  // b.none
    4e50:	cbz	x5, 4ec4 <PyInit__ctypes_test@@Base+0x1b08>
    4e54:	mov	x4, #0xffffffffffff        	// #281474976710655
    4e58:	mov	x5, #0xffffffffffffffff    	// #-1
    4e5c:	mov	w2, #0x14                  	// #20
    4e60:	orr	w0, w0, w2
    4e64:	b	4dc8 <PyInit__ctypes_test@@Base+0x1a0c>
    4e68:	mov	x3, x9
    4e6c:	ldp	x19, x20, [sp, #16]
    4e70:	ldp	x21, x22, [sp, #32]
    4e74:	b	4b70 <PyInit__ctypes_test@@Base+0x17b4>
    4e78:	mov	w1, #0x40                  	// #64
    4e7c:	sub	w1, w1, w2
    4e80:	lsr	x3, x6, x2
    4e84:	lsl	x6, x6, x1
    4e88:	cmp	x6, #0x0
    4e8c:	lsl	x5, x4, x1
    4e90:	cset	x1, ne  // ne = any
    4e94:	orr	x5, x5, x3
    4e98:	lsr	x2, x4, x2
    4e9c:	orr	x5, x5, x1
    4ea0:	tst	x5, #0x7
    4ea4:	b.ne	4d64 <PyInit__ctypes_test@@Base+0x19a8>  // b.any
    4ea8:	tbnz	x2, #51, 4fdc <PyInit__ctypes_test@@Base+0x1c20>
    4eac:	ubfx	x4, x2, #3, #48
    4eb0:	extr	x5, x2, x5, #3
    4eb4:	mov	w1, #0x0                   	// #0
    4eb8:	tbz	w11, #11, 4988 <PyInit__ctypes_test@@Base+0x15cc>
    4ebc:	orr	w0, w0, #0x8
    4ec0:	b	4dc8 <PyInit__ctypes_test@@Base+0x1a0c>
    4ec4:	mov	w1, #0x7fff                	// #32767
    4ec8:	mov	x4, #0x0                   	// #0
    4ecc:	b	4e5c <PyInit__ctypes_test@@Base+0x1aa0>
    4ed0:	cmp	x8, #0x0
    4ed4:	mov	w2, #0x7fff                	// #32767
    4ed8:	mov	x4, #0xffffffffffff        	// #281474976710655
    4edc:	csel	w1, w1, w2, eq  // eq = none
    4ee0:	csel	x4, x4, xzr, eq  // eq = none
    4ee4:	csetm	x5, eq  // eq = none
    4ee8:	b	4e5c <PyInit__ctypes_test@@Base+0x1aa0>
    4eec:	and	x1, x6, #0xf
    4ef0:	cmp	x1, #0x4
    4ef4:	b.eq	4ba4 <PyInit__ctypes_test@@Base+0x17e8>  // b.none
    4ef8:	adds	x6, x6, #0x4
    4efc:	cinc	x4, x4, cs  // cs = hs, nlast
    4f00:	b	4ba4 <PyInit__ctypes_test@@Base+0x17e8>
    4f04:	cbz	x8, 4ba4 <PyInit__ctypes_test@@Base+0x17e8>
    4f08:	adds	x6, x6, #0x8
    4f0c:	cinc	x4, x4, cs  // cs = hs, nlast
    4f10:	b	4ba4 <PyInit__ctypes_test@@Base+0x17e8>
    4f14:	and	x1, x5, #0xf
    4f18:	cmp	x1, #0x4
    4f1c:	b.eq	4f28 <PyInit__ctypes_test@@Base+0x1b6c>  // b.none
    4f20:	adds	x5, x5, #0x4
    4f24:	cinc	x2, x2, cs  // cs = hs, nlast
    4f28:	tbz	x2, #51, 4d84 <PyInit__ctypes_test@@Base+0x19c8>
    4f2c:	orr	w0, w0, #0x8
    4f30:	mov	w1, #0x1                   	// #1
    4f34:	mov	x4, #0x0                   	// #0
    4f38:	mov	x5, #0x0                   	// #0
    4f3c:	b	4dc8 <PyInit__ctypes_test@@Base+0x1a0c>
    4f40:	cmp	x8, #0x0
    4f44:	mov	w2, #0x7fff                	// #32767
    4f48:	mov	x4, #0xffffffffffff        	// #281474976710655
    4f4c:	csel	w1, w1, w2, ne  // ne = any
    4f50:	csel	x4, x4, xzr, ne  // ne = any
    4f54:	csetm	x5, ne  // ne = any
    4f58:	b	4e5c <PyInit__ctypes_test@@Base+0x1aa0>
    4f5c:	cbnz	x8, 4ba4 <PyInit__ctypes_test@@Base+0x17e8>
    4f60:	b	4f08 <PyInit__ctypes_test@@Base+0x1b4c>
    4f64:	mov	x4, #0x2                   	// #2
    4f68:	cmp	x1, #0xf
    4f6c:	b.ne	4f90 <PyInit__ctypes_test@@Base+0x1bd4>  // b.any
    4f70:	tbz	x7, #47, 4fa8 <PyInit__ctypes_test@@Base+0x1bec>
    4f74:	tbnz	x2, #47, 4fa8 <PyInit__ctypes_test@@Base+0x1bec>
    4f78:	orr	x4, x2, #0x800000000000
    4f7c:	mov	w10, w15
    4f80:	and	x4, x4, #0xffffffffffff
    4f84:	mov	x5, x6
    4f88:	mov	w1, #0x7fff                	// #32767
    4f8c:	b	4988 <PyInit__ctypes_test@@Base+0x15cc>
    4f90:	cmp	x1, #0xb
    4f94:	b.ne	48e0 <PyInit__ctypes_test@@Base+0x1524>  // b.any
    4f98:	mov	x7, x2
    4f9c:	mov	x5, x6
    4fa0:	mov	x16, x4
    4fa4:	b	48e8 <PyInit__ctypes_test@@Base+0x152c>
    4fa8:	orr	x4, x7, #0x800000000000
    4fac:	mov	w10, w12
    4fb0:	and	x4, x4, #0xffffffffffff
    4fb4:	mov	w1, #0x7fff                	// #32767
    4fb8:	b	4988 <PyInit__ctypes_test@@Base+0x15cc>
    4fbc:	cbnz	x8, 4f28 <PyInit__ctypes_test@@Base+0x1b6c>
    4fc0:	adds	x5, x5, #0x8
    4fc4:	cinc	x2, x2, cs  // cs = hs, nlast
    4fc8:	tbnz	x2, #51, 4f2c <PyInit__ctypes_test@@Base+0x1b70>
    4fcc:	b	4d84 <PyInit__ctypes_test@@Base+0x19c8>
    4fd0:	cbnz	x8, 4fc0 <PyInit__ctypes_test@@Base+0x1c04>
    4fd4:	tbnz	x2, #51, 4f2c <PyInit__ctypes_test@@Base+0x1b70>
    4fd8:	b	4d84 <PyInit__ctypes_test@@Base+0x19c8>
    4fdc:	orr	w0, w0, #0x10
    4fe0:	b	4f2c <PyInit__ctypes_test@@Base+0x1b70>
    4fe4:	mov	x2, x4
    4fe8:	mov	x4, #0x3                   	// #3
    4fec:	b	4f68 <PyInit__ctypes_test@@Base+0x1bac>
    4ff0:	mov	w10, w15
    4ff4:	mov	x8, x13
    4ff8:	b	4904 <PyInit__ctypes_test@@Base+0x1548>
    4ffc:	nop
    5000:	stp	x29, x30, [sp, #-48]!
    5004:	mov	x29, sp
    5008:	str	x19, [sp, #16]
    500c:	str	q0, [sp, #32]
    5010:	ldp	x2, x0, [sp, #32]
    5014:	mrs	x1, fpcr
    5018:	ubfx	x19, x0, #48, #15
    501c:	mov	x3, #0x3ffe                	// #16382
    5020:	ubfx	x4, x0, #0, #48
    5024:	cmp	x19, x3
    5028:	b.gt	5050 <PyInit__ctypes_test@@Base+0x1c94>
    502c:	cbnz	x19, 50f0 <PyInit__ctypes_test@@Base+0x1d34>
    5030:	orr	x2, x4, x2
    5034:	cbz	x2, 5040 <PyInit__ctypes_test@@Base+0x1c84>
    5038:	mov	w0, #0x10                  	// #16
    503c:	bl	53c0 <PyInit__ctypes_test@@Base+0x2004>
    5040:	mov	x0, x19
    5044:	ldr	x19, [sp, #16]
    5048:	ldp	x29, x30, [sp], #48
    504c:	ret
    5050:	lsr	x1, x0, #63
    5054:	and	w3, w1, #0xff
    5058:	mov	x1, #0x403d                	// #16445
    505c:	cmp	x19, x1
    5060:	b.le	5098 <PyInit__ctypes_test@@Base+0x1cdc>
    5064:	mov	x0, #0x403e                	// #16446
    5068:	and	x5, x3, #0xff
    506c:	cmp	x19, x0
    5070:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    5074:	csel	w1, w3, wzr, eq  // eq = none
    5078:	add	x19, x5, x0
    507c:	cbz	w1, 5100 <PyInit__ctypes_test@@Base+0x1d44>
    5080:	extr	x4, x4, x2, #49
    5084:	cbnz	x4, 5100 <PyInit__ctypes_test@@Base+0x1d44>
    5088:	cmp	xzr, x2, lsl #15
    508c:	b.eq	5040 <PyInit__ctypes_test@@Base+0x1c84>  // b.none
    5090:	mov	w0, #0x10                  	// #16
    5094:	b	503c <PyInit__ctypes_test@@Base+0x1c80>
    5098:	mov	x5, #0x406f                	// #16495
    509c:	sub	x1, x5, x19
    50a0:	mov	x0, x19
    50a4:	cmp	x1, #0x3f
    50a8:	orr	x19, x4, #0x1000000000000
    50ac:	b.le	510c <PyInit__ctypes_test@@Base+0x1d50>
    50b0:	mov	w4, #0xffffc011            	// #-16367
    50b4:	add	w4, w0, w4
    50b8:	cmp	x1, #0x40
    50bc:	mov	w1, #0x402f                	// #16431
    50c0:	sub	w0, w1, w0
    50c4:	lsl	x1, x19, x4
    50c8:	orr	x1, x2, x1
    50cc:	csel	x2, x1, x2, ne  // ne = any
    50d0:	lsr	x19, x19, x0
    50d4:	cmp	x2, #0x0
    50d8:	cset	w0, ne  // ne = any
    50dc:	cmp	w3, #0x0
    50e0:	cneg	x19, x19, ne  // ne = any
    50e4:	cbz	w0, 5040 <PyInit__ctypes_test@@Base+0x1c84>
    50e8:	mov	w0, #0x10                  	// #16
    50ec:	b	503c <PyInit__ctypes_test@@Base+0x1c80>
    50f0:	mov	x19, #0x0                   	// #0
    50f4:	mov	w0, #0x10                  	// #16
    50f8:	bl	53c0 <PyInit__ctypes_test@@Base+0x2004>
    50fc:	b	5040 <PyInit__ctypes_test@@Base+0x1c84>
    5100:	mov	w0, #0x1                   	// #1
    5104:	bl	53c0 <PyInit__ctypes_test@@Base+0x2004>
    5108:	b	5040 <PyInit__ctypes_test@@Base+0x1c84>
    510c:	mov	w6, #0xffffbfd1            	// #-16431
    5110:	add	w4, w0, w6
    5114:	sub	w0, w5, w0
    5118:	lsl	x1, x2, x4
    511c:	cmp	x1, #0x0
    5120:	lsr	x2, x2, x0
    5124:	cset	w0, ne  // ne = any
    5128:	lsl	x19, x19, x4
    512c:	orr	x19, x2, x19
    5130:	b	50dc <PyInit__ctypes_test@@Base+0x1d20>
    5134:	nop
    5138:	mrs	x0, fpcr
    513c:	fmov	w0, s0
    5140:	ubfx	x2, x0, #23, #8
    5144:	and	x1, x0, #0x7fffff
    5148:	add	x3, x2, #0x1
    514c:	ubfx	x5, x0, #0, #23
    5150:	tst	x3, #0xfe
    5154:	lsr	w0, w0, #31
    5158:	b.eq	5188 <PyInit__ctypes_test@@Base+0x1dcc>  // b.none
    515c:	lsl	x1, x1, #25
    5160:	mov	w3, #0x3f80                	// #16256
    5164:	add	w4, w2, w3
    5168:	mov	x3, #0x0                   	// #0
    516c:	bfxil	x3, x1, #0, #48
    5170:	mov	x2, #0x0                   	// #0
    5174:	fmov	d0, x2
    5178:	bfi	x3, x4, #48, #15
    517c:	bfi	x3, x0, #63, #1
    5180:	fmov	v0.d[1], x3
    5184:	ret
    5188:	cbnz	w2, 51b8 <PyInit__ctypes_test@@Base+0x1dfc>
    518c:	cbnz	x1, 5204 <PyInit__ctypes_test@@Base+0x1e48>
    5190:	mov	x1, #0x0                   	// #0
    5194:	mov	x3, #0x0                   	// #0
    5198:	bfxil	x3, x1, #0, #48
    519c:	mov	w4, #0x0                   	// #0
    51a0:	mov	x2, #0x0                   	// #0
    51a4:	fmov	d0, x2
    51a8:	bfi	x3, x4, #48, #15
    51ac:	bfi	x3, x0, #63, #1
    51b0:	fmov	v0.d[1], x3
    51b4:	ret
    51b8:	cbz	x1, 5240 <PyInit__ctypes_test@@Base+0x1e84>
    51bc:	lsl	x1, x1, #25
    51c0:	mov	x3, #0x0                   	// #0
    51c4:	orr	x1, x1, #0x800000000000
    51c8:	mov	x2, #0x0                   	// #0
    51cc:	fmov	d0, x2
    51d0:	bfxil	x3, x1, #0, #48
    51d4:	orr	x3, x3, #0x7fff000000000000
    51d8:	bfi	x3, x0, #63, #1
    51dc:	fmov	v0.d[1], x3
    51e0:	tbnz	w5, #22, 5268 <PyInit__ctypes_test@@Base+0x1eac>
    51e4:	stp	x29, x30, [sp, #-32]!
    51e8:	mov	w0, #0x1                   	// #1
    51ec:	mov	x29, sp
    51f0:	str	q0, [sp, #16]
    51f4:	bl	53c0 <PyInit__ctypes_test@@Base+0x2004>
    51f8:	ldr	q0, [sp, #16]
    51fc:	ldp	x29, x30, [sp], #32
    5200:	ret
    5204:	clz	x4, x1
    5208:	mov	w2, #0x3fa9                	// #16297
    520c:	sub	w3, w4, #0xf
    5210:	sub	w2, w2, w4
    5214:	and	w4, w2, #0x7fff
    5218:	mov	x2, #0x0                   	// #0
    521c:	lsl	x1, x1, x3
    5220:	and	x1, x1, #0xffffffffffff
    5224:	mov	x3, #0x0                   	// #0
    5228:	fmov	d0, x2
    522c:	bfxil	x3, x1, #0, #48
    5230:	bfi	x3, x4, #48, #15
    5234:	bfi	x3, x0, #63, #1
    5238:	fmov	v0.d[1], x3
    523c:	ret
    5240:	mov	x1, #0x0                   	// #0
    5244:	mov	x3, #0x0                   	// #0
    5248:	bfxil	x3, x1, #0, #48
    524c:	mov	w4, #0x7fff                	// #32767
    5250:	mov	x2, #0x0                   	// #0
    5254:	fmov	d0, x2
    5258:	bfi	x3, x4, #48, #15
    525c:	bfi	x3, x0, #63, #1
    5260:	fmov	v0.d[1], x3
    5264:	ret
    5268:	ret
    526c:	nop
    5270:	mrs	x0, fpcr
    5274:	fmov	x0, d0
    5278:	ubfx	x1, x0, #52, #11
    527c:	lsr	x4, x0, #63
    5280:	add	x2, x1, #0x1
    5284:	and	w4, w4, #0xff
    5288:	tst	x2, #0x7fe
    528c:	ubfx	x0, x0, #0, #52
    5290:	b.eq	52c4 <PyInit__ctypes_test@@Base+0x1f08>  // b.none
    5294:	lsr	x5, x0, #4
    5298:	mov	x3, #0x0                   	// #0
    529c:	and	x5, x5, #0xffffffffffff
    52a0:	mov	w2, #0x3c00                	// #15360
    52a4:	add	w1, w1, w2
    52a8:	lsl	x0, x0, #60
    52ac:	bfxil	x3, x5, #0, #48
    52b0:	fmov	d0, x0
    52b4:	bfi	x3, x1, #48, #15
    52b8:	bfi	x3, x4, #63, #1
    52bc:	fmov	v0.d[1], x3
    52c0:	ret
    52c4:	cbnz	x1, 5318 <PyInit__ctypes_test@@Base+0x1f5c>
    52c8:	cbz	x0, 5364 <PyInit__ctypes_test@@Base+0x1fa8>
    52cc:	clz	x2, x0
    52d0:	cmp	w2, #0xe
    52d4:	b.gt	53b0 <PyInit__ctypes_test@@Base+0x1ff4>
    52d8:	add	w1, w2, #0x31
    52dc:	mov	w5, #0xf                   	// #15
    52e0:	sub	w5, w5, w2
    52e4:	lsr	x5, x0, x5
    52e8:	lsl	x0, x0, x1
    52ec:	and	x5, x5, #0xffffffffffff
    52f0:	mov	w1, #0x3c0c                	// #15372
    52f4:	mov	x3, #0x0                   	// #0
    52f8:	sub	w1, w1, w2
    52fc:	and	w1, w1, #0x7fff
    5300:	bfxil	x3, x5, #0, #48
    5304:	fmov	d0, x0
    5308:	bfi	x3, x1, #48, #15
    530c:	bfi	x3, x4, #63, #1
    5310:	fmov	v0.d[1], x3
    5314:	ret
    5318:	cbz	x0, 5388 <PyInit__ctypes_test@@Base+0x1fcc>
    531c:	lsr	x1, x0, #4
    5320:	mov	x3, #0x0                   	// #0
    5324:	orr	x1, x1, #0x800000000000
    5328:	lsl	x2, x0, #60
    532c:	fmov	d0, x2
    5330:	bfxil	x3, x1, #0, #48
    5334:	orr	x3, x3, #0x7fff000000000000
    5338:	bfi	x3, x4, #63, #1
    533c:	fmov	v0.d[1], x3
    5340:	tbnz	x0, #51, 53ac <PyInit__ctypes_test@@Base+0x1ff0>
    5344:	stp	x29, x30, [sp, #-32]!
    5348:	mov	w0, #0x1                   	// #1
    534c:	mov	x29, sp
    5350:	str	q0, [sp, #16]
    5354:	bl	53c0 <PyInit__ctypes_test@@Base+0x2004>
    5358:	ldr	q0, [sp, #16]
    535c:	ldp	x29, x30, [sp], #32
    5360:	ret
    5364:	mov	x5, #0x0                   	// #0
    5368:	mov	x3, #0x0                   	// #0
    536c:	bfxil	x3, x5, #0, #48
    5370:	mov	w1, #0x0                   	// #0
    5374:	fmov	d0, x0
    5378:	bfi	x3, x1, #48, #15
    537c:	bfi	x3, x4, #63, #1
    5380:	fmov	v0.d[1], x3
    5384:	ret
    5388:	mov	x5, #0x0                   	// #0
    538c:	mov	x3, #0x0                   	// #0
    5390:	bfxil	x3, x5, #0, #48
    5394:	mov	w1, #0x7fff                	// #32767
    5398:	fmov	d0, x0
    539c:	bfi	x3, x1, #48, #15
    53a0:	bfi	x3, x4, #63, #1
    53a4:	fmov	v0.d[1], x3
    53a8:	ret
    53ac:	ret
    53b0:	sub	w5, w2, #0xf
    53b4:	lsl	x5, x0, x5
    53b8:	mov	x0, #0x0                   	// #0
    53bc:	b	52ec <PyInit__ctypes_test@@Base+0x1f30>
    53c0:	tbz	w0, #0, 53d0 <PyInit__ctypes_test@@Base+0x2014>
    53c4:	movi	v1.2s, #0x0
    53c8:	fdiv	s0, s1, s1
    53cc:	mrs	x1, fpsr
    53d0:	tbz	w0, #1, 53e4 <PyInit__ctypes_test@@Base+0x2028>
    53d4:	fmov	s1, #1.000000000000000000e+00
    53d8:	movi	v2.2s, #0x0
    53dc:	fdiv	s0, s1, s2
    53e0:	mrs	x1, fpsr
    53e4:	tbz	w0, #2, 5404 <PyInit__ctypes_test@@Base+0x2048>
    53e8:	mov	w2, #0xc5ae                	// #50606
    53ec:	mov	w1, #0x7f7fffff            	// #2139095039
    53f0:	movk	w2, #0x749d, lsl #16
    53f4:	fmov	s1, w1
    53f8:	fmov	s2, w2
    53fc:	fadd	s0, s1, s2
    5400:	mrs	x1, fpsr
    5404:	tbz	w0, #3, 5414 <PyInit__ctypes_test@@Base+0x2058>
    5408:	movi	v1.2s, #0x80, lsl #16
    540c:	fmul	s0, s1, s1
    5410:	mrs	x1, fpsr
    5414:	tbz	w0, #4, 542c <PyInit__ctypes_test@@Base+0x2070>
    5418:	mov	w0, #0x7f7fffff            	// #2139095039
    541c:	fmov	s2, #1.000000000000000000e+00
    5420:	fmov	s1, w0
    5424:	fsub	s0, s1, s2
    5428:	mrs	x0, fpsr
    542c:	ret

Disassembly of section .fini:

0000000000005430 <.fini>:
    5430:	stp	x29, x30, [sp, #-16]!
    5434:	mov	x29, sp
    5438:	ldp	x29, x30, [sp], #16
    543c:	ret
