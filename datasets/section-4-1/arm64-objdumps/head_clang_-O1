
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//head_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000a20 <_init>:
 a20:	stp	x29, x30, [sp, #-16]!
 a24:	mov	x29, sp
 a28:	bl	b70 <call_weak_fn>
 a2c:	ldp	x29, x30, [sp], #16
 a30:	ret

Disassembly of section .plt:

0000000000000a40 <.plt>:
 a40:	stp	x16, x30, [sp, #-16]!
 a44:	adrp	x16, 11000 <__FRAME_END__+0xff24>
 a48:	ldr	x17, [x16, #4088]
 a4c:	add	x16, x16, #0xff8
 a50:	br	x17
 a54:	nop
 a58:	nop
 a5c:	nop

0000000000000a60 <builtin_error@plt>:
 a60:	adrp	x16, 12000 <builtin_error>
 a64:	ldr	x17, [x16]
 a68:	add	x16, x16, #0x0
 a6c:	br	x17

0000000000000a70 <__cxa_finalize@plt>:
 a70:	adrp	x16, 12000 <builtin_error>
 a74:	ldr	x17, [x16, #8]
 a78:	add	x16, x16, #0x8
 a7c:	br	x17

0000000000000a80 <make_bare_word@plt>:
 a80:	adrp	x16, 12000 <builtin_error>
 a84:	ldr	x17, [x16, #16]
 a88:	add	x16, x16, #0x10
 a8c:	br	x17

0000000000000a90 <fclose@plt>:
 a90:	adrp	x16, 12000 <builtin_error>
 a94:	ldr	x17, [x16, #24]
 a98:	add	x16, x16, #0x18
 a9c:	br	x17

0000000000000aa0 <atoi@plt>:
 aa0:	adrp	x16, 12000 <builtin_error>
 aa4:	ldr	x17, [x16, #32]
 aa8:	add	x16, x16, #0x20
 aac:	br	x17

0000000000000ab0 <fopen@plt>:
 ab0:	adrp	x16, 12000 <builtin_error>
 ab4:	ldr	x17, [x16, #40]
 ab8:	add	x16, x16, #0x28
 abc:	br	x17

0000000000000ac0 <builtin_help@plt>:
 ac0:	adrp	x16, 12000 <builtin_error>
 ac4:	ldr	x17, [x16, #48]
 ac8:	add	x16, x16, #0x30
 acc:	br	x17

0000000000000ad0 <builtin_usage@plt>:
 ad0:	adrp	x16, 12000 <builtin_error>
 ad4:	ldr	x17, [x16, #56]
 ad8:	add	x16, x16, #0x38
 adc:	br	x17

0000000000000ae0 <getc@plt>:
 ae0:	adrp	x16, 12000 <builtin_error>
 ae4:	ldr	x17, [x16, #64]
 ae8:	add	x16, x16, #0x40
 aec:	br	x17

0000000000000af0 <strerror@plt>:
 af0:	adrp	x16, 12000 <builtin_error>
 af4:	ldr	x17, [x16, #72]
 af8:	add	x16, x16, #0x48
 afc:	br	x17

0000000000000b00 <__gmon_start__@plt>:
 b00:	adrp	x16, 12000 <builtin_error>
 b04:	ldr	x17, [x16, #80]
 b08:	add	x16, x16, #0x50
 b0c:	br	x17

0000000000000b10 <internal_getopt@plt>:
 b10:	adrp	x16, 12000 <builtin_error>
 b14:	ldr	x17, [x16, #88]
 b18:	add	x16, x16, #0x58
 b1c:	br	x17

0000000000000b20 <reset_internal_getopt@plt>:
 b20:	adrp	x16, 12000 <builtin_error>
 b24:	ldr	x17, [x16, #96]
 b28:	add	x16, x16, #0x60
 b2c:	br	x17

0000000000000b30 <printf@plt>:
 b30:	adrp	x16, 12000 <builtin_error>
 b34:	ldr	x17, [x16, #104]
 b38:	add	x16, x16, #0x68
 b3c:	br	x17

0000000000000b40 <__errno_location@plt>:
 b40:	adrp	x16, 12000 <builtin_error>
 b44:	ldr	x17, [x16, #112]
 b48:	add	x16, x16, #0x70
 b4c:	br	x17

0000000000000b50 <make_word_list@plt>:
 b50:	adrp	x16, 12000 <builtin_error>
 b54:	ldr	x17, [x16, #120]
 b58:	add	x16, x16, #0x78
 b5c:	br	x17

0000000000000b60 <putchar@plt>:
 b60:	adrp	x16, 12000 <builtin_error>
 b64:	ldr	x17, [x16, #128]
 b68:	add	x16, x16, #0x80
 b6c:	br	x17

Disassembly of section .text:

0000000000000b70 <call_weak_fn>:
 b70:	adrp	x0, 11000 <__FRAME_END__+0xff24>
 b74:	ldr	x0, [x0, #4040]
 b78:	cbz	x0, b80 <call_weak_fn+0x10>
 b7c:	b	b00 <__gmon_start__@plt>
 b80:	ret
 b84:	nop

0000000000000b88 <deregister_tm_clones>:
 b88:	adrp	x0, 12000 <builtin_error>
 b8c:	add	x0, x0, #0xf0
 b90:	adrp	x1, 12000 <builtin_error>
 b94:	add	x1, x1, #0xf0
 b98:	cmp	x1, x0
 b9c:	b.eq	bb4 <deregister_tm_clones+0x2c>  // b.none
 ba0:	adrp	x1, 11000 <__FRAME_END__+0xff24>
 ba4:	ldr	x1, [x1, #4016]
 ba8:	cbz	x1, bb4 <deregister_tm_clones+0x2c>
 bac:	mov	x16, x1
 bb0:	br	x16
 bb4:	ret

0000000000000bb8 <register_tm_clones>:
 bb8:	adrp	x0, 12000 <builtin_error>
 bbc:	add	x0, x0, #0xf0
 bc0:	adrp	x1, 12000 <builtin_error>
 bc4:	add	x1, x1, #0xf0
 bc8:	sub	x1, x1, x0
 bcc:	lsr	x2, x1, #63
 bd0:	add	x1, x2, x1, asr #3
 bd4:	cmp	xzr, x1, asr #1
 bd8:	asr	x1, x1, #1
 bdc:	b.eq	bf4 <register_tm_clones+0x3c>  // b.none
 be0:	adrp	x2, 11000 <__FRAME_END__+0xff24>
 be4:	ldr	x2, [x2, #4064]
 be8:	cbz	x2, bf4 <register_tm_clones+0x3c>
 bec:	mov	x16, x2
 bf0:	br	x16
 bf4:	ret

0000000000000bf8 <__do_global_dtors_aux>:
 bf8:	stp	x29, x30, [sp, #-32]!
 bfc:	mov	x29, sp
 c00:	str	x19, [sp, #16]
 c04:	adrp	x19, 12000 <builtin_error>
 c08:	ldrb	w0, [x19, #240]
 c0c:	cbnz	w0, c34 <__do_global_dtors_aux+0x3c>
 c10:	adrp	x0, 11000 <__FRAME_END__+0xff24>
 c14:	ldr	x0, [x0, #4024]
 c18:	cbz	x0, c28 <__do_global_dtors_aux+0x30>
 c1c:	adrp	x0, 12000 <builtin_error>
 c20:	ldr	x0, [x0, #136]
 c24:	bl	a70 <__cxa_finalize@plt>
 c28:	bl	b88 <deregister_tm_clones>
 c2c:	mov	w0, #0x1                   	// #1
 c30:	strb	w0, [x19, #240]
 c34:	ldr	x19, [sp, #16]
 c38:	ldp	x29, x30, [sp], #32
 c3c:	ret

0000000000000c40 <frame_dummy>:
 c40:	b	bb8 <register_tm_clones>

0000000000000c44 <head_builtin>:
 c44:	stp	x29, x30, [sp, #-96]!
 c48:	stp	x28, x27, [sp, #16]
 c4c:	stp	x26, x25, [sp, #32]
 c50:	stp	x24, x23, [sp, #48]
 c54:	stp	x22, x21, [sp, #64]
 c58:	stp	x20, x19, [sp, #80]
 c5c:	mov	x29, sp
 c60:	mov	x20, x0
 c64:	bl	df4 <munge_list>
 c68:	bl	b20 <reset_internal_getopt@plt>
 c6c:	adrp	x23, 11000 <__FRAME_END__+0xff24>
 c70:	ldr	x23, [x23, #4048]
 c74:	adrp	x21, 0 <_init-0xa20>
 c78:	mov	w19, #0xa                   	// #10
 c7c:	add	x21, x21, #0xf0c
 c80:	mov	x0, x20
 c84:	mov	x1, x21
 c88:	bl	b10 <internal_getopt@plt>
 c8c:	cmp	w0, #0x6e
 c90:	b.ne	cc4 <head_builtin+0x80>  // b.any
 c94:	ldr	x22, [x23]
 c98:	mov	x0, x22
 c9c:	bl	aa0 <atoi@plt>
 ca0:	mov	w19, w0
 ca4:	cmp	w0, #0x0
 ca8:	b.gt	c80 <head_builtin+0x3c>
 cac:	adrp	x0, 0 <_init-0xa20>
 cb0:	add	x0, x0, #0xf0f
 cb4:	mov	x1, x22
 cb8:	bl	a60 <builtin_error@plt>
 cbc:	mov	w23, #0x102                 	// #258
 cc0:	b	dd4 <head_builtin+0x190>
 cc4:	cmn	w0, #0x63
 cc8:	b.eq	da4 <head_builtin+0x160>  // b.none
 ccc:	cmn	w0, #0x1
 cd0:	b.ne	db0 <head_builtin+0x16c>  // b.any
 cd4:	adrp	x8, 11000 <__FRAME_END__+0xff24>
 cd8:	ldr	x8, [x8, #4056]
 cdc:	ldr	x21, [x8]
 ce0:	cbz	x21, dbc <head_builtin+0x178>
 ce4:	adrp	x20, 0 <_init-0xa20>
 ce8:	adrp	x26, 0 <_init-0xa20>
 cec:	adrp	x27, 0 <_init-0xa20>
 cf0:	adrp	x22, 0 <_init-0xa20>
 cf4:	mov	w23, wzr
 cf8:	mov	w28, #0x1                   	// #1
 cfc:	add	x20, x20, #0xf22
 d00:	add	x26, x26, #0xf38
 d04:	add	x27, x27, #0xf37
 d08:	add	x22, x22, #0xf2b
 d0c:	mov	x25, x21
 d10:	b	d44 <head_builtin+0x100>
 d14:	ldr	x8, [x25, #8]
 d18:	ldr	x24, [x8]
 d1c:	bl	b40 <__errno_location@plt>
 d20:	ldr	w0, [x0]
 d24:	bl	af0 <strerror@plt>
 d28:	mov	x2, x0
 d2c:	adrp	x0, 0 <_init-0xa20>
 d30:	add	x0, x0, #0xf24
 d34:	mov	x1, x24
 d38:	bl	a60 <builtin_error@plt>
 d3c:	ldr	x25, [x25]
 d40:	cbz	x25, dd4 <head_builtin+0x190>
 d44:	ldr	x8, [x25, #8]
 d48:	mov	x1, x20
 d4c:	ldr	x0, [x8]
 d50:	bl	ab0 <fopen@plt>
 d54:	cbz	x0, d14 <head_builtin+0xd0>
 d58:	ldr	x8, [x21]
 d5c:	mov	x24, x0
 d60:	cbz	x8, d80 <head_builtin+0x13c>
 d64:	ldr	x8, [x25, #8]
 d68:	cmp	w28, #0x0
 d6c:	csel	x1, x27, x26, eq  // eq = none
 d70:	mov	x0, x22
 d74:	ldr	x2, [x8]
 d78:	bl	b30 <printf@plt>
 d7c:	mov	w28, wzr
 d80:	mov	x0, x24
 d84:	mov	w1, w19
 d88:	bl	e78 <file_head>
 d8c:	mov	w23, w0
 d90:	mov	x0, x24
 d94:	bl	a90 <fclose@plt>
 d98:	ldr	x25, [x25]
 d9c:	cbnz	x25, d44 <head_builtin+0x100>
 da0:	b	dd4 <head_builtin+0x190>
 da4:	bl	ac0 <builtin_help@plt>
 da8:	mov	w23, #0x102                 	// #258
 dac:	b	dd4 <head_builtin+0x190>
 db0:	bl	ad0 <builtin_usage@plt>
 db4:	mov	w23, #0x102                 	// #258
 db8:	b	dd4 <head_builtin+0x190>
 dbc:	adrp	x8, 11000 <__FRAME_END__+0xff24>
 dc0:	ldr	x8, [x8, #4032]
 dc4:	mov	w1, w19
 dc8:	ldr	x0, [x8]
 dcc:	bl	e78 <file_head>
 dd0:	mov	w23, w0
 dd4:	mov	w0, w23
 dd8:	ldp	x20, x19, [sp, #80]
 ddc:	ldp	x22, x21, [sp, #64]
 de0:	ldp	x24, x23, [sp, #48]
 de4:	ldp	x26, x25, [sp, #32]
 de8:	ldp	x28, x27, [sp, #16]
 dec:	ldp	x29, x30, [sp], #96
 df0:	ret

0000000000000df4 <munge_list>:
 df4:	stp	x29, x30, [sp, #-32]!
 df8:	stp	x20, x19, [sp, #16]
 dfc:	mov	x29, sp
 e00:	cbz	x0, e6c <munge_list+0x78>
 e04:	mov	x19, x0
 e08:	mov	w20, #0x6e                  	// #110
 e0c:	ldr	x8, [x19, #8]
 e10:	ldr	x0, [x8]
 e14:	ldrb	w8, [x0]
 e18:	cmp	w8, #0x2d
 e1c:	b.ne	e6c <munge_list+0x78>  // b.any
 e20:	ldrb	w8, [x0, #1]!
 e24:	cmp	w8, #0x2d
 e28:	b.eq	e6c <munge_list+0x78>  // b.none
 e2c:	sub	w8, w8, #0x30
 e30:	and	w8, w8, #0xff
 e34:	cmp	w8, #0x9
 e38:	b.hi	e6c <munge_list+0x78>  // b.pmore
 e3c:	bl	a80 <make_bare_word@plt>
 e40:	ldr	x1, [x19]
 e44:	bl	b50 <make_word_list@plt>
 e48:	ldr	x8, [x19, #8]
 e4c:	ldr	x8, [x8]
 e50:	strb	w20, [x8, #1]
 e54:	ldr	x8, [x19, #8]
 e58:	ldr	x8, [x8]
 e5c:	strb	wzr, [x8, #2]
 e60:	str	x0, [x19]
 e64:	ldr	x19, [x0]
 e68:	cbnz	x19, e0c <munge_list+0x18>
 e6c:	ldp	x20, x19, [sp, #16]
 e70:	ldp	x29, x30, [sp], #32
 e74:	ret

0000000000000e78 <file_head>:
 e78:	stp	x29, x30, [sp, #-48]!
 e7c:	str	x21, [sp, #16]
 e80:	stp	x20, x19, [sp, #32]
 e84:	mov	x29, sp
 e88:	cbz	w1, ec4 <file_head+0x4c>
 e8c:	mov	w19, w1
 e90:	mov	x20, x0
 e94:	sub	w19, w19, #0x1
 e98:	mov	x0, x20
 e9c:	bl	ae0 <getc@plt>
 ea0:	cmn	w0, #0x1
 ea4:	b.eq	ec0 <file_head+0x48>  // b.none
 ea8:	mov	w21, w0
 eac:	bl	b60 <putchar@plt>
 eb0:	cmn	w0, #0x1
 eb4:	b.eq	ecc <file_head+0x54>  // b.none
 eb8:	cmp	w21, #0xa
 ebc:	b.ne	e98 <file_head+0x20>  // b.any
 ec0:	cbnz	w19, e94 <file_head+0x1c>
 ec4:	mov	w0, wzr
 ec8:	b	eec <file_head+0x74>
 ecc:	bl	b40 <__errno_location@plt>
 ed0:	ldr	w0, [x0]
 ed4:	bl	af0 <strerror@plt>
 ed8:	mov	x1, x0
 edc:	adrp	x0, 1000 <_fini+0x104>
 ee0:	add	x0, x0, #0x26
 ee4:	bl	a60 <builtin_error@plt>
 ee8:	mov	w0, #0x1                   	// #1
 eec:	ldp	x20, x19, [sp, #32]
 ef0:	ldr	x21, [sp, #16]
 ef4:	ldp	x29, x30, [sp], #48
 ef8:	ret

Disassembly of section .fini:

0000000000000efc <_fini>:
 efc:	stp	x29, x30, [sp, #-16]!
 f00:	mov	x29, sp
 f04:	ldp	x29, x30, [sp], #16
 f08:	ret
