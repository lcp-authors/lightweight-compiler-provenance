
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//fshelp.module_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <pop_element>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x1, x0
   8:	mov	x29, sp
   c:	str	x19, [sp, #16]
  10:	ldr	x19, [x0, #24]
  14:	ldr	x0, [x19]
  18:	str	x0, [x1, #24]
  1c:	ldr	x1, [x1, #8]
  20:	ldr	x0, [x19, #8]
  24:	cmp	x0, x1
  28:	b.eq	30 <pop_element+0x30>  // b.none
  2c:	bl	0 <grub_free>
  30:	mov	x0, x19
  34:	ldr	x19, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	b	0 <grub_free>

0000000000000040 <free_stack>:
  40:	stp	x29, x30, [sp, #-32]!
  44:	mov	x29, sp
  48:	str	x19, [sp, #16]
  4c:	mov	x19, x0
  50:	ldr	x0, [x19, #24]
  54:	cbnz	x0, 64 <free_stack+0x24>
  58:	ldr	x19, [sp, #16]
  5c:	ldp	x29, x30, [sp], #32
  60:	ret
  64:	mov	x0, x19
  68:	bl	0 <pop_element>
  6c:	b	50 <free_stack+0x10>

0000000000000070 <find_file_iter>:
  70:	stp	x29, x30, [sp, #-48]!
  74:	mov	x29, sp
  78:	stp	x19, x20, [sp, #16]
  7c:	str	x21, [sp, #32]
  80:	mov	x21, x2
  84:	cbnz	w1, a4 <find_file_iter+0x34>
  88:	mov	x0, x21
  8c:	bl	0 <grub_free>
  90:	mov	w0, #0x0                   	// #0
  94:	ldp	x19, x20, [sp, #16]
  98:	ldr	x21, [sp, #32]
  9c:	ldp	x29, x30, [sp], #48
  a0:	ret
  a4:	mov	x6, x0
  a8:	mov	w19, w1
  ac:	mov	x20, x3
  b0:	ldr	x0, [x3]
  b4:	tbnz	w19, #8, c8 <find_file_iter+0x58>
  b8:	mov	x1, x6
  bc:	bl	0 <grub_strcmp>
  c0:	cbz	w0, 130 <find_file_iter+0xc0>
  c4:	b	88 <find_file_iter+0x18>
  c8:	mov	x1, #0x0                   	// #0
  cc:	ldrb	w4, [x0, x1]
  d0:	ldrb	w5, [x6, x1]
  d4:	sub	w3, w4, #0x41
  d8:	sub	w2, w5, #0x41
  dc:	cbz	w4, 110 <find_file_iter+0xa0>
  e0:	mov	w7, w4
  e4:	cbz	w5, 110 <find_file_iter+0xa0>
  e8:	cmp	w3, #0x19
  ec:	b.hi	f4 <find_file_iter+0x84>  // b.pmore
  f0:	add	w7, w4, #0x20
  f4:	mov	w8, w5
  f8:	cmp	w2, #0x19
  fc:	b.hi	104 <find_file_iter+0x94>  // b.pmore
 100:	add	w8, w5, #0x20
 104:	add	x1, x1, #0x1
 108:	cmp	w8, w7
 10c:	b.eq	cc <find_file_iter+0x5c>  // b.none
 110:	cmp	w3, #0x19
 114:	b.hi	11c <find_file_iter+0xac>  // b.pmore
 118:	add	w4, w4, #0x20
 11c:	cmp	w2, #0x19
 120:	b.hi	128 <find_file_iter+0xb8>  // b.pmore
 124:	add	w5, w5, #0x20
 128:	cmp	w5, w4
 12c:	b.ne	88 <find_file_iter+0x18>  // b.any
 130:	ldr	x0, [x20, #8]
 134:	str	x21, [x0]
 138:	ldr	x0, [x20, #16]
 13c:	str	w19, [x0]
 140:	mov	w0, #0x1                   	// #1
 144:	b	94 <find_file_iter+0x24>

0000000000000148 <go_to_root>:
 148:	stp	x29, x30, [sp, #-32]!
 14c:	mov	x29, sp
 150:	stp	x19, x20, [sp, #16]
 154:	mov	x19, x0
 158:	bl	40 <free_stack>
 15c:	mov	x0, #0x18                  	// #24
 160:	ldr	x20, [x19, #8]
 164:	bl	0 <grub_malloc>
 168:	cbnz	x0, 184 <go_to_root+0x3c>
 16c:	adrp	x0, 0 <pop_element>
 170:	ldr	x0, [x0]
 174:	ldr	w0, [x0]
 178:	ldp	x19, x20, [sp, #16]
 17c:	ldp	x29, x30, [sp], #32
 180:	ret
 184:	mov	w1, #0x2                   	// #2
 188:	str	w1, [x0, #16]
 18c:	ldr	x1, [x19, #24]
 190:	str	x1, [x0]
 194:	str	x20, [x0, #8]
 198:	str	x0, [x19, #24]
 19c:	mov	w0, #0x0                   	// #0
 1a0:	b	178 <go_to_root+0x30>
 1a4:	nop
	...

00000000000001b0 <find_file>:
 1b0:	stp	x29, x30, [sp, #-144]!
 1b4:	mov	x29, sp
 1b8:	stp	x19, x20, [sp, #16]
 1bc:	mov	x19, x0
 1c0:	mov	x20, x2
 1c4:	stp	x21, x22, [sp, #32]
 1c8:	mov	x21, x1
 1cc:	mov	x22, x3
 1d0:	stp	x23, x24, [sp, #48]
 1d4:	add	x24, sp, #0x6c
 1d8:	adrp	x23, 0 <pop_element>
 1dc:	stp	x25, x26, [sp, #64]
 1e0:	mov	x26, x4
 1e4:	add	x25, sp, #0x70
 1e8:	stp	x27, x28, [sp, #80]
 1ec:	mov	x1, x19
 1f0:	str	wzr, [sp, #108]
 1f4:	str	xzr, [sp, #112]
 1f8:	ldrb	w0, [x1]
 1fc:	cmp	w0, #0x2f
 200:	b.eq	258 <find_file+0xa8>  // b.none
 204:	cbz	w0, 3e4 <find_file+0x234>
 208:	mov	x19, x1
 20c:	ldrb	w27, [x19]
 210:	cmp	w27, #0x2f
 214:	ccmp	w27, #0x0, #0x4, ne  // ne = any
 218:	b.ne	260 <find_file+0xb0>  // b.any
 21c:	ldr	x2, [x26, #24]
 220:	ldr	w3, [x2, #16]
 224:	cmp	w3, #0x2
 228:	b.eq	268 <find_file+0xb8>  // b.none
 22c:	adrp	x0, 0 <pop_element>
 230:	ldr	x1, [x0]
 234:	mov	w0, #0x4                   	// #4
 238:	bl	0 <grub_error>
 23c:	ldp	x19, x20, [sp, #16]
 240:	ldp	x21, x22, [sp, #32]
 244:	ldp	x23, x24, [sp, #48]
 248:	ldp	x25, x26, [sp, #64]
 24c:	ldp	x27, x28, [sp, #80]
 250:	ldp	x29, x30, [sp], #144
 254:	ret
 258:	add	x1, x1, #0x1
 25c:	b	1f8 <find_file+0x48>
 260:	add	x19, x19, #0x1
 264:	b	20c <find_file+0x5c>
 268:	sub	x3, x19, x1
 26c:	cmp	x3, #0x1
 270:	b.ne	300 <find_file+0x150>  // b.any
 274:	cmp	w0, #0x2e
 278:	b.eq	1ec <find_file+0x3c>  // b.none
 27c:	strb	wzr, [x19]
 280:	ldr	x0, [x26, #24]
 284:	cbz	x20, 330 <find_file+0x180>
 288:	ldr	x0, [x0, #8]
 28c:	mov	x3, x24
 290:	mov	x2, x25
 294:	blr	x20
 298:	strb	w27, [x19]
 29c:	cbnz	w0, 23c <find_file+0x8c>
 2a0:	ldr	x28, [sp, #112]
 2a4:	cbz	x28, 3ec <find_file+0x23c>
 2a8:	ldr	w27, [sp, #108]
 2ac:	mov	x0, #0x18                  	// #24
 2b0:	bl	0 <grub_malloc>
 2b4:	cbz	x0, 2cc <find_file+0x11c>
 2b8:	ldr	x1, [x26, #24]
 2bc:	and	w27, w27, #0xfffffeff
 2c0:	stp	x1, x28, [x0]
 2c4:	str	w27, [x0, #16]
 2c8:	str	x0, [x26, #24]
 2cc:	ldr	x1, [x26, #24]
 2d0:	ldr	w0, [x1, #16]
 2d4:	cmp	w0, #0x3
 2d8:	b.ne	1ec <find_file+0x3c>  // b.any
 2dc:	ldr	w0, [x26, #16]
 2e0:	add	w0, w0, #0x1
 2e4:	str	w0, [x26, #16]
 2e8:	cmp	w0, #0x8
 2ec:	b.ne	364 <find_file+0x1b4>  // b.any
 2f0:	adrp	x0, 0 <pop_element>
 2f4:	ldr	x1, [x0]
 2f8:	mov	w0, #0x19                  	// #25
 2fc:	b	238 <find_file+0x88>
 300:	cmp	x3, #0x2
 304:	b.ne	27c <find_file+0xcc>  // b.any
 308:	cmp	w0, #0x2e
 30c:	b.ne	27c <find_file+0xcc>  // b.any
 310:	ldrb	w0, [x1, #1]
 314:	cmp	w0, #0x2e
 318:	b.ne	27c <find_file+0xcc>  // b.any
 31c:	ldr	x0, [x2]
 320:	cbz	x0, 1ec <find_file+0x3c>
 324:	mov	x0, x26
 328:	bl	0 <pop_element>
 32c:	b	1ec <find_file+0x3c>
 330:	ldr	x0, [x0, #8]
 334:	stp	x1, x25, [sp, #120]
 338:	adrp	x1, 0 <pop_element>
 33c:	str	x24, [sp, #136]
 340:	add	x2, sp, #0x78
 344:	ldr	x1, [x1]
 348:	blr	x21
 34c:	cbnz	w0, 35c <find_file+0x1ac>
 350:	ldr	x0, [x23]
 354:	ldr	w0, [x0]
 358:	b	298 <find_file+0xe8>
 35c:	mov	w0, #0x0                   	// #0
 360:	b	298 <find_file+0xe8>
 364:	ldr	x0, [x1, #8]
 368:	blr	x22
 36c:	mov	x27, x0
 370:	cbnz	x0, 384 <find_file+0x1d4>
 374:	adrp	x0, 0 <pop_element>
 378:	ldr	x0, [x0]
 37c:	ldr	w0, [x0]
 380:	b	23c <find_file+0x8c>
 384:	ldrb	w0, [x0]
 388:	cmp	w0, #0x2f
 38c:	b.ne	3cc <find_file+0x21c>  // b.any
 390:	mov	x0, x26
 394:	bl	148 <go_to_root>
 398:	cbnz	w0, 23c <find_file+0x8c>
 39c:	mov	x4, x26
 3a0:	mov	x3, x22
 3a4:	mov	x2, x20
 3a8:	mov	x1, x21
 3ac:	mov	x0, x27
 3b0:	bl	1b0 <find_file>
 3b4:	mov	x0, x27
 3b8:	bl	0 <grub_free>
 3bc:	ldr	x0, [x23]
 3c0:	ldr	w0, [x0]
 3c4:	cbz	w0, 1ec <find_file+0x3c>
 3c8:	b	23c <find_file+0x8c>
 3cc:	ldr	x0, [x26, #24]
 3d0:	ldr	x0, [x0]
 3d4:	cbz	x0, 39c <find_file+0x1ec>
 3d8:	mov	x0, x26
 3dc:	bl	0 <pop_element>
 3e0:	b	39c <find_file+0x1ec>
 3e4:	mov	w0, #0x0                   	// #0
 3e8:	b	23c <find_file+0x8c>
 3ec:	adrp	x0, 0 <pop_element>
 3f0:	ldr	x2, [x26]
 3f4:	ldr	x1, [x0]
 3f8:	mov	w0, #0x5                   	// #5
 3fc:	bl	0 <grub_error>
 400:	b	23c <find_file+0x8c>
 404:	nop
	...

0000000000000430 <grub_fshelp_find_file_real>:
 430:	stp	x29, x30, [sp, #-112]!
 434:	mov	x29, sp
 438:	stp	x19, x20, [sp, #16]
 43c:	mov	x20, x0
 440:	stp	x21, x22, [sp, #32]
 444:	stp	x23, x24, [sp, #48]
 448:	str	x25, [sp, #64]
 44c:	stp	x0, x1, [sp, #80]
 450:	str	wzr, [sp, #96]
 454:	str	xzr, [sp, #104]
 458:	cbz	x0, 468 <grub_fshelp_find_file_real+0x38>
 45c:	ldrb	w0, [x0]
 460:	cmp	w0, #0x2f
 464:	b.eq	484 <grub_fshelp_find_file_real+0x54>  // b.none
 468:	adrp	x0, 0 <pop_element>
 46c:	mov	x2, x20
 470:	ldr	x1, [x0]
 474:	mov	w0, #0x7                   	// #7
 478:	bl	0 <grub_error>
 47c:	mov	w19, w0
 480:	b	4c4 <grub_fshelp_find_file_real+0x94>
 484:	mov	x22, x2
 488:	mov	x23, x3
 48c:	mov	x24, x4
 490:	mov	x25, x5
 494:	mov	w21, w6
 498:	add	x0, sp, #0x50
 49c:	bl	148 <go_to_root>
 4a0:	mov	w19, w0
 4a4:	cbnz	w0, 4c4 <grub_fshelp_find_file_real+0x94>
 4a8:	mov	x0, x20
 4ac:	bl	0 <grub_strdup>
 4b0:	mov	x20, x0
 4b4:	cbnz	x0, 4e0 <grub_fshelp_find_file_real+0xb0>
 4b8:	adrp	x0, 0 <pop_element>
 4bc:	ldr	x0, [x0]
 4c0:	ldr	w19, [x0]
 4c4:	mov	w0, w19
 4c8:	ldp	x19, x20, [sp, #16]
 4cc:	ldp	x21, x22, [sp, #32]
 4d0:	ldp	x23, x24, [sp, #48]
 4d4:	ldr	x25, [sp, #64]
 4d8:	ldp	x29, x30, [sp], #112
 4dc:	ret
 4e0:	add	x4, sp, #0x50
 4e4:	mov	x3, x25
 4e8:	mov	x2, x24
 4ec:	mov	x1, x23
 4f0:	bl	1b0 <find_file>
 4f4:	mov	w19, w0
 4f8:	mov	x0, x20
 4fc:	bl	0 <grub_free>
 500:	cbz	w19, 510 <grub_fshelp_find_file_real+0xe0>
 504:	add	x0, sp, #0x50
 508:	bl	40 <free_stack>
 50c:	b	4c4 <grub_fshelp_find_file_real+0x94>
 510:	ldr	x0, [sp, #104]
 514:	ldr	x1, [x0, #8]
 518:	ldr	w20, [x0, #16]
 51c:	str	x1, [x22]
 520:	str	xzr, [x0, #8]
 524:	add	x0, sp, #0x50
 528:	bl	40 <free_stack>
 52c:	cmp	w20, w21
 530:	cset	w0, ne  // ne = any
 534:	cmp	w0, #0x0
 538:	ccmp	w21, #0x1, #0x0, ne  // ne = any
 53c:	b.ne	554 <grub_fshelp_find_file_real+0x124>  // b.any
 540:	adrp	x0, 0 <pop_element>
 544:	ldr	x1, [x0]
 548:	mov	w0, #0x4                   	// #4
 54c:	bl	0 <grub_error>
 550:	b	47c <grub_fshelp_find_file_real+0x4c>
 554:	cmp	w0, #0x0
 558:	ccmp	w21, #0x2, #0x0, ne  // ne = any
 55c:	b.ne	4c4 <grub_fshelp_find_file_real+0x94>  // b.any
 560:	adrp	x0, 0 <pop_element>
 564:	ldr	x1, [x0]
 568:	b	548 <grub_fshelp_find_file_real+0x118>
 56c:	nop
	...

0000000000000590 <grub_fshelp_find_file>:
 590:	mov	w6, w5
 594:	mov	x5, x4
 598:	mov	x4, #0x0                   	// #0
 59c:	b	430 <grub_fshelp_find_file_real>

00000000000005a0 <grub_fshelp_find_file_lookup>:
 5a0:	mov	w6, w5
 5a4:	mov	x5, x4
 5a8:	mov	x4, x3
 5ac:	mov	x3, #0x0                   	// #0
 5b0:	b	430 <grub_fshelp_find_file_real>

00000000000005b4 <grub_fshelp_read_file>:
 5b4:	stp	x29, x30, [sp, #-144]!
 5b8:	mov	x29, sp
 5bc:	stp	x1, x2, [sp, #96]
 5c0:	ldr	w2, [sp, #152]
 5c4:	stp	x21, x22, [sp, #32]
 5c8:	mov	x22, x0
 5cc:	add	w21, w2, #0x9
 5d0:	ldr	x0, [sp, #144]
 5d4:	stp	x19, x20, [sp, #16]
 5d8:	stp	x23, x24, [sp, #48]
 5dc:	cmp	x4, x0
 5e0:	stp	x25, x26, [sp, #64]
 5e4:	stp	x27, x28, [sp, #80]
 5e8:	stp	x3, x7, [sp, #112]
 5ec:	mov	w7, #0x1                   	// #1
 5f0:	lsl	w28, w7, w21
 5f4:	b.ls	628 <grub_fshelp_read_file+0x74>  // b.plast
 5f8:	adrp	x0, 0 <pop_element>
 5fc:	ldr	x1, [x0]
 600:	mov	w0, #0xb                   	// #11
 604:	bl	0 <grub_error>
 608:	mov	x0, #0xffffffffffffffff    	// #-1
 60c:	ldp	x19, x20, [sp, #16]
 610:	ldp	x21, x22, [sp, #32]
 614:	ldp	x23, x24, [sp, #48]
 618:	ldp	x25, x26, [sp, #64]
 61c:	ldp	x27, x28, [sp, #80]
 620:	ldp	x29, x30, [sp], #144
 624:	ret
 628:	add	x2, x4, x5
 62c:	mov	x19, x4
 630:	mov	x24, x5
 634:	mov	x23, x6
 638:	sub	x1, x4, #0x1
 63c:	cmp	x2, x0
 640:	b.ls	648 <grub_fshelp_read_file+0x94>  // b.plast
 644:	sub	x24, x0, x4
 648:	add	x20, x24, w28, sxtw
 64c:	sub	w0, w28, #0x1
 650:	add	x20, x20, x1
 654:	str	w0, [sp, #136]
 658:	adrp	x27, 0 <pop_element>
 65c:	lsr	x20, x20, x21
 660:	sub	x0, x20, #0x1
 664:	str	x0, [sp, #128]
 668:	add	w0, w24, w19
 66c:	str	w0, [sp, #140]
 670:	sub	w0, w28, #0x1
 674:	lsr	x21, x19, x21
 678:	and	w19, w0, w19
 67c:	mov	x26, x21
 680:	cmp	x26, x20
 684:	b.cc	690 <grub_fshelp_read_file+0xdc>  // b.lo, b.ul, b.last
 688:	mov	x0, x24
 68c:	b	60c <grub_fshelp_read_file+0x58>
 690:	ldr	x0, [sp, #96]
 694:	mov	x1, x26
 698:	ldr	x2, [sp, #120]
 69c:	blr	x2
 6a0:	ldr	x9, [x27]
 6a4:	ldr	w1, [x9]
 6a8:	cbnz	w1, 608 <grub_fshelp_read_file+0x54>
 6ac:	ldrb	w1, [sp, #152]
 6b0:	lsl	x1, x0, x1
 6b4:	ldr	x0, [sp, #128]
 6b8:	cmp	x0, x26
 6bc:	b.ne	738 <grub_fshelp_read_file+0x184>  // b.any
 6c0:	ldp	w2, w0, [sp, #136]
 6c4:	ands	w2, w0, w2
 6c8:	csel	w2, w2, w28, ne  // ne = any
 6cc:	cmp	x26, x21
 6d0:	b.ne	740 <grub_fshelp_read_file+0x18c>  // b.any
 6d4:	mov	w25, w19
 6d8:	sub	w2, w2, w19
 6dc:	sxtw	x2, w2
 6e0:	cbz	x1, 748 <grub_fshelp_read_file+0x194>
 6e4:	ldr	x0, [sp, #104]
 6e8:	str	x0, [x22, #48]
 6ec:	ldr	x0, [sp, #112]
 6f0:	str	x0, [x22, #56]
 6f4:	ldr	x0, [sp, #160]
 6f8:	mov	x3, x2
 6fc:	mov	x4, x23
 700:	sxtw	x2, w25
 704:	add	x1, x1, x0
 708:	mov	x0, x22
 70c:	bl	0 <grub_disk_read>
 710:	str	xzr, [x22, #48]
 714:	adrp	x0, 0 <pop_element>
 718:	add	x0, x0, #0x0
 71c:	ldr	x9, [x0]
 720:	ldr	w0, [x9]
 724:	cbnz	w0, 608 <grub_fshelp_read_file+0x54>
 728:	sub	w6, w28, w25
 72c:	add	x26, x26, #0x1
 730:	add	x23, x23, w6, sxtw
 734:	b	680 <grub_fshelp_read_file+0xcc>
 738:	mov	w2, w28
 73c:	b	6cc <grub_fshelp_read_file+0x118>
 740:	mov	w25, #0x0                   	// #0
 744:	b	6dc <grub_fshelp_read_file+0x128>
 748:	mov	x0, x23
 74c:	mov	w1, #0x0                   	// #0
 750:	bl	0 <grub_memset>
 754:	b	728 <grub_fshelp_read_file+0x174>
	...
