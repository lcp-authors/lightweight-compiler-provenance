
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//minicmd.mod_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x4b8>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	w20, w0
  10:	adrp	x0, 0 <grub_mod_init-0x4b8>
  14:	ldr	x0, [x0]
  18:	ldr	x19, [x0]
  1c:	cbnz	x19, 2c <grub_mod_init-0x48c>
  20:	ldp	x19, x20, [sp, #16]
  24:	ldp	x29, x30, [sp], #32
  28:	ret
  2c:	ldr	x2, [x19, #88]
  30:	cbz	x2, 40 <grub_mod_init-0x478>
  34:	mov	w1, w20
  38:	mov	x0, x19
  3c:	blr	x2
  40:	ldr	x19, [x19]
  44:	b	1c <grub_mod_init-0x49c>
	...
  50:	stp	x29, x30, [sp, #-16]!
  54:	mov	x29, sp
  58:	bl	0 <grub_exit>
  5c:	stp	x29, x30, [sp, #-64]!
  60:	adrp	x0, 0 <grub_mod_init-0x4b8>
  64:	mov	x29, sp
  68:	ldr	x0, [x0]
  6c:	stp	x19, x20, [sp, #16]
  70:	stp	x21, x22, [sp, #32]
  74:	adrp	x22, 0 <grub_mod_init-0x4b8>
  78:	adrp	x21, 0 <grub_mod_init-0x4b8>
  7c:	stp	x23, x24, [sp, #48]
  80:	bl	0 <grub_printf_>
  84:	adrp	x0, 0 <grub_mod_init-0x4b8>
  88:	adrp	x23, 0 <grub_mod_init-0x4b8>
  8c:	ldr	x0, [x0]
  90:	ldr	x19, [x0]
  94:	cbnz	x19, b0 <grub_mod_init-0x408>
  98:	mov	w0, #0x0                   	// #0
  9c:	ldp	x19, x20, [sp, #16]
  a0:	ldp	x21, x22, [sp, #32]
  a4:	ldp	x23, x24, [sp, #48]
  a8:	ldp	x29, x30, [sp], #64
  ac:	ret
  b0:	ldr	x0, [x22]
  b4:	adrp	x24, 0 <grub_mod_init-0x4b8>
  b8:	ldr	w2, [x19, #8]
  bc:	ldr	x1, [x19]
  c0:	bl	0 <grub_printf>
  c4:	ldr	x20, [x19, #16]
  c8:	cbnz	x20, e8 <grub_mod_init-0x3d0>
  cc:	ldr	x0, [x21]
  d0:	ldr	x1, [x0]
  d4:	adrp	x0, 0 <grub_mod_init-0x4b8>
  d8:	ldr	x0, [x0]
  dc:	blr	x1
  e0:	ldr	x19, [x19, #112]
  e4:	b	94 <grub_mod_init-0x424>
  e8:	ldr	x0, [x19, #16]
  ec:	cmp	x0, x20
  f0:	b.eq	104 <grub_mod_init-0x3b4>  // b.none
  f4:	ldr	x0, [x21]
  f8:	ldr	x1, [x0]
  fc:	ldr	x0, [x24]
 100:	blr	x1
 104:	ldr	x0, [x20, #8]
 108:	ldr	x1, [x0]
 10c:	ldr	x0, [x23]
 110:	bl	0 <grub_printf>
 114:	ldr	x20, [x20]
 118:	b	c8 <grub_mod_init-0x3f0>
 11c:	nop
	...
 158:	stp	x29, x30, [sp, #-48]!
 15c:	adrp	x0, 0 <grub_mod_init-0x4b8>
 160:	mov	x29, sp
 164:	ldr	x0, [x0]
 168:	stp	x19, x20, [sp, #16]
 16c:	mov	w20, #0x2b                  	// #43
 170:	stp	x21, x22, [sp, #32]
 174:	mov	w21, #0x2d                  	// #45
 178:	adrp	x22, 0 <grub_mod_init-0x4b8>
 17c:	ldr	x19, [x0]
 180:	cbnz	x19, 198 <grub_mod_init-0x320>
 184:	mov	w0, #0x0                   	// #0
 188:	ldp	x19, x20, [sp, #16]
 18c:	ldp	x21, x22, [sp, #32]
 190:	ldp	x29, x30, [sp], #48
 194:	ret
 198:	ldr	w2, [x19, #24]
 19c:	ldr	x0, [x22]
 1a0:	ldr	x1, [x19, #16]
 1a4:	tst	x2, #0x100
 1a8:	ldr	x4, [x19, #56]
 1ac:	csel	w3, w20, w21, ne  // ne = any
 1b0:	and	w2, w2, #0xff
 1b4:	bl	0 <grub_printf>
 1b8:	ldr	x19, [x19]
 1bc:	b	180 <grub_mod_init-0x338>
	...
 1d0:	sub	sp, sp, #0x250
 1d4:	cmp	w1, #0x0
 1d8:	stp	x29, x30, [sp]
 1dc:	mov	x29, sp
 1e0:	stp	x19, x20, [sp, #16]
 1e4:	stp	x21, x22, [sp, #32]
 1e8:	stp	x23, x24, [sp, #48]
 1ec:	str	x25, [sp, #64]
 1f0:	b.gt	220 <grub_mod_init-0x298>
 1f4:	adrp	x0, 0 <grub_mod_init-0x4b8>
 1f8:	ldr	x1, [x0]
 1fc:	mov	w0, #0x12                  	// #18
 200:	bl	0 <grub_error>
 204:	ldp	x29, x30, [sp]
 208:	ldp	x19, x20, [sp, #16]
 20c:	ldp	x21, x22, [sp, #32]
 210:	ldp	x23, x24, [sp, #48]
 214:	ldr	x25, [sp, #64]
 218:	add	sp, sp, #0x250
 21c:	ret
 220:	ldr	x0, [x2]
 224:	mov	w1, #0x2b                  	// #43
 228:	bl	0 <grub_file_open>
 22c:	mov	x19, x0
 230:	cbz	x0, 288 <grub_mod_init-0x230>
 234:	add	x23, sp, #0x50
 238:	adrp	x24, 0 <grub_mod_init-0x4b8>
 23c:	adrp	x25, 0 <grub_mod_init-0x4b8>
 240:	mov	x1, x23
 244:	mov	x0, x19
 248:	mov	x2, #0x200                 	// #512
 24c:	bl	0 <grub_file_read>
 250:	mov	x21, x0
 254:	cmp	x0, #0x0
 258:	b.gt	298 <grub_mod_init-0x220>
 25c:	adrp	x0, 0 <grub_mod_init-0x4b8>
 260:	ldr	x0, [x0]
 264:	ldr	x1, [x0]
 268:	adrp	x0, 0 <grub_mod_init-0x4b8>
 26c:	ldr	x0, [x0]
 270:	blr	x1
 274:	bl	0 <grub_refresh>
 278:	mov	x0, x19
 27c:	bl	0 <grub_file_close>
 280:	mov	w0, #0x0                   	// #0
 284:	b	204 <grub_mod_init-0x2b4>
 288:	adrp	x0, 0 <grub_mod_init-0x4b8>
 28c:	ldr	x0, [x0]
 290:	ldr	w0, [x0]
 294:	b	204 <grub_mod_init-0x2b4>
 298:	mov	x22, #0x0                   	// #0
 29c:	ldrb	w20, [x23, x22]
 2a0:	sub	w0, w20, #0x20
 2a4:	cmp	w0, #0x5e
 2a8:	b.hi	2d0 <grub_mod_init-0x1e8>  // b.pmore
 2ac:	cmp	w20, #0xd
 2b0:	b.eq	2dc <grub_mod_init-0x1dc>  // b.none
 2b4:	ldr	x0, [x25]
 2b8:	mov	w1, w20
 2bc:	bl	0 <grub_printf>
 2c0:	add	x22, x22, #0x1
 2c4:	cmp	x22, x21
 2c8:	b.ne	29c <grub_mod_init-0x21c>  // b.any
 2cc:	b	240 <grub_mod_init-0x278>
 2d0:	mov	w0, w20
 2d4:	bl	0 <grub_isspace>
 2d8:	cbnz	w0, 2ac <grub_mod_init-0x20c>
 2dc:	mov	w0, #0x2                   	// #2
 2e0:	bl	0 <grub_mod_init-0x4b8>
 2e4:	ldr	x0, [x24]
 2e8:	mov	w1, w20
 2ec:	bl	0 <grub_printf>
 2f0:	mov	w0, #0x0                   	// #0
 2f4:	bl	0 <grub_mod_init-0x4b8>
 2f8:	b	2c0 <grub_mod_init-0x1f8>
 2fc:	nop
	...
 330:	cbnz	w1, 344 <grub_mod_init-0x174>
 334:	adrp	x0, 0 <grub_mod_init-0x4b8>
 338:	ldr	x1, [x0]
 33c:	mov	w0, #0x12                  	// #18
 340:	b	0 <grub_error>
 344:	stp	x29, x30, [sp, #-32]!
 348:	adrp	x0, 0 <grub_mod_init-0x4b8>
 34c:	mov	x29, sp
 350:	ldr	x0, [x0]
 354:	stp	x19, x20, [sp, #16]
 358:	ldr	x20, [x2]
 35c:	ldr	x19, [x0]
 360:	cbnz	x19, 370 <grub_mod_init-0x148>
 364:	adrp	x0, 0 <grub_mod_init-0x4b8>
 368:	ldr	x1, [x0]
 36c:	b	3c0 <grub_mod_init-0xf8>
 370:	ldr	x1, [x19]
 374:	mov	x0, x20
 378:	bl	0 <grub_strcmp>
 37c:	cbz	w0, 3b0 <grub_mod_init-0x108>
 380:	ldr	x19, [x19, #112]
 384:	b	360 <grub_mod_init-0x158>
 388:	mov	x0, x19
 38c:	bl	0 <grub_dl_unref>
 390:	cmp	w0, #0x0
 394:	b.gt	3a0 <grub_mod_init-0x118>
 398:	mov	x0, x19
 39c:	bl	0 <grub_dl_unload>
 3a0:	mov	w0, #0x0                   	// #0
 3a4:	ldp	x19, x20, [sp, #16]
 3a8:	ldp	x29, x30, [sp], #32
 3ac:	ret
 3b0:	ldr	w0, [x19, #12]
 3b4:	cbz	w0, 388 <grub_mod_init-0x130>
 3b8:	adrp	x0, 0 <grub_mod_init-0x4b8>
 3bc:	ldr	x1, [x0]
 3c0:	mov	w0, #0x12                  	// #18
 3c4:	ldp	x19, x20, [sp, #16]
 3c8:	ldp	x29, x30, [sp], #32
 3cc:	b	340 <grub_mod_init-0x178>
	...
 3f0:	cbnz	w1, 404 <grub_mod_init-0xb4>
 3f4:	adrp	x0, 0 <grub_mod_init-0x4b8>
 3f8:	ldr	x1, [x0]
 3fc:	mov	w0, #0x12                  	// #18
 400:	b	0 <grub_error>
 404:	stp	x29, x30, [sp, #-48]!
 408:	mov	x29, sp
 40c:	stp	x19, x20, [sp, #16]
 410:	mov	x20, x2
 414:	mov	w2, #0x0                   	// #0
 418:	stp	x21, x22, [sp, #32]
 41c:	mov	w21, w1
 420:	mov	x1, #0x0                   	// #0
 424:	ldr	x0, [x20]
 428:	bl	0 <grub_strtoul>
 42c:	mov	x19, x0
 430:	adrp	x0, 0 <grub_mod_init-0x4b8>
 434:	ldr	x0, [x0]
 438:	ldr	w22, [x0]
 43c:	cbnz	w22, 468 <grub_mod_init-0x50>
 440:	cmp	w21, #0x1
 444:	b.le	47c <grub_mod_init-0x3c>
 448:	ldr	x0, [x20, #8]
 44c:	mov	w2, #0x0                   	// #0
 450:	mov	x1, #0x0                   	// #0
 454:	bl	0 <grub_strtoul>
 458:	add	x20, x19, x0
 45c:	adrp	x21, 0 <grub_mod_init-0x4b8>
 460:	cmp	x19, x20
 464:	b.ne	484 <grub_mod_init-0x34>  // b.any
 468:	mov	w0, w22
 46c:	ldp	x19, x20, [sp, #16]
 470:	ldp	x21, x22, [sp, #32]
 474:	ldp	x29, x30, [sp], #48
 478:	ret
 47c:	mov	x0, #0x4                   	// #4
 480:	b	458 <grub_mod_init-0x60>
 484:	ldr	x0, [x21]
 488:	ldrb	w1, [x19], #1
 48c:	and	w2, w1, #0xf
 490:	lsr	w1, w1, #4
 494:	bl	0 <grub_printf>
 498:	b	460 <grub_mod_init-0x58>
 49c:	nop
	...

00000000000004b8 <grub_mod_init>:
 4b8:	stp	x29, x30, [sp, #-32]!
 4bc:	adrp	x0, 0 <grub_mod_init-0x4b8>
 4c0:	mov	w4, #0x0                   	// #0
 4c4:	mov	x29, sp
 4c8:	ldr	x3, [x0]
 4cc:	adrp	x0, 0 <grub_mod_init-0x4b8>
 4d0:	str	x19, [sp, #16]
 4d4:	ldr	x2, [x0]
 4d8:	adrp	x0, 0 <grub_mod_init-0x4b8>
 4dc:	ldr	x1, [x0]
 4e0:	adrp	x0, 0 <grub_mod_init-0x4b8>
 4e4:	ldr	x0, [x0]
 4e8:	bl	0 <grub_register_command_prio>
 4ec:	adrp	x1, 0 <grub_mod_init-0x4b8>
 4f0:	mov	w4, #0x0                   	// #0
 4f4:	mov	x2, #0x0                   	// #0
 4f8:	ldr	x19, [x1]
 4fc:	str	x0, [x19]
 500:	adrp	x0, 0 <grub_mod_init-0x4b8>
 504:	ldr	x3, [x0]
 508:	adrp	x0, 0 <grub_mod_init-0x4b8>
 50c:	ldr	x1, [x0]
 510:	adrp	x0, 0 <grub_mod_init-0x4b8>
 514:	ldr	x0, [x0]
 518:	bl	0 <grub_register_command_prio>
 51c:	str	x0, [x19, #8]
 520:	adrp	x0, 0 <grub_mod_init-0x4b8>
 524:	mov	w4, #0x0                   	// #0
 528:	ldr	x3, [x0]
 52c:	adrp	x0, 0 <grub_mod_init-0x4b8>
 530:	ldr	x2, [x0]
 534:	adrp	x0, 0 <grub_mod_init-0x4b8>
 538:	ldr	x1, [x0]
 53c:	adrp	x0, 0 <grub_mod_init-0x4b8>
 540:	ldr	x0, [x0]
 544:	bl	0 <grub_register_command_prio>
 548:	str	x0, [x19, #16]
 54c:	adrp	x0, 0 <grub_mod_init-0x4b8>
 550:	mov	w4, #0x0                   	// #0
 554:	ldr	x3, [x0]
 558:	adrp	x0, 0 <grub_mod_init-0x4b8>
 55c:	ldr	x2, [x0]
 560:	adrp	x0, 0 <grub_mod_init-0x4b8>
 564:	ldr	x1, [x0]
 568:	adrp	x0, 0 <grub_mod_init-0x4b8>
 56c:	ldr	x0, [x0]
 570:	bl	0 <grub_register_command_prio>
 574:	str	x0, [x19, #24]
 578:	adrp	x0, 0 <grub_mod_init-0x4b8>
 57c:	mov	w4, #0x0                   	// #0
 580:	mov	x2, #0x0                   	// #0
 584:	ldr	x3, [x0]
 588:	adrp	x0, 0 <grub_mod_init-0x4b8>
 58c:	ldr	x1, [x0]
 590:	adrp	x0, 0 <grub_mod_init-0x4b8>
 594:	ldr	x0, [x0]
 598:	bl	0 <grub_register_command_prio>
 59c:	str	x0, [x19, #32]
 5a0:	adrp	x0, 0 <grub_mod_init-0x4b8>
 5a4:	mov	w4, #0x0                   	// #0
 5a8:	mov	x2, #0x0                   	// #0
 5ac:	ldr	x3, [x0]
 5b0:	adrp	x0, 0 <grub_mod_init-0x4b8>
 5b4:	ldr	x1, [x0]
 5b8:	adrp	x0, 0 <grub_mod_init-0x4b8>
 5bc:	ldr	x0, [x0]
 5c0:	bl	0 <grub_register_command_prio>
 5c4:	str	x0, [x19, #40]
 5c8:	ldr	x19, [sp, #16]
 5cc:	ldp	x29, x30, [sp], #32
 5d0:	ret
 5d4:	nop
	...

0000000000000688 <grub_mod_fini>:
 688:	stp	x29, x30, [sp, #-32]!
 68c:	adrp	x0, 0 <grub_mod_init-0x4b8>
 690:	mov	x29, sp
 694:	str	x19, [sp, #16]
 698:	ldr	x19, [x0]
 69c:	ldr	x0, [x19]
 6a0:	bl	0 <grub_unregister_command>
 6a4:	ldr	x0, [x19, #8]
 6a8:	bl	0 <grub_unregister_command>
 6ac:	ldr	x0, [x19, #16]
 6b0:	bl	0 <grub_unregister_command>
 6b4:	ldr	x0, [x19, #24]
 6b8:	bl	0 <grub_unregister_command>
 6bc:	ldr	x0, [x19, #32]
 6c0:	bl	0 <grub_unregister_command>
 6c4:	ldr	x0, [x19, #40]
 6c8:	ldr	x19, [sp, #16]
 6cc:	ldp	x29, x30, [sp], #32
 6d0:	b	0 <grub_unregister_command>
 6d4:	nop
	...
