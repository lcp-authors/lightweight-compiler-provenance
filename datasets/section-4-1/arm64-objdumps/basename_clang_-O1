
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//basename_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000768 <_init>:
 768:	stp	x29, x30, [sp, #-16]!
 76c:	mov	x29, sp
 770:	bl	820 <call_weak_fn>
 774:	ldp	x29, x30, [sp], #16
 778:	ret

Disassembly of section .plt:

0000000000000780 <.plt>:
 780:	stp	x16, x30, [sp, #-16]!
 784:	adrp	x16, 10000 <__FRAME_END__+0xf424>
 788:	ldr	x17, [x16, #4088]
 78c:	add	x16, x16, #0xff8
 790:	br	x17
 794:	nop
 798:	nop
 79c:	nop

00000000000007a0 <strlen@plt>:
 7a0:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 7a4:	ldr	x17, [x16]
 7a8:	add	x16, x16, #0x0
 7ac:	br	x17

00000000000007b0 <__cxa_finalize@plt>:
 7b0:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 7b4:	ldr	x17, [x16, #8]
 7b8:	add	x16, x16, #0x8
 7bc:	br	x17

00000000000007c0 <builtin_usage@plt>:
 7c0:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 7c4:	ldr	x17, [x16, #16]
 7c8:	add	x16, x16, #0x10
 7cc:	br	x17

00000000000007d0 <__gmon_start__@plt>:
 7d0:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 7d4:	ldr	x17, [x16, #24]
 7d8:	add	x16, x16, #0x18
 7dc:	br	x17

00000000000007e0 <puts@plt>:
 7e0:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 7e4:	ldr	x17, [x16, #32]
 7e8:	add	x16, x16, #0x20
 7ec:	br	x17

00000000000007f0 <strcmp@plt>:
 7f0:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 7f4:	ldr	x17, [x16, #40]
 7f8:	add	x16, x16, #0x28
 7fc:	br	x17

0000000000000800 <no_options@plt>:
 800:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 804:	ldr	x17, [x16, #48]
 808:	add	x16, x16, #0x30
 80c:	br	x17

0000000000000810 <fwrite@plt>:
 810:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 814:	ldr	x17, [x16, #56]
 818:	add	x16, x16, #0x38
 81c:	br	x17

Disassembly of section .text:

0000000000000820 <call_weak_fn>:
 820:	adrp	x0, 10000 <__FRAME_END__+0xf424>
 824:	ldr	x0, [x0, #4048]
 828:	cbz	x0, 830 <call_weak_fn+0x10>
 82c:	b	7d0 <__gmon_start__@plt>
 830:	ret
 834:	nop

0000000000000838 <deregister_tm_clones>:
 838:	adrp	x0, 11000 <strlen@GLIBC_2.17>
 83c:	add	x0, x0, #0xa8
 840:	adrp	x1, 11000 <strlen@GLIBC_2.17>
 844:	add	x1, x1, #0xa8
 848:	cmp	x1, x0
 84c:	b.eq	864 <deregister_tm_clones+0x2c>  // b.none
 850:	adrp	x1, 10000 <__FRAME_END__+0xf424>
 854:	ldr	x1, [x1, #4024]
 858:	cbz	x1, 864 <deregister_tm_clones+0x2c>
 85c:	mov	x16, x1
 860:	br	x16
 864:	ret

0000000000000868 <register_tm_clones>:
 868:	adrp	x0, 11000 <strlen@GLIBC_2.17>
 86c:	add	x0, x0, #0xa8
 870:	adrp	x1, 11000 <strlen@GLIBC_2.17>
 874:	add	x1, x1, #0xa8
 878:	sub	x1, x1, x0
 87c:	lsr	x2, x1, #63
 880:	add	x1, x2, x1, asr #3
 884:	cmp	xzr, x1, asr #1
 888:	asr	x1, x1, #1
 88c:	b.eq	8a4 <register_tm_clones+0x3c>  // b.none
 890:	adrp	x2, 10000 <__FRAME_END__+0xf424>
 894:	ldr	x2, [x2, #4064]
 898:	cbz	x2, 8a4 <register_tm_clones+0x3c>
 89c:	mov	x16, x2
 8a0:	br	x16
 8a4:	ret

00000000000008a8 <__do_global_dtors_aux>:
 8a8:	stp	x29, x30, [sp, #-32]!
 8ac:	mov	x29, sp
 8b0:	str	x19, [sp, #16]
 8b4:	adrp	x19, 11000 <strlen@GLIBC_2.17>
 8b8:	ldrb	w0, [x19, #168]
 8bc:	cbnz	w0, 8e4 <__do_global_dtors_aux+0x3c>
 8c0:	adrp	x0, 10000 <__FRAME_END__+0xf424>
 8c4:	ldr	x0, [x0, #4032]
 8c8:	cbz	x0, 8d8 <__do_global_dtors_aux+0x30>
 8cc:	adrp	x0, 11000 <strlen@GLIBC_2.17>
 8d0:	ldr	x0, [x0, #64]
 8d4:	bl	7b0 <__cxa_finalize@plt>
 8d8:	bl	838 <deregister_tm_clones>
 8dc:	mov	w0, #0x1                   	// #1
 8e0:	strb	w0, [x19, #168]
 8e4:	ldr	x19, [sp, #16]
 8e8:	ldp	x29, x30, [sp], #32
 8ec:	ret

00000000000008f0 <frame_dummy>:
 8f0:	b	868 <register_tm_clones>

00000000000008f4 <basename_builtin>:
 8f4:	stp	x29, x30, [sp, #-48]!
 8f8:	str	x21, [sp, #16]
 8fc:	stp	x20, x19, [sp, #32]
 900:	mov	x29, sp
 904:	cbz	x0, 93c <basename_builtin+0x48>
 908:	bl	800 <no_options@plt>
 90c:	cbnz	w0, 940 <basename_builtin+0x4c>
 910:	adrp	x8, 10000 <__FRAME_END__+0xf424>
 914:	ldr	x8, [x8, #4056]
 918:	ldr	x8, [x8]
 91c:	ldp	x9, x10, [x8]
 920:	ldr	x20, [x10]
 924:	cbz	x9, 954 <basename_builtin+0x60>
 928:	ldr	x8, [x9, #8]
 92c:	ldr	x19, [x8]
 930:	mov	x8, x9
 934:	ldr	x8, [x8]
 938:	cbz	x8, 960 <basename_builtin+0x6c>
 93c:	bl	7c0 <builtin_usage@plt>
 940:	mov	w0, #0x102                 	// #258
 944:	ldp	x20, x19, [sp, #32]
 948:	ldr	x21, [sp, #16]
 94c:	ldp	x29, x30, [sp], #48
 950:	ret
 954:	mov	x19, xzr
 958:	ldr	x8, [x8]
 95c:	cbnz	x8, 93c <basename_builtin+0x48>
 960:	mov	x0, x20
 964:	bl	7a0 <strlen@plt>
 968:	lsl	x13, x0, #32
 96c:	sxtw	x10, w0
 970:	sub	x8, x20, #0x1
 974:	mov	x11, #0xffffffff00000000    	// #-4294967296
 978:	mov	x9, x10
 97c:	subs	x10, x10, #0x1
 980:	mov	x12, x13
 984:	b.lt	998 <basename_builtin+0xa4>  // b.tstop
 988:	ldrb	w13, [x8, x9]
 98c:	cmp	w13, #0x2f
 990:	add	x13, x12, x11
 994:	b.eq	978 <basename_builtin+0x84>  // b.none
 998:	cbz	w9, a1c <basename_builtin+0x128>
 99c:	mov	x10, #0xffffffff00000000    	// #-4294967296
 9a0:	asr	x11, x12, #32
 9a4:	add	x12, x10, x9, lsl #32
 9a8:	strb	wzr, [x20, x11]
 9ac:	subs	x13, x11, #0x1
 9b0:	mov	x9, x12
 9b4:	b.lt	9cc <basename_builtin+0xd8>  // b.tstop
 9b8:	ldrb	w11, [x8, x11]
 9bc:	add	x12, x9, x10
 9c0:	cmp	w11, #0x2f
 9c4:	mov	x11, x13
 9c8:	b.ne	9ac <basename_builtin+0xb8>  // b.any
 9cc:	add	x8, x20, x9, asr #32
 9d0:	add	x20, x8, #0x1
 9d4:	cbz	x19, a10 <basename_builtin+0x11c>
 9d8:	mov	x0, x19
 9dc:	bl	7a0 <strlen@plt>
 9e0:	mov	x21, x0
 9e4:	mov	x0, x20
 9e8:	bl	7a0 <strlen@plt>
 9ec:	cmp	w0, w21
 9f0:	b.le	a10 <basename_builtin+0x11c>
 9f4:	sub	w8, w0, w21
 9f8:	add	x21, x20, w8, sxtw
 9fc:	mov	x0, x21
 a00:	mov	x1, x19
 a04:	bl	7f0 <strcmp@plt>
 a08:	cbnz	w0, a10 <basename_builtin+0x11c>
 a0c:	strb	wzr, [x21]
 a10:	mov	x0, x20
 a14:	bl	7e0 <puts@plt>
 a18:	b	a3c <basename_builtin+0x148>
 a1c:	adrp	x8, 10000 <__FRAME_END__+0xf424>
 a20:	ldr	x8, [x8, #4040]
 a24:	adrp	x0, 0 <_init-0x768>
 a28:	add	x0, x0, #0xa54
 a2c:	mov	w1, #0x2                   	// #2
 a30:	ldr	x3, [x8]
 a34:	mov	w2, #0x1                   	// #1
 a38:	bl	810 <fwrite@plt>
 a3c:	mov	w0, wzr
 a40:	b	944 <basename_builtin+0x50>

Disassembly of section .fini:

0000000000000a44 <_fini>:
 a44:	stp	x29, x30, [sp, #-16]!
 a48:	mov	x29, sp
 a4c:	ldp	x29, x30, [sp], #16
 a50:	ret
