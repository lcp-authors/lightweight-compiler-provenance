
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//wc_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

00000000004018a0 <.init>:
  4018a0:	stp	x29, x30, [sp, #-16]!
  4018a4:	mov	x29, sp
  4018a8:	bl	402668 <ferror@plt+0x968>
  4018ac:	ldp	x29, x30, [sp], #16
  4018b0:	ret

Disassembly of section .plt:

00000000004018c0 <mbrtowc@plt-0x20>:
  4018c0:	stp	x16, x30, [sp, #-16]!
  4018c4:	adrp	x16, 418000 <_obstack_memory_used@@Base+0x12318>
  4018c8:	ldr	x17, [x16, #4088]
  4018cc:	add	x16, x16, #0xff8
  4018d0:	br	x17
  4018d4:	nop
  4018d8:	nop
  4018dc:	nop

00000000004018e0 <mbrtowc@plt>:
  4018e0:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  4018e4:	ldr	x17, [x16]
  4018e8:	add	x16, x16, #0x0
  4018ec:	br	x17

00000000004018f0 <memcpy@plt>:
  4018f0:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  4018f4:	ldr	x17, [x16, #8]
  4018f8:	add	x16, x16, #0x8
  4018fc:	br	x17

0000000000401900 <_exit@plt>:
  401900:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401904:	ldr	x17, [x16, #16]
  401908:	add	x16, x16, #0x10
  40190c:	br	x17

0000000000401910 <strlen@plt>:
  401910:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401914:	ldr	x17, [x16, #24]
  401918:	add	x16, x16, #0x18
  40191c:	br	x17

0000000000401920 <fputs@plt>:
  401920:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401924:	ldr	x17, [x16, #32]
  401928:	add	x16, x16, #0x20
  40192c:	br	x17

0000000000401930 <exit@plt>:
  401930:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401934:	ldr	x17, [x16, #40]
  401938:	add	x16, x16, #0x28
  40193c:	br	x17

0000000000401940 <error@plt>:
  401940:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401944:	ldr	x17, [x16, #48]
  401948:	add	x16, x16, #0x30
  40194c:	br	x17

0000000000401950 <sysinfo@plt>:
  401950:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401954:	ldr	x17, [x16, #56]
  401958:	add	x16, x16, #0x38
  40195c:	br	x17

0000000000401960 <ferror_unlocked@plt>:
  401960:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401964:	ldr	x17, [x16, #64]
  401968:	add	x16, x16, #0x40
  40196c:	br	x17

0000000000401970 <__cxa_atexit@plt>:
  401970:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401974:	ldr	x17, [x16, #72]
  401978:	add	x16, x16, #0x48
  40197c:	br	x17

0000000000401980 <iswcntrl@plt>:
  401980:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401984:	ldr	x17, [x16, #80]
  401988:	add	x16, x16, #0x50
  40198c:	br	x17

0000000000401990 <setvbuf@plt>:
  401990:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401994:	ldr	x17, [x16, #88]
  401998:	add	x16, x16, #0x58
  40199c:	br	x17

00000000004019a0 <lseek@plt>:
  4019a0:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  4019a4:	ldr	x17, [x16, #96]
  4019a8:	add	x16, x16, #0x60
  4019ac:	br	x17

00000000004019b0 <__fpending@plt>:
  4019b0:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  4019b4:	ldr	x17, [x16, #104]
  4019b8:	add	x16, x16, #0x68
  4019bc:	br	x17

00000000004019c0 <fileno@plt>:
  4019c0:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  4019c4:	ldr	x17, [x16, #112]
  4019c8:	add	x16, x16, #0x70
  4019cc:	br	x17

00000000004019d0 <fclose@plt>:
  4019d0:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  4019d4:	ldr	x17, [x16, #120]
  4019d8:	add	x16, x16, #0x78
  4019dc:	br	x17

00000000004019e0 <iswspace@plt>:
  4019e0:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  4019e4:	ldr	x17, [x16, #128]
  4019e8:	add	x16, x16, #0x80
  4019ec:	br	x17

00000000004019f0 <nl_langinfo@plt>:
  4019f0:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  4019f4:	ldr	x17, [x16, #136]
  4019f8:	add	x16, x16, #0x88
  4019fc:	br	x17

0000000000401a00 <fopen@plt>:
  401a00:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401a04:	ldr	x17, [x16, #144]
  401a08:	add	x16, x16, #0x90
  401a0c:	br	x17

0000000000401a10 <malloc@plt>:
  401a10:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401a14:	ldr	x17, [x16, #152]
  401a18:	add	x16, x16, #0x98
  401a1c:	br	x17

0000000000401a20 <wcwidth@plt>:
  401a20:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401a24:	ldr	x17, [x16, #160]
  401a28:	add	x16, x16, #0xa0
  401a2c:	br	x17

0000000000401a30 <getdelim@plt>:
  401a30:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401a34:	ldr	x17, [x16, #168]
  401a38:	add	x16, x16, #0xa8
  401a3c:	br	x17

0000000000401a40 <open@plt>:
  401a40:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401a44:	ldr	x17, [x16, #176]
  401a48:	add	x16, x16, #0xb0
  401a4c:	br	x17

0000000000401a50 <strncmp@plt>:
  401a50:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401a54:	ldr	x17, [x16, #184]
  401a58:	add	x16, x16, #0xb8
  401a5c:	br	x17

0000000000401a60 <bindtextdomain@plt>:
  401a60:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401a64:	ldr	x17, [x16, #192]
  401a68:	add	x16, x16, #0xc0
  401a6c:	br	x17

0000000000401a70 <__libc_start_main@plt>:
  401a70:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401a74:	ldr	x17, [x16, #200]
  401a78:	add	x16, x16, #0xc8
  401a7c:	br	x17

0000000000401a80 <fgetc@plt>:
  401a80:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401a84:	ldr	x17, [x16, #208]
  401a88:	add	x16, x16, #0xd0
  401a8c:	br	x17

0000000000401a90 <__printf_chk@plt>:
  401a90:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401a94:	ldr	x17, [x16, #216]
  401a98:	add	x16, x16, #0xd8
  401a9c:	br	x17

0000000000401aa0 <memset@plt>:
  401aa0:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401aa4:	ldr	x17, [x16, #224]
  401aa8:	add	x16, x16, #0xe0
  401aac:	br	x17

0000000000401ab0 <putchar_unlocked@plt>:
  401ab0:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401ab4:	ldr	x17, [x16, #232]
  401ab8:	add	x16, x16, #0xe8
  401abc:	br	x17

0000000000401ac0 <calloc@plt>:
  401ac0:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401ac4:	ldr	x17, [x16, #240]
  401ac8:	add	x16, x16, #0xf0
  401acc:	br	x17

0000000000401ad0 <realloc@plt>:
  401ad0:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401ad4:	ldr	x17, [x16, #248]
  401ad8:	add	x16, x16, #0xf8
  401adc:	br	x17

0000000000401ae0 <getpagesize@plt>:
  401ae0:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401ae4:	ldr	x17, [x16, #256]
  401ae8:	add	x16, x16, #0x100
  401aec:	br	x17

0000000000401af0 <close@plt>:
  401af0:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401af4:	ldr	x17, [x16, #264]
  401af8:	add	x16, x16, #0x108
  401afc:	br	x17

0000000000401b00 <strrchr@plt>:
  401b00:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401b04:	ldr	x17, [x16, #272]
  401b08:	add	x16, x16, #0x110
  401b0c:	br	x17

0000000000401b10 <__gmon_start__@plt>:
  401b10:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401b14:	ldr	x17, [x16, #280]
  401b18:	add	x16, x16, #0x118
  401b1c:	br	x17

0000000000401b20 <btowc@plt>:
  401b20:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401b24:	ldr	x17, [x16, #288]
  401b28:	add	x16, x16, #0x120
  401b2c:	br	x17

0000000000401b30 <abort@plt>:
  401b30:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401b34:	ldr	x17, [x16, #296]
  401b38:	add	x16, x16, #0x128
  401b3c:	br	x17

0000000000401b40 <posix_fadvise@plt>:
  401b40:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401b44:	ldr	x17, [x16, #304]
  401b48:	add	x16, x16, #0x130
  401b4c:	br	x17

0000000000401b50 <mbsinit@plt>:
  401b50:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401b54:	ldr	x17, [x16, #312]
  401b58:	add	x16, x16, #0x138
  401b5c:	br	x17

0000000000401b60 <feof@plt>:
  401b60:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401b64:	ldr	x17, [x16, #320]
  401b68:	add	x16, x16, #0x140
  401b6c:	br	x17

0000000000401b70 <memcmp@plt>:
  401b70:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401b74:	ldr	x17, [x16, #328]
  401b78:	add	x16, x16, #0x148
  401b7c:	br	x17

0000000000401b80 <textdomain@plt>:
  401b80:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401b84:	ldr	x17, [x16, #336]
  401b88:	add	x16, x16, #0x150
  401b8c:	br	x17

0000000000401b90 <getopt_long@plt>:
  401b90:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401b94:	ldr	x17, [x16, #344]
  401b98:	add	x16, x16, #0x158
  401b9c:	br	x17

0000000000401ba0 <__fprintf_chk@plt>:
  401ba0:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401ba4:	ldr	x17, [x16, #352]
  401ba8:	add	x16, x16, #0x160
  401bac:	br	x17

0000000000401bb0 <strcmp@plt>:
  401bb0:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401bb4:	ldr	x17, [x16, #360]
  401bb8:	add	x16, x16, #0x168
  401bbc:	br	x17

0000000000401bc0 <__ctype_b_loc@plt>:
  401bc0:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401bc4:	ldr	x17, [x16, #368]
  401bc8:	add	x16, x16, #0x170
  401bcc:	br	x17

0000000000401bd0 <fseeko@plt>:
  401bd0:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401bd4:	ldr	x17, [x16, #376]
  401bd8:	add	x16, x16, #0x178
  401bdc:	br	x17

0000000000401be0 <free@plt>:
  401be0:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401be4:	ldr	x17, [x16, #384]
  401be8:	add	x16, x16, #0x180
  401bec:	br	x17

0000000000401bf0 <__ctype_get_mb_cur_max@plt>:
  401bf0:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401bf4:	ldr	x17, [x16, #392]
  401bf8:	add	x16, x16, #0x188
  401bfc:	br	x17

0000000000401c00 <strchr@plt>:
  401c00:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401c04:	ldr	x17, [x16, #400]
  401c08:	add	x16, x16, #0x190
  401c0c:	br	x17

0000000000401c10 <fflush@plt>:
  401c10:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401c14:	ldr	x17, [x16, #408]
  401c18:	add	x16, x16, #0x198
  401c1c:	br	x17

0000000000401c20 <read@plt>:
  401c20:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401c24:	ldr	x17, [x16, #416]
  401c28:	add	x16, x16, #0x1a0
  401c2c:	br	x17

0000000000401c30 <memchr@plt>:
  401c30:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401c34:	ldr	x17, [x16, #424]
  401c38:	add	x16, x16, #0x1a8
  401c3c:	br	x17

0000000000401c40 <sysconf@plt>:
  401c40:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401c44:	ldr	x17, [x16, #432]
  401c48:	add	x16, x16, #0x1b0
  401c4c:	br	x17

0000000000401c50 <__fxstat@plt>:
  401c50:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401c54:	ldr	x17, [x16, #440]
  401c58:	add	x16, x16, #0x1b8
  401c5c:	br	x17

0000000000401c60 <dcgettext@plt>:
  401c60:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401c64:	ldr	x17, [x16, #448]
  401c68:	add	x16, x16, #0x1c0
  401c6c:	br	x17

0000000000401c70 <fputs_unlocked@plt>:
  401c70:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401c74:	ldr	x17, [x16, #456]
  401c78:	add	x16, x16, #0x1c8
  401c7c:	br	x17

0000000000401c80 <__freading@plt>:
  401c80:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401c84:	ldr	x17, [x16, #464]
  401c88:	add	x16, x16, #0x1d0
  401c8c:	br	x17

0000000000401c90 <iswprint@plt>:
  401c90:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401c94:	ldr	x17, [x16, #472]
  401c98:	add	x16, x16, #0x1d8
  401c9c:	br	x17

0000000000401ca0 <__assert_fail@plt>:
  401ca0:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401ca4:	ldr	x17, [x16, #480]
  401ca8:	add	x16, x16, #0x1e0
  401cac:	br	x17

0000000000401cb0 <__errno_location@plt>:
  401cb0:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401cb4:	ldr	x17, [x16, #488]
  401cb8:	add	x16, x16, #0x1e8
  401cbc:	br	x17

0000000000401cc0 <getenv@plt>:
  401cc0:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401cc4:	ldr	x17, [x16, #496]
  401cc8:	add	x16, x16, #0x1f0
  401ccc:	br	x17

0000000000401cd0 <__xstat@plt>:
  401cd0:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401cd4:	ldr	x17, [x16, #504]
  401cd8:	add	x16, x16, #0x1f8
  401cdc:	br	x17

0000000000401ce0 <__memmove_chk@plt>:
  401ce0:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401ce4:	ldr	x17, [x16, #512]
  401ce8:	add	x16, x16, #0x200
  401cec:	br	x17

0000000000401cf0 <setlocale@plt>:
  401cf0:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401cf4:	ldr	x17, [x16, #520]
  401cf8:	add	x16, x16, #0x208
  401cfc:	br	x17

0000000000401d00 <ferror@plt>:
  401d00:	adrp	x16, 419000 <mbrtowc@GLIBC_2.17>
  401d04:	ldr	x17, [x16, #528]
  401d08:	add	x16, x16, #0x210
  401d0c:	br	x17

Disassembly of section .text:

0000000000401d10 <_obstack_begin@@Base-0x3df8>:
  401d10:	sub	sp, sp, #0x230
  401d14:	stp	x29, x30, [sp]
  401d18:	mov	x29, sp
  401d1c:	stp	x19, x20, [sp, #16]
  401d20:	mov	w20, w0
  401d24:	adrp	x19, 406000 <_obstack_memory_used@@Base+0x318>
  401d28:	ldr	x0, [x1]
  401d2c:	stp	x21, x22, [sp, #32]
  401d30:	mov	x22, x1
  401d34:	stp	x23, x24, [sp, #48]
  401d38:	add	x19, x19, #0x3b7
  401d3c:	adrp	x23, 419000 <_obstack_memory_used@@Base+0x13318>
  401d40:	stp	x25, x26, [sp, #64]
  401d44:	adrp	x24, 419000 <_obstack_memory_used@@Base+0x13318>
  401d48:	adrp	x25, 406000 <_obstack_memory_used@@Base+0x318>
  401d4c:	stp	x27, x28, [sp, #80]
  401d50:	add	x25, x25, #0x497
  401d54:	mov	w21, #0x1                   	// #1
  401d58:	stp	d8, d9, [sp, #96]
  401d5c:	bl	4037ec <ferror@plt+0x1aec>
  401d60:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x318>
  401d64:	mov	w0, #0x6                   	// #6
  401d68:	add	x1, x1, #0xaf2
  401d6c:	bl	401cf0 <setlocale@plt>
  401d70:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x318>
  401d74:	add	x1, x1, #0x45a
  401d78:	mov	x0, x19
  401d7c:	bl	401a60 <bindtextdomain@plt>
  401d80:	mov	x0, x19
  401d84:	add	x19, x23, #0x2d8
  401d88:	bl	401b80 <textdomain@plt>
  401d8c:	adrp	x0, 403000 <ferror@plt+0x1300>
  401d90:	add	x0, x0, #0x4fc
  401d94:	bl	405e90 <_obstack_memory_used@@Base+0x1a8>
  401d98:	bl	401ae0 <getpagesize@plt>
  401d9c:	sxtw	x0, w0
  401da0:	str	x0, [x19, #16]
  401da4:	mov	x3, #0x0                   	// #0
  401da8:	ldr	x0, [x24, #696]
  401dac:	mov	w2, #0x1                   	// #1
  401db0:	mov	x1, #0x0                   	// #0
  401db4:	bl	401990 <setvbuf@plt>
  401db8:	adrp	x0, 406000 <_obstack_memory_used@@Base+0x318>
  401dbc:	add	x0, x0, #0x46c
  401dc0:	bl	401cc0 <getenv@plt>
  401dc4:	cmp	x0, #0x0
  401dc8:	cset	w0, ne  // ne = any
  401dcc:	strb	w0, [x23, #728]
  401dd0:	adrp	x0, 406000 <_obstack_memory_used@@Base+0x318>
  401dd4:	add	x0, x0, #0x608
  401dd8:	add	x26, x0, #0x78
  401ddc:	mov	x23, #0x0                   	// #0
  401de0:	strb	wzr, [x19, #1]
  401de4:	strb	wzr, [x19, #8]
  401de8:	strb	wzr, [x19, #9]
  401dec:	strb	wzr, [x19, #10]
  401df0:	strb	wzr, [x19, #11]
  401df4:	stp	xzr, xzr, [x19, #24]
  401df8:	stp	xzr, xzr, [x19, #40]
  401dfc:	str	xzr, [x19, #56]
  401e00:	str	x0, [sp, #112]
  401e04:	mov	x3, x26
  401e08:	mov	x2, x25
  401e0c:	mov	x1, x22
  401e10:	mov	w0, w20
  401e14:	mov	x4, #0x0                   	// #0
  401e18:	bl	401b90 <getopt_long@plt>
  401e1c:	cmn	w0, #0x1
  401e20:	b.ne	401ee4 <ferror@plt+0x1e4>  // b.any
  401e24:	ldrb	w0, [x19, #1]
  401e28:	cbnz	w0, 401e5c <ferror@plt+0x15c>
  401e2c:	ldrb	w0, [x19, #8]
  401e30:	cbnz	w0, 401e5c <ferror@plt+0x15c>
  401e34:	ldrb	w0, [x19, #9]
  401e38:	cbnz	w0, 401e5c <ferror@plt+0x15c>
  401e3c:	ldrb	w0, [x19, #10]
  401e40:	cbnz	w0, 401e5c <ferror@plt+0x15c>
  401e44:	ldrb	w0, [x19, #11]
  401e48:	cbnz	w0, 401e5c <ferror@plt+0x15c>
  401e4c:	mov	w0, #0x1                   	// #1
  401e50:	strb	w0, [x19, #1]
  401e54:	strb	w0, [x19, #8]
  401e58:	strb	w0, [x19, #10]
  401e5c:	adrp	x21, 419000 <_obstack_memory_used@@Base+0x13318>
  401e60:	ldr	w0, [x21, #688]
  401e64:	cmp	w20, w0
  401e68:	cbz	x23, 40210c <ferror@plt+0x40c>
  401e6c:	b.le	401fac <ferror@plt+0x2ac>
  401e70:	mov	w2, #0x5                   	// #5
  401e74:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x318>
  401e78:	mov	x0, #0x0                   	// #0
  401e7c:	add	x1, x1, #0x49d
  401e80:	bl	401c60 <dcgettext@plt>
  401e84:	mov	x19, x0
  401e88:	ldrsw	x0, [x21, #688]
  401e8c:	ldr	x1, [x22, x0, lsl #3]
  401e90:	mov	w0, #0x4                   	// #4
  401e94:	bl	404b70 <ferror@plt+0x2e70>
  401e98:	mov	x3, x0
  401e9c:	mov	x2, x19
  401ea0:	mov	w1, #0x0                   	// #0
  401ea4:	mov	w0, #0x0                   	// #0
  401ea8:	bl	401940 <error@plt>
  401eac:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x13318>
  401eb0:	mov	w2, #0x5                   	// #5
  401eb4:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x318>
  401eb8:	add	x1, x1, #0x4ae
  401ebc:	ldr	x19, [x0, #672]
  401ec0:	mov	x0, #0x0                   	// #0
  401ec4:	bl	401c60 <dcgettext@plt>
  401ec8:	mov	x3, x0
  401ecc:	adrp	x2, 406000 <_obstack_memory_used@@Base+0x318>
  401ed0:	mov	x0, x19
  401ed4:	add	x2, x2, #0xa18
  401ed8:	mov	w1, #0x1                   	// #1
  401edc:	bl	401ba0 <__fprintf_chk@plt>
  401ee0:	b	401f0c <ferror@plt+0x20c>
  401ee4:	cmp	w0, #0x6c
  401ee8:	b.eq	401f44 <ferror@plt+0x244>  // b.none
  401eec:	b.gt	401f24 <ferror@plt+0x224>
  401ef0:	cmp	w0, #0x4c
  401ef4:	b.eq	401f54 <ferror@plt+0x254>  // b.none
  401ef8:	b.gt	401f14 <ferror@plt+0x214>
  401efc:	cmn	w0, #0x3
  401f00:	b.eq	401f70 <ferror@plt+0x270>  // b.none
  401f04:	cmn	w0, #0x2
  401f08:	b.eq	401f68 <ferror@plt+0x268>  // b.none
  401f0c:	mov	w0, #0x1                   	// #1
  401f10:	b	401f6c <ferror@plt+0x26c>
  401f14:	cmp	w0, #0x63
  401f18:	b.ne	401f0c <ferror@plt+0x20c>  // b.any
  401f1c:	strb	w21, [x19, #10]
  401f20:	b	401e04 <ferror@plt+0x104>
  401f24:	cmp	w0, #0x77
  401f28:	b.eq	401f4c <ferror@plt+0x24c>  // b.none
  401f2c:	cmp	w0, #0x100
  401f30:	b.eq	401f5c <ferror@plt+0x25c>  // b.none
  401f34:	cmp	w0, #0x6d
  401f38:	b.ne	401f0c <ferror@plt+0x20c>  // b.any
  401f3c:	strb	w21, [x19, #9]
  401f40:	b	401e04 <ferror@plt+0x104>
  401f44:	strb	w21, [x19, #1]
  401f48:	b	401e04 <ferror@plt+0x104>
  401f4c:	strb	w21, [x19, #8]
  401f50:	b	401e04 <ferror@plt+0x104>
  401f54:	strb	w21, [x19, #11]
  401f58:	b	401e04 <ferror@plt+0x104>
  401f5c:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x13318>
  401f60:	ldr	x23, [x0, #680]
  401f64:	b	401e04 <ferror@plt+0x104>
  401f68:	mov	w0, #0x0                   	// #0
  401f6c:	bl	403130 <ferror@plt+0x1430>
  401f70:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x13318>
  401f74:	adrp	x5, 406000 <_obstack_memory_used@@Base+0x318>
  401f78:	adrp	x4, 406000 <_obstack_memory_used@@Base+0x318>
  401f7c:	add	x5, x5, #0x47c
  401f80:	ldr	x3, [x0, #552]
  401f84:	add	x4, x4, #0x48c
  401f88:	ldr	x0, [x24, #696]
  401f8c:	adrp	x2, 406000 <_obstack_memory_used@@Base+0x318>
  401f90:	adrp	x1, 405000 <ferror@plt+0x3300>
  401f94:	add	x2, x2, #0x3b3
  401f98:	add	x1, x1, #0xf56
  401f9c:	mov	x6, #0x0                   	// #0
  401fa0:	bl	4054b8 <ferror@plt+0x37b8>
  401fa4:	mov	w0, #0x0                   	// #0
  401fa8:	bl	401930 <exit@plt>
  401fac:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x318>
  401fb0:	mov	x0, x23
  401fb4:	add	x1, x1, #0x832
  401fb8:	bl	401bb0 <strcmp@plt>
  401fbc:	cbnz	w0, 402074 <ferror@plt+0x374>
  401fc0:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x13318>
  401fc4:	ldr	x20, [x0, #704]
  401fc8:	mov	x0, x20
  401fcc:	bl	4019c0 <fileno@plt>
  401fd0:	add	x1, sp, #0x90
  401fd4:	bl	405eb0 <_obstack_memory_used@@Base+0x1c8>
  401fd8:	cbnz	w0, 4020f0 <ferror@plt+0x3f0>
  401fdc:	ldr	w0, [sp, #160]
  401fe0:	and	w0, w0, #0xf000
  401fe4:	cmp	w0, #0x8, lsl #12
  401fe8:	b.ne	4020f0 <ferror@plt+0x3f0>  // b.any
  401fec:	ldr	d8, [sp, #192]
  401ff0:	scvtf	d8, d8
  401ff4:	bl	403768 <ferror@plt+0x1a68>
  401ff8:	fmov	d9, #5.000000000000000000e-01
  401ffc:	adrp	x0, 406000 <_obstack_memory_used@@Base+0x318>
  402000:	fmul	d1, d0, d9
  402004:	ldr	d0, [x0, #1960]
  402008:	fcmpe	d1, d0
  40200c:	b.gt	402018 <ferror@plt+0x318>
  402010:	bl	403768 <ferror@plt+0x1a68>
  402014:	fmul	d0, d0, d9
  402018:	fcmpe	d8, d0
  40201c:	b.hi	4020f0 <ferror@plt+0x3f0>  // b.pmore
  402020:	add	x0, sp, #0x110
  402024:	bl	404e40 <ferror@plt+0x3140>
  402028:	add	x1, sp, #0x110
  40202c:	mov	x0, x20
  402030:	bl	404efc <ferror@plt+0x31fc>
  402034:	ands	w0, w0, #0xff
  402038:	str	w0, [sp, #136]
  40203c:	b.ne	4020cc <ferror@plt+0x3cc>  // b.any
  402040:	mov	w2, #0x5                   	// #5
  402044:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x318>
  402048:	mov	x0, #0x0                   	// #0
  40204c:	add	x1, x1, #0x4fd
  402050:	bl	401c60 <dcgettext@plt>
  402054:	mov	x19, x0
  402058:	mov	x1, x23
  40205c:	mov	w0, #0x4                   	// #4
  402060:	bl	404b70 <ferror@plt+0x2e70>
  402064:	mov	x3, x0
  402068:	mov	x2, x19
  40206c:	mov	w1, #0x0                   	// #0
  402070:	b	4020c4 <ferror@plt+0x3c4>
  402074:	mov	x0, x23
  402078:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x318>
  40207c:	add	x1, x1, #0x529
  402080:	bl	401a00 <fopen@plt>
  402084:	mov	x20, x0
  402088:	cbnz	x0, 401fc8 <ferror@plt+0x2c8>
  40208c:	bl	401cb0 <__errno_location@plt>
  402090:	ldr	w20, [x0]
  402094:	mov	w2, #0x5                   	// #5
  402098:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x318>
  40209c:	mov	x0, #0x0                   	// #0
  4020a0:	add	x1, x1, #0x4e2
  4020a4:	bl	401c60 <dcgettext@plt>
  4020a8:	mov	x19, x0
  4020ac:	mov	x1, x23
  4020b0:	mov	w0, #0x4                   	// #4
  4020b4:	bl	404b70 <ferror@plt+0x2e70>
  4020b8:	mov	x3, x0
  4020bc:	mov	x2, x19
  4020c0:	mov	w1, w20
  4020c4:	mov	w0, #0x1                   	// #1
  4020c8:	bl	401940 <error@plt>
  4020cc:	mov	x0, x20
  4020d0:	bl	4057e4 <ferror@plt+0x3ae4>
  4020d4:	cbnz	w0, 402040 <ferror@plt+0x340>
  4020d8:	ldp	x20, x22, [sp, #272]
  4020dc:	mov	x0, x22
  4020e0:	bl	403388 <ferror@plt+0x1688>
  4020e4:	mov	x21, x0
  4020e8:	cbnz	x21, 40213c <ferror@plt+0x43c>
  4020ec:	bl	4057a0 <ferror@plt+0x3aa0>
  4020f0:	mov	x0, x20
  4020f4:	mov	x22, #0x0                   	// #0
  4020f8:	bl	4033b8 <ferror@plt+0x16b8>
  4020fc:	mov	x20, #0x0                   	// #0
  402100:	mov	x21, x0
  402104:	str	wzr, [sp, #136]
  402108:	b	4020e8 <ferror@plt+0x3e8>
  40210c:	b.le	402130 <ferror@plt+0x430>
  402110:	sub	w20, w20, w0
  402114:	add	x22, x22, w0, sxtw #3
  402118:	sxtw	x20, w20
  40211c:	mov	x0, x22
  402120:	bl	403388 <ferror@plt+0x1688>
  402124:	mov	x21, x0
  402128:	str	wzr, [sp, #136]
  40212c:	b	4020e8 <ferror@plt+0x3e8>
  402130:	add	x22, x19, #0x40
  402134:	mov	x20, #0x1                   	// #1
  402138:	b	40211c <ferror@plt+0x41c>
  40213c:	cmp	x20, #0x0
  402140:	mov	x1, #0x88                  	// #136
  402144:	csinc	x0, x20, xzr, ne  // ne = any
  402148:	bl	4055dc <ferror@plt+0x38dc>
  40214c:	mov	x25, x0
  402150:	cbz	x20, 402214 <ferror@plt+0x514>
  402154:	cmp	x20, #0x1
  402158:	b.ne	402188 <ferror@plt+0x488>  // b.any
  40215c:	ldrb	w1, [x19, #8]
  402160:	ldrb	w0, [x19, #1]
  402164:	add	w0, w0, w1
  402168:	ldrb	w1, [x19, #9]
  40216c:	add	w0, w0, w1
  402170:	ldrb	w1, [x19, #10]
  402174:	add	w0, w0, w1
  402178:	ldrb	w1, [x19, #11]
  40217c:	add	w0, w0, w1
  402180:	cmp	w0, #0x1
  402184:	b.eq	402214 <ferror@plt+0x514>  // b.none
  402188:	adrp	x26, 406000 <_obstack_memory_used@@Base+0x318>
  40218c:	add	x27, x25, #0x8
  402190:	add	x26, x26, #0x832
  402194:	mov	x24, #0x0                   	// #0
  402198:	ldr	x28, [x22, x24, lsl #3]
  40219c:	cbz	x28, 4021b0 <ferror@plt+0x4b0>
  4021a0:	mov	x1, x26
  4021a4:	mov	x0, x28
  4021a8:	bl	401bb0 <strcmp@plt>
  4021ac:	cbnz	w0, 402340 <ferror@plt+0x640>
  4021b0:	mov	x1, x27
  4021b4:	mov	w0, #0x0                   	// #0
  4021b8:	bl	405eb0 <_obstack_memory_used@@Base+0x1c8>
  4021bc:	stur	w0, [x27, #-8]
  4021c0:	add	x24, x24, #0x1
  4021c4:	cmp	x20, x24
  4021c8:	add	x27, x27, #0x88
  4021cc:	b.ne	402198 <ferror@plt+0x498>  // b.any
  4021d0:	ldr	w0, [x25]
  4021d4:	cmp	w0, #0x0
  4021d8:	b.gt	40238c <ferror@plt+0x68c>
  4021dc:	mov	x0, #0x88                  	// #136
  4021e0:	mov	x1, x25
  4021e4:	mov	x2, #0x0                   	// #0
  4021e8:	mov	w3, #0x1                   	// #1
  4021ec:	madd	x0, x20, x0, x25
  4021f0:	cmp	x1, x0
  4021f4:	b.ne	402350 <ferror@plt+0x650>  // b.any
  4021f8:	mov	w0, #0x1                   	// #1
  4021fc:	mov	x1, #0xa                   	// #10
  402200:	cmp	x2, #0x9
  402204:	b.hi	402380 <ferror@plt+0x680>  // b.pmore
  402208:	cmp	w0, w3
  40220c:	csel	w0, w0, w3, ge  // ge = tcont
  402210:	b	40221c <ferror@plt+0x51c>
  402214:	mov	w0, #0x1                   	// #1
  402218:	str	w0, [x25]
  40221c:	adrp	x27, 406000 <_obstack_memory_used@@Base+0x318>
  402220:	add	x27, x27, #0x832
  402224:	mov	x28, #0x0                   	// #0
  402228:	mov	w22, #0x1                   	// #1
  40222c:	str	w0, [x19, #4]
  402230:	adrp	x0, 406000 <_obstack_memory_used@@Base+0x318>
  402234:	add	x0, x0, #0x55c
  402238:	str	x0, [sp, #120]
  40223c:	add	x1, sp, #0x90
  402240:	mov	x0, x21
  402244:	bl	4033ec <ferror@plt+0x16ec>
  402248:	mov	x24, x0
  40224c:	cbnz	x0, 402400 <ferror@plt+0x700>
  402250:	ldr	w0, [sp, #144]
  402254:	cmp	w0, #0x3
  402258:	b.eq	4020ec <ferror@plt+0x3ec>  // b.none
  40225c:	cmp	w0, #0x4
  402260:	b.eq	402394 <ferror@plt+0x694>  // b.none
  402264:	cmp	w0, #0x2
  402268:	b.ne	4023e0 <ferror@plt+0x6e0>  // b.any
  40226c:	cmp	x23, #0x0
  402270:	cset	w0, eq  // eq = none
  402274:	ands	w20, w22, w0
  402278:	b.eq	4022a8 <ferror@plt+0x5a8>  // b.none
  40227c:	mov	x0, x21
  402280:	bl	403490 <ferror@plt+0x1790>
  402284:	cbnz	x0, 4025e8 <ferror@plt+0x8e8>
  402288:	mov	w0, #0x1                   	// #1
  40228c:	mov	x2, x25
  402290:	mov	x3, #0xffffffffffffffff    	// #-1
  402294:	mov	x1, #0x0                   	// #0
  402298:	strb	w0, [x19, #72]
  40229c:	mov	w0, #0x0                   	// #0
  4022a0:	bl	402918 <ferror@plt+0xc18>
  4022a4:	and	w22, w0, #0xff
  4022a8:	ldr	w0, [sp, #136]
  4022ac:	cbz	w0, 4022b8 <ferror@plt+0x5b8>
  4022b0:	add	x0, sp, #0x110
  4022b4:	bl	404ec0 <ferror@plt+0x31c0>
  4022b8:	mov	x0, x21
  4022bc:	bl	403490 <ferror@plt+0x1790>
  4022c0:	cmp	x0, #0x1
  4022c4:	b.ls	402304 <ferror@plt+0x604>  // b.plast
  4022c8:	ldp	x20, x23, [x19, #24]
  4022cc:	mov	w2, #0x5                   	// #5
  4022d0:	ldp	x24, x26, [x19, #40]
  4022d4:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x318>
  4022d8:	ldr	x27, [x19, #56]
  4022dc:	add	x1, x1, #0x5c4
  4022e0:	mov	x0, #0x0                   	// #0
  4022e4:	bl	401c60 <dcgettext@plt>
  4022e8:	mov	x4, x27
  4022ec:	mov	x5, x0
  4022f0:	mov	x3, x26
  4022f4:	mov	x2, x24
  4022f8:	mov	x1, x23
  4022fc:	mov	x0, x20
  402300:	bl	402788 <ferror@plt+0xa88>
  402304:	mov	x0, x21
  402308:	bl	4034b4 <ferror@plt+0x17b4>
  40230c:	mov	x0, x25
  402310:	bl	401be0 <free@plt>
  402314:	ldrb	w0, [x19, #72]
  402318:	cbz	w0, 4025f0 <ferror@plt+0x8f0>
  40231c:	mov	w0, #0x0                   	// #0
  402320:	bl	401af0 <close@plt>
  402324:	cbz	w0, 4025f0 <ferror@plt+0x8f0>
  402328:	bl	401cb0 <__errno_location@plt>
  40232c:	ldr	w1, [x0]
  402330:	adrp	x2, 406000 <_obstack_memory_used@@Base+0x318>
  402334:	mov	w0, #0x1                   	// #1
  402338:	add	x2, x2, #0x832
  40233c:	bl	401940 <error@plt>
  402340:	mov	x1, x27
  402344:	mov	x0, x28
  402348:	bl	405ea0 <_obstack_memory_used@@Base+0x1b8>
  40234c:	b	4021bc <ferror@plt+0x4bc>
  402350:	ldr	w4, [x1]
  402354:	cbnz	w4, 402370 <ferror@plt+0x670>
  402358:	ldr	w4, [x1, #24]
  40235c:	and	w4, w4, #0xf000
  402360:	cmp	w4, #0x8, lsl #12
  402364:	b.ne	402378 <ferror@plt+0x678>  // b.any
  402368:	ldr	x4, [x1, #56]
  40236c:	add	x2, x2, x4
  402370:	add	x1, x1, #0x88
  402374:	b	4021f0 <ferror@plt+0x4f0>
  402378:	mov	w3, #0x7                   	// #7
  40237c:	b	402370 <ferror@plt+0x670>
  402380:	udiv	x2, x2, x1
  402384:	add	w0, w0, #0x1
  402388:	b	402200 <ferror@plt+0x500>
  40238c:	mov	w0, #0x1                   	// #1
  402390:	b	40221c <ferror@plt+0x51c>
  402394:	bl	401cb0 <__errno_location@plt>
  402398:	ldr	w22, [x0]
  40239c:	mov	w2, #0x5                   	// #5
  4023a0:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x318>
  4023a4:	mov	x0, #0x0                   	// #0
  4023a8:	add	x1, x1, #0x51c
  4023ac:	bl	401c60 <dcgettext@plt>
  4023b0:	mov	x20, x0
  4023b4:	mov	x2, x23
  4023b8:	mov	w1, #0x3                   	// #3
  4023bc:	mov	w0, #0x0                   	// #0
  4023c0:	bl	404c18 <ferror@plt+0x2f18>
  4023c4:	mov	w1, w22
  4023c8:	mov	x3, x0
  4023cc:	mov	x2, x20
  4023d0:	mov	w0, #0x0                   	// #0
  4023d4:	mov	w22, #0x0                   	// #0
  4023d8:	bl	401940 <error@plt>
  4023dc:	b	40226c <ferror@plt+0x56c>
  4023e0:	ldr	x0, [sp, #112]
  4023e4:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x318>
  4023e8:	mov	w2, #0x33f                 	// #831
  4023ec:	add	x1, x1, #0x52b
  4023f0:	add	x3, x0, #0x198
  4023f4:	adrp	x0, 406000 <_obstack_memory_used@@Base+0x318>
  4023f8:	add	x0, x0, #0x534
  4023fc:	bl	401ca0 <__assert_fail@plt>
  402400:	cbz	x23, 4024a0 <ferror@plt+0x7a0>
  402404:	mov	x1, x27
  402408:	mov	x0, x23
  40240c:	bl	401bb0 <strcmp@plt>
  402410:	cbnz	w0, 4024a0 <ferror@plt+0x7a0>
  402414:	mov	x1, x27
  402418:	mov	x0, x24
  40241c:	bl	401bb0 <strcmp@plt>
  402420:	cbnz	w0, 4024a0 <ferror@plt+0x7a0>
  402424:	ldr	x1, [sp, #120]
  402428:	mov	w2, #0x5                   	// #5
  40242c:	mov	x0, #0x0                   	// #0
  402430:	bl	401c60 <dcgettext@plt>
  402434:	mov	x26, x0
  402438:	mov	x1, x24
  40243c:	mov	w0, #0x4                   	// #4
  402440:	bl	404b70 <ferror@plt+0x2e70>
  402444:	mov	x3, x0
  402448:	mov	x2, x26
  40244c:	mov	w26, #0x1                   	// #1
  402450:	mov	w1, #0x0                   	// #0
  402454:	mov	w0, #0x0                   	// #0
  402458:	bl	401940 <error@plt>
  40245c:	ldrb	w0, [x24]
  402460:	cbnz	w0, 4024fc <ferror@plt+0x7fc>
  402464:	adrp	x22, 406000 <_obstack_memory_used@@Base+0x318>
  402468:	add	x22, x22, #0x59b
  40246c:	cbnz	x23, 4024a8 <ferror@plt+0x7a8>
  402470:	mov	x1, x22
  402474:	mov	w2, #0x5                   	// #5
  402478:	mov	x0, #0x0                   	// #0
  40247c:	bl	401c60 <dcgettext@plt>
  402480:	adrp	x2, 406000 <_obstack_memory_used@@Base+0x318>
  402484:	mov	x3, x0
  402488:	add	x2, x2, #0x7c5
  40248c:	mov	w1, #0x0                   	// #0
  402490:	mov	w0, #0x0                   	// #0
  402494:	bl	401940 <error@plt>
  402498:	mov	w22, #0x0                   	// #0
  40249c:	b	402548 <ferror@plt+0x848>
  4024a0:	mov	w26, #0x0                   	// #0
  4024a4:	b	40245c <ferror@plt+0x75c>
  4024a8:	mov	x0, x21
  4024ac:	bl	403490 <ferror@plt+0x1790>
  4024b0:	mov	x2, x23
  4024b4:	mov	x26, x0
  4024b8:	mov	w1, #0x3                   	// #3
  4024bc:	mov	w0, #0x0                   	// #0
  4024c0:	bl	404c18 <ferror@plt+0x2f18>
  4024c4:	mov	x24, x0
  4024c8:	mov	x1, x22
  4024cc:	mov	w2, #0x5                   	// #5
  4024d0:	mov	x0, #0x0                   	// #0
  4024d4:	bl	401c60 <dcgettext@plt>
  4024d8:	mov	x4, x26
  4024dc:	mov	x5, x0
  4024e0:	mov	x3, x24
  4024e4:	adrp	x2, 406000 <_obstack_memory_used@@Base+0x318>
  4024e8:	mov	w1, #0x0                   	// #0
  4024ec:	add	x2, x2, #0x5b9
  4024f0:	mov	w0, #0x0                   	// #0
  4024f4:	bl	401940 <error@plt>
  4024f8:	b	402498 <ferror@plt+0x798>
  4024fc:	cbnz	w26, 402498 <ferror@plt+0x798>
  402500:	mov	x2, #0x88                  	// #136
  402504:	cmp	x20, #0x0
  402508:	mov	x1, x27
  40250c:	mov	x0, x24
  402510:	mul	x2, x28, x2
  402514:	csel	x2, x2, xzr, ne  // ne = any
  402518:	add	x2, x25, x2
  40251c:	str	x2, [sp, #128]
  402520:	bl	401bb0 <strcmp@plt>
  402524:	ldr	x2, [sp, #128]
  402528:	cbnz	w0, 40255c <ferror@plt+0x85c>
  40252c:	mov	w1, #0x1                   	// #1
  402530:	mov	x3, #0xffffffffffffffff    	// #-1
  402534:	strb	w1, [x19, #72]
  402538:	mov	x1, x24
  40253c:	bl	402918 <ferror@plt+0xc18>
  402540:	and	w26, w0, #0xff
  402544:	and	w22, w22, w26
  402548:	cbnz	x20, 402554 <ferror@plt+0x854>
  40254c:	mov	w0, #0x1                   	// #1
  402550:	str	w0, [x25]
  402554:	add	x28, x28, #0x1
  402558:	b	40223c <ferror@plt+0x53c>
  40255c:	mov	x0, x24
  402560:	mov	w1, #0x0                   	// #0
  402564:	str	x2, [sp, #128]
  402568:	bl	401a40 <open@plt>
  40256c:	cmn	w0, #0x1
  402570:	ldr	x2, [sp, #128]
  402574:	b.ne	4025b4 <ferror@plt+0x8b4>  // b.any
  402578:	bl	401cb0 <__errno_location@plt>
  40257c:	ldr	w4, [x0]
  402580:	mov	x2, x24
  402584:	mov	w1, #0x3                   	// #3
  402588:	mov	w0, #0x0                   	// #0
  40258c:	str	w4, [sp, #128]
  402590:	bl	404c18 <ferror@plt+0x2f18>
  402594:	mov	x3, x0
  402598:	ldr	w4, [sp, #128]
  40259c:	adrp	x2, 406000 <_obstack_memory_used@@Base+0x318>
  4025a0:	mov	w0, #0x0                   	// #0
  4025a4:	add	x2, x2, #0x7c5
  4025a8:	mov	w1, w4
  4025ac:	bl	401940 <error@plt>
  4025b0:	b	402544 <ferror@plt+0x844>
  4025b4:	mov	x1, x24
  4025b8:	mov	x3, #0x0                   	// #0
  4025bc:	str	w0, [sp, #140]
  4025c0:	bl	402918 <ferror@plt+0xc18>
  4025c4:	ldr	w4, [sp, #140]
  4025c8:	and	w1, w0, #0xff
  4025cc:	str	w1, [sp, #128]
  4025d0:	mov	w0, w4
  4025d4:	bl	401af0 <close@plt>
  4025d8:	ldr	w1, [sp, #128]
  4025dc:	cbnz	w0, 402578 <ferror@plt+0x878>
  4025e0:	mov	w26, w1
  4025e4:	b	402544 <ferror@plt+0x844>
  4025e8:	mov	w22, w20
  4025ec:	b	4022a8 <ferror@plt+0x5a8>
  4025f0:	eor	w0, w22, #0x1
  4025f4:	ldp	x29, x30, [sp]
  4025f8:	ldp	x19, x20, [sp, #16]
  4025fc:	ldp	x21, x22, [sp, #32]
  402600:	ldp	x23, x24, [sp, #48]
  402604:	ldp	x25, x26, [sp, #64]
  402608:	ldp	x27, x28, [sp, #80]
  40260c:	ldp	d8, d9, [sp, #96]
  402610:	add	sp, sp, #0x230
  402614:	ret
  402618:	mov	x29, #0x0                   	// #0
  40261c:	mov	x30, #0x0                   	// #0
  402620:	mov	x5, x0
  402624:	ldr	x1, [sp]
  402628:	add	x2, sp, #0x8
  40262c:	mov	x6, sp
  402630:	movz	x0, #0x0, lsl #48
  402634:	movk	x0, #0x0, lsl #32
  402638:	movk	x0, #0x40, lsl #16
  40263c:	movk	x0, #0x1d10
  402640:	movz	x3, #0x0, lsl #48
  402644:	movk	x3, #0x0, lsl #32
  402648:	movk	x3, #0x40, lsl #16
  40264c:	movk	x3, #0x5e08
  402650:	movz	x4, #0x0, lsl #48
  402654:	movk	x4, #0x0, lsl #32
  402658:	movk	x4, #0x40, lsl #16
  40265c:	movk	x4, #0x5e88
  402660:	bl	401a70 <__libc_start_main@plt>
  402664:	bl	401b30 <abort@plt>
  402668:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x12318>
  40266c:	ldr	x0, [x0, #4064]
  402670:	cbz	x0, 402678 <ferror@plt+0x978>
  402674:	b	401b10 <__gmon_start__@plt>
  402678:	ret
  40267c:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x13318>
  402680:	add	x1, x0, #0x298
  402684:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x13318>
  402688:	add	x0, x0, #0x298
  40268c:	cmp	x1, x0
  402690:	b.eq	4026bc <ferror@plt+0x9bc>  // b.none
  402694:	sub	sp, sp, #0x10
  402698:	adrp	x1, 405000 <ferror@plt+0x3300>
  40269c:	ldr	x1, [x1, #3800]
  4026a0:	str	x1, [sp, #8]
  4026a4:	cbz	x1, 4026b4 <ferror@plt+0x9b4>
  4026a8:	mov	x16, x1
  4026ac:	add	sp, sp, #0x10
  4026b0:	br	x16
  4026b4:	add	sp, sp, #0x10
  4026b8:	ret
  4026bc:	ret
  4026c0:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x13318>
  4026c4:	add	x1, x0, #0x298
  4026c8:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x13318>
  4026cc:	add	x0, x0, #0x298
  4026d0:	sub	x1, x1, x0
  4026d4:	mov	x2, #0x2                   	// #2
  4026d8:	asr	x1, x1, #3
  4026dc:	sdiv	x1, x1, x2
  4026e0:	cbz	x1, 40270c <ferror@plt+0xa0c>
  4026e4:	sub	sp, sp, #0x10
  4026e8:	adrp	x2, 405000 <ferror@plt+0x3300>
  4026ec:	ldr	x2, [x2, #3808]
  4026f0:	str	x2, [sp, #8]
  4026f4:	cbz	x2, 402704 <ferror@plt+0xa04>
  4026f8:	mov	x16, x2
  4026fc:	add	sp, sp, #0x10
  402700:	br	x16
  402704:	add	sp, sp, #0x10
  402708:	ret
  40270c:	ret
  402710:	stp	x29, x30, [sp, #-32]!
  402714:	mov	x29, sp
  402718:	str	x19, [sp, #16]
  40271c:	adrp	x19, 419000 <_obstack_memory_used@@Base+0x13318>
  402720:	ldrb	w0, [x19, #720]
  402724:	cbnz	w0, 402734 <ferror@plt+0xa34>
  402728:	bl	40267c <ferror@plt+0x97c>
  40272c:	mov	w0, #0x1                   	// #1
  402730:	strb	w0, [x19, #720]
  402734:	ldr	x19, [sp, #16]
  402738:	ldp	x29, x30, [sp], #32
  40273c:	ret
  402740:	b	4026c0 <ferror@plt+0x9c0>
  402744:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x13318>
  402748:	ldrb	w1, [x1, #728]
  40274c:	cbnz	w1, 402778 <ferror@plt+0xa78>
  402750:	cmp	w0, #0xa0
  402754:	mov	w1, #0x2007                	// #8199
  402758:	ccmp	w0, w1, #0x4, ne  // ne = any
  40275c:	b.eq	402780 <ferror@plt+0xa80>  // b.none
  402760:	mov	w1, #0x202f                	// #8239
  402764:	cmp	w0, w1
  402768:	mov	w1, #0x2060                	// #8288
  40276c:	ccmp	w0, w1, #0x4, ne  // ne = any
  402770:	cset	w0, eq  // eq = none
  402774:	ret
  402778:	mov	w0, #0x0                   	// #0
  40277c:	b	402774 <ferror@plt+0xa74>
  402780:	mov	w0, #0x1                   	// #1
  402784:	b	402774 <ferror@plt+0xa74>
  402788:	stp	x29, x30, [sp, #-128]!
  40278c:	mov	x29, sp
  402790:	stp	x19, x20, [sp, #16]
  402794:	adrp	x19, 419000 <_obstack_memory_used@@Base+0x13318>
  402798:	add	x19, x19, #0x2d8
  40279c:	stp	x25, x26, [sp, #64]
  4027a0:	mov	x26, x1
  4027a4:	mov	x25, x2
  4027a8:	ldrb	w1, [x19, #1]
  4027ac:	mov	x20, x5
  4027b0:	stp	x21, x22, [sp, #32]
  4027b4:	adrp	x22, 406000 <_obstack_memory_used@@Base+0x318>
  4027b8:	add	x22, x22, #0x608
  4027bc:	stp	x23, x24, [sp, #48]
  4027c0:	mov	x24, x3
  4027c4:	mov	x23, x4
  4027c8:	str	x27, [sp, #80]
  4027cc:	cbz	w1, 402910 <ferror@plt+0xc10>
  4027d0:	ldr	w21, [x19, #4]
  4027d4:	add	x1, sp, #0x68
  4027d8:	bl	403604 <ferror@plt+0x1904>
  4027dc:	mov	x3, x0
  4027e0:	mov	w2, w21
  4027e4:	mov	x21, x22
  4027e8:	add	x1, x22, #0x1
  4027ec:	mov	w0, #0x1                   	// #1
  4027f0:	bl	401a90 <__printf_chk@plt>
  4027f4:	ldrb	w0, [x19, #8]
  4027f8:	cbz	w0, 402824 <ferror@plt+0xb24>
  4027fc:	ldr	w27, [x19, #4]
  402800:	add	x1, sp, #0x68
  402804:	mov	x0, x26
  402808:	bl	403604 <ferror@plt+0x1904>
  40280c:	mov	x1, x21
  402810:	mov	x21, x22
  402814:	mov	x3, x0
  402818:	mov	w2, w27
  40281c:	mov	w0, #0x1                   	// #1
  402820:	bl	401a90 <__printf_chk@plt>
  402824:	ldrb	w0, [x19, #9]
  402828:	cbz	w0, 402854 <ferror@plt+0xb54>
  40282c:	ldr	w26, [x19, #4]
  402830:	add	x1, sp, #0x68
  402834:	mov	x0, x25
  402838:	bl	403604 <ferror@plt+0x1904>
  40283c:	mov	x1, x21
  402840:	mov	x21, x22
  402844:	mov	x3, x0
  402848:	mov	w2, w26
  40284c:	mov	w0, #0x1                   	// #1
  402850:	bl	401a90 <__printf_chk@plt>
  402854:	ldrb	w0, [x19, #10]
  402858:	cbz	w0, 402884 <ferror@plt+0xb84>
  40285c:	ldr	w25, [x19, #4]
  402860:	add	x1, sp, #0x68
  402864:	mov	x0, x24
  402868:	bl	403604 <ferror@plt+0x1904>
  40286c:	mov	x1, x21
  402870:	mov	x21, x22
  402874:	mov	x3, x0
  402878:	mov	w2, w25
  40287c:	mov	w0, #0x1                   	// #1
  402880:	bl	401a90 <__printf_chk@plt>
  402884:	ldrb	w0, [x19, #11]
  402888:	cbz	w0, 4028b0 <ferror@plt+0xbb0>
  40288c:	ldr	w19, [x19, #4]
  402890:	add	x1, sp, #0x68
  402894:	mov	x0, x23
  402898:	bl	403604 <ferror@plt+0x1904>
  40289c:	mov	w2, w19
  4028a0:	mov	x3, x0
  4028a4:	mov	x1, x21
  4028a8:	mov	w0, #0x1                   	// #1
  4028ac:	bl	401a90 <__printf_chk@plt>
  4028b0:	cbz	x20, 4028ec <ferror@plt+0xbec>
  4028b4:	mov	x0, x20
  4028b8:	mov	w1, #0xa                   	// #10
  4028bc:	bl	401c00 <strchr@plt>
  4028c0:	cbz	x0, 4028d8 <ferror@plt+0xbd8>
  4028c4:	mov	x2, x20
  4028c8:	mov	w1, #0x3                   	// #3
  4028cc:	mov	w0, #0x0                   	// #0
  4028d0:	bl	404c18 <ferror@plt+0x2f18>
  4028d4:	mov	x20, x0
  4028d8:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x318>
  4028dc:	mov	x2, x20
  4028e0:	add	x1, x1, #0x7c4
  4028e4:	mov	w0, #0x1                   	// #1
  4028e8:	bl	401a90 <__printf_chk@plt>
  4028ec:	mov	w0, #0xa                   	// #10
  4028f0:	bl	401ab0 <putchar_unlocked@plt>
  4028f4:	ldp	x19, x20, [sp, #16]
  4028f8:	ldp	x21, x22, [sp, #32]
  4028fc:	ldp	x23, x24, [sp, #48]
  402900:	ldp	x25, x26, [sp, #64]
  402904:	ldr	x27, [sp, #80]
  402908:	ldp	x29, x30, [sp], #128
  40290c:	ret
  402910:	add	x21, x22, #0x1
  402914:	b	4027f4 <ferror@plt+0xaf4>
  402918:	mov	x12, #0x40c0                	// #16576
  40291c:	sub	sp, sp, x12
  402920:	stp	x29, x30, [sp]
  402924:	mov	x29, sp
  402928:	stp	x19, x20, [sp, #16]
  40292c:	mov	x20, x2
  402930:	stp	x21, x22, [sp, #32]
  402934:	mov	x21, x3
  402938:	stp	x23, x24, [sp, #48]
  40293c:	stp	x25, x26, [sp, #64]
  402940:	mov	w25, w0
  402944:	stp	x27, x28, [sp, #80]
  402948:	str	x1, [sp, #136]
  40294c:	cbnz	x1, 402a1c <ferror@plt+0xd1c>
  402950:	mov	x0, x1
  402954:	mov	w2, #0x5                   	// #5
  402958:	adrp	x1, 405000 <ferror@plt+0x3300>
  40295c:	add	x1, x1, #0xf47
  402960:	bl	401c60 <dcgettext@plt>
  402964:	mov	x28, x0
  402968:	adrp	x22, 419000 <_obstack_memory_used@@Base+0x13318>
  40296c:	add	x22, x22, #0x2d8
  402970:	bl	401bf0 <__ctype_get_mb_cur_max@plt>
  402974:	cmp	x0, #0x1
  402978:	ldrb	w19, [x22, #10]
  40297c:	b.ls	402a24 <ferror@plt+0xd24>  // b.plast
  402980:	ldrb	w0, [x22, #9]
  402984:	str	w0, [sp, #120]
  402988:	ldrb	w0, [x22, #8]
  40298c:	cbnz	w0, 402a40 <ferror@plt+0xd40>
  402990:	ldrb	w23, [x22, #11]
  402994:	ldr	w1, [sp, #120]
  402998:	eor	w0, w19, #0x1
  40299c:	and	w27, w23, #0x1
  4029a0:	orr	w0, w1, w0
  4029a4:	cbnz	w0, 402a48 <ferror@plt+0xd48>
  4029a8:	ldrb	w0, [x22, #1]
  4029ac:	orr	w0, w0, w27
  4029b0:	cbnz	w0, 402a48 <ferror@plt+0xd48>
  4029b4:	cbnz	w23, 402cfc <ferror@plt+0xffc>
  4029b8:	ldr	w0, [x20]
  4029bc:	cmp	w0, #0x0
  4029c0:	b.le	4029d4 <ferror@plt+0xcd4>
  4029c4:	add	x1, x20, #0x8
  4029c8:	mov	w0, w25
  4029cc:	bl	405eb0 <_obstack_memory_used@@Base+0x1c8>
  4029d0:	str	w0, [x20]
  4029d4:	ldr	w0, [x20]
  4029d8:	cbz	w0, 402ab8 <ferror@plt+0xdb8>
  4029dc:	mov	x21, #0x0                   	// #0
  4029e0:	mov	w0, w25
  4029e4:	mov	w3, #0x2                   	// #2
  4029e8:	mov	x2, #0x0                   	// #0
  4029ec:	mov	x1, #0x0                   	// #0
  4029f0:	bl	4035cc <ferror@plt+0x18cc>
  4029f4:	add	x1, sp, #0xb8
  4029f8:	mov	w0, w25
  4029fc:	mov	x2, #0x4000                	// #16384
  402a00:	bl	405078 <ferror@plt+0x3378>
  402a04:	mov	x20, x0
  402a08:	cbnz	x0, 402b6c <ferror@plt+0xe6c>
  402a0c:	mov	x19, #0x0                   	// #0
  402a10:	mov	x26, #0x0                   	// #0
  402a14:	mov	x23, #0x0                   	// #0
  402a18:	b	402ab0 <ferror@plt+0xdb0>
  402a1c:	ldr	x28, [sp, #136]
  402a20:	b	402968 <ferror@plt+0xc68>
  402a24:	cbnz	w19, 402a38 <ferror@plt+0xd38>
  402a28:	ldrb	w19, [x22, #9]
  402a2c:	and	w19, w19, #0x1
  402a30:	str	wzr, [sp, #120]
  402a34:	b	402988 <ferror@plt+0xc88>
  402a38:	mov	w19, #0x1                   	// #1
  402a3c:	b	402a2c <ferror@plt+0xd2c>
  402a40:	mov	w23, #0x1                   	// #1
  402a44:	b	402994 <ferror@plt+0xc94>
  402a48:	mov	w0, w25
  402a4c:	mov	w3, #0x2                   	// #2
  402a50:	mov	x2, #0x0                   	// #0
  402a54:	mov	x1, #0x0                   	// #0
  402a58:	bl	4035cc <ferror@plt+0x18cc>
  402a5c:	ldr	w0, [sp, #120]
  402a60:	eor	w0, w0, #0x1
  402a64:	tst	w19, w0
  402a68:	b.eq	402a74 <ferror@plt+0xd74>  // b.none
  402a6c:	ldrb	w0, [x22, #1]
  402a70:	cbz	w0, 4029b4 <ferror@plt+0xcb4>
  402a74:	ldr	w0, [sp, #120]
  402a78:	orr	w27, w0, w27
  402a7c:	cbnz	w27, 402cfc <ferror@plt+0xffc>
  402a80:	mov	w26, #0x0                   	// #0
  402a84:	mov	x21, #0x0                   	// #0
  402a88:	mov	x23, #0x0                   	// #0
  402a8c:	mov	x19, #0xf                   	// #15
  402a90:	add	x1, sp, #0xb8
  402a94:	mov	w0, w25
  402a98:	mov	x2, #0x4000                	// #16384
  402a9c:	bl	405078 <ferror@plt+0x3378>
  402aa0:	mov	x20, x0
  402aa4:	cbnz	x0, 402c44 <ferror@plt+0xf44>
  402aa8:	mov	x19, #0x0                   	// #0
  402aac:	mov	x26, #0x0                   	// #0
  402ab0:	mov	w27, #0x1                   	// #1
  402ab4:	b	402bb8 <ferror@plt+0xeb8>
  402ab8:	ldr	w0, [x20, #24]
  402abc:	mov	w1, #0xd000                	// #53248
  402ac0:	and	w0, w0, w1
  402ac4:	cmp	w0, #0x8, lsl #12
  402ac8:	b.ne	4029dc <ferror@plt+0xcdc>  // b.any
  402acc:	ldr	x19, [x20, #56]
  402ad0:	tbnz	x19, #63, 4029dc <ferror@plt+0xcdc>
  402ad4:	cmn	x21, #0x1
  402ad8:	b.ne	402b18 <ferror@plt+0xe18>  // b.any
  402adc:	mov	w0, w25
  402ae0:	mov	w2, #0x1                   	// #1
  402ae4:	mov	x1, #0x0                   	// #0
  402ae8:	bl	4019a0 <lseek@plt>
  402aec:	mov	x21, x0
  402af0:	ldr	x1, [x22, #16]
  402af4:	udiv	x0, x19, x1
  402af8:	msub	x0, x0, x1, x19
  402afc:	cbz	x0, 402b20 <ferror@plt+0xe20>
  402b00:	cmp	x21, x19
  402b04:	b.hi	403124 <ferror@plt+0x1424>  // b.pmore
  402b08:	sub	x21, x19, x21
  402b0c:	mov	x19, #0x0                   	// #0
  402b10:	mov	x20, #0x0                   	// #0
  402b14:	b	402a10 <ferror@plt+0xd10>
  402b18:	mov	x21, #0x0                   	// #0
  402b1c:	b	402af0 <ferror@plt+0xdf0>
  402b20:	ldr	w0, [x20, #64]
  402b24:	add	w1, w0, #0x1
  402b28:	cmp	w0, #0x0
  402b2c:	mov	x0, #0x201                 	// #513
  402b30:	sxtw	x1, w1
  402b34:	csel	x1, x1, x0, gt
  402b38:	cmp	x21, #0x0
  402b3c:	udiv	x0, x19, x1
  402b40:	msub	x1, x0, x1, x19
  402b44:	sub	x19, x19, x1
  402b48:	ccmp	x21, x19, #0x0, ge  // ge = tcont
  402b4c:	b.ge	4029dc <ferror@plt+0xcdc>  // b.tcont
  402b50:	mov	x1, x19
  402b54:	mov	w0, w25
  402b58:	mov	w2, #0x1                   	// #1
  402b5c:	bl	4019a0 <lseek@plt>
  402b60:	tbnz	x0, #63, 4029dc <ferror@plt+0xcdc>
  402b64:	sub	x21, x19, x21
  402b68:	b	4029e0 <ferror@plt+0xce0>
  402b6c:	cmn	x20, #0x1
  402b70:	b.ne	402c3c <ferror@plt+0xf3c>  // b.any
  402b74:	bl	401cb0 <__errno_location@plt>
  402b78:	ldr	w19, [x0]
  402b7c:	mov	x2, x28
  402b80:	mov	w1, #0x3                   	// #3
  402b84:	mov	w0, #0x0                   	// #0
  402b88:	bl	404c18 <ferror@plt+0x2f18>
  402b8c:	mov	w1, w19
  402b90:	mov	x20, #0x0                   	// #0
  402b94:	mov	x26, #0x0                   	// #0
  402b98:	mov	x23, #0x0                   	// #0
  402b9c:	mov	w27, #0x0                   	// #0
  402ba0:	mov	x19, #0x0                   	// #0
  402ba4:	mov	x3, x0
  402ba8:	adrp	x2, 406000 <_obstack_memory_used@@Base+0x318>
  402bac:	mov	w0, #0x0                   	// #0
  402bb0:	add	x2, x2, #0x7c5
  402bb4:	bl	401940 <error@plt>
  402bb8:	ldrb	w0, [x22, #9]
  402bbc:	mov	x3, x21
  402bc0:	ldr	w1, [sp, #120]
  402bc4:	mov	x4, x19
  402bc8:	ldr	x5, [sp, #136]
  402bcc:	cmp	w0, w1
  402bd0:	csel	x20, x20, x21, ls  // ls = plast
  402bd4:	mov	x1, x26
  402bd8:	mov	x0, x23
  402bdc:	mov	x2, x20
  402be0:	bl	402788 <ferror@plt+0xa88>
  402be4:	ldp	x0, x1, [x22, #24]
  402be8:	add	x23, x0, x23
  402bec:	add	x26, x1, x26
  402bf0:	ldp	x0, x1, [x22, #40]
  402bf4:	stp	x23, x26, [x22, #24]
  402bf8:	add	x20, x0, x20
  402bfc:	add	x21, x1, x21
  402c00:	ldr	x0, [x22, #56]
  402c04:	stp	x20, x21, [x22, #40]
  402c08:	cmp	x0, x19
  402c0c:	b.cs	402c14 <ferror@plt+0xf14>  // b.hs, b.nlast
  402c10:	str	x19, [x22, #56]
  402c14:	mov	w0, w27
  402c18:	mov	x12, #0x40c0                	// #16576
  402c1c:	ldp	x29, x30, [sp]
  402c20:	ldp	x19, x20, [sp, #16]
  402c24:	ldp	x21, x22, [sp, #32]
  402c28:	ldp	x23, x24, [sp, #48]
  402c2c:	ldp	x25, x26, [sp, #64]
  402c30:	ldp	x27, x28, [sp, #80]
  402c34:	add	sp, sp, x12
  402c38:	ret
  402c3c:	add	x21, x21, x20
  402c40:	b	4029f4 <ferror@plt+0xcf4>
  402c44:	cmn	x20, #0x1
  402c48:	b.ne	402c8c <ferror@plt+0xf8c>  // b.any
  402c4c:	bl	401cb0 <__errno_location@plt>
  402c50:	ldr	w19, [x0]
  402c54:	mov	x2, x28
  402c58:	mov	w1, #0x3                   	// #3
  402c5c:	mov	w0, #0x0                   	// #0
  402c60:	bl	404c18 <ferror@plt+0x2f18>
  402c64:	mov	w1, w19
  402c68:	mov	x3, x0
  402c6c:	adrp	x2, 406000 <_obstack_memory_used@@Base+0x318>
  402c70:	mov	w0, #0x0                   	// #0
  402c74:	add	x2, x2, #0x7c5
  402c78:	mov	x20, #0x0                   	// #0
  402c7c:	mov	x26, #0x0                   	// #0
  402c80:	mov	x19, #0x0                   	// #0
  402c84:	bl	401940 <error@plt>
  402c88:	b	402bb8 <ferror@plt+0xeb8>
  402c8c:	add	x0, sp, #0xb8
  402c90:	add	x21, x21, x20
  402c94:	add	x3, x0, x20
  402c98:	mov	x24, x23
  402c9c:	cbnz	w26, 402cf4 <ferror@plt+0xff4>
  402ca0:	cmp	x0, x3
  402ca4:	b.ne	402cc0 <ferror@plt+0xfc0>  // b.any
  402ca8:	udiv	x20, x20, x19
  402cac:	sub	x23, x24, x23
  402cb0:	cmp	x23, x20
  402cb4:	mov	x23, x24
  402cb8:	cset	w26, ls  // ls = plast
  402cbc:	b	402a90 <ferror@plt+0xd90>
  402cc0:	ldrb	w1, [x0], #1
  402cc4:	cmp	w1, #0xa
  402cc8:	cinc	x24, x24, eq  // eq = none
  402ccc:	b	402ca0 <ferror@plt+0xfa0>
  402cd0:	add	x0, x0, #0x1
  402cd4:	add	x24, x24, #0x1
  402cd8:	sub	x2, x3, x0
  402cdc:	mov	w1, #0xa                   	// #10
  402ce0:	str	x3, [sp, #104]
  402ce4:	bl	401c30 <memchr@plt>
  402ce8:	ldr	x3, [sp, #104]
  402cec:	cbnz	x0, 402cd0 <ferror@plt+0xfd0>
  402cf0:	b	402ca8 <ferror@plt+0xfa8>
  402cf4:	add	x0, sp, #0xb8
  402cf8:	b	402cd8 <ferror@plt+0xfd8>
  402cfc:	bl	401bf0 <__ctype_get_mb_cur_max@plt>
  402d00:	cmp	x0, #0x1
  402d04:	b.ls	4030fc <ferror@plt+0x13fc>  // b.plast
  402d08:	adrp	x0, 406000 <_obstack_memory_used@@Base+0x318>
  402d0c:	mov	x24, #0x0                   	// #0
  402d10:	add	x0, x0, #0x600
  402d14:	mov	w27, #0x0                   	// #0
  402d18:	mov	x19, #0x0                   	// #0
  402d1c:	mov	x21, #0x0                   	// #0
  402d20:	mov	x20, #0x0                   	// #0
  402d24:	mov	x23, #0x0                   	// #0
  402d28:	str	xzr, [sp, #112]
  402d2c:	str	wzr, [sp, #124]
  402d30:	str	xzr, [sp, #128]
  402d34:	str	x0, [sp, #144]
  402d38:	str	xzr, [sp, #176]
  402d3c:	add	x0, sp, #0xb8
  402d40:	mov	x2, #0x4000                	// #16384
  402d44:	add	x1, x0, x24
  402d48:	sub	x2, x2, x24
  402d4c:	mov	w0, w25
  402d50:	bl	405078 <ferror@plt+0x3378>
  402d54:	cbnz	x0, 402d60 <ferror@plt+0x1060>
  402d58:	mov	w27, #0x1                   	// #1
  402d5c:	b	402d9c <ferror@plt+0x109c>
  402d60:	cmn	x0, #0x1
  402d64:	b.ne	402db8 <ferror@plt+0x10b8>  // b.any
  402d68:	bl	401cb0 <__errno_location@plt>
  402d6c:	ldr	w24, [x0]
  402d70:	mov	x2, x28
  402d74:	mov	w1, #0x3                   	// #3
  402d78:	mov	w0, #0x0                   	// #0
  402d7c:	bl	404c18 <ferror@plt+0x2f18>
  402d80:	adrp	x2, 406000 <_obstack_memory_used@@Base+0x318>
  402d84:	mov	x3, x0
  402d88:	add	x2, x2, #0x7c5
  402d8c:	mov	w1, w24
  402d90:	mov	w27, #0x0                   	// #0
  402d94:	mov	w0, #0x0                   	// #0
  402d98:	bl	401940 <error@plt>
  402d9c:	ldr	x0, [sp, #112]
  402da0:	ldr	x1, [sp, #128]
  402da4:	cmp	x0, x19
  402da8:	csel	x19, x0, x19, cs  // cs = hs, nlast
  402dac:	ldrb	w0, [sp, #124]
  402db0:	add	x26, x1, w0, uxtb
  402db4:	b	402bb8 <ferror@plt+0xeb8>
  402db8:	add	x21, x21, x0
  402dbc:	add	x24, x24, x0
  402dc0:	add	x26, sp, #0xb8
  402dc4:	cbnz	w27, 402e28 <ferror@plt+0x1128>
  402dc8:	ldrb	w1, [x26]
  402dcc:	str	w1, [sp, #104]
  402dd0:	mov	w0, w1
  402dd4:	bl	4036d4 <ferror@plt+0x19d4>
  402dd8:	tst	w0, #0xff
  402ddc:	b.eq	402e28 <ferror@plt+0x1128>  // b.none
  402de0:	ldr	w1, [sp, #104]
  402de4:	str	wzr, [sp, #152]
  402de8:	str	w1, [sp, #172]
  402dec:	mov	x0, #0x1                   	// #1
  402df0:	str	x0, [sp, #104]
  402df4:	ldr	w1, [sp, #172]
  402df8:	cmp	w1, #0xd
  402dfc:	b.hi	402eac <ferror@plt+0x11ac>  // b.pmore
  402e00:	cmp	w1, #0x8
  402e04:	b.ls	402eb4 <ferror@plt+0x11b4>  // b.plast
  402e08:	sub	w1, w1, #0xa
  402e0c:	cmp	w1, #0x3
  402e10:	b.hi	402f58 <ferror@plt+0x1258>  // b.pmore
  402e14:	ldr	x0, [sp, #144]
  402e18:	ldrb	w0, [x0, w1, uxtw]
  402e1c:	adr	x1, 402e28 <ferror@plt+0x1128>
  402e20:	add	x0, x1, w0, sxtb #2
  402e24:	br	x0
  402e28:	add	x3, sp, #0xb0
  402e2c:	mov	x2, x24
  402e30:	mov	x1, x26
  402e34:	add	x0, sp, #0xac
  402e38:	ldr	x27, [sp, #176]
  402e3c:	bl	405958 <ferror@plt+0x3c58>
  402e40:	str	x0, [sp, #104]
  402e44:	cmn	x0, #0x2
  402e48:	b.ne	402e5c <ferror@plt+0x115c>  // b.any
  402e4c:	str	x27, [sp, #176]
  402e50:	cbnz	x24, 402f94 <ferror@plt+0x1294>
  402e54:	mov	w27, #0x1                   	// #1
  402e58:	b	402d3c <ferror@plt+0x103c>
  402e5c:	ldr	x0, [sp, #104]
  402e60:	cmn	x0, #0x1
  402e64:	b.ne	402e7c <ferror@plt+0x117c>  // b.any
  402e68:	add	x26, x26, #0x1
  402e6c:	sub	x24, x24, #0x1
  402e70:	mov	w27, #0x1                   	// #1
  402e74:	cbnz	x24, 402dc4 <ferror@plt+0x10c4>
  402e78:	b	402d3c <ferror@plt+0x103c>
  402e7c:	add	x0, sp, #0xb0
  402e80:	bl	401b50 <mbsinit@plt>
  402e84:	cmp	w0, #0x0
  402e88:	cset	w0, eq  // eq = none
  402e8c:	str	w0, [sp, #152]
  402e90:	ldr	x0, [sp, #104]
  402e94:	cbnz	x0, 402ea4 <ferror@plt+0x11a4>
  402e98:	mov	w27, #0x1                   	// #1
  402e9c:	str	wzr, [sp, #172]
  402ea0:	b	402dec <ferror@plt+0x10ec>
  402ea4:	mov	w27, #0x1                   	// #1
  402ea8:	b	402df4 <ferror@plt+0x10f4>
  402eac:	cmp	w1, #0x20
  402eb0:	b.eq	402f64 <ferror@plt+0x1264>  // b.none
  402eb4:	cbz	w27, 402f6c <ferror@plt+0x126c>
  402eb8:	mov	w0, w1
  402ebc:	str	w1, [sp, #156]
  402ec0:	bl	401c90 <iswprint@plt>
  402ec4:	cbz	w0, 402f40 <ferror@plt+0x1240>
  402ec8:	ldrb	w0, [x22, #11]
  402ecc:	ldr	w1, [sp, #156]
  402ed0:	cbz	w0, 402ee8 <ferror@plt+0x11e8>
  402ed4:	mov	w0, w1
  402ed8:	bl	401a20 <wcwidth@plt>
  402edc:	cmp	w0, #0x0
  402ee0:	b.le	402ee8 <ferror@plt+0x11e8>
  402ee4:	add	x19, x19, w0, sxtw
  402ee8:	ldr	w1, [sp, #172]
  402eec:	str	w1, [sp, #156]
  402ef0:	mov	w0, w1
  402ef4:	bl	4019e0 <iswspace@plt>
  402ef8:	cbnz	w0, 402f2c <ferror@plt+0x122c>
  402efc:	ldr	w1, [sp, #156]
  402f00:	mov	w0, w1
  402f04:	bl	402744 <ferror@plt+0xa44>
  402f08:	cbnz	w0, 402f2c <ferror@plt+0x122c>
  402f0c:	str	w27, [sp, #124]
  402f10:	b	402f40 <ferror@plt+0x1240>
  402f14:	add	x23, x23, #0x1
  402f18:	ldr	x0, [sp, #112]
  402f1c:	cmp	x0, x19
  402f20:	csel	x0, x0, x19, cs  // cs = hs, nlast
  402f24:	mov	x19, #0x0                   	// #0
  402f28:	str	x0, [sp, #112]
  402f2c:	ldr	x1, [sp, #128]
  402f30:	ldrb	w0, [sp, #124]
  402f34:	str	wzr, [sp, #124]
  402f38:	add	x0, x1, w0, uxtb
  402f3c:	str	x0, [sp, #128]
  402f40:	ldr	x0, [sp, #104]
  402f44:	add	x20, x20, #0x1
  402f48:	ldr	w27, [sp, #152]
  402f4c:	add	x26, x26, x0
  402f50:	sub	x24, x24, x0
  402f54:	b	402e74 <ferror@plt+0x1174>
  402f58:	and	x19, x19, #0xfffffffffffffff8
  402f5c:	add	x19, x19, #0x8
  402f60:	b	402f2c <ferror@plt+0x122c>
  402f64:	add	x19, x19, #0x1
  402f68:	b	402f2c <ferror@plt+0x122c>
  402f6c:	bl	401bc0 <__ctype_b_loc@plt>
  402f70:	ldrb	w1, [x26]
  402f74:	ldr	x0, [x0]
  402f78:	ldrh	w0, [x0, x1, lsl #1]
  402f7c:	tbz	w0, #14, 402f40 <ferror@plt+0x1240>
  402f80:	add	x19, x19, #0x1
  402f84:	tbnz	w0, #13, 402f2c <ferror@plt+0x122c>
  402f88:	mov	w0, #0x1                   	// #1
  402f8c:	str	w0, [sp, #124]
  402f90:	b	402f40 <ferror@plt+0x1240>
  402f94:	cmp	x24, #0x4, lsl #12
  402f98:	b.ne	402fa4 <ferror@plt+0x12a4>  // b.any
  402f9c:	add	x26, x26, #0x1
  402fa0:	mov	x24, #0x3fff                	// #16383
  402fa4:	mov	x2, x24
  402fa8:	mov	x1, x26
  402fac:	add	x0, sp, #0xb8
  402fb0:	mov	x3, #0x4001                	// #16385
  402fb4:	bl	401ce0 <__memmove_chk@plt>
  402fb8:	b	402e54 <ferror@plt+0x1154>
  402fbc:	cmn	x27, #0x1
  402fc0:	b.ne	403010 <ferror@plt+0x1310>  // b.any
  402fc4:	bl	401cb0 <__errno_location@plt>
  402fc8:	ldr	w25, [x0]
  402fcc:	mov	x2, x28
  402fd0:	mov	w1, #0x3                   	// #3
  402fd4:	mov	w0, #0x0                   	// #0
  402fd8:	bl	404c18 <ferror@plt+0x2f18>
  402fdc:	adrp	x2, 406000 <_obstack_memory_used@@Base+0x318>
  402fe0:	mov	x3, x0
  402fe4:	add	x2, x2, #0x7c5
  402fe8:	mov	w1, w25
  402fec:	mov	w27, #0x0                   	// #0
  402ff0:	mov	w0, #0x0                   	// #0
  402ff4:	bl	401940 <error@plt>
  402ff8:	and	x20, x20, #0xff
  402ffc:	cmp	x24, x19
  403000:	add	x26, x20, x26
  403004:	csel	x19, x24, x19, cs  // cs = hs, nlast
  403008:	mov	x20, #0x0                   	// #0
  40300c:	b	402bb8 <ferror@plt+0xeb8>
  403010:	add	x21, x21, x27
  403014:	mov	x3, #0x0                   	// #0
  403018:	add	x0, sp, #0xb8
  40301c:	ldrb	w1, [x0, x3]
  403020:	cmp	w1, #0xd
  403024:	b.hi	403050 <ferror@plt+0x1350>  // b.pmore
  403028:	cmp	w1, #0x8
  40302c:	b.ls	403058 <ferror@plt+0x1358>  // b.plast
  403030:	sub	w1, w1, #0xa
  403034:	cmp	w1, #0x3
  403038:	b.hi	4030e8 <ferror@plt+0x13e8>  // b.pmore
  40303c:	ldr	x0, [sp, #104]
  403040:	ldrb	w0, [x0, w1, uxtw]
  403044:	adr	x1, 403050 <ferror@plt+0x1350>
  403048:	add	x0, x1, w0, sxtb #2
  40304c:	br	x0
  403050:	cmp	w1, #0x20
  403054:	b.eq	4030f4 <ferror@plt+0x13f4>  // b.none
  403058:	str	x3, [sp, #112]
  40305c:	str	w1, [sp, #124]
  403060:	bl	401bc0 <__ctype_b_loc@plt>
  403064:	ldr	w1, [sp, #124]
  403068:	ldr	x0, [x0]
  40306c:	ubfiz	x4, x1, #1, #8
  403070:	ldr	x3, [sp, #112]
  403074:	ldrh	w0, [x0, x4]
  403078:	tbz	w0, #14, 4030bc <ferror@plt+0x13bc>
  40307c:	add	x19, x19, #0x1
  403080:	tbnz	w0, #13, 4030b0 <ferror@plt+0x13b0>
  403084:	mov	w0, w1
  403088:	bl	401b20 <btowc@plt>
  40308c:	bl	402744 <ferror@plt+0xa44>
  403090:	ldr	x3, [sp, #112]
  403094:	cbnz	w0, 4030b0 <ferror@plt+0x13b0>
  403098:	mov	w20, #0x1                   	// #1
  40309c:	b	4030bc <ferror@plt+0x13bc>
  4030a0:	add	x23, x23, #0x1
  4030a4:	cmp	x24, x19
  4030a8:	csel	x24, x24, x19, cs  // cs = hs, nlast
  4030ac:	mov	x19, #0x0                   	// #0
  4030b0:	and	x20, x20, #0xff
  4030b4:	add	x26, x26, x20
  4030b8:	mov	w20, #0x0                   	// #0
  4030bc:	add	x3, x3, #0x1
  4030c0:	cmp	x3, x27
  4030c4:	b.ne	403018 <ferror@plt+0x1318>  // b.any
  4030c8:	add	x1, sp, #0xb8
  4030cc:	mov	w0, w25
  4030d0:	mov	x2, #0x4000                	// #16384
  4030d4:	bl	405078 <ferror@plt+0x3378>
  4030d8:	mov	x27, x0
  4030dc:	cbnz	x0, 402fbc <ferror@plt+0x12bc>
  4030e0:	mov	w27, #0x1                   	// #1
  4030e4:	b	402ff8 <ferror@plt+0x12f8>
  4030e8:	and	x19, x19, #0xfffffffffffffff8
  4030ec:	add	x19, x19, #0x8
  4030f0:	b	4030b0 <ferror@plt+0x13b0>
  4030f4:	add	x19, x19, #0x1
  4030f8:	b	4030b0 <ferror@plt+0x13b0>
  4030fc:	adrp	x27, 406000 <_obstack_memory_used@@Base+0x318>
  403100:	mov	x19, #0x0                   	// #0
  403104:	add	x0, x27, #0x604
  403108:	mov	w20, #0x0                   	// #0
  40310c:	mov	x24, #0x0                   	// #0
  403110:	mov	x21, #0x0                   	// #0
  403114:	mov	x26, #0x0                   	// #0
  403118:	mov	x23, #0x0                   	// #0
  40311c:	str	x0, [sp, #104]
  403120:	b	4030c8 <ferror@plt+0x13c8>
  403124:	mov	x19, #0x0                   	// #0
  403128:	mov	x21, #0x0                   	// #0
  40312c:	b	402b10 <ferror@plt+0xe10>
  403130:	stp	x29, x30, [sp, #-176]!
  403134:	mov	x29, sp
  403138:	stp	x19, x20, [sp, #16]
  40313c:	adrp	x19, 419000 <_obstack_memory_used@@Base+0x13318>
  403140:	stp	x21, x22, [sp, #32]
  403144:	mov	w22, w0
  403148:	str	x23, [sp, #48]
  40314c:	cbz	w0, 403188 <ferror@plt+0x1488>
  403150:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x13318>
  403154:	mov	w2, #0x5                   	// #5
  403158:	adrp	x1, 405000 <ferror@plt+0x3300>
  40315c:	add	x1, x1, #0xf59
  403160:	ldr	x20, [x0, #672]
  403164:	mov	x0, #0x0                   	// #0
  403168:	bl	401c60 <dcgettext@plt>
  40316c:	mov	x2, x0
  403170:	ldr	x3, [x19, #824]
  403174:	mov	x0, x20
  403178:	mov	w1, #0x1                   	// #1
  40317c:	bl	401ba0 <__fprintf_chk@plt>
  403180:	mov	w0, w22
  403184:	bl	401930 <exit@plt>
  403188:	mov	w2, #0x5                   	// #5
  40318c:	adrp	x1, 405000 <ferror@plt+0x3300>
  403190:	mov	x0, #0x0                   	// #0
  403194:	add	x1, x1, #0xf80
  403198:	bl	401c60 <dcgettext@plt>
  40319c:	adrp	x20, 419000 <_obstack_memory_used@@Base+0x13318>
  4031a0:	ldr	x3, [x19, #824]
  4031a4:	mov	x1, x0
  4031a8:	mov	w0, #0x1                   	// #1
  4031ac:	adrp	x21, 405000 <ferror@plt+0x3300>
  4031b0:	mov	x2, x3
  4031b4:	add	x19, sp, #0x40
  4031b8:	bl	401a90 <__printf_chk@plt>
  4031bc:	add	x21, x21, #0xf56
  4031c0:	mov	w2, #0x5                   	// #5
  4031c4:	adrp	x1, 405000 <ferror@plt+0x3300>
  4031c8:	mov	x0, #0x0                   	// #0
  4031cc:	add	x1, x1, #0xfc7
  4031d0:	bl	401c60 <dcgettext@plt>
  4031d4:	ldr	x1, [x20, #696]
  4031d8:	bl	401c70 <fputs_unlocked@plt>
  4031dc:	mov	w2, #0x5                   	// #5
  4031e0:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x318>
  4031e4:	mov	x0, #0x0                   	// #0
  4031e8:	add	x1, x1, #0x7f
  4031ec:	bl	401c60 <dcgettext@plt>
  4031f0:	ldr	x1, [x20, #696]
  4031f4:	bl	401c70 <fputs_unlocked@plt>
  4031f8:	mov	w2, #0x5                   	// #5
  4031fc:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x318>
  403200:	mov	x0, #0x0                   	// #0
  403204:	add	x1, x1, #0xb7
  403208:	bl	401c60 <dcgettext@plt>
  40320c:	ldr	x1, [x20, #696]
  403210:	bl	401c70 <fputs_unlocked@plt>
  403214:	mov	w2, #0x5                   	// #5
  403218:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x318>
  40321c:	mov	x0, #0x0                   	// #0
  403220:	add	x1, x1, #0x1e4
  403224:	bl	401c60 <dcgettext@plt>
  403228:	ldr	x1, [x20, #696]
  40322c:	bl	401c70 <fputs_unlocked@plt>
  403230:	mov	w2, #0x5                   	// #5
  403234:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x318>
  403238:	mov	x0, #0x0                   	// #0
  40323c:	add	x1, x1, #0x311
  403240:	bl	401c60 <dcgettext@plt>
  403244:	ldr	x1, [x20, #696]
  403248:	bl	401c70 <fputs_unlocked@plt>
  40324c:	mov	w2, #0x5                   	// #5
  403250:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x318>
  403254:	mov	x0, #0x0                   	// #0
  403258:	add	x1, x1, #0x33e
  40325c:	bl	401c60 <dcgettext@plt>
  403260:	ldr	x1, [x20, #696]
  403264:	bl	401c70 <fputs_unlocked@plt>
  403268:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x318>
  40326c:	add	x1, x1, #0x608
  403270:	add	x1, x1, #0x8
  403274:	add	x0, sp, #0x40
  403278:	mov	x2, #0x70                  	// #112
  40327c:	bl	4018f0 <memcpy@plt>
  403280:	ldr	x1, [x19]
  403284:	cbnz	x1, 403340 <ferror@plt+0x1640>
  403288:	ldr	x19, [x19, #8]
  40328c:	mov	w2, #0x5                   	// #5
  403290:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x318>
  403294:	mov	x0, #0x0                   	// #0
  403298:	cmp	x19, #0x0
  40329c:	add	x1, x1, #0x374
  4032a0:	csel	x19, x19, x21, ne  // ne = any
  4032a4:	adrp	x23, 406000 <_obstack_memory_used@@Base+0x318>
  4032a8:	add	x23, x23, #0x38b
  4032ac:	bl	401c60 <dcgettext@plt>
  4032b0:	mov	x1, x0
  4032b4:	mov	x3, x23
  4032b8:	adrp	x2, 406000 <_obstack_memory_used@@Base+0x318>
  4032bc:	add	x2, x2, #0x3b3
  4032c0:	mov	w0, #0x1                   	// #1
  4032c4:	bl	401a90 <__printf_chk@plt>
  4032c8:	mov	x1, #0x0                   	// #0
  4032cc:	mov	w0, #0x5                   	// #5
  4032d0:	bl	401cf0 <setlocale@plt>
  4032d4:	cbnz	x0, 403354 <ferror@plt+0x1654>
  4032d8:	mov	w2, #0x5                   	// #5
  4032dc:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x318>
  4032e0:	mov	x0, #0x0                   	// #0
  4032e4:	add	x1, x1, #0x40c
  4032e8:	bl	401c60 <dcgettext@plt>
  4032ec:	mov	x1, x0
  4032f0:	mov	x3, x21
  4032f4:	mov	x2, x23
  4032f8:	mov	w0, #0x1                   	// #1
  4032fc:	bl	401a90 <__printf_chk@plt>
  403300:	mov	w2, #0x5                   	// #5
  403304:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x318>
  403308:	mov	x0, #0x0                   	// #0
  40330c:	add	x1, x1, #0x427
  403310:	bl	401c60 <dcgettext@plt>
  403314:	mov	x1, x0
  403318:	cmp	x19, x21
  40331c:	adrp	x2, 406000 <_obstack_memory_used@@Base+0x318>
  403320:	adrp	x3, 405000 <ferror@plt+0x3300>
  403324:	add	x2, x2, #0xaf2
  403328:	add	x3, x3, #0xf04
  40332c:	mov	w0, #0x1                   	// #1
  403330:	csel	x3, x3, x2, eq  // eq = none
  403334:	mov	x2, x19
  403338:	bl	401a90 <__printf_chk@plt>
  40333c:	b	403180 <ferror@plt+0x1480>
  403340:	mov	x0, x21
  403344:	bl	401bb0 <strcmp@plt>
  403348:	cbz	w0, 403288 <ferror@plt+0x1588>
  40334c:	add	x19, x19, #0x10
  403350:	b	403280 <ferror@plt+0x1580>
  403354:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x318>
  403358:	mov	x2, #0x3                   	// #3
  40335c:	add	x1, x1, #0x3c1
  403360:	bl	401a50 <strncmp@plt>
  403364:	cbz	w0, 4032d8 <ferror@plt+0x15d8>
  403368:	mov	w2, #0x5                   	// #5
  40336c:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x318>
  403370:	mov	x0, #0x0                   	// #0
  403374:	add	x1, x1, #0x3c5
  403378:	bl	401c60 <dcgettext@plt>
  40337c:	ldr	x1, [x20, #696]
  403380:	bl	401c70 <fputs_unlocked@plt>
  403384:	b	4032d8 <ferror@plt+0x15d8>
  403388:	stp	x29, x30, [sp, #-32]!
  40338c:	mov	x29, sp
  403390:	str	x19, [sp, #16]
  403394:	mov	x19, x0
  403398:	mov	x0, #0x30                  	// #48
  40339c:	bl	401a10 <malloc@plt>
  4033a0:	cbz	x0, 4033ac <ferror@plt+0x16ac>
  4033a4:	str	xzr, [x0]
  4033a8:	stp	x19, x19, [x0, #32]
  4033ac:	ldr	x19, [sp, #16]
  4033b0:	ldp	x29, x30, [sp], #32
  4033b4:	ret
  4033b8:	stp	x29, x30, [sp, #-32]!
  4033bc:	mov	x29, sp
  4033c0:	str	x19, [sp, #16]
  4033c4:	mov	x19, x0
  4033c8:	mov	x0, #0x30                  	// #48
  4033cc:	bl	401a10 <malloc@plt>
  4033d0:	cbz	x0, 4033e0 <ferror@plt+0x16e0>
  4033d4:	stp	x19, xzr, [x0]
  4033d8:	stp	xzr, xzr, [x0, #16]
  4033dc:	str	xzr, [x0, #32]
  4033e0:	ldr	x19, [sp, #16]
  4033e4:	ldp	x29, x30, [sp], #32
  4033e8:	ret
  4033ec:	stp	x29, x30, [sp, #-32]!
  4033f0:	mov	x29, sp
  4033f4:	ldr	x3, [x0]
  4033f8:	stp	x19, x20, [sp, #16]
  4033fc:	mov	x19, x0
  403400:	mov	x20, x1
  403404:	cbz	x3, 403464 <ferror@plt+0x1764>
  403408:	add	x1, x0, #0x18
  40340c:	mov	w2, #0x0                   	// #0
  403410:	add	x0, x0, #0x10
  403414:	bl	401a30 <getdelim@plt>
  403418:	tbz	x0, #63, 403448 <ferror@plt+0x1748>
  40341c:	ldr	x0, [x19]
  403420:	bl	401b60 <feof@plt>
  403424:	cmp	w0, #0x0
  403428:	mov	w1, #0x4                   	// #4
  40342c:	mov	w0, #0x2                   	// #2
  403430:	csel	w0, w0, w1, ne  // ne = any
  403434:	str	w0, [x20]
  403438:	mov	x0, #0x0                   	// #0
  40343c:	ldp	x19, x20, [sp, #16]
  403440:	ldp	x29, x30, [sp], #32
  403444:	ret
  403448:	mov	w0, #0x1                   	// #1
  40344c:	str	w0, [x20]
  403450:	ldr	x0, [x19, #8]
  403454:	add	x0, x0, #0x1
  403458:	str	x0, [x19, #8]
  40345c:	ldr	x0, [x19, #16]
  403460:	b	40343c <ferror@plt+0x173c>
  403464:	ldr	x1, [x0, #40]
  403468:	ldr	x0, [x1]
  40346c:	cbnz	x0, 40347c <ferror@plt+0x177c>
  403470:	mov	w1, #0x2                   	// #2
  403474:	str	w1, [x20]
  403478:	b	40343c <ferror@plt+0x173c>
  40347c:	mov	w2, #0x1                   	// #1
  403480:	str	w2, [x20]
  403484:	add	x1, x1, #0x8
  403488:	str	x1, [x19, #40]
  40348c:	b	40343c <ferror@plt+0x173c>
  403490:	ldr	x1, [x0]
  403494:	cbz	x1, 4034a0 <ferror@plt+0x17a0>
  403498:	ldr	x0, [x0, #8]
  40349c:	ret
  4034a0:	ldr	x1, [x0, #40]
  4034a4:	ldr	x0, [x0, #32]
  4034a8:	sub	x0, x1, x0
  4034ac:	asr	x0, x0, #3
  4034b0:	b	40349c <ferror@plt+0x179c>
  4034b4:	stp	x29, x30, [sp, #-32]!
  4034b8:	mov	x29, sp
  4034bc:	str	x19, [sp, #16]
  4034c0:	mov	x19, x0
  4034c4:	ldr	x0, [x0]
  4034c8:	cbz	x0, 4034d4 <ferror@plt+0x17d4>
  4034cc:	ldr	x0, [x19, #16]
  4034d0:	bl	401be0 <free@plt>
  4034d4:	mov	x0, x19
  4034d8:	ldr	x19, [sp, #16]
  4034dc:	ldp	x29, x30, [sp], #32
  4034e0:	b	401be0 <free@plt>
  4034e4:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x13318>
  4034e8:	str	x0, [x1, #808]
  4034ec:	ret
  4034f0:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x13318>
  4034f4:	strb	w0, [x1, #816]
  4034f8:	ret
  4034fc:	stp	x29, x30, [sp, #-48]!
  403500:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x13318>
  403504:	mov	x29, sp
  403508:	ldr	x0, [x0, #696]
  40350c:	stp	x19, x20, [sp, #16]
  403510:	stp	x21, x22, [sp, #32]
  403514:	bl	405d0c <_obstack_memory_used@@Base+0x24>
  403518:	cbz	w0, 4035ac <ferror@plt+0x18ac>
  40351c:	adrp	x21, 419000 <_obstack_memory_used@@Base+0x13318>
  403520:	add	x0, x21, #0x328
  403524:	ldrb	w22, [x0, #8]
  403528:	bl	401cb0 <__errno_location@plt>
  40352c:	mov	x19, x0
  403530:	cbz	w22, 403540 <ferror@plt+0x1840>
  403534:	ldr	w0, [x0]
  403538:	cmp	w0, #0x20
  40353c:	b.eq	4035ac <ferror@plt+0x18ac>  // b.none
  403540:	mov	w2, #0x5                   	// #5
  403544:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x318>
  403548:	mov	x0, #0x0                   	// #0
  40354c:	add	x1, x1, #0x7b5
  403550:	bl	401c60 <dcgettext@plt>
  403554:	mov	x20, x0
  403558:	ldr	x0, [x21, #808]
  40355c:	cbz	x0, 403590 <ferror@plt+0x1890>
  403560:	ldr	w19, [x19]
  403564:	bl	404c08 <ferror@plt+0x2f08>
  403568:	adrp	x2, 406000 <_obstack_memory_used@@Base+0x318>
  40356c:	mov	x3, x0
  403570:	mov	x4, x20
  403574:	add	x2, x2, #0x7c1
  403578:	mov	w1, w19
  40357c:	mov	w0, #0x0                   	// #0
  403580:	bl	401940 <error@plt>
  403584:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x13318>
  403588:	ldr	w0, [x0, #560]
  40358c:	bl	401900 <_exit@plt>
  403590:	ldr	w1, [x19]
  403594:	mov	x3, x20
  403598:	adrp	x2, 406000 <_obstack_memory_used@@Base+0x318>
  40359c:	mov	w0, #0x0                   	// #0
  4035a0:	add	x2, x2, #0x7c5
  4035a4:	bl	401940 <error@plt>
  4035a8:	b	403584 <ferror@plt+0x1884>
  4035ac:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x13318>
  4035b0:	ldr	x0, [x0, #672]
  4035b4:	bl	405d0c <_obstack_memory_used@@Base+0x24>
  4035b8:	cbnz	w0, 403584 <ferror@plt+0x1884>
  4035bc:	ldp	x19, x20, [sp, #16]
  4035c0:	ldp	x21, x22, [sp, #32]
  4035c4:	ldp	x29, x30, [sp], #48
  4035c8:	ret
  4035cc:	b	401b40 <posix_fadvise@plt>
  4035d0:	cbz	x0, 403600 <ferror@plt+0x1900>
  4035d4:	stp	x29, x30, [sp, #-32]!
  4035d8:	mov	x29, sp
  4035dc:	str	x19, [sp, #16]
  4035e0:	mov	w19, w1
  4035e4:	bl	4019c0 <fileno@plt>
  4035e8:	mov	w3, w19
  4035ec:	mov	x2, #0x0                   	// #0
  4035f0:	ldr	x19, [sp, #16]
  4035f4:	mov	x1, #0x0                   	// #0
  4035f8:	ldp	x29, x30, [sp], #32
  4035fc:	b	401b40 <posix_fadvise@plt>
  403600:	ret
  403604:	mov	x2, x0
  403608:	add	x0, x1, #0x14
  40360c:	mov	x4, #0xa                   	// #10
  403610:	strb	wzr, [x1, #20]
  403614:	udiv	x3, x2, x4
  403618:	msub	x1, x3, x4, x2
  40361c:	add	w1, w1, #0x30
  403620:	strb	w1, [x0, #-1]!
  403624:	mov	x1, x2
  403628:	mov	x2, x3
  40362c:	cmp	x1, #0x9
  403630:	b.hi	403614 <ferror@plt+0x1914>  // b.pmore
  403634:	ret
  403638:	stp	x29, x30, [sp, #-32]!
  40363c:	mov	x29, sp
  403640:	str	x19, [sp, #16]
  403644:	mov	w19, w0
  403648:	bl	401a20 <wcwidth@plt>
  40364c:	tbz	w0, #31, 403660 <ferror@plt+0x1960>
  403650:	mov	w0, w19
  403654:	bl	401980 <iswcntrl@plt>
  403658:	cmp	w0, #0x0
  40365c:	cset	w0, eq  // eq = none
  403660:	ldr	x19, [sp, #16]
  403664:	ldp	x29, x30, [sp], #32
  403668:	ret
  40366c:	stp	x29, x30, [sp, #-32]!
  403670:	mov	x29, sp
  403674:	stp	x19, x20, [sp, #16]
  403678:	mov	x19, x0
  40367c:	mov	x0, x1
  403680:	mov	x20, x1
  403684:	ldr	x1, [x0], #24
  403688:	cmp	x1, x0
  40368c:	b.ne	4036cc <ferror@plt+0x19cc>  // b.any
  403690:	ldr	x2, [x20, #8]
  403694:	add	x3, x19, #0x18
  403698:	mov	x0, x3
  40369c:	bl	4018f0 <memcpy@plt>
  4036a0:	str	x0, [x19]
  4036a4:	ldr	x0, [x20, #8]
  4036a8:	str	x0, [x19, #8]
  4036ac:	ldrb	w0, [x20, #16]
  4036b0:	strb	w0, [x19, #16]
  4036b4:	cbz	w0, 4036c0 <ferror@plt+0x19c0>
  4036b8:	ldr	w0, [x20, #20]
  4036bc:	str	w0, [x19, #20]
  4036c0:	ldp	x19, x20, [sp, #16]
  4036c4:	ldp	x29, x30, [sp], #32
  4036c8:	ret
  4036cc:	str	x1, [x19]
  4036d0:	b	4036a4 <ferror@plt+0x19a4>
  4036d4:	ubfx	x2, x0, #5, #3
  4036d8:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x318>
  4036dc:	add	x1, x1, #0x7c8
  4036e0:	ldr	w1, [x1, x2, lsl #2]
  4036e4:	lsr	w0, w1, w0
  4036e8:	and	w0, w0, #0x1
  4036ec:	ret
  4036f0:	stp	x29, x30, [sp, #-144]!
  4036f4:	mov	w0, #0x55                  	// #85
  4036f8:	mov	x29, sp
  4036fc:	str	d8, [sp, #16]
  403700:	bl	401c40 <sysconf@plt>
  403704:	scvtf	d8, x0
  403708:	mov	w0, #0x1e                  	// #30
  40370c:	bl	401c40 <sysconf@plt>
  403710:	fcmpe	d8, #0.0
  403714:	b.lt	403738 <ferror@plt+0x1a38>  // b.tstop
  403718:	fmov	d0, x0
  40371c:	scvtf	d0, d0
  403720:	fcmpe	d0, #0.0
  403724:	b.lt	403738 <ferror@plt+0x1a38>  // b.tstop
  403728:	fmul	d0, d8, d0
  40372c:	ldr	d8, [sp, #16]
  403730:	ldp	x29, x30, [sp], #144
  403734:	ret
  403738:	add	x0, sp, #0x20
  40373c:	bl	401950 <sysinfo@plt>
  403740:	cbnz	w0, 40375c <ferror@plt+0x1a5c>
  403744:	ldr	d0, [sp, #64]
  403748:	ldr	w0, [sp, #136]
  40374c:	ucvtf	d0, d0
  403750:	ucvtf	d1, w0
  403754:	fmul	d0, d0, d1
  403758:	b	40372c <ferror@plt+0x1a2c>
  40375c:	adrp	x0, 406000 <_obstack_memory_used@@Base+0x318>
  403760:	ldr	d0, [x0, #2024]
  403764:	b	40372c <ferror@plt+0x1a2c>
  403768:	stp	x29, x30, [sp, #-144]!
  40376c:	mov	w0, #0x56                  	// #86
  403770:	mov	x29, sp
  403774:	str	d8, [sp, #16]
  403778:	bl	401c40 <sysconf@plt>
  40377c:	scvtf	d8, x0
  403780:	mov	w0, #0x1e                  	// #30
  403784:	bl	401c40 <sysconf@plt>
  403788:	fcmpe	d8, #0.0
  40378c:	b.lt	4037b0 <ferror@plt+0x1ab0>  // b.tstop
  403790:	fmov	d0, x0
  403794:	scvtf	d0, d0
  403798:	fcmpe	d0, #0.0
  40379c:	b.lt	4037b0 <ferror@plt+0x1ab0>  // b.tstop
  4037a0:	fmul	d0, d8, d0
  4037a4:	ldr	d8, [sp, #16]
  4037a8:	ldp	x29, x30, [sp], #144
  4037ac:	ret
  4037b0:	add	x0, sp, #0x20
  4037b4:	bl	401950 <sysinfo@plt>
  4037b8:	cbnz	w0, 4037e0 <ferror@plt+0x1ae0>
  4037bc:	ldr	d0, [sp, #72]
  4037c0:	ldr	d1, [sp, #88]
  4037c4:	ucvtf	d0, d0
  4037c8:	ldr	w0, [sp, #136]
  4037cc:	ucvtf	d1, d1
  4037d0:	fadd	d0, d0, d1
  4037d4:	ucvtf	d1, w0
  4037d8:	fmul	d0, d0, d1
  4037dc:	b	4037a4 <ferror@plt+0x1aa4>
  4037e0:	bl	4036f0 <ferror@plt+0x19f0>
  4037e4:	fmov	d1, #2.500000000000000000e-01
  4037e8:	b	4037d8 <ferror@plt+0x1ad8>
  4037ec:	stp	x29, x30, [sp, #-48]!
  4037f0:	mov	x29, sp
  4037f4:	stp	x19, x20, [sp, #16]
  4037f8:	str	x21, [sp, #32]
  4037fc:	cbnz	x0, 403818 <ferror@plt+0x1b18>
  403800:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x13318>
  403804:	ldr	x1, [x0, #672]
  403808:	adrp	x0, 406000 <_obstack_memory_used@@Base+0x318>
  40380c:	add	x0, x0, #0x7f0
  403810:	bl	401920 <fputs@plt>
  403814:	bl	401b30 <abort@plt>
  403818:	mov	x19, x0
  40381c:	mov	w1, #0x2f                  	// #47
  403820:	bl	401b00 <strrchr@plt>
  403824:	mov	x20, x0
  403828:	cbz	x0, 403878 <ferror@plt+0x1b78>
  40382c:	add	x21, x0, #0x1
  403830:	sub	x0, x21, x19
  403834:	cmp	x0, #0x6
  403838:	b.le	403878 <ferror@plt+0x1b78>
  40383c:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x318>
  403840:	sub	x0, x20, #0x6
  403844:	add	x1, x1, #0x828
  403848:	mov	x2, #0x7                   	// #7
  40384c:	bl	401a50 <strncmp@plt>
  403850:	cbnz	w0, 403878 <ferror@plt+0x1b78>
  403854:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x318>
  403858:	mov	x0, x21
  40385c:	add	x1, x1, #0x830
  403860:	mov	x2, #0x3                   	// #3
  403864:	bl	401a50 <strncmp@plt>
  403868:	cbnz	w0, 403898 <ferror@plt+0x1b98>
  40386c:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x13318>
  403870:	add	x19, x20, #0x4
  403874:	str	x19, [x0, #712]
  403878:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x13318>
  40387c:	ldr	x21, [sp, #32]
  403880:	str	x19, [x0, #824]
  403884:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x13318>
  403888:	str	x19, [x0, #664]
  40388c:	ldp	x19, x20, [sp, #16]
  403890:	ldp	x29, x30, [sp], #48
  403894:	ret
  403898:	mov	x19, x21
  40389c:	b	403878 <ferror@plt+0x1b78>
  4038a0:	stp	xzr, xzr, [x8]
  4038a4:	cmp	w0, #0xa
  4038a8:	stp	xzr, xzr, [x8, #16]
  4038ac:	stp	xzr, xzr, [x8, #32]
  4038b0:	str	xzr, [x8, #48]
  4038b4:	b.ne	4038c4 <ferror@plt+0x1bc4>  // b.any
  4038b8:	stp	x29, x30, [sp, #-16]!
  4038bc:	mov	x29, sp
  4038c0:	bl	401b30 <abort@plt>
  4038c4:	str	w0, [x8]
  4038c8:	ret
  4038cc:	stp	x29, x30, [sp, #-48]!
  4038d0:	mov	w2, #0x5                   	// #5
  4038d4:	mov	x29, sp
  4038d8:	stp	x19, x20, [sp, #16]
  4038dc:	mov	x20, x0
  4038e0:	str	x21, [sp, #32]
  4038e4:	mov	w21, w1
  4038e8:	mov	x1, x0
  4038ec:	mov	x0, #0x0                   	// #0
  4038f0:	bl	401c60 <dcgettext@plt>
  4038f4:	mov	x19, x0
  4038f8:	cmp	x20, x0
  4038fc:	b.ne	403970 <ferror@plt+0x1c70>  // b.any
  403900:	bl	405ddc <_obstack_memory_used@@Base+0xf4>
  403904:	ldrb	w2, [x0]
  403908:	and	w2, w2, #0xffffffdf
  40390c:	cmp	w2, #0x55
  403910:	b.ne	403984 <ferror@plt+0x1c84>  // b.any
  403914:	ldrb	w1, [x0, #1]
  403918:	and	w1, w1, #0xffffffdf
  40391c:	cmp	w1, #0x54
  403920:	b.ne	4039fc <ferror@plt+0x1cfc>  // b.any
  403924:	ldrb	w1, [x0, #2]
  403928:	and	w1, w1, #0xffffffdf
  40392c:	cmp	w1, #0x46
  403930:	b.ne	4039fc <ferror@plt+0x1cfc>  // b.any
  403934:	ldrb	w1, [x0, #3]
  403938:	cmp	w1, #0x2d
  40393c:	b.ne	4039fc <ferror@plt+0x1cfc>  // b.any
  403940:	ldrb	w1, [x0, #4]
  403944:	cmp	w1, #0x38
  403948:	b.ne	4039fc <ferror@plt+0x1cfc>  // b.any
  40394c:	ldrb	w0, [x0, #5]
  403950:	cbnz	w0, 4039fc <ferror@plt+0x1cfc>
  403954:	ldrb	w1, [x19]
  403958:	adrp	x0, 406000 <_obstack_memory_used@@Base+0x318>
  40395c:	adrp	x19, 406000 <_obstack_memory_used@@Base+0x318>
  403960:	add	x0, x0, #0x834
  403964:	cmp	w1, #0x60
  403968:	add	x19, x19, #0x83f
  40396c:	csel	x19, x19, x0, eq  // eq = none
  403970:	mov	x0, x19
  403974:	ldp	x19, x20, [sp, #16]
  403978:	ldr	x21, [sp, #32]
  40397c:	ldp	x29, x30, [sp], #48
  403980:	ret
  403984:	cmp	w2, #0x47
  403988:	b.ne	4039fc <ferror@plt+0x1cfc>  // b.any
  40398c:	ldrb	w1, [x0, #1]
  403990:	and	w1, w1, #0xffffffdf
  403994:	cmp	w1, #0x42
  403998:	b.ne	4039fc <ferror@plt+0x1cfc>  // b.any
  40399c:	ldrb	w1, [x0, #2]
  4039a0:	cmp	w1, #0x31
  4039a4:	b.ne	4039fc <ferror@plt+0x1cfc>  // b.any
  4039a8:	ldrb	w1, [x0, #3]
  4039ac:	cmp	w1, #0x38
  4039b0:	b.ne	4039fc <ferror@plt+0x1cfc>  // b.any
  4039b4:	ldrb	w1, [x0, #4]
  4039b8:	cmp	w1, #0x30
  4039bc:	b.ne	4039fc <ferror@plt+0x1cfc>  // b.any
  4039c0:	ldrb	w1, [x0, #5]
  4039c4:	cmp	w1, #0x33
  4039c8:	b.ne	4039fc <ferror@plt+0x1cfc>  // b.any
  4039cc:	ldrb	w1, [x0, #6]
  4039d0:	cmp	w1, #0x30
  4039d4:	b.ne	4039fc <ferror@plt+0x1cfc>  // b.any
  4039d8:	ldrb	w0, [x0, #7]
  4039dc:	cbnz	w0, 4039fc <ferror@plt+0x1cfc>
  4039e0:	ldrb	w1, [x19]
  4039e4:	adrp	x0, 406000 <_obstack_memory_used@@Base+0x318>
  4039e8:	adrp	x19, 406000 <_obstack_memory_used@@Base+0x318>
  4039ec:	add	x0, x0, #0x838
  4039f0:	cmp	w1, #0x60
  4039f4:	add	x19, x19, #0x83b
  4039f8:	b	40396c <ferror@plt+0x1c6c>
  4039fc:	adrp	x0, 406000 <_obstack_memory_used@@Base+0x318>
  403a00:	adrp	x19, 406000 <_obstack_memory_used@@Base+0x318>
  403a04:	cmp	w21, #0x9
  403a08:	add	x0, x0, #0x843
  403a0c:	add	x19, x19, #0x55a
  403a10:	b	40396c <ferror@plt+0x1c6c>
  403a14:	sub	sp, sp, #0xf0
  403a18:	stp	x29, x30, [sp, #16]
  403a1c:	add	x29, sp, #0x10
  403a20:	stp	x19, x20, [sp, #32]
  403a24:	stp	x21, x22, [sp, #48]
  403a28:	mov	x21, x2
  403a2c:	stp	x23, x24, [sp, #64]
  403a30:	mov	x24, x3
  403a34:	stp	x25, x26, [sp, #80]
  403a38:	mov	w25, w4
  403a3c:	mov	x26, x0
  403a40:	stp	x27, x28, [sp, #96]
  403a44:	str	x1, [sp, #112]
  403a48:	str	w5, [sp, #120]
  403a4c:	str	x7, [sp, #128]
  403a50:	str	x6, [sp, #152]
  403a54:	bl	401bf0 <__ctype_get_mb_cur_max@plt>
  403a58:	str	x0, [sp, #160]
  403a5c:	cmp	w25, #0xa
  403a60:	ldr	x0, [sp, #120]
  403a64:	str	xzr, [sp, #136]
  403a68:	ubfx	x28, x0, #1, #1
  403a6c:	mov	w0, #0x1                   	// #1
  403a70:	str	w0, [sp, #148]
  403a74:	b.hi	403c70 <ferror@plt+0x1f70>  // b.pmore
  403a78:	mov	w20, #0x0                   	// #0
  403a7c:	mov	w23, #0x0                   	// #0
  403a80:	mov	w22, #0x0                   	// #0
  403a84:	mov	x10, #0x0                   	// #0
  403a88:	mov	x6, #0x0                   	// #0
  403a8c:	adrp	x0, 406000 <_obstack_memory_used@@Base+0x318>
  403a90:	add	x0, x0, #0x898
  403a94:	ldrb	w0, [x0, w25, uxtw]
  403a98:	adr	x1, 403aa4 <ferror@plt+0x1da4>
  403a9c:	add	x0, x1, w0, sxtb #2
  403aa0:	br	x0
  403aa4:	ldr	x0, [sp, #112]
  403aa8:	mov	w28, #0x0                   	// #0
  403aac:	str	x0, [sp, #136]
  403ab0:	b	403a8c <ferror@plt+0x1d8c>
  403ab4:	mov	w28, #0x0                   	// #0
  403ab8:	mov	x19, #0x0                   	// #0
  403abc:	b	403adc <ferror@plt+0x1ddc>
  403ac0:	mov	w28, #0x1                   	// #1
  403ac4:	adrp	x6, 406000 <_obstack_memory_used@@Base+0x318>
  403ac8:	mov	w22, w28
  403acc:	add	x6, x6, #0x55a
  403ad0:	mov	x10, #0x1                   	// #1
  403ad4:	mov	x19, #0x0                   	// #0
  403ad8:	mov	w25, #0x5                   	// #5
  403adc:	ldr	x0, [sp, #136]
  403ae0:	mov	x13, #0x0                   	// #0
  403ae4:	str	w20, [sp, #144]
  403ae8:	ldr	x27, [sp, #112]
  403aec:	str	x0, [sp, #112]
  403af0:	cmn	x24, #0x1
  403af4:	b.ne	404510 <ferror@plt+0x2810>  // b.any
  403af8:	ldrb	w0, [x21, x13]
  403afc:	cmp	w0, #0x0
  403b00:	cset	w14, ne  // ne = any
  403b04:	cmp	w25, #0x2
  403b08:	cbnz	w14, 403c94 <ferror@plt+0x1f94>
  403b0c:	cset	w0, eq  // eq = none
  403b10:	cmp	x19, #0x0
  403b14:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  403b18:	b.eq	403b20 <ferror@plt+0x1e20>  // b.none
  403b1c:	cbnz	w28, 403da8 <ferror@plt+0x20a8>
  403b20:	eor	w5, w28, #0x1
  403b24:	ands	w0, w0, w5
  403b28:	b.eq	404574 <ferror@plt+0x2874>  // b.none
  403b2c:	ldr	w1, [sp, #144]
  403b30:	cbz	w1, 404538 <ferror@plt+0x2838>
  403b34:	ldr	w0, [sp, #148]
  403b38:	cbz	w0, 404518 <ferror@plt+0x2818>
  403b3c:	ldr	w5, [sp, #120]
  403b40:	mov	x3, x24
  403b44:	ldr	x1, [sp, #112]
  403b48:	mov	x2, x21
  403b4c:	ldr	x7, [sp, #128]
  403b50:	mov	w4, #0x5                   	// #5
  403b54:	ldr	x6, [sp, #152]
  403b58:	ldr	x0, [sp, #240]
  403b5c:	str	x0, [sp]
  403b60:	mov	x0, x26
  403b64:	bl	403a14 <ferror@plt+0x1d14>
  403b68:	b	404554 <ferror@plt+0x2854>
  403b6c:	adrp	x6, 406000 <_obstack_memory_used@@Base+0x318>
  403b70:	add	x6, x6, #0x55a
  403b74:	cbnz	w28, 403c88 <ferror@plt+0x1f88>
  403b78:	ldr	x0, [sp, #112]
  403b7c:	cbz	x0, 403b88 <ferror@plt+0x1e88>
  403b80:	mov	w0, #0x22                  	// #34
  403b84:	strb	w0, [x26]
  403b88:	mov	x10, #0x1                   	// #1
  403b8c:	mov	w22, #0x1                   	// #1
  403b90:	mov	x19, x10
  403b94:	b	403adc <ferror@plt+0x1ddc>
  403b98:	cmp	w25, #0xa
  403b9c:	b.eq	403bc8 <ferror@plt+0x1ec8>  // b.none
  403ba0:	mov	w1, w25
  403ba4:	adrp	x0, 406000 <_obstack_memory_used@@Base+0x318>
  403ba8:	add	x0, x0, #0x845
  403bac:	bl	4038cc <ferror@plt+0x1bcc>
  403bb0:	mov	w1, w25
  403bb4:	str	x0, [sp, #128]
  403bb8:	adrp	x0, 406000 <_obstack_memory_used@@Base+0x318>
  403bbc:	add	x0, x0, #0x843
  403bc0:	bl	4038cc <ferror@plt+0x1bcc>
  403bc4:	str	x0, [sp, #240]
  403bc8:	mov	x19, #0x0                   	// #0
  403bcc:	cbnz	w28, 403bdc <ferror@plt+0x1edc>
  403bd0:	ldr	x0, [sp, #128]
  403bd4:	ldrb	w0, [x0, x19]
  403bd8:	cbnz	w0, 403bf4 <ferror@plt+0x1ef4>
  403bdc:	ldr	x0, [sp, #240]
  403be0:	mov	w22, #0x1                   	// #1
  403be4:	bl	401910 <strlen@plt>
  403be8:	mov	x10, x0
  403bec:	ldr	x6, [sp, #240]
  403bf0:	b	403adc <ferror@plt+0x1ddc>
  403bf4:	ldr	x1, [sp, #112]
  403bf8:	cmp	x1, x19
  403bfc:	b.ls	403c04 <ferror@plt+0x1f04>  // b.plast
  403c00:	strb	w0, [x26, x19]
  403c04:	add	x19, x19, #0x1
  403c08:	b	403bd0 <ferror@plt+0x1ed0>
  403c0c:	cbnz	w28, 403c58 <ferror@plt+0x1f58>
  403c10:	mov	w22, #0x1                   	// #1
  403c14:	ldr	x0, [sp, #112]
  403c18:	adrp	x6, 406000 <_obstack_memory_used@@Base+0x318>
  403c1c:	add	x6, x6, #0x843
  403c20:	cbz	x0, 403c2c <ferror@plt+0x1f2c>
  403c24:	mov	w0, #0x27                  	// #39
  403c28:	strb	w0, [x26]
  403c2c:	mov	x10, #0x1                   	// #1
  403c30:	mov	w28, #0x0                   	// #0
  403c34:	mov	x19, x10
  403c38:	b	403c68 <ferror@plt+0x1f68>
  403c3c:	cbz	w28, 403c14 <ferror@plt+0x1f14>
  403c40:	adrp	x6, 406000 <_obstack_memory_used@@Base+0x318>
  403c44:	mov	x10, #0x1                   	// #1
  403c48:	add	x6, x6, #0x843
  403c4c:	b	403ab8 <ferror@plt+0x1db8>
  403c50:	mov	w28, #0x1                   	// #1
  403c54:	mov	w22, w28
  403c58:	adrp	x6, 406000 <_obstack_memory_used@@Base+0x318>
  403c5c:	add	x6, x6, #0x843
  403c60:	mov	x10, #0x1                   	// #1
  403c64:	mov	x19, #0x0                   	// #0
  403c68:	mov	w25, #0x2                   	// #2
  403c6c:	b	403adc <ferror@plt+0x1ddc>
  403c70:	bl	401b30 <abort@plt>
  403c74:	mov	w28, #0x0                   	// #0
  403c78:	mov	w22, #0x1                   	// #1
  403c7c:	b	403ab8 <ferror@plt+0x1db8>
  403c80:	mov	w28, #0x1                   	// #1
  403c84:	b	403c58 <ferror@plt+0x1f58>
  403c88:	mov	w22, w28
  403c8c:	mov	x10, #0x1                   	// #1
  403c90:	b	403ab8 <ferror@plt+0x1db8>
  403c94:	add	x0, x21, x13
  403c98:	str	x0, [sp, #136]
  403c9c:	cset	w3, ne  // ne = any
  403ca0:	ands	w3, w22, w3
  403ca4:	b.eq	403d58 <ferror@plt+0x2058>  // b.none
  403ca8:	cbz	x10, 403d58 <ferror@plt+0x2058>
  403cac:	cmp	x10, #0x1
  403cb0:	add	x20, x13, x10
  403cb4:	ccmn	x24, #0x1, #0x0, hi  // hi = pmore
  403cb8:	b.ne	403ce8 <ferror@plt+0x1fe8>  // b.any
  403cbc:	mov	x0, x21
  403cc0:	stp	x13, x6, [sp, #168]
  403cc4:	str	x10, [sp, #184]
  403cc8:	str	w3, [sp, #192]
  403ccc:	str	w14, [sp, #200]
  403cd0:	bl	401910 <strlen@plt>
  403cd4:	ldp	x13, x6, [sp, #168]
  403cd8:	mov	x24, x0
  403cdc:	ldr	w3, [sp, #192]
  403ce0:	ldr	w14, [sp, #200]
  403ce4:	ldr	x10, [sp, #184]
  403ce8:	cmp	x20, x24
  403cec:	b.hi	403d58 <ferror@plt+0x2058>  // b.pmore
  403cf0:	ldr	x0, [sp, #136]
  403cf4:	mov	x2, x10
  403cf8:	mov	x1, x6
  403cfc:	stp	x6, x10, [sp, #168]
  403d00:	str	x13, [sp, #184]
  403d04:	str	w3, [sp, #192]
  403d08:	str	w14, [sp, #200]
  403d0c:	bl	401b70 <memcmp@plt>
  403d10:	ldr	w3, [sp, #192]
  403d14:	ldr	w14, [sp, #200]
  403d18:	ldp	x6, x10, [sp, #168]
  403d1c:	ldr	x13, [sp, #184]
  403d20:	cbnz	w0, 403d58 <ferror@plt+0x2058>
  403d24:	cbnz	w28, 4045a0 <ferror@plt+0x28a0>
  403d28:	mov	w18, w3
  403d2c:	ldr	x0, [sp, #136]
  403d30:	ldrb	w7, [x0]
  403d34:	cmp	w7, #0x3f
  403d38:	b.ls	403d80 <ferror@plt+0x2080>  // b.plast
  403d3c:	cmp	w7, #0x5a
  403d40:	b.hi	403e34 <ferror@plt+0x2134>  // b.pmore
  403d44:	cmp	w7, #0x40
  403d48:	b.eq	403e44 <ferror@plt+0x2144>  // b.none
  403d4c:	mov	w20, w14
  403d50:	mov	w3, #0x0                   	// #0
  403d54:	b	404098 <ferror@plt+0x2398>
  403d58:	mov	w18, #0x0                   	// #0
  403d5c:	b	403d2c <ferror@plt+0x202c>
  403d60:	cmp	w0, #0x23
  403d64:	b.hi	403e44 <ferror@plt+0x2144>  // b.pmore
  403d68:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x318>
  403d6c:	add	x1, x1, #0x8a4
  403d70:	ldrh	w0, [x1, w0, uxtw #1]
  403d74:	adr	x1, 403d80 <ferror@plt+0x2080>
  403d78:	add	x0, x1, w0, sxth #2
  403d7c:	br	x0
  403d80:	adrp	x0, 406000 <_obstack_memory_used@@Base+0x318>
  403d84:	add	x0, x0, #0x8ec
  403d88:	ldrh	w0, [x0, w7, uxtw #1]
  403d8c:	adr	x1, 403d98 <ferror@plt+0x2098>
  403d90:	add	x0, x1, w0, sxth #2
  403d94:	br	x0
  403d98:	mov	w0, #0x72                  	// #114
  403d9c:	cmp	w28, #0x0
  403da0:	ccmp	w25, #0x2, #0x0, ne  // ne = any
  403da4:	b.ne	403db4 <ferror@plt+0x20b4>  // b.any
  403da8:	mov	w25, #0x2                   	// #2
  403dac:	b	403ff0 <ferror@plt+0x22f0>
  403db0:	mov	w0, #0x62                  	// #98
  403db4:	cbz	w22, 403f78 <ferror@plt+0x2278>
  403db8:	mov	w7, w0
  403dbc:	mov	w20, #0x0                   	// #0
  403dc0:	cmp	w25, #0x2
  403dc4:	cset	w0, eq  // eq = none
  403dc8:	cbnz	w28, 403ff0 <ferror@plt+0x22f0>
  403dcc:	eor	w1, w23, #0x1
  403dd0:	ands	w0, w0, w1
  403dd4:	b.eq	403e18 <ferror@plt+0x2118>  // b.none
  403dd8:	cmp	x27, x19
  403ddc:	b.ls	403de8 <ferror@plt+0x20e8>  // b.plast
  403de0:	mov	w1, #0x27                  	// #39
  403de4:	strb	w1, [x26, x19]
  403de8:	add	x1, x19, #0x1
  403dec:	cmp	x27, x1
  403df0:	b.ls	403dfc <ferror@plt+0x20fc>  // b.plast
  403df4:	mov	w2, #0x24                  	// #36
  403df8:	strb	w2, [x26, x1]
  403dfc:	add	x1, x19, #0x2
  403e00:	cmp	x27, x1
  403e04:	b.ls	403e10 <ferror@plt+0x2110>  // b.plast
  403e08:	mov	w2, #0x27                  	// #39
  403e0c:	strb	w2, [x26, x1]
  403e10:	add	x19, x19, #0x3
  403e14:	mov	w23, w0
  403e18:	cmp	x27, x19
  403e1c:	b.ls	403e28 <ferror@plt+0x2128>  // b.plast
  403e20:	mov	w0, #0x5c                  	// #92
  403e24:	strb	w0, [x26, x19]
  403e28:	add	x19, x19, #0x1
  403e2c:	mov	w3, w14
  403e30:	b	4040d4 <ferror@plt+0x23d4>
  403e34:	sub	w0, w7, #0x5b
  403e38:	and	w1, w0, #0xff
  403e3c:	cmp	w1, #0x23
  403e40:	b.ls	403d60 <ferror@plt+0x2060>  // b.plast
  403e44:	ldr	x0, [sp, #160]
  403e48:	cmp	x0, #0x1
  403e4c:	b.ne	404244 <ferror@plt+0x2544>  // b.any
  403e50:	str	x13, [sp, #136]
  403e54:	stp	x6, x10, [sp, #168]
  403e58:	str	w7, [sp, #184]
  403e5c:	str	w18, [sp, #192]
  403e60:	str	w14, [sp, #200]
  403e64:	bl	401bc0 <__ctype_b_loc@plt>
  403e68:	ldr	w7, [sp, #184]
  403e6c:	ldr	x0, [x0]
  403e70:	ldp	x15, x6, [sp, #160]
  403e74:	ldrh	w20, [x0, w7, uxtw #1]
  403e78:	ldr	w18, [sp, #192]
  403e7c:	ldr	w14, [sp, #200]
  403e80:	ldr	x13, [sp, #136]
  403e84:	ubfx	x20, x20, #14, #1
  403e88:	ldr	x10, [sp, #176]
  403e8c:	eor	w3, w20, #0x1
  403e90:	and	w3, w22, w3
  403e94:	ands	w3, w3, #0xff
  403e98:	b.eq	404098 <ferror@plt+0x2398>  // b.none
  403e9c:	mov	w20, #0x0                   	// #0
  403ea0:	b	4043b4 <ferror@plt+0x26b4>
  403ea4:	cbz	w22, 403f70 <ferror@plt+0x2270>
  403ea8:	cmp	w25, #0x2
  403eac:	cset	w0, eq  // eq = none
  403eb0:	cbnz	w28, 4045a0 <ferror@plt+0x28a0>
  403eb4:	eor	w1, w23, #0x1
  403eb8:	ands	w1, w0, w1
  403ebc:	b.eq	403f68 <ferror@plt+0x2268>  // b.none
  403ec0:	cmp	x27, x19
  403ec4:	b.ls	403ed0 <ferror@plt+0x21d0>  // b.plast
  403ec8:	mov	w0, #0x27                  	// #39
  403ecc:	strb	w0, [x26, x19]
  403ed0:	add	x0, x19, #0x1
  403ed4:	cmp	x27, x0
  403ed8:	b.ls	403ee4 <ferror@plt+0x21e4>  // b.plast
  403edc:	mov	w2, #0x24                  	// #36
  403ee0:	strb	w2, [x26, x0]
  403ee4:	add	x0, x19, #0x2
  403ee8:	cmp	x27, x0
  403eec:	b.ls	403ef8 <ferror@plt+0x21f8>  // b.plast
  403ef0:	mov	w2, #0x27                  	// #39
  403ef4:	strb	w2, [x26, x0]
  403ef8:	add	x0, x19, #0x3
  403efc:	mov	w23, w1
  403f00:	cmp	x27, x0
  403f04:	b.ls	403f10 <ferror@plt+0x2210>  // b.plast
  403f08:	mov	w1, #0x5c                  	// #92
  403f0c:	strb	w1, [x26, x0]
  403f10:	add	x19, x0, #0x1
  403f14:	cbz	w3, 4044e4 <ferror@plt+0x27e4>
  403f18:	add	x1, x13, #0x1
  403f1c:	cmp	x1, x24
  403f20:	b.cs	403f60 <ferror@plt+0x2260>  // b.hs, b.nlast
  403f24:	ldrb	w1, [x21, x1]
  403f28:	sub	w1, w1, #0x30
  403f2c:	and	w1, w1, #0xff
  403f30:	cmp	w1, #0x9
  403f34:	b.hi	403f60 <ferror@plt+0x2260>  // b.pmore
  403f38:	cmp	x27, x19
  403f3c:	b.ls	403f48 <ferror@plt+0x2248>  // b.plast
  403f40:	mov	w1, #0x30                  	// #48
  403f44:	strb	w1, [x26, x19]
  403f48:	add	x1, x0, #0x2
  403f4c:	cmp	x27, x1
  403f50:	b.ls	403f5c <ferror@plt+0x225c>  // b.plast
  403f54:	mov	w2, #0x30                  	// #48
  403f58:	strb	w2, [x26, x1]
  403f5c:	add	x19, x0, #0x3
  403f60:	mov	w20, #0x0                   	// #0
  403f64:	b	4044ec <ferror@plt+0x27ec>
  403f68:	mov	x0, x19
  403f6c:	b	403f00 <ferror@plt+0x2200>
  403f70:	ldr	x0, [sp, #120]
  403f74:	tbnz	w0, #0, 40412c <ferror@plt+0x242c>
  403f78:	mov	w20, #0x0                   	// #0
  403f7c:	b	403d50 <ferror@plt+0x2050>
  403f80:	cmp	w25, #0x2
  403f84:	b.eq	403fec <ferror@plt+0x22ec>  // b.none
  403f88:	cmp	w25, #0x5
  403f8c:	b.ne	403f78 <ferror@plt+0x2278>  // b.any
  403f90:	ldr	x0, [sp, #120]
  403f94:	tbz	w0, #2, 403f78 <ferror@plt+0x2278>
  403f98:	add	x1, x13, #0x2
  403f9c:	cmp	x1, x24
  403fa0:	b.cs	403f78 <ferror@plt+0x2278>  // b.hs, b.nlast
  403fa4:	ldr	x0, [sp, #136]
  403fa8:	ldrb	w0, [x0, #1]
  403fac:	cmp	w0, #0x3f
  403fb0:	b.ne	403f78 <ferror@plt+0x2278>  // b.any
  403fb4:	ldrb	w7, [x21, x1]
  403fb8:	cmp	w7, #0x2f
  403fbc:	b.hi	404028 <ferror@plt+0x2328>  // b.pmore
  403fc0:	cmp	w7, #0x20
  403fc4:	b.ls	4044fc <ferror@plt+0x27fc>  // b.plast
  403fc8:	sub	w2, w7, #0x21
  403fcc:	cmp	w2, #0xe
  403fd0:	b.hi	4044f4 <ferror@plt+0x27f4>  // b.pmore
  403fd4:	adrp	x0, 406000 <_obstack_memory_used@@Base+0x318>
  403fd8:	add	x0, x0, #0x96c
  403fdc:	ldrh	w0, [x0, w2, uxtw #1]
  403fe0:	adr	x2, 403fec <ferror@plt+0x22ec>
  403fe4:	add	x0, x2, w0, sxth #2
  403fe8:	br	x0
  403fec:	cbz	w28, 403f78 <ferror@plt+0x2278>
  403ff0:	ldr	x0, [sp, #240]
  403ff4:	cmp	w22, #0x0
  403ff8:	str	x0, [sp]
  403ffc:	ccmp	w25, #0x2, #0x0, ne  // ne = any
  404000:	ldr	w0, [sp, #120]
  404004:	mov	x3, x24
  404008:	mov	x2, x21
  40400c:	mov	x1, x27
  404010:	and	w5, w0, #0xfffffffd
  404014:	mov	x6, #0x0                   	// #0
  404018:	mov	w0, #0x4                   	// #4
  40401c:	csel	w4, w25, w0, ne  // ne = any
  404020:	ldr	x7, [sp, #128]
  404024:	b	403b60 <ferror@plt+0x1e60>
  404028:	sub	w2, w7, #0x3c
  40402c:	and	w2, w2, #0xff
  404030:	cmp	w2, #0x2
  404034:	b.hi	4044fc <ferror@plt+0x27fc>  // b.pmore
  404038:	cbnz	w28, 403ff0 <ferror@plt+0x22f0>
  40403c:	cmp	x27, x19
  404040:	b.ls	40404c <ferror@plt+0x234c>  // b.plast
  404044:	mov	w0, #0x3f                  	// #63
  404048:	strb	w0, [x26, x19]
  40404c:	add	x0, x19, #0x1
  404050:	cmp	x27, x0
  404054:	b.ls	404060 <ferror@plt+0x2360>  // b.plast
  404058:	mov	w2, #0x22                  	// #34
  40405c:	strb	w2, [x26, x0]
  404060:	add	x0, x19, #0x2
  404064:	cmp	x27, x0
  404068:	b.ls	404074 <ferror@plt+0x2374>  // b.plast
  40406c:	mov	w2, #0x22                  	// #34
  404070:	strb	w2, [x26, x0]
  404074:	add	x0, x19, #0x3
  404078:	cmp	x27, x0
  40407c:	b.ls	404088 <ferror@plt+0x2388>  // b.plast
  404080:	mov	w2, #0x3f                  	// #63
  404084:	strb	w2, [x26, x0]
  404088:	add	x19, x19, #0x4
  40408c:	mov	x13, x1
  404090:	mov	w20, #0x0                   	// #0
  404094:	mov	w3, #0x0                   	// #0
  404098:	cmp	w25, #0x2
  40409c:	eor	w0, w22, #0x1
  4040a0:	cset	w1, eq  // eq = none
  4040a4:	orr	w0, w1, w0
  4040a8:	tst	w0, #0xff
  4040ac:	b.eq	4040b4 <ferror@plt+0x23b4>  // b.none
  4040b0:	cbz	w28, 4040d0 <ferror@plt+0x23d0>
  4040b4:	ldr	x0, [sp, #152]
  4040b8:	cbz	x0, 4040d0 <ferror@plt+0x23d0>
  4040bc:	ldr	x1, [sp, #152]
  4040c0:	ubfx	x0, x7, #5, #8
  4040c4:	ldr	w0, [x1, x0, lsl #2]
  4040c8:	lsr	w0, w0, w7
  4040cc:	tbnz	w0, #0, 403dc0 <ferror@plt+0x20c0>
  4040d0:	cbnz	w18, 403dc0 <ferror@plt+0x20c0>
  4040d4:	eor	w3, w3, #0x1
  4040d8:	tst	w23, w3
  4040dc:	b.eq	40410c <ferror@plt+0x240c>  // b.none
  4040e0:	cmp	x27, x19
  4040e4:	b.ls	4040f0 <ferror@plt+0x23f0>  // b.plast
  4040e8:	mov	w0, #0x27                  	// #39
  4040ec:	strb	w0, [x26, x19]
  4040f0:	add	x0, x19, #0x1
  4040f4:	cmp	x27, x0
  4040f8:	b.ls	404104 <ferror@plt+0x2404>  // b.plast
  4040fc:	mov	w1, #0x27                  	// #39
  404100:	strb	w1, [x26, x0]
  404104:	add	x19, x19, #0x2
  404108:	mov	w23, #0x0                   	// #0
  40410c:	cmp	x27, x19
  404110:	b.ls	404118 <ferror@plt+0x2418>  // b.plast
  404114:	strb	w7, [x26, x19]
  404118:	ldr	w0, [sp, #148]
  40411c:	cmp	w20, #0x0
  404120:	add	x19, x19, #0x1
  404124:	csel	w0, w0, wzr, ne  // ne = any
  404128:	str	w0, [sp, #148]
  40412c:	add	x13, x13, #0x1
  404130:	b	403af0 <ferror@plt+0x1df0>
  404134:	mov	w0, #0x74                  	// #116
  404138:	b	403d9c <ferror@plt+0x209c>
  40413c:	mov	w0, #0x76                  	// #118
  404140:	b	403db4 <ferror@plt+0x20b4>
  404144:	cmp	w25, #0x2
  404148:	b.ne	40415c <ferror@plt+0x245c>  // b.any
  40414c:	cbnz	w28, 403ff0 <ferror@plt+0x22f0>
  404150:	mov	w20, #0x0                   	// #0
  404154:	mov	w3, #0x0                   	// #0
  404158:	b	4040d4 <ferror@plt+0x23d4>
  40415c:	cmp	w22, #0x0
  404160:	ccmp	w28, #0x0, #0x4, ne  // ne = any
  404164:	b.eq	40416c <ferror@plt+0x246c>  // b.none
  404168:	cbnz	x10, 404150 <ferror@plt+0x2450>
  40416c:	mov	w0, w7
  404170:	b	403d9c <ferror@plt+0x209c>
  404174:	mov	w0, #0x6e                  	// #110
  404178:	b	403d9c <ferror@plt+0x209c>
  40417c:	mov	w0, #0x61                  	// #97
  404180:	b	403db4 <ferror@plt+0x20b4>
  404184:	mov	w0, #0x66                  	// #102
  404188:	b	403db4 <ferror@plt+0x20b4>
  40418c:	cmn	x24, #0x1
  404190:	b.ne	4041bc <ferror@plt+0x24bc>  // b.any
  404194:	ldrb	w0, [x21, #1]
  404198:	cmp	w0, #0x0
  40419c:	cset	w0, ne  // ne = any
  4041a0:	cbnz	w0, 403f78 <ferror@plt+0x2278>
  4041a4:	cbnz	x13, 403f78 <ferror@plt+0x2278>
  4041a8:	mov	w20, w14
  4041ac:	cmp	w25, #0x2
  4041b0:	csel	w3, w28, wzr, eq  // eq = none
  4041b4:	cbz	w3, 404098 <ferror@plt+0x2398>
  4041b8:	b	403da8 <ferror@plt+0x20a8>
  4041bc:	cmp	x24, #0x1
  4041c0:	b	40419c <ferror@plt+0x249c>
  4041c4:	mov	w20, #0x0                   	// #0
  4041c8:	b	4041ac <ferror@plt+0x24ac>
  4041cc:	cmp	w25, #0x2
  4041d0:	b.ne	404504 <ferror@plt+0x2804>  // b.any
  4041d4:	cbnz	w28, 403ff0 <ferror@plt+0x22f0>
  4041d8:	ldr	x0, [sp, #112]
  4041dc:	cmp	x27, #0x0
  4041e0:	ccmp	x0, #0x0, #0x0, ne  // ne = any
  4041e4:	b.eq	404238 <ferror@plt+0x2538>  // b.none
  4041e8:	cmp	x27, x19
  4041ec:	b.ls	4041f8 <ferror@plt+0x24f8>  // b.plast
  4041f0:	mov	w0, #0x27                  	// #39
  4041f4:	strb	w0, [x26, x19]
  4041f8:	add	x0, x19, #0x1
  4041fc:	cmp	x0, x27
  404200:	b.cs	40420c <ferror@plt+0x250c>  // b.hs, b.nlast
  404204:	mov	w1, #0x5c                  	// #92
  404208:	strb	w1, [x26, x0]
  40420c:	add	x0, x19, #0x2
  404210:	cmp	x0, x27
  404214:	b.cs	404220 <ferror@plt+0x2520>  // b.hs, b.nlast
  404218:	mov	w1, #0x27                  	// #39
  40421c:	strb	w1, [x26, x0]
  404220:	add	x19, x19, #0x3
  404224:	mov	w20, w14
  404228:	mov	w3, #0x0                   	// #0
  40422c:	mov	w23, #0x0                   	// #0
  404230:	str	w14, [sp, #144]
  404234:	b	404098 <ferror@plt+0x2398>
  404238:	str	x27, [sp, #112]
  40423c:	mov	x27, #0x0                   	// #0
  404240:	b	4041f8 <ferror@plt+0x24f8>
  404244:	str	xzr, [sp, #232]
  404248:	cmn	x24, #0x1
  40424c:	b.ne	404284 <ferror@plt+0x2584>  // b.any
  404250:	mov	x0, x21
  404254:	stp	x13, x6, [sp, #168]
  404258:	str	x10, [sp, #184]
  40425c:	str	w7, [sp, #192]
  404260:	str	w18, [sp, #200]
  404264:	str	w14, [sp, #208]
  404268:	bl	401910 <strlen@plt>
  40426c:	ldp	x13, x6, [sp, #168]
  404270:	mov	x24, x0
  404274:	ldr	w7, [sp, #192]
  404278:	ldr	w18, [sp, #200]
  40427c:	ldr	w14, [sp, #208]
  404280:	ldr	x10, [sp, #184]
  404284:	mov	w20, w14
  404288:	mov	x15, #0x0                   	// #0
  40428c:	add	x2, x13, x15
  404290:	add	x3, sp, #0xe8
  404294:	add	x1, x21, x2
  404298:	add	x0, sp, #0xe4
  40429c:	sub	x2, x24, x2
  4042a0:	stp	x1, x13, [sp, #168]
  4042a4:	stp	x15, x6, [sp, #184]
  4042a8:	str	x10, [sp, #200]
  4042ac:	stp	w7, w18, [sp, #208]
  4042b0:	str	w14, [sp, #216]
  4042b4:	bl	405958 <ferror@plt+0x3c58>
  4042b8:	ldp	w7, w18, [sp, #208]
  4042bc:	mov	x3, x0
  4042c0:	ldr	w14, [sp, #216]
  4042c4:	ldp	x13, x15, [sp, #176]
  4042c8:	ldp	x6, x10, [sp, #192]
  4042cc:	cbz	x0, 4043ac <ferror@plt+0x26ac>
  4042d0:	cmn	x0, #0x1
  4042d4:	b.eq	4042fc <ferror@plt+0x25fc>  // b.none
  4042d8:	cmn	x0, #0x2
  4042dc:	ldr	x1, [sp, #168]
  4042e0:	b.ne	40430c <ferror@plt+0x260c>  // b.any
  4042e4:	add	x0, x13, x15
  4042e8:	cmp	x24, x0
  4042ec:	b.ls	4042fc <ferror@plt+0x25fc>  // b.plast
  4042f0:	ldr	x0, [sp, #136]
  4042f4:	ldrb	w0, [x0, x15]
  4042f8:	cbnz	w0, 404304 <ferror@plt+0x2604>
  4042fc:	mov	w20, #0x0                   	// #0
  404300:	b	4043ac <ferror@plt+0x26ac>
  404304:	add	x15, x15, #0x1
  404308:	b	4042e4 <ferror@plt+0x25e4>
  40430c:	cmp	w28, #0x0
  404310:	ccmp	w25, #0x2, #0x0, ne  // ne = any
  404314:	b.ne	404358 <ferror@plt+0x2658>  // b.any
  404318:	mov	x0, #0x1                   	// #1
  40431c:	b	404350 <ferror@plt+0x2650>
  404320:	ldrb	w2, [x1, x0]
  404324:	sub	w2, w2, #0x5b
  404328:	and	w2, w2, #0xff
  40432c:	cmp	w2, #0x21
  404330:	b.hi	40434c <ferror@plt+0x264c>  // b.pmore
  404334:	mov	x4, #0x1                   	// #1
  404338:	lsl	x2, x4, x2
  40433c:	mov	x4, #0x2b                  	// #43
  404340:	movk	x4, #0x2, lsl #32
  404344:	tst	x2, x4
  404348:	b.ne	403da8 <ferror@plt+0x20a8>  // b.any
  40434c:	add	x0, x0, #0x1
  404350:	cmp	x0, x3
  404354:	b.ne	404320 <ferror@plt+0x2620>  // b.any
  404358:	ldr	w0, [sp, #228]
  40435c:	stp	x15, x13, [sp, #168]
  404360:	stp	x6, x10, [sp, #184]
  404364:	str	w7, [sp, #200]
  404368:	stp	w18, w14, [sp, #208]
  40436c:	str	x3, [sp, #216]
  404370:	bl	401c90 <iswprint@plt>
  404374:	ldr	x15, [sp, #168]
  404378:	cmp	w0, #0x0
  40437c:	ldr	x3, [sp, #216]
  404380:	csel	w20, w20, wzr, ne  // ne = any
  404384:	add	x0, sp, #0xe8
  404388:	add	x15, x15, x3
  40438c:	str	x15, [sp, #168]
  404390:	str	x15, [sp, #216]
  404394:	bl	401b50 <mbsinit@plt>
  404398:	ldr	w7, [sp, #200]
  40439c:	ldp	w18, w14, [sp, #208]
  4043a0:	ldp	x15, x13, [sp, #168]
  4043a4:	ldp	x6, x10, [sp, #184]
  4043a8:	cbz	w0, 40428c <ferror@plt+0x258c>
  4043ac:	cmp	x15, #0x1
  4043b0:	b.ls	403e8c <ferror@plt+0x218c>  // b.plast
  4043b4:	eor	w0, w20, #0x1
  4043b8:	add	x15, x13, x15
  4043bc:	and	w0, w22, w0
  4043c0:	mov	w3, #0x0                   	// #0
  4043c4:	and	w0, w0, #0xff
  4043c8:	mov	w16, #0x5c                  	// #92
  4043cc:	mov	w1, #0x27                  	// #39
  4043d0:	mov	w17, #0x24                  	// #36
  4043d4:	cbz	w0, 4044c8 <ferror@plt+0x27c8>
  4043d8:	cmp	w25, #0x2
  4043dc:	cset	w3, eq  // eq = none
  4043e0:	cbnz	w28, 4045a0 <ferror@plt+0x28a0>
  4043e4:	eor	w2, w23, #0x1
  4043e8:	ands	w2, w3, w2
  4043ec:	b.eq	404424 <ferror@plt+0x2724>  // b.none
  4043f0:	cmp	x27, x19
  4043f4:	b.ls	4043fc <ferror@plt+0x26fc>  // b.plast
  4043f8:	strb	w1, [x26, x19]
  4043fc:	add	x3, x19, #0x1
  404400:	cmp	x27, x3
  404404:	b.ls	40440c <ferror@plt+0x270c>  // b.plast
  404408:	strb	w17, [x26, x3]
  40440c:	add	x3, x19, #0x2
  404410:	cmp	x27, x3
  404414:	b.ls	40441c <ferror@plt+0x271c>  // b.plast
  404418:	strb	w1, [x26, x3]
  40441c:	add	x19, x19, #0x3
  404420:	mov	w23, w2
  404424:	cmp	x27, x19
  404428:	b.ls	404430 <ferror@plt+0x2730>  // b.plast
  40442c:	strb	w16, [x26, x19]
  404430:	add	x3, x19, #0x1
  404434:	cmp	x27, x3
  404438:	b.ls	404448 <ferror@plt+0x2748>  // b.plast
  40443c:	lsr	w2, w7, #6
  404440:	add	w2, w2, #0x30
  404444:	strb	w2, [x26, x3]
  404448:	add	x3, x19, #0x2
  40444c:	cmp	x27, x3
  404450:	b.ls	404460 <ferror@plt+0x2760>  // b.plast
  404454:	ubfx	x2, x7, #3, #3
  404458:	add	w2, w2, #0x30
  40445c:	strb	w2, [x26, x3]
  404460:	and	w7, w7, #0x7
  404464:	add	x19, x19, #0x3
  404468:	add	w7, w7, #0x30
  40446c:	mov	w3, w0
  404470:	add	x2, x13, #0x1
  404474:	eor	w14, w3, #0x1
  404478:	and	w14, w23, w14
  40447c:	cmp	x2, x15
  404480:	b.cs	4040d4 <ferror@plt+0x23d4>  // b.hs, b.nlast
  404484:	cbz	w14, 4044ac <ferror@plt+0x27ac>
  404488:	cmp	x27, x19
  40448c:	b.ls	404494 <ferror@plt+0x2794>  // b.plast
  404490:	strb	w1, [x26, x19]
  404494:	add	x13, x19, #0x1
  404498:	cmp	x27, x13
  40449c:	b.ls	4044a4 <ferror@plt+0x27a4>  // b.plast
  4044a0:	strb	w1, [x26, x13]
  4044a4:	add	x19, x19, #0x2
  4044a8:	mov	w23, #0x0                   	// #0
  4044ac:	cmp	x27, x19
  4044b0:	b.ls	4044b8 <ferror@plt+0x27b8>  // b.plast
  4044b4:	strb	w7, [x26, x19]
  4044b8:	ldrb	w7, [x21, x2]
  4044bc:	add	x19, x19, #0x1
  4044c0:	mov	x13, x2
  4044c4:	b	4043d4 <ferror@plt+0x26d4>
  4044c8:	cbz	w18, 404470 <ferror@plt+0x2770>
  4044cc:	cmp	x27, x19
  4044d0:	b.ls	4044d8 <ferror@plt+0x27d8>  // b.plast
  4044d4:	strb	w16, [x26, x19]
  4044d8:	add	x19, x19, #0x1
  4044dc:	mov	w18, #0x0                   	// #0
  4044e0:	b	404470 <ferror@plt+0x2770>
  4044e4:	mov	w3, w22
  4044e8:	mov	w20, #0x0                   	// #0
  4044ec:	mov	w7, #0x30                  	// #48
  4044f0:	b	404098 <ferror@plt+0x2398>
  4044f4:	mov	w7, #0x3f                  	// #63
  4044f8:	b	403f78 <ferror@plt+0x2278>
  4044fc:	mov	w7, w0
  404500:	b	403f78 <ferror@plt+0x2278>
  404504:	mov	w20, w14
  404508:	str	w14, [sp, #144]
  40450c:	b	403d50 <ferror@plt+0x2050>
  404510:	cmp	x24, x13
  404514:	b	403b00 <ferror@plt+0x1e00>
  404518:	ldr	x0, [sp, #112]
  40451c:	cmp	x27, #0x0
  404520:	cset	w28, eq  // eq = none
  404524:	mov	w25, #0x2                   	// #2
  404528:	cmp	x0, #0x0
  40452c:	csel	w20, w28, wzr, ne  // ne = any
  404530:	cbnz	w20, 403aa4 <ferror@plt+0x1da4>
  404534:	ldr	w0, [sp, #144]
  404538:	cmp	x6, #0x0
  40453c:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  404540:	mov	x0, x19
  404544:	b.ne	404598 <ferror@plt+0x2898>  // b.any
  404548:	cmp	x27, x0
  40454c:	b.ls	404554 <ferror@plt+0x2854>  // b.plast
  404550:	strb	wzr, [x26, x0]
  404554:	ldp	x29, x30, [sp, #16]
  404558:	ldp	x19, x20, [sp, #32]
  40455c:	ldp	x21, x22, [sp, #48]
  404560:	ldp	x23, x24, [sp, #64]
  404564:	ldp	x25, x26, [sp, #80]
  404568:	ldp	x27, x28, [sp, #96]
  40456c:	add	sp, sp, #0xf0
  404570:	ret
  404574:	mov	w0, w5
  404578:	b	404538 <ferror@plt+0x2838>
  40457c:	cmp	x27, x0
  404580:	b.ls	404588 <ferror@plt+0x2888>  // b.plast
  404584:	strb	w1, [x26, x0]
  404588:	add	x0, x0, #0x1
  40458c:	ldrb	w1, [x6, x0]
  404590:	cbnz	w1, 40457c <ferror@plt+0x287c>
  404594:	b	404548 <ferror@plt+0x2848>
  404598:	sub	x6, x6, x19
  40459c:	b	40458c <ferror@plt+0x288c>
  4045a0:	mov	w22, w28
  4045a4:	b	403ff0 <ferror@plt+0x22f0>
  4045a8:	sub	sp, sp, #0x80
  4045ac:	stp	x29, x30, [sp, #16]
  4045b0:	add	x29, sp, #0x10
  4045b4:	stp	x19, x20, [sp, #32]
  4045b8:	mov	w19, w0
  4045bc:	mov	x20, x3
  4045c0:	stp	x21, x22, [sp, #48]
  4045c4:	stp	x23, x24, [sp, #64]
  4045c8:	mov	x24, x1
  4045cc:	stp	x25, x26, [sp, #80]
  4045d0:	mov	x25, x2
  4045d4:	stp	x27, x28, [sp, #96]
  4045d8:	bl	401cb0 <__errno_location@plt>
  4045dc:	mov	x23, x0
  4045e0:	ldr	w0, [x0]
  4045e4:	adrp	x27, 419000 <_obstack_memory_used@@Base+0x13318>
  4045e8:	str	w0, [sp, #116]
  4045ec:	ldr	x28, [x27, #568]
  4045f0:	tbz	w19, #31, 4045f8 <ferror@plt+0x28f8>
  4045f4:	bl	401b30 <abort@plt>
  4045f8:	add	x22, x27, #0x238
  4045fc:	ldr	w0, [x22, #8]
  404600:	cmp	w0, w19
  404604:	b.gt	404670 <ferror@plt+0x2970>
  404608:	mov	w0, #0x7fffffff            	// #2147483647
  40460c:	cmp	w19, w0
  404610:	b.ne	404618 <ferror@plt+0x2918>  // b.any
  404614:	bl	4057a0 <ferror@plt+0x3aa0>
  404618:	add	x2, x22, #0x10
  40461c:	add	w26, w19, #0x1
  404620:	cmp	x28, x2
  404624:	str	x2, [sp, #120]
  404628:	csel	x0, x28, xzr, ne  // ne = any
  40462c:	sbfiz	x1, x26, #4, #32
  404630:	bl	40560c <ferror@plt+0x390c>
  404634:	str	x0, [x27, #568]
  404638:	ldr	x2, [sp, #120]
  40463c:	mov	x21, x0
  404640:	cmp	x28, x2
  404644:	b.ne	404650 <ferror@plt+0x2950>  // b.any
  404648:	ldp	x0, x1, [x22, #16]
  40464c:	stp	x0, x1, [x21]
  404650:	ldr	w0, [x22, #8]
  404654:	mov	x28, x21
  404658:	mov	w1, #0x0                   	// #0
  40465c:	sub	w2, w26, w0
  404660:	add	x0, x21, w0, sxtw #4
  404664:	sbfiz	x2, x2, #4, #32
  404668:	bl	401aa0 <memset@plt>
  40466c:	str	w26, [x22, #8]
  404670:	sbfiz	x9, x19, #4, #32
  404674:	add	x19, x28, w19, sxtw #4
  404678:	ldp	x7, x0, [x20, #40]
  40467c:	add	x27, x20, #0x8
  404680:	ldp	w4, w26, [x20]
  404684:	mov	x6, x27
  404688:	ldr	x22, [x28, x9]
  40468c:	orr	w26, w26, #0x1
  404690:	ldr	x21, [x19, #8]
  404694:	str	x0, [sp]
  404698:	mov	x3, x25
  40469c:	mov	x2, x24
  4046a0:	mov	x1, x22
  4046a4:	mov	w5, w26
  4046a8:	mov	x0, x21
  4046ac:	str	x9, [sp, #120]
  4046b0:	bl	403a14 <ferror@plt+0x1d14>
  4046b4:	cmp	x22, x0
  4046b8:	b.hi	404714 <ferror@plt+0x2a14>  // b.pmore
  4046bc:	ldr	x9, [sp, #120]
  4046c0:	add	x22, x0, #0x1
  4046c4:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x13318>
  4046c8:	add	x0, x0, #0x340
  4046cc:	cmp	x21, x0
  4046d0:	str	x22, [x28, x9]
  4046d4:	b.eq	4046e0 <ferror@plt+0x29e0>  // b.none
  4046d8:	mov	x0, x21
  4046dc:	bl	401be0 <free@plt>
  4046e0:	mov	x0, x22
  4046e4:	bl	4055ac <ferror@plt+0x38ac>
  4046e8:	ldp	x7, x1, [x20, #40]
  4046ec:	mov	x21, x0
  4046f0:	ldr	w4, [x20]
  4046f4:	mov	x6, x27
  4046f8:	str	x0, [x19, #8]
  4046fc:	mov	w5, w26
  404700:	str	x1, [sp]
  404704:	mov	x3, x25
  404708:	mov	x2, x24
  40470c:	mov	x1, x22
  404710:	bl	403a14 <ferror@plt+0x1d14>
  404714:	ldr	w0, [sp, #116]
  404718:	ldp	x29, x30, [sp, #16]
  40471c:	ldp	x19, x20, [sp, #32]
  404720:	ldp	x25, x26, [sp, #80]
  404724:	ldp	x27, x28, [sp, #96]
  404728:	str	w0, [x23]
  40472c:	mov	x0, x21
  404730:	ldp	x21, x22, [sp, #48]
  404734:	ldp	x23, x24, [sp, #64]
  404738:	add	sp, sp, #0x80
  40473c:	ret
  404740:	stp	x29, x30, [sp, #-48]!
  404744:	mov	x29, sp
  404748:	stp	x19, x20, [sp, #16]
  40474c:	mov	x19, x0
  404750:	str	x21, [sp, #32]
  404754:	bl	401cb0 <__errno_location@plt>
  404758:	ldr	w21, [x0]
  40475c:	mov	x20, x0
  404760:	cbnz	x19, 404770 <ferror@plt+0x2a70>
  404764:	adrp	x19, 419000 <_obstack_memory_used@@Base+0x13318>
  404768:	add	x19, x19, #0x340
  40476c:	add	x19, x19, #0x100
  404770:	mov	x0, x19
  404774:	mov	x1, #0x38                  	// #56
  404778:	bl	405748 <ferror@plt+0x3a48>
  40477c:	str	w21, [x20]
  404780:	ldp	x19, x20, [sp, #16]
  404784:	ldr	x21, [sp, #32]
  404788:	ldp	x29, x30, [sp], #48
  40478c:	ret
  404790:	cbnz	x0, 4047a0 <ferror@plt+0x2aa0>
  404794:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x13318>
  404798:	add	x0, x0, #0x340
  40479c:	add	x0, x0, #0x100
  4047a0:	ldr	w0, [x0]
  4047a4:	ret
  4047a8:	cbnz	x0, 4047b8 <ferror@plt+0x2ab8>
  4047ac:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x13318>
  4047b0:	add	x0, x0, #0x340
  4047b4:	add	x0, x0, #0x100
  4047b8:	str	w1, [x0]
  4047bc:	ret
  4047c0:	and	w1, w1, #0xff
  4047c4:	cbnz	x0, 4047d4 <ferror@plt+0x2ad4>
  4047c8:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x13318>
  4047cc:	add	x0, x0, #0x340
  4047d0:	add	x0, x0, #0x100
  4047d4:	ubfx	x4, x1, #5, #3
  4047d8:	add	x0, x0, #0x8
  4047dc:	and	w3, w1, #0x1f
  4047e0:	lsl	x4, x4, #2
  4047e4:	ldr	w6, [x0, x4]
  4047e8:	lsr	w5, w6, w3
  4047ec:	eor	w1, w5, w2
  4047f0:	and	w1, w1, #0x1
  4047f4:	lsl	w1, w1, w3
  4047f8:	eor	w1, w1, w6
  4047fc:	str	w1, [x0, x4]
  404800:	and	w0, w5, #0x1
  404804:	ret
  404808:	mov	x2, x0
  40480c:	cbnz	x0, 40481c <ferror@plt+0x2b1c>
  404810:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x13318>
  404814:	add	x2, x2, #0x340
  404818:	add	x2, x2, #0x100
  40481c:	ldr	w0, [x2, #4]
  404820:	str	w1, [x2, #4]
  404824:	ret
  404828:	cbnz	x0, 404838 <ferror@plt+0x2b38>
  40482c:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x13318>
  404830:	add	x0, x0, #0x340
  404834:	add	x0, x0, #0x100
  404838:	mov	w3, #0xa                   	// #10
  40483c:	str	w3, [x0]
  404840:	cmp	x1, #0x0
  404844:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  404848:	b.ne	404858 <ferror@plt+0x2b58>  // b.any
  40484c:	stp	x29, x30, [sp, #-16]!
  404850:	mov	x29, sp
  404854:	bl	401b30 <abort@plt>
  404858:	stp	x1, x2, [x0, #40]
  40485c:	ret
  404860:	sub	sp, sp, #0x60
  404864:	stp	x29, x30, [sp, #16]
  404868:	add	x29, sp, #0x10
  40486c:	stp	x19, x20, [sp, #32]
  404870:	stp	x21, x22, [sp, #48]
  404874:	mov	x21, x0
  404878:	mov	x22, x1
  40487c:	stp	x23, x24, [sp, #64]
  404880:	mov	x23, x2
  404884:	mov	x24, x3
  404888:	str	x25, [sp, #80]
  40488c:	cbnz	x4, 4048f0 <ferror@plt+0x2bf0>
  404890:	adrp	x19, 419000 <_obstack_memory_used@@Base+0x13318>
  404894:	add	x19, x19, #0x340
  404898:	add	x19, x19, #0x100
  40489c:	bl	401cb0 <__errno_location@plt>
  4048a0:	ldr	w25, [x0]
  4048a4:	mov	x20, x0
  4048a8:	add	x6, x19, #0x8
  4048ac:	ldr	x0, [x19, #48]
  4048b0:	str	x0, [sp]
  4048b4:	mov	x3, x24
  4048b8:	mov	x2, x23
  4048bc:	ldp	w4, w5, [x19]
  4048c0:	mov	x1, x22
  4048c4:	ldr	x7, [x19, #40]
  4048c8:	mov	x0, x21
  4048cc:	bl	403a14 <ferror@plt+0x1d14>
  4048d0:	ldp	x29, x30, [sp, #16]
  4048d4:	ldp	x21, x22, [sp, #48]
  4048d8:	ldp	x23, x24, [sp, #64]
  4048dc:	str	w25, [x20]
  4048e0:	ldp	x19, x20, [sp, #32]
  4048e4:	ldr	x25, [sp, #80]
  4048e8:	add	sp, sp, #0x60
  4048ec:	ret
  4048f0:	mov	x19, x4
  4048f4:	b	40489c <ferror@plt+0x2b9c>
  4048f8:	sub	sp, sp, #0x80
  4048fc:	stp	x29, x30, [sp, #16]
  404900:	add	x29, sp, #0x10
  404904:	stp	x19, x20, [sp, #32]
  404908:	mov	x20, x2
  40490c:	stp	x21, x22, [sp, #48]
  404910:	stp	x23, x24, [sp, #64]
  404914:	mov	x23, x0
  404918:	mov	x24, x1
  40491c:	stp	x25, x26, [sp, #80]
  404920:	stp	x27, x28, [sp, #96]
  404924:	cbnz	x3, 4049f4 <ferror@plt+0x2cf4>
  404928:	adrp	x19, 419000 <_obstack_memory_used@@Base+0x13318>
  40492c:	add	x19, x19, #0x340
  404930:	add	x19, x19, #0x100
  404934:	bl	401cb0 <__errno_location@plt>
  404938:	ldr	w8, [x0]
  40493c:	mov	x22, x0
  404940:	ldr	w5, [x19, #4]
  404944:	ldr	x0, [x19, #48]
  404948:	str	x0, [sp]
  40494c:	cmp	x20, #0x0
  404950:	add	x28, x19, #0x8
  404954:	cset	w25, eq  // eq = none
  404958:	ldr	w4, [x19]
  40495c:	ldr	x7, [x19, #40]
  404960:	orr	w25, w25, w5
  404964:	mov	x6, x28
  404968:	mov	x3, x24
  40496c:	mov	x2, x23
  404970:	mov	w5, w25
  404974:	mov	x1, #0x0                   	// #0
  404978:	mov	x0, #0x0                   	// #0
  40497c:	str	w8, [sp, #124]
  404980:	bl	403a14 <ferror@plt+0x1d14>
  404984:	add	x27, x0, #0x1
  404988:	mov	x21, x0
  40498c:	mov	x0, x27
  404990:	bl	4055ac <ferror@plt+0x38ac>
  404994:	ldr	x1, [x19, #48]
  404998:	str	x1, [sp]
  40499c:	mov	x26, x0
  4049a0:	mov	x6, x28
  4049a4:	ldr	w4, [x19]
  4049a8:	mov	w5, w25
  4049ac:	ldr	x7, [x19, #40]
  4049b0:	mov	x3, x24
  4049b4:	mov	x2, x23
  4049b8:	mov	x1, x27
  4049bc:	bl	403a14 <ferror@plt+0x1d14>
  4049c0:	ldr	w8, [sp, #124]
  4049c4:	str	w8, [x22]
  4049c8:	cbz	x20, 4049d0 <ferror@plt+0x2cd0>
  4049cc:	str	x21, [x20]
  4049d0:	mov	x0, x26
  4049d4:	ldp	x29, x30, [sp, #16]
  4049d8:	ldp	x19, x20, [sp, #32]
  4049dc:	ldp	x21, x22, [sp, #48]
  4049e0:	ldp	x23, x24, [sp, #64]
  4049e4:	ldp	x25, x26, [sp, #80]
  4049e8:	ldp	x27, x28, [sp, #96]
  4049ec:	add	sp, sp, #0x80
  4049f0:	ret
  4049f4:	mov	x19, x3
  4049f8:	b	404934 <ferror@plt+0x2c34>
  4049fc:	mov	x3, x2
  404a00:	mov	x2, #0x0                   	// #0
  404a04:	b	4048f8 <ferror@plt+0x2bf8>
  404a08:	stp	x29, x30, [sp, #-64]!
  404a0c:	mov	x29, sp
  404a10:	stp	x19, x20, [sp, #16]
  404a14:	adrp	x20, 419000 <_obstack_memory_used@@Base+0x13318>
  404a18:	add	x19, x20, #0x238
  404a1c:	stp	x21, x22, [sp, #32]
  404a20:	mov	x22, #0x0                   	// #0
  404a24:	ldr	x21, [x20, #568]
  404a28:	str	x23, [sp, #48]
  404a2c:	add	x23, x21, #0x8
  404a30:	ldr	w0, [x19, #8]
  404a34:	add	x22, x22, #0x1
  404a38:	cmp	w0, w22
  404a3c:	b.gt	404a94 <ferror@plt+0x2d94>
  404a40:	ldr	x0, [x21, #8]
  404a44:	adrp	x22, 419000 <_obstack_memory_used@@Base+0x13318>
  404a48:	add	x22, x22, #0x340
  404a4c:	cmp	x0, x22
  404a50:	b.eq	404a60 <ferror@plt+0x2d60>  // b.none
  404a54:	bl	401be0 <free@plt>
  404a58:	mov	x0, #0x100                 	// #256
  404a5c:	stp	x0, x22, [x19, #16]
  404a60:	add	x22, x19, #0x10
  404a64:	cmp	x21, x22
  404a68:	b.eq	404a78 <ferror@plt+0x2d78>  // b.none
  404a6c:	mov	x0, x21
  404a70:	bl	401be0 <free@plt>
  404a74:	str	x22, [x20, #568]
  404a78:	mov	w0, #0x1                   	// #1
  404a7c:	str	w0, [x19, #8]
  404a80:	ldp	x19, x20, [sp, #16]
  404a84:	ldp	x21, x22, [sp, #32]
  404a88:	ldr	x23, [sp, #48]
  404a8c:	ldp	x29, x30, [sp], #64
  404a90:	ret
  404a94:	lsl	x0, x22, #4
  404a98:	ldr	x0, [x23, x0]
  404a9c:	bl	401be0 <free@plt>
  404aa0:	b	404a30 <ferror@plt+0x2d30>
  404aa4:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x13318>
  404aa8:	add	x3, x3, #0x340
  404aac:	add	x3, x3, #0x100
  404ab0:	mov	x2, #0xffffffffffffffff    	// #-1
  404ab4:	b	4045a8 <ferror@plt+0x28a8>
  404ab8:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x13318>
  404abc:	add	x3, x3, #0x340
  404ac0:	add	x3, x3, #0x100
  404ac4:	b	4045a8 <ferror@plt+0x28a8>
  404ac8:	mov	x1, x0
  404acc:	mov	w0, #0x0                   	// #0
  404ad0:	b	404aa4 <ferror@plt+0x2da4>
  404ad4:	mov	x2, x1
  404ad8:	mov	x1, x0
  404adc:	mov	w0, #0x0                   	// #0
  404ae0:	b	404ab8 <ferror@plt+0x2db8>
  404ae4:	stp	x29, x30, [sp, #-96]!
  404ae8:	add	x8, sp, #0x28
  404aec:	mov	x29, sp
  404af0:	stp	x19, x20, [sp, #16]
  404af4:	mov	x20, x2
  404af8:	mov	w19, w0
  404afc:	mov	w0, w1
  404b00:	bl	4038a0 <ferror@plt+0x1ba0>
  404b04:	add	x3, sp, #0x28
  404b08:	mov	x1, x20
  404b0c:	mov	w0, w19
  404b10:	mov	x2, #0xffffffffffffffff    	// #-1
  404b14:	bl	4045a8 <ferror@plt+0x28a8>
  404b18:	ldp	x19, x20, [sp, #16]
  404b1c:	ldp	x29, x30, [sp], #96
  404b20:	ret
  404b24:	stp	x29, x30, [sp, #-112]!
  404b28:	add	x8, sp, #0x38
  404b2c:	mov	x29, sp
  404b30:	stp	x19, x20, [sp, #16]
  404b34:	mov	x20, x2
  404b38:	mov	w19, w0
  404b3c:	mov	w0, w1
  404b40:	str	x21, [sp, #32]
  404b44:	mov	x21, x3
  404b48:	bl	4038a0 <ferror@plt+0x1ba0>
  404b4c:	add	x3, sp, #0x38
  404b50:	mov	x2, x21
  404b54:	mov	x1, x20
  404b58:	mov	w0, w19
  404b5c:	bl	4045a8 <ferror@plt+0x28a8>
  404b60:	ldp	x19, x20, [sp, #16]
  404b64:	ldr	x21, [sp, #32]
  404b68:	ldp	x29, x30, [sp], #112
  404b6c:	ret
  404b70:	mov	x2, x1
  404b74:	mov	w1, w0
  404b78:	mov	w0, #0x0                   	// #0
  404b7c:	b	404ae4 <ferror@plt+0x2de4>
  404b80:	mov	x3, x2
  404b84:	mov	x2, x1
  404b88:	mov	w1, w0
  404b8c:	mov	w0, #0x0                   	// #0
  404b90:	b	404b24 <ferror@plt+0x2e24>
  404b94:	stp	x29, x30, [sp, #-112]!
  404b98:	mov	x29, sp
  404b9c:	stp	x19, x20, [sp, #16]
  404ba0:	mov	x20, x1
  404ba4:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x13318>
  404ba8:	add	x1, x1, #0x340
  404bac:	mov	x19, x0
  404bb0:	add	x1, x1, #0x100
  404bb4:	str	x21, [sp, #32]
  404bb8:	and	w21, w2, #0xff
  404bbc:	mov	x2, #0x38                  	// #56
  404bc0:	add	x0, sp, x2
  404bc4:	bl	4018f0 <memcpy@plt>
  404bc8:	mov	w1, w21
  404bcc:	add	x0, sp, #0x38
  404bd0:	mov	w2, #0x1                   	// #1
  404bd4:	bl	4047c0 <ferror@plt+0x2ac0>
  404bd8:	add	x3, sp, #0x38
  404bdc:	mov	x2, x20
  404be0:	mov	x1, x19
  404be4:	mov	w0, #0x0                   	// #0
  404be8:	bl	4045a8 <ferror@plt+0x28a8>
  404bec:	ldp	x19, x20, [sp, #16]
  404bf0:	ldr	x21, [sp, #32]
  404bf4:	ldp	x29, x30, [sp], #112
  404bf8:	ret
  404bfc:	mov	w2, w1
  404c00:	mov	x1, #0xffffffffffffffff    	// #-1
  404c04:	b	404b94 <ferror@plt+0x2e94>
  404c08:	mov	w1, #0x3a                  	// #58
  404c0c:	b	404bfc <ferror@plt+0x2efc>
  404c10:	mov	w2, #0x3a                  	// #58
  404c14:	b	404b94 <ferror@plt+0x2e94>
  404c18:	stp	x29, x30, [sp, #-160]!
  404c1c:	add	x8, sp, #0x20
  404c20:	mov	x29, sp
  404c24:	stp	x19, x20, [sp, #16]
  404c28:	mov	x20, x2
  404c2c:	mov	w19, w0
  404c30:	mov	w0, w1
  404c34:	bl	4038a0 <ferror@plt+0x1ba0>
  404c38:	add	x1, sp, #0x20
  404c3c:	add	x0, sp, #0x68
  404c40:	mov	x2, #0x38                  	// #56
  404c44:	bl	4018f0 <memcpy@plt>
  404c48:	add	x0, sp, #0x68
  404c4c:	mov	w2, #0x1                   	// #1
  404c50:	mov	w1, #0x3a                  	// #58
  404c54:	bl	4047c0 <ferror@plt+0x2ac0>
  404c58:	add	x3, sp, #0x68
  404c5c:	mov	x1, x20
  404c60:	mov	w0, w19
  404c64:	mov	x2, #0xffffffffffffffff    	// #-1
  404c68:	bl	4045a8 <ferror@plt+0x28a8>
  404c6c:	ldp	x19, x20, [sp, #16]
  404c70:	ldp	x29, x30, [sp], #160
  404c74:	ret
  404c78:	stp	x29, x30, [sp, #-128]!
  404c7c:	mov	x29, sp
  404c80:	stp	x21, x22, [sp, #32]
  404c84:	mov	x22, x1
  404c88:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x13318>
  404c8c:	add	x1, x1, #0x340
  404c90:	mov	x21, x4
  404c94:	add	x1, x1, #0x100
  404c98:	stp	x19, x20, [sp, #16]
  404c9c:	mov	x20, x3
  404ca0:	mov	w19, w0
  404ca4:	add	x0, sp, #0x48
  404ca8:	str	x23, [sp, #48]
  404cac:	mov	x23, x2
  404cb0:	mov	x2, #0x38                  	// #56
  404cb4:	bl	4018f0 <memcpy@plt>
  404cb8:	mov	x2, x23
  404cbc:	mov	x1, x22
  404cc0:	add	x0, sp, #0x48
  404cc4:	bl	404828 <ferror@plt+0x2b28>
  404cc8:	add	x3, sp, #0x48
  404ccc:	mov	x2, x21
  404cd0:	mov	x1, x20
  404cd4:	mov	w0, w19
  404cd8:	bl	4045a8 <ferror@plt+0x28a8>
  404cdc:	ldp	x19, x20, [sp, #16]
  404ce0:	ldp	x21, x22, [sp, #32]
  404ce4:	ldr	x23, [sp, #48]
  404ce8:	ldp	x29, x30, [sp], #128
  404cec:	ret
  404cf0:	mov	x4, #0xffffffffffffffff    	// #-1
  404cf4:	b	404c78 <ferror@plt+0x2f78>
  404cf8:	mov	x3, x2
  404cfc:	mov	x2, x1
  404d00:	mov	x1, x0
  404d04:	mov	w0, #0x0                   	// #0
  404d08:	b	404cf0 <ferror@plt+0x2ff0>
  404d0c:	mov	x4, x3
  404d10:	mov	x3, x2
  404d14:	mov	x2, x1
  404d18:	mov	x1, x0
  404d1c:	mov	w0, #0x0                   	// #0
  404d20:	b	404c78 <ferror@plt+0x2f78>
  404d24:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x13318>
  404d28:	add	x3, x3, #0x238
  404d2c:	add	x3, x3, #0x20
  404d30:	b	4045a8 <ferror@plt+0x28a8>
  404d34:	mov	x2, x1
  404d38:	mov	x1, x0
  404d3c:	mov	w0, #0x0                   	// #0
  404d40:	b	404d24 <ferror@plt+0x3024>
  404d44:	mov	x2, #0xffffffffffffffff    	// #-1
  404d48:	b	404d24 <ferror@plt+0x3024>
  404d4c:	mov	x1, x0
  404d50:	mov	w0, #0x0                   	// #0
  404d54:	b	404d44 <ferror@plt+0x3044>
  404d58:	stp	x29, x30, [sp, #-48]!
  404d5c:	add	x1, x0, #0x18
  404d60:	mov	x29, sp
  404d64:	stp	x19, x20, [sp, #16]
  404d68:	mov	x19, x0
  404d6c:	stp	x21, x22, [sp, #32]
  404d70:	ldp	x22, x0, [x1, #16]
  404d74:	sub	x21, x0, x22
  404d78:	cmp	x0, x22
  404d7c:	sub	x21, x21, #0x1
  404d80:	b.ne	404d90 <ferror@plt+0x3090>  // b.any
  404d84:	ldrb	w2, [x1, #80]
  404d88:	orr	w2, w2, #0x2
  404d8c:	strb	w2, [x1, #80]
  404d90:	ldr	x2, [x1, #48]
  404d94:	add	x20, x19, #0x70
  404d98:	ldr	x3, [x1, #32]
  404d9c:	add	x0, x0, x2
  404da0:	bic	x2, x0, x2
  404da4:	ldr	x0, [x1, #8]
  404da8:	sub	x4, x2, x0
  404dac:	sub	x0, x3, x0
  404db0:	cmp	x4, x0
  404db4:	csel	x2, x2, x3, ls  // ls = plast
  404db8:	ldr	x0, [x20, #32]
  404dbc:	stp	x2, x2, [x1, #16]
  404dc0:	ldr	x1, [x20, #24]
  404dc4:	sub	x0, x0, x1
  404dc8:	cmp	x0, #0x7
  404dcc:	b.hi	404ddc <ferror@plt+0x30dc>  // b.pmore
  404dd0:	mov	x0, x20
  404dd4:	mov	x1, #0x8                   	// #8
  404dd8:	bl	405b34 <_obstack_newchunk@@Base>
  404ddc:	ldr	x0, [x20, #24]
  404de0:	str	x22, [x0]
  404de4:	ldr	x0, [x20, #24]
  404de8:	add	x0, x0, #0x8
  404dec:	str	x0, [x20, #24]
  404df0:	add	x20, x19, #0xc8
  404df4:	ldp	x1, x0, [x20, #24]
  404df8:	sub	x0, x0, x1
  404dfc:	cmp	x0, #0x7
  404e00:	b.hi	404e10 <ferror@plt+0x3110>  // b.pmore
  404e04:	mov	x0, x20
  404e08:	mov	x1, #0x8                   	// #8
  404e0c:	bl	405b34 <_obstack_newchunk@@Base>
  404e10:	ldr	x0, [x20, #24]
  404e14:	str	x21, [x0]
  404e18:	ldr	x0, [x20, #24]
  404e1c:	ldp	x21, x22, [sp, #32]
  404e20:	add	x0, x0, #0x8
  404e24:	str	x0, [x20, #24]
  404e28:	ldr	x0, [x19]
  404e2c:	add	x0, x0, #0x1
  404e30:	str	x0, [x19]
  404e34:	ldp	x19, x20, [sp, #16]
  404e38:	ldp	x29, x30, [sp], #48
  404e3c:	ret
  404e40:	stp	x29, x30, [sp, #-48]!
  404e44:	mov	x2, #0x0                   	// #0
  404e48:	mov	x1, #0x0                   	// #0
  404e4c:	mov	x29, sp
  404e50:	stp	x19, x20, [sp, #16]
  404e54:	mov	x19, x0
  404e58:	adrp	x20, 401000 <mbrtowc@plt-0x8e0>
  404e5c:	add	x20, x20, #0xa10
  404e60:	add	x0, x0, #0x18
  404e64:	stp	xzr, xzr, [x19]
  404e68:	mov	x3, x20
  404e6c:	str	xzr, [x19, #16]
  404e70:	str	x21, [sp, #32]
  404e74:	adrp	x21, 401000 <mbrtowc@plt-0x8e0>
  404e78:	add	x21, x21, #0xbe0
  404e7c:	mov	x4, x21
  404e80:	bl	405b08 <_obstack_begin@@Base>
  404e84:	mov	x4, x21
  404e88:	mov	x3, x20
  404e8c:	add	x0, x19, #0x70
  404e90:	mov	x2, #0x0                   	// #0
  404e94:	mov	x1, #0x0                   	// #0
  404e98:	bl	405b08 <_obstack_begin@@Base>
  404e9c:	mov	x4, x21
  404ea0:	mov	x3, x20
  404ea4:	add	x0, x19, #0xc8
  404ea8:	mov	x2, #0x0                   	// #0
  404eac:	ldp	x19, x20, [sp, #16]
  404eb0:	mov	x1, #0x0                   	// #0
  404eb4:	ldr	x21, [sp, #32]
  404eb8:	ldp	x29, x30, [sp], #48
  404ebc:	b	405b08 <_obstack_begin@@Base>
  404ec0:	stp	x29, x30, [sp, #-32]!
  404ec4:	mov	x1, #0x0                   	// #0
  404ec8:	mov	x29, sp
  404ecc:	str	x19, [sp, #16]
  404ed0:	mov	x19, x0
  404ed4:	add	x0, x0, #0x18
  404ed8:	bl	405c74 <_obstack_free@@Base>
  404edc:	add	x0, x19, #0x70
  404ee0:	mov	x1, #0x0                   	// #0
  404ee4:	bl	405c74 <_obstack_free@@Base>
  404ee8:	add	x0, x19, #0xc8
  404eec:	mov	x1, #0x0                   	// #0
  404ef0:	ldr	x19, [sp, #16]
  404ef4:	ldp	x29, x30, [sp], #32
  404ef8:	b	405c74 <_obstack_free@@Base>
  404efc:	stp	x29, x30, [sp, #-48]!
  404f00:	mov	x29, sp
  404f04:	stp	x19, x20, [sp, #16]
  404f08:	mov	x20, x1
  404f0c:	add	x19, x1, #0x18
  404f10:	stp	x21, x22, [sp, #32]
  404f14:	mov	x21, x0
  404f18:	mov	x0, x21
  404f1c:	bl	401a80 <fgetc@plt>
  404f20:	mov	w22, w0
  404f24:	cmn	w0, #0x1
  404f28:	b.ne	405040 <ferror@plt+0x3340>  // b.any
  404f2c:	ldp	x1, x0, [x19, #16]
  404f30:	cmp	x0, x1
  404f34:	b.eq	404f68 <ferror@plt+0x3268>  // b.none
  404f38:	ldr	x1, [x19, #32]
  404f3c:	cmp	x0, x1
  404f40:	b.ne	404f50 <ferror@plt+0x3250>  // b.any
  404f44:	mov	x0, x19
  404f48:	mov	x1, #0x1                   	// #1
  404f4c:	bl	405b34 <_obstack_newchunk@@Base>
  404f50:	ldr	x0, [x19, #24]
  404f54:	add	x1, x0, #0x1
  404f58:	str	x1, [x19, #24]
  404f5c:	strb	wzr, [x0]
  404f60:	mov	x0, x20
  404f64:	bl	404d58 <ferror@plt+0x3058>
  404f68:	add	x19, x20, #0x70
  404f6c:	ldp	x1, x0, [x19, #24]
  404f70:	sub	x0, x0, x1
  404f74:	cmp	x0, #0x7
  404f78:	b.hi	404f88 <ferror@plt+0x3288>  // b.pmore
  404f7c:	mov	x0, x19
  404f80:	mov	x1, #0x8                   	// #8
  404f84:	bl	405b34 <_obstack_newchunk@@Base>
  404f88:	ldr	x0, [x19, #24]
  404f8c:	str	xzr, [x0]
  404f90:	ldp	x2, x0, [x19, #16]
  404f94:	add	x0, x0, #0x8
  404f98:	cmp	x0, x2
  404f9c:	b.ne	404fac <ferror@plt+0x32ac>  // b.any
  404fa0:	ldrb	w1, [x19, #80]
  404fa4:	orr	w1, w1, #0x2
  404fa8:	strb	w1, [x19, #80]
  404fac:	ldr	x1, [x19, #48]
  404fb0:	ldr	x3, [x19, #32]
  404fb4:	add	x0, x0, x1
  404fb8:	bic	x1, x0, x1
  404fbc:	ldr	x0, [x19, #8]
  404fc0:	sub	x4, x1, x0
  404fc4:	sub	x0, x3, x0
  404fc8:	cmp	x4, x0
  404fcc:	csel	x1, x1, x3, ls  // ls = plast
  404fd0:	stp	x1, x1, [x19, #16]
  404fd4:	add	x1, x20, #0xc8
  404fd8:	ldp	x3, x0, [x1, #16]
  404fdc:	str	x2, [x20, #8]
  404fe0:	cmp	x0, x3
  404fe4:	b.ne	404ff4 <ferror@plt+0x32f4>  // b.any
  404fe8:	ldrb	w2, [x1, #80]
  404fec:	orr	w2, w2, #0x2
  404ff0:	strb	w2, [x1, #80]
  404ff4:	ldr	x2, [x1, #48]
  404ff8:	ldr	x4, [x1, #32]
  404ffc:	add	x0, x0, x2
  405000:	bic	x2, x0, x2
  405004:	ldr	x0, [x1, #8]
  405008:	sub	x5, x2, x0
  40500c:	sub	x0, x4, x0
  405010:	cmp	x5, x0
  405014:	mov	x0, x21
  405018:	csel	x2, x2, x4, ls  // ls = plast
  40501c:	stp	x2, x2, [x1, #16]
  405020:	str	x3, [x20, #16]
  405024:	bl	401d00 <ferror@plt>
  405028:	cmp	w0, #0x0
  40502c:	cset	w0, eq  // eq = none
  405030:	ldp	x19, x20, [sp, #16]
  405034:	ldp	x21, x22, [sp, #32]
  405038:	ldp	x29, x30, [sp], #48
  40503c:	ret
  405040:	ldp	x0, x1, [x19, #24]
  405044:	cmp	x1, x0
  405048:	b.ne	405058 <ferror@plt+0x3358>  // b.any
  40504c:	mov	x0, x19
  405050:	mov	x1, #0x1                   	// #1
  405054:	bl	405b34 <_obstack_newchunk@@Base>
  405058:	ldr	x0, [x19, #24]
  40505c:	add	x1, x0, #0x1
  405060:	str	x1, [x19, #24]
  405064:	strb	w22, [x0]
  405068:	cbnz	w22, 404f18 <ferror@plt+0x3218>
  40506c:	mov	x0, x20
  405070:	bl	404d58 <ferror@plt+0x3058>
  405074:	b	404f18 <ferror@plt+0x3218>
  405078:	stp	x29, x30, [sp, #-64]!
  40507c:	mov	x29, sp
  405080:	stp	x19, x20, [sp, #16]
  405084:	mov	x19, x2
  405088:	stp	x21, x22, [sp, #32]
  40508c:	mov	w21, w0
  405090:	mov	x22, x1
  405094:	str	x23, [sp, #48]
  405098:	mov	x23, #0x7ff00000            	// #2146435072
  40509c:	mov	x2, x19
  4050a0:	mov	x1, x22
  4050a4:	mov	w0, w21
  4050a8:	bl	401c20 <read@plt>
  4050ac:	mov	x20, x0
  4050b0:	tbz	x0, #63, 4050d4 <ferror@plt+0x33d4>
  4050b4:	bl	401cb0 <__errno_location@plt>
  4050b8:	ldr	w0, [x0]
  4050bc:	cmp	w0, #0x4
  4050c0:	b.eq	40509c <ferror@plt+0x339c>  // b.none
  4050c4:	cmp	w0, #0x16
  4050c8:	b.ne	4050d4 <ferror@plt+0x33d4>  // b.any
  4050cc:	cmp	x19, x23
  4050d0:	b.hi	4050ec <ferror@plt+0x33ec>  // b.pmore
  4050d4:	mov	x0, x20
  4050d8:	ldp	x19, x20, [sp, #16]
  4050dc:	ldp	x21, x22, [sp, #32]
  4050e0:	ldr	x23, [sp, #48]
  4050e4:	ldp	x29, x30, [sp], #64
  4050e8:	ret
  4050ec:	mov	x19, #0x7ff00000            	// #2146435072
  4050f0:	b	40509c <ferror@plt+0x339c>
  4050f4:	sub	sp, sp, #0x50
  4050f8:	stp	x29, x30, [sp, #32]
  4050fc:	add	x29, sp, #0x20
  405100:	stp	x19, x20, [sp, #48]
  405104:	mov	x20, x0
  405108:	mov	x19, x4
  40510c:	str	x21, [sp, #64]
  405110:	mov	x21, x5
  405114:	cbz	x1, 4051a8 <ferror@plt+0x34a8>
  405118:	mov	x5, x3
  40511c:	mov	x4, x2
  405120:	mov	x3, x1
  405124:	adrp	x2, 406000 <_obstack_memory_used@@Base+0x318>
  405128:	mov	w1, #0x1                   	// #1
  40512c:	add	x2, x2, #0xa10
  405130:	bl	401ba0 <__fprintf_chk@plt>
  405134:	mov	w2, #0x5                   	// #5
  405138:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x318>
  40513c:	mov	x0, #0x0                   	// #0
  405140:	add	x1, x1, #0xa23
  405144:	bl	401c60 <dcgettext@plt>
  405148:	mov	x3, x0
  40514c:	mov	w4, #0x7e3                 	// #2019
  405150:	mov	w1, #0x1                   	// #1
  405154:	mov	x0, x20
  405158:	adrp	x2, 406000 <_obstack_memory_used@@Base+0x318>
  40515c:	add	x2, x2, #0xd04
  405160:	bl	401ba0 <__fprintf_chk@plt>
  405164:	mov	w2, #0x5                   	// #5
  405168:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x318>
  40516c:	mov	x0, #0x0                   	// #0
  405170:	add	x1, x1, #0xa27
  405174:	bl	401c60 <dcgettext@plt>
  405178:	mov	x1, x20
  40517c:	bl	401c70 <fputs_unlocked@plt>
  405180:	cmp	x21, #0x9
  405184:	b.hi	405418 <ferror@plt+0x3718>  // b.pmore
  405188:	cmp	w21, #0x9
  40518c:	b.hi	405418 <ferror@plt+0x3718>  // b.pmore
  405190:	adrp	x0, 406000 <_obstack_memory_used@@Base+0x318>
  405194:	add	x0, x0, #0xcf0
  405198:	ldrh	w0, [x0, w21, uxtw #1]
  40519c:	adr	x1, 4051a8 <ferror@plt+0x34a8>
  4051a0:	add	x0, x1, w0, sxth #2
  4051a4:	br	x0
  4051a8:	mov	x4, x3
  4051ac:	mov	w1, #0x1                   	// #1
  4051b0:	mov	x3, x2
  4051b4:	adrp	x2, 406000 <_obstack_memory_used@@Base+0x318>
  4051b8:	add	x2, x2, #0xa1c
  4051bc:	bl	401ba0 <__fprintf_chk@plt>
  4051c0:	b	405134 <ferror@plt+0x3434>
  4051c4:	mov	w2, #0x5                   	// #5
  4051c8:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x318>
  4051cc:	mov	x0, #0x0                   	// #0
  4051d0:	add	x1, x1, #0xaf3
  4051d4:	bl	401c60 <dcgettext@plt>
  4051d8:	mov	x2, x0
  4051dc:	mov	x0, x20
  4051e0:	mov	w1, #0x1                   	// #1
  4051e4:	ldr	x3, [x19]
  4051e8:	ldp	x29, x30, [sp, #32]
  4051ec:	ldp	x19, x20, [sp, #48]
  4051f0:	ldr	x21, [sp, #64]
  4051f4:	add	sp, sp, #0x50
  4051f8:	b	401ba0 <__fprintf_chk@plt>
  4051fc:	mov	w2, #0x5                   	// #5
  405200:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x318>
  405204:	mov	x0, #0x0                   	// #0
  405208:	add	x1, x1, #0xb03
  40520c:	bl	401c60 <dcgettext@plt>
  405210:	mov	x2, x0
  405214:	mov	x0, x20
  405218:	mov	w1, #0x1                   	// #1
  40521c:	ldp	x3, x4, [x19]
  405220:	ldp	x29, x30, [sp, #32]
  405224:	ldp	x19, x20, [sp, #48]
  405228:	ldr	x21, [sp, #64]
  40522c:	add	sp, sp, #0x50
  405230:	b	401ba0 <__fprintf_chk@plt>
  405234:	mov	w2, #0x5                   	// #5
  405238:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x318>
  40523c:	mov	x0, #0x0                   	// #0
  405240:	add	x1, x1, #0xb1a
  405244:	bl	401c60 <dcgettext@plt>
  405248:	mov	x2, x0
  40524c:	mov	x0, x20
  405250:	mov	w1, #0x1                   	// #1
  405254:	ldp	x3, x4, [x19]
  405258:	ldr	x5, [x19, #16]
  40525c:	ldp	x29, x30, [sp, #32]
  405260:	ldp	x19, x20, [sp, #48]
  405264:	ldr	x21, [sp, #64]
  405268:	add	sp, sp, #0x50
  40526c:	b	401ba0 <__fprintf_chk@plt>
  405270:	mov	w2, #0x5                   	// #5
  405274:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x318>
  405278:	mov	x0, #0x0                   	// #0
  40527c:	add	x1, x1, #0xb36
  405280:	bl	401c60 <dcgettext@plt>
  405284:	mov	x2, x0
  405288:	mov	x0, x20
  40528c:	mov	w1, #0x1                   	// #1
  405290:	ldp	x3, x4, [x19]
  405294:	ldp	x5, x6, [x19, #16]
  405298:	ldp	x29, x30, [sp, #32]
  40529c:	ldp	x19, x20, [sp, #48]
  4052a0:	ldr	x21, [sp, #64]
  4052a4:	add	sp, sp, #0x50
  4052a8:	b	401ba0 <__fprintf_chk@plt>
  4052ac:	mov	w2, #0x5                   	// #5
  4052b0:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x318>
  4052b4:	mov	x0, #0x0                   	// #0
  4052b8:	add	x1, x1, #0xb56
  4052bc:	bl	401c60 <dcgettext@plt>
  4052c0:	mov	x2, x0
  4052c4:	mov	x0, x20
  4052c8:	mov	w1, #0x1                   	// #1
  4052cc:	ldp	x3, x4, [x19]
  4052d0:	ldp	x5, x6, [x19, #16]
  4052d4:	ldp	x29, x30, [sp, #32]
  4052d8:	ldr	x7, [x19, #32]
  4052dc:	ldp	x19, x20, [sp, #48]
  4052e0:	ldr	x21, [sp, #64]
  4052e4:	add	sp, sp, #0x50
  4052e8:	b	401ba0 <__fprintf_chk@plt>
  4052ec:	mov	w2, #0x5                   	// #5
  4052f0:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x318>
  4052f4:	mov	x0, #0x0                   	// #0
  4052f8:	add	x1, x1, #0xb7a
  4052fc:	bl	401c60 <dcgettext@plt>
  405300:	mov	x2, x0
  405304:	ldp	x3, x4, [x19]
  405308:	mov	x0, x20
  40530c:	ldp	x5, x6, [x19, #16]
  405310:	ldp	x7, x1, [x19, #32]
  405314:	str	x1, [sp]
  405318:	mov	w1, #0x1                   	// #1
  40531c:	bl	401ba0 <__fprintf_chk@plt>
  405320:	ldp	x29, x30, [sp, #32]
  405324:	ldp	x19, x20, [sp, #48]
  405328:	ldr	x21, [sp, #64]
  40532c:	add	sp, sp, #0x50
  405330:	ret
  405334:	mov	w2, #0x5                   	// #5
  405338:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x318>
  40533c:	mov	x0, #0x0                   	// #0
  405340:	add	x1, x1, #0xba2
  405344:	bl	401c60 <dcgettext@plt>
  405348:	mov	x2, x0
  40534c:	ldp	x3, x4, [x19]
  405350:	mov	x0, x20
  405354:	ldp	x5, x6, [x19, #16]
  405358:	ldr	x1, [x19, #48]
  40535c:	ldr	x7, [x19, #32]
  405360:	str	x1, [sp, #8]
  405364:	ldr	x1, [x19, #40]
  405368:	str	x1, [sp]
  40536c:	mov	w1, #0x1                   	// #1
  405370:	bl	401ba0 <__fprintf_chk@plt>
  405374:	b	405320 <ferror@plt+0x3620>
  405378:	mov	w2, #0x5                   	// #5
  40537c:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x318>
  405380:	mov	x0, #0x0                   	// #0
  405384:	add	x1, x1, #0xbce
  405388:	bl	401c60 <dcgettext@plt>
  40538c:	mov	x2, x0
  405390:	ldr	x1, [x19, #56]
  405394:	mov	x0, x20
  405398:	ldp	x3, x4, [x19]
  40539c:	ldp	x5, x6, [x19, #16]
  4053a0:	ldr	x7, [x19, #32]
  4053a4:	str	x1, [sp, #16]
  4053a8:	ldr	x1, [x19, #48]
  4053ac:	str	x1, [sp, #8]
  4053b0:	ldr	x1, [x19, #40]
  4053b4:	str	x1, [sp]
  4053b8:	mov	w1, #0x1                   	// #1
  4053bc:	bl	401ba0 <__fprintf_chk@plt>
  4053c0:	b	405320 <ferror@plt+0x3620>
  4053c4:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x318>
  4053c8:	add	x1, x1, #0xbfe
  4053cc:	mov	w2, #0x5                   	// #5
  4053d0:	mov	x0, #0x0                   	// #0
  4053d4:	bl	401c60 <dcgettext@plt>
  4053d8:	ldr	x1, [x19, #64]
  4053dc:	mov	x2, x0
  4053e0:	ldp	x3, x4, [x19]
  4053e4:	mov	x0, x20
  4053e8:	ldp	x5, x6, [x19, #16]
  4053ec:	ldr	x7, [x19, #32]
  4053f0:	str	x1, [sp, #24]
  4053f4:	ldr	x1, [x19, #56]
  4053f8:	str	x1, [sp, #16]
  4053fc:	ldr	x1, [x19, #48]
  405400:	str	x1, [sp, #8]
  405404:	ldr	x1, [x19, #40]
  405408:	str	x1, [sp]
  40540c:	mov	w1, #0x1                   	// #1
  405410:	bl	401ba0 <__fprintf_chk@plt>
  405414:	b	405320 <ferror@plt+0x3620>
  405418:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x318>
  40541c:	mov	w2, #0x5                   	// #5
  405420:	add	x1, x1, #0xc32
  405424:	b	4053d0 <ferror@plt+0x36d0>
  405428:	mov	x5, #0x0                   	// #0
  40542c:	ldr	x6, [x4, x5, lsl #3]
  405430:	cbnz	x6, 405438 <ferror@plt+0x3738>
  405434:	b	4050f4 <ferror@plt+0x33f4>
  405438:	add	x5, x5, #0x1
  40543c:	b	40542c <ferror@plt+0x372c>
  405440:	stp	x29, x30, [sp, #-96]!
  405444:	mov	x5, #0x0                   	// #0
  405448:	mov	x29, sp
  40544c:	ldr	w7, [x4, #24]
  405450:	ldp	x6, x10, [x4]
  405454:	add	x4, sp, #0x10
  405458:	tbnz	w7, #31, 40548c <ferror@plt+0x378c>
  40545c:	add	x9, x6, #0xf
  405460:	mov	x8, x6
  405464:	and	x6, x9, #0xfffffffffffffff8
  405468:	ldr	x8, [x8]
  40546c:	str	x8, [x4, x5, lsl #3]
  405470:	cbz	x8, 405480 <ferror@plt+0x3780>
  405474:	add	x5, x5, #0x1
  405478:	cmp	x5, #0xa
  40547c:	b.ne	405458 <ferror@plt+0x3758>  // b.any
  405480:	bl	4050f4 <ferror@plt+0x33f4>
  405484:	ldp	x29, x30, [sp], #96
  405488:	ret
  40548c:	add	w9, w7, #0x8
  405490:	cmp	w9, #0x0
  405494:	b.le	4054ac <ferror@plt+0x37ac>
  405498:	add	x11, x6, #0xf
  40549c:	mov	x8, x6
  4054a0:	mov	w7, w9
  4054a4:	and	x6, x11, #0xfffffffffffffff8
  4054a8:	b	405468 <ferror@plt+0x3768>
  4054ac:	add	x8, x10, w7, sxtw
  4054b0:	mov	w7, w9
  4054b4:	b	405468 <ferror@plt+0x3768>
  4054b8:	stp	x29, x30, [sp, #-240]!
  4054bc:	mov	x29, sp
  4054c0:	stp	x4, x5, [sp, #208]
  4054c4:	add	x4, sp, #0xf0
  4054c8:	stp	x4, x4, [sp, #48]
  4054cc:	add	x4, sp, #0xd0
  4054d0:	str	x4, [sp, #64]
  4054d4:	mov	w4, #0xffffffe0            	// #-32
  4054d8:	str	w4, [sp, #72]
  4054dc:	mov	w4, #0xffffff80            	// #-128
  4054e0:	str	w4, [sp, #76]
  4054e4:	ldp	x4, x5, [sp, #48]
  4054e8:	stp	x4, x5, [sp, #16]
  4054ec:	ldp	x4, x5, [sp, #64]
  4054f0:	stp	x4, x5, [sp, #32]
  4054f4:	add	x4, sp, #0x10
  4054f8:	str	q0, [sp, #80]
  4054fc:	str	q1, [sp, #96]
  405500:	str	q2, [sp, #112]
  405504:	str	q3, [sp, #128]
  405508:	str	q4, [sp, #144]
  40550c:	str	q5, [sp, #160]
  405510:	str	q6, [sp, #176]
  405514:	str	q7, [sp, #192]
  405518:	stp	x6, x7, [sp, #224]
  40551c:	bl	405440 <ferror@plt+0x3740>
  405520:	ldp	x29, x30, [sp], #240
  405524:	ret
  405528:	stp	x29, x30, [sp, #-16]!
  40552c:	mov	w2, #0x5                   	// #5
  405530:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x318>
  405534:	mov	x29, sp
  405538:	add	x1, x1, #0xc6e
  40553c:	mov	x0, #0x0                   	// #0
  405540:	bl	401c60 <dcgettext@plt>
  405544:	mov	x1, x0
  405548:	adrp	x2, 406000 <_obstack_memory_used@@Base+0x318>
  40554c:	mov	w0, #0x1                   	// #1
  405550:	add	x2, x2, #0xc83
  405554:	bl	401a90 <__printf_chk@plt>
  405558:	mov	w2, #0x5                   	// #5
  40555c:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x318>
  405560:	mov	x0, #0x0                   	// #0
  405564:	add	x1, x1, #0xc99
  405568:	bl	401c60 <dcgettext@plt>
  40556c:	mov	x1, x0
  405570:	adrp	x3, 406000 <_obstack_memory_used@@Base+0x318>
  405574:	add	x3, x3, #0x38b
  405578:	adrp	x2, 406000 <_obstack_memory_used@@Base+0x318>
  40557c:	mov	w0, #0x1                   	// #1
  405580:	add	x2, x2, #0x3b3
  405584:	bl	401a90 <__printf_chk@plt>
  405588:	mov	w2, #0x5                   	// #5
  40558c:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x318>
  405590:	mov	x0, #0x0                   	// #0
  405594:	add	x1, x1, #0xcad
  405598:	bl	401c60 <dcgettext@plt>
  40559c:	ldp	x29, x30, [sp], #16
  4055a0:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x13318>
  4055a4:	ldr	x1, [x1, #696]
  4055a8:	b	401c70 <fputs_unlocked@plt>
  4055ac:	stp	x29, x30, [sp, #-32]!
  4055b0:	mov	x29, sp
  4055b4:	str	x19, [sp, #16]
  4055b8:	mov	x19, x0
  4055bc:	bl	401a10 <malloc@plt>
  4055c0:	cmp	x0, #0x0
  4055c4:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  4055c8:	b.eq	4055d0 <ferror@plt+0x38d0>  // b.none
  4055cc:	bl	4057a0 <ferror@plt+0x3aa0>
  4055d0:	ldr	x19, [sp, #16]
  4055d4:	ldp	x29, x30, [sp], #32
  4055d8:	ret
  4055dc:	mov	x2, x0
  4055e0:	mul	x0, x0, x1
  4055e4:	umulh	x2, x2, x1
  4055e8:	cmp	x2, #0x0
  4055ec:	cset	x1, ne  // ne = any
  4055f0:	tbnz	x0, #63, 4055f8 <ferror@plt+0x38f8>
  4055f4:	cbz	x1, 405604 <ferror@plt+0x3904>
  4055f8:	stp	x29, x30, [sp, #-16]!
  4055fc:	mov	x29, sp
  405600:	bl	4057a0 <ferror@plt+0x3aa0>
  405604:	b	4055ac <ferror@plt+0x38ac>
  405608:	b	4055ac <ferror@plt+0x38ac>
  40560c:	stp	x29, x30, [sp, #-32]!
  405610:	cmp	x1, #0x0
  405614:	ccmp	x0, #0x0, #0x4, eq  // eq = none
  405618:	mov	x29, sp
  40561c:	str	x19, [sp, #16]
  405620:	b.eq	405638 <ferror@plt+0x3938>  // b.none
  405624:	bl	401be0 <free@plt>
  405628:	mov	x0, #0x0                   	// #0
  40562c:	ldr	x19, [sp, #16]
  405630:	ldp	x29, x30, [sp], #32
  405634:	ret
  405638:	mov	x19, x1
  40563c:	bl	401ad0 <realloc@plt>
  405640:	cmp	x0, #0x0
  405644:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  405648:	b.eq	40562c <ferror@plt+0x392c>  // b.none
  40564c:	bl	4057a0 <ferror@plt+0x3aa0>
  405650:	mov	x3, x1
  405654:	mul	x1, x1, x2
  405658:	umulh	x3, x3, x2
  40565c:	cmp	x3, #0x0
  405660:	cset	x2, ne  // ne = any
  405664:	tbnz	x1, #63, 40566c <ferror@plt+0x396c>
  405668:	cbz	x2, 405678 <ferror@plt+0x3978>
  40566c:	stp	x29, x30, [sp, #-16]!
  405670:	mov	x29, sp
  405674:	bl	4057a0 <ferror@plt+0x3aa0>
  405678:	b	40560c <ferror@plt+0x390c>
  40567c:	ldr	x3, [x1]
  405680:	cbnz	x0, 4056bc <ferror@plt+0x39bc>
  405684:	cbnz	x3, 405698 <ferror@plt+0x3998>
  405688:	mov	x3, #0x80                  	// #128
  40568c:	cmp	x2, #0x80
  405690:	udiv	x3, x3, x2
  405694:	cinc	x3, x3, hi  // hi = pmore
  405698:	umulh	x5, x3, x2
  40569c:	mul	x4, x3, x2
  4056a0:	cmp	x5, #0x0
  4056a4:	cset	x5, ne  // ne = any
  4056a8:	tbnz	x4, #63, 4056b0 <ferror@plt+0x39b0>
  4056ac:	cbz	x5, 4056d8 <ferror@plt+0x39d8>
  4056b0:	stp	x29, x30, [sp, #-16]!
  4056b4:	mov	x29, sp
  4056b8:	bl	4057a0 <ferror@plt+0x3aa0>
  4056bc:	mov	x4, #0x5555555555555555    	// #6148914691236517205
  4056c0:	movk	x4, #0x5554
  4056c4:	udiv	x4, x4, x2
  4056c8:	cmp	x4, x3
  4056cc:	b.ls	4056b0 <ferror@plt+0x39b0>  // b.plast
  4056d0:	add	x4, x3, #0x1
  4056d4:	add	x3, x4, x3, lsr #1
  4056d8:	str	x3, [x1]
  4056dc:	mul	x1, x3, x2
  4056e0:	b	40560c <ferror@plt+0x390c>
  4056e4:	mov	x2, #0x1                   	// #1
  4056e8:	b	40567c <ferror@plt+0x397c>
  4056ec:	stp	x29, x30, [sp, #-32]!
  4056f0:	mov	x29, sp
  4056f4:	str	x19, [sp, #16]
  4056f8:	mov	x19, x0
  4056fc:	bl	4055ac <ferror@plt+0x38ac>
  405700:	mov	x2, x19
  405704:	mov	w1, #0x0                   	// #0
  405708:	ldr	x19, [sp, #16]
  40570c:	ldp	x29, x30, [sp], #32
  405710:	b	401aa0 <memset@plt>
  405714:	umulh	x2, x0, x1
  405718:	stp	x29, x30, [sp, #-16]!
  40571c:	mul	x4, x0, x1
  405720:	cmp	x2, #0x0
  405724:	mov	x29, sp
  405728:	cset	x2, ne  // ne = any
  40572c:	tbnz	x4, #63, 405734 <ferror@plt+0x3a34>
  405730:	cbz	x2, 405738 <ferror@plt+0x3a38>
  405734:	bl	4057a0 <ferror@plt+0x3aa0>
  405738:	bl	401ac0 <calloc@plt>
  40573c:	cbz	x0, 405734 <ferror@plt+0x3a34>
  405740:	ldp	x29, x30, [sp], #16
  405744:	ret
  405748:	stp	x29, x30, [sp, #-32]!
  40574c:	mov	x29, sp
  405750:	stp	x19, x20, [sp, #16]
  405754:	mov	x19, x1
  405758:	mov	x20, x0
  40575c:	mov	x0, x1
  405760:	bl	4055ac <ferror@plt+0x38ac>
  405764:	mov	x2, x19
  405768:	mov	x1, x20
  40576c:	ldp	x19, x20, [sp, #16]
  405770:	ldp	x29, x30, [sp], #32
  405774:	b	4018f0 <memcpy@plt>
  405778:	stp	x29, x30, [sp, #-32]!
  40577c:	mov	x29, sp
  405780:	str	x19, [sp, #16]
  405784:	mov	x19, x0
  405788:	bl	401910 <strlen@plt>
  40578c:	add	x1, x0, #0x1
  405790:	mov	x0, x19
  405794:	ldr	x19, [sp, #16]
  405798:	ldp	x29, x30, [sp], #32
  40579c:	b	405748 <ferror@plt+0x3a48>
  4057a0:	stp	x29, x30, [sp, #-32]!
  4057a4:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x13318>
  4057a8:	mov	w2, #0x5                   	// #5
  4057ac:	mov	x29, sp
  4057b0:	str	x19, [sp, #16]
  4057b4:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x318>
  4057b8:	ldr	w19, [x0, #560]
  4057bc:	add	x1, x1, #0xd33
  4057c0:	mov	x0, #0x0                   	// #0
  4057c4:	bl	401c60 <dcgettext@plt>
  4057c8:	adrp	x2, 406000 <_obstack_memory_used@@Base+0x318>
  4057cc:	mov	x3, x0
  4057d0:	add	x2, x2, #0x7c5
  4057d4:	mov	w0, w19
  4057d8:	mov	w1, #0x0                   	// #0
  4057dc:	bl	401940 <error@plt>
  4057e0:	bl	401b30 <abort@plt>
  4057e4:	stp	x29, x30, [sp, #-32]!
  4057e8:	mov	x29, sp
  4057ec:	stp	x19, x20, [sp, #16]
  4057f0:	mov	x19, x0
  4057f4:	bl	4019c0 <fileno@plt>
  4057f8:	tbz	w0, #31, 40580c <ferror@plt+0x3b0c>
  4057fc:	mov	x0, x19
  405800:	ldp	x19, x20, [sp, #16]
  405804:	ldp	x29, x30, [sp], #32
  405808:	b	4019d0 <fclose@plt>
  40580c:	mov	x0, x19
  405810:	bl	401c80 <__freading@plt>
  405814:	cbnz	w0, 40584c <ferror@plt+0x3b4c>
  405818:	mov	x0, x19
  40581c:	bl	405878 <ferror@plt+0x3b78>
  405820:	cbnz	w0, 40586c <ferror@plt+0x3b6c>
  405824:	mov	w20, #0x0                   	// #0
  405828:	mov	x0, x19
  40582c:	bl	4019d0 <fclose@plt>
  405830:	cbz	w20, 405840 <ferror@plt+0x3b40>
  405834:	bl	401cb0 <__errno_location@plt>
  405838:	str	w20, [x0]
  40583c:	mov	w0, #0xffffffff            	// #-1
  405840:	ldp	x19, x20, [sp, #16]
  405844:	ldp	x29, x30, [sp], #32
  405848:	ret
  40584c:	mov	x0, x19
  405850:	bl	4019c0 <fileno@plt>
  405854:	mov	w2, #0x1                   	// #1
  405858:	mov	x1, #0x0                   	// #0
  40585c:	bl	4019a0 <lseek@plt>
  405860:	cmn	x0, #0x1
  405864:	b.ne	405818 <ferror@plt+0x3b18>  // b.any
  405868:	b	405824 <ferror@plt+0x3b24>
  40586c:	bl	401cb0 <__errno_location@plt>
  405870:	ldr	w20, [x0]
  405874:	b	405828 <ferror@plt+0x3b28>
  405878:	stp	x29, x30, [sp, #-32]!
  40587c:	mov	x29, sp
  405880:	str	x19, [sp, #16]
  405884:	mov	x19, x0
  405888:	cbnz	x0, 40589c <ferror@plt+0x3b9c>
  40588c:	mov	x0, x19
  405890:	ldr	x19, [sp, #16]
  405894:	ldp	x29, x30, [sp], #32
  405898:	b	401c10 <fflush@plt>
  40589c:	bl	401c80 <__freading@plt>
  4058a0:	cbz	w0, 40588c <ferror@plt+0x3b8c>
  4058a4:	ldr	w0, [x19]
  4058a8:	tbz	w0, #8, 40588c <ferror@plt+0x3b8c>
  4058ac:	mov	x0, x19
  4058b0:	mov	w2, #0x1                   	// #1
  4058b4:	mov	x1, #0x0                   	// #0
  4058b8:	bl	4058c0 <ferror@plt+0x3bc0>
  4058bc:	b	40588c <ferror@plt+0x3b8c>
  4058c0:	stp	x29, x30, [sp, #-48]!
  4058c4:	mov	x29, sp
  4058c8:	stp	x19, x20, [sp, #16]
  4058cc:	mov	x20, x1
  4058d0:	mov	x19, x0
  4058d4:	ldr	x1, [x0, #8]
  4058d8:	str	x21, [sp, #32]
  4058dc:	mov	w21, w2
  4058e0:	ldr	x2, [x0, #16]
  4058e4:	cmp	x2, x1
  4058e8:	b.ne	40593c <ferror@plt+0x3c3c>  // b.any
  4058ec:	ldp	x1, x2, [x0, #32]
  4058f0:	cmp	x2, x1
  4058f4:	b.ne	40593c <ferror@plt+0x3c3c>  // b.any
  4058f8:	ldr	x1, [x0, #72]
  4058fc:	cbnz	x1, 40593c <ferror@plt+0x3c3c>
  405900:	bl	4019c0 <fileno@plt>
  405904:	mov	w2, w21
  405908:	mov	x1, x20
  40590c:	bl	4019a0 <lseek@plt>
  405910:	cmn	x0, #0x1
  405914:	b.eq	40592c <ferror@plt+0x3c2c>  // b.none
  405918:	ldr	w1, [x19]
  40591c:	str	x0, [x19, #144]
  405920:	mov	w0, #0x0                   	// #0
  405924:	and	w1, w1, #0xffffffef
  405928:	str	w1, [x19]
  40592c:	ldp	x19, x20, [sp, #16]
  405930:	ldr	x21, [sp, #32]
  405934:	ldp	x29, x30, [sp], #48
  405938:	ret
  40593c:	mov	w2, w21
  405940:	mov	x1, x20
  405944:	mov	x0, x19
  405948:	ldp	x19, x20, [sp, #16]
  40594c:	ldr	x21, [sp, #32]
  405950:	ldp	x29, x30, [sp], #48
  405954:	b	401bd0 <fseeko@plt>
  405958:	stp	x29, x30, [sp, #-64]!
  40595c:	mov	x29, sp
  405960:	stp	x19, x20, [sp, #16]
  405964:	stp	x21, x22, [sp, #32]
  405968:	mov	x21, x1
  40596c:	mov	x22, x2
  405970:	cbnz	x0, 4059c8 <ferror@plt+0x3cc8>
  405974:	add	x19, sp, #0x3c
  405978:	mov	x2, x22
  40597c:	mov	x1, x21
  405980:	mov	x0, x19
  405984:	bl	4018e0 <mbrtowc@plt>
  405988:	cmp	x22, #0x0
  40598c:	mov	x20, x0
  405990:	ccmn	x0, #0x3, #0x0, ne  // ne = any
  405994:	b.ls	4059b4 <ferror@plt+0x3cb4>  // b.plast
  405998:	mov	w0, #0x0                   	// #0
  40599c:	bl	405d7c <_obstack_memory_used@@Base+0x94>
  4059a0:	tst	w0, #0xff
  4059a4:	b.ne	4059b4 <ferror@plt+0x3cb4>  // b.any
  4059a8:	ldrb	w0, [x21]
  4059ac:	mov	x20, #0x1                   	// #1
  4059b0:	str	w0, [x19]
  4059b4:	mov	x0, x20
  4059b8:	ldp	x19, x20, [sp, #16]
  4059bc:	ldp	x21, x22, [sp, #32]
  4059c0:	ldp	x29, x30, [sp], #64
  4059c4:	ret
  4059c8:	mov	x19, x0
  4059cc:	b	405978 <ferror@plt+0x3c78>
  4059d0:	stp	x29, x30, [sp, #-32]!
  4059d4:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x13318>
  4059d8:	mov	w2, #0x5                   	// #5
  4059dc:	mov	x29, sp
  4059e0:	str	x19, [sp, #16]
  4059e4:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x318>
  4059e8:	ldr	x19, [x0, #672]
  4059ec:	add	x1, x1, #0xd33
  4059f0:	mov	x0, #0x0                   	// #0
  4059f4:	bl	401c60 <dcgettext@plt>
  4059f8:	adrp	x2, 406000 <_obstack_memory_used@@Base+0x318>
  4059fc:	mov	x3, x0
  405a00:	add	x2, x2, #0xa18
  405a04:	mov	x0, x19
  405a08:	mov	w1, #0x1                   	// #1
  405a0c:	bl	401ba0 <__fprintf_chk@plt>
  405a10:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x13318>
  405a14:	ldr	w0, [x0, #560]
  405a18:	bl	401930 <exit@plt>
  405a1c:	mov	x2, x0
  405a20:	mov	x0, x1
  405a24:	ldrb	w4, [x2, #80]
  405a28:	ldr	x3, [x2, #56]
  405a2c:	tbz	w4, #0, 405a3c <ferror@plt+0x3d3c>
  405a30:	ldr	x0, [x2, #72]
  405a34:	mov	x16, x3
  405a38:	br	x16
  405a3c:	mov	x16, x3
  405a40:	br	x16
  405a44:	mov	x2, x0
  405a48:	mov	x0, x1
  405a4c:	ldrb	w4, [x2, #80]
  405a50:	ldr	x3, [x2, #64]
  405a54:	tbz	w4, #0, 405a64 <ferror@plt+0x3d64>
  405a58:	ldr	x0, [x2, #72]
  405a5c:	mov	x16, x3
  405a60:	br	x16
  405a64:	mov	x16, x3
  405a68:	br	x16
  405a6c:	stp	x29, x30, [sp, #-48]!
  405a70:	cmp	x2, #0x0
  405a74:	mov	x29, sp
  405a78:	stp	x19, x20, [sp, #16]
  405a7c:	mov	x20, x2
  405a80:	mov	x19, x0
  405a84:	mov	x2, #0x10                  	// #16
  405a88:	csel	x20, x20, x2, ne  // ne = any
  405a8c:	cmp	x1, #0x0
  405a90:	str	x21, [sp, #32]
  405a94:	mov	x2, #0xfe0                 	// #4064
  405a98:	sub	x21, x20, #0x1
  405a9c:	csel	x1, x1, x2, ne  // ne = any
  405aa0:	str	x1, [x0]
  405aa4:	str	x21, [x0, #48]
  405aa8:	bl	405a1c <ferror@plt+0x3d1c>
  405aac:	str	x0, [x19, #8]
  405ab0:	cbnz	x0, 405ac0 <ferror@plt+0x3dc0>
  405ab4:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x13318>
  405ab8:	ldr	x0, [x0, #656]
  405abc:	blr	x0
  405ac0:	add	x2, x0, #0x10
  405ac4:	neg	x20, x20
  405ac8:	ldr	x1, [x19]
  405acc:	add	x2, x2, x21
  405ad0:	and	x20, x2, x20
  405ad4:	ldr	x21, [sp, #32]
  405ad8:	stp	x20, x20, [x19, #16]
  405adc:	add	x1, x0, x1
  405ae0:	str	x1, [x0]
  405ae4:	str	x1, [x19, #32]
  405ae8:	str	xzr, [x0, #8]
  405aec:	ldrb	w0, [x19, #80]
  405af0:	and	w0, w0, #0xfffffff9
  405af4:	strb	w0, [x19, #80]
  405af8:	mov	w0, #0x1                   	// #1
  405afc:	ldp	x19, x20, [sp, #16]
  405b00:	ldp	x29, x30, [sp], #48
  405b04:	ret

0000000000405b08 <_obstack_begin@@Base>:
  405b08:	stp	x3, x4, [x0, #56]
  405b0c:	ldrb	w3, [x0, #80]
  405b10:	and	w3, w3, #0xfffffffe
  405b14:	strb	w3, [x0, #80]
  405b18:	b	405a6c <ferror@plt+0x3d6c>

0000000000405b1c <_obstack_begin_1@@Base>:
  405b1c:	stp	x3, x4, [x0, #56]
  405b20:	ldrb	w3, [x0, #80]
  405b24:	str	x5, [x0, #72]
  405b28:	orr	w3, w3, #0x1
  405b2c:	strb	w3, [x0, #80]
  405b30:	b	405a6c <ferror@plt+0x3d6c>

0000000000405b34 <_obstack_newchunk@@Base>:
  405b34:	stp	x29, x30, [sp, #-64]!
  405b38:	mov	x29, sp
  405b3c:	stp	x19, x20, [sp, #16]
  405b40:	ldp	x2, x20, [x0, #16]
  405b44:	stp	x21, x22, [sp, #32]
  405b48:	sub	x21, x20, x2
  405b4c:	ldr	x20, [x0, #48]
  405b50:	adds	x1, x21, x1
  405b54:	cset	x4, cs  // cs = hs, nlast
  405b58:	adds	x1, x20, x1
  405b5c:	lsr	x20, x21, #3
  405b60:	add	x20, x20, #0x64
  405b64:	cset	x3, cs  // cs = hs, nlast
  405b68:	add	x2, x20, x1
  405b6c:	ldr	x20, [x0]
  405b70:	str	x23, [sp, #48]
  405b74:	ldr	x23, [x0, #8]
  405b78:	cmp	x20, x1
  405b7c:	csel	x20, x20, x1, cs  // cs = hs, nlast
  405b80:	cmp	x20, x2
  405b84:	csel	x20, x20, x2, cs  // cs = hs, nlast
  405b88:	cmp	x4, #0x0
  405b8c:	ccmp	x3, #0x0, #0x0, eq  // eq = none
  405b90:	b.eq	405ba0 <_obstack_newchunk@@Base+0x6c>  // b.none
  405b94:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x13318>
  405b98:	ldr	x0, [x0, #656]
  405b9c:	blr	x0
  405ba0:	mov	x19, x0
  405ba4:	mov	x1, x20
  405ba8:	bl	405a1c <ferror@plt+0x3d1c>
  405bac:	mov	x22, x0
  405bb0:	cbz	x0, 405b94 <_obstack_newchunk@@Base+0x60>
  405bb4:	mov	x2, x0
  405bb8:	str	x0, [x19, #8]
  405bbc:	ldr	x1, [x19, #16]
  405bc0:	str	x23, [x0, #8]
  405bc4:	add	x20, x0, x20
  405bc8:	str	x20, [x19, #32]
  405bcc:	str	x20, [x2], #16
  405bd0:	ldr	x20, [x19, #48]
  405bd4:	add	x2, x2, x20
  405bd8:	bic	x20, x2, x20
  405bdc:	mov	x2, x21
  405be0:	mov	x0, x20
  405be4:	bl	4018f0 <memcpy@plt>
  405be8:	ldrb	w0, [x19, #80]
  405bec:	tbnz	w0, #1, 405c20 <_obstack_newchunk@@Base+0xec>
  405bf0:	ldr	x0, [x19, #48]
  405bf4:	add	x1, x23, #0x10
  405bf8:	add	x1, x1, x0
  405bfc:	bic	x0, x1, x0
  405c00:	ldr	x1, [x19, #16]
  405c04:	cmp	x1, x0
  405c08:	b.ne	405c20 <_obstack_newchunk@@Base+0xec>  // b.any
  405c0c:	ldr	x0, [x23, #8]
  405c10:	str	x0, [x22, #8]
  405c14:	mov	x1, x23
  405c18:	mov	x0, x19
  405c1c:	bl	405a44 <ferror@plt+0x3d44>
  405c20:	ldrb	w0, [x19, #80]
  405c24:	ldr	x23, [sp, #48]
  405c28:	and	w0, w0, #0xfffffffd
  405c2c:	str	x20, [x19, #16]
  405c30:	add	x20, x20, x21
  405c34:	strb	w0, [x19, #80]
  405c38:	ldp	x21, x22, [sp, #32]
  405c3c:	str	x20, [x19, #24]
  405c40:	ldp	x19, x20, [sp, #16]
  405c44:	ldp	x29, x30, [sp], #64
  405c48:	ret

0000000000405c4c <_obstack_allocated_p@@Base>:
  405c4c:	ldr	x0, [x0, #8]
  405c50:	cbz	x0, 405c68 <_obstack_allocated_p@@Base+0x1c>
  405c54:	cmp	x0, x1
  405c58:	b.cs	405c4c <_obstack_allocated_p@@Base>  // b.hs, b.nlast
  405c5c:	ldr	x2, [x0]
  405c60:	cmp	x2, x1
  405c64:	b.cc	405c4c <_obstack_allocated_p@@Base>  // b.lo, b.ul, b.last
  405c68:	cmp	x0, #0x0
  405c6c:	cset	w0, ne  // ne = any
  405c70:	ret

0000000000405c74 <_obstack_free@@Base>:
  405c74:	stp	x29, x30, [sp, #-48]!
  405c78:	mov	x29, sp
  405c7c:	stp	x19, x20, [sp, #16]
  405c80:	mov	x19, x0
  405c84:	mov	x20, x1
  405c88:	ldr	x1, [x0, #8]
  405c8c:	str	x21, [sp, #32]
  405c90:	cbz	x1, 405ce0 <_obstack_free@@Base+0x6c>
  405c94:	cmp	x1, x20
  405c98:	b.cs	405cc0 <_obstack_free@@Base+0x4c>  // b.hs, b.nlast
  405c9c:	ldr	x0, [x1]
  405ca0:	cmp	x0, x20
  405ca4:	b.cc	405cc0 <_obstack_free@@Base+0x4c>  // b.lo, b.ul, b.last
  405ca8:	stp	x1, x20, [x19, #8]
  405cac:	stp	x20, x0, [x19, #24]
  405cb0:	ldp	x19, x20, [sp, #16]
  405cb4:	ldr	x21, [sp, #32]
  405cb8:	ldp	x29, x30, [sp], #48
  405cbc:	ret
  405cc0:	mov	x0, x19
  405cc4:	ldr	x21, [x1, #8]
  405cc8:	bl	405a44 <ferror@plt+0x3d44>
  405ccc:	ldrb	w0, [x19, #80]
  405cd0:	mov	x1, x21
  405cd4:	orr	w0, w0, #0x2
  405cd8:	strb	w0, [x19, #80]
  405cdc:	b	405c90 <_obstack_free@@Base+0x1c>
  405ce0:	cbz	x20, 405cb0 <_obstack_free@@Base+0x3c>
  405ce4:	bl	401b30 <abort@plt>

0000000000405ce8 <_obstack_memory_used@@Base>:
  405ce8:	ldr	x1, [x0, #8]
  405cec:	mov	x0, #0x0                   	// #0
  405cf0:	cbnz	x1, 405cf8 <_obstack_memory_used@@Base+0x10>
  405cf4:	ret
  405cf8:	ldr	x2, [x1]
  405cfc:	sub	x2, x2, x1
  405d00:	add	x0, x0, x2
  405d04:	ldr	x1, [x1, #8]
  405d08:	b	405cf0 <_obstack_memory_used@@Base+0x8>
  405d0c:	stp	x29, x30, [sp, #-48]!
  405d10:	mov	x29, sp
  405d14:	stp	x19, x20, [sp, #16]
  405d18:	mov	x19, x0
  405d1c:	str	x21, [sp, #32]
  405d20:	bl	4019b0 <__fpending@plt>
  405d24:	mov	x20, x0
  405d28:	mov	x0, x19
  405d2c:	bl	401960 <ferror_unlocked@plt>
  405d30:	mov	w21, w0
  405d34:	mov	x0, x19
  405d38:	bl	4057e4 <ferror@plt+0x3ae4>
  405d3c:	cbnz	w21, 405d68 <_obstack_memory_used@@Base+0x80>
  405d40:	cbz	w0, 405d58 <_obstack_memory_used@@Base+0x70>
  405d44:	cbnz	x20, 405d74 <_obstack_memory_used@@Base+0x8c>
  405d48:	bl	401cb0 <__errno_location@plt>
  405d4c:	ldr	w0, [x0]
  405d50:	cmp	w0, #0x9
  405d54:	csetm	w0, ne  // ne = any
  405d58:	ldp	x19, x20, [sp, #16]
  405d5c:	ldr	x21, [sp, #32]
  405d60:	ldp	x29, x30, [sp], #48
  405d64:	ret
  405d68:	cbnz	w0, 405d74 <_obstack_memory_used@@Base+0x8c>
  405d6c:	bl	401cb0 <__errno_location@plt>
  405d70:	str	wzr, [x0]
  405d74:	mov	w0, #0xffffffff            	// #-1
  405d78:	b	405d58 <_obstack_memory_used@@Base+0x70>
  405d7c:	stp	x29, x30, [sp, #-32]!
  405d80:	mov	x1, #0x0                   	// #0
  405d84:	mov	x29, sp
  405d88:	str	x19, [sp, #16]
  405d8c:	bl	401cf0 <setlocale@plt>
  405d90:	cbz	x0, 405dcc <_obstack_memory_used@@Base+0xe4>
  405d94:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x318>
  405d98:	mov	x19, x0
  405d9c:	add	x1, x1, #0xd44
  405da0:	bl	401bb0 <strcmp@plt>
  405da4:	cbz	w0, 405dd4 <_obstack_memory_used@@Base+0xec>
  405da8:	mov	x0, x19
  405dac:	adrp	x1, 406000 <_obstack_memory_used@@Base+0x318>
  405db0:	add	x1, x1, #0xd46
  405db4:	bl	401bb0 <strcmp@plt>
  405db8:	cmp	w0, #0x0
  405dbc:	cset	w0, ne  // ne = any
  405dc0:	ldr	x19, [sp, #16]
  405dc4:	ldp	x29, x30, [sp], #32
  405dc8:	ret
  405dcc:	mov	w0, #0x1                   	// #1
  405dd0:	b	405dc0 <_obstack_memory_used@@Base+0xd8>
  405dd4:	mov	w0, #0x0                   	// #0
  405dd8:	b	405dc0 <_obstack_memory_used@@Base+0xd8>
  405ddc:	stp	x29, x30, [sp, #-16]!
  405de0:	mov	w0, #0xe                   	// #14
  405de4:	mov	x29, sp
  405de8:	bl	4019f0 <nl_langinfo@plt>
  405dec:	cbz	x0, 405df8 <_obstack_memory_used@@Base+0x110>
  405df0:	ldrb	w1, [x0]
  405df4:	cbnz	w1, 405e00 <_obstack_memory_used@@Base+0x118>
  405df8:	adrp	x0, 406000 <_obstack_memory_used@@Base+0x318>
  405dfc:	add	x0, x0, #0xd4c
  405e00:	ldp	x29, x30, [sp], #16
  405e04:	ret
  405e08:	stp	x29, x30, [sp, #-64]!
  405e0c:	mov	x29, sp
  405e10:	stp	x19, x20, [sp, #16]
  405e14:	adrp	x20, 418000 <_obstack_memory_used@@Base+0x12318>
  405e18:	add	x20, x20, #0xdf0
  405e1c:	stp	x21, x22, [sp, #32]
  405e20:	adrp	x21, 418000 <_obstack_memory_used@@Base+0x12318>
  405e24:	add	x21, x21, #0xde8
  405e28:	sub	x20, x20, x21
  405e2c:	mov	w22, w0
  405e30:	stp	x23, x24, [sp, #48]
  405e34:	mov	x23, x1
  405e38:	mov	x24, x2
  405e3c:	bl	4018a0 <mbrtowc@plt-0x40>
  405e40:	cmp	xzr, x20, asr #3
  405e44:	b.eq	405e70 <_obstack_memory_used@@Base+0x188>  // b.none
  405e48:	asr	x20, x20, #3
  405e4c:	mov	x19, #0x0                   	// #0
  405e50:	ldr	x3, [x21, x19, lsl #3]
  405e54:	mov	x2, x24
  405e58:	add	x19, x19, #0x1
  405e5c:	mov	x1, x23
  405e60:	mov	w0, w22
  405e64:	blr	x3
  405e68:	cmp	x20, x19
  405e6c:	b.ne	405e50 <_obstack_memory_used@@Base+0x168>  // b.any
  405e70:	ldp	x19, x20, [sp, #16]
  405e74:	ldp	x21, x22, [sp, #32]
  405e78:	ldp	x23, x24, [sp, #48]
  405e7c:	ldp	x29, x30, [sp], #64
  405e80:	ret
  405e84:	nop
  405e88:	ret
  405e8c:	nop
  405e90:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x13318>
  405e94:	mov	x1, #0x0                   	// #0
  405e98:	ldr	x2, [x2, #544]
  405e9c:	b	401970 <__cxa_atexit@plt>
  405ea0:	mov	x2, x1
  405ea4:	mov	x1, x0
  405ea8:	mov	w0, #0x0                   	// #0
  405eac:	b	401cd0 <__xstat@plt>
  405eb0:	mov	x2, x1
  405eb4:	mov	w1, w0
  405eb8:	mov	w0, #0x0                   	// #0
  405ebc:	b	401c50 <__fxstat@plt>

Disassembly of section .fini:

0000000000405ec0 <.fini>:
  405ec0:	stp	x29, x30, [sp, #-16]!
  405ec4:	mov	x29, sp
  405ec8:	ldp	x29, x30, [sp], #16
  405ecc:	ret
