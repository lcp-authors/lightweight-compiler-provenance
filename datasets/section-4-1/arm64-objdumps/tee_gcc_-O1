
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//tee_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000978 <_init>:
 978:	stp	x29, x30, [sp, #-16]!
 97c:	mov	x29, sp
 980:	bl	aa0 <call_weak_fn>
 984:	ldp	x29, x30, [sp], #16
 988:	ret

Disassembly of section .plt:

0000000000000990 <.plt>:
 990:	stp	x16, x30, [sp, #-16]!
 994:	adrp	x16, 11000 <__FRAME_END__+0xfeac>
 998:	ldr	x17, [x16, #4088]
 99c:	add	x16, x16, #0xff8
 9a0:	br	x17
 9a4:	nop
 9a8:	nop
 9ac:	nop

00000000000009b0 <builtin_error@plt>:
 9b0:	adrp	x16, 12000 <builtin_error>
 9b4:	ldr	x17, [x16]
 9b8:	add	x16, x16, #0x0
 9bc:	br	x17

00000000000009c0 <__cxa_finalize@plt>:
 9c0:	adrp	x16, 12000 <builtin_error>
 9c4:	ldr	x17, [x16, #8]
 9c8:	add	x16, x16, #0x8
 9cc:	br	x17

00000000000009d0 <builtin_help@plt>:
 9d0:	adrp	x16, 12000 <builtin_error>
 9d4:	ldr	x17, [x16, #16]
 9d8:	add	x16, x16, #0x10
 9dc:	br	x17

00000000000009e0 <open@plt>:
 9e0:	adrp	x16, 12000 <builtin_error>
 9e4:	ldr	x17, [x16, #24]
 9e8:	add	x16, x16, #0x18
 9ec:	br	x17

00000000000009f0 <xmalloc@plt>:
 9f0:	adrp	x16, 12000 <builtin_error>
 9f4:	ldr	x17, [x16, #32]
 9f8:	add	x16, x16, #0x20
 9fc:	br	x17

0000000000000a00 <builtin_usage@plt>:
 a00:	adrp	x16, 12000 <builtin_error>
 a04:	ldr	x17, [x16, #40]
 a08:	add	x16, x16, #0x28
 a0c:	br	x17

0000000000000a10 <strerror@plt>:
 a10:	adrp	x16, 12000 <builtin_error>
 a14:	ldr	x17, [x16, #48]
 a18:	add	x16, x16, #0x30
 a1c:	br	x17

0000000000000a20 <close@plt>:
 a20:	adrp	x16, 12000 <builtin_error>
 a24:	ldr	x17, [x16, #56]
 a28:	add	x16, x16, #0x38
 a2c:	br	x17

0000000000000a30 <__gmon_start__@plt>:
 a30:	adrp	x16, 12000 <builtin_error>
 a34:	ldr	x17, [x16, #64]
 a38:	add	x16, x16, #0x40
 a3c:	br	x17

0000000000000a40 <write@plt>:
 a40:	adrp	x16, 12000 <builtin_error>
 a44:	ldr	x17, [x16, #72]
 a48:	add	x16, x16, #0x48
 a4c:	br	x17

0000000000000a50 <free@plt>:
 a50:	adrp	x16, 12000 <builtin_error>
 a54:	ldr	x17, [x16, #80]
 a58:	add	x16, x16, #0x50
 a5c:	br	x17

0000000000000a60 <internal_getopt@plt>:
 a60:	adrp	x16, 12000 <builtin_error>
 a64:	ldr	x17, [x16, #88]
 a68:	add	x16, x16, #0x58
 a6c:	br	x17

0000000000000a70 <reset_internal_getopt@plt>:
 a70:	adrp	x16, 12000 <builtin_error>
 a74:	ldr	x17, [x16, #96]
 a78:	add	x16, x16, #0x60
 a7c:	br	x17

0000000000000a80 <read@plt>:
 a80:	adrp	x16, 12000 <builtin_error>
 a84:	ldr	x17, [x16, #104]
 a88:	add	x16, x16, #0x68
 a8c:	br	x17

0000000000000a90 <__errno_location@plt>:
 a90:	adrp	x16, 12000 <builtin_error>
 a94:	ldr	x17, [x16, #112]
 a98:	add	x16, x16, #0x70
 a9c:	br	x17

Disassembly of section .text:

0000000000000aa0 <call_weak_fn>:
 aa0:	adrp	x0, 11000 <__FRAME_END__+0xfeac>
 aa4:	ldr	x0, [x0, #4048]
 aa8:	cbz	x0, ab0 <call_weak_fn+0x10>
 aac:	b	a30 <__gmon_start__@plt>
 ab0:	ret

0000000000000ab4 <deregister_tm_clones>:
 ab4:	adrp	x0, 12000 <builtin_error>
 ab8:	add	x0, x0, #0xe8
 abc:	adrp	x1, 12000 <builtin_error>
 ac0:	add	x1, x1, #0xe8
 ac4:	cmp	x0, x1
 ac8:	b.eq	af4 <deregister_tm_clones+0x40>  // b.none
 acc:	adrp	x1, 11000 <__FRAME_END__+0xfeac>
 ad0:	ldr	x1, [x1, #4024]
 ad4:	cbz	x1, af4 <deregister_tm_clones+0x40>
 ad8:	stp	x29, x30, [sp, #-16]!
 adc:	mov	x29, sp
 ae0:	adrp	x0, 12000 <builtin_error>
 ae4:	add	x0, x0, #0xe8
 ae8:	blr	x1
 aec:	ldp	x29, x30, [sp], #16
 af0:	ret
 af4:	ret

0000000000000af8 <register_tm_clones>:
 af8:	adrp	x0, 12000 <builtin_error>
 afc:	add	x0, x0, #0xe8
 b00:	adrp	x1, 12000 <builtin_error>
 b04:	add	x1, x1, #0xe8
 b08:	sub	x0, x0, x1
 b0c:	lsr	x1, x0, #63
 b10:	add	x0, x1, x0, asr #3
 b14:	cmp	xzr, x0, asr #1
 b18:	b.eq	b48 <register_tm_clones+0x50>  // b.none
 b1c:	asr	x1, x0, #1
 b20:	adrp	x2, 11000 <__FRAME_END__+0xfeac>
 b24:	ldr	x2, [x2, #4064]
 b28:	cbz	x2, b48 <register_tm_clones+0x50>
 b2c:	stp	x29, x30, [sp, #-16]!
 b30:	mov	x29, sp
 b34:	adrp	x0, 12000 <builtin_error>
 b38:	add	x0, x0, #0xe8
 b3c:	blr	x2
 b40:	ldp	x29, x30, [sp], #16
 b44:	ret
 b48:	ret

0000000000000b4c <__do_global_dtors_aux>:
 b4c:	adrp	x0, 12000 <builtin_error>
 b50:	ldrb	w0, [x0, #232]
 b54:	cbnz	w0, b90 <__do_global_dtors_aux+0x44>
 b58:	stp	x29, x30, [sp, #-16]!
 b5c:	mov	x29, sp
 b60:	adrp	x0, 11000 <__FRAME_END__+0xfeac>
 b64:	ldr	x0, [x0, #4032]
 b68:	cbz	x0, b78 <__do_global_dtors_aux+0x2c>
 b6c:	adrp	x0, 12000 <builtin_error>
 b70:	ldr	x0, [x0, #120]
 b74:	bl	9c0 <__cxa_finalize@plt>
 b78:	bl	ab4 <deregister_tm_clones>
 b7c:	adrp	x0, 12000 <builtin_error>
 b80:	mov	w1, #0x1                   	// #1
 b84:	strb	w1, [x0, #232]
 b88:	ldp	x29, x30, [sp], #16
 b8c:	ret
 b90:	ret

0000000000000b94 <frame_dummy>:
 b94:	stp	x29, x30, [sp, #-16]!
 b98:	mov	x29, sp
 b9c:	bl	af8 <register_tm_clones>
 ba0:	ldp	x29, x30, [sp], #16
 ba4:	ret

0000000000000ba8 <tee_builtin>:
 ba8:	stp	x29, x30, [sp, #-96]!
 bac:	mov	x29, sp
 bb0:	stp	x19, x20, [sp, #16]
 bb4:	stp	x21, x22, [sp, #32]
 bb8:	stp	x23, x24, [sp, #48]
 bbc:	stp	x25, x26, [sp, #64]
 bc0:	mov	x20, x0
 bc4:	bl	a70 <reset_internal_getopt@plt>
 bc8:	adrp	x0, 12000 <builtin_error>
 bcc:	str	xzr, [x0, #240]
 bd0:	mov	w22, #0x0                   	// #0
 bd4:	mov	w23, #0x0                   	// #0
 bd8:	adrp	x19, 0 <_init-0x978>
 bdc:	add	x19, x19, #0xea8
 be0:	mov	w21, #0x1                   	// #1
 be4:	mov	x1, x19
 be8:	mov	x0, x20
 bec:	bl	a60 <internal_getopt@plt>
 bf0:	cmn	w0, #0x1
 bf4:	b.eq	c50 <tee_builtin+0xa8>  // b.none
 bf8:	cmp	w0, #0x61
 bfc:	b.eq	c40 <tee_builtin+0x98>  // b.none
 c00:	cmp	w0, #0x69
 c04:	b.eq	c48 <tee_builtin+0xa0>  // b.none
 c08:	cmn	w0, #0x63
 c0c:	b.eq	c1c <tee_builtin+0x74>  // b.none
 c10:	bl	a00 <builtin_usage@plt>
 c14:	mov	w26, #0x102                 	// #258
 c18:	b	c24 <tee_builtin+0x7c>
 c1c:	bl	9d0 <builtin_help@plt>
 c20:	mov	w26, #0x102                 	// #258
 c24:	mov	w0, w26
 c28:	ldp	x19, x20, [sp, #16]
 c2c:	ldp	x21, x22, [sp, #32]
 c30:	ldp	x23, x24, [sp, #48]
 c34:	ldp	x25, x26, [sp, #64]
 c38:	ldp	x29, x30, [sp], #96
 c3c:	ret
 c40:	mov	w23, w21
 c44:	b	be4 <tee_builtin+0x3c>
 c48:	mov	w22, w21
 c4c:	b	be4 <tee_builtin+0x3c>
 c50:	adrp	x0, 11000 <__FRAME_END__+0xfeac>
 c54:	ldr	x0, [x0, #4056]
 c58:	ldr	x19, [x0]
 c5c:	cbnz	w22, c74 <tee_builtin+0xcc>
 c60:	adrp	x0, 11000 <__FRAME_END__+0xfeac>
 c64:	ldr	x0, [x0, #4040]
 c68:	ldr	w1, [x0]
 c6c:	add	w1, w1, #0x1
 c70:	str	w1, [x0]
 c74:	mov	x0, #0x2000                	// #8192
 c78:	bl	9f0 <xmalloc@plt>
 c7c:	mov	x22, x0
 c80:	mov	x0, #0x18                  	// #24
 c84:	bl	9f0 <xmalloc@plt>
 c88:	mov	x21, x0
 c8c:	adrp	x0, 12000 <builtin_error>
 c90:	str	x21, [x0, #240]
 c94:	mov	w0, #0x1                   	// #1
 c98:	str	w0, [x21, #8]
 c9c:	adrp	x0, 0 <_init-0x978>
 ca0:	add	x0, x0, #0xeb0
 ca4:	str	x0, [x21, #16]
 ca8:	str	xzr, [x21]
 cac:	cmp	w23, #0x0
 cb0:	mov	w23, #0x441                 	// #1089
 cb4:	mov	w0, #0x241                 	// #577
 cb8:	csel	w23, w23, w0, ne  // ne = any
 cbc:	cbz	x19, d94 <tee_builtin+0x1ec>
 cc0:	stp	x27, x28, [sp, #80]
 cc4:	mov	w26, #0x0                   	// #0
 cc8:	mov	w24, #0x1b6                 	// #438
 ccc:	mov	x27, #0x18                  	// #24
 cd0:	adrp	x25, 0 <_init-0x978>
 cd4:	add	x25, x25, #0xeb8
 cd8:	mov	w28, #0x1                   	// #1
 cdc:	b	d10 <tee_builtin+0x168>
 ce0:	ldr	x0, [x19, #8]
 ce4:	ldr	x20, [x0]
 ce8:	bl	a90 <__errno_location@plt>
 cec:	ldr	w0, [x0]
 cf0:	bl	a10 <strerror@plt>
 cf4:	mov	x2, x0
 cf8:	mov	x1, x20
 cfc:	mov	x0, x25
 d00:	bl	9b0 <builtin_error@plt>
 d04:	mov	w26, w28
 d08:	ldr	x19, [x19]
 d0c:	cbz	x19, d58 <tee_builtin+0x1b0>
 d10:	ldr	x0, [x19, #8]
 d14:	mov	w2, w24
 d18:	mov	w1, w23
 d1c:	ldr	x0, [x0]
 d20:	bl	9e0 <open@plt>
 d24:	mov	w20, w0
 d28:	tbnz	w0, #31, ce0 <tee_builtin+0x138>
 d2c:	mov	x0, x27
 d30:	bl	9f0 <xmalloc@plt>
 d34:	str	x0, [x21]
 d38:	str	w20, [x0, #8]
 d3c:	ldr	x0, [x21]
 d40:	ldr	x1, [x19, #8]
 d44:	ldr	x1, [x1]
 d48:	str	x1, [x0, #16]
 d4c:	ldr	x21, [x21]
 d50:	str	xzr, [x21]
 d54:	b	d08 <tee_builtin+0x160>
 d58:	ldp	x27, x28, [sp, #80]
 d5c:	adrp	x24, 0 <_init-0x978>
 d60:	add	x24, x24, #0xed0
 d64:	mov	w25, #0x1                   	// #1
 d68:	mov	x2, #0x2000                	// #8192
 d6c:	mov	x1, x22
 d70:	mov	w0, #0x0                   	// #0
 d74:	bl	a80 <read@plt>
 d78:	mov	w23, w0
 d7c:	cmp	w0, #0x0
 d80:	b.le	df8 <tee_builtin+0x250>
 d84:	adrp	x0, 12000 <builtin_error>
 d88:	ldr	x21, [x0, #240]
 d8c:	cbnz	x21, dc8 <tee_builtin+0x220>
 d90:	b	d68 <tee_builtin+0x1c0>
 d94:	mov	w26, #0x0                   	// #0
 d98:	b	d5c <tee_builtin+0x1b4>
 d9c:	ldr	x19, [x21, #16]
 da0:	bl	a90 <__errno_location@plt>
 da4:	ldr	w0, [x0]
 da8:	bl	a10 <strerror@plt>
 dac:	mov	x2, x0
 db0:	mov	x1, x19
 db4:	mov	x0, x24
 db8:	bl	9b0 <builtin_error@plt>
 dbc:	mov	w26, w25
 dc0:	ldr	x21, [x21]
 dc4:	cbz	x21, d68 <tee_builtin+0x1c0>
 dc8:	mov	x20, x22
 dcc:	mov	w19, w23
 dd0:	sxtw	x2, w19
 dd4:	mov	x1, x20
 dd8:	ldr	w0, [x21, #8]
 ddc:	bl	a40 <write@plt>
 de0:	cmn	w0, #0x1
 de4:	b.eq	d9c <tee_builtin+0x1f4>  // b.none
 de8:	add	x20, x20, w0, sxtw
 dec:	subs	w19, w19, w0
 df0:	b.ne	dd0 <tee_builtin+0x228>  // b.any
 df4:	b	dc0 <tee_builtin+0x218>
 df8:	tbnz	w0, #31, e24 <tee_builtin+0x27c>
 dfc:	adrp	x0, 12000 <builtin_error>
 e00:	ldr	x1, [x0, #240]
 e04:	ldr	x20, [x1]
 e08:	str	x20, [x0, #240]
 e0c:	cbz	x20, c24 <tee_builtin+0x7c>
 e10:	adrp	x22, 0 <_init-0x978>
 e14:	add	x22, x22, #0xef8
 e18:	mov	w23, #0x1                   	// #1
 e1c:	mov	x21, x0
 e20:	b	e60 <tee_builtin+0x2b8>
 e24:	bl	a90 <__errno_location@plt>
 e28:	ldr	w0, [x0]
 e2c:	bl	a10 <strerror@plt>
 e30:	mov	x1, x0
 e34:	adrp	x0, 0 <_init-0x978>
 e38:	add	x0, x0, #0xee8
 e3c:	bl	9b0 <builtin_error@plt>
 e40:	b	dfc <tee_builtin+0x254>
 e44:	ldr	x0, [x21, #240]
 e48:	ldr	x19, [x0]
 e4c:	str	x19, [x21, #240]
 e50:	mov	x0, x20
 e54:	bl	a50 <free@plt>
 e58:	cbz	x19, c24 <tee_builtin+0x7c>
 e5c:	mov	x20, x19
 e60:	ldr	w0, [x20, #8]
 e64:	bl	a20 <close@plt>
 e68:	tbz	w0, #31, e44 <tee_builtin+0x29c>
 e6c:	ldr	x19, [x20, #16]
 e70:	bl	a90 <__errno_location@plt>
 e74:	ldr	w0, [x0]
 e78:	bl	a10 <strerror@plt>
 e7c:	mov	x2, x0
 e80:	mov	x1, x19
 e84:	mov	x0, x22
 e88:	bl	9b0 <builtin_error@plt>
 e8c:	mov	w26, w23
 e90:	b	e44 <tee_builtin+0x29c>

Disassembly of section .fini:

0000000000000e94 <_fini>:
 e94:	stp	x29, x30, [sp, #-16]!
 e98:	mov	x29, sp
 e9c:	ldp	x29, x30, [sp], #16
 ea0:	ret
