
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//GBGBK.so_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000006b0 <.init>:
 6b0:	stp	x29, x30, [sp, #-16]!
 6b4:	mov	x29, sp
 6b8:	bl	760 <__assert_fail@plt+0x10>
 6bc:	ldp	x29, x30, [sp], #16
 6c0:	ret

Disassembly of section .plt:

00000000000006d0 <__cxa_finalize@plt-0x20>:
 6d0:	stp	x16, x30, [sp, #-16]!
 6d4:	adrp	x16, 11000 <gconv@@Base+0x10748>
 6d8:	ldr	x17, [x16, #4088]
 6dc:	add	x16, x16, #0xff8
 6e0:	br	x17
 6e4:	nop
 6e8:	nop
 6ec:	nop

00000000000006f0 <__cxa_finalize@plt>:
 6f0:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 6f4:	ldr	x17, [x16]
 6f8:	add	x16, x16, #0x0
 6fc:	br	x17

0000000000000700 <__gconv_transliterate@plt>:
 700:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 704:	ldr	x17, [x16, #8]
 708:	add	x16, x16, #0x8
 70c:	br	x17

0000000000000710 <__stack_chk_fail@plt>:
 710:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 714:	ldr	x17, [x16, #16]
 718:	add	x16, x16, #0x10
 71c:	br	x17

0000000000000720 <__gmon_start__@plt>:
 720:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 724:	ldr	x17, [x16, #24]
 728:	add	x16, x16, #0x18
 72c:	br	x17

0000000000000730 <strcmp@plt>:
 730:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 734:	ldr	x17, [x16, #32]
 738:	add	x16, x16, #0x20
 73c:	br	x17

0000000000000740 <_dl_mcount_wrapper_check@plt>:
 740:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 744:	ldr	x17, [x16, #40]
 748:	add	x16, x16, #0x28
 74c:	br	x17

0000000000000750 <__assert_fail@plt>:
 750:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 754:	ldr	x17, [x16, #48]
 758:	add	x16, x16, #0x30
 75c:	br	x17

Disassembly of section .text:

0000000000000760 <gconv_init@@Base-0xd8>:
     760:	adrp	x0, 11000 <gconv@@Base+0x10748>
     764:	ldr	x0, [x0, #4048]
     768:	cbz	x0, 770 <__assert_fail@plt+0x20>
     76c:	b	720 <__gmon_start__@plt>
     770:	ret
     774:	nop
     778:	adrp	x0, 12000 <gconv@@Base+0x11748>
     77c:	add	x0, x0, #0x40
     780:	adrp	x1, 12000 <gconv@@Base+0x11748>
     784:	add	x1, x1, #0x40
     788:	cmp	x1, x0
     78c:	b.eq	7a4 <__assert_fail@plt+0x54>  // b.none
     790:	adrp	x1, 11000 <gconv@@Base+0x10748>
     794:	ldr	x1, [x1, #4024]
     798:	cbz	x1, 7a4 <__assert_fail@plt+0x54>
     79c:	mov	x16, x1
     7a0:	br	x16
     7a4:	ret
     7a8:	adrp	x0, 12000 <gconv@@Base+0x11748>
     7ac:	add	x0, x0, #0x40
     7b0:	adrp	x1, 12000 <gconv@@Base+0x11748>
     7b4:	add	x1, x1, #0x40
     7b8:	sub	x1, x1, x0
     7bc:	lsr	x2, x1, #63
     7c0:	add	x1, x2, x1, asr #3
     7c4:	cmp	xzr, x1, asr #1
     7c8:	asr	x1, x1, #1
     7cc:	b.eq	7e4 <__assert_fail@plt+0x94>  // b.none
     7d0:	adrp	x2, 11000 <gconv@@Base+0x10748>
     7d4:	ldr	x2, [x2, #4064]
     7d8:	cbz	x2, 7e4 <__assert_fail@plt+0x94>
     7dc:	mov	x16, x2
     7e0:	br	x16
     7e4:	ret
     7e8:	stp	x29, x30, [sp, #-32]!
     7ec:	mov	x29, sp
     7f0:	str	x19, [sp, #16]
     7f4:	adrp	x19, 12000 <gconv@@Base+0x11748>
     7f8:	ldrb	w0, [x19, #64]
     7fc:	cbnz	w0, 824 <__assert_fail@plt+0xd4>
     800:	adrp	x0, 11000 <gconv@@Base+0x10748>
     804:	ldr	x0, [x0, #4032]
     808:	cbz	x0, 818 <__assert_fail@plt+0xc8>
     80c:	adrp	x0, 12000 <gconv@@Base+0x11748>
     810:	ldr	x0, [x0, #56]
     814:	bl	6f0 <__cxa_finalize@plt>
     818:	bl	778 <__assert_fail@plt+0x28>
     81c:	mov	w0, #0x1                   	// #1
     820:	strb	w0, [x19, #64]
     824:	ldr	x19, [sp, #16]
     828:	ldp	x29, x30, [sp], #32
     82c:	ret
     830:	b	7a8 <__assert_fail@plt+0x58>
     834:	nop

0000000000000838 <gconv_init@@Base>:
     838:	stp	x29, x30, [sp, #-32]!
     83c:	mov	x29, sp
     840:	stp	x19, x20, [sp, #16]
     844:	mov	x19, x0
     848:	adrp	x20, 1000 <gconv@@Base+0x748>
     84c:	ldr	x0, [x0, #24]
     850:	add	x20, x20, #0x670
     854:	mov	x1, x20
     858:	bl	730 <strcmp@plt>
     85c:	cbnz	w0, 884 <gconv_init@@Base+0x4c>
     860:	mov	x0, #0x1                   	// #1
     864:	str	xzr, [x19, #96]
     868:	movk	x0, #0x2, lsl #32
     86c:	stp	x0, x0, [x19, #72]
     870:	mov	w0, #0x0                   	// #0
     874:	str	wzr, [x19, #88]
     878:	ldp	x19, x20, [sp, #16]
     87c:	ldp	x29, x30, [sp], #32
     880:	ret
     884:	ldr	x0, [x19, #32]
     888:	mov	x1, x20
     88c:	bl	730 <strcmp@plt>
     890:	cbnz	w0, 8ac <gconv_init@@Base+0x74>
     894:	mov	x0, #0x1                   	// #1
     898:	mov	x1, #0xffffffffffffffff    	// #-1
     89c:	movk	x0, #0x2, lsl #32
     8a0:	stp	x0, x0, [x19, #72]
     8a4:	str	x1, [x19, #96]
     8a8:	b	870 <gconv_init@@Base+0x38>
     8ac:	mov	w0, #0x1                   	// #1
     8b0:	b	878 <gconv_init@@Base+0x40>
     8b4:	nop

00000000000008b8 <gconv@@Base>:
     8b8:	stp	x29, x30, [sp, #-224]!
     8bc:	mov	x9, x1
     8c0:	adrp	x1, 11000 <gconv@@Base+0x10748>
     8c4:	mov	x29, sp
     8c8:	ldr	x1, [x1, #4056]
     8cc:	stp	x19, x20, [sp, #16]
     8d0:	ldr	w19, [x9, #16]
     8d4:	mov	x15, x0
     8d8:	ldr	x0, [x1]
     8dc:	str	x0, [sp, #216]
     8e0:	mov	x0, #0x0                   	// #0
     8e4:	add	x0, x9, #0x30
     8e8:	stp	x21, x22, [sp, #32]
     8ec:	mov	x12, x2
     8f0:	stp	x23, x24, [sp, #48]
     8f4:	mov	x20, x3
     8f8:	mov	x13, x4
     8fc:	stp	x25, x26, [sp, #64]
     900:	mov	x22, x5
     904:	mov	w23, w7
     908:	str	x0, [sp, #120]
     90c:	add	x26, x15, #0x68
     910:	mov	x21, #0x0                   	// #0
     914:	tbnz	w19, #0, 934 <gconv@@Base+0x7c>
     918:	ldr	x0, [x15, #104]
     91c:	ldr	x21, [x26, #40]
     920:	cbz	x0, 934 <gconv@@Base+0x7c>
     924:	adrp	x0, 11000 <gconv@@Base+0x10748>
     928:	ldr	x0, [x0, #4040]
     92c:	ldr	x0, [x0]
     930:	eor	x21, x21, x0
     934:	cbnz	w6, 1030 <gconv@@Base+0x778>
     938:	cmp	x13, #0x0
     93c:	add	x24, sp, #0xb0
     940:	csel	x0, x9, x13, eq  // eq = none
     944:	cmp	x22, #0x0
     948:	csel	x1, x24, xzr, ne  // ne = any
     94c:	stp	x27, x28, [sp, #80]
     950:	ldr	x27, [x0]
     954:	str	x1, [sp, #144]
     958:	str	xzr, [sp, #176]
     95c:	ldr	x25, [x12]
     960:	ldr	x8, [x9, #8]
     964:	cbnz	w23, c58 <gconv@@Base+0x3a0>
     968:	add	x0, sp, #0xc8
     96c:	mov	x24, x15
     970:	str	x0, [sp, #152]
     974:	add	x0, sp, #0xc0
     978:	str	x0, [sp, #160]
     97c:	mov	x0, x20
     980:	mov	x20, x8
     984:	mov	x8, x0
     988:	ldr	x0, [x24, #96]
     98c:	add	x28, sp, #0xb8
     990:	str	x13, [sp, #112]
     994:	stp	x26, x28, [sp, #128]
     998:	mov	x26, x9
     99c:	mov	x28, x12
     9a0:	cbz	x0, ab4 <gconv@@Base+0x1fc>
     9a4:	cmp	x8, x25
     9a8:	b.eq	d78 <gconv@@Base+0x4c0>  // b.none
     9ac:	cmp	x20, x27
     9b0:	b.ls	dc8 <gconv@@Base+0x510>  // b.plast
     9b4:	mov	x2, x25
     9b8:	mov	x19, x27
     9bc:	b	9d8 <gconv@@Base+0x120>
     9c0:	strb	w0, [x19], #1
     9c4:	cmp	x8, x1
     9c8:	b.eq	d80 <gconv@@Base+0x4c8>  // b.none
     9cc:	mov	x2, x1
     9d0:	cmp	x20, x19
     9d4:	b.ls	a1c <gconv@@Base+0x164>  // b.plast
     9d8:	mov	x1, x2
     9dc:	ldrb	w0, [x1], #1
     9e0:	tbz	w0, #7, 9c0 <gconv@@Base+0x108>
     9e4:	add	x3, x2, #0x2
     9e8:	cmp	x8, x3
     9ec:	b.ls	c24 <gconv@@Base+0x36c>  // b.plast
     9f0:	sub	x4, x20, x19
     9f4:	cmp	x4, #0x1
     9f8:	b.le	d70 <gconv@@Base+0x4b8>
     9fc:	mov	x1, x19
     a00:	strb	w0, [x1], #2
     a04:	ldrb	w0, [x2, #1]
     a08:	mov	x2, x3
     a0c:	strb	w0, [x19, #1]
     a10:	mov	x19, x1
     a14:	cmp	x20, x19
     a18:	b.hi	9d8 <gconv@@Base+0x120>  // b.pmore
     a1c:	mov	x1, x2
     a20:	mov	w13, #0x5                   	// #5
     a24:	ldr	x0, [sp, #112]
     a28:	str	x1, [x28]
     a2c:	cbnz	x0, b28 <gconv@@Base+0x270>
     a30:	ldp	w1, w0, [x26, #16]
     a34:	add	w0, w0, #0x1
     a38:	str	w0, [x26, #20]
     a3c:	tbnz	w1, #0, d88 <gconv@@Base+0x4d0>
     a40:	cmp	x27, x19
     a44:	b.cs	dc0 <gconv@@Base+0x508>  // b.hs, b.nlast
     a48:	ldr	x1, [x26]
     a4c:	mov	x0, x21
     a50:	str	x8, [sp, #96]
     a54:	str	w13, [sp, #104]
     a58:	str	x1, [sp, #184]
     a5c:	bl	740 <_dl_mcount_wrapper_check@plt>
     a60:	ldp	x1, x0, [sp, #120]
     a64:	mov	w7, w23
     a68:	ldr	x2, [sp, #136]
     a6c:	mov	x5, x22
     a70:	mov	x3, x19
     a74:	mov	w6, #0x0                   	// #0
     a78:	mov	x4, #0x0                   	// #0
     a7c:	blr	x21
     a80:	mov	w7, w0
     a84:	ldr	w13, [sp, #104]
     a88:	cmp	w0, #0x4
     a8c:	ldr	x8, [sp, #96]
     a90:	b.eq	c14 <gconv@@Base+0x35c>  // b.none
     a94:	ldr	x13, [sp, #184]
     a98:	cmp	x13, x19
     a9c:	b.ne	cf4 <gconv@@Base+0x43c>  // b.any
     aa0:	cbnz	w7, 1080 <gconv@@Base+0x7c8>
     aa4:	ldr	x0, [x24, #96]
     aa8:	ldr	x27, [x26]
     aac:	ldr	x25, [x28]
     ab0:	cbnz	x0, 9a4 <gconv@@Base+0xec>
     ab4:	stp	x25, x27, [sp, #192]
     ab8:	cmp	x8, x25
     abc:	ldr	w7, [x26, #16]
     ac0:	b.eq	d78 <gconv@@Base+0x4c0>  // b.none
     ac4:	mov	x19, x27
     ac8:	and	w7, w7, #0x2
     acc:	mov	x1, x25
     ad0:	cmp	x20, x19
     ad4:	mov	w13, #0x4                   	// #4
     ad8:	mov	w14, #0xa844                	// #43076
     adc:	b.ls	b10 <gconv@@Base+0x258>  // b.plast
     ae0:	mov	x2, x1
     ae4:	ldrsb	w3, [x2], #1
     ae8:	tbnz	w3, #31, b68 <gconv@@Base+0x2b0>
     aec:	add	x3, x19, #0x1
     af0:	stp	x2, x3, [sp, #192]
     af4:	ldrb	w2, [x1]
     af8:	strb	w2, [x19]
     afc:	ldp	x1, x19, [sp, #192]
     b00:	cmp	x8, x1
     b04:	b.eq	a24 <gconv@@Base+0x16c>  // b.none
     b08:	cmp	x20, x19
     b0c:	b.hi	ae0 <gconv@@Base+0x228>  // b.pmore
     b10:	ldr	x0, [sp, #112]
     b14:	mov	w13, #0x5                   	// #5
     b18:	ldr	x1, [sp, #192]
     b1c:	str	x1, [x28]
     b20:	cbz	x0, a30 <gconv@@Base+0x178>
     b24:	nop
     b28:	mov	w24, w13
     b2c:	ldp	x27, x28, [sp, #80]
     b30:	str	x19, [x0]
     b34:	adrp	x0, 11000 <gconv@@Base+0x10748>
     b38:	ldr	x25, [x0, #4056]
     b3c:	ldr	x1, [sp, #216]
     b40:	ldr	x0, [x25]
     b44:	eor	x0, x1, x0
     b48:	cbnz	x0, 1574 <gconv@@Base+0xcbc>
     b4c:	mov	w0, w24
     b50:	ldp	x19, x20, [sp, #16]
     b54:	ldp	x21, x22, [sp, #32]
     b58:	ldp	x23, x24, [sp, #48]
     b5c:	ldp	x25, x26, [sp, #64]
     b60:	ldp	x29, x30, [sp], #224
     b64:	ret
     b68:	cmp	x8, x2
     b6c:	b.ls	dd8 <gconv@@Base+0x520>  // b.plast
     b70:	sub	x3, x20, x19
     b74:	cmp	x3, #0x1
     b78:	b.le	b10 <gconv@@Base+0x258>
     b7c:	ldrh	w5, [x1]
     b80:	ldrb	w4, [x1, #1]
     b84:	rev16	w5, w5
     b88:	and	w3, w5, #0xffff
     b8c:	cmp	w14, w5, uxth
     b90:	b.eq	c2c <gconv@@Base+0x374>  // b.none
     b94:	mov	w15, #0xffff5e5f            	// #-41377
     b98:	add	w6, w3, w15
     b9c:	mov	w5, #0x565d                	// #22109
     ba0:	cmp	w6, w5
     ba4:	b.hi	c38 <gconv@@Base+0x380>  // b.pmore
     ba8:	cmp	w4, #0xa0
     bac:	b.ls	c38 <gconv@@Base+0x380>  // b.plast
     bb0:	mov	w12, #0xffff5d5f            	// #-41633
     bb4:	add	w0, w3, w12
     bb8:	cmp	w0, #0x9
     bbc:	b.ls	c38 <gconv@@Base+0x380>  // b.plast
     bc0:	mov	w11, #0xffff5920            	// #-42720
     bc4:	add	w0, w3, w11
     bc8:	cmp	w0, #0x15
     bcc:	b.ls	c38 <gconv@@Base+0x380>  // b.plast
     bd0:	mov	w10, #0xffff5745            	// #-43195
     bd4:	add	w3, w3, w10
     bd8:	cmp	w3, #0x5
     bdc:	b.ls	c38 <gconv@@Base+0x380>  // b.plast
     be0:	add	x0, x19, #0x1
     be4:	stp	x2, x0, [sp, #192]
     be8:	ldrb	w0, [x1]
     bec:	strb	w0, [x19]
     bf0:	ldp	x2, x1, [sp, #192]
     bf4:	add	x0, x2, #0x1
     bf8:	str	x0, [sp, #192]
     bfc:	add	x0, x1, #0x1
     c00:	str	x0, [sp, #200]
     c04:	ldrb	w2, [x2]
     c08:	strb	w2, [x1]
     c0c:	ldp	x1, x19, [sp, #192]
     c10:	b	b00 <gconv@@Base+0x248>
     c14:	mov	w7, w13
     c18:	cmp	w13, #0x5
     c1c:	b.ne	aa0 <gconv@@Base+0x1e8>  // b.any
     c20:	b	aa4 <gconv@@Base+0x1ec>
     c24:	mov	w13, #0x7                   	// #7
     c28:	b	a24 <gconv@@Base+0x16c>
     c2c:	cmp	w4, #0xa0
     c30:	b.hi	be0 <gconv@@Base+0x328>  // b.pmore
     c34:	nop
     c38:	ldr	x0, [sp, #144]
     c3c:	cbz	x0, 13ac <gconv@@Base+0xaf4>
     c40:	ldr	w0, [x26, #16]
     c44:	tbnz	w0, #3, de4 <gconv@@Base+0x52c>
     c48:	ldr	x1, [sp, #192]
     c4c:	cbnz	w7, f64 <gconv@@Base+0x6ac>
     c50:	mov	w13, #0x6                   	// #6
     c54:	b	a24 <gconv@@Base+0x16c>
     c58:	ldr	x28, [x9, #32]
     c5c:	ldr	w0, [x28]
     c60:	ands	w2, w0, #0x7
     c64:	b.eq	968 <gconv@@Base+0xb0>  // b.none
     c68:	cbnz	x13, 15e0 <gconv@@Base+0xd28>
     c6c:	ldr	x3, [x15, #96]
     c70:	mov	w1, w2
     c74:	cbz	x3, e30 <gconv@@Base+0x578>
     c78:	cmp	w1, #0x4
     c7c:	b.hi	15c0 <gconv@@Base+0xd08>  // b.pmore
     c80:	cbz	w1, 110c <gconv@@Base+0x854>
     c84:	ldrb	w2, [x28, #4]
     c88:	tst	w0, #0x6
     c8c:	strb	w2, [sp, #208]
     c90:	cset	x2, ne  // ne = any
     c94:	add	x2, x2, #0x1
     c98:	cmp	x27, x8
     c9c:	b.cs	1158 <gconv@@Base+0x8a0>  // b.hs, b.nlast
     ca0:	add	x7, sp, #0xd0
     ca4:	ldrb	w4, [x25]
     ca8:	add	x3, x2, #0x1
     cac:	strb	w4, [x7, x2]
     cb0:	ldrb	w4, [sp, #208]
     cb4:	mov	x2, #0x1                   	// #1
     cb8:	tbnz	w4, #7, 1164 <gconv@@Base+0x8ac>
     cbc:	mov	x11, x27
     cc0:	strb	w4, [x11], #1
     cc4:	ldr	w0, [x28]
     cc8:	mov	x27, x11
     ccc:	and	w1, w0, #0x7
     cd0:	cmp	x1, x2
     cd4:	b.ge	1554 <gconv@@Base+0xc9c>  // b.tcont
     cd8:	ldr	x10, [x12]
     cdc:	sub	x2, x2, x1
     ce0:	and	w0, w0, #0xfffffff8
     ce4:	add	x25, x10, x2
     ce8:	str	x25, [x12]
     cec:	str	w0, [x28]
     cf0:	b	968 <gconv@@Base+0xb0>
     cf4:	str	x25, [x28]
     cf8:	ldr	x0, [x24, #96]
     cfc:	cbz	x0, edc <gconv@@Base+0x624>
     d00:	cmp	x8, x25
     d04:	b.eq	1424 <gconv@@Base+0xb6c>  // b.none
     d08:	cmp	x13, x27
     d0c:	mov	x0, x27
     d10:	b.hi	d30 <gconv@@Base+0x478>  // b.pmore
     d14:	b	1390 <gconv@@Base+0xad8>
     d18:	strb	w2, [x0], #1
     d1c:	cmp	x8, x1
     d20:	b.eq	137c <gconv@@Base+0xac4>  // b.none
     d24:	mov	x25, x1
     d28:	cmp	x13, x0
     d2c:	b.ls	10dc <gconv@@Base+0x824>  // b.plast
     d30:	mov	x1, x25
     d34:	ldrb	w2, [x1], #1
     d38:	tbz	w2, #7, d18 <gconv@@Base+0x460>
     d3c:	add	x3, x25, #0x2
     d40:	cmp	x8, x3
     d44:	b.ls	125c <gconv@@Base+0x9a4>  // b.plast
     d48:	sub	x4, x13, x0
     d4c:	cmp	x4, #0x1
     d50:	b.le	1334 <gconv@@Base+0xa7c>
     d54:	mov	x1, x0
     d58:	strb	w2, [x1], #2
     d5c:	ldrb	w2, [x25, #1]
     d60:	mov	x25, x3
     d64:	strb	w2, [x0, #1]
     d68:	mov	x0, x1
     d6c:	b	d28 <gconv@@Base+0x470>
     d70:	mov	w13, #0x5                   	// #5
     d74:	b	a24 <gconv@@Base+0x16c>
     d78:	mov	x19, x27
     d7c:	mov	x1, x8
     d80:	mov	w13, #0x4                   	// #4
     d84:	b	a24 <gconv@@Base+0x16c>
     d88:	ldr	x0, [x22]
     d8c:	mov	w24, w13
     d90:	ldr	x1, [sp, #176]
     d94:	mov	x9, x26
     d98:	mov	x12, x28
     d9c:	mov	x20, x8
     da0:	str	x19, [x26]
     da4:	add	x0, x0, x1
     da8:	str	x0, [x22]
     dac:	cmp	w23, #0x0
     db0:	ccmp	w24, #0x7, #0x0, ne  // ne = any
     db4:	b.eq	11d4 <gconv@@Base+0x91c>  // b.none
     db8:	ldp	x27, x28, [sp, #80]
     dbc:	b	b34 <gconv@@Base+0x27c>
     dc0:	mov	w7, w13
     dc4:	b	aa0 <gconv@@Base+0x1e8>
     dc8:	mov	x19, x27
     dcc:	mov	x1, x25
     dd0:	mov	w13, #0x5                   	// #5
     dd4:	b	a24 <gconv@@Base+0x16c>
     dd8:	mov	w13, #0x7                   	// #7
     ddc:	ldr	x1, [sp, #192]
     de0:	b	a24 <gconv@@Base+0x16c>
     de4:	ldp	x6, x5, [sp, #144]
     de8:	mov	x4, x8
     dec:	ldr	x2, [x28]
     df0:	mov	x1, x26
     df4:	ldr	x3, [sp, #160]
     df8:	mov	x0, x24
     dfc:	str	x8, [sp, #96]
     e00:	str	w7, [sp, #104]
     e04:	bl	700 <__gconv_transliterate@plt>
     e08:	mov	w13, w0
     e0c:	ldr	w7, [sp, #104]
     e10:	cmp	w0, #0x6
     e14:	mov	w14, #0xa844                	// #43076
     e18:	ldr	x8, [sp, #96]
     e1c:	b.eq	1104 <gconv@@Base+0x84c>  // b.none
     e20:	cmp	w0, #0x5
     e24:	ldp	x1, x19, [sp, #192]
     e28:	b.ne	b00 <gconv@@Base+0x248>  // b.any
     e2c:	b	a24 <gconv@@Base+0x16c>
     e30:	stp	x25, x27, [sp, #192]
     e34:	cmp	w2, #0x4
     e38:	b.hi	1640 <gconv@@Base+0xd88>  // b.pmore
     e3c:	cbz	w2, 1198 <gconv@@Base+0x8e0>
     e40:	ldrb	w1, [x28, #4]
     e44:	tst	w0, #0x6
     e48:	strb	w1, [sp, #208]
     e4c:	mov	x0, #0x1                   	// #1
     e50:	b.eq	e60 <gconv@@Base+0x5a8>  // b.none
     e54:	ldrb	w1, [x28, #5]
     e58:	mov	x0, #0x2                   	// #2
     e5c:	strb	w1, [sp, #209]
     e60:	cmp	x27, x8
     e64:	b.cs	1158 <gconv@@Base+0x8a0>  // b.hs, b.nlast
     e68:	add	x1, x25, #0x1
     e6c:	add	x7, sp, #0xd0
     e70:	str	x1, [sp, #192]
     e74:	add	x18, x0, #0x1
     e78:	ldrb	w1, [x25]
     e7c:	strb	w1, [x7, x0]
     e80:	ldrb	w1, [sp, #208]
     e84:	str	x7, [sp, #192]
     e88:	tbnz	w1, #7, 1270 <gconv@@Base+0x9b8>
     e8c:	add	x0, x27, #0x1
     e90:	add	x2, x7, #0x1
     e94:	stp	x2, x0, [sp, #192]
     e98:	strb	w1, [x27]
     e9c:	ldr	x0, [sp, #192]
     ea0:	cmp	x0, x7
     ea4:	b.eq	132c <gconv@@Base+0xa74>  // b.none
     ea8:	ldr	w1, [x28]
     eac:	sub	x0, x0, x7
     eb0:	and	x2, x1, #0x7
     eb4:	cmp	x0, x2
     eb8:	b.le	1650 <gconv@@Base+0xd98>
     ebc:	ldr	x10, [x12]
     ec0:	sub	x0, x0, x2
     ec4:	and	w1, w1, #0xfffffff8
     ec8:	add	x25, x10, x0
     ecc:	str	x25, [x12]
     ed0:	ldr	x27, [sp, #200]
     ed4:	str	w1, [x28]
     ed8:	b	968 <gconv@@Base+0xb0>
     edc:	stp	x25, x27, [sp, #192]
     ee0:	cmp	x8, x25
     ee4:	ldr	w19, [x26, #16]
     ee8:	b.eq	1424 <gconv@@Base+0xb6c>  // b.none
     eec:	and	w19, w19, #0x2
     ef0:	mov	x0, x27
     ef4:	mov	w4, #0x4                   	// #4
     ef8:	mov	w14, #0xa844                	// #43076
     efc:	cmp	x13, x0
     f00:	b.ls	122c <gconv@@Base+0x974>  // b.plast
     f04:	mov	x2, x25
     f08:	ldrsb	w3, [x2], #1
     f0c:	tbnz	w3, #31, f84 <gconv@@Base+0x6cc>
     f10:	add	x1, x0, #0x1
     f14:	stp	x2, x1, [sp, #192]
     f18:	ldrb	w1, [x25]
     f1c:	strb	w1, [x0]
     f20:	ldp	x25, x0, [sp, #192]
     f24:	cmp	x8, x25
     f28:	b.ne	efc <gconv@@Base+0x644>  // b.any
     f2c:	ldr	x1, [sp, #184]
     f30:	str	x8, [x28]
     f34:	cmp	x1, x0
     f38:	b.ne	123c <gconv@@Base+0x984>  // b.any
     f3c:	cmp	w4, #0x5
     f40:	b.eq	10ec <gconv@@Base+0x834>  // b.none
     f44:	adrp	x3, 1000 <gconv@@Base+0x748>
     f48:	adrp	x1, 1000 <gconv@@Base+0x748>
     f4c:	adrp	x0, 1000 <gconv@@Base+0x748>
     f50:	add	x3, x3, #0x810
     f54:	add	x1, x1, #0x678
     f58:	add	x0, x0, #0x7a8
     f5c:	mov	w2, #0x2eb                 	// #747
     f60:	bl	750 <__assert_fail@plt>
     f64:	ldr	x2, [sp, #144]
     f68:	add	x1, x1, #0x2
     f6c:	mov	w13, #0x6                   	// #6
     f70:	str	x1, [sp, #192]
     f74:	ldr	x0, [x2]
     f78:	add	x0, x0, #0x1
     f7c:	str	x0, [x2]
     f80:	b	b00 <gconv@@Base+0x248>
     f84:	cmp	x2, x8
     f88:	b.cs	1398 <gconv@@Base+0xae0>  // b.hs, b.nlast
     f8c:	sub	x1, x13, x0
     f90:	cmp	x1, #0x1
     f94:	b.le	122c <gconv@@Base+0x974>
     f98:	ldrh	w3, [x25]
     f9c:	ldrb	w1, [x25, #1]
     fa0:	rev16	w3, w3
     fa4:	and	w5, w3, #0xffff
     fa8:	cmp	w14, w3, uxth
     fac:	b.eq	1348 <gconv@@Base+0xa90>  // b.none
     fb0:	mov	w9, #0xffff5e5f            	// #-41377
     fb4:	add	w6, w5, w9
     fb8:	mov	w3, #0x565d                	// #22109
     fbc:	cmp	w6, w3
     fc0:	b.hi	1350 <gconv@@Base+0xa98>  // b.pmore
     fc4:	cmp	w1, #0xa0
     fc8:	b.ls	1350 <gconv@@Base+0xa98>  // b.plast
     fcc:	mov	w6, #0xffff5d5f            	// #-41633
     fd0:	add	w1, w5, w6
     fd4:	cmp	w1, #0x9
     fd8:	b.ls	1350 <gconv@@Base+0xa98>  // b.plast
     fdc:	mov	w3, #0xffff5920            	// #-42720
     fe0:	add	w1, w5, w3
     fe4:	cmp	w1, #0x15
     fe8:	b.ls	1350 <gconv@@Base+0xa98>  // b.plast
     fec:	mov	w1, #0xffff5745            	// #-43195
     ff0:	add	w5, w5, w1
     ff4:	cmp	w5, #0x5
     ff8:	b.ls	1350 <gconv@@Base+0xa98>  // b.plast
     ffc:	add	x1, x0, #0x1
    1000:	stp	x2, x1, [sp, #192]
    1004:	ldrb	w1, [x25]
    1008:	strb	w1, [x0]
    100c:	ldp	x1, x0, [sp, #192]
    1010:	add	x2, x1, #0x1
    1014:	str	x2, [sp, #192]
    1018:	add	x2, x0, #0x1
    101c:	str	x2, [sp, #200]
    1020:	ldrb	w1, [x1]
    1024:	strb	w1, [x0]
    1028:	ldp	x25, x0, [sp, #192]
    102c:	b	f24 <gconv@@Base+0x66c>
    1030:	cbnz	x13, 159c <gconv@@Base+0xce4>
    1034:	ldr	x0, [x9, #32]
    1038:	mov	w24, #0x0                   	// #0
    103c:	str	xzr, [x0]
    1040:	ldr	w0, [x9, #16]
    1044:	tbnz	w0, #0, b34 <gconv@@Base+0x27c>
    1048:	mov	x0, x21
    104c:	str	w6, [sp, #96]
    1050:	bl	740 <_dl_mcount_wrapper_check@plt>
    1054:	ldr	w6, [sp, #96]
    1058:	mov	w7, w23
    105c:	ldr	x1, [sp, #120]
    1060:	mov	x5, x22
    1064:	mov	x0, x26
    1068:	mov	x4, #0x0                   	// #0
    106c:	mov	x3, #0x0                   	// #0
    1070:	mov	x2, #0x0                   	// #0
    1074:	blr	x21
    1078:	mov	w24, w0
    107c:	b	b34 <gconv@@Base+0x27c>
    1080:	mov	x9, x26
    1084:	mov	x12, x28
    1088:	mov	x20, x8
    108c:	mov	w24, w7
    1090:	b	dac <gconv@@Base+0x4f4>
    1094:	ldp	x6, x5, [sp, #144]
    1098:	mov	x4, x8
    109c:	ldr	x2, [x28]
    10a0:	mov	x1, x26
    10a4:	ldr	x3, [sp, #160]
    10a8:	mov	x0, x24
    10ac:	stp	x8, x13, [sp, #96]
    10b0:	str	w7, [sp, #168]
    10b4:	bl	700 <__gconv_transliterate@plt>
    10b8:	ldr	w7, [sp, #168]
    10bc:	mov	w4, w0
    10c0:	cmp	w0, #0x6
    10c4:	mov	w14, #0xa844                	// #43076
    10c8:	ldp	x8, x13, [sp, #96]
    10cc:	b.eq	1430 <gconv@@Base+0xb78>  // b.none
    10d0:	cmp	w0, #0x5
    10d4:	ldp	x25, x0, [sp, #192]
    10d8:	b.ne	f24 <gconv@@Base+0x66c>  // b.any
    10dc:	ldr	x1, [sp, #184]
    10e0:	str	x25, [x28]
    10e4:	cmp	x1, x0
    10e8:	b.ne	123c <gconv@@Base+0x984>  // b.any
    10ec:	cmp	x27, x0
    10f0:	b.ne	aa0 <gconv@@Base+0x1e8>  // b.any
    10f4:	ldr	w0, [x26, #20]
    10f8:	sub	w0, w0, #0x1
    10fc:	str	w0, [x26, #20]
    1100:	b	aa0 <gconv@@Base+0x1e8>
    1104:	ldr	x19, [sp, #200]
    1108:	b	c48 <gconv@@Base+0x390>
    110c:	add	x7, sp, #0xd0
    1110:	cmp	x27, x8
    1114:	mov	x2, #0x0                   	// #0
    1118:	b.cs	1158 <gconv@@Base+0x8a0>  // b.hs, b.nlast
    111c:	ldrb	w4, [x25], #1
    1120:	add	x3, x2, #0x1
    1124:	strb	w4, [x7, x2]
    1128:	cmp	x3, #0x1
    112c:	ccmp	x20, x25, #0x0, ls  // ls = plast
    1130:	mov	x2, #0x1                   	// #1
    1134:	b.ls	cb0 <gconv@@Base+0x3f8>  // b.plast
    1138:	ldrb	w4, [x25], #1
    113c:	add	x3, x2, #0x1
    1140:	strb	w4, [x7, x2]
    1144:	cmp	x3, #0x1
    1148:	ccmp	x20, x25, #0x0, ls  // ls = plast
    114c:	mov	x2, #0x1                   	// #1
    1150:	b.hi	111c <gconv@@Base+0x864>  // b.pmore
    1154:	b	cb0 <gconv@@Base+0x3f8>
    1158:	mov	w24, #0x5                   	// #5
    115c:	ldp	x27, x28, [sp, #80]
    1160:	b	b34 <gconv@@Base+0x27c>
    1164:	add	x3, x7, x3
    1168:	add	x7, x7, #0x2
    116c:	cmp	x7, x3
    1170:	b.cs	cd0 <gconv@@Base+0x418>  // b.hs, b.nlast
    1174:	sub	x3, x8, x27
    1178:	cmp	x3, x2
    117c:	b.le	cd0 <gconv@@Base+0x418>
    1180:	mov	x11, x27
    1184:	mov	x2, #0x2                   	// #2
    1188:	strb	w4, [x11], #1
    118c:	ldrb	w4, [sp, #209]
    1190:	mov	x27, x11
    1194:	b	cbc <gconv@@Base+0x404>
    1198:	cmp	x27, x8
    119c:	b.cs	1158 <gconv@@Base+0x8a0>  // b.hs, b.nlast
    11a0:	add	x0, x25, #0x1
    11a4:	add	x7, sp, #0xd0
    11a8:	mov	x1, #0x0                   	// #0
    11ac:	str	x0, [sp, #192]
    11b0:	add	x18, x1, #0x1
    11b4:	cmp	x18, #0x1
    11b8:	ldurb	w2, [x0, #-1]
    11bc:	ccmp	x20, x0, #0x0, ls  // ls = plast
    11c0:	strb	w2, [x7, x1]
    11c4:	add	x0, x0, #0x1
    11c8:	mov	x1, #0x1                   	// #1
    11cc:	b.hi	11ac <gconv@@Base+0x8f4>  // b.pmore
    11d0:	b	e80 <gconv@@Base+0x5c8>
    11d4:	ldr	x3, [x12]
    11d8:	sub	x0, x20, x3
    11dc:	cmp	x0, #0x3
    11e0:	b.gt	1528 <gconv@@Base+0xc70>
    11e4:	ldr	x4, [x9, #32]
    11e8:	cmp	x3, x20
    11ec:	mov	x0, x3
    11f0:	add	x1, x4, #0x4
    11f4:	b.cs	14ac <gconv@@Base+0xbf4>  // b.hs, b.nlast
    11f8:	add	x0, x0, #0x1
    11fc:	str	x0, [x12]
    1200:	cmp	x0, x20
    1204:	ldurb	w2, [x0, #-1]
    1208:	strb	w2, [x1], #1
    120c:	b.ne	11f8 <gconv@@Base+0x940>  // b.any
    1210:	sub	w0, w0, w3
    1214:	ldr	w1, [x4]
    1218:	ldp	x27, x28, [sp, #80]
    121c:	and	w1, w1, #0xfffffff8
    1220:	orr	w0, w1, w0
    1224:	str	w0, [x4]
    1228:	b	b34 <gconv@@Base+0x27c>
    122c:	ldp	x1, x2, [sp, #184]
    1230:	str	x2, [x28]
    1234:	cmp	x1, x0
    1238:	b.eq	10ec <gconv@@Base+0x834>  // b.none
    123c:	adrp	x3, 1000 <gconv@@Base+0x748>
    1240:	adrp	x1, 1000 <gconv@@Base+0x748>
    1244:	adrp	x0, 1000 <gconv@@Base+0x748>
    1248:	add	x3, x3, #0x810
    124c:	add	x1, x1, #0x678
    1250:	add	x0, x0, #0x790
    1254:	mov	w2, #0x2ea                 	// #746
    1258:	bl	750 <__assert_fail@plt>
    125c:	ldr	x2, [sp, #184]
    1260:	str	x1, [x28]
    1264:	cmp	x0, x2
    1268:	b.eq	f44 <gconv@@Base+0x68c>  // b.none
    126c:	b	123c <gconv@@Base+0x984>
    1270:	add	x4, x7, x18
    1274:	add	x0, x7, #0x1
    1278:	cmp	x4, x0
    127c:	b.ls	1438 <gconv@@Base+0xb80>  // b.plast
    1280:	sub	x0, x8, x27
    1284:	cmp	x0, #0x1
    1288:	b.le	1158 <gconv@@Base+0x8a0>
    128c:	ldrh	w0, [sp, #208]
    1290:	mov	w3, #0xa844                	// #43076
    1294:	ldrb	w2, [sp, #209]
    1298:	rev16	w0, w0
    129c:	cmp	w3, w0, uxth
    12a0:	and	w0, w0, #0xffff
    12a4:	b.eq	13d8 <gconv@@Base+0xb20>  // b.none
    12a8:	mov	w30, #0xffff5e5f            	// #-41377
    12ac:	add	w5, w0, w30
    12b0:	mov	w3, #0x565d                	// #22109
    12b4:	cmp	w5, w3
    12b8:	b.hi	13e0 <gconv@@Base+0xb28>  // b.pmore
    12bc:	cmp	w2, #0xa0
    12c0:	b.ls	13e0 <gconv@@Base+0xb28>  // b.plast
    12c4:	mov	w24, #0xffff5d5f            	// #-41633
    12c8:	add	w2, w0, w24
    12cc:	cmp	w2, #0x9
    12d0:	b.ls	13e0 <gconv@@Base+0xb28>  // b.plast
    12d4:	mov	w17, #0xffff5920            	// #-42720
    12d8:	add	w2, w0, w17
    12dc:	cmp	w2, #0x15
    12e0:	b.ls	13e0 <gconv@@Base+0xb28>  // b.plast
    12e4:	mov	w16, #0xffff5745            	// #-43195
    12e8:	add	w0, w0, w16
    12ec:	cmp	w0, #0x5
    12f0:	b.ls	13e0 <gconv@@Base+0xb28>  // b.plast
    12f4:	add	x2, x7, #0x1
    12f8:	add	x0, x27, #0x1
    12fc:	stp	x2, x0, [sp, #192]
    1300:	strb	w1, [x27]
    1304:	ldp	x1, x0, [sp, #192]
    1308:	add	x2, x1, #0x1
    130c:	str	x2, [sp, #192]
    1310:	add	x2, x0, #0x1
    1314:	str	x2, [sp, #200]
    1318:	ldrb	w1, [x1]
    131c:	strb	w1, [x0]
    1320:	ldr	x0, [sp, #192]
    1324:	cmp	x0, x7
    1328:	b.ne	ea8 <gconv@@Base+0x5f0>  // b.any
    132c:	ldr	x25, [x12]
    1330:	b	968 <gconv@@Base+0xb0>
    1334:	ldr	x2, [sp, #184]
    1338:	str	x1, [x28]
    133c:	cmp	x0, x2
    1340:	b.eq	10ec <gconv@@Base+0x834>  // b.none
    1344:	b	123c <gconv@@Base+0x984>
    1348:	cmp	w1, #0xa0
    134c:	b.hi	ffc <gconv@@Base+0x744>  // b.pmore
    1350:	ldr	x1, [sp, #144]
    1354:	cbz	x1, 1398 <gconv@@Base+0xae0>
    1358:	ldr	w1, [x26, #16]
    135c:	tbnz	w1, #3, 1094 <gconv@@Base+0x7dc>
    1360:	ldr	x10, [sp, #192]
    1364:	cbnz	w19, 13b8 <gconv@@Base+0xb00>
    1368:	ldr	x1, [sp, #184]
    136c:	str	x10, [x28]
    1370:	cmp	x0, x1
    1374:	b.eq	f44 <gconv@@Base+0x68c>  // b.none
    1378:	b	123c <gconv@@Base+0x984>
    137c:	ldr	x1, [sp, #184]
    1380:	str	x8, [x28]
    1384:	cmp	x1, x0
    1388:	b.eq	f44 <gconv@@Base+0x68c>  // b.none
    138c:	b	123c <gconv@@Base+0x984>
    1390:	b.eq	10f4 <gconv@@Base+0x83c>  // b.none
    1394:	b	123c <gconv@@Base+0x984>
    1398:	ldp	x1, x2, [sp, #184]
    139c:	str	x2, [x28]
    13a0:	cmp	x1, x0
    13a4:	b.eq	f44 <gconv@@Base+0x68c>  // b.none
    13a8:	b	123c <gconv@@Base+0x984>
    13ac:	mov	w13, #0x6                   	// #6
    13b0:	ldr	x1, [sp, #192]
    13b4:	b	a24 <gconv@@Base+0x16c>
    13b8:	ldr	x2, [sp, #144]
    13bc:	add	x25, x10, #0x2
    13c0:	mov	w4, #0x6                   	// #6
    13c4:	str	x25, [sp, #192]
    13c8:	ldr	x1, [x2]
    13cc:	add	x1, x1, #0x1
    13d0:	str	x1, [x2]
    13d4:	b	f24 <gconv@@Base+0x66c>
    13d8:	cmp	w2, #0xa0
    13dc:	b.hi	12f4 <gconv@@Base+0xa3c>  // b.pmore
    13e0:	ldr	x0, [sp, #144]
    13e4:	cbz	x0, 1418 <gconv@@Base+0xb60>
    13e8:	tbnz	w19, #3, 14b4 <gconv@@Base+0xbfc>
    13ec:	mov	w24, #0x6                   	// #6
    13f0:	tbz	w19, #1, db8 <gconv@@Base+0x500>
    13f4:	ldr	x2, [sp, #144]
    13f8:	ldr	x0, [sp, #192]
    13fc:	ldr	x1, [x2]
    1400:	add	x0, x0, #0x2
    1404:	str	x0, [sp, #192]
    1408:	add	x1, x1, #0x1
    140c:	str	x1, [x2]
    1410:	cmp	x0, x7
    1414:	b.ne	ea8 <gconv@@Base+0x5f0>  // b.any
    1418:	mov	w24, #0x6                   	// #6
    141c:	ldp	x27, x28, [sp, #80]
    1420:	b	b34 <gconv@@Base+0x27c>
    1424:	cmp	x13, x27
    1428:	b.eq	f44 <gconv@@Base+0x68c>  // b.none
    142c:	b	123c <gconv@@Base+0x984>
    1430:	ldr	x0, [sp, #200]
    1434:	b	1360 <gconv@@Base+0xaa8>
    1438:	add	x7, x7, #0x2
    143c:	cmp	x4, x7
    1440:	b.eq	157c <gconv@@Base+0xcc4>  // b.none
    1444:	ldr	w0, [x28]
    1448:	ldr	x1, [x12]
    144c:	and	x2, x0, #0x7
    1450:	sub	x2, x18, x2
    1454:	and	w0, w0, #0xfffffff8
    1458:	add	x1, x1, x2
    145c:	str	x1, [x12]
    1460:	cmp	x18, w0, sxtw
    1464:	b.le	1620 <gconv@@Base+0xd68>
    1468:	cmp	x18, #0x4
    146c:	b.hi	1600 <gconv@@Base+0xd48>  // b.pmore
    1470:	orr	w18, w0, w18
    1474:	ldr	x0, [sp, #192]
    1478:	str	w18, [x28], #4
    147c:	cmp	x4, x0
    1480:	add	x0, x0, #0x1
    1484:	b.ls	14a0 <gconv@@Base+0xbe8>  // b.plast
    1488:	str	x0, [sp, #192]
    148c:	cmp	x4, x0
    1490:	add	x0, x0, #0x1
    1494:	ldurb	w1, [x0, #-2]
    1498:	strb	w1, [x28], #1
    149c:	b.ne	1488 <gconv@@Base+0xbd0>  // b.any
    14a0:	mov	w24, #0x7                   	// #7
    14a4:	ldp	x27, x28, [sp, #80]
    14a8:	b	b34 <gconv@@Base+0x27c>
    14ac:	mov	w0, #0x0                   	// #0
    14b0:	b	1214 <gconv@@Base+0x95c>
    14b4:	mov	x6, x0
    14b8:	mov	x1, x9
    14bc:	mov	x0, x15
    14c0:	mov	x2, x25
    14c4:	add	x5, sp, #0xc8
    14c8:	add	x3, sp, #0xc0
    14cc:	stp	x15, x9, [sp, #96]
    14d0:	str	x4, [sp, #112]
    14d4:	stp	x18, x8, [sp, #128]
    14d8:	stp	x12, x13, [sp, #152]
    14dc:	str	x7, [sp, #168]
    14e0:	bl	700 <__gconv_transliterate@plt>
    14e4:	mov	w24, w0
    14e8:	cmp	w0, #0x6
    14ec:	ldp	x15, x9, [sp, #96]
    14f0:	ldr	x8, [sp, #136]
    14f4:	ldp	x12, x13, [sp, #152]
    14f8:	ldr	x7, [sp, #168]
    14fc:	b.eq	1548 <gconv@@Base+0xc90>  // b.none
    1500:	ldr	x0, [sp, #192]
    1504:	ldr	x4, [sp, #112]
    1508:	cmp	x0, x7
    150c:	ldr	x18, [sp, #128]
    1510:	b.ne	ea8 <gconv@@Base+0x5f0>  // b.any
    1514:	cmp	w24, #0x7
    1518:	b.eq	1438 <gconv@@Base+0xb80>  // b.none
    151c:	cbnz	w24, db8 <gconv@@Base+0x500>
    1520:	ldr	x25, [x12]
    1524:	b	968 <gconv@@Base+0xb0>
    1528:	adrp	x3, 1000 <gconv@@Base+0x748>
    152c:	adrp	x1, 1000 <gconv@@Base+0x748>
    1530:	adrp	x0, 1000 <gconv@@Base+0x748>
    1534:	add	x3, x3, #0x810
    1538:	add	x1, x1, #0x678
    153c:	add	x0, x0, #0x7c8
    1540:	mov	w2, #0x31e                 	// #798
    1544:	bl	750 <__assert_fail@plt>
    1548:	tbnz	w19, #1, 13f4 <gconv@@Base+0xb3c>
    154c:	ldr	x0, [sp, #192]
    1550:	b	1410 <gconv@@Base+0xb58>
    1554:	adrp	x3, 1000 <gconv@@Base+0x748>
    1558:	add	x3, x3, #0x7e0
    155c:	adrp	x1, 1000 <gconv@@Base+0x748>
    1560:	adrp	x0, 1000 <gconv@@Base+0x748>
    1564:	add	x1, x1, #0x6a8
    1568:	add	x0, x0, #0x6e8
    156c:	mov	w2, #0x1c9                 	// #457
    1570:	bl	750 <__assert_fail@plt>
    1574:	stp	x27, x28, [sp, #80]
    1578:	bl	710 <__stack_chk_fail@plt>
    157c:	adrp	x3, 1000 <gconv@@Base+0x748>
    1580:	adrp	x1, 1000 <gconv@@Base+0x748>
    1584:	adrp	x0, 1000 <gconv@@Base+0x748>
    1588:	add	x3, x3, #0x7f8
    158c:	add	x1, x1, #0x6a8
    1590:	add	x0, x0, #0x710
    1594:	mov	w2, #0x1db                 	// #475
    1598:	bl	750 <__assert_fail@plt>
    159c:	adrp	x3, 1000 <gconv@@Base+0x748>
    15a0:	adrp	x1, 1000 <gconv@@Base+0x748>
    15a4:	adrp	x0, 1000 <gconv@@Base+0x748>
    15a8:	add	x3, x3, #0x810
    15ac:	add	x1, x1, #0x678
    15b0:	add	x0, x0, #0x690
    15b4:	mov	w2, #0x1a4                 	// #420
    15b8:	stp	x27, x28, [sp, #80]
    15bc:	bl	750 <__assert_fail@plt>
    15c0:	adrp	x3, 1000 <gconv@@Base+0x748>
    15c4:	add	x3, x3, #0x7e0
    15c8:	adrp	x1, 1000 <gconv@@Base+0x748>
    15cc:	adrp	x0, 1000 <gconv@@Base+0x748>
    15d0:	add	x1, x1, #0x6a8
    15d4:	add	x0, x0, #0x6b8
    15d8:	mov	w2, #0x18b                 	// #395
    15dc:	bl	750 <__assert_fail@plt>
    15e0:	adrp	x3, 1000 <gconv@@Base+0x748>
    15e4:	adrp	x1, 1000 <gconv@@Base+0x748>
    15e8:	adrp	x0, 1000 <gconv@@Base+0x748>
    15ec:	add	x3, x3, #0x810
    15f0:	add	x1, x1, #0x678
    15f4:	add	x0, x0, #0x690
    15f8:	mov	w2, #0x234                 	// #564
    15fc:	bl	750 <__assert_fail@plt>
    1600:	adrp	x3, 1000 <gconv@@Base+0x748>
    1604:	adrp	x1, 1000 <gconv@@Base+0x748>
    1608:	adrp	x0, 1000 <gconv@@Base+0x748>
    160c:	add	x3, x3, #0x7f8
    1610:	add	x1, x1, #0x6a8
    1614:	add	x0, x0, #0x760
    1618:	mov	w2, #0x1e6                 	// #486
    161c:	bl	750 <__assert_fail@plt>
    1620:	adrp	x3, 1000 <gconv@@Base+0x748>
    1624:	adrp	x1, 1000 <gconv@@Base+0x748>
    1628:	adrp	x0, 1000 <gconv@@Base+0x748>
    162c:	add	x3, x3, #0x7f8
    1630:	add	x1, x1, #0x6a8
    1634:	add	x0, x0, #0x738
    1638:	mov	w2, #0x1e5                 	// #485
    163c:	bl	750 <__assert_fail@plt>
    1640:	adrp	x3, 1000 <gconv@@Base+0x748>
    1644:	adrp	x1, 1000 <gconv@@Base+0x748>
    1648:	add	x3, x3, #0x7f8
    164c:	b	15cc <gconv@@Base+0xd14>
    1650:	adrp	x3, 1000 <gconv@@Base+0x748>
    1654:	adrp	x1, 1000 <gconv@@Base+0x748>
    1658:	add	x3, x3, #0x7f8
    165c:	b	1560 <gconv@@Base+0xca8>

Disassembly of section .fini:

0000000000001660 <.fini>:
    1660:	stp	x29, x30, [sp, #-16]!
    1664:	mov	x29, sp
    1668:	ldp	x29, x30, [sp], #16
    166c:	ret
