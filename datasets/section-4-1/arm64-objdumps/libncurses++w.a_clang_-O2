In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libncurses++w.a_clang_-O2:

cursesf.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN16NCursesFormFieldD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x9, 0 <_ZN16NCursesFormFieldD1Ev>
  10:	mov	x8, x0
  14:	ldr	x0, [x0, #8]
  18:	ldr	x9, [x9]
  1c:	add	x9, x9, #0x10
  20:	str	x9, [x8]
  24:	cbz	x0, 30 <_ZN16NCursesFormFieldD1Ev+0x30>
  28:	bl	0 <free_field>
  2c:	cbnz	w0, 3c <_ZN16NCursesFormFieldD1Ev+0x3c>
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	ret
  3c:	mov	w19, w0
  40:	mov	w0, #0x18                  	// #24
  44:	bl	0 <__cxa_allocate_exception>
  48:	adrp	x8, 0 <_ZN16NCursesFormFieldD1Ev>
  4c:	ldr	x8, [x8]
  50:	adrp	x9, 0 <_ZN16NCursesFormFieldD1Ev>
  54:	add	x9, x9, #0x0
  58:	str	w19, [x0, #16]
  5c:	add	x8, x8, #0x10
  60:	stp	x8, x9, [x0]
  64:	adrp	x1, 0 <_ZN16NCursesFormFieldD1Ev>
  68:	adrp	x2, 0 <_ZN16NCursesFormFieldD1Ev>
  6c:	ldr	x1, [x1]
  70:	ldr	x2, [x2]
  74:	bl	0 <__cxa_throw>
  78:	bl	0 <__cxa_call_unexpected>
  7c:	bl	0 <__cxa_call_unexpected>

0000000000000080 <_ZN16NCursesFormFieldD0Ev>:
  80:	stp	x29, x30, [sp, #-48]!
  84:	str	x21, [sp, #16]
  88:	stp	x20, x19, [sp, #32]
  8c:	mov	x29, sp
  90:	mov	x19, x0
  94:	bl	0 <_ZN16NCursesFormFieldD1Ev>
  98:	mov	x0, x19
  9c:	ldp	x20, x19, [sp, #32]
  a0:	ldr	x21, [sp, #16]
  a4:	ldp	x29, x30, [sp], #48
  a8:	b	0 <_ZdlPv>
  ac:	mov	x20, x0
  b0:	mov	x0, x19
  b4:	mov	x21, x1
  b8:	bl	0 <_ZdlPv>
  bc:	mov	x0, x20
  c0:	tbz	w21, #31, c8 <_ZN16NCursesFormFieldD0Ev+0x48>
  c4:	bl	0 <__cxa_call_unexpected>
  c8:	bl	0 <_Unwind_Resume>

00000000000000cc <_ZN11NCursesForm9mapFieldsEPP16NCursesFormField>:
  cc:	stp	x29, x30, [sp, #-48]!
  d0:	stp	x22, x21, [sp, #16]
  d4:	stp	x20, x19, [sp, #32]
  d8:	mov	x29, sp
  dc:	ldr	x8, [x1]
  e0:	mov	x20, x1
  e4:	mov	x19, x0
  e8:	ldr	x22, [x8, #8]
  ec:	mov	w8, #0x1                   	// #1
  f0:	cbz	x22, 108 <_ZN11NCursesForm9mapFieldsEPP16NCursesFormField+0x3c>
  f4:	ldr	x9, [x20, x8, lsl #3]
  f8:	add	x8, x8, #0x1
  fc:	ldr	x9, [x9, #8]
 100:	cbnz	x9, f4 <_ZN11NCursesForm9mapFieldsEPP16NCursesFormField+0x28>
 104:	sxtw	x8, w8
 108:	lsl	x9, x8, #3
 10c:	cmp	xzr, x8, lsr #61
 110:	csinv	x0, x9, xzr, eq  // eq = none
 114:	bl	0 <_Znam>
 118:	mov	x21, x0
 11c:	cbz	x22, 13c <_ZN11NCursesForm9mapFieldsEPP16NCursesFormField+0x70>
 120:	add	x9, x20, #0x8
 124:	mov	x8, x21
 128:	str	x22, [x8], #8
 12c:	ldr	x10, [x9], #8
 130:	ldr	x22, [x10, #8]
 134:	cbnz	x22, 128 <_ZN11NCursesForm9mapFieldsEPP16NCursesFormField+0x5c>
 138:	b	140 <_ZN11NCursesForm9mapFieldsEPP16NCursesFormField+0x74>
 13c:	mov	x8, x21
 140:	str	xzr, [x8]
 144:	ldr	x0, [x19, #56]
 148:	str	x20, [x19, #80]
 14c:	cbz	x0, 170 <_ZN11NCursesForm9mapFieldsEPP16NCursesFormField+0xa4>
 150:	bl	0 <form_fields>
 154:	cbz	x0, 170 <_ZN11NCursesForm9mapFieldsEPP16NCursesFormField+0xa4>
 158:	mov	x20, x0
 15c:	ldr	x0, [x19, #56]
 160:	mov	x1, xzr
 164:	bl	0 <set_form_fields>
 168:	mov	x0, x20
 16c:	bl	0 <_ZdaPv>
 170:	mov	x0, x21
 174:	ldp	x20, x19, [sp, #32]
 178:	ldp	x22, x21, [sp, #16]
 17c:	ldp	x29, x30, [sp], #48
 180:	ret

0000000000000184 <_ZN11NCursesForm20setDefaultAttributesEv>:
 184:	stp	x29, x30, [sp, #-64]!
 188:	stp	x24, x23, [sp, #16]
 18c:	stp	x22, x21, [sp, #32]
 190:	stp	x20, x19, [sp, #48]
 194:	mov	x29, sp
 198:	adrp	x8, 0 <_ZN18NCursesApplication6theAppE>
 19c:	ldr	x8, [x8]
 1a0:	mov	x20, x0
 1a4:	ldr	x0, [x0, #56]
 1a8:	ldr	x19, [x8]
 1ac:	bl	0 <field_count>
 1b0:	cmp	w0, #0x1
 1b4:	b.lt	2c0 <_ZN11NCursesForm20setDefaultAttributesEv+0x13c>  // b.tstop
 1b8:	mov	x21, xzr
 1bc:	mov	w22, w0
 1c0:	mov	w23, #0xa                   	// #10
 1c4:	b	1e4 <_ZN11NCursesForm20setDefaultAttributesEv+0x60>
 1c8:	ldr	x0, [x24, #8]
 1cc:	mov	w1, #0x5f                  	// #95
 1d0:	bl	0 <set_field_pad>
 1d4:	cbnz	w0, 36c <_ZN11NCursesForm20setDefaultAttributesEv+0x1e8>
 1d8:	add	x21, x21, #0x1
 1dc:	cmp	x22, x21
 1e0:	b.eq	2c0 <_ZN11NCursesForm20setDefaultAttributesEv+0x13c>  // b.none
 1e4:	ldr	x0, [x20, #56]
 1e8:	bl	0 <field_count>
 1ec:	cmp	x21, w0, sxtw
 1f0:	b.ge	330 <_ZN11NCursesForm20setDefaultAttributesEv+0x1ac>  // b.tcont
 1f4:	ldr	x8, [x20, #80]
 1f8:	ldr	x24, [x8, x21, lsl #3]
 1fc:	ldr	x0, [x24, #8]
 200:	bl	0 <field_opts>
 204:	bics	wzr, w23, w0
 208:	b.ne	25c <_ZN11NCursesForm20setDefaultAttributesEv+0xd8>  // b.any
 20c:	cbz	x19, 1c8 <_ZN11NCursesForm20setDefaultAttributesEv+0x44>
 210:	ldr	x8, [x19]
 214:	mov	x0, x19
 218:	ldr	x8, [x8, #72]
 21c:	blr	x8
 220:	ldr	x8, [x24, #8]
 224:	mov	w1, w0
 228:	mov	x0, x8
 22c:	bl	0 <set_field_fore>
 230:	cbnz	w0, 3a8 <_ZN11NCursesForm20setDefaultAttributesEv+0x224>
 234:	ldr	x8, [x19]
 238:	mov	x0, x19
 23c:	ldr	x8, [x8, #80]
 240:	blr	x8
 244:	ldr	x8, [x24, #8]
 248:	mov	w1, w0
 24c:	mov	x0, x8
 250:	bl	0 <set_field_back>
 254:	cbz	w0, 1c8 <_ZN11NCursesForm20setDefaultAttributesEv+0x44>
 258:	b	3e4 <_ZN11NCursesForm20setDefaultAttributesEv+0x260>
 25c:	cbz	x19, 1d8 <_ZN11NCursesForm20setDefaultAttributesEv+0x54>
 260:	ldr	x8, [x19]
 264:	mov	x0, x19
 268:	ldr	x8, [x8, #96]
 26c:	blr	x8
 270:	ldr	x8, [x24, #8]
 274:	mov	w1, w0
 278:	mov	x0, x8
 27c:	bl	0 <set_field_back>
 280:	cbz	w0, 1d8 <_ZN11NCursesForm20setDefaultAttributesEv+0x54>
 284:	mov	w19, w0
 288:	mov	w0, #0x18                  	// #24
 28c:	bl	0 <__cxa_allocate_exception>
 290:	adrp	x8, 0 <_ZN16NCursesFormFieldD1Ev>
 294:	ldr	x8, [x8]
 298:	adrp	x9, 0 <_ZN16NCursesFormFieldD1Ev>
 29c:	add	x9, x9, #0x0
 2a0:	str	w19, [x0, #16]
 2a4:	add	x8, x8, #0x10
 2a8:	stp	x8, x9, [x0]
 2ac:	adrp	x1, 0 <_ZN16NCursesFormFieldD1Ev>
 2b0:	adrp	x2, 0 <_ZN16NCursesFormFieldD1Ev>
 2b4:	ldr	x1, [x1]
 2b8:	ldr	x2, [x2]
 2bc:	bl	0 <__cxa_throw>
 2c0:	cbz	x19, 31c <_ZN11NCursesForm20setDefaultAttributesEv+0x198>
 2c4:	ldr	x8, [x19]
 2c8:	mov	x0, x19
 2cc:	ldr	x8, [x8, #104]
 2d0:	blr	x8
 2d4:	ldr	x8, [x20, #8]
 2d8:	orr	w1, w0, #0x20
 2dc:	mov	x0, x8
 2e0:	bl	0 <wbkgd>
 2e4:	ldr	x20, [x20, #64]
 2e8:	cbz	x20, 31c <_ZN11NCursesForm20setDefaultAttributesEv+0x198>
 2ec:	ldr	x8, [x19]
 2f0:	mov	x0, x19
 2f4:	ldr	x8, [x8, #104]
 2f8:	blr	x8
 2fc:	ldr	x8, [x20, #8]
 300:	ldp	x20, x19, [sp, #48]
 304:	ldp	x22, x21, [sp, #32]
 308:	ldp	x24, x23, [sp, #16]
 30c:	orr	w1, w0, #0x20
 310:	mov	x0, x8
 314:	ldp	x29, x30, [sp], #64
 318:	b	0 <wbkgd>
 31c:	ldp	x20, x19, [sp, #48]
 320:	ldp	x22, x21, [sp, #32]
 324:	ldp	x24, x23, [sp, #16]
 328:	ldp	x29, x30, [sp], #64
 32c:	ret
 330:	mov	w0, #0x18                  	// #24
 334:	bl	0 <__cxa_allocate_exception>
 338:	adrp	x8, 0 <_ZN16NCursesFormFieldD1Ev>
 33c:	ldr	x8, [x8]
 340:	adrp	x9, 0 <_ZN16NCursesFormFieldD1Ev>
 344:	add	x9, x9, #0x0
 348:	mov	w10, #0xfffffffe            	// #-2
 34c:	add	x8, x8, #0x10
 350:	stp	x8, x9, [x0]
 354:	str	w10, [x0, #16]
 358:	adrp	x1, 0 <_ZN16NCursesFormFieldD1Ev>
 35c:	adrp	x2, 0 <_ZN16NCursesFormFieldD1Ev>
 360:	ldr	x1, [x1]
 364:	ldr	x2, [x2]
 368:	bl	0 <__cxa_throw>
 36c:	mov	w19, w0
 370:	mov	w0, #0x18                  	// #24
 374:	bl	0 <__cxa_allocate_exception>
 378:	adrp	x8, 0 <_ZN16NCursesFormFieldD1Ev>
 37c:	ldr	x8, [x8]
 380:	adrp	x9, 0 <_ZN16NCursesFormFieldD1Ev>
 384:	add	x9, x9, #0x0
 388:	str	w19, [x0, #16]
 38c:	add	x8, x8, #0x10
 390:	stp	x8, x9, [x0]
 394:	adrp	x1, 0 <_ZN16NCursesFormFieldD1Ev>
 398:	adrp	x2, 0 <_ZN16NCursesFormFieldD1Ev>
 39c:	ldr	x1, [x1]
 3a0:	ldr	x2, [x2]
 3a4:	bl	0 <__cxa_throw>
 3a8:	mov	w19, w0
 3ac:	mov	w0, #0x18                  	// #24
 3b0:	bl	0 <__cxa_allocate_exception>
 3b4:	adrp	x8, 0 <_ZN16NCursesFormFieldD1Ev>
 3b8:	ldr	x8, [x8]
 3bc:	adrp	x9, 0 <_ZN16NCursesFormFieldD1Ev>
 3c0:	add	x9, x9, #0x0
 3c4:	str	w19, [x0, #16]
 3c8:	add	x8, x8, #0x10
 3cc:	stp	x8, x9, [x0]
 3d0:	adrp	x1, 0 <_ZN16NCursesFormFieldD1Ev>
 3d4:	adrp	x2, 0 <_ZN16NCursesFormFieldD1Ev>
 3d8:	ldr	x1, [x1]
 3dc:	ldr	x2, [x2]
 3e0:	bl	0 <__cxa_throw>
 3e4:	mov	w19, w0
 3e8:	mov	w0, #0x18                  	// #24
 3ec:	bl	0 <__cxa_allocate_exception>
 3f0:	adrp	x8, 0 <_ZN16NCursesFormFieldD1Ev>
 3f4:	ldr	x8, [x8]
 3f8:	adrp	x9, 0 <_ZN16NCursesFormFieldD1Ev>
 3fc:	add	x9, x9, #0x0
 400:	str	w19, [x0, #16]
 404:	add	x8, x8, #0x10
 408:	stp	x8, x9, [x0]
 40c:	adrp	x1, 0 <_ZN16NCursesFormFieldD1Ev>
 410:	adrp	x2, 0 <_ZN16NCursesFormFieldD1Ev>
 414:	ldr	x1, [x1]
 418:	ldr	x2, [x2]
 41c:	bl	0 <__cxa_throw>
 420:	bl	0 <__cxa_call_unexpected>
 424:	bl	0 <__cxa_call_unexpected>
 428:	bl	0 <__cxa_call_unexpected>
 42c:	bl	0 <__cxa_call_unexpected>
 430:	bl	0 <__cxa_call_unexpected>

0000000000000434 <_ZN11NCursesForm8InitFormEPP16NCursesFormFieldbb>:
 434:	stp	x29, x30, [sp, #-64]!
 438:	str	x23, [sp, #16]
 43c:	stp	x22, x21, [sp, #32]
 440:	stp	x20, x19, [sp, #48]
 444:	mov	x29, sp
 448:	mov	x19, x0
 44c:	ldr	x0, [x0, #8]
 450:	mov	x21, x1
 454:	mov	w1, #0x1                   	// #1
 458:	mov	w20, w2
 45c:	and	w22, w2, #0x1
 460:	and	w23, w3, #0x1
 464:	bl	0 <keypad>
 468:	ldr	x0, [x19, #8]
 46c:	mov	w1, #0x1                   	// #1
 470:	bl	0 <meta>
 474:	mov	x0, x19
 478:	mov	x1, x21
 47c:	strb	w22, [x19, #73]
 480:	strb	w23, [x19, #74]
 484:	str	xzr, [x19, #56]
 488:	bl	cc <_ZN11NCursesForm9mapFieldsEPP16NCursesFormField>
 48c:	bl	0 <new_form>
 490:	str	x0, [x19, #56]
 494:	cbz	x0, 648 <_ZN11NCursesForm8InitFormEPP16NCursesFormFieldbb+0x214>
 498:	mov	x21, x0
 49c:	mov	w0, #0x18                  	// #24
 4a0:	bl	0 <_Znwm>
 4a4:	mov	x1, x0
 4a8:	stp	xzr, x19, [x0]
 4ac:	str	x21, [x0, #16]
 4b0:	mov	x0, x21
 4b4:	bl	0 <set_form_userptr>
 4b8:	adrp	x1, 720 <_nc_xx_frm_init>
 4bc:	ldr	x0, [x19, #56]
 4c0:	ldr	x1, [x1]
 4c4:	bl	0 <set_form_init>
 4c8:	adrp	x1, 740 <_nc_xx_frm_term>
 4cc:	ldr	x0, [x19, #56]
 4d0:	ldr	x1, [x1]
 4d4:	bl	0 <set_form_term>
 4d8:	adrp	x1, 760 <_nc_xx_fld_init>
 4dc:	ldr	x0, [x19, #56]
 4e0:	ldr	x1, [x1]
 4e4:	bl	0 <set_field_init>
 4e8:	adrp	x1, 7a0 <_nc_xx_fld_term>
 4ec:	ldr	x0, [x19, #56]
 4f0:	ldr	x1, [x1]
 4f4:	bl	0 <set_field_term>
 4f8:	ldr	x0, [x19, #56]
 4fc:	add	x1, x29, #0x1c
 500:	add	x2, x29, #0x18
 504:	bl	0 <scale_form>
 508:	cbnz	w0, 684 <_ZN11NCursesForm8InitFormEPP16NCursesFormFieldbb+0x250>
 50c:	ldr	x0, [x19, #56]
 510:	ldr	x1, [x19, #8]
 514:	bl	0 <set_form_win>
 518:	tbz	w20, #0, 54c <_ZN11NCursesForm8InitFormEPP16NCursesFormFieldbb+0x118>
 51c:	ldr	x8, [x19, #8]
 520:	ldr	w20, [x29, #28]
 524:	cbz	x8, 558 <_ZN11NCursesForm8InitFormEPP16NCursesFormFieldbb+0x124>
 528:	ldrh	w9, [x8, #4]
 52c:	mov	w10, #0xfffe                	// #65534
 530:	cmp	w9, w10
 534:	csinv	w9, w9, wzr, ne  // ne = any
 538:	sxth	w9, w9
 53c:	sub	w9, w9, #0x1
 540:	cmp	w20, w9
 544:	b.le	564 <_ZN11NCursesForm8InitFormEPP16NCursesFormFieldbb+0x130>
 548:	b	60c <_ZN11NCursesForm8InitFormEPP16NCursesFormFieldbb+0x1d8>
 54c:	mov	w8, wzr
 550:	str	xzr, [x19, #64]
 554:	b	5c8 <_ZN11NCursesForm8InitFormEPP16NCursesFormFieldbb+0x194>
 558:	mov	w9, #0xfffffffe            	// #-2
 55c:	cmp	w20, w9
 560:	b.gt	60c <_ZN11NCursesForm8InitFormEPP16NCursesFormFieldbb+0x1d8>
 564:	ldr	w21, [x29, #24]
 568:	cbz	x8, 600 <_ZN11NCursesForm8InitFormEPP16NCursesFormFieldbb+0x1cc>
 56c:	ldrh	w8, [x8, #6]
 570:	mov	w9, #0xfffe                	// #65534
 574:	cmp	w8, w9
 578:	csinv	w8, w8, wzr, ne  // ne = any
 57c:	sxth	w8, w8
 580:	sub	w8, w8, #0x1
 584:	cmp	w21, w8
 588:	b.gt	60c <_ZN11NCursesForm8InitFormEPP16NCursesFormFieldbb+0x1d8>
 58c:	mov	w0, #0x30                  	// #48
 590:	bl	0 <_Znwm>
 594:	mov	x22, x0
 598:	mov	w4, #0x1                   	// #1
 59c:	mov	w5, #0x1                   	// #1
 5a0:	mov	w6, #0x72                  	// #114
 5a4:	mov	x1, x19
 5a8:	mov	w2, w20
 5ac:	mov	w3, w21
 5b0:	bl	0 <_ZN13NCursesWindowC1ERS_iiiic>
 5b4:	str	x22, [x19, #64]
 5b8:	ldr	x0, [x19, #56]
 5bc:	ldr	x1, [x22, #8]
 5c0:	bl	0 <set_form_sub>
 5c4:	mov	w8, #0x1                   	// #1
 5c8:	ldr	x0, [x19, #56]
 5cc:	mov	w1, #0x1                   	// #1
 5d0:	strb	w8, [x19, #72]
 5d4:	bl	0 <form_opts_on>
 5d8:	cbnz	w0, 6c0 <_ZN11NCursesForm8InitFormEPP16NCursesFormFieldbb+0x28c>
 5dc:	ldr	x8, [x19]
 5e0:	mov	x0, x19
 5e4:	ldr	x8, [x8, #96]
 5e8:	blr	x8
 5ec:	ldp	x20, x19, [sp, #48]
 5f0:	ldp	x22, x21, [sp, #32]
 5f4:	ldr	x23, [sp, #16]
 5f8:	ldp	x29, x30, [sp], #64
 5fc:	ret
 600:	mov	w8, #0xfffffffe            	// #-2
 604:	cmp	w21, w8
 608:	b.le	58c <_ZN11NCursesForm8InitFormEPP16NCursesFormFieldbb+0x158>
 60c:	mov	w0, #0x18                  	// #24
 610:	bl	0 <__cxa_allocate_exception>
 614:	adrp	x8, 0 <_ZN16NCursesFormFieldD1Ev>
 618:	ldr	x8, [x8]
 61c:	adrp	x9, 0 <_ZN16NCursesFormFieldD1Ev>
 620:	add	x9, x9, #0x0
 624:	mov	w10, #0xfffffffa            	// #-6
 628:	add	x8, x8, #0x10
 62c:	stp	x8, x9, [x0]
 630:	str	w10, [x0, #16]
 634:	adrp	x1, 0 <_ZN16NCursesFormFieldD1Ev>
 638:	adrp	x2, 0 <_ZN16NCursesFormFieldD1Ev>
 63c:	ldr	x1, [x1]
 640:	ldr	x2, [x2]
 644:	bl	0 <__cxa_throw>
 648:	mov	w0, #0x18                  	// #24
 64c:	bl	0 <__cxa_allocate_exception>
 650:	adrp	x8, 0 <_ZN16NCursesFormFieldD1Ev>
 654:	ldr	x8, [x8]
 658:	adrp	x9, 0 <_ZN16NCursesFormFieldD1Ev>
 65c:	add	x9, x9, #0x0
 660:	mov	w10, #0xffffffff            	// #-1
 664:	add	x8, x8, #0x10
 668:	stp	x8, x9, [x0]
 66c:	str	w10, [x0, #16]
 670:	adrp	x1, 0 <_ZN16NCursesFormFieldD1Ev>
 674:	adrp	x2, 0 <_ZN16NCursesFormFieldD1Ev>
 678:	ldr	x1, [x1]
 67c:	ldr	x2, [x2]
 680:	bl	0 <__cxa_throw>
 684:	mov	w21, w0
 688:	mov	w0, #0x18                  	// #24
 68c:	bl	0 <__cxa_allocate_exception>
 690:	adrp	x8, 0 <_ZN16NCursesFormFieldD1Ev>
 694:	ldr	x8, [x8]
 698:	adrp	x9, 0 <_ZN16NCursesFormFieldD1Ev>
 69c:	add	x9, x9, #0x0
 6a0:	str	w21, [x0, #16]
 6a4:	add	x8, x8, #0x10
 6a8:	stp	x8, x9, [x0]
 6ac:	adrp	x1, 0 <_ZN16NCursesFormFieldD1Ev>
 6b0:	adrp	x2, 0 <_ZN16NCursesFormFieldD1Ev>
 6b4:	ldr	x1, [x1]
 6b8:	ldr	x2, [x2]
 6bc:	bl	0 <__cxa_throw>
 6c0:	mov	w20, w0
 6c4:	mov	w0, #0x18                  	// #24
 6c8:	bl	0 <__cxa_allocate_exception>
 6cc:	adrp	x8, 0 <_ZN16NCursesFormFieldD1Ev>
 6d0:	ldr	x8, [x8]
 6d4:	adrp	x9, 0 <_ZN16NCursesFormFieldD1Ev>
 6d8:	add	x9, x9, #0x0
 6dc:	str	w20, [x0, #16]
 6e0:	add	x8, x8, #0x10
 6e4:	stp	x8, x9, [x0]
 6e8:	adrp	x1, 0 <_ZN16NCursesFormFieldD1Ev>
 6ec:	adrp	x2, 0 <_ZN16NCursesFormFieldD1Ev>
 6f0:	ldr	x1, [x1]
 6f4:	ldr	x2, [x2]
 6f8:	bl	0 <__cxa_throw>
 6fc:	bl	0 <__cxa_call_unexpected>
 700:	bl	0 <__cxa_call_unexpected>
 704:	bl	0 <__cxa_call_unexpected>
 708:	bl	0 <__cxa_call_unexpected>
 70c:	mov	x19, x0
 710:	mov	x0, x22
 714:	bl	0 <_ZdlPv>
 718:	mov	x0, x19
 71c:	bl	0 <_Unwind_Resume>

0000000000000720 <_nc_xx_frm_init>:
 720:	stp	x29, x30, [sp, #-16]!
 724:	mov	x29, sp
 728:	bl	0 <form_userptr>
 72c:	ldr	x0, [x0, #8]
 730:	ldr	x8, [x0]
 734:	ldr	x1, [x8, #104]
 738:	ldp	x29, x30, [sp], #16
 73c:	br	x1

0000000000000740 <_nc_xx_frm_term>:
 740:	stp	x29, x30, [sp, #-16]!
 744:	mov	x29, sp
 748:	bl	0 <form_userptr>
 74c:	ldr	x0, [x0, #8]
 750:	ldr	x8, [x0]
 754:	ldr	x1, [x8, #112]
 758:	ldp	x29, x30, [sp], #16
 75c:	br	x1

0000000000000760 <_nc_xx_fld_init>:
 760:	stp	x29, x30, [sp, #-32]!
 764:	stp	x20, x19, [sp, #16]
 768:	mov	x29, sp
 76c:	bl	0 <form_userptr>
 770:	ldr	x19, [x0, #8]
 774:	ldr	x0, [x19, #56]
 778:	ldr	x20, [x19, #80]
 77c:	bl	0 <current_field>
 780:	bl	0 <field_index>
 784:	ldr	x8, [x19]
 788:	ldr	x1, [x20, w0, sxtw #3]
 78c:	mov	x0, x19
 790:	ldp	x20, x19, [sp, #16]
 794:	ldr	x2, [x8, #120]
 798:	ldp	x29, x30, [sp], #32
 79c:	br	x2

00000000000007a0 <_nc_xx_fld_term>:
 7a0:	stp	x29, x30, [sp, #-32]!
 7a4:	stp	x20, x19, [sp, #16]
 7a8:	mov	x29, sp
 7ac:	bl	0 <form_userptr>
 7b0:	ldr	x19, [x0, #8]
 7b4:	ldr	x0, [x19, #56]
 7b8:	ldr	x20, [x19, #80]
 7bc:	bl	0 <current_field>
 7c0:	bl	0 <field_index>
 7c4:	ldr	x8, [x19]
 7c8:	ldr	x1, [x20, w0, sxtw #3]
 7cc:	mov	x0, x19
 7d0:	ldp	x20, x19, [sp, #16]
 7d4:	ldr	x2, [x8, #128]
 7d8:	ldp	x29, x30, [sp], #32
 7dc:	br	x2

00000000000007e0 <_ZN11NCursesFormD1Ev>:
 7e0:	stp	x29, x30, [sp, #-48]!
 7e4:	stp	x22, x21, [sp, #16]
 7e8:	stp	x20, x19, [sp, #32]
 7ec:	mov	x29, sp
 7f0:	adrp	x8, 20 <_ZN16NCursesFormFieldD1Ev+0x20>
 7f4:	mov	x19, x0
 7f8:	ldr	x0, [x0, #56]
 7fc:	ldr	x8, [x8]
 800:	add	x8, x8, #0x10
 804:	str	x8, [x19]
 808:	bl	0 <form_userptr>
 80c:	cbz	x0, 814 <_ZN11NCursesFormD1Ev+0x34>
 810:	bl	0 <_ZdlPv>
 814:	ldrb	w8, [x19, #72]
 818:	cbz	w8, 83c <_ZN11NCursesFormD1Ev+0x5c>
 81c:	ldr	x0, [x19, #64]
 820:	cbz	x0, 830 <_ZN11NCursesFormD1Ev+0x50>
 824:	ldr	x8, [x0]
 828:	ldr	x8, [x8, #16]
 82c:	blr	x8
 830:	ldr	x0, [x19, #56]
 834:	mov	x1, xzr
 838:	bl	0 <set_form_sub>
 83c:	ldr	x0, [x19, #56]
 840:	cbz	x0, 8cc <_ZN11NCursesFormD1Ev+0xec>
 844:	bl	0 <form_fields>
 848:	mov	x20, x0
 84c:	ldr	x0, [x19, #56]
 850:	bl	0 <field_count>
 854:	mov	w21, w0
 858:	ldr	x0, [x19, #56]
 85c:	mov	x1, xzr
 860:	bl	0 <set_form_fields>
 864:	cbnz	w0, 8e4 <_ZN11NCursesFormD1Ev+0x104>
 868:	ldrb	w8, [x19, #74]
 86c:	cbz	w8, 8b8 <_ZN11NCursesFormD1Ev+0xd8>
 870:	cmp	w21, #0x1
 874:	b.lt	8ac <_ZN11NCursesFormD1Ev+0xcc>  // b.tstop
 878:	mov	x22, xzr
 87c:	add	w21, w21, #0x1
 880:	b	890 <_ZN11NCursesFormD1Ev+0xb0>
 884:	add	x22, x22, #0x1
 888:	cmp	x21, x22
 88c:	b.eq	8ac <_ZN11NCursesFormD1Ev+0xcc>  // b.none
 890:	ldr	x8, [x19, #80]
 894:	ldr	x0, [x8, x22, lsl #3]
 898:	cbz	x0, 884 <_ZN11NCursesFormD1Ev+0xa4>
 89c:	ldr	x8, [x0]
 8a0:	ldr	x8, [x8, #8]
 8a4:	blr	x8
 8a8:	b	884 <_ZN11NCursesFormD1Ev+0xa4>
 8ac:	ldr	x0, [x19, #80]
 8b0:	cbz	x0, 8b8 <_ZN11NCursesFormD1Ev+0xd8>
 8b4:	bl	0 <_ZdaPv>
 8b8:	ldr	x0, [x19, #56]
 8bc:	bl	0 <free_form>
 8c0:	cbz	x20, 8cc <_ZN11NCursesFormD1Ev+0xec>
 8c4:	mov	x0, x20
 8c8:	bl	0 <_ZdaPv>
 8cc:	mov	x0, x19
 8d0:	bl	0 <_ZN12NCursesPanelD2Ev>
 8d4:	ldp	x20, x19, [sp, #32]
 8d8:	ldp	x22, x21, [sp, #16]
 8dc:	ldp	x29, x30, [sp], #48
 8e0:	ret
 8e4:	mov	w20, w0
 8e8:	mov	w0, #0x18                  	// #24
 8ec:	bl	0 <__cxa_allocate_exception>
 8f0:	adrp	x8, 0 <_ZN16NCursesFormFieldD1Ev>
 8f4:	ldr	x8, [x8]
 8f8:	adrp	x9, 0 <_ZN16NCursesFormFieldD1Ev>
 8fc:	add	x9, x9, #0x0
 900:	str	w20, [x0, #16]
 904:	add	x8, x8, #0x10
 908:	stp	x8, x9, [x0]
 90c:	adrp	x1, 0 <_ZN16NCursesFormFieldD1Ev>
 910:	adrp	x2, 0 <_ZN16NCursesFormFieldD1Ev>
 914:	ldr	x1, [x1]
 918:	ldr	x2, [x2]
 91c:	bl	0 <__cxa_throw>
 920:	mov	x21, x1
 924:	mov	x20, x0
 928:	tbz	w21, #31, 954 <_ZN11NCursesFormD1Ev+0x174>
 92c:	mov	x0, x20
 930:	bl	0 <__cxa_call_unexpected>
 934:	b	94c <_ZN11NCursesFormD1Ev+0x16c>
 938:	mov	x21, x1
 93c:	mov	x20, x0
 940:	b	95c <_ZN11NCursesFormD1Ev+0x17c>
 944:	b	94c <_ZN11NCursesFormD1Ev+0x16c>
 948:	b	94c <_ZN11NCursesFormD1Ev+0x16c>
 94c:	mov	x21, x1
 950:	mov	x20, x0
 954:	mov	x0, x19
 958:	bl	0 <_ZN12NCursesPanelD2Ev>
 95c:	mov	x0, x20
 960:	tbz	w21, #31, 968 <_ZN11NCursesFormD1Ev+0x188>
 964:	bl	0 <__cxa_call_unexpected>
 968:	bl	0 <_Unwind_Resume>
 96c:	bl	0 <_ZN16NCursesFormFieldD1Ev>

0000000000000970 <_ZN11NCursesFormD0Ev>:
 970:	stp	x29, x30, [sp, #-48]!
 974:	str	x21, [sp, #16]
 978:	stp	x20, x19, [sp, #32]
 97c:	mov	x29, sp
 980:	mov	x19, x0
 984:	bl	7e0 <_ZN11NCursesFormD1Ev>
 988:	mov	x0, x19
 98c:	ldp	x20, x19, [sp, #32]
 990:	ldr	x21, [sp, #16]
 994:	ldp	x29, x30, [sp], #48
 998:	b	0 <_ZdlPv>
 99c:	mov	x20, x0
 9a0:	mov	x0, x19
 9a4:	mov	x21, x1
 9a8:	bl	0 <_ZdlPv>
 9ac:	mov	x0, x20
 9b0:	tbz	w21, #31, 9b8 <_ZN11NCursesFormD0Ev+0x48>
 9b4:	bl	0 <__cxa_call_unexpected>
 9b8:	bl	0 <_Unwind_Resume>

00000000000009bc <_ZN11NCursesForm12setSubWindowER13NCursesWindow>:
 9bc:	stp	x29, x30, [sp, #-32]!
 9c0:	stp	x20, x19, [sp, #16]
 9c4:	mov	x29, sp
 9c8:	mov	x19, x1
 9cc:	mov	x20, x0
 9d0:	bl	0 <_ZN13NCursesWindow12isDescendantERS_>
 9d4:	tbz	w0, #0, a0c <_ZN11NCursesForm12setSubWindowER13NCursesWindow+0x50>
 9d8:	ldrb	w8, [x20, #72]
 9dc:	cbz	w8, 9f4 <_ZN11NCursesForm12setSubWindowER13NCursesWindow+0x38>
 9e0:	ldr	x0, [x20, #64]
 9e4:	cbz	x0, 9f4 <_ZN11NCursesForm12setSubWindowER13NCursesWindow+0x38>
 9e8:	ldr	x8, [x0]
 9ec:	ldr	x8, [x8, #16]
 9f0:	blr	x8
 9f4:	str	x19, [x20, #64]
 9f8:	ldr	x0, [x20, #56]
 9fc:	ldr	x1, [x19, #8]
 a00:	ldp	x20, x19, [sp, #16]
 a04:	ldp	x29, x30, [sp], #32
 a08:	b	0 <set_form_sub>
 a0c:	mov	w0, #0x18                  	// #24
 a10:	bl	0 <__cxa_allocate_exception>
 a14:	adrp	x8, 0 <_ZN16NCursesFormFieldD1Ev>
 a18:	ldr	x8, [x8]
 a1c:	adrp	x9, 0 <_ZN16NCursesFormFieldD1Ev>
 a20:	add	x9, x9, #0x0
 a24:	mov	w10, #0xffffffff            	// #-1
 a28:	add	x8, x8, #0x10
 a2c:	stp	x8, x9, [x0]
 a30:	str	w10, [x0, #16]
 a34:	adrp	x1, 0 <_ZN16NCursesFormFieldD1Ev>
 a38:	adrp	x2, 0 <_ZN16NCursesFormFieldD1Ev>
 a3c:	ldr	x1, [x1]
 a40:	ldr	x2, [x2]
 a44:	bl	0 <__cxa_throw>
 a48:	bl	0 <__cxa_call_unexpected>

0000000000000a4c <_ZN11NCursesForm12On_Form_InitEv>:
 a4c:	ret

0000000000000a50 <_ZN11NCursesForm19On_Form_TerminationEv>:
 a50:	ret

0000000000000a54 <_ZN11NCursesForm13On_Field_InitER16NCursesFormField>:
 a54:	ret

0000000000000a58 <_ZN11NCursesForm20On_Field_TerminationER16NCursesFormField>:
 a58:	ret

0000000000000a5c <_ZN11NCursesForm6driverEi>:
 a5c:	stp	x29, x30, [sp, #-32]!
 a60:	str	x19, [sp, #16]
 a64:	mov	x29, sp
 a68:	ldr	x0, [x0, #56]
 a6c:	bl	0 <form_driver>
 a70:	add	w8, w0, #0xd
 a74:	cmp	w8, #0xd
 a78:	b.hi	a9c <_ZN11NCursesForm6driverEi+0x40>  // b.pmore
 a7c:	mov	w9, #0x1                   	// #1
 a80:	lsl	w8, w9, w8
 a84:	mov	w9, #0x2023                	// #8227
 a88:	tst	w8, w9
 a8c:	b.eq	a9c <_ZN11NCursesForm6driverEi+0x40>  // b.none
 a90:	ldr	x19, [sp, #16]
 a94:	ldp	x29, x30, [sp], #32
 a98:	ret
 a9c:	mov	w19, w0
 aa0:	mov	w0, #0x18                  	// #24
 aa4:	bl	0 <__cxa_allocate_exception>
 aa8:	adrp	x8, 0 <_ZN16NCursesFormFieldD1Ev>
 aac:	ldr	x8, [x8]
 ab0:	adrp	x9, 0 <_ZN16NCursesFormFieldD1Ev>
 ab4:	add	x9, x9, #0x0
 ab8:	str	w19, [x0, #16]
 abc:	add	x8, x8, #0x10
 ac0:	stp	x8, x9, [x0]
 ac4:	adrp	x1, 0 <_ZN16NCursesFormFieldD1Ev>
 ac8:	adrp	x2, 0 <_ZN16NCursesFormFieldD1Ev>
 acc:	ldr	x1, [x1]
 ad0:	ldr	x2, [x2]
 ad4:	bl	0 <__cxa_throw>
 ad8:	bl	0 <__cxa_call_unexpected>

0000000000000adc <_ZNK11NCursesForm17On_Request_DeniedEi>:
 adc:	b	0 <beep>

0000000000000ae0 <_ZNK11NCursesForm16On_Invalid_FieldEi>:
 ae0:	b	0 <beep>

0000000000000ae4 <_ZNK11NCursesForm18On_Unknown_CommandEi>:
 ae4:	b	0 <beep>

0000000000000ae8 <_ZN11NCursesFormclEv>:
 ae8:	stp	x29, x30, [sp, #-48]!
 aec:	str	x21, [sp, #16]
 af0:	stp	x20, x19, [sp, #32]
 af4:	mov	x29, sp
 af8:	mov	x19, x0
 afc:	ldr	x0, [x0, #56]
 b00:	bl	0 <post_form>
 b04:	cbnz	w0, c80 <_ZN11NCursesFormclEv+0x198>
 b08:	ldr	x0, [x19, #48]
 b0c:	bl	0 <show_panel>
 b10:	cmn	w0, #0x1
 b14:	b.eq	cbc <_ZN11NCursesFormclEv+0x1d4>  // b.none
 b18:	ldr	x8, [x19]
 b1c:	mov	x0, x19
 b20:	ldr	x8, [x8, #32]
 b24:	blr	x8
 b28:	ldr	x8, [x19]
 b2c:	mov	x0, x19
 b30:	ldr	x8, [x8, #48]
 b34:	blr	x8
 b38:	ldr	x8, [x19]
 b3c:	mov	w20, w0
 b40:	mov	x0, x19
 b44:	mov	w1, w20
 b48:	ldr	x8, [x8, #136]
 b4c:	blr	x8
 b50:	cmp	w0, #0x280
 b54:	b.ne	ba8 <_ZN11NCursesFormclEv+0xc0>  // b.any
 b58:	ldr	x0, [x19, #56]
 b5c:	bl	0 <unpost_form>
 b60:	cbnz	w0, cf8 <_ZN11NCursesFormclEv+0x210>
 b64:	ldr	x0, [x19, #48]
 b68:	bl	0 <hide_panel>
 b6c:	cmn	w0, #0x1
 b70:	b.eq	d34 <_ZN11NCursesFormclEv+0x24c>  // b.none
 b74:	ldr	x8, [x19]
 b78:	mov	x0, x19
 b7c:	ldr	x8, [x8, #32]
 b80:	blr	x8
 b84:	ldr	x0, [x19, #56]
 b88:	ldr	x20, [x19, #80]
 b8c:	bl	0 <current_field>
 b90:	bl	0 <field_index>
 b94:	ldr	x0, [x20, w0, sxtw #3]
 b98:	ldp	x20, x19, [sp, #32]
 b9c:	ldr	x21, [sp, #16]
 ba0:	ldp	x29, x30, [sp], #48
 ba4:	ret
 ba8:	adrp	x21, 0 <_ZN16NCursesFormFieldD1Ev>
 bac:	mov	w1, w0
 bb0:	add	x21, x21, #0x0
 bb4:	b	c00 <_ZN11NCursesFormclEv+0x118>
 bb8:	ldr	x8, [x19]
 bbc:	ldr	x8, [x8, #168]
 bc0:	mov	x0, x19
 bc4:	mov	w1, w20
 bc8:	blr	x8
 bcc:	ldr	x8, [x19]
 bd0:	mov	x0, x19
 bd4:	ldr	x8, [x8, #48]
 bd8:	blr	x8
 bdc:	ldr	x8, [x19]
 be0:	mov	w20, w0
 be4:	mov	x0, x19
 be8:	mov	w1, w20
 bec:	ldr	x8, [x8, #136]
 bf0:	blr	x8
 bf4:	mov	w1, w0
 bf8:	cmp	w0, #0x280
 bfc:	b.eq	b58 <_ZN11NCursesFormclEv+0x70>  // b.none
 c00:	ldr	x8, [x19]
 c04:	mov	x0, x19
 c08:	ldr	x8, [x8, #88]
 c0c:	blr	x8
 c10:	add	w8, w0, #0xd
 c14:	cmp	w8, #0xd
 c18:	b.hi	c44 <_ZN11NCursesFormclEv+0x15c>  // b.pmore
 c1c:	adr	x9, bb8 <_ZN11NCursesFormclEv+0xd0>
 c20:	ldrb	w10, [x21, x8]
 c24:	add	x9, x9, x10, lsl #2
 c28:	br	x9
 c2c:	ldr	x8, [x19]
 c30:	ldr	x8, [x8, #160]
 c34:	b	bc0 <_ZN11NCursesFormclEv+0xd8>
 c38:	ldr	x8, [x19]
 c3c:	ldr	x8, [x8, #152]
 c40:	b	bc0 <_ZN11NCursesFormclEv+0xd8>
 c44:	mov	w19, w0
 c48:	mov	w0, #0x18                  	// #24
 c4c:	bl	0 <__cxa_allocate_exception>
 c50:	adrp	x8, 0 <_ZN16NCursesFormFieldD1Ev>
 c54:	ldr	x8, [x8]
 c58:	adrp	x9, 0 <_ZN16NCursesFormFieldD1Ev>
 c5c:	add	x9, x9, #0x0
 c60:	str	w19, [x0, #16]
 c64:	add	x8, x8, #0x10
 c68:	stp	x8, x9, [x0]
 c6c:	adrp	x1, 0 <_ZN16NCursesFormFieldD1Ev>
 c70:	adrp	x2, 0 <_ZN16NCursesFormFieldD1Ev>
 c74:	ldr	x1, [x1]
 c78:	ldr	x2, [x2]
 c7c:	bl	0 <__cxa_throw>
 c80:	mov	w20, w0
 c84:	mov	w0, #0x18                  	// #24
 c88:	bl	0 <__cxa_allocate_exception>
 c8c:	adrp	x8, 0 <_ZN16NCursesFormFieldD1Ev>
 c90:	ldr	x8, [x8]
 c94:	adrp	x9, 0 <_ZN16NCursesFormFieldD1Ev>
 c98:	add	x9, x9, #0x0
 c9c:	str	w20, [x0, #16]
 ca0:	add	x8, x8, #0x10
 ca4:	stp	x8, x9, [x0]
 ca8:	adrp	x1, 0 <_ZN16NCursesFormFieldD1Ev>
 cac:	adrp	x2, 0 <_ZN16NCursesFormFieldD1Ev>
 cb0:	ldr	x1, [x1]
 cb4:	ldr	x2, [x2]
 cb8:	bl	0 <__cxa_throw>
 cbc:	mov	w0, #0x18                  	// #24
 cc0:	bl	0 <__cxa_allocate_exception>
 cc4:	adrp	x8, 0 <_ZN16NCursesFormFieldD1Ev>
 cc8:	ldr	x8, [x8]
 ccc:	adrp	x9, 0 <_ZN16NCursesFormFieldD1Ev>
 cd0:	add	x9, x9, #0x0
 cd4:	mov	w10, #0xffffffff            	// #-1
 cd8:	add	x8, x8, #0x10
 cdc:	stp	x8, x9, [x0]
 ce0:	str	w10, [x0, #16]
 ce4:	adrp	x1, 0 <_ZN16NCursesFormFieldD1Ev>
 ce8:	adrp	x2, 0 <_ZN16NCursesFormFieldD1Ev>
 cec:	ldr	x1, [x1]
 cf0:	ldr	x2, [x2]
 cf4:	bl	0 <__cxa_throw>
 cf8:	mov	w20, w0
 cfc:	mov	w0, #0x18                  	// #24
 d00:	bl	0 <__cxa_allocate_exception>
 d04:	adrp	x8, 0 <_ZN16NCursesFormFieldD1Ev>
 d08:	ldr	x8, [x8]
 d0c:	adrp	x9, 0 <_ZN16NCursesFormFieldD1Ev>
 d10:	add	x9, x9, #0x0
 d14:	str	w20, [x0, #16]
 d18:	add	x8, x8, #0x10
 d1c:	stp	x8, x9, [x0]
 d20:	adrp	x1, 0 <_ZN16NCursesFormFieldD1Ev>
 d24:	adrp	x2, 0 <_ZN16NCursesFormFieldD1Ev>
 d28:	ldr	x1, [x1]
 d2c:	ldr	x2, [x2]
 d30:	bl	0 <__cxa_throw>
 d34:	mov	w0, #0x18                  	// #24
 d38:	bl	0 <__cxa_allocate_exception>
 d3c:	adrp	x8, 0 <_ZN16NCursesFormFieldD1Ev>
 d40:	ldr	x8, [x8]
 d44:	adrp	x9, 0 <_ZN16NCursesFormFieldD1Ev>
 d48:	add	x9, x9, #0x0
 d4c:	mov	w10, #0xffffffff            	// #-1
 d50:	add	x8, x8, #0x10
 d54:	stp	x8, x9, [x0]
 d58:	str	w10, [x0, #16]
 d5c:	adrp	x1, 0 <_ZN16NCursesFormFieldD1Ev>
 d60:	adrp	x2, 0 <_ZN16NCursesFormFieldD1Ev>
 d64:	ldr	x1, [x1]
 d68:	ldr	x2, [x2]
 d6c:	bl	0 <__cxa_throw>
 d70:	bl	0 <__cxa_call_unexpected>
 d74:	bl	0 <__cxa_call_unexpected>
 d78:	bl	0 <__cxa_call_unexpected>
 d7c:	bl	0 <__cxa_call_unexpected>
 d80:	bl	0 <__cxa_call_unexpected>

0000000000000d84 <_ZN11NCursesForm10virtualizeEi>:
 d84:	sub	w8, w1, #0x1
 d88:	cmp	w8, #0x106
 d8c:	b.hi	db4 <_ZN11NCursesForm10virtualizeEi+0x30>  // b.pmore
 d90:	adrp	x9, 0 <_ZN16NCursesFormFieldD1Ev>
 d94:	add	x9, x9, #0x0
 d98:	adr	x10, dac <_ZN11NCursesForm10virtualizeEi+0x28>
 d9c:	ldrb	w11, [x9, x8]
 da0:	add	x10, x10, x11, lsl #2
 da4:	mov	w0, #0x206                 	// #518
 da8:	br	x10
 dac:	mov	w0, #0x222                 	// #546
 db0:	ret
 db4:	sub	w8, w1, #0x14d
 db8:	cmp	w8, #0x1b
 dbc:	b.hi	ea0 <_ZN11NCursesForm10virtualizeEi+0x11c>  // b.pmore
 dc0:	adrp	x9, 0 <_ZN16NCursesFormFieldD1Ev>
 dc4:	add	x9, x9, #0x0
 dc8:	adr	x10, dd8 <_ZN11NCursesForm10virtualizeEi+0x54>
 dcc:	ldrb	w11, [x9, x8]
 dd0:	add	x10, x10, x11, lsl #2
 dd4:	br	x10
 dd8:	mov	w0, #0x227                 	// #551
 ddc:	ret
 de0:	mov	w0, #0x21e                 	// #542
 de4:	ret
 de8:	mov	w0, #0x216                 	// #534
 dec:	ret
 df0:	mov	w0, #0x205                 	// #517
 df4:	ret
 df8:	mov	w0, #0x20f                 	// #527
 dfc:	ret
 e00:	mov	w0, #0x217                 	// #535
 e04:	ret
 e08:	mov	w0, #0x204                 	// #516
 e0c:	ret
 e10:	mov	w0, #0x224                 	// #548
 e14:	ret
 e18:	mov	w0, #0x21f                 	// #543
 e1c:	ret
 e20:	mov	w0, #0x226                 	// #550
 e24:	ret
 e28:	mov	w0, #0x20c                 	// #524
 e2c:	ret
 e30:	mov	w0, #0x237                 	// #567
 e34:	ret
 e38:	mov	w0, #0x220                 	// #544
 e3c:	ret
 e40:	mov	w0, #0x238                 	// #568
 e44:	ret
 e48:	mov	w0, #0x20d                 	// #525
 e4c:	ret
 e50:	mov	w0, #0x215                 	// #533
 e54:	ret
 e58:	mov	w0, #0x20e                 	// #526
 e5c:	ret
 e60:	mov	w0, #0x221                 	// #545
 e64:	ret
 e68:	mov	w0, #0x214                 	// #532
 e6c:	ret
 e70:	mov	w0, #0x280                 	// #640
 e74:	ret
 e78:	mov	w0, #0x223                 	// #547
 e7c:	ret
 e80:	mov	w0, #0x21d                 	// #541
 e84:	ret
 e88:	mov	w0, #0x21c                 	// #540
 e8c:	ret
 e90:	mov	w0, #0x211                 	// #529
 e94:	ret
 e98:	mov	w0, #0x210                 	// #528
 e9c:	ret
 ea0:	mov	w0, w1
 ea4:	ret
 ea8:	mov	w0, #0x200                 	// #512
 eac:	ret
 eb0:	mov	w0, #0x201                 	// #513
 eb4:	ret
 eb8:	mov	w0, #0x207                 	// #519
 ebc:	ret

0000000000000ec0 <_nc_xx_fld_fcheck>:
 ec0:	ldr	x0, [x1, #16]
 ec4:	ldr	x8, [x0]
 ec8:	ldr	x2, [x8, #24]
 ecc:	br	x2

0000000000000ed0 <_nc_xx_fld_ccheck>:
 ed0:	ldr	x8, [x1, #16]
 ed4:	mov	w1, w0
 ed8:	ldr	x9, [x8]
 edc:	mov	x0, x8
 ee0:	ldr	x2, [x9, #32]
 ee4:	br	x2

0000000000000ee8 <_nc_xx_fld_makearg>:
 ee8:	ldrsw	x8, [x0, #24]
 eec:	tbz	w8, #31, f10 <_nc_xx_fld_makearg+0x28>
 ef0:	add	w9, w8, #0x8
 ef4:	cmn	w8, #0x8
 ef8:	str	w9, [x0, #24]
 efc:	b.gt	f10 <_nc_xx_fld_makearg+0x28>
 f00:	ldr	x9, [x0, #8]
 f04:	add	x8, x9, x8
 f08:	ldr	x0, [x8]
 f0c:	ret
 f10:	ldr	x8, [x0]
 f14:	add	x9, x8, #0x8
 f18:	str	x9, [x0]
 f1c:	ldr	x0, [x8]
 f20:	ret

0000000000000f24 <_nc_xx_next_choice>:
 f24:	ldr	x0, [x1, #16]
 f28:	ldr	x8, [x0]
 f2c:	ldr	x2, [x8, #40]
 f30:	br	x2

0000000000000f34 <_nc_xx_prev_choice>:
 f34:	ldr	x0, [x1, #16]
 f38:	ldr	x8, [x0]
 f3c:	ldr	x2, [x8, #48]
 f40:	br	x2

Disassembly of section .text.__clang_call_terminate:

0000000000000000 <__clang_call_terminate>:
   0:	str	x30, [sp, #-16]!
   4:	bl	0 <__cxa_begin_catch>
   8:	bl	0 <_ZSt9terminatev>

Disassembly of section .text._ZN12NCursesPanel5mvwinEii:

0000000000000000 <_ZN12NCursesPanel5mvwinEii>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x0, [x0, #48]
   c:	bl	0 <move_panel>
  10:	cmn	w0, #0x1
  14:	b.eq	24 <_ZN12NCursesPanel5mvwinEii+0x24>  // b.none
  18:	mov	w0, wzr
  1c:	ldp	x29, x30, [sp], #16
  20:	ret
  24:	mov	w0, #0x18                  	// #24
  28:	bl	0 <__cxa_allocate_exception>
  2c:	adrp	x8, 0 <_ZN12NCursesPanel5mvwinEii>
  30:	ldr	x8, [x8]
  34:	adrp	x9, 0 <_ZN12NCursesPanel5mvwinEii>
  38:	add	x9, x9, #0x0
  3c:	mov	w10, #0xffffffff            	// #-1
  40:	add	x8, x8, #0x10
  44:	stp	x8, x9, [x0]
  48:	str	w10, [x0, #16]
  4c:	adrp	x1, 0 <_ZN12NCursesPanel5mvwinEii>
  50:	adrp	x2, 0 <_ZN12NCursesPanel5mvwinEii>
  54:	ldr	x1, [x1]
  58:	ldr	x2, [x2]
  5c:	bl	0 <__cxa_throw>
  60:	bl	0 <__cxa_call_unexpected>

Disassembly of section .text._ZN11NCursesForm5frameEPKcS1_:

0000000000000000 <_ZN11NCursesForm5frameEPKcS1_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w8, [x0, #73]
   c:	cbz	w8, 18 <_ZN11NCursesForm5frameEPKcS1_+0x18>
  10:	ldp	x29, x30, [sp], #16
  14:	b	0 <_ZN12NCursesPanel5frameEPKcS1_>
  18:	mov	w0, #0x18                  	// #24
  1c:	bl	0 <__cxa_allocate_exception>
  20:	adrp	x8, 0 <_ZN11NCursesForm5frameEPKcS1_>
  24:	ldr	x8, [x8]
  28:	adrp	x9, 0 <_ZN11NCursesForm5frameEPKcS1_>
  2c:	add	x9, x9, #0x0
  30:	mov	w10, #0xffffffff            	// #-1
  34:	add	x8, x8, #0x10
  38:	stp	x8, x9, [x0]
  3c:	str	w10, [x0, #16]
  40:	adrp	x1, 0 <_ZN11NCursesForm5frameEPKcS1_>
  44:	adrp	x2, 0 <_ZN11NCursesForm5frameEPKcS1_>
  48:	ldr	x1, [x1]
  4c:	ldr	x2, [x2]
  50:	bl	0 <__cxa_throw>
  54:	bl	0 <__cxa_call_unexpected>

Disassembly of section .text._ZN11NCursesForm9boldframeEPKcS1_:

0000000000000000 <_ZN11NCursesForm9boldframeEPKcS1_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w8, [x0, #73]
   c:	cbz	w8, 18 <_ZN11NCursesForm9boldframeEPKcS1_+0x18>
  10:	ldp	x29, x30, [sp], #16
  14:	b	0 <_ZN12NCursesPanel9boldframeEPKcS1_>
  18:	mov	w0, #0x18                  	// #24
  1c:	bl	0 <__cxa_allocate_exception>
  20:	adrp	x8, 0 <_ZN11NCursesForm9boldframeEPKcS1_>
  24:	ldr	x8, [x8]
  28:	adrp	x9, 0 <_ZN11NCursesForm9boldframeEPKcS1_>
  2c:	add	x9, x9, #0x0
  30:	mov	w10, #0xffffffff            	// #-1
  34:	add	x8, x8, #0x10
  38:	stp	x8, x9, [x0]
  3c:	str	w10, [x0, #16]
  40:	adrp	x1, 0 <_ZN11NCursesForm9boldframeEPKcS1_>
  44:	adrp	x2, 0 <_ZN11NCursesForm9boldframeEPKcS1_>
  48:	ldr	x1, [x1]
  4c:	ldr	x2, [x2]
  50:	bl	0 <__cxa_throw>
  54:	bl	0 <__cxa_call_unexpected>

Disassembly of section .text._ZN11NCursesForm5labelEPKcS1_:

0000000000000000 <_ZN11NCursesForm5labelEPKcS1_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w8, [x0, #73]
   c:	cbz	w8, 18 <_ZN11NCursesForm5labelEPKcS1_+0x18>
  10:	ldp	x29, x30, [sp], #16
  14:	b	0 <_ZN12NCursesPanel5labelEPKcS1_>
  18:	mov	w0, #0x18                  	// #24
  1c:	bl	0 <__cxa_allocate_exception>
  20:	adrp	x8, 0 <_ZN11NCursesForm5labelEPKcS1_>
  24:	ldr	x8, [x8]
  28:	adrp	x9, 0 <_ZN11NCursesForm5labelEPKcS1_>
  2c:	add	x9, x9, #0x0
  30:	mov	w10, #0xffffffff            	// #-1
  34:	add	x8, x8, #0x10
  38:	stp	x8, x9, [x0]
  3c:	str	w10, [x0, #16]
  40:	adrp	x1, 0 <_ZN11NCursesForm5labelEPKcS1_>
  44:	adrp	x2, 0 <_ZN11NCursesForm5labelEPKcS1_>
  48:	ldr	x1, [x1]
  4c:	ldr	x2, [x2]
  50:	bl	0 <__cxa_throw>
  54:	bl	0 <__cxa_call_unexpected>

Disassembly of section .text._ZNK16NCursesException9classnameEv:

0000000000000000 <_ZNK16NCursesException9classnameEv>:
   0:	adrp	x0, 0 <_ZNK16NCursesException9classnameEv>
   4:	add	x0, x0, #0x0
   8:	ret

Disassembly of section .text._ZN16NCursesExceptionD0Ev:

0000000000000000 <_ZN16NCursesExceptionD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZN16NCursesExceptionD2Ev:

0000000000000000 <_ZN16NCursesExceptionD2Ev>:
   0:	ret

Disassembly of section .text.startup:

0000000000000000 <_GLOBAL__sub_I_cursesf.cc>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	adrp	x19, ec0 <_nc_xx_fld_fcheck>
  14:	adrp	x20, ed0 <_nc_xx_fld_ccheck>
  18:	ldr	x19, [x19]
  1c:	ldr	x20, [x20]
  20:	mov	x0, x19
  24:	mov	x1, x20
  28:	bl	0 <new_fieldtype>
  2c:	adrp	x21, 0 <_GLOBAL__sub_I_cursesf.cc>
  30:	ldr	x21, [x21]
  34:	mov	x1, x20
  38:	str	x0, [x21]
  3c:	mov	x0, x19
  40:	bl	0 <new_fieldtype>
  44:	adrp	x20, 8 <_GLOBAL__sub_I_cursesf.cc+0x8>
  48:	ldr	x20, [x20]
  4c:	str	x0, [x20]
  50:	mov	w0, #0x4                   	// #4
  54:	bl	0 <_Znwm>
  58:	ldr	x8, [x21]
  5c:	mov	x19, x0
  60:	str	wzr, [x0]
  64:	adrp	x1, ee8 <_nc_xx_fld_makearg>
  68:	ldr	x1, [x1]
  6c:	mov	x0, x8
  70:	mov	x2, xzr
  74:	mov	x3, xzr
  78:	bl	0 <set_fieldtype_arg>
  7c:	str	w0, [x19]
  80:	cbnz	w0, c0 <_GLOBAL__sub_I_cursesf.cc+0xc0>
  84:	ldr	x0, [x20]
  88:	adrp	x1, ee8 <_nc_xx_fld_makearg>
  8c:	ldr	x1, [x1]
  90:	mov	x2, xzr
  94:	mov	x3, xzr
  98:	bl	0 <set_fieldtype_arg>
  9c:	str	w0, [x19]
  a0:	cbnz	w0, c0 <_GLOBAL__sub_I_cursesf.cc+0xc0>
  a4:	ldr	x0, [x20]
  a8:	adrp	x1, f24 <_nc_xx_next_choice>
  ac:	adrp	x2, f34 <_nc_xx_prev_choice>
  b0:	ldr	x1, [x1]
  b4:	ldr	x2, [x2]
  b8:	bl	0 <set_fieldtype_choice>
  bc:	str	w0, [x19]
  c0:	adrp	x8, 10 <_GLOBAL__sub_I_cursesf.cc+0x10>
  c4:	ldr	x8, [x8]
  c8:	ldr	x21, [sp, #16]
  cc:	str	x19, [x8]
  d0:	ldp	x20, x19, [sp, #32]
  d4:	ldp	x29, x30, [sp], #48
  d8:	ret
  dc:	mov	x20, x0
  e0:	mov	x0, x19
  e4:	bl	0 <_ZdlPv>
  e8:	mov	x0, x20
  ec:	bl	0 <_Unwind_Resume>

cursesm.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN15NCursesMenuItemD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x9, 0 <_ZN15NCursesMenuItemD1Ev>
  10:	mov	x8, x0
  14:	ldr	x0, [x0, #8]
  18:	ldr	x9, [x9]
  1c:	add	x9, x9, #0x10
  20:	str	x9, [x8]
  24:	cbz	x0, 30 <_ZN15NCursesMenuItemD1Ev+0x30>
  28:	bl	0 <free_item>
  2c:	cbnz	w0, 3c <_ZN15NCursesMenuItemD1Ev+0x3c>
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	ret
  3c:	mov	w19, w0
  40:	mov	w0, #0x18                  	// #24
  44:	bl	0 <__cxa_allocate_exception>
  48:	adrp	x8, 0 <_ZN15NCursesMenuItemD1Ev>
  4c:	ldr	x8, [x8]
  50:	adrp	x9, 0 <_ZN15NCursesMenuItemD1Ev>
  54:	add	x9, x9, #0x0
  58:	str	w19, [x0, #16]
  5c:	add	x8, x8, #0x10
  60:	stp	x8, x9, [x0]
  64:	adrp	x1, 0 <_ZN15NCursesMenuItemD1Ev>
  68:	adrp	x2, 0 <_ZN15NCursesMenuItemD1Ev>
  6c:	ldr	x1, [x1]
  70:	ldr	x2, [x2]
  74:	bl	0 <__cxa_throw>
  78:	bl	0 <__cxa_call_unexpected>
  7c:	bl	0 <__cxa_call_unexpected>

0000000000000080 <_ZN15NCursesMenuItemD0Ev>:
  80:	stp	x29, x30, [sp, #-48]!
  84:	str	x21, [sp, #16]
  88:	stp	x20, x19, [sp, #32]
  8c:	mov	x29, sp
  90:	mov	x19, x0
  94:	bl	0 <_ZN15NCursesMenuItemD1Ev>
  98:	mov	x0, x19
  9c:	ldp	x20, x19, [sp, #32]
  a0:	ldr	x21, [sp, #16]
  a4:	ldp	x29, x30, [sp], #48
  a8:	b	0 <_ZdlPv>
  ac:	mov	x20, x0
  b0:	mov	x0, x19
  b4:	mov	x21, x1
  b8:	bl	0 <_ZdlPv>
  bc:	mov	x0, x20
  c0:	tbz	w21, #31, c8 <_ZN15NCursesMenuItemD0Ev+0x48>
  c4:	bl	0 <__cxa_call_unexpected>
  c8:	bl	0 <_Unwind_Resume>

00000000000000cc <_ZN15NCursesMenuItem6actionEv>:
  cc:	mov	w0, wzr
  d0:	ret

00000000000000d4 <_ZN23NCursesMenuCallbackItemD0Ev>:
  d4:	stp	x29, x30, [sp, #-48]!
  d8:	str	x21, [sp, #16]
  dc:	stp	x20, x19, [sp, #32]
  e0:	mov	x29, sp
  e4:	mov	x19, x0
  e8:	bl	0 <_ZN15NCursesMenuItemD1Ev>
  ec:	mov	x0, x19
  f0:	ldp	x20, x19, [sp, #32]
  f4:	ldr	x21, [sp, #16]
  f8:	ldp	x29, x30, [sp], #48
  fc:	b	0 <_ZdlPv>
 100:	mov	x20, x0
 104:	mov	x0, x19
 108:	mov	x21, x1
 10c:	bl	0 <_ZdlPv>
 110:	mov	x0, x20
 114:	tbz	w21, #31, 11c <_ZN23NCursesMenuCallbackItemD0Ev+0x48>
 118:	bl	0 <__cxa_call_unexpected>
 11c:	bl	0 <_Unwind_Resume>

0000000000000120 <_ZN23NCursesMenuCallbackItem6actionEv>:
 120:	ldr	x1, [x0, #16]
 124:	cbz	x1, 12c <_ZN23NCursesMenuCallbackItem6actionEv+0xc>
 128:	br	x1
 12c:	mov	w0, wzr
 130:	ret

0000000000000134 <_nc_xx_mnu_init>:
 134:	stp	x29, x30, [sp, #-16]!
 138:	mov	x29, sp
 13c:	bl	0 <menu_userptr>
 140:	ldr	x0, [x0, #8]
 144:	ldr	x8, [x0]
 148:	ldr	x1, [x8, #104]
 14c:	ldp	x29, x30, [sp], #16
 150:	br	x1

0000000000000154 <_nc_xx_mnu_term>:
 154:	stp	x29, x30, [sp, #-16]!
 158:	mov	x29, sp
 15c:	bl	0 <menu_userptr>
 160:	ldr	x0, [x0, #8]
 164:	ldr	x8, [x0]
 168:	ldr	x1, [x8, #112]
 16c:	ldp	x29, x30, [sp], #16
 170:	br	x1

0000000000000174 <_nc_xx_itm_init>:
 174:	stp	x29, x30, [sp, #-32]!
 178:	stp	x20, x19, [sp, #16]
 17c:	mov	x29, sp
 180:	bl	0 <menu_userptr>
 184:	ldr	x19, [x0, #8]
 188:	ldr	x0, [x19, #56]
 18c:	ldr	x20, [x19, #80]
 190:	bl	0 <current_item>
 194:	bl	0 <item_index>
 198:	ldr	x8, [x19]
 19c:	ldr	x1, [x20, w0, sxtw #3]
 1a0:	mov	x0, x19
 1a4:	ldp	x20, x19, [sp, #16]
 1a8:	ldr	x2, [x8, #120]
 1ac:	ldp	x29, x30, [sp], #32
 1b0:	br	x2

00000000000001b4 <_nc_xx_itm_term>:
 1b4:	stp	x29, x30, [sp, #-32]!
 1b8:	stp	x20, x19, [sp, #16]
 1bc:	mov	x29, sp
 1c0:	bl	0 <menu_userptr>
 1c4:	ldr	x19, [x0, #8]
 1c8:	ldr	x0, [x19, #56]
 1cc:	ldr	x20, [x19, #80]
 1d0:	bl	0 <current_item>
 1d4:	bl	0 <item_index>
 1d8:	ldr	x8, [x19]
 1dc:	ldr	x1, [x20, w0, sxtw #3]
 1e0:	mov	x0, x19
 1e4:	ldp	x20, x19, [sp, #16]
 1e8:	ldr	x2, [x8, #128]
 1ec:	ldp	x29, x30, [sp], #32
 1f0:	br	x2

00000000000001f4 <_ZN11NCursesMenu8mapItemsEPP15NCursesMenuItem>:
 1f4:	stp	x29, x30, [sp, #-48]!
 1f8:	stp	x22, x21, [sp, #16]
 1fc:	stp	x20, x19, [sp, #32]
 200:	mov	x29, sp
 204:	ldr	x8, [x1]
 208:	mov	x19, x1
 20c:	mov	x20, x0
 210:	ldr	x22, [x8, #8]
 214:	mov	w8, #0x1                   	// #1
 218:	cbz	x22, 230 <_ZN11NCursesMenu8mapItemsEPP15NCursesMenuItem+0x3c>
 21c:	ldr	x9, [x19, x8, lsl #3]
 220:	add	x8, x8, #0x1
 224:	ldr	x9, [x9, #8]
 228:	cbnz	x9, 21c <_ZN11NCursesMenu8mapItemsEPP15NCursesMenuItem+0x28>
 22c:	sxtw	x8, w8
 230:	lsl	x9, x8, #3
 234:	cmp	xzr, x8, lsr #61
 238:	csinv	x0, x9, xzr, eq  // eq = none
 23c:	bl	0 <_Znam>
 240:	mov	x21, x0
 244:	cbz	x22, 264 <_ZN11NCursesMenu8mapItemsEPP15NCursesMenuItem+0x70>
 248:	add	x9, x19, #0x8
 24c:	mov	x8, x21
 250:	str	x22, [x8], #8
 254:	ldr	x10, [x9], #8
 258:	ldr	x22, [x10, #8]
 25c:	cbnz	x22, 250 <_ZN11NCursesMenu8mapItemsEPP15NCursesMenuItem+0x5c>
 260:	b	268 <_ZN11NCursesMenu8mapItemsEPP15NCursesMenuItem+0x74>
 264:	mov	x8, x21
 268:	str	xzr, [x8]
 26c:	ldr	x0, [x20, #56]
 270:	str	x19, [x20, #80]
 274:	cbz	x0, 284 <_ZN11NCursesMenu8mapItemsEPP15NCursesMenuItem+0x90>
 278:	bl	0 <menu_items>
 27c:	cbz	x0, 284 <_ZN11NCursesMenu8mapItemsEPP15NCursesMenuItem+0x90>
 280:	bl	0 <_ZdaPv>
 284:	mov	x0, x21
 288:	ldp	x20, x19, [sp, #32]
 28c:	ldp	x22, x21, [sp, #16]
 290:	ldp	x29, x30, [sp], #48
 294:	ret

0000000000000298 <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb>:
 298:	sub	sp, sp, #0x50
 29c:	stp	x29, x30, [sp, #16]
 2a0:	stp	x24, x23, [sp, #32]
 2a4:	stp	x22, x21, [sp, #48]
 2a8:	stp	x20, x19, [sp, #64]
 2ac:	add	x29, sp, #0x10
 2b0:	mov	x19, x0
 2b4:	ldr	x0, [x0, #8]
 2b8:	mov	x21, x1
 2bc:	mov	w1, #0x1                   	// #1
 2c0:	mov	w20, w2
 2c4:	and	w22, w2, #0x1
 2c8:	and	w24, w3, #0x1
 2cc:	mov	w23, #0x1                   	// #1
 2d0:	bl	0 <keypad>
 2d4:	ldr	x0, [x19, #8]
 2d8:	mov	w1, #0x1                   	// #1
 2dc:	bl	0 <meta>
 2e0:	strb	w22, [x19, #73]
 2e4:	strb	w24, [x19, #74]
 2e8:	str	xzr, [x19, #56]
 2ec:	ldr	x8, [x21]
 2f0:	ldr	x22, [x8, #8]
 2f4:	cbz	x22, 310 <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb+0x78>
 2f8:	mov	w8, #0x1                   	// #1
 2fc:	ldr	x9, [x21, x8, lsl #3]
 300:	add	x8, x8, #0x1
 304:	ldr	x9, [x9, #8]
 308:	cbnz	x9, 2fc <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb+0x64>
 30c:	sxtw	x23, w8
 310:	lsl	x8, x23, #3
 314:	cmp	xzr, x23, lsr #61
 318:	csinv	x0, x8, xzr, eq  // eq = none
 31c:	bl	0 <_Znam>
 320:	cbz	x22, 340 <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb+0xa8>
 324:	add	x9, x21, #0x8
 328:	mov	x8, x0
 32c:	str	x22, [x8], #8
 330:	ldr	x10, [x9], #8
 334:	ldr	x22, [x10, #8]
 338:	cbnz	x22, 32c <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb+0x94>
 33c:	b	344 <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb+0xac>
 340:	mov	x8, x0
 344:	str	xzr, [x8]
 348:	str	x21, [x19, #80]
 34c:	bl	0 <new_menu>
 350:	str	x0, [x19, #56]
 354:	cbz	x0, 4fc <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb+0x264>
 358:	mov	x21, x0
 35c:	mov	w0, #0x18                  	// #24
 360:	bl	0 <_Znwm>
 364:	mov	x1, x0
 368:	stp	xzr, x19, [x0]
 36c:	str	x21, [x0, #16]
 370:	mov	x0, x21
 374:	bl	0 <set_menu_userptr>
 378:	adrp	x1, 134 <_nc_xx_mnu_init>
 37c:	ldr	x0, [x19, #56]
 380:	ldr	x1, [x1]
 384:	bl	0 <set_menu_init>
 388:	adrp	x1, 154 <_nc_xx_mnu_term>
 38c:	ldr	x0, [x19, #56]
 390:	ldr	x1, [x1]
 394:	bl	0 <set_menu_term>
 398:	adrp	x1, 174 <_nc_xx_itm_init>
 39c:	ldr	x0, [x19, #56]
 3a0:	ldr	x1, [x1]
 3a4:	bl	0 <set_item_init>
 3a8:	adrp	x1, 1b4 <_nc_xx_itm_term>
 3ac:	ldr	x0, [x19, #56]
 3b0:	ldr	x1, [x1]
 3b4:	bl	0 <set_item_term>
 3b8:	ldr	x0, [x19, #56]
 3bc:	sub	x1, x29, #0x4
 3c0:	add	x2, sp, #0x8
 3c4:	bl	0 <scale_menu>
 3c8:	cbnz	w0, 538 <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb+0x2a0>
 3cc:	ldr	x0, [x19, #56]
 3d0:	ldr	x1, [x19, #8]
 3d4:	bl	0 <set_menu_win>
 3d8:	tbz	w20, #0, 40c <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb+0x174>
 3dc:	ldr	x8, [x19, #8]
 3e0:	ldur	w20, [x29, #-4]
 3e4:	cbz	x8, 418 <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb+0x180>
 3e8:	ldrh	w9, [x8, #4]
 3ec:	mov	w10, #0xfffe                	// #65534
 3f0:	cmp	w9, w10
 3f4:	csinv	w9, w9, wzr, ne  // ne = any
 3f8:	sxth	w9, w9
 3fc:	sub	w9, w9, #0x1
 400:	cmp	w20, w9
 404:	b.le	424 <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb+0x18c>
 408:	b	4c0 <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb+0x228>
 40c:	mov	w8, wzr
 410:	str	xzr, [x19, #64]
 414:	b	488 <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb+0x1f0>
 418:	mov	w9, #0xfffffffe            	// #-2
 41c:	cmp	w20, w9
 420:	b.gt	4c0 <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb+0x228>
 424:	ldr	w21, [sp, #8]
 428:	cbz	x8, 4b4 <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb+0x21c>
 42c:	ldrh	w8, [x8, #6]
 430:	mov	w9, #0xfffe                	// #65534
 434:	cmp	w8, w9
 438:	csinv	w8, w8, wzr, ne  // ne = any
 43c:	sxth	w8, w8
 440:	sub	w8, w8, #0x1
 444:	cmp	w21, w8
 448:	b.gt	4c0 <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb+0x228>
 44c:	mov	w0, #0x30                  	// #48
 450:	bl	0 <_Znwm>
 454:	mov	x22, x0
 458:	mov	w4, #0x1                   	// #1
 45c:	mov	w5, #0x1                   	// #1
 460:	mov	w6, #0x72                  	// #114
 464:	mov	x1, x19
 468:	mov	w2, w20
 46c:	mov	w3, w21
 470:	bl	0 <_ZN13NCursesWindowC1ERS_iiiic>
 474:	str	x22, [x19, #64]
 478:	ldr	x0, [x19, #56]
 47c:	ldr	x1, [x22, #8]
 480:	bl	0 <set_menu_sub>
 484:	mov	w8, #0x1                   	// #1
 488:	ldr	x9, [x19]
 48c:	strb	w8, [x19, #72]
 490:	mov	x0, x19
 494:	ldr	x8, [x9, #96]
 498:	blr	x8
 49c:	ldp	x20, x19, [sp, #64]
 4a0:	ldp	x22, x21, [sp, #48]
 4a4:	ldp	x24, x23, [sp, #32]
 4a8:	ldp	x29, x30, [sp, #16]
 4ac:	add	sp, sp, #0x50
 4b0:	ret
 4b4:	mov	w8, #0xfffffffe            	// #-2
 4b8:	cmp	w21, w8
 4bc:	b.le	44c <_ZN11NCursesMenu8InitMenuEPP15NCursesMenuItembb+0x1b4>
 4c0:	mov	w0, #0x18                  	// #24
 4c4:	bl	0 <__cxa_allocate_exception>
 4c8:	adrp	x8, 0 <_ZN15NCursesMenuItemD1Ev>
 4cc:	ldr	x8, [x8]
 4d0:	adrp	x9, 0 <_ZN15NCursesMenuItemD1Ev>
 4d4:	add	x9, x9, #0x0
 4d8:	mov	w10, #0xfffffffa            	// #-6
 4dc:	add	x8, x8, #0x10
 4e0:	stp	x8, x9, [x0]
 4e4:	str	w10, [x0, #16]
 4e8:	adrp	x1, 0 <_ZN15NCursesMenuItemD1Ev>
 4ec:	adrp	x2, 0 <_ZN15NCursesMenuItemD1Ev>
 4f0:	ldr	x1, [x1]
 4f4:	ldr	x2, [x2]
 4f8:	bl	0 <__cxa_throw>
 4fc:	mov	w0, #0x18                  	// #24
 500:	bl	0 <__cxa_allocate_exception>
 504:	adrp	x8, 0 <_ZN15NCursesMenuItemD1Ev>
 508:	ldr	x8, [x8]
 50c:	adrp	x9, 0 <_ZN15NCursesMenuItemD1Ev>
 510:	add	x9, x9, #0x0
 514:	mov	w10, #0xffffffff            	// #-1
 518:	add	x8, x8, #0x10
 51c:	stp	x8, x9, [x0]
 520:	str	w10, [x0, #16]
 524:	adrp	x1, 0 <_ZN15NCursesMenuItemD1Ev>
 528:	adrp	x2, 0 <_ZN15NCursesMenuItemD1Ev>
 52c:	ldr	x1, [x1]
 530:	ldr	x2, [x2]
 534:	bl	0 <__cxa_throw>
 538:	mov	w21, w0
 53c:	mov	w0, #0x18                  	// #24
 540:	bl	0 <__cxa_allocate_exception>
 544:	adrp	x8, 0 <_ZN15NCursesMenuItemD1Ev>
 548:	ldr	x8, [x8]
 54c:	adrp	x9, 0 <_ZN15NCursesMenuItemD1Ev>
 550:	add	x9, x9, #0x0
 554:	str	w21, [x0, #16]
 558:	add	x8, x8, #0x10
 55c:	stp	x8, x9, [x0]
 560:	adrp	x1, 0 <_ZN15NCursesMenuItemD1Ev>
 564:	adrp	x2, 0 <_ZN15NCursesMenuItemD1Ev>
 568:	ldr	x1, [x1]
 56c:	ldr	x2, [x2]
 570:	bl	0 <__cxa_throw>
 574:	bl	0 <__cxa_call_unexpected>
 578:	bl	0 <__cxa_call_unexpected>
 57c:	bl	0 <__cxa_call_unexpected>
 580:	mov	x19, x0
 584:	mov	x0, x22
 588:	bl	0 <_ZdlPv>
 58c:	mov	x0, x19
 590:	bl	0 <_Unwind_Resume>

0000000000000594 <_ZN11NCursesMenu20setDefaultAttributesEv>:
 594:	stp	x29, x30, [sp, #-48]!
 598:	str	x21, [sp, #16]
 59c:	stp	x20, x19, [sp, #32]
 5a0:	mov	x29, sp
 5a4:	adrp	x8, 0 <_ZN18NCursesApplication6theAppE>
 5a8:	ldr	x8, [x8]
 5ac:	ldr	x19, [x8]
 5b0:	cbz	x19, 624 <_ZN11NCursesMenu20setDefaultAttributesEv+0x90>
 5b4:	ldr	x8, [x19]
 5b8:	ldr	x21, [x0, #56]
 5bc:	mov	x20, x0
 5c0:	mov	x0, x19
 5c4:	ldr	x8, [x8, #72]
 5c8:	blr	x8
 5cc:	mov	w1, w0
 5d0:	mov	x0, x21
 5d4:	bl	0 <set_menu_fore>
 5d8:	ldr	x8, [x19]
 5dc:	ldr	x21, [x20, #56]
 5e0:	mov	x0, x19
 5e4:	ldr	x8, [x8, #80]
 5e8:	blr	x8
 5ec:	mov	w1, w0
 5f0:	mov	x0, x21
 5f4:	bl	0 <set_menu_back>
 5f8:	ldr	x8, [x19]
 5fc:	ldr	x20, [x20, #56]
 600:	mov	x0, x19
 604:	ldr	x8, [x8, #88]
 608:	blr	x8
 60c:	mov	w1, w0
 610:	mov	x0, x20
 614:	ldp	x20, x19, [sp, #32]
 618:	ldr	x21, [sp, #16]
 61c:	ldp	x29, x30, [sp], #48
 620:	b	0 <set_menu_grey>
 624:	ldp	x20, x19, [sp, #32]
 628:	ldr	x21, [sp, #16]
 62c:	ldp	x29, x30, [sp], #48
 630:	ret

0000000000000634 <_ZN11NCursesMenuD1Ev>:
 634:	stp	x29, x30, [sp, #-48]!
 638:	stp	x22, x21, [sp, #16]
 63c:	stp	x20, x19, [sp, #32]
 640:	mov	x29, sp
 644:	adrp	x8, 28 <_ZN15NCursesMenuItemD1Ev+0x28>
 648:	mov	x19, x0
 64c:	ldr	x0, [x0, #56]
 650:	ldr	x8, [x8]
 654:	add	x8, x8, #0x10
 658:	str	x8, [x19]
 65c:	bl	0 <menu_userptr>
 660:	cbz	x0, 668 <_ZN11NCursesMenuD1Ev+0x34>
 664:	bl	0 <_ZdlPv>
 668:	ldrb	w8, [x19, #72]
 66c:	cbz	w8, 690 <_ZN11NCursesMenuD1Ev+0x5c>
 670:	ldr	x0, [x19, #56]
 674:	mov	x1, xzr
 678:	bl	0 <set_menu_sub>
 67c:	ldr	x0, [x19, #64]
 680:	cbz	x0, 690 <_ZN11NCursesMenuD1Ev+0x5c>
 684:	ldr	x8, [x0]
 688:	ldr	x8, [x8, #16]
 68c:	blr	x8
 690:	ldr	x0, [x19, #56]
 694:	cbz	x0, 720 <_ZN11NCursesMenuD1Ev+0xec>
 698:	bl	0 <menu_items>
 69c:	mov	x20, x0
 6a0:	ldr	x0, [x19, #56]
 6a4:	bl	0 <item_count>
 6a8:	mov	w21, w0
 6ac:	ldr	x0, [x19, #56]
 6b0:	mov	x1, xzr
 6b4:	bl	0 <set_menu_items>
 6b8:	cbnz	w0, 738 <_ZN11NCursesMenuD1Ev+0x104>
 6bc:	ldrb	w8, [x19, #74]
 6c0:	cbz	w8, 70c <_ZN11NCursesMenuD1Ev+0xd8>
 6c4:	cmp	w21, #0x1
 6c8:	b.lt	700 <_ZN11NCursesMenuD1Ev+0xcc>  // b.tstop
 6cc:	mov	x22, xzr
 6d0:	add	w21, w21, #0x1
 6d4:	b	6e4 <_ZN11NCursesMenuD1Ev+0xb0>
 6d8:	add	x22, x22, #0x1
 6dc:	cmp	x21, x22
 6e0:	b.eq	700 <_ZN11NCursesMenuD1Ev+0xcc>  // b.none
 6e4:	ldr	x8, [x19, #80]
 6e8:	ldr	x0, [x8, x22, lsl #3]
 6ec:	cbz	x0, 6d8 <_ZN11NCursesMenuD1Ev+0xa4>
 6f0:	ldr	x8, [x0]
 6f4:	ldr	x8, [x8, #8]
 6f8:	blr	x8
 6fc:	b	6d8 <_ZN11NCursesMenuD1Ev+0xa4>
 700:	ldr	x0, [x19, #80]
 704:	cbz	x0, 70c <_ZN11NCursesMenuD1Ev+0xd8>
 708:	bl	0 <_ZdaPv>
 70c:	ldr	x0, [x19, #56]
 710:	bl	0 <free_menu>
 714:	cbz	x20, 720 <_ZN11NCursesMenuD1Ev+0xec>
 718:	mov	x0, x20
 71c:	bl	0 <_ZdaPv>
 720:	mov	x0, x19
 724:	bl	0 <_ZN12NCursesPanelD2Ev>
 728:	ldp	x20, x19, [sp, #32]
 72c:	ldp	x22, x21, [sp, #16]
 730:	ldp	x29, x30, [sp], #48
 734:	ret
 738:	mov	w20, w0
 73c:	mov	w0, #0x18                  	// #24
 740:	bl	0 <__cxa_allocate_exception>
 744:	adrp	x8, 0 <_ZN15NCursesMenuItemD1Ev>
 748:	ldr	x8, [x8]
 74c:	adrp	x9, 0 <_ZN15NCursesMenuItemD1Ev>
 750:	add	x9, x9, #0x0
 754:	str	w20, [x0, #16]
 758:	add	x8, x8, #0x10
 75c:	stp	x8, x9, [x0]
 760:	adrp	x1, 0 <_ZN15NCursesMenuItemD1Ev>
 764:	adrp	x2, 0 <_ZN15NCursesMenuItemD1Ev>
 768:	ldr	x1, [x1]
 76c:	ldr	x2, [x2]
 770:	bl	0 <__cxa_throw>
 774:	mov	x21, x1
 778:	mov	x20, x0
 77c:	tbz	w21, #31, 7a8 <_ZN11NCursesMenuD1Ev+0x174>
 780:	mov	x0, x20
 784:	bl	0 <__cxa_call_unexpected>
 788:	b	7a0 <_ZN11NCursesMenuD1Ev+0x16c>
 78c:	mov	x21, x1
 790:	mov	x20, x0
 794:	b	7b0 <_ZN11NCursesMenuD1Ev+0x17c>
 798:	b	7a0 <_ZN11NCursesMenuD1Ev+0x16c>
 79c:	b	7a0 <_ZN11NCursesMenuD1Ev+0x16c>
 7a0:	mov	x21, x1
 7a4:	mov	x20, x0
 7a8:	mov	x0, x19
 7ac:	bl	0 <_ZN12NCursesPanelD2Ev>
 7b0:	mov	x0, x20
 7b4:	tbz	w21, #31, 7bc <_ZN11NCursesMenuD1Ev+0x188>
 7b8:	bl	0 <__cxa_call_unexpected>
 7bc:	bl	0 <_Unwind_Resume>
 7c0:	bl	0 <_ZN15NCursesMenuItemD1Ev>

00000000000007c4 <_ZN11NCursesMenuD0Ev>:
 7c4:	stp	x29, x30, [sp, #-48]!
 7c8:	str	x21, [sp, #16]
 7cc:	stp	x20, x19, [sp, #32]
 7d0:	mov	x29, sp
 7d4:	mov	x19, x0
 7d8:	bl	634 <_ZN11NCursesMenuD1Ev>
 7dc:	mov	x0, x19
 7e0:	ldp	x20, x19, [sp, #32]
 7e4:	ldr	x21, [sp, #16]
 7e8:	ldp	x29, x30, [sp], #48
 7ec:	b	0 <_ZdlPv>
 7f0:	mov	x20, x0
 7f4:	mov	x0, x19
 7f8:	mov	x21, x1
 7fc:	bl	0 <_ZdlPv>
 800:	mov	x0, x20
 804:	tbz	w21, #31, 80c <_ZN11NCursesMenuD0Ev+0x48>
 808:	bl	0 <__cxa_call_unexpected>
 80c:	bl	0 <_Unwind_Resume>

0000000000000810 <_ZN11NCursesMenu12setSubWindowER13NCursesWindow>:
 810:	stp	x29, x30, [sp, #-32]!
 814:	stp	x20, x19, [sp, #16]
 818:	mov	x29, sp
 81c:	mov	x19, x1
 820:	mov	x20, x0
 824:	bl	0 <_ZN13NCursesWindow12isDescendantERS_>
 828:	tbz	w0, #0, 860 <_ZN11NCursesMenu12setSubWindowER13NCursesWindow+0x50>
 82c:	ldrb	w8, [x20, #72]
 830:	cbz	w8, 848 <_ZN11NCursesMenu12setSubWindowER13NCursesWindow+0x38>
 834:	ldr	x0, [x20, #64]
 838:	cbz	x0, 848 <_ZN11NCursesMenu12setSubWindowER13NCursesWindow+0x38>
 83c:	ldr	x8, [x0]
 840:	ldr	x8, [x8, #16]
 844:	blr	x8
 848:	str	x19, [x20, #64]
 84c:	ldr	x0, [x20, #56]
 850:	ldr	x1, [x19, #8]
 854:	ldp	x20, x19, [sp, #16]
 858:	ldp	x29, x30, [sp], #32
 85c:	b	0 <set_menu_sub>
 860:	mov	w0, #0x18                  	// #24
 864:	bl	0 <__cxa_allocate_exception>
 868:	adrp	x8, 0 <_ZN15NCursesMenuItemD1Ev>
 86c:	ldr	x8, [x8]
 870:	adrp	x9, 0 <_ZN15NCursesMenuItemD1Ev>
 874:	add	x9, x9, #0x0
 878:	mov	w10, #0xffffffff            	// #-1
 87c:	add	x8, x8, #0x10
 880:	stp	x8, x9, [x0]
 884:	str	w10, [x0, #16]
 888:	adrp	x1, 0 <_ZN15NCursesMenuItemD1Ev>
 88c:	adrp	x2, 0 <_ZN15NCursesMenuItemD1Ev>
 890:	ldr	x1, [x1]
 894:	ldr	x2, [x2]
 898:	bl	0 <__cxa_throw>
 89c:	bl	0 <__cxa_call_unexpected>

00000000000008a0 <_ZN11NCursesMenu11set_patternEPKc>:
 8a0:	stp	x29, x30, [sp, #-32]!
 8a4:	str	x19, [sp, #16]
 8a8:	mov	x29, sp
 8ac:	ldr	x0, [x0, #56]
 8b0:	bl	0 <set_menu_pattern>
 8b4:	cmn	w0, #0x9
 8b8:	b.eq	8c8 <_ZN11NCursesMenu11set_patternEPKc+0x28>  // b.none
 8bc:	cbnz	w0, 8d8 <_ZN11NCursesMenu11set_patternEPKc+0x38>
 8c0:	mov	w0, #0x1                   	// #1
 8c4:	b	8cc <_ZN11NCursesMenu11set_patternEPKc+0x2c>
 8c8:	mov	w0, wzr
 8cc:	ldr	x19, [sp, #16]
 8d0:	ldp	x29, x30, [sp], #32
 8d4:	ret
 8d8:	mov	w19, w0
 8dc:	mov	w0, #0x18                  	// #24
 8e0:	bl	0 <__cxa_allocate_exception>
 8e4:	adrp	x8, 0 <_ZN15NCursesMenuItemD1Ev>
 8e8:	ldr	x8, [x8]
 8ec:	adrp	x9, 0 <_ZN15NCursesMenuItemD1Ev>
 8f0:	add	x9, x9, #0x0
 8f4:	str	w19, [x0, #16]
 8f8:	add	x8, x8, #0x10
 8fc:	stp	x8, x9, [x0]
 900:	adrp	x1, 0 <_ZN15NCursesMenuItemD1Ev>
 904:	adrp	x2, 0 <_ZN15NCursesMenuItemD1Ev>
 908:	ldr	x1, [x1]
 90c:	ldr	x2, [x2]
 910:	bl	0 <__cxa_throw>
 914:	bl	0 <__cxa_call_unexpected>

0000000000000918 <_ZN11NCursesMenu6driverEi>:
 918:	stp	x29, x30, [sp, #-32]!
 91c:	str	x19, [sp, #16]
 920:	mov	x29, sp
 924:	ldr	x0, [x0, #56]
 928:	bl	0 <menu_driver>
 92c:	add	w8, w0, #0xc
 930:	cmp	w8, #0xc
 934:	b.hi	958 <_ZN11NCursesMenu6driverEi+0x40>  // b.pmore
 938:	mov	w9, #0x1                   	// #1
 93c:	lsl	w8, w9, w8
 940:	mov	w9, #0x101d                	// #4125
 944:	tst	w8, w9
 948:	b.eq	958 <_ZN11NCursesMenu6driverEi+0x40>  // b.none
 94c:	ldr	x19, [sp, #16]
 950:	ldp	x29, x30, [sp], #32
 954:	ret
 958:	mov	w19, w0
 95c:	mov	w0, #0x18                  	// #24
 960:	bl	0 <__cxa_allocate_exception>
 964:	adrp	x8, 0 <_ZN15NCursesMenuItemD1Ev>
 968:	ldr	x8, [x8]
 96c:	adrp	x9, 0 <_ZN15NCursesMenuItemD1Ev>
 970:	add	x9, x9, #0x0
 974:	str	w19, [x0, #16]
 978:	add	x8, x8, #0x10
 97c:	stp	x8, x9, [x0]
 980:	adrp	x1, 0 <_ZN15NCursesMenuItemD1Ev>
 984:	adrp	x2, 0 <_ZN15NCursesMenuItemD1Ev>
 988:	ldr	x1, [x1]
 98c:	ldr	x2, [x2]
 990:	bl	0 <__cxa_throw>
 994:	bl	0 <__cxa_call_unexpected>

0000000000000998 <_ZN11NCursesMenu10virtualizeEi>:
 998:	cmp	w1, #0x101
 99c:	b.gt	9d0 <_ZN11NCursesMenu10virtualizeEi+0x38>
 9a0:	sub	w8, w1, #0x1
 9a4:	cmp	w8, #0x18
 9a8:	b.hi	a9c <_ZN11NCursesMenu10virtualizeEi+0x104>  // b.pmore
 9ac:	adrp	x9, 0 <_ZN15NCursesMenuItemD1Ev>
 9b0:	add	x9, x9, #0x0
 9b4:	adr	x10, 9c8 <_ZN11NCursesMenu10virtualizeEi+0x30>
 9b8:	ldrb	w11, [x9, x8]
 9bc:	add	x10, x10, x11, lsl #2
 9c0:	mov	w0, #0x280                 	// #640
 9c4:	br	x10
 9c8:	mov	w0, #0x281                 	// #641
 9cc:	ret
 9d0:	cmp	w1, #0x151
 9d4:	b.gt	a04 <_ZN11NCursesMenu10virtualizeEi+0x6c>
 9d8:	sub	w8, w1, #0x102
 9dc:	cmp	w8, #0x5
 9e0:	b.hi	a9c <_ZN11NCursesMenu10virtualizeEi+0x104>  // b.pmore
 9e4:	adrp	x9, 0 <_ZN15NCursesMenuItemD1Ev>
 9e8:	add	x9, x9, #0x0
 9ec:	adr	x10, 9fc <_ZN11NCursesMenu10virtualizeEi+0x64>
 9f0:	ldrb	w11, [x9, x8]
 9f4:	add	x10, x10, x11, lsl #2
 9f8:	br	x10
 9fc:	mov	w0, #0x203                 	// #515
 a00:	ret
 a04:	cmp	w1, #0x152
 a08:	b.eq	a2c <_ZN11NCursesMenu10virtualizeEi+0x94>  // b.none
 a0c:	cmp	w1, #0x153
 a10:	b.eq	a34 <_ZN11NCursesMenu10virtualizeEi+0x9c>  // b.none
 a14:	cmp	w1, #0x168
 a18:	b.ne	a9c <_ZN11NCursesMenu10virtualizeEi+0x104>  // b.any
 a1c:	mov	w0, #0x209                 	// #521
 a20:	ret
 a24:	mov	w0, #0x20e                 	// #526
 a28:	ret
 a2c:	mov	w0, #0x206                 	// #518
 a30:	ret
 a34:	mov	w0, #0x207                 	// #519
 a38:	ret
 a3c:	mov	w0, #0x20f                 	// #527
 a40:	ret
 a44:	mov	w0, #0x205                 	// #517
 a48:	ret
 a4c:	mov	w0, #0x210                 	// #528
 a50:	ret
 a54:	mov	w0, #0x20a                 	// #522
 a58:	ret
 a5c:	mov	w0, #0x20b                 	// #523
 a60:	ret
 a64:	mov	w0, #0x20c                 	// #524
 a68:	ret
 a6c:	mov	w0, #0x204                 	// #516
 a70:	ret
 a74:	mov	w0, #0x20d                 	// #525
 a78:	ret
 a7c:	mov	w0, #0x202                 	// #514
 a80:	ret
 a84:	mov	w0, #0x200                 	// #512
 a88:	ret
 a8c:	mov	w0, #0x201                 	// #513
 a90:	ret
 a94:	mov	w0, #0x208                 	// #520
 a98:	ret
 a9c:	mov	w0, w1
 aa0:	ret

0000000000000aa4 <_ZN11NCursesMenuclEv>:
 aa4:	stp	x29, x30, [sp, #-64]!
 aa8:	stp	x24, x23, [sp, #16]
 aac:	stp	x22, x21, [sp, #32]
 ab0:	stp	x20, x19, [sp, #48]
 ab4:	mov	x29, sp
 ab8:	mov	x19, x0
 abc:	ldr	x0, [x0, #56]
 ac0:	bl	0 <post_menu>
 ac4:	cbnz	w0, d3c <_ZN11NCursesMenuclEv+0x298>
 ac8:	ldr	x0, [x19, #48]
 acc:	bl	0 <show_panel>
 ad0:	cmn	w0, #0x1
 ad4:	b.eq	d78 <_ZN11NCursesMenuclEv+0x2d4>  // b.none
 ad8:	ldr	x8, [x19]
 adc:	mov	x0, x19
 ae0:	ldr	x8, [x8, #32]
 ae4:	blr	x8
 ae8:	ldr	x8, [x19]
 aec:	mov	x0, x19
 af0:	ldr	x8, [x8, #48]
 af4:	blr	x8
 af8:	ldr	x8, [x19]
 afc:	mov	w20, w0
 b00:	mov	x0, x19
 b04:	mov	w1, w20
 b08:	ldr	x8, [x8, #136]
 b0c:	blr	x8
 b10:	cmp	w0, #0x280
 b14:	b.ne	b58 <_ZN11NCursesMenuclEv+0xb4>  // b.any
 b18:	ldr	x0, [x19, #56]
 b1c:	bl	0 <unpost_menu>
 b20:	cbnz	w0, db4 <_ZN11NCursesMenuclEv+0x310>
 b24:	ldr	x0, [x19, #48]
 b28:	bl	0 <hide_panel>
 b2c:	cmn	w0, #0x1
 b30:	b.eq	df0 <_ZN11NCursesMenuclEv+0x34c>  // b.none
 b34:	ldr	x8, [x19]
 b38:	mov	x0, x19
 b3c:	ldr	x8, [x8, #32]
 b40:	blr	x8
 b44:	ldr	x0, [x19, #56]
 b48:	bl	0 <menu_opts>
 b4c:	tbnz	w0, #0, cd8 <_ZN11NCursesMenuclEv+0x234>
 b50:	mov	x0, xzr
 b54:	b	cec <_ZN11NCursesMenuclEv+0x248>
 b58:	adrp	x22, 0 <_ZN15NCursesMenuItemD1Ev>
 b5c:	mov	w21, w0
 b60:	add	x22, x22, #0x0
 b64:	b	bb0 <_ZN11NCursesMenuclEv+0x10c>
 b68:	ldr	x8, [x19]
 b6c:	ldr	x8, [x8, #160]
 b70:	mov	x0, x19
 b74:	mov	w1, w20
 b78:	blr	x8
 b7c:	ldr	x8, [x19]
 b80:	mov	x0, x19
 b84:	ldr	x8, [x8, #48]
 b88:	blr	x8
 b8c:	ldr	x8, [x19]
 b90:	mov	w20, w0
 b94:	mov	x0, x19
 b98:	mov	w1, w20
 b9c:	ldr	x8, [x8, #136]
 ba0:	blr	x8
 ba4:	mov	w21, w0
 ba8:	cmp	w0, #0x280
 bac:	b.eq	b18 <_ZN11NCursesMenuclEv+0x74>  // b.none
 bb0:	ldr	x8, [x19]
 bb4:	mov	x0, x19
 bb8:	mov	w1, w21
 bbc:	ldr	x8, [x8, #88]
 bc0:	blr	x8
 bc4:	add	w8, w0, #0xc
 bc8:	cmp	w8, #0xc
 bcc:	b.hi	d00 <_ZN11NCursesMenuclEv+0x25c>  // b.pmore
 bd0:	adr	x9, b68 <_ZN11NCursesMenuclEv+0xc4>
 bd4:	ldrb	w10, [x22, x8]
 bd8:	add	x9, x9, x10, lsl #2
 bdc:	br	x9
 be0:	ldr	x8, [x19]
 be4:	ldr	x8, [x8, #152]
 be8:	b	b70 <_ZN11NCursesMenuclEv+0xcc>
 bec:	ldr	x8, [x19]
 bf0:	ldr	x8, [x8, #168]
 bf4:	b	b70 <_ZN11NCursesMenuclEv+0xcc>
 bf8:	cmp	w21, #0x281
 bfc:	b.ne	c78 <_ZN11NCursesMenuclEv+0x1d4>  // b.any
 c00:	ldr	x0, [x19, #56]
 c04:	bl	0 <menu_opts>
 c08:	tbnz	w0, #0, c84 <_ZN11NCursesMenuclEv+0x1e0>
 c0c:	ldr	x0, [x19, #56]
 c10:	bl	0 <item_count>
 c14:	cmp	w0, #0x1
 c18:	b.lt	b7c <_ZN11NCursesMenuclEv+0xd8>  // b.tstop
 c1c:	mov	w8, w0
 c20:	mov	x23, xzr
 c24:	mov	w21, wzr
 c28:	lsl	x24, x8, #3
 c2c:	b	c3c <_ZN11NCursesMenuclEv+0x198>
 c30:	add	x23, x23, #0x8
 c34:	cmp	x24, x23
 c38:	b.eq	cd0 <_ZN11NCursesMenuclEv+0x22c>  // b.none
 c3c:	ldr	x8, [x19, #80]
 c40:	ldr	x20, [x8, x23]
 c44:	ldr	x0, [x20, #8]
 c48:	bl	0 <item_value>
 c4c:	tbz	w0, #0, c30 <_ZN11NCursesMenuclEv+0x18c>
 c50:	ldr	x8, [x20]
 c54:	mov	x0, x20
 c58:	ldr	x8, [x8, #16]
 c5c:	blr	x8
 c60:	ldr	x8, [x19]
 c64:	orr	w21, w21, w0
 c68:	mov	x0, x19
 c6c:	ldr	x8, [x8, #32]
 c70:	blr	x8
 c74:	b	c30 <_ZN11NCursesMenuclEv+0x18c>
 c78:	ldr	x8, [x19]
 c7c:	ldr	x8, [x8, #176]
 c80:	b	b70 <_ZN11NCursesMenuclEv+0xcc>
 c84:	ldr	x0, [x19, #56]
 c88:	ldr	x21, [x19, #80]
 c8c:	bl	0 <current_item>
 c90:	bl	0 <item_index>
 c94:	ldr	x21, [x21, w0, sxtw #3]
 c98:	ldr	x0, [x21, #8]
 c9c:	bl	0 <item_opts>
 ca0:	tbz	w0, #0, b68 <_ZN11NCursesMenuclEv+0xc4>
 ca4:	ldr	x8, [x21]
 ca8:	mov	x0, x21
 cac:	ldr	x8, [x8, #16]
 cb0:	blr	x8
 cb4:	ldr	x8, [x19]
 cb8:	mov	w20, w0
 cbc:	mov	x0, x19
 cc0:	ldr	x8, [x8, #32]
 cc4:	blr	x8
 cc8:	tbz	w20, #0, b7c <_ZN11NCursesMenuclEv+0xd8>
 ccc:	b	b18 <_ZN11NCursesMenuclEv+0x74>
 cd0:	tbz	w21, #0, b7c <_ZN11NCursesMenuclEv+0xd8>
 cd4:	b	b18 <_ZN11NCursesMenuclEv+0x74>
 cd8:	ldr	x0, [x19, #56]
 cdc:	ldr	x20, [x19, #80]
 ce0:	bl	0 <current_item>
 ce4:	bl	0 <item_index>
 ce8:	ldr	x0, [x20, w0, sxtw #3]
 cec:	ldp	x20, x19, [sp, #48]
 cf0:	ldp	x22, x21, [sp, #32]
 cf4:	ldp	x24, x23, [sp, #16]
 cf8:	ldp	x29, x30, [sp], #64
 cfc:	ret
 d00:	mov	w19, w0
 d04:	mov	w0, #0x18                  	// #24
 d08:	bl	0 <__cxa_allocate_exception>
 d0c:	adrp	x8, 0 <_ZN15NCursesMenuItemD1Ev>
 d10:	ldr	x8, [x8]
 d14:	adrp	x9, 0 <_ZN15NCursesMenuItemD1Ev>
 d18:	add	x9, x9, #0x0
 d1c:	str	w19, [x0, #16]
 d20:	add	x8, x8, #0x10
 d24:	stp	x8, x9, [x0]
 d28:	adrp	x1, 0 <_ZN15NCursesMenuItemD1Ev>
 d2c:	adrp	x2, 0 <_ZN15NCursesMenuItemD1Ev>
 d30:	ldr	x1, [x1]
 d34:	ldr	x2, [x2]
 d38:	bl	0 <__cxa_throw>
 d3c:	mov	w20, w0
 d40:	mov	w0, #0x18                  	// #24
 d44:	bl	0 <__cxa_allocate_exception>
 d48:	adrp	x8, 0 <_ZN15NCursesMenuItemD1Ev>
 d4c:	ldr	x8, [x8]
 d50:	adrp	x9, 0 <_ZN15NCursesMenuItemD1Ev>
 d54:	add	x9, x9, #0x0
 d58:	str	w20, [x0, #16]
 d5c:	add	x8, x8, #0x10
 d60:	stp	x8, x9, [x0]
 d64:	adrp	x1, 0 <_ZN15NCursesMenuItemD1Ev>
 d68:	adrp	x2, 0 <_ZN15NCursesMenuItemD1Ev>
 d6c:	ldr	x1, [x1]
 d70:	ldr	x2, [x2]
 d74:	bl	0 <__cxa_throw>
 d78:	mov	w0, #0x18                  	// #24
 d7c:	bl	0 <__cxa_allocate_exception>
 d80:	adrp	x8, 0 <_ZN15NCursesMenuItemD1Ev>
 d84:	ldr	x8, [x8]
 d88:	adrp	x9, 0 <_ZN15NCursesMenuItemD1Ev>
 d8c:	add	x9, x9, #0x0
 d90:	mov	w10, #0xffffffff            	// #-1
 d94:	add	x8, x8, #0x10
 d98:	stp	x8, x9, [x0]
 d9c:	str	w10, [x0, #16]
 da0:	adrp	x1, 0 <_ZN15NCursesMenuItemD1Ev>
 da4:	adrp	x2, 0 <_ZN15NCursesMenuItemD1Ev>
 da8:	ldr	x1, [x1]
 dac:	ldr	x2, [x2]
 db0:	bl	0 <__cxa_throw>
 db4:	mov	w20, w0
 db8:	mov	w0, #0x18                  	// #24
 dbc:	bl	0 <__cxa_allocate_exception>
 dc0:	adrp	x8, 0 <_ZN15NCursesMenuItemD1Ev>
 dc4:	ldr	x8, [x8]
 dc8:	adrp	x9, 0 <_ZN15NCursesMenuItemD1Ev>
 dcc:	add	x9, x9, #0x0
 dd0:	str	w20, [x0, #16]
 dd4:	add	x8, x8, #0x10
 dd8:	stp	x8, x9, [x0]
 ddc:	adrp	x1, 0 <_ZN15NCursesMenuItemD1Ev>
 de0:	adrp	x2, 0 <_ZN15NCursesMenuItemD1Ev>
 de4:	ldr	x1, [x1]
 de8:	ldr	x2, [x2]
 dec:	bl	0 <__cxa_throw>
 df0:	mov	w0, #0x18                  	// #24
 df4:	bl	0 <__cxa_allocate_exception>
 df8:	adrp	x8, 0 <_ZN15NCursesMenuItemD1Ev>
 dfc:	ldr	x8, [x8]
 e00:	adrp	x9, 0 <_ZN15NCursesMenuItemD1Ev>
 e04:	add	x9, x9, #0x0
 e08:	mov	w10, #0xffffffff            	// #-1
 e0c:	add	x8, x8, #0x10
 e10:	stp	x8, x9, [x0]
 e14:	str	w10, [x0, #16]
 e18:	adrp	x1, 0 <_ZN15NCursesMenuItemD1Ev>
 e1c:	adrp	x2, 0 <_ZN15NCursesMenuItemD1Ev>
 e20:	ldr	x1, [x1]
 e24:	ldr	x2, [x2]
 e28:	bl	0 <__cxa_throw>
 e2c:	bl	0 <__cxa_call_unexpected>
 e30:	bl	0 <__cxa_call_unexpected>
 e34:	bl	0 <__cxa_call_unexpected>
 e38:	bl	0 <__cxa_call_unexpected>
 e3c:	bl	0 <__cxa_call_unexpected>

0000000000000e40 <_ZN11NCursesMenu12On_Menu_InitEv>:
 e40:	ret

0000000000000e44 <_ZN11NCursesMenu19On_Menu_TerminationEv>:
 e44:	ret

0000000000000e48 <_ZN11NCursesMenu12On_Item_InitER15NCursesMenuItem>:
 e48:	ret

0000000000000e4c <_ZN11NCursesMenu19On_Item_TerminationER15NCursesMenuItem>:
 e4c:	ret

0000000000000e50 <_ZNK11NCursesMenu17On_Request_DeniedEi>:
 e50:	b	0 <beep>

0000000000000e54 <_ZNK11NCursesMenu17On_Not_SelectableEi>:
 e54:	b	0 <beep>

0000000000000e58 <_ZNK11NCursesMenu11On_No_MatchEi>:
 e58:	b	0 <beep>

0000000000000e5c <_ZNK11NCursesMenu18On_Unknown_CommandEi>:
 e5c:	b	0 <beep>

Disassembly of section .text.__clang_call_terminate:

0000000000000000 <__clang_call_terminate>:
   0:	str	x30, [sp, #-16]!
   4:	bl	0 <__cxa_begin_catch>
   8:	bl	0 <_ZSt9terminatev>

Disassembly of section .text._ZN12NCursesPanel5mvwinEii:

0000000000000000 <_ZN12NCursesPanel5mvwinEii>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x0, [x0, #48]
   c:	bl	0 <move_panel>
  10:	cmn	w0, #0x1
  14:	b.eq	24 <_ZN12NCursesPanel5mvwinEii+0x24>  // b.none
  18:	mov	w0, wzr
  1c:	ldp	x29, x30, [sp], #16
  20:	ret
  24:	mov	w0, #0x18                  	// #24
  28:	bl	0 <__cxa_allocate_exception>
  2c:	adrp	x8, 0 <_ZN12NCursesPanel5mvwinEii>
  30:	ldr	x8, [x8]
  34:	adrp	x9, 0 <_ZN12NCursesPanel5mvwinEii>
  38:	add	x9, x9, #0x0
  3c:	mov	w10, #0xffffffff            	// #-1
  40:	add	x8, x8, #0x10
  44:	stp	x8, x9, [x0]
  48:	str	w10, [x0, #16]
  4c:	adrp	x1, 0 <_ZN12NCursesPanel5mvwinEii>
  50:	adrp	x2, 0 <_ZN12NCursesPanel5mvwinEii>
  54:	ldr	x1, [x1]
  58:	ldr	x2, [x2]
  5c:	bl	0 <__cxa_throw>
  60:	bl	0 <__cxa_call_unexpected>

Disassembly of section .text._ZN11NCursesMenu5frameEPKcS1_:

0000000000000000 <_ZN11NCursesMenu5frameEPKcS1_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w8, [x0, #73]
   c:	cbz	w8, 18 <_ZN11NCursesMenu5frameEPKcS1_+0x18>
  10:	ldp	x29, x30, [sp], #16
  14:	b	0 <_ZN12NCursesPanel5frameEPKcS1_>
  18:	mov	w0, #0x18                  	// #24
  1c:	bl	0 <__cxa_allocate_exception>
  20:	adrp	x8, 0 <_ZN11NCursesMenu5frameEPKcS1_>
  24:	ldr	x8, [x8]
  28:	adrp	x9, 0 <_ZN11NCursesMenu5frameEPKcS1_>
  2c:	add	x9, x9, #0x0
  30:	mov	w10, #0xffffffff            	// #-1
  34:	add	x8, x8, #0x10
  38:	stp	x8, x9, [x0]
  3c:	str	w10, [x0, #16]
  40:	adrp	x1, 0 <_ZN11NCursesMenu5frameEPKcS1_>
  44:	adrp	x2, 0 <_ZN11NCursesMenu5frameEPKcS1_>
  48:	ldr	x1, [x1]
  4c:	ldr	x2, [x2]
  50:	bl	0 <__cxa_throw>
  54:	bl	0 <__cxa_call_unexpected>

Disassembly of section .text._ZN11NCursesMenu9boldframeEPKcS1_:

0000000000000000 <_ZN11NCursesMenu9boldframeEPKcS1_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w8, [x0, #73]
   c:	cbz	w8, 18 <_ZN11NCursesMenu9boldframeEPKcS1_+0x18>
  10:	ldp	x29, x30, [sp], #16
  14:	b	0 <_ZN12NCursesPanel9boldframeEPKcS1_>
  18:	mov	w0, #0x18                  	// #24
  1c:	bl	0 <__cxa_allocate_exception>
  20:	adrp	x8, 0 <_ZN11NCursesMenu9boldframeEPKcS1_>
  24:	ldr	x8, [x8]
  28:	adrp	x9, 0 <_ZN11NCursesMenu9boldframeEPKcS1_>
  2c:	add	x9, x9, #0x0
  30:	mov	w10, #0xffffffff            	// #-1
  34:	add	x8, x8, #0x10
  38:	stp	x8, x9, [x0]
  3c:	str	w10, [x0, #16]
  40:	adrp	x1, 0 <_ZN11NCursesMenu9boldframeEPKcS1_>
  44:	adrp	x2, 0 <_ZN11NCursesMenu9boldframeEPKcS1_>
  48:	ldr	x1, [x1]
  4c:	ldr	x2, [x2]
  50:	bl	0 <__cxa_throw>
  54:	bl	0 <__cxa_call_unexpected>

Disassembly of section .text._ZN11NCursesMenu5labelEPKcS1_:

0000000000000000 <_ZN11NCursesMenu5labelEPKcS1_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w8, [x0, #73]
   c:	cbz	w8, 18 <_ZN11NCursesMenu5labelEPKcS1_+0x18>
  10:	ldp	x29, x30, [sp], #16
  14:	b	0 <_ZN12NCursesPanel5labelEPKcS1_>
  18:	mov	w0, #0x18                  	// #24
  1c:	bl	0 <__cxa_allocate_exception>
  20:	adrp	x8, 0 <_ZN11NCursesMenu5labelEPKcS1_>
  24:	ldr	x8, [x8]
  28:	adrp	x9, 0 <_ZN11NCursesMenu5labelEPKcS1_>
  2c:	add	x9, x9, #0x0
  30:	mov	w10, #0xffffffff            	// #-1
  34:	add	x8, x8, #0x10
  38:	stp	x8, x9, [x0]
  3c:	str	w10, [x0, #16]
  40:	adrp	x1, 0 <_ZN11NCursesMenu5labelEPKcS1_>
  44:	adrp	x2, 0 <_ZN11NCursesMenu5labelEPKcS1_>
  48:	ldr	x1, [x1]
  4c:	ldr	x2, [x2]
  50:	bl	0 <__cxa_throw>
  54:	bl	0 <__cxa_call_unexpected>

Disassembly of section .text._ZNK16NCursesException9classnameEv:

0000000000000000 <_ZNK16NCursesException9classnameEv>:
   0:	adrp	x0, 0 <_ZNK16NCursesException9classnameEv>
   4:	add	x0, x0, #0x0
   8:	ret

Disassembly of section .text._ZN16NCursesExceptionD0Ev:

0000000000000000 <_ZN16NCursesExceptionD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZN16NCursesExceptionD2Ev:

0000000000000000 <_ZN16NCursesExceptionD2Ev>:
   0:	ret

cursesw.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN13NCursesWindow5scanwEPKcz>:
       0:	sub	sp, sp, #0x100
       4:	stp	x29, x30, [sp, #240]
       8:	add	x29, sp, #0xf0
       c:	mov	x8, #0xffffffffffffffd0    	// #-48
      10:	mov	x9, sp
      14:	sub	x10, x29, #0x70
      18:	movk	x8, #0xff80, lsl #32
      1c:	add	x11, x29, #0x10
      20:	add	x9, x9, #0x80
      24:	add	x10, x10, #0x30
      28:	stp	x2, x3, [x29, #-112]
      2c:	stp	x4, x5, [x29, #-96]
      30:	stp	x6, x7, [x29, #-80]
      34:	stp	q1, q2, [sp, #16]
      38:	stp	q3, q4, [sp, #48]
      3c:	str	q0, [sp]
      40:	stp	q5, q6, [sp, #80]
      44:	str	q7, [sp, #112]
      48:	stp	x9, x8, [x29, #-16]
      4c:	stp	x11, x10, [x29, #-32]
      50:	ldp	q0, q1, [x29, #-32]
      54:	ldr	x0, [x0, #8]
      58:	sub	x2, x29, #0x40
      5c:	stp	q0, q1, [x29, #-64]
      60:	bl	0 <vw_scanw>
      64:	ldp	x29, x30, [sp, #240]
      68:	add	sp, sp, #0x100
      6c:	ret

0000000000000070 <_ZN13NCursesWindow5scanwEiiPKcz>:
      70:	sub	sp, sp, #0x100
      74:	stp	x29, x30, [sp, #224]
      78:	stp	x20, x19, [sp, #240]
      7c:	add	x29, sp, #0xe0
      80:	stp	x4, x5, [x29, #-96]
      84:	stp	x6, x7, [x29, #-80]
      88:	stp	q0, q1, [sp]
      8c:	stp	q2, q3, [sp, #32]
      90:	stp	q4, q5, [sp, #64]
      94:	stp	q6, q7, [sp, #96]
      98:	mov	x20, x0
      9c:	ldr	x0, [x0, #8]
      a0:	mov	x19, x3
      a4:	bl	0 <wmove>
      a8:	cmn	w0, #0x1
      ac:	b.eq	ec <_ZN13NCursesWindow5scanwEiiPKcz+0x7c>  // b.none
      b0:	mov	x8, #0xffffffffffffffe0    	// #-32
      b4:	mov	x10, sp
      b8:	sub	x11, x29, #0x60
      bc:	movk	x8, #0xff80, lsl #32
      c0:	add	x9, x29, #0x20
      c4:	add	x10, x10, #0x80
      c8:	add	x11, x11, #0x20
      cc:	stp	x10, x8, [x29, #-16]
      d0:	stp	x9, x11, [x29, #-32]
      d4:	ldp	q0, q1, [x29, #-32]
      d8:	ldr	x0, [x20, #8]
      dc:	sub	x2, x29, #0x40
      e0:	mov	x1, x19
      e4:	stp	q0, q1, [x29, #-64]
      e8:	bl	0 <vw_scanw>
      ec:	ldp	x20, x19, [sp, #240]
      f0:	ldp	x29, x30, [sp, #224]
      f4:	add	sp, sp, #0x100
      f8:	ret

00000000000000fc <_ZN13NCursesWindow5scanwEPKcSt9__va_list>:
      fc:	sub	sp, sp, #0x30
     100:	stp	x29, x30, [sp, #32]
     104:	add	x29, sp, #0x20
     108:	ldp	q1, q0, [x2]
     10c:	ldr	x0, [x0, #8]
     110:	mov	x2, sp
     114:	stp	q1, q0, [sp]
     118:	bl	0 <vw_scanw>
     11c:	ldp	x29, x30, [sp, #32]
     120:	add	sp, sp, #0x30
     124:	ret

0000000000000128 <_ZN13NCursesWindow5scanwEiiPKcSt9__va_list>:
     128:	sub	sp, sp, #0x50
     12c:	stp	x29, x30, [sp, #32]
     130:	str	x21, [sp, #48]
     134:	stp	x20, x19, [sp, #64]
     138:	add	x29, sp, #0x20
     13c:	mov	x21, x0
     140:	ldr	x0, [x0, #8]
     144:	mov	x20, x4
     148:	mov	x19, x3
     14c:	bl	0 <wmove>
     150:	cmn	w0, #0x1
     154:	b.eq	170 <_ZN13NCursesWindow5scanwEiiPKcSt9__va_list+0x48>  // b.none
     158:	ldp	q1, q0, [x20]
     15c:	ldr	x0, [x21, #8]
     160:	mov	x2, sp
     164:	mov	x1, x19
     168:	stp	q1, q0, [sp]
     16c:	bl	0 <vw_scanw>
     170:	ldp	x20, x19, [sp, #64]
     174:	ldr	x21, [sp, #48]
     178:	ldp	x29, x30, [sp, #32]
     17c:	add	sp, sp, #0x50
     180:	ret

0000000000000184 <_ZN13NCursesWindow6printwEPKcz>:
     184:	sub	sp, sp, #0x100
     188:	stp	x29, x30, [sp, #240]
     18c:	add	x29, sp, #0xf0
     190:	mov	x8, #0xffffffffffffffd0    	// #-48
     194:	mov	x9, sp
     198:	sub	x10, x29, #0x70
     19c:	movk	x8, #0xff80, lsl #32
     1a0:	add	x11, x29, #0x10
     1a4:	add	x9, x9, #0x80
     1a8:	add	x10, x10, #0x30
     1ac:	stp	x2, x3, [x29, #-112]
     1b0:	stp	x4, x5, [x29, #-96]
     1b4:	stp	x6, x7, [x29, #-80]
     1b8:	stp	q1, q2, [sp, #16]
     1bc:	stp	q3, q4, [sp, #48]
     1c0:	str	q0, [sp]
     1c4:	stp	q5, q6, [sp, #80]
     1c8:	str	q7, [sp, #112]
     1cc:	stp	x9, x8, [x29, #-16]
     1d0:	stp	x11, x10, [x29, #-32]
     1d4:	ldp	q0, q1, [x29, #-32]
     1d8:	ldr	x0, [x0, #8]
     1dc:	sub	x2, x29, #0x40
     1e0:	stp	q0, q1, [x29, #-64]
     1e4:	bl	0 <vw_printw>
     1e8:	ldp	x29, x30, [sp, #240]
     1ec:	add	sp, sp, #0x100
     1f0:	ret

00000000000001f4 <_ZN13NCursesWindow6printwEiiPKcz>:
     1f4:	sub	sp, sp, #0x100
     1f8:	stp	x29, x30, [sp, #224]
     1fc:	stp	x20, x19, [sp, #240]
     200:	add	x29, sp, #0xe0
     204:	mov	x8, #0xffffffffffffffe0    	// #-32
     208:	mov	x9, sp
     20c:	sub	x10, x29, #0x60
     210:	movk	x8, #0xff80, lsl #32
     214:	add	x11, x29, #0x20
     218:	add	x9, x9, #0x80
     21c:	add	x10, x10, #0x20
     220:	stp	x4, x5, [x29, #-96]
     224:	stp	x6, x7, [x29, #-80]
     228:	stp	q0, q1, [sp]
     22c:	stp	q2, q3, [sp, #32]
     230:	stp	q4, q5, [sp, #64]
     234:	stp	q6, q7, [sp, #96]
     238:	stp	x9, x8, [x29, #-16]
     23c:	stp	x11, x10, [x29, #-32]
     240:	mov	x20, x0
     244:	ldr	x0, [x0, #8]
     248:	mov	x19, x3
     24c:	bl	0 <wmove>
     250:	cbnz	w0, 26c <_ZN13NCursesWindow6printwEiiPKcz+0x78>
     254:	ldp	q0, q1, [x29, #-32]
     258:	ldr	x0, [x20, #8]
     25c:	sub	x2, x29, #0x40
     260:	mov	x1, x19
     264:	stp	q0, q1, [x29, #-64]
     268:	bl	0 <vw_printw>
     26c:	ldp	x20, x19, [sp, #240]
     270:	ldp	x29, x30, [sp, #224]
     274:	add	sp, sp, #0x100
     278:	ret

000000000000027c <_ZN13NCursesWindow6printwEPKcSt9__va_list>:
     27c:	sub	sp, sp, #0x30
     280:	stp	x29, x30, [sp, #32]
     284:	add	x29, sp, #0x20
     288:	ldp	q1, q0, [x2]
     28c:	ldr	x0, [x0, #8]
     290:	mov	x2, sp
     294:	stp	q1, q0, [sp]
     298:	bl	0 <vw_printw>
     29c:	ldp	x29, x30, [sp, #32]
     2a0:	add	sp, sp, #0x30
     2a4:	ret

00000000000002a8 <_ZN13NCursesWindow6printwEiiPKcSt9__va_list>:
     2a8:	sub	sp, sp, #0x50
     2ac:	stp	x29, x30, [sp, #32]
     2b0:	str	x21, [sp, #48]
     2b4:	stp	x20, x19, [sp, #64]
     2b8:	add	x29, sp, #0x20
     2bc:	mov	x21, x0
     2c0:	ldr	x0, [x0, #8]
     2c4:	mov	x20, x4
     2c8:	mov	x19, x3
     2cc:	bl	0 <wmove>
     2d0:	cbnz	w0, 2ec <_ZN13NCursesWindow6printwEiiPKcSt9__va_list+0x44>
     2d4:	ldp	q1, q0, [x20]
     2d8:	ldr	x0, [x21, #8]
     2dc:	mov	x2, sp
     2e0:	mov	x1, x19
     2e4:	stp	q1, q0, [sp]
     2e8:	bl	0 <vw_printw>
     2ec:	ldp	x20, x19, [sp, #64]
     2f0:	ldr	x21, [sp, #48]
     2f4:	ldp	x29, x30, [sp, #32]
     2f8:	add	sp, sp, #0x50
     2fc:	ret

0000000000000300 <_ZN13NCursesWindow12set_keyboardEv>:
     300:	stp	x29, x30, [sp, #-32]!
     304:	str	x19, [sp, #16]
     308:	mov	x29, sp
     30c:	mov	x19, x0
     310:	ldr	x0, [x0, #8]
     314:	mov	w1, #0x1                   	// #1
     318:	bl	0 <keypad>
     31c:	ldr	x0, [x19, #8]
     320:	ldr	x19, [sp, #16]
     324:	mov	w1, #0x1                   	// #1
     328:	ldp	x29, x30, [sp], #32
     32c:	b	0 <meta>

0000000000000330 <_ZNK13NCursesWindow11err_handlerEPKc>:
     330:	stp	x29, x30, [sp, #-32]!
     334:	str	x19, [sp, #16]
     338:	mov	x29, sp
     33c:	mov	w0, #0x18                  	// #24
     340:	mov	x19, x1
     344:	bl	0 <__cxa_allocate_exception>
     348:	adrp	x8, 0 <_ZN13NCursesWindow5scanwEPKcz>
     34c:	ldr	x8, [x8]
     350:	mov	w9, #0xffffffff            	// #-1
     354:	str	w9, [x0, #16]
     358:	add	x8, x8, #0x10
     35c:	stp	x8, x19, [x0]
     360:	adrp	x1, 0 <_ZN13NCursesWindow5scanwEPKcz>
     364:	adrp	x2, 0 <_ZN13NCursesWindow5scanwEPKcz>
     368:	ldr	x1, [x1]
     36c:	ldr	x2, [x2]
     370:	bl	0 <__cxa_throw>
     374:	bl	0 <__cxa_call_unexpected>

0000000000000378 <_ZN13NCursesWindow10initializeEv>:
     378:	stp	x29, x30, [sp, #-32]!
     37c:	stp	x20, x19, [sp, #16]
     380:	mov	x29, sp
     384:	adrp	x20, 8 <_ZN13NCursesWindow5scanwEPKcz+0x8>
     388:	ldr	x20, [x20]
     38c:	ldrb	w8, [x20]
     390:	cbz	w8, 3a0 <_ZN13NCursesWindow10initializeEv+0x28>
     394:	ldp	x20, x19, [sp, #16]
     398:	ldp	x29, x30, [sp], #32
     39c:	ret
     3a0:	bl	0 <initscr>
     3a4:	adrp	x19, c <_ZN13NCursesWindow5scanwEPKcz+0xc>
     3a8:	ldr	x19, [x19]
     3ac:	mov	w9, #0x1                   	// #1
     3b0:	strb	w9, [x20]
     3b4:	ldr	w8, [x19]
     3b8:	cmn	w8, #0x1
     3bc:	b.ne	3e0 <_ZN13NCursesWindow10initializeEv+0x68>  // b.any
     3c0:	str	wzr, [x19]
     3c4:	bl	0 <has_colors>
     3c8:	tbz	w0, #0, 3d8 <_ZN13NCursesWindow10initializeEv+0x60>
     3cc:	bl	0 <start_color>
     3d0:	mov	w8, #0x2                   	// #2
     3d4:	b	3dc <_ZN13NCursesWindow10initializeEv+0x64>
     3d8:	mov	w8, #0x1                   	// #1
     3dc:	str	w8, [x19]
     3e0:	bl	0 <noecho>
     3e4:	ldp	x20, x19, [sp, #16]
     3e8:	ldp	x29, x30, [sp], #32
     3ec:	b	0 <cbreak>

00000000000003f0 <_ZN13NCursesWindow9useColorsEv>:
     3f0:	stp	x29, x30, [sp, #-32]!
     3f4:	str	x19, [sp, #16]
     3f8:	mov	x29, sp
     3fc:	adrp	x19, c <_ZN13NCursesWindow5scanwEPKcz+0xc>
     400:	ldr	x19, [x19]
     404:	ldr	w8, [x19]
     408:	cbnz	w8, 440 <_ZN13NCursesWindow9useColorsEv+0x50>
     40c:	adrp	x8, 8 <_ZN13NCursesWindow5scanwEPKcz+0x8>
     410:	ldr	x8, [x8]
     414:	ldrb	w8, [x8]
     418:	cbz	w8, 430 <_ZN13NCursesWindow9useColorsEv+0x40>
     41c:	bl	0 <has_colors>
     420:	tbz	w0, #0, 438 <_ZN13NCursesWindow9useColorsEv+0x48>
     424:	bl	0 <start_color>
     428:	mov	w8, #0x2                   	// #2
     42c:	b	43c <_ZN13NCursesWindow9useColorsEv+0x4c>
     430:	mov	w8, #0xffffffff            	// #-1
     434:	b	43c <_ZN13NCursesWindow9useColorsEv+0x4c>
     438:	mov	w8, #0x1                   	// #1
     43c:	str	w8, [x19]
     440:	ldr	x19, [sp, #16]
     444:	ldp	x29, x30, [sp], #32
     448:	ret

000000000000044c <_ZN13NCursesWindow12constructingEv>:
     44c:	stp	x29, x30, [sp, #-32]!
     450:	stp	x20, x19, [sp, #16]
     454:	mov	x29, sp
     458:	adrp	x20, 8 <_ZN13NCursesWindow5scanwEPKcz+0x8>
     45c:	ldr	x20, [x20]
     460:	ldrb	w8, [x20]
     464:	cbnz	w8, 4b0 <_ZN13NCursesWindow12constructingEv+0x64>
     468:	bl	0 <initscr>
     46c:	adrp	x19, c <_ZN13NCursesWindow5scanwEPKcz+0xc>
     470:	ldr	x19, [x19]
     474:	mov	w9, #0x1                   	// #1
     478:	strb	w9, [x20]
     47c:	ldr	w8, [x19]
     480:	cmn	w8, #0x1
     484:	b.ne	4a8 <_ZN13NCursesWindow12constructingEv+0x5c>  // b.any
     488:	str	wzr, [x19]
     48c:	bl	0 <has_colors>
     490:	tbz	w0, #0, 4a0 <_ZN13NCursesWindow12constructingEv+0x54>
     494:	bl	0 <start_color>
     498:	mov	w8, #0x2                   	// #2
     49c:	b	4a4 <_ZN13NCursesWindow12constructingEv+0x58>
     4a0:	mov	w8, #0x1                   	// #1
     4a4:	str	w8, [x19]
     4a8:	bl	0 <noecho>
     4ac:	bl	0 <cbreak>
     4b0:	adrp	x8, 0 <_ZN13NCursesWindow5scanwEPKcz>
     4b4:	ldr	x8, [x8]
     4b8:	ldp	x20, x19, [sp, #16]
     4bc:	ldr	x9, [x8]
     4c0:	add	x9, x9, #0x1
     4c4:	str	x9, [x8]
     4c8:	ldp	x29, x30, [sp], #32
     4cc:	ret

00000000000004d0 <_ZN13NCursesWindowC1Ev>:
     4d0:	stp	x29, x30, [sp, #-48]!
     4d4:	str	x21, [sp, #16]
     4d8:	stp	x20, x19, [sp, #32]
     4dc:	mov	x29, sp
     4e0:	adrp	x8, 0 <_ZN13NCursesWindow5scanwEPKcz>
     4e4:	ldr	x8, [x8]
     4e8:	strb	wzr, [x0, #16]
     4ec:	stp	xzr, xzr, [x0, #32]
     4f0:	str	xzr, [x0, #24]
     4f4:	add	x8, x8, #0x10
     4f8:	stp	x8, xzr, [x0]
     4fc:	adrp	x21, 8 <_ZN13NCursesWindow5scanwEPKcz+0x8>
     500:	ldr	x21, [x21]
     504:	mov	x19, x0
     508:	ldrb	w8, [x21]
     50c:	cbnz	w8, 558 <_ZN13NCursesWindowC1Ev+0x88>
     510:	bl	0 <initscr>
     514:	adrp	x20, c <_ZN13NCursesWindow5scanwEPKcz+0xc>
     518:	ldr	x20, [x20]
     51c:	mov	w9, #0x1                   	// #1
     520:	strb	w9, [x21]
     524:	ldr	w8, [x20]
     528:	cmn	w8, #0x1
     52c:	b.ne	550 <_ZN13NCursesWindowC1Ev+0x80>  // b.any
     530:	str	wzr, [x20]
     534:	bl	0 <has_colors>
     538:	tbz	w0, #0, 548 <_ZN13NCursesWindowC1Ev+0x78>
     53c:	bl	0 <start_color>
     540:	mov	w8, #0x2                   	// #2
     544:	b	54c <_ZN13NCursesWindowC1Ev+0x7c>
     548:	mov	w8, #0x1                   	// #1
     54c:	str	w8, [x20]
     550:	bl	0 <noecho>
     554:	bl	0 <cbreak>
     558:	adrp	x8, 0 <_ZN13NCursesWindow5scanwEPKcz>
     55c:	ldr	x8, [x8]
     560:	ldr	x21, [sp, #16]
     564:	ldr	x9, [x8]
     568:	add	x9, x9, #0x1
     56c:	str	x9, [x8]
     570:	str	xzr, [x19, #8]
     574:	ldp	x20, x19, [sp, #32]
     578:	ldp	x29, x30, [sp], #48
     57c:	ret

0000000000000580 <_ZN13NCursesWindowC1Eiiii>:
     580:	stp	x29, x30, [sp, #-80]!
     584:	stp	x26, x25, [sp, #16]
     588:	stp	x24, x23, [sp, #32]
     58c:	stp	x22, x21, [sp, #48]
     590:	stp	x20, x19, [sp, #64]
     594:	mov	x29, sp
     598:	adrp	x8, 0 <_ZN13NCursesWindow5scanwEPKcz>
     59c:	ldr	x8, [x8]
     5a0:	mov	w25, #0x1                   	// #1
     5a4:	stp	xzr, xzr, [x0, #32]
     5a8:	str	xzr, [x0, #24]
     5ac:	add	x8, x8, #0x10
     5b0:	strb	w25, [x0, #16]
     5b4:	stp	x8, xzr, [x0]
     5b8:	adrp	x26, 8 <_ZN13NCursesWindow5scanwEPKcz+0x8>
     5bc:	ldr	x26, [x26]
     5c0:	mov	w20, w4
     5c4:	mov	w21, w3
     5c8:	mov	w22, w2
     5cc:	ldrb	w8, [x26]
     5d0:	mov	x19, x0
     5d4:	mov	w23, w1
     5d8:	cbnz	w8, 620 <_ZN13NCursesWindowC1Eiiii+0xa0>
     5dc:	bl	0 <initscr>
     5e0:	adrp	x24, c <_ZN13NCursesWindow5scanwEPKcz+0xc>
     5e4:	ldr	x24, [x24]
     5e8:	strb	w25, [x26]
     5ec:	ldr	w8, [x24]
     5f0:	cmn	w8, #0x1
     5f4:	b.ne	618 <_ZN13NCursesWindowC1Eiiii+0x98>  // b.any
     5f8:	str	wzr, [x24]
     5fc:	bl	0 <has_colors>
     600:	tbz	w0, #0, 610 <_ZN13NCursesWindowC1Eiiii+0x90>
     604:	bl	0 <start_color>
     608:	mov	w8, #0x2                   	// #2
     60c:	b	614 <_ZN13NCursesWindowC1Eiiii+0x94>
     610:	mov	w8, #0x1                   	// #1
     614:	str	w8, [x24]
     618:	bl	0 <noecho>
     61c:	bl	0 <cbreak>
     620:	adrp	x8, 0 <_ZN13NCursesWindow5scanwEPKcz>
     624:	ldr	x8, [x8]
     628:	mov	w0, w23
     62c:	mov	w1, w22
     630:	mov	w2, w21
     634:	ldr	x9, [x8]
     638:	mov	w3, w20
     63c:	add	x9, x9, #0x1
     640:	str	x9, [x8]
     644:	bl	0 <newwin>
     648:	str	x0, [x19, #8]
     64c:	cbnz	x0, 66c <_ZN13NCursesWindowC1Eiiii+0xec>
     650:	ldr	x8, [x19]
     654:	adrp	x1, 0 <_ZN13NCursesWindow5scanwEPKcz>
     658:	add	x1, x1, #0x0
     65c:	mov	x0, x19
     660:	ldr	x8, [x8]
     664:	blr	x8
     668:	ldr	x0, [x19, #8]
     66c:	mov	w1, #0x1                   	// #1
     670:	bl	0 <keypad>
     674:	ldr	x0, [x19, #8]
     678:	ldp	x20, x19, [sp, #64]
     67c:	ldp	x22, x21, [sp, #48]
     680:	ldp	x24, x23, [sp, #32]
     684:	ldp	x26, x25, [sp, #16]
     688:	mov	w1, #0x1                   	// #1
     68c:	ldp	x29, x30, [sp], #80
     690:	b	0 <meta>

0000000000000694 <_ZN13NCursesWindowC1EP7_win_st>:
     694:	stp	x29, x30, [sp, #-48]!
     698:	stp	x22, x21, [sp, #16]
     69c:	stp	x20, x19, [sp, #32]
     6a0:	mov	x29, sp
     6a4:	adrp	x8, 0 <_ZN13NCursesWindow5scanwEPKcz>
     6a8:	ldr	x8, [x8]
     6ac:	strb	wzr, [x0, #16]
     6b0:	stp	xzr, xzr, [x0, #32]
     6b4:	str	xzr, [x0, #24]
     6b8:	add	x8, x8, #0x10
     6bc:	stp	x8, xzr, [x0]
     6c0:	adrp	x22, 8 <_ZN13NCursesWindow5scanwEPKcz+0x8>
     6c4:	ldr	x22, [x22]
     6c8:	mov	x19, x0
     6cc:	mov	x20, x1
     6d0:	ldrb	w8, [x22]
     6d4:	cbnz	w8, 720 <_ZN13NCursesWindowC1EP7_win_st+0x8c>
     6d8:	bl	0 <initscr>
     6dc:	adrp	x21, c <_ZN13NCursesWindow5scanwEPKcz+0xc>
     6e0:	ldr	x21, [x21]
     6e4:	mov	w9, #0x1                   	// #1
     6e8:	strb	w9, [x22]
     6ec:	ldr	w8, [x21]
     6f0:	cmn	w8, #0x1
     6f4:	b.ne	718 <_ZN13NCursesWindowC1EP7_win_st+0x84>  // b.any
     6f8:	str	wzr, [x21]
     6fc:	bl	0 <has_colors>
     700:	tbz	w0, #0, 710 <_ZN13NCursesWindowC1EP7_win_st+0x7c>
     704:	bl	0 <start_color>
     708:	mov	w8, #0x2                   	// #2
     70c:	b	714 <_ZN13NCursesWindowC1EP7_win_st+0x80>
     710:	mov	w8, #0x1                   	// #1
     714:	str	w8, [x21]
     718:	bl	0 <noecho>
     71c:	bl	0 <cbreak>
     720:	adrp	x8, 0 <_ZN13NCursesWindow5scanwEPKcz>
     724:	adrp	x9, 0 <stdscr>
     728:	ldr	x8, [x8]
     72c:	ldr	x9, [x9]
     730:	cmp	x20, #0x0
     734:	mov	w1, #0x1                   	// #1
     738:	ldr	x10, [x8]
     73c:	ldr	x9, [x9]
     740:	add	x10, x10, #0x1
     744:	csel	x0, x9, x20, eq  // eq = none
     748:	str	x10, [x8]
     74c:	str	x0, [x19, #8]
     750:	bl	0 <keypad>
     754:	ldr	x0, [x19, #8]
     758:	ldp	x20, x19, [sp, #32]
     75c:	ldp	x22, x21, [sp, #16]
     760:	mov	w1, #0x1                   	// #1
     764:	ldp	x29, x30, [sp], #48
     768:	b	0 <meta>

000000000000076c <_ZN13NCursesWindowC1ERS_iiiic>:
     76c:	stp	x29, x30, [sp, #-96]!
     770:	stp	x28, x27, [sp, #16]
     774:	stp	x26, x25, [sp, #32]
     778:	stp	x24, x23, [sp, #48]
     77c:	stp	x22, x21, [sp, #64]
     780:	stp	x20, x19, [sp, #80]
     784:	mov	x29, sp
     788:	adrp	x8, 0 <_ZN13NCursesWindow5scanwEPKcz>
     78c:	ldr	x8, [x8]
     790:	mov	w27, #0x1                   	// #1
     794:	stp	xzr, xzr, [x0, #32]
     798:	str	xzr, [x0, #24]
     79c:	add	x8, x8, #0x10
     7a0:	strb	w27, [x0, #16]
     7a4:	stp	x8, xzr, [x0]
     7a8:	adrp	x28, 8 <_ZN13NCursesWindow5scanwEPKcz+0x8>
     7ac:	ldr	x28, [x28]
     7b0:	mov	w25, w6
     7b4:	mov	w21, w5
     7b8:	mov	w22, w4
     7bc:	ldrb	w8, [x28]
     7c0:	mov	w23, w3
     7c4:	mov	w24, w2
     7c8:	mov	x19, x0
     7cc:	mov	x20, x1
     7d0:	cbnz	w8, 818 <_ZN13NCursesWindowC1ERS_iiiic+0xac>
     7d4:	bl	0 <initscr>
     7d8:	adrp	x26, c <_ZN13NCursesWindow5scanwEPKcz+0xc>
     7dc:	ldr	x26, [x26]
     7e0:	strb	w27, [x28]
     7e4:	ldr	w8, [x26]
     7e8:	cmn	w8, #0x1
     7ec:	b.ne	810 <_ZN13NCursesWindowC1ERS_iiiic+0xa4>  // b.any
     7f0:	str	wzr, [x26]
     7f4:	bl	0 <has_colors>
     7f8:	tbz	w0, #0, 808 <_ZN13NCursesWindowC1ERS_iiiic+0x9c>
     7fc:	bl	0 <start_color>
     800:	mov	w8, #0x2                   	// #2
     804:	b	80c <_ZN13NCursesWindowC1ERS_iiiic+0xa0>
     808:	mov	w8, #0x1                   	// #1
     80c:	str	w8, [x26]
     810:	bl	0 <noecho>
     814:	bl	0 <cbreak>
     818:	adrp	x8, 0 <_ZN13NCursesWindow5scanwEPKcz>
     81c:	ldr	x8, [x8]
     820:	ldr	x9, [x8]
     824:	add	x9, x9, #0x1
     828:	str	x9, [x8]
     82c:	ldr	x0, [x20, #8]
     830:	and	w8, w25, #0xff
     834:	cmp	w8, #0x61
     838:	b.ne	85c <_ZN13NCursesWindowC1ERS_iiiic+0xf0>  // b.any
     83c:	cbz	x0, 84c <_ZN13NCursesWindowC1ERS_iiiic+0xe0>
     840:	ldrsh	w8, [x0, #8]
     844:	ldrsh	w9, [x0, #10]
     848:	b	854 <_ZN13NCursesWindowC1ERS_iiiic+0xe8>
     84c:	mov	w8, #0xffffffff            	// #-1
     850:	mov	w9, #0xffffffff            	// #-1
     854:	sub	w22, w22, w8
     858:	sub	w21, w21, w9
     85c:	mov	w1, w24
     860:	mov	w2, w23
     864:	mov	w3, w22
     868:	mov	w4, w21
     86c:	bl	0 <derwin>
     870:	str	x0, [x19, #8]
     874:	cbnz	x0, 890 <_ZN13NCursesWindowC1ERS_iiiic+0x124>
     878:	ldr	x8, [x19]
     87c:	adrp	x1, 0 <_ZN13NCursesWindow5scanwEPKcz>
     880:	add	x1, x1, #0x0
     884:	mov	x0, x19
     888:	ldr	x8, [x8]
     88c:	blr	x8
     890:	str	x20, [x19, #24]
     894:	ldr	x8, [x20, #32]
     898:	str	x8, [x19, #40]
     89c:	str	x19, [x20, #32]
     8a0:	ldp	x20, x19, [sp, #80]
     8a4:	ldp	x22, x21, [sp, #64]
     8a8:	ldp	x24, x23, [sp, #48]
     8ac:	ldp	x26, x25, [sp, #32]
     8b0:	ldp	x28, x27, [sp, #16]
     8b4:	ldp	x29, x30, [sp], #96
     8b8:	ret

00000000000008bc <_ZN13NCursesWindowC1ERS_b>:
     8bc:	sub	sp, sp, #0x50
     8c0:	stp	x29, x30, [sp, #16]
     8c4:	stp	x24, x23, [sp, #32]
     8c8:	stp	x22, x21, [sp, #48]
     8cc:	stp	x20, x19, [sp, #64]
     8d0:	add	x29, sp, #0x10
     8d4:	adrp	x8, 0 <_ZN13NCursesWindow5scanwEPKcz>
     8d8:	ldr	x8, [x8]
     8dc:	mov	w23, #0x1                   	// #1
     8e0:	stp	xzr, xzr, [x0, #32]
     8e4:	str	xzr, [x0, #24]
     8e8:	add	x8, x8, #0x10
     8ec:	strb	w23, [x0, #16]
     8f0:	stp	x8, xzr, [x0]
     8f4:	adrp	x24, 8 <_ZN13NCursesWindow5scanwEPKcz+0x8>
     8f8:	ldr	x24, [x24]
     8fc:	mov	w20, w2
     900:	mov	x21, x0
     904:	mov	x19, x1
     908:	ldrb	w8, [x24]
     90c:	cbnz	w8, 954 <_ZN13NCursesWindowC1ERS_b+0x98>
     910:	bl	0 <initscr>
     914:	adrp	x22, c <_ZN13NCursesWindow5scanwEPKcz+0xc>
     918:	ldr	x22, [x22]
     91c:	strb	w23, [x24]
     920:	ldr	w8, [x22]
     924:	cmn	w8, #0x1
     928:	b.ne	94c <_ZN13NCursesWindowC1ERS_b+0x90>  // b.any
     92c:	str	wzr, [x22]
     930:	bl	0 <has_colors>
     934:	tbz	w0, #0, 944 <_ZN13NCursesWindowC1ERS_b+0x88>
     938:	bl	0 <start_color>
     93c:	mov	w8, #0x2                   	// #2
     940:	b	948 <_ZN13NCursesWindowC1ERS_b+0x8c>
     944:	mov	w8, #0x1                   	// #1
     948:	str	w8, [x22]
     94c:	bl	0 <noecho>
     950:	bl	0 <cbreak>
     954:	adrp	x8, 0 <_ZN13NCursesWindow5scanwEPKcz>
     958:	ldr	x8, [x8]
     95c:	ldr	x9, [x8]
     960:	add	x9, x9, #0x1
     964:	str	x9, [x8]
     968:	ldr	x0, [x19, #8]
     96c:	cbz	x0, 9a0 <_ZN13NCursesWindowC1ERS_b+0xe4>
     970:	ldrh	w8, [x0, #4]
     974:	ldrh	w9, [x0, #6]
     978:	mov	w10, #0xfffe                	// #65534
     97c:	cmp	w8, w10
     980:	csinv	w8, w8, wzr, ne  // ne = any
     984:	cmp	w9, w10
     988:	csinv	w9, w9, wzr, ne  // ne = any
     98c:	sxth	w8, w8
     990:	sxth	w9, w9
     994:	sub	w1, w8, #0x1
     998:	sub	w2, w9, #0x1
     99c:	b	9a8 <_ZN13NCursesWindowC1ERS_b+0xec>
     9a0:	mov	w1, #0xfffffffe            	// #-2
     9a4:	mov	w2, #0xfffffffe            	// #-2
     9a8:	mov	w3, #0x1                   	// #1
     9ac:	mov	w4, #0x1                   	// #1
     9b0:	bl	0 <derwin>
     9b4:	str	x0, [x21, #8]
     9b8:	cbnz	x0, 9d4 <_ZN13NCursesWindowC1ERS_b+0x118>
     9bc:	ldr	x8, [x21]
     9c0:	adrp	x1, 0 <_ZN13NCursesWindow5scanwEPKcz>
     9c4:	add	x1, x1, #0x0
     9c8:	mov	x0, x21
     9cc:	ldr	x8, [x8]
     9d0:	blr	x8
     9d4:	str	x19, [x21, #24]
     9d8:	ldr	x8, [x19, #32]
     9dc:	str	x8, [x21, #40]
     9e0:	str	x21, [x19, #32]
     9e4:	str	xzr, [x21, #32]
     9e8:	tbz	w20, #0, a38 <_ZN13NCursesWindowC1ERS_b+0x17c>
     9ec:	ldr	x0, [x19, #8]
     9f0:	mov	w1, wzr
     9f4:	mov	w2, wzr
     9f8:	mov	w3, wzr
     9fc:	mov	w4, wzr
     a00:	mov	w5, wzr
     a04:	mov	w6, wzr
     a08:	mov	w7, wzr
     a0c:	str	wzr, [sp]
     a10:	bl	0 <wborder>
     a14:	ldr	x0, [x19, #8]
     a18:	cbz	x0, a50 <_ZN13NCursesWindowC1ERS_b+0x194>
     a1c:	ldrh	w8, [x0, #4]
     a20:	mov	w9, #0xfffe                	// #65534
     a24:	cmp	w8, w9
     a28:	csinv	w8, w8, wzr, ne  // ne = any
     a2c:	sxth	w8, w8
     a30:	add	w2, w8, #0x1
     a34:	b	a54 <_ZN13NCursesWindowC1ERS_b+0x198>
     a38:	ldp	x20, x19, [sp, #64]
     a3c:	ldp	x22, x21, [sp, #48]
     a40:	ldp	x24, x23, [sp, #32]
     a44:	ldp	x29, x30, [sp, #16]
     a48:	add	sp, sp, #0x50
     a4c:	ret
     a50:	mov	w2, wzr
     a54:	ldp	x20, x19, [sp, #64]
     a58:	ldp	x22, x21, [sp, #48]
     a5c:	ldp	x24, x23, [sp, #32]
     a60:	ldp	x29, x30, [sp, #16]
     a64:	mov	w3, #0x1                   	// #1
     a68:	mov	w1, wzr
     a6c:	add	sp, sp, #0x50
     a70:	b	0 <wtouchln>

0000000000000a74 <_ZN13NCursesWindow5CloneEv>:
     a74:	stp	x29, x30, [sp, #-32]!
     a78:	stp	x20, x19, [sp, #16]
     a7c:	mov	x29, sp
     a80:	mov	x19, x0
     a84:	ldr	x0, [x0, #8]
     a88:	mov	x20, x8
     a8c:	bl	0 <dupwin>
     a90:	mov	x1, x0
     a94:	mov	x0, x20
     a98:	bl	694 <_ZN13NCursesWindowC1EP7_win_st>
     a9c:	ldr	x8, [x19, #40]
     aa0:	str	x8, [x20, #40]
     aa4:	ldur	q0, [x19, #24]
     aa8:	stur	q0, [x20, #24]
     aac:	ldrb	w8, [x19, #16]
     ab0:	strb	w8, [x20, #16]
     ab4:	ldp	x20, x19, [sp, #16]
     ab8:	ldp	x29, x30, [sp], #32
     abc:	ret

0000000000000ac0 <_ZN13NCursesWindowC1EP7_win_sti>:
     ac0:	stp	x29, x30, [sp, #-48]!
     ac4:	stp	x22, x21, [sp, #16]
     ac8:	stp	x20, x19, [sp, #32]
     acc:	mov	x29, sp
     ad0:	adrp	x8, 0 <_ZN13NCursesWindow5scanwEPKcz>
     ad4:	ldr	x8, [x8]
     ad8:	strb	wzr, [x0, #16]
     adc:	stp	xzr, xzr, [x0, #32]
     ae0:	str	xzr, [x0, #24]
     ae4:	add	x8, x8, #0x10
     ae8:	stp	x8, xzr, [x0]
     aec:	adrp	x22, 8 <_ZN13NCursesWindow5scanwEPKcz+0x8>
     af0:	ldr	x22, [x22]
     af4:	mov	x19, x0
     af8:	mov	x20, x1
     afc:	ldrb	w8, [x22]
     b00:	cbnz	w8, b4c <_ZN13NCursesWindowC1EP7_win_sti+0x8c>
     b04:	bl	0 <initscr>
     b08:	adrp	x21, c <_ZN13NCursesWindow5scanwEPKcz+0xc>
     b0c:	ldr	x21, [x21]
     b10:	mov	w9, #0x1                   	// #1
     b14:	strb	w9, [x22]
     b18:	ldr	w8, [x21]
     b1c:	cmn	w8, #0x1
     b20:	b.ne	b44 <_ZN13NCursesWindowC1EP7_win_sti+0x84>  // b.any
     b24:	str	wzr, [x21]
     b28:	bl	0 <has_colors>
     b2c:	tbz	w0, #0, b3c <_ZN13NCursesWindowC1EP7_win_sti+0x7c>
     b30:	bl	0 <start_color>
     b34:	mov	w8, #0x2                   	// #2
     b38:	b	b40 <_ZN13NCursesWindowC1EP7_win_sti+0x80>
     b3c:	mov	w8, #0x1                   	// #1
     b40:	str	w8, [x21]
     b44:	bl	0 <noecho>
     b48:	bl	0 <cbreak>
     b4c:	str	x20, [x19, #8]
     b50:	ldp	x20, x19, [sp, #32]
     b54:	ldp	x22, x21, [sp, #16]
     b58:	ldp	x29, x30, [sp], #48
     b5c:	ret

0000000000000b60 <_nc_xx_ripoff_init>:
     b60:	sub	sp, sp, #0x40
     b64:	stp	x29, x30, [sp, #16]
     b68:	stp	x22, x21, [sp, #32]
     b6c:	stp	x20, x19, [sp, #48]
     b70:	add	x29, sp, #0x10
     b74:	adrp	x8, 0 <_ZN13NCursesWindow5scanwEPKcz>
     b78:	ldr	x9, [x8]
     b7c:	add	x10, x9, #0x8
     b80:	str	x10, [x8]
     b84:	ldr	x1, [x9]
     b88:	str	x1, [sp, #8]
     b8c:	cbz	x1, c04 <_nc_xx_ripoff_init+0xa4>
     b90:	mov	x19, x0
     b94:	mov	w0, #0x30                  	// #48
     b98:	bl	0 <_Znwm>
     b9c:	adrp	x8, 0 <_ZN13NCursesWindow5scanwEPKcz>
     ba0:	adrp	x22, 8 <_ZN13NCursesWindow5scanwEPKcz+0x8>
     ba4:	ldr	x8, [x8]
     ba8:	ldr	x22, [x22]
     bac:	mov	x20, x0
     bb0:	strb	wzr, [x0, #16]
     bb4:	add	x8, x8, #0x10
     bb8:	ldrb	w9, [x22]
     bbc:	stp	x8, xzr, [x0]
     bc0:	stp	xzr, xzr, [x0, #32]
     bc4:	str	xzr, [x0, #24]
     bc8:	cbnz	w9, c2c <_nc_xx_ripoff_init+0xcc>
     bcc:	bl	0 <initscr>
     bd0:	adrp	x21, c <_ZN13NCursesWindow5scanwEPKcz+0xc>
     bd4:	ldr	x21, [x21]
     bd8:	mov	w9, #0x1                   	// #1
     bdc:	strb	w9, [x22]
     be0:	ldr	w8, [x21]
     be4:	cmn	w8, #0x1
     be8:	b.ne	c24 <_nc_xx_ripoff_init+0xc4>  // b.any
     bec:	str	wzr, [x21]
     bf0:	bl	0 <has_colors>
     bf4:	tbz	w0, #0, c1c <_nc_xx_ripoff_init+0xbc>
     bf8:	bl	0 <start_color>
     bfc:	mov	w8, #0x2                   	// #2
     c00:	b	c20 <_nc_xx_ripoff_init+0xc0>
     c04:	ldp	x20, x19, [sp, #48]
     c08:	ldp	x22, x21, [sp, #32]
     c0c:	ldp	x29, x30, [sp, #16]
     c10:	mov	w0, #0xffffffff            	// #-1
     c14:	add	sp, sp, #0x40
     c18:	ret
     c1c:	mov	w8, #0x1                   	// #1
     c20:	str	w8, [x21]
     c24:	bl	0 <noecho>
     c28:	bl	0 <cbreak>
     c2c:	str	x19, [x20, #8]
     c30:	mov	x0, x20
     c34:	ldr	x1, [sp, #8]
     c38:	ldp	x20, x19, [sp, #48]
     c3c:	ldp	x22, x21, [sp, #32]
     c40:	ldp	x29, x30, [sp, #16]
     c44:	add	sp, sp, #0x40
     c48:	br	x1
     c4c:	mov	x19, x0
     c50:	mov	x0, x20
     c54:	bl	0 <_ZdlPv>
     c58:	mov	x0, x19
     c5c:	bl	0 <_Unwind_Resume>

0000000000000c60 <_ZN13NCursesWindow10ripofflineEiPFiRS_E>:
     c60:	stp	x29, x30, [sp, #-32]!
     c64:	stp	x20, x19, [sp, #16]
     c68:	mov	x29, sp
     c6c:	mov	x19, x1
     c70:	adrp	x1, b60 <_nc_xx_ripoff_init>
     c74:	ldr	x1, [x1]
     c78:	mov	w20, w0
     c7c:	bl	0 <_nc_ripoffline>
     c80:	cbz	w20, ca8 <_ZN13NCursesWindow10ripofflineEiPFiRS_E+0x48>
     c84:	cbz	x19, ca8 <_ZN13NCursesWindow10ripofflineEiPFiRS_E+0x48>
     c88:	cbnz	w0, ca8 <_ZN13NCursesWindow10ripofflineEiPFiRS_E+0x48>
     c8c:	adrp	x8, 0 <_ZN13NCursesWindow5scanwEPKcz>
     c90:	ldrsw	x9, [x8]
     c94:	adrp	x10, 0 <_ZN13NCursesWindow5scanwEPKcz>
     c98:	add	x10, x10, #0x0
     c9c:	add	w11, w9, #0x1
     ca0:	str	w11, [x8]
     ca4:	str	x19, [x10, x9, lsl #3]
     ca8:	ldp	x20, x19, [sp, #16]
     cac:	ldp	x29, x30, [sp], #32
     cb0:	ret

0000000000000cb4 <_ZN13NCursesWindow12isDescendantERS_>:
     cb4:	stp	x29, x30, [sp, #-32]!
     cb8:	stp	x20, x19, [sp, #16]
     cbc:	ldr	x19, [x0, #32]
     cc0:	mov	x29, sp
     cc4:	cbz	x19, cec <_ZN13NCursesWindow12isDescendantERS_+0x38>
     cc8:	mov	x20, x1
     ccc:	cmp	x19, x20
     cd0:	b.eq	cf4 <_ZN13NCursesWindow12isDescendantERS_+0x40>  // b.none
     cd4:	mov	x0, x19
     cd8:	mov	x1, x20
     cdc:	bl	cb4 <_ZN13NCursesWindow12isDescendantERS_>
     ce0:	tbnz	w0, #0, cf4 <_ZN13NCursesWindow12isDescendantERS_+0x40>
     ce4:	ldr	x19, [x19, #40]
     ce8:	cbnz	x19, ccc <_ZN13NCursesWindow12isDescendantERS_+0x18>
     cec:	mov	w0, wzr
     cf0:	b	cf8 <_ZN13NCursesWindow12isDescendantERS_+0x44>
     cf4:	mov	w0, #0x1                   	// #1
     cf8:	ldp	x20, x19, [sp, #16]
     cfc:	ldp	x29, x30, [sp], #32
     d00:	ret

0000000000000d04 <_ZN13NCursesWindow15kill_subwindowsEv>:
     d04:	stp	x29, x30, [sp, #-32]!
     d08:	stp	x20, x19, [sp, #16]
     d0c:	mov	x29, sp
     d10:	ldr	x20, [x0, #32]
     d14:	str	xzr, [x0, #32]
     d18:	cbnz	x20, d3c <_ZN13NCursesWindow15kill_subwindowsEv+0x38>
     d1c:	ldp	x20, x19, [sp, #16]
     d20:	ldp	x29, x30, [sp], #32
     d24:	ret
     d28:	ldr	x8, [x19]
     d2c:	mov	x0, x19
     d30:	ldr	x8, [x8, #16]
     d34:	blr	x8
     d38:	cbz	x20, d1c <_ZN13NCursesWindow15kill_subwindowsEv+0x18>
     d3c:	mov	x19, x20
     d40:	ldr	x20, [x20, #40]
     d44:	mov	x0, x19
     d48:	bl	d04 <_ZN13NCursesWindow15kill_subwindowsEv>
     d4c:	ldrb	w8, [x19, #16]
     d50:	cbz	w8, d28 <_ZN13NCursesWindow15kill_subwindowsEv+0x24>
     d54:	ldr	x0, [x19, #8]
     d58:	cbz	x0, d28 <_ZN13NCursesWindow15kill_subwindowsEv+0x24>
     d5c:	bl	0 <delwin>
     d60:	b	d28 <_ZN13NCursesWindow15kill_subwindowsEv+0x24>

0000000000000d64 <_ZN13NCursesWindowD1Ev>:
     d64:	stp	x29, x30, [sp, #-32]!
     d68:	str	x19, [sp, #16]
     d6c:	mov	x29, sp
     d70:	adrp	x8, 0 <_ZN13NCursesWindow5scanwEPKcz>
     d74:	ldr	x8, [x8]
     d78:	mov	x19, x0
     d7c:	add	x8, x8, #0x10
     d80:	str	x8, [x0]
     d84:	bl	d04 <_ZN13NCursesWindow15kill_subwindowsEv>
     d88:	ldr	x8, [x19, #24]
     d8c:	cbz	x8, dc4 <_ZN13NCursesWindowD1Ev+0x60>
     d90:	ldr	x9, [x8, #32]
     d94:	cbz	x9, dc4 <_ZN13NCursesWindowD1Ev+0x60>
     d98:	cmp	x9, x19
     d9c:	b.eq	e2c <_ZN13NCursesWindowD1Ev+0xc8>  // b.none
     da0:	ldr	x11, [x9, #40]
     da4:	cbz	x11, dc4 <_ZN13NCursesWindowD1Ev+0x60>
     da8:	cmp	x11, x19
     dac:	mov	x10, x9
     db0:	mov	x9, x11
     db4:	b.ne	da0 <_ZN13NCursesWindowD1Ev+0x3c>  // b.any
     db8:	ldr	x9, [x19, #40]
     dbc:	cbz	x10, e38 <_ZN13NCursesWindowD1Ev+0xd4>
     dc0:	str	x9, [x10, #40]
     dc4:	ldrb	w8, [x19, #16]
     dc8:	cbz	w8, e20 <_ZN13NCursesWindowD1Ev+0xbc>
     dcc:	ldr	x0, [x19, #8]
     dd0:	cbz	x0, de0 <_ZN13NCursesWindowD1Ev+0x7c>
     dd4:	bl	0 <delwin>
     dd8:	ldrb	w8, [x19, #16]
     ddc:	cbz	w8, e20 <_ZN13NCursesWindowD1Ev+0xbc>
     de0:	adrp	x9, 0 <_ZN13NCursesWindow5scanwEPKcz>
     de4:	ldr	x9, [x9]
     de8:	ldr	x8, [x9]
     dec:	subs	x10, x8, #0x1
     df0:	str	x10, [x9]
     df4:	b.eq	e1c <_ZN13NCursesWindowD1Ev+0xb8>  // b.none
     df8:	cmp	x8, #0x0
     dfc:	b.gt	e20 <_ZN13NCursesWindowD1Ev+0xbc>
     e00:	ldr	x8, [x19]
     e04:	ldr	x8, [x8]
     e08:	adrp	x1, 0 <_ZN13NCursesWindow5scanwEPKcz>
     e0c:	add	x1, x1, #0x0
     e10:	mov	x0, x19
     e14:	blr	x8
     e18:	b	e20 <_ZN13NCursesWindowD1Ev+0xbc>
     e1c:	bl	0 <endwin>
     e20:	ldr	x19, [sp, #16]
     e24:	ldp	x29, x30, [sp], #32
     e28:	ret
     e2c:	mov	x10, xzr
     e30:	ldr	x9, [x19, #40]
     e34:	cbnz	x10, dc0 <_ZN13NCursesWindowD1Ev+0x5c>
     e38:	str	x9, [x8, #32]
     e3c:	ldrb	w8, [x19, #16]
     e40:	cbnz	w8, dcc <_ZN13NCursesWindowD1Ev+0x68>
     e44:	b	e20 <_ZN13NCursesWindowD1Ev+0xbc>
     e48:	bl	0 <__cxa_call_unexpected>

0000000000000e4c <_ZN13NCursesWindowD0Ev>:
     e4c:	stp	x29, x30, [sp, #-48]!
     e50:	str	x21, [sp, #16]
     e54:	stp	x20, x19, [sp, #32]
     e58:	mov	x29, sp
     e5c:	mov	x19, x0
     e60:	bl	d64 <_ZN13NCursesWindowD1Ev>
     e64:	mov	x0, x19
     e68:	ldp	x20, x19, [sp, #32]
     e6c:	ldr	x21, [sp, #16]
     e70:	ldp	x29, x30, [sp], #48
     e74:	b	0 <_ZdlPv>
     e78:	mov	x20, x0
     e7c:	mov	x0, x19
     e80:	mov	x21, x1
     e84:	bl	0 <_ZdlPv>
     e88:	mov	x0, x20
     e8c:	tbz	w21, #31, e94 <_ZN13NCursesWindowD0Ev+0x48>
     e90:	bl	0 <__cxa_call_unexpected>
     e94:	bl	0 <_Unwind_Resume>

0000000000000e98 <_ZNK13NCursesWindow7getPairEv>:
     e98:	ldr	x8, [x0, #8]
     e9c:	cbz	x8, ea8 <_ZNK13NCursesWindow7getPairEv+0x10>
     ea0:	ldrb	w0, [x8, #17]
     ea4:	ret
     ea8:	mov	w0, wzr
     eac:	ret

0000000000000eb0 <_ZNK13NCursesWindow8getcolorEi>:
     eb0:	sub	sp, sp, #0x30
     eb4:	stp	x29, x30, [sp, #16]
     eb8:	stp	x20, x19, [sp, #32]
     ebc:	add	x29, sp, #0x10
     ec0:	adrp	x8, c <_ZN13NCursesWindow5scanwEPKcz+0xc>
     ec4:	ldr	x8, [x8]
     ec8:	mov	w19, w1
     ecc:	ldr	w8, [x8]
     ed0:	cmp	w8, #0x2
     ed4:	b.ne	eec <_ZNK13NCursesWindow8getcolorEi+0x3c>  // b.any
     ed8:	ldr	x8, [x0, #8]
     edc:	mov	x20, x0
     ee0:	cbz	x8, efc <_ZNK13NCursesWindow8getcolorEi+0x4c>
     ee4:	ldrb	w0, [x8, #17]
     ee8:	b	f00 <_ZNK13NCursesWindow8getcolorEi+0x50>
     eec:	mov	w8, #0x7                   	// #7
     ef0:	strh	wzr, [sp, #8]
     ef4:	sturh	w8, [x29, #-4]
     ef8:	b	f2c <_ZNK13NCursesWindow8getcolorEi+0x7c>
     efc:	mov	w0, wzr
     f00:	sub	x1, x29, #0x4
     f04:	add	x2, sp, #0x8
     f08:	bl	0 <pair_content>
     f0c:	cmn	w0, #0x1
     f10:	b.ne	f2c <_ZNK13NCursesWindow8getcolorEi+0x7c>  // b.any
     f14:	ldr	x8, [x20]
     f18:	adrp	x1, 0 <_ZN13NCursesWindow5scanwEPKcz>
     f1c:	add	x1, x1, #0x0
     f20:	mov	x0, x20
     f24:	ldr	x8, [x8]
     f28:	blr	x8
     f2c:	cmp	w19, #0x0
     f30:	add	x8, sp, #0x8
     f34:	sub	x9, x29, #0x4
     f38:	csel	x8, x9, x8, eq  // eq = none
     f3c:	ldrh	w0, [x8]
     f40:	ldp	x20, x19, [sp, #32]
     f44:	ldp	x29, x30, [sp, #16]
     f48:	add	sp, sp, #0x30
     f4c:	ret

0000000000000f50 <_ZN13NCursesWindow14NumberOfColorsEv>:
     f50:	adrp	x8, c <_ZN13NCursesWindow5scanwEPKcz+0xc>
     f54:	ldr	x8, [x8]
     f58:	adrp	x9, 0 <COLORS>
     f5c:	ldr	w8, [x8]
     f60:	ldr	x9, [x9]
     f64:	cmp	w8, #0x2
     f68:	ldr	w9, [x9]
     f6c:	csinc	w0, w9, wzr, eq  // eq = none
     f70:	ret

0000000000000f74 <_ZNK13NCursesWindow8getcolorEv>:
     f74:	adrp	x8, c <_ZN13NCursesWindow5scanwEPKcz+0xc>
     f78:	ldr	x8, [x8]
     f7c:	ldr	w8, [x8]
     f80:	cmp	w8, #0x2
     f84:	b.ne	f98 <_ZNK13NCursesWindow8getcolorEv+0x24>  // b.any
     f88:	ldr	x8, [x0, #8]
     f8c:	cbz	x8, f98 <_ZNK13NCursesWindow8getcolorEv+0x24>
     f90:	ldrb	w0, [x8, #17]
     f94:	ret
     f98:	mov	w0, wzr
     f9c:	ret

0000000000000fa0 <_ZN13NCursesWindow10setpaletteEsss>:
     fa0:	adrp	x9, c <_ZN13NCursesWindow5scanwEPKcz+0xc>
     fa4:	ldr	x9, [x9]
     fa8:	ldr	w9, [x9]
     fac:	cmp	w9, #0x2
     fb0:	b.ne	fc8 <_ZN13NCursesWindow10setpaletteEsss+0x28>  // b.any
     fb4:	mov	w8, w1
     fb8:	mov	w1, w0
     fbc:	mov	w0, w2
     fc0:	mov	w2, w8
     fc4:	b	0 <init_pair>
     fc8:	mov	w0, wzr
     fcc:	ret

0000000000000fd0 <_ZN13NCursesWindow10setpaletteEss>:
     fd0:	ldr	x8, [x0, #8]
     fd4:	cbz	x8, fe0 <_ZN13NCursesWindow10setpaletteEss+0x10>
     fd8:	ldrb	w0, [x8, #17]
     fdc:	b	fe4 <_ZN13NCursesWindow10setpaletteEss+0x14>
     fe0:	mov	w0, wzr
     fe4:	adrp	x8, c <_ZN13NCursesWindow5scanwEPKcz+0xc>
     fe8:	ldr	x8, [x8]
     fec:	ldr	w8, [x8]
     ff0:	cmp	w8, #0x2
     ff4:	b.ne	ffc <_ZN13NCursesWindow10setpaletteEss+0x2c>  // b.any
     ff8:	b	0 <init_pair>
     ffc:	mov	w0, wzr
    1000:	ret

0000000000001004 <_ZN13NCursesWindow8setcolorEs>:
    1004:	stp	x29, x30, [sp, #-32]!
    1008:	stp	x20, x19, [sp, #16]
    100c:	mov	x29, sp
    1010:	adrp	x8, c <_ZN13NCursesWindow5scanwEPKcz+0xc>
    1014:	ldr	x8, [x8]
    1018:	ldr	w8, [x8]
    101c:	cmp	w8, #0x2
    1020:	b.ne	1088 <_ZN13NCursesWindow8setcolorEs+0x84>  // b.any
    1024:	sxth	w20, w1
    1028:	mov	x19, x0
    102c:	cmp	w20, #0x1
    1030:	b.lt	1048 <_ZN13NCursesWindow8setcolorEs+0x44>  // b.tstop
    1034:	adrp	x8, 0 <COLOR_PAIRS>
    1038:	ldr	x8, [x8]
    103c:	ldr	w8, [x8]
    1040:	cmp	w8, w20
    1044:	b.ge	1060 <_ZN13NCursesWindow8setcolorEs+0x5c>  // b.tcont
    1048:	ldr	x8, [x19]
    104c:	adrp	x1, 0 <_ZN13NCursesWindow5scanwEPKcz>
    1050:	add	x1, x1, #0x0
    1054:	mov	x0, x19
    1058:	ldr	x8, [x8]
    105c:	blr	x8
    1060:	ldr	x0, [x19, #8]
    1064:	mov	w1, #0xff00                	// #65280
    1068:	mov	x2, xzr
    106c:	bl	0 <wattr_off>
    1070:	ldr	x8, [x19, #8]
    1074:	cbz	x8, 1088 <_ZN13NCursesWindow8setcolorEs+0x84>
    1078:	ubfiz	w9, w20, #8, #8
    107c:	lsr	w10, w9, #8
    1080:	str	w10, [x8, #116]
    1084:	str	w9, [x8, #16]
    1088:	ldp	x20, x19, [sp, #16]
    108c:	mov	w0, wzr
    1090:	ldp	x29, x30, [sp], #32
    1094:	ret

0000000000001098 <_ZNK13NCursesWindow9has_mouseEv>:
    1098:	stp	x29, x30, [sp, #-16]!
    109c:	mov	x29, sp
    10a0:	mov	w0, #0x199                 	// #409
    10a4:	bl	0 <has_key>
    10a8:	cbz	w0, 10b8 <_ZNK13NCursesWindow9has_mouseEv+0x20>
    10ac:	mov	w0, #0x1                   	// #1
    10b0:	ldp	x29, x30, [sp], #16
    10b4:	ret
    10b8:	ldp	x29, x30, [sp], #16
    10bc:	b	0 <has_mouse>

Disassembly of section .text._ZN13NCursesWindow5mvwinEii:

0000000000000000 <_ZN13NCursesWindow5mvwinEii>:
   0:	ldr	x0, [x0, #8]
   4:	b	0 <mvwin>

Disassembly of section .text._ZN13NCursesWindow7refreshEv:

0000000000000000 <_ZN13NCursesWindow7refreshEv>:
   0:	ldr	x0, [x0, #8]
   4:	b	0 <wrefresh>

Disassembly of section .text._ZN13NCursesWindow11noutrefreshEv:

0000000000000000 <_ZN13NCursesWindow11noutrefreshEv>:
   0:	ldr	x0, [x0, #8]
   4:	b	0 <wnoutrefresh>

Disassembly of section .text._ZN16NCursesExceptionD2Ev:

0000000000000000 <_ZN16NCursesExceptionD2Ev>:
   0:	ret

Disassembly of section .text._ZNK16NCursesException9classnameEv:

0000000000000000 <_ZNK16NCursesException9classnameEv>:
   0:	adrp	x0, 0 <_ZNK16NCursesException9classnameEv>
   4:	add	x0, x0, #0x0
   8:	ret

Disassembly of section .text._ZN16NCursesExceptionD0Ev:

0000000000000000 <_ZN16NCursesExceptionD0Ev>:
   0:	b	0 <_ZdlPv>

cursespad.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN10NCursesPadC1Eii>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	w20, w2
  14:	mov	w21, w1
  18:	mov	x19, x0
  1c:	bl	0 <_ZN13NCursesWindowC2Ev>
  20:	adrp	x8, 0 <_ZN10NCursesPadC1Eii>
  24:	ldr	x8, [x8]
  28:	movi	v0.2d, #0x0
  2c:	stp	q0, q0, [x19, #48]
  30:	add	x8, x8, #0x10
  34:	str	x8, [x19]
  38:	mov	w0, w21
  3c:	mov	w1, w20
  40:	bl	0 <newpad>
  44:	str	x0, [x19, #8]
  48:	cbnz	x0, 78 <_ZN10NCursesPadC1Eii+0x78>
  4c:	adrp	x8, 0 <_ZN13NCursesWindow5countE>
  50:	ldr	x8, [x8]
  54:	ldr	x9, [x8]
  58:	sub	x9, x9, #0x1
  5c:	str	x9, [x8]
  60:	ldr	x8, [x19]
  64:	ldr	x8, [x8]
  68:	adrp	x1, 0 <_ZN10NCursesPadC1Eii>
  6c:	add	x1, x1, #0x0
  70:	mov	x0, x19
  74:	blr	x8
  78:	mov	w8, #0x1                   	// #1
  7c:	strb	w8, [x19, #16]
  80:	ldp	x20, x19, [sp, #32]
  84:	ldr	x21, [sp, #16]
  88:	ldp	x29, x30, [sp], #48
  8c:	ret
  90:	mov	x20, x0
  94:	mov	x0, x19
  98:	bl	0 <_ZN13NCursesWindowD2Ev>
  9c:	mov	x0, x20
  a0:	bl	0 <_Unwind_Resume>
  a4:	bl	0 <_ZN10NCursesPadC1Eii>

00000000000000a8 <_ZN10NCursesPad6driverEi>:
  a8:	sub	w8, w1, #0x102
  ac:	cmp	w8, #0x3
  b0:	b.hi	d8 <_ZN10NCursesPad6driverEi+0x30>  // b.pmore
  b4:	adrp	x9, 0 <_ZN10NCursesPadC1Eii>
  b8:	add	x9, x9, #0x0
  bc:	adr	x10, d0 <_ZN10NCursesPad6driverEi+0x28>
  c0:	ldrb	w11, [x9, x8]
  c4:	add	x10, x10, x11, lsl #2
  c8:	mov	w0, #0x201                 	// #513
  cc:	br	x10
  d0:	mov	w0, #0x202                 	// #514
  d4:	ret
  d8:	mov	w0, w1
  dc:	cmp	w1, #0x18
  e0:	b.eq	ec <_ZN10NCursesPad6driverEi+0x44>  // b.none
  e4:	cmp	w0, #0x169
  e8:	b.ne	100 <_ZN10NCursesPad6driverEi+0x58>  // b.any
  ec:	mov	w0, #0x205                 	// #517
  f0:	ret
  f4:	mov	w0, #0x203                 	// #515
  f8:	ret
  fc:	mov	w0, #0x204                 	// #516
 100:	ret

0000000000000104 <_ZN10NCursesPadclEv>:
 104:	stp	x29, x30, [sp, #-96]!
 108:	str	x27, [sp, #16]
 10c:	stp	x26, x25, [sp, #32]
 110:	stp	x24, x23, [sp, #48]
 114:	stp	x22, x21, [sp, #64]
 118:	stp	x20, x19, [sp, #80]
 11c:	mov	x29, sp
 120:	ldr	x21, [x0, #56]
 124:	mov	x19, x0
 128:	cbnz	x21, 134 <_ZN10NCursesPadclEv+0x30>
 12c:	ldr	x21, [x19, #48]
 130:	cbz	x21, 400 <_ZN10NCursesPadclEv+0x2fc>
 134:	ldr	x0, [x21, #8]
 138:	cbz	x0, 16c <_ZN10NCursesPadclEv+0x68>
 13c:	ldrh	w8, [x0, #6]
 140:	ldrh	w9, [x0, #4]
 144:	mov	w10, #0xfffe                	// #65534
 148:	cmp	w8, w10
 14c:	csinv	w8, w8, wzr, ne  // ne = any
 150:	cmp	w9, w10
 154:	sxth	w8, w8
 158:	csinv	w9, w9, wzr, ne  // ne = any
 15c:	add	w22, w8, #0x1
 160:	sxth	w8, w9
 164:	add	w23, w8, #0x1
 168:	b	174 <_ZN10NCursesPadclEv+0x70>
 16c:	mov	w22, wzr
 170:	mov	w23, wzr
 174:	mov	w1, #0x1                   	// #1
 178:	bl	0 <keypad>
 17c:	ldr	x0, [x21, #8]
 180:	mov	w1, #0x1                   	// #1
 184:	bl	0 <meta>
 188:	ldr	x8, [x19]
 18c:	mov	x0, x19
 190:	ldr	x8, [x8, #32]
 194:	blr	x8
 198:	adrp	x26, 0 <_ZN10NCursesPadC1Eii>
 19c:	mvn	w24, w23
 1a0:	mvn	w25, w22
 1a4:	mov	w20, #0x200                 	// #512
 1a8:	add	x26, x26, #0x0
 1ac:	mov	w27, #0xfffe                	// #65534
 1b0:	b	220 <_ZN10NCursesPadclEv+0x11c>
 1b4:	add	w8, w11, w9
 1b8:	str	w8, [x19, #76]
 1bc:	ldr	x8, [x19]
 1c0:	mov	x0, x19
 1c4:	ldr	x8, [x8, #40]
 1c8:	blr	x8
 1cc:	ldr	x0, [x21, #8]
 1d0:	bl	0 <wsyncup>
 1d4:	ldr	x8, [x19]
 1d8:	mov	x0, x19
 1dc:	mov	w1, w20
 1e0:	ldr	x8, [x8, #72]
 1e4:	blr	x8
 1e8:	ldr	x0, [x19, #48]
 1ec:	ldr	x8, [x0]
 1f0:	ldr	x8, [x8, #32]
 1f4:	blr	x8
 1f8:	ldr	x0, [x21, #8]
 1fc:	bl	0 <wgetch>
 200:	ldr	x8, [x19]
 204:	mov	w1, w0
 208:	mov	x0, x19
 20c:	ldr	x8, [x8, #48]
 210:	blr	x8
 214:	mov	w20, w0
 218:	cmp	w0, #0x205
 21c:	b.eq	400 <_ZN10NCursesPadclEv+0x2fc>  // b.none
 220:	sub	w8, w20, #0x200
 224:	cmp	w8, #0x4
 228:	b.hi	25c <_ZN10NCursesPadclEv+0x158>  // b.pmore
 22c:	adr	x9, 1bc <_ZN10NCursesPadclEv+0xb8>
 230:	ldrb	w10, [x26, x8]
 234:	add	x9, x9, x10, lsl #2
 238:	br	x9
 23c:	ldr	w8, [x19, #72]
 240:	cmp	w8, #0x1
 244:	b.lt	2dc <_ZN10NCursesPadclEv+0x1d8>  // b.tstop
 248:	ldr	w9, [x19, #68]
 24c:	subs	w8, w8, w9
 250:	b.ge	370 <_ZN10NCursesPadclEv+0x26c>  // b.tcont
 254:	str	wzr, [x19, #72]
 258:	b	1bc <_ZN10NCursesPadclEv+0xb8>
 25c:	ldr	x8, [x19]
 260:	mov	x0, x19
 264:	mov	w1, w20
 268:	ldr	x8, [x8, #56]
 26c:	blr	x8
 270:	b	1f8 <_ZN10NCursesPadclEv+0xf4>
 274:	ldr	x8, [x19, #8]
 278:	ldr	w9, [x19, #72]
 27c:	cbz	x8, 2e8 <_ZN10NCursesPadclEv+0x1e4>
 280:	ldrh	w10, [x8, #4]
 284:	cmp	w10, w27
 288:	csinv	w10, w10, wzr, ne  // ne = any
 28c:	sxth	w10, w10
 290:	add	w10, w10, #0x1
 294:	b	2ec <_ZN10NCursesPadclEv+0x1e8>
 298:	ldr	w8, [x19, #76]
 29c:	cmp	w8, #0x1
 2a0:	b.lt	320 <_ZN10NCursesPadclEv+0x21c>  // b.tstop
 2a4:	ldr	w9, [x19, #64]
 2a8:	subs	w8, w8, w9
 2ac:	b.ge	1b8 <_ZN10NCursesPadclEv+0xb4>  // b.tcont
 2b0:	str	wzr, [x19, #76]
 2b4:	b	1bc <_ZN10NCursesPadclEv+0xb8>
 2b8:	ldr	x8, [x19, #8]
 2bc:	ldr	w9, [x19, #76]
 2c0:	cbz	x8, 32c <_ZN10NCursesPadclEv+0x228>
 2c4:	ldrh	w10, [x8, #6]
 2c8:	cmp	w10, w27
 2cc:	csinv	w10, w10, wzr, ne  // ne = any
 2d0:	sxth	w10, w10
 2d4:	add	w10, w10, #0x1
 2d8:	b	330 <_ZN10NCursesPadclEv+0x22c>
 2dc:	ldr	x8, [x19]
 2e0:	mov	w1, #0x201                 	// #513
 2e4:	b	360 <_ZN10NCursesPadclEv+0x25c>
 2e8:	mov	w10, wzr
 2ec:	add	w10, w10, w24
 2f0:	cmp	w9, w10
 2f4:	b.ge	314 <_ZN10NCursesPadclEv+0x210>  // b.tcont
 2f8:	cbz	x8, 378 <_ZN10NCursesPadclEv+0x274>
 2fc:	ldrh	w10, [x8, #4]
 300:	cmp	w10, w27
 304:	csinv	w10, w10, wzr, ne  // ne = any
 308:	sxth	w10, w10
 30c:	add	w10, w10, #0x1
 310:	b	37c <_ZN10NCursesPadclEv+0x278>
 314:	ldr	x8, [x19]
 318:	mov	w1, #0x202                 	// #514
 31c:	b	360 <_ZN10NCursesPadclEv+0x25c>
 320:	ldr	x8, [x19]
 324:	mov	w1, #0x203                 	// #515
 328:	b	360 <_ZN10NCursesPadclEv+0x25c>
 32c:	mov	w10, wzr
 330:	add	w10, w10, w25
 334:	cmp	w9, w10
 338:	b.ge	358 <_ZN10NCursesPadclEv+0x254>  // b.tcont
 33c:	cbz	x8, 3c4 <_ZN10NCursesPadclEv+0x2c0>
 340:	ldrh	w10, [x8, #6]
 344:	cmp	w10, w27
 348:	csinv	w10, w10, wzr, ne  // ne = any
 34c:	sxth	w10, w10
 350:	add	w10, w10, #0x1
 354:	b	3c8 <_ZN10NCursesPadclEv+0x2c4>
 358:	ldr	x8, [x19]
 35c:	mov	w1, #0x204                 	// #516
 360:	ldr	x8, [x8, #64]
 364:	mov	x0, x19
 368:	blr	x8
 36c:	b	1f8 <_ZN10NCursesPadclEv+0xf4>
 370:	str	w8, [x19, #72]
 374:	b	1bc <_ZN10NCursesPadclEv+0xb8>
 378:	mov	w10, wzr
 37c:	ldr	w11, [x19, #68]
 380:	sub	w10, w10, w23
 384:	mvn	w12, w11
 388:	add	w10, w10, w12
 38c:	cmp	w9, w10
 390:	b.le	3b8 <_ZN10NCursesPadclEv+0x2b4>
 394:	cbz	x8, 3ac <_ZN10NCursesPadclEv+0x2a8>
 398:	ldrh	w8, [x8, #4]
 39c:	cmp	w8, w27
 3a0:	csinv	w8, w8, wzr, ne  // ne = any
 3a4:	sxth	w8, w8
 3a8:	add	w8, w8, #0x1
 3ac:	add	w8, w8, w24
 3b0:	str	w8, [x19, #72]
 3b4:	b	1bc <_ZN10NCursesPadclEv+0xb8>
 3b8:	add	w8, w11, w9
 3bc:	str	w8, [x19, #72]
 3c0:	b	1bc <_ZN10NCursesPadclEv+0xb8>
 3c4:	mov	w10, wzr
 3c8:	ldr	w11, [x19, #64]
 3cc:	sub	w10, w10, w22
 3d0:	mvn	w12, w11
 3d4:	add	w10, w10, w12
 3d8:	cmp	w9, w10
 3dc:	b.le	1b4 <_ZN10NCursesPadclEv+0xb0>
 3e0:	cbz	x8, 3f8 <_ZN10NCursesPadclEv+0x2f4>
 3e4:	ldrh	w8, [x8, #6]
 3e8:	cmp	w8, w27
 3ec:	csinv	w8, w8, wzr, ne  // ne = any
 3f0:	sxth	w8, w8
 3f4:	add	w8, w8, #0x1
 3f8:	add	w8, w8, w25
 3fc:	b	1b8 <_ZN10NCursesPadclEv+0xb4>
 400:	ldp	x20, x19, [sp, #80]
 404:	ldp	x22, x21, [sp, #64]
 408:	ldp	x24, x23, [sp, #48]
 40c:	ldp	x26, x25, [sp, #32]
 410:	ldr	x27, [sp, #16]
 414:	ldp	x29, x30, [sp], #96
 418:	ret

000000000000041c <_ZN10NCursesPad7refreshEv>:
 41c:	stp	x29, x30, [sp, #-32]!
 420:	str	x19, [sp, #16]
 424:	mov	x29, sp
 428:	ldr	x8, [x0]
 42c:	mov	x19, x0
 430:	ldr	x8, [x8, #40]
 434:	blr	x8
 438:	cbz	w0, 448 <_ZN10NCursesPad7refreshEv+0x2c>
 43c:	ldr	x19, [sp, #16]
 440:	ldp	x29, x30, [sp], #32
 444:	ret
 448:	ldr	x0, [x19, #48]
 44c:	cbz	x0, 43c <_ZN10NCursesPad7refreshEv+0x20>
 450:	ldr	x8, [x0]
 454:	ldr	x19, [sp, #16]
 458:	ldr	x1, [x8, #32]
 45c:	ldp	x29, x30, [sp], #32
 460:	br	x1

0000000000000464 <_ZN10NCursesPad11noutrefreshEv>:
 464:	sub	sp, sp, #0x30
 468:	stp	x29, x30, [sp, #16]
 46c:	stp	x20, x19, [sp, #32]
 470:	add	x29, sp, #0x10
 474:	ldr	x20, [x0, #56]
 478:	mov	x19, x0
 47c:	cbnz	x20, 488 <_ZN10NCursesPad11noutrefreshEv+0x24>
 480:	ldr	x20, [x19, #48]
 484:	cbz	x20, 500 <_ZN10NCursesPad11noutrefreshEv+0x9c>
 488:	ldr	x1, [x20, #8]
 48c:	cbz	x1, 4b8 <_ZN10NCursesPad11noutrefreshEv+0x54>
 490:	ldrh	w8, [x1, #4]
 494:	ldrh	w9, [x1, #6]
 498:	mov	w10, #0xfffe                	// #65534
 49c:	cmp	w8, w10
 4a0:	csinv	w8, w8, wzr, ne  // ne = any
 4a4:	cmp	w9, w10
 4a8:	sxth	w6, w8
 4ac:	csinv	w8, w9, wzr, ne  // ne = any
 4b0:	sxth	w7, w8
 4b4:	b	4c0 <_ZN10NCursesPad11noutrefreshEv+0x5c>
 4b8:	mov	w6, #0xffffffff            	// #-1
 4bc:	mov	w7, #0xffffffff            	// #-1
 4c0:	ldp	w2, w3, [x19, #72]
 4c4:	ldr	x0, [x19, #8]
 4c8:	mov	w4, wzr
 4cc:	mov	w5, wzr
 4d0:	str	wzr, [sp]
 4d4:	bl	0 <copywin>
 4d8:	cbnz	w0, 504 <_ZN10NCursesPad11noutrefreshEv+0xa0>
 4dc:	ldr	x0, [x20, #8]
 4e0:	bl	0 <wsyncup>
 4e4:	ldr	x0, [x19, #48]
 4e8:	ldp	x20, x19, [sp, #32]
 4ec:	ldp	x29, x30, [sp, #16]
 4f0:	ldr	x8, [x0]
 4f4:	ldr	x1, [x8, #40]
 4f8:	add	sp, sp, #0x30
 4fc:	br	x1
 500:	mov	w0, wzr
 504:	ldp	x20, x19, [sp, #32]
 508:	ldp	x29, x30, [sp, #16]
 50c:	add	sp, sp, #0x30
 510:	ret

0000000000000514 <_ZN10NCursesPad9setWindowER13NCursesWindowii>:
 514:	cmp	w2, #0x1
 518:	str	x1, [x0, #48]
 51c:	str	xzr, [x0, #72]
 520:	b.lt	534 <_ZN10NCursesPad9setWindowER13NCursesWindowii+0x20>  // b.tstop
 524:	cmp	w3, #0x0
 528:	b.le	534 <_ZN10NCursesPad9setWindowER13NCursesWindowii+0x20>
 52c:	stp	w3, w2, [x0, #64]
 530:	ret
 534:	ldr	x8, [x0]
 538:	adrp	x1, 0 <_ZN10NCursesPadC1Eii>
 53c:	add	x1, x1, #0x0
 540:	ldr	x2, [x8]
 544:	br	x2

0000000000000548 <_ZN10NCursesPad12setSubWindowER13NCursesWindow>:
 548:	stp	x29, x30, [sp, #-32]!
 54c:	stp	x20, x19, [sp, #16]
 550:	mov	x29, sp
 554:	mov	x19, x0
 558:	ldr	x0, [x0, #48]
 55c:	mov	x20, x1
 560:	cbnz	x0, 580 <_ZN10NCursesPad12setSubWindowER13NCursesWindow+0x38>
 564:	ldr	x8, [x19]
 568:	adrp	x1, 0 <_ZN10NCursesPadC1Eii>
 56c:	add	x1, x1, #0x0
 570:	mov	x0, x19
 574:	ldr	x8, [x8]
 578:	blr	x8
 57c:	ldr	x0, [x19, #48]
 580:	mov	x1, x20
 584:	bl	0 <_ZN13NCursesWindow12isDescendantERS_>
 588:	tbz	w0, #0, 59c <_ZN10NCursesPad12setSubWindowER13NCursesWindow+0x54>
 58c:	str	x20, [x19, #56]
 590:	ldp	x20, x19, [sp, #16]
 594:	ldp	x29, x30, [sp], #32
 598:	ret
 59c:	mov	w0, #0x18                  	// #24
 5a0:	bl	0 <__cxa_allocate_exception>
 5a4:	adrp	x8, 0 <_ZN10NCursesPadC1Eii>
 5a8:	ldr	x8, [x8]
 5ac:	adrp	x9, 0 <_ZN10NCursesPadC1Eii>
 5b0:	add	x9, x9, #0x0
 5b4:	mov	w10, #0xffffffff            	// #-1
 5b8:	add	x8, x8, #0x10
 5bc:	stp	x8, x9, [x0]
 5c0:	str	w10, [x0, #16]
 5c4:	adrp	x1, 0 <_ZN10NCursesPadC1Eii>
 5c8:	adrp	x2, 0 <_ZN10NCursesPadC1Eii>
 5cc:	ldr	x1, [x1]
 5d0:	ldr	x2, [x2]
 5d4:	bl	0 <__cxa_throw>

00000000000005d8 <_ZN16NCursesFramedPad11OnOperationEi>:
 5d8:	sub	sp, sp, #0x70
 5dc:	stp	x29, x30, [sp, #16]
 5e0:	stp	x28, x27, [sp, #32]
 5e4:	stp	x26, x25, [sp, #48]
 5e8:	stp	x24, x23, [sp, #64]
 5ec:	stp	x22, x21, [sp, #80]
 5f0:	stp	x20, x19, [sp, #96]
 5f4:	add	x29, sp, #0x10
 5f8:	ldp	x24, x8, [x0, #48]
 5fc:	cmp	x8, #0x0
 600:	csel	x8, x24, x8, eq  // eq = none
 604:	cbz	x8, 680 <_ZN16NCursesFramedPad11OnOperationEi+0xa8>
 608:	cbz	x24, 680 <_ZN16NCursesFramedPad11OnOperationEi+0xa8>
 60c:	ldr	x8, [x8, #8]
 610:	cbz	x8, 6a0 <_ZN16NCursesFramedPad11OnOperationEi+0xc8>
 614:	ldrh	w9, [x8, #6]
 618:	ldrh	w8, [x8, #4]
 61c:	mov	w10, #0xfffe                	// #65534
 620:	cmp	w9, w10
 624:	csinv	w9, w9, wzr, ne  // ne = any
 628:	cmp	w8, w10
 62c:	csinv	w8, w8, wzr, ne  // ne = any
 630:	sxth	w9, w9
 634:	sxth	w8, w8
 638:	add	w19, w9, #0x1
 63c:	add	w20, w8, #0x1
 640:	ldr	x10, [x0, #8]
 644:	cbz	x10, 6b0 <_ZN16NCursesFramedPad11OnOperationEi+0xd8>
 648:	ldrh	w8, [x10, #6]
 64c:	mov	w11, #0xfffe                	// #65534
 650:	cmp	w8, w11
 654:	csinv	w8, w8, wzr, ne  // ne = any
 658:	sxth	w8, w8
 65c:	adds	w9, w8, #0x1
 660:	b.eq	6c4 <_ZN16NCursesFramedPad11OnOperationEi+0xec>  // b.none
 664:	madd	w12, w19, w19, w8
 668:	sdiv	w12, w12, w9
 66c:	cmp	w12, #0x0
 670:	csinc	w12, w12, wzr, ne  // ne = any
 674:	cmp	w12, w19
 678:	csel	w25, w19, w12, gt
 67c:	b	6c8 <_ZN16NCursesFramedPad11OnOperationEi+0xf0>
 680:	ldp	x20, x19, [sp, #96]
 684:	ldp	x22, x21, [sp, #80]
 688:	ldp	x24, x23, [sp, #64]
 68c:	ldp	x26, x25, [sp, #48]
 690:	ldp	x28, x27, [sp, #32]
 694:	ldp	x29, x30, [sp, #16]
 698:	add	sp, sp, #0x70
 69c:	ret
 6a0:	mov	w19, wzr
 6a4:	mov	w20, wzr
 6a8:	ldr	x10, [x0, #8]
 6ac:	cbnz	x10, 648 <_ZN16NCursesFramedPad11OnOperationEi+0x70>
 6b0:	mov	w26, wzr
 6b4:	mov	w28, wzr
 6b8:	mov	w25, #0x1                   	// #1
 6bc:	mov	w27, #0x1                   	// #1
 6c0:	b	760 <_ZN16NCursesFramedPad11OnOperationEi+0x188>
 6c4:	mov	w25, #0x1                   	// #1
 6c8:	ldrh	w10, [x10, #4]
 6cc:	cmp	w10, w11
 6d0:	csinv	w10, w10, wzr, ne  // ne = any
 6d4:	sxth	w10, w10
 6d8:	adds	w11, w10, #0x1
 6dc:	b.cc	6f0 <_ZN16NCursesFramedPad11OnOperationEi+0x118>  // b.lo, b.ul, b.last
 6e0:	mov	w27, #0x1                   	// #1
 6e4:	cbz	w9, 734 <_ZN16NCursesFramedPad11OnOperationEi+0x15c>
 6e8:	mov	w12, wzr
 6ec:	b	710 <_ZN16NCursesFramedPad11OnOperationEi+0x138>
 6f0:	madd	w12, w20, w20, w10
 6f4:	sdiv	w12, w12, w11
 6f8:	cmp	w12, #0x0
 6fc:	csinc	w12, w12, wzr, ne  // ne = any
 700:	cmp	w12, w20
 704:	csel	w27, w20, w12, gt
 708:	cbz	w9, 740 <_ZN16NCursesFramedPad11OnOperationEi+0x168>
 70c:	mov	w12, #0x1                   	// #1
 710:	ldr	w13, [x0, #76]
 714:	madd	w8, w13, w19, w8
 718:	sdiv	w8, w8, w9
 71c:	add	w9, w8, w25
 720:	sub	w13, w19, w25
 724:	cmp	w9, w19
 728:	csel	w26, w13, w8, gt
 72c:	cbz	w12, 738 <_ZN16NCursesFramedPad11OnOperationEi+0x160>
 730:	b	744 <_ZN16NCursesFramedPad11OnOperationEi+0x16c>
 734:	mov	w26, wzr
 738:	mov	w28, wzr
 73c:	b	760 <_ZN16NCursesFramedPad11OnOperationEi+0x188>
 740:	mov	w26, wzr
 744:	ldr	w8, [x0, #72]
 748:	madd	w8, w8, w20, w10
 74c:	sdiv	w8, w8, w11
 750:	add	w9, w8, w27
 754:	sub	w10, w20, w27
 758:	cmp	w9, w20
 75c:	csel	w28, w10, w8, gt
 760:	ldr	x22, [x24, #8]
 764:	add	w21, w19, #0x1
 768:	mov	w1, #0x1                   	// #1
 76c:	mov	w2, w21
 770:	mov	x0, x22
 774:	bl	0 <wmove>
 778:	cmn	w0, #0x1
 77c:	b.eq	790 <_ZN16NCursesFramedPad11OnOperationEi+0x1b8>  // b.none
 780:	mov	x0, x22
 784:	mov	w1, wzr
 788:	mov	w2, w20
 78c:	bl	0 <wvline>
 790:	ldr	x0, [x24, #8]
 794:	mov	w1, #0x40000               	// #262144
 798:	mov	x2, xzr
 79c:	bl	0 <wattr_on>
 7a0:	cmp	w27, #0x1
 7a4:	b.le	82c <_ZN16NCursesFramedPad11OnOperationEi+0x254>
 7a8:	stur	w26, [x29, #-4]
 7ac:	adrp	x8, 0 <acs_map>
 7b0:	ldr	x8, [x8]
 7b4:	ldr	x23, [x24, #8]
 7b8:	add	w1, w28, #0x1
 7bc:	mov	w2, w21
 7c0:	ldr	w22, [x8, #180]
 7c4:	mov	x0, x23
 7c8:	bl	0 <wmove>
 7cc:	cmn	w0, #0x1
 7d0:	b.eq	7e0 <_ZN16NCursesFramedPad11OnOperationEi+0x208>  // b.none
 7d4:	mov	x0, x23
 7d8:	mov	w1, w22
 7dc:	bl	0 <waddch>
 7e0:	cmp	w27, #0x3
 7e4:	b.lt	858 <_ZN16NCursesFramedPad11OnOperationEi+0x280>  // b.tstop
 7e8:	sub	w26, w27, #0x2
 7ec:	add	w22, w28, #0x2
 7f0:	b	800 <_ZN16NCursesFramedPad11OnOperationEi+0x228>
 7f4:	subs	w26, w26, #0x1
 7f8:	add	w22, w22, #0x1
 7fc:	b.eq	858 <_ZN16NCursesFramedPad11OnOperationEi+0x280>  // b.none
 800:	ldr	x23, [x24, #8]
 804:	mov	w1, w22
 808:	mov	w2, w21
 80c:	mov	x0, x23
 810:	bl	0 <wmove>
 814:	cmn	w0, #0x1
 818:	b.eq	7f4 <_ZN16NCursesFramedPad11OnOperationEi+0x21c>  // b.none
 81c:	mov	w1, #0x20                  	// #32
 820:	mov	x0, x23
 824:	bl	0 <waddch>
 828:	b	7f4 <_ZN16NCursesFramedPad11OnOperationEi+0x21c>
 82c:	b.ne	890 <_ZN16NCursesFramedPad11OnOperationEi+0x2b8>  // b.any
 830:	ldr	x22, [x24, #8]
 834:	add	w1, w28, #0x1
 838:	mov	w2, w21
 83c:	mov	x0, x22
 840:	bl	0 <wmove>
 844:	cmn	w0, #0x1
 848:	b.eq	890 <_ZN16NCursesFramedPad11OnOperationEi+0x2b8>  // b.none
 84c:	mov	w1, #0x20                  	// #32
 850:	mov	x0, x22
 854:	b	88c <_ZN16NCursesFramedPad11OnOperationEi+0x2b4>
 858:	adrp	x8, 0 <acs_map>
 85c:	ldr	x8, [x8]
 860:	ldr	x23, [x24, #8]
 864:	add	w1, w28, w27
 868:	mov	w2, w21
 86c:	ldr	w22, [x8, #184]
 870:	mov	x0, x23
 874:	bl	0 <wmove>
 878:	ldur	w26, [x29, #-4]
 87c:	cmn	w0, #0x1
 880:	b.eq	890 <_ZN16NCursesFramedPad11OnOperationEi+0x2b8>  // b.none
 884:	mov	x0, x23
 888:	mov	w1, w22
 88c:	bl	0 <waddch>
 890:	ldr	x0, [x24, #8]
 894:	mov	w1, #0x40000               	// #262144
 898:	mov	x2, xzr
 89c:	bl	0 <wattr_off>
 8a0:	ldr	x21, [x24, #8]
 8a4:	add	w20, w20, #0x1
 8a8:	mov	w2, #0x1                   	// #1
 8ac:	mov	w1, w20
 8b0:	mov	x0, x21
 8b4:	bl	0 <wmove>
 8b8:	cmn	w0, #0x1
 8bc:	b.eq	8d0 <_ZN16NCursesFramedPad11OnOperationEi+0x2f8>  // b.none
 8c0:	mov	x0, x21
 8c4:	mov	w1, wzr
 8c8:	mov	w2, w19
 8cc:	bl	0 <whline>
 8d0:	ldr	x0, [x24, #8]
 8d4:	mov	w1, #0x40000               	// #262144
 8d8:	mov	x2, xzr
 8dc:	bl	0 <wattr_on>
 8e0:	cmp	w25, #0x1
 8e4:	b.le	968 <_ZN16NCursesFramedPad11OnOperationEi+0x390>
 8e8:	adrp	x22, 0 <acs_map>
 8ec:	ldr	x22, [x22]
 8f0:	ldr	x21, [x24, #8]
 8f4:	add	w2, w26, #0x1
 8f8:	mov	w1, w20
 8fc:	ldr	w19, [x22, #176]
 900:	mov	x0, x21
 904:	bl	0 <wmove>
 908:	cmn	w0, #0x1
 90c:	b.eq	91c <_ZN16NCursesFramedPad11OnOperationEi+0x344>  // b.none
 910:	mov	x0, x21
 914:	mov	w1, w19
 918:	bl	0 <waddch>
 91c:	cmp	w25, #0x3
 920:	b.lt	994 <_ZN16NCursesFramedPad11OnOperationEi+0x3bc>  // b.tstop
 924:	sub	w23, w25, #0x2
 928:	add	w19, w26, #0x2
 92c:	b	93c <_ZN16NCursesFramedPad11OnOperationEi+0x364>
 930:	subs	w23, w23, #0x1
 934:	add	w19, w19, #0x1
 938:	b.eq	994 <_ZN16NCursesFramedPad11OnOperationEi+0x3bc>  // b.none
 93c:	ldr	x21, [x24, #8]
 940:	mov	w1, w20
 944:	mov	w2, w19
 948:	mov	x0, x21
 94c:	bl	0 <wmove>
 950:	cmn	w0, #0x1
 954:	b.eq	930 <_ZN16NCursesFramedPad11OnOperationEi+0x358>  // b.none
 958:	mov	w1, #0x20                  	// #32
 95c:	mov	x0, x21
 960:	bl	0 <waddch>
 964:	b	930 <_ZN16NCursesFramedPad11OnOperationEi+0x358>
 968:	b.ne	9c0 <_ZN16NCursesFramedPad11OnOperationEi+0x3e8>  // b.any
 96c:	ldr	x19, [x24, #8]
 970:	add	w2, w26, #0x1
 974:	mov	w1, w20
 978:	mov	x0, x19
 97c:	bl	0 <wmove>
 980:	cmn	w0, #0x1
 984:	b.eq	9c0 <_ZN16NCursesFramedPad11OnOperationEi+0x3e8>  // b.none
 988:	mov	w1, #0x20                  	// #32
 98c:	mov	x0, x19
 990:	b	9bc <_ZN16NCursesFramedPad11OnOperationEi+0x3e4>
 994:	ldr	x21, [x24, #8]
 998:	ldr	w19, [x22, #172]
 99c:	add	w2, w25, w26
 9a0:	mov	w1, w20
 9a4:	mov	x0, x21
 9a8:	bl	0 <wmove>
 9ac:	cmn	w0, #0x1
 9b0:	b.eq	9c0 <_ZN16NCursesFramedPad11OnOperationEi+0x3e8>  // b.none
 9b4:	mov	x0, x21
 9b8:	mov	w1, w19
 9bc:	bl	0 <waddch>
 9c0:	ldr	x0, [x24, #8]
 9c4:	ldp	x20, x19, [sp, #96]
 9c8:	ldp	x22, x21, [sp, #80]
 9cc:	ldp	x24, x23, [sp, #64]
 9d0:	ldp	x26, x25, [sp, #48]
 9d4:	ldp	x28, x27, [sp, #32]
 9d8:	ldp	x29, x30, [sp, #16]
 9dc:	mov	w1, #0x40000               	// #262144
 9e0:	mov	x2, xzr
 9e4:	add	sp, sp, #0x70
 9e8:	b	0 <wattr_off>

Disassembly of section .text.__clang_call_terminate:

0000000000000000 <__clang_call_terminate>:
   0:	str	x30, [sp, #-16]!
   4:	bl	0 <__cxa_begin_catch>
   8:	bl	0 <_ZSt9terminatev>

Disassembly of section .text._ZN10NCursesPadD0Ev:

0000000000000000 <_ZN10NCursesPadD0Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x0
  14:	bl	0 <_ZN13NCursesWindowD2Ev>
  18:	mov	x0, x19
  1c:	ldp	x20, x19, [sp, #32]
  20:	ldr	x21, [sp, #16]
  24:	ldp	x29, x30, [sp], #48
  28:	b	0 <_ZdlPv>
  2c:	mov	x20, x0
  30:	mov	x0, x19
  34:	mov	x21, x1
  38:	bl	0 <_ZdlPv>
  3c:	mov	x0, x20
  40:	tbz	w21, #31, 48 <_ZN10NCursesPadD0Ev+0x48>
  44:	bl	0 <__cxa_call_unexpected>
  48:	bl	0 <_Unwind_Resume>

Disassembly of section .text._ZN13NCursesWindow5mvwinEii:

0000000000000000 <_ZN13NCursesWindow5mvwinEii>:
   0:	ldr	x0, [x0, #8]
   4:	b	0 <mvwin>

Disassembly of section .text._ZN10NCursesPad18OnUnknownOperationEi:

0000000000000000 <_ZN10NCursesPad18OnUnknownOperationEi>:
   0:	b	0 <beep>

Disassembly of section .text._ZN10NCursesPad17OnNavigationErrorEi:

0000000000000000 <_ZN10NCursesPad17OnNavigationErrorEi>:
   0:	b	0 <beep>

Disassembly of section .text._ZN10NCursesPad11OnOperationEi:

0000000000000000 <_ZN10NCursesPad11OnOperationEi>:
   0:	ret

Disassembly of section .text._ZN16NCursesFramedPadD2Ev:

0000000000000000 <_ZN16NCursesFramedPadD2Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	adrp	x8, 90 <_ZTV16NCursesFramedPad>
  14:	mov	x19, x0
  18:	ldr	x0, [x0, #56]
  1c:	ldr	x8, [x8]
  20:	add	x8, x8, #0x10
  24:	str	x8, [x19]
  28:	cbz	x0, 38 <_ZN16NCursesFramedPadD2Ev+0x38>
  2c:	ldr	x8, [x0]
  30:	ldr	x8, [x8, #16]
  34:	blr	x8
  38:	mov	x0, x19
  3c:	bl	0 <_ZN13NCursesWindowD2Ev>
  40:	ldp	x20, x19, [sp, #32]
  44:	ldr	x21, [sp, #16]
  48:	ldp	x29, x30, [sp], #48
  4c:	ret
  50:	mov	x21, x1
  54:	mov	x20, x0
  58:	mov	x0, x19
  5c:	bl	0 <_ZN13NCursesWindowD2Ev>
  60:	b	70 <_ZN16NCursesFramedPadD2Ev+0x70>
  64:	bl	0 <_ZN16NCursesFramedPadD2Ev>
  68:	mov	x21, x1
  6c:	mov	x20, x0
  70:	mov	x0, x20
  74:	tbz	w21, #31, 7c <_ZN16NCursesFramedPadD2Ev+0x7c>
  78:	bl	0 <__cxa_call_unexpected>
  7c:	bl	0 <_Unwind_Resume>

Disassembly of section .text._ZN16NCursesFramedPadD0Ev:

0000000000000000 <_ZN16NCursesFramedPadD0Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	adrp	x8, 90 <_ZN16NCursesFramedPadD0Ev+0x90>
  14:	mov	x19, x0
  18:	ldr	x0, [x0, #56]
  1c:	ldr	x8, [x8]
  20:	add	x8, x8, #0x10
  24:	str	x8, [x19]
  28:	cbz	x0, 38 <_ZN16NCursesFramedPadD0Ev+0x38>
  2c:	ldr	x8, [x0]
  30:	ldr	x8, [x8, #16]
  34:	blr	x8
  38:	mov	x0, x19
  3c:	bl	0 <_ZN13NCursesWindowD2Ev>
  40:	mov	x0, x19
  44:	ldp	x20, x19, [sp, #32]
  48:	ldr	x21, [sp, #16]
  4c:	ldp	x29, x30, [sp], #48
  50:	b	0 <_ZdlPv>
  54:	mov	x21, x1
  58:	mov	x20, x0
  5c:	mov	x0, x19
  60:	bl	0 <_ZN13NCursesWindowD2Ev>
  64:	b	74 <_ZN16NCursesFramedPadD0Ev+0x74>
  68:	bl	0 <_ZN16NCursesFramedPadD0Ev>
  6c:	mov	x21, x1
  70:	mov	x20, x0
  74:	tbz	w21, #31, 88 <_ZN16NCursesFramedPadD0Ev+0x88>
  78:	mov	x0, x20
  7c:	bl	0 <__cxa_call_unexpected>
  80:	mov	x21, x1
  84:	mov	x20, x0
  88:	mov	x0, x19
  8c:	bl	0 <_ZdlPv>
  90:	mov	x0, x20
  94:	tbz	w21, #31, 9c <_ZN16NCursesFramedPadD0Ev+0x9c>
  98:	bl	0 <__cxa_call_unexpected>
  9c:	bl	0 <_Unwind_Resume>

Disassembly of section .text._ZN16NCursesFramedPad9setWindowER13NCursesWindowii:

0000000000000000 <_ZN16NCursesFramedPad9setWindowER13NCursesWindowii>:
   0:	ldr	x8, [x0]
   4:	adrp	x1, 0 <_ZN16NCursesFramedPad9setWindowER13NCursesWindowii>
   8:	add	x1, x1, #0x0
   c:	ldr	x2, [x8]
  10:	br	x2

Disassembly of section .text._ZN16NCursesFramedPad12setSubWindowER13NCursesWindow:

0000000000000000 <_ZN16NCursesFramedPad12setSubWindowER13NCursesWindow>:
   0:	ldr	x8, [x0]
   4:	adrp	x1, 0 <_ZN16NCursesFramedPad12setSubWindowER13NCursesWindow>
   8:	add	x1, x1, #0x0
   c:	ldr	x2, [x8]
  10:	br	x2

Disassembly of section .text._ZN16NCursesExceptionD2Ev:

0000000000000000 <_ZN16NCursesExceptionD2Ev>:
   0:	ret

Disassembly of section .text._ZNK16NCursesException9classnameEv:

0000000000000000 <_ZNK16NCursesException9classnameEv>:
   0:	adrp	x0, 0 <_ZNK16NCursesException9classnameEv>
   4:	add	x0, x0, #0x0
   8:	ret

Disassembly of section .text._ZN16NCursesExceptionD0Ev:

0000000000000000 <_ZN16NCursesExceptionD0Ev>:
   0:	b	0 <_ZdlPv>

cursesp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN12NCursesPanel4initEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	ldr	x0, [x0, #8]
  14:	bl	0 <new_panel>
  18:	str	x0, [x19, #48]
  1c:	cbz	x0, 48 <_ZN12NCursesPanel4initEv+0x48>
  20:	mov	x20, x0
  24:	mov	w0, #0x18                  	// #24
  28:	bl	0 <_Znwm>
  2c:	stp	xzr, x19, [x0]
  30:	str	x20, [x0, #16]
  34:	mov	x1, x0
  38:	mov	x0, x20
  3c:	ldp	x20, x19, [sp, #16]
  40:	ldp	x29, x30, [sp], #32
  44:	b	0 <set_panel_userptr>
  48:	mov	w0, #0x18                  	// #24
  4c:	bl	0 <__cxa_allocate_exception>
  50:	adrp	x8, 0 <_ZN12NCursesPanel4initEv>
  54:	ldr	x8, [x8]
  58:	adrp	x9, 0 <_ZN12NCursesPanel4initEv>
  5c:	add	x9, x9, #0x0
  60:	mov	w10, #0xffffffff            	// #-1
  64:	add	x8, x8, #0x10
  68:	stp	x8, x9, [x0]
  6c:	str	w10, [x0, #16]
  70:	adrp	x1, 0 <_ZN12NCursesPanel4initEv>
  74:	adrp	x2, 0 <_ZN12NCursesPanel4initEv>
  78:	ldr	x1, [x1]
  7c:	ldr	x2, [x2]
  80:	bl	0 <__cxa_throw>
  84:	bl	0 <__cxa_call_unexpected>

0000000000000088 <_ZN12NCursesPanelD1Ev>:
  88:	stp	x29, x30, [sp, #-48]!
  8c:	str	x21, [sp, #16]
  90:	stp	x20, x19, [sp, #32]
  94:	mov	x29, sp
  98:	adrp	x8, 0 <_ZN12NCursesPanel4initEv>
  9c:	mov	x19, x0
  a0:	ldr	x0, [x0, #48]
  a4:	ldr	x8, [x8]
  a8:	add	x8, x8, #0x10
  ac:	str	x8, [x19]
  b0:	bl	0 <panel_userptr>
  b4:	cbz	x0, bc <_ZN12NCursesPanelD1Ev+0x34>
  b8:	bl	0 <_ZdlPv>
  bc:	ldr	x0, [x19, #48]
  c0:	bl	0 <del_panel>
  c4:	bl	0 <update_panels>
  c8:	mov	x0, x19
  cc:	bl	0 <_ZN13NCursesWindowD2Ev>
  d0:	ldp	x20, x19, [sp, #32]
  d4:	ldr	x21, [sp, #16]
  d8:	ldp	x29, x30, [sp], #48
  dc:	ret
  e0:	mov	x21, x1
  e4:	mov	x20, x0
  e8:	b	fc <_ZN12NCursesPanelD1Ev+0x74>
  ec:	mov	x21, x1
  f0:	mov	x20, x0
  f4:	mov	x0, x19
  f8:	bl	0 <_ZN13NCursesWindowD2Ev>
  fc:	mov	x0, x20
 100:	tbz	w21, #31, 108 <_ZN12NCursesPanelD1Ev+0x80>
 104:	bl	0 <__cxa_call_unexpected>
 108:	bl	0 <_Unwind_Resume>
 10c:	bl	0 <_ZN12NCursesPanel4initEv>

0000000000000110 <_ZN12NCursesPanelD0Ev>:
 110:	stp	x29, x30, [sp, #-48]!
 114:	str	x21, [sp, #16]
 118:	stp	x20, x19, [sp, #32]
 11c:	mov	x29, sp
 120:	mov	x19, x0
 124:	bl	88 <_ZN12NCursesPanelD1Ev>
 128:	mov	x0, x19
 12c:	ldp	x20, x19, [sp, #32]
 130:	ldr	x21, [sp, #16]
 134:	ldp	x29, x30, [sp], #48
 138:	b	0 <_ZdlPv>
 13c:	mov	x20, x0
 140:	mov	x0, x19
 144:	mov	x21, x1
 148:	bl	0 <_ZdlPv>
 14c:	mov	x0, x20
 150:	tbz	w21, #31, 158 <_ZN12NCursesPanelD0Ev+0x48>
 154:	bl	0 <__cxa_call_unexpected>
 158:	bl	0 <_Unwind_Resume>

000000000000015c <_ZN12NCursesPanel6redrawEv>:
 15c:	stp	x29, x30, [sp, #-32]!
 160:	str	x19, [sp, #16]
 164:	mov	x29, sp
 168:	mov	x0, xzr
 16c:	bl	0 <panel_above>
 170:	cbz	x0, 1b4 <_ZN12NCursesPanel6redrawEv+0x58>
 174:	mov	x19, x0
 178:	b	1a0 <_ZN12NCursesPanel6redrawEv+0x44>
 17c:	ldrsh	w8, [x0, #4]
 180:	add	w2, w8, #0x1
 184:	mov	w3, #0x1                   	// #1
 188:	mov	w1, wzr
 18c:	bl	0 <wtouchln>
 190:	mov	x0, x19
 194:	bl	0 <panel_above>
 198:	mov	x19, x0
 19c:	cbz	x0, 1b4 <_ZN12NCursesPanel6redrawEv+0x58>
 1a0:	mov	x0, x19
 1a4:	bl	0 <panel_window>
 1a8:	cbnz	x0, 17c <_ZN12NCursesPanel6redrawEv+0x20>
 1ac:	mov	w2, #0xffffffff            	// #-1
 1b0:	b	184 <_ZN12NCursesPanel6redrawEv+0x28>
 1b4:	bl	0 <update_panels>
 1b8:	ldr	x19, [sp, #16]
 1bc:	ldp	x29, x30, [sp], #32
 1c0:	b	0 <doupdate>

00000000000001c4 <_ZN12NCursesPanel7refreshEv>:
 1c4:	stp	x29, x30, [sp, #-16]!
 1c8:	mov	x29, sp
 1cc:	bl	0 <update_panels>
 1d0:	ldp	x29, x30, [sp], #16
 1d4:	b	0 <doupdate>

00000000000001d8 <_ZN12NCursesPanel11noutrefreshEv>:
 1d8:	stp	x29, x30, [sp, #-16]!
 1dc:	mov	x29, sp
 1e0:	bl	0 <update_panels>
 1e4:	mov	w0, wzr
 1e8:	ldp	x29, x30, [sp], #16
 1ec:	ret

00000000000001f0 <_ZN12NCursesPanel9boldframeEPKcS1_>:
 1f0:	stp	x29, x30, [sp, #-32]!
 1f4:	str	x19, [sp, #16]
 1f8:	mov	x29, sp
 1fc:	ldr	x8, [x0, #8]
 200:	mov	x19, x0
 204:	cbz	x8, 214 <_ZN12NCursesPanel9boldframeEPKcS1_+0x24>
 208:	mov	w9, #0x10000               	// #65536
 20c:	str	wzr, [x8, #116]
 210:	str	w9, [x8, #16]
 214:	ldr	x8, [x19]
 218:	mov	x0, x19
 21c:	ldr	x8, [x8, #56]
 220:	blr	x8
 224:	ldr	x8, [x19, #8]
 228:	cbz	x8, 234 <_ZN12NCursesPanel9boldframeEPKcS1_+0x44>
 22c:	str	wzr, [x8, #116]
 230:	str	wzr, [x8, #16]
 234:	ldr	x19, [sp, #16]
 238:	ldp	x29, x30, [sp], #32
 23c:	ret

0000000000000240 <_ZN12NCursesPanel5frameEPKcS1_>:
 240:	sub	sp, sp, #0x40
 244:	stp	x29, x30, [sp, #16]
 248:	stp	x22, x21, [sp, #32]
 24c:	stp	x20, x19, [sp, #48]
 250:	add	x29, sp, #0x10
 254:	mov	x20, x0
 258:	ldr	x0, [x0, #8]
 25c:	mov	x19, x2
 260:	mov	x21, x1
 264:	orr	x22, x1, x2
 268:	mov	w1, wzr
 26c:	mov	w2, wzr
 270:	mov	w3, wzr
 274:	mov	w4, wzr
 278:	mov	w5, wzr
 27c:	mov	w6, wzr
 280:	mov	w7, wzr
 284:	str	wzr, [sp]
 288:	bl	0 <wborder>
 28c:	cbz	x22, 2bc <_ZN12NCursesPanel5frameEPKcS1_+0x7c>
 290:	cbnz	w0, 2bc <_ZN12NCursesPanel5frameEPKcS1_+0x7c>
 294:	ldr	x8, [x20]
 298:	mov	x0, x20
 29c:	mov	x1, x21
 2a0:	mov	x2, x19
 2a4:	ldr	x3, [x8, #72]
 2a8:	ldp	x20, x19, [sp, #48]
 2ac:	ldp	x22, x21, [sp, #32]
 2b0:	ldp	x29, x30, [sp, #16]
 2b4:	add	sp, sp, #0x40
 2b8:	br	x3
 2bc:	cmn	w0, #0x1
 2c0:	b.eq	2d8 <_ZN12NCursesPanel5frameEPKcS1_+0x98>  // b.none
 2c4:	ldp	x20, x19, [sp, #48]
 2c8:	ldp	x22, x21, [sp, #32]
 2cc:	ldp	x29, x30, [sp, #16]
 2d0:	add	sp, sp, #0x40
 2d4:	ret
 2d8:	mov	w0, #0x18                  	// #24
 2dc:	bl	0 <__cxa_allocate_exception>
 2e0:	adrp	x8, 0 <_ZN12NCursesPanel4initEv>
 2e4:	ldr	x8, [x8]
 2e8:	adrp	x9, 0 <_ZN12NCursesPanel4initEv>
 2ec:	add	x9, x9, #0x0
 2f0:	mov	w10, #0xffffffff            	// #-1
 2f4:	add	x8, x8, #0x10
 2f8:	stp	x8, x9, [x0]
 2fc:	str	w10, [x0, #16]
 300:	adrp	x1, 0 <_ZN12NCursesPanel4initEv>
 304:	adrp	x2, 0 <_ZN12NCursesPanel4initEv>
 308:	ldr	x1, [x1]
 30c:	ldr	x2, [x2]
 310:	bl	0 <__cxa_throw>
 314:	bl	0 <__cxa_call_unexpected>

0000000000000318 <_ZN12NCursesPanel5labelEPKcS1_>:
 318:	stp	x29, x30, [sp, #-32]!
 31c:	stp	x20, x19, [sp, #16]
 320:	mov	x29, sp
 324:	mov	x19, x2
 328:	mov	x20, x0
 32c:	cbz	x1, 348 <_ZN12NCursesPanel5labelEPKcS1_+0x30>
 330:	ldr	x8, [x20]
 334:	mov	x2, x1
 338:	mov	x0, x20
 33c:	mov	w1, wzr
 340:	ldr	x8, [x8, #80]
 344:	blr	x8
 348:	cbz	x19, 36c <_ZN12NCursesPanel5labelEPKcS1_+0x54>
 34c:	ldr	x8, [x20, #8]
 350:	cbz	x8, 378 <_ZN12NCursesPanel5labelEPKcS1_+0x60>
 354:	ldrh	w8, [x8, #4]
 358:	mov	w9, #0xfffe                	// #65534
 35c:	cmp	w8, w9
 360:	csinv	w8, w8, wzr, ne  // ne = any
 364:	sxth	w1, w8
 368:	b	37c <_ZN12NCursesPanel5labelEPKcS1_+0x64>
 36c:	ldp	x20, x19, [sp, #16]
 370:	ldp	x29, x30, [sp], #32
 374:	ret
 378:	mov	w1, #0xffffffff            	// #-1
 37c:	ldr	x8, [x20]
 380:	mov	x0, x20
 384:	mov	x2, x19
 388:	ldp	x20, x19, [sp, #16]
 38c:	ldr	x3, [x8, #80]
 390:	ldp	x29, x30, [sp], #32
 394:	br	x3

0000000000000398 <_ZN12NCursesPanel10centertextEiPKc>:
 398:	stp	x29, x30, [sp, #-48]!
 39c:	stp	x22, x21, [sp, #16]
 3a0:	stp	x20, x19, [sp, #32]
 3a4:	mov	x29, sp
 3a8:	cbz	x2, 43c <_ZN12NCursesPanel10centertextEiPKc+0xa4>
 3ac:	ldr	x20, [x0, #8]
 3b0:	mov	x19, x2
 3b4:	mov	w21, w1
 3b8:	cbz	x20, 3d4 <_ZN12NCursesPanel10centertextEiPKc+0x3c>
 3bc:	ldrh	w8, [x20, #6]
 3c0:	mov	w9, #0xfffe                	// #65534
 3c4:	cmp	w8, w9
 3c8:	csinv	w8, w8, wzr, ne  // ne = any
 3cc:	sxth	x22, w8
 3d0:	b	3d8 <_ZN12NCursesPanel10centertextEiPKc+0x40>
 3d4:	mov	x22, #0xffffffffffffffff    	// #-1
 3d8:	mov	x0, x19
 3dc:	bl	0 <strlen>
 3e0:	sub	x8, x22, x0
 3e4:	lsr	x8, x8, #1
 3e8:	bic	w2, w8, w8, asr #31
 3ec:	cbz	x20, 40c <_ZN12NCursesPanel10centertextEiPKc+0x74>
 3f0:	ldrh	w8, [x20, #6]
 3f4:	mov	w9, #0xfffe                	// #65534
 3f8:	cmp	w8, w9
 3fc:	csinv	w8, w8, wzr, ne  // ne = any
 400:	sxth	w8, w8
 404:	add	w22, w8, #0x1
 408:	b	410 <_ZN12NCursesPanel10centertextEiPKc+0x78>
 40c:	mov	w22, wzr
 410:	mov	x0, x20
 414:	mov	w1, w21
 418:	bl	0 <wmove>
 41c:	cmn	w0, #0x1
 420:	b.eq	44c <_ZN12NCursesPanel10centertextEiPKc+0xb4>  // b.none
 424:	mov	x0, x20
 428:	mov	x1, x19
 42c:	mov	w2, w22
 430:	bl	0 <waddnstr>
 434:	cmn	w0, #0x1
 438:	b.eq	44c <_ZN12NCursesPanel10centertextEiPKc+0xb4>  // b.none
 43c:	ldp	x20, x19, [sp, #32]
 440:	ldp	x22, x21, [sp, #16]
 444:	ldp	x29, x30, [sp], #48
 448:	ret
 44c:	mov	w0, #0x18                  	// #24
 450:	bl	0 <__cxa_allocate_exception>
 454:	adrp	x8, 0 <_ZN12NCursesPanel4initEv>
 458:	ldr	x8, [x8]
 45c:	adrp	x9, 0 <_ZN12NCursesPanel4initEv>
 460:	add	x9, x9, #0x0
 464:	mov	w10, #0xffffffff            	// #-1
 468:	add	x8, x8, #0x10
 46c:	stp	x8, x9, [x0]
 470:	str	w10, [x0, #16]
 474:	adrp	x1, 0 <_ZN12NCursesPanel4initEv>
 478:	adrp	x2, 0 <_ZN12NCursesPanel4initEv>
 47c:	ldr	x1, [x1]
 480:	ldr	x2, [x2]
 484:	bl	0 <__cxa_throw>
 488:	bl	0 <__cxa_call_unexpected>

000000000000048c <_ZN12NCursesPanel6getKeyEv>:
 48c:	ldr	x0, [x0, #8]
 490:	b	0 <wgetch>

Disassembly of section .text.__clang_call_terminate:

0000000000000000 <__clang_call_terminate>:
   0:	str	x30, [sp, #-16]!
   4:	bl	0 <__cxa_begin_catch>
   8:	bl	0 <_ZSt9terminatev>

Disassembly of section .text._ZN12NCursesPanel5mvwinEii:

0000000000000000 <_ZN12NCursesPanel5mvwinEii>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x0, [x0, #48]
   c:	bl	0 <move_panel>
  10:	cmn	w0, #0x1
  14:	b.eq	24 <_ZN12NCursesPanel5mvwinEii+0x24>  // b.none
  18:	mov	w0, wzr
  1c:	ldp	x29, x30, [sp], #16
  20:	ret
  24:	mov	w0, #0x18                  	// #24
  28:	bl	0 <__cxa_allocate_exception>
  2c:	adrp	x8, 0 <_ZN12NCursesPanel5mvwinEii>
  30:	ldr	x8, [x8]
  34:	adrp	x9, 0 <_ZN12NCursesPanel5mvwinEii>
  38:	add	x9, x9, #0x0
  3c:	mov	w10, #0xffffffff            	// #-1
  40:	add	x8, x8, #0x10
  44:	stp	x8, x9, [x0]
  48:	str	w10, [x0, #16]
  4c:	adrp	x1, 0 <_ZN12NCursesPanel5mvwinEii>
  50:	adrp	x2, 0 <_ZN12NCursesPanel5mvwinEii>
  54:	ldr	x1, [x1]
  58:	ldr	x2, [x2]
  5c:	bl	0 <__cxa_throw>
  60:	bl	0 <__cxa_call_unexpected>

Disassembly of section .text._ZNK16NCursesException9classnameEv:

0000000000000000 <_ZNK16NCursesException9classnameEv>:
   0:	adrp	x0, 0 <_ZNK16NCursesException9classnameEv>
   4:	add	x0, x0, #0x0
   8:	ret

Disassembly of section .text._ZN16NCursesExceptionD0Ev:

0000000000000000 <_ZN16NCursesExceptionD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZN16NCursesExceptionD2Ev:

0000000000000000 <_ZN16NCursesExceptionD2Ev>:
   0:	ret

cursslk.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	ldr	x0, [x0, #8]
  14:	mov	x20, x1
  18:	cbz	x0, 20 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc+0x20>
  1c:	bl	0 <_ZdaPv>
  20:	mov	x0, x20
  24:	bl	0 <strlen>
  28:	add	x0, x0, #0x1
  2c:	bl	0 <_Znam>
  30:	mov	x1, x20
  34:	str	x0, [x19, #8]
  38:	bl	0 <strcpy>
  3c:	mov	x0, x19
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret

000000000000004c <_ZN18Soft_Label_Key_Set4initEv>:
  4c:	stp	x29, x30, [sp, #-48]!
  50:	str	x21, [sp, #16]
  54:	stp	x20, x19, [sp, #32]
  58:	mov	x29, sp
  5c:	adrp	x8, 8 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc+0x8>
  60:	ldr	x8, [x8]
  64:	mov	x19, x0
  68:	ldrsw	x20, [x8]
  6c:	mov	w8, #0x18                  	// #24
  70:	umulh	x8, x20, x8
  74:	add	x9, x20, x20, lsl #1
  78:	cmp	xzr, x8
  7c:	lsl	x21, x9, #3
  80:	cset	w8, ne  // ne = any
  84:	adds	x9, x21, #0x8
  88:	cset	w10, cs  // cs = hs, nlast
  8c:	orr	w8, w8, w10
  90:	cmp	w8, #0x0
  94:	csinv	x0, x9, xzr, eq  // eq = none
  98:	bl	0 <_Znam>
  9c:	mov	x8, x0
  a0:	str	x20, [x8], #8
  a4:	cbz	w20, 150 <_ZN18Soft_Label_Key_Set4initEv+0x104>
  a8:	adrp	x9, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
  ac:	ldr	x9, [x9]
  b0:	sub	x13, x21, #0x18
  b4:	cmp	x13, #0x18
  b8:	mov	x10, x8
  bc:	b.cc	114 <_ZN18Soft_Label_Key_Set4initEv+0xc8>  // b.lo, b.ul, b.last
  c0:	mov	x10, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  c4:	movk	x10, #0xaaab
  c8:	umulh	x10, x13, x10
  cc:	lsr	x10, x10, #4
  d0:	add	x13, x10, #0x1
  d4:	mov	w15, #0x18                  	// #24
  d8:	and	x14, x13, #0x1ffffffffffffffe
  dc:	add	x11, x0, #0x18
  e0:	add	x12, x9, #0x10
  e4:	madd	x10, x14, x15, x8
  e8:	movi	d0, #0xffffffff00000000
  ec:	mov	x15, x14
  f0:	stp	x12, xzr, [x11, #-16]
  f4:	stp	x12, xzr, [x11, #8]
  f8:	str	d0, [x11]
  fc:	str	d0, [x11, #24]
 100:	subs	x15, x15, #0x2
 104:	add	x11, x11, #0x30
 108:	b.ne	f0 <_ZN18Soft_Label_Key_Set4initEv+0xa4>  // b.any
 10c:	cmp	x13, x14
 110:	b.eq	134 <_ZN18Soft_Label_Key_Set4initEv+0xe8>  // b.none
 114:	add	x11, x8, x21
 118:	add	x9, x9, #0x10
 11c:	movi	d0, #0xffffffff00000000
 120:	stp	x9, xzr, [x10]
 124:	str	d0, [x10, #16]
 128:	add	x10, x10, #0x18
 12c:	cmp	x10, x11
 130:	b.ne	120 <_ZN18Soft_Label_Key_Set4initEv+0xd4>  // b.any
 134:	cmp	w20, #0x1
 138:	str	x8, [x19, #16]
 13c:	b.lt	1a0 <_ZN18Soft_Label_Key_Set4initEv+0x154>  // b.tstop
 140:	cmp	w20, #0x1
 144:	b.ne	158 <_ZN18Soft_Label_Key_Set4initEv+0x10c>  // b.any
 148:	mov	x8, xzr
 14c:	b	184 <_ZN18Soft_Label_Key_Set4initEv+0x138>
 150:	str	x8, [x19, #16]
 154:	b	1a0 <_ZN18Soft_Label_Key_Set4initEv+0x154>
 158:	mov	x9, xzr
 15c:	and	x8, x20, #0xfffffffffffffffe
 160:	add	x10, x0, #0x34
 164:	add	w11, w9, #0x1
 168:	add	x9, x9, #0x2
 16c:	stur	w11, [x10, #-24]
 170:	str	w9, [x10], #48
 174:	cmp	x8, x9
 178:	b.ne	164 <_ZN18Soft_Label_Key_Set4initEv+0x118>  // b.any
 17c:	cmp	x8, x20
 180:	b.eq	1a0 <_ZN18Soft_Label_Key_Set4initEv+0x154>  // b.none
 184:	mov	w9, #0x18                  	// #24
 188:	madd	x9, x8, x9, x0
 18c:	add	x9, x9, #0x1c
 190:	add	x8, x8, #0x1
 194:	cmp	x8, x20
 198:	str	w8, [x9], #24
 19c:	b.lt	190 <_ZN18Soft_Label_Key_Set4initEv+0x144>  // b.tstop
 1a0:	strb	wzr, [x19, #8]
 1a4:	ldp	x20, x19, [sp, #32]
 1a8:	ldr	x21, [sp, #16]
 1ac:	ldp	x29, x30, [sp], #48
 1b0:	ret

00000000000001b4 <_ZN18Soft_Label_Key_SetC1Ev>:
 1b4:	stp	x29, x30, [sp, #-48]!
 1b8:	str	x21, [sp, #16]
 1bc:	stp	x20, x19, [sp, #32]
 1c0:	mov	x29, sp
 1c4:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 1c8:	ldr	x8, [x8]
 1cc:	strb	wzr, [x0, #8]
 1d0:	str	xzr, [x0, #16]
 1d4:	add	x8, x8, #0x10
 1d8:	str	x8, [x0]
 1dc:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 1e0:	ldr	x8, [x8]
 1e4:	ldr	w8, [x8]
 1e8:	cmn	w8, #0x1
 1ec:	b.eq	348 <_ZN18Soft_Label_Key_SetC1Ev+0x194>  // b.none
 1f0:	adrp	x8, 8 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc+0x8>
 1f4:	ldr	x8, [x8]
 1f8:	mov	x19, x0
 1fc:	ldrsw	x20, [x8]
 200:	mov	w8, #0x18                  	// #24
 204:	umulh	x8, x20, x8
 208:	add	x9, x20, x20, lsl #1
 20c:	cmp	xzr, x8
 210:	lsl	x21, x9, #3
 214:	cset	w8, ne  // ne = any
 218:	adds	x9, x21, #0x8
 21c:	cset	w10, cs  // cs = hs, nlast
 220:	orr	w8, w8, w10
 224:	cmp	w8, #0x0
 228:	csinv	x0, x9, xzr, eq  // eq = none
 22c:	bl	0 <_Znam>
 230:	mov	x8, x0
 234:	str	x20, [x8], #8
 238:	cbz	w20, 2e4 <_ZN18Soft_Label_Key_SetC1Ev+0x130>
 23c:	adrp	x9, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 240:	ldr	x9, [x9]
 244:	sub	x13, x21, #0x18
 248:	cmp	x13, #0x18
 24c:	mov	x10, x8
 250:	b.cc	2a8 <_ZN18Soft_Label_Key_SetC1Ev+0xf4>  // b.lo, b.ul, b.last
 254:	mov	x10, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 258:	movk	x10, #0xaaab
 25c:	umulh	x10, x13, x10
 260:	lsr	x10, x10, #4
 264:	add	x13, x10, #0x1
 268:	mov	w15, #0x18                  	// #24
 26c:	and	x14, x13, #0x1ffffffffffffffe
 270:	add	x11, x0, #0x18
 274:	add	x12, x9, #0x10
 278:	madd	x10, x14, x15, x8
 27c:	movi	d0, #0xffffffff00000000
 280:	mov	x15, x14
 284:	stp	x12, xzr, [x11, #-16]
 288:	stp	x12, xzr, [x11, #8]
 28c:	str	d0, [x11]
 290:	str	d0, [x11, #24]
 294:	subs	x15, x15, #0x2
 298:	add	x11, x11, #0x30
 29c:	b.ne	284 <_ZN18Soft_Label_Key_SetC1Ev+0xd0>  // b.any
 2a0:	cmp	x13, x14
 2a4:	b.eq	2c8 <_ZN18Soft_Label_Key_SetC1Ev+0x114>  // b.none
 2a8:	add	x11, x8, x21
 2ac:	add	x9, x9, #0x10
 2b0:	movi	d0, #0xffffffff00000000
 2b4:	stp	x9, xzr, [x10]
 2b8:	str	d0, [x10, #16]
 2bc:	add	x10, x10, #0x18
 2c0:	cmp	x10, x11
 2c4:	b.ne	2b4 <_ZN18Soft_Label_Key_SetC1Ev+0x100>  // b.any
 2c8:	cmp	w20, #0x1
 2cc:	str	x8, [x19, #16]
 2d0:	b.lt	334 <_ZN18Soft_Label_Key_SetC1Ev+0x180>  // b.tstop
 2d4:	cmp	w20, #0x1
 2d8:	b.ne	2ec <_ZN18Soft_Label_Key_SetC1Ev+0x138>  // b.any
 2dc:	mov	x8, xzr
 2e0:	b	318 <_ZN18Soft_Label_Key_SetC1Ev+0x164>
 2e4:	str	x8, [x19, #16]
 2e8:	b	334 <_ZN18Soft_Label_Key_SetC1Ev+0x180>
 2ec:	mov	x9, xzr
 2f0:	and	x8, x20, #0xfffffffffffffffe
 2f4:	add	x10, x0, #0x34
 2f8:	add	w11, w9, #0x1
 2fc:	add	x9, x9, #0x2
 300:	stur	w11, [x10, #-24]
 304:	str	w9, [x10], #48
 308:	cmp	x8, x9
 30c:	b.ne	2f8 <_ZN18Soft_Label_Key_SetC1Ev+0x144>  // b.any
 310:	cmp	x8, x20
 314:	b.eq	334 <_ZN18Soft_Label_Key_SetC1Ev+0x180>  // b.none
 318:	mov	w9, #0x18                  	// #24
 31c:	madd	x9, x8, x9, x0
 320:	add	x9, x9, #0x1c
 324:	add	x8, x8, #0x1
 328:	cmp	x20, x8
 32c:	str	w8, [x9], #24
 330:	b.ne	324 <_ZN18Soft_Label_Key_SetC1Ev+0x170>  // b.any
 334:	strb	wzr, [x19, #8]
 338:	ldp	x20, x19, [sp, #32]
 33c:	ldr	x21, [sp, #16]
 340:	ldp	x29, x30, [sp], #48
 344:	ret
 348:	mov	w0, #0x18                  	// #24
 34c:	bl	0 <__cxa_allocate_exception>
 350:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 354:	ldr	x8, [x8]
 358:	adrp	x9, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 35c:	add	x9, x9, #0x0
 360:	mov	w10, #0xffffffff            	// #-1
 364:	add	x8, x8, #0x10
 368:	stp	x8, x9, [x0]
 36c:	str	w10, [x0, #16]
 370:	adrp	x1, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 374:	adrp	x2, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 378:	ldr	x1, [x1]
 37c:	ldr	x2, [x2]
 380:	bl	0 <__cxa_throw>
 384:	bl	0 <__cxa_call_unexpected>

0000000000000388 <_ZN18Soft_Label_Key_SetC1ENS_12Label_LayoutE>:
 388:	stp	x29, x30, [sp, #-48]!
 38c:	str	x21, [sp, #16]
 390:	stp	x20, x19, [sp, #32]
 394:	mov	x29, sp
 398:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 39c:	ldr	x8, [x8]
 3a0:	cmn	w1, #0x1
 3a4:	strb	wzr, [x0, #8]
 3a8:	str	xzr, [x0, #16]
 3ac:	add	x8, x8, #0x10
 3b0:	str	x8, [x0]
 3b4:	b.eq	580 <_ZN18Soft_Label_Key_SetC1ENS_12Label_LayoutE+0x1f8>  // b.none
 3b8:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 3bc:	ldr	x8, [x8]
 3c0:	mov	w20, w1
 3c4:	mov	x19, x0
 3c8:	ldr	x9, [x8]
 3cc:	add	x10, x9, #0x1
 3d0:	str	x10, [x8]
 3d4:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 3d8:	ldr	x8, [x8]
 3dc:	cbz	x9, 3fc <_ZN18Soft_Label_Key_SetC1ENS_12Label_LayoutE+0x74>
 3e0:	ldr	w8, [x8]
 3e4:	cmp	w8, w20
 3e8:	b.ne	5bc <_ZN18Soft_Label_Key_SetC1ENS_12Label_LayoutE+0x234>  // b.any
 3ec:	adrp	x8, 8 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc+0x8>
 3f0:	ldr	x8, [x8]
 3f4:	ldr	w21, [x8]
 3f8:	b	42c <_ZN18Soft_Label_Key_SetC1ENS_12Label_LayoutE+0xa4>
 3fc:	mov	w0, w20
 400:	str	w20, [x8]
 404:	bl	0 <slk_init>
 408:	cmn	w0, #0x1
 40c:	b.eq	5f8 <_ZN18Soft_Label_Key_SetC1ENS_12Label_LayoutE+0x270>  // b.none
 410:	cmp	w20, #0x1
 414:	mov	w8, #0x8                   	// #8
 418:	mov	w9, #0xc                   	// #12
 41c:	csel	w21, w9, w8, gt
 420:	adrp	x8, 8 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc+0x8>
 424:	ldr	x8, [x8]
 428:	str	w21, [x8]
 42c:	sxtw	x20, w21
 430:	mov	w8, #0x18                  	// #24
 434:	umulh	x8, x20, x8
 438:	add	x9, x20, w21, sxtw #1
 43c:	cmp	xzr, x8
 440:	lsl	x8, x9, #3
 444:	cset	w9, ne  // ne = any
 448:	adds	x8, x8, #0x8
 44c:	cset	w10, cs  // cs = hs, nlast
 450:	orr	w9, w9, w10
 454:	cmp	w9, #0x0
 458:	csinv	x0, x8, xzr, eq  // eq = none
 45c:	bl	0 <_Znam>
 460:	mov	x8, x0
 464:	str	x20, [x8], #8
 468:	cbz	w21, 51c <_ZN18Soft_Label_Key_SetC1ENS_12Label_LayoutE+0x194>
 46c:	adrp	x10, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 470:	add	x9, x20, x20, lsl #1
 474:	ldr	x10, [x10]
 478:	lsl	x9, x9, #3
 47c:	sub	x14, x9, #0x18
 480:	cmp	x14, #0x18
 484:	mov	x11, x8
 488:	b.cc	4e0 <_ZN18Soft_Label_Key_SetC1ENS_12Label_LayoutE+0x158>  // b.lo, b.ul, b.last
 48c:	mov	x11, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 490:	movk	x11, #0xaaab
 494:	umulh	x11, x14, x11
 498:	lsr	x11, x11, #4
 49c:	add	x14, x11, #0x1
 4a0:	mov	w16, #0x18                  	// #24
 4a4:	and	x15, x14, #0x1ffffffffffffffe
 4a8:	add	x12, x0, #0x18
 4ac:	add	x13, x10, #0x10
 4b0:	madd	x11, x15, x16, x8
 4b4:	movi	d0, #0xffffffff00000000
 4b8:	mov	x16, x15
 4bc:	stp	x13, xzr, [x12, #-16]
 4c0:	stp	x13, xzr, [x12, #8]
 4c4:	str	d0, [x12]
 4c8:	str	d0, [x12, #24]
 4cc:	subs	x16, x16, #0x2
 4d0:	add	x12, x12, #0x30
 4d4:	b.ne	4bc <_ZN18Soft_Label_Key_SetC1ENS_12Label_LayoutE+0x134>  // b.any
 4d8:	cmp	x14, x15
 4dc:	b.eq	500 <_ZN18Soft_Label_Key_SetC1ENS_12Label_LayoutE+0x178>  // b.none
 4e0:	add	x9, x8, x9
 4e4:	add	x10, x10, #0x10
 4e8:	movi	d0, #0xffffffff00000000
 4ec:	stp	x10, xzr, [x11]
 4f0:	str	d0, [x11, #16]
 4f4:	add	x11, x11, #0x18
 4f8:	cmp	x11, x9
 4fc:	b.ne	4ec <_ZN18Soft_Label_Key_SetC1ENS_12Label_LayoutE+0x164>  // b.any
 500:	cmp	w20, #0x1
 504:	str	x8, [x19, #16]
 508:	b.lt	56c <_ZN18Soft_Label_Key_SetC1ENS_12Label_LayoutE+0x1e4>  // b.tstop
 50c:	cmp	w20, #0x1
 510:	b.ne	524 <_ZN18Soft_Label_Key_SetC1ENS_12Label_LayoutE+0x19c>  // b.any
 514:	mov	x8, xzr
 518:	b	550 <_ZN18Soft_Label_Key_SetC1ENS_12Label_LayoutE+0x1c8>
 51c:	str	x8, [x19, #16]
 520:	b	56c <_ZN18Soft_Label_Key_SetC1ENS_12Label_LayoutE+0x1e4>
 524:	mov	x9, xzr
 528:	and	x8, x20, #0xfffffffffffffffe
 52c:	add	x10, x0, #0x34
 530:	add	w11, w9, #0x1
 534:	add	x9, x9, #0x2
 538:	stur	w11, [x10, #-24]
 53c:	str	w9, [x10], #48
 540:	cmp	x8, x9
 544:	b.ne	530 <_ZN18Soft_Label_Key_SetC1ENS_12Label_LayoutE+0x1a8>  // b.any
 548:	cmp	x8, x20
 54c:	b.eq	56c <_ZN18Soft_Label_Key_SetC1ENS_12Label_LayoutE+0x1e4>  // b.none
 550:	mov	w9, #0x18                  	// #24
 554:	madd	x9, x8, x9, x0
 558:	add	x9, x9, #0x1c
 55c:	add	x8, x8, #0x1
 560:	cmp	x20, x8
 564:	str	w8, [x9], #24
 568:	b.ne	55c <_ZN18Soft_Label_Key_SetC1ENS_12Label_LayoutE+0x1d4>  // b.any
 56c:	strb	wzr, [x19, #8]
 570:	ldp	x20, x19, [sp, #32]
 574:	ldr	x21, [sp, #16]
 578:	ldp	x29, x30, [sp], #48
 57c:	ret
 580:	mov	w0, #0x18                  	// #24
 584:	bl	0 <__cxa_allocate_exception>
 588:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 58c:	ldr	x8, [x8]
 590:	adrp	x9, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 594:	add	x9, x9, #0x0
 598:	mov	w10, #0xffffffff            	// #-1
 59c:	add	x8, x8, #0x10
 5a0:	stp	x8, x9, [x0]
 5a4:	str	w10, [x0, #16]
 5a8:	adrp	x1, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 5ac:	adrp	x2, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 5b0:	ldr	x1, [x1]
 5b4:	ldr	x2, [x2]
 5b8:	bl	0 <__cxa_throw>
 5bc:	mov	w0, #0x18                  	// #24
 5c0:	bl	0 <__cxa_allocate_exception>
 5c4:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 5c8:	ldr	x8, [x8]
 5cc:	adrp	x9, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 5d0:	add	x9, x9, #0x0
 5d4:	mov	w10, #0xffffffff            	// #-1
 5d8:	add	x8, x8, #0x10
 5dc:	stp	x8, x9, [x0]
 5e0:	str	w10, [x0, #16]
 5e4:	adrp	x1, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 5e8:	adrp	x2, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 5ec:	ldr	x1, [x1]
 5f0:	ldr	x2, [x2]
 5f4:	bl	0 <__cxa_throw>
 5f8:	mov	w0, #0x18                  	// #24
 5fc:	bl	0 <__cxa_allocate_exception>
 600:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 604:	ldr	x8, [x8]
 608:	adrp	x9, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 60c:	add	x9, x9, #0x0
 610:	mov	w10, #0xffffffff            	// #-1
 614:	add	x8, x8, #0x10
 618:	stp	x8, x9, [x0]
 61c:	str	w10, [x0, #16]
 620:	adrp	x1, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 624:	adrp	x2, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 628:	ldr	x1, [x1]
 62c:	ldr	x2, [x2]
 630:	bl	0 <__cxa_throw>
 634:	bl	0 <__cxa_call_unexpected>
 638:	bl	0 <__cxa_call_unexpected>
 63c:	bl	0 <__cxa_call_unexpected>

0000000000000640 <_ZN18Soft_Label_Key_SetD1Ev>:
 640:	stp	x29, x30, [sp, #-48]!
 644:	stp	x22, x21, [sp, #16]
 648:	stp	x20, x19, [sp, #32]
 64c:	mov	x29, sp
 650:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 654:	ldr	x8, [x8]
 658:	mov	x19, x0
 65c:	add	x8, x8, #0x10
 660:	str	x8, [x0]
 664:	bl	0 <isendwin>
 668:	tbnz	w0, #0, 678 <_ZN18Soft_Label_Key_SetD1Ev+0x38>
 66c:	bl	0 <slk_clear>
 670:	cmn	w0, #0x1
 674:	b.eq	6f0 <_ZN18Soft_Label_Key_SetD1Ev+0xb0>  // b.none
 678:	ldr	x20, [x19, #16]
 67c:	cbz	x20, 6cc <_ZN18Soft_Label_Key_SetD1Ev+0x8c>
 680:	mov	x19, x20
 684:	ldr	x8, [x19, #-8]!
 688:	cbz	x8, 6c4 <_ZN18Soft_Label_Key_SetD1Ev+0x84>
 68c:	adrp	x9, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 690:	ldr	x9, [x9]
 694:	add	x8, x8, x8, lsl #1
 698:	lsl	x21, x8, #3
 69c:	add	x22, x9, #0x10
 6a0:	b	6ac <_ZN18Soft_Label_Key_SetD1Ev+0x6c>
 6a4:	subs	x21, x21, #0x18
 6a8:	b.eq	6c4 <_ZN18Soft_Label_Key_SetD1Ev+0x84>  // b.none
 6ac:	add	x8, x20, x21
 6b0:	ldur	x0, [x8, #-16]
 6b4:	stur	x22, [x8, #-24]
 6b8:	cbz	x0, 6a4 <_ZN18Soft_Label_Key_SetD1Ev+0x64>
 6bc:	bl	0 <_ZdaPv>
 6c0:	b	6a4 <_ZN18Soft_Label_Key_SetD1Ev+0x64>
 6c4:	mov	x0, x19
 6c8:	bl	0 <_ZdaPv>
 6cc:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 6d0:	ldr	x8, [x8]
 6d4:	ldp	x20, x19, [sp, #32]
 6d8:	ldp	x22, x21, [sp, #16]
 6dc:	ldr	x9, [x8]
 6e0:	sub	x9, x9, #0x1
 6e4:	str	x9, [x8]
 6e8:	ldp	x29, x30, [sp], #48
 6ec:	ret
 6f0:	mov	w0, #0x18                  	// #24
 6f4:	bl	0 <__cxa_allocate_exception>
 6f8:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 6fc:	ldr	x8, [x8]
 700:	adrp	x9, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 704:	add	x9, x9, #0x0
 708:	mov	w10, #0xffffffff            	// #-1
 70c:	add	x8, x8, #0x10
 710:	stp	x8, x9, [x0]
 714:	str	w10, [x0, #16]
 718:	adrp	x1, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 71c:	adrp	x2, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 720:	ldr	x1, [x1]
 724:	ldr	x2, [x2]
 728:	bl	0 <__cxa_throw>
 72c:	bl	0 <__cxa_call_unexpected>
 730:	bl	0 <__cxa_call_unexpected>

0000000000000734 <_ZN18Soft_Label_Key_SetD0Ev>:
 734:	stp	x29, x30, [sp, #-48]!
 738:	str	x21, [sp, #16]
 73c:	stp	x20, x19, [sp, #32]
 740:	mov	x29, sp
 744:	mov	x19, x0
 748:	bl	640 <_ZN18Soft_Label_Key_SetD1Ev>
 74c:	mov	x0, x19
 750:	ldp	x20, x19, [sp, #32]
 754:	ldr	x21, [sp, #16]
 758:	ldp	x29, x30, [sp], #48
 75c:	b	0 <_ZdlPv>
 760:	mov	x20, x0
 764:	mov	x0, x19
 768:	mov	x21, x1
 76c:	bl	0 <_ZdlPv>
 770:	mov	x0, x20
 774:	tbz	w21, #31, 77c <_ZN18Soft_Label_Key_SetD0Ev+0x48>
 778:	bl	0 <__cxa_call_unexpected>
 77c:	bl	0 <_Unwind_Resume>

0000000000000780 <_ZN18Soft_Label_Key_SetixEi>:
 780:	stp	x29, x30, [sp, #-16]!
 784:	mov	x29, sp
 788:	subs	w8, w1, #0x1
 78c:	b.lt	7b8 <_ZN18Soft_Label_Key_SetixEi+0x38>  // b.tstop
 790:	adrp	x9, 8 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc+0x8>
 794:	ldr	x9, [x9]
 798:	ldr	w9, [x9]
 79c:	cmp	w9, w1
 7a0:	b.lt	7b8 <_ZN18Soft_Label_Key_SetixEi+0x38>  // b.tstop
 7a4:	ldr	x9, [x0, #16]
 7a8:	mov	w10, #0x18                  	// #24
 7ac:	smaddl	x0, w8, w10, x9
 7b0:	ldp	x29, x30, [sp], #16
 7b4:	ret
 7b8:	mov	w0, #0x18                  	// #24
 7bc:	bl	0 <__cxa_allocate_exception>
 7c0:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 7c4:	ldr	x8, [x8]
 7c8:	adrp	x9, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 7cc:	add	x9, x9, #0x0
 7d0:	mov	w10, #0xffffffff            	// #-1
 7d4:	add	x8, x8, #0x10
 7d8:	stp	x8, x9, [x0]
 7dc:	str	w10, [x0, #16]
 7e0:	adrp	x1, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 7e4:	adrp	x2, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 7e8:	ldr	x1, [x1]
 7ec:	ldr	x2, [x2]
 7f0:	bl	0 <__cxa_throw>
 7f4:	bl	0 <__cxa_call_unexpected>

00000000000007f8 <_ZN18Soft_Label_Key_Set14activate_labelEib>:
 7f8:	stp	x29, x30, [sp, #-48]!
 7fc:	str	x21, [sp, #16]
 800:	stp	x20, x19, [sp, #32]
 804:	mov	x29, sp
 808:	ldrb	w8, [x0, #8]
 80c:	mov	w19, w2
 810:	mov	x21, x0
 814:	mov	w20, w1
 818:	cbnz	w8, 84c <_ZN18Soft_Label_Key_Set14activate_labelEib+0x54>
 81c:	adrp	x8, 0 <_ZN18NCursesApplication6theAppE>
 820:	ldr	x8, [x8]
 824:	ldr	x0, [x8]
 828:	cbz	x0, 844 <_ZN18Soft_Label_Key_Set14activate_labelEib+0x4c>
 82c:	ldr	x8, [x0]
 830:	ldr	x8, [x8, #96]
 834:	blr	x8
 838:	bl	0 <slk_attrset>
 83c:	cmn	w0, #0x1
 840:	b.eq	968 <_ZN18Soft_Label_Key_Set14activate_labelEib+0x170>  // b.none
 844:	mov	w8, #0x1                   	// #1
 848:	strb	w8, [x21, #8]
 84c:	cmp	w20, #0x1
 850:	b.lt	8b4 <_ZN18Soft_Label_Key_Set14activate_labelEib+0xbc>  // b.tstop
 854:	adrp	x8, 8 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc+0x8>
 858:	ldr	x8, [x8]
 85c:	ldr	w8, [x8]
 860:	cmp	w8, w20
 864:	b.lt	8b4 <_ZN18Soft_Label_Key_Set14activate_labelEib+0xbc>  // b.tstop
 868:	ldr	x8, [x21, #16]
 86c:	mov	w9, #0x18                  	// #24
 870:	tst	w19, #0x1
 874:	smaddl	x8, w20, w9, x8
 878:	ldur	x9, [x8, #-16]
 87c:	ldp	w2, w0, [x8, #-8]
 880:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 884:	add	x8, x8, #0x0
 888:	csel	x1, x9, x8, ne  // ne = any
 88c:	bl	0 <slk_set>
 890:	cmn	w0, #0x1
 894:	b.eq	8f0 <_ZN18Soft_Label_Key_Set14activate_labelEib+0xf8>  // b.none
 898:	bl	0 <slk_noutrefresh>
 89c:	cmn	w0, #0x1
 8a0:	b.eq	92c <_ZN18Soft_Label_Key_Set14activate_labelEib+0x134>  // b.none
 8a4:	ldp	x20, x19, [sp, #32]
 8a8:	ldr	x21, [sp, #16]
 8ac:	ldp	x29, x30, [sp], #48
 8b0:	ret
 8b4:	mov	w0, #0x18                  	// #24
 8b8:	bl	0 <__cxa_allocate_exception>
 8bc:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 8c0:	ldr	x8, [x8]
 8c4:	adrp	x9, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 8c8:	add	x9, x9, #0x0
 8cc:	mov	w10, #0xffffffff            	// #-1
 8d0:	add	x8, x8, #0x10
 8d4:	stp	x8, x9, [x0]
 8d8:	str	w10, [x0, #16]
 8dc:	adrp	x1, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 8e0:	adrp	x2, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 8e4:	ldr	x1, [x1]
 8e8:	ldr	x2, [x2]
 8ec:	bl	0 <__cxa_throw>
 8f0:	mov	w0, #0x18                  	// #24
 8f4:	bl	0 <__cxa_allocate_exception>
 8f8:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 8fc:	ldr	x8, [x8]
 900:	adrp	x9, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 904:	add	x9, x9, #0x0
 908:	mov	w10, #0xffffffff            	// #-1
 90c:	add	x8, x8, #0x10
 910:	stp	x8, x9, [x0]
 914:	str	w10, [x0, #16]
 918:	adrp	x1, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 91c:	adrp	x2, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 920:	ldr	x1, [x1]
 924:	ldr	x2, [x2]
 928:	bl	0 <__cxa_throw>
 92c:	mov	w0, #0x18                  	// #24
 930:	bl	0 <__cxa_allocate_exception>
 934:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 938:	ldr	x8, [x8]
 93c:	adrp	x9, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 940:	add	x9, x9, #0x0
 944:	mov	w10, #0xffffffff            	// #-1
 948:	add	x8, x8, #0x10
 94c:	stp	x8, x9, [x0]
 950:	str	w10, [x0, #16]
 954:	adrp	x1, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 958:	adrp	x2, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 95c:	ldr	x1, [x1]
 960:	ldr	x2, [x2]
 964:	bl	0 <__cxa_throw>
 968:	mov	w0, #0x18                  	// #24
 96c:	bl	0 <__cxa_allocate_exception>
 970:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 974:	ldr	x8, [x8]
 978:	adrp	x9, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 97c:	add	x9, x9, #0x0
 980:	mov	w10, #0xffffffff            	// #-1
 984:	add	x8, x8, #0x10
 988:	stp	x8, x9, [x0]
 98c:	str	w10, [x0, #16]
 990:	adrp	x1, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 994:	adrp	x2, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 998:	ldr	x1, [x1]
 99c:	ldr	x2, [x2]
 9a0:	bl	0 <__cxa_throw>
 9a4:	bl	0 <__cxa_call_unexpected>
 9a8:	bl	0 <__cxa_call_unexpected>
 9ac:	bl	0 <__cxa_call_unexpected>
 9b0:	bl	0 <__cxa_call_unexpected>

00000000000009b4 <_ZN18Soft_Label_Key_Set15activate_labelsEb>:
 9b4:	stp	x29, x30, [sp, #-64]!
 9b8:	stp	x24, x23, [sp, #16]
 9bc:	stp	x22, x21, [sp, #32]
 9c0:	stp	x20, x19, [sp, #48]
 9c4:	mov	x29, sp
 9c8:	ldrb	w8, [x0, #8]
 9cc:	mov	x20, x0
 9d0:	mov	w19, w1
 9d4:	cbnz	w8, a08 <_ZN18Soft_Label_Key_Set15activate_labelsEb+0x54>
 9d8:	adrp	x8, 0 <_ZN18NCursesApplication6theAppE>
 9dc:	ldr	x8, [x8]
 9e0:	ldr	x0, [x8]
 9e4:	cbz	x0, a00 <_ZN18Soft_Label_Key_Set15activate_labelsEb+0x4c>
 9e8:	ldr	x8, [x0]
 9ec:	ldr	x8, [x8, #96]
 9f0:	blr	x8
 9f4:	bl	0 <slk_attrset>
 9f8:	cmn	w0, #0x1
 9fc:	b.eq	b90 <_ZN18Soft_Label_Key_Set15activate_labelsEb+0x1dc>  // b.none
 a00:	mov	w8, #0x1                   	// #1
 a04:	strb	w8, [x20, #8]
 a08:	adrp	x21, 8 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc+0x8>
 a0c:	ldr	x21, [x21]
 a10:	ldr	w8, [x21]
 a14:	cmp	w8, #0x1
 a18:	b.lt	a64 <_ZN18Soft_Label_Key_Set15activate_labelsEb+0xb0>  // b.tstop
 a1c:	adrp	x24, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 a20:	mov	x22, xzr
 a24:	mov	x23, xzr
 a28:	add	x24, x24, #0x0
 a2c:	ldr	x8, [x20, #16]
 a30:	tst	w19, #0x1
 a34:	add	x8, x8, x22
 a38:	ldr	x9, [x8, #8]
 a3c:	ldp	w2, w0, [x8, #16]
 a40:	csel	x1, x9, x24, ne  // ne = any
 a44:	bl	0 <slk_set>
 a48:	cmn	w0, #0x1
 a4c:	b.eq	adc <_ZN18Soft_Label_Key_Set15activate_labelsEb+0x128>  // b.none
 a50:	ldrsw	x8, [x21]
 a54:	add	x23, x23, #0x1
 a58:	add	x22, x22, #0x18
 a5c:	cmp	x23, x8
 a60:	b.lt	a2c <_ZN18Soft_Label_Key_Set15activate_labelsEb+0x78>  // b.tstop
 a64:	tbz	w19, #0, ab0 <_ZN18Soft_Label_Key_Set15activate_labelsEb+0xfc>
 a68:	bl	0 <slk_restore>
 a6c:	cmn	w0, #0x1
 a70:	b.ne	abc <_ZN18Soft_Label_Key_Set15activate_labelsEb+0x108>  // b.any
 a74:	mov	w0, #0x18                  	// #24
 a78:	bl	0 <__cxa_allocate_exception>
 a7c:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 a80:	ldr	x8, [x8]
 a84:	adrp	x9, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 a88:	add	x9, x9, #0x0
 a8c:	mov	w10, #0xffffffff            	// #-1
 a90:	add	x8, x8, #0x10
 a94:	stp	x8, x9, [x0]
 a98:	str	w10, [x0, #16]
 a9c:	adrp	x1, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 aa0:	adrp	x2, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 aa4:	ldr	x1, [x1]
 aa8:	ldr	x2, [x2]
 aac:	bl	0 <__cxa_throw>
 ab0:	bl	0 <slk_clear>
 ab4:	cmn	w0, #0x1
 ab8:	b.eq	b54 <_ZN18Soft_Label_Key_Set15activate_labelsEb+0x1a0>  // b.none
 abc:	bl	0 <slk_noutrefresh>
 ac0:	cmn	w0, #0x1
 ac4:	b.eq	b18 <_ZN18Soft_Label_Key_Set15activate_labelsEb+0x164>  // b.none
 ac8:	ldp	x20, x19, [sp, #48]
 acc:	ldp	x22, x21, [sp, #32]
 ad0:	ldp	x24, x23, [sp, #16]
 ad4:	ldp	x29, x30, [sp], #64
 ad8:	ret
 adc:	mov	w0, #0x18                  	// #24
 ae0:	bl	0 <__cxa_allocate_exception>
 ae4:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 ae8:	ldr	x8, [x8]
 aec:	adrp	x9, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 af0:	add	x9, x9, #0x0
 af4:	mov	w10, #0xffffffff            	// #-1
 af8:	add	x8, x8, #0x10
 afc:	stp	x8, x9, [x0]
 b00:	str	w10, [x0, #16]
 b04:	adrp	x1, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 b08:	adrp	x2, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 b0c:	ldr	x1, [x1]
 b10:	ldr	x2, [x2]
 b14:	bl	0 <__cxa_throw>
 b18:	mov	w0, #0x18                  	// #24
 b1c:	bl	0 <__cxa_allocate_exception>
 b20:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 b24:	ldr	x8, [x8]
 b28:	adrp	x9, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 b2c:	add	x9, x9, #0x0
 b30:	mov	w10, #0xffffffff            	// #-1
 b34:	add	x8, x8, #0x10
 b38:	stp	x8, x9, [x0]
 b3c:	str	w10, [x0, #16]
 b40:	adrp	x1, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 b44:	adrp	x2, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 b48:	ldr	x1, [x1]
 b4c:	ldr	x2, [x2]
 b50:	bl	0 <__cxa_throw>
 b54:	mov	w0, #0x18                  	// #24
 b58:	bl	0 <__cxa_allocate_exception>
 b5c:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 b60:	ldr	x8, [x8]
 b64:	adrp	x9, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 b68:	add	x9, x9, #0x0
 b6c:	mov	w10, #0xffffffff            	// #-1
 b70:	add	x8, x8, #0x10
 b74:	stp	x8, x9, [x0]
 b78:	str	w10, [x0, #16]
 b7c:	adrp	x1, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 b80:	adrp	x2, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 b84:	ldr	x1, [x1]
 b88:	ldr	x2, [x2]
 b8c:	bl	0 <__cxa_throw>
 b90:	mov	w0, #0x18                  	// #24
 b94:	bl	0 <__cxa_allocate_exception>
 b98:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 b9c:	ldr	x8, [x8]
 ba0:	adrp	x9, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 ba4:	add	x9, x9, #0x0
 ba8:	mov	w10, #0xffffffff            	// #-1
 bac:	add	x8, x8, #0x10
 bb0:	stp	x8, x9, [x0]
 bb4:	str	w10, [x0, #16]
 bb8:	adrp	x1, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 bbc:	adrp	x2, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyaSEPc>
 bc0:	ldr	x1, [x1]
 bc4:	ldr	x2, [x2]
 bc8:	bl	0 <__cxa_throw>
 bcc:	bl	0 <__cxa_call_unexpected>
 bd0:	bl	0 <__cxa_call_unexpected>
 bd4:	bl	0 <__cxa_call_unexpected>
 bd8:	bl	0 <__cxa_call_unexpected>
 bdc:	bl	0 <__cxa_call_unexpected>

Disassembly of section .text._ZN18Soft_Label_Key_Set14Soft_Label_KeyD2Ev:

0000000000000000 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyD2Ev>:
   0:	adrp	x9, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyD2Ev>
   4:	mov	x8, x0
   8:	ldr	x0, [x0, #8]
   c:	ldr	x9, [x9]
  10:	add	x9, x9, #0x10
  14:	str	x9, [x8]
  18:	cbz	x0, 20 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyD2Ev+0x20>
  1c:	b	0 <_ZdaPv>
  20:	ret

Disassembly of section .text._ZN18Soft_Label_Key_Set14Soft_Label_KeyD0Ev:

0000000000000000 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	adrp	x8, 0 <_ZN18Soft_Label_Key_Set14Soft_Label_KeyD0Ev>
   c:	mov	x19, x0
  10:	ldr	x0, [x0, #8]
  14:	ldr	x8, [x8]
  18:	mov	x29, sp
  1c:	add	x8, x8, #0x10
  20:	str	x8, [x19]
  24:	cbz	x0, 2c <_ZN18Soft_Label_Key_Set14Soft_Label_KeyD0Ev+0x2c>
  28:	bl	0 <_ZdaPv>
  2c:	mov	x0, x19
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZdlPv>

Disassembly of section .text._ZN16NCursesExceptionD2Ev:

0000000000000000 <_ZN16NCursesExceptionD2Ev>:
   0:	ret

Disassembly of section .text._ZNK16NCursesException9classnameEv:

0000000000000000 <_ZNK16NCursesException9classnameEv>:
   0:	adrp	x0, 0 <_ZNK16NCursesException9classnameEv>
   4:	add	x0, x0, #0x0
   8:	ret

Disassembly of section .text._ZN16NCursesExceptionD0Ev:

0000000000000000 <_ZN16NCursesExceptionD0Ev>:
   0:	b	0 <_ZdlPv>

cursesapp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN18NCursesApplication4initEb>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	tbz	w1, #0, 18 <_ZN18NCursesApplication4initEb+0x18>
  14:	bl	0 <_ZN13NCursesWindow9useColorsEv>
  18:	bl	0 <_ZN13NCursesWindow14NumberOfColorsEv>
  1c:	cmp	w0, #0x2
  20:	b.lt	d8 <_ZN18NCursesApplication4initEb+0xd8>  // b.tstop
  24:	ldr	x0, [x19, #16]
  28:	mov	w8, #0x1                   	// #1
  2c:	mov	w1, #0x1                   	// #1
  30:	strb	w8, [x19, #8]
  34:	bl	0 <_ZN13NCursesWindow8setcolorEs>
  38:	ldr	x0, [x19, #16]
  3c:	mov	w1, #0x3                   	// #3
  40:	mov	w2, #0x4                   	// #4
  44:	bl	0 <_ZN13NCursesWindow10setpaletteEss>
  48:	ldr	x0, [x19, #16]
  4c:	mov	w1, #0x2                   	// #2
  50:	bl	0 <_ZN13NCursesWindow8setcolorEs>
  54:	ldr	x0, [x19, #16]
  58:	mov	w1, #0x6                   	// #6
  5c:	mov	w2, #0x4                   	// #4
  60:	bl	0 <_ZN13NCursesWindow10setpaletteEss>
  64:	ldr	x0, [x19, #16]
  68:	mov	w1, #0x3                   	// #3
  6c:	bl	0 <_ZN13NCursesWindow8setcolorEs>
  70:	ldr	x0, [x19, #16]
  74:	mov	w2, #0x4                   	// #4
  78:	mov	w1, wzr
  7c:	bl	0 <_ZN13NCursesWindow10setpaletteEss>
  80:	ldr	x0, [x19, #16]
  84:	mov	w1, #0x4                   	// #4
  88:	bl	0 <_ZN13NCursesWindow8setcolorEs>
  8c:	ldr	x0, [x19, #16]
  90:	mov	w2, #0x6                   	// #6
  94:	mov	w1, wzr
  98:	bl	0 <_ZN13NCursesWindow10setpaletteEss>
  9c:	ldr	x0, [x19, #16]
  a0:	mov	w1, #0x5                   	// #5
  a4:	bl	0 <_ZN13NCursesWindow8setcolorEs>
  a8:	ldr	x0, [x19, #16]
  ac:	mov	w1, #0x4                   	// #4
  b0:	mov	w2, #0x3                   	// #3
  b4:	bl	0 <_ZN13NCursesWindow10setpaletteEss>
  b8:	ldr	x0, [x19, #16]
  bc:	mov	w1, #0x6                   	// #6
  c0:	bl	0 <_ZN13NCursesWindow8setcolorEs>
  c4:	ldr	x0, [x19, #16]
  c8:	mov	w2, #0x2                   	// #2
  cc:	mov	w1, wzr
  d0:	bl	0 <_ZN13NCursesWindow10setpaletteEss>
  d4:	b	dc <_ZN18NCursesApplication4initEb+0xdc>
  d8:	strb	wzr, [x19, #8]
  dc:	ldr	x8, [x19]
  e0:	ldr	x20, [x19, #16]
  e4:	mov	x0, x19
  e8:	ldr	x8, [x8, #112]
  ec:	blr	x8
  f0:	ldr	x8, [x20, #8]
  f4:	ldp	x20, x19, [sp, #16]
  f8:	orr	w1, w0, #0x20
  fc:	mov	x0, x8
 100:	ldp	x29, x30, [sp], #32
 104:	b	0 <wbkgd>

0000000000000108 <_ZN18NCursesApplicationD1Ev>:
 108:	stp	x29, x30, [sp, #-48]!
 10c:	stp	x22, x21, [sp, #16]
 110:	stp	x20, x19, [sp, #32]
 114:	mov	x29, sp
 118:	adrp	x8, 0 <_ZN18NCursesApplication4initEb>
 11c:	ldr	x8, [x8]
 120:	adrp	x20, 8 <_ZN18NCursesApplication4initEb+0x8>
 124:	mov	x19, x0
 128:	add	x8, x8, #0x10
 12c:	str	x8, [x0]
 130:	ldr	x20, [x20]
 134:	ldr	x0, [x20]
 138:	cbz	x0, 148 <_ZN18NCursesApplicationD1Ev+0x40>
 13c:	ldr	x8, [x0]
 140:	ldr	x8, [x8, #16]
 144:	blr	x8
 148:	str	xzr, [x20]
 14c:	adrp	x22, 10 <_ZN18NCursesApplication4initEb+0x10>
 150:	ldr	x22, [x22]
 154:	b	168 <_ZN18NCursesApplicationD1Ev+0x60>
 158:	ldr	x8, [x20]
 15c:	ldr	x8, [x8, #8]
 160:	mov	x0, x20
 164:	blr	x8
 168:	ldr	x0, [x22]
 16c:	cbz	x0, 1b8 <_ZN18NCursesApplicationD1Ev+0xb0>
 170:	ldr	x20, [x0, #8]
 174:	cbz	x20, 1b8 <_ZN18NCursesApplicationD1Ev+0xb0>
 178:	ldr	x8, [x0]
 17c:	str	x8, [x22]
 180:	bl	0 <_ZdlPv>
 184:	ldr	x8, [x19, #16]
 188:	cbz	x8, 158 <_ZN18NCursesApplicationD1Ev+0x50>
 18c:	ldr	x8, [x22]
 190:	cbz	x8, 158 <_ZN18NCursesApplicationD1Ev+0x50>
 194:	ldr	x21, [x8, #8]
 198:	cbz	x21, 158 <_ZN18NCursesApplicationD1Ev+0x50>
 19c:	mov	x0, x21
 1a0:	mov	w1, wzr
 1a4:	bl	0 <_ZN18Soft_Label_Key_Set15activate_labelsEb>
 1a8:	mov	w1, #0x1                   	// #1
 1ac:	mov	x0, x21
 1b0:	bl	0 <_ZN18Soft_Label_Key_Set15activate_labelsEb>
 1b4:	b	158 <_ZN18NCursesApplicationD1Ev+0x50>
 1b8:	ldr	x0, [x19, #16]
 1bc:	cbz	x0, 1cc <_ZN18NCursesApplicationD1Ev+0xc4>
 1c0:	ldr	x8, [x0]
 1c4:	ldr	x8, [x8, #16]
 1c8:	blr	x8
 1cc:	str	xzr, [x19, #16]
 1d0:	bl	0 <endwin>
 1d4:	ldp	x20, x19, [sp, #32]
 1d8:	ldp	x22, x21, [sp, #16]
 1dc:	ldp	x29, x30, [sp], #48
 1e0:	ret
 1e4:	b	1e8 <_ZN18NCursesApplicationD1Ev+0xe0>
 1e8:	tbz	w1, #31, 1f0 <_ZN18NCursesApplicationD1Ev+0xe8>
 1ec:	bl	0 <__cxa_call_unexpected>
 1f0:	bl	0 <_Unwind_Resume>

00000000000001f4 <_ZNK18NCursesApplication3topEv>:
 1f4:	adrp	x8, 10 <_ZN18NCursesApplication4initEb+0x10>
 1f8:	ldr	x8, [x8]
 1fc:	ldr	x8, [x8]
 200:	cbz	x8, 20c <_ZNK18NCursesApplication3topEv+0x18>
 204:	ldr	x0, [x8, #8]
 208:	ret
 20c:	mov	x0, xzr
 210:	ret

0000000000000214 <_ZN18NCursesApplication3popEv>:
 214:	stp	x29, x30, [sp, #-32]!
 218:	stp	x20, x19, [sp, #16]
 21c:	mov	x29, sp
 220:	adrp	x20, 10 <_ZN18NCursesApplication4initEb+0x10>
 224:	ldr	x20, [x20]
 228:	ldr	x8, [x20]
 22c:	cbz	x8, 274 <_ZN18NCursesApplication3popEv+0x60>
 230:	ldr	x9, [x8]
 234:	mov	x19, x0
 238:	mov	x0, x8
 23c:	str	x9, [x20]
 240:	bl	0 <_ZdlPv>
 244:	ldr	x8, [x19, #16]
 248:	cbz	x8, 274 <_ZN18NCursesApplication3popEv+0x60>
 24c:	ldr	x8, [x20]
 250:	cbz	x8, 274 <_ZN18NCursesApplication3popEv+0x60>
 254:	ldr	x19, [x8, #8]
 258:	cbz	x19, 274 <_ZN18NCursesApplication3popEv+0x60>
 25c:	mov	x0, x19
 260:	mov	w1, wzr
 264:	bl	0 <_ZN18Soft_Label_Key_Set15activate_labelsEb>
 268:	mov	w1, #0x1                   	// #1
 26c:	mov	x0, x19
 270:	bl	0 <_ZN18Soft_Label_Key_Set15activate_labelsEb>
 274:	ldr	x8, [x20]
 278:	ldp	x20, x19, [sp, #16]
 27c:	cmp	x8, #0x0
 280:	cset	w0, eq  // eq = none
 284:	ldp	x29, x30, [sp], #32
 288:	ret

000000000000028c <_ZN18NCursesApplicationD0Ev>:
 28c:	brk	#0x1

0000000000000290 <_ZN18NCursesApplication5rinitER13NCursesWindow>:
 290:	adrp	x8, 8 <_ZN18NCursesApplication4initEb+0x8>
 294:	ldr	x8, [x8]
 298:	str	x0, [x8]
 29c:	mov	w0, wzr
 2a0:	ret

00000000000002a4 <_ZN18NCursesApplication4pushER18Soft_Label_Key_Set>:
 2a4:	stp	x29, x30, [sp, #-32]!
 2a8:	stp	x20, x19, [sp, #16]
 2ac:	mov	x29, sp
 2b0:	mov	x20, x0
 2b4:	mov	w0, #0x10                  	// #16
 2b8:	mov	x19, x1
 2bc:	bl	0 <_Znwm>
 2c0:	adrp	x8, 10 <_ZN18NCursesApplication4initEb+0x10>
 2c4:	ldr	x8, [x8]
 2c8:	ldr	x9, [x8]
 2cc:	str	x0, [x8]
 2d0:	stp	x9, x19, [x0]
 2d4:	ldr	x8, [x20, #16]
 2d8:	cbz	x8, 2fc <_ZN18NCursesApplication4pushER18Soft_Label_Key_Set+0x58>
 2dc:	mov	x0, x19
 2e0:	mov	w1, wzr
 2e4:	bl	0 <_ZN18Soft_Label_Key_Set15activate_labelsEb>
 2e8:	mov	x0, x19
 2ec:	ldp	x20, x19, [sp, #16]
 2f0:	mov	w1, #0x1                   	// #1
 2f4:	ldp	x29, x30, [sp], #32
 2f8:	b	0 <_ZN18Soft_Label_Key_Set15activate_labelsEb>
 2fc:	ldp	x20, x19, [sp, #16]
 300:	ldp	x29, x30, [sp], #32
 304:	ret

0000000000000308 <_ZN18NCursesApplicationclEv>:
 308:	stp	x29, x30, [sp, #-64]!
 30c:	stp	x24, x23, [sp, #16]
 310:	stp	x22, x21, [sp, #32]
 314:	stp	x20, x19, [sp, #48]
 318:	mov	x29, sp
 31c:	ldr	x8, [x0]
 320:	ldrb	w24, [x0, #8]
 324:	mov	x19, x0
 328:	ldr	x8, [x8, #8]
 32c:	blr	x8
 330:	mov	w20, w0
 334:	cmp	w0, #0x1
 338:	b.lt	34c <_ZN18NCursesApplicationclEv+0x44>  // b.tstop
 33c:	adrp	x1, 290 <_ZN18NCursesApplication5rinitER13NCursesWindow>
 340:	ldr	x1, [x1]
 344:	mov	w0, w20
 348:	bl	0 <_ZN13NCursesWindow10ripofflineEiPFiRS_E>
 34c:	ldr	x8, [x19]
 350:	mov	x0, x19
 354:	ldr	x8, [x8, #24]
 358:	blr	x8
 35c:	mov	w21, w0
 360:	cmn	w0, #0x1
 364:	b.eq	398 <_ZN18NCursesApplicationclEv+0x90>  // b.none
 368:	mov	w0, #0x18                  	// #24
 36c:	bl	0 <_Znwm>
 370:	mov	x23, x0
 374:	mov	w1, w21
 378:	bl	0 <_ZN18Soft_Label_Key_SetC1ENS_12Label_LayoutE>
 37c:	ldr	x8, [x19]
 380:	mov	x0, x19
 384:	mov	x1, x23
 388:	ldr	x8, [x8, #32]
 38c:	blr	x8
 390:	mov	x22, x23
 394:	b	39c <_ZN18NCursesApplicationclEv+0x94>
 398:	mov	x22, xzr
 39c:	mov	w0, #0x30                  	// #48
 3a0:	bl	0 <_Znwm>
 3a4:	adrp	x8, 0 <stdscr>
 3a8:	ldr	x8, [x8]
 3ac:	mov	x23, x0
 3b0:	ldr	x1, [x8]
 3b4:	bl	0 <_ZN13NCursesWindowC1EP7_win_st>
 3b8:	ldr	x8, [x19]
 3bc:	str	x23, [x19, #16]
 3c0:	cmp	w24, #0x0
 3c4:	cset	w1, ne  // ne = any
 3c8:	ldr	x8, [x8]
 3cc:	mov	x0, x19
 3d0:	blr	x8
 3d4:	cmp	w20, #0x1
 3d8:	b.lt	3ec <_ZN18NCursesApplicationclEv+0xe4>  // b.tstop
 3dc:	ldr	x8, [x19]
 3e0:	mov	x0, x19
 3e4:	ldr	x8, [x8, #16]
 3e8:	blr	x8
 3ec:	cmn	w21, #0x1
 3f0:	b.eq	430 <_ZN18NCursesApplicationclEv+0x128>  // b.none
 3f4:	mov	w0, #0x10                  	// #16
 3f8:	bl	0 <_Znwm>
 3fc:	adrp	x8, 10 <_ZN18NCursesApplication4initEb+0x10>
 400:	ldr	x8, [x8]
 404:	ldr	x9, [x8]
 408:	str	x0, [x8]
 40c:	stp	x9, x22, [x0]
 410:	ldr	x8, [x19, #16]
 414:	cbz	x8, 430 <_ZN18NCursesApplicationclEv+0x128>
 418:	mov	x0, x22
 41c:	mov	w1, wzr
 420:	bl	0 <_ZN18Soft_Label_Key_Set15activate_labelsEb>
 424:	mov	w1, #0x1                   	// #1
 428:	mov	x0, x22
 42c:	bl	0 <_ZN18Soft_Label_Key_Set15activate_labelsEb>
 430:	ldr	x8, [x19]
 434:	mov	x0, x19
 438:	ldp	x20, x19, [sp, #48]
 43c:	ldp	x22, x21, [sp, #32]
 440:	ldr	x1, [x8, #40]
 444:	ldp	x24, x23, [sp, #16]
 448:	ldp	x29, x30, [sp], #64
 44c:	br	x1
 450:	b	454 <_ZN18NCursesApplicationclEv+0x14c>
 454:	mov	x19, x0
 458:	mov	x0, x23
 45c:	bl	0 <_ZdlPv>
 460:	mov	x0, x19
 464:	bl	0 <_Unwind_Resume>

0000000000000468 <_ZN18NCursesApplicationC2Eb>:
 468:	stp	x29, x30, [sp, #-16]!
 46c:	mov	x29, sp
 470:	adrp	x9, 0 <_ZN18NCursesApplication4initEb>
 474:	ldr	x9, [x9]
 478:	and	w8, w1, #0x1
 47c:	str	xzr, [x0, #16]
 480:	strb	w8, [x0, #8]
 484:	add	x9, x9, #0x10
 488:	str	x9, [x0]
 48c:	adrp	x8, 0 <_ZN18NCursesApplication4initEb>
 490:	ldr	x8, [x8]
 494:	ldr	x9, [x8]
 498:	cbnz	x9, 4a8 <_ZN18NCursesApplicationC2Eb+0x40>
 49c:	str	x0, [x8]
 4a0:	ldp	x29, x30, [sp], #16
 4a4:	ret
 4a8:	mov	w0, #0x18                  	// #24
 4ac:	bl	0 <__cxa_allocate_exception>
 4b0:	adrp	x8, 0 <_ZN18NCursesApplication4initEb>
 4b4:	ldr	x8, [x8]
 4b8:	adrp	x9, 0 <_ZN18NCursesApplication4initEb>
 4bc:	add	x9, x9, #0x0
 4c0:	mov	w10, #0xffffffff            	// #-1
 4c4:	add	x8, x8, #0x10
 4c8:	stp	x8, x9, [x0]
 4cc:	str	w10, [x0, #16]
 4d0:	adrp	x1, 0 <_ZN18NCursesApplication4initEb>
 4d4:	adrp	x2, 0 <_ZN18NCursesApplication4initEb>
 4d8:	ldr	x1, [x1]
 4dc:	ldr	x2, [x2]
 4e0:	bl	0 <__cxa_throw>

Disassembly of section .text._ZNK18NCursesApplication9titlesizeEv:

0000000000000000 <_ZNK18NCursesApplication9titlesizeEv>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZN18NCursesApplication5titleEv:

0000000000000000 <_ZN18NCursesApplication5titleEv>:
   0:	ret

Disassembly of section .text._ZNK18NCursesApplication7useSLKsEv:

0000000000000000 <_ZNK18NCursesApplication7useSLKsEv>:
   0:	mov	w0, #0xffffffff            	// #-1
   4:	ret

Disassembly of section .text._ZNK18NCursesApplication11init_labelsER18Soft_Label_Key_Set:

0000000000000000 <_ZNK18NCursesApplication11init_labelsER18Soft_Label_Key_Set>:
   0:	ret

Disassembly of section .text._ZN18NCursesApplication10handleArgsEiPPc:

0000000000000000 <_ZN18NCursesApplication10handleArgsEiPPc>:
   0:	ret

Disassembly of section .text._ZNK18NCursesApplication11foregroundsEv:

0000000000000000 <_ZNK18NCursesApplication11foregroundsEv>:
   0:	ldrb	w8, [x0, #8]
   4:	mov	w9, #0x100                 	// #256
   8:	cmp	w8, #0x0
   c:	mov	w8, #0x200000              	// #2097152
  10:	csel	w0, w8, w9, eq  // eq = none
  14:	ret

Disassembly of section .text._ZNK18NCursesApplication11backgroundsEv:

0000000000000000 <_ZNK18NCursesApplication11backgroundsEv>:
   0:	ldrb	w8, [x0, #8]
   4:	lsl	w0, w8, #9
   8:	ret

Disassembly of section .text._ZNK18NCursesApplication9inactivesEv:

0000000000000000 <_ZNK18NCursesApplication9inactivesEv>:
   0:	ldrb	w8, [x0, #8]
   4:	mov	w9, #0x300                 	// #768
   8:	movk	w9, #0x10, lsl #16
   c:	cmp	w8, #0x0
  10:	mov	w8, #0x100000              	// #1048576
  14:	csel	w0, w8, w9, eq  // eq = none
  18:	ret

Disassembly of section .text._ZNK18NCursesApplication6labelsEv:

0000000000000000 <_ZNK18NCursesApplication6labelsEv>:
   0:	ldrb	w8, [x0, #8]
   4:	lsl	w0, w8, #10
   8:	ret

Disassembly of section .text._ZNK18NCursesApplication18dialog_backgroundsEv:

0000000000000000 <_ZNK18NCursesApplication18dialog_backgroundsEv>:
   0:	ldrb	w8, [x0, #8]
   4:	lsl	w0, w8, #10
   8:	ret

Disassembly of section .text._ZNK18NCursesApplication18window_backgroundsEv:

0000000000000000 <_ZNK18NCursesApplication18window_backgroundsEv>:
   0:	ldrb	w8, [x0, #8]
   4:	cmp	w8, #0x0
   8:	mov	w8, #0x500                 	// #1280
   c:	csel	w0, wzr, w8, eq  // eq = none
  10:	ret

Disassembly of section .text._ZNK18NCursesApplication13screen_titlesEv:

0000000000000000 <_ZNK18NCursesApplication13screen_titlesEv>:
   0:	ldrb	w8, [x0, #8]
   4:	mov	w9, #0x600                 	// #1536
   8:	cmp	w8, #0x0
   c:	mov	w8, #0x200000              	// #2097152
  10:	csel	w0, w8, w9, eq  // eq = none
  14:	ret

Disassembly of section .text._ZN16NCursesExceptionD2Ev:

0000000000000000 <_ZN16NCursesExceptionD2Ev>:
   0:	ret

Disassembly of section .text._ZNK16NCursesException9classnameEv:

0000000000000000 <_ZNK16NCursesException9classnameEv>:
   0:	adrp	x0, 0 <_ZNK16NCursesException9classnameEv>
   4:	add	x0, x0, #0x0
   8:	ret

Disassembly of section .text._ZN16NCursesExceptionD0Ev:

0000000000000000 <_ZN16NCursesExceptionD0Ev>:
   0:	b	0 <_ZdlPv>

cursesmain.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <main>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x1
  14:	adrp	x1, 0 <main>
  18:	mov	w20, w0
  1c:	add	x1, x1, #0x0
  20:	mov	w0, #0x6                   	// #6
  24:	bl	0 <setlocale>
  28:	adrp	x8, 0 <_ZN18NCursesApplication6theAppE>
  2c:	ldr	x8, [x8]
  30:	ldr	x21, [x8]
  34:	cbz	x21, 68 <main+0x68>
  38:	ldr	x8, [x21]
  3c:	mov	x0, x21
  40:	mov	w1, w20
  44:	mov	x2, x19
  48:	ldr	x8, [x8, #64]
  4c:	blr	x8
  50:	bl	0 <endwin>
  54:	mov	x0, x21
  58:	bl	0 <_ZN18NCursesApplicationclEv>
  5c:	mov	w19, w0
  60:	bl	0 <endwin>
  64:	b	6c <main+0x6c>
  68:	mov	w19, #0x1                   	// #1
  6c:	mov	w0, w19
  70:	ldp	x20, x19, [sp, #32]
  74:	ldr	x21, [sp, #16]
  78:	ldp	x29, x30, [sp], #48
  7c:	ret
  80:	cmp	w1, #0x1
  84:	mov	x19, x0
  88:	b.ne	150 <main+0x150>  // b.any
  8c:	mov	x0, x19
  90:	bl	0 <__cxa_begin_catch>
  94:	mov	x19, x0
  98:	bl	0 <endwin>
  9c:	adrp	x21, 0 <_ZSt4cerr>
  a0:	ldr	x20, [x19, #8]
  a4:	ldr	x21, [x21]
  a8:	cbz	x20, cc <main+0xcc>
  ac:	mov	x0, x20
  b0:	bl	0 <strlen>
  b4:	mov	x2, x0
  b8:	adrp	x0, 0 <_ZSt4cerr>
  bc:	ldr	x0, [x0]
  c0:	mov	x1, x20
  c4:	bl	0 <_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l>
  c8:	b	e4 <main+0xe4>
  cc:	ldr	x8, [x21]
  d0:	ldur	x8, [x8, #-24]
  d4:	add	x0, x21, x8
  d8:	ldr	w8, [x0, #32]
  dc:	orr	w1, w8, #0x1
  e0:	bl	0 <_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate>
  e4:	ldr	x8, [x21]
  e8:	ldur	x8, [x8, #-24]
  ec:	add	x8, x21, x8
  f0:	ldr	x20, [x8, #240]
  f4:	cbz	x20, 144 <main+0x144>
  f8:	ldrb	w8, [x20, #56]
  fc:	cbz	w8, 108 <main+0x108>
 100:	ldrb	w1, [x20, #67]
 104:	b	128 <main+0x128>
 108:	mov	x0, x20
 10c:	bl	0 <_ZNKSt5ctypeIcE13_M_widen_initEv>
 110:	ldr	x8, [x20]
 114:	ldr	x8, [x8, #48]
 118:	mov	w1, #0xa                   	// #10
 11c:	mov	x0, x20
 120:	blr	x8
 124:	mov	w1, w0
 128:	adrp	x0, 0 <_ZSt4cerr>
 12c:	ldr	x0, [x0]
 130:	bl	0 <_ZNSo3putEc>
 134:	bl	0 <_ZNSo5flushEv>
 138:	ldr	w19, [x19, #16]
 13c:	bl	0 <__cxa_end_catch>
 140:	b	6c <main+0x6c>
 144:	bl	0 <_ZSt16__throw_bad_castv>
 148:	mov	x19, x0
 14c:	bl	0 <__cxa_end_catch>
 150:	mov	x0, x19
 154:	bl	0 <_Unwind_Resume>
 158:	bl	0 <main>

Disassembly of section .text.__clang_call_terminate:

0000000000000000 <__clang_call_terminate>:
   0:	str	x30, [sp, #-16]!
   4:	bl	0 <__cxa_begin_catch>
   8:	bl	0 <_ZSt9terminatev>

Disassembly of section .text.startup:

0000000000000000 <_GLOBAL__sub_I_cursesmain.cc>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x19, 0 <_GLOBAL__sub_I_cursesmain.cc>
  10:	add	x19, x19, #0x0
  14:	mov	x0, x19
  18:	bl	0 <_ZNSt8ios_base4InitC1Ev>
  1c:	adrp	x0, 0 <_ZNSt8ios_base4InitD1Ev>
  20:	ldr	x0, [x0]
  24:	mov	x1, x19
  28:	ldr	x19, [sp, #16]
  2c:	adrp	x2, 0 <__dso_handle>
  30:	add	x2, x2, #0x0
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <__cxa_atexit>
