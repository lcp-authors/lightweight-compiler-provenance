
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//readfile.so_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000007d0 <.init>:
 7d0:	stp	x29, x30, [sp, #-16]!
 7d4:	mov	x29, sp
 7d8:	bl	8d0 <fprintf@plt+0x10>
 7dc:	ldp	x29, x30, [sp], #16
 7e0:	ret

Disassembly of section .plt:

00000000000007f0 <memcpy@plt-0x20>:
 7f0:	stp	x16, x30, [sp, #-16]!
 7f4:	adrp	x16, 11000 <dl_load@@Base+0x1065c>
 7f8:	ldr	x17, [x16, #4088]
 7fc:	add	x16, x16, #0xff8
 800:	br	x17
 804:	nop
 808:	nop
 80c:	nop

0000000000000810 <memcpy@plt>:
 810:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 814:	ldr	x17, [x16]
 818:	add	x16, x16, #0x0
 81c:	br	x17

0000000000000820 <exit@plt>:
 820:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 824:	ldr	x17, [x16, #8]
 828:	add	x16, x16, #0x8
 82c:	br	x17

0000000000000830 <__cxa_finalize@plt>:
 830:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 834:	ldr	x17, [x16, #16]
 838:	add	x16, x16, #0x10
 83c:	br	x17

0000000000000840 <open@plt>:
 840:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 844:	ldr	x17, [x16, #24]
 848:	add	x16, x16, #0x18
 84c:	br	x17

0000000000000850 <close@plt>:
 850:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 854:	ldr	x17, [x16, #32]
 858:	add	x16, x16, #0x20
 85c:	br	x17

0000000000000860 <__gmon_start__@plt>:
 860:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 864:	ldr	x17, [x16, #40]
 868:	add	x16, x16, #0x28
 86c:	br	x17

0000000000000870 <fwrite@plt>:
 870:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 874:	ldr	x17, [x16, #48]
 878:	add	x16, x16, #0x30
 87c:	br	x17

0000000000000880 <read@plt>:
 880:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 884:	ldr	x17, [x16, #56]
 888:	add	x16, x16, #0x38
 88c:	br	x17

0000000000000890 <dcgettext@plt>:
 890:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 894:	ldr	x17, [x16, #64]
 898:	add	x16, x16, #0x40
 89c:	br	x17

00000000000008a0 <__errno_location@plt>:
 8a0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 8a4:	ldr	x17, [x16, #72]
 8a8:	add	x16, x16, #0x48
 8ac:	br	x17

00000000000008b0 <__xstat@plt>:
 8b0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 8b4:	ldr	x17, [x16, #80]
 8b8:	add	x16, x16, #0x50
 8bc:	br	x17

00000000000008c0 <fprintf@plt>:
 8c0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 8c4:	ldr	x17, [x16, #88]
 8c8:	add	x16, x16, #0x58
 8cc:	br	x17

Disassembly of section .text:

00000000000008d0 <dl_load@@Base-0xd4>:
 8d0:	adrp	x0, 11000 <dl_load@@Base+0x1065c>
 8d4:	ldr	x0, [x0, #4056]
 8d8:	cbz	x0, 8e0 <fprintf@plt+0x20>
 8dc:	b	860 <__gmon_start__@plt>
 8e0:	ret
 8e4:	nop
 8e8:	adrp	x0, 12000 <dl_load@@Base+0x1165c>
 8ec:	add	x0, x0, #0xb8
 8f0:	adrp	x1, 12000 <dl_load@@Base+0x1165c>
 8f4:	add	x1, x1, #0xb8
 8f8:	cmp	x1, x0
 8fc:	b.eq	914 <fprintf@plt+0x54>  // b.none
 900:	adrp	x1, 11000 <dl_load@@Base+0x1065c>
 904:	ldr	x1, [x1, #4032]
 908:	cbz	x1, 914 <fprintf@plt+0x54>
 90c:	mov	x16, x1
 910:	br	x16
 914:	ret
 918:	adrp	x0, 12000 <dl_load@@Base+0x1165c>
 91c:	add	x0, x0, #0xb8
 920:	adrp	x1, 12000 <dl_load@@Base+0x1165c>
 924:	add	x1, x1, #0xb8
 928:	sub	x1, x1, x0
 92c:	lsr	x2, x1, #63
 930:	add	x1, x2, x1, asr #3
 934:	cmp	xzr, x1, asr #1
 938:	asr	x1, x1, #1
 93c:	b.eq	954 <fprintf@plt+0x94>  // b.none
 940:	adrp	x2, 11000 <dl_load@@Base+0x1065c>
 944:	ldr	x2, [x2, #4064]
 948:	cbz	x2, 954 <fprintf@plt+0x94>
 94c:	mov	x16, x2
 950:	br	x16
 954:	ret
 958:	stp	x29, x30, [sp, #-32]!
 95c:	mov	x29, sp
 960:	str	x19, [sp, #16]
 964:	adrp	x19, 12000 <dl_load@@Base+0x1165c>
 968:	ldrb	w0, [x19, #184]
 96c:	cbnz	w0, 994 <fprintf@plt+0xd4>
 970:	adrp	x0, 11000 <dl_load@@Base+0x1065c>
 974:	ldr	x0, [x0, #4040]
 978:	cbz	x0, 988 <fprintf@plt+0xc8>
 97c:	adrp	x0, 12000 <dl_load@@Base+0x1165c>
 980:	ldr	x0, [x0, #96]
 984:	bl	830 <__cxa_finalize@plt>
 988:	bl	8e8 <fprintf@plt+0x28>
 98c:	mov	w0, #0x1                   	// #1
 990:	strb	w0, [x19, #184]
 994:	ldr	x19, [sp, #16]
 998:	ldp	x29, x30, [sp], #32
 99c:	ret
 9a0:	b	918 <fprintf@plt+0x58>

00000000000009a4 <dl_load@@Base>:
 9a4:	stp	x29, x30, [sp, #-48]!
 9a8:	stp	x20, x19, [sp, #32]
 9ac:	adrp	x19, 12000 <dl_load@@Base+0x1165c>
 9b0:	adrp	x20, 12000 <dl_load@@Base+0x1165c>
 9b4:	str	x0, [x19, #192]
 9b8:	str	x1, [x20, #200]
 9bc:	ldr	w8, [x0]
 9c0:	str	x21, [sp, #16]
 9c4:	mov	x29, sp
 9c8:	cmp	w8, #0x2
 9cc:	b.ne	a8c <dl_load@@Base+0xe8>  // b.any
 9d0:	ldr	w8, [x0, #4]
 9d4:	tbnz	w8, #31, a8c <dl_load@@Base+0xe8>
 9d8:	adrp	x21, 12000 <dl_load@@Base+0x1165c>
 9dc:	ldr	x8, [x21, #104]
 9e0:	cbz	x8, a08 <dl_load@@Base+0x64>
 9e4:	ldr	x8, [x19, #192]
 9e8:	ldr	x0, [x20, #200]
 9ec:	adrp	x1, 0 <memcpy@plt-0x810>
 9f0:	adrp	x2, 12000 <dl_load@@Base+0x1165c>
 9f4:	ldr	x8, [x8, #48]
 9f8:	add	x1, x1, #0xf96
 9fc:	add	x2, x2, #0x68
 a00:	blr	x8
 a04:	cbz	w0, a60 <dl_load@@Base+0xbc>
 a08:	mov	w21, wzr
 a0c:	bl	ddc <dl_load@@Base+0x438>
 a10:	cbnz	w0, a30 <dl_load@@Base+0x8c>
 a14:	ldr	x8, [x19, #192]
 a18:	ldr	x0, [x20, #200]
 a1c:	adrp	x1, 0 <memcpy@plt-0x810>
 a20:	add	x1, x1, #0xfe5
 a24:	ldr	x8, [x8, #104]
 a28:	blr	x8
 a2c:	mov	w21, #0x1                   	// #1
 a30:	ldr	x8, [x19, #192]
 a34:	ldr	x0, [x20, #200]
 a38:	adrp	x1, 1000 <dl_load@@Base+0x65c>
 a3c:	add	x1, x1, #0x7c
 a40:	ldr	x8, [x8, #88]
 a44:	blr	x8
 a48:	cmp	w21, #0x0
 a4c:	ldp	x20, x19, [sp, #32]
 a50:	ldr	x21, [sp, #16]
 a54:	cset	w0, eq  // eq = none
 a58:	ldp	x29, x30, [sp], #48
 a5c:	ret
 a60:	ldr	x8, [x19, #192]
 a64:	ldr	x0, [x20, #200]
 a68:	ldr	x2, [x21, #104]
 a6c:	adrp	x1, 0 <memcpy@plt-0x810>
 a70:	ldr	x8, [x8, #104]
 a74:	add	x1, x1, #0xfca
 a78:	blr	x8
 a7c:	mov	w21, #0x1                   	// #1
 a80:	bl	ddc <dl_load@@Base+0x438>
 a84:	cbnz	w0, a30 <dl_load@@Base+0x8c>
 a88:	b	a14 <dl_load@@Base+0x70>
 a8c:	adrp	x20, 11000 <dl_load@@Base+0x1065c>
 a90:	ldr	x20, [x20, #4048]
 a94:	adrp	x0, 0 <memcpy@plt-0x810>
 a98:	add	x0, x0, #0xf70
 a9c:	mov	w1, #0x26                  	// #38
 aa0:	ldr	x3, [x20]
 aa4:	mov	w2, #0x1                   	// #1
 aa8:	bl	870 <fwrite@plt>
 aac:	ldr	x8, [x19, #192]
 ab0:	ldr	x0, [x20]
 ab4:	adrp	x1, 0 <memcpy@plt-0x810>
 ab8:	add	x1, x1, #0xf97
 abc:	ldp	w4, w5, [x8]
 ac0:	mov	w2, #0x2                   	// #2
 ac4:	mov	w3, wzr
 ac8:	bl	8c0 <fprintf@plt>
 acc:	mov	w0, #0x1                   	// #1
 ad0:	bl	820 <exit@plt>
 ad4:	sub	sp, sp, #0xe0
 ad8:	mov	x0, x1
 adc:	stp	x29, x30, [sp, #160]
 ae0:	str	x23, [sp, #176]
 ae4:	stp	x22, x21, [sp, #192]
 ae8:	stp	x20, x19, [sp, #208]
 aec:	add	x29, sp, #0xa0
 af0:	mov	x19, x1
 af4:	bl	bfc <dl_load@@Base+0x258>
 af8:	adrp	x23, 12000 <dl_load@@Base+0x1165c>
 afc:	ldr	x8, [x23, #192]
 b00:	adrp	x22, 12000 <dl_load@@Base+0x1165c>
 b04:	ldr	x0, [x22, #200]
 b08:	ldr	x8, [x8, #144]
 b0c:	blr	x8
 b10:	ldr	x8, [x23, #192]
 b14:	ldr	x0, [x22, #200]
 b18:	sub	x3, x29, #0x20
 b1c:	mov	w2, #0x2                   	// #2
 b20:	ldr	x8, [x8, #152]
 b24:	mov	x1, xzr
 b28:	blr	x8
 b2c:	cbz	w0, b8c <dl_load@@Base+0x1e8>
 b30:	ldur	x0, [x29, #-24]
 b34:	mov	x1, sp
 b38:	bl	f50 <dl_load@@Base+0x5ac>
 b3c:	tbnz	w0, #31, bc4 <dl_load@@Base+0x220>
 b40:	ldur	x0, [x29, #-24]
 b44:	mov	w1, wzr
 b48:	bl	840 <open@plt>
 b4c:	tbnz	w0, #31, bc4 <dl_load@@Base+0x220>
 b50:	mov	x1, sp
 b54:	mov	w20, w0
 b58:	bl	c08 <dl_load@@Base+0x264>
 b5c:	cbz	x0, be0 <dl_load@@Base+0x23c>
 b60:	mov	x21, x0
 b64:	mov	w0, w20
 b68:	bl	850 <close@plt>
 b6c:	ldr	x0, [x23, #192]
 b70:	ldr	x1, [x22, #200]
 b74:	ldr	x3, [sp, #48]
 b78:	mov	x2, x21
 b7c:	mov	w4, wzr
 b80:	mov	x5, x19
 b84:	bl	d14 <dl_load@@Base+0x370>
 b88:	b	be0 <dl_load@@Base+0x23c>
 b8c:	ldr	x8, [x23, #192]
 b90:	ldr	w9, [x8, #24]
 b94:	cbz	w9, be0 <dl_load@@Base+0x23c>
 b98:	ldr	x21, [x8, #112]
 b9c:	ldr	x20, [x22, #200]
 ba0:	adrp	x1, 1000 <dl_load@@Base+0x65c>
 ba4:	add	x1, x1, #0xe
 ba8:	mov	w2, #0x5                   	// #5
 bac:	mov	x0, xzr
 bb0:	bl	890 <dcgettext@plt>
 bb4:	mov	x1, x0
 bb8:	mov	x0, x20
 bbc:	blr	x21
 bc0:	b	be0 <dl_load@@Base+0x23c>
 bc4:	ldr	x8, [x23, #192]
 bc8:	ldr	x20, [x22, #200]
 bcc:	ldr	x21, [x8, #128]
 bd0:	bl	8a0 <__errno_location@plt>
 bd4:	ldr	w1, [x0]
 bd8:	mov	x0, x20
 bdc:	blr	x21
 be0:	mov	x0, x19
 be4:	ldp	x20, x19, [sp, #208]
 be8:	ldp	x22, x21, [sp, #192]
 bec:	ldr	x23, [sp, #176]
 bf0:	ldp	x29, x30, [sp, #160]
 bf4:	add	sp, sp, #0xe0
 bf8:	ret
 bfc:	movi	v0.2d, #0x0
 c00:	stp	q0, q0, [x0]
 c04:	ret
 c08:	stp	x29, x30, [sp, #-48]!
 c0c:	stp	x22, x21, [sp, #16]
 c10:	stp	x20, x19, [sp, #32]
 c14:	ldr	w8, [x1, #16]
 c18:	mov	x29, sp
 c1c:	and	w8, w8, #0xf000
 c20:	cmp	w8, #0x8, lsl #12
 c24:	b.ne	ca0 <dl_load@@Base+0x2fc>  // b.any
 c28:	adrp	x22, 12000 <dl_load@@Base+0x1165c>
 c2c:	ldr	x8, [x22, #192]
 c30:	ldr	x9, [x1, #48]
 c34:	mov	w21, w0
 c38:	mov	x20, x1
 c3c:	ldr	x8, [x8, #280]
 c40:	add	x0, x9, #0x1
 c44:	blr	x8
 c48:	mov	x19, x0
 c4c:	cbnz	x0, c7c <dl_load@@Base+0x2d8>
 c50:	ldr	x8, [x22, #192]
 c54:	adrp	x9, 12000 <dl_load@@Base+0x1165c>
 c58:	ldr	x10, [x20, #48]
 c5c:	ldr	x0, [x9, #200]
 c60:	ldr	x8, [x8, #96]
 c64:	adrp	x1, 1000 <dl_load@@Base+0x65c>
 c68:	adrp	x2, 1000 <dl_load@@Base+0x65c>
 c6c:	add	x3, x10, #0x1
 c70:	add	x1, x1, #0x3b
 c74:	add	x2, x2, #0x59
 c78:	blr	x8
 c7c:	ldr	x2, [x20, #48]
 c80:	mov	w0, w21
 c84:	mov	x1, x19
 c88:	bl	880 <read@plt>
 c8c:	ldr	x8, [x20, #48]
 c90:	cmp	x0, x8
 c94:	b.ne	ccc <dl_load@@Base+0x328>  // b.any
 c98:	strb	wzr, [x19, x8]
 c9c:	b	d00 <dl_load@@Base+0x35c>
 ca0:	bl	8a0 <__errno_location@plt>
 ca4:	mov	w8, #0x16                  	// #22
 ca8:	adrp	x9, 12000 <dl_load@@Base+0x1165c>
 cac:	str	w8, [x0]
 cb0:	ldr	x8, [x9, #192]
 cb4:	adrp	x9, 12000 <dl_load@@Base+0x1165c>
 cb8:	ldr	x0, [x9, #200]
 cbc:	mov	w1, #0x16                  	// #22
 cc0:	ldr	x8, [x8, #128]
 cc4:	blr	x8
 cc8:	b	cfc <dl_load@@Base+0x358>
 ccc:	ldr	x8, [x22, #192]
 cd0:	adrp	x9, 12000 <dl_load@@Base+0x1165c>
 cd4:	ldr	x20, [x9, #200]
 cd8:	ldr	x21, [x8, #128]
 cdc:	bl	8a0 <__errno_location@plt>
 ce0:	ldr	w1, [x0]
 ce4:	mov	x0, x20
 ce8:	blr	x21
 cec:	ldr	x8, [x22, #192]
 cf0:	mov	x0, x19
 cf4:	ldr	x8, [x8, #304]
 cf8:	blr	x8
 cfc:	mov	x19, xzr
 d00:	mov	x0, x19
 d04:	ldp	x20, x19, [sp, #32]
 d08:	ldp	x22, x21, [sp, #16]
 d0c:	ldp	x29, x30, [sp], #48
 d10:	ret
 d14:	stp	x29, x30, [sp, #-16]!
 d18:	mov	x29, sp
 d1c:	bl	d28 <dl_load@@Base+0x384>
 d20:	ldp	x29, x30, [sp], #16
 d24:	ret
 d28:	stp	x29, x30, [sp, #-80]!
 d2c:	stp	x22, x21, [sp, #48]
 d30:	stp	x20, x19, [sp, #64]
 d34:	mov	x19, x5
 d38:	mov	x21, x2
 d3c:	movi	v0.2d, #0x0
 d40:	mov	w8, #0x2                   	// #2
 d44:	str	x25, [sp, #16]
 d48:	stp	x24, x23, [sp, #32]
 d4c:	mov	x29, sp
 d50:	stp	q0, q0, [x5]
 d54:	str	w8, [x5]
 d58:	str	x3, [x5, #16]
 d5c:	cbz	w4, dbc <dl_load@@Base+0x418>
 d60:	ldr	x8, [x0, #280]
 d64:	add	x25, x3, #0x1
 d68:	mov	x24, x0
 d6c:	mov	x0, x25
 d70:	mov	x20, x3
 d74:	mov	x23, x1
 d78:	blr	x8
 d7c:	mov	x22, x0
 d80:	cbnz	x0, da4 <dl_load@@Base+0x400>
 d84:	ldr	x8, [x24, #96]
 d88:	adrp	x1, 1000 <dl_load@@Base+0x65c>
 d8c:	adrp	x2, 1000 <dl_load@@Base+0x65c>
 d90:	add	x1, x1, #0x3b
 d94:	add	x2, x2, #0x65
 d98:	mov	x0, x23
 d9c:	mov	x3, x25
 da0:	blr	x8
 da4:	mov	x0, x22
 da8:	mov	x1, x21
 dac:	mov	x2, x20
 db0:	bl	810 <memcpy@plt>
 db4:	strb	wzr, [x22, x20]
 db8:	b	dc0 <dl_load@@Base+0x41c>
 dbc:	mov	x22, x21
 dc0:	str	x22, [x19, #8]
 dc4:	ldp	x20, x19, [sp, #64]
 dc8:	ldp	x22, x21, [sp, #48]
 dcc:	ldp	x24, x23, [sp, #32]
 dd0:	ldr	x25, [sp, #16]
 dd4:	ldp	x29, x30, [sp], #80
 dd8:	ret
 ddc:	stp	x29, x30, [sp, #-16]!
 de0:	adrp	x8, 12000 <dl_load@@Base+0x1165c>
 de4:	ldr	x8, [x8, #192]
 de8:	adrp	x9, 12000 <dl_load@@Base+0x1165c>
 dec:	ldr	x0, [x9, #200]
 df0:	adrp	x1, 12000 <dl_load@@Base+0x1165c>
 df4:	ldr	x8, [x8, #56]
 df8:	add	x1, x1, #0x98
 dfc:	mov	x29, sp
 e00:	blr	x8
 e04:	mov	w0, #0x1                   	// #1
 e08:	ldp	x29, x30, [sp], #16
 e0c:	ret
 e10:	sub	sp, sp, #0x80
 e14:	stp	x29, x30, [sp, #96]
 e18:	stp	x20, x19, [sp, #112]
 e1c:	add	x29, sp, #0x60
 e20:	cbz	x0, ea0 <dl_load@@Base+0x4fc>
 e24:	adrp	x19, 12000 <dl_load@@Base+0x1165c>
 e28:	ldr	x8, [x19, #192]
 e2c:	adrp	x20, 12000 <dl_load@@Base+0x1165c>
 e30:	ldr	x0, [x20, #200]
 e34:	adrp	x1, 0 <memcpy@plt-0x810>
 e38:	ldr	x8, [x8, #168]
 e3c:	adrp	x2, 1000 <dl_load@@Base+0x65c>
 e40:	add	x1, x1, #0xf96
 e44:	add	x2, x2, #0x73
 e48:	sub	x4, x29, #0x20
 e4c:	mov	w3, #0x5                   	// #5
 e50:	blr	x8
 e54:	cbz	w0, ea0 <dl_load@@Base+0x4fc>
 e58:	ldr	x0, [x19, #192]
 e5c:	ldr	x1, [x20, #200]
 e60:	adrp	x2, 1000 <dl_load@@Base+0x65c>
 e64:	add	x2, x2, #0x5c
 e68:	add	x5, sp, #0x20
 e6c:	mov	w3, #0x8                   	// #8
 e70:	mov	w4, #0x1                   	// #1
 e74:	bl	d14 <dl_load@@Base+0x370>
 e78:	ldr	x8, [x19, #192]
 e7c:	ldr	x0, [x20, #200]
 e80:	ldur	x1, [x29, #-24]
 e84:	add	x2, sp, #0x20
 e88:	ldr	x8, [x8, #224]
 e8c:	mov	x4, sp
 e90:	mov	w3, wzr
 e94:	blr	x8
 e98:	cmp	w0, #0x0
 e9c:	cset	w0, ne  // ne = any
 ea0:	ldp	x20, x19, [sp, #112]
 ea4:	ldp	x29, x30, [sp, #96]
 ea8:	add	sp, sp, #0x80
 eac:	ret
 eb0:	cbz	x0, ec4 <dl_load@@Base+0x520>
 eb4:	adrp	x8, 0 <memcpy@plt-0x810>
 eb8:	add	x8, x8, #0xec8
 ebc:	str	x8, [x0, #24]
 ec0:	mov	w0, #0x1                   	// #1
 ec4:	ret
 ec8:	stp	x29, x30, [sp, #-48]!
 ecc:	stp	x22, x21, [sp, #16]
 ed0:	mov	x21, x0
 ed4:	mov	w0, #0xffffffff            	// #-1
 ed8:	stp	x20, x19, [sp, #32]
 edc:	mov	x29, sp
 ee0:	cbz	x21, f3c <dl_load@@Base+0x598>
 ee4:	mov	x19, x1
 ee8:	cbz	x1, f3c <dl_load@@Base+0x598>
 eec:	ldr	x0, [x19, #16]
 ef0:	cbz	x0, f10 <dl_load@@Base+0x56c>
 ef4:	adrp	x8, 12000 <dl_load@@Base+0x1165c>
 ef8:	ldr	x8, [x8, #192]
 efc:	ldr	x8, [x8, #304]
 f00:	blr	x8
 f04:	str	xzr, [x19, #16]
 f08:	mov	w0, #0xffffffff            	// #-1
 f0c:	b	f3c <dl_load@@Base+0x598>
 f10:	ldr	w0, [x19, #8]
 f14:	add	x1, x19, #0x30
 f18:	mov	x20, x4
 f1c:	mov	x22, x3
 f20:	bl	c08 <dl_load@@Base+0x264>
 f24:	cbz	x0, f08 <dl_load@@Base+0x564>
 f28:	str	x0, [x19, #16]
 f2c:	str	xzr, [x22]
 f30:	str	xzr, [x20]
 f34:	str	x0, [x21]
 f38:	ldr	w0, [x19, #96]
 f3c:	ldp	x20, x19, [sp, #32]
 f40:	ldp	x22, x21, [sp, #16]
 f44:	ldp	x29, x30, [sp], #48
 f48:	ret
 f4c:	nop
 f50:	mov	x2, x1
 f54:	mov	x1, x0
 f58:	mov	w0, #0x0                   	// #0
 f5c:	b	8b0 <__xstat@plt>

Disassembly of section .fini:

0000000000000f60 <.fini>:
 f60:	stp	x29, x30, [sp, #-16]!
 f64:	mov	x29, sp
 f68:	ldp	x29, x30, [sp], #16
 f6c:	ret
