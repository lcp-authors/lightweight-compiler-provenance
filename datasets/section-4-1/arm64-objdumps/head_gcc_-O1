
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//head_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000a58 <_init>:
 a58:	stp	x29, x30, [sp, #-16]!
 a5c:	mov	x29, sp
 a60:	bl	ba0 <call_weak_fn>
 a64:	ldp	x29, x30, [sp], #16
 a68:	ret

Disassembly of section .plt:

0000000000000a70 <.plt>:
 a70:	stp	x16, x30, [sp, #-16]!
 a74:	adrp	x16, 11000 <__FRAME_END__+0xfdb0>
 a78:	ldr	x17, [x16, #4088]
 a7c:	add	x16, x16, #0xff8
 a80:	br	x17
 a84:	nop
 a88:	nop
 a8c:	nop

0000000000000a90 <builtin_error@plt>:
 a90:	adrp	x16, 12000 <builtin_error>
 a94:	ldr	x17, [x16]
 a98:	add	x16, x16, #0x0
 a9c:	br	x17

0000000000000aa0 <__cxa_finalize@plt>:
 aa0:	adrp	x16, 12000 <builtin_error>
 aa4:	ldr	x17, [x16, #8]
 aa8:	add	x16, x16, #0x8
 aac:	br	x17

0000000000000ab0 <putc@plt>:
 ab0:	adrp	x16, 12000 <builtin_error>
 ab4:	ldr	x17, [x16, #16]
 ab8:	add	x16, x16, #0x10
 abc:	br	x17

0000000000000ac0 <make_bare_word@plt>:
 ac0:	adrp	x16, 12000 <builtin_error>
 ac4:	ldr	x17, [x16, #24]
 ac8:	add	x16, x16, #0x18
 acc:	br	x17

0000000000000ad0 <fclose@plt>:
 ad0:	adrp	x16, 12000 <builtin_error>
 ad4:	ldr	x17, [x16, #32]
 ad8:	add	x16, x16, #0x20
 adc:	br	x17

0000000000000ae0 <fopen@plt>:
 ae0:	adrp	x16, 12000 <builtin_error>
 ae4:	ldr	x17, [x16, #40]
 ae8:	add	x16, x16, #0x28
 aec:	br	x17

0000000000000af0 <builtin_help@plt>:
 af0:	adrp	x16, 12000 <builtin_error>
 af4:	ldr	x17, [x16, #48]
 af8:	add	x16, x16, #0x30
 afc:	br	x17

0000000000000b00 <builtin_usage@plt>:
 b00:	adrp	x16, 12000 <builtin_error>
 b04:	ldr	x17, [x16, #56]
 b08:	add	x16, x16, #0x38
 b0c:	br	x17

0000000000000b10 <getc@plt>:
 b10:	adrp	x16, 12000 <builtin_error>
 b14:	ldr	x17, [x16, #64]
 b18:	add	x16, x16, #0x40
 b1c:	br	x17

0000000000000b20 <strerror@plt>:
 b20:	adrp	x16, 12000 <builtin_error>
 b24:	ldr	x17, [x16, #72]
 b28:	add	x16, x16, #0x48
 b2c:	br	x17

0000000000000b30 <__gmon_start__@plt>:
 b30:	adrp	x16, 12000 <builtin_error>
 b34:	ldr	x17, [x16, #80]
 b38:	add	x16, x16, #0x50
 b3c:	br	x17

0000000000000b40 <strtol@plt>:
 b40:	adrp	x16, 12000 <builtin_error>
 b44:	ldr	x17, [x16, #88]
 b48:	add	x16, x16, #0x58
 b4c:	br	x17

0000000000000b50 <internal_getopt@plt>:
 b50:	adrp	x16, 12000 <builtin_error>
 b54:	ldr	x17, [x16, #96]
 b58:	add	x16, x16, #0x60
 b5c:	br	x17

0000000000000b60 <reset_internal_getopt@plt>:
 b60:	adrp	x16, 12000 <builtin_error>
 b64:	ldr	x17, [x16, #104]
 b68:	add	x16, x16, #0x68
 b6c:	br	x17

0000000000000b70 <printf@plt>:
 b70:	adrp	x16, 12000 <builtin_error>
 b74:	ldr	x17, [x16, #112]
 b78:	add	x16, x16, #0x70
 b7c:	br	x17

0000000000000b80 <__errno_location@plt>:
 b80:	adrp	x16, 12000 <builtin_error>
 b84:	ldr	x17, [x16, #120]
 b88:	add	x16, x16, #0x78
 b8c:	br	x17

0000000000000b90 <make_word_list@plt>:
 b90:	adrp	x16, 12000 <builtin_error>
 b94:	ldr	x17, [x16, #128]
 b98:	add	x16, x16, #0x80
 b9c:	br	x17

Disassembly of section .text:

0000000000000ba0 <call_weak_fn>:
 ba0:	adrp	x0, 11000 <__FRAME_END__+0xfdb0>
 ba4:	ldr	x0, [x0, #4040]
 ba8:	cbz	x0, bb0 <call_weak_fn+0x10>
 bac:	b	b30 <__gmon_start__@plt>
 bb0:	ret

0000000000000bb4 <deregister_tm_clones>:
 bb4:	adrp	x0, 12000 <builtin_error>
 bb8:	add	x0, x0, #0xf0
 bbc:	adrp	x1, 12000 <builtin_error>
 bc0:	add	x1, x1, #0xf0
 bc4:	cmp	x0, x1
 bc8:	b.eq	bf4 <deregister_tm_clones+0x40>  // b.none
 bcc:	adrp	x1, 11000 <__FRAME_END__+0xfdb0>
 bd0:	ldr	x1, [x1, #4008]
 bd4:	cbz	x1, bf4 <deregister_tm_clones+0x40>
 bd8:	stp	x29, x30, [sp, #-16]!
 bdc:	mov	x29, sp
 be0:	adrp	x0, 12000 <builtin_error>
 be4:	add	x0, x0, #0xf0
 be8:	blr	x1
 bec:	ldp	x29, x30, [sp], #16
 bf0:	ret
 bf4:	ret

0000000000000bf8 <register_tm_clones>:
 bf8:	adrp	x0, 12000 <builtin_error>
 bfc:	add	x0, x0, #0xf0
 c00:	adrp	x1, 12000 <builtin_error>
 c04:	add	x1, x1, #0xf0
 c08:	sub	x0, x0, x1
 c0c:	lsr	x1, x0, #63
 c10:	add	x0, x1, x0, asr #3
 c14:	cmp	xzr, x0, asr #1
 c18:	b.eq	c48 <register_tm_clones+0x50>  // b.none
 c1c:	asr	x1, x0, #1
 c20:	adrp	x2, 11000 <__FRAME_END__+0xfdb0>
 c24:	ldr	x2, [x2, #4064]
 c28:	cbz	x2, c48 <register_tm_clones+0x50>
 c2c:	stp	x29, x30, [sp, #-16]!
 c30:	mov	x29, sp
 c34:	adrp	x0, 12000 <builtin_error>
 c38:	add	x0, x0, #0xf0
 c3c:	blr	x2
 c40:	ldp	x29, x30, [sp], #16
 c44:	ret
 c48:	ret

0000000000000c4c <__do_global_dtors_aux>:
 c4c:	adrp	x0, 12000 <builtin_error>
 c50:	ldrb	w0, [x0, #240]
 c54:	cbnz	w0, c90 <__do_global_dtors_aux+0x44>
 c58:	stp	x29, x30, [sp, #-16]!
 c5c:	mov	x29, sp
 c60:	adrp	x0, 11000 <__FRAME_END__+0xfdb0>
 c64:	ldr	x0, [x0, #4016]
 c68:	cbz	x0, c78 <__do_global_dtors_aux+0x2c>
 c6c:	adrp	x0, 12000 <builtin_error>
 c70:	ldr	x0, [x0, #136]
 c74:	bl	aa0 <__cxa_finalize@plt>
 c78:	bl	bb4 <deregister_tm_clones>
 c7c:	adrp	x0, 12000 <builtin_error>
 c80:	mov	w1, #0x1                   	// #1
 c84:	strb	w1, [x0, #240]
 c88:	ldp	x29, x30, [sp], #16
 c8c:	ret
 c90:	ret

0000000000000c94 <frame_dummy>:
 c94:	stp	x29, x30, [sp, #-16]!
 c98:	mov	x29, sp
 c9c:	bl	bf8 <register_tm_clones>
 ca0:	ldp	x29, x30, [sp], #16
 ca4:	ret

0000000000000ca8 <file_head>:
 ca8:	stp	x29, x30, [sp, #-48]!
 cac:	mov	x29, sp
 cb0:	stp	x21, x22, [sp, #32]
 cb4:	mov	w22, w1
 cb8:	cbz	w1, d3c <file_head+0x94>
 cbc:	stp	x19, x20, [sp, #16]
 cc0:	mov	x20, x0
 cc4:	adrp	x21, 11000 <__FRAME_END__+0xfdb0>
 cc8:	ldr	x21, [x21, #4024]
 ccc:	b	d08 <file_head+0x60>
 cd0:	bl	b80 <__errno_location@plt>
 cd4:	ldr	w0, [x0]
 cd8:	bl	b20 <strerror@plt>
 cdc:	mov	x1, x0
 ce0:	adrp	x0, 0 <_init-0xa58>
 ce4:	add	x0, x0, #0xf88
 ce8:	bl	a90 <builtin_error@plt>
 cec:	mov	w0, #0x1                   	// #1
 cf0:	ldp	x19, x20, [sp, #16]
 cf4:	ldp	x21, x22, [sp, #32]
 cf8:	ldp	x29, x30, [sp], #48
 cfc:	ret
 d00:	subs	w22, w22, #0x1
 d04:	b.eq	d44 <file_head+0x9c>  // b.none
 d08:	mov	x0, x20
 d0c:	bl	b10 <getc@plt>
 d10:	mov	w19, w0
 d14:	cmn	w0, #0x1
 d18:	b.eq	d00 <file_head+0x58>  // b.none
 d1c:	ldr	x1, [x21]
 d20:	mov	w0, w19
 d24:	bl	ab0 <putc@plt>
 d28:	cmn	w0, #0x1
 d2c:	b.eq	cd0 <file_head+0x28>  // b.none
 d30:	cmp	w19, #0xa
 d34:	b.ne	d08 <file_head+0x60>  // b.any
 d38:	b	d00 <file_head+0x58>
 d3c:	mov	w0, w1
 d40:	b	cf4 <file_head+0x4c>
 d44:	mov	w0, #0x0                   	// #0
 d48:	ldp	x19, x20, [sp, #16]
 d4c:	b	cf4 <file_head+0x4c>

0000000000000d50 <head_builtin>:
 d50:	stp	x29, x30, [sp, #-96]!
 d54:	mov	x29, sp
 d58:	stp	x19, x20, [sp, #16]
 d5c:	stp	x21, x22, [sp, #32]
 d60:	stp	x23, x24, [sp, #48]
 d64:	mov	x20, x0
 d68:	cbz	x0, dd0 <head_builtin+0x80>
 d6c:	mov	x19, x0
 d70:	mov	w21, #0x6e                  	// #110
 d74:	ldr	x0, [x19, #8]
 d78:	ldr	x0, [x0]
 d7c:	ldrb	w1, [x0]
 d80:	cmp	w1, #0x2d
 d84:	b.ne	dd0 <head_builtin+0x80>  // b.any
 d88:	ldrb	w1, [x0, #1]
 d8c:	sub	w1, w1, #0x30
 d90:	and	w1, w1, #0xff
 d94:	cmp	w1, #0x9
 d98:	b.hi	dd0 <head_builtin+0x80>  // b.pmore
 d9c:	add	x0, x0, #0x1
 da0:	bl	ac0 <make_bare_word@plt>
 da4:	ldr	x1, [x19]
 da8:	bl	b90 <make_word_list@plt>
 dac:	ldr	x1, [x19, #8]
 db0:	ldr	x1, [x1]
 db4:	strb	w21, [x1, #1]
 db8:	ldr	x1, [x19, #8]
 dbc:	ldr	x1, [x1]
 dc0:	strb	wzr, [x1, #2]
 dc4:	str	x0, [x19]
 dc8:	ldr	x19, [x0]
 dcc:	cbnz	x19, d74 <head_builtin+0x24>
 dd0:	bl	b60 <reset_internal_getopt@plt>
 dd4:	mov	w22, #0xa                   	// #10
 dd8:	adrp	x19, 0 <_init-0xa58>
 ddc:	add	x19, x19, #0xfb8
 de0:	adrp	x0, 11000 <__FRAME_END__+0xfdb0>
 de4:	ldr	x21, [x0, #4048]
 de8:	mov	w23, w22
 dec:	mov	x1, x19
 df0:	mov	x0, x20
 df4:	bl	b50 <internal_getopt@plt>
 df8:	cmn	w0, #0x1
 dfc:	b.eq	e78 <head_builtin+0x128>  // b.none
 e00:	cmn	w0, #0x63
 e04:	b.eq	e4c <head_builtin+0xfc>  // b.none
 e08:	cmp	w0, #0x6e
 e0c:	b.ne	e6c <head_builtin+0x11c>  // b.any
 e10:	mov	w2, w23
 e14:	mov	x1, #0x0                   	// #0
 e18:	ldr	x0, [x21]
 e1c:	bl	b40 <strtol@plt>
 e20:	mov	w22, w0
 e24:	cmp	w0, #0x0
 e28:	b.gt	dec <head_builtin+0x9c>
 e2c:	adrp	x0, 11000 <__FRAME_END__+0xfdb0>
 e30:	ldr	x0, [x0, #4048]
 e34:	ldr	x1, [x0]
 e38:	adrp	x0, 0 <_init-0xa58>
 e3c:	add	x0, x0, #0xfa0
 e40:	bl	a90 <builtin_error@plt>
 e44:	mov	w19, #0x102                 	// #258
 e48:	b	e54 <head_builtin+0x104>
 e4c:	bl	af0 <builtin_help@plt>
 e50:	mov	w19, #0x102                 	// #258
 e54:	mov	w0, w19
 e58:	ldp	x19, x20, [sp, #16]
 e5c:	ldp	x21, x22, [sp, #32]
 e60:	ldp	x23, x24, [sp, #48]
 e64:	ldp	x29, x30, [sp], #96
 e68:	ret
 e6c:	bl	b00 <builtin_usage@plt>
 e70:	mov	w19, #0x102                 	// #258
 e74:	b	e54 <head_builtin+0x104>
 e78:	stp	x25, x26, [sp, #64]
 e7c:	adrp	x0, 11000 <__FRAME_END__+0xfdb0>
 e80:	ldr	x0, [x0, #4056]
 e84:	ldr	x25, [x0]
 e88:	mov	x21, x25
 e8c:	mov	w19, #0x0                   	// #0
 e90:	mov	w23, #0x1                   	// #1
 e94:	cbz	x25, eb8 <head_builtin+0x168>
 e98:	str	x27, [sp, #80]
 e9c:	adrp	x24, 0 <_init-0xa58>
 ea0:	add	x24, x24, #0xfc0
 ea4:	adrp	x27, 0 <_init-0xa58>
 ea8:	add	x27, x27, #0xf98
 eac:	adrp	x26, 1000 <_fini+0x8c>
 eb0:	add	x26, x26, #0x0
 eb4:	b	f44 <head_builtin+0x1f4>
 eb8:	mov	w1, w22
 ebc:	adrp	x0, 11000 <__FRAME_END__+0xfdb0>
 ec0:	ldr	x0, [x0, #4032]
 ec4:	ldr	x0, [x0]
 ec8:	bl	ca8 <file_head>
 ecc:	mov	w19, w0
 ed0:	ldp	x25, x26, [sp, #64]
 ed4:	b	e54 <head_builtin+0x104>
 ed8:	ldr	x0, [x21, #8]
 edc:	ldr	x20, [x0]
 ee0:	bl	b80 <__errno_location@plt>
 ee4:	ldr	w0, [x0]
 ee8:	bl	b20 <strerror@plt>
 eec:	mov	x2, x0
 ef0:	mov	x1, x20
 ef4:	adrp	x0, 0 <_init-0xa58>
 ef8:	add	x0, x0, #0xfc8
 efc:	bl	a90 <builtin_error@plt>
 f00:	b	f3c <head_builtin+0x1ec>
 f04:	cmp	w23, #0x0
 f08:	ldr	x0, [x21, #8]
 f0c:	ldr	x2, [x0]
 f10:	csel	x1, x26, x27, ne  // ne = any
 f14:	adrp	x0, 0 <_init-0xa58>
 f18:	add	x0, x0, #0xfd0
 f1c:	bl	b70 <printf@plt>
 f20:	mov	w23, #0x0                   	// #0
 f24:	mov	w1, w22
 f28:	mov	x0, x20
 f2c:	bl	ca8 <file_head>
 f30:	mov	w19, w0
 f34:	mov	x0, x20
 f38:	bl	ad0 <fclose@plt>
 f3c:	ldr	x21, [x21]
 f40:	cbz	x21, f68 <head_builtin+0x218>
 f44:	ldr	x0, [x21, #8]
 f48:	mov	x1, x24
 f4c:	ldr	x0, [x0]
 f50:	bl	ae0 <fopen@plt>
 f54:	mov	x20, x0
 f58:	cbz	x0, ed8 <head_builtin+0x188>
 f5c:	ldr	x0, [x25]
 f60:	cbnz	x0, f04 <head_builtin+0x1b4>
 f64:	b	f24 <head_builtin+0x1d4>
 f68:	ldp	x25, x26, [sp, #64]
 f6c:	ldr	x27, [sp, #80]
 f70:	b	e54 <head_builtin+0x104>

Disassembly of section .fini:

0000000000000f74 <_fini>:
 f74:	stp	x29, x30, [sp, #-16]!
 f78:	mov	x29, sp
 f7c:	ldp	x29, x30, [sp], #16
 f80:	ret
