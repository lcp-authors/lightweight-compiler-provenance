
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-hibernate-resume_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000210b30 <_start>:
  210b30:	mov	x29, #0x0                   	// #0
  210b34:	mov	x30, #0x0                   	// #0
  210b38:	mov	x5, x0
  210b3c:	ldr	x1, [sp]
  210b40:	add	x2, sp, #0x8
  210b44:	mov	x6, sp
  210b48:	movz	x0, #0x0, lsl #48
  210b4c:	movk	x0, #0x0, lsl #32
  210b50:	movk	x0, #0x21, lsl #16
  210b54:	movk	x0, #0xc80
  210b58:	movz	x3, #0x0, lsl #48
  210b5c:	movk	x3, #0x0, lsl #32
  210b60:	movk	x3, #0x21, lsl #16
  210b64:	movk	x3, #0xed8
  210b68:	movz	x4, #0x0, lsl #48
  210b6c:	movk	x4, #0x0, lsl #32
  210b70:	movk	x4, #0x21, lsl #16
  210b74:	movk	x4, #0xf58
  210b78:	bl	210fc0 <__libc_start_main@plt>
  210b7c:	bl	210fd0 <abort@plt>

0000000000210b80 <call_weak_fn>:
  210b80:	adrp	x0, 221000 <__xstat64@plt+0xff50>
  210b84:	ldr	x0, [x0, #672]
  210b88:	cbz	x0, 210b90 <call_weak_fn+0x10>
  210b8c:	b	210fe0 <__gmon_start__@plt>
  210b90:	ret

0000000000210b94 <deregister_tm_clones>:
  210b94:	adrp	x0, 231000 <_DYNAMIC+0xff30>
  210b98:	add	x0, x0, #0x340
  210b9c:	adrp	x1, 231000 <_DYNAMIC+0xff30>
  210ba0:	add	x1, x1, #0x340
  210ba4:	cmp	x0, x1
  210ba8:	b.eq	210bdc <deregister_tm_clones+0x48>  // b.none
  210bac:	stp	x29, x30, [sp, #-32]!
  210bb0:	mov	x29, sp
  210bb4:	adrp	x0, 200000 <__FRAME_END__-0xa20>
  210bb8:	ldr	x0, [x0, #2256]
  210bbc:	str	x0, [sp, #24]
  210bc0:	mov	x1, x0
  210bc4:	cbz	x1, 210bd4 <deregister_tm_clones+0x40>
  210bc8:	adrp	x0, 231000 <_DYNAMIC+0xff30>
  210bcc:	add	x0, x0, #0x340
  210bd0:	blr	x1
  210bd4:	ldp	x29, x30, [sp], #32
  210bd8:	ret
  210bdc:	ret

0000000000210be0 <register_tm_clones>:
  210be0:	adrp	x0, 231000 <_DYNAMIC+0xff30>
  210be4:	add	x0, x0, #0x340
  210be8:	adrp	x1, 231000 <_DYNAMIC+0xff30>
  210bec:	add	x1, x1, #0x340
  210bf0:	sub	x0, x0, x1
  210bf4:	lsr	x1, x0, #63
  210bf8:	add	x0, x1, x0, asr #3
  210bfc:	cmp	xzr, x0, asr #1
  210c00:	b.eq	210c38 <register_tm_clones+0x58>  // b.none
  210c04:	stp	x29, x30, [sp, #-32]!
  210c08:	mov	x29, sp
  210c0c:	asr	x1, x0, #1
  210c10:	adrp	x0, 200000 <__FRAME_END__-0xa20>
  210c14:	ldr	x0, [x0, #2264]
  210c18:	str	x0, [sp, #24]
  210c1c:	mov	x2, x0
  210c20:	cbz	x2, 210c30 <register_tm_clones+0x50>
  210c24:	adrp	x0, 231000 <_DYNAMIC+0xff30>
  210c28:	add	x0, x0, #0x340
  210c2c:	blr	x2
  210c30:	ldp	x29, x30, [sp], #32
  210c34:	ret
  210c38:	ret

0000000000210c3c <__do_global_dtors_aux>:
  210c3c:	adrp	x0, 231000 <_DYNAMIC+0xff30>
  210c40:	ldrb	w0, [x0, #832]
  210c44:	cbnz	w0, 210c68 <__do_global_dtors_aux+0x2c>
  210c48:	stp	x29, x30, [sp, #-16]!
  210c4c:	mov	x29, sp
  210c50:	bl	210b94 <deregister_tm_clones>
  210c54:	adrp	x0, 231000 <_DYNAMIC+0xff30>
  210c58:	mov	w1, #0x1                   	// #1
  210c5c:	strb	w1, [x0, #832]
  210c60:	ldp	x29, x30, [sp], #16
  210c64:	ret
  210c68:	ret

0000000000210c6c <frame_dummy>:
  210c6c:	stp	x29, x30, [sp, #-16]!
  210c70:	mov	x29, sp
  210c74:	bl	210be0 <register_tm_clones>
  210c78:	ldp	x29, x30, [sp], #16
  210c7c:	ret

0000000000210c80 <main>:
  210c80:	sub	sp, sp, #0xb0
  210c84:	stp	x29, x30, [sp, #128]
  210c88:	add	x29, sp, #0x80
  210c8c:	cmp	w0, #0x2
  210c90:	str	x21, [sp, #144]
  210c94:	stp	x20, x19, [sp, #160]
  210c98:	str	xzr, [x29, #24]
  210c9c:	b.ne	210d68 <main+0xe8>  // b.any
  210ca0:	mov	x19, x1
  210ca4:	bl	210ff0 <log_setup_service@plt>
  210ca8:	mov	w0, #0x12                  	// #18
  210cac:	bl	211000 <umask@plt>
  210cb0:	bl	211010 <in_initrd@plt>
  210cb4:	tbz	w0, #0, 210d60 <main+0xe0>
  210cb8:	ldr	x19, [x19, #8]
  210cbc:	mov	x1, sp
  210cc0:	mov	x0, x19
  210cc4:	bl	210f60 <stat64>
  210cc8:	tbnz	w0, #31, 210da4 <main+0x124>
  210ccc:	ldr	w8, [sp, #16]
  210cd0:	and	w8, w8, #0xf000
  210cd4:	cmp	w8, #0x6, lsl #12
  210cd8:	b.ne	210de0 <main+0x160>  // b.any
  210cdc:	ldr	x20, [sp, #32]
  210ce0:	mov	x0, x20
  210ce4:	bl	211020 <gnu_dev_major@plt>
  210ce8:	mov	w21, w0
  210cec:	mov	x0, x20
  210cf0:	bl	211030 <gnu_dev_minor@plt>
  210cf4:	adrp	x1, 200000 <__FRAME_END__-0xa20>
  210cf8:	mov	w3, w0
  210cfc:	add	x1, x1, #0x903
  210d00:	add	x0, x29, #0x18
  210d04:	mov	w2, w21
  210d08:	bl	211040 <asprintf@plt>
  210d0c:	tbnz	w0, #31, 210e20 <main+0x1a0>
  210d10:	ldr	x0, [x29, #24]
  210d14:	bl	210eb0 <write_string_file>
  210d18:	mov	w20, w0
  210d1c:	mov	w0, wzr
  210d20:	bl	211050 <log_get_max_level_realm@plt>
  210d24:	tbnz	w20, #31, 210e40 <main+0x1c0>
  210d28:	cmp	w0, #0x6
  210d2c:	b.lt	210d60 <main+0xe0>  // b.tstop
  210d30:	ldr	x7, [x29, #24]
  210d34:	adrp	x2, 200000 <__FRAME_END__-0xa20>
  210d38:	adrp	x4, 200000 <__FRAME_END__-0xa20>
  210d3c:	adrp	x5, 200000 <__FRAME_END__-0xa20>
  210d40:	add	x2, x2, #0x90c
  210d44:	add	x4, x4, #0x98c
  210d48:	add	x5, x5, #0x991
  210d4c:	mov	w0, #0x6                   	// #6
  210d50:	mov	w3, #0x3d                  	// #61
  210d54:	mov	w1, wzr
  210d58:	mov	x6, x19
  210d5c:	bl	211060 <log_internal_realm@plt>
  210d60:	mov	w19, wzr
  210d64:	b	210e78 <main+0x1f8>
  210d68:	mov	w0, wzr
  210d6c:	bl	211050 <log_get_max_level_realm@plt>
  210d70:	cmp	w0, #0x3
  210d74:	b.lt	210e74 <main+0x1f4>  // b.tstop
  210d78:	adrp	x2, 200000 <__FRAME_END__-0xa20>
  210d7c:	adrp	x4, 200000 <__FRAME_END__-0xa20>
  210d80:	adrp	x5, 200000 <__FRAME_END__-0xa20>
  210d84:	add	x2, x2, #0x90c
  210d88:	add	x4, x4, #0x98c
  210d8c:	add	x5, x5, #0x8e0
  210d90:	mov	w0, #0x3                   	// #3
  210d94:	mov	w3, #0x13                  	// #19
  210d98:	mov	w1, wzr
  210d9c:	bl	211060 <log_internal_realm@plt>
  210da0:	b	210e74 <main+0x1f4>
  210da4:	mov	w0, wzr
  210da8:	bl	211050 <log_get_max_level_realm@plt>
  210dac:	cmp	w0, #0x3
  210db0:	b.lt	210e74 <main+0x1f4>  // b.tstop
  210db4:	bl	211070 <__errno_location@plt>
  210db8:	ldr	w1, [x0]
  210dbc:	adrp	x2, 200000 <__FRAME_END__-0xa20>
  210dc0:	adrp	x4, 200000 <__FRAME_END__-0xa20>
  210dc4:	adrp	x5, 200000 <__FRAME_END__-0xa20>
  210dc8:	add	x2, x2, #0x90c
  210dcc:	add	x4, x4, #0x98c
  210dd0:	add	x5, x5, #0x9c4
  210dd4:	mov	w0, #0x3                   	// #3
  210dd8:	mov	w3, #0x22                  	// #34
  210ddc:	b	210e14 <main+0x194>
  210de0:	mov	w0, wzr
  210de4:	bl	211050 <log_get_max_level_realm@plt>
  210de8:	cmp	w0, #0x3
  210dec:	b.lt	210e74 <main+0x1f4>  // b.tstop
  210df0:	adrp	x2, 200000 <__FRAME_END__-0xa20>
  210df4:	adrp	x4, 200000 <__FRAME_END__-0xa20>
  210df8:	adrp	x5, 200000 <__FRAME_END__-0xa20>
  210dfc:	add	x2, x2, #0x90c
  210e00:	add	x4, x4, #0x98c
  210e04:	add	x5, x5, #0x962
  210e08:	mov	w0, #0x3                   	// #3
  210e0c:	mov	w3, #0x27                  	// #39
  210e10:	mov	w1, wzr
  210e14:	mov	x6, x19
  210e18:	bl	211060 <log_internal_realm@plt>
  210e1c:	b	210e74 <main+0x1f4>
  210e20:	adrp	x1, 200000 <__FRAME_END__-0xa20>
  210e24:	adrp	x3, 200000 <__FRAME_END__-0xa20>
  210e28:	add	x1, x1, #0x90c
  210e2c:	add	x3, x3, #0x98c
  210e30:	mov	w2, #0x2c                  	// #44
  210e34:	mov	w0, wzr
  210e38:	bl	211080 <log_oom_internal@plt>
  210e3c:	b	210e74 <main+0x1f4>
  210e40:	cmp	w0, #0x3
  210e44:	b.lt	210e74 <main+0x1f4>  // b.tstop
  210e48:	ldr	x6, [x29, #24]
  210e4c:	adrp	x2, 200000 <__FRAME_END__-0xa20>
  210e50:	adrp	x4, 200000 <__FRAME_END__-0xa20>
  210e54:	adrp	x5, 200000 <__FRAME_END__-0xa20>
  210e58:	add	x2, x2, #0x90c
  210e5c:	add	x4, x4, #0x98c
  210e60:	add	x5, x5, #0x934
  210e64:	mov	w0, #0x3                   	// #3
  210e68:	mov	w3, #0x32                  	// #50
  210e6c:	mov	w1, w20
  210e70:	b	210e18 <main+0x198>
  210e74:	mov	w19, #0x1                   	// #1
  210e78:	add	x0, x29, #0x18
  210e7c:	bl	210e98 <freep>
  210e80:	mov	w0, w19
  210e84:	ldp	x20, x19, [sp, #160]
  210e88:	ldr	x21, [sp, #144]
  210e8c:	ldp	x29, x30, [sp, #128]
  210e90:	add	sp, sp, #0xb0
  210e94:	ret

0000000000210e98 <freep>:
  210e98:	stp	x29, x30, [sp, #-16]!
  210e9c:	ldr	x0, [x0]
  210ea0:	mov	x29, sp
  210ea4:	bl	211090 <free@plt>
  210ea8:	ldp	x29, x30, [sp], #16
  210eac:	ret

0000000000210eb0 <write_string_file>:
  210eb0:	stp	x29, x30, [sp, #-16]!
  210eb4:	mov	x1, x0
  210eb8:	adrp	x0, 200000 <__FRAME_END__-0xa20>
  210ebc:	add	x0, x0, #0x9b2
  210ec0:	mov	w2, #0x20                  	// #32
  210ec4:	mov	x3, xzr
  210ec8:	mov	x29, sp
  210ecc:	bl	2110a0 <write_string_file_ts@plt>
  210ed0:	ldp	x29, x30, [sp], #16
  210ed4:	ret

0000000000210ed8 <__libc_csu_init>:
  210ed8:	stp	x29, x30, [sp, #-64]!
  210edc:	mov	x29, sp
  210ee0:	stp	x19, x20, [sp, #16]
  210ee4:	adrp	x20, 221000 <__xstat64@plt+0xff50>
  210ee8:	add	x20, x20, #0xd0
  210eec:	stp	x21, x22, [sp, #32]
  210ef0:	adrp	x21, 221000 <__xstat64@plt+0xff50>
  210ef4:	add	x21, x21, #0xc8
  210ef8:	sub	x20, x20, x21
  210efc:	mov	w22, w0
  210f00:	stp	x23, x24, [sp, #48]
  210f04:	mov	x23, x1
  210f08:	mov	x24, x2
  210f0c:	bl	210f70 <_init>
  210f10:	cmp	xzr, x20, asr #3
  210f14:	b.eq	210f40 <__libc_csu_init+0x68>  // b.none
  210f18:	asr	x20, x20, #3
  210f1c:	mov	x19, #0x0                   	// #0
  210f20:	ldr	x3, [x21, x19, lsl #3]
  210f24:	mov	x2, x24
  210f28:	add	x19, x19, #0x1
  210f2c:	mov	x1, x23
  210f30:	mov	w0, w22
  210f34:	blr	x3
  210f38:	cmp	x20, x19
  210f3c:	b.ne	210f20 <__libc_csu_init+0x48>  // b.any
  210f40:	ldp	x19, x20, [sp, #16]
  210f44:	ldp	x21, x22, [sp, #32]
  210f48:	ldp	x23, x24, [sp, #48]
  210f4c:	ldp	x29, x30, [sp], #64
  210f50:	ret
  210f54:	nop

0000000000210f58 <__libc_csu_fini>:
  210f58:	ret
  210f5c:	udf	#0

0000000000210f60 <stat64>:
  210f60:	mov	x2, x1
  210f64:	mov	x1, x0
  210f68:	mov	w0, #0x0                   	// #0
  210f6c:	b	2110b0 <__xstat64@plt>

Disassembly of section .init:

0000000000210f70 <_init>:
  210f70:	stp	x29, x30, [sp, #-16]!
  210f74:	mov	x29, sp
  210f78:	bl	210b80 <call_weak_fn>
  210f7c:	ldp	x29, x30, [sp], #16
  210f80:	ret

Disassembly of section .fini:

0000000000210f84 <_fini>:
  210f84:	stp	x29, x30, [sp, #-16]!
  210f88:	mov	x29, sp
  210f8c:	ldp	x29, x30, [sp], #16
  210f90:	ret

Disassembly of section .plt:

0000000000210fa0 <__libc_start_main@plt-0x20>:
  210fa0:	stp	x16, x30, [sp, #-16]!
  210fa4:	adrp	x16, 221000 <__xstat64@plt+0xff50>
  210fa8:	ldr	x17, [x16, #696]
  210fac:	add	x16, x16, #0x2b8
  210fb0:	br	x17
  210fb4:	nop
  210fb8:	nop
  210fbc:	nop

0000000000210fc0 <__libc_start_main@plt>:
  210fc0:	adrp	x16, 221000 <__xstat64@plt+0xff50>
  210fc4:	ldr	x17, [x16, #704]
  210fc8:	add	x16, x16, #0x2c0
  210fcc:	br	x17

0000000000210fd0 <abort@plt>:
  210fd0:	adrp	x16, 221000 <__xstat64@plt+0xff50>
  210fd4:	ldr	x17, [x16, #712]
  210fd8:	add	x16, x16, #0x2c8
  210fdc:	br	x17

0000000000210fe0 <__gmon_start__@plt>:
  210fe0:	adrp	x16, 221000 <__xstat64@plt+0xff50>
  210fe4:	ldr	x17, [x16, #720]
  210fe8:	add	x16, x16, #0x2d0
  210fec:	br	x17

0000000000210ff0 <log_setup_service@plt>:
  210ff0:	adrp	x16, 221000 <__xstat64@plt+0xff50>
  210ff4:	ldr	x17, [x16, #728]
  210ff8:	add	x16, x16, #0x2d8
  210ffc:	br	x17

0000000000211000 <umask@plt>:
  211000:	adrp	x16, 221000 <__xstat64@plt+0xff50>
  211004:	ldr	x17, [x16, #736]
  211008:	add	x16, x16, #0x2e0
  21100c:	br	x17

0000000000211010 <in_initrd@plt>:
  211010:	adrp	x16, 221000 <__xstat64@plt+0xff50>
  211014:	ldr	x17, [x16, #744]
  211018:	add	x16, x16, #0x2e8
  21101c:	br	x17

0000000000211020 <gnu_dev_major@plt>:
  211020:	adrp	x16, 221000 <__xstat64@plt+0xff50>
  211024:	ldr	x17, [x16, #752]
  211028:	add	x16, x16, #0x2f0
  21102c:	br	x17

0000000000211030 <gnu_dev_minor@plt>:
  211030:	adrp	x16, 221000 <__xstat64@plt+0xff50>
  211034:	ldr	x17, [x16, #760]
  211038:	add	x16, x16, #0x2f8
  21103c:	br	x17

0000000000211040 <asprintf@plt>:
  211040:	adrp	x16, 221000 <__xstat64@plt+0xff50>
  211044:	ldr	x17, [x16, #768]
  211048:	add	x16, x16, #0x300
  21104c:	br	x17

0000000000211050 <log_get_max_level_realm@plt>:
  211050:	adrp	x16, 221000 <__xstat64@plt+0xff50>
  211054:	ldr	x17, [x16, #776]
  211058:	add	x16, x16, #0x308
  21105c:	br	x17

0000000000211060 <log_internal_realm@plt>:
  211060:	adrp	x16, 221000 <__xstat64@plt+0xff50>
  211064:	ldr	x17, [x16, #784]
  211068:	add	x16, x16, #0x310
  21106c:	br	x17

0000000000211070 <__errno_location@plt>:
  211070:	adrp	x16, 221000 <__xstat64@plt+0xff50>
  211074:	ldr	x17, [x16, #792]
  211078:	add	x16, x16, #0x318
  21107c:	br	x17

0000000000211080 <log_oom_internal@plt>:
  211080:	adrp	x16, 221000 <__xstat64@plt+0xff50>
  211084:	ldr	x17, [x16, #800]
  211088:	add	x16, x16, #0x320
  21108c:	br	x17

0000000000211090 <free@plt>:
  211090:	adrp	x16, 221000 <__xstat64@plt+0xff50>
  211094:	ldr	x17, [x16, #808]
  211098:	add	x16, x16, #0x328
  21109c:	br	x17

00000000002110a0 <write_string_file_ts@plt>:
  2110a0:	adrp	x16, 221000 <__xstat64@plt+0xff50>
  2110a4:	ldr	x17, [x16, #816]
  2110a8:	add	x16, x16, #0x330
  2110ac:	br	x17

00000000002110b0 <__xstat64@plt>:
  2110b0:	adrp	x16, 221000 <__xstat64@plt+0xff50>
  2110b4:	ldr	x17, [x16, #824]
  2110b8:	add	x16, x16, #0x338
  2110bc:	br	x17
