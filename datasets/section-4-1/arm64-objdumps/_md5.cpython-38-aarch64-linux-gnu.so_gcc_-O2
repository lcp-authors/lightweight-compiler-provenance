
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_md5.cpython-38-aarch64-linux-gnu.so_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000cc8 <.init>:
 cc8:	stp	x29, x30, [sp, #-16]!
 ccc:	mov	x29, sp
 cd0:	bl	e20 <_Py_strhex@plt+0x10>
 cd4:	ldp	x29, x30, [sp], #16
 cd8:	ret

Disassembly of section .plt:

0000000000000ce0 <memcpy@plt-0x20>:
 ce0:	stp	x16, x30, [sp, #-16]!
 ce4:	adrp	x16, 12000 <PyInit__md5@@Base+0xffd8>
 ce8:	ldr	x17, [x16, #4088]
 cec:	add	x16, x16, #0xff8
 cf0:	br	x17
 cf4:	nop
 cf8:	nop
 cfc:	nop

0000000000000d00 <memcpy@plt>:
 d00:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d04:	ldr	x17, [x16]
 d08:	add	x16, x16, #0x0
 d0c:	br	x17

0000000000000d10 <PyBuffer_Release@plt>:
 d10:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d14:	ldr	x17, [x16, #8]
 d18:	add	x16, x16, #0x8
 d1c:	br	x17

0000000000000d20 <__cxa_finalize@plt>:
 d20:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d24:	ldr	x17, [x16, #16]
 d28:	add	x16, x16, #0x10
 d2c:	br	x17

0000000000000d30 <PyBytes_FromStringAndSize@plt>:
 d30:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d34:	ldr	x17, [x16, #24]
 d38:	add	x16, x16, #0x18
 d3c:	br	x17

0000000000000d40 <_Py_Dealloc@plt>:
 d40:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d44:	ldr	x17, [x16, #32]
 d48:	add	x16, x16, #0x20
 d4c:	br	x17

0000000000000d50 <_PyArg_UnpackKeywords@plt>:
 d50:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d54:	ldr	x17, [x16, #40]
 d58:	add	x16, x16, #0x28
 d5c:	br	x17

0000000000000d60 <PyErr_SetString@plt>:
 d60:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d64:	ldr	x17, [x16, #48]
 d68:	add	x16, x16, #0x30
 d6c:	br	x17

0000000000000d70 <PyObject_Free@plt>:
 d70:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d74:	ldr	x17, [x16, #56]
 d78:	add	x16, x16, #0x38
 d7c:	br	x17

0000000000000d80 <PyType_Ready@plt>:
 d80:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d84:	ldr	x17, [x16, #64]
 d88:	add	x16, x16, #0x40
 d8c:	br	x17

0000000000000d90 <PyLong_FromLong@plt>:
 d90:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d94:	ldr	x17, [x16, #72]
 d98:	add	x16, x16, #0x48
 d9c:	br	x17

0000000000000da0 <__gmon_start__@plt>:
 da0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 da4:	ldr	x17, [x16, #80]
 da8:	add	x16, x16, #0x50
 dac:	br	x17

0000000000000db0 <PyErr_Occurred@plt>:
 db0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 db4:	ldr	x17, [x16, #88]
 db8:	add	x16, x16, #0x58
 dbc:	br	x17

0000000000000dc0 <PyModule_Create2@plt>:
 dc0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 dc4:	ldr	x17, [x16, #96]
 dc8:	add	x16, x16, #0x60
 dcc:	br	x17

0000000000000dd0 <PyObject_GetBuffer@plt>:
 dd0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 dd4:	ldr	x17, [x16, #104]
 dd8:	add	x16, x16, #0x68
 ddc:	br	x17

0000000000000de0 <_PyObject_New@plt>:
 de0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 de4:	ldr	x17, [x16, #112]
 de8:	add	x16, x16, #0x70
 dec:	br	x17

0000000000000df0 <PyModule_AddObject@plt>:
 df0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 df4:	ldr	x17, [x16, #120]
 df8:	add	x16, x16, #0x78
 dfc:	br	x17

0000000000000e00 <PyUnicode_FromStringAndSize@plt>:
 e00:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 e04:	ldr	x17, [x16, #128]
 e08:	add	x16, x16, #0x80
 e0c:	br	x17

0000000000000e10 <_Py_strhex@plt>:
 e10:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 e14:	ldr	x17, [x16, #136]
 e18:	add	x16, x16, #0x88
 e1c:	br	x17

Disassembly of section .text:

0000000000000e20 <PyInit__md5@@Base-0x1208>:
     e20:	adrp	x0, 12000 <PyInit__md5@@Base+0xffd8>
     e24:	ldr	x0, [x0, #4040]
     e28:	cbz	x0, e30 <_Py_strhex@plt+0x20>
     e2c:	b	da0 <__gmon_start__@plt>
     e30:	ret
     e34:	nop
     e38:	adrp	x0, 13000 <PyInit__md5@@Base+0x10fd8>
     e3c:	add	x0, x0, #0x460
     e40:	adrp	x1, 13000 <PyInit__md5@@Base+0x10fd8>
     e44:	add	x1, x1, #0x460
     e48:	cmp	x1, x0
     e4c:	b.eq	e64 <_Py_strhex@plt+0x54>  // b.none
     e50:	adrp	x1, 12000 <PyInit__md5@@Base+0xffd8>
     e54:	ldr	x1, [x1, #4008]
     e58:	cbz	x1, e64 <_Py_strhex@plt+0x54>
     e5c:	mov	x16, x1
     e60:	br	x16
     e64:	ret
     e68:	adrp	x0, 13000 <PyInit__md5@@Base+0x10fd8>
     e6c:	add	x0, x0, #0x460
     e70:	adrp	x1, 13000 <PyInit__md5@@Base+0x10fd8>
     e74:	add	x1, x1, #0x460
     e78:	sub	x1, x1, x0
     e7c:	lsr	x2, x1, #63
     e80:	add	x1, x2, x1, asr #3
     e84:	cmp	xzr, x1, asr #1
     e88:	asr	x1, x1, #1
     e8c:	b.eq	ea4 <_Py_strhex@plt+0x94>  // b.none
     e90:	adrp	x2, 12000 <PyInit__md5@@Base+0xffd8>
     e94:	ldr	x2, [x2, #4064]
     e98:	cbz	x2, ea4 <_Py_strhex@plt+0x94>
     e9c:	mov	x16, x2
     ea0:	br	x16
     ea4:	ret
     ea8:	stp	x29, x30, [sp, #-32]!
     eac:	mov	x29, sp
     eb0:	str	x19, [sp, #16]
     eb4:	adrp	x19, 13000 <PyInit__md5@@Base+0x10fd8>
     eb8:	ldrb	w0, [x19, #1120]
     ebc:	cbnz	w0, ee4 <_Py_strhex@plt+0xd4>
     ec0:	adrp	x0, 12000 <PyInit__md5@@Base+0xffd8>
     ec4:	ldr	x0, [x0, #4016]
     ec8:	cbz	x0, ed8 <_Py_strhex@plt+0xc8>
     ecc:	adrp	x0, 13000 <PyInit__md5@@Base+0x10fd8>
     ed0:	ldr	x0, [x0, #144]
     ed4:	bl	d20 <__cxa_finalize@plt>
     ed8:	bl	e38 <_Py_strhex@plt+0x28>
     edc:	mov	w0, #0x1                   	// #1
     ee0:	strb	w0, [x19, #1120]
     ee4:	ldr	x19, [sp, #16]
     ee8:	ldp	x29, x30, [sp], #32
     eec:	ret
     ef0:	b	e68 <_Py_strhex@plt+0x58>
     ef4:	nop
     ef8:	stp	x29, x30, [sp, #-160]!
     efc:	mov	x29, sp
     f00:	add	x5, sp, #0x60
     f04:	add	x7, sp, #0xa0
     f08:	stp	x19, x20, [sp, #16]
     f0c:	stp	x21, x22, [sp, #32]
     f10:	stp	x23, x24, [sp, #48]
     f14:	stp	x25, x26, [sp, #64]
     f18:	stp	x27, x28, [sp, #80]
     f1c:	nop
     f20:	ldrb	w4, [x1, #2]
     f24:	ldrb	w2, [x1, #3]
     f28:	ldrb	w3, [x1, #1]
     f2c:	ldrb	w6, [x1], #4
     f30:	lsl	w4, w4, #16
     f34:	orr	w2, w4, w2, lsl #24
     f38:	orr	w3, w6, w3, lsl #8
     f3c:	orr	w2, w2, w3
     f40:	str	w2, [x5], #4
     f44:	cmp	x7, x5
     f48:	b.ne	f20 <_Py_strhex@plt+0x110>  // b.any
     f4c:	ldp	w8, w9, [x0, #16]
     f50:	mov	w2, #0xa478                	// #42104
     f54:	ldp	w10, w7, [x0, #8]
     f58:	eor	w4, w8, w9
     f5c:	ldp	w23, w18, [sp, #96]
     f60:	and	w4, w4, w7
     f64:	eor	w4, w4, w9
     f68:	movk	w2, #0xd76a, lsl #16
     f6c:	add	w4, w4, w10
     f70:	add	w2, w23, w2
     f74:	add	w2, w2, w4
     f78:	eor	w1, w7, w8
     f7c:	mov	w3, #0xb756                	// #46934
     f80:	mov	w6, #0x70db                	// #28891
     f84:	movk	w3, #0xe8c7, lsl #16
     f88:	ror	w2, w2, #25
     f8c:	add	w2, w2, w7
     f90:	add	w3, w18, w3
     f94:	and	w1, w1, w2
     f98:	eor	w14, w7, w2
     f9c:	eor	w1, w1, w8
     fa0:	movk	w6, #0x2420, lsl #16
     fa4:	add	w1, w1, w9
     fa8:	mov	w5, #0xceee                	// #52974
     fac:	add	w3, w3, w1
     fb0:	movk	w5, #0xc1bd, lsl #16
     fb4:	ldp	w12, w30, [sp, #104]
     fb8:	ror	w3, w3, #20
     fbc:	add	w3, w3, w2
     fc0:	ldr	w1, [sp, #112]
     fc4:	and	w14, w14, w3
     fc8:	add	w6, w12, w6
     fcc:	eor	w14, w14, w7
     fd0:	eor	w11, w2, w3
     fd4:	add	w14, w14, w8
     fd8:	add	w5, w30, w5
     fdc:	add	w6, w6, w14
     fe0:	mov	w4, #0xfaf                 	// #4015
     fe4:	movk	w4, #0xf57c, lsl #16
     fe8:	add	w4, w1, w4
     fec:	ror	w6, w6, #15
     ff0:	add	w6, w6, w3
     ff4:	mov	w13, #0xc62a                	// #50730
     ff8:	and	w11, w11, w6
     ffc:	eor	w16, w3, w6
    1000:	eor	w11, w11, w2
    1004:	movk	w13, #0x4787, lsl #16
    1008:	add	w11, w11, w7
    100c:	mov	w19, #0x4613                	// #17939
    1010:	add	w5, w5, w11
    1014:	movk	w19, #0xa830, lsl #16
    1018:	ldp	w20, w15, [sp, #116]
    101c:	ror	w5, w5, #10
    1020:	add	w5, w5, w6
    1024:	mov	w27, #0x9501                	// #38145
    1028:	and	w16, w16, w5
    102c:	eor	w25, w6, w5
    1030:	eor	w16, w16, w3
    1034:	add	w13, w20, w13
    1038:	add	w2, w16, w2
    103c:	add	w19, w15, w19
    1040:	add	w4, w4, w2
    1044:	movk	w27, #0xfd46, lsl #16
    1048:	ldp	w22, w17, [sp, #124]
    104c:	ror	w4, w4, #25
    1050:	add	w4, w4, w5
    1054:	mov	w14, #0x98d8                	// #39128
    1058:	and	w25, w25, w4
    105c:	add	w27, w22, w27
    1060:	eor	w25, w25, w6
    1064:	movk	w14, #0x6980, lsl #16
    1068:	add	w3, w25, w3
    106c:	eor	w25, w5, w4
    1070:	add	w3, w13, w3
    1074:	add	w14, w17, w14
    1078:	ldr	w11, [sp, #132]
    107c:	mov	w21, #0xf7af                	// #63407
    1080:	movk	w21, #0x8b44, lsl #16
    1084:	ror	w3, w3, #20
    1088:	add	w3, w3, w4
    108c:	add	w21, w11, w21
    1090:	and	w25, w25, w3
    1094:	mov	w24, #0xffff5bb1            	// #-42063
    1098:	eor	w25, w25, w5
    109c:	mov	w16, #0xd7be                	// #55230
    10a0:	add	w25, w25, w6
    10a4:	eor	w6, w4, w3
    10a8:	add	w25, w19, w25
    10ac:	movk	w16, #0x895c, lsl #16
    10b0:	ldp	w2, w13, [sp, #136]
    10b4:	ror	w25, w25, #15
    10b8:	add	w25, w25, w3
    10bc:	and	w6, w6, w25
    10c0:	eor	w26, w3, w25
    10c4:	eor	w6, w6, w4
    10c8:	add	w24, w2, w24
    10cc:	add	w5, w6, w5
    10d0:	add	w16, w13, w16
    10d4:	add	w6, w27, w5
    10d8:	mov	w5, #0x1122                	// #4386
    10dc:	movk	w5, #0x6b90, lsl #16
    10e0:	ror	w6, w6, #10
    10e4:	add	w6, w6, w25
    10e8:	and	w26, w26, w6
    10ec:	eor	w26, w26, w3
    10f0:	add	w26, w26, w4
    10f4:	eor	w4, w25, w6
    10f8:	add	w26, w14, w26
    10fc:	ldp	w19, w14, [sp, #144]
    1100:	ror	w26, w26, #25
    1104:	add	w26, w26, w6
    1108:	and	w4, w4, w26
    110c:	eor	w27, w6, w26
    1110:	eor	w4, w4, w25
    1114:	add	w5, w19, w5
    1118:	add	w3, w4, w3
    111c:	add	w4, w21, w3
    1120:	mov	w3, #0x7193                	// #29075
    1124:	movk	w3, #0xfd98, lsl #16
    1128:	add	w3, w14, w3
    112c:	ror	w4, w4, #20
    1130:	add	w4, w4, w26
    1134:	and	w21, w27, w4
    1138:	eor	w27, w26, w4
    113c:	eor	w21, w21, w6
    1140:	add	w25, w21, w25
    1144:	ldr	w21, [sp, #152]
    1148:	add	w25, w24, w25
    114c:	ror	w25, w25, #15
    1150:	add	w25, w25, w4
    1154:	and	w24, w27, w25
    1158:	mov	w27, #0x438e                	// #17294
    115c:	eor	w24, w24, w26
    1160:	movk	w27, #0xa679, lsl #16
    1164:	add	w24, w24, w6
    1168:	eor	w6, w4, w25
    116c:	add	w24, w16, w24
    1170:	add	w27, w21, w27
    1174:	ldr	w16, [sp, #156]
    1178:	ror	w24, w24, #10
    117c:	add	w24, w24, w25
    1180:	and	w6, w6, w24
    1184:	eor	w6, w6, w4
    1188:	add	w6, w6, w26
    118c:	eor	w26, w25, w24
    1190:	add	w6, w5, w6
    1194:	ror	w6, w6, #25
    1198:	add	w6, w6, w24
    119c:	and	w5, w26, w6
    11a0:	eor	w5, w5, w25
    11a4:	add	w4, w5, w4
    11a8:	eor	w5, w24, w6
    11ac:	add	w26, w3, w4
    11b0:	mov	w4, #0x821                 	// #2081
    11b4:	movk	w4, #0x49b4, lsl #16
    11b8:	add	w4, w16, w4
    11bc:	ror	w26, w26, #20
    11c0:	add	w26, w26, w6
    11c4:	and	w3, w5, w26
    11c8:	eor	w3, w3, w24
    11cc:	add	w3, w3, w25
    11d0:	eor	w25, w6, w26
    11d4:	add	w5, w27, w3
    11d8:	mov	w3, #0x2562                	// #9570
    11dc:	movk	w3, #0xf61e, lsl #16
    11e0:	add	w3, w18, w3
    11e4:	ror	w5, w5, #15
    11e8:	add	w5, w5, w26
    11ec:	and	w25, w25, w5
    11f0:	eor	w25, w25, w6
    11f4:	add	w24, w25, w24
    11f8:	mov	w25, #0xb340                	// #45888
    11fc:	add	w4, w4, w24
    1200:	movk	w25, #0xc040, lsl #16
    1204:	add	w25, w15, w25
    1208:	ror	w4, w4, #10
    120c:	add	w4, w4, w5
    1210:	eor	w24, w5, w4
    1214:	and	w24, w24, w26
    1218:	eor	w24, w24, w5
    121c:	add	w6, w24, w6
    1220:	mov	w24, #0x5a51                	// #23121
    1224:	add	w3, w3, w6
    1228:	movk	w24, #0x265e, lsl #16
    122c:	add	w24, w13, w24
    1230:	ror	w3, w3, #27
    1234:	add	w3, w3, w4
    1238:	eor	w6, w4, w3
    123c:	and	w6, w6, w5
    1240:	eor	w6, w6, w4
    1244:	add	w6, w6, w26
    1248:	mov	w26, #0xc7aa                	// #51114
    124c:	add	w6, w25, w6
    1250:	movk	w26, #0xe9b6, lsl #16
    1254:	add	w26, w23, w26
    1258:	ror	w6, w6, #23
    125c:	add	w6, w6, w3
    1260:	eor	w25, w3, w6
    1264:	and	w25, w25, w4
    1268:	eor	w25, w25, w3
    126c:	add	w5, w25, w5
    1270:	mov	w25, #0x105d                	// #4189
    1274:	add	w5, w24, w5
    1278:	movk	w25, #0xd62f, lsl #16
    127c:	add	w25, w20, w25
    1280:	ror	w5, w5, #18
    1284:	add	w5, w5, w6
    1288:	eor	w24, w6, w5
    128c:	and	w24, w24, w3
    1290:	eor	w24, w24, w6
    1294:	add	w4, w24, w4
    1298:	mov	w24, #0x1453                	// #5203
    129c:	add	w4, w26, w4
    12a0:	movk	w24, #0x244, lsl #16
    12a4:	add	w24, w2, w24
    12a8:	ror	w4, w4, #12
    12ac:	add	w4, w4, w5
    12b0:	eor	w26, w5, w4
    12b4:	and	w26, w26, w6
    12b8:	eor	w26, w26, w5
    12bc:	add	w3, w26, w3
    12c0:	mov	w26, #0xe681                	// #59009
    12c4:	add	w3, w25, w3
    12c8:	movk	w26, #0xd8a1, lsl #16
    12cc:	add	w26, w16, w26
    12d0:	ror	w3, w3, #27
    12d4:	add	w3, w3, w4
    12d8:	eor	w25, w4, w3
    12dc:	and	w25, w25, w5
    12e0:	eor	w25, w25, w4
    12e4:	add	w6, w25, w6
    12e8:	mov	w25, #0xfbc8                	// #64456
    12ec:	add	w6, w24, w6
    12f0:	movk	w25, #0xe7d3, lsl #16
    12f4:	add	w25, w1, w25
    12f8:	ror	w6, w6, #23
    12fc:	add	w6, w6, w3
    1300:	eor	w24, w3, w6
    1304:	and	w24, w24, w4
    1308:	eor	w24, w24, w3
    130c:	add	w5, w24, w5
    1310:	mov	w24, #0xcde6                	// #52710
    1314:	add	w5, w26, w5
    1318:	movk	w24, #0x21e1, lsl #16
    131c:	add	w24, w11, w24
    1320:	ror	w5, w5, #18
    1324:	add	w5, w5, w6
    1328:	eor	w26, w6, w5
    132c:	and	w26, w26, w3
    1330:	eor	w26, w26, w6
    1334:	add	w4, w26, w4
    1338:	mov	w26, #0x7d6                 	// #2006
    133c:	add	w4, w25, w4
    1340:	movk	w26, #0xc337, lsl #16
    1344:	add	w26, w21, w26
    1348:	ror	w4, w4, #12
    134c:	add	w4, w4, w5
    1350:	eor	w25, w5, w4
    1354:	and	w25, w25, w6
    1358:	eor	w25, w25, w5
    135c:	add	w3, w25, w3
    1360:	mov	w25, #0xd87                 	// #3463
    1364:	add	w3, w24, w3
    1368:	movk	w25, #0xf4d5, lsl #16
    136c:	add	w25, w30, w25
    1370:	ror	w3, w3, #27
    1374:	add	w3, w3, w4
    1378:	eor	w24, w4, w3
    137c:	and	w24, w24, w5
    1380:	eor	w24, w24, w4
    1384:	add	w6, w24, w6
    1388:	mov	w24, #0x14ed                	// #5357
    138c:	add	w6, w26, w6
    1390:	movk	w24, #0x455a, lsl #16
    1394:	add	w24, w17, w24
    1398:	ror	w6, w6, #23
    139c:	add	w6, w6, w3
    13a0:	eor	w26, w3, w6
    13a4:	and	w26, w26, w4
    13a8:	eor	w26, w26, w3
    13ac:	add	w5, w26, w5
    13b0:	mov	w26, #0xe905                	// #59653
    13b4:	add	w5, w25, w5
    13b8:	movk	w26, #0xa9e3, lsl #16
    13bc:	add	w26, w14, w26
    13c0:	ror	w5, w5, #18
    13c4:	add	w5, w5, w6
    13c8:	eor	w25, w6, w5
    13cc:	and	w25, w25, w3
    13d0:	eor	w25, w25, w6
    13d4:	add	w4, w25, w4
    13d8:	mov	w25, #0xa3f8                	// #41976
    13dc:	add	w4, w24, w4
    13e0:	movk	w25, #0xfcef, lsl #16
    13e4:	add	w25, w12, w25
    13e8:	ror	w4, w4, #12
    13ec:	add	w4, w4, w5
    13f0:	eor	w24, w5, w4
    13f4:	and	w24, w24, w6
    13f8:	eor	w24, w24, w5
    13fc:	add	w3, w24, w3
    1400:	mov	w24, #0x2d9                 	// #729
    1404:	add	w3, w26, w3
    1408:	movk	w24, #0x676f, lsl #16
    140c:	add	w24, w22, w24
    1410:	ror	w3, w3, #27
    1414:	add	w3, w3, w4
    1418:	eor	w26, w4, w3
    141c:	and	w26, w26, w5
    1420:	eor	w26, w26, w4
    1424:	add	w6, w26, w6
    1428:	mov	w26, #0x4c8a                	// #19594
    142c:	add	w25, w25, w6
    1430:	movk	w26, #0x8d2a, lsl #16
    1434:	add	w6, w19, w26
    1438:	ror	w25, w25, #23
    143c:	add	w25, w25, w3
    1440:	eor	w26, w3, w25
    1444:	and	w26, w26, w4
    1448:	eor	w26, w26, w3
    144c:	add	w5, w26, w5
    1450:	add	w26, w24, w5
    1454:	sub	w5, w20, #0x5c, lsl #12
    1458:	sub	w5, w5, #0x6be
    145c:	ror	w26, w26, #18
    1460:	add	w26, w26, w25
    1464:	eor	w27, w25, w26
    1468:	and	w24, w27, w3
    146c:	eor	w24, w24, w25
    1470:	add	w24, w24, w4
    1474:	mov	w4, #0xf681                	// #63105
    1478:	add	w24, w6, w24
    147c:	movk	w4, #0x8771, lsl #16
    1480:	add	w4, w17, w4
    1484:	ror	w24, w24, #12
    1488:	add	w24, w24, w26
    148c:	eor	w27, w27, w24
    1490:	eor	w28, w26, w24
    1494:	add	w3, w27, w3
    1498:	mov	w27, #0x6122                	// #24866
    149c:	add	w3, w5, w3
    14a0:	movk	w27, #0x6d9d, lsl #16
    14a4:	add	w27, w13, w27
    14a8:	ror	w6, w3, #28
    14ac:	add	w6, w6, w24
    14b0:	mov	w3, #0x380c                	// #14348
    14b4:	eor	w5, w28, w6
    14b8:	movk	w3, #0xfde5, lsl #16
    14bc:	add	w5, w5, w25
    14c0:	eor	w25, w24, w6
    14c4:	add	w5, w4, w5
    14c8:	add	w3, w21, w3
    14cc:	ror	w5, w5, #21
    14d0:	add	w5, w5, w6
    14d4:	eor	w4, w25, w5
    14d8:	eor	w25, w6, w5
    14dc:	add	w4, w4, w26
    14e0:	mov	w26, #0xea44                	// #59972
    14e4:	add	w4, w27, w4
    14e8:	movk	w26, #0xa4be, lsl #16
    14ec:	add	w26, w18, w26
    14f0:	ror	w4, w4, #16
    14f4:	add	w4, w4, w5
    14f8:	eor	w25, w25, w4
    14fc:	add	w24, w25, w24
    1500:	eor	w25, w5, w4
    1504:	add	w3, w3, w24
    1508:	mov	w24, #0xcfa9                	// #53161
    150c:	movk	w24, #0x4bde, lsl #16
    1510:	add	w24, w1, w24
    1514:	ror	w3, w3, #9
    1518:	add	w3, w3, w4
    151c:	eor	w25, w25, w3
    1520:	add	w6, w25, w6
    1524:	eor	w25, w4, w3
    1528:	add	w6, w26, w6
    152c:	mov	w26, #0x4b60                	// #19296
    1530:	movk	w26, #0xf6bb, lsl #16
    1534:	add	w26, w22, w26
    1538:	ror	w6, w6, #28
    153c:	add	w6, w6, w3
    1540:	eor	w25, w25, w6
    1544:	add	w5, w25, w5
    1548:	eor	w25, w3, w6
    154c:	add	w5, w24, w5
    1550:	mov	w24, #0xbc70                	// #48240
    1554:	movk	w24, #0xbebf, lsl #16
    1558:	add	w24, w2, w24
    155c:	sub	w2, w2, #0x100, lsl #12
    1560:	ror	w5, w5, #21
    1564:	add	w5, w5, w6
    1568:	sub	w2, w2, #0xb83
    156c:	eor	w25, w25, w5
    1570:	add	w4, w25, w4
    1574:	eor	w25, w6, w5
    1578:	add	w4, w26, w4
    157c:	mov	w26, #0x7ec6                	// #32454
    1580:	movk	w26, #0x289b, lsl #16
    1584:	add	w26, w14, w26
    1588:	ror	w4, w4, #16
    158c:	add	w4, w4, w5
    1590:	eor	w25, w25, w4
    1594:	add	w3, w25, w3
    1598:	eor	w25, w5, w4
    159c:	add	w3, w24, w3
    15a0:	mov	w24, #0x27fa                	// #10234
    15a4:	movk	w24, #0xeaa1, lsl #16
    15a8:	add	w24, w23, w24
    15ac:	ror	w3, w3, #9
    15b0:	add	w3, w3, w4
    15b4:	eor	w25, w25, w3
    15b8:	add	w6, w25, w6
    15bc:	eor	w25, w4, w3
    15c0:	add	w6, w26, w6
    15c4:	mov	w26, #0x3085                	// #12421
    15c8:	movk	w26, #0xd4ef, lsl #16
    15cc:	add	w26, w30, w26
    15d0:	ror	w6, w6, #28
    15d4:	add	w6, w6, w3
    15d8:	eor	w25, w25, w6
    15dc:	add	w5, w25, w5
    15e0:	eor	w25, w3, w6
    15e4:	add	w5, w24, w5
    15e8:	mov	w24, #0x1d05                	// #7429
    15ec:	movk	w24, #0x488, lsl #16
    15f0:	add	w24, w15, w24
    15f4:	ror	w5, w5, #21
    15f8:	add	w5, w5, w6
    15fc:	eor	w25, w25, w5
    1600:	add	w4, w25, w4
    1604:	eor	w25, w6, w5
    1608:	add	w4, w26, w4
    160c:	mov	w26, #0xd039                	// #53305
    1610:	movk	w26, #0xd9d4, lsl #16
    1614:	add	w26, w11, w26
    1618:	ror	w4, w4, #16
    161c:	add	w4, w4, w5
    1620:	eor	w25, w25, w4
    1624:	add	w3, w25, w3
    1628:	eor	w25, w5, w4
    162c:	add	w3, w24, w3
    1630:	mov	w24, #0x99e5                	// #39397
    1634:	movk	w24, #0xe6db, lsl #16
    1638:	add	w24, w19, w24
    163c:	ror	w3, w3, #9
    1640:	add	w3, w3, w4
    1644:	eor	w25, w25, w3
    1648:	add	w6, w25, w6
    164c:	eor	w25, w4, w3
    1650:	add	w6, w26, w6
    1654:	mov	w26, #0x7cf8                	// #31992
    1658:	movk	w26, #0x1fa2, lsl #16
    165c:	add	w26, w16, w26
    1660:	ror	w6, w6, #28
    1664:	add	w6, w6, w3
    1668:	eor	w25, w25, w6
    166c:	add	w5, w25, w5
    1670:	eor	w25, w3, w6
    1674:	add	w5, w24, w5
    1678:	mov	w24, #0x5665                	// #22117
    167c:	movk	w24, #0xc4ac, lsl #16
    1680:	add	w24, w12, w24
    1684:	ror	w5, w5, #21
    1688:	add	w5, w5, w6
    168c:	eor	w25, w25, w5
    1690:	add	w4, w25, w4
    1694:	eor	w25, w6, w5
    1698:	add	w4, w26, w4
    169c:	mov	w26, #0x2244                	// #8772
    16a0:	movk	w26, #0xf429, lsl #16
    16a4:	add	w23, w23, w26
    16a8:	mov	w26, #0xff97                	// #65431
    16ac:	ror	w4, w4, #16
    16b0:	add	w4, w4, w5
    16b4:	movk	w26, #0x432a, lsl #16
    16b8:	eor	w25, w25, w4
    16bc:	add	w22, w22, w26
    16c0:	add	w3, w25, w3
    16c4:	mov	w26, #0x23a7                	// #9127
    16c8:	add	w3, w24, w3
    16cc:	mov	w24, #0xa039                	// #41017
    16d0:	movk	w24, #0xfc93, lsl #16
    16d4:	add	w20, w20, w24
    16d8:	mov	w24, #0x59c3                	// #22979
    16dc:	ror	w3, w3, #9
    16e0:	add	w3, w3, w4
    16e4:	movk	w24, #0x655b, lsl #16
    16e8:	add	w19, w19, w24
    16ec:	orn	w24, w3, w5
    16f0:	eor	w24, w24, w4
    16f4:	movk	w26, #0xab94, lsl #16
    16f8:	add	w6, w24, w6
    16fc:	add	w21, w21, w26
    1700:	add	w6, w23, w6
    1704:	mov	w23, #0x7e4f                	// #32335
    1708:	movk	w23, #0x6fa8, lsl #16
    170c:	add	w17, w17, w23
    1710:	mov	w25, #0xcc92                	// #52370
    1714:	ror	w6, w6, #26
    1718:	add	w6, w6, w3
    171c:	movk	w25, #0x8f0c, lsl #16
    1720:	orn	w23, w6, w4
    1724:	add	w30, w30, w25
    1728:	eor	w23, w23, w3
    172c:	mov	w24, #0x5dd1                	// #24017
    1730:	add	w5, w23, w5
    1734:	movk	w24, #0x8584, lsl #16
    1738:	add	w22, w22, w5
    173c:	mov	w5, #0x11a1                	// #4513
    1740:	movk	w5, #0x4e08, lsl #16
    1744:	add	w14, w14, w5
    1748:	mov	w5, #0x7e82                	// #32386
    174c:	ror	w22, w22, #22
    1750:	add	w22, w22, w6
    1754:	movk	w5, #0xf753, lsl #16
    1758:	add	w1, w1, w5
    175c:	orn	w5, w22, w3
    1760:	eor	w5, w5, w6
    1764:	add	w18, w18, w24
    1768:	add	w4, w5, w4
    176c:	mov	w5, #0xd2bb                	// #53947
    1770:	add	w21, w21, w4
    1774:	mov	w4, #0xd391                	// #54161
    1778:	movk	w4, #0xeb86, lsl #16
    177c:	add	w11, w11, w4
    1780:	movk	w5, #0x2ad7, lsl #16
    1784:	ror	w21, w21, #17
    1788:	add	w21, w21, w22
    178c:	add	w12, w12, w5
    1790:	orn	w4, w21, w6
    1794:	mov	w24, #0xe6e0                	// #59104
    1798:	eor	w4, w4, w22
    179c:	movk	w24, #0xfe2c, lsl #16
    17a0:	add	w3, w4, w3
    17a4:	add	w16, w16, w24
    17a8:	add	w20, w20, w3
    17ac:	mov	w24, #0x4314                	// #17172
    17b0:	movk	w24, #0xa301, lsl #16
    17b4:	add	w15, w15, w24
    17b8:	mov	w23, #0xf235                	// #62005
    17bc:	ror	w20, w20, #11
    17c0:	add	w20, w20, w21
    17c4:	movk	w23, #0xbd3a, lsl #16
    17c8:	orn	w5, w20, w22
    17cc:	add	w13, w13, w23
    17d0:	eor	w5, w5, w21
    17d4:	add	w5, w5, w6
    17d8:	add	w19, w19, w5
    17dc:	ldp	x23, x24, [sp, #48]
    17e0:	ror	w5, w19, #26
    17e4:	add	w5, w5, w20
    17e8:	orn	w4, w5, w21
    17ec:	eor	w4, w4, w20
    17f0:	add	w4, w4, w22
    17f4:	add	w30, w30, w4
    17f8:	ldp	x25, x26, [sp, #64]
    17fc:	ror	w4, w30, #22
    1800:	add	w4, w4, w5
    1804:	orn	w3, w4, w20
    1808:	eor	w3, w3, w5
    180c:	add	w3, w3, w21
    1810:	add	w2, w2, w3
    1814:	ldp	x21, x22, [sp, #32]
    1818:	ror	w3, w2, #17
    181c:	add	w3, w3, w4
    1820:	orn	w2, w3, w5
    1824:	eor	w2, w2, w4
    1828:	add	w2, w2, w20
    182c:	add	w18, w18, w2
    1830:	ldp	x19, x20, [sp, #16]
    1834:	ror	w2, w18, #11
    1838:	add	w2, w2, w3
    183c:	orn	w6, w2, w4
    1840:	eor	w6, w6, w3
    1844:	add	w5, w6, w5
    1848:	add	w5, w17, w5
    184c:	ror	w5, w5, #26
    1850:	add	w5, w5, w2
    1854:	orn	w6, w5, w3
    1858:	eor	w6, w6, w2
    185c:	add	w4, w6, w4
    1860:	add	w4, w16, w4
    1864:	ror	w4, w4, #22
    1868:	add	w4, w4, w5
    186c:	orn	w6, w4, w2
    1870:	eor	w6, w6, w5
    1874:	add	w3, w6, w3
    1878:	add	w3, w15, w3
    187c:	ror	w3, w3, #17
    1880:	add	w3, w3, w4
    1884:	orn	w6, w3, w5
    1888:	eor	w6, w6, w4
    188c:	add	w2, w6, w2
    1890:	add	w2, w14, w2
    1894:	ror	w2, w2, #11
    1898:	add	w2, w2, w3
    189c:	orn	w6, w2, w4
    18a0:	eor	w6, w6, w3
    18a4:	add	w5, w6, w5
    18a8:	add	w1, w1, w5
    18ac:	ror	w1, w1, #26
    18b0:	add	w1, w1, w2
    18b4:	orn	w5, w1, w3
    18b8:	add	w10, w10, w1
    18bc:	eor	w5, w5, w2
    18c0:	add	w4, w5, w4
    18c4:	add	w4, w13, w4
    18c8:	ror	w4, w4, #22
    18cc:	add	w4, w4, w1
    18d0:	orn	w5, w4, w2
    18d4:	add	w9, w9, w4
    18d8:	eor	w5, w5, w1
    18dc:	add	w3, w5, w3
    18e0:	add	w3, w12, w3
    18e4:	ror	w3, w3, #17
    18e8:	add	w3, w3, w4
    18ec:	orn	w1, w3, w1
    18f0:	add	w7, w7, w3
    18f4:	eor	w1, w1, w4
    18f8:	add	w8, w8, w3
    18fc:	add	w1, w1, w2
    1900:	stp	w8, w9, [x0, #16]
    1904:	add	w11, w11, w1
    1908:	ror	w11, w11, #11
    190c:	add	w7, w11, w7
    1910:	stp	w10, w7, [x0, #8]
    1914:	ldp	x27, x28, [sp, #80]
    1918:	ldp	x29, x30, [sp], #160
    191c:	ret
    1920:	stp	x29, x30, [sp, #-32]!
    1924:	mov	w3, #0xffffff80            	// #-128
    1928:	mov	x29, sp
    192c:	ldr	w2, [x0, #24]
    1930:	ldr	x6, [x0]
    1934:	stp	x19, x20, [sp, #16]
    1938:	mov	x19, x1
    193c:	add	x1, x0, w2, uxtw
    1940:	lsl	w5, w2, #3
    1944:	add	w4, w2, #0x1
    1948:	add	x5, x5, x6
    194c:	str	x5, [x0]
    1950:	add	x20, x0, #0x1c
    1954:	str	w4, [x0, #24]
    1958:	cmp	w4, #0x38
    195c:	strb	w3, [x1, #28]
    1960:	b.ls	1a30 <_Py_strhex@plt+0xc20>  // b.plast
    1964:	cmp	w4, #0x3f
    1968:	b.hi	199c <_Py_strhex@plt+0xb8c>  // b.pmore
    196c:	mov	w3, #0x3e                  	// #62
    1970:	sub	w3, w3, w2
    1974:	add	x1, x0, #0x1d
    1978:	add	x2, x4, #0x1c
    197c:	add	x4, x3, x4
    1980:	add	x2, x0, x2
    1984:	add	x4, x4, x1
    1988:	strb	wzr, [x2], #1
    198c:	cmp	x4, x2
    1990:	b.ne	1988 <_Py_strhex@plt+0xb78>  // b.any
    1994:	mov	w1, #0x40                  	// #64
    1998:	str	w1, [x0, #24]
    199c:	mov	x1, x20
    19a0:	bl	ef8 <_Py_strhex@plt+0xe8>
    19a4:	ldr	x5, [x0]
    19a8:	mov	w4, #0x0                   	// #0
    19ac:	mov	w2, w4
    19b0:	add	x3, x0, w2, uxtw
    19b4:	add	w2, w2, #0x1
    19b8:	cmp	w2, #0x38
    19bc:	strb	wzr, [x3, #28]
    19c0:	b.ne	19b0 <_Py_strhex@plt+0xba0>  // b.any
    19c4:	add	w3, w4, #0x1
    19c8:	mov	w2, #0x37                  	// #55
    19cc:	cmp	w3, #0x38
    19d0:	sub	w4, w2, w4
    19d4:	csel	w4, w4, wzr, ls  // ls = plast
    19d8:	add	w4, w4, w3
    19dc:	str	w4, [x0, #24]
    19e0:	stur	x5, [x0, #84]
    19e4:	mov	x1, x20
    19e8:	bl	ef8 <_Py_strhex@plt+0xe8>
    19ec:	add	x2, x0, #0x8
    19f0:	mov	x1, x19
    19f4:	add	x0, x0, #0x18
    19f8:	ldrb	w3, [x2, #3]
    19fc:	strb	w3, [x1, #3]
    1a00:	ldrh	w3, [x2, #2]
    1a04:	strb	w3, [x1, #2]
    1a08:	ldr	w3, [x2]
    1a0c:	lsr	w3, w3, #8
    1a10:	strb	w3, [x1, #1]
    1a14:	ldr	w3, [x2], #4
    1a18:	strb	w3, [x1], #4
    1a1c:	cmp	x0, x2
    1a20:	b.ne	19f8 <_Py_strhex@plt+0xbe8>  // b.any
    1a24:	ldp	x19, x20, [sp, #16]
    1a28:	ldp	x29, x30, [sp], #32
    1a2c:	ret
    1a30:	b.ne	19ac <_Py_strhex@plt+0xb9c>  // b.any
    1a34:	b	19e0 <_Py_strhex@plt+0xbd0>
    1a38:	stp	x29, x30, [sp, #-32]!
    1a3c:	adrp	x1, 13000 <PyInit__md5@@Base+0x10fd8>
    1a40:	mov	x29, sp
    1a44:	str	x19, [sp, #16]
    1a48:	mov	x19, x0
    1a4c:	add	x0, x1, #0x98
    1a50:	bl	de0 <_PyObject_New@plt>
    1a54:	cbz	x0, 1a8c <_Py_strhex@plt+0xc7c>
    1a58:	add	x2, x19, #0x10
    1a5c:	ldp	x4, x5, [x19, #16]
    1a60:	stp	x4, x5, [x0, #16]
    1a64:	ldp	x4, x5, [x2, #16]
    1a68:	stp	x4, x5, [x0, #32]
    1a6c:	ldp	x4, x5, [x2, #32]
    1a70:	stp	x4, x5, [x0, #48]
    1a74:	ldp	x4, x5, [x2, #48]
    1a78:	stp	x4, x5, [x0, #64]
    1a7c:	ldp	x4, x5, [x2, #64]
    1a80:	stp	x4, x5, [x0, #80]
    1a84:	ldp	x2, x3, [x2, #80]
    1a88:	stp	x2, x3, [x0, #96]
    1a8c:	ldr	x19, [sp, #16]
    1a90:	ldp	x29, x30, [sp], #32
    1a94:	ret
    1a98:	cmp	x2, #0x0
    1a9c:	b.le	1b74 <_Py_strhex@plt+0xd64>
    1aa0:	stp	x29, x30, [sp, #-64]!
    1aa4:	mov	x29, sp
    1aa8:	stp	x19, x20, [sp, #16]
    1aac:	mov	x20, x2
    1ab0:	stp	x21, x22, [sp, #32]
    1ab4:	mov	x21, x0
    1ab8:	mov	x22, x1
    1abc:	stp	x23, x24, [sp, #48]
    1ac0:	add	x23, x0, #0x1c
    1ac4:	mov	w24, #0x40                  	// #64
    1ac8:	b	1b00 <_Py_strhex@plt+0xcf0>
    1acc:	cmp	x19, x20
    1ad0:	csel	x19, x19, x20, le
    1ad4:	mov	x2, x19
    1ad8:	add	x22, x22, x19
    1adc:	bl	d00 <memcpy@plt>
    1ae0:	sub	x20, x20, x19
    1ae4:	ldr	w2, [x21, #24]
    1ae8:	add	w19, w2, w19
    1aec:	str	w19, [x21, #24]
    1af0:	cmp	w19, #0x40
    1af4:	b.eq	1b54 <_Py_strhex@plt+0xd44>  // b.none
    1af8:	cmp	x20, #0x0
    1afc:	b.le	1b40 <_Py_strhex@plt+0xd30>
    1b00:	ldr	w0, [x21, #24]
    1b04:	cmp	x20, #0x3f
    1b08:	mov	x1, x22
    1b0c:	sub	w19, w24, w0
    1b10:	ccmp	w0, #0x0, #0x0, gt
    1b14:	add	x0, x23, w0, uxtw
    1b18:	b.ne	1acc <_Py_strhex@plt+0xcbc>  // b.any
    1b1c:	mov	x0, x21
    1b20:	bl	ef8 <_Py_strhex@plt+0xe8>
    1b24:	ldr	x0, [x21]
    1b28:	sub	x20, x20, #0x40
    1b2c:	add	x22, x22, #0x40
    1b30:	cmp	x20, #0x0
    1b34:	add	x0, x0, #0x200
    1b38:	str	x0, [x21]
    1b3c:	b.gt	1b00 <_Py_strhex@plt+0xcf0>
    1b40:	ldp	x19, x20, [sp, #16]
    1b44:	ldp	x21, x22, [sp, #32]
    1b48:	ldp	x23, x24, [sp, #48]
    1b4c:	ldp	x29, x30, [sp], #64
    1b50:	ret
    1b54:	mov	x0, x21
    1b58:	mov	x1, x23
    1b5c:	bl	ef8 <_Py_strhex@plt+0xe8>
    1b60:	str	wzr, [x21, #24]
    1b64:	ldr	x0, [x21]
    1b68:	add	x0, x0, #0x200
    1b6c:	str	x0, [x21]
    1b70:	b	1af8 <_Py_strhex@plt+0xce8>
    1b74:	ret
    1b78:	stp	x29, x30, [sp, #-112]!
    1b7c:	mov	x29, sp
    1b80:	stp	x19, x20, [sp, #16]
    1b84:	mov	x19, x0
    1b88:	ldr	x0, [x1, #8]
    1b8c:	ldr	x2, [x0, #168]
    1b90:	tbnz	w2, #28, 1c60 <_Py_strhex@plt+0xe50>
    1b94:	ldr	x0, [x0, #160]
    1b98:	cbz	x0, 1c08 <_Py_strhex@plt+0xdf8>
    1b9c:	ldr	x0, [x0]
    1ba0:	cbz	x0, 1c08 <_Py_strhex@plt+0xdf8>
    1ba4:	add	x20, sp, #0x20
    1ba8:	mov	x0, x1
    1bac:	mov	w2, #0x0                   	// #0
    1bb0:	mov	x1, x20
    1bb4:	bl	dd0 <PyObject_GetBuffer@plt>
    1bb8:	cmn	w0, #0x1
    1bbc:	b.eq	1c80 <_Py_strhex@plt+0xe70>  // b.none
    1bc0:	ldr	w0, [sp, #68]
    1bc4:	cmp	w0, #0x1
    1bc8:	b.gt	1c30 <_Py_strhex@plt+0xe20>
    1bcc:	ldr	x1, [sp, #32]
    1bd0:	add	x0, x19, #0x10
    1bd4:	ldr	x2, [sp, #48]
    1bd8:	bl	1a98 <_Py_strhex@plt+0xc88>
    1bdc:	mov	x0, x20
    1be0:	bl	d10 <PyBuffer_Release@plt>
    1be4:	adrp	x1, 12000 <PyInit__md5@@Base+0xffd8>
    1be8:	ldr	x1, [x1, #4056]
    1bec:	mov	x0, x1
    1bf0:	ldr	x2, [x1]
    1bf4:	add	x2, x2, #0x1
    1bf8:	str	x2, [x1]
    1bfc:	ldp	x19, x20, [sp, #16]
    1c00:	ldp	x29, x30, [sp], #112
    1c04:	ret
    1c08:	adrp	x0, 12000 <PyInit__md5@@Base+0xffd8>
    1c0c:	adrp	x1, 2000 <_Py_strhex@plt+0x11f0>
    1c10:	add	x1, x1, #0xe0
    1c14:	ldr	x0, [x0, #4032]
    1c18:	ldr	x0, [x0]
    1c1c:	bl	d60 <PyErr_SetString@plt>
    1c20:	mov	x0, #0x0                   	// #0
    1c24:	ldp	x19, x20, [sp, #16]
    1c28:	ldp	x29, x30, [sp], #112
    1c2c:	ret
    1c30:	adrp	x0, 12000 <PyInit__md5@@Base+0xffd8>
    1c34:	adrp	x1, 2000 <_Py_strhex@plt+0x11f0>
    1c38:	add	x1, x1, #0x110
    1c3c:	ldr	x0, [x0, #4024]
    1c40:	ldr	x0, [x0]
    1c44:	bl	d60 <PyErr_SetString@plt>
    1c48:	mov	x0, x20
    1c4c:	bl	d10 <PyBuffer_Release@plt>
    1c50:	mov	x0, #0x0                   	// #0
    1c54:	ldp	x19, x20, [sp, #16]
    1c58:	ldp	x29, x30, [sp], #112
    1c5c:	ret
    1c60:	adrp	x0, 12000 <PyInit__md5@@Base+0xffd8>
    1c64:	adrp	x1, 2000 <_Py_strhex@plt+0x11f0>
    1c68:	add	x1, x1, #0xb0
    1c6c:	ldr	x0, [x0, #4032]
    1c70:	ldr	x0, [x0]
    1c74:	bl	d60 <PyErr_SetString@plt>
    1c78:	mov	x0, #0x0                   	// #0
    1c7c:	b	1bfc <_Py_strhex@plt+0xdec>
    1c80:	mov	x0, #0x0                   	// #0
    1c84:	b	1bfc <_Py_strhex@plt+0xdec>
    1c88:	mov	x0, #0x10                  	// #16
    1c8c:	b	d90 <PyLong_FromLong@plt>
    1c90:	mov	x0, #0x40                  	// #64
    1c94:	b	d90 <PyLong_FromLong@plt>
    1c98:	adrp	x0, 2000 <_Py_strhex@plt+0x11f0>
    1c9c:	mov	x1, #0x3                   	// #3
    1ca0:	add	x0, x0, #0x130
    1ca4:	b	e00 <PyUnicode_FromStringAndSize@plt>
    1ca8:	mov	x3, x0
    1cac:	stp	x29, x30, [sp, #-144]!
    1cb0:	mov	x29, sp
    1cb4:	ldp	x4, x5, [x3, #16]
    1cb8:	stp	x4, x5, [sp, #48]
    1cbc:	add	x0, sp, #0x30
    1cc0:	ldp	x4, x5, [x3, #32]
    1cc4:	stp	x4, x5, [sp, #64]
    1cc8:	ldp	x4, x5, [x3, #48]
    1ccc:	stp	x4, x5, [sp, #80]
    1cd0:	ldp	x4, x5, [x3, #64]
    1cd4:	stp	x4, x5, [sp, #96]
    1cd8:	ldp	x4, x5, [x3, #80]
    1cdc:	stp	x4, x5, [sp, #112]
    1ce0:	ldp	x2, x3, [x3, #96]
    1ce4:	str	x19, [sp, #16]
    1ce8:	add	x19, sp, #0x20
    1cec:	stp	x2, x3, [sp, #128]
    1cf0:	mov	x1, x19
    1cf4:	bl	1920 <_Py_strhex@plt+0xb10>
    1cf8:	mov	x0, x19
    1cfc:	mov	x1, #0x10                  	// #16
    1d00:	bl	e10 <_Py_strhex@plt>
    1d04:	ldr	x19, [sp, #16]
    1d08:	ldp	x29, x30, [sp], #144
    1d0c:	ret
    1d10:	mov	x3, x0
    1d14:	stp	x29, x30, [sp, #-144]!
    1d18:	mov	x29, sp
    1d1c:	ldp	x4, x5, [x3, #16]
    1d20:	stp	x4, x5, [sp, #48]
    1d24:	add	x0, sp, #0x30
    1d28:	ldp	x4, x5, [x3, #32]
    1d2c:	stp	x4, x5, [sp, #64]
    1d30:	ldp	x4, x5, [x3, #48]
    1d34:	stp	x4, x5, [sp, #80]
    1d38:	ldp	x4, x5, [x3, #64]
    1d3c:	stp	x4, x5, [sp, #96]
    1d40:	ldp	x4, x5, [x3, #80]
    1d44:	stp	x4, x5, [sp, #112]
    1d48:	ldp	x2, x3, [x3, #96]
    1d4c:	str	x19, [sp, #16]
    1d50:	add	x19, sp, #0x20
    1d54:	stp	x2, x3, [sp, #128]
    1d58:	mov	x1, x19
    1d5c:	bl	1920 <_Py_strhex@plt+0xb10>
    1d60:	mov	x0, x19
    1d64:	mov	x1, #0x10                  	// #16
    1d68:	bl	d30 <PyBytes_FromStringAndSize@plt>
    1d6c:	ldr	x19, [sp, #16]
    1d70:	ldp	x29, x30, [sp], #144
    1d74:	ret
    1d78:	b	d70 <PyObject_Free@plt>
    1d7c:	nop
    1d80:	sub	sp, sp, #0xa0
    1d84:	mov	x0, x1
    1d88:	mov	x1, x2
    1d8c:	mov	x2, x3
    1d90:	stp	x29, x30, [sp, #16]
    1d94:	add	x29, sp, #0x10
    1d98:	stp	x19, x20, [sp, #32]
    1d9c:	cbz	x3, 1ea4 <_Py_strhex@plt+0x1094>
    1da0:	ldr	x19, [x3, #16]
    1da4:	add	x19, x1, x19
    1da8:	add	x3, sp, #0x48
    1dac:	str	x3, [sp]
    1db0:	adrp	x4, 13000 <PyInit__md5@@Base+0x10fd8>
    1db4:	add	x4, x4, #0x98
    1db8:	mov	x3, x2
    1dbc:	add	x4, x4, #0x1a0
    1dc0:	mov	w7, #0x0                   	// #0
    1dc4:	mov	w6, #0x1                   	// #1
    1dc8:	mov	w5, #0x0                   	// #0
    1dcc:	mov	x2, #0x0                   	// #0
    1dd0:	bl	d50 <_PyArg_UnpackKeywords@plt>
    1dd4:	cbz	x0, 1f20 <_Py_strhex@plt+0x1110>
    1dd8:	cbz	x19, 1ebc <_Py_strhex@plt+0x10ac>
    1ddc:	ldr	x0, [x0]
    1de0:	cbz	x0, 1ebc <_Py_strhex@plt+0x10ac>
    1de4:	ldr	x1, [x0, #8]
    1de8:	ldr	x2, [x1, #168]
    1dec:	tbnz	w2, #28, 1fc4 <_Py_strhex@plt+0x11b4>
    1df0:	ldr	x1, [x1, #160]
    1df4:	cbz	x1, 1f94 <_Py_strhex@plt+0x1184>
    1df8:	ldr	x1, [x1]
    1dfc:	cbz	x1, 1f94 <_Py_strhex@plt+0x1184>
    1e00:	add	x20, sp, #0x50
    1e04:	mov	w2, #0x0                   	// #0
    1e08:	mov	x1, x20
    1e0c:	bl	dd0 <PyObject_GetBuffer@plt>
    1e10:	cmn	w0, #0x1
    1e14:	b.eq	1f20 <_Py_strhex@plt+0x1110>  // b.none
    1e18:	ldr	w0, [sp, #116]
    1e1c:	cmp	w0, #0x1
    1e20:	b.gt	1f38 <_Py_strhex@plt+0x1128>
    1e24:	adrp	x0, 13000 <PyInit__md5@@Base+0x10fd8>
    1e28:	add	x0, x0, #0x98
    1e2c:	bl	de0 <_PyObject_New@plt>
    1e30:	mov	x19, x0
    1e34:	cbz	x0, 1f74 <_Py_strhex@plt+0x1164>
    1e38:	mov	x1, #0x2301                	// #8961
    1e3c:	mov	x0, #0xdcfe                	// #56574
    1e40:	movk	x1, #0x6745, lsl #16
    1e44:	movk	x0, #0x98ba, lsl #16
    1e48:	str	x21, [sp, #48]
    1e4c:	add	x21, x19, #0x10
    1e50:	movk	x1, #0xab89, lsl #32
    1e54:	movk	x0, #0x5476, lsl #32
    1e58:	movk	x1, #0xefcd, lsl #48
    1e5c:	movk	x0, #0x1032, lsl #48
    1e60:	stp	xzr, x1, [x19, #16]
    1e64:	str	x0, [x19, #32]
    1e68:	str	wzr, [x21, #24]
    1e6c:	bl	db0 <PyErr_Occurred@plt>
    1e70:	cbnz	x0, 1f60 <_Py_strhex@plt+0x1150>
    1e74:	ldr	x1, [sp, #80]
    1e78:	mov	x0, x21
    1e7c:	ldr	x2, [sp, #96]
    1e80:	bl	1a98 <_Py_strhex@plt+0xc88>
    1e84:	mov	x0, x20
    1e88:	bl	d10 <PyBuffer_Release@plt>
    1e8c:	mov	x0, x19
    1e90:	ldp	x29, x30, [sp, #16]
    1e94:	ldp	x19, x20, [sp, #32]
    1e98:	ldr	x21, [sp, #48]
    1e9c:	add	sp, sp, #0xa0
    1ea0:	ret
    1ea4:	tbnz	x1, #63, 1fe4 <_Py_strhex@plt+0x11d4>
    1ea8:	cmp	x0, #0x0
    1eac:	mov	x19, x1
    1eb0:	ccmp	x1, #0x1, #0x0, ne  // ne = any
    1eb4:	b.gt	1da8 <_Py_strhex@plt+0xf98>
    1eb8:	cbnz	x19, 1ddc <_Py_strhex@plt+0xfcc>
    1ebc:	adrp	x0, 13000 <PyInit__md5@@Base+0x10fd8>
    1ec0:	add	x0, x0, #0x98
    1ec4:	bl	de0 <_PyObject_New@plt>
    1ec8:	mov	x19, x0
    1ecc:	cbz	x0, 1f20 <_Py_strhex@plt+0x1110>
    1ed0:	mov	x1, #0x2301                	// #8961
    1ed4:	mov	x0, #0xdcfe                	// #56574
    1ed8:	movk	x1, #0x6745, lsl #16
    1edc:	movk	x0, #0x98ba, lsl #16
    1ee0:	movk	x1, #0xab89, lsl #32
    1ee4:	movk	x0, #0x5476, lsl #32
    1ee8:	movk	x1, #0xefcd, lsl #48
    1eec:	movk	x0, #0x1032, lsl #48
    1ef0:	stp	xzr, x1, [x19, #16]
    1ef4:	str	x0, [x19, #32]
    1ef8:	str	wzr, [x19, #40]
    1efc:	bl	db0 <PyErr_Occurred@plt>
    1f00:	cbz	x0, 1f24 <_Py_strhex@plt+0x1114>
    1f04:	ldr	x0, [x19]
    1f08:	sub	x0, x0, #0x1
    1f0c:	str	x0, [x19]
    1f10:	cbnz	x0, 1f20 <_Py_strhex@plt+0x1110>
    1f14:	mov	x0, x19
    1f18:	bl	d40 <_Py_Dealloc@plt>
    1f1c:	nop
    1f20:	mov	x19, #0x0                   	// #0
    1f24:	mov	x0, x19
    1f28:	ldp	x29, x30, [sp, #16]
    1f2c:	ldp	x19, x20, [sp, #32]
    1f30:	add	sp, sp, #0xa0
    1f34:	ret
    1f38:	adrp	x0, 12000 <PyInit__md5@@Base+0xffd8>
    1f3c:	adrp	x1, 2000 <_Py_strhex@plt+0x11f0>
    1f40:	add	x1, x1, #0x110
    1f44:	mov	x19, #0x0                   	// #0
    1f48:	ldr	x0, [x0, #4024]
    1f4c:	ldr	x0, [x0]
    1f50:	bl	d60 <PyErr_SetString@plt>
    1f54:	mov	x0, x20
    1f58:	bl	d10 <PyBuffer_Release@plt>
    1f5c:	b	1f24 <_Py_strhex@plt+0x1114>
    1f60:	ldr	x0, [x19]
    1f64:	sub	x0, x0, #0x1
    1f68:	str	x0, [x19]
    1f6c:	cbz	x0, 2014 <_Py_strhex@plt+0x1204>
    1f70:	ldr	x21, [sp, #48]
    1f74:	mov	x0, x20
    1f78:	mov	x19, #0x0                   	// #0
    1f7c:	bl	d10 <PyBuffer_Release@plt>
    1f80:	mov	x0, x19
    1f84:	ldp	x29, x30, [sp, #16]
    1f88:	ldp	x19, x20, [sp, #32]
    1f8c:	add	sp, sp, #0xa0
    1f90:	ret
    1f94:	adrp	x0, 12000 <PyInit__md5@@Base+0xffd8>
    1f98:	mov	x19, #0x0                   	// #0
    1f9c:	adrp	x1, 2000 <_Py_strhex@plt+0x11f0>
    1fa0:	add	x1, x1, #0xe0
    1fa4:	ldr	x0, [x0, #4032]
    1fa8:	ldr	x0, [x0]
    1fac:	bl	d60 <PyErr_SetString@plt>
    1fb0:	mov	x0, x19
    1fb4:	ldp	x29, x30, [sp, #16]
    1fb8:	ldp	x19, x20, [sp, #32]
    1fbc:	add	sp, sp, #0xa0
    1fc0:	ret
    1fc4:	adrp	x0, 12000 <PyInit__md5@@Base+0xffd8>
    1fc8:	adrp	x1, 2000 <_Py_strhex@plt+0x11f0>
    1fcc:	mov	x19, #0x0                   	// #0
    1fd0:	add	x1, x1, #0xb0
    1fd4:	ldr	x0, [x0, #4032]
    1fd8:	ldr	x0, [x0]
    1fdc:	bl	d60 <PyErr_SetString@plt>
    1fe0:	b	1f24 <_Py_strhex@plt+0x1114>
    1fe4:	add	x2, sp, #0x48
    1fe8:	str	x2, [sp]
    1fec:	adrp	x4, 13000 <PyInit__md5@@Base+0x10fd8>
    1ff0:	add	x4, x4, #0x98
    1ff4:	add	x4, x4, #0x1a0
    1ff8:	mov	w7, #0x0                   	// #0
    1ffc:	mov	w6, #0x1                   	// #1
    2000:	mov	w5, #0x0                   	// #0
    2004:	mov	x2, #0x0                   	// #0
    2008:	bl	d50 <_PyArg_UnpackKeywords@plt>
    200c:	cbnz	x0, 1ddc <_Py_strhex@plt+0xfcc>
    2010:	b	1f20 <_Py_strhex@plt+0x1110>
    2014:	mov	x0, x19
    2018:	bl	d40 <_Py_Dealloc@plt>
    201c:	ldr	x21, [sp, #48]
    2020:	b	1f74 <_Py_strhex@plt+0x1164>
    2024:	nop

0000000000002028 <PyInit__md5@@Base>:
    2028:	stp	x29, x30, [sp, #-48]!
    202c:	adrp	x1, 12000 <PyInit__md5@@Base+0xffd8>
    2030:	mov	x29, sp
    2034:	ldr	x1, [x1, #4048]
    2038:	stp	x19, x20, [sp, #16]
    203c:	mov	x19, #0x0                   	// #0
    2040:	str	x21, [sp, #32]
    2044:	adrp	x21, 13000 <PyInit__md5@@Base+0x10fd8>
    2048:	add	x20, x21, #0x98
    204c:	mov	x0, x20
    2050:	str	x1, [x20, #8]
    2054:	bl	d80 <PyType_Ready@plt>
    2058:	tbnz	w0, #31, 208c <PyInit__md5@@Base+0x64>
    205c:	add	x0, x20, #0x1e0
    2060:	mov	w1, #0x3f5                 	// #1013
    2064:	bl	dc0 <PyModule_Create2@plt>
    2068:	mov	x19, x0
    206c:	cbz	x0, 208c <PyInit__md5@@Base+0x64>
    2070:	ldr	x3, [x21, #152]
    2074:	adrp	x1, 2000 <_Py_strhex@plt+0x11f0>
    2078:	mov	x2, x20
    207c:	add	x1, x1, #0x138
    2080:	add	x3, x3, #0x1
    2084:	str	x3, [x21, #152]
    2088:	bl	df0 <PyModule_AddObject@plt>
    208c:	mov	x0, x19
    2090:	ldp	x19, x20, [sp, #16]
    2094:	ldr	x21, [sp, #32]
    2098:	ldp	x29, x30, [sp], #48
    209c:	ret

Disassembly of section .fini:

00000000000020a0 <.fini>:
    20a0:	stp	x29, x30, [sp, #-16]!
    20a4:	mov	x29, sp
    20a8:	ldp	x29, x30, [sp], #16
    20ac:	ret
