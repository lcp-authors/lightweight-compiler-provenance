
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-gpt-auto-generator_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

00000000004018f8 <_init>:
  4018f8:	stp	x29, x30, [sp, #-16]!
  4018fc:	mov	x29, sp
  401900:	bl	401da0 <call_weak_fn>
  401904:	ldp	x29, x30, [sp], #16
  401908:	ret

Disassembly of section .plt:

0000000000401910 <__libc_start_main@plt-0x20>:
  401910:	stp	x16, x30, [sp, #-16]!
  401914:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  401918:	ldr	x17, [x16, #3560]
  40191c:	add	x16, x16, #0xde8
  401920:	br	x17
  401924:	nop
  401928:	nop
  40192c:	nop

0000000000401930 <__libc_start_main@plt>:
  401930:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  401934:	ldr	x17, [x16, #3568]
  401938:	add	x16, x16, #0xdf0
  40193c:	br	x17

0000000000401940 <abort@plt>:
  401940:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  401944:	ldr	x17, [x16, #3576]
  401948:	add	x16, x16, #0xdf8
  40194c:	br	x17

0000000000401950 <__gmon_start__@plt>:
  401950:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  401954:	ldr	x17, [x16, #3584]
  401958:	add	x16, x16, #0xe00
  40195c:	br	x17

0000000000401960 <log_setup_generator@plt>:
  401960:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  401964:	ldr	x17, [x16, #3592]
  401968:	add	x16, x16, #0xe08
  40196c:	br	x17

0000000000401970 <log_get_max_level_realm@plt>:
  401970:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  401974:	ldr	x17, [x16, #3600]
  401978:	add	x16, x16, #0xe10
  40197c:	br	x17

0000000000401980 <log_internal_realm@plt>:
  401980:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  401984:	ldr	x17, [x16, #3608]
  401988:	add	x16, x16, #0xe18
  40198c:	br	x17

0000000000401990 <abs@plt>:
  401990:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  401994:	ldr	x17, [x16, #3616]
  401998:	add	x16, x16, #0xe20
  40199c:	br	x17

00000000004019a0 <ask_password_agent_close@plt>:
  4019a0:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  4019a4:	ldr	x17, [x16, #3624]
  4019a8:	add	x16, x16, #0xe28
  4019ac:	br	x17

00000000004019b0 <polkit_agent_close@plt>:
  4019b0:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  4019b4:	ldr	x17, [x16, #3632]
  4019b8:	add	x16, x16, #0xe30
  4019bc:	br	x17

00000000004019c0 <pager_close@plt>:
  4019c0:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  4019c4:	ldr	x17, [x16, #3640]
  4019c8:	add	x16, x16, #0xe38
  4019cc:	br	x17

00000000004019d0 <mac_selinux_finish@plt>:
  4019d0:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  4019d4:	ldr	x17, [x16, #3648]
  4019d8:	add	x16, x16, #0xe40
  4019dc:	br	x17

00000000004019e0 <log_assert_failed_realm@plt>:
  4019e0:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  4019e4:	ldr	x17, [x16, #3656]
  4019e8:	add	x16, x16, #0xe48
  4019ec:	br	x17

00000000004019f0 <detect_container@plt>:
  4019f0:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  4019f4:	ldr	x17, [x16, #3664]
  4019f8:	add	x16, x16, #0xe50
  4019fc:	br	x17

0000000000401a00 <proc_cmdline_parse@plt>:
  401a00:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  401a04:	ldr	x17, [x16, #3672]
  401a08:	add	x16, x16, #0xe58
  401a0c:	br	x17

0000000000401a10 <in_initrd@plt>:
  401a10:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  401a14:	ldr	x17, [x16, #3680]
  401a18:	add	x16, x16, #0xe60
  401a1c:	br	x17

0000000000401a20 <proc_cmdline_key_streq@plt>:
  401a20:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  401a24:	ldr	x17, [x16, #3688]
  401a28:	add	x16, x16, #0xe68
  401a2c:	br	x17

0000000000401a30 <parse_boolean@plt>:
  401a30:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  401a34:	ldr	x17, [x16, #3696]
  401a38:	add	x16, x16, #0xe70
  401a3c:	br	x17

0000000000401a40 <strcmp@plt>:
  401a40:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  401a44:	ldr	x17, [x16, #3704]
  401a48:	add	x16, x16, #0xe78
  401a4c:	br	x17

0000000000401a50 <is_efi_boot@plt>:
  401a50:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  401a54:	ldr	x17, [x16, #3712]
  401a58:	add	x16, x16, #0xe80
  401a5c:	br	x17

0000000000401a60 <efi_loader_get_device_part_uuid@plt>:
  401a60:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  401a64:	ldr	x17, [x16, #3720]
  401a68:	add	x16, x16, #0xe88
  401a6c:	br	x17

0000000000401a70 <generator_write_initrd_root_device_deps@plt>:
  401a70:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  401a74:	ldr	x17, [x16, #3728]
  401a78:	add	x16, x16, #0xe90
  401a7c:	br	x17

0000000000401a80 <get_block_device_harder@plt>:
  401a80:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  401a84:	ldr	x17, [x16, #3736]
  401a88:	add	x16, x16, #0xe98
  401a8c:	br	x17

0000000000401a90 <readlink_malloc@plt>:
  401a90:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  401a94:	ldr	x17, [x16, #3744]
  401a98:	add	x16, x16, #0xea0
  401a9c:	br	x17

0000000000401aa0 <device_path_parse_major_minor@plt>:
  401aa0:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  401aa4:	ldr	x17, [x16, #3752]
  401aa8:	add	x16, x16, #0xea8
  401aac:	br	x17

0000000000401ab0 <unit_name_from_path@plt>:
  401ab0:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  401ab4:	ldr	x17, [x16, #3760]
  401ab8:	add	x16, x16, #0xeb0
  401abc:	br	x17

0000000000401ac0 <path_join_internal@plt>:
  401ac0:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  401ac4:	ldr	x17, [x16, #3768]
  401ac8:	add	x16, x16, #0xeb8
  401acc:	br	x17

0000000000401ad0 <log_oom_internal@plt>:
  401ad0:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  401ad4:	ldr	x17, [x16, #3776]
  401ad8:	add	x16, x16, #0xec0
  401adc:	br	x17

0000000000401ae0 <fopen64@plt>:
  401ae0:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  401ae4:	ldr	x17, [x16, #3784]
  401ae8:	add	x16, x16, #0xec8
  401aec:	br	x17

0000000000401af0 <__errno_location@plt>:
  401af0:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  401af4:	ldr	x17, [x16, #3792]
  401af8:	add	x16, x16, #0xed0
  401afc:	br	x17

0000000000401b00 <fprintf@plt>:
  401b00:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  401b04:	ldr	x17, [x16, #3800]
  401b08:	add	x16, x16, #0xed8
  401b0c:	br	x17

0000000000401b10 <generator_write_fsck_deps@plt>:
  401b10:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  401b14:	ldr	x17, [x16, #3808]
  401b18:	add	x16, x16, #0xee0
  401b1c:	br	x17

0000000000401b20 <fflush_and_check@plt>:
  401b20:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  401b24:	ldr	x17, [x16, #3816]
  401b28:	add	x16, x16, #0xee8
  401b2c:	br	x17

0000000000401b30 <generator_add_symlink@plt>:
  401b30:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  401b34:	ldr	x17, [x16, #3824]
  401b38:	add	x16, x16, #0xef0
  401b3c:	br	x17

0000000000401b40 <unit_name_escape@plt>:
  401b40:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  401b44:	ldr	x17, [x16, #3832]
  401b48:	add	x16, x16, #0xef8
  401b4c:	br	x17

0000000000401b50 <unit_name_build@plt>:
  401b50:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  401b54:	ldr	x17, [x16, #3840]
  401b58:	add	x16, x16, #0xf00
  401b5c:	br	x17

0000000000401b60 <strlen@plt>:
  401b60:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  401b64:	ldr	x17, [x16, #3848]
  401b68:	add	x16, x16, #0xf08
  401b6c:	br	x17

0000000000401b70 <stpcpy@plt>:
  401b70:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  401b74:	ldr	x17, [x16, #3856]
  401b78:	add	x16, x16, #0xf10
  401b7c:	br	x17

0000000000401b80 <strcpy@plt>:
  401b80:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  401b84:	ldr	x17, [x16, #3864]
  401b88:	add	x16, x16, #0xf18
  401b8c:	br	x17

0000000000401b90 <mkdir_parents_label@plt>:
  401b90:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  401b94:	ldr	x17, [x16, #3872]
  401b98:	add	x16, x16, #0xf20
  401b9c:	br	x17

0000000000401ba0 <free@plt>:
  401ba0:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  401ba4:	ldr	x17, [x16, #3880]
  401ba8:	add	x16, x16, #0xf28
  401bac:	br	x17

0000000000401bb0 <safe_fclose@plt>:
  401bb0:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  401bb4:	ldr	x17, [x16, #3888]
  401bb8:	add	x16, x16, #0xf30
  401bbc:	br	x17

0000000000401bc0 <strreplace@plt>:
  401bc0:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  401bc4:	ldr	x17, [x16, #3896]
  401bc8:	add	x16, x16, #0xf38
  401bcc:	br	x17

0000000000401bd0 <write_string_file_ts@plt>:
  401bd0:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  401bd4:	ldr	x17, [x16, #3904]
  401bd8:	add	x16, x16, #0xf40
  401bdc:	br	x17

0000000000401be0 <strcmp_ptr@plt>:
  401be0:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  401be4:	ldr	x17, [x16, #3912]
  401be8:	add	x16, x16, #0xf48
  401bec:	br	x17

0000000000401bf0 <dissect_image@plt>:
  401bf0:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  401bf4:	ldr	x17, [x16, #3920]
  401bf8:	add	x16, x16, #0xf50
  401bfc:	br	x17

0000000000401c00 <safe_close@plt>:
  401c00:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  401c04:	ldr	x17, [x16, #3928]
  401c08:	add	x16, x16, #0xf58
  401c0c:	br	x17

0000000000401c10 <dissected_image_unref@plt>:
  401c10:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  401c14:	ldr	x17, [x16, #3936]
  401c18:	add	x16, x16, #0xf60
  401c1c:	br	x17

0000000000401c20 <sd_device_new_from_devnum@plt>:
  401c20:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  401c24:	ldr	x17, [x16, #3944]
  401c28:	add	x16, x16, #0xf68
  401c2c:	br	x17

0000000000401c30 <sd_device_get_devname@plt>:
  401c30:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  401c34:	ldr	x17, [x16, #3952]
  401c38:	add	x16, x16, #0xf70
  401c3c:	br	x17

0000000000401c40 <sd_device_get_syspath@plt>:
  401c40:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  401c44:	ldr	x17, [x16, #3960]
  401c48:	add	x16, x16, #0xf78
  401c4c:	br	x17

0000000000401c50 <sd_device_get_sysname@plt>:
  401c50:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  401c54:	ldr	x17, [x16, #3968]
  401c58:	add	x16, x16, #0xf80
  401c5c:	br	x17

0000000000401c60 <gnu_dev_major@plt>:
  401c60:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  401c64:	ldr	x17, [x16, #3976]
  401c68:	add	x16, x16, #0xf88
  401c6c:	br	x17

0000000000401c70 <gnu_dev_minor@plt>:
  401c70:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  401c74:	ldr	x17, [x16, #3984]
  401c78:	add	x16, x16, #0xf90
  401c7c:	br	x17

0000000000401c80 <log_object_internal@plt>:
  401c80:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  401c84:	ldr	x17, [x16, #3992]
  401c88:	add	x16, x16, #0xf98
  401c8c:	br	x17

0000000000401c90 <sd_device_get_parent@plt>:
  401c90:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  401c94:	ldr	x17, [x16, #4000]
  401c98:	add	x16, x16, #0xfa0
  401c9c:	br	x17

0000000000401ca0 <sd_device_get_devtype@plt>:
  401ca0:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  401ca4:	ldr	x17, [x16, #4008]
  401ca8:	add	x16, x16, #0xfa8
  401cac:	br	x17

0000000000401cb0 <sd_device_get_devnum@plt>:
  401cb0:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  401cb4:	ldr	x17, [x16, #4016]
  401cb8:	add	x16, x16, #0xfb0
  401cbc:	br	x17

0000000000401cc0 <open64@plt>:
  401cc0:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  401cc4:	ldr	x17, [x16, #4024]
  401cc8:	add	x16, x16, #0xfb8
  401ccc:	br	x17

0000000000401cd0 <fstab_has_fstype@plt>:
  401cd0:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  401cd4:	ldr	x17, [x16, #4032]
  401cd8:	add	x16, x16, #0xfc0
  401cdc:	br	x17

0000000000401ce0 <fstab_is_mount_point@plt>:
  401ce0:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  401ce4:	ldr	x17, [x16, #4040]
  401ce8:	add	x16, x16, #0xfc8
  401cec:	br	x17

0000000000401cf0 <access@plt>:
  401cf0:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  401cf4:	ldr	x17, [x16, #4048]
  401cf8:	add	x16, x16, #0xfd0
  401cfc:	br	x17

0000000000401d00 <generator_enable_remount_fs_service@plt>:
  401d00:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  401d04:	ldr	x17, [x16, #4056]
  401d08:	add	x16, x16, #0xfd8
  401d0c:	br	x17

0000000000401d10 <sd_device_unref@plt>:
  401d10:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  401d14:	ldr	x17, [x16, #4064]
  401d18:	add	x16, x16, #0xfe0
  401d1c:	br	x17

0000000000401d20 <path_is_mount_point@plt>:
  401d20:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  401d24:	ldr	x17, [x16, #4072]
  401d28:	add	x16, x16, #0xfe8
  401d2c:	br	x17

0000000000401d30 <dir_is_empty_at@plt>:
  401d30:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  401d34:	ldr	x17, [x16, #4080]
  401d38:	add	x16, x16, #0xff0
  401d3c:	br	x17

0000000000401d40 <memcmp@plt>:
  401d40:	adrp	x16, 41f000 <__FRAME_END__+0x16760>
  401d44:	ldr	x17, [x16, #4088]
  401d48:	add	x16, x16, #0xff8
  401d4c:	br	x17

Disassembly of section .text:

0000000000401d50 <_start>:
  401d50:	mov	x29, #0x0                   	// #0
  401d54:	mov	x30, #0x0                   	// #0
  401d58:	mov	x5, x0
  401d5c:	ldr	x1, [sp]
  401d60:	add	x2, sp, #0x8
  401d64:	mov	x6, sp
  401d68:	movz	x0, #0x0, lsl #48
  401d6c:	movk	x0, #0x0, lsl #32
  401d70:	movk	x0, #0x40, lsl #16
  401d74:	movk	x0, #0x1f18
  401d78:	movz	x3, #0x0, lsl #48
  401d7c:	movk	x3, #0x0, lsl #32
  401d80:	movk	x3, #0x40, lsl #16
  401d84:	movk	x3, #0x7300
  401d88:	movz	x4, #0x0, lsl #48
  401d8c:	movk	x4, #0x0, lsl #32
  401d90:	movk	x4, #0x40, lsl #16
  401d94:	movk	x4, #0x7380
  401d98:	bl	401930 <__libc_start_main@plt>
  401d9c:	bl	401940 <abort@plt>

0000000000401da0 <call_weak_fn>:
  401da0:	adrp	x0, 41f000 <__FRAME_END__+0x16760>
  401da4:	ldr	x0, [x0, #3520]
  401da8:	cbz	x0, 401db0 <call_weak_fn+0x10>
  401dac:	b	401950 <__gmon_start__@plt>
  401db0:	ret

0000000000401db4 <deregister_tm_clones>:
  401db4:	stp	x29, x30, [sp, #-32]!
  401db8:	mov	x29, sp
  401dbc:	adrp	x0, 420000 <arg_enabled>
  401dc0:	add	x0, x0, #0x0
  401dc4:	str	x0, [sp, #24]
  401dc8:	ldr	x0, [sp, #24]
  401dcc:	str	x0, [sp, #24]
  401dd0:	ldr	x1, [sp, #24]
  401dd4:	adrp	x0, 420000 <arg_enabled>
  401dd8:	add	x0, x0, #0x0
  401ddc:	cmp	x1, x0
  401de0:	b.eq	401e1c <deregister_tm_clones+0x68>  // b.none
  401de4:	adrp	x0, 407000 <add_automount+0x640>
  401de8:	add	x0, x0, #0x398
  401dec:	ldr	x0, [x0]
  401df0:	str	x0, [sp, #16]
  401df4:	ldr	x0, [sp, #16]
  401df8:	str	x0, [sp, #16]
  401dfc:	ldr	x0, [sp, #16]
  401e00:	cmp	x0, #0x0
  401e04:	b.eq	401e20 <deregister_tm_clones+0x6c>  // b.none
  401e08:	ldr	x1, [sp, #16]
  401e0c:	adrp	x0, 420000 <arg_enabled>
  401e10:	add	x0, x0, #0x0
  401e14:	blr	x1
  401e18:	b	401e20 <deregister_tm_clones+0x6c>
  401e1c:	nop
  401e20:	ldp	x29, x30, [sp], #32
  401e24:	ret

0000000000401e28 <register_tm_clones>:
  401e28:	stp	x29, x30, [sp, #-48]!
  401e2c:	mov	x29, sp
  401e30:	adrp	x0, 420000 <arg_enabled>
  401e34:	add	x0, x0, #0x0
  401e38:	str	x0, [sp, #40]
  401e3c:	ldr	x0, [sp, #40]
  401e40:	str	x0, [sp, #40]
  401e44:	ldr	x1, [sp, #40]
  401e48:	adrp	x0, 420000 <arg_enabled>
  401e4c:	add	x0, x0, #0x0
  401e50:	sub	x0, x1, x0
  401e54:	asr	x0, x0, #3
  401e58:	lsr	x1, x0, #63
  401e5c:	add	x0, x1, x0
  401e60:	asr	x0, x0, #1
  401e64:	str	x0, [sp, #32]
  401e68:	ldr	x0, [sp, #32]
  401e6c:	cmp	x0, #0x0
  401e70:	b.eq	401eb0 <register_tm_clones+0x88>  // b.none
  401e74:	adrp	x0, 407000 <add_automount+0x640>
  401e78:	add	x0, x0, #0x3a0
  401e7c:	ldr	x0, [x0]
  401e80:	str	x0, [sp, #24]
  401e84:	ldr	x0, [sp, #24]
  401e88:	str	x0, [sp, #24]
  401e8c:	ldr	x0, [sp, #24]
  401e90:	cmp	x0, #0x0
  401e94:	b.eq	401eb4 <register_tm_clones+0x8c>  // b.none
  401e98:	ldr	x2, [sp, #24]
  401e9c:	ldr	x1, [sp, #32]
  401ea0:	adrp	x0, 420000 <arg_enabled>
  401ea4:	add	x0, x0, #0x0
  401ea8:	blr	x2
  401eac:	b	401eb4 <register_tm_clones+0x8c>
  401eb0:	nop
  401eb4:	ldp	x29, x30, [sp], #48
  401eb8:	ret

0000000000401ebc <__do_global_dtors_aux>:
  401ebc:	stp	x29, x30, [sp, #-16]!
  401ec0:	mov	x29, sp
  401ec4:	adrp	x0, 420000 <arg_enabled>
  401ec8:	add	x0, x0, #0x8
  401ecc:	ldrb	w0, [x0]
  401ed0:	and	x0, x0, #0xff
  401ed4:	cmp	x0, #0x0
  401ed8:	b.ne	401ef4 <__do_global_dtors_aux+0x38>  // b.any
  401edc:	bl	401db4 <deregister_tm_clones>
  401ee0:	adrp	x0, 420000 <arg_enabled>
  401ee4:	add	x0, x0, #0x8
  401ee8:	mov	w1, #0x1                   	// #1
  401eec:	strb	w1, [x0]
  401ef0:	b	401ef8 <__do_global_dtors_aux+0x3c>
  401ef4:	nop
  401ef8:	ldp	x29, x30, [sp], #16
  401efc:	ret

0000000000401f00 <frame_dummy>:
  401f00:	stp	x29, x30, [sp, #-16]!
  401f04:	mov	x29, sp
  401f08:	bl	401e28 <register_tm_clones>
  401f0c:	nop
  401f10:	ldp	x29, x30, [sp], #16
  401f14:	ret

0000000000401f18 <main>:
  401f18:	sub	sp, sp, #0x80
  401f1c:	stp	x29, x30, [sp, #112]
  401f20:	add	x29, sp, #0x70
  401f24:	adrp	x8, 407000 <add_automount+0x640>
  401f28:	add	x8, x8, #0x3a8
  401f2c:	add	x2, x8, #0x3
  401f30:	adrp	x8, 407000 <add_automount+0x640>
  401f34:	add	x8, x8, #0x408
  401f38:	stur	wzr, [x29, #-4]
  401f3c:	stur	w0, [x29, #-8]
  401f40:	stur	x1, [x29, #-16]
  401f44:	ldur	w0, [x29, #-8]
  401f48:	ldur	x1, [x29, #-16]
  401f4c:	stur	x2, [x29, #-48]
  401f50:	str	x8, [sp, #56]
  401f54:	bl	4020d0 <save_argc_argv>
  401f58:	bl	401960 <log_setup_generator@plt>
  401f5c:	ldur	w9, [x29, #-8]
  401f60:	cmp	w9, #0x1
  401f64:	b.le	402000 <main+0xe8>
  401f68:	ldur	w8, [x29, #-8]
  401f6c:	cmp	w8, #0x4
  401f70:	b.eq	402000 <main+0xe8>  // b.none
  401f74:	mov	w8, #0x3                   	// #3
  401f78:	stur	w8, [x29, #-24]
  401f7c:	mov	w8, #0x16                  	// #22
  401f80:	movk	w8, #0x4000, lsl #16
  401f84:	stur	w8, [x29, #-28]
  401f88:	stur	wzr, [x29, #-32]
  401f8c:	ldur	w0, [x29, #-32]
  401f90:	bl	401970 <log_get_max_level_realm@plt>
  401f94:	ldur	w8, [x29, #-24]
  401f98:	and	w8, w8, #0x7
  401f9c:	cmp	w0, w8
  401fa0:	b.lt	401fd8 <main+0xc0>  // b.tstop
  401fa4:	ldur	w8, [x29, #-32]
  401fa8:	ldur	w9, [x29, #-24]
  401fac:	orr	w0, w9, w8, lsl #10
  401fb0:	ldur	w1, [x29, #-28]
  401fb4:	ldur	x2, [x29, #-48]
  401fb8:	mov	w3, #0x333                 	// #819
  401fbc:	adrp	x4, 407000 <add_automount+0x640>
  401fc0:	add	x4, x4, #0x3d7
  401fc4:	adrp	x5, 407000 <add_automount+0x640>
  401fc8:	add	x5, x5, #0x3dc
  401fcc:	bl	401980 <log_internal_realm@plt>
  401fd0:	str	w0, [sp, #52]
  401fd4:	b	401fec <main+0xd4>
  401fd8:	ldur	w0, [x29, #-28]
  401fdc:	bl	401990 <abs@plt>
  401fe0:	mov	w8, wzr
  401fe4:	subs	w8, w8, w0, uxtb
  401fe8:	str	w8, [sp, #52]
  401fec:	ldr	w8, [sp, #52]
  401ff0:	stur	w8, [x29, #-36]
  401ff4:	ldur	w8, [x29, #-36]
  401ff8:	stur	w8, [x29, #-4]
  401ffc:	b	4020c0 <main+0x1a8>
  402000:	ldur	w8, [x29, #-8]
  402004:	cmp	w8, #0x1
  402008:	b.le	40201c <main+0x104>
  40200c:	ldur	x8, [x29, #-16]
  402010:	ldr	x8, [x8, #8]
  402014:	str	x8, [sp, #40]
  402018:	b	402024 <main+0x10c>
  40201c:	ldr	x8, [sp, #56]
  402020:	str	x8, [sp, #40]
  402024:	ldr	x8, [sp, #40]
  402028:	ldur	w9, [x29, #-8]
  40202c:	cmp	w9, #0x1
  402030:	str	x8, [sp, #32]
  402034:	b.le	402048 <main+0x130>
  402038:	ldur	x8, [x29, #-16]
  40203c:	ldr	x8, [x8, #16]
  402040:	str	x8, [sp, #24]
  402044:	b	402050 <main+0x138>
  402048:	ldr	x8, [sp, #56]
  40204c:	str	x8, [sp, #24]
  402050:	ldr	x8, [sp, #24]
  402054:	ldur	w9, [x29, #-8]
  402058:	cmp	w9, #0x1
  40205c:	str	x8, [sp, #16]
  402060:	b.le	402074 <main+0x15c>
  402064:	ldur	x8, [x29, #-16]
  402068:	ldr	x8, [x8, #24]
  40206c:	str	x8, [sp, #8]
  402070:	b	40207c <main+0x164>
  402074:	ldr	x8, [sp, #56]
  402078:	str	x8, [sp, #8]
  40207c:	ldr	x8, [sp, #8]
  402080:	ldr	x0, [sp, #32]
  402084:	ldr	x1, [sp, #16]
  402088:	mov	x2, x8
  40208c:	bl	402104 <run>
  402090:	stur	w0, [x29, #-20]
  402094:	bl	4019a0 <ask_password_agent_close@plt>
  402098:	bl	4019b0 <polkit_agent_close@plt>
  40209c:	bl	4019c0 <pager_close@plt>
  4020a0:	bl	4019d0 <mac_selinux_finish@plt>
  4020a4:	bl	4023b0 <static_destruct>
  4020a8:	ldur	w9, [x29, #-20]
  4020ac:	mov	w10, wzr
  4020b0:	mov	w11, #0x1                   	// #1
  4020b4:	cmp	w9, #0x0
  4020b8:	csel	w9, w11, w10, lt  // lt = tstop
  4020bc:	stur	w9, [x29, #-4]
  4020c0:	ldur	w0, [x29, #-4]
  4020c4:	ldp	x29, x30, [sp, #112]
  4020c8:	add	sp, sp, #0x80
  4020cc:	ret

00000000004020d0 <save_argc_argv>:
  4020d0:	sub	sp, sp, #0x10
  4020d4:	adrp	x8, 420000 <arg_enabled>
  4020d8:	add	x8, x8, #0x18
  4020dc:	adrp	x9, 420000 <arg_enabled>
  4020e0:	add	x9, x9, #0x20
  4020e4:	str	w0, [sp, #12]
  4020e8:	str	x1, [sp]
  4020ec:	ldr	w10, [sp, #12]
  4020f0:	str	w10, [x8]
  4020f4:	ldr	x8, [sp]
  4020f8:	str	x8, [x9]
  4020fc:	add	sp, sp, #0x10
  402100:	ret

0000000000402104 <run>:
  402104:	sub	sp, sp, #0x90
  402108:	stp	x29, x30, [sp, #128]
  40210c:	add	x29, sp, #0x80
  402110:	adrp	x8, 407000 <add_automount+0x640>
  402114:	add	x8, x8, #0x3a8
  402118:	add	x8, x8, #0x3
  40211c:	adrp	x9, 407000 <add_automount+0x640>
  402120:	add	x9, x9, #0x454
  402124:	stur	x0, [x29, #-16]
  402128:	stur	x1, [x29, #-24]
  40212c:	stur	x2, [x29, #-32]
  402130:	str	x8, [sp, #32]
  402134:	str	x9, [sp, #24]
  402138:	ldur	x8, [x29, #-32]
  40213c:	adrp	x9, 420000 <arg_enabled>
  402140:	add	x9, x9, #0x10
  402144:	str	x8, [x9]
  402148:	cmp	x8, #0x0
  40214c:	cset	w10, ne  // ne = any
  402150:	mov	w11, #0x1                   	// #1
  402154:	eor	w10, w10, #0x1
  402158:	eor	w10, w10, w11
  40215c:	eor	w10, w10, w11
  402160:	and	w10, w10, #0x1
  402164:	mov	w0, w10
  402168:	sxtw	x8, w0
  40216c:	cbz	x8, 402194 <run+0x90>
  402170:	mov	w8, wzr
  402174:	mov	w0, w8
  402178:	adrp	x1, 407000 <add_automount+0x640>
  40217c:	add	x1, x1, #0x40d
  402180:	ldr	x2, [sp, #32]
  402184:	mov	w3, #0x317                 	// #791
  402188:	adrp	x4, 407000 <add_automount+0x640>
  40218c:	add	x4, x4, #0x422
  402190:	bl	4019e0 <log_assert_failed_realm@plt>
  402194:	bl	4019f0 <detect_container@plt>
  402198:	cmp	w0, #0x0
  40219c:	cset	w8, le
  4021a0:	tbnz	w8, #0, 402220 <run+0x11c>
  4021a4:	mov	w8, #0x7                   	// #7
  4021a8:	stur	w8, [x29, #-44]
  4021ac:	stur	wzr, [x29, #-48]
  4021b0:	stur	wzr, [x29, #-52]
  4021b4:	ldur	w0, [x29, #-52]
  4021b8:	bl	401970 <log_get_max_level_realm@plt>
  4021bc:	ldur	w8, [x29, #-44]
  4021c0:	and	w8, w8, #0x7
  4021c4:	cmp	w0, w8
  4021c8:	b.lt	4021fc <run+0xf8>  // b.tstop
  4021cc:	ldur	w8, [x29, #-52]
  4021d0:	ldur	w9, [x29, #-44]
  4021d4:	orr	w0, w9, w8, lsl #10
  4021d8:	ldur	w1, [x29, #-48]
  4021dc:	ldr	x2, [sp, #32]
  4021e0:	mov	w3, #0x31a                 	// #794
  4021e4:	ldr	x4, [sp, #24]
  4021e8:	adrp	x5, 407000 <add_automount+0x640>
  4021ec:	add	x5, x5, #0x458
  4021f0:	bl	401980 <log_internal_realm@plt>
  4021f4:	str	w0, [sp, #20]
  4021f8:	b	402210 <run+0x10c>
  4021fc:	ldur	w0, [x29, #-48]
  402200:	bl	401990 <abs@plt>
  402204:	mov	w8, wzr
  402208:	subs	w8, w8, w0, uxtb
  40220c:	str	w8, [sp, #20]
  402210:	ldr	w8, [sp, #20]
  402214:	stur	w8, [x29, #-56]
  402218:	stur	wzr, [x29, #-4]
  40221c:	b	4023a0 <run+0x29c>
  402220:	adrp	x0, 402000 <main+0xe8>
  402224:	add	x0, x0, #0x430
  402228:	mov	x8, xzr
  40222c:	mov	x1, x8
  402230:	mov	w9, wzr
  402234:	mov	w2, w9
  402238:	bl	401a00 <proc_cmdline_parse@plt>
  40223c:	stur	w0, [x29, #-36]
  402240:	ldur	w9, [x29, #-36]
  402244:	cmp	w9, #0x0
  402248:	cset	w9, ge  // ge = tcont
  40224c:	tbnz	w9, #0, 4022c8 <run+0x1c4>
  402250:	mov	w8, #0x4                   	// #4
  402254:	stur	w8, [x29, #-60]
  402258:	ldur	w8, [x29, #-36]
  40225c:	str	w8, [sp, #64]
  402260:	str	wzr, [sp, #60]
  402264:	ldr	w0, [sp, #60]
  402268:	bl	401970 <log_get_max_level_realm@plt>
  40226c:	ldur	w8, [x29, #-60]
  402270:	and	w8, w8, #0x7
  402274:	cmp	w0, w8
  402278:	b.lt	4022ac <run+0x1a8>  // b.tstop
  40227c:	ldr	w8, [sp, #60]
  402280:	ldur	w9, [x29, #-60]
  402284:	orr	w0, w9, w8, lsl #10
  402288:	ldr	w1, [sp, #64]
  40228c:	ldr	x2, [sp, #32]
  402290:	mov	w3, #0x320                 	// #800
  402294:	ldr	x4, [sp, #24]
  402298:	adrp	x5, 407000 <add_automount+0x640>
  40229c:	add	x5, x5, #0x471
  4022a0:	bl	401980 <log_internal_realm@plt>
  4022a4:	str	w0, [sp, #16]
  4022a8:	b	4022c0 <run+0x1bc>
  4022ac:	ldr	w0, [sp, #64]
  4022b0:	bl	401990 <abs@plt>
  4022b4:	mov	w8, wzr
  4022b8:	subs	w8, w8, w0, uxtb
  4022bc:	str	w8, [sp, #16]
  4022c0:	ldr	w8, [sp, #16]
  4022c4:	str	w8, [sp, #56]
  4022c8:	adrp	x8, 420000 <arg_enabled>
  4022cc:	add	x8, x8, #0x0
  4022d0:	ldrb	w9, [x8]
  4022d4:	tbnz	w9, #0, 402354 <run+0x250>
  4022d8:	mov	w8, #0x7                   	// #7
  4022dc:	str	w8, [sp, #52]
  4022e0:	str	wzr, [sp, #48]
  4022e4:	str	wzr, [sp, #44]
  4022e8:	ldr	w0, [sp, #44]
  4022ec:	bl	401970 <log_get_max_level_realm@plt>
  4022f0:	ldr	w8, [sp, #52]
  4022f4:	and	w8, w8, #0x7
  4022f8:	cmp	w0, w8
  4022fc:	b.lt	402330 <run+0x22c>  // b.tstop
  402300:	ldr	w8, [sp, #44]
  402304:	ldr	w9, [sp, #52]
  402308:	orr	w0, w9, w8, lsl #10
  40230c:	ldr	w1, [sp, #48]
  402310:	ldr	x2, [sp, #32]
  402314:	mov	w3, #0x323                 	// #803
  402318:	ldr	x4, [sp, #24]
  40231c:	adrp	x5, 407000 <add_automount+0x640>
  402320:	add	x5, x5, #0x4a3
  402324:	bl	401980 <log_internal_realm@plt>
  402328:	str	w0, [sp, #12]
  40232c:	b	402344 <run+0x240>
  402330:	ldr	w0, [sp, #48]
  402334:	bl	401990 <abs@plt>
  402338:	mov	w8, wzr
  40233c:	subs	w8, w8, w0, uxtb
  402340:	str	w8, [sp, #12]
  402344:	ldr	w8, [sp, #12]
  402348:	str	w8, [sp, #40]
  40234c:	stur	wzr, [x29, #-4]
  402350:	b	4023a0 <run+0x29c>
  402354:	adrp	x8, 420000 <arg_enabled>
  402358:	add	x8, x8, #0x1
  40235c:	ldrb	w9, [x8]
  402360:	tbnz	w9, #0, 402368 <run+0x264>
  402364:	b	402370 <run+0x26c>
  402368:	bl	4026cc <add_root_mount>
  40236c:	stur	w0, [x29, #-36]
  402370:	bl	401a10 <in_initrd@plt>
  402374:	tbnz	w0, #0, 402398 <run+0x294>
  402378:	bl	4029a8 <add_mounts>
  40237c:	stur	w0, [x29, #-40]
  402380:	ldur	w8, [x29, #-36]
  402384:	cmp	w8, #0x0
  402388:	cset	w8, lt  // lt = tstop
  40238c:	tbnz	w8, #0, 402398 <run+0x294>
  402390:	ldur	w8, [x29, #-40]
  402394:	stur	w8, [x29, #-36]
  402398:	ldur	w8, [x29, #-36]
  40239c:	stur	w8, [x29, #-4]
  4023a0:	ldur	w0, [x29, #-4]
  4023a4:	ldp	x29, x30, [sp, #128]
  4023a8:	add	sp, sp, #0x90
  4023ac:	ret

00000000004023b0 <static_destruct>:
  4023b0:	sub	sp, sp, #0x20
  4023b4:	stp	x29, x30, [sp, #16]
  4023b8:	add	x29, sp, #0x10
  4023bc:	adrp	x8, 41f000 <__FRAME_END__+0x16760>
  4023c0:	ldr	x8, [x8, #3528]
  4023c4:	str	x8, [sp]
  4023c8:	cbnz	x8, 4023d0 <static_destruct+0x20>
  4023cc:	b	402424 <static_destruct+0x74>
  4023d0:	ldr	x0, [sp]
  4023d4:	mov	x1, #0x8                   	// #8
  4023d8:	bl	4072cc <ALIGN_TO>
  4023dc:	str	x0, [sp, #8]
  4023e0:	ldr	x8, [sp, #8]
  4023e4:	adrp	x9, 41f000 <__FRAME_END__+0x16760>
  4023e8:	ldr	x9, [x9, #3536]
  4023ec:	cmp	x8, x9
  4023f0:	b.cs	402424 <static_destruct+0x74>  // b.hs, b.nlast
  4023f4:	ldr	x8, [sp, #8]
  4023f8:	ldr	x8, [x8, #8]
  4023fc:	ldr	x9, [sp, #8]
  402400:	ldr	x0, [x9]
  402404:	blr	x8
  402408:	ldr	x8, [sp, #8]
  40240c:	add	x8, x8, #0x10
  402410:	mov	x0, x8
  402414:	mov	x1, #0x8                   	// #8
  402418:	bl	4072cc <ALIGN_TO>
  40241c:	str	x0, [sp, #8]
  402420:	b	4023e0 <static_destruct+0x30>
  402424:	ldp	x29, x30, [sp, #16]
  402428:	add	sp, sp, #0x20
  40242c:	ret

0000000000402430 <parse_proc_cmdline_item>:
  402430:	sub	sp, sp, #0x60
  402434:	stp	x29, x30, [sp, #80]
  402438:	add	x29, sp, #0x50
  40243c:	adrp	x8, 407000 <add_automount+0x640>
  402440:	add	x8, x8, #0x3a8
  402444:	add	x8, x8, #0x3
  402448:	stur	x0, [x29, #-16]
  40244c:	stur	x1, [x29, #-24]
  402450:	stur	x2, [x29, #-32]
  402454:	str	x8, [sp, #16]
  402458:	ldur	x8, [x29, #-16]
  40245c:	cmp	x8, #0x0
  402460:	cset	w9, ne  // ne = any
  402464:	mov	w10, #0x1                   	// #1
  402468:	eor	w9, w9, #0x1
  40246c:	eor	w9, w9, w10
  402470:	eor	w9, w9, w10
  402474:	and	w9, w9, #0x1
  402478:	mov	w0, w9
  40247c:	sxtw	x8, w0
  402480:	cbz	x8, 4024a8 <parse_proc_cmdline_item+0x78>
  402484:	mov	w8, wzr
  402488:	mov	w0, w8
  40248c:	adrp	x1, 407000 <add_automount+0x640>
  402490:	add	x1, x1, #0x4b6
  402494:	ldr	x2, [sp, #16]
  402498:	mov	w3, #0x28f                 	// #655
  40249c:	adrp	x4, 407000 <add_automount+0x640>
  4024a0:	add	x4, x4, #0x4ba
  4024a4:	bl	4019e0 <log_assert_failed_realm@plt>
  4024a8:	ldur	x0, [x29, #-16]
  4024ac:	adrp	x1, 407000 <add_automount+0x640>
  4024b0:	add	x1, x1, #0x4fa
  4024b4:	bl	401a20 <proc_cmdline_key_streq@plt>
  4024b8:	tbnz	w0, #0, 4024d4 <parse_proc_cmdline_item+0xa4>
  4024bc:	ldur	x0, [x29, #-16]
  4024c0:	adrp	x1, 407000 <add_automount+0x640>
  4024c4:	add	x1, x1, #0x50b
  4024c8:	bl	401a20 <proc_cmdline_key_streq@plt>
  4024cc:	tbnz	w0, #0, 4024d4 <parse_proc_cmdline_item+0xa4>
  4024d0:	b	4025b0 <parse_proc_cmdline_item+0x180>
  4024d4:	ldur	x8, [x29, #-24]
  4024d8:	cbz	x8, 4024ec <parse_proc_cmdline_item+0xbc>
  4024dc:	ldur	x0, [x29, #-24]
  4024e0:	bl	401a30 <parse_boolean@plt>
  4024e4:	str	w0, [sp, #12]
  4024e8:	b	4024f4 <parse_proc_cmdline_item+0xc4>
  4024ec:	mov	w8, #0x1                   	// #1
  4024f0:	str	w8, [sp, #12]
  4024f4:	ldr	w8, [sp, #12]
  4024f8:	stur	w8, [x29, #-36]
  4024fc:	ldur	w8, [x29, #-36]
  402500:	cmp	w8, #0x0
  402504:	cset	w8, ge  // ge = tcont
  402508:	tbnz	w8, #0, 402590 <parse_proc_cmdline_item+0x160>
  40250c:	mov	w8, #0x4                   	// #4
  402510:	str	w8, [sp, #40]
  402514:	ldur	w8, [x29, #-36]
  402518:	str	w8, [sp, #36]
  40251c:	str	wzr, [sp, #32]
  402520:	ldr	w0, [sp, #32]
  402524:	bl	401970 <log_get_max_level_realm@plt>
  402528:	ldr	w8, [sp, #40]
  40252c:	and	w8, w8, #0x7
  402530:	cmp	w0, w8
  402534:	b.lt	402570 <parse_proc_cmdline_item+0x140>  // b.tstop
  402538:	ldr	w8, [sp, #32]
  40253c:	ldr	w9, [sp, #40]
  402540:	orr	w0, w9, w8, lsl #10
  402544:	ldr	w1, [sp, #36]
  402548:	ldur	x6, [x29, #-24]
  40254c:	ldr	x2, [sp, #16]
  402550:	mov	w3, #0x296                 	// #662
  402554:	adrp	x4, 407000 <add_automount+0x640>
  402558:	add	x4, x4, #0x51f
  40255c:	adrp	x5, 407000 <add_automount+0x640>
  402560:	add	x5, x5, #0x537
  402564:	bl	401980 <log_internal_realm@plt>
  402568:	str	w0, [sp, #8]
  40256c:	b	402584 <parse_proc_cmdline_item+0x154>
  402570:	ldr	w0, [sp, #36]
  402574:	bl	401990 <abs@plt>
  402578:	mov	w8, wzr
  40257c:	subs	w8, w8, w0, uxtb
  402580:	str	w8, [sp, #8]
  402584:	ldr	w8, [sp, #8]
  402588:	str	w8, [sp, #28]
  40258c:	b	4025ac <parse_proc_cmdline_item+0x17c>
  402590:	ldur	w8, [x29, #-36]
  402594:	cmp	w8, #0x0
  402598:	cset	w8, ne  // ne = any
  40259c:	and	w8, w8, #0x1
  4025a0:	adrp	x9, 420000 <arg_enabled>
  4025a4:	add	x9, x9, #0x0
  4025a8:	strb	w8, [x9]
  4025ac:	b	4026b8 <parse_proc_cmdline_item+0x288>
  4025b0:	ldur	x0, [x29, #-16]
  4025b4:	adrp	x1, 407000 <add_automount+0x640>
  4025b8:	add	x1, x1, #0x56a
  4025bc:	bl	401a20 <proc_cmdline_key_streq@plt>
  4025c0:	tbnz	w0, #0, 4025c8 <parse_proc_cmdline_item+0x198>
  4025c4:	b	402610 <parse_proc_cmdline_item+0x1e0>
  4025c8:	ldur	x0, [x29, #-16]
  4025cc:	ldur	x1, [x29, #-24]
  4025d0:	bl	402e04 <proc_cmdline_value_missing>
  4025d4:	tbnz	w0, #0, 4025dc <parse_proc_cmdline_item+0x1ac>
  4025d8:	b	4025e4 <parse_proc_cmdline_item+0x1b4>
  4025dc:	stur	wzr, [x29, #-4]
  4025e0:	b	4026bc <parse_proc_cmdline_item+0x28c>
  4025e4:	ldur	x0, [x29, #-24]
  4025e8:	adrp	x1, 407000 <add_automount+0x640>
  4025ec:	add	x1, x1, #0x56f
  4025f0:	bl	401a40 <strcmp@plt>
  4025f4:	cmp	w0, #0x0
  4025f8:	cset	w8, eq  // eq = none
  4025fc:	and	w8, w8, #0x1
  402600:	adrp	x9, 420000 <arg_enabled>
  402604:	add	x9, x9, #0x1
  402608:	strb	w8, [x9]
  40260c:	b	4026b8 <parse_proc_cmdline_item+0x288>
  402610:	ldur	x0, [x29, #-16]
  402614:	adrp	x1, 407000 <add_automount+0x640>
  402618:	add	x1, x1, #0x578
  40261c:	bl	401a20 <proc_cmdline_key_streq@plt>
  402620:	tbnz	w0, #0, 402628 <parse_proc_cmdline_item+0x1f8>
  402624:	b	402658 <parse_proc_cmdline_item+0x228>
  402628:	ldur	x0, [x29, #-16]
  40262c:	ldur	x1, [x29, #-24]
  402630:	bl	402e04 <proc_cmdline_value_missing>
  402634:	tbnz	w0, #0, 40263c <parse_proc_cmdline_item+0x20c>
  402638:	b	402644 <parse_proc_cmdline_item+0x214>
  40263c:	stur	wzr, [x29, #-4]
  402640:	b	4026bc <parse_proc_cmdline_item+0x28c>
  402644:	adrp	x8, 420000 <arg_enabled>
  402648:	add	x8, x8, #0x1
  40264c:	mov	w9, #0x0                   	// #0
  402650:	strb	w9, [x8]
  402654:	b	4026b8 <parse_proc_cmdline_item+0x288>
  402658:	ldur	x0, [x29, #-16]
  40265c:	adrp	x1, 407000 <add_automount+0x640>
  402660:	add	x1, x1, #0x581
  402664:	bl	401a20 <proc_cmdline_key_streq@plt>
  402668:	tbnz	w0, #0, 402670 <parse_proc_cmdline_item+0x240>
  40266c:	b	40268c <parse_proc_cmdline_item+0x25c>
  402670:	ldur	x8, [x29, #-24]
  402674:	cbnz	x8, 40268c <parse_proc_cmdline_item+0x25c>
  402678:	adrp	x8, 420000 <arg_enabled>
  40267c:	add	x8, x8, #0x4
  402680:	mov	w9, #0x1                   	// #1
  402684:	str	w9, [x8]
  402688:	b	4026b8 <parse_proc_cmdline_item+0x288>
  40268c:	ldur	x0, [x29, #-16]
  402690:	adrp	x1, 407000 <add_automount+0x640>
  402694:	add	x1, x1, #0x584
  402698:	bl	401a20 <proc_cmdline_key_streq@plt>
  40269c:	tbnz	w0, #0, 4026a4 <parse_proc_cmdline_item+0x274>
  4026a0:	b	4026b8 <parse_proc_cmdline_item+0x288>
  4026a4:	ldur	x8, [x29, #-24]
  4026a8:	cbnz	x8, 4026b8 <parse_proc_cmdline_item+0x288>
  4026ac:	adrp	x8, 420000 <arg_enabled>
  4026b0:	add	x8, x8, #0x4
  4026b4:	str	wzr, [x8]
  4026b8:	stur	wzr, [x29, #-4]
  4026bc:	ldur	w0, [x29, #-4]
  4026c0:	ldp	x29, x30, [sp, #80]
  4026c4:	add	sp, sp, #0x60
  4026c8:	ret

00000000004026cc <add_root_mount>:
  4026cc:	sub	sp, sp, #0x80
  4026d0:	stp	x29, x30, [sp, #112]
  4026d4:	add	x29, sp, #0x70
  4026d8:	adrp	x8, 407000 <add_automount+0x640>
  4026dc:	add	x8, x8, #0x3a8
  4026e0:	add	x8, x8, #0x3
  4026e4:	adrp	x9, 407000 <add_automount+0x640>
  4026e8:	add	x9, x9, #0x5fd
  4026ec:	str	x8, [sp, #48]
  4026f0:	str	x9, [sp, #40]
  4026f4:	bl	401a50 <is_efi_boot@plt>
  4026f8:	tbnz	w0, #0, 402778 <add_root_mount+0xac>
  4026fc:	mov	w8, #0x7                   	// #7
  402700:	stur	w8, [x29, #-12]
  402704:	stur	wzr, [x29, #-16]
  402708:	stur	wzr, [x29, #-20]
  40270c:	ldur	w0, [x29, #-20]
  402710:	bl	401970 <log_get_max_level_realm@plt>
  402714:	ldur	w8, [x29, #-12]
  402718:	and	w8, w8, #0x7
  40271c:	cmp	w0, w8
  402720:	b.lt	402754 <add_root_mount+0x88>  // b.tstop
  402724:	ldur	w8, [x29, #-20]
  402728:	ldur	w9, [x29, #-12]
  40272c:	orr	w0, w9, w8, lsl #10
  402730:	ldur	w1, [x29, #-16]
  402734:	ldr	x2, [sp, #48]
  402738:	mov	w3, #0x2c5                 	// #709
  40273c:	ldr	x4, [sp, #40]
  402740:	adrp	x5, 407000 <add_automount+0x640>
  402744:	add	x5, x5, #0x60c
  402748:	bl	401980 <log_internal_realm@plt>
  40274c:	str	w0, [sp, #36]
  402750:	b	402768 <add_root_mount+0x9c>
  402754:	ldur	w0, [x29, #-16]
  402758:	bl	401990 <abs@plt>
  40275c:	mov	w8, wzr
  402760:	subs	w8, w8, w0, uxtb
  402764:	str	w8, [sp, #36]
  402768:	ldr	w8, [sp, #36]
  40276c:	stur	w8, [x29, #-24]
  402770:	stur	wzr, [x29, #-4]
  402774:	b	402998 <add_root_mount+0x2cc>
  402778:	mov	x8, xzr
  40277c:	mov	x0, x8
  402780:	bl	401a60 <efi_loader_get_device_part_uuid@plt>
  402784:	stur	w0, [x29, #-8]
  402788:	ldur	w9, [x29, #-8]
  40278c:	mov	w10, #0xfffffffe            	// #-2
  402790:	cmp	w9, w10
  402794:	b.ne	402814 <add_root_mount+0x148>  // b.any
  402798:	mov	w8, #0x7                   	// #7
  40279c:	stur	w8, [x29, #-28]
  4027a0:	stur	wzr, [x29, #-32]
  4027a4:	stur	wzr, [x29, #-36]
  4027a8:	ldur	w0, [x29, #-36]
  4027ac:	bl	401970 <log_get_max_level_realm@plt>
  4027b0:	ldur	w8, [x29, #-28]
  4027b4:	and	w8, w8, #0x7
  4027b8:	cmp	w0, w8
  4027bc:	b.lt	4027f0 <add_root_mount+0x124>  // b.tstop
  4027c0:	ldur	w8, [x29, #-36]
  4027c4:	ldur	w9, [x29, #-28]
  4027c8:	orr	w0, w9, w8, lsl #10
  4027cc:	ldur	w1, [x29, #-32]
  4027d0:	ldr	x2, [sp, #48]
  4027d4:	mov	w3, #0x2cb                 	// #715
  4027d8:	ldr	x4, [sp, #40]
  4027dc:	adrp	x5, 407000 <add_automount+0x640>
  4027e0:	add	x5, x5, #0x635
  4027e4:	bl	401980 <log_internal_realm@plt>
  4027e8:	str	w0, [sp, #32]
  4027ec:	b	402804 <add_root_mount+0x138>
  4027f0:	ldur	w0, [x29, #-32]
  4027f4:	bl	401990 <abs@plt>
  4027f8:	mov	w8, wzr
  4027fc:	subs	w8, w8, w0, uxtb
  402800:	str	w8, [sp, #32]
  402804:	ldr	w8, [sp, #32]
  402808:	stur	w8, [x29, #-40]
  40280c:	stur	wzr, [x29, #-4]
  402810:	b	402998 <add_root_mount+0x2cc>
  402814:	ldur	w8, [x29, #-8]
  402818:	cmp	w8, #0x0
  40281c:	cset	w8, ge  // ge = tcont
  402820:	tbnz	w8, #0, 4028a8 <add_root_mount+0x1dc>
  402824:	mov	w8, #0x3                   	// #3
  402828:	stur	w8, [x29, #-44]
  40282c:	ldur	w8, [x29, #-8]
  402830:	stur	w8, [x29, #-48]
  402834:	stur	wzr, [x29, #-52]
  402838:	ldur	w0, [x29, #-52]
  40283c:	bl	401970 <log_get_max_level_realm@plt>
  402840:	ldur	w8, [x29, #-44]
  402844:	and	w8, w8, #0x7
  402848:	cmp	w0, w8
  40284c:	b.lt	402880 <add_root_mount+0x1b4>  // b.tstop
  402850:	ldur	w8, [x29, #-52]
  402854:	ldur	w9, [x29, #-44]
  402858:	orr	w0, w9, w8, lsl #10
  40285c:	ldur	w1, [x29, #-48]
  402860:	ldr	x2, [sp, #48]
  402864:	mov	w3, #0x2ce                 	// #718
  402868:	ldr	x4, [sp, #40]
  40286c:	adrp	x5, 407000 <add_automount+0x640>
  402870:	add	x5, x5, #0x65c
  402874:	bl	401980 <log_internal_realm@plt>
  402878:	str	w0, [sp, #28]
  40287c:	b	402894 <add_root_mount+0x1c8>
  402880:	ldur	w0, [x29, #-48]
  402884:	bl	401990 <abs@plt>
  402888:	mov	w8, wzr
  40288c:	subs	w8, w8, w0, uxtb
  402890:	str	w8, [sp, #28]
  402894:	ldr	w8, [sp, #28]
  402898:	str	w8, [sp, #56]
  40289c:	ldr	w8, [sp, #56]
  4028a0:	stur	w8, [x29, #-4]
  4028a4:	b	402998 <add_root_mount+0x2cc>
  4028a8:	bl	401a10 <in_initrd@plt>
  4028ac:	tbnz	w0, #0, 4028b4 <add_root_mount+0x1e8>
  4028b0:	b	40290c <add_root_mount+0x240>
  4028b4:	adrp	x8, 420000 <arg_enabled>
  4028b8:	add	x8, x8, #0x10
  4028bc:	ldr	x0, [x8]
  4028c0:	adrp	x1, 407000 <add_automount+0x640>
  4028c4:	add	x1, x1, #0x682
  4028c8:	bl	401a70 <generator_write_initrd_root_device_deps@plt>
  4028cc:	stur	w0, [x29, #-8]
  4028d0:	ldur	w9, [x29, #-8]
  4028d4:	cmp	w9, #0x0
  4028d8:	cset	w9, ge  // ge = tcont
  4028dc:	tbnz	w9, #0, 4028e8 <add_root_mount+0x21c>
  4028e0:	stur	wzr, [x29, #-4]
  4028e4:	b	402998 <add_root_mount+0x2cc>
  4028e8:	bl	402edc <add_root_cryptsetup>
  4028ec:	stur	w0, [x29, #-8]
  4028f0:	ldur	w8, [x29, #-8]
  4028f4:	cmp	w8, #0x0
  4028f8:	cset	w8, ge  // ge = tcont
  4028fc:	tbnz	w8, #0, 40290c <add_root_mount+0x240>
  402900:	ldur	w8, [x29, #-8]
  402904:	stur	w8, [x29, #-4]
  402908:	b	402998 <add_root_mount+0x2cc>
  40290c:	bl	401a10 <in_initrd@plt>
  402910:	adrp	x8, 407000 <add_automount+0x640>
  402914:	add	x8, x8, #0x69e
  402918:	adrp	x9, 407000 <add_automount+0x640>
  40291c:	add	x9, x9, #0x695
  402920:	tst	w0, #0x1
  402924:	csel	x2, x9, x8, ne  // ne = any
  402928:	adrp	x8, 420000 <arg_enabled>
  40292c:	add	x8, x8, #0x4
  402930:	ldr	w10, [x8]
  402934:	cmp	w10, #0x0
  402938:	cset	w10, gt
  40293c:	str	x2, [sp, #16]
  402940:	str	w10, [sp, #12]
  402944:	bl	401a10 <in_initrd@plt>
  402948:	adrp	x8, 407000 <add_automount+0x640>
  40294c:	add	x8, x8, #0x6c5
  402950:	adrp	x9, 407000 <add_automount+0x640>
  402954:	add	x9, x9, #0x6af
  402958:	tst	w0, #0x1
  40295c:	csel	x7, x9, x8, ne  // ne = any
  402960:	adrp	x0, 407000 <add_automount+0x640>
  402964:	add	x0, x0, #0x56a
  402968:	adrp	x1, 407000 <add_automount+0x640>
  40296c:	add	x1, x1, #0x682
  402970:	ldr	x2, [sp, #16]
  402974:	mov	x8, xzr
  402978:	mov	x3, x8
  40297c:	ldr	w10, [sp, #12]
  402980:	and	w4, w10, #0x1
  402984:	mov	x5, x8
  402988:	adrp	x6, 407000 <add_automount+0x640>
  40298c:	add	x6, x6, #0x6a0
  402990:	bl	402f18 <add_mount>
  402994:	stur	w0, [x29, #-4]
  402998:	ldur	w0, [x29, #-4]
  40299c:	ldp	x29, x30, [sp, #112]
  4029a0:	add	sp, sp, #0x80
  4029a4:	ret

00000000004029a8 <add_mounts>:
  4029a8:	sub	sp, sp, #0xc0
  4029ac:	stp	x29, x30, [sp, #176]
  4029b0:	add	x29, sp, #0xb0
  4029b4:	adrp	x0, 407000 <add_automount+0x640>
  4029b8:	add	x0, x0, #0x69e
  4029bc:	adrp	x8, 407000 <add_automount+0x640>
  4029c0:	add	x8, x8, #0x3a8
  4029c4:	add	x8, x8, #0x3
  4029c8:	adrp	x9, 407000 <add_automount+0x640>
  4029cc:	add	x9, x9, #0xcc2
  4029d0:	sub	x1, x29, #0x10
  4029d4:	str	x8, [sp, #32]
  4029d8:	str	x9, [sp, #24]
  4029dc:	bl	401a80 <get_block_device_harder@plt>
  4029e0:	stur	w0, [x29, #-20]
  4029e4:	ldur	w10, [x29, #-20]
  4029e8:	cmp	w10, #0x0
  4029ec:	cset	w10, ge  // ge = tcont
  4029f0:	tbnz	w10, #0, 402a78 <add_mounts+0xd0>
  4029f4:	mov	w8, #0x3                   	// #3
  4029f8:	stur	w8, [x29, #-24]
  4029fc:	ldur	w8, [x29, #-20]
  402a00:	stur	w8, [x29, #-28]
  402a04:	stur	wzr, [x29, #-32]
  402a08:	ldur	w0, [x29, #-32]
  402a0c:	bl	401970 <log_get_max_level_realm@plt>
  402a10:	ldur	w8, [x29, #-24]
  402a14:	and	w8, w8, #0x7
  402a18:	cmp	w0, w8
  402a1c:	b.lt	402a50 <add_mounts+0xa8>  // b.tstop
  402a20:	ldur	w8, [x29, #-32]
  402a24:	ldur	w9, [x29, #-24]
  402a28:	orr	w0, w9, w8, lsl #10
  402a2c:	ldur	w1, [x29, #-28]
  402a30:	ldr	x2, [sp, #32]
  402a34:	mov	w3, #0x2f5                 	// #757
  402a38:	ldr	x4, [sp, #24]
  402a3c:	adrp	x5, 407000 <add_automount+0x640>
  402a40:	add	x5, x5, #0xccd
  402a44:	bl	401980 <log_internal_realm@plt>
  402a48:	str	w0, [sp, #20]
  402a4c:	b	402a64 <add_mounts+0xbc>
  402a50:	ldur	w0, [x29, #-28]
  402a54:	bl	401990 <abs@plt>
  402a58:	mov	w8, wzr
  402a5c:	subs	w8, w8, w0, uxtb
  402a60:	str	w8, [sp, #20]
  402a64:	ldr	w8, [sp, #20]
  402a68:	stur	w8, [x29, #-36]
  402a6c:	ldur	w8, [x29, #-36]
  402a70:	stur	w8, [x29, #-4]
  402a74:	b	402df4 <add_mounts+0x44c>
  402a78:	ldur	w8, [x29, #-20]
  402a7c:	cbnz	w8, 402de8 <add_mounts+0x440>
  402a80:	adrp	x0, 407000 <add_automount+0x640>
  402a84:	add	x0, x0, #0xd06
  402a88:	sub	x1, x29, #0x10
  402a8c:	bl	401a80 <get_block_device_harder@plt>
  402a90:	stur	w0, [x29, #-20]
  402a94:	ldur	w8, [x29, #-20]
  402a98:	cmp	w8, #0x0
  402a9c:	cset	w8, ge  // ge = tcont
  402aa0:	tbnz	w8, #0, 402b28 <add_mounts+0x180>
  402aa4:	mov	w8, #0x3                   	// #3
  402aa8:	stur	w8, [x29, #-40]
  402aac:	ldur	w8, [x29, #-20]
  402ab0:	stur	w8, [x29, #-44]
  402ab4:	stur	wzr, [x29, #-48]
  402ab8:	ldur	w0, [x29, #-48]
  402abc:	bl	401970 <log_get_max_level_realm@plt>
  402ac0:	ldur	w8, [x29, #-40]
  402ac4:	and	w8, w8, #0x7
  402ac8:	cmp	w0, w8
  402acc:	b.lt	402b00 <add_mounts+0x158>  // b.tstop
  402ad0:	ldur	w8, [x29, #-48]
  402ad4:	ldur	w9, [x29, #-40]
  402ad8:	orr	w0, w9, w8, lsl #10
  402adc:	ldur	w1, [x29, #-44]
  402ae0:	ldr	x2, [sp, #32]
  402ae4:	mov	w3, #0x2f9                 	// #761
  402ae8:	ldr	x4, [sp, #24]
  402aec:	adrp	x5, 407000 <add_automount+0x640>
  402af0:	add	x5, x5, #0xd0b
  402af4:	bl	401980 <log_internal_realm@plt>
  402af8:	str	w0, [sp, #16]
  402afc:	b	402b14 <add_mounts+0x16c>
  402b00:	ldur	w0, [x29, #-44]
  402b04:	bl	401990 <abs@plt>
  402b08:	mov	w8, wzr
  402b0c:	subs	w8, w8, w0, uxtb
  402b10:	str	w8, [sp, #16]
  402b14:	ldr	w8, [sp, #16]
  402b18:	stur	w8, [x29, #-52]
  402b1c:	ldur	w8, [x29, #-52]
  402b20:	stur	w8, [x29, #-4]
  402b24:	b	402df4 <add_mounts+0x44c>
  402b28:	ldur	w8, [x29, #-20]
  402b2c:	cbnz	w8, 402de8 <add_mounts+0x440>
  402b30:	sub	x1, x29, #0x40
  402b34:	mov	x8, xzr
  402b38:	stur	x8, [x29, #-64]
  402b3c:	adrp	x0, 407000 <add_automount+0x640>
  402b40:	add	x0, x0, #0xd44
  402b44:	bl	401a90 <readlink_malloc@plt>
  402b48:	stur	w0, [x29, #-20]
  402b4c:	ldur	w9, [x29, #-20]
  402b50:	mov	w10, #0xfffffffe            	// #-2
  402b54:	cmp	w9, w10
  402b58:	b.ne	402be0 <add_mounts+0x238>  // b.any
  402b5c:	mov	w8, #0x7                   	// #7
  402b60:	stur	w8, [x29, #-72]
  402b64:	stur	wzr, [x29, #-76]
  402b68:	stur	wzr, [x29, #-80]
  402b6c:	ldur	w0, [x29, #-80]
  402b70:	bl	401970 <log_get_max_level_realm@plt>
  402b74:	ldur	w8, [x29, #-72]
  402b78:	and	w8, w8, #0x7
  402b7c:	cmp	w0, w8
  402b80:	b.lt	402bb4 <add_mounts+0x20c>  // b.tstop
  402b84:	ldur	w8, [x29, #-80]
  402b88:	ldur	w9, [x29, #-72]
  402b8c:	orr	w0, w9, w8, lsl #10
  402b90:	ldur	w1, [x29, #-76]
  402b94:	ldr	x2, [sp, #32]
  402b98:	mov	w3, #0x303                 	// #771
  402b9c:	ldr	x4, [sp, #24]
  402ba0:	adrp	x5, 407000 <add_automount+0x640>
  402ba4:	add	x5, x5, #0xd5f
  402ba8:	bl	401980 <log_internal_realm@plt>
  402bac:	str	w0, [sp, #12]
  402bb0:	b	402bc8 <add_mounts+0x220>
  402bb4:	ldur	w0, [x29, #-76]
  402bb8:	bl	401990 <abs@plt>
  402bbc:	mov	w8, wzr
  402bc0:	subs	w8, w8, w0, uxtb
  402bc4:	str	w8, [sp, #12]
  402bc8:	ldr	w8, [sp, #12]
  402bcc:	stur	w8, [x29, #-84]
  402bd0:	stur	wzr, [x29, #-4]
  402bd4:	mov	w8, #0x1                   	// #1
  402bd8:	str	w8, [sp, #88]
  402bdc:	b	402dd0 <add_mounts+0x428>
  402be0:	ldur	w8, [x29, #-20]
  402be4:	cmp	w8, #0x0
  402be8:	cset	w8, ge  // ge = tcont
  402bec:	tbnz	w8, #0, 402c7c <add_mounts+0x2d4>
  402bf0:	mov	w8, #0x3                   	// #3
  402bf4:	str	w8, [sp, #84]
  402bf8:	ldur	w8, [x29, #-20]
  402bfc:	str	w8, [sp, #80]
  402c00:	str	wzr, [sp, #76]
  402c04:	ldr	w0, [sp, #76]
  402c08:	bl	401970 <log_get_max_level_realm@plt>
  402c0c:	ldr	w8, [sp, #84]
  402c10:	and	w8, w8, #0x7
  402c14:	cmp	w0, w8
  402c18:	b.lt	402c4c <add_mounts+0x2a4>  // b.tstop
  402c1c:	ldr	w8, [sp, #76]
  402c20:	ldr	w9, [sp, #84]
  402c24:	orr	w0, w9, w8, lsl #10
  402c28:	ldr	w1, [sp, #80]
  402c2c:	ldr	x2, [sp, #32]
  402c30:	mov	w3, #0x307                 	// #775
  402c34:	ldr	x4, [sp, #24]
  402c38:	adrp	x5, 407000 <add_automount+0x640>
  402c3c:	add	x5, x5, #0xda1
  402c40:	bl	401980 <log_internal_realm@plt>
  402c44:	str	w0, [sp, #8]
  402c48:	b	402c60 <add_mounts+0x2b8>
  402c4c:	ldr	w0, [sp, #80]
  402c50:	bl	401990 <abs@plt>
  402c54:	mov	w8, wzr
  402c58:	subs	w8, w8, w0, uxtb
  402c5c:	str	w8, [sp, #8]
  402c60:	ldr	w8, [sp, #8]
  402c64:	str	w8, [sp, #72]
  402c68:	ldr	w8, [sp, #72]
  402c6c:	stur	w8, [x29, #-4]
  402c70:	mov	w8, #0x1                   	// #1
  402c74:	str	w8, [sp, #88]
  402c78:	b	402dd0 <add_mounts+0x428>
  402c7c:	ldur	x0, [x29, #-64]
  402c80:	sub	x1, x29, #0x44
  402c84:	sub	x2, x29, #0x10
  402c88:	bl	401aa0 <device_path_parse_major_minor@plt>
  402c8c:	stur	w0, [x29, #-20]
  402c90:	ldur	w8, [x29, #-20]
  402c94:	cmp	w8, #0x0
  402c98:	cset	w8, ge  // ge = tcont
  402c9c:	tbnz	w8, #0, 402d2c <add_mounts+0x384>
  402ca0:	mov	w8, #0x3                   	// #3
  402ca4:	str	w8, [sp, #68]
  402ca8:	ldur	w8, [x29, #-20]
  402cac:	str	w8, [sp, #64]
  402cb0:	str	wzr, [sp, #60]
  402cb4:	ldr	w0, [sp, #60]
  402cb8:	bl	401970 <log_get_max_level_realm@plt>
  402cbc:	ldr	w8, [sp, #68]
  402cc0:	and	w8, w8, #0x7
  402cc4:	cmp	w0, w8
  402cc8:	b.lt	402cfc <add_mounts+0x354>  // b.tstop
  402ccc:	ldr	w8, [sp, #60]
  402cd0:	ldr	w9, [sp, #68]
  402cd4:	orr	w0, w9, w8, lsl #10
  402cd8:	ldr	w1, [sp, #64]
  402cdc:	ldr	x2, [sp, #32]
  402ce0:	mov	w3, #0x30b                 	// #779
  402ce4:	ldr	x4, [sp, #24]
  402ce8:	adrp	x5, 407000 <add_automount+0x640>
  402cec:	add	x5, x5, #0xdd7
  402cf0:	bl	401980 <log_internal_realm@plt>
  402cf4:	str	w0, [sp, #4]
  402cf8:	b	402d10 <add_mounts+0x368>
  402cfc:	ldr	w0, [sp, #64]
  402d00:	bl	401990 <abs@plt>
  402d04:	mov	w8, wzr
  402d08:	subs	w8, w8, w0, uxtb
  402d0c:	str	w8, [sp, #4]
  402d10:	ldr	w8, [sp, #4]
  402d14:	str	w8, [sp, #56]
  402d18:	ldr	w8, [sp, #56]
  402d1c:	stur	w8, [x29, #-4]
  402d20:	mov	w8, #0x1                   	// #1
  402d24:	str	w8, [sp, #88]
  402d28:	b	402dd0 <add_mounts+0x428>
  402d2c:	ldur	w8, [x29, #-68]
  402d30:	and	w8, w8, #0xf000
  402d34:	cmp	w8, #0x6, lsl #12
  402d38:	b.eq	402dcc <add_mounts+0x424>  // b.none
  402d3c:	mov	w8, #0x3                   	// #3
  402d40:	str	w8, [sp, #52]
  402d44:	mov	w8, #0xf                   	// #15
  402d48:	movk	w8, #0x4000, lsl #16
  402d4c:	str	w8, [sp, #48]
  402d50:	str	wzr, [sp, #44]
  402d54:	ldr	w0, [sp, #44]
  402d58:	bl	401970 <log_get_max_level_realm@plt>
  402d5c:	ldr	w8, [sp, #52]
  402d60:	and	w8, w8, #0x7
  402d64:	cmp	w0, w8
  402d68:	b.lt	402d9c <add_mounts+0x3f4>  // b.tstop
  402d6c:	ldr	w8, [sp, #44]
  402d70:	ldr	w9, [sp, #52]
  402d74:	orr	w0, w9, w8, lsl #10
  402d78:	ldr	w1, [sp, #48]
  402d7c:	ldr	x2, [sp, #32]
  402d80:	mov	w3, #0x30d                 	// #781
  402d84:	ldr	x4, [sp, #24]
  402d88:	adrp	x5, 407000 <add_automount+0x640>
  402d8c:	add	x5, x5, #0xe03
  402d90:	bl	401980 <log_internal_realm@plt>
  402d94:	str	w0, [sp]
  402d98:	b	402db0 <add_mounts+0x408>
  402d9c:	ldr	w0, [sp, #48]
  402da0:	bl	401990 <abs@plt>
  402da4:	mov	w8, wzr
  402da8:	subs	w8, w8, w0, uxtb
  402dac:	str	w8, [sp]
  402db0:	ldr	w8, [sp]
  402db4:	str	w8, [sp, #40]
  402db8:	ldr	w8, [sp, #40]
  402dbc:	stur	w8, [x29, #-4]
  402dc0:	mov	w8, #0x1                   	// #1
  402dc4:	str	w8, [sp, #88]
  402dc8:	b	402dd0 <add_mounts+0x428>
  402dcc:	str	wzr, [sp, #88]
  402dd0:	sub	x0, x29, #0x40
  402dd4:	bl	40437c <freep>
  402dd8:	ldr	w8, [sp, #88]
  402ddc:	cbz	w8, 402de8 <add_mounts+0x440>
  402de0:	b	402de4 <add_mounts+0x43c>
  402de4:	b	402df4 <add_mounts+0x44c>
  402de8:	ldur	x0, [x29, #-16]
  402dec:	bl	4045a4 <enumerate_partitions>
  402df0:	stur	w0, [x29, #-4]
  402df4:	ldur	w0, [x29, #-4]
  402df8:	ldp	x29, x30, [sp, #176]
  402dfc:	add	sp, sp, #0xc0
  402e00:	ret

0000000000402e04 <proc_cmdline_value_missing>:
  402e04:	sub	sp, sp, #0x50
  402e08:	stp	x29, x30, [sp, #64]
  402e0c:	add	x29, sp, #0x40
  402e10:	adrp	x8, 407000 <add_automount+0x640>
  402e14:	add	x8, x8, #0x587
  402e18:	add	x2, x8, #0x3
  402e1c:	stur	x0, [x29, #-16]
  402e20:	stur	x1, [x29, #-24]
  402e24:	ldur	x8, [x29, #-24]
  402e28:	str	x2, [sp, #16]
  402e2c:	cbnz	x8, 402ebc <proc_cmdline_value_missing+0xb8>
  402e30:	mov	w8, #0x4                   	// #4
  402e34:	stur	w8, [x29, #-28]
  402e38:	str	wzr, [sp, #32]
  402e3c:	str	wzr, [sp, #28]
  402e40:	ldr	w0, [sp, #28]
  402e44:	bl	401970 <log_get_max_level_realm@plt>
  402e48:	ldur	w8, [x29, #-28]
  402e4c:	and	w8, w8, #0x7
  402e50:	cmp	w0, w8
  402e54:	b.lt	402e90 <proc_cmdline_value_missing+0x8c>  // b.tstop
  402e58:	ldr	w8, [sp, #28]
  402e5c:	ldur	w9, [x29, #-28]
  402e60:	orr	w0, w9, w8, lsl #10
  402e64:	ldr	w1, [sp, #32]
  402e68:	ldur	x6, [x29, #-16]
  402e6c:	ldr	x2, [sp, #16]
  402e70:	mov	w3, #0x21                  	// #33
  402e74:	adrp	x4, 407000 <add_automount+0x640>
  402e78:	add	x4, x4, #0x5a3
  402e7c:	adrp	x5, 407000 <add_automount+0x640>
  402e80:	add	x5, x5, #0x5be
  402e84:	bl	401980 <log_internal_realm@plt>
  402e88:	str	w0, [sp, #12]
  402e8c:	b	402ea4 <proc_cmdline_value_missing+0xa0>
  402e90:	ldr	w0, [sp, #32]
  402e94:	bl	401990 <abs@plt>
  402e98:	mov	w8, wzr
  402e9c:	subs	w8, w8, w0, uxtb
  402ea0:	str	w8, [sp, #12]
  402ea4:	ldr	w8, [sp, #12]
  402ea8:	str	w8, [sp, #24]
  402eac:	mov	w8, #0x1                   	// #1
  402eb0:	and	w8, w8, #0x1
  402eb4:	sturb	w8, [x29, #-1]
  402eb8:	b	402ec8 <proc_cmdline_value_missing+0xc4>
  402ebc:	mov	w8, wzr
  402ec0:	and	w8, w8, #0x1
  402ec4:	sturb	w8, [x29, #-1]
  402ec8:	ldurb	w8, [x29, #-1]
  402ecc:	and	w0, w8, #0x1
  402ed0:	ldp	x29, x30, [sp, #64]
  402ed4:	add	sp, sp, #0x50
  402ed8:	ret

0000000000402edc <add_root_cryptsetup>:
  402edc:	stp	x29, x30, [sp, #-16]!
  402ee0:	mov	x29, sp
  402ee4:	adrp	x0, 407000 <add_automount+0x640>
  402ee8:	add	x0, x0, #0x56a
  402eec:	adrp	x1, 407000 <add_automount+0x640>
  402ef0:	add	x1, x1, #0x6d5
  402ef4:	mov	x8, xzr
  402ef8:	mov	w9, #0x1                   	// #1
  402efc:	and	w2, w9, #0x1
  402f00:	mov	w9, wzr
  402f04:	and	w3, w9, #0x1
  402f08:	mov	x4, x8
  402f0c:	bl	4035d8 <add_cryptsetup>
  402f10:	ldp	x29, x30, [sp], #16
  402f14:	ret

0000000000402f18 <add_mount>:
  402f18:	sub	sp, sp, #0x130
  402f1c:	stp	x29, x30, [sp, #272]
  402f20:	str	x28, [sp, #288]
  402f24:	add	x29, sp, #0x110
  402f28:	mov	x8, xzr
  402f2c:	adrp	x9, 407000 <add_automount+0x640>
  402f30:	add	x9, x9, #0x3a8
  402f34:	add	x9, x9, #0x3
  402f38:	adrp	x10, 407000 <add_automount+0x640>
  402f3c:	add	x10, x10, #0xba5
  402f40:	adrp	x11, 420000 <arg_enabled>
  402f44:	add	x11, x11, #0x10
  402f48:	mov	w12, #0x1                   	// #1
  402f4c:	adrp	x13, 407000 <add_automount+0x640>
  402f50:	add	x13, x13, #0xb1c
  402f54:	stur	x0, [x29, #-16]
  402f58:	stur	x1, [x29, #-24]
  402f5c:	stur	x2, [x29, #-32]
  402f60:	stur	x3, [x29, #-40]
  402f64:	and	w12, w4, w12
  402f68:	sturb	w12, [x29, #-41]
  402f6c:	stur	x5, [x29, #-56]
  402f70:	stur	x6, [x29, #-64]
  402f74:	stur	x7, [x29, #-72]
  402f78:	stur	x8, [x29, #-80]
  402f7c:	stur	x8, [x29, #-88]
  402f80:	stur	x8, [x29, #-96]
  402f84:	stur	x8, [x29, #-104]
  402f88:	str	x9, [sp, #88]
  402f8c:	str	x10, [sp, #80]
  402f90:	str	x11, [sp, #72]
  402f94:	str	x13, [sp, #64]
  402f98:	ldur	x8, [x29, #-16]
  402f9c:	cmp	x8, #0x0
  402fa0:	cset	w9, ne  // ne = any
  402fa4:	mov	w10, #0x1                   	// #1
  402fa8:	eor	w9, w9, #0x1
  402fac:	eor	w9, w9, w10
  402fb0:	eor	w9, w9, w10
  402fb4:	and	w9, w9, #0x1
  402fb8:	mov	w0, w9
  402fbc:	sxtw	x8, w0
  402fc0:	cbz	x8, 402fe4 <add_mount+0xcc>
  402fc4:	mov	w8, wzr
  402fc8:	mov	w0, w8
  402fcc:	adrp	x1, 407000 <add_automount+0x640>
  402fd0:	add	x1, x1, #0x6ed
  402fd4:	ldr	x2, [sp, #88]
  402fd8:	mov	w3, #0xa0                  	// #160
  402fdc:	ldr	x4, [sp, #64]
  402fe0:	bl	4019e0 <log_assert_failed_realm@plt>
  402fe4:	ldur	x8, [x29, #-24]
  402fe8:	cmp	x8, #0x0
  402fec:	cset	w9, ne  // ne = any
  402ff0:	mov	w10, #0x1                   	// #1
  402ff4:	eor	w9, w9, #0x1
  402ff8:	eor	w9, w9, w10
  402ffc:	eor	w9, w9, w10
  403000:	and	w9, w9, #0x1
  403004:	mov	w0, w9
  403008:	sxtw	x8, w0
  40300c:	cbz	x8, 403030 <add_mount+0x118>
  403010:	mov	w8, wzr
  403014:	mov	w0, w8
  403018:	adrp	x1, 407000 <add_automount+0x640>
  40301c:	add	x1, x1, #0x736
  403020:	ldr	x2, [sp, #88]
  403024:	mov	w3, #0xa1                  	// #161
  403028:	ldr	x4, [sp, #64]
  40302c:	bl	4019e0 <log_assert_failed_realm@plt>
  403030:	ldur	x8, [x29, #-32]
  403034:	cmp	x8, #0x0
  403038:	cset	w9, ne  // ne = any
  40303c:	mov	w10, #0x1                   	// #1
  403040:	eor	w9, w9, #0x1
  403044:	eor	w9, w9, w10
  403048:	eor	w9, w9, w10
  40304c:	and	w9, w9, #0x1
  403050:	mov	w0, w9
  403054:	sxtw	x8, w0
  403058:	cbz	x8, 40307c <add_mount+0x164>
  40305c:	mov	w8, wzr
  403060:	mov	w0, w8
  403064:	adrp	x1, 407000 <add_automount+0x640>
  403068:	add	x1, x1, #0xb93
  40306c:	ldr	x2, [sp, #88]
  403070:	mov	w3, #0xa2                  	// #162
  403074:	ldr	x4, [sp, #64]
  403078:	bl	4019e0 <log_assert_failed_realm@plt>
  40307c:	ldur	x8, [x29, #-64]
  403080:	cmp	x8, #0x0
  403084:	cset	w9, ne  // ne = any
  403088:	mov	w10, #0x1                   	// #1
  40308c:	eor	w9, w9, #0x1
  403090:	eor	w9, w9, w10
  403094:	eor	w9, w9, w10
  403098:	and	w9, w9, #0x1
  40309c:	mov	w0, w9
  4030a0:	sxtw	x8, w0
  4030a4:	cbz	x8, 4030c8 <add_mount+0x1b0>
  4030a8:	mov	w8, wzr
  4030ac:	mov	w0, w8
  4030b0:	adrp	x1, 407000 <add_automount+0x640>
  4030b4:	add	x1, x1, #0xb99
  4030b8:	ldr	x2, [sp, #88]
  4030bc:	mov	w3, #0xa3                  	// #163
  4030c0:	ldr	x4, [sp, #64]
  4030c4:	bl	4019e0 <log_assert_failed_realm@plt>
  4030c8:	mov	w8, #0x7                   	// #7
  4030cc:	stur	w8, [x29, #-112]
  4030d0:	stur	wzr, [x29, #-116]
  4030d4:	stur	wzr, [x29, #-120]
  4030d8:	ldur	w0, [x29, #-120]
  4030dc:	bl	401970 <log_get_max_level_realm@plt>
  4030e0:	ldur	w8, [x29, #-112]
  4030e4:	and	w8, w8, #0x7
  4030e8:	cmp	w0, w8
  4030ec:	b.lt	403168 <add_mount+0x250>  // b.tstop
  4030f0:	ldur	w8, [x29, #-120]
  4030f4:	ldur	w9, [x29, #-112]
  4030f8:	orr	w0, w9, w8, lsl #10
  4030fc:	ldur	w1, [x29, #-116]
  403100:	ldur	x6, [x29, #-32]
  403104:	ldur	x7, [x29, #-24]
  403108:	ldur	x10, [x29, #-40]
  40310c:	str	w0, [sp, #60]
  403110:	mov	x0, x10
  403114:	str	w1, [sp, #56]
  403118:	str	x6, [sp, #48]
  40311c:	str	x7, [sp, #40]
  403120:	bl	4044e4 <strna>
  403124:	ldr	w8, [sp, #60]
  403128:	str	x0, [sp, #32]
  40312c:	mov	w0, w8
  403130:	ldr	w1, [sp, #56]
  403134:	ldr	x2, [sp, #88]
  403138:	mov	w3, #0xa5                  	// #165
  40313c:	ldr	x4, [sp, #80]
  403140:	adrp	x5, 407000 <add_automount+0x640>
  403144:	add	x5, x5, #0xbaf
  403148:	ldr	x6, [sp, #48]
  40314c:	ldr	x7, [sp, #40]
  403150:	mov	x10, sp
  403154:	ldr	x11, [sp, #32]
  403158:	str	x11, [x10]
  40315c:	bl	401980 <log_internal_realm@plt>
  403160:	str	w0, [sp, #28]
  403164:	b	40317c <add_mount+0x264>
  403168:	ldur	w0, [x29, #-116]
  40316c:	bl	401990 <abs@plt>
  403170:	mov	w8, wzr
  403174:	subs	w8, w8, w0, uxtb
  403178:	str	w8, [sp, #28]
  40317c:	ldr	w8, [sp, #28]
  403180:	stur	w8, [x29, #-124]
  403184:	ldur	x0, [x29, #-40]
  403188:	adrp	x1, 407000 <add_automount+0x640>
  40318c:	add	x1, x1, #0xbc0
  403190:	bl	404520 <streq_ptr>
  403194:	tbnz	w0, #0, 40319c <add_mount+0x284>
  403198:	b	4031f4 <add_mount+0x2dc>
  40319c:	ldur	x0, [x29, #-16]
  4031a0:	ldur	x1, [x29, #-24]
  4031a4:	ldurb	w8, [x29, #-41]
  4031a8:	mov	w9, #0x1                   	// #1
  4031ac:	and	w2, w8, #0x1
  4031b0:	and	w3, w9, #0x1
  4031b4:	sub	x4, x29, #0x58
  4031b8:	bl	4035d8 <add_cryptsetup>
  4031bc:	stur	w0, [x29, #-108]
  4031c0:	ldur	w8, [x29, #-108]
  4031c4:	cmp	w8, #0x0
  4031c8:	cset	w8, ge  // ge = tcont
  4031cc:	tbnz	w8, #0, 4031e4 <add_mount+0x2cc>
  4031d0:	ldur	w8, [x29, #-108]
  4031d4:	stur	w8, [x29, #-4]
  4031d8:	mov	w8, #0x1                   	// #1
  4031dc:	stur	w8, [x29, #-128]
  4031e0:	b	4035a4 <add_mount+0x68c>
  4031e4:	ldur	x8, [x29, #-88]
  4031e8:	stur	x8, [x29, #-24]
  4031ec:	mov	x8, xzr
  4031f0:	stur	x8, [x29, #-40]
  4031f4:	ldur	x0, [x29, #-32]
  4031f8:	adrp	x1, 407000 <add_automount+0x640>
  4031fc:	add	x1, x1, #0xbcc
  403200:	sub	x2, x29, #0x50
  403204:	bl	401ab0 <unit_name_from_path@plt>
  403208:	stur	w0, [x29, #-108]
  40320c:	ldur	w8, [x29, #-108]
  403210:	cmp	w8, #0x0
  403214:	cset	w8, ge  // ge = tcont
  403218:	tbnz	w8, #0, 4032a8 <add_mount+0x390>
  40321c:	mov	w8, #0x3                   	// #3
  403220:	stur	w8, [x29, #-132]
  403224:	ldur	w8, [x29, #-108]
  403228:	str	w8, [sp, #136]
  40322c:	str	wzr, [sp, #132]
  403230:	ldr	w0, [sp, #132]
  403234:	bl	401970 <log_get_max_level_realm@plt>
  403238:	ldur	w8, [x29, #-132]
  40323c:	and	w8, w8, #0x7
  403240:	cmp	w0, w8
  403244:	b.lt	403278 <add_mount+0x360>  // b.tstop
  403248:	ldr	w8, [sp, #132]
  40324c:	ldur	w9, [x29, #-132]
  403250:	orr	w0, w9, w8, lsl #10
  403254:	ldr	w1, [sp, #136]
  403258:	ldr	x2, [sp, #88]
  40325c:	mov	w3, #0xb3                  	// #179
  403260:	ldr	x4, [sp, #80]
  403264:	adrp	x5, 407000 <add_automount+0x640>
  403268:	add	x5, x5, #0x752
  40326c:	bl	401980 <log_internal_realm@plt>
  403270:	str	w0, [sp, #24]
  403274:	b	40328c <add_mount+0x374>
  403278:	ldr	w0, [sp, #136]
  40327c:	bl	401990 <abs@plt>
  403280:	mov	w8, wzr
  403284:	subs	w8, w8, w0, uxtb
  403288:	str	w8, [sp, #24]
  40328c:	ldr	w8, [sp, #24]
  403290:	str	w8, [sp, #128]
  403294:	ldr	w8, [sp, #128]
  403298:	stur	w8, [x29, #-4]
  40329c:	mov	w8, #0x1                   	// #1
  4032a0:	stur	w8, [x29, #-128]
  4032a4:	b	4035a4 <add_mount+0x68c>
  4032a8:	ldr	x8, [sp, #72]
  4032ac:	ldr	x0, [x8]
  4032b0:	bl	404558 <empty_to_root>
  4032b4:	ldur	x1, [x29, #-80]
  4032b8:	mov	x8, #0xffffffffffffffff    	// #-1
  4032bc:	mov	x2, x8
  4032c0:	bl	401ac0 <path_join_internal@plt>
  4032c4:	stur	x0, [x29, #-96]
  4032c8:	ldur	x8, [x29, #-96]
  4032cc:	cbnz	x8, 4032f8 <add_mount+0x3e0>
  4032d0:	mov	w8, wzr
  4032d4:	mov	w0, w8
  4032d8:	ldr	x1, [sp, #88]
  4032dc:	mov	w2, #0xb7                  	// #183
  4032e0:	ldr	x3, [sp, #80]
  4032e4:	bl	401ad0 <log_oom_internal@plt>
  4032e8:	stur	w0, [x29, #-4]
  4032ec:	mov	w8, #0x1                   	// #1
  4032f0:	stur	w8, [x29, #-128]
  4032f4:	b	4035a4 <add_mount+0x68c>
  4032f8:	ldur	x0, [x29, #-96]
  4032fc:	adrp	x1, 407000 <add_automount+0x640>
  403300:	add	x1, x1, #0x7d9
  403304:	bl	401ae0 <fopen64@plt>
  403308:	stur	x0, [x29, #-104]
  40330c:	ldur	x8, [x29, #-104]
  403310:	cbnz	x8, 4033a8 <add_mount+0x490>
  403314:	mov	w8, #0x3                   	// #3
  403318:	str	w8, [sp, #124]
  40331c:	bl	401af0 <__errno_location@plt>
  403320:	ldr	w8, [x0]
  403324:	str	w8, [sp, #120]
  403328:	str	wzr, [sp, #116]
  40332c:	ldr	w0, [sp, #116]
  403330:	bl	401970 <log_get_max_level_realm@plt>
  403334:	ldr	w8, [sp, #124]
  403338:	and	w8, w8, #0x7
  40333c:	cmp	w0, w8
  403340:	b.lt	403378 <add_mount+0x460>  // b.tstop
  403344:	ldr	w8, [sp, #116]
  403348:	ldr	w9, [sp, #124]
  40334c:	orr	w0, w9, w8, lsl #10
  403350:	ldr	w1, [sp, #120]
  403354:	ldur	x6, [x29, #-80]
  403358:	ldr	x2, [sp, #88]
  40335c:	mov	w3, #0xbb                  	// #187
  403360:	ldr	x4, [sp, #80]
  403364:	adrp	x5, 407000 <add_automount+0x640>
  403368:	add	x5, x5, #0x7dd
  40336c:	bl	401980 <log_internal_realm@plt>
  403370:	str	w0, [sp, #20]
  403374:	b	40338c <add_mount+0x474>
  403378:	ldr	w0, [sp, #120]
  40337c:	bl	401990 <abs@plt>
  403380:	mov	w8, wzr
  403384:	subs	w8, w8, w0, uxtb
  403388:	str	w8, [sp, #20]
  40338c:	ldr	w8, [sp, #20]
  403390:	str	w8, [sp, #112]
  403394:	ldr	w8, [sp, #112]
  403398:	stur	w8, [x29, #-4]
  40339c:	mov	w8, #0x1                   	// #1
  4033a0:	stur	w8, [x29, #-128]
  4033a4:	b	4035a4 <add_mount+0x68c>
  4033a8:	ldur	x0, [x29, #-104]
  4033ac:	ldur	x2, [x29, #-64]
  4033b0:	adrp	x1, 407000 <add_automount+0x640>
  4033b4:	add	x1, x1, #0xbd3
  4033b8:	bl	401b00 <fprintf@plt>
  4033bc:	ldur	x8, [x29, #-72]
  4033c0:	cbz	x8, 4033d8 <add_mount+0x4c0>
  4033c4:	ldur	x0, [x29, #-104]
  4033c8:	ldur	x2, [x29, #-72]
  4033cc:	adrp	x1, 407000 <add_automount+0x640>
  4033d0:	add	x1, x1, #0xc53
  4033d4:	bl	401b00 <fprintf@plt>
  4033d8:	ldur	x0, [x29, #-104]
  4033dc:	ldr	x8, [sp, #72]
  4033e0:	ldr	x1, [x8]
  4033e4:	ldur	x2, [x29, #-24]
  4033e8:	ldur	x3, [x29, #-32]
  4033ec:	ldur	x4, [x29, #-40]
  4033f0:	bl	401b10 <generator_write_fsck_deps@plt>
  4033f4:	stur	w0, [x29, #-108]
  4033f8:	ldur	w9, [x29, #-108]
  4033fc:	cmp	w9, #0x0
  403400:	cset	w9, ge  // ge = tcont
  403404:	tbnz	w9, #0, 40341c <add_mount+0x504>
  403408:	ldur	w8, [x29, #-108]
  40340c:	stur	w8, [x29, #-4]
  403410:	mov	w8, #0x1                   	// #1
  403414:	stur	w8, [x29, #-128]
  403418:	b	4035a4 <add_mount+0x68c>
  40341c:	ldur	x0, [x29, #-104]
  403420:	ldur	x2, [x29, #-24]
  403424:	ldur	x3, [x29, #-32]
  403428:	adrp	x1, 407000 <add_automount+0x640>
  40342c:	add	x1, x1, #0xc5e
  403430:	bl	401b00 <fprintf@plt>
  403434:	ldur	x8, [x29, #-40]
  403438:	cbz	x8, 403450 <add_mount+0x538>
  40343c:	ldur	x0, [x29, #-104]
  403440:	ldur	x2, [x29, #-40]
  403444:	adrp	x1, 407000 <add_automount+0x640>
  403448:	add	x1, x1, #0xc79
  40344c:	bl	401b00 <fprintf@plt>
  403450:	ldur	x8, [x29, #-56]
  403454:	cbz	x8, 40348c <add_mount+0x574>
  403458:	ldur	x0, [x29, #-104]
  40345c:	ldur	x2, [x29, #-56]
  403460:	ldurb	w8, [x29, #-41]
  403464:	adrp	x9, 407000 <add_automount+0x640>
  403468:	add	x9, x9, #0x584
  40346c:	adrp	x10, 407000 <add_automount+0x640>
  403470:	add	x10, x10, #0x581
  403474:	tst	w8, #0x1
  403478:	csel	x3, x10, x9, ne  // ne = any
  40347c:	adrp	x1, 407000 <add_automount+0x640>
  403480:	add	x1, x1, #0xc82
  403484:	bl	401b00 <fprintf@plt>
  403488:	b	4034b8 <add_mount+0x5a0>
  40348c:	ldur	x0, [x29, #-104]
  403490:	ldurb	w8, [x29, #-41]
  403494:	adrp	x9, 407000 <add_automount+0x640>
  403498:	add	x9, x9, #0x584
  40349c:	adrp	x10, 407000 <add_automount+0x640>
  4034a0:	add	x10, x10, #0x581
  4034a4:	tst	w8, #0x1
  4034a8:	csel	x2, x10, x9, ne  // ne = any
  4034ac:	adrp	x1, 407000 <add_automount+0x640>
  4034b0:	add	x1, x1, #0xc91
  4034b4:	bl	401b00 <fprintf@plt>
  4034b8:	ldur	x0, [x29, #-104]
  4034bc:	bl	401b20 <fflush_and_check@plt>
  4034c0:	stur	w0, [x29, #-108]
  4034c4:	ldur	w8, [x29, #-108]
  4034c8:	cmp	w8, #0x0
  4034cc:	cset	w8, ge  // ge = tcont
  4034d0:	tbnz	w8, #0, 403564 <add_mount+0x64c>
  4034d4:	mov	w8, #0x3                   	// #3
  4034d8:	str	w8, [sp, #108]
  4034dc:	ldur	w8, [x29, #-108]
  4034e0:	str	w8, [sp, #104]
  4034e4:	str	wzr, [sp, #100]
  4034e8:	ldr	w0, [sp, #100]
  4034ec:	bl	401970 <log_get_max_level_realm@plt>
  4034f0:	ldr	w8, [sp, #108]
  4034f4:	and	w8, w8, #0x7
  4034f8:	cmp	w0, w8
  4034fc:	b.lt	403534 <add_mount+0x61c>  // b.tstop
  403500:	ldr	w8, [sp, #100]
  403504:	ldr	w9, [sp, #108]
  403508:	orr	w0, w9, w8, lsl #10
  40350c:	ldr	w1, [sp, #104]
  403510:	ldur	x6, [x29, #-96]
  403514:	ldr	x2, [sp, #88]
  403518:	mov	w3, #0xdc                  	// #220
  40351c:	ldr	x4, [sp, #80]
  403520:	adrp	x5, 407000 <add_automount+0x640>
  403524:	add	x5, x5, #0xc9d
  403528:	bl	401980 <log_internal_realm@plt>
  40352c:	str	w0, [sp, #16]
  403530:	b	403548 <add_mount+0x630>
  403534:	ldr	w0, [sp, #104]
  403538:	bl	401990 <abs@plt>
  40353c:	mov	w8, wzr
  403540:	subs	w8, w8, w0, uxtb
  403544:	str	w8, [sp, #16]
  403548:	ldr	w8, [sp, #16]
  40354c:	str	w8, [sp, #96]
  403550:	ldr	w8, [sp, #96]
  403554:	stur	w8, [x29, #-4]
  403558:	mov	w8, #0x1                   	// #1
  40355c:	stur	w8, [x29, #-128]
  403560:	b	4035a4 <add_mount+0x68c>
  403564:	ldur	x8, [x29, #-72]
  403568:	cbz	x8, 403598 <add_mount+0x680>
  40356c:	ldr	x8, [sp, #72]
  403570:	ldr	x0, [x8]
  403574:	ldur	x1, [x29, #-72]
  403578:	ldur	x3, [x29, #-80]
  40357c:	adrp	x2, 407000 <add_automount+0x640>
  403580:	add	x2, x2, #0xa51
  403584:	bl	401b30 <generator_add_symlink@plt>
  403588:	stur	w0, [x29, #-4]
  40358c:	mov	w9, #0x1                   	// #1
  403590:	stur	w9, [x29, #-128]
  403594:	b	4035a4 <add_mount+0x68c>
  403598:	stur	wzr, [x29, #-4]
  40359c:	mov	w8, #0x1                   	// #1
  4035a0:	stur	w8, [x29, #-128]
  4035a4:	sub	x0, x29, #0x68
  4035a8:	bl	4043a4 <fclosep>
  4035ac:	sub	x0, x29, #0x60
  4035b0:	bl	40437c <freep>
  4035b4:	sub	x0, x29, #0x58
  4035b8:	bl	40437c <freep>
  4035bc:	sub	x0, x29, #0x50
  4035c0:	bl	40437c <freep>
  4035c4:	ldur	w0, [x29, #-4]
  4035c8:	ldr	x28, [sp, #288]
  4035cc:	ldp	x29, x30, [sp, #272]
  4035d0:	add	sp, sp, #0x130
  4035d4:	ret

00000000004035d8 <add_cryptsetup>:
  4035d8:	stp	x29, x30, [sp, #-32]!
  4035dc:	stp	x28, x19, [sp, #16]
  4035e0:	mov	x29, sp
  4035e4:	sub	sp, sp, #0x220
  4035e8:	mov	x19, sp
  4035ec:	mov	x8, xzr
  4035f0:	adrp	x9, 407000 <add_automount+0x640>
  4035f4:	add	x9, x9, #0x3a8
  4035f8:	add	x9, x9, #0x3
  4035fc:	adrp	x10, 407000 <add_automount+0x640>
  403600:	add	x10, x10, #0x743
  403604:	mov	w11, #0x1                   	// #1
  403608:	adrp	x12, 420000 <arg_enabled>
  40360c:	add	x12, x12, #0x10
  403610:	adrp	x13, 407000 <add_automount+0x640>
  403614:	add	x13, x13, #0x7ba
  403618:	adrp	x14, 407000 <add_automount+0x640>
  40361c:	add	x14, x14, #0x6f0
  403620:	adrp	x15, 407000 <add_automount+0x640>
  403624:	add	x15, x15, #0x78f
  403628:	stur	x0, [x29, #-16]
  40362c:	stur	x1, [x29, #-24]
  403630:	and	w16, w2, w11
  403634:	sturb	w16, [x29, #-25]
  403638:	and	w11, w3, w11
  40363c:	sturb	w11, [x29, #-26]
  403640:	stur	x4, [x29, #-40]
  403644:	stur	x8, [x29, #-48]
  403648:	stur	x8, [x29, #-56]
  40364c:	stur	x8, [x29, #-64]
  403650:	stur	x8, [x29, #-72]
  403654:	stur	x8, [x29, #-80]
  403658:	stur	x8, [x29, #-88]
  40365c:	str	x9, [x19, #96]
  403660:	str	x10, [x19, #88]
  403664:	str	x12, [x19, #80]
  403668:	str	x13, [x19, #72]
  40366c:	str	x14, [x19, #64]
  403670:	str	x15, [x19, #56]
  403674:	ldur	x8, [x29, #-16]
  403678:	cmp	x8, #0x0
  40367c:	cset	w9, ne  // ne = any
  403680:	mov	w10, #0x1                   	// #1
  403684:	eor	w9, w9, #0x1
  403688:	eor	w9, w9, w10
  40368c:	eor	w9, w9, w10
  403690:	and	w9, w9, #0x1
  403694:	mov	w0, w9
  403698:	sxtw	x8, w0
  40369c:	cbz	x8, 4036c0 <add_cryptsetup+0xe8>
  4036a0:	mov	w8, wzr
  4036a4:	mov	w0, w8
  4036a8:	adrp	x1, 407000 <add_automount+0x640>
  4036ac:	add	x1, x1, #0x6ed
  4036b0:	ldr	x2, [x19, #96]
  4036b4:	mov	w3, #0x30                  	// #48
  4036b8:	ldr	x4, [x19, #64]
  4036bc:	bl	4019e0 <log_assert_failed_realm@plt>
  4036c0:	ldur	x8, [x29, #-24]
  4036c4:	cmp	x8, #0x0
  4036c8:	cset	w9, ne  // ne = any
  4036cc:	mov	w10, #0x1                   	// #1
  4036d0:	eor	w9, w9, #0x1
  4036d4:	eor	w9, w9, w10
  4036d8:	eor	w9, w9, w10
  4036dc:	and	w9, w9, #0x1
  4036e0:	mov	w0, w9
  4036e4:	sxtw	x8, w0
  4036e8:	cbz	x8, 40370c <add_cryptsetup+0x134>
  4036ec:	mov	w8, wzr
  4036f0:	mov	w0, w8
  4036f4:	adrp	x1, 407000 <add_automount+0x640>
  4036f8:	add	x1, x1, #0x736
  4036fc:	ldr	x2, [x19, #96]
  403700:	mov	w3, #0x31                  	// #49
  403704:	ldr	x4, [x19, #64]
  403708:	bl	4019e0 <log_assert_failed_realm@plt>
  40370c:	ldur	x0, [x29, #-24]
  403710:	adrp	x1, 407000 <add_automount+0x640>
  403714:	add	x1, x1, #0x73b
  403718:	sub	x2, x29, #0x40
  40371c:	bl	401ab0 <unit_name_from_path@plt>
  403720:	stur	w0, [x29, #-100]
  403724:	ldur	w8, [x29, #-100]
  403728:	cmp	w8, #0x0
  40372c:	cset	w8, ge  // ge = tcont
  403730:	tbnz	w8, #0, 4037c0 <add_cryptsetup+0x1e8>
  403734:	mov	w8, #0x3                   	// #3
  403738:	stur	w8, [x29, #-104]
  40373c:	ldur	w8, [x29, #-100]
  403740:	stur	w8, [x29, #-108]
  403744:	stur	wzr, [x29, #-112]
  403748:	ldur	w0, [x29, #-112]
  40374c:	bl	401970 <log_get_max_level_realm@plt>
  403750:	ldur	w8, [x29, #-104]
  403754:	and	w8, w8, #0x7
  403758:	cmp	w0, w8
  40375c:	b.lt	403790 <add_cryptsetup+0x1b8>  // b.tstop
  403760:	ldur	w8, [x29, #-112]
  403764:	ldur	w9, [x29, #-104]
  403768:	orr	w0, w9, w8, lsl #10
  40376c:	ldur	w1, [x29, #-108]
  403770:	ldr	x2, [x19, #96]
  403774:	mov	w3, #0x35                  	// #53
  403778:	ldr	x4, [x19, #88]
  40377c:	adrp	x5, 407000 <add_automount+0x640>
  403780:	add	x5, x5, #0x752
  403784:	bl	401980 <log_internal_realm@plt>
  403788:	str	w0, [x19, #52]
  40378c:	b	4037a4 <add_cryptsetup+0x1cc>
  403790:	ldur	w0, [x29, #-108]
  403794:	bl	401990 <abs@plt>
  403798:	mov	w8, wzr
  40379c:	subs	w8, w8, w0, uxtb
  4037a0:	str	w8, [x19, #52]
  4037a4:	ldr	w8, [x19, #52]
  4037a8:	stur	w8, [x29, #-116]
  4037ac:	ldur	w8, [x29, #-116]
  4037b0:	stur	w8, [x29, #-4]
  4037b4:	mov	w8, #0x1                   	// #1
  4037b8:	stur	w8, [x29, #-120]
  4037bc:	b	404338 <add_cryptsetup+0xd60>
  4037c0:	ldur	x0, [x29, #-16]
  4037c4:	bl	401b40 <unit_name_escape@plt>
  4037c8:	stur	x0, [x29, #-48]
  4037cc:	ldur	x8, [x29, #-48]
  4037d0:	cbnz	x8, 4037fc <add_cryptsetup+0x224>
  4037d4:	mov	w8, wzr
  4037d8:	mov	w0, w8
  4037dc:	ldr	x1, [x19, #96]
  4037e0:	mov	w2, #0x39                  	// #57
  4037e4:	ldr	x3, [x19, #88]
  4037e8:	bl	401ad0 <log_oom_internal@plt>
  4037ec:	stur	w0, [x29, #-4]
  4037f0:	mov	w8, #0x1                   	// #1
  4037f4:	stur	w8, [x29, #-120]
  4037f8:	b	404338 <add_cryptsetup+0xd60>
  4037fc:	ldur	x1, [x29, #-48]
  403800:	adrp	x0, 407000 <add_automount+0x640>
  403804:	add	x0, x0, #0x773
  403808:	adrp	x2, 407000 <add_automount+0x640>
  40380c:	add	x2, x2, #0x786
  403810:	sub	x3, x29, #0x38
  403814:	bl	401b50 <unit_name_build@plt>
  403818:	stur	w0, [x29, #-100]
  40381c:	ldur	w8, [x29, #-100]
  403820:	cmp	w8, #0x0
  403824:	cset	w8, ge  // ge = tcont
  403828:	tbnz	w8, #0, 4038b8 <add_cryptsetup+0x2e0>
  40382c:	mov	w8, #0x3                   	// #3
  403830:	stur	w8, [x29, #-124]
  403834:	ldur	w8, [x29, #-100]
  403838:	stur	w8, [x29, #-128]
  40383c:	stur	wzr, [x29, #-132]
  403840:	ldur	w0, [x29, #-132]
  403844:	bl	401970 <log_get_max_level_realm@plt>
  403848:	ldur	w8, [x29, #-124]
  40384c:	and	w8, w8, #0x7
  403850:	cmp	w0, w8
  403854:	b.lt	403888 <add_cryptsetup+0x2b0>  // b.tstop
  403858:	ldur	w8, [x29, #-132]
  40385c:	ldur	w9, [x29, #-124]
  403860:	orr	w0, w9, w8, lsl #10
  403864:	ldur	w1, [x29, #-128]
  403868:	ldr	x2, [x19, #96]
  40386c:	mov	w3, #0x3d                  	// #61
  403870:	ldr	x4, [x19, #88]
  403874:	adrp	x5, 407000 <add_automount+0x640>
  403878:	add	x5, x5, #0x752
  40387c:	bl	401980 <log_internal_realm@plt>
  403880:	str	w0, [x19, #48]
  403884:	b	40389c <add_cryptsetup+0x2c4>
  403888:	ldur	w0, [x29, #-128]
  40388c:	bl	401990 <abs@plt>
  403890:	mov	w8, wzr
  403894:	subs	w8, w8, w0, uxtb
  403898:	str	w8, [x19, #48]
  40389c:	ldr	w8, [x19, #48]
  4038a0:	stur	w8, [x29, #-136]
  4038a4:	ldur	w8, [x29, #-136]
  4038a8:	stur	w8, [x29, #-4]
  4038ac:	mov	w8, #0x1                   	// #1
  4038b0:	stur	w8, [x29, #-120]
  4038b4:	b	404338 <add_cryptsetup+0xd60>
  4038b8:	ldur	x0, [x29, #-16]
  4038bc:	bl	4043cc <specifier_escape>
  4038c0:	stur	x0, [x29, #-72]
  4038c4:	ldur	x8, [x29, #-72]
  4038c8:	cbnz	x8, 4038f4 <add_cryptsetup+0x31c>
  4038cc:	mov	w8, wzr
  4038d0:	mov	w0, w8
  4038d4:	ldr	x1, [x19, #96]
  4038d8:	mov	w2, #0x41                  	// #65
  4038dc:	ldr	x3, [x19, #88]
  4038e0:	bl	401ad0 <log_oom_internal@plt>
  4038e4:	stur	w0, [x29, #-4]
  4038e8:	mov	w8, #0x1                   	// #1
  4038ec:	stur	w8, [x29, #-120]
  4038f0:	b	404338 <add_cryptsetup+0xd60>
  4038f4:	ldur	x0, [x29, #-24]
  4038f8:	bl	4043cc <specifier_escape>
  4038fc:	stur	x0, [x29, #-80]
  403900:	ldur	x8, [x29, #-80]
  403904:	cbnz	x8, 403930 <add_cryptsetup+0x358>
  403908:	mov	w8, wzr
  40390c:	mov	w0, w8
  403910:	ldr	x1, [x19, #96]
  403914:	mov	w2, #0x45                  	// #69
  403918:	ldr	x3, [x19, #88]
  40391c:	bl	401ad0 <log_oom_internal@plt>
  403920:	stur	w0, [x29, #-4]
  403924:	mov	w8, #0x1                   	// #1
  403928:	stur	w8, [x29, #-120]
  40392c:	b	404338 <add_cryptsetup+0xd60>
  403930:	ldur	x8, [x29, #-56]
  403934:	stur	x8, [x29, #-144]
  403938:	ldr	x8, [x19, #80]
  40393c:	ldr	x9, [x8]
  403940:	stur	x9, [x29, #-152]
  403944:	ldur	x8, [x29, #-144]
  403948:	ldrb	w9, [x8]
  40394c:	mov	w10, #0x0                   	// #0
  403950:	cmp	w9, #0x2f
  403954:	str	w10, [x19, #44]
  403958:	b.ne	403970 <add_cryptsetup+0x398>  // b.any
  40395c:	ldur	x8, [x29, #-144]
  403960:	ldrb	w9, [x8, #1]
  403964:	cmp	w9, #0x2f
  403968:	cset	w9, eq  // eq = none
  40396c:	str	w9, [x19, #44]
  403970:	ldr	w8, [x19, #44]
  403974:	tbnz	w8, #0, 40397c <add_cryptsetup+0x3a4>
  403978:	b	40398c <add_cryptsetup+0x3b4>
  40397c:	ldur	x8, [x29, #-144]
  403980:	add	x8, x8, #0x1
  403984:	stur	x8, [x29, #-144]
  403988:	b	403944 <add_cryptsetup+0x36c>
  40398c:	ldur	x0, [x29, #-152]
  403990:	bl	404400 <isempty>
  403994:	tbnz	w0, #0, 40399c <add_cryptsetup+0x3c4>
  403998:	b	4039a8 <add_cryptsetup+0x3d0>
  40399c:	ldur	x8, [x29, #-144]
  4039a0:	stur	x8, [x29, #-160]
  4039a4:	b	403b38 <add_cryptsetup+0x560>
  4039a8:	ldur	x0, [x29, #-152]
  4039ac:	bl	401b60 <strlen@plt>
  4039b0:	add	x8, x0, #0x1
  4039b4:	ldur	x0, [x29, #-144]
  4039b8:	str	x8, [x19, #32]
  4039bc:	bl	401b60 <strlen@plt>
  4039c0:	ldr	x8, [x19, #32]
  4039c4:	add	x9, x8, x0
  4039c8:	add	x9, x9, #0x1
  4039cc:	stur	x9, [x29, #-184]
  4039d0:	ldur	x9, [x29, #-184]
  4039d4:	stur	x9, [x29, #-192]
  4039d8:	ldur	x1, [x29, #-192]
  4039dc:	mov	x0, #0x1                   	// #1
  4039e0:	bl	404440 <size_multiply_overflow>
  4039e4:	mov	w8, #0x1                   	// #1
  4039e8:	eor	w9, w0, #0x1
  4039ec:	eor	w9, w9, w8
  4039f0:	eor	w9, w9, w8
  4039f4:	eor	w8, w9, w8
  4039f8:	and	w8, w8, #0x1
  4039fc:	mov	w1, w8
  403a00:	sxtw	x10, w1
  403a04:	cbz	x10, 403a24 <add_cryptsetup+0x44c>
  403a08:	mov	w8, wzr
  403a0c:	mov	w0, w8
  403a10:	ldr	x1, [x19, #56]
  403a14:	ldr	x2, [x19, #96]
  403a18:	mov	w3, #0x47                  	// #71
  403a1c:	ldr	x4, [x19, #64]
  403a20:	bl	4019e0 <log_assert_failed_realm@plt>
  403a24:	ldur	x8, [x29, #-192]
  403a28:	mov	x9, #0x1                   	// #1
  403a2c:	mul	x8, x9, x8
  403a30:	cmp	x8, #0x400, lsl #12
  403a34:	cset	w10, ls  // ls = plast
  403a38:	mov	w11, #0x1                   	// #1
  403a3c:	eor	w10, w10, #0x1
  403a40:	eor	w10, w10, w11
  403a44:	eor	w10, w10, w11
  403a48:	and	w10, w10, #0x1
  403a4c:	mov	w0, w10
  403a50:	sxtw	x8, w0
  403a54:	cbz	x8, 403a74 <add_cryptsetup+0x49c>
  403a58:	mov	w8, wzr
  403a5c:	mov	w0, w8
  403a60:	ldr	x1, [x19, #72]
  403a64:	ldr	x2, [x19, #96]
  403a68:	mov	w3, #0x47                  	// #71
  403a6c:	ldr	x4, [x19, #64]
  403a70:	bl	4019e0 <log_assert_failed_realm@plt>
  403a74:	ldur	x8, [x29, #-192]
  403a78:	mov	x9, #0x1                   	// #1
  403a7c:	mul	x8, x9, x8
  403a80:	mul	x8, x8, x9
  403a84:	add	x8, x8, #0xf
  403a88:	and	x8, x8, #0xfffffffffffffff0
  403a8c:	mov	x9, sp
  403a90:	subs	x8, x9, x8
  403a94:	mov	sp, x8
  403a98:	stur	x8, [x29, #-200]
  403a9c:	ldur	x8, [x29, #-200]
  403aa0:	stur	x8, [x29, #-176]
  403aa4:	ldur	x0, [x29, #-176]
  403aa8:	ldur	x1, [x29, #-152]
  403aac:	bl	401b70 <stpcpy@plt>
  403ab0:	stur	x0, [x29, #-168]
  403ab4:	ldur	x8, [x29, #-168]
  403ab8:	ldur	x9, [x29, #-176]
  403abc:	mov	w10, #0x0                   	// #0
  403ac0:	cmp	x8, x9
  403ac4:	str	w10, [x19, #28]
  403ac8:	b.ls	403ae0 <add_cryptsetup+0x508>  // b.plast
  403acc:	ldur	x8, [x29, #-168]
  403ad0:	ldurb	w9, [x8, #-1]
  403ad4:	cmp	w9, #0x2f
  403ad8:	cset	w9, eq  // eq = none
  403adc:	str	w9, [x19, #28]
  403ae0:	ldr	w8, [x19, #28]
  403ae4:	tbnz	w8, #0, 403aec <add_cryptsetup+0x514>
  403ae8:	b	403b00 <add_cryptsetup+0x528>
  403aec:	ldur	x8, [x29, #-168]
  403af0:	mov	x9, #0xffffffffffffffff    	// #-1
  403af4:	add	x8, x8, x9
  403af8:	stur	x8, [x29, #-168]
  403afc:	b	403ab4 <add_cryptsetup+0x4dc>
  403b00:	ldur	x8, [x29, #-144]
  403b04:	ldrb	w9, [x8]
  403b08:	cmp	w9, #0x2f
  403b0c:	b.eq	403b24 <add_cryptsetup+0x54c>  // b.none
  403b10:	ldur	x8, [x29, #-168]
  403b14:	add	x9, x8, #0x1
  403b18:	stur	x9, [x29, #-168]
  403b1c:	mov	w10, #0x2f                  	// #47
  403b20:	strb	w10, [x8]
  403b24:	ldur	x0, [x29, #-168]
  403b28:	ldur	x1, [x29, #-144]
  403b2c:	bl	401b80 <strcpy@plt>
  403b30:	ldur	x8, [x29, #-176]
  403b34:	stur	x8, [x29, #-160]
  403b38:	ldur	x8, [x29, #-160]
  403b3c:	stur	x8, [x29, #-208]
  403b40:	ldur	x8, [x29, #-208]
  403b44:	stur	x8, [x29, #-96]
  403b48:	ldur	x0, [x29, #-96]
  403b4c:	adrp	x1, 407000 <add_automount+0x640>
  403b50:	add	x1, x1, #0x7d9
  403b54:	bl	401ae0 <fopen64@plt>
  403b58:	stur	x0, [x29, #-88]
  403b5c:	ldur	x8, [x29, #-88]
  403b60:	cbnz	x8, 403bf8 <add_cryptsetup+0x620>
  403b64:	mov	w8, #0x3                   	// #3
  403b68:	stur	w8, [x29, #-212]
  403b6c:	bl	401af0 <__errno_location@plt>
  403b70:	ldr	w8, [x0]
  403b74:	stur	w8, [x29, #-216]
  403b78:	stur	wzr, [x29, #-220]
  403b7c:	ldur	w0, [x29, #-220]
  403b80:	bl	401970 <log_get_max_level_realm@plt>
  403b84:	ldur	w8, [x29, #-212]
  403b88:	and	w8, w8, #0x7
  403b8c:	cmp	w0, w8
  403b90:	b.lt	403bc8 <add_cryptsetup+0x5f0>  // b.tstop
  403b94:	ldur	w8, [x29, #-220]
  403b98:	ldur	w9, [x29, #-212]
  403b9c:	orr	w0, w9, w8, lsl #10
  403ba0:	ldur	w1, [x29, #-216]
  403ba4:	ldur	x6, [x29, #-96]
  403ba8:	ldr	x2, [x19, #96]
  403bac:	mov	w3, #0x4a                  	// #74
  403bb0:	ldr	x4, [x19, #88]
  403bb4:	adrp	x5, 407000 <add_automount+0x640>
  403bb8:	add	x5, x5, #0x7dd
  403bbc:	bl	401980 <log_internal_realm@plt>
  403bc0:	str	w0, [x19, #24]
  403bc4:	b	403bdc <add_cryptsetup+0x604>
  403bc8:	ldur	w0, [x29, #-216]
  403bcc:	bl	401990 <abs@plt>
  403bd0:	mov	w8, wzr
  403bd4:	subs	w8, w8, w0, uxtb
  403bd8:	str	w8, [x19, #24]
  403bdc:	ldr	w8, [x19, #24]
  403be0:	stur	w8, [x29, #-224]
  403be4:	ldur	w8, [x29, #-224]
  403be8:	stur	w8, [x29, #-4]
  403bec:	mov	w8, #0x1                   	// #1
  403bf0:	stur	w8, [x29, #-120]
  403bf4:	b	404338 <add_cryptsetup+0xd60>
  403bf8:	ldur	x0, [x29, #-88]
  403bfc:	ldur	x2, [x29, #-64]
  403c00:	ldur	x3, [x29, #-64]
  403c04:	ldur	x4, [x29, #-72]
  403c08:	ldur	x5, [x29, #-80]
  403c0c:	ldurb	w8, [x29, #-25]
  403c10:	adrp	x9, 407000 <add_automount+0x640>
  403c14:	add	x9, x9, #0xa13
  403c18:	adrp	x10, 407000 <add_automount+0x640>
  403c1c:	add	x10, x10, #0xa12
  403c20:	tst	w8, #0x1
  403c24:	csel	x6, x10, x9, ne  // ne = any
  403c28:	ldur	x7, [x29, #-72]
  403c2c:	adrp	x1, 407000 <add_automount+0x640>
  403c30:	add	x1, x1, #0x7ff
  403c34:	bl	401b00 <fprintf@plt>
  403c38:	ldur	x9, [x29, #-88]
  403c3c:	mov	x0, x9
  403c40:	bl	401b20 <fflush_and_check@plt>
  403c44:	stur	w0, [x29, #-100]
  403c48:	ldur	w8, [x29, #-100]
  403c4c:	cmp	w8, #0x0
  403c50:	cset	w8, ge  // ge = tcont
  403c54:	tbnz	w8, #0, 403ce8 <add_cryptsetup+0x710>
  403c58:	mov	w8, #0x3                   	// #3
  403c5c:	stur	w8, [x29, #-228]
  403c60:	ldur	w8, [x29, #-100]
  403c64:	stur	w8, [x29, #-232]
  403c68:	stur	wzr, [x29, #-236]
  403c6c:	ldur	w0, [x29, #-236]
  403c70:	bl	401970 <log_get_max_level_realm@plt>
  403c74:	ldur	w8, [x29, #-228]
  403c78:	and	w8, w8, #0x7
  403c7c:	cmp	w0, w8
  403c80:	b.lt	403cb8 <add_cryptsetup+0x6e0>  // b.tstop
  403c84:	ldur	w8, [x29, #-236]
  403c88:	ldur	w9, [x29, #-228]
  403c8c:	orr	w0, w9, w8, lsl #10
  403c90:	ldur	w1, [x29, #-232]
  403c94:	ldur	x6, [x29, #-96]
  403c98:	ldr	x2, [x19, #96]
  403c9c:	mov	w3, #0x64                  	// #100
  403ca0:	ldr	x4, [x19, #88]
  403ca4:	adrp	x5, 407000 <add_automount+0x640>
  403ca8:	add	x5, x5, #0xa1d
  403cac:	bl	401980 <log_internal_realm@plt>
  403cb0:	str	w0, [x19, #20]
  403cb4:	b	403ccc <add_cryptsetup+0x6f4>
  403cb8:	ldur	w0, [x29, #-232]
  403cbc:	bl	401990 <abs@plt>
  403cc0:	mov	w8, wzr
  403cc4:	subs	w8, w8, w0, uxtb
  403cc8:	str	w8, [x19, #20]
  403ccc:	ldr	w8, [x19, #20]
  403cd0:	stur	w8, [x29, #-240]
  403cd4:	ldur	w8, [x29, #-240]
  403cd8:	stur	w8, [x29, #-4]
  403cdc:	mov	w8, #0x1                   	// #1
  403ce0:	stur	w8, [x29, #-120]
  403ce4:	b	404338 <add_cryptsetup+0xd60>
  403ce8:	ldr	x8, [x19, #80]
  403cec:	ldr	x0, [x8]
  403cf0:	ldur	x1, [x29, #-64]
  403cf4:	ldur	x3, [x29, #-56]
  403cf8:	adrp	x2, 407000 <add_automount+0x640>
  403cfc:	add	x2, x2, #0xa39
  403d00:	bl	401b30 <generator_add_symlink@plt>
  403d04:	stur	w0, [x29, #-100]
  403d08:	ldur	w9, [x29, #-100]
  403d0c:	cmp	w9, #0x0
  403d10:	cset	w9, ge  // ge = tcont
  403d14:	tbnz	w9, #0, 403d2c <add_cryptsetup+0x754>
  403d18:	ldur	w8, [x29, #-100]
  403d1c:	stur	w8, [x29, #-4]
  403d20:	mov	w8, #0x1                   	// #1
  403d24:	stur	w8, [x29, #-120]
  403d28:	b	404338 <add_cryptsetup+0xd60>
  403d2c:	ldurb	w8, [x29, #-26]
  403d30:	tbnz	w8, #0, 403d38 <add_cryptsetup+0x760>
  403d34:	b	403fe0 <add_cryptsetup+0xa08>
  403d38:	ldr	x8, [x19, #80]
  403d3c:	ldr	x0, [x8]
  403d40:	ldur	x3, [x29, #-56]
  403d44:	adrp	x1, 407000 <add_automount+0x640>
  403d48:	add	x1, x1, #0xa3f
  403d4c:	adrp	x2, 407000 <add_automount+0x640>
  403d50:	add	x2, x2, #0xa51
  403d54:	bl	401b30 <generator_add_symlink@plt>
  403d58:	stur	w0, [x29, #-100]
  403d5c:	ldur	w9, [x29, #-100]
  403d60:	cmp	w9, #0x0
  403d64:	cset	w9, ge  // ge = tcont
  403d68:	tbnz	w9, #0, 403d80 <add_cryptsetup+0x7a8>
  403d6c:	ldur	w8, [x29, #-100]
  403d70:	stur	w8, [x29, #-4]
  403d74:	mov	w8, #0x1                   	// #1
  403d78:	stur	w8, [x29, #-120]
  403d7c:	b	404338 <add_cryptsetup+0xd60>
  403d80:	add	x8, x19, #0x110
  403d84:	adrp	x9, 407000 <add_automount+0x640>
  403d88:	add	x9, x9, #0xa5a
  403d8c:	str	x9, [x19, #272]
  403d90:	ldur	x9, [x29, #-48]
  403d94:	str	x9, [x8, #8]
  403d98:	adrp	x9, 407000 <add_automount+0x640>
  403d9c:	add	x9, x9, #0x73b
  403da0:	str	x9, [x8, #16]
  403da4:	str	xzr, [x19, #248]
  403da8:	str	xzr, [x19, #240]
  403dac:	ldr	x8, [x19, #240]
  403db0:	mov	w9, #0x0                   	// #0
  403db4:	cmp	x8, #0x3
  403db8:	str	w9, [x19, #16]
  403dbc:	b.cs	403de4 <add_cryptsetup+0x80c>  // b.hs, b.nlast
  403dc0:	ldr	x8, [x19, #240]
  403dc4:	mov	x9, #0x8                   	// #8
  403dc8:	mul	x8, x9, x8
  403dcc:	add	x9, x19, #0x110
  403dd0:	add	x8, x9, x8
  403dd4:	ldr	x8, [x8]
  403dd8:	cmp	x8, #0x0
  403ddc:	cset	w10, ne  // ne = any
  403de0:	str	w10, [x19, #16]
  403de4:	ldr	w8, [x19, #16]
  403de8:	tbnz	w8, #0, 403df0 <add_cryptsetup+0x818>
  403dec:	b	403e28 <add_cryptsetup+0x850>
  403df0:	ldr	x8, [x19, #240]
  403df4:	mov	x9, #0x8                   	// #8
  403df8:	mul	x8, x9, x8
  403dfc:	add	x9, x19, #0x110
  403e00:	add	x8, x9, x8
  403e04:	ldr	x0, [x8]
  403e08:	bl	401b60 <strlen@plt>
  403e0c:	ldr	x8, [x19, #248]
  403e10:	add	x8, x8, x0
  403e14:	str	x8, [x19, #248]
  403e18:	ldr	x8, [x19, #240]
  403e1c:	add	x8, x8, #0x1
  403e20:	str	x8, [x19, #240]
  403e24:	b	403dac <add_cryptsetup+0x7d4>
  403e28:	ldr	x8, [x19, #248]
  403e2c:	add	x8, x8, #0x1
  403e30:	str	x8, [x19, #232]
  403e34:	ldr	x1, [x19, #232]
  403e38:	mov	x0, #0x1                   	// #1
  403e3c:	bl	404440 <size_multiply_overflow>
  403e40:	mov	w8, #0x1                   	// #1
  403e44:	eor	w9, w0, #0x1
  403e48:	eor	w9, w9, w8
  403e4c:	eor	w9, w9, w8
  403e50:	eor	w8, w9, w8
  403e54:	and	w8, w8, #0x1
  403e58:	mov	w1, w8
  403e5c:	sxtw	x10, w1
  403e60:	cbz	x10, 403e80 <add_cryptsetup+0x8a8>
  403e64:	mov	w8, wzr
  403e68:	mov	w0, w8
  403e6c:	ldr	x1, [x19, #56]
  403e70:	ldr	x2, [x19, #96]
  403e74:	mov	w3, #0x71                  	// #113
  403e78:	ldr	x4, [x19, #64]
  403e7c:	bl	4019e0 <log_assert_failed_realm@plt>
  403e80:	ldr	x8, [x19, #232]
  403e84:	mov	x9, #0x1                   	// #1
  403e88:	mul	x8, x9, x8
  403e8c:	cmp	x8, #0x400, lsl #12
  403e90:	cset	w10, ls  // ls = plast
  403e94:	mov	w11, #0x1                   	// #1
  403e98:	eor	w10, w10, #0x1
  403e9c:	eor	w10, w10, w11
  403ea0:	eor	w10, w10, w11
  403ea4:	and	w10, w10, #0x1
  403ea8:	mov	w0, w10
  403eac:	sxtw	x8, w0
  403eb0:	cbz	x8, 403ed0 <add_cryptsetup+0x8f8>
  403eb4:	mov	w8, wzr
  403eb8:	mov	w0, w8
  403ebc:	ldr	x1, [x19, #72]
  403ec0:	ldr	x2, [x19, #96]
  403ec4:	mov	w3, #0x71                  	// #113
  403ec8:	ldr	x4, [x19, #64]
  403ecc:	bl	4019e0 <log_assert_failed_realm@plt>
  403ed0:	ldr	x8, [x19, #232]
  403ed4:	mov	x9, #0x1                   	// #1
  403ed8:	mul	x8, x9, x8
  403edc:	mul	x8, x8, x9
  403ee0:	add	x8, x8, #0xf
  403ee4:	and	x8, x8, #0xfffffffffffffff0
  403ee8:	mov	x9, sp
  403eec:	subs	x8, x9, x8
  403ef0:	mov	sp, x8
  403ef4:	str	x8, [x19, #224]
  403ef8:	ldr	x8, [x19, #224]
  403efc:	str	x8, [x19, #264]
  403f00:	str	x8, [x19, #256]
  403f04:	str	xzr, [x19, #240]
  403f08:	ldr	x8, [x19, #240]
  403f0c:	mov	w9, #0x0                   	// #0
  403f10:	cmp	x8, #0x3
  403f14:	str	w9, [x19, #12]
  403f18:	b.cs	403f40 <add_cryptsetup+0x968>  // b.hs, b.nlast
  403f1c:	ldr	x8, [x19, #240]
  403f20:	mov	x9, #0x8                   	// #8
  403f24:	mul	x8, x9, x8
  403f28:	add	x9, x19, #0x110
  403f2c:	add	x8, x9, x8
  403f30:	ldr	x8, [x8]
  403f34:	cmp	x8, #0x0
  403f38:	cset	w10, ne  // ne = any
  403f3c:	str	w10, [x19, #12]
  403f40:	ldr	w8, [x19, #12]
  403f44:	tbnz	w8, #0, 403f4c <add_cryptsetup+0x974>
  403f48:	b	403f80 <add_cryptsetup+0x9a8>
  403f4c:	ldr	x0, [x19, #256]
  403f50:	ldr	x8, [x19, #240]
  403f54:	mov	x9, #0x8                   	// #8
  403f58:	mul	x8, x9, x8
  403f5c:	add	x9, x19, #0x110
  403f60:	add	x8, x9, x8
  403f64:	ldr	x1, [x8]
  403f68:	bl	401b70 <stpcpy@plt>
  403f6c:	str	x0, [x19, #256]
  403f70:	ldr	x8, [x19, #240]
  403f74:	add	x8, x8, #0x1
  403f78:	str	x8, [x19, #240]
  403f7c:	b	403f08 <add_cryptsetup+0x930>
  403f80:	ldr	x8, [x19, #256]
  403f84:	mov	w9, #0x0                   	// #0
  403f88:	strb	w9, [x8]
  403f8c:	ldr	x8, [x19, #264]
  403f90:	str	x8, [x19, #216]
  403f94:	ldr	x8, [x19, #216]
  403f98:	stur	x8, [x29, #-248]
  403f9c:	ldr	x8, [x19, #80]
  403fa0:	ldr	x0, [x8]
  403fa4:	ldur	x1, [x29, #-248]
  403fa8:	ldur	x3, [x29, #-56]
  403fac:	adrp	x2, 407000 <add_automount+0x640>
  403fb0:	add	x2, x2, #0xa51
  403fb4:	bl	401b30 <generator_add_symlink@plt>
  403fb8:	stur	w0, [x29, #-100]
  403fbc:	ldur	w9, [x29, #-100]
  403fc0:	cmp	w9, #0x0
  403fc4:	cset	w9, ge  // ge = tcont
  403fc8:	tbnz	w9, #0, 403fe0 <add_cryptsetup+0xa08>
  403fcc:	ldur	w8, [x29, #-100]
  403fd0:	stur	w8, [x29, #-4]
  403fd4:	mov	w8, #0x1                   	// #1
  403fd8:	stur	w8, [x29, #-120]
  403fdc:	b	404338 <add_cryptsetup+0xd60>
  403fe0:	ldr	x8, [x19, #80]
  403fe4:	ldr	x9, [x8]
  403fe8:	add	x10, x19, #0xb8
  403fec:	str	x9, [x19, #184]
  403ff0:	adrp	x9, 407000 <add_automount+0x640>
  403ff4:	add	x9, x9, #0xa66
  403ff8:	str	x9, [x10, #8]
  403ffc:	ldur	x9, [x29, #-48]
  404000:	str	x9, [x10, #16]
  404004:	adrp	x9, 407000 <add_automount+0x640>
  404008:	add	x9, x9, #0xa73
  40400c:	str	x9, [x10, #24]
  404010:	str	xzr, [x19, #160]
  404014:	str	xzr, [x19, #152]
  404018:	ldr	x8, [x19, #152]
  40401c:	mov	w9, #0x0                   	// #0
  404020:	cmp	x8, #0x4
  404024:	str	w9, [x19, #8]
  404028:	b.cs	404050 <add_cryptsetup+0xa78>  // b.hs, b.nlast
  40402c:	ldr	x8, [x19, #152]
  404030:	mov	x9, #0x8                   	// #8
  404034:	mul	x8, x9, x8
  404038:	add	x9, x19, #0xb8
  40403c:	add	x8, x9, x8
  404040:	ldr	x8, [x8]
  404044:	cmp	x8, #0x0
  404048:	cset	w10, ne  // ne = any
  40404c:	str	w10, [x19, #8]
  404050:	ldr	w8, [x19, #8]
  404054:	tbnz	w8, #0, 40405c <add_cryptsetup+0xa84>
  404058:	b	404094 <add_cryptsetup+0xabc>
  40405c:	ldr	x8, [x19, #152]
  404060:	mov	x9, #0x8                   	// #8
  404064:	mul	x8, x9, x8
  404068:	add	x9, x19, #0xb8
  40406c:	add	x8, x9, x8
  404070:	ldr	x0, [x8]
  404074:	bl	401b60 <strlen@plt>
  404078:	ldr	x8, [x19, #160]
  40407c:	add	x8, x8, x0
  404080:	str	x8, [x19, #160]
  404084:	ldr	x8, [x19, #152]
  404088:	add	x8, x8, #0x1
  40408c:	str	x8, [x19, #152]
  404090:	b	404018 <add_cryptsetup+0xa40>
  404094:	ldr	x8, [x19, #160]
  404098:	add	x8, x8, #0x1
  40409c:	str	x8, [x19, #144]
  4040a0:	ldr	x1, [x19, #144]
  4040a4:	mov	x0, #0x1                   	// #1
  4040a8:	bl	404440 <size_multiply_overflow>
  4040ac:	mov	w8, #0x1                   	// #1
  4040b0:	eor	w9, w0, #0x1
  4040b4:	eor	w9, w9, w8
  4040b8:	eor	w9, w9, w8
  4040bc:	eor	w8, w9, w8
  4040c0:	and	w8, w8, #0x1
  4040c4:	mov	w1, w8
  4040c8:	sxtw	x10, w1
  4040cc:	cbz	x10, 4040ec <add_cryptsetup+0xb14>
  4040d0:	mov	w8, wzr
  4040d4:	mov	w0, w8
  4040d8:	ldr	x1, [x19, #56]
  4040dc:	ldr	x2, [x19, #96]
  4040e0:	mov	w3, #0x77                  	// #119
  4040e4:	ldr	x4, [x19, #64]
  4040e8:	bl	4019e0 <log_assert_failed_realm@plt>
  4040ec:	ldr	x8, [x19, #144]
  4040f0:	mov	x9, #0x1                   	// #1
  4040f4:	mul	x8, x9, x8
  4040f8:	cmp	x8, #0x400, lsl #12
  4040fc:	cset	w10, ls  // ls = plast
  404100:	mov	w11, #0x1                   	// #1
  404104:	eor	w10, w10, #0x1
  404108:	eor	w10, w10, w11
  40410c:	eor	w10, w10, w11
  404110:	and	w10, w10, #0x1
  404114:	mov	w0, w10
  404118:	sxtw	x8, w0
  40411c:	cbz	x8, 40413c <add_cryptsetup+0xb64>
  404120:	mov	w8, wzr
  404124:	mov	w0, w8
  404128:	ldr	x1, [x19, #72]
  40412c:	ldr	x2, [x19, #96]
  404130:	mov	w3, #0x77                  	// #119
  404134:	ldr	x4, [x19, #64]
  404138:	bl	4019e0 <log_assert_failed_realm@plt>
  40413c:	ldr	x8, [x19, #144]
  404140:	mov	x9, #0x1                   	// #1
  404144:	mul	x8, x9, x8
  404148:	mul	x8, x8, x9
  40414c:	add	x8, x8, #0xf
  404150:	and	x8, x8, #0xfffffffffffffff0
  404154:	mov	x9, sp
  404158:	subs	x8, x9, x8
  40415c:	mov	sp, x8
  404160:	str	x8, [x19, #136]
  404164:	ldr	x8, [x19, #136]
  404168:	str	x8, [x19, #176]
  40416c:	str	x8, [x19, #168]
  404170:	str	xzr, [x19, #152]
  404174:	ldr	x8, [x19, #152]
  404178:	mov	w9, #0x0                   	// #0
  40417c:	cmp	x8, #0x4
  404180:	str	w9, [x19, #4]
  404184:	b.cs	4041ac <add_cryptsetup+0xbd4>  // b.hs, b.nlast
  404188:	ldr	x8, [x19, #152]
  40418c:	mov	x9, #0x8                   	// #8
  404190:	mul	x8, x9, x8
  404194:	add	x9, x19, #0xb8
  404198:	add	x8, x9, x8
  40419c:	ldr	x8, [x8]
  4041a0:	cmp	x8, #0x0
  4041a4:	cset	w10, ne  // ne = any
  4041a8:	str	w10, [x19, #4]
  4041ac:	ldr	w8, [x19, #4]
  4041b0:	tbnz	w8, #0, 4041b8 <add_cryptsetup+0xbe0>
  4041b4:	b	4041ec <add_cryptsetup+0xc14>
  4041b8:	ldr	x0, [x19, #168]
  4041bc:	ldr	x8, [x19, #152]
  4041c0:	mov	x9, #0x8                   	// #8
  4041c4:	mul	x8, x9, x8
  4041c8:	add	x9, x19, #0xb8
  4041cc:	add	x8, x9, x8
  4041d0:	ldr	x1, [x8]
  4041d4:	bl	401b70 <stpcpy@plt>
  4041d8:	str	x0, [x19, #168]
  4041dc:	ldr	x8, [x19, #152]
  4041e0:	add	x8, x8, #0x1
  4041e4:	str	x8, [x19, #152]
  4041e8:	b	404174 <add_cryptsetup+0xb9c>
  4041ec:	ldr	x8, [x19, #168]
  4041f0:	mov	w9, #0x0                   	// #0
  4041f4:	strb	w9, [x8]
  4041f8:	ldr	x8, [x19, #176]
  4041fc:	str	x8, [x19, #128]
  404200:	ldr	x8, [x19, #128]
  404204:	stur	x8, [x29, #-96]
  404208:	ldur	x0, [x29, #-96]
  40420c:	mov	w1, #0x1ed                 	// #493
  404210:	bl	401b90 <mkdir_parents_label@plt>
  404214:	ldur	x8, [x29, #-96]
  404218:	mov	x0, x8
  40421c:	adrp	x1, 407000 <add_automount+0x640>
  404220:	add	x1, x1, #0xa97
  404224:	mov	w2, #0x1                   	// #1
  404228:	bl	4044a8 <write_string_file>
  40422c:	stur	w0, [x29, #-100]
  404230:	ldur	w9, [x29, #-100]
  404234:	cmp	w9, #0x0
  404238:	cset	w9, ge  // ge = tcont
  40423c:	tbnz	w9, #0, 4042cc <add_cryptsetup+0xcf4>
  404240:	mov	w8, #0x3                   	// #3
  404244:	str	w8, [x19, #124]
  404248:	ldur	w8, [x29, #-100]
  40424c:	str	w8, [x19, #120]
  404250:	str	wzr, [x19, #116]
  404254:	ldr	w0, [x19, #116]
  404258:	bl	401970 <log_get_max_level_realm@plt>
  40425c:	ldr	w8, [x19, #124]
  404260:	and	w8, w8, #0x7
  404264:	cmp	w0, w8
  404268:	b.lt	40429c <add_cryptsetup+0xcc4>  // b.tstop
  40426c:	ldr	w8, [x19, #116]
  404270:	ldr	w9, [x19, #124]
  404274:	orr	w0, w9, w8, lsl #10
  404278:	ldr	w1, [x19, #120]
  40427c:	ldr	x2, [x19, #96]
  404280:	mov	w3, #0x7f                  	// #127
  404284:	ldr	x4, [x19, #88]
  404288:	adrp	x5, 407000 <add_automount+0x640>
  40428c:	add	x5, x5, #0xae8
  404290:	bl	401980 <log_internal_realm@plt>
  404294:	str	w0, [x19]
  404298:	b	4042b0 <add_cryptsetup+0xcd8>
  40429c:	ldr	w0, [x19, #120]
  4042a0:	bl	401990 <abs@plt>
  4042a4:	mov	w8, wzr
  4042a8:	subs	w8, w8, w0, uxtb
  4042ac:	str	w8, [x19]
  4042b0:	ldr	w8, [x19]
  4042b4:	str	w8, [x19, #112]
  4042b8:	ldr	w8, [x19, #112]
  4042bc:	stur	w8, [x29, #-4]
  4042c0:	mov	w8, #0x1                   	// #1
  4042c4:	stur	w8, [x29, #-120]
  4042c8:	b	404338 <add_cryptsetup+0xd60>
  4042cc:	ldur	x8, [x29, #-40]
  4042d0:	cbz	x8, 40432c <add_cryptsetup+0xd54>
  4042d4:	ldur	x1, [x29, #-16]
  4042d8:	adrp	x0, 407000 <add_automount+0x640>
  4042dc:	add	x0, x0, #0xb0b
  4042e0:	mov	x8, #0xffffffffffffffff    	// #-1
  4042e4:	mov	x2, x8
  4042e8:	bl	401ac0 <path_join_internal@plt>
  4042ec:	str	x0, [x19, #104]
  4042f0:	ldr	x8, [x19, #104]
  4042f4:	cbnz	x8, 404320 <add_cryptsetup+0xd48>
  4042f8:	mov	w8, wzr
  4042fc:	mov	w0, w8
  404300:	ldr	x1, [x19, #96]
  404304:	mov	w2, #0x86                  	// #134
  404308:	ldr	x3, [x19, #88]
  40430c:	bl	401ad0 <log_oom_internal@plt>
  404310:	stur	w0, [x29, #-4]
  404314:	mov	w8, #0x1                   	// #1
  404318:	stur	w8, [x29, #-120]
  40431c:	b	404338 <add_cryptsetup+0xd60>
  404320:	ldr	x8, [x19, #104]
  404324:	ldur	x9, [x29, #-40]
  404328:	str	x8, [x9]
  40432c:	stur	wzr, [x29, #-4]
  404330:	mov	w8, #0x1                   	// #1
  404334:	stur	w8, [x29, #-120]
  404338:	sub	x0, x29, #0x58
  40433c:	bl	4043a4 <fclosep>
  404340:	sub	x0, x29, #0x50
  404344:	bl	40437c <freep>
  404348:	sub	x0, x29, #0x48
  40434c:	bl	40437c <freep>
  404350:	sub	x0, x29, #0x40
  404354:	bl	40437c <freep>
  404358:	sub	x0, x29, #0x38
  40435c:	bl	40437c <freep>
  404360:	sub	x0, x29, #0x30
  404364:	bl	40437c <freep>
  404368:	ldur	w0, [x29, #-4]
  40436c:	mov	sp, x29
  404370:	ldp	x28, x19, [sp, #16]
  404374:	ldp	x29, x30, [sp], #32
  404378:	ret

000000000040437c <freep>:
  40437c:	sub	sp, sp, #0x20
  404380:	stp	x29, x30, [sp, #16]
  404384:	add	x29, sp, #0x10
  404388:	str	x0, [sp, #8]
  40438c:	ldr	x8, [sp, #8]
  404390:	ldr	x0, [x8]
  404394:	bl	401ba0 <free@plt>
  404398:	ldp	x29, x30, [sp, #16]
  40439c:	add	sp, sp, #0x20
  4043a0:	ret

00000000004043a4 <fclosep>:
  4043a4:	sub	sp, sp, #0x20
  4043a8:	stp	x29, x30, [sp, #16]
  4043ac:	add	x29, sp, #0x10
  4043b0:	str	x0, [sp, #8]
  4043b4:	ldr	x8, [sp, #8]
  4043b8:	ldr	x0, [x8]
  4043bc:	bl	401bb0 <safe_fclose@plt>
  4043c0:	ldp	x29, x30, [sp, #16]
  4043c4:	add	sp, sp, #0x20
  4043c8:	ret

00000000004043cc <specifier_escape>:
  4043cc:	sub	sp, sp, #0x20
  4043d0:	stp	x29, x30, [sp, #16]
  4043d4:	add	x29, sp, #0x10
  4043d8:	adrp	x1, 407000 <add_automount+0x640>
  4043dc:	add	x1, x1, #0xb17
  4043e0:	adrp	x2, 407000 <add_automount+0x640>
  4043e4:	add	x2, x2, #0xb19
  4043e8:	str	x0, [sp, #8]
  4043ec:	ldr	x0, [sp, #8]
  4043f0:	bl	401bc0 <strreplace@plt>
  4043f4:	ldp	x29, x30, [sp, #16]
  4043f8:	add	sp, sp, #0x20
  4043fc:	ret

0000000000404400 <isempty>:
  404400:	sub	sp, sp, #0x10
  404404:	str	x0, [sp, #8]
  404408:	ldr	x8, [sp, #8]
  40440c:	mov	w9, #0x1                   	// #1
  404410:	str	w9, [sp, #4]
  404414:	cbz	x8, 404430 <isempty+0x30>
  404418:	ldr	x8, [sp, #8]
  40441c:	ldrb	w9, [x8]
  404420:	cmp	w9, #0x0
  404424:	cset	w9, ne  // ne = any
  404428:	eor	w9, w9, #0x1
  40442c:	str	w9, [sp, #4]
  404430:	ldr	w8, [sp, #4]
  404434:	and	w0, w8, #0x1
  404438:	add	sp, sp, #0x10
  40443c:	ret

0000000000404440 <size_multiply_overflow>:
  404440:	sub	sp, sp, #0x20
  404444:	str	x0, [sp, #24]
  404448:	str	x1, [sp, #16]
  40444c:	ldr	x8, [sp, #16]
  404450:	mov	w9, #0x0                   	// #0
  404454:	str	w9, [sp, #12]
  404458:	cbz	x8, 404478 <size_multiply_overflow+0x38>
  40445c:	ldr	x8, [sp, #24]
  404460:	ldr	x9, [sp, #16]
  404464:	mov	x10, #0xffffffffffffffff    	// #-1
  404468:	udiv	x9, x10, x9
  40446c:	cmp	x8, x9
  404470:	cset	w11, hi  // hi = pmore
  404474:	str	w11, [sp, #12]
  404478:	ldr	w8, [sp, #12]
  40447c:	mov	w9, #0x1                   	// #1
  404480:	eor	w8, w8, #0x1
  404484:	eor	w8, w8, w9
  404488:	and	w8, w8, #0x1
  40448c:	mov	w0, w8
  404490:	sxtw	x10, w0
  404494:	cmp	x10, #0x0
  404498:	cset	w8, ne  // ne = any
  40449c:	and	w0, w8, #0x1
  4044a0:	add	sp, sp, #0x20
  4044a4:	ret

00000000004044a8 <write_string_file>:
  4044a8:	sub	sp, sp, #0x30
  4044ac:	stp	x29, x30, [sp, #32]
  4044b0:	add	x29, sp, #0x20
  4044b4:	mov	x8, xzr
  4044b8:	stur	x0, [x29, #-8]
  4044bc:	str	x1, [sp, #16]
  4044c0:	str	w2, [sp, #12]
  4044c4:	ldur	x0, [x29, #-8]
  4044c8:	ldr	x1, [sp, #16]
  4044cc:	ldr	w2, [sp, #12]
  4044d0:	mov	x3, x8
  4044d4:	bl	401bd0 <write_string_file_ts@plt>
  4044d8:	ldp	x29, x30, [sp, #32]
  4044dc:	add	sp, sp, #0x30
  4044e0:	ret

00000000004044e4 <strna>:
  4044e4:	sub	sp, sp, #0x20
  4044e8:	str	x0, [sp, #24]
  4044ec:	ldr	x8, [sp, #24]
  4044f0:	str	x8, [sp, #16]
  4044f4:	cbz	x8, 404504 <strna+0x20>
  4044f8:	ldr	x8, [sp, #16]
  4044fc:	str	x8, [sp, #8]
  404500:	b	404510 <strna+0x2c>
  404504:	adrp	x8, 407000 <add_automount+0x640>
  404508:	add	x8, x8, #0xcbe
  40450c:	str	x8, [sp, #8]
  404510:	ldr	x8, [sp, #8]
  404514:	mov	x0, x8
  404518:	add	sp, sp, #0x20
  40451c:	ret

0000000000404520 <streq_ptr>:
  404520:	sub	sp, sp, #0x20
  404524:	stp	x29, x30, [sp, #16]
  404528:	add	x29, sp, #0x10
  40452c:	str	x0, [sp, #8]
  404530:	str	x1, [sp]
  404534:	ldr	x0, [sp, #8]
  404538:	ldr	x1, [sp]
  40453c:	bl	401be0 <strcmp_ptr@plt>
  404540:	cmp	w0, #0x0
  404544:	cset	w8, eq  // eq = none
  404548:	and	w0, w8, #0x1
  40454c:	ldp	x29, x30, [sp, #16]
  404550:	add	sp, sp, #0x20
  404554:	ret

0000000000404558 <empty_to_root>:
  404558:	sub	sp, sp, #0x20
  40455c:	stp	x29, x30, [sp, #16]
  404560:	add	x29, sp, #0x10
  404564:	str	x0, [sp, #8]
  404568:	ldr	x0, [sp, #8]
  40456c:	bl	404400 <isempty>
  404570:	tbnz	w0, #0, 404578 <empty_to_root+0x20>
  404574:	b	404588 <empty_to_root+0x30>
  404578:	adrp	x8, 407000 <add_automount+0x640>
  40457c:	add	x8, x8, #0x69e
  404580:	str	x8, [sp]
  404584:	b	404590 <empty_to_root+0x38>
  404588:	ldr	x8, [sp, #8]
  40458c:	str	x8, [sp]
  404590:	ldr	x8, [sp]
  404594:	mov	x0, x8
  404598:	ldp	x29, x30, [sp, #16]
  40459c:	add	sp, sp, #0x20
  4045a0:	ret

00000000004045a4 <enumerate_partitions>:
  4045a4:	sub	sp, sp, #0x70
  4045a8:	stp	x29, x30, [sp, #96]
  4045ac:	add	x29, sp, #0x60
  4045b0:	mov	w8, #0xffffffff            	// #-1
  4045b4:	mov	x9, xzr
  4045b8:	adrp	x10, 407000 <add_automount+0x640>
  4045bc:	add	x10, x10, #0x3a8
  4045c0:	add	x10, x10, #0x3
  4045c4:	sub	x1, x29, #0x14
  4045c8:	stur	x0, [x29, #-16]
  4045cc:	stur	w8, [x29, #-20]
  4045d0:	stur	x9, [x29, #-32]
  4045d4:	ldur	x0, [x29, #-16]
  4045d8:	str	x10, [sp, #8]
  4045dc:	bl	404998 <open_parent_devno>
  4045e0:	stur	w0, [x29, #-36]
  4045e4:	ldur	w8, [x29, #-36]
  4045e8:	cmp	w8, #0x0
  4045ec:	cset	w8, gt
  4045f0:	tbnz	w8, #0, 404608 <enumerate_partitions+0x64>
  4045f4:	ldur	w8, [x29, #-36]
  4045f8:	stur	w8, [x29, #-4]
  4045fc:	mov	w8, #0x1                   	// #1
  404600:	stur	w8, [x29, #-44]
  404604:	b	40491c <enumerate_partitions+0x378>
  404608:	ldur	w0, [x29, #-20]
  40460c:	mov	x8, xzr
  404610:	mov	x1, x8
  404614:	mov	x2, x8
  404618:	mov	w3, #0x210                 	// #528
  40461c:	sub	x4, x29, #0x20
  404620:	bl	401bf0 <dissect_image@plt>
  404624:	stur	w0, [x29, #-36]
  404628:	ldur	w9, [x29, #-36]
  40462c:	mov	w10, #0xffffffbf            	// #-65
  404630:	cmp	w9, w10
  404634:	b.ne	4046c4 <enumerate_partitions+0x120>  // b.any
  404638:	mov	w8, #0x7                   	// #7
  40463c:	str	w8, [sp, #48]
  404640:	ldur	w8, [x29, #-36]
  404644:	str	w8, [sp, #44]
  404648:	str	wzr, [sp, #40]
  40464c:	ldr	w0, [sp, #40]
  404650:	bl	401970 <log_get_max_level_realm@plt>
  404654:	ldr	w8, [sp, #48]
  404658:	and	w8, w8, #0x7
  40465c:	cmp	w0, w8
  404660:	b.lt	404698 <enumerate_partitions+0xf4>  // b.tstop
  404664:	ldr	w8, [sp, #40]
  404668:	ldr	w9, [sp, #48]
  40466c:	orr	w0, w9, w8, lsl #10
  404670:	ldr	w1, [sp, #44]
  404674:	ldr	x2, [sp, #8]
  404678:	mov	w3, #0x25f                 	// #607
  40467c:	adrp	x4, 407000 <add_automount+0x640>
  404680:	add	x4, x4, #0xe2a
  404684:	adrp	x5, 407000 <add_automount+0x640>
  404688:	add	x5, x5, #0xe3f
  40468c:	bl	401980 <log_internal_realm@plt>
  404690:	str	w0, [sp, #4]
  404694:	b	4046ac <enumerate_partitions+0x108>
  404698:	ldr	w0, [sp, #44]
  40469c:	bl	401990 <abs@plt>
  4046a0:	mov	w8, wzr
  4046a4:	subs	w8, w8, w0, uxtb
  4046a8:	str	w8, [sp, #4]
  4046ac:	ldr	w8, [sp, #4]
  4046b0:	str	w8, [sp, #36]
  4046b4:	stur	wzr, [x29, #-4]
  4046b8:	mov	w8, #0x1                   	// #1
  4046bc:	stur	w8, [x29, #-44]
  4046c0:	b	40491c <enumerate_partitions+0x378>
  4046c4:	ldur	w8, [x29, #-36]
  4046c8:	cmp	w8, #0x0
  4046cc:	cset	w8, ge  // ge = tcont
  4046d0:	tbnz	w8, #0, 404764 <enumerate_partitions+0x1c0>
  4046d4:	mov	w8, #0x3                   	// #3
  4046d8:	str	w8, [sp, #32]
  4046dc:	ldur	w8, [x29, #-36]
  4046e0:	str	w8, [sp, #28]
  4046e4:	str	wzr, [sp, #24]
  4046e8:	ldr	w0, [sp, #24]
  4046ec:	bl	401970 <log_get_max_level_realm@plt>
  4046f0:	ldr	w8, [sp, #32]
  4046f4:	and	w8, w8, #0x7
  4046f8:	cmp	w0, w8
  4046fc:	b.lt	404734 <enumerate_partitions+0x190>  // b.tstop
  404700:	ldr	w8, [sp, #24]
  404704:	ldr	w9, [sp, #32]
  404708:	orr	w0, w9, w8, lsl #10
  40470c:	ldr	w1, [sp, #28]
  404710:	ldr	x2, [sp, #8]
  404714:	mov	w3, #0x263                 	// #611
  404718:	adrp	x4, 407000 <add_automount+0x640>
  40471c:	add	x4, x4, #0xe2a
  404720:	adrp	x5, 407000 <add_automount+0x640>
  404724:	add	x5, x5, #0xe6c
  404728:	bl	401980 <log_internal_realm@plt>
  40472c:	str	w0, [sp]
  404730:	b	404748 <enumerate_partitions+0x1a4>
  404734:	ldr	w0, [sp, #28]
  404738:	bl	401990 <abs@plt>
  40473c:	mov	w8, wzr
  404740:	subs	w8, w8, w0, uxtb
  404744:	str	w8, [sp]
  404748:	ldr	w8, [sp]
  40474c:	str	w8, [sp, #20]
  404750:	ldr	w8, [sp, #20]
  404754:	stur	w8, [x29, #-4]
  404758:	mov	w8, #0x1                   	// #1
  40475c:	stur	w8, [x29, #-44]
  404760:	b	40491c <enumerate_partitions+0x378>
  404764:	ldur	x8, [x29, #-32]
  404768:	ldrb	w9, [x8, #392]
  40476c:	and	w9, w9, #0x1
  404770:	tbnz	w9, #0, 404778 <enumerate_partitions+0x1d4>
  404774:	b	4047a0 <enumerate_partitions+0x1fc>
  404778:	ldur	x8, [x29, #-32]
  40477c:	ldr	x0, [x8, #432]
  404780:	bl	4052e0 <add_swap>
  404784:	stur	w0, [x29, #-40]
  404788:	ldur	w9, [x29, #-40]
  40478c:	cmp	w9, #0x0
  404790:	cset	w9, ge  // ge = tcont
  404794:	tbnz	w9, #0, 4047a0 <enumerate_partitions+0x1fc>
  404798:	ldur	w8, [x29, #-40]
  40479c:	stur	w8, [x29, #-36]
  4047a0:	ldur	x8, [x29, #-32]
  4047a4:	ldrb	w9, [x8, #328]
  4047a8:	and	w9, w9, #0x1
  4047ac:	tbnz	w9, #0, 4047b4 <enumerate_partitions+0x210>
  4047b0:	b	4047dc <enumerate_partitions+0x238>
  4047b4:	ldur	x8, [x29, #-32]
  4047b8:	add	x0, x8, #0x148
  4047bc:	bl	4057f8 <add_xbootldr>
  4047c0:	stur	w0, [x29, #-40]
  4047c4:	ldur	w9, [x29, #-40]
  4047c8:	cmp	w9, #0x0
  4047cc:	cset	w9, ge  // ge = tcont
  4047d0:	tbnz	w9, #0, 4047dc <enumerate_partitions+0x238>
  4047d4:	ldur	w8, [x29, #-40]
  4047d8:	stur	w8, [x29, #-36]
  4047dc:	ldur	x8, [x29, #-32]
  4047e0:	ldrb	w9, [x8, #264]
  4047e4:	and	w9, w9, #0x1
  4047e8:	tbnz	w9, #0, 4047f0 <enumerate_partitions+0x24c>
  4047ec:	b	404828 <enumerate_partitions+0x284>
  4047f0:	ldur	x8, [x29, #-32]
  4047f4:	add	x0, x8, #0x108
  4047f8:	ldur	x8, [x29, #-32]
  4047fc:	ldrb	w9, [x8, #328]
  404800:	and	w9, w9, #0x1
  404804:	and	w1, w9, #0x1
  404808:	bl	405ac8 <add_esp>
  40480c:	stur	w0, [x29, #-40]
  404810:	ldur	w9, [x29, #-40]
  404814:	cmp	w9, #0x0
  404818:	cset	w9, ge  // ge = tcont
  40481c:	tbnz	w9, #0, 404828 <enumerate_partitions+0x284>
  404820:	ldur	w8, [x29, #-40]
  404824:	stur	w8, [x29, #-36]
  404828:	ldur	x8, [x29, #-32]
  40482c:	ldrb	w9, [x8, #136]
  404830:	and	w9, w9, #0x1
  404834:	tbnz	w9, #0, 40483c <enumerate_partitions+0x298>
  404838:	b	40487c <enumerate_partitions+0x2d8>
  40483c:	ldur	x8, [x29, #-32]
  404840:	add	x0, x8, #0x88
  404844:	adrp	x1, 407000 <add_automount+0x640>
  404848:	add	x1, x1, #0xe82
  40484c:	adrp	x2, 407000 <add_automount+0x640>
  404850:	add	x2, x2, #0xe87
  404854:	adrp	x3, 407000 <add_automount+0x640>
  404858:	add	x3, x3, #0xe8d
  40485c:	bl	4060f0 <add_partition_mount>
  404860:	stur	w0, [x29, #-40]
  404864:	ldur	w9, [x29, #-40]
  404868:	cmp	w9, #0x0
  40486c:	cset	w9, ge  // ge = tcont
  404870:	tbnz	w9, #0, 40487c <enumerate_partitions+0x2d8>
  404874:	ldur	w8, [x29, #-40]
  404878:	stur	w8, [x29, #-36]
  40487c:	ldur	x8, [x29, #-32]
  404880:	ldrb	w9, [x8, #200]
  404884:	and	w9, w9, #0x1
  404888:	tbnz	w9, #0, 404890 <enumerate_partitions+0x2ec>
  40488c:	b	4048d0 <enumerate_partitions+0x32c>
  404890:	ldur	x8, [x29, #-32]
  404894:	add	x0, x8, #0xc8
  404898:	adrp	x1, 407000 <add_automount+0x640>
  40489c:	add	x1, x1, #0xe9c
  4048a0:	adrp	x2, 407000 <add_automount+0x640>
  4048a4:	add	x2, x2, #0xea0
  4048a8:	adrp	x3, 407000 <add_automount+0x640>
  4048ac:	add	x3, x3, #0xea5
  4048b0:	bl	4060f0 <add_partition_mount>
  4048b4:	stur	w0, [x29, #-40]
  4048b8:	ldur	w9, [x29, #-40]
  4048bc:	cmp	w9, #0x0
  4048c0:	cset	w9, ge  // ge = tcont
  4048c4:	tbnz	w9, #0, 4048d0 <enumerate_partitions+0x32c>
  4048c8:	ldur	w8, [x29, #-40]
  4048cc:	stur	w8, [x29, #-36]
  4048d0:	ldur	x8, [x29, #-32]
  4048d4:	ldrb	w9, [x8, #8]
  4048d8:	and	w9, w9, #0x1
  4048dc:	tbnz	w9, #0, 4048e4 <enumerate_partitions+0x340>
  4048e0:	b	40490c <enumerate_partitions+0x368>
  4048e4:	ldur	x8, [x29, #-32]
  4048e8:	add	x0, x8, #0x8
  4048ec:	bl	40620c <add_root_rw>
  4048f0:	stur	w0, [x29, #-40]
  4048f4:	ldur	w9, [x29, #-40]
  4048f8:	cmp	w9, #0x0
  4048fc:	cset	w9, ge  // ge = tcont
  404900:	tbnz	w9, #0, 40490c <enumerate_partitions+0x368>
  404904:	ldur	w8, [x29, #-40]
  404908:	stur	w8, [x29, #-36]
  40490c:	ldur	w8, [x29, #-36]
  404910:	stur	w8, [x29, #-4]
  404914:	mov	w8, #0x1                   	// #1
  404918:	stur	w8, [x29, #-44]
  40491c:	sub	x0, x29, #0x20
  404920:	bl	404964 <dissected_image_unrefp>
  404924:	sub	x0, x29, #0x14
  404928:	bl	40493c <closep>
  40492c:	ldur	w0, [x29, #-4]
  404930:	ldp	x29, x30, [sp, #96]
  404934:	add	sp, sp, #0x70
  404938:	ret

000000000040493c <closep>:
  40493c:	sub	sp, sp, #0x20
  404940:	stp	x29, x30, [sp, #16]
  404944:	add	x29, sp, #0x10
  404948:	str	x0, [sp, #8]
  40494c:	ldr	x8, [sp, #8]
  404950:	ldr	w0, [x8]
  404954:	bl	401c00 <safe_close@plt>
  404958:	ldp	x29, x30, [sp, #16]
  40495c:	add	sp, sp, #0x20
  404960:	ret

0000000000404964 <dissected_image_unrefp>:
  404964:	sub	sp, sp, #0x20
  404968:	stp	x29, x30, [sp, #16]
  40496c:	add	x29, sp, #0x10
  404970:	str	x0, [sp, #8]
  404974:	ldr	x8, [sp, #8]
  404978:	ldr	x8, [x8]
  40497c:	cbz	x8, 40498c <dissected_image_unrefp+0x28>
  404980:	ldr	x8, [sp, #8]
  404984:	ldr	x0, [x8]
  404988:	bl	401c10 <dissected_image_unref@plt>
  40498c:	ldp	x29, x30, [sp, #16]
  404990:	add	sp, sp, #0x20
  404994:	ret

0000000000404998 <open_parent_devno>:
  404998:	sub	sp, sp, #0x1f0
  40499c:	stp	x29, x30, [sp, #464]
  4049a0:	str	x28, [sp, #480]
  4049a4:	add	x29, sp, #0x1d0
  4049a8:	sub	x8, x29, #0xd0
  4049ac:	mov	x9, xzr
  4049b0:	adrp	x10, 407000 <add_automount+0x640>
  4049b4:	add	x10, x10, #0xf0f
  4049b8:	adrp	x11, 407000 <add_automount+0x640>
  4049bc:	add	x11, x11, #0x3a8
  4049c0:	add	x11, x11, #0x3
  4049c4:	adrp	x12, 407000 <add_automount+0x640>
  4049c8:	add	x12, x12, #0xee3
  4049cc:	str	x0, [x8, #192]
  4049d0:	str	x1, [x8, #184]
  4049d4:	str	x9, [x8, #176]
  4049d8:	str	x8, [sp, #112]
  4049dc:	str	x10, [sp, #104]
  4049e0:	str	x11, [sp, #96]
  4049e4:	str	x12, [sp, #88]
  4049e8:	ldr	x8, [sp, #112]
  4049ec:	ldr	x9, [x8, #184]
  4049f0:	cmp	x9, #0x0
  4049f4:	cset	w10, ne  // ne = any
  4049f8:	mov	w11, #0x1                   	// #1
  4049fc:	eor	w10, w10, #0x1
  404a00:	eor	w10, w10, w11
  404a04:	eor	w10, w10, w11
  404a08:	and	w10, w10, #0x1
  404a0c:	mov	w0, w10
  404a10:	sxtw	x9, w0
  404a14:	cbz	x9, 404a3c <open_parent_devno+0xa4>
  404a18:	mov	w8, wzr
  404a1c:	mov	w0, w8
  404a20:	adrp	x1, 407000 <add_automount+0x640>
  404a24:	add	x1, x1, #0xebb
  404a28:	ldr	x2, [sp, #96]
  404a2c:	mov	w3, #0x21c                 	// #540
  404a30:	adrp	x4, 407000 <add_automount+0x640>
  404a34:	add	x4, x4, #0xebf
  404a38:	bl	4019e0 <log_assert_failed_realm@plt>
  404a3c:	ldr	x8, [sp, #112]
  404a40:	ldr	x2, [x8, #192]
  404a44:	sub	x0, x29, #0x20
  404a48:	mov	w1, #0x62                  	// #98
  404a4c:	bl	401c20 <sd_device_new_from_devnum@plt>
  404a50:	stur	w0, [x29, #-80]
  404a54:	ldur	w9, [x29, #-80]
  404a58:	cmp	w9, #0x0
  404a5c:	cset	w9, ge  // ge = tcont
  404a60:	tbnz	w9, #0, 404af0 <open_parent_devno+0x158>
  404a64:	mov	w8, #0x7                   	// #7
  404a68:	stur	w8, [x29, #-84]
  404a6c:	ldur	w8, [x29, #-80]
  404a70:	stur	w8, [x29, #-88]
  404a74:	stur	wzr, [x29, #-92]
  404a78:	ldur	w0, [x29, #-92]
  404a7c:	bl	401970 <log_get_max_level_realm@plt>
  404a80:	ldur	w8, [x29, #-84]
  404a84:	and	w8, w8, #0x7
  404a88:	cmp	w0, w8
  404a8c:	b.lt	404ac0 <open_parent_devno+0x128>  // b.tstop
  404a90:	ldur	w8, [x29, #-92]
  404a94:	ldur	w9, [x29, #-84]
  404a98:	orr	w0, w9, w8, lsl #10
  404a9c:	ldur	w1, [x29, #-88]
  404aa0:	ldr	x2, [sp, #96]
  404aa4:	mov	w3, #0x220                 	// #544
  404aa8:	ldr	x4, [sp, #88]
  404aac:	adrp	x5, 407000 <add_automount+0x640>
  404ab0:	add	x5, x5, #0xef5
  404ab4:	bl	401980 <log_internal_realm@plt>
  404ab8:	str	w0, [sp, #84]
  404abc:	b	404ad4 <open_parent_devno+0x13c>
  404ac0:	ldur	w0, [x29, #-88]
  404ac4:	bl	401990 <abs@plt>
  404ac8:	mov	w8, wzr
  404acc:	subs	w8, w8, w0, uxtb
  404ad0:	str	w8, [sp, #84]
  404ad4:	ldr	w8, [sp, #84]
  404ad8:	stur	w8, [x29, #-96]
  404adc:	ldur	w8, [x29, #-96]
  404ae0:	stur	w8, [x29, #-4]
  404ae4:	mov	w8, #0x1                   	// #1
  404ae8:	stur	w8, [x29, #-100]
  404aec:	b	4052c4 <open_parent_devno+0x92c>
  404af0:	ldr	x8, [sp, #112]
  404af4:	ldr	x0, [x8, #176]
  404af8:	sub	x1, x29, #0x28
  404afc:	bl	401c30 <sd_device_get_devname@plt>
  404b00:	cmp	w0, #0x0
  404b04:	cset	w9, ge  // ge = tcont
  404b08:	tbnz	w9, #0, 404c6c <open_parent_devno+0x2d4>
  404b0c:	ldr	x8, [sp, #112]
  404b10:	ldr	x0, [x8, #176]
  404b14:	sub	x1, x29, #0x28
  404b18:	bl	401c40 <sd_device_get_syspath@plt>
  404b1c:	stur	w0, [x29, #-80]
  404b20:	ldur	w9, [x29, #-80]
  404b24:	cmp	w9, #0x0
  404b28:	cset	w9, ge  // ge = tcont
  404b2c:	tbnz	w9, #0, 404c6c <open_parent_devno+0x2d4>
  404b30:	mov	x8, xzr
  404b34:	ldr	x9, [sp, #112]
  404b38:	str	x8, [x9, #96]
  404b3c:	ldr	x8, [x9, #176]
  404b40:	str	x8, [x9, #88]
  404b44:	mov	w10, #0x7                   	// #7
  404b48:	stur	w10, [x29, #-124]
  404b4c:	ldur	w10, [x29, #-80]
  404b50:	stur	w10, [x29, #-128]
  404b54:	ldr	x8, [x9, #88]
  404b58:	cbz	x8, 404ba0 <open_parent_devno+0x208>
  404b5c:	mov	w8, wzr
  404b60:	mov	w0, w8
  404b64:	bl	401970 <log_get_max_level_realm@plt>
  404b68:	ldur	w8, [x29, #-124]
  404b6c:	cmp	w0, w8
  404b70:	cset	w8, ge  // ge = tcont
  404b74:	mov	w9, #0x1                   	// #1
  404b78:	eor	w8, w8, #0x1
  404b7c:	eor	w8, w8, w9
  404b80:	and	w8, w8, #0x1
  404b84:	mov	w1, w8
  404b88:	sxtw	x10, w1
  404b8c:	cbz	x10, 404ba0 <open_parent_devno+0x208>
  404b90:	ldr	x8, [sp, #112]
  404b94:	ldr	x0, [x8, #88]
  404b98:	sub	x1, x29, #0x70
  404b9c:	bl	401c50 <sd_device_get_sysname@plt>
  404ba0:	ldur	w0, [x29, #-124]
  404ba4:	ldur	w1, [x29, #-128]
  404ba8:	ldr	x8, [sp, #112]
  404bac:	ldr	x9, [x8, #96]
  404bb0:	mov	x10, xzr
  404bb4:	cmp	x9, #0x0
  404bb8:	ldr	x9, [sp, #104]
  404bbc:	csel	x5, x9, x10, ne  // ne = any
  404bc0:	ldr	x6, [x8, #96]
  404bc4:	ldr	x11, [x8, #192]
  404bc8:	str	w0, [sp, #80]
  404bcc:	mov	x0, x11
  404bd0:	str	w1, [sp, #76]
  404bd4:	str	x10, [sp, #64]
  404bd8:	str	x5, [sp, #56]
  404bdc:	str	x6, [sp, #48]
  404be0:	bl	401c60 <gnu_dev_major@plt>
  404be4:	ldr	x8, [sp, #112]
  404be8:	ldr	x9, [x8, #192]
  404bec:	str	w0, [sp, #44]
  404bf0:	mov	x0, x9
  404bf4:	bl	401c70 <gnu_dev_minor@plt>
  404bf8:	ldr	w12, [sp, #80]
  404bfc:	str	w0, [sp, #40]
  404c00:	mov	w0, w12
  404c04:	ldr	w1, [sp, #76]
  404c08:	ldr	x2, [sp, #96]
  404c0c:	mov	w3, #0x225                 	// #549
  404c10:	ldr	x4, [sp, #88]
  404c14:	ldr	x5, [sp, #56]
  404c18:	ldr	x6, [sp, #48]
  404c1c:	ldr	x7, [sp, #64]
  404c20:	mov	x8, sp
  404c24:	ldr	x9, [sp, #64]
  404c28:	str	x9, [x8]
  404c2c:	mov	x8, sp
  404c30:	adrp	x10, 407000 <add_automount+0x640>
  404c34:	add	x10, x10, #0xf17
  404c38:	str	x10, [x8, #8]
  404c3c:	mov	x8, sp
  404c40:	ldr	w13, [sp, #44]
  404c44:	str	w13, [x8, #16]
  404c48:	mov	x8, sp
  404c4c:	ldr	w14, [sp, #40]
  404c50:	str	w14, [x8, #24]
  404c54:	bl	401c80 <log_object_internal@plt>
  404c58:	stur	w0, [x29, #-132]
  404c5c:	stur	wzr, [x29, #-4]
  404c60:	mov	w12, #0x1                   	// #1
  404c64:	stur	w12, [x29, #-100]
  404c68:	b	4052c4 <open_parent_devno+0x92c>
  404c6c:	ldr	x8, [sp, #112]
  404c70:	ldr	x0, [x8, #176]
  404c74:	sub	x1, x29, #0x40
  404c78:	bl	401c90 <sd_device_get_parent@plt>
  404c7c:	stur	w0, [x29, #-80]
  404c80:	ldur	w9, [x29, #-80]
  404c84:	cmp	w9, #0x0
  404c88:	cset	w9, ge  // ge = tcont
  404c8c:	tbnz	w9, #0, 404d64 <open_parent_devno+0x3cc>
  404c90:	mov	x8, xzr
  404c94:	ldr	x9, [sp, #112]
  404c98:	str	x8, [x9, #64]
  404c9c:	ldr	x8, [x9, #176]
  404ca0:	str	x8, [x9, #56]
  404ca4:	mov	w10, #0x7                   	// #7
  404ca8:	stur	w10, [x29, #-156]
  404cac:	ldur	w10, [x29, #-80]
  404cb0:	stur	w10, [x29, #-160]
  404cb4:	ldr	x8, [x9, #56]
  404cb8:	cbz	x8, 404d00 <open_parent_devno+0x368>
  404cbc:	mov	w8, wzr
  404cc0:	mov	w0, w8
  404cc4:	bl	401970 <log_get_max_level_realm@plt>
  404cc8:	ldur	w8, [x29, #-156]
  404ccc:	cmp	w0, w8
  404cd0:	cset	w8, ge  // ge = tcont
  404cd4:	mov	w9, #0x1                   	// #1
  404cd8:	eor	w8, w8, #0x1
  404cdc:	eor	w8, w8, w9
  404ce0:	and	w8, w8, #0x1
  404ce4:	mov	w1, w8
  404ce8:	sxtw	x10, w1
  404cec:	cbz	x10, 404d00 <open_parent_devno+0x368>
  404cf0:	ldr	x8, [sp, #112]
  404cf4:	ldr	x0, [x8, #56]
  404cf8:	sub	x1, x29, #0x90
  404cfc:	bl	401c50 <sd_device_get_sysname@plt>
  404d00:	ldur	w0, [x29, #-156]
  404d04:	ldur	w1, [x29, #-160]
  404d08:	ldr	x8, [sp, #112]
  404d0c:	ldr	x9, [x8, #64]
  404d10:	mov	x10, xzr
  404d14:	cmp	x9, #0x0
  404d18:	ldr	x9, [sp, #104]
  404d1c:	csel	x5, x9, x10, ne  // ne = any
  404d20:	ldr	x6, [x8, #64]
  404d24:	ldr	x2, [sp, #96]
  404d28:	mov	w3, #0x22c                 	// #556
  404d2c:	ldr	x4, [sp, #88]
  404d30:	mov	x7, x10
  404d34:	mov	x11, sp
  404d38:	str	x10, [x11]
  404d3c:	mov	x10, sp
  404d40:	adrp	x11, 407000 <add_automount+0x640>
  404d44:	add	x11, x11, #0xf47
  404d48:	str	x11, [x10, #8]
  404d4c:	bl	401c80 <log_object_internal@plt>
  404d50:	stur	w0, [x29, #-164]
  404d54:	stur	wzr, [x29, #-4]
  404d58:	mov	w12, #0x1                   	// #1
  404d5c:	stur	w12, [x29, #-100]
  404d60:	b	4052c4 <open_parent_devno+0x92c>
  404d64:	ldr	x8, [sp, #112]
  404d68:	ldr	x0, [x8, #144]
  404d6c:	sub	x1, x29, #0x30
  404d70:	bl	401ca0 <sd_device_get_devtype@plt>
  404d74:	stur	w0, [x29, #-80]
  404d78:	ldur	w9, [x29, #-80]
  404d7c:	cmp	w9, #0x0
  404d80:	cset	w9, ge  // ge = tcont
  404d84:	tbnz	w9, #0, 404e5c <open_parent_devno+0x4c4>
  404d88:	mov	x8, xzr
  404d8c:	ldr	x9, [sp, #112]
  404d90:	str	x8, [x9, #32]
  404d94:	ldr	x8, [x9, #144]
  404d98:	str	x8, [x9, #24]
  404d9c:	mov	w10, #0x7                   	// #7
  404da0:	stur	w10, [x29, #-188]
  404da4:	ldur	w10, [x29, #-80]
  404da8:	stur	w10, [x29, #-192]
  404dac:	ldr	x8, [x9, #24]
  404db0:	cbz	x8, 404df8 <open_parent_devno+0x460>
  404db4:	mov	w8, wzr
  404db8:	mov	w0, w8
  404dbc:	bl	401970 <log_get_max_level_realm@plt>
  404dc0:	ldur	w8, [x29, #-188]
  404dc4:	cmp	w0, w8
  404dc8:	cset	w8, ge  // ge = tcont
  404dcc:	mov	w9, #0x1                   	// #1
  404dd0:	eor	w8, w8, #0x1
  404dd4:	eor	w8, w8, w9
  404dd8:	and	w8, w8, #0x1
  404ddc:	mov	w1, w8
  404de0:	sxtw	x10, w1
  404de4:	cbz	x10, 404df8 <open_parent_devno+0x460>
  404de8:	ldr	x8, [sp, #112]
  404dec:	ldr	x0, [x8, #24]
  404df0:	sub	x1, x29, #0xb0
  404df4:	bl	401c50 <sd_device_get_sysname@plt>
  404df8:	ldur	w0, [x29, #-188]
  404dfc:	ldur	w1, [x29, #-192]
  404e00:	ldr	x8, [sp, #112]
  404e04:	ldr	x9, [x8, #32]
  404e08:	mov	x10, xzr
  404e0c:	cmp	x9, #0x0
  404e10:	ldr	x9, [sp, #104]
  404e14:	csel	x5, x9, x10, ne  // ne = any
  404e18:	ldr	x6, [x8, #32]
  404e1c:	ldr	x2, [sp, #96]
  404e20:	mov	w3, #0x233                 	// #563
  404e24:	ldr	x4, [sp, #88]
  404e28:	mov	x7, x10
  404e2c:	mov	x11, sp
  404e30:	str	x10, [x11]
  404e34:	mov	x10, sp
  404e38:	adrp	x11, 407000 <add_automount+0x640>
  404e3c:	add	x11, x11, #0xf6e
  404e40:	str	x11, [x10, #8]
  404e44:	bl	401c80 <log_object_internal@plt>
  404e48:	stur	w0, [x29, #-196]
  404e4c:	stur	wzr, [x29, #-4]
  404e50:	mov	w12, #0x1                   	// #1
  404e54:	stur	w12, [x29, #-100]
  404e58:	b	4052c4 <open_parent_devno+0x92c>
  404e5c:	ldr	x8, [sp, #112]
  404e60:	ldr	x0, [x8, #160]
  404e64:	adrp	x1, 407000 <add_automount+0x640>
  404e68:	add	x1, x1, #0xf9e
  404e6c:	bl	401a40 <strcmp@plt>
  404e70:	cbz	w0, 404f40 <open_parent_devno+0x5a8>
  404e74:	mov	x8, xzr
  404e78:	ldr	x9, [sp, #112]
  404e7c:	str	x8, [x9]
  404e80:	ldr	x8, [x9, #144]
  404e84:	stur	x8, [x29, #-216]
  404e88:	mov	w10, #0x7                   	// #7
  404e8c:	stur	w10, [x29, #-220]
  404e90:	stur	wzr, [x29, #-224]
  404e94:	ldur	x8, [x29, #-216]
  404e98:	cbz	x8, 404edc <open_parent_devno+0x544>
  404e9c:	mov	w8, wzr
  404ea0:	mov	w0, w8
  404ea4:	bl	401970 <log_get_max_level_realm@plt>
  404ea8:	ldur	w8, [x29, #-220]
  404eac:	cmp	w0, w8
  404eb0:	cset	w8, ge  // ge = tcont
  404eb4:	mov	w9, #0x1                   	// #1
  404eb8:	eor	w8, w8, #0x1
  404ebc:	eor	w8, w8, w9
  404ec0:	and	w8, w8, #0x1
  404ec4:	mov	w1, w8
  404ec8:	sxtw	x10, w1
  404ecc:	cbz	x10, 404edc <open_parent_devno+0x544>
  404ed0:	ldur	x0, [x29, #-216]
  404ed4:	sub	x1, x29, #0xd0
  404ed8:	bl	401c50 <sd_device_get_sysname@plt>
  404edc:	ldur	w0, [x29, #-220]
  404ee0:	ldur	w1, [x29, #-224]
  404ee4:	ldr	x8, [sp, #112]
  404ee8:	ldr	x9, [x8]
  404eec:	mov	x10, xzr
  404ef0:	cmp	x9, #0x0
  404ef4:	ldr	x9, [sp, #104]
  404ef8:	csel	x5, x9, x10, ne  // ne = any
  404efc:	ldr	x6, [x8]
  404f00:	ldr	x2, [sp, #96]
  404f04:	mov	w3, #0x239                 	// #569
  404f08:	ldr	x4, [sp, #88]
  404f0c:	mov	x7, x10
  404f10:	mov	x11, sp
  404f14:	str	x10, [x11]
  404f18:	mov	x10, sp
  404f1c:	adrp	x11, 407000 <add_automount+0x640>
  404f20:	add	x11, x11, #0xfa3
  404f24:	str	x11, [x10, #8]
  404f28:	bl	401c80 <log_object_internal@plt>
  404f2c:	stur	w0, [x29, #-228]
  404f30:	stur	wzr, [x29, #-4]
  404f34:	mov	w12, #0x1                   	// #1
  404f38:	stur	w12, [x29, #-100]
  404f3c:	b	4052c4 <open_parent_devno+0x92c>
  404f40:	ldr	x8, [sp, #112]
  404f44:	ldr	x0, [x8, #144]
  404f48:	sub	x1, x29, #0x38
  404f4c:	bl	401c30 <sd_device_get_devname@plt>
  404f50:	stur	w0, [x29, #-80]
  404f54:	ldur	w9, [x29, #-80]
  404f58:	cmp	w9, #0x0
  404f5c:	cset	w9, ge  // ge = tcont
  404f60:	tbnz	w9, #0, 405030 <open_parent_devno+0x698>
  404f64:	mov	x8, xzr
  404f68:	str	x8, [sp, #224]
  404f6c:	ldr	x8, [sp, #112]
  404f70:	ldr	x9, [x8, #144]
  404f74:	str	x9, [sp, #216]
  404f78:	mov	w10, #0x7                   	// #7
  404f7c:	str	w10, [sp, #212]
  404f80:	ldur	w10, [x29, #-80]
  404f84:	str	w10, [sp, #208]
  404f88:	ldr	x9, [sp, #216]
  404f8c:	cbz	x9, 404fd0 <open_parent_devno+0x638>
  404f90:	mov	w8, wzr
  404f94:	mov	w0, w8
  404f98:	bl	401970 <log_get_max_level_realm@plt>
  404f9c:	ldr	w8, [sp, #212]
  404fa0:	cmp	w0, w8
  404fa4:	cset	w8, ge  // ge = tcont
  404fa8:	mov	w9, #0x1                   	// #1
  404fac:	eor	w8, w8, #0x1
  404fb0:	eor	w8, w8, w9
  404fb4:	and	w8, w8, #0x1
  404fb8:	mov	w1, w8
  404fbc:	sxtw	x10, w1
  404fc0:	cbz	x10, 404fd0 <open_parent_devno+0x638>
  404fc4:	ldr	x0, [sp, #216]
  404fc8:	add	x1, sp, #0xe0
  404fcc:	bl	401c50 <sd_device_get_sysname@plt>
  404fd0:	ldr	w0, [sp, #212]
  404fd4:	ldr	w1, [sp, #208]
  404fd8:	ldr	x8, [sp, #224]
  404fdc:	mov	x9, xzr
  404fe0:	cmp	x8, #0x0
  404fe4:	ldr	x8, [sp, #104]
  404fe8:	csel	x5, x8, x9, ne  // ne = any
  404fec:	ldr	x6, [sp, #224]
  404ff0:	ldr	x2, [sp, #96]
  404ff4:	mov	w3, #0x240                 	// #576
  404ff8:	ldr	x4, [sp, #88]
  404ffc:	mov	x7, x9
  405000:	mov	x10, sp
  405004:	str	x9, [x10]
  405008:	mov	x9, sp
  40500c:	adrp	x10, 407000 <add_automount+0x640>
  405010:	add	x10, x10, #0xfc6
  405014:	str	x10, [x9, #8]
  405018:	bl	401c80 <log_object_internal@plt>
  40501c:	str	w0, [sp, #204]
  405020:	stur	wzr, [x29, #-4]
  405024:	mov	w11, #0x1                   	// #1
  405028:	stur	w11, [x29, #-100]
  40502c:	b	4052c4 <open_parent_devno+0x92c>
  405030:	mov	x8, xzr
  405034:	str	x8, [sp, #192]
  405038:	ldr	x8, [sp, #112]
  40503c:	ldr	x9, [x8, #176]
  405040:	str	x9, [sp, #184]
  405044:	mov	w10, #0x7                   	// #7
  405048:	str	w10, [sp, #180]
  40504c:	str	wzr, [sp, #176]
  405050:	ldr	x9, [sp, #184]
  405054:	cbz	x9, 405098 <open_parent_devno+0x700>
  405058:	mov	w8, wzr
  40505c:	mov	w0, w8
  405060:	bl	401970 <log_get_max_level_realm@plt>
  405064:	ldr	w8, [sp, #180]
  405068:	cmp	w0, w8
  40506c:	cset	w8, ge  // ge = tcont
  405070:	mov	w9, #0x1                   	// #1
  405074:	eor	w8, w8, #0x1
  405078:	eor	w8, w8, w9
  40507c:	and	w8, w8, #0x1
  405080:	mov	w1, w8
  405084:	sxtw	x10, w1
  405088:	cbz	x10, 405098 <open_parent_devno+0x700>
  40508c:	ldr	x0, [sp, #184]
  405090:	add	x1, sp, #0xc0
  405094:	bl	401c50 <sd_device_get_sysname@plt>
  405098:	ldr	w0, [sp, #180]
  40509c:	ldr	w1, [sp, #176]
  4050a0:	ldr	x8, [sp, #192]
  4050a4:	mov	x9, xzr
  4050a8:	cmp	x8, #0x0
  4050ac:	ldr	x8, [sp, #104]
  4050b0:	csel	x5, x8, x9, ne  // ne = any
  4050b4:	ldr	x6, [sp, #192]
  4050b8:	ldr	x10, [sp, #112]
  4050bc:	ldr	x11, [x10, #152]
  4050c0:	ldr	x2, [sp, #96]
  4050c4:	mov	w3, #0x244                 	// #580
  4050c8:	ldr	x4, [sp, #88]
  4050cc:	mov	x7, x9
  4050d0:	mov	x12, sp
  4050d4:	str	x9, [x12]
  4050d8:	mov	x9, sp
  4050dc:	adrp	x12, 407000 <add_automount+0x640>
  4050e0:	add	x12, x12, #0xffc
  4050e4:	str	x12, [x9, #8]
  4050e8:	mov	x9, sp
  4050ec:	str	x11, [x9, #16]
  4050f0:	bl	401c80 <log_object_internal@plt>
  4050f4:	str	w0, [sp, #172]
  4050f8:	ldr	x8, [sp, #112]
  4050fc:	ldr	x0, [x8, #144]
  405100:	sub	x1, x29, #0x48
  405104:	bl	401cb0 <sd_device_get_devnum@plt>
  405108:	stur	w0, [x29, #-80]
  40510c:	ldur	w13, [x29, #-80]
  405110:	cmp	w13, #0x0
  405114:	cset	w13, ge  // ge = tcont
  405118:	tbnz	w13, #0, 4051e8 <open_parent_devno+0x850>
  40511c:	mov	x8, xzr
  405120:	str	x8, [sp, #160]
  405124:	ldr	x8, [sp, #112]
  405128:	ldr	x9, [x8, #144]
  40512c:	str	x9, [sp, #152]
  405130:	mov	w10, #0x7                   	// #7
  405134:	str	w10, [sp, #148]
  405138:	ldur	w10, [x29, #-80]
  40513c:	str	w10, [sp, #144]
  405140:	ldr	x9, [sp, #152]
  405144:	cbz	x9, 405188 <open_parent_devno+0x7f0>
  405148:	mov	w8, wzr
  40514c:	mov	w0, w8
  405150:	bl	401970 <log_get_max_level_realm@plt>
  405154:	ldr	w8, [sp, #148]
  405158:	cmp	w0, w8
  40515c:	cset	w8, ge  // ge = tcont
  405160:	mov	w9, #0x1                   	// #1
  405164:	eor	w8, w8, #0x1
  405168:	eor	w8, w8, w9
  40516c:	and	w8, w8, #0x1
  405170:	mov	w1, w8
  405174:	sxtw	x10, w1
  405178:	cbz	x10, 405188 <open_parent_devno+0x7f0>
  40517c:	ldr	x0, [sp, #152]
  405180:	add	x1, sp, #0xa0
  405184:	bl	401c50 <sd_device_get_sysname@plt>
  405188:	ldr	w0, [sp, #148]
  40518c:	ldr	w1, [sp, #144]
  405190:	ldr	x8, [sp, #160]
  405194:	mov	x9, xzr
  405198:	cmp	x8, #0x0
  40519c:	ldr	x8, [sp, #104]
  4051a0:	csel	x5, x8, x9, ne  // ne = any
  4051a4:	ldr	x6, [sp, #160]
  4051a8:	ldr	x2, [sp, #96]
  4051ac:	mov	w3, #0x248                 	// #584
  4051b0:	ldr	x4, [sp, #88]
  4051b4:	mov	x7, x9
  4051b8:	mov	x10, sp
  4051bc:	str	x9, [x10]
  4051c0:	mov	x9, sp
  4051c4:	adrp	x10, 408000 <_fini+0xc7c>
  4051c8:	add	x10, x10, #0xc
  4051cc:	str	x10, [x9, #8]
  4051d0:	bl	401c80 <log_object_internal@plt>
  4051d4:	str	w0, [sp, #140]
  4051d8:	stur	wzr, [x29, #-4]
  4051dc:	mov	w11, #0x1                   	// #1
  4051e0:	stur	w11, [x29, #-100]
  4051e4:	b	4052c4 <open_parent_devno+0x92c>
  4051e8:	ldr	x8, [sp, #112]
  4051ec:	ldr	x0, [x8, #152]
  4051f0:	mov	w1, #0x100                 	// #256
  4051f4:	movk	w1, #0x8, lsl #16
  4051f8:	bl	401cc0 <open64@plt>
  4051fc:	stur	w0, [x29, #-76]
  405200:	ldur	w9, [x29, #-76]
  405204:	cmp	w9, #0x0
  405208:	cset	w9, ge  // ge = tcont
  40520c:	tbnz	w9, #0, 4052a8 <open_parent_devno+0x910>
  405210:	mov	w8, #0x3                   	// #3
  405214:	str	w8, [sp, #136]
  405218:	bl	401af0 <__errno_location@plt>
  40521c:	ldr	w8, [x0]
  405220:	str	w8, [sp, #132]
  405224:	str	wzr, [sp, #128]
  405228:	ldr	w0, [sp, #128]
  40522c:	bl	401970 <log_get_max_level_realm@plt>
  405230:	ldr	w8, [sp, #136]
  405234:	and	w8, w8, #0x7
  405238:	cmp	w0, w8
  40523c:	b.lt	405278 <open_parent_devno+0x8e0>  // b.tstop
  405240:	ldr	w8, [sp, #128]
  405244:	ldr	w9, [sp, #136]
  405248:	orr	w0, w9, w8, lsl #10
  40524c:	ldr	w1, [sp, #132]
  405250:	ldr	x10, [sp, #112]
  405254:	ldr	x6, [x10, #152]
  405258:	ldr	x2, [sp, #96]
  40525c:	mov	w3, #0x24e                 	// #590
  405260:	ldr	x4, [sp, #88]
  405264:	adrp	x5, 408000 <_fini+0xc7c>
  405268:	add	x5, x5, #0x45
  40526c:	bl	401980 <log_internal_realm@plt>
  405270:	str	w0, [sp, #36]
  405274:	b	40528c <open_parent_devno+0x8f4>
  405278:	ldr	w0, [sp, #132]
  40527c:	bl	401990 <abs@plt>
  405280:	mov	w8, wzr
  405284:	subs	w8, w8, w0, uxtb
  405288:	str	w8, [sp, #36]
  40528c:	ldr	w8, [sp, #36]
  405290:	str	w8, [sp, #124]
  405294:	ldr	w8, [sp, #124]
  405298:	stur	w8, [x29, #-4]
  40529c:	mov	w8, #0x1                   	// #1
  4052a0:	stur	w8, [x29, #-100]
  4052a4:	b	4052c4 <open_parent_devno+0x92c>
  4052a8:	ldur	w8, [x29, #-76]
  4052ac:	ldr	x9, [sp, #112]
  4052b0:	ldr	x10, [x9, #184]
  4052b4:	str	w8, [x10]
  4052b8:	mov	w8, #0x1                   	// #1
  4052bc:	stur	w8, [x29, #-4]
  4052c0:	stur	w8, [x29, #-100]
  4052c4:	sub	x0, x29, #0x20
  4052c8:	bl	406734 <sd_device_unrefp>
  4052cc:	ldur	w0, [x29, #-4]
  4052d0:	ldr	x28, [sp, #480]
  4052d4:	ldp	x29, x30, [sp, #464]
  4052d8:	add	sp, sp, #0x1f0
  4052dc:	ret

00000000004052e0 <add_swap>:
  4052e0:	sub	sp, sp, #0xd0
  4052e4:	stp	x29, x30, [sp, #192]
  4052e8:	add	x29, sp, #0xc0
  4052ec:	mov	x8, xzr
  4052f0:	adrp	x9, 407000 <add_automount+0x640>
  4052f4:	add	x9, x9, #0x3a8
  4052f8:	add	x9, x9, #0x3
  4052fc:	adrp	x10, 408000 <_fini+0xc7c>
  405300:	add	x10, x10, #0x80
  405304:	stur	x0, [x29, #-16]
  405308:	stur	x8, [x29, #-24]
  40530c:	stur	x8, [x29, #-32]
  405310:	stur	x8, [x29, #-40]
  405314:	str	x9, [sp, #40]
  405318:	str	x10, [sp, #32]
  40531c:	ldur	x8, [x29, #-16]
  405320:	cmp	x8, #0x0
  405324:	cset	w9, ne  // ne = any
  405328:	mov	w10, #0x1                   	// #1
  40532c:	eor	w9, w9, #0x1
  405330:	eor	w9, w9, w10
  405334:	eor	w9, w9, w10
  405338:	and	w9, w9, #0x1
  40533c:	mov	w0, w9
  405340:	sxtw	x8, w0
  405344:	cbz	x8, 40536c <add_swap+0x8c>
  405348:	mov	w8, wzr
  40534c:	mov	w0, w8
  405350:	adrp	x1, 408000 <_fini+0xc7c>
  405354:	add	x1, x1, #0x5b
  405358:	ldr	x2, [sp, #40]
  40535c:	mov	w3, #0x11a                 	// #282
  405360:	adrp	x4, 408000 <_fini+0xc7c>
  405364:	add	x4, x4, #0x60
  405368:	bl	4019e0 <log_assert_failed_realm@plt>
  40536c:	adrp	x0, 408000 <_fini+0xc7c>
  405370:	add	x0, x0, #0x7b
  405374:	bl	401cd0 <fstab_has_fstype@plt>
  405378:	stur	w0, [x29, #-44]
  40537c:	ldur	w8, [x29, #-44]
  405380:	cmp	w8, #0x0
  405384:	cset	w8, ge  // ge = tcont
  405388:	tbnz	w8, #0, 405418 <add_swap+0x138>
  40538c:	mov	w8, #0x3                   	// #3
  405390:	stur	w8, [x29, #-48]
  405394:	ldur	w8, [x29, #-44]
  405398:	stur	w8, [x29, #-52]
  40539c:	stur	wzr, [x29, #-56]
  4053a0:	ldur	w0, [x29, #-56]
  4053a4:	bl	401970 <log_get_max_level_realm@plt>
  4053a8:	ldur	w8, [x29, #-48]
  4053ac:	and	w8, w8, #0x7
  4053b0:	cmp	w0, w8
  4053b4:	b.lt	4053e8 <add_swap+0x108>  // b.tstop
  4053b8:	ldur	w8, [x29, #-56]
  4053bc:	ldur	w9, [x29, #-48]
  4053c0:	orr	w0, w9, w8, lsl #10
  4053c4:	ldur	w1, [x29, #-52]
  4053c8:	ldr	x2, [sp, #40]
  4053cc:	mov	w3, #0x11f                 	// #287
  4053d0:	ldr	x4, [sp, #32]
  4053d4:	adrp	x5, 408000 <_fini+0xc7c>
  4053d8:	add	x5, x5, #0x89
  4053dc:	bl	401980 <log_internal_realm@plt>
  4053e0:	str	w0, [sp, #28]
  4053e4:	b	4053fc <add_swap+0x11c>
  4053e8:	ldur	w0, [x29, #-52]
  4053ec:	bl	401990 <abs@plt>
  4053f0:	mov	w8, wzr
  4053f4:	subs	w8, w8, w0, uxtb
  4053f8:	str	w8, [sp, #28]
  4053fc:	ldr	w8, [sp, #28]
  405400:	stur	w8, [x29, #-60]
  405404:	ldur	w8, [x29, #-60]
  405408:	stur	w8, [x29, #-4]
  40540c:	mov	w8, #0x1                   	// #1
  405410:	stur	w8, [x29, #-64]
  405414:	b	4057d0 <add_swap+0x4f0>
  405418:	ldur	w8, [x29, #-44]
  40541c:	cmp	w8, #0x0
  405420:	cset	w8, le
  405424:	tbnz	w8, #0, 4054ac <add_swap+0x1cc>
  405428:	mov	w8, #0x7                   	// #7
  40542c:	stur	w8, [x29, #-68]
  405430:	stur	wzr, [x29, #-72]
  405434:	stur	wzr, [x29, #-76]
  405438:	ldur	w0, [x29, #-76]
  40543c:	bl	401970 <log_get_max_level_realm@plt>
  405440:	ldur	w8, [x29, #-68]
  405444:	and	w8, w8, #0x7
  405448:	cmp	w0, w8
  40544c:	b.lt	405480 <add_swap+0x1a0>  // b.tstop
  405450:	ldur	w8, [x29, #-76]
  405454:	ldur	w9, [x29, #-68]
  405458:	orr	w0, w9, w8, lsl #10
  40545c:	ldur	w1, [x29, #-72]
  405460:	ldr	x2, [sp, #40]
  405464:	mov	w3, #0x121                 	// #289
  405468:	ldr	x4, [sp, #32]
  40546c:	adrp	x5, 408000 <_fini+0xc7c>
  405470:	add	x5, x5, #0xa3
  405474:	bl	401980 <log_internal_realm@plt>
  405478:	str	w0, [sp, #24]
  40547c:	b	405494 <add_swap+0x1b4>
  405480:	ldur	w0, [x29, #-72]
  405484:	bl	401990 <abs@plt>
  405488:	mov	w8, wzr
  40548c:	subs	w8, w8, w0, uxtb
  405490:	str	w8, [sp, #24]
  405494:	ldr	w8, [sp, #24]
  405498:	stur	w8, [x29, #-80]
  40549c:	stur	wzr, [x29, #-4]
  4054a0:	mov	w8, #0x1                   	// #1
  4054a4:	stur	w8, [x29, #-64]
  4054a8:	b	4057d0 <add_swap+0x4f0>
  4054ac:	mov	w8, #0x7                   	// #7
  4054b0:	stur	w8, [x29, #-84]
  4054b4:	stur	wzr, [x29, #-88]
  4054b8:	stur	wzr, [x29, #-92]
  4054bc:	ldur	w0, [x29, #-92]
  4054c0:	bl	401970 <log_get_max_level_realm@plt>
  4054c4:	ldur	w8, [x29, #-84]
  4054c8:	and	w8, w8, #0x7
  4054cc:	cmp	w0, w8
  4054d0:	b.lt	405508 <add_swap+0x228>  // b.tstop
  4054d4:	ldur	w8, [x29, #-92]
  4054d8:	ldur	w9, [x29, #-84]
  4054dc:	orr	w0, w9, w8, lsl #10
  4054e0:	ldur	w1, [x29, #-88]
  4054e4:	ldur	x6, [x29, #-16]
  4054e8:	ldr	x2, [sp, #40]
  4054ec:	mov	w3, #0x125                 	// #293
  4054f0:	ldr	x4, [sp, #32]
  4054f4:	adrp	x5, 408000 <_fini+0xc7c>
  4054f8:	add	x5, x5, #0xc6
  4054fc:	bl	401980 <log_internal_realm@plt>
  405500:	str	w0, [sp, #20]
  405504:	b	40551c <add_swap+0x23c>
  405508:	ldur	w0, [x29, #-88]
  40550c:	bl	401990 <abs@plt>
  405510:	mov	w8, wzr
  405514:	subs	w8, w8, w0, uxtb
  405518:	str	w8, [sp, #20]
  40551c:	ldr	w8, [sp, #20]
  405520:	str	w8, [sp, #96]
  405524:	ldur	x0, [x29, #-16]
  405528:	adrp	x1, 408000 <_fini+0xc7c>
  40552c:	add	x1, x1, #0xd6
  405530:	sub	x2, x29, #0x18
  405534:	bl	401ab0 <unit_name_from_path@plt>
  405538:	stur	w0, [x29, #-44]
  40553c:	ldur	w8, [x29, #-44]
  405540:	cmp	w8, #0x0
  405544:	cset	w8, ge  // ge = tcont
  405548:	tbnz	w8, #0, 4055d8 <add_swap+0x2f8>
  40554c:	mov	w8, #0x3                   	// #3
  405550:	str	w8, [sp, #92]
  405554:	ldur	w8, [x29, #-44]
  405558:	str	w8, [sp, #88]
  40555c:	str	wzr, [sp, #84]
  405560:	ldr	w0, [sp, #84]
  405564:	bl	401970 <log_get_max_level_realm@plt>
  405568:	ldr	w8, [sp, #92]
  40556c:	and	w8, w8, #0x7
  405570:	cmp	w0, w8
  405574:	b.lt	4055a8 <add_swap+0x2c8>  // b.tstop
  405578:	ldr	w8, [sp, #84]
  40557c:	ldr	w9, [sp, #92]
  405580:	orr	w0, w9, w8, lsl #10
  405584:	ldr	w1, [sp, #88]
  405588:	ldr	x2, [sp, #40]
  40558c:	mov	w3, #0x129                 	// #297
  405590:	ldr	x4, [sp, #32]
  405594:	adrp	x5, 407000 <add_automount+0x640>
  405598:	add	x5, x5, #0x752
  40559c:	bl	401980 <log_internal_realm@plt>
  4055a0:	str	w0, [sp, #16]
  4055a4:	b	4055bc <add_swap+0x2dc>
  4055a8:	ldr	w0, [sp, #88]
  4055ac:	bl	401990 <abs@plt>
  4055b0:	mov	w8, wzr
  4055b4:	subs	w8, w8, w0, uxtb
  4055b8:	str	w8, [sp, #16]
  4055bc:	ldr	w8, [sp, #16]
  4055c0:	str	w8, [sp, #80]
  4055c4:	ldr	w8, [sp, #80]
  4055c8:	stur	w8, [x29, #-4]
  4055cc:	mov	w8, #0x1                   	// #1
  4055d0:	stur	w8, [x29, #-64]
  4055d4:	b	4057d0 <add_swap+0x4f0>
  4055d8:	adrp	x8, 420000 <arg_enabled>
  4055dc:	add	x8, x8, #0x10
  4055e0:	ldr	x0, [x8]
  4055e4:	bl	404558 <empty_to_root>
  4055e8:	ldur	x1, [x29, #-24]
  4055ec:	mov	x8, #0xffffffffffffffff    	// #-1
  4055f0:	mov	x2, x8
  4055f4:	bl	401ac0 <path_join_internal@plt>
  4055f8:	stur	x0, [x29, #-32]
  4055fc:	ldur	x8, [x29, #-32]
  405600:	cbnz	x8, 40562c <add_swap+0x34c>
  405604:	mov	w8, wzr
  405608:	mov	w0, w8
  40560c:	ldr	x1, [sp, #40]
  405610:	mov	w2, #0x12d                 	// #301
  405614:	ldr	x3, [sp, #32]
  405618:	bl	401ad0 <log_oom_internal@plt>
  40561c:	stur	w0, [x29, #-4]
  405620:	mov	w8, #0x1                   	// #1
  405624:	stur	w8, [x29, #-64]
  405628:	b	4057d0 <add_swap+0x4f0>
  40562c:	ldur	x0, [x29, #-32]
  405630:	adrp	x1, 407000 <add_automount+0x640>
  405634:	add	x1, x1, #0x7d9
  405638:	bl	401ae0 <fopen64@plt>
  40563c:	stur	x0, [x29, #-40]
  405640:	ldur	x8, [x29, #-40]
  405644:	cbnz	x8, 4056dc <add_swap+0x3fc>
  405648:	mov	w8, #0x3                   	// #3
  40564c:	str	w8, [sp, #76]
  405650:	bl	401af0 <__errno_location@plt>
  405654:	ldr	w8, [x0]
  405658:	str	w8, [sp, #72]
  40565c:	str	wzr, [sp, #68]
  405660:	ldr	w0, [sp, #68]
  405664:	bl	401970 <log_get_max_level_realm@plt>
  405668:	ldr	w8, [sp, #76]
  40566c:	and	w8, w8, #0x7
  405670:	cmp	w0, w8
  405674:	b.lt	4056ac <add_swap+0x3cc>  // b.tstop
  405678:	ldr	w8, [sp, #68]
  40567c:	ldr	w9, [sp, #76]
  405680:	orr	w0, w9, w8, lsl #10
  405684:	ldr	w1, [sp, #72]
  405688:	ldur	x6, [x29, #-32]
  40568c:	ldr	x2, [sp, #40]
  405690:	mov	w3, #0x131                 	// #305
  405694:	ldr	x4, [sp, #32]
  405698:	adrp	x5, 407000 <add_automount+0x640>
  40569c:	add	x5, x5, #0x7dd
  4056a0:	bl	401980 <log_internal_realm@plt>
  4056a4:	str	w0, [sp, #12]
  4056a8:	b	4056c0 <add_swap+0x3e0>
  4056ac:	ldr	w0, [sp, #72]
  4056b0:	bl	401990 <abs@plt>
  4056b4:	mov	w8, wzr
  4056b8:	subs	w8, w8, w0, uxtb
  4056bc:	str	w8, [sp, #12]
  4056c0:	ldr	w8, [sp, #12]
  4056c4:	str	w8, [sp, #64]
  4056c8:	ldr	w8, [sp, #64]
  4056cc:	stur	w8, [x29, #-4]
  4056d0:	mov	w8, #0x1                   	// #1
  4056d4:	stur	w8, [x29, #-64]
  4056d8:	b	4057d0 <add_swap+0x4f0>
  4056dc:	ldur	x0, [x29, #-40]
  4056e0:	ldur	x2, [x29, #-16]
  4056e4:	adrp	x1, 408000 <_fini+0xc7c>
  4056e8:	add	x1, x1, #0xdc
  4056ec:	bl	401b00 <fprintf@plt>
  4056f0:	ldur	x8, [x29, #-40]
  4056f4:	mov	x0, x8
  4056f8:	bl	401b20 <fflush_and_check@plt>
  4056fc:	stur	w0, [x29, #-44]
  405700:	ldur	w9, [x29, #-44]
  405704:	cmp	w9, #0x0
  405708:	cset	w9, ge  // ge = tcont
  40570c:	tbnz	w9, #0, 4057a0 <add_swap+0x4c0>
  405710:	mov	w8, #0x3                   	// #3
  405714:	str	w8, [sp, #60]
  405718:	ldur	w8, [x29, #-44]
  40571c:	str	w8, [sp, #56]
  405720:	str	wzr, [sp, #52]
  405724:	ldr	w0, [sp, #52]
  405728:	bl	401970 <log_get_max_level_realm@plt>
  40572c:	ldr	w8, [sp, #60]
  405730:	and	w8, w8, #0x7
  405734:	cmp	w0, w8
  405738:	b.lt	405770 <add_swap+0x490>  // b.tstop
  40573c:	ldr	w8, [sp, #52]
  405740:	ldr	w9, [sp, #60]
  405744:	orr	w0, w9, w8, lsl #10
  405748:	ldr	w1, [sp, #56]
  40574c:	ldur	x6, [x29, #-32]
  405750:	ldr	x2, [sp, #40]
  405754:	mov	w3, #0x13e                 	// #318
  405758:	ldr	x4, [sp, #32]
  40575c:	adrp	x5, 407000 <add_automount+0x640>
  405760:	add	x5, x5, #0xc9d
  405764:	bl	401980 <log_internal_realm@plt>
  405768:	str	w0, [sp, #8]
  40576c:	b	405784 <add_swap+0x4a4>
  405770:	ldr	w0, [sp, #56]
  405774:	bl	401990 <abs@plt>
  405778:	mov	w8, wzr
  40577c:	subs	w8, w8, w0, uxtb
  405780:	str	w8, [sp, #8]
  405784:	ldr	w8, [sp, #8]
  405788:	str	w8, [sp, #48]
  40578c:	ldr	w8, [sp, #48]
  405790:	stur	w8, [x29, #-4]
  405794:	mov	w8, #0x1                   	// #1
  405798:	stur	w8, [x29, #-64]
  40579c:	b	4057d0 <add_swap+0x4f0>
  4057a0:	adrp	x8, 420000 <arg_enabled>
  4057a4:	add	x8, x8, #0x10
  4057a8:	ldr	x0, [x8]
  4057ac:	ldur	x3, [x29, #-24]
  4057b0:	adrp	x1, 408000 <_fini+0xc7c>
  4057b4:	add	x1, x1, #0x178
  4057b8:	adrp	x2, 407000 <add_automount+0x640>
  4057bc:	add	x2, x2, #0xa39
  4057c0:	bl	401b30 <generator_add_symlink@plt>
  4057c4:	stur	w0, [x29, #-4]
  4057c8:	mov	w9, #0x1                   	// #1
  4057cc:	stur	w9, [x29, #-64]
  4057d0:	sub	x0, x29, #0x28
  4057d4:	bl	4043a4 <fclosep>
  4057d8:	sub	x0, x29, #0x20
  4057dc:	bl	40437c <freep>
  4057e0:	sub	x0, x29, #0x18
  4057e4:	bl	40437c <freep>
  4057e8:	ldur	w0, [x29, #-4]
  4057ec:	ldp	x29, x30, [sp, #192]
  4057f0:	add	sp, sp, #0xd0
  4057f4:	ret

00000000004057f8 <add_xbootldr>:
  4057f8:	sub	sp, sp, #0x80
  4057fc:	stp	x29, x30, [sp, #112]
  405800:	add	x29, sp, #0x70
  405804:	adrp	x8, 408000 <_fini+0xc7c>
  405808:	add	x8, x8, #0x1e6
  40580c:	adrp	x9, 407000 <add_automount+0x640>
  405810:	add	x9, x9, #0x3a8
  405814:	add	x9, x9, #0x3
  405818:	adrp	x10, 408000 <_fini+0xc7c>
  40581c:	add	x10, x10, #0x1ad
  405820:	stur	x0, [x29, #-16]
  405824:	str	x8, [sp, #32]
  405828:	str	x9, [sp, #24]
  40582c:	str	x10, [sp, #16]
  405830:	ldur	x8, [x29, #-16]
  405834:	cmp	x8, #0x0
  405838:	cset	w9, ne  // ne = any
  40583c:	mov	w10, #0x1                   	// #1
  405840:	eor	w9, w9, #0x1
  405844:	eor	w9, w9, w10
  405848:	eor	w9, w9, w10
  40584c:	and	w9, w9, #0x1
  405850:	mov	w0, w9
  405854:	sxtw	x8, w0
  405858:	cbz	x8, 405880 <add_xbootldr+0x88>
  40585c:	mov	w8, wzr
  405860:	mov	w0, w8
  405864:	adrp	x1, 408000 <_fini+0xc7c>
  405868:	add	x1, x1, #0x184
  40586c:	ldr	x2, [sp, #24]
  405870:	mov	w3, #0x183                 	// #387
  405874:	adrp	x4, 408000 <_fini+0xc7c>
  405878:	add	x4, x4, #0x186
  40587c:	bl	4019e0 <log_assert_failed_realm@plt>
  405880:	bl	401a10 <in_initrd@plt>
  405884:	tbnz	w0, #0, 40588c <add_xbootldr+0x94>
  405888:	b	405908 <add_xbootldr+0x110>
  40588c:	mov	w8, #0x7                   	// #7
  405890:	stur	w8, [x29, #-24]
  405894:	stur	wzr, [x29, #-28]
  405898:	stur	wzr, [x29, #-32]
  40589c:	ldur	w0, [x29, #-32]
  4058a0:	bl	401970 <log_get_max_level_realm@plt>
  4058a4:	ldur	w8, [x29, #-24]
  4058a8:	and	w8, w8, #0x7
  4058ac:	cmp	w0, w8
  4058b0:	b.lt	4058e4 <add_xbootldr+0xec>  // b.tstop
  4058b4:	ldur	w8, [x29, #-32]
  4058b8:	ldur	w9, [x29, #-24]
  4058bc:	orr	w0, w9, w8, lsl #10
  4058c0:	ldur	w1, [x29, #-28]
  4058c4:	ldr	x2, [sp, #24]
  4058c8:	mov	w3, #0x186                 	// #390
  4058cc:	ldr	x4, [sp, #16]
  4058d0:	adrp	x5, 408000 <_fini+0xc7c>
  4058d4:	add	x5, x5, #0x1ba
  4058d8:	bl	401980 <log_internal_realm@plt>
  4058dc:	str	w0, [sp, #12]
  4058e0:	b	4058f8 <add_xbootldr+0x100>
  4058e4:	ldur	w0, [x29, #-28]
  4058e8:	bl	401990 <abs@plt>
  4058ec:	mov	w8, wzr
  4058f0:	subs	w8, w8, w0, uxtb
  4058f4:	str	w8, [sp, #12]
  4058f8:	ldr	w8, [sp, #12]
  4058fc:	stur	w8, [x29, #-36]
  405900:	stur	wzr, [x29, #-4]
  405904:	b	405ab8 <add_xbootldr+0x2c0>
  405908:	ldr	x0, [sp, #32]
  40590c:	bl	401ce0 <fstab_is_mount_point@plt>
  405910:	stur	w0, [x29, #-20]
  405914:	ldur	w8, [x29, #-20]
  405918:	cmp	w8, #0x0
  40591c:	cset	w8, ge  // ge = tcont
  405920:	tbnz	w8, #0, 4059a8 <add_xbootldr+0x1b0>
  405924:	mov	w8, #0x3                   	// #3
  405928:	stur	w8, [x29, #-40]
  40592c:	ldur	w8, [x29, #-20]
  405930:	stur	w8, [x29, #-44]
  405934:	stur	wzr, [x29, #-48]
  405938:	ldur	w0, [x29, #-48]
  40593c:	bl	401970 <log_get_max_level_realm@plt>
  405940:	ldur	w8, [x29, #-40]
  405944:	and	w8, w8, #0x7
  405948:	cmp	w0, w8
  40594c:	b.lt	405980 <add_xbootldr+0x188>  // b.tstop
  405950:	ldur	w8, [x29, #-48]
  405954:	ldur	w9, [x29, #-40]
  405958:	orr	w0, w9, w8, lsl #10
  40595c:	ldur	w1, [x29, #-44]
  405960:	ldr	x2, [sp, #24]
  405964:	mov	w3, #0x18c                 	// #396
  405968:	ldr	x4, [sp, #16]
  40596c:	adrp	x5, 408000 <_fini+0xc7c>
  405970:	add	x5, x5, #0x89
  405974:	bl	401980 <log_internal_realm@plt>
  405978:	str	w0, [sp, #8]
  40597c:	b	405994 <add_xbootldr+0x19c>
  405980:	ldur	w0, [x29, #-44]
  405984:	bl	401990 <abs@plt>
  405988:	mov	w8, wzr
  40598c:	subs	w8, w8, w0, uxtb
  405990:	str	w8, [sp, #8]
  405994:	ldr	w8, [sp, #8]
  405998:	stur	w8, [x29, #-52]
  40599c:	ldur	w8, [x29, #-52]
  4059a0:	stur	w8, [x29, #-4]
  4059a4:	b	405ab8 <add_xbootldr+0x2c0>
  4059a8:	ldur	w8, [x29, #-20]
  4059ac:	cmp	w8, #0x0
  4059b0:	cset	w8, le
  4059b4:	tbnz	w8, #0, 405a34 <add_xbootldr+0x23c>
  4059b8:	mov	w8, #0x7                   	// #7
  4059bc:	str	w8, [sp, #56]
  4059c0:	str	wzr, [sp, #52]
  4059c4:	str	wzr, [sp, #48]
  4059c8:	ldr	w0, [sp, #48]
  4059cc:	bl	401970 <log_get_max_level_realm@plt>
  4059d0:	ldr	w8, [sp, #56]
  4059d4:	and	w8, w8, #0x7
  4059d8:	cmp	w0, w8
  4059dc:	b.lt	405a10 <add_xbootldr+0x218>  // b.tstop
  4059e0:	ldr	w8, [sp, #48]
  4059e4:	ldr	w9, [sp, #56]
  4059e8:	orr	w0, w9, w8, lsl #10
  4059ec:	ldr	w1, [sp, #52]
  4059f0:	ldr	x2, [sp, #24]
  4059f4:	mov	w3, #0x18e                 	// #398
  4059f8:	ldr	x4, [sp, #16]
  4059fc:	adrp	x5, 408000 <_fini+0xc7c>
  405a00:	add	x5, x5, #0x1ec
  405a04:	bl	401980 <log_internal_realm@plt>
  405a08:	str	w0, [sp, #4]
  405a0c:	b	405a24 <add_xbootldr+0x22c>
  405a10:	ldr	w0, [sp, #52]
  405a14:	bl	401990 <abs@plt>
  405a18:	mov	w8, wzr
  405a1c:	subs	w8, w8, w0, uxtb
  405a20:	str	w8, [sp, #4]
  405a24:	ldr	w8, [sp, #4]
  405a28:	str	w8, [sp, #44]
  405a2c:	stur	wzr, [x29, #-4]
  405a30:	b	405ab8 <add_xbootldr+0x2c0>
  405a34:	ldr	x0, [sp, #32]
  405a38:	bl	406768 <path_is_busy>
  405a3c:	stur	w0, [x29, #-20]
  405a40:	ldur	w8, [x29, #-20]
  405a44:	cmp	w8, #0x0
  405a48:	cset	w8, ge  // ge = tcont
  405a4c:	tbnz	w8, #0, 405a5c <add_xbootldr+0x264>
  405a50:	ldur	w8, [x29, #-20]
  405a54:	stur	w8, [x29, #-4]
  405a58:	b	405ab8 <add_xbootldr+0x2c0>
  405a5c:	ldur	w8, [x29, #-20]
  405a60:	cmp	w8, #0x0
  405a64:	cset	w8, le
  405a68:	tbnz	w8, #0, 405a74 <add_xbootldr+0x27c>
  405a6c:	stur	wzr, [x29, #-4]
  405a70:	b	405ab8 <add_xbootldr+0x2c0>
  405a74:	ldur	x8, [x29, #-16]
  405a78:	ldr	x1, [x8, #40]
  405a7c:	ldur	x8, [x29, #-16]
  405a80:	ldr	x3, [x8, #32]
  405a84:	adrp	x0, 408000 <_fini+0xc7c>
  405a88:	add	x0, x0, #0x223
  405a8c:	ldr	x2, [sp, #32]
  405a90:	mov	w9, #0x1                   	// #1
  405a94:	and	w4, w9, #0x1
  405a98:	adrp	x5, 408000 <_fini+0xc7c>
  405a9c:	add	x5, x5, #0x228
  405aa0:	adrp	x6, 408000 <_fini+0xc7c>
  405aa4:	add	x6, x6, #0x233
  405aa8:	mov	x7, #0xe00                 	// #3584
  405aac:	movk	x7, #0x727, lsl #16
  405ab0:	bl	4069c0 <add_automount>
  405ab4:	stur	w0, [x29, #-4]
  405ab8:	ldur	w0, [x29, #-4]
  405abc:	ldp	x29, x30, [sp, #112]
  405ac0:	add	sp, sp, #0x80
  405ac4:	ret

0000000000405ac8 <add_esp>:
  405ac8:	sub	sp, sp, #0x100
  405acc:	stp	x29, x30, [sp, #240]
  405ad0:	add	x29, sp, #0xf0
  405ad4:	mov	x8, xzr
  405ad8:	adrp	x9, 407000 <add_automount+0x640>
  405adc:	add	x9, x9, #0x3a8
  405ae0:	add	x9, x9, #0x3
  405ae4:	adrp	x10, 408000 <_fini+0xc7c>
  405ae8:	add	x10, x10, #0x42c
  405aec:	stur	x0, [x29, #-16]
  405af0:	and	w11, w1, #0x1
  405af4:	sturb	w11, [x29, #-17]
  405af8:	stur	x8, [x29, #-32]
  405afc:	stur	x8, [x29, #-40]
  405b00:	str	x9, [sp, #40]
  405b04:	str	x10, [sp, #32]
  405b08:	ldur	x8, [x29, #-16]
  405b0c:	cmp	x8, #0x0
  405b10:	cset	w9, ne  // ne = any
  405b14:	mov	w10, #0x1                   	// #1
  405b18:	eor	w9, w9, #0x1
  405b1c:	eor	w9, w9, w10
  405b20:	eor	w9, w9, w10
  405b24:	and	w9, w9, #0x1
  405b28:	mov	w0, w9
  405b2c:	sxtw	x8, w0
  405b30:	cbz	x8, 405b58 <add_esp+0x90>
  405b34:	mov	w8, wzr
  405b38:	mov	w0, w8
  405b3c:	adrp	x1, 408000 <_fini+0xc7c>
  405b40:	add	x1, x1, #0x184
  405b44:	ldr	x2, [sp, #40]
  405b48:	mov	w3, #0x1a7                 	// #423
  405b4c:	adrp	x4, 408000 <_fini+0xc7c>
  405b50:	add	x4, x4, #0x403
  405b54:	bl	4019e0 <log_assert_failed_realm@plt>
  405b58:	bl	401a10 <in_initrd@plt>
  405b5c:	tbnz	w0, #0, 405b64 <add_esp+0x9c>
  405b60:	b	405be0 <add_esp+0x118>
  405b64:	mov	w8, #0x7                   	// #7
  405b68:	stur	w8, [x29, #-48]
  405b6c:	stur	wzr, [x29, #-52]
  405b70:	stur	wzr, [x29, #-56]
  405b74:	ldur	w0, [x29, #-56]
  405b78:	bl	401970 <log_get_max_level_realm@plt>
  405b7c:	ldur	w8, [x29, #-48]
  405b80:	and	w8, w8, #0x7
  405b84:	cmp	w0, w8
  405b88:	b.lt	405bbc <add_esp+0xf4>  // b.tstop
  405b8c:	ldur	w8, [x29, #-56]
  405b90:	ldur	w9, [x29, #-48]
  405b94:	orr	w0, w9, w8, lsl #10
  405b98:	ldur	w1, [x29, #-52]
  405b9c:	ldr	x2, [sp, #40]
  405ba0:	mov	w3, #0x1aa                 	// #426
  405ba4:	ldr	x4, [sp, #32]
  405ba8:	adrp	x5, 408000 <_fini+0xc7c>
  405bac:	add	x5, x5, #0x434
  405bb0:	bl	401980 <log_internal_realm@plt>
  405bb4:	str	w0, [sp, #28]
  405bb8:	b	405bd0 <add_esp+0x108>
  405bbc:	ldur	w0, [x29, #-52]
  405bc0:	bl	401990 <abs@plt>
  405bc4:	mov	w8, wzr
  405bc8:	subs	w8, w8, w0, uxtb
  405bcc:	str	w8, [sp, #28]
  405bd0:	ldr	w8, [sp, #28]
  405bd4:	stur	w8, [x29, #-60]
  405bd8:	stur	wzr, [x29, #-4]
  405bdc:	b	4060e0 <add_esp+0x618>
  405be0:	adrp	x0, 408000 <_fini+0xc7c>
  405be4:	add	x0, x0, #0x451
  405be8:	mov	w8, wzr
  405bec:	mov	w1, w8
  405bf0:	bl	401cf0 <access@plt>
  405bf4:	cmp	w0, #0x0
  405bf8:	cset	w8, ge  // ge = tcont
  405bfc:	tbnz	w8, #0, 405cb8 <add_esp+0x1f0>
  405c00:	bl	401af0 <__errno_location@plt>
  405c04:	ldr	w8, [x0]
  405c08:	cmp	w8, #0x2
  405c0c:	b.eq	405c98 <add_esp+0x1d0>  // b.none
  405c10:	mov	w8, #0x3                   	// #3
  405c14:	stur	w8, [x29, #-64]
  405c18:	bl	401af0 <__errno_location@plt>
  405c1c:	ldr	w8, [x0]
  405c20:	stur	w8, [x29, #-68]
  405c24:	stur	wzr, [x29, #-72]
  405c28:	ldur	w0, [x29, #-72]
  405c2c:	bl	401970 <log_get_max_level_realm@plt>
  405c30:	ldur	w8, [x29, #-64]
  405c34:	and	w8, w8, #0x7
  405c38:	cmp	w0, w8
  405c3c:	b.lt	405c70 <add_esp+0x1a8>  // b.tstop
  405c40:	ldur	w8, [x29, #-72]
  405c44:	ldur	w9, [x29, #-64]
  405c48:	orr	w0, w9, w8, lsl #10
  405c4c:	ldur	w1, [x29, #-68]
  405c50:	ldr	x2, [sp, #40]
  405c54:	mov	w3, #0x1b2                 	// #434
  405c58:	ldr	x4, [sp, #32]
  405c5c:	adrp	x5, 408000 <_fini+0xc7c>
  405c60:	add	x5, x5, #0x456
  405c64:	bl	401980 <log_internal_realm@plt>
  405c68:	str	w0, [sp, #24]
  405c6c:	b	405c84 <add_esp+0x1bc>
  405c70:	ldur	w0, [x29, #-68]
  405c74:	bl	401990 <abs@plt>
  405c78:	mov	w8, wzr
  405c7c:	subs	w8, w8, w0, uxtb
  405c80:	str	w8, [sp, #24]
  405c84:	ldr	w8, [sp, #24]
  405c88:	stur	w8, [x29, #-76]
  405c8c:	ldur	w8, [x29, #-76]
  405c90:	stur	w8, [x29, #-4]
  405c94:	b	4060e0 <add_esp+0x618>
  405c98:	ldurb	w8, [x29, #-17]
  405c9c:	tbnz	w8, #0, 405cb8 <add_esp+0x1f0>
  405ca0:	adrp	x8, 408000 <_fini+0xc7c>
  405ca4:	add	x8, x8, #0x1e6
  405ca8:	stur	x8, [x29, #-32]
  405cac:	adrp	x8, 408000 <_fini+0xc7c>
  405cb0:	add	x8, x8, #0x223
  405cb4:	stur	x8, [x29, #-40]
  405cb8:	ldur	x8, [x29, #-32]
  405cbc:	cbnz	x8, 405ccc <add_esp+0x204>
  405cc0:	adrp	x8, 408000 <_fini+0xc7c>
  405cc4:	add	x8, x8, #0x451
  405cc8:	stur	x8, [x29, #-32]
  405ccc:	ldur	x8, [x29, #-40]
  405cd0:	cbnz	x8, 405ce0 <add_esp+0x218>
  405cd4:	adrp	x8, 408000 <_fini+0xc7c>
  405cd8:	add	x8, x8, #0x482
  405cdc:	stur	x8, [x29, #-40]
  405ce0:	ldur	x0, [x29, #-32]
  405ce4:	bl	401ce0 <fstab_is_mount_point@plt>
  405ce8:	stur	w0, [x29, #-44]
  405cec:	ldur	w8, [x29, #-44]
  405cf0:	cmp	w8, #0x0
  405cf4:	cset	w8, ge  // ge = tcont
  405cf8:	tbnz	w8, #0, 405d80 <add_esp+0x2b8>
  405cfc:	mov	w8, #0x3                   	// #3
  405d00:	stur	w8, [x29, #-80]
  405d04:	ldur	w8, [x29, #-44]
  405d08:	stur	w8, [x29, #-84]
  405d0c:	stur	wzr, [x29, #-88]
  405d10:	ldur	w0, [x29, #-88]
  405d14:	bl	401970 <log_get_max_level_realm@plt>
  405d18:	ldur	w8, [x29, #-80]
  405d1c:	and	w8, w8, #0x7
  405d20:	cmp	w0, w8
  405d24:	b.lt	405d58 <add_esp+0x290>  // b.tstop
  405d28:	ldur	w8, [x29, #-88]
  405d2c:	ldur	w9, [x29, #-80]
  405d30:	orr	w0, w9, w8, lsl #10
  405d34:	ldur	w1, [x29, #-84]
  405d38:	ldr	x2, [sp, #40]
  405d3c:	mov	w3, #0x1c2                 	// #450
  405d40:	ldr	x4, [sp, #32]
  405d44:	adrp	x5, 408000 <_fini+0xc7c>
  405d48:	add	x5, x5, #0x89
  405d4c:	bl	401980 <log_internal_realm@plt>
  405d50:	str	w0, [sp, #20]
  405d54:	b	405d6c <add_esp+0x2a4>
  405d58:	ldur	w0, [x29, #-84]
  405d5c:	bl	401990 <abs@plt>
  405d60:	mov	w8, wzr
  405d64:	subs	w8, w8, w0, uxtb
  405d68:	str	w8, [sp, #20]
  405d6c:	ldr	w8, [sp, #20]
  405d70:	stur	w8, [x29, #-92]
  405d74:	ldur	w8, [x29, #-92]
  405d78:	stur	w8, [x29, #-4]
  405d7c:	b	4060e0 <add_esp+0x618>
  405d80:	ldur	w8, [x29, #-44]
  405d84:	cmp	w8, #0x0
  405d88:	cset	w8, le
  405d8c:	tbnz	w8, #0, 405e10 <add_esp+0x348>
  405d90:	mov	w8, #0x7                   	// #7
  405d94:	stur	w8, [x29, #-96]
  405d98:	stur	wzr, [x29, #-100]
  405d9c:	stur	wzr, [x29, #-104]
  405da0:	ldur	w0, [x29, #-104]
  405da4:	bl	401970 <log_get_max_level_realm@plt>
  405da8:	ldur	w8, [x29, #-96]
  405dac:	and	w8, w8, #0x7
  405db0:	cmp	w0, w8
  405db4:	b.lt	405dec <add_esp+0x324>  // b.tstop
  405db8:	ldur	w8, [x29, #-104]
  405dbc:	ldur	w9, [x29, #-96]
  405dc0:	orr	w0, w9, w8, lsl #10
  405dc4:	ldur	w1, [x29, #-100]
  405dc8:	ldur	x6, [x29, #-32]
  405dcc:	ldr	x2, [sp, #40]
  405dd0:	mov	w3, #0x1c4                 	// #452
  405dd4:	ldr	x4, [sp, #32]
  405dd8:	adrp	x5, 408000 <_fini+0xc7c>
  405ddc:	add	x5, x5, #0x486
  405de0:	bl	401980 <log_internal_realm@plt>
  405de4:	str	w0, [sp, #16]
  405de8:	b	405e00 <add_esp+0x338>
  405dec:	ldur	w0, [x29, #-100]
  405df0:	bl	401990 <abs@plt>
  405df4:	mov	w8, wzr
  405df8:	subs	w8, w8, w0, uxtb
  405dfc:	str	w8, [sp, #16]
  405e00:	ldr	w8, [sp, #16]
  405e04:	stur	w8, [x29, #-108]
  405e08:	stur	wzr, [x29, #-4]
  405e0c:	b	4060e0 <add_esp+0x618>
  405e10:	ldur	x0, [x29, #-32]
  405e14:	bl	406768 <path_is_busy>
  405e18:	stur	w0, [x29, #-44]
  405e1c:	ldur	w8, [x29, #-44]
  405e20:	cmp	w8, #0x0
  405e24:	cset	w8, ge  // ge = tcont
  405e28:	tbnz	w8, #0, 405e38 <add_esp+0x370>
  405e2c:	ldur	w8, [x29, #-44]
  405e30:	stur	w8, [x29, #-4]
  405e34:	b	4060e0 <add_esp+0x618>
  405e38:	ldur	w8, [x29, #-44]
  405e3c:	cmp	w8, #0x0
  405e40:	cset	w8, le
  405e44:	tbnz	w8, #0, 405e50 <add_esp+0x388>
  405e48:	stur	wzr, [x29, #-4]
  405e4c:	b	4060e0 <add_esp+0x618>
  405e50:	bl	401a50 <is_efi_boot@plt>
  405e54:	tbnz	w0, #0, 405e5c <add_esp+0x394>
  405e58:	b	40602c <add_esp+0x564>
  405e5c:	add	x0, sp, #0x70
  405e60:	bl	401a60 <efi_loader_get_device_part_uuid@plt>
  405e64:	stur	w0, [x29, #-44]
  405e68:	ldur	w8, [x29, #-44]
  405e6c:	mov	w9, #0xfffffffe            	// #-2
  405e70:	cmp	w8, w9
  405e74:	b.ne	405ef4 <add_esp+0x42c>  // b.any
  405e78:	mov	w8, #0x7                   	// #7
  405e7c:	str	w8, [sp, #108]
  405e80:	str	wzr, [sp, #104]
  405e84:	str	wzr, [sp, #100]
  405e88:	ldr	w0, [sp, #100]
  405e8c:	bl	401970 <log_get_max_level_realm@plt>
  405e90:	ldr	w8, [sp, #108]
  405e94:	and	w8, w8, #0x7
  405e98:	cmp	w0, w8
  405e9c:	b.lt	405ed0 <add_esp+0x408>  // b.tstop
  405ea0:	ldr	w8, [sp, #100]
  405ea4:	ldr	w9, [sp, #108]
  405ea8:	orr	w0, w9, w8, lsl #10
  405eac:	ldr	w1, [sp, #104]
  405eb0:	ldr	x2, [sp, #40]
  405eb4:	mov	w3, #0x1d5                 	// #469
  405eb8:	ldr	x4, [sp, #32]
  405ebc:	adrp	x5, 408000 <_fini+0xc7c>
  405ec0:	add	x5, x5, #0x4a7
  405ec4:	bl	401980 <log_internal_realm@plt>
  405ec8:	str	w0, [sp, #12]
  405ecc:	b	405ee4 <add_esp+0x41c>
  405ed0:	ldr	w0, [sp, #104]
  405ed4:	bl	401990 <abs@plt>
  405ed8:	mov	w8, wzr
  405edc:	subs	w8, w8, w0, uxtb
  405ee0:	str	w8, [sp, #12]
  405ee4:	ldr	w8, [sp, #12]
  405ee8:	str	w8, [sp, #96]
  405eec:	stur	wzr, [x29, #-4]
  405ef0:	b	4060e0 <add_esp+0x618>
  405ef4:	ldur	w8, [x29, #-44]
  405ef8:	cmp	w8, #0x0
  405efc:	cset	w8, ge  // ge = tcont
  405f00:	tbnz	w8, #0, 405f88 <add_esp+0x4c0>
  405f04:	mov	w8, #0x3                   	// #3
  405f08:	str	w8, [sp, #92]
  405f0c:	ldur	w8, [x29, #-44]
  405f10:	str	w8, [sp, #88]
  405f14:	str	wzr, [sp, #84]
  405f18:	ldr	w0, [sp, #84]
  405f1c:	bl	401970 <log_get_max_level_realm@plt>
  405f20:	ldr	w8, [sp, #92]
  405f24:	and	w8, w8, #0x7
  405f28:	cmp	w0, w8
  405f2c:	b.lt	405f60 <add_esp+0x498>  // b.tstop
  405f30:	ldr	w8, [sp, #84]
  405f34:	ldr	w9, [sp, #92]
  405f38:	orr	w0, w9, w8, lsl #10
  405f3c:	ldr	w1, [sp, #88]
  405f40:	ldr	x2, [sp, #40]
  405f44:	mov	w3, #0x1d9                 	// #473
  405f48:	ldr	x4, [sp, #32]
  405f4c:	adrp	x5, 407000 <add_automount+0x640>
  405f50:	add	x5, x5, #0x65c
  405f54:	bl	401980 <log_internal_realm@plt>
  405f58:	str	w0, [sp, #8]
  405f5c:	b	405f74 <add_esp+0x4ac>
  405f60:	ldr	w0, [sp, #88]
  405f64:	bl	401990 <abs@plt>
  405f68:	mov	w8, wzr
  405f6c:	subs	w8, w8, w0, uxtb
  405f70:	str	w8, [sp, #8]
  405f74:	ldr	w8, [sp, #8]
  405f78:	str	w8, [sp, #80]
  405f7c:	ldr	w8, [sp, #80]
  405f80:	stur	w8, [x29, #-4]
  405f84:	b	4060e0 <add_esp+0x618>
  405f88:	ldur	x8, [x29, #-16]
  405f8c:	ldr	x0, [x8, #16]
  405f90:	ldr	x1, [x8, #24]
  405f94:	ldr	x2, [sp, #112]
  405f98:	ldr	x3, [sp, #120]
  405f9c:	bl	40727c <sd_id128_equal>
  405fa0:	cbnz	w0, 406028 <add_esp+0x560>
  405fa4:	mov	w8, #0x7                   	// #7
  405fa8:	str	w8, [sp, #76]
  405fac:	str	wzr, [sp, #72]
  405fb0:	str	wzr, [sp, #68]
  405fb4:	ldr	w0, [sp, #68]
  405fb8:	bl	401970 <log_get_max_level_realm@plt>
  405fbc:	ldr	w8, [sp, #76]
  405fc0:	and	w8, w8, #0x7
  405fc4:	cmp	w0, w8
  405fc8:	b.lt	406004 <add_esp+0x53c>  // b.tstop
  405fcc:	ldr	w8, [sp, #68]
  405fd0:	ldr	w9, [sp, #76]
  405fd4:	orr	w0, w9, w8, lsl #10
  405fd8:	ldr	w1, [sp, #72]
  405fdc:	ldur	x10, [x29, #-16]
  405fe0:	ldr	x6, [x10, #40]
  405fe4:	ldr	x2, [sp, #40]
  405fe8:	mov	w3, #0x1dc                 	// #476
  405fec:	ldr	x4, [sp, #32]
  405ff0:	adrp	x5, 408000 <_fini+0xc7c>
  405ff4:	add	x5, x5, #0x4c5
  405ff8:	bl	401980 <log_internal_realm@plt>
  405ffc:	str	w0, [sp, #4]
  406000:	b	406018 <add_esp+0x550>
  406004:	ldr	w0, [sp, #72]
  406008:	bl	401990 <abs@plt>
  40600c:	mov	w8, wzr
  406010:	subs	w8, w8, w0, uxtb
  406014:	str	w8, [sp, #4]
  406018:	ldr	w8, [sp, #4]
  40601c:	str	w8, [sp, #64]
  406020:	stur	wzr, [x29, #-4]
  406024:	b	4060e0 <add_esp+0x618>
  406028:	b	4060a0 <add_esp+0x5d8>
  40602c:	mov	w8, #0x7                   	// #7
  406030:	str	w8, [sp, #60]
  406034:	str	wzr, [sp, #56]
  406038:	str	wzr, [sp, #52]
  40603c:	ldr	w0, [sp, #52]
  406040:	bl	401970 <log_get_max_level_realm@plt>
  406044:	ldr	w8, [sp, #60]
  406048:	and	w8, w8, #0x7
  40604c:	cmp	w0, w8
  406050:	b.lt	406084 <add_esp+0x5bc>  // b.tstop
  406054:	ldr	w8, [sp, #52]
  406058:	ldr	w9, [sp, #60]
  40605c:	orr	w0, w9, w8, lsl #10
  406060:	ldr	w1, [sp, #56]
  406064:	ldr	x2, [sp, #40]
  406068:	mov	w3, #0x1e0                 	// #480
  40606c:	ldr	x4, [sp, #32]
  406070:	adrp	x5, 408000 <_fini+0xc7c>
  406074:	add	x5, x5, #0x50e
  406078:	bl	401980 <log_internal_realm@plt>
  40607c:	str	w0, [sp]
  406080:	b	406098 <add_esp+0x5d0>
  406084:	ldr	w0, [sp, #56]
  406088:	bl	401990 <abs@plt>
  40608c:	mov	w8, wzr
  406090:	subs	w8, w8, w0, uxtb
  406094:	str	w8, [sp]
  406098:	ldr	w8, [sp]
  40609c:	str	w8, [sp, #48]
  4060a0:	ldur	x0, [x29, #-40]
  4060a4:	ldur	x8, [x29, #-16]
  4060a8:	ldr	x1, [x8, #40]
  4060ac:	ldur	x2, [x29, #-32]
  4060b0:	ldur	x8, [x29, #-16]
  4060b4:	ldr	x3, [x8, #32]
  4060b8:	mov	w9, #0x1                   	// #1
  4060bc:	and	w4, w9, #0x1
  4060c0:	adrp	x5, 408000 <_fini+0xc7c>
  4060c4:	add	x5, x5, #0x228
  4060c8:	adrp	x6, 408000 <_fini+0xc7c>
  4060cc:	add	x6, x6, #0x533
  4060d0:	mov	x7, #0xe00                 	// #3584
  4060d4:	movk	x7, #0x727, lsl #16
  4060d8:	bl	4069c0 <add_automount>
  4060dc:	stur	w0, [x29, #-4]
  4060e0:	ldur	w0, [x29, #-4]
  4060e4:	ldp	x29, x30, [sp, #240]
  4060e8:	add	sp, sp, #0x100
  4060ec:	ret

00000000004060f0 <add_partition_mount>:
  4060f0:	sub	sp, sp, #0x50
  4060f4:	stp	x29, x30, [sp, #64]
  4060f8:	add	x29, sp, #0x40
  4060fc:	adrp	x8, 407000 <add_automount+0x640>
  406100:	add	x8, x8, #0x3a8
  406104:	add	x8, x8, #0x3
  406108:	stur	x0, [x29, #-16]
  40610c:	stur	x1, [x29, #-24]
  406110:	str	x2, [sp, #32]
  406114:	str	x3, [sp, #24]
  406118:	str	x8, [sp, #8]
  40611c:	ldur	x8, [x29, #-16]
  406120:	cmp	x8, #0x0
  406124:	cset	w9, ne  // ne = any
  406128:	mov	w10, #0x1                   	// #1
  40612c:	eor	w9, w9, #0x1
  406130:	eor	w9, w9, w10
  406134:	eor	w9, w9, w10
  406138:	and	w9, w9, #0x1
  40613c:	mov	w0, w9
  406140:	sxtw	x8, w0
  406144:	cbz	x8, 40616c <add_partition_mount+0x7c>
  406148:	mov	w8, wzr
  40614c:	mov	w0, w8
  406150:	adrp	x1, 408000 <_fini+0xc7c>
  406154:	add	x1, x1, #0x184
  406158:	ldr	x2, [sp, #8]
  40615c:	mov	w3, #0x104                 	// #260
  406160:	adrp	x4, 408000 <_fini+0xc7c>
  406164:	add	x4, x4, #0x552
  406168:	bl	4019e0 <log_assert_failed_realm@plt>
  40616c:	ldr	x0, [sp, #32]
  406170:	bl	406768 <path_is_busy>
  406174:	str	w0, [sp, #20]
  406178:	ldr	w8, [sp, #20]
  40617c:	cbz	w8, 4061b0 <add_partition_mount+0xc0>
  406180:	ldr	w8, [sp, #20]
  406184:	cmp	w8, #0x0
  406188:	cset	w8, ge  // ge = tcont
  40618c:	tbnz	w8, #0, 40619c <add_partition_mount+0xac>
  406190:	ldr	w8, [sp, #20]
  406194:	str	w8, [sp, #4]
  406198:	b	4061a4 <add_partition_mount+0xb4>
  40619c:	mov	w8, wzr
  4061a0:	str	w8, [sp, #4]
  4061a4:	ldr	w8, [sp, #4]
  4061a8:	stur	w8, [x29, #-4]
  4061ac:	b	4061fc <add_partition_mount+0x10c>
  4061b0:	ldur	x0, [x29, #-24]
  4061b4:	ldur	x8, [x29, #-16]
  4061b8:	ldr	x1, [x8, #40]
  4061bc:	ldr	x2, [sp, #32]
  4061c0:	ldur	x8, [x29, #-16]
  4061c4:	ldr	x3, [x8, #32]
  4061c8:	ldur	x8, [x29, #-16]
  4061cc:	ldrb	w9, [x8]
  4061d0:	mov	w10, #0x1                   	// #1
  4061d4:	lsr	w9, w9, w10
  4061d8:	and	w9, w9, w10
  4061dc:	ldr	x6, [sp, #24]
  4061e0:	and	w4, w9, #0x1
  4061e4:	mov	x8, xzr
  4061e8:	mov	x5, x8
  4061ec:	adrp	x7, 407000 <add_automount+0x640>
  4061f0:	add	x7, x7, #0x6c5
  4061f4:	bl	402f18 <add_mount>
  4061f8:	stur	w0, [x29, #-4]
  4061fc:	ldur	w0, [x29, #-4]
  406200:	ldp	x29, x30, [sp, #64]
  406204:	add	sp, sp, #0x50
  406208:	ret

000000000040620c <add_root_rw>:
  40620c:	stp	x29, x30, [sp, #-16]!
  406210:	mov	x29, sp
  406214:	sub	sp, sp, #0xf0
  406218:	adrp	x8, 407000 <add_automount+0x640>
  40621c:	add	x8, x8, #0x3a8
  406220:	add	x8, x8, #0x3
  406224:	adrp	x9, 408000 <_fini+0xc7c>
  406228:	add	x9, x9, #0x5d0
  40622c:	adrp	x10, 408000 <_fini+0xc7c>
  406230:	add	x10, x10, #0x5aa
  406234:	stur	x0, [x29, #-16]
  406238:	stur	x8, [x29, #-176]
  40623c:	stur	x9, [x29, #-184]
  406240:	stur	x10, [x29, #-192]
  406244:	ldur	x8, [x29, #-16]
  406248:	cmp	x8, #0x0
  40624c:	cset	w9, ne  // ne = any
  406250:	mov	w10, #0x1                   	// #1
  406254:	eor	w9, w9, #0x1
  406258:	eor	w9, w9, w10
  40625c:	eor	w9, w9, w10
  406260:	and	w9, w9, #0x1
  406264:	mov	w0, w9
  406268:	sxtw	x8, w0
  40626c:	cbz	x8, 406290 <add_root_rw+0x84>
  406270:	mov	w8, wzr
  406274:	mov	w0, w8
  406278:	adrp	x1, 408000 <_fini+0xc7c>
  40627c:	add	x1, x1, #0x184
  406280:	ldur	x2, [x29, #-176]
  406284:	mov	w3, #0x1f5                 	// #501
  406288:	ldur	x4, [x29, #-192]
  40628c:	bl	4019e0 <log_assert_failed_realm@plt>
  406290:	bl	401a10 <in_initrd@plt>
  406294:	tbnz	w0, #0, 40629c <add_root_rw+0x90>
  406298:	b	406318 <add_root_rw+0x10c>
  40629c:	mov	w8, #0x7                   	// #7
  4062a0:	stur	w8, [x29, #-32]
  4062a4:	stur	wzr, [x29, #-36]
  4062a8:	stur	wzr, [x29, #-40]
  4062ac:	ldur	w0, [x29, #-40]
  4062b0:	bl	401970 <log_get_max_level_realm@plt>
  4062b4:	ldur	w8, [x29, #-32]
  4062b8:	and	w8, w8, #0x7
  4062bc:	cmp	w0, w8
  4062c0:	b.lt	4062f4 <add_root_rw+0xe8>  // b.tstop
  4062c4:	ldur	w8, [x29, #-40]
  4062c8:	ldur	w9, [x29, #-32]
  4062cc:	orr	w0, w9, w8, lsl #10
  4062d0:	ldur	w1, [x29, #-36]
  4062d4:	ldur	x2, [x29, #-176]
  4062d8:	mov	w3, #0x1f8                 	// #504
  4062dc:	ldur	x4, [x29, #-184]
  4062e0:	adrp	x5, 408000 <_fini+0xc7c>
  4062e4:	add	x5, x5, #0x5dc
  4062e8:	bl	401980 <log_internal_realm@plt>
  4062ec:	stur	w0, [x29, #-196]
  4062f0:	b	406308 <add_root_rw+0xfc>
  4062f4:	ldur	w0, [x29, #-36]
  4062f8:	bl	401990 <abs@plt>
  4062fc:	mov	w8, wzr
  406300:	subs	w8, w8, w0, uxtb
  406304:	stur	w8, [x29, #-196]
  406308:	ldur	w8, [x29, #-196]
  40630c:	stur	w8, [x29, #-44]
  406310:	stur	wzr, [x29, #-4]
  406314:	b	406724 <add_root_rw+0x518>
  406318:	adrp	x8, 420000 <arg_enabled>
  40631c:	add	x8, x8, #0x4
  406320:	ldr	w9, [x8]
  406324:	cmp	w9, #0x0
  406328:	cset	w9, lt  // lt = tstop
  40632c:	tbnz	w9, #0, 4063ac <add_root_rw+0x1a0>
  406330:	mov	w8, #0x7                   	// #7
  406334:	stur	w8, [x29, #-48]
  406338:	stur	wzr, [x29, #-52]
  40633c:	stur	wzr, [x29, #-56]
  406340:	ldur	w0, [x29, #-56]
  406344:	bl	401970 <log_get_max_level_realm@plt>
  406348:	ldur	w8, [x29, #-48]
  40634c:	and	w8, w8, #0x7
  406350:	cmp	w0, w8
  406354:	b.lt	406388 <add_root_rw+0x17c>  // b.tstop
  406358:	ldur	w8, [x29, #-56]
  40635c:	ldur	w9, [x29, #-48]
  406360:	orr	w0, w9, w8, lsl #10
  406364:	ldur	w1, [x29, #-52]
  406368:	ldur	x2, [x29, #-176]
  40636c:	mov	w3, #0x1fd                 	// #509
  406370:	ldur	x4, [x29, #-184]
  406374:	adrp	x5, 408000 <_fini+0xc7c>
  406378:	add	x5, x5, #0x61e
  40637c:	bl	401980 <log_internal_realm@plt>
  406380:	stur	w0, [x29, #-200]
  406384:	b	40639c <add_root_rw+0x190>
  406388:	ldur	w0, [x29, #-52]
  40638c:	bl	401990 <abs@plt>
  406390:	mov	w8, wzr
  406394:	subs	w8, w8, w0, uxtb
  406398:	stur	w8, [x29, #-200]
  40639c:	ldur	w8, [x29, #-200]
  4063a0:	stur	w8, [x29, #-60]
  4063a4:	stur	wzr, [x29, #-4]
  4063a8:	b	406724 <add_root_rw+0x518>
  4063ac:	ldur	x8, [x29, #-16]
  4063b0:	ldrb	w9, [x8]
  4063b4:	mov	w10, #0x1                   	// #1
  4063b8:	lsr	w9, w9, w10
  4063bc:	and	w9, w9, w10
  4063c0:	tbnz	w9, #0, 406440 <add_root_rw+0x234>
  4063c4:	mov	w8, #0x7                   	// #7
  4063c8:	stur	w8, [x29, #-64]
  4063cc:	stur	wzr, [x29, #-68]
  4063d0:	stur	wzr, [x29, #-72]
  4063d4:	ldur	w0, [x29, #-72]
  4063d8:	bl	401970 <log_get_max_level_realm@plt>
  4063dc:	ldur	w8, [x29, #-64]
  4063e0:	and	w8, w8, #0x7
  4063e4:	cmp	w0, w8
  4063e8:	b.lt	40641c <add_root_rw+0x210>  // b.tstop
  4063ec:	ldur	w8, [x29, #-72]
  4063f0:	ldur	w9, [x29, #-64]
  4063f4:	orr	w0, w9, w8, lsl #10
  4063f8:	ldur	w1, [x29, #-68]
  4063fc:	ldur	x2, [x29, #-176]
  406400:	mov	w3, #0x202                 	// #514
  406404:	ldur	x4, [x29, #-184]
  406408:	adrp	x5, 408000 <_fini+0xc7c>
  40640c:	add	x5, x5, #0x687
  406410:	bl	401980 <log_internal_realm@plt>
  406414:	stur	w0, [x29, #-204]
  406418:	b	406430 <add_root_rw+0x224>
  40641c:	ldur	w0, [x29, #-68]
  406420:	bl	401990 <abs@plt>
  406424:	mov	w8, wzr
  406428:	subs	w8, w8, w0, uxtb
  40642c:	stur	w8, [x29, #-204]
  406430:	ldur	w8, [x29, #-204]
  406434:	stur	w8, [x29, #-76]
  406438:	stur	wzr, [x29, #-4]
  40643c:	b	406724 <add_root_rw+0x518>
  406440:	adrp	x8, 420000 <arg_enabled>
  406444:	add	x8, x8, #0x10
  406448:	ldr	x0, [x8]
  40644c:	stur	x8, [x29, #-216]
  406450:	bl	401d00 <generator_enable_remount_fs_service@plt>
  406454:	ldur	x8, [x29, #-216]
  406458:	ldr	x9, [x8]
  40645c:	sub	x10, x29, #0x60
  406460:	stur	x9, [x29, #-96]
  406464:	adrp	x9, 408000 <_fini+0xc7c>
  406468:	add	x9, x9, #0x6f6
  40646c:	str	x9, [x10, #8]
  406470:	stur	xzr, [x29, #-120]
  406474:	stur	xzr, [x29, #-128]
  406478:	ldur	x8, [x29, #-128]
  40647c:	mov	w9, #0x0                   	// #0
  406480:	cmp	x8, #0x2
  406484:	stur	w9, [x29, #-220]
  406488:	b.cs	4064b0 <add_root_rw+0x2a4>  // b.hs, b.nlast
  40648c:	ldur	x8, [x29, #-128]
  406490:	mov	x9, #0x8                   	// #8
  406494:	mul	x8, x9, x8
  406498:	sub	x9, x29, #0x60
  40649c:	add	x8, x9, x8
  4064a0:	ldr	x8, [x8]
  4064a4:	cmp	x8, #0x0
  4064a8:	cset	w10, ne  // ne = any
  4064ac:	stur	w10, [x29, #-220]
  4064b0:	ldur	w8, [x29, #-220]
  4064b4:	tbnz	w8, #0, 4064bc <add_root_rw+0x2b0>
  4064b8:	b	4064f4 <add_root_rw+0x2e8>
  4064bc:	ldur	x8, [x29, #-128]
  4064c0:	mov	x9, #0x8                   	// #8
  4064c4:	mul	x8, x9, x8
  4064c8:	sub	x9, x29, #0x60
  4064cc:	add	x8, x9, x8
  4064d0:	ldr	x0, [x8]
  4064d4:	bl	401b60 <strlen@plt>
  4064d8:	ldur	x8, [x29, #-120]
  4064dc:	add	x8, x8, x0
  4064e0:	stur	x8, [x29, #-120]
  4064e4:	ldur	x8, [x29, #-128]
  4064e8:	add	x8, x8, #0x1
  4064ec:	stur	x8, [x29, #-128]
  4064f0:	b	406478 <add_root_rw+0x26c>
  4064f4:	ldur	x8, [x29, #-120]
  4064f8:	add	x8, x8, #0x1
  4064fc:	stur	x8, [x29, #-136]
  406500:	ldur	x1, [x29, #-136]
  406504:	mov	x0, #0x1                   	// #1
  406508:	bl	404440 <size_multiply_overflow>
  40650c:	mov	w8, #0x1                   	// #1
  406510:	eor	w9, w0, #0x1
  406514:	eor	w9, w9, w8
  406518:	eor	w9, w9, w8
  40651c:	eor	w8, w9, w8
  406520:	and	w8, w8, #0x1
  406524:	mov	w1, w8
  406528:	sxtw	x10, w1
  40652c:	cbz	x10, 406550 <add_root_rw+0x344>
  406530:	mov	w8, wzr
  406534:	mov	w0, w8
  406538:	adrp	x1, 407000 <add_automount+0x640>
  40653c:	add	x1, x1, #0x78f
  406540:	ldur	x2, [x29, #-176]
  406544:	mov	w3, #0x208                 	// #520
  406548:	ldur	x4, [x29, #-192]
  40654c:	bl	4019e0 <log_assert_failed_realm@plt>
  406550:	ldur	x8, [x29, #-136]
  406554:	mov	x9, #0x1                   	// #1
  406558:	mul	x8, x9, x8
  40655c:	cmp	x8, #0x400, lsl #12
  406560:	cset	w10, ls  // ls = plast
  406564:	mov	w11, #0x1                   	// #1
  406568:	eor	w10, w10, #0x1
  40656c:	eor	w10, w10, w11
  406570:	eor	w10, w10, w11
  406574:	and	w10, w10, #0x1
  406578:	mov	w0, w10
  40657c:	sxtw	x8, w0
  406580:	cbz	x8, 4065a4 <add_root_rw+0x398>
  406584:	mov	w8, wzr
  406588:	mov	w0, w8
  40658c:	adrp	x1, 407000 <add_automount+0x640>
  406590:	add	x1, x1, #0x7ba
  406594:	ldur	x2, [x29, #-176]
  406598:	mov	w3, #0x208                 	// #520
  40659c:	ldur	x4, [x29, #-192]
  4065a0:	bl	4019e0 <log_assert_failed_realm@plt>
  4065a4:	ldur	x8, [x29, #-136]
  4065a8:	mov	x9, #0x1                   	// #1
  4065ac:	mul	x8, x9, x8
  4065b0:	mul	x8, x8, x9
  4065b4:	add	x8, x8, #0xf
  4065b8:	and	x8, x8, #0xfffffffffffffff0
  4065bc:	mov	x9, sp
  4065c0:	subs	x8, x9, x8
  4065c4:	mov	sp, x8
  4065c8:	stur	x8, [x29, #-144]
  4065cc:	ldur	x8, [x29, #-144]
  4065d0:	stur	x8, [x29, #-104]
  4065d4:	stur	x8, [x29, #-112]
  4065d8:	stur	xzr, [x29, #-128]
  4065dc:	ldur	x8, [x29, #-128]
  4065e0:	mov	w9, #0x0                   	// #0
  4065e4:	cmp	x8, #0x2
  4065e8:	stur	w9, [x29, #-224]
  4065ec:	b.cs	406614 <add_root_rw+0x408>  // b.hs, b.nlast
  4065f0:	ldur	x8, [x29, #-128]
  4065f4:	mov	x9, #0x8                   	// #8
  4065f8:	mul	x8, x9, x8
  4065fc:	sub	x9, x29, #0x60
  406600:	add	x8, x9, x8
  406604:	ldr	x8, [x8]
  406608:	cmp	x8, #0x0
  40660c:	cset	w10, ne  // ne = any
  406610:	stur	w10, [x29, #-224]
  406614:	ldur	w8, [x29, #-224]
  406618:	tbnz	w8, #0, 406620 <add_root_rw+0x414>
  40661c:	b	406654 <add_root_rw+0x448>
  406620:	ldur	x0, [x29, #-112]
  406624:	ldur	x8, [x29, #-128]
  406628:	mov	x9, #0x8                   	// #8
  40662c:	mul	x8, x9, x8
  406630:	sub	x9, x29, #0x60
  406634:	add	x8, x9, x8
  406638:	ldr	x1, [x8]
  40663c:	bl	401b70 <stpcpy@plt>
  406640:	stur	x0, [x29, #-112]
  406644:	ldur	x8, [x29, #-128]
  406648:	add	x8, x8, #0x1
  40664c:	stur	x8, [x29, #-128]
  406650:	b	4065dc <add_root_rw+0x3d0>
  406654:	ldur	x8, [x29, #-112]
  406658:	mov	w9, #0x0                   	// #0
  40665c:	strb	w9, [x8]
  406660:	ldur	x8, [x29, #-104]
  406664:	stur	x8, [x29, #-152]
  406668:	ldur	x8, [x29, #-152]
  40666c:	stur	x8, [x29, #-24]
  406670:	ldur	x0, [x29, #-24]
  406674:	adrp	x1, 408000 <_fini+0xc7c>
  406678:	add	x1, x1, #0x727
  40667c:	mov	w2, #0xc1                  	// #193
  406680:	bl	4044a8 <write_string_file>
  406684:	stur	w0, [x29, #-28]
  406688:	ldur	w9, [x29, #-28]
  40668c:	cmp	w9, #0x0
  406690:	cset	w9, ge  // ge = tcont
  406694:	tbnz	w9, #0, 406720 <add_root_rw+0x514>
  406698:	mov	w8, #0x3                   	// #3
  40669c:	stur	w8, [x29, #-156]
  4066a0:	ldur	w8, [x29, #-28]
  4066a4:	stur	w8, [x29, #-160]
  4066a8:	stur	wzr, [x29, #-164]
  4066ac:	ldur	w0, [x29, #-164]
  4066b0:	bl	401970 <log_get_max_level_realm@plt>
  4066b4:	ldur	w8, [x29, #-156]
  4066b8:	and	w8, w8, #0x7
  4066bc:	cmp	w0, w8
  4066c0:	b.lt	4066f8 <add_root_rw+0x4ec>  // b.tstop
  4066c4:	ldur	w8, [x29, #-164]
  4066c8:	ldur	w9, [x29, #-156]
  4066cc:	orr	w0, w9, w8, lsl #10
  4066d0:	ldur	w1, [x29, #-160]
  4066d4:	ldur	x6, [x29, #-24]
  4066d8:	ldur	x2, [x29, #-176]
  4066dc:	mov	w3, #0x210                 	// #528
  4066e0:	ldur	x4, [x29, #-184]
  4066e4:	adrp	x5, 408000 <_fini+0xc7c>
  4066e8:	add	x5, x5, #0x78c
  4066ec:	bl	401980 <log_internal_realm@plt>
  4066f0:	stur	w0, [x29, #-228]
  4066f4:	b	40670c <add_root_rw+0x500>
  4066f8:	ldur	w0, [x29, #-160]
  4066fc:	bl	401990 <abs@plt>
  406700:	mov	w8, wzr
  406704:	subs	w8, w8, w0, uxtb
  406708:	stur	w8, [x29, #-228]
  40670c:	ldur	w8, [x29, #-228]
  406710:	stur	w8, [x29, #-168]
  406714:	ldur	w8, [x29, #-168]
  406718:	stur	w8, [x29, #-4]
  40671c:	b	406724 <add_root_rw+0x518>
  406720:	stur	wzr, [x29, #-4]
  406724:	ldur	w0, [x29, #-4]
  406728:	mov	sp, x29
  40672c:	ldp	x29, x30, [sp], #16
  406730:	ret

0000000000406734 <sd_device_unrefp>:
  406734:	sub	sp, sp, #0x20
  406738:	stp	x29, x30, [sp, #16]
  40673c:	add	x29, sp, #0x10
  406740:	str	x0, [sp, #8]
  406744:	ldr	x8, [sp, #8]
  406748:	ldr	x8, [x8]
  40674c:	cbz	x8, 40675c <sd_device_unrefp+0x28>
  406750:	ldr	x8, [sp, #8]
  406754:	ldr	x0, [x8]
  406758:	bl	401d10 <sd_device_unref@plt>
  40675c:	ldp	x29, x30, [sp, #16]
  406760:	add	sp, sp, #0x20
  406764:	ret

0000000000406768 <path_is_busy>:
  406768:	sub	sp, sp, #0x80
  40676c:	stp	x29, x30, [sp, #112]
  406770:	add	x29, sp, #0x70
  406774:	mov	x8, xzr
  406778:	mov	w2, #0x400                 	// #1024
  40677c:	adrp	x9, 407000 <add_automount+0x640>
  406780:	add	x9, x9, #0x3a8
  406784:	add	x9, x9, #0x3
  406788:	adrp	x10, 408000 <_fini+0xc7c>
  40678c:	add	x10, x10, #0x249
  406790:	stur	x0, [x29, #-16]
  406794:	ldur	x0, [x29, #-16]
  406798:	mov	x1, x8
  40679c:	str	x9, [sp, #32]
  4067a0:	str	x10, [sp, #24]
  4067a4:	bl	401d20 <path_is_mount_point@plt>
  4067a8:	stur	w0, [x29, #-20]
  4067ac:	ldur	w11, [x29, #-20]
  4067b0:	cmp	w11, #0x0
  4067b4:	cset	w11, le
  4067b8:	tbnz	w11, #0, 4067c4 <path_is_busy+0x5c>
  4067bc:	stur	wzr, [x29, #-4]
  4067c0:	b	4069b0 <path_is_busy+0x248>
  4067c4:	ldur	w8, [x29, #-20]
  4067c8:	mov	w9, #0xfffffffe            	// #-2
  4067cc:	cmp	w8, w9
  4067d0:	b.ne	4067dc <path_is_busy+0x74>  // b.any
  4067d4:	stur	wzr, [x29, #-4]
  4067d8:	b	4069b0 <path_is_busy+0x248>
  4067dc:	ldur	w8, [x29, #-20]
  4067e0:	cmp	w8, #0x0
  4067e4:	cset	w8, ge  // ge = tcont
  4067e8:	tbnz	w8, #0, 406874 <path_is_busy+0x10c>
  4067ec:	mov	w8, #0x4                   	// #4
  4067f0:	stur	w8, [x29, #-24]
  4067f4:	ldur	w8, [x29, #-20]
  4067f8:	stur	w8, [x29, #-28]
  4067fc:	stur	wzr, [x29, #-32]
  406800:	ldur	w0, [x29, #-32]
  406804:	bl	401970 <log_get_max_level_realm@plt>
  406808:	ldur	w8, [x29, #-24]
  40680c:	and	w8, w8, #0x7
  406810:	cmp	w0, w8
  406814:	b.lt	40684c <path_is_busy+0xe4>  // b.tstop
  406818:	ldur	w8, [x29, #-32]
  40681c:	ldur	w9, [x29, #-24]
  406820:	orr	w0, w9, w8, lsl #10
  406824:	ldur	w1, [x29, #-28]
  406828:	ldur	x6, [x29, #-16]
  40682c:	ldr	x2, [sp, #32]
  406830:	mov	w3, #0xf0                  	// #240
  406834:	ldr	x4, [sp, #24]
  406838:	adrp	x5, 408000 <_fini+0xc7c>
  40683c:	add	x5, x5, #0x256
  406840:	bl	401980 <log_internal_realm@plt>
  406844:	str	w0, [sp, #20]
  406848:	b	406860 <path_is_busy+0xf8>
  40684c:	ldur	w0, [x29, #-28]
  406850:	bl	401990 <abs@plt>
  406854:	mov	w8, wzr
  406858:	subs	w8, w8, w0, uxtb
  40685c:	str	w8, [sp, #20]
  406860:	ldr	w8, [sp, #20]
  406864:	stur	w8, [x29, #-36]
  406868:	ldur	w8, [x29, #-36]
  40686c:	stur	w8, [x29, #-4]
  406870:	b	4069b0 <path_is_busy+0x248>
  406874:	ldur	x0, [x29, #-16]
  406878:	bl	407250 <dir_is_empty>
  40687c:	stur	w0, [x29, #-20]
  406880:	ldur	w8, [x29, #-20]
  406884:	cmp	w8, #0x0
  406888:	cset	w8, ge  // ge = tcont
  40688c:	tbnz	w8, #0, 406918 <path_is_busy+0x1b0>
  406890:	mov	w8, #0x4                   	// #4
  406894:	stur	w8, [x29, #-40]
  406898:	ldur	w8, [x29, #-20]
  40689c:	stur	w8, [x29, #-44]
  4068a0:	stur	wzr, [x29, #-48]
  4068a4:	ldur	w0, [x29, #-48]
  4068a8:	bl	401970 <log_get_max_level_realm@plt>
  4068ac:	ldur	w8, [x29, #-40]
  4068b0:	and	w8, w8, #0x7
  4068b4:	cmp	w0, w8
  4068b8:	b.lt	4068f0 <path_is_busy+0x188>  // b.tstop
  4068bc:	ldur	w8, [x29, #-48]
  4068c0:	ldur	w9, [x29, #-40]
  4068c4:	orr	w0, w9, w8, lsl #10
  4068c8:	ldur	w1, [x29, #-44]
  4068cc:	ldur	x6, [x29, #-16]
  4068d0:	ldr	x2, [sp, #32]
  4068d4:	mov	w3, #0xf5                  	// #245
  4068d8:	ldr	x4, [sp, #24]
  4068dc:	adrp	x5, 408000 <_fini+0xc7c>
  4068e0:	add	x5, x5, #0x280
  4068e4:	bl	401980 <log_internal_realm@plt>
  4068e8:	str	w0, [sp, #16]
  4068ec:	b	406904 <path_is_busy+0x19c>
  4068f0:	ldur	w0, [x29, #-44]
  4068f4:	bl	401990 <abs@plt>
  4068f8:	mov	w8, wzr
  4068fc:	subs	w8, w8, w0, uxtb
  406900:	str	w8, [sp, #16]
  406904:	ldr	w8, [sp, #16]
  406908:	stur	w8, [x29, #-52]
  40690c:	ldur	w8, [x29, #-52]
  406910:	stur	w8, [x29, #-4]
  406914:	b	4069b0 <path_is_busy+0x248>
  406918:	ldur	w8, [x29, #-20]
  40691c:	cmp	w8, #0x0
  406920:	cset	w8, le
  406924:	tbnz	w8, #0, 406930 <path_is_busy+0x1c8>
  406928:	stur	wzr, [x29, #-4]
  40692c:	b	4069b0 <path_is_busy+0x248>
  406930:	mov	w8, #0x7                   	// #7
  406934:	str	w8, [sp, #56]
  406938:	str	wzr, [sp, #52]
  40693c:	str	wzr, [sp, #48]
  406940:	ldr	w0, [sp, #48]
  406944:	bl	401970 <log_get_max_level_realm@plt>
  406948:	ldr	w8, [sp, #56]
  40694c:	and	w8, w8, #0x7
  406950:	cmp	w0, w8
  406954:	b.lt	40698c <path_is_busy+0x224>  // b.tstop
  406958:	ldr	w8, [sp, #48]
  40695c:	ldr	w9, [sp, #56]
  406960:	orr	w0, w9, w8, lsl #10
  406964:	ldr	w1, [sp, #52]
  406968:	ldur	x6, [x29, #-16]
  40696c:	ldr	x2, [sp, #32]
  406970:	mov	w3, #0xf9                  	// #249
  406974:	ldr	x4, [sp, #24]
  406978:	adrp	x5, 408000 <_fini+0xc7c>
  40697c:	add	x5, x5, #0x2a2
  406980:	bl	401980 <log_internal_realm@plt>
  406984:	str	w0, [sp, #12]
  406988:	b	4069a0 <path_is_busy+0x238>
  40698c:	ldr	w0, [sp, #52]
  406990:	bl	401990 <abs@plt>
  406994:	mov	w8, wzr
  406998:	subs	w8, w8, w0, uxtb
  40699c:	str	w8, [sp, #12]
  4069a0:	ldr	w8, [sp, #12]
  4069a4:	str	w8, [sp, #44]
  4069a8:	mov	w8, #0x1                   	// #1
  4069ac:	stur	w8, [x29, #-4]
  4069b0:	ldur	w0, [x29, #-4]
  4069b4:	ldp	x29, x30, [sp, #112]
  4069b8:	add	sp, sp, #0x80
  4069bc:	ret

00000000004069c0 <add_automount>:
  4069c0:	stp	x29, x30, [sp, #-32]!
  4069c4:	stp	x28, x19, [sp, #16]
  4069c8:	mov	x29, sp
  4069cc:	sub	sp, sp, #0x180
  4069d0:	mov	x19, sp
  4069d4:	mov	x8, xzr
  4069d8:	adrp	x9, 408000 <_fini+0xc7c>
  4069dc:	add	x9, x9, #0x2c4
  4069e0:	adrp	x10, 407000 <add_automount+0x640>
  4069e4:	add	x10, x10, #0x3a8
  4069e8:	add	x10, x10, #0x3
  4069ec:	adrp	x11, 408000 <_fini+0xc7c>
  4069f0:	add	x11, x11, #0x2cb
  4069f4:	adrp	x12, 408000 <_fini+0xc7c>
  4069f8:	add	x12, x12, #0x34d
  4069fc:	mov	w13, #0x1                   	// #1
  406a00:	stur	x0, [x29, #-16]
  406a04:	stur	x1, [x29, #-24]
  406a08:	stur	x2, [x29, #-32]
  406a0c:	stur	x3, [x29, #-40]
  406a10:	and	w13, w4, w13
  406a14:	sturb	w13, [x29, #-41]
  406a18:	stur	x5, [x29, #-56]
  406a1c:	stur	x6, [x29, #-64]
  406a20:	stur	x7, [x29, #-72]
  406a24:	stur	x8, [x29, #-80]
  406a28:	stur	x8, [x29, #-88]
  406a2c:	stur	x9, [x29, #-96]
  406a30:	str	x10, [x19, #56]
  406a34:	str	x11, [x19, #48]
  406a38:	str	x12, [x19, #40]
  406a3c:	ldur	x8, [x29, #-16]
  406a40:	cmp	x8, #0x0
  406a44:	cset	w9, ne  // ne = any
  406a48:	mov	w10, #0x1                   	// #1
  406a4c:	eor	w9, w9, #0x1
  406a50:	eor	w9, w9, w10
  406a54:	eor	w9, w9, w10
  406a58:	and	w9, w9, #0x1
  406a5c:	mov	w0, w9
  406a60:	sxtw	x8, w0
  406a64:	cbz	x8, 406a88 <add_automount+0xc8>
  406a68:	mov	w8, wzr
  406a6c:	mov	w0, w8
  406a70:	adrp	x1, 407000 <add_automount+0x640>
  406a74:	add	x1, x1, #0x6ed
  406a78:	ldr	x2, [x19, #56]
  406a7c:	mov	w3, #0x152                 	// #338
  406a80:	ldr	x4, [x19, #48]
  406a84:	bl	4019e0 <log_assert_failed_realm@plt>
  406a88:	ldur	x8, [x29, #-32]
  406a8c:	cmp	x8, #0x0
  406a90:	cset	w9, ne  // ne = any
  406a94:	mov	w10, #0x1                   	// #1
  406a98:	eor	w9, w9, #0x1
  406a9c:	eor	w9, w9, w10
  406aa0:	eor	w9, w9, w10
  406aa4:	and	w9, w9, #0x1
  406aa8:	mov	w0, w9
  406aac:	sxtw	x8, w0
  406ab0:	cbz	x8, 406ad4 <add_automount+0x114>
  406ab4:	mov	w8, wzr
  406ab8:	mov	w0, w8
  406abc:	adrp	x1, 407000 <add_automount+0x640>
  406ac0:	add	x1, x1, #0xb93
  406ac4:	ldr	x2, [x19, #56]
  406ac8:	mov	w3, #0x153                 	// #339
  406acc:	ldr	x4, [x19, #48]
  406ad0:	bl	4019e0 <log_assert_failed_realm@plt>
  406ad4:	ldur	x8, [x29, #-64]
  406ad8:	cmp	x8, #0x0
  406adc:	cset	w9, ne  // ne = any
  406ae0:	mov	w10, #0x1                   	// #1
  406ae4:	eor	w9, w9, #0x1
  406ae8:	eor	w9, w9, w10
  406aec:	eor	w9, w9, w10
  406af0:	and	w9, w9, #0x1
  406af4:	mov	w0, w9
  406af8:	sxtw	x8, w0
  406afc:	cbz	x8, 406b20 <add_automount+0x160>
  406b00:	mov	w8, wzr
  406b04:	mov	w0, w8
  406b08:	adrp	x1, 407000 <add_automount+0x640>
  406b0c:	add	x1, x1, #0xb99
  406b10:	ldr	x2, [x19, #56]
  406b14:	mov	w3, #0x154                 	// #340
  406b18:	ldr	x4, [x19, #48]
  406b1c:	bl	4019e0 <log_assert_failed_realm@plt>
  406b20:	ldur	x8, [x29, #-56]
  406b24:	cbz	x8, 406d48 <add_automount+0x388>
  406b28:	ldur	x8, [x29, #-56]
  406b2c:	sub	x9, x29, #0x88
  406b30:	stur	x8, [x29, #-136]
  406b34:	adrp	x8, 408000 <_fini+0xc7c>
  406b38:	add	x8, x8, #0x340
  406b3c:	str	x8, [x9, #8]
  406b40:	ldur	x8, [x29, #-96]
  406b44:	str	x8, [x9, #16]
  406b48:	stur	xzr, [x29, #-160]
  406b4c:	stur	xzr, [x29, #-168]
  406b50:	ldur	x8, [x29, #-168]
  406b54:	mov	w9, #0x0                   	// #0
  406b58:	cmp	x8, #0x3
  406b5c:	str	w9, [x19, #36]
  406b60:	b.cs	406b88 <add_automount+0x1c8>  // b.hs, b.nlast
  406b64:	ldur	x8, [x29, #-168]
  406b68:	mov	x9, #0x8                   	// #8
  406b6c:	mul	x8, x9, x8
  406b70:	sub	x9, x29, #0x88
  406b74:	add	x8, x9, x8
  406b78:	ldr	x8, [x8]
  406b7c:	cmp	x8, #0x0
  406b80:	cset	w10, ne  // ne = any
  406b84:	str	w10, [x19, #36]
  406b88:	ldr	w8, [x19, #36]
  406b8c:	tbnz	w8, #0, 406b94 <add_automount+0x1d4>
  406b90:	b	406bcc <add_automount+0x20c>
  406b94:	ldur	x8, [x29, #-168]
  406b98:	mov	x9, #0x8                   	// #8
  406b9c:	mul	x8, x9, x8
  406ba0:	sub	x9, x29, #0x88
  406ba4:	add	x8, x9, x8
  406ba8:	ldr	x0, [x8]
  406bac:	bl	401b60 <strlen@plt>
  406bb0:	ldur	x8, [x29, #-160]
  406bb4:	add	x8, x8, x0
  406bb8:	stur	x8, [x29, #-160]
  406bbc:	ldur	x8, [x29, #-168]
  406bc0:	add	x8, x8, #0x1
  406bc4:	stur	x8, [x29, #-168]
  406bc8:	b	406b50 <add_automount+0x190>
  406bcc:	ldur	x8, [x29, #-160]
  406bd0:	add	x8, x8, #0x1
  406bd4:	stur	x8, [x29, #-176]
  406bd8:	ldur	x1, [x29, #-176]
  406bdc:	mov	x0, #0x1                   	// #1
  406be0:	bl	404440 <size_multiply_overflow>
  406be4:	mov	w8, #0x1                   	// #1
  406be8:	eor	w9, w0, #0x1
  406bec:	eor	w9, w9, w8
  406bf0:	eor	w9, w9, w8
  406bf4:	eor	w8, w9, w8
  406bf8:	and	w8, w8, #0x1
  406bfc:	mov	w1, w8
  406c00:	sxtw	x10, w1
  406c04:	cbz	x10, 406c28 <add_automount+0x268>
  406c08:	mov	w8, wzr
  406c0c:	mov	w0, w8
  406c10:	adrp	x1, 407000 <add_automount+0x640>
  406c14:	add	x1, x1, #0x78f
  406c18:	ldr	x2, [x19, #56]
  406c1c:	mov	w3, #0x157                 	// #343
  406c20:	ldr	x4, [x19, #48]
  406c24:	bl	4019e0 <log_assert_failed_realm@plt>
  406c28:	ldur	x8, [x29, #-176]
  406c2c:	mov	x9, #0x1                   	// #1
  406c30:	mul	x8, x9, x8
  406c34:	cmp	x8, #0x400, lsl #12
  406c38:	cset	w10, ls  // ls = plast
  406c3c:	mov	w11, #0x1                   	// #1
  406c40:	eor	w10, w10, #0x1
  406c44:	eor	w10, w10, w11
  406c48:	eor	w10, w10, w11
  406c4c:	and	w10, w10, #0x1
  406c50:	mov	w0, w10
  406c54:	sxtw	x8, w0
  406c58:	cbz	x8, 406c7c <add_automount+0x2bc>
  406c5c:	mov	w8, wzr
  406c60:	mov	w0, w8
  406c64:	adrp	x1, 407000 <add_automount+0x640>
  406c68:	add	x1, x1, #0x7ba
  406c6c:	ldr	x2, [x19, #56]
  406c70:	mov	w3, #0x157                 	// #343
  406c74:	ldr	x4, [x19, #48]
  406c78:	bl	4019e0 <log_assert_failed_realm@plt>
  406c7c:	ldur	x8, [x29, #-176]
  406c80:	mov	x9, #0x1                   	// #1
  406c84:	mul	x8, x9, x8
  406c88:	mul	x8, x8, x9
  406c8c:	add	x8, x8, #0xf
  406c90:	and	x8, x8, #0xfffffffffffffff0
  406c94:	mov	x9, sp
  406c98:	subs	x8, x9, x8
  406c9c:	mov	sp, x8
  406ca0:	stur	x8, [x29, #-184]
  406ca4:	ldur	x8, [x29, #-184]
  406ca8:	stur	x8, [x29, #-144]
  406cac:	stur	x8, [x29, #-152]
  406cb0:	stur	xzr, [x29, #-168]
  406cb4:	ldur	x8, [x29, #-168]
  406cb8:	mov	w9, #0x0                   	// #0
  406cbc:	cmp	x8, #0x3
  406cc0:	str	w9, [x19, #32]
  406cc4:	b.cs	406cec <add_automount+0x32c>  // b.hs, b.nlast
  406cc8:	ldur	x8, [x29, #-168]
  406ccc:	mov	x9, #0x8                   	// #8
  406cd0:	mul	x8, x9, x8
  406cd4:	sub	x9, x29, #0x88
  406cd8:	add	x8, x9, x8
  406cdc:	ldr	x8, [x8]
  406ce0:	cmp	x8, #0x0
  406ce4:	cset	w10, ne  // ne = any
  406ce8:	str	w10, [x19, #32]
  406cec:	ldr	w8, [x19, #32]
  406cf0:	tbnz	w8, #0, 406cf8 <add_automount+0x338>
  406cf4:	b	406d2c <add_automount+0x36c>
  406cf8:	ldur	x0, [x29, #-152]
  406cfc:	ldur	x8, [x29, #-168]
  406d00:	mov	x9, #0x8                   	// #8
  406d04:	mul	x8, x9, x8
  406d08:	sub	x9, x29, #0x88
  406d0c:	add	x8, x9, x8
  406d10:	ldr	x1, [x8]
  406d14:	bl	401b70 <stpcpy@plt>
  406d18:	stur	x0, [x29, #-152]
  406d1c:	ldur	x8, [x29, #-168]
  406d20:	add	x8, x8, #0x1
  406d24:	stur	x8, [x29, #-168]
  406d28:	b	406cb4 <add_automount+0x2f4>
  406d2c:	ldur	x8, [x29, #-152]
  406d30:	mov	w9, #0x0                   	// #0
  406d34:	strb	w9, [x8]
  406d38:	ldur	x8, [x29, #-144]
  406d3c:	str	x8, [x19, #192]
  406d40:	ldr	x8, [x19, #192]
  406d44:	stur	x8, [x29, #-96]
  406d48:	ldur	x0, [x29, #-16]
  406d4c:	ldur	x1, [x29, #-24]
  406d50:	ldur	x2, [x29, #-32]
  406d54:	ldur	x3, [x29, #-40]
  406d58:	ldurb	w8, [x29, #-41]
  406d5c:	ldur	x5, [x29, #-96]
  406d60:	ldur	x6, [x29, #-64]
  406d64:	and	w4, w8, #0x1
  406d68:	mov	x9, xzr
  406d6c:	mov	x7, x9
  406d70:	bl	402f18 <add_mount>
  406d74:	stur	w0, [x29, #-108]
  406d78:	ldur	w8, [x29, #-108]
  406d7c:	cmp	w8, #0x0
  406d80:	cset	w8, ge  // ge = tcont
  406d84:	tbnz	w8, #0, 406d9c <add_automount+0x3dc>
  406d88:	ldur	w8, [x29, #-108]
  406d8c:	stur	w8, [x29, #-4]
  406d90:	mov	w8, #0x1                   	// #1
  406d94:	str	w8, [x19, #188]
  406d98:	b	40722c <add_automount+0x86c>
  406d9c:	ldur	x0, [x29, #-32]
  406da0:	adrp	x1, 408000 <_fini+0xc7c>
  406da4:	add	x1, x1, #0x342
  406da8:	sub	x2, x29, #0x50
  406dac:	bl	401ab0 <unit_name_from_path@plt>
  406db0:	stur	w0, [x29, #-108]
  406db4:	ldur	w8, [x29, #-108]
  406db8:	cmp	w8, #0x0
  406dbc:	cset	w8, ge  // ge = tcont
  406dc0:	tbnz	w8, #0, 406e50 <add_automount+0x490>
  406dc4:	mov	w8, #0x3                   	// #3
  406dc8:	str	w8, [x19, #184]
  406dcc:	ldur	w8, [x29, #-108]
  406dd0:	str	w8, [x19, #180]
  406dd4:	str	wzr, [x19, #176]
  406dd8:	ldr	w0, [x19, #176]
  406ddc:	bl	401970 <log_get_max_level_realm@plt>
  406de0:	ldr	w8, [x19, #184]
  406de4:	and	w8, w8, #0x7
  406de8:	cmp	w0, w8
  406dec:	b.lt	406e20 <add_automount+0x460>  // b.tstop
  406df0:	ldr	w8, [x19, #176]
  406df4:	ldr	w9, [x19, #184]
  406df8:	orr	w0, w9, w8, lsl #10
  406dfc:	ldr	w1, [x19, #180]
  406e00:	ldr	x2, [x19, #56]
  406e04:	mov	w3, #0x166                 	// #358
  406e08:	ldr	x4, [x19, #40]
  406e0c:	adrp	x5, 407000 <add_automount+0x640>
  406e10:	add	x5, x5, #0x752
  406e14:	bl	401980 <log_internal_realm@plt>
  406e18:	str	w0, [x19, #28]
  406e1c:	b	406e34 <add_automount+0x474>
  406e20:	ldr	w0, [x19, #180]
  406e24:	bl	401990 <abs@plt>
  406e28:	mov	w8, wzr
  406e2c:	subs	w8, w8, w0, uxtb
  406e30:	str	w8, [x19, #28]
  406e34:	ldr	w8, [x19, #28]
  406e38:	str	w8, [x19, #172]
  406e3c:	ldr	w8, [x19, #172]
  406e40:	stur	w8, [x29, #-4]
  406e44:	mov	w8, #0x1                   	// #1
  406e48:	str	w8, [x19, #188]
  406e4c:	b	40722c <add_automount+0x86c>
  406e50:	ldur	x8, [x29, #-80]
  406e54:	str	x8, [x19, #160]
  406e58:	adrp	x8, 420000 <arg_enabled>
  406e5c:	add	x8, x8, #0x10
  406e60:	ldr	x8, [x8]
  406e64:	str	x8, [x19, #152]
  406e68:	ldr	x8, [x19, #160]
  406e6c:	ldrb	w9, [x8]
  406e70:	mov	w10, #0x0                   	// #0
  406e74:	cmp	w9, #0x2f
  406e78:	str	w10, [x19, #24]
  406e7c:	b.ne	406e94 <add_automount+0x4d4>  // b.any
  406e80:	ldr	x8, [x19, #160]
  406e84:	ldrb	w9, [x8, #1]
  406e88:	cmp	w9, #0x2f
  406e8c:	cset	w9, eq  // eq = none
  406e90:	str	w9, [x19, #24]
  406e94:	ldr	w8, [x19, #24]
  406e98:	tbnz	w8, #0, 406ea0 <add_automount+0x4e0>
  406e9c:	b	406eb0 <add_automount+0x4f0>
  406ea0:	ldr	x8, [x19, #160]
  406ea4:	add	x8, x8, #0x1
  406ea8:	str	x8, [x19, #160]
  406eac:	b	406e68 <add_automount+0x4a8>
  406eb0:	ldr	x0, [x19, #152]
  406eb4:	bl	404400 <isempty>
  406eb8:	tbnz	w0, #0, 406ec0 <add_automount+0x500>
  406ebc:	b	406ecc <add_automount+0x50c>
  406ec0:	ldr	x8, [x19, #160]
  406ec4:	str	x8, [x19, #144]
  406ec8:	b	407064 <add_automount+0x6a4>
  406ecc:	ldr	x0, [x19, #152]
  406ed0:	bl	401b60 <strlen@plt>
  406ed4:	add	x8, x0, #0x1
  406ed8:	ldr	x0, [x19, #160]
  406edc:	str	x8, [x19, #16]
  406ee0:	bl	401b60 <strlen@plt>
  406ee4:	ldr	x8, [x19, #16]
  406ee8:	add	x9, x8, x0
  406eec:	add	x9, x9, #0x1
  406ef0:	str	x9, [x19, #120]
  406ef4:	ldr	x9, [x19, #120]
  406ef8:	str	x9, [x19, #112]
  406efc:	ldr	x1, [x19, #112]
  406f00:	mov	x0, #0x1                   	// #1
  406f04:	bl	404440 <size_multiply_overflow>
  406f08:	mov	w8, #0x1                   	// #1
  406f0c:	eor	w9, w0, #0x1
  406f10:	eor	w9, w9, w8
  406f14:	eor	w9, w9, w8
  406f18:	eor	w8, w9, w8
  406f1c:	and	w8, w8, #0x1
  406f20:	mov	w1, w8
  406f24:	sxtw	x10, w1
  406f28:	cbz	x10, 406f4c <add_automount+0x58c>
  406f2c:	mov	w8, wzr
  406f30:	mov	w0, w8
  406f34:	adrp	x1, 407000 <add_automount+0x640>
  406f38:	add	x1, x1, #0x78f
  406f3c:	ldr	x2, [x19, #56]
  406f40:	mov	w3, #0x168                 	// #360
  406f44:	ldr	x4, [x19, #48]
  406f48:	bl	4019e0 <log_assert_failed_realm@plt>
  406f4c:	ldr	x8, [x19, #112]
  406f50:	mov	x9, #0x1                   	// #1
  406f54:	mul	x8, x9, x8
  406f58:	cmp	x8, #0x400, lsl #12
  406f5c:	cset	w10, ls  // ls = plast
  406f60:	mov	w11, #0x1                   	// #1
  406f64:	eor	w10, w10, #0x1
  406f68:	eor	w10, w10, w11
  406f6c:	eor	w10, w10, w11
  406f70:	and	w10, w10, #0x1
  406f74:	mov	w0, w10
  406f78:	sxtw	x8, w0
  406f7c:	cbz	x8, 406fa0 <add_automount+0x5e0>
  406f80:	mov	w8, wzr
  406f84:	mov	w0, w8
  406f88:	adrp	x1, 407000 <add_automount+0x640>
  406f8c:	add	x1, x1, #0x7ba
  406f90:	ldr	x2, [x19, #56]
  406f94:	mov	w3, #0x168                 	// #360
  406f98:	ldr	x4, [x19, #48]
  406f9c:	bl	4019e0 <log_assert_failed_realm@plt>
  406fa0:	ldr	x8, [x19, #112]
  406fa4:	mov	x9, #0x1                   	// #1
  406fa8:	mul	x8, x9, x8
  406fac:	mul	x8, x8, x9
  406fb0:	add	x8, x8, #0xf
  406fb4:	and	x8, x8, #0xfffffffffffffff0
  406fb8:	mov	x9, sp
  406fbc:	subs	x8, x9, x8
  406fc0:	mov	sp, x8
  406fc4:	str	x8, [x19, #104]
  406fc8:	ldr	x8, [x19, #104]
  406fcc:	str	x8, [x19, #128]
  406fd0:	ldr	x0, [x19, #128]
  406fd4:	ldr	x1, [x19, #152]
  406fd8:	bl	401b70 <stpcpy@plt>
  406fdc:	str	x0, [x19, #136]
  406fe0:	ldr	x8, [x19, #136]
  406fe4:	ldr	x9, [x19, #128]
  406fe8:	mov	w10, #0x0                   	// #0
  406fec:	cmp	x8, x9
  406ff0:	str	w10, [x19, #12]
  406ff4:	b.ls	40700c <add_automount+0x64c>  // b.plast
  406ff8:	ldr	x8, [x19, #136]
  406ffc:	ldurb	w9, [x8, #-1]
  407000:	cmp	w9, #0x2f
  407004:	cset	w9, eq  // eq = none
  407008:	str	w9, [x19, #12]
  40700c:	ldr	w8, [x19, #12]
  407010:	tbnz	w8, #0, 407018 <add_automount+0x658>
  407014:	b	40702c <add_automount+0x66c>
  407018:	ldr	x8, [x19, #136]
  40701c:	mov	x9, #0xffffffffffffffff    	// #-1
  407020:	add	x8, x8, x9
  407024:	str	x8, [x19, #136]
  407028:	b	406fe0 <add_automount+0x620>
  40702c:	ldr	x8, [x19, #160]
  407030:	ldrb	w9, [x8]
  407034:	cmp	w9, #0x2f
  407038:	b.eq	407050 <add_automount+0x690>  // b.none
  40703c:	ldr	x8, [x19, #136]
  407040:	add	x9, x8, #0x1
  407044:	str	x9, [x19, #136]
  407048:	mov	w10, #0x2f                  	// #47
  40704c:	strb	w10, [x8]
  407050:	ldr	x0, [x19, #136]
  407054:	ldr	x1, [x19, #160]
  407058:	bl	401b80 <strcpy@plt>
  40705c:	ldr	x8, [x19, #128]
  407060:	str	x8, [x19, #144]
  407064:	ldr	x8, [x19, #144]
  407068:	str	x8, [x19, #96]
  40706c:	ldr	x8, [x19, #96]
  407070:	stur	x8, [x29, #-104]
  407074:	ldur	x0, [x29, #-104]
  407078:	adrp	x1, 407000 <add_automount+0x640>
  40707c:	add	x1, x1, #0x7d9
  407080:	bl	401ae0 <fopen64@plt>
  407084:	stur	x0, [x29, #-88]
  407088:	ldur	x8, [x29, #-88]
  40708c:	cbnz	x8, 407124 <add_automount+0x764>
  407090:	mov	w8, #0x3                   	// #3
  407094:	str	w8, [x19, #92]
  407098:	bl	401af0 <__errno_location@plt>
  40709c:	ldr	w8, [x0]
  4070a0:	str	w8, [x19, #88]
  4070a4:	str	wzr, [x19, #84]
  4070a8:	ldr	w0, [x19, #84]
  4070ac:	bl	401970 <log_get_max_level_realm@plt>
  4070b0:	ldr	w8, [x19, #92]
  4070b4:	and	w8, w8, #0x7
  4070b8:	cmp	w0, w8
  4070bc:	b.lt	4070f4 <add_automount+0x734>  // b.tstop
  4070c0:	ldr	w8, [x19, #84]
  4070c4:	ldr	w9, [x19, #92]
  4070c8:	orr	w0, w9, w8, lsl #10
  4070cc:	ldr	w1, [x19, #88]
  4070d0:	ldur	x6, [x29, #-80]
  4070d4:	ldr	x2, [x19, #56]
  4070d8:	mov	w3, #0x16b                 	// #363
  4070dc:	ldr	x4, [x19, #40]
  4070e0:	adrp	x5, 407000 <add_automount+0x640>
  4070e4:	add	x5, x5, #0x7dd
  4070e8:	bl	401980 <log_internal_realm@plt>
  4070ec:	str	w0, [x19, #8]
  4070f0:	b	407108 <add_automount+0x748>
  4070f4:	ldr	w0, [x19, #88]
  4070f8:	bl	401990 <abs@plt>
  4070fc:	mov	w8, wzr
  407100:	subs	w8, w8, w0, uxtb
  407104:	str	w8, [x19, #8]
  407108:	ldr	w8, [x19, #8]
  40710c:	str	w8, [x19, #80]
  407110:	ldr	w8, [x19, #80]
  407114:	stur	w8, [x29, #-4]
  407118:	mov	w8, #0x1                   	// #1
  40711c:	str	w8, [x19, #188]
  407120:	b	40722c <add_automount+0x86c>
  407124:	ldur	x0, [x29, #-88]
  407128:	ldur	x2, [x29, #-64]
  40712c:	ldur	x3, [x29, #-32]
  407130:	ldur	x8, [x29, #-72]
  407134:	mov	x9, #0x4240                	// #16960
  407138:	movk	x9, #0xf, lsl #16
  40713c:	udiv	x4, x8, x9
  407140:	adrp	x1, 408000 <_fini+0xc7c>
  407144:	add	x1, x1, #0x35b
  407148:	bl	401b00 <fprintf@plt>
  40714c:	ldur	x8, [x29, #-88]
  407150:	mov	x0, x8
  407154:	bl	401b20 <fflush_and_check@plt>
  407158:	stur	w0, [x29, #-108]
  40715c:	ldur	w10, [x29, #-108]
  407160:	cmp	w10, #0x0
  407164:	cset	w10, ge  // ge = tcont
  407168:	tbnz	w10, #0, 4071fc <add_automount+0x83c>
  40716c:	mov	w8, #0x3                   	// #3
  407170:	str	w8, [x19, #76]
  407174:	ldur	w8, [x29, #-108]
  407178:	str	w8, [x19, #72]
  40717c:	str	wzr, [x19, #68]
  407180:	ldr	w0, [x19, #68]
  407184:	bl	401970 <log_get_max_level_realm@plt>
  407188:	ldr	w8, [x19, #76]
  40718c:	and	w8, w8, #0x7
  407190:	cmp	w0, w8
  407194:	b.lt	4071cc <add_automount+0x80c>  // b.tstop
  407198:	ldr	w8, [x19, #68]
  40719c:	ldr	w9, [x19, #76]
  4071a0:	orr	w0, w9, w8, lsl #10
  4071a4:	ldr	w1, [x19, #72]
  4071a8:	ldur	x6, [x29, #-104]
  4071ac:	ldr	x2, [x19, #56]
  4071b0:	mov	w3, #0x17b                 	// #379
  4071b4:	ldr	x4, [x19, #40]
  4071b8:	adrp	x5, 407000 <add_automount+0x640>
  4071bc:	add	x5, x5, #0xc9d
  4071c0:	bl	401980 <log_internal_realm@plt>
  4071c4:	str	w0, [x19, #4]
  4071c8:	b	4071e0 <add_automount+0x820>
  4071cc:	ldr	w0, [x19, #72]
  4071d0:	bl	401990 <abs@plt>
  4071d4:	mov	w8, wzr
  4071d8:	subs	w8, w8, w0, uxtb
  4071dc:	str	w8, [x19, #4]
  4071e0:	ldr	w8, [x19, #4]
  4071e4:	str	w8, [x19, #64]
  4071e8:	ldr	w8, [x19, #64]
  4071ec:	stur	w8, [x29, #-4]
  4071f0:	mov	w8, #0x1                   	// #1
  4071f4:	str	w8, [x19, #188]
  4071f8:	b	40722c <add_automount+0x86c>
  4071fc:	adrp	x8, 420000 <arg_enabled>
  407200:	add	x8, x8, #0x10
  407204:	ldr	x0, [x8]
  407208:	ldur	x3, [x29, #-80]
  40720c:	adrp	x1, 407000 <add_automount+0x640>
  407210:	add	x1, x1, #0x6c5
  407214:	adrp	x2, 407000 <add_automount+0x640>
  407218:	add	x2, x2, #0xa39
  40721c:	bl	401b30 <generator_add_symlink@plt>
  407220:	stur	w0, [x29, #-4]
  407224:	mov	w9, #0x1                   	// #1
  407228:	str	w9, [x19, #188]
  40722c:	sub	x0, x29, #0x58
  407230:	bl	4043a4 <fclosep>
  407234:	sub	x0, x29, #0x50
  407238:	bl	40437c <freep>
  40723c:	ldur	w0, [x29, #-4]
  407240:	mov	sp, x29
  407244:	ldp	x28, x19, [sp, #16]
  407248:	ldp	x29, x30, [sp], #32
  40724c:	ret

0000000000407250 <dir_is_empty>:
  407250:	sub	sp, sp, #0x20
  407254:	stp	x29, x30, [sp, #16]
  407258:	add	x29, sp, #0x10
  40725c:	mov	w8, #0xffffff9c            	// #-100
  407260:	str	x0, [sp, #8]
  407264:	ldr	x1, [sp, #8]
  407268:	mov	w0, w8
  40726c:	bl	401d30 <dir_is_empty_at@plt>
  407270:	ldp	x29, x30, [sp, #16]
  407274:	add	sp, sp, #0x20
  407278:	ret

000000000040727c <sd_id128_equal>:
  40727c:	sub	sp, sp, #0x30
  407280:	stp	x29, x30, [sp, #32]
  407284:	add	x29, sp, #0x20
  407288:	mov	x8, #0x10                  	// #16
  40728c:	add	x9, sp, #0x10
  407290:	mov	x10, sp
  407294:	str	x0, [sp, #16]
  407298:	str	x1, [sp, #24]
  40729c:	str	x2, [sp]
  4072a0:	str	x3, [sp, #8]
  4072a4:	mov	x0, x9
  4072a8:	mov	x1, x10
  4072ac:	mov	x2, x8
  4072b0:	bl	401d40 <memcmp@plt>
  4072b4:	cmp	w0, #0x0
  4072b8:	cset	w11, eq  // eq = none
  4072bc:	and	w0, w11, #0x1
  4072c0:	ldp	x29, x30, [sp, #32]
  4072c4:	add	sp, sp, #0x30
  4072c8:	ret

00000000004072cc <ALIGN_TO>:
  4072cc:	sub	sp, sp, #0x10
  4072d0:	str	x0, [sp, #8]
  4072d4:	str	x1, [sp]
  4072d8:	ldr	x8, [sp, #8]
  4072dc:	ldr	x9, [sp]
  4072e0:	add	x8, x8, x9
  4072e4:	subs	x8, x8, #0x1
  4072e8:	ldr	x9, [sp]
  4072ec:	subs	x9, x9, #0x1
  4072f0:	bic	x0, x8, x9
  4072f4:	add	sp, sp, #0x10
  4072f8:	ret
  4072fc:	udf	#0

0000000000407300 <__libc_csu_init>:
  407300:	stp	x29, x30, [sp, #-64]!
  407304:	mov	x29, sp
  407308:	stp	x19, x20, [sp, #16]
  40730c:	adrp	x20, 41f000 <__FRAME_END__+0x16760>
  407310:	add	x20, x20, #0xb98
  407314:	stp	x21, x22, [sp, #32]
  407318:	adrp	x21, 41f000 <__FRAME_END__+0x16760>
  40731c:	add	x21, x21, #0xb90
  407320:	sub	x20, x20, x21
  407324:	mov	w22, w0
  407328:	stp	x23, x24, [sp, #48]
  40732c:	mov	x23, x1
  407330:	mov	x24, x2
  407334:	bl	4018f8 <_init>
  407338:	cmp	xzr, x20, asr #3
  40733c:	b.eq	407368 <__libc_csu_init+0x68>  // b.none
  407340:	asr	x20, x20, #3
  407344:	mov	x19, #0x0                   	// #0
  407348:	ldr	x3, [x21, x19, lsl #3]
  40734c:	mov	x2, x24
  407350:	add	x19, x19, #0x1
  407354:	mov	x1, x23
  407358:	mov	w0, w22
  40735c:	blr	x3
  407360:	cmp	x20, x19
  407364:	b.ne	407348 <__libc_csu_init+0x48>  // b.any
  407368:	ldp	x19, x20, [sp, #16]
  40736c:	ldp	x21, x22, [sp, #32]
  407370:	ldp	x23, x24, [sp, #48]
  407374:	ldp	x29, x30, [sp], #64
  407378:	ret
  40737c:	nop

0000000000407380 <__libc_csu_fini>:
  407380:	ret

Disassembly of section .fini:

0000000000407384 <_fini>:
  407384:	stp	x29, x30, [sp, #-16]!
  407388:	mov	x29, sp
  40738c:	ldp	x29, x30, [sp], #16
  407390:	ret
