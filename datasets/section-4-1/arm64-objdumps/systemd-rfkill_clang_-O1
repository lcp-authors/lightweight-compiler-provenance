
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-rfkill_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

00000000002119b8 <_start>:
  2119b8:	mov	x29, #0x0                   	// #0
  2119bc:	mov	x30, #0x0                   	// #0
  2119c0:	mov	x5, x0
  2119c4:	ldr	x1, [sp]
  2119c8:	add	x2, sp, #0x8
  2119cc:	mov	x6, sp
  2119d0:	movz	x0, #0x0, lsl #48
  2119d4:	movk	x0, #0x0, lsl #32
  2119d8:	movk	x0, #0x21, lsl #16
  2119dc:	movk	x0, #0x1b08
  2119e0:	movz	x3, #0x0, lsl #48
  2119e4:	movk	x3, #0x0, lsl #32
  2119e8:	movk	x3, #0x21, lsl #16
  2119ec:	movk	x3, #0x2e88
  2119f0:	movz	x4, #0x0, lsl #48
  2119f4:	movk	x4, #0x0, lsl #32
  2119f8:	movk	x4, #0x21, lsl #16
  2119fc:	movk	x4, #0x2f08
  211a00:	bl	212f50 <__libc_start_main@plt>
  211a04:	bl	212f60 <abort@plt>

0000000000211a08 <call_weak_fn>:
  211a08:	adrp	x0, 223000 <strcmp@plt+0xfe50>
  211a0c:	ldr	x0, [x0, #928]
  211a10:	cbz	x0, 211a18 <call_weak_fn+0x10>
  211a14:	b	212f70 <__gmon_start__@plt>
  211a18:	ret

0000000000211a1c <deregister_tm_clones>:
  211a1c:	adrp	x0, 233000 <_DYNAMIC+0xfe30>
  211a20:	add	x0, x0, #0x508
  211a24:	adrp	x1, 233000 <_DYNAMIC+0xfe30>
  211a28:	add	x1, x1, #0x508
  211a2c:	cmp	x0, x1
  211a30:	b.eq	211a64 <deregister_tm_clones+0x48>  // b.none
  211a34:	stp	x29, x30, [sp, #-32]!
  211a38:	mov	x29, sp
  211a3c:	adrp	x0, 201000 <rfkill_type_table-0x838>
  211a40:	ldr	x0, [x0, #224]
  211a44:	str	x0, [sp, #24]
  211a48:	mov	x1, x0
  211a4c:	cbz	x1, 211a5c <deregister_tm_clones+0x40>
  211a50:	adrp	x0, 233000 <_DYNAMIC+0xfe30>
  211a54:	add	x0, x0, #0x508
  211a58:	blr	x1
  211a5c:	ldp	x29, x30, [sp], #32
  211a60:	ret
  211a64:	ret

0000000000211a68 <register_tm_clones>:
  211a68:	adrp	x0, 233000 <_DYNAMIC+0xfe30>
  211a6c:	add	x0, x0, #0x508
  211a70:	adrp	x1, 233000 <_DYNAMIC+0xfe30>
  211a74:	add	x1, x1, #0x508
  211a78:	sub	x0, x0, x1
  211a7c:	lsr	x1, x0, #63
  211a80:	add	x0, x1, x0, asr #3
  211a84:	cmp	xzr, x0, asr #1
  211a88:	b.eq	211ac0 <register_tm_clones+0x58>  // b.none
  211a8c:	stp	x29, x30, [sp, #-32]!
  211a90:	mov	x29, sp
  211a94:	asr	x1, x0, #1
  211a98:	adrp	x0, 201000 <rfkill_type_table-0x838>
  211a9c:	ldr	x0, [x0, #232]
  211aa0:	str	x0, [sp, #24]
  211aa4:	mov	x2, x0
  211aa8:	cbz	x2, 211ab8 <register_tm_clones+0x50>
  211aac:	adrp	x0, 233000 <_DYNAMIC+0xfe30>
  211ab0:	add	x0, x0, #0x508
  211ab4:	blr	x2
  211ab8:	ldp	x29, x30, [sp], #32
  211abc:	ret
  211ac0:	ret

0000000000211ac4 <__do_global_dtors_aux>:
  211ac4:	adrp	x0, 233000 <_DYNAMIC+0xfe30>
  211ac8:	ldrb	w0, [x0, #1288]
  211acc:	cbnz	w0, 211af0 <__do_global_dtors_aux+0x2c>
  211ad0:	stp	x29, x30, [sp, #-16]!
  211ad4:	mov	x29, sp
  211ad8:	bl	211a1c <deregister_tm_clones>
  211adc:	adrp	x0, 233000 <_DYNAMIC+0xfe30>
  211ae0:	mov	w1, #0x1                   	// #1
  211ae4:	strb	w1, [x0, #1288]
  211ae8:	ldp	x29, x30, [sp], #16
  211aec:	ret
  211af0:	ret

0000000000211af4 <frame_dummy>:
  211af4:	stp	x29, x30, [sp, #-16]!
  211af8:	mov	x29, sp
  211afc:	bl	211a68 <register_tm_clones>
  211b00:	ldp	x29, x30, [sp], #16
  211b04:	ret

0000000000211b08 <main>:
  211b08:	stp	x29, x30, [sp, #-32]!
  211b0c:	str	x19, [sp, #16]
  211b10:	mov	x29, sp
  211b14:	mov	w19, w0
  211b18:	bl	211b4c <save_argc_argv>
  211b1c:	mov	w0, w19
  211b20:	bl	211b60 <run>
  211b24:	mov	w19, w0
  211b28:	bl	212f80 <ask_password_agent_close@plt>
  211b2c:	bl	212f90 <polkit_agent_close@plt>
  211b30:	bl	212fa0 <pager_close@plt>
  211b34:	bl	212fb0 <mac_selinux_finish@plt>
  211b38:	bl	2120ec <static_destruct>
  211b3c:	lsr	w0, w19, #31
  211b40:	ldr	x19, [sp, #16]
  211b44:	ldp	x29, x30, [sp], #32
  211b48:	ret

0000000000211b4c <save_argc_argv>:
  211b4c:	adrp	x8, 233000 <_DYNAMIC+0xfe30>
  211b50:	adrp	x9, 233000 <_DYNAMIC+0xfe30>
  211b54:	str	w0, [x8, #1296]
  211b58:	str	x1, [x9, #1304]
  211b5c:	ret

0000000000211b60 <run>:
  211b60:	sub	sp, sp, #0x80
  211b64:	adrp	x8, 201000 <rfkill_type_table-0x838>
  211b68:	add	x8, x8, #0xf0
  211b6c:	ldr	q0, [x8]
  211b70:	cmp	w0, #0x2
  211b74:	stp	x29, x30, [sp, #32]
  211b78:	stp	x28, x27, [sp, #48]
  211b7c:	stp	x26, x25, [sp, #64]
  211b80:	stp	x24, x23, [sp, #80]
  211b84:	stp	x22, x21, [sp, #96]
  211b88:	stp	x20, x19, [sp, #112]
  211b8c:	add	x29, sp, #0x20
  211b90:	str	q0, [sp, #16]
  211b94:	b.lt	211bd4 <run+0x74>  // b.tstop
  211b98:	mov	w0, wzr
  211b9c:	bl	212fc0 <log_get_max_level_realm@plt>
  211ba0:	cmp	w0, #0x3
  211ba4:	b.lt	211c34 <run+0xd4>  // b.tstop
  211ba8:	adrp	x2, 201000 <rfkill_type_table-0x838>
  211bac:	adrp	x4, 201000 <rfkill_type_table-0x838>
  211bb0:	adrp	x5, 201000 <rfkill_type_table-0x838>
  211bb4:	mov	w1, #0x16                  	// #22
  211bb8:	add	x2, x2, #0x361
  211bbc:	add	x4, x4, #0x6b5
  211bc0:	add	x5, x5, #0x64e
  211bc4:	mov	w0, #0x3                   	// #3
  211bc8:	movk	w1, #0x4000, lsl #16
  211bcc:	mov	w3, #0x115                 	// #277
  211bd0:	b	211c70 <run+0x110>
  211bd4:	bl	212fd0 <log_setup_service@plt>
  211bd8:	mov	w0, #0x12                  	// #18
  211bdc:	bl	212fe0 <umask@plt>
  211be0:	mov	w0, wzr
  211be4:	bl	212ff0 <sd_listen_fds@plt>
  211be8:	mov	w19, w0
  211bec:	tbnz	w0, #31, 211c3c <run+0xdc>
  211bf0:	cmp	w19, #0x2
  211bf4:	b.lt	211c7c <run+0x11c>  // b.tstop
  211bf8:	mov	w0, wzr
  211bfc:	bl	212fc0 <log_get_max_level_realm@plt>
  211c00:	cmp	w0, #0x3
  211c04:	b.lt	211c34 <run+0xd4>  // b.tstop
  211c08:	adrp	x2, 201000 <rfkill_type_table-0x838>
  211c0c:	adrp	x4, 201000 <rfkill_type_table-0x838>
  211c10:	adrp	x5, 201000 <rfkill_type_table-0x838>
  211c14:	mov	w1, #0x16                  	// #22
  211c18:	add	x2, x2, #0x361
  211c1c:	add	x4, x4, #0x6b5
  211c20:	add	x5, x5, #0x6b9
  211c24:	mov	w0, #0x3                   	// #3
  211c28:	movk	w1, #0x4000, lsl #16
  211c2c:	mov	w3, #0x11f                 	// #287
  211c30:	b	211c70 <run+0x110>
  211c34:	mov	w26, #0xffffffea            	// #-22
  211c38:	b	212034 <run+0x4d4>
  211c3c:	mov	w0, wzr
  211c40:	bl	212fc0 <log_get_max_level_realm@plt>
  211c44:	cmp	w0, #0x3
  211c48:	b.lt	211cd0 <run+0x170>  // b.tstop
  211c4c:	adrp	x2, 201000 <rfkill_type_table-0x838>
  211c50:	adrp	x4, 201000 <rfkill_type_table-0x838>
  211c54:	adrp	x5, 201000 <rfkill_type_table-0x838>
  211c58:	add	x2, x2, #0x361
  211c5c:	add	x4, x4, #0x6b5
  211c60:	add	x5, x5, #0x461
  211c64:	mov	w0, #0x3                   	// #3
  211c68:	mov	w3, #0x11d                 	// #285
  211c6c:	mov	w1, w19
  211c70:	bl	213000 <log_internal_realm@plt>
  211c74:	mov	w26, w0
  211c78:	b	212034 <run+0x4d4>
  211c7c:	cbz	w19, 211ce0 <run+0x180>
  211c80:	mov	w8, #0x3                   	// #3
  211c84:	mov	w0, #0x3                   	// #3
  211c88:	mov	w1, #0x1                   	// #1
  211c8c:	str	w8, [sp, #24]
  211c90:	bl	213010 <fd_nonblock@plt>
  211c94:	tbz	w0, #31, 211cfc <run+0x19c>
  211c98:	mov	w19, w0
  211c9c:	mov	w0, wzr
  211ca0:	bl	212fc0 <log_get_max_level_realm@plt>
  211ca4:	cmp	w0, #0x3
  211ca8:	b.lt	211cd0 <run+0x170>  // b.tstop
  211cac:	adrp	x2, 201000 <rfkill_type_table-0x838>
  211cb0:	adrp	x4, 201000 <rfkill_type_table-0x838>
  211cb4:	adrp	x5, 201000 <rfkill_type_table-0x838>
  211cb8:	add	x2, x2, #0x361
  211cbc:	add	x4, x4, #0x6b5
  211cc0:	add	x5, x5, #0x233
  211cc4:	mov	w0, #0x3                   	// #3
  211cc8:	mov	w3, #0x130                 	// #304
  211ccc:	b	211c6c <run+0x10c>
  211cd0:	mov	w8, wzr
  211cd4:	neg	w9, w19
  211cd8:	sub	w26, w8, w9, uxtb
  211cdc:	b	212034 <run+0x4d4>
  211ce0:	adrp	x0, 201000 <rfkill_type_table-0x838>
  211ce4:	mov	w1, #0x902                 	// #2306
  211ce8:	add	x0, x0, #0x78b
  211cec:	movk	w1, #0x8, lsl #16
  211cf0:	bl	213020 <open64@plt>
  211cf4:	str	w0, [sp, #24]
  211cf8:	tbnz	w0, #31, 212060 <run+0x500>
  211cfc:	mov	w8, #0x16                  	// #22
  211d00:	movk	w8, #0x4000, lsl #16
  211d04:	adrp	x19, 201000 <rfkill_type_table-0x838>
  211d08:	adrp	x20, 201000 <rfkill_type_table-0x838>
  211d0c:	adrp	x23, 201000 <rfkill_type_table-0x838>
  211d10:	adrp	x24, 201000 <rfkill_type_table-0x838>
  211d14:	adrp	x28, 201000 <rfkill_type_table-0x838>
  211d18:	mov	w25, wzr
  211d1c:	add	x19, x19, #0x361
  211d20:	add	x20, x20, #0x6b5
  211d24:	add	x23, x23, #0x34a
  211d28:	add	x24, x24, #0x5a2
  211d2c:	sub	w27, w8, #0x11
  211d30:	add	x28, x28, #0x1cd
  211d34:	ldr	w0, [sp, #24]
  211d38:	add	x1, sp, #0x8
  211d3c:	mov	w2, #0x8                   	// #8
  211d40:	bl	213030 <read@plt>
  211d44:	mov	x21, x0
  211d48:	tbnz	x0, #63, 211e00 <run+0x2a0>
  211d4c:	cmp	x21, #0x8
  211d50:	b.ne	211dc8 <run+0x268>  // b.any
  211d54:	ldrb	w21, [sp, #12]
  211d58:	mov	w0, w21
  211d5c:	bl	212210 <rfkill_type_to_string>
  211d60:	cbz	x0, 211ec0 <run+0x360>
  211d64:	ldrb	w21, [sp, #13]
  211d68:	mov	x22, x0
  211d6c:	cmp	w21, #0x2
  211d70:	b.eq	211f00 <run+0x3a0>  // b.none
  211d74:	cmp	w21, #0x1
  211d78:	b.eq	211f48 <run+0x3e8>  // b.none
  211d7c:	mov	w0, wzr
  211d80:	cbnz	w21, 211f90 <run+0x430>
  211d84:	bl	212fc0 <log_get_max_level_realm@plt>
  211d88:	cmp	w0, #0x7
  211d8c:	b.lt	211db8 <run+0x258>  // b.tstop
  211d90:	ldr	w6, [sp, #8]
  211d94:	adrp	x5, 201000 <rfkill_type_table-0x838>
  211d98:	mov	w0, #0x7                   	// #7
  211d9c:	mov	w3, #0x162                 	// #354
  211da0:	mov	w1, wzr
  211da4:	mov	x2, x19
  211da8:	mov	x4, x20
  211dac:	add	x5, x5, #0x5c6
  211db0:	mov	x7, x22
  211db4:	bl	213000 <log_internal_realm@plt>
  211db8:	add	x0, sp, #0x10
  211dbc:	add	x1, sp, #0x8
  211dc0:	bl	212230 <load_state>
  211dc4:	b	211fc8 <run+0x468>
  211dc8:	mov	w0, wzr
  211dcc:	bl	212fc0 <log_get_max_level_realm@plt>
  211dd0:	cmp	w0, #0x3
  211dd4:	b.lt	211e84 <run+0x324>  // b.tstop
  211dd8:	mov	w0, #0x3                   	// #3
  211ddc:	mov	w3, #0x157                 	// #343
  211de0:	mov	w1, w27
  211de4:	mov	x2, x19
  211de8:	mov	x4, x20
  211dec:	mov	x5, x28
  211df0:	bl	213000 <log_internal_realm@plt>
  211df4:	mov	w26, w0
  211df8:	mov	w8, #0x1                   	// #1
  211dfc:	b	211fcc <run+0x46c>
  211e00:	bl	213040 <__errno_location@plt>
  211e04:	ldr	w22, [x0]
  211e08:	cmp	w22, #0xb
  211e0c:	b.ne	211e90 <run+0x330>  // b.any
  211e10:	tbnz	w25, #0, 211e24 <run+0x2c4>
  211e14:	mov	w0, wzr
  211e18:	mov	x1, x23
  211e1c:	bl	213050 <sd_notify@plt>
  211e20:	mov	w25, #0x1                   	// #1
  211e24:	ldr	w0, [sp, #24]
  211e28:	mov	w2, #0x4b40                	// #19264
  211e2c:	mov	w1, #0x1                   	// #1
  211e30:	movk	w2, #0x4c, lsl #16
  211e34:	bl	213060 <fd_wait_for_event@plt>
  211e38:	cmn	w0, #0x4
  211e3c:	b.eq	211ef8 <run+0x398>  // b.none
  211e40:	mov	w21, w0
  211e44:	tbnz	w0, #31, 211fdc <run+0x47c>
  211e48:	cbnz	w21, 211ef8 <run+0x398>
  211e4c:	mov	w0, wzr
  211e50:	bl	212fc0 <log_get_max_level_realm@plt>
  211e54:	cmp	w0, #0x7
  211e58:	b.lt	212020 <run+0x4c0>  // b.tstop
  211e5c:	adrp	x5, 201000 <rfkill_type_table-0x838>
  211e60:	mov	w0, #0x7                   	// #7
  211e64:	mov	w3, #0x14f                 	// #335
  211e68:	mov	w1, wzr
  211e6c:	mov	x2, x19
  211e70:	mov	x4, x20
  211e74:	add	x5, x5, #0x3b5
  211e78:	bl	213000 <log_internal_realm@plt>
  211e7c:	mov	w8, #0x2                   	// #2
  211e80:	b	211fcc <run+0x46c>
  211e84:	mov	w26, #0xfffffffb            	// #-5
  211e88:	mov	w8, #0x1                   	// #1
  211e8c:	b	211fcc <run+0x46c>
  211e90:	mov	w0, wzr
  211e94:	bl	212fc0 <log_get_max_level_realm@plt>
  211e98:	cmp	w0, #0x3
  211e9c:	b.lt	211d4c <run+0x1ec>  // b.tstop
  211ea0:	mov	w0, #0x3                   	// #3
  211ea4:	mov	w3, #0x153                 	// #339
  211ea8:	mov	w1, w22
  211eac:	mov	x2, x19
  211eb0:	mov	x4, x20
  211eb4:	mov	x5, x24
  211eb8:	bl	213000 <log_internal_realm@plt>
  211ebc:	b	211d4c <run+0x1ec>
  211ec0:	bl	212fc0 <log_get_max_level_realm@plt>
  211ec4:	cmp	w0, #0x7
  211ec8:	b.lt	211ef8 <run+0x398>  // b.tstop
  211ecc:	adrp	x5, 201000 <rfkill_type_table-0x838>
  211ed0:	mov	w0, #0x7                   	// #7
  211ed4:	mov	w3, #0x15b                 	// #347
  211ed8:	mov	w1, wzr
  211edc:	mov	x2, x19
  211ee0:	mov	x4, x20
  211ee4:	add	x5, x5, #0x139
  211ee8:	mov	w6, w21
  211eec:	bl	213000 <log_internal_realm@plt>
  211ef0:	mov	w8, #0x3                   	// #3
  211ef4:	b	211fcc <run+0x46c>
  211ef8:	mov	w8, #0x3                   	// #3
  211efc:	b	211fcc <run+0x46c>
  211f00:	mov	w0, wzr
  211f04:	bl	212fc0 <log_get_max_level_realm@plt>
  211f08:	cmp	w0, #0x7
  211f0c:	b.lt	211f38 <run+0x3d8>  // b.tstop
  211f10:	ldr	w6, [sp, #8]
  211f14:	adrp	x5, 201000 <rfkill_type_table-0x838>
  211f18:	mov	w0, #0x7                   	// #7
  211f1c:	mov	w3, #0x16c                 	// #364
  211f20:	mov	w1, wzr
  211f24:	mov	x2, x19
  211f28:	mov	x4, x20
  211f2c:	add	x5, x5, #0x3d8
  211f30:	mov	x7, x22
  211f34:	bl	213000 <log_internal_realm@plt>
  211f38:	add	x0, sp, #0x10
  211f3c:	add	x1, sp, #0x8
  211f40:	bl	212620 <save_state_queue>
  211f44:	b	211fc8 <run+0x468>
  211f48:	mov	w0, wzr
  211f4c:	bl	212fc0 <log_get_max_level_realm@plt>
  211f50:	cmp	w0, #0x7
  211f54:	b.lt	211f80 <run+0x420>  // b.tstop
  211f58:	ldr	w6, [sp, #8]
  211f5c:	adrp	x5, 201000 <rfkill_type_table-0x838>
  211f60:	mov	w0, #0x7                   	// #7
  211f64:	mov	w3, #0x167                 	// #359
  211f68:	mov	w1, wzr
  211f6c:	mov	x2, x19
  211f70:	mov	x4, x20
  211f74:	add	x5, x5, #0x797
  211f78:	mov	x7, x22
  211f7c:	bl	213000 <log_internal_realm@plt>
  211f80:	add	x0, sp, #0x10
  211f84:	add	x1, sp, #0x8
  211f88:	bl	212558 <save_state_cancel>
  211f8c:	b	211fc8 <run+0x468>
  211f90:	bl	212fc0 <log_get_max_level_realm@plt>
  211f94:	cmp	w0, #0x7
  211f98:	b.lt	211fc8 <run+0x468>  // b.tstop
  211f9c:	ldr	w7, [sp, #8]
  211fa0:	adrp	x5, 201000 <rfkill_type_table-0x838>
  211fa4:	mov	w0, #0x7                   	// #7
  211fa8:	mov	w3, #0x171                 	// #369
  211fac:	mov	w1, wzr
  211fb0:	mov	x2, x19
  211fb4:	mov	x4, x20
  211fb8:	add	x5, x5, #0x604
  211fbc:	mov	w6, w21
  211fc0:	str	x22, [sp]
  211fc4:	bl	213000 <log_internal_realm@plt>
  211fc8:	mov	w8, wzr
  211fcc:	cbz	w8, 211d34 <run+0x1d4>
  211fd0:	cmp	w8, #0x3
  211fd4:	b.eq	211d34 <run+0x1d4>  // b.none
  211fd8:	b	212028 <run+0x4c8>
  211fdc:	mov	w0, wzr
  211fe0:	bl	212fc0 <log_get_max_level_realm@plt>
  211fe4:	cmp	w0, #0x3
  211fe8:	b.lt	21200c <run+0x4ac>  // b.tstop
  211fec:	adrp	x5, 201000 <rfkill_type_table-0x838>
  211ff0:	mov	w0, #0x3                   	// #3
  211ff4:	mov	w3, #0x14b                 	// #331
  211ff8:	mov	w1, w21
  211ffc:	mov	x2, x19
  212000:	mov	x4, x20
  212004:	add	x5, x5, #0x214
  212008:	b	211df0 <run+0x290>
  21200c:	mov	w8, wzr
  212010:	neg	w9, w21
  212014:	sub	w26, w8, w9, uxtb
  212018:	mov	w8, #0x1                   	// #1
  21201c:	b	211fcc <run+0x46c>
  212020:	mov	w8, #0x2                   	// #2
  212024:	b	211fcc <run+0x46c>
  212028:	cmp	w8, #0x2
  21202c:	b.ne	212034 <run+0x4d4>  // b.any
  212030:	mov	w26, wzr
  212034:	add	x0, sp, #0x10
  212038:	bl	21214c <context_save_and_clear>
  21203c:	mov	w0, w26
  212040:	ldp	x20, x19, [sp, #112]
  212044:	ldp	x22, x21, [sp, #96]
  212048:	ldp	x24, x23, [sp, #80]
  21204c:	ldp	x26, x25, [sp, #64]
  212050:	ldp	x28, x27, [sp, #48]
  212054:	ldp	x29, x30, [sp, #32]
  212058:	add	sp, sp, #0x80
  21205c:	ret
  212060:	bl	213040 <__errno_location@plt>
  212064:	ldr	w19, [x0]
  212068:	mov	w0, wzr
  21206c:	bl	212fc0 <log_get_max_level_realm@plt>
  212070:	cmp	w19, #0x2
  212074:	b.ne	2120ac <run+0x54c>  // b.any
  212078:	cmp	w0, #0x7
  21207c:	b.lt	212030 <run+0x4d0>  // b.tstop
  212080:	adrp	x2, 201000 <rfkill_type_table-0x838>
  212084:	adrp	x4, 201000 <rfkill_type_table-0x838>
  212088:	adrp	x5, 201000 <rfkill_type_table-0x838>
  21208c:	add	x2, x2, #0x361
  212090:	add	x4, x4, #0x6b5
  212094:	add	x5, x5, #0x100
  212098:	mov	w0, #0x7                   	// #7
  21209c:	mov	w1, #0x2                   	// #2
  2120a0:	mov	w3, #0x125                 	// #293
  2120a4:	bl	213000 <log_internal_realm@plt>
  2120a8:	b	212030 <run+0x4d0>
  2120ac:	cmp	w0, #0x3
  2120b0:	b.lt	2120d8 <run+0x578>  // b.tstop
  2120b4:	adrp	x2, 201000 <rfkill_type_table-0x838>
  2120b8:	adrp	x4, 201000 <rfkill_type_table-0x838>
  2120bc:	adrp	x5, 201000 <rfkill_type_table-0x838>
  2120c0:	add	x2, x2, #0x361
  2120c4:	add	x4, x4, #0x6b5
  2120c8:	add	x5, x5, #0x4f3
  2120cc:	mov	w0, #0x3                   	// #3
  2120d0:	mov	w3, #0x129                 	// #297
  2120d4:	b	211c6c <run+0x10c>
  2120d8:	cmp	w19, #0x0
  2120dc:	mov	w8, wzr
  2120e0:	cneg	w9, w19, mi  // mi = first
  2120e4:	sub	w26, w8, w9, uxtb
  2120e8:	b	212034 <run+0x4d4>

00000000002120ec <static_destruct>:
  2120ec:	stp	x29, x30, [sp, #-32]!
  2120f0:	stp	x20, x19, [sp, #16]
  2120f4:	adrp	x8, 223000 <strcmp@plt+0xfe50>
  2120f8:	ldr	x8, [x8, #936]
  2120fc:	mov	x29, sp
  212100:	cbz	x8, 212140 <static_destruct+0x54>
  212104:	adrp	x0, 223000 <strcmp@plt+0xfe50>
  212108:	ldr	x0, [x0, #936]
  21210c:	bl	212e78 <ALIGN_TO>
  212110:	adrp	x20, 223000 <strcmp@plt+0xfe50>
  212114:	ldr	x20, [x20, #944]
  212118:	cmp	x0, x20
  21211c:	b.cs	212140 <static_destruct+0x54>  // b.hs, b.nlast
  212120:	mov	x19, x0
  212124:	ldp	x0, x8, [x19]
  212128:	blr	x8
  21212c:	add	x0, x19, #0x10
  212130:	bl	212e78 <ALIGN_TO>
  212134:	mov	x19, x0
  212138:	cmp	x0, x20
  21213c:	b.cc	212124 <static_destruct+0x38>  // b.lo, b.ul, b.last
  212140:	ldp	x20, x19, [sp, #16]
  212144:	ldp	x29, x30, [sp], #32
  212148:	ret

000000000021214c <context_save_and_clear>:
  21214c:	stp	x29, x30, [sp, #-32]!
  212150:	stp	x20, x19, [sp, #16]
  212154:	mov	x29, sp
  212158:	cbz	x0, 2121f0 <context_save_and_clear+0xa4>
  21215c:	mov	x19, x0
  212160:	b	212180 <context_save_and_clear+0x34>
  212164:	ldr	x9, [x20]
  212168:	str	x9, [x8]
  21216c:	mov	x0, x20
  212170:	stp	xzr, xzr, [x20]
  212174:	bl	21276c <save_state_write_one>
  212178:	mov	x0, x20
  21217c:	bl	212838 <write_queue_item_free>
  212180:	ldr	x20, [x19]
  212184:	cbz	x20, 2121b8 <context_save_and_clear+0x6c>
  212188:	ldr	x8, [x20]
  21218c:	cbz	x8, 212198 <context_save_and_clear+0x4c>
  212190:	ldr	x9, [x20, #8]
  212194:	str	x9, [x8, #8]
  212198:	ldr	x8, [x20, #8]
  21219c:	cbnz	x8, 212164 <context_save_and_clear+0x18>
  2121a0:	ldr	x8, [x19]
  2121a4:	cmp	x8, x20
  2121a8:	b.ne	2121cc <context_save_and_clear+0x80>  // b.any
  2121ac:	ldr	x8, [x20]
  2121b0:	str	x8, [x19]
  2121b4:	b	21216c <context_save_and_clear+0x20>
  2121b8:	ldr	w0, [x19, #8]
  2121bc:	bl	213070 <safe_close@plt>
  2121c0:	ldp	x20, x19, [sp, #16]
  2121c4:	ldp	x29, x30, [sp], #32
  2121c8:	ret
  2121cc:	adrp	x1, 201000 <rfkill_type_table-0x838>
  2121d0:	adrp	x2, 201000 <rfkill_type_table-0x838>
  2121d4:	adrp	x4, 201000 <rfkill_type_table-0x838>
  2121d8:	add	x1, x1, #0x39c
  2121dc:	add	x2, x2, #0x361
  2121e0:	add	x4, x4, #0x551
  2121e4:	mov	w3, #0x107                 	// #263
  2121e8:	mov	w0, wzr
  2121ec:	bl	213080 <log_assert_failed_realm@plt>
  2121f0:	adrp	x1, 201000 <rfkill_type_table-0x838>
  2121f4:	adrp	x2, 201000 <rfkill_type_table-0x838>
  2121f8:	adrp	x4, 201000 <rfkill_type_table-0x838>
  2121fc:	add	x1, x1, #0x64a
  212200:	add	x2, x2, #0x361
  212204:	add	x4, x4, #0x551
  212208:	mov	w3, #0x104                 	// #260
  21220c:	bl	213080 <log_assert_failed_realm@plt>

0000000000212210 <rfkill_type_to_string>:
  212210:	cmp	w0, #0x8
  212214:	b.ls	212220 <rfkill_type_to_string+0x10>  // b.plast
  212218:	mov	x0, xzr
  21221c:	ret
  212220:	adrp	x8, 201000 <rfkill_type_table-0x838>
  212224:	add	x8, x8, #0x838
  212228:	ldr	x0, [x8, w0, sxtw #3]
  21222c:	ret

0000000000212230 <load_state>:
  212230:	sub	sp, sp, #0x40
  212234:	stp	x29, x30, [sp, #16]
  212238:	add	x29, sp, #0x10
  21223c:	str	x21, [sp, #32]
  212240:	stp	x20, x19, [sp, #48]
  212244:	str	xzr, [x29, #24]
  212248:	str	xzr, [sp, #8]
  21224c:	cbz	x0, 2124f0 <load_state+0x2c0>
  212250:	ldr	w8, [x0, #8]
  212254:	mov	x20, x0
  212258:	tbnz	w8, #31, 212510 <load_state+0x2e0>
  21225c:	mov	x19, x1
  212260:	cbz	x1, 212534 <load_state+0x304>
  212264:	bl	213090 <shall_restore_state@plt>
  212268:	cbz	w0, 212450 <load_state+0x220>
  21226c:	add	x1, x29, #0x18
  212270:	mov	x0, x19
  212274:	bl	2128cc <determine_state_file>
  212278:	tbnz	w0, #31, 212450 <load_state+0x220>
  21227c:	ldr	x0, [x29, #24]
  212280:	add	x1, sp, #0x8
  212284:	bl	2130a0 <read_one_line_file@plt>
  212288:	cbz	w0, 212298 <load_state+0x68>
  21228c:	mov	w21, w0
  212290:	cmn	w0, #0x2
  212294:	b.ne	212314 <load_state+0xe4>  // b.any
  212298:	ldrb	w8, [x19, #6]
  21229c:	ldr	x20, [x29, #24]
  2122a0:	cmp	w8, #0x0
  2122a4:	cset	w0, ne  // ne = any
  2122a8:	bl	212884 <one_zero>
  2122ac:	mov	x1, x0
  2122b0:	mov	x0, x20
  2122b4:	bl	212868 <write_string_file>
  2122b8:	mov	w20, w0
  2122bc:	mov	w0, wzr
  2122c0:	bl	212fc0 <log_get_max_level_realm@plt>
  2122c4:	tbnz	w20, #31, 2123a8 <load_state+0x178>
  2122c8:	cmp	w0, #0x7
  2122cc:	b.lt	212450 <load_state+0x220>  // b.tstop
  2122d0:	ldrb	w8, [x19, #6]
  2122d4:	cmp	w8, #0x0
  2122d8:	cset	w0, ne  // ne = any
  2122dc:	bl	212884 <one_zero>
  2122e0:	ldr	x7, [x29, #24]
  2122e4:	adrp	x2, 201000 <rfkill_type_table-0x838>
  2122e8:	adrp	x4, 201000 <rfkill_type_table-0x838>
  2122ec:	adrp	x5, 201000 <rfkill_type_table-0x838>
  2122f0:	mov	x6, x0
  2122f4:	add	x2, x2, #0x361
  2122f8:	add	x4, x4, #0x7ff
  2122fc:	add	x5, x5, #0x71f
  212300:	mov	w0, #0x7                   	// #7
  212304:	mov	w3, #0xa1                  	// #161
  212308:	mov	w1, wzr
  21230c:	bl	213000 <log_internal_realm@plt>
  212310:	b	212450 <load_state+0x220>
  212314:	tbnz	w21, #31, 2123dc <load_state+0x1ac>
  212318:	ldr	x0, [sp, #8]
  21231c:	bl	2130b0 <parse_boolean@plt>
  212320:	mov	w21, w0
  212324:	tbnz	w0, #31, 212414 <load_state+0x1e4>
  212328:	ldr	w8, [x19]
  21232c:	mov	w9, #0x200                 	// #512
  212330:	strb	w21, [sp, #6]
  212334:	strh	w9, [sp, #4]
  212338:	str	w8, [sp]
  21233c:	strb	wzr, [sp, #7]
  212340:	ldr	w0, [x20, #8]
  212344:	mov	x1, sp
  212348:	mov	w2, #0x8                   	// #8
  21234c:	bl	2130c0 <write@plt>
  212350:	tbnz	x0, #63, 212474 <load_state+0x244>
  212354:	mov	x20, x0
  212358:	mov	w0, wzr
  21235c:	bl	212fc0 <log_get_max_level_realm@plt>
  212360:	cmp	x20, #0x8
  212364:	b.ne	2124b8 <load_state+0x288>  // b.any
  212368:	cmp	w0, #0x7
  21236c:	b.lt	212450 <load_state+0x220>  // b.tstop
  212370:	cmp	w21, #0x0
  212374:	cset	w0, ne  // ne = any
  212378:	bl	212884 <one_zero>
  21237c:	ldr	x7, [x29, #24]
  212380:	adrp	x2, 201000 <rfkill_type_table-0x838>
  212384:	adrp	x4, 201000 <rfkill_type_table-0x838>
  212388:	adrp	x5, 201000 <rfkill_type_table-0x838>
  21238c:	mov	x6, x0
  212390:	add	x2, x2, #0x361
  212394:	add	x4, x4, #0x7ff
  212398:	add	x5, x5, #0x6d8
  21239c:	mov	w0, #0x7                   	// #7
  2123a0:	mov	w3, #0xb8                  	// #184
  2123a4:	b	212308 <load_state+0xd8>
  2123a8:	cmp	w0, #0x3
  2123ac:	b.lt	212450 <load_state+0x220>  // b.tstop
  2123b0:	ldr	x6, [x29, #24]
  2123b4:	adrp	x2, 201000 <rfkill_type_table-0x838>
  2123b8:	adrp	x4, 201000 <rfkill_type_table-0x838>
  2123bc:	adrp	x5, 201000 <rfkill_type_table-0x838>
  2123c0:	add	x2, x2, #0x361
  2123c4:	add	x4, x4, #0x7ff
  2123c8:	add	x5, x5, #0x266
  2123cc:	mov	w0, #0x3                   	// #3
  2123d0:	mov	w3, #0x9f                  	// #159
  2123d4:	mov	w1, w20
  2123d8:	b	21244c <load_state+0x21c>
  2123dc:	mov	w0, wzr
  2123e0:	bl	212fc0 <log_get_max_level_realm@plt>
  2123e4:	cmp	w0, #0x3
  2123e8:	b.lt	212450 <load_state+0x220>  // b.tstop
  2123ec:	ldr	x6, [x29, #24]
  2123f0:	adrp	x2, 201000 <rfkill_type_table-0x838>
  2123f4:	adrp	x4, 201000 <rfkill_type_table-0x838>
  2123f8:	adrp	x5, 201000 <rfkill_type_table-0x838>
  2123fc:	add	x2, x2, #0x361
  212400:	add	x4, x4, #0x7ff
  212404:	add	x5, x5, #0x672
  212408:	mov	w0, #0x3                   	// #3
  21240c:	mov	w3, #0xa5                  	// #165
  212410:	b	212448 <load_state+0x218>
  212414:	mov	w0, wzr
  212418:	bl	212fc0 <log_get_max_level_realm@plt>
  21241c:	cmp	w0, #0x3
  212420:	b.lt	212450 <load_state+0x220>  // b.tstop
  212424:	ldr	x6, [x29, #24]
  212428:	adrp	x2, 201000 <rfkill_type_table-0x838>
  21242c:	adrp	x4, 201000 <rfkill_type_table-0x838>
  212430:	adrp	x5, 201000 <rfkill_type_table-0x838>
  212434:	add	x2, x2, #0x361
  212438:	add	x4, x4, #0x7ff
  21243c:	add	x5, x5, #0x693
  212440:	mov	w0, #0x3                   	// #3
  212444:	mov	w3, #0xa9                  	// #169
  212448:	mov	w1, w21
  21244c:	bl	213000 <log_internal_realm@plt>
  212450:	add	x0, sp, #0x8
  212454:	bl	2128b4 <freep>
  212458:	add	x0, x29, #0x18
  21245c:	bl	2128b4 <freep>
  212460:	ldp	x20, x19, [sp, #48]
  212464:	ldr	x21, [sp, #32]
  212468:	ldp	x29, x30, [sp, #16]
  21246c:	add	sp, sp, #0x40
  212470:	ret
  212474:	mov	w0, wzr
  212478:	bl	212fc0 <log_get_max_level_realm@plt>
  21247c:	cmp	w0, #0x3
  212480:	b.lt	212450 <load_state+0x220>  // b.tstop
  212484:	bl	213040 <__errno_location@plt>
  212488:	ldr	w1, [x0]
  21248c:	ldr	w6, [x19]
  212490:	adrp	x2, 201000 <rfkill_type_table-0x838>
  212494:	adrp	x4, 201000 <rfkill_type_table-0x838>
  212498:	adrp	x5, 201000 <rfkill_type_table-0x838>
  21249c:	add	x2, x2, #0x361
  2124a0:	add	x4, x4, #0x7ff
  2124a4:	add	x5, x5, #0x578
  2124a8:	mov	w0, #0x3                   	// #3
  2124ac:	mov	w3, #0xb3                  	// #179
  2124b0:	bl	213000 <log_internal_realm@plt>
  2124b4:	b	212450 <load_state+0x220>
  2124b8:	cmp	w0, #0x3
  2124bc:	b.lt	212450 <load_state+0x220>  // b.tstop
  2124c0:	adrp	x2, 201000 <rfkill_type_table-0x838>
  2124c4:	adrp	x4, 201000 <rfkill_type_table-0x838>
  2124c8:	adrp	x5, 201000 <rfkill_type_table-0x838>
  2124cc:	mov	w1, #0x5                   	// #5
  2124d0:	add	x2, x2, #0x361
  2124d4:	add	x4, x4, #0x7ff
  2124d8:	add	x5, x5, #0x178
  2124dc:	mov	w0, #0x3                   	// #3
  2124e0:	movk	w1, #0x4000, lsl #16
  2124e4:	mov	w3, #0xb6                  	// #182
  2124e8:	bl	213000 <log_internal_realm@plt>
  2124ec:	b	212450 <load_state+0x220>
  2124f0:	adrp	x1, 201000 <rfkill_type_table-0x838>
  2124f4:	adrp	x2, 201000 <rfkill_type_table-0x838>
  2124f8:	adrp	x4, 201000 <rfkill_type_table-0x838>
  2124fc:	add	x1, x1, #0x64a
  212500:	add	x2, x2, #0x361
  212504:	add	x4, x4, #0x2f8
  212508:	mov	w3, #0x8e                  	// #142
  21250c:	bl	213080 <log_assert_failed_realm@plt>
  212510:	adrp	x1, 201000 <rfkill_type_table-0x838>
  212514:	adrp	x2, 201000 <rfkill_type_table-0x838>
  212518:	adrp	x4, 201000 <rfkill_type_table-0x838>
  21251c:	add	x1, x1, #0x38a
  212520:	add	x2, x2, #0x361
  212524:	add	x4, x4, #0x2f8
  212528:	mov	w3, #0x8f                  	// #143
  21252c:	mov	w0, wzr
  212530:	bl	213080 <log_assert_failed_realm@plt>
  212534:	adrp	x1, 201000 <rfkill_type_table-0x838>
  212538:	adrp	x2, 201000 <rfkill_type_table-0x838>
  21253c:	adrp	x4, 201000 <rfkill_type_table-0x838>
  212540:	add	x1, x1, #0x32f
  212544:	add	x2, x2, #0x361
  212548:	add	x4, x4, #0x2f8
  21254c:	mov	w3, #0x90                  	// #144
  212550:	mov	w0, wzr
  212554:	bl	213080 <log_assert_failed_realm@plt>

0000000000212558 <save_state_cancel>:
  212558:	sub	sp, sp, #0x30
  21255c:	stp	x29, x30, [sp, #16]
  212560:	stp	x20, x19, [sp, #32]
  212564:	add	x29, sp, #0x10
  212568:	str	xzr, [sp, #8]
  21256c:	cbz	x0, 2125b8 <save_state_cancel+0x60>
  212570:	ldr	w8, [x0, #8]
  212574:	mov	x19, x0
  212578:	tbnz	w8, #31, 2125d8 <save_state_cancel+0x80>
  21257c:	mov	x20, x1
  212580:	cbz	x1, 2125fc <save_state_cancel+0xa4>
  212584:	add	x1, sp, #0x8
  212588:	mov	x0, x20
  21258c:	bl	2128cc <determine_state_file>
  212590:	ldr	w1, [x20]
  212594:	ldr	x2, [sp, #8]
  212598:	mov	x0, x19
  21259c:	bl	212d1c <save_state_queue_remove>
  2125a0:	add	x0, sp, #0x8
  2125a4:	bl	2128b4 <freep>
  2125a8:	ldp	x20, x19, [sp, #32]
  2125ac:	ldp	x29, x30, [sp, #16]
  2125b0:	add	sp, sp, #0x30
  2125b4:	ret
  2125b8:	adrp	x1, 201000 <rfkill_type_table-0x838>
  2125bc:	adrp	x2, 201000 <rfkill_type_table-0x838>
  2125c0:	adrp	x4, 201000 <rfkill_type_table-0x838>
  2125c4:	add	x1, x1, #0x64a
  2125c8:	add	x2, x2, #0x361
  2125cc:	add	x4, x4, #0x415
  2125d0:	mov	w3, #0xea                  	// #234
  2125d4:	bl	213080 <log_assert_failed_realm@plt>
  2125d8:	adrp	x1, 201000 <rfkill_type_table-0x838>
  2125dc:	adrp	x2, 201000 <rfkill_type_table-0x838>
  2125e0:	adrp	x4, 201000 <rfkill_type_table-0x838>
  2125e4:	add	x1, x1, #0x38a
  2125e8:	add	x2, x2, #0x361
  2125ec:	add	x4, x4, #0x415
  2125f0:	mov	w3, #0xeb                  	// #235
  2125f4:	mov	w0, wzr
  2125f8:	bl	213080 <log_assert_failed_realm@plt>
  2125fc:	adrp	x1, 201000 <rfkill_type_table-0x838>
  212600:	adrp	x2, 201000 <rfkill_type_table-0x838>
  212604:	adrp	x4, 201000 <rfkill_type_table-0x838>
  212608:	add	x1, x1, #0x32f
  21260c:	add	x2, x2, #0x361
  212610:	add	x4, x4, #0x415
  212614:	mov	w3, #0xec                  	// #236
  212618:	mov	w0, wzr
  21261c:	bl	213080 <log_assert_failed_realm@plt>

0000000000212620 <save_state_queue>:
  212620:	sub	sp, sp, #0x30
  212624:	stp	x29, x30, [sp, #16]
  212628:	stp	x20, x19, [sp, #32]
  21262c:	add	x29, sp, #0x10
  212630:	str	xzr, [sp, #8]
  212634:	cbz	x0, 212704 <save_state_queue+0xe4>
  212638:	ldr	w8, [x0, #8]
  21263c:	mov	x19, x0
  212640:	tbnz	w8, #31, 212724 <save_state_queue+0x104>
  212644:	mov	x20, x1
  212648:	cbz	x1, 212748 <save_state_queue+0x128>
  21264c:	add	x1, sp, #0x8
  212650:	mov	x0, x20
  212654:	bl	2128cc <determine_state_file>
  212658:	tbnz	w0, #31, 2126ec <save_state_queue+0xcc>
  21265c:	ldr	w1, [x20]
  212660:	ldr	x2, [sp, #8]
  212664:	mov	x0, x19
  212668:	bl	212d1c <save_state_queue_remove>
  21266c:	mov	w0, #0x1                   	// #1
  212670:	mov	w1, #0x28                  	// #40
  212674:	bl	2130d0 <calloc@plt>
  212678:	cbz	x0, 2126ec <save_state_queue+0xcc>
  21267c:	ldr	x8, [sp, #8]
  212680:	str	xzr, [sp, #8]
  212684:	str	x8, [x0, #24]
  212688:	ldr	w8, [x20]
  21268c:	str	w8, [x0, #16]
  212690:	ldrb	w8, [x20, #6]
  212694:	str	w8, [x0, #32]
  212698:	ldr	x8, [x19]
  21269c:	cbz	x8, 2126d0 <save_state_queue+0xb0>
  2126a0:	mov	x10, x8
  2126a4:	mov	x9, x10
  2126a8:	ldr	x10, [x10]
  2126ac:	cbnz	x10, 2126a4 <save_state_queue+0x84>
  2126b0:	cbz	x9, 2126d8 <save_state_queue+0xb8>
  2126b4:	ldr	x8, [x9]
  2126b8:	str	x8, [x0]
  2126bc:	cbz	x8, 2126c4 <save_state_queue+0xa4>
  2126c0:	str	x0, [x8, #8]
  2126c4:	str	x9, [x0, #8]
  2126c8:	str	x0, [x9]
  2126cc:	b	2126ec <save_state_queue+0xcc>
  2126d0:	mov	x9, xzr
  2126d4:	cbnz	x9, 2126b4 <save_state_queue+0x94>
  2126d8:	str	x8, [x0]
  2126dc:	cbz	x8, 2126e4 <save_state_queue+0xc4>
  2126e0:	str	x0, [x8, #8]
  2126e4:	str	xzr, [x0, #8]
  2126e8:	str	x0, [x19]
  2126ec:	add	x0, sp, #0x8
  2126f0:	bl	2128b4 <freep>
  2126f4:	ldp	x20, x19, [sp, #32]
  2126f8:	ldp	x29, x30, [sp, #16]
  2126fc:	add	sp, sp, #0x30
  212700:	ret
  212704:	adrp	x1, 201000 <rfkill_type_table-0x838>
  212708:	adrp	x2, 201000 <rfkill_type_table-0x838>
  21270c:	adrp	x4, 201000 <rfkill_type_table-0x838>
  212710:	add	x1, x1, #0x64a
  212714:	add	x2, x2, #0x361
  212718:	add	x4, x4, #0x2b2
  21271c:	mov	w3, #0xcf                  	// #207
  212720:	bl	213080 <log_assert_failed_realm@plt>
  212724:	adrp	x1, 201000 <rfkill_type_table-0x838>
  212728:	adrp	x2, 201000 <rfkill_type_table-0x838>
  21272c:	adrp	x4, 201000 <rfkill_type_table-0x838>
  212730:	add	x1, x1, #0x38a
  212734:	add	x2, x2, #0x361
  212738:	add	x4, x4, #0x2b2
  21273c:	mov	w3, #0xd0                  	// #208
  212740:	mov	w0, wzr
  212744:	bl	213080 <log_assert_failed_realm@plt>
  212748:	adrp	x1, 201000 <rfkill_type_table-0x838>
  21274c:	adrp	x2, 201000 <rfkill_type_table-0x838>
  212750:	adrp	x4, 201000 <rfkill_type_table-0x838>
  212754:	add	x1, x1, #0x32f
  212758:	add	x2, x2, #0x361
  21275c:	add	x4, x4, #0x2b2
  212760:	mov	w3, #0xd1                  	// #209
  212764:	mov	w0, wzr
  212768:	bl	213080 <log_assert_failed_realm@plt>

000000000021276c <save_state_write_one>:
  21276c:	stp	x29, x30, [sp, #-32]!
  212770:	stp	x20, x19, [sp, #16]
  212774:	ldr	w8, [x0, #32]
  212778:	ldr	x20, [x0, #24]
  21277c:	mov	x19, x0
  212780:	mov	x29, sp
  212784:	cmp	w8, #0x0
  212788:	cset	w0, ne  // ne = any
  21278c:	bl	212884 <one_zero>
  212790:	mov	x1, x0
  212794:	mov	x0, x20
  212798:	bl	212868 <write_string_file>
  21279c:	mov	w20, w0
  2127a0:	mov	w0, wzr
  2127a4:	bl	212fc0 <log_get_max_level_realm@plt>
  2127a8:	tbnz	w20, #31, 2127f8 <save_state_write_one+0x8c>
  2127ac:	cmp	w0, #0x7
  2127b0:	b.lt	21282c <save_state_write_one+0xc0>  // b.tstop
  2127b4:	ldr	w8, [x19, #32]
  2127b8:	cmp	w8, #0x0
  2127bc:	cset	w0, ne  // ne = any
  2127c0:	bl	212884 <one_zero>
  2127c4:	ldr	x7, [x19, #24]
  2127c8:	adrp	x2, 201000 <rfkill_type_table-0x838>
  2127cc:	adrp	x4, 201000 <rfkill_type_table-0x838>
  2127d0:	adrp	x5, 201000 <rfkill_type_table-0x838>
  2127d4:	mov	x6, x0
  2127d8:	add	x2, x2, #0x361
  2127dc:	add	x4, x4, #0x335
  2127e0:	add	x5, x5, #0x71f
  2127e4:	mov	w0, #0x7                   	// #7
  2127e8:	mov	w3, #0xfd                  	// #253
  2127ec:	mov	w1, wzr
  2127f0:	bl	213000 <log_internal_realm@plt>
  2127f4:	b	21282c <save_state_write_one+0xc0>
  2127f8:	cmp	w0, #0x3
  2127fc:	b.lt	21282c <save_state_write_one+0xc0>  // b.tstop
  212800:	ldr	x6, [x19, #24]
  212804:	adrp	x2, 201000 <rfkill_type_table-0x838>
  212808:	adrp	x4, 201000 <rfkill_type_table-0x838>
  21280c:	adrp	x5, 201000 <rfkill_type_table-0x838>
  212810:	add	x2, x2, #0x361
  212814:	add	x4, x4, #0x335
  212818:	add	x5, x5, #0x266
  21281c:	mov	w0, #0x3                   	// #3
  212820:	mov	w3, #0xfb                  	// #251
  212824:	mov	w1, w20
  212828:	bl	213000 <log_internal_realm@plt>
  21282c:	ldp	x20, x19, [sp, #16]
  212830:	ldp	x29, x30, [sp], #32
  212834:	ret

0000000000212838 <write_queue_item_free>:
  212838:	cbz	x0, 212864 <write_queue_item_free+0x2c>
  21283c:	stp	x29, x30, [sp, #-32]!
  212840:	str	x19, [sp, #16]
  212844:	mov	x19, x0
  212848:	ldr	x0, [x0, #24]
  21284c:	mov	x29, sp
  212850:	bl	2130e0 <free@plt>
  212854:	mov	x0, x19
  212858:	bl	2128a0 <mfree>
  21285c:	ldr	x19, [sp, #16]
  212860:	ldp	x29, x30, [sp], #32
  212864:	ret

0000000000212868 <write_string_file>:
  212868:	stp	x29, x30, [sp, #-16]!
  21286c:	mov	w2, #0x83                  	// #131
  212870:	mov	x3, xzr
  212874:	mov	x29, sp
  212878:	bl	2130f0 <write_string_file_ts@plt>
  21287c:	ldp	x29, x30, [sp], #16
  212880:	ret

0000000000212884 <one_zero>:
  212884:	adrp	x8, 201000 <rfkill_type_table-0x838>
  212888:	adrp	x9, 201000 <rfkill_type_table-0x838>
  21288c:	add	x8, x8, #0x453
  212890:	add	x9, x9, #0x64c
  212894:	tst	w0, #0x1
  212898:	csel	x0, x9, x8, ne  // ne = any
  21289c:	ret

00000000002128a0 <mfree>:
  2128a0:	stp	x29, x30, [sp, #-16]!
  2128a4:	mov	x29, sp
  2128a8:	bl	2130e0 <free@plt>
  2128ac:	ldp	x29, x30, [sp], #16
  2128b0:	ret

00000000002128b4 <freep>:
  2128b4:	stp	x29, x30, [sp, #-16]!
  2128b8:	ldr	x0, [x0]
  2128bc:	mov	x29, sp
  2128c0:	bl	2130e0 <free@plt>
  2128c4:	ldp	x29, x30, [sp], #16
  2128c8:	ret

00000000002128cc <determine_state_file>:
  2128cc:	sub	sp, sp, #0x50
  2128d0:	stp	x29, x30, [sp, #32]
  2128d4:	add	x29, sp, #0x20
  2128d8:	stp	x22, x21, [sp, #48]
  2128dc:	stp	x20, x19, [sp, #64]
  2128e0:	stur	xzr, [x29, #-8]
  2128e4:	str	xzr, [sp, #16]
  2128e8:	cbz	x0, 212a28 <determine_state_file+0x15c>
  2128ec:	mov	x19, x1
  2128f0:	cbz	x1, 212a48 <determine_state_file+0x17c>
  2128f4:	sub	x1, x29, #0x8
  2128f8:	mov	x21, x0
  2128fc:	bl	212aa8 <find_device>
  212900:	tbnz	w0, #31, 2129fc <determine_state_file+0x130>
  212904:	ldur	x0, [x29, #-8]
  212908:	adrp	x1, 201000 <rfkill_type_table-0x838>
  21290c:	add	x1, x1, #0x45a
  212910:	add	x3, sp, #0x10
  212914:	mov	x2, #0xffffffffffffffff    	// #-1
  212918:	bl	213100 <device_wait_for_initialization@plt>
  21291c:	tbnz	w0, #31, 2129fc <determine_state_file+0x130>
  212920:	ldrb	w0, [x21, #4]
  212924:	bl	212210 <rfkill_type_to_string>
  212928:	cbz	x0, 212a6c <determine_state_file+0x1a0>
  21292c:	mov	x20, x0
  212930:	ldr	x0, [sp, #16]
  212934:	adrp	x1, 201000 <rfkill_type_table-0x838>
  212938:	add	x1, x1, #0x7f5
  21293c:	add	x2, sp, #0x8
  212940:	bl	213110 <sd_device_get_property_value@plt>
  212944:	tbnz	w0, #31, 212988 <determine_state_file+0xbc>
  212948:	ldr	x0, [sp, #8]
  21294c:	str	xzr, [sp]
  212950:	bl	213120 <cescape@plt>
  212954:	str	x0, [sp]
  212958:	cbz	x0, 2129a4 <determine_state_file+0xd8>
  21295c:	mov	x1, x0
  212960:	adrp	x0, 201000 <rfkill_type_table-0x838>
  212964:	adrp	x2, 201000 <rfkill_type_table-0x838>
  212968:	add	x0, x0, #0x737
  21296c:	add	x2, x2, #0x7fd
  212970:	mov	x3, x20
  212974:	mov	x4, xzr
  212978:	bl	213130 <strjoin_real@plt>
  21297c:	mov	x21, x0
  212980:	mov	w22, #0x1                   	// #1
  212984:	b	2129c4 <determine_state_file+0xf8>
  212988:	adrp	x0, 201000 <rfkill_type_table-0x838>
  21298c:	add	x0, x0, #0x737
  212990:	mov	x1, x20
  212994:	mov	x2, xzr
  212998:	bl	213130 <strjoin_real@plt>
  21299c:	mov	x21, x0
  2129a0:	b	2129d0 <determine_state_file+0x104>
  2129a4:	adrp	x1, 201000 <rfkill_type_table-0x838>
  2129a8:	adrp	x3, 201000 <rfkill_type_table-0x838>
  2129ac:	add	x1, x1, #0x361
  2129b0:	add	x3, x3, #0x375
  2129b4:	mov	w2, #0x7b                  	// #123
  2129b8:	bl	213140 <log_oom_internal@plt>
  2129bc:	mov	w20, w0
  2129c0:	mov	w22, wzr
  2129c4:	mov	x0, sp
  2129c8:	bl	2128b4 <freep>
  2129cc:	tbz	w22, #0, 212a00 <determine_state_file+0x134>
  2129d0:	cbz	x21, 2129e0 <determine_state_file+0x114>
  2129d4:	mov	w20, wzr
  2129d8:	str	x21, [x19]
  2129dc:	b	212a00 <determine_state_file+0x134>
  2129e0:	adrp	x1, 201000 <rfkill_type_table-0x838>
  2129e4:	adrp	x3, 201000 <rfkill_type_table-0x838>
  2129e8:	add	x1, x1, #0x361
  2129ec:	add	x3, x3, #0x375
  2129f0:	mov	w2, #0x82                  	// #130
  2129f4:	mov	w0, wzr
  2129f8:	bl	213140 <log_oom_internal@plt>
  2129fc:	mov	w20, w0
  212a00:	add	x0, sp, #0x10
  212a04:	bl	212a8c <sd_device_unrefp>
  212a08:	sub	x0, x29, #0x8
  212a0c:	bl	212a8c <sd_device_unrefp>
  212a10:	mov	w0, w20
  212a14:	ldp	x20, x19, [sp, #64]
  212a18:	ldp	x22, x21, [sp, #48]
  212a1c:	ldp	x29, x30, [sp, #32]
  212a20:	add	sp, sp, #0x50
  212a24:	ret
  212a28:	adrp	x1, 201000 <rfkill_type_table-0x838>
  212a2c:	adrp	x2, 201000 <rfkill_type_table-0x838>
  212a30:	adrp	x4, 201000 <rfkill_type_table-0x838>
  212a34:	add	x1, x1, #0x32f
  212a38:	add	x2, x2, #0x361
  212a3c:	add	x4, x4, #0x4a4
  212a40:	mov	w3, #0x69                  	// #105
  212a44:	bl	213080 <log_assert_failed_realm@plt>
  212a48:	adrp	x1, 201000 <rfkill_type_table-0x838>
  212a4c:	adrp	x2, 201000 <rfkill_type_table-0x838>
  212a50:	adrp	x4, 201000 <rfkill_type_table-0x838>
  212a54:	add	x1, x1, #0x4e7
  212a58:	add	x2, x2, #0x361
  212a5c:	add	x4, x4, #0x4a4
  212a60:	mov	w3, #0x6a                  	// #106
  212a64:	mov	w0, wzr
  212a68:	bl	213080 <log_assert_failed_realm@plt>
  212a6c:	adrp	x1, 201000 <rfkill_type_table-0x838>
  212a70:	adrp	x2, 201000 <rfkill_type_table-0x838>
  212a74:	adrp	x4, 201000 <rfkill_type_table-0x838>
  212a78:	add	x1, x1, #0x80a
  212a7c:	add	x2, x2, #0x361
  212a80:	add	x4, x4, #0x4a4
  212a84:	mov	w3, #0x74                  	// #116
  212a88:	bl	213080 <log_assert_failed_realm@plt>

0000000000212a8c <sd_device_unrefp>:
  212a8c:	stp	x29, x30, [sp, #-16]!
  212a90:	ldr	x0, [x0]
  212a94:	mov	x29, sp
  212a98:	cbz	x0, 212aa0 <sd_device_unrefp+0x14>
  212a9c:	bl	213150 <sd_device_unref@plt>
  212aa0:	ldp	x29, x30, [sp], #16
  212aa4:	ret

0000000000212aa8 <find_device>:
  212aa8:	sub	sp, sp, #0x60
  212aac:	stp	x29, x30, [sp, #64]
  212ab0:	add	x29, sp, #0x40
  212ab4:	stp	x20, x19, [sp, #80]
  212ab8:	stp	xzr, xzr, [x29, #-16]
  212abc:	cbz	x0, 212cd8 <find_device+0x230>
  212ac0:	mov	x19, x1
  212ac4:	cbz	x1, 212cf8 <find_device+0x250>
  212ac8:	ldr	w2, [x0]
  212acc:	adrp	x1, 201000 <rfkill_type_table-0x838>
  212ad0:	add	x1, x1, #0x288
  212ad4:	sub	x0, x29, #0x10
  212ad8:	bl	213160 <asprintf@plt>
  212adc:	tbnz	w0, #31, 212b8c <find_device+0xe4>
  212ae0:	ldur	x2, [x29, #-16]
  212ae4:	adrp	x1, 201000 <rfkill_type_table-0x838>
  212ae8:	add	x1, x1, #0x45a
  212aec:	sub	x0, x29, #0x8
  212af0:	bl	213170 <sd_device_new_from_subsystem_sysname@plt>
  212af4:	tbnz	w0, #31, 212bac <find_device+0x104>
  212af8:	ldur	x0, [x29, #-8]
  212afc:	adrp	x1, 201000 <rfkill_type_table-0x838>
  212b00:	add	x1, x1, #0x3b0
  212b04:	sub	x2, x29, #0x18
  212b08:	bl	213180 <sd_device_get_sysattr_value@plt>
  212b0c:	tbnz	w0, #31, 212bfc <find_device+0x154>
  212b10:	ldur	x20, [x29, #-8]
  212b14:	str	xzr, [sp, #32]
  212b18:	cbz	x20, 212b2c <find_device+0x84>
  212b1c:	mov	w0, wzr
  212b20:	bl	212fc0 <log_get_max_level_realm@plt>
  212b24:	cmp	w0, #0x7
  212b28:	b.ge	212cb8 <find_device+0x210>  // b.tcont
  212b2c:	ldr	x6, [sp, #32]
  212b30:	ldur	x8, [x29, #-24]
  212b34:	adrp	x9, 201000 <rfkill_type_table-0x838>
  212b38:	add	x9, x9, #0x4eb
  212b3c:	cmp	x6, #0x0
  212b40:	str	x8, [sp, #16]
  212b44:	adrp	x8, 201000 <rfkill_type_table-0x838>
  212b48:	adrp	x2, 201000 <rfkill_type_table-0x838>
  212b4c:	adrp	x4, 201000 <rfkill_type_table-0x838>
  212b50:	csel	x5, xzr, x9, eq  // eq = none
  212b54:	add	x8, x8, #0x291
  212b58:	add	x2, x2, #0x361
  212b5c:	add	x4, x4, #0x352
  212b60:	mov	w0, #0x7                   	// #7
  212b64:	mov	w3, #0x5a                  	// #90
  212b68:	mov	w1, wzr
  212b6c:	mov	x7, xzr
  212b70:	stp	xzr, x8, [sp]
  212b74:	bl	213190 <log_object_internal@plt>
  212b78:	ldur	x8, [x29, #-8]
  212b7c:	mov	w20, wzr
  212b80:	stur	xzr, [x29, #-8]
  212b84:	str	x8, [x19]
  212b88:	b	212c94 <find_device+0x1ec>
  212b8c:	adrp	x1, 201000 <rfkill_type_table-0x838>
  212b90:	adrp	x3, 201000 <rfkill_type_table-0x838>
  212b94:	add	x1, x1, #0x361
  212b98:	add	x3, x3, #0x352
  212b9c:	mov	w2, #0x4f                  	// #79
  212ba0:	mov	w0, wzr
  212ba4:	bl	213140 <log_oom_internal@plt>
  212ba8:	b	212c90 <find_device+0x1e8>
  212bac:	add	w8, w0, #0x13
  212bb0:	mov	w20, w0
  212bb4:	cmp	w8, #0x11
  212bb8:	mov	w19, #0x3                   	// #3
  212bbc:	b.hi	212bdc <find_device+0x134>  // b.pmore
  212bc0:	mov	w9, #0x1                   	// #1
  212bc4:	lsl	w8, w9, w8
  212bc8:	mov	w9, #0x2001                	// #8193
  212bcc:	movk	w9, #0x2, lsl #16
  212bd0:	tst	w8, w9
  212bd4:	b.eq	212bdc <find_device+0x134>  // b.none
  212bd8:	mov	w19, #0x7                   	// #7
  212bdc:	mov	w0, wzr
  212be0:	bl	212fc0 <log_get_max_level_realm@plt>
  212be4:	cmp	w0, w19
  212be8:	b.ge	212c64 <find_device+0x1bc>  // b.tcont
  212bec:	mov	w8, wzr
  212bf0:	neg	w9, w20
  212bf4:	sub	w20, w8, w9, uxtb
  212bf8:	b	212c94 <find_device+0x1ec>
  212bfc:	ldur	x19, [x29, #-8]
  212c00:	mov	w20, w0
  212c04:	str	xzr, [sp, #32]
  212c08:	cbz	x19, 212c1c <find_device+0x174>
  212c0c:	mov	w0, wzr
  212c10:	bl	212fc0 <log_get_max_level_realm@plt>
  212c14:	cmp	w0, #0x7
  212c18:	b.ge	212cc8 <find_device+0x220>  // b.tcont
  212c1c:	ldr	x6, [sp, #32]
  212c20:	adrp	x8, 201000 <rfkill_type_table-0x838>
  212c24:	add	x8, x8, #0x4eb
  212c28:	adrp	x2, 201000 <rfkill_type_table-0x838>
  212c2c:	cmp	x6, #0x0
  212c30:	csel	x5, xzr, x8, eq  // eq = none
  212c34:	adrp	x8, 201000 <rfkill_type_table-0x838>
  212c38:	adrp	x4, 201000 <rfkill_type_table-0x838>
  212c3c:	add	x8, x8, #0x1f3
  212c40:	add	x2, x2, #0x361
  212c44:	add	x4, x4, #0x352
  212c48:	mov	w0, #0x7                   	// #7
  212c4c:	mov	w3, #0x58                  	// #88
  212c50:	mov	w1, w20
  212c54:	mov	x7, xzr
  212c58:	stp	xzr, x8, [sp]
  212c5c:	bl	213190 <log_object_internal@plt>
  212c60:	b	212c90 <find_device+0x1e8>
  212c64:	ldur	x6, [x29, #-16]
  212c68:	adrp	x2, 201000 <rfkill_type_table-0x838>
  212c6c:	adrp	x4, 201000 <rfkill_type_table-0x838>
  212c70:	adrp	x5, 201000 <rfkill_type_table-0x838>
  212c74:	add	x2, x2, #0x361
  212c78:	add	x4, x4, #0x352
  212c7c:	add	x5, x5, #0x1aa
  212c80:	mov	w3, #0x54                  	// #84
  212c84:	mov	w0, w19
  212c88:	mov	w1, w20
  212c8c:	bl	213000 <log_internal_realm@plt>
  212c90:	mov	w20, w0
  212c94:	sub	x0, x29, #0x10
  212c98:	bl	2128b4 <freep>
  212c9c:	sub	x0, x29, #0x8
  212ca0:	bl	212a8c <sd_device_unrefp>
  212ca4:	mov	w0, w20
  212ca8:	ldp	x20, x19, [sp, #80]
  212cac:	ldp	x29, x30, [sp, #64]
  212cb0:	add	sp, sp, #0x60
  212cb4:	ret
  212cb8:	add	x1, sp, #0x20
  212cbc:	mov	x0, x20
  212cc0:	bl	2131a0 <sd_device_get_sysname@plt>
  212cc4:	b	212b2c <find_device+0x84>
  212cc8:	add	x1, sp, #0x20
  212ccc:	mov	x0, x19
  212cd0:	bl	2131a0 <sd_device_get_sysname@plt>
  212cd4:	b	212c1c <find_device+0x174>
  212cd8:	adrp	x1, 201000 <rfkill_type_table-0x838>
  212cdc:	adrp	x2, 201000 <rfkill_type_table-0x838>
  212ce0:	adrp	x4, 201000 <rfkill_type_table-0x838>
  212ce4:	add	x1, x1, #0x32f
  212ce8:	add	x2, x2, #0x361
  212cec:	add	x4, x4, #0x750
  212cf0:	mov	w3, #0x4b                  	// #75
  212cf4:	bl	213080 <log_assert_failed_realm@plt>
  212cf8:	adrp	x1, 201000 <rfkill_type_table-0x838>
  212cfc:	adrp	x2, 201000 <rfkill_type_table-0x838>
  212d00:	adrp	x4, 201000 <rfkill_type_table-0x838>
  212d04:	add	x1, x1, #0x4e7
  212d08:	add	x2, x2, #0x361
  212d0c:	add	x4, x4, #0x750
  212d10:	mov	w3, #0x4c                  	// #76
  212d14:	mov	w0, wzr
  212d18:	bl	213080 <log_assert_failed_realm@plt>

0000000000212d1c <save_state_queue_remove>:
  212d1c:	stp	x29, x30, [sp, #-80]!
  212d20:	stp	x26, x25, [sp, #16]
  212d24:	stp	x24, x23, [sp, #32]
  212d28:	stp	x22, x21, [sp, #48]
  212d2c:	stp	x20, x19, [sp, #64]
  212d30:	mov	x29, sp
  212d34:	cbz	x0, 212e58 <save_state_queue_remove+0x13c>
  212d38:	ldr	x22, [x0]
  212d3c:	mov	x21, x0
  212d40:	cbz	x22, 212e1c <save_state_queue_remove+0x100>
  212d44:	adrp	x23, 201000 <rfkill_type_table-0x838>
  212d48:	adrp	x24, 201000 <rfkill_type_table-0x838>
  212d4c:	adrp	x25, 201000 <rfkill_type_table-0x838>
  212d50:	mov	x19, x2
  212d54:	mov	w20, w1
  212d58:	add	x23, x23, #0x361
  212d5c:	add	x24, x24, #0x7dd
  212d60:	add	x25, x25, #0x6f3
  212d64:	b	212d84 <save_state_queue_remove+0x68>
  212d68:	ldr	x9, [x22]
  212d6c:	str	x9, [x8]
  212d70:	mov	x0, x22
  212d74:	stp	xzr, xzr, [x22]
  212d78:	bl	212838 <write_queue_item_free>
  212d7c:	mov	x22, x26
  212d80:	cbz	x26, 212e1c <save_state_queue_remove+0x100>
  212d84:	ldr	x26, [x22]
  212d88:	cbz	x19, 212d9c <save_state_queue_remove+0x80>
  212d8c:	ldr	x0, [x22, #24]
  212d90:	mov	x1, x19
  212d94:	bl	2131b0 <strcmp@plt>
  212d98:	cbz	w0, 212da8 <save_state_queue_remove+0x8c>
  212d9c:	ldr	w8, [x22, #16]
  212da0:	cmp	w8, w20
  212da4:	b.ne	212d7c <save_state_queue_remove+0x60>  // b.any
  212da8:	mov	w0, wzr
  212dac:	bl	212fc0 <log_get_max_level_realm@plt>
  212db0:	cmp	w0, #0x7
  212db4:	b.lt	212dec <save_state_queue_remove+0xd0>  // b.tstop
  212db8:	ldr	w8, [x22, #32]
  212dbc:	cmp	w8, #0x0
  212dc0:	cset	w0, ne  // ne = any
  212dc4:	bl	212884 <one_zero>
  212dc8:	ldr	x7, [x22, #24]
  212dcc:	mov	x6, x0
  212dd0:	mov	w0, #0x7                   	// #7
  212dd4:	mov	w3, #0xc3                  	// #195
  212dd8:	mov	w1, wzr
  212ddc:	mov	x2, x23
  212de0:	mov	x4, x24
  212de4:	mov	x5, x25
  212de8:	bl	213000 <log_internal_realm@plt>
  212dec:	ldr	x8, [x22]
  212df0:	cbz	x8, 212dfc <save_state_queue_remove+0xe0>
  212df4:	ldr	x9, [x22, #8]
  212df8:	str	x9, [x8, #8]
  212dfc:	ldr	x8, [x22, #8]
  212e00:	cbnz	x8, 212d68 <save_state_queue_remove+0x4c>
  212e04:	ldr	x8, [x21]
  212e08:	cmp	x8, x22
  212e0c:	b.ne	212e34 <save_state_queue_remove+0x118>  // b.any
  212e10:	ldr	x8, [x22]
  212e14:	str	x8, [x21]
  212e18:	b	212d70 <save_state_queue_remove+0x54>
  212e1c:	ldp	x20, x19, [sp, #64]
  212e20:	ldp	x22, x21, [sp, #48]
  212e24:	ldp	x24, x23, [sp, #32]
  212e28:	ldp	x26, x25, [sp, #16]
  212e2c:	ldp	x29, x30, [sp], #80
  212e30:	ret
  212e34:	adrp	x1, 201000 <rfkill_type_table-0x838>
  212e38:	adrp	x2, 201000 <rfkill_type_table-0x838>
  212e3c:	adrp	x4, 201000 <rfkill_type_table-0x838>
  212e40:	add	x1, x1, #0x39c
  212e44:	add	x2, x2, #0x361
  212e48:	add	x4, x4, #0x516
  212e4c:	mov	w3, #0xc4                  	// #196
  212e50:	mov	w0, wzr
  212e54:	bl	213080 <log_assert_failed_realm@plt>
  212e58:	adrp	x1, 201000 <rfkill_type_table-0x838>
  212e5c:	adrp	x2, 201000 <rfkill_type_table-0x838>
  212e60:	adrp	x4, 201000 <rfkill_type_table-0x838>
  212e64:	add	x1, x1, #0x64a
  212e68:	add	x2, x2, #0x361
  212e6c:	add	x4, x4, #0x516
  212e70:	mov	w3, #0xbf                  	// #191
  212e74:	bl	213080 <log_assert_failed_realm@plt>

0000000000212e78 <ALIGN_TO>:
  212e78:	add	x8, x0, #0x7
  212e7c:	and	x0, x8, #0xfffffffffffffff8
  212e80:	ret
  212e84:	udf	#0

0000000000212e88 <__libc_csu_init>:
  212e88:	stp	x29, x30, [sp, #-64]!
  212e8c:	mov	x29, sp
  212e90:	stp	x19, x20, [sp, #16]
  212e94:	adrp	x20, 223000 <strcmp@plt+0xfe50>
  212e98:	add	x20, x20, #0x1d0
  212e9c:	stp	x21, x22, [sp, #32]
  212ea0:	adrp	x21, 223000 <strcmp@plt+0xfe50>
  212ea4:	add	x21, x21, #0x1c8
  212ea8:	sub	x20, x20, x21
  212eac:	mov	w22, w0
  212eb0:	stp	x23, x24, [sp, #48]
  212eb4:	mov	x23, x1
  212eb8:	mov	x24, x2
  212ebc:	bl	212f0c <_init>
  212ec0:	cmp	xzr, x20, asr #3
  212ec4:	b.eq	212ef0 <__libc_csu_init+0x68>  // b.none
  212ec8:	asr	x20, x20, #3
  212ecc:	mov	x19, #0x0                   	// #0
  212ed0:	ldr	x3, [x21, x19, lsl #3]
  212ed4:	mov	x2, x24
  212ed8:	add	x19, x19, #0x1
  212edc:	mov	x1, x23
  212ee0:	mov	w0, w22
  212ee4:	blr	x3
  212ee8:	cmp	x20, x19
  212eec:	b.ne	212ed0 <__libc_csu_init+0x48>  // b.any
  212ef0:	ldp	x19, x20, [sp, #16]
  212ef4:	ldp	x21, x22, [sp, #32]
  212ef8:	ldp	x23, x24, [sp, #48]
  212efc:	ldp	x29, x30, [sp], #64
  212f00:	ret
  212f04:	nop

0000000000212f08 <__libc_csu_fini>:
  212f08:	ret

Disassembly of section .init:

0000000000212f0c <_init>:
  212f0c:	stp	x29, x30, [sp, #-16]!
  212f10:	mov	x29, sp
  212f14:	bl	211a08 <call_weak_fn>
  212f18:	ldp	x29, x30, [sp], #16
  212f1c:	ret

Disassembly of section .fini:

0000000000212f20 <_fini>:
  212f20:	stp	x29, x30, [sp, #-16]!
  212f24:	mov	x29, sp
  212f28:	ldp	x29, x30, [sp], #16
  212f2c:	ret

Disassembly of section .plt:

0000000000212f30 <__libc_start_main@plt-0x20>:
  212f30:	stp	x16, x30, [sp, #-16]!
  212f34:	adrp	x16, 223000 <strcmp@plt+0xfe50>
  212f38:	ldr	x17, [x16, #968]
  212f3c:	add	x16, x16, #0x3c8
  212f40:	br	x17
  212f44:	nop
  212f48:	nop
  212f4c:	nop

0000000000212f50 <__libc_start_main@plt>:
  212f50:	adrp	x16, 223000 <strcmp@plt+0xfe50>
  212f54:	ldr	x17, [x16, #976]
  212f58:	add	x16, x16, #0x3d0
  212f5c:	br	x17

0000000000212f60 <abort@plt>:
  212f60:	adrp	x16, 223000 <strcmp@plt+0xfe50>
  212f64:	ldr	x17, [x16, #984]
  212f68:	add	x16, x16, #0x3d8
  212f6c:	br	x17

0000000000212f70 <__gmon_start__@plt>:
  212f70:	adrp	x16, 223000 <strcmp@plt+0xfe50>
  212f74:	ldr	x17, [x16, #992]
  212f78:	add	x16, x16, #0x3e0
  212f7c:	br	x17

0000000000212f80 <ask_password_agent_close@plt>:
  212f80:	adrp	x16, 223000 <strcmp@plt+0xfe50>
  212f84:	ldr	x17, [x16, #1000]
  212f88:	add	x16, x16, #0x3e8
  212f8c:	br	x17

0000000000212f90 <polkit_agent_close@plt>:
  212f90:	adrp	x16, 223000 <strcmp@plt+0xfe50>
  212f94:	ldr	x17, [x16, #1008]
  212f98:	add	x16, x16, #0x3f0
  212f9c:	br	x17

0000000000212fa0 <pager_close@plt>:
  212fa0:	adrp	x16, 223000 <strcmp@plt+0xfe50>
  212fa4:	ldr	x17, [x16, #1016]
  212fa8:	add	x16, x16, #0x3f8
  212fac:	br	x17

0000000000212fb0 <mac_selinux_finish@plt>:
  212fb0:	adrp	x16, 223000 <strcmp@plt+0xfe50>
  212fb4:	ldr	x17, [x16, #1024]
  212fb8:	add	x16, x16, #0x400
  212fbc:	br	x17

0000000000212fc0 <log_get_max_level_realm@plt>:
  212fc0:	adrp	x16, 223000 <strcmp@plt+0xfe50>
  212fc4:	ldr	x17, [x16, #1032]
  212fc8:	add	x16, x16, #0x408
  212fcc:	br	x17

0000000000212fd0 <log_setup_service@plt>:
  212fd0:	adrp	x16, 223000 <strcmp@plt+0xfe50>
  212fd4:	ldr	x17, [x16, #1040]
  212fd8:	add	x16, x16, #0x410
  212fdc:	br	x17

0000000000212fe0 <umask@plt>:
  212fe0:	adrp	x16, 223000 <strcmp@plt+0xfe50>
  212fe4:	ldr	x17, [x16, #1048]
  212fe8:	add	x16, x16, #0x418
  212fec:	br	x17

0000000000212ff0 <sd_listen_fds@plt>:
  212ff0:	adrp	x16, 223000 <strcmp@plt+0xfe50>
  212ff4:	ldr	x17, [x16, #1056]
  212ff8:	add	x16, x16, #0x420
  212ffc:	br	x17

0000000000213000 <log_internal_realm@plt>:
  213000:	adrp	x16, 223000 <strcmp@plt+0xfe50>
  213004:	ldr	x17, [x16, #1064]
  213008:	add	x16, x16, #0x428
  21300c:	br	x17

0000000000213010 <fd_nonblock@plt>:
  213010:	adrp	x16, 223000 <strcmp@plt+0xfe50>
  213014:	ldr	x17, [x16, #1072]
  213018:	add	x16, x16, #0x430
  21301c:	br	x17

0000000000213020 <open64@plt>:
  213020:	adrp	x16, 223000 <strcmp@plt+0xfe50>
  213024:	ldr	x17, [x16, #1080]
  213028:	add	x16, x16, #0x438
  21302c:	br	x17

0000000000213030 <read@plt>:
  213030:	adrp	x16, 223000 <strcmp@plt+0xfe50>
  213034:	ldr	x17, [x16, #1088]
  213038:	add	x16, x16, #0x440
  21303c:	br	x17

0000000000213040 <__errno_location@plt>:
  213040:	adrp	x16, 223000 <strcmp@plt+0xfe50>
  213044:	ldr	x17, [x16, #1096]
  213048:	add	x16, x16, #0x448
  21304c:	br	x17

0000000000213050 <sd_notify@plt>:
  213050:	adrp	x16, 223000 <strcmp@plt+0xfe50>
  213054:	ldr	x17, [x16, #1104]
  213058:	add	x16, x16, #0x450
  21305c:	br	x17

0000000000213060 <fd_wait_for_event@plt>:
  213060:	adrp	x16, 223000 <strcmp@plt+0xfe50>
  213064:	ldr	x17, [x16, #1112]
  213068:	add	x16, x16, #0x458
  21306c:	br	x17

0000000000213070 <safe_close@plt>:
  213070:	adrp	x16, 223000 <strcmp@plt+0xfe50>
  213074:	ldr	x17, [x16, #1120]
  213078:	add	x16, x16, #0x460
  21307c:	br	x17

0000000000213080 <log_assert_failed_realm@plt>:
  213080:	adrp	x16, 223000 <strcmp@plt+0xfe50>
  213084:	ldr	x17, [x16, #1128]
  213088:	add	x16, x16, #0x468
  21308c:	br	x17

0000000000213090 <shall_restore_state@plt>:
  213090:	adrp	x16, 223000 <strcmp@plt+0xfe50>
  213094:	ldr	x17, [x16, #1136]
  213098:	add	x16, x16, #0x470
  21309c:	br	x17

00000000002130a0 <read_one_line_file@plt>:
  2130a0:	adrp	x16, 223000 <strcmp@plt+0xfe50>
  2130a4:	ldr	x17, [x16, #1144]
  2130a8:	add	x16, x16, #0x478
  2130ac:	br	x17

00000000002130b0 <parse_boolean@plt>:
  2130b0:	adrp	x16, 223000 <strcmp@plt+0xfe50>
  2130b4:	ldr	x17, [x16, #1152]
  2130b8:	add	x16, x16, #0x480
  2130bc:	br	x17

00000000002130c0 <write@plt>:
  2130c0:	adrp	x16, 223000 <strcmp@plt+0xfe50>
  2130c4:	ldr	x17, [x16, #1160]
  2130c8:	add	x16, x16, #0x488
  2130cc:	br	x17

00000000002130d0 <calloc@plt>:
  2130d0:	adrp	x16, 223000 <strcmp@plt+0xfe50>
  2130d4:	ldr	x17, [x16, #1168]
  2130d8:	add	x16, x16, #0x490
  2130dc:	br	x17

00000000002130e0 <free@plt>:
  2130e0:	adrp	x16, 223000 <strcmp@plt+0xfe50>
  2130e4:	ldr	x17, [x16, #1176]
  2130e8:	add	x16, x16, #0x498
  2130ec:	br	x17

00000000002130f0 <write_string_file_ts@plt>:
  2130f0:	adrp	x16, 223000 <strcmp@plt+0xfe50>
  2130f4:	ldr	x17, [x16, #1184]
  2130f8:	add	x16, x16, #0x4a0
  2130fc:	br	x17

0000000000213100 <device_wait_for_initialization@plt>:
  213100:	adrp	x16, 223000 <strcmp@plt+0xfe50>
  213104:	ldr	x17, [x16, #1192]
  213108:	add	x16, x16, #0x4a8
  21310c:	br	x17

0000000000213110 <sd_device_get_property_value@plt>:
  213110:	adrp	x16, 223000 <strcmp@plt+0xfe50>
  213114:	ldr	x17, [x16, #1200]
  213118:	add	x16, x16, #0x4b0
  21311c:	br	x17

0000000000213120 <cescape@plt>:
  213120:	adrp	x16, 223000 <strcmp@plt+0xfe50>
  213124:	ldr	x17, [x16, #1208]
  213128:	add	x16, x16, #0x4b8
  21312c:	br	x17

0000000000213130 <strjoin_real@plt>:
  213130:	adrp	x16, 223000 <strcmp@plt+0xfe50>
  213134:	ldr	x17, [x16, #1216]
  213138:	add	x16, x16, #0x4c0
  21313c:	br	x17

0000000000213140 <log_oom_internal@plt>:
  213140:	adrp	x16, 223000 <strcmp@plt+0xfe50>
  213144:	ldr	x17, [x16, #1224]
  213148:	add	x16, x16, #0x4c8
  21314c:	br	x17

0000000000213150 <sd_device_unref@plt>:
  213150:	adrp	x16, 223000 <strcmp@plt+0xfe50>
  213154:	ldr	x17, [x16, #1232]
  213158:	add	x16, x16, #0x4d0
  21315c:	br	x17

0000000000213160 <asprintf@plt>:
  213160:	adrp	x16, 223000 <strcmp@plt+0xfe50>
  213164:	ldr	x17, [x16, #1240]
  213168:	add	x16, x16, #0x4d8
  21316c:	br	x17

0000000000213170 <sd_device_new_from_subsystem_sysname@plt>:
  213170:	adrp	x16, 223000 <strcmp@plt+0xfe50>
  213174:	ldr	x17, [x16, #1248]
  213178:	add	x16, x16, #0x4e0
  21317c:	br	x17

0000000000213180 <sd_device_get_sysattr_value@plt>:
  213180:	adrp	x16, 223000 <strcmp@plt+0xfe50>
  213184:	ldr	x17, [x16, #1256]
  213188:	add	x16, x16, #0x4e8
  21318c:	br	x17

0000000000213190 <log_object_internal@plt>:
  213190:	adrp	x16, 223000 <strcmp@plt+0xfe50>
  213194:	ldr	x17, [x16, #1264]
  213198:	add	x16, x16, #0x4f0
  21319c:	br	x17

00000000002131a0 <sd_device_get_sysname@plt>:
  2131a0:	adrp	x16, 223000 <strcmp@plt+0xfe50>
  2131a4:	ldr	x17, [x16, #1272]
  2131a8:	add	x16, x16, #0x4f8
  2131ac:	br	x17

00000000002131b0 <strcmp@plt>:
  2131b0:	adrp	x16, 223000 <strcmp@plt+0xfe50>
  2131b4:	ldr	x17, [x16, #1280]
  2131b8:	add	x16, x16, #0x500
  2131bc:	br	x17
