
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//v4l_id_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000210ad0 <_start>:
  210ad0:	mov	x29, #0x0                   	// #0
  210ad4:	mov	x30, #0x0                   	// #0
  210ad8:	mov	x5, x0
  210adc:	ldr	x1, [sp]
  210ae0:	add	x2, sp, #0x8
  210ae4:	mov	x6, sp
  210ae8:	movz	x0, #0x0, lsl #48
  210aec:	movk	x0, #0x0, lsl #32
  210af0:	movk	x0, #0x21, lsl #16
  210af4:	movk	x0, #0xc20
  210af8:	movz	x3, #0x0, lsl #48
  210afc:	movk	x3, #0x0, lsl #32
  210b00:	movk	x3, #0x21, lsl #16
  210b04:	movk	x3, #0xde8
  210b08:	movz	x4, #0x0, lsl #48
  210b0c:	movk	x4, #0x0, lsl #32
  210b10:	movk	x4, #0x21, lsl #16
  210b14:	movk	x4, #0xe68
  210b18:	bl	210eb0 <__libc_start_main@plt>
  210b1c:	bl	210ec0 <abort@plt>

0000000000210b20 <call_weak_fn>:
  210b20:	adrp	x0, 221000 <_DYNAMIC+0x90>
  210b24:	ldr	x0, [x0, #320]
  210b28:	cbz	x0, 210b30 <call_weak_fn+0x10>
  210b2c:	b	210ed0 <__gmon_start__@plt>
  210b30:	ret

0000000000210b34 <deregister_tm_clones>:
  210b34:	adrp	x0, 231000 <_DYNAMIC+0x10090>
  210b38:	add	x0, x0, #0x1b8
  210b3c:	adrp	x1, 231000 <_DYNAMIC+0x10090>
  210b40:	add	x1, x1, #0x1b8
  210b44:	cmp	x0, x1
  210b48:	b.eq	210b7c <deregister_tm_clones+0x48>  // b.none
  210b4c:	stp	x29, x30, [sp, #-32]!
  210b50:	mov	x29, sp
  210b54:	adrp	x0, 200000 <main.options-0x840>
  210b58:	ldr	x0, [x0, #2096]
  210b5c:	str	x0, [sp, #24]
  210b60:	mov	x1, x0
  210b64:	cbz	x1, 210b74 <deregister_tm_clones+0x40>
  210b68:	adrp	x0, 231000 <_DYNAMIC+0x10090>
  210b6c:	add	x0, x0, #0x1b8
  210b70:	blr	x1
  210b74:	ldp	x29, x30, [sp], #32
  210b78:	ret
  210b7c:	ret

0000000000210b80 <register_tm_clones>:
  210b80:	adrp	x0, 231000 <_DYNAMIC+0x10090>
  210b84:	add	x0, x0, #0x1b8
  210b88:	adrp	x1, 231000 <_DYNAMIC+0x10090>
  210b8c:	add	x1, x1, #0x1b8
  210b90:	sub	x0, x0, x1
  210b94:	lsr	x1, x0, #63
  210b98:	add	x0, x1, x0, asr #3
  210b9c:	cmp	xzr, x0, asr #1
  210ba0:	b.eq	210bd8 <register_tm_clones+0x58>  // b.none
  210ba4:	stp	x29, x30, [sp, #-32]!
  210ba8:	mov	x29, sp
  210bac:	asr	x1, x0, #1
  210bb0:	adrp	x0, 200000 <main.options-0x840>
  210bb4:	ldr	x0, [x0, #2104]
  210bb8:	str	x0, [sp, #24]
  210bbc:	mov	x2, x0
  210bc0:	cbz	x2, 210bd0 <register_tm_clones+0x50>
  210bc4:	adrp	x0, 231000 <_DYNAMIC+0x10090>
  210bc8:	add	x0, x0, #0x1b8
  210bcc:	blr	x2
  210bd0:	ldp	x29, x30, [sp], #32
  210bd4:	ret
  210bd8:	ret

0000000000210bdc <__do_global_dtors_aux>:
  210bdc:	adrp	x0, 231000 <_DYNAMIC+0x10090>
  210be0:	ldrb	w0, [x0, #440]
  210be4:	cbnz	w0, 210c08 <__do_global_dtors_aux+0x2c>
  210be8:	stp	x29, x30, [sp, #-16]!
  210bec:	mov	x29, sp
  210bf0:	bl	210b34 <deregister_tm_clones>
  210bf4:	adrp	x0, 231000 <_DYNAMIC+0x10090>
  210bf8:	mov	w1, #0x1                   	// #1
  210bfc:	strb	w1, [x0, #440]
  210c00:	ldp	x29, x30, [sp], #16
  210c04:	ret
  210c08:	ret

0000000000210c0c <frame_dummy>:
  210c0c:	stp	x29, x30, [sp, #-16]!
  210c10:	mov	x29, sp
  210c14:	bl	210b80 <register_tm_clones>
  210c18:	ldp	x29, x30, [sp], #16
  210c1c:	ret

0000000000210c20 <main>:
  210c20:	sub	sp, sp, #0x90
  210c24:	adrp	x2, 200000 <main.options-0x840>
  210c28:	adrp	x3, 200000 <main.options-0x840>
  210c2c:	stp	x29, x30, [sp, #112]
  210c30:	add	x29, sp, #0x70
  210c34:	mov	w8, #0xffffffff            	// #-1
  210c38:	add	x2, x2, #0x98e
  210c3c:	add	x3, x3, #0x840
  210c40:	mov	x4, xzr
  210c44:	str	x19, [sp, #128]
  210c48:	mov	x19, x1
  210c4c:	str	w8, [x29, #28]
  210c50:	bl	210ee0 <getopt_long@plt>
  210c54:	tbnz	w0, #31, 210c80 <main+0x60>
  210c58:	cmp	w0, #0x3f
  210c5c:	b.eq	210d48 <main+0x128>  // b.none
  210c60:	cmp	w0, #0x68
  210c64:	b.ne	210dac <main+0x18c>  // b.any
  210c68:	adrp	x8, 231000 <_DYNAMIC+0x10090>
  210c6c:	ldr	x1, [x8, #448]
  210c70:	adrp	x0, 200000 <main.options-0x840>
  210c74:	add	x0, x0, #0x921
  210c78:	bl	210ef0 <printf@plt>
  210c7c:	b	210d40 <main+0x120>
  210c80:	adrp	x8, 231000 <_DYNAMIC+0x10090>
  210c84:	ldrsw	x8, [x8, #456]
  210c88:	ldr	x0, [x19, x8, lsl #3]
  210c8c:	cbz	x0, 210d50 <main+0x130>
  210c90:	mov	w1, wzr
  210c94:	bl	210f00 <open64@plt>
  210c98:	str	w0, [x29, #28]
  210c9c:	tbnz	w0, #31, 210d58 <main+0x138>
  210ca0:	mov	w1, #0x5600                	// #22016
  210ca4:	add	x2, sp, #0x8
  210ca8:	movk	w1, #0x8068, lsl #16
  210cac:	add	x19, sp, #0x8
  210cb0:	bl	210f10 <ioctl@plt>
  210cb4:	cbnz	w0, 210d40 <main+0x120>
  210cb8:	adrp	x0, 200000 <main.options-0x840>
  210cbc:	add	x0, x0, #0x88e
  210cc0:	bl	210f20 <puts@plt>
  210cc4:	adrp	x0, 200000 <main.options-0x840>
  210cc8:	add	x1, x19, #0x10
  210ccc:	add	x0, x0, #0x8d3
  210cd0:	bl	210ef0 <printf@plt>
  210cd4:	adrp	x0, 200000 <main.options-0x840>
  210cd8:	add	x0, x0, #0x8bd
  210cdc:	bl	210ef0 <printf@plt>
  210ce0:	ldp	w8, w9, [sp, #92]
  210ce4:	cmp	w8, #0x0
  210ce8:	csel	w19, w9, w8, lt  // lt = tstop
  210cec:	mov	w8, #0x1001                	// #4097
  210cf0:	tst	w19, w8
  210cf4:	b.eq	210d04 <main+0xe4>  // b.none
  210cf8:	adrp	x0, 200000 <main.options-0x840>
  210cfc:	add	x0, x0, #0x918
  210d00:	bl	210ef0 <printf@plt>
  210d04:	mov	w8, #0x2002                	// #8194
  210d08:	tst	w19, w8
  210d0c:	b.eq	210d1c <main+0xfc>  // b.none
  210d10:	adrp	x0, 200000 <main.options-0x840>
  210d14:	add	x0, x0, #0x880
  210d18:	bl	210ef0 <printf@plt>
  210d1c:	tbnz	w19, #2, 210d78 <main+0x158>
  210d20:	tbnz	w19, #17, 210d88 <main+0x168>
  210d24:	tbnz	w19, #16, 210d98 <main+0x178>
  210d28:	tbz	w19, #18, 210d38 <main+0x118>
  210d2c:	adrp	x0, 200000 <main.options-0x840>
  210d30:	add	x0, x0, #0x8b6
  210d34:	bl	210ef0 <printf@plt>
  210d38:	mov	w0, #0xa                   	// #10
  210d3c:	bl	210f30 <putchar@plt>
  210d40:	mov	w19, wzr
  210d44:	b	210d5c <main+0x13c>
  210d48:	mov	w19, #0xffffffea            	// #-22
  210d4c:	b	210d5c <main+0x13c>
  210d50:	mov	w19, #0x2                   	// #2
  210d54:	b	210d5c <main+0x13c>
  210d58:	mov	w19, #0x3                   	// #3
  210d5c:	add	x0, x29, #0x1c
  210d60:	bl	210dd0 <closep>
  210d64:	mov	w0, w19
  210d68:	ldr	x19, [sp, #128]
  210d6c:	ldp	x29, x30, [sp, #112]
  210d70:	add	sp, sp, #0x90
  210d74:	ret
  210d78:	adrp	x0, 200000 <main.options-0x840>
  210d7c:	add	x0, x0, #0x909
  210d80:	bl	210ef0 <printf@plt>
  210d84:	tbz	w19, #17, 210d24 <main+0x104>
  210d88:	adrp	x0, 200000 <main.options-0x840>
  210d8c:	add	x0, x0, #0x902
  210d90:	bl	210ef0 <printf@plt>
  210d94:	tbz	w19, #16, 210d28 <main+0x108>
  210d98:	adrp	x0, 200000 <main.options-0x840>
  210d9c:	add	x0, x0, #0x995
  210da0:	bl	210ef0 <printf@plt>
  210da4:	tbnz	w19, #18, 210d2c <main+0x10c>
  210da8:	b	210d38 <main+0x118>
  210dac:	adrp	x1, 200000 <main.options-0x840>
  210db0:	adrp	x2, 200000 <main.options-0x840>
  210db4:	adrp	x4, 200000 <main.options-0x840>
  210db8:	add	x1, x1, #0x97d
  210dbc:	add	x2, x2, #0x8e9
  210dc0:	add	x4, x4, #0x89f
  210dc4:	mov	w0, #0x1                   	// #1
  210dc8:	mov	w3, #0x37                  	// #55
  210dcc:	bl	210f40 <log_assert_failed_unreachable_realm@plt>

0000000000210dd0 <closep>:
  210dd0:	stp	x29, x30, [sp, #-16]!
  210dd4:	ldr	w0, [x0]
  210dd8:	mov	x29, sp
  210ddc:	bl	210f50 <safe_close@plt>
  210de0:	ldp	x29, x30, [sp], #16
  210de4:	ret

0000000000210de8 <__libc_csu_init>:
  210de8:	stp	x29, x30, [sp, #-64]!
  210dec:	mov	x29, sp
  210df0:	stp	x19, x20, [sp, #16]
  210df4:	adrp	x20, 220000 <safe_close@plt+0xf0b0>
  210df8:	add	x20, x20, #0xf70
  210dfc:	stp	x21, x22, [sp, #32]
  210e00:	adrp	x21, 220000 <safe_close@plt+0xf0b0>
  210e04:	add	x21, x21, #0xf68
  210e08:	sub	x20, x20, x21
  210e0c:	mov	w22, w0
  210e10:	stp	x23, x24, [sp, #48]
  210e14:	mov	x23, x1
  210e18:	mov	x24, x2
  210e1c:	bl	210e6c <_init>
  210e20:	cmp	xzr, x20, asr #3
  210e24:	b.eq	210e50 <__libc_csu_init+0x68>  // b.none
  210e28:	asr	x20, x20, #3
  210e2c:	mov	x19, #0x0                   	// #0
  210e30:	ldr	x3, [x21, x19, lsl #3]
  210e34:	mov	x2, x24
  210e38:	add	x19, x19, #0x1
  210e3c:	mov	x1, x23
  210e40:	mov	w0, w22
  210e44:	blr	x3
  210e48:	cmp	x20, x19
  210e4c:	b.ne	210e30 <__libc_csu_init+0x48>  // b.any
  210e50:	ldp	x19, x20, [sp, #16]
  210e54:	ldp	x21, x22, [sp, #32]
  210e58:	ldp	x23, x24, [sp, #48]
  210e5c:	ldp	x29, x30, [sp], #64
  210e60:	ret
  210e64:	nop

0000000000210e68 <__libc_csu_fini>:
  210e68:	ret

Disassembly of section .init:

0000000000210e6c <_init>:
  210e6c:	stp	x29, x30, [sp, #-16]!
  210e70:	mov	x29, sp
  210e74:	bl	210b20 <call_weak_fn>
  210e78:	ldp	x29, x30, [sp], #16
  210e7c:	ret

Disassembly of section .fini:

0000000000210e80 <_fini>:
  210e80:	stp	x29, x30, [sp, #-16]!
  210e84:	mov	x29, sp
  210e88:	ldp	x29, x30, [sp], #16
  210e8c:	ret

Disassembly of section .plt:

0000000000210e90 <__libc_start_main@plt-0x20>:
  210e90:	stp	x16, x30, [sp, #-16]!
  210e94:	adrp	x16, 221000 <_DYNAMIC+0x90>
  210e98:	ldr	x17, [x16, #344]
  210e9c:	add	x16, x16, #0x158
  210ea0:	br	x17
  210ea4:	nop
  210ea8:	nop
  210eac:	nop

0000000000210eb0 <__libc_start_main@plt>:
  210eb0:	adrp	x16, 221000 <_DYNAMIC+0x90>
  210eb4:	ldr	x17, [x16, #352]
  210eb8:	add	x16, x16, #0x160
  210ebc:	br	x17

0000000000210ec0 <abort@plt>:
  210ec0:	adrp	x16, 221000 <_DYNAMIC+0x90>
  210ec4:	ldr	x17, [x16, #360]
  210ec8:	add	x16, x16, #0x168
  210ecc:	br	x17

0000000000210ed0 <__gmon_start__@plt>:
  210ed0:	adrp	x16, 221000 <_DYNAMIC+0x90>
  210ed4:	ldr	x17, [x16, #368]
  210ed8:	add	x16, x16, #0x170
  210edc:	br	x17

0000000000210ee0 <getopt_long@plt>:
  210ee0:	adrp	x16, 221000 <_DYNAMIC+0x90>
  210ee4:	ldr	x17, [x16, #376]
  210ee8:	add	x16, x16, #0x178
  210eec:	br	x17

0000000000210ef0 <printf@plt>:
  210ef0:	adrp	x16, 221000 <_DYNAMIC+0x90>
  210ef4:	ldr	x17, [x16, #384]
  210ef8:	add	x16, x16, #0x180
  210efc:	br	x17

0000000000210f00 <open64@plt>:
  210f00:	adrp	x16, 221000 <_DYNAMIC+0x90>
  210f04:	ldr	x17, [x16, #392]
  210f08:	add	x16, x16, #0x188
  210f0c:	br	x17

0000000000210f10 <ioctl@plt>:
  210f10:	adrp	x16, 221000 <_DYNAMIC+0x90>
  210f14:	ldr	x17, [x16, #400]
  210f18:	add	x16, x16, #0x190
  210f1c:	br	x17

0000000000210f20 <puts@plt>:
  210f20:	adrp	x16, 221000 <_DYNAMIC+0x90>
  210f24:	ldr	x17, [x16, #408]
  210f28:	add	x16, x16, #0x198
  210f2c:	br	x17

0000000000210f30 <putchar@plt>:
  210f30:	adrp	x16, 221000 <_DYNAMIC+0x90>
  210f34:	ldr	x17, [x16, #416]
  210f38:	add	x16, x16, #0x1a0
  210f3c:	br	x17

0000000000210f40 <log_assert_failed_unreachable_realm@plt>:
  210f40:	adrp	x16, 221000 <_DYNAMIC+0x90>
  210f44:	ldr	x17, [x16, #424]
  210f48:	add	x16, x16, #0x1a8
  210f4c:	br	x17

0000000000210f50 <safe_close@plt>:
  210f50:	adrp	x16, 221000 <_DYNAMIC+0x90>
  210f54:	ldr	x17, [x16, #432]
  210f58:	add	x16, x16, #0x1b0
  210f5c:	br	x17
