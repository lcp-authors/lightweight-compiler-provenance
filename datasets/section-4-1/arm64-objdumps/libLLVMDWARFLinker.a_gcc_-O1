In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libLLVMDWARFLinker.a_gcc_-O1:

DWARFLinkerCompileUnit.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm11CompileUnit11getLanguageEv>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	ldrh	w0, [x0, #730]
  14:	cbz	w0, 28 <_ZN4llvm11CompileUnit11getLanguageEv+0x28>
  18:	ldrh	w0, [x19, #730]
  1c:	ldp	x19, x20, [sp, #16]
  20:	ldp	x29, x30, [sp], #112
  24:	ret
  28:	ldr	x20, [x19]
  2c:	mov	w1, #0x1                   	// #1
  30:	mov	x0, x20
  34:	bl	0 <_ZN4llvm9DWARFUnit19extractDIEsIfNeededEb>
  38:	ldr	x0, [x20, #544]
  3c:	ldr	x1, [x20, #552]
  40:	cmp	x0, x1
  44:	b.eq	74 <_ZN4llvm11CompileUnit11getLanguageEv+0x74>  // b.none
  48:	str	x20, [sp, #40]
  4c:	str	x0, [sp, #48]
  50:	add	x8, sp, #0x38
  54:	mov	w1, #0x13                  	// #19
  58:	add	x0, sp, #0x28
  5c:	bl	0 <_ZNK4llvm8DWARFDie4findENS_5dwarf9AttributeE>
  60:	ldrb	w1, [sp, #104]
  64:	mov	x0, #0x0                   	// #0
  68:	cbnz	w1, 80 <_ZN4llvm11CompileUnit11getLanguageEv+0x80>
  6c:	strh	w0, [x19, #730]
  70:	b	18 <_ZN4llvm11CompileUnit11getLanguageEv+0x18>
  74:	mov	x0, #0x0                   	// #0
  78:	mov	x20, #0x0                   	// #0
  7c:	b	48 <_ZN4llvm11CompileUnit11getLanguageEv+0x48>
  80:	add	x0, sp, #0x38
  84:	bl	0 <_ZNK4llvm14DWARFFormValue21getAsUnsignedConstantEv>
  88:	tst	w1, #0xff
  8c:	csel	x0, x0, xzr, ne  // ne = any
  90:	b	6c <_ZN4llvm11CompileUnit11getLanguageEv+0x6c>

0000000000000094 <_ZN4llvm11CompileUnit20markEverythingAsKeptEv>:
  94:	stp	x29, x30, [sp, #-256]!
  98:	mov	x29, sp
  9c:	stp	x19, x20, [sp, #16]
  a0:	stp	x21, x22, [sp, #32]
  a4:	mov	x20, x0
  a8:	mov	w0, #0x1                   	// #1
  ac:	strb	w0, [x20, #729]
  b0:	ldr	x19, [x20, #16]
  b4:	ldr	x22, [x20, #24]
  b8:	cmp	x19, x22
  bc:	b.eq	324 <_ZN4llvm11CompileUnit20markEverythingAsKeptEv+0x290>  // b.none
  c0:	stp	x23, x24, [sp, #48]
  c4:	stp	x25, x26, [sp, #64]
  c8:	stp	x27, x28, [sp, #80]
  cc:	mov	w2, #0x0                   	// #0
  d0:	mov	x23, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  d4:	movk	x23, #0xaaab
  d8:	add	x26, sp, #0xa0
  dc:	add	x21, sp, #0x60
  e0:	mov	w27, #0x2                   	// #2
  e4:	add	x28, sp, #0xb0
  e8:	mov	x25, x19
  ec:	ldrb	w0, [x19, #28]
  f0:	ubfx	x1, x0, #2, #1
  f4:	eor	w1, w1, #0x1
  f8:	bfxil	w0, w1, #0, #1
  fc:	strb	w0, [x19, #28]
 100:	ldr	x3, [x20]
 104:	add	w24, w2, #0x1
 108:	mov	w0, w2
 10c:	ldr	x4, [x3, #544]
 110:	ldr	x1, [x3, #552]
 114:	sub	x1, x1, x4
 118:	asr	x1, x1, #3
 11c:	mul	x1, x1, x23
 120:	cmp	x1, w2, uxtw
 124:	b.ls	15c <_ZN4llvm11CompileUnit20markEverythingAsKeptEv+0xc8>  // b.plast
 128:	add	x0, x0, x0, lsl #1
 12c:	add	x0, x4, x0, lsl #3
 130:	str	x3, [sp, #160]
 134:	str	x0, [sp, #168]
 138:	cbnz	x0, 17c <_ZN4llvm11CompileUnit20markEverythingAsKeptEv+0xe8>
 13c:	adrp	x3, 0 <_ZN4llvm11CompileUnit11getLanguageEv>
 140:	add	x3, x3, #0x0
 144:	mov	w2, #0x3c                  	// #60
 148:	adrp	x1, 0 <_ZN4llvm11CompileUnit11getLanguageEv>
 14c:	add	x1, x1, #0x0
 150:	adrp	x0, 0 <_ZN4llvm11CompileUnit11getLanguageEv>
 154:	add	x0, x0, #0x0
 158:	bl	0 <__assert_fail>
 15c:	adrp	x3, 0 <_ZN4llvm11CompileUnit11getLanguageEv>
 160:	add	x3, x3, #0x0
 164:	mov	w2, #0x1e2                 	// #482
 168:	adrp	x1, 0 <_ZN4llvm11CompileUnit11getLanguageEv>
 16c:	add	x1, x1, #0x0
 170:	adrp	x0, 0 <_ZN4llvm11CompileUnit11getLanguageEv>
 174:	add	x0, x0, #0x0
 178:	bl	0 <__assert_fail>
 17c:	ldr	x0, [x0, #16]
 180:	cbz	x0, 258 <_ZN4llvm11CompileUnit20markEverythingAsKeptEv+0x1c4>
 184:	ldrh	w0, [x0, #4]
 188:	cmp	w0, #0x34
 18c:	b.eq	198 <_ZN4llvm11CompileUnit20markEverythingAsKeptEv+0x104>  // b.none
 190:	cmp	w0, #0x27
 194:	b.ne	258 <_ZN4llvm11CompileUnit20markEverythingAsKeptEv+0x1c4>  // b.any
 198:	strb	wzr, [sp, #200]
 19c:	strb	wzr, [sp, #248]
 1a0:	mov	x8, x21
 1a4:	mov	w1, w27
 1a8:	mov	x0, x26
 1ac:	bl	0 <_ZNK4llvm8DWARFDie4findENS_5dwarf9AttributeE>
 1b0:	ldp	x0, x1, [x21]
 1b4:	stp	x0, x1, [sp, #200]
 1b8:	ldp	x0, x1, [x21, #16]
 1bc:	stp	x0, x1, [sp, #216]
 1c0:	ldp	x0, x1, [x21, #32]
 1c4:	stp	x0, x1, [sp, #232]
 1c8:	ldr	x0, [x21, #48]
 1cc:	str	x0, [sp, #248]
 1d0:	tst	w0, #0xff
 1d4:	b.eq	220 <_ZN4llvm11CompileUnit20markEverythingAsKeptEv+0x18c>  // b.none
 1d8:	mov	x8, x28
 1dc:	add	x0, sp, #0xc8
 1e0:	bl	0 <_ZNK4llvm14DWARFFormValue10getAsBlockEv>
 1e4:	ldrb	w0, [sp, #192]
 1e8:	cbz	w0, 258 <_ZN4llvm11CompileUnit20markEverythingAsKeptEv+0x1c4>
 1ec:	ldr	x0, [x20]
 1f0:	ldrb	w1, [x0, #34]
 1f4:	ldr	x0, [sp, #184]
 1f8:	cmp	x1, x0
 1fc:	b.cs	258 <_ZN4llvm11CompileUnit20markEverythingAsKeptEv+0x1c4>  // b.hs, b.nlast
 200:	ldr	x0, [sp, #176]
 204:	ldrb	w0, [x0]
 208:	cmp	w0, #0x3
 20c:	b.ne	258 <_ZN4llvm11CompileUnit20markEverythingAsKeptEv+0x1c4>  // b.any
 210:	ldrb	w0, [x25, #28]
 214:	orr	w0, w0, #0x2
 218:	strb	w0, [x25, #28]
 21c:	b	258 <_ZN4llvm11CompileUnit20markEverythingAsKeptEv+0x1c4>
 220:	mov	x8, x21
 224:	mov	w1, #0x1c                  	// #28
 228:	mov	x0, x26
 22c:	bl	0 <_ZNK4llvm8DWARFDie4findENS_5dwarf9AttributeE>
 230:	ldp	x0, x1, [x21]
 234:	stp	x0, x1, [sp, #200]
 238:	ldp	x0, x1, [x21, #16]
 23c:	stp	x0, x1, [sp, #216]
 240:	ldp	x0, x1, [x21, #32]
 244:	stp	x0, x1, [sp, #232]
 248:	ldr	x0, [x21, #48]
 24c:	str	x0, [sp, #248]
 250:	tst	w0, #0xff
 254:	b.ne	26c <_ZN4llvm11CompileUnit20markEverythingAsKeptEv+0x1d8>  // b.any
 258:	add	x19, x19, #0x20
 25c:	cmp	x22, x19
 260:	b.eq	318 <_ZN4llvm11CompileUnit20markEverythingAsKeptEv+0x284>  // b.none
 264:	mov	w2, w24
 268:	b	e8 <_ZN4llvm11CompileUnit20markEverythingAsKeptEv+0x54>
 26c:	ldr	w2, [x25, #24]
 270:	cbz	w2, 308 <_ZN4llvm11CompileUnit20markEverythingAsKeptEv+0x274>
 274:	ldr	x0, [x20]
 278:	mov	w1, w2
 27c:	ldr	x3, [x0, #544]
 280:	ldr	x0, [x0, #552]
 284:	sub	x0, x0, x3
 288:	asr	x0, x0, #3
 28c:	mul	x0, x0, x23
 290:	cmp	x0, w2, uxtw
 294:	b.ls	2c4 <_ZN4llvm11CompileUnit20markEverythingAsKeptEv+0x230>  // b.plast
 298:	add	x0, x1, x1, lsl #1
 29c:	adds	x0, x3, x0, lsl #3
 2a0:	b.ne	2e4 <_ZN4llvm11CompileUnit20markEverythingAsKeptEv+0x250>  // b.any
 2a4:	adrp	x3, 0 <_ZN4llvm11CompileUnit11getLanguageEv>
 2a8:	add	x3, x3, #0x0
 2ac:	mov	w2, #0x3c                  	// #60
 2b0:	adrp	x1, 0 <_ZN4llvm11CompileUnit11getLanguageEv>
 2b4:	add	x1, x1, #0x0
 2b8:	adrp	x0, 0 <_ZN4llvm11CompileUnit11getLanguageEv>
 2bc:	add	x0, x0, #0x0
 2c0:	bl	0 <__assert_fail>
 2c4:	adrp	x3, 0 <_ZN4llvm11CompileUnit11getLanguageEv>
 2c8:	add	x3, x3, #0x0
 2cc:	mov	w2, #0x1e2                 	// #482
 2d0:	adrp	x1, 0 <_ZN4llvm11CompileUnit11getLanguageEv>
 2d4:	add	x1, x1, #0x0
 2d8:	adrp	x0, 0 <_ZN4llvm11CompileUnit11getLanguageEv>
 2dc:	add	x0, x0, #0x0
 2e0:	bl	0 <__assert_fail>
 2e4:	ldr	x0, [x0, #16]
 2e8:	cbz	x0, 2f8 <_ZN4llvm11CompileUnit20markEverythingAsKeptEv+0x264>
 2ec:	ldrh	w0, [x0, #4]
 2f0:	cmp	w0, #0x2e
 2f4:	b.eq	258 <_ZN4llvm11CompileUnit20markEverythingAsKeptEv+0x1c4>  // b.none
 2f8:	ldr	x0, [x20, #16]
 2fc:	add	x1, x0, x1, lsl #5
 300:	ldr	w2, [x1, #24]
 304:	cbnz	w2, 274 <_ZN4llvm11CompileUnit20markEverythingAsKeptEv+0x1e0>
 308:	ldrb	w0, [x25, #28]
 30c:	orr	w0, w0, #0x2
 310:	strb	w0, [x25, #28]
 314:	b	258 <_ZN4llvm11CompileUnit20markEverythingAsKeptEv+0x1c4>
 318:	ldp	x23, x24, [sp, #48]
 31c:	ldp	x25, x26, [sp, #64]
 320:	ldp	x27, x28, [sp, #80]
 324:	ldp	x19, x20, [sp, #16]
 328:	ldp	x21, x22, [sp, #32]
 32c:	ldp	x29, x30, [sp], #256
 330:	ret

0000000000000334 <_ZN4llvm11CompileUnit21computeNextUnitOffsetEv>:
 334:	ldr	x1, [x0, #136]
 338:	str	x1, [x0, #144]
 33c:	ldrb	w2, [x0, #120]
 340:	cbz	w2, 354 <_ZN4llvm11CompileUnit21computeNextUnitOffsetEv+0x20>
 344:	add	x1, x1, #0xb
 348:	ldr	w2, [x0, #68]
 34c:	add	x1, x1, x2
 350:	str	x1, [x0, #144]
 354:	ldr	x0, [x0, #144]
 358:	ret

000000000000035c <_ZN4llvm11CompileUnit22fixupForwardReferencesEv>:
 35c:	mov	x1, x0
 360:	ldr	x0, [x0, #168]
 364:	ldr	x4, [x1, #176]
 368:	cmp	x0, x4
 36c:	b.eq	478 <_ZN4llvm11CompileUnit22fixupForwardReferencesEv+0x11c>  // b.none
 370:	stp	x29, x30, [sp, #-16]!
 374:	mov	x29, sp
 378:	mov	w5, #0x1                   	// #1
 37c:	b	3f8 <_ZN4llvm11CompileUnit22fixupForwardReferencesEv+0x9c>
 380:	adrp	x3, 0 <_ZN4llvm11CompileUnit11getLanguageEv>
 384:	add	x3, x3, #0x0
 388:	mov	w2, #0x24                  	// #36
 38c:	adrp	x1, 0 <_ZN4llvm11CompileUnit11getLanguageEv>
 390:	add	x1, x1, #0x0
 394:	adrp	x0, 0 <_ZN4llvm11CompileUnit11getLanguageEv>
 398:	add	x0, x0, #0x0
 39c:	bl	0 <__assert_fail>
 3a0:	adrp	x3, 0 <_ZN4llvm11CompileUnit11getLanguageEv>
 3a4:	add	x3, x3, #0x0
 3a8:	mov	w2, #0x26                  	// #38
 3ac:	adrp	x1, 0 <_ZN4llvm11CompileUnit11getLanguageEv>
 3b0:	add	x1, x1, #0x0
 3b4:	adrp	x0, 0 <_ZN4llvm11CompileUnit11getLanguageEv>
 3b8:	add	x0, x0, #0x0
 3bc:	bl	0 <__assert_fail>
 3c0:	ldr	x2, [x3, #24]
 3c4:	ldr	w2, [x2, #16]
 3c8:	ldr	x3, [x3, #16]
 3cc:	ldr	x3, [x3, #136]
 3d0:	add	x2, x2, x3
 3d4:	cbz	x1, 430 <_ZN4llvm11CompileUnit22fixupForwardReferencesEv+0xd4>
 3d8:	ldr	w3, [x1, #8]
 3dc:	cmp	w3, #0x1
 3e0:	b.ne	450 <_ZN4llvm11CompileUnit22fixupForwardReferencesEv+0xf4>  // b.any
 3e4:	str	w5, [x1, #8]
 3e8:	str	x2, [x1, #16]
 3ec:	add	x0, x0, #0x20
 3f0:	cmp	x4, x0
 3f4:	b.eq	470 <_ZN4llvm11CompileUnit22fixupForwardReferencesEv+0x114>  // b.none
 3f8:	mov	x3, x0
 3fc:	ldr	x2, [x0, #8]
 400:	ldr	x1, [x0]
 404:	cbz	x2, 3c0 <_ZN4llvm11CompileUnit22fixupForwardReferencesEv+0x64>
 408:	ldr	w2, [x2, #76]
 40c:	cbz	w2, 3c0 <_ZN4llvm11CompileUnit22fixupForwardReferencesEv+0x64>
 410:	mov	w2, w2
 414:	cbz	x1, 380 <_ZN4llvm11CompileUnit22fixupForwardReferencesEv+0x24>
 418:	ldr	w3, [x1, #8]
 41c:	cmp	w3, #0x1
 420:	b.ne	3a0 <_ZN4llvm11CompileUnit22fixupForwardReferencesEv+0x44>  // b.any
 424:	str	w5, [x1, #8]
 428:	str	x2, [x1, #16]
 42c:	b	3ec <_ZN4llvm11CompileUnit22fixupForwardReferencesEv+0x90>
 430:	adrp	x3, 0 <_ZN4llvm11CompileUnit11getLanguageEv>
 434:	add	x3, x3, #0x0
 438:	mov	w2, #0x24                  	// #36
 43c:	adrp	x1, 0 <_ZN4llvm11CompileUnit11getLanguageEv>
 440:	add	x1, x1, #0x0
 444:	adrp	x0, 0 <_ZN4llvm11CompileUnit11getLanguageEv>
 448:	add	x0, x0, #0x0
 44c:	bl	0 <__assert_fail>
 450:	adrp	x3, 0 <_ZN4llvm11CompileUnit11getLanguageEv>
 454:	add	x3, x3, #0x0
 458:	mov	w2, #0x26                  	// #38
 45c:	adrp	x1, 0 <_ZN4llvm11CompileUnit11getLanguageEv>
 460:	add	x1, x1, #0x0
 464:	adrp	x0, 0 <_ZN4llvm11CompileUnit11getLanguageEv>
 468:	add	x0, x0, #0x0
 46c:	bl	0 <__assert_fail>
 470:	ldp	x29, x30, [sp], #16
 474:	ret
 478:	ret

000000000000047c <_ZN4llvm11CompileUnit20noteForwardReferenceEPNS_3DIEEPKS0_PNS_11DeclContextENS_13PatchLocationE>:
 47c:	stp	x29, x30, [sp, #-48]!
 480:	mov	x29, sp
 484:	str	x1, [sp, #40]
 488:	str	x2, [sp, #32]
 48c:	str	x3, [sp, #24]
 490:	str	x4, [sp, #16]
 494:	add	x4, sp, #0x10
 498:	add	x3, sp, #0x18
 49c:	add	x2, sp, #0x20
 4a0:	add	x1, sp, #0x28
 4a4:	add	x0, x0, #0xa8
 4a8:	bl	0 <_ZN4llvm11CompileUnit11getLanguageEv>
 4ac:	ldp	x29, x30, [sp], #48
 4b0:	ret

00000000000004b4 <_ZN4llvm11CompileUnit21noteLocationAttributeENS_13PatchLocationEl>:
 4b4:	stp	x29, x30, [sp, #-32]!
 4b8:	mov	x29, sp
 4bc:	str	x1, [sp, #24]
 4c0:	str	x2, [sp, #16]
 4c4:	add	x2, sp, #0x10
 4c8:	add	x1, sp, #0x18
 4cc:	add	x0, x0, #0x248
 4d0:	bl	0 <_ZN4llvm11CompileUnit11getLanguageEv>
 4d4:	ldp	x29, x30, [sp], #32
 4d8:	ret

00000000000004dc <_ZN4llvm11CompileUnit18addObjCAcceleratorEPKNS_3DIEENS_23DwarfStringPoolEntryRefEb>:
 4dc:	stp	x29, x30, [sp, #-48]!
 4e0:	mov	x29, sp
 4e4:	str	x1, [sp, #40]
 4e8:	str	x2, [sp, #32]
 4ec:	strb	w3, [sp, #31]
 4f0:	add	x3, sp, #0x1f
 4f4:	add	x2, sp, #0x28
 4f8:	add	x1, sp, #0x20
 4fc:	add	x0, x0, #0x2a8
 500:	bl	0 <_ZN4llvm11CompileUnit11getLanguageEv>
 504:	ldp	x29, x30, [sp], #48
 508:	ret

000000000000050c <_ZN4llvm11CompileUnit18addNameAcceleratorEPKNS_3DIEENS_23DwarfStringPoolEntryRefEb>:
 50c:	stp	x29, x30, [sp, #-48]!
 510:	mov	x29, sp
 514:	str	x1, [sp, #40]
 518:	str	x2, [sp, #32]
 51c:	strb	w3, [sp, #31]
 520:	add	x3, sp, #0x1f
 524:	add	x2, sp, #0x28
 528:	add	x1, sp, #0x20
 52c:	add	x0, x0, #0x260
 530:	bl	0 <_ZN4llvm11CompileUnit11getLanguageEv>
 534:	ldp	x29, x30, [sp], #48
 538:	ret

000000000000053c <_ZN4llvm11CompileUnit18addTypeAcceleratorEPKNS_3DIEENS_23DwarfStringPoolEntryRefEbj>:
 53c:	stp	x29, x30, [sp, #-48]!
 540:	mov	x29, sp
 544:	str	x1, [sp, #40]
 548:	str	x2, [sp, #32]
 54c:	strb	w3, [sp, #31]
 550:	str	w4, [sp, #24]
 554:	add	x4, sp, #0x1f
 558:	add	x3, sp, #0x18
 55c:	add	x2, sp, #0x28
 560:	add	x1, sp, #0x20
 564:	add	x0, x0, #0x278
 568:	bl	0 <_ZN4llvm11CompileUnit11getLanguageEv>
 56c:	ldp	x29, x30, [sp], #48
 570:	ret

0000000000000574 <_ZN4llvm11CompileUnit18noteRangeAttributeERKNS_3DIEENS_13PatchLocationE>:
 574:	stp	x29, x30, [sp, #-32]!
 578:	mov	x29, sp
 57c:	str	x2, [sp, #24]
 580:	ldrh	w1, [x1, #28]
 584:	cmp	w1, #0x11
 588:	b.ne	5a0 <_ZN4llvm11CompileUnit18noteRangeAttributeERKNS_3DIEENS_13PatchLocationE+0x2c>  // b.any
 58c:	ldrb	w1, [x0, #576]
 590:	cbz	w1, 5dc <_ZN4llvm11CompileUnit18noteRangeAttributeERKNS_3DIEENS_13PatchLocationE+0x68>
 594:	ldr	x1, [sp, #24]
 598:	str	x1, [x0, #568]
 59c:	b	5c4 <_ZN4llvm11CompileUnit18noteRangeAttributeERKNS_3DIEENS_13PatchLocationE+0x50>
 5a0:	ldr	x1, [x0, #552]
 5a4:	ldr	x2, [x0, #560]
 5a8:	cmp	x1, x2
 5ac:	b.eq	5cc <_ZN4llvm11CompileUnit18noteRangeAttributeERKNS_3DIEENS_13PatchLocationE+0x58>  // b.none
 5b0:	ldr	x2, [sp, #24]
 5b4:	str	x2, [x1]
 5b8:	ldr	x1, [x0, #552]
 5bc:	add	x1, x1, #0x8
 5c0:	str	x1, [x0, #552]
 5c4:	ldp	x29, x30, [sp], #32
 5c8:	ret
 5cc:	add	x2, sp, #0x18
 5d0:	add	x0, x0, #0x220
 5d4:	bl	0 <_ZN4llvm11CompileUnit11getLanguageEv>
 5d8:	b	5c4 <_ZN4llvm11CompileUnit18noteRangeAttributeERKNS_3DIEENS_13PatchLocationE+0x50>
 5dc:	ldr	x1, [sp, #24]
 5e0:	str	x1, [x0, #568]
 5e4:	mov	w1, #0x1                   	// #1
 5e8:	strb	w1, [x0, #576]
 5ec:	b	5c4 <_ZN4llvm11CompileUnit18noteRangeAttributeERKNS_3DIEENS_13PatchLocationE+0x50>

00000000000005f0 <_ZN4llvm11CompileUnit23addNamespaceAcceleratorEPKNS_3DIEENS_23DwarfStringPoolEntryRefE>:
 5f0:	stp	x29, x30, [sp, #-32]!
 5f4:	mov	x29, sp
 5f8:	str	x1, [sp, #24]
 5fc:	str	x2, [sp, #16]
 600:	ldr	x1, [x0, #664]
 604:	ldr	x2, [x0, #672]
 608:	cmp	x1, x2
 60c:	b.eq	638 <_ZN4llvm11CompileUnit23addNamespaceAcceleratorEPKNS_3DIEENS_23DwarfStringPoolEntryRefE+0x48>  // b.none
 610:	ldr	x2, [sp, #24]
 614:	ldr	x3, [sp, #16]
 618:	str	x3, [x1]
 61c:	str	x2, [x1, #8]
 620:	strb	wzr, [x1, #20]
 624:	ldr	x1, [x0, #664]
 628:	add	x1, x1, #0x18
 62c:	str	x1, [x0, #664]
 630:	ldp	x29, x30, [sp], #32
 634:	ret
 638:	add	x3, sp, #0x18
 63c:	add	x2, sp, #0x10
 640:	add	x0, x0, #0x290
 644:	bl	0 <_ZN4llvm11CompileUnit11getLanguageEv>
 648:	b	630 <_ZN4llvm11CompileUnit23addNamespaceAcceleratorEPKNS_3DIEENS_23DwarfStringPoolEntryRefE+0x40>

000000000000064c <_ZN4llvm11CompileUnit13addLabelLowPcEml>:
 64c:	stp	x29, x30, [sp, #-48]!
 650:	mov	x29, sp
 654:	stp	x19, x20, [sp, #16]
 658:	str	x21, [sp, #32]
 65c:	mov	x19, x0
 660:	mov	x20, x1
 664:	mov	x21, x2
 668:	ldrb	w0, [x0, #520]
 66c:	and	w4, w0, #0x1
 670:	tbz	w0, #0, 6bc <_ZN4llvm11CompileUnit13addLabelLowPcEml+0x70>
 674:	add	x1, x19, #0x210
 678:	mov	w0, #0x1                   	// #1
 67c:	cmn	x20, #0x3
 680:	b.hi	758 <_ZN4llvm11CompileUnit13addLabelLowPcEml+0x10c>  // b.pmore
 684:	sub	w0, w0, #0x1
 688:	mov	w3, #0x25                  	// #37
 68c:	mul	w3, w20, w3
 690:	and	w6, w3, w0
 694:	and	w3, w3, w0
 698:	lsl	x3, x3, #4
 69c:	add	x5, x1, x3
 6a0:	ldr	x2, [x1, x3]
 6a4:	cmp	x20, x2
 6a8:	b.ne	778 <_ZN4llvm11CompileUnit13addLabelLowPcEml+0x12c>  // b.any
 6ac:	ldp	x19, x20, [sp, #16]
 6b0:	ldr	x21, [sp, #32]
 6b4:	ldp	x29, x30, [sp], #48
 6b8:	ret
 6bc:	ldr	x1, [x19, #528]
 6c0:	ldr	w0, [x19, #536]
 6c4:	cbnz	w0, 67c <_ZN4llvm11CompileUnit13addLabelLowPcEml+0x30>
 6c8:	ldr	x0, [x19, #512]
 6cc:	add	x0, x0, #0x1
 6d0:	str	x0, [x19, #512]
 6d4:	ldr	w2, [x19, #520]
 6d8:	lsr	w2, w2, #1
 6dc:	add	w2, w2, #0x1
 6e0:	mov	x3, #0x0                   	// #0
 6e4:	ldr	w1, [x19, #536]
 6e8:	add	x0, x19, #0x200
 6ec:	add	w4, w1, w1, lsl #1
 6f0:	cmp	w4, w2, lsl #2
 6f4:	b.ls	7ec <_ZN4llvm11CompileUnit13addLabelLowPcEml+0x1a0>  // b.plast
 6f8:	ldr	w4, [x19, #524]
 6fc:	add	w2, w2, w4
 700:	sub	w2, w1, w2
 704:	cmp	w2, w1, lsr #3
 708:	b.ls	8d4 <_ZN4llvm11CompileUnit13addLabelLowPcEml+0x288>  // b.plast
 70c:	cbz	x3, 85c <_ZN4llvm11CompileUnit13addLabelLowPcEml+0x210>
 710:	ldr	w0, [x19, #520]
 714:	lsr	w0, w0, #1
 718:	adds	w0, w0, #0x1
 71c:	b.mi	99c <_ZN4llvm11CompileUnit13addLabelLowPcEml+0x350>  // b.first
 720:	add	x1, x19, #0x200
 724:	ldr	w2, [x19, #520]
 728:	bfi	w2, w0, #1, #31
 72c:	str	w2, [x19, #520]
 730:	ldr	x0, [x3]
 734:	cmn	x0, #0x1
 738:	b.eq	74c <_ZN4llvm11CompileUnit13addLabelLowPcEml+0x100>  // b.none
 73c:	mov	x19, x1
 740:	ldr	w1, [x1, #12]
 744:	sub	w1, w1, #0x1
 748:	str	w1, [x19, #12]
 74c:	str	x20, [x3]
 750:	str	x21, [x3, #8]
 754:	b	6ac <_ZN4llvm11CompileUnit13addLabelLowPcEml+0x60>
 758:	adrp	x3, 0 <_ZN4llvm11CompileUnit11getLanguageEv>
 75c:	add	x3, x3, #0x0
 760:	mov	w2, #0x250                 	// #592
 764:	adrp	x1, 0 <_ZN4llvm11CompileUnit11getLanguageEv>
 768:	add	x1, x1, #0x0
 76c:	adrp	x0, 0 <_ZN4llvm11CompileUnit11getLanguageEv>
 770:	add	x0, x0, #0x0
 774:	bl	0 <__assert_fail>
 778:	mov	w7, #0x1                   	// #1
 77c:	mov	x3, #0x0                   	// #0
 780:	cmn	x2, #0x1
 784:	b.ne	7b4 <_ZN4llvm11CompileUnit13addLabelLowPcEml+0x168>  // b.any
 788:	cmp	x3, #0x0
 78c:	csel	x3, x3, x5, ne  // ne = any
 790:	ldr	x0, [x19, #512]
 794:	add	x0, x0, #0x1
 798:	str	x0, [x19, #512]
 79c:	ldr	w2, [x19, #520]
 7a0:	lsr	w2, w2, #1
 7a4:	add	w2, w2, #0x1
 7a8:	mov	w1, #0x1                   	// #1
 7ac:	cbnz	w4, 6e8 <_ZN4llvm11CompileUnit13addLabelLowPcEml+0x9c>
 7b0:	b	6e4 <_ZN4llvm11CompileUnit13addLabelLowPcEml+0x98>
 7b4:	cmp	x3, #0x0
 7b8:	ccmn	x2, #0x2, #0x0, eq  // eq = none
 7bc:	csel	x3, x3, x5, ne  // ne = any
 7c0:	add	w8, w7, #0x1
 7c4:	add	w7, w6, w7
 7c8:	and	w6, w0, w7
 7cc:	and	w7, w0, w7
 7d0:	lsl	x2, x7, #4
 7d4:	add	x5, x1, x2
 7d8:	ldr	x2, [x1, x2]
 7dc:	cmp	x20, x2
 7e0:	b.eq	6ac <_ZN4llvm11CompileUnit13addLabelLowPcEml+0x60>  // b.none
 7e4:	mov	w7, w8
 7e8:	b	780 <_ZN4llvm11CompileUnit13addLabelLowPcEml+0x134>
 7ec:	lsl	w1, w1, #1
 7f0:	bl	0 <_ZN4llvm11CompileUnit11getLanguageEv>
 7f4:	ldrb	w0, [x19, #520]
 7f8:	tbz	w0, #0, 850 <_ZN4llvm11CompileUnit13addLabelLowPcEml+0x204>
 7fc:	add	x2, x19, #0x210
 800:	mov	w1, #0x1                   	// #1
 804:	cmn	x20, #0x3
 808:	b.hi	87c <_ZN4llvm11CompileUnit13addLabelLowPcEml+0x230>  // b.pmore
 80c:	sub	w1, w1, #0x1
 810:	mov	w0, #0x25                  	// #37
 814:	mul	w0, w20, w0
 818:	and	w4, w0, w1
 81c:	and	w0, w0, w1
 820:	lsl	x0, x0, #4
 824:	add	x3, x2, x0
 828:	ldr	x0, [x2, x0]
 82c:	cmp	x20, x0
 830:	b.eq	710 <_ZN4llvm11CompileUnit13addLabelLowPcEml+0xc4>  // b.none
 834:	mov	w5, #0x1                   	// #1
 838:	mov	x6, #0x0                   	// #0
 83c:	cmn	x0, #0x1
 840:	b.ne	89c <_ZN4llvm11CompileUnit13addLabelLowPcEml+0x250>  // b.any
 844:	cbz	x6, 70c <_ZN4llvm11CompileUnit13addLabelLowPcEml+0xc0>
 848:	mov	x3, x6
 84c:	b	710 <_ZN4llvm11CompileUnit13addLabelLowPcEml+0xc4>
 850:	ldr	x2, [x19, #528]
 854:	ldr	w1, [x19, #536]
 858:	cbnz	w1, 804 <_ZN4llvm11CompileUnit13addLabelLowPcEml+0x1b8>
 85c:	adrp	x3, 0 <_ZN4llvm11CompileUnit11getLanguageEv>
 860:	add	x3, x3, #0x0
 864:	mov	w2, #0x22f                 	// #559
 868:	adrp	x1, 0 <_ZN4llvm11CompileUnit11getLanguageEv>
 86c:	add	x1, x1, #0x0
 870:	adrp	x0, 0 <_ZN4llvm11CompileUnit11getLanguageEv>
 874:	add	x0, x0, #0x0
 878:	bl	0 <__assert_fail>
 87c:	adrp	x3, 0 <_ZN4llvm11CompileUnit11getLanguageEv>
 880:	add	x3, x3, #0x0
 884:	mov	w2, #0x250                 	// #592
 888:	adrp	x1, 0 <_ZN4llvm11CompileUnit11getLanguageEv>
 88c:	add	x1, x1, #0x0
 890:	adrp	x0, 0 <_ZN4llvm11CompileUnit11getLanguageEv>
 894:	add	x0, x0, #0x0
 898:	bl	0 <__assert_fail>
 89c:	cmp	x6, #0x0
 8a0:	ccmn	x0, #0x2, #0x0, eq  // eq = none
 8a4:	csel	x6, x6, x3, ne  // ne = any
 8a8:	add	w7, w5, #0x1
 8ac:	add	w3, w5, w4
 8b0:	and	w4, w1, w3
 8b4:	and	w3, w1, w3
 8b8:	lsl	x0, x3, #4
 8bc:	add	x3, x2, x3, lsl #4
 8c0:	ldr	x0, [x2, x0]
 8c4:	cmp	x20, x0
 8c8:	b.eq	710 <_ZN4llvm11CompileUnit13addLabelLowPcEml+0xc4>  // b.none
 8cc:	mov	w5, w7
 8d0:	b	83c <_ZN4llvm11CompileUnit13addLabelLowPcEml+0x1f0>
 8d4:	bl	0 <_ZN4llvm11CompileUnit11getLanguageEv>
 8d8:	ldrb	w0, [x19, #520]
 8dc:	tbz	w0, #0, 934 <_ZN4llvm11CompileUnit13addLabelLowPcEml+0x2e8>
 8e0:	add	x2, x19, #0x210
 8e4:	mov	w1, #0x1                   	// #1
 8e8:	cmn	x20, #0x3
 8ec:	b.hi	944 <_ZN4llvm11CompileUnit13addLabelLowPcEml+0x2f8>  // b.pmore
 8f0:	sub	w1, w1, #0x1
 8f4:	mov	w0, #0x25                  	// #37
 8f8:	mul	w0, w20, w0
 8fc:	and	w4, w0, w1
 900:	and	w0, w0, w1
 904:	lsl	x0, x0, #4
 908:	add	x3, x2, x0
 90c:	ldr	x0, [x2, x0]
 910:	cmp	x20, x0
 914:	b.eq	710 <_ZN4llvm11CompileUnit13addLabelLowPcEml+0xc4>  // b.none
 918:	mov	w5, #0x1                   	// #1
 91c:	mov	x6, #0x0                   	// #0
 920:	cmn	x0, #0x1
 924:	b.ne	964 <_ZN4llvm11CompileUnit13addLabelLowPcEml+0x318>  // b.any
 928:	cbz	x6, 70c <_ZN4llvm11CompileUnit13addLabelLowPcEml+0xc0>
 92c:	mov	x3, x6
 930:	b	710 <_ZN4llvm11CompileUnit13addLabelLowPcEml+0xc4>
 934:	ldr	x2, [x19, #528]
 938:	ldr	w1, [x19, #536]
 93c:	cbnz	w1, 8e8 <_ZN4llvm11CompileUnit13addLabelLowPcEml+0x29c>
 940:	b	85c <_ZN4llvm11CompileUnit13addLabelLowPcEml+0x210>
 944:	adrp	x3, 0 <_ZN4llvm11CompileUnit11getLanguageEv>
 948:	add	x3, x3, #0x0
 94c:	mov	w2, #0x250                 	// #592
 950:	adrp	x1, 0 <_ZN4llvm11CompileUnit11getLanguageEv>
 954:	add	x1, x1, #0x0
 958:	adrp	x0, 0 <_ZN4llvm11CompileUnit11getLanguageEv>
 95c:	add	x0, x0, #0x0
 960:	bl	0 <__assert_fail>
 964:	cmp	x6, #0x0
 968:	ccmn	x0, #0x2, #0x0, eq  // eq = none
 96c:	csel	x6, x6, x3, ne  // ne = any
 970:	add	w7, w5, #0x1
 974:	add	w3, w4, w5
 978:	and	w4, w1, w3
 97c:	and	w3, w1, w3
 980:	lsl	x0, x3, #4
 984:	add	x3, x2, x3, lsl #4
 988:	ldr	x0, [x2, x0]
 98c:	cmp	x20, x0
 990:	b.eq	710 <_ZN4llvm11CompileUnit13addLabelLowPcEml+0xc4>  // b.none
 994:	mov	w5, w7
 998:	b	920 <_ZN4llvm11CompileUnit13addLabelLowPcEml+0x2d4>
 99c:	adrp	x3, 0 <_ZN4llvm11CompileUnit11getLanguageEv>
 9a0:	add	x3, x3, #0x0
 9a4:	mov	w2, #0x441                 	// #1089
 9a8:	adrp	x1, 0 <_ZN4llvm11CompileUnit11getLanguageEv>
 9ac:	add	x1, x1, #0x0
 9b0:	adrp	x0, 0 <_ZN4llvm11CompileUnit11getLanguageEv>
 9b4:	add	x0, x0, #0x0
 9b8:	bl	0 <__assert_fail>

00000000000009bc <_ZN4llvm11CompileUnit16addFunctionRangeEmml>:
 9bc:	stp	x29, x30, [sp, #-160]!
 9c0:	mov	x29, sp
 9c4:	stp	x19, x20, [sp, #16]
 9c8:	stp	x21, x22, [sp, #32]
 9cc:	mov	x21, x0
 9d0:	mov	x19, x1
 9d4:	mov	x20, x2
 9d8:	mov	x22, x3
 9dc:	cmp	x2, x1
 9e0:	b.ne	a1c <_ZN4llvm11CompileUnit16addFunctionRangeEmml+0x60>  // b.any
 9e4:	add	x19, x22, x19
 9e8:	ldr	x1, [x21, #152]
 9ec:	cmp	x19, x1
 9f0:	csel	x19, x19, x1, ls  // ls = plast
 9f4:	str	x19, [x21, #152]
 9f8:	add	x2, x22, x20
 9fc:	ldr	x3, [x21, #160]
 a00:	cmp	x2, x3
 a04:	csel	x2, x2, x3, cs  // cs = hs, nlast
 a08:	str	x2, [x21, #160]
 a0c:	ldp	x19, x20, [sp, #16]
 a10:	ldp	x21, x22, [sp, #32]
 a14:	ldp	x29, x30, [sp], #160
 a18:	ret
 a1c:	add	x0, x0, #0x130
 a20:	ldr	w1, [x0, #192]
 a24:	cbnz	w1, b4c <_ZN4llvm11CompileUnit16addFunctionRangeEmml+0x190>
 a28:	ldr	w2, [x21, #500]
 a2c:	cmp	w2, #0x8
 a30:	b.eq	adc <_ZN4llvm11CompileUnit16addFunctionRangeEmml+0x120>  // b.none
 a34:	b.hi	aa8 <_ZN4llvm11CompileUnit16addFunctionRangeEmml+0xec>  // b.pmore
 a38:	cbz	w2, acc <_ZN4llvm11CompileUnit16addFunctionRangeEmml+0x110>
 a3c:	add	x3, x21, #0x138
 a40:	ldr	x4, [x3]
 a44:	cmp	x19, x4
 a48:	b.cc	a60 <_ZN4llvm11CompileUnit16addFunctionRangeEmml+0xa4>  // b.lo, b.ul, b.last
 a4c:	add	w1, w1, #0x1
 a50:	add	x3, x3, #0x10
 a54:	cmp	w2, w1
 a58:	b.ne	a40 <_ZN4llvm11CompileUnit16addFunctionRangeEmml+0x84>  // b.any
 a5c:	mov	w1, w2
 a60:	str	w1, [sp, #72]
 a64:	mov	x5, x22
 a68:	mov	x4, x20
 a6c:	mov	x3, x19
 a70:	add	x1, sp, #0x48
 a74:	bl	0 <_ZN4llvm11CompileUnit11getLanguageEv>
 a78:	str	w0, [x21, #500]
 a7c:	b	9e4 <_ZN4llvm11CompileUnit16addFunctionRangeEmml+0x28>
 a80:	adrp	x3, 0 <_ZN4llvm11CompileUnit11getLanguageEv>
 a84:	add	x3, x3, #0x0
 a88:	mov	w2, #0x244                 	// #580
 a8c:	adrp	x1, 0 <_ZN4llvm11CompileUnit11getLanguageEv>
 a90:	add	x1, x1, #0x0
 a94:	adrp	x0, 0 <_ZN4llvm11CompileUnit11getLanguageEv>
 a98:	add	x0, x0, #0x0
 a9c:	bl	0 <__assert_fail>
 aa0:	mov	w1, w4
 aa4:	b	b2c <_ZN4llvm11CompileUnit16addFunctionRangeEmml+0x170>
 aa8:	str	x23, [sp, #48]
 aac:	adrp	x3, 0 <_ZN4llvm11CompileUnit11getLanguageEv>
 ab0:	add	x3, x3, #0x0
 ab4:	mov	w2, #0x244                 	// #580
 ab8:	adrp	x1, 0 <_ZN4llvm11CompileUnit11getLanguageEv>
 abc:	add	x1, x1, #0x0
 ac0:	adrp	x0, 0 <_ZN4llvm11CompileUnit11getLanguageEv>
 ac4:	add	x0, x0, #0x0
 ac8:	bl	0 <__assert_fail>
 acc:	mov	w1, w2
 ad0:	b	a60 <_ZN4llvm11CompileUnit16addFunctionRangeEmml+0xa4>
 ad4:	ldr	x23, [sp, #48]
 ad8:	b	9e4 <_ZN4llvm11CompileUnit16addFunctionRangeEmml+0x28>
 adc:	str	x23, [sp, #48]
 ae0:	str	x0, [sp, #72]
 ae4:	add	x2, sp, #0x60
 ae8:	str	x2, [sp, #80]
 aec:	str	wzr, [sp, #88]
 af0:	mov	w2, #0x4                   	// #4
 af4:	str	w2, [sp, #92]
 af8:	ldr	w4, [x21, #500]
 afc:	cmp	w4, #0x8
 b00:	b.hi	a80 <_ZN4llvm11CompileUnit16addFunctionRangeEmml+0xc4>  // b.pmore
 b04:	cbz	w4, aa0 <_ZN4llvm11CompileUnit16addFunctionRangeEmml+0xe4>
 b08:	add	x2, x21, #0x138
 b0c:	ldr	x3, [x2]
 b10:	cmp	x19, x3
 b14:	b.cc	b2c <_ZN4llvm11CompileUnit16addFunctionRangeEmml+0x170>  // b.lo, b.ul, b.last
 b18:	add	w1, w1, #0x1
 b1c:	add	x2, x2, #0x10
 b20:	cmp	w4, w1
 b24:	b.ne	b0c <_ZN4llvm11CompileUnit16addFunctionRangeEmml+0x150>  // b.any
 b28:	mov	w1, w4
 b2c:	mov	x2, #0x0                   	// #0
 b30:	bfxil	x2, x4, #0, #32
 b34:	bfi	x2, x1, #32, #32
 b38:	str	x0, [sp, #96]
 b3c:	str	x2, [sp, #104]
 b40:	mov	w0, #0x1                   	// #1
 b44:	str	w0, [sp, #88]
 b48:	b	b74 <_ZN4llvm11CompileUnit16addFunctionRangeEmml+0x1b8>
 b4c:	str	x23, [sp, #48]
 b50:	str	x0, [sp, #72]
 b54:	add	x0, sp, #0x48
 b58:	add	x1, x0, #0x18
 b5c:	str	x1, [sp, #80]
 b60:	str	wzr, [sp, #88]
 b64:	mov	w1, #0x4                   	// #4
 b68:	str	w1, [sp, #92]
 b6c:	mov	x1, x19
 b70:	bl	0 <_ZN4llvm11CompileUnit11getLanguageEv>
 b74:	add	x23, sp, #0x48
 b78:	mov	x3, x22
 b7c:	mov	x2, x20
 b80:	mov	x1, x19
 b84:	mov	x0, x23
 b88:	bl	0 <_ZN4llvm11CompileUnit11getLanguageEv>
 b8c:	ldr	x0, [sp, #80]
 b90:	add	x23, x23, #0x18
 b94:	cmp	x0, x23
 b98:	b.eq	ad4 <_ZN4llvm11CompileUnit16addFunctionRangeEmml+0x118>  // b.none
 b9c:	bl	0 <free>
 ba0:	ldr	x23, [sp, #48]
 ba4:	b	9e4 <_ZN4llvm11CompileUnit16addFunctionRangeEmml+0x28>

Disassembly of section .text._ZN4llvm11safe_mallocEm:

0000000000000000 <_ZN4llvm11safe_mallocEm>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	bl	0 <malloc>
  14:	mov	x19, x0
  18:	cbz	x0, 2c <_ZN4llvm11safe_mallocEm+0x2c>
  1c:	mov	x0, x19
  20:	ldp	x19, x20, [sp, #16]
  24:	ldp	x29, x30, [sp], #32
  28:	ret
  2c:	cbnz	x20, 40 <_ZN4llvm11safe_mallocEm+0x40>
  30:	mov	x0, #0x1                   	// #1
  34:	bl	0 <_ZN4llvm11safe_mallocEm>
  38:	mov	x19, x0
  3c:	b	1c <_ZN4llvm11safe_mallocEm+0x1c>
  40:	mov	w1, #0x1                   	// #1
  44:	adrp	x0, 0 <_ZN4llvm11safe_mallocEm>
  48:	add	x0, x0, #0x0
  4c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  50:	b	1c <_ZN4llvm11safe_mallocEm+0x1c>

Disassembly of section .text._ZNSt6vectorISt5tupleIJPN4llvm3DIEEPKNS1_11CompileUnitEPNS1_11DeclContextENS1_13PatchLocationEEESaISA_EE12emplace_backIJRS3_RS6_RS8_RS9_EEEvDpOT_:

0000000000000000 <_ZNSt6vectorISt5tupleIJPN4llvm3DIEEPKNS1_11CompileUnitEPNS1_11DeclContextENS1_13PatchLocationEEESaISA_EE12emplace_backIJRS3_RS6_RS8_RS9_EEEvDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x23, x24, [sp, #48]
  10:	stp	x25, x26, [sp, #64]
  14:	stp	x27, x28, [sp, #80]
  18:	mov	x20, x0
  1c:	mov	x24, x1
  20:	mov	x25, x2
  24:	mov	x26, x3
  28:	mov	x27, x4
  2c:	ldr	x19, [x0, #8]
  30:	ldr	x0, [x0, #16]
  34:	cmp	x19, x0
  38:	b.eq	80 <_ZNSt6vectorISt5tupleIJPN4llvm3DIEEPKNS1_11CompileUnitEPNS1_11DeclContextENS1_13PatchLocationEEESaISA_EE12emplace_backIJRS3_RS6_RS8_RS9_EEEvDpOT_+0x80>  // b.none
  3c:	ldr	x0, [x4]
  40:	str	x0, [x19]
  44:	ldr	x0, [x3]
  48:	str	x0, [x19, #8]
  4c:	ldr	x0, [x2]
  50:	str	x0, [x19, #16]
  54:	ldr	x0, [x1]
  58:	str	x0, [x19, #24]
  5c:	ldr	x0, [x20, #8]
  60:	add	x0, x0, #0x20
  64:	str	x0, [x20, #8]
  68:	ldp	x19, x20, [sp, #16]
  6c:	ldp	x23, x24, [sp, #48]
  70:	ldp	x25, x26, [sp, #64]
  74:	ldp	x27, x28, [sp, #80]
  78:	ldp	x29, x30, [sp], #96
  7c:	ret
  80:	stp	x21, x22, [sp, #32]
  84:	ldr	x23, [x20]
  88:	sub	x28, x19, x23
  8c:	asr	x1, x28, #5
  90:	mov	x0, #0x3ffffffffffffff     	// #288230376151711743
  94:	cmp	x0, x28, asr #5
  98:	b.eq	160 <_ZNSt6vectorISt5tupleIJPN4llvm3DIEEPKNS1_11CompileUnitEPNS1_11DeclContextENS1_13PatchLocationEEESaISA_EE12emplace_backIJRS3_RS6_RS8_RS9_EEEvDpOT_+0x160>  // b.none
  9c:	cmp	x1, #0x0
  a0:	csinc	x0, x1, xzr, ne  // ne = any
  a4:	adds	x0, x0, x1
  a8:	b.cs	16c <_ZNSt6vectorISt5tupleIJPN4llvm3DIEEPKNS1_11CompileUnitEPNS1_11DeclContextENS1_13PatchLocationEEESaISA_EE12emplace_backIJRS3_RS6_RS8_RS9_EEEvDpOT_+0x16c>  // b.hs, b.nlast
  ac:	mov	x22, #0x3ffffffffffffff     	// #288230376151711743
  b0:	cmp	x0, x22
  b4:	csel	x22, x0, x22, ls  // ls = plast
  b8:	mov	x21, #0x0                   	// #0
  bc:	cbz	x0, cc <_ZNSt6vectorISt5tupleIJPN4llvm3DIEEPKNS1_11CompileUnitEPNS1_11DeclContextENS1_13PatchLocationEEESaISA_EE12emplace_backIJRS3_RS6_RS8_RS9_EEEvDpOT_+0xcc>
  c0:	lsl	x0, x22, #5
  c4:	bl	0 <_Znwm>
  c8:	mov	x21, x0
  cc:	add	x0, x21, x28
  d0:	ldr	x1, [x27]
  d4:	str	x1, [x21, x28]
  d8:	ldr	x1, [x26]
  dc:	str	x1, [x0, #8]
  e0:	ldr	x1, [x25]
  e4:	str	x1, [x0, #16]
  e8:	ldr	x1, [x24]
  ec:	str	x1, [x0, #24]
  f0:	cmp	x19, x23
  f4:	b.eq	174 <_ZNSt6vectorISt5tupleIJPN4llvm3DIEEPKNS1_11CompileUnitEPNS1_11DeclContextENS1_13PatchLocationEEESaISA_EE12emplace_backIJRS3_RS6_RS8_RS9_EEEvDpOT_+0x174>  // b.none
  f8:	mov	x2, x21
  fc:	mov	x1, x23
 100:	ldr	x0, [x1]
 104:	str	x0, [x2]
 108:	ldr	x0, [x1, #8]
 10c:	str	x0, [x2, #8]
 110:	ldr	x0, [x1, #16]
 114:	str	x0, [x2, #16]
 118:	ldr	x0, [x1, #24]
 11c:	str	x0, [x2, #24]
 120:	add	x1, x1, #0x20
 124:	add	x2, x2, #0x20
 128:	cmp	x19, x1
 12c:	b.ne	100 <_ZNSt6vectorISt5tupleIJPN4llvm3DIEEPKNS1_11CompileUnitEPNS1_11DeclContextENS1_13PatchLocationEEESaISA_EE12emplace_backIJRS3_RS6_RS8_RS9_EEEvDpOT_+0x100>  // b.any
 130:	sub	x19, x19, x23
 134:	add	x19, x21, x19
 138:	add	x19, x19, #0x20
 13c:	cbz	x23, 148 <_ZNSt6vectorISt5tupleIJPN4llvm3DIEEPKNS1_11CompileUnitEPNS1_11DeclContextENS1_13PatchLocationEEESaISA_EE12emplace_backIJRS3_RS6_RS8_RS9_EEEvDpOT_+0x148>
 140:	mov	x0, x23
 144:	bl	0 <_ZdlPv>
 148:	str	x21, [x20]
 14c:	str	x19, [x20, #8]
 150:	add	x21, x21, x22, lsl #5
 154:	str	x21, [x20, #16]
 158:	ldp	x21, x22, [sp, #32]
 15c:	b	68 <_ZNSt6vectorISt5tupleIJPN4llvm3DIEEPKNS1_11CompileUnitEPNS1_11DeclContextENS1_13PatchLocationEEESaISA_EE12emplace_backIJRS3_RS6_RS8_RS9_EEEvDpOT_+0x68>
 160:	adrp	x0, 0 <_ZNSt6vectorISt5tupleIJPN4llvm3DIEEPKNS1_11CompileUnitEPNS1_11DeclContextENS1_13PatchLocationEEESaISA_EE12emplace_backIJRS3_RS6_RS8_RS9_EEEvDpOT_>
 164:	add	x0, x0, #0x0
 168:	bl	0 <_ZSt20__throw_length_errorPKc>
 16c:	mov	x22, #0x3ffffffffffffff     	// #288230376151711743
 170:	b	c0 <_ZNSt6vectorISt5tupleIJPN4llvm3DIEEPKNS1_11CompileUnitEPNS1_11DeclContextENS1_13PatchLocationEEESaISA_EE12emplace_backIJRS3_RS6_RS8_RS9_EEEvDpOT_+0xc0>
 174:	mov	x19, x21
 178:	b	138 <_ZNSt6vectorISt5tupleIJPN4llvm3DIEEPKNS1_11CompileUnitEPNS1_11DeclContextENS1_13PatchLocationEEESaISA_EE12emplace_backIJRS3_RS6_RS8_RS9_EEEvDpOT_+0x138>

Disassembly of section .text._ZNSt6vectorISt4pairIN4llvm13PatchLocationElESaIS3_EE12emplace_backIJRS2_RlEEEvDpOT_:

0000000000000000 <_ZNSt6vectorISt4pairIN4llvm13PatchLocationElESaIS3_EE12emplace_backIJRS2_RlEEEvDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x23, x24, [sp, #48]
  10:	stp	x25, x26, [sp, #64]
  14:	mov	x19, x0
  18:	mov	x25, x1
  1c:	mov	x24, x2
  20:	ldr	x20, [x0, #8]
  24:	ldr	x0, [x0, #16]
  28:	cmp	x20, x0
  2c:	b.eq	60 <_ZNSt6vectorISt4pairIN4llvm13PatchLocationElESaIS3_EE12emplace_backIJRS2_RlEEEvDpOT_+0x60>  // b.none
  30:	ldr	x0, [x1]
  34:	str	x0, [x20]
  38:	ldr	x0, [x2]
  3c:	str	x0, [x20, #8]
  40:	ldr	x0, [x19, #8]
  44:	add	x0, x0, #0x10
  48:	str	x0, [x19, #8]
  4c:	ldp	x19, x20, [sp, #16]
  50:	ldp	x23, x24, [sp, #48]
  54:	ldp	x25, x26, [sp, #64]
  58:	ldp	x29, x30, [sp], #80
  5c:	ret
  60:	stp	x21, x22, [sp, #32]
  64:	ldr	x23, [x19]
  68:	sub	x26, x20, x23
  6c:	asr	x1, x26, #4
  70:	mov	x0, #0x7ffffffffffffff     	// #576460752303423487
  74:	cmp	x0, x26, asr #4
  78:	b.eq	110 <_ZNSt6vectorISt4pairIN4llvm13PatchLocationElESaIS3_EE12emplace_backIJRS2_RlEEEvDpOT_+0x110>  // b.none
  7c:	cmp	x1, #0x0
  80:	csinc	x0, x1, xzr, ne  // ne = any
  84:	adds	x0, x0, x1
  88:	b.cs	11c <_ZNSt6vectorISt4pairIN4llvm13PatchLocationElESaIS3_EE12emplace_backIJRS2_RlEEEvDpOT_+0x11c>  // b.hs, b.nlast
  8c:	mov	x22, #0x7ffffffffffffff     	// #576460752303423487
  90:	cmp	x0, x22
  94:	csel	x22, x0, x22, ls  // ls = plast
  98:	mov	x21, #0x0                   	// #0
  9c:	cbz	x0, ac <_ZNSt6vectorISt4pairIN4llvm13PatchLocationElESaIS3_EE12emplace_backIJRS2_RlEEEvDpOT_+0xac>
  a0:	lsl	x0, x22, #4
  a4:	bl	0 <_Znwm>
  a8:	mov	x21, x0
  ac:	add	x0, x21, x26
  b0:	ldr	x1, [x25]
  b4:	str	x1, [x21, x26]
  b8:	ldr	x1, [x24]
  bc:	str	x1, [x0, #8]
  c0:	cmp	x20, x23
  c4:	b.eq	124 <_ZNSt6vectorISt4pairIN4llvm13PatchLocationElESaIS3_EE12emplace_backIJRS2_RlEEEvDpOT_+0x124>  // b.none
  c8:	mov	x2, x21
  cc:	mov	x1, x23
  d0:	ldp	x4, x5, [x1], #16
  d4:	stp	x4, x5, [x2], #16
  d8:	cmp	x20, x1
  dc:	b.ne	d0 <_ZNSt6vectorISt4pairIN4llvm13PatchLocationElESaIS3_EE12emplace_backIJRS2_RlEEEvDpOT_+0xd0>  // b.any
  e0:	sub	x20, x20, x23
  e4:	add	x20, x21, x20
  e8:	add	x20, x20, #0x10
  ec:	cbz	x23, f8 <_ZNSt6vectorISt4pairIN4llvm13PatchLocationElESaIS3_EE12emplace_backIJRS2_RlEEEvDpOT_+0xf8>
  f0:	mov	x0, x23
  f4:	bl	0 <_ZdlPv>
  f8:	str	x21, [x19]
  fc:	str	x20, [x19, #8]
 100:	add	x21, x21, x22, lsl #4
 104:	str	x21, [x19, #16]
 108:	ldp	x21, x22, [sp, #32]
 10c:	b	4c <_ZNSt6vectorISt4pairIN4llvm13PatchLocationElESaIS3_EE12emplace_backIJRS2_RlEEEvDpOT_+0x4c>
 110:	adrp	x0, 0 <_ZNSt6vectorISt4pairIN4llvm13PatchLocationElESaIS3_EE12emplace_backIJRS2_RlEEEvDpOT_>
 114:	add	x0, x0, #0x0
 118:	bl	0 <_ZSt20__throw_length_errorPKc>
 11c:	mov	x22, #0x7ffffffffffffff     	// #576460752303423487
 120:	b	a0 <_ZNSt6vectorISt4pairIN4llvm13PatchLocationElESaIS3_EE12emplace_backIJRS2_RlEEEvDpOT_+0xa0>
 124:	mov	x20, x21
 128:	b	e8 <_ZNSt6vectorISt4pairIN4llvm13PatchLocationElESaIS3_EE12emplace_backIJRS2_RlEEEvDpOT_+0xe8>

Disassembly of section .text._ZNSt6vectorIN4llvm11CompileUnit9AccelInfoESaIS2_EE12emplace_backIJRNS0_23DwarfStringPoolEntryRefERPKNS0_3DIEERbEEEvDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm11CompileUnit9AccelInfoESaIS2_EE12emplace_backIJRNS0_23DwarfStringPoolEntryRefERPKNS0_3DIEERbEEEvDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x23, x24, [sp, #48]
  10:	stp	x25, x26, [sp, #64]
  14:	mov	x20, x0
  18:	mov	x24, x1
  1c:	mov	x26, x2
  20:	mov	x25, x3
  24:	ldr	x19, [x0, #8]
  28:	ldr	x0, [x0, #16]
  2c:	cmp	x19, x0
  30:	b.eq	6c <_ZNSt6vectorIN4llvm11CompileUnit9AccelInfoESaIS2_EE12emplace_backIJRNS0_23DwarfStringPoolEntryRefERPKNS0_3DIEERbEEEvDpOT_+0x6c>  // b.none
  34:	ldr	x2, [x1]
  38:	ldr	x1, [x26]
  3c:	ldrb	w0, [x3]
  40:	str	x2, [x19]
  44:	str	x1, [x19, #8]
  48:	strb	w0, [x19, #20]
  4c:	ldr	x0, [x20, #8]
  50:	add	x0, x0, #0x18
  54:	str	x0, [x20, #8]
  58:	ldp	x19, x20, [sp, #16]
  5c:	ldp	x23, x24, [sp, #48]
  60:	ldp	x25, x26, [sp, #64]
  64:	ldp	x29, x30, [sp], #96
  68:	ret
  6c:	stp	x21, x22, [sp, #32]
  70:	str	x27, [sp, #80]
  74:	ldr	x23, [x20]
  78:	sub	x27, x19, x23
  7c:	asr	x0, x27, #3
  80:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  84:	movk	x1, #0xaaab
  88:	mul	x0, x0, x1
  8c:	mov	x1, #0x5555555555555555    	// #6148914691236517205
  90:	movk	x1, #0x555, lsl #48
  94:	cmp	x0, x1
  98:	b.eq	180 <_ZNSt6vectorIN4llvm11CompileUnit9AccelInfoESaIS2_EE12emplace_backIJRNS0_23DwarfStringPoolEntryRefERPKNS0_3DIEERbEEEvDpOT_+0x180>  // b.none
  9c:	cmp	x0, #0x0
  a0:	csinc	x1, x0, xzr, ne  // ne = any
  a4:	adds	x0, x1, x0
  a8:	b.cs	18c <_ZNSt6vectorIN4llvm11CompileUnit9AccelInfoESaIS2_EE12emplace_backIJRNS0_23DwarfStringPoolEntryRefERPKNS0_3DIEERbEEEvDpOT_+0x18c>  // b.hs, b.nlast
  ac:	mov	x21, #0x5555555555555555    	// #6148914691236517205
  b0:	movk	x21, #0x555, lsl #48
  b4:	cmp	x0, x21
  b8:	csel	x21, x0, x21, ls  // ls = plast
  bc:	mov	x22, #0x0                   	// #0
  c0:	cbz	x0, d4 <_ZNSt6vectorIN4llvm11CompileUnit9AccelInfoESaIS2_EE12emplace_backIJRNS0_23DwarfStringPoolEntryRefERPKNS0_3DIEERbEEEvDpOT_+0xd4>
  c4:	add	x0, x21, x21, lsl #1
  c8:	lsl	x0, x0, #3
  cc:	bl	0 <_Znwm>
  d0:	mov	x22, x0
  d4:	add	x0, x22, x27
  d8:	ldr	x2, [x26]
  dc:	ldrb	w1, [x25]
  e0:	ldr	x3, [x24]
  e4:	str	x3, [x22, x27]
  e8:	str	x2, [x0, #8]
  ec:	strb	w1, [x0, #20]
  f0:	cmp	x19, x23
  f4:	b.eq	198 <_ZNSt6vectorIN4llvm11CompileUnit9AccelInfoESaIS2_EE12emplace_backIJRNS0_23DwarfStringPoolEntryRefERPKNS0_3DIEERbEEEvDpOT_+0x198>  // b.none
  f8:	mov	x1, x22
  fc:	mov	x0, x23
 100:	ldp	x2, x3, [x0]
 104:	stp	x2, x3, [x1]
 108:	ldr	x2, [x0, #16]
 10c:	str	x2, [x1, #16]
 110:	add	x0, x0, #0x18
 114:	add	x1, x1, #0x18
 118:	cmp	x19, x0
 11c:	b.ne	100 <_ZNSt6vectorIN4llvm11CompileUnit9AccelInfoESaIS2_EE12emplace_backIJRNS0_23DwarfStringPoolEntryRefERPKNS0_3DIEERbEEEvDpOT_+0x100>  // b.any
 120:	sub	x1, x19, #0x18
 124:	sub	x1, x1, x23
 128:	lsr	x1, x1, #3
 12c:	mov	x0, #0xaaab                	// #43691
 130:	movk	x0, #0xaaaa, lsl #16
 134:	movk	x0, #0xaaaa, lsl #32
 138:	movk	x0, #0xaaa, lsl #48
 13c:	mul	x1, x1, x0
 140:	and	x1, x1, #0x1fffffffffffffff
 144:	add	x1, x1, #0x1
 148:	add	x1, x1, x1, lsl #1
 14c:	add	x19, x22, x1, lsl #3
 150:	add	x19, x19, #0x18
 154:	cbz	x23, 160 <_ZNSt6vectorIN4llvm11CompileUnit9AccelInfoESaIS2_EE12emplace_backIJRNS0_23DwarfStringPoolEntryRefERPKNS0_3DIEERbEEEvDpOT_+0x160>
 158:	mov	x0, x23
 15c:	bl	0 <_ZdlPv>
 160:	str	x22, [x20]
 164:	str	x19, [x20, #8]
 168:	add	x21, x21, x21, lsl #1
 16c:	add	x22, x22, x21, lsl #3
 170:	str	x22, [x20, #16]
 174:	ldp	x21, x22, [sp, #32]
 178:	ldr	x27, [sp, #80]
 17c:	b	58 <_ZNSt6vectorIN4llvm11CompileUnit9AccelInfoESaIS2_EE12emplace_backIJRNS0_23DwarfStringPoolEntryRefERPKNS0_3DIEERbEEEvDpOT_+0x58>
 180:	adrp	x0, 0 <_ZNSt6vectorIN4llvm11CompileUnit9AccelInfoESaIS2_EE12emplace_backIJRNS0_23DwarfStringPoolEntryRefERPKNS0_3DIEERbEEEvDpOT_>
 184:	add	x0, x0, #0x0
 188:	bl	0 <_ZSt20__throw_length_errorPKc>
 18c:	mov	x21, #0x5555555555555555    	// #6148914691236517205
 190:	movk	x21, #0x555, lsl #48
 194:	b	c4 <_ZNSt6vectorIN4llvm11CompileUnit9AccelInfoESaIS2_EE12emplace_backIJRNS0_23DwarfStringPoolEntryRefERPKNS0_3DIEERbEEEvDpOT_+0xc4>
 198:	mov	x19, x22
 19c:	b	150 <_ZNSt6vectorIN4llvm11CompileUnit9AccelInfoESaIS2_EE12emplace_backIJRNS0_23DwarfStringPoolEntryRefERPKNS0_3DIEERbEEEvDpOT_+0x150>

Disassembly of section .text._ZNSt6vectorIN4llvm11CompileUnit9AccelInfoESaIS2_EE12emplace_backIJRNS0_23DwarfStringPoolEntryRefERPKNS0_3DIEERjRbEEEvDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm11CompileUnit9AccelInfoESaIS2_EE12emplace_backIJRNS0_23DwarfStringPoolEntryRefERPKNS0_3DIEERjRbEEEvDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x23, x24, [sp, #48]
  10:	stp	x25, x26, [sp, #64]
  14:	stp	x27, x28, [sp, #80]
  18:	mov	x20, x0
  1c:	mov	x24, x1
  20:	mov	x26, x2
  24:	mov	x25, x3
  28:	mov	x27, x4
  2c:	ldr	x19, [x0, #8]
  30:	ldr	x0, [x0, #16]
  34:	cmp	x19, x0
  38:	b.eq	84 <_ZNSt6vectorIN4llvm11CompileUnit9AccelInfoESaIS2_EE12emplace_backIJRNS0_23DwarfStringPoolEntryRefERPKNS0_3DIEERjRbEEEvDpOT_+0x84>  // b.none
  3c:	ldr	x3, [x1]
  40:	ldr	x2, [x2]
  44:	ldr	w1, [x25]
  48:	ldrb	w0, [x4]
  4c:	str	x3, [x19]
  50:	str	x2, [x19, #8]
  54:	str	w1, [x19, #16]
  58:	strb	wzr, [x19, #20]
  5c:	strb	w0, [x19, #21]
  60:	ldr	x0, [x20, #8]
  64:	add	x0, x0, #0x18
  68:	str	x0, [x20, #8]
  6c:	ldp	x19, x20, [sp, #16]
  70:	ldp	x23, x24, [sp, #48]
  74:	ldp	x25, x26, [sp, #64]
  78:	ldp	x27, x28, [sp, #80]
  7c:	ldp	x29, x30, [sp], #96
  80:	ret
  84:	stp	x21, x22, [sp, #32]
  88:	ldr	x23, [x20]
  8c:	sub	x28, x19, x23
  90:	asr	x0, x28, #3
  94:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  98:	movk	x1, #0xaaab
  9c:	mul	x0, x0, x1
  a0:	mov	x1, #0x5555555555555555    	// #6148914691236517205
  a4:	movk	x1, #0x555, lsl #48
  a8:	cmp	x0, x1
  ac:	b.eq	19c <_ZNSt6vectorIN4llvm11CompileUnit9AccelInfoESaIS2_EE12emplace_backIJRNS0_23DwarfStringPoolEntryRefERPKNS0_3DIEERjRbEEEvDpOT_+0x19c>  // b.none
  b0:	cmp	x0, #0x0
  b4:	csinc	x1, x0, xzr, ne  // ne = any
  b8:	adds	x0, x1, x0
  bc:	b.cs	1a8 <_ZNSt6vectorIN4llvm11CompileUnit9AccelInfoESaIS2_EE12emplace_backIJRNS0_23DwarfStringPoolEntryRefERPKNS0_3DIEERjRbEEEvDpOT_+0x1a8>  // b.hs, b.nlast
  c0:	mov	x21, #0x5555555555555555    	// #6148914691236517205
  c4:	movk	x21, #0x555, lsl #48
  c8:	cmp	x0, x21
  cc:	csel	x21, x0, x21, ls  // ls = plast
  d0:	mov	x22, #0x0                   	// #0
  d4:	cbz	x0, e8 <_ZNSt6vectorIN4llvm11CompileUnit9AccelInfoESaIS2_EE12emplace_backIJRNS0_23DwarfStringPoolEntryRefERPKNS0_3DIEERjRbEEEvDpOT_+0xe8>
  d8:	add	x0, x21, x21, lsl #1
  dc:	lsl	x0, x0, #3
  e0:	bl	0 <_Znwm>
  e4:	mov	x22, x0
  e8:	add	x0, x22, x28
  ec:	ldr	x3, [x26]
  f0:	ldr	w2, [x25]
  f4:	ldrb	w1, [x27]
  f8:	ldr	x4, [x24]
  fc:	str	x4, [x22, x28]
 100:	str	x3, [x0, #8]
 104:	str	w2, [x0, #16]
 108:	strb	wzr, [x0, #20]
 10c:	strb	w1, [x0, #21]
 110:	cmp	x19, x23
 114:	b.eq	1b4 <_ZNSt6vectorIN4llvm11CompileUnit9AccelInfoESaIS2_EE12emplace_backIJRNS0_23DwarfStringPoolEntryRefERPKNS0_3DIEERjRbEEEvDpOT_+0x1b4>  // b.none
 118:	mov	x1, x22
 11c:	mov	x0, x23
 120:	ldp	x2, x3, [x0]
 124:	stp	x2, x3, [x1]
 128:	ldr	x2, [x0, #16]
 12c:	str	x2, [x1, #16]
 130:	add	x0, x0, #0x18
 134:	add	x1, x1, #0x18
 138:	cmp	x19, x0
 13c:	b.ne	120 <_ZNSt6vectorIN4llvm11CompileUnit9AccelInfoESaIS2_EE12emplace_backIJRNS0_23DwarfStringPoolEntryRefERPKNS0_3DIEERjRbEEEvDpOT_+0x120>  // b.any
 140:	sub	x1, x19, #0x18
 144:	sub	x1, x1, x23
 148:	lsr	x1, x1, #3
 14c:	mov	x0, #0xaaab                	// #43691
 150:	movk	x0, #0xaaaa, lsl #16
 154:	movk	x0, #0xaaaa, lsl #32
 158:	movk	x0, #0xaaa, lsl #48
 15c:	mul	x1, x1, x0
 160:	and	x1, x1, #0x1fffffffffffffff
 164:	add	x1, x1, #0x1
 168:	add	x1, x1, x1, lsl #1
 16c:	add	x19, x22, x1, lsl #3
 170:	add	x19, x19, #0x18
 174:	cbz	x23, 180 <_ZNSt6vectorIN4llvm11CompileUnit9AccelInfoESaIS2_EE12emplace_backIJRNS0_23DwarfStringPoolEntryRefERPKNS0_3DIEERjRbEEEvDpOT_+0x180>
 178:	mov	x0, x23
 17c:	bl	0 <_ZdlPv>
 180:	str	x22, [x20]
 184:	str	x19, [x20, #8]
 188:	add	x21, x21, x21, lsl #1
 18c:	add	x22, x22, x21, lsl #3
 190:	str	x22, [x20, #16]
 194:	ldp	x21, x22, [sp, #32]
 198:	b	6c <_ZNSt6vectorIN4llvm11CompileUnit9AccelInfoESaIS2_EE12emplace_backIJRNS0_23DwarfStringPoolEntryRefERPKNS0_3DIEERjRbEEEvDpOT_+0x6c>
 19c:	adrp	x0, 0 <_ZNSt6vectorIN4llvm11CompileUnit9AccelInfoESaIS2_EE12emplace_backIJRNS0_23DwarfStringPoolEntryRefERPKNS0_3DIEERjRbEEEvDpOT_>
 1a0:	add	x0, x0, #0x0
 1a4:	bl	0 <_ZSt20__throw_length_errorPKc>
 1a8:	mov	x21, #0x5555555555555555    	// #6148914691236517205
 1ac:	movk	x21, #0x555, lsl #48
 1b0:	b	d8 <_ZNSt6vectorIN4llvm11CompileUnit9AccelInfoESaIS2_EE12emplace_backIJRNS0_23DwarfStringPoolEntryRefERPKNS0_3DIEERjRbEEEvDpOT_+0xd8>
 1b4:	mov	x19, x22
 1b8:	b	170 <_ZNSt6vectorIN4llvm11CompileUnit9AccelInfoESaIS2_EE12emplace_backIJRNS0_23DwarfStringPoolEntryRefERPKNS0_3DIEERjRbEEEvDpOT_+0x170>

Disassembly of section .text._ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml:

0000000000000000 <_ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w6, [x1]
   c:	cmp	w6, w2
  10:	ccmp	w2, #0x8, #0x2, ls  // ls = plast
  14:	b.hi	fc <_ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml+0xfc>  // b.pmore
  18:	mov	x9, x0
  1c:	cmp	x4, x3
  20:	b.ls	11c <_ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml+0x11c>  // b.plast
  24:	cbz	w6, 3c <_ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml+0x3c>
  28:	sub	w0, w6, #0x1
  2c:	add	x0, x9, x0, lsl #4
  30:	ldr	x0, [x0, #8]
  34:	cmp	x0, x3
  38:	b.hi	13c <_ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml+0x13c>  // b.pmore
  3c:	cmp	w6, w2
  40:	b.eq	328 <_ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml+0x328>  // b.none
  44:	ubfiz	x0, x6, #4, #32
  48:	add	x7, x9, x0
  4c:	ldr	x7, [x7, #8]
  50:	cmp	x7, x3
  54:	b.ls	15c <_ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml+0x15c>  // b.plast
  58:	ldr	x0, [x9, x0]
  5c:	cmp	x0, x4
  60:	b.cc	17c <_ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml+0x17c>  // b.lo, b.ul, b.last
  64:	cbnz	w6, 19c <_ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml+0x19c>
  68:	mov	w8, w6
  6c:	add	x13, x9, w6, uxtw #3
  70:	ldr	x0, [x13, #128]
  74:	cmp	x0, x5
  78:	b.eq	2bc <_ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml+0x2bc>  // b.none
  7c:	cmp	w2, #0x8
  80:	b.eq	320 <_ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml+0x320>  // b.none
  84:	sub	w1, w2, w6
  88:	cmn	w6, #0x1
  8c:	b.eq	2d8 <_ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml+0x2d8>  // b.none
  90:	add	w0, w2, #0x1
  94:	cmp	w0, #0x8
  98:	b.hi	2f8 <_ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml+0x2f8>  // b.pmore
  9c:	cbz	w1, e0 <_ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml+0xe0>
  a0:	sub	w1, w2, #0x1
  a4:	ubfiz	x7, x1, #4, #32
  a8:	add	x11, x9, x7
  ac:	ldr	x12, [x9, x7]
  b0:	ubfiz	x7, x2, #4, #32
  b4:	add	x10, x9, x7
  b8:	str	x12, [x9, x7]
  bc:	ldr	x7, [x11, #8]
  c0:	str	x7, [x10, #8]
  c4:	add	x7, x9, w1, uxtw #3
  c8:	ldr	x7, [x7, #128]
  cc:	add	x2, x9, w2, uxtw #3
  d0:	str	x7, [x2, #128]
  d4:	mov	w2, w1
  d8:	cmp	w1, w6
  dc:	b.ne	a0 <_ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml+0xa0>  // b.any
  e0:	lsl	x1, x8, #4
  e4:	add	x2, x9, x1
  e8:	str	x3, [x9, x1]
  ec:	str	x4, [x2, #8]
  f0:	str	x5, [x13, #128]
  f4:	ldp	x29, x30, [sp], #16
  f8:	ret
  fc:	adrp	x3, 0 <_ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml>
 100:	add	x3, x3, #0x0
 104:	mov	w2, #0x275                 	// #629
 108:	adrp	x1, 0 <_ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml>
 10c:	add	x1, x1, #0x0
 110:	adrp	x0, 0 <_ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml>
 114:	add	x0, x0, #0x0
 118:	bl	0 <__assert_fail>
 11c:	adrp	x3, 0 <_ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml>
 120:	add	x3, x3, #0x0
 124:	mov	w2, #0x276                 	// #630
 128:	adrp	x1, 0 <_ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml>
 12c:	add	x1, x1, #0x0
 130:	adrp	x0, 0 <_ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml>
 134:	add	x0, x0, #0x0
 138:	bl	0 <__assert_fail>
 13c:	adrp	x3, 0 <_ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml>
 140:	add	x3, x3, #0x0
 144:	mov	w2, #0x279                 	// #633
 148:	adrp	x1, 0 <_ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml>
 14c:	add	x1, x1, #0x0
 150:	adrp	x0, 0 <_ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml>
 154:	add	x0, x0, #0x0
 158:	bl	0 <__assert_fail>
 15c:	adrp	x3, 0 <_ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml>
 160:	add	x3, x3, #0x0
 164:	mov	w2, #0x27a                 	// #634
 168:	adrp	x1, 0 <_ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml>
 16c:	add	x1, x1, #0x0
 170:	adrp	x0, 0 <_ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml>
 174:	add	x0, x0, #0x0
 178:	bl	0 <__assert_fail>
 17c:	adrp	x3, 0 <_ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml>
 180:	add	x3, x3, #0x0
 184:	mov	w2, #0x27b                 	// #635
 188:	adrp	x1, 0 <_ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml>
 18c:	add	x1, x1, #0x0
 190:	adrp	x0, 0 <_ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml>
 194:	add	x0, x0, #0x0
 198:	bl	0 <__assert_fail>
 19c:	sub	w0, w6, #0x1
 1a0:	add	x7, x9, w0, uxtw #3
 1a4:	ldr	x7, [x7, #128]
 1a8:	cmp	x7, x5
 1ac:	b.eq	1c4 <_ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml+0x1c4>  // b.none
 1b0:	cmp	w6, #0x8
 1b4:	b.eq	318 <_ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml+0x318>  // b.none
 1b8:	cmp	w6, w2
 1bc:	b.ne	68 <_ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml+0x68>  // b.any
 1c0:	b	32c <_ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml+0x32c>
 1c4:	ubfiz	x7, x0, #4, #32
 1c8:	add	x7, x9, x7
 1cc:	ldr	x8, [x7, #8]
 1d0:	cmp	x8, x3
 1d4:	b.ne	1b0 <_ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml+0x1b0>  // b.any
 1d8:	str	w0, [x1]
 1dc:	cmp	w6, w2
 1e0:	b.eq	208 <_ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml+0x208>  // b.none
 1e4:	add	x0, x9, w6, uxtw #3
 1e8:	ldr	x0, [x0, #128]
 1ec:	cmp	x0, x5
 1f0:	b.ne	208 <_ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml+0x208>  // b.any
 1f4:	ubfiz	x0, x6, #4, #32
 1f8:	add	x1, x9, x0
 1fc:	ldr	x0, [x9, x0]
 200:	cmp	x0, x4
 204:	b.eq	214 <_ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml+0x214>  // b.none
 208:	str	x4, [x7, #8]
 20c:	mov	w0, w2
 210:	b	f4 <_ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml+0xf4>
 214:	ldr	x0, [x1, #8]
 218:	str	x0, [x7, #8]
 21c:	adds	w6, w6, #0x1
 220:	b.cs	27c <_ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml+0x27c>  // b.hs, b.nlast
 224:	sub	w0, w2, #0x1
 228:	cmp	w0, #0x8
 22c:	b.hi	29c <_ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml+0x29c>  // b.pmore
 230:	cmp	w2, w6
 234:	b.eq	f4 <_ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml+0xf4>  // b.none
 238:	ubfiz	x1, x6, #4, #32
 23c:	add	x5, x9, x1
 240:	ldr	x7, [x9, x1]
 244:	sub	w1, w6, #0x1
 248:	lsl	x3, x1, #4
 24c:	add	x4, x9, x3
 250:	str	x7, [x9, x3]
 254:	ldr	x3, [x5, #8]
 258:	str	x3, [x4, #8]
 25c:	add	x3, x9, w6, uxtw #3
 260:	ldr	x3, [x3, #128]
 264:	add	x1, x1, #0x10
 268:	str	x3, [x9, x1, lsl #3]
 26c:	add	w6, w6, #0x1
 270:	cmp	w2, w6
 274:	b.ne	238 <_ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml+0x238>  // b.any
 278:	b	f4 <_ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml+0xf4>
 27c:	adrp	x3, 0 <_ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml>
 280:	add	x3, x3, #0x0
 284:	mov	w2, #0xf8                  	// #248
 288:	adrp	x1, 0 <_ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml>
 28c:	add	x1, x1, #0x0
 290:	adrp	x0, 0 <_ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml>
 294:	add	x0, x0, #0x0
 298:	bl	0 <__assert_fail>
 29c:	adrp	x3, 0 <_ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml>
 2a0:	add	x3, x3, #0x0
 2a4:	mov	w2, #0xec                  	// #236
 2a8:	adrp	x1, 0 <_ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml>
 2ac:	add	x1, x1, #0x0
 2b0:	adrp	x0, 0 <_ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml>
 2b4:	add	x0, x0, #0x0
 2b8:	bl	0 <__assert_fail>
 2bc:	lsl	x0, x8, #4
 2c0:	ldr	x1, [x9, x0]
 2c4:	cmp	x1, x4
 2c8:	b.ne	7c <_ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml+0x7c>  // b.any
 2cc:	str	x3, [x9, x0]
 2d0:	mov	w0, w2
 2d4:	b	f4 <_ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml+0xf4>
 2d8:	adrp	x3, 0 <_ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml>
 2dc:	add	x3, x3, #0x0
 2e0:	mov	w2, #0x101                 	// #257
 2e4:	adrp	x1, 0 <_ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml>
 2e8:	add	x1, x1, #0x0
 2ec:	adrp	x0, 0 <_ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml>
 2f0:	add	x0, x0, #0x0
 2f4:	bl	0 <__assert_fail>
 2f8:	adrp	x3, 0 <_ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml>
 2fc:	add	x3, x3, #0x0
 300:	mov	w2, #0x102                 	// #258
 304:	adrp	x1, 0 <_ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml>
 308:	add	x1, x1, #0x0
 30c:	adrp	x0, 0 <_ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml>
 310:	add	x0, x0, #0x0
 314:	bl	0 <__assert_fail>
 318:	mov	w0, #0x9                   	// #9
 31c:	b	f4 <_ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml+0xf4>
 320:	mov	w0, #0x9                   	// #9
 324:	b	f4 <_ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml+0xf4>
 328:	cbnz	w6, 19c <_ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml+0x19c>
 32c:	ubfiz	x0, x2, #4, #32
 330:	add	x1, x9, x0
 334:	str	x3, [x9, x0]
 338:	str	x4, [x1, #8]
 33c:	add	x0, x9, w2, uxtw #3
 340:	str	x5, [x0, #128]
 344:	add	w0, w2, #0x1
 348:	b	f4 <_ZN4llvm15IntervalMapImpl8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10insertFromERjjmml+0xf4>

Disassembly of section .text._ZNSt6vectorIN4llvm13PatchLocationESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm13PatchLocationESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	stp	x25, x26, [sp, #64]
  18:	str	x27, [sp, #80]
  1c:	mov	x22, x0
  20:	mov	x26, x2
  24:	ldr	x19, [x0, #8]
  28:	ldr	x23, [x0]
  2c:	sub	x0, x19, x23
  30:	mov	x2, #0xfffffffffffffff     	// #1152921504606846975
  34:	cmp	x2, x0, asr #3
  38:	b.eq	110 <_ZNSt6vectorIN4llvm13PatchLocationESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x110>  // b.none
  3c:	mov	x20, x1
  40:	mov	x25, x1
  44:	asr	x1, x0, #3
  48:	cmp	x1, #0x0
  4c:	csinc	x0, x1, xzr, ne  // ne = any
  50:	adds	x0, x0, x1
  54:	b.cs	124 <_ZNSt6vectorIN4llvm13PatchLocationESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x124>  // b.hs, b.nlast
  58:	mov	x24, #0xfffffffffffffff     	// #1152921504606846975
  5c:	cmp	x0, x24
  60:	csel	x24, x0, x24, ls  // ls = plast
  64:	sub	x27, x20, x23
  68:	mov	x21, #0x0                   	// #0
  6c:	cbz	x0, 7c <_ZNSt6vectorIN4llvm13PatchLocationESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x7c>
  70:	lsl	x0, x24, #3
  74:	bl	0 <_Znwm>
  78:	mov	x21, x0
  7c:	ldr	x0, [x26]
  80:	str	x0, [x21, x27]
  84:	cmp	x20, x23
  88:	b.eq	11c <_ZNSt6vectorIN4llvm13PatchLocationESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x11c>  // b.none
  8c:	mov	x3, x21
  90:	mov	x2, x23
  94:	ldr	x0, [x2], #8
  98:	str	x0, [x3], #8
  9c:	cmp	x25, x2
  a0:	b.ne	94 <_ZNSt6vectorIN4llvm13PatchLocationESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x94>  // b.any
  a4:	sub	x25, x20, x23
  a8:	add	x25, x21, x25
  ac:	add	x25, x25, #0x8
  b0:	cmp	x20, x19
  b4:	b.eq	d8 <_ZNSt6vectorIN4llvm13PatchLocationESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xd8>  // b.none
  b8:	mov	x2, x20
  bc:	mov	x3, x25
  c0:	ldr	x0, [x2], #8
  c4:	str	x0, [x3], #8
  c8:	cmp	x2, x19
  cc:	b.ne	c0 <_ZNSt6vectorIN4llvm13PatchLocationESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xc0>  // b.any
  d0:	sub	x19, x19, x20
  d4:	add	x25, x25, x19
  d8:	cbz	x23, e4 <_ZNSt6vectorIN4llvm13PatchLocationESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xe4>
  dc:	mov	x0, x23
  e0:	bl	0 <_ZdlPv>
  e4:	str	x21, [x22]
  e8:	str	x25, [x22, #8]
  ec:	add	x21, x21, x24, lsl #3
  f0:	str	x21, [x22, #16]
  f4:	ldp	x19, x20, [sp, #16]
  f8:	ldp	x21, x22, [sp, #32]
  fc:	ldp	x23, x24, [sp, #48]
 100:	ldp	x25, x26, [sp, #64]
 104:	ldr	x27, [sp, #80]
 108:	ldp	x29, x30, [sp], #96
 10c:	ret
 110:	adrp	x0, 0 <_ZNSt6vectorIN4llvm13PatchLocationESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
 114:	add	x0, x0, #0x0
 118:	bl	0 <_ZSt20__throw_length_errorPKc>
 11c:	mov	x25, x21
 120:	b	ac <_ZNSt6vectorIN4llvm13PatchLocationESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xac>
 124:	sub	x27, x20, x23
 128:	mov	x24, #0xfffffffffffffff     	// #1152921504606846975
 12c:	b	70 <_ZNSt6vectorIN4llvm13PatchLocationESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x70>

Disassembly of section .text._ZNSt6vectorIN4llvm11CompileUnit9AccelInfoESaIS2_EE17_M_realloc_insertIJRNS0_23DwarfStringPoolEntryRefERPKNS0_3DIEEEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm11CompileUnit9AccelInfoESaIS2_EE17_M_realloc_insertIJRNS0_23DwarfStringPoolEntryRefERPKNS0_3DIEEEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	stp	x25, x26, [sp, #64]
  18:	stp	x27, x28, [sp, #80]
  1c:	mov	x23, x0
  20:	mov	x19, x1
  24:	mov	x25, x1
  28:	ldr	x20, [x0, #8]
  2c:	ldr	x24, [x0]
  30:	sub	x0, x20, x24
  34:	asr	x0, x0, #3
  38:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  3c:	movk	x1, #0xaaab
  40:	mul	x0, x0, x1
  44:	mov	x1, #0x5555555555555555    	// #6148914691236517205
  48:	movk	x1, #0x555, lsl #48
  4c:	cmp	x0, x1
  50:	b.eq	1b0 <_ZNSt6vectorIN4llvm11CompileUnit9AccelInfoESaIS2_EE17_M_realloc_insertIJRNS0_23DwarfStringPoolEntryRefERPKNS0_3DIEEEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x1b0>  // b.none
  54:	mov	x26, x2
  58:	mov	x27, x3
  5c:	cmp	x0, #0x0
  60:	csinc	x1, x0, xzr, ne  // ne = any
  64:	adds	x0, x1, x0
  68:	b.cs	1c4 <_ZNSt6vectorIN4llvm11CompileUnit9AccelInfoESaIS2_EE17_M_realloc_insertIJRNS0_23DwarfStringPoolEntryRefERPKNS0_3DIEEEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x1c4>  // b.hs, b.nlast
  6c:	mov	x21, #0x5555555555555555    	// #6148914691236517205
  70:	movk	x21, #0x555, lsl #48
  74:	cmp	x0, x21
  78:	csel	x21, x0, x21, ls  // ls = plast
  7c:	sub	x28, x19, x24
  80:	mov	x22, #0x0                   	// #0
  84:	cbz	x0, 98 <_ZNSt6vectorIN4llvm11CompileUnit9AccelInfoESaIS2_EE17_M_realloc_insertIJRNS0_23DwarfStringPoolEntryRefERPKNS0_3DIEEEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x98>
  88:	add	x0, x21, x21, lsl #1
  8c:	lsl	x0, x0, #3
  90:	bl	0 <_Znwm>
  94:	mov	x22, x0
  98:	add	x0, x22, x28
  9c:	ldr	x1, [x27]
  a0:	ldr	x2, [x26]
  a4:	str	x2, [x22, x28]
  a8:	str	x1, [x0, #8]
  ac:	strb	wzr, [x0, #20]
  b0:	cmp	x19, x24
  b4:	b.eq	1bc <_ZNSt6vectorIN4llvm11CompileUnit9AccelInfoESaIS2_EE17_M_realloc_insertIJRNS0_23DwarfStringPoolEntryRefERPKNS0_3DIEEEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x1bc>  // b.none
  b8:	mov	x3, x22
  bc:	mov	x2, x24
  c0:	ldp	x0, x1, [x2]
  c4:	stp	x0, x1, [x3]
  c8:	ldr	x0, [x2, #16]
  cc:	str	x0, [x3, #16]
  d0:	add	x2, x2, #0x18
  d4:	add	x3, x3, #0x18
  d8:	cmp	x25, x2
  dc:	b.ne	c0 <_ZNSt6vectorIN4llvm11CompileUnit9AccelInfoESaIS2_EE17_M_realloc_insertIJRNS0_23DwarfStringPoolEntryRefERPKNS0_3DIEEEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xc0>  // b.any
  e0:	sub	x25, x19, #0x18
  e4:	sub	x25, x25, x24
  e8:	lsr	x25, x25, #3
  ec:	mov	x0, #0xaaab                	// #43691
  f0:	movk	x0, #0xaaaa, lsl #16
  f4:	movk	x0, #0xaaaa, lsl #32
  f8:	movk	x0, #0xaaa, lsl #48
  fc:	mul	x25, x25, x0
 100:	and	x25, x25, #0x1fffffffffffffff
 104:	add	x25, x25, #0x1
 108:	add	x25, x25, x25, lsl #1
 10c:	add	x25, x22, x25, lsl #3
 110:	add	x25, x25, #0x18
 114:	cmp	x19, x20
 118:	b.eq	174 <_ZNSt6vectorIN4llvm11CompileUnit9AccelInfoESaIS2_EE17_M_realloc_insertIJRNS0_23DwarfStringPoolEntryRefERPKNS0_3DIEEEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x174>  // b.none
 11c:	mov	x2, x19
 120:	mov	x3, x25
 124:	ldp	x0, x1, [x2]
 128:	stp	x0, x1, [x3]
 12c:	ldr	x0, [x2, #16]
 130:	str	x0, [x3, #16]
 134:	add	x2, x2, #0x18
 138:	add	x3, x3, #0x18
 13c:	cmp	x2, x20
 140:	b.ne	124 <_ZNSt6vectorIN4llvm11CompileUnit9AccelInfoESaIS2_EE17_M_realloc_insertIJRNS0_23DwarfStringPoolEntryRefERPKNS0_3DIEEEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x124>  // b.any
 144:	sub	x0, x20, x19
 148:	sub	x0, x0, #0x18
 14c:	lsr	x0, x0, #3
 150:	mov	x1, #0xaaab                	// #43691
 154:	movk	x1, #0xaaaa, lsl #16
 158:	movk	x1, #0xaaaa, lsl #32
 15c:	movk	x1, #0xaaa, lsl #48
 160:	mul	x0, x0, x1
 164:	and	x0, x0, #0x1fffffffffffffff
 168:	add	x0, x0, #0x1
 16c:	add	x0, x0, x0, lsl #1
 170:	add	x25, x25, x0, lsl #3
 174:	cbz	x24, 180 <_ZNSt6vectorIN4llvm11CompileUnit9AccelInfoESaIS2_EE17_M_realloc_insertIJRNS0_23DwarfStringPoolEntryRefERPKNS0_3DIEEEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x180>
 178:	mov	x0, x24
 17c:	bl	0 <_ZdlPv>
 180:	str	x22, [x23]
 184:	str	x25, [x23, #8]
 188:	add	x21, x21, x21, lsl #1
 18c:	add	x22, x22, x21, lsl #3
 190:	str	x22, [x23, #16]
 194:	ldp	x19, x20, [sp, #16]
 198:	ldp	x21, x22, [sp, #32]
 19c:	ldp	x23, x24, [sp, #48]
 1a0:	ldp	x25, x26, [sp, #64]
 1a4:	ldp	x27, x28, [sp, #80]
 1a8:	ldp	x29, x30, [sp], #96
 1ac:	ret
 1b0:	adrp	x0, 0 <_ZNSt6vectorIN4llvm11CompileUnit9AccelInfoESaIS2_EE17_M_realloc_insertIJRNS0_23DwarfStringPoolEntryRefERPKNS0_3DIEEEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
 1b4:	add	x0, x0, #0x0
 1b8:	bl	0 <_ZSt20__throw_length_errorPKc>
 1bc:	mov	x25, x22
 1c0:	b	110 <_ZNSt6vectorIN4llvm11CompileUnit9AccelInfoESaIS2_EE17_M_realloc_insertIJRNS0_23DwarfStringPoolEntryRefERPKNS0_3DIEEEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x110>
 1c4:	sub	x28, x19, x24
 1c8:	mov	x21, #0x5555555555555555    	// #6148914691236517205
 1cc:	movk	x21, #0x555, lsl #48
 1d0:	b	88 <_ZNSt6vectorIN4llvm11CompileUnit9AccelInfoESaIS2_EE17_M_realloc_insertIJRNS0_23DwarfStringPoolEntryRefERPKNS0_3DIEEEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x88>

Disassembly of section .text._ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator11setNodeStopEjm:

0000000000000000 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator11setNodeStopEjm>:
   0:	cbz	w1, f0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator11setNodeStopEjm+0xf0>
   4:	stp	x29, x30, [sp, #-16]!
   8:	mov	x29, sp
   c:	sub	w1, w1, #0x1
  10:	cbz	x1, ac <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator11setNodeStopEjm+0xac>
  14:	ldr	w3, [x0, #16]
  18:	cmp	x3, x1
  1c:	b.ls	6c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator11setNodeStopEjm+0x6c>  // b.plast
  20:	lsl	x5, x1, #4
  24:	ldr	x3, [x0, #8]
  28:	add	x4, x3, x5
  2c:	ldr	x3, [x3, x5]
  30:	ldr	w4, [x4, #12]
  34:	add	x4, x4, #0xc
  38:	str	x2, [x3, x4, lsl #3]
  3c:	ldr	w3, [x0, #16]
  40:	cmp	x1, x3
  44:	b.cs	8c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator11setNodeStopEjm+0x8c>  // b.hs, b.nlast
  48:	ldr	x3, [x0, #8]
  4c:	add	x3, x3, x5
  50:	sub	x1, x1, #0x1
  54:	ldr	w4, [x3, #8]
  58:	sub	w4, w4, #0x1
  5c:	ldr	w3, [x3, #12]
  60:	cmp	w3, w4
  64:	b.eq	10 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator11setNodeStopEjm+0x10>  // b.none
  68:	b	c8 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator11setNodeStopEjm+0xc8>
  6c:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator11setNodeStopEjm>
  70:	add	x3, x3, #0x0
  74:	mov	w2, #0x99                  	// #153
  78:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator11setNodeStopEjm>
  7c:	add	x1, x1, #0x0
  80:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator11setNodeStopEjm>
  84:	add	x0, x0, #0x0
  88:	bl	0 <__assert_fail>
  8c:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator11setNodeStopEjm>
  90:	add	x3, x3, #0x0
  94:	mov	w2, #0x99                  	// #153
  98:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator11setNodeStopEjm>
  9c:	add	x1, x1, #0x0
  a0:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator11setNodeStopEjm>
  a4:	add	x0, x0, #0x0
  a8:	bl	0 <__assert_fail>
  ac:	ldr	w1, [x0, #16]
  b0:	cbz	w1, d0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator11setNodeStopEjm+0xd0>
  b4:	ldr	x1, [x0, #8]
  b8:	ldr	x3, [x1]
  bc:	ldr	w0, [x1, #12]
  c0:	add	x0, x3, x0, lsl #3
  c4:	str	x2, [x0, #88]
  c8:	ldp	x29, x30, [sp], #16
  cc:	ret
  d0:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator11setNodeStopEjm>
  d4:	add	x3, x3, #0x0
  d8:	mov	w2, #0x99                  	// #153
  dc:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator11setNodeStopEjm>
  e0:	add	x1, x1, #0x0
  e4:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator11setNodeStopEjm>
  e8:	add	x0, x0, #0x0
  ec:	bl	0 <__assert_fail>
  f0:	ret

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x19, x0
  14:	str	x1, [sp, #56]
  18:	mov	x20, x1
  1c:	mov	x0, #0xffffffff            	// #4294967295
  20:	cmp	x1, x0
  24:	b.hi	f4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xf4>  // b.pmore
  28:	ldr	w2, [x19, #12]
  2c:	add	x2, x2, #0x2
  30:	orr	x2, x2, x2, lsr #1
  34:	orr	x2, x2, x2, lsr #2
  38:	orr	x2, x2, x2, lsr #4
  3c:	orr	x2, x2, x2, lsr #8
  40:	orr	x0, x2, x2, lsr #16
  44:	orr	x2, x0, x2, lsr #32
  48:	add	x2, x2, #0x1
  4c:	str	x2, [sp, #64]
  50:	cmp	x20, x2
  54:	add	x0, sp, #0x40
  58:	add	x1, sp, #0x38
  5c:	csel	x0, x0, x1, ls  // ls = plast
  60:	mov	x1, #0xffffffff            	// #4294967295
  64:	str	x1, [sp, #72]
  68:	ldr	x2, [x0]
  6c:	cmp	x2, x1
  70:	add	x1, sp, #0x48
  74:	csel	x0, x1, x0, hi  // hi = pmore
  78:	ldr	x21, [x0]
  7c:	lsl	x22, x21, #4
  80:	mov	x0, x22
  84:	bl	0 <malloc>
  88:	mov	x20, x0
  8c:	cbz	x0, 108 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0x108>
  90:	ldr	x6, [x19]
  94:	ldr	w1, [x19, #8]
  98:	add	x1, x6, x1, lsl #4
  9c:	cmp	x1, x6
  a0:	b.eq	c8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xc8>  // b.none
  a4:	mov	x2, x6
  a8:	mov	x3, x20
  ac:	ldp	x4, x5, [x2], #16
  b0:	stp	x4, x5, [x3], #16
  b4:	cmp	x1, x2
  b8:	b.ne	ac <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xac>  // b.any
  bc:	sub	x1, x1, #0x10
  c0:	cmp	x1, x6
  c4:	b.ne	bc <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xbc>  // b.any
  c8:	mov	x1, x19
  cc:	ldr	x0, [x1], #16
  d0:	cmp	x0, x1
  d4:	b.eq	dc <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xdc>  // b.none
  d8:	bl	0 <free>
  dc:	str	x20, [x19]
  e0:	str	w21, [x19, #12]
  e4:	ldp	x19, x20, [sp, #16]
  e8:	ldp	x21, x22, [sp, #32]
  ec:	ldp	x29, x30, [sp], #80
  f0:	ret
  f4:	mov	w1, #0x1                   	// #1
  f8:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm>
  fc:	add	x0, x0, #0x0
 100:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 104:	b	28 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0x28>
 108:	cbnz	x22, 11c <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0x11c>
 10c:	mov	x0, #0x1                   	// #1
 110:	bl	0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm>
 114:	mov	x20, x0
 118:	b	90 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0x90>
 11c:	mov	w1, #0x1                   	// #1
 120:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm>
 124:	add	x0, x0, #0x0
 128:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 12c:	b	90 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0x90>

Disassembly of section .text._ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj:

0000000000000000 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj>:
   0:	stp	x29, x30, [sp, #-160]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	stp	x25, x26, [sp, #64]
  18:	stp	x27, x28, [sp, #80]
  1c:	mov	x19, x0
  20:	add	x21, sp, #0x98
  24:	mov	w6, #0x1                   	// #1
  28:	mov	w5, w1
  2c:	mov	x4, x21
  30:	mov	x3, #0x0                   	// #0
  34:	mov	w2, #0x8                   	// #8
  38:	ldr	w1, [x0, #196]
  3c:	mov	w0, #0x2                   	// #2
  40:	bl	0 <_ZN4llvm15IntervalMapImpl10distributeEjjjPKjPjjb>
  44:	mov	x25, x0
  48:	lsr	x27, x0, #32
  4c:	stp	xzr, xzr, [sp, #136]
  50:	mov	x23, #0x1                   	// #1
  54:	mov	w22, #0x0                   	// #0
  58:	mov	x28, #0x40000000000         	// #4398046511104
  5c:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj>
  60:	add	x0, x0, #0x0
  64:	str	x0, [sp, #104]
  68:	add	x26, sp, #0x88
  6c:	ldr	x24, [x19, #200]
  70:	ldr	x20, [x24]
  74:	cbz	x20, 22c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj+0x22c>
  78:	ldr	x0, [x20]
  7c:	str	x0, [x24]
  80:	stp	xzr, xzr, [x20]
  84:	stp	xzr, xzr, [x20, #16]
  88:	stp	xzr, xzr, [x20, #32]
  8c:	stp	xzr, xzr, [x20, #48]
  90:	stp	xzr, xzr, [x20, #64]
  94:	stp	xzr, xzr, [x20, #80]
  98:	stp	xzr, xzr, [x20, #96]
  9c:	stp	xzr, xzr, [x20, #112]
  a0:	stp	xzr, xzr, [x20, #128]
  a4:	stp	xzr, xzr, [x20, #144]
  a8:	stp	xzr, xzr, [x20, #160]
  ac:	stp	xzr, xzr, [x20, #176]
  b0:	ldr	w0, [x19, #192]
  b4:	cbnz	w0, 3dc <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj+0x3dc>
  b8:	mov	x6, x21
  bc:	ldr	w0, [x21]
  c0:	add	w3, w0, w22
  c4:	cmp	w3, #0x8
  c8:	b.hi	3fc <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj+0x3fc>  // b.pmore
  cc:	cmp	w0, #0x8
  d0:	b.hi	41c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj+0x41c>  // b.pmore
  d4:	cmp	w22, w3
  d8:	b.eq	11c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj+0x11c>  // b.none
  dc:	mov	x1, x20
  e0:	add	x4, x20, #0x80
  e4:	mov	w0, w22
  e8:	ubfiz	x2, x0, #4, #32
  ec:	add	x5, x19, x2
  f0:	ldr	x2, [x19, x2]
  f4:	str	x2, [x1]
  f8:	ldr	x2, [x5, #8]
  fc:	str	x2, [x1, #8]
 100:	add	x2, x19, w0, uxtw #3
 104:	ldr	x2, [x2, #128]
 108:	str	x2, [x4], #8
 10c:	add	w0, w0, #0x1
 110:	add	x1, x1, #0x10
 114:	cmp	w3, w0
 118:	b.ne	e8 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj+0xe8>  // b.any
 11c:	ldr	w1, [x6]
 120:	sub	w2, w1, #0x1
 124:	tst	x20, #0x3f
 128:	b.ne	43c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj+0x43c>  // b.any
 12c:	mov	w3, w2
 130:	tst	x2, #0xffffffc0
 134:	b.ne	45c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj+0x45c>  // b.any
 138:	and	x0, x20, #0xffffffffffffffc0
 13c:	orr	x0, x0, x3
 140:	cmp	w1, #0x8
 144:	b.hi	47c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj+0x47c>  // b.pmore
 148:	add	x2, x26, x23, lsl #3
 14c:	stur	x0, [x2, #-8]
 150:	add	w22, w22, w1
 154:	add	x23, x23, #0x1
 158:	add	x21, x21, #0x4
 15c:	cmp	x23, #0x3
 160:	b.ne	6c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj+0x6c>  // b.any
 164:	ldr	w0, [x19, #192]
 168:	cbnz	w0, 49c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj+0x49c>
 16c:	mov	w0, #0x1                   	// #1
 170:	str	w0, [x19, #192]
 174:	stp	xzr, xzr, [x19]
 178:	stp	xzr, xzr, [x19, #96]
 17c:	stp	xzr, xzr, [x19, #112]
 180:	stp	xzr, xzr, [x19, #128]
 184:	stp	xzr, xzr, [x19, #144]
 188:	stp	xzr, xzr, [x19, #160]
 18c:	str	xzr, [x19, #176]
 190:	stp	xzr, xzr, [x19, #8]
 194:	stp	xzr, xzr, [x19, #24]
 198:	stp	xzr, xzr, [x19, #40]
 19c:	stp	xzr, xzr, [x19, #56]
 1a0:	stp	xzr, xzr, [x19, #72]
 1a4:	str	xzr, [x19, #88]
 1a8:	ldr	x3, [sp, #136]
 1ac:	and	x2, x3, #0xffffffffffffffc0
 1b0:	ldr	w1, [sp, #152]
 1b4:	sub	w1, w1, #0x1
 1b8:	add	x1, x2, x1, lsl #4
 1bc:	ldr	x1, [x1, #8]
 1c0:	str	x1, [x19, #96]
 1c4:	str	x3, [x19, #8]
 1c8:	ldr	x0, [sp, #144]
 1cc:	and	x1, x0, #0xffffffffffffffc0
 1d0:	ldr	w0, [sp, #156]
 1d4:	sub	w0, w0, #0x1
 1d8:	add	x0, x1, x0, lsl #4
 1dc:	ldr	x0, [x0, #8]
 1e0:	str	x0, [x19, #104]
 1e4:	ldr	w0, [x19, #192]
 1e8:	cbz	w0, 4bc <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj+0x4bc>
 1ec:	ldr	x0, [sp, #144]
 1f0:	str	x0, [x19, #16]
 1f4:	ldr	x0, [x2]
 1f8:	str	x0, [x19]
 1fc:	mov	w0, #0x2                   	// #2
 200:	str	w0, [x19, #196]
 204:	mov	x0, #0x0                   	// #0
 208:	bfxil	x0, x25, #0, #32
 20c:	bfi	x0, x27, #32, #32
 210:	ldp	x19, x20, [sp, #16]
 214:	ldp	x21, x22, [sp, #32]
 218:	ldp	x23, x24, [sp, #48]
 21c:	ldp	x25, x26, [sp, #64]
 220:	ldp	x27, x28, [sp, #80]
 224:	ldp	x29, x30, [sp], #160
 228:	ret
 22c:	ldr	x0, [x24, #88]
 230:	add	x0, x0, #0xc0
 234:	str	x0, [x24, #88]
 238:	ldr	x1, [x24, #8]
 23c:	add	x0, x1, #0x3f
 240:	and	x0, x0, #0xffffffffffffffc0
 244:	sub	x0, x0, x1
 248:	adds	x3, x0, #0xc0
 24c:	b.cs	300 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj+0x300>  // b.hs, b.nlast
 250:	ldr	x2, [x24, #16]
 254:	sub	x2, x2, x1
 258:	cmp	x3, x2
 25c:	b.ls	320 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj+0x320>  // b.plast
 260:	ldr	w0, [x24, #32]
 264:	lsr	w1, w0, #7
 268:	cmp	w0, #0xeff
 26c:	b.ls	330 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj+0x330>  // b.plast
 270:	mov	x0, x28
 274:	bl	0 <malloc>
 278:	str	x0, [sp, #112]
 27c:	cbz	x0, 35c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj+0x35c>
 280:	str	x28, [sp, #120]
 284:	ldr	w1, [x24, #32]
 288:	ldr	w0, [x24, #36]
 28c:	cmp	w1, w0
 290:	b.cs	364 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj+0x364>  // b.hs, b.nlast
 294:	ldr	w1, [x24, #32]
 298:	ldr	x0, [x24, #24]
 29c:	ldr	x2, [sp, #112]
 2a0:	str	x2, [x0, x1, lsl #3]
 2a4:	ldr	w0, [x24, #32]
 2a8:	mov	w1, w0
 2ac:	add	x1, x1, #0x1
 2b0:	ldr	w2, [x24, #36]
 2b4:	cmp	x1, x2
 2b8:	b.hi	37c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj+0x37c>  // b.pmore
 2bc:	add	w0, w0, #0x1
 2c0:	str	w0, [x24, #32]
 2c4:	ldr	x0, [sp, #112]
 2c8:	str	x0, [x24, #8]
 2cc:	ldr	x1, [sp, #120]
 2d0:	add	x1, x0, x1
 2d4:	str	x1, [x24, #16]
 2d8:	adds	x0, x0, #0x3f
 2dc:	b.cs	39c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj+0x39c>  // b.hs, b.nlast
 2e0:	and	x0, x0, #0xffffffffffffffc0
 2e4:	add	x2, x0, #0xc0
 2e8:	cmp	x1, x2
 2ec:	b.cc	3bc <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj+0x3bc>  // b.lo, b.ul, b.last
 2f0:	mov	x20, x0
 2f4:	add	x0, x0, #0xc0
 2f8:	str	x0, [x24, #8]
 2fc:	b	80 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj+0x80>
 300:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj>
 304:	add	x3, x3, #0x0
 308:	mov	w2, #0xdc                  	// #220
 30c:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj>
 310:	add	x1, x1, #0x0
 314:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj>
 318:	add	x0, x0, #0x0
 31c:	bl	0 <__assert_fail>
 320:	add	x20, x1, x0
 324:	add	x0, x20, #0xc0
 328:	str	x0, [x24, #8]
 32c:	b	80 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj+0x80>
 330:	mov	x0, #0x1000                	// #4096
 334:	lsl	x0, x0, x1
 338:	str	x0, [sp, #120]
 33c:	bl	0 <malloc>
 340:	str	x0, [sp, #112]
 344:	cbnz	x0, 284 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj+0x284>
 348:	mov	w1, #0x1                   	// #1
 34c:	ldr	x0, [sp, #104]
 350:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 354:	str	x20, [sp, #112]
 358:	b	284 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj+0x284>
 35c:	str	x28, [sp, #120]
 360:	b	348 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj+0x348>
 364:	mov	x3, #0x8                   	// #8
 368:	mov	x2, #0x0                   	// #0
 36c:	add	x1, x24, #0x28
 370:	add	x0, x24, #0x18
 374:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 378:	b	294 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj+0x294>
 37c:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj>
 380:	add	x3, x3, #0x0
 384:	mov	w2, #0x43                  	// #67
 388:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj>
 38c:	add	x1, x1, #0x0
 390:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj>
 394:	add	x0, x0, #0x0
 398:	bl	0 <__assert_fail>
 39c:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj>
 3a0:	add	x3, x3, #0x0
 3a4:	mov	w2, #0xba                  	// #186
 3a8:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj>
 3ac:	add	x1, x1, #0x0
 3b0:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj>
 3b4:	add	x0, x0, #0x0
 3b8:	bl	0 <__assert_fail>
 3bc:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj>
 3c0:	add	x3, x3, #0x0
 3c4:	mov	w2, #0x105                 	// #261
 3c8:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj>
 3cc:	add	x1, x1, #0x0
 3d0:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj>
 3d4:	add	x0, x0, #0x0
 3d8:	bl	0 <__assert_fail>
 3dc:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj>
 3e0:	add	x3, x3, #0x0
 3e4:	mov	w2, #0x3e0                 	// #992
 3e8:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj>
 3ec:	add	x1, x1, #0x0
 3f0:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj>
 3f4:	add	x0, x0, #0x0
 3f8:	bl	0 <__assert_fail>
 3fc:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj>
 400:	add	x3, x3, #0x0
 404:	mov	w2, #0xeb                  	// #235
 408:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj>
 40c:	add	x1, x1, #0x0
 410:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj>
 414:	add	x0, x0, #0x0
 418:	bl	0 <__assert_fail>
 41c:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj>
 420:	add	x3, x3, #0x0
 424:	mov	w2, #0xec                  	// #236
 428:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj>
 42c:	add	x1, x1, #0x0
 430:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj>
 434:	add	x0, x0, #0x0
 438:	bl	0 <__assert_fail>
 43c:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj>
 440:	add	x3, x3, #0x0
 444:	mov	w2, #0xb2                  	// #178
 448:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj>
 44c:	add	x1, x1, #0x0
 450:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj>
 454:	add	x0, x0, #0x0
 458:	bl	0 <__assert_fail>
 45c:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj>
 460:	add	x3, x3, #0x0
 464:	mov	w2, #0xba                  	// #186
 468:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj>
 46c:	add	x1, x1, #0x0
 470:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj>
 474:	add	x0, x0, #0x0
 478:	bl	0 <__assert_fail>
 47c:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj>
 480:	add	x3, x3, #0x0
 484:	mov	w2, #0x1fc                 	// #508
 488:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj>
 48c:	add	x1, x1, #0x0
 490:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj>
 494:	add	x0, x0, #0x0
 498:	bl	0 <__assert_fail>
 49c:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj>
 4a0:	add	x3, x3, #0x0
 4a4:	mov	w2, #0x3e0                 	// #992
 4a8:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj>
 4ac:	add	x1, x1, #0x0
 4b0:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj>
 4b4:	add	x0, x0, #0x0
 4b8:	bl	0 <__assert_fail>
 4bc:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj>
 4c0:	add	x3, x3, #0x0
 4c4:	mov	w2, #0x3e9                 	// #1001
 4c8:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj>
 4cc:	add	x1, x1, #0x0
 4d0:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE10branchRootEj>
 4d4:	add	x0, x0, #0x0
 4d8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE14const_iterator12pathFillFindEm:

0000000000000000 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE14const_iterator12pathFillFindEm>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x23, x24, [sp, #48]
  10:	mov	x19, x0
  14:	mov	x23, x1
  18:	ldr	w1, [x0, #16]
  1c:	sub	w0, w1, #0x1
  20:	cmp	x0, w1, uxtw
  24:	b.cs	1a8 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE14const_iterator12pathFillFindEm+0x1a8>  // b.hs, b.nlast
  28:	stp	x21, x22, [sp, #32]
  2c:	lsl	x0, x0, #4
  30:	ldr	x2, [x19, #8]
  34:	add	x3, x2, x0
  38:	ldr	w3, [x3, #12]
  3c:	ldr	x0, [x2, x0]
  40:	ldr	x0, [x0, x3, lsl #3]
  44:	ldr	x2, [x19]
  48:	ldr	w22, [x2, #192]
  4c:	subs	w22, w22, w1
  50:	b.eq	108 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE14const_iterator12pathFillFindEm+0x108>  // b.none
  54:	stp	x25, x26, [sp, #64]
  58:	str	x27, [sp, #80]
  5c:	add	x26, x19, #0x18
  60:	add	x25, x19, #0x8
  64:	mov	x24, #0x10                  	// #16
  68:	and	x21, x0, #0xffffffffffffffc0
  6c:	ldr	x1, [x21, #96]
  70:	cmp	x23, x1
  74:	b.cc	1f4 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE14const_iterator12pathFillFindEm+0x1f4>  // b.lo, b.ul, b.last
  78:	mov	w20, #0x0                   	// #0
  7c:	add	w20, w20, #0x1
  80:	add	x1, x21, w20, uxtw #3
  84:	ldr	x1, [x1, #96]
  88:	cmp	x23, x1
  8c:	b.cs	7c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE14const_iterator12pathFillFindEm+0x7c>  // b.hs, b.nlast
  90:	cmp	w20, #0xb
  94:	b.hi	1d4 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE14const_iterator12pathFillFindEm+0x1d4>  // b.pmore
  98:	and	x0, x0, #0x3f
  9c:	add	w0, w0, #0x1
  a0:	mov	x27, #0x0                   	// #0
  a4:	bfxil	x27, x0, #0, #32
  a8:	bfi	x27, x20, #32, #32
  ac:	ldr	w1, [x19, #16]
  b0:	ldr	w0, [x19, #20]
  b4:	cmp	w1, w0
  b8:	b.cs	1fc <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE14const_iterator12pathFillFindEm+0x1fc>  // b.hs, b.nlast
  bc:	ldr	w0, [x19, #16]
  c0:	ldr	x1, [x19, #8]
  c4:	lsl	x0, x0, #4
  c8:	add	x2, x1, x0
  cc:	str	x21, [x1, x0]
  d0:	str	x27, [x2, #8]
  d4:	ldr	w0, [x19, #16]
  d8:	mov	w1, w0
  dc:	add	x1, x1, #0x1
  e0:	ldr	w2, [x19, #20]
  e4:	cmp	x1, x2
  e8:	b.hi	214 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE14const_iterator12pathFillFindEm+0x214>  // b.pmore
  ec:	add	w0, w0, #0x1
  f0:	str	w0, [x19, #16]
  f4:	ldr	x0, [x21, w20, uxtw #3]
  f8:	subs	w22, w22, #0x1
  fc:	b.ne	68 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE14const_iterator12pathFillFindEm+0x68>  // b.any
 100:	ldp	x25, x26, [sp, #64]
 104:	ldr	x27, [sp, #80]
 108:	and	x20, x0, #0xffffffffffffffc0
 10c:	ldr	x1, [x20, #8]
 110:	cmp	x23, x1
 114:	b.cc	25c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE14const_iterator12pathFillFindEm+0x25c>  // b.lo, b.ul, b.last
 118:	add	x2, x20, #0x18
 11c:	mov	w1, #0x0                   	// #0
 120:	add	w1, w1, #0x1
 124:	ldr	x3, [x2], #16
 128:	cmp	x23, x3
 12c:	b.cs	120 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE14const_iterator12pathFillFindEm+0x120>  // b.hs, b.nlast
 130:	cmp	w1, #0x7
 134:	b.hi	234 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE14const_iterator12pathFillFindEm+0x234>  // b.pmore
 138:	and	x0, x0, #0x3f
 13c:	add	w0, w0, #0x1
 140:	mov	x21, #0x0                   	// #0
 144:	bfxil	x21, x0, #0, #32
 148:	bfi	x21, x1, #32, #32
 14c:	ldr	w1, [x19, #16]
 150:	ldr	w0, [x19, #20]
 154:	cmp	w1, w0
 158:	b.cs	264 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE14const_iterator12pathFillFindEm+0x264>  // b.hs, b.nlast
 15c:	ldr	w0, [x19, #16]
 160:	ldr	x1, [x19, #8]
 164:	lsl	x0, x0, #4
 168:	add	x2, x1, x0
 16c:	str	x20, [x1, x0]
 170:	str	x21, [x2, #8]
 174:	ldr	w0, [x19, #16]
 178:	mov	w1, w0
 17c:	add	x1, x1, #0x1
 180:	ldr	w2, [x19, #20]
 184:	cmp	x1, x2
 188:	b.hi	27c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE14const_iterator12pathFillFindEm+0x27c>  // b.pmore
 18c:	add	w0, w0, #0x1
 190:	str	w0, [x19, #16]
 194:	ldp	x21, x22, [sp, #32]
 198:	ldp	x19, x20, [sp, #16]
 19c:	ldp	x23, x24, [sp, #48]
 1a0:	ldp	x29, x30, [sp], #96
 1a4:	ret
 1a8:	stp	x21, x22, [sp, #32]
 1ac:	stp	x25, x26, [sp, #64]
 1b0:	str	x27, [sp, #80]
 1b4:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE14const_iterator12pathFillFindEm>
 1b8:	add	x3, x3, #0x0
 1bc:	mov	w2, #0x99                  	// #153
 1c0:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE14const_iterator12pathFillFindEm>
 1c4:	add	x1, x1, #0x0
 1c8:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE14const_iterator12pathFillFindEm>
 1cc:	add	x0, x0, #0x0
 1d0:	bl	0 <__assert_fail>
 1d4:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE14const_iterator12pathFillFindEm>
 1d8:	add	x3, x3, #0x0
 1dc:	mov	w2, #0x2dd                 	// #733
 1e0:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE14const_iterator12pathFillFindEm>
 1e4:	add	x1, x1, #0x0
 1e8:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE14const_iterator12pathFillFindEm>
 1ec:	add	x0, x0, #0x0
 1f0:	bl	0 <__assert_fail>
 1f4:	mov	w20, #0x0                   	// #0
 1f8:	b	98 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE14const_iterator12pathFillFindEm+0x98>
 1fc:	mov	x3, x24
 200:	mov	x2, #0x0                   	// #0
 204:	mov	x1, x26
 208:	mov	x0, x25
 20c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 210:	b	bc <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE14const_iterator12pathFillFindEm+0xbc>
 214:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE14const_iterator12pathFillFindEm>
 218:	add	x3, x3, #0x0
 21c:	mov	w2, #0x43                  	// #67
 220:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE14const_iterator12pathFillFindEm>
 224:	add	x1, x1, #0x0
 228:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE14const_iterator12pathFillFindEm>
 22c:	add	x0, x0, #0x0
 230:	bl	0 <__assert_fail>
 234:	stp	x25, x26, [sp, #64]
 238:	str	x27, [sp, #80]
 23c:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE14const_iterator12pathFillFindEm>
 240:	add	x3, x3, #0x0
 244:	mov	w2, #0x257                 	// #599
 248:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE14const_iterator12pathFillFindEm>
 24c:	add	x1, x1, #0x0
 250:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE14const_iterator12pathFillFindEm>
 254:	add	x0, x0, #0x0
 258:	bl	0 <__assert_fail>
 25c:	mov	w1, #0x0                   	// #0
 260:	b	138 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE14const_iterator12pathFillFindEm+0x138>
 264:	mov	x3, #0x10                  	// #16
 268:	mov	x2, #0x0                   	// #0
 26c:	add	x1, x19, #0x18
 270:	add	x0, x19, #0x8
 274:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 278:	b	15c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE14const_iterator12pathFillFindEm+0x15c>
 27c:	stp	x25, x26, [sp, #64]
 280:	str	x27, [sp, #80]
 284:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE14const_iterator12pathFillFindEm>
 288:	add	x3, x3, #0x0
 28c:	mov	w2, #0x43                  	// #67
 290:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE14const_iterator12pathFillFindEm>
 294:	add	x1, x1, #0x0
 298:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE14const_iterator12pathFillFindEm>
 29c:	add	x0, x0, #0x0
 2a0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE14const_iterator8treeFindEm:

0000000000000000 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE14const_iterator8treeFindEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x19, x0
  14:	ldr	x3, [x0]
  18:	ldr	w0, [x3, #192]
  1c:	cbz	w0, e4 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE14const_iterator8treeFindEm+0xe4>
  20:	mov	x21, x1
  24:	ldr	w0, [x3, #196]
  28:	cmp	w0, #0xb
  2c:	b.hi	104 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE14const_iterator8treeFindEm+0x104>  // b.pmore
  30:	cbz	w0, 124 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE14const_iterator8treeFindEm+0x124>
  34:	add	x1, x3, #0x60
  38:	mov	w2, #0x0                   	// #0
  3c:	ldr	x4, [x1]
  40:	cmp	x21, x4
  44:	b.cc	5c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE14const_iterator8treeFindEm+0x5c>  // b.lo, b.ul, b.last
  48:	add	w2, w2, #0x1
  4c:	add	x1, x1, #0x8
  50:	cmp	w0, w2
  54:	b.ne	3c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE14const_iterator8treeFindEm+0x3c>  // b.any
  58:	mov	w2, w0
  5c:	str	wzr, [x19, #16]
  60:	add	x20, x3, #0x8
  64:	mov	x22, #0x0                   	// #0
  68:	bfxil	x22, x0, #0, #32
  6c:	bfi	x22, x2, #32, #32
  70:	ldr	w0, [x19, #20]
  74:	cbz	w0, 12c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE14const_iterator8treeFindEm+0x12c>
  78:	ldr	w0, [x19, #16]
  7c:	ldr	x1, [x19, #8]
  80:	lsl	x0, x0, #4
  84:	add	x2, x1, x0
  88:	str	x20, [x1, x0]
  8c:	str	x22, [x2, #8]
  90:	ldr	w0, [x19, #16]
  94:	mov	w1, w0
  98:	add	x1, x1, #0x1
  9c:	ldr	w2, [x19, #20]
  a0:	cmp	x1, x2
  a4:	b.hi	144 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE14const_iterator8treeFindEm+0x144>  // b.pmore
  a8:	add	w0, w0, #0x1
  ac:	str	w0, [x19, #16]
  b0:	cbz	w0, d4 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE14const_iterator8treeFindEm+0xd4>
  b4:	ldr	x0, [x19, #8]
  b8:	ldr	w1, [x0, #12]
  bc:	ldr	w0, [x0, #8]
  c0:	cmp	w1, w0
  c4:	b.cs	d4 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE14const_iterator8treeFindEm+0xd4>  // b.hs, b.nlast
  c8:	mov	x1, x21
  cc:	mov	x0, x19
  d0:	bl	0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE14const_iterator8treeFindEm>
  d4:	ldp	x19, x20, [sp, #16]
  d8:	ldp	x21, x22, [sp, #32]
  dc:	ldp	x29, x30, [sp], #48
  e0:	ret
  e4:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE14const_iterator8treeFindEm>
  e8:	add	x3, x3, #0x0
  ec:	mov	w2, #0x3e9                 	// #1001
  f0:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE14const_iterator8treeFindEm>
  f4:	add	x1, x1, #0x0
  f8:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE14const_iterator8treeFindEm>
  fc:	add	x0, x0, #0x0
 100:	bl	0 <__assert_fail>
 104:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE14const_iterator8treeFindEm>
 108:	add	x3, x3, #0x0
 10c:	mov	w2, #0x2cb                 	// #715
 110:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE14const_iterator8treeFindEm>
 114:	add	x1, x1, #0x0
 118:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE14const_iterator8treeFindEm>
 11c:	add	x0, x0, #0x0
 120:	bl	0 <__assert_fail>
 124:	mov	w2, w0
 128:	b	5c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE14const_iterator8treeFindEm+0x5c>
 12c:	mov	x3, #0x10                  	// #16
 130:	mov	x2, #0x0                   	// #0
 134:	add	x1, x19, #0x18
 138:	add	x0, x19, #0x8
 13c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 140:	b	78 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE14const_iterator8treeFindEm+0x78>
 144:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE14const_iterator8treeFindEm>
 148:	add	x3, x3, #0x0
 14c:	mov	w2, #0x43                  	// #67
 150:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE14const_iterator8treeFindEm>
 154:	add	x1, x1, #0x0
 158:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE14const_iterator8treeFindEm>
 15c:	add	x0, x0, #0x0
 160:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj:

0000000000000000 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	cbz	w1, 14c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj+0x14c>
  14:	mov	x19, x0
  18:	mov	w20, w1
  1c:	mov	x21, x0
  20:	ldr	x1, [x21], #8
  24:	subs	w22, w20, #0x1
  28:	b.ne	3cc <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj+0x3cc>  // b.any
  2c:	ldr	w0, [x1, #192]
  30:	cbz	w0, 16c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj+0x16c>
  34:	ldr	w0, [x19, #16]
  38:	cbz	w0, 18c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj+0x18c>
  3c:	ldr	x0, [x19, #8]
  40:	ldr	w0, [x0, #12]
  44:	ldr	w4, [x1, #196]
  48:	adds	w0, w0, #0x1
  4c:	b.cs	1ac <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj+0x1ac>  // b.hs, b.nlast
  50:	cmp	w4, #0xb
  54:	b.hi	1cc <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj+0x1cc>  // b.pmore
  58:	sub	w2, w4, #0x1
  5c:	cmp	w2, #0xb
  60:	b.hi	1ec <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj+0x1ec>  // b.pmore
  64:	cmp	w4, w0
  68:	b.eq	9c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj+0x9c>  // b.none
  6c:	add	x5, x1, #0x8
  70:	sub	w2, w0, #0x1
  74:	add	x2, x1, x2, lsl #3
  78:	mov	w3, w0
  7c:	ldr	x6, [x5, x3, lsl #3]
  80:	str	x6, [x2, #8]
  84:	add	x3, x5, x3, lsl #3
  88:	ldr	x3, [x3, #88]
  8c:	str	x3, [x2, #96]
  90:	add	w0, w0, #0x1
  94:	cmp	w4, w0
  98:	b.ne	70 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj+0x70>  // b.any
  9c:	ldr	w0, [x1, #196]
  a0:	sub	w0, w0, #0x1
  a4:	str	w0, [x1, #196]
  a8:	ldr	w2, [x19, #16]
  ac:	cbz	w2, 20c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj+0x20c>
  b0:	ldr	x2, [x19, #8]
  b4:	str	w0, [x2, #8]
  b8:	cbz	w0, 22c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj+0x22c>
  bc:	ldr	w0, [x19, #16]
  c0:	cbz	w0, 13c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj+0x13c>
  c4:	ldr	x1, [x19, #8]
  c8:	ldr	w3, [x1, #12]
  cc:	ldr	w2, [x1, #8]
  d0:	cmp	w3, w2
  d4:	b.cs	13c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj+0x13c>  // b.hs, b.nlast
  d8:	mov	w2, w22
  dc:	mov	w0, w0
  e0:	cmp	x0, w22, uxtw
  e4:	b.ls	614 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj+0x614>  // b.plast
  e8:	lsl	x2, x2, #4
  ec:	add	x3, x1, x2
  f0:	ldr	w4, [x3, #12]
  f4:	ldr	x3, [x1, x2]
  f8:	mov	w2, w20
  fc:	cmp	x0, w20, uxtw
 100:	b.ls	634 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj+0x634>  // b.plast
 104:	lsl	x2, x2, #4
 108:	add	x5, x1, x2
 10c:	ldr	x0, [x3, x4, lsl #3]
 110:	and	x3, x0, #0xffffffffffffffc0
 114:	str	x3, [x1, x2]
 118:	and	x0, x0, #0x3f
 11c:	add	w0, w0, #0x1
 120:	str	w0, [x5, #8]
 124:	ldr	w0, [x19, #16]
 128:	cmp	w20, w0
 12c:	b.cs	654 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj+0x654>  // b.hs, b.nlast
 130:	ldr	x0, [x19, #8]
 134:	add	x2, x0, x2
 138:	str	wzr, [x2, #12]
 13c:	ldp	x19, x20, [sp, #16]
 140:	ldp	x21, x22, [sp, #32]
 144:	ldp	x29, x30, [sp], #48
 148:	ret
 14c:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 150:	add	x3, x3, #0x0
 154:	mov	w2, #0x77d                 	// #1917
 158:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 15c:	add	x1, x1, #0x0
 160:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 164:	add	x0, x0, #0x0
 168:	bl	0 <__assert_fail>
 16c:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 170:	add	x3, x3, #0x0
 174:	mov	w2, #0x3e9                 	// #1001
 178:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 17c:	add	x1, x1, #0x0
 180:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 184:	add	x0, x0, #0x0
 188:	bl	0 <__assert_fail>
 18c:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 190:	add	x3, x3, #0x0
 194:	mov	w2, #0x95                  	// #149
 198:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 19c:	add	x1, x1, #0x0
 1a0:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 1a4:	add	x0, x0, #0x0
 1a8:	bl	0 <__assert_fail>
 1ac:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 1b0:	add	x3, x3, #0x0
 1b4:	mov	w2, #0xf8                  	// #248
 1b8:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 1bc:	add	x1, x1, #0x0
 1c0:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 1c4:	add	x0, x0, #0x0
 1c8:	bl	0 <__assert_fail>
 1cc:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 1d0:	add	x3, x3, #0x0
 1d4:	mov	w2, #0xeb                  	// #235
 1d8:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 1dc:	add	x1, x1, #0x0
 1e0:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 1e4:	add	x0, x0, #0x0
 1e8:	bl	0 <__assert_fail>
 1ec:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 1f0:	add	x3, x3, #0x0
 1f4:	mov	w2, #0xec                  	// #236
 1f8:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 1fc:	add	x1, x1, #0x0
 200:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 204:	add	x0, x0, #0x0
 208:	bl	0 <__assert_fail>
 20c:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 210:	add	x3, x3, #0x0
 214:	mov	w2, #0x95                  	// #149
 218:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 21c:	add	x1, x1, #0x0
 220:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 224:	add	x0, x0, #0x0
 228:	bl	0 <__assert_fail>
 22c:	ldr	w0, [x1, #192]
 230:	cbz	w0, 2cc <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj+0x2cc>
 234:	str	wzr, [x1, #192]
 238:	stp	xzr, xzr, [x1]
 23c:	stp	xzr, xzr, [x1, #16]
 240:	stp	xzr, xzr, [x1, #32]
 244:	stp	xzr, xzr, [x1, #48]
 248:	stp	xzr, xzr, [x1, #64]
 24c:	stp	xzr, xzr, [x1, #80]
 250:	stp	xzr, xzr, [x1, #96]
 254:	stp	xzr, xzr, [x1, #112]
 258:	stp	xzr, xzr, [x1, #128]
 25c:	stp	xzr, xzr, [x1, #144]
 260:	stp	xzr, xzr, [x1, #160]
 264:	stp	xzr, xzr, [x1, #176]
 268:	ldr	x20, [x19]
 26c:	cbz	x20, 2ec <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj+0x2ec>
 270:	ldr	w0, [x20, #192]
 274:	cbz	w0, 344 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj+0x344>
 278:	ldr	w22, [x20, #196]
 27c:	str	wzr, [x19, #16]
 280:	add	x20, x20, #0x8
 284:	mov	w22, w22
 288:	ldr	w0, [x19, #20]
 28c:	cbz	w0, 30c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj+0x30c>
 290:	ldr	w0, [x19, #16]
 294:	ldr	x1, [x19, #8]
 298:	lsl	x0, x0, #4
 29c:	add	x2, x1, x0
 2a0:	str	x20, [x1, x0]
 2a4:	str	x22, [x2, #8]
 2a8:	ldr	w0, [x19, #16]
 2ac:	mov	w1, w0
 2b0:	add	x1, x1, #0x1
 2b4:	ldr	w2, [x19, #20]
 2b8:	cmp	x1, x2
 2bc:	b.hi	324 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj+0x324>  // b.pmore
 2c0:	add	w0, w0, #0x1
 2c4:	str	w0, [x19, #16]
 2c8:	b	13c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj+0x13c>
 2cc:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 2d0:	add	x3, x3, #0x0
 2d4:	mov	w2, #0x3e9                 	// #1001
 2d8:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 2dc:	add	x1, x1, #0x0
 2e0:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 2e4:	add	x0, x0, #0x0
 2e8:	bl	0 <__assert_fail>
 2ec:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 2f0:	add	x3, x3, #0x0
 2f4:	mov	w2, #0x521                 	// #1313
 2f8:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 2fc:	add	x1, x1, #0x0
 300:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 304:	add	x0, x0, #0x0
 308:	bl	0 <__assert_fail>
 30c:	mov	x3, #0x10                  	// #16
 310:	mov	x2, #0x0                   	// #0
 314:	add	x1, x19, #0x18
 318:	mov	x0, x21
 31c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 320:	b	290 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj+0x290>
 324:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 328:	add	x3, x3, #0x0
 32c:	mov	w2, #0x43                  	// #67
 330:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 334:	add	x1, x1, #0x0
 338:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 33c:	add	x0, x0, #0x0
 340:	bl	0 <__assert_fail>
 344:	ldr	w22, [x20, #196]
 348:	str	wzr, [x19, #16]
 34c:	mov	w22, w22
 350:	ldr	w0, [x19, #20]
 354:	cbz	w0, 394 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj+0x394>
 358:	ldr	w0, [x19, #16]
 35c:	ldr	x1, [x19, #8]
 360:	lsl	x0, x0, #4
 364:	add	x2, x1, x0
 368:	str	x20, [x1, x0]
 36c:	str	x22, [x2, #8]
 370:	ldr	w0, [x19, #16]
 374:	mov	w1, w0
 378:	add	x1, x1, #0x1
 37c:	ldr	w2, [x19, #20]
 380:	cmp	x1, x2
 384:	b.hi	3ac <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj+0x3ac>  // b.pmore
 388:	add	w0, w0, #0x1
 38c:	str	w0, [x19, #16]
 390:	b	13c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj+0x13c>
 394:	mov	x3, #0x10                  	// #16
 398:	mov	x2, #0x0                   	// #0
 39c:	add	x1, x19, #0x18
 3a0:	mov	x0, x21
 3a4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 3a8:	b	358 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj+0x358>
 3ac:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 3b0:	add	x3, x3, #0x0
 3b4:	mov	w2, #0x43                  	// #67
 3b8:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 3bc:	add	x1, x1, #0x0
 3c0:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 3c4:	add	x0, x0, #0x0
 3c8:	bl	0 <__assert_fail>
 3cc:	mov	w8, w22
 3d0:	ldr	w0, [x0, #16]
 3d4:	cmp	x0, w22, uxtw
 3d8:	b.ls	4f4 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj+0x4f4>  // b.plast
 3dc:	lsl	x5, x8, #4
 3e0:	ldr	x0, [x19, #8]
 3e4:	add	x3, x0, x5
 3e8:	ldr	x2, [x0, x5]
 3ec:	ldr	w4, [x3, #8]
 3f0:	cmp	w4, #0x1
 3f4:	b.eq	514 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj+0x514>  // b.none
 3f8:	ldr	w0, [x3, #12]
 3fc:	adds	w0, w0, #0x1
 400:	b.cs	534 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj+0x534>  // b.hs, b.nlast
 404:	cmp	w4, #0xc
 408:	b.hi	554 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj+0x554>  // b.pmore
 40c:	sub	w1, w4, #0x1
 410:	cmp	w1, #0xc
 414:	b.hi	574 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj+0x574>  // b.pmore
 418:	cmp	w4, w0
 41c:	b.eq	458 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj+0x458>  // b.none
 420:	sub	w3, w0, #0x1
 424:	add	x6, x2, x3, lsl #3
 428:	mov	w1, w0
 42c:	ldr	x7, [x2, x1, lsl #3]
 430:	str	x7, [x2, x3, lsl #3]
 434:	add	x1, x1, #0xc
 438:	ldr	x1, [x2, x1, lsl #3]
 43c:	str	x1, [x6, #96]
 440:	add	w0, w0, #0x1
 444:	cmp	w4, w0
 448:	b.ne	420 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj+0x420>  // b.any
 44c:	ldr	w0, [x19, #16]
 450:	cmp	x8, x0
 454:	b.cs	594 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj+0x594>  // b.hs, b.nlast
 458:	ldr	x0, [x19, #8]
 45c:	add	x0, x0, x5
 460:	ldr	w1, [x0, #8]
 464:	sub	w3, w1, #0x1
 468:	str	w3, [x0, #8]
 46c:	sub	w0, w20, #0x2
 470:	ldr	w4, [x19, #16]
 474:	cmp	x0, x4
 478:	b.cs	5b4 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj+0x5b4>  // b.hs, b.nlast
 47c:	lsl	x0, x0, #4
 480:	ldr	x4, [x19, #8]
 484:	add	x6, x4, x0
 488:	ldr	w6, [x6, #12]
 48c:	ldr	x4, [x4, x0]
 490:	sub	w1, w1, #0x2
 494:	ldr	x0, [x4, x6, lsl #3]
 498:	mov	w7, w1
 49c:	tst	x1, #0xffffffc0
 4a0:	b.ne	5d4 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj+0x5d4>  // b.any
 4a4:	and	x0, x0, #0xffffffffffffffc0
 4a8:	orr	x0, x0, x7
 4ac:	str	x0, [x4, x6, lsl #3]
 4b0:	ldr	w0, [x19, #16]
 4b4:	cmp	x8, x0
 4b8:	b.cs	5f4 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj+0x5f4>  // b.hs, b.nlast
 4bc:	ldr	x0, [x19, #8]
 4c0:	add	x5, x0, x5
 4c4:	ldr	w0, [x5, #12]
 4c8:	cmp	w0, w3
 4cc:	b.ne	bc <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj+0xbc>  // b.any
 4d0:	add	x1, x2, w1, uxtw #3
 4d4:	ldr	x2, [x1, #96]
 4d8:	mov	w1, w22
 4dc:	mov	x0, x19
 4e0:	bl	0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 4e4:	mov	w1, w22
 4e8:	mov	x0, x21
 4ec:	bl	0 <_ZN4llvm15IntervalMapImpl4Path9moveRightEj>
 4f0:	b	bc <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj+0xbc>
 4f4:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 4f8:	add	x3, x3, #0x0
 4fc:	mov	w2, #0x99                  	// #153
 500:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 504:	add	x1, x1, #0x0
 508:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 50c:	add	x0, x0, #0x0
 510:	bl	0 <__assert_fail>
 514:	ldr	x0, [x1, #200]
 518:	ldr	x1, [x0]
 51c:	str	x1, [x2]
 520:	str	x2, [x0]
 524:	mov	w1, w22
 528:	mov	x0, x19
 52c:	bl	0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 530:	b	bc <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj+0xbc>
 534:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 538:	add	x3, x3, #0x0
 53c:	mov	w2, #0xf8                  	// #248
 540:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 544:	add	x1, x1, #0x0
 548:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 54c:	add	x0, x0, #0x0
 550:	bl	0 <__assert_fail>
 554:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 558:	add	x3, x3, #0x0
 55c:	mov	w2, #0xeb                  	// #235
 560:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 564:	add	x1, x1, #0x0
 568:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 56c:	add	x0, x0, #0x0
 570:	bl	0 <__assert_fail>
 574:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 578:	add	x3, x3, #0x0
 57c:	mov	w2, #0xec                  	// #236
 580:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 584:	add	x1, x1, #0x0
 588:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 58c:	add	x0, x0, #0x0
 590:	bl	0 <__assert_fail>
 594:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 598:	add	x3, x3, #0x0
 59c:	mov	w2, #0x99                  	// #153
 5a0:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 5a4:	add	x1, x1, #0x0
 5a8:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 5ac:	add	x0, x0, #0x0
 5b0:	bl	0 <__assert_fail>
 5b4:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 5b8:	add	x3, x3, #0x0
 5bc:	mov	w2, #0x99                  	// #153
 5c0:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 5c4:	add	x1, x1, #0x0
 5c8:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 5cc:	add	x0, x0, #0x0
 5d0:	bl	0 <__assert_fail>
 5d4:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 5d8:	add	x3, x3, #0x0
 5dc:	mov	w2, #0xba                  	// #186
 5e0:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 5e4:	add	x1, x1, #0x0
 5e8:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 5ec:	add	x0, x0, #0x0
 5f0:	bl	0 <__assert_fail>
 5f4:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 5f8:	add	x3, x3, #0x0
 5fc:	mov	w2, #0x95                  	// #149
 600:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 604:	add	x1, x1, #0x0
 608:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 60c:	add	x0, x0, #0x0
 610:	bl	0 <__assert_fail>
 614:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 618:	add	x3, x3, #0x0
 61c:	mov	w2, #0x99                  	// #153
 620:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 624:	add	x1, x1, #0x0
 628:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 62c:	add	x0, x0, #0x0
 630:	bl	0 <__assert_fail>
 634:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 638:	add	x3, x3, #0x0
 63c:	mov	w2, #0x95                  	// #149
 640:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 644:	add	x1, x1, #0x0
 648:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 64c:	add	x0, x0, #0x0
 650:	bl	0 <__assert_fail>
 654:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 658:	add	x3, x3, #0x0
 65c:	mov	w2, #0x95                  	// #149
 660:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 664:	add	x1, x1, #0x0
 668:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator9eraseNodeEj>
 66c:	add	x0, x0, #0x0
 670:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj:

0000000000000000 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>:
   0:	stp	x29, x30, [sp, #-128]!
   4:	mov	x29, sp
   8:	subs	w17, w1, #0x1
   c:	b.eq	6ac <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x6ac>  // b.none
  10:	stp	x19, x20, [sp, #16]
  14:	stp	x21, x22, [sp, #32]
  18:	stp	x23, x24, [sp, #48]
  1c:	stp	x25, x26, [sp, #64]
  20:	sub	w14, w1, #0x2
  24:	add	x12, x0, w17, sxtw #3
  28:	sbfiz	x11, x17, #2, #32
  2c:	add	x20, sp, #0x58
  30:	add	x19, sp, #0x64
  34:	mov	w13, #0x8                   	// #8
  38:	add	x30, sp, #0x60
  3c:	add	x18, sp, #0x5c
  40:	add	x16, sp, #0x6c
  44:	add	x15, sp, #0x68
  48:	b	334 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x334>
  4c:	adrp	x3, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
  50:	add	x3, x3, #0x0
  54:	mov	w2, #0x102                 	// #258
  58:	adrp	x1, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
  5c:	add	x1, x1, #0x0
  60:	adrp	x0, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
  64:	add	x0, x0, #0x0
  68:	bl	0 <__assert_fail>
  6c:	adrp	x3, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
  70:	add	x3, x3, #0x0
  74:	mov	w2, #0xeb                  	// #235
  78:	adrp	x1, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
  7c:	add	x1, x1, #0x0
  80:	adrp	x0, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
  84:	add	x0, x0, #0x0
  88:	bl	0 <__assert_fail>
  8c:	adrp	x3, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
  90:	add	x3, x3, #0x0
  94:	mov	w2, #0xec                  	// #236
  98:	adrp	x1, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
  9c:	add	x1, x1, #0x0
  a0:	adrp	x0, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
  a4:	add	x0, x0, #0x0
  a8:	bl	0 <__assert_fail>
  ac:	neg	w5, w5
  b0:	str	w5, [sp, #100]
  b4:	cmp	w7, w5
  b8:	csel	x5, x19, x20, cs  // cs = hs, nlast
  bc:	sub	w9, w13, w6
  c0:	str	w9, [sp, #96]
  c4:	ldr	w21, [x5]
  c8:	cmp	w9, w21
  cc:	csel	x5, x30, x5, cc  // cc = lo, ul, last
  d0:	ldr	w5, [x5]
  d4:	cmp	w5, #0x8
  d8:	b.hi	2c4 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x2c4>  // b.pmore
  dc:	add	w25, w6, w5
  e0:	cmp	w25, #0x8
  e4:	b.hi	2e4 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x2e4>  // b.pmore
  e8:	cbz	w5, 730 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x730>
  ec:	mov	x9, x4
  f0:	add	x22, x4, #0x80
  f4:	ldr	x24, [x9]
  f8:	ubfiz	x21, x6, #4, #32
  fc:	add	x23, x8, x21
 100:	str	x24, [x8, x21]
 104:	ldr	x21, [x9, #8]
 108:	str	x21, [x23, #8]
 10c:	ldr	x23, [x22], #8
 110:	add	x21, x8, w6, uxtw #3
 114:	str	x23, [x21, #128]
 118:	add	w6, w6, #0x1
 11c:	add	x9, x9, #0x10
 120:	cmp	w25, w6
 124:	b.ne	f4 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0xf4>  // b.any
 128:	sub	w6, w7, w5
 12c:	cmp	w7, #0x8
 130:	b.hi	738 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x738>  // b.pmore
 134:	cmp	w6, #0x8
 138:	b.hi	304 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x304>  // b.pmore
 13c:	cmp	w7, w5
 140:	b.eq	184 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x184>  // b.none
 144:	mov	x8, x4
 148:	add	x21, x4, #0x80
 14c:	mov	w6, w5
 150:	ubfiz	x9, x6, #4, #32
 154:	add	x22, x4, x9
 158:	ldr	x9, [x4, x9]
 15c:	str	x9, [x8]
 160:	ldr	x9, [x22, #8]
 164:	str	x9, [x8, #8]
 168:	add	x9, x4, w6, uxtw #3
 16c:	ldr	x9, [x9, #128]
 170:	str	x9, [x21], #8
 174:	add	w6, w6, #0x1
 178:	add	x8, x8, #0x10
 17c:	cmp	w7, w6
 180:	b.ne	150 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x150>  // b.any
 184:	neg	w5, w5
 188:	ldr	w4, [x2, x10, lsl #2]
 18c:	sub	w4, w4, w5
 190:	str	w4, [x2, x10, lsl #2]
 194:	ldr	w4, [x2, x11]
 198:	add	w5, w5, w4
 19c:	str	w5, [x2, x11]
 1a0:	ldr	w4, [x3, x11]
 1a4:	cmp	w5, w4
 1a8:	b.cs	324 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x324>  // b.hs, b.nlast
 1ac:	sub	x10, x10, #0x1
 1b0:	cmn	w10, #0x1
 1b4:	b.eq	324 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x324>  // b.none
 1b8:	ldr	x4, [x12]
 1bc:	ldr	w7, [x2, x11]
 1c0:	ldr	x8, [x0, x10, lsl #3]
 1c4:	ldr	w6, [x2, x10, lsl #2]
 1c8:	ldr	w5, [x3, x11]
 1cc:	sub	w5, w5, w7
 1d0:	str	w7, [sp, #88]
 1d4:	str	w6, [sp, #92]
 1d8:	cmp	w5, #0x0
 1dc:	b.le	ac <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0xac>
 1e0:	str	w5, [sp, #108]
 1e4:	cmp	w6, w5
 1e8:	csel	x5, x16, x18, cs  // cs = hs, nlast
 1ec:	sub	w9, w13, w7
 1f0:	str	w9, [sp, #104]
 1f4:	ldr	w21, [x5]
 1f8:	cmp	w9, w21
 1fc:	csel	x5, x15, x5, cc  // cc = lo, ul, last
 200:	ldr	w5, [x5]
 204:	add	w9, w7, w5
 208:	cmp	w9, #0x8
 20c:	b.hi	4c <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x4c>  // b.pmore
 210:	sub	w9, w7, #0x1
 214:	cbz	w7, 268 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x268>
 218:	ubfiz	x7, x9, #4, #32
 21c:	add	x7, x4, x7
 220:	add	w22, w5, w9
 224:	ubfiz	x9, x9, #3, #32
 228:	add	x9, x9, #0x80
 22c:	add	x9, x4, x9
 230:	mov	x25, x4
 234:	ubfiz	x23, x22, #4, #32
 238:	add	x24, x4, x23
 23c:	ldr	x26, [x7]
 240:	str	x26, [x4, x23]
 244:	ldr	x23, [x7, #8]
 248:	str	x23, [x24, #8]
 24c:	ldr	x24, [x9], #-8
 250:	add	x23, x4, w22, uxtw #3
 254:	str	x24, [x23, #128]
 258:	sub	w22, w22, #0x1
 25c:	cmp	x7, x25
 260:	sub	x7, x7, #0x10
 264:	b.ne	234 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x234>  // b.any
 268:	sub	w7, w6, w5
 26c:	cmp	w6, #0x8
 270:	b.hi	6c <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x6c>  // b.pmore
 274:	cmp	w5, #0x8
 278:	b.hi	8c <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x8c>  // b.pmore
 27c:	cmp	w6, w7
 280:	b.eq	188 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x188>  // b.none
 284:	mov	x9, x4
 288:	add	x4, x4, #0x80
 28c:	ubfiz	x21, x7, #4, #32
 290:	add	x22, x8, x21
 294:	ldr	x21, [x8, x21]
 298:	str	x21, [x9]
 29c:	ldr	x21, [x22, #8]
 2a0:	str	x21, [x9, #8]
 2a4:	add	x21, x8, w7, uxtw #3
 2a8:	ldr	x21, [x21, #128]
 2ac:	str	x21, [x4], #8
 2b0:	add	w7, w7, #0x1
 2b4:	add	x9, x9, #0x10
 2b8:	cmp	w6, w7
 2bc:	b.ne	28c <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x28c>  // b.any
 2c0:	b	188 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x188>
 2c4:	adrp	x3, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 2c8:	add	x3, x3, #0x0
 2cc:	mov	w2, #0xeb                  	// #235
 2d0:	adrp	x1, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 2d4:	add	x1, x1, #0x0
 2d8:	adrp	x0, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 2dc:	add	x0, x0, #0x0
 2e0:	bl	0 <__assert_fail>
 2e4:	adrp	x3, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 2e8:	add	x3, x3, #0x0
 2ec:	mov	w2, #0xec                  	// #236
 2f0:	adrp	x1, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 2f4:	add	x1, x1, #0x0
 2f8:	adrp	x0, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 2fc:	add	x0, x0, #0x0
 300:	bl	0 <__assert_fail>
 304:	adrp	x3, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 308:	add	x3, x3, #0x0
 30c:	mov	w2, #0xec                  	// #236
 310:	adrp	x1, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 314:	add	x1, x1, #0x0
 318:	adrp	x0, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 31c:	add	x0, x0, #0x0
 320:	bl	0 <__assert_fail>
 324:	cbz	w14, 354 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x354>
 328:	sub	w14, w14, #0x1
 32c:	sub	x12, x12, #0x8
 330:	sub	x11, x11, #0x4
 334:	ldr	w5, [x2, x11]
 338:	ldr	w4, [x3, x11]
 33c:	cmp	w5, w4
 340:	b.eq	324 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x324>  // b.none
 344:	cmn	w14, #0x1
 348:	b.eq	328 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x328>  // b.none
 34c:	sxtw	x10, w14
 350:	b	1b8 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x1b8>
 354:	cbz	w1, 758 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x758>
 358:	mov	x11, #0x0                   	// #0
 35c:	cbz	w17, 380 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x380>
 360:	add	x21, sp, #0x58
 364:	add	x20, sp, #0x74
 368:	mov	w14, #0x8                   	// #8
 36c:	add	x19, sp, #0x70
 370:	add	x18, sp, #0x5c
 374:	add	x16, sp, #0x7c
 378:	add	x15, sp, #0x78
 37c:	b	67c <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x67c>
 380:	ldp	x19, x20, [sp, #16]
 384:	ldp	x21, x22, [sp, #32]
 388:	ldp	x23, x24, [sp, #48]
 38c:	ldp	x25, x26, [sp, #64]
 390:	b	6ac <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x6ac>
 394:	adrp	x3, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 398:	add	x3, x3, #0x0
 39c:	mov	w2, #0x102                 	// #258
 3a0:	adrp	x1, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 3a4:	add	x1, x1, #0x0
 3a8:	adrp	x0, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 3ac:	add	x0, x0, #0x0
 3b0:	bl	0 <__assert_fail>
 3b4:	adrp	x3, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 3b8:	add	x3, x3, #0x0
 3bc:	mov	w2, #0xeb                  	// #235
 3c0:	adrp	x1, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 3c4:	add	x1, x1, #0x0
 3c8:	adrp	x0, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 3cc:	add	x0, x0, #0x0
 3d0:	bl	0 <__assert_fail>
 3d4:	adrp	x3, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 3d8:	add	x3, x3, #0x0
 3dc:	mov	w2, #0xec                  	// #236
 3e0:	adrp	x1, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 3e4:	add	x1, x1, #0x0
 3e8:	adrp	x0, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 3ec:	add	x0, x0, #0x0
 3f0:	bl	0 <__assert_fail>
 3f4:	neg	w7, w7
 3f8:	str	w7, [sp, #116]
 3fc:	cmp	w22, w7
 400:	csel	x7, x20, x21, cs  // cs = hs, nlast
 404:	sub	w8, w14, w5
 408:	str	w8, [sp, #112]
 40c:	ldr	w9, [x7]
 410:	cmp	w8, w9
 414:	csel	x7, x19, x7, cc  // cc = lo, ul, last
 418:	ldr	w9, [x7]
 41c:	cmp	w9, #0x8
 420:	b.hi	610 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x610>  // b.pmore
 424:	add	w24, w5, w9
 428:	cmp	w24, #0x8
 42c:	b.hi	630 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x630>  // b.pmore
 430:	cbz	w9, 708 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x708>
 434:	mov	x7, x4
 438:	add	x10, x4, #0x80
 43c:	ldr	x30, [x7]
 440:	ubfiz	x8, x5, #4, #32
 444:	add	x23, x6, x8
 448:	str	x30, [x6, x8]
 44c:	ldr	x8, [x7, #8]
 450:	str	x8, [x23, #8]
 454:	ldr	x23, [x10], #8
 458:	add	x8, x6, w5, uxtw #3
 45c:	str	x23, [x8, #128]
 460:	add	w5, w5, #0x1
 464:	add	x7, x7, #0x10
 468:	cmp	w24, w5
 46c:	b.ne	43c <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x43c>  // b.any
 470:	sub	w5, w22, w9
 474:	cmp	w22, #0x8
 478:	b.hi	710 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x710>  // b.pmore
 47c:	cmp	w5, #0x8
 480:	b.hi	650 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x650>  // b.pmore
 484:	cmp	w22, w9
 488:	b.eq	4cc <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x4cc>  // b.none
 48c:	mov	x6, x4
 490:	add	x8, x4, #0x80
 494:	mov	w5, w9
 498:	ubfiz	x7, x5, #4, #32
 49c:	add	x10, x4, x7
 4a0:	ldr	x7, [x4, x7]
 4a4:	str	x7, [x6]
 4a8:	ldr	x7, [x10, #8]
 4ac:	str	x7, [x6, #8]
 4b0:	add	x7, x4, w5, uxtw #3
 4b4:	ldr	x7, [x7, #128]
 4b8:	str	x7, [x8], #8
 4bc:	add	w5, w5, #0x1
 4c0:	add	x6, x6, #0x10
 4c4:	cmp	w22, w5
 4c8:	b.ne	498 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x498>  // b.any
 4cc:	neg	w9, w9
 4d0:	ldr	w4, [x2, x12, lsl #2]
 4d4:	add	w4, w4, w9
 4d8:	str	w4, [x2, x12, lsl #2]
 4dc:	ldr	w4, [x2, x11, lsl #2]
 4e0:	sub	w9, w4, w9
 4e4:	str	w9, [x2, x11, lsl #2]
 4e8:	ldr	w4, [x3, x11, lsl #2]
 4ec:	cmp	w9, w4
 4f0:	b.cs	670 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x670>  // b.hs, b.nlast
 4f4:	add	w13, w13, #0x1
 4f8:	cmp	w1, w13
 4fc:	b.eq	670 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x670>  // b.none
 500:	mov	w12, w13
 504:	ldr	x4, [x0, x12, lsl #3]
 508:	ldr	w22, [x2, x12, lsl #2]
 50c:	ldr	x6, [x0, x11, lsl #3]
 510:	ldr	w5, [x2, x11, lsl #2]
 514:	ldr	w7, [x3, x11, lsl #2]
 518:	sub	w7, w5, w7
 51c:	str	w22, [sp, #88]
 520:	str	w5, [sp, #92]
 524:	cmp	w7, #0x0
 528:	b.le	3f4 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x3f4>
 52c:	str	w7, [sp, #124]
 530:	cmp	w5, w7
 534:	csel	x7, x16, x18, cs  // cs = hs, nlast
 538:	sub	w8, w14, w22
 53c:	str	w8, [sp, #120]
 540:	ldr	w9, [x7]
 544:	cmp	w8, w9
 548:	csel	x7, x15, x7, cc  // cc = lo, ul, last
 54c:	ldr	w9, [x7]
 550:	add	w7, w22, w9
 554:	cmp	w7, #0x8
 558:	b.hi	394 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x394>  // b.pmore
 55c:	sub	w10, w22, #0x1
 560:	cbz	w22, 5b4 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x5b4>
 564:	ubfiz	x8, x10, #4, #32
 568:	add	x8, x4, x8
 56c:	add	w23, w10, w9
 570:	ubfiz	x10, x10, #3, #32
 574:	add	x10, x10, #0x80
 578:	add	x10, x4, x10
 57c:	mov	x24, x4
 580:	ubfiz	x22, x23, #4, #32
 584:	add	x30, x4, x22
 588:	ldr	x25, [x8]
 58c:	str	x25, [x4, x22]
 590:	ldr	x22, [x8, #8]
 594:	str	x22, [x30, #8]
 598:	ldr	x30, [x10], #-8
 59c:	add	x22, x4, w23, uxtw #3
 5a0:	str	x30, [x22, #128]
 5a4:	sub	w23, w23, #0x1
 5a8:	cmp	x24, x8
 5ac:	sub	x8, x8, #0x10
 5b0:	b.ne	580 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x580>  // b.any
 5b4:	sub	w7, w5, w9
 5b8:	cmp	w5, #0x8
 5bc:	b.hi	3b4 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x3b4>  // b.pmore
 5c0:	cmp	w9, #0x8
 5c4:	b.hi	3d4 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x3d4>  // b.pmore
 5c8:	cmp	w5, w7
 5cc:	b.eq	4d0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x4d0>  // b.none
 5d0:	mov	x8, x4
 5d4:	add	x4, x4, #0x80
 5d8:	ubfiz	x10, x7, #4, #32
 5dc:	add	x22, x6, x10
 5e0:	ldr	x10, [x6, x10]
 5e4:	str	x10, [x8]
 5e8:	ldr	x10, [x22, #8]
 5ec:	str	x10, [x8, #8]
 5f0:	add	x10, x6, w7, uxtw #3
 5f4:	ldr	x10, [x10, #128]
 5f8:	str	x10, [x4], #8
 5fc:	add	w7, w7, #0x1
 600:	add	x8, x8, #0x10
 604:	cmp	w5, w7
 608:	b.ne	5d8 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x5d8>  // b.any
 60c:	b	4d0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x4d0>
 610:	adrp	x3, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 614:	add	x3, x3, #0x0
 618:	mov	w2, #0xeb                  	// #235
 61c:	adrp	x1, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 620:	add	x1, x1, #0x0
 624:	adrp	x0, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 628:	add	x0, x0, #0x0
 62c:	bl	0 <__assert_fail>
 630:	adrp	x3, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 634:	add	x3, x3, #0x0
 638:	mov	w2, #0xec                  	// #236
 63c:	adrp	x1, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 640:	add	x1, x1, #0x0
 644:	adrp	x0, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 648:	add	x0, x0, #0x0
 64c:	bl	0 <__assert_fail>
 650:	adrp	x3, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 654:	add	x3, x3, #0x0
 658:	mov	w2, #0xec                  	// #236
 65c:	adrp	x1, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 660:	add	x1, x1, #0x0
 664:	adrp	x0, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 668:	add	x0, x0, #0x0
 66c:	bl	0 <__assert_fail>
 670:	add	x11, x11, #0x1
 674:	cmp	w17, w11
 678:	b.eq	69c <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x69c>  // b.none
 67c:	ldr	w5, [x2, x11, lsl #2]
 680:	ldr	w4, [x3, x11, lsl #2]
 684:	cmp	w5, w4
 688:	b.eq	670 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x670>  // b.none
 68c:	add	w13, w11, #0x1
 690:	cmp	w1, w13
 694:	b.ne	500 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x500>  // b.any
 698:	b	670 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x670>
 69c:	ldp	x19, x20, [sp, #16]
 6a0:	ldp	x21, x22, [sp, #32]
 6a4:	ldp	x23, x24, [sp, #48]
 6a8:	ldp	x25, x26, [sp, #64]
 6ac:	mov	w0, #0x0                   	// #0
 6b0:	mov	w4, w0
 6b4:	ldr	w5, [x2, x4, lsl #2]
 6b8:	ldr	w4, [x3, x4, lsl #2]
 6bc:	cmp	w5, w4
 6c0:	b.ne	6d8 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x6d8>  // b.any
 6c4:	add	w0, w0, #0x1
 6c8:	cmp	w1, w0
 6cc:	b.ne	6b0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x6b0>  // b.any
 6d0:	ldp	x29, x30, [sp], #128
 6d4:	ret
 6d8:	stp	x19, x20, [sp, #16]
 6dc:	stp	x21, x22, [sp, #32]
 6e0:	stp	x23, x24, [sp, #48]
 6e4:	stp	x25, x26, [sp, #64]
 6e8:	adrp	x3, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 6ec:	add	x3, x3, #0x0
 6f0:	mov	w2, #0x176                 	// #374
 6f4:	adrp	x1, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 6f8:	add	x1, x1, #0x0
 6fc:	adrp	x0, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 700:	add	x0, x0, #0x0
 704:	bl	0 <__assert_fail>
 708:	cmp	w22, #0x8
 70c:	b.ls	484 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x484>  // b.plast
 710:	adrp	x3, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 714:	add	x3, x3, #0x0
 718:	mov	w2, #0xeb                  	// #235
 71c:	adrp	x1, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 720:	add	x1, x1, #0x0
 724:	adrp	x0, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 728:	add	x0, x0, #0x0
 72c:	bl	0 <__assert_fail>
 730:	cmp	w7, #0x8
 734:	b.ls	13c <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x13c>  // b.plast
 738:	adrp	x3, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 73c:	add	x3, x3, #0x0
 740:	mov	w2, #0xeb                  	// #235
 744:	adrp	x1, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 748:	add	x1, x1, #0x0
 74c:	adrp	x0, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 750:	add	x0, x0, #0x0
 754:	bl	0 <__assert_fail>
 758:	ldp	x19, x20, [sp, #16]
 75c:	ldp	x21, x22, [sp, #32]
 760:	ldp	x23, x24, [sp, #48]
 764:	ldp	x25, x26, [sp, #64]
 768:	b	6d0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_8LeafNodeImlLj8ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x6d0>

Disassembly of section .text._ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj:

0000000000000000 <_ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x19, x0
  14:	mov	w20, w1
  18:	cmp	w1, #0x1
  1c:	b.ls	38c <_ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj+0x38c>  // b.plast
  20:	sub	w20, w1, #0x1
  24:	orr	x20, x20, x20, lsr #1
  28:	orr	x20, x20, x20, lsr #2
  2c:	orr	x20, x20, x20, lsr #4
  30:	orr	x20, x20, x20, lsr #8
  34:	orr	x20, x20, x20, lsr #16
  38:	add	x20, x20, #0x1
  3c:	cmp	w20, #0x40
  40:	mov	w1, #0x40                  	// #64
  44:	csel	w20, w20, w1, cs  // cs = hs, nlast
  48:	ldrb	w0, [x0, #8]
  4c:	tbz	w0, #0, 414 <_ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj+0x414>
  50:	add	x22, x19, #0x10
  54:	ldr	x0, [x19, #16]
  58:	add	x21, sp, #0x30
  5c:	cmn	x0, #0x3
  60:	b.ls	444 <_ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj+0x444>  // b.plast
  64:	ldrb	w0, [x19, #8]
  68:	and	w0, w0, #0xfffffffe
  6c:	strb	w0, [x19, #8]
  70:	ubfiz	x0, x20, #4, #32
  74:	bl	0 <_Znwm>
  78:	str	x0, [x19, #16]
  7c:	str	w20, [x19, #24]
  80:	ldr	w0, [x19, #8]
  84:	and	w0, w0, #0x1
  88:	str	w0, [x19, #8]
  8c:	str	wzr, [x19, #12]
  90:	cbnz	w0, d4 <_ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj+0xd4>
  94:	ldr	w1, [x19, #24]
  98:	sub	w0, w1, #0x1
  9c:	tst	w0, w1
  a0:	b.ne	b4 <_ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj+0xb4>  // b.any
  a4:	ldr	x0, [x19, #16]
  a8:	b	dc <_ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj+0xdc>
  ac:	add	x21, sp, #0x40
  b0:	b	80 <_ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj+0x80>
  b4:	adrp	x3, 0 <_ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj>
  b8:	add	x3, x3, #0x0
  bc:	mov	w2, #0x15b                 	// #347
  c0:	adrp	x1, 0 <_ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj>
  c4:	add	x1, x1, #0x0
  c8:	adrp	x0, 0 <_ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj>
  cc:	add	x0, x0, #0x0
  d0:	bl	0 <__assert_fail>
  d4:	mov	x0, x22
  d8:	mov	w1, #0x1                   	// #1
  dc:	ubfiz	x1, x1, #4, #32
  e0:	add	x1, x0, x1
  e4:	mov	x2, #0xffffffffffffffff    	// #-1
  e8:	cmp	x0, x1
  ec:	b.eq	fc <_ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj+0xfc>  // b.none
  f0:	str	x2, [x0], #16
  f4:	cmp	x1, x0
  f8:	b.ne	f0 <_ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj+0xf0>  // b.any
  fc:	add	x0, sp, #0x30
 100:	cmp	x21, x0
 104:	b.eq	370 <_ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj+0x370>  // b.none
 108:	mov	x2, x0
 10c:	mov	w7, #0x25                  	// #37
 110:	mov	w6, #0x1                   	// #1
 114:	b	1b0 <_ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj+0x1b0>
 118:	mov	x4, x22
 11c:	mov	w0, w6
 120:	sub	w1, w0, #0x1
 124:	mul	w0, w3, w7
 128:	and	w9, w0, w1
 12c:	and	w0, w0, w1
 130:	lsl	x0, x0, #4
 134:	add	x8, x4, x0
 138:	ldr	x5, [x4, x0]
 13c:	cmp	x3, x5
 140:	b.ne	164 <_ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj+0x164>  // b.any
 144:	adrp	x3, 0 <_ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj>
 148:	add	x3, x3, #0x0
 14c:	mov	w2, #0x17a                 	// #378
 150:	adrp	x1, 0 <_ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj>
 154:	add	x1, x1, #0x0
 158:	adrp	x0, 0 <_ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj>
 15c:	add	x0, x0, #0x0
 160:	bl	0 <__assert_fail>
 164:	mov	w10, w6
 168:	mov	x0, #0x0                   	// #0
 16c:	cmn	x5, #0x1
 170:	b.ne	1d8 <_ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj+0x1d8>  // b.any
 174:	cmp	x0, #0x0
 178:	csel	x0, x0, x8, ne  // ne = any
 17c:	str	x3, [x0]
 180:	ldr	x1, [x2, #8]
 184:	str	x1, [x0, #8]
 188:	ldr	w0, [x19, #8]
 18c:	lsr	w0, w0, #1
 190:	adds	w0, w0, #0x1
 194:	b.mi	210 <_ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj+0x210>  // b.first
 198:	ldr	w1, [x19, #8]
 19c:	bfi	w1, w0, #1, #31
 1a0:	str	w1, [x19, #8]
 1a4:	add	x2, x2, #0x10
 1a8:	cmp	x21, x2
 1ac:	b.eq	370 <_ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj+0x370>  // b.none
 1b0:	ldr	x3, [x2]
 1b4:	cmn	x3, #0x3
 1b8:	b.hi	1a4 <_ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj+0x1a4>  // b.pmore
 1bc:	ldrb	w0, [x19, #8]
 1c0:	tbnz	w0, #0, 118 <_ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj+0x118>
 1c4:	ldr	x4, [x19, #16]
 1c8:	ldr	w0, [x19, #24]
 1cc:	cbnz	w0, 120 <_ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj+0x120>
 1d0:	mov	x0, #0x0                   	// #0
 1d4:	b	17c <_ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj+0x17c>
 1d8:	cmp	x0, #0x0
 1dc:	ccmn	x5, #0x2, #0x0, eq  // eq = none
 1e0:	csel	x0, x0, x8, ne  // ne = any
 1e4:	add	w11, w10, #0x1
 1e8:	add	w10, w10, w9
 1ec:	and	w9, w1, w10
 1f0:	and	w10, w1, w10
 1f4:	lsl	x5, x10, #4
 1f8:	add	x8, x4, x5
 1fc:	ldr	x5, [x4, x5]
 200:	cmp	x3, x5
 204:	b.eq	144 <_ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj+0x144>  // b.none
 208:	mov	w10, w11
 20c:	b	16c <_ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj+0x16c>
 210:	adrp	x3, 0 <_ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj>
 214:	add	x3, x3, #0x0
 218:	mov	w2, #0x441                 	// #1089
 21c:	adrp	x1, 0 <_ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj>
 220:	add	x1, x1, #0x0
 224:	adrp	x0, 0 <_ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj>
 228:	add	x0, x0, #0x0
 22c:	bl	0 <__assert_fail>
 230:	adrp	x3, 0 <_ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj>
 234:	add	x3, x3, #0x0
 238:	mov	w2, #0x15b                 	// #347
 23c:	adrp	x1, 0 <_ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj>
 240:	add	x1, x1, #0x0
 244:	adrp	x0, 0 <_ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj>
 248:	add	x0, x0, #0x0
 24c:	bl	0 <__assert_fail>
 250:	ldr	x5, [x19, #16]
 254:	ldr	w0, [x19, #24]
 258:	cbnz	w0, 2b0 <_ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj+0x2b0>
 25c:	mov	x0, #0x0                   	// #0
 260:	str	x4, [x0]
 264:	ldr	x2, [x3, #8]
 268:	str	x2, [x0, #8]
 26c:	ldr	w0, [x19, #8]
 270:	lsr	w0, w0, #1
 274:	adds	w0, w0, #0x1
 278:	b.mi	348 <_ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj+0x348>  // b.first
 27c:	ldr	w2, [x19, #8]
 280:	bfi	w2, w0, #1, #31
 284:	str	w2, [x19, #8]
 288:	add	x3, x3, #0x10
 28c:	cmp	x7, x3
 290:	b.eq	368 <_ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj+0x368>  // b.none
 294:	ldr	x4, [x3]
 298:	cmn	x4, #0x3
 29c:	b.hi	288 <_ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj+0x288>  // b.pmore
 2a0:	ldrb	w0, [x19, #8]
 2a4:	tbz	w0, #0, 250 <_ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj+0x250>
 2a8:	mov	x5, x9
 2ac:	mov	w0, w8
 2b0:	sub	w2, w0, #0x1
 2b4:	mul	w0, w4, w10
 2b8:	and	w12, w0, w2
 2bc:	and	w0, w0, w2
 2c0:	lsl	x0, x0, #4
 2c4:	add	x11, x5, x0
 2c8:	ldr	x6, [x5, x0]
 2cc:	cmp	x6, x4
 2d0:	b.ne	2f4 <_ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj+0x2f4>  // b.any
 2d4:	adrp	x3, 0 <_ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj>
 2d8:	add	x3, x3, #0x0
 2dc:	mov	w2, #0x17a                 	// #378
 2e0:	adrp	x1, 0 <_ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj>
 2e4:	add	x1, x1, #0x0
 2e8:	adrp	x0, 0 <_ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj>
 2ec:	add	x0, x0, #0x0
 2f0:	bl	0 <__assert_fail>
 2f4:	mov	w13, w8
 2f8:	mov	x0, #0x0                   	// #0
 2fc:	cmn	x6, #0x1
 300:	b.ne	310 <_ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj+0x310>  // b.any
 304:	cmp	x0, #0x0
 308:	csel	x0, x0, x11, ne  // ne = any
 30c:	b	260 <_ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj+0x260>
 310:	cmp	x0, #0x0
 314:	ccmn	x6, #0x2, #0x0, eq  // eq = none
 318:	csel	x0, x0, x11, ne  // ne = any
 31c:	add	w14, w13, #0x1
 320:	add	w13, w12, w13
 324:	and	w12, w2, w13
 328:	and	w13, w2, w13
 32c:	lsl	x6, x13, #4
 330:	add	x11, x5, x6
 334:	ldr	x6, [x5, x6]
 338:	cmp	x4, x6
 33c:	b.eq	2d4 <_ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj+0x2d4>  // b.none
 340:	mov	w13, w14
 344:	b	2fc <_ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj+0x2fc>
 348:	adrp	x3, 0 <_ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj>
 34c:	add	x3, x3, #0x0
 350:	mov	w2, #0x441                 	// #1089
 354:	adrp	x1, 0 <_ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj>
 358:	add	x1, x1, #0x0
 35c:	adrp	x0, 0 <_ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj>
 360:	add	x0, x0, #0x0
 364:	bl	0 <__assert_fail>
 368:	mov	x0, x21
 36c:	bl	0 <_ZdlPvm>
 370:	ldp	x19, x20, [sp, #16]
 374:	ldp	x21, x22, [sp, #32]
 378:	ldp	x29, x30, [sp], #64
 37c:	ret
 380:	add	x0, x19, #0x10
 384:	mov	w2, #0x1                   	// #1
 388:	b	3d8 <_ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj+0x3d8>
 38c:	ldrb	w0, [x0, #8]
 390:	tbnz	w0, #0, 430 <_ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj+0x430>
 394:	ldr	x21, [x19, #16]
 398:	ldr	w22, [x19, #24]
 39c:	ldrb	w0, [x19, #8]
 3a0:	orr	w0, w0, #0x1
 3a4:	strb	w0, [x19, #8]
 3a8:	ubfiz	x1, x22, #4, #32
 3ac:	add	x7, x21, x1
 3b0:	ldr	w0, [x19, #8]
 3b4:	and	w0, w0, #0x1
 3b8:	str	w0, [x19, #8]
 3bc:	str	wzr, [x19, #12]
 3c0:	cbnz	w0, 380 <_ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj+0x380>
 3c4:	ldr	w2, [x19, #24]
 3c8:	sub	w0, w2, #0x1
 3cc:	tst	w0, w2
 3d0:	b.ne	230 <_ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj+0x230>  // b.any
 3d4:	ldr	x0, [x19, #16]
 3d8:	ubfiz	x2, x2, #4, #32
 3dc:	add	x2, x0, x2
 3e0:	mov	x3, #0xffffffffffffffff    	// #-1
 3e4:	cmp	x0, x2
 3e8:	b.eq	3f8 <_ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj+0x3f8>  // b.none
 3ec:	str	x3, [x0], #16
 3f0:	cmp	x2, x0
 3f4:	b.ne	3ec <_ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj+0x3ec>  // b.any
 3f8:	cmp	x7, x21
 3fc:	b.eq	368 <_ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj+0x368>  // b.none
 400:	mov	x3, x21
 404:	mov	w10, #0x25                  	// #37
 408:	mov	w8, #0x1                   	// #1
 40c:	add	x9, x19, #0x10
 410:	b	294 <_ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj+0x294>
 414:	ldr	x21, [x19, #16]
 418:	ldr	w22, [x19, #24]
 41c:	ubfiz	x0, x20, #4, #32
 420:	bl	0 <_Znwm>
 424:	str	x0, [x19, #16]
 428:	str	w20, [x19, #24]
 42c:	b	3a8 <_ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj+0x3a8>
 430:	add	x22, x19, #0x10
 434:	ldr	x0, [x19, #16]
 438:	add	x21, sp, #0x30
 43c:	cmn	x0, #0x3
 440:	b.hi	80 <_ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj+0x80>  // b.pmore
 444:	str	x0, [sp, #48]
 448:	ldr	x0, [x22, #8]
 44c:	str	x0, [sp, #56]
 450:	cmp	w20, #0x1
 454:	b.ls	ac <_ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj+0xac>  // b.plast
 458:	add	x21, sp, #0x40
 45c:	b	64 <_ZN4llvm13SmallDenseMapImmLj1ENS_12DenseMapInfoImEENS_6detail12DenseMapPairImmEEE4growEj+0x64>

Disassembly of section .text._ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE9splitRootEj:

0000000000000000 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE9splitRootEj>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	str	x25, [sp, #64]
  18:	mov	x20, x0
  1c:	mov	w22, w1
  20:	ldr	w21, [x0, #196]
  24:	ldr	x23, [x0, #200]
  28:	ldr	x19, [x23]
  2c:	cbz	x19, 114 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE9splitRootEj+0x114>
  30:	ldr	x0, [x19]
  34:	str	x0, [x23]
  38:	stp	xzr, xzr, [x19]
  3c:	stp	xzr, xzr, [x19, #16]
  40:	stp	xzr, xzr, [x19, #32]
  44:	stp	xzr, xzr, [x19, #48]
  48:	stp	xzr, xzr, [x19, #64]
  4c:	stp	xzr, xzr, [x19, #80]
  50:	stp	xzr, xzr, [x19, #96]
  54:	stp	xzr, xzr, [x19, #112]
  58:	stp	xzr, xzr, [x19, #128]
  5c:	stp	xzr, xzr, [x19, #144]
  60:	stp	xzr, xzr, [x19, #160]
  64:	stp	xzr, xzr, [x19, #176]
  68:	ldr	w0, [x20, #192]
  6c:	cbz	w0, 2bc <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE9splitRootEj+0x2bc>
  70:	cmp	w21, #0xb
  74:	b.hi	2dc <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE9splitRootEj+0x2dc>  // b.pmore
  78:	cbz	w21, 33c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE9splitRootEj+0x33c>
  7c:	sub	w0, w21, #0x1
  80:	add	x0, x0, #0xd
  84:	lsl	x0, x0, #3
  88:	mov	x2, #0x60                  	// #96
  8c:	sub	x4, x19, #0x60
  90:	sub	x3, x20, #0x58
  94:	ldr	x1, [x3, x2]
  98:	str	x1, [x4, x2]
  9c:	ldr	x1, [x20, x2]
  a0:	str	x1, [x19, x2]
  a4:	add	x2, x2, #0x8
  a8:	cmp	x2, x0
  ac:	b.ne	94 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE9splitRootEj+0x94>  // b.any
  b0:	sub	w21, w21, #0x1
  b4:	tst	x19, #0x3f
  b8:	b.ne	344 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE9splitRootEj+0x344>  // b.any
  bc:	and	x19, x19, #0xffffffffffffffc0
  c0:	mov	w0, w21
  c4:	orr	x19, x19, x0
  c8:	and	x1, x19, #0xffffffffffffffc0
  cc:	ldr	w0, [x20, #192]
  d0:	cbz	w0, 2fc <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE9splitRootEj+0x2fc>
  d4:	add	x21, x1, w21, uxtw #3
  d8:	ldr	x1, [x21, #96]
  dc:	str	x1, [x20, #96]
  e0:	str	x19, [x20, #8]
  e4:	mov	w1, #0x1                   	// #1
  e8:	str	w1, [x20, #196]
  ec:	add	w0, w0, w1
  f0:	str	w0, [x20, #192]
  f4:	mov	x0, #0x0                   	// #0
  f8:	bfi	x0, x22, #32, #32
  fc:	ldp	x19, x20, [sp, #16]
 100:	ldp	x21, x22, [sp, #32]
 104:	ldp	x23, x24, [sp, #48]
 108:	ldr	x25, [sp, #64]
 10c:	ldp	x29, x30, [sp], #80
 110:	ret
 114:	ldr	x0, [x23, #88]
 118:	add	x0, x0, #0xc0
 11c:	str	x0, [x23, #88]
 120:	ldr	x1, [x23, #8]
 124:	add	x0, x1, #0x3f
 128:	and	x0, x0, #0xffffffffffffffc0
 12c:	sub	x0, x0, x1
 130:	adds	x3, x0, #0xc0
 134:	b.cs	1dc <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE9splitRootEj+0x1dc>  // b.hs, b.nlast
 138:	ldr	x2, [x23, #16]
 13c:	sub	x2, x2, x1
 140:	cmp	x3, x2
 144:	b.ls	1fc <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE9splitRootEj+0x1fc>  // b.plast
 148:	ldr	w0, [x23, #32]
 14c:	lsr	w1, w0, #7
 150:	cmp	w0, #0xeff
 154:	b.ls	20c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE9splitRootEj+0x20c>  // b.plast
 158:	mov	x0, #0x40000000000         	// #4398046511104
 15c:	bl	0 <malloc>
 160:	mov	x24, x0
 164:	cbz	x0, 23c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE9splitRootEj+0x23c>
 168:	mov	x25, #0x40000000000         	// #4398046511104
 16c:	ldr	w1, [x23, #32]
 170:	ldr	w0, [x23, #36]
 174:	cmp	w1, w0
 178:	b.cs	244 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE9splitRootEj+0x244>  // b.hs, b.nlast
 17c:	ldr	w1, [x23, #32]
 180:	ldr	x0, [x23, #24]
 184:	str	x24, [x0, x1, lsl #3]
 188:	ldr	w0, [x23, #32]
 18c:	mov	w1, w0
 190:	add	x1, x1, #0x1
 194:	ldr	w2, [x23, #36]
 198:	cmp	x1, x2
 19c:	b.hi	25c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE9splitRootEj+0x25c>  // b.pmore
 1a0:	add	w0, w0, #0x1
 1a4:	str	w0, [x23, #32]
 1a8:	str	x24, [x23, #8]
 1ac:	add	x25, x24, x25
 1b0:	str	x25, [x23, #16]
 1b4:	adds	x0, x24, #0x3f
 1b8:	b.cs	27c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE9splitRootEj+0x27c>  // b.hs, b.nlast
 1bc:	and	x0, x0, #0xffffffffffffffc0
 1c0:	add	x1, x0, #0xc0
 1c4:	cmp	x25, x1
 1c8:	b.cc	29c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE9splitRootEj+0x29c>  // b.lo, b.ul, b.last
 1cc:	mov	x19, x0
 1d0:	add	x0, x0, #0xc0
 1d4:	str	x0, [x23, #8]
 1d8:	b	38 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE9splitRootEj+0x38>
 1dc:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE9splitRootEj>
 1e0:	add	x3, x3, #0x0
 1e4:	mov	w2, #0xdc                  	// #220
 1e8:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE9splitRootEj>
 1ec:	add	x1, x1, #0x0
 1f0:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE9splitRootEj>
 1f4:	add	x0, x0, #0x0
 1f8:	bl	0 <__assert_fail>
 1fc:	add	x19, x1, x0
 200:	add	x0, x19, #0xc0
 204:	str	x0, [x23, #8]
 208:	b	38 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE9splitRootEj+0x38>
 20c:	mov	x25, #0x1000                	// #4096
 210:	lsl	x25, x25, x1
 214:	mov	x0, x25
 218:	bl	0 <malloc>
 21c:	mov	x24, x0
 220:	cbnz	x0, 16c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE9splitRootEj+0x16c>
 224:	mov	w1, #0x1                   	// #1
 228:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE9splitRootEj>
 22c:	add	x0, x0, #0x0
 230:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 234:	mov	x24, x19
 238:	b	16c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE9splitRootEj+0x16c>
 23c:	mov	x25, #0x40000000000         	// #4398046511104
 240:	b	224 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE9splitRootEj+0x224>
 244:	mov	x3, #0x8                   	// #8
 248:	mov	x2, #0x0                   	// #0
 24c:	add	x1, x23, #0x28
 250:	add	x0, x23, #0x18
 254:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 258:	b	17c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE9splitRootEj+0x17c>
 25c:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE9splitRootEj>
 260:	add	x3, x3, #0x0
 264:	mov	w2, #0x43                  	// #67
 268:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE9splitRootEj>
 26c:	add	x1, x1, #0x0
 270:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE9splitRootEj>
 274:	add	x0, x0, #0x0
 278:	bl	0 <__assert_fail>
 27c:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE9splitRootEj>
 280:	add	x3, x3, #0x0
 284:	mov	w2, #0xba                  	// #186
 288:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE9splitRootEj>
 28c:	add	x1, x1, #0x0
 290:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE9splitRootEj>
 294:	add	x0, x0, #0x0
 298:	bl	0 <__assert_fail>
 29c:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE9splitRootEj>
 2a0:	add	x3, x3, #0x0
 2a4:	mov	w2, #0x105                 	// #261
 2a8:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE9splitRootEj>
 2ac:	add	x1, x1, #0x0
 2b0:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE9splitRootEj>
 2b4:	add	x0, x0, #0x0
 2b8:	bl	0 <__assert_fail>
 2bc:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE9splitRootEj>
 2c0:	add	x3, x3, #0x0
 2c4:	mov	w2, #0x3e9                 	// #1001
 2c8:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE9splitRootEj>
 2cc:	add	x1, x1, #0x0
 2d0:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE9splitRootEj>
 2d4:	add	x0, x0, #0x0
 2d8:	bl	0 <__assert_fail>
 2dc:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE9splitRootEj>
 2e0:	add	x3, x3, #0x0
 2e4:	mov	w2, #0xeb                  	// #235
 2e8:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE9splitRootEj>
 2ec:	add	x1, x1, #0x0
 2f0:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE9splitRootEj>
 2f4:	add	x0, x0, #0x0
 2f8:	bl	0 <__assert_fail>
 2fc:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE9splitRootEj>
 300:	add	x3, x3, #0x0
 304:	mov	w2, #0x3e9                 	// #1001
 308:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE9splitRootEj>
 30c:	add	x1, x1, #0x0
 310:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE9splitRootEj>
 314:	add	x0, x0, #0x0
 318:	bl	0 <__assert_fail>
 31c:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE9splitRootEj>
 320:	add	x3, x3, #0x0
 324:	mov	w2, #0xba                  	// #186
 328:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE9splitRootEj>
 32c:	add	x1, x1, #0x0
 330:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE9splitRootEj>
 334:	add	x0, x0, #0x0
 338:	bl	0 <__assert_fail>
 33c:	tst	x19, #0x3f
 340:	b.eq	31c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE9splitRootEj+0x31c>  // b.none
 344:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE9splitRootEj>
 348:	add	x3, x3, #0x0
 34c:	mov	w2, #0xb2                  	// #178
 350:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE9splitRootEj>
 354:	add	x1, x1, #0x0
 358:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE9splitRootEj>
 35c:	add	x0, x0, #0x0
 360:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj:

0000000000000000 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	subs	w12, w1, #0x1
   c:	b.eq	5e8 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x5e8>  // b.none
  10:	stp	x19, x20, [sp, #16]
  14:	stp	x21, x22, [sp, #32]
  18:	stp	x23, x24, [sp, #48]
  1c:	sub	w15, w1, #0x2
  20:	add	x13, x0, w12, sxtw #3
  24:	sbfiz	x11, x12, #2, #32
  28:	add	x20, sp, #0x48
  2c:	add	x19, sp, #0x54
  30:	mov	w14, #0xc                   	// #12
  34:	add	x30, sp, #0x50
  38:	add	x18, sp, #0x4c
  3c:	add	x17, sp, #0x5c
  40:	add	x16, sp, #0x58
  44:	b	2d4 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x2d4>
  48:	adrp	x3, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x102                 	// #258
  54:	adrp	x1, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
  58:	add	x1, x1, #0x0
  5c:	adrp	x0, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
  60:	add	x0, x0, #0x0
  64:	bl	0 <__assert_fail>
  68:	adrp	x3, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
  6c:	add	x3, x3, #0x0
  70:	mov	w2, #0xeb                  	// #235
  74:	adrp	x1, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
  78:	add	x1, x1, #0x0
  7c:	adrp	x0, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
  80:	add	x0, x0, #0x0
  84:	bl	0 <__assert_fail>
  88:	adrp	x3, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
  8c:	add	x3, x3, #0x0
  90:	mov	w2, #0xec                  	// #236
  94:	adrp	x1, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
  98:	add	x1, x1, #0x0
  9c:	adrp	x0, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
  a0:	add	x0, x0, #0x0
  a4:	bl	0 <__assert_fail>
  a8:	neg	w5, w5
  ac:	str	w5, [sp, #84]
  b0:	cmp	w7, w5
  b4:	csel	x5, x19, x20, cs  // cs = hs, nlast
  b8:	sub	w9, w14, w6
  bc:	str	w9, [sp, #80]
  c0:	ldr	w10, [x5]
  c4:	cmp	w9, w10
  c8:	csel	x5, x30, x5, cc  // cc = lo, ul, last
  cc:	ldr	w5, [x5]
  d0:	cmp	w5, #0xc
  d4:	b.hi	264 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x264>  // b.pmore
  d8:	add	w23, w6, w5
  dc:	cmp	w23, #0xc
  e0:	b.hi	284 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x284>  // b.pmore
  e4:	cbz	w5, 668 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x668>
  e8:	add	x9, x4, #0x60
  ec:	add	x10, x21, w6, uxtw #3
  f0:	ldur	x22, [x9, #-96]
  f4:	str	x22, [x21, w6, uxtw #3]
  f8:	ldr	x22, [x9], #8
  fc:	str	x22, [x10, #96]
 100:	add	w6, w6, #0x1
 104:	cmp	w23, w6
 108:	b.ne	ec <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0xec>  // b.any
 10c:	sub	w6, w7, w5
 110:	cmp	w7, #0xc
 114:	b.hi	670 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x670>  // b.pmore
 118:	cmp	w6, #0xc
 11c:	b.hi	2a4 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x2a4>  // b.pmore
 120:	cmp	w7, w5
 124:	b.eq	158 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x158>  // b.none
 128:	mov	x10, x4
 12c:	mov	w9, w5
 130:	mov	w6, w9
 134:	ldr	x21, [x4, x6, lsl #3]
 138:	str	x21, [x10]
 13c:	add	x6, x6, #0xc
 140:	ldr	x6, [x4, x6, lsl #3]
 144:	str	x6, [x10, #96]
 148:	add	w9, w9, #0x1
 14c:	add	x10, x10, #0x8
 150:	cmp	w7, w9
 154:	b.ne	130 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x130>  // b.any
 158:	neg	w5, w5
 15c:	ldr	w4, [x2, x8, lsl #2]
 160:	sub	w4, w4, w5
 164:	str	w4, [x2, x8, lsl #2]
 168:	ldr	w4, [x2, x11]
 16c:	add	w5, w5, w4
 170:	str	w5, [x2, x11]
 174:	ldr	w4, [x3, x11]
 178:	cmp	w5, w4
 17c:	b.cs	2c4 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x2c4>  // b.hs, b.nlast
 180:	sub	x8, x8, #0x1
 184:	cmn	w8, #0x1
 188:	b.eq	2c4 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x2c4>  // b.none
 18c:	ldr	x4, [x13]
 190:	ldr	w7, [x2, x11]
 194:	ldr	x21, [x0, x8, lsl #3]
 198:	ldr	w6, [x2, x8, lsl #2]
 19c:	ldr	w5, [x3, x11]
 1a0:	sub	w5, w5, w7
 1a4:	str	w7, [sp, #72]
 1a8:	str	w6, [sp, #76]
 1ac:	cmp	w5, #0x0
 1b0:	b.le	a8 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0xa8>
 1b4:	str	w5, [sp, #92]
 1b8:	cmp	w6, w5
 1bc:	csel	x5, x17, x18, cs  // cs = hs, nlast
 1c0:	sub	w9, w14, w7
 1c4:	str	w9, [sp, #88]
 1c8:	ldr	w10, [x5]
 1cc:	cmp	w9, w10
 1d0:	csel	x5, x16, x5, cc  // cc = lo, ul, last
 1d4:	ldr	w5, [x5]
 1d8:	add	w9, w7, w5
 1dc:	cmp	w9, #0xc
 1e0:	b.hi	48 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x48>  // b.pmore
 1e4:	sub	w9, w7, #0x1
 1e8:	cbz	w7, 21c <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x21c>
 1ec:	add	x10, x4, w9, uxtw #3
 1f0:	add	w7, w5, w9
 1f4:	mov	x23, x4
 1f8:	add	x22, x4, w7, uxtw #3
 1fc:	ldr	x24, [x10]
 200:	str	x24, [x4, w7, uxtw #3]
 204:	ldr	x24, [x10, #96]
 208:	str	x24, [x22, #96]
 20c:	sub	w7, w7, #0x1
 210:	cmp	x23, x10
 214:	sub	x10, x10, #0x8
 218:	b.ne	1f8 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x1f8>  // b.any
 21c:	sub	w7, w6, w5
 220:	cmp	w6, #0xc
 224:	b.hi	68 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x68>  // b.pmore
 228:	cmp	w5, #0xc
 22c:	b.hi	88 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x88>  // b.pmore
 230:	cmp	w6, w7
 234:	b.eq	15c <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x15c>  // b.none
 238:	mov	w9, w7
 23c:	ldr	x10, [x21, x9, lsl #3]
 240:	str	x10, [x4]
 244:	add	x9, x9, #0xc
 248:	ldr	x9, [x21, x9, lsl #3]
 24c:	str	x9, [x4, #96]
 250:	add	w7, w7, #0x1
 254:	add	x4, x4, #0x8
 258:	cmp	w6, w7
 25c:	b.ne	238 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x238>  // b.any
 260:	b	15c <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x15c>
 264:	adrp	x3, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 268:	add	x3, x3, #0x0
 26c:	mov	w2, #0xeb                  	// #235
 270:	adrp	x1, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 274:	add	x1, x1, #0x0
 278:	adrp	x0, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 27c:	add	x0, x0, #0x0
 280:	bl	0 <__assert_fail>
 284:	adrp	x3, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 288:	add	x3, x3, #0x0
 28c:	mov	w2, #0xec                  	// #236
 290:	adrp	x1, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 294:	add	x1, x1, #0x0
 298:	adrp	x0, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 29c:	add	x0, x0, #0x0
 2a0:	bl	0 <__assert_fail>
 2a4:	adrp	x3, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 2a8:	add	x3, x3, #0x0
 2ac:	mov	w2, #0xec                  	// #236
 2b0:	adrp	x1, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 2b4:	add	x1, x1, #0x0
 2b8:	adrp	x0, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 2bc:	add	x0, x0, #0x0
 2c0:	bl	0 <__assert_fail>
 2c4:	cbz	w15, 2f4 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x2f4>
 2c8:	sub	w15, w15, #0x1
 2cc:	sub	x13, x13, #0x8
 2d0:	sub	x11, x11, #0x4
 2d4:	ldr	w5, [x2, x11]
 2d8:	ldr	w4, [x3, x11]
 2dc:	cmp	w5, w4
 2e0:	b.eq	2c4 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x2c4>  // b.none
 2e4:	cmn	w15, #0x1
 2e8:	b.eq	2c8 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x2c8>  // b.none
 2ec:	sxtw	x8, w15
 2f0:	b	18c <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x18c>
 2f4:	cbz	w1, 690 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x690>
 2f8:	mov	x10, #0x0                   	// #0
 2fc:	cbz	w12, 320 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x320>
 300:	add	x20, sp, #0x48
 304:	add	x19, sp, #0x64
 308:	mov	w14, #0xc                   	// #12
 30c:	add	x18, sp, #0x60
 310:	add	x17, sp, #0x4c
 314:	add	x16, sp, #0x6c
 318:	add	x15, sp, #0x68
 31c:	b	5bc <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x5bc>
 320:	ldp	x19, x20, [sp, #16]
 324:	ldp	x21, x22, [sp, #32]
 328:	ldp	x23, x24, [sp, #48]
 32c:	b	5e8 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x5e8>
 330:	adrp	x3, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 334:	add	x3, x3, #0x0
 338:	mov	w2, #0x102                 	// #258
 33c:	adrp	x1, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 340:	add	x1, x1, #0x0
 344:	adrp	x0, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 348:	add	x0, x0, #0x0
 34c:	bl	0 <__assert_fail>
 350:	adrp	x3, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 354:	add	x3, x3, #0x0
 358:	mov	w2, #0xeb                  	// #235
 35c:	adrp	x1, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 360:	add	x1, x1, #0x0
 364:	adrp	x0, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 368:	add	x0, x0, #0x0
 36c:	bl	0 <__assert_fail>
 370:	adrp	x3, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 374:	add	x3, x3, #0x0
 378:	mov	w2, #0xec                  	// #236
 37c:	adrp	x1, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 380:	add	x1, x1, #0x0
 384:	adrp	x0, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 388:	add	x0, x0, #0x0
 38c:	bl	0 <__assert_fail>
 390:	neg	w6, w6
 394:	str	w6, [sp, #100]
 398:	cmp	w21, w6
 39c:	csel	x6, x19, x20, cs  // cs = hs, nlast
 3a0:	sub	w7, w14, w5
 3a4:	str	w7, [sp, #96]
 3a8:	ldr	w8, [x6]
 3ac:	cmp	w7, w8
 3b0:	csel	x6, x18, x6, cc  // cc = lo, ul, last
 3b4:	ldr	w6, [x6]
 3b8:	cmp	w6, #0xc
 3bc:	b.hi	550 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x550>  // b.pmore
 3c0:	add	w22, w5, w6
 3c4:	cmp	w22, #0xc
 3c8:	b.hi	570 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x570>  // b.pmore
 3cc:	cbz	w6, 640 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x640>
 3d0:	add	x7, x4, #0x60
 3d4:	add	x8, x9, w5, uxtw #3
 3d8:	ldur	x30, [x7, #-96]
 3dc:	str	x30, [x9, w5, uxtw #3]
 3e0:	ldr	x30, [x7], #8
 3e4:	str	x30, [x8, #96]
 3e8:	add	w5, w5, #0x1
 3ec:	cmp	w22, w5
 3f0:	b.ne	3d4 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x3d4>  // b.any
 3f4:	sub	w5, w21, w6
 3f8:	cmp	w21, #0xc
 3fc:	b.hi	648 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x648>  // b.pmore
 400:	cmp	w5, #0xc
 404:	b.hi	590 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x590>  // b.pmore
 408:	cmp	w21, w6
 40c:	b.eq	440 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x440>  // b.none
 410:	mov	x8, x4
 414:	mov	w7, w6
 418:	mov	w5, w7
 41c:	ldr	x9, [x4, x5, lsl #3]
 420:	str	x9, [x8]
 424:	add	x5, x5, #0xc
 428:	ldr	x5, [x4, x5, lsl #3]
 42c:	str	x5, [x8, #96]
 430:	add	w7, w7, #0x1
 434:	add	x8, x8, #0x8
 438:	cmp	w21, w7
 43c:	b.ne	418 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x418>  // b.any
 440:	neg	w6, w6
 444:	ldr	w4, [x2, x11, lsl #2]
 448:	add	w4, w4, w6
 44c:	str	w4, [x2, x11, lsl #2]
 450:	ldr	w4, [x2, x10, lsl #2]
 454:	sub	w6, w4, w6
 458:	str	w6, [x2, x10, lsl #2]
 45c:	ldr	w4, [x3, x10, lsl #2]
 460:	cmp	w6, w4
 464:	b.cs	5b0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x5b0>  // b.hs, b.nlast
 468:	add	w13, w13, #0x1
 46c:	cmp	w1, w13
 470:	b.eq	5b0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x5b0>  // b.none
 474:	mov	w11, w13
 478:	ldr	x4, [x0, x11, lsl #3]
 47c:	ldr	w21, [x2, x11, lsl #2]
 480:	ldr	x9, [x0, x10, lsl #3]
 484:	ldr	w5, [x2, x10, lsl #2]
 488:	ldr	w6, [x3, x10, lsl #2]
 48c:	sub	w6, w5, w6
 490:	str	w21, [sp, #72]
 494:	str	w5, [sp, #76]
 498:	cmp	w6, #0x0
 49c:	b.le	390 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x390>
 4a0:	str	w6, [sp, #108]
 4a4:	cmp	w5, w6
 4a8:	csel	x6, x16, x17, cs  // cs = hs, nlast
 4ac:	sub	w7, w14, w21
 4b0:	str	w7, [sp, #104]
 4b4:	ldr	w8, [x6]
 4b8:	cmp	w7, w8
 4bc:	csel	x6, x15, x6, cc  // cc = lo, ul, last
 4c0:	ldr	w6, [x6]
 4c4:	add	w7, w21, w6
 4c8:	cmp	w7, #0xc
 4cc:	b.hi	330 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x330>  // b.pmore
 4d0:	sub	w8, w21, #0x1
 4d4:	cbz	w21, 508 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x508>
 4d8:	add	x7, x4, w8, uxtw #3
 4dc:	add	w8, w8, w6
 4e0:	mov	x22, x4
 4e4:	add	x30, x4, w8, uxtw #3
 4e8:	ldr	x23, [x7]
 4ec:	str	x23, [x4, w8, uxtw #3]
 4f0:	ldr	x23, [x7, #96]
 4f4:	str	x23, [x30, #96]
 4f8:	sub	w8, w8, #0x1
 4fc:	cmp	x22, x7
 500:	sub	x7, x7, #0x8
 504:	b.ne	4e4 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x4e4>  // b.any
 508:	sub	w8, w5, w6
 50c:	cmp	w5, #0xc
 510:	b.hi	350 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x350>  // b.pmore
 514:	cmp	w6, #0xc
 518:	b.hi	370 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x370>  // b.pmore
 51c:	cmp	w5, w8
 520:	b.eq	444 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x444>  // b.none
 524:	mov	w7, w8
 528:	ldr	x21, [x9, x7, lsl #3]
 52c:	str	x21, [x4]
 530:	add	x7, x7, #0xc
 534:	ldr	x7, [x9, x7, lsl #3]
 538:	str	x7, [x4, #96]
 53c:	add	w8, w8, #0x1
 540:	add	x4, x4, #0x8
 544:	cmp	w5, w8
 548:	b.ne	524 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x524>  // b.any
 54c:	b	444 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x444>
 550:	adrp	x3, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 554:	add	x3, x3, #0x0
 558:	mov	w2, #0xeb                  	// #235
 55c:	adrp	x1, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 560:	add	x1, x1, #0x0
 564:	adrp	x0, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 568:	add	x0, x0, #0x0
 56c:	bl	0 <__assert_fail>
 570:	adrp	x3, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 574:	add	x3, x3, #0x0
 578:	mov	w2, #0xec                  	// #236
 57c:	adrp	x1, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 580:	add	x1, x1, #0x0
 584:	adrp	x0, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 588:	add	x0, x0, #0x0
 58c:	bl	0 <__assert_fail>
 590:	adrp	x3, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 594:	add	x3, x3, #0x0
 598:	mov	w2, #0xec                  	// #236
 59c:	adrp	x1, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 5a0:	add	x1, x1, #0x0
 5a4:	adrp	x0, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 5a8:	add	x0, x0, #0x0
 5ac:	bl	0 <__assert_fail>
 5b0:	add	x10, x10, #0x1
 5b4:	cmp	w12, w10
 5b8:	b.eq	5dc <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x5dc>  // b.none
 5bc:	ldr	w5, [x2, x10, lsl #2]
 5c0:	ldr	w4, [x3, x10, lsl #2]
 5c4:	cmp	w5, w4
 5c8:	b.eq	5b0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x5b0>  // b.none
 5cc:	add	w13, w10, #0x1
 5d0:	cmp	w1, w13
 5d4:	b.ne	474 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x474>  // b.any
 5d8:	b	5b0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x5b0>
 5dc:	ldp	x19, x20, [sp, #16]
 5e0:	ldp	x21, x22, [sp, #32]
 5e4:	ldp	x23, x24, [sp, #48]
 5e8:	mov	w0, #0x0                   	// #0
 5ec:	mov	w4, w0
 5f0:	ldr	w5, [x2, x4, lsl #2]
 5f4:	ldr	w4, [x3, x4, lsl #2]
 5f8:	cmp	w5, w4
 5fc:	b.ne	614 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x614>  // b.any
 600:	add	w0, w0, #0x1
 604:	cmp	w1, w0
 608:	b.ne	5ec <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x5ec>  // b.any
 60c:	ldp	x29, x30, [sp], #112
 610:	ret
 614:	stp	x19, x20, [sp, #16]
 618:	stp	x21, x22, [sp, #32]
 61c:	stp	x23, x24, [sp, #48]
 620:	adrp	x3, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 624:	add	x3, x3, #0x0
 628:	mov	w2, #0x176                 	// #374
 62c:	adrp	x1, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 630:	add	x1, x1, #0x0
 634:	adrp	x0, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 638:	add	x0, x0, #0x0
 63c:	bl	0 <__assert_fail>
 640:	cmp	w21, #0xc
 644:	b.ls	408 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x408>  // b.plast
 648:	adrp	x3, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 64c:	add	x3, x3, #0x0
 650:	mov	w2, #0xeb                  	// #235
 654:	adrp	x1, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 658:	add	x1, x1, #0x0
 65c:	adrp	x0, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 660:	add	x0, x0, #0x0
 664:	bl	0 <__assert_fail>
 668:	cmp	w7, #0xc
 66c:	b.ls	120 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x120>  // b.plast
 670:	adrp	x3, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 674:	add	x3, x3, #0x0
 678:	mov	w2, #0xeb                  	// #235
 67c:	adrp	x1, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 680:	add	x1, x1, #0x0
 684:	adrp	x0, 0 <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj>
 688:	add	x0, x0, #0x0
 68c:	bl	0 <__assert_fail>
 690:	ldp	x19, x20, [sp, #16]
 694:	ldp	x21, x22, [sp, #32]
 698:	ldp	x23, x24, [sp, #48]
 69c:	b	60c <_ZN4llvm15IntervalMapImpl18adjustSiblingSizesINS0_10BranchNodeImlLj12ENS_23IntervalMapHalfOpenInfoImEEEEEEvPPT_jPjPKj+0x60c>

Disassembly of section .text._ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj:

0000000000000000 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj>:
   0:	stp	x29, x30, [sp, #-176]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	stp	x25, x26, [sp, #64]
  18:	stp	x27, x28, [sp, #80]
  1c:	mov	x21, x0
  20:	add	x23, x0, #0x8
  24:	ldr	w0, [x0, #16]
  28:	cmp	w1, w0
  2c:	b.cs	1d0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj+0x1d0>  // b.hs, b.nlast
  30:	mov	w20, w1
  34:	mov	w22, w1
  38:	lsl	x25, x22, #4
  3c:	ldr	x0, [x21, #8]
  40:	add	x0, x0, x25
  44:	ldr	w28, [x0, #12]
  48:	mov	x0, x23
  4c:	bl	0 <_ZNK4llvm15IntervalMapImpl4Path14getLeftSiblingEj>
  50:	mov	x19, x0
  54:	cbz	x0, 1f0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj+0x1f0>
  58:	and	x27, x0, #0x3f
  5c:	add	w27, w27, #0x1
  60:	str	w27, [sp, #160]
  64:	add	w28, w28, w27
  68:	and	x0, x0, #0xffffffffffffffc0
  6c:	str	x0, [sp, #128]
  70:	mov	w24, #0x1                   	// #1
  74:	ldr	w0, [x21, #16]
  78:	cmp	x22, x0
  7c:	b.cs	1fc <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj+0x1fc>  // b.hs, b.nlast
  80:	ldr	x1, [x21, #8]
  84:	add	x0, x1, x25
  88:	ldr	w2, [x0, #8]
  8c:	mov	w0, w24
  90:	add	x3, sp, #0xa0
  94:	str	w2, [x3, x0, lsl #2]
  98:	add	w27, w27, w2
  9c:	add	w22, w24, #0x1
  a0:	ldr	x2, [x1, x25]
  a4:	add	x1, sp, #0x80
  a8:	str	x2, [x1, x0, lsl #3]
  ac:	mov	w1, w20
  b0:	mov	x0, x23
  b4:	bl	0 <_ZNK4llvm15IntervalMapImpl4Path15getRightSiblingEj>
  b8:	cbz	x0, 21c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj+0x21c>
  bc:	and	x1, x0, #0x3f
  c0:	add	w1, w1, #0x1
  c4:	mov	w22, w22
  c8:	add	x2, sp, #0xa0
  cc:	str	w1, [x2, x22, lsl #2]
  d0:	add	w27, w27, w1
  d4:	add	w24, w24, #0x2
  d8:	and	x0, x0, #0xffffffffffffffc0
  dc:	add	x1, sp, #0x80
  e0:	str	x0, [x1, x22, lsl #3]
  e4:	add	w1, w24, w24, lsl #1
  e8:	add	w0, w27, #0x1
  ec:	mov	w22, #0x0                   	// #0
  f0:	cmp	w0, w1, lsl #2
  f4:	b.ls	174 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj+0x174>  // b.plast
  f8:	sub	w22, w24, #0x1
  fc:	mov	w1, w22
 100:	add	x0, sp, #0xa0
 104:	ldr	w2, [x0, x1, lsl #2]
 108:	mov	w3, w24
 10c:	str	w2, [x0, x3, lsl #2]
 110:	add	x2, sp, #0x80
 114:	ldr	x4, [x2, x1, lsl #3]
 118:	str	x4, [x2, x3, lsl #3]
 11c:	str	wzr, [x0, x1, lsl #2]
 120:	ldr	x0, [x21]
 124:	ldr	x26, [x0, #200]
 128:	ldr	x25, [x26]
 12c:	cbz	x25, 23c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj+0x23c>
 130:	ldr	x0, [x25]
 134:	str	x0, [x26]
 138:	stp	xzr, xzr, [x25]
 13c:	stp	xzr, xzr, [x25, #16]
 140:	stp	xzr, xzr, [x25, #32]
 144:	stp	xzr, xzr, [x25, #48]
 148:	stp	xzr, xzr, [x25, #64]
 14c:	stp	xzr, xzr, [x25, #80]
 150:	stp	xzr, xzr, [x25, #96]
 154:	stp	xzr, xzr, [x25, #112]
 158:	stp	xzr, xzr, [x25, #128]
 15c:	stp	xzr, xzr, [x25, #144]
 160:	stp	xzr, xzr, [x25, #160]
 164:	stp	xzr, xzr, [x25, #176]
 168:	add	x0, sp, #0x80
 16c:	str	x25, [x0, w22, uxtw #3]
 170:	add	w24, w24, #0x1
 174:	add	x26, sp, #0x70
 178:	add	x25, sp, #0xa0
 17c:	mov	w6, #0x1                   	// #1
 180:	mov	w5, w28
 184:	mov	x4, x26
 188:	mov	x3, x25
 18c:	mov	w2, #0xc                   	// #12
 190:	mov	w1, w27
 194:	mov	w0, w24
 198:	bl	0 <_ZN4llvm15IntervalMapImpl10distributeEjjjPKjPjjb>
 19c:	str	x0, [sp, #104]
 1a0:	mov	w28, w0
 1a4:	mov	x3, x26
 1a8:	mov	x2, x25
 1ac:	mov	w1, w24
 1b0:	add	x0, sp, #0x80
 1b4:	bl	0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj>
 1b8:	cbnz	x19, 404 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj+0x404>
 1bc:	add	x26, sp, #0x80
 1c0:	add	x25, sp, #0x70
 1c4:	mov	w19, #0x0                   	// #0
 1c8:	str	wzr, [sp, #96]
 1cc:	b	4c8 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj+0x4c8>
 1d0:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj>
 1d4:	add	x3, x3, #0x0
 1d8:	mov	w2, #0x95                  	// #149
 1dc:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj>
 1e0:	add	x1, x1, #0x0
 1e4:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj>
 1e8:	add	x0, x0, #0x0
 1ec:	bl	0 <__assert_fail>
 1f0:	mov	w27, #0x0                   	// #0
 1f4:	mov	w24, #0x0                   	// #0
 1f8:	b	74 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj+0x74>
 1fc:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj>
 200:	add	x3, x3, #0x0
 204:	mov	w2, #0x99                  	// #153
 208:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj>
 20c:	add	x1, x1, #0x0
 210:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj>
 214:	add	x0, x0, #0x0
 218:	bl	0 <__assert_fail>
 21c:	add	w0, w27, #0x1
 220:	add	w1, w22, w22, lsl #1
 224:	cmp	w0, w1, lsl #2
 228:	b.ls	3f8 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj+0x3f8>  // b.plast
 22c:	mov	w24, w22
 230:	cmp	w22, #0x1
 234:	b.eq	fc <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj+0xfc>  // b.none
 238:	b	f8 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj+0xf8>
 23c:	ldr	x0, [x26, #88]
 240:	add	x0, x0, #0xc0
 244:	str	x0, [x26, #88]
 248:	ldr	x1, [x26, #8]
 24c:	add	x0, x1, #0x3f
 250:	and	x0, x0, #0xffffffffffffffc0
 254:	sub	x0, x0, x1
 258:	adds	x3, x0, #0xc0
 25c:	b.cs	314 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj+0x314>  // b.hs, b.nlast
 260:	ldr	x2, [x26, #16]
 264:	sub	x2, x2, x1
 268:	cmp	x3, x2
 26c:	b.ls	334 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj+0x334>  // b.plast
 270:	ldr	w0, [x26, #32]
 274:	lsr	w1, w0, #7
 278:	cmp	w0, #0xeff
 27c:	b.ls	344 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj+0x344>  // b.plast
 280:	mov	x0, #0x40000000000         	// #4398046511104
 284:	bl	0 <malloc>
 288:	str	x0, [sp, #96]
 28c:	cbz	x0, 374 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj+0x374>
 290:	mov	x0, #0x40000000000         	// #4398046511104
 294:	str	x0, [sp, #104]
 298:	ldr	w1, [x26, #32]
 29c:	ldr	w0, [x26, #36]
 2a0:	cmp	w1, w0
 2a4:	b.cs	380 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj+0x380>  // b.hs, b.nlast
 2a8:	ldr	w1, [x26, #32]
 2ac:	ldr	x0, [x26, #24]
 2b0:	ldr	x2, [sp, #96]
 2b4:	str	x2, [x0, x1, lsl #3]
 2b8:	ldr	w0, [x26, #32]
 2bc:	mov	w1, w0
 2c0:	add	x1, x1, #0x1
 2c4:	ldr	w2, [x26, #36]
 2c8:	cmp	x1, x2
 2cc:	b.hi	398 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj+0x398>  // b.pmore
 2d0:	add	w0, w0, #0x1
 2d4:	str	w0, [x26, #32]
 2d8:	ldr	x0, [sp, #96]
 2dc:	str	x0, [x26, #8]
 2e0:	ldr	x1, [sp, #104]
 2e4:	add	x1, x0, x1
 2e8:	str	x1, [x26, #16]
 2ec:	adds	x0, x0, #0x3f
 2f0:	b.cs	3b8 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj+0x3b8>  // b.hs, b.nlast
 2f4:	and	x0, x0, #0xffffffffffffffc0
 2f8:	add	x2, x0, #0xc0
 2fc:	cmp	x1, x2
 300:	b.cc	3d8 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj+0x3d8>  // b.lo, b.ul, b.last
 304:	mov	x25, x0
 308:	add	x0, x0, #0xc0
 30c:	str	x0, [x26, #8]
 310:	b	138 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj+0x138>
 314:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj>
 318:	add	x3, x3, #0x0
 31c:	mov	w2, #0xdc                  	// #220
 320:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj>
 324:	add	x1, x1, #0x0
 328:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj>
 32c:	add	x0, x0, #0x0
 330:	bl	0 <__assert_fail>
 334:	add	x25, x1, x0
 338:	add	x0, x25, #0xc0
 33c:	str	x0, [x26, #8]
 340:	b	138 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj+0x138>
 344:	mov	x0, #0x1000                	// #4096
 348:	lsl	x0, x0, x1
 34c:	str	x0, [sp, #104]
 350:	bl	0 <malloc>
 354:	str	x0, [sp, #96]
 358:	cbnz	x0, 298 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj+0x298>
 35c:	mov	w1, #0x1                   	// #1
 360:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj>
 364:	add	x0, x0, #0x0
 368:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 36c:	str	x25, [sp, #96]
 370:	b	298 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj+0x298>
 374:	mov	x0, #0x40000000000         	// #4398046511104
 378:	str	x0, [sp, #104]
 37c:	b	35c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj+0x35c>
 380:	mov	x3, #0x8                   	// #8
 384:	mov	x2, #0x0                   	// #0
 388:	add	x1, x26, #0x28
 38c:	add	x0, x26, #0x18
 390:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 394:	b	2a8 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj+0x2a8>
 398:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj>
 39c:	add	x3, x3, #0x0
 3a0:	mov	w2, #0x43                  	// #67
 3a4:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj>
 3a8:	add	x1, x1, #0x0
 3ac:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj>
 3b0:	add	x0, x0, #0x0
 3b4:	bl	0 <__assert_fail>
 3b8:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj>
 3bc:	add	x3, x3, #0x0
 3c0:	mov	w2, #0xba                  	// #186
 3c4:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj>
 3c8:	add	x1, x1, #0x0
 3cc:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj>
 3d0:	add	x0, x0, #0x0
 3d4:	bl	0 <__assert_fail>
 3d8:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj>
 3dc:	add	x3, x3, #0x0
 3e0:	mov	w2, #0x105                 	// #261
 3e4:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj>
 3e8:	add	x1, x1, #0x0
 3ec:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj>
 3f0:	add	x0, x0, #0x0
 3f4:	bl	0 <__assert_fail>
 3f8:	mov	w24, w22
 3fc:	mov	w22, #0x0                   	// #0
 400:	b	174 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj+0x174>
 404:	mov	w1, w20
 408:	mov	x0, x23
 40c:	bl	0 <_ZN4llvm15IntervalMapImpl4Path8moveLeftEj>
 410:	b	1bc <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj+0x1bc>
 414:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj>
 418:	add	x3, x3, #0x0
 41c:	mov	w2, #0xb2                  	// #178
 420:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj>
 424:	add	x1, x1, #0x0
 428:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj>
 42c:	add	x0, x0, #0x0
 430:	bl	0 <__assert_fail>
 434:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj>
 438:	add	x3, x3, #0x0
 43c:	mov	w2, #0xba                  	// #186
 440:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj>
 444:	add	x1, x1, #0x0
 448:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj>
 44c:	add	x0, x0, #0x0
 450:	bl	0 <__assert_fail>
 454:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj>
 458:	add	x3, x3, #0x0
 45c:	mov	w2, #0x1fc                 	// #508
 460:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj>
 464:	add	x1, x1, #0x0
 468:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj>
 46c:	add	x0, x0, #0x0
 470:	bl	0 <__assert_fail>
 474:	mov	w0, w20
 478:	ldr	w2, [x21, #16]
 47c:	cmp	x2, w20, uxtw
 480:	b.ls	528 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj+0x528>  // b.plast
 484:	ldr	x2, [x21, #8]
 488:	add	x0, x2, x0, lsl #4
 48c:	str	w4, [x0, #8]
 490:	cbnz	w20, 548 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj+0x548>
 494:	mov	x2, x3
 498:	mov	w1, w20
 49c:	mov	x0, x21
 4a0:	bl	0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj>
 4a4:	add	w27, w19, #0x1
 4a8:	add	x26, x26, #0x8
 4ac:	add	x25, x25, #0x4
 4b0:	cmp	w27, w24
 4b4:	b.eq	5cc <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj+0x5cc>  // b.none
 4b8:	mov	w1, w20
 4bc:	mov	x0, x23
 4c0:	bl	0 <_ZN4llvm15IntervalMapImpl4Path9moveRightEj>
 4c4:	mov	w19, w27
 4c8:	ldr	x0, [x26]
 4cc:	ldr	w4, [x25]
 4d0:	sub	w1, w4, #0x1
 4d4:	add	x2, x0, w1, uxtw #3
 4d8:	ldr	x3, [x2, #96]
 4dc:	cmp	w22, #0x0
 4e0:	ccmp	w22, w19, #0x0, ne  // ne = any
 4e4:	b.ne	474 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj+0x474>  // b.any
 4e8:	tst	x0, #0x3f
 4ec:	b.ne	414 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj+0x414>  // b.any
 4f0:	mov	w2, w1
 4f4:	tst	x1, #0xffffffc0
 4f8:	b.ne	434 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj+0x434>  // b.any
 4fc:	and	x0, x0, #0xffffffffffffffc0
 500:	orr	x2, x0, x2
 504:	cmp	w4, #0xc
 508:	b.hi	454 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj+0x454>  // b.pmore
 50c:	mov	w1, w20
 510:	mov	x0, x21
 514:	bl	0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj>
 518:	and	w0, w0, #0xff
 51c:	str	w0, [sp, #96]
 520:	add	w20, w20, w0
 524:	b	4a4 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj+0x4a4>
 528:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj>
 52c:	add	x3, x3, #0x0
 530:	mov	w2, #0x95                  	// #149
 534:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj>
 538:	add	x1, x1, #0x0
 53c:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj>
 540:	add	x0, x0, #0x0
 544:	bl	0 <__assert_fail>
 548:	sub	w0, w20, #0x1
 54c:	ldr	w2, [x21, #16]
 550:	cmp	x0, x2
 554:	b.cs	58c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj+0x58c>  // b.hs, b.nlast
 558:	lsl	x0, x0, #4
 55c:	ldr	x2, [x21, #8]
 560:	add	x4, x2, x0
 564:	ldr	w4, [x4, #12]
 568:	ldr	x2, [x2, x0]
 56c:	ldr	x0, [x2, x4, lsl #3]
 570:	mov	w5, w1
 574:	tst	x1, #0xffffffc0
 578:	b.ne	5ac <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj+0x5ac>  // b.any
 57c:	and	x0, x0, #0xffffffffffffffc0
 580:	orr	x0, x0, x5
 584:	str	x0, [x2, x4, lsl #3]
 588:	b	494 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj+0x494>
 58c:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj>
 590:	add	x3, x3, #0x0
 594:	mov	w2, #0x99                  	// #153
 598:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj>
 59c:	add	x1, x1, #0x0
 5a0:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj>
 5a4:	add	x0, x0, #0x0
 5a8:	bl	0 <__assert_fail>
 5ac:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj>
 5b0:	add	x3, x3, #0x0
 5b4:	mov	w2, #0xba                  	// #186
 5b8:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj>
 5bc:	add	x1, x1, #0x0
 5c0:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj>
 5c4:	add	x0, x0, #0x0
 5c8:	bl	0 <__assert_fail>
 5cc:	ldr	w0, [sp, #104]
 5d0:	cmp	w19, w0
 5d4:	b.eq	5f0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj+0x5f0>  // b.none
 5d8:	mov	w1, w20
 5dc:	mov	x0, x23
 5e0:	bl	0 <_ZN4llvm15IntervalMapImpl4Path8moveLeftEj>
 5e4:	sub	w19, w19, #0x1
 5e8:	cmp	w19, w28
 5ec:	b.ne	5d8 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj+0x5d8>  // b.any
 5f0:	mov	w1, w20
 5f4:	ldr	w0, [x21, #16]
 5f8:	cmp	x0, w20, uxtw
 5fc:	b.ls	634 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj+0x634>  // b.plast
 600:	ldr	x0, [x21, #8]
 604:	add	x1, x0, x1, lsl #4
 608:	ldr	x0, [sp, #104]
 60c:	lsr	x0, x0, #32
 610:	str	w0, [x1, #12]
 614:	ldrb	w0, [sp, #96]
 618:	ldp	x19, x20, [sp, #16]
 61c:	ldp	x21, x22, [sp, #32]
 620:	ldp	x23, x24, [sp, #48]
 624:	ldp	x25, x26, [sp, #64]
 628:	ldp	x27, x28, [sp, #80]
 62c:	ldp	x29, x30, [sp], #176
 630:	ret
 634:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj>
 638:	add	x3, x3, #0x0
 63c:	mov	w2, #0x95                  	// #149
 640:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj>
 644:	add	x1, x1, #0x0
 648:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl10BranchNodeImlLj12ES2_EEEEbj>
 64c:	add	x0, x0, #0x0
 650:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm:

0000000000000000 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	str	x25, [sp, #64]
  18:	cbz	w1, 100 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm+0x100>
  1c:	mov	x19, x0
  20:	mov	x24, x2
  24:	mov	x22, x3
  28:	add	x21, x0, #0x8
  2c:	cmp	w1, #0x1
  30:	b.ne	260 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm+0x260>  // b.any
  34:	ldr	x20, [x0]
  38:	ldr	w0, [x20, #196]
  3c:	cmp	w0, #0xa
  40:	b.hi	1e0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm+0x1e0>  // b.pmore
  44:	ldr	w1, [x20, #192]
  48:	cbz	w1, 120 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm+0x120>
  4c:	ldr	w1, [x19, #16]
  50:	cbz	w1, 140 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm+0x140>
  54:	ldr	x1, [x19, #8]
  58:	ldr	w3, [x1, #12]
  5c:	cmp	w0, w3
  60:	b.cc	160 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm+0x160>  // b.lo, b.ul, b.last
  64:	b.eq	9c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm+0x9c>  // b.none
  68:	sub	w0, w0, #0x1
  6c:	add	x4, x20, #0x8
  70:	add	w1, w0, #0x1
  74:	add	x1, x20, x1, lsl #3
  78:	mov	w2, w0
  7c:	ldr	x5, [x4, x2, lsl #3]
  80:	str	x5, [x1, #8]
  84:	add	x2, x4, x2, lsl #3
  88:	ldr	x2, [x2, #88]
  8c:	str	x2, [x1, #96]
  90:	cmp	w3, w0
  94:	sub	w0, w0, #0x1
  98:	b.ne	70 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm+0x70>  // b.any
  9c:	add	x0, x20, w3, uxtw #3
  a0:	str	x24, [x0, #8]
  a4:	str	x22, [x0, #96]
  a8:	ldr	w0, [x20, #196]
  ac:	add	w0, w0, #0x1
  b0:	str	w0, [x20, #196]
  b4:	ldr	w1, [x19, #16]
  b8:	cbz	w1, 180 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm+0x180>
  bc:	ldr	x1, [x19, #8]
  c0:	str	w0, [x1, #8]
  c4:	ldr	w0, [x19, #16]
  c8:	cbz	x0, 1a0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm+0x1a0>
  cc:	ldr	x1, [x19, #8]
  d0:	ldr	w3, [x1, #12]
  d4:	ldr	x2, [x1]
  d8:	cmp	x0, #0x1
  dc:	b.ls	1c0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm+0x1c0>  // b.plast
  e0:	ldr	x0, [x2, x3, lsl #3]
  e4:	and	x2, x0, #0xffffffffffffffc0
  e8:	str	x2, [x1, #16]
  ec:	and	x0, x0, #0x3f
  f0:	add	w0, w0, #0x1
  f4:	str	w0, [x1, #24]
  f8:	mov	w25, #0x0                   	// #0
  fc:	b	3e0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm+0x3e0>
 100:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 104:	add	x3, x3, #0x0
 108:	mov	w2, #0x6c9                 	// #1737
 10c:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 110:	add	x1, x1, #0x0
 114:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 118:	add	x0, x0, #0x0
 11c:	bl	0 <__assert_fail>
 120:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 124:	add	x3, x3, #0x0
 128:	mov	w2, #0x3e9                 	// #1001
 12c:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 130:	add	x1, x1, #0x0
 134:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 138:	add	x0, x0, #0x0
 13c:	bl	0 <__assert_fail>
 140:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 144:	add	x3, x3, #0x0
 148:	mov	w2, #0x95                  	// #149
 14c:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 150:	add	x1, x1, #0x0
 154:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 158:	add	x0, x0, #0x0
 15c:	bl	0 <__assert_fail>
 160:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 164:	add	x3, x3, #0x0
 168:	mov	w2, #0x2ef                 	// #751
 16c:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 170:	add	x1, x1, #0x0
 174:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 178:	add	x0, x0, #0x0
 17c:	bl	0 <__assert_fail>
 180:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 184:	add	x3, x3, #0x0
 188:	mov	w2, #0x95                  	// #149
 18c:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 190:	add	x1, x1, #0x0
 194:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 198:	add	x0, x0, #0x0
 19c:	bl	0 <__assert_fail>
 1a0:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 1a4:	add	x3, x3, #0x0
 1a8:	mov	w2, #0x99                  	// #153
 1ac:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 1b0:	add	x1, x1, #0x0
 1b4:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 1b8:	add	x0, x0, #0x0
 1bc:	bl	0 <__assert_fail>
 1c0:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 1c4:	add	x3, x3, #0x0
 1c8:	mov	w2, #0x95                  	// #149
 1cc:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 1d0:	add	x1, x1, #0x0
 1d4:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 1d8:	add	x0, x0, #0x0
 1dc:	bl	0 <__assert_fail>
 1e0:	ldr	w0, [x19, #16]
 1e4:	cbz	w0, 220 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm+0x220>
 1e8:	ldr	x0, [x19, #8]
 1ec:	ldr	w1, [x0, #12]
 1f0:	mov	x0, x20
 1f4:	bl	0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 1f8:	mov	x3, x0
 1fc:	ldr	w0, [x20, #192]
 200:	cbz	w0, 240 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm+0x240>
 204:	ldr	w2, [x20, #196]
 208:	add	x1, x20, #0x8
 20c:	mov	x0, x21
 210:	bl	0 <_ZN4llvm15IntervalMapImpl4Path11replaceRootEPvjSt4pairIjjE>
 214:	mov	w25, #0x1                   	// #1
 218:	mov	w1, #0x2                   	// #2
 21c:	b	264 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm+0x264>
 220:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 224:	add	x3, x3, #0x0
 228:	mov	w2, #0x95                  	// #149
 22c:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 230:	add	x1, x1, #0x0
 234:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 238:	add	x0, x0, #0x0
 23c:	bl	0 <__assert_fail>
 240:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 244:	add	x3, x3, #0x0
 248:	mov	w2, #0x3e9                 	// #1001
 24c:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 250:	add	x1, x1, #0x0
 254:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 258:	add	x0, x0, #0x0
 25c:	bl	0 <__assert_fail>
 260:	mov	w25, #0x0                   	// #0
 264:	sub	w20, w1, #0x1
 268:	ldr	w0, [x19, #16]
 26c:	cbz	w0, 284 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm+0x284>
 270:	ldr	x0, [x19, #8]
 274:	ldr	w1, [x0, #12]
 278:	ldr	w0, [x0, #8]
 27c:	cmp	w1, w0
 280:	b.cc	2b4 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm+0x2b4>  // b.lo, b.ul, b.last
 284:	mov	w1, w20
 288:	mov	x0, x21
 28c:	bl	0 <_ZN4llvm15IntervalMapImpl4Path8moveLeftEj>
 290:	mov	w0, w20
 294:	ldr	w1, [x19, #16]
 298:	cmp	x1, w20, uxtw
 29c:	b.ls	3fc <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm+0x3fc>  // b.plast
 2a0:	ldr	x1, [x19, #8]
 2a4:	add	x0, x1, x0, lsl #4
 2a8:	ldr	w1, [x0, #12]
 2ac:	add	w1, w1, #0x1
 2b0:	str	w1, [x0, #12]
 2b4:	mov	w23, w20
 2b8:	ldr	w0, [x19, #16]
 2bc:	cmp	x0, w20, uxtw
 2c0:	b.ls	41c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm+0x41c>  // b.plast
 2c4:	ldr	x0, [x19, #8]
 2c8:	add	x0, x0, x23, lsl #4
 2cc:	ldr	w0, [x0, #8]
 2d0:	cmp	w0, #0xc
 2d4:	b.eq	43c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm+0x43c>  // b.none
 2d8:	lsl	x21, x23, #4
 2dc:	ldr	x0, [x19, #8]
 2e0:	add	x1, x0, x21
 2e4:	ldr	x0, [x0, x21]
 2e8:	ldr	w4, [x1, #12]
 2ec:	ldr	w1, [x1, #8]
 2f0:	cmp	w1, #0xb
 2f4:	b.hi	4a4 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm+0x4a4>  // b.pmore
 2f8:	cmp	w4, w1
 2fc:	b.hi	4c4 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm+0x4c4>  // b.pmore
 300:	cmp	w1, w4
 304:	b.eq	338 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm+0x338>  // b.none
 308:	sub	w1, w1, #0x1
 30c:	add	w3, w1, #0x1
 310:	add	x5, x0, x3, lsl #3
 314:	mov	w2, w1
 318:	ldr	x6, [x0, x2, lsl #3]
 31c:	str	x6, [x0, x3, lsl #3]
 320:	add	x2, x2, #0xc
 324:	ldr	x2, [x0, x2, lsl #3]
 328:	str	x2, [x5, #96]
 32c:	cmp	w4, w1
 330:	sub	w1, w1, #0x1
 334:	b.ne	30c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm+0x30c>  // b.any
 338:	mov	w4, w4
 33c:	str	x24, [x0, x4, lsl #3]
 340:	add	x4, x4, #0xc
 344:	str	x22, [x0, x4, lsl #3]
 348:	ldr	w0, [x19, #16]
 34c:	mov	w3, w0
 350:	cmp	w0, w20
 354:	b.ls	4e4 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm+0x4e4>  // b.plast
 358:	ldr	x0, [x19, #8]
 35c:	add	x0, x0, x21
 360:	ldr	w1, [x0, #8]
 364:	add	w2, w1, #0x1
 368:	cmp	x3, x23
 36c:	b.ls	504 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm+0x504>  // b.plast
 370:	str	w2, [x0, #8]
 374:	cbnz	w20, 524 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm+0x524>
 378:	ldr	w3, [x19, #16]
 37c:	cmp	x23, x3
 380:	b.cs	5a8 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm+0x5a8>  // b.hs, b.nlast
 384:	ldr	x0, [x19, #8]
 388:	add	x0, x0, x21
 38c:	ldr	w1, [x0, #8]
 390:	sub	w1, w1, #0x1
 394:	ldr	w2, [x0, #12]
 398:	add	w0, w20, #0x1
 39c:	cmp	w2, w1
 3a0:	b.eq	5c8 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm+0x5c8>  // b.none
 3a4:	ldr	x2, [x19, #8]
 3a8:	add	x1, x2, x21
 3ac:	ldr	w5, [x1, #12]
 3b0:	ldr	x4, [x2, x21]
 3b4:	mov	w1, w0
 3b8:	cmp	x3, w0, uxtw
 3bc:	b.ls	608 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm+0x608>  // b.plast
 3c0:	lsl	x1, x1, #4
 3c4:	add	x3, x2, x1
 3c8:	ldr	x0, [x4, x5, lsl #3]
 3cc:	and	x4, x0, #0xffffffffffffffc0
 3d0:	str	x4, [x2, x1]
 3d4:	and	x0, x0, #0x3f
 3d8:	add	w0, w0, #0x1
 3dc:	str	w0, [x3, #8]
 3e0:	mov	w0, w25
 3e4:	ldp	x19, x20, [sp, #16]
 3e8:	ldp	x21, x22, [sp, #32]
 3ec:	ldp	x23, x24, [sp, #48]
 3f0:	ldr	x25, [sp, #64]
 3f4:	ldp	x29, x30, [sp], #80
 3f8:	ret
 3fc:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 400:	add	x3, x3, #0x0
 404:	mov	w2, #0x95                  	// #149
 408:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 40c:	add	x1, x1, #0x0
 410:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 414:	add	x0, x0, #0x0
 418:	bl	0 <__assert_fail>
 41c:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 420:	add	x3, x3, #0x0
 424:	mov	w2, #0x99                  	// #153
 428:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 42c:	add	x1, x1, #0x0
 430:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 434:	add	x0, x0, #0x0
 438:	bl	0 <__assert_fail>
 43c:	cbnz	w25, 484 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm+0x484>
 440:	mov	w1, w20
 444:	mov	x0, x19
 448:	bl	0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 44c:	and	w25, w0, #0xff
 450:	add	w20, w20, w25
 454:	mov	w23, w20
 458:	ldr	w0, [x19, #16]
 45c:	cmp	x0, w20, uxtw
 460:	b.hi	2d8 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm+0x2d8>  // b.pmore
 464:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 468:	add	x3, x3, #0x0
 46c:	mov	w2, #0x99                  	// #153
 470:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 474:	add	x1, x1, #0x0
 478:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 47c:	add	x0, x0, #0x0
 480:	bl	0 <__assert_fail>
 484:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 488:	add	x3, x3, #0x0
 48c:	mov	w2, #0x6e6                 	// #1766
 490:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 494:	add	x1, x1, #0x0
 498:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 49c:	add	x0, x0, #0x0
 4a0:	bl	0 <__assert_fail>
 4a4:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 4a8:	add	x3, x3, #0x0
 4ac:	mov	w2, #0x2ee                 	// #750
 4b0:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 4b4:	add	x1, x1, #0x0
 4b8:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 4bc:	add	x0, x0, #0x0
 4c0:	bl	0 <__assert_fail>
 4c4:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 4c8:	add	x3, x3, #0x0
 4cc:	mov	w2, #0x2ef                 	// #751
 4d0:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 4d4:	add	x1, x1, #0x0
 4d8:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 4dc:	add	x0, x0, #0x0
 4e0:	bl	0 <__assert_fail>
 4e4:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 4e8:	add	x3, x3, #0x0
 4ec:	mov	w2, #0x99                  	// #153
 4f0:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 4f4:	add	x1, x1, #0x0
 4f8:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 4fc:	add	x0, x0, #0x0
 500:	bl	0 <__assert_fail>
 504:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 508:	add	x3, x3, #0x0
 50c:	mov	w2, #0x95                  	// #149
 510:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 514:	add	x1, x1, #0x0
 518:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 51c:	add	x0, x0, #0x0
 520:	bl	0 <__assert_fail>
 524:	sub	w0, w20, #0x1
 528:	ldr	w2, [x19, #16]
 52c:	cmp	x0, x2
 530:	b.cs	568 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm+0x568>  // b.hs, b.nlast
 534:	lsl	x0, x0, #4
 538:	ldr	x2, [x19, #8]
 53c:	add	x3, x2, x0
 540:	ldr	w3, [x3, #12]
 544:	ldr	x2, [x2, x0]
 548:	ldr	x0, [x2, x3, lsl #3]
 54c:	mov	w4, w1
 550:	tst	x1, #0xffffffc0
 554:	b.ne	588 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm+0x588>  // b.any
 558:	and	x0, x0, #0xffffffffffffffc0
 55c:	orr	x0, x0, x4
 560:	str	x0, [x2, x3, lsl #3]
 564:	b	378 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm+0x378>
 568:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 56c:	add	x3, x3, #0x0
 570:	mov	w2, #0x99                  	// #153
 574:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 578:	add	x1, x1, #0x0
 57c:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 580:	add	x0, x0, #0x0
 584:	bl	0 <__assert_fail>
 588:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 58c:	add	x3, x3, #0x0
 590:	mov	w2, #0xba                  	// #186
 594:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 598:	add	x1, x1, #0x0
 59c:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 5a0:	add	x0, x0, #0x0
 5a4:	bl	0 <__assert_fail>
 5a8:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 5ac:	add	x3, x3, #0x0
 5b0:	mov	w2, #0x99                  	// #153
 5b4:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 5b8:	add	x1, x1, #0x0
 5bc:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 5c0:	add	x0, x0, #0x0
 5c4:	bl	0 <__assert_fail>
 5c8:	mov	x2, x22
 5cc:	mov	w1, w20
 5d0:	mov	x0, x19
 5d4:	bl	0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 5d8:	add	w0, w20, #0x1
 5dc:	ldr	w3, [x19, #16]
 5e0:	cmp	x23, x3
 5e4:	b.cc	3a4 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm+0x3a4>  // b.lo, b.ul, b.last
 5e8:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 5ec:	add	x3, x3, #0x0
 5f0:	mov	w2, #0x99                  	// #153
 5f4:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 5f8:	add	x1, x1, #0x0
 5fc:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 600:	add	x0, x0, #0x0
 604:	bl	0 <__assert_fail>
 608:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 60c:	add	x3, x3, #0x0
 610:	mov	w2, #0x95                  	// #149
 614:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 618:	add	x1, x1, #0x0
 61c:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10insertNodeEjNS_15IntervalMapImpl7NodeRefEm>
 620:	add	x0, x0, #0x0
 624:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj:

0000000000000000 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj>:
   0:	stp	x29, x30, [sp, #-176]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	stp	x25, x26, [sp, #64]
  18:	stp	x27, x28, [sp, #80]
  1c:	mov	x21, x0
  20:	add	x22, x0, #0x8
  24:	ldr	w0, [x0, #16]
  28:	cmp	w1, w0
  2c:	b.cs	1cc <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj+0x1cc>  // b.hs, b.nlast
  30:	mov	w20, w1
  34:	mov	w23, w1
  38:	lsl	x25, x23, #4
  3c:	ldr	x0, [x21, #8]
  40:	add	x0, x0, x25
  44:	ldr	w28, [x0, #12]
  48:	mov	x0, x22
  4c:	bl	0 <_ZNK4llvm15IntervalMapImpl4Path14getLeftSiblingEj>
  50:	mov	x19, x0
  54:	cbz	x0, 1ec <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj+0x1ec>
  58:	and	x27, x0, #0x3f
  5c:	add	w27, w27, #0x1
  60:	str	w27, [sp, #160]
  64:	add	w28, w28, w27
  68:	and	x0, x0, #0xffffffffffffffc0
  6c:	str	x0, [sp, #128]
  70:	mov	w24, #0x1                   	// #1
  74:	ldr	w0, [x21, #16]
  78:	cmp	x23, x0
  7c:	b.cs	1f8 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj+0x1f8>  // b.hs, b.nlast
  80:	ldr	x1, [x21, #8]
  84:	add	x0, x1, x25
  88:	ldr	w2, [x0, #8]
  8c:	mov	w0, w24
  90:	add	x3, sp, #0xa0
  94:	str	w2, [x3, x0, lsl #2]
  98:	add	w27, w27, w2
  9c:	add	w23, w24, #0x1
  a0:	ldr	x2, [x1, x25]
  a4:	add	x1, sp, #0x80
  a8:	str	x2, [x1, x0, lsl #3]
  ac:	mov	w1, w20
  b0:	mov	x0, x22
  b4:	bl	0 <_ZNK4llvm15IntervalMapImpl4Path15getRightSiblingEj>
  b8:	cbz	x0, 218 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj+0x218>
  bc:	and	x1, x0, #0x3f
  c0:	add	w1, w1, #0x1
  c4:	mov	w23, w23
  c8:	add	x2, sp, #0xa0
  cc:	str	w1, [x2, x23, lsl #2]
  d0:	add	w27, w27, w1
  d4:	add	w24, w24, #0x2
  d8:	and	x0, x0, #0xffffffffffffffc0
  dc:	add	x1, sp, #0x80
  e0:	str	x0, [x1, x23, lsl #3]
  e4:	add	w0, w27, #0x1
  e8:	mov	w23, #0x0                   	// #0
  ec:	cmp	w0, w24, lsl #3
  f0:	b.ls	170 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj+0x170>  // b.plast
  f4:	sub	w23, w24, #0x1
  f8:	mov	w1, w23
  fc:	add	x0, sp, #0xa0
 100:	ldr	w2, [x0, x1, lsl #2]
 104:	mov	w3, w24
 108:	str	w2, [x0, x3, lsl #2]
 10c:	add	x2, sp, #0x80
 110:	ldr	x4, [x2, x1, lsl #3]
 114:	str	x4, [x2, x3, lsl #3]
 118:	str	wzr, [x0, x1, lsl #2]
 11c:	ldr	x0, [x21]
 120:	ldr	x26, [x0, #200]
 124:	ldr	x25, [x26]
 128:	cbz	x25, 234 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj+0x234>
 12c:	ldr	x0, [x25]
 130:	str	x0, [x26]
 134:	stp	xzr, xzr, [x25]
 138:	stp	xzr, xzr, [x25, #16]
 13c:	stp	xzr, xzr, [x25, #32]
 140:	stp	xzr, xzr, [x25, #48]
 144:	stp	xzr, xzr, [x25, #64]
 148:	stp	xzr, xzr, [x25, #80]
 14c:	stp	xzr, xzr, [x25, #96]
 150:	stp	xzr, xzr, [x25, #112]
 154:	stp	xzr, xzr, [x25, #128]
 158:	stp	xzr, xzr, [x25, #144]
 15c:	stp	xzr, xzr, [x25, #160]
 160:	stp	xzr, xzr, [x25, #176]
 164:	add	x0, sp, #0x80
 168:	str	x25, [x0, w23, uxtw #3]
 16c:	add	w24, w24, #0x1
 170:	add	x26, sp, #0x70
 174:	add	x25, sp, #0xa0
 178:	mov	w6, #0x1                   	// #1
 17c:	mov	w5, w28
 180:	mov	x4, x26
 184:	mov	x3, x25
 188:	mov	w2, #0x8                   	// #8
 18c:	mov	w1, w27
 190:	mov	w0, w24
 194:	bl	0 <_ZN4llvm15IntervalMapImpl10distributeEjjjPKjPjjb>
 198:	str	x0, [sp, #104]
 19c:	mov	w28, w0
 1a0:	mov	x3, x26
 1a4:	mov	x2, x25
 1a8:	mov	w1, w24
 1ac:	add	x0, sp, #0x80
 1b0:	bl	0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj>
 1b4:	cbnz	x19, 3fc <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj+0x3fc>
 1b8:	add	x26, sp, #0x80
 1bc:	add	x25, sp, #0x70
 1c0:	mov	w19, #0x0                   	// #0
 1c4:	str	wzr, [sp, #96]
 1c8:	b	4c0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj+0x4c0>
 1cc:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj>
 1d0:	add	x3, x3, #0x0
 1d4:	mov	w2, #0x95                  	// #149
 1d8:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj>
 1dc:	add	x1, x1, #0x0
 1e0:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj>
 1e4:	add	x0, x0, #0x0
 1e8:	bl	0 <__assert_fail>
 1ec:	mov	w27, #0x0                   	// #0
 1f0:	mov	w24, #0x0                   	// #0
 1f4:	b	74 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj+0x74>
 1f8:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj>
 1fc:	add	x3, x3, #0x0
 200:	mov	w2, #0x99                  	// #153
 204:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj>
 208:	add	x1, x1, #0x0
 20c:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj>
 210:	add	x0, x0, #0x0
 214:	bl	0 <__assert_fail>
 218:	add	w0, w27, #0x1
 21c:	cmp	w0, w23, lsl #3
 220:	b.ls	3f0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj+0x3f0>  // b.plast
 224:	mov	w24, w23
 228:	cmp	w23, #0x1
 22c:	b.eq	f8 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj+0xf8>  // b.none
 230:	b	f4 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj+0xf4>
 234:	ldr	x0, [x26, #88]
 238:	add	x0, x0, #0xc0
 23c:	str	x0, [x26, #88]
 240:	ldr	x1, [x26, #8]
 244:	add	x0, x1, #0x3f
 248:	and	x0, x0, #0xffffffffffffffc0
 24c:	sub	x0, x0, x1
 250:	adds	x3, x0, #0xc0
 254:	b.cs	30c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj+0x30c>  // b.hs, b.nlast
 258:	ldr	x2, [x26, #16]
 25c:	sub	x2, x2, x1
 260:	cmp	x3, x2
 264:	b.ls	32c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj+0x32c>  // b.plast
 268:	ldr	w0, [x26, #32]
 26c:	lsr	w1, w0, #7
 270:	cmp	w0, #0xeff
 274:	b.ls	33c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj+0x33c>  // b.plast
 278:	mov	x0, #0x40000000000         	// #4398046511104
 27c:	bl	0 <malloc>
 280:	str	x0, [sp, #96]
 284:	cbz	x0, 36c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj+0x36c>
 288:	mov	x0, #0x40000000000         	// #4398046511104
 28c:	str	x0, [sp, #104]
 290:	ldr	w1, [x26, #32]
 294:	ldr	w0, [x26, #36]
 298:	cmp	w1, w0
 29c:	b.cs	378 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj+0x378>  // b.hs, b.nlast
 2a0:	ldr	w1, [x26, #32]
 2a4:	ldr	x0, [x26, #24]
 2a8:	ldr	x2, [sp, #96]
 2ac:	str	x2, [x0, x1, lsl #3]
 2b0:	ldr	w0, [x26, #32]
 2b4:	mov	w1, w0
 2b8:	add	x1, x1, #0x1
 2bc:	ldr	w2, [x26, #36]
 2c0:	cmp	x1, x2
 2c4:	b.hi	390 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj+0x390>  // b.pmore
 2c8:	add	w0, w0, #0x1
 2cc:	str	w0, [x26, #32]
 2d0:	ldr	x0, [sp, #96]
 2d4:	str	x0, [x26, #8]
 2d8:	ldr	x1, [sp, #104]
 2dc:	add	x1, x0, x1
 2e0:	str	x1, [x26, #16]
 2e4:	adds	x0, x0, #0x3f
 2e8:	b.cs	3b0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj+0x3b0>  // b.hs, b.nlast
 2ec:	and	x0, x0, #0xffffffffffffffc0
 2f0:	add	x2, x0, #0xc0
 2f4:	cmp	x1, x2
 2f8:	b.cc	3d0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj+0x3d0>  // b.lo, b.ul, b.last
 2fc:	mov	x25, x0
 300:	add	x0, x0, #0xc0
 304:	str	x0, [x26, #8]
 308:	b	134 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj+0x134>
 30c:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj>
 310:	add	x3, x3, #0x0
 314:	mov	w2, #0xdc                  	// #220
 318:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj>
 31c:	add	x1, x1, #0x0
 320:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj>
 324:	add	x0, x0, #0x0
 328:	bl	0 <__assert_fail>
 32c:	add	x25, x1, x0
 330:	add	x0, x25, #0xc0
 334:	str	x0, [x26, #8]
 338:	b	134 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj+0x134>
 33c:	mov	x0, #0x1000                	// #4096
 340:	lsl	x0, x0, x1
 344:	str	x0, [sp, #104]
 348:	bl	0 <malloc>
 34c:	str	x0, [sp, #96]
 350:	cbnz	x0, 290 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj+0x290>
 354:	mov	w1, #0x1                   	// #1
 358:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj>
 35c:	add	x0, x0, #0x0
 360:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 364:	str	x25, [sp, #96]
 368:	b	290 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj+0x290>
 36c:	mov	x0, #0x40000000000         	// #4398046511104
 370:	str	x0, [sp, #104]
 374:	b	354 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj+0x354>
 378:	mov	x3, #0x8                   	// #8
 37c:	mov	x2, #0x0                   	// #0
 380:	add	x1, x26, #0x28
 384:	add	x0, x26, #0x18
 388:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 38c:	b	2a0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj+0x2a0>
 390:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj>
 394:	add	x3, x3, #0x0
 398:	mov	w2, #0x43                  	// #67
 39c:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj>
 3a0:	add	x1, x1, #0x0
 3a4:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj>
 3a8:	add	x0, x0, #0x0
 3ac:	bl	0 <__assert_fail>
 3b0:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj>
 3b4:	add	x3, x3, #0x0
 3b8:	mov	w2, #0xba                  	// #186
 3bc:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj>
 3c0:	add	x1, x1, #0x0
 3c4:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj>
 3c8:	add	x0, x0, #0x0
 3cc:	bl	0 <__assert_fail>
 3d0:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj>
 3d4:	add	x3, x3, #0x0
 3d8:	mov	w2, #0x105                 	// #261
 3dc:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj>
 3e0:	add	x1, x1, #0x0
 3e4:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj>
 3e8:	add	x0, x0, #0x0
 3ec:	bl	0 <__assert_fail>
 3f0:	mov	w24, w23
 3f4:	mov	w23, #0x0                   	// #0
 3f8:	b	170 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj+0x170>
 3fc:	mov	w1, w20
 400:	mov	x0, x22
 404:	bl	0 <_ZN4llvm15IntervalMapImpl4Path8moveLeftEj>
 408:	b	1b8 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj+0x1b8>
 40c:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj>
 410:	add	x3, x3, #0x0
 414:	mov	w2, #0xb2                  	// #178
 418:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj>
 41c:	add	x1, x1, #0x0
 420:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj>
 424:	add	x0, x0, #0x0
 428:	bl	0 <__assert_fail>
 42c:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj>
 430:	add	x3, x3, #0x0
 434:	mov	w2, #0xba                  	// #186
 438:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj>
 43c:	add	x1, x1, #0x0
 440:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj>
 444:	add	x0, x0, #0x0
 448:	bl	0 <__assert_fail>
 44c:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj>
 450:	add	x3, x3, #0x0
 454:	mov	w2, #0x1fc                 	// #508
 458:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj>
 45c:	add	x1, x1, #0x0
 460:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj>
 464:	add	x0, x0, #0x0
 468:	bl	0 <__assert_fail>
 46c:	mov	w0, w20
 470:	ldr	w1, [x21, #16]
 474:	cmp	x1, w20, uxtw
 478:	b.ls	524 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj+0x524>  // b.plast
 47c:	ldr	x1, [x21, #8]
 480:	add	x0, x1, x0, lsl #4
 484:	str	w5, [x0, #8]
 488:	cbnz	w20, 544 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj+0x544>
 48c:	mov	x2, x3
 490:	mov	w1, w20
 494:	mov	x0, x21
 498:	bl	0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj>
 49c:	add	w27, w19, #0x1
 4a0:	add	x26, x26, #0x8
 4a4:	add	x25, x25, #0x4
 4a8:	cmp	w27, w24
 4ac:	b.eq	5c8 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj+0x5c8>  // b.none
 4b0:	mov	w1, w20
 4b4:	mov	x0, x22
 4b8:	bl	0 <_ZN4llvm15IntervalMapImpl4Path9moveRightEj>
 4bc:	mov	w19, w27
 4c0:	ldr	x0, [x26]
 4c4:	ldr	w5, [x25]
 4c8:	sub	w4, w5, #0x1
 4cc:	ubfiz	x1, x4, #4, #32
 4d0:	add	x1, x0, x1
 4d4:	ldr	x3, [x1, #8]
 4d8:	cmp	w23, #0x0
 4dc:	ccmp	w23, w19, #0x0, ne  // ne = any
 4e0:	b.ne	46c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj+0x46c>  // b.any
 4e4:	tst	x0, #0x3f
 4e8:	b.ne	40c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj+0x40c>  // b.any
 4ec:	mov	w2, w4
 4f0:	tst	x4, #0xffffffc0
 4f4:	b.ne	42c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj+0x42c>  // b.any
 4f8:	and	x0, x0, #0xffffffffffffffc0
 4fc:	orr	x2, x0, x2
 500:	cmp	w5, #0x8
 504:	b.hi	44c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj+0x44c>  // b.pmore
 508:	mov	w1, w20
 50c:	mov	x0, x21
 510:	bl	0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj>
 514:	and	w0, w0, #0xff
 518:	str	w0, [sp, #96]
 51c:	add	w20, w20, w0
 520:	b	49c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj+0x49c>
 524:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj>
 528:	add	x3, x3, #0x0
 52c:	mov	w2, #0x95                  	// #149
 530:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj>
 534:	add	x1, x1, #0x0
 538:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj>
 53c:	add	x0, x0, #0x0
 540:	bl	0 <__assert_fail>
 544:	sub	w0, w20, #0x1
 548:	ldr	w1, [x21, #16]
 54c:	cmp	x0, x1
 550:	b.cs	588 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj+0x588>  // b.hs, b.nlast
 554:	lsl	x0, x0, #4
 558:	ldr	x1, [x21, #8]
 55c:	add	x2, x1, x0
 560:	ldr	w2, [x2, #12]
 564:	ldr	x1, [x1, x0]
 568:	ldr	x0, [x1, x2, lsl #3]
 56c:	mov	w5, w4
 570:	tst	x4, #0xffffffc0
 574:	b.ne	5a8 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj+0x5a8>  // b.any
 578:	and	x0, x0, #0xffffffffffffffc0
 57c:	orr	x0, x0, x5
 580:	str	x0, [x1, x2, lsl #3]
 584:	b	48c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj+0x48c>
 588:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj>
 58c:	add	x3, x3, #0x0
 590:	mov	w2, #0x99                  	// #153
 594:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj>
 598:	add	x1, x1, #0x0
 59c:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj>
 5a0:	add	x0, x0, #0x0
 5a4:	bl	0 <__assert_fail>
 5a8:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj>
 5ac:	add	x3, x3, #0x0
 5b0:	mov	w2, #0xba                  	// #186
 5b4:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj>
 5b8:	add	x1, x1, #0x0
 5bc:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj>
 5c0:	add	x0, x0, #0x0
 5c4:	bl	0 <__assert_fail>
 5c8:	ldr	w0, [sp, #104]
 5cc:	cmp	w19, w0
 5d0:	b.eq	5ec <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj+0x5ec>  // b.none
 5d4:	mov	w1, w20
 5d8:	mov	x0, x22
 5dc:	bl	0 <_ZN4llvm15IntervalMapImpl4Path8moveLeftEj>
 5e0:	sub	w19, w19, #0x1
 5e4:	cmp	w19, w28
 5e8:	b.ne	5d4 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj+0x5d4>  // b.any
 5ec:	mov	w1, w20
 5f0:	ldr	w0, [x21, #16]
 5f4:	cmp	x0, w20, uxtw
 5f8:	b.ls	630 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj+0x630>  // b.plast
 5fc:	ldr	x0, [x21, #8]
 600:	add	x1, x0, x1, lsl #4
 604:	ldr	x0, [sp, #104]
 608:	lsr	x0, x0, #32
 60c:	str	w0, [x1, #12]
 610:	ldrb	w0, [sp, #96]
 614:	ldp	x19, x20, [sp, #16]
 618:	ldp	x21, x22, [sp, #32]
 61c:	ldp	x23, x24, [sp, #48]
 620:	ldp	x25, x26, [sp, #64]
 624:	ldp	x27, x28, [sp, #80]
 628:	ldp	x29, x30, [sp], #176
 62c:	ret
 630:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj>
 634:	add	x3, x3, #0x0
 638:	mov	w2, #0x95                  	// #149
 63c:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj>
 640:	add	x1, x1, #0x0
 644:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator8overflowINS_15IntervalMapImpl8LeafNodeImlLj8ES2_EEEEbj>
 648:	add	x0, x0, #0x0
 64c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml:

0000000000000000 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	mov	x19, x0
  18:	mov	x21, x1
  1c:	mov	x20, x2
  20:	mov	x22, x3
  24:	add	x23, x0, #0x8
  28:	ldr	w1, [x0, #16]
  2c:	cbz	w1, 5a4 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml+0x5a4>
  30:	ldr	x0, [x0, #8]
  34:	ldr	w2, [x0, #8]
  38:	ldr	w0, [x0, #12]
  3c:	cmp	w2, w0
  40:	b.hi	5e4 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml+0x5e4>  // b.pmore
  44:	ldr	x0, [x19]
  48:	ldr	w24, [x0, #192]
  4c:	b	5ac <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml+0x5ac>
  50:	stp	x25, x26, [sp, #64]
  54:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
  58:	add	x3, x3, #0x0
  5c:	mov	w2, #0x95                  	// #149
  60:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
  64:	add	x1, x1, #0x0
  68:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
  6c:	add	x0, x0, #0x0
  70:	bl	0 <__assert_fail>
  74:	stp	x25, x26, [sp, #64]
  78:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0xa7                  	// #167
  84:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
  88:	add	x1, x1, #0x0
  8c:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
  90:	add	x0, x0, #0x0
  94:	bl	0 <__assert_fail>
  98:	sub	w1, w1, #0x1
  9c:	mov	x0, x23
  a0:	bl	0 <_ZNK4llvm15IntervalMapImpl4Path14getLeftSiblingEj>
  a4:	cbz	x0, 410 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml+0x410>
  a8:	and	x24, x0, #0xffffffffffffffc0
  ac:	and	x1, x0, #0x3f
  b0:	add	x0, x1, #0x10
  b4:	ldr	x0, [x24, x0, lsl #3]
  b8:	cmp	x0, x22
  bc:	b.ne	420 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml+0x420>  // b.any
  c0:	stp	x25, x26, [sp, #64]
  c4:	lsl	x25, x1, #4
  c8:	add	x26, x24, x25
  cc:	ldr	x0, [x26, #8]
  d0:	cmp	x0, x21
  d4:	b.eq	e0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml+0xe0>  // b.none
  d8:	ldp	x25, x26, [sp, #64]
  dc:	b	420 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml+0x420>
  e0:	ldr	w1, [x19, #16]
  e4:	cbz	w1, 140 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml+0x140>
  e8:	ldr	x0, [x19, #8]
  ec:	ubfiz	x2, x1, #4, #32
  f0:	add	x0, x0, x2
  f4:	ldur	x21, [x0, #-16]
  f8:	sub	w1, w1, #0x1
  fc:	mov	x0, x23
 100:	bl	0 <_ZN4llvm15IntervalMapImpl4Path8moveLeftEj>
 104:	ldr	x0, [x21]
 108:	cmp	x0, x20
 10c:	b.cc	160 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml+0x160>  // b.lo, b.ul, b.last
 110:	ldr	x1, [x21, #128]
 114:	cmp	x1, x22
 118:	ccmp	x0, x20, #0x0, eq  // eq = none
 11c:	b.eq	160 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml+0x160>  // b.none
 120:	ldr	w1, [x19, #16]
 124:	str	x20, [x26, #8]
 128:	mov	x2, x20
 12c:	sub	w1, w1, #0x1
 130:	mov	x0, x19
 134:	bl	0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
 138:	ldp	x25, x26, [sp, #64]
 13c:	b	4c8 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml+0x4c8>
 140:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
 144:	add	x3, x3, #0x0
 148:	mov	w2, #0xab                  	// #171
 14c:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
 150:	add	x1, x1, #0x0
 154:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
 158:	add	x0, x0, #0x0
 15c:	bl	0 <__assert_fail>
 160:	ldr	x21, [x24, x25]
 164:	ldr	x24, [x19]
 168:	ldr	w2, [x19, #16]
 16c:	cbz	w2, 258 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml+0x258>
 170:	ubfiz	x0, x2, #4, #32
 174:	sub	x0, x0, #0x10
 178:	ldr	x1, [x19, #8]
 17c:	add	x3, x1, x0
 180:	ldr	x1, [x1, x0]
 184:	ldr	w7, [x3, #8]
 188:	cmp	w7, #0x1
 18c:	b.eq	278 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml+0x278>  // b.none
 190:	ldr	w0, [x3, #12]
 194:	adds	w0, w0, #0x1
 198:	b.cs	29c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml+0x29c>  // b.hs, b.nlast
 19c:	cmp	w7, #0x8
 1a0:	b.hi	2bc <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml+0x2bc>  // b.pmore
 1a4:	sub	w3, w7, #0x1
 1a8:	cmp	w3, #0x8
 1ac:	b.hi	2dc <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml+0x2dc>  // b.pmore
 1b0:	cmp	w7, w0
 1b4:	b.eq	200 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml+0x200>  // b.none
 1b8:	ubfiz	x2, x0, #4, #32
 1bc:	add	x5, x1, x2
 1c0:	ldr	x6, [x1, x2]
 1c4:	sub	w2, w0, #0x1
 1c8:	lsl	x3, x2, #4
 1cc:	add	x4, x1, x3
 1d0:	str	x6, [x1, x3]
 1d4:	ldr	x3, [x5, #8]
 1d8:	str	x3, [x4, #8]
 1dc:	add	x3, x1, w0, uxtw #3
 1e0:	ldr	x3, [x3, #128]
 1e4:	add	x2, x2, #0x10
 1e8:	str	x3, [x1, x2, lsl #3]
 1ec:	add	w0, w0, #0x1
 1f0:	cmp	w7, w0
 1f4:	b.ne	1b8 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml+0x1b8>  // b.any
 1f8:	ldr	w2, [x19, #16]
 1fc:	cbz	w2, 2fc <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml+0x2fc>
 200:	ldr	x6, [x19, #8]
 204:	ubfiz	x0, x2, #4, #32
 208:	add	x0, x6, x0
 20c:	ldur	w3, [x0, #-8]
 210:	sub	w5, w3, #0x1
 214:	ldr	w0, [x24, #192]
 218:	mov	w4, w0
 21c:	cmp	x4, w2, uxtw
 220:	b.cs	31c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml+0x31c>  // b.hs, b.nlast
 224:	add	x4, x6, x4, lsl #4
 228:	str	w5, [x4, #8]
 22c:	cbnz	w0, 33c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml+0x33c>
 230:	ldr	w0, [x19, #16]
 234:	cbz	w0, 3c4 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml+0x3c4>
 238:	ldr	x2, [x19, #8]
 23c:	ubfiz	x0, x0, #4, #32
 240:	add	x0, x2, x0
 244:	ldur	w0, [x0, #-4]
 248:	cmp	w5, w0
 24c:	b.eq	3e4 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml+0x3e4>  // b.none
 250:	ldp	x25, x26, [sp, #64]
 254:	b	60c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml+0x60c>
 258:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
 25c:	add	x3, x3, #0x0
 260:	mov	w2, #0xab                  	// #171
 264:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
 268:	add	x1, x1, #0x0
 26c:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
 270:	add	x0, x0, #0x0
 274:	bl	0 <__assert_fail>
 278:	ldr	x0, [x24, #200]
 27c:	ldr	x2, [x0]
 280:	str	x2, [x1]
 284:	str	x1, [x0]
 288:	ldr	w1, [x24, #192]
 28c:	mov	x0, x19
 290:	bl	0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
 294:	ldp	x25, x26, [sp, #64]
 298:	b	420 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml+0x420>
 29c:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
 2a0:	add	x3, x3, #0x0
 2a4:	mov	w2, #0xf8                  	// #248
 2a8:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
 2ac:	add	x1, x1, #0x0
 2b0:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
 2b4:	add	x0, x0, #0x0
 2b8:	bl	0 <__assert_fail>
 2bc:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
 2c0:	add	x3, x3, #0x0
 2c4:	mov	w2, #0xeb                  	// #235
 2c8:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
 2cc:	add	x1, x1, #0x0
 2d0:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
 2d4:	add	x0, x0, #0x0
 2d8:	bl	0 <__assert_fail>
 2dc:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
 2e0:	add	x3, x3, #0x0
 2e4:	mov	w2, #0xec                  	// #236
 2e8:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
 2ec:	add	x1, x1, #0x0
 2f0:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
 2f4:	add	x0, x0, #0x0
 2f8:	bl	0 <__assert_fail>
 2fc:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
 300:	add	x3, x3, #0x0
 304:	mov	w2, #0xab                  	// #171
 308:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
 30c:	add	x1, x1, #0x0
 310:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
 314:	add	x0, x0, #0x0
 318:	bl	0 <__assert_fail>
 31c:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
 320:	add	x3, x3, #0x0
 324:	mov	w2, #0x95                  	// #149
 328:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
 32c:	add	x1, x1, #0x0
 330:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
 334:	add	x0, x0, #0x0
 338:	bl	0 <__assert_fail>
 33c:	sub	w0, w0, #0x1
 340:	ldr	w2, [x19, #16]
 344:	cmp	x0, x2
 348:	b.cs	384 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml+0x384>  // b.hs, b.nlast
 34c:	lsl	x6, x0, #4
 350:	ldr	x4, [x19, #8]
 354:	add	x0, x4, x0, lsl #4
 358:	ldr	w2, [x0, #12]
 35c:	lsl	x2, x2, #3
 360:	ldr	x4, [x4, x6]
 364:	ldr	x0, [x4, x2]
 368:	sub	w6, w3, #0x2
 36c:	tst	x6, #0xffffffffffffffc0
 370:	b.ne	3a4 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml+0x3a4>  // b.any
 374:	and	x0, x0, #0xffffffffffffffc0
 378:	orr	x0, x0, x6
 37c:	str	x0, [x4, x2]
 380:	b	230 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml+0x230>
 384:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
 388:	add	x3, x3, #0x0
 38c:	mov	w2, #0x99                  	// #153
 390:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
 394:	add	x1, x1, #0x0
 398:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
 39c:	add	x0, x0, #0x0
 3a0:	bl	0 <__assert_fail>
 3a4:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
 3a8:	add	x3, x3, #0x0
 3ac:	mov	w2, #0xba                  	// #186
 3b0:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
 3b4:	add	x1, x1, #0x0
 3b8:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
 3bc:	add	x0, x0, #0x0
 3c0:	bl	0 <__assert_fail>
 3c4:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
 3c8:	add	x3, x3, #0x0
 3cc:	mov	w2, #0xa7                  	// #167
 3d0:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
 3d4:	add	x1, x1, #0x0
 3d8:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
 3dc:	add	x0, x0, #0x0
 3e0:	bl	0 <__assert_fail>
 3e4:	sub	w3, w3, #0x2
 3e8:	add	x1, x1, x3, lsl #4
 3ec:	ldr	x2, [x1, #8]
 3f0:	ldr	w1, [x24, #192]
 3f4:	mov	x0, x19
 3f8:	bl	0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
 3fc:	ldr	w1, [x24, #192]
 400:	mov	x0, x23
 404:	bl	0 <_ZN4llvm15IntervalMapImpl4Path9moveRightEj>
 408:	ldp	x25, x26, [sp, #64]
 40c:	b	420 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml+0x420>
 410:	ldr	x0, [x19]
 414:	ldr	w1, [x0, #192]
 418:	cbz	w1, 44c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml+0x44c>
 41c:	str	x21, [x0]
 420:	ldr	w0, [x19, #16]
 424:	cbnz	w0, 610 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml+0x610>
 428:	stp	x25, x26, [sp, #64]
 42c:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
 430:	add	x3, x3, #0x0
 434:	mov	w2, #0xab                  	// #171
 438:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
 43c:	add	x1, x1, #0x0
 440:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
 444:	add	x0, x0, #0x0
 448:	bl	0 <__assert_fail>
 44c:	stp	x25, x26, [sp, #64]
 450:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
 454:	add	x3, x3, #0x0
 458:	mov	w2, #0x3e9                 	// #1001
 45c:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
 460:	add	x1, x1, #0x0
 464:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
 468:	add	x0, x0, #0x0
 46c:	bl	0 <__assert_fail>
 470:	stp	x25, x26, [sp, #64]
 474:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
 478:	add	x3, x3, #0x0
 47c:	mov	w2, #0xa7                  	// #167
 480:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
 484:	add	x1, x1, #0x0
 488:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
 48c:	add	x0, x0, #0x0
 490:	bl	0 <__assert_fail>
 494:	cmp	w24, w23
 498:	cset	w23, eq  // eq = none
 49c:	ldr	w1, [x19, #16]
 4a0:	sub	w2, w1, #0x1
 4a4:	mov	w3, w2
 4a8:	mov	w4, w1
 4ac:	cmp	x4, w2, uxtw
 4b0:	b.ls	4dc <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml+0x4dc>  // b.plast
 4b4:	ldr	x4, [x19, #8]
 4b8:	add	x3, x4, x3, lsl #4
 4bc:	str	w0, [x3, #8]
 4c0:	cbnz	w2, 500 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml+0x500>
 4c4:	cbnz	w23, 58c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml+0x58c>
 4c8:	ldp	x19, x20, [sp, #16]
 4cc:	ldp	x21, x22, [sp, #32]
 4d0:	ldp	x23, x24, [sp, #48]
 4d4:	ldp	x29, x30, [sp], #80
 4d8:	ret
 4dc:	stp	x25, x26, [sp, #64]
 4e0:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
 4e4:	add	x3, x3, #0x0
 4e8:	mov	w2, #0x95                  	// #149
 4ec:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
 4f0:	add	x1, x1, #0x0
 4f4:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
 4f8:	add	x0, x0, #0x0
 4fc:	bl	0 <__assert_fail>
 500:	sub	w1, w1, #0x2
 504:	ldr	w2, [x19, #16]
 508:	cmp	x1, x2
 50c:	b.cs	544 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml+0x544>  // b.hs, b.nlast
 510:	lsl	x1, x1, #4
 514:	ldr	x2, [x19, #8]
 518:	add	x3, x2, x1
 51c:	ldr	w3, [x3, #12]
 520:	ldr	x2, [x2, x1]
 524:	ldr	x1, [x2, x3, lsl #3]
 528:	sub	w0, w0, #0x1
 52c:	tst	x0, #0xffffffffffffffc0
 530:	b.ne	568 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml+0x568>  // b.any
 534:	and	x1, x1, #0xffffffffffffffc0
 538:	orr	x0, x1, x0
 53c:	str	x0, [x2, x3, lsl #3]
 540:	b	4c4 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml+0x4c4>
 544:	stp	x25, x26, [sp, #64]
 548:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
 54c:	add	x3, x3, #0x0
 550:	mov	w2, #0x99                  	// #153
 554:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
 558:	add	x1, x1, #0x0
 55c:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
 560:	add	x0, x0, #0x0
 564:	bl	0 <__assert_fail>
 568:	stp	x25, x26, [sp, #64]
 56c:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
 570:	add	x3, x3, #0x0
 574:	mov	w2, #0xba                  	// #186
 578:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
 57c:	add	x1, x1, #0x0
 580:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
 584:	add	x0, x0, #0x0
 588:	bl	0 <__assert_fail>
 58c:	ldr	w1, [x19, #16]
 590:	mov	x2, x20
 594:	sub	w1, w1, #0x1
 598:	mov	x0, x19
 59c:	bl	0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
 5a0:	b	4c8 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml+0x4c8>
 5a4:	ldr	x0, [x0]
 5a8:	ldr	w24, [x0, #192]
 5ac:	mov	w1, w24
 5b0:	mov	x0, x23
 5b4:	bl	0 <_ZN4llvm15IntervalMapImpl4Path8moveLeftEj>
 5b8:	mov	w0, w24
 5bc:	ldr	w1, [x19, #16]
 5c0:	cmp	x1, w24, uxtw
 5c4:	b.ls	50 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml+0x50>  // b.plast
 5c8:	ldr	x1, [x19, #8]
 5cc:	add	x0, x1, x0, lsl #4
 5d0:	ldr	w1, [x0, #12]
 5d4:	add	w1, w1, #0x1
 5d8:	str	w1, [x0, #12]
 5dc:	ldr	w1, [x19, #16]
 5e0:	cbz	w1, 74 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml+0x74>
 5e4:	ubfiz	x0, x1, #4, #32
 5e8:	sub	x0, x0, #0x10
 5ec:	ldr	x2, [x19, #8]
 5f0:	add	x3, x2, x0
 5f4:	ldr	w3, [x3, #12]
 5f8:	cbnz	w3, 60c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml+0x60c>
 5fc:	ldr	x0, [x2, x0]
 600:	ldr	x0, [x0]
 604:	cmp	x0, x21
 608:	b.hi	98 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml+0x98>  // b.pmore
 60c:	ldr	w0, [x19, #16]
 610:	ubfiz	x0, x0, #4, #32
 614:	sub	x0, x0, #0x10
 618:	ldr	x6, [x19, #8]
 61c:	add	x1, x6, x0
 620:	ldr	w23, [x1, #8]
 624:	ldr	w24, [x1, #12]!
 628:	mov	x5, x22
 62c:	mov	x4, x20
 630:	mov	x3, x21
 634:	mov	w2, w23
 638:	ldr	x0, [x6, x0]
 63c:	bl	0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
 640:	cmp	w0, #0x8
 644:	b.ls	494 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml+0x494>  // b.plast
 648:	ldr	w1, [x19, #16]
 64c:	sub	w1, w1, #0x1
 650:	mov	x0, x19
 654:	bl	0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
 658:	ldr	w0, [x19, #16]
 65c:	cbz	w0, 470 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml+0x470>
 660:	ubfiz	x0, x0, #4, #32
 664:	sub	x0, x0, #0x10
 668:	ldr	x6, [x19, #8]
 66c:	add	x1, x6, x0
 670:	ldr	w2, [x1, #8]
 674:	ldr	w3, [x1, #12]!
 678:	cmp	w3, w2
 67c:	cset	w23, eq  // eq = none
 680:	mov	x5, x22
 684:	mov	x4, x20
 688:	mov	x3, x21
 68c:	ldr	x0, [x6, x0]
 690:	bl	0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
 694:	cmp	w0, #0x8
 698:	b.ls	49c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml+0x49c>  // b.plast
 69c:	stp	x25, x26, [sp, #64]
 6a0:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
 6a4:	add	x3, x3, #0x0
 6a8:	mov	w2, #0x740                 	// #1856
 6ac:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
 6b0:	add	x1, x1, #0x0
 6b4:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator10treeInsertEmml>
 6b8:	add	x0, x0, #0x0
 6bc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator6insertEmml:

0000000000000000 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator6insertEmml>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	str	x23, [sp, #48]
  14:	ldr	x20, [x0]
  18:	cbz	x20, d0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator6insertEmml+0xd0>
  1c:	mov	x19, x0
  20:	mov	x21, x1
  24:	mov	x22, x2
  28:	mov	x23, x3
  2c:	ldr	w0, [x20, #192]
  30:	cbnz	w0, f0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator6insertEmml+0xf0>
  34:	ldr	w1, [x19, #16]
  38:	cbz	w1, fc <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator6insertEmml+0xfc>
  3c:	ubfiz	x1, x1, #4, #32
  40:	ldr	x0, [x19, #8]
  44:	add	x1, x0, x1
  48:	mov	x5, x3
  4c:	mov	x4, x2
  50:	mov	x3, x21
  54:	ldr	w2, [x20, #196]
  58:	sub	x1, x1, #0x4
  5c:	mov	x0, x20
  60:	bl	0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator6insertEmml>
  64:	cmp	w0, #0x8
  68:	b.ls	11c <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator6insertEmml+0x11c>  // b.plast
  6c:	ldr	w0, [x19, #16]
  70:	cbz	w0, 154 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator6insertEmml+0x154>
  74:	ldr	x1, [x19, #8]
  78:	ubfiz	x0, x0, #4, #32
  7c:	add	x0, x1, x0
  80:	ldur	w1, [x0, #-4]
  84:	mov	x0, x20
  88:	bl	0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator6insertEmml>
  8c:	mov	x3, x0
  90:	ldr	w0, [x20, #192]
  94:	cbz	w0, 174 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator6insertEmml+0x174>
  98:	ldr	w2, [x20, #196]
  9c:	add	x1, x20, #0x8
  a0:	add	x0, x19, #0x8
  a4:	bl	0 <_ZN4llvm15IntervalMapImpl4Path11replaceRootEPvjSt4pairIjjE>
  a8:	mov	x3, x23
  ac:	mov	x2, x22
  b0:	mov	x1, x21
  b4:	mov	x0, x19
  b8:	bl	0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator6insertEmml>
  bc:	ldp	x19, x20, [sp, #16]
  c0:	ldp	x21, x22, [sp, #32]
  c4:	ldr	x23, [sp, #48]
  c8:	ldp	x29, x30, [sp], #64
  cc:	ret
  d0:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator6insertEmml>
  d4:	add	x3, x3, #0x0
  d8:	mov	w2, #0x521                 	// #1313
  dc:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator6insertEmml>
  e0:	add	x1, x1, #0x0
  e4:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator6insertEmml>
  e8:	add	x0, x0, #0x0
  ec:	bl	0 <__assert_fail>
  f0:	mov	x0, x19
  f4:	bl	0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator6insertEmml>
  f8:	b	bc <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator6insertEmml+0xbc>
  fc:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator6insertEmml>
 100:	add	x3, x3, #0x0
 104:	mov	w2, #0xa7                  	// #167
 108:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator6insertEmml>
 10c:	add	x1, x1, #0x0
 110:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator6insertEmml>
 114:	add	x0, x0, #0x0
 118:	bl	0 <__assert_fail>
 11c:	str	w0, [x20, #196]
 120:	ldr	w1, [x19, #16]
 124:	cbz	w1, 134 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator6insertEmml+0x134>
 128:	ldr	x1, [x19, #8]
 12c:	str	w0, [x1, #8]
 130:	b	bc <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator6insertEmml+0xbc>
 134:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator6insertEmml>
 138:	add	x3, x3, #0x0
 13c:	mov	w2, #0x95                  	// #149
 140:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator6insertEmml>
 144:	add	x1, x1, #0x0
 148:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator6insertEmml>
 14c:	add	x0, x0, #0x0
 150:	bl	0 <__assert_fail>
 154:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator6insertEmml>
 158:	add	x3, x3, #0x0
 15c:	mov	w2, #0xa7                  	// #167
 160:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator6insertEmml>
 164:	add	x1, x1, #0x0
 168:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator6insertEmml>
 16c:	add	x0, x0, #0x0
 170:	bl	0 <__assert_fail>
 174:	adrp	x3, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator6insertEmml>
 178:	add	x3, x3, #0x0
 17c:	mov	w2, #0x3e9                 	// #1001
 180:	adrp	x1, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator6insertEmml>
 184:	add	x1, x1, #0x0
 188:	adrp	x0, 0 <_ZN4llvm11IntervalMapImlLj8ENS_23IntervalMapHalfOpenInfoImEEE8iterator6insertEmml>
 18c:	add	x0, x0, #0x0
 190:	bl	0 <__assert_fail>

DWARFLinkerDeclContext.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>:
       0:	ldr	w3, [x1, #8]
       4:	ldr	w4, [x0, #72]
       8:	cmp	w4, w3
       c:	b.eq	24 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE+0x24>  // b.none
      10:	str	w3, [x0, #72]
      14:	ldp	x2, x3, [x2]
      18:	stp	x2, x3, [x0, #56]
      1c:	mov	w0, #0x1                   	// #1
      20:	ret
      24:	ldr	x3, [x1]
      28:	ldr	x0, [x0, #64]
      2c:	ldr	x2, [x3, #544]
      30:	cmp	x0, x2
      34:	b.cc	6c <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE+0x6c>  // b.lo, b.ul, b.last
      38:	ldr	x3, [x3, #552]
      3c:	cmp	x0, x3
      40:	b.cs	6c <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE+0x6c>  // b.hs, b.nlast
      44:	sub	x0, x0, x2
      48:	asr	x0, x0, #3
      4c:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
      50:	movk	x2, #0xaaab
      54:	mul	w0, w0, w2
      58:	ldr	x1, [x1, #16]
      5c:	add	x0, x1, x0, lsl #5
      60:	str	xzr, [x0, #8]
      64:	mov	w0, #0x0                   	// #0
      68:	ret
      6c:	stp	x29, x30, [sp, #-16]!
      70:	mov	x29, sp
      74:	adrp	x3, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
      78:	add	x3, x3, #0x0
      7c:	mov	w2, #0xf3                  	// #243
      80:	adrp	x1, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
      84:	add	x1, x1, #0x0
      88:	adrp	x0, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
      8c:	add	x0, x0, #0x0
      90:	bl	0 <__assert_fail>

0000000000000094 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb>:
      94:	stp	x29, x30, [sp, #-336]!
      98:	mov	x29, sp
      9c:	stp	x19, x20, [sp, #16]
      a0:	stp	x21, x22, [sp, #32]
      a4:	stp	x23, x24, [sp, #48]
      a8:	stp	x25, x26, [sp, #64]
      ac:	mov	x20, x0
      b0:	ldr	x0, [x2]
      b4:	cbz	x0, 128 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x94>
      b8:	mov	x21, x1
      bc:	mov	x19, x2
      c0:	mov	x22, x3
      c4:	mov	x24, x4
      c8:	and	w25, w5, #0xff
      cc:	ldr	x0, [x2, #8]
      d0:	cbz	x0, 128 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x94>
      d4:	ldr	x0, [x0, #16]
      d8:	cbz	x0, 168 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xd4>
      dc:	ldrh	w0, [x0, #4]
      e0:	str	w0, [sp, #328]
      e4:	cmp	w0, #0x1e
      e8:	b.eq	1a4 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x110>  // b.none
      ec:	b.hi	358 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x2c4>  // b.pmore
      f0:	cmp	w0, #0x11
      f4:	b.ne	14c <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xb8>  // b.any
      f8:	mov	x0, x1
      fc:	tst	x1, #0x7
     100:	b.eq	16c <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xd8>  // b.none
     104:	stp	x27, x28, [sp, #80]
     108:	adrp	x3, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     10c:	add	x3, x3, #0x0
     110:	mov	w2, #0xb2                  	// #178
     114:	adrp	x1, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     118:	add	x1, x1, #0x0
     11c:	adrp	x0, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     120:	add	x0, x0, #0x0
     124:	bl	0 <__assert_fail>
     128:	stp	x27, x28, [sp, #80]
     12c:	adrp	x3, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     130:	add	x3, x3, #0x0
     134:	mov	w2, #0x3c                  	// #60
     138:	adrp	x1, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     13c:	add	x1, x1, #0x0
     140:	adrp	x0, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     144:	add	x0, x0, #0x0
     148:	bl	0 <__assert_fail>
     14c:	b.ls	184 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xf0>  // b.plast
     150:	cmp	w0, #0x13
     154:	b.eq	18c <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xf8>  // b.none
     158:	sub	w0, w0, #0x16
     15c:	and	w0, w0, #0xffff
     160:	cmp	w0, #0x1
     164:	b.ls	18c <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xf8>  // b.plast
     168:	mov	x0, #0x0                   	// #0
     16c:	ldp	x19, x20, [sp, #16]
     170:	ldp	x21, x22, [sp, #32]
     174:	ldp	x23, x24, [sp, #48]
     178:	ldp	x25, x26, [sp, #64]
     17c:	ldp	x29, x30, [sp], #336
     180:	ret
     184:	cmp	w0, #0xd
     188:	b.ne	344 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x2b0>  // b.any
     18c:	add	x8, sp, #0x98
     190:	mov	w1, #0x34                  	// #52
     194:	mov	x0, x19
     198:	bl	0 <_ZNK4llvm8DWARFDie4findENS_5dwarf9AttributeE>
     19c:	ldrb	w0, [sp, #200]
     1a0:	cbnz	w0, 3b4 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x320>
     1a4:	mov	w1, #0x2                   	// #2
     1a8:	mov	x0, x19
     1ac:	bl	0 <_ZNK4llvm8DWARFDie7getNameENS_10DINameKindE>
     1b0:	mov	x26, x0
     1b4:	mov	w1, #0x1                   	// #1
     1b8:	mov	x0, x19
     1bc:	bl	0 <_ZNK4llvm8DWARFDie7getNameENS_10DINameKindE>
     1c0:	mov	x23, x0
     1c4:	str	xzr, [sp, #312]
     1c8:	str	xzr, [sp, #320]
     1cc:	str	xzr, [sp, #296]
     1d0:	str	xzr, [sp, #304]
     1d4:	cbz	x26, 3d0 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x33c>
     1d8:	mov	x0, x26
     1dc:	bl	0 <strlen>
     1e0:	mov	x1, x26
     1e4:	mov	x2, x0
     1e8:	mov	x0, x24
     1ec:	bl	0 <_ZN4llvm24NonRelocatableStringpool12internStringENS_9StringRefE>
     1f0:	add	x2, sp, #0x210
     1f4:	stp	x0, x1, [x2, #-216]
     1f8:	cmp	x23, #0x0
     1fc:	ccmp	x26, x23, #0x4, ne  // ne = any
     200:	b.eq	21c <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x188>  // b.none
     204:	mov	x0, x23
     208:	bl	0 <strlen>
     20c:	mov	x1, x23
     210:	mov	x2, x0
     214:	mov	x0, x24
     218:	bl	0 <_ZN4llvm24NonRelocatableStringpool12internStringENS_9StringRefE>
     21c:	ldr	w0, [sp, #328]
     220:	sub	w1, w0, #0x2
     224:	and	w0, w0, #0xfffffffb
     228:	tst	w1, #0xfffffffd
     22c:	ccmp	w0, #0x13, #0x4, ne  // ne = any
     230:	b.ne	3fc <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x368>  // b.any
     234:	mov	w23, #0xffffffff            	// #-1
     238:	cbz	w25, 420 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x38c>
     23c:	ldr	x1, [sp, #320]
     240:	mov	x0, #0x0                   	// #0
     244:	cbz	x1, 16c <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xd8>
     248:	stp	x27, x28, [sp, #80]
     24c:	str	wzr, [sp, #100]
     250:	ldr	w0, [x21]
     254:	str	w0, [sp, #332]
     258:	add	x2, sp, #0x138
     25c:	add	x1, sp, #0x148
     260:	add	x0, sp, #0x14c
     264:	bl	0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     268:	str	w0, [sp, #292]
     26c:	ldr	w0, [sp, #328]
     270:	cmp	w0, #0x39
     274:	b.eq	708 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x674>  // b.none
     278:	ldr	w1, [sp, #292]
     27c:	ldr	w4, [sp, #328]
     280:	ldr	x26, [sp, #312]
     284:	ldr	x2, [sp, #320]
     288:	str	x2, [sp, #104]
     28c:	ldr	x27, [sp, #296]
     290:	ldr	x28, [sp, #304]
     294:	str	w1, [sp, #208]
     298:	ldr	w0, [sp, #100]
     29c:	str	w0, [sp, #212]
     2a0:	str	w23, [sp, #216]
     2a4:	strh	w4, [sp, #220]
     2a8:	ldrb	w0, [sp, #222]
     2ac:	and	w0, w0, #0xfffffffe
     2b0:	strb	w0, [sp, #222]
     2b4:	str	x26, [sp, #224]
     2b8:	str	x2, [sp, #232]
     2bc:	str	x27, [sp, #240]
     2c0:	str	x28, [sp, #248]
     2c4:	str	x21, [sp, #256]
     2c8:	str	xzr, [sp, #264]
     2cc:	str	xzr, [sp, #272]
     2d0:	str	wzr, [sp, #280]
     2d4:	str	wzr, [sp, #284]
     2d8:	ldr	x2, [x20, #192]
     2dc:	ldr	w0, [x20, #208]
     2e0:	cbz	w0, 810 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x77c>
     2e4:	add	x3, sp, #0x150
     2e8:	cmp	x3, #0x78
     2ec:	add	x3, sp, #0xd0
     2f0:	ccmn	x3, #0x10, #0x4, ne  // ne = any
     2f4:	b.eq	740 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x6ac>  // b.none
     2f8:	sub	w6, w0, #0x1
     2fc:	and	w1, w1, w6
     300:	ldr	x8, [sp, #208]
     304:	mov	w10, #0x1                   	// #1
     308:	mov	x9, #0x0                   	// #0
     30c:	add	x24, x2, w1, uxtw #3
     310:	ldr	x3, [x2, w1, uxtw #3]
     314:	cmn	x3, #0x10
     318:	cset	w5, eq  // eq = none
     31c:	cmp	w5, #0x0
     320:	ccmn	x3, #0x8, #0x4, eq  // eq = none
     324:	b.eq	808 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x774>  // b.none
     328:	ldr	x7, [x3]
     32c:	cmp	x8, x7
     330:	b.eq	760 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x6cc>  // b.none
     334:	add	w1, w1, w10
     338:	and	w1, w6, w1
     33c:	add	w10, w10, #0x1
     340:	b	30c <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x278>
     344:	sub	w0, w0, #0x2
     348:	and	w0, w0, #0xfffffffd
     34c:	tst	w0, #0xffff
     350:	b.eq	18c <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xf8>  // b.none
     354:	b	168 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xd4>
     358:	cmp	w0, #0x2e
     35c:	b.ne	390 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x2fc>  // b.any
     360:	ldrh	w0, [x1, #12]
     364:	cmp	w0, #0x39
     368:	ccmp	w0, #0x11, #0x4, ne  // ne = any
     36c:	b.ne	18c <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xf8>  // b.any
     370:	add	x8, sp, #0x98
     374:	mov	w1, #0x3f                  	// #63
     378:	mov	x0, x2
     37c:	bl	0 <_ZNK4llvm8DWARFDie4findENS_5dwarf9AttributeE>
     380:	ldrb	w0, [sp, #200]
     384:	cbnz	w0, 39c <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x308>
     388:	mov	x0, #0x0                   	// #0
     38c:	b	16c <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xd8>
     390:	cmp	w0, #0x39
     394:	b.eq	18c <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xf8>  // b.none
     398:	b	168 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xd4>
     39c:	add	x0, sp, #0x98
     3a0:	bl	0 <_ZNK4llvm14DWARFFormValue21getAsUnsignedConstantEv>
     3a4:	tst	w1, #0xff
     3a8:	b.eq	388 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x2f4>  // b.none
     3ac:	cbnz	x0, 18c <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xf8>
     3b0:	b	388 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x2f4>
     3b4:	add	x0, sp, #0x98
     3b8:	bl	0 <_ZNK4llvm14DWARFFormValue21getAsUnsignedConstantEv>
     3bc:	tst	w1, #0xff
     3c0:	b.eq	1a4 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x110>  // b.none
     3c4:	cbz	x0, 1a4 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x110>
     3c8:	mov	x0, #0x0                   	// #0
     3cc:	b	16c <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xd8>
     3d0:	ldr	w0, [sp, #328]
     3d4:	cmp	w0, #0x39
     3d8:	b.ne	1f8 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x164>  // b.any
     3dc:	adrp	x1, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     3e0:	add	x1, x1, #0x0
     3e4:	mov	x2, #0x15                  	// #21
     3e8:	mov	x0, x24
     3ec:	bl	0 <_ZN4llvm24NonRelocatableStringpool12internStringENS_9StringRefE>
     3f0:	add	x2, sp, #0x210
     3f4:	stp	x0, x1, [x2, #-216]
     3f8:	b	1f8 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x164>
     3fc:	ldr	x0, [sp, #320]
     400:	cbz	x0, 418 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x384>
     404:	mov	w23, #0xffffffff            	// #-1
     408:	str	wzr, [sp, #100]
     40c:	cbz	w25, 420 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x38c>
     410:	stp	x27, x28, [sp, #80]
     414:	b	250 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x1bc>
     418:	mov	x0, #0x0                   	// #0
     41c:	b	16c <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xd8>
     420:	add	x8, sp, #0x98
     424:	mov	w1, #0xb                   	// #11
     428:	mov	x0, x19
     42c:	bl	0 <_ZNK4llvm8DWARFDie4findENS_5dwarf9AttributeE>
     430:	ldrb	w0, [sp, #200]
     434:	mov	x23, #0xffffffffffffffff    	// #-1
     438:	cbnz	w0, 4b8 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x424>
     43c:	ldr	w0, [sp, #328]
     440:	cmp	w0, #0x39
     444:	ccmp	x26, #0x0, #0x4, eq  // eq = none
     448:	b.ne	23c <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x1a8>  // b.any
     44c:	add	x8, sp, #0x98
     450:	mov	w1, #0x3a                  	// #58
     454:	mov	x0, x19
     458:	bl	0 <_ZNK4llvm8DWARFDie4findENS_5dwarf9AttributeE>
     45c:	ldrb	w0, [sp, #200]
     460:	cbz	w0, 23c <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x1a8>
     464:	add	x0, sp, #0x98
     468:	bl	0 <_ZNK4llvm14DWARFFormValue21getAsUnsignedConstantEv>
     46c:	tst	w1, #0xff
     470:	b.eq	23c <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x1a8>  // b.none
     474:	mov	w25, w0
     478:	cbz	w0, 23c <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x1a8>
     47c:	ldr	x1, [x22]
     480:	ldr	x0, [x1, #8]
     484:	bl	0 <_ZN4llvm12DWARFContext19getLineTableForUnitEPNS_9DWARFUnitE>
     488:	cbz	x0, 23c <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x1a8>
     48c:	stp	x27, x28, [sp, #80]
     490:	cbz	x26, 4cc <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x438>
     494:	mov	w26, w25
     498:	add	x27, x0, #0x8
     49c:	mov	x1, x26
     4a0:	mov	x0, x27
     4a4:	bl	0 <_ZNK4llvm14DWARFDebugLine8Prologue14hasFileAtIndexEm>
     4a8:	and	w0, w0, #0xff
     4ac:	cbnz	w0, 4dc <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x448>
     4b0:	ldp	x27, x28, [sp, #80]
     4b4:	b	23c <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x1a8>
     4b8:	add	x0, sp, #0x98
     4bc:	bl	0 <_ZNK4llvm14DWARFFormValue21getAsUnsignedConstantEv>
     4c0:	tst	w1, #0xff
     4c4:	csel	x23, x0, x23, ne  // ne = any
     4c8:	b	43c <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x3a8>
     4cc:	ldr	w1, [sp, #328]
     4d0:	cmp	w1, #0x39
     4d4:	csinc	w25, w25, wzr, ne  // ne = any
     4d8:	b	494 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x400>
     4dc:	add	x8, sp, #0x98
     4e0:	mov	w1, #0x3b                  	// #59
     4e4:	mov	x0, x19
     4e8:	bl	0 <_ZNK4llvm8DWARFDie4findENS_5dwarf9AttributeE>
     4ec:	ldrb	w1, [sp, #200]
     4f0:	mov	x0, #0x0                   	// #0
     4f4:	cbnz	w1, 53c <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x4a8>
     4f8:	str	w0, [sp, #100]
     4fc:	ldr	x1, [x22, #704]
     500:	ldr	x0, [x22, #712]
     504:	sub	x0, x0, x1
     508:	cmp	x26, x0, asr #4
     50c:	b.cs	550 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x4bc>  // b.hs, b.nlast
     510:	lsl	x0, x26, #4
     514:	add	x2, x1, x0
     518:	ldr	x1, [x1, x0]
     51c:	ldr	x0, [x2, #8]
     520:	cbz	x0, 550 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x4bc>
     524:	str	x1, [sp, #296]
     528:	str	x0, [sp, #304]
     52c:	ldr	w0, [sp, #100]
     530:	cbnz	w0, 250 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x1bc>
     534:	ldp	x27, x28, [sp, #80]
     538:	b	23c <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x1a8>
     53c:	add	x0, sp, #0x98
     540:	bl	0 <_ZNK4llvm14DWARFFormValue21getAsUnsignedConstantEv>
     544:	tst	w1, #0xff
     548:	csel	x0, x0, xzr, ne  // ne = any
     54c:	b	4f8 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x464>
     550:	add	x0, sp, #0x88
     554:	str	x0, [sp, #120]
     558:	str	xzr, [sp, #128]
     55c:	strb	wzr, [sp, #136]
     560:	ldr	x0, [x22]
     564:	bl	0 <_ZN4llvm9DWARFUnit17getCompilationDirEv>
     568:	mov	x28, x0
     56c:	cbz	x0, 668 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x5d4>
     570:	bl	0 <strlen>
     574:	mov	x3, x0
     578:	mov	w6, #0x2                   	// #2
     57c:	add	x5, sp, #0x78
     580:	mov	w4, w6
     584:	mov	x2, x28
     588:	mov	x1, x26
     58c:	mov	x0, x27
     590:	bl	0 <_ZNK4llvm14DWARFDebugLine8Prologue18getFileNameByIndexEmNS_9StringRefENS_19DILineInfoSpecifier16FileLineInfoKindERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_3sys4path5StyleE>
     594:	and	w0, w0, #0xff
     598:	cbz	w0, 670 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x5dc>
     59c:	add	x0, x20, #0xd8
     5a0:	str	x0, [sp, #104]
     5a4:	add	x0, sp, #0xa8
     5a8:	str	x0, [sp, #152]
     5ac:	ldr	x28, [sp, #120]
     5b0:	ldr	x27, [sp, #128]
     5b4:	cmp	x27, #0x0
     5b8:	ccmp	x28, #0x0, #0x0, ne  // ne = any
     5bc:	b.eq	690 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x5fc>  // b.none
     5c0:	str	x27, [sp, #112]
     5c4:	cmp	x27, #0xf
     5c8:	b.hi	69c <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x608>  // b.pmore
     5cc:	cmp	x27, #0x1
     5d0:	b.ne	6c8 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x634>  // b.any
     5d4:	ldrb	w0, [x28]
     5d8:	strb	w0, [sp, #168]
     5dc:	ldr	x0, [sp, #112]
     5e0:	str	x0, [sp, #160]
     5e4:	ldr	x1, [sp, #152]
     5e8:	strb	wzr, [x1, x0]
     5ec:	add	x1, sp, #0x98
     5f0:	mov	x2, x24
     5f4:	mov	x24, x1
     5f8:	ldr	x0, [sp, #104]
     5fc:	bl	0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     600:	add	x2, sp, #0x210
     604:	stp	x0, x1, [x2, #-232]
     608:	ldr	x0, [sp, #152]
     60c:	add	x1, x24, #0x10
     610:	cmp	x0, x1
     614:	b.eq	61c <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x588>  // b.none
     618:	bl	0 <_ZdlPv>
     61c:	ldr	x27, [sp, #296]
     620:	ldr	x24, [sp, #304]
     624:	ldr	x0, [x22, #712]
     628:	ldr	x2, [x22, #704]
     62c:	sub	x3, x0, x2
     630:	asr	x1, x3, #4
     634:	cmp	x26, x3, asr #4
     638:	b.cs	6d4 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x640>  // b.hs, b.nlast
     63c:	lsl	x1, x26, #4
     640:	ldr	x0, [x22, #704]
     644:	add	x26, x0, x26, lsl #4
     648:	str	x27, [x0, x1]
     64c:	str	x24, [x26, #8]
     650:	ldr	x0, [sp, #120]
     654:	add	x1, sp, #0x88
     658:	cmp	x0, x1
     65c:	b.eq	52c <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x498>  // b.none
     660:	bl	0 <_ZdlPv>
     664:	b	52c <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x498>
     668:	mov	x3, #0x0                   	// #0
     66c:	b	578 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x4e4>
     670:	adrp	x3, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     674:	add	x3, x3, #0x0
     678:	mov	w2, #0x91                  	// #145
     67c:	adrp	x1, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     680:	add	x1, x1, #0x0
     684:	adrp	x0, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     688:	add	x0, x0, #0x0
     68c:	bl	0 <__assert_fail>
     690:	adrp	x0, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     694:	add	x0, x0, #0x0
     698:	bl	0 <_ZSt19__throw_logic_errorPKc>
     69c:	mov	x2, #0x0                   	// #0
     6a0:	add	x1, sp, #0x70
     6a4:	add	x0, sp, #0x98
     6a8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     6ac:	str	x0, [sp, #152]
     6b0:	ldr	x1, [sp, #112]
     6b4:	str	x1, [sp, #168]
     6b8:	mov	x2, x27
     6bc:	mov	x1, x28
     6c0:	bl	0 <memcpy>
     6c4:	b	5dc <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x548>
     6c8:	cbz	x27, 5dc <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x548>
     6cc:	add	x0, sp, #0xa8
     6d0:	b	6b8 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x624>
     6d4:	add	w25, w25, #0x1
     6d8:	cmp	x1, x25
     6dc:	b.cc	6f8 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x664>  // b.lo, b.ul, b.last
     6e0:	b.ls	63c <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x5a8>  // b.plast
     6e4:	add	x25, x2, x25, lsl #4
     6e8:	cmp	x0, x25
     6ec:	b.eq	63c <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x5a8>  // b.none
     6f0:	str	x25, [x22, #712]
     6f4:	b	63c <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x5a8>
     6f8:	sub	x1, x25, x1
     6fc:	add	x0, x22, #0x2c0
     700:	bl	0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     704:	b	63c <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x5a8>
     708:	ldr	x0, [sp, #320]
     70c:	cmp	x0, #0x15
     710:	b.ne	278 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x1e4>  // b.any
     714:	mov	x2, #0x15                  	// #21
     718:	adrp	x1, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     71c:	add	x1, x1, #0x0
     720:	ldr	x0, [sp, #312]
     724:	bl	0 <memcmp>
     728:	cbnz	w0, 278 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x1e4>
     72c:	add	x1, sp, #0x128
     730:	add	x0, sp, #0x124
     734:	bl	0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     738:	str	w0, [sp, #292]
     73c:	b	278 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x1e4>
     740:	adrp	x3, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     744:	add	x3, x3, #0x0
     748:	mov	w2, #0x250                 	// #592
     74c:	adrp	x1, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     750:	add	x1, x1, #0x0
     754:	adrp	x0, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     758:	add	x0, x0, #0x0
     75c:	bl	0 <__assert_fail>
     760:	ldr	w7, [x3, #8]
     764:	cmp	w23, w7
     768:	b.ne	334 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x2a0>  // b.any
     76c:	ldr	x7, [x3, #16]
     770:	cmp	x26, x7
     774:	b.ne	334 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x2a0>  // b.any
     778:	ldr	x7, [x3, #32]
     77c:	cmp	x27, x7
     780:	b.ne	334 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x2a0>  // b.any
     784:	ldr	x3, [x3, #48]
     788:	ldr	w7, [x21]
     78c:	ldr	w3, [x3]
     790:	cmp	w7, w3
     794:	b.ne	8f8 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x864>  // b.any
     798:	ldr	x25, [x20, #184]
     79c:	add	x0, x2, w0, uxtw #3
     7a0:	mov	x1, x25
     7a4:	ldr	x2, [x20, #184]
     7a8:	cmp	x2, x25
     7ac:	b.ne	908 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x874>  // b.any
     7b0:	cbz	x0, 7c8 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x734>
     7b4:	ldr	x2, [x20, #184]
     7b8:	cmp	x2, x1
     7bc:	b.ne	928 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x894>  // b.any
     7c0:	cmp	x24, x0
     7c4:	b.eq	828 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x794>  // b.none
     7c8:	cmp	w4, #0x39
     7cc:	b.ne	f2c <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xe98>  // b.any
     7d0:	ldr	w0, [x20, #208]
     7d4:	ldr	x1, [x20, #192]
     7d8:	add	x0, x1, x0, lsl #3
     7dc:	ldr	x1, [x20, #184]
     7e0:	cbnz	x24, f60 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xecc>
     7e4:	cbnz	x0, f70 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xedc>
     7e8:	adrp	x3, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     7ec:	add	x3, x3, #0x0
     7f0:	mov	w2, #0xc5                  	// #197
     7f4:	adrp	x1, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     7f8:	add	x1, x1, #0x0
     7fc:	adrp	x0, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     800:	add	x0, x0, #0x0
     804:	bl	0 <__assert_fail>
     808:	cmn	x3, #0x8
     80c:	b.ne	8f8 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x864>  // b.any
     810:	add	x24, x2, w0, uxtw #3
     814:	ldr	x25, [x20, #184]
     818:	mov	x0, x24
     81c:	mov	x1, x25
     820:	cbnz	x24, 7a4 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x710>
     824:	cbnz	x24, 7b4 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x720>
     828:	ldr	x24, [x19]
     82c:	ldr	x25, [x19, #8]
     830:	ldr	w22, [x22, #8]
     834:	mov	x1, x20
     838:	mov	x0, #0x50                  	// #80
     83c:	bl	0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     840:	mov	x19, x0
     844:	ldr	w0, [sp, #292]
     848:	ldrh	w1, [sp, #328]
     84c:	str	w0, [x19]
     850:	ldr	w2, [sp, #100]
     854:	str	w2, [x19, #4]
     858:	str	w23, [x19, #8]
     85c:	strh	w1, [x19, #12]
     860:	ldrb	w1, [x19, #14]
     864:	and	w1, w1, #0xfffffffe
     868:	strb	w1, [x19, #14]
     86c:	str	x26, [x19, #16]
     870:	ldr	x1, [sp, #104]
     874:	str	x1, [x19, #24]
     878:	str	x27, [x19, #32]
     87c:	str	x28, [x19, #40]
     880:	str	x21, [x19, #48]
     884:	str	x24, [x19, #56]
     888:	str	x25, [x19, #64]
     88c:	str	w22, [x19, #72]
     890:	str	wzr, [x19, #76]
     894:	ldr	x25, [x20, #192]
     898:	ldr	w22, [x20, #208]
     89c:	cbz	w22, 124c <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x11b8>
     8a0:	cmn	x19, #0x10
     8a4:	ccmn	x19, #0x8, #0x4, ne  // ne = any
     8a8:	b.eq	948 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x8b4>  // b.none
     8ac:	sub	w2, w22, #0x1
     8b0:	and	w0, w0, w2
     8b4:	mov	w6, #0x1                   	// #1
     8b8:	mov	x24, #0x0                   	// #0
     8bc:	add	x7, x25, w0, uxtw #3
     8c0:	ldr	x1, [x25, w0, uxtw #3]
     8c4:	cmn	x1, #0x10
     8c8:	cset	w3, eq  // eq = none
     8cc:	cmp	w3, #0x0
     8d0:	ccmn	x1, #0x8, #0x4, eq  // eq = none
     8d4:	b.eq	968 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x8d4>  // b.none
     8d8:	ldr	x5, [x19]
     8dc:	ldr	x4, [x1]
     8e0:	cmp	x5, x4
     8e4:	b.eq	990 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x8fc>  // b.none
     8e8:	add	w0, w0, w6
     8ec:	and	w0, w2, w0
     8f0:	add	w6, w6, #0x1
     8f4:	b	8bc <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x828>
     8f8:	cmp	x9, #0x0
     8fc:	ccmp	w5, #0x0, #0x4, eq  // eq = none
     900:	csel	x9, x9, x24, eq  // eq = none
     904:	b	334 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x2a0>
     908:	adrp	x3, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     90c:	add	x3, x3, #0x0
     910:	mov	w2, #0x4c0                 	// #1216
     914:	adrp	x1, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     918:	add	x1, x1, #0x0
     91c:	adrp	x0, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     920:	add	x0, x0, #0x0
     924:	bl	0 <__assert_fail>
     928:	adrp	x3, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     92c:	add	x3, x3, #0x0
     930:	mov	w2, #0x4c1                 	// #1217
     934:	adrp	x1, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     938:	add	x1, x1, #0x0
     93c:	adrp	x0, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     940:	add	x0, x0, #0x0
     944:	bl	0 <__assert_fail>
     948:	adrp	x3, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     94c:	add	x3, x3, #0x0
     950:	mov	w2, #0x250                 	// #592
     954:	adrp	x1, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     958:	add	x1, x1, #0x0
     95c:	adrp	x0, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     960:	add	x0, x0, #0x0
     964:	bl	0 <__assert_fail>
     968:	cmp	x19, x1
     96c:	b.ne	9d8 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x944>  // b.any
     970:	adrp	x3, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     974:	add	x3, x3, #0x0
     978:	mov	w2, #0xbc                  	// #188
     97c:	adrp	x1, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     980:	add	x1, x1, #0x0
     984:	adrp	x0, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     988:	add	x0, x0, #0x0
     98c:	bl	0 <__assert_fail>
     990:	ldr	w4, [x1, #8]
     994:	cmp	w23, w4
     998:	b.ne	8e8 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x854>  // b.any
     99c:	ldr	x4, [x1, #16]
     9a0:	cmp	x26, x4
     9a4:	b.ne	8e8 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x854>  // b.any
     9a8:	ldr	x4, [x1, #32]
     9ac:	cmp	x27, x4
     9b0:	b.ne	8e8 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x854>  // b.any
     9b4:	ldr	x1, [x1, #48]
     9b8:	ldr	w4, [x21]
     9bc:	ldr	w1, [x1]
     9c0:	cmp	w4, w1
     9c4:	b.eq	970 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x8dc>  // b.none
     9c8:	cmp	x24, #0x0
     9cc:	ccmp	w3, #0x0, #0x4, eq  // eq = none
     9d0:	csel	x24, x24, x7, eq  // eq = none
     9d4:	b	8e8 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x854>
     9d8:	cmn	x1, #0x8
     9dc:	b.ne	9c8 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x934>  // b.any
     9e0:	cmp	x24, #0x0
     9e4:	csel	x24, x24, x7, ne  // ne = any
     9e8:	ldr	x0, [x20, #184]
     9ec:	add	x0, x0, #0x1
     9f0:	str	x0, [x20, #184]
     9f4:	ldr	w0, [x20, #200]
     9f8:	add	w1, w0, #0x1
     9fc:	add	w0, w22, w22, lsl #1
     a00:	cmp	w0, w1, lsl #2
     a04:	b.ls	1258 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x11c4>  // b.plast
     a08:	ldr	w0, [x20, #204]
     a0c:	sub	w0, w22, w0
     a10:	sub	w0, w0, w1
     a14:	cmp	w0, w22, lsr #3
     a18:	b.ls	c68 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xbd4>  // b.plast
     a1c:	cbz	x24, f0c <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xe78>
     a20:	add	x1, x20, #0xb8
     a24:	ldr	w0, [x20, #200]
     a28:	add	w0, w0, #0x1
     a2c:	str	w0, [x20, #200]
     a30:	ldr	x0, [x24]
     a34:	cmn	x0, #0x8
     a38:	b.eq	a48 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x9b4>  // b.none
     a3c:	ldr	w0, [x1, #20]
     a40:	sub	w0, w0, #0x1
     a44:	str	w0, [x1, #20]
     a48:	str	x19, [x24]
     a4c:	ldr	x25, [x20, #184]
     a50:	b	f50 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xebc>
     a54:	str	wzr, [x23, #16]
     a58:	str	wzr, [x23, #20]
     a5c:	ldr	w1, [x23, #24]
     a60:	sub	w2, w1, #0x1
     a64:	tst	w2, w1
     a68:	b.ne	a8c <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x9f8>  // b.any
     a6c:	add	x1, x0, w1, uxtw #3
     a70:	cmp	x0, x1
     a74:	b.eq	b68 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xad4>  // b.none
     a78:	mov	x2, #0xfffffffffffffff8    	// #-8
     a7c:	str	x2, [x0], #8
     a80:	cmp	x1, x0
     a84:	b.ne	a7c <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x9e8>  // b.any
     a88:	b	b68 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xad4>
     a8c:	adrp	x3, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     a90:	add	x3, x3, #0x0
     a94:	mov	w2, #0x15b                 	// #347
     a98:	adrp	x1, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     a9c:	add	x1, x1, #0x0
     aa0:	adrp	x0, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     aa4:	add	x0, x0, #0x0
     aa8:	bl	0 <__assert_fail>
     aac:	adrp	x3, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     ab0:	add	x3, x3, #0x0
     ab4:	mov	w2, #0x15b                 	// #347
     ab8:	adrp	x1, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     abc:	add	x1, x1, #0x0
     ac0:	adrp	x0, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     ac4:	add	x0, x0, #0x0
     ac8:	bl	0 <__assert_fail>
     acc:	cmp	x2, x5
     ad0:	b.ne	b4c <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xab8>  // b.any
     ad4:	adrp	x3, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     ad8:	add	x3, x3, #0x0
     adc:	mov	w2, #0x17a                 	// #378
     ae0:	adrp	x1, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     ae4:	add	x1, x1, #0x0
     ae8:	adrp	x0, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     aec:	add	x0, x0, #0x0
     af0:	bl	0 <__assert_fail>
     af4:	ldr	w14, [x2, #8]
     af8:	ldr	w13, [x5, #8]
     afc:	cmp	w14, w13
     b00:	b.ne	11b0 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x111c>  // b.any
     b04:	ldr	x14, [x2, #16]
     b08:	ldr	x13, [x5, #16]
     b0c:	cmp	x14, x13
     b10:	b.ne	11b0 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x111c>  // b.any
     b14:	ldr	x14, [x2, #32]
     b18:	ldr	x13, [x5, #32]
     b1c:	cmp	x14, x13
     b20:	b.ne	11b0 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x111c>  // b.any
     b24:	ldr	x13, [x2, #48]
     b28:	ldr	x5, [x5, #48]
     b2c:	ldr	w13, [x13]
     b30:	ldr	w5, [x5]
     b34:	cmp	w13, w5
     b38:	b.eq	ad4 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xa40>  // b.none
     b3c:	cmp	x6, #0x0
     b40:	ccmp	w10, #0x0, #0x4, eq  // eq = none
     b44:	csel	x6, x6, x11, eq  // eq = none
     b48:	b	11b0 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x111c>
     b4c:	cmn	x5, #0x8
     b50:	b.ne	b3c <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xaa8>  // b.any
     b54:	cmp	x6, #0x0
     b58:	csel	x6, x6, x11, ne  // ne = any
     b5c:	b	1138 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x10a4>
     b60:	mov	x0, x25
     b64:	bl	0 <_ZdlPvm>
     b68:	ldr	w3, [x20, #208]
     b6c:	cbz	w3, f0c <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xe78>
     b70:	cmn	x19, #0x10
     b74:	ccmn	x19, #0x8, #0x4, ne  // ne = any
     b78:	b.eq	bd4 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xb40>  // b.none
     b7c:	ldr	x6, [x20, #192]
     b80:	sub	w3, w3, #0x1
     b84:	ldr	w1, [x19]
     b88:	and	w1, w3, w1
     b8c:	mov	w5, #0x1                   	// #1
     b90:	mov	x2, #0x0                   	// #0
     b94:	ubfiz	x0, x1, #3, #32
     b98:	add	x24, x6, x0
     b9c:	ldr	x0, [x6, x0]
     ba0:	cmn	x0, #0x10
     ba4:	cset	w4, eq  // eq = none
     ba8:	cmn	x0, #0x8
     bac:	csinc	w4, w4, wzr, ne  // ne = any
     bb0:	cbnz	w4, bf4 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xb60>
     bb4:	ldr	x8, [x19]
     bb8:	ldr	x7, [x0]
     bbc:	cmp	x8, x7
     bc0:	b.eq	c10 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xb7c>  // b.none
     bc4:	add	w1, w1, w5
     bc8:	and	w1, w3, w1
     bcc:	add	w5, w5, #0x1
     bd0:	b	b94 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xb00>
     bd4:	adrp	x3, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     bd8:	add	x3, x3, #0x0
     bdc:	mov	w2, #0x250                 	// #592
     be0:	adrp	x1, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     be4:	add	x1, x1, #0x0
     be8:	adrp	x0, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     bec:	add	x0, x0, #0x0
     bf0:	bl	0 <__assert_fail>
     bf4:	cmp	x19, x0
     bf8:	b.eq	a20 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x98c>  // b.none
     bfc:	cmn	x0, #0x8
     c00:	b.ne	c58 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xbc4>  // b.any
     c04:	cmp	x2, #0x0
     c08:	csel	x24, x24, x2, eq  // eq = none
     c0c:	b	a20 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x98c>
     c10:	ldr	w8, [x19, #8]
     c14:	ldr	w7, [x0, #8]
     c18:	cmp	w8, w7
     c1c:	b.ne	bc4 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xb30>  // b.any
     c20:	ldr	x8, [x19, #16]
     c24:	ldr	x7, [x0, #16]
     c28:	cmp	x8, x7
     c2c:	b.ne	bc4 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xb30>  // b.any
     c30:	ldr	x8, [x19, #32]
     c34:	ldr	x7, [x0, #32]
     c38:	cmp	x8, x7
     c3c:	b.ne	bc4 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xb30>  // b.any
     c40:	ldr	x7, [x19, #48]
     c44:	ldr	x0, [x0, #48]
     c48:	ldr	w7, [x7]
     c4c:	ldr	w0, [x0]
     c50:	cmp	w7, w0
     c54:	b.eq	a20 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x98c>  // b.none
     c58:	cmp	x2, #0x0
     c5c:	ccmp	w4, #0x0, #0x4, eq  // eq = none
     c60:	csel	x2, x2, x24, eq  // eq = none
     c64:	b	bc4 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xb30>
     c68:	sub	w0, w22, #0x1
     c6c:	orr	x0, x0, x0, lsr #1
     c70:	orr	x0, x0, x0, lsr #2
     c74:	orr	x0, x0, x0, lsr #4
     c78:	orr	x0, x0, x0, lsr #8
     c7c:	orr	x0, x0, x0, lsr #16
     c80:	add	x0, x0, #0x1
     c84:	cmp	w0, #0x40
     c88:	mov	w1, #0x40                  	// #64
     c8c:	csel	w0, w0, w1, cs  // cs = hs, nlast
     c90:	add	x23, x20, #0xb8
     c94:	str	w0, [x23, #24]
     c98:	ubfiz	x0, x0, #3, #32
     c9c:	bl	0 <_Znwm>
     ca0:	str	x0, [x23, #8]
     ca4:	cbz	x25, cf8 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xc64>
     ca8:	ubfiz	x1, x22, #3, #32
     cac:	add	x3, x25, x1
     cb0:	str	wzr, [x20, #200]
     cb4:	str	wzr, [x20, #204]
     cb8:	ldr	w2, [x20, #208]
     cbc:	sub	w4, w2, #0x1
     cc0:	tst	w4, w2
     cc4:	b.ne	d50 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xcbc>  // b.any
     cc8:	add	x2, x0, w2, uxtw #3
     ccc:	mov	x4, #0xfffffffffffffff8    	// #-8
     cd0:	cmp	x0, x2
     cd4:	b.eq	ce4 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xc50>  // b.none
     cd8:	str	x4, [x0], #8
     cdc:	cmp	x2, x0
     ce0:	b.ne	cd8 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xc44>  // b.any
     ce4:	cmp	x25, x3
     ce8:	b.eq	e04 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xd70>  // b.none
     cec:	mov	x0, x25
     cf0:	mov	w12, #0x1                   	// #1
     cf4:	b	11e0 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x114c>
     cf8:	str	wzr, [x23, #16]
     cfc:	str	wzr, [x23, #20]
     d00:	ldr	w1, [x23, #24]
     d04:	sub	w2, w1, #0x1
     d08:	tst	w2, w1
     d0c:	b.ne	d30 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xc9c>  // b.any
     d10:	add	x1, x0, w1, uxtw #3
     d14:	cmp	x0, x1
     d18:	b.eq	e0c <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xd78>  // b.none
     d1c:	mov	x2, #0xfffffffffffffff8    	// #-8
     d20:	str	x2, [x0], #8
     d24:	cmp	x1, x0
     d28:	b.ne	d20 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xc8c>  // b.any
     d2c:	b	e0c <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xd78>
     d30:	adrp	x3, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     d34:	add	x3, x3, #0x0
     d38:	mov	w2, #0x15b                 	// #347
     d3c:	adrp	x1, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     d40:	add	x1, x1, #0x0
     d44:	adrp	x0, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     d48:	add	x0, x0, #0x0
     d4c:	bl	0 <__assert_fail>
     d50:	adrp	x3, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     d54:	add	x3, x3, #0x0
     d58:	mov	w2, #0x15b                 	// #347
     d5c:	adrp	x1, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     d60:	add	x1, x1, #0x0
     d64:	adrp	x0, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     d68:	add	x0, x0, #0x0
     d6c:	bl	0 <__assert_fail>
     d70:	cmp	x2, x4
     d74:	b.ne	df0 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xd5c>  // b.any
     d78:	adrp	x3, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     d7c:	add	x3, x3, #0x0
     d80:	mov	w2, #0x17a                 	// #378
     d84:	adrp	x1, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     d88:	add	x1, x1, #0x0
     d8c:	adrp	x0, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     d90:	add	x0, x0, #0x0
     d94:	bl	0 <__assert_fail>
     d98:	ldr	w14, [x2, #8]
     d9c:	ldr	w13, [x4, #8]
     da0:	cmp	w14, w13
     da4:	b.ne	123c <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x11a8>  // b.any
     da8:	ldr	x14, [x2, #16]
     dac:	ldr	x13, [x4, #16]
     db0:	cmp	x14, x13
     db4:	b.ne	123c <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x11a8>  // b.any
     db8:	ldr	x14, [x2, #32]
     dbc:	ldr	x13, [x4, #32]
     dc0:	cmp	x14, x13
     dc4:	b.ne	123c <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x11a8>  // b.any
     dc8:	ldr	x13, [x2, #48]
     dcc:	ldr	x4, [x4, #48]
     dd0:	ldr	w13, [x13]
     dd4:	ldr	w4, [x4]
     dd8:	cmp	w13, w4
     ddc:	b.eq	d78 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xce4>  // b.none
     de0:	cmp	x6, #0x0
     de4:	ccmp	w8, #0x0, #0x4, eq  // eq = none
     de8:	csel	x6, x6, x10, eq  // eq = none
     dec:	b	123c <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x11a8>
     df0:	cmn	x4, #0x8
     df4:	b.ne	de0 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xd4c>  // b.any
     df8:	cmp	x6, #0x0
     dfc:	csel	x6, x6, x10, ne  // ne = any
     e00:	b	11c4 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x1130>
     e04:	mov	x0, x25
     e08:	bl	0 <_ZdlPvm>
     e0c:	ldr	w3, [x20, #208]
     e10:	cbz	w3, f0c <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xe78>
     e14:	cmn	x19, #0x8
     e18:	ccmn	x19, #0x10, #0x4, ne  // ne = any
     e1c:	b.eq	e78 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xde4>  // b.none
     e20:	ldr	x5, [x20, #192]
     e24:	sub	w3, w3, #0x1
     e28:	ldr	w1, [x19]
     e2c:	and	w1, w3, w1
     e30:	mov	w4, #0x1                   	// #1
     e34:	mov	x2, #0x0                   	// #0
     e38:	ubfiz	x0, x1, #3, #32
     e3c:	add	x24, x5, x0
     e40:	ldr	x0, [x5, x0]
     e44:	cmn	x0, #0x10
     e48:	cset	w6, eq  // eq = none
     e4c:	cmp	w6, #0x0
     e50:	ccmn	x0, #0x8, #0x4, eq  // eq = none
     e54:	b.eq	e98 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xe04>  // b.none
     e58:	ldr	x8, [x19]
     e5c:	ldr	x7, [x0]
     e60:	cmp	x8, x7
     e64:	b.eq	eb4 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xe20>  // b.none
     e68:	add	w1, w1, w4
     e6c:	and	w1, w3, w1
     e70:	add	w4, w4, #0x1
     e74:	b	e38 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xda4>
     e78:	adrp	x3, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     e7c:	add	x3, x3, #0x0
     e80:	mov	w2, #0x250                 	// #592
     e84:	adrp	x1, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     e88:	add	x1, x1, #0x0
     e8c:	adrp	x0, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     e90:	add	x0, x0, #0x0
     e94:	bl	0 <__assert_fail>
     e98:	cmp	x19, x0
     e9c:	b.eq	a20 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x98c>  // b.none
     ea0:	cmn	x0, #0x8
     ea4:	b.ne	efc <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xe68>  // b.any
     ea8:	cmp	x2, #0x0
     eac:	csel	x24, x24, x2, eq  // eq = none
     eb0:	b	a20 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x98c>
     eb4:	ldr	w8, [x19, #8]
     eb8:	ldr	w7, [x0, #8]
     ebc:	cmp	w8, w7
     ec0:	b.ne	e68 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xdd4>  // b.any
     ec4:	ldr	x8, [x19, #16]
     ec8:	ldr	x7, [x0, #16]
     ecc:	cmp	x8, x7
     ed0:	b.ne	e68 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xdd4>  // b.any
     ed4:	ldr	x8, [x19, #32]
     ed8:	ldr	x7, [x0, #32]
     edc:	cmp	x8, x7
     ee0:	b.ne	e68 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xdd4>  // b.any
     ee4:	ldr	x7, [x19, #48]
     ee8:	ldr	x0, [x0, #48]
     eec:	ldr	w7, [x7]
     ef0:	ldr	w0, [x0]
     ef4:	cmp	w7, w0
     ef8:	b.eq	a20 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x98c>  // b.none
     efc:	cmp	x2, #0x0
     f00:	ccmp	w6, #0x0, #0x4, eq  // eq = none
     f04:	csel	x2, x2, x24, eq  // eq = none
     f08:	b	e68 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xdd4>
     f0c:	adrp	x3, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     f10:	add	x3, x3, #0x0
     f14:	mov	w2, #0x22f                 	// #559
     f18:	adrp	x1, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     f1c:	add	x1, x1, #0x0
     f20:	adrp	x0, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     f24:	add	x0, x0, #0x0
     f28:	bl	0 <__assert_fail>
     f2c:	ldr	x0, [x20, #184]
     f30:	cmp	x25, x0
     f34:	b.ne	fbc <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xf28>  // b.any
     f38:	mov	x2, x19
     f3c:	mov	x1, x22
     f40:	ldr	x0, [x24]
     f44:	bl	0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     f48:	and	w0, w0, #0xff
     f4c:	cbz	w0, fdc <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xf48>
     f50:	ldr	w0, [x20, #208]
     f54:	ldr	x1, [x20, #192]
     f58:	add	x0, x1, x0, lsl #3
     f5c:	ldr	x1, [x20, #184]
     f60:	ldr	x2, [x20, #184]
     f64:	cmp	x2, x25
     f68:	b.ne	1040 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xfac>  // b.any
     f6c:	cbz	x0, f84 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xef0>
     f70:	ldr	x2, [x20, #184]
     f74:	cmp	x2, x1
     f78:	b.ne	1060 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xfcc>  // b.any
     f7c:	cmp	x24, x0
     f80:	b.eq	7e8 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x754>  // b.none
     f84:	ldr	w0, [sp, #328]
     f88:	cmp	w0, #0x2e
     f8c:	b.eq	1080 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xfec>  // b.none
     f90:	cmp	w0, #0x17
     f94:	b.ne	1090 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xffc>  // b.any
     f98:	ldr	x0, [x20, #184]
     f9c:	cmp	x0, x25
     fa0:	b.ne	10d4 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x1040>  // b.any
     fa4:	ldr	x1, [x24]
     fa8:	orr	x0, x1, #0x4
     fac:	tst	x1, #0x7
     fb0:	b.ne	10f4 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x1060>  // b.any
     fb4:	ldp	x27, x28, [sp, #80]
     fb8:	b	16c <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xd8>
     fbc:	adrp	x3, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     fc0:	add	x3, x3, #0x0
     fc4:	mov	w2, #0x4b9                 	// #1209
     fc8:	adrp	x1, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     fcc:	add	x1, x1, #0x0
     fd0:	adrp	x0, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
     fd4:	add	x0, x0, #0x0
     fd8:	bl	0 <__assert_fail>
     fdc:	ldr	x0, [x20, #184]
     fe0:	cmp	x25, x0
     fe4:	b.ne	1000 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xf6c>  // b.any
     fe8:	ldr	x1, [x24]
     fec:	orr	x0, x1, #0x4
     ff0:	tst	x1, #0x7
     ff4:	b.ne	1020 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xf8c>  // b.any
     ff8:	ldp	x27, x28, [sp, #80]
     ffc:	b	16c <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xd8>
    1000:	adrp	x3, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
    1004:	add	x3, x3, #0x0
    1008:	mov	w2, #0x4b9                 	// #1209
    100c:	adrp	x1, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
    1010:	add	x1, x1, #0x0
    1014:	adrp	x0, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
    1018:	add	x0, x0, #0x0
    101c:	bl	0 <__assert_fail>
    1020:	adrp	x3, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
    1024:	add	x3, x3, #0x0
    1028:	mov	w2, #0xb2                  	// #178
    102c:	adrp	x1, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
    1030:	add	x1, x1, #0x0
    1034:	adrp	x0, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
    1038:	add	x0, x0, #0x0
    103c:	bl	0 <__assert_fail>
    1040:	adrp	x3, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
    1044:	add	x3, x3, #0x0
    1048:	mov	w2, #0x4c7                 	// #1223
    104c:	adrp	x1, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
    1050:	add	x1, x1, #0x0
    1054:	adrp	x0, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
    1058:	add	x0, x0, #0x0
    105c:	bl	0 <__assert_fail>
    1060:	adrp	x3, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
    1064:	add	x3, x3, #0x0
    1068:	mov	w2, #0x4c8                 	// #1224
    106c:	adrp	x1, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
    1070:	add	x1, x1, #0x0
    1074:	adrp	x0, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
    1078:	add	x0, x0, #0x0
    107c:	bl	0 <__assert_fail>
    1080:	ldrh	w0, [x21, #12]
    1084:	cmp	w0, #0x13
    1088:	ccmp	w0, #0x2, #0x4, ne  // ne = any
    108c:	b.ne	f98 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xf04>  // b.any
    1090:	ldr	x0, [x20, #184]
    1094:	cmp	x0, x25
    1098:	b.ne	10b4 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x1020>  // b.any
    109c:	ldr	x1, [x24]
    10a0:	mov	x0, x1
    10a4:	tst	x1, #0x7
    10a8:	b.ne	1114 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x1080>  // b.any
    10ac:	ldp	x27, x28, [sp, #80]
    10b0:	b	16c <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xd8>
    10b4:	adrp	x3, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
    10b8:	add	x3, x3, #0x0
    10bc:	mov	w2, #0x4b9                 	// #1209
    10c0:	adrp	x1, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
    10c4:	add	x1, x1, #0x0
    10c8:	adrp	x0, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
    10cc:	add	x0, x0, #0x0
    10d0:	bl	0 <__assert_fail>
    10d4:	adrp	x3, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
    10d8:	add	x3, x3, #0x0
    10dc:	mov	w2, #0x4b9                 	// #1209
    10e0:	adrp	x1, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
    10e4:	add	x1, x1, #0x0
    10e8:	adrp	x0, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
    10ec:	add	x0, x0, #0x0
    10f0:	bl	0 <__assert_fail>
    10f4:	adrp	x3, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
    10f8:	add	x3, x3, #0x0
    10fc:	mov	w2, #0xb2                  	// #178
    1100:	adrp	x1, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
    1104:	add	x1, x1, #0x0
    1108:	adrp	x0, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
    110c:	add	x0, x0, #0x0
    1110:	bl	0 <__assert_fail>
    1114:	adrp	x3, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
    1118:	add	x3, x3, #0x0
    111c:	mov	w2, #0xb2                  	// #178
    1120:	adrp	x1, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
    1124:	add	x1, x1, #0x0
    1128:	adrp	x0, 0 <_ZN4llvm11DeclContext14setLastSeenDIEERNS_11CompileUnitERKNS_8DWARFDieE>
    112c:	add	x0, x0, #0x0
    1130:	bl	0 <__assert_fail>
    1134:	mov	x6, #0x0                   	// #0
    1138:	str	x2, [x6]
    113c:	ldr	w2, [x20, #200]
    1140:	add	w2, w2, #0x1
    1144:	str	w2, [x20, #200]
    1148:	add	x0, x0, #0x8
    114c:	cmp	x3, x0
    1150:	b.eq	b60 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xacc>  // b.none
    1154:	ldr	x2, [x0]
    1158:	cmn	x2, #0x8
    115c:	ccmn	x2, #0x10, #0x4, ne  // ne = any
    1160:	b.eq	1148 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x10b4>  // b.none
    1164:	ldr	w4, [x20, #208]
    1168:	cbz	w4, 1134 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x10a0>
    116c:	ldr	x8, [x20, #192]
    1170:	sub	w7, w4, #0x1
    1174:	ldr	w4, [x2]
    1178:	and	w4, w7, w4
    117c:	mov	w9, w12
    1180:	mov	x6, #0x0                   	// #0
    1184:	add	x11, x8, w4, uxtw #3
    1188:	ldr	x5, [x8, w4, uxtw #3]
    118c:	cmn	x5, #0x10
    1190:	cset	w10, eq  // eq = none
    1194:	cmp	w10, #0x0
    1198:	ccmn	x5, #0x8, #0x4, eq  // eq = none
    119c:	b.eq	acc <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xa38>  // b.none
    11a0:	ldr	x14, [x2]
    11a4:	ldr	x13, [x5]
    11a8:	cmp	x14, x13
    11ac:	b.eq	af4 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xa60>  // b.none
    11b0:	add	w4, w4, w9
    11b4:	and	w4, w7, w4
    11b8:	add	w9, w9, #0x1
    11bc:	b	1184 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x10f0>
    11c0:	mov	x6, #0x0                   	// #0
    11c4:	str	x2, [x6]
    11c8:	ldr	w2, [x20, #200]
    11cc:	add	w2, w2, #0x1
    11d0:	str	w2, [x20, #200]
    11d4:	add	x0, x0, #0x8
    11d8:	cmp	x3, x0
    11dc:	b.eq	e04 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xd70>  // b.none
    11e0:	ldr	x2, [x0]
    11e4:	cmn	x2, #0x8
    11e8:	ccmn	x2, #0x10, #0x4, ne  // ne = any
    11ec:	b.eq	11d4 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x1140>  // b.none
    11f0:	ldr	w4, [x20, #208]
    11f4:	cbz	w4, 11c0 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x112c>
    11f8:	ldr	x11, [x20, #192]
    11fc:	sub	w7, w4, #0x1
    1200:	ldr	w5, [x2]
    1204:	and	w5, w7, w5
    1208:	mov	w9, w12
    120c:	mov	x6, #0x0                   	// #0
    1210:	add	x10, x11, w5, uxtw #3
    1214:	ldr	x4, [x11, w5, uxtw #3]
    1218:	cmn	x4, #0x8
    121c:	cset	w8, eq  // eq = none
    1220:	cmn	x4, #0x10
    1224:	csinc	w8, w8, wzr, ne  // ne = any
    1228:	cbnz	w8, d70 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xcdc>
    122c:	ldr	x14, [x2]
    1230:	ldr	x13, [x4]
    1234:	cmp	x14, x13
    1238:	b.eq	d98 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xd04>  // b.none
    123c:	add	w5, w5, w9
    1240:	and	w5, w7, w5
    1244:	add	w9, w9, #0x1
    1248:	b	1210 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x117c>
    124c:	ldr	x0, [x20, #184]
    1250:	add	x0, x0, #0x1
    1254:	str	x0, [x20, #184]
    1258:	lsl	w0, w22, #1
    125c:	sub	w0, w0, #0x1
    1260:	orr	x0, x0, x0, lsr #1
    1264:	orr	x0, x0, x0, lsr #2
    1268:	orr	x0, x0, x0, lsr #4
    126c:	orr	x0, x0, x0, lsr #8
    1270:	orr	x0, x0, x0, lsr #16
    1274:	add	x0, x0, #0x1
    1278:	cmp	w0, #0x40
    127c:	mov	w1, #0x40                  	// #64
    1280:	csel	w0, w0, w1, cs  // cs = hs, nlast
    1284:	add	x23, x20, #0xb8
    1288:	str	w0, [x23, #24]
    128c:	ubfiz	x0, x0, #3, #32
    1290:	bl	0 <_Znwm>
    1294:	str	x0, [x23, #8]
    1298:	cbz	x25, a54 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x9c0>
    129c:	ubfiz	x1, x22, #3, #32
    12a0:	add	x3, x25, x1
    12a4:	str	wzr, [x20, #200]
    12a8:	str	wzr, [x20, #204]
    12ac:	ldr	w2, [x20, #208]
    12b0:	sub	w4, w2, #0x1
    12b4:	tst	w4, w2
    12b8:	b.ne	aac <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xa18>  // b.any
    12bc:	add	x2, x0, w2, uxtw #3
    12c0:	mov	x4, #0xfffffffffffffff8    	// #-8
    12c4:	cmp	x0, x2
    12c8:	b.eq	12d8 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x1244>  // b.none
    12cc:	str	x4, [x0], #8
    12d0:	cmp	x2, x0
    12d4:	b.ne	12cc <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x1238>  // b.any
    12d8:	cmp	x25, x3
    12dc:	b.eq	b60 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0xacc>  // b.none
    12e0:	mov	x0, x25
    12e4:	mov	w12, #0x1                   	// #1
    12e8:	b	1154 <_ZN4llvm15DeclContextTree19getChildDeclContextERNS_11DeclContextERKNS_8DWARFDieERNS_11CompileUnitERNS_10StrongTypeINS_24NonRelocatableStringpoolENS_9UniqueTagEEEb+0x10c0>

Disassembly of section .text._ZN4llvm11safe_mallocEm:

0000000000000000 <_ZN4llvm11safe_mallocEm>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x20, x0
  10:	bl	0 <malloc>
  14:	mov	x19, x0
  18:	cbz	x0, 2c <_ZN4llvm11safe_mallocEm+0x2c>
  1c:	mov	x0, x19
  20:	ldp	x19, x20, [sp, #16]
  24:	ldp	x29, x30, [sp], #32
  28:	ret
  2c:	cbnz	x20, 40 <_ZN4llvm11safe_mallocEm+0x40>
  30:	mov	x0, #0x1                   	// #1
  34:	bl	0 <_ZN4llvm11safe_mallocEm>
  38:	mov	x19, x0
  3c:	b	1c <_ZN4llvm11safe_mallocEm+0x1c>
  40:	mov	w1, #0x1                   	// #1
  44:	adrp	x0, 0 <_ZN4llvm11safe_mallocEm>
  48:	add	x0, x0, #0x0
  4c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  50:	b	1c <_ZN4llvm11safe_mallocEm+0x1c>

Disassembly of section .text._ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE:

0000000000000000 <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE>:
   0:	sub	sp, sp, #0x470
   4:	stp	x29, x30, [sp]
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	stp	x21, x22, [sp, #32]
  14:	mov	x19, x0
  18:	mov	x20, x1
  1c:	mov	x21, x2
  20:	mov	w2, #0x2                   	// #2
  24:	ldr	x0, [x1]
  28:	ldr	x1, [x1, #8]
  2c:	bl	0 <_ZN4llvm3sys4path8filenameENS_9StringRefENS1_5StyleE>
  30:	add	x2, sp, #0x400
  34:	stp	x0, x1, [x2, #-24]
  38:	mov	w2, #0x2                   	// #2
  3c:	ldr	x0, [x20]
  40:	ldr	x1, [x20, #8]
  44:	bl	0 <_ZN4llvm3sys4path11parent_pathENS_9StringRefENS1_5StyleE>
  48:	mov	x22, x0
  4c:	mov	x20, x1
  50:	mov	x2, x1
  54:	add	x1, sp, #0x2e8
  58:	str	x1, [sp, #728]
  5c:	str	wzr, [sp, #736]
  60:	mov	w1, #0x100                 	// #256
  64:	str	w1, [sp, #740]
  68:	cmp	x20, #0x100
  6c:	b.hi	7c <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE+0x7c>  // b.pmore
  70:	cbz	x20, b8 <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE+0xb8>
  74:	add	x0, sp, #0x2e8
  78:	b	98 <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE+0x98>
  7c:	add	x0, sp, #0x2d8
  80:	mov	x3, #0x1                   	// #1
  84:	add	x1, x0, #0x10
  88:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  8c:	ldr	w1, [sp, #736]
  90:	ldr	x0, [sp, #728]
  94:	add	x0, x0, x1
  98:	mov	x2, x20
  9c:	mov	x1, x22
  a0:	bl	0 <memcpy>
  a4:	ldr	w2, [sp, #736]
  a8:	add	x2, x20, x2
  ac:	ldr	w0, [sp, #740]
  b0:	cmp	x2, x0
  b4:	b.hi	1f8 <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE+0x1f8>  // b.pmore
  b8:	stp	x23, x24, [sp, #48]
  bc:	stp	x25, x26, [sp, #64]
  c0:	str	w2, [sp, #736]
  c4:	ldr	x1, [sp, #728]
  c8:	mov	w2, w2
  cc:	mov	x0, x19
  d0:	bl	0 <_ZNK4llvm13StringMapImpl7FindKeyENS_9StringRefE>
  d4:	cmn	w0, #0x1
  d8:	b.eq	224 <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE+0x224>  // b.none
  dc:	ldr	w1, [x19, #8]
  e0:	sbfiz	x0, x0, #3, #32
  e4:	cmp	x0, x1, lsl #3
  e8:	b.eq	224 <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE+0x224>  // b.none
  ec:	ldr	x26, [sp, #728]
  f0:	ldr	w23, [sp, #736]
  f4:	mov	x1, x26
  f8:	mov	x2, x23
  fc:	mov	x0, x19
 100:	bl	0 <_ZN4llvm13StringMapImpl15LookupBucketForENS_9StringRefE>
 104:	mov	w20, w0
 108:	mov	w25, w0
 10c:	ldr	x24, [x19]
 110:	add	x1, x24, w20, uxtw #3
 114:	ldr	x0, [x24, x25, lsl #3]
 118:	cmp	x0, #0x0
 11c:	ccmn	x0, #0x8, #0x4, ne  // ne = any
 120:	b.ne	528 <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE+0x528>  // b.any
 124:	str	x27, [sp, #80]
 128:	cmn	x0, #0x8
 12c:	b.eq	554 <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE+0x554>  // b.none
 130:	add	x0, x23, #0x29
 134:	bl	0 <malloc>
 138:	mov	x22, x0
 13c:	cbz	x0, 564 <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE+0x564>
 140:	str	x23, [x0], #8
 144:	add	x1, x22, #0x18
 148:	str	x1, [x22, #8]
 14c:	str	xzr, [x0, #8]
 150:	strb	wzr, [x22, #24]
 154:	add	x27, x22, #0x28
 158:	cbnz	x23, 594 <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE+0x594>
 15c:	strb	wzr, [x27, x23]
 160:	str	x22, [x24, x25, lsl #3]
 164:	ldr	w0, [x19, #12]
 168:	add	w0, w0, #0x1
 16c:	str	w0, [x19, #12]
 170:	ldr	w1, [x19, #16]
 174:	add	w0, w0, w1
 178:	ldr	w1, [x19, #8]
 17c:	cmp	w0, w1
 180:	b.hi	5a8 <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE+0x5a8>  // b.pmore
 184:	mov	w1, w20
 188:	mov	x0, x19
 18c:	bl	0 <_ZN4llvm13StringMapImpl11RehashTableEj>
 190:	ldr	x2, [x19]
 194:	add	x1, x2, w0, uxtw #3
 198:	ldr	x0, [x2, w0, uxtw #3]
 19c:	cmp	x0, #0x0
 1a0:	ccmn	x0, #0x8, #0x4, ne  // ne = any
 1a4:	b.ne	5c8 <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE+0x5c8>  // b.any
 1a8:	add	x0, x1, #0x8
 1ac:	mov	x1, x0
 1b0:	ldr	x2, [x0], #8
 1b4:	cmp	x2, #0x0
 1b8:	ccmn	x2, #0x8, #0x4, ne  // ne = any
 1bc:	b.eq	1ac <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE+0x1ac>  // b.none
 1c0:	ldr	x27, [sp, #80]
 1c4:	ldr	x0, [x1]
 1c8:	ldr	x20, [x0, #8]
 1cc:	ldr	x19, [x0, #16]
 1d0:	add	x0, sp, #0x1d8
 1d4:	str	x0, [sp, #456]
 1d8:	str	wzr, [sp, #464]
 1dc:	mov	w0, #0x100                 	// #256
 1e0:	str	w0, [sp, #468]
 1e4:	cmp	x19, #0x100
 1e8:	b.hi	5d0 <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE+0x5d0>  // b.pmore
 1ec:	cbz	x19, 610 <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE+0x610>
 1f0:	add	x0, sp, #0x1d8
 1f4:	b	5f0 <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE+0x5f0>
 1f8:	stp	x23, x24, [sp, #48]
 1fc:	stp	x25, x26, [sp, #64]
 200:	str	x27, [sp, #80]
 204:	adrp	x3, 0 <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE>
 208:	add	x3, x3, #0x0
 20c:	mov	w2, #0x43                  	// #67
 210:	adrp	x1, 0 <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE>
 214:	add	x1, x1, #0x0
 218:	adrp	x0, 0 <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE>
 21c:	add	x0, x0, #0x0
 220:	bl	0 <__assert_fail>
 224:	add	x1, sp, #0xb8
 228:	add	x0, x1, #0x10
 22c:	str	x0, [sp, #184]
 230:	str	wzr, [sp, #192]
 234:	mov	w0, #0x100                 	// #256
 238:	str	w0, [sp, #196]
 23c:	str	xzr, [sp, #1024]
 240:	mov	w0, #0x6                   	// #6
 244:	strb	w0, [sp, #1032]
 248:	mov	w0, #0x1                   	// #1
 24c:	strb	w0, [sp, #1033]
 250:	add	x0, sp, #0x2d8
 254:	str	x0, [sp, #1016]
 258:	mov	w2, #0x0                   	// #0
 25c:	add	x0, sp, #0x3f8
 260:	bl	0 <_ZN4llvm3sys2fs9real_pathERKNS_5TwineERNS_15SmallVectorImplIcEEb>
 264:	ldr	x20, [sp, #184]
 268:	cbz	x20, 420 <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE+0x420>
 26c:	ldr	w22, [sp, #192]
 270:	add	x0, sp, #0x78
 274:	str	x0, [sp, #104]
 278:	str	x22, [sp, #136]
 27c:	cmp	x22, #0xf
 280:	b.hi	434 <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE+0x434>  // b.pmore
 284:	cmp	x22, #0x1
 288:	b.ne	460 <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE+0x460>  // b.any
 28c:	ldrb	w0, [x20]
 290:	strb	w0, [sp, #120]
 294:	ldr	x0, [sp, #136]
 298:	str	x0, [sp, #112]
 29c:	ldr	x1, [sp, #104]
 2a0:	strb	wzr, [x1, x0]
 2a4:	ldr	x26, [sp, #728]
 2a8:	ldr	w23, [sp, #736]
 2ac:	str	x26, [sp, #136]
 2b0:	str	x23, [sp, #144]
 2b4:	add	x0, sp, #0xa8
 2b8:	str	x0, [sp, #152]
 2bc:	ldr	x0, [sp, #104]
 2c0:	add	x1, sp, #0x78
 2c4:	cmp	x0, x1
 2c8:	b.eq	46c <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE+0x46c>  // b.none
 2cc:	str	x0, [sp, #152]
 2d0:	ldr	x0, [sp, #120]
 2d4:	str	x0, [sp, #168]
 2d8:	ldr	x0, [sp, #112]
 2dc:	str	x0, [sp, #160]
 2e0:	add	x0, sp, #0x78
 2e4:	str	x0, [sp, #104]
 2e8:	str	xzr, [sp, #112]
 2ec:	strb	wzr, [sp, #120]
 2f0:	ldp	x1, x2, [sp, #136]
 2f4:	mov	x0, x19
 2f8:	bl	0 <_ZN4llvm13StringMapImpl15LookupBucketForENS_9StringRefE>
 2fc:	mov	w20, w0
 300:	mov	w25, w0
 304:	ldr	x24, [x19]
 308:	add	x1, x24, w20, uxtw #3
 30c:	ldr	x0, [x24, x25, lsl #3]
 310:	cmp	x0, #0x0
 314:	ccmn	x0, #0x8, #0x4, ne  // ne = any
 318:	b.ne	478 <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE+0x478>  // b.any
 31c:	str	x27, [sp, #80]
 320:	cmn	x0, #0x8
 324:	b.eq	4a0 <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE+0x4a0>  // b.none
 328:	add	x0, x23, #0x29
 32c:	bl	0 <malloc>
 330:	mov	x22, x0
 334:	cbz	x0, 4b0 <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE+0x4b0>
 338:	str	x23, [x0], #24
 33c:	str	x0, [x22, #8]
 340:	ldr	x0, [sp, #152]
 344:	add	x1, sp, #0xa8
 348:	cmp	x0, x1
 34c:	b.eq	4e0 <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE+0x4e0>  // b.none
 350:	str	x0, [x22, #8]
 354:	ldr	x0, [sp, #168]
 358:	str	x0, [x22, #24]
 35c:	ldr	x0, [sp, #160]
 360:	str	x0, [x22, #16]
 364:	add	x0, sp, #0xa8
 368:	str	x0, [sp, #152]
 36c:	str	xzr, [sp, #160]
 370:	strb	wzr, [sp, #168]
 374:	add	x27, x22, #0x28
 378:	cbnz	x23, 4ec <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE+0x4ec>
 37c:	strb	wzr, [x27, x23]
 380:	str	x22, [x24, x25, lsl #3]
 384:	ldr	w0, [x19, #12]
 388:	add	w0, w0, #0x1
 38c:	str	w0, [x19, #12]
 390:	ldr	w1, [x19, #16]
 394:	add	w0, w0, w1
 398:	ldr	w1, [x19, #8]
 39c:	cmp	w0, w1
 3a0:	b.hi	500 <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE+0x500>  // b.pmore
 3a4:	mov	w1, w20
 3a8:	mov	x0, x19
 3ac:	bl	0 <_ZN4llvm13StringMapImpl11RehashTableEj>
 3b0:	ldr	x2, [x19]
 3b4:	add	x1, x2, w0, uxtw #3
 3b8:	ldr	x0, [x2, w0, uxtw #3]
 3bc:	cmp	x0, #0x0
 3c0:	ccmn	x0, #0x8, #0x4, ne  // ne = any
 3c4:	b.ne	520 <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE+0x520>  // b.any
 3c8:	add	x1, x1, #0x8
 3cc:	ldr	x0, [x1], #8
 3d0:	cmp	x0, #0x0
 3d4:	ccmn	x0, #0x8, #0x4, ne  // ne = any
 3d8:	b.eq	3cc <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE+0x3cc>  // b.none
 3dc:	ldr	x27, [sp, #80]
 3e0:	ldr	x0, [sp, #152]
 3e4:	add	x1, sp, #0xa8
 3e8:	cmp	x0, x1
 3ec:	b.eq	3f4 <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE+0x3f4>  // b.none
 3f0:	bl	0 <_ZdlPv>
 3f4:	ldr	x0, [sp, #104]
 3f8:	add	x1, sp, #0x78
 3fc:	cmp	x0, x1
 400:	b.eq	408 <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE+0x408>  // b.none
 404:	bl	0 <_ZdlPv>
 408:	ldr	x0, [sp, #184]
 40c:	add	x1, sp, #0xc8
 410:	cmp	x0, x1
 414:	b.eq	ec <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE+0xec>  // b.none
 418:	bl	0 <free>
 41c:	b	ec <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE+0xec>
 420:	add	x0, sp, #0x78
 424:	str	x0, [sp, #104]
 428:	str	xzr, [sp, #112]
 42c:	strb	wzr, [sp, #120]
 430:	b	2a4 <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE+0x2a4>
 434:	mov	x2, #0x0                   	// #0
 438:	add	x1, sp, #0x88
 43c:	add	x0, sp, #0x68
 440:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
 444:	str	x0, [sp, #104]
 448:	ldr	x1, [sp, #136]
 44c:	str	x1, [sp, #120]
 450:	mov	x2, x22
 454:	mov	x1, x20
 458:	bl	0 <memcpy>
 45c:	b	294 <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE+0x294>
 460:	cbz	x22, 294 <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE+0x294>
 464:	add	x0, sp, #0x78
 468:	b	450 <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE+0x450>
 46c:	ldp	x0, x1, [sp, #120]
 470:	stp	x0, x1, [sp, #168]
 474:	b	2d8 <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE+0x2d8>
 478:	ldr	x0, [x24, x25, lsl #3]
 47c:	cmp	x0, #0x0
 480:	ccmn	x0, #0x8, #0x4, ne  // ne = any
 484:	b.ne	3e0 <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE+0x3e0>  // b.any
 488:	add	x1, x1, #0x8
 48c:	ldr	x0, [x1], #8
 490:	cmp	x0, #0x0
 494:	ccmn	x0, #0x8, #0x4, ne  // ne = any
 498:	b.eq	48c <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE+0x48c>  // b.none
 49c:	b	3e0 <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE+0x3e0>
 4a0:	ldr	w0, [x19, #16]
 4a4:	sub	w0, w0, #0x1
 4a8:	str	w0, [x19, #16]
 4ac:	b	328 <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE+0x328>
 4b0:	mov	w1, #0x1                   	// #1
 4b4:	adrp	x0, 0 <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE>
 4b8:	add	x0, x0, #0x0
 4bc:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 4c0:	adrp	x3, 0 <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE>
 4c4:	add	x3, x3, #0x0
 4c8:	mov	w2, #0xbd                  	// #189
 4cc:	adrp	x1, 0 <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE>
 4d0:	add	x1, x1, #0x0
 4d4:	adrp	x0, 0 <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE>
 4d8:	add	x0, x0, #0x0
 4dc:	bl	0 <__assert_fail>
 4e0:	ldp	x0, x1, [sp, #168]
 4e4:	stp	x0, x1, [x22, #24]
 4e8:	b	35c <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE+0x35c>
 4ec:	mov	x2, x23
 4f0:	mov	x1, x26
 4f4:	mov	x0, x27
 4f8:	bl	0 <memcpy>
 4fc:	b	37c <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE+0x37c>
 500:	adrp	x3, 0 <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE>
 504:	add	x3, x3, #0x0
 508:	mov	w2, #0x1bb                 	// #443
 50c:	adrp	x1, 0 <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE>
 510:	add	x1, x1, #0x0
 514:	adrp	x0, 0 <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE>
 518:	add	x0, x0, #0x0
 51c:	bl	0 <__assert_fail>
 520:	ldr	x27, [sp, #80]
 524:	b	3e0 <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE+0x3e0>
 528:	ldr	x0, [x24, x25, lsl #3]
 52c:	cmp	x0, #0x0
 530:	ccmn	x0, #0x8, #0x4, ne  // ne = any
 534:	b.ne	1c4 <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE+0x1c4>  // b.any
 538:	add	x0, x1, #0x8
 53c:	mov	x1, x0
 540:	ldr	x2, [x0], #8
 544:	cmp	x2, #0x0
 548:	ccmn	x2, #0x8, #0x4, ne  // ne = any
 54c:	b.eq	53c <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE+0x53c>  // b.none
 550:	b	1c4 <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE+0x1c4>
 554:	ldr	w0, [x19, #16]
 558:	sub	w0, w0, #0x1
 55c:	str	w0, [x19, #16]
 560:	b	130 <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE+0x130>
 564:	mov	w1, #0x1                   	// #1
 568:	adrp	x0, 0 <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE>
 56c:	add	x0, x0, #0x0
 570:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 574:	adrp	x3, 0 <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE>
 578:	add	x3, x3, #0x0
 57c:	mov	w2, #0xbd                  	// #189
 580:	adrp	x1, 0 <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE>
 584:	add	x1, x1, #0x0
 588:	adrp	x0, 0 <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE>
 58c:	add	x0, x0, #0x0
 590:	bl	0 <__assert_fail>
 594:	mov	x2, x23
 598:	mov	x1, x26
 59c:	mov	x0, x27
 5a0:	bl	0 <memcpy>
 5a4:	b	15c <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE+0x15c>
 5a8:	adrp	x3, 0 <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE>
 5ac:	add	x3, x3, #0x0
 5b0:	mov	w2, #0x1bb                 	// #443
 5b4:	adrp	x1, 0 <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE>
 5b8:	add	x1, x1, #0x0
 5bc:	adrp	x0, 0 <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE>
 5c0:	add	x0, x0, #0x0
 5c4:	bl	0 <__assert_fail>
 5c8:	ldr	x27, [sp, #80]
 5cc:	b	1c4 <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE+0x1c4>
 5d0:	add	x0, sp, #0x1c8
 5d4:	mov	x3, #0x1                   	// #1
 5d8:	mov	x2, x19
 5dc:	add	x1, x0, #0x10
 5e0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 5e4:	ldr	w1, [sp, #464]
 5e8:	ldr	x0, [sp, #456]
 5ec:	add	x0, x0, x1
 5f0:	mov	x2, x19
 5f4:	mov	x1, x20
 5f8:	bl	0 <memcpy>
 5fc:	ldr	w0, [sp, #464]
 600:	add	x19, x19, x0
 604:	ldr	w0, [sp, #468]
 608:	cmp	x19, x0
 60c:	b.hi	6e0 <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE+0x6e0>  // b.pmore
 610:	str	w19, [sp, #464]
 614:	str	xzr, [sp, #1048]
 618:	mov	w0, #0x5                   	// #5
 61c:	strb	w0, [sp, #1056]
 620:	mov	w0, #0x1                   	// #1
 624:	strb	w0, [sp, #1057]
 628:	add	x1, sp, #0x3e8
 62c:	str	x1, [sp, #1040]
 630:	str	xzr, [sp, #1064]
 634:	str	xzr, [sp, #1072]
 638:	strb	w0, [sp, #1080]
 63c:	strb	w0, [sp, #1081]
 640:	str	xzr, [sp, #1088]
 644:	str	xzr, [sp, #1096]
 648:	strb	w0, [sp, #1104]
 64c:	strb	w0, [sp, #1105]
 650:	str	xzr, [sp, #1112]
 654:	str	xzr, [sp, #1120]
 658:	strb	w0, [sp, #1128]
 65c:	strb	w0, [sp, #1129]
 660:	add	x19, sp, #0x1c8
 664:	add	x4, sp, #0x458
 668:	add	x3, sp, #0x440
 66c:	add	x2, sp, #0x428
 670:	add	x1, sp, #0x410
 674:	mov	x0, x19
 678:	bl	0 <_ZN4llvm3sys4path6appendERNS_15SmallVectorImplIcEERKNS_5TwineES7_S7_S7_>
 67c:	ldr	x1, [sp, #456]
 680:	ldr	w2, [sp, #464]
 684:	mov	x0, x21
 688:	bl	0 <_ZN4llvm24NonRelocatableStringpool12internStringENS_9StringRefE>
 68c:	mov	x21, x0
 690:	mov	x20, x1
 694:	ldr	x0, [sp, #456]
 698:	add	x19, x19, #0x10
 69c:	cmp	x0, x19
 6a0:	b.eq	6a8 <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE+0x6a8>  // b.none
 6a4:	bl	0 <free>
 6a8:	ldr	x0, [sp, #728]
 6ac:	add	x1, sp, #0x2e8
 6b0:	cmp	x0, x1
 6b4:	b.eq	6bc <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE+0x6bc>  // b.none
 6b8:	bl	0 <free>
 6bc:	mov	x0, x21
 6c0:	mov	x1, x20
 6c4:	ldp	x23, x24, [sp, #48]
 6c8:	ldp	x25, x26, [sp, #64]
 6cc:	ldp	x19, x20, [sp, #16]
 6d0:	ldp	x21, x22, [sp, #32]
 6d4:	ldp	x29, x30, [sp]
 6d8:	add	sp, sp, #0x470
 6dc:	ret
 6e0:	str	x27, [sp, #80]
 6e4:	adrp	x3, 0 <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE>
 6e8:	add	x3, x3, #0x0
 6ec:	mov	w2, #0x43                  	// #67
 6f0:	adrp	x1, 0 <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE>
 6f4:	add	x1, x1, #0x0
 6f8:	adrp	x0, 0 <_ZN4llvm18CachedPathResolver7resolveENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_24NonRelocatableStringpoolE>
 6fc:	add	x0, x0, #0x0
 700:	bl	0 <__assert_fail>

Disassembly of section .text._ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE:

0000000000000000 <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x20, x1
  14:	orr	x2, x0, x0, lsr #1
  18:	orr	x2, x2, x2, lsr #2
  1c:	orr	x2, x2, x2, lsr #4
  20:	orr	x2, x2, x2, lsr #8
  24:	orr	x2, x2, x2, lsr #16
  28:	orr	x2, x2, x2, lsr #32
  2c:	add	x0, x2, #0x1
  30:	cmp	x0, #0x10
  34:	mov	x1, #0x10                  	// #16
  38:	csel	x0, x0, x1, ls  // ls = plast
  3c:	cmn	x2, #0x1
  40:	b.eq	138 <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE+0x138>  // b.none
  44:	sub	x1, x0, #0x1
  48:	tst	x1, x0
  4c:	b.ne	194 <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE+0x194>  // b.any
  50:	stp	x21, x22, [sp, #32]
  54:	clz	x0, x0
  58:	ldr	x1, [x20, #80]
  5c:	add	x1, x1, x19
  60:	str	x1, [x20, #80]
  64:	ldr	x1, [x20]
  68:	mov	w21, #0x3f                  	// #63
  6c:	sub	w0, w21, w0
  70:	mov	x21, #0x1                   	// #1
  74:	lsl	x21, x21, x0
  78:	neg	x22, x21
  7c:	sub	x0, x1, #0x1
  80:	add	x0, x0, x21
  84:	and	x0, x0, x22
  88:	sub	x0, x0, x1
  8c:	adds	x3, x19, x0
  90:	b.cs	168 <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE+0x168>  // b.hs, b.nlast
  94:	ldr	x2, [x20, #8]
  98:	sub	x2, x2, x1
  9c:	cmp	x3, x2
  a0:	b.ls	1c4 <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE+0x1c4>  // b.plast
  a4:	stp	x23, x24, [sp, #48]
  a8:	sub	x23, x19, #0x1
  ac:	add	x23, x23, x21
  b0:	cmp	x23, #0x1, lsl #12
  b4:	b.ls	354 <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE+0x354>  // b.plast
  b8:	mov	x0, x23
  bc:	bl	0 <malloc>
  c0:	mov	x24, x0
  c4:	cbz	x0, 1e0 <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE+0x1e0>
  c8:	ldr	w0, [x20, #76]
  cc:	ldr	w1, [x20, #72]
  d0:	cmp	w1, w0
  d4:	b.cs	1f4 <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE+0x1f4>  // b.hs, b.nlast
  d8:	ldr	w0, [x20, #72]
  dc:	lsl	x0, x0, #4
  e0:	ldr	x1, [x20, #64]
  e4:	add	x2, x1, x0
  e8:	str	x24, [x1, x0]
  ec:	str	x23, [x2, #8]
  f0:	ldr	w0, [x20, #72]
  f4:	mov	w1, w0
  f8:	add	x1, x1, #0x1
  fc:	ldr	w2, [x20, #76]
 100:	cmp	x1, x2
 104:	b.hi	2dc <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE+0x2dc>  // b.pmore
 108:	add	w0, w0, #0x1
 10c:	str	w0, [x20, #72]
 110:	sub	x21, x21, #0x1
 114:	adds	x21, x24, x21
 118:	b.cs	304 <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE+0x304>  // b.hs, b.nlast
 11c:	and	x0, x22, x21
 120:	add	x19, x19, x0
 124:	add	x23, x24, x23
 128:	cmp	x19, x23
 12c:	b.hi	32c <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE+0x32c>  // b.pmore
 130:	ldp	x23, x24, [sp, #48]
 134:	b	1d0 <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE+0x1d0>
 138:	stp	x21, x22, [sp, #32]
 13c:	stp	x23, x24, [sp, #48]
 140:	stp	x25, x26, [sp, #64]
 144:	str	x27, [sp, #80]
 148:	adrp	x3, 0 <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE>
 14c:	add	x3, x3, #0x0
 150:	mov	w2, #0x110                 	// #272
 154:	adrp	x1, 0 <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE>
 158:	add	x1, x1, #0x0
 15c:	adrp	x0, 0 <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE>
 160:	add	x0, x0, #0x0
 164:	bl	0 <__assert_fail>
 168:	stp	x23, x24, [sp, #48]
 16c:	stp	x25, x26, [sp, #64]
 170:	str	x27, [sp, #80]
 174:	adrp	x3, 0 <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE>
 178:	add	x3, x3, #0x0
 17c:	mov	w2, #0xdc                  	// #220
 180:	adrp	x1, 0 <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE>
 184:	add	x1, x1, #0x0
 188:	adrp	x0, 0 <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE>
 18c:	add	x0, x0, #0x0
 190:	bl	0 <__assert_fail>
 194:	stp	x21, x22, [sp, #32]
 198:	stp	x23, x24, [sp, #48]
 19c:	stp	x25, x26, [sp, #64]
 1a0:	str	x27, [sp, #80]
 1a4:	adrp	x3, 0 <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE>
 1a8:	add	x3, x3, #0x0
 1ac:	mov	w2, #0x4f                  	// #79
 1b0:	adrp	x1, 0 <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE>
 1b4:	add	x1, x1, #0x0
 1b8:	adrp	x0, 0 <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE>
 1bc:	add	x0, x0, #0x0
 1c0:	bl	0 <__assert_fail>
 1c4:	add	x0, x1, x0
 1c8:	add	x19, x0, x19
 1cc:	str	x19, [x20]
 1d0:	ldp	x21, x22, [sp, #32]
 1d4:	ldp	x19, x20, [sp, #16]
 1d8:	ldp	x29, x30, [sp], #112
 1dc:	ret
 1e0:	mov	w1, #0x1                   	// #1
 1e4:	adrp	x0, 0 <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE>
 1e8:	add	x0, x0, #0x0
 1ec:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 1f0:	b	c8 <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE+0xc8>
 1f4:	stp	x25, x26, [sp, #64]
 1f8:	str	x27, [sp, #80]
 1fc:	mov	w0, w0
 200:	add	x0, x0, #0x2
 204:	orr	x0, x0, x0, lsr #1
 208:	orr	x0, x0, x0, lsr #2
 20c:	orr	x0, x0, x0, lsr #4
 210:	orr	x0, x0, x0, lsr #8
 214:	orr	x1, x0, x0, lsr #16
 218:	orr	x0, x1, x0, lsr #32
 21c:	add	x0, x0, #0x1
 220:	str	x0, [sp, #96]
 224:	mov	x1, #0xffffffff            	// #4294967295
 228:	str	x1, [sp, #104]
 22c:	cmp	x0, x1
 230:	add	x0, sp, #0x60
 234:	add	x1, sp, #0x68
 238:	csel	x0, x0, x1, ls  // ls = plast
 23c:	ldr	x26, [x0]
 240:	lsl	x27, x26, #4
 244:	mov	x0, x27
 248:	bl	0 <malloc>
 24c:	mov	x25, x0
 250:	cbz	x0, 2b4 <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE+0x2b4>
 254:	ldr	x3, [x20, #64]
 258:	ldr	w1, [x20, #72]
 25c:	add	x1, x3, x1, lsl #4
 260:	cmp	x3, x1
 264:	b.eq	28c <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE+0x28c>  // b.none
 268:	mov	x0, x3
 26c:	mov	x2, x25
 270:	ldp	x4, x5, [x0], #16
 274:	stp	x4, x5, [x2], #16
 278:	cmp	x1, x0
 27c:	b.ne	270 <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE+0x270>  // b.any
 280:	sub	x1, x1, #0x10
 284:	cmp	x3, x1
 288:	b.ne	280 <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE+0x280>  // b.any
 28c:	ldr	x0, [x20, #64]
 290:	add	x1, x20, #0x50
 294:	cmp	x0, x1
 298:	b.eq	2a0 <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE+0x2a0>  // b.none
 29c:	bl	0 <free>
 2a0:	str	x25, [x20, #64]
 2a4:	str	w26, [x20, #76]
 2a8:	ldp	x25, x26, [sp, #64]
 2ac:	ldr	x27, [sp, #80]
 2b0:	b	d8 <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE+0xd8>
 2b4:	cbnz	x27, 2c8 <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE+0x2c8>
 2b8:	mov	x0, #0x1                   	// #1
 2bc:	bl	0 <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE>
 2c0:	mov	x25, x0
 2c4:	b	254 <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE+0x254>
 2c8:	mov	w1, #0x1                   	// #1
 2cc:	adrp	x0, 0 <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE>
 2d0:	add	x0, x0, #0x0
 2d4:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 2d8:	b	254 <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE+0x254>
 2dc:	stp	x25, x26, [sp, #64]
 2e0:	str	x27, [sp, #80]
 2e4:	adrp	x3, 0 <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE>
 2e8:	add	x3, x3, #0x0
 2ec:	mov	w2, #0x43                  	// #67
 2f0:	adrp	x1, 0 <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE>
 2f4:	add	x1, x1, #0x0
 2f8:	adrp	x0, 0 <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE>
 2fc:	add	x0, x0, #0x0
 300:	bl	0 <__assert_fail>
 304:	stp	x25, x26, [sp, #64]
 308:	str	x27, [sp, #80]
 30c:	adrp	x3, 0 <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE>
 310:	add	x3, x3, #0x0
 314:	mov	w2, #0xba                  	// #186
 318:	adrp	x1, 0 <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE>
 31c:	add	x1, x1, #0x0
 320:	adrp	x0, 0 <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE>
 324:	add	x0, x0, #0x0
 328:	bl	0 <__assert_fail>
 32c:	stp	x25, x26, [sp, #64]
 330:	str	x27, [sp, #80]
 334:	adrp	x3, 0 <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE>
 338:	add	x3, x3, #0x0
 33c:	mov	w2, #0xfb                  	// #251
 340:	adrp	x1, 0 <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE>
 344:	add	x1, x1, #0x0
 348:	adrp	x0, 0 <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE>
 34c:	add	x0, x0, #0x0
 350:	bl	0 <__assert_fail>
 354:	ldr	w1, [x20, #24]
 358:	lsr	w0, w1, #7
 35c:	cmp	w1, #0xeff
 360:	b.ls	3f0 <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE+0x3f0>  // b.plast
 364:	mov	x0, #0x40000000000         	// #4398046511104
 368:	bl	0 <malloc>
 36c:	mov	x23, x0
 370:	cbz	x0, 420 <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE+0x420>
 374:	mov	x24, #0x40000000000         	// #4398046511104
 378:	ldr	w1, [x20, #24]
 37c:	ldr	w0, [x20, #28]
 380:	cmp	w1, w0
 384:	b.cs	428 <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE+0x428>  // b.hs, b.nlast
 388:	ldr	w1, [x20, #24]
 38c:	ldr	x0, [x20, #16]
 390:	str	x23, [x0, x1, lsl #3]
 394:	ldr	w0, [x20, #24]
 398:	mov	w1, w0
 39c:	add	x1, x1, #0x1
 3a0:	ldr	w2, [x20, #28]
 3a4:	cmp	x1, x2
 3a8:	b.hi	440 <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE+0x440>  // b.pmore
 3ac:	add	w0, w0, #0x1
 3b0:	str	w0, [x20, #24]
 3b4:	str	x23, [x20]
 3b8:	add	x0, x23, x24
 3bc:	str	x0, [x20, #8]
 3c0:	sub	x21, x21, #0x1
 3c4:	adds	x21, x23, x21
 3c8:	b.cs	468 <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE+0x468>  // b.hs, b.nlast
 3cc:	and	x22, x22, x21
 3d0:	add	x1, x19, x22
 3d4:	cmp	x0, x1
 3d8:	b.cc	490 <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE+0x490>  // b.lo, b.ul, b.last
 3dc:	mov	x0, x22
 3e0:	add	x22, x22, x19
 3e4:	str	x22, [x20]
 3e8:	ldp	x23, x24, [sp, #48]
 3ec:	b	1d0 <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE+0x1d0>
 3f0:	mov	x24, #0x1000                	// #4096
 3f4:	lsl	x24, x24, x0
 3f8:	mov	x0, x24
 3fc:	bl	0 <malloc>
 400:	mov	x23, x0
 404:	cbnz	x0, 378 <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE+0x378>
 408:	mov	w1, #0x1                   	// #1
 40c:	adrp	x0, 0 <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE>
 410:	add	x0, x0, #0x0
 414:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 418:	mov	x23, #0x0                   	// #0
 41c:	b	378 <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE+0x378>
 420:	mov	x24, #0x40000000000         	// #4398046511104
 424:	b	408 <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE+0x408>
 428:	mov	x3, #0x8                   	// #8
 42c:	mov	x2, #0x0                   	// #0
 430:	add	x1, x20, #0x20
 434:	add	x0, x20, #0x10
 438:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 43c:	b	388 <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE+0x388>
 440:	stp	x25, x26, [sp, #64]
 444:	str	x27, [sp, #80]
 448:	adrp	x3, 0 <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE>
 44c:	add	x3, x3, #0x0
 450:	mov	w2, #0x43                  	// #67
 454:	adrp	x1, 0 <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE>
 458:	add	x1, x1, #0x0
 45c:	adrp	x0, 0 <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE>
 460:	add	x0, x0, #0x0
 464:	bl	0 <__assert_fail>
 468:	stp	x25, x26, [sp, #64]
 46c:	str	x27, [sp, #80]
 470:	adrp	x3, 0 <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE>
 474:	add	x3, x3, #0x0
 478:	mov	w2, #0xba                  	// #186
 47c:	adrp	x1, 0 <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE>
 480:	add	x1, x1, #0x0
 484:	adrp	x0, 0 <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE>
 488:	add	x0, x0, #0x0
 48c:	bl	0 <__assert_fail>
 490:	stp	x25, x26, [sp, #64]
 494:	str	x27, [sp, #80]
 498:	adrp	x3, 0 <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE>
 49c:	add	x3, x3, #0x0
 4a0:	mov	w2, #0x105                 	// #261
 4a4:	adrp	x1, 0 <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE>
 4a8:	add	x1, x1, #0x0
 4ac:	adrp	x0, 0 <_ZnwIN4llvm15MallocAllocatorELm4096ELm4096EEPvmRNS0_20BumpPtrAllocatorImplIT_XT0_EXT1_EEE>
 4b0:	add	x0, x0, #0x0
 4b4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt3_V28__rotateIPcEET_S2_S2_S2_St26random_access_iterator_tag:

0000000000000000 <_ZNSt3_V28__rotateIPcEET_S2_S2_S2_St26random_access_iterator_tag>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	cmp	x0, x1
  10:	b.eq	174 <_ZNSt3_V28__rotateIPcEET_S2_S2_S2_St26random_access_iterator_tag+0x174>  // b.none
  14:	mov	x19, x0
  18:	cmp	x1, x2
  1c:	b.eq	188 <_ZNSt3_V28__rotateIPcEET_S2_S2_S2_St26random_access_iterator_tag+0x188>  // b.none
  20:	sub	x6, x2, x0
  24:	sub	x0, x1, x0
  28:	sub	x2, x2, x1
  2c:	add	x20, x19, x2
  30:	cmp	x0, x2
  34:	b.ne	ac <_ZNSt3_V28__rotateIPcEET_S2_S2_S2_St26random_access_iterator_tag+0xac>  // b.any
  38:	mov	x4, x0
  3c:	mov	x0, #0x0                   	// #0
  40:	ldrb	w2, [x19, x0]
  44:	ldrb	w3, [x1, x0]
  48:	strb	w3, [x19, x0]
  4c:	strb	w2, [x1, x0]
  50:	add	x0, x0, #0x1
  54:	cmp	x0, x4
  58:	b.ne	40 <_ZNSt3_V28__rotateIPcEET_S2_S2_S2_St26random_access_iterator_tag+0x40>  // b.any
  5c:	mov	x20, x1
  60:	b	178 <_ZNSt3_V28__rotateIPcEET_S2_S2_S2_St26random_access_iterator_tag+0x178>
  64:	stp	x21, x22, [sp, #32]
  68:	ldrb	w22, [x19]
  6c:	subs	x21, x6, #0x1
  70:	b.ne	80 <_ZNSt3_V28__rotateIPcEET_S2_S2_S2_St26random_access_iterator_tag+0x80>  // b.any
  74:	strb	w22, [x19, x21]
  78:	ldp	x21, x22, [sp, #32]
  7c:	b	178 <_ZNSt3_V28__rotateIPcEET_S2_S2_S2_St26random_access_iterator_tag+0x178>
  80:	mov	x2, x21
  84:	add	x1, x19, #0x1
  88:	mov	x0, x19
  8c:	bl	0 <memmove>
  90:	b	74 <_ZNSt3_V28__rotateIPcEET_S2_S2_S2_St26random_access_iterator_tag+0x74>
  94:	sdiv	x1, x6, x0
  98:	msub	x6, x1, x0, x6
  9c:	cbz	x6, 178 <_ZNSt3_V28__rotateIPcEET_S2_S2_S2_St26random_access_iterator_tag+0x178>
  a0:	mov	x2, x0
  a4:	sub	x0, x0, x6
  a8:	mov	x6, x2
  ac:	sub	x2, x6, x0
  b0:	cmp	x2, x0
  b4:	b.le	f4 <_ZNSt3_V28__rotateIPcEET_S2_S2_S2_St26random_access_iterator_tag+0xf4>
  b8:	cmp	x0, #0x1
  bc:	b.eq	64 <_ZNSt3_V28__rotateIPcEET_S2_S2_S2_St26random_access_iterator_tag+0x64>  // b.none
  c0:	add	x3, x19, x0
  c4:	cmp	x2, #0x0
  c8:	b.le	94 <_ZNSt3_V28__rotateIPcEET_S2_S2_S2_St26random_access_iterator_tag+0x94>
  cc:	mov	x1, #0x0                   	// #0
  d0:	ldrb	w4, [x19, x1]
  d4:	ldrb	w5, [x3, x1]
  d8:	strb	w5, [x19, x1]
  dc:	strb	w4, [x3, x1]
  e0:	add	x1, x1, #0x1
  e4:	cmp	x2, x1
  e8:	b.ne	d0 <_ZNSt3_V28__rotateIPcEET_S2_S2_S2_St26random_access_iterator_tag+0xd0>  // b.any
  ec:	add	x19, x19, x2
  f0:	b	94 <_ZNSt3_V28__rotateIPcEET_S2_S2_S2_St26random_access_iterator_tag+0x94>
  f4:	cmp	x2, #0x1
  f8:	b.eq	148 <_ZNSt3_V28__rotateIPcEET_S2_S2_S2_St26random_access_iterator_tag+0x148>  // b.none
  fc:	add	x3, x19, x6
 100:	sub	x19, x3, x2
 104:	cmp	x0, #0x0
 108:	b.le	138 <_ZNSt3_V28__rotateIPcEET_S2_S2_S2_St26random_access_iterator_tag+0x138>
 10c:	mov	x7, x0
 110:	mvn	x0, x0
 114:	mov	x1, #0xffffffffffffffff    	// #-1
 118:	ldrb	w4, [x19, x1]
 11c:	ldrb	w5, [x3, x1]
 120:	strb	w5, [x19, x1]
 124:	strb	w4, [x3, x1]
 128:	sub	x1, x1, #0x1
 12c:	cmp	x0, x1
 130:	b.ne	118 <_ZNSt3_V28__rotateIPcEET_S2_S2_S2_St26random_access_iterator_tag+0x118>  // b.any
 134:	sub	x19, x19, x7
 138:	sdiv	x0, x6, x2
 13c:	msub	x0, x0, x2, x6
 140:	cbnz	x0, a8 <_ZNSt3_V28__rotateIPcEET_S2_S2_S2_St26random_access_iterator_tag+0xa8>
 144:	b	178 <_ZNSt3_V28__rotateIPcEET_S2_S2_S2_St26random_access_iterator_tag+0x178>
 148:	stp	x21, x22, [sp, #32]
 14c:	sub	x2, x6, #0x1
 150:	ldrb	w21, [x19, x2]
 154:	cbnz	x2, 164 <_ZNSt3_V28__rotateIPcEET_S2_S2_S2_St26random_access_iterator_tag+0x164>
 158:	strb	w21, [x19]
 15c:	ldp	x21, x22, [sp, #32]
 160:	b	178 <_ZNSt3_V28__rotateIPcEET_S2_S2_S2_St26random_access_iterator_tag+0x178>
 164:	mov	x1, x19
 168:	add	x0, x19, #0x1
 16c:	bl	0 <memmove>
 170:	b	158 <_ZNSt3_V28__rotateIPcEET_S2_S2_S2_St26random_access_iterator_tag+0x158>
 174:	mov	x20, x2
 178:	mov	x0, x20
 17c:	ldp	x19, x20, [sp, #16]
 180:	ldp	x29, x30, [sp], #48
 184:	ret
 188:	mov	x20, x0
 18c:	b	178 <_ZNSt3_V28__rotateIPcEET_S2_S2_S2_St26random_access_iterator_tag+0x178>

Disassembly of section .text._ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_default_appendEm:

0000000000000000 <_ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_default_appendEm>:
   0:	cbz	x1, 128 <_ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_default_appendEm+0x128>
   4:	stp	x29, x30, [sp, #-64]!
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	stp	x21, x22, [sp, #32]
  14:	mov	x21, x0
  18:	mov	x20, x1
  1c:	ldr	x0, [x0, #8]
  20:	ldr	x2, [x21]
  24:	sub	x19, x0, x2
  28:	asr	x22, x19, #4
  2c:	mov	x1, #0x7ffffffffffffff     	// #576460752303423487
  30:	sub	x2, x1, x22
  34:	ldr	x1, [x21, #16]
  38:	sub	x1, x1, x0
  3c:	cmp	x20, x1, asr #4
  40:	b.hi	78 <_ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_default_appendEm+0x78>  // b.pmore
  44:	mov	x2, x0
  48:	mov	x3, x20
  4c:	str	xzr, [x2]
  50:	str	xzr, [x2, #8]
  54:	add	x2, x2, #0x10
  58:	subs	x3, x3, #0x1
  5c:	b.ne	4c <_ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_default_appendEm+0x4c>  // b.any
  60:	add	x20, x0, x20, lsl #4
  64:	str	x20, [x21, #8]
  68:	ldp	x19, x20, [sp, #16]
  6c:	ldp	x21, x22, [sp, #32]
  70:	ldp	x29, x30, [sp], #64
  74:	ret
  78:	stp	x23, x24, [sp, #48]
  7c:	cmp	x2, x20
  80:	b.cc	11c <_ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_default_appendEm+0x11c>  // b.lo, b.ul, b.last
  84:	cmp	x22, x20
  88:	csel	x0, x22, x20, cs  // cs = hs, nlast
  8c:	mov	x24, #0x7ffffffffffffff     	// #576460752303423487
  90:	adds	x0, x0, x22
  94:	b.cs	a0 <_ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_default_appendEm+0xa0>  // b.hs, b.nlast
  98:	cmp	x0, x24
  9c:	csel	x24, x0, x24, ls  // ls = plast
  a0:	lsl	x24, x24, #4
  a4:	mov	x0, x24
  a8:	bl	0 <_Znwm>
  ac:	mov	x23, x0
  b0:	add	x2, x0, x19
  b4:	mov	x1, x20
  b8:	str	xzr, [x2]
  bc:	str	xzr, [x2, #8]
  c0:	add	x2, x2, #0x10
  c4:	subs	x1, x1, #0x1
  c8:	b.ne	b8 <_ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_default_appendEm+0xb8>  // b.any
  cc:	ldr	x1, [x21]
  d0:	ldr	x0, [x21, #8]
  d4:	cmp	x1, x0
  d8:	b.eq	f0 <_ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_default_appendEm+0xf0>  // b.none
  dc:	mov	x2, x23
  e0:	ldp	x4, x5, [x1], #16
  e4:	stp	x4, x5, [x2], #16
  e8:	cmp	x0, x1
  ec:	b.ne	e0 <_ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_default_appendEm+0xe0>  // b.any
  f0:	ldr	x0, [x21]
  f4:	cbz	x0, fc <_ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_default_appendEm+0xfc>
  f8:	bl	0 <_ZdlPv>
  fc:	str	x23, [x21]
 100:	add	x20, x22, x20
 104:	add	x20, x23, x20, lsl #4
 108:	str	x20, [x21, #8]
 10c:	add	x23, x23, x24
 110:	str	x23, [x21, #16]
 114:	ldp	x23, x24, [sp, #48]
 118:	b	68 <_ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_default_appendEm+0x68>
 11c:	adrp	x0, 0 <_ZNSt6vectorIN4llvm9StringRefESaIS1_EE17_M_default_appendEm>
 120:	add	x0, x0, #0x0
 124:	bl	0 <_ZSt20__throw_length_errorPKc>
 128:	ret

Disassembly of section .text._ZN4llvm7hashing6detail17store_and_advanceImEEbRPcS3_RKT_m:

0000000000000000 <_ZN4llvm7hashing6detail17store_and_advanceImEEbRPcS3_RKT_m>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x4, x2
  14:	mov	x20, #0x8                   	// #8
  18:	sub	x20, x20, x3
  1c:	ldr	x0, [x0]
  20:	add	x2, x0, x20
  24:	cmp	x1, x2
  28:	b.cs	3c <_ZN4llvm7hashing6detail17store_and_advanceImEEbRPcS3_RKT_m+0x3c>  // b.hs, b.nlast
  2c:	mov	w0, #0x0                   	// #0
  30:	ldp	x19, x20, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	ret
  3c:	mov	x2, x20
  40:	add	x1, x4, x3
  44:	bl	0 <memcpy>
  48:	ldr	x0, [x19]
  4c:	add	x20, x0, x20
  50:	str	x20, [x19]
  54:	mov	w0, #0x1                   	// #1
  58:	b	30 <_ZN4llvm7hashing6detail17store_and_advanceImEEbRPcS3_RKT_m+0x30>

Disassembly of section .text._ZN4llvm7hashing6detail17store_and_advanceIjEEbRPcS3_RKT_m:

0000000000000000 <_ZN4llvm7hashing6detail17store_and_advanceIjEEbRPcS3_RKT_m>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x4, x2
  14:	mov	x20, #0x4                   	// #4
  18:	sub	x20, x20, x3
  1c:	ldr	x0, [x0]
  20:	add	x2, x0, x20
  24:	cmp	x1, x2
  28:	b.cs	3c <_ZN4llvm7hashing6detail17store_and_advanceIjEEbRPcS3_RKT_m+0x3c>  // b.hs, b.nlast
  2c:	mov	w0, #0x0                   	// #0
  30:	ldp	x19, x20, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	ret
  3c:	mov	x2, x20
  40:	add	x1, x4, x3
  44:	bl	0 <memcpy>
  48:	ldr	x0, [x19]
  4c:	add	x20, x0, x20
  50:	str	x20, [x19]
  54:	mov	w0, #0x1                   	// #1
  58:	b	30 <_ZN4llvm7hashing6detail17store_and_advanceIjEEbRPcS3_RKT_m+0x30>

Disassembly of section .text._ZN4llvm12hash_combineIJjNS_9StringRefEEEENS_9hash_codeEDpRKT_:

0000000000000000 <_ZN4llvm12hash_combineIJjNS_9StringRefEEEENS_9hash_codeEDpRKT_>:
   0:	stp	x29, x30, [sp, #-208]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x20, x0
  14:	mov	x19, x1
  18:	stp	xzr, xzr, [sp, #80]
  1c:	stp	xzr, xzr, [sp, #96]
  20:	stp	xzr, xzr, [sp, #112]
  24:	stp	xzr, xzr, [sp, #128]
  28:	str	xzr, [sp, #144]
  2c:	str	xzr, [sp, #152]
  30:	str	xzr, [sp, #160]
  34:	str	xzr, [sp, #168]
  38:	str	xzr, [sp, #176]
  3c:	str	xzr, [sp, #184]
  40:	str	xzr, [sp, #192]
  44:	adrp	x2, 0 <_ZN4llvm12hash_combineIJjNS_9StringRefEEEENS_9hash_codeEDpRKT_>
  48:	ldr	x2, [x2]
  4c:	ldarb	w1, [x2]
  50:	tbz	w1, #0, 134 <_ZN4llvm12hash_combineIJjNS_9StringRefEEEENS_9hash_codeEDpRKT_+0x134>
  54:	adrp	x2, 0 <_ZN4llvm12hash_combineIJjNS_9StringRefEEEENS_9hash_codeEDpRKT_>
  58:	ldr	x2, [x2]
  5c:	ldr	x1, [x2]
  60:	str	x1, [sp, #200]
  64:	ldr	w0, [x20]
  68:	add	x1, sp, #0x50
  6c:	str	x1, [sp, #72]
  70:	str	w0, [sp, #64]
  74:	mov	x3, #0x0                   	// #0
  78:	add	x2, sp, #0x40
  7c:	add	x1, sp, #0x90
  80:	add	x0, sp, #0x48
  84:	bl	0 <_ZN4llvm12hash_combineIJjNS_9StringRefEEEENS_9hash_codeEDpRKT_>
  88:	and	w0, w0, #0xff
  8c:	cbz	w0, 184 <_ZN4llvm12hash_combineIJjNS_9StringRefEEEENS_9hash_codeEDpRKT_+0x184>
  90:	ldr	x20, [sp, #72]
  94:	ldp	x0, x1, [x19]
  98:	bl	0 <_ZN4llvm10hash_valueENS_9StringRefE>
  9c:	str	x20, [sp, #64]
  a0:	str	x0, [sp, #72]
  a4:	mov	x3, #0x0                   	// #0
  a8:	add	x2, sp, #0x48
  ac:	add	x1, sp, #0x90
  b0:	add	x0, sp, #0x40
  b4:	bl	0 <_ZN4llvm12hash_combineIJjNS_9StringRefEEEENS_9hash_codeEDpRKT_>
  b8:	and	w0, w0, #0xff
  bc:	cbz	w0, 70c <_ZN4llvm12hash_combineIJjNS_9StringRefEEEENS_9hash_codeEDpRKT_+0x70c>
  c0:	ldr	x1, [sp, #64]
  c4:	add	x0, sp, #0x50
  c8:	sub	x4, x1, x0
  cc:	ldr	x5, [sp, #200]
  d0:	sub	x1, x4, #0x4
  d4:	cmp	x1, #0x4
  d8:	b.ls	48c <_ZN4llvm12hash_combineIJjNS_9StringRefEEEENS_9hash_codeEDpRKT_+0x48c>  // b.plast
  dc:	sub	x0, x4, #0x9
  e0:	cmp	x0, #0x7
  e4:	b.hi	4dc <_ZN4llvm12hash_combineIJjNS_9StringRefEEEENS_9hash_codeEDpRKT_+0x4dc>  // b.pmore
  e8:	add	x0, sp, #0x48
  ec:	ldr	x3, [x0, x4]
  f0:	add	x1, x4, x3
  f4:	ror	x1, x1, x4
  f8:	ldr	x2, [sp, #80]
  fc:	eor	x2, x5, x2
 100:	eor	x2, x2, x1
 104:	mov	x0, #0x2d69                	// #11625
 108:	movk	x0, #0xeb38, lsl #16
 10c:	movk	x0, #0xea08, lsl #32
 110:	movk	x0, #0x9ddf, lsl #48
 114:	mul	x2, x2, x0
 118:	eor	x1, x1, x2
 11c:	eor	x1, x1, x2, lsr #47
 120:	mul	x1, x1, x0
 124:	eor	x1, x1, x1, lsr #47
 128:	mul	x0, x1, x0
 12c:	eor	x0, x0, x3
 130:	b	4cc <_ZN4llvm12hash_combineIJjNS_9StringRefEEEENS_9hash_codeEDpRKT_+0x4cc>
 134:	adrp	x0, 0 <_ZN4llvm12hash_combineIJjNS_9StringRefEEEENS_9hash_codeEDpRKT_>
 138:	ldr	x0, [x0]
 13c:	bl	0 <__cxa_guard_acquire>
 140:	cbz	w0, 54 <_ZN4llvm12hash_combineIJjNS_9StringRefEEEENS_9hash_codeEDpRKT_+0x54>
 144:	adrp	x0, 0 <_ZN4llvm7hashing6detail19fixed_seed_overrideE>
 148:	ldr	x0, [x0]
 14c:	ldr	x0, [x0]
 150:	cmp	x0, #0x0
 154:	mov	x1, #0x8ccd                	// #36045
 158:	movk	x1, #0xed55, lsl #16
 15c:	movk	x1, #0xafd7, lsl #32
 160:	movk	x1, #0xff51, lsl #48
 164:	csel	x0, x0, x1, ne  // ne = any
 168:	adrp	x1, 0 <_ZN4llvm12hash_combineIJjNS_9StringRefEEEENS_9hash_codeEDpRKT_>
 16c:	ldr	x1, [x1]
 170:	str	x0, [x1]
 174:	adrp	x0, 0 <_ZN4llvm12hash_combineIJjNS_9StringRefEEEENS_9hash_codeEDpRKT_>
 178:	ldr	x0, [x0]
 17c:	bl	0 <__cxa_guard_release>
 180:	b	54 <_ZN4llvm12hash_combineIJjNS_9StringRefEEEENS_9hash_codeEDpRKT_+0x54>
 184:	str	x23, [sp, #48]
 188:	ldr	x0, [sp, #72]
 18c:	add	x23, sp, #0x50
 190:	add	x21, sp, #0x90
 194:	sub	x22, x21, x0
 198:	add	x20, sp, #0x40
 19c:	mov	x2, x22
 1a0:	mov	x1, x20
 1a4:	bl	0 <memcpy>
 1a8:	ldr	x4, [sp, #200]
 1ac:	mov	x9, #0xf273                	// #62067
 1b0:	movk	x9, #0xbe98, lsl #16
 1b4:	movk	x9, #0xb66f, lsl #32
 1b8:	movk	x9, #0xb492, lsl #48
 1bc:	eor	x7, x4, x9
 1c0:	mov	x10, #0x2d69                	// #11625
 1c4:	movk	x10, #0xeb38, lsl #16
 1c8:	movk	x10, #0xea08, lsl #32
 1cc:	movk	x10, #0x9ddf, lsl #48
 1d0:	mul	x0, x7, x10
 1d4:	eor	x0, x0, x0, lsr #47
 1d8:	eor	x0, x0, x9
 1dc:	mul	x0, x0, x10
 1e0:	eor	x6, x0, x0, lsr #47
 1e4:	ror	x7, x7, #49
 1e8:	mul	x12, x4, x9
 1ec:	eor	x8, x4, x4, lsr #47
 1f0:	eor	x0, x12, x8
 1f4:	mul	x0, x0, x10
 1f8:	eor	x1, x8, x0
 1fc:	eor	x0, x1, x0, lsr #47
 200:	mul	x0, x0, x10
 204:	eor	x0, x0, x0, lsr #47
 208:	mul	x0, x0, x10
 20c:	ldr	x3, [sp, #88]
 210:	ldr	x1, [sp, #128]
 214:	add	x2, x4, x3
 218:	add	x2, x2, x7
 21c:	ror	x2, x2, #37
 220:	mul	x2, x2, x9
 224:	eor	x2, x2, x0
 228:	ldr	x11, [sp, #120]
 22c:	add	x5, x4, x1
 230:	add	x5, x5, x12
 234:	ror	x5, x5, #42
 238:	add	x7, x7, x11
 23c:	madd	x7, x5, x9, x7
 240:	madd	x6, x6, x10, x8
 244:	ror	x6, x6, #33
 248:	mul	x6, x6, x9
 24c:	mov	x9, #0x9fa9                	// #40873
 250:	movk	x9, #0x822d, lsl #16
 254:	movk	x9, #0x26fd, lsl #32
 258:	movk	x9, #0x9271, lsl #48
 25c:	ldr	x5, [sp, #80]
 260:	madd	x4, x4, x9, x5
 264:	ldr	x5, [sp, #104]
 268:	ldr	x9, [sp, #96]
 26c:	add	x3, x3, x9
 270:	add	x3, x3, x4
 274:	ldr	x10, [sp, #112]
 278:	add	x0, x0, x10
 27c:	add	x0, x0, x6
 280:	ldr	x10, [sp, #136]
 284:	add	x1, x1, x11
 288:	add	x1, x1, x0
 28c:	str	x6, [sp, #144]
 290:	str	x7, [sp, #152]
 294:	str	x2, [sp, #160]
 298:	add	x6, x5, x3
 29c:	str	x6, [sp, #168]
 2a0:	add	x5, x2, x5
 2a4:	add	x6, x8, x4
 2a8:	add	x5, x5, x6
 2ac:	ror	x5, x5, #21
 2b0:	ror	x3, x3, #44
 2b4:	add	x3, x3, x4
 2b8:	add	x3, x5, x3
 2bc:	str	x3, [sp, #176]
 2c0:	add	x2, x10, x1
 2c4:	str	x2, [sp, #184]
 2c8:	add	x2, x9, x10
 2cc:	add	x7, x7, x0
 2d0:	add	x2, x2, x7
 2d4:	ror	x2, x2, #21
 2d8:	ror	x1, x1, #44
 2dc:	add	x1, x1, x0
 2e0:	add	x1, x2, x1
 2e4:	str	x1, [sp, #192]
 2e8:	str	x23, [sp, #72]
 2ec:	mov	x3, x22
 2f0:	mov	x2, x20
 2f4:	mov	x1, x21
 2f8:	add	x0, sp, #0x48
 2fc:	bl	0 <_ZN4llvm12hash_combineIJjNS_9StringRefEEEENS_9hash_codeEDpRKT_>
 300:	and	w0, w0, #0xff
 304:	cbz	w0, 458 <_ZN4llvm12hash_combineIJjNS_9StringRefEEEENS_9hash_codeEDpRKT_+0x458>
 308:	ldr	x20, [sp, #72]
 30c:	ldp	x0, x1, [x19]
 310:	bl	0 <_ZN4llvm10hash_valueENS_9StringRefE>
 314:	str	x20, [sp, #64]
 318:	str	x0, [sp, #72]
 31c:	mov	x3, #0x0                   	// #0
 320:	add	x2, sp, #0x48
 324:	add	x1, sp, #0x90
 328:	add	x0, sp, #0x40
 32c:	bl	0 <_ZN4llvm12hash_combineIJjNS_9StringRefEEEENS_9hash_codeEDpRKT_>
 330:	and	w0, w0, #0xff
 334:	cbnz	w0, a08 <_ZN4llvm12hash_combineIJjNS_9StringRefEEEENS_9hash_codeEDpRKT_+0xa08>
 338:	ldr	x0, [sp, #64]
 33c:	add	x19, sp, #0x90
 340:	sub	x19, x19, x0
 344:	mov	x2, x19
 348:	add	x1, sp, #0x48
 34c:	bl	0 <memcpy>
 350:	ldr	x2, [sp, #152]
 354:	ldr	x1, [sp, #168]
 358:	ldr	x4, [sp, #88]
 35c:	ldr	x6, [sp, #176]
 360:	ldr	x3, [sp, #128]
 364:	ldr	x8, [sp, #192]
 368:	ldr	x0, [sp, #144]
 36c:	add	x0, x2, x0
 370:	add	x5, x1, x4
 374:	add	x0, x0, x5
 378:	ror	x0, x0, #37
 37c:	mov	x9, #0xf273                	// #62067
 380:	movk	x9, #0xbe98, lsl #16
 384:	movk	x9, #0xb66f, lsl #32
 388:	movk	x9, #0xb492, lsl #48
 38c:	mul	x0, x0, x9
 390:	eor	x5, x0, x8
 394:	ldr	x10, [sp, #120]
 398:	add	x2, x2, x6
 39c:	add	x2, x2, x3
 3a0:	ror	x2, x2, #42
 3a4:	add	x1, x1, x10
 3a8:	madd	x2, x2, x9, x1
 3ac:	str	x2, [sp, #152]
 3b0:	ldr	x1, [sp, #184]
 3b4:	ldr	x7, [sp, #160]
 3b8:	add	x7, x1, x7
 3bc:	ror	x7, x7, #33
 3c0:	mul	x7, x7, x9
 3c4:	ldr	x0, [sp, #80]
 3c8:	madd	x6, x6, x9, x0
 3cc:	ldr	x9, [sp, #104]
 3d0:	ldr	x0, [sp, #96]
 3d4:	add	x4, x4, x0
 3d8:	add	x4, x4, x6
 3dc:	add	x1, x1, x9
 3e0:	add	x11, x5, x6
 3e4:	add	x1, x1, x11
 3e8:	ror	x1, x1, #21
 3ec:	ror	x11, x4, #44
 3f0:	add	x6, x11, x6
 3f4:	add	x1, x1, x6
 3f8:	str	x1, [sp, #176]
 3fc:	add	x4, x9, x4
 400:	str	x4, [sp, #168]
 404:	ldr	x1, [sp, #112]
 408:	add	x1, x8, x1
 40c:	add	x1, x1, x7
 410:	ldr	x4, [sp, #136]
 414:	add	x3, x3, x10
 418:	add	x3, x3, x1
 41c:	add	x0, x0, x4
 420:	add	x2, x2, x1
 424:	add	x0, x0, x2
 428:	ror	x0, x0, #21
 42c:	ror	x2, x3, #44
 430:	add	x1, x2, x1
 434:	add	x0, x0, x1
 438:	str	x0, [sp, #192]
 43c:	add	x3, x4, x3
 440:	str	x3, [sp, #184]
 444:	str	x5, [sp, #160]
 448:	str	x7, [sp, #144]
 44c:	mov	x21, #0x80                  	// #128
 450:	ldr	x23, [sp, #48]
 454:	b	868 <_ZN4llvm12hash_combineIJjNS_9StringRefEEEENS_9hash_codeEDpRKT_+0x868>
 458:	mov	w2, #0x21f                 	// #543
 45c:	adrp	x1, 0 <_ZN4llvm12hash_combineIJjNS_9StringRefEEEENS_9hash_codeEDpRKT_>
 460:	add	x1, x1, #0x0
 464:	adrp	x0, 0 <_ZN4llvm12hash_combineIJjNS_9StringRefEEEENS_9hash_codeEDpRKT_>
 468:	add	x0, x0, #0x0
 46c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 470:	str	x23, [sp, #48]
 474:	mov	w2, #0x21f                 	// #543
 478:	adrp	x1, 0 <_ZN4llvm12hash_combineIJjNS_9StringRefEEEENS_9hash_codeEDpRKT_>
 47c:	add	x1, x1, #0x0
 480:	adrp	x0, 0 <_ZN4llvm12hash_combineIJjNS_9StringRefEEEENS_9hash_codeEDpRKT_>
 484:	add	x0, x0, #0x0
 488:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 48c:	add	x0, sp, #0x50
 490:	ldr	w0, [x0, x1]
 494:	eor	x0, x0, x5
 498:	ldr	w1, [sp, #80]
 49c:	add	x1, x4, x1, lsl #3
 4a0:	eor	x1, x1, x0
 4a4:	mov	x2, #0x2d69                	// #11625
 4a8:	movk	x2, #0xeb38, lsl #16
 4ac:	movk	x2, #0xea08, lsl #32
 4b0:	movk	x2, #0x9ddf, lsl #48
 4b4:	mul	x1, x1, x2
 4b8:	eor	x0, x0, x1
 4bc:	eor	x0, x0, x1, lsr #47
 4c0:	mul	x0, x0, x2
 4c4:	eor	x0, x0, x0, lsr #47
 4c8:	mul	x0, x0, x2
 4cc:	ldp	x19, x20, [sp, #16]
 4d0:	ldp	x21, x22, [sp, #32]
 4d4:	ldp	x29, x30, [sp], #208
 4d8:	ret
 4dc:	sub	x0, x4, #0x11
 4e0:	cmp	x0, #0xf
 4e4:	b.hi	5a8 <_ZN4llvm12hash_combineIJjNS_9StringRefEEEENS_9hash_codeEDpRKT_+0x5a8>  // b.pmore
 4e8:	ldr	x3, [sp, #80]
 4ec:	mov	x0, #0xf273                	// #62067
 4f0:	movk	x0, #0xbe98, lsl #16
 4f4:	movk	x0, #0xb66f, lsl #32
 4f8:	movk	x0, #0xb492, lsl #48
 4fc:	mul	x3, x3, x0
 500:	ldr	x6, [sp, #88]
 504:	add	x0, sp, #0x48
 508:	ldr	x2, [x0, x4]
 50c:	mov	x0, #0x404f                	// #16463
 510:	movk	x0, #0x2f90, lsl #16
 514:	movk	x0, #0x6a3b, lsl #32
 518:	movk	x0, #0x9ae1, lsl #48
 51c:	mul	x2, x2, x0
 520:	mov	x1, #0x6557                	// #25943
 524:	movk	x1, #0x509e, lsl #16
 528:	movk	x1, #0xd7c7, lsl #32
 52c:	movk	x1, #0xc949, lsl #48
 530:	eor	x1, x6, x1
 534:	ror	x1, x1, #20
 538:	add	x1, x1, x4
 53c:	add	x0, x5, x3
 540:	add	x1, x1, x0
 544:	sub	x1, x1, x2
 548:	add	x0, sp, #0x40
 54c:	ldr	x0, [x0, x4]
 550:	sub	x3, x3, x6
 554:	ror	x3, x3, #43
 558:	mov	x4, #0x3127                	// #12583
 55c:	movk	x4, #0x97cb, lsl #16
 560:	movk	x4, #0xc85c, lsl #32
 564:	movk	x4, #0xc3a5, lsl #48
 568:	madd	x0, x0, x4, x3
 56c:	eor	x2, x5, x2
 570:	ror	x2, x2, #30
 574:	add	x0, x0, x2
 578:	eor	x0, x0, x1
 57c:	mov	x2, #0x2d69                	// #11625
 580:	movk	x2, #0xeb38, lsl #16
 584:	movk	x2, #0xea08, lsl #32
 588:	movk	x2, #0x9ddf, lsl #48
 58c:	mul	x0, x0, x2
 590:	eor	x1, x1, x0
 594:	eor	x0, x1, x0, lsr #47
 598:	mul	x0, x0, x2
 59c:	eor	x0, x0, x0, lsr #47
 5a0:	mul	x0, x0, x2
 5a4:	b	4cc <_ZN4llvm12hash_combineIJjNS_9StringRefEEEENS_9hash_codeEDpRKT_+0x4cc>
 5a8:	cmp	x4, #0x20
 5ac:	b.ls	690 <_ZN4llvm12hash_combineIJjNS_9StringRefEEEENS_9hash_codeEDpRKT_+0x690>  // b.plast
 5b0:	ldr	x10, [sp, #104]
 5b4:	add	x0, sp, #0x40
 5b8:	ldr	x7, [x0, x4]
 5bc:	add	x3, x4, x7
 5c0:	mov	x0, #0x3127                	// #12583
 5c4:	movk	x0, #0x97cb, lsl #16
 5c8:	movk	x0, #0xc85c, lsl #32
 5cc:	movk	x0, #0xc3a5, lsl #48
 5d0:	ldr	x1, [sp, #80]
 5d4:	madd	x3, x3, x0, x1
 5d8:	ldr	x6, [sp, #88]
 5dc:	add	x6, x3, x6
 5e0:	ldr	x2, [sp, #96]
 5e4:	add	x9, x6, x2
 5e8:	add	x8, x10, x3
 5ec:	ror	x8, x8, #52
 5f0:	ror	x6, x6, #7
 5f4:	add	x6, x8, x6
 5f8:	ror	x3, x3, #37
 5fc:	ror	x1, x9, #31
 600:	add	x3, x3, x1
 604:	add	x3, x6, x3
 608:	add	x1, sp, #0x30
 60c:	ldr	x1, [x1, x4]
 610:	add	x2, x2, x1
 614:	add	x1, sp, #0x48
 618:	ldr	x6, [x1, x4]
 61c:	add	x1, sp, #0x38
 620:	ldr	x4, [x1, x4]
 624:	add	x4, x2, x4
 628:	add	x7, x7, x4
 62c:	add	x1, x2, x6
 630:	ror	x1, x1, #52
 634:	ror	x4, x4, #7
 638:	add	x1, x1, x4
 63c:	ror	x2, x2, #37
 640:	add	x2, x2, x10
 644:	add	x1, x1, x2
 648:	ror	x2, x7, #31
 64c:	add	x2, x2, x9
 650:	add	x1, x1, x2
 654:	mov	x4, #0x404f                	// #16463
 658:	movk	x4, #0x2f90, lsl #16
 65c:	movk	x4, #0x6a3b, lsl #32
 660:	movk	x4, #0x9ae1, lsl #48
 664:	add	x2, x6, x7
 668:	add	x2, x2, x3
 66c:	mul	x2, x2, x0
 670:	madd	x1, x1, x4, x2
 674:	eor	x1, x1, x1, lsr #47
 678:	mul	x0, x1, x0
 67c:	eor	x0, x0, x5
 680:	add	x0, x0, x3
 684:	eor	x0, x0, x0, lsr #47
 688:	mul	x0, x0, x4
 68c:	b	4cc <_ZN4llvm12hash_combineIJjNS_9StringRefEEEENS_9hash_codeEDpRKT_+0x4cc>
 690:	cbz	x4, 6f4 <_ZN4llvm12hash_combineIJjNS_9StringRefEEEENS_9hash_codeEDpRKT_+0x6f4>
 694:	add	x0, sp, #0xd0
 698:	add	x0, x0, x4, lsr #1
 69c:	ldurb	w3, [x0, #-128]
 6a0:	ldrb	w0, [sp, #80]
 6a4:	add	w3, w0, w3, lsl #8
 6a8:	mov	w3, w3
 6ac:	mov	x2, #0x404f                	// #16463
 6b0:	movk	x2, #0x2f90, lsl #16
 6b4:	movk	x2, #0x6a3b, lsl #32
 6b8:	movk	x2, #0x9ae1, lsl #48
 6bc:	mul	x3, x3, x2
 6c0:	add	x0, sp, #0x4f
 6c4:	ldrb	w0, [x0, x4]
 6c8:	add	w1, w4, w0, lsl #2
 6cc:	mov	x0, #0x6557                	// #25943
 6d0:	movk	x0, #0x509e, lsl #16
 6d4:	movk	x0, #0xd7c7, lsl #32
 6d8:	movk	x0, #0xc949, lsl #48
 6dc:	mul	x0, x1, x0
 6e0:	eor	x1, x3, x0
 6e4:	eor	x0, x1, x5
 6e8:	eor	x0, x0, x0, lsr #47
 6ec:	mul	x0, x0, x2
 6f0:	b	4cc <_ZN4llvm12hash_combineIJjNS_9StringRefEEEENS_9hash_codeEDpRKT_+0x4cc>
 6f4:	mov	x1, #0x404f                	// #16463
 6f8:	movk	x1, #0x2f90, lsl #16
 6fc:	movk	x1, #0x6a3b, lsl #32
 700:	movk	x1, #0x9ae1, lsl #48
 704:	eor	x0, x5, x1
 708:	b	4cc <_ZN4llvm12hash_combineIJjNS_9StringRefEEEENS_9hash_codeEDpRKT_+0x4cc>
 70c:	ldr	x0, [sp, #64]
 710:	add	x19, sp, #0x90
 714:	sub	x19, x19, x0
 718:	mov	x2, x19
 71c:	add	x1, sp, #0x48
 720:	bl	0 <memcpy>
 724:	ldr	x3, [sp, #200]
 728:	mov	x10, #0xf273                	// #62067
 72c:	movk	x10, #0xbe98, lsl #16
 730:	movk	x10, #0xb66f, lsl #32
 734:	movk	x10, #0xb492, lsl #48
 738:	eor	x7, x3, x10
 73c:	mov	x0, #0x2d69                	// #11625
 740:	movk	x0, #0xeb38, lsl #16
 744:	movk	x0, #0xea08, lsl #32
 748:	movk	x0, #0x9ddf, lsl #48
 74c:	mul	x1, x7, x0
 750:	eor	x1, x1, x1, lsr #47
 754:	eor	x1, x1, x10
 758:	mul	x1, x1, x0
 75c:	eor	x1, x1, x1, lsr #47
 760:	ror	x7, x7, #49
 764:	mul	x11, x3, x10
 768:	eor	x9, x3, x3, lsr #47
 76c:	eor	x4, x11, x9
 770:	mul	x4, x4, x0
 774:	eor	x2, x9, x4
 778:	eor	x4, x2, x4, lsr #47
 77c:	mul	x4, x4, x0
 780:	eor	x4, x4, x4, lsr #47
 784:	mul	x4, x4, x0
 788:	ldr	x2, [sp, #88]
 78c:	ldr	x8, [sp, #128]
 790:	add	x6, x3, x2
 794:	add	x6, x6, x7
 798:	ror	x6, x6, #37
 79c:	mul	x6, x6, x10
 7a0:	eor	x6, x6, x4
 7a4:	ldr	x12, [sp, #120]
 7a8:	add	x5, x3, x8
 7ac:	add	x5, x5, x11
 7b0:	ror	x5, x5, #42
 7b4:	add	x7, x7, x12
 7b8:	madd	x7, x5, x10, x7
 7bc:	madd	x0, x1, x0, x9
 7c0:	ror	x0, x0, #33
 7c4:	mul	x0, x0, x10
 7c8:	mov	x5, #0x9fa9                	// #40873
 7cc:	movk	x5, #0x822d, lsl #16
 7d0:	movk	x5, #0x26fd, lsl #32
 7d4:	movk	x5, #0x9271, lsl #48
 7d8:	ldr	x1, [sp, #80]
 7dc:	madd	x3, x3, x5, x1
 7e0:	ldr	x11, [sp, #104]
 7e4:	ldr	x5, [sp, #96]
 7e8:	add	x2, x2, x5
 7ec:	add	x2, x2, x3
 7f0:	ldr	x1, [sp, #112]
 7f4:	add	x4, x4, x1
 7f8:	add	x4, x4, x0
 7fc:	ldr	x10, [sp, #136]
 800:	add	x1, x8, x12
 804:	add	x1, x1, x4
 808:	str	x0, [sp, #144]
 80c:	str	x7, [sp, #152]
 810:	str	x6, [sp, #160]
 814:	add	x0, x11, x2
 818:	str	x0, [sp, #168]
 81c:	add	x0, x6, x11
 820:	add	x9, x9, x3
 824:	add	x0, x0, x9
 828:	ror	x0, x0, #21
 82c:	ror	x2, x2, #44
 830:	add	x2, x2, x3
 834:	add	x2, x0, x2
 838:	str	x2, [sp, #176]
 83c:	add	x0, x10, x1
 840:	str	x0, [sp, #184]
 844:	add	x5, x5, x10
 848:	add	x7, x7, x4
 84c:	add	x5, x5, x7
 850:	ror	x5, x5, #21
 854:	ror	x1, x1, #44
 858:	add	x1, x1, x4
 85c:	add	x1, x5, x1
 860:	str	x1, [sp, #192]
 864:	mov	x21, #0x40                  	// #64
 868:	add	x1, sp, #0x50
 86c:	str	x1, [sp, #64]
 870:	mov	x3, x19
 874:	add	x2, sp, #0x48
 878:	add	x1, sp, #0x90
 87c:	add	x0, sp, #0x40
 880:	bl	0 <_ZN4llvm12hash_combineIJjNS_9StringRefEEEENS_9hash_codeEDpRKT_>
 884:	and	w0, w0, #0xff
 888:	cbz	w0, 470 <_ZN4llvm12hash_combineIJjNS_9StringRefEEEENS_9hash_codeEDpRKT_+0x470>
 88c:	ldr	x20, [sp, #64]
 890:	add	x19, sp, #0x50
 894:	mov	w3, #0x0                   	// #0
 898:	add	x2, sp, #0x90
 89c:	mov	x1, x20
 8a0:	mov	x0, x19
 8a4:	bl	0 <_ZN4llvm12hash_combineIJjNS_9StringRefEEEENS_9hash_codeEDpRKT_>
 8a8:	ldr	x3, [sp, #152]
 8ac:	ldr	x7, [sp, #168]
 8b0:	ldr	x11, [sp, #88]
 8b4:	ldr	x12, [sp, #176]
 8b8:	ldr	x1, [sp, #128]
 8bc:	ldr	x4, [sp, #192]
 8c0:	ldr	x0, [sp, #144]
 8c4:	add	x0, x3, x0
 8c8:	add	x2, x7, x11
 8cc:	add	x0, x0, x2
 8d0:	ror	x0, x0, #37
 8d4:	mov	x5, #0xf273                	// #62067
 8d8:	movk	x5, #0xbe98, lsl #16
 8dc:	movk	x5, #0xb66f, lsl #32
 8e0:	movk	x5, #0xb492, lsl #48
 8e4:	mul	x0, x0, x5
 8e8:	eor	x6, x0, x4
 8ec:	ldr	x0, [sp, #120]
 8f0:	add	x3, x3, x12
 8f4:	add	x3, x3, x1
 8f8:	ror	x3, x3, #42
 8fc:	add	x7, x7, x0
 900:	madd	x7, x3, x5, x7
 904:	ldr	x3, [sp, #184]
 908:	ldr	x9, [sp, #160]
 90c:	add	x9, x3, x9
 910:	ror	x9, x9, #33
 914:	mul	x9, x9, x5
 918:	ldr	x2, [sp, #80]
 91c:	madd	x12, x12, x5, x2
 920:	ldr	x13, [sp, #104]
 924:	ldr	x8, [sp, #96]
 928:	add	x11, x11, x8
 92c:	add	x11, x11, x12
 930:	ldr	x2, [sp, #112]
 934:	add	x4, x4, x2
 938:	add	x4, x4, x9
 93c:	ldr	x10, [sp, #136]
 940:	add	x1, x1, x0
 944:	add	x1, x1, x4
 948:	add	x0, x7, x4
 94c:	add	x8, x8, x10
 950:	add	x0, x0, x8
 954:	ror	x0, x0, #21
 958:	ror	x2, x1, #44
 95c:	add	x4, x2, x4
 960:	add	x4, x0, x4
 964:	add	x10, x10, x1
 968:	sub	x19, x20, x19
 96c:	add	x0, x19, x21
 970:	add	x1, x13, x11
 974:	eor	x1, x1, x10
 978:	mov	x8, #0x2d69                	// #11625
 97c:	movk	x8, #0xeb38, lsl #16
 980:	movk	x8, #0xea08, lsl #32
 984:	movk	x8, #0x9ddf, lsl #48
 988:	mul	x1, x1, x8
 98c:	eor	x10, x1, x10
 990:	eor	x1, x10, x1, lsr #47
 994:	mul	x1, x1, x8
 998:	eor	x1, x1, x1, lsr #47
 99c:	add	x3, x3, x13
 9a0:	add	x2, x6, x12
 9a4:	add	x2, x3, x2
 9a8:	ror	x2, x2, #21
 9ac:	ror	x3, x11, #44
 9b0:	add	x3, x3, x12
 9b4:	add	x2, x2, x3
 9b8:	eor	x2, x2, x4
 9bc:	mul	x2, x2, x8
 9c0:	eor	x4, x2, x4
 9c4:	eor	x2, x4, x2, lsr #47
 9c8:	mul	x2, x2, x8
 9cc:	eor	x2, x2, x2, lsr #47
 9d0:	eor	x0, x0, x0, lsr #47
 9d4:	madd	x2, x2, x8, x9
 9d8:	madd	x2, x0, x5, x2
 9dc:	eor	x3, x7, x7, lsr #47
 9e0:	madd	x0, x3, x5, x6
 9e4:	madd	x1, x1, x8, x0
 9e8:	eor	x1, x1, x2
 9ec:	mul	x1, x1, x8
 9f0:	eor	x0, x2, x1
 9f4:	eor	x0, x0, x1, lsr #47
 9f8:	mul	x0, x0, x8
 9fc:	eor	x0, x0, x0, lsr #47
 a00:	mul	x0, x0, x8
 a04:	b	4cc <_ZN4llvm12hash_combineIJjNS_9StringRefEEEENS_9hash_codeEDpRKT_+0x4cc>
 a08:	ldr	x20, [sp, #64]
 a0c:	mov	x21, #0x40                  	// #64
 a10:	ldr	x23, [sp, #48]
 a14:	b	890 <_ZN4llvm12hash_combineIJjNS_9StringRefEEEENS_9hash_codeEDpRKT_+0x890>

Disassembly of section .text._ZN4llvm12hash_combineIJjjNS_9StringRefEEEENS_9hash_codeEDpRKT_:

0000000000000000 <_ZN4llvm12hash_combineIJjjNS_9StringRefEEEENS_9hash_codeEDpRKT_>:
   0:	stp	x29, x30, [sp, #-208]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x21, x0
  14:	mov	x19, x1
  18:	mov	x20, x2
  1c:	stp	xzr, xzr, [sp, #80]
  20:	stp	xzr, xzr, [sp, #96]
  24:	stp	xzr, xzr, [sp, #112]
  28:	stp	xzr, xzr, [sp, #128]
  2c:	str	xzr, [sp, #144]
  30:	str	xzr, [sp, #152]
  34:	str	xzr, [sp, #160]
  38:	str	xzr, [sp, #168]
  3c:	str	xzr, [sp, #176]
  40:	str	xzr, [sp, #184]
  44:	str	xzr, [sp, #192]
  48:	adrp	x3, 0 <_ZN4llvm12hash_combineIJjjNS_9StringRefEEEENS_9hash_codeEDpRKT_>
  4c:	ldr	x3, [x3]
  50:	ldarb	w0, [x3]
  54:	tbz	w0, #0, 15c <_ZN4llvm12hash_combineIJjjNS_9StringRefEEEENS_9hash_codeEDpRKT_+0x15c>
  58:	adrp	x3, 0 <_ZN4llvm12hash_combineIJjjNS_9StringRefEEEENS_9hash_codeEDpRKT_>
  5c:	ldr	x3, [x3]
  60:	ldr	x0, [x3]
  64:	str	x0, [sp, #200]
  68:	ldr	w0, [x21]
  6c:	add	x1, sp, #0x50
  70:	str	x1, [sp, #72]
  74:	str	w0, [sp, #64]
  78:	mov	x3, #0x0                   	// #0
  7c:	add	x2, sp, #0x40
  80:	add	x1, sp, #0x90
  84:	add	x0, sp, #0x48
  88:	bl	0 <_ZN4llvm12hash_combineIJjjNS_9StringRefEEEENS_9hash_codeEDpRKT_>
  8c:	and	w0, w0, #0xff
  90:	cbz	w0, 1ac <_ZN4llvm12hash_combineIJjjNS_9StringRefEEEENS_9hash_codeEDpRKT_+0x1ac>
  94:	ldr	w0, [x19]
  98:	str	w0, [sp, #64]
  9c:	mov	x3, #0x0                   	// #0
  a0:	add	x2, sp, #0x40
  a4:	add	x1, sp, #0x90
  a8:	add	x0, sp, #0x48
  ac:	bl	0 <_ZN4llvm12hash_combineIJjjNS_9StringRefEEEENS_9hash_codeEDpRKT_>
  b0:	and	w0, w0, #0xff
  b4:	cbz	w0, 74c <_ZN4llvm12hash_combineIJjjNS_9StringRefEEEENS_9hash_codeEDpRKT_+0x74c>
  b8:	ldr	x19, [sp, #72]
  bc:	ldp	x0, x1, [x20]
  c0:	bl	0 <_ZN4llvm10hash_valueENS_9StringRefE>
  c4:	str	x19, [sp, #64]
  c8:	str	x0, [sp, #72]
  cc:	mov	x3, #0x0                   	// #0
  d0:	add	x2, sp, #0x48
  d4:	add	x1, sp, #0x90
  d8:	add	x0, sp, #0x40
  dc:	bl	0 <_ZN4llvm12hash_combineIJjjNS_9StringRefEEEENS_9hash_codeEDpRKT_>
  e0:	and	w0, w0, #0xff
  e4:	mov	x21, #0x0                   	// #0
  e8:	cbz	w0, bb8 <_ZN4llvm12hash_combineIJjjNS_9StringRefEEEENS_9hash_codeEDpRKT_+0xbb8>
  ec:	ldr	x20, [sp, #64]
  f0:	cbnz	x21, a40 <_ZN4llvm12hash_combineIJjjNS_9StringRefEEEENS_9hash_codeEDpRKT_+0xa40>
  f4:	add	x1, sp, #0x50
  f8:	sub	x4, x20, x1
  fc:	ldr	x5, [sp, #200]
 100:	sub	x1, x4, #0x4
 104:	cmp	x1, #0x4
 108:	b.hi	4c4 <_ZN4llvm12hash_combineIJjjNS_9StringRefEEEENS_9hash_codeEDpRKT_+0x4c4>  // b.pmore
 10c:	add	x0, sp, #0x50
 110:	ldr	w0, [x0, x1]
 114:	eor	x0, x0, x5
 118:	ldr	w1, [sp, #80]
 11c:	add	x1, x4, x1, lsl #3
 120:	eor	x1, x1, x0
 124:	mov	x2, #0x2d69                	// #11625
 128:	movk	x2, #0xeb38, lsl #16
 12c:	movk	x2, #0xea08, lsl #32
 130:	movk	x2, #0x9ddf, lsl #48
 134:	mul	x1, x1, x2
 138:	eor	x0, x0, x1
 13c:	eor	x0, x0, x1, lsr #47
 140:	mul	x0, x0, x2
 144:	eor	x0, x0, x0, lsr #47
 148:	mul	x0, x0, x2
 14c:	ldp	x19, x20, [sp, #16]
 150:	ldp	x21, x22, [sp, #32]
 154:	ldp	x29, x30, [sp], #208
 158:	ret
 15c:	adrp	x0, 0 <_ZN4llvm12hash_combineIJjjNS_9StringRefEEEENS_9hash_codeEDpRKT_>
 160:	ldr	x0, [x0]
 164:	bl	0 <__cxa_guard_acquire>
 168:	cbz	w0, 58 <_ZN4llvm12hash_combineIJjjNS_9StringRefEEEENS_9hash_codeEDpRKT_+0x58>
 16c:	adrp	x0, 0 <_ZN4llvm7hashing6detail19fixed_seed_overrideE>
 170:	ldr	x0, [x0]
 174:	ldr	x0, [x0]
 178:	cmp	x0, #0x0
 17c:	mov	x1, #0x8ccd                	// #36045
 180:	movk	x1, #0xed55, lsl #16
 184:	movk	x1, #0xafd7, lsl #32
 188:	movk	x1, #0xff51, lsl #48
 18c:	csel	x0, x0, x1, ne  // ne = any
 190:	adrp	x1, 0 <_ZN4llvm12hash_combineIJjjNS_9StringRefEEEENS_9hash_codeEDpRKT_>
 194:	ldr	x1, [x1]
 198:	str	x0, [x1]
 19c:	adrp	x0, 0 <_ZN4llvm12hash_combineIJjjNS_9StringRefEEEENS_9hash_codeEDpRKT_>
 1a0:	ldr	x0, [x0]
 1a4:	bl	0 <__cxa_guard_release>
 1a8:	b	58 <_ZN4llvm12hash_combineIJjjNS_9StringRefEEEENS_9hash_codeEDpRKT_+0x58>
 1ac:	stp	x23, x24, [sp, #48]
 1b0:	ldr	x0, [sp, #72]
 1b4:	add	x24, sp, #0x50
 1b8:	add	x22, sp, #0x90
 1bc:	sub	x23, x22, x0
 1c0:	add	x21, sp, #0x40
 1c4:	mov	x2, x23
 1c8:	mov	x1, x21
 1cc:	bl	0 <memcpy>
 1d0:	ldr	x8, [sp, #200]
 1d4:	mov	x9, #0xf273                	// #62067
 1d8:	movk	x9, #0xbe98, lsl #16
 1dc:	movk	x9, #0xb66f, lsl #32
 1e0:	movk	x9, #0xb492, lsl #48
 1e4:	eor	x3, x8, x9
 1e8:	mov	x10, #0x2d69                	// #11625
 1ec:	movk	x10, #0xeb38, lsl #16
 1f0:	movk	x10, #0xea08, lsl #32
 1f4:	movk	x10, #0x9ddf, lsl #48
 1f8:	mul	x0, x3, x10
 1fc:	eor	x0, x0, x0, lsr #47
 200:	eor	x0, x0, x9
 204:	mul	x0, x0, x10
 208:	eor	x4, x0, x0, lsr #47
 20c:	ror	x3, x3, #49
 210:	mul	x2, x8, x9
 214:	eor	x7, x8, x8, lsr #47
 218:	eor	x0, x2, x7
 21c:	mul	x0, x0, x10
 220:	eor	x1, x7, x0
 224:	eor	x0, x1, x0, lsr #47
 228:	mul	x0, x0, x10
 22c:	eor	x0, x0, x0, lsr #47
 230:	mul	x6, x0, x10
 234:	ldr	x11, [sp, #88]
 238:	ldr	x1, [sp, #128]
 23c:	add	x5, x8, x11
 240:	add	x5, x5, x3
 244:	ror	x5, x5, #37
 248:	mul	x5, x5, x9
 24c:	eor	x0, x5, x6
 250:	ldr	x12, [sp, #120]
 254:	add	x5, x8, x1
 258:	add	x5, x5, x2
 25c:	ror	x5, x5, #42
 260:	add	x3, x3, x12
 264:	madd	x5, x5, x9, x3
 268:	madd	x4, x4, x10, x7
 26c:	ror	x4, x4, #33
 270:	mul	x4, x4, x9
 274:	mov	x3, #0x9fa9                	// #40873
 278:	movk	x3, #0x822d, lsl #16
 27c:	movk	x3, #0x26fd, lsl #32
 280:	movk	x3, #0x9271, lsl #48
 284:	ldr	x2, [sp, #80]
 288:	madd	x8, x8, x3, x2
 28c:	ldr	x3, [sp, #104]
 290:	ldr	x9, [sp, #96]
 294:	add	x2, x11, x9
 298:	add	x2, x2, x8
 29c:	ldr	x10, [sp, #112]
 2a0:	add	x6, x6, x10
 2a4:	add	x6, x6, x4
 2a8:	ldr	x10, [sp, #136]
 2ac:	add	x1, x1, x12
 2b0:	add	x1, x1, x6
 2b4:	str	x4, [sp, #144]
 2b8:	str	x5, [sp, #152]
 2bc:	str	x0, [sp, #160]
 2c0:	add	x4, x3, x2
 2c4:	str	x4, [sp, #168]
 2c8:	add	x3, x0, x3
 2cc:	add	x0, x7, x8
 2d0:	add	x3, x3, x0
 2d4:	ror	x3, x3, #21
 2d8:	ror	x2, x2, #44
 2dc:	add	x2, x2, x8
 2e0:	add	x3, x3, x2
 2e4:	str	x3, [sp, #176]
 2e8:	add	x0, x10, x1
 2ec:	str	x0, [sp, #184]
 2f0:	add	x2, x9, x10
 2f4:	add	x5, x5, x6
 2f8:	add	x2, x2, x5
 2fc:	ror	x2, x2, #21
 300:	ror	x1, x1, #44
 304:	add	x1, x1, x6
 308:	add	x1, x2, x1
 30c:	str	x1, [sp, #192]
 310:	str	x24, [sp, #72]
 314:	mov	x3, x23
 318:	mov	x2, x21
 31c:	mov	x1, x22
 320:	add	x0, sp, #0x48
 324:	bl	0 <_ZN4llvm12hash_combineIJjjNS_9StringRefEEEENS_9hash_codeEDpRKT_>
 328:	and	w0, w0, #0xff
 32c:	cbz	w0, 474 <_ZN4llvm12hash_combineIJjjNS_9StringRefEEEENS_9hash_codeEDpRKT_+0x474>
 330:	ldr	w0, [x19]
 334:	str	w0, [sp, #64]
 338:	mov	x3, #0x0                   	// #0
 33c:	add	x2, sp, #0x40
 340:	add	x1, sp, #0x90
 344:	add	x0, sp, #0x48
 348:	bl	0 <_ZN4llvm12hash_combineIJjjNS_9StringRefEEEENS_9hash_codeEDpRKT_>
 34c:	and	w0, w0, #0xff
 350:	cbnz	w0, d3c <_ZN4llvm12hash_combineIJjjNS_9StringRefEEEENS_9hash_codeEDpRKT_+0xd3c>
 354:	ldr	x0, [sp, #72]
 358:	add	x19, sp, #0x90
 35c:	sub	x19, x19, x0
 360:	mov	x2, x19
 364:	add	x1, sp, #0x40
 368:	bl	0 <memcpy>
 36c:	ldr	x2, [sp, #152]
 370:	ldr	x1, [sp, #168]
 374:	ldr	x4, [sp, #88]
 378:	ldr	x5, [sp, #176]
 37c:	ldr	x3, [sp, #128]
 380:	ldr	x8, [sp, #192]
 384:	ldr	x0, [sp, #144]
 388:	add	x0, x2, x0
 38c:	add	x6, x1, x4
 390:	add	x0, x0, x6
 394:	ror	x0, x0, #37
 398:	mov	x9, #0xf273                	// #62067
 39c:	movk	x9, #0xbe98, lsl #16
 3a0:	movk	x9, #0xb66f, lsl #32
 3a4:	movk	x9, #0xb492, lsl #48
 3a8:	mul	x0, x0, x9
 3ac:	eor	x7, x0, x8
 3b0:	ldr	x10, [sp, #120]
 3b4:	add	x2, x2, x5
 3b8:	add	x2, x2, x3
 3bc:	ror	x2, x2, #42
 3c0:	add	x1, x1, x10
 3c4:	madd	x2, x2, x9, x1
 3c8:	str	x2, [sp, #152]
 3cc:	ldr	x1, [sp, #184]
 3d0:	ldr	x6, [sp, #160]
 3d4:	add	x6, x1, x6
 3d8:	ror	x6, x6, #33
 3dc:	mul	x6, x6, x9
 3e0:	ldr	x0, [sp, #80]
 3e4:	madd	x5, x5, x9, x0
 3e8:	ldr	x9, [sp, #104]
 3ec:	ldr	x0, [sp, #96]
 3f0:	add	x4, x4, x0
 3f4:	add	x4, x4, x5
 3f8:	add	x1, x1, x9
 3fc:	add	x11, x7, x5
 400:	add	x1, x1, x11
 404:	ror	x1, x1, #21
 408:	ror	x11, x4, #44
 40c:	add	x5, x11, x5
 410:	add	x1, x1, x5
 414:	str	x1, [sp, #176]
 418:	add	x4, x9, x4
 41c:	str	x4, [sp, #168]
 420:	ldr	x1, [sp, #112]
 424:	add	x1, x8, x1
 428:	add	x1, x1, x6
 42c:	ldr	x4, [sp, #136]
 430:	add	x3, x3, x10
 434:	add	x3, x3, x1
 438:	add	x0, x0, x4
 43c:	add	x2, x2, x1
 440:	add	x0, x0, x2
 444:	ror	x0, x0, #21
 448:	ror	x2, x3, #44
 44c:	add	x1, x2, x1
 450:	add	x0, x0, x1
 454:	str	x0, [sp, #192]
 458:	add	x3, x4, x3
 45c:	str	x3, [sp, #184]
 460:	str	x7, [sp, #160]
 464:	str	x6, [sp, #144]
 468:	mov	x21, #0x80                  	// #128
 46c:	ldp	x23, x24, [sp, #48]
 470:	b	8a8 <_ZN4llvm12hash_combineIJjjNS_9StringRefEEEENS_9hash_codeEDpRKT_+0x8a8>
 474:	mov	w2, #0x21f                 	// #543
 478:	adrp	x1, 0 <_ZN4llvm12hash_combineIJjjNS_9StringRefEEEENS_9hash_codeEDpRKT_>
 47c:	add	x1, x1, #0x0
 480:	adrp	x0, 0 <_ZN4llvm12hash_combineIJjjNS_9StringRefEEEENS_9hash_codeEDpRKT_>
 484:	add	x0, x0, #0x0
 488:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 48c:	stp	x23, x24, [sp, #48]
 490:	mov	w2, #0x21f                 	// #543
 494:	adrp	x1, 0 <_ZN4llvm12hash_combineIJjjNS_9StringRefEEEENS_9hash_codeEDpRKT_>
 498:	add	x1, x1, #0x0
 49c:	adrp	x0, 0 <_ZN4llvm12hash_combineIJjjNS_9StringRefEEEENS_9hash_codeEDpRKT_>
 4a0:	add	x0, x0, #0x0
 4a4:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 4a8:	stp	x23, x24, [sp, #48]
 4ac:	mov	w2, #0x21f                 	// #543
 4b0:	adrp	x1, 0 <_ZN4llvm12hash_combineIJjjNS_9StringRefEEEENS_9hash_codeEDpRKT_>
 4b4:	add	x1, x1, #0x0
 4b8:	adrp	x0, 0 <_ZN4llvm12hash_combineIJjjNS_9StringRefEEEENS_9hash_codeEDpRKT_>
 4bc:	add	x0, x0, #0x0
 4c0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 4c4:	sub	x0, x4, #0x9
 4c8:	cmp	x0, #0x7
 4cc:	b.hi	51c <_ZN4llvm12hash_combineIJjjNS_9StringRefEEEENS_9hash_codeEDpRKT_+0x51c>  // b.pmore
 4d0:	add	x0, sp, #0x48
 4d4:	ldr	x3, [x0, x4]
 4d8:	add	x1, x4, x3
 4dc:	ror	x1, x1, x4
 4e0:	ldr	x2, [sp, #80]
 4e4:	eor	x2, x5, x2
 4e8:	eor	x2, x2, x1
 4ec:	mov	x0, #0x2d69                	// #11625
 4f0:	movk	x0, #0xeb38, lsl #16
 4f4:	movk	x0, #0xea08, lsl #32
 4f8:	movk	x0, #0x9ddf, lsl #48
 4fc:	mul	x2, x2, x0
 500:	eor	x1, x1, x2
 504:	eor	x1, x1, x2, lsr #47
 508:	mul	x1, x1, x0
 50c:	eor	x1, x1, x1, lsr #47
 510:	mul	x0, x1, x0
 514:	eor	x0, x0, x3
 518:	b	14c <_ZN4llvm12hash_combineIJjjNS_9StringRefEEEENS_9hash_codeEDpRKT_+0x14c>
 51c:	sub	x0, x4, #0x11
 520:	cmp	x0, #0xf
 524:	b.hi	5e8 <_ZN4llvm12hash_combineIJjjNS_9StringRefEEEENS_9hash_codeEDpRKT_+0x5e8>  // b.pmore
 528:	ldr	x3, [sp, #80]
 52c:	mov	x0, #0xf273                	// #62067
 530:	movk	x0, #0xbe98, lsl #16
 534:	movk	x0, #0xb66f, lsl #32
 538:	movk	x0, #0xb492, lsl #48
 53c:	mul	x3, x3, x0
 540:	ldr	x6, [sp, #88]
 544:	add	x0, sp, #0x48
 548:	ldr	x2, [x0, x4]
 54c:	mov	x0, #0x404f                	// #16463
 550:	movk	x0, #0x2f90, lsl #16
 554:	movk	x0, #0x6a3b, lsl #32
 558:	movk	x0, #0x9ae1, lsl #48
 55c:	mul	x2, x2, x0
 560:	mov	x1, #0x6557                	// #25943
 564:	movk	x1, #0x509e, lsl #16
 568:	movk	x1, #0xd7c7, lsl #32
 56c:	movk	x1, #0xc949, lsl #48
 570:	eor	x1, x6, x1
 574:	ror	x1, x1, #20
 578:	add	x1, x1, x4
 57c:	add	x0, x5, x3
 580:	add	x1, x1, x0
 584:	sub	x1, x1, x2
 588:	add	x0, sp, #0x40
 58c:	ldr	x0, [x0, x4]
 590:	sub	x3, x3, x6
 594:	ror	x3, x3, #43
 598:	mov	x4, #0x3127                	// #12583
 59c:	movk	x4, #0x97cb, lsl #16
 5a0:	movk	x4, #0xc85c, lsl #32
 5a4:	movk	x4, #0xc3a5, lsl #48
 5a8:	madd	x0, x0, x4, x3
 5ac:	eor	x2, x5, x2
 5b0:	ror	x2, x2, #30
 5b4:	add	x0, x0, x2
 5b8:	eor	x0, x0, x1
 5bc:	mov	x2, #0x2d69                	// #11625
 5c0:	movk	x2, #0xeb38, lsl #16
 5c4:	movk	x2, #0xea08, lsl #32
 5c8:	movk	x2, #0x9ddf, lsl #48
 5cc:	mul	x0, x0, x2
 5d0:	eor	x1, x1, x0
 5d4:	eor	x0, x1, x0, lsr #47
 5d8:	mul	x0, x0, x2
 5dc:	eor	x0, x0, x0, lsr #47
 5e0:	mul	x0, x0, x2
 5e4:	b	14c <_ZN4llvm12hash_combineIJjjNS_9StringRefEEEENS_9hash_codeEDpRKT_+0x14c>
 5e8:	cmp	x4, #0x20
 5ec:	b.ls	6d0 <_ZN4llvm12hash_combineIJjjNS_9StringRefEEEENS_9hash_codeEDpRKT_+0x6d0>  // b.plast
 5f0:	ldr	x10, [sp, #104]
 5f4:	add	x0, sp, #0x40
 5f8:	ldr	x7, [x0, x4]
 5fc:	add	x3, x4, x7
 600:	mov	x0, #0x3127                	// #12583
 604:	movk	x0, #0x97cb, lsl #16
 608:	movk	x0, #0xc85c, lsl #32
 60c:	movk	x0, #0xc3a5, lsl #48
 610:	ldr	x1, [sp, #80]
 614:	madd	x3, x3, x0, x1
 618:	ldr	x6, [sp, #88]
 61c:	add	x6, x3, x6
 620:	ldr	x2, [sp, #96]
 624:	add	x9, x6, x2
 628:	add	x8, x10, x3
 62c:	ror	x8, x8, #52
 630:	ror	x6, x6, #7
 634:	add	x6, x8, x6
 638:	ror	x3, x3, #37
 63c:	ror	x1, x9, #31
 640:	add	x3, x3, x1
 644:	add	x3, x6, x3
 648:	add	x1, sp, #0x30
 64c:	ldr	x1, [x1, x4]
 650:	add	x2, x2, x1
 654:	add	x1, sp, #0x48
 658:	ldr	x6, [x1, x4]
 65c:	add	x1, sp, #0x38
 660:	ldr	x4, [x1, x4]
 664:	add	x4, x2, x4
 668:	add	x7, x7, x4
 66c:	add	x1, x2, x6
 670:	ror	x1, x1, #52
 674:	ror	x4, x4, #7
 678:	add	x1, x1, x4
 67c:	ror	x2, x2, #37
 680:	add	x2, x2, x10
 684:	add	x1, x1, x2
 688:	ror	x2, x7, #31
 68c:	add	x2, x2, x9
 690:	add	x1, x1, x2
 694:	mov	x4, #0x404f                	// #16463
 698:	movk	x4, #0x2f90, lsl #16
 69c:	movk	x4, #0x6a3b, lsl #32
 6a0:	movk	x4, #0x9ae1, lsl #48
 6a4:	add	x2, x6, x7
 6a8:	add	x2, x2, x3
 6ac:	mul	x2, x2, x0
 6b0:	madd	x1, x1, x4, x2
 6b4:	eor	x1, x1, x1, lsr #47
 6b8:	mul	x0, x1, x0
 6bc:	eor	x0, x0, x5
 6c0:	add	x0, x0, x3
 6c4:	eor	x0, x0, x0, lsr #47
 6c8:	mul	x0, x0, x4
 6cc:	b	14c <_ZN4llvm12hash_combineIJjjNS_9StringRefEEEENS_9hash_codeEDpRKT_+0x14c>
 6d0:	cbz	x4, 734 <_ZN4llvm12hash_combineIJjjNS_9StringRefEEEENS_9hash_codeEDpRKT_+0x734>
 6d4:	add	x0, sp, #0xd0
 6d8:	add	x0, x0, x4, lsr #1
 6dc:	ldurb	w3, [x0, #-128]
 6e0:	ldrb	w0, [sp, #80]
 6e4:	add	w3, w0, w3, lsl #8
 6e8:	mov	w3, w3
 6ec:	mov	x2, #0x404f                	// #16463
 6f0:	movk	x2, #0x2f90, lsl #16
 6f4:	movk	x2, #0x6a3b, lsl #32
 6f8:	movk	x2, #0x9ae1, lsl #48
 6fc:	mul	x3, x3, x2
 700:	add	x0, sp, #0x4f
 704:	ldrb	w0, [x0, x4]
 708:	add	w1, w4, w0, lsl #2
 70c:	mov	x0, #0x6557                	// #25943
 710:	movk	x0, #0x509e, lsl #16
 714:	movk	x0, #0xd7c7, lsl #32
 718:	movk	x0, #0xc949, lsl #48
 71c:	mul	x0, x1, x0
 720:	eor	x1, x3, x0
 724:	eor	x0, x1, x5
 728:	eor	x0, x0, x0, lsr #47
 72c:	mul	x0, x0, x2
 730:	b	14c <_ZN4llvm12hash_combineIJjjNS_9StringRefEEEENS_9hash_codeEDpRKT_+0x14c>
 734:	mov	x1, #0x404f                	// #16463
 738:	movk	x1, #0x2f90, lsl #16
 73c:	movk	x1, #0x6a3b, lsl #32
 740:	movk	x1, #0x9ae1, lsl #48
 744:	eor	x0, x5, x1
 748:	b	14c <_ZN4llvm12hash_combineIJjjNS_9StringRefEEEENS_9hash_codeEDpRKT_+0x14c>
 74c:	ldr	x0, [sp, #72]
 750:	add	x19, sp, #0x90
 754:	sub	x19, x19, x0
 758:	mov	x2, x19
 75c:	add	x1, sp, #0x40
 760:	bl	0 <memcpy>
 764:	ldr	x3, [sp, #200]
 768:	mov	x9, #0xf273                	// #62067
 76c:	movk	x9, #0xbe98, lsl #16
 770:	movk	x9, #0xb66f, lsl #32
 774:	movk	x9, #0xb492, lsl #48
 778:	eor	x8, x3, x9
 77c:	mov	x0, #0x2d69                	// #11625
 780:	movk	x0, #0xeb38, lsl #16
 784:	movk	x0, #0xea08, lsl #32
 788:	movk	x0, #0x9ddf, lsl #48
 78c:	mul	x1, x8, x0
 790:	eor	x1, x1, x1, lsr #47
 794:	eor	x1, x1, x9
 798:	mul	x1, x1, x0
 79c:	eor	x1, x1, x1, lsr #47
 7a0:	ror	x8, x8, #49
 7a4:	mul	x11, x3, x9
 7a8:	eor	x7, x3, x3, lsr #47
 7ac:	eor	x4, x11, x7
 7b0:	mul	x4, x4, x0
 7b4:	eor	x2, x7, x4
 7b8:	eor	x4, x2, x4, lsr #47
 7bc:	mul	x4, x4, x0
 7c0:	eor	x4, x4, x4, lsr #47
 7c4:	mul	x4, x4, x0
 7c8:	ldr	x2, [sp, #88]
 7cc:	ldr	x10, [sp, #128]
 7d0:	add	x6, x3, x2
 7d4:	add	x6, x6, x8
 7d8:	ror	x6, x6, #37
 7dc:	mul	x6, x6, x9
 7e0:	eor	x6, x6, x4
 7e4:	ldr	x12, [sp, #120]
 7e8:	add	x5, x3, x10
 7ec:	add	x5, x5, x11
 7f0:	ror	x5, x5, #42
 7f4:	add	x8, x8, x12
 7f8:	madd	x8, x5, x9, x8
 7fc:	madd	x0, x1, x0, x7
 800:	ror	x0, x0, #33
 804:	mul	x0, x0, x9
 808:	mov	x5, #0x9fa9                	// #40873
 80c:	movk	x5, #0x822d, lsl #16
 810:	movk	x5, #0x26fd, lsl #32
 814:	movk	x5, #0x9271, lsl #48
 818:	ldr	x1, [sp, #80]
 81c:	madd	x3, x3, x5, x1
 820:	ldr	x11, [sp, #104]
 824:	ldr	x5, [sp, #96]
 828:	add	x2, x2, x5
 82c:	add	x2, x2, x3
 830:	ldr	x1, [sp, #112]
 834:	add	x4, x4, x1
 838:	add	x4, x4, x0
 83c:	ldr	x9, [sp, #136]
 840:	add	x1, x10, x12
 844:	add	x1, x1, x4
 848:	str	x0, [sp, #144]
 84c:	str	x8, [sp, #152]
 850:	str	x6, [sp, #160]
 854:	add	x0, x11, x2
 858:	str	x0, [sp, #168]
 85c:	add	x0, x7, x3
 860:	add	x6, x6, x11
 864:	add	x0, x0, x6
 868:	ror	x0, x0, #21
 86c:	ror	x2, x2, #44
 870:	add	x2, x2, x3
 874:	add	x0, x0, x2
 878:	str	x0, [sp, #176]
 87c:	add	x0, x9, x1
 880:	str	x0, [sp, #184]
 884:	add	x5, x5, x9
 888:	add	x8, x8, x4
 88c:	add	x5, x5, x8
 890:	ror	x5, x5, #21
 894:	ror	x1, x1, #44
 898:	add	x1, x1, x4
 89c:	add	x1, x5, x1
 8a0:	str	x1, [sp, #192]
 8a4:	mov	x21, #0x40                  	// #64
 8a8:	add	x1, sp, #0x50
 8ac:	str	x1, [sp, #72]
 8b0:	mov	x3, x19
 8b4:	add	x2, sp, #0x40
 8b8:	add	x1, sp, #0x90
 8bc:	add	x0, sp, #0x48
 8c0:	bl	0 <_ZN4llvm12hash_combineIJjjNS_9StringRefEEEENS_9hash_codeEDpRKT_>
 8c4:	and	w0, w0, #0xff
 8c8:	cbz	w0, 48c <_ZN4llvm12hash_combineIJjjNS_9StringRefEEEENS_9hash_codeEDpRKT_+0x48c>
 8cc:	ldr	x19, [sp, #72]
 8d0:	ldp	x0, x1, [x20]
 8d4:	bl	0 <_ZN4llvm10hash_valueENS_9StringRefE>
 8d8:	str	x19, [sp, #64]
 8dc:	str	x0, [sp, #72]
 8e0:	mov	x3, #0x0                   	// #0
 8e4:	add	x2, sp, #0x48
 8e8:	add	x1, sp, #0x90
 8ec:	add	x0, sp, #0x40
 8f0:	bl	0 <_ZN4llvm12hash_combineIJjjNS_9StringRefEEEENS_9hash_codeEDpRKT_>
 8f4:	and	w0, w0, #0xff
 8f8:	ldr	x20, [sp, #64]
 8fc:	cbnz	w0, a40 <_ZN4llvm12hash_combineIJjjNS_9StringRefEEEENS_9hash_codeEDpRKT_+0xa40>
 900:	ldr	x0, [sp, #64]
 904:	add	x19, sp, #0x90
 908:	sub	x19, x19, x0
 90c:	mov	x2, x19
 910:	add	x1, sp, #0x48
 914:	bl	0 <memcpy>
 918:	ldr	x2, [sp, #152]
 91c:	ldr	x1, [sp, #168]
 920:	ldr	x4, [sp, #88]
 924:	ldr	x5, [sp, #176]
 928:	ldr	x3, [sp, #128]
 92c:	ldr	x8, [sp, #192]
 930:	ldr	x0, [sp, #144]
 934:	add	x0, x2, x0
 938:	add	x6, x1, x4
 93c:	add	x0, x0, x6
 940:	ror	x0, x0, #37
 944:	mov	x9, #0xf273                	// #62067
 948:	movk	x9, #0xbe98, lsl #16
 94c:	movk	x9, #0xb66f, lsl #32
 950:	movk	x9, #0xb492, lsl #48
 954:	mul	x0, x0, x9
 958:	eor	x7, x0, x8
 95c:	ldr	x10, [sp, #120]
 960:	add	x2, x2, x5
 964:	add	x2, x2, x3
 968:	ror	x2, x2, #42
 96c:	add	x1, x1, x10
 970:	madd	x2, x2, x9, x1
 974:	str	x2, [sp, #152]
 978:	ldr	x1, [sp, #184]
 97c:	ldr	x6, [sp, #160]
 980:	add	x6, x1, x6
 984:	ror	x6, x6, #33
 988:	mul	x6, x6, x9
 98c:	ldr	x0, [sp, #80]
 990:	madd	x5, x5, x9, x0
 994:	ldr	x9, [sp, #104]
 998:	ldr	x0, [sp, #96]
 99c:	add	x4, x4, x0
 9a0:	add	x4, x4, x5
 9a4:	add	x1, x1, x9
 9a8:	add	x11, x7, x5
 9ac:	add	x1, x1, x11
 9b0:	ror	x1, x1, #21
 9b4:	ror	x11, x4, #44
 9b8:	add	x5, x11, x5
 9bc:	add	x1, x1, x5
 9c0:	str	x1, [sp, #176]
 9c4:	add	x4, x9, x4
 9c8:	str	x4, [sp, #168]
 9cc:	ldr	x1, [sp, #112]
 9d0:	add	x1, x8, x1
 9d4:	add	x1, x1, x6
 9d8:	ldr	x4, [sp, #136]
 9dc:	add	x3, x3, x10
 9e0:	add	x3, x3, x1
 9e4:	add	x0, x0, x4
 9e8:	add	x2, x2, x1
 9ec:	add	x0, x0, x2
 9f0:	ror	x0, x0, #21
 9f4:	ror	x2, x3, #44
 9f8:	add	x1, x2, x1
 9fc:	add	x0, x0, x1
 a00:	str	x0, [sp, #192]
 a04:	add	x3, x4, x3
 a08:	str	x3, [sp, #184]
 a0c:	str	x7, [sp, #160]
 a10:	str	x6, [sp, #144]
 a14:	add	x21, x21, #0x40
 a18:	add	x1, sp, #0x50
 a1c:	str	x1, [sp, #64]
 a20:	mov	x3, x19
 a24:	add	x2, sp, #0x48
 a28:	add	x1, sp, #0x90
 a2c:	add	x0, sp, #0x40
 a30:	bl	0 <_ZN4llvm12hash_combineIJjjNS_9StringRefEEEENS_9hash_codeEDpRKT_>
 a34:	and	w0, w0, #0xff
 a38:	cbz	w0, 4a8 <_ZN4llvm12hash_combineIJjjNS_9StringRefEEEENS_9hash_codeEDpRKT_+0x4a8>
 a3c:	ldr	x20, [sp, #64]
 a40:	add	x19, sp, #0x50
 a44:	mov	w3, #0x0                   	// #0
 a48:	add	x2, sp, #0x90
 a4c:	mov	x1, x20
 a50:	mov	x0, x19
 a54:	bl	0 <_ZN4llvm12hash_combineIJjjNS_9StringRefEEEENS_9hash_codeEDpRKT_>
 a58:	ldr	x4, [sp, #152]
 a5c:	ldr	x7, [sp, #168]
 a60:	ldr	x9, [sp, #88]
 a64:	ldr	x11, [sp, #176]
 a68:	ldr	x1, [sp, #128]
 a6c:	ldr	x3, [sp, #192]
 a70:	ldr	x0, [sp, #144]
 a74:	add	x0, x4, x0
 a78:	add	x2, x7, x9
 a7c:	add	x0, x0, x2
 a80:	ror	x0, x0, #37
 a84:	mov	x5, #0xf273                	// #62067
 a88:	movk	x5, #0xbe98, lsl #16
 a8c:	movk	x5, #0xb66f, lsl #32
 a90:	movk	x5, #0xb492, lsl #48
 a94:	mul	x0, x0, x5
 a98:	eor	x6, x0, x3
 a9c:	ldr	x0, [sp, #120]
 aa0:	add	x4, x4, x11
 aa4:	add	x4, x4, x1
 aa8:	ror	x4, x4, #42
 aac:	add	x7, x7, x0
 ab0:	madd	x4, x4, x5, x7
 ab4:	ldr	x12, [sp, #184]
 ab8:	ldr	x7, [sp, #160]
 abc:	add	x7, x12, x7
 ac0:	ror	x7, x7, #33
 ac4:	mul	x7, x7, x5
 ac8:	ldr	x2, [sp, #80]
 acc:	madd	x11, x11, x5, x2
 ad0:	ldr	x13, [sp, #104]
 ad4:	ldr	x8, [sp, #96]
 ad8:	add	x9, x9, x8
 adc:	add	x10, x9, x11
 ae0:	ldr	x2, [sp, #112]
 ae4:	add	x3, x3, x2
 ae8:	add	x3, x3, x7
 aec:	ldr	x9, [sp, #136]
 af0:	add	x1, x1, x0
 af4:	add	x1, x1, x3
 af8:	add	x0, x4, x3
 afc:	add	x8, x8, x9
 b00:	add	x0, x0, x8
 b04:	ror	x0, x0, #21
 b08:	ror	x2, x1, #44
 b0c:	add	x3, x2, x3
 b10:	add	x3, x0, x3
 b14:	add	x9, x9, x1
 b18:	sub	x19, x20, x19
 b1c:	add	x0, x19, x21
 b20:	add	x1, x13, x10
 b24:	eor	x1, x1, x9
 b28:	mov	x8, #0x2d69                	// #11625
 b2c:	movk	x8, #0xeb38, lsl #16
 b30:	movk	x8, #0xea08, lsl #32
 b34:	movk	x8, #0x9ddf, lsl #48
 b38:	mul	x1, x1, x8
 b3c:	eor	x9, x1, x9
 b40:	eor	x1, x9, x1, lsr #47
 b44:	mul	x1, x1, x8
 b48:	eor	x1, x1, x1, lsr #47
 b4c:	add	x2, x6, x11
 b50:	add	x12, x12, x13
 b54:	add	x2, x2, x12
 b58:	ror	x2, x2, #21
 b5c:	ror	x9, x10, #44
 b60:	add	x9, x9, x11
 b64:	add	x2, x2, x9
 b68:	eor	x2, x2, x3
 b6c:	mul	x2, x2, x8
 b70:	eor	x3, x2, x3
 b74:	eor	x2, x3, x2, lsr #47
 b78:	mul	x2, x2, x8
 b7c:	eor	x2, x2, x2, lsr #47
 b80:	eor	x0, x0, x0, lsr #47
 b84:	madd	x2, x2, x8, x7
 b88:	madd	x2, x0, x5, x2
 b8c:	eor	x4, x4, x4, lsr #47
 b90:	madd	x5, x4, x5, x6
 b94:	madd	x1, x1, x8, x5
 b98:	eor	x1, x1, x2
 b9c:	mul	x1, x1, x8
 ba0:	eor	x0, x2, x1
 ba4:	eor	x0, x0, x1, lsr #47
 ba8:	mul	x0, x0, x8
 bac:	eor	x0, x0, x0, lsr #47
 bb0:	mul	x0, x0, x8
 bb4:	b	14c <_ZN4llvm12hash_combineIJjjNS_9StringRefEEEENS_9hash_codeEDpRKT_+0x14c>
 bb8:	ldr	x0, [sp, #64]
 bbc:	add	x19, sp, #0x90
 bc0:	sub	x19, x19, x0
 bc4:	mov	x2, x19
 bc8:	add	x1, sp, #0x48
 bcc:	bl	0 <memcpy>
 bd0:	ldr	x3, [sp, #200]
 bd4:	mov	x10, #0xf273                	// #62067
 bd8:	movk	x10, #0xbe98, lsl #16
 bdc:	movk	x10, #0xb66f, lsl #32
 be0:	movk	x10, #0xb492, lsl #48
 be4:	eor	x8, x3, x10
 be8:	mov	x0, #0x2d69                	// #11625
 bec:	movk	x0, #0xeb38, lsl #16
 bf0:	movk	x0, #0xea08, lsl #32
 bf4:	movk	x0, #0x9ddf, lsl #48
 bf8:	mul	x1, x8, x0
 bfc:	eor	x1, x1, x1, lsr #47
 c00:	eor	x1, x1, x10
 c04:	mul	x1, x1, x0
 c08:	eor	x1, x1, x1, lsr #47
 c0c:	ror	x8, x8, #49
 c10:	mul	x11, x3, x10
 c14:	eor	x6, x3, x3, lsr #47
 c18:	eor	x4, x11, x6
 c1c:	mul	x4, x4, x0
 c20:	eor	x2, x6, x4
 c24:	eor	x4, x2, x4, lsr #47
 c28:	mul	x4, x4, x0
 c2c:	eor	x4, x4, x4, lsr #47
 c30:	mul	x4, x4, x0
 c34:	ldr	x2, [sp, #88]
 c38:	ldr	x9, [sp, #128]
 c3c:	add	x7, x3, x2
 c40:	add	x7, x7, x8
 c44:	ror	x7, x7, #37
 c48:	mul	x7, x7, x10
 c4c:	eor	x7, x7, x4
 c50:	ldr	x12, [sp, #120]
 c54:	add	x5, x3, x9
 c58:	add	x5, x5, x11
 c5c:	ror	x5, x5, #42
 c60:	add	x8, x8, x12
 c64:	madd	x8, x5, x10, x8
 c68:	madd	x0, x1, x0, x6
 c6c:	ror	x0, x0, #33
 c70:	mul	x0, x0, x10
 c74:	mov	x5, #0x9fa9                	// #40873
 c78:	movk	x5, #0x822d, lsl #16
 c7c:	movk	x5, #0x26fd, lsl #32
 c80:	movk	x5, #0x9271, lsl #48
 c84:	ldr	x1, [sp, #80]
 c88:	madd	x3, x3, x5, x1
 c8c:	ldr	x11, [sp, #104]
 c90:	ldr	x5, [sp, #96]
 c94:	add	x2, x2, x5
 c98:	add	x2, x2, x3
 c9c:	ldr	x1, [sp, #112]
 ca0:	add	x4, x4, x1
 ca4:	add	x4, x4, x0
 ca8:	ldr	x10, [sp, #136]
 cac:	add	x1, x9, x12
 cb0:	add	x1, x1, x4
 cb4:	str	x0, [sp, #144]
 cb8:	str	x8, [sp, #152]
 cbc:	str	x7, [sp, #160]
 cc0:	add	x0, x11, x2
 cc4:	str	x0, [sp, #168]
 cc8:	add	x0, x6, x3
 ccc:	add	x7, x7, x11
 cd0:	add	x0, x0, x7
 cd4:	ror	x0, x0, #21
 cd8:	ror	x2, x2, #44
 cdc:	add	x2, x2, x3
 ce0:	add	x0, x0, x2
 ce4:	str	x0, [sp, #176]
 ce8:	add	x0, x10, x1
 cec:	str	x0, [sp, #184]
 cf0:	add	x5, x5, x10
 cf4:	add	x8, x8, x4
 cf8:	add	x5, x5, x8
 cfc:	ror	x5, x5, #21
 d00:	ror	x1, x1, #44
 d04:	add	x1, x1, x4
 d08:	add	x1, x5, x1
 d0c:	str	x1, [sp, #192]
 d10:	mov	x21, #0x40                  	// #64
 d14:	b	a18 <_ZN4llvm12hash_combineIJjjNS_9StringRefEEEENS_9hash_codeEDpRKT_+0xa18>
 d18:	ldr	x0, [sp, #64]
 d1c:	add	x19, sp, #0x90
 d20:	sub	x19, x19, x0
 d24:	mov	x2, x19
 d28:	add	x1, sp, #0x48
 d2c:	bl	0 <memcpy>
 d30:	mov	x21, #0x40                  	// #64
 d34:	ldp	x23, x24, [sp, #48]
 d38:	b	918 <_ZN4llvm12hash_combineIJjjNS_9StringRefEEEENS_9hash_codeEDpRKT_+0x918>
 d3c:	ldr	x19, [sp, #72]
 d40:	ldp	x0, x1, [x20]
 d44:	bl	0 <_ZN4llvm10hash_valueENS_9StringRefE>
 d48:	str	x19, [sp, #64]
 d4c:	str	x0, [sp, #72]
 d50:	mov	x3, #0x0                   	// #0
 d54:	add	x2, sp, #0x48
 d58:	add	x1, sp, #0x90
 d5c:	add	x0, sp, #0x40
 d60:	bl	0 <_ZN4llvm12hash_combineIJjjNS_9StringRefEEEENS_9hash_codeEDpRKT_>
 d64:	and	w0, w0, #0xff
 d68:	mov	x21, #0x40                  	// #64
 d6c:	cbz	w0, d18 <_ZN4llvm12hash_combineIJjjNS_9StringRefEEEENS_9hash_codeEDpRKT_+0xd18>
 d70:	ldp	x23, x24, [sp, #48]
 d74:	b	ec <_ZN4llvm12hash_combineIJjjNS_9StringRefEEEENS_9hash_codeEDpRKT_+0xec>

DWARFLinker.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm12AddressesMapD1Ev>:
   0:	ret

0000000000000004 <_ZN4llvm12AddressesMapD0Ev>:
   4:	stp	x29, x30, [sp, #-32]!
   8:	mov	x29, sp
   c:	str	x19, [sp, #16]
  10:	mov	x19, x0
  14:	bl	0 <_ZN4llvm12AddressesMapD1Ev>
  18:	mov	x1, #0x8                   	// #8
  1c:	mov	x0, x19
  20:	bl	0 <_ZdlPvm>
  24:	ldr	x19, [sp, #16]
  28:	ldp	x29, x30, [sp], #32
  2c:	ret

0000000000000030 <_ZN4llvm12DwarfEmitterD1Ev>:
  30:	ret

0000000000000034 <_ZN4llvm12DwarfEmitterD0Ev>:
  34:	stp	x29, x30, [sp, #-32]!
  38:	mov	x29, sp
  3c:	str	x19, [sp, #16]
  40:	mov	x19, x0
  44:	bl	30 <_ZN4llvm12DwarfEmitterD1Ev>
  48:	mov	x1, #0x8                   	// #8
  4c:	mov	x0, x19
  50:	bl	0 <_ZdlPvm>
  54:	ldr	x19, [sp, #16]
  58:	ldp	x29, x30, [sp], #32
  5c:	ret
