
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-udevd_clang_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

000000000040a1e8 <_init>:
  40a1e8:	stp	x29, x30, [sp, #-16]!
  40a1ec:	mov	x29, sp
  40a1f0:	bl	40c010 <call_weak_fn>
  40a1f4:	ldp	x29, x30, [sp], #16
  40a1f8:	ret

Disassembly of section .plt:

000000000040a200 <__libc_start_main@plt-0x20>:
  40a200:	stp	x16, x30, [sp, #-16]!
  40a204:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a208:	ldr	x17, [x16, #296]
  40a20c:	add	x16, x16, #0x128
  40a210:	br	x17
  40a214:	nop
  40a218:	nop
  40a21c:	nop

000000000040a220 <__libc_start_main@plt>:
  40a220:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a224:	ldr	x17, [x16, #304]
  40a228:	add	x16, x16, #0x130
  40a22c:	br	x17

000000000040a230 <abort@plt>:
  40a230:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a234:	ldr	x17, [x16, #312]
  40a238:	add	x16, x16, #0x138
  40a23c:	br	x17

000000000040a240 <__gmon_start__@plt>:
  40a240:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a244:	ldr	x17, [x16, #320]
  40a248:	add	x16, x16, #0x140
  40a24c:	br	x17

000000000040a250 <log_set_target@plt>:
  40a250:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a254:	ldr	x17, [x16, #328]
  40a258:	add	x16, x16, #0x148
  40a25c:	br	x17

000000000040a260 <log_open@plt>:
  40a260:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a264:	ldr	x17, [x16, #336]
  40a268:	add	x16, x16, #0x150
  40a26c:	br	x17

000000000040a270 <udev_parse_config_full@plt>:
  40a270:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a274:	ldr	x17, [x16, #344]
  40a278:	add	x16, x16, #0x158
  40a27c:	br	x17

000000000040a280 <log_parse_environment_realm@plt>:
  40a280:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a284:	ldr	x17, [x16, #352]
  40a288:	add	x16, x16, #0x160
  40a28c:	br	x17

000000000040a290 <getopt_long@plt>:
  40a290:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a294:	ldr	x17, [x16, #360]
  40a298:	add	x16, x16, #0x168
  40a29c:	br	x17

000000000040a2a0 <resolve_name_timing_from_string@plt>:
  40a2a0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a2a4:	ldr	x17, [x16, #368]
  40a2a8:	add	x16, x16, #0x170
  40a2ac:	br	x17

000000000040a2b0 <parse_sec@plt>:
  40a2b0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a2b4:	ldr	x17, [x16, #376]
  40a2b8:	add	x16, x16, #0x178
  40a2bc:	br	x17

000000000040a2c0 <log_get_max_level_realm@plt>:
  40a2c0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a2c4:	ldr	x17, [x16, #384]
  40a2c8:	add	x16, x16, #0x180
  40a2cc:	br	x17

000000000040a2d0 <log_internal_realm@plt>:
  40a2d0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a2d4:	ldr	x17, [x16, #392]
  40a2d8:	add	x16, x16, #0x188
  40a2dc:	br	x17

000000000040a2e0 <safe_atou_full@plt>:
  40a2e0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a2e4:	ldr	x17, [x16, #400]
  40a2e8:	add	x16, x16, #0x190
  40a2ec:	br	x17

000000000040a2f0 <puts@plt>:
  40a2f0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a2f4:	ldr	x17, [x16, #408]
  40a2f8:	add	x16, x16, #0x198
  40a2fc:	br	x17

000000000040a300 <terminal_urlify_man@plt>:
  40a300:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a304:	ldr	x17, [x16, #416]
  40a308:	add	x16, x16, #0x1a0
  40a30c:	br	x17

000000000040a310 <printf@plt>:
  40a310:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a314:	ldr	x17, [x16, #424]
  40a318:	add	x16, x16, #0x1a8
  40a31c:	br	x17

000000000040a320 <free@plt>:
  40a320:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a324:	ldr	x17, [x16, #432]
  40a328:	add	x16, x16, #0x1b0
  40a32c:	br	x17

000000000040a330 <log_oom_internal@plt>:
  40a330:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a334:	ldr	x17, [x16, #440]
  40a338:	add	x16, x16, #0x1b8
  40a33c:	br	x17

000000000040a340 <proc_cmdline_parse@plt>:
  40a340:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a344:	ldr	x17, [x16, #448]
  40a348:	add	x16, x16, #0x1c0
  40a34c:	br	x17

000000000040a350 <log_set_max_level_realm@plt>:
  40a350:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a354:	ldr	x17, [x16, #456]
  40a358:	add	x16, x16, #0x1c8
  40a35c:	br	x17

000000000040a360 <must_be_root@plt>:
  40a360:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a364:	ldr	x17, [x16, #464]
  40a368:	add	x16, x16, #0x1d0
  40a36c:	br	x17

000000000040a370 <sched_getaffinity@plt>:
  40a370:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a374:	ldr	x17, [x16, #472]
  40a378:	add	x16, x16, #0x1d8
  40a37c:	br	x17

000000000040a380 <__sched_cpucount@plt>:
  40a380:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a384:	ldr	x17, [x16, #480]
  40a388:	add	x16, x16, #0x1e0
  40a38c:	br	x17

000000000040a390 <physical_memory@plt>:
  40a390:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a394:	ldr	x17, [x16, #488]
  40a398:	add	x16, x16, #0x1e8
  40a39c:	br	x17

000000000040a3a0 <chdir@plt>:
  40a3a0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a3a4:	ldr	x17, [x16, #496]
  40a3a8:	add	x16, x16, #0x1f0
  40a3ac:	br	x17

000000000040a3b0 <umask@plt>:
  40a3b0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a3b4:	ldr	x17, [x16, #504]
  40a3b8:	add	x16, x16, #0x1f8
  40a3bc:	br	x17

000000000040a3c0 <mac_selinux_init@plt>:
  40a3c0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a3c4:	ldr	x17, [x16, #512]
  40a3c8:	add	x16, x16, #0x200
  40a3cc:	br	x17

000000000040a3d0 <mkdir_errno_wrapper@plt>:
  40a3d0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a3d4:	ldr	x17, [x16, #520]
  40a3d8:	add	x16, x16, #0x208
  40a3dc:	br	x17

000000000040a3e0 <__errno_location@plt>:
  40a3e0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a3e4:	ldr	x17, [x16, #528]
  40a3e8:	add	x16, x16, #0x210
  40a3ec:	br	x17

000000000040a3f0 <ask_password_agent_close@plt>:
  40a3f0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a3f4:	ldr	x17, [x16, #536]
  40a3f8:	add	x16, x16, #0x218
  40a3fc:	br	x17

000000000040a400 <polkit_agent_close@plt>:
  40a400:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a404:	ldr	x17, [x16, #544]
  40a408:	add	x16, x16, #0x220
  40a40c:	br	x17

000000000040a410 <pager_close@plt>:
  40a410:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a414:	ldr	x17, [x16, #552]
  40a418:	add	x16, x16, #0x228
  40a41c:	br	x17

000000000040a420 <mac_selinux_finish@plt>:
  40a420:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a424:	ldr	x17, [x16, #560]
  40a428:	add	x16, x16, #0x230
  40a42c:	br	x17

000000000040a430 <dev_setup@plt>:
  40a430:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a434:	ldr	x17, [x16, #568]
  40a438:	add	x16, x16, #0x238
  40a43c:	br	x17

000000000040a440 <getppid@plt>:
  40a440:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a444:	ldr	x17, [x16, #576]
  40a448:	add	x16, x16, #0x240
  40a44c:	br	x17

000000000040a450 <sd_booted@plt>:
  40a450:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a454:	ldr	x17, [x16, #584]
  40a458:	add	x16, x16, #0x248
  40a45c:	br	x17

000000000040a460 <cg_pid_get_path@plt>:
  40a460:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a464:	ldr	x17, [x16, #592]
  40a468:	add	x16, x16, #0x250
  40a46c:	br	x17

000000000040a470 <sd_listen_fds@plt>:
  40a470:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a474:	ldr	x17, [x16, #600]
  40a478:	add	x16, x16, #0x258
  40a47c:	br	x17

000000000040a480 <sd_is_socket@plt>:
  40a480:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a484:	ldr	x17, [x16, #608]
  40a488:	add	x16, x16, #0x260
  40a48c:	br	x17

000000000040a490 <malloc@plt>:
  40a490:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a494:	ldr	x17, [x16, #616]
  40a498:	add	x16, x16, #0x268
  40a49c:	br	x17

000000000040a4a0 <device_monitor_new_full@plt>:
  40a4a0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a4a4:	ldr	x17, [x16, #624]
  40a4a8:	add	x16, x16, #0x270
  40a4ac:	br	x17

000000000040a4b0 <sd_device_monitor_set_receive_buffer_size@plt>:
  40a4b0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a4b4:	ldr	x17, [x16, #632]
  40a4b8:	add	x16, x16, #0x278
  40a4bc:	br	x17

000000000040a4c0 <device_monitor_enable_receiving@plt>:
  40a4c0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a4c4:	ldr	x17, [x16, #640]
  40a4c8:	add	x16, x16, #0x280
  40a4cc:	br	x17

000000000040a4d0 <rearrange_stdio@plt>:
  40a4d0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a4d4:	ldr	x17, [x16, #648]
  40a4d8:	add	x16, x16, #0x288
  40a4dc:	br	x17

000000000040a4e0 <fork@plt>:
  40a4e0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a4e4:	ldr	x17, [x16, #656]
  40a4e8:	add	x16, x16, #0x290
  40a4ec:	br	x17

000000000040a4f0 <setsid@plt>:
  40a4f0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a4f4:	ldr	x17, [x16, #664]
  40a4f8:	add	x16, x16, #0x298
  40a4fc:	br	x17

000000000040a500 <set_oom_score_adjust@plt>:
  40a500:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a504:	ldr	x17, [x16, #672]
  40a508:	add	x16, x16, #0x2a0
  40a50c:	br	x17

000000000040a510 <getpid_cached@plt>:
  40a510:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a514:	ldr	x17, [x16, #680]
  40a518:	add	x16, x16, #0x2a8
  40a51c:	br	x17

000000000040a520 <socketpair@plt>:
  40a520:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a524:	ldr	x17, [x16, #688]
  40a528:	add	x16, x16, #0x2b0
  40a52c:	br	x17

000000000040a530 <setsockopt@plt>:
  40a530:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a534:	ldr	x17, [x16, #696]
  40a538:	add	x16, x16, #0x2b8
  40a53c:	br	x17

000000000040a540 <sigprocmask_many@plt>:
  40a540:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a544:	ldr	x17, [x16, #704]
  40a548:	add	x16, x16, #0x2c0
  40a54c:	br	x17

000000000040a550 <sd_event_default@plt>:
  40a550:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a554:	ldr	x17, [x16, #712]
  40a558:	add	x16, x16, #0x2c8
  40a55c:	br	x17

000000000040a560 <sd_event_add_signal@plt>:
  40a560:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a564:	ldr	x17, [x16, #720]
  40a568:	add	x16, x16, #0x2d0
  40a56c:	br	x17

000000000040a570 <sd_event_set_watchdog@plt>:
  40a570:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a574:	ldr	x17, [x16, #728]
  40a578:	add	x16, x16, #0x2d8
  40a57c:	br	x17

000000000040a580 <sd_event_source_set_priority@plt>:
  40a580:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a584:	ldr	x17, [x16, #736]
  40a588:	add	x16, x16, #0x2e0
  40a58c:	br	x17

000000000040a590 <sd_event_add_io@plt>:
  40a590:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a594:	ldr	x17, [x16, #744]
  40a598:	add	x16, x16, #0x2e8
  40a59c:	br	x17

000000000040a5a0 <sd_device_monitor_attach_event@plt>:
  40a5a0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a5a4:	ldr	x17, [x16, #752]
  40a5a8:	add	x16, x16, #0x2f0
  40a5ac:	br	x17

000000000040a5b0 <sd_device_monitor_start@plt>:
  40a5b0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a5b4:	ldr	x17, [x16, #760]
  40a5b8:	add	x16, x16, #0x2f8
  40a5bc:	br	x17

000000000040a5c0 <sd_device_monitor_get_event_source@plt>:
  40a5c0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a5c4:	ldr	x17, [x16, #768]
  40a5c8:	add	x16, x16, #0x300
  40a5cc:	br	x17

000000000040a5d0 <sd_event_source_set_description@plt>:
  40a5d0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a5d4:	ldr	x17, [x16, #776]
  40a5d8:	add	x16, x16, #0x308
  40a5dc:	br	x17

000000000040a5e0 <sd_event_add_post@plt>:
  40a5e0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a5e4:	ldr	x17, [x16, #784]
  40a5e8:	add	x16, x16, #0x310
  40a5ec:	br	x17

000000000040a5f0 <sd_notifyf@plt>:
  40a5f0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a5f4:	ldr	x17, [x16, #792]
  40a5f8:	add	x16, x16, #0x318
  40a5fc:	br	x17

000000000040a600 <sd_event_loop@plt>:
  40a600:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a604:	ldr	x17, [x16, #800]
  40a608:	add	x16, x16, #0x320
  40a60c:	br	x17

000000000040a610 <sd_notify@plt>:
  40a610:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a614:	ldr	x17, [x16, #808]
  40a618:	add	x16, x16, #0x328
  40a61c:	br	x17

000000000040a620 <log_assert_failed_unreachable_realm@plt>:
  40a620:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a624:	ldr	x17, [x16, #816]
  40a628:	add	x16, x16, #0x330
  40a62c:	br	x17

000000000040a630 <log_assert_failed_realm@plt>:
  40a630:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a634:	ldr	x17, [x16, #824]
  40a638:	add	x16, x16, #0x338
  40a63c:	br	x17

000000000040a640 <sd_netlink_unref@plt>:
  40a640:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a644:	ldr	x17, [x16, #832]
  40a648:	add	x16, x16, #0x340
  40a64c:	br	x17

000000000040a650 <internal_hashmap_free@plt>:
  40a650:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a654:	ldr	x17, [x16, #840]
  40a658:	add	x16, x16, #0x348
  40a65c:	br	x17

000000000040a660 <safe_close@plt>:
  40a660:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a664:	ldr	x17, [x16, #848]
  40a668:	add	x16, x16, #0x350
  40a66c:	br	x17

000000000040a670 <safe_close_pair@plt>:
  40a670:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a674:	ldr	x17, [x16, #856]
  40a678:	add	x16, x16, #0x358
  40a67c:	br	x17

000000000040a680 <proc_cmdline_key_streq@plt>:
  40a680:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a684:	ldr	x17, [x16, #864]
  40a688:	add	x16, x16, #0x360
  40a68c:	br	x17

000000000040a690 <log_level_from_string@plt>:
  40a690:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a694:	ldr	x17, [x16, #872]
  40a698:	add	x16, x16, #0x368
  40a69c:	br	x17

000000000040a6a0 <strncmp@plt>:
  40a6a0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a6a4:	ldr	x17, [x16, #880]
  40a6a8:	add	x16, x16, #0x370
  40a6ac:	br	x17

000000000040a6b0 <sd_event_source_unref@plt>:
  40a6b0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a6b4:	ldr	x17, [x16, #888]
  40a6b8:	add	x16, x16, #0x378
  40a6bc:	br	x17

000000000040a6c0 <sd_event_unref@plt>:
  40a6c0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a6c4:	ldr	x17, [x16, #896]
  40a6c8:	add	x16, x16, #0x380
  40a6cc:	br	x17

000000000040a6d0 <sd_device_monitor_unref@plt>:
  40a6d0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a6d4:	ldr	x17, [x16, #904]
  40a6d8:	add	x16, x16, #0x388
  40a6dc:	br	x17

000000000040a6e0 <sd_device_unref@plt>:
  40a6e0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a6e4:	ldr	x17, [x16, #912]
  40a6e8:	add	x16, x16, #0x390
  40a6ec:	br	x17

000000000040a6f0 <unlink@plt>:
  40a6f0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a6f4:	ldr	x17, [x16, #920]
  40a6f8:	add	x16, x16, #0x398
  40a6fc:	br	x17

000000000040a700 <waitpid@plt>:
  40a700:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a704:	ldr	x17, [x16, #928]
  40a708:	add	x16, x16, #0x3a0
  40a70c:	br	x17

000000000040a710 <internal_hashmap_get@plt>:
  40a710:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a714:	ldr	x17, [x16, #936]
  40a718:	add	x16, x16, #0x3a8
  40a71c:	br	x17

000000000040a720 <signal_to_string@plt>:
  40a720:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a724:	ldr	x17, [x16, #944]
  40a728:	add	x16, x16, #0x3b0
  40a72c:	br	x17

000000000040a730 <log_object_internal@plt>:
  40a730:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a734:	ldr	x17, [x16, #952]
  40a738:	add	x16, x16, #0x3b8
  40a73c:	br	x17

000000000040a740 <device_delete_db@plt>:
  40a740:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a744:	ldr	x17, [x16, #960]
  40a748:	add	x16, x16, #0x3c0
  40a74c:	br	x17

000000000040a750 <device_tag_index@plt>:
  40a750:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a754:	ldr	x17, [x16, #968]
  40a758:	add	x16, x16, #0x3c8
  40a75c:	br	x17

000000000040a760 <device_monitor_send_device@plt>:
  40a760:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a764:	ldr	x17, [x16, #976]
  40a768:	add	x16, x16, #0x3d0
  40a76c:	br	x17

000000000040a770 <internal_hashmap_remove@plt>:
  40a770:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a774:	ldr	x17, [x16, #984]
  40a778:	add	x16, x16, #0x3d8
  40a77c:	br	x17

000000000040a780 <sd_device_get_sysname@plt>:
  40a780:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a784:	ldr	x17, [x16, #992]
  40a788:	add	x16, x16, #0x3e0
  40a78c:	br	x17

000000000040a790 <internal_hashmap_size@plt>:
  40a790:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a794:	ldr	x17, [x16, #1000]
  40a798:	add	x16, x16, #0x3e8
  40a79c:	br	x17

000000000040a7a0 <event_source_disable@plt>:
  40a7a0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a7a4:	ldr	x17, [x16, #1008]
  40a7a8:	add	x16, x16, #0x3f0
  40a7ac:	br	x17

000000000040a7b0 <internal_hashmap_iterate@plt>:
  40a7b0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a7b4:	ldr	x17, [x16, #1016]
  40a7b8:	add	x16, x16, #0x3f8
  40a7bc:	br	x17

000000000040a7c0 <kill@plt>:
  40a7c0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a7c4:	ldr	x17, [x16, #1024]
  40a7c8:	add	x16, x16, #0x400
  40a7cc:	br	x17

000000000040a7d0 <strchr@plt>:
  40a7d0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a7d4:	ldr	x17, [x16, #1032]
  40a7d8:	add	x16, x16, #0x408
  40a7dc:	br	x17

000000000040a7e0 <strndup@plt>:
  40a7e0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a7e4:	ldr	x17, [x16, #1040]
  40a7e8:	add	x16, x16, #0x410
  40a7ec:	br	x17

000000000040a7f0 <hashmap_remove2@plt>:
  40a7f0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a7f4:	ldr	x17, [x16, #1048]
  40a7f8:	add	x16, x16, #0x418
  40a7fc:	br	x17

000000000040a800 <internal_hashmap_ensure_allocated@plt>:
  40a800:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a804:	ldr	x17, [x16, #1056]
  40a808:	add	x16, x16, #0x420
  40a80c:	br	x17

000000000040a810 <strdup@plt>:
  40a810:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a814:	ldr	x17, [x16, #1064]
  40a818:	add	x16, x16, #0x428
  40a81c:	br	x17

000000000040a820 <hashmap_put@plt>:
  40a820:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a824:	ldr	x17, [x16, #1072]
  40a828:	add	x16, x16, #0x430
  40a82c:	br	x17

000000000040a830 <read@plt>:
  40a830:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a834:	ldr	x17, [x16, #1080]
  40a838:	add	x16, x16, #0x438
  40a83c:	br	x17

000000000040a840 <sd_device_get_devname@plt>:
  40a840:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a844:	ldr	x17, [x16, #1088]
  40a848:	add	x16, x16, #0x440
  40a84c:	br	x17

000000000040a850 <sd_device_get_subsystem@plt>:
  40a850:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a854:	ldr	x17, [x16, #1096]
  40a858:	add	x16, x16, #0x448
  40a85c:	br	x17

000000000040a860 <sd_device_get_syspath@plt>:
  40a860:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a864:	ldr	x17, [x16, #1104]
  40a868:	add	x16, x16, #0x450
  40a86c:	br	x17

000000000040a870 <sd_device_get_devtype@plt>:
  40a870:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a874:	ldr	x17, [x16, #1112]
  40a878:	add	x16, x16, #0x458
  40a87c:	br	x17

000000000040a880 <strcmp_ptr@plt>:
  40a880:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a884:	ldr	x17, [x16, #1120]
  40a888:	add	x16, x16, #0x460
  40a88c:	br	x17

000000000040a890 <open64@plt>:
  40a890:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a894:	ldr	x17, [x16, #1128]
  40a898:	add	x16, x16, #0x468
  40a89c:	br	x17

000000000040a8a0 <flock@plt>:
  40a8a0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a8a4:	ldr	x17, [x16, #1136]
  40a8a8:	add	x16, x16, #0x470
  40a8ac:	br	x17

000000000040a8b0 <ioctl@plt>:
  40a8b0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a8b4:	ldr	x17, [x16, #1144]
  40a8b8:	add	x16, x16, #0x478
  40a8bc:	br	x17

000000000040a8c0 <close@plt>:
  40a8c0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a8c4:	ldr	x17, [x16, #1152]
  40a8c8:	add	x16, x16, #0x480
  40a8cc:	br	x17

000000000040a8d0 <sd_device_enumerator_new@plt>:
  40a8d0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a8d4:	ldr	x17, [x16, #1160]
  40a8d8:	add	x16, x16, #0x488
  40a8dc:	br	x17

000000000040a8e0 <sd_device_enumerator_allow_uninitialized@plt>:
  40a8e0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a8e4:	ldr	x17, [x16, #1168]
  40a8e8:	add	x16, x16, #0x490
  40a8ec:	br	x17

000000000040a8f0 <sd_device_enumerator_add_match_parent@plt>:
  40a8f0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a8f4:	ldr	x17, [x16, #1176]
  40a8f8:	add	x16, x16, #0x498
  40a8fc:	br	x17

000000000040a900 <sd_device_enumerator_add_match_subsystem@plt>:
  40a900:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a904:	ldr	x17, [x16, #1184]
  40a908:	add	x16, x16, #0x4a0
  40a90c:	br	x17

000000000040a910 <sd_device_enumerator_get_device_first@plt>:
  40a910:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a914:	ldr	x17, [x16, #1192]
  40a918:	add	x16, x16, #0x4a8
  40a91c:	br	x17

000000000040a920 <sd_device_enumerator_get_device_next@plt>:
  40a920:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a924:	ldr	x17, [x16, #1200]
  40a928:	add	x16, x16, #0x4b0
  40a92c:	br	x17

000000000040a930 <strcmp@plt>:
  40a930:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a934:	ldr	x17, [x16, #1208]
  40a938:	add	x16, x16, #0x4b8
  40a93c:	br	x17

000000000040a940 <sd_device_enumerator_unref@plt>:
  40a940:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a944:	ldr	x17, [x16, #1216]
  40a948:	add	x16, x16, #0x4c0
  40a94c:	br	x17

000000000040a950 <device_ensure_usec_initialized@plt>:
  40a950:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a954:	ldr	x17, [x16, #1224]
  40a958:	add	x16, x16, #0x4c8
  40a95c:	br	x17

000000000040a960 <device_get_seqnum@plt>:
  40a960:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a964:	ldr	x17, [x16, #1232]
  40a968:	add	x16, x16, #0x4d0
  40a96c:	br	x17

000000000040a970 <device_get_action@plt>:
  40a970:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a974:	ldr	x17, [x16, #1240]
  40a978:	add	x16, x16, #0x4d8
  40a97c:	br	x17

000000000040a980 <device_shallow_clone@plt>:
  40a980:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a984:	ldr	x17, [x16, #1248]
  40a988:	add	x16, x16, #0x4e0
  40a98c:	br	x17

000000000040a990 <device_copy_properties@plt>:
  40a990:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a994:	ldr	x17, [x16, #1256]
  40a998:	add	x16, x16, #0x4e8
  40a99c:	br	x17

000000000040a9a0 <sd_device_ref@plt>:
  40a9a0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a9a4:	ldr	x17, [x16, #1264]
  40a9a8:	add	x16, x16, #0x4f0
  40a9ac:	br	x17

000000000040a9b0 <touch@plt>:
  40a9b0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a9b4:	ldr	x17, [x16, #1272]
  40a9b8:	add	x16, x16, #0x4f8
  40a9bc:	br	x17

000000000040a9c0 <device_action_to_string@plt>:
  40a9c0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a9c4:	ldr	x17, [x16, #1280]
  40a9c8:	add	x16, x16, #0x500
  40a9cc:	br	x17

000000000040a9d0 <recvmsg@plt>:
  40a9d0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a9d4:	ldr	x17, [x16, #1288]
  40a9d8:	add	x16, x16, #0x508
  40a9dc:	br	x17

000000000040a9e0 <now@plt>:
  40a9e0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a9e4:	ldr	x17, [x16, #1296]
  40a9e8:	add	x16, x16, #0x510
  40a9ec:	br	x17

000000000040a9f0 <event_reset_time@plt>:
  40a9f0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40a9f4:	ldr	x17, [x16, #1304]
  40a9f8:	add	x16, x16, #0x518
  40a9fc:	br	x17

000000000040aa00 <cg_kill@plt>:
  40aa00:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40aa04:	ldr	x17, [x16, #1312]
  40aa08:	add	x16, x16, #0x520
  40aa0c:	br	x17

000000000040aa10 <sd_event_exit@plt>:
  40aa10:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40aa14:	ldr	x17, [x16, #1320]
  40aa18:	add	x16, x16, #0x528
  40aa1c:	br	x17

000000000040aa20 <sd_event_now@plt>:
  40aa20:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40aa24:	ldr	x17, [x16, #1328]
  40aa28:	add	x16, x16, #0x530
  40aa2c:	br	x17

000000000040aa30 <sd_device_get_devpath@plt>:
  40aa30:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40aa34:	ldr	x17, [x16, #1336]
  40aa38:	add	x16, x16, #0x538
  40aa3c:	br	x17

000000000040aa40 <strlen@plt>:
  40aa40:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40aa44:	ldr	x17, [x16, #1344]
  40aa48:	add	x16, x16, #0x540
  40aa4c:	br	x17

000000000040aa50 <sd_device_get_property_value@plt>:
  40aa50:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40aa54:	ldr	x17, [x16, #1352]
  40aa58:	add	x16, x16, #0x548
  40aa5c:	br	x17

000000000040aa60 <sd_device_get_devnum@plt>:
  40aa60:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40aa64:	ldr	x17, [x16, #1360]
  40aa68:	add	x16, x16, #0x550
  40aa6c:	br	x17

000000000040aa70 <sd_device_get_ifindex@plt>:
  40aa70:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40aa74:	ldr	x17, [x16, #1368]
  40aa78:	add	x16, x16, #0x558
  40aa7c:	br	x17

000000000040aa80 <device_monitor_allow_unicast_sender@plt>:
  40aa80:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40aa84:	ldr	x17, [x16, #1376]
  40aa88:	add	x16, x16, #0x560
  40aa8c:	br	x17

000000000040aa90 <safe_fork_full@plt>:
  40aa90:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40aa94:	ldr	x17, [x16, #1384]
  40aa98:	add	x16, x16, #0x568
  40aa9c:	br	x17

000000000040aaa0 <device_monitor_disconnect@plt>:
  40aaa0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40aaa4:	ldr	x17, [x16, #1392]
  40aaa8:	add	x16, x16, #0x570
  40aaac:	br	x17

000000000040aab0 <sd_device_monitor_ref@plt>:
  40aab0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40aab4:	ldr	x17, [x16, #1400]
  40aab8:	add	x16, x16, #0x578
  40aabc:	br	x17

000000000040aac0 <log_close@plt>:
  40aac0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40aac4:	ldr	x17, [x16, #1408]
  40aac8:	add	x16, x16, #0x580
  40aacc:	br	x17

000000000040aad0 <_exit@plt>:
  40aad0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40aad4:	ldr	x17, [x16, #1416]
  40aad8:	add	x16, x16, #0x588
  40aadc:	br	x17

000000000040aae0 <sd_event_add_time@plt>:
  40aae0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40aae4:	ldr	x17, [x16, #1424]
  40aae8:	add	x16, x16, #0x590
  40aaec:	br	x17

000000000040aaf0 <kill_and_sigcont@plt>:
  40aaf0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40aaf4:	ldr	x17, [x16, #1432]
  40aaf8:	add	x16, x16, #0x598
  40aafc:	br	x17

000000000040ab00 <unsetenv@plt>:
  40ab00:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40ab04:	ldr	x17, [x16, #1440]
  40ab08:	add	x16, x16, #0x5a0
  40ab0c:	br	x17

000000000040ab10 <sd_event_new@plt>:
  40ab10:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40ab14:	ldr	x17, [x16, #1448]
  40ab18:	add	x16, x16, #0x5a8
  40ab1c:	br	x17

000000000040ab20 <device_for_action@plt>:
  40ab20:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40ab24:	ldr	x17, [x16, #1456]
  40ab28:	add	x16, x16, #0x5b0
  40ab2c:	br	x17

000000000040ab30 <loop_write@plt>:
  40ab30:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40ab34:	ldr	x17, [x16, #1464]
  40ab38:	add	x16, x16, #0x5b8
  40ab3c:	br	x17

000000000040ab40 <sd_netlink_ref@plt>:
  40ab40:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40ab44:	ldr	x17, [x16, #1472]
  40ab48:	add	x16, x16, #0x5c0
  40ab4c:	br	x17

000000000040ab50 <device_update_db@plt>:
  40ab50:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40ab54:	ldr	x17, [x16, #1480]
  40ab58:	add	x16, x16, #0x5c8
  40ab5c:	br	x17

000000000040ab60 <sd_device_get_parent@plt>:
  40ab60:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40ab64:	ldr	x17, [x16, #1488]
  40ab68:	add	x16, x16, #0x5d0
  40ab6c:	br	x17

000000000040ab70 <stpcpy@plt>:
  40ab70:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40ab74:	ldr	x17, [x16, #1496]
  40ab78:	add	x16, x16, #0x5d8
  40ab7c:	br	x17

000000000040ab80 <write_string_file_ts@plt>:
  40ab80:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40ab84:	ldr	x17, [x16, #1504]
  40ab88:	add	x16, x16, #0x5e0
  40ab8c:	br	x17

000000000040ab90 <trivial_hash_func@plt>:
  40ab90:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40ab94:	ldr	x17, [x16, #1512]
  40ab98:	add	x16, x16, #0x5e8
  40ab9c:	br	x17

000000000040aba0 <trivial_compare_func@plt>:
  40aba0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40aba4:	ldr	x17, [x16, #1520]
  40aba8:	add	x16, x16, #0x5f0
  40abac:	br	x17

000000000040abb0 <socket@plt>:
  40abb0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40abb4:	ldr	x17, [x16, #1528]
  40abb8:	add	x16, x16, #0x5f8
  40abbc:	br	x17

000000000040abc0 <strnlen@plt>:
  40abc0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40abc4:	ldr	x17, [x16, #1536]
  40abc8:	add	x16, x16, #0x600
  40abcc:	br	x17

000000000040abd0 <bind@plt>:
  40abd0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40abd4:	ldr	x17, [x16, #1544]
  40abd8:	add	x16, x16, #0x608
  40abdc:	br	x17

000000000040abe0 <listen@plt>:
  40abe0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40abe4:	ldr	x17, [x16, #1552]
  40abe8:	add	x16, x16, #0x610
  40abec:	br	x17

000000000040abf0 <sockaddr_un_unlink@plt>:
  40abf0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40abf4:	ldr	x17, [x16, #1560]
  40abf8:	add	x16, x16, #0x618
  40abfc:	br	x17

000000000040ac00 <sd_event_ref@plt>:
  40ac00:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40ac04:	ldr	x17, [x16, #1568]
  40ac08:	add	x16, x16, #0x620
  40ac0c:	br	x17

000000000040ac10 <log_assert_failed_return_realm@plt>:
  40ac10:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40ac14:	ldr	x17, [x16, #1576]
  40ac18:	add	x16, x16, #0x628
  40ac1c:	br	x17

000000000040ac20 <accept4@plt>:
  40ac20:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40ac24:	ldr	x17, [x16, #1584]
  40ac28:	add	x16, x16, #0x630
  40ac2c:	br	x17

000000000040ac30 <getpeercred@plt>:
  40ac30:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40ac34:	ldr	x17, [x16, #1592]
  40ac38:	add	x16, x16, #0x638
  40ac3c:	br	x17

000000000040ac40 <sd_event_source_set_enabled@plt>:
  40ac40:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40ac44:	ldr	x17, [x16, #1600]
  40ac48:	add	x16, x16, #0x640
  40ac4c:	br	x17

000000000040ac50 <strscpy@plt>:
  40ac50:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40ac54:	ldr	x17, [x16, #1608]
  40ac58:	add	x16, x16, #0x648
  40ac5c:	br	x17

000000000040ac60 <connect@plt>:
  40ac60:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40ac64:	ldr	x17, [x16, #1616]
  40ac68:	add	x16, x16, #0x650
  40ac6c:	br	x17

000000000040ac70 <send@plt>:
  40ac70:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40ac74:	ldr	x17, [x16, #1624]
  40ac78:	add	x16, x16, #0x658
  40ac7c:	br	x17

000000000040ac80 <clock_boottime_or_monotonic@plt>:
  40ac80:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40ac84:	ldr	x17, [x16, #1632]
  40ac88:	add	x16, x16, #0x660
  40ac8c:	br	x17

000000000040ac90 <sd_event_source_get_event@plt>:
  40ac90:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40ac94:	ldr	x17, [x16, #1640]
  40ac98:	add	x16, x16, #0x668
  40ac9c:	br	x17

000000000040aca0 <next_datagram_size_fd@plt>:
  40aca0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40aca4:	ldr	x17, [x16, #1648]
  40aca8:	add	x16, x16, #0x670
  40acac:	br	x17

000000000040acb0 <cmsg_close_all@plt>:
  40acb0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40acb4:	ldr	x17, [x16, #1656]
  40acb8:	add	x16, x16, #0x678
  40acbc:	br	x17

000000000040acc0 <sd_device_get_sysnum@plt>:
  40acc0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40acc4:	ldr	x17, [x16, #1664]
  40acc8:	add	x16, x16, #0x680
  40accc:	br	x17

000000000040acd0 <util_resolve_subsys_kernel@plt>:
  40acd0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40acd4:	ldr	x17, [x16, #1672]
  40acd8:	add	x16, x16, #0x688
  40acdc:	br	x17

000000000040ace0 <sd_device_get_sysattr_value@plt>:
  40ace0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40ace4:	ldr	x17, [x16, #1680]
  40ace8:	add	x16, x16, #0x690
  40acec:	br	x17

000000000040acf0 <sd_device_get_devlink_first@plt>:
  40acf0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40acf4:	ldr	x17, [x16, #1688]
  40acf8:	add	x16, x16, #0x698
  40acfc:	br	x17

000000000040ad00 <strpcpyl@plt>:
  40ad00:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40ad04:	ldr	x17, [x16, #1696]
  40ad08:	add	x16, x16, #0x6a0
  40ad0c:	br	x17

000000000040ad10 <sd_device_get_devlink_next@plt>:
  40ad10:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40ad14:	ldr	x17, [x16, #1704]
  40ad18:	add	x16, x16, #0x6a8
  40ad1c:	br	x17

000000000040ad20 <strpcpy@plt>:
  40ad20:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40ad24:	ldr	x17, [x16, #1712]
  40ad28:	add	x16, x16, #0x6b0
  40ad2c:	br	x17

000000000040ad30 <sd_device_get_driver@plt>:
  40ad30:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40ad34:	ldr	x17, [x16, #1720]
  40ad38:	add	x16, x16, #0x6b8
  40ad3c:	br	x17

000000000040ad40 <strspn@plt>:
  40ad40:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40ad44:	ldr	x17, [x16, #1728]
  40ad48:	add	x16, x16, #0x6c0
  40ad4c:	br	x17

000000000040ad50 <strpcpyf@plt>:
  40ad50:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40ad54:	ldr	x17, [x16, #1736]
  40ad58:	add	x16, x16, #0x6c8
  40ad5c:	br	x17

000000000040ad60 <delete_trailing_chars@plt>:
  40ad60:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40ad64:	ldr	x17, [x16, #1744]
  40ad68:	add	x16, x16, #0x6d0
  40ad6c:	br	x17

000000000040ad70 <util_replace_chars@plt>:
  40ad70:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40ad74:	ldr	x17, [x16, #1752]
  40ad78:	add	x16, x16, #0x6d8
  40ad7c:	br	x17

000000000040ad80 <strnpcpy@plt>:
  40ad80:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40ad84:	ldr	x17, [x16, #1760]
  40ad88:	add	x16, x16, #0x6e0
  40ad8c:	br	x17

000000000040ad90 <util_replace_whitespace@plt>:
  40ad90:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40ad94:	ldr	x17, [x16, #1768]
  40ad98:	add	x16, x16, #0x6e8
  40ad9c:	br	x17

000000000040ada0 <strnscpy@plt>:
  40ada0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40ada4:	ldr	x17, [x16, #1776]
  40ada8:	add	x16, x16, #0x6f0
  40adac:	br	x17

000000000040adb0 <endswith@plt>:
  40adb0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40adb4:	ldr	x17, [x16, #1784]
  40adb8:	add	x16, x16, #0x6f8
  40adbc:	br	x17

000000000040adc0 <memcpy@plt>:
  40adc0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40adc4:	ldr	x17, [x16, #1792]
  40adc8:	add	x16, x16, #0x700
  40adcc:	br	x17

000000000040add0 <pipe2@plt>:
  40add0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40add4:	ldr	x17, [x16, #1800]
  40add8:	add	x16, x16, #0x708
  40addc:	br	x17

000000000040ade0 <strv_split_full@plt>:
  40ade0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40ade4:	ldr	x17, [x16, #1808]
  40ade8:	add	x16, x16, #0x710
  40adec:	br	x17

000000000040adf0 <path_is_absolute@plt>:
  40adf0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40adf4:	ldr	x17, [x16, #1816]
  40adf8:	add	x16, x16, #0x718
  40adfc:	br	x17

000000000040ae00 <path_join_internal@plt>:
  40ae00:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40ae04:	ldr	x17, [x16, #1824]
  40ae08:	add	x16, x16, #0x720
  40ae0c:	br	x17

000000000040ae10 <device_get_properties_strv@plt>:
  40ae10:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40ae14:	ldr	x17, [x16, #1832]
  40ae18:	add	x16, x16, #0x728
  40ae1c:	br	x17

000000000040ae20 <sd_event_add_child@plt>:
  40ae20:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40ae24:	ldr	x17, [x16, #1840]
  40ae28:	add	x16, x16, #0x730
  40ae2c:	br	x17

000000000040ae30 <strv_free@plt>:
  40ae30:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40ae34:	ldr	x17, [x16, #1848]
  40ae38:	add	x16, x16, #0x738
  40ae3c:	br	x17

000000000040ae40 <close_all_fds@plt>:
  40ae40:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40ae44:	ldr	x17, [x16, #1856]
  40ae48:	add	x16, x16, #0x740
  40ae4c:	br	x17

000000000040ae50 <rlimit_nofile_safe@plt>:
  40ae50:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40ae54:	ldr	x17, [x16, #1864]
  40ae58:	add	x16, x16, #0x748
  40ae5c:	br	x17

000000000040ae60 <execve@plt>:
  40ae60:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40ae64:	ldr	x17, [x16, #1872]
  40ae68:	add	x16, x16, #0x750
  40ae6c:	br	x17

000000000040ae70 <device_read_db_internal@plt>:
  40ae70:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40ae74:	ldr	x17, [x16, #1880]
  40ae78:	add	x16, x16, #0x758
  40ae7c:	br	x17

000000000040ae80 <device_clone_with_db@plt>:
  40ae80:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40ae84:	ldr	x17, [x16, #1888]
  40ae88:	add	x16, x16, #0x760
  40ae8c:	br	x17

000000000040ae90 <device_add_property@plt>:
  40ae90:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40ae94:	ldr	x17, [x16, #1896]
  40ae98:	add	x16, x16, #0x768
  40ae9c:	br	x17

000000000040aea0 <rtnl_set_link_name@plt>:
  40aea0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40aea4:	ldr	x17, [x16, #1904]
  40aea8:	add	x16, x16, #0x770
  40aeac:	br	x17

000000000040aeb0 <device_rename@plt>:
  40aeb0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40aeb4:	ldr	x17, [x16, #1912]
  40aeb8:	add	x16, x16, #0x778
  40aebc:	br	x17

000000000040aec0 <uid_is_valid@plt>:
  40aec0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40aec4:	ldr	x17, [x16, #1920]
  40aec8:	add	x16, x16, #0x780
  40aecc:	br	x17

000000000040aed0 <device_get_devnode_uid@plt>:
  40aed0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40aed4:	ldr	x17, [x16, #1928]
  40aed8:	add	x16, x16, #0x788
  40aedc:	br	x17

000000000040aee0 <device_get_devnode_gid@plt>:
  40aee0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40aee4:	ldr	x17, [x16, #1936]
  40aee8:	add	x16, x16, #0x790
  40aeec:	br	x17

000000000040aef0 <device_set_is_initialized@plt>:
  40aef0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40aef4:	ldr	x17, [x16, #1944]
  40aef8:	add	x16, x16, #0x798
  40aefc:	br	x17

000000000040af00 <device_get_devnode_mode@plt>:
  40af00:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40af04:	ldr	x17, [x16, #1952]
  40af08:	add	x16, x16, #0x7a0
  40af0c:	br	x17

000000000040af10 <format_timespan@plt>:
  40af10:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40af14:	ldr	x17, [x16, #1960]
  40af18:	add	x16, x16, #0x7a8
  40af1c:	br	x17

000000000040af20 <usleep@plt>:
  40af20:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40af24:	ldr	x17, [x16, #1968]
  40af28:	add	x16, x16, #0x7b0
  40af2c:	br	x17

000000000040af30 <strv_split_newlines@plt>:
  40af30:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40af34:	ldr	x17, [x16, #1976]
  40af38:	add	x16, x16, #0x7b8
  40af3c:	br	x17

000000000040af40 <device_get_id_filename@plt>:
  40af40:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40af44:	ldr	x17, [x16, #1984]
  40af48:	add	x16, x16, #0x7c0
  40af4c:	br	x17

000000000040af50 <util_path_encode@plt>:
  40af50:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40af54:	ldr	x17, [x16, #1992]
  40af58:	add	x16, x16, #0x7c8
  40af5c:	br	x17

000000000040af60 <device_get_devlink_priority@plt>:
  40af60:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40af64:	ldr	x17, [x16, #2000]
  40af68:	add	x16, x16, #0x7d0
  40af6c:	br	x17

000000000040af70 <rmdir@plt>:
  40af70:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40af74:	ldr	x17, [x16, #2008]
  40af78:	add	x16, x16, #0x7d8
  40af7c:	br	x17

000000000040af80 <opendir@plt>:
  40af80:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40af84:	ldr	x17, [x16, #2016]
  40af88:	add	x16, x16, #0x7e0
  40af8c:	br	x17

000000000040af90 <readdir64@plt>:
  40af90:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40af94:	ldr	x17, [x16, #2024]
  40af98:	add	x16, x16, #0x7e8
  40af9c:	br	x17

000000000040afa0 <sd_device_new_from_device_id@plt>:
  40afa0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40afa4:	ldr	x17, [x16, #2032]
  40afa8:	add	x16, x16, #0x7f0
  40afac:	br	x17

000000000040afb0 <free_and_strdup@plt>:
  40afb0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40afb4:	ldr	x17, [x16, #2040]
  40afb8:	add	x16, x16, #0x7f8
  40afbc:	br	x17

000000000040afc0 <closedir@plt>:
  40afc0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40afc4:	ldr	x17, [x16, #2048]
  40afc8:	add	x16, x16, #0x800
  40afcc:	br	x17

000000000040afd0 <rmdir_parents@plt>:
  40afd0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40afd4:	ldr	x17, [x16, #2056]
  40afd8:	add	x16, x16, #0x808
  40afdc:	br	x17

000000000040afe0 <mkdir_parents@plt>:
  40afe0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40afe4:	ldr	x17, [x16, #2064]
  40afe8:	add	x16, x16, #0x810
  40afec:	br	x17

000000000040aff0 <__lxstat64@plt>:
  40aff0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40aff4:	ldr	x17, [x16, #2072]
  40aff8:	add	x16, x16, #0x818
  40affc:	br	x17

000000000040b000 <chmod_and_chown@plt>:
  40b000:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b004:	ldr	x17, [x16, #2080]
  40b008:	add	x16, x16, #0x820
  40b00c:	br	x17

000000000040b010 <mac_smack_apply@plt>:
  40b010:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b014:	ldr	x17, [x16, #2088]
  40b018:	add	x16, x16, #0x828
  40b01c:	br	x17

000000000040b020 <mac_selinux_apply@plt>:
  40b020:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b024:	ldr	x17, [x16, #2096]
  40b028:	add	x16, x16, #0x830
  40b02c:	br	x17

000000000040b030 <mac_selinux_fix@plt>:
  40b030:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b034:	ldr	x17, [x16, #2104]
  40b038:	add	x16, x16, #0x838
  40b03c:	br	x17

000000000040b040 <utimensat@plt>:
  40b040:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b044:	ldr	x17, [x16, #2112]
  40b048:	add	x16, x16, #0x840
  40b04c:	br	x17

000000000040b050 <snprintf@plt>:
  40b050:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b054:	ldr	x17, [x16, #2120]
  40b058:	add	x16, x16, #0x848
  40b05c:	br	x17

000000000040b060 <dirname_malloc@plt>:
  40b060:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b064:	ldr	x17, [x16, #2128]
  40b068:	add	x16, x16, #0x850
  40b06c:	br	x17

000000000040b070 <path_make_relative@plt>:
  40b070:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b074:	ldr	x17, [x16, #2136]
  40b078:	add	x16, x16, #0x858
  40b07c:	br	x17

000000000040b080 <mac_selinux_create_file_clear@plt>:
  40b080:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b084:	ldr	x17, [x16, #2144]
  40b088:	add	x16, x16, #0x860
  40b08c:	br	x17

000000000040b090 <mkdir_parents_label@plt>:
  40b090:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b094:	ldr	x17, [x16, #2152]
  40b098:	add	x16, x16, #0x868
  40b09c:	br	x17

000000000040b0a0 <mac_selinux_create_file_prepare@plt>:
  40b0a0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b0a4:	ldr	x17, [x16, #2160]
  40b0a8:	add	x16, x16, #0x870
  40b0ac:	br	x17

000000000040b0b0 <symlink@plt>:
  40b0b0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b0b4:	ldr	x17, [x16, #2168]
  40b0b8:	add	x16, x16, #0x878
  40b0bc:	br	x17

000000000040b0c0 <readlink_malloc@plt>:
  40b0c0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b0c4:	ldr	x17, [x16, #2176]
  40b0c8:	add	x16, x16, #0x880
  40b0cc:	br	x17

000000000040b0d0 <label_fix@plt>:
  40b0d0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b0d4:	ldr	x17, [x16, #2184]
  40b0d8:	add	x16, x16, #0x888
  40b0dc:	br	x17

000000000040b0e0 <rename@plt>:
  40b0e0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b0e4:	ldr	x17, [x16, #2192]
  40b0e8:	add	x16, x16, #0x890
  40b0ec:	br	x17

000000000040b0f0 <paths_check_timestamp@plt>:
  40b0f0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b0f4:	ldr	x17, [x16, #2200]
  40b0f8:	add	x16, x16, #0x898
  40b0fc:	br	x17

000000000040b100 <conf_files_list_strv@plt>:
  40b100:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b104:	ldr	x17, [x16, #2208]
  40b108:	add	x16, x16, #0x8a0
  40b10c:	br	x17

000000000040b110 <safe_fclose@plt>:
  40b110:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b114:	ldr	x17, [x16, #2216]
  40b118:	add	x16, x16, #0x8a8
  40b11c:	br	x17

000000000040b120 <fopen64@plt>:
  40b120:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b124:	ldr	x17, [x16, #2224]
  40b128:	add	x16, x16, #0x8b0
  40b12c:	br	x17

000000000040b130 <fileno@plt>:
  40b130:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b134:	ldr	x17, [x16, #2232]
  40b138:	add	x16, x16, #0x8b8
  40b13c:	br	x17

000000000040b140 <fd_warn_permissions@plt>:
  40b140:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b144:	ldr	x17, [x16, #2240]
  40b148:	add	x16, x16, #0x8c0
  40b14c:	br	x17

000000000040b150 <null_or_empty_fd@plt>:
  40b150:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b154:	ldr	x17, [x16, #2248]
  40b158:	add	x16, x16, #0x8c8
  40b15c:	br	x17

000000000040b160 <read_line_full@plt>:
  40b160:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b164:	ldr	x17, [x16, #2256]
  40b168:	add	x16, x16, #0x8d0
  40b16c:	br	x17

000000000040b170 <strextend_with_separator@plt>:
  40b170:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b174:	ldr	x17, [x16, #2264]
  40b178:	add	x16, x16, #0x8d8
  40b17c:	br	x17

000000000040b180 <memchr@plt>:
  40b180:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b184:	ldr	x17, [x16, #2272]
  40b188:	add	x16, x16, #0x8e0
  40b18c:	br	x17

000000000040b190 <strv_extend@plt>:
  40b190:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b194:	ldr	x17, [x16, #2280]
  40b198:	add	x16, x16, #0x8e8
  40b19c:	br	x17

000000000040b1a0 <strscpyl@plt>:
  40b1a0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b1a4:	ldr	x17, [x16, #2288]
  40b1a8:	add	x16, x16, #0x8f0
  40b1ac:	br	x17

000000000040b1b0 <__xstat64@plt>:
  40b1b0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b1b4:	ldr	x17, [x16, #2296]
  40b1b8:	add	x16, x16, #0x8f8
  40b1bc:	br	x17

000000000040b1c0 <xescape_full@plt>:
  40b1c0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b1c4:	ldr	x17, [x16, #2304]
  40b1c8:	add	x16, x16, #0x900
  40b1cc:	br	x17

000000000040b1d0 <mkdir_p@plt>:
  40b1d0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b1d4:	ldr	x17, [x16, #2312]
  40b1d8:	add	x16, x16, #0x908
  40b1dc:	br	x17

000000000040b1e0 <strv_find@plt>:
  40b1e0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b1e4:	ldr	x17, [x16, #2320]
  40b1e8:	add	x16, x16, #0x910
  40b1ec:	br	x17

000000000040b1f0 <strstr@plt>:
  40b1f0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b1f4:	ldr	x17, [x16, #2328]
  40b1f8:	add	x16, x16, #0x918
  40b1fc:	br	x17

000000000040b200 <parse_mode@plt>:
  40b200:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b204:	ldr	x17, [x16, #2336]
  40b208:	add	x16, x16, #0x920
  40b20c:	br	x17

000000000040b210 <parse_uid@plt>:
  40b210:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b214:	ldr	x17, [x16, #2344]
  40b218:	add	x16, x16, #0x928
  40b21c:	br	x17

000000000040b220 <safe_atoi@plt>:
  40b220:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b224:	ldr	x17, [x16, #2352]
  40b228:	add	x16, x16, #0x930
  40b22c:	br	x17

000000000040b230 <get_user_creds@plt>:
  40b230:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b234:	ldr	x17, [x16, #2360]
  40b238:	add	x16, x16, #0x938
  40b23c:	br	x17

000000000040b240 <get_group_creds@plt>:
  40b240:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b244:	ldr	x17, [x16, #2368]
  40b248:	add	x16, x16, #0x940
  40b24c:	br	x17

000000000040b250 <strpbrk@plt>:
  40b250:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b254:	ldr	x17, [x16, #2376]
  40b258:	add	x16, x16, #0x948
  40b25c:	br	x17

000000000040b260 <__ctype_b_loc@plt>:
  40b260:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b264:	ldr	x17, [x16, #2384]
  40b268:	add	x16, x16, #0x950
  40b26c:	br	x17

000000000040b270 <internal_hashmap_clear@plt>:
  40b270:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b274:	ldr	x17, [x16, #2392]
  40b278:	add	x16, x16, #0x958
  40b27c:	br	x17

000000000040b280 <internal_ordered_hashmap_ensure_allocated@plt>:
  40b280:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b284:	ldr	x17, [x16, #2400]
  40b288:	add	x16, x16, #0x960
  40b28c:	br	x17

000000000040b290 <sd_device_get_tag_first@plt>:
  40b290:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b294:	ldr	x17, [x16, #2408]
  40b298:	add	x16, x16, #0x968
  40b29c:	br	x17

000000000040b2a0 <sd_device_get_tag_next@plt>:
  40b2a0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b2a4:	ldr	x17, [x16, #2416]
  40b2a8:	add	x16, x16, #0x970
  40b2ac:	br	x17

000000000040b2b0 <sysctl_normalize@plt>:
  40b2b0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b2b4:	ldr	x17, [x16, #2424]
  40b2b8:	add	x16, x16, #0x978
  40b2bc:	br	x17

000000000040b2c0 <device_set_devlink_priority@plt>:
  40b2c0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b2c4:	ldr	x17, [x16, #2432]
  40b2c8:	add	x16, x16, #0x980
  40b2cc:	br	x17

000000000040b2d0 <sysctl_read@plt>:
  40b2d0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b2d4:	ldr	x17, [x16, #2440]
  40b2d8:	add	x16, x16, #0x988
  40b2dc:	br	x17

000000000040b2e0 <proc_cmdline_get_key@plt>:
  40b2e0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b2e4:	ldr	x17, [x16, #2448]
  40b2e8:	add	x16, x16, #0x990
  40b2ec:	br	x17

000000000040b2f0 <device_set_db_persist@plt>:
  40b2f0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b2f4:	ldr	x17, [x16, #2456]
  40b2f8:	add	x16, x16, #0x998
  40b2fc:	br	x17

000000000040b300 <memset@plt>:
  40b300:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b304:	ldr	x17, [x16, #2464]
  40b308:	add	x16, x16, #0x9a0
  40b30c:	br	x17

000000000040b310 <device_cleanup_devlinks@plt>:
  40b310:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b314:	ldr	x17, [x16, #2472]
  40b318:	add	x16, x16, #0x9a8
  40b31c:	br	x17

000000000040b320 <detect_virtualization@plt>:
  40b320:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b324:	ldr	x17, [x16, #2480]
  40b328:	add	x16, x16, #0x9b0
  40b32c:	br	x17

000000000040b330 <virtualization_to_string@plt>:
  40b330:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b334:	ldr	x17, [x16, #2488]
  40b338:	add	x16, x16, #0x9b8
  40b33c:	br	x17

000000000040b340 <device_cleanup_tags@plt>:
  40b340:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b344:	ldr	x17, [x16, #2496]
  40b348:	add	x16, x16, #0x9c0
  40b34c:	br	x17

000000000040b350 <sd_device_get_property_first@plt>:
  40b350:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b354:	ldr	x17, [x16, #2504]
  40b358:	add	x16, x16, #0x9c8
  40b35c:	br	x17

000000000040b360 <sd_device_get_property_next@plt>:
  40b360:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b364:	ldr	x17, [x16, #2512]
  40b368:	add	x16, x16, #0x9d0
  40b36c:	br	x17

000000000040b370 <fnmatch@plt>:
  40b370:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b374:	ldr	x17, [x16, #2520]
  40b378:	add	x16, x16, #0x9d8
  40b37c:	br	x17

000000000040b380 <strstrip@plt>:
  40b380:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b384:	ldr	x17, [x16, #2528]
  40b388:	add	x16, x16, #0x9e0
  40b38c:	br	x17

000000000040b390 <sysctl_write@plt>:
  40b390:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b394:	ldr	x17, [x16, #2536]
  40b398:	add	x16, x16, #0x9e8
  40b39c:	br	x17

000000000040b3a0 <uname_architecture@plt>:
  40b3a0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b3a4:	ldr	x17, [x16, #2544]
  40b3a8:	add	x16, x16, #0x9f0
  40b3ac:	br	x17

000000000040b3b0 <architecture_to_string@plt>:
  40b3b0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b3b4:	ldr	x17, [x16, #2552]
  40b3b8:	add	x16, x16, #0x9f8
  40b3bc:	br	x17

000000000040b3c0 <device_remove_tag@plt>:
  40b3c0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b3c4:	ldr	x17, [x16, #2560]
  40b3c8:	add	x16, x16, #0xa00
  40b3cc:	br	x17

000000000040b3d0 <device_add_tag@plt>:
  40b3d0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b3d4:	ldr	x17, [x16, #2568]
  40b3d8:	add	x16, x16, #0xa08
  40b3dc:	br	x17

000000000040b3e0 <device_add_devlink@plt>:
  40b3e0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b3e4:	ldr	x17, [x16, #2576]
  40b3e8:	add	x16, x16, #0xa10
  40b3ec:	br	x17

000000000040b3f0 <dirfd@plt>:
  40b3f0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b3f4:	ldr	x17, [x16, #2584]
  40b3f8:	add	x16, x16, #0xa18
  40b3fc:	br	x17

000000000040b400 <faccessat@plt>:
  40b400:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b404:	ldr	x17, [x16, #2592]
  40b408:	add	x16, x16, #0xa20
  40b40c:	br	x17

000000000040b410 <strcpy@plt>:
  40b410:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b414:	ldr	x17, [x16, #2600]
  40b418:	add	x16, x16, #0xa28
  40b41c:	br	x17

000000000040b420 <inotify_init1@plt>:
  40b420:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b424:	ldr	x17, [x16, #2608]
  40b428:	add	x16, x16, #0xa30
  40b42c:	br	x17

000000000040b430 <readlinkat_malloc@plt>:
  40b430:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b434:	ldr	x17, [x16, #2616]
  40b438:	add	x16, x16, #0xa38
  40b43c:	br	x17

000000000040b440 <unlinkat@plt>:
  40b440:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b444:	ldr	x17, [x16, #2624]
  40b448:	add	x16, x16, #0xa40
  40b44c:	br	x17

000000000040b450 <inotify_add_watch@plt>:
  40b450:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b454:	ldr	x17, [x16, #2632]
  40b458:	add	x16, x16, #0xa48
  40b45c:	br	x17

000000000040b460 <device_set_watch_handle@plt>:
  40b460:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b464:	ldr	x17, [x16, #2640]
  40b468:	add	x16, x16, #0xa50
  40b46c:	br	x17

000000000040b470 <device_get_watch_handle@plt>:
  40b470:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b474:	ldr	x17, [x16, #2648]
  40b478:	add	x16, x16, #0xa58
  40b47c:	br	x17

000000000040b480 <inotify_rm_watch@plt>:
  40b480:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b484:	ldr	x17, [x16, #2656]
  40b488:	add	x16, x16, #0xa60
  40b48c:	br	x17

000000000040b490 <fprintf@plt>:
  40b490:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b494:	ldr	x17, [x16, #2664]
  40b498:	add	x16, x16, #0xa68
  40b49c:	br	x17

000000000040b4a0 <strcspn@plt>:
  40b4a0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b4a4:	ldr	x17, [x16, #2672]
  40b4a8:	add	x16, x16, #0xa70
  40b4ac:	br	x17

000000000040b4b0 <strv_length@plt>:
  40b4b0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b4b4:	ldr	x17, [x16, #2680]
  40b4b8:	add	x16, x16, #0xa78
  40b4bc:	br	x17

000000000040b4c0 <strjoin_real@plt>:
  40b4c0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b4c4:	ldr	x17, [x16, #2688]
  40b4c8:	add	x16, x16, #0xa80
  40b4cc:	br	x17

000000000040b4d0 <sd_hwdb_seek@plt>:
  40b4d0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b4d4:	ldr	x17, [x16, #2696]
  40b4d8:	add	x16, x16, #0xa88
  40b4dc:	br	x17

000000000040b4e0 <sd_hwdb_enumerate@plt>:
  40b4e0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b4e4:	ldr	x17, [x16, #2704]
  40b4e8:	add	x16, x16, #0xa90
  40b4ec:	br	x17

000000000040b4f0 <safe_atou16_full@plt>:
  40b4f0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b4f4:	ldr	x17, [x16, #2712]
  40b4f8:	add	x16, x16, #0xa98
  40b4fc:	br	x17

000000000040b500 <sd_hwdb_new@plt>:
  40b500:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b504:	ldr	x17, [x16, #2720]
  40b508:	add	x16, x16, #0xaa0
  40b50c:	br	x17

000000000040b510 <sd_hwdb_unref@plt>:
  40b510:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b514:	ldr	x17, [x16, #2728]
  40b518:	add	x16, x16, #0xaa8
  40b51c:	br	x17

000000000040b520 <hwdb_validate@plt>:
  40b520:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b524:	ldr	x17, [x16, #2736]
  40b528:	add	x16, x16, #0xab0
  40b52c:	br	x17

000000000040b530 <sd_device_get_parent_with_subsystem_devtype@plt>:
  40b530:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b534:	ldr	x17, [x16, #2744]
  40b538:	add	x16, x16, #0xab8
  40b53c:	br	x17

000000000040b540 <strrchr@plt>:
  40b540:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b544:	ldr	x17, [x16, #2752]
  40b548:	add	x16, x16, #0xac0
  40b54c:	br	x17

000000000040b550 <strtoul@plt>:
  40b550:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b554:	ldr	x17, [x16, #2760]
  40b558:	add	x16, x16, #0xac8
  40b55c:	br	x17

000000000040b560 <strtol@plt>:
  40b560:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b564:	ldr	x17, [x16, #2768]
  40b568:	add	x16, x16, #0xad0
  40b56c:	br	x17

000000000040b570 <sd_device_set_sysattr_value@plt>:
  40b570:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b574:	ldr	x17, [x16, #2776]
  40b578:	add	x16, x16, #0xad8
  40b57c:	br	x17

000000000040b580 <__isoc99_sscanf@plt>:
  40b580:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b584:	ldr	x17, [x16, #2784]
  40b588:	add	x16, x16, #0xae0
  40b58c:	br	x17

000000000040b590 <ascii_strlower@plt>:
  40b590:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b594:	ldr	x17, [x16, #2792]
  40b598:	add	x16, x16, #0xae8
  40b59c:	br	x17

000000000040b5a0 <chase_symlinks@plt>:
  40b5a0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b5a4:	ldr	x17, [x16, #2800]
  40b5a8:	add	x16, x16, #0xaf0
  40b5ac:	br	x17

000000000040b5b0 <sd_device_new_from_syspath@plt>:
  40b5b0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b5b4:	ldr	x17, [x16, #2808]
  40b5b8:	add	x16, x16, #0xaf8
  40b5bc:	br	x17

000000000040b5c0 <strncpy@plt>:
  40b5c0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b5c4:	ldr	x17, [x16, #2816]
  40b5c8:	add	x16, x16, #0xb00
  40b5cc:	br	x17

000000000040b5d0 <safe_atollu@plt>:
  40b5d0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b5d4:	ldr	x17, [x16, #2824]
  40b5d8:	add	x16, x16, #0xb08
  40b5dc:	br	x17

000000000040b5e0 <sd_device_new_from_subsystem_sysname@plt>:
  40b5e0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b5e4:	ldr	x17, [x16, #2832]
  40b5e8:	add	x16, x16, #0xb10
  40b5ec:	br	x17

000000000040b5f0 <read_one_line_file@plt>:
  40b5f0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b5f4:	ldr	x17, [x16, #2840]
  40b5f8:	add	x16, x16, #0xb18
  40b5fc:	br	x17

000000000040b600 <rewinddir@plt>:
  40b600:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b604:	ldr	x17, [x16, #2848]
  40b608:	add	x16, x16, #0xb20
  40b60c:	br	x17

000000000040b610 <vasprintf@plt>:
  40b610:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b614:	ldr	x17, [x16, #2856]
  40b618:	add	x16, x16, #0xb28
  40b61c:	br	x17

000000000040b620 <exit@plt>:
  40b620:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b624:	ldr	x17, [x16, #2864]
  40b628:	add	x16, x16, #0xb30
  40b62c:	br	x17

000000000040b630 <udev_util_encode_string@plt>:
  40b630:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b634:	ldr	x17, [x16, #2872]
  40b638:	add	x16, x16, #0xb38
  40b63c:	br	x17

000000000040b640 <sprintf@plt>:
  40b640:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b644:	ldr	x17, [x16, #2880]
  40b648:	add	x16, x16, #0xb40
  40b64c:	br	x17

000000000040b650 <calloc@plt>:
  40b650:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b654:	ldr	x17, [x16, #2888]
  40b658:	add	x16, x16, #0xb48
  40b65c:	br	x17

000000000040b660 <config_parse@plt>:
  40b660:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b664:	ldr	x17, [x16, #2896]
  40b668:	add	x16, x16, #0xb50
  40b66c:	br	x17

000000000040b670 <condition_test_list@plt>:
  40b670:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b674:	ldr	x17, [x16, #2904]
  40b678:	add	x16, x16, #0xb58
  40b67c:	br	x17

000000000040b680 <proc_cmdline_get_bool@plt>:
  40b680:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b684:	ldr	x17, [x16, #2912]
  40b688:	add	x16, x16, #0xb60
  40b68c:	br	x17

000000000040b690 <ethtool_set_glinksettings@plt>:
  40b690:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b694:	ldr	x17, [x16, #2920]
  40b698:	add	x16, x16, #0xb68
  40b69c:	br	x17

000000000040b6a0 <ethtool_set_wol@plt>:
  40b6a0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b6a4:	ldr	x17, [x16, #2928]
  40b6a8:	add	x16, x16, #0xb70
  40b6ac:	br	x17

000000000040b6b0 <wol_to_string@plt>:
  40b6b0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b6b4:	ldr	x17, [x16, #2936]
  40b6b8:	add	x16, x16, #0xb78
  40b6bc:	br	x17

000000000040b6c0 <ethtool_set_features@plt>:
  40b6c0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b6c4:	ldr	x17, [x16, #2944]
  40b6c8:	add	x16, x16, #0xb80
  40b6cc:	br	x17

000000000040b6d0 <ethtool_set_channels@plt>:
  40b6d0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b6d4:	ldr	x17, [x16, #2952]
  40b6d8:	add	x16, x16, #0xb88
  40b6dc:	br	x17

000000000040b6e0 <ethtool_set_nic_buffer_size@plt>:
  40b6e0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b6e4:	ldr	x17, [x16, #2960]
  40b6e8:	add	x16, x16, #0xb90
  40b6ec:	br	x17

000000000040b6f0 <port_to_string@plt>:
  40b6f0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b6f4:	ldr	x17, [x16, #2968]
  40b6f8:	add	x16, x16, #0xb98
  40b6fc:	br	x17

000000000040b700 <memeqzero@plt>:
  40b700:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b704:	ldr	x17, [x16, #2976]
  40b708:	add	x16, x16, #0xba0
  40b70c:	br	x17

000000000040b710 <ethtool_set_speed@plt>:
  40b710:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b714:	ldr	x17, [x16, #2984]
  40b718:	add	x16, x16, #0xba8
  40b71c:	br	x17

000000000040b720 <duplex_to_string@plt>:
  40b720:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b724:	ldr	x17, [x16, #2992]
  40b728:	add	x16, x16, #0xbb0
  40b72c:	br	x17

000000000040b730 <random_bytes@plt>:
  40b730:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b734:	ldr	x17, [x16, #3000]
  40b738:	add	x16, x16, #0xbb8
  40b73c:	br	x17

000000000040b740 <rtnl_set_link_properties@plt>:
  40b740:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b744:	ldr	x17, [x16, #3008]
  40b748:	add	x16, x16, #0xbc0
  40b74c:	br	x17

000000000040b750 <ethtool_get_driver@plt>:
  40b750:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b754:	ldr	x17, [x16, #3016]
  40b758:	add	x16, x16, #0xbc8
  40b75c:	br	x17

000000000040b760 <string_table_lookup@plt>:
  40b760:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b764:	ldr	x17, [x16, #3024]
  40b768:	add	x16, x16, #0xbd0
  40b76c:	br	x17

000000000040b770 <log_syntax_internal@plt>:
  40b770:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b774:	ldr	x17, [x16, #3032]
  40b778:	add	x16, x16, #0xbd8
  40b77c:	br	x17

000000000040b780 <split@plt>:
  40b780:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b784:	ldr	x17, [x16, #3040]
  40b788:	add	x16, x16, #0xbe0
  40b78c:	br	x17

000000000040b790 <realloc@plt>:
  40b790:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b794:	ldr	x17, [x16, #3048]
  40b798:	add	x16, x16, #0xbe8
  40b79c:	br	x17

000000000040b7a0 <condition_free_list_type@plt>:
  40b7a0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b7a4:	ldr	x17, [x16, #3056]
  40b7a8:	add	x16, x16, #0xbf0
  40b7ac:	br	x17

000000000040b7b0 <getenv@plt>:
  40b7b0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b7b4:	ldr	x17, [x16, #3064]
  40b7b8:	add	x16, x16, #0xbf8
  40b7bc:	br	x17

000000000040b7c0 <module_load_and_warn@plt>:
  40b7c0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b7c4:	ldr	x17, [x16, #3072]
  40b7c8:	add	x16, x16, #0xc00
  40b7cc:	br	x17

000000000040b7d0 <kmod_new@plt>:
  40b7d0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b7d4:	ldr	x17, [x16, #3080]
  40b7d8:	add	x16, x16, #0xc08
  40b7dc:	br	x17

000000000040b7e0 <kmod_set_log_fn@plt>:
  40b7e0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b7e4:	ldr	x17, [x16, #3088]
  40b7e8:	add	x16, x16, #0xc10
  40b7ec:	br	x17

000000000040b7f0 <kmod_load_resources@plt>:
  40b7f0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b7f4:	ldr	x17, [x16, #3096]
  40b7f8:	add	x16, x16, #0xc18
  40b7fc:	br	x17

000000000040b800 <kmod_unref@plt>:
  40b800:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b804:	ldr	x17, [x16, #3104]
  40b808:	add	x16, x16, #0xc20
  40b80c:	br	x17

000000000040b810 <kmod_validate_resources@plt>:
  40b810:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b814:	ldr	x17, [x16, #3112]
  40b818:	add	x16, x16, #0xc28
  40b81c:	br	x17

000000000040b820 <log_internalv_realm@plt>:
  40b820:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b824:	ldr	x17, [x16, #3120]
  40b828:	add	x16, x16, #0xc30
  40b82c:	br	x17

000000000040b830 <safe_atolli@plt>:
  40b830:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b834:	ldr	x17, [x16, #3128]
  40b838:	add	x16, x16, #0xc38
  40b83c:	br	x17

000000000040b840 <blkid_free_probe@plt>:
  40b840:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b844:	ldr	x17, [x16, #3136]
  40b848:	add	x16, x16, #0xc40
  40b84c:	br	x17

000000000040b850 <blkid_new_probe@plt>:
  40b850:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b854:	ldr	x17, [x16, #3144]
  40b858:	add	x16, x16, #0xc48
  40b85c:	br	x17

000000000040b860 <blkid_probe_set_superblocks_flags@plt>:
  40b860:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b864:	ldr	x17, [x16, #3152]
  40b868:	add	x16, x16, #0xc50
  40b86c:	br	x17

000000000040b870 <blkid_probe_filter_superblocks_usage@plt>:
  40b870:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b874:	ldr	x17, [x16, #3160]
  40b878:	add	x16, x16, #0xc58
  40b87c:	br	x17

000000000040b880 <blkid_probe_set_device@plt>:
  40b880:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b884:	ldr	x17, [x16, #3168]
  40b888:	add	x16, x16, #0xc60
  40b88c:	br	x17

000000000040b890 <blkid_probe_get_fd@plt>:
  40b890:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b894:	ldr	x17, [x16, #3176]
  40b898:	add	x16, x16, #0xc68
  40b89c:	br	x17

000000000040b8a0 <__fxstat64@plt>:
  40b8a0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b8a4:	ldr	x17, [x16, #3184]
  40b8a8:	add	x16, x16, #0xc70
  40b8ac:	br	x17

000000000040b8b0 <blkid_probe_enable_partitions@plt>:
  40b8b0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b8b4:	ldr	x17, [x16, #3192]
  40b8b8:	add	x16, x16, #0xc78
  40b8bc:	br	x17

000000000040b8c0 <blkid_probe_get_size@plt>:
  40b8c0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b8c4:	ldr	x17, [x16, #3200]
  40b8c8:	add	x16, x16, #0xc80
  40b8cc:	br	x17

000000000040b8d0 <blkid_probe_is_wholedisk@plt>:
  40b8d0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b8d4:	ldr	x17, [x16, #3208]
  40b8d8:	add	x16, x16, #0xc88
  40b8dc:	br	x17

000000000040b8e0 <blkid_probe_enable_superblocks@plt>:
  40b8e0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b8e4:	ldr	x17, [x16, #3216]
  40b8e8:	add	x16, x16, #0xc90
  40b8ec:	br	x17

000000000040b8f0 <blkid_do_fullprobe@plt>:
  40b8f0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b8f4:	ldr	x17, [x16, #3224]
  40b8f8:	add	x16, x16, #0xc98
  40b8fc:	br	x17

000000000040b900 <blkid_probe_lookup_value@plt>:
  40b900:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b904:	ldr	x17, [x16, #3232]
  40b908:	add	x16, x16, #0xca0
  40b90c:	br	x17

000000000040b910 <blkid_probe_set_partitions_flags@plt>:
  40b910:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b914:	ldr	x17, [x16, #3240]
  40b918:	add	x16, x16, #0xca8
  40b91c:	br	x17

000000000040b920 <blkid_do_safeprobe@plt>:
  40b920:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b924:	ldr	x17, [x16, #3248]
  40b928:	add	x16, x16, #0xcb0
  40b92c:	br	x17

000000000040b930 <blkid_probe_numof_values@plt>:
  40b930:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b934:	ldr	x17, [x16, #3256]
  40b938:	add	x16, x16, #0xcb8
  40b93c:	br	x17

000000000040b940 <blkid_probe_get_value@plt>:
  40b940:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b944:	ldr	x17, [x16, #3264]
  40b948:	add	x16, x16, #0xcc0
  40b94c:	br	x17

000000000040b950 <blkid_encode_string@plt>:
  40b950:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b954:	ldr	x17, [x16, #3272]
  40b958:	add	x16, x16, #0xcc8
  40b95c:	br	x17

000000000040b960 <blkid_safe_string@plt>:
  40b960:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b964:	ldr	x17, [x16, #3280]
  40b968:	add	x16, x16, #0xcd0
  40b96c:	br	x17

000000000040b970 <blkid_probe_get_partitions@plt>:
  40b970:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b974:	ldr	x17, [x16, #3288]
  40b978:	add	x16, x16, #0xcd8
  40b97c:	br	x17

000000000040b980 <blkid_partlist_numof_partitions@plt>:
  40b980:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b984:	ldr	x17, [x16, #3296]
  40b988:	add	x16, x16, #0xce0
  40b98c:	br	x17

000000000040b990 <blkid_partlist_get_partition@plt>:
  40b990:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b994:	ldr	x17, [x16, #3304]
  40b998:	add	x16, x16, #0xce8
  40b99c:	br	x17

000000000040b9a0 <blkid_partition_get_uuid@plt>:
  40b9a0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b9a4:	ldr	x17, [x16, #3312]
  40b9a8:	add	x16, x16, #0xcf0
  40b9ac:	br	x17

000000000040b9b0 <blkid_partition_get_type_string@plt>:
  40b9b0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b9b4:	ldr	x17, [x16, #3320]
  40b9b8:	add	x16, x16, #0xcf8
  40b9bc:	br	x17

000000000040b9c0 <sd_id128_from_string@plt>:
  40b9c0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b9c4:	ldr	x17, [x16, #3328]
  40b9c8:	add	x16, x16, #0xd00
  40b9cc:	br	x17

000000000040b9d0 <blkid_partition_get_flags@plt>:
  40b9d0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b9d4:	ldr	x17, [x16, #3336]
  40b9d8:	add	x16, x16, #0xd08
  40b9dc:	br	x17

000000000040b9e0 <efi_loader_get_device_part_uuid@plt>:
  40b9e0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b9e4:	ldr	x17, [x16, #3344]
  40b9e8:	add	x16, x16, #0xd10
  40b9ec:	br	x17

000000000040b9f0 <access@plt>:
  40b9f0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40b9f4:	ldr	x17, [x16, #3352]
  40b9f8:	add	x16, x16, #0xd18
  40b9fc:	br	x17

000000000040ba00 <acl_get_file@plt>:
  40ba00:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40ba04:	ldr	x17, [x16, #3360]
  40ba08:	add	x16, x16, #0xd20
  40ba0c:	br	x17

000000000040ba10 <acl_get_entry@plt>:
  40ba10:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40ba14:	ldr	x17, [x16, #3368]
  40ba18:	add	x16, x16, #0xd28
  40ba1c:	br	x17

000000000040ba20 <acl_get_tag_type@plt>:
  40ba20:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40ba24:	ldr	x17, [x16, #3376]
  40ba28:	add	x16, x16, #0xd30
  40ba2c:	br	x17

000000000040ba30 <acl_delete_entry@plt>:
  40ba30:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40ba34:	ldr	x17, [x16, #3384]
  40ba38:	add	x16, x16, #0xd38
  40ba3c:	br	x17

000000000040ba40 <acl_find_uid@plt>:
  40ba40:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40ba44:	ldr	x17, [x16, #3392]
  40ba48:	add	x16, x16, #0xd40
  40ba4c:	br	x17

000000000040ba50 <acl_get_permset@plt>:
  40ba50:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40ba54:	ldr	x17, [x16, #3400]
  40ba58:	add	x16, x16, #0xd48
  40ba5c:	br	x17

000000000040ba60 <acl_get_perm@plt>:
  40ba60:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40ba64:	ldr	x17, [x16, #3408]
  40ba68:	add	x16, x16, #0xd50
  40ba6c:	br	x17

000000000040ba70 <acl_create_entry@plt>:
  40ba70:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40ba74:	ldr	x17, [x16, #3416]
  40ba78:	add	x16, x16, #0xd58
  40ba7c:	br	x17

000000000040ba80 <acl_set_tag_type@plt>:
  40ba80:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40ba84:	ldr	x17, [x16, #3424]
  40ba88:	add	x16, x16, #0xd60
  40ba8c:	br	x17

000000000040ba90 <acl_set_qualifier@plt>:
  40ba90:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40ba94:	ldr	x17, [x16, #3432]
  40ba98:	add	x16, x16, #0xd68
  40ba9c:	br	x17

000000000040baa0 <acl_calc_mask@plt>:
  40baa0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40baa4:	ldr	x17, [x16, #3440]
  40baa8:	add	x16, x16, #0xd70
  40baac:	br	x17

000000000040bab0 <acl_set_file@plt>:
  40bab0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bab4:	ldr	x17, [x16, #3448]
  40bab8:	add	x16, x16, #0xd78
  40babc:	br	x17

000000000040bac0 <acl_add_perm@plt>:
  40bac0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bac4:	ldr	x17, [x16, #3456]
  40bac8:	add	x16, x16, #0xd80
  40bacc:	br	x17

000000000040bad0 <acl_free@plt>:
  40bad0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bad4:	ldr	x17, [x16, #3464]
  40bad8:	add	x16, x16, #0xd88
  40badc:	br	x17

000000000040bae0 <internal_set_new@plt>:
  40bae0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bae4:	ldr	x17, [x16, #3472]
  40bae8:	add	x16, x16, #0xd90
  40baec:	br	x17

000000000040baf0 <sd_device_enumerator_add_match_tag@plt>:
  40baf0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40baf4:	ldr	x17, [x16, #3480]
  40baf8:	add	x16, x16, #0xd98
  40bafc:	br	x17

000000000040bb00 <set_put_strdup@plt>:
  40bb00:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bb04:	ldr	x17, [x16, #3488]
  40bb08:	add	x16, x16, #0xda0
  40bb0c:	br	x17

000000000040bb10 <hidden_or_backup_file@plt>:
  40bb10:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bb14:	ldr	x17, [x16, #3496]
  40bb18:	add	x16, x16, #0xda8
  40bb1c:	br	x17

000000000040bb20 <cunescape@plt>:
  40bb20:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bb24:	ldr	x17, [x16, #3504]
  40bb28:	add	x16, x16, #0xdb0
  40bb2c:	br	x17

000000000040bb30 <set_consume@plt>:
  40bb30:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bb34:	ldr	x17, [x16, #3512]
  40bb38:	add	x16, x16, #0xdb8
  40bb3c:	br	x17

000000000040bb40 <set_iterate@plt>:
  40bb40:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bb44:	ldr	x17, [x16, #3520]
  40bb48:	add	x16, x16, #0xdc0
  40bb4c:	br	x17

000000000040bb50 <cg_pid_get_session@plt>:
  40bb50:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bb54:	ldr	x17, [x16, #3528]
  40bb58:	add	x16, x16, #0xdc8
  40bb5c:	br	x17

000000000040bb60 <cg_pid_get_unit@plt>:
  40bb60:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bb64:	ldr	x17, [x16, #3536]
  40bb68:	add	x16, x16, #0xdd0
  40bb6c:	br	x17

000000000040bb70 <cg_pid_get_user_unit@plt>:
  40bb70:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bb74:	ldr	x17, [x16, #3544]
  40bb78:	add	x16, x16, #0xdd8
  40bb7c:	br	x17

000000000040bb80 <cg_pid_get_machine_name@plt>:
  40bb80:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bb84:	ldr	x17, [x16, #3552]
  40bb88:	add	x16, x16, #0xde0
  40bb8c:	br	x17

000000000040bb90 <cg_pid_get_slice@plt>:
  40bb90:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bb94:	ldr	x17, [x16, #3560]
  40bb98:	add	x16, x16, #0xde8
  40bb9c:	br	x17

000000000040bba0 <cg_pid_get_user_slice@plt>:
  40bba0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bba4:	ldr	x17, [x16, #3568]
  40bba8:	add	x16, x16, #0xdf0
  40bbac:	br	x17

000000000040bbb0 <cg_pid_get_owner_uid@plt>:
  40bbb0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bbb4:	ldr	x17, [x16, #3576]
  40bbb8:	add	x16, x16, #0xdf8
  40bbbc:	br	x17

000000000040bbc0 <asprintf@plt>:
  40bbc0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bbc4:	ldr	x17, [x16, #3584]
  40bbc8:	add	x16, x16, #0xe00
  40bbcc:	br	x17

000000000040bbd0 <parse_env_file_sentinel@plt>:
  40bbd0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bbd4:	ldr	x17, [x16, #3592]
  40bbd8:	add	x16, x16, #0xe08
  40bbdc:	br	x17

000000000040bbe0 <filename_is_valid@plt>:
  40bbe0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bbe4:	ldr	x17, [x16, #3600]
  40bbe8:	add	x16, x16, #0xe10
  40bbec:	br	x17

000000000040bbf0 <strv_uniq@plt>:
  40bbf0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bbf4:	ldr	x17, [x16, #3608]
  40bbf8:	add	x16, x16, #0xe18
  40bbfc:	br	x17

000000000040bc00 <session_id_valid@plt>:
  40bc00:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bc04:	ldr	x17, [x16, #3616]
  40bc08:	add	x16, x16, #0xe20
  40bc0c:	br	x17

000000000040bc10 <parse_boolean@plt>:
  40bc10:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bc14:	ldr	x17, [x16, #3624]
  40bc18:	add	x16, x16, #0xe28
  40bc1c:	br	x17

000000000040bc20 <get_files_in_directory@plt>:
  40bc20:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bc24:	ldr	x17, [x16, #3632]
  40bc28:	add	x16, x16, #0xe30
  40bc2c:	br	x17

000000000040bc30 <dirent_ensure_type@plt>:
  40bc30:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bc34:	ldr	x17, [x16, #3640]
  40bc38:	add	x16, x16, #0xe38
  40bc3c:	br	x17

000000000040bc40 <dirent_is_file@plt>:
  40bc40:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bc44:	ldr	x17, [x16, #3648]
  40bc48:	add	x16, x16, #0xe40
  40bc4c:	br	x17

000000000040bc50 <reallocarray@plt>:
  40bc50:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bc54:	ldr	x17, [x16, #3656]
  40bc58:	add	x16, x16, #0xe48
  40bc5c:	br	x17

000000000040bc60 <hostname_is_valid@plt>:
  40bc60:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bc64:	ldr	x17, [x16, #3664]
  40bc68:	add	x16, x16, #0xe50
  40bc6c:	br	x17

000000000040bc70 <parse_ifindex@plt>:
  40bc70:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bc74:	ldr	x17, [x16, #3672]
  40bc78:	add	x16, x16, #0xe58
  40bc7c:	br	x17

000000000040bc80 <greedy_realloc@plt>:
  40bc80:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bc84:	ldr	x17, [x16, #3680]
  40bc88:	add	x16, x16, #0xe60
  40bc8c:	br	x17

000000000040bc90 <close_nointr@plt>:
  40bc90:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bc94:	ldr	x17, [x16, #3688]
  40bc98:	add	x16, x16, #0xe68
  40bc9c:	br	x17

000000000040bca0 <flush_fd@plt>:
  40bca0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bca4:	ldr	x17, [x16, #3696]
  40bca8:	add	x16, x16, #0xe70
  40bcac:	br	x17

000000000040bcb0 <config_parse_mtu@plt>:
  40bcb0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bcb4:	ldr	x17, [x16, #3704]
  40bcb8:	add	x16, x16, #0xe78
  40bcbc:	br	x17

000000000040bcc0 <config_parse_advertise@plt>:
  40bcc0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bcc4:	ldr	x17, [x16, #3712]
  40bcc8:	add	x16, x16, #0xe80
  40bccc:	br	x17

000000000040bcd0 <config_parse_ifname@plt>:
  40bcd0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bcd4:	ldr	x17, [x16, #3720]
  40bcd8:	add	x16, x16, #0xe88
  40bcdc:	br	x17

000000000040bce0 <config_parse_string@plt>:
  40bce0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bce4:	ldr	x17, [x16, #3728]
  40bce8:	add	x16, x16, #0xe90
  40bcec:	br	x17

000000000040bcf0 <config_parse_tristate@plt>:
  40bcf0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bcf4:	ldr	x17, [x16, #3736]
  40bcf8:	add	x16, x16, #0xe98
  40bcfc:	br	x17

000000000040bd00 <config_parse_port@plt>:
  40bd00:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bd04:	ldr	x17, [x16, #3744]
  40bd08:	add	x16, x16, #0xea0
  40bd0c:	br	x17

000000000040bd10 <config_parse_channel@plt>:
  40bd10:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bd14:	ldr	x17, [x16, #3752]
  40bd18:	add	x16, x16, #0xea8
  40bd1c:	br	x17

000000000040bd20 <config_parse_nic_buffer_size@plt>:
  40bd20:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bd24:	ldr	x17, [x16, #3760]
  40bd28:	add	x16, x16, #0xeb0
  40bd2c:	br	x17

000000000040bd30 <config_parse_duplex@plt>:
  40bd30:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bd34:	ldr	x17, [x16, #3768]
  40bd38:	add	x16, x16, #0xeb8
  40bd3c:	br	x17

000000000040bd40 <config_parse_wol@plt>:
  40bd40:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bd44:	ldr	x17, [x16, #3776]
  40bd48:	add	x16, x16, #0xec0
  40bd4c:	br	x17

000000000040bd50 <config_parse_warn_compat@plt>:
  40bd50:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bd54:	ldr	x17, [x16, #3784]
  40bd58:	add	x16, x16, #0xec8
  40bd5c:	br	x17

000000000040bd60 <config_parse_si_size@plt>:
  40bd60:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bd64:	ldr	x17, [x16, #3792]
  40bd68:	add	x16, x16, #0xed0
  40bd6c:	br	x17

000000000040bd70 <sd_id128_get_machine@plt>:
  40bd70:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bd74:	ldr	x17, [x16, #3800]
  40bd78:	add	x16, x16, #0xed8
  40bd7c:	br	x17

000000000040bd80 <siphash24@plt>:
  40bd80:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bd84:	ldr	x17, [x16, #3808]
  40bd88:	add	x16, x16, #0xee0
  40bd8c:	br	x17

000000000040bd90 <internal_hashmap_contains@plt>:
  40bd90:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bd94:	ldr	x17, [x16, #3816]
  40bd98:	add	x16, x16, #0xee8
  40bd9c:	br	x17

000000000040bda0 <ether_aton@plt>:
  40bda0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bda4:	ldr	x17, [x16, #3824]
  40bda8:	add	x16, x16, #0xef0
  40bdac:	br	x17

000000000040bdb0 <condition_new@plt>:
  40bdb0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bdb4:	ldr	x17, [x16, #3832]
  40bdb8:	add	x16, x16, #0xef8
  40bdbc:	br	x17

000000000040bdc0 <extract_first_word@plt>:
  40bdc0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bdc4:	ldr	x17, [x16, #3840]
  40bdc8:	add	x16, x16, #0xf00
  40bdcc:	br	x17

000000000040bdd0 <strv_consume@plt>:
  40bdd0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bdd4:	ldr	x17, [x16, #3848]
  40bdd8:	add	x16, x16, #0xf08
  40bddc:	br	x17

000000000040bde0 <ifname_valid@plt>:
  40bde0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bde4:	ldr	x17, [x16, #3856]
  40bde8:	add	x16, x16, #0xf10
  40bdec:	br	x17

000000000040bdf0 <env_assignment_is_valid@plt>:
  40bdf0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bdf4:	ldr	x17, [x16, #3864]
  40bdf8:	add	x16, x16, #0xf18
  40bdfc:	br	x17

000000000040be00 <ascii_is_valid@plt>:
  40be00:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40be04:	ldr	x17, [x16, #3872]
  40be08:	add	x16, x16, #0xf20
  40be0c:	br	x17

000000000040be10 <ether_addr_from_string@plt>:
  40be10:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40be14:	ldr	x17, [x16, #3880]
  40be18:	add	x16, x16, #0xf28
  40be1c:	br	x17

000000000040be20 <set_put@plt>:
  40be20:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40be24:	ldr	x17, [x16, #3888]
  40be28:	add	x16, x16, #0xf30
  40be2c:	br	x17

000000000040be30 <internal_set_ensure_allocated@plt>:
  40be30:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40be34:	ldr	x17, [x16, #3896]
  40be38:	add	x16, x16, #0xf38
  40be3c:	br	x17

000000000040be40 <internal_hashmap_move@plt>:
  40be40:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40be44:	ldr	x17, [x16, #3904]
  40be48:	add	x16, x16, #0xf40
  40be4c:	br	x17

000000000040be50 <inet_ntop@plt>:
  40be50:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40be54:	ldr	x17, [x16, #3912]
  40be58:	add	x16, x16, #0xf48
  40be5c:	br	x17

000000000040be60 <fputs@plt>:
  40be60:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40be64:	ldr	x17, [x16, #3920]
  40be68:	add	x16, x16, #0xf50
  40be6c:	br	x17

000000000040be70 <fputc@plt>:
  40be70:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40be74:	ldr	x17, [x16, #3928]
  40be78:	add	x16, x16, #0xf58
  40be7c:	br	x17

000000000040be80 <inet_pton@plt>:
  40be80:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40be84:	ldr	x17, [x16, #3936]
  40be88:	add	x16, x16, #0xf60
  40be8c:	br	x17

000000000040be90 <inet_aton@plt>:
  40be90:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40be94:	ldr	x17, [x16, #3944]
  40be98:	add	x16, x16, #0xf68
  40be9c:	br	x17

000000000040bea0 <hexmem@plt>:
  40bea0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bea4:	ldr	x17, [x16, #3952]
  40bea8:	add	x16, x16, #0xf70
  40beac:	br	x17

000000000040beb0 <memdup@plt>:
  40beb0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40beb4:	ldr	x17, [x16, #3960]
  40beb8:	add	x16, x16, #0xf78
  40bebc:	br	x17

000000000040bec0 <in4_addr_default_prefixlen@plt>:
  40bec0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bec4:	ldr	x17, [x16, #3968]
  40bec8:	add	x16, x16, #0xf80
  40becc:	br	x17

000000000040bed0 <inet_netof@plt>:
  40bed0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bed4:	ldr	x17, [x16, #3976]
  40bed8:	add	x16, x16, #0xf88
  40bedc:	br	x17

000000000040bee0 <inet_makeaddr@plt>:
  40bee0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bee4:	ldr	x17, [x16, #3984]
  40bee8:	add	x16, x16, #0xf90
  40beec:	br	x17

000000000040bef0 <memdup_suffix0@plt>:
  40bef0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bef4:	ldr	x17, [x16, #3992]
  40bef8:	add	x16, x16, #0xf98
  40befc:	br	x17

000000000040bf00 <timezone_is_valid@plt>:
  40bf00:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bf04:	ldr	x17, [x16, #4000]
  40bf08:	add	x16, x16, #0xfa0
  40bf0c:	br	x17

000000000040bf10 <dns_name_concat@plt>:
  40bf10:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bf14:	ldr	x17, [x16, #4008]
  40bf18:	add	x16, x16, #0xfa8
  40bf1c:	br	x17

000000000040bf20 <is_localhost@plt>:
  40bf20:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bf24:	ldr	x17, [x16, #4016]
  40bf28:	add	x16, x16, #0xfb0
  40bf2c:	br	x17

000000000040bf30 <dns_name_is_root@plt>:
  40bf30:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bf34:	ldr	x17, [x16, #4024]
  40bf38:	add	x16, x16, #0xfb8
  40bf3c:	br	x17

000000000040bf40 <dns_label_escape@plt>:
  40bf40:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bf44:	ldr	x17, [x16, #4032]
  40bf48:	add	x16, x16, #0xfc0
  40bf4c:	br	x17

000000000040bf50 <fopen_temporary@plt>:
  40bf50:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bf54:	ldr	x17, [x16, #4040]
  40bf58:	add	x16, x16, #0xfc8
  40bf5c:	br	x17

000000000040bf60 <fchmod@plt>:
  40bf60:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bf64:	ldr	x17, [x16, #4048]
  40bf68:	add	x16, x16, #0xfd0
  40bf6c:	br	x17

000000000040bf70 <fwrite@plt>:
  40bf70:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bf74:	ldr	x17, [x16, #4056]
  40bf78:	add	x16, x16, #0xfd8
  40bf7c:	br	x17

000000000040bf80 <fputstrv@plt>:
  40bf80:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bf84:	ldr	x17, [x16, #4064]
  40bf88:	add	x16, x16, #0xfe0
  40bf8c:	br	x17

000000000040bf90 <fflush_and_check@plt>:
  40bf90:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bf94:	ldr	x17, [x16, #4072]
  40bf98:	add	x16, x16, #0xfe8
  40bf9c:	br	x17

000000000040bfa0 <unhexmem_full@plt>:
  40bfa0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bfa4:	ldr	x17, [x16, #4080]
  40bfa8:	add	x16, x16, #0xff0
  40bfac:	br	x17

000000000040bfb0 <in4_addr_default_subnet_mask@plt>:
  40bfb0:	adrp	x16, 46f000 <_DYNAMIC+0x208>
  40bfb4:	ldr	x17, [x16, #4088]
  40bfb8:	add	x16, x16, #0xff8
  40bfbc:	br	x17

Disassembly of section .text:

000000000040bfc0 <_start>:
  40bfc0:	mov	x29, #0x0                   	// #0
  40bfc4:	mov	x30, #0x0                   	// #0
  40bfc8:	mov	x5, x0
  40bfcc:	ldr	x1, [sp]
  40bfd0:	add	x2, sp, #0x8
  40bfd4:	mov	x6, sp
  40bfd8:	movz	x0, #0x0, lsl #48
  40bfdc:	movk	x0, #0x0, lsl #32
  40bfe0:	movk	x0, #0x40, lsl #16
  40bfe4:	movk	x0, #0xc0cc
  40bfe8:	movz	x3, #0x0, lsl #48
  40bfec:	movk	x3, #0x0, lsl #32
  40bff0:	movk	x3, #0x43, lsl #16
  40bff4:	movk	x3, #0x3fa0
  40bff8:	movz	x4, #0x0, lsl #48
  40bffc:	movk	x4, #0x0, lsl #32
  40c000:	movk	x4, #0x43, lsl #16
  40c004:	movk	x4, #0x4020
  40c008:	bl	40a220 <__libc_start_main@plt>
  40c00c:	bl	40a230 <abort@plt>

000000000040c010 <call_weak_fn>:
  40c010:	adrp	x0, 46f000 <_DYNAMIC+0x208>
  40c014:	ldr	x0, [x0, #96]
  40c018:	cbz	x0, 40c020 <call_weak_fn+0x10>
  40c01c:	b	40a240 <__gmon_start__@plt>
  40c020:	ret
  40c024:	udf	#0

000000000040c028 <deregister_tm_clones>:
  40c028:	adrp	x0, 470000 <arg_resolve_name_timing>
  40c02c:	add	x0, x0, #0x0
  40c030:	adrp	x1, 470000 <arg_resolve_name_timing>
  40c034:	add	x1, x1, #0x0
  40c038:	cmp	x1, x0
  40c03c:	b.eq	40c054 <deregister_tm_clones+0x2c>  // b.none
  40c040:	adrp	x1, 434000 <__libc_csu_init+0x60>
  40c044:	ldr	x1, [x1, #64]
  40c048:	cbz	x1, 40c054 <deregister_tm_clones+0x2c>
  40c04c:	mov	x16, x1
  40c050:	br	x16
  40c054:	ret

000000000040c058 <register_tm_clones>:
  40c058:	adrp	x0, 470000 <arg_resolve_name_timing>
  40c05c:	add	x0, x0, #0x0
  40c060:	adrp	x1, 470000 <arg_resolve_name_timing>
  40c064:	add	x1, x1, #0x0
  40c068:	sub	x1, x1, x0
  40c06c:	lsr	x2, x1, #63
  40c070:	add	x1, x2, x1, asr #3
  40c074:	cmp	xzr, x1, asr #1
  40c078:	asr	x1, x1, #1
  40c07c:	b.eq	40c094 <register_tm_clones+0x3c>  // b.none
  40c080:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40c084:	ldr	x2, [x2, #72]
  40c088:	cbz	x2, 40c094 <register_tm_clones+0x3c>
  40c08c:	mov	x16, x2
  40c090:	br	x16
  40c094:	ret

000000000040c098 <__do_global_dtors_aux>:
  40c098:	stp	x29, x30, [sp, #-32]!
  40c09c:	mov	x29, sp
  40c0a0:	str	x19, [sp, #16]
  40c0a4:	adrp	x19, 470000 <arg_resolve_name_timing>
  40c0a8:	ldrb	w0, [x19, #24]
  40c0ac:	cbnz	w0, 40c0bc <__do_global_dtors_aux+0x24>
  40c0b0:	bl	40c028 <deregister_tm_clones>
  40c0b4:	mov	w0, #0x1                   	// #1
  40c0b8:	strb	w0, [x19, #24]
  40c0bc:	ldr	x19, [sp, #16]
  40c0c0:	ldp	x29, x30, [sp], #32
  40c0c4:	ret

000000000040c0c8 <frame_dummy>:
  40c0c8:	b	40c058 <register_tm_clones>

000000000040c0cc <main>:
  40c0cc:	sub	sp, sp, #0xf0
  40c0d0:	adrp	x8, 470000 <arg_resolve_name_timing>
  40c0d4:	stp	x29, x30, [sp, #144]
  40c0d8:	stp	x20, x19, [sp, #224]
  40c0dc:	add	x29, sp, #0x90
  40c0e0:	mov	w20, w0
  40c0e4:	adrp	x9, 470000 <arg_resolve_name_timing>
  40c0e8:	str	w0, [x8, #96]
  40c0ec:	mov	w0, #0x7                   	// #7
  40c0f0:	stp	x28, x27, [sp, #160]
  40c0f4:	stp	x26, x25, [sp, #176]
  40c0f8:	stp	x24, x23, [sp, #192]
  40c0fc:	stp	x22, x21, [sp, #208]
  40c100:	mov	x19, x1
  40c104:	str	x1, [x9, #104]
  40c108:	stur	xzr, [x29, #-8]
  40c10c:	bl	40a250 <log_set_target@plt>
  40c110:	bl	40a260 <log_open@plt>
  40c114:	adrp	x0, 470000 <arg_resolve_name_timing>
  40c118:	adrp	x3, 470000 <arg_resolve_name_timing>
  40c11c:	add	x0, x0, #0x28
  40c120:	add	x3, x3, #0x0
  40c124:	add	x1, x0, #0x8
  40c128:	add	x2, x3, #0x8
  40c12c:	bl	40a270 <udev_parse_config_full@plt>
  40c130:	mov	w0, #0x1                   	// #1
  40c134:	bl	40a280 <log_parse_environment_realm@plt>
  40c138:	bl	40a260 <log_open@plt>
  40c13c:	tbnz	w20, #31, 40d2ec <main+0x1220>
  40c140:	cbz	x19, 40d310 <main+0x1244>
  40c144:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40c148:	adrp	x3, 434000 <__libc_csu_init+0x60>
  40c14c:	add	x2, x2, #0x528
  40c150:	add	x3, x3, #0xc8
  40c154:	mov	w0, w20
  40c158:	mov	x1, x19
  40c15c:	mov	x4, xzr
  40c160:	bl	40a290 <getopt_long@plt>
  40c164:	tbnz	w0, #31, 40c3ec <main+0x320>
  40c168:	adrp	x23, 434000 <__libc_csu_init+0x60>
  40c16c:	adrp	x21, 434000 <__libc_csu_init+0x60>
  40c170:	adrp	x22, 434000 <__libc_csu_init+0x60>
  40c174:	adrp	x28, 470000 <arg_resolve_name_timing>
  40c178:	adrp	x27, 470000 <arg_resolve_name_timing>
  40c17c:	add	x23, x23, #0x50
  40c180:	mov	w24, #0x1                   	// #1
  40c184:	add	x21, x21, #0x528
  40c188:	add	x22, x22, #0xc8
  40c18c:	adrp	x26, 470000 <arg_resolve_name_timing>
  40c190:	add	x28, x28, #0x30
  40c194:	add	x27, x27, #0x8
  40c198:	b	40c1c0 <main+0xf4>
  40c19c:	adrp	x8, 470000 <arg_resolve_name_timing>
  40c1a0:	strb	w24, [x8, #32]
  40c1a4:	mov	w0, w20
  40c1a8:	mov	x1, x19
  40c1ac:	mov	x2, x21
  40c1b0:	mov	x3, x22
  40c1b4:	mov	x4, xzr
  40c1b8:	bl	40a290 <getopt_long@plt>
  40c1bc:	tbnz	w0, #31, 40c3ec <main+0x320>
  40c1c0:	sub	w8, w0, #0x3f
  40c1c4:	cmp	w8, #0x35
  40c1c8:	b.hi	40d2c8 <main+0x11fc>  // b.pmore
  40c1cc:	adr	x9, 40c19c <main+0xd0>
  40c1d0:	ldrh	w10, [x23, x8, lsl #1]
  40c1d4:	add	x9, x9, x10, lsl #2
  40c1d8:	br	x9
  40c1dc:	ldr	x25, [x26, #112]
  40c1e0:	mov	x0, x25
  40c1e4:	bl	40a2a0 <resolve_name_timing_from_string@plt>
  40c1e8:	tbnz	w0, #31, 40c308 <main+0x23c>
  40c1ec:	adrp	x8, 470000 <arg_resolve_name_timing>
  40c1f0:	str	w0, [x8]
  40c1f4:	b	40c1a4 <main+0xd8>
  40c1f8:	adrp	x8, 470000 <arg_resolve_name_timing>
  40c1fc:	strb	w24, [x8, #36]
  40c200:	b	40c1a4 <main+0xd8>
  40c204:	ldr	x0, [x26, #112]
  40c208:	mov	x1, x28
  40c20c:	bl	40a2b0 <parse_sec@plt>
  40c210:	tbz	w0, #31, 40c1a4 <main+0xd8>
  40c214:	mov	w25, w0
  40c218:	mov	w0, #0x1                   	// #1
  40c21c:	bl	40a2c0 <log_get_max_level_realm@plt>
  40c220:	cmp	w0, #0x4
  40c224:	b.lt	40c1a4 <main+0xd8>  // b.tstop
  40c228:	ldr	x6, [x26, #112]
  40c22c:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40c230:	adrp	x4, 434000 <__libc_csu_init+0x60>
  40c234:	adrp	x5, 434000 <__libc_csu_init+0x60>
  40c238:	mov	w0, #0x404                 	// #1028
  40c23c:	mov	w3, #0x5ec                 	// #1516
  40c240:	mov	w1, w25
  40c244:	add	x2, x2, #0x22b
  40c248:	add	x4, x4, #0x535
  40c24c:	add	x5, x5, #0x579
  40c250:	bl	40a2d0 <log_internal_realm@plt>
  40c254:	b	40c1a4 <main+0xd8>
  40c258:	ldr	x0, [x26, #112]
  40c25c:	mov	x1, x27
  40c260:	bl	40a2b0 <parse_sec@plt>
  40c264:	tbz	w0, #31, 40c1a4 <main+0xd8>
  40c268:	mov	w25, w0
  40c26c:	mov	w0, #0x1                   	// #1
  40c270:	bl	40a2c0 <log_get_max_level_realm@plt>
  40c274:	cmp	w0, #0x4
  40c278:	b.lt	40c1a4 <main+0xd8>  // b.tstop
  40c27c:	ldr	x6, [x26, #112]
  40c280:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40c284:	adrp	x4, 434000 <__libc_csu_init+0x60>
  40c288:	adrp	x5, 434000 <__libc_csu_init+0x60>
  40c28c:	mov	w0, #0x404                 	// #1028
  40c290:	mov	w3, #0x5f1                 	// #1521
  40c294:	mov	w1, w25
  40c298:	add	x2, x2, #0x22b
  40c29c:	add	x4, x4, #0x535
  40c2a0:	add	x5, x5, #0x5b0
  40c2a4:	bl	40a2d0 <log_internal_realm@plt>
  40c2a8:	b	40c1a4 <main+0xd8>
  40c2ac:	ldr	x0, [x26, #112]
  40c2b0:	adrp	x2, 470000 <arg_resolve_name_timing>
  40c2b4:	mov	w1, wzr
  40c2b8:	add	x2, x2, #0x28
  40c2bc:	bl	40a2e0 <safe_atou_full@plt>
  40c2c0:	tbz	w0, #31, 40c1a4 <main+0xd8>
  40c2c4:	mov	w25, w0
  40c2c8:	mov	w0, #0x1                   	// #1
  40c2cc:	bl	40a2c0 <log_get_max_level_realm@plt>
  40c2d0:	cmp	w0, #0x4
  40c2d4:	b.lt	40c1a4 <main+0xd8>  // b.tstop
  40c2d8:	ldr	x6, [x26, #112]
  40c2dc:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40c2e0:	adrp	x4, 434000 <__libc_csu_init+0x60>
  40c2e4:	adrp	x5, 434000 <__libc_csu_init+0x60>
  40c2e8:	mov	w0, #0x404                 	// #1028
  40c2ec:	mov	w3, #0x5e7                 	// #1511
  40c2f0:	mov	w1, w25
  40c2f4:	add	x2, x2, #0x22b
  40c2f8:	add	x4, x4, #0x535
  40c2fc:	add	x5, x5, #0x540
  40c300:	bl	40a2d0 <log_internal_realm@plt>
  40c304:	b	40c1a4 <main+0xd8>
  40c308:	mov	w0, #0x1                   	// #1
  40c30c:	bl	40a2c0 <log_get_max_level_realm@plt>
  40c310:	cmp	w0, #0x4
  40c314:	b.lt	40c1a4 <main+0xd8>  // b.tstop
  40c318:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40c31c:	adrp	x4, 434000 <__libc_csu_init+0x60>
  40c320:	adrp	x5, 434000 <__libc_csu_init+0x60>
  40c324:	mov	w0, #0x404                 	// #1028
  40c328:	mov	w3, #0x5fb                 	// #1531
  40c32c:	mov	w1, wzr
  40c330:	add	x2, x2, #0x22b
  40c334:	add	x4, x4, #0x535
  40c338:	add	x5, x5, #0x5ea
  40c33c:	mov	x6, x25
  40c340:	bl	40a2d0 <log_internal_realm@plt>
  40c344:	b	40c1a4 <main+0xd8>
  40c348:	mov	x19, xzr
  40c34c:	mov	w20, #0xffffffea            	// #-22
  40c350:	b	40c61c <main+0x550>
  40c354:	adrp	x0, 434000 <__libc_csu_init+0x60>
  40c358:	add	x0, x0, #0x619
  40c35c:	bl	40a2f0 <puts@plt>
  40c360:	mov	x19, xzr
  40c364:	mov	w20, wzr
  40c368:	b	40c61c <main+0x550>
  40c36c:	adrp	x0, 434000 <__libc_csu_init+0x60>
  40c370:	adrp	x1, 434000 <__libc_csu_init+0x60>
  40c374:	add	x0, x0, #0x62e
  40c378:	add	x1, x1, #0x644
  40c37c:	add	x2, sp, #0x8
  40c380:	str	xzr, [sp, #8]
  40c384:	bl	40a300 <terminal_urlify_man@plt>
  40c388:	tbnz	w0, #31, 40c3bc <main+0x2f0>
  40c38c:	adrp	x8, 470000 <arg_resolve_name_timing>
  40c390:	ldr	x1, [x8, #120]
  40c394:	ldr	x2, [sp, #8]
  40c398:	adrp	x0, 434000 <__libc_csu_init+0x60>
  40c39c:	add	x0, x0, #0x646
  40c3a0:	bl	40a310 <printf@plt>
  40c3a4:	mov	w20, wzr
  40c3a8:	ldr	x0, [sp, #8]
  40c3ac:	bl	40a320 <free@plt>
  40c3b0:	cmp	w20, #0x1
  40c3b4:	b.ge	40c3ec <main+0x320>  // b.tcont
  40c3b8:	b	40c618 <main+0x54c>
  40c3bc:	adrp	x1, 434000 <__libc_csu_init+0x60>
  40c3c0:	adrp	x3, 434000 <__libc_csu_init+0x60>
  40c3c4:	add	x1, x1, #0x22b
  40c3c8:	add	x3, x3, #0x4ef
  40c3cc:	mov	w0, #0x1                   	// #1
  40c3d0:	mov	w2, #0x5b7                 	// #1463
  40c3d4:	bl	40a330 <log_oom_internal@plt>
  40c3d8:	mov	w20, w0
  40c3dc:	ldr	x0, [sp, #8]
  40c3e0:	bl	40a320 <free@plt>
  40c3e4:	cmp	w20, #0x1
  40c3e8:	b.lt	40c618 <main+0x54c>  // b.tstop
  40c3ec:	adrp	x0, 40d000 <main+0xf34>
  40c3f0:	add	x0, x0, #0x3d8
  40c3f4:	mov	w2, #0x1                   	// #1
  40c3f8:	mov	x1, xzr
  40c3fc:	bl	40a340 <proc_cmdline_parse@plt>
  40c400:	tbz	w0, #31, 40c440 <main+0x374>
  40c404:	mov	w19, w0
  40c408:	mov	w0, #0x1                   	// #1
  40c40c:	bl	40a2c0 <log_get_max_level_realm@plt>
  40c410:	cmp	w0, #0x4
  40c414:	b.lt	40c440 <main+0x374>  // b.tstop
  40c418:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40c41c:	adrp	x4, 434000 <__libc_csu_init+0x60>
  40c420:	adrp	x5, 434000 <__libc_csu_init+0x60>
  40c424:	add	x2, x2, #0x22b
  40c428:	add	x4, x4, #0x23c
  40c42c:	add	x5, x5, #0x240
  40c430:	mov	w0, #0x404                 	// #1028
  40c434:	mov	w3, #0x6b9                 	// #1721
  40c438:	mov	w1, w19
  40c43c:	bl	40a2d0 <log_internal_realm@plt>
  40c440:	adrp	x8, 470000 <arg_resolve_name_timing>
  40c444:	ldrb	w8, [x8, #32]
  40c448:	cmp	w8, #0x1
  40c44c:	b.ne	40c464 <main+0x398>  // b.any
  40c450:	mov	w0, wzr
  40c454:	bl	40a250 <log_set_target@plt>
  40c458:	mov	w0, #0x1                   	// #1
  40c45c:	mov	w1, #0x7                   	// #7
  40c460:	bl	40a350 <log_set_max_level_realm@plt>
  40c464:	mov	w0, #0x1                   	// #1
  40c468:	bl	40a2c0 <log_get_max_level_realm@plt>
  40c46c:	mov	w1, w0
  40c470:	mov	w0, wzr
  40c474:	bl	40a350 <log_set_max_level_realm@plt>
  40c478:	bl	40a360 <must_be_root@plt>
  40c47c:	tbnz	w0, #31, 40c614 <main+0x548>
  40c480:	adrp	x23, 470000 <arg_resolve_name_timing>
  40c484:	ldr	w8, [x23, #40]
  40c488:	cbnz	w8, 40c528 <main+0x45c>
  40c48c:	add	x2, sp, #0x8
  40c490:	mov	w1, #0x80                  	// #128
  40c494:	mov	w0, wzr
  40c498:	bl	40a370 <sched_getaffinity@plt>
  40c49c:	cbz	w0, 40c4a8 <main+0x3dc>
  40c4a0:	mov	w8, #0x1                   	// #1
  40c4a4:	b	40c4b8 <main+0x3ec>
  40c4a8:	add	x1, sp, #0x8
  40c4ac:	mov	w0, #0x80                  	// #128
  40c4b0:	bl	40a380 <__sched_cpucount@plt>
  40c4b4:	sxtw	x8, w0
  40c4b8:	lsl	x8, x8, #1
  40c4bc:	add	x19, x8, #0x10
  40c4c0:	bl	40a390 <physical_memory@plt>
  40c4c4:	lsr	x8, x0, #27
  40c4c8:	mov	w9, #0xa                   	// #10
  40c4cc:	cmp	x8, #0xa
  40c4d0:	csel	x8, x8, x9, hi  // hi = pmore
  40c4d4:	cmp	x19, x8
  40c4d8:	csel	w8, w19, w8, cc  // cc = lo, ul, last
  40c4dc:	cmp	w8, #0x800
  40c4e0:	mov	w9, #0x800                 	// #2048
  40c4e4:	csel	w19, w8, w9, cc  // cc = lo, ul, last
  40c4e8:	mov	w0, #0x1                   	// #1
  40c4ec:	str	w19, [x23, #40]
  40c4f0:	bl	40a2c0 <log_get_max_level_realm@plt>
  40c4f4:	cmp	w0, #0x7
  40c4f8:	b.lt	40c528 <main+0x45c>  // b.tstop
  40c4fc:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40c500:	adrp	x4, 434000 <__libc_csu_init+0x60>
  40c504:	adrp	x5, 434000 <__libc_csu_init+0x60>
  40c508:	add	x2, x2, #0x22b
  40c50c:	add	x4, x4, #0x23c
  40c510:	add	x5, x5, #0x272
  40c514:	mov	w0, #0x407                 	// #1031
  40c518:	mov	w3, #0x6d4                 	// #1748
  40c51c:	mov	w1, wzr
  40c520:	mov	w6, w19
  40c524:	bl	40a2d0 <log_internal_realm@plt>
  40c528:	adrp	x0, 434000 <__libc_csu_init+0x60>
  40c52c:	add	x0, x0, #0x289
  40c530:	bl	40a3a0 <chdir@plt>
  40c534:	tbnz	w0, #31, 40c59c <main+0x4d0>
  40c538:	mov	w0, #0x12                  	// #18
  40c53c:	bl	40a3b0 <umask@plt>
  40c540:	bl	40a3c0 <mac_selinux_init@plt>
  40c544:	tbnz	w0, #31, 40c5d8 <main+0x50c>
  40c548:	adrp	x0, 434000 <__libc_csu_init+0x60>
  40c54c:	add	x0, x0, #0x2ce
  40c550:	mov	w1, #0x1ed                 	// #493
  40c554:	bl	40a3d0 <mkdir_errno_wrapper@plt>
  40c558:	tbz	w0, #31, 40c6a0 <main+0x5d4>
  40c55c:	mov	w20, w0
  40c560:	cmn	w0, #0x11
  40c564:	b.eq	40c6a0 <main+0x5d4>  // b.none
  40c568:	mov	w0, #0x1                   	// #1
  40c56c:	bl	40a2c0 <log_get_max_level_realm@plt>
  40c570:	cmp	w0, #0x3
  40c574:	b.lt	40cb1c <main+0xa50>  // b.tstop
  40c578:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40c57c:	adrp	x4, 434000 <__libc_csu_init+0x60>
  40c580:	adrp	x5, 434000 <__libc_csu_init+0x60>
  40c584:	add	x2, x2, #0x22b
  40c588:	add	x4, x4, #0x23c
  40c58c:	add	x5, x5, #0x2d8
  40c590:	mov	w0, #0x403                 	// #1027
  40c594:	mov	w3, #0x6e4                 	// #1764
  40c598:	b	40c60c <main+0x540>
  40c59c:	bl	40a3e0 <__errno_location@plt>
  40c5a0:	ldr	w20, [x0]
  40c5a4:	mov	w0, #0x1                   	// #1
  40c5a8:	bl	40a2c0 <log_get_max_level_realm@plt>
  40c5ac:	cmp	w0, #0x3
  40c5b0:	b.lt	40c728 <main+0x65c>  // b.tstop
  40c5b4:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40c5b8:	adrp	x4, 434000 <__libc_csu_init+0x60>
  40c5bc:	adrp	x5, 434000 <__libc_csu_init+0x60>
  40c5c0:	add	x2, x2, #0x22b
  40c5c4:	add	x4, x4, #0x23c
  40c5c8:	add	x5, x5, #0x28b
  40c5cc:	mov	w0, #0x403                 	// #1027
  40c5d0:	mov	w3, #0x6da                 	// #1754
  40c5d4:	b	40c60c <main+0x540>
  40c5d8:	mov	w20, w0
  40c5dc:	mov	w0, #0x1                   	// #1
  40c5e0:	bl	40a2c0 <log_get_max_level_realm@plt>
  40c5e4:	cmp	w0, #0x3
  40c5e8:	b.lt	40cb1c <main+0xa50>  // b.tstop
  40c5ec:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40c5f0:	adrp	x4, 434000 <__libc_csu_init+0x60>
  40c5f4:	adrp	x5, 434000 <__libc_csu_init+0x60>
  40c5f8:	add	x2, x2, #0x22b
  40c5fc:	add	x4, x4, #0x23c
  40c600:	add	x5, x5, #0x2ab
  40c604:	mov	w0, #0x403                 	// #1027
  40c608:	mov	w3, #0x6e0                 	// #1760
  40c60c:	mov	w1, w20
  40c610:	bl	40a2d0 <log_internal_realm@plt>
  40c614:	mov	w20, w0
  40c618:	mov	x19, xzr
  40c61c:	mov	x0, x19
  40c620:	bl	40d358 <manager_freep>
  40c624:	ldur	x0, [x29, #-8]
  40c628:	bl	40a320 <free@plt>
  40c62c:	bl	40a3f0 <ask_password_agent_close@plt>
  40c630:	bl	40a400 <polkit_agent_close@plt>
  40c634:	bl	40a410 <pager_close@plt>
  40c638:	bl	40a420 <mac_selinux_finish@plt>
  40c63c:	adrp	x8, 46f000 <_DYNAMIC+0x208>
  40c640:	ldr	x8, [x8, #104]
  40c644:	adrp	x19, 46f000 <_DYNAMIC+0x208>
  40c648:	ldr	x19, [x19, #112]
  40c64c:	add	x9, x8, #0x7
  40c650:	and	x21, x9, #0xfffffffffffffff8
  40c654:	cmp	x21, x19
  40c658:	cset	w9, cs  // cs = hs, nlast
  40c65c:	cmp	x8, #0x0
  40c660:	cset	w8, eq  // eq = none
  40c664:	orr	w8, w8, w9
  40c668:	tbnz	w8, #0, 40c67c <main+0x5b0>
  40c66c:	ldp	x0, x8, [x21], #16
  40c670:	blr	x8
  40c674:	cmp	x21, x19
  40c678:	b.cc	40c66c <main+0x5a0>  // b.lo, b.ul, b.last
  40c67c:	lsr	w0, w20, #31
  40c680:	ldp	x20, x19, [sp, #224]
  40c684:	ldp	x22, x21, [sp, #208]
  40c688:	ldp	x24, x23, [sp, #192]
  40c68c:	ldp	x26, x25, [sp, #176]
  40c690:	ldp	x28, x27, [sp, #160]
  40c694:	ldp	x29, x30, [sp, #144]
  40c698:	add	sp, sp, #0xf0
  40c69c:	ret
  40c6a0:	mov	w1, #0xffffffff            	// #-1
  40c6a4:	mov	w2, #0xffffffff            	// #-1
  40c6a8:	mov	x0, xzr
  40c6ac:	bl	40a430 <dev_setup@plt>
  40c6b0:	bl	40a440 <getppid@plt>
  40c6b4:	cmp	w0, #0x1
  40c6b8:	b.ne	40c778 <main+0x6ac>  // b.any
  40c6bc:	bl	40a450 <sd_booted@plt>
  40c6c0:	cmp	w0, #0x1
  40c6c4:	b.lt	40c778 <main+0x6ac>  // b.tstop
  40c6c8:	adrp	x0, 434000 <__libc_csu_init+0x60>
  40c6cc:	add	x0, x0, #0x2f7
  40c6d0:	sub	x2, x29, #0x8
  40c6d4:	mov	w1, wzr
  40c6d8:	bl	40a460 <cg_pid_get_path@plt>
  40c6dc:	tbz	w0, #31, 40c778 <main+0x6ac>
  40c6e0:	mov	w19, w0
  40c6e4:	cmn	w0, #0x2
  40c6e8:	b.eq	40c6f4 <main+0x628>  // b.none
  40c6ec:	cmn	w19, #0x7b
  40c6f0:	b.ne	40c740 <main+0x674>  // b.any
  40c6f4:	mov	w0, #0x1                   	// #1
  40c6f8:	bl	40a2c0 <log_get_max_level_realm@plt>
  40c6fc:	cmp	w0, #0x7
  40c700:	b.lt	40c778 <main+0x6ac>  // b.tstop
  40c704:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40c708:	adrp	x4, 434000 <__libc_csu_init+0x60>
  40c70c:	adrp	x5, 434000 <__libc_csu_init+0x60>
  40c710:	add	x2, x2, #0x22b
  40c714:	add	x4, x4, #0x23c
  40c718:	add	x5, x5, #0x300
  40c71c:	mov	w0, #0x407                 	// #1031
  40c720:	mov	w3, #0x6ef                 	// #1775
  40c724:	b	40c770 <main+0x6a4>
  40c728:	mov	w8, wzr
  40c72c:	mov	x19, xzr
  40c730:	cmp	w20, #0x0
  40c734:	cneg	w9, w20, mi  // mi = first
  40c738:	sub	w20, w8, w9, uxtb
  40c73c:	b	40c61c <main+0x550>
  40c740:	mov	w0, #0x1                   	// #1
  40c744:	bl	40a2c0 <log_get_max_level_realm@plt>
  40c748:	cmp	w0, #0x4
  40c74c:	b.lt	40c778 <main+0x6ac>  // b.tstop
  40c750:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40c754:	adrp	x4, 434000 <__libc_csu_init+0x60>
  40c758:	adrp	x5, 434000 <__libc_csu_init+0x60>
  40c75c:	add	x2, x2, #0x22b
  40c760:	add	x4, x4, #0x23c
  40c764:	add	x5, x5, #0x31f
  40c768:	mov	w0, #0x404                 	// #1028
  40c76c:	mov	w3, #0x6f1                 	// #1777
  40c770:	mov	w1, w19
  40c774:	bl	40a2d0 <log_internal_realm@plt>
  40c778:	mov	w0, #0x1                   	// #1
  40c77c:	bl	40a470 <sd_listen_fds@plt>
  40c780:	mov	w22, w0
  40c784:	tbnz	w0, #31, 40c900 <main+0x834>
  40c788:	cbz	w22, 40c804 <main+0x738>
  40c78c:	add	w24, w22, #0x2
  40c790:	mov	w20, #0xffffffff            	// #-1
  40c794:	mov	w19, #0x3                   	// #3
  40c798:	mov	w25, #0xffffffff            	// #-1
  40c79c:	mov	w22, #0xffffffea            	// #-22
  40c7a0:	b	40c7bc <main+0x6f0>
  40c7a4:	mov	w21, w19
  40c7a8:	tbz	w25, #31, 40c8fc <main+0x830>
  40c7ac:	cmp	w19, w24
  40c7b0:	add	w19, w19, #0x1
  40c7b4:	mov	w25, w21
  40c7b8:	b.ge	40c80c <main+0x740>  // b.tcont
  40c7bc:	mov	w1, #0x1                   	// #1
  40c7c0:	mov	w2, #0x5                   	// #5
  40c7c4:	mov	w3, #0xffffffff            	// #-1
  40c7c8:	mov	w0, w19
  40c7cc:	bl	40a480 <sd_is_socket@plt>
  40c7d0:	cmp	w0, #0x1
  40c7d4:	b.ge	40c7a4 <main+0x6d8>  // b.tcont
  40c7d8:	mov	w1, #0x10                  	// #16
  40c7dc:	mov	w2, #0x3                   	// #3
  40c7e0:	mov	w3, #0xffffffff            	// #-1
  40c7e4:	mov	w0, w19
  40c7e8:	bl	40a480 <sd_is_socket@plt>
  40c7ec:	tbz	w20, #31, 40c900 <main+0x834>
  40c7f0:	cmp	w0, #0x1
  40c7f4:	mov	w21, w25
  40c7f8:	mov	w20, w19
  40c7fc:	b.ge	40c7ac <main+0x6e0>  // b.tcont
  40c800:	b	40c900 <main+0x834>
  40c804:	mov	w21, #0xffffffff            	// #-1
  40c808:	mov	w20, #0xffffffff            	// #-1
  40c80c:	ldur	x22, [x29, #-8]
  40c810:	mov	w0, #0x80                  	// #128
  40c814:	bl	40a490 <malloc@plt>
  40c818:	mov	x19, x0
  40c81c:	cbz	x0, 40c8d8 <main+0x80c>
  40c820:	stp	xzr, x22, [x19, #16]
  40c824:	add	x22, x19, #0x48
  40c828:	movi	v0.2d, #0x0
  40c82c:	movi	v1.2d, #0xffffffffffffffff
  40c830:	mov	w8, #0xffffffff            	// #-1
  40c834:	mov	x0, x22
  40c838:	mov	w1, w21
  40c83c:	stp	xzr, xzr, [x19]
  40c840:	str	wzr, [x19, #124]
  40c844:	stp	q0, q0, [x19, #32]
  40c848:	str	q0, [x19, #64]
  40c84c:	str	d1, [x19, #80]
  40c850:	str	w8, [x19, #88]
  40c854:	stur	q0, [x19, #92]
  40c858:	stur	q0, [x19, #108]
  40c85c:	bl	410d78 <udev_ctrl_new_from_fd>
  40c860:	tbnz	w0, #31, 40c94c <main+0x880>
  40c864:	ldr	x0, [x22]
  40c868:	bl	410f98 <udev_ctrl_enable_receiving>
  40c86c:	tbnz	w0, #31, 40c984 <main+0x8b8>
  40c870:	add	x0, x19, #0x40
  40c874:	mov	w1, #0x1                   	// #1
  40c878:	mov	w2, w20
  40c87c:	bl	40a4a0 <device_monitor_new_full@plt>
  40c880:	tbnz	w0, #31, 40c9d4 <main+0x908>
  40c884:	ldr	x0, [x19, #64]
  40c888:	mov	w1, #0x8000000             	// #134217728
  40c88c:	bl	40a4b0 <sd_device_monitor_set_receive_buffer_size@plt>
  40c890:	ldr	x0, [x19, #64]
  40c894:	bl	40a4c0 <device_monitor_enable_receiving@plt>
  40c898:	tbz	w0, #31, 40ca2c <main+0x960>
  40c89c:	mov	w20, w0
  40c8a0:	mov	w0, #0x1                   	// #1
  40c8a4:	bl	40a2c0 <log_get_max_level_realm@plt>
  40c8a8:	cmp	w0, #0x3
  40c8ac:	b.lt	40ca10 <main+0x944>  // b.tstop
  40c8b0:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40c8b4:	adrp	x4, 434000 <__libc_csu_init+0x60>
  40c8b8:	adrp	x5, 434000 <__libc_csu_init+0x60>
  40c8bc:	add	x2, x2, #0x22b
  40c8c0:	add	x4, x4, #0x995
  40c8c4:	add	x5, x5, #0xa1d
  40c8c8:	mov	w0, #0x403                 	// #1027
  40c8cc:	mov	w3, #0x630                 	// #1584
  40c8d0:	mov	w1, w20
  40c8d4:	b	40c9bc <main+0x8f0>
  40c8d8:	adrp	x1, 434000 <__libc_csu_init+0x60>
  40c8dc:	adrp	x3, 434000 <__libc_csu_init+0x60>
  40c8e0:	add	x1, x1, #0x22b
  40c8e4:	add	x3, x3, #0x995
  40c8e8:	mov	w0, #0x1                   	// #1
  40c8ec:	mov	w2, #0x618                 	// #1560
  40c8f0:	bl	40a330 <log_oom_internal@plt>
  40c8f4:	mov	w20, w0
  40c8f8:	b	40ca1c <main+0x950>
  40c8fc:	mov	w22, #0xffffffea            	// #-22
  40c900:	mov	w0, #0x1                   	// #1
  40c904:	bl	40a2c0 <log_get_max_level_realm@plt>
  40c908:	cmp	w0, #0x3
  40c90c:	b.lt	40c938 <main+0x86c>  // b.tstop
  40c910:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40c914:	adrp	x4, 434000 <__libc_csu_init+0x60>
  40c918:	adrp	x5, 434000 <__libc_csu_init+0x60>
  40c91c:	add	x2, x2, #0x22b
  40c920:	add	x4, x4, #0x23c
  40c924:	add	x5, x5, #0x338
  40c928:	mov	w0, #0x403                 	// #1027
  40c92c:	mov	w3, #0x6f7                 	// #1783
  40c930:	mov	w1, w22
  40c934:	b	40c610 <main+0x544>
  40c938:	mov	w8, wzr
  40c93c:	neg	w9, w22
  40c940:	mov	x19, xzr
  40c944:	sub	w20, w8, w9, uxtb
  40c948:	b	40c61c <main+0x550>
  40c94c:	mov	w21, w0
  40c950:	mov	w0, #0x1                   	// #1
  40c954:	bl	40a2c0 <log_get_max_level_realm@plt>
  40c958:	cmp	w0, #0x3
  40c95c:	b.lt	40c9c8 <main+0x8fc>  // b.tstop
  40c960:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40c964:	adrp	x4, 434000 <__libc_csu_init+0x60>
  40c968:	adrp	x5, 434000 <__libc_csu_init+0x60>
  40c96c:	add	x2, x2, #0x22b
  40c970:	add	x4, x4, #0x995
  40c974:	add	x5, x5, #0x9a1
  40c978:	mov	w0, #0x403                 	// #1027
  40c97c:	mov	w3, #0x622                 	// #1570
  40c980:	b	40c9b8 <main+0x8ec>
  40c984:	mov	w21, w0
  40c988:	mov	w0, #0x1                   	// #1
  40c98c:	bl	40a2c0 <log_get_max_level_realm@plt>
  40c990:	cmp	w0, #0x3
  40c994:	b.lt	40c9c8 <main+0x8fc>  // b.tstop
  40c998:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40c99c:	adrp	x4, 434000 <__libc_csu_init+0x60>
  40c9a0:	adrp	x5, 434000 <__libc_csu_init+0x60>
  40c9a4:	add	x2, x2, #0x22b
  40c9a8:	add	x4, x4, #0x995
  40c9ac:	add	x5, x5, #0x9ce
  40c9b0:	mov	w0, #0x403                 	// #1027
  40c9b4:	mov	w3, #0x626                 	// #1574
  40c9b8:	mov	w1, w21
  40c9bc:	bl	40a2d0 <log_internal_realm@plt>
  40c9c0:	mov	w20, w0
  40c9c4:	b	40ca1c <main+0x950>
  40c9c8:	mov	w8, wzr
  40c9cc:	neg	w9, w21
  40c9d0:	b	40ca18 <main+0x94c>
  40c9d4:	mov	w20, w0
  40c9d8:	mov	w0, #0x1                   	// #1
  40c9dc:	bl	40a2c0 <log_get_max_level_realm@plt>
  40c9e0:	cmp	w0, #0x3
  40c9e4:	b.lt	40ca10 <main+0x944>  // b.tstop
  40c9e8:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40c9ec:	adrp	x4, 434000 <__libc_csu_init+0x60>
  40c9f0:	adrp	x5, 434000 <__libc_csu_init+0x60>
  40c9f4:	add	x2, x2, #0x22b
  40c9f8:	add	x4, x4, #0x995
  40c9fc:	add	x5, x5, #0x9f5
  40ca00:	mov	w0, #0x403                 	// #1027
  40ca04:	mov	w3, #0x62a                 	// #1578
  40ca08:	mov	w1, w20
  40ca0c:	b	40c9bc <main+0x8f0>
  40ca10:	mov	w8, wzr
  40ca14:	neg	w9, w20
  40ca18:	sub	w20, w8, w9, uxtb
  40ca1c:	mov	x0, x19
  40ca20:	bl	40d358 <manager_freep>
  40ca24:	tbnz	w20, #31, 40cae8 <main+0xa1c>
  40ca28:	mov	x19, xzr
  40ca2c:	adrp	x8, 470000 <arg_resolve_name_timing>
  40ca30:	ldrb	w8, [x8, #36]
  40ca34:	cmp	w8, #0x1
  40ca38:	b.ne	40cbb8 <main+0xaec>  // b.any
  40ca3c:	mov	w0, #0x1                   	// #1
  40ca40:	bl	40a2c0 <log_get_max_level_realm@plt>
  40ca44:	cmp	w0, #0x6
  40ca48:	b.lt	40ca74 <main+0x9a8>  // b.tstop
  40ca4c:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40ca50:	adrp	x4, 434000 <__libc_csu_init+0x60>
  40ca54:	adrp	x5, 434000 <__libc_csu_init+0x60>
  40ca58:	add	x2, x2, #0x22b
  40ca5c:	add	x4, x4, #0x23c
  40ca60:	add	x5, x5, #0x371
  40ca64:	mov	w0, #0x406                 	// #1030
  40ca68:	mov	w3, #0x700                 	// #1792
  40ca6c:	mov	w1, wzr
  40ca70:	bl	40a2d0 <log_internal_realm@plt>
  40ca74:	mov	w0, #0x1                   	// #1
  40ca78:	bl	40a2c0 <log_get_max_level_realm@plt>
  40ca7c:	cmp	w0, #0x6
  40ca80:	b.gt	40cad4 <main+0xa08>
  40ca84:	mov	w0, #0xffffffff            	// #-1
  40ca88:	mov	w1, #0xffffffff            	// #-1
  40ca8c:	mov	w2, #0xffffffff            	// #-1
  40ca90:	bl	40a4d0 <rearrange_stdio@plt>
  40ca94:	tbz	w0, #31, 40cad4 <main+0xa08>
  40ca98:	mov	w20, w0
  40ca9c:	mov	w0, #0x1                   	// #1
  40caa0:	bl	40a2c0 <log_get_max_level_realm@plt>
  40caa4:	cmp	w0, #0x4
  40caa8:	b.lt	40cad4 <main+0xa08>  // b.tstop
  40caac:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40cab0:	adrp	x4, 434000 <__libc_csu_init+0x60>
  40cab4:	adrp	x5, 434000 <__libc_csu_init+0x60>
  40cab8:	add	x2, x2, #0x22b
  40cabc:	add	x4, x4, #0x23c
  40cac0:	add	x5, x5, #0x386
  40cac4:	mov	w0, #0x404                 	// #1028
  40cac8:	mov	w3, #0x706                 	// #1798
  40cacc:	mov	w1, w20
  40cad0:	bl	40a2d0 <log_internal_realm@plt>
  40cad4:	bl	40a4e0 <fork@plt>
  40cad8:	tbnz	w0, #31, 40cb30 <main+0xa64>
  40cadc:	cbz	w0, 40cb6c <main+0xaa0>
  40cae0:	mov	w20, wzr
  40cae4:	b	40c61c <main+0x550>
  40cae8:	mov	w0, #0x1                   	// #1
  40caec:	bl	40a2c0 <log_get_max_level_realm@plt>
  40caf0:	cmp	w0, #0x3
  40caf4:	b.lt	40cb1c <main+0xa50>  // b.tstop
  40caf8:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40cafc:	adrp	x4, 434000 <__libc_csu_init+0x60>
  40cb00:	adrp	x5, 434000 <__libc_csu_init+0x60>
  40cb04:	add	x2, x2, #0x22b
  40cb08:	add	x4, x4, #0x23c
  40cb0c:	add	x5, x5, #0x354
  40cb10:	mov	w0, #0x403                 	// #1027
  40cb14:	mov	w3, #0x6fb                 	// #1787
  40cb18:	b	40c60c <main+0x540>
  40cb1c:	mov	w8, wzr
  40cb20:	mov	x19, xzr
  40cb24:	neg	w9, w20
  40cb28:	sub	w20, w8, w9, uxtb
  40cb2c:	b	40c61c <main+0x550>
  40cb30:	bl	40a3e0 <__errno_location@plt>
  40cb34:	ldr	w20, [x0]
  40cb38:	mov	w0, #0x1                   	// #1
  40cb3c:	bl	40a2c0 <log_get_max_level_realm@plt>
  40cb40:	cmp	w0, #0x3
  40cb44:	b.lt	40d2c0 <main+0x11f4>  // b.tstop
  40cb48:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40cb4c:	adrp	x4, 434000 <__libc_csu_init+0x60>
  40cb50:	adrp	x5, 434000 <__libc_csu_init+0x60>
  40cb54:	add	x2, x2, #0x22b
  40cb58:	add	x4, x4, #0x23c
  40cb5c:	add	x5, x5, #0x3bb
  40cb60:	mov	w0, #0x403                 	// #1027
  40cb64:	mov	w3, #0x70b                 	// #1803
  40cb68:	b	40cec4 <main+0xdf8>
  40cb6c:	bl	40a4f0 <setsid@plt>
  40cb70:	mov	w0, #0xfffffc18            	// #-1000
  40cb74:	bl	40a500 <set_oom_score_adjust@plt>
  40cb78:	tbz	w0, #31, 40cbb8 <main+0xaec>
  40cb7c:	mov	w20, w0
  40cb80:	mov	w0, #0x1                   	// #1
  40cb84:	bl	40a2c0 <log_get_max_level_realm@plt>
  40cb88:	cmp	w0, #0x7
  40cb8c:	b.lt	40cbb8 <main+0xaec>  // b.tstop
  40cb90:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40cb94:	adrp	x4, 434000 <__libc_csu_init+0x60>
  40cb98:	adrp	x5, 434000 <__libc_csu_init+0x60>
  40cb9c:	add	x2, x2, #0x22b
  40cba0:	add	x4, x4, #0x23c
  40cba4:	add	x5, x5, #0x3d5
  40cba8:	mov	w0, #0x407                 	// #1031
  40cbac:	mov	w3, #0x715                 	// #1813
  40cbb0:	mov	w1, w20
  40cbb4:	bl	40a2d0 <log_internal_realm@plt>
  40cbb8:	bl	40a510 <getpid_cached@plt>
  40cbbc:	add	x20, x19, #0x54
  40cbc0:	mov	w1, #0x2                   	// #2
  40cbc4:	str	w0, [x19, #32]
  40cbc8:	mov	w0, #0x1                   	// #1
  40cbcc:	movk	w1, #0x8, lsl #16
  40cbd0:	mov	w2, wzr
  40cbd4:	mov	x3, x20
  40cbd8:	mov	w21, #0x1                   	// #1
  40cbdc:	bl	40a520 <socketpair@plt>
  40cbe0:	tbnz	w0, #31, 40ce8c <main+0xdc0>
  40cbe4:	ldr	w20, [x20]
  40cbe8:	add	x3, sp, #0x8
  40cbec:	mov	w1, #0x1                   	// #1
  40cbf0:	mov	w2, #0x10                  	// #16
  40cbf4:	mov	w4, #0x4                   	// #4
  40cbf8:	mov	w0, w20
  40cbfc:	str	w21, [sp, #8]
  40cc00:	bl	40a530 <setsockopt@plt>
  40cc04:	tbnz	w0, #31, 40cecc <main+0xe00>
  40cc08:	bl	41f734 <udev_watch_init>
  40cc0c:	mov	w21, w0
  40cc10:	tbnz	w0, #31, 40cf14 <main+0xe48>
  40cc14:	str	w21, [x19, #80]
  40cc18:	bl	41f76c <udev_watch_restore>
  40cc1c:	mov	w2, #0xf                   	// #15
  40cc20:	mov	w3, #0x2                   	// #2
  40cc24:	mov	w4, #0x1                   	// #1
  40cc28:	mov	w5, #0x11                  	// #17
  40cc2c:	mov	w6, #0xffffffff            	// #-1
  40cc30:	mov	w0, wzr
  40cc34:	mov	x1, xzr
  40cc38:	bl	40a540 <sigprocmask_many@plt>
  40cc3c:	tbnz	w0, #31, 40d334 <main+0x1268>
  40cc40:	mov	x0, x19
  40cc44:	bl	40a550 <sd_event_default@plt>
  40cc48:	tbnz	w0, #31, 40cf48 <main+0xe7c>
  40cc4c:	ldr	x0, [x19]
  40cc50:	adrp	x3, 40d000 <main+0xf34>
  40cc54:	add	x3, x3, #0x7b4
  40cc58:	mov	w2, #0x2                   	// #2
  40cc5c:	mov	x1, xzr
  40cc60:	mov	x4, x19
  40cc64:	bl	40a560 <sd_event_add_signal@plt>
  40cc68:	tbnz	w0, #31, 40cf8c <main+0xec0>
  40cc6c:	ldr	x0, [x19]
  40cc70:	adrp	x3, 40d000 <main+0xf34>
  40cc74:	add	x3, x3, #0x7b4
  40cc78:	mov	w2, #0xf                   	// #15
  40cc7c:	mov	x1, xzr
  40cc80:	mov	x4, x19
  40cc84:	bl	40a560 <sd_event_add_signal@plt>
  40cc88:	tbnz	w0, #31, 40cfc4 <main+0xef8>
  40cc8c:	ldr	x0, [x19]
  40cc90:	adrp	x3, 40d000 <main+0xf34>
  40cc94:	add	x3, x3, #0x7f8
  40cc98:	mov	w2, #0x1                   	// #1
  40cc9c:	mov	x1, xzr
  40cca0:	mov	x4, x19
  40cca4:	bl	40a560 <sd_event_add_signal@plt>
  40cca8:	tbnz	w0, #31, 40cffc <main+0xf30>
  40ccac:	ldr	x0, [x19]
  40ccb0:	adrp	x3, 40d000 <main+0xf34>
  40ccb4:	add	x3, x3, #0x83c
  40ccb8:	mov	w2, #0x11                  	// #17
  40ccbc:	mov	x1, xzr
  40ccc0:	mov	x4, x19
  40ccc4:	bl	40a560 <sd_event_add_signal@plt>
  40ccc8:	tbnz	w0, #31, 40d034 <main+0xf68>
  40cccc:	ldr	x0, [x19]
  40ccd0:	mov	w1, #0x1                   	// #1
  40ccd4:	bl	40a570 <sd_event_set_watchdog@plt>
  40ccd8:	tbnz	w0, #31, 40d06c <main+0xfa0>
  40ccdc:	ldr	x0, [x19, #72]
  40cce0:	ldr	x1, [x19]
  40cce4:	bl	411248 <udev_ctrl_attach_event>
  40cce8:	tbnz	w0, #31, 40d0a4 <main+0xfd8>
  40ccec:	ldr	x0, [x19, #72]
  40ccf0:	adrp	x1, 40d000 <main+0xf34>
  40ccf4:	add	x1, x1, #0xc94
  40ccf8:	mov	x2, x19
  40ccfc:	bl	411338 <udev_ctrl_start>
  40cd00:	tbnz	w0, #31, 40d0dc <main+0x1010>
  40cd04:	ldr	x0, [x19, #72]
  40cd08:	bl	4112fc <udev_ctrl_get_event_source>
  40cd0c:	mov	w1, #0x64                  	// #100
  40cd10:	bl	40a580 <sd_event_source_set_priority@plt>
  40cd14:	tbnz	w0, #31, 40d114 <main+0x1048>
  40cd18:	ldr	x0, [x19]
  40cd1c:	ldr	w2, [x19, #80]
  40cd20:	adrp	x4, 40e000 <on_ctrl_msg+0x36c>
  40cd24:	add	x1, x19, #0x60
  40cd28:	add	x4, x4, #0x2f4
  40cd2c:	mov	w3, #0x1                   	// #1
  40cd30:	mov	x5, x19
  40cd34:	bl	40a590 <sd_event_add_io@plt>
  40cd38:	tbnz	w0, #31, 40d14c <main+0x1080>
  40cd3c:	ldr	x0, [x19, #64]
  40cd40:	ldr	x1, [x19]
  40cd44:	bl	40a5a0 <sd_device_monitor_attach_event@plt>
  40cd48:	tbnz	w0, #31, 40d184 <main+0x10b8>
  40cd4c:	ldr	x0, [x19, #64]
  40cd50:	adrp	x1, 40e000 <on_ctrl_msg+0x36c>
  40cd54:	add	x1, x1, #0x7a0
  40cd58:	mov	x2, x19
  40cd5c:	bl	40a5b0 <sd_device_monitor_start@plt>
  40cd60:	tbnz	w0, #31, 40d1bc <main+0x10f0>
  40cd64:	ldr	x0, [x19, #64]
  40cd68:	bl	40a5c0 <sd_device_monitor_get_event_source@plt>
  40cd6c:	adrp	x1, 434000 <__libc_csu_init+0x60>
  40cd70:	add	x1, x1, #0xd13
  40cd74:	bl	40a5d0 <sd_event_source_set_description@plt>
  40cd78:	ldr	x0, [x19]
  40cd7c:	adrp	x4, 40e000 <on_ctrl_msg+0x36c>
  40cd80:	add	x4, x4, #0xaa8
  40cd84:	mov	w3, #0x1                   	// #1
  40cd88:	mov	x1, xzr
  40cd8c:	mov	w2, w20
  40cd90:	mov	x5, x19
  40cd94:	bl	40a590 <sd_event_add_io@plt>
  40cd98:	tbnz	w0, #31, 40d210 <main+0x1144>
  40cd9c:	ldr	x0, [x19]
  40cda0:	adrp	x2, 40e000 <on_ctrl_msg+0x36c>
  40cda4:	add	x2, x2, #0xd60
  40cda8:	mov	x1, xzr
  40cdac:	mov	x3, x19
  40cdb0:	bl	40a5e0 <sd_event_add_post@plt>
  40cdb4:	tbnz	w0, #31, 40d248 <main+0x117c>
  40cdb8:	bl	420270 <udev_builtin_init>
  40cdbc:	adrp	x8, 470000 <arg_resolve_name_timing>
  40cdc0:	ldr	w1, [x8]
  40cdc4:	add	x0, x19, #0x28
  40cdc8:	bl	416ba4 <udev_rules_new>
  40cdcc:	ldr	x8, [x19, #40]
  40cdd0:	cbz	x8, 40d288 <main+0x11bc>
  40cdd4:	mov	x0, x8
  40cdd8:	bl	417a4c <udev_rules_apply_static_dev_perms>
  40cddc:	tbz	w0, #31, 40ce1c <main+0xd50>
  40cde0:	mov	w20, w0
  40cde4:	mov	w0, #0x1                   	// #1
  40cde8:	bl	40a2c0 <log_get_max_level_realm@plt>
  40cdec:	cmp	w0, #0x3
  40cdf0:	b.lt	40ce1c <main+0xd50>  // b.tstop
  40cdf4:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40cdf8:	adrp	x4, 434000 <__libc_csu_init+0x60>
  40cdfc:	adrp	x5, 434000 <__libc_csu_init+0x60>
  40ce00:	add	x2, x2, #0x22b
  40ce04:	add	x4, x4, #0xa3f
  40ce08:	add	x5, x5, #0xd90
  40ce0c:	mov	w0, #0x403                 	// #1027
  40ce10:	mov	w3, #0x697                 	// #1687
  40ce14:	mov	w1, w20
  40ce18:	bl	40a2d0 <log_internal_realm@plt>
  40ce1c:	ldr	w2, [x23, #40]
  40ce20:	adrp	x1, 434000 <__libc_csu_init+0x60>
  40ce24:	add	x1, x1, #0xdc7
  40ce28:	mov	w0, wzr
  40ce2c:	bl	40a5f0 <sd_notifyf@plt>
  40ce30:	ldr	x0, [x19]
  40ce34:	bl	40a600 <sd_event_loop@plt>
  40ce38:	mov	w20, w0
  40ce3c:	tbz	w0, #31, 40ce78 <main+0xdac>
  40ce40:	mov	w0, #0x1                   	// #1
  40ce44:	bl	40a2c0 <log_get_max_level_realm@plt>
  40ce48:	cmp	w0, #0x3
  40ce4c:	b.lt	40ce78 <main+0xdac>  // b.tstop
  40ce50:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40ce54:	adrp	x4, 434000 <__libc_csu_init+0x60>
  40ce58:	adrp	x5, 434000 <__libc_csu_init+0x60>
  40ce5c:	add	x2, x2, #0x22b
  40ce60:	add	x4, x4, #0xa3f
  40ce64:	add	x5, x5, #0xdf9
  40ce68:	mov	w0, #0x403                 	// #1027
  40ce6c:	mov	w3, #0x69f                 	// #1695
  40ce70:	mov	w1, w20
  40ce74:	bl	40a2d0 <log_internal_realm@plt>
  40ce78:	adrp	x1, 434000 <__libc_csu_init+0x60>
  40ce7c:	add	x1, x1, #0xe0f
  40ce80:	mov	w0, wzr
  40ce84:	bl	40a610 <sd_notify@plt>
  40ce88:	b	40c61c <main+0x550>
  40ce8c:	bl	40a3e0 <__errno_location@plt>
  40ce90:	ldr	w20, [x0]
  40ce94:	mov	w0, #0x1                   	// #1
  40ce98:	bl	40a2c0 <log_get_max_level_realm@plt>
  40ce9c:	cmp	w0, #0x3
  40cea0:	b.lt	40d2c0 <main+0x11f4>  // b.tstop
  40cea4:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40cea8:	adrp	x4, 434000 <__libc_csu_init+0x60>
  40ceac:	adrp	x5, 434000 <__libc_csu_init+0x60>
  40ceb0:	add	x2, x2, #0x22b
  40ceb4:	add	x4, x4, #0xa3f
  40ceb8:	add	x5, x5, #0xa49
  40cebc:	mov	w0, #0x403                 	// #1027
  40cec0:	mov	w3, #0x63f                 	// #1599
  40cec4:	mov	w1, w20
  40cec8:	b	40d1f4 <main+0x1128>
  40cecc:	bl	40a3e0 <__errno_location@plt>
  40ced0:	ldr	w21, [x0]
  40ced4:	cmp	w21, #0x1
  40ced8:	b.lt	40cc08 <main+0xb3c>  // b.tstop
  40cedc:	mov	w0, #0x1                   	// #1
  40cee0:	bl	40a2c0 <log_get_max_level_realm@plt>
  40cee4:	cmp	w0, #0x3
  40cee8:	b.lt	40cf80 <main+0xeb4>  // b.tstop
  40ceec:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40cef0:	adrp	x4, 434000 <__libc_csu_init+0x60>
  40cef4:	adrp	x5, 434000 <__libc_csu_init+0x60>
  40cef8:	neg	w1, w21
  40cefc:	add	x2, x2, #0x22b
  40cf00:	add	x4, x4, #0xa3f
  40cf04:	add	x5, x5, #0xa88
  40cf08:	mov	w0, #0x403                 	// #1027
  40cf0c:	mov	w3, #0x645                 	// #1605
  40cf10:	b	40d1f4 <main+0x1128>
  40cf14:	mov	w0, #0x1                   	// #1
  40cf18:	bl	40a2c0 <log_get_max_level_realm@plt>
  40cf1c:	cmp	w0, #0x3
  40cf20:	b.lt	40d200 <main+0x1134>  // b.tstop
  40cf24:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40cf28:	adrp	x4, 434000 <__libc_csu_init+0x60>
  40cf2c:	adrp	x5, 434000 <__libc_csu_init+0x60>
  40cf30:	add	x2, x2, #0x22b
  40cf34:	add	x4, x4, #0xa3f
  40cf38:	add	x5, x5, #0xaa9
  40cf3c:	mov	w0, #0x403                 	// #1027
  40cf40:	mov	w3, #0x649                 	// #1609
  40cf44:	b	40d1f0 <main+0x1124>
  40cf48:	mov	w21, w0
  40cf4c:	mov	w0, #0x1                   	// #1
  40cf50:	bl	40a2c0 <log_get_max_level_realm@plt>
  40cf54:	cmp	w0, #0x3
  40cf58:	b.lt	40d200 <main+0x1134>  // b.tstop
  40cf5c:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40cf60:	adrp	x4, 434000 <__libc_csu_init+0x60>
  40cf64:	adrp	x5, 434000 <__libc_csu_init+0x60>
  40cf68:	add	x2, x2, #0x22b
  40cf6c:	add	x4, x4, #0xa3f
  40cf70:	add	x5, x5, #0xb37
  40cf74:	mov	w0, #0x403                 	// #1027
  40cf78:	mov	w3, #0x653                 	// #1619
  40cf7c:	b	40d1f0 <main+0x1124>
  40cf80:	mov	w8, wzr
  40cf84:	sub	w20, w8, w21, uxtb
  40cf88:	b	40c61c <main+0x550>
  40cf8c:	mov	w21, w0
  40cf90:	mov	w0, #0x1                   	// #1
  40cf94:	bl	40a2c0 <log_get_max_level_realm@plt>
  40cf98:	cmp	w0, #0x3
  40cf9c:	b.lt	40d200 <main+0x1134>  // b.tstop
  40cfa0:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40cfa4:	adrp	x4, 434000 <__libc_csu_init+0x60>
  40cfa8:	adrp	x5, 434000 <__libc_csu_init+0x60>
  40cfac:	add	x2, x2, #0x22b
  40cfb0:	add	x4, x4, #0xa3f
  40cfb4:	add	x5, x5, #0xb59
  40cfb8:	mov	w0, #0x403                 	// #1027
  40cfbc:	mov	w3, #0x657                 	// #1623
  40cfc0:	b	40d1f0 <main+0x1124>
  40cfc4:	mov	w21, w0
  40cfc8:	mov	w0, #0x1                   	// #1
  40cfcc:	bl	40a2c0 <log_get_max_level_realm@plt>
  40cfd0:	cmp	w0, #0x3
  40cfd4:	b.lt	40d200 <main+0x1134>  // b.tstop
  40cfd8:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40cfdc:	adrp	x4, 434000 <__libc_csu_init+0x60>
  40cfe0:	adrp	x5, 434000 <__libc_csu_init+0x60>
  40cfe4:	add	x2, x2, #0x22b
  40cfe8:	add	x4, x4, #0xa3f
  40cfec:	add	x5, x5, #0xb82
  40cff0:	mov	w0, #0x403                 	// #1027
  40cff4:	mov	w3, #0x65b                 	// #1627
  40cff8:	b	40d1f0 <main+0x1124>
  40cffc:	mov	w21, w0
  40d000:	mov	w0, #0x1                   	// #1
  40d004:	bl	40a2c0 <log_get_max_level_realm@plt>
  40d008:	cmp	w0, #0x3
  40d00c:	b.lt	40d200 <main+0x1134>  // b.tstop
  40d010:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40d014:	adrp	x4, 434000 <__libc_csu_init+0x60>
  40d018:	adrp	x5, 434000 <__libc_csu_init+0x60>
  40d01c:	add	x2, x2, #0x22b
  40d020:	add	x4, x4, #0xa3f
  40d024:	add	x5, x5, #0xbac
  40d028:	mov	w0, #0x403                 	// #1027
  40d02c:	mov	w3, #0x65f                 	// #1631
  40d030:	b	40d1f0 <main+0x1124>
  40d034:	mov	w21, w0
  40d038:	mov	w0, #0x1                   	// #1
  40d03c:	bl	40a2c0 <log_get_max_level_realm@plt>
  40d040:	cmp	w0, #0x3
  40d044:	b.lt	40d200 <main+0x1134>  // b.tstop
  40d048:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40d04c:	adrp	x4, 434000 <__libc_csu_init+0x60>
  40d050:	adrp	x5, 434000 <__libc_csu_init+0x60>
  40d054:	add	x2, x2, #0x22b
  40d058:	add	x4, x4, #0xa3f
  40d05c:	add	x5, x5, #0xbd5
  40d060:	mov	w0, #0x403                 	// #1027
  40d064:	mov	w3, #0x663                 	// #1635
  40d068:	b	40d1f0 <main+0x1124>
  40d06c:	mov	w21, w0
  40d070:	mov	w0, #0x1                   	// #1
  40d074:	bl	40a2c0 <log_get_max_level_realm@plt>
  40d078:	cmp	w0, #0x3
  40d07c:	b.lt	40d200 <main+0x1134>  // b.tstop
  40d080:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40d084:	adrp	x4, 434000 <__libc_csu_init+0x60>
  40d088:	adrp	x5, 434000 <__libc_csu_init+0x60>
  40d08c:	add	x2, x2, #0x22b
  40d090:	add	x4, x4, #0xa3f
  40d094:	add	x5, x5, #0xbff
  40d098:	mov	w0, #0x403                 	// #1027
  40d09c:	mov	w3, #0x667                 	// #1639
  40d0a0:	b	40d1f0 <main+0x1124>
  40d0a4:	mov	w21, w0
  40d0a8:	mov	w0, #0x1                   	// #1
  40d0ac:	bl	40a2c0 <log_get_max_level_realm@plt>
  40d0b0:	cmp	w0, #0x3
  40d0b4:	b.lt	40d200 <main+0x1134>  // b.tstop
  40d0b8:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40d0bc:	adrp	x4, 434000 <__libc_csu_init+0x60>
  40d0c0:	adrp	x5, 434000 <__libc_csu_init+0x60>
  40d0c4:	add	x2, x2, #0x22b
  40d0c8:	add	x4, x4, #0xa3f
  40d0cc:	add	x5, x5, #0xc2a
  40d0d0:	mov	w0, #0x403                 	// #1027
  40d0d4:	mov	w3, #0x66b                 	// #1643
  40d0d8:	b	40d1f0 <main+0x1124>
  40d0dc:	mov	w21, w0
  40d0e0:	mov	w0, #0x1                   	// #1
  40d0e4:	bl	40a2c0 <log_get_max_level_realm@plt>
  40d0e8:	cmp	w0, #0x3
  40d0ec:	b.lt	40d200 <main+0x1134>  // b.tstop
  40d0f0:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40d0f4:	adrp	x4, 434000 <__libc_csu_init+0x60>
  40d0f8:	adrp	x5, 434000 <__libc_csu_init+0x60>
  40d0fc:	add	x2, x2, #0x22b
  40d100:	add	x4, x4, #0xa3f
  40d104:	add	x5, x5, #0xc55
  40d108:	mov	w0, #0x403                 	// #1027
  40d10c:	mov	w3, #0x66f                 	// #1647
  40d110:	b	40d1f0 <main+0x1124>
  40d114:	mov	w21, w0
  40d118:	mov	w0, #0x1                   	// #1
  40d11c:	bl	40a2c0 <log_get_max_level_realm@plt>
  40d120:	cmp	w0, #0x3
  40d124:	b.lt	40d200 <main+0x1134>  // b.tstop
  40d128:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40d12c:	adrp	x4, 434000 <__libc_csu_init+0x60>
  40d130:	adrp	x5, 434000 <__libc_csu_init+0x60>
  40d134:	add	x2, x2, #0x22b
  40d138:	add	x4, x4, #0xa3f
  40d13c:	add	x5, x5, #0xc78
  40d140:	mov	w0, #0x403                 	// #1027
  40d144:	mov	w3, #0x677                 	// #1655
  40d148:	b	40d1f0 <main+0x1124>
  40d14c:	mov	w21, w0
  40d150:	mov	w0, #0x1                   	// #1
  40d154:	bl	40a2c0 <log_get_max_level_realm@plt>
  40d158:	cmp	w0, #0x3
  40d15c:	b.lt	40d200 <main+0x1134>  // b.tstop
  40d160:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40d164:	adrp	x4, 434000 <__libc_csu_init+0x60>
  40d168:	adrp	x5, 434000 <__libc_csu_init+0x60>
  40d16c:	add	x2, x2, #0x22b
  40d170:	add	x4, x4, #0xa3f
  40d174:	add	x5, x5, #0xcbc
  40d178:	mov	w0, #0x403                 	// #1027
  40d17c:	mov	w3, #0x67b                 	// #1659
  40d180:	b	40d1f0 <main+0x1124>
  40d184:	mov	w21, w0
  40d188:	mov	w0, #0x1                   	// #1
  40d18c:	bl	40a2c0 <log_get_max_level_realm@plt>
  40d190:	cmp	w0, #0x3
  40d194:	b.lt	40d200 <main+0x1134>  // b.tstop
  40d198:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40d19c:	adrp	x4, 434000 <__libc_csu_init+0x60>
  40d1a0:	adrp	x5, 434000 <__libc_csu_init+0x60>
  40d1a4:	add	x2, x2, #0x22b
  40d1a8:	add	x4, x4, #0xa3f
  40d1ac:	add	x5, x5, #0xce6
  40d1b0:	mov	w0, #0x403                 	// #1027
  40d1b4:	mov	w3, #0x67f                 	// #1663
  40d1b8:	b	40d1f0 <main+0x1124>
  40d1bc:	mov	w21, w0
  40d1c0:	mov	w0, #0x1                   	// #1
  40d1c4:	bl	40a2c0 <log_get_max_level_realm@plt>
  40d1c8:	cmp	w0, #0x3
  40d1cc:	b.lt	40d200 <main+0x1134>  // b.tstop
  40d1d0:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40d1d4:	adrp	x4, 434000 <__libc_csu_init+0x60>
  40d1d8:	adrp	x5, 434000 <__libc_csu_init+0x60>
  40d1dc:	add	x2, x2, #0x22b
  40d1e0:	add	x4, x4, #0xa3f
  40d1e4:	add	x5, x5, #0xc55
  40d1e8:	mov	w0, #0x403                 	// #1027
  40d1ec:	mov	w3, #0x683                 	// #1667
  40d1f0:	mov	w1, w21
  40d1f4:	bl	40a2d0 <log_internal_realm@plt>
  40d1f8:	mov	w20, w0
  40d1fc:	b	40c61c <main+0x550>
  40d200:	mov	w8, wzr
  40d204:	neg	w9, w21
  40d208:	sub	w20, w8, w9, uxtb
  40d20c:	b	40c61c <main+0x550>
  40d210:	mov	w20, w0
  40d214:	mov	w0, #0x1                   	// #1
  40d218:	bl	40a2c0 <log_get_max_level_realm@plt>
  40d21c:	cmp	w0, #0x3
  40d220:	b.lt	40d280 <main+0x11b4>  // b.tstop
  40d224:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40d228:	adrp	x4, 434000 <__libc_csu_init+0x60>
  40d22c:	adrp	x5, 434000 <__libc_csu_init+0x60>
  40d230:	add	x2, x2, #0x22b
  40d234:	add	x4, x4, #0xa3f
  40d238:	add	x5, x5, #0xd22
  40d23c:	mov	w0, #0x403                 	// #1027
  40d240:	mov	w3, #0x689                 	// #1673
  40d244:	b	40cec4 <main+0xdf8>
  40d248:	mov	w20, w0
  40d24c:	mov	w0, #0x1                   	// #1
  40d250:	bl	40a2c0 <log_get_max_level_realm@plt>
  40d254:	cmp	w0, #0x3
  40d258:	b.lt	40d280 <main+0x11b4>  // b.tstop
  40d25c:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40d260:	adrp	x4, 434000 <__libc_csu_init+0x60>
  40d264:	adrp	x5, 434000 <__libc_csu_init+0x60>
  40d268:	add	x2, x2, #0x22b
  40d26c:	add	x4, x4, #0xa3f
  40d270:	add	x5, x5, #0xd4b
  40d274:	mov	w0, #0x403                 	// #1027
  40d278:	mov	w3, #0x68d                 	// #1677
  40d27c:	b	40cec4 <main+0xdf8>
  40d280:	mov	w8, wzr
  40d284:	b	40cb24 <main+0xa58>
  40d288:	mov	w20, w0
  40d28c:	mov	w0, #0x1                   	// #1
  40d290:	bl	40a2c0 <log_get_max_level_realm@plt>
  40d294:	cmp	w0, #0x3
  40d298:	b.lt	40d2c0 <main+0x11f4>  // b.tstop
  40d29c:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40d2a0:	adrp	x4, 434000 <__libc_csu_init+0x60>
  40d2a4:	adrp	x5, 434000 <__libc_csu_init+0x60>
  40d2a8:	add	x2, x2, #0x22b
  40d2ac:	add	x4, x4, #0xa3f
  40d2b0:	add	x5, x5, #0xd72
  40d2b4:	mov	w0, #0x403                 	// #1027
  40d2b8:	mov	w3, #0x693                 	// #1683
  40d2bc:	b	40cec4 <main+0xdf8>
  40d2c0:	mov	w8, wzr
  40d2c4:	b	40c730 <main+0x664>
  40d2c8:	adrp	x1, 434000 <__libc_csu_init+0x60>
  40d2cc:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40d2d0:	adrp	x4, 434000 <__libc_csu_init+0x60>
  40d2d4:	add	x1, x1, #0x61d
  40d2d8:	add	x2, x2, #0x22b
  40d2dc:	add	x4, x4, #0x506
  40d2e0:	mov	w0, #0x1                   	// #1
  40d2e4:	mov	w3, #0x608                 	// #1544
  40d2e8:	bl	40a620 <log_assert_failed_unreachable_realm@plt>
  40d2ec:	adrp	x1, 434000 <__libc_csu_init+0x60>
  40d2f0:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40d2f4:	adrp	x4, 434000 <__libc_csu_init+0x60>
  40d2f8:	add	x1, x1, #0x4fc
  40d2fc:	add	x2, x2, #0x22b
  40d300:	add	x4, x4, #0x506
  40d304:	mov	w0, #0x1                   	// #1
  40d308:	mov	w3, #0x5db                 	// #1499
  40d30c:	bl	40a630 <log_assert_failed_realm@plt>
  40d310:	adrp	x1, 434000 <__libc_csu_init+0x60>
  40d314:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40d318:	adrp	x4, 434000 <__libc_csu_init+0x60>
  40d31c:	add	x1, x1, #0x523
  40d320:	add	x2, x2, #0x22b
  40d324:	add	x4, x4, #0x506
  40d328:	mov	w0, #0x1                   	// #1
  40d32c:	mov	w3, #0x5dc                 	// #1500
  40d330:	bl	40a630 <log_assert_failed_realm@plt>
  40d334:	adrp	x1, 434000 <__libc_csu_init+0x60>
  40d338:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40d33c:	adrp	x4, 434000 <__libc_csu_init+0x60>
  40d340:	add	x1, x1, #0xad1
  40d344:	add	x2, x2, #0x22b
  40d348:	add	x4, x4, #0xb1e
  40d34c:	mov	w0, #0x1                   	// #1
  40d350:	mov	w3, #0x64f                 	// #1615
  40d354:	bl	40a630 <log_assert_failed_realm@plt>

000000000040d358 <manager_freep>:
  40d358:	cbz	x0, 40d3d4 <manager_freep+0x7c>
  40d35c:	stp	x29, x30, [sp, #-32]!
  40d360:	stp	x20, x19, [sp, #16]
  40d364:	mov	x29, sp
  40d368:	mov	x19, x0
  40d36c:	bl	420378 <udev_builtin_exit>
  40d370:	ldr	w20, [x19, #32]
  40d374:	bl	40a510 <getpid_cached@plt>
  40d378:	cmp	w20, w0
  40d37c:	b.ne	40d388 <manager_freep+0x30>  // b.any
  40d380:	ldr	x0, [x19, #72]
  40d384:	bl	411220 <udev_ctrl_cleanup>
  40d388:	mov	x0, x19
  40d38c:	bl	40d588 <manager_clear_for_worker>
  40d390:	ldr	x0, [x19, #56]
  40d394:	bl	40a640 <sd_netlink_unref@plt>
  40d398:	ldr	x0, [x19, #48]
  40d39c:	adrp	x1, 40a000 <_init-0x1e8>
  40d3a0:	add	x1, x1, #0x320
  40d3a4:	mov	x2, x1
  40d3a8:	bl	40a650 <internal_hashmap_free@plt>
  40d3ac:	ldr	x0, [x19, #40]
  40d3b0:	bl	416b0c <udev_rules_free>
  40d3b4:	ldr	w0, [x19, #80]
  40d3b8:	bl	40a660 <safe_close@plt>
  40d3bc:	add	x0, x19, #0x54
  40d3c0:	bl	40a670 <safe_close_pair@plt>
  40d3c4:	mov	x0, x19
  40d3c8:	ldp	x20, x19, [sp, #16]
  40d3cc:	ldp	x29, x30, [sp], #32
  40d3d0:	b	40a320 <free@plt>
  40d3d4:	ret

000000000040d3d8 <parse_proc_cmdline_item>:
  40d3d8:	stp	x29, x30, [sp, #-48]!
  40d3dc:	str	x21, [sp, #16]
  40d3e0:	stp	x20, x19, [sp, #32]
  40d3e4:	mov	x29, sp
  40d3e8:	cbz	x0, 40d564 <parse_proc_cmdline_item+0x18c>
  40d3ec:	mov	x20, x1
  40d3f0:	cbz	x1, 40d4f8 <parse_proc_cmdline_item+0x120>
  40d3f4:	adrp	x1, 434000 <__libc_csu_init+0x60>
  40d3f8:	add	x1, x1, #0x8d3
  40d3fc:	mov	x19, x0
  40d400:	bl	40a680 <proc_cmdline_key_streq@plt>
  40d404:	tbz	w0, #0, 40d428 <parse_proc_cmdline_item+0x50>
  40d408:	mov	x0, x20
  40d40c:	bl	40a690 <log_level_from_string@plt>
  40d410:	mov	w21, w0
  40d414:	tbnz	w0, #31, 40d4b8 <parse_proc_cmdline_item+0xe0>
  40d418:	mov	w0, #0x1                   	// #1
  40d41c:	mov	w1, w21
  40d420:	bl	40a350 <log_set_max_level_realm@plt>
  40d424:	b	40d4f8 <parse_proc_cmdline_item+0x120>
  40d428:	adrp	x1, 434000 <__libc_csu_init+0x60>
  40d42c:	add	x1, x1, #0x8e5
  40d430:	mov	x0, x19
  40d434:	bl	40a680 <proc_cmdline_key_streq@plt>
  40d438:	tbz	w0, #0, 40d458 <parse_proc_cmdline_item+0x80>
  40d43c:	adrp	x1, 470000 <arg_resolve_name_timing>
  40d440:	add	x1, x1, #0x8
  40d444:	mov	x0, x20
  40d448:	bl	40a2b0 <parse_sec@plt>
  40d44c:	mov	w21, w0
  40d450:	tbz	w0, #31, 40d4f8 <parse_proc_cmdline_item+0x120>
  40d454:	b	40d4b8 <parse_proc_cmdline_item+0xe0>
  40d458:	adrp	x1, 434000 <__libc_csu_init+0x60>
  40d45c:	add	x1, x1, #0x8f8
  40d460:	mov	x0, x19
  40d464:	bl	40a680 <proc_cmdline_key_streq@plt>
  40d468:	tbz	w0, #0, 40d48c <parse_proc_cmdline_item+0xb4>
  40d46c:	adrp	x2, 470000 <arg_resolve_name_timing>
  40d470:	add	x2, x2, #0x28
  40d474:	mov	x0, x20
  40d478:	mov	w1, wzr
  40d47c:	bl	40a2e0 <safe_atou_full@plt>
  40d480:	mov	w21, w0
  40d484:	tbz	w0, #31, 40d4f8 <parse_proc_cmdline_item+0x120>
  40d488:	b	40d4b8 <parse_proc_cmdline_item+0xe0>
  40d48c:	adrp	x1, 434000 <__libc_csu_init+0x60>
  40d490:	add	x1, x1, #0x90a
  40d494:	mov	x0, x19
  40d498:	bl	40a680 <proc_cmdline_key_streq@plt>
  40d49c:	tbz	w0, #0, 40d50c <parse_proc_cmdline_item+0x134>
  40d4a0:	adrp	x1, 470000 <arg_resolve_name_timing>
  40d4a4:	add	x1, x1, #0x30
  40d4a8:	mov	x0, x20
  40d4ac:	bl	40a2b0 <parse_sec@plt>
  40d4b0:	mov	w21, w0
  40d4b4:	tbz	w0, #31, 40d4f8 <parse_proc_cmdline_item+0x120>
  40d4b8:	mov	w0, #0x1                   	// #1
  40d4bc:	bl	40a2c0 <log_get_max_level_realm@plt>
  40d4c0:	cmp	w0, #0x4
  40d4c4:	b.lt	40d4f8 <parse_proc_cmdline_item+0x120>  // b.tstop
  40d4c8:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40d4cc:	adrp	x4, 434000 <__libc_csu_init+0x60>
  40d4d0:	adrp	x5, 434000 <__libc_csu_init+0x60>
  40d4d4:	add	x2, x2, #0x22b
  40d4d8:	add	x4, x4, #0x920
  40d4dc:	add	x5, x5, #0x96f
  40d4e0:	mov	w0, #0x404                 	// #1028
  40d4e4:	mov	w3, #0x5ac                 	// #1452
  40d4e8:	mov	w1, w21
  40d4ec:	mov	x6, x19
  40d4f0:	mov	x7, x20
  40d4f4:	bl	40a2d0 <log_internal_realm@plt>
  40d4f8:	ldp	x20, x19, [sp, #32]
  40d4fc:	ldr	x21, [sp, #16]
  40d500:	mov	w0, wzr
  40d504:	ldp	x29, x30, [sp], #48
  40d508:	ret
  40d50c:	adrp	x1, 434000 <__libc_csu_init+0x60>
  40d510:	add	x1, x1, #0x91a
  40d514:	mov	w2, #0x5                   	// #5
  40d518:	mov	x0, x19
  40d51c:	bl	40a6a0 <strncmp@plt>
  40d520:	cbnz	w0, 40d4f8 <parse_proc_cmdline_item+0x120>
  40d524:	mov	w0, #0x1                   	// #1
  40d528:	bl	40a2c0 <log_get_max_level_realm@plt>
  40d52c:	cmp	w0, #0x4
  40d530:	b.lt	40d4f8 <parse_proc_cmdline_item+0x120>  // b.tstop
  40d534:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40d538:	adrp	x4, 434000 <__libc_csu_init+0x60>
  40d53c:	adrp	x5, 434000 <__libc_csu_init+0x60>
  40d540:	add	x2, x2, #0x22b
  40d544:	add	x4, x4, #0x920
  40d548:	add	x5, x5, #0x938
  40d54c:	mov	w0, #0x404                 	// #1028
  40d550:	mov	w3, #0x5a9                 	// #1449
  40d554:	mov	w1, wzr
  40d558:	mov	x6, x19
  40d55c:	bl	40a2d0 <log_internal_realm@plt>
  40d560:	b	40d4f8 <parse_proc_cmdline_item+0x120>
  40d564:	adrp	x1, 434000 <__libc_csu_init+0x60>
  40d568:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40d56c:	adrp	x4, 434000 <__libc_csu_init+0x60>
  40d570:	add	x1, x1, #0x88f
  40d574:	add	x2, x2, #0x22b
  40d578:	add	x4, x4, #0x893
  40d57c:	mov	w0, #0x1                   	// #1
  40d580:	mov	w3, #0x585                 	// #1413
  40d584:	bl	40a630 <log_assert_failed_realm@plt>

000000000040d588 <manager_clear_for_worker>:
  40d588:	stp	x29, x30, [sp, #-32]!
  40d58c:	stp	x20, x19, [sp, #16]
  40d590:	mov	x29, sp
  40d594:	cbz	x0, 40d634 <manager_clear_for_worker+0xac>
  40d598:	mov	x19, x0
  40d59c:	ldr	x0, [x0, #96]
  40d5a0:	bl	40a6b0 <sd_event_source_unref@plt>
  40d5a4:	ldr	x8, [x19, #104]
  40d5a8:	str	x0, [x19, #96]
  40d5ac:	mov	x0, x8
  40d5b0:	bl	40a6b0 <sd_event_source_unref@plt>
  40d5b4:	ldr	x8, [x19]
  40d5b8:	str	x0, [x19, #104]
  40d5bc:	mov	x0, x8
  40d5c0:	bl	40a6c0 <sd_event_unref@plt>
  40d5c4:	ldr	x8, [x19, #8]
  40d5c8:	str	x0, [x19]
  40d5cc:	mov	x1, xzr
  40d5d0:	mov	x2, xzr
  40d5d4:	mov	x0, x8
  40d5d8:	bl	40a650 <internal_hashmap_free@plt>
  40d5dc:	ldr	x8, [x19, #16]
  40d5e0:	str	x0, [x19, #8]
  40d5e4:	cbz	x8, 40d5fc <manager_clear_for_worker+0x74>
  40d5e8:	ldr	x20, [x8, #72]
  40d5ec:	mov	x0, x8
  40d5f0:	bl	40d658 <event_free>
  40d5f4:	mov	x8, x20
  40d5f8:	cbnz	x20, 40d5e8 <manager_clear_for_worker+0x60>
  40d5fc:	ldr	x0, [x19, #64]
  40d600:	bl	40a6d0 <sd_device_monitor_unref@plt>
  40d604:	ldr	x8, [x19, #72]
  40d608:	str	x0, [x19, #64]
  40d60c:	mov	x0, x8
  40d610:	bl	411174 <udev_ctrl_unref>
  40d614:	ldr	w8, [x19, #84]
  40d618:	str	x0, [x19, #72]
  40d61c:	mov	w0, w8
  40d620:	bl	40a660 <safe_close@plt>
  40d624:	str	w0, [x19, #84]
  40d628:	ldp	x20, x19, [sp, #16]
  40d62c:	ldp	x29, x30, [sp], #32
  40d630:	ret
  40d634:	adrp	x1, 434000 <__libc_csu_init+0x60>
  40d638:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40d63c:	adrp	x4, 434000 <__libc_csu_init+0x60>
  40d640:	add	x1, x1, #0x3fe
  40d644:	add	x2, x2, #0x22b
  40d648:	add	x4, x4, #0x406
  40d64c:	mov	w0, #0x1                   	// #1
  40d650:	mov	w3, #0x114                 	// #276
  40d654:	bl	40a630 <log_assert_failed_realm@plt>

000000000040d658 <event_free>:
  40d658:	stp	x29, x30, [sp, #-32]!
  40d65c:	stp	x20, x19, [sp, #16]
  40d660:	mov	x29, sp
  40d664:	cbz	x0, 40d698 <event_free+0x40>
  40d668:	ldr	x10, [x0]
  40d66c:	mov	x19, x0
  40d670:	cbz	x10, 40d76c <event_free+0x114>
  40d674:	mov	x8, x19
  40d678:	ldr	x9, [x8, #72]!
  40d67c:	cbz	x9, 40d688 <event_free+0x30>
  40d680:	ldr	x11, [x19, #80]
  40d684:	str	x11, [x9, #80]
  40d688:	ldr	x11, [x19, #80]
  40d68c:	cbz	x11, 40d6a4 <event_free+0x4c>
  40d690:	add	x10, x11, #0x48
  40d694:	b	40d6b0 <event_free+0x58>
  40d698:	ldp	x20, x19, [sp, #16]
  40d69c:	ldp	x29, x30, [sp], #32
  40d6a0:	ret
  40d6a4:	ldr	x11, [x10, #16]!
  40d6a8:	cmp	x11, x19
  40d6ac:	b.ne	40d790 <event_free+0x138>  // b.any
  40d6b0:	str	x9, [x10]
  40d6b4:	stp	xzr, xzr, [x8]
  40d6b8:	ldr	x0, [x19, #24]
  40d6bc:	bl	40a6e0 <sd_device_unref@plt>
  40d6c0:	ldr	x0, [x19, #32]
  40d6c4:	bl	40a6e0 <sd_device_unref@plt>
  40d6c8:	ldr	x0, [x19, #56]
  40d6cc:	bl	40a6b0 <sd_event_source_unref@plt>
  40d6d0:	ldr	x0, [x19, #64]
  40d6d4:	bl	40a6b0 <sd_event_source_unref@plt>
  40d6d8:	ldr	x8, [x19, #8]
  40d6dc:	cbz	x8, 40d6e4 <event_free+0x8c>
  40d6e0:	str	xzr, [x8, #32]
  40d6e4:	ldr	x8, [x19]
  40d6e8:	ldr	x9, [x8, #16]
  40d6ec:	cbz	x9, 40d700 <event_free+0xa8>
  40d6f0:	mov	x0, x19
  40d6f4:	ldp	x20, x19, [sp, #16]
  40d6f8:	ldp	x29, x30, [sp], #32
  40d6fc:	b	40a320 <free@plt>
  40d700:	ldr	w20, [x8, #32]
  40d704:	bl	40a510 <getpid_cached@plt>
  40d708:	cmp	w20, w0
  40d70c:	b.ne	40d6f0 <event_free+0x98>  // b.any
  40d710:	adrp	x0, 434000 <__libc_csu_init+0x60>
  40d714:	add	x0, x0, #0x46e
  40d718:	bl	40a6f0 <unlink@plt>
  40d71c:	tbz	w0, #31, 40d6f0 <event_free+0x98>
  40d720:	mov	w0, #0x1                   	// #1
  40d724:	bl	40a2c0 <log_get_max_level_realm@plt>
  40d728:	cmp	w0, #0x4
  40d72c:	b.lt	40d6f0 <event_free+0x98>  // b.tstop
  40d730:	bl	40a3e0 <__errno_location@plt>
  40d734:	ldr	w1, [x0]
  40d738:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40d73c:	adrp	x4, 434000 <__libc_csu_init+0x60>
  40d740:	adrp	x5, 434000 <__libc_csu_init+0x60>
  40d744:	add	x2, x2, #0x22b
  40d748:	add	x4, x4, #0x47e
  40d74c:	add	x5, x5, #0x489
  40d750:	mov	w0, #0x404                 	// #1028
  40d754:	mov	w3, #0xa8                  	// #168
  40d758:	bl	40a2d0 <log_internal_realm@plt>
  40d75c:	mov	x0, x19
  40d760:	ldp	x20, x19, [sp, #16]
  40d764:	ldp	x29, x30, [sp], #32
  40d768:	b	40a320 <free@plt>
  40d76c:	adrp	x1, 434000 <__libc_csu_init+0x60>
  40d770:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40d774:	adrp	x4, 434000 <__libc_csu_init+0x60>
  40d778:	add	x1, x1, #0x42f
  40d77c:	add	x2, x2, #0x22b
  40d780:	add	x4, x4, #0x43e
  40d784:	mov	w0, #0x1                   	// #1
  40d788:	mov	w3, #0x98                  	// #152
  40d78c:	bl	40a630 <log_assert_failed_realm@plt>
  40d790:	adrp	x1, 434000 <__libc_csu_init+0x60>
  40d794:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40d798:	adrp	x4, 434000 <__libc_csu_init+0x60>
  40d79c:	add	x1, x1, #0x45e
  40d7a0:	add	x2, x2, #0x22b
  40d7a4:	add	x4, x4, #0x43e
  40d7a8:	mov	w0, #0x1                   	// #1
  40d7ac:	mov	w3, #0x9a                  	// #154
  40d7b0:	bl	40a630 <log_assert_failed_realm@plt>

000000000040d7b4 <on_sigterm>:
  40d7b4:	stp	x29, x30, [sp, #-16]!
  40d7b8:	mov	x29, sp
  40d7bc:	cbz	x2, 40d7d4 <on_sigterm+0x20>
  40d7c0:	mov	x0, x2
  40d7c4:	bl	40ee70 <manager_exit>
  40d7c8:	mov	w0, #0x1                   	// #1
  40d7cc:	ldp	x29, x30, [sp], #16
  40d7d0:	ret
  40d7d4:	adrp	x1, 434000 <__libc_csu_init+0x60>
  40d7d8:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40d7dc:	adrp	x4, 434000 <__libc_csu_init+0x60>
  40d7e0:	add	x1, x1, #0x3fe
  40d7e4:	add	x2, x2, #0x22b
  40d7e8:	add	x4, x4, #0xe32
  40d7ec:	mov	w0, #0x1                   	// #1
  40d7f0:	mov	w3, #0x4e5                 	// #1253
  40d7f4:	bl	40a630 <log_assert_failed_realm@plt>

000000000040d7f8 <on_sighup>:
  40d7f8:	stp	x29, x30, [sp, #-16]!
  40d7fc:	mov	x29, sp
  40d800:	cbz	x2, 40d818 <on_sighup+0x20>
  40d804:	mov	x0, x2
  40d808:	bl	40efa8 <manager_reload>
  40d80c:	mov	w0, #0x1                   	// #1
  40d810:	ldp	x29, x30, [sp], #16
  40d814:	ret
  40d818:	adrp	x1, 434000 <__libc_csu_init+0x60>
  40d81c:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40d820:	adrp	x4, 434000 <__libc_csu_init+0x60>
  40d824:	add	x1, x1, #0x3fe
  40d828:	add	x2, x2, #0x22b
  40d82c:	add	x4, x4, #0xec1
  40d830:	mov	w0, #0x1                   	// #1
  40d834:	mov	w3, #0x4ef                 	// #1263
  40d838:	bl	40a630 <log_assert_failed_realm@plt>

000000000040d83c <on_sigchld>:
  40d83c:	sub	sp, sp, #0x90
  40d840:	stp	x29, x30, [sp, #48]
  40d844:	stp	x28, x27, [sp, #64]
  40d848:	stp	x26, x25, [sp, #80]
  40d84c:	stp	x24, x23, [sp, #96]
  40d850:	stp	x22, x21, [sp, #112]
  40d854:	stp	x20, x19, [sp, #128]
  40d858:	add	x29, sp, #0x30
  40d85c:	cbz	x2, 40dc70 <on_sigchld+0x434>
  40d860:	mov	x19, x2
  40d864:	sub	x1, x29, #0x4
  40d868:	mov	w0, #0xffffffff            	// #-1
  40d86c:	mov	w2, #0x1                   	// #1
  40d870:	bl	40a700 <waitpid@plt>
  40d874:	cmp	w0, #0x1
  40d878:	b.lt	40dbcc <on_sigchld+0x390>  // b.tstop
  40d87c:	adrp	x20, 434000 <__libc_csu_init+0x60>
  40d880:	adrp	x21, 434000 <__libc_csu_init+0x60>
  40d884:	adrp	x24, 435000 <worker_hash_op+0xdf8>
  40d888:	mov	w28, w0
  40d88c:	add	x20, x20, #0x22b
  40d890:	add	x21, x21, #0xfa2
  40d894:	add	x24, x24, #0x7f
  40d898:	mov	w22, #0x1000000             	// #16777216
  40d89c:	mov	w25, #0x2000000             	// #33554432
  40d8a0:	b	40d8c8 <on_sigchld+0x8c>
  40d8a4:	mov	w6, w28
  40d8a8:	bl	40a2d0 <log_internal_realm@plt>
  40d8ac:	sub	x1, x29, #0x4
  40d8b0:	mov	w0, #0xffffffff            	// #-1
  40d8b4:	mov	w2, #0x1                   	// #1
  40d8b8:	bl	40a700 <waitpid@plt>
  40d8bc:	mov	w28, w0
  40d8c0:	cmp	w0, #0x1
  40d8c4:	b.lt	40dbcc <on_sigchld+0x390>  // b.tstop
  40d8c8:	ldr	x0, [x19, #8]
  40d8cc:	mov	w1, w28
  40d8d0:	bl	40a710 <internal_hashmap_get@plt>
  40d8d4:	cbz	x0, 40d93c <on_sigchld+0x100>
  40d8d8:	ldur	w23, [x29, #-4]
  40d8dc:	mov	x27, x0
  40d8e0:	ands	w26, w23, #0x7f
  40d8e4:	b.eq	40d96c <on_sigchld+0x130>  // b.none
  40d8e8:	add	w8, w22, w26, lsl #24
  40d8ec:	cmp	w8, w25
  40d8f0:	b.lt	40d9a4 <on_sigchld+0x168>  // b.tstop
  40d8f4:	mov	w0, #0x1                   	// #1
  40d8f8:	bl	40a2c0 <log_get_max_level_realm@plt>
  40d8fc:	cmp	w0, #0x4
  40d900:	b.lt	40da78 <on_sigchld+0x23c>  // b.tstop
  40d904:	mov	w0, w26
  40d908:	bl	40a720 <signal_to_string@plt>
  40d90c:	mov	x8, x0
  40d910:	adrp	x5, 435000 <worker_hash_op+0xdf8>
  40d914:	mov	w0, #0x404                 	// #1028
  40d918:	mov	w3, #0x511                 	// #1297
  40d91c:	str	x8, [sp]
  40d920:	mov	w1, wzr
  40d924:	mov	x2, x20
  40d928:	mov	x4, x21
  40d92c:	add	x5, x5, #0x8
  40d930:	mov	w6, w28
  40d934:	mov	w7, w26
  40d938:	b	40da74 <on_sigchld+0x238>
  40d93c:	mov	w0, #0x1                   	// #1
  40d940:	bl	40a2c0 <log_get_max_level_realm@plt>
  40d944:	cmp	w0, #0x4
  40d948:	b.lt	40d8ac <on_sigchld+0x70>  // b.tstop
  40d94c:	adrp	x5, 434000 <__libc_csu_init+0x60>
  40d950:	mov	w0, #0x404                 	// #1028
  40d954:	mov	w3, #0x507                 	// #1287
  40d958:	mov	w1, wzr
  40d95c:	mov	x2, x20
  40d960:	mov	x4, x21
  40d964:	add	x5, x5, #0xfad
  40d968:	b	40d8a4 <on_sigchld+0x68>
  40d96c:	mov	w0, #0x1                   	// #1
  40d970:	ubfx	w23, w23, #8, #8
  40d974:	bl	40a2c0 <log_get_max_level_realm@plt>
  40d978:	cbz	w23, 40da18 <on_sigchld+0x1dc>
  40d97c:	cmp	w0, #0x4
  40d980:	b.lt	40da78 <on_sigchld+0x23c>  // b.tstop
  40d984:	adrp	x5, 434000 <__libc_csu_init+0x60>
  40d988:	mov	w0, #0x404                 	// #1028
  40d98c:	mov	w3, #0x50f                 	// #1295
  40d990:	mov	w1, wzr
  40d994:	mov	x2, x20
  40d998:	mov	x4, x21
  40d99c:	add	x5, x5, #0xfe1
  40d9a0:	b	40da6c <on_sigchld+0x230>
  40d9a4:	and	w8, w23, #0xff
  40d9a8:	mov	w0, #0x1                   	// #1
  40d9ac:	cmp	w8, #0x7f
  40d9b0:	b.ne	40d9e0 <on_sigchld+0x1a4>  // b.any
  40d9b4:	bl	40a2c0 <log_get_max_level_realm@plt>
  40d9b8:	cmp	w0, #0x6
  40d9bc:	b.lt	40d8ac <on_sigchld+0x70>  // b.tstop
  40d9c0:	adrp	x5, 435000 <worker_hash_op+0xdf8>
  40d9c4:	mov	w0, #0x406                 	// #1030
  40d9c8:	mov	w3, #0x513                 	// #1299
  40d9cc:	mov	w1, wzr
  40d9d0:	mov	x2, x20
  40d9d4:	mov	x4, x21
  40d9d8:	add	x5, x5, #0x31
  40d9dc:	b	40d8a4 <on_sigchld+0x68>
  40d9e0:	bl	40a2c0 <log_get_max_level_realm@plt>
  40d9e4:	mov	w8, #0xffff                	// #65535
  40d9e8:	cmp	w23, w8
  40d9ec:	b.ne	40da48 <on_sigchld+0x20c>  // b.any
  40d9f0:	cmp	w0, #0x6
  40d9f4:	b.lt	40d8ac <on_sigchld+0x70>  // b.tstop
  40d9f8:	adrp	x5, 435000 <worker_hash_op+0xdf8>
  40d9fc:	mov	w0, #0x406                 	// #1030
  40da00:	mov	w3, #0x516                 	// #1302
  40da04:	mov	w1, wzr
  40da08:	mov	x2, x20
  40da0c:	mov	x4, x21
  40da10:	add	x5, x5, #0x45
  40da14:	b	40d8a4 <on_sigchld+0x68>
  40da18:	cmp	w0, #0x7
  40da1c:	b.lt	40da78 <on_sigchld+0x23c>  // b.tstop
  40da20:	adrp	x5, 434000 <__libc_csu_init+0x60>
  40da24:	mov	w0, #0x407                 	// #1031
  40da28:	mov	w3, #0x50d                 	// #1293
  40da2c:	mov	w1, wzr
  40da30:	mov	x2, x20
  40da34:	mov	x4, x21
  40da38:	add	x5, x5, #0xfce
  40da3c:	mov	w6, w28
  40da40:	bl	40a2d0 <log_internal_realm@plt>
  40da44:	b	40da78 <on_sigchld+0x23c>
  40da48:	cmp	w0, #0x4
  40da4c:	b.lt	40da78 <on_sigchld+0x23c>  // b.tstop
  40da50:	adrp	x5, 435000 <worker_hash_op+0xdf8>
  40da54:	mov	w0, #0x404                 	// #1028
  40da58:	mov	w3, #0x519                 	// #1305
  40da5c:	mov	w1, wzr
  40da60:	mov	x2, x20
  40da64:	mov	x4, x21
  40da68:	add	x5, x5, #0x5b
  40da6c:	mov	w6, w28
  40da70:	mov	w7, w23
  40da74:	bl	40a2d0 <log_internal_realm@plt>
  40da78:	ldurh	w8, [x29, #-4]
  40da7c:	tst	w8, #0xffffff7f
  40da80:	b.eq	40db74 <on_sigchld+0x338>  // b.none
  40da84:	ldr	x8, [x27, #32]
  40da88:	cbz	x8, 40db74 <on_sigchld+0x338>
  40da8c:	stur	xzr, [x29, #-16]
  40da90:	ldr	x23, [x8, #24]
  40da94:	cbz	x23, 40daa8 <on_sigchld+0x26c>
  40da98:	mov	w0, #0x1                   	// #1
  40da9c:	bl	40a2c0 <log_get_max_level_realm@plt>
  40daa0:	cmp	w0, #0x3
  40daa4:	b.ge	40dba4 <on_sigchld+0x368>  // b.tcont
  40daa8:	mov	x6, xzr
  40daac:	cmp	x6, #0x0
  40dab0:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  40dab4:	csel	x5, xzr, x24, eq  // eq = none
  40dab8:	add	x8, x8, #0x87
  40dabc:	mov	w0, #0x3                   	// #3
  40dac0:	mov	w3, #0x51c                 	// #1308
  40dac4:	mov	w1, wzr
  40dac8:	mov	x2, x20
  40dacc:	mov	x4, x21
  40dad0:	mov	x7, xzr
  40dad4:	str	w28, [sp, #16]
  40dad8:	stp	xzr, x8, [sp]
  40dadc:	bl	40a730 <log_object_internal@plt>
  40dae0:	ldr	x8, [x27, #32]
  40dae4:	ldr	x0, [x8, #24]
  40dae8:	bl	40a740 <device_delete_db@plt>
  40daec:	ldr	x8, [x27, #32]
  40daf0:	mov	x1, xzr
  40daf4:	mov	w2, wzr
  40daf8:	ldr	x0, [x8, #24]
  40dafc:	bl	40a750 <device_tag_index@plt>
  40db00:	ldr	x0, [x19, #64]
  40db04:	cbz	x0, 40db74 <on_sigchld+0x338>
  40db08:	ldr	x8, [x27, #32]
  40db0c:	mov	x1, xzr
  40db10:	ldr	x2, [x8, #32]
  40db14:	bl	40a760 <device_monitor_send_device@plt>
  40db18:	tbz	w0, #31, 40db74 <on_sigchld+0x338>
  40db1c:	stur	xzr, [x29, #-16]
  40db20:	ldr	x8, [x27, #32]
  40db24:	mov	w28, w0
  40db28:	ldr	x23, [x8, #32]
  40db2c:	cbz	x23, 40db40 <on_sigchld+0x304>
  40db30:	mov	w0, #0x1                   	// #1
  40db34:	bl	40a2c0 <log_get_max_level_realm@plt>
  40db38:	cmp	w0, #0x3
  40db3c:	b.ge	40dbb8 <on_sigchld+0x37c>  // b.tcont
  40db40:	mov	x6, xzr
  40db44:	cmp	x6, #0x0
  40db48:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  40db4c:	csel	x5, xzr, x24, eq  // eq = none
  40db50:	add	x8, x8, #0x9a
  40db54:	mov	w0, #0x3                   	// #3
  40db58:	mov	w3, #0x526                 	// #1318
  40db5c:	mov	w1, w28
  40db60:	mov	x2, x20
  40db64:	mov	x4, x21
  40db68:	mov	x7, xzr
  40db6c:	stp	xzr, x8, [sp]
  40db70:	bl	40a730 <log_object_internal@plt>
  40db74:	ldr	x8, [x27]
  40db78:	cbz	x8, 40dc4c <on_sigchld+0x410>
  40db7c:	ldr	x0, [x8, #8]
  40db80:	ldrsw	x1, [x27, #8]
  40db84:	bl	40a770 <internal_hashmap_remove@plt>
  40db88:	ldr	x0, [x27, #16]
  40db8c:	bl	40a6d0 <sd_device_monitor_unref@plt>
  40db90:	ldr	x0, [x27, #32]
  40db94:	bl	40d658 <event_free>
  40db98:	mov	x0, x27
  40db9c:	bl	40a320 <free@plt>
  40dba0:	b	40d8ac <on_sigchld+0x70>
  40dba4:	sub	x1, x29, #0x10
  40dba8:	mov	x0, x23
  40dbac:	bl	40a780 <sd_device_get_sysname@plt>
  40dbb0:	ldur	x6, [x29, #-16]
  40dbb4:	b	40daac <on_sigchld+0x270>
  40dbb8:	sub	x1, x29, #0x10
  40dbbc:	mov	x0, x23
  40dbc0:	bl	40a780 <sd_device_get_sysname@plt>
  40dbc4:	ldur	x6, [x29, #-16]
  40dbc8:	b	40db44 <on_sigchld+0x308>
  40dbcc:	mov	x0, x19
  40dbd0:	bl	40f094 <event_queue_start>
  40dbd4:	ldr	x0, [x19, #8]
  40dbd8:	bl	40a790 <internal_hashmap_size@plt>
  40dbdc:	cbnz	w0, 40dc28 <on_sigchld+0x3ec>
  40dbe0:	ldr	x0, [x19, #104]
  40dbe4:	bl	40a7a0 <event_source_disable@plt>
  40dbe8:	tbz	w0, #31, 40dc28 <on_sigchld+0x3ec>
  40dbec:	mov	w19, w0
  40dbf0:	mov	w0, #0x1                   	// #1
  40dbf4:	bl	40a2c0 <log_get_max_level_realm@plt>
  40dbf8:	cmp	w0, #0x4
  40dbfc:	b.lt	40dc28 <on_sigchld+0x3ec>  // b.tstop
  40dc00:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40dc04:	adrp	x4, 434000 <__libc_csu_init+0x60>
  40dc08:	adrp	x5, 435000 <worker_hash_op+0xdf8>
  40dc0c:	add	x2, x2, #0x22b
  40dc10:	add	x4, x4, #0xfa2
  40dc14:	add	x5, x5, #0xc3
  40dc18:	mov	w0, #0x404                 	// #1028
  40dc1c:	mov	w3, #0x534                 	// #1332
  40dc20:	mov	w1, w19
  40dc24:	bl	40a2d0 <log_internal_realm@plt>
  40dc28:	ldp	x20, x19, [sp, #128]
  40dc2c:	ldp	x22, x21, [sp, #112]
  40dc30:	ldp	x24, x23, [sp, #96]
  40dc34:	ldp	x26, x25, [sp, #80]
  40dc38:	ldp	x28, x27, [sp, #64]
  40dc3c:	ldp	x29, x30, [sp, #48]
  40dc40:	mov	w0, #0x1                   	// #1
  40dc44:	add	sp, sp, #0x90
  40dc48:	ret
  40dc4c:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  40dc50:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40dc54:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  40dc58:	add	x1, x1, #0x10d
  40dc5c:	add	x2, x2, #0x22b
  40dc60:	add	x4, x4, #0x11d
  40dc64:	mov	w0, #0x1                   	// #1
  40dc68:	mov	w3, #0xb1                  	// #177
  40dc6c:	bl	40a630 <log_assert_failed_realm@plt>
  40dc70:	adrp	x1, 434000 <__libc_csu_init+0x60>
  40dc74:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40dc78:	adrp	x4, 434000 <__libc_csu_init+0x60>
  40dc7c:	add	x1, x1, #0x3fe
  40dc80:	add	x2, x2, #0x22b
  40dc84:	add	x4, x4, #0xf57
  40dc88:	mov	w0, #0x1                   	// #1
  40dc8c:	mov	w3, #0x4fa                 	// #1274
  40dc90:	bl	40a630 <log_assert_failed_realm@plt>

000000000040dc94 <on_ctrl_msg>:
  40dc94:	sub	sp, sp, #0x60
  40dc98:	stp	x29, x30, [sp, #32]
  40dc9c:	str	x23, [sp, #48]
  40dca0:	stp	x22, x21, [sp, #64]
  40dca4:	stp	x20, x19, [sp, #80]
  40dca8:	add	x29, sp, #0x20
  40dcac:	cbz	x2, 40e2ac <on_ctrl_msg+0x618>
  40dcb0:	mov	x19, x3
  40dcb4:	cbz	x3, 40e2d0 <on_ctrl_msg+0x63c>
  40dcb8:	sub	w8, w1, #0x1
  40dcbc:	cmp	w8, #0x7
  40dcc0:	b.hi	40e040 <on_ctrl_msg+0x3ac>  // b.pmore
  40dcc4:	adrp	x9, 434000 <__libc_csu_init+0x60>
  40dcc8:	add	x9, x9, #0xbc
  40dccc:	adr	x10, 40dce0 <on_ctrl_msg+0x4c>
  40dcd0:	ldrb	w11, [x9, x8]
  40dcd4:	add	x10, x10, x11, lsl #2
  40dcd8:	mov	x20, x2
  40dcdc:	br	x10
  40dce0:	mov	w0, #0x1                   	// #1
  40dce4:	bl	40a2c0 <log_get_max_level_realm@plt>
  40dce8:	cmp	w0, #0x7
  40dcec:	b.lt	40dd1c <on_ctrl_msg+0x88>  // b.tstop
  40dcf0:	ldr	w6, [x20]
  40dcf4:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40dcf8:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  40dcfc:	adrp	x5, 435000 <worker_hash_op+0xdf8>
  40dd00:	add	x2, x2, #0x22b
  40dd04:	add	x4, x4, #0x949
  40dd08:	add	x5, x5, #0x955
  40dd0c:	mov	w0, #0x407                 	// #1031
  40dd10:	mov	w3, #0x3dc                 	// #988
  40dd14:	mov	w1, wzr
  40dd18:	bl	40a2d0 <log_internal_realm@plt>
  40dd1c:	ldr	w1, [x20]
  40dd20:	mov	w0, #0x1                   	// #1
  40dd24:	bl	40a350 <log_set_max_level_realm@plt>
  40dd28:	ldr	w1, [x20]
  40dd2c:	mov	w0, wzr
  40dd30:	bl	40a350 <log_set_max_level_realm@plt>
  40dd34:	mov	w8, #0xfffffffe            	// #-2
  40dd38:	str	w8, [sp, #16]
  40dd3c:	str	xzr, [sp, #24]
  40dd40:	ldr	x0, [x19, #8]
  40dd44:	add	x1, sp, #0x10
  40dd48:	add	x2, x29, #0x18
  40dd4c:	mov	x3, xzr
  40dd50:	bl	40a7b0 <internal_hashmap_iterate@plt>
  40dd54:	tbz	w0, #0, 40e144 <on_ctrl_msg+0x4b0>
  40dd58:	mov	w20, #0x3                   	// #3
  40dd5c:	b	40dd78 <on_ctrl_msg+0xe4>
  40dd60:	ldr	x0, [x19, #8]
  40dd64:	add	x1, sp, #0x10
  40dd68:	add	x2, x29, #0x18
  40dd6c:	mov	x3, xzr
  40dd70:	bl	40a7b0 <internal_hashmap_iterate@plt>
  40dd74:	tbz	w0, #0, 40e144 <on_ctrl_msg+0x4b0>
  40dd78:	ldr	x8, [x29, #24]
  40dd7c:	ldr	w9, [x8, #24]
  40dd80:	cmp	w9, #0x3
  40dd84:	b.eq	40dd60 <on_ctrl_msg+0xcc>  // b.none
  40dd88:	ldr	w0, [x8, #8]
  40dd8c:	mov	w1, #0xf                   	// #15
  40dd90:	str	w20, [x8, #24]
  40dd94:	bl	40a7c0 <kill@plt>
  40dd98:	b	40dd60 <on_ctrl_msg+0xcc>
  40dd9c:	mov	w1, #0x3d                  	// #61
  40dda0:	mov	x0, x20
  40dda4:	str	xzr, [sp, #8]
  40dda8:	bl	40a7d0 <strchr@plt>
  40ddac:	cbz	x0, 40e080 <on_ctrl_msg+0x3ec>
  40ddb0:	mov	x23, x0
  40ddb4:	sub	x1, x0, x20
  40ddb8:	mov	x0, x20
  40ddbc:	bl	40a7e0 <strndup@plt>
  40ddc0:	mov	x21, x0
  40ddc4:	cbz	x0, 40e100 <on_ctrl_msg+0x46c>
  40ddc8:	mov	x22, x19
  40ddcc:	ldr	x0, [x22, #48]!
  40ddd0:	add	x2, sp, #0x8
  40ddd4:	mov	x1, x21
  40ddd8:	bl	40a7f0 <hashmap_remove2@plt>
  40dddc:	adrp	x1, 46e000 <keyboard_lookup_key.wordlist+0x16bd8>
  40dde0:	mov	x20, x0
  40dde4:	add	x1, x1, #0xdd8
  40dde8:	mov	x0, x22
  40ddec:	bl	40a800 <internal_hashmap_ensure_allocated@plt>
  40ddf0:	tbnz	w0, #31, 40e16c <on_ctrl_msg+0x4d8>
  40ddf4:	ldrb	w8, [x23, #1]!
  40ddf8:	cbz	w8, 40e1a8 <on_ctrl_msg+0x514>
  40ddfc:	mov	x0, x23
  40de00:	bl	40a810 <strdup@plt>
  40de04:	mov	x23, x0
  40de08:	cbz	x0, 40e270 <on_ctrl_msg+0x5dc>
  40de0c:	mov	w0, #0x1                   	// #1
  40de10:	bl	40a2c0 <log_get_max_level_realm@plt>
  40de14:	cmp	w0, #0x7
  40de18:	b.lt	40de4c <on_ctrl_msg+0x1b8>  // b.tstop
  40de1c:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40de20:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  40de24:	adrp	x5, 435000 <worker_hash_op+0xdf8>
  40de28:	add	x2, x2, #0x22b
  40de2c:	add	x4, x4, #0x949
  40de30:	add	x5, x5, #0xa70
  40de34:	mov	w0, #0x407                 	// #1031
  40de38:	mov	w3, #0x416                 	// #1046
  40de3c:	mov	w1, wzr
  40de40:	mov	x6, x21
  40de44:	mov	x7, x23
  40de48:	bl	40a2d0 <log_internal_realm@plt>
  40de4c:	ldr	x0, [x22]
  40de50:	mov	x1, x21
  40de54:	mov	x2, x23
  40de58:	bl	40a820 <hashmap_put@plt>
  40de5c:	tbz	w0, #31, 40e1f8 <on_ctrl_msg+0x564>
  40de60:	adrp	x1, 434000 <__libc_csu_init+0x60>
  40de64:	adrp	x3, 435000 <worker_hash_op+0xdf8>
  40de68:	add	x1, x1, #0x22b
  40de6c:	add	x3, x3, #0x949
  40de70:	mov	w0, #0x1                   	// #1
  40de74:	mov	w2, #0x41a                 	// #1050
  40de78:	b	40e288 <on_ctrl_msg+0x5f4>
  40de7c:	mov	w0, #0x1                   	// #1
  40de80:	bl	40a2c0 <log_get_max_level_realm@plt>
  40de84:	cmp	w0, #0x7
  40de88:	b.lt	40deb4 <on_ctrl_msg+0x220>  // b.tstop
  40de8c:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40de90:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  40de94:	adrp	x5, 435000 <worker_hash_op+0xdf8>
  40de98:	add	x2, x2, #0x22b
  40de9c:	add	x4, x4, #0x949
  40dea0:	add	x5, x5, #0x9cc
  40dea4:	mov	w0, #0x407                 	// #1031
  40dea8:	mov	w3, #0x3e6                 	// #998
  40deac:	mov	w1, wzr
  40deb0:	bl	40a2d0 <log_internal_realm@plt>
  40deb4:	ldrb	w8, [x19, #120]
  40deb8:	mov	x0, x19
  40debc:	and	w8, w8, #0xfe
  40dec0:	strb	w8, [x19, #120]
  40dec4:	bl	40f094 <event_queue_start>
  40dec8:	b	40e144 <on_ctrl_msg+0x4b0>
  40decc:	mov	w0, #0x1                   	// #1
  40ded0:	bl	40a2c0 <log_get_max_level_realm@plt>
  40ded4:	cmp	w0, #0x7
  40ded8:	b.lt	40df04 <on_ctrl_msg+0x270>  // b.tstop
  40dedc:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40dee0:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  40dee4:	adrp	x5, 435000 <worker_hash_op+0xdf8>
  40dee8:	add	x2, x2, #0x22b
  40deec:	add	x4, x4, #0x949
  40def0:	add	x5, x5, #0x9fd
  40def4:	mov	w0, #0x407                 	// #1031
  40def8:	mov	w3, #0x3eb                 	// #1003
  40defc:	mov	w1, wzr
  40df00:	bl	40a2d0 <log_internal_realm@plt>
  40df04:	mov	x0, x19
  40df08:	bl	40efa8 <manager_reload>
  40df0c:	b	40e144 <on_ctrl_msg+0x4b0>
  40df10:	mov	w0, #0x1                   	// #1
  40df14:	bl	40a2c0 <log_get_max_level_realm@plt>
  40df18:	cmp	w0, #0x7
  40df1c:	b.lt	40df48 <on_ctrl_msg+0x2b4>  // b.tstop
  40df20:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40df24:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  40df28:	adrp	x5, 435000 <worker_hash_op+0xdf8>
  40df2c:	add	x2, x2, #0x22b
  40df30:	add	x4, x4, #0x949
  40df34:	add	x5, x5, #0x99c
  40df38:	mov	w0, #0x407                 	// #1031
  40df3c:	mov	w3, #0x3e2                 	// #994
  40df40:	mov	w1, wzr
  40df44:	bl	40a2d0 <log_internal_realm@plt>
  40df48:	ldrb	w8, [x19, #120]
  40df4c:	orr	w8, w8, #0x1
  40df50:	strb	w8, [x19, #120]
  40df54:	b	40e144 <on_ctrl_msg+0x4b0>
  40df58:	mov	w0, #0x1                   	// #1
  40df5c:	bl	40a2c0 <log_get_max_level_realm@plt>
  40df60:	cmp	w0, #0x7
  40df64:	b.lt	40df90 <on_ctrl_msg+0x2fc>  // b.tstop
  40df68:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40df6c:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  40df70:	adrp	x5, 435000 <worker_hash_op+0xdf8>
  40df74:	add	x2, x2, #0x22b
  40df78:	add	x4, x4, #0x949
  40df7c:	add	x5, x5, #0xb5c
  40df80:	mov	w0, #0x407                 	// #1031
  40df84:	mov	w3, #0x434                 	// #1076
  40df88:	mov	w1, wzr
  40df8c:	bl	40a2d0 <log_internal_realm@plt>
  40df90:	mov	x0, x19
  40df94:	bl	40ee70 <manager_exit>
  40df98:	b	40e144 <on_ctrl_msg+0x4b0>
  40df9c:	ldr	w19, [x20]
  40dfa0:	mov	w0, #0x1                   	// #1
  40dfa4:	bl	40a2c0 <log_get_max_level_realm@plt>
  40dfa8:	cmp	w19, #0x0
  40dfac:	b.le	40e0c4 <on_ctrl_msg+0x430>
  40dfb0:	cmp	w0, #0x7
  40dfb4:	b.lt	40dfe8 <on_ctrl_msg+0x354>  // b.tstop
  40dfb8:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40dfbc:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  40dfc0:	adrp	x5, 435000 <worker_hash_op+0xdf8>
  40dfc4:	add	x2, x2, #0x22b
  40dfc8:	add	x4, x4, #0x949
  40dfcc:	add	x5, x5, #0xaed
  40dfd0:	mov	w0, #0x407                 	// #1031
  40dfd4:	mov	w3, #0x429                 	// #1065
  40dfd8:	mov	w1, wzr
  40dfdc:	mov	w6, w19
  40dfe0:	bl	40a2d0 <log_internal_realm@plt>
  40dfe4:	ldr	w19, [x20]
  40dfe8:	adrp	x1, 434000 <__libc_csu_init+0x60>
  40dfec:	adrp	x8, 470000 <arg_resolve_name_timing>
  40dff0:	add	x1, x1, #0xdc7
  40dff4:	mov	w0, wzr
  40dff8:	mov	w2, w19
  40dffc:	str	w19, [x8, #40]
  40e000:	bl	40a5f0 <sd_notifyf@plt>
  40e004:	b	40e144 <on_ctrl_msg+0x4b0>
  40e008:	mov	w0, #0x1                   	// #1
  40e00c:	mov	w19, #0x1                   	// #1
  40e010:	bl	40a2c0 <log_get_max_level_realm@plt>
  40e014:	cmp	w0, #0x7
  40e018:	b.lt	40e148 <on_ctrl_msg+0x4b4>  // b.tstop
  40e01c:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40e020:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  40e024:	adrp	x5, 435000 <worker_hash_op+0xdf8>
  40e028:	add	x2, x2, #0x22b
  40e02c:	add	x4, x4, #0x949
  40e030:	add	x5, x5, #0xb37
  40e034:	mov	w0, #0x407                 	// #1031
  40e038:	mov	w3, #0x431                 	// #1073
  40e03c:	b	40e074 <on_ctrl_msg+0x3e0>
  40e040:	mov	w0, #0x1                   	// #1
  40e044:	mov	w19, #0x1                   	// #1
  40e048:	bl	40a2c0 <log_get_max_level_realm@plt>
  40e04c:	cmp	w0, #0x7
  40e050:	b.lt	40e148 <on_ctrl_msg+0x4b4>  // b.tstop
  40e054:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40e058:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  40e05c:	adrp	x5, 435000 <worker_hash_op+0xdf8>
  40e060:	add	x2, x2, #0x22b
  40e064:	add	x4, x4, #0x949
  40e068:	add	x5, x5, #0xb81
  40e06c:	mov	w0, #0x407                 	// #1031
  40e070:	mov	w3, #0x438                 	// #1080
  40e074:	mov	w1, wzr
  40e078:	bl	40a2d0 <log_internal_realm@plt>
  40e07c:	b	40e144 <on_ctrl_msg+0x4b0>
  40e080:	mov	w0, #0x1                   	// #1
  40e084:	bl	40a2c0 <log_get_max_level_realm@plt>
  40e088:	cmp	w0, #0x3
  40e08c:	b.lt	40e0bc <on_ctrl_msg+0x428>  // b.tstop
  40e090:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40e094:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  40e098:	adrp	x5, 435000 <worker_hash_op+0xdf8>
  40e09c:	add	x2, x2, #0x22b
  40e0a0:	add	x4, x4, #0x949
  40e0a4:	add	x5, x5, #0xa24
  40e0a8:	mov	w0, #0x403                 	// #1027
  40e0ac:	mov	w3, #0x3f4                 	// #1012
  40e0b0:	mov	w1, wzr
  40e0b4:	mov	x6, x20
  40e0b8:	bl	40a2d0 <log_internal_realm@plt>
  40e0bc:	mov	x21, xzr
  40e0c0:	b	40e11c <on_ctrl_msg+0x488>
  40e0c4:	cmp	w0, #0x7
  40e0c8:	b.lt	40e164 <on_ctrl_msg+0x4d0>  // b.tstop
  40e0cc:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40e0d0:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  40e0d4:	adrp	x5, 435000 <worker_hash_op+0xdf8>
  40e0d8:	add	x2, x2, #0x22b
  40e0dc:	add	x4, x4, #0x949
  40e0e0:	add	x5, x5, #0xaa5
  40e0e4:	mov	w0, #0x407                 	// #1031
  40e0e8:	mov	w3, #0x425                 	// #1061
  40e0ec:	mov	w1, wzr
  40e0f0:	mov	w6, w19
  40e0f4:	bl	40a2d0 <log_internal_realm@plt>
  40e0f8:	mov	w19, wzr
  40e0fc:	b	40e148 <on_ctrl_msg+0x4b4>
  40e100:	adrp	x1, 434000 <__libc_csu_init+0x60>
  40e104:	adrp	x3, 435000 <worker_hash_op+0xdf8>
  40e108:	add	x1, x1, #0x22b
  40e10c:	add	x3, x3, #0x949
  40e110:	mov	w0, #0x1                   	// #1
  40e114:	mov	w2, #0x3fa                 	// #1018
  40e118:	bl	40a330 <log_oom_internal@plt>
  40e11c:	mov	x23, xzr
  40e120:	mov	x20, xzr
  40e124:	mov	x0, x20
  40e128:	bl	40a320 <free@plt>
  40e12c:	ldr	x0, [sp, #8]
  40e130:	bl	40a320 <free@plt>
  40e134:	mov	x0, x23
  40e138:	bl	40a320 <free@plt>
  40e13c:	mov	x0, x21
  40e140:	bl	40a320 <free@plt>
  40e144:	mov	w19, #0x1                   	// #1
  40e148:	mov	w0, w19
  40e14c:	ldp	x20, x19, [sp, #80]
  40e150:	ldp	x22, x21, [sp, #64]
  40e154:	ldr	x23, [sp, #48]
  40e158:	ldp	x29, x30, [sp, #32]
  40e15c:	add	sp, sp, #0x60
  40e160:	ret
  40e164:	mov	w19, wzr
  40e168:	b	40e148 <on_ctrl_msg+0x4b4>
  40e16c:	adrp	x1, 434000 <__libc_csu_init+0x60>
  40e170:	adrp	x3, 435000 <worker_hash_op+0xdf8>
  40e174:	add	x1, x1, #0x22b
  40e178:	add	x3, x3, #0x949
  40e17c:	mov	w0, #0x1                   	// #1
  40e180:	mov	w2, #0x402                 	// #1026
  40e184:	mov	w19, #0x1                   	// #1
  40e188:	bl	40a330 <log_oom_internal@plt>
  40e18c:	mov	x0, x20
  40e190:	bl	40a320 <free@plt>
  40e194:	ldr	x0, [sp, #8]
  40e198:	bl	40a320 <free@plt>
  40e19c:	mov	x0, x21
  40e1a0:	bl	40a320 <free@plt>
  40e1a4:	b	40e148 <on_ctrl_msg+0x4b4>
  40e1a8:	mov	w0, #0x1                   	// #1
  40e1ac:	bl	40a2c0 <log_get_max_level_realm@plt>
  40e1b0:	cmp	w0, #0x7
  40e1b4:	b.lt	40e1e4 <on_ctrl_msg+0x550>  // b.tstop
  40e1b8:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40e1bc:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  40e1c0:	adrp	x5, 435000 <worker_hash_op+0xdf8>
  40e1c4:	add	x2, x2, #0x22b
  40e1c8:	add	x4, x4, #0x949
  40e1cc:	add	x5, x5, #0xa3c
  40e1d0:	mov	w0, #0x407                 	// #1031
  40e1d4:	mov	w3, #0x408                 	// #1032
  40e1d8:	mov	w1, wzr
  40e1dc:	mov	x6, x21
  40e1e0:	bl	40a2d0 <log_internal_realm@plt>
  40e1e4:	ldr	x0, [x22]
  40e1e8:	mov	x1, x21
  40e1ec:	mov	x2, xzr
  40e1f0:	bl	40a820 <hashmap_put@plt>
  40e1f4:	tbnz	w0, #31, 40e290 <on_ctrl_msg+0x5fc>
  40e1f8:	mov	w8, #0xfffffffe            	// #-2
  40e1fc:	str	w8, [sp, #16]
  40e200:	str	xzr, [sp, #24]
  40e204:	ldr	x0, [x19, #8]
  40e208:	add	x1, sp, #0x10
  40e20c:	add	x2, x29, #0x18
  40e210:	mov	x3, xzr
  40e214:	bl	40a7b0 <internal_hashmap_iterate@plt>
  40e218:	tbz	w0, #0, 40e260 <on_ctrl_msg+0x5cc>
  40e21c:	mov	w21, #0x3                   	// #3
  40e220:	b	40e23c <on_ctrl_msg+0x5a8>
  40e224:	ldr	x0, [x19, #8]
  40e228:	add	x1, sp, #0x10
  40e22c:	add	x2, x29, #0x18
  40e230:	mov	x3, xzr
  40e234:	bl	40a7b0 <internal_hashmap_iterate@plt>
  40e238:	tbz	w0, #0, 40e260 <on_ctrl_msg+0x5cc>
  40e23c:	ldr	x8, [x29, #24]
  40e240:	ldr	w9, [x8, #24]
  40e244:	cmp	w9, #0x3
  40e248:	b.eq	40e224 <on_ctrl_msg+0x590>  // b.none
  40e24c:	ldr	w0, [x8, #8]
  40e250:	mov	w1, #0xf                   	// #15
  40e254:	str	w21, [x8, #24]
  40e258:	bl	40a7c0 <kill@plt>
  40e25c:	b	40e224 <on_ctrl_msg+0x590>
  40e260:	mov	x0, x20
  40e264:	bl	40a320 <free@plt>
  40e268:	ldr	x0, [sp, #8]
  40e26c:	b	40e140 <on_ctrl_msg+0x4ac>
  40e270:	adrp	x1, 434000 <__libc_csu_init+0x60>
  40e274:	adrp	x3, 435000 <worker_hash_op+0xdf8>
  40e278:	add	x1, x1, #0x22b
  40e27c:	add	x3, x3, #0x949
  40e280:	mov	w0, #0x1                   	// #1
  40e284:	mov	w2, #0x412                 	// #1042
  40e288:	bl	40a330 <log_oom_internal@plt>
  40e28c:	b	40e124 <on_ctrl_msg+0x490>
  40e290:	adrp	x1, 434000 <__libc_csu_init+0x60>
  40e294:	adrp	x3, 435000 <worker_hash_op+0xdf8>
  40e298:	add	x1, x1, #0x22b
  40e29c:	add	x3, x3, #0x949
  40e2a0:	mov	w0, #0x1                   	// #1
  40e2a4:	mov	w2, #0x40c                 	// #1036
  40e2a8:	b	40e184 <on_ctrl_msg+0x4f0>
  40e2ac:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  40e2b0:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40e2b4:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  40e2b8:	add	x1, x1, #0x8db
  40e2bc:	add	x2, x2, #0x22b
  40e2c0:	add	x4, x4, #0x8e1
  40e2c4:	mov	w0, #0x1                   	// #1
  40e2c8:	mov	w3, #0x3d7                 	// #983
  40e2cc:	bl	40a630 <log_assert_failed_realm@plt>
  40e2d0:	adrp	x1, 434000 <__libc_csu_init+0x60>
  40e2d4:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40e2d8:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  40e2dc:	add	x1, x1, #0x3fe
  40e2e0:	add	x2, x2, #0x22b
  40e2e4:	add	x4, x4, #0x8e1
  40e2e8:	mov	w0, #0x1                   	// #1
  40e2ec:	mov	w3, #0x3d8                 	// #984
  40e2f0:	bl	40a630 <log_assert_failed_realm@plt>

000000000040e2f4 <on_inotify>:
  40e2f4:	sub	sp, sp, #0x1f0
  40e2f8:	stp	x29, x30, [sp, #400]
  40e2fc:	stp	x28, x27, [sp, #416]
  40e300:	stp	x26, x25, [sp, #432]
  40e304:	stp	x24, x23, [sp, #448]
  40e308:	stp	x22, x21, [sp, #464]
  40e30c:	stp	x20, x19, [sp, #480]
  40e310:	add	x29, sp, #0x190
  40e314:	cbz	x3, 40e77c <on_inotify+0x488>
  40e318:	ldr	x0, [x3, #104]
  40e31c:	mov	w19, w1
  40e320:	bl	40a7a0 <event_source_disable@plt>
  40e324:	tbz	w0, #31, 40e364 <on_inotify+0x70>
  40e328:	mov	w20, w0
  40e32c:	mov	w0, #0x1                   	// #1
  40e330:	bl	40a2c0 <log_get_max_level_realm@plt>
  40e334:	cmp	w0, #0x4
  40e338:	b.lt	40e364 <on_inotify+0x70>  // b.tstop
  40e33c:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40e340:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  40e344:	adrp	x5, 435000 <worker_hash_op+0xdf8>
  40e348:	add	x2, x2, #0x22b
  40e34c:	add	x4, x4, #0xbea
  40e350:	add	x5, x5, #0xc3
  40e354:	mov	w0, #0x404                 	// #1028
  40e358:	mov	w3, #0x4c4                 	// #1220
  40e35c:	mov	w1, w20
  40e360:	bl	40a2d0 <log_internal_realm@plt>
  40e364:	add	x1, sp, #0x30
  40e368:	mov	w2, #0x110                 	// #272
  40e36c:	mov	w0, w19
  40e370:	add	x20, sp, #0x30
  40e374:	bl	40a830 <read@plt>
  40e378:	tbnz	x0, #63, 40e710 <on_inotify+0x41c>
  40e37c:	add	x28, x20, x0
  40e380:	cmp	x28, x20
  40e384:	b.ls	40e6ec <on_inotify+0x3f8>  // b.plast
  40e388:	adrp	x24, 435000 <worker_hash_op+0xdf8>
  40e38c:	adrp	x22, 435000 <worker_hash_op+0xdf8>
  40e390:	adrp	x19, 434000 <__libc_csu_init+0x60>
  40e394:	adrp	x20, 435000 <worker_hash_op+0xdf8>
  40e398:	adrp	x21, 435000 <worker_hash_op+0xdf8>
  40e39c:	adrp	x26, 435000 <worker_hash_op+0xdf8>
  40e3a0:	adrp	x27, 435000 <worker_hash_op+0xdf8>
  40e3a4:	add	x23, sp, #0x30
  40e3a8:	add	x24, x24, #0x7f
  40e3ac:	add	x22, x22, #0xc13
  40e3b0:	add	x19, x19, #0x22b
  40e3b4:	add	x20, x20, #0xbea
  40e3b8:	add	x21, x21, #0x1ad
  40e3bc:	add	x26, x26, #0xc2c
  40e3c0:	add	x27, x27, #0x7d8
  40e3c4:	b	40e3dc <on_inotify+0xe8>
  40e3c8:	ldr	w8, [x23, #12]
  40e3cc:	add	x8, x23, x8
  40e3d0:	add	x23, x8, #0x10
  40e3d4:	cmp	x28, x23
  40e3d8:	b.ls	40e6ec <on_inotify+0x3f8>  // b.plast
  40e3dc:	ldr	w0, [x23]
  40e3e0:	add	x1, sp, #0x28
  40e3e4:	str	xzr, [sp, #40]
  40e3e8:	bl	420058 <udev_watch_lookup>
  40e3ec:	cmp	w0, #0x1
  40e3f0:	b.lt	40e4f4 <on_inotify+0x200>  // b.tstop
  40e3f4:	ldr	x0, [sp, #40]
  40e3f8:	add	x1, sp, #0x20
  40e3fc:	bl	40a840 <sd_device_get_devname@plt>
  40e400:	tbnz	w0, #31, 40e4f4 <on_inotify+0x200>
  40e404:	ldr	x25, [sp, #40]
  40e408:	stur	xzr, [x29, #-16]
  40e40c:	cbz	x25, 40e420 <on_inotify+0x12c>
  40e410:	mov	w0, #0x1                   	// #1
  40e414:	bl	40a2c0 <log_get_max_level_realm@plt>
  40e418:	cmp	w0, #0x7
  40e41c:	b.ge	40e6d8 <on_inotify+0x3e4>  // b.tcont
  40e420:	mov	x6, xzr
  40e424:	ldr	w8, [x23, #4]
  40e428:	ldr	x9, [sp, #32]
  40e42c:	cmp	x6, #0x0
  40e430:	csel	x5, xzr, x24, eq  // eq = none
  40e434:	mov	w0, #0x7                   	// #7
  40e438:	mov	w3, #0x4d8                 	// #1240
  40e43c:	mov	w1, wzr
  40e440:	mov	x2, x19
  40e444:	mov	x4, x20
  40e448:	mov	x7, xzr
  40e44c:	str	x9, [sp, #24]
  40e450:	str	w8, [sp, #16]
  40e454:	stp	xzr, x22, [sp]
  40e458:	bl	40a730 <log_object_internal@plt>
  40e45c:	ldr	w8, [x23, #4]
  40e460:	tbnz	w8, #3, 40e474 <on_inotify+0x180>
  40e464:	tbz	w8, #15, 40e4f4 <on_inotify+0x200>
  40e468:	ldr	x0, [sp, #40]
  40e46c:	bl	41fe74 <udev_watch_end>
  40e470:	b	40e4f4 <on_inotify+0x200>
  40e474:	ldr	x25, [sp, #40]
  40e478:	sub	x1, x29, #0x10
  40e47c:	mov	x0, x25
  40e480:	bl	40a850 <sd_device_get_subsystem@plt>
  40e484:	tbnz	w0, #31, 40e4f4 <on_inotify+0x200>
  40e488:	sub	x1, x29, #0x18
  40e48c:	mov	x0, x25
  40e490:	bl	40a780 <sd_device_get_sysname@plt>
  40e494:	tbnz	w0, #31, 40e4f4 <on_inotify+0x200>
  40e498:	sub	x1, x29, #0x20
  40e49c:	mov	x0, x25
  40e4a0:	bl	40a840 <sd_device_get_devname@plt>
  40e4a4:	tbnz	w0, #31, 40e4f4 <on_inotify+0x200>
  40e4a8:	sub	x1, x29, #0x28
  40e4ac:	mov	x0, x25
  40e4b0:	bl	40a860 <sd_device_get_syspath@plt>
  40e4b4:	tbnz	w0, #31, 40e4f4 <on_inotify+0x200>
  40e4b8:	sub	x1, x29, #0x30
  40e4bc:	mov	x0, x25
  40e4c0:	bl	40a870 <sd_device_get_devtype@plt>
  40e4c4:	tbnz	w0, #31, 40e4f4 <on_inotify+0x200>
  40e4c8:	ldur	x1, [x29, #-16]
  40e4cc:	mov	x0, x21
  40e4d0:	bl	40a880 <strcmp_ptr@plt>
  40e4d4:	cbnz	w0, 40e4e8 <on_inotify+0x1f4>
  40e4d8:	ldur	x1, [x29, #-48]
  40e4dc:	mov	x0, x26
  40e4e0:	bl	40a880 <strcmp_ptr@plt>
  40e4e4:	cbz	w0, 40e504 <on_inotify+0x210>
  40e4e8:	ldur	x1, [x29, #-40]
  40e4ec:	mov	x0, x25
  40e4f0:	bl	410ab8 <synthesize_change_one>
  40e4f4:	ldr	x0, [sp, #40]
  40e4f8:	cbz	x0, 40e3c8 <on_inotify+0xd4>
  40e4fc:	bl	40a6e0 <sd_device_unref@plt>
  40e500:	b	40e3c8 <on_inotify+0xd4>
  40e504:	ldur	x0, [x29, #-24]
  40e508:	mov	w2, #0x3                   	// #3
  40e50c:	mov	x1, x27
  40e510:	bl	40a6a0 <strncmp@plt>
  40e514:	cbz	w0, 40e4e8 <on_inotify+0x1f4>
  40e518:	ldur	x0, [x29, #-32]
  40e51c:	mov	w1, #0x8800                	// #34816
  40e520:	movk	w1, #0x8, lsl #16
  40e524:	stur	xzr, [x29, #-56]
  40e528:	bl	40a890 <open64@plt>
  40e52c:	tbnz	w0, #31, 40e564 <on_inotify+0x270>
  40e530:	mov	w1, #0x6                   	// #6
  40e534:	mov	w26, w0
  40e538:	bl	40a8a0 <flock@plt>
  40e53c:	tbnz	w0, #31, 40e550 <on_inotify+0x25c>
  40e540:	mov	w1, #0x125f                	// #4703
  40e544:	mov	w0, w26
  40e548:	mov	w2, wzr
  40e54c:	bl	40a8b0 <ioctl@plt>
  40e550:	mov	w27, w0
  40e554:	mov	w0, w26
  40e558:	bl	40a8c0 <close@plt>
  40e55c:	lsr	w26, w27, #31
  40e560:	b	40e568 <on_inotify+0x274>
  40e564:	mov	w26, #0x1                   	// #1
  40e568:	sub	x0, x29, #0x38
  40e56c:	bl	40a8d0 <sd_device_enumerator_new@plt>
  40e570:	ldur	x8, [x29, #-56]
  40e574:	tbnz	w0, #31, 40e6a0 <on_inotify+0x3ac>
  40e578:	mov	x0, x8
  40e57c:	bl	40a8e0 <sd_device_enumerator_allow_uninitialized@plt>
  40e580:	ldur	x8, [x29, #-56]
  40e584:	tbnz	w0, #31, 40e6a0 <on_inotify+0x3ac>
  40e588:	mov	x0, x8
  40e58c:	mov	x1, x25
  40e590:	bl	40a8f0 <sd_device_enumerator_add_match_parent@plt>
  40e594:	ldur	x8, [x29, #-56]
  40e598:	adrp	x27, 435000 <worker_hash_op+0xdf8>
  40e59c:	add	x27, x27, #0x7d8
  40e5a0:	tbnz	w0, #31, 40e6a8 <on_inotify+0x3b4>
  40e5a4:	mov	w2, #0x1                   	// #1
  40e5a8:	mov	x0, x8
  40e5ac:	mov	x1, x21
  40e5b0:	bl	40a900 <sd_device_enumerator_add_match_subsystem@plt>
  40e5b4:	ldur	x8, [x29, #-56]
  40e5b8:	tbnz	w0, #31, 40e6a8 <on_inotify+0x3b4>
  40e5bc:	mov	x0, x8
  40e5c0:	bl	40a910 <sd_device_enumerator_get_device_first@plt>
  40e5c4:	cbz	x0, 40e61c <on_inotify+0x328>
  40e5c8:	mov	w27, wzr
  40e5cc:	b	40e5e0 <on_inotify+0x2ec>
  40e5d0:	orr	w27, w27, w8
  40e5d4:	ldur	x0, [x29, #-56]
  40e5d8:	bl	40a920 <sd_device_enumerator_get_device_next@plt>
  40e5dc:	cbz	x0, 40e60c <on_inotify+0x318>
  40e5e0:	sub	x1, x29, #0x40
  40e5e4:	bl	40a870 <sd_device_get_devtype@plt>
  40e5e8:	tbnz	w0, #31, 40e5d4 <on_inotify+0x2e0>
  40e5ec:	ldur	x1, [x29, #-64]
  40e5f0:	adrp	x0, 435000 <worker_hash_op+0xdf8>
  40e5f4:	add	x0, x0, #0x7fe
  40e5f8:	bl	40a930 <strcmp@plt>
  40e5fc:	cmp	w0, #0x0
  40e600:	cset	w8, eq  // eq = none
  40e604:	cbnz	w0, 40e5d0 <on_inotify+0x2dc>
  40e608:	mov	w27, #0x1                   	// #1
  40e60c:	orn	w8, w26, w27
  40e610:	adrp	x27, 435000 <worker_hash_op+0xdf8>
  40e614:	add	x27, x27, #0x7d8
  40e618:	tbz	w8, #0, 40e6c0 <on_inotify+0x3cc>
  40e61c:	ldur	x1, [x29, #-40]
  40e620:	mov	x0, x25
  40e624:	bl	410ab8 <synthesize_change_one>
  40e628:	ldur	x0, [x29, #-56]
  40e62c:	bl	40a910 <sd_device_enumerator_get_device_first@plt>
  40e630:	cbz	x0, 40e6c0 <on_inotify+0x3cc>
  40e634:	mov	x26, x0
  40e638:	b	40e64c <on_inotify+0x358>
  40e63c:	ldur	x0, [x29, #-56]
  40e640:	bl	40a920 <sd_device_enumerator_get_device_next@plt>
  40e644:	mov	x26, x0
  40e648:	cbz	x0, 40e6c0 <on_inotify+0x3cc>
  40e64c:	sub	x1, x29, #0x40
  40e650:	mov	x0, x26
  40e654:	bl	40a870 <sd_device_get_devtype@plt>
  40e658:	tbnz	w0, #31, 40e63c <on_inotify+0x348>
  40e65c:	ldur	x1, [x29, #-64]
  40e660:	adrp	x0, 435000 <worker_hash_op+0xdf8>
  40e664:	add	x0, x0, #0x7fe
  40e668:	bl	40a930 <strcmp@plt>
  40e66c:	cbnz	w0, 40e63c <on_inotify+0x348>
  40e670:	sub	x1, x29, #0x48
  40e674:	mov	x0, x26
  40e678:	bl	40a840 <sd_device_get_devname@plt>
  40e67c:	tbnz	w0, #31, 40e63c <on_inotify+0x348>
  40e680:	sub	x1, x29, #0x50
  40e684:	mov	x0, x26
  40e688:	bl	40a860 <sd_device_get_syspath@plt>
  40e68c:	tbnz	w0, #31, 40e63c <on_inotify+0x348>
  40e690:	ldur	x1, [x29, #-80]
  40e694:	mov	x0, x25
  40e698:	bl	410ab8 <synthesize_change_one>
  40e69c:	b	40e63c <on_inotify+0x348>
  40e6a0:	adrp	x27, 435000 <worker_hash_op+0xdf8>
  40e6a4:	add	x27, x27, #0x7d8
  40e6a8:	cbz	x8, 40e6cc <on_inotify+0x3d8>
  40e6ac:	mov	x0, x8
  40e6b0:	bl	40a940 <sd_device_enumerator_unref@plt>
  40e6b4:	adrp	x26, 435000 <worker_hash_op+0xdf8>
  40e6b8:	add	x26, x26, #0xc2c
  40e6bc:	b	40e4f4 <on_inotify+0x200>
  40e6c0:	ldur	x0, [x29, #-56]
  40e6c4:	cbz	x0, 40e6cc <on_inotify+0x3d8>
  40e6c8:	bl	40a940 <sd_device_enumerator_unref@plt>
  40e6cc:	adrp	x26, 435000 <worker_hash_op+0xdf8>
  40e6d0:	add	x26, x26, #0xc2c
  40e6d4:	b	40e4f4 <on_inotify+0x200>
  40e6d8:	sub	x1, x29, #0x10
  40e6dc:	mov	x0, x25
  40e6e0:	bl	40a780 <sd_device_get_sysname@plt>
  40e6e4:	ldur	x6, [x29, #-16]
  40e6e8:	b	40e424 <on_inotify+0x130>
  40e6ec:	mov	w0, #0x1                   	// #1
  40e6f0:	ldp	x20, x19, [sp, #480]
  40e6f4:	ldp	x22, x21, [sp, #464]
  40e6f8:	ldp	x24, x23, [sp, #448]
  40e6fc:	ldp	x26, x25, [sp, #432]
  40e700:	ldp	x28, x27, [sp, #416]
  40e704:	ldp	x29, x30, [sp, #400]
  40e708:	add	sp, sp, #0x1f0
  40e70c:	ret
  40e710:	bl	40a3e0 <__errno_location@plt>
  40e714:	ldr	w19, [x0]
  40e718:	mov	w0, #0x1                   	// #1
  40e71c:	cmp	w19, #0x4
  40e720:	b.eq	40e6f0 <on_inotify+0x3fc>  // b.none
  40e724:	cmp	w19, #0xb
  40e728:	b.eq	40e6f0 <on_inotify+0x3fc>  // b.none
  40e72c:	mov	w0, #0x1                   	// #1
  40e730:	bl	40a2c0 <log_get_max_level_realm@plt>
  40e734:	cmp	w0, #0x3
  40e738:	b.lt	40e768 <on_inotify+0x474>  // b.tstop
  40e73c:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40e740:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  40e744:	adrp	x5, 435000 <worker_hash_op+0xdf8>
  40e748:	add	x2, x2, #0x22b
  40e74c:	add	x4, x4, #0xbea
  40e750:	add	x5, x5, #0xbf5
  40e754:	mov	w0, #0x403                 	// #1027
  40e758:	mov	w3, #0x4cb                 	// #1227
  40e75c:	mov	w1, w19
  40e760:	bl	40a2d0 <log_internal_realm@plt>
  40e764:	b	40e6f0 <on_inotify+0x3fc>
  40e768:	cmp	w19, #0x0
  40e76c:	mov	w8, wzr
  40e770:	cneg	w9, w19, mi  // mi = first
  40e774:	sub	w0, w8, w9, uxtb
  40e778:	b	40e6f0 <on_inotify+0x3fc>
  40e77c:	adrp	x1, 434000 <__libc_csu_init+0x60>
  40e780:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40e784:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  40e788:	add	x1, x1, #0x3fe
  40e78c:	add	x2, x2, #0x22b
  40e790:	add	x4, x4, #0xbb1
  40e794:	mov	w0, #0x1                   	// #1
  40e798:	mov	w3, #0x4c0                 	// #1216
  40e79c:	bl	40a630 <log_assert_failed_realm@plt>

000000000040e7a0 <on_uevent>:
  40e7a0:	sub	sp, sp, #0x80
  40e7a4:	stp	x29, x30, [sp, #64]
  40e7a8:	str	x23, [sp, #80]
  40e7ac:	stp	x22, x21, [sp, #96]
  40e7b0:	stp	x20, x19, [sp, #112]
  40e7b4:	add	x29, sp, #0x40
  40e7b8:	cbz	x2, 40ea3c <on_uevent+0x29c>
  40e7bc:	mov	x19, x1
  40e7c0:	mov	x0, x1
  40e7c4:	mov	x1, xzr
  40e7c8:	mov	x20, x2
  40e7cc:	bl	40a950 <device_ensure_usec_initialized@plt>
  40e7d0:	str	xzr, [x29, #24]
  40e7d4:	cbz	x19, 40ea60 <on_uevent+0x2c0>
  40e7d8:	ldr	w21, [x20, #32]
  40e7dc:	bl	40a510 <getpid_cached@plt>
  40e7e0:	cmp	w21, w0
  40e7e4:	b.ne	40ea84 <on_uevent+0x2e4>  // b.any
  40e7e8:	sub	x1, x29, #0x10
  40e7ec:	mov	x0, x19
  40e7f0:	bl	40a960 <device_get_seqnum@plt>
  40e7f4:	tbnz	w0, #31, 40e964 <on_uevent+0x1c4>
  40e7f8:	sub	x1, x29, #0x4
  40e7fc:	mov	x0, x19
  40e800:	bl	40a970 <device_get_action@plt>
  40e804:	tbnz	w0, #31, 40e964 <on_uevent+0x1c4>
  40e808:	add	x1, x29, #0x18
  40e80c:	mov	x0, x19
  40e810:	bl	40a980 <device_shallow_clone@plt>
  40e814:	tbnz	w0, #31, 40e964 <on_uevent+0x1c4>
  40e818:	ldr	x0, [x29, #24]
  40e81c:	mov	x1, x19
  40e820:	bl	40a990 <device_copy_properties@plt>
  40e824:	tbnz	w0, #31, 40e964 <on_uevent+0x1c4>
  40e828:	mov	w0, #0x58                  	// #88
  40e82c:	bl	40a490 <malloc@plt>
  40e830:	cbz	x0, 40e9f8 <on_uevent+0x258>
  40e834:	mov	x21, x0
  40e838:	mov	x0, x19
  40e83c:	bl	40a9a0 <sd_device_ref@plt>
  40e840:	ldr	x8, [x29, #24]
  40e844:	ldur	x9, [x29, #-16]
  40e848:	mov	w10, #0x1                   	// #1
  40e84c:	movi	v0.2d, #0x0
  40e850:	str	xzr, [x29, #24]
  40e854:	stp	x20, xzr, [x21]
  40e858:	str	w10, [x21, #16]
  40e85c:	stp	q0, q0, [x21, #48]
  40e860:	stp	x0, x8, [x21, #24]
  40e864:	str	x9, [x21, #40]
  40e868:	str	xzr, [x21, #80]
  40e86c:	mov	x23, x20
  40e870:	ldr	x8, [x23, #16]!
  40e874:	cbnz	x8, 40e8cc <on_uevent+0x12c>
  40e878:	adrp	x0, 434000 <__libc_csu_init+0x60>
  40e87c:	add	x0, x0, #0x46e
  40e880:	bl	40a9b0 <touch@plt>
  40e884:	tbz	w0, #31, 40e8c4 <on_uevent+0x124>
  40e888:	mov	w22, w0
  40e88c:	mov	w0, #0x1                   	// #1
  40e890:	bl	40a2c0 <log_get_max_level_realm@plt>
  40e894:	cmp	w0, #0x4
  40e898:	b.lt	40e8c4 <on_uevent+0x124>  // b.tstop
  40e89c:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40e8a0:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  40e8a4:	adrp	x5, 435000 <worker_hash_op+0xdf8>
  40e8a8:	add	x2, x2, #0x22b
  40e8ac:	add	x4, x4, #0xdb1
  40e8b0:	add	x5, x5, #0xdc4
  40e8b4:	mov	w0, #0x404                 	// #1028
  40e8b8:	mov	w3, #0x283                 	// #643
  40e8bc:	mov	w1, w22
  40e8c0:	bl	40a2d0 <log_internal_realm@plt>
  40e8c4:	ldr	x8, [x23]
  40e8c8:	cbz	x8, 40ea08 <on_uevent+0x268>
  40e8cc:	mov	x9, x8
  40e8d0:	ldr	x8, [x8, #72]
  40e8d4:	cbnz	x8, 40e8cc <on_uevent+0x12c>
  40e8d8:	add	x23, x9, #0x48
  40e8dc:	stp	xzr, x9, [x21, #72]
  40e8e0:	mov	w0, #0x1                   	// #1
  40e8e4:	str	x21, [x23]
  40e8e8:	stur	xzr, [x29, #-24]
  40e8ec:	bl	40a2c0 <log_get_max_level_realm@plt>
  40e8f0:	cmp	w0, #0x7
  40e8f4:	mov	x21, xzr
  40e8f8:	b.ge	40ea28 <on_uevent+0x288>  // b.tcont
  40e8fc:	ldur	w0, [x29, #-4]
  40e900:	ldur	x23, [x29, #-16]
  40e904:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  40e908:	add	x8, x8, #0x7f
  40e90c:	cmp	x21, #0x0
  40e910:	csel	x22, xzr, x8, eq  // eq = none
  40e914:	bl	40a9c0 <device_action_to_string@plt>
  40e918:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  40e91c:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40e920:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  40e924:	stp	x23, x0, [sp, #16]
  40e928:	add	x8, x8, #0xde8
  40e92c:	add	x2, x2, #0x22b
  40e930:	add	x4, x4, #0xdb1
  40e934:	mov	w0, #0x7                   	// #7
  40e938:	mov	w3, #0x289                 	// #649
  40e93c:	mov	w1, wzr
  40e940:	mov	x5, x22
  40e944:	mov	x6, x21
  40e948:	mov	x7, xzr
  40e94c:	stp	xzr, x8, [sp]
  40e950:	bl	40a730 <log_object_internal@plt>
  40e954:	mov	w21, wzr
  40e958:	ldr	x0, [x29, #24]
  40e95c:	cbnz	x0, 40e970 <on_uevent+0x1d0>
  40e960:	b	40e974 <on_uevent+0x1d4>
  40e964:	mov	w21, w0
  40e968:	ldr	x0, [x29, #24]
  40e96c:	cbz	x0, 40e974 <on_uevent+0x1d4>
  40e970:	bl	40a6e0 <sd_device_unref@plt>
  40e974:	tbnz	w21, #31, 40e984 <on_uevent+0x1e4>
  40e978:	mov	x0, x20
  40e97c:	bl	40f094 <event_queue_start>
  40e980:	b	40e9dc <on_uevent+0x23c>
  40e984:	mov	w0, #0x1                   	// #1
  40e988:	str	xzr, [x29, #24]
  40e98c:	bl	40a2c0 <log_get_max_level_realm@plt>
  40e990:	cmp	w0, #0x3
  40e994:	mov	x6, xzr
  40e998:	b.ge	40ea14 <on_uevent+0x274>  // b.tcont
  40e99c:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  40e9a0:	add	x8, x8, #0x7f
  40e9a4:	cmp	x6, #0x0
  40e9a8:	csel	x5, xzr, x8, eq  // eq = none
  40e9ac:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  40e9b0:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40e9b4:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  40e9b8:	add	x8, x8, #0xd35
  40e9bc:	add	x2, x2, #0x22b
  40e9c0:	add	x4, x4, #0xd2b
  40e9c4:	mov	w0, #0x3                   	// #3
  40e9c8:	mov	w3, #0x3c8                 	// #968
  40e9cc:	mov	w1, w21
  40e9d0:	mov	x7, xzr
  40e9d4:	stp	xzr, x8, [sp]
  40e9d8:	bl	40a730 <log_object_internal@plt>
  40e9dc:	ldp	x20, x19, [sp, #112]
  40e9e0:	ldp	x22, x21, [sp, #96]
  40e9e4:	ldr	x23, [sp, #80]
  40e9e8:	ldp	x29, x30, [sp, #64]
  40e9ec:	mov	w0, #0x1                   	// #1
  40e9f0:	add	sp, sp, #0x80
  40e9f4:	ret
  40e9f8:	mov	w21, #0xfffffff4            	// #-12
  40e9fc:	ldr	x0, [x29, #24]
  40ea00:	cbnz	x0, 40e970 <on_uevent+0x1d0>
  40ea04:	b	40e974 <on_uevent+0x1d4>
  40ea08:	add	x8, x21, #0x48
  40ea0c:	stp	xzr, xzr, [x8]
  40ea10:	b	40e8e0 <on_uevent+0x140>
  40ea14:	add	x1, x29, #0x18
  40ea18:	mov	x0, x19
  40ea1c:	bl	40a780 <sd_device_get_sysname@plt>
  40ea20:	ldr	x6, [x29, #24]
  40ea24:	b	40e99c <on_uevent+0x1fc>
  40ea28:	sub	x1, x29, #0x18
  40ea2c:	mov	x0, x19
  40ea30:	bl	40a780 <sd_device_get_sysname@plt>
  40ea34:	ldur	x21, [x29, #-24]
  40ea38:	b	40e8fc <on_uevent+0x15c>
  40ea3c:	adrp	x1, 434000 <__libc_csu_init+0x60>
  40ea40:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40ea44:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  40ea48:	add	x1, x1, #0x3fe
  40ea4c:	add	x2, x2, #0x22b
  40ea50:	add	x4, x4, #0xcf3
  40ea54:	mov	w0, #0x1                   	// #1
  40ea58:	mov	w3, #0x3c2                 	// #962
  40ea5c:	bl	40a630 <log_assert_failed_realm@plt>
  40ea60:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  40ea64:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40ea68:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  40ea6c:	add	x1, x1, #0x4f0
  40ea70:	add	x2, x2, #0x22b
  40ea74:	add	x4, x4, #0xd62
  40ea78:	mov	w0, #0x1                   	// #1
  40ea7c:	mov	w3, #0x25c                 	// #604
  40ea80:	bl	40a630 <log_assert_failed_realm@plt>
  40ea84:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  40ea88:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40ea8c:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  40ea90:	add	x1, x1, #0xd91
  40ea94:	add	x2, x2, #0x22b
  40ea98:	add	x4, x4, #0xd62
  40ea9c:	mov	w0, #0x1                   	// #1
  40eaa0:	mov	w3, #0x25f                 	// #607
  40eaa4:	bl	40a630 <log_assert_failed_realm@plt>

000000000040eaa8 <on_worker>:
  40eaa8:	sub	sp, sp, #0xe0
  40eaac:	stp	x29, x30, [sp, #128]
  40eab0:	stp	x28, x27, [sp, #144]
  40eab4:	stp	x26, x25, [sp, #160]
  40eab8:	stp	x24, x23, [sp, #176]
  40eabc:	stp	x22, x21, [sp, #192]
  40eac0:	stp	x20, x19, [sp, #208]
  40eac4:	add	x29, sp, #0x80
  40eac8:	str	x3, [sp]
  40eacc:	cbz	x3, 40ed3c <on_worker+0x294>
  40ead0:	adrp	x21, 434000 <__libc_csu_init+0x60>
  40ead4:	adrp	x22, 435000 <worker_hash_op+0xdf8>
  40ead8:	adrp	x25, 435000 <worker_hash_op+0xdf8>
  40eadc:	mov	w20, w1
  40eae0:	sub	x27, x29, #0x8
  40eae4:	sub	x28, x29, #0x18
  40eae8:	mov	w24, #0x1                   	// #1
  40eaec:	add	x23, sp, #0x40
  40eaf0:	mov	w19, #0x20                  	// #32
  40eaf4:	add	x21, x21, #0x22b
  40eaf8:	add	x22, x22, #0xe49
  40eafc:	add	x25, x25, #0xe71
  40eb00:	b	40eb14 <on_worker+0x6c>
  40eb04:	bl	40a3e0 <__errno_location@plt>
  40eb08:	ldr	w26, [x0]
  40eb0c:	cmp	w26, #0x4
  40eb10:	b.ne	40ecb8 <on_worker+0x210>  // b.any
  40eb14:	movi	v0.2d, #0x0
  40eb18:	add	x1, sp, #0x8
  40eb1c:	mov	w2, #0x40                  	// #64
  40eb20:	mov	w0, w20
  40eb24:	stp	x27, xzr, [x29, #-24]
  40eb28:	stp	q0, q0, [sp, #64]
  40eb2c:	str	xzr, [sp, #8]
  40eb30:	str	wzr, [sp, #16]
  40eb34:	stp	x28, x24, [sp, #24]
  40eb38:	stp	x23, x19, [sp, #40]
  40eb3c:	str	wzr, [sp, #56]
  40eb40:	bl	40a9d0 <recvmsg@plt>
  40eb44:	tbnz	x0, #63, 40eb04 <on_worker+0x5c>
  40eb48:	mov	x26, x0
  40eb4c:	cbz	x0, 40eb84 <on_worker+0xdc>
  40eb50:	mov	w0, #0x1                   	// #1
  40eb54:	bl	40a2c0 <log_get_max_level_realm@plt>
  40eb58:	cmp	w0, #0x4
  40eb5c:	b.lt	40eb14 <on_worker+0x6c>  // b.tstop
  40eb60:	mov	w0, #0x404                 	// #1028
  40eb64:	mov	w3, #0x39b                 	// #923
  40eb68:	mov	w1, wzr
  40eb6c:	mov	x2, x21
  40eb70:	mov	x4, x22
  40eb74:	mov	x5, x25
  40eb78:	mov	x6, x26
  40eb7c:	bl	40a2d0 <log_internal_realm@plt>
  40eb80:	b	40eb14 <on_worker+0x6c>
  40eb84:	ldr	x10, [sp, #40]
  40eb88:	cbz	x10, 40ec4c <on_worker+0x1a4>
  40eb8c:	ldr	x8, [sp, #48]
  40eb90:	cmp	x8, #0x10
  40eb94:	b.cc	40ec4c <on_worker+0x1a4>  // b.lo, b.ul, b.last
  40eb98:	mov	x26, xzr
  40eb9c:	add	x8, x10, x8
  40eba0:	mov	x9, x10
  40eba4:	ldr	w10, [x10, #8]
  40eba8:	cmp	w10, #0x1
  40ebac:	b.ne	40ebcc <on_worker+0x124>  // b.any
  40ebb0:	ldr	w10, [x9, #12]
  40ebb4:	cmp	w10, #0x2
  40ebb8:	b.ne	40ebcc <on_worker+0x124>  // b.any
  40ebbc:	ldr	x10, [x9]
  40ebc0:	cmp	x10, #0x1c
  40ebc4:	b.ne	40ebcc <on_worker+0x124>  // b.any
  40ebc8:	add	x26, x9, #0x10
  40ebcc:	ldr	x10, [x9]
  40ebd0:	cmp	x10, #0x10
  40ebd4:	b.cc	40ec0c <on_worker+0x164>  // b.lo, b.ul, b.last
  40ebd8:	add	x10, x10, #0x7
  40ebdc:	and	x10, x10, #0xfffffffffffffff8
  40ebe0:	add	x10, x9, x10
  40ebe4:	add	x11, x10, #0x10
  40ebe8:	cmp	x11, x8
  40ebec:	b.hi	40ec0c <on_worker+0x164>  // b.pmore
  40ebf0:	ldr	x11, [x10]
  40ebf4:	add	x11, x11, #0x7
  40ebf8:	and	x11, x11, #0xfffffffffffffff8
  40ebfc:	add	x11, x10, x11
  40ec00:	cmp	x11, x8
  40ec04:	b.hi	40ec0c <on_worker+0x164>  // b.pmore
  40ec08:	cbnz	x9, 40eba0 <on_worker+0xf8>
  40ec0c:	cbz	x26, 40ec4c <on_worker+0x1a4>
  40ec10:	ldr	w1, [x26]
  40ec14:	cmp	w1, #0x0
  40ec18:	b.le	40ec4c <on_worker+0x1a4>
  40ec1c:	ldr	x8, [sp]
  40ec20:	ldr	x0, [x8, #8]
  40ec24:	bl	40a710 <internal_hashmap_get@plt>
  40ec28:	cbz	x0, 40ec80 <on_worker+0x1d8>
  40ec2c:	ldr	w8, [x0, #24]
  40ec30:	cmp	w8, #0x3
  40ec34:	b.eq	40ec40 <on_worker+0x198>  // b.none
  40ec38:	mov	w8, #0x2                   	// #2
  40ec3c:	str	w8, [x0, #24]
  40ec40:	ldr	x0, [x0, #32]
  40ec44:	bl	40d658 <event_free>
  40ec48:	b	40eb14 <on_worker+0x6c>
  40ec4c:	mov	w0, #0x1                   	// #1
  40ec50:	bl	40a2c0 <log_get_max_level_realm@plt>
  40ec54:	cmp	w0, #0x4
  40ec58:	b.lt	40eb14 <on_worker+0x6c>  // b.tstop
  40ec5c:	adrp	x5, 435000 <worker_hash_op+0xdf8>
  40ec60:	mov	w0, #0x404                 	// #1028
  40ec64:	mov	w3, #0x3a6                 	// #934
  40ec68:	mov	w1, wzr
  40ec6c:	mov	x2, x21
  40ec70:	mov	x4, x22
  40ec74:	add	x5, x5, #0xea5
  40ec78:	bl	40a2d0 <log_internal_realm@plt>
  40ec7c:	b	40eb14 <on_worker+0x6c>
  40ec80:	mov	w0, #0x1                   	// #1
  40ec84:	bl	40a2c0 <log_get_max_level_realm@plt>
  40ec88:	cmp	w0, #0x7
  40ec8c:	b.lt	40eb14 <on_worker+0x6c>  // b.tstop
  40ec90:	ldr	w6, [x26]
  40ec94:	adrp	x5, 435000 <worker_hash_op+0xdf8>
  40ec98:	mov	w0, #0x407                 	// #1031
  40ec9c:	mov	w3, #0x3ad                 	// #941
  40eca0:	mov	w1, wzr
  40eca4:	mov	x2, x21
  40eca8:	mov	x4, x22
  40ecac:	add	x5, x5, #0xecf
  40ecb0:	bl	40a2d0 <log_internal_realm@plt>
  40ecb4:	b	40eb14 <on_worker+0x6c>
  40ecb8:	cmp	w26, #0xb
  40ecbc:	b.ne	40ecd0 <on_worker+0x228>  // b.any
  40ecc0:	ldr	x0, [sp]
  40ecc4:	bl	40f094 <event_queue_start>
  40ecc8:	mov	w0, #0x1                   	// #1
  40eccc:	b	40ed1c <on_worker+0x274>
  40ecd0:	mov	w0, #0x1                   	// #1
  40ecd4:	bl	40a2c0 <log_get_max_level_realm@plt>
  40ecd8:	cmp	w0, #0x3
  40ecdc:	b.lt	40ed0c <on_worker+0x264>  // b.tstop
  40ece0:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40ece4:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  40ece8:	adrp	x5, 435000 <worker_hash_op+0xdf8>
  40ecec:	add	x2, x2, #0x22b
  40ecf0:	add	x4, x4, #0xe49
  40ecf4:	add	x5, x5, #0xe53
  40ecf8:	mov	w0, #0x403                 	// #1027
  40ecfc:	mov	w3, #0x399                 	// #921
  40ed00:	mov	w1, w26
  40ed04:	bl	40a2d0 <log_internal_realm@plt>
  40ed08:	b	40ed1c <on_worker+0x274>
  40ed0c:	cmp	w26, #0x0
  40ed10:	mov	w8, wzr
  40ed14:	cneg	w9, w26, mi  // mi = first
  40ed18:	sub	w0, w8, w9, uxtb
  40ed1c:	ldp	x20, x19, [sp, #208]
  40ed20:	ldp	x22, x21, [sp, #192]
  40ed24:	ldp	x24, x23, [sp, #176]
  40ed28:	ldp	x26, x25, [sp, #160]
  40ed2c:	ldp	x28, x27, [sp, #144]
  40ed30:	ldp	x29, x30, [sp, #128]
  40ed34:	add	sp, sp, #0xe0
  40ed38:	ret
  40ed3c:	adrp	x1, 434000 <__libc_csu_init+0x60>
  40ed40:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40ed44:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  40ed48:	add	x1, x1, #0x3fe
  40ed4c:	add	x2, x2, #0x22b
  40ed50:	add	x4, x4, #0xe11
  40ed54:	mov	w0, #0x1                   	// #1
  40ed58:	mov	w3, #0x37a                 	// #890
  40ed5c:	bl	40a630 <log_assert_failed_realm@plt>

000000000040ed60 <on_post>:
  40ed60:	sub	sp, sp, #0x40
  40ed64:	stp	x29, x30, [sp, #16]
  40ed68:	str	x21, [sp, #32]
  40ed6c:	stp	x20, x19, [sp, #48]
  40ed70:	add	x29, sp, #0x10
  40ed74:	cbz	x1, 40ee4c <on_post+0xec>
  40ed78:	ldr	x8, [x1, #16]
  40ed7c:	mov	x19, x1
  40ed80:	cbnz	x8, 40ede4 <on_post+0x84>
  40ed84:	ldr	x0, [x19, #8]
  40ed88:	bl	40a790 <internal_hashmap_size@plt>
  40ed8c:	cbz	w0, 40edfc <on_post+0x9c>
  40ed90:	mov	x20, x19
  40ed94:	ldr	x21, [x20], #104
  40ed98:	mov	w0, #0x1                   	// #1
  40ed9c:	bl	40a9e0 <now@plt>
  40eda0:	mov	w8, #0xc6c0                	// #50880
  40eda4:	movk	w8, #0x2d, lsl #16
  40eda8:	add	x3, x0, x8
  40edac:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  40edb0:	adrp	x5, 410000 <worker_main+0x28c>
  40edb4:	mov	w4, #0x4240                	// #16960
  40edb8:	add	x8, x8, #0xf25
  40edbc:	add	x5, x5, #0xc88
  40edc0:	mov	w2, #0x1                   	// #1
  40edc4:	movk	w4, #0xf, lsl #16
  40edc8:	mov	x0, x21
  40edcc:	mov	x1, x20
  40edd0:	mov	x6, x19
  40edd4:	mov	x7, xzr
  40edd8:	strb	wzr, [sp, #8]
  40eddc:	str	x8, [sp]
  40ede0:	bl	40a9f0 <event_reset_time@plt>
  40ede4:	ldp	x20, x19, [sp, #48]
  40ede8:	ldr	x21, [sp, #32]
  40edec:	ldp	x29, x30, [sp, #16]
  40edf0:	mov	w0, #0x1                   	// #1
  40edf4:	add	sp, sp, #0x40
  40edf8:	ret
  40edfc:	ldrb	w8, [x19, #120]
  40ee00:	tbnz	w8, #1, 40ee30 <on_post+0xd0>
  40ee04:	ldr	x1, [x19, #24]
  40ee08:	cbz	x1, 40ede4 <on_post+0x84>
  40ee0c:	adrp	x0, 434000 <__libc_csu_init+0x60>
  40ee10:	add	x0, x0, #0x2f7
  40ee14:	mov	w2, #0x9                   	// #9
  40ee18:	mov	w3, #0x2                   	// #2
  40ee1c:	mov	x4, xzr
  40ee20:	mov	x5, xzr
  40ee24:	mov	x6, xzr
  40ee28:	bl	40aa00 <cg_kill@plt>
  40ee2c:	b	40ede4 <on_post+0x84>
  40ee30:	ldr	x0, [x19]
  40ee34:	ldp	x20, x19, [sp, #48]
  40ee38:	ldr	x21, [sp, #32]
  40ee3c:	ldp	x29, x30, [sp, #16]
  40ee40:	mov	w1, wzr
  40ee44:	add	sp, sp, #0x40
  40ee48:	b	40aa10 <sd_event_exit@plt>
  40ee4c:	adrp	x1, 434000 <__libc_csu_init+0x60>
  40ee50:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40ee54:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  40ee58:	add	x1, x1, #0x3fe
  40ee5c:	add	x2, x2, #0x22b
  40ee60:	add	x4, x4, #0xefe
  40ee64:	mov	w0, #0x1                   	// #1
  40ee68:	mov	w3, #0x53d                 	// #1341
  40ee6c:	bl	40a630 <log_assert_failed_realm@plt>

000000000040ee70 <manager_exit>:
  40ee70:	sub	sp, sp, #0x40
  40ee74:	stp	x29, x30, [sp, #32]
  40ee78:	stp	x20, x19, [sp, #48]
  40ee7c:	add	x29, sp, #0x20
  40ee80:	cbz	x0, 40ef84 <manager_exit+0x114>
  40ee84:	ldrb	w8, [x0, #120]
  40ee88:	adrp	x1, 434000 <__libc_csu_init+0x60>
  40ee8c:	mov	x19, x0
  40ee90:	add	x1, x1, #0xe9a
  40ee94:	orr	w8, w8, #0x2
  40ee98:	strb	w8, [x0, #120]
  40ee9c:	mov	w0, wzr
  40eea0:	bl	40a610 <sd_notify@plt>
  40eea4:	ldr	x0, [x19, #72]
  40eea8:	bl	411174 <udev_ctrl_unref>
  40eeac:	ldr	x8, [x19, #96]
  40eeb0:	str	x0, [x19, #72]
  40eeb4:	mov	x0, x8
  40eeb8:	bl	40a6b0 <sd_event_source_unref@plt>
  40eebc:	ldr	w8, [x19, #80]
  40eec0:	str	x0, [x19, #96]
  40eec4:	mov	w0, w8
  40eec8:	bl	40a660 <safe_close@plt>
  40eecc:	ldr	x8, [x19, #64]
  40eed0:	str	w0, [x19, #80]
  40eed4:	mov	x0, x8
  40eed8:	bl	40a6d0 <sd_device_monitor_unref@plt>
  40eedc:	ldr	x8, [x19, #16]
  40eee0:	str	x0, [x19, #64]
  40eee4:	cbnz	x8, 40ef1c <manager_exit+0xac>
  40eee8:	mov	w8, #0xfffffffe            	// #-2
  40eeec:	str	w8, [sp, #8]
  40eef0:	str	xzr, [sp, #16]
  40eef4:	ldr	x0, [x19, #8]
  40eef8:	add	x1, sp, #0x8
  40eefc:	sub	x2, x29, #0x8
  40ef00:	mov	x3, xzr
  40ef04:	bl	40a7b0 <internal_hashmap_iterate@plt>
  40ef08:	tbz	w0, #0, 40ef74 <manager_exit+0x104>
  40ef0c:	mov	w20, #0x3                   	// #3
  40ef10:	b	40ef50 <manager_exit+0xe0>
  40ef14:	mov	x8, x20
  40ef18:	cbz	x20, 40eee8 <manager_exit+0x78>
  40ef1c:	ldr	w9, [x8, #16]
  40ef20:	ldr	x20, [x8, #72]
  40ef24:	cmp	w9, #0x1
  40ef28:	b.ne	40ef14 <manager_exit+0xa4>  // b.any
  40ef2c:	mov	x0, x8
  40ef30:	bl	40d658 <event_free>
  40ef34:	b	40ef14 <manager_exit+0xa4>
  40ef38:	ldr	x0, [x19, #8]
  40ef3c:	add	x1, sp, #0x8
  40ef40:	sub	x2, x29, #0x8
  40ef44:	mov	x3, xzr
  40ef48:	bl	40a7b0 <internal_hashmap_iterate@plt>
  40ef4c:	tbz	w0, #0, 40ef74 <manager_exit+0x104>
  40ef50:	ldur	x8, [x29, #-8]
  40ef54:	ldr	w9, [x8, #24]
  40ef58:	cmp	w9, #0x3
  40ef5c:	b.eq	40ef38 <manager_exit+0xc8>  // b.none
  40ef60:	ldr	w0, [x8, #8]
  40ef64:	mov	w1, #0xf                   	// #15
  40ef68:	str	w20, [x8, #24]
  40ef6c:	bl	40a7c0 <kill@plt>
  40ef70:	b	40ef38 <manager_exit+0xc8>
  40ef74:	ldp	x20, x19, [sp, #48]
  40ef78:	ldp	x29, x30, [sp, #32]
  40ef7c:	add	sp, sp, #0x40
  40ef80:	ret
  40ef84:	adrp	x1, 434000 <__libc_csu_init+0x60>
  40ef88:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40ef8c:	adrp	x4, 434000 <__libc_csu_init+0x60>
  40ef90:	add	x1, x1, #0x3fe
  40ef94:	add	x2, x2, #0x22b
  40ef98:	add	x4, x4, #0xe7d
  40ef9c:	mov	w0, #0x1                   	// #1
  40efa0:	mov	w3, #0x30a                 	// #778
  40efa4:	bl	40a630 <log_assert_failed_realm@plt>

000000000040efa8 <manager_reload>:
  40efa8:	sub	sp, sp, #0x40
  40efac:	stp	x29, x30, [sp, #32]
  40efb0:	stp	x20, x19, [sp, #48]
  40efb4:	add	x29, sp, #0x20
  40efb8:	cbz	x0, 40f070 <manager_reload+0xc8>
  40efbc:	adrp	x1, 434000 <__libc_csu_init+0x60>
  40efc0:	mov	x19, x0
  40efc4:	add	x1, x1, #0xf2a
  40efc8:	mov	w0, wzr
  40efcc:	bl	40a610 <sd_notify@plt>
  40efd0:	mov	w8, #0xfffffffe            	// #-2
  40efd4:	str	w8, [sp, #8]
  40efd8:	str	xzr, [sp, #16]
  40efdc:	ldr	x0, [x19, #8]
  40efe0:	add	x1, sp, #0x8
  40efe4:	sub	x2, x29, #0x8
  40efe8:	mov	x3, xzr
  40efec:	bl	40a7b0 <internal_hashmap_iterate@plt>
  40eff0:	tbz	w0, #0, 40f038 <manager_reload+0x90>
  40eff4:	mov	w20, #0x3                   	// #3
  40eff8:	b	40f014 <manager_reload+0x6c>
  40effc:	ldr	x0, [x19, #8]
  40f000:	add	x1, sp, #0x8
  40f004:	sub	x2, x29, #0x8
  40f008:	mov	x3, xzr
  40f00c:	bl	40a7b0 <internal_hashmap_iterate@plt>
  40f010:	tbz	w0, #0, 40f038 <manager_reload+0x90>
  40f014:	ldur	x8, [x29, #-8]
  40f018:	ldr	w9, [x8, #24]
  40f01c:	cmp	w9, #0x3
  40f020:	b.eq	40effc <manager_reload+0x54>  // b.none
  40f024:	ldr	w0, [x8, #8]
  40f028:	mov	w1, #0xf                   	// #15
  40f02c:	str	w20, [x8, #24]
  40f030:	bl	40a7c0 <kill@plt>
  40f034:	b	40effc <manager_reload+0x54>
  40f038:	ldr	x0, [x19, #40]
  40f03c:	bl	416b0c <udev_rules_free>
  40f040:	str	x0, [x19, #40]
  40f044:	bl	420378 <udev_builtin_exit>
  40f048:	adrp	x8, 470000 <arg_resolve_name_timing>
  40f04c:	ldr	w2, [x8, #40]
  40f050:	adrp	x1, 434000 <__libc_csu_init+0x60>
  40f054:	add	x1, x1, #0xdc7
  40f058:	mov	w0, wzr
  40f05c:	bl	40a5f0 <sd_notifyf@plt>
  40f060:	ldp	x20, x19, [sp, #48]
  40f064:	ldp	x29, x30, [sp, #32]
  40f068:	add	sp, sp, #0x40
  40f06c:	ret
  40f070:	adrp	x1, 434000 <__libc_csu_init+0x60>
  40f074:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40f078:	adrp	x4, 434000 <__libc_csu_init+0x60>
  40f07c:	add	x1, x1, #0x3fe
  40f080:	add	x2, x2, #0x22b
  40f084:	add	x4, x4, #0xf0b
  40f088:	mov	w0, #0x1                   	// #1
  40f08c:	mov	w3, #0x322                 	// #802
  40f090:	bl	40a630 <log_assert_failed_realm@plt>

000000000040f094 <event_queue_start>:
  40f094:	sub	sp, sp, #0xe0
  40f098:	stp	x29, x30, [sp, #128]
  40f09c:	stp	x28, x27, [sp, #144]
  40f0a0:	stp	x26, x25, [sp, #160]
  40f0a4:	stp	x24, x23, [sp, #176]
  40f0a8:	stp	x22, x21, [sp, #192]
  40f0ac:	stp	x20, x19, [sp, #208]
  40f0b0:	add	x29, sp, #0x80
  40f0b4:	cbz	x0, 40f89c <event_queue_start+0x808>
  40f0b8:	ldr	x8, [x0, #16]
  40f0bc:	mov	x19, x0
  40f0c0:	cbz	x8, 40f0d0 <event_queue_start+0x3c>
  40f0c4:	ldrb	w8, [x19, #120]
  40f0c8:	tst	w8, #0x3
  40f0cc:	b.eq	40f0f0 <event_queue_start+0x5c>  // b.none
  40f0d0:	ldp	x20, x19, [sp, #208]
  40f0d4:	ldp	x22, x21, [sp, #192]
  40f0d8:	ldp	x24, x23, [sp, #176]
  40f0dc:	ldp	x26, x25, [sp, #160]
  40f0e0:	ldp	x28, x27, [sp, #144]
  40f0e4:	ldp	x29, x30, [sp, #128]
  40f0e8:	add	sp, sp, #0xe0
  40f0ec:	ret
  40f0f0:	ldr	x0, [x19]
  40f0f4:	add	x2, sp, #0x30
  40f0f8:	mov	w1, #0x1                   	// #1
  40f0fc:	bl	40aa20 <sd_event_now@plt>
  40f100:	tbnz	w0, #31, 40f954 <event_queue_start+0x8c0>
  40f104:	ldr	x8, [x19, #112]
  40f108:	cbz	x8, 40f124 <event_queue_start+0x90>
  40f10c:	ldr	x9, [sp, #48]
  40f110:	sub	x8, x9, x8
  40f114:	mov	w9, #0xc6c1                	// #50881
  40f118:	movk	w9, #0x2d, lsl #16
  40f11c:	cmp	x8, x9
  40f120:	b.cc	40f148 <event_queue_start+0xb4>  // b.lo, b.ul, b.last
  40f124:	ldr	x0, [x19, #40]
  40f128:	bl	417760 <udev_rules_check_timestamp>
  40f12c:	tbnz	w0, #0, 40f138 <event_queue_start+0xa4>
  40f130:	bl	420480 <udev_builtin_validate>
  40f134:	tbz	w0, #0, 40f140 <event_queue_start+0xac>
  40f138:	mov	x0, x19
  40f13c:	bl	40efa8 <manager_reload>
  40f140:	ldr	x8, [sp, #48]
  40f144:	str	x8, [x19, #112]
  40f148:	ldr	x0, [x19, #104]
  40f14c:	bl	40a7a0 <event_source_disable@plt>
  40f150:	tbz	w0, #31, 40f190 <event_queue_start+0xfc>
  40f154:	mov	w20, w0
  40f158:	mov	w0, #0x1                   	// #1
  40f15c:	bl	40a2c0 <log_get_max_level_realm@plt>
  40f160:	cmp	w0, #0x4
  40f164:	b.lt	40f190 <event_queue_start+0xfc>  // b.tstop
  40f168:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40f16c:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  40f170:	adrp	x5, 435000 <worker_hash_op+0xdf8>
  40f174:	add	x2, x2, #0x22b
  40f178:	add	x4, x4, #0x19b
  40f17c:	add	x5, x5, #0xc3
  40f180:	mov	w0, #0x404                 	// #1028
  40f184:	mov	w3, #0x354                 	// #852
  40f188:	mov	w1, w20
  40f18c:	bl	40a2d0 <log_internal_realm@plt>
  40f190:	bl	420270 <udev_builtin_init>
  40f194:	mov	x0, x19
  40f198:	ldr	x8, [x0, #40]!
  40f19c:	cbnz	x8, 40f1b0 <event_queue_start+0x11c>
  40f1a0:	adrp	x8, 470000 <arg_resolve_name_timing>
  40f1a4:	ldr	w1, [x8]
  40f1a8:	bl	416ba4 <udev_rules_new>
  40f1ac:	tbnz	w0, #31, 40f85c <event_queue_start+0x7c8>
  40f1b0:	ldr	x20, [x19, #16]
  40f1b4:	cbz	x20, 40f0d0 <event_queue_start+0x3c>
  40f1b8:	adrp	x27, 435000 <worker_hash_op+0xdf8>
  40f1bc:	adrp	x23, 435000 <worker_hash_op+0xdf8>
  40f1c0:	adrp	x26, 434000 <__libc_csu_init+0x60>
  40f1c4:	adrp	x28, 435000 <worker_hash_op+0xdf8>
  40f1c8:	add	x21, x19, #0x8
  40f1cc:	add	x27, x27, #0x7f
  40f1d0:	add	x23, x23, #0x1cf
  40f1d4:	add	x26, x26, #0x22b
  40f1d8:	add	x28, x28, #0x1c5
  40f1dc:	b	40f1f4 <event_queue_start+0x160>
  40f1e0:	mov	w0, wzr
  40f1e4:	mov	w22, #0x3                   	// #3
  40f1e8:	cbz	w0, 40f420 <event_queue_start+0x38c>
  40f1ec:	ldr	x20, [x20, #72]
  40f1f0:	cbz	x20, 40f0d0 <event_queue_start+0x3c>
  40f1f4:	ldr	w8, [x20, #16]
  40f1f8:	cmp	w8, #0x1
  40f1fc:	b.ne	40f1ec <event_queue_start+0x158>  // b.any
  40f200:	stp	xzr, xzr, [x29, #-24]
  40f204:	stur	wzr, [x29, #-44]
  40f208:	ldr	x0, [x20, #24]
  40f20c:	sub	x1, x29, #0x28
  40f210:	bl	40a850 <sd_device_get_subsystem@plt>
  40f214:	tbnz	w0, #31, 40f1e4 <event_queue_start+0x150>
  40f218:	ldur	x0, [x29, #-40]
  40f21c:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  40f220:	add	x1, x1, #0x1ad
  40f224:	bl	40a930 <strcmp@plt>
  40f228:	ldr	x8, [x20, #24]
  40f22c:	mov	w22, w0
  40f230:	sub	x1, x29, #0x8
  40f234:	mov	x0, x8
  40f238:	bl	40aa30 <sd_device_get_devpath@plt>
  40f23c:	tbnz	w0, #31, 40f1e4 <event_queue_start+0x150>
  40f240:	ldur	x0, [x29, #-8]
  40f244:	str	w22, [sp, #36]
  40f248:	bl	40aa40 <strlen@plt>
  40f24c:	ldr	x8, [x20, #24]
  40f250:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  40f254:	str	x0, [sp, #40]
  40f258:	sub	x2, x29, #0x10
  40f25c:	mov	x0, x8
  40f260:	add	x1, x1, #0x1b3
  40f264:	bl	40aa50 <sd_device_get_property_value@plt>
  40f268:	tbz	w0, #31, 40f274 <event_queue_start+0x1e0>
  40f26c:	cmn	w0, #0x2
  40f270:	b.ne	40f1e4 <event_queue_start+0x150>  // b.any
  40f274:	ldr	x0, [x20, #24]
  40f278:	sub	x1, x29, #0x18
  40f27c:	bl	40aa60 <sd_device_get_devnum@plt>
  40f280:	tbz	w0, #31, 40f28c <event_queue_start+0x1f8>
  40f284:	cmn	w0, #0x2
  40f288:	b.ne	40f1e4 <event_queue_start+0x150>  // b.any
  40f28c:	ldr	x0, [x20, #24]
  40f290:	sub	x1, x29, #0x2c
  40f294:	bl	40aa70 <sd_device_get_ifindex@plt>
  40f298:	tbz	w0, #31, 40f2a4 <event_queue_start+0x210>
  40f29c:	cmn	w0, #0x2
  40f2a0:	b.ne	40f1e4 <event_queue_start+0x150>  // b.any
  40f2a4:	ldr	x22, [x19, #16]
  40f2a8:	cbz	x22, 40f1e0 <event_queue_start+0x14c>
  40f2ac:	ldr	x8, [x22, #40]
  40f2b0:	ldr	x9, [x20, #48]
  40f2b4:	mov	x25, x23
  40f2b8:	mov	x26, x27
  40f2bc:	cmp	x8, x9
  40f2c0:	b.cc	40f3f8 <event_queue_start+0x364>  // b.lo, b.ul, b.last
  40f2c4:	b.eq	40f788 <event_queue_start+0x6f4>  // b.none
  40f2c8:	ldr	x9, [x20, #40]
  40f2cc:	adrp	x28, 435000 <worker_hash_op+0xdf8>
  40f2d0:	mov	x27, x26
  40f2d4:	add	x28, x28, #0x1c5
  40f2d8:	cmp	x8, x9
  40f2dc:	b.cs	40f7a8 <event_queue_start+0x714>  // b.hs, b.nlast
  40f2e0:	ldur	x8, [x29, #-24]
  40f2e4:	lsr	x9, x8, #32
  40f2e8:	and	x9, x9, #0xfffff000
  40f2ec:	bfxil	x9, x8, #8, #12
  40f2f0:	cbz	x9, 40f350 <event_queue_start+0x2bc>
  40f2f4:	ldr	x0, [x22, #24]
  40f2f8:	add	x1, sp, #0x40
  40f2fc:	bl	40a850 <sd_device_get_subsystem@plt>
  40f300:	tbnz	w0, #31, 40f404 <event_queue_start+0x370>
  40f304:	ldr	x0, [x22, #24]
  40f308:	add	x1, sp, #0x38
  40f30c:	bl	40aa60 <sd_device_get_devnum@plt>
  40f310:	tbnz	w0, #31, 40f350 <event_queue_start+0x2bc>
  40f314:	ldur	x8, [x29, #-24]
  40f318:	ldr	x9, [sp, #56]
  40f31c:	cmp	x8, x9
  40f320:	b.ne	40f350 <event_queue_start+0x2bc>  // b.any
  40f324:	ldr	w8, [sp, #36]
  40f328:	ldr	x0, [sp, #64]
  40f32c:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  40f330:	add	x1, x1, #0x1ad
  40f334:	cmp	w8, #0x0
  40f338:	cset	w23, ne  // ne = any
  40f33c:	bl	40a930 <strcmp@plt>
  40f340:	cmp	w0, #0x0
  40f344:	cset	w8, eq  // eq = none
  40f348:	eor	w8, w23, w8
  40f34c:	tbnz	w8, #0, 40f778 <event_queue_start+0x6e4>
  40f350:	ldur	w8, [x29, #-44]
  40f354:	cmp	w8, #0x1
  40f358:	b.lt	40f37c <event_queue_start+0x2e8>  // b.tstop
  40f35c:	ldr	x0, [x22, #24]
  40f360:	add	x1, sp, #0x40
  40f364:	bl	40aa70 <sd_device_get_ifindex@plt>
  40f368:	tbnz	w0, #31, 40f37c <event_queue_start+0x2e8>
  40f36c:	ldur	w8, [x29, #-44]
  40f370:	ldr	w9, [sp, #64]
  40f374:	cmp	w8, w9
  40f378:	b.eq	40f76c <event_queue_start+0x6d8>  // b.none
  40f37c:	ldr	x0, [x22, #24]
  40f380:	sub	x1, x29, #0x38
  40f384:	bl	40aa30 <sd_device_get_devpath@plt>
  40f388:	tbnz	w0, #31, 40f3f8 <event_queue_start+0x364>
  40f38c:	ldur	x0, [x29, #-16]
  40f390:	ldur	x24, [x29, #-56]
  40f394:	cbz	x0, 40f3a4 <event_queue_start+0x310>
  40f398:	mov	x1, x24
  40f39c:	bl	40a930 <strcmp@plt>
  40f3a0:	cbz	w0, 40f76c <event_queue_start+0x6d8>
  40f3a4:	mov	x0, x24
  40f3a8:	bl	40aa40 <strlen@plt>
  40f3ac:	ldr	x8, [sp, #40]
  40f3b0:	ldur	x28, [x29, #-8]
  40f3b4:	mov	x23, x0
  40f3b8:	mov	x1, x24
  40f3bc:	cmp	x8, x0
  40f3c0:	csel	x27, x8, x0, cc  // cc = lo, ul, last
  40f3c4:	mov	x0, x28
  40f3c8:	mov	x2, x27
  40f3cc:	bl	40a6a0 <strncmp@plt>
  40f3d0:	cbnz	w0, 40f3f8 <event_queue_start+0x364>
  40f3d4:	ldr	x8, [sp, #40]
  40f3d8:	cmp	x8, x23
  40f3dc:	b.eq	40f76c <event_queue_start+0x6d8>  // b.none
  40f3e0:	ldrb	w8, [x28, x27]
  40f3e4:	cmp	w8, #0x2f
  40f3e8:	b.eq	40f76c <event_queue_start+0x6d8>  // b.none
  40f3ec:	ldrb	w8, [x24, x27]
  40f3f0:	cmp	w8, #0x2f
  40f3f4:	b.eq	40f76c <event_queue_start+0x6d8>  // b.none
  40f3f8:	adrp	x28, 435000 <worker_hash_op+0xdf8>
  40f3fc:	mov	x27, x26
  40f400:	add	x28, x28, #0x1c5
  40f404:	ldr	x22, [x22, #72]
  40f408:	adrp	x26, 434000 <__libc_csu_init+0x60>
  40f40c:	mov	w0, wzr
  40f410:	mov	x23, x25
  40f414:	add	x26, x26, #0x22b
  40f418:	cbnz	x22, 40f2ac <event_queue_start+0x218>
  40f41c:	b	40f1e4 <event_queue_start+0x150>
  40f420:	mov	w8, #0xfffffffe            	// #-2
  40f424:	stur	w8, [x29, #-40]
  40f428:	stur	xzr, [x29, #-32]
  40f42c:	ldr	x0, [x21]
  40f430:	sub	x1, x29, #0x28
  40f434:	sub	x2, x29, #0x18
  40f438:	mov	x3, xzr
  40f43c:	bl	40a7b0 <internal_hashmap_iterate@plt>
  40f440:	tbz	w0, #0, 40f4f0 <event_queue_start+0x45c>
  40f444:	ldur	x8, [x29, #-24]
  40f448:	ldr	w9, [x8, #24]
  40f44c:	cmp	w9, #0x2
  40f450:	b.ne	40f42c <event_queue_start+0x398>  // b.any
  40f454:	ldr	x0, [x19, #64]
  40f458:	ldr	x1, [x8, #16]
  40f45c:	ldr	x2, [x20, #24]
  40f460:	bl	40a760 <device_monitor_send_device@plt>
  40f464:	tbz	w0, #31, 40f6a8 <event_queue_start+0x614>
  40f468:	stur	xzr, [x29, #-8]
  40f46c:	ldr	x25, [x20, #24]
  40f470:	mov	w24, w0
  40f474:	cbz	x25, 40f488 <event_queue_start+0x3f4>
  40f478:	mov	w0, #0x1                   	// #1
  40f47c:	bl	40a2c0 <log_get_max_level_realm@plt>
  40f480:	cmp	w0, #0x3
  40f484:	b.ge	40f4dc <event_queue_start+0x448>  // b.tcont
  40f488:	mov	x6, xzr
  40f48c:	ldur	x8, [x29, #-24]
  40f490:	cmp	x6, #0x0
  40f494:	csel	x5, xzr, x27, eq  // eq = none
  40f498:	mov	w0, #0x3                   	// #3
  40f49c:	ldr	w8, [x8, #8]
  40f4a0:	mov	w3, #0x239                 	// #569
  40f4a4:	mov	w1, w24
  40f4a8:	mov	x2, x26
  40f4ac:	mov	x4, x28
  40f4b0:	mov	x7, xzr
  40f4b4:	str	w8, [sp, #16]
  40f4b8:	stp	xzr, x23, [sp]
  40f4bc:	bl	40a730 <log_object_internal@plt>
  40f4c0:	ldur	x8, [x29, #-24]
  40f4c4:	mov	w1, #0x9                   	// #9
  40f4c8:	ldr	w0, [x8, #8]
  40f4cc:	bl	40a7c0 <kill@plt>
  40f4d0:	ldur	x8, [x29, #-24]
  40f4d4:	str	w22, [x8, #24]
  40f4d8:	b	40f42c <event_queue_start+0x398>
  40f4dc:	sub	x1, x29, #0x8
  40f4e0:	mov	x0, x25
  40f4e4:	bl	40a780 <sd_device_get_sysname@plt>
  40f4e8:	ldur	x6, [x29, #-8]
  40f4ec:	b	40f48c <event_queue_start+0x3f8>
  40f4f0:	ldr	x0, [x21]
  40f4f4:	bl	40a790 <internal_hashmap_size@plt>
  40f4f8:	adrp	x8, 470000 <arg_resolve_name_timing>
  40f4fc:	ldr	w8, [x8, #40]
  40f500:	cmp	w0, w8
  40f504:	b.cs	40f64c <event_queue_start+0x5b8>  // b.hs, b.nlast
  40f508:	adrp	x8, 470000 <arg_resolve_name_timing>
  40f50c:	sub	x0, x29, #0x8
  40f510:	mov	w2, #0xffffffff            	// #-1
  40f514:	mov	w1, wzr
  40f518:	strb	wzr, [x8, #37]
  40f51c:	stur	xzr, [x29, #-8]
  40f520:	bl	40a4a0 <device_monitor_new_full@plt>
  40f524:	tbnz	w0, #31, 40f830 <event_queue_start+0x79c>
  40f528:	ldur	x0, [x29, #-8]
  40f52c:	ldr	x1, [x19, #64]
  40f530:	bl	40aa80 <device_monitor_allow_unicast_sender@plt>
  40f534:	tbnz	w0, #31, 40f6b8 <event_queue_start+0x624>
  40f538:	ldur	x0, [x29, #-8]
  40f53c:	bl	40a4c0 <device_monitor_enable_receiving@plt>
  40f540:	tbnz	w0, #31, 40f6f0 <event_queue_start+0x65c>
  40f544:	sub	x4, x29, #0x38
  40f548:	mov	w3, #0x4                   	// #4
  40f54c:	mov	x0, xzr
  40f550:	mov	x1, xzr
  40f554:	mov	x2, xzr
  40f558:	bl	40aa90 <safe_fork_full@plt>
  40f55c:	mov	w24, w0
  40f560:	tbnz	w0, #31, 40f728 <event_queue_start+0x694>
  40f564:	ldur	x28, [x29, #-8]
  40f568:	cbz	w24, 40f8c0 <event_queue_start+0x82c>
  40f56c:	cbz	x28, 40f8e8 <event_queue_start+0x854>
  40f570:	ldur	w24, [x29, #-56]
  40f574:	cmp	w24, #0x1
  40f578:	b.le	40f90c <event_queue_start+0x878>
  40f57c:	mov	x0, x28
  40f580:	bl	40aaa0 <device_monitor_disconnect@plt>
  40f584:	mov	w0, #0x28                  	// #40
  40f588:	bl	40a490 <malloc@plt>
  40f58c:	cbz	x0, 40f764 <event_queue_start+0x6d0>
  40f590:	mov	x25, x0
  40f594:	mov	x0, x28
  40f598:	bl	40aab0 <sd_device_monitor_ref@plt>
  40f59c:	adrp	x1, 434000 <__libc_csu_init+0x60>
  40f5a0:	str	x0, [x25, #16]
  40f5a4:	mov	x0, x21
  40f5a8:	add	x1, x1, #0x208
  40f5ac:	str	x19, [x25]
  40f5b0:	str	w24, [x25, #8]
  40f5b4:	str	wzr, [x25, #24]
  40f5b8:	str	xzr, [x25, #32]
  40f5bc:	bl	40a800 <internal_hashmap_ensure_allocated@plt>
  40f5c0:	tbnz	w0, #31, 40f7bc <event_queue_start+0x728>
  40f5c4:	ldr	x0, [x21]
  40f5c8:	mov	x1, x24
  40f5cc:	mov	x2, x25
  40f5d0:	bl	40a820 <hashmap_put@plt>
  40f5d4:	tbnz	w0, #31, 40f7c8 <event_queue_start+0x734>
  40f5d8:	mov	x0, x25
  40f5dc:	mov	x1, x20
  40f5e0:	bl	40f978 <worker_attach_event>
  40f5e4:	stur	xzr, [x29, #-16]
  40f5e8:	ldr	x24, [x20, #24]
  40f5ec:	cbz	x24, 40f600 <event_queue_start+0x56c>
  40f5f0:	mov	w0, #0x1                   	// #1
  40f5f4:	bl	40a2c0 <log_get_max_level_realm@plt>
  40f5f8:	cmp	w0, #0x7
  40f5fc:	b.ge	40f848 <event_queue_start+0x7b4>  // b.tcont
  40f600:	mov	x6, xzr
  40f604:	ldur	w8, [x29, #-56]
  40f608:	ldr	x9, [x20, #40]
  40f60c:	cmp	x6, #0x0
  40f610:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  40f614:	str	w8, [sp, #16]
  40f618:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  40f61c:	csel	x5, xzr, x27, eq  // eq = none
  40f620:	add	x8, x8, #0x47a
  40f624:	mov	w0, #0x7                   	// #7
  40f628:	mov	w3, #0x225                 	// #549
  40f62c:	mov	w1, wzr
  40f630:	mov	x2, x26
  40f634:	add	x4, x4, #0x3d4
  40f638:	mov	x7, xzr
  40f63c:	str	x9, [sp, #24]
  40f640:	stp	xzr, x8, [sp]
  40f644:	bl	40a730 <log_object_internal@plt>
  40f648:	b	40f830 <event_queue_start+0x79c>
  40f64c:	cmp	w8, #0x2
  40f650:	b.cc	40f1ec <event_queue_start+0x158>  // b.lo, b.ul, b.last
  40f654:	adrp	x8, 470000 <arg_resolve_name_timing>
  40f658:	ldrb	w8, [x8, #37]
  40f65c:	cbnz	w8, 40f1ec <event_queue_start+0x158>
  40f660:	mov	w24, w0
  40f664:	mov	w0, #0x1                   	// #1
  40f668:	bl	40a2c0 <log_get_max_level_realm@plt>
  40f66c:	cmp	w0, #0x7
  40f670:	b.lt	40f698 <event_queue_start+0x604>  // b.tstop
  40f674:	adrp	x5, 435000 <worker_hash_op+0xdf8>
  40f678:	mov	w0, #0x407                 	// #1031
  40f67c:	mov	w3, #0x247                 	// #583
  40f680:	mov	w1, wzr
  40f684:	mov	x2, x26
  40f688:	mov	x4, x28
  40f68c:	add	x5, x5, #0x20a
  40f690:	mov	w6, w24
  40f694:	bl	40a2d0 <log_internal_realm@plt>
  40f698:	mov	w8, #0x1                   	// #1
  40f69c:	adrp	x9, 470000 <arg_resolve_name_timing>
  40f6a0:	strb	w8, [x9, #37]
  40f6a4:	b	40f1ec <event_queue_start+0x158>
  40f6a8:	ldur	x0, [x29, #-24]
  40f6ac:	mov	x1, x20
  40f6b0:	bl	40f978 <worker_attach_event>
  40f6b4:	b	40f1ec <event_queue_start+0x158>
  40f6b8:	mov	w24, w0
  40f6bc:	mov	w0, #0x1                   	// #1
  40f6c0:	bl	40a2c0 <log_get_max_level_realm@plt>
  40f6c4:	cmp	w0, #0x3
  40f6c8:	b.lt	40f830 <event_queue_start+0x79c>  // b.tstop
  40f6cc:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  40f6d0:	adrp	x5, 435000 <worker_hash_op+0xdf8>
  40f6d4:	mov	w0, #0x403                 	// #1027
  40f6d8:	mov	w3, #0x20d                 	// #525
  40f6dc:	mov	w1, w24
  40f6e0:	mov	x2, x26
  40f6e4:	add	x4, x4, #0x3d4
  40f6e8:	add	x5, x5, #0x3e1
  40f6ec:	b	40f82c <event_queue_start+0x798>
  40f6f0:	mov	w24, w0
  40f6f4:	mov	w0, #0x1                   	// #1
  40f6f8:	bl	40a2c0 <log_get_max_level_realm@plt>
  40f6fc:	cmp	w0, #0x3
  40f700:	b.lt	40f830 <event_queue_start+0x79c>  // b.tstop
  40f704:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  40f708:	adrp	x5, 435000 <worker_hash_op+0xdf8>
  40f70c:	mov	w0, #0x403                 	// #1027
  40f710:	mov	w3, #0x211                 	// #529
  40f714:	mov	w1, w24
  40f718:	mov	x2, x26
  40f71c:	add	x4, x4, #0x3d4
  40f720:	add	x5, x5, #0x40a
  40f724:	b	40f82c <event_queue_start+0x798>
  40f728:	mov	w8, #0x1                   	// #1
  40f72c:	mov	w0, #0x1                   	// #1
  40f730:	str	w8, [x20, #16]
  40f734:	bl	40a2c0 <log_get_max_level_realm@plt>
  40f738:	cmp	w0, #0x3
  40f73c:	b.lt	40f830 <event_queue_start+0x79c>  // b.tstop
  40f740:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  40f744:	adrp	x5, 435000 <worker_hash_op+0xdf8>
  40f748:	mov	w0, #0x403                 	// #1027
  40f74c:	mov	w3, #0x216                 	// #534
  40f750:	mov	w1, w24
  40f754:	mov	x2, x26
  40f758:	add	x4, x4, #0x3d4
  40f75c:	add	x5, x5, #0x43b
  40f760:	b	40f82c <event_queue_start+0x798>
  40f764:	mov	w28, #0xfffffff4            	// #-12
  40f768:	b	40f7fc <event_queue_start+0x768>
  40f76c:	adrp	x28, 435000 <worker_hash_op+0xdf8>
  40f770:	mov	x27, x26
  40f774:	add	x28, x28, #0x1c5
  40f778:	ldr	x8, [x22, #40]
  40f77c:	mov	w0, #0x1                   	// #1
  40f780:	str	x8, [x20, #48]
  40f784:	b	40f7ac <event_queue_start+0x718>
  40f788:	mov	x27, x26
  40f78c:	adrp	x26, 434000 <__libc_csu_init+0x60>
  40f790:	adrp	x28, 435000 <worker_hash_op+0xdf8>
  40f794:	mov	w0, #0x1                   	// #1
  40f798:	mov	x23, x25
  40f79c:	add	x26, x26, #0x22b
  40f7a0:	add	x28, x28, #0x1c5
  40f7a4:	b	40f1e4 <event_queue_start+0x150>
  40f7a8:	mov	w0, wzr
  40f7ac:	adrp	x26, 434000 <__libc_csu_init+0x60>
  40f7b0:	mov	x23, x25
  40f7b4:	add	x26, x26, #0x22b
  40f7b8:	b	40f1e4 <event_queue_start+0x150>
  40f7bc:	mov	w28, w0
  40f7c0:	mov	x8, x19
  40f7c4:	b	40f7d8 <event_queue_start+0x744>
  40f7c8:	ldr	x8, [x25]
  40f7cc:	cbz	x8, 40f930 <event_queue_start+0x89c>
  40f7d0:	ldr	w24, [x25, #8]
  40f7d4:	mov	w28, w0
  40f7d8:	ldr	x0, [x8, #8]
  40f7dc:	sxtw	x1, w24
  40f7e0:	bl	40a770 <internal_hashmap_remove@plt>
  40f7e4:	ldr	x0, [x25, #16]
  40f7e8:	bl	40a6d0 <sd_device_monitor_unref@plt>
  40f7ec:	ldr	x0, [x25, #32]
  40f7f0:	bl	40d658 <event_free>
  40f7f4:	mov	x0, x25
  40f7f8:	bl	40a320 <free@plt>
  40f7fc:	mov	w0, #0x1                   	// #1
  40f800:	bl	40a2c0 <log_get_max_level_realm@plt>
  40f804:	cmp	w0, #0x3
  40f808:	b.lt	40f830 <event_queue_start+0x79c>  // b.tstop
  40f80c:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  40f810:	adrp	x5, 435000 <worker_hash_op+0xdf8>
  40f814:	mov	w0, #0x403                 	// #1027
  40f818:	mov	w3, #0x221                 	// #545
  40f81c:	mov	w1, w28
  40f820:	mov	x2, x26
  40f824:	add	x4, x4, #0x3d4
  40f828:	add	x5, x5, #0x457
  40f82c:	bl	40a2d0 <log_internal_realm@plt>
  40f830:	ldur	x0, [x29, #-8]
  40f834:	cbz	x0, 40f83c <event_queue_start+0x7a8>
  40f838:	bl	40a6d0 <sd_device_monitor_unref@plt>
  40f83c:	adrp	x28, 435000 <worker_hash_op+0xdf8>
  40f840:	add	x28, x28, #0x1c5
  40f844:	b	40f1ec <event_queue_start+0x158>
  40f848:	sub	x1, x29, #0x10
  40f84c:	mov	x0, x24
  40f850:	bl	40a780 <sd_device_get_sysname@plt>
  40f854:	ldur	x6, [x29, #-16]
  40f858:	b	40f604 <event_queue_start+0x570>
  40f85c:	mov	w20, w0
  40f860:	mov	w0, #0x1                   	// #1
  40f864:	bl	40a2c0 <log_get_max_level_realm@plt>
  40f868:	cmp	w0, #0x4
  40f86c:	b.lt	40f0d0 <event_queue_start+0x3c>  // b.tstop
  40f870:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40f874:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  40f878:	adrp	x5, 434000 <__libc_csu_init+0x60>
  40f87c:	add	x2, x2, #0x22b
  40f880:	add	x4, x4, #0x19b
  40f884:	add	x5, x5, #0xd72
  40f888:	mov	w0, #0x404                 	// #1028
  40f88c:	mov	w3, #0x35b                 	// #859
  40f890:	mov	w1, w20
  40f894:	bl	40a2d0 <log_internal_realm@plt>
  40f898:	b	40f0d0 <event_queue_start+0x3c>
  40f89c:	adrp	x1, 434000 <__libc_csu_init+0x60>
  40f8a0:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40f8a4:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  40f8a8:	add	x1, x1, #0x3fe
  40f8ac:	add	x2, x2, #0x22b
  40f8b0:	add	x4, x4, #0x13f
  40f8b4:	mov	w0, #0x1                   	// #1
  40f8b8:	mov	w3, #0x341                 	// #833
  40f8bc:	bl	40a630 <log_assert_failed_realm@plt>
  40f8c0:	ldr	x0, [x20, #24]
  40f8c4:	bl	40a9a0 <sd_device_ref@plt>
  40f8c8:	mov	x2, x0
  40f8cc:	mov	x0, x19
  40f8d0:	mov	x1, x28
  40f8d4:	bl	40fd74 <worker_main>
  40f8d8:	mov	w19, w0
  40f8dc:	bl	40aac0 <log_close@plt>
  40f8e0:	lsr	w0, w19, #31
  40f8e4:	bl	40aad0 <_exit@plt>
  40f8e8:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  40f8ec:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40f8f0:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  40f8f4:	add	x1, x1, #0x8c4
  40f8f8:	add	x2, x2, #0x22b
  40f8fc:	add	x4, x4, #0x87c
  40f900:	mov	w0, #0x1                   	// #1
  40f904:	mov	w3, #0xc3                  	// #195
  40f908:	bl	40a630 <log_assert_failed_realm@plt>
  40f90c:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  40f910:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40f914:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  40f918:	add	x1, x1, #0x8d3
  40f91c:	add	x2, x2, #0x22b
  40f920:	add	x4, x4, #0x87c
  40f924:	mov	w0, #0x1                   	// #1
  40f928:	mov	w3, #0xc4                  	// #196
  40f92c:	bl	40a630 <log_assert_failed_realm@plt>
  40f930:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  40f934:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40f938:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  40f93c:	add	x1, x1, #0x10d
  40f940:	add	x2, x2, #0x22b
  40f944:	add	x4, x4, #0x11d
  40f948:	mov	w0, #0x1                   	// #1
  40f94c:	mov	w3, #0xb1                  	// #177
  40f950:	bl	40a630 <log_assert_failed_realm@plt>
  40f954:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  40f958:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40f95c:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  40f960:	add	x1, x1, #0x161
  40f964:	add	x2, x2, #0x22b
  40f968:	add	x4, x4, #0x13f
  40f96c:	mov	w0, #0x1                   	// #1
  40f970:	mov	w3, #0x347                 	// #839
  40f974:	bl	40a630 <log_assert_failed_realm@plt>

000000000040f978 <worker_attach_event>:
  40f978:	stp	x29, x30, [sp, #-48]!
  40f97c:	str	x21, [sp, #16]
  40f980:	stp	x20, x19, [sp, #32]
  40f984:	mov	x29, sp
  40f988:	cbz	x0, 40fa6c <worker_attach_event+0xf4>
  40f98c:	ldr	x8, [x0]
  40f990:	cbz	x8, 40fa90 <worker_attach_event+0x118>
  40f994:	mov	x19, x1
  40f998:	cbz	x1, 40fab4 <worker_attach_event+0x13c>
  40f99c:	ldr	x9, [x19, #8]
  40f9a0:	cbnz	x9, 40fad8 <worker_attach_event+0x160>
  40f9a4:	ldr	x9, [x0, #32]
  40f9a8:	cbnz	x9, 40fafc <worker_attach_event+0x184>
  40f9ac:	mov	w9, #0x1                   	// #1
  40f9b0:	mov	w10, #0x2                   	// #2
  40f9b4:	str	x19, [x0, #32]
  40f9b8:	str	w9, [x0, #24]
  40f9bc:	str	w10, [x19, #16]
  40f9c0:	str	x0, [x19, #8]
  40f9c4:	ldr	x20, [x8]
  40f9c8:	add	x2, x29, #0x18
  40f9cc:	mov	w1, #0x1                   	// #1
  40f9d0:	mov	x0, x20
  40f9d4:	bl	40aa20 <sd_event_now@plt>
  40f9d8:	tbnz	w0, #31, 40fb20 <worker_attach_event+0x1a8>
  40f9dc:	adrp	x21, 470000 <arg_resolve_name_timing>
  40f9e0:	ldr	x8, [x21, #8]
  40f9e4:	mov	x10, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  40f9e8:	ldr	x9, [x29, #24]
  40f9ec:	movk	x10, #0xaaab
  40f9f0:	umulh	x10, x8, x10
  40f9f4:	lsr	x10, x10, #1
  40f9f8:	add	x11, x10, x10, lsl #1
  40f9fc:	cmp	x8, x11
  40fa00:	add	x8, x10, x9
  40fa04:	adrp	x5, 40f000 <manager_reload+0x58>
  40fa08:	mov	w4, #0x4240                	// #16960
  40fa0c:	add	x1, x19, #0x38
  40fa10:	cinc	x3, x8, ne  // ne = any
  40fa14:	add	x5, x5, #0xb44
  40fa18:	mov	w2, #0x1                   	// #1
  40fa1c:	movk	w4, #0xf, lsl #16
  40fa20:	mov	x0, x20
  40fa24:	mov	x6, x19
  40fa28:	bl	40aae0 <sd_event_add_time@plt>
  40fa2c:	ldr	x8, [x29, #24]
  40fa30:	ldr	x9, [x21, #8]
  40fa34:	adrp	x5, 40f000 <manager_reload+0x58>
  40fa38:	mov	w4, #0x4240                	// #16960
  40fa3c:	add	x1, x19, #0x40
  40fa40:	add	x3, x9, x8
  40fa44:	add	x5, x5, #0xc50
  40fa48:	mov	w2, #0x1                   	// #1
  40fa4c:	movk	w4, #0xf, lsl #16
  40fa50:	mov	x0, x20
  40fa54:	mov	x6, x19
  40fa58:	bl	40aae0 <sd_event_add_time@plt>
  40fa5c:	ldp	x20, x19, [sp, #32]
  40fa60:	ldr	x21, [sp, #16]
  40fa64:	ldp	x29, x30, [sp], #48
  40fa68:	ret
  40fa6c:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  40fa70:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40fa74:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  40fa78:	add	x1, x1, #0x233
  40fa7c:	add	x2, x2, #0x22b
  40fa80:	add	x4, x4, #0x23a
  40fa84:	mov	w0, #0x1                   	// #1
  40fa88:	mov	w3, #0xfd                  	// #253
  40fa8c:	bl	40a630 <log_assert_failed_realm@plt>
  40fa90:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  40fa94:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40fa98:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  40fa9c:	add	x1, x1, #0x10d
  40faa0:	add	x2, x2, #0x22b
  40faa4:	add	x4, x4, #0x23a
  40faa8:	mov	w0, #0x1                   	// #1
  40faac:	mov	w3, #0xfe                  	// #254
  40fab0:	bl	40a630 <log_assert_failed_realm@plt>
  40fab4:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  40fab8:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40fabc:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  40fac0:	add	x1, x1, #0x1bf
  40fac4:	add	x2, x2, #0x22b
  40fac8:	add	x4, x4, #0x23a
  40facc:	mov	w0, #0x1                   	// #1
  40fad0:	mov	w3, #0xff                  	// #255
  40fad4:	bl	40a630 <log_assert_failed_realm@plt>
  40fad8:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  40fadc:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40fae0:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  40fae4:	add	x1, x1, #0x274
  40fae8:	add	x2, x2, #0x22b
  40faec:	add	x4, x4, #0x23a
  40faf0:	mov	w0, #0x1                   	// #1
  40faf4:	mov	w3, #0x100                 	// #256
  40faf8:	bl	40a630 <log_assert_failed_realm@plt>
  40fafc:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  40fb00:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40fb04:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  40fb08:	add	x1, x1, #0x283
  40fb0c:	add	x2, x2, #0x22b
  40fb10:	add	x4, x4, #0x23a
  40fb14:	mov	w0, #0x1                   	// #1
  40fb18:	mov	w3, #0x101                 	// #257
  40fb1c:	bl	40a630 <log_assert_failed_realm@plt>
  40fb20:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  40fb24:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40fb28:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  40fb2c:	add	x1, x1, #0x292
  40fb30:	add	x2, x2, #0x22b
  40fb34:	add	x4, x4, #0x23a
  40fb38:	mov	w0, #0x1                   	// #1
  40fb3c:	mov	w3, #0x10a                 	// #266
  40fb40:	bl	40a630 <log_assert_failed_realm@plt>

000000000040fb44 <on_event_timeout_warning>:
  40fb44:	sub	sp, sp, #0x50
  40fb48:	stp	x29, x30, [sp, #32]
  40fb4c:	str	x21, [sp, #48]
  40fb50:	stp	x20, x19, [sp, #64]
  40fb54:	add	x29, sp, #0x20
  40fb58:	cbz	x2, 40fc08 <on_event_timeout_warning+0xc4>
  40fb5c:	ldr	x21, [x2, #8]
  40fb60:	mov	x19, x2
  40fb64:	cbz	x21, 40fc2c <on_event_timeout_warning+0xe8>
  40fb68:	str	xzr, [x29, #24]
  40fb6c:	ldr	x20, [x19, #24]
  40fb70:	cbz	x20, 40fb84 <on_event_timeout_warning+0x40>
  40fb74:	mov	w0, #0x1                   	// #1
  40fb78:	bl	40a2c0 <log_get_max_level_realm@plt>
  40fb7c:	cmp	w0, #0x4
  40fb80:	b.ge	40fbf0 <on_event_timeout_warning+0xac>  // b.tcont
  40fb84:	mov	x6, xzr
  40fb88:	ldr	w8, [x21, #8]
  40fb8c:	ldr	x9, [x19, #40]
  40fb90:	adrp	x10, 435000 <worker_hash_op+0xdf8>
  40fb94:	add	x10, x10, #0x7f
  40fb98:	cmp	x6, #0x0
  40fb9c:	str	w8, [sp, #16]
  40fba0:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  40fba4:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40fba8:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  40fbac:	csel	x5, xzr, x10, eq  // eq = none
  40fbb0:	add	x8, x8, #0x328
  40fbb4:	add	x2, x2, #0x22b
  40fbb8:	add	x4, x4, #0x30f
  40fbbc:	mov	w0, #0x4                   	// #4
  40fbc0:	mov	w3, #0xf4                  	// #244
  40fbc4:	mov	w1, wzr
  40fbc8:	mov	x7, xzr
  40fbcc:	str	x9, [sp, #24]
  40fbd0:	stp	xzr, x8, [sp]
  40fbd4:	bl	40a730 <log_object_internal@plt>
  40fbd8:	ldp	x20, x19, [sp, #64]
  40fbdc:	ldr	x21, [sp, #48]
  40fbe0:	ldp	x29, x30, [sp, #32]
  40fbe4:	mov	w0, #0x1                   	// #1
  40fbe8:	add	sp, sp, #0x50
  40fbec:	ret
  40fbf0:	add	x1, x29, #0x18
  40fbf4:	mov	x0, x20
  40fbf8:	bl	40a780 <sd_device_get_sysname@plt>
  40fbfc:	ldr	x6, [x29, #24]
  40fc00:	ldr	x21, [x19, #8]
  40fc04:	b	40fb88 <on_event_timeout_warning+0x44>
  40fc08:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  40fc0c:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40fc10:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  40fc14:	add	x1, x1, #0x1bf
  40fc18:	add	x2, x2, #0x22b
  40fc1c:	add	x4, x4, #0x2bf
  40fc20:	mov	w0, #0x1                   	// #1
  40fc24:	mov	w3, #0xf1                  	// #241
  40fc28:	bl	40a630 <log_assert_failed_realm@plt>
  40fc2c:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  40fc30:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40fc34:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  40fc38:	add	x1, x1, #0x301
  40fc3c:	add	x2, x2, #0x22b
  40fc40:	add	x4, x4, #0x2bf
  40fc44:	mov	w0, #0x1                   	// #1
  40fc48:	mov	w3, #0xf2                  	// #242
  40fc4c:	bl	40a630 <log_assert_failed_realm@plt>

000000000040fc50 <on_event_timeout>:
  40fc50:	sub	sp, sp, #0x50
  40fc54:	stp	x29, x30, [sp, #32]
  40fc58:	str	x21, [sp, #48]
  40fc5c:	stp	x20, x19, [sp, #64]
  40fc60:	add	x29, sp, #0x20
  40fc64:	cbz	x2, 40fd2c <on_event_timeout+0xdc>
  40fc68:	ldr	x8, [x2, #8]
  40fc6c:	mov	x19, x2
  40fc70:	cbz	x8, 40fd50 <on_event_timeout+0x100>
  40fc74:	ldr	w0, [x8, #8]
  40fc78:	mov	w1, #0x9                   	// #9
  40fc7c:	bl	40aaf0 <kill_and_sigcont@plt>
  40fc80:	ldr	x21, [x19, #8]
  40fc84:	mov	w8, #0x3                   	// #3
  40fc88:	str	w8, [x21, #24]
  40fc8c:	str	xzr, [x29, #24]
  40fc90:	ldr	x20, [x19, #24]
  40fc94:	cbz	x20, 40fca8 <on_event_timeout+0x58>
  40fc98:	mov	w0, #0x1                   	// #1
  40fc9c:	bl	40a2c0 <log_get_max_level_realm@plt>
  40fca0:	cmp	w0, #0x3
  40fca4:	b.ge	40fd14 <on_event_timeout+0xc4>  // b.tcont
  40fca8:	mov	x6, xzr
  40fcac:	ldr	w8, [x21, #8]
  40fcb0:	ldr	x9, [x19, #40]
  40fcb4:	adrp	x10, 435000 <worker_hash_op+0xdf8>
  40fcb8:	add	x10, x10, #0x7f
  40fcbc:	cmp	x6, #0x0
  40fcc0:	str	w8, [sp, #16]
  40fcc4:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  40fcc8:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40fccc:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  40fcd0:	csel	x5, xzr, x10, eq  // eq = none
  40fcd4:	add	x8, x8, #0x3ab
  40fcd8:	add	x2, x2, #0x22b
  40fcdc:	add	x4, x4, #0x39a
  40fce0:	mov	w0, #0x3                   	// #3
  40fce4:	mov	w3, #0xe9                  	// #233
  40fce8:	mov	w1, wzr
  40fcec:	mov	x7, xzr
  40fcf0:	str	x9, [sp, #24]
  40fcf4:	stp	xzr, x8, [sp]
  40fcf8:	bl	40a730 <log_object_internal@plt>
  40fcfc:	ldp	x20, x19, [sp, #64]
  40fd00:	ldr	x21, [sp, #48]
  40fd04:	ldp	x29, x30, [sp, #32]
  40fd08:	mov	w0, #0x1                   	// #1
  40fd0c:	add	sp, sp, #0x50
  40fd10:	ret
  40fd14:	add	x1, x29, #0x18
  40fd18:	mov	x0, x20
  40fd1c:	bl	40a780 <sd_device_get_sysname@plt>
  40fd20:	ldr	x6, [x29, #24]
  40fd24:	ldr	x21, [x19, #8]
  40fd28:	b	40fcac <on_event_timeout+0x5c>
  40fd2c:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  40fd30:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40fd34:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  40fd38:	add	x1, x1, #0x1bf
  40fd3c:	add	x2, x2, #0x22b
  40fd40:	add	x4, x4, #0x360
  40fd44:	mov	w0, #0x1                   	// #1
  40fd48:	mov	w3, #0xe3                  	// #227
  40fd4c:	bl	40a630 <log_assert_failed_realm@plt>
  40fd50:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  40fd54:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40fd58:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  40fd5c:	add	x1, x1, #0x301
  40fd60:	add	x2, x2, #0x22b
  40fd64:	add	x4, x4, #0x360
  40fd68:	mov	w0, #0x1                   	// #1
  40fd6c:	mov	w3, #0xe4                  	// #228
  40fd70:	bl	40a630 <log_assert_failed_realm@plt>

000000000040fd74 <worker_main>:
  40fd74:	stp	x29, x30, [sp, #-48]!
  40fd78:	stp	x22, x21, [sp, #16]
  40fd7c:	stp	x20, x19, [sp, #32]
  40fd80:	mov	x29, sp
  40fd84:	cbz	x0, 40fffc <worker_main+0x288>
  40fd88:	mov	x21, x1
  40fd8c:	cbz	x1, 410020 <worker_main+0x2ac>
  40fd90:	mov	x19, x2
  40fd94:	cbz	x2, 410044 <worker_main+0x2d0>
  40fd98:	mov	x20, x0
  40fd9c:	adrp	x0, 435000 <worker_hash_op+0xdf8>
  40fda0:	add	x0, x0, #0x4f4
  40fda4:	bl	40ab00 <unsetenv@plt>
  40fda8:	mov	w2, #0xf                   	// #15
  40fdac:	mov	w3, #0xffffffff            	// #-1
  40fdb0:	mov	w0, wzr
  40fdb4:	mov	x1, xzr
  40fdb8:	bl	40a540 <sigprocmask_many@plt>
  40fdbc:	tbnz	w0, #31, 410068 <worker_main+0x2f4>
  40fdc0:	mov	w0, wzr
  40fdc4:	bl	40a500 <set_oom_score_adjust@plt>
  40fdc8:	tbz	w0, #31, 40fe08 <worker_main+0x94>
  40fdcc:	mov	w22, w0
  40fdd0:	mov	w0, #0x1                   	// #1
  40fdd4:	bl	40a2c0 <log_get_max_level_realm@plt>
  40fdd8:	cmp	w0, #0x7
  40fddc:	b.lt	40fe08 <worker_main+0x94>  // b.tstop
  40fde0:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40fde4:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  40fde8:	adrp	x5, 435000 <worker_hash_op+0xdf8>
  40fdec:	add	x2, x2, #0x22b
  40fdf0:	add	x4, x4, #0x536
  40fdf4:	add	x5, x5, #0x542
  40fdf8:	mov	w0, #0x407                 	// #1031
  40fdfc:	mov	w3, #0x1de                 	// #478
  40fe00:	mov	w1, w22
  40fe04:	bl	40a2d0 <log_internal_realm@plt>
  40fe08:	mov	x0, x20
  40fe0c:	bl	40d588 <manager_clear_for_worker>
  40fe10:	mov	x0, x20
  40fe14:	bl	40ab10 <sd_event_new@plt>
  40fe18:	tbnz	w0, #31, 40fe98 <worker_main+0x124>
  40fe1c:	ldr	x0, [x20]
  40fe20:	mov	w2, #0xf                   	// #15
  40fe24:	mov	x1, xzr
  40fe28:	mov	x3, xzr
  40fe2c:	mov	x4, xzr
  40fe30:	bl	40a560 <sd_event_add_signal@plt>
  40fe34:	tbnz	w0, #31, 40fed0 <worker_main+0x15c>
  40fe38:	ldr	x1, [x20]
  40fe3c:	mov	x0, x21
  40fe40:	bl	40a5a0 <sd_device_monitor_attach_event@plt>
  40fe44:	tbnz	w0, #31, 40ff08 <worker_main+0x194>
  40fe48:	adrp	x1, 410000 <worker_main+0x28c>
  40fe4c:	add	x1, x1, #0x8c
  40fe50:	mov	x0, x21
  40fe54:	mov	x2, x20
  40fe58:	bl	40a5b0 <sd_device_monitor_start@plt>
  40fe5c:	tbnz	w0, #31, 40ff40 <worker_main+0x1cc>
  40fe60:	mov	x0, x21
  40fe64:	bl	40a5c0 <sd_device_monitor_get_event_source@plt>
  40fe68:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  40fe6c:	add	x1, x1, #0x5bc
  40fe70:	bl	40a5d0 <sd_event_source_set_description@plt>
  40fe74:	mov	x0, x21
  40fe78:	mov	x1, x19
  40fe7c:	mov	x2, x20
  40fe80:	bl	41008c <worker_device_monitor_handler>
  40fe84:	ldr	x0, [x20]
  40fe88:	bl	40a600 <sd_event_loop@plt>
  40fe8c:	tbnz	w0, #31, 40ffb4 <worker_main+0x240>
  40fe90:	mov	w21, wzr
  40fe94:	b	40ff90 <worker_main+0x21c>
  40fe98:	mov	w22, w0
  40fe9c:	mov	w0, #0x1                   	// #1
  40fea0:	bl	40a2c0 <log_get_max_level_realm@plt>
  40fea4:	cmp	w0, #0x3
  40fea8:	b.lt	40ff84 <worker_main+0x210>  // b.tstop
  40feac:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40feb0:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  40feb4:	adrp	x5, 434000 <__libc_csu_init+0x60>
  40feb8:	add	x2, x2, #0x22b
  40febc:	add	x4, x4, #0x536
  40fec0:	add	x5, x5, #0xb37
  40fec4:	mov	w0, #0x403                 	// #1027
  40fec8:	mov	w3, #0x1e5                 	// #485
  40fecc:	b	40ff74 <worker_main+0x200>
  40fed0:	mov	w22, w0
  40fed4:	mov	w0, #0x1                   	// #1
  40fed8:	bl	40a2c0 <log_get_max_level_realm@plt>
  40fedc:	cmp	w0, #0x3
  40fee0:	b.lt	40ff84 <worker_main+0x210>  // b.tstop
  40fee4:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40fee8:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  40feec:	adrp	x5, 435000 <worker_hash_op+0xdf8>
  40fef0:	add	x2, x2, #0x22b
  40fef4:	add	x4, x4, #0x536
  40fef8:	add	x5, x5, #0x56a
  40fefc:	mov	w0, #0x403                 	// #1027
  40ff00:	mov	w3, #0x1e9                 	// #489
  40ff04:	b	40ff74 <worker_main+0x200>
  40ff08:	mov	w22, w0
  40ff0c:	mov	w0, #0x1                   	// #1
  40ff10:	bl	40a2c0 <log_get_max_level_realm@plt>
  40ff14:	cmp	w0, #0x3
  40ff18:	b.lt	40ff84 <worker_main+0x210>  // b.tstop
  40ff1c:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40ff20:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  40ff24:	adrp	x5, 435000 <worker_hash_op+0xdf8>
  40ff28:	add	x2, x2, #0x22b
  40ff2c:	add	x4, x4, #0x536
  40ff30:	add	x5, x5, #0x58a
  40ff34:	mov	w0, #0x403                 	// #1027
  40ff38:	mov	w3, #0x1ed                 	// #493
  40ff3c:	b	40ff74 <worker_main+0x200>
  40ff40:	mov	w22, w0
  40ff44:	mov	w0, #0x1                   	// #1
  40ff48:	bl	40a2c0 <log_get_max_level_realm@plt>
  40ff4c:	cmp	w0, #0x3
  40ff50:	b.lt	40ff84 <worker_main+0x210>  // b.tstop
  40ff54:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40ff58:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  40ff5c:	adrp	x5, 434000 <__libc_csu_init+0x60>
  40ff60:	add	x2, x2, #0x22b
  40ff64:	add	x4, x4, #0x536
  40ff68:	add	x5, x5, #0xc55
  40ff6c:	mov	w0, #0x403                 	// #1027
  40ff70:	mov	w3, #0x1f1                 	// #497
  40ff74:	mov	w1, w22
  40ff78:	bl	40a2d0 <log_internal_realm@plt>
  40ff7c:	mov	w21, w0
  40ff80:	b	40ff90 <worker_main+0x21c>
  40ff84:	mov	w8, wzr
  40ff88:	neg	w9, w22
  40ff8c:	sub	w21, w8, w9, uxtb
  40ff90:	mov	x0, x20
  40ff94:	bl	40d358 <manager_freep>
  40ff98:	mov	x0, x19
  40ff9c:	bl	40a6e0 <sd_device_unref@plt>
  40ffa0:	mov	w0, w21
  40ffa4:	ldp	x20, x19, [sp, #32]
  40ffa8:	ldp	x22, x21, [sp, #16]
  40ffac:	ldp	x29, x30, [sp], #48
  40ffb0:	ret
  40ffb4:	mov	w21, w0
  40ffb8:	mov	w0, #0x1                   	// #1
  40ffbc:	bl	40a2c0 <log_get_max_level_realm@plt>
  40ffc0:	cmp	w0, #0x3
  40ffc4:	b.lt	40fff0 <worker_main+0x27c>  // b.tstop
  40ffc8:	adrp	x2, 434000 <__libc_csu_init+0x60>
  40ffcc:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  40ffd0:	adrp	x5, 434000 <__libc_csu_init+0x60>
  40ffd4:	add	x2, x2, #0x22b
  40ffd8:	add	x4, x4, #0x536
  40ffdc:	add	x5, x5, #0xdf9
  40ffe0:	mov	w0, #0x403                 	// #1027
  40ffe4:	mov	w3, #0x1fa                 	// #506
  40ffe8:	mov	w1, w21
  40ffec:	b	40ff78 <worker_main+0x204>
  40fff0:	mov	w8, wzr
  40fff4:	neg	w9, w21
  40fff8:	b	40ff8c <worker_main+0x218>
  40fffc:	adrp	x1, 434000 <__libc_csu_init+0x60>
  410000:	adrp	x2, 434000 <__libc_csu_init+0x60>
  410004:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  410008:	add	x1, x1, #0x3fe
  41000c:	add	x2, x2, #0x22b
  410010:	add	x4, x4, #0x4ab
  410014:	mov	w0, #0x1                   	// #1
  410018:	mov	w3, #0x1d3                 	// #467
  41001c:	bl	40a630 <log_assert_failed_realm@plt>
  410020:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  410024:	adrp	x2, 434000 <__libc_csu_init+0x60>
  410028:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  41002c:	add	x1, x1, #0x4e8
  410030:	add	x2, x2, #0x22b
  410034:	add	x4, x4, #0x4ab
  410038:	mov	w0, #0x1                   	// #1
  41003c:	mov	w3, #0x1d4                 	// #468
  410040:	bl	40a630 <log_assert_failed_realm@plt>
  410044:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  410048:	adrp	x2, 434000 <__libc_csu_init+0x60>
  41004c:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  410050:	add	x1, x1, #0x4f0
  410054:	add	x2, x2, #0x22b
  410058:	add	x4, x4, #0x4ab
  41005c:	mov	w0, #0x1                   	// #1
  410060:	mov	w3, #0x1d5                 	// #469
  410064:	bl	40a630 <log_assert_failed_realm@plt>
  410068:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  41006c:	adrp	x2, 434000 <__libc_csu_init+0x60>
  410070:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  410074:	add	x1, x1, #0x502
  410078:	add	x2, x2, #0x22b
  41007c:	add	x4, x4, #0x4ab
  410080:	mov	w0, #0x1                   	// #1
  410084:	mov	w3, #0x1d9                 	// #473
  410088:	bl	40a630 <log_assert_failed_realm@plt>

000000000041008c <worker_device_monitor_handler>:
  41008c:	sub	sp, sp, #0xd0
  410090:	stp	x29, x30, [sp, #112]
  410094:	str	x27, [sp, #128]
  410098:	stp	x26, x25, [sp, #144]
  41009c:	stp	x24, x23, [sp, #160]
  4100a0:	stp	x22, x21, [sp, #176]
  4100a4:	stp	x20, x19, [sp, #192]
  4100a8:	add	x29, sp, #0x70
  4100ac:	cbz	x1, 4109f8 <worker_device_monitor_handler+0x96c>
  4100b0:	mov	x20, x2
  4100b4:	cbz	x2, 410a1c <worker_device_monitor_handler+0x990>
  4100b8:	mov	x19, x1
  4100bc:	mov	x21, x0
  4100c0:	add	x1, sp, #0x28
  4100c4:	mov	x0, x19
  4100c8:	bl	40a960 <device_get_seqnum@plt>
  4100cc:	tbnz	w0, #31, 4101ac <worker_device_monitor_handler+0x120>
  4100d0:	add	x1, sp, #0x34
  4100d4:	mov	x0, x19
  4100d8:	bl	40a970 <device_get_action@plt>
  4100dc:	adrp	x26, 435000 <worker_hash_op+0xdf8>
  4100e0:	add	x26, x26, #0x7f
  4100e4:	tbnz	w0, #31, 410200 <worker_device_monitor_handler+0x174>
  4100e8:	mov	w0, #0x1                   	// #1
  4100ec:	stur	xzr, [x29, #-48]
  4100f0:	bl	40a2c0 <log_get_max_level_realm@plt>
  4100f4:	cmp	w0, #0x7
  4100f8:	mov	x22, xzr
  4100fc:	b.ge	4108cc <worker_device_monitor_handler+0x840>  // b.tcont
  410100:	ldr	w0, [sp, #52]
  410104:	ldr	x24, [sp, #40]
  410108:	cmp	x22, #0x0
  41010c:	csel	x23, xzr, x26, eq  // eq = none
  410110:	bl	40a9c0 <device_action_to_string@plt>
  410114:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  410118:	adrp	x2, 434000 <__libc_csu_init+0x60>
  41011c:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  410120:	stp	x24, x0, [sp, #16]
  410124:	add	x8, x8, #0x702
  410128:	add	x2, x2, #0x22b
  41012c:	add	x4, x4, #0x6ba
  410130:	mov	w0, #0x7                   	// #7
  410134:	mov	w3, #0x193                 	// #403
  410138:	mov	w1, wzr
  41013c:	mov	x5, x23
  410140:	mov	x6, x22
  410144:	mov	x7, xzr
  410148:	stp	xzr, x8, [sp]
  41014c:	bl	40a730 <log_object_internal@plt>
  410150:	adrp	x8, 470000 <arg_resolve_name_timing>
  410154:	ldr	x1, [x8, #48]
  410158:	ldr	x2, [x20, #56]
  41015c:	mov	x0, x19
  410160:	bl	411cd0 <udev_event_new>
  410164:	mov	x22, x0
  410168:	cbz	x0, 4103dc <worker_device_monitor_handler+0x350>
  41016c:	mov	w1, #0x1                   	// #1
  410170:	mov	x0, x19
  410174:	str	x19, [x29, #24]
  410178:	bl	40ab20 <device_for_action@plt>
  41017c:	tbnz	w0, #0, 4101a4 <worker_device_monitor_handler+0x118>
  410180:	sub	x1, x29, #0x8
  410184:	mov	x0, x19
  410188:	bl	40a850 <sd_device_get_subsystem@plt>
  41018c:	tbnz	w0, #31, 4103e4 <worker_device_monitor_handler+0x358>
  410190:	ldur	x0, [x29, #-8]
  410194:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  410198:	add	x1, x1, #0x1ad
  41019c:	bl	40a930 <strcmp@plt>
  4101a0:	cbz	w0, 41052c <worker_device_monitor_handler+0x4a0>
  4101a4:	mov	w24, wzr
  4101a8:	b	410440 <worker_device_monitor_handler+0x3b4>
  4101ac:	mov	w22, w0
  4101b0:	mov	w0, #0x1                   	// #1
  4101b4:	stur	xzr, [x29, #-48]
  4101b8:	bl	40a2c0 <log_get_max_level_realm@plt>
  4101bc:	cmp	w0, #0x7
  4101c0:	mov	x6, xzr
  4101c4:	b.ge	4108e0 <worker_device_monitor_handler+0x854>  // b.tcont
  4101c8:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  4101cc:	add	x8, x8, #0x7f
  4101d0:	cmp	x6, #0x0
  4101d4:	csel	x5, xzr, x8, eq  // eq = none
  4101d8:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  4101dc:	add	x8, x8, #0x6d0
  4101e0:	adrp	x2, 434000 <__libc_csu_init+0x60>
  4101e4:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  4101e8:	add	x2, x2, #0x22b
  4101ec:	add	x4, x4, #0x6ba
  4101f0:	str	x8, [sp, #8]
  4101f4:	mov	w0, #0x7                   	// #7
  4101f8:	mov	w3, #0x18c                 	// #396
  4101fc:	b	410248 <worker_device_monitor_handler+0x1bc>
  410200:	mov	w22, w0
  410204:	mov	w0, #0x1                   	// #1
  410208:	stur	xzr, [x29, #-48]
  41020c:	bl	40a2c0 <log_get_max_level_realm@plt>
  410210:	cmp	w0, #0x7
  410214:	mov	x6, xzr
  410218:	b.ge	410930 <worker_device_monitor_handler+0x8a4>  // b.tcont
  41021c:	cmp	x6, #0x0
  410220:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  410224:	adrp	x2, 434000 <__libc_csu_init+0x60>
  410228:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  41022c:	csel	x5, xzr, x26, eq  // eq = none
  410230:	add	x8, x8, #0x6e9
  410234:	add	x2, x2, #0x22b
  410238:	add	x4, x4, #0x6ba
  41023c:	mov	w0, #0x7                   	// #7
  410240:	mov	w3, #0x190                 	// #400
  410244:	str	x8, [sp, #8]
  410248:	mov	w1, w22
  41024c:	mov	x7, xzr
  410250:	str	xzr, [sp]
  410254:	bl	40a730 <log_object_internal@plt>
  410258:	mov	w24, w0
  41025c:	mov	x22, xzr
  410260:	mov	w23, #0xffffffff            	// #-1
  410264:	mov	w0, w23
  410268:	bl	40a660 <safe_close@plt>
  41026c:	cbz	x22, 410278 <worker_device_monitor_handler+0x1ec>
  410270:	mov	x0, x22
  410274:	bl	411da0 <udev_event_free>
  410278:	tbz	w24, #31, 4102d4 <worker_device_monitor_handler+0x248>
  41027c:	mov	w0, #0x1                   	// #1
  410280:	stur	xzr, [x29, #-48]
  410284:	bl	40a2c0 <log_get_max_level_realm@plt>
  410288:	cmp	w0, #0x4
  41028c:	mov	x6, xzr
  410290:	b.ge	4108f4 <worker_device_monitor_handler+0x868>  // b.tcont
  410294:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  410298:	add	x8, x8, #0x7f
  41029c:	cmp	x6, #0x0
  4102a0:	csel	x5, xzr, x8, eq  // eq = none
  4102a4:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  4102a8:	adrp	x2, 434000 <__libc_csu_init+0x60>
  4102ac:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  4102b0:	add	x8, x8, #0x63c
  4102b4:	add	x2, x2, #0x22b
  4102b8:	add	x4, x4, #0x61e
  4102bc:	mov	w0, #0x4                   	// #4
  4102c0:	mov	w3, #0x1bf                 	// #447
  4102c4:	mov	w1, w24
  4102c8:	mov	x7, xzr
  4102cc:	stp	xzr, x8, [sp]
  4102d0:	bl	40a730 <log_object_internal@plt>
  4102d4:	mov	x0, x21
  4102d8:	mov	x1, xzr
  4102dc:	mov	x2, x19
  4102e0:	bl	40a760 <device_monitor_send_device@plt>
  4102e4:	tbz	w0, #31, 410344 <worker_device_monitor_handler+0x2b8>
  4102e8:	mov	w21, w0
  4102ec:	mov	w0, #0x1                   	// #1
  4102f0:	stur	xzr, [x29, #-48]
  4102f4:	bl	40a2c0 <log_get_max_level_realm@plt>
  4102f8:	cmp	w0, #0x4
  4102fc:	mov	x6, xzr
  410300:	b.ge	410908 <worker_device_monitor_handler+0x87c>  // b.tcont
  410304:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  410308:	add	x8, x8, #0x7f
  41030c:	cmp	x6, #0x0
  410310:	csel	x5, xzr, x8, eq  // eq = none
  410314:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  410318:	adrp	x2, 434000 <__libc_csu_init+0x60>
  41031c:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  410320:	add	x8, x8, #0x663
  410324:	add	x2, x2, #0x22b
  410328:	add	x4, x4, #0x61e
  41032c:	mov	w0, #0x4                   	// #4
  410330:	mov	w3, #0x1c4                 	// #452
  410334:	mov	w1, w21
  410338:	mov	x7, xzr
  41033c:	stp	xzr, x8, [sp]
  410340:	bl	40a730 <log_object_internal@plt>
  410344:	ldr	w0, [x20, #88]
  410348:	sub	x1, x29, #0x30
  41034c:	mov	x2, xzr
  410350:	mov	w3, wzr
  410354:	bl	40ab30 <loop_write@plt>
  410358:	tbz	w0, #31, 4103b8 <worker_device_monitor_handler+0x32c>
  41035c:	mov	w20, w0
  410360:	mov	w0, #0x1                   	// #1
  410364:	stur	xzr, [x29, #-48]
  410368:	bl	40a2c0 <log_get_max_level_realm@plt>
  41036c:	cmp	w0, #0x4
  410370:	mov	x6, xzr
  410374:	b.ge	41091c <worker_device_monitor_handler+0x890>  // b.tcont
  410378:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  41037c:	add	x8, x8, #0x7f
  410380:	cmp	x6, #0x0
  410384:	csel	x5, xzr, x8, eq  // eq = none
  410388:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  41038c:	adrp	x2, 434000 <__libc_csu_init+0x60>
  410390:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  410394:	add	x8, x8, #0x687
  410398:	add	x2, x2, #0x22b
  41039c:	add	x4, x4, #0x61e
  4103a0:	mov	w0, #0x4                   	// #4
  4103a4:	mov	w3, #0x1c9                 	// #457
  4103a8:	mov	w1, w20
  4103ac:	mov	x7, xzr
  4103b0:	stp	xzr, x8, [sp]
  4103b4:	bl	40a730 <log_object_internal@plt>
  4103b8:	ldp	x20, x19, [sp, #192]
  4103bc:	ldp	x22, x21, [sp, #176]
  4103c0:	ldp	x24, x23, [sp, #160]
  4103c4:	ldp	x26, x25, [sp, #144]
  4103c8:	ldr	x27, [sp, #128]
  4103cc:	ldp	x29, x30, [sp, #112]
  4103d0:	mov	w0, #0x1                   	// #1
  4103d4:	add	sp, sp, #0xd0
  4103d8:	ret
  4103dc:	mov	w24, #0xfffffff4            	// #-12
  4103e0:	b	410260 <worker_device_monitor_handler+0x1d4>
  4103e4:	mov	w23, w0
  4103e8:	mov	w0, #0x1                   	// #1
  4103ec:	stur	xzr, [x29, #-48]
  4103f0:	bl	40a2c0 <log_get_max_level_realm@plt>
  4103f4:	cmp	w0, #0x7
  4103f8:	mov	x6, xzr
  4103fc:	b.ge	410958 <worker_device_monitor_handler+0x8cc>  // b.tcont
  410400:	cmp	x6, #0x0
  410404:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  410408:	adrp	x2, 434000 <__libc_csu_init+0x60>
  41040c:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  410410:	csel	x5, xzr, x26, eq  // eq = none
  410414:	add	x8, x8, #0x7a2
  410418:	add	x2, x2, #0x22b
  41041c:	add	x4, x4, #0x789
  410420:	mov	w0, #0x7                   	// #7
  410424:	mov	w3, #0x158                 	// #344
  410428:	str	x8, [sp, #8]
  41042c:	mov	w1, w23
  410430:	mov	x7, xzr
  410434:	str	xzr, [sp]
  410438:	bl	40a730 <log_object_internal@plt>
  41043c:	mov	w24, w0
  410440:	mov	w23, #0xffffffff            	// #-1
  410444:	mov	w25, #0xffffffff            	// #-1
  410448:	mov	w0, w25
  41044c:	bl	40a660 <safe_close@plt>
  410450:	tbnz	w24, #31, 410264 <worker_device_monitor_handler+0x1d8>
  410454:	adrp	x25, 470000 <arg_resolve_name_timing>
  410458:	ldr	x1, [x25, #8]
  41045c:	ldp	x3, x2, [x20, #40]
  410460:	mov	x0, x22
  410464:	bl	413554 <udev_event_execute_rules>
  410468:	tbnz	w0, #31, 41048c <worker_device_monitor_handler+0x400>
  41046c:	ldr	x1, [x25, #8]
  410470:	mov	x0, x22
  410474:	bl	41431c <udev_event_execute_run>
  410478:	ldr	x8, [x20, #56]
  41047c:	cbz	x8, 410494 <worker_device_monitor_handler+0x408>
  410480:	ldrb	w8, [x22, #105]
  410484:	tbnz	w8, #0, 4104a8 <worker_device_monitor_handler+0x41c>
  410488:	b	4104bc <worker_device_monitor_handler+0x430>
  41048c:	mov	w24, w0
  410490:	b	410264 <worker_device_monitor_handler+0x1d8>
  410494:	ldr	x0, [x22, #88]
  410498:	bl	40ab40 <sd_netlink_ref@plt>
  41049c:	str	x0, [x20, #56]
  4104a0:	ldrb	w8, [x22, #105]
  4104a4:	tbz	w8, #0, 4104bc <worker_device_monitor_handler+0x430>
  4104a8:	mov	x0, x19
  4104ac:	bl	41fa90 <udev_watch_begin>
  4104b0:	mov	x0, x19
  4104b4:	bl	40ab50 <device_update_db@plt>
  4104b8:	tbnz	w0, #31, 41058c <worker_device_monitor_handler+0x500>
  4104bc:	mov	w0, #0x1                   	// #1
  4104c0:	stur	xzr, [x29, #-48]
  4104c4:	bl	40a2c0 <log_get_max_level_realm@plt>
  4104c8:	cmp	w0, #0x7
  4104cc:	mov	x24, xzr
  4104d0:	b.ge	410944 <worker_device_monitor_handler+0x8b8>  // b.tcont
  4104d4:	ldr	w0, [sp, #52]
  4104d8:	ldr	x27, [sp, #40]
  4104dc:	cmp	x24, #0x0
  4104e0:	csel	x25, xzr, x26, eq  // eq = none
  4104e4:	bl	40a9c0 <device_action_to_string@plt>
  4104e8:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  4104ec:	adrp	x2, 434000 <__libc_csu_init+0x60>
  4104f0:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  4104f4:	stp	x27, x0, [sp, #16]
  4104f8:	add	x8, x8, #0x760
  4104fc:	add	x2, x2, #0x22b
  410500:	add	x4, x4, #0x6ba
  410504:	mov	w0, #0x7                   	// #7
  410508:	mov	w3, #0x1b1                 	// #433
  41050c:	mov	w1, wzr
  410510:	mov	x5, x25
  410514:	mov	x6, x24
  410518:	mov	x7, xzr
  41051c:	stp	xzr, x8, [sp]
  410520:	bl	40a730 <log_object_internal@plt>
  410524:	mov	w24, wzr
  410528:	b	410264 <worker_device_monitor_handler+0x1d8>
  41052c:	sub	x1, x29, #0x8
  410530:	mov	x0, x19
  410534:	bl	40a780 <sd_device_get_sysname@plt>
  410538:	tbnz	w0, #31, 4105e8 <worker_device_monitor_handler+0x55c>
  41053c:	adrp	x8, 434000 <__libc_csu_init+0x60>
  410540:	add	x8, x8, #0x1e8
  410544:	ldur	x23, [x29, #-8]
  410548:	ldp	q0, q1, [x8]
  41054c:	sub	x8, x29, #0x30
  410550:	stp	q0, q1, [x29, #-48]
  410554:	cbz	x23, 410634 <worker_device_monitor_handler+0x5a8>
  410558:	adrp	x24, 435000 <worker_hash_op+0xdf8>
  41055c:	orr	x25, x8, #0x8
  410560:	add	x24, x24, #0x7d8
  410564:	mov	x0, x24
  410568:	bl	40aa40 <strlen@plt>
  41056c:	mov	x2, x0
  410570:	mov	x0, x23
  410574:	mov	x1, x24
  410578:	bl	40a6a0 <strncmp@plt>
  41057c:	cbz	w0, 4101a4 <worker_device_monitor_handler+0x118>
  410580:	ldr	x24, [x25], #8
  410584:	cbnz	x24, 410564 <worker_device_monitor_handler+0x4d8>
  410588:	b	410640 <worker_device_monitor_handler+0x5b4>
  41058c:	mov	w24, w0
  410590:	mov	w0, #0x1                   	// #1
  410594:	stur	xzr, [x29, #-48]
  410598:	bl	40a2c0 <log_get_max_level_realm@plt>
  41059c:	cmp	w0, #0x7
  4105a0:	mov	x6, xzr
  4105a4:	b.ge	41096c <worker_device_monitor_handler+0x8e0>  // b.tcont
  4105a8:	cmp	x6, #0x0
  4105ac:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  4105b0:	adrp	x2, 434000 <__libc_csu_init+0x60>
  4105b4:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  4105b8:	csel	x5, xzr, x26, eq  // eq = none
  4105bc:	add	x8, x8, #0x72c
  4105c0:	add	x2, x2, #0x22b
  4105c4:	add	x4, x4, #0x6ba
  4105c8:	mov	w0, #0x7                   	// #7
  4105cc:	mov	w3, #0x1ad                 	// #429
  4105d0:	mov	w1, w24
  4105d4:	mov	x7, xzr
  4105d8:	stp	xzr, x8, [sp]
  4105dc:	bl	40a730 <log_object_internal@plt>
  4105e0:	mov	w24, w0
  4105e4:	b	410264 <worker_device_monitor_handler+0x1d8>
  4105e8:	mov	w23, w0
  4105ec:	mov	w0, #0x1                   	// #1
  4105f0:	stur	xzr, [x29, #-48]
  4105f4:	bl	40a2c0 <log_get_max_level_realm@plt>
  4105f8:	cmp	w0, #0x7
  4105fc:	mov	x6, xzr
  410600:	b.ge	410980 <worker_device_monitor_handler+0x8f4>  // b.tcont
  410604:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  410608:	cmp	x6, #0x0
  41060c:	add	x8, x8, #0x7be
  410610:	adrp	x2, 434000 <__libc_csu_init+0x60>
  410614:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  410618:	csel	x5, xzr, x26, eq  // eq = none
  41061c:	add	x2, x2, #0x22b
  410620:	add	x4, x4, #0x789
  410624:	str	x8, [sp, #8]
  410628:	mov	w0, #0x7                   	// #7
  41062c:	mov	w3, #0x15f                 	// #351
  410630:	b	41042c <worker_device_monitor_handler+0x3a0>
  410634:	orr	x8, x8, #0x8
  410638:	ldr	x9, [x8], #8
  41063c:	cbnz	x9, 410638 <worker_device_monitor_handler+0x5ac>
  410640:	sub	x1, x29, #0x8
  410644:	mov	x0, x19
  410648:	bl	40a870 <sd_device_get_devtype@plt>
  41064c:	mov	w23, w0
  410650:	tbz	w0, #31, 4106a4 <worker_device_monitor_handler+0x618>
  410654:	cmn	w23, #0x2
  410658:	b.eq	4106a4 <worker_device_monitor_handler+0x618>  // b.none
  41065c:	mov	w0, #0x1                   	// #1
  410660:	str	xzr, [sp, #56]
  410664:	bl	40a2c0 <log_get_max_level_realm@plt>
  410668:	cmp	w0, #0x7
  41066c:	mov	x6, xzr
  410670:	b.ge	410994 <worker_device_monitor_handler+0x908>  // b.tcont
  410674:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  410678:	cmp	x6, #0x0
  41067c:	add	x8, x8, #0x7e4
  410680:	adrp	x2, 434000 <__libc_csu_init+0x60>
  410684:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  410688:	csel	x5, xzr, x26, eq  // eq = none
  41068c:	add	x2, x2, #0x22b
  410690:	add	x4, x4, #0x789
  410694:	str	x8, [sp, #8]
  410698:	mov	w0, #0x7                   	// #7
  41069c:	mov	w3, #0x166                 	// #358
  4106a0:	b	41042c <worker_device_monitor_handler+0x3a0>
  4106a4:	mov	x0, x19
  4106a8:	tbnz	w23, #31, 4106dc <worker_device_monitor_handler+0x650>
  4106ac:	ldur	x0, [x29, #-8]
  4106b0:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  4106b4:	add	x1, x1, #0x7fe
  4106b8:	bl	40a930 <strcmp@plt>
  4106bc:	mov	w8, w0
  4106c0:	mov	x0, x19
  4106c4:	cbnz	w8, 4106dc <worker_device_monitor_handler+0x650>
  4106c8:	add	x1, x29, #0x18
  4106cc:	mov	x0, x19
  4106d0:	bl	40ab60 <sd_device_get_parent@plt>
  4106d4:	tbnz	w0, #31, 4107f8 <worker_device_monitor_handler+0x76c>
  4106d8:	ldr	x0, [x29, #24]
  4106dc:	sub	x1, x29, #0x8
  4106e0:	bl	40a840 <sd_device_get_devname@plt>
  4106e4:	cmn	w0, #0x2
  4106e8:	b.eq	4101a4 <worker_device_monitor_handler+0x118>  // b.none
  4106ec:	mov	w23, w0
  4106f0:	tbnz	w0, #31, 410738 <worker_device_monitor_handler+0x6ac>
  4106f4:	ldur	x0, [x29, #-8]
  4106f8:	mov	w1, #0x8800                	// #34816
  4106fc:	movk	w1, #0x8, lsl #16
  410700:	bl	40a890 <open64@plt>
  410704:	mov	w25, w0
  410708:	tbnz	w0, #31, 410788 <worker_device_monitor_handler+0x6fc>
  41070c:	mov	w1, #0x5                   	// #5
  410710:	mov	w0, w25
  410714:	bl	40a8a0 <flock@plt>
  410718:	tbnz	w0, #31, 41084c <worker_device_monitor_handler+0x7c0>
  41071c:	mov	w24, #0x1                   	// #1
  410720:	mov	w23, w25
  410724:	mov	w25, #0xffffffff            	// #-1
  410728:	mov	w0, w25
  41072c:	bl	40a660 <safe_close@plt>
  410730:	tbz	w24, #31, 410454 <worker_device_monitor_handler+0x3c8>
  410734:	b	410264 <worker_device_monitor_handler+0x1d8>
  410738:	ldr	x24, [x29, #24]
  41073c:	str	xzr, [sp, #56]
  410740:	cbz	x24, 410754 <worker_device_monitor_handler+0x6c8>
  410744:	mov	w0, #0x1                   	// #1
  410748:	bl	40a2c0 <log_get_max_level_realm@plt>
  41074c:	cmp	w0, #0x7
  410750:	b.ge	4109a8 <worker_device_monitor_handler+0x91c>  // b.tcont
  410754:	mov	x6, xzr
  410758:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  41075c:	cmp	x6, #0x0
  410760:	add	x8, x8, #0x828
  410764:	adrp	x2, 434000 <__libc_csu_init+0x60>
  410768:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  41076c:	csel	x5, xzr, x26, eq  // eq = none
  410770:	add	x2, x2, #0x22b
  410774:	add	x4, x4, #0x789
  410778:	str	x8, [sp, #8]
  41077c:	mov	w0, #0x7                   	// #7
  410780:	mov	w3, #0x171                 	// #369
  410784:	b	41042c <worker_device_monitor_handler+0x3a0>
  410788:	ldr	x24, [x29, #24]
  41078c:	str	xzr, [sp, #56]
  410790:	bl	40a3e0 <__errno_location@plt>
  410794:	ldr	w23, [x0]
  410798:	cbz	x24, 4107ac <worker_device_monitor_handler+0x720>
  41079c:	mov	w0, #0x1                   	// #1
  4107a0:	bl	40a2c0 <log_get_max_level_realm@plt>
  4107a4:	cmp	w0, #0x7
  4107a8:	b.ge	4109bc <worker_device_monitor_handler+0x930>  // b.tcont
  4107ac:	mov	x6, xzr
  4107b0:	ldur	x8, [x29, #-8]
  4107b4:	cmp	x6, #0x0
  4107b8:	adrp	x2, 434000 <__libc_csu_init+0x60>
  4107bc:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  4107c0:	str	x8, [sp, #16]
  4107c4:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  4107c8:	csel	x5, xzr, x26, eq  // eq = none
  4107cc:	add	x8, x8, #0x842
  4107d0:	add	x2, x2, #0x22b
  4107d4:	add	x4, x4, #0x789
  4107d8:	mov	w0, #0x7                   	// #7
  4107dc:	mov	w3, #0x175                 	// #373
  4107e0:	mov	w1, w23
  4107e4:	mov	x7, xzr
  4107e8:	stp	xzr, x8, [sp]
  4107ec:	bl	40a730 <log_object_internal@plt>
  4107f0:	mov	w24, wzr
  4107f4:	b	4108b8 <worker_device_monitor_handler+0x82c>
  4107f8:	ldr	x24, [x29, #24]
  4107fc:	mov	w23, w0
  410800:	str	xzr, [sp, #56]
  410804:	cbz	x24, 410818 <worker_device_monitor_handler+0x78c>
  410808:	mov	w0, #0x1                   	// #1
  41080c:	bl	40a2c0 <log_get_max_level_realm@plt>
  410810:	cmp	w0, #0x7
  410814:	b.ge	4109d0 <worker_device_monitor_handler+0x944>  // b.tcont
  410818:	mov	x6, xzr
  41081c:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  410820:	cmp	x6, #0x0
  410824:	add	x8, x8, #0x808
  410828:	adrp	x2, 434000 <__libc_csu_init+0x60>
  41082c:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  410830:	csel	x5, xzr, x26, eq  // eq = none
  410834:	add	x2, x2, #0x22b
  410838:	add	x4, x4, #0x789
  41083c:	str	x8, [sp, #8]
  410840:	mov	w0, #0x7                   	// #7
  410844:	mov	w3, #0x16a                 	// #362
  410848:	b	41042c <worker_device_monitor_handler+0x3a0>
  41084c:	ldr	x24, [x29, #24]
  410850:	str	xzr, [sp, #56]
  410854:	bl	40a3e0 <__errno_location@plt>
  410858:	ldr	w23, [x0]
  41085c:	cbz	x24, 410870 <worker_device_monitor_handler+0x7e4>
  410860:	mov	w0, #0x1                   	// #1
  410864:	bl	40a2c0 <log_get_max_level_realm@plt>
  410868:	cmp	w0, #0x7
  41086c:	b.ge	4109e4 <worker_device_monitor_handler+0x958>  // b.tcont
  410870:	mov	x6, xzr
  410874:	ldur	x8, [x29, #-8]
  410878:	cmp	x6, #0x0
  41087c:	adrp	x2, 434000 <__libc_csu_init+0x60>
  410880:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  410884:	str	x8, [sp, #16]
  410888:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  41088c:	csel	x5, xzr, x26, eq  // eq = none
  410890:	add	x8, x8, #0x864
  410894:	add	x2, x2, #0x22b
  410898:	add	x4, x4, #0x789
  41089c:	mov	w0, #0x7                   	// #7
  4108a0:	mov	w3, #0x17a                 	// #378
  4108a4:	mov	w1, w23
  4108a8:	mov	x7, xzr
  4108ac:	stp	xzr, x8, [sp]
  4108b0:	bl	40a730 <log_object_internal@plt>
  4108b4:	mov	w24, w0
  4108b8:	mov	w23, #0xffffffff            	// #-1
  4108bc:	mov	w0, w25
  4108c0:	bl	40a660 <safe_close@plt>
  4108c4:	tbz	w24, #31, 410454 <worker_device_monitor_handler+0x3c8>
  4108c8:	b	410264 <worker_device_monitor_handler+0x1d8>
  4108cc:	sub	x1, x29, #0x30
  4108d0:	mov	x0, x19
  4108d4:	bl	40a780 <sd_device_get_sysname@plt>
  4108d8:	ldur	x22, [x29, #-48]
  4108dc:	b	410100 <worker_device_monitor_handler+0x74>
  4108e0:	sub	x1, x29, #0x30
  4108e4:	mov	x0, x19
  4108e8:	bl	40a780 <sd_device_get_sysname@plt>
  4108ec:	ldur	x6, [x29, #-48]
  4108f0:	b	4101c8 <worker_device_monitor_handler+0x13c>
  4108f4:	sub	x1, x29, #0x30
  4108f8:	mov	x0, x19
  4108fc:	bl	40a780 <sd_device_get_sysname@plt>
  410900:	ldur	x6, [x29, #-48]
  410904:	b	410294 <worker_device_monitor_handler+0x208>
  410908:	sub	x1, x29, #0x30
  41090c:	mov	x0, x19
  410910:	bl	40a780 <sd_device_get_sysname@plt>
  410914:	ldur	x6, [x29, #-48]
  410918:	b	410304 <worker_device_monitor_handler+0x278>
  41091c:	sub	x1, x29, #0x30
  410920:	mov	x0, x19
  410924:	bl	40a780 <sd_device_get_sysname@plt>
  410928:	ldur	x6, [x29, #-48]
  41092c:	b	410378 <worker_device_monitor_handler+0x2ec>
  410930:	sub	x1, x29, #0x30
  410934:	mov	x0, x19
  410938:	bl	40a780 <sd_device_get_sysname@plt>
  41093c:	ldur	x6, [x29, #-48]
  410940:	b	41021c <worker_device_monitor_handler+0x190>
  410944:	sub	x1, x29, #0x30
  410948:	mov	x0, x19
  41094c:	bl	40a780 <sd_device_get_sysname@plt>
  410950:	ldur	x24, [x29, #-48]
  410954:	b	4104d4 <worker_device_monitor_handler+0x448>
  410958:	sub	x1, x29, #0x30
  41095c:	mov	x0, x19
  410960:	bl	40a780 <sd_device_get_sysname@plt>
  410964:	ldur	x6, [x29, #-48]
  410968:	b	410400 <worker_device_monitor_handler+0x374>
  41096c:	sub	x1, x29, #0x30
  410970:	mov	x0, x19
  410974:	bl	40a780 <sd_device_get_sysname@plt>
  410978:	ldur	x6, [x29, #-48]
  41097c:	b	4105a8 <worker_device_monitor_handler+0x51c>
  410980:	sub	x1, x29, #0x30
  410984:	mov	x0, x19
  410988:	bl	40a780 <sd_device_get_sysname@plt>
  41098c:	ldur	x6, [x29, #-48]
  410990:	b	410604 <worker_device_monitor_handler+0x578>
  410994:	add	x1, sp, #0x38
  410998:	mov	x0, x19
  41099c:	bl	40a780 <sd_device_get_sysname@plt>
  4109a0:	ldr	x6, [sp, #56]
  4109a4:	b	410674 <worker_device_monitor_handler+0x5e8>
  4109a8:	add	x1, sp, #0x38
  4109ac:	mov	x0, x24
  4109b0:	bl	40a780 <sd_device_get_sysname@plt>
  4109b4:	ldr	x6, [sp, #56]
  4109b8:	b	410758 <worker_device_monitor_handler+0x6cc>
  4109bc:	add	x1, sp, #0x38
  4109c0:	mov	x0, x24
  4109c4:	bl	40a780 <sd_device_get_sysname@plt>
  4109c8:	ldr	x6, [sp, #56]
  4109cc:	b	4107b0 <worker_device_monitor_handler+0x724>
  4109d0:	add	x1, sp, #0x38
  4109d4:	mov	x0, x24
  4109d8:	bl	40a780 <sd_device_get_sysname@plt>
  4109dc:	ldr	x6, [sp, #56]
  4109e0:	b	41081c <worker_device_monitor_handler+0x790>
  4109e4:	add	x1, sp, #0x38
  4109e8:	mov	x0, x24
  4109ec:	bl	40a780 <sd_device_get_sysname@plt>
  4109f0:	ldr	x6, [sp, #56]
  4109f4:	b	410874 <worker_device_monitor_handler+0x7e8>
  4109f8:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  4109fc:	adrp	x2, 434000 <__libc_csu_init+0x60>
  410a00:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  410a04:	add	x1, x1, #0x4f0
  410a08:	add	x2, x2, #0x22b
  410a0c:	add	x4, x4, #0x5d2
  410a10:	mov	w0, #0x1                   	// #1
  410a14:	mov	w3, #0x1ba                 	// #442
  410a18:	bl	40a630 <log_assert_failed_realm@plt>
  410a1c:	adrp	x1, 434000 <__libc_csu_init+0x60>
  410a20:	adrp	x2, 434000 <__libc_csu_init+0x60>
  410a24:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  410a28:	add	x1, x1, #0x3fe
  410a2c:	add	x2, x2, #0x22b
  410a30:	add	x4, x4, #0x5d2
  410a34:	mov	w0, #0x1                   	// #1
  410a38:	mov	w3, #0x1bb                 	// #443
  410a3c:	bl	40a630 <log_assert_failed_realm@plt>

0000000000410a40 <__unique_prefix_static_free_wrapper4>:
  410a40:	stp	x29, x30, [sp, #-32]!
  410a44:	str	x19, [sp, #16]
  410a48:	mov	x29, sp
  410a4c:	cbz	x0, 410a88 <__unique_prefix_static_free_wrapper4+0x48>
  410a50:	ldr	x8, [x0]
  410a54:	mov	x19, x0
  410a58:	cbz	x8, 410a94 <__unique_prefix_static_free_wrapper4+0x54>
  410a5c:	ldr	x0, [x8, #8]
  410a60:	ldrsw	x1, [x19, #8]
  410a64:	bl	40a770 <internal_hashmap_remove@plt>
  410a68:	ldr	x0, [x19, #16]
  410a6c:	bl	40a6d0 <sd_device_monitor_unref@plt>
  410a70:	ldr	x0, [x19, #32]
  410a74:	bl	40d658 <event_free>
  410a78:	mov	x0, x19
  410a7c:	ldr	x19, [sp, #16]
  410a80:	ldp	x29, x30, [sp], #32
  410a84:	b	40a320 <free@plt>
  410a88:	ldr	x19, [sp, #16]
  410a8c:	ldp	x29, x30, [sp], #32
  410a90:	ret
  410a94:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  410a98:	adrp	x2, 434000 <__libc_csu_init+0x60>
  410a9c:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  410aa0:	add	x1, x1, #0x10d
  410aa4:	add	x2, x2, #0x22b
  410aa8:	add	x4, x4, #0x11d
  410aac:	mov	w0, #0x1                   	// #1
  410ab0:	mov	w3, #0xb1                  	// #177
  410ab4:	bl	40a630 <log_assert_failed_realm@plt>

0000000000410ab8 <synthesize_change_one>:
  410ab8:	stp	x29, x30, [sp, #-48]!
  410abc:	stp	x22, x21, [sp, #16]
  410ac0:	stp	x20, x19, [sp, #32]
  410ac4:	mov	x29, sp
  410ac8:	sub	sp, sp, #0x10
  410acc:	mov	x21, x1
  410ad0:	mov	x20, x0
  410ad4:	cbz	x1, 410b30 <synthesize_change_one+0x78>
  410ad8:	mov	x0, x21
  410adc:	bl	40aa40 <strlen@plt>
  410ae0:	add	x8, x0, #0x8
  410ae4:	cmp	x8, #0x400, lsl #12
  410ae8:	b.hi	410c64 <synthesize_change_one+0x1ac>  // b.pmore
  410aec:	add	x8, x8, #0xf
  410af0:	mov	x9, sp
  410af4:	and	x8, x8, #0xfffffffffffffff0
  410af8:	sub	x19, x9, x8
  410afc:	mov	sp, x19
  410b00:	mov	x0, x19
  410b04:	mov	x1, x21
  410b08:	bl	40ab70 <stpcpy@plt>
  410b0c:	mov	x8, #0x752f                	// #29999
  410b10:	movk	x8, #0x7665, lsl #16
  410b14:	movk	x8, #0x6e65, lsl #32
  410b18:	movk	x8, #0x74, lsl #48
  410b1c:	str	x8, [x0], #7
  410b20:	strb	wzr, [x0]
  410b24:	stur	xzr, [x29, #-8]
  410b28:	cbnz	x20, 410b48 <synthesize_change_one+0x90>
  410b2c:	b	410b58 <synthesize_change_one+0xa0>
  410b30:	sub	x19, sp, #0x10
  410b34:	mov	sp, x19
  410b38:	mov	x0, x19
  410b3c:	strb	wzr, [x0]
  410b40:	stur	xzr, [x29, #-8]
  410b44:	cbz	x20, 410b58 <synthesize_change_one+0xa0>
  410b48:	mov	w0, #0x1                   	// #1
  410b4c:	bl	40a2c0 <log_get_max_level_realm@plt>
  410b50:	cmp	w0, #0x7
  410b54:	b.ge	410c3c <synthesize_change_one+0x184>  // b.tcont
  410b58:	mov	x6, xzr
  410b5c:	adrp	x22, 435000 <worker_hash_op+0xdf8>
  410b60:	add	x22, x22, #0x7f
  410b64:	cmp	x6, #0x0
  410b68:	csel	x5, xzr, x22, eq  // eq = none
  410b6c:	sub	sp, sp, #0x20
  410b70:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  410b74:	adrp	x2, 434000 <__libc_csu_init+0x60>
  410b78:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  410b7c:	add	x8, x8, #0xc9b
  410b80:	add	x2, x2, #0x22b
  410b84:	add	x4, x4, #0xc85
  410b88:	mov	w0, #0x7                   	// #7
  410b8c:	mov	w3, #0x443                 	// #1091
  410b90:	mov	w1, wzr
  410b94:	mov	x7, xzr
  410b98:	stp	x8, x21, [sp, #8]
  410b9c:	str	xzr, [sp]
  410ba0:	bl	40a730 <log_object_internal@plt>
  410ba4:	add	sp, sp, #0x20
  410ba8:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  410bac:	add	x1, x1, #0xcc9
  410bb0:	mov	w2, #0x20                  	// #32
  410bb4:	mov	x0, x19
  410bb8:	mov	x3, xzr
  410bbc:	bl	40ab80 <write_string_file_ts@plt>
  410bc0:	tbz	w0, #31, 410c28 <synthesize_change_one+0x170>
  410bc4:	mov	w21, w0
  410bc8:	stur	xzr, [x29, #-8]
  410bcc:	cbz	x20, 410be0 <synthesize_change_one+0x128>
  410bd0:	mov	w0, #0x1                   	// #1
  410bd4:	bl	40a2c0 <log_get_max_level_realm@plt>
  410bd8:	cmp	w0, #0x7
  410bdc:	b.ge	410c50 <synthesize_change_one+0x198>  // b.tcont
  410be0:	mov	x6, xzr
  410be4:	cmp	x6, #0x0
  410be8:	csel	x5, xzr, x22, eq  // eq = none
  410bec:	sub	sp, sp, #0x20
  410bf0:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  410bf4:	adrp	x2, 434000 <__libc_csu_init+0x60>
  410bf8:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  410bfc:	add	x8, x8, #0xcd0
  410c00:	add	x2, x2, #0x22b
  410c04:	add	x4, x4, #0xc85
  410c08:	mov	w0, #0x7                   	// #7
  410c0c:	mov	w3, #0x446                 	// #1094
  410c10:	mov	w1, w21
  410c14:	mov	x7, xzr
  410c18:	stp	x8, x19, [sp, #8]
  410c1c:	str	xzr, [sp]
  410c20:	bl	40a730 <log_object_internal@plt>
  410c24:	add	sp, sp, #0x20
  410c28:	mov	sp, x29
  410c2c:	ldp	x20, x19, [sp, #32]
  410c30:	ldp	x22, x21, [sp, #16]
  410c34:	ldp	x29, x30, [sp], #48
  410c38:	ret
  410c3c:	sub	x1, x29, #0x8
  410c40:	mov	x0, x20
  410c44:	bl	40a780 <sd_device_get_sysname@plt>
  410c48:	ldur	x6, [x29, #-8]
  410c4c:	b	410b5c <synthesize_change_one+0xa4>
  410c50:	sub	x1, x29, #0x8
  410c54:	mov	x0, x20
  410c58:	bl	40a780 <sd_device_get_sysname@plt>
  410c5c:	ldur	x6, [x29, #-8]
  410c60:	b	410be4 <synthesize_change_one+0x12c>
  410c64:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  410c68:	adrp	x2, 434000 <__libc_csu_init+0x60>
  410c6c:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  410c70:	add	x1, x1, #0xc66
  410c74:	add	x2, x2, #0x22b
  410c78:	add	x4, x4, #0xc31
  410c7c:	mov	w0, #0x1                   	// #1
  410c80:	mov	w3, #0x442                 	// #1090
  410c84:	bl	40a630 <log_assert_failed_realm@plt>

0000000000410c88 <on_kill_workers_event>:
  410c88:	sub	sp, sp, #0x40
  410c8c:	stp	x29, x30, [sp, #32]
  410c90:	stp	x20, x19, [sp, #48]
  410c94:	add	x29, sp, #0x20
  410c98:	cbz	x2, 410d54 <on_kill_workers_event+0xcc>
  410c9c:	mov	w0, #0x1                   	// #1
  410ca0:	mov	x19, x2
  410ca4:	bl	40a2c0 <log_get_max_level_realm@plt>
  410ca8:	cmp	w0, #0x7
  410cac:	b.lt	410cd8 <on_kill_workers_event+0x50>  // b.tstop
  410cb0:	adrp	x2, 434000 <__libc_csu_init+0x60>
  410cb4:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  410cb8:	adrp	x5, 435000 <worker_hash_op+0xdf8>
  410cbc:	add	x2, x2, #0x22b
  410cc0:	add	x4, x4, #0xf77
  410cc4:	add	x5, x5, #0xf8d
  410cc8:	mov	w0, #0x407                 	// #1031
  410ccc:	mov	w3, #0x336                 	// #822
  410cd0:	mov	w1, wzr
  410cd4:	bl	40a2d0 <log_internal_realm@plt>
  410cd8:	mov	w8, #0xfffffffe            	// #-2
  410cdc:	str	w8, [sp, #8]
  410ce0:	str	xzr, [sp, #16]
  410ce4:	ldr	x0, [x19, #8]
  410ce8:	add	x1, sp, #0x8
  410cec:	sub	x2, x29, #0x8
  410cf0:	mov	x3, xzr
  410cf4:	bl	40a7b0 <internal_hashmap_iterate@plt>
  410cf8:	tbz	w0, #0, 410d40 <on_kill_workers_event+0xb8>
  410cfc:	mov	w20, #0x3                   	// #3
  410d00:	b	410d1c <on_kill_workers_event+0x94>
  410d04:	ldr	x0, [x19, #8]
  410d08:	add	x1, sp, #0x8
  410d0c:	sub	x2, x29, #0x8
  410d10:	mov	x3, xzr
  410d14:	bl	40a7b0 <internal_hashmap_iterate@plt>
  410d18:	tbz	w0, #0, 410d40 <on_kill_workers_event+0xb8>
  410d1c:	ldur	x8, [x29, #-8]
  410d20:	ldr	w9, [x8, #24]
  410d24:	cmp	w9, #0x3
  410d28:	b.eq	410d04 <on_kill_workers_event+0x7c>  // b.none
  410d2c:	ldr	w0, [x8, #8]
  410d30:	mov	w1, #0xf                   	// #15
  410d34:	str	w20, [x8, #24]
  410d38:	bl	40a7c0 <kill@plt>
  410d3c:	b	410d04 <on_kill_workers_event+0x7c>
  410d40:	ldp	x20, x19, [sp, #48]
  410d44:	ldp	x29, x30, [sp, #32]
  410d48:	mov	w0, #0x1                   	// #1
  410d4c:	add	sp, sp, #0x40
  410d50:	ret
  410d54:	adrp	x1, 434000 <__libc_csu_init+0x60>
  410d58:	adrp	x2, 434000 <__libc_csu_init+0x60>
  410d5c:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  410d60:	add	x1, x1, #0x3fe
  410d64:	add	x2, x2, #0x22b
  410d68:	add	x4, x4, #0xf38
  410d6c:	mov	w0, #0x1                   	// #1
  410d70:	mov	w3, #0x334                 	// #820
  410d74:	bl	40a630 <log_assert_failed_realm@plt>

0000000000410d78 <udev_ctrl_new_from_fd>:
  410d78:	sub	sp, sp, #0x40
  410d7c:	stp	x29, x30, [sp, #16]
  410d80:	stp	x22, x21, [sp, #32]
  410d84:	stp	x20, x19, [sp, #48]
  410d88:	add	x29, sp, #0x10
  410d8c:	cbz	x0, 410f74 <udev_ctrl_new_from_fd+0x1fc>
  410d90:	mov	w22, w1
  410d94:	mov	x19, x0
  410d98:	tbnz	w1, #31, 410da4 <udev_ctrl_new_from_fd+0x2c>
  410d9c:	mov	w21, #0xffffffff            	// #-1
  410da0:	b	410dc0 <udev_ctrl_new_from_fd+0x48>
  410da4:	mov	w1, #0x805                 	// #2053
  410da8:	mov	w0, #0x1                   	// #1
  410dac:	movk	w1, #0x8, lsl #16
  410db0:	mov	w2, wzr
  410db4:	bl	40abb0 <socket@plt>
  410db8:	mov	w21, w0
  410dbc:	tbnz	w0, #31, 410f18 <udev_ctrl_new_from_fd+0x1a0>
  410dc0:	mov	w0, #0xc0                  	// #192
  410dc4:	bl	40a490 <malloc@plt>
  410dc8:	cbz	x0, 410ea8 <udev_ctrl_new_from_fd+0x130>
  410dcc:	cmp	w22, #0x0
  410dd0:	mvn	w8, w22
  410dd4:	mov	x20, x0
  410dd8:	mov	w9, #0x1                   	// #1
  410ddc:	mov	w10, #0xffffffff            	// #-1
  410de0:	movi	v0.2d, #0x0
  410de4:	stur	xzr, [x0, #140]
  410de8:	csel	w0, w22, w21, ge  // ge = tcont
  410dec:	lsr	w8, w8, #31
  410df0:	sub	x3, x29, #0x4
  410df4:	mov	w1, #0x1                   	// #1
  410df8:	mov	w2, #0x10                  	// #16
  410dfc:	mov	w4, #0x4                   	// #4
  410e00:	csinv	w21, w21, wzr, ge  // ge = tcont
  410e04:	stp	w0, w10, [x20, #4]
  410e08:	stur	q0, [x20, #12]
  410e0c:	stur	q0, [x20, #28]
  410e10:	stur	q0, [x20, #44]
  410e14:	stur	q0, [x20, #60]
  410e18:	stur	q0, [x20, #76]
  410e1c:	stur	q0, [x20, #92]
  410e20:	stur	q0, [x20, #108]
  410e24:	stur	q0, [x20, #124]
  410e28:	stur	q0, [x20, #149]
  410e2c:	stur	q0, [x20, #165]
  410e30:	str	q0, [x20, #176]
  410e34:	str	w9, [x20]
  410e38:	strb	w8, [x20, #148]
  410e3c:	stur	w9, [x29, #-4]
  410e40:	bl	40a530 <setsockopt@plt>
  410e44:	tbnz	w0, #31, 410ecc <udev_ctrl_new_from_fd+0x154>
  410e48:	adrp	x9, 441000 <worker_hash_op+0xcdf8>
  410e4c:	add	x9, x9, #0xdf0
  410e50:	ldp	q2, q0, [x9, #16]
  410e54:	ldr	q1, [x9]
  410e58:	mov	w8, #0x1                   	// #1
  410e5c:	add	x0, x20, #0x12
  410e60:	stur	q0, [x20, #50]
  410e64:	ldur	q0, [x9, #92]
  410e68:	stur	q2, [x20, #34]
  410e6c:	stur	q1, [x20, #18]
  410e70:	ldp	q3, q1, [x9, #48]
  410e74:	ldr	q2, [x9, #80]
  410e78:	mov	w1, #0x6c                  	// #108
  410e7c:	strh	w8, [x20, #16]
  410e80:	stur	q0, [x20, #110]
  410e84:	stur	q2, [x20, #98]
  410e88:	stur	q1, [x20, #82]
  410e8c:	stur	q3, [x20, #66]
  410e90:	bl	40abc0 <strnlen@plt>
  410e94:	mov	w22, wzr
  410e98:	add	w8, w0, #0x3
  410e9c:	str	w8, [x20, #144]
  410ea0:	str	x20, [x19]
  410ea4:	b	410eac <udev_ctrl_new_from_fd+0x134>
  410ea8:	mov	w22, #0xfffffff4            	// #-12
  410eac:	mov	w0, w21
  410eb0:	bl	40a660 <safe_close@plt>
  410eb4:	mov	w0, w22
  410eb8:	ldp	x20, x19, [sp, #48]
  410ebc:	ldp	x22, x21, [sp, #32]
  410ec0:	ldp	x29, x30, [sp, #16]
  410ec4:	add	sp, sp, #0x40
  410ec8:	ret
  410ecc:	bl	40a3e0 <__errno_location@plt>
  410ed0:	ldr	w22, [x0]
  410ed4:	cmp	w22, #0x1
  410ed8:	b.lt	410e48 <udev_ctrl_new_from_fd+0xd0>  // b.tstop
  410edc:	mov	w0, #0x1                   	// #1
  410ee0:	bl	40a2c0 <log_get_max_level_realm@plt>
  410ee4:	cmp	w0, #0x4
  410ee8:	b.lt	410e48 <udev_ctrl_new_from_fd+0xd0>  // b.tstop
  410eec:	adrp	x2, 435000 <worker_hash_op+0xdf8>
  410ef0:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  410ef4:	adrp	x5, 436000 <worker_hash_op+0x1df8>
  410ef8:	neg	w1, w22
  410efc:	add	x2, x2, #0xfa9
  410f00:	add	x4, x4, #0xff2
  410f04:	add	x5, x5, #0x24
  410f08:	mov	w0, #0x404                 	// #1028
  410f0c:	mov	w3, #0x58                  	// #88
  410f10:	bl	40a2d0 <log_internal_realm@plt>
  410f14:	b	410e48 <udev_ctrl_new_from_fd+0xd0>
  410f18:	bl	40a3e0 <__errno_location@plt>
  410f1c:	ldr	w19, [x0]
  410f20:	mov	w0, #0x1                   	// #1
  410f24:	bl	40a2c0 <log_get_max_level_realm@plt>
  410f28:	cmp	w0, #0x3
  410f2c:	b.lt	410f60 <udev_ctrl_new_from_fd+0x1e8>  // b.tstop
  410f30:	adrp	x2, 435000 <worker_hash_op+0xdf8>
  410f34:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  410f38:	adrp	x5, 436000 <worker_hash_op+0x1df8>
  410f3c:	add	x2, x2, #0xfa9
  410f40:	add	x4, x4, #0xff2
  410f44:	add	x5, x5, #0x8
  410f48:	mov	w0, #0x403                 	// #1027
  410f4c:	mov	w3, #0x44                  	// #68
  410f50:	mov	w1, w19
  410f54:	bl	40a2d0 <log_internal_realm@plt>
  410f58:	mov	w22, w0
  410f5c:	b	410eac <udev_ctrl_new_from_fd+0x134>
  410f60:	cmp	w19, #0x0
  410f64:	mov	w8, wzr
  410f68:	cneg	w9, w19, mi  // mi = first
  410f6c:	sub	w22, w8, w9, uxtb
  410f70:	b	410eac <udev_ctrl_new_from_fd+0x134>
  410f74:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  410f78:	adrp	x2, 435000 <worker_hash_op+0xdf8>
  410f7c:	adrp	x4, 435000 <worker_hash_op+0xdf8>
  410f80:	add	x1, x1, #0xfa2
  410f84:	add	x2, x2, #0xfa9
  410f88:	add	x4, x4, #0xfbe
  410f8c:	mov	w0, #0x1                   	// #1
  410f90:	mov	w3, #0x3f                  	// #63
  410f94:	bl	40a630 <log_assert_failed_realm@plt>

0000000000410f98 <udev_ctrl_enable_receiving>:
  410f98:	stp	x29, x30, [sp, #-48]!
  410f9c:	stp	x22, x21, [sp, #16]
  410fa0:	stp	x20, x19, [sp, #32]
  410fa4:	mov	x29, sp
  410fa8:	cbz	x0, 411108 <udev_ctrl_enable_receiving+0x170>
  410fac:	ldrb	w8, [x0, #148]
  410fb0:	mov	x19, x0
  410fb4:	tbnz	w8, #0, 411000 <udev_ctrl_enable_receiving+0x68>
  410fb8:	ldr	w0, [x19, #4]
  410fbc:	ldr	w2, [x19, #144]
  410fc0:	add	x21, x19, #0x10
  410fc4:	mov	x1, x21
  410fc8:	bl	40abd0 <bind@plt>
  410fcc:	tbnz	w0, #31, 411014 <udev_ctrl_enable_receiving+0x7c>
  410fd0:	ldr	w0, [x19, #4]
  410fd4:	mov	w1, wzr
  410fd8:	bl	40abe0 <listen@plt>
  410fdc:	tbnz	w0, #31, 41108c <udev_ctrl_enable_receiving+0xf4>
  410fe0:	ldrb	w8, [x19, #148]
  410fe4:	mov	w0, wzr
  410fe8:	orr	w8, w8, #0x3
  410fec:	strb	w8, [x19, #148]
  410ff0:	ldp	x20, x19, [sp, #32]
  410ff4:	ldp	x22, x21, [sp, #16]
  410ff8:	ldp	x29, x30, [sp], #48
  410ffc:	ret
  411000:	mov	w0, wzr
  411004:	ldp	x20, x19, [sp, #32]
  411008:	ldp	x22, x21, [sp, #16]
  41100c:	ldp	x29, x30, [sp], #48
  411010:	ret
  411014:	bl	40a3e0 <__errno_location@plt>
  411018:	ldr	w20, [x0]
  41101c:	cmp	w20, #0x62
  411020:	b.ne	411048 <udev_ctrl_enable_receiving+0xb0>  // b.any
  411024:	mov	x22, x0
  411028:	mov	x0, x21
  41102c:	bl	40abf0 <sockaddr_un_unlink@plt>
  411030:	ldr	w0, [x19, #4]
  411034:	ldr	w2, [x19, #144]
  411038:	mov	x1, x21
  41103c:	bl	40abd0 <bind@plt>
  411040:	tbz	w0, #31, 410fd0 <udev_ctrl_enable_receiving+0x38>
  411044:	ldr	w20, [x22]
  411048:	mov	w0, #0x1                   	// #1
  41104c:	bl	40a2c0 <log_get_max_level_realm@plt>
  411050:	cmp	w0, #0x3
  411054:	b.lt	4110e8 <udev_ctrl_enable_receiving+0x150>  // b.tstop
  411058:	adrp	x2, 435000 <worker_hash_op+0xdf8>
  41105c:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  411060:	adrp	x5, 434000 <__libc_csu_init+0x60>
  411064:	add	x2, x2, #0xfa9
  411068:	add	x4, x4, #0x7b
  41106c:	add	x5, x5, #0x9ce
  411070:	mov	w0, #0x403                 	// #1027
  411074:	mov	w3, #0x74                  	// #116
  411078:	mov	w1, w20
  41107c:	ldp	x20, x19, [sp, #32]
  411080:	ldp	x22, x21, [sp, #16]
  411084:	ldp	x29, x30, [sp], #48
  411088:	b	40a2d0 <log_internal_realm@plt>
  41108c:	bl	40a3e0 <__errno_location@plt>
  411090:	ldr	w19, [x0]
  411094:	mov	w0, #0x1                   	// #1
  411098:	bl	40a2c0 <log_get_max_level_realm@plt>
  41109c:	cmp	w0, #0x3
  4110a0:	b.lt	4110d8 <udev_ctrl_enable_receiving+0x140>  // b.tstop
  4110a4:	adrp	x2, 435000 <worker_hash_op+0xdf8>
  4110a8:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  4110ac:	adrp	x5, 436000 <worker_hash_op+0x1df8>
  4110b0:	add	x2, x2, #0xfa9
  4110b4:	add	x4, x4, #0x7b
  4110b8:	add	x5, x5, #0x96
  4110bc:	mov	w0, #0x403                 	// #1027
  4110c0:	mov	w3, #0x77                  	// #119
  4110c4:	mov	w1, w19
  4110c8:	ldp	x20, x19, [sp, #32]
  4110cc:	ldp	x22, x21, [sp, #16]
  4110d0:	ldp	x29, x30, [sp], #48
  4110d4:	b	40a2d0 <log_internal_realm@plt>
  4110d8:	cmp	w19, #0x0
  4110dc:	mov	w8, wzr
  4110e0:	cneg	w9, w19, mi  // mi = first
  4110e4:	b	4110f4 <udev_ctrl_enable_receiving+0x15c>
  4110e8:	cmp	w20, #0x0
  4110ec:	mov	w8, wzr
  4110f0:	cneg	w9, w20, mi  // mi = first
  4110f4:	sub	w0, w8, w9, uxtb
  4110f8:	ldp	x20, x19, [sp, #32]
  4110fc:	ldp	x22, x21, [sp, #16]
  411100:	ldp	x29, x30, [sp], #48
  411104:	ret
  411108:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  41110c:	adrp	x2, 435000 <worker_hash_op+0xdf8>
  411110:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  411114:	add	x1, x1, #0x42
  411118:	add	x2, x2, #0xfa9
  41111c:	add	x4, x4, #0x48
  411120:	mov	w0, #0x1                   	// #1
  411124:	mov	w3, #0x68                  	// #104
  411128:	bl	40a630 <log_assert_failed_realm@plt>

000000000041112c <udev_ctrl_ref>:
  41112c:	stp	x29, x30, [sp, #-16]!
  411130:	mov	x29, sp
  411134:	cbz	x0, 411148 <udev_ctrl_ref+0x1c>
  411138:	ldr	w8, [x0]
  41113c:	cbz	w8, 411150 <udev_ctrl_ref+0x24>
  411140:	add	w8, w8, #0x1
  411144:	str	w8, [x0]
  411148:	ldp	x29, x30, [sp], #16
  41114c:	ret
  411150:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  411154:	adrp	x2, 435000 <worker_hash_op+0xdf8>
  411158:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  41115c:	add	x1, x1, #0xbf
  411160:	add	x2, x2, #0xfa9
  411164:	add	x4, x4, #0xcc
  411168:	mov	w0, #0x1                   	// #1
  41116c:	mov	w3, #0x93                  	// #147
  411170:	bl	40a630 <log_assert_failed_realm@plt>

0000000000411174 <udev_ctrl_unref>:
  411174:	stp	x29, x30, [sp, #-32]!
  411178:	str	x19, [sp, #16]
  41117c:	mov	x29, sp
  411180:	cbz	x0, 41119c <udev_ctrl_unref+0x28>
  411184:	ldr	w8, [x0]
  411188:	mov	x19, x0
  41118c:	cbz	w8, 4111fc <udev_ctrl_unref+0x88>
  411190:	subs	w8, w8, #0x1
  411194:	str	w8, [x19]
  411198:	b.eq	4111ac <udev_ctrl_unref+0x38>  // b.none
  41119c:	ldr	x19, [sp, #16]
  4111a0:	mov	x0, xzr
  4111a4:	ldp	x29, x30, [sp], #32
  4111a8:	ret
  4111ac:	ldr	x0, [x19, #168]
  4111b0:	bl	40a6b0 <sd_event_source_unref@plt>
  4111b4:	ldr	w8, [x19, #8]
  4111b8:	str	x0, [x19, #168]
  4111bc:	mov	w0, w8
  4111c0:	bl	40a660 <safe_close@plt>
  4111c4:	ldr	x8, [x19, #160]
  4111c8:	str	w0, [x19, #8]
  4111cc:	mov	x0, x8
  4111d0:	bl	40a6b0 <sd_event_source_unref@plt>
  4111d4:	ldr	w0, [x19, #4]
  4111d8:	bl	40a660 <safe_close@plt>
  4111dc:	ldr	x0, [x19, #152]
  4111e0:	bl	40a6c0 <sd_event_unref@plt>
  4111e4:	mov	x0, x19
  4111e8:	bl	40a320 <free@plt>
  4111ec:	ldr	x19, [sp, #16]
  4111f0:	mov	x0, xzr
  4111f4:	ldp	x29, x30, [sp], #32
  4111f8:	ret
  4111fc:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  411200:	adrp	x2, 435000 <worker_hash_op+0xdf8>
  411204:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  411208:	add	x1, x1, #0xbf
  41120c:	add	x2, x2, #0xfa9
  411210:	add	x4, x4, #0x100
  411214:	mov	w0, #0x1                   	// #1
  411218:	mov	w3, #0x93                  	// #147
  41121c:	bl	40a630 <log_assert_failed_realm@plt>

0000000000411220 <udev_ctrl_cleanup>:
  411220:	stp	x29, x30, [sp, #-16]!
  411224:	mov	x29, sp
  411228:	cbz	x0, 41123c <udev_ctrl_cleanup+0x1c>
  41122c:	ldrb	w8, [x0, #148]
  411230:	tbz	w8, #1, 41123c <udev_ctrl_cleanup+0x1c>
  411234:	add	x0, x0, #0x10
  411238:	bl	40abf0 <sockaddr_un_unlink@plt>
  41123c:	mov	w0, wzr
  411240:	ldp	x29, x30, [sp], #16
  411244:	ret

0000000000411248 <udev_ctrl_attach_event>:
  411248:	stp	x29, x30, [sp, #-32]!
  41124c:	str	x19, [sp, #16]
  411250:	mov	x29, sp
  411254:	cbz	x0, 411294 <udev_ctrl_attach_event+0x4c>
  411258:	mov	x19, x0
  41125c:	ldr	x8, [x19, #152]!
  411260:	cbnz	x8, 4112c8 <udev_ctrl_attach_event+0x80>
  411264:	cbz	x1, 411278 <udev_ctrl_attach_event+0x30>
  411268:	mov	x0, x1
  41126c:	bl	40ac00 <sd_event_ref@plt>
  411270:	str	x0, [x19]
  411274:	b	411284 <udev_ctrl_attach_event+0x3c>
  411278:	mov	x0, x19
  41127c:	bl	40a550 <sd_event_default@plt>
  411280:	tbnz	w0, #31, 411288 <udev_ctrl_attach_event+0x40>
  411284:	mov	w0, wzr
  411288:	ldr	x19, [sp, #16]
  41128c:	ldp	x29, x30, [sp], #32
  411290:	ret
  411294:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  411298:	adrp	x2, 435000 <worker_hash_op+0xdf8>
  41129c:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  4112a0:	add	x1, x1, #0x42
  4112a4:	add	x2, x2, #0xfa9
  4112a8:	add	x4, x4, #0x136
  4112ac:	mov	w0, #0x1                   	// #1
  4112b0:	mov	w3, #0xa0                  	// #160
  4112b4:	bl	40ac10 <log_assert_failed_return_realm@plt>
  4112b8:	mov	w0, #0xffffffea            	// #-22
  4112bc:	ldr	x19, [sp, #16]
  4112c0:	ldp	x29, x30, [sp], #32
  4112c4:	ret
  4112c8:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  4112cc:	adrp	x2, 435000 <worker_hash_op+0xdf8>
  4112d0:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  4112d4:	add	x1, x1, #0x171
  4112d8:	add	x2, x2, #0xfa9
  4112dc:	add	x4, x4, #0x136
  4112e0:	mov	w0, #0x1                   	// #1
  4112e4:	mov	w3, #0xa1                  	// #161
  4112e8:	bl	40ac10 <log_assert_failed_return_realm@plt>
  4112ec:	mov	w0, #0xfffffff0            	// #-16
  4112f0:	ldr	x19, [sp, #16]
  4112f4:	ldp	x29, x30, [sp], #32
  4112f8:	ret

00000000004112fc <udev_ctrl_get_event_source>:
  4112fc:	stp	x29, x30, [sp, #-16]!
  411300:	mov	x29, sp
  411304:	cbz	x0, 411314 <udev_ctrl_get_event_source+0x18>
  411308:	ldr	x0, [x0, #160]
  41130c:	ldp	x29, x30, [sp], #16
  411310:	ret
  411314:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  411318:	adrp	x2, 435000 <worker_hash_op+0xdf8>
  41131c:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  411320:	add	x1, x1, #0x42
  411324:	add	x2, x2, #0xfa9
  411328:	add	x4, x4, #0x17f
  41132c:	mov	w0, #0x1                   	// #1
  411330:	mov	w3, #0xaf                  	// #175
  411334:	bl	40a630 <log_assert_failed_realm@plt>

0000000000411338 <udev_ctrl_start>:
  411338:	stp	x29, x30, [sp, #-48]!
  41133c:	str	x21, [sp, #16]
  411340:	stp	x20, x19, [sp, #32]
  411344:	mov	x29, sp
  411348:	cbz	x0, 4113c4 <udev_ctrl_start+0x8c>
  41134c:	mov	x19, x0
  411350:	ldr	x8, [x0, #152]!
  411354:	mov	x20, x2
  411358:	mov	x21, x1
  41135c:	cbnz	x8, 411368 <udev_ctrl_start+0x30>
  411360:	bl	40a550 <sd_event_default@plt>
  411364:	tbnz	w0, #31, 4113b4 <udev_ctrl_start+0x7c>
  411368:	mov	x0, x19
  41136c:	bl	410f98 <udev_ctrl_enable_receiving>
  411370:	tbnz	w0, #31, 4113b4 <udev_ctrl_start+0x7c>
  411374:	ldr	x0, [x19, #152]
  411378:	ldr	w2, [x19, #4]
  41137c:	stp	x21, x20, [x19, #176]
  411380:	add	x20, x19, #0xa0
  411384:	adrp	x4, 411000 <udev_ctrl_enable_receiving+0x68>
  411388:	add	x4, x4, #0x3e8
  41138c:	mov	w3, #0x1                   	// #1
  411390:	mov	x1, x20
  411394:	mov	x5, x19
  411398:	bl	40a590 <sd_event_add_io@plt>
  41139c:	tbnz	w0, #31, 4113b4 <udev_ctrl_start+0x7c>
  4113a0:	ldr	x0, [x20]
  4113a4:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  4113a8:	add	x1, x1, #0x204
  4113ac:	bl	40a5d0 <sd_event_source_set_description@plt>
  4113b0:	mov	w0, wzr
  4113b4:	ldp	x20, x19, [sp, #32]
  4113b8:	ldr	x21, [sp, #16]
  4113bc:	ldp	x29, x30, [sp], #48
  4113c0:	ret
  4113c4:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  4113c8:	adrp	x2, 435000 <worker_hash_op+0xdf8>
  4113cc:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  4113d0:	add	x1, x1, #0x42
  4113d4:	add	x2, x2, #0xfa9
  4113d8:	add	x4, x4, #0x1bf
  4113dc:	mov	w0, #0x1                   	// #1
  4113e0:	mov	w3, #0x132                 	// #306
  4113e4:	bl	40a630 <log_assert_failed_realm@plt>

00000000004113e8 <udev_ctrl_event_handler>:
  4113e8:	sub	sp, sp, #0x40
  4113ec:	stp	x29, x30, [sp, #16]
  4113f0:	stp	x22, x21, [sp, #32]
  4113f4:	stp	x20, x19, [sp, #48]
  4113f8:	add	x29, sp, #0x10
  4113fc:	cbz	x3, 411658 <udev_ctrl_event_handler+0x270>
  411400:	mov	x20, x3
  411404:	mov	w3, #0x800                 	// #2048
  411408:	mov	w0, w1
  41140c:	movk	w3, #0x8, lsl #16
  411410:	mov	x1, xzr
  411414:	mov	x2, xzr
  411418:	bl	40ac20 <accept4@plt>
  41141c:	mov	w19, w0
  411420:	tbnz	w0, #31, 41147c <udev_ctrl_event_handler+0x94>
  411424:	mov	x1, sp
  411428:	mov	w0, w19
  41142c:	bl	40ac30 <getpeercred@plt>
  411430:	tbnz	w0, #31, 4114f4 <udev_ctrl_event_handler+0x10c>
  411434:	ldr	w21, [sp, #4]
  411438:	cbz	w21, 411554 <udev_ctrl_event_handler+0x16c>
  41143c:	mov	w0, #0x1                   	// #1
  411440:	bl	40a2c0 <log_get_max_level_realm@plt>
  411444:	cmp	w0, #0x3
  411448:	b.lt	411530 <udev_ctrl_event_handler+0x148>  // b.tstop
  41144c:	adrp	x2, 435000 <worker_hash_op+0xdf8>
  411450:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  411454:	adrp	x5, 436000 <worker_hash_op+0x1df8>
  411458:	add	x2, x2, #0xfa9
  41145c:	add	x4, x4, #0x2ac
  411460:	add	x5, x5, #0x31e
  411464:	mov	w0, #0x403                 	// #1027
  411468:	mov	w3, #0x117                 	// #279
  41146c:	mov	w1, wzr
  411470:	mov	w6, w21
  411474:	bl	40a2d0 <log_internal_realm@plt>
  411478:	b	411530 <udev_ctrl_event_handler+0x148>
  41147c:	bl	40a3e0 <__errno_location@plt>
  411480:	ldr	w20, [x0]
  411484:	cmp	w20, #0x0
  411488:	cneg	w22, w20, mi  // mi = first
  41148c:	sub	w8, w22, #0x4
  411490:	cmp	w8, #0x6d
  411494:	b.hi	4114b4 <udev_ctrl_event_handler+0xcc>  // b.pmore
  411498:	adrp	x9, 441000 <worker_hash_op+0xcdf8>
  41149c:	add	x9, x9, #0xd82
  4114a0:	adr	x10, 4114b4 <udev_ctrl_event_handler+0xcc>
  4114a4:	ldrb	w11, [x9, x8]
  4114a8:	add	x10, x10, x11, lsl #2
  4114ac:	mov	w21, wzr
  4114b0:	br	x10
  4114b4:	mov	w0, #0x1                   	// #1
  4114b8:	bl	40a2c0 <log_get_max_level_realm@plt>
  4114bc:	cmp	w0, #0x3
  4114c0:	b.lt	41164c <udev_ctrl_event_handler+0x264>  // b.tstop
  4114c4:	adrp	x2, 435000 <worker_hash_op+0xdf8>
  4114c8:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  4114cc:	adrp	x5, 436000 <worker_hash_op+0x1df8>
  4114d0:	add	x2, x2, #0xfa9
  4114d4:	add	x4, x4, #0x2ac
  4114d8:	add	x5, x5, #0x2c4
  4114dc:	mov	w0, #0x403                 	// #1027
  4114e0:	mov	w3, #0x10c                 	// #268
  4114e4:	mov	w1, w20
  4114e8:	bl	40a2d0 <log_internal_realm@plt>
  4114ec:	mov	w21, w0
  4114f0:	b	411534 <udev_ctrl_event_handler+0x14c>
  4114f4:	mov	w21, w0
  4114f8:	mov	w0, #0x1                   	// #1
  4114fc:	bl	40a2c0 <log_get_max_level_realm@plt>
  411500:	cmp	w0, #0x3
  411504:	b.lt	411530 <udev_ctrl_event_handler+0x148>  // b.tstop
  411508:	adrp	x2, 435000 <worker_hash_op+0xdf8>
  41150c:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  411510:	adrp	x5, 436000 <worker_hash_op+0x1df8>
  411514:	add	x2, x2, #0xfa9
  411518:	add	x4, x4, #0x2ac
  41151c:	add	x5, x5, #0x2e9
  411520:	mov	w0, #0x403                 	// #1027
  411524:	mov	w3, #0x112                 	// #274
  411528:	mov	w1, w21
  41152c:	bl	40a2d0 <log_internal_realm@plt>
  411530:	mov	w21, wzr
  411534:	mov	w0, w19
  411538:	bl	40a660 <safe_close@plt>
  41153c:	mov	w0, w21
  411540:	ldp	x20, x19, [sp, #48]
  411544:	ldp	x22, x21, [sp, #32]
  411548:	ldp	x29, x30, [sp, #16]
  41154c:	add	sp, sp, #0x40
  411550:	ret
  411554:	mov	w8, #0x1                   	// #1
  411558:	sub	x3, x29, #0x4
  41155c:	mov	w1, #0x1                   	// #1
  411560:	mov	w2, #0x10                  	// #16
  411564:	mov	w4, #0x4                   	// #4
  411568:	mov	w0, w19
  41156c:	stur	w8, [x29, #-4]
  411570:	bl	40a530 <setsockopt@plt>
  411574:	tbnz	w0, #31, 4115c8 <udev_ctrl_event_handler+0x1e0>
  411578:	ldr	x0, [x20, #152]
  41157c:	adrp	x4, 411000 <udev_ctrl_enable_receiving+0x68>
  411580:	add	x1, x20, #0xa8
  411584:	add	x4, x4, #0x9dc
  411588:	mov	w3, #0x1                   	// #1
  41158c:	mov	w2, w19
  411590:	mov	x5, x20
  411594:	bl	40a590 <sd_event_add_io@plt>
  411598:	tbnz	w0, #31, 411614 <udev_ctrl_event_handler+0x22c>
  41159c:	ldr	x0, [x20, #168]
  4115a0:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  4115a4:	add	x1, x1, #0x3ae
  4115a8:	bl	40a5d0 <sd_event_source_set_description@plt>
  4115ac:	ldr	x0, [x20, #160]
  4115b0:	mov	w1, wzr
  4115b4:	bl	40ac40 <sd_event_source_set_enabled@plt>
  4115b8:	mov	w21, wzr
  4115bc:	str	w19, [x20, #8]
  4115c0:	mov	w19, #0xffffffff            	// #-1
  4115c4:	b	411534 <udev_ctrl_event_handler+0x14c>
  4115c8:	bl	40a3e0 <__errno_location@plt>
  4115cc:	ldr	w21, [x0]
  4115d0:	cmp	w21, #0x1
  4115d4:	b.lt	411578 <udev_ctrl_event_handler+0x190>  // b.tstop
  4115d8:	mov	w0, #0x1                   	// #1
  4115dc:	bl	40a2c0 <log_get_max_level_realm@plt>
  4115e0:	cmp	w0, #0x4
  4115e4:	b.lt	411578 <udev_ctrl_event_handler+0x190>  // b.tstop
  4115e8:	adrp	x2, 435000 <worker_hash_op+0xdf8>
  4115ec:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  4115f0:	adrp	x5, 436000 <worker_hash_op+0x1df8>
  4115f4:	neg	w1, w21
  4115f8:	add	x2, x2, #0xfa9
  4115fc:	add	x4, x4, #0x2ac
  411600:	add	x5, x5, #0x348
  411604:	mov	w0, #0x404                 	// #1028
  411608:	mov	w3, #0x11e                 	// #286
  41160c:	bl	40a2d0 <log_internal_realm@plt>
  411610:	b	411578 <udev_ctrl_event_handler+0x190>
  411614:	mov	w21, w0
  411618:	mov	w0, #0x1                   	// #1
  41161c:	bl	40a2c0 <log_get_max_level_realm@plt>
  411620:	cmp	w0, #0x3
  411624:	b.lt	411530 <udev_ctrl_event_handler+0x148>  // b.tstop
  411628:	adrp	x2, 435000 <worker_hash_op+0xdf8>
  41162c:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  411630:	adrp	x5, 436000 <worker_hash_op+0x1df8>
  411634:	add	x2, x2, #0xfa9
  411638:	add	x4, x4, #0x2ac
  41163c:	add	x5, x5, #0x370
  411640:	mov	w0, #0x403                 	// #1027
  411644:	mov	w3, #0x122                 	// #290
  411648:	b	411528 <udev_ctrl_event_handler+0x140>
  41164c:	mov	w8, wzr
  411650:	sub	w21, w8, w22, uxtb
  411654:	b	411534 <udev_ctrl_event_handler+0x14c>
  411658:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  41165c:	adrp	x2, 435000 <worker_hash_op+0xdf8>
  411660:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  411664:	add	x1, x1, #0x42
  411668:	add	x2, x2, #0xfa9
  41166c:	add	x4, x4, #0x266
  411670:	mov	w0, #0x1                   	// #1
  411674:	mov	w3, #0x105                 	// #261
  411678:	bl	40a630 <log_assert_failed_realm@plt>

000000000041167c <udev_ctrl_send>:
  41167c:	sub	sp, sp, #0x150
  411680:	adrp	x9, 441000 <worker_hash_op+0xcdf8>
  411684:	add	x9, x9, #0xe68
  411688:	mov	x8, sp
  41168c:	movi	v0.2d, #0x0
  411690:	ldr	q1, [x9]
  411694:	stur	q0, [x8, #248]
  411698:	stur	q0, [x8, #232]
  41169c:	stur	q0, [x8, #216]
  4116a0:	stur	q0, [x8, #200]
  4116a4:	stur	q0, [x8, #184]
  4116a8:	stur	q0, [x8, #168]
  4116ac:	stur	q0, [x8, #152]
  4116b0:	stur	q0, [x8, #136]
  4116b4:	add	x8, x8, #0x18
  4116b8:	str	q0, [x8, #240]
  4116bc:	mov	w8, #0x1dea                	// #7658
  4116c0:	movk	w8, #0xdead, lsl #16
  4116c4:	stp	x29, x30, [sp, #288]
  4116c8:	stp	x20, x19, [sp, #320]
  4116cc:	stur	q0, [sp, #120]
  4116d0:	stur	q0, [sp, #104]
  4116d4:	stur	q0, [sp, #88]
  4116d8:	stur	q0, [sp, #72]
  4116dc:	stur	q0, [sp, #56]
  4116e0:	stur	q0, [sp, #40]
  4116e4:	stur	q0, [sp, #24]
  4116e8:	str	q1, [sp]
  4116ec:	stp	w8, w1, [sp, #16]
  4116f0:	ldrb	w8, [x0, #148]
  4116f4:	str	x28, [sp, #304]
  4116f8:	add	x29, sp, #0x120
  4116fc:	tbnz	w8, #3, 41172c <udev_ctrl_send+0xb0>
  411700:	mov	w20, w1
  411704:	mov	x19, x0
  411708:	cbz	x3, 411734 <udev_ctrl_send+0xb8>
  41170c:	mov	x8, sp
  411710:	add	x0, x8, #0x18
  411714:	mov	w1, #0x100                 	// #256
  411718:	mov	x2, x3
  41171c:	bl	40ac50 <strscpy@plt>
  411720:	ldrb	w8, [x19, #148]
  411724:	tbz	w8, #2, 41173c <udev_ctrl_send+0xc0>
  411728:	b	41175c <udev_ctrl_send+0xe0>
  41172c:	mov	w0, #0xffffffc9            	// #-55
  411730:	b	4117a4 <udev_ctrl_send+0x128>
  411734:	str	w2, [sp, #24]
  411738:	tbnz	w8, #2, 41175c <udev_ctrl_send+0xe0>
  41173c:	ldr	w0, [x19, #4]
  411740:	ldr	w2, [x19, #144]
  411744:	add	x1, x19, #0x10
  411748:	bl	40ac60 <connect@plt>
  41174c:	tbnz	w0, #31, 411790 <udev_ctrl_send+0x114>
  411750:	ldrb	w8, [x19, #148]
  411754:	orr	w8, w8, #0x4
  411758:	strb	w8, [x19, #148]
  41175c:	ldr	w0, [x19, #4]
  411760:	mov	x1, sp
  411764:	mov	w2, #0x118                 	// #280
  411768:	mov	w3, wzr
  41176c:	bl	40ac70 <send@plt>
  411770:	tbnz	x0, #63, 411790 <udev_ctrl_send+0x114>
  411774:	cmp	w20, #0x8
  411778:	b.ne	4117a0 <udev_ctrl_send+0x124>  // b.any
  41177c:	ldrb	w8, [x19, #148]
  411780:	mov	w0, wzr
  411784:	orr	w8, w8, #0x8
  411788:	strb	w8, [x19, #148]
  41178c:	b	4117a4 <udev_ctrl_send+0x128>
  411790:	bl	40a3e0 <__errno_location@plt>
  411794:	ldr	w8, [x0]
  411798:	neg	w0, w8
  41179c:	b	4117a4 <udev_ctrl_send+0x128>
  4117a0:	mov	w0, wzr
  4117a4:	ldp	x20, x19, [sp, #320]
  4117a8:	ldr	x28, [sp, #304]
  4117ac:	ldp	x29, x30, [sp, #288]
  4117b0:	add	sp, sp, #0x150
  4117b4:	ret

00000000004117b8 <udev_ctrl_wait>:
  4117b8:	sub	sp, sp, #0x170
  4117bc:	stp	x29, x30, [sp, #304]
  4117c0:	str	x28, [sp, #320]
  4117c4:	stp	x22, x21, [sp, #336]
  4117c8:	stp	x20, x19, [sp, #352]
  4117cc:	add	x29, sp, #0x130
  4117d0:	stp	xzr, xzr, [sp]
  4117d4:	cbz	x0, 4119a0 <udev_ctrl_wait+0x1e8>
  4117d8:	mov	x21, x0
  4117dc:	ldr	w0, [x0, #4]
  4117e0:	tbnz	w0, #31, 411948 <udev_ctrl_wait+0x190>
  4117e4:	ldrb	w8, [x21, #148]
  4117e8:	tbz	w8, #2, 411948 <udev_ctrl_wait+0x190>
  4117ec:	mov	x19, x1
  4117f0:	tbnz	w8, #3, 411878 <udev_ctrl_wait+0xc0>
  4117f4:	adrp	x9, 441000 <worker_hash_op+0xcdf8>
  4117f8:	add	x9, x9, #0xe68
  4117fc:	ldr	q0, [x9]
  411800:	adrp	x9, 441000 <worker_hash_op+0xcdf8>
  411804:	ldr	d1, [x9, #3680]
  411808:	add	x9, sp, #0x10
  41180c:	add	x8, sp, #0x10
  411810:	movi	v2.2d, #0x0
  411814:	add	x9, x9, #0x1c
  411818:	add	x1, sp, #0x10
  41181c:	mov	w2, #0x118                 	// #280
  411820:	mov	w3, wzr
  411824:	stur	q2, [x8, #236]
  411828:	stur	q2, [x8, #220]
  41182c:	stur	q2, [x8, #204]
  411830:	stur	q2, [x8, #188]
  411834:	stur	q2, [x8, #172]
  411838:	stur	q2, [x8, #156]
  41183c:	stur	q2, [x8, #140]
  411840:	stur	q2, [x8, #124]
  411844:	stur	q2, [sp, #124]
  411848:	stur	q2, [sp, #108]
  41184c:	stur	q2, [sp, #92]
  411850:	stur	q2, [sp, #76]
  411854:	stur	q2, [sp, #60]
  411858:	stur	q2, [sp, #44]
  41185c:	stur	q2, [x9, #236]
  411860:	stur	q2, [x8, #252]
  411864:	str	q0, [sp, #16]
  411868:	str	d1, [sp, #32]
  41186c:	str	wzr, [sp, #40]
  411870:	bl	40ac70 <send@plt>
  411874:	tbnz	x0, #63, 411980 <udev_ctrl_wait+0x1c8>
  411878:	cbz	x19, 411948 <udev_ctrl_wait+0x190>
  41187c:	mov	x20, x21
  411880:	ldr	x0, [x20, #152]!
  411884:	cbnz	x0, 411898 <udev_ctrl_wait+0xe0>
  411888:	mov	x0, x20
  41188c:	bl	40a550 <sd_event_default@plt>
  411890:	tbnz	w0, #31, 411938 <udev_ctrl_wait+0x180>
  411894:	ldr	x0, [x20]
  411898:	ldr	w2, [x21, #4]
  41189c:	adrp	x4, 411000 <udev_ctrl_enable_receiving+0x68>
  4118a0:	add	x4, x4, #0x9c4
  4118a4:	add	x1, sp, #0x8
  4118a8:	mov	w3, #0x1                   	// #1
  4118ac:	mov	x5, xzr
  4118b0:	bl	40a590 <sd_event_add_io@plt>
  4118b4:	tbnz	w0, #31, 411938 <udev_ctrl_wait+0x180>
  4118b8:	ldr	x0, [sp, #8]
  4118bc:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  4118c0:	add	x1, x1, #0x23d
  4118c4:	bl	40a5d0 <sd_event_source_set_description@plt>
  4118c8:	cmn	x19, #0x1
  4118cc:	b.eq	411930 <udev_ctrl_wait+0x178>  // b.none
  4118d0:	ldr	x21, [x20]
  4118d4:	bl	40ac80 <clock_boottime_or_monotonic@plt>
  4118d8:	mov	w22, w0
  4118dc:	bl	40ac80 <clock_boottime_or_monotonic@plt>
  4118e0:	bl	40a9e0 <now@plt>
  4118e4:	adds	x8, x0, x19
  4118e8:	cset	w9, cs  // cs = hs, nlast
  4118ec:	cmp	x8, x19
  4118f0:	cset	w10, cc  // cc = lo, ul, last
  4118f4:	orr	w9, w9, w10
  4118f8:	cmp	w9, #0x0
  4118fc:	csinv	x3, x8, xzr, eq  // eq = none
  411900:	mov	x1, sp
  411904:	mov	x6, #0xffffffffffffff92    	// #-110
  411908:	mov	x0, x21
  41190c:	mov	w2, w22
  411910:	mov	x4, xzr
  411914:	mov	x5, xzr
  411918:	bl	40aae0 <sd_event_add_time@plt>
  41191c:	tbnz	w0, #31, 411938 <udev_ctrl_wait+0x180>
  411920:	ldr	x0, [sp]
  411924:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  411928:	add	x1, x1, #0x24f
  41192c:	bl	40a5d0 <sd_event_source_set_description@plt>
  411930:	ldr	x0, [x20]
  411934:	bl	40a600 <sd_event_loop@plt>
  411938:	mov	w22, w0
  41193c:	ldr	x0, [sp]
  411940:	cbnz	x0, 411954 <udev_ctrl_wait+0x19c>
  411944:	b	411958 <udev_ctrl_wait+0x1a0>
  411948:	mov	w22, wzr
  41194c:	ldr	x0, [sp]
  411950:	cbz	x0, 411958 <udev_ctrl_wait+0x1a0>
  411954:	bl	40a6b0 <sd_event_source_unref@plt>
  411958:	ldr	x0, [sp, #8]
  41195c:	cbz	x0, 411964 <udev_ctrl_wait+0x1ac>
  411960:	bl	40a6b0 <sd_event_source_unref@plt>
  411964:	mov	w0, w22
  411968:	ldp	x20, x19, [sp, #352]
  41196c:	ldp	x22, x21, [sp, #336]
  411970:	ldr	x28, [sp, #320]
  411974:	ldp	x29, x30, [sp, #304]
  411978:	add	sp, sp, #0x170
  41197c:	ret
  411980:	bl	40a3e0 <__errno_location@plt>
  411984:	ldr	w8, [x0]
  411988:	cmp	w8, #0x0
  41198c:	b.le	411878 <udev_ctrl_wait+0xc0>
  411990:	neg	w22, w8
  411994:	ldr	x0, [sp]
  411998:	cbnz	x0, 411954 <udev_ctrl_wait+0x19c>
  41199c:	b	411958 <udev_ctrl_wait+0x1a0>
  4119a0:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  4119a4:	adrp	x2, 435000 <worker_hash_op+0xdf8>
  4119a8:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  4119ac:	add	x1, x1, #0x42
  4119b0:	add	x2, x2, #0xfa9
  4119b4:	add	x4, x4, #0x20e
  4119b8:	mov	w0, #0x1                   	// #1
  4119bc:	mov	w3, #0x170                 	// #368
  4119c0:	bl	40a630 <log_assert_failed_realm@plt>

00000000004119c4 <udev_ctrl_wait_io_handler>:
  4119c4:	stp	x29, x30, [sp, #-16]!
  4119c8:	mov	x29, sp
  4119cc:	bl	40ac90 <sd_event_source_get_event@plt>
  4119d0:	mov	w1, wzr
  4119d4:	ldp	x29, x30, [sp], #16
  4119d8:	b	40aa10 <sd_event_exit@plt>

00000000004119dc <udev_ctrl_connection_event_handler>:
  4119dc:	sub	sp, sp, #0x1b0
  4119e0:	add	x8, sp, #0x68
  4119e4:	mov	w9, #0x118                 	// #280
  4119e8:	add	x10, sp, #0x58
  4119ec:	mov	w11, #0x1                   	// #1
  4119f0:	stp	x8, x9, [sp, #88]
  4119f4:	add	x8, sp, #0x38
  4119f8:	mov	w9, #0x20                  	// #32
  4119fc:	stp	x29, x30, [sp, #384]
  411a00:	stp	x28, x21, [sp, #400]
  411a04:	stp	x20, x19, [sp, #416]
  411a08:	add	x29, sp, #0x180
  411a0c:	str	xzr, [sp]
  411a10:	str	wzr, [sp, #8]
  411a14:	stp	x10, x11, [sp, #16]
  411a18:	stp	x8, x9, [sp, #32]
  411a1c:	str	wzr, [sp, #48]
  411a20:	cbz	x3, 411c88 <udev_ctrl_connection_event_handler+0x2ac>
  411a24:	ldr	w8, [x3]
  411a28:	mov	x19, x3
  411a2c:	cbz	w8, 411cac <udev_ctrl_connection_event_handler+0x2d0>
  411a30:	add	w8, w8, #0x1
  411a34:	mov	w0, w1
  411a38:	mov	w20, w1
  411a3c:	str	w8, [x19]
  411a40:	bl	40aca0 <next_datagram_size_fd@plt>
  411a44:	mov	x21, x0
  411a48:	tbnz	x0, #63, 411ac8 <udev_ctrl_connection_event_handler+0xec>
  411a4c:	cbz	x21, 411c38 <udev_ctrl_connection_event_handler+0x25c>
  411a50:	mov	x1, sp
  411a54:	mov	w0, w20
  411a58:	mov	w2, wzr
  411a5c:	bl	40a9d0 <recvmsg@plt>
  411a60:	tbnz	x0, #63, 411b58 <udev_ctrl_connection_event_handler+0x17c>
  411a64:	mov	x0, sp
  411a68:	bl	40acb0 <cmsg_close_all@plt>
  411a6c:	ldr	x8, [sp, #40]
  411a70:	cmp	x8, #0x10
  411a74:	b.cc	411b1c <udev_ctrl_connection_event_handler+0x140>  // b.lo, b.ul, b.last
  411a78:	ldr	x8, [sp, #32]
  411a7c:	cbz	x8, 411b1c <udev_ctrl_connection_event_handler+0x140>
  411a80:	ldr	w9, [x8, #12]
  411a84:	cmp	w9, #0x2
  411a88:	b.ne	411b1c <udev_ctrl_connection_event_handler+0x140>  // b.any
  411a8c:	ldr	w20, [x8, #20]
  411a90:	cbz	w20, 411bb4 <udev_ctrl_connection_event_handler+0x1d8>
  411a94:	mov	w0, #0x1                   	// #1
  411a98:	bl	40a2c0 <log_get_max_level_realm@plt>
  411a9c:	cmp	w0, #0x3
  411aa0:	b.lt	411c38 <udev_ctrl_connection_event_handler+0x25c>  // b.tstop
  411aa4:	adrp	x2, 435000 <worker_hash_op+0xdf8>
  411aa8:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  411aac:	adrp	x5, 436000 <worker_hash_op+0x1df8>
  411ab0:	add	x2, x2, #0xfa9
  411ab4:	add	x4, x4, #0x41d
  411ab8:	add	x5, x5, #0x4b6
  411abc:	mov	w0, #0x403                 	// #1027
  411ac0:	mov	w3, #0xeb                  	// #235
  411ac4:	b	411c2c <udev_ctrl_connection_event_handler+0x250>
  411ac8:	mov	w0, #0x1                   	// #1
  411acc:	bl	40a2c0 <log_get_max_level_realm@plt>
  411ad0:	cmp	w0, #0x3
  411ad4:	b.lt	411b08 <udev_ctrl_connection_event_handler+0x12c>  // b.tstop
  411ad8:	adrp	x2, 435000 <worker_hash_op+0xdf8>
  411adc:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  411ae0:	adrp	x5, 436000 <worker_hash_op+0x1df8>
  411ae4:	add	x2, x2, #0xfa9
  411ae8:	add	x4, x4, #0x41d
  411aec:	add	x5, x5, #0x440
  411af0:	mov	w0, #0x403                 	// #1027
  411af4:	mov	w3, #0xd3                  	// #211
  411af8:	mov	w1, w21
  411afc:	bl	40a2d0 <log_internal_realm@plt>
  411b00:	mov	w20, w0
  411b04:	b	411c3c <udev_ctrl_connection_event_handler+0x260>
  411b08:	cmp	w21, #0x0
  411b0c:	mov	w8, wzr
  411b10:	cneg	w9, w21, mi  // mi = first
  411b14:	sub	w20, w8, w9, uxtb
  411b18:	b	411c3c <udev_ctrl_connection_event_handler+0x260>
  411b1c:	mov	w0, #0x1                   	// #1
  411b20:	bl	40a2c0 <log_get_max_level_realm@plt>
  411b24:	cmp	w0, #0x3
  411b28:	b.lt	411c38 <udev_ctrl_connection_event_handler+0x25c>  // b.tstop
  411b2c:	adrp	x2, 435000 <worker_hash_op+0xdf8>
  411b30:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  411b34:	adrp	x5, 436000 <worker_hash_op+0x1df8>
  411b38:	add	x2, x2, #0xfa9
  411b3c:	add	x4, x4, #0x41d
  411b40:	add	x5, x5, #0x485
  411b44:	mov	w0, #0x403                 	// #1027
  411b48:	mov	w3, #0xe4                  	// #228
  411b4c:	mov	w1, wzr
  411b50:	bl	40a2d0 <log_internal_realm@plt>
  411b54:	b	411c38 <udev_ctrl_connection_event_handler+0x25c>
  411b58:	bl	40a3e0 <__errno_location@plt>
  411b5c:	ldr	w20, [x0]
  411b60:	cmp	w20, #0x4
  411b64:	b.eq	411c38 <udev_ctrl_connection_event_handler+0x25c>  // b.none
  411b68:	mov	w0, #0x1                   	// #1
  411b6c:	bl	40a2c0 <log_get_max_level_realm@plt>
  411b70:	cmp	w0, #0x3
  411b74:	b.lt	411ba0 <udev_ctrl_connection_event_handler+0x1c4>  // b.tstop
  411b78:	adrp	x2, 435000 <worker_hash_op+0xdf8>
  411b7c:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  411b80:	adrp	x5, 436000 <worker_hash_op+0x1df8>
  411b84:	add	x2, x2, #0xfa9
  411b88:	add	x4, x4, #0x41d
  411b8c:	add	x5, x5, #0x462
  411b90:	mov	w0, #0x403                 	// #1027
  411b94:	mov	w3, #0xda                  	// #218
  411b98:	mov	w1, w20
  411b9c:	b	411afc <udev_ctrl_connection_event_handler+0x120>
  411ba0:	cmp	w20, #0x0
  411ba4:	mov	w8, wzr
  411ba8:	cneg	w9, w20, mi  // mi = first
  411bac:	sub	w20, w8, w9, uxtb
  411bb0:	b	411c3c <udev_ctrl_connection_event_handler+0x260>
  411bb4:	ldr	w20, [sp, #120]
  411bb8:	mov	w8, #0x1dea                	// #7658
  411bbc:	movk	w8, #0xdead, lsl #16
  411bc0:	cmp	w20, w8
  411bc4:	b.ne	411bfc <udev_ctrl_connection_event_handler+0x220>  // b.any
  411bc8:	ldr	w1, [sp, #124]
  411bcc:	cbz	w1, 411c38 <udev_ctrl_connection_event_handler+0x25c>
  411bd0:	ldr	x8, [x19, #176]
  411bd4:	cbz	x8, 411bec <udev_ctrl_connection_event_handler+0x210>
  411bd8:	ldr	x3, [x19, #184]
  411bdc:	add	x9, sp, #0x68
  411be0:	add	x2, x9, #0x18
  411be4:	mov	x0, x19
  411be8:	blr	x8
  411bec:	mov	x0, x19
  411bf0:	bl	411174 <udev_ctrl_unref>
  411bf4:	mov	x19, xzr
  411bf8:	b	411c38 <udev_ctrl_connection_event_handler+0x25c>
  411bfc:	mov	w0, #0x1                   	// #1
  411c00:	bl	40a2c0 <log_get_max_level_realm@plt>
  411c04:	cmp	w0, #0x3
  411c08:	b.lt	411c38 <udev_ctrl_connection_event_handler+0x25c>  // b.tstop
  411c0c:	adrp	x2, 435000 <worker_hash_op+0xdf8>
  411c10:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  411c14:	adrp	x5, 436000 <worker_hash_op+0x1df8>
  411c18:	add	x2, x2, #0xfa9
  411c1c:	add	x4, x4, #0x41d
  411c20:	add	x5, x5, #0x4de
  411c24:	mov	w0, #0x403                 	// #1027
  411c28:	mov	w3, #0xf0                  	// #240
  411c2c:	mov	w1, wzr
  411c30:	mov	w6, w20
  411c34:	bl	40a2d0 <log_internal_realm@plt>
  411c38:	mov	w20, wzr
  411c3c:	cbz	x19, 411c70 <udev_ctrl_connection_event_handler+0x294>
  411c40:	ldr	x0, [x19, #168]
  411c44:	bl	40a6b0 <sd_event_source_unref@plt>
  411c48:	ldr	w8, [x19, #8]
  411c4c:	str	x0, [x19, #168]
  411c50:	mov	w0, w8
  411c54:	bl	40a660 <safe_close@plt>
  411c58:	str	w0, [x19, #8]
  411c5c:	mov	x0, x19
  411c60:	bl	411174 <udev_ctrl_unref>
  411c64:	ldr	x0, [x19, #160]
  411c68:	mov	w1, #0x1                   	// #1
  411c6c:	bl	40ac40 <sd_event_source_set_enabled@plt>
  411c70:	mov	w0, w20
  411c74:	ldp	x20, x19, [sp, #416]
  411c78:	ldp	x28, x21, [sp, #400]
  411c7c:	ldp	x29, x30, [sp, #384]
  411c80:	add	sp, sp, #0x1b0
  411c84:	ret
  411c88:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  411c8c:	adrp	x2, 435000 <worker_hash_op+0xdf8>
  411c90:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  411c94:	add	x1, x1, #0x3c3
  411c98:	add	x2, x2, #0xfa9
  411c9c:	add	x4, x4, #0x3cc
  411ca0:	mov	w0, #0x1                   	// #1
  411ca4:	mov	w3, #0xcb                  	// #203
  411ca8:	bl	40a630 <log_assert_failed_realm@plt>
  411cac:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  411cb0:	adrp	x2, 435000 <worker_hash_op+0xdf8>
  411cb4:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  411cb8:	add	x1, x1, #0xbf
  411cbc:	add	x2, x2, #0xfa9
  411cc0:	add	x4, x4, #0xcc
  411cc4:	mov	w0, #0x1                   	// #1
  411cc8:	mov	w3, #0x93                  	// #147
  411ccc:	bl	40a630 <log_assert_failed_realm@plt>

0000000000411cd0 <udev_event_new>:
  411cd0:	stp	x29, x30, [sp, #-64]!
  411cd4:	str	x23, [sp, #16]
  411cd8:	stp	x22, x21, [sp, #32]
  411cdc:	stp	x20, x19, [sp, #48]
  411ce0:	mov	x29, sp
  411ce4:	cbz	x0, 411d7c <udev_event_new+0xac>
  411ce8:	mov	x22, x0
  411cec:	mov	w0, #0x70                  	// #112
  411cf0:	mov	x21, x2
  411cf4:	mov	x20, x1
  411cf8:	bl	40a490 <malloc@plt>
  411cfc:	mov	x19, x0
  411d00:	cbz	x0, 411d64 <udev_event_new+0x94>
  411d04:	mov	x0, x22
  411d08:	bl	40a9a0 <sd_device_ref@plt>
  411d0c:	mov	x22, x0
  411d10:	mov	w0, #0x1                   	// #1
  411d14:	bl	40a9e0 <now@plt>
  411d18:	mov	x23, x0
  411d1c:	mov	x0, x21
  411d20:	bl	40ab40 <sd_netlink_ref@plt>
  411d24:	ldrh	w9, [x29, #28]
  411d28:	ldr	w10, [x29, #24]
  411d2c:	movi	v0.2d, #0x0
  411d30:	stur	q0, [x19, #8]
  411d34:	stur	q0, [x19, #24]
  411d38:	movi	v0.2d, #0xffffffffffffffff
  411d3c:	mov	w8, #0xffffffff            	// #-1
  411d40:	str	x22, [x19]
  411d44:	stp	xzr, xzr, [x19, #56]
  411d48:	stp	x20, x23, [x19, #72]
  411d4c:	stp	x0, xzr, [x19, #88]
  411d50:	strh	wzr, [x19, #104]
  411d54:	str	d0, [x19, #40]
  411d58:	str	w8, [x19, #48]
  411d5c:	strh	w9, [x19, #110]
  411d60:	stur	w10, [x19, #106]
  411d64:	mov	x0, x19
  411d68:	ldp	x20, x19, [sp, #48]
  411d6c:	ldp	x22, x21, [sp, #32]
  411d70:	ldr	x23, [sp, #16]
  411d74:	ldp	x29, x30, [sp], #64
  411d78:	ret
  411d7c:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  411d80:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  411d84:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  411d88:	add	x1, x1, #0x4f0
  411d8c:	add	x2, x2, #0x516
  411d90:	add	x4, x4, #0x52c
  411d94:	mov	w0, #0x1                   	// #1
  411d98:	mov	w3, #0x38                  	// #56
  411d9c:	bl	40a630 <log_assert_failed_realm@plt>

0000000000411da0 <udev_event_free>:
  411da0:	cbz	x0, 411e14 <udev_event_free+0x74>
  411da4:	stp	x29, x30, [sp, #-32]!
  411da8:	stp	x20, x19, [sp, #16]
  411dac:	mov	x19, x0
  411db0:	ldr	x0, [x0]
  411db4:	mov	x29, sp
  411db8:	bl	40a6e0 <sd_device_unref@plt>
  411dbc:	ldr	x0, [x19, #16]
  411dc0:	bl	40a6e0 <sd_device_unref@plt>
  411dc4:	ldr	x0, [x19, #88]
  411dc8:	bl	40a640 <sd_netlink_unref@plt>
  411dcc:	adrp	x20, 46f000 <_DYNAMIC+0x208>
  411dd0:	ldr	x0, [x19, #64]
  411dd4:	ldr	x20, [x20, #120]
  411dd8:	mov	x2, xzr
  411ddc:	mov	x1, x20
  411de0:	bl	40a650 <internal_hashmap_free@plt>
  411de4:	ldr	x0, [x19, #56]
  411de8:	mov	x1, x20
  411dec:	mov	x2, x20
  411df0:	bl	40a650 <internal_hashmap_free@plt>
  411df4:	ldr	x0, [x19, #32]
  411df8:	bl	40a320 <free@plt>
  411dfc:	ldr	x0, [x19, #24]
  411e00:	bl	40a320 <free@plt>
  411e04:	mov	x0, x19
  411e08:	bl	40a320 <free@plt>
  411e0c:	ldp	x20, x19, [sp, #16]
  411e10:	ldp	x29, x30, [sp], #32
  411e14:	mov	x0, xzr
  411e18:	ret

0000000000411e1c <udev_event_apply_format>:
  411e1c:	stp	x29, x30, [sp, #-96]!
  411e20:	stp	x28, x27, [sp, #16]
  411e24:	stp	x26, x25, [sp, #32]
  411e28:	stp	x24, x23, [sp, #48]
  411e2c:	stp	x22, x21, [sp, #64]
  411e30:	stp	x20, x19, [sp, #80]
  411e34:	mov	x29, sp
  411e38:	sub	sp, sp, #0x660
  411e3c:	add	x28, sp, #0x438
  411e40:	str	x1, [x28]
  411e44:	cbz	x0, 412630 <udev_event_apply_format+0x814>
  411e48:	ldr	x8, [x0]
  411e4c:	mov	x22, x0
  411e50:	cbz	x8, 412654 <udev_event_apply_format+0x838>
  411e54:	mov	x19, x1
  411e58:	cbz	x1, 412678 <udev_event_apply_format+0x85c>
  411e5c:	mov	x20, x2
  411e60:	cbz	x2, 41269c <udev_event_apply_format+0x880>
  411e64:	mov	x21, x3
  411e68:	cbz	x3, 4126c0 <udev_event_apply_format+0x8a4>
  411e6c:	ldrb	w8, [x19]
  411e70:	cbz	w8, 4124a4 <udev_event_apply_format+0x688>
  411e74:	adrp	x26, 441000 <worker_hash_op+0xcdf8>
  411e78:	adrp	x25, 435000 <worker_hash_op+0xdf8>
  411e7c:	mov	w23, w4
  411e80:	add	x26, x26, #0xe78
  411e84:	add	x25, x25, #0x7f
  411e88:	b	411ea0 <udev_event_apply_format+0x84>
  411e8c:	add	x20, x20, x27
  411e90:	sub	x21, x21, x27
  411e94:	ldr	x8, [x28]
  411e98:	ldrb	w8, [x8]
  411e9c:	cbz	w8, 4124a0 <udev_event_apply_format+0x684>
  411ea0:	add	x0, sp, #0x438
  411ea4:	add	x2, sp, #0x434
  411ea8:	add	x3, sp, #0x34
  411eac:	mov	w1, wzr
  411eb0:	bl	412708 <get_subst_type>
  411eb4:	mov	w24, w0
  411eb8:	tbnz	w0, #31, 4124ac <udev_event_apply_format+0x690>
  411ebc:	cbz	w24, 411f1c <udev_event_apply_format+0x100>
  411ec0:	ldr	w24, [sp, #1076]
  411ec4:	ldr	x27, [x22]
  411ec8:	str	xzr, [x28, #536]
  411ecc:	str	x20, [x28, #528]
  411ed0:	cmp	w24, #0xf
  411ed4:	b.hi	41260c <udev_event_apply_format+0x7f0>  // b.pmore
  411ed8:	adr	x8, 411ee8 <udev_event_apply_format+0xcc>
  411edc:	ldrb	w9, [x26, x24]
  411ee0:	add	x8, x8, x9, lsl #2
  411ee4:	br	x8
  411ee8:	add	x1, sp, #0x448
  411eec:	mov	x0, x27
  411ef0:	bl	40aa60 <sd_device_get_devnum@plt>
  411ef4:	tbz	w0, #31, 411f00 <udev_event_apply_format+0xe4>
  411ef8:	cmn	w0, #0x2
  411efc:	b.ne	411fc8 <udev_event_apply_format+0x1ac>  // b.any
  411f00:	tbnz	w0, #31, 412230 <udev_event_apply_format+0x414>
  411f04:	ldr	x8, [x28, #16]
  411f08:	cmp	w24, #0x8
  411f0c:	b.ne	41224c <udev_event_apply_format+0x430>  // b.any
  411f10:	lsr	x3, x8, #32
  411f14:	bfxil	w3, w8, #8, #12
  411f18:	b	412254 <udev_event_apply_format+0x438>
  411f1c:	subs	x8, x21, #0x1
  411f20:	b.ls	4124a0 <udev_event_apply_format+0x684>  // b.plast
  411f24:	ldr	x9, [x28]
  411f28:	mov	x21, x8
  411f2c:	add	x10, x9, #0x1
  411f30:	str	x10, [x28]
  411f34:	ldrb	w9, [x9]
  411f38:	strb	w9, [x20], #1
  411f3c:	ldr	x8, [x28]
  411f40:	ldrb	w8, [x8]
  411f44:	cbnz	w8, 411ea0 <udev_event_apply_format+0x84>
  411f48:	b	4124a0 <udev_event_apply_format+0x684>
  411f4c:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  411f50:	sub	x0, x29, #0x18
  411f54:	mov	x1, x21
  411f58:	add	x2, x2, #0xb36
  411f5c:	b	41213c <udev_event_apply_format+0x320>
  411f60:	add	x1, sp, #0x448
  411f64:	mov	x0, x27
  411f68:	bl	40ab60 <sd_device_get_parent@plt>
  411f6c:	cmn	w0, #0x13
  411f70:	b.eq	412440 <udev_event_apply_format+0x624>  // b.none
  411f74:	tbnz	w0, #31, 411fc8 <udev_event_apply_format+0x1ac>
  411f78:	ldr	x0, [x28, #16]
  411f7c:	sub	x1, x29, #0x10
  411f80:	bl	40a840 <sd_device_get_devname@plt>
  411f84:	cmn	w0, #0x2
  411f88:	b.eq	412440 <udev_event_apply_format+0x624>  // b.none
  411f8c:	tbz	w0, #31, 411fac <udev_event_apply_format+0x190>
  411f90:	b	411fc8 <udev_event_apply_format+0x1ac>
  411f94:	ldr	x2, [x22, #24]
  411f98:	cbnz	x2, 412134 <udev_event_apply_format+0x318>
  411f9c:	sub	x1, x29, #0x10
  411fa0:	mov	x0, x27
  411fa4:	bl	40a840 <sd_device_get_devname@plt>
  411fa8:	tbnz	w0, #31, 411fb8 <udev_event_apply_format+0x19c>
  411fac:	ldr	x8, [x28, #536]
  411fb0:	add	x2, x8, #0x5
  411fb4:	b	412134 <udev_event_apply_format+0x318>
  411fb8:	sub	x1, x29, #0x10
  411fbc:	mov	x0, x27
  411fc0:	bl	40a780 <sd_device_get_sysname@plt>
  411fc4:	tbz	w0, #31, 412130 <udev_event_apply_format+0x314>
  411fc8:	sxtw	x27, w0
  411fcc:	b	41244c <udev_event_apply_format+0x630>
  411fd0:	sub	x1, x29, #0x10
  411fd4:	mov	x0, x27
  411fd8:	bl	40acc0 <sd_device_get_sysnum@plt>
  411fdc:	cmn	w0, #0x2
  411fe0:	b.eq	412440 <udev_event_apply_format+0x624>  // b.none
  411fe4:	b	41212c <udev_event_apply_format+0x310>
  411fe8:	ldrb	w8, [sp, #52]
  411fec:	cbz	w8, 412220 <udev_event_apply_format+0x404>
  411ff0:	add	x1, sp, #0x34
  411ff4:	sub	x2, x29, #0x10
  411ff8:	mov	x0, x27
  411ffc:	bl	40aa50 <sd_device_get_property_value@plt>
  412000:	cmn	w0, #0x2
  412004:	b.ne	41212c <udev_event_apply_format+0x310>  // b.any
  412008:	b	412440 <udev_event_apply_format+0x624>
  41200c:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  412010:	sub	x0, x29, #0x18
  412014:	mov	x1, x21
  412018:	add	x2, x2, #0xb3b
  41201c:	b	41213c <udev_event_apply_format+0x320>
  412020:	ldr	x0, [x22, #8]
  412024:	cbz	x0, 412440 <udev_event_apply_format+0x624>
  412028:	sub	x1, x29, #0x10
  41202c:	bl	40a780 <sd_device_get_sysname@plt>
  412030:	tbz	w0, #31, 412130 <udev_event_apply_format+0x314>
  412034:	b	411fc8 <udev_event_apply_format+0x1ac>
  412038:	sub	x1, x29, #0x10
  41203c:	mov	x0, x27
  412040:	bl	40a840 <sd_device_get_devname@plt>
  412044:	cmn	w0, #0x2
  412048:	b.ne	41212c <udev_event_apply_format+0x310>  // b.any
  41204c:	b	412440 <udev_event_apply_format+0x624>
  412050:	ldrb	w8, [sp, #52]
  412054:	cbz	w8, 412220 <udev_event_apply_format+0x404>
  412058:	add	x0, sp, #0x34
  41205c:	add	x1, sp, #0x448
  412060:	mov	w2, #0x200                 	// #512
  412064:	mov	w3, #0x1                   	// #1
  412068:	bl	40acd0 <util_resolve_subsys_kernel@plt>
  41206c:	cbz	w0, 41226c <udev_event_apply_format+0x450>
  412070:	ldr	x2, [x28, #536]
  412074:	cbnz	x2, 412090 <udev_event_apply_format+0x274>
  412078:	add	x1, sp, #0x34
  41207c:	sub	x2, x29, #0x10
  412080:	mov	x0, x27
  412084:	bl	40ace0 <sd_device_get_sysattr_value@plt>
  412088:	ldr	x2, [x28, #536]
  41208c:	cbz	x2, 412310 <udev_event_apply_format+0x4f4>
  412090:	add	x8, sp, #0x448
  412094:	cmp	x2, x8
  412098:	b.eq	412274 <udev_event_apply_format+0x458>  // b.none
  41209c:	add	x0, sp, #0x448
  4120a0:	mov	w1, #0x200                 	// #512
  4120a4:	bl	40ac50 <strscpy@plt>
  4120a8:	b	412274 <udev_event_apply_format+0x458>
  4120ac:	mov	x0, x27
  4120b0:	bl	40acf0 <sd_device_get_devlink_first@plt>
  4120b4:	str	x0, [x28, #536]
  4120b8:	cbz	x0, 412440 <udev_event_apply_format+0x624>
  4120bc:	mov	w8, #0x1                   	// #1
  4120c0:	mov	x24, x21
  4120c4:	b	4120f8 <udev_event_apply_format+0x2dc>
  4120c8:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  4120cc:	add	x2, x2, #0xb34
  4120d0:	mov	x4, xzr
  4120d4:	bl	40ad00 <strpcpyl@plt>
  4120d8:	mov	x24, x0
  4120dc:	mov	x0, x27
  4120e0:	bl	40ad10 <sd_device_get_devlink_next@plt>
  4120e4:	ldr	x8, [x28, #528]
  4120e8:	str	x0, [x28, #536]
  4120ec:	cmp	x8, x20
  4120f0:	cset	w8, eq  // eq = none
  4120f4:	cbz	x0, 412228 <udev_event_apply_format+0x40c>
  4120f8:	add	x3, x0, #0x5
  4120fc:	sub	x0, x29, #0x18
  412100:	mov	x1, x24
  412104:	tbz	w8, #0, 4120c8 <udev_event_apply_format+0x2ac>
  412108:	mov	x2, x3
  41210c:	bl	40ad20 <strpcpy@plt>
  412110:	b	4120d8 <udev_event_apply_format+0x2bc>
  412114:	ldr	x0, [x22, #8]
  412118:	cbz	x0, 412440 <udev_event_apply_format+0x624>
  41211c:	sub	x1, x29, #0x10
  412120:	bl	40ad30 <sd_device_get_driver@plt>
  412124:	cmn	w0, #0x2
  412128:	b.eq	412440 <udev_event_apply_format+0x624>  // b.none
  41212c:	tbnz	w0, #31, 411fc8 <udev_event_apply_format+0x1ac>
  412130:	ldr	x2, [x28, #536]
  412134:	sub	x0, x29, #0x18
  412138:	mov	x1, x21
  41213c:	bl	40ad20 <strpcpy@plt>
  412140:	ldr	x8, [x28, #528]
  412144:	sub	x27, x8, x20
  412148:	b	41244c <udev_event_apply_format+0x630>
  41214c:	str	wzr, [sp, #1088]
  412150:	ldr	x26, [x22, #32]
  412154:	cbz	x26, 412438 <udev_event_apply_format+0x61c>
  412158:	ldrb	w8, [sp, #52]
  41215c:	cbz	w8, 412238 <udev_event_apply_format+0x41c>
  412160:	add	x0, sp, #0x34
  412164:	add	x1, sp, #0x440
  412168:	bl	412d00 <safe_atou_optional_plus>
  41216c:	tbnz	w0, #31, 412300 <udev_event_apply_format+0x4e4>
  412170:	ldr	w24, [sp, #1088]
  412174:	ldr	x26, [x22, #32]
  412178:	cbz	w24, 412238 <udev_event_apply_format+0x41c>
  41217c:	str	x0, [sp, #40]
  412180:	cbz	x26, 412198 <udev_event_apply_format+0x37c>
  412184:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  412188:	mov	x0, x26
  41218c:	add	x1, x1, #0xacd
  412190:	bl	40ad40 <strspn@plt>
  412194:	add	x26, x26, x0
  412198:	cmp	w24, #0x2
  41219c:	b.cc	412340 <udev_event_apply_format+0x524>  // b.lo, b.ul, b.last
  4121a0:	ldrb	w8, [x26]
  4121a4:	mov	w25, #0x1                   	// #1
  4121a8:	tst	w8, #0xff
  4121ac:	b.ne	4121bc <udev_event_apply_format+0x3a0>  // b.any
  4121b0:	b	4121e0 <udev_event_apply_format+0x3c4>
  4121b4:	ldrb	w8, [x26, #1]!
  4121b8:	cbz	w8, 4121e0 <udev_event_apply_format+0x3c4>
  4121bc:	and	w9, w8, #0xff
  4121c0:	cmp	w9, #0x3f
  4121c4:	b.hi	4121b4 <udev_event_apply_format+0x398>  // b.pmore
  4121c8:	mov	w9, #0x1                   	// #1
  4121cc:	lsl	x8, x9, x8
  4121d0:	mov	x9, #0x2601                	// #9729
  4121d4:	movk	x9, #0x1, lsl #32
  4121d8:	and	x8, x8, x9
  4121dc:	cbz	x8, 4121b4 <udev_event_apply_format+0x398>
  4121e0:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  4121e4:	mov	x0, x26
  4121e8:	add	x1, x1, #0xacd
  4121ec:	bl	40ad40 <strspn@plt>
  4121f0:	add	x26, x26, x0
  4121f4:	ldrb	w8, [x26]
  4121f8:	cbz	w8, 412338 <udev_event_apply_format+0x51c>
  4121fc:	add	w25, w25, #0x1
  412200:	cmp	w25, w24
  412204:	b.ne	4121a8 <udev_event_apply_format+0x38c>  // b.any
  412208:	b	412340 <udev_event_apply_format+0x524>
  41220c:	sub	x1, x29, #0x10
  412210:	mov	x0, x27
  412214:	bl	40aa30 <sd_device_get_devpath@plt>
  412218:	tbz	w0, #31, 412130 <udev_event_apply_format+0x314>
  41221c:	b	411fc8 <udev_event_apply_format+0x1ac>
  412220:	mov	x27, #0xffffffffffffffea    	// #-22
  412224:	b	41244c <udev_event_apply_format+0x630>
  412228:	b.ne	412140 <udev_event_apply_format+0x324>  // b.any
  41222c:	b	412440 <udev_event_apply_format+0x624>
  412230:	mov	w3, wzr
  412234:	b	412254 <udev_event_apply_format+0x438>
  412238:	sub	x0, x29, #0x18
  41223c:	mov	x1, x21
  412240:	mov	x2, x26
  412244:	bl	40ad20 <strpcpy@plt>
  412248:	b	4123c0 <udev_event_apply_format+0x5a4>
  41224c:	lsr	x3, x8, #12
  412250:	bfxil	w3, w8, #0, #8
  412254:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  412258:	sub	x0, x29, #0x18
  41225c:	mov	x1, x21
  412260:	add	x2, x2, #0xaca
  412264:	bl	40ad50 <strpcpyf@plt>
  412268:	b	412140 <udev_event_apply_format+0x324>
  41226c:	add	x8, sp, #0x448
  412270:	str	x8, [x28, #536]
  412274:	add	x0, sp, #0x448
  412278:	mov	x1, xzr
  41227c:	bl	40ad60 <delete_trailing_chars@plt>
  412280:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  412284:	add	x0, sp, #0x448
  412288:	add	x1, x1, #0xb14
  41228c:	bl	40ad70 <util_replace_chars@plt>
  412290:	mov	x24, x0
  412294:	cmp	w24, #0x1
  412298:	b.lt	4122f4 <udev_event_apply_format+0x4d8>  // b.tstop
  41229c:	str	xzr, [x28, #8]
  4122a0:	cbz	x27, 4122b4 <udev_event_apply_format+0x498>
  4122a4:	mov	w0, #0x1                   	// #1
  4122a8:	bl	40a2c0 <log_get_max_level_realm@plt>
  4122ac:	cmp	w0, #0x7
  4122b0:	b.ge	412478 <udev_event_apply_format+0x65c>  // b.tcont
  4122b4:	mov	x6, xzr
  4122b8:	cmp	x6, #0x0
  4122bc:	adrp	x8, 436000 <worker_hash_op+0x1df8>
  4122c0:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  4122c4:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  4122c8:	csel	x5, xzr, x25, eq  // eq = none
  4122cc:	add	x8, x8, #0xb1b
  4122d0:	mov	w0, #0x7                   	// #7
  4122d4:	mov	w3, #0x16e                 	// #366
  4122d8:	mov	w1, wzr
  4122dc:	add	x2, x2, #0x516
  4122e0:	add	x4, x4, #0xad2
  4122e4:	mov	x7, xzr
  4122e8:	str	w24, [sp, #16]
  4122ec:	stp	xzr, x8, [sp]
  4122f0:	bl	40a730 <log_object_internal@plt>
  4122f4:	sub	x0, x29, #0x18
  4122f8:	add	x2, sp, #0x448
  4122fc:	b	412138 <udev_event_apply_format+0x31c>
  412300:	adrp	x26, 441000 <worker_hash_op+0xcdf8>
  412304:	sxtw	x27, w0
  412308:	add	x26, x26, #0xe78
  41230c:	b	41244c <udev_event_apply_format+0x630>
  412310:	ldr	x0, [x22, #8]
  412314:	cbz	x0, 412440 <udev_event_apply_format+0x624>
  412318:	cmp	x0, x27
  41231c:	b.eq	412440 <udev_event_apply_format+0x624>  // b.none
  412320:	add	x1, sp, #0x34
  412324:	sub	x2, x29, #0x10
  412328:	bl	40ace0 <sd_device_get_sysattr_value@plt>
  41232c:	ldr	x2, [x28, #536]
  412330:	cbnz	x2, 412090 <udev_event_apply_format+0x274>
  412334:	b	412440 <udev_event_apply_format+0x624>
  412338:	cmp	w25, w24
  41233c:	b.ne	4123cc <udev_event_apply_format+0x5b0>  // b.any
  412340:	ldr	x8, [sp, #40]
  412344:	cbz	w8, 412364 <udev_event_apply_format+0x548>
  412348:	sub	x0, x29, #0x18
  41234c:	mov	x1, x21
  412350:	mov	x2, x26
  412354:	bl	40ad20 <strpcpy@plt>
  412358:	adrp	x25, 435000 <worker_hash_op+0xdf8>
  41235c:	add	x25, x25, #0x7f
  412360:	b	4123c0 <udev_event_apply_format+0x5a4>
  412364:	ldrb	w9, [x26]
  412368:	adrp	x25, 435000 <worker_hash_op+0xdf8>
  41236c:	mov	x8, x26
  412370:	add	x25, x25, #0x7f
  412374:	cbz	w9, 4123ac <udev_event_apply_format+0x590>
  412378:	mov	x8, x26
  41237c:	b	412388 <udev_event_apply_format+0x56c>
  412380:	ldrb	w9, [x8, #1]!
  412384:	cbz	w9, 4123ac <udev_event_apply_format+0x590>
  412388:	and	w10, w9, #0xff
  41238c:	cmp	w10, #0x3f
  412390:	b.hi	412380 <udev_event_apply_format+0x564>  // b.pmore
  412394:	mov	w10, #0x1                   	// #1
  412398:	lsl	x9, x10, x9
  41239c:	mov	x10, #0x2601                	// #9729
  4123a0:	movk	x10, #0x1, lsl #32
  4123a4:	and	x9, x9, x10
  4123a8:	cbz	x9, 412380 <udev_event_apply_format+0x564>
  4123ac:	sub	x3, x8, x26
  4123b0:	sub	x0, x29, #0x18
  4123b4:	mov	x1, x21
  4123b8:	mov	x2, x26
  4123bc:	bl	40ad80 <strnpcpy@plt>
  4123c0:	adrp	x26, 441000 <worker_hash_op+0xcdf8>
  4123c4:	add	x26, x26, #0xe78
  4123c8:	b	412140 <udev_event_apply_format+0x324>
  4123cc:	str	xzr, [x28, #16]
  4123d0:	cbz	x27, 4123f4 <udev_event_apply_format+0x5d8>
  4123d4:	mov	w0, #0x1                   	// #1
  4123d8:	bl	40a2c0 <log_get_max_level_realm@plt>
  4123dc:	adrp	x25, 435000 <worker_hash_op+0xdf8>
  4123e0:	cmp	w0, #0x7
  4123e4:	add	x25, x25, #0x7f
  4123e8:	b.ge	41248c <udev_event_apply_format+0x670>  // b.tcont
  4123ec:	mov	x6, xzr
  4123f0:	b	412400 <udev_event_apply_format+0x5e4>
  4123f4:	adrp	x25, 435000 <worker_hash_op+0xdf8>
  4123f8:	mov	x6, xzr
  4123fc:	add	x25, x25, #0x7f
  412400:	cmp	x6, #0x0
  412404:	adrp	x8, 436000 <worker_hash_op+0x1df8>
  412408:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  41240c:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  412410:	csel	x5, xzr, x25, eq  // eq = none
  412414:	add	x8, x8, #0xaea
  412418:	mov	w0, #0x7                   	// #7
  41241c:	mov	w3, #0x142                 	// #322
  412420:	mov	w1, wzr
  412424:	add	x2, x2, #0x516
  412428:	add	x4, x4, #0xad2
  41242c:	mov	x7, xzr
  412430:	stp	xzr, x8, [sp]
  412434:	bl	40a730 <log_object_internal@plt>
  412438:	adrp	x26, 441000 <worker_hash_op+0xcdf8>
  41243c:	add	x26, x26, #0xe78
  412440:	ldr	x8, [x28, #528]
  412444:	mov	x27, xzr
  412448:	strb	wzr, [x8]
  41244c:	tbnz	x27, #63, 412504 <udev_event_apply_format+0x6e8>
  412450:	ldr	w8, [sp, #1076]
  412454:	cmp	w8, #0xa
  412458:	b.eq	411e8c <udev_event_apply_format+0x70>  // b.none
  41245c:	tbz	w23, #0, 411e8c <udev_event_apply_format+0x70>
  412460:	mov	x0, x20
  412464:	mov	x1, x20
  412468:	mov	x2, x27
  41246c:	bl	40ad90 <util_replace_whitespace@plt>
  412470:	mov	x27, x0
  412474:	b	411e8c <udev_event_apply_format+0x70>
  412478:	add	x1, sp, #0x440
  41247c:	mov	x0, x27
  412480:	bl	40a780 <sd_device_get_sysname@plt>
  412484:	ldr	x6, [x28, #8]
  412488:	b	4122b8 <udev_event_apply_format+0x49c>
  41248c:	add	x1, sp, #0x448
  412490:	mov	x0, x27
  412494:	bl	40a780 <sd_device_get_sysname@plt>
  412498:	ldr	x6, [x28, #16]
  41249c:	b	412400 <udev_event_apply_format+0x5e4>
  4124a0:	cbz	x21, 4126e4 <udev_event_apply_format+0x8c8>
  4124a4:	strb	wzr, [x20]
  4124a8:	b	4125c0 <udev_event_apply_format+0x7a4>
  4124ac:	str	xzr, [x28, #16]
  4124b0:	ldr	x20, [x22]
  4124b4:	cbz	x20, 4124c8 <udev_event_apply_format+0x6ac>
  4124b8:	mov	w0, #0x1                   	// #1
  4124bc:	bl	40a2c0 <log_get_max_level_realm@plt>
  4124c0:	cmp	w0, #0x4
  4124c4:	b.ge	4125e4 <udev_event_apply_format+0x7c8>  // b.tcont
  4124c8:	mov	x6, xzr
  4124cc:	cmp	x6, #0x0
  4124d0:	adrp	x8, 436000 <worker_hash_op+0x1df8>
  4124d4:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  4124d8:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  4124dc:	csel	x5, xzr, x25, eq  // eq = none
  4124e0:	add	x8, x8, #0x5f0
  4124e4:	add	x2, x2, #0x516
  4124e8:	add	x4, x4, #0x5d8
  4124ec:	mov	w0, #0x4                   	// #4
  4124f0:	mov	w3, #0x1ca                 	// #458
  4124f4:	mov	w1, w24
  4124f8:	stp	x8, x19, [sp, #8]
  4124fc:	str	xzr, [sp]
  412500:	b	4125b4 <udev_event_apply_format+0x798>
  412504:	str	xzr, [x28, #16]
  412508:	ldr	x19, [x22]
  41250c:	cbz	x19, 412520 <udev_event_apply_format+0x704>
  412510:	mov	w0, #0x1                   	// #1
  412514:	bl	40a2c0 <log_get_max_level_realm@plt>
  412518:	cmp	w0, #0x4
  41251c:	b.ge	4125f8 <udev_event_apply_format+0x7dc>  // b.tcont
  412520:	mov	x6, xzr
  412524:	ldrsw	x9, [sp, #1076]
  412528:	cmp	x6, #0x0
  41252c:	csel	x5, xzr, x25, eq  // eq = none
  412530:	mov	x8, xzr
  412534:	cmp	w9, #0xf
  412538:	b.hi	412558 <udev_event_apply_format+0x73c>  // b.pmore
  41253c:	adrp	x8, 441000 <worker_hash_op+0xcdf8>
  412540:	add	x8, x8, #0xed8
  412544:	ldr	x8, [x8, x9, lsl #3]
  412548:	adrp	x10, 457000 <__FRAME_END__+0x149b8>
  41254c:	add	x10, x10, #0x48
  412550:	lsl	x8, x8, #4
  412554:	ldr	x8, [x10, x8]
  412558:	cmp	w9, #0xf
  41255c:	b.hi	412580 <udev_event_apply_format+0x764>  // b.pmore
  412560:	adrp	x10, 441000 <worker_hash_op+0xcdf8>
  412564:	add	x10, x10, #0xed8
  412568:	ldr	x9, [x10, x9, lsl #3]
  41256c:	adrp	x10, 457000 <__FRAME_END__+0x149b8>
  412570:	add	x10, x10, #0x48
  412574:	add	x9, x10, x9, lsl #4
  412578:	ldrb	w9, [x9, #8]
  41257c:	b	412584 <udev_event_apply_format+0x768>
  412580:	mov	w9, wzr
  412584:	str	x8, [sp, #16]
  412588:	adrp	x8, 436000 <worker_hash_op+0x1df8>
  41258c:	add	x8, x8, #0x614
  412590:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  412594:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  412598:	str	w9, [sp, #24]
  41259c:	add	x2, x2, #0x516
  4125a0:	add	x4, x4, #0x5d8
  4125a4:	stp	xzr, x8, [sp]
  4125a8:	mov	w0, #0x4                   	// #4
  4125ac:	mov	w3, #0x1d7                 	// #471
  4125b0:	mov	w1, w27
  4125b4:	mov	x7, xzr
  4125b8:	bl	40a730 <log_object_internal@plt>
  4125bc:	sxtw	x21, w0
  4125c0:	mov	x0, x21
  4125c4:	add	sp, sp, #0x660
  4125c8:	ldp	x20, x19, [sp, #80]
  4125cc:	ldp	x22, x21, [sp, #64]
  4125d0:	ldp	x24, x23, [sp, #48]
  4125d4:	ldp	x26, x25, [sp, #32]
  4125d8:	ldp	x28, x27, [sp, #16]
  4125dc:	ldp	x29, x30, [sp], #96
  4125e0:	ret
  4125e4:	add	x1, sp, #0x448
  4125e8:	mov	x0, x20
  4125ec:	bl	40a780 <sd_device_get_sysname@plt>
  4125f0:	ldr	x6, [x28, #16]
  4125f4:	b	4124cc <udev_event_apply_format+0x6b0>
  4125f8:	add	x1, sp, #0x448
  4125fc:	mov	x0, x19
  412600:	bl	40a780 <sd_device_get_sysname@plt>
  412604:	ldr	x6, [x28, #16]
  412608:	b	412524 <udev_event_apply_format+0x708>
  41260c:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  412610:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  412614:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  412618:	add	x1, x1, #0xb40
  41261c:	add	x2, x2, #0x516
  412620:	add	x4, x4, #0xb61
  412624:	mov	w0, #0x1                   	// #1
  412628:	mov	w3, #0x1ad                 	// #429
  41262c:	bl	40a620 <log_assert_failed_unreachable_realm@plt>
  412630:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  412634:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  412638:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  41263c:	add	x1, x1, #0x1bf
  412640:	add	x2, x2, #0x516
  412644:	add	x4, x4, #0x569
  412648:	mov	w0, #0x1                   	// #1
  41264c:	mov	w3, #0x1bd                 	// #445
  412650:	bl	40a630 <log_assert_failed_realm@plt>
  412654:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  412658:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  41265c:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  412660:	add	x1, x1, #0x5bb
  412664:	add	x2, x2, #0x516
  412668:	add	x4, x4, #0x569
  41266c:	mov	w0, #0x1                   	// #1
  412670:	mov	w3, #0x1be                 	// #446
  412674:	bl	40a630 <log_assert_failed_realm@plt>
  412678:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  41267c:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  412680:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  412684:	add	x1, x1, #0x5c6
  412688:	add	x2, x2, #0x516
  41268c:	add	x4, x4, #0x569
  412690:	mov	w0, #0x1                   	// #1
  412694:	mov	w3, #0x1bf                 	// #447
  412698:	bl	40a630 <log_assert_failed_realm@plt>
  41269c:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  4126a0:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  4126a4:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  4126a8:	add	x1, x1, #0x5ca
  4126ac:	add	x2, x2, #0x516
  4126b0:	add	x4, x4, #0x569
  4126b4:	mov	w0, #0x1                   	// #1
  4126b8:	mov	w3, #0x1c0                 	// #448
  4126bc:	bl	40a630 <log_assert_failed_realm@plt>
  4126c0:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  4126c4:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  4126c8:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  4126cc:	add	x1, x1, #0x5cf
  4126d0:	add	x2, x2, #0x516
  4126d4:	add	x4, x4, #0x569
  4126d8:	mov	w0, #0x1                   	// #1
  4126dc:	mov	w3, #0x1c1                 	// #449
  4126e0:	bl	40a630 <log_assert_failed_realm@plt>
  4126e4:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  4126e8:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  4126ec:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  4126f0:	add	x1, x1, #0x65d
  4126f4:	add	x2, x2, #0x516
  4126f8:	add	x4, x4, #0x569
  4126fc:	mov	w0, #0x1                   	// #1
  412700:	mov	w3, #0x1e3                 	// #483
  412704:	bl	40a630 <log_assert_failed_realm@plt>

0000000000412708 <get_subst_type>:
  412708:	stp	x29, x30, [sp, #-80]!
  41270c:	stp	x24, x23, [sp, #32]
  412710:	stp	x22, x21, [sp, #48]
  412714:	stp	x20, x19, [sp, #64]
  412718:	ldr	x22, [x0]
  41271c:	str	x25, [sp, #16]
  412720:	mov	x29, sp
  412724:	cbz	x22, 412b88 <get_subst_type+0x480>
  412728:	mov	x20, x2
  41272c:	cbz	x2, 412bac <get_subst_type+0x4a4>
  412730:	ldrb	w8, [x22]
  412734:	mov	x21, x3
  412738:	mov	x19, x0
  41273c:	mov	w23, w1
  412740:	cmp	w8, #0x25
  412744:	b.eq	412768 <get_subst_type+0x60>  // b.none
  412748:	cmp	w8, #0x24
  41274c:	b.ne	4127a4 <get_subst_type+0x9c>  // b.any
  412750:	ldrb	w8, [x22, #1]!
  412754:	cmp	w8, #0x24
  412758:	b.ne	4127ac <get_subst_type+0xa4>  // b.any
  41275c:	mov	w0, wzr
  412760:	str	x22, [x19]
  412764:	b	412ac8 <get_subst_type+0x3c0>
  412768:	mov	x8, x22
  41276c:	ldrb	w9, [x8, #1]!
  412770:	sub	w9, w9, #0x25
  412774:	cmp	w9, #0x4e
  412778:	b.hi	4129a8 <get_subst_type+0x2a0>  // b.pmore
  41277c:	adrp	x10, 441000 <worker_hash_op+0xcdf8>
  412780:	add	x10, x10, #0xe88
  412784:	adr	x11, 412798 <get_subst_type+0x90>
  412788:	ldrb	w12, [x10, x9]
  41278c:	add	x11, x11, x12, lsl #2
  412790:	mov	x24, xzr
  412794:	br	x11
  412798:	mov	w0, wzr
  41279c:	str	x8, [x19]
  4127a0:	b	412ac8 <get_subst_type+0x3c0>
  4127a4:	mov	w0, wzr
  4127a8:	b	412ac8 <get_subst_type+0x3c0>
  4127ac:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  4127b0:	add	x1, x1, #0xa5c
  4127b4:	mov	w2, #0x7                   	// #7
  4127b8:	mov	x0, x22
  4127bc:	mov	w25, #0x7                   	// #7
  4127c0:	bl	40a6a0 <strncmp@plt>
  4127c4:	cbz	w0, 4129b8 <get_subst_type+0x2b0>
  4127c8:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  4127cc:	add	x1, x1, #0xa64
  4127d0:	mov	w2, #0x8                   	// #8
  4127d4:	mov	x0, x22
  4127d8:	mov	w25, #0x8                   	// #8
  4127dc:	bl	40a6a0 <strncmp@plt>
  4127e0:	cbz	w0, 4129c4 <get_subst_type+0x2bc>
  4127e4:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  4127e8:	add	x1, x1, #0xa6d
  4127ec:	mov	w2, #0x4                   	// #4
  4127f0:	mov	x0, x22
  4127f4:	mov	w25, #0x4                   	// #4
  4127f8:	bl	40a6a0 <strncmp@plt>
  4127fc:	cbz	w0, 4129d0 <get_subst_type+0x2c8>
  412800:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  412804:	add	x1, x1, #0xa72
  412808:	mov	w2, #0x5                   	// #5
  41280c:	mov	x0, x22
  412810:	mov	w25, #0x5                   	// #5
  412814:	bl	40a6a0 <strncmp@plt>
  412818:	cbz	w0, 412ae0 <get_subst_type+0x3d8>
  41281c:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  412820:	add	x1, x1, #0xa78
  412824:	mov	w2, #0x3                   	// #3
  412828:	mov	x0, x22
  41282c:	mov	w25, #0x3                   	// #3
  412830:	bl	40a6a0 <strncmp@plt>
  412834:	cbz	w0, 412aec <get_subst_type+0x3e4>
  412838:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  41283c:	add	x1, x1, #0xa7c
  412840:	mov	w2, #0x6                   	// #6
  412844:	mov	x0, x22
  412848:	mov	w25, #0x6                   	// #6
  41284c:	bl	40a6a0 <strncmp@plt>
  412850:	cbz	w0, 412af8 <get_subst_type+0x3f0>
  412854:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  412858:	add	x1, x1, #0xa83
  41285c:	mov	w2, #0x6                   	// #6
  412860:	mov	x0, x22
  412864:	mov	w24, #0x6                   	// #6
  412868:	bl	40a6a0 <strncmp@plt>
  41286c:	mov	w25, #0x6                   	// #6
  412870:	cbz	w0, 4129bc <get_subst_type+0x2b4>
  412874:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  412878:	add	x1, x1, #0xa8a
  41287c:	mov	w2, #0x6                   	// #6
  412880:	mov	x0, x22
  412884:	mov	w25, #0x6                   	// #6
  412888:	bl	40a6a0 <strncmp@plt>
  41288c:	cbz	w0, 412b04 <get_subst_type+0x3fc>
  412890:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  412894:	add	x1, x1, #0xa91
  412898:	mov	w2, #0x7                   	// #7
  41289c:	mov	x0, x22
  4128a0:	mov	w25, #0x7                   	// #7
  4128a4:	bl	40a6a0 <strncmp@plt>
  4128a8:	cbz	w0, 412b10 <get_subst_type+0x408>
  4128ac:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  4128b0:	add	x1, x1, #0xa99
  4128b4:	mov	w2, #0x2                   	// #2
  4128b8:	mov	x0, x22
  4128bc:	mov	w25, #0x2                   	// #2
  4128c0:	bl	40a6a0 <strncmp@plt>
  4128c4:	cbz	w0, 412b1c <get_subst_type+0x414>
  4128c8:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  4128cc:	add	x1, x1, #0xa9c
  4128d0:	mov	w2, #0x5                   	// #5
  4128d4:	mov	x0, x22
  4128d8:	mov	w25, #0x5                   	// #5
  4128dc:	bl	40a6a0 <strncmp@plt>
  4128e0:	cbz	w0, 412b28 <get_subst_type+0x420>
  4128e4:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  4128e8:	add	x1, x1, #0xaa2
  4128ec:	mov	w2, #0x5                   	// #5
  4128f0:	mov	x0, x22
  4128f4:	mov	w25, #0x5                   	// #5
  4128f8:	bl	40a6a0 <strncmp@plt>
  4128fc:	cbz	w0, 412b34 <get_subst_type+0x42c>
  412900:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  412904:	add	x1, x1, #0xaa8
  412908:	mov	w2, #0x6                   	// #6
  41290c:	mov	x0, x22
  412910:	mov	w25, #0x6                   	// #6
  412914:	bl	40a6a0 <strncmp@plt>
  412918:	cbz	w0, 412b40 <get_subst_type+0x438>
  41291c:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  412920:	add	x1, x1, #0xaaf
  412924:	mov	w2, #0x6                   	// #6
  412928:	mov	x0, x22
  41292c:	mov	w25, #0x6                   	// #6
  412930:	bl	40a6a0 <strncmp@plt>
  412934:	cbz	w0, 412b4c <get_subst_type+0x444>
  412938:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  41293c:	add	x1, x1, #0xab6
  412940:	mov	w2, #0x4                   	// #4
  412944:	mov	x0, x22
  412948:	mov	w25, #0x4                   	// #4
  41294c:	bl	40a6a0 <strncmp@plt>
  412950:	cbz	w0, 412b58 <get_subst_type+0x450>
  412954:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  412958:	add	x1, x1, #0xabb
  41295c:	mov	w2, #0x5                   	// #5
  412960:	mov	x0, x22
  412964:	mov	w25, #0x5                   	// #5
  412968:	bl	40a6a0 <strncmp@plt>
  41296c:	cbz	w0, 412b64 <get_subst_type+0x45c>
  412970:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  412974:	add	x1, x1, #0xac1
  412978:	mov	w2, #0x4                   	// #4
  41297c:	mov	x0, x22
  412980:	mov	w25, #0x4                   	// #4
  412984:	bl	40a6a0 <strncmp@plt>
  412988:	cbz	w0, 412b70 <get_subst_type+0x468>
  41298c:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  412990:	add	x1, x1, #0xac6
  412994:	mov	w2, #0x3                   	// #3
  412998:	mov	x0, x22
  41299c:	mov	w25, #0x3                   	// #3
  4129a0:	bl	40a6a0 <strncmp@plt>
  4129a4:	cbz	w0, 412b7c <get_subst_type+0x474>
  4129a8:	tst	w23, #0x1
  4129ac:	mov	w8, #0xffffffea            	// #-22
  4129b0:	csel	w0, w8, wzr, ne  // ne = any
  4129b4:	b	412ac8 <get_subst_type+0x3c0>
  4129b8:	mov	x24, xzr
  4129bc:	add	x8, x22, x25
  4129c0:	b	412a54 <get_subst_type+0x34c>
  4129c4:	mov	w24, #0x1                   	// #1
  4129c8:	add	x8, x22, x25
  4129cc:	b	412a54 <get_subst_type+0x34c>
  4129d0:	mov	w24, #0x2                   	// #2
  4129d4:	add	x8, x22, x25
  4129d8:	b	412a54 <get_subst_type+0x34c>
  4129dc:	mov	w24, #0x7                   	// #7
  4129e0:	b	412a50 <get_subst_type+0x348>
  4129e4:	mov	w24, #0x6                   	// #6
  4129e8:	b	412a50 <get_subst_type+0x348>
  4129ec:	mov	w24, #0xe                   	// #14
  4129f0:	b	412a50 <get_subst_type+0x348>
  4129f4:	mov	w24, #0x4                   	// #4
  4129f8:	b	412a50 <get_subst_type+0x348>
  4129fc:	mov	w24, #0xf                   	// #15
  412a00:	b	412a50 <get_subst_type+0x348>
  412a04:	mov	w24, #0xa                   	// #10
  412a08:	b	412a50 <get_subst_type+0x348>
  412a0c:	mov	w24, #0xd                   	// #13
  412a10:	b	412a50 <get_subst_type+0x348>
  412a14:	mov	w24, #0x11                  	// #17
  412a18:	b	412a50 <get_subst_type+0x348>
  412a1c:	mov	w24, #0xc                   	// #12
  412a20:	b	412a50 <get_subst_type+0x348>
  412a24:	mov	w24, #0x5                   	// #5
  412a28:	b	412a50 <get_subst_type+0x348>
  412a2c:	mov	w24, #0xb                   	// #11
  412a30:	b	412a50 <get_subst_type+0x348>
  412a34:	mov	w24, #0x8                   	// #8
  412a38:	b	412a50 <get_subst_type+0x348>
  412a3c:	mov	w24, #0x10                  	// #16
  412a40:	b	412a50 <get_subst_type+0x348>
  412a44:	mov	w24, #0x9                   	// #9
  412a48:	b	412a50 <get_subst_type+0x348>
  412a4c:	mov	w24, #0x2                   	// #2
  412a50:	add	x8, x22, #0x2
  412a54:	ldrb	w9, [x8]
  412a58:	cmp	w9, #0x7b
  412a5c:	b.ne	412a90 <get_subst_type+0x388>  // b.any
  412a60:	add	x22, x8, #0x1
  412a64:	mov	w1, #0x7d                  	// #125
  412a68:	mov	x0, x22
  412a6c:	bl	40a7d0 <strchr@plt>
  412a70:	cbz	x0, 412a88 <get_subst_type+0x380>
  412a74:	sub	x3, x0, x22
  412a78:	sub	x8, x3, #0x1
  412a7c:	mov	x23, x0
  412a80:	cmp	x8, #0x3fe
  412a84:	b.ls	412a98 <get_subst_type+0x390>  // b.plast
  412a88:	mov	w0, #0xffffffea            	// #-22
  412a8c:	b	412ac8 <get_subst_type+0x3c0>
  412a90:	strb	wzr, [x21]
  412a94:	b	412aac <get_subst_type+0x3a4>
  412a98:	mov	w1, #0x400                 	// #1024
  412a9c:	mov	x0, x21
  412aa0:	mov	x2, x22
  412aa4:	bl	40ada0 <strnscpy@plt>
  412aa8:	add	x8, x23, #0x1
  412aac:	adrp	x9, 457000 <__FRAME_END__+0x149b8>
  412ab0:	add	x9, x9, #0x48
  412ab4:	add	x9, x9, x24, lsl #4
  412ab8:	ldr	w9, [x9, #12]
  412abc:	mov	w0, #0x1                   	// #1
  412ac0:	str	x8, [x19]
  412ac4:	str	w9, [x20]
  412ac8:	ldp	x20, x19, [sp, #64]
  412acc:	ldp	x22, x21, [sp, #48]
  412ad0:	ldp	x24, x23, [sp, #32]
  412ad4:	ldr	x25, [sp, #16]
  412ad8:	ldp	x29, x30, [sp], #80
  412adc:	ret
  412ae0:	mov	w24, #0x3                   	// #3
  412ae4:	add	x8, x22, x25
  412ae8:	b	412a54 <get_subst_type+0x34c>
  412aec:	mov	w24, #0x4                   	// #4
  412af0:	add	x8, x22, x25
  412af4:	b	412a54 <get_subst_type+0x34c>
  412af8:	mov	w24, #0x5                   	// #5
  412afc:	add	x8, x22, x25
  412b00:	b	412a54 <get_subst_type+0x34c>
  412b04:	mov	w24, #0x7                   	// #7
  412b08:	add	x8, x22, x25
  412b0c:	b	412a54 <get_subst_type+0x34c>
  412b10:	mov	w24, #0x8                   	// #8
  412b14:	add	x8, x22, x25
  412b18:	b	412a54 <get_subst_type+0x34c>
  412b1c:	mov	w24, #0x9                   	// #9
  412b20:	add	x8, x22, x25
  412b24:	b	412a54 <get_subst_type+0x34c>
  412b28:	mov	w24, #0xa                   	// #10
  412b2c:	add	x8, x22, x25
  412b30:	b	412a54 <get_subst_type+0x34c>
  412b34:	mov	w24, #0xb                   	// #11
  412b38:	add	x8, x22, x25
  412b3c:	b	412a54 <get_subst_type+0x34c>
  412b40:	mov	w24, #0xc                   	// #12
  412b44:	add	x8, x22, x25
  412b48:	b	412a54 <get_subst_type+0x34c>
  412b4c:	mov	w24, #0xd                   	// #13
  412b50:	add	x8, x22, x25
  412b54:	b	412a54 <get_subst_type+0x34c>
  412b58:	mov	w24, #0xe                   	// #14
  412b5c:	add	x8, x22, x25
  412b60:	b	412a54 <get_subst_type+0x34c>
  412b64:	mov	w24, #0xf                   	// #15
  412b68:	add	x8, x22, x25
  412b6c:	b	412a54 <get_subst_type+0x34c>
  412b70:	mov	w24, #0x10                  	// #16
  412b74:	add	x8, x22, x25
  412b78:	b	412a54 <get_subst_type+0x34c>
  412b7c:	mov	w24, #0x11                  	// #17
  412b80:	add	x8, x22, x25
  412b84:	b	412a54 <get_subst_type+0x34c>
  412b88:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  412b8c:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  412b90:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  412b94:	add	x1, x1, #0xa4e
  412b98:	add	x2, x2, #0x516
  412b9c:	add	x4, x4, #0xa03
  412ba0:	mov	w0, #0x1                   	// #1
  412ba4:	mov	w3, #0x9d                  	// #157
  412ba8:	bl	40a630 <log_assert_failed_realm@plt>
  412bac:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  412bb0:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  412bb4:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  412bb8:	add	x1, x1, #0xa53
  412bbc:	add	x2, x2, #0x516
  412bc0:	add	x4, x4, #0xa03
  412bc4:	mov	w0, #0x1                   	// #1
  412bc8:	mov	w3, #0x9e                  	// #158
  412bcc:	bl	40a630 <log_assert_failed_realm@plt>

0000000000412bd0 <udev_check_format>:
  412bd0:	stp	x29, x30, [sp, #-64]!
  412bd4:	str	x28, [sp, #16]
  412bd8:	stp	x22, x21, [sp, #32]
  412bdc:	stp	x20, x19, [sp, #48]
  412be0:	mov	x29, sp
  412be4:	sub	sp, sp, #0x420
  412be8:	sub	x22, x29, #0x10
  412bec:	str	x0, [x22]
  412bf0:	ldrb	w8, [x0]
  412bf4:	cbz	w8, 412c98 <udev_check_format+0xc8>
  412bf8:	mov	x19, x2
  412bfc:	mov	x20, x0
  412c00:	mov	x21, x1
  412c04:	b	412c20 <udev_check_format+0x50>
  412c08:	ldr	x8, [x22]
  412c0c:	add	x8, x8, #0x1
  412c10:	str	x8, [x22]
  412c14:	ldr	x8, [x22]
  412c18:	ldrb	w8, [x8]
  412c1c:	cbz	w8, 412c98 <udev_check_format+0xc8>
  412c20:	sub	x0, x29, #0x10
  412c24:	sub	x2, x29, #0x4
  412c28:	add	x3, sp, #0x10
  412c2c:	mov	w1, #0x1                   	// #1
  412c30:	bl	412708 <get_subst_type>
  412c34:	tbnz	w0, #31, 412ca0 <udev_check_format+0xd0>
  412c38:	cbz	w0, 412c08 <udev_check_format+0x38>
  412c3c:	ldur	w8, [x29, #-4]
  412c40:	sub	w9, w8, #0x1
  412c44:	cmp	w9, #0x1
  412c48:	b.hi	412c58 <udev_check_format+0x88>  // b.pmore
  412c4c:	ldrb	w8, [sp, #16]
  412c50:	cbnz	w8, 412c14 <udev_check_format+0x44>
  412c54:	b	412cc4 <udev_check_format+0xf4>
  412c58:	cmp	w8, #0xa
  412c5c:	b.ne	412c14 <udev_check_format+0x44>  // b.any
  412c60:	ldrb	w8, [sp, #16]
  412c64:	cbz	w8, 412c14 <udev_check_format+0x44>
  412c68:	add	x0, sp, #0x10
  412c6c:	add	x1, sp, #0xc
  412c70:	bl	412d00 <safe_atou_optional_plus>
  412c74:	tbz	w0, #31, 412c14 <udev_check_format+0x44>
  412c78:	cbz	x21, 412c88 <udev_check_format+0xb8>
  412c7c:	ldr	x8, [x22]
  412c80:	sub	x8, x8, x20
  412c84:	str	x8, [x21]
  412c88:	cbz	x19, 412ce8 <udev_check_format+0x118>
  412c8c:	adrp	x8, 436000 <worker_hash_op+0x1df8>
  412c90:	add	x8, x8, #0x699
  412c94:	b	412cbc <udev_check_format+0xec>
  412c98:	mov	w0, wzr
  412c9c:	b	412ce8 <udev_check_format+0x118>
  412ca0:	cbz	x21, 412cb0 <udev_check_format+0xe0>
  412ca4:	ldr	x8, [x22]
  412ca8:	sub	x8, x8, x20
  412cac:	str	x8, [x21]
  412cb0:	cbz	x19, 412ce8 <udev_check_format+0x118>
  412cb4:	adrp	x8, 436000 <worker_hash_op+0x1df8>
  412cb8:	add	x8, x8, #0x667
  412cbc:	str	x8, [x19]
  412cc0:	b	412ce8 <udev_check_format+0x118>
  412cc4:	cbz	x21, 412cd4 <udev_check_format+0x104>
  412cc8:	ldr	x8, [x22]
  412ccc:	sub	x8, x8, x20
  412cd0:	str	x8, [x21]
  412cd4:	cbz	x19, 412ce4 <udev_check_format+0x114>
  412cd8:	adrp	x8, 436000 <worker_hash_op+0x1df8>
  412cdc:	add	x8, x8, #0x681
  412ce0:	str	x8, [x19]
  412ce4:	mov	w0, #0xffffffea            	// #-22
  412ce8:	add	sp, sp, #0x420
  412cec:	ldp	x20, x19, [sp, #48]
  412cf0:	ldp	x22, x21, [sp, #32]
  412cf4:	ldr	x28, [sp, #16]
  412cf8:	ldp	x29, x30, [sp], #64
  412cfc:	ret

0000000000412d00 <safe_atou_optional_plus>:
  412d00:	stp	x29, x30, [sp, #-48]!
  412d04:	stp	x22, x21, [sp, #16]
  412d08:	stp	x20, x19, [sp, #32]
  412d0c:	mov	x29, sp
  412d10:	cbz	x0, 412da0 <safe_atou_optional_plus+0xa0>
  412d14:	mov	x19, x1
  412d18:	cbz	x1, 412dc4 <safe_atou_optional_plus+0xc4>
  412d1c:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  412d20:	add	x1, x1, #0xc00
  412d24:	mov	x20, x0
  412d28:	bl	40adb0 <endswith@plt>
  412d2c:	mov	x21, x0
  412d30:	cbz	x0, 412d6c <safe_atou_optional_plus+0x6c>
  412d34:	sub	x1, x21, x20
  412d38:	mov	x0, x20
  412d3c:	bl	40abc0 <strnlen@plt>
  412d40:	add	x8, x0, #0x10
  412d44:	and	x8, x8, #0xfffffffffffffff0
  412d48:	mov	x9, sp
  412d4c:	sub	x22, x9, x8
  412d50:	mov	x2, x0
  412d54:	mov	sp, x22
  412d58:	strb	wzr, [x22, x0]
  412d5c:	mov	x0, x22
  412d60:	mov	x1, x20
  412d64:	bl	40adc0 <memcpy@plt>
  412d68:	mov	x20, x22
  412d6c:	cmp	x21, #0x0
  412d70:	mov	x0, x20
  412d74:	mov	w1, wzr
  412d78:	mov	x2, x19
  412d7c:	cset	w21, ne  // ne = any
  412d80:	bl	40a2e0 <safe_atou_full@plt>
  412d84:	cmp	w0, #0x0
  412d88:	csel	w0, w0, w21, lt  // lt = tstop
  412d8c:	mov	sp, x29
  412d90:	ldp	x20, x19, [sp, #32]
  412d94:	ldp	x22, x21, [sp, #16]
  412d98:	ldp	x29, x30, [sp], #48
  412d9c:	ret
  412da0:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  412da4:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  412da8:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  412dac:	add	x1, x1, #0xbc4
  412db0:	add	x2, x2, #0x516
  412db4:	add	x4, x4, #0xbc6
  412db8:	mov	w0, #0x1                   	// #1
  412dbc:	mov	w3, #0xd7                  	// #215
  412dc0:	bl	40a630 <log_assert_failed_realm@plt>
  412dc4:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  412dc8:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  412dcc:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  412dd0:	add	x1, x1, #0xfa2
  412dd4:	add	x2, x2, #0x516
  412dd8:	add	x4, x4, #0xbc6
  412ddc:	mov	w0, #0x1                   	// #1
  412de0:	mov	w3, #0xd8                  	// #216
  412de4:	bl	40a630 <log_assert_failed_realm@plt>

0000000000412de8 <udev_event_spawn>:
  412de8:	sub	sp, sp, #0xf0
  412dec:	stp	x29, x30, [sp, #144]
  412df0:	add	x29, sp, #0x90
  412df4:	mov	x8, #0xffffffffffffffff    	// #-1
  412df8:	str	x27, [sp, #160]
  412dfc:	stp	x26, x25, [sp, #176]
  412e00:	stp	x24, x23, [sp, #192]
  412e04:	stp	x22, x21, [sp, #208]
  412e08:	stp	x20, x19, [sp, #224]
  412e0c:	stp	x8, x8, [x29, #-16]
  412e10:	stur	xzr, [x29, #-24]
  412e14:	cbz	x0, 4134a8 <udev_event_spawn+0x6c0>
  412e18:	ldr	x8, [x0]
  412e1c:	mov	x21, x0
  412e20:	cbz	x8, 4134cc <udev_event_spawn+0x6e4>
  412e24:	mov	x24, x5
  412e28:	mov	x22, x4
  412e2c:	mov	x20, x3
  412e30:	mov	w25, w2
  412e34:	mov	x23, x1
  412e38:	cbnz	x4, 412e40 <udev_event_spawn+0x58>
  412e3c:	cbnz	x24, 4134f0 <udev_event_spawn+0x708>
  412e40:	cbnz	x22, 412e54 <udev_event_spawn+0x6c>
  412e44:	mov	w0, #0x1                   	// #1
  412e48:	bl	40a2c0 <log_get_max_level_realm@plt>
  412e4c:	cmp	w0, #0x6
  412e50:	b.lt	412ec8 <udev_event_spawn+0xe0>  // b.tstop
  412e54:	mov	w1, #0x800                 	// #2048
  412e58:	sub	x0, x29, #0x8
  412e5c:	movk	w1, #0x8, lsl #16
  412e60:	bl	40add0 <pipe2@plt>
  412e64:	cbz	w0, 412ec8 <udev_event_spawn+0xe0>
  412e68:	str	xzr, [sp, #32]
  412e6c:	ldr	x21, [x21]
  412e70:	bl	40a3e0 <__errno_location@plt>
  412e74:	ldr	w19, [x0]
  412e78:	cbz	x21, 412e8c <udev_event_spawn+0xa4>
  412e7c:	mov	w0, #0x1                   	// #1
  412e80:	bl	40a2c0 <log_get_max_level_realm@plt>
  412e84:	cmp	w0, #0x3
  412e88:	b.ge	41341c <udev_event_spawn+0x634>  // b.tcont
  412e8c:	mov	x6, xzr
  412e90:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  412e94:	add	x8, x8, #0x7f
  412e98:	cmp	x6, #0x0
  412e9c:	csel	x5, xzr, x8, eq  // eq = none
  412ea0:	adrp	x8, 436000 <worker_hash_op+0x1df8>
  412ea4:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  412ea8:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  412eac:	add	x8, x8, #0x733
  412eb0:	add	x2, x2, #0x516
  412eb4:	add	x4, x4, #0x722
  412eb8:	mov	w0, #0x3                   	// #3
  412ebc:	mov	w3, #0x2c7                 	// #711
  412ec0:	stp	x8, x20, [sp, #8]
  412ec4:	b	412f48 <udev_event_spawn+0x160>
  412ec8:	mov	w0, #0x1                   	// #1
  412ecc:	bl	40a2c0 <log_get_max_level_realm@plt>
  412ed0:	cmp	w0, #0x6
  412ed4:	b.lt	412f64 <udev_event_spawn+0x17c>  // b.tstop
  412ed8:	mov	w1, #0x800                 	// #2048
  412edc:	sub	x0, x29, #0x10
  412ee0:	movk	w1, #0x8, lsl #16
  412ee4:	bl	40add0 <pipe2@plt>
  412ee8:	cbz	w0, 412f64 <udev_event_spawn+0x17c>
  412eec:	str	xzr, [sp, #32]
  412ef0:	ldr	x21, [x21]
  412ef4:	bl	40a3e0 <__errno_location@plt>
  412ef8:	ldr	w19, [x0]
  412efc:	cbz	x21, 412f10 <udev_event_spawn+0x128>
  412f00:	mov	w0, #0x1                   	// #1
  412f04:	bl	40a2c0 <log_get_max_level_realm@plt>
  412f08:	cmp	w0, #0x3
  412f0c:	b.ge	413430 <udev_event_spawn+0x648>  // b.tcont
  412f10:	mov	x6, xzr
  412f14:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  412f18:	add	x8, x8, #0x7f
  412f1c:	cmp	x6, #0x0
  412f20:	csel	x5, xzr, x8, eq  // eq = none
  412f24:	adrp	x8, 436000 <worker_hash_op+0x1df8>
  412f28:	add	x8, x8, #0x733
  412f2c:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  412f30:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  412f34:	add	x2, x2, #0x516
  412f38:	add	x4, x4, #0x722
  412f3c:	stp	x8, x20, [sp, #8]
  412f40:	mov	w0, #0x3                   	// #3
  412f44:	mov	w3, #0x2cc                 	// #716
  412f48:	mov	w1, w19
  412f4c:	mov	x7, xzr
  412f50:	str	xzr, [sp]
  412f54:	bl	40a730 <log_object_internal@plt>
  412f58:	mov	w24, w0
  412f5c:	mov	x19, xzr
  412f60:	b	413368 <udev_event_spawn+0x580>
  412f64:	mov	w2, #0x3                   	// #3
  412f68:	mov	x0, x20
  412f6c:	mov	x1, xzr
  412f70:	bl	40ade0 <strv_split_full@plt>
  412f74:	mov	x19, x0
  412f78:	cbz	x0, 41328c <udev_event_spawn+0x4a4>
  412f7c:	ldr	x26, [x19]
  412f80:	cbz	x26, 41322c <udev_event_spawn+0x444>
  412f84:	ldrb	w8, [x26]
  412f88:	cbz	w8, 41322c <udev_event_spawn+0x444>
  412f8c:	mov	x0, x26
  412f90:	bl	40adf0 <path_is_absolute@plt>
  412f94:	tbnz	w0, #0, 412fc0 <udev_event_spawn+0x1d8>
  412f98:	adrp	x0, 436000 <worker_hash_op+0x1df8>
  412f9c:	add	x0, x0, #0x773
  412fa0:	mov	x2, #0xffffffffffffffff    	// #-1
  412fa4:	mov	x1, x26
  412fa8:	bl	40ae00 <path_join_internal@plt>
  412fac:	cbz	x0, 4133a8 <udev_event_spawn+0x5c0>
  412fb0:	mov	x26, x0
  412fb4:	ldr	x0, [x19]
  412fb8:	bl	40a320 <free@plt>
  412fbc:	str	x26, [x19]
  412fc0:	ldr	x0, [x21]
  412fc4:	sub	x1, x29, #0x18
  412fc8:	bl	40ae10 <device_get_properties_strv@plt>
  412fcc:	tbnz	w0, #31, 4132ac <udev_event_spawn+0x4c4>
  412fd0:	str	xzr, [sp, #32]
  412fd4:	ldr	x26, [x21]
  412fd8:	cbz	x26, 412fec <udev_event_spawn+0x204>
  412fdc:	mov	w0, #0x1                   	// #1
  412fe0:	bl	40a2c0 <log_get_max_level_realm@plt>
  412fe4:	cmp	w0, #0x7
  412fe8:	b.ge	413458 <udev_event_spawn+0x670>  // b.tcont
  412fec:	mov	x6, xzr
  412ff0:	adrp	x27, 435000 <worker_hash_op+0xdf8>
  412ff4:	add	x27, x27, #0x7f
  412ff8:	cmp	x6, #0x0
  412ffc:	adrp	x8, 436000 <worker_hash_op+0x1df8>
  413000:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  413004:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  413008:	csel	x5, xzr, x27, eq  // eq = none
  41300c:	add	x8, x8, #0x79d
  413010:	add	x2, x2, #0x516
  413014:	add	x4, x4, #0x722
  413018:	mov	w0, #0x7                   	// #7
  41301c:	mov	w3, #0x2e5                 	// #741
  413020:	mov	w1, wzr
  413024:	mov	x7, xzr
  413028:	stp	x8, x20, [sp, #8]
  41302c:	str	xzr, [sp]
  413030:	bl	40a730 <log_object_internal@plt>
  413034:	adrp	x0, 436000 <worker_hash_op+0x1df8>
  413038:	add	x0, x0, #0x7ab
  41303c:	add	x4, sp, #0x1c
  413040:	mov	w3, #0x25                  	// #37
  413044:	mov	x1, xzr
  413048:	mov	x2, xzr
  41304c:	bl	40aa90 <safe_fork_full@plt>
  413050:	mov	w26, w0
  413054:	tbnz	w0, #31, 413308 <udev_event_spawn+0x520>
  413058:	ldur	w1, [x29, #-4]
  41305c:	cbz	w26, 413514 <udev_event_spawn+0x72c>
  413060:	mov	w0, w1
  413064:	and	w25, w25, #0x1
  413068:	bl	40a660 <safe_close@plt>
  41306c:	ldur	w8, [x29, #-12]
  413070:	stur	w0, [x29, #-4]
  413074:	mov	w0, w8
  413078:	bl	40a660 <safe_close@plt>
  41307c:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  413080:	movk	x9, #0xaaab
  413084:	umulh	x9, x23, x9
  413088:	lsr	x9, x9, #1
  41308c:	stur	w0, [x29, #-12]
  413090:	ldr	w8, [sp, #28]
  413094:	add	x15, x9, x9, lsl #1
  413098:	ldur	w10, [x29, #-8]
  41309c:	ldur	w11, [x29, #-16]
  4130a0:	ldr	x12, [x21]
  4130a4:	ldr	x13, [x21, #80]
  4130a8:	ldrh	w14, [sp, #24]
  4130ac:	cmp	x23, x15
  4130b0:	ldrb	w15, [sp, #26]
  4130b4:	str	w8, [sp, #48]
  4130b8:	cinc	x8, x9, ne  // ne = any
  4130bc:	add	x0, x29, #0x18
  4130c0:	strb	w25, [sp, #80]
  4130c4:	stp	x22, x24, [sp, #96]
  4130c8:	str	xzr, [sp, #112]
  4130cc:	sturh	w14, [sp, #81]
  4130d0:	strb	w15, [sp, #83]
  4130d4:	stp	w10, w11, [sp, #84]
  4130d8:	stp	x12, x20, [sp, #32]
  4130dc:	stp	x23, x13, [sp, #64]
  4130e0:	str	x8, [sp, #56]
  4130e4:	str	xzr, [x29, #24]
  4130e8:	bl	40ab10 <sd_event_new@plt>
  4130ec:	tbnz	w0, #31, 413208 <udev_event_spawn+0x420>
  4130f0:	cbz	x23, 41318c <udev_event_spawn+0x3a4>
  4130f4:	mov	w0, #0x1                   	// #1
  4130f8:	bl	40a9e0 <now@plt>
  4130fc:	ldp	x8, x9, [sp, #64]
  413100:	sub	x25, x0, x9
  413104:	cmp	x25, x8
  413108:	b.cs	41318c <udev_event_spawn+0x3a4>  // b.hs, b.nlast
  41310c:	ldr	x10, [sp, #56]
  413110:	mov	x23, x0
  413114:	subs	x9, x10, x25
  413118:	b.ls	413158 <udev_event_spawn+0x370>  // b.plast
  41311c:	cmp	x10, x8
  413120:	b.cs	413158 <udev_event_spawn+0x370>  // b.hs, b.nlast
  413124:	ldr	x0, [x29, #24]
  413128:	adrp	x5, 414000 <udev_event_execute_rules+0xaac>
  41312c:	mov	w4, #0x4240                	// #16960
  413130:	add	x3, x9, x23
  413134:	add	x5, x5, #0x6b4
  413138:	add	x6, sp, #0x20
  41313c:	mov	w2, #0x1                   	// #1
  413140:	movk	w4, #0xf, lsl #16
  413144:	mov	x1, xzr
  413148:	str	x9, [sp, #56]
  41314c:	bl	40aae0 <sd_event_add_time@plt>
  413150:	tbnz	w0, #31, 413208 <udev_event_spawn+0x420>
  413154:	ldr	x8, [sp, #64]
  413158:	ldr	x0, [x29, #24]
  41315c:	sub	x8, x8, x25
  413160:	adrp	x5, 414000 <udev_event_execute_rules+0xaac>
  413164:	mov	w4, #0x4240                	// #16960
  413168:	add	x3, x8, x23
  41316c:	add	x5, x5, #0x7b4
  413170:	add	x6, sp, #0x20
  413174:	mov	w2, #0x1                   	// #1
  413178:	movk	w4, #0xf, lsl #16
  41317c:	mov	x1, xzr
  413180:	str	x8, [sp, #64]
  413184:	bl	40aae0 <sd_event_add_time@plt>
  413188:	tbnz	w0, #31, 413208 <udev_event_spawn+0x420>
  41318c:	ldr	w2, [sp, #84]
  413190:	tbnz	w2, #31, 4131b4 <udev_event_spawn+0x3cc>
  413194:	ldr	x0, [x29, #24]
  413198:	adrp	x4, 414000 <udev_event_execute_rules+0xaac>
  41319c:	add	x4, x4, #0x8c0
  4131a0:	add	x5, sp, #0x20
  4131a4:	mov	w3, #0x1                   	// #1
  4131a8:	mov	x1, xzr
  4131ac:	bl	40a590 <sd_event_add_io@plt>
  4131b0:	tbnz	w0, #31, 413208 <udev_event_spawn+0x420>
  4131b4:	ldr	w2, [sp, #88]
  4131b8:	tbnz	w2, #31, 4131dc <udev_event_spawn+0x3f4>
  4131bc:	ldr	x0, [x29, #24]
  4131c0:	adrp	x4, 414000 <udev_event_execute_rules+0xaac>
  4131c4:	add	x4, x4, #0x8c0
  4131c8:	add	x5, sp, #0x20
  4131cc:	mov	w3, #0x1                   	// #1
  4131d0:	mov	x1, xzr
  4131d4:	bl	40a590 <sd_event_add_io@plt>
  4131d8:	tbnz	w0, #31, 413208 <udev_event_spawn+0x420>
  4131dc:	ldr	x0, [x29, #24]
  4131e0:	ldr	w2, [sp, #48]
  4131e4:	adrp	x4, 414000 <udev_event_execute_rules+0xaac>
  4131e8:	add	x4, x4, #0xb9c
  4131ec:	add	x5, sp, #0x20
  4131f0:	mov	w3, #0x4                   	// #4
  4131f4:	mov	x1, xzr
  4131f8:	bl	40ae20 <sd_event_add_child@plt>
  4131fc:	tbnz	w0, #31, 413208 <udev_event_spawn+0x420>
  413200:	ldr	x0, [x29, #24]
  413204:	bl	40a600 <sd_event_loop@plt>
  413208:	mov	w24, w0
  41320c:	ldr	x0, [x29, #24]
  413210:	cbz	x0, 413218 <udev_event_spawn+0x430>
  413214:	bl	40a6c0 <sd_event_unref@plt>
  413218:	tbnz	w24, #31, 4133c4 <udev_event_spawn+0x5dc>
  41321c:	cbz	x22, 413368 <udev_event_spawn+0x580>
  413220:	ldr	x8, [sp, #112]
  413224:	strb	wzr, [x22, x8]
  413228:	b	413368 <udev_event_spawn+0x580>
  41322c:	str	xzr, [sp, #32]
  413230:	ldr	x21, [x21]
  413234:	cbz	x21, 413248 <udev_event_spawn+0x460>
  413238:	mov	w0, #0x1                   	// #1
  41323c:	bl	40a2c0 <log_get_max_level_realm@plt>
  413240:	cmp	w0, #0x3
  413244:	b.ge	413444 <udev_event_spawn+0x65c>  // b.tcont
  413248:	mov	x6, xzr
  41324c:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  413250:	add	x8, x8, #0x7f
  413254:	cmp	x6, #0x0
  413258:	csel	x5, xzr, x8, eq  // eq = none
  41325c:	adrp	x8, 436000 <worker_hash_op+0x1df8>
  413260:	add	x8, x8, #0x75e
  413264:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  413268:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  41326c:	mov	w1, #0x16                  	// #22
  413270:	add	x2, x2, #0x516
  413274:	add	x4, x4, #0x722
  413278:	stp	x8, x20, [sp, #8]
  41327c:	mov	w0, #0x3                   	// #3
  413280:	movk	w1, #0x4000, lsl #16
  413284:	mov	w3, #0x2d4                 	// #724
  413288:	b	413358 <udev_event_spawn+0x570>
  41328c:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  413290:	adrp	x3, 436000 <worker_hash_op+0x1df8>
  413294:	add	x1, x1, #0x516
  413298:	add	x3, x3, #0x722
  41329c:	mov	w0, #0x1                   	// #1
  4132a0:	mov	w2, #0x2d0                 	// #720
  4132a4:	bl	40a330 <log_oom_internal@plt>
  4132a8:	b	413364 <udev_event_spawn+0x57c>
  4132ac:	str	xzr, [sp, #32]
  4132b0:	ldr	x20, [x21]
  4132b4:	mov	w26, w0
  4132b8:	cbz	x20, 4132cc <udev_event_spawn+0x4e4>
  4132bc:	mov	w0, #0x1                   	// #1
  4132c0:	bl	40a2c0 <log_get_max_level_realm@plt>
  4132c4:	cmp	w0, #0x3
  4132c8:	b.ge	41346c <udev_event_spawn+0x684>  // b.tcont
  4132cc:	mov	x6, xzr
  4132d0:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  4132d4:	add	x8, x8, #0x7f
  4132d8:	cmp	x6, #0x0
  4132dc:	csel	x5, xzr, x8, eq  // eq = none
  4132e0:	adrp	x8, 436000 <worker_hash_op+0x1df8>
  4132e4:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  4132e8:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  4132ec:	add	x8, x8, #0x77d
  4132f0:	add	x2, x2, #0x516
  4132f4:	add	x4, x4, #0x722
  4132f8:	mov	w0, #0x3                   	// #3
  4132fc:	mov	w3, #0x2e3                 	// #739
  413300:	str	x8, [sp, #8]
  413304:	b	413354 <udev_event_spawn+0x56c>
  413308:	str	xzr, [sp, #32]
  41330c:	ldr	x21, [x21]
  413310:	cbz	x21, 413324 <udev_event_spawn+0x53c>
  413314:	mov	w0, #0x1                   	// #1
  413318:	bl	40a2c0 <log_get_max_level_realm@plt>
  41331c:	cmp	w0, #0x3
  413320:	b.ge	413480 <udev_event_spawn+0x698>  // b.tcont
  413324:	mov	x6, xzr
  413328:	adrp	x8, 436000 <worker_hash_op+0x1df8>
  41332c:	cmp	x6, #0x0
  413330:	add	x8, x8, #0x7b3
  413334:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  413338:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  41333c:	csel	x5, xzr, x27, eq  // eq = none
  413340:	add	x2, x2, #0x516
  413344:	add	x4, x4, #0x722
  413348:	stp	x8, x20, [sp, #8]
  41334c:	mov	w0, #0x3                   	// #3
  413350:	mov	w3, #0x2ea                 	// #746
  413354:	mov	w1, w26
  413358:	str	xzr, [sp]
  41335c:	mov	x7, xzr
  413360:	bl	40a730 <log_object_internal@plt>
  413364:	mov	w24, w0
  413368:	cbz	x19, 413374 <udev_event_spawn+0x58c>
  41336c:	mov	x0, x19
  413370:	bl	40ae30 <strv_free@plt>
  413374:	sub	x0, x29, #0x10
  413378:	bl	40a670 <safe_close_pair@plt>
  41337c:	sub	x0, x29, #0x8
  413380:	bl	40a670 <safe_close_pair@plt>
  413384:	mov	w0, w24
  413388:	ldp	x20, x19, [sp, #224]
  41338c:	ldp	x22, x21, [sp, #208]
  413390:	ldp	x24, x23, [sp, #192]
  413394:	ldp	x26, x25, [sp, #176]
  413398:	ldr	x27, [sp, #160]
  41339c:	ldp	x29, x30, [sp, #144]
  4133a0:	add	sp, sp, #0xf0
  4133a4:	ret
  4133a8:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  4133ac:	adrp	x3, 436000 <worker_hash_op+0x1df8>
  4133b0:	add	x1, x1, #0x516
  4133b4:	add	x3, x3, #0x722
  4133b8:	mov	w0, #0x1                   	// #1
  4133bc:	mov	w2, #0x2dc                 	// #732
  4133c0:	b	4132a4 <udev_event_spawn+0x4bc>
  4133c4:	str	xzr, [x29, #24]
  4133c8:	ldr	x21, [x21]
  4133cc:	cbz	x21, 4133e0 <udev_event_spawn+0x5f8>
  4133d0:	mov	w0, #0x1                   	// #1
  4133d4:	bl	40a2c0 <log_get_max_level_realm@plt>
  4133d8:	cmp	w0, #0x3
  4133dc:	b.ge	413494 <udev_event_spawn+0x6ac>  // b.tcont
  4133e0:	mov	x6, xzr
  4133e4:	adrp	x8, 436000 <worker_hash_op+0x1df8>
  4133e8:	cmp	x6, #0x0
  4133ec:	add	x8, x8, #0x7e0
  4133f0:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  4133f4:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  4133f8:	csel	x5, xzr, x27, eq  // eq = none
  4133fc:	add	x2, x2, #0x516
  413400:	add	x4, x4, #0x722
  413404:	stp	x8, x20, [sp, #8]
  413408:	mov	w0, #0x3                   	// #3
  41340c:	mov	w3, #0x30a                 	// #778
  413410:	str	xzr, [sp]
  413414:	mov	w1, w24
  413418:	b	41335c <udev_event_spawn+0x574>
  41341c:	add	x1, sp, #0x20
  413420:	mov	x0, x21
  413424:	bl	40a780 <sd_device_get_sysname@plt>
  413428:	ldr	x6, [sp, #32]
  41342c:	b	412e90 <udev_event_spawn+0xa8>
  413430:	add	x1, sp, #0x20
  413434:	mov	x0, x21
  413438:	bl	40a780 <sd_device_get_sysname@plt>
  41343c:	ldr	x6, [sp, #32]
  413440:	b	412f14 <udev_event_spawn+0x12c>
  413444:	add	x1, sp, #0x20
  413448:	mov	x0, x21
  41344c:	bl	40a780 <sd_device_get_sysname@plt>
  413450:	ldr	x6, [sp, #32]
  413454:	b	41324c <udev_event_spawn+0x464>
  413458:	add	x1, sp, #0x20
  41345c:	mov	x0, x26
  413460:	bl	40a780 <sd_device_get_sysname@plt>
  413464:	ldr	x6, [sp, #32]
  413468:	b	412ff0 <udev_event_spawn+0x208>
  41346c:	add	x1, sp, #0x20
  413470:	mov	x0, x20
  413474:	bl	40a780 <sd_device_get_sysname@plt>
  413478:	ldr	x6, [sp, #32]
  41347c:	b	4132d0 <udev_event_spawn+0x4e8>
  413480:	add	x1, sp, #0x20
  413484:	mov	x0, x21
  413488:	bl	40a780 <sd_device_get_sysname@plt>
  41348c:	ldr	x6, [sp, #32]
  413490:	b	413328 <udev_event_spawn+0x540>
  413494:	add	x1, x29, #0x18
  413498:	mov	x0, x21
  41349c:	bl	40a780 <sd_device_get_sysname@plt>
  4134a0:	ldr	x6, [x29, #24]
  4134a4:	b	4133e4 <udev_event_spawn+0x5fc>
  4134a8:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  4134ac:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  4134b0:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  4134b4:	add	x1, x1, #0x1bf
  4134b8:	add	x2, x2, #0x516
  4134bc:	add	x4, x4, #0x6bc
  4134c0:	mov	w0, #0x1                   	// #1
  4134c4:	mov	w3, #0x2bf                 	// #703
  4134c8:	bl	40a630 <log_assert_failed_realm@plt>
  4134cc:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  4134d0:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  4134d4:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  4134d8:	add	x1, x1, #0x5bb
  4134dc:	add	x2, x2, #0x516
  4134e0:	add	x4, x4, #0x6bc
  4134e4:	mov	w0, #0x1                   	// #1
  4134e8:	mov	w3, #0x2c0                 	// #704
  4134ec:	bl	40a630 <log_assert_failed_realm@plt>
  4134f0:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  4134f4:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  4134f8:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  4134fc:	add	x1, x1, #0x70b
  413500:	add	x2, x2, #0x516
  413504:	add	x4, x4, #0x6bc
  413508:	mov	w0, #0x1                   	// #1
  41350c:	mov	w3, #0x2c1                 	// #705
  413510:	bl	40a630 <log_assert_failed_realm@plt>
  413514:	ldur	w2, [x29, #-12]
  413518:	mov	w0, #0xffffffff            	// #-1
  41351c:	bl	40a4d0 <rearrange_stdio@plt>
  413520:	tbz	w0, #31, 41352c <udev_event_spawn+0x744>
  413524:	mov	w0, #0x1                   	// #1
  413528:	bl	40aad0 <_exit@plt>
  41352c:	mov	x0, xzr
  413530:	mov	x1, xzr
  413534:	bl	40ae40 <close_all_fds@plt>
  413538:	bl	40ae50 <rlimit_nofile_safe@plt>
  41353c:	ldr	x0, [x19]
  413540:	ldur	x2, [x29, #-24]
  413544:	mov	x1, x19
  413548:	bl	40ae60 <execve@plt>
  41354c:	mov	w0, #0x1                   	// #1
  413550:	bl	40aad0 <_exit@plt>

0000000000413554 <udev_event_execute_rules>:
  413554:	sub	sp, sp, #0xa0
  413558:	stp	x29, x30, [sp, #80]
  41355c:	stp	x26, x25, [sp, #96]
  413560:	stp	x24, x23, [sp, #112]
  413564:	stp	x22, x21, [sp, #128]
  413568:	stp	x20, x19, [sp, #144]
  41356c:	add	x29, sp, #0x50
  413570:	cbz	x0, 4142d4 <udev_event_execute_rules+0xd80>
  413574:	mov	x24, x3
  413578:	cbz	x3, 4142f8 <udev_event_execute_rules+0xda4>
  41357c:	ldr	x19, [x0]
  413580:	mov	x23, x1
  413584:	mov	x21, x0
  413588:	sub	x1, x29, #0x20
  41358c:	mov	x0, x19
  413590:	mov	x22, x2
  413594:	bl	40a850 <sd_device_get_subsystem@plt>
  413598:	tbnz	w0, #31, 413698 <udev_event_execute_rules+0x144>
  41359c:	sub	x1, x29, #0x24
  4135a0:	mov	x0, x19
  4135a4:	bl	40a970 <device_get_action@plt>
  4135a8:	tbnz	w0, #31, 4136f0 <udev_event_execute_rules+0x19c>
  4135ac:	ldur	w8, [x29, #-36]
  4135b0:	cmp	w8, #0x1
  4135b4:	b.ne	413770 <udev_event_execute_rules+0x21c>  // b.any
  4135b8:	ldr	x19, [x21]
  4135bc:	mov	w1, #0x1                   	// #1
  4135c0:	mov	x0, x19
  4135c4:	bl	40ae70 <device_read_db_internal@plt>
  4135c8:	tbz	w0, #31, 41362c <udev_event_execute_rules+0xd8>
  4135cc:	mov	w20, w0
  4135d0:	stur	xzr, [x29, #-8]
  4135d4:	cbz	x19, 4135e8 <udev_event_execute_rules+0x94>
  4135d8:	mov	w0, #0x1                   	// #1
  4135dc:	bl	40a2c0 <log_get_max_level_realm@plt>
  4135e0:	cmp	w0, #0x7
  4135e4:	b.ge	414144 <udev_event_execute_rules+0xbf0>  // b.tcont
  4135e8:	mov	x6, xzr
  4135ec:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  4135f0:	add	x8, x8, #0x7f
  4135f4:	cmp	x6, #0x0
  4135f8:	csel	x5, xzr, x8, eq  // eq = none
  4135fc:	adrp	x8, 436000 <worker_hash_op+0x1df8>
  413600:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  413604:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  413608:	add	x8, x8, #0xf0d
  41360c:	add	x2, x2, #0x516
  413610:	add	x4, x4, #0xeef
  413614:	mov	w0, #0x7                   	// #7
  413618:	mov	w3, #0x370                 	// #880
  41361c:	mov	w1, w20
  413620:	mov	x7, xzr
  413624:	stp	xzr, x8, [sp]
  413628:	bl	40a730 <log_object_internal@plt>
  41362c:	mov	x0, x19
  413630:	mov	x1, xzr
  413634:	mov	w2, wzr
  413638:	bl	40a750 <device_tag_index@plt>
  41363c:	tbnz	w0, #31, 4139dc <udev_event_execute_rules+0x488>
  413640:	mov	x0, x19
  413644:	bl	40a740 <device_delete_db@plt>
  413648:	tbnz	w0, #31, 413a48 <udev_event_execute_rules+0x4f4>
  41364c:	mov	x0, x19
  413650:	mov	x1, xzr
  413654:	bl	40aa60 <sd_device_get_devnum@plt>
  413658:	tbnz	w0, #31, 413664 <udev_event_execute_rules+0x110>
  41365c:	mov	x0, x19
  413660:	bl	41fe74 <udev_watch_end>
  413664:	mov	x0, x24
  413668:	mov	x1, x21
  41366c:	mov	x2, x23
  413670:	mov	x3, x22
  413674:	bl	4177a8 <udev_rules_apply_to_event>
  413678:	mov	x0, x19
  41367c:	mov	x1, xzr
  413680:	bl	40aa60 <sd_device_get_devnum@plt>
  413684:	tbnz	w0, #31, 413abc <udev_event_execute_rules+0x568>
  413688:	mov	x0, x19
  41368c:	bl	4169f4 <udev_node_remove>
  413690:	mov	w0, wzr
  413694:	b	413754 <udev_event_execute_rules+0x200>
  413698:	mov	w20, w0
  41369c:	stur	xzr, [x29, #-8]
  4136a0:	cbz	x19, 4136b4 <udev_event_execute_rules+0x160>
  4136a4:	mov	w0, #0x1                   	// #1
  4136a8:	bl	40a2c0 <log_get_max_level_realm@plt>
  4136ac:	cmp	w0, #0x3
  4136b0:	b.ge	41411c <udev_event_execute_rules+0xbc8>  // b.tcont
  4136b4:	mov	x6, xzr
  4136b8:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  4136bc:	add	x8, x8, #0x7f
  4136c0:	cmp	x6, #0x0
  4136c4:	csel	x5, xzr, x8, eq  // eq = none
  4136c8:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  4136cc:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  4136d0:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  4136d4:	add	x8, x8, #0x7a2
  4136d8:	add	x2, x2, #0x516
  4136dc:	add	x4, x4, #0x85c
  4136e0:	mov	w0, #0x3                   	// #3
  4136e4:	mov	w3, #0x3a6                 	// #934
  4136e8:	str	x8, [sp, #8]
  4136ec:	b	413744 <udev_event_execute_rules+0x1f0>
  4136f0:	mov	w20, w0
  4136f4:	stur	xzr, [x29, #-8]
  4136f8:	cbz	x19, 41370c <udev_event_execute_rules+0x1b8>
  4136fc:	mov	w0, #0x1                   	// #1
  413700:	bl	40a2c0 <log_get_max_level_realm@plt>
  413704:	cmp	w0, #0x3
  413708:	b.ge	414130 <udev_event_execute_rules+0xbdc>  // b.tcont
  41370c:	mov	x6, xzr
  413710:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  413714:	add	x8, x8, #0x7f
  413718:	cmp	x6, #0x0
  41371c:	csel	x5, xzr, x8, eq  // eq = none
  413720:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  413724:	add	x8, x8, #0x6e9
  413728:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  41372c:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  413730:	add	x2, x2, #0x516
  413734:	add	x4, x4, #0x85c
  413738:	str	x8, [sp, #8]
  41373c:	mov	w0, #0x3                   	// #3
  413740:	mov	w3, #0x3aa                 	// #938
  413744:	mov	w1, w20
  413748:	str	xzr, [sp]
  41374c:	mov	x7, xzr
  413750:	bl	40a730 <log_object_internal@plt>
  413754:	ldp	x20, x19, [sp, #144]
  413758:	ldp	x22, x21, [sp, #128]
  41375c:	ldp	x24, x23, [sp, #112]
  413760:	ldp	x26, x25, [sp, #96]
  413764:	ldp	x29, x30, [sp, #80]
  413768:	add	sp, sp, #0xa0
  41376c:	ret
  413770:	add	x20, x21, #0x10
  413774:	mov	x0, x19
  413778:	mov	x1, x20
  41377c:	bl	40ae80 <device_clone_with_db@plt>
  413780:	tbnz	w0, #31, 413ac4 <udev_event_execute_rules+0x570>
  413784:	ldr	x8, [x20]
  413788:	cbz	x8, 4137a4 <udev_event_execute_rules+0x250>
  41378c:	mov	x0, x19
  413790:	mov	x1, xzr
  413794:	bl	40aa60 <sd_device_get_devnum@plt>
  413798:	tbnz	w0, #31, 4137a4 <udev_event_execute_rules+0x250>
  41379c:	ldr	x0, [x20]
  4137a0:	bl	41fe74 <udev_watch_end>
  4137a4:	ldur	w8, [x29, #-36]
  4137a8:	cmp	w8, #0x3
  4137ac:	b.ne	4138b8 <udev_event_execute_rules+0x364>  // b.any
  4137b0:	ldr	x8, [x21, #16]
  4137b4:	ldr	x25, [x21]
  4137b8:	cbz	x8, 41383c <udev_event_execute_rules+0x2e8>
  4137bc:	mov	x0, x25
  4137c0:	mov	x1, xzr
  4137c4:	bl	40aa60 <sd_device_get_devnum@plt>
  4137c8:	tbz	w0, #31, 41383c <udev_event_execute_rules+0x2e8>
  4137cc:	ldr	x1, [x20]
  4137d0:	mov	x0, x25
  4137d4:	bl	40a990 <device_copy_properties@plt>
  4137d8:	tbz	w0, #31, 41383c <udev_event_execute_rules+0x2e8>
  4137dc:	mov	w26, w0
  4137e0:	stur	xzr, [x29, #-8]
  4137e4:	cbz	x25, 4137f8 <udev_event_execute_rules+0x2a4>
  4137e8:	mov	w0, #0x1                   	// #1
  4137ec:	bl	40a2c0 <log_get_max_level_realm@plt>
  4137f0:	cmp	w0, #0x7
  4137f4:	b.ge	414220 <udev_event_execute_rules+0xccc>  // b.tcont
  4137f8:	mov	x6, xzr
  4137fc:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  413800:	add	x8, x8, #0x7f
  413804:	cmp	x6, #0x0
  413808:	csel	x5, xzr, x8, eq  // eq = none
  41380c:	adrp	x8, 436000 <worker_hash_op+0x1df8>
  413810:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  413814:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  413818:	add	x8, x8, #0xfdc
  41381c:	add	x2, x2, #0x516
  413820:	add	x4, x4, #0xfc9
  413824:	mov	w0, #0x7                   	// #7
  413828:	mov	w3, #0x38b                 	// #907
  41382c:	mov	w1, w26
  413830:	mov	x7, xzr
  413834:	stp	xzr, x8, [sp]
  413838:	bl	40a730 <log_object_internal@plt>
  41383c:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  413840:	add	x1, x1, #0x21
  413844:	mov	x0, x25
  413848:	mov	x2, xzr
  41384c:	bl	40ae90 <device_add_property@plt>
  413850:	tbz	w0, #31, 4138b8 <udev_event_execute_rules+0x364>
  413854:	mov	w26, w0
  413858:	stur	xzr, [x29, #-8]
  41385c:	cbz	x25, 413870 <udev_event_execute_rules+0x31c>
  413860:	mov	w0, #0x1                   	// #1
  413864:	bl	40a2c0 <log_get_max_level_realm@plt>
  413868:	cmp	w0, #0x7
  41386c:	b.ge	4141a8 <udev_event_execute_rules+0xc54>  // b.tcont
  413870:	mov	x6, xzr
  413874:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  413878:	add	x8, x8, #0x7f
  41387c:	cmp	x6, #0x0
  413880:	csel	x5, xzr, x8, eq  // eq = none
  413884:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  413888:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  41388c:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  413890:	add	x8, x8, #0x2d
  413894:	add	x2, x2, #0x516
  413898:	add	x4, x4, #0xfc9
  41389c:	mov	w0, #0x7                   	// #7
  4138a0:	mov	w3, #0x391                 	// #913
  4138a4:	mov	w1, w26
  4138a8:	mov	x7, xzr
  4138ac:	stp	xzr, x8, [sp]
  4138b0:	bl	40a730 <log_object_internal@plt>
  4138b4:	tbnz	w0, #31, 413754 <udev_event_execute_rules+0x200>
  4138b8:	mov	x0, x24
  4138bc:	mov	x1, x21
  4138c0:	mov	x2, x23
  4138c4:	mov	x3, x22
  4138c8:	bl	4177a8 <udev_rules_apply_to_event>
  4138cc:	tbnz	w0, #31, 413b20 <udev_event_execute_rules+0x5cc>
  4138d0:	ldr	x8, [x21, #24]
  4138d4:	cbz	x8, 413be4 <udev_event_execute_rules+0x690>
  4138d8:	ldr	x22, [x21]
  4138dc:	sub	x1, x29, #0x8
  4138e0:	mov	x0, x22
  4138e4:	bl	40a780 <sd_device_get_sysname@plt>
  4138e8:	tbnz	w0, #31, 413b7c <udev_event_execute_rules+0x628>
  4138ec:	ldr	x0, [x21, #24]
  4138f0:	ldur	x1, [x29, #-8]
  4138f4:	bl	40a930 <strcmp@plt>
  4138f8:	cbz	w0, 413be4 <udev_event_execute_rules+0x690>
  4138fc:	mov	x0, x22
  413900:	mov	w1, wzr
  413904:	bl	40ab20 <device_for_action@plt>
  413908:	tbz	w0, #0, 413be4 <udev_event_execute_rules+0x690>
  41390c:	sub	x1, x29, #0xc
  413910:	mov	x0, x22
  413914:	bl	40aa70 <sd_device_get_ifindex@plt>
  413918:	cmn	w0, #0x2
  41391c:	b.eq	413be4 <udev_event_execute_rules+0x690>  // b.none
  413920:	mov	w23, w0
  413924:	tbnz	w0, #31, 413fac <udev_event_execute_rules+0xa58>
  413928:	ldur	w1, [x29, #-12]
  41392c:	ldr	x2, [x21, #24]
  413930:	add	x0, x21, #0x58
  413934:	bl	40aea0 <rtnl_set_link_name@plt>
  413938:	tbnz	w0, #31, 414000 <udev_event_execute_rules+0xaac>
  41393c:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  413940:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  413944:	add	x1, x1, #0x21
  413948:	add	x2, x2, #0xbc
  41394c:	mov	x0, x22
  413950:	bl	40ae90 <device_add_property@plt>
  413954:	tbnz	w0, #31, 41406c <udev_event_execute_rules+0xb18>
  413958:	ldr	x1, [x21, #24]
  41395c:	mov	x0, x22
  413960:	bl	40aeb0 <device_rename@plt>
  413964:	adrp	x24, 435000 <worker_hash_op+0xdf8>
  413968:	add	x24, x24, #0x7f
  41396c:	tbnz	w0, #31, 4140c4 <udev_event_execute_rules+0xb70>
  413970:	stur	xzr, [x29, #-24]
  413974:	cbz	x22, 413988 <udev_event_execute_rules+0x434>
  413978:	mov	w0, #0x1                   	// #1
  41397c:	bl	40a2c0 <log_get_max_level_realm@plt>
  413980:	cmp	w0, #0x7
  413984:	b.ge	414298 <udev_event_execute_rules+0xd44>  // b.tcont
  413988:	mov	x6, xzr
  41398c:	ldur	w8, [x29, #-12]
  413990:	ldur	x9, [x29, #-8]
  413994:	ldr	x10, [x21, #24]
  413998:	cmp	x6, #0x0
  41399c:	str	w8, [sp, #16]
  4139a0:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  4139a4:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  4139a8:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  4139ac:	csel	x5, xzr, x24, eq  // eq = none
  4139b0:	add	x8, x8, #0x11a
  4139b4:	add	x2, x2, #0x516
  4139b8:	add	x4, x4, #0x59
  4139bc:	mov	w0, #0x7                   	// #7
  4139c0:	mov	w3, #0x338                 	// #824
  4139c4:	mov	w1, wzr
  4139c8:	mov	x7, xzr
  4139cc:	stp	x9, x10, [sp, #24]
  4139d0:	stp	xzr, x8, [sp]
  4139d4:	bl	40a730 <log_object_internal@plt>
  4139d8:	b	413be4 <udev_event_execute_rules+0x690>
  4139dc:	mov	w20, w0
  4139e0:	stur	xzr, [x29, #-8]
  4139e4:	cbz	x19, 4139f8 <udev_event_execute_rules+0x4a4>
  4139e8:	mov	w0, #0x1                   	// #1
  4139ec:	bl	40a2c0 <log_get_max_level_realm@plt>
  4139f0:	cmp	w0, #0x7
  4139f4:	b.ge	414158 <udev_event_execute_rules+0xc04>  // b.tcont
  4139f8:	mov	x6, xzr
  4139fc:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  413a00:	add	x8, x8, #0x7f
  413a04:	cmp	x6, #0x0
  413a08:	csel	x5, xzr, x8, eq  // eq = none
  413a0c:	adrp	x8, 436000 <worker_hash_op+0x1df8>
  413a10:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  413a14:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  413a18:	add	x8, x8, #0xf3f
  413a1c:	add	x2, x2, #0x516
  413a20:	add	x4, x4, #0xeef
  413a24:	mov	w0, #0x7                   	// #7
  413a28:	mov	w3, #0x374                 	// #884
  413a2c:	mov	w1, w20
  413a30:	mov	x7, xzr
  413a34:	stp	xzr, x8, [sp]
  413a38:	bl	40a730 <log_object_internal@plt>
  413a3c:	mov	x0, x19
  413a40:	bl	40a740 <device_delete_db@plt>
  413a44:	tbz	w0, #31, 41364c <udev_event_execute_rules+0xf8>
  413a48:	mov	w20, w0
  413a4c:	stur	xzr, [x29, #-8]
  413a50:	cbz	x19, 413a64 <udev_event_execute_rules+0x510>
  413a54:	mov	w0, #0x1                   	// #1
  413a58:	bl	40a2c0 <log_get_max_level_realm@plt>
  413a5c:	cmp	w0, #0x7
  413a60:	b.ge	41416c <udev_event_execute_rules+0xc18>  // b.tcont
  413a64:	mov	x6, xzr
  413a68:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  413a6c:	add	x8, x8, #0x7f
  413a70:	cmp	x6, #0x0
  413a74:	csel	x5, xzr, x8, eq  // eq = none
  413a78:	adrp	x8, 436000 <worker_hash_op+0x1df8>
  413a7c:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  413a80:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  413a84:	add	x8, x8, #0xf8b
  413a88:	add	x2, x2, #0x516
  413a8c:	add	x4, x4, #0xeef
  413a90:	mov	w0, #0x7                   	// #7
  413a94:	mov	w3, #0x378                 	// #888
  413a98:	mov	w1, w20
  413a9c:	mov	x7, xzr
  413aa0:	stp	xzr, x8, [sp]
  413aa4:	bl	40a730 <log_object_internal@plt>
  413aa8:	mov	x0, x19
  413aac:	mov	x1, xzr
  413ab0:	bl	40aa60 <sd_device_get_devnum@plt>
  413ab4:	tbz	w0, #31, 41365c <udev_event_execute_rules+0x108>
  413ab8:	b	413664 <udev_event_execute_rules+0x110>
  413abc:	mov	w0, wzr
  413ac0:	b	413754 <udev_event_execute_rules+0x200>
  413ac4:	mov	w25, w0
  413ac8:	stur	xzr, [x29, #-8]
  413acc:	cbz	x19, 413ae0 <udev_event_execute_rules+0x58c>
  413ad0:	mov	w0, #0x1                   	// #1
  413ad4:	bl	40a2c0 <log_get_max_level_realm@plt>
  413ad8:	cmp	w0, #0x7
  413adc:	b.ge	414180 <udev_event_execute_rules+0xc2c>  // b.tcont
  413ae0:	mov	x6, xzr
  413ae4:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  413ae8:	add	x8, x8, #0x7f
  413aec:	cmp	x6, #0x0
  413af0:	csel	x5, xzr, x8, eq  // eq = none
  413af4:	adrp	x8, 436000 <worker_hash_op+0x1df8>
  413af8:	add	x8, x8, #0x875
  413afc:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  413b00:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  413b04:	add	x2, x2, #0x516
  413b08:	add	x4, x4, #0x85c
  413b0c:	stp	xzr, x8, [sp]
  413b10:	mov	w0, #0x7                   	// #7
  413b14:	mov	w3, #0x3b3                 	// #947
  413b18:	mov	w1, w25
  413b1c:	b	41374c <udev_event_execute_rules+0x1f8>
  413b20:	mov	w22, w0
  413b24:	stur	xzr, [x29, #-8]
  413b28:	cbz	x19, 413b3c <udev_event_execute_rules+0x5e8>
  413b2c:	mov	w0, #0x1                   	// #1
  413b30:	bl	40a2c0 <log_get_max_level_realm@plt>
  413b34:	cmp	w0, #0x7
  413b38:	b.ge	414194 <udev_event_execute_rules+0xc40>  // b.tcont
  413b3c:	mov	x6, xzr
  413b40:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  413b44:	add	x8, x8, #0x7f
  413b48:	cmp	x6, #0x0
  413b4c:	csel	x5, xzr, x8, eq  // eq = none
  413b50:	adrp	x8, 436000 <worker_hash_op+0x1df8>
  413b54:	add	x8, x8, #0x89a
  413b58:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  413b5c:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  413b60:	add	x2, x2, #0x516
  413b64:	add	x4, x4, #0x85c
  413b68:	stp	xzr, x8, [sp]
  413b6c:	mov	w0, #0x7                   	// #7
  413b70:	mov	w3, #0x3c1                 	// #961
  413b74:	mov	w1, w22
  413b78:	b	41374c <udev_event_execute_rules+0x1f8>
  413b7c:	mov	w23, w0
  413b80:	stur	xzr, [x29, #-24]
  413b84:	cbz	x22, 413b98 <udev_event_execute_rules+0x644>
  413b88:	mov	w0, #0x1                   	// #1
  413b8c:	bl	40a2c0 <log_get_max_level_realm@plt>
  413b90:	cmp	w0, #0x3
  413b94:	b.ge	4141d0 <udev_event_execute_rules+0xc7c>  // b.tcont
  413b98:	mov	x6, xzr
  413b9c:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  413ba0:	add	x8, x8, #0x7f
  413ba4:	cmp	x6, #0x0
  413ba8:	csel	x5, xzr, x8, eq  // eq = none
  413bac:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  413bb0:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  413bb4:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  413bb8:	add	x8, x8, #0x7be
  413bbc:	add	x2, x2, #0x516
  413bc0:	add	x4, x4, #0x59
  413bc4:	mov	w0, #0x3                   	// #3
  413bc8:	mov	w3, #0x31c                 	// #796
  413bcc:	str	x8, [sp, #8]
  413bd0:	mov	w1, w23
  413bd4:	mov	x7, xzr
  413bd8:	str	xzr, [sp]
  413bdc:	bl	40a730 <log_object_internal@plt>
  413be0:	tbnz	w0, #31, 413754 <udev_event_execute_rules+0x200>
  413be4:	ldr	x22, [x21]
  413be8:	mov	x1, xzr
  413bec:	mov	x0, x22
  413bf0:	bl	40aa60 <sd_device_get_devnum@plt>
  413bf4:	cmn	w0, #0x2
  413bf8:	b.eq	413db0 <udev_event_execute_rules+0x85c>  // b.none
  413bfc:	mov	w23, w0
  413c00:	tbnz	w0, #31, 413d14 <udev_event_execute_rules+0x7c0>
  413c04:	ldr	x1, [x20]
  413c08:	cbz	x1, 413c14 <udev_event_execute_rules+0x6c0>
  413c0c:	mov	x0, x22
  413c10:	bl	414e50 <udev_node_update_old_links>
  413c14:	mov	x23, x21
  413c18:	ldr	w0, [x23, #44]!
  413c1c:	bl	40aec0 <uid_is_valid@plt>
  413c20:	tbnz	w0, #0, 413c94 <udev_event_execute_rules+0x740>
  413c24:	mov	x0, x22
  413c28:	mov	x1, x23
  413c2c:	bl	40aed0 <device_get_devnode_uid@plt>
  413c30:	tbz	w0, #31, 413c94 <udev_event_execute_rules+0x740>
  413c34:	mov	w23, w0
  413c38:	cmn	w0, #0x2
  413c3c:	b.eq	413c94 <udev_event_execute_rules+0x740>  // b.none
  413c40:	stur	xzr, [x29, #-8]
  413c44:	cbz	x22, 413c58 <udev_event_execute_rules+0x704>
  413c48:	mov	w0, #0x1                   	// #1
  413c4c:	bl	40a2c0 <log_get_max_level_realm@plt>
  413c50:	cmp	w0, #0x3
  413c54:	b.ge	414234 <udev_event_execute_rules+0xce0>  // b.tcont
  413c58:	mov	x6, xzr
  413c5c:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  413c60:	add	x8, x8, #0x7f
  413c64:	cmp	x6, #0x0
  413c68:	csel	x5, xzr, x8, eq  // eq = none
  413c6c:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  413c70:	add	x8, x8, #0x174
  413c74:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  413c78:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  413c7c:	add	x2, x2, #0x516
  413c80:	add	x4, x4, #0x14c
  413c84:	str	x8, [sp, #8]
  413c88:	mov	w0, #0x3                   	// #3
  413c8c:	mov	w3, #0x34e                 	// #846
  413c90:	b	413d64 <udev_event_execute_rules+0x810>
  413c94:	mov	x24, x21
  413c98:	ldr	w0, [x24, #48]!
  413c9c:	bl	40aec0 <uid_is_valid@plt>
  413ca0:	tbnz	w0, #0, 413d78 <udev_event_execute_rules+0x824>
  413ca4:	mov	x0, x22
  413ca8:	mov	x1, x24
  413cac:	bl	40aee0 <device_get_devnode_gid@plt>
  413cb0:	tbz	w0, #31, 413d78 <udev_event_execute_rules+0x824>
  413cb4:	mov	w23, w0
  413cb8:	cmn	w0, #0x2
  413cbc:	b.eq	413d78 <udev_event_execute_rules+0x824>  // b.none
  413cc0:	stur	xzr, [x29, #-8]
  413cc4:	cbz	x22, 413cd8 <udev_event_execute_rules+0x784>
  413cc8:	mov	w0, #0x1                   	// #1
  413ccc:	bl	40a2c0 <log_get_max_level_realm@plt>
  413cd0:	cmp	w0, #0x3
  413cd4:	b.ge	414248 <udev_event_execute_rules+0xcf4>  // b.tcont
  413cd8:	mov	x6, xzr
  413cdc:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  413ce0:	add	x8, x8, #0x7f
  413ce4:	cmp	x6, #0x0
  413ce8:	csel	x5, xzr, x8, eq  // eq = none
  413cec:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  413cf0:	add	x8, x8, #0x192
  413cf4:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  413cf8:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  413cfc:	add	x2, x2, #0x516
  413d00:	add	x4, x4, #0x14c
  413d04:	str	x8, [sp, #8]
  413d08:	mov	w0, #0x3                   	// #3
  413d0c:	mov	w3, #0x354                 	// #852
  413d10:	b	413d64 <udev_event_execute_rules+0x810>
  413d14:	stur	xzr, [x29, #-8]
  413d18:	cbz	x22, 413d2c <udev_event_execute_rules+0x7d8>
  413d1c:	mov	w0, #0x1                   	// #1
  413d20:	bl	40a2c0 <log_get_max_level_realm@plt>
  413d24:	cmp	w0, #0x3
  413d28:	b.ge	4141f8 <udev_event_execute_rules+0xca4>  // b.tcont
  413d2c:	mov	x6, xzr
  413d30:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  413d34:	add	x8, x8, #0x7f
  413d38:	cmp	x6, #0x0
  413d3c:	csel	x5, xzr, x8, eq  // eq = none
  413d40:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  413d44:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  413d48:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  413d4c:	add	x8, x8, #0x15b
  413d50:	add	x2, x2, #0x516
  413d54:	add	x4, x4, #0x14c
  413d58:	mov	w0, #0x3                   	// #3
  413d5c:	mov	w3, #0x345                 	// #837
  413d60:	str	x8, [sp, #8]
  413d64:	mov	w1, w23
  413d68:	mov	x7, xzr
  413d6c:	str	xzr, [sp]
  413d70:	bl	40a730 <log_object_internal@plt>
  413d74:	b	413dac <udev_event_execute_rules+0x858>
  413d78:	mov	x25, x21
  413d7c:	ldr	w8, [x25, #40]!
  413d80:	cmn	w8, #0x1
  413d84:	b.eq	413f10 <udev_event_execute_rules+0x9bc>  // b.none
  413d88:	mov	x0, x22
  413d8c:	mov	w1, wzr
  413d90:	bl	40ab20 <device_for_action@plt>
  413d94:	ldp	w2, w3, [x21, #40]
  413d98:	ldr	w4, [x21, #48]
  413d9c:	ldr	x5, [x21, #56]
  413da0:	and	w1, w0, #0x1
  413da4:	mov	x0, x22
  413da8:	bl	41561c <udev_node_add>
  413dac:	tbnz	w0, #31, 413754 <udev_event_execute_rules+0x200>
  413db0:	ldr	x1, [x20]
  413db4:	mov	x0, x19
  413db8:	bl	40a950 <device_ensure_usec_initialized@plt>
  413dbc:	tbnz	w0, #31, 413e00 <udev_event_execute_rules+0x8ac>
  413dc0:	ldr	x1, [x20]
  413dc4:	mov	w2, #0x1                   	// #1
  413dc8:	mov	x0, x19
  413dcc:	bl	40a750 <device_tag_index@plt>
  413dd0:	tbnz	w0, #31, 413e58 <udev_event_execute_rules+0x904>
  413dd4:	mov	x0, x19
  413dd8:	bl	40ab50 <device_update_db@plt>
  413ddc:	tbnz	w0, #31, 413eb0 <udev_event_execute_rules+0x95c>
  413de0:	mov	x0, x19
  413de4:	bl	40aef0 <device_set_is_initialized@plt>
  413de8:	ldr	x0, [x20]
  413dec:	bl	40a6e0 <sd_device_unref@plt>
  413df0:	mov	x8, x0
  413df4:	mov	w0, wzr
  413df8:	str	x8, [x20]
  413dfc:	b	413754 <udev_event_execute_rules+0x200>
  413e00:	mov	w21, w0
  413e04:	stur	xzr, [x29, #-8]
  413e08:	cbz	x19, 413e1c <udev_event_execute_rules+0x8c8>
  413e0c:	mov	w0, #0x1                   	// #1
  413e10:	bl	40a2c0 <log_get_max_level_realm@plt>
  413e14:	cmp	w0, #0x7
  413e18:	b.ge	4141bc <udev_event_execute_rules+0xc68>  // b.tcont
  413e1c:	mov	x6, xzr
  413e20:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  413e24:	add	x8, x8, #0x7f
  413e28:	cmp	x6, #0x0
  413e2c:	csel	x5, xzr, x8, eq  // eq = none
  413e30:	adrp	x8, 436000 <worker_hash_op+0x1df8>
  413e34:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  413e38:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  413e3c:	add	x8, x8, #0x8b9
  413e40:	add	x2, x2, #0x516
  413e44:	add	x4, x4, #0x85c
  413e48:	mov	w0, #0x7                   	// #7
  413e4c:	mov	w3, #0x3ce                 	// #974
  413e50:	str	x8, [sp, #8]
  413e54:	b	413f04 <udev_event_execute_rules+0x9b0>
  413e58:	mov	w21, w0
  413e5c:	stur	xzr, [x29, #-8]
  413e60:	cbz	x19, 413e74 <udev_event_execute_rules+0x920>
  413e64:	mov	w0, #0x1                   	// #1
  413e68:	bl	40a2c0 <log_get_max_level_realm@plt>
  413e6c:	cmp	w0, #0x7
  413e70:	b.ge	4141e4 <udev_event_execute_rules+0xc90>  // b.tcont
  413e74:	mov	x6, xzr
  413e78:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  413e7c:	add	x8, x8, #0x7f
  413e80:	cmp	x6, #0x0
  413e84:	csel	x5, xzr, x8, eq  // eq = none
  413e88:	adrp	x8, 436000 <worker_hash_op+0x1df8>
  413e8c:	add	x8, x8, #0x8e4
  413e90:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  413e94:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  413e98:	add	x2, x2, #0x516
  413e9c:	add	x4, x4, #0x85c
  413ea0:	str	x8, [sp, #8]
  413ea4:	mov	w0, #0x7                   	// #7
  413ea8:	mov	w3, #0x3d3                 	// #979
  413eac:	b	413f04 <udev_event_execute_rules+0x9b0>
  413eb0:	mov	w21, w0
  413eb4:	stur	xzr, [x29, #-8]
  413eb8:	cbz	x19, 413ecc <udev_event_execute_rules+0x978>
  413ebc:	mov	w0, #0x1                   	// #1
  413ec0:	bl	40a2c0 <log_get_max_level_realm@plt>
  413ec4:	cmp	w0, #0x7
  413ec8:	b.ge	41420c <udev_event_execute_rules+0xcb8>  // b.tcont
  413ecc:	mov	x6, xzr
  413ed0:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  413ed4:	add	x8, x8, #0x7f
  413ed8:	cmp	x6, #0x0
  413edc:	csel	x5, xzr, x8, eq  // eq = none
  413ee0:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  413ee4:	add	x8, x8, #0x72c
  413ee8:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  413eec:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  413ef0:	add	x2, x2, #0x516
  413ef4:	add	x4, x4, #0x85c
  413ef8:	str	x8, [sp, #8]
  413efc:	mov	w0, #0x7                   	// #7
  413f00:	mov	w3, #0x3d7                 	// #983
  413f04:	str	xzr, [sp]
  413f08:	mov	w1, w21
  413f0c:	b	41374c <udev_event_execute_rules+0x1f8>
  413f10:	mov	x0, x22
  413f14:	mov	x1, x25
  413f18:	bl	40af00 <device_get_devnode_mode@plt>
  413f1c:	tbz	w0, #31, 413f80 <udev_event_execute_rules+0xa2c>
  413f20:	mov	w23, w0
  413f24:	cmn	w0, #0x2
  413f28:	b.eq	413f80 <udev_event_execute_rules+0xa2c>  // b.none
  413f2c:	stur	xzr, [x29, #-8]
  413f30:	cbz	x22, 413f44 <udev_event_execute_rules+0x9f0>
  413f34:	mov	w0, #0x1                   	// #1
  413f38:	bl	40a2c0 <log_get_max_level_realm@plt>
  413f3c:	cmp	w0, #0x3
  413f40:	b.ge	41425c <udev_event_execute_rules+0xd08>  // b.tcont
  413f44:	mov	x6, xzr
  413f48:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  413f4c:	add	x8, x8, #0x7f
  413f50:	cmp	x6, #0x0
  413f54:	csel	x5, xzr, x8, eq  // eq = none
  413f58:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  413f5c:	add	x8, x8, #0x1b0
  413f60:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  413f64:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  413f68:	add	x2, x2, #0x516
  413f6c:	add	x4, x4, #0x14c
  413f70:	str	x8, [sp, #8]
  413f74:	mov	w0, #0x3                   	// #3
  413f78:	mov	w3, #0x35a                 	// #858
  413f7c:	b	413d64 <udev_event_execute_rules+0x810>
  413f80:	ldr	w8, [x25]
  413f84:	cmn	w8, #0x1
  413f88:	b.ne	413d88 <udev_event_execute_rules+0x834>  // b.any
  413f8c:	ldr	w0, [x24]
  413f90:	bl	40aec0 <uid_is_valid@plt>
  413f94:	tbz	w0, #0, 413d88 <udev_event_execute_rules+0x834>
  413f98:	ldr	w8, [x24]
  413f9c:	cbz	w8, 413d88 <udev_event_execute_rules+0x834>
  413fa0:	mov	w8, #0x1b0                 	// #432
  413fa4:	str	w8, [x25]
  413fa8:	b	413d88 <udev_event_execute_rules+0x834>
  413fac:	stur	xzr, [x29, #-24]
  413fb0:	cbz	x22, 413fc4 <udev_event_execute_rules+0xa70>
  413fb4:	mov	w0, #0x1                   	// #1
  413fb8:	bl	40a2c0 <log_get_max_level_realm@plt>
  413fbc:	cmp	w0, #0x3
  413fc0:	b.ge	414270 <udev_event_execute_rules+0xd1c>  // b.tcont
  413fc4:	mov	x6, xzr
  413fc8:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  413fcc:	add	x8, x8, #0x7f
  413fd0:	cmp	x6, #0x0
  413fd4:	csel	x5, xzr, x8, eq  // eq = none
  413fd8:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  413fdc:	add	x8, x8, #0x66
  413fe0:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  413fe4:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  413fe8:	add	x2, x2, #0x516
  413fec:	add	x4, x4, #0x59
  413ff0:	str	x8, [sp, #8]
  413ff4:	mov	w0, #0x3                   	// #3
  413ff8:	mov	w3, #0x328                 	// #808
  413ffc:	b	413bd0 <udev_event_execute_rules+0x67c>
  414000:	mov	w23, w0
  414004:	stur	xzr, [x29, #-24]
  414008:	cbz	x22, 41401c <udev_event_execute_rules+0xac8>
  41400c:	mov	w0, #0x1                   	// #1
  414010:	bl	40a2c0 <log_get_max_level_realm@plt>
  414014:	cmp	w0, #0x3
  414018:	b.ge	414284 <udev_event_execute_rules+0xd30>  // b.tcont
  41401c:	mov	x6, xzr
  414020:	ldur	w8, [x29, #-12]
  414024:	ldur	x9, [x29, #-8]
  414028:	ldr	x10, [x21, #24]
  41402c:	adrp	x11, 435000 <worker_hash_op+0xdf8>
  414030:	str	w8, [sp, #16]
  414034:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  414038:	add	x11, x11, #0x7f
  41403c:	cmp	x6, #0x0
  414040:	add	x8, x8, #0x80
  414044:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  414048:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  41404c:	csel	x5, xzr, x11, eq  // eq = none
  414050:	stp	x9, x10, [sp, #24]
  414054:	add	x2, x2, #0x516
  414058:	add	x4, x4, #0x59
  41405c:	str	x8, [sp, #8]
  414060:	mov	w0, #0x3                   	// #3
  414064:	mov	w3, #0x32d                 	// #813
  414068:	b	413bd0 <udev_event_execute_rules+0x67c>
  41406c:	mov	w23, w0
  414070:	stur	xzr, [x29, #-24]
  414074:	cbz	x22, 414088 <udev_event_execute_rules+0xb34>
  414078:	mov	w0, #0x1                   	// #1
  41407c:	bl	40a2c0 <log_get_max_level_realm@plt>
  414080:	cmp	w0, #0x4
  414084:	b.ge	4142ac <udev_event_execute_rules+0xd58>  // b.tcont
  414088:	mov	x6, xzr
  41408c:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  414090:	add	x8, x8, #0x7f
  414094:	cmp	x6, #0x0
  414098:	csel	x5, xzr, x8, eq  // eq = none
  41409c:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  4140a0:	add	x8, x8, #0xbe
  4140a4:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  4140a8:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  4140ac:	add	x2, x2, #0x516
  4140b0:	add	x4, x4, #0x59
  4140b4:	str	x8, [sp, #8]
  4140b8:	mov	w0, #0x4                   	// #4
  4140bc:	mov	w3, #0x332                 	// #818
  4140c0:	b	413bd0 <udev_event_execute_rules+0x67c>
  4140c4:	mov	w23, w0
  4140c8:	stur	xzr, [x29, #-24]
  4140cc:	cbz	x22, 4140e0 <udev_event_execute_rules+0xb8c>
  4140d0:	mov	w0, #0x1                   	// #1
  4140d4:	bl	40a2c0 <log_get_max_level_realm@plt>
  4140d8:	cmp	w0, #0x4
  4140dc:	b.ge	4142c0 <udev_event_execute_rules+0xd6c>  // b.tcont
  4140e0:	mov	x6, xzr
  4140e4:	ldr	x8, [x21, #24]
  4140e8:	cmp	x6, #0x0
  4140ec:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  4140f0:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  4140f4:	str	x8, [sp, #16]
  4140f8:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  4140fc:	add	x8, x8, #0xe7
  414100:	csel	x5, xzr, x24, eq  // eq = none
  414104:	add	x2, x2, #0x516
  414108:	add	x4, x4, #0x59
  41410c:	str	x8, [sp, #8]
  414110:	mov	w0, #0x4                   	// #4
  414114:	mov	w3, #0x336                 	// #822
  414118:	b	413bd0 <udev_event_execute_rules+0x67c>
  41411c:	sub	x1, x29, #0x8
  414120:	mov	x0, x19
  414124:	bl	40a780 <sd_device_get_sysname@plt>
  414128:	ldur	x6, [x29, #-8]
  41412c:	b	4136b8 <udev_event_execute_rules+0x164>
  414130:	sub	x1, x29, #0x8
  414134:	mov	x0, x19
  414138:	bl	40a780 <sd_device_get_sysname@plt>
  41413c:	ldur	x6, [x29, #-8]
  414140:	b	413710 <udev_event_execute_rules+0x1bc>
  414144:	sub	x1, x29, #0x8
  414148:	mov	x0, x19
  41414c:	bl	40a780 <sd_device_get_sysname@plt>
  414150:	ldur	x6, [x29, #-8]
  414154:	b	4135ec <udev_event_execute_rules+0x98>
  414158:	sub	x1, x29, #0x8
  41415c:	mov	x0, x19
  414160:	bl	40a780 <sd_device_get_sysname@plt>
  414164:	ldur	x6, [x29, #-8]
  414168:	b	4139fc <udev_event_execute_rules+0x4a8>
  41416c:	sub	x1, x29, #0x8
  414170:	mov	x0, x19
  414174:	bl	40a780 <sd_device_get_sysname@plt>
  414178:	ldur	x6, [x29, #-8]
  41417c:	b	413a68 <udev_event_execute_rules+0x514>
  414180:	sub	x1, x29, #0x8
  414184:	mov	x0, x19
  414188:	bl	40a780 <sd_device_get_sysname@plt>
  41418c:	ldur	x6, [x29, #-8]
  414190:	b	413ae4 <udev_event_execute_rules+0x590>
  414194:	sub	x1, x29, #0x8
  414198:	mov	x0, x19
  41419c:	bl	40a780 <sd_device_get_sysname@plt>
  4141a0:	ldur	x6, [x29, #-8]
  4141a4:	b	413b40 <udev_event_execute_rules+0x5ec>
  4141a8:	sub	x1, x29, #0x8
  4141ac:	mov	x0, x25
  4141b0:	bl	40a780 <sd_device_get_sysname@plt>
  4141b4:	ldur	x6, [x29, #-8]
  4141b8:	b	413874 <udev_event_execute_rules+0x320>
  4141bc:	sub	x1, x29, #0x8
  4141c0:	mov	x0, x19
  4141c4:	bl	40a780 <sd_device_get_sysname@plt>
  4141c8:	ldur	x6, [x29, #-8]
  4141cc:	b	413e20 <udev_event_execute_rules+0x8cc>
  4141d0:	sub	x1, x29, #0x18
  4141d4:	mov	x0, x22
  4141d8:	bl	40a780 <sd_device_get_sysname@plt>
  4141dc:	ldur	x6, [x29, #-24]
  4141e0:	b	413b9c <udev_event_execute_rules+0x648>
  4141e4:	sub	x1, x29, #0x8
  4141e8:	mov	x0, x19
  4141ec:	bl	40a780 <sd_device_get_sysname@plt>
  4141f0:	ldur	x6, [x29, #-8]
  4141f4:	b	413e78 <udev_event_execute_rules+0x924>
  4141f8:	sub	x1, x29, #0x8
  4141fc:	mov	x0, x22
  414200:	bl	40a780 <sd_device_get_sysname@plt>
  414204:	ldur	x6, [x29, #-8]
  414208:	b	413d30 <udev_event_execute_rules+0x7dc>
  41420c:	sub	x1, x29, #0x8
  414210:	mov	x0, x19
  414214:	bl	40a780 <sd_device_get_sysname@plt>
  414218:	ldur	x6, [x29, #-8]
  41421c:	b	413ed0 <udev_event_execute_rules+0x97c>
  414220:	sub	x1, x29, #0x8
  414224:	mov	x0, x25
  414228:	bl	40a780 <sd_device_get_sysname@plt>
  41422c:	ldur	x6, [x29, #-8]
  414230:	b	4137fc <udev_event_execute_rules+0x2a8>
  414234:	sub	x1, x29, #0x8
  414238:	mov	x0, x22
  41423c:	bl	40a780 <sd_device_get_sysname@plt>
  414240:	ldur	x6, [x29, #-8]
  414244:	b	413c5c <udev_event_execute_rules+0x708>
  414248:	sub	x1, x29, #0x8
  41424c:	mov	x0, x22
  414250:	bl	40a780 <sd_device_get_sysname@plt>
  414254:	ldur	x6, [x29, #-8]
  414258:	b	413cdc <udev_event_execute_rules+0x788>
  41425c:	sub	x1, x29, #0x8
  414260:	mov	x0, x22
  414264:	bl	40a780 <sd_device_get_sysname@plt>
  414268:	ldur	x6, [x29, #-8]
  41426c:	b	413f48 <udev_event_execute_rules+0x9f4>
  414270:	sub	x1, x29, #0x18
  414274:	mov	x0, x22
  414278:	bl	40a780 <sd_device_get_sysname@plt>
  41427c:	ldur	x6, [x29, #-24]
  414280:	b	413fc8 <udev_event_execute_rules+0xa74>
  414284:	sub	x1, x29, #0x18
  414288:	mov	x0, x22
  41428c:	bl	40a780 <sd_device_get_sysname@plt>
  414290:	ldur	x6, [x29, #-24]
  414294:	b	414020 <udev_event_execute_rules+0xacc>
  414298:	sub	x1, x29, #0x18
  41429c:	mov	x0, x22
  4142a0:	bl	40a780 <sd_device_get_sysname@plt>
  4142a4:	ldur	x6, [x29, #-24]
  4142a8:	b	41398c <udev_event_execute_rules+0x438>
  4142ac:	sub	x1, x29, #0x18
  4142b0:	mov	x0, x22
  4142b4:	bl	40a780 <sd_device_get_sysname@plt>
  4142b8:	ldur	x6, [x29, #-24]
  4142bc:	b	41408c <udev_event_execute_rules+0xb38>
  4142c0:	sub	x1, x29, #0x18
  4142c4:	mov	x0, x22
  4142c8:	bl	40a780 <sd_device_get_sysname@plt>
  4142cc:	ldur	x6, [x29, #-24]
  4142d0:	b	4140e4 <udev_event_execute_rules+0xb90>
  4142d4:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  4142d8:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  4142dc:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  4142e0:	add	x1, x1, #0x1bf
  4142e4:	add	x2, x2, #0x516
  4142e8:	add	x4, x4, #0x80c
  4142ec:	mov	w0, #0x1                   	// #1
  4142f0:	mov	w3, #0x39f                 	// #927
  4142f4:	bl	40a630 <log_assert_failed_realm@plt>
  4142f8:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  4142fc:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  414300:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  414304:	add	x1, x1, #0x856
  414308:	add	x2, x2, #0x516
  41430c:	add	x4, x4, #0x80c
  414310:	mov	w0, #0x1                   	// #1
  414314:	mov	w3, #0x3a0                 	// #928
  414318:	bl	40a630 <log_assert_failed_realm@plt>

000000000041431c <udev_event_execute_run>:
  41431c:	sub	sp, sp, #0xf0
  414320:	stp	x29, x30, [sp, #144]
  414324:	add	x29, sp, #0x90
  414328:	mov	w8, #0xfffffffe            	// #-2
  41432c:	stp	x28, x27, [sp, #160]
  414330:	stp	x26, x25, [sp, #176]
  414334:	stp	x24, x23, [sp, #192]
  414338:	stp	x22, x21, [sp, #208]
  41433c:	stp	x20, x19, [sp, #224]
  414340:	stur	w8, [x29, #-32]
  414344:	stur	xzr, [x29, #-24]
  414348:	mov	x19, x0
  41434c:	ldr	x0, [x0, #64]
  414350:	mov	x20, x1
  414354:	sub	x1, x29, #0x20
  414358:	sub	x2, x29, #0x10
  41435c:	sub	x3, x29, #0x8
  414360:	bl	40a7b0 <internal_hashmap_iterate@plt>
  414364:	tbz	w0, #0, 414694 <udev_event_execute_run+0x378>
  414368:	adrp	x26, 435000 <worker_hash_op+0xdf8>
  41436c:	adrp	x21, 436000 <worker_hash_op+0x1df8>
  414370:	adrp	x22, 436000 <worker_hash_op+0x1df8>
  414374:	adrp	x28, 436000 <worker_hash_op+0x1df8>
  414378:	add	x26, x26, #0x7f
  41437c:	add	x21, x21, #0x516
  414380:	add	x22, x22, #0x913
  414384:	add	x28, x28, #0x92a
  414388:	b	4143e4 <udev_event_execute_run+0xc8>
  41438c:	mov	x6, xzr
  414390:	ldur	x8, [x29, #-8]
  414394:	cmp	x6, #0x0
  414398:	csel	x5, xzr, x26, eq  // eq = none
  41439c:	mov	w0, #0x7                   	// #7
  4143a0:	str	x8, [sp, #16]
  4143a4:	adrp	x8, 436000 <worker_hash_op+0x1df8>
  4143a8:	add	x8, x8, #0x948
  4143ac:	mov	w3, #0x3ed                 	// #1005
  4143b0:	str	x8, [sp, #8]
  4143b4:	str	xzr, [sp]
  4143b8:	mov	w1, w23
  4143bc:	mov	x2, x21
  4143c0:	mov	x4, x22
  4143c4:	mov	x7, xzr
  4143c8:	bl	40a730 <log_object_internal@plt>
  4143cc:	ldr	x0, [x19, #64]
  4143d0:	sub	x1, x29, #0x20
  4143d4:	sub	x2, x29, #0x10
  4143d8:	sub	x3, x29, #0x8
  4143dc:	bl	40a7b0 <internal_hashmap_iterate@plt>
  4143e0:	tbz	w0, #0, 414694 <udev_event_execute_run+0x378>
  4143e4:	ldur	w8, [x29, #-16]
  4143e8:	cbz	w8, 41448c <udev_event_execute_run+0x170>
  4143ec:	str	xzr, [sp, #48]
  4143f0:	ldr	x24, [x19]
  4143f4:	sub	w23, w8, #0x1
  4143f8:	cbz	x24, 41440c <udev_event_execute_run+0xf0>
  4143fc:	mov	w0, #0x1                   	// #1
  414400:	bl	40a2c0 <log_get_max_level_realm@plt>
  414404:	cmp	w0, #0x7
  414408:	b.ge	41462c <udev_event_execute_run+0x310>  // b.tcont
  41440c:	mov	x6, xzr
  414410:	ldur	x8, [x29, #-8]
  414414:	cmp	x6, #0x0
  414418:	csel	x5, xzr, x26, eq  // eq = none
  41441c:	mov	w0, #0x7                   	// #7
  414420:	mov	w3, #0x3ea                 	// #1002
  414424:	mov	w1, wzr
  414428:	mov	x2, x21
  41442c:	mov	x4, x22
  414430:	mov	x7, xzr
  414434:	stp	x28, x8, [sp, #8]
  414438:	str	xzr, [sp]
  41443c:	bl	40a730 <log_object_internal@plt>
  414440:	ldr	x0, [x19]
  414444:	ldur	x2, [x29, #-8]
  414448:	mov	w1, w23
  41444c:	mov	w3, wzr
  414450:	bl	4209d0 <udev_builtin_run>
  414454:	tbz	w0, #31, 4143cc <udev_event_execute_run+0xb0>
  414458:	str	xzr, [sp, #48]
  41445c:	ldr	x24, [x19]
  414460:	mov	w23, w0
  414464:	cbz	x24, 41438c <udev_event_execute_run+0x70>
  414468:	mov	w0, #0x1                   	// #1
  41446c:	bl	40a2c0 <log_get_max_level_realm@plt>
  414470:	cmp	w0, #0x7
  414474:	b.lt	41438c <udev_event_execute_run+0x70>  // b.tstop
  414478:	add	x1, sp, #0x30
  41447c:	mov	x0, x24
  414480:	bl	40a780 <sd_device_get_sysname@plt>
  414484:	ldr	x6, [sp, #48]
  414488:	b	414390 <udev_event_execute_run+0x74>
  41448c:	ldr	x23, [x19, #72]
  414490:	cbz	x23, 414514 <udev_event_execute_run+0x1f8>
  414494:	str	xzr, [sp, #40]
  414498:	ldr	x24, [x19]
  41449c:	cbz	x24, 4144b4 <udev_event_execute_run+0x198>
  4144a0:	mov	w0, #0x1                   	// #1
  4144a4:	bl	40a2c0 <log_get_max_level_realm@plt>
  4144a8:	cmp	w0, #0x7
  4144ac:	b.ge	414654 <udev_event_execute_run+0x338>  // b.tcont
  4144b0:	mov	x24, xzr
  4144b4:	ldur	x27, [x29, #-8]
  4144b8:	mov	w3, #0x4240                	// #16960
  4144bc:	cmp	x24, #0x0
  4144c0:	add	x0, sp, #0x30
  4144c4:	mov	w1, #0x40                  	// #64
  4144c8:	movk	w3, #0xf, lsl #16
  4144cc:	mov	x2, x23
  4144d0:	csel	x25, xzr, x26, eq  // eq = none
  4144d4:	bl	40af10 <format_timespan@plt>
  4144d8:	adrp	x8, 436000 <worker_hash_op+0x1df8>
  4144dc:	stp	x27, x0, [sp, #16]
  4144e0:	add	x8, x8, #0x97a
  4144e4:	mov	w0, #0x7                   	// #7
  4144e8:	mov	w3, #0x3f3                 	// #1011
  4144ec:	mov	w1, wzr
  4144f0:	mov	x2, x21
  4144f4:	mov	x4, x22
  4144f8:	mov	x5, x25
  4144fc:	mov	x6, x24
  414500:	mov	x7, xzr
  414504:	stp	xzr, x8, [sp]
  414508:	bl	40a730 <log_object_internal@plt>
  41450c:	ldr	w0, [x19, #72]
  414510:	bl	40af20 <usleep@plt>
  414514:	str	xzr, [sp, #48]
  414518:	ldr	x23, [x19]
  41451c:	cbz	x23, 414530 <udev_event_execute_run+0x214>
  414520:	mov	w0, #0x1                   	// #1
  414524:	bl	40a2c0 <log_get_max_level_realm@plt>
  414528:	cmp	w0, #0x7
  41452c:	b.ge	414640 <udev_event_execute_run+0x324>  // b.tcont
  414530:	mov	x6, xzr
  414534:	ldur	x8, [x29, #-8]
  414538:	cmp	x6, #0x0
  41453c:	csel	x5, xzr, x26, eq  // eq = none
  414540:	mov	w0, #0x7                   	// #7
  414544:	str	x8, [sp, #16]
  414548:	adrp	x8, 436000 <worker_hash_op+0x1df8>
  41454c:	add	x8, x8, #0x99d
  414550:	mov	w3, #0x3f7                 	// #1015
  414554:	mov	w1, wzr
  414558:	mov	x2, x21
  41455c:	mov	x4, x22
  414560:	mov	x7, xzr
  414564:	stp	xzr, x8, [sp]
  414568:	bl	40a730 <log_object_internal@plt>
  41456c:	ldur	x3, [x29, #-8]
  414570:	mov	x0, x19
  414574:	mov	x1, x20
  414578:	mov	w2, wzr
  41457c:	mov	x4, xzr
  414580:	mov	x5, xzr
  414584:	bl	412de8 <udev_event_spawn>
  414588:	mov	w23, w0
  41458c:	tbnz	w0, #31, 4145e4 <udev_event_execute_run+0x2c8>
  414590:	cbz	w23, 4143cc <udev_event_execute_run+0xb0>
  414594:	str	xzr, [sp, #48]
  414598:	ldr	x24, [x19]
  41459c:	cbz	x24, 4145b0 <udev_event_execute_run+0x294>
  4145a0:	mov	w0, #0x1                   	// #1
  4145a4:	bl	40a2c0 <log_get_max_level_realm@plt>
  4145a8:	cmp	w0, #0x7
  4145ac:	b.ge	41466c <udev_event_execute_run+0x350>  // b.tcont
  4145b0:	mov	x6, xzr
  4145b4:	ldur	x8, [x29, #-8]
  4145b8:	cmp	x6, #0x0
  4145bc:	csel	x5, xzr, x26, eq  // eq = none
  4145c0:	mov	w0, #0x7                   	// #7
  4145c4:	str	x8, [sp, #16]
  4145c8:	adrp	x8, 436000 <worker_hash_op+0x1df8>
  4145cc:	add	x8, x8, #0x9d7
  4145d0:	mov	w3, #0x3fc                 	// #1020
  4145d4:	mov	w1, wzr
  4145d8:	str	w23, [sp, #24]
  4145dc:	stp	xzr, x8, [sp]
  4145e0:	b	4143bc <udev_event_execute_run+0xa0>
  4145e4:	str	xzr, [sp, #48]
  4145e8:	ldr	x24, [x19]
  4145ec:	cbz	x24, 414600 <udev_event_execute_run+0x2e4>
  4145f0:	mov	w0, #0x1                   	// #1
  4145f4:	bl	40a2c0 <log_get_max_level_realm@plt>
  4145f8:	cmp	w0, #0x4
  4145fc:	b.ge	414680 <udev_event_execute_run+0x364>  // b.tcont
  414600:	mov	x6, xzr
  414604:	ldur	x8, [x29, #-8]
  414608:	cmp	x6, #0x0
  41460c:	csel	x5, xzr, x26, eq  // eq = none
  414610:	mov	w0, #0x4                   	// #4
  414614:	str	x8, [sp, #16]
  414618:	adrp	x8, 436000 <worker_hash_op+0x1df8>
  41461c:	add	x8, x8, #0x9b2
  414620:	str	x8, [sp, #8]
  414624:	mov	w3, #0x3fa                 	// #1018
  414628:	b	4143b4 <udev_event_execute_run+0x98>
  41462c:	add	x1, sp, #0x30
  414630:	mov	x0, x24
  414634:	bl	40a780 <sd_device_get_sysname@plt>
  414638:	ldr	x6, [sp, #48]
  41463c:	b	414410 <udev_event_execute_run+0xf4>
  414640:	add	x1, sp, #0x30
  414644:	mov	x0, x23
  414648:	bl	40a780 <sd_device_get_sysname@plt>
  41464c:	ldr	x6, [sp, #48]
  414650:	b	414534 <udev_event_execute_run+0x218>
  414654:	add	x1, sp, #0x28
  414658:	mov	x0, x24
  41465c:	bl	40a780 <sd_device_get_sysname@plt>
  414660:	ldr	x24, [sp, #40]
  414664:	ldr	x23, [x19, #72]
  414668:	b	4144b4 <udev_event_execute_run+0x198>
  41466c:	add	x1, sp, #0x30
  414670:	mov	x0, x24
  414674:	bl	40a780 <sd_device_get_sysname@plt>
  414678:	ldr	x6, [sp, #48]
  41467c:	b	4145b4 <udev_event_execute_run+0x298>
  414680:	add	x1, sp, #0x30
  414684:	mov	x0, x24
  414688:	bl	40a780 <sd_device_get_sysname@plt>
  41468c:	ldr	x6, [sp, #48]
  414690:	b	414604 <udev_event_execute_run+0x2e8>
  414694:	ldp	x20, x19, [sp, #224]
  414698:	ldp	x22, x21, [sp, #208]
  41469c:	ldp	x24, x23, [sp, #192]
  4146a0:	ldp	x26, x25, [sp, #176]
  4146a4:	ldp	x28, x27, [sp, #160]
  4146a8:	ldp	x29, x30, [sp, #144]
  4146ac:	add	sp, sp, #0xf0
  4146b0:	ret

00000000004146b4 <on_spawn_timeout_warning>:
  4146b4:	sub	sp, sp, #0xa0
  4146b8:	stp	x29, x30, [sp, #112]
  4146bc:	stp	x22, x21, [sp, #128]
  4146c0:	stp	x20, x19, [sp, #144]
  4146c4:	add	x29, sp, #0x70
  4146c8:	cbz	x2, 414790 <on_spawn_timeout_warning+0xdc>
  4146cc:	str	xzr, [sp, #40]
  4146d0:	ldr	x19, [x2]
  4146d4:	mov	x20, x2
  4146d8:	cbz	x19, 4146f0 <on_spawn_timeout_warning+0x3c>
  4146dc:	mov	w0, #0x1                   	// #1
  4146e0:	bl	40a2c0 <log_get_max_level_realm@plt>
  4146e4:	cmp	w0, #0x4
  4146e8:	b.ge	41477c <on_spawn_timeout_warning+0xc8>  // b.tcont
  4146ec:	mov	x19, xzr
  4146f0:	ldr	x2, [x20, #24]
  4146f4:	ldr	x21, [x20, #8]
  4146f8:	ldr	w22, [x20, #16]
  4146fc:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  414700:	mov	w3, #0x4240                	// #16960
  414704:	add	x8, x8, #0x7f
  414708:	cmp	x19, #0x0
  41470c:	add	x0, sp, #0x30
  414710:	mov	w1, #0x40                  	// #64
  414714:	movk	w3, #0xf, lsl #16
  414718:	csel	x20, xzr, x8, eq  // eq = none
  41471c:	bl	40af10 <format_timespan@plt>
  414720:	adrp	x8, 436000 <worker_hash_op+0x1df8>
  414724:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  414728:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  41472c:	str	x0, [sp, #32]
  414730:	add	x8, x8, #0xc63
  414734:	add	x2, x2, #0x516
  414738:	add	x4, x4, #0xc4a
  41473c:	mov	w0, #0x4                   	// #4
  414740:	mov	w3, #0x25b                 	// #603
  414744:	mov	w1, wzr
  414748:	mov	x5, x20
  41474c:	mov	x6, x19
  414750:	mov	x7, xzr
  414754:	str	w22, [sp, #24]
  414758:	stp	x8, x21, [sp, #8]
  41475c:	str	xzr, [sp]
  414760:	bl	40a730 <log_object_internal@plt>
  414764:	ldp	x20, x19, [sp, #144]
  414768:	ldp	x22, x21, [sp, #128]
  41476c:	ldp	x29, x30, [sp, #112]
  414770:	mov	w0, #0x1                   	// #1
  414774:	add	sp, sp, #0xa0
  414778:	ret
  41477c:	add	x1, sp, #0x28
  414780:	mov	x0, x19
  414784:	bl	40a780 <sd_device_get_sysname@plt>
  414788:	ldr	x19, [sp, #40]
  41478c:	b	4146f0 <on_spawn_timeout_warning+0x3c>
  414790:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  414794:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  414798:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  41479c:	add	x1, x1, #0xc02
  4147a0:	add	x2, x2, #0x516
  4147a4:	add	x4, x4, #0xc08
  4147a8:	mov	w0, #0x1                   	// #1
  4147ac:	mov	w3, #0x257                 	// #599
  4147b0:	bl	40a630 <log_assert_failed_realm@plt>

00000000004147b4 <on_spawn_timeout>:
  4147b4:	sub	sp, sp, #0xa0
  4147b8:	stp	x29, x30, [sp, #112]
  4147bc:	stp	x22, x21, [sp, #128]
  4147c0:	stp	x20, x19, [sp, #144]
  4147c4:	add	x29, sp, #0x70
  4147c8:	cbz	x2, 41489c <on_spawn_timeout+0xe8>
  4147cc:	ldr	w0, [x2, #16]
  4147d0:	mov	w1, #0x9                   	// #9
  4147d4:	mov	x19, x2
  4147d8:	bl	40aaf0 <kill_and_sigcont@plt>
  4147dc:	str	xzr, [sp, #40]
  4147e0:	ldr	x20, [x19]
  4147e4:	cbz	x20, 4147fc <on_spawn_timeout+0x48>
  4147e8:	mov	w0, #0x1                   	// #1
  4147ec:	bl	40a2c0 <log_get_max_level_realm@plt>
  4147f0:	cmp	w0, #0x3
  4147f4:	b.ge	414888 <on_spawn_timeout+0xd4>  // b.tcont
  4147f8:	mov	x20, xzr
  4147fc:	ldr	x2, [x19, #32]
  414800:	ldr	x21, [x19, #8]
  414804:	ldr	w22, [x19, #16]
  414808:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  41480c:	mov	w3, #0x4240                	// #16960
  414810:	add	x8, x8, #0x7f
  414814:	cmp	x20, #0x0
  414818:	add	x0, sp, #0x30
  41481c:	mov	w1, #0x40                  	// #64
  414820:	movk	w3, #0xf, lsl #16
  414824:	csel	x19, xzr, x8, eq  // eq = none
  414828:	bl	40af10 <format_timespan@plt>
  41482c:	adrp	x8, 436000 <worker_hash_op+0x1df8>
  414830:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  414834:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  414838:	str	x0, [sp, #32]
  41483c:	add	x8, x8, #0xced
  414840:	add	x2, x2, #0x516
  414844:	add	x4, x4, #0xcdc
  414848:	mov	w0, #0x3                   	// #3
  41484c:	mov	w3, #0x24e                 	// #590
  414850:	mov	w1, wzr
  414854:	mov	x5, x19
  414858:	mov	x6, x20
  41485c:	mov	x7, xzr
  414860:	str	w22, [sp, #24]
  414864:	stp	x8, x21, [sp, #8]
  414868:	str	xzr, [sp]
  41486c:	bl	40a730 <log_object_internal@plt>
  414870:	ldp	x20, x19, [sp, #144]
  414874:	ldp	x22, x21, [sp, #128]
  414878:	ldp	x29, x30, [sp, #112]
  41487c:	mov	w0, #0x1                   	// #1
  414880:	add	sp, sp, #0xa0
  414884:	ret
  414888:	add	x1, sp, #0x28
  41488c:	mov	x0, x20
  414890:	bl	40a780 <sd_device_get_sysname@plt>
  414894:	ldr	x20, [sp, #40]
  414898:	b	4147fc <on_spawn_timeout+0x48>
  41489c:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  4148a0:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  4148a4:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  4148a8:	add	x1, x1, #0xc02
  4148ac:	add	x2, x2, #0x516
  4148b0:	add	x4, x4, #0xca2
  4148b4:	mov	w0, #0x1                   	// #1
  4148b8:	mov	w3, #0x248                 	// #584
  4148bc:	bl	40a630 <log_assert_failed_realm@plt>

00000000004148c0 <on_spawn_io>:
  4148c0:	stp	x29, x30, [sp, #-96]!
  4148c4:	stp	x28, x27, [sp, #16]
  4148c8:	stp	x26, x25, [sp, #32]
  4148cc:	stp	x24, x23, [sp, #48]
  4148d0:	stp	x22, x21, [sp, #64]
  4148d4:	stp	x20, x19, [sp, #80]
  4148d8:	mov	x29, sp
  4148dc:	sub	sp, sp, #0x1, lsl #12
  4148e0:	sub	sp, sp, #0x40
  4148e4:	cbz	x3, 414b30 <on_spawn_io+0x270>
  4148e8:	ldr	w8, [x3, #52]
  4148ec:	mov	x19, x3
  4148f0:	mov	w20, w1
  4148f4:	cmp	w8, w1
  4148f8:	b.eq	414908 <on_spawn_io+0x48>  // b.none
  4148fc:	ldr	w9, [x19, #56]
  414900:	cmp	w9, w20
  414904:	b.ne	414b78 <on_spawn_io+0x2b8>  // b.any
  414908:	ldr	x9, [x19, #64]
  41490c:	cbz	x9, 414a58 <on_spawn_io+0x198>
  414910:	ldp	x11, x10, [x19, #72]
  414914:	cmp	x10, x11
  414918:	b.cs	414b54 <on_spawn_io+0x294>  // b.hs, b.nlast
  41491c:	add	x21, sp, #0x38
  414920:	mov	w2, #0xfff                 	// #4095
  414924:	cbz	x9, 414940 <on_spawn_io+0x80>
  414928:	cmp	w8, w20
  41492c:	b.ne	414940 <on_spawn_io+0x80>  // b.any
  414930:	ldp	x10, x8, [x19, #72]
  414934:	add	x21, x9, x8
  414938:	mvn	x8, x8
  41493c:	add	x2, x10, x8
  414940:	mov	w0, w20
  414944:	mov	x1, x21
  414948:	bl	40a830 <read@plt>
  41494c:	tbnz	x0, #63, 414a70 <on_spawn_io+0x1b0>
  414950:	strb	wzr, [x21, x0]
  414954:	ldr	w8, [x19, #52]
  414958:	cmp	w8, w20
  41495c:	b.ne	414974 <on_spawn_io+0xb4>  // b.any
  414960:	ldr	x8, [x19, #64]
  414964:	cbz	x8, 414974 <on_spawn_io+0xb4>
  414968:	ldr	x8, [x19, #80]
  41496c:	add	x8, x8, x0
  414970:	str	x8, [x19, #80]
  414974:	cmp	x0, #0x1
  414978:	b.lt	414af4 <on_spawn_io+0x234>  // b.tstop
  41497c:	ldr	w8, [x19, #56]
  414980:	tbnz	w8, #31, 414af4 <on_spawn_io+0x234>
  414984:	mov	x0, x21
  414988:	bl	40af30 <strv_split_newlines@plt>
  41498c:	cbz	x0, 414af4 <on_spawn_io+0x234>
  414990:	ldr	x8, [x0]
  414994:	str	x0, [sp, #40]
  414998:	cbz	x8, 414aec <on_spawn_io+0x22c>
  41499c:	ldr	x8, [sp, #40]
  4149a0:	adrp	x26, 435000 <worker_hash_op+0xdf8>
  4149a4:	adrp	x27, 436000 <worker_hash_op+0x1df8>
  4149a8:	adrp	x28, 436000 <worker_hash_op+0x1df8>
  4149ac:	adrp	x21, 436000 <worker_hash_op+0x1df8>
  4149b0:	adrp	x22, 436000 <worker_hash_op+0x1df8>
  4149b4:	adrp	x23, 436000 <worker_hash_op+0x1df8>
  4149b8:	add	x25, x8, #0x8
  4149bc:	add	x26, x26, #0x7f
  4149c0:	add	x27, x27, #0xe07
  4149c4:	add	x28, x28, #0xe03
  4149c8:	add	x21, x21, #0xdf5
  4149cc:	add	x22, x22, #0x516
  4149d0:	add	x23, x23, #0xdc7
  4149d4:	str	xzr, [sp, #48]
  4149d8:	ldr	x24, [x19]
  4149dc:	cbz	x24, 4149f0 <on_spawn_io+0x130>
  4149e0:	mov	w0, #0x1                   	// #1
  4149e4:	bl	40a2c0 <log_get_max_level_realm@plt>
  4149e8:	cmp	w0, #0x7
  4149ec:	b.ge	414a44 <on_spawn_io+0x184>  // b.tcont
  4149f0:	mov	x6, xzr
  4149f4:	ldr	w8, [x19, #52]
  4149f8:	ldr	x9, [x19, #8]
  4149fc:	ldur	x10, [x25, #-8]
  414a00:	cmp	x6, #0x0
  414a04:	csel	x5, xzr, x26, eq  // eq = none
  414a08:	cmp	w8, w20
  414a0c:	csel	x8, x28, x27, eq  // eq = none
  414a10:	mov	w0, #0x7                   	// #7
  414a14:	mov	w3, #0x23e                 	// #574
  414a18:	mov	w1, wzr
  414a1c:	mov	x2, x22
  414a20:	mov	x4, x23
  414a24:	mov	x7, xzr
  414a28:	stp	x8, x10, [sp, #24]
  414a2c:	stp	x21, x9, [sp, #8]
  414a30:	str	xzr, [sp]
  414a34:	bl	40a730 <log_object_internal@plt>
  414a38:	ldr	x8, [x25], #8
  414a3c:	cbnz	x8, 4149d4 <on_spawn_io+0x114>
  414a40:	b	414aec <on_spawn_io+0x22c>
  414a44:	add	x1, sp, #0x30
  414a48:	mov	x0, x24
  414a4c:	bl	40a780 <sd_device_get_sysname@plt>
  414a50:	ldr	x6, [sp, #48]
  414a54:	b	4149f4 <on_spawn_io+0x134>
  414a58:	add	x21, sp, #0x38
  414a5c:	mov	w2, #0xfff                 	// #4095
  414a60:	mov	w0, w20
  414a64:	mov	x1, x21
  414a68:	bl	40a830 <read@plt>
  414a6c:	tbz	x0, #63, 414950 <on_spawn_io+0x90>
  414a70:	bl	40a3e0 <__errno_location@plt>
  414a74:	ldr	w20, [x0]
  414a78:	cmp	w20, #0xb
  414a7c:	b.eq	414af4 <on_spawn_io+0x234>  // b.none
  414a80:	str	xzr, [sp, #48]
  414a84:	ldr	x21, [x19]
  414a88:	cbz	x21, 414a9c <on_spawn_io+0x1dc>
  414a8c:	mov	w0, #0x1                   	// #1
  414a90:	bl	40a2c0 <log_get_max_level_realm@plt>
  414a94:	cmp	w0, #0x3
  414a98:	b.ge	414b1c <on_spawn_io+0x25c>  // b.tcont
  414a9c:	mov	x6, xzr
  414aa0:	ldr	x8, [x19, #8]
  414aa4:	adrp	x9, 435000 <worker_hash_op+0xdf8>
  414aa8:	add	x9, x9, #0x7f
  414aac:	cmp	x6, #0x0
  414ab0:	str	x8, [sp, #16]
  414ab4:	adrp	x8, 436000 <worker_hash_op+0x1df8>
  414ab8:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  414abc:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  414ac0:	csel	x5, xzr, x9, eq  // eq = none
  414ac4:	add	x8, x8, #0xdd3
  414ac8:	add	x2, x2, #0x516
  414acc:	add	x4, x4, #0xdc7
  414ad0:	mov	w0, #0x3                   	// #3
  414ad4:	mov	w3, #0x22a                 	// #554
  414ad8:	mov	w1, w20
  414adc:	mov	x7, xzr
  414ae0:	stp	xzr, x8, [sp]
  414ae4:	bl	40a730 <log_object_internal@plt>
  414ae8:	b	414af4 <on_spawn_io+0x234>
  414aec:	ldr	x0, [sp, #40]
  414af0:	bl	40ae30 <strv_free@plt>
  414af4:	mov	w0, wzr
  414af8:	add	sp, sp, #0x1, lsl #12
  414afc:	add	sp, sp, #0x40
  414b00:	ldp	x20, x19, [sp, #80]
  414b04:	ldp	x22, x21, [sp, #64]
  414b08:	ldp	x24, x23, [sp, #48]
  414b0c:	ldp	x26, x25, [sp, #32]
  414b10:	ldp	x28, x27, [sp, #16]
  414b14:	ldp	x29, x30, [sp], #96
  414b18:	ret
  414b1c:	add	x1, sp, #0x30
  414b20:	mov	x0, x21
  414b24:	bl	40a780 <sd_device_get_sysname@plt>
  414b28:	ldr	x6, [sp, #48]
  414b2c:	b	414aa0 <on_spawn_io+0x1e0>
  414b30:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  414b34:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  414b38:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  414b3c:	add	x1, x1, #0xc02
  414b40:	add	x2, x2, #0x516
  414b44:	add	x4, x4, #0xd23
  414b48:	mov	w0, #0x1                   	// #1
  414b4c:	mov	w3, #0x21a                 	// #538
  414b50:	bl	40a630 <log_assert_failed_realm@plt>
  414b54:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  414b58:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  414b5c:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  414b60:	add	x1, x1, #0xd8e
  414b64:	add	x2, x2, #0x516
  414b68:	add	x4, x4, #0xd23
  414b6c:	mov	w0, #0x1                   	// #1
  414b70:	mov	w3, #0x21c                 	// #540
  414b74:	bl	40a630 <log_assert_failed_realm@plt>
  414b78:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  414b7c:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  414b80:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  414b84:	add	x1, x1, #0xd5d
  414b88:	add	x2, x2, #0x516
  414b8c:	add	x4, x4, #0xd23
  414b90:	mov	w0, #0x1                   	// #1
  414b94:	mov	w3, #0x21b                 	// #539
  414b98:	bl	40a630 <log_assert_failed_realm@plt>

0000000000414b9c <on_spawn_sigchld>:
  414b9c:	sub	sp, sp, #0x70
  414ba0:	stp	x29, x30, [sp, #48]
  414ba4:	stp	x24, x23, [sp, #64]
  414ba8:	stp	x22, x21, [sp, #80]
  414bac:	stp	x20, x19, [sp, #96]
  414bb0:	add	x29, sp, #0x30
  414bb4:	cbz	x2, 414e2c <on_spawn_sigchld+0x290>
  414bb8:	ldr	w8, [x1, #8]
  414bbc:	mov	x21, x2
  414bc0:	mov	x20, x1
  414bc4:	mov	x19, x0
  414bc8:	sub	w9, w8, #0x2
  414bcc:	cmp	w9, #0x2
  414bd0:	b.cs	414c48 <on_spawn_sigchld+0xac>  // b.hs, b.nlast
  414bd4:	stur	xzr, [x29, #-8]
  414bd8:	ldr	x22, [x21]
  414bdc:	cbz	x22, 414bf4 <on_spawn_sigchld+0x58>
  414be0:	mov	w0, #0x1                   	// #1
  414be4:	bl	40a2c0 <log_get_max_level_realm@plt>
  414be8:	cmp	w0, #0x3
  414bec:	b.ge	414dd8 <on_spawn_sigchld+0x23c>  // b.tcont
  414bf0:	mov	x22, xzr
  414bf4:	ldr	w0, [x20, #24]
  414bf8:	ldr	x21, [x21, #8]
  414bfc:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  414c00:	add	x8, x8, #0x7f
  414c04:	cmp	x22, #0x0
  414c08:	csel	x20, xzr, x8, eq  // eq = none
  414c0c:	bl	40a720 <signal_to_string@plt>
  414c10:	adrp	x8, 436000 <worker_hash_op+0x1df8>
  414c14:	add	x8, x8, #0xe9e
  414c18:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  414c1c:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  414c20:	stp	x21, x0, [sp, #16]
  414c24:	add	x2, x2, #0x516
  414c28:	add	x4, x4, #0xe4e
  414c2c:	stp	xzr, x8, [sp]
  414c30:	mov	w0, #0x3                   	// #3
  414c34:	mov	w3, #0x271                 	// #625
  414c38:	mov	w1, wzr
  414c3c:	mov	x5, x20
  414c40:	mov	x6, x22
  414c44:	b	414d30 <on_spawn_sigchld+0x194>
  414c48:	cmp	w8, #0x1
  414c4c:	b.ne	414cd0 <on_spawn_sigchld+0x134>  // b.any
  414c50:	ldr	w24, [x20, #24]
  414c54:	cbz	w24, 414d40 <on_spawn_sigchld+0x1a4>
  414c58:	stur	xzr, [x29, #-8]
  414c5c:	ldrb	w8, [x21, #48]
  414c60:	ldr	x23, [x21]
  414c64:	mov	w9, #0x7                   	// #7
  414c68:	cmp	w8, #0x0
  414c6c:	mov	w8, #0x4                   	// #4
  414c70:	csel	w22, w8, w9, eq  // eq = none
  414c74:	cbz	x23, 414c88 <on_spawn_sigchld+0xec>
  414c78:	mov	w0, #0x1                   	// #1
  414c7c:	bl	40a2c0 <log_get_max_level_realm@plt>
  414c80:	cmp	w0, w22
  414c84:	b.ge	414e00 <on_spawn_sigchld+0x264>  // b.tcont
  414c88:	mov	x6, xzr
  414c8c:	ldr	x8, [x21, #8]
  414c90:	adrp	x9, 435000 <worker_hash_op+0xdf8>
  414c94:	add	x9, x9, #0x7f
  414c98:	cmp	x6, #0x0
  414c9c:	str	x8, [sp, #16]
  414ca0:	adrp	x8, 436000 <worker_hash_op+0x1df8>
  414ca4:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  414ca8:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  414cac:	csel	x5, xzr, x9, eq  // eq = none
  414cb0:	add	x8, x8, #0xe77
  414cb4:	add	x2, x2, #0x516
  414cb8:	add	x4, x4, #0xe4e
  414cbc:	mov	w3, #0x26c                 	// #620
  414cc0:	mov	w0, w22
  414cc4:	str	w24, [sp, #24]
  414cc8:	stp	xzr, x8, [sp]
  414ccc:	b	414d9c <on_spawn_sigchld+0x200>
  414cd0:	stur	xzr, [x29, #-8]
  414cd4:	ldr	x20, [x21]
  414cd8:	cbz	x20, 414cec <on_spawn_sigchld+0x150>
  414cdc:	mov	w0, #0x1                   	// #1
  414ce0:	bl	40a2c0 <log_get_max_level_realm@plt>
  414ce4:	cmp	w0, #0x3
  414ce8:	b.ge	414dec <on_spawn_sigchld+0x250>  // b.tcont
  414cec:	mov	x6, xzr
  414cf0:	ldr	x8, [x21, #8]
  414cf4:	adrp	x9, 435000 <worker_hash_op+0xdf8>
  414cf8:	add	x9, x9, #0x7f
  414cfc:	cmp	x6, #0x0
  414d00:	str	x8, [sp, #16]
  414d04:	adrp	x8, 436000 <worker_hash_op+0x1df8>
  414d08:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  414d0c:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  414d10:	csel	x5, xzr, x9, eq  // eq = none
  414d14:	add	x8, x8, #0xec4
  414d18:	add	x2, x2, #0x516
  414d1c:	add	x4, x4, #0xe4e
  414d20:	mov	w0, #0x3                   	// #3
  414d24:	mov	w3, #0x274                 	// #628
  414d28:	mov	w1, wzr
  414d2c:	stp	xzr, x8, [sp]
  414d30:	mov	x7, xzr
  414d34:	bl	40a730 <log_object_internal@plt>
  414d38:	mov	w20, #0xfffffffb            	// #-5
  414d3c:	b	414dac <on_spawn_sigchld+0x210>
  414d40:	stur	xzr, [x29, #-8]
  414d44:	ldr	x22, [x21]
  414d48:	cbz	x22, 414d5c <on_spawn_sigchld+0x1c0>
  414d4c:	mov	w0, #0x1                   	// #1
  414d50:	bl	40a2c0 <log_get_max_level_realm@plt>
  414d54:	cmp	w0, #0x7
  414d58:	b.ge	414e18 <on_spawn_sigchld+0x27c>  // b.tcont
  414d5c:	mov	x6, xzr
  414d60:	ldr	x8, [x21, #8]
  414d64:	adrp	x9, 435000 <worker_hash_op+0xdf8>
  414d68:	add	x9, x9, #0x7f
  414d6c:	cmp	x6, #0x0
  414d70:	str	x8, [sp, #16]
  414d74:	adrp	x8, 436000 <worker_hash_op+0x1df8>
  414d78:	add	x8, x8, #0xe5f
  414d7c:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  414d80:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  414d84:	csel	x5, xzr, x9, eq  // eq = none
  414d88:	add	x2, x2, #0x516
  414d8c:	add	x4, x4, #0xe4e
  414d90:	stp	xzr, x8, [sp]
  414d94:	mov	w0, #0x7                   	// #7
  414d98:	mov	w3, #0x269                 	// #617
  414d9c:	mov	w1, wzr
  414da0:	mov	x7, xzr
  414da4:	bl	40a730 <log_object_internal@plt>
  414da8:	ldr	w20, [x20, #24]
  414dac:	mov	x0, x19
  414db0:	bl	40ac90 <sd_event_source_get_event@plt>
  414db4:	mov	w1, w20
  414db8:	bl	40aa10 <sd_event_exit@plt>
  414dbc:	ldp	x20, x19, [sp, #96]
  414dc0:	ldp	x22, x21, [sp, #80]
  414dc4:	ldp	x24, x23, [sp, #64]
  414dc8:	ldp	x29, x30, [sp, #48]
  414dcc:	mov	w0, #0x1                   	// #1
  414dd0:	add	sp, sp, #0x70
  414dd4:	ret
  414dd8:	sub	x1, x29, #0x8
  414ddc:	mov	x0, x22
  414de0:	bl	40a780 <sd_device_get_sysname@plt>
  414de4:	ldur	x22, [x29, #-8]
  414de8:	b	414bf4 <on_spawn_sigchld+0x58>
  414dec:	sub	x1, x29, #0x8
  414df0:	mov	x0, x20
  414df4:	bl	40a780 <sd_device_get_sysname@plt>
  414df8:	ldur	x6, [x29, #-8]
  414dfc:	b	414cf0 <on_spawn_sigchld+0x154>
  414e00:	sub	x1, x29, #0x8
  414e04:	mov	x0, x23
  414e08:	bl	40a780 <sd_device_get_sysname@plt>
  414e0c:	ldur	x6, [x29, #-8]
  414e10:	ldr	w24, [x20, #24]
  414e14:	b	414c8c <on_spawn_sigchld+0xf0>
  414e18:	sub	x1, x29, #0x8
  414e1c:	mov	x0, x22
  414e20:	bl	40a780 <sd_device_get_sysname@plt>
  414e24:	ldur	x6, [x29, #-8]
  414e28:	b	414d60 <on_spawn_sigchld+0x1c4>
  414e2c:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  414e30:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  414e34:	adrp	x4, 436000 <worker_hash_op+0x1df8>
  414e38:	add	x1, x1, #0xc02
  414e3c:	add	x2, x2, #0x516
  414e40:	add	x4, x4, #0xe0b
  414e44:	mov	w0, #0x1                   	// #1
  414e48:	mov	w3, #0x264                 	// #612
  414e4c:	bl	40a630 <log_assert_failed_realm@plt>

0000000000414e50 <udev_node_update_old_links>:
  414e50:	sub	sp, sp, #0x80
  414e54:	stp	x29, x30, [sp, #48]
  414e58:	str	x25, [sp, #64]
  414e5c:	stp	x24, x23, [sp, #80]
  414e60:	stp	x22, x21, [sp, #96]
  414e64:	stp	x20, x19, [sp, #112]
  414e68:	add	x29, sp, #0x30
  414e6c:	cbz	x0, 414ff4 <udev_node_update_old_links+0x1a4>
  414e70:	mov	x20, x1
  414e74:	cbz	x1, 415018 <udev_node_update_old_links+0x1c8>
  414e78:	add	x1, x29, #0x18
  414e7c:	mov	x19, x0
  414e80:	bl	40aa30 <sd_device_get_devpath@plt>
  414e84:	tbnz	w0, #31, 414f68 <udev_node_update_old_links+0x118>
  414e88:	mov	x0, x20
  414e8c:	bl	40acf0 <sd_device_get_devlink_first@plt>
  414e90:	cbz	x0, 414fc4 <udev_node_update_old_links+0x174>
  414e94:	adrp	x24, 435000 <worker_hash_op+0xdf8>
  414e98:	adrp	x25, 437000 <worker_hash_op+0x2df8>
  414e9c:	adrp	x21, 437000 <worker_hash_op+0x2df8>
  414ea0:	adrp	x22, 437000 <worker_hash_op+0x2df8>
  414ea4:	mov	x23, x0
  414ea8:	add	x24, x24, #0x7f
  414eac:	add	x25, x25, #0x25d
  414eb0:	add	x21, x21, #0x1d2
  414eb4:	add	x22, x22, #0x228
  414eb8:	b	414f24 <udev_node_update_old_links+0xd4>
  414ebc:	mov	w0, #0x1                   	// #1
  414ec0:	stur	xzr, [x29, #-8]
  414ec4:	bl	40a2c0 <log_get_max_level_realm@plt>
  414ec8:	cmp	w0, #0x7
  414ecc:	mov	x6, xzr
  414ed0:	b.ge	414f54 <udev_node_update_old_links+0x104>  // b.tcont
  414ed4:	ldr	x8, [x29, #24]
  414ed8:	cmp	x6, #0x0
  414edc:	csel	x5, xzr, x24, eq  // eq = none
  414ee0:	mov	w0, #0x7                   	// #7
  414ee4:	mov	w3, #0x109                 	// #265
  414ee8:	mov	w1, wzr
  414eec:	mov	x2, x21
  414ef0:	mov	x4, x22
  414ef4:	mov	x7, xzr
  414ef8:	stp	x23, x8, [sp, #16]
  414efc:	stp	xzr, x25, [sp]
  414f00:	bl	40a730 <log_object_internal@plt>
  414f04:	mov	x0, x19
  414f08:	mov	x1, x23
  414f0c:	mov	w2, wzr
  414f10:	bl	41503c <link_update>
  414f14:	mov	x0, x20
  414f18:	bl	40ad10 <sd_device_get_devlink_next@plt>
  414f1c:	mov	x23, x0
  414f20:	cbz	x0, 414fc4 <udev_node_update_old_links+0x174>
  414f24:	mov	x0, x19
  414f28:	bl	40acf0 <sd_device_get_devlink_first@plt>
  414f2c:	cbz	x0, 414ebc <udev_node_update_old_links+0x6c>
  414f30:	mov	x1, x0
  414f34:	mov	x0, x23
  414f38:	bl	40a930 <strcmp@plt>
  414f3c:	cbz	w0, 414f14 <udev_node_update_old_links+0xc4>
  414f40:	mov	x0, x19
  414f44:	bl	40ad10 <sd_device_get_devlink_next@plt>
  414f48:	mov	x1, x0
  414f4c:	cbnz	x0, 414f34 <udev_node_update_old_links+0xe4>
  414f50:	b	414ebc <udev_node_update_old_links+0x6c>
  414f54:	sub	x1, x29, #0x8
  414f58:	mov	x0, x19
  414f5c:	bl	40a780 <sd_device_get_sysname@plt>
  414f60:	ldur	x6, [x29, #-8]
  414f64:	b	414ed4 <udev_node_update_old_links+0x84>
  414f68:	mov	w21, w0
  414f6c:	mov	w0, #0x1                   	// #1
  414f70:	stur	xzr, [x29, #-8]
  414f74:	bl	40a2c0 <log_get_max_level_realm@plt>
  414f78:	cmp	w0, #0x7
  414f7c:	mov	x6, xzr
  414f80:	b.ge	414fe0 <udev_node_update_old_links+0x190>  // b.tcont
  414f84:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  414f88:	add	x8, x8, #0x7f
  414f8c:	cmp	x6, #0x0
  414f90:	csel	x5, xzr, x8, eq  // eq = none
  414f94:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  414f98:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  414f9c:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  414fa0:	add	x8, x8, #0x243
  414fa4:	add	x2, x2, #0x1d2
  414fa8:	add	x4, x4, #0x228
  414fac:	mov	w0, #0x7                   	// #7
  414fb0:	mov	w3, #0xf7                  	// #247
  414fb4:	mov	w1, w21
  414fb8:	mov	x7, xzr
  414fbc:	stp	xzr, x8, [sp]
  414fc0:	bl	40a730 <log_object_internal@plt>
  414fc4:	ldp	x20, x19, [sp, #112]
  414fc8:	ldp	x22, x21, [sp, #96]
  414fcc:	ldp	x24, x23, [sp, #80]
  414fd0:	ldr	x25, [sp, #64]
  414fd4:	ldp	x29, x30, [sp, #48]
  414fd8:	add	sp, sp, #0x80
  414fdc:	ret
  414fe0:	sub	x1, x29, #0x8
  414fe4:	mov	x0, x19
  414fe8:	bl	40a780 <sd_device_get_sysname@plt>
  414fec:	ldur	x6, [x29, #-8]
  414ff0:	b	414f84 <udev_node_update_old_links+0x134>
  414ff4:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  414ff8:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  414ffc:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  415000:	add	x1, x1, #0x4f0
  415004:	add	x2, x2, #0x1d2
  415008:	add	x4, x4, #0x1e7
  41500c:	mov	w0, #0x1                   	// #1
  415010:	mov	w3, #0xf2                  	// #242
  415014:	bl	40a630 <log_assert_failed_realm@plt>
  415018:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  41501c:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  415020:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  415024:	add	x1, x1, #0x220
  415028:	add	x2, x2, #0x1d2
  41502c:	add	x4, x4, #0x1e7
  415030:	mov	w0, #0x1                   	// #1
  415034:	mov	w3, #0xf3                  	// #243
  415038:	bl	40a630 <log_assert_failed_realm@plt>

000000000041503c <link_update>:
  41503c:	stp	x29, x30, [sp, #-96]!
  415040:	stp	x28, x27, [sp, #16]
  415044:	stp	x26, x25, [sp, #32]
  415048:	stp	x24, x23, [sp, #48]
  41504c:	stp	x22, x21, [sp, #64]
  415050:	stp	x20, x19, [sp, #80]
  415054:	mov	x29, sp
  415058:	sub	sp, sp, #0x1, lsl #12
  41505c:	sub	sp, sp, #0x70
  415060:	cbz	x0, 4155d4 <link_update+0x598>
  415064:	mov	x22, x1
  415068:	cbz	x1, 4155f8 <link_update+0x5bc>
  41506c:	add	x1, sp, #0x28
  415070:	mov	w21, w2
  415074:	mov	x23, x0
  415078:	bl	40af40 <device_get_id_filename@plt>
  41507c:	tbnz	w0, #31, 415110 <link_update+0xd4>
  415080:	add	x0, x22, #0x4
  415084:	add	x1, sp, #0x30
  415088:	mov	w2, #0x1000                	// #4096
  41508c:	bl	40af50 <util_path_encode@plt>
  415090:	adrp	x0, 437000 <worker_hash_op+0x2df8>
  415094:	add	x0, x0, #0x3df
  415098:	add	x1, sp, #0x30
  41509c:	mov	x2, #0xffffffffffffffff    	// #-1
  4150a0:	bl	40ae00 <path_join_internal@plt>
  4150a4:	mov	x19, x0
  4150a8:	cbz	x0, 41517c <link_update+0x140>
  4150ac:	ldr	x1, [sp, #40]
  4150b0:	mov	x2, #0xffffffffffffffff    	// #-1
  4150b4:	mov	x0, x19
  4150b8:	bl	40ae00 <path_join_internal@plt>
  4150bc:	mov	x20, x0
  4150c0:	cbz	x0, 4151a4 <link_update+0x168>
  4150c4:	tbz	w21, #0, 4151c8 <link_update+0x18c>
  4150c8:	sub	x1, x29, #0x14
  4150cc:	mov	x0, x23
  4150d0:	stur	xzr, [x29, #-16]
  4150d4:	stur	wzr, [x29, #-20]
  4150d8:	bl	40af60 <device_get_devlink_priority@plt>
  4150dc:	tbnz	w0, #31, 41540c <link_update+0x3d0>
  4150e0:	sub	x1, x29, #0x20
  4150e4:	mov	x0, x23
  4150e8:	bl	40a840 <sd_device_get_devname@plt>
  4150ec:	tbnz	w0, #31, 41540c <link_update+0x3d0>
  4150f0:	ldur	x0, [x29, #-32]
  4150f4:	bl	40a810 <strdup@plt>
  4150f8:	mov	x27, x0
  4150fc:	stur	x0, [x29, #-16]
  415100:	cbnz	x0, 4151e8 <link_update+0x1ac>
  415104:	mov	x24, xzr
  415108:	mov	w25, #0xfffffff4            	// #-12
  41510c:	b	415464 <link_update+0x428>
  415110:	mov	w19, w0
  415114:	mov	w0, #0x1                   	// #1
  415118:	str	xzr, [sp, #48]
  41511c:	bl	40a2c0 <log_get_max_level_realm@plt>
  415120:	cmp	w0, #0x7
  415124:	mov	x6, xzr
  415128:	b.ge	4155ac <link_update+0x570>  // b.tcont
  41512c:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  415130:	add	x8, x8, #0x7f
  415134:	cmp	x6, #0x0
  415138:	csel	x5, xzr, x8, eq  // eq = none
  41513c:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  415140:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  415144:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  415148:	add	x8, x8, #0x3c1
  41514c:	add	x2, x2, #0x1d2
  415150:	add	x4, x4, #0x3b5
  415154:	mov	w0, #0x7                   	// #7
  415158:	mov	w3, #0xca                  	// #202
  41515c:	mov	w1, w19
  415160:	mov	x7, xzr
  415164:	stp	xzr, x8, [sp]
  415168:	bl	40a730 <log_object_internal@plt>
  41516c:	mov	x27, xzr
  415170:	mov	x20, xzr
  415174:	mov	x19, xzr
  415178:	b	415570 <link_update+0x534>
  41517c:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  415180:	adrp	x3, 437000 <worker_hash_op+0x2df8>
  415184:	add	x1, x1, #0x1d2
  415188:	add	x3, x3, #0x3b5
  41518c:	mov	w0, #0x1                   	// #1
  415190:	mov	w2, #0xcf                  	// #207
  415194:	bl	40a330 <log_oom_internal@plt>
  415198:	mov	x27, xzr
  41519c:	mov	x20, xzr
  4151a0:	b	415570 <link_update+0x534>
  4151a4:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  4151a8:	adrp	x3, 437000 <worker_hash_op+0x2df8>
  4151ac:	add	x1, x1, #0x1d2
  4151b0:	add	x3, x3, #0x3b5
  4151b4:	mov	w0, #0x1                   	// #1
  4151b8:	mov	w2, #0xd2                  	// #210
  4151bc:	bl	40a330 <log_oom_internal@plt>
  4151c0:	mov	x27, xzr
  4151c4:	b	415570 <link_update+0x534>
  4151c8:	mov	x0, x20
  4151cc:	bl	40a6f0 <unlink@plt>
  4151d0:	cbnz	w0, 4151dc <link_update+0x1a0>
  4151d4:	mov	x0, x19
  4151d8:	bl	40af70 <rmdir@plt>
  4151dc:	mov	x27, xzr
  4151e0:	stur	xzr, [x29, #-16]
  4151e4:	stur	wzr, [x29, #-20]
  4151e8:	mov	x0, x19
  4151ec:	bl	40af80 <opendir@plt>
  4151f0:	cbz	x0, 41541c <link_update+0x3e0>
  4151f4:	mov	x24, x0
  4151f8:	bl	40a3e0 <__errno_location@plt>
  4151fc:	mov	x26, x0
  415200:	str	wzr, [x0]
  415204:	mov	x0, x24
  415208:	bl	40af90 <readdir64@plt>
  41520c:	cbz	x0, 415434 <link_update+0x3f8>
  415210:	adrp	x27, 437000 <worker_hash_op+0x2df8>
  415214:	mov	x28, x0
  415218:	mov	w25, #0xfffffff4            	// #-12
  41521c:	add	x27, x27, #0x411
  415220:	b	415238 <link_update+0x1fc>
  415224:	mov	x0, x24
  415228:	str	wzr, [x26]
  41522c:	bl	40af90 <readdir64@plt>
  415230:	mov	x28, x0
  415234:	cbz	x0, 415430 <link_update+0x3f4>
  415238:	stur	xzr, [x29, #-32]
  41523c:	stur	wzr, [x29, #-52]
  415240:	ldrb	w8, [x28, #19]!
  415244:	cbz	w8, 4153b0 <link_update+0x374>
  415248:	cmp	w8, #0x2e
  41524c:	b.eq	4153a0 <link_update+0x364>  // b.none
  415250:	mov	w0, #0x1                   	// #1
  415254:	stur	xzr, [x29, #-40]
  415258:	bl	40a2c0 <log_get_max_level_realm@plt>
  41525c:	cmp	w0, #0x7
  415260:	mov	x6, xzr
  415264:	b.ge	4153e4 <link_update+0x3a8>  // b.tcont
  415268:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  41526c:	cmp	x6, #0x0
  415270:	add	x8, x8, #0x7f
  415274:	csel	x5, xzr, x8, eq  // eq = none
  415278:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  41527c:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  415280:	add	x8, x8, #0x427
  415284:	mov	w0, #0x7                   	// #7
  415288:	mov	w3, #0x9a                  	// #154
  41528c:	mov	w1, wzr
  415290:	add	x2, x2, #0x1d2
  415294:	mov	x4, x27
  415298:	mov	x7, xzr
  41529c:	stp	x28, x19, [sp, #16]
  4152a0:	stp	xzr, x8, [sp]
  4152a4:	bl	40a730 <log_object_internal@plt>
  4152a8:	sub	x1, x29, #0x30
  4152ac:	mov	x0, x23
  4152b0:	bl	40af40 <device_get_id_filename@plt>
  4152b4:	tbnz	w0, #31, 4153a0 <link_update+0x364>
  4152b8:	ldur	x1, [x29, #-48]
  4152bc:	mov	x0, x28
  4152c0:	bl	40a930 <strcmp@plt>
  4152c4:	cbz	w0, 4153a0 <link_update+0x364>
  4152c8:	sub	x0, x29, #0x20
  4152cc:	mov	x1, x28
  4152d0:	bl	40afa0 <sd_device_new_from_device_id@plt>
  4152d4:	tbnz	w0, #31, 4153a0 <link_update+0x364>
  4152d8:	ldur	x0, [x29, #-32]
  4152dc:	sub	x1, x29, #0x28
  4152e0:	bl	40a840 <sd_device_get_devname@plt>
  4152e4:	tbnz	w0, #31, 4153a0 <link_update+0x364>
  4152e8:	ldur	x0, [x29, #-32]
  4152ec:	sub	x1, x29, #0x34
  4152f0:	bl	40af60 <device_get_devlink_priority@plt>
  4152f4:	tbnz	w0, #31, 4153a0 <link_update+0x364>
  4152f8:	ldur	x8, [x29, #-16]
  4152fc:	cbz	x8, 415310 <link_update+0x2d4>
  415300:	ldur	w8, [x29, #-52]
  415304:	ldur	w9, [x29, #-20]
  415308:	cmp	w8, w9
  41530c:	b.le	4153a0 <link_update+0x364>
  415310:	ldur	x28, [x29, #-32]
  415314:	stur	xzr, [x29, #-64]
  415318:	cbz	x28, 41532c <link_update+0x2f0>
  41531c:	mov	w0, #0x1                   	// #1
  415320:	bl	40a2c0 <log_get_max_level_realm@plt>
  415324:	cmp	w0, #0x7
  415328:	b.ge	4153f8 <link_update+0x3bc>  // b.tcont
  41532c:	mov	x6, xzr
  415330:	ldur	w8, [x29, #-52]
  415334:	adrp	x9, 435000 <worker_hash_op+0xdf8>
  415338:	cmp	x6, #0x0
  41533c:	add	x9, x9, #0x7f
  415340:	str	w8, [sp, #16]
  415344:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  415348:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41534c:	csel	x5, xzr, x9, eq  // eq = none
  415350:	add	x8, x8, #0x440
  415354:	mov	w0, #0x7                   	// #7
  415358:	mov	w3, #0xaf                  	// #175
  41535c:	mov	w1, wzr
  415360:	add	x2, x2, #0x1d2
  415364:	mov	x4, x27
  415368:	mov	x7, xzr
  41536c:	str	x19, [sp, #24]
  415370:	stp	xzr, x8, [sp]
  415374:	bl	40a730 <log_object_internal@plt>
  415378:	ldur	x1, [x29, #-40]
  41537c:	sub	x0, x29, #0x10
  415380:	bl	40afb0 <free_and_strdup@plt>
  415384:	tbnz	w0, #31, 4153d0 <link_update+0x394>
  415388:	ldur	w8, [x29, #-52]
  41538c:	mov	w28, wzr
  415390:	stur	w8, [x29, #-20]
  415394:	ldur	x0, [x29, #-32]
  415398:	cbnz	x0, 4153bc <link_update+0x380>
  41539c:	b	4153c0 <link_update+0x384>
  4153a0:	mov	w28, #0xa                   	// #10
  4153a4:	ldur	x0, [x29, #-32]
  4153a8:	cbnz	x0, 4153bc <link_update+0x380>
  4153ac:	b	4153c0 <link_update+0x384>
  4153b0:	mov	w28, #0x8                   	// #8
  4153b4:	ldur	x0, [x29, #-32]
  4153b8:	cbz	x0, 4153c0 <link_update+0x384>
  4153bc:	bl	40a6e0 <sd_device_unref@plt>
  4153c0:	cbz	w28, 415224 <link_update+0x1e8>
  4153c4:	cmp	w28, #0xa
  4153c8:	b.eq	415224 <link_update+0x1e8>  // b.none
  4153cc:	b	415428 <link_update+0x3ec>
  4153d0:	mov	w28, #0x1                   	// #1
  4153d4:	mov	w25, w0
  4153d8:	ldur	x0, [x29, #-32]
  4153dc:	cbnz	x0, 4153bc <link_update+0x380>
  4153e0:	b	4153c0 <link_update+0x384>
  4153e4:	sub	x1, x29, #0x28
  4153e8:	mov	x0, x23
  4153ec:	bl	40a780 <sd_device_get_sysname@plt>
  4153f0:	ldur	x6, [x29, #-40]
  4153f4:	b	415268 <link_update+0x22c>
  4153f8:	sub	x1, x29, #0x40
  4153fc:	mov	x0, x28
  415400:	bl	40a780 <sd_device_get_sysname@plt>
  415404:	ldur	x6, [x29, #-64]
  415408:	b	415330 <link_update+0x2f4>
  41540c:	mov	w25, w0
  415410:	mov	x27, xzr
  415414:	mov	x24, xzr
  415418:	b	415464 <link_update+0x428>
  41541c:	cbz	x27, 41544c <link_update+0x410>
  415420:	mov	x24, xzr
  415424:	b	415438 <link_update+0x3fc>
  415428:	cmp	w28, #0x8
  41542c:	b.ne	415460 <link_update+0x424>  // b.any
  415430:	ldur	x27, [x29, #-16]
  415434:	cbz	x27, 415444 <link_update+0x408>
  415438:	mov	w25, wzr
  41543c:	stur	xzr, [x29, #-16]
  415440:	b	415464 <link_update+0x428>
  415444:	mov	w25, #0xfffffffe            	// #-2
  415448:	b	415464 <link_update+0x428>
  41544c:	bl	40a3e0 <__errno_location@plt>
  415450:	ldr	w8, [x0]
  415454:	mov	x24, xzr
  415458:	neg	w25, w8
  41545c:	b	415464 <link_update+0x428>
  415460:	mov	x27, xzr
  415464:	ldur	x0, [x29, #-16]
  415468:	bl	40a320 <free@plt>
  41546c:	cbz	x24, 415478 <link_update+0x43c>
  415470:	mov	x0, x24
  415474:	bl	40afc0 <closedir@plt>
  415478:	tbnz	w25, #31, 415490 <link_update+0x454>
  41547c:	mov	x0, x23
  415480:	mov	x1, x27
  415484:	mov	x2, x22
  415488:	bl	4162bc <node_symlink>
  41548c:	b	415508 <link_update+0x4cc>
  415490:	mov	w0, #0x1                   	// #1
  415494:	stur	xzr, [x29, #-16]
  415498:	bl	40a2c0 <log_get_max_level_realm@plt>
  41549c:	cmp	w0, #0x7
  4154a0:	mov	x6, xzr
  4154a4:	b.ge	4155c0 <link_update+0x584>  // b.tcont
  4154a8:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  4154ac:	add	x8, x8, #0x7f
  4154b0:	cmp	x6, #0x0
  4154b4:	csel	x5, xzr, x8, eq  // eq = none
  4154b8:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  4154bc:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  4154c0:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  4154c4:	add	x8, x8, #0x3f0
  4154c8:	add	x2, x2, #0x1d2
  4154cc:	add	x4, x4, #0x3b5
  4154d0:	mov	w0, #0x7                   	// #7
  4154d4:	mov	w3, #0xd9                  	// #217
  4154d8:	mov	w1, wzr
  4154dc:	mov	x7, xzr
  4154e0:	stp	x8, x22, [sp, #8]
  4154e4:	str	xzr, [sp]
  4154e8:	bl	40a730 <log_object_internal@plt>
  4154ec:	mov	x0, x22
  4154f0:	bl	40a6f0 <unlink@plt>
  4154f4:	cbnz	w0, 415508 <link_update+0x4cc>
  4154f8:	adrp	x1, 434000 <__libc_csu_init+0x60>
  4154fc:	add	x1, x1, #0x289
  415500:	mov	x0, x22
  415504:	bl	40afd0 <rmdir_parents@plt>
  415508:	tbnz	w21, #0, 415520 <link_update+0x4e4>
  41550c:	b	415570 <link_update+0x534>
  415510:	mov	w0, w22
  415514:	bl	40a660 <safe_close@plt>
  415518:	cmn	w21, #0x2
  41551c:	b.ne	415570 <link_update+0x534>  // b.any
  415520:	mov	w1, #0x1ed                 	// #493
  415524:	mov	x0, x20
  415528:	bl	40afe0 <mkdir_parents@plt>
  41552c:	mov	w21, w0
  415530:	cmn	w0, #0x2
  415534:	b.eq	41553c <link_update+0x500>  // b.none
  415538:	cbnz	w21, 415568 <link_update+0x52c>
  41553c:	mov	w1, #0x8241                	// #33345
  415540:	movk	w1, #0x8, lsl #16
  415544:	mov	w2, #0x124                 	// #292
  415548:	mov	x0, x20
  41554c:	bl	40a890 <open64@plt>
  415550:	mov	w22, w0
  415554:	tbz	w0, #31, 415510 <link_update+0x4d4>
  415558:	bl	40a3e0 <__errno_location@plt>
  41555c:	ldr	w8, [x0]
  415560:	neg	w21, w8
  415564:	b	415510 <link_update+0x4d4>
  415568:	mov	w0, #0xffffffff            	// #-1
  41556c:	bl	40a660 <safe_close@plt>
  415570:	mov	x0, x19
  415574:	bl	40a320 <free@plt>
  415578:	mov	x0, x20
  41557c:	bl	40a320 <free@plt>
  415580:	mov	x0, x27
  415584:	bl	40a320 <free@plt>
  415588:	add	sp, sp, #0x1, lsl #12
  41558c:	add	sp, sp, #0x70
  415590:	ldp	x20, x19, [sp, #80]
  415594:	ldp	x22, x21, [sp, #64]
  415598:	ldp	x24, x23, [sp, #48]
  41559c:	ldp	x26, x25, [sp, #32]
  4155a0:	ldp	x28, x27, [sp, #16]
  4155a4:	ldp	x29, x30, [sp], #96
  4155a8:	ret
  4155ac:	add	x1, sp, #0x30
  4155b0:	mov	x0, x23
  4155b4:	bl	40a780 <sd_device_get_sysname@plt>
  4155b8:	ldr	x6, [sp, #48]
  4155bc:	b	41512c <link_update+0xf0>
  4155c0:	sub	x1, x29, #0x10
  4155c4:	mov	x0, x23
  4155c8:	bl	40a780 <sd_device_get_sysname@plt>
  4155cc:	ldur	x6, [x29, #-16]
  4155d0:	b	4154a8 <link_update+0x46c>
  4155d4:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  4155d8:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  4155dc:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  4155e0:	add	x1, x1, #0x4f0
  4155e4:	add	x2, x2, #0x1d2
  4155e8:	add	x4, x4, #0x37d
  4155ec:	mov	w0, #0x1                   	// #1
  4155f0:	mov	w3, #0xc5                  	// #197
  4155f4:	bl	40a630 <log_assert_failed_realm@plt>
  4155f8:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  4155fc:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  415600:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  415604:	add	x1, x1, #0x3af
  415608:	add	x2, x2, #0x1d2
  41560c:	add	x4, x4, #0x37d
  415610:	mov	w0, #0x1                   	// #1
  415614:	mov	w3, #0xc6                  	// #198
  415618:	bl	40a630 <log_assert_failed_realm@plt>

000000000041561c <udev_node_add>:
  41561c:	sub	sp, sp, #0x180
  415620:	stp	x29, x30, [sp, #288]
  415624:	stp	x28, x27, [sp, #304]
  415628:	stp	x26, x25, [sp, #320]
  41562c:	stp	x24, x23, [sp, #336]
  415630:	stp	x22, x21, [sp, #352]
  415634:	stp	x20, x19, [sp, #368]
  415638:	add	x29, sp, #0x120
  41563c:	str	xzr, [sp, #64]
  415640:	cbz	x0, 416188 <udev_node_add+0xb6c>
  415644:	mov	w26, w1
  415648:	add	x1, sp, #0x48
  41564c:	mov	x20, x5
  415650:	mov	w22, w4
  415654:	mov	w23, w3
  415658:	mov	w24, w2
  41565c:	mov	x19, x0
  415660:	bl	40a840 <sd_device_get_devname@plt>
  415664:	tbnz	w0, #31, 415900 <udev_node_add+0x2e4>
  415668:	mov	w0, #0x1                   	// #1
  41566c:	bl	40a2c0 <log_get_max_level_realm@plt>
  415670:	cmp	w0, #0x7
  415674:	b.ge	416024 <udev_node_add+0xa08>  // b.tcont
  415678:	sub	x1, x29, #0x10
  41567c:	mov	x0, x19
  415680:	stur	xzr, [x29, #-32]
  415684:	bl	40a840 <sd_device_get_devname@plt>
  415688:	tbnz	w0, #31, 415958 <udev_node_add+0x33c>
  41568c:	sub	x1, x29, #0x18
  415690:	mov	x0, x19
  415694:	bl	40a850 <sd_device_get_subsystem@plt>
  415698:	tbnz	w0, #31, 4159ac <udev_node_add+0x390>
  41569c:	add	x1, sp, #0x78
  4156a0:	mov	x0, x19
  4156a4:	bl	40aa60 <sd_device_get_devnum@plt>
  4156a8:	mov	w21, w0
  4156ac:	tbnz	w0, #31, 415a00 <udev_node_add+0x3e4>
  4156b0:	sub	x1, x29, #0x20
  4156b4:	mov	x0, x19
  4156b8:	bl	40af40 <device_get_id_filename@plt>
  4156bc:	ldur	x0, [x29, #-24]
  4156c0:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  4156c4:	add	x1, x1, #0x1ad
  4156c8:	bl	40a930 <strcmp@plt>
  4156cc:	ldur	x1, [x29, #-16]
  4156d0:	cmp	w0, #0x0
  4156d4:	mov	w8, #0x2000                	// #8192
  4156d8:	mov	w9, #0x6000                	// #24576
  4156dc:	add	x2, sp, #0x80
  4156e0:	mov	w0, wzr
  4156e4:	csel	w25, w9, w8, eq  // eq = none
  4156e8:	bl	40aff0 <__lxstat64@plt>
  4156ec:	tbnz	w0, #31, 415ba4 <udev_node_add+0x588>
  4156f0:	orr	w25, w25, w24
  4156f4:	cmn	w25, #0x1
  4156f8:	b.eq	41570c <udev_node_add+0xf0>  // b.none
  4156fc:	ldr	w8, [sp, #144]
  415700:	eor	w8, w8, w25
  415704:	tst	w8, #0xf000
  415708:	b.ne	415b40 <udev_node_add+0x524>  // b.any
  41570c:	ldr	x8, [sp, #160]
  415710:	ldr	x9, [sp, #120]
  415714:	cmp	x8, x9
  415718:	b.ne	415b40 <udev_node_add+0x524>  // b.any
  41571c:	ldr	w8, [sp, #144]
  415720:	cmn	w25, #0x1
  415724:	cset	w9, ne  // ne = any
  415728:	mov	w0, w23
  41572c:	eor	w8, w8, w24
  415730:	tst	w8, #0x1ff
  415734:	cset	w8, ne  // ne = any
  415738:	and	w27, w9, w8
  41573c:	bl	40aec0 <uid_is_valid@plt>
  415740:	ldr	w8, [sp, #152]
  415744:	cmp	w8, w23
  415748:	cset	w8, ne  // ne = any
  41574c:	and	w28, w0, w8
  415750:	mov	w0, w22
  415754:	bl	40aec0 <uid_is_valid@plt>
  415758:	ldr	w8, [sp, #156]
  41575c:	orr	w9, w27, w28
  415760:	cmp	w8, w22
  415764:	cset	w8, ne  // ne = any
  415768:	and	w8, w0, w8
  41576c:	orr	w8, w9, w8
  415770:	tbnz	w8, #0, 415778 <udev_node_add+0x15c>
  415774:	tbz	w26, #0, 41600c <udev_node_add+0x9f0>
  415778:	cbz	w8, 415c18 <udev_node_add+0x5fc>
  41577c:	mov	w0, #0x1                   	// #1
  415780:	str	xzr, [sp, #88]
  415784:	bl	40a2c0 <log_get_max_level_realm@plt>
  415788:	cmp	w0, #0x7
  41578c:	mov	x21, xzr
  415790:	b.ge	416138 <udev_node_add+0xb1c>  // b.tcont
  415794:	ldur	x27, [x29, #-16]
  415798:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  41579c:	add	x8, x8, #0x7f
  4157a0:	cmp	x21, #0x0
  4157a4:	mov	w0, w23
  4157a8:	csel	x26, xzr, x8, eq  // eq = none
  4157ac:	bl	40aec0 <uid_is_valid@plt>
  4157b0:	ldr	w8, [sp, #152]
  4157b4:	tst	w0, #0x1
  4157b8:	mov	w0, w22
  4157bc:	csel	w28, w23, w8, ne  // ne = any
  4157c0:	bl	40aec0 <uid_is_valid@plt>
  4157c4:	ldr	w8, [sp, #156]
  4157c8:	ldr	w9, [sp, #144]
  4157cc:	tst	w0, #0x1
  4157d0:	and	w24, w24, #0x1ff
  4157d4:	csel	w8, w22, w8, ne  // ne = any
  4157d8:	and	w9, w9, #0x1ff
  4157dc:	cmn	w25, #0x1
  4157e0:	str	w8, [sp, #32]
  4157e4:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  4157e8:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  4157ec:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  4157f0:	csel	w9, w24, w9, ne  // ne = any
  4157f4:	add	x8, x8, #0x4d6
  4157f8:	add	x2, x2, #0x1d2
  4157fc:	add	x4, x4, #0x46a
  415800:	mov	w0, #0x7                   	// #7
  415804:	mov	w3, #0x144                 	// #324
  415808:	mov	w1, wzr
  41580c:	mov	x5, x26
  415810:	mov	x6, x21
  415814:	mov	x7, xzr
  415818:	str	w9, [sp, #40]
  41581c:	str	w28, [sp, #24]
  415820:	stp	x8, x27, [sp, #8]
  415824:	str	xzr, [sp]
  415828:	mov	w27, #0x7                   	// #7
  41582c:	bl	40a730 <log_object_internal@plt>
  415830:	ldur	x0, [x29, #-16]
  415834:	mov	w1, w25
  415838:	mov	w2, w23
  41583c:	mov	w3, w22
  415840:	bl	40b000 <chmod_and_chown@plt>
  415844:	mov	w21, w0
  415848:	tbz	w0, #31, 415cc4 <udev_node_add+0x6a8>
  41584c:	cmn	w21, #0x2
  415850:	mov	w8, #0x3                   	// #3
  415854:	mov	w0, #0x1                   	// #1
  415858:	str	xzr, [sp, #88]
  41585c:	csel	w28, w27, w8, eq  // eq = none
  415860:	bl	40a2c0 <log_get_max_level_realm@plt>
  415864:	cmp	w0, w28
  415868:	mov	x26, xzr
  41586c:	b.ge	416160 <udev_node_add+0xb44>  // b.tcont
  415870:	ldur	x27, [x29, #-16]
  415874:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  415878:	cmp	x26, #0x0
  41587c:	add	x8, x8, #0x7f
  415880:	csel	x8, xzr, x8, eq  // eq = none
  415884:	mov	w0, w23
  415888:	str	x8, [sp, #56]
  41588c:	bl	40aec0 <uid_is_valid@plt>
  415890:	ldr	w8, [sp, #152]
  415894:	tst	w0, #0x1
  415898:	mov	w0, w22
  41589c:	csel	w23, w23, w8, ne  // ne = any
  4158a0:	bl	40aec0 <uid_is_valid@plt>
  4158a4:	ldr	w8, [sp, #156]
  4158a8:	ldr	w9, [sp, #144]
  4158ac:	tst	w0, #0x1
  4158b0:	ldr	x5, [sp, #56]
  4158b4:	csel	w8, w22, w8, ne  // ne = any
  4158b8:	and	w9, w9, #0x1ff
  4158bc:	cmn	w25, #0x1
  4158c0:	str	w8, [sp, #32]
  4158c4:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  4158c8:	csel	w9, w24, w9, ne  // ne = any
  4158cc:	add	x8, x8, #0x507
  4158d0:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  4158d4:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  4158d8:	str	w9, [sp, #40]
  4158dc:	str	w23, [sp, #24]
  4158e0:	add	x2, x2, #0x1d2
  4158e4:	add	x4, x4, #0x46a
  4158e8:	stp	x8, x27, [sp, #8]
  4158ec:	mov	w3, #0x14e                 	// #334
  4158f0:	str	xzr, [sp]
  4158f4:	mov	w0, w28
  4158f8:	mov	w1, w21
  4158fc:	b	415cb8 <udev_node_add+0x69c>
  415900:	mov	w21, w0
  415904:	mov	w0, #0x1                   	// #1
  415908:	str	xzr, [sp, #128]
  41590c:	bl	40a2c0 <log_get_max_level_realm@plt>
  415910:	cmp	w0, #0x7
  415914:	mov	x6, xzr
  415918:	b.ge	4160ac <udev_node_add+0xa90>  // b.tcont
  41591c:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  415920:	add	x8, x8, #0x7f
  415924:	cmp	x6, #0x0
  415928:	csel	x5, xzr, x8, eq  // eq = none
  41592c:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  415930:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  415934:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  415938:	add	x8, x8, #0x2ed
  41593c:	add	x2, x2, #0x1d2
  415940:	add	x4, x4, #0x2df
  415944:	mov	w0, #0x7                   	// #7
  415948:	mov	w3, #0x1a6                 	// #422
  41594c:	mov	w1, w21
  415950:	stp	xzr, x8, [sp]
  415954:	b	415b08 <udev_node_add+0x4ec>
  415958:	mov	w21, w0
  41595c:	mov	w0, #0x1                   	// #1
  415960:	str	xzr, [sp, #128]
  415964:	bl	40a2c0 <log_get_max_level_realm@plt>
  415968:	cmp	w0, #0x7
  41596c:	mov	x6, xzr
  415970:	b.ge	4160c0 <udev_node_add+0xaa4>  // b.tcont
  415974:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  415978:	add	x8, x8, #0x7f
  41597c:	cmp	x6, #0x0
  415980:	csel	x5, xzr, x8, eq  // eq = none
  415984:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  415988:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41598c:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  415990:	add	x8, x8, #0x828
  415994:	add	x2, x2, #0x1d2
  415998:	add	x4, x4, #0x46a
  41599c:	mov	w0, #0x7                   	// #7
  4159a0:	mov	w3, #0x11d                 	// #285
  4159a4:	str	x8, [sp, #8]
  4159a8:	b	415a4c <udev_node_add+0x430>
  4159ac:	mov	w21, w0
  4159b0:	mov	w0, #0x1                   	// #1
  4159b4:	str	xzr, [sp, #128]
  4159b8:	bl	40a2c0 <log_get_max_level_realm@plt>
  4159bc:	cmp	w0, #0x7
  4159c0:	mov	x6, xzr
  4159c4:	b.ge	4160d4 <udev_node_add+0xab8>  // b.tcont
  4159c8:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  4159cc:	add	x8, x8, #0x7f
  4159d0:	cmp	x6, #0x0
  4159d4:	csel	x5, xzr, x8, eq  // eq = none
  4159d8:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  4159dc:	add	x8, x8, #0x7a2
  4159e0:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  4159e4:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  4159e8:	add	x2, x2, #0x1d2
  4159ec:	add	x4, x4, #0x46a
  4159f0:	str	x8, [sp, #8]
  4159f4:	mov	w0, #0x7                   	// #7
  4159f8:	mov	w3, #0x120                 	// #288
  4159fc:	b	415a4c <udev_node_add+0x430>
  415a00:	mov	w0, #0x1                   	// #1
  415a04:	str	xzr, [sp, #128]
  415a08:	bl	40a2c0 <log_get_max_level_realm@plt>
  415a0c:	cmp	w0, #0x7
  415a10:	mov	x6, xzr
  415a14:	b.ge	4160fc <udev_node_add+0xae0>  // b.tcont
  415a18:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  415a1c:	add	x8, x8, #0x7f
  415a20:	cmp	x6, #0x0
  415a24:	csel	x5, xzr, x8, eq  // eq = none
  415a28:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  415a2c:	add	x8, x8, #0x15b
  415a30:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  415a34:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  415a38:	add	x2, x2, #0x1d2
  415a3c:	add	x4, x4, #0x46a
  415a40:	str	x8, [sp, #8]
  415a44:	mov	w0, #0x7                   	// #7
  415a48:	mov	w3, #0x123                 	// #291
  415a4c:	mov	w1, w21
  415a50:	str	xzr, [sp]
  415a54:	mov	x7, xzr
  415a58:	bl	40a730 <log_object_internal@plt>
  415a5c:	mov	w21, w0
  415a60:	tbnz	w21, #31, 415b14 <udev_node_add+0x4f8>
  415a64:	add	x1, sp, #0x40
  415a68:	mov	x0, x19
  415a6c:	bl	4161ac <xsprintf_dev_num_path_from_sd_device>
  415a70:	tbnz	w0, #31, 415ab4 <udev_node_add+0x498>
  415a74:	ldp	x2, x1, [sp, #64]
  415a78:	mov	x0, x19
  415a7c:	bl	4162bc <node_symlink>
  415a80:	mov	x0, x19
  415a84:	bl	40acf0 <sd_device_get_devlink_first@plt>
  415a88:	cbz	x0, 415aac <udev_node_add+0x490>
  415a8c:	mov	x1, x0
  415a90:	mov	w2, #0x1                   	// #1
  415a94:	mov	x0, x19
  415a98:	bl	41503c <link_update>
  415a9c:	mov	x0, x19
  415aa0:	bl	40ad10 <sd_device_get_devlink_next@plt>
  415aa4:	mov	x1, x0
  415aa8:	cbnz	x0, 415a90 <udev_node_add+0x474>
  415aac:	mov	w21, wzr
  415ab0:	b	415b14 <udev_node_add+0x4f8>
  415ab4:	mov	w20, w0
  415ab8:	mov	w0, #0x1                   	// #1
  415abc:	str	xzr, [sp, #128]
  415ac0:	bl	40a2c0 <log_get_max_level_realm@plt>
  415ac4:	cmp	w0, #0x7
  415ac8:	mov	x6, xzr
  415acc:	b.ge	4160e8 <udev_node_add+0xacc>  // b.tcont
  415ad0:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  415ad4:	add	x8, x8, #0x7f
  415ad8:	cmp	x6, #0x0
  415adc:	csel	x5, xzr, x8, eq  // eq = none
  415ae0:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  415ae4:	add	x8, x8, #0x32c
  415ae8:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  415aec:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  415af0:	add	x2, x2, #0x1d2
  415af4:	add	x4, x4, #0x2df
  415af8:	stp	xzr, x8, [sp]
  415afc:	mov	w0, #0x7                   	// #7
  415b00:	mov	w3, #0x1b5                 	// #437
  415b04:	mov	w1, w20
  415b08:	mov	x7, xzr
  415b0c:	bl	40a730 <log_object_internal@plt>
  415b10:	mov	w21, w0
  415b14:	ldr	x0, [sp, #64]
  415b18:	bl	40a320 <free@plt>
  415b1c:	mov	w0, w21
  415b20:	ldp	x20, x19, [sp, #368]
  415b24:	ldp	x22, x21, [sp, #352]
  415b28:	ldp	x24, x23, [sp, #336]
  415b2c:	ldp	x26, x25, [sp, #320]
  415b30:	ldp	x28, x27, [sp, #304]
  415b34:	ldp	x29, x30, [sp, #288]
  415b38:	add	sp, sp, #0x180
  415b3c:	ret
  415b40:	mov	w0, #0x1                   	// #1
  415b44:	str	xzr, [sp, #88]
  415b48:	bl	40a2c0 <log_get_max_level_realm@plt>
  415b4c:	cmp	w0, #0x7
  415b50:	mov	x6, xzr
  415b54:	b.ge	416110 <udev_node_add+0xaf4>  // b.tcont
  415b58:	ldur	x8, [x29, #-16]
  415b5c:	ldur	x9, [x29, #-32]
  415b60:	adrp	x10, 435000 <worker_hash_op+0xdf8>
  415b64:	add	x10, x10, #0x7f
  415b68:	cmp	x6, #0x0
  415b6c:	stp	x8, x9, [sp, #16]
  415b70:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  415b74:	add	x8, x8, #0x49b
  415b78:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  415b7c:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  415b80:	mov	w1, #0x11                  	// #17
  415b84:	csel	x5, xzr, x10, eq  // eq = none
  415b88:	add	x2, x2, #0x1d2
  415b8c:	add	x4, x4, #0x46a
  415b90:	stp	xzr, x8, [sp]
  415b94:	mov	w0, #0x7                   	// #7
  415b98:	movk	w1, #0x4000, lsl #16
  415b9c:	mov	w3, #0x134                 	// #308
  415ba0:	b	415a54 <udev_node_add+0x438>
  415ba4:	bl	40a3e0 <__errno_location@plt>
  415ba8:	ldr	w20, [x0]
  415bac:	cmp	w20, #0x2
  415bb0:	b.ne	415bbc <udev_node_add+0x5a0>  // b.any
  415bb4:	mov	w21, wzr
  415bb8:	b	415a60 <udev_node_add+0x444>
  415bbc:	mov	w0, #0x1                   	// #1
  415bc0:	str	xzr, [sp, #88]
  415bc4:	bl	40a2c0 <log_get_max_level_realm@plt>
  415bc8:	cmp	w0, #0x7
  415bcc:	mov	x6, xzr
  415bd0:	b.ge	416124 <udev_node_add+0xb08>  // b.tcont
  415bd4:	ldur	x8, [x29, #-16]
  415bd8:	adrp	x9, 435000 <worker_hash_op+0xdf8>
  415bdc:	add	x9, x9, #0x7f
  415be0:	cmp	x6, #0x0
  415be4:	str	x8, [sp, #16]
  415be8:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  415bec:	add	x8, x8, #0x481
  415bf0:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  415bf4:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  415bf8:	csel	x5, xzr, x9, eq  // eq = none
  415bfc:	add	x2, x2, #0x1d2
  415c00:	add	x4, x4, #0x46a
  415c04:	stp	xzr, x8, [sp]
  415c08:	mov	w0, #0x7                   	// #7
  415c0c:	mov	w3, #0x12e                 	// #302
  415c10:	mov	w1, w20
  415c14:	b	415a54 <udev_node_add+0x438>
  415c18:	mov	w0, #0x1                   	// #1
  415c1c:	str	xzr, [sp, #88]
  415c20:	bl	40a2c0 <log_get_max_level_realm@plt>
  415c24:	cmp	w0, #0x7
  415c28:	mov	x26, xzr
  415c2c:	b.ge	41614c <udev_node_add+0xb30>  // b.tcont
  415c30:	ldur	x28, [x29, #-16]
  415c34:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  415c38:	add	x8, x8, #0x7f
  415c3c:	cmp	x26, #0x0
  415c40:	mov	w0, w23
  415c44:	csel	x27, xzr, x8, eq  // eq = none
  415c48:	bl	40aec0 <uid_is_valid@plt>
  415c4c:	ldr	w8, [sp, #152]
  415c50:	tst	w0, #0x1
  415c54:	mov	w0, w22
  415c58:	csel	w23, w23, w8, ne  // ne = any
  415c5c:	bl	40aec0 <uid_is_valid@plt>
  415c60:	ldr	w8, [sp, #156]
  415c64:	ldr	w9, [sp, #144]
  415c68:	tst	w0, #0x1
  415c6c:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  415c70:	csel	w8, w22, w8, ne  // ne = any
  415c74:	cmn	w25, #0x1
  415c78:	csel	w9, w24, w9, ne  // ne = any
  415c7c:	str	w8, [sp, #32]
  415c80:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  415c84:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  415c88:	and	w9, w9, #0x1ff
  415c8c:	add	x8, x8, #0x546
  415c90:	add	x2, x2, #0x1d2
  415c94:	add	x4, x4, #0x46a
  415c98:	mov	w0, #0x7                   	// #7
  415c9c:	mov	w3, #0x154                 	// #340
  415ca0:	mov	w1, wzr
  415ca4:	mov	x5, x27
  415ca8:	str	w9, [sp, #40]
  415cac:	str	w23, [sp, #24]
  415cb0:	stp	x8, x28, [sp, #8]
  415cb4:	str	xzr, [sp]
  415cb8:	mov	x6, x26
  415cbc:	mov	x7, xzr
  415cc0:	bl	40a730 <log_object_internal@plt>
  415cc4:	mov	w8, #0xfffffffe            	// #-2
  415cc8:	add	x1, sp, #0x58
  415ccc:	add	x2, sp, #0x68
  415cd0:	add	x3, sp, #0x70
  415cd4:	mov	x0, x20
  415cd8:	str	w8, [sp, #88]
  415cdc:	str	xzr, [sp, #96]
  415ce0:	bl	40a7b0 <internal_hashmap_iterate@plt>
  415ce4:	tbz	w0, #0, 415fd4 <udev_node_add+0x9b8>
  415ce8:	adrp	x22, 437000 <worker_hash_op+0x2df8>
  415cec:	adrp	x28, 435000 <worker_hash_op+0xdf8>
  415cf0:	adrp	x23, 437000 <worker_hash_op+0x2df8>
  415cf4:	adrp	x24, 437000 <worker_hash_op+0x2df8>
  415cf8:	adrp	x27, 437000 <worker_hash_op+0x2df8>
  415cfc:	mov	w25, wzr
  415d00:	add	x22, x22, #0x57b
  415d04:	add	x28, x28, #0x7f
  415d08:	add	x23, x23, #0x1d2
  415d0c:	add	x24, x24, #0x46a
  415d10:	add	x27, x27, #0x5d3
  415d14:	str	wzr, [sp, #56]
  415d18:	b	415d84 <udev_node_add+0x768>
  415d1c:	mov	w0, #0x1                   	// #1
  415d20:	str	xzr, [sp, #80]
  415d24:	bl	40a2c0 <log_get_max_level_realm@plt>
  415d28:	cmp	w0, #0x3
  415d2c:	mov	x6, xzr
  415d30:	b.ge	415f6c <udev_node_add+0x950>  // b.tcont
  415d34:	ldr	x8, [sp, #104]
  415d38:	cmp	x6, #0x0
  415d3c:	csel	x5, xzr, x28, eq  // eq = none
  415d40:	mov	w0, #0x3                   	// #3
  415d44:	stp	x26, x8, [sp, #16]
  415d48:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  415d4c:	add	x8, x8, #0x625
  415d50:	mov	w3, #0x16f                 	// #367
  415d54:	mov	w1, wzr
  415d58:	mov	x2, x23
  415d5c:	mov	x4, x24
  415d60:	mov	x7, xzr
  415d64:	stp	xzr, x8, [sp]
  415d68:	bl	40a730 <log_object_internal@plt>
  415d6c:	add	x1, sp, #0x58
  415d70:	add	x2, sp, #0x68
  415d74:	add	x3, sp, #0x70
  415d78:	mov	x0, x20
  415d7c:	bl	40a7b0 <internal_hashmap_iterate@plt>
  415d80:	tbz	w0, #0, 415fe4 <udev_node_add+0x9c8>
  415d84:	ldr	x26, [sp, #112]
  415d88:	mov	x1, x22
  415d8c:	mov	x0, x26
  415d90:	bl	40a930 <strcmp@plt>
  415d94:	cbz	w0, 415e18 <udev_node_add+0x7fc>
  415d98:	mov	x0, x26
  415d9c:	mov	x1, x27
  415da0:	bl	40a930 <strcmp@plt>
  415da4:	cbnz	w0, 415d1c <udev_node_add+0x700>
  415da8:	ldur	x0, [x29, #-16]
  415dac:	ldr	x2, [sp, #104]
  415db0:	mov	w1, wzr
  415db4:	bl	40b010 <mac_smack_apply@plt>
  415db8:	tbnz	w0, #31, 415ef4 <udev_node_add+0x8d8>
  415dbc:	mov	w0, #0x1                   	// #1
  415dc0:	str	xzr, [sp, #80]
  415dc4:	bl	40a2c0 <log_get_max_level_realm@plt>
  415dc8:	cmp	w0, #0x7
  415dcc:	mov	x6, xzr
  415dd0:	b.ge	415f98 <udev_node_add+0x97c>  // b.tcont
  415dd4:	ldr	x8, [sp, #104]
  415dd8:	cmp	x6, #0x0
  415ddc:	csel	x5, xzr, x28, eq  // eq = none
  415de0:	mov	w0, #0x7                   	// #7
  415de4:	str	x8, [sp, #16]
  415de8:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  415dec:	add	x8, x8, #0x606
  415df0:	mov	w3, #0x16c                 	// #364
  415df4:	mov	w1, wzr
  415df8:	mov	x2, x23
  415dfc:	mov	x4, x24
  415e00:	mov	x7, xzr
  415e04:	stp	xzr, x8, [sp]
  415e08:	bl	40a730 <log_object_internal@plt>
  415e0c:	mov	w8, #0x1                   	// #1
  415e10:	str	w8, [sp, #56]
  415e14:	b	415d6c <udev_node_add+0x750>
  415e18:	ldur	x0, [x29, #-16]
  415e1c:	ldr	x1, [sp, #104]
  415e20:	bl	40b020 <mac_selinux_apply@plt>
  415e24:	tbnz	w0, #31, 415e80 <udev_node_add+0x864>
  415e28:	mov	w0, #0x1                   	// #1
  415e2c:	str	xzr, [sp, #80]
  415e30:	bl	40a2c0 <log_get_max_level_realm@plt>
  415e34:	cmp	w0, #0x7
  415e38:	mov	x6, xzr
  415e3c:	b.ge	415f84 <udev_node_add+0x968>  // b.tcont
  415e40:	ldr	x8, [sp, #104]
  415e44:	cmp	x6, #0x0
  415e48:	csel	x5, xzr, x28, eq  // eq = none
  415e4c:	mov	w0, #0x7                   	// #7
  415e50:	str	x8, [sp, #16]
  415e54:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  415e58:	add	x8, x8, #0x5b2
  415e5c:	mov	w3, #0x162                 	// #354
  415e60:	mov	w1, wzr
  415e64:	mov	x2, x23
  415e68:	mov	x4, x24
  415e6c:	mov	x7, xzr
  415e70:	stp	xzr, x8, [sp]
  415e74:	bl	40a730 <log_object_internal@plt>
  415e78:	mov	w25, #0x1                   	// #1
  415e7c:	b	415d6c <udev_node_add+0x750>
  415e80:	mov	w26, w0
  415e84:	cmn	w0, #0x2
  415e88:	mov	w8, #0x3                   	// #3
  415e8c:	mov	w9, #0x7                   	// #7
  415e90:	mov	w0, #0x1                   	// #1
  415e94:	str	xzr, [sp, #80]
  415e98:	csel	w27, w9, w8, eq  // eq = none
  415e9c:	bl	40a2c0 <log_get_max_level_realm@plt>
  415ea0:	cmp	w0, w27
  415ea4:	mov	x6, xzr
  415ea8:	b.ge	415fac <udev_node_add+0x990>  // b.tcont
  415eac:	ldr	x8, [sp, #104]
  415eb0:	cmp	x6, #0x0
  415eb4:	csel	x5, xzr, x28, eq  // eq = none
  415eb8:	mov	w3, #0x160                 	// #352
  415ebc:	str	x8, [sp, #16]
  415ec0:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  415ec4:	add	x8, x8, #0x583
  415ec8:	mov	w0, w27
  415ecc:	mov	w1, w26
  415ed0:	mov	x2, x23
  415ed4:	mov	x4, x24
  415ed8:	mov	x7, xzr
  415edc:	stp	xzr, x8, [sp]
  415ee0:	bl	40a730 <log_object_internal@plt>
  415ee4:	adrp	x27, 437000 <worker_hash_op+0x2df8>
  415ee8:	mov	w25, #0x1                   	// #1
  415eec:	add	x27, x27, #0x5d3
  415ef0:	b	415d6c <udev_node_add+0x750>
  415ef4:	mov	w26, w0
  415ef8:	cmn	w0, #0x2
  415efc:	mov	w8, #0x3                   	// #3
  415f00:	mov	w9, #0x7                   	// #7
  415f04:	mov	w0, #0x1                   	// #1
  415f08:	str	xzr, [sp, #80]
  415f0c:	csel	w27, w9, w8, eq  // eq = none
  415f10:	bl	40a2c0 <log_get_max_level_realm@plt>
  415f14:	cmp	w0, w27
  415f18:	mov	x6, xzr
  415f1c:	b.ge	415fc0 <udev_node_add+0x9a4>  // b.tcont
  415f20:	ldr	x8, [sp, #104]
  415f24:	cmp	x6, #0x0
  415f28:	csel	x5, xzr, x28, eq  // eq = none
  415f2c:	mov	w3, #0x16a                 	// #362
  415f30:	str	x8, [sp, #16]
  415f34:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  415f38:	add	x8, x8, #0x5d9
  415f3c:	mov	w0, w27
  415f40:	mov	w1, w26
  415f44:	mov	x2, x23
  415f48:	mov	x4, x24
  415f4c:	mov	x7, xzr
  415f50:	stp	xzr, x8, [sp]
  415f54:	bl	40a730 <log_object_internal@plt>
  415f58:	mov	w8, #0x1                   	// #1
  415f5c:	adrp	x27, 437000 <worker_hash_op+0x2df8>
  415f60:	str	w8, [sp, #56]
  415f64:	add	x27, x27, #0x5d3
  415f68:	b	415d6c <udev_node_add+0x750>
  415f6c:	add	x1, sp, #0x50
  415f70:	mov	x0, x19
  415f74:	bl	40a780 <sd_device_get_sysname@plt>
  415f78:	ldr	x6, [sp, #80]
  415f7c:	ldr	x26, [sp, #112]
  415f80:	b	415d34 <udev_node_add+0x718>
  415f84:	add	x1, sp, #0x50
  415f88:	mov	x0, x19
  415f8c:	bl	40a780 <sd_device_get_sysname@plt>
  415f90:	ldr	x6, [sp, #80]
  415f94:	b	415e40 <udev_node_add+0x824>
  415f98:	add	x1, sp, #0x50
  415f9c:	mov	x0, x19
  415fa0:	bl	40a780 <sd_device_get_sysname@plt>
  415fa4:	ldr	x6, [sp, #80]
  415fa8:	b	415dd4 <udev_node_add+0x7b8>
  415fac:	add	x1, sp, #0x50
  415fb0:	mov	x0, x19
  415fb4:	bl	40a780 <sd_device_get_sysname@plt>
  415fb8:	ldr	x6, [sp, #80]
  415fbc:	b	415eac <udev_node_add+0x890>
  415fc0:	add	x1, sp, #0x50
  415fc4:	mov	x0, x19
  415fc8:	bl	40a780 <sd_device_get_sysname@plt>
  415fcc:	ldr	x6, [sp, #80]
  415fd0:	b	415f20 <udev_node_add+0x904>
  415fd4:	ldur	x0, [x29, #-16]
  415fd8:	mov	w1, #0x1                   	// #1
  415fdc:	bl	40b030 <mac_selinux_fix@plt>
  415fe0:	b	415ffc <udev_node_add+0x9e0>
  415fe4:	tbnz	w25, #0, 415ff4 <udev_node_add+0x9d8>
  415fe8:	ldur	x0, [x29, #-16]
  415fec:	mov	w1, #0x1                   	// #1
  415ff0:	bl	40b030 <mac_selinux_fix@plt>
  415ff4:	ldr	w8, [sp, #56]
  415ff8:	tbnz	w8, #0, 41600c <udev_node_add+0x9f0>
  415ffc:	ldur	x0, [x29, #-16]
  416000:	mov	w1, wzr
  416004:	mov	x2, xzr
  416008:	bl	40b010 <mac_smack_apply@plt>
  41600c:	ldur	x1, [x29, #-16]
  416010:	mov	w0, #0xffffff9c            	// #-100
  416014:	mov	x2, xzr
  416018:	mov	w3, wzr
  41601c:	bl	40b040 <utimensat@plt>
  416020:	b	415a60 <udev_node_add+0x444>
  416024:	add	x1, sp, #0x80
  416028:	mov	x0, x19
  41602c:	str	xzr, [sp, #128]
  416030:	bl	40af40 <device_get_id_filename@plt>
  416034:	mov	w0, #0x1                   	// #1
  416038:	str	xzr, [sp, #88]
  41603c:	bl	40a2c0 <log_get_max_level_realm@plt>
  416040:	cmp	w0, #0x7
  416044:	mov	x6, xzr
  416048:	b.ge	416174 <udev_node_add+0xb58>  // b.tcont
  41604c:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  416050:	ldr	x9, [sp, #128]
  416054:	add	x8, x8, #0x7f
  416058:	cmp	x6, #0x0
  41605c:	csel	x5, xzr, x8, eq  // eq = none
  416060:	ldr	x8, [sp, #72]
  416064:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  416068:	add	x10, x10, #0x463
  41606c:	cmp	x9, #0x0
  416070:	csel	x9, x10, x9, eq  // eq = none
  416074:	stp	x8, x9, [sp, #16]
  416078:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  41607c:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  416080:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  416084:	add	x8, x8, #0x307
  416088:	add	x2, x2, #0x1d2
  41608c:	add	x4, x4, #0x2df
  416090:	mov	w0, #0x7                   	// #7
  416094:	mov	w3, #0x1ac                 	// #428
  416098:	mov	w1, wzr
  41609c:	mov	x7, xzr
  4160a0:	stp	xzr, x8, [sp]
  4160a4:	bl	40a730 <log_object_internal@plt>
  4160a8:	b	415678 <udev_node_add+0x5c>
  4160ac:	add	x1, sp, #0x80
  4160b0:	mov	x0, x19
  4160b4:	bl	40a780 <sd_device_get_sysname@plt>
  4160b8:	ldr	x6, [sp, #128]
  4160bc:	b	41591c <udev_node_add+0x300>
  4160c0:	add	x1, sp, #0x80
  4160c4:	mov	x0, x19
  4160c8:	bl	40a780 <sd_device_get_sysname@plt>
  4160cc:	ldr	x6, [sp, #128]
  4160d0:	b	415974 <udev_node_add+0x358>
  4160d4:	add	x1, sp, #0x80
  4160d8:	mov	x0, x19
  4160dc:	bl	40a780 <sd_device_get_sysname@plt>
  4160e0:	ldr	x6, [sp, #128]
  4160e4:	b	4159c8 <udev_node_add+0x3ac>
  4160e8:	add	x1, sp, #0x80
  4160ec:	mov	x0, x19
  4160f0:	bl	40a780 <sd_device_get_sysname@plt>
  4160f4:	ldr	x6, [sp, #128]
  4160f8:	b	415ad0 <udev_node_add+0x4b4>
  4160fc:	add	x1, sp, #0x80
  416100:	mov	x0, x19
  416104:	bl	40a780 <sd_device_get_sysname@plt>
  416108:	ldr	x6, [sp, #128]
  41610c:	b	415a18 <udev_node_add+0x3fc>
  416110:	add	x1, sp, #0x58
  416114:	mov	x0, x19
  416118:	bl	40a780 <sd_device_get_sysname@plt>
  41611c:	ldr	x6, [sp, #88]
  416120:	b	415b58 <udev_node_add+0x53c>
  416124:	add	x1, sp, #0x58
  416128:	mov	x0, x19
  41612c:	bl	40a780 <sd_device_get_sysname@plt>
  416130:	ldr	x6, [sp, #88]
  416134:	b	415bd4 <udev_node_add+0x5b8>
  416138:	add	x1, sp, #0x58
  41613c:	mov	x0, x19
  416140:	bl	40a780 <sd_device_get_sysname@plt>
  416144:	ldr	x21, [sp, #88]
  416148:	b	415794 <udev_node_add+0x178>
  41614c:	add	x1, sp, #0x58
  416150:	mov	x0, x19
  416154:	bl	40a780 <sd_device_get_sysname@plt>
  416158:	ldr	x26, [sp, #88]
  41615c:	b	415c30 <udev_node_add+0x614>
  416160:	add	x1, sp, #0x58
  416164:	mov	x0, x19
  416168:	bl	40a780 <sd_device_get_sysname@plt>
  41616c:	ldr	x26, [sp, #88]
  416170:	b	415870 <udev_node_add+0x254>
  416174:	add	x1, sp, #0x58
  416178:	mov	x0, x19
  41617c:	bl	40a780 <sd_device_get_sysname@plt>
  416180:	ldr	x6, [sp, #88]
  416184:	b	41604c <udev_node_add+0xa30>
  416188:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  41618c:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  416190:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  416194:	add	x1, x1, #0x4f0
  416198:	add	x2, x2, #0x1d2
  41619c:	add	x4, x4, #0x291
  4161a0:	mov	w0, #0x1                   	// #1
  4161a4:	mov	w3, #0x1a2                 	// #418
  4161a8:	bl	40a630 <log_assert_failed_realm@plt>

00000000004161ac <xsprintf_dev_num_path_from_sd_device>:
  4161ac:	sub	sp, sp, #0x70
  4161b0:	stp	x29, x30, [sp, #80]
  4161b4:	stp	x20, x19, [sp, #96]
  4161b8:	add	x29, sp, #0x50
  4161bc:	cbz	x1, 416274 <xsprintf_dev_num_path_from_sd_device+0xc8>
  4161c0:	mov	x19, x1
  4161c4:	add	x1, sp, #0x10
  4161c8:	mov	x20, x0
  4161cc:	bl	40a850 <sd_device_get_subsystem@plt>
  4161d0:	tbnz	w0, #31, 416250 <xsprintf_dev_num_path_from_sd_device+0xa4>
  4161d4:	add	x1, sp, #0x8
  4161d8:	mov	x0, x20
  4161dc:	bl	40aa60 <sd_device_get_devnum@plt>
  4161e0:	tbnz	w0, #31, 416250 <xsprintf_dev_num_path_from_sd_device+0xa4>
  4161e4:	ldr	x0, [sp, #16]
  4161e8:	adrp	x20, 435000 <worker_hash_op+0xdf8>
  4161ec:	add	x20, x20, #0x1ad
  4161f0:	mov	x1, x20
  4161f4:	bl	40a930 <strcmp@plt>
  4161f8:	ldr	x8, [sp, #8]
  4161fc:	adrp	x9, 437000 <worker_hash_op+0x2df8>
  416200:	add	x9, x9, #0x6a2
  416204:	cmp	w0, #0x0
  416208:	lsr	x4, x8, #32
  41620c:	lsr	x5, x8, #12
  416210:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  416214:	csel	x3, x20, x9, eq  // eq = none
  416218:	bfxil	w4, w8, #8, #12
  41621c:	bfxil	w5, w8, #0, #8
  416220:	add	x2, x2, #0x694
  416224:	add	x0, sp, #0x18
  416228:	mov	w1, #0x38                  	// #56
  41622c:	bl	40b050 <snprintf@plt>
  416230:	cmp	w0, #0x38
  416234:	b.cs	416298 <xsprintf_dev_num_path_from_sd_device+0xec>  // b.hs, b.nlast
  416238:	add	x0, sp, #0x18
  41623c:	bl	40a810 <strdup@plt>
  416240:	cbz	x0, 416260 <xsprintf_dev_num_path_from_sd_device+0xb4>
  416244:	mov	x8, x0
  416248:	mov	w0, wzr
  41624c:	str	x8, [x19]
  416250:	ldp	x20, x19, [sp, #96]
  416254:	ldp	x29, x30, [sp, #80]
  416258:	add	sp, sp, #0x70
  41625c:	ret
  416260:	mov	w0, #0xfffffff4            	// #-12
  416264:	ldp	x20, x19, [sp, #96]
  416268:	ldp	x29, x30, [sp, #80]
  41626c:	add	sp, sp, #0x70
  416270:	ret
  416274:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  416278:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41627c:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  416280:	add	x1, x1, #0xfa2
  416284:	add	x2, x2, #0x1d2
  416288:	add	x4, x4, #0x655
  41628c:	mov	w0, #0x1                   	// #1
  416290:	mov	w3, #0x185                 	// #389
  416294:	bl	40a630 <log_assert_failed_realm@plt>
  416298:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  41629c:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  4162a0:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  4162a4:	add	x1, x1, #0x6a7
  4162a8:	add	x2, x2, #0x1d2
  4162ac:	add	x4, x4, #0x655
  4162b0:	mov	w0, #0x1                   	// #1
  4162b4:	mov	w3, #0x191                 	// #401
  4162b8:	bl	40a630 <log_assert_failed_realm@plt>

00000000004162bc <node_symlink>:
  4162bc:	stp	x29, x30, [sp, #-64]!
  4162c0:	stp	x24, x23, [sp, #16]
  4162c4:	stp	x22, x21, [sp, #32]
  4162c8:	stp	x20, x19, [sp, #48]
  4162cc:	mov	x29, sp
  4162d0:	sub	sp, sp, #0xa0
  4162d4:	stur	xzr, [x29, #-8]
  4162d8:	cbz	x0, 416964 <node_symlink+0x6a8>
  4162dc:	mov	x22, x1
  4162e0:	cbz	x1, 416988 <node_symlink+0x6cc>
  4162e4:	mov	x20, x2
  4162e8:	cbz	x2, 4169ac <node_symlink+0x6f0>
  4162ec:	mov	x21, x0
  4162f0:	mov	x0, x20
  4162f4:	bl	40b060 <dirname_malloc@plt>
  4162f8:	mov	x19, x0
  4162fc:	cbz	x0, 4163e8 <node_symlink+0x12c>
  416300:	sub	x2, x29, #0x8
  416304:	mov	x0, x19
  416308:	mov	x1, x22
  41630c:	bl	40b070 <path_make_relative@plt>
  416310:	adrp	x24, 435000 <worker_hash_op+0xdf8>
  416314:	add	x24, x24, #0x7f
  416318:	tbnz	w0, #31, 416478 <node_symlink+0x1bc>
  41631c:	sub	x2, x29, #0x90
  416320:	mov	w0, wzr
  416324:	mov	x1, x20
  416328:	bl	40aff0 <__lxstat64@plt>
  41632c:	cbz	w0, 4164d4 <node_symlink+0x218>
  416330:	mov	w0, #0x1                   	// #1
  416334:	stur	xzr, [x29, #-16]
  416338:	bl	40a2c0 <log_get_max_level_realm@plt>
  41633c:	cmp	w0, #0x7
  416340:	mov	x6, xzr
  416344:	b.ge	4168ac <node_symlink+0x5f0>  // b.tcont
  416348:	ldur	x8, [x29, #-8]
  41634c:	cmp	x6, #0x0
  416350:	csel	x5, xzr, x24, eq  // eq = none
  416354:	sub	sp, sp, #0x20
  416358:	stp	x20, x8, [sp, #16]
  41635c:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  416360:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  416364:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  416368:	add	x8, x8, #0x7c2
  41636c:	add	x2, x2, #0x1d2
  416370:	add	x4, x4, #0x70e
  416374:	mov	w0, #0x7                   	// #7
  416378:	mov	w3, #0x41                  	// #65
  41637c:	mov	w1, wzr
  416380:	mov	x7, xzr
  416384:	stp	xzr, x8, [sp]
  416388:	bl	40a730 <log_object_internal@plt>
  41638c:	add	sp, sp, #0x20
  416390:	b	4163a0 <node_symlink+0xe4>
  416394:	bl	40b080 <mac_selinux_create_file_clear@plt>
  416398:	cmn	w22, #0x2
  41639c:	b.ne	416408 <node_symlink+0x14c>  // b.any
  4163a0:	mov	w1, #0x1ed                 	// #493
  4163a4:	mov	x0, x20
  4163a8:	bl	40b090 <mkdir_parents_label@plt>
  4163ac:	mov	w22, w0
  4163b0:	cbz	w0, 4163bc <node_symlink+0x100>
  4163b4:	cmn	w22, #0x2
  4163b8:	b.ne	416408 <node_symlink+0x14c>  // b.any
  4163bc:	mov	w1, #0xa000                	// #40960
  4163c0:	mov	x0, x20
  4163c4:	bl	40b0a0 <mac_selinux_create_file_prepare@plt>
  4163c8:	ldur	x0, [x29, #-8]
  4163cc:	mov	x1, x20
  4163d0:	bl	40b0b0 <symlink@plt>
  4163d4:	tbz	w0, #31, 416394 <node_symlink+0xd8>
  4163d8:	bl	40a3e0 <__errno_location@plt>
  4163dc:	ldr	w8, [x0]
  4163e0:	neg	w22, w8
  4163e4:	b	416394 <node_symlink+0xd8>
  4163e8:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  4163ec:	adrp	x3, 437000 <worker_hash_op+0x2df8>
  4163f0:	add	x1, x1, #0x1d2
  4163f4:	add	x3, x3, #0x70e
  4163f8:	mov	w0, #0x1                   	// #1
  4163fc:	mov	w2, #0x29                  	// #41
  416400:	bl	40a330 <log_oom_internal@plt>
  416404:	b	416550 <node_symlink+0x294>
  416408:	cbz	w22, 416550 <node_symlink+0x294>
  41640c:	tbz	w22, #31, 416634 <node_symlink+0x378>
  416410:	mov	w0, #0x1                   	// #1
  416414:	stur	xzr, [x29, #-16]
  416418:	bl	40a2c0 <log_get_max_level_realm@plt>
  41641c:	cmp	w0, #0x7
  416420:	mov	x6, xzr
  416424:	b.ge	416910 <node_symlink+0x654>  // b.tcont
  416428:	ldur	x8, [x29, #-8]
  41642c:	cmp	x6, #0x0
  416430:	csel	x5, xzr, x24, eq  // eq = none
  416434:	sub	sp, sp, #0x30
  416438:	stp	x8, x20, [sp, #24]
  41643c:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  416440:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  416444:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  416448:	add	x8, x8, #0x7e0
  41644c:	add	x2, x2, #0x1d2
  416450:	add	x4, x4, #0x70e
  416454:	mov	w0, #0x7                   	// #7
  416458:	mov	w3, #0x4e                  	// #78
  41645c:	mov	w1, w22
  416460:	mov	x7, xzr
  416464:	stp	x8, x20, [sp, #8]
  416468:	str	xzr, [sp]
  41646c:	bl	40a730 <log_object_internal@plt>
  416470:	add	sp, sp, #0x30
  416474:	b	416634 <node_symlink+0x378>
  416478:	mov	w23, w0
  41647c:	mov	w0, #0x1                   	// #1
  416480:	stur	xzr, [x29, #-144]
  416484:	bl	40a2c0 <log_get_max_level_realm@plt>
  416488:	cmp	w0, #0x3
  41648c:	mov	x6, xzr
  416490:	b.ge	4168c0 <node_symlink+0x604>  // b.tcont
  416494:	cmp	x6, #0x0
  416498:	csel	x5, xzr, x24, eq  // eq = none
  41649c:	sub	sp, sp, #0x20
  4164a0:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  4164a4:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  4164a8:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  4164ac:	add	x8, x8, #0x71b
  4164b0:	add	x2, x2, #0x1d2
  4164b4:	add	x4, x4, #0x70e
  4164b8:	mov	w0, #0x3                   	// #3
  4164bc:	mov	w3, #0x2e                  	// #46
  4164c0:	stp	x20, x22, [sp, #16]
  4164c4:	str	x8, [sp, #8]
  4164c8:	mov	w1, w23
  4164cc:	str	xzr, [sp]
  4164d0:	b	416544 <node_symlink+0x288>
  4164d4:	ldur	w8, [x29, #-128]
  4164d8:	and	w8, w8, #0xf000
  4164dc:	cmp	w8, #0x2, lsl #12
  4164e0:	b.eq	4164f4 <node_symlink+0x238>  // b.none
  4164e4:	cmp	w8, #0xa, lsl #12
  4164e8:	b.eq	416578 <node_symlink+0x2bc>  // b.none
  4164ec:	cmp	w8, #0x6, lsl #12
  4164f0:	b.ne	416634 <node_symlink+0x378>  // b.any
  4164f4:	mov	w0, #0x1                   	// #1
  4164f8:	stur	xzr, [x29, #-16]
  4164fc:	bl	40a2c0 <log_get_max_level_realm@plt>
  416500:	cmp	w0, #0x3
  416504:	mov	x6, xzr
  416508:	b.ge	4168fc <node_symlink+0x640>  // b.tcont
  41650c:	cmp	x6, #0x0
  416510:	csel	x5, xzr, x24, eq  // eq = none
  416514:	sub	sp, sp, #0x20
  416518:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  41651c:	add	x8, x8, #0x74d
  416520:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  416524:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  416528:	stp	x20, x22, [sp, #16]
  41652c:	add	x2, x2, #0x1d2
  416530:	add	x4, x4, #0x70e
  416534:	stp	xzr, x8, [sp]
  416538:	mov	w0, #0x3                   	// #3
  41653c:	mov	w3, #0x33                  	// #51
  416540:	mov	w1, wzr
  416544:	mov	x7, xzr
  416548:	bl	40a730 <log_object_internal@plt>
  41654c:	add	sp, sp, #0x20
  416550:	ldur	x0, [x29, #-8]
  416554:	bl	40a320 <free@plt>
  416558:	mov	x0, x19
  41655c:	bl	40a320 <free@plt>
  416560:	mov	sp, x29
  416564:	ldp	x20, x19, [sp, #48]
  416568:	ldp	x22, x21, [sp, #32]
  41656c:	ldp	x24, x23, [sp, #16]
  416570:	ldp	x29, x30, [sp], #64
  416574:	ret
  416578:	sub	x1, x29, #0x10
  41657c:	mov	x0, x20
  416580:	stur	xzr, [x29, #-16]
  416584:	bl	40b0c0 <readlink_malloc@plt>
  416588:	tbnz	w0, #31, 416628 <node_symlink+0x36c>
  41658c:	ldp	x23, x22, [x29, #-16]
  416590:	mov	x0, x22
  416594:	mov	x1, x23
  416598:	bl	40a930 <strcmp@plt>
  41659c:	cbnz	w0, 41662c <node_symlink+0x370>
  4165a0:	mov	w0, #0x1                   	// #1
  4165a4:	stur	xzr, [x29, #-152]
  4165a8:	bl	40a2c0 <log_get_max_level_realm@plt>
  4165ac:	cmp	w0, #0x7
  4165b0:	b.ge	41694c <node_symlink+0x690>  // b.tcont
  4165b4:	mov	x6, xzr
  4165b8:	cmp	x6, #0x0
  4165bc:	csel	x5, xzr, x24, eq  // eq = none
  4165c0:	sub	sp, sp, #0x20
  4165c4:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  4165c8:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  4165cc:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  4165d0:	add	x8, x8, #0x793
  4165d4:	add	x2, x2, #0x1d2
  4165d8:	add	x4, x4, #0x70e
  4165dc:	mov	w0, #0x7                   	// #7
  4165e0:	mov	w3, #0x3a                  	// #58
  4165e4:	mov	w1, wzr
  4165e8:	mov	x7, xzr
  4165ec:	stp	x20, x22, [sp, #16]
  4165f0:	stp	xzr, x8, [sp]
  4165f4:	bl	40a730 <log_object_internal@plt>
  4165f8:	add	sp, sp, #0x20
  4165fc:	mov	w1, #0x1                   	// #1
  416600:	mov	x0, x20
  416604:	bl	40b0d0 <label_fix@plt>
  416608:	mov	w0, #0xffffff9c            	// #-100
  41660c:	mov	w3, #0x100                 	// #256
  416610:	mov	x1, x20
  416614:	mov	x2, xzr
  416618:	bl	40b040 <utimensat@plt>
  41661c:	ldur	x0, [x29, #-16]
  416620:	bl	40a320 <free@plt>
  416624:	b	416550 <node_symlink+0x294>
  416628:	ldur	x23, [x29, #-16]
  41662c:	mov	x0, x23
  416630:	bl	40a320 <free@plt>
  416634:	mov	w0, #0x1                   	// #1
  416638:	stur	xzr, [x29, #-16]
  41663c:	bl	40a2c0 <log_get_max_level_realm@plt>
  416640:	cmp	w0, #0x7
  416644:	mov	x6, xzr
  416648:	b.ge	4168d4 <node_symlink+0x618>  // b.tcont
  41664c:	cmp	x6, #0x0
  416650:	csel	x5, xzr, x24, eq  // eq = none
  416654:	sub	sp, sp, #0x20
  416658:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  41665c:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  416660:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  416664:	add	x8, x8, #0x822
  416668:	add	x2, x2, #0x1d2
  41666c:	add	x4, x4, #0x70e
  416670:	mov	w0, #0x7                   	// #7
  416674:	mov	w3, #0x51                  	// #81
  416678:	mov	w1, wzr
  41667c:	mov	x7, xzr
  416680:	stp	x8, x20, [sp, #8]
  416684:	str	xzr, [sp]
  416688:	bl	40a730 <log_object_internal@plt>
  41668c:	add	sp, sp, #0x20
  416690:	sub	x1, x29, #0x10
  416694:	mov	x0, x21
  416698:	bl	40af40 <device_get_id_filename@plt>
  41669c:	tbnz	w0, #31, 4167fc <node_symlink+0x540>
  4166a0:	ldur	x23, [x29, #-16]
  4166a4:	mov	x0, x20
  4166a8:	bl	40aa40 <strlen@plt>
  4166ac:	add	x22, x0, #0x5
  4166b0:	cbz	x23, 4166c0 <node_symlink+0x404>
  4166b4:	mov	x0, x23
  4166b8:	bl	40aa40 <strlen@plt>
  4166bc:	add	x22, x0, x22
  4166c0:	add	x8, x22, #0x1
  4166c4:	cmp	x8, #0x400, lsl #12
  4166c8:	b.hi	4169d0 <node_symlink+0x714>  // b.pmore
  4166cc:	add	x8, x8, #0xf
  4166d0:	mov	x9, sp
  4166d4:	and	x8, x8, #0xfffffffffffffff0
  4166d8:	sub	x22, x9, x8
  4166dc:	mov	sp, x22
  4166e0:	mov	x0, x22
  4166e4:	mov	x1, x20
  4166e8:	bl	40ab70 <stpcpy@plt>
  4166ec:	mov	w9, #0x742e                	// #29742
  4166f0:	mov	x8, x0
  4166f4:	add	x0, x0, #0x5
  4166f8:	movk	w9, #0x706d, lsl #16
  4166fc:	mov	w10, #0x2d                  	// #45
  416700:	str	w9, [x8]
  416704:	strh	w10, [x8, #4]
  416708:	cbz	x23, 416714 <node_symlink+0x458>
  41670c:	mov	x1, x23
  416710:	bl	40ab70 <stpcpy@plt>
  416714:	strb	wzr, [x0]
  416718:	mov	x0, x22
  41671c:	bl	40a6f0 <unlink@plt>
  416720:	b	416730 <node_symlink+0x474>
  416724:	bl	40b080 <mac_selinux_create_file_clear@plt>
  416728:	cmn	w23, #0x2
  41672c:	b.ne	416778 <node_symlink+0x4bc>  // b.any
  416730:	mov	w1, #0x1ed                 	// #493
  416734:	mov	x0, x22
  416738:	bl	40b090 <mkdir_parents_label@plt>
  41673c:	mov	w23, w0
  416740:	cbz	w0, 41674c <node_symlink+0x490>
  416744:	cmn	w23, #0x2
  416748:	b.ne	416778 <node_symlink+0x4bc>  // b.any
  41674c:	mov	w1, #0xa000                	// #40960
  416750:	mov	x0, x22
  416754:	bl	40b0a0 <mac_selinux_create_file_prepare@plt>
  416758:	ldur	x0, [x29, #-8]
  41675c:	mov	x1, x22
  416760:	bl	40b0b0 <symlink@plt>
  416764:	tbz	w0, #31, 416724 <node_symlink+0x468>
  416768:	bl	40a3e0 <__errno_location@plt>
  41676c:	ldr	w8, [x0]
  416770:	neg	w23, w8
  416774:	b	416724 <node_symlink+0x468>
  416778:	tbnz	w23, #31, 416858 <node_symlink+0x59c>
  41677c:	mov	x0, x22
  416780:	mov	x1, x20
  416784:	bl	40b0e0 <rename@plt>
  416788:	tbz	w0, #31, 416550 <node_symlink+0x294>
  41678c:	stur	xzr, [x29, #-152]
  416790:	bl	40a3e0 <__errno_location@plt>
  416794:	ldr	w23, [x0]
  416798:	mov	w0, #0x1                   	// #1
  41679c:	bl	40a2c0 <log_get_max_level_realm@plt>
  4167a0:	cmp	w0, #0x3
  4167a4:	mov	x6, xzr
  4167a8:	b.ge	416938 <node_symlink+0x67c>  // b.tcont
  4167ac:	cmp	x6, #0x0
  4167b0:	csel	x5, xzr, x24, eq  // eq = none
  4167b4:	sub	sp, sp, #0x20
  4167b8:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  4167bc:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  4167c0:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  4167c4:	add	x8, x8, #0x86a
  4167c8:	add	x2, x2, #0x1d2
  4167cc:	add	x4, x4, #0x70e
  4167d0:	mov	w0, #0x3                   	// #3
  4167d4:	mov	w3, #0x64                  	// #100
  4167d8:	mov	w1, w23
  4167dc:	mov	x7, xzr
  4167e0:	stp	x22, x20, [sp, #16]
  4167e4:	stp	xzr, x8, [sp]
  4167e8:	bl	40a730 <log_object_internal@plt>
  4167ec:	add	sp, sp, #0x20
  4167f0:	mov	x0, x22
  4167f4:	bl	40a6f0 <unlink@plt>
  4167f8:	b	416550 <node_symlink+0x294>
  4167fc:	mov	w22, w0
  416800:	mov	w0, #0x1                   	// #1
  416804:	stur	xzr, [x29, #-152]
  416808:	bl	40a2c0 <log_get_max_level_realm@plt>
  41680c:	cmp	w0, #0x3
  416810:	mov	x6, xzr
  416814:	b.ge	4168e8 <node_symlink+0x62c>  // b.tcont
  416818:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  41681c:	cmp	x6, #0x0
  416820:	add	x8, x8, #0x3c1
  416824:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  416828:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  41682c:	csel	x5, xzr, x24, eq  // eq = none
  416830:	add	x2, x2, #0x1d2
  416834:	add	x4, x4, #0x70e
  416838:	stp	xzr, x8, [sp, #-16]!
  41683c:	mov	w0, #0x3                   	// #3
  416840:	mov	w3, #0x54                  	// #84
  416844:	mov	w1, w22
  416848:	mov	x7, xzr
  41684c:	bl	40a730 <log_object_internal@plt>
  416850:	add	sp, sp, #0x10
  416854:	b	416550 <node_symlink+0x294>
  416858:	mov	w0, #0x1                   	// #1
  41685c:	stur	xzr, [x29, #-152]
  416860:	bl	40a2c0 <log_get_max_level_realm@plt>
  416864:	cmp	w0, #0x3
  416868:	mov	x6, xzr
  41686c:	b.ge	416924 <node_symlink+0x668>  // b.tcont
  416870:	ldur	x8, [x29, #-8]
  416874:	cmp	x6, #0x0
  416878:	csel	x5, xzr, x24, eq  // eq = none
  41687c:	sub	sp, sp, #0x20
  416880:	stp	x22, x8, [sp, #16]
  416884:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  416888:	add	x8, x8, #0x840
  41688c:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  416890:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  416894:	add	x2, x2, #0x1d2
  416898:	add	x4, x4, #0x70e
  41689c:	str	x8, [sp, #8]
  4168a0:	mov	w0, #0x3                   	// #3
  4168a4:	mov	w3, #0x61                  	// #97
  4168a8:	b	4164c8 <node_symlink+0x20c>
  4168ac:	sub	x1, x29, #0x10
  4168b0:	mov	x0, x21
  4168b4:	bl	40a780 <sd_device_get_sysname@plt>
  4168b8:	ldur	x6, [x29, #-16]
  4168bc:	b	416348 <node_symlink+0x8c>
  4168c0:	sub	x1, x29, #0x90
  4168c4:	mov	x0, x21
  4168c8:	bl	40a780 <sd_device_get_sysname@plt>
  4168cc:	ldur	x6, [x29, #-144]
  4168d0:	b	416494 <node_symlink+0x1d8>
  4168d4:	sub	x1, x29, #0x10
  4168d8:	mov	x0, x21
  4168dc:	bl	40a780 <sd_device_get_sysname@plt>
  4168e0:	ldur	x6, [x29, #-16]
  4168e4:	b	41664c <node_symlink+0x390>
  4168e8:	sub	x1, x29, #0x98
  4168ec:	mov	x0, x21
  4168f0:	bl	40a780 <sd_device_get_sysname@plt>
  4168f4:	ldur	x6, [x29, #-152]
  4168f8:	b	416818 <node_symlink+0x55c>
  4168fc:	sub	x1, x29, #0x10
  416900:	mov	x0, x21
  416904:	bl	40a780 <sd_device_get_sysname@plt>
  416908:	ldur	x6, [x29, #-16]
  41690c:	b	41650c <node_symlink+0x250>
  416910:	sub	x1, x29, #0x10
  416914:	mov	x0, x21
  416918:	bl	40a780 <sd_device_get_sysname@plt>
  41691c:	ldur	x6, [x29, #-16]
  416920:	b	416428 <node_symlink+0x16c>
  416924:	sub	x1, x29, #0x98
  416928:	mov	x0, x21
  41692c:	bl	40a780 <sd_device_get_sysname@plt>
  416930:	ldur	x6, [x29, #-152]
  416934:	b	416870 <node_symlink+0x5b4>
  416938:	sub	x1, x29, #0x98
  41693c:	mov	x0, x21
  416940:	bl	40a780 <sd_device_get_sysname@plt>
  416944:	ldur	x6, [x29, #-152]
  416948:	b	4167ac <node_symlink+0x4f0>
  41694c:	sub	x1, x29, #0x98
  416950:	mov	x0, x21
  416954:	bl	40a780 <sd_device_get_sysname@plt>
  416958:	ldur	x6, [x29, #-152]
  41695c:	ldur	x22, [x29, #-8]
  416960:	b	4165b8 <node_symlink+0x2fc>
  416964:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  416968:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41696c:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  416970:	add	x1, x1, #0x4f0
  416974:	add	x2, x2, #0x1d2
  416978:	add	x4, x4, #0x6cf
  41697c:	mov	w0, #0x1                   	// #1
  416980:	mov	w3, #0x23                  	// #35
  416984:	bl	40a630 <log_assert_failed_realm@plt>
  416988:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  41698c:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  416990:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  416994:	add	x1, x1, #0x709
  416998:	add	x2, x2, #0x1d2
  41699c:	add	x4, x4, #0x6cf
  4169a0:	mov	w0, #0x1                   	// #1
  4169a4:	mov	w3, #0x24                  	// #36
  4169a8:	bl	40a630 <log_assert_failed_realm@plt>
  4169ac:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  4169b0:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  4169b4:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  4169b8:	add	x1, x1, #0x3af
  4169bc:	add	x2, x2, #0x1d2
  4169c0:	add	x4, x4, #0x6cf
  4169c4:	mov	w0, #0x1                   	// #1
  4169c8:	mov	w3, #0x25                  	// #37
  4169cc:	bl	40a630 <log_assert_failed_realm@plt>
  4169d0:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  4169d4:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  4169d8:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  4169dc:	add	x1, x1, #0xc66
  4169e0:	add	x2, x2, #0x1d2
  4169e4:	add	x4, x4, #0x6cf
  4169e8:	mov	w0, #0x1                   	// #1
  4169ec:	mov	w3, #0x55                  	// #85
  4169f0:	bl	40a630 <log_assert_failed_realm@plt>

00000000004169f4 <udev_node_remove>:
  4169f4:	sub	sp, sp, #0x40
  4169f8:	stp	x29, x30, [sp, #32]
  4169fc:	add	x29, sp, #0x20
  416a00:	stp	x20, x19, [sp, #48]
  416a04:	stur	xzr, [x29, #-8]
  416a08:	cbz	x0, 416ae8 <udev_node_remove+0xf4>
  416a0c:	mov	x19, x0
  416a10:	bl	40acf0 <sd_device_get_devlink_first@plt>
  416a14:	cbz	x0, 416a38 <udev_node_remove+0x44>
  416a18:	mov	x1, x0
  416a1c:	mov	x0, x19
  416a20:	mov	w2, wzr
  416a24:	bl	41503c <link_update>
  416a28:	mov	x0, x19
  416a2c:	bl	40ad10 <sd_device_get_devlink_next@plt>
  416a30:	mov	x1, x0
  416a34:	cbnz	x0, 416a1c <udev_node_remove+0x28>
  416a38:	sub	x1, x29, #0x8
  416a3c:	mov	x0, x19
  416a40:	bl	4161ac <xsprintf_dev_num_path_from_sd_device>
  416a44:	tbnz	w0, #31, 416a58 <udev_node_remove+0x64>
  416a48:	ldur	x0, [x29, #-8]
  416a4c:	bl	40a6f0 <unlink@plt>
  416a50:	mov	w19, wzr
  416a54:	b	416ab8 <udev_node_remove+0xc4>
  416a58:	mov	w20, w0
  416a5c:	mov	w0, #0x1                   	// #1
  416a60:	str	xzr, [sp, #16]
  416a64:	bl	40a2c0 <log_get_max_level_realm@plt>
  416a68:	cmp	w0, #0x7
  416a6c:	mov	x6, xzr
  416a70:	b.ge	416ad4 <udev_node_remove+0xe0>  // b.tcont
  416a74:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  416a78:	add	x8, x8, #0x7f
  416a7c:	cmp	x6, #0x0
  416a80:	csel	x5, xzr, x8, eq  // eq = none
  416a84:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  416a88:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  416a8c:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  416a90:	add	x8, x8, #0x32c
  416a94:	add	x2, x2, #0x1d2
  416a98:	add	x4, x4, #0x36c
  416a9c:	mov	w0, #0x7                   	// #7
  416aa0:	mov	w3, #0x1ce                 	// #462
  416aa4:	mov	w1, w20
  416aa8:	mov	x7, xzr
  416aac:	stp	xzr, x8, [sp]
  416ab0:	bl	40a730 <log_object_internal@plt>
  416ab4:	mov	w19, w0
  416ab8:	ldur	x0, [x29, #-8]
  416abc:	bl	40a320 <free@plt>
  416ac0:	mov	w0, w19
  416ac4:	ldp	x20, x19, [sp, #48]
  416ac8:	ldp	x29, x30, [sp, #32]
  416acc:	add	sp, sp, #0x40
  416ad0:	ret
  416ad4:	add	x1, sp, #0x10
  416ad8:	mov	x0, x19
  416adc:	bl	40a780 <sd_device_get_sysname@plt>
  416ae0:	ldr	x6, [sp, #16]
  416ae4:	b	416a74 <udev_node_remove+0x80>
  416ae8:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  416aec:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  416af0:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  416af4:	add	x1, x1, #0x4f0
  416af8:	add	x2, x2, #0x1d2
  416afc:	add	x4, x4, #0x34a
  416b00:	mov	w0, #0x1                   	// #1
  416b04:	mov	w3, #0x1c6                 	// #454
  416b08:	bl	40a630 <log_assert_failed_realm@plt>

0000000000416b0c <udev_rules_free>:
  416b0c:	cbz	x0, 416b68 <udev_rules_free+0x5c>
  416b10:	stp	x29, x30, [sp, #-48]!
  416b14:	stp	x22, x21, [sp, #16]
  416b18:	stp	x20, x19, [sp, #32]
  416b1c:	ldr	x20, [x0, #40]
  416b20:	mov	x19, x0
  416b24:	mov	x29, sp
  416b28:	cbnz	x20, 416b88 <udev_rules_free+0x7c>
  416b2c:	adrp	x20, 46f000 <_DYNAMIC+0x208>
  416b30:	ldr	x0, [x19, #16]
  416b34:	ldr	x20, [x20, #120]
  416b38:	mov	x2, xzr
  416b3c:	mov	x1, x20
  416b40:	bl	40a650 <internal_hashmap_free@plt>
  416b44:	ldr	x0, [x19, #24]
  416b48:	mov	x1, x20
  416b4c:	mov	x2, xzr
  416b50:	bl	40a650 <internal_hashmap_free@plt>
  416b54:	mov	x0, x19
  416b58:	bl	40a320 <free@plt>
  416b5c:	ldp	x20, x19, [sp, #32]
  416b60:	ldp	x22, x21, [sp, #16]
  416b64:	ldp	x29, x30, [sp], #48
  416b68:	mov	x0, xzr
  416b6c:	ret
  416b70:	ldr	x0, [x20]
  416b74:	bl	40a320 <free@plt>
  416b78:	mov	x0, x20
  416b7c:	bl	40a320 <free@plt>
  416b80:	mov	x20, x21
  416b84:	cbz	x21, 416b2c <udev_rules_free+0x20>
  416b88:	ldp	x0, x21, [x20, #16]
  416b8c:	cbz	x0, 416b70 <udev_rules_free+0x64>
  416b90:	ldr	x22, [x0, #64]
  416b94:	bl	417fc4 <udev_rule_line_free>
  416b98:	mov	x0, x22
  416b9c:	cbnz	x22, 416b90 <udev_rules_free+0x84>
  416ba0:	b	416b70 <udev_rules_free+0x64>

0000000000416ba4 <udev_rules_new>:
  416ba4:	sub	sp, sp, #0x150
  416ba8:	stp	x29, x30, [sp, #240]
  416bac:	add	x29, sp, #0xf0
  416bb0:	cmp	w1, #0x3
  416bb4:	stp	x28, x27, [sp, #256]
  416bb8:	stp	x26, x25, [sp, #272]
  416bbc:	stp	x24, x23, [sp, #288]
  416bc0:	stp	x22, x21, [sp, #304]
  416bc4:	stp	x20, x19, [sp, #320]
  416bc8:	stur	xzr, [x29, #-72]
  416bcc:	b.cs	4176d0 <udev_rules_new+0xb2c>  // b.hs, b.nlast
  416bd0:	mov	x27, x0
  416bd4:	mov	w0, #0x30                  	// #48
  416bd8:	mov	w20, w1
  416bdc:	bl	40a490 <malloc@plt>
  416be0:	mov	x19, x0
  416be4:	cbz	x0, 41765c <udev_rules_new+0xab8>
  416be8:	adrp	x8, 457000 <__FRAME_END__+0x149b8>
  416bec:	add	x8, x8, #0x168
  416bf0:	ldp	q1, q2, [x8]
  416bf4:	ldr	q3, [x8, #32]
  416bf8:	movi	v0.2d, #0x0
  416bfc:	sub	x0, x29, #0x40
  416c00:	mov	w2, #0x1                   	// #1
  416c04:	mov	x1, x19
  416c08:	str	xzr, [x19]
  416c0c:	str	w20, [x19, #8]
  416c10:	str	wzr, [x19, #44]
  416c14:	stur	q0, [x19, #12]
  416c18:	stp	q1, q2, [sp, #64]
  416c1c:	str	q3, [sp, #96]
  416c20:	stur	q0, [x19, #28]
  416c24:	stp	q1, q2, [x29, #-64]
  416c28:	stur	q3, [x29, #-32]
  416c2c:	bl	40b0f0 <paths_check_timestamp@plt>
  416c30:	ldr	q0, [sp, #64]
  416c34:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  416c38:	add	x1, x1, #0x924
  416c3c:	sub	x0, x29, #0x48
  416c40:	str	q0, [sp, #112]
  416c44:	ldr	q0, [sp, #80]
  416c48:	add	x4, sp, #0x70
  416c4c:	mov	x2, xzr
  416c50:	mov	w3, wzr
  416c54:	str	q0, [sp, #128]
  416c58:	ldr	q0, [sp, #96]
  416c5c:	str	q0, [sp, #144]
  416c60:	bl	40b100 <conf_files_list_strv@plt>
  416c64:	tbnz	w0, #31, 41766c <udev_rules_new+0xac8>
  416c68:	ldur	x21, [x29, #-72]
  416c6c:	cbz	x21, 417614 <udev_rules_new+0xa70>
  416c70:	ldr	x25, [x21]
  416c74:	cbz	x25, 417614 <udev_rules_new+0xa70>
  416c78:	adrp	x26, 437000 <worker_hash_op+0x2df8>
  416c7c:	add	x8, x19, #0x28
  416c80:	add	x26, x26, #0xa77
  416c84:	str	x8, [sp, #96]
  416c88:	str	x27, [sp, #56]
  416c8c:	b	416cb4 <udev_rules_new+0x110>
  416c90:	mov	x20, xzr
  416c94:	mov	x0, x28
  416c98:	bl	40b110 <safe_fclose@plt>
  416c9c:	mov	x0, x20
  416ca0:	bl	40a320 <free@plt>
  416ca4:	ldur	x0, [x29, #-64]
  416ca8:	bl	40a320 <free@plt>
  416cac:	ldr	x25, [x21, #8]!
  416cb0:	cbz	x25, 417614 <udev_rules_new+0xa70>
  416cb4:	mov	x0, x25
  416cb8:	mov	x1, x26
  416cbc:	stur	xzr, [x29, #-64]
  416cc0:	bl	40b120 <fopen64@plt>
  416cc4:	mov	x28, x0
  416cc8:	cbz	x0, 416c90 <udev_rules_new+0xec>
  416ccc:	mov	x0, x28
  416cd0:	bl	40b130 <fileno@plt>
  416cd4:	mov	w1, w0
  416cd8:	mov	x0, x25
  416cdc:	bl	40b140 <fd_warn_permissions@plt>
  416ce0:	mov	x0, x28
  416ce4:	bl	40b130 <fileno@plt>
  416ce8:	bl	40b150 <null_or_empty_fd@plt>
  416cec:	mov	w20, w0
  416cf0:	mov	w0, #0x1                   	// #1
  416cf4:	bl	40a2c0 <log_get_max_level_realm@plt>
  416cf8:	cmp	w0, #0x7
  416cfc:	cbz	w20, 416d34 <udev_rules_new+0x190>
  416d00:	b.lt	416c90 <udev_rules_new+0xec>  // b.tstop
  416d04:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  416d08:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  416d0c:	adrp	x5, 437000 <worker_hash_op+0x2df8>
  416d10:	mov	w0, #0x407                 	// #1031
  416d14:	mov	w3, #0x4ab                 	// #1195
  416d18:	mov	w1, wzr
  416d1c:	add	x2, x2, #0x8da
  416d20:	add	x4, x4, #0xa7a
  416d24:	add	x5, x5, #0xa85
  416d28:	mov	x6, x25
  416d2c:	bl	40a2d0 <log_internal_realm@plt>
  416d30:	b	416c90 <udev_rules_new+0xec>
  416d34:	b.lt	416d64 <udev_rules_new+0x1c0>  // b.tstop
  416d38:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  416d3c:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  416d40:	adrp	x5, 437000 <worker_hash_op+0x2df8>
  416d44:	mov	w0, #0x407                 	// #1031
  416d48:	mov	w3, #0x4af                 	// #1199
  416d4c:	mov	w1, wzr
  416d50:	add	x2, x2, #0x8da
  416d54:	add	x4, x4, #0xa7a
  416d58:	add	x5, x5, #0xa9d
  416d5c:	mov	x6, x25
  416d60:	bl	40a2d0 <log_internal_realm@plt>
  416d64:	mov	x0, x25
  416d68:	bl	40a810 <strdup@plt>
  416d6c:	mov	x20, x0
  416d70:	cbz	x0, 416dac <udev_rules_new+0x208>
  416d74:	mov	w0, #0x28                  	// #40
  416d78:	bl	40a490 <malloc@plt>
  416d7c:	cbz	x0, 416db8 <udev_rules_new+0x214>
  416d80:	ldr	x8, [x19, #32]
  416d84:	mov	x24, x0
  416d88:	movi	v0.2d, #0x0
  416d8c:	str	x20, [x0]
  416d90:	stur	q0, [x0, #8]
  416d94:	stur	q0, [x0, #24]
  416d98:	cbz	x8, 416dd8 <udev_rules_new+0x234>
  416d9c:	mov	x9, x8
  416da0:	ldr	x8, [x8, #24]
  416da4:	cbnz	x8, 416d9c <udev_rules_new+0x1f8>
  416da8:	b	416df0 <udev_rules_new+0x24c>
  416dac:	mov	w0, #0x1                   	// #1
  416db0:	mov	w2, #0x4b3                 	// #1203
  416db4:	b	416dc0 <udev_rules_new+0x21c>
  416db8:	mov	w0, #0x1                   	// #1
  416dbc:	mov	w2, #0x4b7                 	// #1207
  416dc0:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  416dc4:	adrp	x3, 437000 <worker_hash_op+0x2df8>
  416dc8:	add	x1, x1, #0x8da
  416dcc:	add	x3, x3, #0xa7a
  416dd0:	bl	40a330 <log_oom_internal@plt>
  416dd4:	b	416c94 <udev_rules_new+0xf0>
  416dd8:	ldr	x9, [sp, #96]
  416ddc:	ldr	x8, [x9]
  416de0:	cbz	x8, 4175c8 <udev_rules_new+0xa24>
  416de4:	mov	x9, x8
  416de8:	ldr	x8, [x8, #24]
  416dec:	cbnz	x8, 416de4 <udev_rules_new+0x240>
  416df0:	add	x8, x9, #0x18
  416df4:	stp	xzr, x9, [x24, #24]
  416df8:	sub	x3, x29, #0x10
  416dfc:	mov	w1, #0x4000                	// #16384
  416e00:	mov	x0, x28
  416e04:	mov	w2, wzr
  416e08:	str	x24, [x8]
  416e0c:	str	x24, [x19, #32]
  416e10:	stur	xzr, [x29, #-16]
  416e14:	bl	40b160 <read_line_full@plt>
  416e18:	tbnz	w0, #31, 4175f0 <udev_rules_new+0xa4c>
  416e1c:	mov	w23, wzr
  416e20:	mov	w26, wzr
  416e24:	b	416e7c <udev_rules_new+0x2d8>
  416e28:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  416e2c:	adrp	x3, 437000 <worker_hash_op+0x2df8>
  416e30:	mov	w0, #0x1                   	// #1
  416e34:	mov	w2, #0x449                 	// #1097
  416e38:	add	x1, x1, #0x8da
  416e3c:	add	x3, x3, #0xb2d
  416e40:	bl	40a330 <log_oom_internal@plt>
  416e44:	ldr	x27, [sp, #56]
  416e48:	ldur	x0, [x29, #-64]
  416e4c:	bl	40a320 <free@plt>
  416e50:	mov	w23, wzr
  416e54:	stur	xzr, [x29, #-64]
  416e58:	ldur	x0, [x29, #-16]
  416e5c:	bl	40a320 <free@plt>
  416e60:	sub	x3, x29, #0x10
  416e64:	mov	w1, #0x4000                	// #16384
  416e68:	mov	x0, x28
  416e6c:	mov	w2, wzr
  416e70:	stur	xzr, [x29, #-16]
  416e74:	bl	40b160 <read_line_full@plt>
  416e78:	tbnz	w0, #31, 4175f0 <udev_rules_new+0xa4c>
  416e7c:	cbz	w0, 417480 <udev_rules_new+0x8dc>
  416e80:	ldur	x20, [x29, #-16]
  416e84:	add	w26, w26, #0x1
  416e88:	cbz	x20, 416ea0 <udev_rules_new+0x2fc>
  416e8c:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  416e90:	mov	x0, x20
  416e94:	add	x1, x1, #0xacd
  416e98:	bl	40ad40 <strspn@plt>
  416e9c:	add	x20, x20, x0
  416ea0:	ldrb	w8, [x20]
  416ea4:	cmp	w8, #0x23
  416ea8:	b.eq	416e58 <udev_rules_new+0x2b4>  // b.none
  416eac:	mov	x0, x20
  416eb0:	bl	40aa40 <strlen@plt>
  416eb4:	ldur	x8, [x29, #-64]
  416eb8:	mov	x22, x0
  416ebc:	cmp	x8, #0x0
  416ec0:	cset	w9, eq  // eq = none
  416ec4:	orr	w9, w23, w9
  416ec8:	tbnz	w9, #0, 416f00 <udev_rules_new+0x35c>
  416ecc:	mov	x0, x8
  416ed0:	bl	40aa40 <strlen@plt>
  416ed4:	mov	x23, x0
  416ed8:	sub	x0, x29, #0x40
  416edc:	mov	x1, xzr
  416ee0:	mov	x2, x20
  416ee4:	mov	x3, xzr
  416ee8:	bl	40b170 <strextend_with_separator@plt>
  416eec:	cbz	x0, 4175d4 <udev_rules_new+0xa30>
  416ef0:	add	x8, x23, x22
  416ef4:	lsr	x8, x8, #14
  416ef8:	cbz	x8, 416f20 <udev_rules_new+0x37c>
  416efc:	mov	w23, #0x1                   	// #1
  416f00:	cbz	x22, 416f38 <udev_rules_new+0x394>
  416f04:	sub	x8, x22, #0x1
  416f08:	ldrb	w9, [x20, x8]
  416f0c:	cmp	w9, #0x5c
  416f10:	b.ne	416f38 <udev_rules_new+0x394>  // b.any
  416f14:	tbz	w23, #0, 417004 <udev_rules_new+0x460>
  416f18:	mov	w23, #0x1                   	// #1
  416f1c:	b	416e58 <udev_rules_new+0x2b4>
  416f20:	ldur	x20, [x29, #-64]
  416f24:	mov	x0, x20
  416f28:	bl	40aa40 <strlen@plt>
  416f2c:	mov	x22, x0
  416f30:	mov	w23, wzr
  416f34:	cbnz	x22, 416f04 <udev_rules_new+0x360>
  416f38:	tbz	w23, #0, 416f80 <udev_rules_new+0x3dc>
  416f3c:	mov	w0, #0x1                   	// #1
  416f40:	bl	40a2c0 <log_get_max_level_realm@plt>
  416f44:	cmp	w0, #0x3
  416f48:	b.lt	416e48 <udev_rules_new+0x2a4>  // b.tstop
  416f4c:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  416f50:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  416f54:	adrp	x5, 437000 <worker_hash_op+0x2df8>
  416f58:	mov	w0, #0x403                 	// #1027
  416f5c:	mov	w3, #0x4f3                 	// #1267
  416f60:	mov	w1, wzr
  416f64:	add	x2, x2, #0x8da
  416f68:	add	x4, x4, #0xa7a
  416f6c:	add	x5, x5, #0xab4
  416f70:	mov	x6, x25
  416f74:	mov	w7, w26
  416f78:	bl	40a2d0 <log_internal_realm@plt>
  416f7c:	b	416e48 <udev_rules_new+0x2a4>
  416f80:	cbz	x22, 416e48 <udev_rules_new+0x2a4>
  416f84:	ldr	x22, [x19, #32]
  416f88:	cbz	x22, 4176f4 <udev_rules_new+0xb50>
  416f8c:	cbz	x20, 417718 <udev_rules_new+0xb74>
  416f90:	ldrb	w8, [x20]
  416f94:	cbz	w8, 416e48 <udev_rules_new+0x2a4>
  416f98:	mov	x0, x20
  416f9c:	bl	40a810 <strdup@plt>
  416fa0:	cbz	x0, 416e28 <udev_rules_new+0x284>
  416fa4:	mov	x27, x0
  416fa8:	mov	w0, #0x50                  	// #80
  416fac:	bl	40a490 <malloc@plt>
  416fb0:	cbz	x0, 41702c <udev_rules_new+0x488>
  416fb4:	mov	x8, x0
  416fb8:	mov	x10, x0
  416fbc:	movi	v0.2d, #0x0
  416fc0:	str	x27, [x0]
  416fc4:	str	w26, [x0, #8]
  416fc8:	stur	xzr, [x0, #28]
  416fcc:	stur	xzr, [x0, #20]
  416fd0:	str	wzr, [x0, #36]
  416fd4:	str	xzr, [x8, #12]!
  416fd8:	str	x22, [x0, #40]
  416fdc:	str	q0, [x10, #48]!
  416fe0:	str	q0, [x0, #64]
  416fe4:	stp	x10, x8, [sp, #32]
  416fe8:	ldr	x8, [x22, #8]
  416fec:	mov	x20, x0
  416ff0:	cbz	x8, 417054 <udev_rules_new+0x4b0>
  416ff4:	mov	x9, x8
  416ff8:	ldr	x8, [x8, #64]
  416ffc:	cbnz	x8, 416ff4 <udev_rules_new+0x450>
  417000:	b	417068 <udev_rules_new+0x4c4>
  417004:	strb	wzr, [x20, x8]
  417008:	ldur	x8, [x29, #-64]
  41700c:	mov	w23, wzr
  417010:	cbnz	x8, 416e58 <udev_rules_new+0x2b4>
  417014:	mov	x0, x20
  417018:	bl	40a810 <strdup@plt>
  41701c:	stur	x0, [x29, #-64]
  417020:	cbz	x0, 417608 <udev_rules_new+0xa64>
  417024:	mov	w23, wzr
  417028:	b	416e58 <udev_rules_new+0x2b4>
  41702c:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  417030:	adrp	x3, 437000 <worker_hash_op+0x2df8>
  417034:	mov	w0, #0x1                   	// #1
  417038:	mov	w2, #0x44d                 	// #1101
  41703c:	add	x1, x1, #0x8da
  417040:	add	x3, x3, #0xb2d
  417044:	bl	40a330 <log_oom_internal@plt>
  417048:	mov	x0, x27
  41704c:	bl	40a320 <free@plt>
  417050:	b	416e44 <udev_rules_new+0x2a0>
  417054:	ldr	x8, [x22, #16]
  417058:	cbz	x8, 417320 <udev_rules_new+0x77c>
  41705c:	mov	x9, x8
  417060:	ldr	x8, [x8, #64]
  417064:	cbnz	x8, 41705c <udev_rules_new+0x4b8>
  417068:	stp	xzr, x9, [x20, #64]
  41706c:	str	x20, [x9, #64]
  417070:	str	x20, [x22, #8]
  417074:	cbz	x27, 417330 <udev_rules_new+0x78c>
  417078:	ldrb	w8, [x27]
  41707c:	cbz	w8, 417330 <udev_rules_new+0x78c>
  417080:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  417084:	mov	x0, x27
  417088:	add	x1, x1, #0xba4
  41708c:	bl	40ad40 <strspn@plt>
  417090:	add	x8, x27, x0
  417094:	ldrb	w23, [x8]
  417098:	cbz	w23, 417330 <udev_rules_new+0x78c>
  41709c:	add	x27, x8, #0x1
  4170a0:	str	x8, [sp, #80]
  4170a4:	b	4170b4 <udev_rules_new+0x510>
  4170a8:	add	x27, x27, #0x1
  4170ac:	mov	w23, w8
  4170b0:	cbz	w8, 4172a0 <udev_rules_new+0x6fc>
  4170b4:	and	w22, w23, #0xff
  4170b8:	adrp	x0, 437000 <worker_hash_op+0x2df8>
  4170bc:	mov	w2, #0x7                   	// #7
  4170c0:	add	x0, x0, #0xbaa
  4170c4:	mov	w1, w22
  4170c8:	bl	40b180 <memchr@plt>
  4170cc:	cbnz	x0, 417104 <udev_rules_new+0x560>
  4170d0:	ldrb	w8, [x27]
  4170d4:	cmp	w22, #0x3f
  4170d8:	b.hi	4170a8 <udev_rules_new+0x504>  // b.pmore
  4170dc:	mov	x10, #0x1                   	// #1
  4170e0:	mov	w9, #0x1                   	// #1
  4170e4:	movk	x10, #0x2802, lsl #32
  4170e8:	lsl	x9, x9, x23
  4170ec:	movk	x10, #0x400, lsl #48
  4170f0:	and	x9, x9, x10
  4170f4:	cbz	x9, 4170a8 <udev_rules_new+0x504>
  4170f8:	cmp	w8, #0x3d
  4170fc:	b.ne	4170a8 <udev_rules_new+0x504>  // b.any
  417100:	b	41712c <udev_rules_new+0x588>
  417104:	cmp	w22, #0x7b
  417108:	b.ne	41712c <udev_rules_new+0x588>  // b.any
  41710c:	mov	w1, #0x7d                  	// #125
  417110:	mov	x0, x27
  417114:	bl	40a7d0 <strchr@plt>
  417118:	cbz	x0, 4172a0 <udev_rules_new+0x6fc>
  41711c:	mov	x22, x0
  417120:	strb	wzr, [x22], #1
  417124:	str	x27, [sp, #64]
  417128:	b	417134 <udev_rules_new+0x590>
  41712c:	sub	x22, x27, #0x1
  417130:	str	xzr, [sp, #64]
  417134:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  417138:	mov	x0, x22
  41713c:	add	x1, x1, #0xacd
  417140:	bl	40ad40 <strspn@plt>
  417144:	add	x22, x22, x0
  417148:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  41714c:	mov	w2, #0x2                   	// #2
  417150:	mov	x0, x22
  417154:	add	x1, x1, #0xbb1
  417158:	bl	40a6a0 <strncmp@plt>
  41715c:	cbz	w0, 4171c8 <udev_rules_new+0x624>
  417160:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  417164:	mov	w2, #0x2                   	// #2
  417168:	mov	x0, x22
  41716c:	add	x1, x1, #0xbb4
  417170:	bl	40a6a0 <strncmp@plt>
  417174:	cbz	w0, 4171d0 <udev_rules_new+0x62c>
  417178:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  41717c:	mov	w2, #0x2                   	// #2
  417180:	mov	x0, x22
  417184:	add	x1, x1, #0xbb7
  417188:	mov	w23, #0x2                   	// #2
  41718c:	bl	40a6a0 <strncmp@plt>
  417190:	cbz	w0, 4171d8 <udev_rules_new+0x634>
  417194:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  417198:	mov	w2, #0x2                   	// #2
  41719c:	mov	x0, x22
  4171a0:	add	x1, x1, #0xbba
  4171a4:	bl	40a6a0 <strncmp@plt>
  4171a8:	cbz	w0, 4171e4 <udev_rules_new+0x640>
  4171ac:	ldrb	w8, [x22]
  4171b0:	cmp	w8, #0x3d
  4171b4:	b.ne	4171ec <udev_rules_new+0x648>  // b.any
  4171b8:	mov	w8, #0x4                   	// #4
  4171bc:	str	w8, [sp, #52]
  4171c0:	mov	w23, #0x1                   	// #1
  4171c4:	b	417210 <udev_rules_new+0x66c>
  4171c8:	str	wzr, [sp, #52]
  4171cc:	b	41720c <udev_rules_new+0x668>
  4171d0:	mov	w8, #0x1                   	// #1
  4171d4:	b	417208 <udev_rules_new+0x664>
  4171d8:	mov	w8, #0x2                   	// #2
  4171dc:	str	w8, [sp, #52]
  4171e0:	b	417210 <udev_rules_new+0x66c>
  4171e4:	mov	w8, #0x3                   	// #3
  4171e8:	b	417208 <udev_rules_new+0x664>
  4171ec:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  4171f0:	mov	w2, #0x2                   	// #2
  4171f4:	mov	x0, x22
  4171f8:	add	x1, x1, #0xbbd
  4171fc:	bl	40a6a0 <strncmp@plt>
  417200:	cbnz	w0, 4172a0 <udev_rules_new+0x6fc>
  417204:	mov	w8, #0x5                   	// #5
  417208:	str	w8, [sp, #52]
  41720c:	mov	w23, #0x2                   	// #2
  417210:	add	x22, x22, x23
  417214:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  417218:	mov	x0, x22
  41721c:	add	x1, x1, #0xacd
  417220:	sturb	wzr, [x27, #-1]
  417224:	bl	40ad40 <strspn@plt>
  417228:	add	x8, x22, x0
  41722c:	ldrb	w9, [x8]
  417230:	cmp	w9, #0x22
  417234:	b.ne	4172a0 <udev_rules_new+0x6fc>  // b.any
  417238:	add	x4, x8, #0x1
  41723c:	mov	x8, x4
  417240:	mov	x9, x4
  417244:	b	417264 <udev_rules_new+0x6c0>
  417248:	mov	x10, x8
  41724c:	ldrb	w11, [x10, #1]!
  417250:	cmp	w11, #0x22
  417254:	csel	x8, x10, x8, eq  // eq = none
  417258:	ldrb	w10, [x8]
  41725c:	strb	w10, [x9], #1
  417260:	add	x8, x8, #0x1
  417264:	ldrb	w10, [x8]
  417268:	cmp	w10, #0x5c
  41726c:	b.eq	417248 <udev_rules_new+0x6a4>  // b.none
  417270:	cbz	w10, 4172a0 <udev_rules_new+0x6fc>
  417274:	cmp	w10, #0x22
  417278:	b.ne	41725c <udev_rules_new+0x6b8>  // b.any
  41727c:	ldr	x1, [sp, #80]
  417280:	ldr	x2, [sp, #64]
  417284:	ldr	w3, [sp, #52]
  417288:	mov	x0, x19
  41728c:	strb	wzr, [x9]
  417290:	add	x27, x8, #0x1
  417294:	bl	418090 <parse_token>
  417298:	tbz	w0, #31, 417074 <udev_rules_new+0x4d0>
  41729c:	b	417314 <udev_rules_new+0x770>
  4172a0:	ldr	x8, [x19, #32]
  4172a4:	cbz	x8, 4172c8 <udev_rules_new+0x724>
  4172a8:	ldp	x10, x9, [x8]
  4172ac:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  4172b0:	add	x8, x8, #0xbc0
  4172b4:	cmp	x10, #0x0
  4172b8:	csel	x8, x8, x10, eq  // eq = none
  4172bc:	cbz	x9, 4172d4 <udev_rules_new+0x730>
  4172c0:	ldr	w9, [x9, #8]
  4172c4:	b	4172d4 <udev_rules_new+0x730>
  4172c8:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  4172cc:	mov	w9, wzr
  4172d0:	add	x8, x8, #0xbc0
  4172d4:	str	x8, [sp, #16]
  4172d8:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  4172dc:	add	x8, x8, #0xb3b
  4172e0:	mov	w0, #0x3                   	// #3
  4172e4:	mov	w1, #0xffffffea            	// #-22
  4172e8:	mov	w3, #0x462                 	// #1122
  4172ec:	str	w9, [sp, #24]
  4172f0:	stp	xzr, x8, [sp]
  4172f4:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  4172f8:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  4172fc:	add	x2, x2, #0x8da
  417300:	add	x4, x4, #0xb2d
  417304:	mov	x5, xzr
  417308:	mov	x6, xzr
  41730c:	mov	x7, xzr
  417310:	bl	40a730 <log_object_internal@plt>
  417314:	mov	x0, x20
  417318:	bl	417fc4 <udev_rule_line_free>
  41731c:	b	416e44 <udev_rules_new+0x2a0>
  417320:	stp	xzr, xzr, [x20, #64]
  417324:	str	x20, [x22, #16]
  417328:	ldr	x27, [x20]
  41732c:	b	417070 <udev_rules_new+0x4cc>
  417330:	ldr	x8, [sp, #40]
  417334:	ldr	x27, [sp, #56]
  417338:	ldr	w8, [x8]
  41733c:	cbz	w8, 417428 <udev_rules_new+0x884>
  417340:	ldr	x8, [x20, #56]!
  417344:	ldr	x14, [sp, #32]
  417348:	stp	xzr, xzr, [x14]
  41734c:	cbz	x8, 416e48 <udev_rules_new+0x2a4>
  417350:	mov	x9, xzr
  417354:	b	41736c <udev_rules_new+0x7c8>
  417358:	add	x10, x11, #0x18
  41735c:	stp	xzr, x11, [x9, #24]
  417360:	str	x9, [x10]
  417364:	str	x9, [x14]
  417368:	cbz	x8, 416e48 <udev_rules_new+0x2a4>
  41736c:	mov	x10, x9
  417370:	mov	w12, #0x1                   	// #1
  417374:	mov	x11, x8
  417378:	mov	x9, xzr
  41737c:	b	417394 <udev_rules_new+0x7f0>
  417380:	mov	x9, x11
  417384:	ldr	x11, [x11, #24]
  417388:	cmp	x9, #0x0
  41738c:	cset	w12, eq  // eq = none
  417390:	cbz	x11, 4173b0 <udev_rules_new+0x80c>
  417394:	tbnz	w12, #0, 417380 <udev_rules_new+0x7dc>
  417398:	ldr	w12, [x9]
  41739c:	ldr	w13, [x11]
  4173a0:	lsl	w12, w12, #24
  4173a4:	cmp	w12, w13, lsl #24
  4173a8:	b.gt	417380 <udev_rules_new+0x7dc>
  4173ac:	b	417384 <udev_rules_new+0x7e0>
  4173b0:	mov	x11, x9
  4173b4:	ldr	x12, [x11, #24]!
  4173b8:	cbz	x12, 4173c4 <udev_rules_new+0x820>
  4173bc:	ldr	x13, [x9, #32]
  4173c0:	str	x13, [x12, #32]
  4173c4:	ldr	x13, [x9, #32]
  4173c8:	cbz	x13, 4173d4 <udev_rules_new+0x830>
  4173cc:	str	x12, [x13, #24]
  4173d0:	b	4173e0 <udev_rules_new+0x83c>
  4173d4:	cmp	x8, x9
  4173d8:	mov	x8, x12
  4173dc:	b.ne	41773c <udev_rules_new+0xb98>  // b.any
  4173e0:	stp	xzr, xzr, [x11]
  4173e4:	cbz	x10, 4173f8 <udev_rules_new+0x854>
  4173e8:	mov	x11, x10
  4173ec:	ldr	x10, [x10, #24]
  4173f0:	cbnz	x10, 4173e8 <udev_rules_new+0x844>
  4173f4:	b	417358 <udev_rules_new+0x7b4>
  4173f8:	ldr	x10, [x20]
  4173fc:	cbz	x10, 417410 <udev_rules_new+0x86c>
  417400:	mov	x11, x10
  417404:	ldr	x10, [x10, #24]
  417408:	cbnz	x10, 417400 <udev_rules_new+0x85c>
  41740c:	b	417358 <udev_rules_new+0x7b4>
  417410:	stp	xzr, xzr, [x11]
  417414:	mov	x10, x20
  417418:	str	x9, [x10]
  41741c:	str	x9, [x14]
  417420:	cbnz	x8, 41736c <udev_rules_new+0x7c8>
  417424:	b	416e48 <udev_rules_new+0x2a4>
  417428:	ldr	x8, [x19, #32]
  41742c:	cbz	x8, 417450 <udev_rules_new+0x8ac>
  417430:	ldp	x10, x9, [x8]
  417434:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  417438:	add	x8, x8, #0xbc0
  41743c:	cmp	x10, #0x0
  417440:	csel	x8, x8, x10, eq  // eq = none
  417444:	cbz	x9, 41745c <udev_rules_new+0x8b8>
  417448:	ldr	w9, [x9, #8]
  41744c:	b	41745c <udev_rules_new+0x8b8>
  417450:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  417454:	mov	w9, wzr
  417458:	add	x8, x8, #0xbc0
  41745c:	str	x8, [sp, #16]
  417460:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  417464:	add	x8, x8, #0xb63
  417468:	str	w9, [sp, #24]
  41746c:	stp	xzr, x8, [sp]
  417470:	mov	w0, #0x4                   	// #4
  417474:	mov	w3, #0x46c                 	// #1132
  417478:	mov	w1, wzr
  41747c:	b	4172f4 <udev_rules_new+0x750>
  417480:	ldur	x0, [x29, #-16]
  417484:	bl	40a320 <free@plt>
  417488:	ldr	x23, [x24, #16]
  41748c:	adrp	x26, 437000 <worker_hash_op+0x2df8>
  417490:	add	x26, x26, #0xa77
  417494:	cbnz	x23, 4174b8 <udev_rules_new+0x914>
  417498:	b	416c90 <udev_rules_new+0xec>
  41749c:	str	x26, [x20, #32]
  4174a0:	ldr	x8, [x20, #32]
  4174a4:	adrp	x26, 437000 <worker_hash_op+0x2df8>
  4174a8:	add	x26, x26, #0xa77
  4174ac:	cbz	x8, 4174f0 <udev_rules_new+0x94c>
  4174b0:	mov	x20, xzr
  4174b4:	cbz	x23, 416c94 <udev_rules_new+0xf0>
  4174b8:	mov	x20, x23
  4174bc:	ldr	w25, [x23, #12]
  4174c0:	ldr	x23, [x23, #64]
  4174c4:	tbz	w25, #3, 4174b0 <udev_rules_new+0x90c>
  4174c8:	cbz	x23, 4174a0 <udev_rules_new+0x8fc>
  4174cc:	ldr	x22, [x20, #24]
  4174d0:	mov	x26, x23
  4174d4:	ldr	x0, [x26, #16]
  4174d8:	mov	x1, x22
  4174dc:	bl	40a880 <strcmp_ptr@plt>
  4174e0:	cbz	w0, 41749c <udev_rules_new+0x8f8>
  4174e4:	ldr	x26, [x26, #64]
  4174e8:	cbnz	x26, 4174d4 <udev_rules_new+0x930>
  4174ec:	b	4174a0 <udev_rules_new+0x8fc>
  4174f0:	mov	w0, #0x1                   	// #1
  4174f4:	bl	40a2c0 <log_get_max_level_realm@plt>
  4174f8:	cmp	w0, #0x3
  4174fc:	b.lt	41753c <udev_rules_new+0x998>  // b.tstop
  417500:	ldr	x6, [x24]
  417504:	ldr	w7, [x20, #8]
  417508:	ldr	x8, [x20, #24]
  41750c:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  417510:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  417514:	adrp	x5, 438000 <worker_hash_op+0x3df8>
  417518:	mov	w0, #0x403                 	// #1027
  41751c:	mov	w3, #0x487                 	// #1159
  417520:	mov	w1, wzr
  417524:	add	x2, x2, #0x8da
  417528:	add	x4, x4, #0x5f5
  41752c:	add	x5, x5, #0x607
  417530:	str	x8, [sp]
  417534:	bl	40a2d0 <log_internal_realm@plt>
  417538:	ldr	w25, [x20, #12]
  41753c:	and	w22, w25, #0xfffffff7
  417540:	tst	w25, #0xffffffe7
  417544:	str	w22, [x20, #12]
  417548:	str	xzr, [x20, #24]
  41754c:	b.ne	4174b0 <udev_rules_new+0x90c>  // b.any
  417550:	mov	w0, #0x1                   	// #1
  417554:	bl	40a2c0 <log_get_max_level_realm@plt>
  417558:	cmp	w0, #0x5
  41755c:	b.lt	417594 <udev_rules_new+0x9f0>  // b.tstop
  417560:	ldr	x6, [x24]
  417564:	ldr	w7, [x20, #8]
  417568:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41756c:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  417570:	adrp	x5, 438000 <worker_hash_op+0x3df8>
  417574:	mov	w0, #0x405                 	// #1029
  417578:	mov	w3, #0x48e                 	// #1166
  41757c:	mov	w1, wzr
  417580:	add	x2, x2, #0x8da
  417584:	add	x4, x4, #0x5f5
  417588:	add	x5, x5, #0x638
  41758c:	bl	40a2d0 <log_internal_realm@plt>
  417590:	ldr	w22, [x20, #12]
  417594:	cmp	w22, #0x10
  417598:	b.ne	4175bc <udev_rules_new+0xa18>  // b.any
  41759c:	ldr	x0, [x20, #56]
  4175a0:	cbz	x0, 4175b4 <udev_rules_new+0xa10>
  4175a4:	ldr	x22, [x0, #24]
  4175a8:	bl	40a320 <free@plt>
  4175ac:	mov	x0, x22
  4175b0:	cbnz	x22, 4175a4 <udev_rules_new+0xa00>
  4175b4:	str	xzr, [x20, #56]
  4175b8:	b	4174b0 <udev_rules_new+0x90c>
  4175bc:	mov	x0, x20
  4175c0:	bl	417fc4 <udev_rule_line_free>
  4175c4:	b	4174b0 <udev_rules_new+0x90c>
  4175c8:	stp	xzr, xzr, [x24, #24]
  4175cc:	mov	x8, x9
  4175d0:	b	416df8 <udev_rules_new+0x254>
  4175d4:	mov	w0, #0x1                   	// #1
  4175d8:	mov	w2, #0x4dc                 	// #1244
  4175dc:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  4175e0:	adrp	x3, 437000 <worker_hash_op+0x2df8>
  4175e4:	add	x1, x1, #0x8da
  4175e8:	add	x3, x3, #0xa7a
  4175ec:	bl	40a330 <log_oom_internal@plt>
  4175f0:	ldur	x0, [x29, #-16]
  4175f4:	bl	40a320 <free@plt>
  4175f8:	adrp	x26, 437000 <worker_hash_op+0x2df8>
  4175fc:	mov	x20, xzr
  417600:	add	x26, x26, #0xa77
  417604:	b	416c94 <udev_rules_new+0xf0>
  417608:	mov	w0, #0x1                   	// #1
  41760c:	mov	w2, #0x4ec                 	// #1260
  417610:	b	4175dc <udev_rules_new+0xa38>
  417614:	mov	w20, wzr
  417618:	str	x19, [x27]
  41761c:	mov	x19, xzr
  417620:	ldur	x0, [x29, #-72]
  417624:	cbz	x0, 41762c <udev_rules_new+0xa88>
  417628:	bl	40ae30 <strv_free@plt>
  41762c:	cbz	x19, 417638 <udev_rules_new+0xa94>
  417630:	mov	x0, x19
  417634:	bl	416b0c <udev_rules_free>
  417638:	mov	w0, w20
  41763c:	ldp	x20, x19, [sp, #320]
  417640:	ldp	x22, x21, [sp, #304]
  417644:	ldp	x24, x23, [sp, #288]
  417648:	ldp	x26, x25, [sp, #272]
  41764c:	ldp	x28, x27, [sp, #256]
  417650:	ldp	x29, x30, [sp, #240]
  417654:	add	sp, sp, #0x150
  417658:	ret
  41765c:	mov	w20, #0xfffffff4            	// #-12
  417660:	ldur	x0, [x29, #-72]
  417664:	cbnz	x0, 417628 <udev_rules_new+0xa84>
  417668:	b	41762c <udev_rules_new+0xa88>
  41766c:	mov	w20, w0
  417670:	mov	w0, #0x1                   	// #1
  417674:	bl	40a2c0 <log_get_max_level_realm@plt>
  417678:	cmp	w0, #0x3
  41767c:	b.lt	4176b8 <udev_rules_new+0xb14>  // b.tstop
  417680:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  417684:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  417688:	adrp	x5, 437000 <worker_hash_op+0x2df8>
  41768c:	add	x2, x2, #0x8da
  417690:	add	x4, x4, #0x993
  417694:	add	x5, x5, #0x9a2
  417698:	mov	w0, #0x403                 	// #1027
  41769c:	mov	w3, #0x513                 	// #1299
  4176a0:	mov	w1, w20
  4176a4:	bl	40a2d0 <log_internal_realm@plt>
  4176a8:	mov	w20, w0
  4176ac:	ldur	x0, [x29, #-72]
  4176b0:	cbnz	x0, 417628 <udev_rules_new+0xa84>
  4176b4:	b	41762c <udev_rules_new+0xa88>
  4176b8:	mov	w8, wzr
  4176bc:	neg	w9, w20
  4176c0:	sub	w20, w8, w9, uxtb
  4176c4:	ldur	x0, [x29, #-72]
  4176c8:	cbnz	x0, 417628 <udev_rules_new+0xa84>
  4176cc:	b	41762c <udev_rules_new+0xa88>
  4176d0:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  4176d4:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  4176d8:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  4176dc:	add	x1, x1, #0x88c
  4176e0:	add	x2, x2, #0x8da
  4176e4:	add	x4, x4, #0x8f0
  4176e8:	mov	w0, #0x1                   	// #1
  4176ec:	mov	w3, #0x505                 	// #1285
  4176f0:	bl	40a630 <log_assert_failed_realm@plt>
  4176f4:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  4176f8:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  4176fc:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  417700:	add	x1, x1, #0xb10
  417704:	add	x2, x2, #0x8da
  417708:	add	x4, x4, #0xad5
  41770c:	mov	w0, #0x1                   	// #1
  417710:	mov	w3, #0x43f                 	// #1087
  417714:	bl	40a630 <log_assert_failed_realm@plt>
  417718:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  41771c:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  417720:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  417724:	add	x1, x1, #0xb24
  417728:	add	x2, x2, #0x8da
  41772c:	add	x4, x4, #0xad5
  417730:	mov	w0, #0x1                   	// #1
  417734:	mov	w3, #0x440                 	// #1088
  417738:	bl	40a630 <log_assert_failed_realm@plt>
  41773c:	adrp	x1, 434000 <__libc_csu_init+0x60>
  417740:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  417744:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  417748:	add	x1, x1, #0x45e
  41774c:	add	x2, x2, #0x8da
  417750:	add	x4, x4, #0x5d4
  417754:	mov	w0, #0x1                   	// #1
  417758:	mov	w3, #0x432                 	// #1074
  41775c:	bl	40a630 <log_assert_failed_realm@plt>

0000000000417760 <udev_rules_check_timestamp>:
  417760:	cbz	x0, 4177a0 <udev_rules_check_timestamp+0x40>
  417764:	sub	sp, sp, #0x40
  417768:	adrp	x8, 457000 <__FRAME_END__+0x149b8>
  41776c:	add	x8, x8, #0x168
  417770:	ldp	q0, q1, [x8]
  417774:	ldr	q2, [x8, #32]
  417778:	mov	x1, x0
  41777c:	mov	x0, sp
  417780:	mov	w2, #0x1                   	// #1
  417784:	stp	x29, x30, [sp, #48]
  417788:	add	x29, sp, #0x30
  41778c:	stp	q0, q1, [sp]
  417790:	str	q2, [sp, #32]
  417794:	bl	40b0f0 <paths_check_timestamp@plt>
  417798:	ldp	x29, x30, [sp, #48]
  41779c:	add	sp, sp, #0x40
  4177a0:	and	w0, w0, #0x1
  4177a4:	ret

00000000004177a8 <udev_rules_apply_to_event>:
  4177a8:	sub	sp, sp, #0x80
  4177ac:	stp	x29, x30, [sp, #32]
  4177b0:	stp	x28, x27, [sp, #48]
  4177b4:	stp	x26, x25, [sp, #64]
  4177b8:	stp	x24, x23, [sp, #80]
  4177bc:	stp	x22, x21, [sp, #96]
  4177c0:	stp	x20, x19, [sp, #112]
  4177c4:	add	x29, sp, #0x20
  4177c8:	cbz	x0, 417a04 <udev_rules_apply_to_event+0x25c>
  4177cc:	mov	x21, x1
  4177d0:	cbz	x1, 417a28 <udev_rules_apply_to_event+0x280>
  4177d4:	ldr	x23, [x0, #40]
  4177d8:	mov	x22, x0
  4177dc:	cbz	x23, 4179e0 <udev_rules_apply_to_event+0x238>
  4177e0:	mov	x20, x3
  4177e4:	mov	x24, x2
  4177e8:	mov	w25, #0x5ffffff             	// #100663295
  4177ec:	add	x8, x21, #0x8
  4177f0:	mov	w26, #0xf4ffffff            	// #-184549377
  4177f4:	str	x8, [sp]
  4177f8:	str	x2, [sp, #16]
  4177fc:	str	x23, [x22, #32]
  417800:	ldr	x28, [x23, #16]
  417804:	str	x28, [x23, #8]
  417808:	cbz	x28, 4179d8 <udev_rules_apply_to_event+0x230>
  41780c:	ldr	x0, [x21]
  417810:	ldr	x27, [x28, #64]
  417814:	sub	x1, x29, #0x4
  417818:	bl	40a970 <device_get_action@plt>
  41781c:	tbnz	w0, #31, 4179e4 <udev_rules_apply_to_event+0x23c>
  417820:	str	x23, [sp, #8]
  417824:	ldur	w8, [x29, #-4]
  417828:	cmp	w8, #0x1
  41782c:	b.ne	417844 <udev_rules_apply_to_event+0x9c>  // b.any
  417830:	mov	w8, #0x28                  	// #40
  417834:	ldr	w9, [x28, #12]
  417838:	tst	w9, w8
  41783c:	b.ne	417884 <udev_rules_apply_to_event+0xdc>  // b.any
  417840:	b	417990 <udev_rules_apply_to_event+0x1e8>
  417844:	ldr	x0, [x21]
  417848:	mov	x1, xzr
  41784c:	bl	40aa60 <sd_device_get_devnum@plt>
  417850:	ldr	x8, [x21]
  417854:	cmp	w0, #0x0
  417858:	mov	w9, #0x28                  	// #40
  41785c:	mov	w10, #0x2a                  	// #42
  417860:	mov	x0, x8
  417864:	mov	x1, xzr
  417868:	csel	w19, w10, w9, ge  // ge = tcont
  41786c:	bl	40aa70 <sd_device_get_ifindex@plt>
  417870:	bfxil	w19, w0, #31, #1
  417874:	eor	w8, w19, #0x1
  417878:	ldr	w9, [x28, #12]
  41787c:	tst	w9, w8
  417880:	b.eq	417990 <udev_rules_apply_to_event+0x1e8>  // b.none
  417884:	ldrb	w8, [x21, #105]
  417888:	lsl	w8, w8, #8
  41788c:	strh	w8, [x21, #104]
  417890:	ldr	x23, [x28, #56]
  417894:	cbz	x23, 417980 <udev_rules_apply_to_event+0x1d8>
  417898:	mov	w19, wzr
  41789c:	b	4178c4 <udev_rules_apply_to_event+0x11c>
  4178a0:	ldr	x1, [x21]
  4178a4:	mov	x0, x22
  4178a8:	mov	x2, x21
  4178ac:	mov	x3, x24
  4178b0:	mov	x4, x20
  4178b4:	bl	41b960 <udev_rule_apply_token_to_event>
  4178b8:	cmp	w0, #0x1
  4178bc:	b.lt	4179b8 <udev_rules_apply_to_event+0x210>  // b.tstop
  4178c0:	cbz	x23, 417980 <udev_rules_apply_to_event+0x1d8>
  4178c4:	mov	x8, x23
  4178c8:	ldr	x23, [x23, #24]
  4178cc:	str	x8, [x28, #48]
  4178d0:	ldr	w8, [x8]
  4178d4:	add	w8, w26, w8, lsl #24
  4178d8:	cmp	w8, w25
  4178dc:	b.cs	4178a0 <udev_rules_apply_to_event+0xf8>  // b.hs, b.nlast
  4178e0:	tbz	w19, #0, 4178ec <udev_rules_apply_to_event+0x144>
  4178e4:	mov	w19, #0x1                   	// #1
  4178e8:	b	4178c0 <udev_rules_apply_to_event+0x118>
  4178ec:	ldr	x8, [x22, #32]
  4178f0:	mov	x24, x20
  4178f4:	ldr	x19, [x8, #8]
  4178f8:	ldr	x8, [x21]
  4178fc:	ldr	x20, [x19, #48]
  417900:	str	x8, [x21, #8]
  417904:	cbz	x20, 41796c <udev_rules_apply_to_event+0x1c4>
  417908:	mov	x8, x20
  41790c:	str	x20, [x19, #48]
  417910:	ldr	w8, [x8]
  417914:	add	w8, w26, w8, lsl #24
  417918:	cmp	w8, w25
  41791c:	b.cs	417970 <udev_rules_apply_to_event+0x1c8>  // b.hs, b.nlast
  417920:	ldr	x1, [x21, #8]
  417924:	mov	x0, x22
  417928:	mov	x2, x21
  41792c:	mov	x3, xzr
  417930:	mov	x4, xzr
  417934:	bl	41b960 <udev_rule_apply_token_to_event>
  417938:	tbnz	w0, #31, 4179e4 <udev_rules_apply_to_event+0x23c>
  41793c:	ldr	x8, [x19, #48]
  417940:	cbz	w0, 417954 <udev_rules_apply_to_event+0x1ac>
  417944:	ldr	x8, [x8, #24]
  417948:	str	x8, [x19, #48]
  41794c:	cbnz	x8, 417910 <udev_rules_apply_to_event+0x168>
  417950:	b	417970 <udev_rules_apply_to_event+0x1c8>
  417954:	cbz	x8, 417970 <udev_rules_apply_to_event+0x1c8>
  417958:	ldr	x1, [sp]
  41795c:	ldr	x0, [x1]
  417960:	bl	40ab60 <sd_device_get_parent@plt>
  417964:	tbz	w0, #31, 417908 <udev_rules_apply_to_event+0x160>
  417968:	b	4179c4 <udev_rules_apply_to_event+0x21c>
  41796c:	str	xzr, [x19, #48]
  417970:	mov	x20, x24
  417974:	ldr	x24, [sp, #16]
  417978:	mov	w19, #0x1                   	// #1
  41797c:	b	4178c0 <udev_rules_apply_to_event+0x118>
  417980:	ldr	x8, [x28, #32]
  417984:	ldr	x23, [sp, #8]
  417988:	cmp	x8, #0x0
  41798c:	csel	x27, x27, x8, eq  // eq = none
  417990:	str	x27, [x23, #8]
  417994:	cbz	x27, 4179d8 <udev_rules_apply_to_event+0x230>
  417998:	ldr	x8, [x22, #32]
  41799c:	ldr	x0, [x21]
  4179a0:	ldr	x27, [x27, #64]
  4179a4:	sub	x1, x29, #0x4
  4179a8:	ldr	x28, [x8, #8]
  4179ac:	bl	40a970 <device_get_action@plt>
  4179b0:	tbz	w0, #31, 417824 <udev_rules_apply_to_event+0x7c>
  4179b4:	b	4179e4 <udev_rules_apply_to_event+0x23c>
  4179b8:	ldr	x23, [sp, #8]
  4179bc:	tbz	w0, #31, 417990 <udev_rules_apply_to_event+0x1e8>
  4179c0:	b	4179e4 <udev_rules_apply_to_event+0x23c>
  4179c4:	ldp	x8, x23, [sp]
  4179c8:	mov	x20, x24
  4179cc:	ldr	x24, [sp, #16]
  4179d0:	str	xzr, [x8]
  4179d4:	b	417990 <udev_rules_apply_to_event+0x1e8>
  4179d8:	ldr	x23, [x23, #24]
  4179dc:	cbnz	x23, 4177fc <udev_rules_apply_to_event+0x54>
  4179e0:	mov	w0, wzr
  4179e4:	ldp	x20, x19, [sp, #112]
  4179e8:	ldp	x22, x21, [sp, #96]
  4179ec:	ldp	x24, x23, [sp, #80]
  4179f0:	ldp	x26, x25, [sp, #64]
  4179f4:	ldp	x28, x27, [sp, #48]
  4179f8:	ldp	x29, x30, [sp, #32]
  4179fc:	add	sp, sp, #0x80
  417a00:	ret
  417a04:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  417a08:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  417a0c:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  417a10:	add	x1, x1, #0x856
  417a14:	add	x2, x2, #0x8da
  417a18:	add	x4, x4, #0x9c6
  417a1c:	mov	w0, #0x1                   	// #1
  417a20:	mov	w3, #0x8d7                 	// #2263
  417a24:	bl	40a630 <log_assert_failed_realm@plt>
  417a28:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  417a2c:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  417a30:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  417a34:	add	x1, x1, #0x1bf
  417a38:	add	x2, x2, #0x8da
  417a3c:	add	x4, x4, #0x9c6
  417a40:	mov	w0, #0x1                   	// #1
  417a44:	mov	w3, #0x8d8                 	// #2264
  417a48:	bl	40a630 <log_assert_failed_realm@plt>

0000000000417a4c <udev_rules_apply_static_dev_perms>:
  417a4c:	stp	x29, x30, [sp, #-96]!
  417a50:	stp	x28, x27, [sp, #16]
  417a54:	stp	x26, x25, [sp, #32]
  417a58:	stp	x24, x23, [sp, #48]
  417a5c:	stp	x22, x21, [sp, #64]
  417a60:	stp	x20, x19, [sp, #80]
  417a64:	mov	x29, sp
  417a68:	sub	sp, sp, #0xcb0
  417a6c:	cbz	x0, 417fa0 <udev_rules_apply_static_dev_perms+0x554>
  417a70:	ldr	x8, [x0, #40]
  417a74:	cbz	x8, 417f54 <udev_rules_apply_static_dev_perms+0x508>
  417a78:	adrp	x19, 441000 <worker_hash_op+0xcdf8>
  417a7c:	mov	w21, #0xde000000            	// #-570425344
  417a80:	add	x19, x19, #0xf58
  417a84:	b	417a94 <udev_rules_apply_static_dev_perms+0x48>
  417a88:	ldr	x8, [sp, #24]
  417a8c:	ldr	x8, [x8, #24]
  417a90:	cbz	x8, 417f54 <udev_rules_apply_static_dev_perms+0x508>
  417a94:	ldr	x26, [x8, #16]
  417a98:	str	x8, [sp, #24]
  417a9c:	cbnz	x26, 417ab0 <udev_rules_apply_static_dev_perms+0x64>
  417aa0:	b	417a88 <udev_rules_apply_static_dev_perms+0x3c>
  417aa4:	tbnz	w24, #31, 417f58 <udev_rules_apply_static_dev_perms+0x50c>
  417aa8:	ldr	x26, [x26, #64]
  417aac:	cbz	x26, 417a88 <udev_rules_apply_static_dev_perms+0x3c>
  417ab0:	str	xzr, [sp, #32]
  417ab4:	ldrb	w8, [x26, #12]
  417ab8:	tbz	w8, #2, 417aa8 <udev_rules_apply_static_dev_perms+0x5c>
  417abc:	ldr	x28, [x26, #56]
  417ac0:	cbz	x28, 417f14 <udev_rules_apply_static_dev_perms+0x4c8>
  417ac4:	mov	w27, #0xffffffff            	// #-1
  417ac8:	mov	w25, #0xffffffff            	// #-1
  417acc:	mov	w20, #0xffffffff            	// #-1
  417ad0:	b	417ae4 <udev_rules_apply_static_dev_perms+0x98>
  417ad4:	ldr	w8, [x28, #16]
  417ad8:	sub	w27, w8, #0x1
  417adc:	ldr	x28, [x28, #24]
  417ae0:	cbz	x28, 417f14 <udev_rules_apply_static_dev_perms+0x4c8>
  417ae4:	ldr	w8, [x28]
  417ae8:	add	w8, w21, w8, lsl #24
  417aec:	lsr	w8, w8, #24
  417af0:	cmp	w8, #0x4
  417af4:	b.hi	417adc <udev_rules_apply_static_dev_perms+0x90>  // b.pmore
  417af8:	adr	x9, 417ad4 <udev_rules_apply_static_dev_perms+0x88>
  417afc:	ldrb	w10, [x19, x8]
  417b00:	add	x9, x9, x10, lsl #2
  417b04:	br	x9
  417b08:	ldr	w8, [x28, #16]
  417b0c:	sub	w20, w8, #0x1
  417b10:	b	417adc <udev_rules_apply_static_dev_perms+0x90>
  417b14:	ldr	x22, [x28, #8]
  417b18:	cbz	x22, 417f7c <udev_rules_apply_static_dev_perms+0x530>
  417b1c:	ldr	x19, [sp, #32]
  417b20:	and	w8, w20, w25
  417b24:	and	w8, w27, w8
  417b28:	cmn	w8, #0x1
  417b2c:	cset	w24, eq  // eq = none
  417b30:	cbnz	x19, 417b78 <udev_rules_apply_static_dev_perms+0x12c>
  417b34:	cbz	w24, 417b78 <udev_rules_apply_static_dev_perms+0x12c>
  417b38:	mov	x23, xzr
  417b3c:	mov	w24, wzr
  417b40:	mov	x0, x23
  417b44:	bl	40a320 <free@plt>
  417b48:	adrp	x19, 441000 <worker_hash_op+0xcdf8>
  417b4c:	add	x19, x19, #0xf58
  417b50:	tbz	w24, #31, 417adc <udev_rules_apply_static_dev_perms+0x90>
  417b54:	b	417f18 <udev_rules_apply_static_dev_perms+0x4cc>
  417b58:	ldr	x1, [x28, #8]
  417b5c:	add	x0, sp, #0x20
  417b60:	bl	40b190 <strv_extend@plt>
  417b64:	tbz	w0, #31, 417adc <udev_rules_apply_static_dev_perms+0x90>
  417b68:	b	417f28 <udev_rules_apply_static_dev_perms+0x4dc>
  417b6c:	ldr	w8, [x28, #16]
  417b70:	sub	w25, w8, #0x1
  417b74:	b	417adc <udev_rules_apply_static_dev_perms+0x90>
  417b78:	adrp	x2, 438000 <worker_hash_op+0x3df8>
  417b7c:	add	x0, sp, #0x8a8
  417b80:	mov	w1, #0x400                 	// #1024
  417b84:	add	x2, x2, #0x752
  417b88:	mov	x3, x22
  417b8c:	mov	x4, xzr
  417b90:	bl	40b1a0 <strscpyl@plt>
  417b94:	add	x1, sp, #0x8a8
  417b98:	add	x2, sp, #0x28
  417b9c:	mov	w0, wzr
  417ba0:	bl	40b1b0 <__xstat64@plt>
  417ba4:	tbnz	w0, #31, 417cb0 <udev_rules_apply_static_dev_perms+0x264>
  417ba8:	ldr	w8, [sp, #56]
  417bac:	and	w8, w8, #0xf000
  417bb0:	orr	w8, w8, #0x4000
  417bb4:	cmp	w8, #0x6, lsl #12
  417bb8:	b.ne	417d08 <udev_rules_apply_static_dev_perms+0x2bc>  // b.any
  417bbc:	cbz	x19, 417d48 <udev_rules_apply_static_dev_perms+0x2fc>
  417bc0:	ldr	x8, [x19]
  417bc4:	cbz	x8, 417d54 <udev_rules_apply_static_dev_perms+0x308>
  417bc8:	adrp	x1, 439000 <worker_hash_op+0x4df8>
  417bcc:	mov	x2, #0xffffffffffffffff    	// #-1
  417bd0:	mov	x0, x22
  417bd4:	add	x1, x1, #0x49
  417bd8:	mov	w3, wzr
  417bdc:	bl	40b1c0 <xescape_full@plt>
  417be0:	mov	x23, x0
  417be4:	cbz	x0, 417e3c <udev_rules_apply_static_dev_perms+0x3f0>
  417be8:	ldr	x3, [x19]
  417bec:	cbz	x3, 417d4c <udev_rules_apply_static_dev_perms+0x300>
  417bf0:	add	x22, x19, #0x8
  417bf4:	b	417c00 <udev_rules_apply_static_dev_perms+0x1b4>
  417bf8:	ldr	x3, [x22], #8
  417bfc:	cbz	x3, 417d4c <udev_rules_apply_static_dev_perms+0x300>
  417c00:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  417c04:	adrp	x4, 434000 <__libc_csu_init+0x60>
  417c08:	add	x0, sp, #0x4a8
  417c0c:	mov	w1, #0x400                 	// #1024
  417c10:	add	x2, x2, #0x4c
  417c14:	add	x4, x4, #0x289
  417c18:	mov	x5, xzr
  417c1c:	bl	40b1a0 <strscpyl@plt>
  417c20:	add	x0, sp, #0x4a8
  417c24:	mov	w1, #0x1ed                 	// #493
  417c28:	bl	40b1d0 <mkdir_p@plt>
  417c2c:	tbnz	w0, #31, 417ea4 <udev_rules_apply_static_dev_perms+0x458>
  417c30:	add	x0, sp, #0xa8
  417c34:	add	x2, sp, #0x4a8
  417c38:	mov	w1, #0x400                 	// #1024
  417c3c:	mov	x3, x23
  417c40:	mov	x4, xzr
  417c44:	bl	40b1a0 <strscpyl@plt>
  417c48:	add	x0, sp, #0x8a8
  417c4c:	add	x1, sp, #0xa8
  417c50:	bl	40b0b0 <symlink@plt>
  417c54:	tbz	w0, #31, 417bf8 <udev_rules_apply_static_dev_perms+0x1ac>
  417c58:	bl	40a3e0 <__errno_location@plt>
  417c5c:	ldr	w19, [x0]
  417c60:	cmp	w19, #0x11
  417c64:	b.eq	417bf8 <udev_rules_apply_static_dev_perms+0x1ac>  // b.none
  417c68:	mov	w0, #0x1                   	// #1
  417c6c:	bl	40a2c0 <log_get_max_level_realm@plt>
  417c70:	cmp	w0, #0x3
  417c74:	b.lt	417f0c <udev_rules_apply_static_dev_perms+0x4c0>  // b.tstop
  417c78:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  417c7c:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  417c80:	adrp	x5, 439000 <worker_hash_op+0x4df8>
  417c84:	add	x6, sp, #0xa8
  417c88:	add	x7, sp, #0x8a8
  417c8c:	mov	w0, #0x403                 	// #1027
  417c90:	mov	w3, #0x90f                 	// #2319
  417c94:	mov	w1, w19
  417c98:	add	x2, x2, #0x8da
  417c9c:	add	x4, x4, #0xfe8
  417ca0:	add	x5, x5, #0x80
  417ca4:	bl	40a2d0 <log_internal_realm@plt>
  417ca8:	mov	w24, w0
  417cac:	b	417b40 <udev_rules_apply_static_dev_perms+0xf4>
  417cb0:	bl	40a3e0 <__errno_location@plt>
  417cb4:	ldr	w19, [x0]
  417cb8:	cmp	w19, #0x2
  417cbc:	b.eq	417b38 <udev_rules_apply_static_dev_perms+0xec>  // b.none
  417cc0:	mov	w0, #0x1                   	// #1
  417cc4:	bl	40a2c0 <log_get_max_level_realm@plt>
  417cc8:	cmp	w0, #0x3
  417ccc:	b.lt	417e24 <udev_rules_apply_static_dev_perms+0x3d8>  // b.tstop
  417cd0:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  417cd4:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  417cd8:	adrp	x5, 438000 <worker_hash_op+0x3df8>
  417cdc:	add	x6, sp, #0x8a8
  417ce0:	mov	w0, #0x403                 	// #1027
  417ce4:	mov	w3, #0x8f5                 	// #2293
  417ce8:	mov	w1, w19
  417cec:	add	x2, x2, #0x8da
  417cf0:	add	x4, x4, #0xfe8
  417cf4:	add	x5, x5, #0xfff
  417cf8:	bl	40a2d0 <log_internal_realm@plt>
  417cfc:	mov	w24, w0
  417d00:	mov	x23, xzr
  417d04:	b	417b40 <udev_rules_apply_static_dev_perms+0xf4>
  417d08:	mov	w0, #0x1                   	// #1
  417d0c:	bl	40a2c0 <log_get_max_level_realm@plt>
  417d10:	cmp	w0, #0x4
  417d14:	b.lt	417b38 <udev_rules_apply_static_dev_perms+0xec>  // b.tstop
  417d18:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  417d1c:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  417d20:	adrp	x5, 439000 <worker_hash_op+0x4df8>
  417d24:	add	x6, sp, #0x8a8
  417d28:	mov	w0, #0x404                 	// #1028
  417d2c:	mov	w3, #0x8fa                 	// #2298
  417d30:	mov	w1, wzr
  417d34:	add	x2, x2, #0x8da
  417d38:	add	x4, x4, #0xfe8
  417d3c:	add	x5, x5, #0x15
  417d40:	bl	40a2d0 <log_internal_realm@plt>
  417d44:	b	417b38 <udev_rules_apply_static_dev_perms+0xec>
  417d48:	mov	x23, xzr
  417d4c:	tbnz	w24, #0, 417b3c <udev_rules_apply_static_dev_perms+0xf0>
  417d50:	b	417d5c <udev_rules_apply_static_dev_perms+0x310>
  417d54:	mov	x23, xzr
  417d58:	tbnz	w24, #0, 417b3c <udev_rules_apply_static_dev_perms+0xf0>
  417d5c:	cmn	w27, #0x1
  417d60:	mov	w19, w27
  417d64:	b.ne	417d80 <udev_rules_apply_static_dev_perms+0x334>  // b.any
  417d68:	mov	w0, w25
  417d6c:	bl	40aec0 <uid_is_valid@plt>
  417d70:	tst	w0, #0x1
  417d74:	mov	w8, #0x180                 	// #384
  417d78:	mov	w9, #0x1b0                 	// #432
  417d7c:	csel	w19, w9, w8, ne  // ne = any
  417d80:	mov	w0, w20
  417d84:	bl	40aec0 <uid_is_valid@plt>
  417d88:	tst	w0, #0x1
  417d8c:	mov	w0, w25
  417d90:	csel	w22, w20, wzr, ne  // ne = any
  417d94:	bl	40aec0 <uid_is_valid@plt>
  417d98:	tst	w0, #0x1
  417d9c:	csel	w3, w25, wzr, ne  // ne = any
  417da0:	add	x0, sp, #0x8a8
  417da4:	mov	w1, w19
  417da8:	mov	w2, w22
  417dac:	stp	w3, w22, [sp, #16]
  417db0:	bl	40b000 <chmod_and_chown@plt>
  417db4:	cmn	w0, #0x2
  417db8:	b.eq	417b3c <udev_rules_apply_static_dev_perms+0xf0>  // b.none
  417dbc:	mov	w22, w0
  417dc0:	mov	w0, #0x1                   	// #1
  417dc4:	bl	40a2c0 <log_get_max_level_realm@plt>
  417dc8:	tbnz	w22, #31, 417e60 <udev_rules_apply_static_dev_perms+0x414>
  417dcc:	cmp	w0, #0x7
  417dd0:	b.lt	417e0c <udev_rules_apply_static_dev_perms+0x3c0>  // b.tstop
  417dd4:	ldp	w8, w7, [sp, #16]
  417dd8:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  417ddc:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  417de0:	adrp	x5, 439000 <worker_hash_op+0x4df8>
  417de4:	add	x6, sp, #0x8a8
  417de8:	mov	w0, #0x407                 	// #1031
  417dec:	mov	w3, #0x923                 	// #2339
  417df0:	mov	w1, wzr
  417df4:	add	x2, x2, #0x8da
  417df8:	add	x4, x4, #0xfe8
  417dfc:	add	x5, x5, #0xc5
  417e00:	str	w19, [sp, #8]
  417e04:	str	w8, [sp]
  417e08:	bl	40a2d0 <log_internal_realm@plt>
  417e0c:	add	x1, sp, #0x8a8
  417e10:	mov	w0, #0xffffff9c            	// #-100
  417e14:	mov	x2, xzr
  417e18:	mov	w3, wzr
  417e1c:	bl	40b040 <utimensat@plt>
  417e20:	b	417b3c <udev_rules_apply_static_dev_perms+0xf0>
  417e24:	mov	w8, wzr
  417e28:	mov	x23, xzr
  417e2c:	cmp	w19, #0x0
  417e30:	cneg	w9, w19, mi  // mi = first
  417e34:	sub	w24, w8, w9, uxtb
  417e38:	b	417b40 <udev_rules_apply_static_dev_perms+0xf4>
  417e3c:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  417e40:	adrp	x3, 438000 <worker_hash_op+0x3df8>
  417e44:	mov	w0, #0x1                   	// #1
  417e48:	mov	w2, #0x901                 	// #2305
  417e4c:	add	x1, x1, #0x8da
  417e50:	add	x3, x3, #0xfe8
  417e54:	bl	40a330 <log_oom_internal@plt>
  417e58:	mov	w24, w0
  417e5c:	b	417b40 <udev_rules_apply_static_dev_perms+0xf4>
  417e60:	cmp	w0, #0x3
  417e64:	b.lt	417eec <udev_rules_apply_static_dev_perms+0x4a0>  // b.tstop
  417e68:	ldp	w8, w7, [sp, #16]
  417e6c:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  417e70:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  417e74:	adrp	x5, 439000 <worker_hash_op+0x4df8>
  417e78:	add	x6, sp, #0x8a8
  417e7c:	mov	w0, #0x403                 	// #1027
  417e80:	mov	w3, #0x921                 	// #2337
  417e84:	mov	w1, w22
  417e88:	add	x2, x2, #0x8da
  417e8c:	add	x4, x4, #0xfe8
  417e90:	add	x5, x5, #0xa6
  417e94:	str	w8, [sp]
  417e98:	bl	40a2d0 <log_internal_realm@plt>
  417e9c:	mov	w24, w0
  417ea0:	b	417b40 <udev_rules_apply_static_dev_perms+0xf4>
  417ea4:	mov	w19, w0
  417ea8:	mov	w0, #0x1                   	// #1
  417eac:	bl	40a2c0 <log_get_max_level_realm@plt>
  417eb0:	cmp	w0, #0x3
  417eb4:	b.lt	417efc <udev_rules_apply_static_dev_perms+0x4b0>  // b.tstop
  417eb8:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  417ebc:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  417ec0:	adrp	x5, 439000 <worker_hash_op+0x4df8>
  417ec4:	add	x6, sp, #0x4a8
  417ec8:	mov	w0, #0x403                 	// #1027
  417ecc:	mov	w3, #0x909                 	// #2313
  417ed0:	mov	w1, w19
  417ed4:	add	x2, x2, #0x8da
  417ed8:	add	x4, x4, #0xfe8
  417edc:	add	x5, x5, #0x68
  417ee0:	bl	40a2d0 <log_internal_realm@plt>
  417ee4:	mov	w24, w0
  417ee8:	b	417b40 <udev_rules_apply_static_dev_perms+0xf4>
  417eec:	mov	w8, wzr
  417ef0:	neg	w9, w22
  417ef4:	sub	w24, w8, w9, uxtb
  417ef8:	b	417b40 <udev_rules_apply_static_dev_perms+0xf4>
  417efc:	mov	w8, wzr
  417f00:	neg	w9, w19
  417f04:	sub	w24, w8, w9, uxtb
  417f08:	b	417b40 <udev_rules_apply_static_dev_perms+0xf4>
  417f0c:	mov	w8, wzr
  417f10:	b	417e2c <udev_rules_apply_static_dev_perms+0x3e0>
  417f14:	mov	w24, wzr
  417f18:	ldr	x0, [sp, #32]
  417f1c:	cbz	x0, 417aa4 <udev_rules_apply_static_dev_perms+0x58>
  417f20:	bl	40ae30 <strv_free@plt>
  417f24:	b	417aa4 <udev_rules_apply_static_dev_perms+0x58>
  417f28:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  417f2c:	adrp	x3, 438000 <worker_hash_op+0x3df8>
  417f30:	mov	w0, #0x1                   	// #1
  417f34:	mov	w2, #0x940                 	// #2368
  417f38:	add	x1, x1, #0x8da
  417f3c:	add	x3, x3, #0xf7a
  417f40:	bl	40a330 <log_oom_internal@plt>
  417f44:	mov	w24, w0
  417f48:	ldr	x0, [sp, #32]
  417f4c:	cbnz	x0, 417f20 <udev_rules_apply_static_dev_perms+0x4d4>
  417f50:	b	417aa4 <udev_rules_apply_static_dev_perms+0x58>
  417f54:	mov	w24, wzr
  417f58:	mov	w0, w24
  417f5c:	add	sp, sp, #0xcb0
  417f60:	ldp	x20, x19, [sp, #80]
  417f64:	ldp	x22, x21, [sp, #64]
  417f68:	ldp	x24, x23, [sp, #48]
  417f6c:	ldp	x26, x25, [sp, #32]
  417f70:	ldp	x28, x27, [sp, #16]
  417f74:	ldp	x29, x30, [sp], #96
  417f78:	ret
  417f7c:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  417f80:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  417f84:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  417f88:	add	x1, x1, #0xa5c
  417f8c:	add	x2, x2, #0x8da
  417f90:	add	x4, x4, #0xfa0
  417f94:	mov	w0, #0x1                   	// #1
  417f98:	mov	w3, #0x8ed                 	// #2285
  417f9c:	bl	40a630 <log_assert_failed_realm@plt>
  417fa0:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  417fa4:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  417fa8:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  417fac:	add	x1, x1, #0x856
  417fb0:	add	x2, x2, #0x8da
  417fb4:	add	x4, x4, #0xa11
  417fb8:	mov	w0, #0x1                   	// #1
  417fbc:	mov	w3, #0x94f                 	// #2383
  417fc0:	bl	40a630 <log_assert_failed_realm@plt>

0000000000417fc4 <udev_rule_line_free>:
  417fc4:	stp	x29, x30, [sp, #-32]!
  417fc8:	stp	x20, x19, [sp, #16]
  417fcc:	mov	x29, sp
  417fd0:	cbz	x0, 418034 <udev_rule_line_free+0x70>
  417fd4:	mov	x19, x0
  417fd8:	ldr	x0, [x0, #56]
  417fdc:	cbz	x0, 417ff0 <udev_rule_line_free+0x2c>
  417fe0:	ldr	x20, [x0, #24]
  417fe4:	bl	40a320 <free@plt>
  417fe8:	mov	x0, x20
  417fec:	cbnz	x20, 417fe0 <udev_rule_line_free+0x1c>
  417ff0:	ldr	x9, [x19, #40]
  417ff4:	str	xzr, [x19, #56]
  417ff8:	cbz	x9, 418054 <udev_rule_line_free+0x90>
  417ffc:	ldr	x8, [x9, #8]
  418000:	cmp	x8, x19
  418004:	b.ne	418010 <udev_rule_line_free+0x4c>  // b.any
  418008:	ldr	x8, [x19, #72]
  41800c:	str	x8, [x9, #8]
  418010:	mov	x8, x19
  418014:	ldr	x10, [x8, #64]!
  418018:	cbz	x10, 418024 <udev_rule_line_free+0x60>
  41801c:	ldr	x11, [x19, #72]
  418020:	str	x11, [x10, #72]
  418024:	ldr	x11, [x19, #72]
  418028:	cbz	x11, 418040 <udev_rule_line_free+0x7c>
  41802c:	add	x9, x11, #0x40
  418030:	b	41804c <udev_rule_line_free+0x88>
  418034:	ldp	x20, x19, [sp, #16]
  418038:	ldp	x29, x30, [sp], #32
  41803c:	ret
  418040:	ldr	x11, [x9, #16]!
  418044:	cmp	x11, x19
  418048:	b.ne	41806c <udev_rule_line_free+0xa8>  // b.any
  41804c:	str	x10, [x9]
  418050:	stp	xzr, xzr, [x8]
  418054:	ldr	x0, [x19]
  418058:	bl	40a320 <free@plt>
  41805c:	mov	x0, x19
  418060:	ldp	x20, x19, [sp, #16]
  418064:	ldp	x29, x30, [sp], #32
  418068:	b	40a320 <free@plt>
  41806c:	adrp	x1, 434000 <__libc_csu_init+0x60>
  418070:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  418074:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  418078:	add	x1, x1, #0x45e
  41807c:	add	x2, x2, #0x8da
  418080:	add	x4, x4, #0xa44
  418084:	mov	w0, #0x1                   	// #1
  418088:	mov	w3, #0x111                 	// #273
  41808c:	bl	40a630 <log_assert_failed_realm@plt>

0000000000418090 <parse_token>:
  418090:	sub	sp, sp, #0x170
  418094:	stp	x29, x30, [sp, #272]
  418098:	stp	x28, x27, [sp, #288]
  41809c:	stp	x26, x25, [sp, #304]
  4180a0:	stp	x24, x23, [sp, #320]
  4180a4:	stp	x22, x21, [sp, #336]
  4180a8:	stp	x20, x19, [sp, #352]
  4180ac:	add	x29, sp, #0x110
  4180b0:	cbz	x0, 41afcc <parse_token+0x2f3c>
  4180b4:	mov	x26, x0
  4180b8:	ldr	x27, [x26, #32]!
  4180bc:	mov	x24, x0
  4180c0:	cbz	x27, 41aff0 <parse_token+0x2f60>
  4180c4:	ldr	x20, [x27, #8]
  4180c8:	cbz	x20, 41b014 <parse_token+0x2f84>
  4180cc:	mov	x19, x1
  4180d0:	cbz	x1, 41b038 <parse_token+0x2fa8>
  4180d4:	mov	x21, x4
  4180d8:	cbz	x4, 41b05c <parse_token+0x2fcc>
  4180dc:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  4180e0:	add	x1, x1, #0xc37
  4180e4:	mov	x0, x19
  4180e8:	mov	w22, w3
  4180ec:	mov	x23, x2
  4180f0:	bl	40a930 <strcmp@plt>
  4180f4:	cbz	w0, 418384 <parse_token+0x2f4>
  4180f8:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  4180fc:	add	x1, x1, #0xc76
  418100:	mov	x0, x19
  418104:	bl	40a930 <strcmp@plt>
  418108:	cbz	w0, 4183e4 <parse_token+0x354>
  41810c:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  418110:	add	x1, x1, #0xc7e
  418114:	mov	x0, x19
  418118:	bl	40a930 <strcmp@plt>
  41811c:	cbz	w0, 418444 <parse_token+0x3b4>
  418120:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  418124:	add	x1, x1, #0xc85
  418128:	mov	x0, x19
  41812c:	sub	x25, x29, #0x80
  418130:	bl	40a930 <strcmp@plt>
  418134:	cbz	w0, 4184b8 <parse_token+0x428>
  418138:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  41813c:	add	x1, x1, #0xc8d
  418140:	mov	x0, x19
  418144:	bl	40a930 <strcmp@plt>
  418148:	cbz	w0, 418584 <parse_token+0x4f4>
  41814c:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  418150:	add	x1, x1, #0xd78
  418154:	mov	x0, x19
  418158:	bl	40a930 <strcmp@plt>
  41815c:	cbz	w0, 418650 <parse_token+0x5c0>
  418160:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  418164:	add	x1, x1, #0xe4e
  418168:	mov	x0, x19
  41816c:	bl	40a930 <strcmp@plt>
  418170:	cbz	w0, 41878c <parse_token+0x6fc>
  418174:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  418178:	add	x1, x1, #0xe5e
  41817c:	mov	x0, x19
  418180:	bl	40a930 <strcmp@plt>
  418184:	cbz	w0, 4188b4 <parse_token+0x824>
  418188:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  41818c:	add	x1, x1, #0xe0e
  418190:	mov	x0, x19
  418194:	bl	40a930 <strcmp@plt>
  418198:	cbz	w0, 418970 <parse_token+0x8e0>
  41819c:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  4181a0:	add	x1, x1, #0xdec
  4181a4:	mov	x0, x19
  4181a8:	bl	40a930 <strcmp@plt>
  4181ac:	cbz	w0, 418bc0 <parse_token+0xb30>
  4181b0:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  4181b4:	add	x1, x1, #0xea7
  4181b8:	mov	x0, x19
  4181bc:	bl	40a930 <strcmp@plt>
  4181c0:	cbz	w0, 418da8 <parse_token+0xd18>
  4181c4:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  4181c8:	add	x1, x1, #0xefd
  4181cc:	mov	x0, x19
  4181d0:	bl	40a930 <strcmp@plt>
  4181d4:	cbz	w0, 418fd8 <parse_token+0xf48>
  4181d8:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  4181dc:	add	x1, x1, #0xf04
  4181e0:	mov	x0, x19
  4181e4:	bl	40a930 <strcmp@plt>
  4181e8:	cbz	w0, 4191cc <parse_token+0x113c>
  4181ec:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  4181f0:	add	x1, x1, #0xf0c
  4181f4:	mov	x0, x19
  4181f8:	bl	40a930 <strcmp@plt>
  4181fc:	cbz	w0, 419304 <parse_token+0x1274>
  418200:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  418204:	add	x1, x1, #0xf17
  418208:	mov	x0, x19
  41820c:	bl	40a930 <strcmp@plt>
  418210:	cbz	w0, 419474 <parse_token+0x13e4>
  418214:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  418218:	add	x1, x1, #0xf1f
  41821c:	mov	x0, x19
  418220:	bl	40a930 <strcmp@plt>
  418224:	cbz	w0, 419588 <parse_token+0x14f8>
  418228:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  41822c:	add	x1, x1, #0xe18
  418230:	mov	x0, x19
  418234:	bl	40a930 <strcmp@plt>
  418238:	cbz	w0, 41970c <parse_token+0x167c>
  41823c:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  418240:	add	x1, x1, #0xfda
  418244:	mov	x0, x19
  418248:	bl	40a930 <strcmp@plt>
  41824c:	cbz	w0, 4197d8 <parse_token+0x1748>
  418250:	adrp	x1, 438000 <worker_hash_op+0x3df8>
  418254:	add	x1, x1, #0x3
  418258:	mov	x0, x19
  41825c:	bl	40a930 <strcmp@plt>
  418260:	cbz	w0, 4198f8 <parse_token+0x1868>
  418264:	adrp	x1, 438000 <worker_hash_op+0x3df8>
  418268:	add	x1, x1, #0x44
  41826c:	mov	x0, x19
  418270:	bl	40a930 <strcmp@plt>
  418274:	cbz	w0, 4199d0 <parse_token+0x1940>
  418278:	adrp	x1, 438000 <worker_hash_op+0x3df8>
  41827c:	add	x1, x1, #0xca
  418280:	mov	x0, x19
  418284:	sub	x25, x29, #0x80
  418288:	bl	40a930 <strcmp@plt>
  41828c:	cbz	w0, 419abc <parse_token+0x1a2c>
  418290:	adrp	x1, 438000 <worker_hash_op+0x3df8>
  418294:	add	x1, x1, #0xd1
  418298:	mov	x0, x19
  41829c:	bl	40a930 <strcmp@plt>
  4182a0:	cbz	w0, 419bfc <parse_token+0x1b6c>
  4182a4:	adrp	x1, 438000 <worker_hash_op+0x3df8>
  4182a8:	add	x1, x1, #0x1d2
  4182ac:	mov	x0, x19
  4182b0:	bl	40a930 <strcmp@plt>
  4182b4:	cbz	w0, 419d34 <parse_token+0x1ca4>
  4182b8:	adrp	x1, 438000 <worker_hash_op+0x3df8>
  4182bc:	add	x1, x1, #0x283
  4182c0:	mov	x0, x19
  4182c4:	bl	40a930 <strcmp@plt>
  4182c8:	cbz	w0, 419ef8 <parse_token+0x1e68>
  4182cc:	adrp	x1, 438000 <worker_hash_op+0x3df8>
  4182d0:	add	x1, x1, #0x2ec
  4182d4:	mov	x0, x19
  4182d8:	bl	40a930 <strcmp@plt>
  4182dc:	cbz	w0, 41a024 <parse_token+0x1f94>
  4182e0:	adrp	x1, 438000 <worker_hash_op+0x3df8>
  4182e4:	add	x1, x1, #0x2f1
  4182e8:	mov	x0, x19
  4182ec:	bl	40a930 <strcmp@plt>
  4182f0:	cbz	w0, 41a0fc <parse_token+0x206c>
  4182f4:	adrp	x1, 438000 <worker_hash_op+0x3df8>
  4182f8:	add	x1, x1, #0x344
  4182fc:	mov	x0, x19
  418300:	bl	40a930 <strcmp@plt>
  418304:	cbz	w0, 41a28c <parse_token+0x21fc>
  418308:	adrp	x1, 438000 <worker_hash_op+0x3df8>
  41830c:	add	x1, x1, #0x375
  418310:	mov	x0, x19
  418314:	bl	40a930 <strcmp@plt>
  418318:	cbz	w0, 41a52c <parse_token+0x249c>
  41831c:	adrp	x1, 438000 <worker_hash_op+0x3df8>
  418320:	add	x1, x1, #0x3b0
  418324:	mov	x0, x19
  418328:	bl	40a930 <strcmp@plt>
  41832c:	cbz	w0, 41a624 <parse_token+0x2594>
  418330:	ldr	x8, [x27]
  418334:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  418338:	ldr	w9, [x20, #8]
  41833c:	add	x10, x10, #0xbc0
  418340:	cmp	x8, #0x0
  418344:	csel	x8, x10, x8, eq  // eq = none
  418348:	str	x8, [sp, #16]
  41834c:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  418350:	add	x8, x8, #0x3b6
  418354:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  418358:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  41835c:	mov	w1, #0x16                  	// #22
  418360:	str	x19, [sp, #32]
  418364:	str	w9, [sp, #24]
  418368:	add	x2, x2, #0x8da
  41836c:	add	x4, x4, #0xc3e
  418370:	str	x8, [sp, #8]
  418374:	mov	w0, #0x3                   	// #3
  418378:	movk	w1, #0x4000, lsl #16
  41837c:	mov	w3, #0x3c4                 	// #964
  418380:	b	41abc0 <parse_token+0x2b30>
  418384:	cbz	x23, 4184a4 <parse_token+0x414>
  418388:	ldr	x8, [x27]
  41838c:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  418390:	ldr	w9, [x20, #8]
  418394:	add	x10, x10, #0xbc0
  418398:	cmp	x8, #0x0
  41839c:	csel	x8, x10, x8, eq  // eq = none
  4183a0:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  4183a4:	str	x8, [sp, #16]
  4183a8:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  4183ac:	add	x10, x10, #0xc63
  4183b0:	add	x8, x8, #0xc4a
  4183b4:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  4183b8:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  4183bc:	mov	w1, #0x16                  	// #22
  4183c0:	str	w9, [sp, #24]
  4183c4:	add	x2, x2, #0x8da
  4183c8:	add	x4, x4, #0xc3e
  4183cc:	stp	x10, x19, [sp, #32]
  4183d0:	str	x8, [sp, #8]
  4183d4:	mov	w0, #0x3                   	// #3
  4183d8:	movk	w1, #0x4000, lsl #16
  4183dc:	mov	w3, #0x226                 	// #550
  4183e0:	b	41abc0 <parse_token+0x2b30>
  4183e4:	cbz	x23, 418518 <parse_token+0x488>
  4183e8:	ldr	x8, [x27]
  4183ec:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  4183f0:	ldr	w9, [x20, #8]
  4183f4:	add	x10, x10, #0xbc0
  4183f8:	cmp	x8, #0x0
  4183fc:	csel	x8, x10, x8, eq  // eq = none
  418400:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  418404:	str	x8, [sp, #16]
  418408:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  41840c:	add	x10, x10, #0xc63
  418410:	add	x8, x8, #0xc4a
  418414:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  418418:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  41841c:	mov	w1, #0x16                  	// #22
  418420:	str	w9, [sp, #24]
  418424:	add	x2, x2, #0x8da
  418428:	add	x4, x4, #0xc3e
  41842c:	stp	x10, x19, [sp, #32]
  418430:	str	x8, [sp, #8]
  418434:	mov	w0, #0x3                   	// #3
  418438:	movk	w1, #0x4000, lsl #16
  41843c:	mov	w3, #0x22d                 	// #557
  418440:	b	41abc0 <parse_token+0x2b30>
  418444:	cbz	x23, 4185e4 <parse_token+0x554>
  418448:	ldr	x8, [x27]
  41844c:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  418450:	ldr	w9, [x20, #8]
  418454:	add	x10, x10, #0xbc0
  418458:	cmp	x8, #0x0
  41845c:	csel	x8, x10, x8, eq  // eq = none
  418460:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  418464:	str	x8, [sp, #16]
  418468:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  41846c:	add	x10, x10, #0xc63
  418470:	add	x8, x8, #0xc4a
  418474:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  418478:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  41847c:	mov	w1, #0x16                  	// #22
  418480:	str	w9, [sp, #24]
  418484:	add	x2, x2, #0x8da
  418488:	add	x4, x4, #0xc3e
  41848c:	stp	x10, x19, [sp, #32]
  418490:	str	x8, [sp, #8]
  418494:	mov	w0, #0x3                   	// #3
  418498:	movk	w1, #0x4000, lsl #16
  41849c:	mov	w3, #0x234                 	// #564
  4184a0:	b	41abc0 <parse_token+0x2b30>
  4184a4:	cmp	w22, #0x2
  4184a8:	b.cs	418528 <parse_token+0x498>  // b.hs, b.nlast
  4184ac:	mov	x0, x20
  4184b0:	mov	w1, wzr
  4184b4:	b	418a64 <parse_token+0x9d4>
  4184b8:	cbz	x23, 4186cc <parse_token+0x63c>
  4184bc:	ldr	x8, [x27]
  4184c0:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  4184c4:	ldr	w9, [x20, #8]
  4184c8:	add	x10, x10, #0xbc0
  4184cc:	cmp	x8, #0x0
  4184d0:	csel	x8, x10, x8, eq  // eq = none
  4184d4:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  4184d8:	str	x8, [sp, #16]
  4184dc:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  4184e0:	add	x10, x10, #0xc63
  4184e4:	add	x8, x8, #0xc4a
  4184e8:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  4184ec:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  4184f0:	mov	w1, #0x16                  	// #22
  4184f4:	str	w9, [sp, #24]
  4184f8:	add	x2, x2, #0x8da
  4184fc:	add	x4, x4, #0xc3e
  418500:	stp	x10, x19, [sp, #32]
  418504:	str	x8, [sp, #8]
  418508:	mov	w0, #0x3                   	// #3
  41850c:	movk	w1, #0x4000, lsl #16
  418510:	mov	w3, #0x23b                 	// #571
  418514:	b	41abc0 <parse_token+0x2b30>
  418518:	cmp	w22, #0x2
  41851c:	b.cs	4185f4 <parse_token+0x564>  // b.hs, b.nlast
  418520:	mov	w1, #0x1                   	// #1
  418524:	b	418a60 <parse_token+0x9d0>
  418528:	ldr	x8, [x27]
  41852c:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  418530:	ldr	w9, [x20, #8]
  418534:	add	x10, x10, #0xbc0
  418538:	cmp	x8, #0x0
  41853c:	csel	x8, x10, x8, eq  // eq = none
  418540:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  418544:	str	x8, [sp, #16]
  418548:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  41854c:	add	x10, x10, #0xc6d
  418550:	add	x8, x8, #0xc4a
  418554:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  418558:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  41855c:	mov	w1, #0x16                  	// #22
  418560:	str	w9, [sp, #24]
  418564:	add	x2, x2, #0x8da
  418568:	add	x4, x4, #0xc3e
  41856c:	stp	x10, x19, [sp, #32]
  418570:	str	x8, [sp, #8]
  418574:	mov	w0, #0x3                   	// #3
  418578:	movk	w1, #0x4000, lsl #16
  41857c:	mov	w3, #0x228                 	// #552
  418580:	b	41abc0 <parse_token+0x2b30>
  418584:	cbz	x23, 418834 <parse_token+0x7a4>
  418588:	ldr	x8, [x27]
  41858c:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  418590:	ldr	w9, [x20, #8]
  418594:	add	x10, x10, #0xbc0
  418598:	cmp	x8, #0x0
  41859c:	csel	x8, x10, x8, eq  // eq = none
  4185a0:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  4185a4:	str	x8, [sp, #16]
  4185a8:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  4185ac:	add	x10, x10, #0xc63
  4185b0:	add	x8, x8, #0xc4a
  4185b4:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  4185b8:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  4185bc:	mov	w1, #0x16                  	// #22
  4185c0:	str	w9, [sp, #24]
  4185c4:	add	x2, x2, #0x8da
  4185c8:	add	x4, x4, #0xc3e
  4185cc:	stp	x10, x19, [sp, #32]
  4185d0:	str	x8, [sp, #8]
  4185d4:	mov	w0, #0x3                   	// #3
  4185d8:	movk	w1, #0x4000, lsl #16
  4185dc:	mov	w3, #0x246                 	// #582
  4185e0:	b	41abc0 <parse_token+0x2b30>
  4185e4:	cmp	w22, #0x2
  4185e8:	b.cs	418730 <parse_token+0x6a0>  // b.hs, b.nlast
  4185ec:	mov	w1, #0x2                   	// #2
  4185f0:	b	418a60 <parse_token+0x9d0>
  4185f4:	ldr	x8, [x27]
  4185f8:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  4185fc:	ldr	w9, [x20, #8]
  418600:	add	x10, x10, #0xbc0
  418604:	cmp	x8, #0x0
  418608:	csel	x8, x10, x8, eq  // eq = none
  41860c:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  418610:	str	x8, [sp, #16]
  418614:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  418618:	add	x10, x10, #0xc6d
  41861c:	add	x8, x8, #0xc4a
  418620:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  418624:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  418628:	mov	w1, #0x16                  	// #22
  41862c:	str	w9, [sp, #24]
  418630:	add	x2, x2, #0x8da
  418634:	add	x4, x4, #0xc3e
  418638:	stp	x10, x19, [sp, #32]
  41863c:	str	x8, [sp, #8]
  418640:	mov	w0, #0x3                   	// #3
  418644:	movk	w1, #0x4000, lsl #16
  418648:	mov	w3, #0x22f                 	// #559
  41864c:	b	41abc0 <parse_token+0x2b30>
  418650:	cbz	x23, 4187d8 <parse_token+0x748>
  418654:	ldrb	w8, [x23]
  418658:	cbz	w8, 4187d8 <parse_token+0x748>
  41865c:	cmp	w22, #0x5
  418660:	b.eq	418c9c <parse_token+0xc0c>  // b.none
  418664:	cmp	w22, #0x3
  418668:	mov	w24, w22
  41866c:	b.ne	418cfc <parse_token+0xc6c>  // b.any
  418670:	ldr	x8, [x27]
  418674:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  418678:	ldr	w9, [x20, #8]
  41867c:	add	x10, x10, #0xbc0
  418680:	cmp	x8, #0x0
  418684:	csel	x8, x10, x8, eq  // eq = none
  418688:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  41868c:	str	x8, [sp, #16]
  418690:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  418694:	add	x10, x10, #0xc6d
  418698:	add	x8, x8, #0xc4a
  41869c:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  4186a0:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  4186a4:	mov	w1, #0x16                  	// #22
  4186a8:	str	w9, [sp, #24]
  4186ac:	add	x2, x2, #0x8da
  4186b0:	add	x4, x4, #0xc3e
  4186b4:	stp	x10, x19, [sp, #32]
  4186b8:	str	x8, [sp, #8]
  4186bc:	mov	w0, #0x3                   	// #3
  4186c0:	movk	w1, #0x4000, lsl #16
  4186c4:	mov	w3, #0x25e                 	// #606
  4186c8:	b	41abc0 <parse_token+0x2b30>
  4186cc:	cmp	w22, #0x3
  4186d0:	b.ne	4188a4 <parse_token+0x814>  // b.any
  4186d4:	ldr	x8, [x27]
  4186d8:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  4186dc:	ldr	w9, [x20, #8]
  4186e0:	add	x10, x10, #0xbc0
  4186e4:	cmp	x8, #0x0
  4186e8:	csel	x8, x10, x8, eq  // eq = none
  4186ec:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  4186f0:	str	x8, [sp, #16]
  4186f4:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  4186f8:	add	x10, x10, #0xc6d
  4186fc:	add	x8, x8, #0xc4a
  418700:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  418704:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  418708:	mov	w1, #0x16                  	// #22
  41870c:	str	w9, [sp, #24]
  418710:	add	x2, x2, #0x8da
  418714:	add	x4, x4, #0xc3e
  418718:	stp	x10, x19, [sp, #32]
  41871c:	str	x8, [sp, #8]
  418720:	mov	w0, #0x3                   	// #3
  418724:	movk	w1, #0x4000, lsl #16
  418728:	mov	w3, #0x23d                 	// #573
  41872c:	b	41abc0 <parse_token+0x2b30>
  418730:	ldr	x8, [x27]
  418734:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  418738:	ldr	w9, [x20, #8]
  41873c:	add	x10, x10, #0xbc0
  418740:	cmp	x8, #0x0
  418744:	csel	x8, x10, x8, eq  // eq = none
  418748:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  41874c:	str	x8, [sp, #16]
  418750:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  418754:	add	x10, x10, #0xc6d
  418758:	add	x8, x8, #0xc4a
  41875c:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  418760:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  418764:	mov	w1, #0x16                  	// #22
  418768:	str	w9, [sp, #24]
  41876c:	add	x2, x2, #0x8da
  418770:	add	x4, x4, #0xc3e
  418774:	stp	x10, x19, [sp, #32]
  418778:	str	x8, [sp, #8]
  41877c:	mov	w0, #0x3                   	// #3
  418780:	movk	w1, #0x4000, lsl #16
  418784:	mov	w3, #0x236                 	// #566
  418788:	b	41abc0 <parse_token+0x2b30>
  41878c:	cbz	x23, 418914 <parse_token+0x884>
  418790:	ldrb	w8, [x23]
  418794:	cbz	w8, 418914 <parse_token+0x884>
  418798:	adrp	x8, 457000 <__FRAME_END__+0x149b8>
  41879c:	add	x8, x8, #0x200
  4187a0:	ldr	q0, [x8]
  4187a4:	ldr	x8, [x8, #16]
  4187a8:	add	x0, sp, #0x70
  4187ac:	mov	x1, x23
  4187b0:	str	q0, [sp, #112]
  4187b4:	str	x8, [sp, #128]
  4187b8:	bl	40b1e0 <strv_find@plt>
  4187bc:	cbz	x0, 418e40 <parse_token+0xdb0>
  4187c0:	cmp	w22, #0x2
  4187c4:	b.cs	418ef8 <parse_token+0xe68>  // b.hs, b.nlast
  4187c8:	mov	w1, #0x6                   	// #6
  4187cc:	mov	x0, x20
  4187d0:	mov	w2, w22
  4187d4:	b	41957c <parse_token+0x14ec>
  4187d8:	ldr	x8, [x27]
  4187dc:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  4187e0:	ldr	w9, [x20, #8]
  4187e4:	add	x10, x10, #0xbc0
  4187e8:	cmp	x8, #0x0
  4187ec:	csel	x8, x10, x8, eq  // eq = none
  4187f0:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  4187f4:	str	x8, [sp, #16]
  4187f8:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  4187fc:	add	x10, x10, #0xc63
  418800:	add	x8, x8, #0xc4a
  418804:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  418808:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  41880c:	mov	w1, #0x16                  	// #22
  418810:	str	w9, [sp, #24]
  418814:	add	x2, x2, #0x8da
  418818:	add	x4, x4, #0xc3e
  41881c:	stp	x10, x19, [sp, #32]
  418820:	str	x8, [sp, #8]
  418824:	mov	w0, #0x3                   	// #3
  418828:	movk	w1, #0x4000, lsl #16
  41882c:	mov	w3, #0x25c                 	// #604
  418830:	b	41abc0 <parse_token+0x2b30>
  418834:	cmp	w22, #0x2
  418838:	b.eq	418aa0 <parse_token+0xa10>  // b.none
  41883c:	cmp	w22, #0x3
  418840:	mov	w23, w22
  418844:	b.ne	418b00 <parse_token+0xa70>  // b.any
  418848:	ldr	x8, [x27]
  41884c:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  418850:	ldr	w9, [x20, #8]
  418854:	add	x10, x10, #0xbc0
  418858:	cmp	x8, #0x0
  41885c:	csel	x8, x10, x8, eq  // eq = none
  418860:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  418864:	str	x8, [sp, #16]
  418868:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  41886c:	add	x10, x10, #0xc6d
  418870:	add	x8, x8, #0xc4a
  418874:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  418878:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  41887c:	mov	w1, #0x16                  	// #22
  418880:	str	w9, [sp, #24]
  418884:	add	x2, x2, #0x8da
  418888:	add	x4, x4, #0xc3e
  41888c:	stp	x10, x19, [sp, #32]
  418890:	str	x8, [sp, #8]
  418894:	mov	w0, #0x3                   	// #3
  418898:	movk	w1, #0x4000, lsl #16
  41889c:	mov	w3, #0x248                 	// #584
  4188a0:	b	41abc0 <parse_token+0x2b30>
  4188a4:	cmp	w22, #0x2
  4188a8:	b.cs	4189d0 <parse_token+0x940>  // b.hs, b.nlast
  4188ac:	mov	w1, #0x3                   	// #3
  4188b0:	b	418a60 <parse_token+0x9d0>
  4188b4:	cbz	x23, 418c20 <parse_token+0xb90>
  4188b8:	ldr	x8, [x27]
  4188bc:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  4188c0:	ldr	w9, [x20, #8]
  4188c4:	add	x10, x10, #0xbc0
  4188c8:	cmp	x8, #0x0
  4188cc:	csel	x8, x10, x8, eq  // eq = none
  4188d0:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  4188d4:	str	x8, [sp, #16]
  4188d8:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  4188dc:	add	x10, x10, #0xc63
  4188e0:	add	x8, x8, #0xc4a
  4188e4:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  4188e8:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  4188ec:	mov	w1, #0x16                  	// #22
  4188f0:	str	w9, [sp, #24]
  4188f4:	add	x2, x2, #0x8da
  4188f8:	add	x4, x4, #0xc3e
  4188fc:	stp	x10, x19, [sp, #32]
  418900:	str	x8, [sp, #8]
  418904:	mov	w0, #0x3                   	// #3
  418908:	movk	w1, #0x4000, lsl #16
  41890c:	mov	w3, #0x278                 	// #632
  418910:	b	41abc0 <parse_token+0x2b30>
  418914:	ldr	x8, [x27]
  418918:	adrp	x9, 437000 <worker_hash_op+0x2df8>
  41891c:	add	x9, x9, #0xbc0
  418920:	cmp	x8, #0x0
  418924:	csel	x8, x9, x8, eq  // eq = none
  418928:	ldr	w9, [x20, #8]
  41892c:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  418930:	str	x8, [sp, #16]
  418934:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  418938:	add	x10, x10, #0xc63
  41893c:	add	x8, x8, #0xc4a
  418940:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  418944:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  418948:	mov	w1, #0x16                  	// #22
  41894c:	str	w9, [sp, #24]
  418950:	add	x2, x2, #0x8da
  418954:	add	x4, x4, #0xc3e
  418958:	stp	x10, x19, [sp, #32]
  41895c:	str	x8, [sp, #8]
  418960:	mov	w0, #0x3                   	// #3
  418964:	movk	w1, #0x4000, lsl #16
  418968:	mov	w3, #0x272                 	// #626
  41896c:	b	41abc0 <parse_token+0x2b30>
  418970:	cbz	x23, 418e60 <parse_token+0xdd0>
  418974:	ldr	x8, [x27]
  418978:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  41897c:	ldr	w9, [x20, #8]
  418980:	add	x10, x10, #0xbc0
  418984:	cmp	x8, #0x0
  418988:	csel	x8, x10, x8, eq  // eq = none
  41898c:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  418990:	str	x8, [sp, #16]
  418994:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  418998:	add	x10, x10, #0xc63
  41899c:	add	x8, x8, #0xc4a
  4189a0:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  4189a4:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  4189a8:	mov	w1, #0x16                  	// #22
  4189ac:	str	w9, [sp, #24]
  4189b0:	add	x2, x2, #0x8da
  4189b4:	add	x4, x4, #0xc3e
  4189b8:	stp	x10, x19, [sp, #32]
  4189bc:	str	x8, [sp, #8]
  4189c0:	mov	w0, #0x3                   	// #3
  4189c4:	movk	w1, #0x4000, lsl #16
  4189c8:	mov	w3, #0x286                 	// #646
  4189cc:	b	41abc0 <parse_token+0x2b30>
  4189d0:	sub	x1, x29, #0x8
  4189d4:	sub	x2, x29, #0x10
  4189d8:	mov	x0, x21
  4189dc:	bl	412bd0 <udev_check_format>
  4189e0:	tbz	w0, #31, 418a5c <parse_token+0x9cc>
  4189e4:	ldr	x9, [x26]
  4189e8:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  4189ec:	add	x8, x8, #0xbc0
  4189f0:	cbz	x9, 418a08 <parse_token+0x978>
  4189f4:	ldp	x10, x9, [x9]
  4189f8:	cmp	x10, #0x0
  4189fc:	csel	x8, x8, x10, eq  // eq = none
  418a00:	cbz	x9, 418a08 <parse_token+0x978>
  418a04:	ldr	w9, [x9, #8]
  418a08:	ldp	x11, x10, [x25, #112]
  418a0c:	str	x8, [sp, #16]
  418a10:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  418a14:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  418a18:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  418a1c:	mov	w1, #0x16                  	// #22
  418a20:	add	x10, x10, #0x1
  418a24:	add	x8, x8, #0x4a4
  418a28:	add	x2, x2, #0x8da
  418a2c:	add	x4, x4, #0x488
  418a30:	mov	w0, #0x3                   	// #3
  418a34:	movk	w1, #0x4000, lsl #16
  418a38:	mov	w3, #0x209                 	// #521
  418a3c:	mov	x5, xzr
  418a40:	mov	x6, xzr
  418a44:	mov	x7, xzr
  418a48:	stp	x10, x11, [sp, #48]
  418a4c:	stp	x21, x19, [sp, #32]
  418a50:	str	w9, [sp, #24]
  418a54:	stp	xzr, x8, [sp]
  418a58:	bl	40a730 <log_object_internal@plt>
  418a5c:	mov	w1, #0x2a                  	// #42
  418a60:	mov	x0, x20
  418a64:	mov	w2, w22
  418a68:	mov	x3, x21
  418a6c:	mov	x4, xzr
  418a70:	bl	41b080 <rule_line_add_token>
  418a74:	tbnz	w0, #31, 418a80 <parse_token+0x9f0>
  418a78:	mov	w0, #0x1                   	// #1
  418a7c:	b	41abd4 <parse_token+0x2b44>
  418a80:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  418a84:	adrp	x3, 437000 <worker_hash_op+0x2df8>
  418a88:	add	x1, x1, #0x8da
  418a8c:	add	x3, x3, #0xc3e
  418a90:	mov	w0, #0x1                   	// #1
  418a94:	mov	w2, #0x3c6                 	// #966
  418a98:	bl	40a330 <log_oom_internal@plt>
  418a9c:	b	41abd4 <parse_token+0x2b44>
  418aa0:	ldr	x8, [x27]
  418aa4:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  418aa8:	ldr	w9, [x20, #8]
  418aac:	add	x10, x10, #0xbc0
  418ab0:	cmp	x8, #0x0
  418ab4:	csel	x8, x10, x8, eq  // eq = none
  418ab8:	str	x8, [sp, #16]
  418abc:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  418ac0:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  418ac4:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  418ac8:	add	x8, x8, #0xc92
  418acc:	add	x2, x2, #0x8da
  418ad0:	add	x4, x4, #0xc3e
  418ad4:	mov	w0, #0x4                   	// #4
  418ad8:	mov	w3, #0x24a                 	// #586
  418adc:	mov	w1, wzr
  418ae0:	mov	x5, xzr
  418ae4:	mov	x6, xzr
  418ae8:	mov	x7, xzr
  418aec:	str	x19, [sp, #32]
  418af0:	str	w9, [sp, #24]
  418af4:	stp	xzr, x8, [sp]
  418af8:	mov	w23, #0x4                   	// #4
  418afc:	bl	40a730 <log_object_internal@plt>
  418b00:	cmp	w22, #0x2
  418b04:	b.cs	418b10 <parse_token+0xa80>  // b.hs, b.nlast
  418b08:	mov	w1, #0x4                   	// #4
  418b0c:	b	418fcc <parse_token+0xf3c>
  418b10:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  418b14:	add	x1, x1, #0xce9
  418b18:	mov	x0, x21
  418b1c:	bl	40a930 <strcmp@plt>
  418b20:	cbz	w0, 418f58 <parse_token+0xec8>
  418b24:	ldrb	w8, [x21]
  418b28:	cbz	w8, 419114 <parse_token+0x1084>
  418b2c:	sub	x1, x29, #0x8
  418b30:	sub	x2, x29, #0x10
  418b34:	mov	x0, x21
  418b38:	bl	412bd0 <udev_check_format>
  418b3c:	tbz	w0, #31, 418bb8 <parse_token+0xb28>
  418b40:	ldr	x9, [x26]
  418b44:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  418b48:	add	x8, x8, #0xbc0
  418b4c:	cbz	x9, 418b64 <parse_token+0xad4>
  418b50:	ldp	x10, x9, [x9]
  418b54:	cmp	x10, #0x0
  418b58:	csel	x8, x8, x10, eq  // eq = none
  418b5c:	cbz	x9, 418b64 <parse_token+0xad4>
  418b60:	ldr	w9, [x9, #8]
  418b64:	ldp	x11, x10, [x25, #112]
  418b68:	str	x8, [sp, #16]
  418b6c:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  418b70:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  418b74:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  418b78:	mov	w1, #0x16                  	// #22
  418b7c:	add	x10, x10, #0x1
  418b80:	add	x8, x8, #0x4a4
  418b84:	add	x2, x2, #0x8da
  418b88:	add	x4, x4, #0x488
  418b8c:	mov	w0, #0x3                   	// #3
  418b90:	movk	w1, #0x4000, lsl #16
  418b94:	mov	w3, #0x209                 	// #521
  418b98:	mov	x5, xzr
  418b9c:	mov	x6, xzr
  418ba0:	mov	x7, xzr
  418ba4:	stp	x10, x11, [sp, #48]
  418ba8:	stp	x21, x19, [sp, #32]
  418bac:	str	w9, [sp, #24]
  418bb0:	stp	xzr, x8, [sp]
  418bb4:	bl	40a730 <log_object_internal@plt>
  418bb8:	mov	w1, #0x29                  	// #41
  418bbc:	b	418fcc <parse_token+0xf3c>
  418bc0:	cbz	x23, 419070 <parse_token+0xfe0>
  418bc4:	ldr	x8, [x27]
  418bc8:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  418bcc:	ldr	w9, [x20, #8]
  418bd0:	add	x10, x10, #0xbc0
  418bd4:	cmp	x8, #0x0
  418bd8:	csel	x8, x10, x8, eq  // eq = none
  418bdc:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  418be0:	str	x8, [sp, #16]
  418be4:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  418be8:	add	x10, x10, #0xc63
  418bec:	add	x8, x8, #0xc4a
  418bf0:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  418bf4:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  418bf8:	mov	w1, #0x16                  	// #22
  418bfc:	str	w9, [sp, #24]
  418c00:	add	x2, x2, #0x8da
  418c04:	add	x4, x4, #0xc3e
  418c08:	stp	x10, x19, [sp, #32]
  418c0c:	str	x8, [sp, #8]
  418c10:	mov	w0, #0x3                   	// #3
  418c14:	movk	w1, #0x4000, lsl #16
  418c18:	mov	w3, #0x290                 	// #656
  418c1c:	b	41abc0 <parse_token+0x2b30>
  418c20:	cmp	w22, #0x5
  418c24:	mov	w23, w22
  418c28:	b.ne	418c8c <parse_token+0xbfc>  // b.any
  418c2c:	ldr	x8, [x27]
  418c30:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  418c34:	ldr	w9, [x20, #8]
  418c38:	add	x10, x10, #0xbc0
  418c3c:	cmp	x8, #0x0
  418c40:	csel	x8, x10, x8, eq  // eq = none
  418c44:	str	x8, [sp, #16]
  418c48:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  418c4c:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  418c50:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  418c54:	add	x8, x8, #0xd7c
  418c58:	add	x2, x2, #0x8da
  418c5c:	add	x4, x4, #0xc3e
  418c60:	mov	w0, #0x4                   	// #4
  418c64:	mov	w3, #0x27a                 	// #634
  418c68:	mov	w1, wzr
  418c6c:	mov	x5, xzr
  418c70:	mov	x6, xzr
  418c74:	mov	x7, xzr
  418c78:	str	x19, [sp, #32]
  418c7c:	str	w9, [sp, #24]
  418c80:	stp	xzr, x8, [sp]
  418c84:	mov	w23, #0x4                   	// #4
  418c88:	bl	40a730 <log_object_internal@plt>
  418c8c:	cmp	w22, #0x2
  418c90:	b.cs	418fb4 <parse_token+0xf24>  // b.hs, b.nlast
  418c94:	mov	w1, #0x7                   	// #7
  418c98:	b	418fcc <parse_token+0xf3c>
  418c9c:	ldr	x8, [x27]
  418ca0:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  418ca4:	ldr	w9, [x20, #8]
  418ca8:	add	x10, x10, #0xbc0
  418cac:	cmp	x8, #0x0
  418cb0:	csel	x8, x10, x8, eq  // eq = none
  418cb4:	str	x8, [sp, #16]
  418cb8:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  418cbc:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  418cc0:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  418cc4:	add	x8, x8, #0xd7c
  418cc8:	add	x2, x2, #0x8da
  418ccc:	add	x4, x4, #0xc3e
  418cd0:	mov	w0, #0x4                   	// #4
  418cd4:	mov	w3, #0x260                 	// #608
  418cd8:	mov	w1, wzr
  418cdc:	mov	x5, xzr
  418ce0:	mov	x6, xzr
  418ce4:	mov	x7, xzr
  418ce8:	str	x19, [sp, #32]
  418cec:	str	w9, [sp, #24]
  418cf0:	stp	xzr, x8, [sp]
  418cf4:	mov	w24, #0x4                   	// #4
  418cf8:	bl	40a730 <log_object_internal@plt>
  418cfc:	cmp	w22, #0x2
  418d00:	b.cs	418d0c <parse_token+0xc7c>  // b.hs, b.nlast
  418d04:	mov	w1, #0x5                   	// #5
  418d08:	b	419574 <parse_token+0x14e4>
  418d0c:	adrp	x8, 457000 <__FRAME_END__+0x149b8>
  418d10:	add	x8, x8, #0x198
  418d14:	ldp	q0, q1, [x8, #48]
  418d18:	ldr	q2, [x8, #80]
  418d1c:	ldr	x9, [x8, #96]
  418d20:	ldp	q3, q4, [x8]
  418d24:	ldr	q5, [x8, #32]
  418d28:	sub	x0, x29, #0x80
  418d2c:	mov	x1, x23
  418d30:	stp	q5, q0, [x29, #-96]
  418d34:	stp	q1, q2, [x25, #64]
  418d38:	str	x9, [x25, #96]
  418d3c:	stp	q3, q4, [x29, #-128]
  418d40:	bl	40b1e0 <strv_find@plt>
  418d44:	cbz	x0, 419080 <parse_token+0xff0>
  418d48:	ldr	x9, [x26]
  418d4c:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  418d50:	add	x8, x8, #0xbc0
  418d54:	cbz	x9, 418d6c <parse_token+0xcdc>
  418d58:	ldp	x10, x9, [x9]
  418d5c:	cmp	x10, #0x0
  418d60:	csel	x8, x8, x10, eq  // eq = none
  418d64:	cbz	x9, 418d6c <parse_token+0xcdc>
  418d68:	ldr	w9, [x9, #8]
  418d6c:	str	x8, [sp, #16]
  418d70:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  418d74:	add	x8, x8, #0xe1d
  418d78:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  418d7c:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  418d80:	mov	w1, #0x16                  	// #22
  418d84:	str	x23, [sp, #32]
  418d88:	str	w9, [sp, #24]
  418d8c:	add	x2, x2, #0x8da
  418d90:	add	x4, x4, #0xc3e
  418d94:	str	x8, [sp, #8]
  418d98:	mov	w0, #0x3                   	// #3
  418d9c:	movk	w1, #0x4000, lsl #16
  418da0:	mov	w3, #0x269                 	// #617
  418da4:	b	41abc0 <parse_token+0x2b30>
  418da8:	mov	x0, x24
  418dac:	mov	x1, x19
  418db0:	mov	x2, x23
  418db4:	bl	41b61c <check_attr_format_and_warn>
  418db8:	tbnz	w0, #31, 41abd4 <parse_token+0x2b44>
  418dbc:	cmp	w22, #0x2
  418dc0:	b.eq	41922c <parse_token+0x119c>  // b.none
  418dc4:	cmp	w22, #0x5
  418dc8:	b.eq	41922c <parse_token+0x119c>  // b.none
  418dcc:	cmp	w22, #0x3
  418dd0:	mov	w24, w22
  418dd4:	b.ne	419298 <parse_token+0x1208>  // b.any
  418dd8:	ldr	x9, [x26]
  418ddc:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  418de0:	add	x8, x8, #0xbc0
  418de4:	cbz	x9, 418dfc <parse_token+0xd6c>
  418de8:	ldp	x10, x9, [x9]
  418dec:	cmp	x10, #0x0
  418df0:	csel	x8, x8, x10, eq  // eq = none
  418df4:	cbz	x9, 418dfc <parse_token+0xd6c>
  418df8:	ldr	w9, [x9, #8]
  418dfc:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  418e00:	str	x8, [sp, #16]
  418e04:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  418e08:	add	x10, x10, #0xc6d
  418e0c:	add	x8, x8, #0xc4a
  418e10:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  418e14:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  418e18:	mov	w1, #0x16                  	// #22
  418e1c:	str	w9, [sp, #24]
  418e20:	add	x2, x2, #0x8da
  418e24:	add	x4, x4, #0xc3e
  418e28:	stp	x10, x19, [sp, #32]
  418e2c:	str	x8, [sp, #8]
  418e30:	mov	w0, #0x3                   	// #3
  418e34:	movk	w1, #0x4000, lsl #16
  418e38:	mov	w3, #0x29a                 	// #666
  418e3c:	b	41abc0 <parse_token+0x2b30>
  418e40:	ldp	x8, x20, [x27]
  418e44:	adrp	x9, 437000 <worker_hash_op+0x2df8>
  418e48:	add	x9, x9, #0xbc0
  418e4c:	cmp	x8, #0x0
  418e50:	csel	x8, x9, x8, eq  // eq = none
  418e54:	cbnz	x20, 418928 <parse_token+0x898>
  418e58:	mov	w9, wzr
  418e5c:	b	41892c <parse_token+0x89c>
  418e60:	cmp	w22, #0x2
  418e64:	b.cs	419170 <parse_token+0x10e0>  // b.hs, b.nlast
  418e68:	adrp	x8, 457000 <__FRAME_END__+0x149b8>
  418e6c:	add	x8, x8, #0x218
  418e70:	ldr	q0, [x8]
  418e74:	ldr	x8, [x8, #16]
  418e78:	add	x0, sp, #0x50
  418e7c:	mov	x1, x21
  418e80:	str	q0, [sp, #80]
  418e84:	str	x8, [sp, #96]
  418e88:	bl	40b1e0 <strv_find@plt>
  418e8c:	cbz	x0, 418ef0 <parse_token+0xe60>
  418e90:	ldp	x8, x9, [x27]
  418e94:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  418e98:	add	x10, x10, #0xbc0
  418e9c:	cmp	x8, #0x0
  418ea0:	csel	x8, x10, x8, eq  // eq = none
  418ea4:	cbz	x9, 418eac <parse_token+0xe1c>
  418ea8:	ldr	w9, [x9, #8]
  418eac:	str	x8, [sp, #16]
  418eb0:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  418eb4:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  418eb8:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  418ebc:	add	x8, x8, #0xe6c
  418ec0:	add	x2, x2, #0x8da
  418ec4:	add	x4, x4, #0xc3e
  418ec8:	mov	w0, #0x4                   	// #4
  418ecc:	mov	w3, #0x28b                 	// #651
  418ed0:	mov	w1, wzr
  418ed4:	mov	x5, xzr
  418ed8:	mov	x6, xzr
  418edc:	mov	x7, xzr
  418ee0:	str	x21, [sp, #32]
  418ee4:	str	w9, [sp, #24]
  418ee8:	stp	xzr, x8, [sp]
  418eec:	bl	40a730 <log_object_internal@plt>
  418ef0:	mov	w1, #0x8                   	// #8
  418ef4:	b	418a60 <parse_token+0x9d0>
  418ef8:	ldp	x8, x9, [x27]
  418efc:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  418f00:	add	x10, x10, #0xbc0
  418f04:	cmp	x8, #0x0
  418f08:	csel	x8, x10, x8, eq  // eq = none
  418f0c:	cbz	x9, 418f14 <parse_token+0xe84>
  418f10:	ldr	w9, [x9, #8]
  418f14:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  418f18:	str	x8, [sp, #16]
  418f1c:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  418f20:	add	x10, x10, #0xc6d
  418f24:	add	x8, x8, #0xc4a
  418f28:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  418f2c:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  418f30:	mov	w1, #0x16                  	// #22
  418f34:	str	w9, [sp, #24]
  418f38:	add	x2, x2, #0x8da
  418f3c:	add	x4, x4, #0xc3e
  418f40:	stp	x10, x19, [sp, #32]
  418f44:	str	x8, [sp, #8]
  418f48:	mov	w0, #0x3                   	// #3
  418f4c:	movk	w1, #0x4000, lsl #16
  418f50:	mov	w3, #0x274                 	// #628
  418f54:	b	41abc0 <parse_token+0x2b30>
  418f58:	ldr	x9, [x26]
  418f5c:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  418f60:	add	x8, x8, #0xbc0
  418f64:	cbz	x9, 418f7c <parse_token+0xeec>
  418f68:	ldp	x10, x9, [x9]
  418f6c:	cmp	x10, #0x0
  418f70:	csel	x8, x8, x10, eq  // eq = none
  418f74:	cbz	x9, 418f7c <parse_token+0xeec>
  418f78:	ldr	w9, [x9, #8]
  418f7c:	str	x8, [sp, #16]
  418f80:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  418f84:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  418f88:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  418f8c:	mov	w1, #0x16                  	// #22
  418f90:	add	x8, x8, #0xcec
  418f94:	add	x2, x2, #0x8da
  418f98:	add	x4, x4, #0xc3e
  418f9c:	mov	w0, #0x3                   	// #3
  418fa0:	movk	w1, #0x4000, lsl #16
  418fa4:	mov	w3, #0x251                 	// #593
  418fa8:	str	w9, [sp, #24]
  418fac:	str	x8, [sp, #8]
  418fb0:	b	41abc0 <parse_token+0x2b30>
  418fb4:	mov	w3, #0x1                   	// #1
  418fb8:	mov	x0, x24
  418fbc:	mov	x1, x19
  418fc0:	mov	x2, x21
  418fc4:	bl	41b4b0 <check_value_format_and_warn>
  418fc8:	mov	w1, #0x25                  	// #37
  418fcc:	mov	x0, x20
  418fd0:	mov	w2, w23
  418fd4:	b	418a68 <parse_token+0x9d8>
  418fd8:	mov	x0, x24
  418fdc:	mov	x1, x19
  418fe0:	mov	x2, x23
  418fe4:	bl	41b61c <check_attr_format_and_warn>
  418fe8:	tbnz	w0, #31, 41abd4 <parse_token+0x2b44>
  418fec:	cmp	w22, #0x2
  418ff0:	b.eq	4193f8 <parse_token+0x1368>  // b.none
  418ff4:	cmp	w22, #0x5
  418ff8:	b.eq	4193f8 <parse_token+0x1368>  // b.none
  418ffc:	cmp	w22, #0x3
  419000:	mov	w24, w22
  419004:	b.ne	419464 <parse_token+0x13d4>  // b.any
  419008:	ldr	x9, [x26]
  41900c:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  419010:	add	x8, x8, #0xbc0
  419014:	cbz	x9, 41902c <parse_token+0xf9c>
  419018:	ldp	x10, x9, [x9]
  41901c:	cmp	x10, #0x0
  419020:	csel	x8, x8, x10, eq  // eq = none
  419024:	cbz	x9, 41902c <parse_token+0xf9c>
  419028:	ldr	w9, [x9, #8]
  41902c:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  419030:	str	x8, [sp, #16]
  419034:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  419038:	add	x10, x10, #0xc6d
  41903c:	add	x8, x8, #0xc4a
  419040:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  419044:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  419048:	mov	w1, #0x16                  	// #22
  41904c:	str	w9, [sp, #24]
  419050:	add	x2, x2, #0x8da
  419054:	add	x4, x4, #0xc3e
  419058:	stp	x10, x19, [sp, #32]
  41905c:	str	x8, [sp, #8]
  419060:	mov	w0, #0x3                   	// #3
  419064:	movk	w1, #0x4000, lsl #16
  419068:	mov	w3, #0x2aa                 	// #682
  41906c:	b	41abc0 <parse_token+0x2b30>
  419070:	cmp	w22, #0x2
  419074:	b.cs	4192a8 <parse_token+0x1218>  // b.hs, b.nlast
  419078:	mov	w1, #0x9                   	// #9
  41907c:	b	418a60 <parse_token+0x9d0>
  419080:	sub	x1, x29, #0x8
  419084:	sub	x2, x29, #0x10
  419088:	mov	x0, x21
  41908c:	bl	412bd0 <udev_check_format>
  419090:	tbz	w0, #31, 41910c <parse_token+0x107c>
  419094:	ldr	x9, [x26]
  419098:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  41909c:	add	x8, x8, #0xbc0
  4190a0:	cbz	x9, 4190b8 <parse_token+0x1028>
  4190a4:	ldp	x10, x9, [x9]
  4190a8:	cmp	x10, #0x0
  4190ac:	csel	x8, x8, x10, eq  // eq = none
  4190b0:	cbz	x9, 4190b8 <parse_token+0x1028>
  4190b4:	ldr	w9, [x9, #8]
  4190b8:	ldp	x11, x10, [x25, #112]
  4190bc:	str	x8, [sp, #16]
  4190c0:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  4190c4:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  4190c8:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  4190cc:	mov	w1, #0x16                  	// #22
  4190d0:	add	x10, x10, #0x1
  4190d4:	add	x8, x8, #0x4a4
  4190d8:	add	x2, x2, #0x8da
  4190dc:	add	x4, x4, #0x488
  4190e0:	mov	w0, #0x3                   	// #3
  4190e4:	movk	w1, #0x4000, lsl #16
  4190e8:	mov	w3, #0x209                 	// #521
  4190ec:	mov	x5, xzr
  4190f0:	mov	x6, xzr
  4190f4:	mov	x7, xzr
  4190f8:	stp	x10, x11, [sp, #48]
  4190fc:	stp	x21, x19, [sp, #32]
  419100:	str	w9, [sp, #24]
  419104:	stp	xzr, x8, [sp]
  419108:	bl	40a730 <log_object_internal@plt>
  41910c:	mov	w1, #0x28                  	// #40
  419110:	b	419574 <parse_token+0x14e4>
  419114:	ldr	x9, [x26]
  419118:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  41911c:	add	x8, x8, #0xbc0
  419120:	cbz	x9, 419138 <parse_token+0x10a8>
  419124:	ldp	x10, x9, [x9]
  419128:	cmp	x10, #0x0
  41912c:	csel	x8, x8, x10, eq  // eq = none
  419130:	cbz	x9, 419138 <parse_token+0x10a8>
  419134:	ldr	w9, [x9, #8]
  419138:	str	x8, [sp, #16]
  41913c:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  419140:	add	x8, x8, #0xd36
  419144:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  419148:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  41914c:	mov	w1, #0x16                  	// #22
  419150:	str	w9, [sp, #24]
  419154:	add	x2, x2, #0x8da
  419158:	add	x4, x4, #0xc3e
  41915c:	str	x8, [sp, #8]
  419160:	mov	w0, #0x3                   	// #3
  419164:	movk	w1, #0x4000, lsl #16
  419168:	mov	w3, #0x254                 	// #596
  41916c:	b	41abc0 <parse_token+0x2b30>
  419170:	ldr	x8, [x27]
  419174:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  419178:	ldr	w9, [x20, #8]
  41917c:	add	x10, x10, #0xbc0
  419180:	cmp	x8, #0x0
  419184:	csel	x8, x10, x8, eq  // eq = none
  419188:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  41918c:	str	x8, [sp, #16]
  419190:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  419194:	add	x10, x10, #0xc6d
  419198:	add	x8, x8, #0xc4a
  41919c:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  4191a0:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  4191a4:	mov	w1, #0x16                  	// #22
  4191a8:	str	w9, [sp, #24]
  4191ac:	add	x2, x2, #0x8da
  4191b0:	add	x4, x4, #0xc3e
  4191b4:	stp	x10, x19, [sp, #32]
  4191b8:	str	x8, [sp, #8]
  4191bc:	mov	w0, #0x3                   	// #3
  4191c0:	movk	w1, #0x4000, lsl #16
  4191c4:	mov	w3, #0x288                 	// #648
  4191c8:	b	41abc0 <parse_token+0x2b30>
  4191cc:	cbz	x23, 4194d4 <parse_token+0x1444>
  4191d0:	ldr	x8, [x27]
  4191d4:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  4191d8:	ldr	w9, [x20, #8]
  4191dc:	add	x10, x10, #0xbc0
  4191e0:	cmp	x8, #0x0
  4191e4:	csel	x8, x10, x8, eq  // eq = none
  4191e8:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  4191ec:	str	x8, [sp, #16]
  4191f0:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  4191f4:	add	x10, x10, #0xc63
  4191f8:	add	x8, x8, #0xc4a
  4191fc:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  419200:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  419204:	mov	w1, #0x16                  	// #22
  419208:	str	w9, [sp, #24]
  41920c:	add	x2, x2, #0x8da
  419210:	add	x4, x4, #0xc3e
  419214:	stp	x10, x19, [sp, #32]
  419218:	str	x8, [sp, #8]
  41921c:	mov	w0, #0x3                   	// #3
  419220:	movk	w1, #0x4000, lsl #16
  419224:	mov	w3, #0x2b7                 	// #695
  419228:	b	41abc0 <parse_token+0x2b30>
  41922c:	ldr	x9, [x26]
  419230:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  419234:	add	x8, x8, #0xbc0
  419238:	cbz	x9, 419250 <parse_token+0x11c0>
  41923c:	ldp	x10, x9, [x9]
  419240:	cmp	x10, #0x0
  419244:	csel	x8, x8, x10, eq  // eq = none
  419248:	cbz	x9, 419250 <parse_token+0x11c0>
  41924c:	ldr	w9, [x9, #8]
  419250:	str	x8, [sp, #16]
  419254:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  419258:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41925c:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  419260:	add	x8, x8, #0xeac
  419264:	add	x2, x2, #0x8da
  419268:	add	x4, x4, #0xc3e
  41926c:	mov	w0, #0x4                   	// #4
  419270:	mov	w3, #0x29c                 	// #668
  419274:	mov	w1, wzr
  419278:	mov	x5, xzr
  41927c:	mov	x6, xzr
  419280:	mov	x7, xzr
  419284:	str	x19, [sp, #32]
  419288:	str	w9, [sp, #24]
  41928c:	stp	xzr, x8, [sp]
  419290:	mov	w24, #0x4                   	// #4
  419294:	bl	40a730 <log_object_internal@plt>
  419298:	cmp	w22, #0x2
  41929c:	b.cs	419364 <parse_token+0x12d4>  // b.hs, b.nlast
  4192a0:	mov	w1, #0xa                   	// #10
  4192a4:	b	419574 <parse_token+0x14e4>
  4192a8:	ldr	x8, [x27]
  4192ac:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  4192b0:	ldr	w9, [x20, #8]
  4192b4:	add	x10, x10, #0xbc0
  4192b8:	cmp	x8, #0x0
  4192bc:	csel	x8, x10, x8, eq  // eq = none
  4192c0:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  4192c4:	str	x8, [sp, #16]
  4192c8:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  4192cc:	add	x10, x10, #0xc6d
  4192d0:	add	x8, x8, #0xc4a
  4192d4:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  4192d8:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  4192dc:	mov	w1, #0x16                  	// #22
  4192e0:	str	w9, [sp, #24]
  4192e4:	add	x2, x2, #0x8da
  4192e8:	add	x4, x4, #0xc3e
  4192ec:	stp	x10, x19, [sp, #32]
  4192f0:	str	x8, [sp, #8]
  4192f4:	mov	w0, #0x3                   	// #3
  4192f8:	movk	w1, #0x4000, lsl #16
  4192fc:	mov	w3, #0x292                 	// #658
  419300:	b	41abc0 <parse_token+0x2b30>
  419304:	cbz	x23, 4196a0 <parse_token+0x1610>
  419308:	ldr	x8, [x27]
  41930c:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  419310:	ldr	w9, [x20, #8]
  419314:	add	x10, x10, #0xbc0
  419318:	cmp	x8, #0x0
  41931c:	csel	x8, x10, x8, eq  // eq = none
  419320:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  419324:	str	x8, [sp, #16]
  419328:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  41932c:	add	x10, x10, #0xc63
  419330:	add	x8, x8, #0xc4a
  419334:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  419338:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  41933c:	mov	w1, #0x16                  	// #22
  419340:	str	w9, [sp, #24]
  419344:	add	x2, x2, #0x8da
  419348:	add	x4, x4, #0xc3e
  41934c:	stp	x10, x19, [sp, #32]
  419350:	str	x8, [sp, #8]
  419354:	mov	w0, #0x3                   	// #3
  419358:	movk	w1, #0x4000, lsl #16
  41935c:	mov	w3, #0x2be                 	// #702
  419360:	b	41abc0 <parse_token+0x2b30>
  419364:	sub	x1, x29, #0x8
  419368:	sub	x2, x29, #0x10
  41936c:	mov	x0, x21
  419370:	bl	412bd0 <udev_check_format>
  419374:	tbz	w0, #31, 4193f0 <parse_token+0x1360>
  419378:	ldr	x9, [x26]
  41937c:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  419380:	add	x8, x8, #0xbc0
  419384:	cbz	x9, 41939c <parse_token+0x130c>
  419388:	ldp	x10, x9, [x9]
  41938c:	cmp	x10, #0x0
  419390:	csel	x8, x8, x10, eq  // eq = none
  419394:	cbz	x9, 41939c <parse_token+0x130c>
  419398:	ldr	w9, [x9, #8]
  41939c:	ldp	x11, x10, [x25, #112]
  4193a0:	str	x8, [sp, #16]
  4193a4:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  4193a8:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  4193ac:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  4193b0:	mov	w1, #0x16                  	// #22
  4193b4:	add	x10, x10, #0x1
  4193b8:	add	x8, x8, #0x4a4
  4193bc:	add	x2, x2, #0x8da
  4193c0:	add	x4, x4, #0x488
  4193c4:	mov	w0, #0x3                   	// #3
  4193c8:	movk	w1, #0x4000, lsl #16
  4193cc:	mov	w3, #0x209                 	// #521
  4193d0:	mov	x5, xzr
  4193d4:	mov	x6, xzr
  4193d8:	mov	x7, xzr
  4193dc:	stp	x10, x11, [sp, #48]
  4193e0:	stp	x21, x19, [sp, #32]
  4193e4:	str	w9, [sp, #24]
  4193e8:	stp	xzr, x8, [sp]
  4193ec:	bl	40a730 <log_object_internal@plt>
  4193f0:	mov	w1, #0x2b                  	// #43
  4193f4:	b	419574 <parse_token+0x14e4>
  4193f8:	ldr	x9, [x26]
  4193fc:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  419400:	add	x8, x8, #0xbc0
  419404:	cbz	x9, 41941c <parse_token+0x138c>
  419408:	ldp	x10, x9, [x9]
  41940c:	cmp	x10, #0x0
  419410:	csel	x8, x8, x10, eq  // eq = none
  419414:	cbz	x9, 41941c <parse_token+0x138c>
  419418:	ldr	w9, [x9, #8]
  41941c:	str	x8, [sp, #16]
  419420:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  419424:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  419428:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  41942c:	add	x8, x8, #0xeac
  419430:	add	x2, x2, #0x8da
  419434:	add	x4, x4, #0xc3e
  419438:	mov	w0, #0x4                   	// #4
  41943c:	mov	w3, #0x2ac                 	// #684
  419440:	mov	w1, wzr
  419444:	mov	x5, xzr
  419448:	mov	x6, xzr
  41944c:	mov	x7, xzr
  419450:	str	x19, [sp, #32]
  419454:	str	w9, [sp, #24]
  419458:	stp	xzr, x8, [sp]
  41945c:	mov	w24, #0x4                   	// #4
  419460:	bl	40a730 <log_object_internal@plt>
  419464:	cmp	w22, #0x2
  419468:	b.cs	4194e4 <parse_token+0x1454>  // b.hs, b.nlast
  41946c:	mov	w1, #0xb                   	// #11
  419470:	b	419574 <parse_token+0x14e4>
  419474:	cbz	x23, 41976c <parse_token+0x16dc>
  419478:	ldr	x8, [x27]
  41947c:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  419480:	ldr	w9, [x20, #8]
  419484:	add	x10, x10, #0xbc0
  419488:	cmp	x8, #0x0
  41948c:	csel	x8, x10, x8, eq  // eq = none
  419490:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  419494:	str	x8, [sp, #16]
  419498:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  41949c:	add	x10, x10, #0xc63
  4194a0:	add	x8, x8, #0xc4a
  4194a4:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  4194a8:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  4194ac:	mov	w1, #0x16                  	// #22
  4194b0:	str	w9, [sp, #24]
  4194b4:	add	x2, x2, #0x8da
  4194b8:	add	x4, x4, #0xc3e
  4194bc:	stp	x10, x19, [sp, #32]
  4194c0:	str	x8, [sp, #8]
  4194c4:	mov	w0, #0x3                   	// #3
  4194c8:	movk	w1, #0x4000, lsl #16
  4194cc:	mov	w3, #0x2c5                 	// #709
  4194d0:	b	41abc0 <parse_token+0x2b30>
  4194d4:	cmp	w22, #0x2
  4194d8:	b.cs	4196b0 <parse_token+0x1620>  // b.hs, b.nlast
  4194dc:	mov	w1, #0xc                   	// #12
  4194e0:	b	418a60 <parse_token+0x9d0>
  4194e4:	sub	x1, x29, #0x8
  4194e8:	sub	x2, x29, #0x10
  4194ec:	mov	x0, x21
  4194f0:	bl	412bd0 <udev_check_format>
  4194f4:	tbz	w0, #31, 419570 <parse_token+0x14e0>
  4194f8:	ldr	x9, [x26]
  4194fc:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  419500:	add	x8, x8, #0xbc0
  419504:	cbz	x9, 41951c <parse_token+0x148c>
  419508:	ldp	x10, x9, [x9]
  41950c:	cmp	x10, #0x0
  419510:	csel	x8, x8, x10, eq  // eq = none
  419514:	cbz	x9, 41951c <parse_token+0x148c>
  419518:	ldr	w9, [x9, #8]
  41951c:	ldp	x11, x10, [x25, #112]
  419520:	str	x8, [sp, #16]
  419524:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  419528:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41952c:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  419530:	mov	w1, #0x16                  	// #22
  419534:	add	x10, x10, #0x1
  419538:	add	x8, x8, #0x4a4
  41953c:	add	x2, x2, #0x8da
  419540:	add	x4, x4, #0x488
  419544:	mov	w0, #0x3                   	// #3
  419548:	movk	w1, #0x4000, lsl #16
  41954c:	mov	w3, #0x209                 	// #521
  419550:	mov	x5, xzr
  419554:	mov	x6, xzr
  419558:	mov	x7, xzr
  41955c:	stp	x10, x11, [sp, #48]
  419560:	stp	x21, x19, [sp, #32]
  419564:	str	w9, [sp, #24]
  419568:	stp	xzr, x8, [sp]
  41956c:	bl	40a730 <log_object_internal@plt>
  419570:	mov	w1, #0x2c                  	// #44
  419574:	mov	x0, x20
  419578:	mov	w2, w24
  41957c:	mov	x3, x21
  419580:	mov	x4, x23
  419584:	b	418a70 <parse_token+0x9e0>
  419588:	mov	x0, x24
  41958c:	mov	x1, x19
  419590:	mov	x2, x23
  419594:	bl	41b61c <check_attr_format_and_warn>
  419598:	tbnz	w0, #31, 41abd4 <parse_token+0x2b44>
  41959c:	cmp	w22, #0x2
  4195a0:	b.cs	419834 <parse_token+0x17a4>  // b.hs, b.nlast
  4195a4:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  4195a8:	add	x1, x1, #0xf25
  4195ac:	mov	w2, #0x7                   	// #7
  4195b0:	mov	x0, x23
  4195b4:	bl	40a6a0 <strncmp@plt>
  4195b8:	cbnz	w0, 419620 <parse_token+0x1590>
  4195bc:	ldr	x9, [x26]
  4195c0:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  4195c4:	add	x8, x8, #0xbc0
  4195c8:	cbz	x9, 4195e0 <parse_token+0x1550>
  4195cc:	ldp	x10, x9, [x9]
  4195d0:	cmp	x10, #0x0
  4195d4:	csel	x8, x8, x10, eq  // eq = none
  4195d8:	cbz	x9, 4195e0 <parse_token+0x1550>
  4195dc:	ldr	w9, [x9, #8]
  4195e0:	str	x8, [sp, #16]
  4195e4:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  4195e8:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  4195ec:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  4195f0:	add	x8, x8, #0xf2d
  4195f4:	add	x2, x2, #0x8da
  4195f8:	add	x4, x4, #0xc3e
  4195fc:	mov	w0, #0x4                   	// #4
  419600:	mov	w3, #0x2d2                 	// #722
  419604:	mov	w1, wzr
  419608:	mov	x5, xzr
  41960c:	mov	x6, xzr
  419610:	mov	x7, xzr
  419614:	str	w9, [sp, #24]
  419618:	stp	xzr, x8, [sp]
  41961c:	bl	40a730 <log_object_internal@plt>
  419620:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  419624:	add	x1, x1, #0xf78
  419628:	mov	x0, x23
  41962c:	bl	40b1f0 <strstr@plt>
  419630:	cbz	x0, 419698 <parse_token+0x1608>
  419634:	ldr	x9, [x26]
  419638:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  41963c:	add	x8, x8, #0xbc0
  419640:	cbz	x9, 419658 <parse_token+0x15c8>
  419644:	ldp	x10, x9, [x9]
  419648:	cmp	x10, #0x0
  41964c:	csel	x8, x8, x10, eq  // eq = none
  419650:	cbz	x9, 419658 <parse_token+0x15c8>
  419654:	ldr	w9, [x9, #8]
  419658:	str	x8, [sp, #16]
  41965c:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  419660:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  419664:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  419668:	add	x8, x8, #0xf7c
  41966c:	add	x2, x2, #0x8da
  419670:	add	x4, x4, #0xc3e
  419674:	mov	w0, #0x4                   	// #4
  419678:	mov	w3, #0x2d4                 	// #724
  41967c:	mov	w1, wzr
  419680:	mov	x5, xzr
  419684:	mov	x6, xzr
  419688:	mov	x7, xzr
  41968c:	str	w9, [sp, #24]
  419690:	stp	xzr, x8, [sp]
  419694:	bl	40a730 <log_object_internal@plt>
  419698:	mov	w1, #0xf                   	// #15
  41969c:	b	4187cc <parse_token+0x73c>
  4196a0:	cmp	w22, #0x2
  4196a4:	b.cs	41977c <parse_token+0x16ec>  // b.hs, b.nlast
  4196a8:	mov	w1, #0xd                   	// #13
  4196ac:	b	418a60 <parse_token+0x9d0>
  4196b0:	ldr	x8, [x27]
  4196b4:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  4196b8:	ldr	w9, [x20, #8]
  4196bc:	add	x10, x10, #0xbc0
  4196c0:	cmp	x8, #0x0
  4196c4:	csel	x8, x10, x8, eq  // eq = none
  4196c8:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  4196cc:	str	x8, [sp, #16]
  4196d0:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  4196d4:	add	x10, x10, #0xc6d
  4196d8:	add	x8, x8, #0xc4a
  4196dc:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  4196e0:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  4196e4:	mov	w1, #0x16                  	// #22
  4196e8:	str	w9, [sp, #24]
  4196ec:	add	x2, x2, #0x8da
  4196f0:	add	x4, x4, #0xc3e
  4196f4:	stp	x10, x19, [sp, #32]
  4196f8:	str	x8, [sp, #8]
  4196fc:	mov	w0, #0x3                   	// #3
  419700:	movk	w1, #0x4000, lsl #16
  419704:	mov	w3, #0x2b9                 	// #697
  419708:	b	41abc0 <parse_token+0x2b30>
  41970c:	cbz	x23, 419958 <parse_token+0x18c8>
  419710:	ldr	x8, [x27]
  419714:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  419718:	ldr	w9, [x20, #8]
  41971c:	add	x10, x10, #0xbc0
  419720:	cmp	x8, #0x0
  419724:	csel	x8, x10, x8, eq  // eq = none
  419728:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  41972c:	str	x8, [sp, #16]
  419730:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  419734:	add	x10, x10, #0xc63
  419738:	add	x8, x8, #0xc4a
  41973c:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  419740:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  419744:	mov	w1, #0x16                  	// #22
  419748:	str	w9, [sp, #24]
  41974c:	add	x2, x2, #0x8da
  419750:	add	x4, x4, #0xc3e
  419754:	stp	x10, x19, [sp, #32]
  419758:	str	x8, [sp, #8]
  41975c:	mov	w0, #0x3                   	// #3
  419760:	movk	w1, #0x4000, lsl #16
  419764:	mov	w3, #0x2d9                 	// #729
  419768:	b	41abc0 <parse_token+0x2b30>
  41976c:	cmp	w22, #0x2
  419770:	b.cs	41989c <parse_token+0x180c>  // b.hs, b.nlast
  419774:	mov	w1, #0xe                   	// #14
  419778:	b	418a60 <parse_token+0x9d0>
  41977c:	ldr	x8, [x27]
  419780:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  419784:	ldr	w9, [x20, #8]
  419788:	add	x10, x10, #0xbc0
  41978c:	cmp	x8, #0x0
  419790:	csel	x8, x10, x8, eq  // eq = none
  419794:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  419798:	str	x8, [sp, #16]
  41979c:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  4197a0:	add	x10, x10, #0xc6d
  4197a4:	add	x8, x8, #0xc4a
  4197a8:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  4197ac:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  4197b0:	mov	w1, #0x16                  	// #22
  4197b4:	str	w9, [sp, #24]
  4197b8:	add	x2, x2, #0x8da
  4197bc:	add	x4, x4, #0xc3e
  4197c0:	stp	x10, x19, [sp, #32]
  4197c4:	str	x8, [sp, #8]
  4197c8:	mov	w0, #0x3                   	// #3
  4197cc:	movk	w1, #0x4000, lsl #16
  4197d0:	mov	w3, #0x2c0                 	// #704
  4197d4:	b	41abc0 <parse_token+0x2b30>
  4197d8:	mov	w8, #0xffffffff            	// #-1
  4197dc:	stur	w8, [x29, #-8]
  4197e0:	cbz	x23, 4197fc <parse_token+0x176c>
  4197e4:	ldrb	w8, [x23]
  4197e8:	cbz	w8, 4197fc <parse_token+0x176c>
  4197ec:	sub	x1, x29, #0x8
  4197f0:	mov	x0, x23
  4197f4:	bl	40b200 <parse_mode@plt>
  4197f8:	tbnz	w0, #31, 419c5c <parse_token+0x1bcc>
  4197fc:	mov	w3, #0x1                   	// #1
  419800:	mov	x0, x24
  419804:	mov	x1, x19
  419808:	mov	x2, x21
  41980c:	bl	41b4b0 <check_value_format_and_warn>
  419810:	cmp	w22, #0x2
  419814:	b.cs	419968 <parse_token+0x18d8>  // b.hs, b.nlast
  419818:	ldur	w8, [x29, #-8]
  41981c:	mov	w1, #0x11                  	// #17
  419820:	add	x4, x8, #0x1
  419824:	mov	x0, x20
  419828:	mov	w2, w22
  41982c:	mov	x3, x21
  419830:	b	418a70 <parse_token+0x9e0>
  419834:	ldr	x9, [x26]
  419838:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  41983c:	add	x8, x8, #0xbc0
  419840:	cbz	x9, 419858 <parse_token+0x17c8>
  419844:	ldp	x10, x9, [x9]
  419848:	cmp	x10, #0x0
  41984c:	csel	x8, x8, x10, eq  // eq = none
  419850:	cbz	x9, 419858 <parse_token+0x17c8>
  419854:	ldr	w9, [x9, #8]
  419858:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  41985c:	str	x8, [sp, #16]
  419860:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  419864:	add	x10, x10, #0xc6d
  419868:	add	x8, x8, #0xc4a
  41986c:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  419870:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  419874:	mov	w1, #0x16                  	// #22
  419878:	str	w9, [sp, #24]
  41987c:	add	x2, x2, #0x8da
  419880:	add	x4, x4, #0xc3e
  419884:	stp	x10, x19, [sp, #32]
  419888:	str	x8, [sp, #8]
  41988c:	mov	w0, #0x3                   	// #3
  419890:	movk	w1, #0x4000, lsl #16
  419894:	mov	w3, #0x2cf                 	// #719
  419898:	b	41abc0 <parse_token+0x2b30>
  41989c:	ldr	x8, [x27]
  4198a0:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  4198a4:	ldr	w9, [x20, #8]
  4198a8:	add	x10, x10, #0xbc0
  4198ac:	cmp	x8, #0x0
  4198b0:	csel	x8, x10, x8, eq  // eq = none
  4198b4:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  4198b8:	str	x8, [sp, #16]
  4198bc:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  4198c0:	add	x10, x10, #0xc6d
  4198c4:	add	x8, x8, #0xc4a
  4198c8:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  4198cc:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  4198d0:	mov	w1, #0x16                  	// #22
  4198d4:	str	w9, [sp, #24]
  4198d8:	add	x2, x2, #0x8da
  4198dc:	add	x4, x4, #0xc3e
  4198e0:	stp	x10, x19, [sp, #32]
  4198e4:	str	x8, [sp, #8]
  4198e8:	mov	w0, #0x3                   	// #3
  4198ec:	movk	w1, #0x4000, lsl #16
  4198f0:	mov	w3, #0x2c7                 	// #711
  4198f4:	b	41abc0 <parse_token+0x2b30>
  4198f8:	cbz	x23, 419b78 <parse_token+0x1ae8>
  4198fc:	ldr	x8, [x27]
  419900:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  419904:	ldr	w9, [x20, #8]
  419908:	add	x10, x10, #0xbc0
  41990c:	cmp	x8, #0x0
  419910:	csel	x8, x10, x8, eq  // eq = none
  419914:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  419918:	str	x8, [sp, #16]
  41991c:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  419920:	add	x10, x10, #0xc63
  419924:	add	x8, x8, #0xc4a
  419928:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41992c:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  419930:	mov	w1, #0x16                  	// #22
  419934:	str	w9, [sp, #24]
  419938:	add	x2, x2, #0x8da
  41993c:	add	x4, x4, #0xc3e
  419940:	stp	x10, x19, [sp, #32]
  419944:	str	x8, [sp, #8]
  419948:	mov	w0, #0x3                   	// #3
  41994c:	movk	w1, #0x4000, lsl #16
  419950:	mov	w3, #0x2ed                 	// #749
  419954:	b	41abc0 <parse_token+0x2b30>
  419958:	cmp	w22, #0x2
  41995c:	b.cs	419a60 <parse_token+0x19d0>  // b.hs, b.nlast
  419960:	mov	w1, #0x10                  	// #16
  419964:	b	418a60 <parse_token+0x9d0>
  419968:	ldr	x9, [x26]
  41996c:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  419970:	add	x8, x8, #0xbc0
  419974:	cbz	x9, 41998c <parse_token+0x18fc>
  419978:	ldp	x10, x9, [x9]
  41997c:	cmp	x10, #0x0
  419980:	csel	x8, x8, x10, eq  // eq = none
  419984:	cbz	x9, 41998c <parse_token+0x18fc>
  419988:	ldr	w9, [x9, #8]
  41998c:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  419990:	str	x8, [sp, #16]
  419994:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  419998:	add	x10, x10, #0xc6d
  41999c:	add	x8, x8, #0xc4a
  4199a0:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  4199a4:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  4199a8:	mov	w1, #0x16                  	// #22
  4199ac:	str	w9, [sp, #24]
  4199b0:	add	x2, x2, #0x8da
  4199b4:	add	x4, x4, #0xc3e
  4199b8:	stp	x10, x19, [sp, #32]
  4199bc:	str	x8, [sp, #8]
  4199c0:	mov	w0, #0x3                   	// #3
  4199c4:	movk	w1, #0x4000, lsl #16
  4199c8:	mov	w3, #0x2e8                 	// #744
  4199cc:	b	41abc0 <parse_token+0x2b30>
  4199d0:	cbz	x23, 419b1c <parse_token+0x1a8c>
  4199d4:	ldrb	w8, [x23]
  4199d8:	cbz	w8, 419b1c <parse_token+0x1a8c>
  4199dc:	mov	w3, #0x1                   	// #1
  4199e0:	mov	x0, x24
  4199e4:	mov	x1, x19
  4199e8:	mov	x2, x21
  4199ec:	bl	41b4b0 <check_value_format_and_warn>
  4199f0:	cmp	w22, #0x3
  4199f4:	b.ne	419da4 <parse_token+0x1d14>  // b.any
  4199f8:	ldr	x9, [x26]
  4199fc:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  419a00:	add	x8, x8, #0xbc0
  419a04:	cbz	x9, 419a1c <parse_token+0x198c>
  419a08:	ldp	x10, x9, [x9]
  419a0c:	cmp	x10, #0x0
  419a10:	csel	x8, x8, x10, eq  // eq = none
  419a14:	cbz	x9, 419a1c <parse_token+0x198c>
  419a18:	ldr	w9, [x9, #8]
  419a1c:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  419a20:	str	x8, [sp, #16]
  419a24:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  419a28:	add	x10, x10, #0xc6d
  419a2c:	add	x8, x8, #0xc4a
  419a30:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  419a34:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  419a38:	mov	w1, #0x16                  	// #22
  419a3c:	str	w9, [sp, #24]
  419a40:	add	x2, x2, #0x8da
  419a44:	add	x4, x4, #0xc3e
  419a48:	stp	x10, x19, [sp, #32]
  419a4c:	str	x8, [sp, #8]
  419a50:	mov	w0, #0x3                   	// #3
  419a54:	movk	w1, #0x4000, lsl #16
  419a58:	mov	w3, #0x2fc                 	// #764
  419a5c:	b	41abc0 <parse_token+0x2b30>
  419a60:	ldr	x8, [x27]
  419a64:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  419a68:	ldr	w9, [x20, #8]
  419a6c:	add	x10, x10, #0xbc0
  419a70:	cmp	x8, #0x0
  419a74:	csel	x8, x10, x8, eq  // eq = none
  419a78:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  419a7c:	str	x8, [sp, #16]
  419a80:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  419a84:	add	x10, x10, #0xc6d
  419a88:	add	x8, x8, #0xc4a
  419a8c:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  419a90:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  419a94:	mov	w1, #0x16                  	// #22
  419a98:	str	w9, [sp, #24]
  419a9c:	add	x2, x2, #0x8da
  419aa0:	add	x4, x4, #0xc3e
  419aa4:	stp	x10, x19, [sp, #32]
  419aa8:	str	x8, [sp, #8]
  419aac:	mov	w0, #0x3                   	// #3
  419ab0:	movk	w1, #0x4000, lsl #16
  419ab4:	mov	w3, #0x2db                 	// #731
  419ab8:	b	41abc0 <parse_token+0x2b30>
  419abc:	cbz	x23, 419d94 <parse_token+0x1d04>
  419ac0:	ldr	x8, [x27]
  419ac4:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  419ac8:	ldr	w9, [x20, #8]
  419acc:	add	x10, x10, #0xbc0
  419ad0:	cmp	x8, #0x0
  419ad4:	csel	x8, x10, x8, eq  // eq = none
  419ad8:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  419adc:	str	x8, [sp, #16]
  419ae0:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  419ae4:	add	x10, x10, #0xc63
  419ae8:	add	x8, x8, #0xc4a
  419aec:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  419af0:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  419af4:	mov	w1, #0x16                  	// #22
  419af8:	str	w9, [sp, #24]
  419afc:	add	x2, x2, #0x8da
  419b00:	add	x4, x4, #0xc3e
  419b04:	stp	x10, x19, [sp, #32]
  419b08:	str	x8, [sp, #8]
  419b0c:	mov	w0, #0x3                   	// #3
  419b10:	movk	w1, #0x4000, lsl #16
  419b14:	mov	w3, #0x31f                 	// #799
  419b18:	b	41abc0 <parse_token+0x2b30>
  419b1c:	ldr	x8, [x27]
  419b20:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  419b24:	ldr	w9, [x20, #8]
  419b28:	add	x10, x10, #0xbc0
  419b2c:	cmp	x8, #0x0
  419b30:	csel	x8, x10, x8, eq  // eq = none
  419b34:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  419b38:	str	x8, [sp, #16]
  419b3c:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  419b40:	add	x10, x10, #0xc63
  419b44:	add	x8, x8, #0xc4a
  419b48:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  419b4c:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  419b50:	mov	w1, #0x16                  	// #22
  419b54:	str	w9, [sp, #24]
  419b58:	add	x2, x2, #0x8da
  419b5c:	add	x4, x4, #0xc3e
  419b60:	stp	x10, x19, [sp, #32]
  419b64:	str	x8, [sp, #8]
  419b68:	mov	w0, #0x3                   	// #3
  419b6c:	movk	w1, #0x4000, lsl #16
  419b70:	mov	w3, #0x2f9                 	// #761
  419b74:	b	41abc0 <parse_token+0x2b30>
  419b78:	mov	w3, #0x1                   	// #1
  419b7c:	mov	x0, x24
  419b80:	mov	x1, x19
  419b84:	mov	x2, x21
  419b88:	bl	41b4b0 <check_value_format_and_warn>
  419b8c:	cmp	w22, #0x3
  419b90:	b.ne	419cb8 <parse_token+0x1c28>  // b.any
  419b94:	ldr	x9, [x26]
  419b98:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  419b9c:	add	x8, x8, #0xbc0
  419ba0:	cbz	x9, 419bb8 <parse_token+0x1b28>
  419ba4:	ldp	x10, x9, [x9]
  419ba8:	cmp	x10, #0x0
  419bac:	csel	x8, x8, x10, eq  // eq = none
  419bb0:	cbz	x9, 419bb8 <parse_token+0x1b28>
  419bb4:	ldr	w9, [x9, #8]
  419bb8:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  419bbc:	str	x8, [sp, #16]
  419bc0:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  419bc4:	add	x10, x10, #0xc6d
  419bc8:	add	x8, x8, #0xc4a
  419bcc:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  419bd0:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  419bd4:	mov	w1, #0x16                  	// #22
  419bd8:	str	w9, [sp, #24]
  419bdc:	add	x2, x2, #0x8da
  419be0:	add	x4, x4, #0xc3e
  419be4:	stp	x10, x19, [sp, #32]
  419be8:	str	x8, [sp, #8]
  419bec:	mov	w0, #0x3                   	// #3
  419bf0:	movk	w1, #0x4000, lsl #16
  419bf4:	mov	w3, #0x2f0                 	// #752
  419bf8:	b	41abc0 <parse_token+0x2b30>
  419bfc:	cbz	x23, 419f58 <parse_token+0x1ec8>
  419c00:	ldr	x8, [x27]
  419c04:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  419c08:	ldr	w9, [x20, #8]
  419c0c:	add	x10, x10, #0xbc0
  419c10:	cmp	x8, #0x0
  419c14:	csel	x8, x10, x8, eq  // eq = none
  419c18:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  419c1c:	str	x8, [sp, #16]
  419c20:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  419c24:	add	x10, x10, #0xc63
  419c28:	add	x8, x8, #0xc4a
  419c2c:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  419c30:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  419c34:	mov	w1, #0x16                  	// #22
  419c38:	str	w9, [sp, #24]
  419c3c:	add	x2, x2, #0x8da
  419c40:	add	x4, x4, #0xc3e
  419c44:	stp	x10, x19, [sp, #32]
  419c48:	str	x8, [sp, #8]
  419c4c:	mov	w0, #0x3                   	// #3
  419c50:	movk	w1, #0x4000, lsl #16
  419c54:	mov	w3, #0x328                 	// #808
  419c58:	b	41abc0 <parse_token+0x2b30>
  419c5c:	ldr	x9, [x26]
  419c60:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  419c64:	mov	w1, w0
  419c68:	add	x8, x8, #0xbc0
  419c6c:	cbz	x9, 419c84 <parse_token+0x1bf4>
  419c70:	ldp	x10, x9, [x9]
  419c74:	cmp	x10, #0x0
  419c78:	csel	x8, x8, x10, eq  // eq = none
  419c7c:	cbz	x9, 419c84 <parse_token+0x1bf4>
  419c80:	ldr	w9, [x9, #8]
  419c84:	str	x8, [sp, #16]
  419c88:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  419c8c:	add	x8, x8, #0xfdf
  419c90:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  419c94:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  419c98:	str	x23, [sp, #32]
  419c9c:	str	w9, [sp, #24]
  419ca0:	add	x2, x2, #0x8da
  419ca4:	add	x4, x4, #0xc3e
  419ca8:	str	x8, [sp, #8]
  419cac:	mov	w0, #0x3                   	// #3
  419cb0:	mov	w3, #0x2e4                 	// #740
  419cb4:	b	41abc0 <parse_token+0x2b30>
  419cb8:	cmp	w22, #0x2
  419cbc:	b.cc	419d2c <parse_token+0x1c9c>  // b.lo, b.ul, b.last
  419cc0:	ldr	x9, [x26]
  419cc4:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  419cc8:	add	x8, x8, #0xbc0
  419ccc:	cbz	x9, 419ce4 <parse_token+0x1c54>
  419cd0:	ldp	x10, x9, [x9]
  419cd4:	cmp	x10, #0x0
  419cd8:	csel	x8, x8, x10, eq  // eq = none
  419cdc:	cbz	x9, 419ce4 <parse_token+0x1c54>
  419ce0:	ldr	w9, [x9, #8]
  419ce4:	str	x8, [sp, #16]
  419ce8:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  419cec:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  419cf0:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  419cf4:	add	x8, x8, #0xb
  419cf8:	add	x2, x2, #0x8da
  419cfc:	add	x4, x4, #0xc3e
  419d00:	mov	w0, #0x7                   	// #7
  419d04:	mov	w3, #0x2f2                 	// #754
  419d08:	mov	w1, wzr
  419d0c:	mov	x5, xzr
  419d10:	mov	x6, xzr
  419d14:	mov	x7, xzr
  419d18:	str	x19, [sp, #32]
  419d1c:	str	w9, [sp, #24]
  419d20:	stp	xzr, x8, [sp]
  419d24:	bl	40a730 <log_object_internal@plt>
  419d28:	mov	w22, wzr
  419d2c:	mov	w1, #0x12                  	// #18
  419d30:	b	418a60 <parse_token+0x9d0>
  419d34:	cbz	x23, 41a084 <parse_token+0x1ff4>
  419d38:	ldr	x8, [x27]
  419d3c:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  419d40:	ldr	w9, [x20, #8]
  419d44:	add	x10, x10, #0xbc0
  419d48:	cmp	x8, #0x0
  419d4c:	csel	x8, x10, x8, eq  // eq = none
  419d50:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  419d54:	str	x8, [sp, #16]
  419d58:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  419d5c:	add	x10, x10, #0xc63
  419d60:	add	x8, x8, #0xc4a
  419d64:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  419d68:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  419d6c:	mov	w1, #0x16                  	// #22
  419d70:	str	w9, [sp, #24]
  419d74:	add	x2, x2, #0x8da
  419d78:	add	x4, x4, #0xc3e
  419d7c:	stp	x10, x19, [sp, #32]
  419d80:	str	x8, [sp, #8]
  419d84:	mov	w0, #0x3                   	// #3
  419d88:	movk	w1, #0x4000, lsl #16
  419d8c:	mov	w3, #0x34b                 	// #843
  419d90:	b	41abc0 <parse_token+0x2b30>
  419d94:	cmp	w22, #0x2
  419d98:	b.cs	419fc8 <parse_token+0x1f38>  // b.hs, b.nlast
  419d9c:	mov	w1, #0x19                  	// #25
  419da0:	b	418a60 <parse_token+0x9d0>
  419da4:	cmp	w22, #0x2
  419da8:	b.cc	419e18 <parse_token+0x1d88>  // b.lo, b.ul, b.last
  419dac:	ldr	x9, [x26]
  419db0:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  419db4:	add	x8, x8, #0xbc0
  419db8:	cbz	x9, 419dd0 <parse_token+0x1d40>
  419dbc:	ldp	x10, x9, [x9]
  419dc0:	cmp	x10, #0x0
  419dc4:	csel	x8, x8, x10, eq  // eq = none
  419dc8:	cbz	x9, 419dd0 <parse_token+0x1d40>
  419dcc:	ldr	w9, [x9, #8]
  419dd0:	str	x8, [sp, #16]
  419dd4:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  419dd8:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  419ddc:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  419de0:	add	x8, x8, #0xb
  419de4:	add	x2, x2, #0x8da
  419de8:	add	x4, x4, #0xc3e
  419dec:	mov	w0, #0x7                   	// #7
  419df0:	mov	w3, #0x2fe                 	// #766
  419df4:	mov	w1, wzr
  419df8:	mov	x5, xzr
  419dfc:	mov	x6, xzr
  419e00:	mov	x7, xzr
  419e04:	str	x19, [sp, #32]
  419e08:	str	w9, [sp, #24]
  419e0c:	stp	xzr, x8, [sp]
  419e10:	bl	40a730 <log_object_internal@plt>
  419e14:	mov	w22, wzr
  419e18:	adrp	x1, 438000 <worker_hash_op+0x3df8>
  419e1c:	add	x1, x1, #0x4b
  419e20:	mov	x0, x23
  419e24:	bl	40a930 <strcmp@plt>
  419e28:	cbz	w0, 41a0f4 <parse_token+0x2064>
  419e2c:	adrp	x1, 438000 <worker_hash_op+0x3df8>
  419e30:	add	x1, x1, #0x50
  419e34:	mov	x0, x23
  419e38:	bl	40a930 <strcmp@plt>
  419e3c:	cbz	w0, 41a20c <parse_token+0x217c>
  419e40:	adrp	x1, 438000 <worker_hash_op+0x3df8>
  419e44:	add	x1, x1, #0x95
  419e48:	mov	x0, x23
  419e4c:	bl	40a930 <strcmp@plt>
  419e50:	cbz	w0, 41a510 <parse_token+0x2480>
  419e54:	adrp	x1, 438000 <worker_hash_op+0x3df8>
  419e58:	add	x1, x1, #0xbf
  419e5c:	mov	x0, x23
  419e60:	bl	40a930 <strcmp@plt>
  419e64:	cbz	w0, 41a614 <parse_token+0x2584>
  419e68:	adrp	x1, 438000 <worker_hash_op+0x3df8>
  419e6c:	add	x1, x1, #0xc2
  419e70:	mov	x0, x23
  419e74:	bl	40a930 <strcmp@plt>
  419e78:	cbz	w0, 41a764 <parse_token+0x26d4>
  419e7c:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  419e80:	add	x1, x1, #0xaaf
  419e84:	mov	x0, x23
  419e88:	bl	40a930 <strcmp@plt>
  419e8c:	cbz	w0, 41a970 <parse_token+0x28e0>
  419e90:	ldr	x9, [x26]
  419e94:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  419e98:	add	x8, x8, #0xbc0
  419e9c:	cbz	x9, 419eb4 <parse_token+0x1e24>
  419ea0:	ldp	x10, x9, [x9]
  419ea4:	cmp	x10, #0x0
  419ea8:	csel	x8, x8, x10, eq  // eq = none
  419eac:	cbz	x9, 419eb4 <parse_token+0x1e24>
  419eb0:	ldr	w9, [x9, #8]
  419eb4:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  419eb8:	str	x8, [sp, #16]
  419ebc:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  419ec0:	add	x10, x10, #0xc63
  419ec4:	add	x8, x8, #0xc4a
  419ec8:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  419ecc:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  419ed0:	mov	w1, #0x16                  	// #22
  419ed4:	str	w9, [sp, #24]
  419ed8:	add	x2, x2, #0x8da
  419edc:	add	x4, x4, #0xc3e
  419ee0:	stp	x10, x19, [sp, #32]
  419ee4:	str	x8, [sp, #8]
  419ee8:	mov	w0, #0x3                   	// #3
  419eec:	movk	w1, #0x4000, lsl #16
  419ef0:	mov	w3, #0x31c                 	// #796
  419ef4:	b	41abc0 <parse_token+0x2b30>
  419ef8:	cbz	x23, 41a19c <parse_token+0x210c>
  419efc:	ldr	x8, [x27]
  419f00:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  419f04:	ldr	w9, [x20, #8]
  419f08:	add	x10, x10, #0xbc0
  419f0c:	cmp	x8, #0x0
  419f10:	csel	x8, x10, x8, eq  // eq = none
  419f14:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  419f18:	str	x8, [sp, #16]
  419f1c:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  419f20:	add	x10, x10, #0xc63
  419f24:	add	x8, x8, #0xc4a
  419f28:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  419f2c:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  419f30:	mov	w1, #0x16                  	// #22
  419f34:	str	w9, [sp, #24]
  419f38:	add	x2, x2, #0x8da
  419f3c:	add	x4, x4, #0xc3e
  419f40:	stp	x10, x19, [sp, #32]
  419f44:	str	x8, [sp, #8]
  419f48:	mov	w0, #0x3                   	// #3
  419f4c:	movk	w1, #0x4000, lsl #16
  419f50:	mov	w3, #0x367                 	// #871
  419f54:	b	41abc0 <parse_token+0x2b30>
  419f58:	cmp	w22, #0x2
  419f5c:	b.cc	419f6c <parse_token+0x1edc>  // b.lo, b.ul, b.last
  419f60:	b.eq	41a3c4 <parse_token+0x2334>  // b.none
  419f64:	cmp	w22, #0x3
  419f68:	b.ne	41a424 <parse_token+0x2394>  // b.any
  419f6c:	ldr	x8, [x27]
  419f70:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  419f74:	ldr	w9, [x20, #8]
  419f78:	add	x10, x10, #0xbc0
  419f7c:	cmp	x8, #0x0
  419f80:	csel	x8, x10, x8, eq  // eq = none
  419f84:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  419f88:	str	x8, [sp, #16]
  419f8c:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  419f90:	add	x10, x10, #0xc6d
  419f94:	add	x8, x8, #0xc4a
  419f98:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  419f9c:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  419fa0:	mov	w1, #0x16                  	// #22
  419fa4:	str	w9, [sp, #24]
  419fa8:	add	x2, x2, #0x8da
  419fac:	add	x4, x4, #0xc3e
  419fb0:	stp	x10, x19, [sp, #32]
  419fb4:	str	x8, [sp, #8]
  419fb8:	mov	w0, #0x3                   	// #3
  419fbc:	movk	w1, #0x4000, lsl #16
  419fc0:	mov	w3, #0x32a                 	// #810
  419fc4:	b	41abc0 <parse_token+0x2b30>
  419fc8:	ldr	x8, [x27]
  419fcc:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  419fd0:	ldr	w9, [x20, #8]
  419fd4:	add	x10, x10, #0xbc0
  419fd8:	cmp	x8, #0x0
  419fdc:	csel	x8, x10, x8, eq  // eq = none
  419fe0:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  419fe4:	str	x8, [sp, #16]
  419fe8:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  419fec:	add	x10, x10, #0xc6d
  419ff0:	add	x8, x8, #0xc4a
  419ff4:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  419ff8:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  419ffc:	mov	w1, #0x16                  	// #22
  41a000:	str	w9, [sp, #24]
  41a004:	add	x2, x2, #0x8da
  41a008:	add	x4, x4, #0xc3e
  41a00c:	stp	x10, x19, [sp, #32]
  41a010:	str	x8, [sp, #8]
  41a014:	mov	w0, #0x3                   	// #3
  41a018:	movk	w1, #0x4000, lsl #16
  41a01c:	mov	w3, #0x321                 	// #801
  41a020:	b	41abc0 <parse_token+0x2b30>
  41a024:	cbz	x23, 41a354 <parse_token+0x22c4>
  41a028:	ldr	x8, [x27]
  41a02c:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  41a030:	ldr	w9, [x20, #8]
  41a034:	add	x10, x10, #0xbc0
  41a038:	cmp	x8, #0x0
  41a03c:	csel	x8, x10, x8, eq  // eq = none
  41a040:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  41a044:	str	x8, [sp, #16]
  41a048:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  41a04c:	add	x10, x10, #0xc63
  41a050:	add	x8, x8, #0xc4a
  41a054:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41a058:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  41a05c:	mov	w1, #0x16                  	// #22
  41a060:	str	w9, [sp, #24]
  41a064:	add	x2, x2, #0x8da
  41a068:	add	x4, x4, #0xc3e
  41a06c:	stp	x10, x19, [sp, #32]
  41a070:	str	x8, [sp, #8]
  41a074:	mov	w0, #0x3                   	// #3
  41a078:	movk	w1, #0x4000, lsl #16
  41a07c:	mov	w3, #0x383                 	// #899
  41a080:	b	41abc0 <parse_token+0x2b30>
  41a084:	cmp	w22, #0x2
  41a088:	b.cc	41a098 <parse_token+0x2008>  // b.lo, b.ul, b.last
  41a08c:	b.eq	41a594 <parse_token+0x2504>  // b.none
  41a090:	cmp	w22, #0x3
  41a094:	b.ne	41a5f4 <parse_token+0x2564>  // b.any
  41a098:	ldr	x8, [x27]
  41a09c:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  41a0a0:	ldr	w9, [x20, #8]
  41a0a4:	add	x10, x10, #0xbc0
  41a0a8:	cmp	x8, #0x0
  41a0ac:	csel	x8, x10, x8, eq  // eq = none
  41a0b0:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  41a0b4:	str	x8, [sp, #16]
  41a0b8:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  41a0bc:	add	x10, x10, #0xc6d
  41a0c0:	add	x8, x8, #0xc4a
  41a0c4:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41a0c8:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  41a0cc:	mov	w1, #0x16                  	// #22
  41a0d0:	str	w9, [sp, #24]
  41a0d4:	add	x2, x2, #0x8da
  41a0d8:	add	x4, x4, #0xc3e
  41a0dc:	stp	x10, x19, [sp, #32]
  41a0e0:	str	x8, [sp, #8]
  41a0e4:	mov	w0, #0x3                   	// #3
  41a0e8:	movk	w1, #0x4000, lsl #16
  41a0ec:	mov	w3, #0x34d                 	// #845
  41a0f0:	b	41abc0 <parse_token+0x2b30>
  41a0f4:	mov	w1, #0x13                  	// #19
  41a0f8:	b	418a60 <parse_token+0x9d0>
  41a0fc:	cbz	x23, 41a2f8 <parse_token+0x2268>
  41a100:	ldrb	w8, [x23]
  41a104:	cbz	w8, 41a2f8 <parse_token+0x2268>
  41a108:	mov	w3, #0x1                   	// #1
  41a10c:	mov	x0, x24
  41a110:	mov	x1, x19
  41a114:	mov	x2, x21
  41a118:	bl	41b4b0 <check_value_format_and_warn>
  41a11c:	cmp	w22, #0x2
  41a120:	b.cc	41a134 <parse_token+0x20a4>  // b.lo, b.ul, b.last
  41a124:	cmp	w22, #0x5
  41a128:	b.eq	41a9d4 <parse_token+0x2944>  // b.none
  41a12c:	cmp	w22, #0x3
  41a130:	b.ne	41aa40 <parse_token+0x29b0>  // b.any
  41a134:	ldr	x9, [x26]
  41a138:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  41a13c:	add	x8, x8, #0xbc0
  41a140:	cbz	x9, 41a158 <parse_token+0x20c8>
  41a144:	ldp	x10, x9, [x9]
  41a148:	cmp	x10, #0x0
  41a14c:	csel	x8, x8, x10, eq  // eq = none
  41a150:	cbz	x9, 41a158 <parse_token+0x20c8>
  41a154:	ldr	w9, [x9, #8]
  41a158:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  41a15c:	str	x8, [sp, #16]
  41a160:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  41a164:	add	x10, x10, #0xc6d
  41a168:	add	x8, x8, #0xc4a
  41a16c:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41a170:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  41a174:	mov	w1, #0x16                  	// #22
  41a178:	str	w9, [sp, #24]
  41a17c:	add	x2, x2, #0x8da
  41a180:	add	x4, x4, #0xc3e
  41a184:	stp	x10, x19, [sp, #32]
  41a188:	str	x8, [sp, #8]
  41a18c:	mov	w0, #0x3                   	// #3
  41a190:	movk	w1, #0x4000, lsl #16
  41a194:	mov	w3, #0x396                 	// #918
  41a198:	b	41abc0 <parse_token+0x2b30>
  41a19c:	cmp	w22, #0x2
  41a1a0:	b.cc	41a1b0 <parse_token+0x2120>  // b.lo, b.ul, b.last
  41a1a4:	b.eq	41a6e4 <parse_token+0x2654>  // b.none
  41a1a8:	cmp	w22, #0x3
  41a1ac:	b.ne	41a744 <parse_token+0x26b4>  // b.any
  41a1b0:	ldr	x8, [x27]
  41a1b4:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  41a1b8:	ldr	w9, [x20, #8]
  41a1bc:	add	x10, x10, #0xbc0
  41a1c0:	cmp	x8, #0x0
  41a1c4:	csel	x8, x10, x8, eq  // eq = none
  41a1c8:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  41a1cc:	str	x8, [sp, #16]
  41a1d0:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  41a1d4:	add	x10, x10, #0xc6d
  41a1d8:	add	x8, x8, #0xc4a
  41a1dc:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41a1e0:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  41a1e4:	mov	w1, #0x16                  	// #22
  41a1e8:	str	w9, [sp, #24]
  41a1ec:	add	x2, x2, #0x8da
  41a1f0:	add	x4, x4, #0xc3e
  41a1f4:	stp	x10, x19, [sp, #32]
  41a1f8:	str	x8, [sp, #8]
  41a1fc:	mov	w0, #0x3                   	// #3
  41a200:	movk	w1, #0x4000, lsl #16
  41a204:	mov	w3, #0x369                 	// #873
  41a208:	b	41abc0 <parse_token+0x2b30>
  41a20c:	mov	x0, x21
  41a210:	bl	420798 <udev_builtin_lookup>
  41a214:	tbnz	w0, #31, 41a61c <parse_token+0x258c>
  41a218:	ldr	x9, [x26]
  41a21c:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  41a220:	mov	w23, w0
  41a224:	add	x8, x8, #0xbc0
  41a228:	cbz	x9, 41a240 <parse_token+0x21b0>
  41a22c:	ldp	x10, x9, [x9]
  41a230:	cmp	x10, #0x0
  41a234:	csel	x8, x8, x10, eq  // eq = none
  41a238:	cbz	x9, 41a240 <parse_token+0x21b0>
  41a23c:	ldr	w9, [x9, #8]
  41a240:	str	x8, [sp, #16]
  41a244:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41a248:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41a24c:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  41a250:	add	x8, x8, #0x58
  41a254:	add	x2, x2, #0x8da
  41a258:	add	x4, x4, #0xc3e
  41a25c:	mov	w0, #0x7                   	// #7
  41a260:	mov	w3, #0x309                 	// #777
  41a264:	mov	w1, wzr
  41a268:	mov	x5, xzr
  41a26c:	mov	x6, xzr
  41a270:	mov	x7, xzr
  41a274:	stp	x21, x19, [sp, #32]
  41a278:	str	w9, [sp, #24]
  41a27c:	stp	xzr, x8, [sp]
  41a280:	bl	40a730 <log_object_internal@plt>
  41a284:	mov	w8, w23
  41a288:	b	41a520 <parse_token+0x2490>
  41a28c:	cmp	w22, #0x3
  41a290:	b.hi	41a7cc <parse_token+0x273c>  // b.pmore
  41a294:	cmp	w22, #0x2
  41a298:	b.eq	41a7cc <parse_token+0x273c>  // b.none
  41a29c:	ldr	x8, [x27]
  41a2a0:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  41a2a4:	ldr	w9, [x20, #8]
  41a2a8:	add	x10, x10, #0xbc0
  41a2ac:	cmp	x8, #0x0
  41a2b0:	csel	x8, x10, x8, eq  // eq = none
  41a2b4:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  41a2b8:	str	x8, [sp, #16]
  41a2bc:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  41a2c0:	add	x10, x10, #0xc6d
  41a2c4:	add	x8, x8, #0xc4a
  41a2c8:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41a2cc:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  41a2d0:	mov	w1, #0x16                  	// #22
  41a2d4:	str	w9, [sp, #24]
  41a2d8:	add	x2, x2, #0x8da
  41a2dc:	add	x4, x4, #0xc3e
  41a2e0:	stp	x10, x19, [sp, #32]
  41a2e4:	str	x8, [sp, #8]
  41a2e8:	mov	w0, #0x3                   	// #3
  41a2ec:	movk	w1, #0x4000, lsl #16
  41a2f0:	mov	w3, #0x39f                 	// #927
  41a2f4:	b	41abc0 <parse_token+0x2b30>
  41a2f8:	ldr	x8, [x27]
  41a2fc:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  41a300:	ldr	w9, [x20, #8]
  41a304:	add	x10, x10, #0xbc0
  41a308:	cmp	x8, #0x0
  41a30c:	csel	x8, x10, x8, eq  // eq = none
  41a310:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  41a314:	str	x8, [sp, #16]
  41a318:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  41a31c:	add	x10, x10, #0xc63
  41a320:	add	x8, x8, #0xc4a
  41a324:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41a328:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  41a32c:	mov	w1, #0x16                  	// #22
  41a330:	str	w9, [sp, #24]
  41a334:	add	x2, x2, #0x8da
  41a338:	add	x4, x4, #0xc3e
  41a33c:	stp	x10, x19, [sp, #32]
  41a340:	str	x8, [sp, #8]
  41a344:	mov	w0, #0x3                   	// #3
  41a348:	movk	w1, #0x4000, lsl #16
  41a34c:	mov	w3, #0x393                 	// #915
  41a350:	b	41abc0 <parse_token+0x2b30>
  41a354:	cmp	w22, #0x2
  41a358:	b.cc	41a368 <parse_token+0x22d8>  // b.lo, b.ul, b.last
  41a35c:	b.eq	41a8f0 <parse_token+0x2860>  // b.none
  41a360:	cmp	w22, #0x3
  41a364:	b.ne	41a950 <parse_token+0x28c0>  // b.any
  41a368:	ldr	x8, [x27]
  41a36c:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  41a370:	ldr	w9, [x20, #8]
  41a374:	add	x10, x10, #0xbc0
  41a378:	cmp	x8, #0x0
  41a37c:	csel	x8, x10, x8, eq  // eq = none
  41a380:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  41a384:	str	x8, [sp, #16]
  41a388:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  41a38c:	add	x10, x10, #0xc6d
  41a390:	add	x8, x8, #0xc4a
  41a394:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41a398:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  41a39c:	mov	w1, #0x16                  	// #22
  41a3a0:	str	w9, [sp, #24]
  41a3a4:	add	x2, x2, #0x8da
  41a3a8:	add	x4, x4, #0xc3e
  41a3ac:	stp	x10, x19, [sp, #32]
  41a3b0:	str	x8, [sp, #8]
  41a3b4:	mov	w0, #0x3                   	// #3
  41a3b8:	movk	w1, #0x4000, lsl #16
  41a3bc:	mov	w3, #0x385                 	// #901
  41a3c0:	b	41abc0 <parse_token+0x2b30>
  41a3c4:	ldr	x8, [x27]
  41a3c8:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  41a3cc:	ldr	w9, [x20, #8]
  41a3d0:	add	x10, x10, #0xbc0
  41a3d4:	cmp	x8, #0x0
  41a3d8:	csel	x8, x10, x8, eq  // eq = none
  41a3dc:	str	x8, [sp, #16]
  41a3e0:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41a3e4:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41a3e8:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  41a3ec:	add	x8, x8, #0xd9
  41a3f0:	add	x2, x2, #0x8da
  41a3f4:	add	x4, x4, #0xc3e
  41a3f8:	mov	w0, #0x7                   	// #7
  41a3fc:	mov	w3, #0x32c                 	// #812
  41a400:	mov	w1, wzr
  41a404:	mov	x5, xzr
  41a408:	mov	x6, xzr
  41a40c:	mov	x7, xzr
  41a410:	str	x19, [sp, #32]
  41a414:	str	w9, [sp, #24]
  41a418:	stp	xzr, x8, [sp]
  41a41c:	bl	40a730 <log_object_internal@plt>
  41a420:	mov	w22, #0x4                   	// #4
  41a424:	adrp	x1, 438000 <worker_hash_op+0x3df8>
  41a428:	add	x1, x1, #0x113
  41a42c:	mov	x0, x21
  41a430:	bl	40a930 <strcmp@plt>
  41a434:	cbz	w0, 41a58c <parse_token+0x24fc>
  41a438:	adrp	x1, 438000 <worker_hash_op+0x3df8>
  41a43c:	add	x1, x1, #0x126
  41a440:	mov	x0, x21
  41a444:	bl	40a930 <strcmp@plt>
  41a448:	cbz	w0, 41a684 <parse_token+0x25f4>
  41a44c:	adrp	x1, 438000 <worker_hash_op+0x3df8>
  41a450:	add	x1, x1, #0x13c
  41a454:	mov	x0, x21
  41a458:	bl	40a930 <strcmp@plt>
  41a45c:	cbz	w0, 41a890 <parse_token+0x2800>
  41a460:	adrp	x1, 438000 <worker_hash_op+0x3df8>
  41a464:	add	x1, x1, #0x147
  41a468:	mov	x0, x21
  41a46c:	bl	40a930 <strcmp@plt>
  41a470:	cbz	w0, 41a9a0 <parse_token+0x2910>
  41a474:	adrp	x1, 438000 <worker_hash_op+0x3df8>
  41a478:	add	x1, x1, #0x14d
  41a47c:	mov	x0, x21
  41a480:	bl	40a930 <strcmp@plt>
  41a484:	cbz	w0, 41aafc <parse_token+0x2a6c>
  41a488:	adrp	x1, 438000 <worker_hash_op+0x3df8>
  41a48c:	add	x1, x1, #0x155
  41a490:	mov	w2, #0xc                   	// #12
  41a494:	mov	x0, x21
  41a498:	bl	40a6a0 <strncmp@plt>
  41a49c:	cbz	w0, 41ac5c <parse_token+0x2bcc>
  41a4a0:	adrp	x1, 438000 <worker_hash_op+0x3df8>
  41a4a4:	add	x1, x1, #0x162
  41a4a8:	mov	w2, #0xe                   	// #14
  41a4ac:	mov	x0, x21
  41a4b0:	bl	40a6a0 <strncmp@plt>
  41a4b4:	cbz	w0, 41ac8c <parse_token+0x2bfc>
  41a4b8:	ldr	x9, [x26]
  41a4bc:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  41a4c0:	add	x8, x8, #0xbc0
  41a4c4:	cbz	x9, 41a4dc <parse_token+0x244c>
  41a4c8:	ldp	x10, x9, [x9]
  41a4cc:	cmp	x10, #0x0
  41a4d0:	csel	x8, x8, x10, eq  // eq = none
  41a4d4:	cbz	x9, 41a4dc <parse_token+0x244c>
  41a4d8:	ldr	w9, [x9, #8]
  41a4dc:	str	x8, [sp, #16]
  41a4e0:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41a4e4:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41a4e8:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  41a4ec:	add	x8, x8, #0x19e
  41a4f0:	add	x2, x2, #0x8da
  41a4f4:	add	x4, x4, #0xc3e
  41a4f8:	mov	w0, #0x4                   	// #4
  41a4fc:	mov	w3, #0x344                 	// #836
  41a500:	str	x21, [sp, #32]
  41a504:	str	w9, [sp, #24]
  41a508:	str	x8, [sp, #8]
  41a50c:	b	41ac3c <parse_token+0x2bac>
  41a510:	mov	x0, x21
  41a514:	bl	420798 <udev_builtin_lookup>
  41a518:	tbnz	w0, #31, 41a76c <parse_token+0x26dc>
  41a51c:	mov	w8, w0
  41a520:	add	x4, x8, #0x1
  41a524:	mov	w1, #0x15                  	// #21
  41a528:	b	419824 <parse_token+0x1794>
  41a52c:	cbz	x23, 41a874 <parse_token+0x27e4>
  41a530:	ldr	x8, [x27]
  41a534:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  41a538:	ldr	w9, [x20, #8]
  41a53c:	add	x10, x10, #0xbc0
  41a540:	cmp	x8, #0x0
  41a544:	csel	x8, x10, x8, eq  // eq = none
  41a548:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  41a54c:	str	x8, [sp, #16]
  41a550:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  41a554:	add	x10, x10, #0xc63
  41a558:	add	x8, x8, #0xc4a
  41a55c:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41a560:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  41a564:	mov	w1, #0x16                  	// #22
  41a568:	str	w9, [sp, #24]
  41a56c:	add	x2, x2, #0x8da
  41a570:	add	x4, x4, #0xc3e
  41a574:	stp	x10, x19, [sp, #32]
  41a578:	str	x8, [sp, #8]
  41a57c:	mov	w0, #0x3                   	// #3
  41a580:	movk	w1, #0x4000, lsl #16
  41a584:	mov	w3, #0x3af                 	// #943
  41a588:	b	41abc0 <parse_token+0x2b30>
  41a58c:	mov	w1, #0x1a                  	// #26
  41a590:	b	41ab00 <parse_token+0x2a70>
  41a594:	ldr	x8, [x27]
  41a598:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  41a59c:	ldr	w9, [x20, #8]
  41a5a0:	add	x10, x10, #0xbc0
  41a5a4:	cmp	x8, #0x0
  41a5a8:	csel	x8, x10, x8, eq  // eq = none
  41a5ac:	str	x8, [sp, #16]
  41a5b0:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41a5b4:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41a5b8:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  41a5bc:	add	x8, x8, #0x1d8
  41a5c0:	add	x2, x2, #0x8da
  41a5c4:	add	x4, x4, #0xc3e
  41a5c8:	mov	w0, #0x4                   	// #4
  41a5cc:	mov	w3, #0x34f                 	// #847
  41a5d0:	mov	w1, wzr
  41a5d4:	mov	x5, xzr
  41a5d8:	mov	x6, xzr
  41a5dc:	mov	x7, xzr
  41a5e0:	str	x19, [sp, #32]
  41a5e4:	str	w9, [sp, #24]
  41a5e8:	stp	xzr, x8, [sp]
  41a5ec:	mov	w22, #0x4                   	// #4
  41a5f0:	bl	40a730 <log_object_internal@plt>
  41a5f4:	add	x1, sp, #0x4c
  41a5f8:	mov	x0, x21
  41a5fc:	bl	40b210 <parse_uid@plt>
  41a600:	tbnz	w0, #31, 41a68c <parse_token+0x25fc>
  41a604:	ldr	w8, [sp, #76]
  41a608:	mov	w1, #0x22                  	// #34
  41a60c:	add	x4, x8, #0x1
  41a610:	b	41a9a8 <parse_token+0x2918>
  41a614:	mov	w1, #0x16                  	// #22
  41a618:	b	418a60 <parse_token+0x9d0>
  41a61c:	mov	w1, #0x14                  	// #20
  41a620:	b	418a60 <parse_token+0x9d0>
  41a624:	cbz	x23, 41a980 <parse_token+0x28f0>
  41a628:	ldr	x8, [x27]
  41a62c:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  41a630:	ldr	w9, [x20, #8]
  41a634:	add	x10, x10, #0xbc0
  41a638:	cmp	x8, #0x0
  41a63c:	csel	x8, x10, x8, eq  // eq = none
  41a640:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  41a644:	str	x8, [sp, #16]
  41a648:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  41a64c:	add	x10, x10, #0xc63
  41a650:	add	x8, x8, #0xc4a
  41a654:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41a658:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  41a65c:	mov	w1, #0x16                  	// #22
  41a660:	str	w9, [sp, #24]
  41a664:	add	x2, x2, #0x8da
  41a668:	add	x4, x4, #0xc3e
  41a66c:	stp	x10, x19, [sp, #32]
  41a670:	str	x8, [sp, #8]
  41a674:	mov	w0, #0x3                   	// #3
  41a678:	movk	w1, #0x4000, lsl #16
  41a67c:	mov	w3, #0x3bc                 	// #956
  41a680:	b	41abc0 <parse_token+0x2b30>
  41a684:	mov	w1, #0x1b                  	// #27
  41a688:	b	41ab00 <parse_token+0x2a70>
  41a68c:	ldr	w8, [x24, #8]
  41a690:	cbz	w8, 41aa48 <parse_token+0x29b8>
  41a694:	cmp	w8, #0x2
  41a698:	b.ne	41a6c8 <parse_token+0x2638>  // b.any
  41a69c:	ldrb	w8, [x21]
  41a6a0:	cmp	w8, #0x5b
  41a6a4:	b.eq	41a6c8 <parse_token+0x2638>  // b.none
  41a6a8:	mov	w1, #0x25                  	// #37
  41a6ac:	mov	x0, x21
  41a6b0:	bl	40a7d0 <strchr@plt>
  41a6b4:	cbnz	x0, 41a6c8 <parse_token+0x2638>
  41a6b8:	mov	w1, #0x24                  	// #36
  41a6bc:	mov	x0, x21
  41a6c0:	bl	40a7d0 <strchr@plt>
  41a6c4:	cbz	x0, 41ad68 <parse_token+0x2cd8>
  41a6c8:	mov	w3, #0x1                   	// #1
  41a6cc:	mov	x0, x24
  41a6d0:	mov	x1, x19
  41a6d4:	mov	x2, x21
  41a6d8:	bl	41b4b0 <check_value_format_and_warn>
  41a6dc:	mov	w1, #0x1f                  	// #31
  41a6e0:	b	418a60 <parse_token+0x9d0>
  41a6e4:	ldr	x8, [x27]
  41a6e8:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  41a6ec:	ldr	w9, [x20, #8]
  41a6f0:	add	x10, x10, #0xbc0
  41a6f4:	cmp	x8, #0x0
  41a6f8:	csel	x8, x10, x8, eq  // eq = none
  41a6fc:	str	x8, [sp, #16]
  41a700:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41a704:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41a708:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  41a70c:	add	x8, x8, #0x1d8
  41a710:	add	x2, x2, #0x8da
  41a714:	add	x4, x4, #0xc3e
  41a718:	mov	w0, #0x4                   	// #4
  41a71c:	mov	w3, #0x36b                 	// #875
  41a720:	mov	w1, wzr
  41a724:	mov	x5, xzr
  41a728:	mov	x6, xzr
  41a72c:	mov	x7, xzr
  41a730:	str	x19, [sp, #32]
  41a734:	str	w9, [sp, #24]
  41a738:	stp	xzr, x8, [sp]
  41a73c:	mov	w22, #0x4                   	// #4
  41a740:	bl	40a730 <log_object_internal@plt>
  41a744:	add	x1, sp, #0x4c
  41a748:	mov	x0, x21
  41a74c:	bl	40b210 <parse_uid@plt>
  41a750:	tbnz	w0, #31, 41a898 <parse_token+0x2808>
  41a754:	ldr	w8, [sp, #76]
  41a758:	mov	w1, #0x23                  	// #35
  41a75c:	add	x4, x8, #0x1
  41a760:	b	41a9a8 <parse_token+0x2918>
  41a764:	mov	w1, #0x17                  	// #23
  41a768:	b	418a60 <parse_token+0x9d0>
  41a76c:	ldr	x9, [x26]
  41a770:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  41a774:	add	x8, x8, #0xbc0
  41a778:	cbz	x9, 41a790 <parse_token+0x2700>
  41a77c:	ldp	x10, x9, [x9]
  41a780:	cmp	x10, #0x0
  41a784:	csel	x8, x8, x10, eq  // eq = none
  41a788:	cbz	x9, 41a790 <parse_token+0x2700>
  41a78c:	ldr	w9, [x9, #8]
  41a790:	str	x8, [sp, #16]
  41a794:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41a798:	add	x8, x8, #0x9d
  41a79c:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41a7a0:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  41a7a4:	mov	w1, #0x16                  	// #22
  41a7a8:	str	x21, [sp, #32]
  41a7ac:	str	w9, [sp, #24]
  41a7b0:	add	x2, x2, #0x8da
  41a7b4:	add	x4, x4, #0xc3e
  41a7b8:	str	x8, [sp, #8]
  41a7bc:	mov	w0, #0x3                   	// #3
  41a7c0:	movk	w1, #0x4000, lsl #16
  41a7c4:	mov	w3, #0x313                 	// #787
  41a7c8:	b	41abc0 <parse_token+0x2b30>
  41a7cc:	mov	w3, #0x1                   	// #1
  41a7d0:	mov	x0, x24
  41a7d4:	mov	x1, x19
  41a7d8:	mov	x2, x21
  41a7dc:	bl	41b4b0 <check_value_format_and_warn>
  41a7e0:	cbz	x23, 41a978 <parse_token+0x28e8>
  41a7e4:	adrp	x1, 438000 <worker_hash_op+0x3df8>
  41a7e8:	add	x1, x1, #0x50
  41a7ec:	mov	x0, x23
  41a7f0:	bl	40a930 <strcmp@plt>
  41a7f4:	cbz	w0, 41a978 <parse_token+0x28e8>
  41a7f8:	adrp	x1, 438000 <worker_hash_op+0x3df8>
  41a7fc:	add	x1, x1, #0x95
  41a800:	mov	x0, x23
  41a804:	bl	40a930 <strcmp@plt>
  41a808:	cbz	w0, 41ac70 <parse_token+0x2be0>
  41a80c:	ldr	x9, [x26]
  41a810:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  41a814:	add	x8, x8, #0xbc0
  41a818:	cbz	x9, 41a830 <parse_token+0x27a0>
  41a81c:	ldp	x10, x9, [x9]
  41a820:	cmp	x10, #0x0
  41a824:	csel	x8, x8, x10, eq  // eq = none
  41a828:	cbz	x9, 41a830 <parse_token+0x27a0>
  41a82c:	ldr	w9, [x9, #8]
  41a830:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  41a834:	str	x8, [sp, #16]
  41a838:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  41a83c:	add	x10, x10, #0xc63
  41a840:	add	x8, x8, #0xc4a
  41a844:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41a848:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  41a84c:	mov	w1, #0x16                  	// #22
  41a850:	str	w9, [sp, #24]
  41a854:	add	x2, x2, #0x8da
  41a858:	add	x4, x4, #0xc3e
  41a85c:	stp	x10, x19, [sp, #32]
  41a860:	str	x8, [sp, #8]
  41a864:	mov	w0, #0x3                   	// #3
  41a868:	movk	w1, #0x4000, lsl #16
  41a86c:	mov	w3, #0x3ac                 	// #940
  41a870:	b	41abc0 <parse_token+0x2b30>
  41a874:	cmp	w22, #0x4
  41a878:	b.ne	41aaa0 <parse_token+0x2a10>  // b.any
  41a87c:	ldr	w8, [x20, #12]
  41a880:	tbnz	w8, #3, 41abf4 <parse_token+0x2b64>
  41a884:	orr	w8, w8, #0x8
  41a888:	str	x21, [x20, #24]
  41a88c:	b	41a994 <parse_token+0x2904>
  41a890:	mov	w1, #0x1c                  	// #28
  41a894:	b	41ab00 <parse_token+0x2a70>
  41a898:	ldr	w8, [x24, #8]
  41a89c:	cbz	w8, 41ab10 <parse_token+0x2a80>
  41a8a0:	cmp	w8, #0x2
  41a8a4:	b.ne	41a8d4 <parse_token+0x2844>  // b.any
  41a8a8:	ldrb	w8, [x21]
  41a8ac:	cmp	w8, #0x5b
  41a8b0:	b.eq	41a8d4 <parse_token+0x2844>  // b.none
  41a8b4:	mov	w1, #0x25                  	// #37
  41a8b8:	mov	x0, x21
  41a8bc:	bl	40a7d0 <strchr@plt>
  41a8c0:	cbnz	x0, 41a8d4 <parse_token+0x2844>
  41a8c4:	mov	w1, #0x24                  	// #36
  41a8c8:	mov	x0, x21
  41a8cc:	bl	40a7d0 <strchr@plt>
  41a8d0:	cbz	x0, 41adf4 <parse_token+0x2d64>
  41a8d4:	mov	w3, #0x1                   	// #1
  41a8d8:	mov	x0, x24
  41a8dc:	mov	x1, x19
  41a8e0:	mov	x2, x21
  41a8e4:	bl	41b4b0 <check_value_format_and_warn>
  41a8e8:	mov	w1, #0x20                  	// #32
  41a8ec:	b	418a60 <parse_token+0x9d0>
  41a8f0:	ldr	x8, [x27]
  41a8f4:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  41a8f8:	ldr	w9, [x20, #8]
  41a8fc:	add	x10, x10, #0xbc0
  41a900:	cmp	x8, #0x0
  41a904:	csel	x8, x10, x8, eq  // eq = none
  41a908:	str	x8, [sp, #16]
  41a90c:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41a910:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41a914:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  41a918:	add	x8, x8, #0x1d8
  41a91c:	add	x2, x2, #0x8da
  41a920:	add	x4, x4, #0xc3e
  41a924:	mov	w0, #0x4                   	// #4
  41a928:	mov	w3, #0x387                 	// #903
  41a92c:	mov	w1, wzr
  41a930:	mov	x5, xzr
  41a934:	mov	x6, xzr
  41a938:	mov	x7, xzr
  41a93c:	str	x19, [sp, #32]
  41a940:	str	w9, [sp, #24]
  41a944:	stp	xzr, x8, [sp]
  41a948:	mov	w22, #0x4                   	// #4
  41a94c:	bl	40a730 <log_object_internal@plt>
  41a950:	sub	x1, x29, #0x8
  41a954:	mov	x0, x21
  41a958:	bl	40b200 <parse_mode@plt>
  41a95c:	tbnz	w0, #31, 41a9b8 <parse_token+0x2928>
  41a960:	ldur	w8, [x29, #-8]
  41a964:	mov	w1, #0x24                  	// #36
  41a968:	add	x4, x8, #0x1
  41a96c:	b	41a9a8 <parse_token+0x2918>
  41a970:	mov	w1, #0x18                  	// #24
  41a974:	b	418a60 <parse_token+0x9d0>
  41a978:	mov	w1, #0x2e                  	// #46
  41a97c:	b	418a60 <parse_token+0x9d0>
  41a980:	cmp	w22, #0x4
  41a984:	b.ne	41ab68 <parse_token+0x2ad8>  // b.any
  41a988:	ldr	w8, [x20, #12]
  41a98c:	str	x21, [x20, #16]
  41a990:	orr	w8, w8, #0x10
  41a994:	str	w8, [x20, #12]
  41a998:	mov	w0, #0x1                   	// #1
  41a99c:	b	41abd4 <parse_token+0x2b44>
  41a9a0:	mov	w1, #0x1d                  	// #29
  41a9a4:	mov	w4, #0x1                   	// #1
  41a9a8:	mov	x0, x20
  41a9ac:	mov	w2, w22
  41a9b0:	mov	x3, xzr
  41a9b4:	b	418a70 <parse_token+0x9e0>
  41a9b8:	mov	w3, #0x1                   	// #1
  41a9bc:	mov	x0, x24
  41a9c0:	mov	x1, x19
  41a9c4:	mov	x2, x21
  41a9c8:	bl	41b4b0 <check_value_format_and_warn>
  41a9cc:	mov	w1, #0x21                  	// #33
  41a9d0:	b	418a60 <parse_token+0x9d0>
  41a9d4:	ldr	x9, [x26]
  41a9d8:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  41a9dc:	add	x8, x8, #0xbc0
  41a9e0:	cbz	x9, 41a9f8 <parse_token+0x2968>
  41a9e4:	ldp	x10, x9, [x9]
  41a9e8:	cmp	x10, #0x0
  41a9ec:	csel	x8, x8, x10, eq  // eq = none
  41a9f0:	cbz	x9, 41a9f8 <parse_token+0x2968>
  41a9f4:	ldr	w9, [x9, #8]
  41a9f8:	str	x8, [sp, #16]
  41a9fc:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41aa00:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41aa04:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  41aa08:	add	x8, x8, #0x2fa
  41aa0c:	add	x2, x2, #0x8da
  41aa10:	add	x4, x4, #0xc3e
  41aa14:	mov	w0, #0x4                   	// #4
  41aa18:	mov	w3, #0x398                 	// #920
  41aa1c:	mov	w1, wzr
  41aa20:	mov	x5, xzr
  41aa24:	mov	x6, xzr
  41aa28:	mov	x7, xzr
  41aa2c:	str	x19, [sp, #32]
  41aa30:	str	w9, [sp, #24]
  41aa34:	stp	xzr, x8, [sp]
  41aa38:	mov	w22, #0x4                   	// #4
  41aa3c:	bl	40a730 <log_object_internal@plt>
  41aa40:	mov	w1, #0x27                  	// #39
  41aa44:	b	418a60 <parse_token+0x9d0>
  41aa48:	ldr	x9, [x26]
  41aa4c:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  41aa50:	add	x8, x8, #0xbc0
  41aa54:	cbz	x9, 41aa6c <parse_token+0x29dc>
  41aa58:	ldp	x10, x9, [x9]
  41aa5c:	cmp	x10, #0x0
  41aa60:	csel	x8, x8, x10, eq  // eq = none
  41aa64:	cbz	x9, 41aa6c <parse_token+0x29dc>
  41aa68:	ldr	w9, [x9, #8]
  41aa6c:	str	x8, [sp, #16]
  41aa70:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41aa74:	add	x8, x8, #0x24d
  41aa78:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41aa7c:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  41aa80:	stp	x19, x21, [sp, #32]
  41aa84:	str	w9, [sp, #24]
  41aa88:	add	x2, x2, #0x8da
  41aa8c:	add	x4, x4, #0xc3e
  41aa90:	str	x8, [sp, #8]
  41aa94:	mov	w0, #0x7                   	// #7
  41aa98:	mov	w3, #0x360                 	// #864
  41aa9c:	b	41ac3c <parse_token+0x2bac>
  41aaa0:	ldr	x8, [x27]
  41aaa4:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  41aaa8:	ldr	w9, [x20, #8]
  41aaac:	add	x10, x10, #0xbc0
  41aab0:	cmp	x8, #0x0
  41aab4:	csel	x8, x10, x8, eq  // eq = none
  41aab8:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  41aabc:	str	x8, [sp, #16]
  41aac0:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  41aac4:	add	x10, x10, #0xc6d
  41aac8:	add	x8, x8, #0xc4a
  41aacc:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41aad0:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  41aad4:	mov	w1, #0x16                  	// #22
  41aad8:	str	w9, [sp, #24]
  41aadc:	add	x2, x2, #0x8da
  41aae0:	add	x4, x4, #0xc3e
  41aae4:	stp	x10, x19, [sp, #32]
  41aae8:	str	x8, [sp, #8]
  41aaec:	mov	w0, #0x3                   	// #3
  41aaf0:	movk	w1, #0x4000, lsl #16
  41aaf4:	mov	w3, #0x3b1                 	// #945
  41aaf8:	b	41abc0 <parse_token+0x2b30>
  41aafc:	mov	w1, #0x1d                  	// #29
  41ab00:	mov	x0, x20
  41ab04:	mov	w2, w22
  41ab08:	mov	x3, xzr
  41ab0c:	b	418a6c <parse_token+0x9dc>
  41ab10:	ldr	x9, [x26]
  41ab14:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  41ab18:	add	x8, x8, #0xbc0
  41ab1c:	cbz	x9, 41ab34 <parse_token+0x2aa4>
  41ab20:	ldp	x10, x9, [x9]
  41ab24:	cmp	x10, #0x0
  41ab28:	csel	x8, x8, x10, eq  // eq = none
  41ab2c:	cbz	x9, 41ab34 <parse_token+0x2aa4>
  41ab30:	ldr	w9, [x9, #8]
  41ab34:	str	x8, [sp, #16]
  41ab38:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41ab3c:	add	x8, x8, #0x2b5
  41ab40:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41ab44:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  41ab48:	stp	x19, x21, [sp, #32]
  41ab4c:	str	w9, [sp, #24]
  41ab50:	add	x2, x2, #0x8da
  41ab54:	add	x4, x4, #0xc3e
  41ab58:	str	x8, [sp, #8]
  41ab5c:	mov	w0, #0x7                   	// #7
  41ab60:	mov	w3, #0x37c                 	// #892
  41ab64:	b	41ac3c <parse_token+0x2bac>
  41ab68:	ldr	x8, [x27]
  41ab6c:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  41ab70:	ldr	w9, [x20, #8]
  41ab74:	add	x10, x10, #0xbc0
  41ab78:	cmp	x8, #0x0
  41ab7c:	csel	x8, x10, x8, eq  // eq = none
  41ab80:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  41ab84:	str	x8, [sp, #16]
  41ab88:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  41ab8c:	add	x10, x10, #0xc6d
  41ab90:	add	x8, x8, #0xc4a
  41ab94:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41ab98:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  41ab9c:	mov	w1, #0x16                  	// #22
  41aba0:	str	w9, [sp, #24]
  41aba4:	add	x2, x2, #0x8da
  41aba8:	add	x4, x4, #0xc3e
  41abac:	stp	x10, x19, [sp, #32]
  41abb0:	str	x8, [sp, #8]
  41abb4:	mov	w0, #0x3                   	// #3
  41abb8:	movk	w1, #0x4000, lsl #16
  41abbc:	mov	w3, #0x3be                 	// #958
  41abc0:	str	xzr, [sp]
  41abc4:	mov	x5, xzr
  41abc8:	mov	x6, xzr
  41abcc:	mov	x7, xzr
  41abd0:	bl	40a730 <log_object_internal@plt>
  41abd4:	ldp	x20, x19, [sp, #352]
  41abd8:	ldp	x22, x21, [sp, #336]
  41abdc:	ldp	x24, x23, [sp, #320]
  41abe0:	ldp	x26, x25, [sp, #304]
  41abe4:	ldp	x28, x27, [sp, #288]
  41abe8:	ldp	x29, x30, [sp, #272]
  41abec:	add	sp, sp, #0x170
  41abf0:	ret
  41abf4:	ldr	x8, [x27]
  41abf8:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  41abfc:	ldr	w9, [x20, #8]
  41ac00:	add	x10, x10, #0xbc0
  41ac04:	cmp	x8, #0x0
  41ac08:	csel	x8, x10, x8, eq  // eq = none
  41ac0c:	str	x8, [sp, #16]
  41ac10:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41ac14:	add	x8, x8, #0x37a
  41ac18:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41ac1c:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  41ac20:	str	x21, [sp, #32]
  41ac24:	str	w9, [sp, #24]
  41ac28:	add	x2, x2, #0x8da
  41ac2c:	add	x4, x4, #0xc3e
  41ac30:	str	x8, [sp, #8]
  41ac34:	mov	w0, #0x4                   	// #4
  41ac38:	mov	w3, #0x3b3                 	// #947
  41ac3c:	mov	w1, wzr
  41ac40:	mov	x5, xzr
  41ac44:	mov	x6, xzr
  41ac48:	mov	x7, xzr
  41ac4c:	str	xzr, [sp]
  41ac50:	bl	40a730 <log_object_internal@plt>
  41ac54:	mov	w0, wzr
  41ac58:	b	41abd4 <parse_token+0x2b44>
  41ac5c:	add	x3, x21, #0xc
  41ac60:	mov	w1, #0x26                  	// #38
  41ac64:	mov	x0, x20
  41ac68:	mov	w2, w22
  41ac6c:	b	418a6c <parse_token+0x9dc>
  41ac70:	mov	x0, x21
  41ac74:	bl	420798 <udev_builtin_lookup>
  41ac78:	tbnz	w0, #31, 41acac <parse_token+0x2c1c>
  41ac7c:	mov	w8, w0
  41ac80:	add	x4, x8, #0x1
  41ac84:	mov	w1, #0x2d                  	// #45
  41ac88:	b	419824 <parse_token+0x1794>
  41ac8c:	add	x19, x21, #0xe
  41ac90:	sub	x1, x29, #0x8
  41ac94:	mov	x0, x19
  41ac98:	bl	40b220 <safe_atoi@plt>
  41ac9c:	tbnz	w0, #31, 41ad0c <parse_token+0x2c7c>
  41aca0:	ldursw	x4, [x29, #-8]
  41aca4:	mov	w1, #0x1e                  	// #30
  41aca8:	b	41a9a8 <parse_token+0x2918>
  41acac:	ldr	x9, [x26]
  41acb0:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  41acb4:	add	x8, x8, #0xbc0
  41acb8:	cbz	x9, 41acd0 <parse_token+0x2c40>
  41acbc:	ldp	x10, x9, [x9]
  41acc0:	cmp	x10, #0x0
  41acc4:	csel	x8, x8, x10, eq  // eq = none
  41acc8:	cbz	x9, 41acd0 <parse_token+0x2c40>
  41accc:	ldr	w9, [x9, #8]
  41acd0:	str	x8, [sp, #16]
  41acd4:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41acd8:	add	x8, x8, #0x348
  41acdc:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41ace0:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  41ace4:	mov	w1, #0x16                  	// #22
  41ace8:	str	x21, [sp, #32]
  41acec:	str	w9, [sp, #24]
  41acf0:	add	x2, x2, #0x8da
  41acf4:	add	x4, x4, #0xc3e
  41acf8:	str	x8, [sp, #8]
  41acfc:	mov	w0, #0x3                   	// #3
  41ad00:	movk	w1, #0x4000, lsl #16
  41ad04:	mov	w3, #0x3a9                 	// #937
  41ad08:	b	41abc0 <parse_token+0x2b30>
  41ad0c:	ldr	x9, [x26]
  41ad10:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  41ad14:	mov	w1, w0
  41ad18:	add	x8, x8, #0xbc0
  41ad1c:	cbz	x9, 41ad34 <parse_token+0x2ca4>
  41ad20:	ldp	x10, x9, [x9]
  41ad24:	cmp	x10, #0x0
  41ad28:	csel	x8, x8, x10, eq  // eq = none
  41ad2c:	cbz	x9, 41ad34 <parse_token+0x2ca4>
  41ad30:	ldr	w9, [x9, #8]
  41ad34:	str	x8, [sp, #16]
  41ad38:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41ad3c:	add	x8, x8, #0x171
  41ad40:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41ad44:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  41ad48:	str	x19, [sp, #32]
  41ad4c:	str	w9, [sp, #24]
  41ad50:	add	x2, x2, #0x8da
  41ad54:	add	x4, x4, #0xc3e
  41ad58:	str	x8, [sp, #8]
  41ad5c:	mov	w0, #0x3                   	// #3
  41ad60:	mov	w3, #0x341                 	// #833
  41ad64:	b	41abc0 <parse_token+0x2b30>
  41ad68:	str	x21, [x25, #120]
  41ad6c:	mov	x27, x24
  41ad70:	ldr	x0, [x27, #16]!
  41ad74:	mov	x1, x21
  41ad78:	bl	40a710 <internal_hashmap_get@plt>
  41ad7c:	cbz	x0, 41ae88 <parse_token+0x2df8>
  41ad80:	mov	x23, xzr
  41ad84:	mov	w19, wzr
  41ad88:	sub	w8, w0, #0x1
  41ad8c:	str	w8, [sp, #76]
  41ad90:	mov	x0, x23
  41ad94:	bl	40a320 <free@plt>
  41ad98:	tbz	w19, #31, 41a604 <parse_token+0x2574>
  41ad9c:	ldr	x9, [x26]
  41ada0:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  41ada4:	add	x8, x8, #0xbc0
  41ada8:	cbz	x9, 41adc0 <parse_token+0x2d30>
  41adac:	ldp	x10, x9, [x9]
  41adb0:	cmp	x10, #0x0
  41adb4:	csel	x8, x8, x10, eq  // eq = none
  41adb8:	cbz	x9, 41adc0 <parse_token+0x2d30>
  41adbc:	ldr	w9, [x9, #8]
  41adc0:	str	x8, [sp, #16]
  41adc4:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41adc8:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41adcc:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  41add0:	add	x8, x8, #0x222
  41add4:	add	x2, x2, #0x8da
  41add8:	add	x4, x4, #0xc3e
  41addc:	mov	w0, #0x3                   	// #3
  41ade0:	mov	w3, #0x359                 	// #857
  41ade4:	str	x21, [sp, #32]
  41ade8:	str	w9, [sp, #24]
  41adec:	str	x8, [sp, #8]
  41adf0:	b	41ae7c <parse_token+0x2dec>
  41adf4:	str	x21, [x25, #120]
  41adf8:	mov	x27, x24
  41adfc:	ldr	x0, [x27, #24]!
  41ae00:	mov	x1, x21
  41ae04:	bl	40a710 <internal_hashmap_get@plt>
  41ae08:	cbz	x0, 41aef8 <parse_token+0x2e68>
  41ae0c:	mov	x23, xzr
  41ae10:	mov	w19, wzr
  41ae14:	sub	w8, w0, #0x1
  41ae18:	str	w8, [sp, #76]
  41ae1c:	mov	x0, x23
  41ae20:	bl	40a320 <free@plt>
  41ae24:	tbz	w19, #31, 41a754 <parse_token+0x26c4>
  41ae28:	ldr	x9, [x26]
  41ae2c:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  41ae30:	add	x8, x8, #0xbc0
  41ae34:	cbz	x9, 41ae4c <parse_token+0x2dbc>
  41ae38:	ldp	x10, x9, [x9]
  41ae3c:	cmp	x10, #0x0
  41ae40:	csel	x8, x8, x10, eq  // eq = none
  41ae44:	cbz	x9, 41ae4c <parse_token+0x2dbc>
  41ae48:	ldr	w9, [x9, #8]
  41ae4c:	str	x8, [sp, #16]
  41ae50:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41ae54:	add	x8, x8, #0x289
  41ae58:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41ae5c:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  41ae60:	str	x21, [sp, #32]
  41ae64:	str	w9, [sp, #24]
  41ae68:	add	x2, x2, #0x8da
  41ae6c:	add	x4, x4, #0xc3e
  41ae70:	str	x8, [sp, #8]
  41ae74:	mov	w0, #0x3                   	// #3
  41ae78:	mov	w3, #0x375                 	// #885
  41ae7c:	str	xzr, [sp]
  41ae80:	mov	w1, w19
  41ae84:	b	41abc4 <parse_token+0x2b34>
  41ae88:	sub	x0, x29, #0x8
  41ae8c:	sub	x1, x29, #0x10
  41ae90:	mov	w5, #0x2                   	// #2
  41ae94:	mov	x2, xzr
  41ae98:	mov	x3, xzr
  41ae9c:	mov	x4, xzr
  41aea0:	bl	40b230 <get_user_creds@plt>
  41aea4:	ldr	x4, [x25, #120]
  41aea8:	tbnz	w0, #31, 41af5c <parse_token+0x2ecc>
  41aeac:	mov	x0, x4
  41aeb0:	bl	40a810 <strdup@plt>
  41aeb4:	mov	x23, x0
  41aeb8:	cbz	x0, 41af84 <parse_token+0x2ef4>
  41aebc:	adrp	x1, 46f000 <_DYNAMIC+0x208>
  41aec0:	ldr	x1, [x1, #128]
  41aec4:	mov	x0, x27
  41aec8:	bl	40a800 <internal_hashmap_ensure_allocated@plt>
  41aecc:	tbnz	w0, #31, 41af8c <parse_token+0x2efc>
  41aed0:	ldur	w8, [x29, #-16]
  41aed4:	ldr	x0, [x27]
  41aed8:	mov	x1, x23
  41aedc:	add	x2, x8, #0x1
  41aee0:	bl	40a820 <hashmap_put@plt>
  41aee4:	tbnz	w0, #31, 41af8c <parse_token+0x2efc>
  41aee8:	ldur	w8, [x29, #-16]
  41aeec:	mov	x23, xzr
  41aef0:	mov	w19, wzr
  41aef4:	b	41ad8c <parse_token+0x2cfc>
  41aef8:	sub	x0, x29, #0x8
  41aefc:	sub	x1, x29, #0x10
  41af00:	mov	w2, #0x2                   	// #2
  41af04:	bl	40b240 <get_group_creds@plt>
  41af08:	ldr	x4, [x25, #120]
  41af0c:	tbnz	w0, #31, 41af94 <parse_token+0x2f04>
  41af10:	mov	x0, x4
  41af14:	bl	40a810 <strdup@plt>
  41af18:	mov	x23, x0
  41af1c:	cbz	x0, 41afbc <parse_token+0x2f2c>
  41af20:	adrp	x1, 46f000 <_DYNAMIC+0x208>
  41af24:	ldr	x1, [x1, #128]
  41af28:	mov	x0, x27
  41af2c:	bl	40a800 <internal_hashmap_ensure_allocated@plt>
  41af30:	tbnz	w0, #31, 41afc4 <parse_token+0x2f34>
  41af34:	ldur	w8, [x29, #-16]
  41af38:	ldr	x0, [x27]
  41af3c:	mov	x1, x23
  41af40:	add	x2, x8, #0x1
  41af44:	bl	40a820 <hashmap_put@plt>
  41af48:	tbnz	w0, #31, 41afc4 <parse_token+0x2f34>
  41af4c:	ldur	w8, [x29, #-16]
  41af50:	mov	x23, xzr
  41af54:	mov	w19, wzr
  41af58:	b	41ae18 <parse_token+0x2d88>
  41af5c:	adrp	x3, 438000 <worker_hash_op+0x3df8>
  41af60:	mov	w2, w0
  41af64:	add	x3, x3, #0x569
  41af68:	mov	x0, xzr
  41af6c:	mov	x1, x24
  41af70:	bl	41b790 <log_unknown_owner>
  41af74:	mov	x23, xzr
  41af78:	mov	w19, wzr
  41af7c:	mov	w8, #0xffffffff            	// #-1
  41af80:	b	41ad8c <parse_token+0x2cfc>
  41af84:	mov	w19, #0xfffffff4            	// #-12
  41af88:	b	41ad90 <parse_token+0x2d00>
  41af8c:	mov	w19, w0
  41af90:	b	41ad90 <parse_token+0x2d00>
  41af94:	adrp	x3, 438000 <worker_hash_op+0x3df8>
  41af98:	mov	w2, w0
  41af9c:	add	x3, x3, #0x5ce
  41afa0:	mov	x0, xzr
  41afa4:	mov	x1, x24
  41afa8:	bl	41b790 <log_unknown_owner>
  41afac:	mov	x23, xzr
  41afb0:	mov	w19, wzr
  41afb4:	mov	w8, #0xffffffff            	// #-1
  41afb8:	b	41ae18 <parse_token+0x2d88>
  41afbc:	mov	w19, #0xfffffff4            	// #-12
  41afc0:	b	41ae1c <parse_token+0x2d8c>
  41afc4:	mov	w19, w0
  41afc8:	b	41ae1c <parse_token+0x2d8c>
  41afcc:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  41afd0:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41afd4:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  41afd8:	add	x1, x1, #0x856
  41afdc:	add	x2, x2, #0x8da
  41afe0:	add	x4, x4, #0xbc4
  41afe4:	mov	w0, #0x1                   	// #1
  41afe8:	mov	w3, #0x21c                 	// #540
  41afec:	bl	40a630 <log_assert_failed_realm@plt>
  41aff0:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  41aff4:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41aff8:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  41affc:	add	x1, x1, #0xb10
  41b000:	add	x2, x2, #0x8da
  41b004:	add	x4, x4, #0xbc4
  41b008:	mov	w0, #0x1                   	// #1
  41b00c:	mov	w3, #0x21d                 	// #541
  41b010:	bl	40a630 <log_assert_failed_realm@plt>
  41b014:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  41b018:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41b01c:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  41b020:	add	x1, x1, #0xc15
  41b024:	add	x2, x2, #0x8da
  41b028:	add	x4, x4, #0xbc4
  41b02c:	mov	w0, #0x1                   	// #1
  41b030:	mov	w3, #0x21e                 	// #542
  41b034:	bl	40a630 <log_assert_failed_realm@plt>
  41b038:	adrp	x1, 434000 <__libc_csu_init+0x60>
  41b03c:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41b040:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  41b044:	add	x1, x1, #0x88f
  41b048:	add	x2, x2, #0x8da
  41b04c:	add	x4, x4, #0xbc4
  41b050:	mov	w0, #0x1                   	// #1
  41b054:	mov	w3, #0x21f                 	// #543
  41b058:	bl	40a630 <log_assert_failed_realm@plt>
  41b05c:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  41b060:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41b064:	adrp	x4, 437000 <worker_hash_op+0x2df8>
  41b068:	add	x1, x1, #0x8db
  41b06c:	add	x2, x2, #0x8da
  41b070:	add	x4, x4, #0xbc4
  41b074:	mov	w0, #0x1                   	// #1
  41b078:	mov	w3, #0x220                 	// #544
  41b07c:	bl	40a630 <log_assert_failed_realm@plt>

000000000041b080 <rule_line_add_token>:
  41b080:	sub	sp, sp, #0x70
  41b084:	stp	x29, x30, [sp, #32]
  41b088:	stp	x26, x25, [sp, #48]
  41b08c:	stp	x24, x23, [sp, #64]
  41b090:	stp	x22, x21, [sp, #80]
  41b094:	stp	x20, x19, [sp, #96]
  41b098:	add	x29, sp, #0x20
  41b09c:	cbz	x0, 41b3d8 <rule_line_add_token+0x358>
  41b0a0:	mov	w21, w2
  41b0a4:	cmp	w2, #0x6
  41b0a8:	b.cs	41b3fc <rule_line_add_token+0x37c>  // b.hs, b.nlast
  41b0ac:	mov	x20, x4
  41b0b0:	mov	x22, x3
  41b0b4:	mov	w23, w1
  41b0b8:	mov	x19, x0
  41b0bc:	cmp	w1, #0x19
  41b0c0:	b.gt	41b100 <rule_line_add_token+0x80>
  41b0c4:	cbz	x22, 41b468 <rule_line_add_token+0x3e8>
  41b0c8:	cmp	w21, #0x2
  41b0cc:	b.cs	41b48c <rule_line_add_token+0x40c>  // b.hs, b.nlast
  41b0d0:	cmp	w23, #0x8
  41b0d4:	b.ne	41b108 <rule_line_add_token+0x88>  // b.any
  41b0d8:	adrp	x8, 457000 <__FRAME_END__+0x149b8>
  41b0dc:	add	x8, x8, #0x230
  41b0e0:	ldp	q0, q1, [x8]
  41b0e4:	mov	x0, sp
  41b0e8:	mov	x1, x22
  41b0ec:	stp	q0, q1, [sp]
  41b0f0:	bl	40b1e0 <strv_find@plt>
  41b0f4:	cbz	x0, 41b108 <rule_line_add_token+0x88>
  41b0f8:	mov	w25, #0x5                   	// #5
  41b0fc:	b	41b178 <rule_line_add_token+0xf8>
  41b100:	mov	w25, #0xffffffff            	// #-1
  41b104:	b	41b1e8 <rule_line_add_token+0x168>
  41b108:	ldrb	w8, [x22]
  41b10c:	cbz	w8, 41b14c <rule_line_add_token+0xcc>
  41b110:	adrp	x1, 438000 <worker_hash_op+0x3df8>
  41b114:	add	x1, x1, #0x476
  41b118:	mov	x0, x22
  41b11c:	bl	40a930 <strcmp@plt>
  41b120:	cbz	w0, 41b15c <rule_line_add_token+0xdc>
  41b124:	adrp	x1, 438000 <worker_hash_op+0x3df8>
  41b128:	add	x1, x1, #0x47e
  41b12c:	mov	x0, x22
  41b130:	bl	40b250 <strpbrk@plt>
  41b134:	cmp	x0, #0x0
  41b138:	mov	w8, #0x3                   	// #3
  41b13c:	csinc	w25, w8, wzr, ne  // ne = any
  41b140:	cmp	w23, #0x11
  41b144:	b.ge	41b170 <rule_line_add_token+0xf0>  // b.tcont
  41b148:	b	41b178 <rule_line_add_token+0xf8>
  41b14c:	mov	w25, wzr
  41b150:	cmp	w23, #0x11
  41b154:	b.ge	41b170 <rule_line_add_token+0xf0>  // b.tcont
  41b158:	b	41b178 <rule_line_add_token+0xf8>
  41b15c:	cmp	w21, #0x0
  41b160:	mov	w25, wzr
  41b164:	cset	w21, eq  // eq = none
  41b168:	cmp	w23, #0x11
  41b16c:	b.lt	41b178 <rule_line_add_token+0xf8>  // b.tstop
  41b170:	cmp	w23, #0x19
  41b174:	b.ne	41b1e8 <rule_line_add_token+0x168>  // b.any
  41b178:	mov	w8, wzr
  41b17c:	mov	w12, #0x1                   	// #1
  41b180:	mov	x9, x22
  41b184:	mov	x10, x22
  41b188:	b	41b19c <rule_line_add_token+0x11c>
  41b18c:	mov	w13, wzr
  41b190:	strb	w13, [x9], #1
  41b194:	add	x10, x10, #0x1
  41b198:	mov	w12, w11
  41b19c:	ldrb	w13, [x10]
  41b1a0:	cmp	w13, #0x7c
  41b1a4:	b.eq	41b1b4 <rule_line_add_token+0x134>  // b.none
  41b1a8:	cbz	w13, 41b1c4 <rule_line_add_token+0x144>
  41b1ac:	mov	w11, wzr
  41b1b0:	b	41b190 <rule_line_add_token+0x110>
  41b1b4:	mov	w11, #0x1                   	// #1
  41b1b8:	tbz	w12, #0, 41b18c <rule_line_add_token+0x10c>
  41b1bc:	mov	w8, #0x1                   	// #1
  41b1c0:	b	41b194 <rule_line_add_token+0x114>
  41b1c4:	orr	w8, w8, w12
  41b1c8:	strb	wzr, [x9]
  41b1cc:	tbz	w8, #0, 41b1e8 <rule_line_add_token+0x168>
  41b1d0:	cmp	w25, #0x3
  41b1d4:	mov	w8, #0x4                   	// #4
  41b1d8:	csel	w8, w8, w25, eq  // eq = none
  41b1dc:	cmp	w8, #0x1
  41b1e0:	mov	w9, #0x2                   	// #2
  41b1e4:	csel	w25, w9, w8, eq  // eq = none
  41b1e8:	cmp	w23, #0xf
  41b1ec:	b.eq	41b1f8 <rule_line_add_token+0x178>  // b.none
  41b1f0:	cmp	w23, #0xa
  41b1f4:	b.ne	41b274 <rule_line_add_token+0x1f4>  // b.any
  41b1f8:	cbz	x22, 41b420 <rule_line_add_token+0x3a0>
  41b1fc:	cbz	x20, 41b444 <rule_line_add_token+0x3c4>
  41b200:	mov	x0, x22
  41b204:	bl	40aa40 <strlen@plt>
  41b208:	mov	x24, x0
  41b20c:	cbz	x0, 41b230 <rule_line_add_token+0x1b0>
  41b210:	bl	40b260 <__ctype_b_loc@plt>
  41b214:	add	x9, x24, x22
  41b218:	ldr	x8, [x0]
  41b21c:	ldurb	w9, [x9, #-1]
  41b220:	ldrh	w8, [x8, x9, lsl #1]
  41b224:	and	w8, w8, #0x2000
  41b228:	lsl	w8, w8, #18
  41b22c:	eor	w24, w8, #0x80000000
  41b230:	ldrb	w8, [x20]
  41b234:	cmp	w8, #0x5b
  41b238:	b.ne	41b250 <rule_line_add_token+0x1d0>  // b.any
  41b23c:	mov	w26, #0x2000000             	// #33554432
  41b240:	mov	w0, #0x28                  	// #40
  41b244:	bl	40a490 <malloc@plt>
  41b248:	cbnz	x0, 41b288 <rule_line_add_token+0x208>
  41b24c:	b	41b35c <rule_line_add_token+0x2dc>
  41b250:	mov	w1, #0x25                  	// #37
  41b254:	mov	x0, x20
  41b258:	bl	40a7d0 <strchr@plt>
  41b25c:	cbz	x0, 41b338 <rule_line_add_token+0x2b8>
  41b260:	mov	w26, #0x1000000             	// #16777216
  41b264:	mov	w0, #0x28                  	// #40
  41b268:	bl	40a490 <malloc@plt>
  41b26c:	cbnz	x0, 41b288 <rule_line_add_token+0x208>
  41b270:	b	41b35c <rule_line_add_token+0x2dc>
  41b274:	mov	w24, wzr
  41b278:	mov	w26, #0x7f000000            	// #2130706432
  41b27c:	mov	w0, #0x28                  	// #40
  41b280:	bl	40a490 <malloc@plt>
  41b284:	cbz	x0, 41b35c <rule_line_add_token+0x2dc>
  41b288:	and	w8, w23, #0xff
  41b28c:	bfi	w8, w25, #16, #8
  41b290:	bfi	w8, w21, #8, #8
  41b294:	orr	w8, w8, w24
  41b298:	mov	x9, x0
  41b29c:	orr	w8, w8, w26
  41b2a0:	stp	x22, x20, [x0, #8]
  41b2a4:	str	w8, [x0]
  41b2a8:	str	xzr, [x9, #24]!
  41b2ac:	str	xzr, [x0, #32]
  41b2b0:	ldr	x8, [x19, #48]
  41b2b4:	cbz	x8, 41b2c8 <rule_line_add_token+0x248>
  41b2b8:	mov	x9, x8
  41b2bc:	ldr	x8, [x8, #24]
  41b2c0:	cbnz	x8, 41b2b8 <rule_line_add_token+0x238>
  41b2c4:	b	41b2e0 <rule_line_add_token+0x260>
  41b2c8:	mov	x8, x19
  41b2cc:	ldr	x10, [x8, #56]!
  41b2d0:	cbz	x10, 41b37c <rule_line_add_token+0x2fc>
  41b2d4:	mov	x9, x10
  41b2d8:	ldr	x10, [x10, #24]
  41b2dc:	cbnz	x10, 41b2d4 <rule_line_add_token+0x254>
  41b2e0:	add	x8, x9, #0x18
  41b2e4:	stp	xzr, x9, [x0, #24]
  41b2e8:	str	x0, [x8]
  41b2ec:	str	x0, [x19, #48]
  41b2f0:	ldr	w8, [x0]
  41b2f4:	mov	w9, #0x29000000            	// #687865856
  41b2f8:	lsl	w8, w8, #24
  41b2fc:	cmp	w8, w9
  41b300:	b.ne	41b314 <rule_line_add_token+0x294>  // b.any
  41b304:	ldr	w8, [x19, #12]
  41b308:	mov	w0, wzr
  41b30c:	orr	w8, w8, #0x1
  41b310:	b	41b330 <rule_line_add_token+0x2b0>
  41b314:	asr	w9, w8, #24
  41b318:	sub	w10, w9, #0x1f
  41b31c:	cmp	w10, #0x6
  41b320:	b.cs	41b384 <rule_line_add_token+0x304>  // b.hs, b.nlast
  41b324:	ldr	w8, [x19, #12]
  41b328:	mov	w0, wzr
  41b32c:	orr	w8, w8, #0x2
  41b330:	str	w8, [x19, #12]
  41b334:	b	41b360 <rule_line_add_token+0x2e0>
  41b338:	mov	w1, #0x24                  	// #36
  41b33c:	mov	x0, x20
  41b340:	bl	40a7d0 <strchr@plt>
  41b344:	cmp	x0, #0x0
  41b348:	cset	w8, ne  // ne = any
  41b34c:	lsl	w26, w8, #24
  41b350:	mov	w0, #0x28                  	// #40
  41b354:	bl	40a490 <malloc@plt>
  41b358:	cbnz	x0, 41b288 <rule_line_add_token+0x208>
  41b35c:	mov	w0, #0xfffffff4            	// #-12
  41b360:	ldp	x20, x19, [sp, #96]
  41b364:	ldp	x22, x21, [sp, #80]
  41b368:	ldp	x24, x23, [sp, #64]
  41b36c:	ldp	x26, x25, [sp, #48]
  41b370:	ldp	x29, x30, [sp, #32]
  41b374:	add	sp, sp, #0x70
  41b378:	ret
  41b37c:	stp	xzr, xzr, [x9]
  41b380:	b	41b2e8 <rule_line_add_token+0x268>
  41b384:	cmp	w9, #0x2a
  41b388:	b.eq	41b324 <rule_line_add_token+0x2a4>  // b.none
  41b38c:	mov	w10, #0x26000000            	// #637534208
  41b390:	cmp	w8, w10
  41b394:	b.ne	41b3a8 <rule_line_add_token+0x328>  // b.any
  41b398:	ldr	w8, [x19, #12]
  41b39c:	mov	w0, wzr
  41b3a0:	orr	w8, w8, #0x4
  41b3a4:	b	41b330 <rule_line_add_token+0x2b0>
  41b3a8:	mov	w10, #0x19000000            	// #419430400
  41b3ac:	cmp	w8, w10
  41b3b0:	b.gt	41b3c8 <rule_line_add_token+0x348>
  41b3b4:	sub	w8, w9, #0x12
  41b3b8:	cmp	w8, #0x6
  41b3bc:	b.ls	41b3c8 <rule_line_add_token+0x348>  // b.plast
  41b3c0:	mov	w0, wzr
  41b3c4:	b	41b360 <rule_line_add_token+0x2e0>
  41b3c8:	ldr	w8, [x19, #12]
  41b3cc:	mov	w0, wzr
  41b3d0:	orr	w8, w8, #0x20
  41b3d4:	b	41b330 <rule_line_add_token+0x2b0>
  41b3d8:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  41b3dc:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41b3e0:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41b3e4:	add	x1, x1, #0xa6d
  41b3e8:	add	x2, x2, #0x8da
  41b3ec:	add	x4, x4, #0x3cd
  41b3f0:	mov	w0, #0x1                   	// #1
  41b3f4:	mov	w3, #0x1a0                 	// #416
  41b3f8:	bl	40a630 <log_assert_failed_realm@plt>
  41b3fc:	adrp	x1, 438000 <worker_hash_op+0x3df8>
  41b400:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41b404:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41b408:	add	x1, x1, #0x42e
  41b40c:	add	x2, x2, #0x8da
  41b410:	add	x4, x4, #0x3cd
  41b414:	mov	w0, #0x1                   	// #1
  41b418:	mov	w3, #0x1a2                 	// #418
  41b41c:	bl	40a630 <log_assert_failed_realm@plt>
  41b420:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  41b424:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41b428:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41b42c:	add	x1, x1, #0x8db
  41b430:	add	x2, x2, #0x8da
  41b434:	add	x4, x4, #0x3cd
  41b438:	mov	w0, #0x1                   	// #1
  41b43c:	mov	w3, #0x1d4                 	// #468
  41b440:	bl	40a630 <log_assert_failed_realm@plt>
  41b444:	adrp	x1, 438000 <worker_hash_op+0x3df8>
  41b448:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41b44c:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41b450:	add	x1, x1, #0x479
  41b454:	add	x2, x2, #0x8da
  41b458:	add	x4, x4, #0x3cd
  41b45c:	mov	w0, #0x1                   	// #1
  41b460:	mov	w3, #0x1d5                 	// #469
  41b464:	bl	40a630 <log_assert_failed_realm@plt>
  41b468:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  41b46c:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41b470:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41b474:	add	x1, x1, #0x8db
  41b478:	add	x2, x2, #0x8da
  41b47c:	add	x4, x4, #0x3cd
  41b480:	mov	w0, #0x1                   	// #1
  41b484:	mov	w3, #0x1a5                 	// #421
  41b488:	bl	40a630 <log_assert_failed_realm@plt>
  41b48c:	adrp	x1, 438000 <worker_hash_op+0x3df8>
  41b490:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41b494:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41b498:	add	x1, x1, #0x44b
  41b49c:	add	x2, x2, #0x8da
  41b4a0:	add	x4, x4, #0x3cd
  41b4a4:	mov	w0, #0x1                   	// #1
  41b4a8:	mov	w3, #0x1a6                 	// #422
  41b4ac:	bl	40a630 <log_assert_failed_realm@plt>

000000000041b4b0 <check_value_format_and_warn>:
  41b4b0:	sub	sp, sp, #0x80
  41b4b4:	str	x21, [sp, #96]
  41b4b8:	stp	x20, x19, [sp, #112]
  41b4bc:	mov	x19, x2
  41b4c0:	mov	x20, x1
  41b4c4:	mov	x21, x0
  41b4c8:	stp	x29, x30, [sp, #80]
  41b4cc:	add	x29, sp, #0x50
  41b4d0:	tbz	w3, #0, 41b4e0 <check_value_format_and_warn+0x30>
  41b4d4:	cbz	x19, 41b520 <check_value_format_and_warn+0x70>
  41b4d8:	ldrb	w8, [x19]
  41b4dc:	cbz	w8, 41b520 <check_value_format_and_warn+0x70>
  41b4e0:	add	x1, x29, #0x18
  41b4e4:	sub	x2, x29, #0x8
  41b4e8:	mov	x0, x19
  41b4ec:	bl	412bd0 <udev_check_format>
  41b4f0:	tbz	w0, #31, 41b608 <check_value_format_and_warn+0x158>
  41b4f4:	cbz	x21, 41b5a0 <check_value_format_and_warn+0xf0>
  41b4f8:	ldr	x9, [x21, #32]
  41b4fc:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  41b500:	add	x8, x8, #0xbc0
  41b504:	cbz	x9, 41b5ac <check_value_format_and_warn+0xfc>
  41b508:	ldp	x10, x9, [x9]
  41b50c:	cmp	x10, #0x0
  41b510:	csel	x8, x8, x10, eq  // eq = none
  41b514:	cbz	x9, 41b5ac <check_value_format_and_warn+0xfc>
  41b518:	ldr	w9, [x9, #8]
  41b51c:	b	41b5ac <check_value_format_and_warn+0xfc>
  41b520:	cbz	x21, 41b54c <check_value_format_and_warn+0x9c>
  41b524:	ldr	x9, [x21, #32]
  41b528:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  41b52c:	add	x8, x8, #0xbc0
  41b530:	cbz	x9, 41b558 <check_value_format_and_warn+0xa8>
  41b534:	ldp	x10, x9, [x9]
  41b538:	cmp	x10, #0x0
  41b53c:	csel	x8, x8, x10, eq  // eq = none
  41b540:	cbz	x9, 41b558 <check_value_format_and_warn+0xa8>
  41b544:	ldr	w9, [x9, #8]
  41b548:	b	41b558 <check_value_format_and_warn+0xa8>
  41b54c:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  41b550:	mov	w9, wzr
  41b554:	add	x8, x8, #0xbc0
  41b558:	adrp	x10, 438000 <worker_hash_op+0x3df8>
  41b55c:	str	x8, [sp, #16]
  41b560:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41b564:	add	x10, x10, #0x4f1
  41b568:	add	x8, x8, #0x4a4
  41b56c:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41b570:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41b574:	mov	w1, #0x16                  	// #22
  41b578:	stp	x19, x20, [sp, #32]
  41b57c:	str	w9, [sp, #24]
  41b580:	add	x2, x2, #0x8da
  41b584:	add	x4, x4, #0x488
  41b588:	stp	xzr, x10, [sp, #48]
  41b58c:	str	x8, [sp, #8]
  41b590:	mov	w0, #0x3                   	// #3
  41b594:	movk	w1, #0x4000, lsl #16
  41b598:	mov	w3, #0x207                 	// #519
  41b59c:	b	41b5f4 <check_value_format_and_warn+0x144>
  41b5a0:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  41b5a4:	mov	w9, wzr
  41b5a8:	add	x8, x8, #0xbc0
  41b5ac:	ldr	x10, [x29, #24]
  41b5b0:	ldur	x11, [x29, #-8]
  41b5b4:	str	x8, [sp, #16]
  41b5b8:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41b5bc:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41b5c0:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41b5c4:	mov	w1, #0x16                  	// #22
  41b5c8:	add	x10, x10, #0x1
  41b5cc:	add	x8, x8, #0x4a4
  41b5d0:	add	x2, x2, #0x8da
  41b5d4:	add	x4, x4, #0x488
  41b5d8:	mov	w0, #0x3                   	// #3
  41b5dc:	movk	w1, #0x4000, lsl #16
  41b5e0:	mov	w3, #0x209                 	// #521
  41b5e4:	stp	x10, x11, [sp, #48]
  41b5e8:	stp	x19, x20, [sp, #32]
  41b5ec:	str	w9, [sp, #24]
  41b5f0:	str	x8, [sp, #8]
  41b5f4:	mov	x5, xzr
  41b5f8:	mov	x6, xzr
  41b5fc:	mov	x7, xzr
  41b600:	str	xzr, [sp]
  41b604:	bl	40a730 <log_object_internal@plt>
  41b608:	ldp	x20, x19, [sp, #112]
  41b60c:	ldr	x21, [sp, #96]
  41b610:	ldp	x29, x30, [sp, #80]
  41b614:	add	sp, sp, #0x80
  41b618:	ret

000000000041b61c <check_attr_format_and_warn>:
  41b61c:	sub	sp, sp, #0x80
  41b620:	str	x21, [sp, #96]
  41b624:	stp	x20, x19, [sp, #112]
  41b628:	mov	x19, x1
  41b62c:	mov	x21, x0
  41b630:	stp	x29, x30, [sp, #80]
  41b634:	add	x29, sp, #0x50
  41b638:	cbz	x2, 41b688 <check_attr_format_and_warn+0x6c>
  41b63c:	ldrb	w8, [x2]
  41b640:	mov	x20, x2
  41b644:	cbz	w8, 41b688 <check_attr_format_and_warn+0x6c>
  41b648:	add	x1, x29, #0x18
  41b64c:	sub	x2, x29, #0x8
  41b650:	mov	x0, x20
  41b654:	bl	412bd0 <udev_check_format>
  41b658:	tbz	w0, #31, 41b778 <check_attr_format_and_warn+0x15c>
  41b65c:	cbz	x21, 41b714 <check_attr_format_and_warn+0xf8>
  41b660:	ldr	x9, [x21, #32]
  41b664:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  41b668:	add	x8, x8, #0xbc0
  41b66c:	cbz	x9, 41b720 <check_attr_format_and_warn+0x104>
  41b670:	ldp	x10, x9, [x9]
  41b674:	cmp	x10, #0x0
  41b678:	csel	x8, x8, x10, eq  // eq = none
  41b67c:	cbz	x9, 41b720 <check_attr_format_and_warn+0x104>
  41b680:	ldr	w9, [x9, #8]
  41b684:	b	41b720 <check_attr_format_and_warn+0x104>
  41b688:	cbz	x21, 41b6b4 <check_attr_format_and_warn+0x98>
  41b68c:	ldr	x9, [x21, #32]
  41b690:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  41b694:	add	x8, x8, #0xbc0
  41b698:	cbz	x9, 41b6c0 <check_attr_format_and_warn+0xa4>
  41b69c:	ldp	x10, x9, [x9]
  41b6a0:	cmp	x10, #0x0
  41b6a4:	csel	x8, x8, x10, eq  // eq = none
  41b6a8:	cbz	x9, 41b6c0 <check_attr_format_and_warn+0xa4>
  41b6ac:	ldr	w9, [x9, #8]
  41b6b0:	b	41b6c0 <check_attr_format_and_warn+0xa4>
  41b6b4:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  41b6b8:	mov	w9, wzr
  41b6bc:	add	x8, x8, #0xbc0
  41b6c0:	adrp	x10, 437000 <worker_hash_op+0x2df8>
  41b6c4:	str	x8, [sp, #16]
  41b6c8:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  41b6cc:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41b6d0:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41b6d4:	mov	w1, #0x16                  	// #22
  41b6d8:	add	x10, x10, #0xc63
  41b6dc:	add	x8, x8, #0xc4a
  41b6e0:	add	x2, x2, #0x8da
  41b6e4:	add	x4, x4, #0x4fd
  41b6e8:	mov	w0, #0x3                   	// #3
  41b6ec:	movk	w1, #0x4000, lsl #16
  41b6f0:	mov	w3, #0x211                 	// #529
  41b6f4:	mov	x5, xzr
  41b6f8:	mov	x6, xzr
  41b6fc:	mov	x7, xzr
  41b700:	str	w9, [sp, #24]
  41b704:	stp	x10, x19, [sp, #32]
  41b708:	stp	xzr, x8, [sp]
  41b70c:	bl	40a730 <log_object_internal@plt>
  41b710:	b	41b77c <check_attr_format_and_warn+0x160>
  41b714:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  41b718:	mov	w9, wzr
  41b71c:	add	x8, x8, #0xbc0
  41b720:	ldr	x10, [x29, #24]
  41b724:	ldur	x11, [x29, #-8]
  41b728:	str	x8, [sp, #16]
  41b72c:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41b730:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41b734:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41b738:	mov	w1, #0x16                  	// #22
  41b73c:	add	x10, x10, #0x1
  41b740:	add	x8, x8, #0x518
  41b744:	add	x2, x2, #0x8da
  41b748:	add	x4, x4, #0x4fd
  41b74c:	mov	w0, #0x3                   	// #3
  41b750:	movk	w1, #0x4000, lsl #16
  41b754:	mov	w3, #0x213                 	// #531
  41b758:	mov	x5, xzr
  41b75c:	mov	x6, xzr
  41b760:	mov	x7, xzr
  41b764:	stp	x10, x11, [sp, #48]
  41b768:	stp	x20, x19, [sp, #32]
  41b76c:	str	w9, [sp, #24]
  41b770:	stp	xzr, x8, [sp]
  41b774:	bl	40a730 <log_object_internal@plt>
  41b778:	mov	w0, wzr
  41b77c:	ldp	x20, x19, [sp, #112]
  41b780:	ldr	x21, [sp, #96]
  41b784:	ldp	x29, x30, [sp, #80]
  41b788:	add	sp, sp, #0x80
  41b78c:	ret

000000000041b790 <log_unknown_owner>:
  41b790:	sub	sp, sp, #0x80
  41b794:	cmp	w2, #0x0
  41b798:	cneg	w8, w2, mi  // mi = first
  41b79c:	and	w8, w8, #0xfffffffe
  41b7a0:	stp	x22, x21, [sp, #96]
  41b7a4:	stp	x20, x19, [sp, #112]
  41b7a8:	mov	x20, x4
  41b7ac:	mov	x19, x3
  41b7b0:	cmp	w8, #0x2
  41b7b4:	mov	x22, x0
  41b7b8:	stp	x29, x30, [sp, #64]
  41b7bc:	stp	x24, x23, [sp, #80]
  41b7c0:	add	x29, sp, #0x40
  41b7c4:	b.ne	41b7e4 <log_unknown_owner+0x54>  // b.any
  41b7c8:	cbz	x1, 41b804 <log_unknown_owner+0x74>
  41b7cc:	ldr	x8, [x1, #32]
  41b7d0:	cbz	x8, 41b804 <log_unknown_owner+0x74>
  41b7d4:	ldp	x23, x21, [x8]
  41b7d8:	stur	xzr, [x29, #-8]
  41b7dc:	cbnz	x22, 41b814 <log_unknown_owner+0x84>
  41b7e0:	b	41b824 <log_unknown_owner+0x94>
  41b7e4:	mov	w21, w2
  41b7e8:	cbz	x1, 41b854 <log_unknown_owner+0xc4>
  41b7ec:	ldr	x8, [x1, #32]
  41b7f0:	cbz	x8, 41b854 <log_unknown_owner+0xc4>
  41b7f4:	ldp	x24, x23, [x8]
  41b7f8:	stur	xzr, [x29, #-8]
  41b7fc:	cbnz	x22, 41b864 <log_unknown_owner+0xd4>
  41b800:	b	41b874 <log_unknown_owner+0xe4>
  41b804:	mov	x21, xzr
  41b808:	mov	x23, xzr
  41b80c:	stur	xzr, [x29, #-8]
  41b810:	cbz	x22, 41b824 <log_unknown_owner+0x94>
  41b814:	mov	w0, #0x1                   	// #1
  41b818:	bl	40a2c0 <log_get_max_level_realm@plt>
  41b81c:	cmp	w0, #0x3
  41b820:	b.ge	41b938 <log_unknown_owner+0x1a8>  // b.tcont
  41b824:	mov	x6, xzr
  41b828:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  41b82c:	add	x8, x8, #0x7f
  41b830:	cmp	x6, #0x0
  41b834:	adrp	x9, 437000 <worker_hash_op+0x2df8>
  41b838:	add	x9, x9, #0xbc0
  41b83c:	csel	x5, xzr, x8, eq  // eq = none
  41b840:	cmp	x23, #0x0
  41b844:	csel	x8, x9, x23, eq  // eq = none
  41b848:	cbz	x21, 41b8a4 <log_unknown_owner+0x114>
  41b84c:	ldr	w9, [x21, #8]
  41b850:	b	41b8a8 <log_unknown_owner+0x118>
  41b854:	mov	x23, xzr
  41b858:	mov	x24, xzr
  41b85c:	stur	xzr, [x29, #-8]
  41b860:	cbz	x22, 41b874 <log_unknown_owner+0xe4>
  41b864:	mov	w0, #0x1                   	// #1
  41b868:	bl	40a2c0 <log_get_max_level_realm@plt>
  41b86c:	cmp	w0, #0x3
  41b870:	b.ge	41b94c <log_unknown_owner+0x1bc>  // b.tcont
  41b874:	mov	x6, xzr
  41b878:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  41b87c:	add	x8, x8, #0x7f
  41b880:	cmp	x6, #0x0
  41b884:	adrp	x9, 437000 <worker_hash_op+0x2df8>
  41b888:	add	x9, x9, #0xbc0
  41b88c:	csel	x5, xzr, x8, eq  // eq = none
  41b890:	cmp	x24, #0x0
  41b894:	csel	x8, x9, x24, eq  // eq = none
  41b898:	cbz	x23, 41b8e0 <log_unknown_owner+0x150>
  41b89c:	ldr	w9, [x23, #8]
  41b8a0:	b	41b8e4 <log_unknown_owner+0x154>
  41b8a4:	mov	w9, wzr
  41b8a8:	str	x8, [sp, #16]
  41b8ac:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41b8b0:	add	x8, x8, #0x580
  41b8b4:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41b8b8:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41b8bc:	stp	x19, x20, [sp, #32]
  41b8c0:	str	w9, [sp, #24]
  41b8c4:	add	x2, x2, #0x8da
  41b8c8:	add	x4, x4, #0x56e
  41b8cc:	stp	xzr, x8, [sp]
  41b8d0:	mov	w0, #0x3                   	// #3
  41b8d4:	mov	w3, #0xf1                  	// #241
  41b8d8:	mov	w1, wzr
  41b8dc:	b	41b918 <log_unknown_owner+0x188>
  41b8e0:	mov	w9, wzr
  41b8e4:	str	x8, [sp, #16]
  41b8e8:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41b8ec:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41b8f0:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41b8f4:	add	x8, x8, #0x5a0
  41b8f8:	add	x2, x2, #0x8da
  41b8fc:	add	x4, x4, #0x56e
  41b900:	mov	w0, #0x3                   	// #3
  41b904:	mov	w3, #0xf3                  	// #243
  41b908:	mov	w1, w21
  41b90c:	stp	x19, x20, [sp, #32]
  41b910:	str	w9, [sp, #24]
  41b914:	stp	xzr, x8, [sp]
  41b918:	mov	x7, xzr
  41b91c:	bl	40a730 <log_object_internal@plt>
  41b920:	ldp	x20, x19, [sp, #112]
  41b924:	ldp	x22, x21, [sp, #96]
  41b928:	ldp	x24, x23, [sp, #80]
  41b92c:	ldp	x29, x30, [sp, #64]
  41b930:	add	sp, sp, #0x80
  41b934:	ret
  41b938:	sub	x1, x29, #0x8
  41b93c:	mov	x0, x22
  41b940:	bl	40a780 <sd_device_get_sysname@plt>
  41b944:	ldur	x6, [x29, #-8]
  41b948:	b	41b828 <log_unknown_owner+0x98>
  41b94c:	sub	x1, x29, #0x8
  41b950:	mov	x0, x22
  41b954:	bl	40a780 <sd_device_get_sysname@plt>
  41b958:	ldur	x6, [x29, #-8]
  41b95c:	b	41b878 <log_unknown_owner+0xe8>

000000000041b960 <udev_rule_apply_token_to_event>:
  41b960:	stp	x29, x30, [sp, #-96]!
  41b964:	stp	x28, x27, [sp, #16]
  41b968:	stp	x26, x25, [sp, #32]
  41b96c:	stp	x24, x23, [sp, #48]
  41b970:	stp	x22, x21, [sp, #64]
  41b974:	stp	x20, x19, [sp, #80]
  41b978:	mov	x29, sp
  41b97c:	sub	sp, sp, #0x4, lsl #12
  41b980:	sub	sp, sp, #0x4d0
  41b984:	cbz	x0, 41f1b8 <udev_rule_apply_token_to_event+0x3858>
  41b988:	mov	x19, x1
  41b98c:	cbz	x1, 41f1dc <udev_rule_apply_token_to_event+0x387c>
  41b990:	mov	x21, x2
  41b994:	cbz	x2, 41f200 <udev_rule_apply_token_to_event+0x38a0>
  41b998:	mov	x26, x0
  41b99c:	ldr	x8, [x26, #32]!
  41b9a0:	mov	x23, x0
  41b9a4:	ldr	x8, [x8, #8]
  41b9a8:	ldr	x20, [x8, #48]
  41b9ac:	ldr	w9, [x20]
  41b9b0:	sxtb	w8, w9
  41b9b4:	cmp	w8, #0x2e
  41b9b8:	b.hi	41f224 <udev_rule_apply_token_to_event+0x38c4>  // b.pmore
  41b9bc:	adrp	x10, 441000 <worker_hash_op+0xcdf8>
  41b9c0:	add	x10, x10, #0xf5e
  41b9c4:	adr	x11, 41b9e0 <udev_rule_apply_token_to_event+0x80>
  41b9c8:	ldrh	w12, [x10, x8, lsl #1]
  41b9cc:	add	x11, x11, x12, lsl #2
  41b9d0:	add	x25, sp, #0x4, lsl #12
  41b9d4:	mov	x22, x3
  41b9d8:	add	x25, x25, #0x40
  41b9dc:	br	x11
  41b9e0:	add	x1, sp, #0x4, lsl #12
  41b9e4:	add	x1, x1, #0xc0
  41b9e8:	mov	x0, x19
  41b9ec:	bl	40a780 <sd_device_get_sysname@plt>
  41b9f0:	tbz	w0, #31, 41c1dc <udev_rule_apply_token_to_event+0x87c>
  41b9f4:	ldr	x8, [x26]
  41b9f8:	mov	w21, w0
  41b9fc:	cbz	x8, 41cd64 <udev_rule_apply_token_to_event+0x1404>
  41ba00:	ldp	x22, x20, [x8]
  41ba04:	b	41cd6c <udev_rule_apply_token_to_event+0x140c>
  41ba08:	ldrsh	w8, [x21, #104]
  41ba0c:	tbnz	w8, #31, 41e4c8 <udev_rule_apply_token_to_event+0x2b68>
  41ba10:	and	w10, w9, #0xff00
  41ba14:	cmp	w10, #0x500
  41ba18:	b.ne	41ba28 <udev_rule_apply_token_to_event+0xc8>  // b.any
  41ba1c:	orr	w8, w8, #0x8000
  41ba20:	strh	w8, [x21, #104]
  41ba24:	ldr	w9, [x20]
  41ba28:	sbfx	w8, w9, #8, #8
  41ba2c:	and	w8, w8, #0xfffffffe
  41ba30:	cmp	w8, #0x4
  41ba34:	b.ne	41ba4c <udev_rule_apply_token_to_event+0xec>  // b.any
  41ba38:	adrp	x1, 46f000 <_DYNAMIC+0x208>
  41ba3c:	ldr	x0, [x21, #64]
  41ba40:	ldr	x1, [x1, #120]
  41ba44:	mov	x2, xzr
  41ba48:	bl	40b270 <internal_hashmap_clear@plt>
  41ba4c:	add	x22, x21, #0x40
  41ba50:	mov	x0, x22
  41ba54:	mov	x1, xzr
  41ba58:	bl	40b280 <internal_ordered_hashmap_ensure_allocated@plt>
  41ba5c:	tbnz	w0, #31, 41c62c <udev_rule_apply_token_to_event+0xccc>
  41ba60:	ldr	x1, [x20, #8]
  41ba64:	add	x2, sp, #0x4, lsl #12
  41ba68:	add	x2, x2, #0xc8
  41ba6c:	mov	w3, #0x400                 	// #1024
  41ba70:	mov	x0, x21
  41ba74:	mov	w4, wzr
  41ba78:	bl	411e1c <udev_event_apply_format>
  41ba7c:	add	x0, sp, #0x4, lsl #12
  41ba80:	add	x0, x0, #0xc8
  41ba84:	bl	40a810 <strdup@plt>
  41ba88:	mov	x21, x0
  41ba8c:	cbz	x0, 41cd48 <udev_rule_apply_token_to_event+0x13e8>
  41ba90:	ldr	x0, [x22]
  41ba94:	ldr	x2, [x20, #16]
  41ba98:	mov	x1, x21
  41ba9c:	bl	40a820 <hashmap_put@plt>
  41baa0:	tbnz	w0, #31, 41d238 <udev_rule_apply_token_to_event+0x18d8>
  41baa4:	ldr	x8, [x26]
  41baa8:	cbz	x8, 41dc20 <udev_rule_apply_token_to_event+0x22c0>
  41baac:	ldp	x22, x21, [x8]
  41bab0:	b	41dc28 <udev_rule_apply_token_to_event+0x22c8>
  41bab4:	add	x1, sp, #0x4, lsl #12
  41bab8:	add	x1, x1, #0xc0
  41babc:	mov	x0, x19
  41bac0:	bl	40ad30 <sd_device_get_driver@plt>
  41bac4:	cmn	w0, #0x2
  41bac8:	b.eq	41bb8c <udev_rule_apply_token_to_event+0x22c>  // b.none
  41bacc:	mov	w21, w0
  41bad0:	tbz	w0, #31, 41c1dc <udev_rule_apply_token_to_event+0x87c>
  41bad4:	ldr	x8, [x26]
  41bad8:	cbz	x8, 41d484 <udev_rule_apply_token_to_event+0x1b24>
  41badc:	ldp	x22, x20, [x8]
  41bae0:	b	41d48c <udev_rule_apply_token_to_event+0x1b2c>
  41bae4:	cbz	x20, 41f248 <udev_rule_apply_token_to_event+0x38e8>
  41bae8:	ldr	x8, [x20, #16]
  41baec:	sbfx	w9, w9, #24, #7
  41baf0:	cbz	w9, 41bb20 <udev_rule_apply_token_to_event+0x1c0>
  41baf4:	cmp	w9, #0x2
  41baf8:	b.eq	41c524 <udev_rule_apply_token_to_event+0xbc4>  // b.none
  41bafc:	cmp	w9, #0x1
  41bb00:	b.ne	41f26c <udev_rule_apply_token_to_event+0x390c>  // b.any
  41bb04:	add	x2, sp, #0x38
  41bb08:	mov	w3, #0x200                 	// #512
  41bb0c:	mov	x0, x21
  41bb10:	mov	x1, x8
  41bb14:	mov	w4, wzr
  41bb18:	bl	411e1c <udev_event_apply_format>
  41bb1c:	add	x8, sp, #0x38
  41bb20:	add	x2, sp, #0x4, lsl #12
  41bb24:	add	x2, x2, #0x40
  41bb28:	mov	x0, x19
  41bb2c:	mov	x1, x8
  41bb30:	bl	40ace0 <sd_device_get_sysattr_value@plt>
  41bb34:	tbz	w0, #31, 41c54c <udev_rule_apply_token_to_event+0xbec>
  41bb38:	b	41c594 <udev_rule_apply_token_to_event+0xc34>
  41bb3c:	mov	x0, x19
  41bb40:	bl	40b290 <sd_device_get_tag_first@plt>
  41bb44:	str	x0, [sp, #16576]
  41bb48:	cbz	x0, 41dec0 <udev_rule_apply_token_to_event+0x2560>
  41bb4c:	mov	x1, x0
  41bb50:	mov	x0, x20
  41bb54:	bl	41f2b4 <token_match_string>
  41bb58:	tbnz	w0, #0, 41c90c <udev_rule_apply_token_to_event+0xfac>
  41bb5c:	mov	x0, x19
  41bb60:	bl	40b2a0 <sd_device_get_tag_next@plt>
  41bb64:	mov	x1, x0
  41bb68:	str	x0, [sp, #16576]
  41bb6c:	cbnz	x0, 41bb50 <udev_rule_apply_token_to_event+0x1f0>
  41bb70:	b	41dec0 <udev_rule_apply_token_to_event+0x2560>
  41bb74:	add	x1, sp, #0x4, lsl #12
  41bb78:	add	x1, x1, #0xc0
  41bb7c:	mov	x0, x19
  41bb80:	bl	40a850 <sd_device_get_subsystem@plt>
  41bb84:	cmn	w0, #0x2
  41bb88:	b.ne	41bb98 <udev_rule_apply_token_to_event+0x238>  // b.any
  41bb8c:	mov	x1, xzr
  41bb90:	str	xzr, [sp, #16576]
  41bb94:	b	41cd00 <udev_rule_apply_token_to_event+0x13a0>
  41bb98:	mov	w21, w0
  41bb9c:	tbz	w0, #31, 41c1dc <udev_rule_apply_token_to_event+0x87c>
  41bba0:	ldr	x8, [x26]
  41bba4:	cbz	x8, 41d504 <udev_rule_apply_token_to_event+0x1ba4>
  41bba8:	ldp	x22, x20, [x8]
  41bbac:	b	41d50c <udev_rule_apply_token_to_event+0x1bac>
  41bbb0:	add	x8, sp, #0x38
  41bbb4:	str	x8, [sp, #16584]
  41bbb8:	ldrh	w8, [x21, #104]
  41bbbc:	tbnz	w8, #10, 41e4c8 <udev_rule_apply_token_to_event+0x2b68>
  41bbc0:	ldrb	w9, [x20, #1]
  41bbc4:	lsl	w9, w9, #8
  41bbc8:	cmp	w9, #0x500
  41bbcc:	b.ne	41bbd8 <udev_rule_apply_token_to_event+0x278>  // b.any
  41bbd0:	orr	w8, w8, #0x400
  41bbd4:	strh	w8, [x21, #104]
  41bbd8:	ldr	x1, [x20, #8]
  41bbdc:	add	x2, sp, #0x38
  41bbe0:	mov	w3, #0x200                 	// #512
  41bbe4:	mov	x0, x21
  41bbe8:	mov	w4, wzr
  41bbec:	bl	411e1c <udev_event_apply_format>
  41bbf0:	add	x20, x21, #0x30
  41bbf4:	add	x0, sp, #0x4, lsl #12
  41bbf8:	add	x0, x0, #0xc8
  41bbfc:	mov	w2, #0x2                   	// #2
  41bc00:	mov	x1, x20
  41bc04:	bl	40b240 <get_group_creds@plt>
  41bc08:	tbnz	w0, #31, 41d044 <udev_rule_apply_token_to_event+0x16e4>
  41bc0c:	ldr	x8, [x26]
  41bc10:	cbz	x8, 41d81c <udev_rule_apply_token_to_event+0x1ebc>
  41bc14:	ldp	x22, x21, [x8]
  41bc18:	b	41d824 <udev_rule_apply_token_to_event+0x1ec4>
  41bc1c:	ldr	x1, [x21, #32]
  41bc20:	b	41cd00 <udev_rule_apply_token_to_event+0x13a0>
  41bc24:	ldr	x1, [x20, #16]
  41bc28:	add	x2, sp, #0x4, lsl #12
  41bc2c:	add	x2, x2, #0xc8
  41bc30:	mov	w3, #0x400                 	// #1024
  41bc34:	mov	x0, x21
  41bc38:	mov	w4, wzr
  41bc3c:	bl	411e1c <udev_event_apply_format>
  41bc40:	ldr	x1, [x20, #8]
  41bc44:	add	x2, sp, #0x38
  41bc48:	mov	w3, #0x200                 	// #512
  41bc4c:	mov	x0, x21
  41bc50:	mov	w4, wzr
  41bc54:	bl	411e1c <udev_event_apply_format>
  41bc58:	add	x0, sp, #0x4, lsl #12
  41bc5c:	add	x0, x0, #0xc8
  41bc60:	bl	40b2b0 <sysctl_normalize@plt>
  41bc64:	ldr	x8, [x26]
  41bc68:	cbz	x8, 41c654 <udev_rule_apply_token_to_event+0xcf4>
  41bc6c:	ldp	x23, x20, [x8]
  41bc70:	b	41c65c <udev_rule_apply_token_to_event+0xcfc>
  41bc74:	ldr	x1, [x20, #8]
  41bc78:	add	x2, sp, #0x4, lsl #12
  41bc7c:	add	x2, x2, #0xc8
  41bc80:	mov	w3, #0x400                 	// #1024
  41bc84:	mov	x0, x21
  41bc88:	mov	w4, wzr
  41bc8c:	bl	411e1c <udev_event_apply_format>
  41bc90:	add	x1, sp, #0x4, lsl #12
  41bc94:	add	x1, x1, #0x40
  41bc98:	mov	x0, x19
  41bc9c:	bl	40ab60 <sd_device_get_parent@plt>
  41bca0:	cmn	w0, #0x2
  41bca4:	b.ne	41c59c <udev_rule_apply_token_to_event+0xc3c>  // b.any
  41bca8:	mov	w8, #0x1                   	// #1
  41bcac:	b	41ce28 <udev_rule_apply_token_to_event+0x14c8>
  41bcb0:	ldr	x1, [x20, #8]
  41bcb4:	add	x2, sp, #0x4, lsl #12
  41bcb8:	add	x2, x2, #0xc8
  41bcbc:	mov	w3, #0x400                 	// #1024
  41bcc0:	mov	x0, x21
  41bcc4:	mov	w4, wzr
  41bcc8:	bl	411e1c <udev_event_apply_format>
  41bccc:	ldr	x8, [x26]
  41bcd0:	cbz	x8, 41c714 <udev_rule_apply_token_to_event+0xdb4>
  41bcd4:	ldp	x24, x23, [x8]
  41bcd8:	b	41c71c <udev_rule_apply_token_to_event+0xdbc>
  41bcdc:	ldr	w8, [x20, #16]
  41bce0:	sub	w22, w8, #0x1
  41bce4:	mov	w8, #0x1                   	// #1
  41bce8:	mov	w0, w22
  41bcec:	lsl	w24, w8, w22
  41bcf0:	bl	42074c <udev_builtin_run_once>
  41bcf4:	tbz	w0, #0, 41d05c <udev_rule_apply_token_to_event+0x16fc>
  41bcf8:	ldr	w8, [x21, #96]
  41bcfc:	tst	w8, w24
  41bd00:	b.eq	41d054 <udev_rule_apply_token_to_event+0x16f4>  // b.none
  41bd04:	ldr	x8, [x26]
  41bd08:	cbz	x8, 41d8ac <udev_rule_apply_token_to_event+0x1f4c>
  41bd0c:	ldp	x26, x25, [x8]
  41bd10:	b	41d8b4 <udev_rule_apply_token_to_event+0x1f54>
  41bd14:	ldr	w1, [x20, #16]
  41bd18:	mov	x0, x19
  41bd1c:	bl	40b2c0 <device_set_devlink_priority@plt>
  41bd20:	b	41e4c8 <udev_rule_apply_token_to_event+0x2b68>
  41bd24:	ldr	x0, [x21, #32]
  41bd28:	bl	40a320 <free@plt>
  41bd2c:	str	xzr, [x21, #32]
  41bd30:	ldr	x1, [x20, #8]
  41bd34:	add	x2, sp, #0x4, lsl #12
  41bd38:	add	x2, x2, #0xc8
  41bd3c:	mov	w3, #0x400                 	// #1024
  41bd40:	mov	x0, x21
  41bd44:	mov	w4, wzr
  41bd48:	bl	411e1c <udev_event_apply_format>
  41bd4c:	ldr	x8, [x26]
  41bd50:	cbz	x8, 41c91c <udev_rule_apply_token_to_event+0xfbc>
  41bd54:	ldp	x27, x25, [x8]
  41bd58:	b	41c924 <udev_rule_apply_token_to_event+0xfc4>
  41bd5c:	add	x8, sp, #0x38
  41bd60:	str	x8, [sp, #16584]
  41bd64:	ldp	x8, x22, [x20, #8]
  41bd68:	cbz	x8, 41ca24 <udev_rule_apply_token_to_event+0x10c4>
  41bd6c:	ldrb	w9, [x8]
  41bd70:	ldrb	w8, [x20, #1]
  41bd74:	lsl	w8, w8, #8
  41bd78:	cbz	w9, 41ca2c <udev_rule_apply_token_to_event+0x10cc>
  41bd7c:	cmp	w8, #0x200
  41bd80:	b.ne	41cde4 <udev_rule_apply_token_to_event+0x1484>  // b.any
  41bd84:	add	x2, sp, #0x4, lsl #12
  41bd88:	add	x2, x2, #0xc0
  41bd8c:	mov	x0, x19
  41bd90:	mov	x1, x22
  41bd94:	bl	40aa50 <sd_device_get_property_value@plt>
  41bd98:	tbnz	w0, #31, 41cde4 <udev_rule_apply_token_to_event+0x1484>
  41bd9c:	ldr	x2, [sp, #16576]
  41bda0:	adrp	x3, 436000 <worker_hash_op+0x1df8>
  41bda4:	add	x0, sp, #0x4, lsl #12
  41bda8:	add	x3, x3, #0xb34
  41bdac:	add	x0, x0, #0xc8
  41bdb0:	mov	w1, #0x200                 	// #512
  41bdb4:	mov	x4, xzr
  41bdb8:	bl	40ad00 <strpcpyl@plt>
  41bdbc:	ldr	x2, [sp, #16584]
  41bdc0:	mov	x3, x0
  41bdc4:	b	41cdec <udev_rule_apply_token_to_event+0x148c>
  41bdc8:	ldrh	w8, [x21, #104]
  41bdcc:	tbnz	w8, #9, 41e4c8 <udev_rule_apply_token_to_event+0x2b68>
  41bdd0:	and	w9, w9, #0xff00
  41bdd4:	cmp	w9, #0x500
  41bdd8:	b.ne	41bde4 <udev_rule_apply_token_to_event+0x484>  // b.any
  41bddc:	orr	w8, w8, #0x200
  41bde0:	strh	w8, [x21, #104]
  41bde4:	ldr	x9, [x20, #16]
  41bde8:	and	w8, w8, #0xfffffeff
  41bdec:	cmp	x9, #0x0
  41bdf0:	cset	w9, ne  // ne = any
  41bdf4:	orr	w8, w8, w9, lsl #8
  41bdf8:	strh	w8, [x21, #104]
  41bdfc:	b	41e4c8 <udev_rule_apply_token_to_event+0x2b68>
  41be00:	add	x8, sp, #0x38
  41be04:	str	x8, [sp, #16584]
  41be08:	ldrh	w8, [x21, #104]
  41be0c:	tbnz	w8, #11, 41e4c8 <udev_rule_apply_token_to_event+0x2b68>
  41be10:	ldrb	w9, [x20, #1]
  41be14:	lsl	w9, w9, #8
  41be18:	cmp	w9, #0x500
  41be1c:	b.ne	41be28 <udev_rule_apply_token_to_event+0x4c8>  // b.any
  41be20:	orr	w8, w8, #0x800
  41be24:	strh	w8, [x21, #104]
  41be28:	ldr	x1, [x20, #8]
  41be2c:	add	x2, sp, #0x38
  41be30:	mov	w3, #0x200                 	// #512
  41be34:	mov	x0, x21
  41be38:	mov	w4, wzr
  41be3c:	bl	411e1c <udev_event_apply_format>
  41be40:	add	x20, x21, #0x2c
  41be44:	add	x0, sp, #0x4, lsl #12
  41be48:	add	x0, x0, #0xc8
  41be4c:	mov	w5, #0x2                   	// #2
  41be50:	mov	x1, x20
  41be54:	mov	x2, xzr
  41be58:	mov	x3, xzr
  41be5c:	mov	x4, xzr
  41be60:	bl	40b230 <get_user_creds@plt>
  41be64:	tbnz	w0, #31, 41d14c <udev_rule_apply_token_to_event+0x17ec>
  41be68:	ldr	x8, [x26]
  41be6c:	cbz	x8, 41d960 <udev_rule_apply_token_to_event+0x2000>
  41be70:	ldp	x22, x21, [x8]
  41be74:	b	41d968 <udev_rule_apply_token_to_event+0x2008>
  41be78:	ldr	x0, [x21, #16]
  41be7c:	cbz	x0, 41ca5c <udev_rule_apply_token_to_event+0x10fc>
  41be80:	ldr	x1, [x20, #8]
  41be84:	add	x2, sp, #0x4, lsl #12
  41be88:	add	x2, x2, #0xc0
  41be8c:	bl	40aa50 <sd_device_get_property_value@plt>
  41be90:	cmn	w0, #0x2
  41be94:	b.eq	41dec0 <udev_rule_apply_token_to_event+0x2560>  // b.none
  41be98:	mov	w21, w0
  41be9c:	tbnz	w0, #31, 41d9f0 <udev_rule_apply_token_to_event+0x2090>
  41bea0:	ldr	x1, [x20, #8]
  41bea4:	ldr	x2, [sp, #16576]
  41bea8:	mov	x0, x19
  41beac:	bl	40ae90 <device_add_property@plt>
  41beb0:	tbz	w0, #31, 41c90c <udev_rule_apply_token_to_event+0xfac>
  41beb4:	ldr	x8, [x26]
  41beb8:	mov	w21, w0
  41bebc:	cbz	x8, 41ea78 <udev_rule_apply_token_to_event+0x3118>
  41bec0:	ldp	x23, x22, [x8]
  41bec4:	b	41ea80 <udev_rule_apply_token_to_event+0x3120>
  41bec8:	ldrh	w8, [x21, #104]
  41becc:	tbnz	w8, #13, 41e4c8 <udev_rule_apply_token_to_event+0x2b68>
  41bed0:	and	w9, w9, #0xff00
  41bed4:	cmp	w9, #0x500
  41bed8:	b.ne	41bee4 <udev_rule_apply_token_to_event+0x584>  // b.any
  41bedc:	orr	w8, w8, #0x2000
  41bee0:	strh	w8, [x21, #104]
  41bee4:	ldr	x1, [x20, #8]
  41bee8:	add	x2, sp, #0x4, lsl #12
  41beec:	add	x2, x2, #0xc8
  41bef0:	mov	w3, #0x400                 	// #1024
  41bef4:	mov	x0, x21
  41bef8:	mov	w4, wzr
  41befc:	bl	411e1c <udev_event_apply_format>
  41bf00:	ldrsb	w8, [x21, #104]
  41bf04:	orr	w8, w8, #0x2
  41bf08:	cmp	w8, #0x2
  41bf0c:	b.ne	41e110 <udev_rule_apply_token_to_event+0x27b0>  // b.any
  41bf10:	adrp	x1, 434000 <__libc_csu_init+0x60>
  41bf14:	add	x0, sp, #0x4, lsl #12
  41bf18:	add	x1, x1, #0x289
  41bf1c:	add	x0, x0, #0xc8
  41bf20:	bl	40ad70 <util_replace_chars@plt>
  41bf24:	cbz	x0, 41e110 <udev_rule_apply_token_to_event+0x27b0>
  41bf28:	ldr	x8, [x26]
  41bf2c:	mov	x22, x0
  41bf30:	cbz	x8, 41e080 <udev_rule_apply_token_to_event+0x2720>
  41bf34:	ldp	x24, x23, [x8]
  41bf38:	b	41e088 <udev_rule_apply_token_to_event+0x2728>
  41bf3c:	str	xzr, [sp, #56]
  41bf40:	ldr	x1, [x20, #16]
  41bf44:	add	x2, sp, #0x4, lsl #12
  41bf48:	add	x2, x2, #0xc8
  41bf4c:	mov	w3, #0x400                 	// #1024
  41bf50:	mov	x0, x21
  41bf54:	mov	w4, wzr
  41bf58:	bl	411e1c <udev_event_apply_format>
  41bf5c:	add	x0, sp, #0x4, lsl #12
  41bf60:	add	x0, x0, #0xc8
  41bf64:	bl	40b2b0 <sysctl_normalize@plt>
  41bf68:	add	x1, sp, #0x38
  41bf6c:	bl	40b2d0 <sysctl_read@plt>
  41bf70:	tbz	w0, #31, 41c610 <udev_rule_apply_token_to_event+0xcb0>
  41bf74:	mov	w21, w0
  41bf78:	cmn	w0, #0x2
  41bf7c:	b.eq	41c610 <udev_rule_apply_token_to_event+0xcb0>  // b.none
  41bf80:	ldr	x8, [x26]
  41bf84:	cbz	x8, 41d16c <udev_rule_apply_token_to_event+0x180c>
  41bf88:	ldp	x22, x20, [x8]
  41bf8c:	b	41d174 <udev_rule_apply_token_to_event+0x1814>
  41bf90:	ldr	x1, [x20, #8]
  41bf94:	add	x2, sp, #0x4, lsl #12
  41bf98:	add	x2, x2, #0xc8
  41bf9c:	mov	w3, #0x400                 	// #1024
  41bfa0:	mov	x0, x21
  41bfa4:	mov	w4, wzr
  41bfa8:	bl	411e1c <udev_event_apply_format>
  41bfac:	ldr	x8, [x26]
  41bfb0:	cbz	x8, 41ca64 <udev_rule_apply_token_to_event+0x1104>
  41bfb4:	ldp	x22, x21, [x8]
  41bfb8:	b	41ca6c <udev_rule_apply_token_to_event+0x110c>
  41bfbc:	str	xzr, [sp, #56]
  41bfc0:	ldr	x0, [x20, #8]
  41bfc4:	add	x2, sp, #0x38
  41bfc8:	mov	w1, #0x2                   	// #2
  41bfcc:	bl	40b2e0 <proc_cmdline_get_key@plt>
  41bfd0:	mov	w21, w0
  41bfd4:	tbnz	w0, #31, 41cc90 <udev_rule_apply_token_to_event+0x1330>
  41bfd8:	cbz	w21, 41ce54 <udev_rule_apply_token_to_event+0x14f4>
  41bfdc:	ldr	x8, [sp, #56]
  41bfe0:	ldr	x1, [x20, #8]
  41bfe4:	adrp	x22, 437000 <worker_hash_op+0x2df8>
  41bfe8:	add	x22, x22, #0xbc
  41bfec:	cmp	x8, #0x0
  41bff0:	csel	x2, x22, x8, eq  // eq = none
  41bff4:	mov	x0, x19
  41bff8:	bl	40ae90 <device_add_property@plt>
  41bffc:	tbnz	w0, #31, 41d454 <udev_rule_apply_token_to_event+0x1af4>
  41c000:	ldrb	w8, [x20, #1]
  41c004:	cmp	w8, #0x0
  41c008:	cset	w19, eq  // eq = none
  41c00c:	b	41e6e4 <udev_rule_apply_token_to_event+0x2d84>
  41c010:	mov	x0, x19
  41c014:	bl	40acf0 <sd_device_get_devlink_first@plt>
  41c018:	str	x0, [sp, #16576]
  41c01c:	cbz	x0, 41dec0 <udev_rule_apply_token_to_event+0x2560>
  41c020:	adrp	x21, 438000 <worker_hash_op+0x3df8>
  41c024:	adrp	x23, 438000 <worker_hash_op+0x3df8>
  41c028:	mov	x22, x0
  41c02c:	add	x21, x21, #0x752
  41c030:	add	x23, x23, #0xed8
  41c034:	mov	w2, #0x5                   	// #5
  41c038:	mov	x0, x22
  41c03c:	mov	x1, x21
  41c040:	bl	40a6a0 <strncmp@plt>
  41c044:	add	x8, x22, #0x5
  41c048:	cmp	w0, #0x0
  41c04c:	csel	x8, x8, xzr, eq  // eq = none
  41c050:	cmp	x8, #0x0
  41c054:	csel	x1, x23, x8, eq  // eq = none
  41c058:	mov	x0, x20
  41c05c:	bl	41f2b4 <token_match_string>
  41c060:	tbnz	w0, #0, 41c90c <udev_rule_apply_token_to_event+0xfac>
  41c064:	mov	x0, x19
  41c068:	bl	40ad10 <sd_device_get_devlink_next@plt>
  41c06c:	mov	x22, x0
  41c070:	str	x0, [sp, #16576]
  41c074:	cbnz	x0, 41c034 <udev_rule_apply_token_to_event+0x6d4>
  41c078:	b	41dec0 <udev_rule_apply_token_to_event+0x2560>
  41c07c:	mov	w8, #0x2                   	// #2
  41c080:	b	41c288 <udev_rule_apply_token_to_event+0x928>
  41c084:	mov	x0, x19
  41c088:	bl	40b2f0 <device_set_db_persist@plt>
  41c08c:	b	41e4c8 <udev_rule_apply_token_to_event+0x2b68>
  41c090:	ldr	x1, [x21, #24]
  41c094:	b	41cd00 <udev_rule_apply_token_to_event+0x13a0>
  41c098:	add	x1, sp, #0x4, lsl #12
  41c09c:	add	x1, x1, #0xc8
  41c0a0:	mov	x0, x19
  41c0a4:	bl	40a970 <device_get_action@plt>
  41c0a8:	tbnz	w0, #31, 41cca0 <udev_rule_apply_token_to_event+0x1340>
  41c0ac:	ldr	w0, [x25, #136]
  41c0b0:	bl	40a9c0 <device_action_to_string@plt>
  41c0b4:	mov	x1, x0
  41c0b8:	b	41cd00 <udev_rule_apply_token_to_event+0x13a0>
  41c0bc:	add	x1, sp, #0x4, lsl #12
  41c0c0:	add	x1, x1, #0xc0
  41c0c4:	mov	x0, x19
  41c0c8:	bl	40aa30 <sd_device_get_devpath@plt>
  41c0cc:	tbz	w0, #31, 41c1dc <udev_rule_apply_token_to_event+0x87c>
  41c0d0:	ldr	x8, [x26]
  41c0d4:	mov	w21, w0
  41c0d8:	cbz	x8, 41d68c <udev_rule_apply_token_to_event+0x1d2c>
  41c0dc:	ldp	x22, x20, [x8]
  41c0e0:	b	41d694 <udev_rule_apply_token_to_event+0x1d34>
  41c0e4:	add	x0, sp, #0x38
  41c0e8:	mov	w2, #0x4000                	// #16384
  41c0ec:	mov	w1, wzr
  41c0f0:	bl	40b300 <memset@plt>
  41c0f4:	ldr	x0, [x20, #16]
  41c0f8:	bl	40a810 <strdup@plt>
  41c0fc:	mov	x22, x0
  41c100:	cbz	x0, 41ccb4 <udev_rule_apply_token_to_event+0x1354>
  41c104:	ldr	x1, [x20, #8]
  41c108:	add	x2, sp, #0x38
  41c10c:	mov	w3, #0x4000                	// #16384
  41c110:	mov	x0, x21
  41c114:	mov	w4, wzr
  41c118:	bl	411e1c <udev_event_apply_format>
  41c11c:	ldrb	w8, [sp, #56]
  41c120:	cbz	w8, 41ce68 <udev_rule_apply_token_to_event+0x1508>
  41c124:	add	x0, sp, #0x38
  41c128:	b	41ce6c <udev_rule_apply_token_to_event+0x150c>
  41c12c:	ldrb	w8, [x21, #105]
  41c130:	tbnz	w8, #6, 41e4c8 <udev_rule_apply_token_to_event+0x2b68>
  41c134:	mov	x0, x19
  41c138:	mov	x1, xzr
  41c13c:	bl	40aa60 <sd_device_get_devnum@plt>
  41c140:	tbnz	w0, #31, 41e4c8 <udev_rule_apply_token_to_event+0x2b68>
  41c144:	ldr	w8, [x20]
  41c148:	and	w9, w8, #0xff00
  41c14c:	cmp	w9, #0x500
  41c150:	b.ne	41c164 <udev_rule_apply_token_to_event+0x804>  // b.any
  41c154:	ldrh	w8, [x21, #104]
  41c158:	orr	w8, w8, #0x4000
  41c15c:	strh	w8, [x21, #104]
  41c160:	ldr	w8, [x20]
  41c164:	sbfx	w8, w8, #8, #8
  41c168:	and	w8, w8, #0xfffffffe
  41c16c:	cmp	w8, #0x4
  41c170:	b.ne	41c17c <udev_rule_apply_token_to_event+0x81c>  // b.any
  41c174:	mov	x0, x19
  41c178:	bl	40b310 <device_cleanup_devlinks@plt>
  41c17c:	ldrb	w8, [x21, #104]
  41c180:	ldr	x1, [x20, #8]
  41c184:	add	x2, sp, #0x4, lsl #12
  41c188:	add	x2, x2, #0xc8
  41c18c:	cmp	w8, #0x1
  41c190:	cset	w4, ne  // ne = any
  41c194:	mov	w3, #0x400                 	// #1024
  41c198:	mov	x0, x21
  41c19c:	bl	411e1c <udev_event_apply_format>
  41c1a0:	ldrh	w8, [x21, #104]
  41c1a4:	ubfiz	w8, w8, #8, #8
  41c1a8:	cbz	w8, 41dca8 <udev_rule_apply_token_to_event+0x2348>
  41c1ac:	cmp	w8, #0x200
  41c1b0:	b.ne	41e77c <udev_rule_apply_token_to_event+0x2e1c>  // b.any
  41c1b4:	adrp	x1, 434000 <__libc_csu_init+0x60>
  41c1b8:	add	x1, x1, #0x289
  41c1bc:	b	41dcb0 <udev_rule_apply_token_to_event+0x2350>
  41c1c0:	ldr	x1, [x20, #16]
  41c1c4:	add	x2, sp, #0x4, lsl #12
  41c1c8:	add	x2, x2, #0xc0
  41c1cc:	mov	x0, x19
  41c1d0:	mov	x24, x4
  41c1d4:	bl	40aa50 <sd_device_get_property_value@plt>
  41c1d8:	tbnz	w0, #31, 41cce0 <udev_rule_apply_token_to_event+0x1380>
  41c1dc:	ldr	x1, [sp, #16576]
  41c1e0:	b	41cd00 <udev_rule_apply_token_to_event+0x13a0>
  41c1e4:	ldr	x19, [x20, #16]
  41c1e8:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  41c1ec:	add	x1, x1, #0xe54
  41c1f0:	mov	x0, x19
  41c1f4:	bl	40a930 <strcmp@plt>
  41c1f8:	cbz	w0, 41ccf0 <udev_rule_apply_token_to_event+0x1390>
  41c1fc:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  41c200:	add	x1, x1, #0xe59
  41c204:	mov	x0, x19
  41c208:	bl	40a930 <strcmp@plt>
  41c20c:	cbnz	w0, 41f290 <udev_rule_apply_token_to_event+0x3930>
  41c210:	bl	40b320 <detect_virtualization@plt>
  41c214:	bl	40b330 <virtualization_to_string@plt>
  41c218:	b	41ccf8 <udev_rule_apply_token_to_event+0x1398>
  41c21c:	ldr	x1, [x20, #8]
  41c220:	add	x2, sp, #0x4, lsl #12
  41c224:	add	x2, x2, #0xc8
  41c228:	mov	w3, #0x400                 	// #1024
  41c22c:	add	x22, sp, #0x4, lsl #12
  41c230:	mov	x0, x21
  41c234:	mov	w4, wzr
  41c238:	add	x22, x22, #0xc8
  41c23c:	bl	411e1c <udev_event_apply_format>
  41c240:	ldrb	w8, [x20, #1]
  41c244:	lsl	w8, w8, #8
  41c248:	cmp	w8, #0x400
  41c24c:	b.ne	41c258 <udev_rule_apply_token_to_event+0x8f8>  // b.any
  41c250:	mov	x0, x19
  41c254:	bl	40b340 <device_cleanup_tags@plt>
  41c258:	adrp	x1, 438000 <worker_hash_op+0x3df8>
  41c25c:	add	x0, sp, #0x4, lsl #12
  41c260:	add	x1, x1, #0xbe7
  41c264:	add	x0, x0, #0xc8
  41c268:	bl	40ad40 <strspn@plt>
  41c26c:	ldrb	w8, [x22, x0]
  41c270:	cbz	w8, 41cd10 <udev_rule_apply_token_to_event+0x13b0>
  41c274:	ldr	x8, [x26]
  41c278:	cbz	x8, 41cef0 <udev_rule_apply_token_to_event+0x1590>
  41c27c:	ldp	x21, x20, [x8]
  41c280:	b	41cef8 <udev_rule_apply_token_to_event+0x1598>
  41c284:	mov	w8, #0x1                   	// #1
  41c288:	strb	w8, [x21, #104]
  41c28c:	b	41e4c8 <udev_rule_apply_token_to_event+0x2b68>
  41c290:	ldr	x1, [x20, #8]
  41c294:	ldr	w22, [x20, #16]
  41c298:	add	x2, sp, #0x4, lsl #12
  41c29c:	add	x2, x2, #0xc8
  41c2a0:	mov	w3, #0x400                 	// #1024
  41c2a4:	mov	x0, x21
  41c2a8:	mov	w4, wzr
  41c2ac:	bl	411e1c <udev_event_apply_format>
  41c2b0:	add	x0, sp, #0x4, lsl #12
  41c2b4:	add	x0, x0, #0xc8
  41c2b8:	bl	40adf0 <path_is_absolute@plt>
  41c2bc:	tbnz	w0, #0, 41c32c <udev_rule_apply_token_to_event+0x9cc>
  41c2c0:	add	x0, sp, #0x4, lsl #12
  41c2c4:	add	x1, sp, #0x4, lsl #12
  41c2c8:	add	x0, x0, #0xc8
  41c2cc:	add	x1, x1, #0xc8
  41c2d0:	mov	w2, #0x400                 	// #1024
  41c2d4:	mov	w3, wzr
  41c2d8:	bl	40acd0 <util_resolve_subsys_kernel@plt>
  41c2dc:	tbz	w0, #31, 41c32c <udev_rule_apply_token_to_event+0x9cc>
  41c2e0:	add	x1, sp, #0x4, lsl #12
  41c2e4:	add	x1, x1, #0xc0
  41c2e8:	mov	x0, x19
  41c2ec:	bl	40a860 <sd_device_get_syspath@plt>
  41c2f0:	tbnz	w0, #31, 41e2f0 <udev_rule_apply_token_to_event+0x2990>
  41c2f4:	add	x2, sp, #0x4, lsl #12
  41c2f8:	add	x0, sp, #0x38
  41c2fc:	add	x2, x2, #0xc8
  41c300:	mov	w1, #0x400                 	// #1024
  41c304:	bl	40ac50 <strscpy@plt>
  41c308:	ldr	x2, [sp, #16576]
  41c30c:	adrp	x3, 434000 <__libc_csu_init+0x60>
  41c310:	add	x0, sp, #0x4, lsl #12
  41c314:	add	x3, x3, #0x289
  41c318:	add	x0, x0, #0xc8
  41c31c:	add	x4, sp, #0x38
  41c320:	mov	w1, #0x400                 	// #1024
  41c324:	mov	x5, xzr
  41c328:	bl	40b1a0 <strscpyl@plt>
  41c32c:	add	x0, sp, #0x4, lsl #12
  41c330:	add	x0, x0, #0xc8
  41c334:	bl	41f490 <attr_subst_subdir>
  41c338:	cmn	w0, #0x2
  41c33c:	b.eq	41dec0 <udev_rule_apply_token_to_event+0x2560>  // b.none
  41c340:	mov	w21, w0
  41c344:	tbnz	w0, #31, 41d264 <udev_rule_apply_token_to_event+0x1904>
  41c348:	add	x1, sp, #0x4, lsl #12
  41c34c:	add	x2, sp, #0x4, lsl #12
  41c350:	add	x1, x1, #0xc8
  41c354:	add	x2, x2, #0x40
  41c358:	mov	w0, wzr
  41c35c:	bl	40b1b0 <__xstat64@plt>
  41c360:	tbnz	w0, #31, 41dec0 <udev_rule_apply_token_to_event+0x2560>
  41c364:	cbz	w22, 41c90c <udev_rule_apply_token_to_event+0xfac>
  41c368:	ldr	w8, [x25, #16]
  41c36c:	ldr	w10, [x20]
  41c370:	add	w9, w22, #0xfff
  41c374:	eor	w8, w8, w9
  41c378:	tst	w8, #0xfff
  41c37c:	cset	w8, ne  // ne = any
  41c380:	lsl	w9, w10, #16
  41c384:	b	41ce30 <udev_rule_apply_token_to_event+0x14d0>
  41c388:	ldrh	w8, [x21, #104]
  41c38c:	tbnz	w8, #11, 41e4c8 <udev_rule_apply_token_to_event+0x2b68>
  41c390:	and	w9, w9, #0xff00
  41c394:	cmp	w9, #0x500
  41c398:	b.ne	41c3a4 <udev_rule_apply_token_to_event+0xa44>  // b.any
  41c39c:	orr	w8, w8, #0x800
  41c3a0:	strh	w8, [x21, #104]
  41c3a4:	ldr	x8, [x20, #16]
  41c3a8:	cbz	x8, 41e4c8 <udev_rule_apply_token_to_event+0x2b68>
  41c3ac:	sub	w8, w8, #0x1
  41c3b0:	str	w8, [x21, #44]
  41c3b4:	ldr	x8, [x26]
  41c3b8:	cbz	x8, 41da00 <udev_rule_apply_token_to_event+0x20a0>
  41c3bc:	ldp	x22, x20, [x8]
  41c3c0:	b	41da08 <udev_rule_apply_token_to_event+0x20a8>
  41c3c4:	ldrh	w8, [x21, #104]
  41c3c8:	tbnz	w8, #12, 41e4c8 <udev_rule_apply_token_to_event+0x2b68>
  41c3cc:	and	w9, w9, #0xff00
  41c3d0:	cmp	w9, #0x500
  41c3d4:	b.ne	41c3e0 <udev_rule_apply_token_to_event+0xa80>  // b.any
  41c3d8:	orr	w8, w8, #0x1000
  41c3dc:	strh	w8, [x21, #104]
  41c3e0:	ldr	x1, [x20, #8]
  41c3e4:	add	x2, sp, #0x38
  41c3e8:	mov	w3, #0x200                 	// #512
  41c3ec:	mov	x0, x21
  41c3f0:	mov	w4, wzr
  41c3f4:	bl	411e1c <udev_event_apply_format>
  41c3f8:	add	x21, x21, #0x28
  41c3fc:	add	x0, sp, #0x38
  41c400:	mov	x1, x21
  41c404:	bl	40b200 <parse_mode@plt>
  41c408:	ldr	x8, [x26]
  41c40c:	tbnz	w0, #31, 41d228 <udev_rule_apply_token_to_event+0x18c8>
  41c410:	cbz	x8, 41da88 <udev_rule_apply_token_to_event+0x2128>
  41c414:	ldp	x22, x20, [x8]
  41c418:	b	41da90 <udev_rule_apply_token_to_event+0x2130>
  41c41c:	ldrh	w8, [x21, #104]
  41c420:	tbnz	w8, #10, 41e4c8 <udev_rule_apply_token_to_event+0x2b68>
  41c424:	and	w9, w9, #0xff00
  41c428:	cmp	w9, #0x500
  41c42c:	b.ne	41c438 <udev_rule_apply_token_to_event+0xad8>  // b.any
  41c430:	orr	w8, w8, #0x400
  41c434:	strh	w8, [x21, #104]
  41c438:	ldr	x8, [x20, #16]
  41c43c:	cbz	x8, 41e4c8 <udev_rule_apply_token_to_event+0x2b68>
  41c440:	sub	w8, w8, #0x1
  41c444:	str	w8, [x21, #48]
  41c448:	ldr	x8, [x26]
  41c44c:	cbz	x8, 41dad4 <udev_rule_apply_token_to_event+0x2174>
  41c450:	ldp	x22, x20, [x8]
  41c454:	b	41dadc <udev_rule_apply_token_to_event+0x217c>
  41c458:	ldrh	w8, [x21, #104]
  41c45c:	tbnz	w8, #12, 41e4c8 <udev_rule_apply_token_to_event+0x2b68>
  41c460:	and	w9, w9, #0xff00
  41c464:	cmp	w9, #0x500
  41c468:	b.ne	41c474 <udev_rule_apply_token_to_event+0xb14>  // b.any
  41c46c:	orr	w8, w8, #0x1000
  41c470:	strh	w8, [x21, #104]
  41c474:	ldr	x8, [x20, #16]
  41c478:	cbz	x8, 41e4c8 <udev_rule_apply_token_to_event+0x2b68>
  41c47c:	sub	w8, w8, #0x1
  41c480:	str	w8, [x21, #40]
  41c484:	ldr	x8, [x26]
  41c488:	cbz	x8, 41db98 <udev_rule_apply_token_to_event+0x2238>
  41c48c:	ldp	x22, x20, [x8]
  41c490:	b	41dba0 <udev_rule_apply_token_to_event+0x2240>
  41c494:	ldr	x22, [x20, #16]
  41c498:	add	x1, sp, #0x4, lsl #12
  41c49c:	add	x1, x1, #0xc8
  41c4a0:	mov	w2, #0x400                 	// #1024
  41c4a4:	mov	x0, x22
  41c4a8:	mov	w3, wzr
  41c4ac:	bl	40acd0 <util_resolve_subsys_kernel@plt>
  41c4b0:	tbz	w0, #31, 41c4ec <udev_rule_apply_token_to_event+0xb8c>
  41c4b4:	add	x1, sp, #0x4, lsl #12
  41c4b8:	add	x1, x1, #0xc0
  41c4bc:	mov	x0, x19
  41c4c0:	bl	40a860 <sd_device_get_syspath@plt>
  41c4c4:	tbnz	w0, #31, 41c4ec <udev_rule_apply_token_to_event+0xb8c>
  41c4c8:	ldr	x2, [sp, #16576]
  41c4cc:	adrp	x3, 434000 <__libc_csu_init+0x60>
  41c4d0:	add	x0, sp, #0x4, lsl #12
  41c4d4:	add	x3, x3, #0x289
  41c4d8:	add	x0, x0, #0xc8
  41c4dc:	mov	w1, #0x400                 	// #1024
  41c4e0:	mov	x4, x22
  41c4e4:	mov	x5, xzr
  41c4e8:	bl	40b1a0 <strscpyl@plt>
  41c4ec:	add	x0, sp, #0x4, lsl #12
  41c4f0:	add	x0, x0, #0xc8
  41c4f4:	bl	41f490 <attr_subst_subdir>
  41c4f8:	tbnz	w0, #31, 41cd34 <udev_rule_apply_token_to_event+0x13d4>
  41c4fc:	ldr	x1, [x20, #8]
  41c500:	add	x2, sp, #0x38
  41c504:	mov	w3, #0x200                 	// #512
  41c508:	mov	x0, x21
  41c50c:	mov	w4, wzr
  41c510:	bl	411e1c <udev_event_apply_format>
  41c514:	ldr	x8, [x26]
  41c518:	cbz	x8, 41cf7c <udev_rule_apply_token_to_event+0x161c>
  41c51c:	ldp	x23, x20, [x8]
  41c520:	b	41cf84 <udev_rule_apply_token_to_event+0x1624>
  41c524:	add	x1, sp, #0x4, lsl #12
  41c528:	add	x1, x1, #0xc8
  41c52c:	mov	w2, #0x200                 	// #512
  41c530:	mov	w3, #0x1                   	// #1
  41c534:	add	x19, sp, #0x4, lsl #12
  41c538:	mov	x0, x8
  41c53c:	add	x19, x19, #0xc8
  41c540:	bl	40acd0 <util_resolve_subsys_kernel@plt>
  41c544:	tbnz	w0, #31, 41c594 <udev_rule_apply_token_to_event+0xc34>
  41c548:	str	x19, [sp, #16448]
  41c54c:	ldr	w8, [x20]
  41c550:	tbz	w8, #31, 41c58c <udev_rule_apply_token_to_event+0xc2c>
  41c554:	ldr	x2, [sp, #16448]
  41c558:	add	x19, sp, #0x4, lsl #12
  41c55c:	add	x19, x19, #0xc8
  41c560:	cmp	x2, x19
  41c564:	b.eq	41c57c <udev_rule_apply_token_to_event+0xc1c>  // b.none
  41c568:	add	x0, sp, #0x4, lsl #12
  41c56c:	add	x0, x0, #0xc8
  41c570:	mov	w1, #0x200                 	// #512
  41c574:	bl	40ac50 <strscpy@plt>
  41c578:	str	x19, [sp, #16448]
  41c57c:	add	x0, sp, #0x4, lsl #12
  41c580:	add	x0, x0, #0xc8
  41c584:	mov	x1, xzr
  41c588:	bl	40ad60 <delete_trailing_chars@plt>
  41c58c:	ldr	x1, [sp, #16448]
  41c590:	b	41cd00 <udev_rule_apply_token_to_event+0x13a0>
  41c594:	mov	w19, wzr
  41c598:	b	41e4cc <udev_rule_apply_token_to_event+0x2b6c>
  41c59c:	mov	w21, w0
  41c5a0:	tbnz	w0, #31, 41c600 <udev_rule_apply_token_to_event+0xca0>
  41c5a4:	ldr	x0, [sp, #16448]
  41c5a8:	add	x1, sp, #0x38
  41c5ac:	bl	40b350 <sd_device_get_property_first@plt>
  41c5b0:	cbz	x0, 41ce24 <udev_rule_apply_token_to_event+0x14c4>
  41c5b4:	mov	x21, x0
  41c5b8:	b	41c5d0 <udev_rule_apply_token_to_event+0xc70>
  41c5bc:	ldr	x0, [sp, #16448]
  41c5c0:	add	x1, sp, #0x38
  41c5c4:	bl	40b360 <sd_device_get_property_next@plt>
  41c5c8:	mov	x21, x0
  41c5cc:	cbz	x0, 41ce24 <udev_rule_apply_token_to_event+0x14c4>
  41c5d0:	add	x0, sp, #0x4, lsl #12
  41c5d4:	add	x0, x0, #0xc8
  41c5d8:	mov	x1, x21
  41c5dc:	mov	w2, wzr
  41c5e0:	bl	40b370 <fnmatch@plt>
  41c5e4:	cbnz	w0, 41c5bc <udev_rule_apply_token_to_event+0xc5c>
  41c5e8:	ldr	x2, [sp, #56]
  41c5ec:	mov	x0, x19
  41c5f0:	mov	x1, x21
  41c5f4:	bl	40ae90 <device_add_property@plt>
  41c5f8:	tbz	w0, #31, 41c5bc <udev_rule_apply_token_to_event+0xc5c>
  41c5fc:	mov	w21, w0
  41c600:	ldr	x8, [x26]
  41c604:	cbz	x8, 41dda0 <udev_rule_apply_token_to_event+0x2440>
  41c608:	ldp	x22, x20, [x8]
  41c60c:	b	41dda8 <udev_rule_apply_token_to_event+0x2448>
  41c610:	ldr	x0, [sp, #56]
  41c614:	bl	40b380 <strstrip@plt>
  41c618:	mov	x1, x0
  41c61c:	mov	x0, x20
  41c620:	bl	41f2b4 <token_match_string>
  41c624:	and	w19, w0, #0x1
  41c628:	b	41e6e4 <udev_rule_apply_token_to_event+0x2d84>
  41c62c:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  41c630:	adrp	x3, 438000 <worker_hash_op+0x3df8>
  41c634:	add	x1, x1, #0x8da
  41c638:	add	x3, x3, #0x6c8
  41c63c:	mov	w0, #0x1                   	// #1
  41c640:	mov	w2, #0x856                 	// #2134
  41c644:	bl	40a330 <log_oom_internal@plt>
  41c648:	mov	w19, w0
  41c64c:	mov	x21, xzr
  41c650:	b	41d258 <udev_rule_apply_token_to_event+0x18f8>
  41c654:	mov	x20, xzr
  41c658:	mov	x23, xzr
  41c65c:	mov	w0, #0x1                   	// #1
  41c660:	str	xzr, [sp, #16448]
  41c664:	bl	40a2c0 <log_get_max_level_realm@plt>
  41c668:	cmp	w0, #0x7
  41c66c:	mov	x6, xzr
  41c670:	b.ge	41ed58 <udev_rule_apply_token_to_event+0x33f8>  // b.tcont
  41c674:	adrp	x21, 435000 <worker_hash_op+0xdf8>
  41c678:	add	x21, x21, #0x7f
  41c67c:	cmp	x6, #0x0
  41c680:	adrp	x22, 437000 <worker_hash_op+0x2df8>
  41c684:	add	x22, x22, #0xbc0
  41c688:	csel	x5, xzr, x21, eq  // eq = none
  41c68c:	cmp	x23, #0x0
  41c690:	csel	x8, x22, x23, eq  // eq = none
  41c694:	cbz	x20, 41c6a0 <udev_rule_apply_token_to_event+0xd40>
  41c698:	ldr	w9, [x20, #8]
  41c69c:	b	41c6a4 <udev_rule_apply_token_to_event+0xd44>
  41c6a0:	mov	w9, wzr
  41c6a4:	add	x11, sp, #0x4, lsl #12
  41c6a8:	str	x8, [sp, #16]
  41c6ac:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41c6b0:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41c6b4:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41c6b8:	add	x10, sp, #0x38
  41c6bc:	add	x11, x11, #0xc8
  41c6c0:	add	x8, x8, #0xdf3
  41c6c4:	add	x2, x2, #0x8da
  41c6c8:	add	x4, x4, #0x6c8
  41c6cc:	mov	w0, #0x7                   	// #7
  41c6d0:	mov	w3, #0x842                 	// #2114
  41c6d4:	mov	w1, wzr
  41c6d8:	mov	x7, xzr
  41c6dc:	str	w9, [sp, #24]
  41c6e0:	stp	x11, x10, [sp, #32]
  41c6e4:	stp	xzr, x8, [sp]
  41c6e8:	bl	40a730 <log_object_internal@plt>
  41c6ec:	add	x0, sp, #0x4, lsl #12
  41c6f0:	add	x0, x0, #0xc8
  41c6f4:	add	x1, sp, #0x38
  41c6f8:	bl	40b390 <sysctl_write@plt>
  41c6fc:	tbz	w0, #31, 41e4c8 <udev_rule_apply_token_to_event+0x2b68>
  41c700:	ldr	x8, [x26]
  41c704:	mov	w20, w0
  41c708:	cbz	x8, 41d584 <udev_rule_apply_token_to_event+0x1c24>
  41c70c:	ldp	x24, x23, [x8]
  41c710:	b	41d58c <udev_rule_apply_token_to_event+0x1c2c>
  41c714:	mov	x23, xzr
  41c718:	mov	x24, xzr
  41c71c:	mov	w0, #0x1                   	// #1
  41c720:	str	xzr, [sp, #16448]
  41c724:	bl	40a2c0 <log_get_max_level_realm@plt>
  41c728:	cmp	w0, #0x7
  41c72c:	mov	x6, xzr
  41c730:	b.ge	41ed70 <udev_rule_apply_token_to_event+0x3410>  // b.tcont
  41c734:	adrp	x9, 435000 <worker_hash_op+0xdf8>
  41c738:	add	x9, x9, #0x7f
  41c73c:	cmp	x6, #0x0
  41c740:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  41c744:	add	x8, x8, #0xbc0
  41c748:	csel	x5, xzr, x9, eq  // eq = none
  41c74c:	cmp	x24, #0x0
  41c750:	csel	x8, x8, x24, eq  // eq = none
  41c754:	cbz	x23, 41c760 <udev_rule_apply_token_to_event+0xe00>
  41c758:	ldr	w9, [x23, #8]
  41c75c:	b	41c764 <udev_rule_apply_token_to_event+0xe04>
  41c760:	mov	w9, wzr
  41c764:	add	x10, sp, #0x4, lsl #12
  41c768:	str	x8, [sp, #16]
  41c76c:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41c770:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41c774:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41c778:	add	x10, x10, #0xc8
  41c77c:	add	x8, x8, #0x99a
  41c780:	add	x2, x2, #0x8da
  41c784:	add	x4, x4, #0x6c8
  41c788:	mov	w0, #0x7                   	// #7
  41c78c:	mov	w3, #0x6c7                 	// #1735
  41c790:	mov	w1, wzr
  41c794:	mov	x7, xzr
  41c798:	str	w9, [sp, #24]
  41c79c:	str	x10, [sp, #32]
  41c7a0:	stp	xzr, x8, [sp]
  41c7a4:	bl	40a730 <log_object_internal@plt>
  41c7a8:	add	x3, sp, #0x4, lsl #12
  41c7ac:	add	x3, x3, #0xc8
  41c7b0:	add	x4, sp, #0x38
  41c7b4:	mov	w2, #0x1                   	// #1
  41c7b8:	mov	w5, #0x4000                	// #16384
  41c7bc:	mov	x0, x21
  41c7c0:	mov	x1, x22
  41c7c4:	bl	412de8 <udev_event_spawn>
  41c7c8:	cbz	w0, 41c7e4 <udev_rule_apply_token_to_event+0xe84>
  41c7cc:	ldr	x8, [x26]
  41c7d0:	mov	w21, w0
  41c7d4:	tbnz	w0, #31, 41ce3c <udev_rule_apply_token_to_event+0x14dc>
  41c7d8:	cbz	x8, 41d33c <udev_rule_apply_token_to_event+0x19dc>
  41c7dc:	ldp	x23, x22, [x8]
  41c7e0:	b	41d344 <udev_rule_apply_token_to_event+0x19e4>
  41c7e4:	adrp	x21, 437000 <worker_hash_op+0x2df8>
  41c7e8:	adrp	x22, 438000 <worker_hash_op+0x3df8>
  41c7ec:	add	x23, sp, #0x38
  41c7f0:	add	x21, x21, #0x8da
  41c7f4:	add	x22, x22, #0x6c8
  41c7f8:	b	41c838 <udev_rule_apply_token_to_event+0xed8>
  41c7fc:	ldr	w9, [x28, #8]
  41c800:	str	x8, [sp, #16]
  41c804:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41c808:	add	x8, x8, #0x937
  41c80c:	mov	w0, #0x7                   	// #7
  41c810:	mov	w3, #0x6dd                 	// #1757
  41c814:	mov	w1, w25
  41c818:	mov	x2, x21
  41c81c:	mov	x4, x22
  41c820:	mov	x7, xzr
  41c824:	str	x24, [sp, #32]
  41c828:	str	w9, [sp, #24]
  41c82c:	stp	xzr, x8, [sp]
  41c830:	bl	40a730 <log_object_internal@plt>
  41c834:	cbz	x23, 41c90c <udev_rule_apply_token_to_event+0xfac>
  41c838:	ldrb	w8, [x23]
  41c83c:	cbz	w8, 41c90c <udev_rule_apply_token_to_event+0xfac>
  41c840:	mov	w1, #0xa                   	// #10
  41c844:	mov	x0, x23
  41c848:	mov	x24, x23
  41c84c:	bl	40a7d0 <strchr@plt>
  41c850:	mov	x23, x0
  41c854:	cbz	x0, 41c85c <udev_rule_apply_token_to_event+0xefc>
  41c858:	strb	wzr, [x23], #1
  41c85c:	add	x1, sp, #0x4, lsl #12
  41c860:	add	x2, sp, #0x4, lsl #12
  41c864:	add	x1, x1, #0x40
  41c868:	add	x2, x2, #0xc0
  41c86c:	mov	x0, x24
  41c870:	bl	41f5c8 <get_property_from_string>
  41c874:	mov	w25, w0
  41c878:	tbnz	w0, #31, 41c898 <udev_rule_apply_token_to_event+0xf38>
  41c87c:	cbz	w25, 41c834 <udev_rule_apply_token_to_event+0xed4>
  41c880:	ldr	x1, [sp, #16448]
  41c884:	ldr	x2, [sp, #16576]
  41c888:	mov	x0, x19
  41c88c:	bl	40ae90 <device_add_property@plt>
  41c890:	tbz	w0, #31, 41c834 <udev_rule_apply_token_to_event+0xed4>
  41c894:	b	41e4f4 <udev_rule_apply_token_to_event+0x2b94>
  41c898:	ldr	x8, [x26]
  41c89c:	cbz	x8, 41c8a8 <udev_rule_apply_token_to_event+0xf48>
  41c8a0:	ldp	x27, x28, [x8]
  41c8a4:	b	41c8b0 <udev_rule_apply_token_to_event+0xf50>
  41c8a8:	mov	x28, xzr
  41c8ac:	mov	x27, xzr
  41c8b0:	mov	w0, #0x1                   	// #1
  41c8b4:	str	xzr, [sp, #16440]
  41c8b8:	bl	40a2c0 <log_get_max_level_realm@plt>
  41c8bc:	cmp	w0, #0x7
  41c8c0:	mov	x6, xzr
  41c8c4:	b.ge	41c8f4 <udev_rule_apply_token_to_event+0xf94>  // b.tcont
  41c8c8:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  41c8cc:	cmp	x6, #0x0
  41c8d0:	add	x8, x8, #0x7f
  41c8d4:	csel	x5, xzr, x8, eq  // eq = none
  41c8d8:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  41c8dc:	cmp	x27, #0x0
  41c8e0:	add	x8, x8, #0xbc0
  41c8e4:	csel	x8, x8, x27, eq  // eq = none
  41c8e8:	cbnz	x28, 41c7fc <udev_rule_apply_token_to_event+0xe9c>
  41c8ec:	mov	w9, wzr
  41c8f0:	b	41c800 <udev_rule_apply_token_to_event+0xea0>
  41c8f4:	add	x1, sp, #0x4, lsl #12
  41c8f8:	add	x1, x1, #0x38
  41c8fc:	mov	x0, x19
  41c900:	bl	40a780 <sd_device_get_sysname@plt>
  41c904:	ldr	x6, [sp, #16440]
  41c908:	b	41c8c8 <udev_rule_apply_token_to_event+0xf68>
  41c90c:	ldrb	w8, [x20, #1]
  41c910:	cmp	w8, #0x0
  41c914:	cset	w19, eq  // eq = none
  41c918:	b	41e4cc <udev_rule_apply_token_to_event+0x2b6c>
  41c91c:	mov	x25, xzr
  41c920:	mov	x27, xzr
  41c924:	mov	w0, #0x1                   	// #1
  41c928:	str	xzr, [sp, #56]
  41c92c:	bl	40a2c0 <log_get_max_level_realm@plt>
  41c930:	cmp	w0, #0x7
  41c934:	mov	x6, xzr
  41c938:	b.ge	41ed88 <udev_rule_apply_token_to_event+0x3428>  // b.tcont
  41c93c:	adrp	x24, 435000 <worker_hash_op+0xdf8>
  41c940:	add	x24, x24, #0x7f
  41c944:	cmp	x6, #0x0
  41c948:	adrp	x23, 437000 <worker_hash_op+0x2df8>
  41c94c:	add	x23, x23, #0xbc0
  41c950:	csel	x5, xzr, x24, eq  // eq = none
  41c954:	cmp	x27, #0x0
  41c958:	csel	x8, x23, x27, eq  // eq = none
  41c95c:	cbz	x25, 41c968 <udev_rule_apply_token_to_event+0x1008>
  41c960:	ldr	w9, [x25, #8]
  41c964:	b	41c96c <udev_rule_apply_token_to_event+0x100c>
  41c968:	mov	w9, wzr
  41c96c:	add	x10, sp, #0x4, lsl #12
  41c970:	str	x8, [sp, #16]
  41c974:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41c978:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41c97c:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41c980:	add	x10, x10, #0xc8
  41c984:	add	x8, x8, #0x81f
  41c988:	add	x2, x2, #0x8da
  41c98c:	add	x4, x4, #0x6c8
  41c990:	mov	w0, #0x7                   	// #7
  41c994:	mov	w3, #0x681                 	// #1665
  41c998:	mov	w1, wzr
  41c99c:	mov	x7, xzr
  41c9a0:	str	w9, [sp, #24]
  41c9a4:	str	x10, [sp, #32]
  41c9a8:	stp	xzr, x8, [sp]
  41c9ac:	bl	40a730 <log_object_internal@plt>
  41c9b0:	add	x3, sp, #0x4, lsl #12
  41c9b4:	add	x3, x3, #0xc8
  41c9b8:	add	x4, sp, #0x38
  41c9bc:	mov	w2, #0x1                   	// #1
  41c9c0:	mov	w5, #0x4000                	// #16384
  41c9c4:	mov	x0, x21
  41c9c8:	mov	x1, x22
  41c9cc:	bl	412de8 <udev_event_spawn>
  41c9d0:	cbz	w0, 41c9ec <udev_rule_apply_token_to_event+0x108c>
  41c9d4:	ldr	x8, [x26]
  41c9d8:	mov	w22, w0
  41c9dc:	tbnz	w0, #31, 41ce48 <udev_rule_apply_token_to_event+0x14e8>
  41c9e0:	cbz	x8, 41d3d0 <udev_rule_apply_token_to_event+0x1a70>
  41c9e4:	ldp	x25, x21, [x8]
  41c9e8:	b	41d3d8 <udev_rule_apply_token_to_event+0x1a78>
  41c9ec:	adrp	x1, 438000 <worker_hash_op+0x3df8>
  41c9f0:	add	x1, x1, #0x896
  41c9f4:	add	x0, sp, #0x38
  41c9f8:	bl	40ad60 <delete_trailing_chars@plt>
  41c9fc:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  41ca00:	add	x1, x1, #0xb14
  41ca04:	add	x0, sp, #0x38
  41ca08:	bl	40ad70 <util_replace_chars@plt>
  41ca0c:	cbz	x0, 41df94 <udev_rule_apply_token_to_event+0x2634>
  41ca10:	ldr	x8, [x26]
  41ca14:	mov	x22, x0
  41ca18:	cbz	x8, 41ded4 <udev_rule_apply_token_to_event+0x2574>
  41ca1c:	ldp	x26, x25, [x8]
  41ca20:	b	41dedc <udev_rule_apply_token_to_event+0x257c>
  41ca24:	ldrb	w8, [x20, #1]
  41ca28:	lsl	w8, w8, #8
  41ca2c:	cmp	w8, #0x200
  41ca30:	b.eq	41e4c8 <udev_rule_apply_token_to_event+0x2b68>  // b.none
  41ca34:	mov	x0, x19
  41ca38:	mov	x1, x22
  41ca3c:	mov	x2, xzr
  41ca40:	bl	40ae90 <device_add_property@plt>
  41ca44:	tbz	w0, #31, 41e4c8 <udev_rule_apply_token_to_event+0x2b68>
  41ca48:	ldr	x8, [x26]
  41ca4c:	mov	w20, w0
  41ca50:	cbz	x8, 41e968 <udev_rule_apply_token_to_event+0x3008>
  41ca54:	ldp	x23, x21, [x8]
  41ca58:	b	41e970 <udev_rule_apply_token_to_event+0x3010>
  41ca5c:	and	w8, w9, #0xff00
  41ca60:	b	41dec8 <udev_rule_apply_token_to_event+0x2568>
  41ca64:	mov	x21, xzr
  41ca68:	mov	x22, xzr
  41ca6c:	mov	w0, #0x1                   	// #1
  41ca70:	str	xzr, [sp, #56]
  41ca74:	bl	40a2c0 <log_get_max_level_realm@plt>
  41ca78:	cmp	w0, #0x7
  41ca7c:	mov	x6, xzr
  41ca80:	b.ge	41ed9c <udev_rule_apply_token_to_event+0x343c>  // b.tcont
  41ca84:	adrp	x9, 435000 <worker_hash_op+0xdf8>
  41ca88:	add	x9, x9, #0x7f
  41ca8c:	cmp	x6, #0x0
  41ca90:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  41ca94:	add	x8, x8, #0xbc0
  41ca98:	csel	x5, xzr, x9, eq  // eq = none
  41ca9c:	cmp	x22, #0x0
  41caa0:	csel	x8, x8, x22, eq  // eq = none
  41caa4:	cbz	x21, 41cab0 <udev_rule_apply_token_to_event+0x1150>
  41caa8:	ldr	w9, [x21, #8]
  41caac:	b	41cab4 <udev_rule_apply_token_to_event+0x1154>
  41cab0:	mov	w9, wzr
  41cab4:	add	x10, sp, #0x4, lsl #12
  41cab8:	str	x8, [sp, #16]
  41cabc:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41cac0:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41cac4:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41cac8:	add	x10, x10, #0xc8
  41cacc:	add	x8, x8, #0x8cc
  41cad0:	add	x2, x2, #0x8da
  41cad4:	add	x4, x4, #0x6c8
  41cad8:	mov	w0, #0x7                   	// #7
  41cadc:	mov	w3, #0x699                 	// #1689
  41cae0:	mov	w1, wzr
  41cae4:	mov	x7, xzr
  41cae8:	str	w9, [sp, #24]
  41caec:	str	x10, [sp, #32]
  41caf0:	stp	xzr, x8, [sp]
  41caf4:	bl	40a730 <log_object_internal@plt>
  41caf8:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  41cafc:	add	x0, sp, #0x4, lsl #12
  41cb00:	add	x1, x1, #0xa77
  41cb04:	add	x0, x0, #0xc8
  41cb08:	bl	40b120 <fopen64@plt>
  41cb0c:	mov	x21, x0
  41cb10:	cbz	x0, 41cc70 <udev_rule_apply_token_to_event+0x1310>
  41cb14:	add	x3, sp, #0x38
  41cb18:	mov	w1, #0x100000              	// #1048576
  41cb1c:	mov	x0, x21
  41cb20:	mov	w2, wzr
  41cb24:	str	xzr, [sp, #56]
  41cb28:	bl	40b160 <read_line_full@plt>
  41cb2c:	mov	w24, w0
  41cb30:	tbnz	w0, #31, 41cc60 <udev_rule_apply_token_to_event+0x1300>
  41cb34:	adrp	x28, 438000 <worker_hash_op+0x3df8>
  41cb38:	adrp	x22, 437000 <worker_hash_op+0x2df8>
  41cb3c:	adrp	x23, 438000 <worker_hash_op+0x3df8>
  41cb40:	add	x28, x28, #0x937
  41cb44:	add	x22, x22, #0x8da
  41cb48:	add	x23, x23, #0x6c8
  41cb4c:	b	41cbac <udev_rule_apply_token_to_event+0x124c>
  41cb50:	ldr	w9, [x25, #8]
  41cb54:	ldr	x10, [sp, #56]
  41cb58:	mov	w0, #0x7                   	// #7
  41cb5c:	mov	w3, #0x6b4                 	// #1716
  41cb60:	mov	w1, w24
  41cb64:	mov	x2, x22
  41cb68:	mov	x4, x23
  41cb6c:	mov	x7, xzr
  41cb70:	str	x10, [sp, #32]
  41cb74:	str	w9, [sp, #24]
  41cb78:	stp	x28, x8, [sp, #8]
  41cb7c:	str	xzr, [sp]
  41cb80:	bl	40a730 <log_object_internal@plt>
  41cb84:	ldr	x0, [sp, #56]
  41cb88:	bl	40a320 <free@plt>
  41cb8c:	add	x3, sp, #0x38
  41cb90:	mov	w1, #0x100000              	// #1048576
  41cb94:	mov	x0, x21
  41cb98:	mov	w2, wzr
  41cb9c:	str	xzr, [sp, #56]
  41cba0:	bl	40b160 <read_line_full@plt>
  41cba4:	mov	w24, w0
  41cba8:	tbnz	w0, #31, 41cc60 <udev_rule_apply_token_to_event+0x1300>
  41cbac:	cbz	w24, 41d274 <udev_rule_apply_token_to_event+0x1914>
  41cbb0:	ldr	x0, [sp, #56]
  41cbb4:	add	x1, sp, #0x4, lsl #12
  41cbb8:	add	x2, sp, #0x4, lsl #12
  41cbbc:	add	x1, x1, #0x40
  41cbc0:	add	x2, x2, #0xc0
  41cbc4:	bl	41f5c8 <get_property_from_string>
  41cbc8:	mov	w24, w0
  41cbcc:	tbnz	w0, #31, 41cbec <udev_rule_apply_token_to_event+0x128c>
  41cbd0:	cbz	w24, 41cb84 <udev_rule_apply_token_to_event+0x1224>
  41cbd4:	ldr	x1, [sp, #16448]
  41cbd8:	ldr	x2, [sp, #16576]
  41cbdc:	mov	x0, x19
  41cbe0:	bl	40ae90 <device_add_property@plt>
  41cbe4:	tbz	w0, #31, 41cb84 <udev_rule_apply_token_to_event+0x1224>
  41cbe8:	b	41e420 <udev_rule_apply_token_to_event+0x2ac0>
  41cbec:	ldr	x8, [x26]
  41cbf0:	cbz	x8, 41cbfc <udev_rule_apply_token_to_event+0x129c>
  41cbf4:	ldp	x27, x25, [x8]
  41cbf8:	b	41cc04 <udev_rule_apply_token_to_event+0x12a4>
  41cbfc:	mov	x25, xzr
  41cc00:	mov	x27, xzr
  41cc04:	mov	w0, #0x1                   	// #1
  41cc08:	str	xzr, [sp, #16440]
  41cc0c:	bl	40a2c0 <log_get_max_level_realm@plt>
  41cc10:	cmp	w0, #0x7
  41cc14:	mov	x6, xzr
  41cc18:	b.ge	41cc48 <udev_rule_apply_token_to_event+0x12e8>  // b.tcont
  41cc1c:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  41cc20:	cmp	x6, #0x0
  41cc24:	add	x8, x8, #0x7f
  41cc28:	csel	x5, xzr, x8, eq  // eq = none
  41cc2c:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  41cc30:	cmp	x27, #0x0
  41cc34:	add	x8, x8, #0xbc0
  41cc38:	csel	x8, x8, x27, eq  // eq = none
  41cc3c:	cbnz	x25, 41cb50 <udev_rule_apply_token_to_event+0x11f0>
  41cc40:	mov	w9, wzr
  41cc44:	b	41cb54 <udev_rule_apply_token_to_event+0x11f4>
  41cc48:	add	x1, sp, #0x4, lsl #12
  41cc4c:	add	x1, x1, #0x38
  41cc50:	mov	x0, x19
  41cc54:	bl	40a780 <sd_device_get_sysname@plt>
  41cc58:	ldr	x6, [sp, #16440]
  41cc5c:	b	41cc1c <udev_rule_apply_token_to_event+0x12bc>
  41cc60:	ldr	x8, [x26]
  41cc64:	cbz	x8, 41d28c <udev_rule_apply_token_to_event+0x192c>
  41cc68:	ldp	x23, x22, [x8]
  41cc6c:	b	41d294 <udev_rule_apply_token_to_event+0x1934>
  41cc70:	bl	40a3e0 <__errno_location@plt>
  41cc74:	ldr	w22, [x0]
  41cc78:	cmp	w22, #0x2
  41cc7c:	b.ne	41d1b8 <udev_rule_apply_token_to_event+0x1858>  // b.any
  41cc80:	ldrb	w8, [x20, #1]
  41cc84:	lsl	w8, w8, #8
  41cc88:	cmp	w8, #0x100
  41cc8c:	b	41d284 <udev_rule_apply_token_to_event+0x1924>
  41cc90:	ldr	x8, [x26]
  41cc94:	cbz	x8, 41d604 <udev_rule_apply_token_to_event+0x1ca4>
  41cc98:	ldp	x23, x22, [x8]
  41cc9c:	b	41d60c <udev_rule_apply_token_to_event+0x1cac>
  41cca0:	ldr	x8, [x26]
  41cca4:	mov	w21, w0
  41cca8:	cbz	x8, 41d6d8 <udev_rule_apply_token_to_event+0x1d78>
  41ccac:	ldp	x22, x20, [x8]
  41ccb0:	b	41d6e0 <udev_rule_apply_token_to_event+0x1d80>
  41ccb4:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  41ccb8:	adrp	x3, 438000 <worker_hash_op+0x3df8>
  41ccbc:	add	x1, x1, #0x8da
  41ccc0:	add	x3, x3, #0x6c8
  41ccc4:	mov	w0, #0x1                   	// #1
  41ccc8:	mov	w2, #0x79e                 	// #1950
  41cccc:	bl	40a330 <log_oom_internal@plt>
  41ccd0:	mov	w19, w0
  41ccd4:	mov	x23, xzr
  41ccd8:	mov	w20, wzr
  41ccdc:	b	41e5a0 <udev_rule_apply_token_to_event+0x2c40>
  41cce0:	ldr	x1, [x20, #16]
  41cce4:	mov	x0, x24
  41cce8:	bl	40a710 <internal_hashmap_get@plt>
  41ccec:	b	41ccf8 <udev_rule_apply_token_to_event+0x1398>
  41ccf0:	bl	40b3a0 <uname_architecture@plt>
  41ccf4:	bl	40b3b0 <architecture_to_string@plt>
  41ccf8:	mov	x1, x0
  41ccfc:	str	x0, [sp, #16576]
  41cd00:	mov	x0, x20
  41cd04:	bl	41f2b4 <token_match_string>
  41cd08:	and	w19, w0, #0x1
  41cd0c:	b	41e4cc <udev_rule_apply_token_to_event+0x2b6c>
  41cd10:	ldrb	w8, [x20, #1]
  41cd14:	add	x1, sp, #0x4, lsl #12
  41cd18:	add	x1, x1, #0xc8
  41cd1c:	lsl	w8, w8, #8
  41cd20:	cmp	w8, #0x300
  41cd24:	b.ne	41d208 <udev_rule_apply_token_to_event+0x18a8>  // b.any
  41cd28:	mov	x0, x19
  41cd2c:	bl	40b3c0 <device_remove_tag@plt>
  41cd30:	b	41e4c8 <udev_rule_apply_token_to_event+0x2b68>
  41cd34:	ldr	x8, [x26]
  41cd38:	mov	w22, w0
  41cd3c:	cbz	x8, 41d78c <udev_rule_apply_token_to_event+0x1e2c>
  41cd40:	ldp	x21, x20, [x8]
  41cd44:	b	41d794 <udev_rule_apply_token_to_event+0x1e34>
  41cd48:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  41cd4c:	adrp	x3, 438000 <worker_hash_op+0x3df8>
  41cd50:	add	x1, x1, #0x8da
  41cd54:	add	x3, x3, #0x6c8
  41cd58:	mov	w0, #0x1                   	// #1
  41cd5c:	mov	w2, #0x85c                 	// #2140
  41cd60:	b	41d250 <udev_rule_apply_token_to_event+0x18f0>
  41cd64:	mov	x20, xzr
  41cd68:	mov	x22, xzr
  41cd6c:	mov	w0, #0x1                   	// #1
  41cd70:	str	xzr, [sp, #56]
  41cd74:	bl	40a2c0 <log_get_max_level_realm@plt>
  41cd78:	cmp	w0, #0x3
  41cd7c:	mov	x6, xzr
  41cd80:	b.ge	41edb0 <udev_rule_apply_token_to_event+0x3450>  // b.tcont
  41cd84:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  41cd88:	add	x8, x8, #0x7f
  41cd8c:	cmp	x6, #0x0
  41cd90:	adrp	x9, 437000 <worker_hash_op+0x2df8>
  41cd94:	add	x9, x9, #0xbc0
  41cd98:	csel	x5, xzr, x8, eq  // eq = none
  41cd9c:	cmp	x22, #0x0
  41cda0:	csel	x8, x9, x22, eq  // eq = none
  41cda4:	cbz	x20, 41cdb0 <udev_rule_apply_token_to_event+0x1450>
  41cda8:	ldr	w9, [x20, #8]
  41cdac:	b	41cdb4 <udev_rule_apply_token_to_event+0x1454>
  41cdb0:	mov	w9, wzr
  41cdb4:	str	x8, [sp, #16]
  41cdb8:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41cdbc:	add	x8, x8, #0x732
  41cdc0:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41cdc4:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41cdc8:	str	w9, [sp, #24]
  41cdcc:	add	x2, x2, #0x8da
  41cdd0:	add	x4, x4, #0x6c8
  41cdd4:	str	x8, [sp, #8]
  41cdd8:	mov	w0, #0x3                   	// #3
  41cddc:	mov	w3, #0x61d                 	// #1565
  41cde0:	b	41ec14 <udev_rule_apply_token_to_event+0x32b4>
  41cde4:	add	x2, sp, #0x38
  41cde8:	mov	w3, #0x200                 	// #512
  41cdec:	ldr	x1, [x20, #8]
  41cdf0:	mov	x0, x21
  41cdf4:	mov	w4, wzr
  41cdf8:	bl	411e1c <udev_event_apply_format>
  41cdfc:	add	x2, sp, #0x38
  41ce00:	mov	x0, x19
  41ce04:	mov	x1, x22
  41ce08:	bl	40ae90 <device_add_property@plt>
  41ce0c:	tbz	w0, #31, 41e4c8 <udev_rule_apply_token_to_event+0x2b68>
  41ce10:	ldr	x8, [x26]
  41ce14:	mov	w20, w0
  41ce18:	cbz	x8, 41e5b8 <udev_rule_apply_token_to_event+0x2c58>
  41ce1c:	ldp	x23, x21, [x8]
  41ce20:	b	41e5c0 <udev_rule_apply_token_to_event+0x2c60>
  41ce24:	mov	w8, wzr
  41ce28:	ldr	w9, [x20]
  41ce2c:	lsl	w9, w9, #16
  41ce30:	cmp	w8, w9, asr #24
  41ce34:	cset	w19, eq  // eq = none
  41ce38:	b	41e4cc <udev_rule_apply_token_to_event+0x2b6c>
  41ce3c:	cbz	x8, 41de2c <udev_rule_apply_token_to_event+0x24cc>
  41ce40:	ldp	x23, x22, [x8]
  41ce44:	b	41de34 <udev_rule_apply_token_to_event+0x24d4>
  41ce48:	cbz	x8, 41df10 <udev_rule_apply_token_to_event+0x25b0>
  41ce4c:	ldp	x25, x21, [x8]
  41ce50:	b	41df18 <udev_rule_apply_token_to_event+0x25b8>
  41ce54:	ldrb	w8, [x20, #1]
  41ce58:	lsl	w8, w8, #8
  41ce5c:	cmp	w8, #0x100
  41ce60:	cset	w19, eq  // eq = none
  41ce64:	b	41e6e4 <udev_rule_apply_token_to_event+0x2d84>
  41ce68:	ldr	x0, [x20, #8]
  41ce6c:	bl	40a810 <strdup@plt>
  41ce70:	mov	x23, x0
  41ce74:	cbz	x0, 41ced4 <udev_rule_apply_token_to_event+0x1574>
  41ce78:	ldrb	w8, [x20, #1]
  41ce7c:	lsl	w8, w8, #8
  41ce80:	cmp	w8, #0x400
  41ce84:	b.ne	41ce9c <udev_rule_apply_token_to_event+0x153c>  // b.any
  41ce88:	adrp	x1, 46f000 <_DYNAMIC+0x208>
  41ce8c:	ldr	x0, [x21, #56]
  41ce90:	ldr	x1, [x1, #120]
  41ce94:	mov	x2, x1
  41ce98:	bl	40b270 <internal_hashmap_clear@plt>
  41ce9c:	add	x20, x21, #0x38
  41cea0:	mov	x0, x20
  41cea4:	mov	x1, xzr
  41cea8:	bl	40b280 <internal_ordered_hashmap_ensure_allocated@plt>
  41ceac:	tbnz	w0, #31, 41d468 <udev_rule_apply_token_to_event+0x1b08>
  41ceb0:	ldr	x0, [x20]
  41ceb4:	mov	x1, x22
  41ceb8:	mov	x2, x23
  41cebc:	bl	40a820 <hashmap_put@plt>
  41cec0:	tbnz	w0, #31, 41dd78 <udev_rule_apply_token_to_event+0x2418>
  41cec4:	ldr	x8, [x26]
  41cec8:	cbz	x8, 41e508 <udev_rule_apply_token_to_event+0x2ba8>
  41cecc:	ldp	x21, x20, [x8]
  41ced0:	b	41e510 <udev_rule_apply_token_to_event+0x2bb0>
  41ced4:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  41ced8:	adrp	x3, 438000 <worker_hash_op+0x3df8>
  41cedc:	add	x1, x1, #0x8da
  41cee0:	add	x3, x3, #0x6c8
  41cee4:	mov	w0, #0x1                   	// #1
  41cee8:	mov	w2, #0x7a6                 	// #1958
  41ceec:	b	41dd90 <udev_rule_apply_token_to_event+0x2430>
  41cef0:	mov	x20, xzr
  41cef4:	mov	x21, xzr
  41cef8:	mov	w0, #0x1                   	// #1
  41cefc:	str	xzr, [sp, #56]
  41cf00:	bl	40a2c0 <log_get_max_level_realm@plt>
  41cf04:	cmp	w0, #0x3
  41cf08:	mov	x6, xzr
  41cf0c:	b.ge	41edd8 <udev_rule_apply_token_to_event+0x3478>  // b.tcont
  41cf10:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  41cf14:	add	x8, x8, #0x7f
  41cf18:	cmp	x6, #0x0
  41cf1c:	adrp	x9, 437000 <worker_hash_op+0x2df8>
  41cf20:	add	x9, x9, #0xbc0
  41cf24:	csel	x5, xzr, x8, eq  // eq = none
  41cf28:	cmp	x21, #0x0
  41cf2c:	csel	x8, x9, x21, eq  // eq = none
  41cf30:	cbz	x20, 41cf3c <udev_rule_apply_token_to_event+0x15dc>
  41cf34:	ldr	w9, [x20, #8]
  41cf38:	b	41cf40 <udev_rule_apply_token_to_event+0x15e0>
  41cf3c:	mov	w9, wzr
  41cf40:	add	x10, sp, #0x4, lsl #12
  41cf44:	str	x8, [sp, #16]
  41cf48:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41cf4c:	add	x10, x10, #0xc8
  41cf50:	add	x8, x8, #0xc28
  41cf54:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41cf58:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41cf5c:	str	w9, [sp, #24]
  41cf60:	add	x2, x2, #0x8da
  41cf64:	add	x4, x4, #0x6c8
  41cf68:	str	x10, [sp, #32]
  41cf6c:	str	x8, [sp, #8]
  41cf70:	mov	w0, #0x3                   	// #3
  41cf74:	mov	w3, #0x7d5                 	// #2005
  41cf78:	b	41e4b8 <udev_rule_apply_token_to_event+0x2b58>
  41cf7c:	mov	x20, xzr
  41cf80:	mov	x23, xzr
  41cf84:	mov	w0, #0x1                   	// #1
  41cf88:	str	xzr, [sp, #16448]
  41cf8c:	bl	40a2c0 <log_get_max_level_realm@plt>
  41cf90:	cmp	w0, #0x7
  41cf94:	mov	x6, xzr
  41cf98:	b.ge	41edec <udev_rule_apply_token_to_event+0x348c>  // b.tcont
  41cf9c:	adrp	x21, 435000 <worker_hash_op+0xdf8>
  41cfa0:	add	x21, x21, #0x7f
  41cfa4:	cmp	x6, #0x0
  41cfa8:	adrp	x22, 437000 <worker_hash_op+0x2df8>
  41cfac:	add	x22, x22, #0xbc0
  41cfb0:	csel	x5, xzr, x21, eq  // eq = none
  41cfb4:	cmp	x23, #0x0
  41cfb8:	csel	x8, x22, x23, eq  // eq = none
  41cfbc:	cbz	x20, 41cfc8 <udev_rule_apply_token_to_event+0x1668>
  41cfc0:	ldr	w9, [x20, #8]
  41cfc4:	b	41cfcc <udev_rule_apply_token_to_event+0x166c>
  41cfc8:	mov	w9, wzr
  41cfcc:	add	x11, sp, #0x4, lsl #12
  41cfd0:	str	x8, [sp, #16]
  41cfd4:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41cfd8:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41cfdc:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41cfe0:	add	x10, sp, #0x38
  41cfe4:	add	x11, x11, #0xc8
  41cfe8:	add	x8, x8, #0xda9
  41cfec:	add	x2, x2, #0x8da
  41cff0:	add	x4, x4, #0x6c8
  41cff4:	mov	w0, #0x7                   	// #7
  41cff8:	mov	w3, #0x836                 	// #2102
  41cffc:	mov	w1, wzr
  41d000:	mov	x7, xzr
  41d004:	str	w9, [sp, #24]
  41d008:	stp	x11, x10, [sp, #32]
  41d00c:	stp	xzr, x8, [sp]
  41d010:	bl	40a730 <log_object_internal@plt>
  41d014:	add	x0, sp, #0x4, lsl #12
  41d018:	add	x0, x0, #0xc8
  41d01c:	add	x1, sp, #0x38
  41d020:	mov	w2, #0x2c                  	// #44
  41d024:	mov	x3, xzr
  41d028:	bl	40ab80 <write_string_file_ts@plt>
  41d02c:	tbz	w0, #31, 41e4c8 <udev_rule_apply_token_to_event+0x2b68>
  41d030:	ldr	x8, [x26]
  41d034:	mov	w20, w0
  41d038:	cbz	x8, 41e004 <udev_rule_apply_token_to_event+0x26a4>
  41d03c:	ldp	x24, x23, [x8]
  41d040:	b	41e00c <udev_rule_apply_token_to_event+0x26ac>
  41d044:	adrp	x3, 438000 <worker_hash_op+0x3df8>
  41d048:	mov	w2, w0
  41d04c:	add	x3, x3, #0x5ce
  41d050:	b	41d158 <udev_rule_apply_token_to_event+0x17f8>
  41d054:	orr	w8, w8, w24
  41d058:	str	w8, [x21, #96]
  41d05c:	ldr	x1, [x20, #8]
  41d060:	add	x2, sp, #0x4, lsl #12
  41d064:	add	x2, x2, #0xc8
  41d068:	mov	w3, #0x400                 	// #1024
  41d06c:	mov	x0, x21
  41d070:	mov	w4, wzr
  41d074:	bl	411e1c <udev_event_apply_format>
  41d078:	ldr	x8, [x26]
  41d07c:	cbz	x8, 41d088 <udev_rule_apply_token_to_event+0x1728>
  41d080:	ldp	x28, x27, [x8]
  41d084:	b	41d090 <udev_rule_apply_token_to_event+0x1730>
  41d088:	mov	x27, xzr
  41d08c:	mov	x28, xzr
  41d090:	mov	w0, #0x1                   	// #1
  41d094:	str	xzr, [sp, #56]
  41d098:	bl	40a2c0 <log_get_max_level_realm@plt>
  41d09c:	cmp	w0, #0x7
  41d0a0:	mov	x6, xzr
  41d0a4:	b.ge	41edc4 <udev_rule_apply_token_to_event+0x3464>  // b.tcont
  41d0a8:	adrp	x23, 435000 <worker_hash_op+0xdf8>
  41d0ac:	add	x23, x23, #0x7f
  41d0b0:	cmp	x6, #0x0
  41d0b4:	adrp	x25, 437000 <worker_hash_op+0x2df8>
  41d0b8:	add	x25, x25, #0xbc0
  41d0bc:	csel	x5, xzr, x23, eq  // eq = none
  41d0c0:	cmp	x28, #0x0
  41d0c4:	csel	x8, x25, x28, eq  // eq = none
  41d0c8:	cbz	x27, 41d0d4 <udev_rule_apply_token_to_event+0x1774>
  41d0cc:	ldr	w9, [x27, #8]
  41d0d0:	b	41d0d8 <udev_rule_apply_token_to_event+0x1778>
  41d0d4:	mov	w9, wzr
  41d0d8:	add	x10, sp, #0x4, lsl #12
  41d0dc:	str	x8, [sp, #16]
  41d0e0:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41d0e4:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41d0e8:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41d0ec:	add	x10, x10, #0xc8
  41d0f0:	add	x8, x8, #0x9f4
  41d0f4:	add	x2, x2, #0x8da
  41d0f8:	add	x4, x4, #0x6c8
  41d0fc:	mov	w0, #0x7                   	// #7
  41d100:	mov	w3, #0x6fd                 	// #1789
  41d104:	mov	w1, wzr
  41d108:	mov	x7, xzr
  41d10c:	str	w9, [sp, #24]
  41d110:	str	x10, [sp, #32]
  41d114:	stp	xzr, x8, [sp]
  41d118:	bl	40a730 <log_object_internal@plt>
  41d11c:	add	x2, sp, #0x4, lsl #12
  41d120:	add	x2, x2, #0xc8
  41d124:	mov	x0, x19
  41d128:	mov	w1, w22
  41d12c:	mov	w3, wzr
  41d130:	bl	4209d0 <udev_builtin_run>
  41d134:	mov	w22, w0
  41d138:	tbz	w0, #31, 41dd64 <udev_rule_apply_token_to_event+0x2404>
  41d13c:	ldr	x8, [x26]
  41d140:	cbz	x8, 41dcd4 <udev_rule_apply_token_to_event+0x2374>
  41d144:	ldp	x27, x26, [x8]
  41d148:	b	41dcdc <udev_rule_apply_token_to_event+0x237c>
  41d14c:	adrp	x3, 438000 <worker_hash_op+0x3df8>
  41d150:	mov	w2, w0
  41d154:	add	x3, x3, #0x569
  41d158:	add	x4, sp, #0x38
  41d15c:	mov	x0, x19
  41d160:	mov	x1, x23
  41d164:	bl	41b790 <log_unknown_owner>
  41d168:	b	41e4c8 <udev_rule_apply_token_to_event+0x2b68>
  41d16c:	mov	x20, xzr
  41d170:	mov	x22, xzr
  41d174:	mov	w0, #0x1                   	// #1
  41d178:	str	xzr, [sp, #16448]
  41d17c:	bl	40a2c0 <log_get_max_level_realm@plt>
  41d180:	cmp	w0, #0x3
  41d184:	mov	x6, xzr
  41d188:	b.ge	41ee04 <udev_rule_apply_token_to_event+0x34a4>  // b.tcont
  41d18c:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  41d190:	add	x8, x8, #0x7f
  41d194:	cmp	x6, #0x0
  41d198:	adrp	x9, 437000 <worker_hash_op+0x2df8>
  41d19c:	add	x9, x9, #0xbc0
  41d1a0:	csel	x5, xzr, x8, eq  // eq = none
  41d1a4:	cmp	x22, #0x0
  41d1a8:	csel	x8, x9, x22, eq  // eq = none
  41d1ac:	cbz	x20, 41d1c8 <udev_rule_apply_token_to_event+0x1868>
  41d1b0:	ldr	w9, [x20, #8]
  41d1b4:	b	41d1cc <udev_rule_apply_token_to_event+0x186c>
  41d1b8:	ldr	x8, [x26]
  41d1bc:	cbz	x8, 41e24c <udev_rule_apply_token_to_event+0x28ec>
  41d1c0:	ldp	x23, x20, [x8]
  41d1c4:	b	41e254 <udev_rule_apply_token_to_event+0x28f4>
  41d1c8:	mov	w9, wzr
  41d1cc:	add	x10, sp, #0x4, lsl #12
  41d1d0:	str	x8, [sp, #16]
  41d1d4:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41d1d8:	add	x10, x10, #0xc8
  41d1dc:	add	x8, x8, #0x7ab
  41d1e0:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41d1e4:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41d1e8:	str	w9, [sp, #24]
  41d1ec:	add	x2, x2, #0x8da
  41d1f0:	add	x4, x4, #0x6c8
  41d1f4:	str	x10, [sp, #32]
  41d1f8:	str	x8, [sp, #8]
  41d1fc:	mov	w0, #0x3                   	// #3
  41d200:	mov	w3, #0x658                 	// #1624
  41d204:	b	41e6d0 <udev_rule_apply_token_to_event+0x2d70>
  41d208:	mov	x0, x19
  41d20c:	bl	40b3d0 <device_add_tag@plt>
  41d210:	tbz	w0, #31, 41e4c8 <udev_rule_apply_token_to_event+0x2b68>
  41d214:	ldr	x8, [x26]
  41d218:	mov	w20, w0
  41d21c:	cbz	x8, 41eb04 <udev_rule_apply_token_to_event+0x31a4>
  41d220:	ldp	x22, x21, [x8]
  41d224:	b	41eb0c <udev_rule_apply_token_to_event+0x31ac>
  41d228:	mov	w20, w0
  41d22c:	cbz	x8, 41e304 <udev_rule_apply_token_to_event+0x29a4>
  41d230:	ldp	x22, x21, [x8]
  41d234:	b	41e30c <udev_rule_apply_token_to_event+0x29ac>
  41d238:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  41d23c:	adrp	x3, 438000 <worker_hash_op+0x3df8>
  41d240:	add	x1, x1, #0x8da
  41d244:	add	x3, x3, #0x6c8
  41d248:	mov	w0, #0x1                   	// #1
  41d24c:	mov	w2, #0x860                 	// #2144
  41d250:	bl	40a330 <log_oom_internal@plt>
  41d254:	mov	w19, w0
  41d258:	mov	x0, x21
  41d25c:	bl	40a320 <free@plt>
  41d260:	b	41e4cc <udev_rule_apply_token_to_event+0x2b6c>
  41d264:	ldr	x8, [x26]
  41d268:	cbz	x8, 41e394 <udev_rule_apply_token_to_event+0x2a34>
  41d26c:	ldp	x22, x20, [x8]
  41d270:	b	41e39c <udev_rule_apply_token_to_event+0x2a3c>
  41d274:	ldr	x0, [sp, #56]
  41d278:	bl	40a320 <free@plt>
  41d27c:	ldrb	w8, [x20, #1]
  41d280:	cmp	w8, #0x0
  41d284:	cset	w19, eq  // eq = none
  41d288:	b	41e2e4 <udev_rule_apply_token_to_event+0x2984>
  41d28c:	mov	x22, xzr
  41d290:	mov	x23, xzr
  41d294:	mov	w0, #0x1                   	// #1
  41d298:	str	xzr, [sp, #16440]
  41d29c:	bl	40a2c0 <log_get_max_level_realm@plt>
  41d2a0:	cmp	w0, #0x7
  41d2a4:	mov	x6, xzr
  41d2a8:	b.ge	41ee1c <udev_rule_apply_token_to_event+0x34bc>  // b.tcont
  41d2ac:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  41d2b0:	cmp	x6, #0x0
  41d2b4:	add	x8, x8, #0x7f
  41d2b8:	csel	x5, xzr, x8, eq  // eq = none
  41d2bc:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  41d2c0:	cmp	x23, #0x0
  41d2c4:	add	x8, x8, #0xbc0
  41d2c8:	csel	x8, x8, x23, eq  // eq = none
  41d2cc:	cbz	x22, 41d2d8 <udev_rule_apply_token_to_event+0x1978>
  41d2d0:	ldr	w9, [x22, #8]
  41d2d4:	b	41d2dc <udev_rule_apply_token_to_event+0x197c>
  41d2d8:	mov	w9, wzr
  41d2dc:	add	x10, sp, #0x4, lsl #12
  41d2e0:	str	x8, [sp, #16]
  41d2e4:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41d2e8:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41d2ec:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41d2f0:	add	x10, x10, #0xc8
  41d2f4:	add	x8, x8, #0x90f
  41d2f8:	add	x2, x2, #0x8da
  41d2fc:	add	x4, x4, #0x6c8
  41d300:	mov	w0, #0x7                   	// #7
  41d304:	mov	w3, #0x6aa                 	// #1706
  41d308:	mov	w1, w24
  41d30c:	mov	x7, xzr
  41d310:	str	w9, [sp, #24]
  41d314:	str	x10, [sp, #32]
  41d318:	stp	xzr, x8, [sp]
  41d31c:	bl	40a730 <log_object_internal@plt>
  41d320:	ldrb	w8, [x20, #1]
  41d324:	lsl	w8, w8, #8
  41d328:	cmp	w8, #0x100
  41d32c:	cset	w19, eq  // eq = none
  41d330:	ldr	x0, [sp, #56]
  41d334:	bl	40a320 <free@plt>
  41d338:	b	41e2e4 <udev_rule_apply_token_to_event+0x2984>
  41d33c:	mov	x22, xzr
  41d340:	mov	x23, xzr
  41d344:	mov	w0, #0x1                   	// #1
  41d348:	str	xzr, [sp, #16448]
  41d34c:	bl	40a2c0 <log_get_max_level_realm@plt>
  41d350:	cmp	w0, #0x7
  41d354:	mov	x6, xzr
  41d358:	b.ge	41ee34 <udev_rule_apply_token_to_event+0x34d4>  // b.tcont
  41d35c:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  41d360:	cmp	x6, #0x0
  41d364:	add	x8, x8, #0x7f
  41d368:	csel	x5, xzr, x8, eq  // eq = none
  41d36c:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  41d370:	cmp	x23, #0x0
  41d374:	add	x8, x8, #0xbc0
  41d378:	csel	x8, x8, x23, eq  // eq = none
  41d37c:	cbz	x22, 41d388 <udev_rule_apply_token_to_event+0x1a28>
  41d380:	ldr	w9, [x22, #8]
  41d384:	b	41d38c <udev_rule_apply_token_to_event+0x1a2c>
  41d388:	mov	w9, wzr
  41d38c:	add	x10, sp, #0x4, lsl #12
  41d390:	str	x8, [sp, #16]
  41d394:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41d398:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41d39c:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41d3a0:	add	x10, x10, #0xc8
  41d3a4:	add	x8, x8, #0x865
  41d3a8:	add	x2, x2, #0x8da
  41d3ac:	add	x4, x4, #0x6c8
  41d3b0:	mov	w0, #0x7                   	// #7
  41d3b4:	mov	w3, #0x6ce                 	// #1742
  41d3b8:	mov	w1, wzr
  41d3bc:	str	w21, [sp, #40]
  41d3c0:	str	w9, [sp, #24]
  41d3c4:	str	x10, [sp, #32]
  41d3c8:	stp	xzr, x8, [sp]
  41d3cc:	b	41deb8 <udev_rule_apply_token_to_event+0x2558>
  41d3d0:	mov	x21, xzr
  41d3d4:	mov	x25, xzr
  41d3d8:	mov	w0, #0x1                   	// #1
  41d3dc:	str	xzr, [sp, #16448]
  41d3e0:	bl	40a2c0 <log_get_max_level_realm@plt>
  41d3e4:	cmp	w0, #0x7
  41d3e8:	mov	x6, xzr
  41d3ec:	b.ge	41ee4c <udev_rule_apply_token_to_event+0x34ec>  // b.tcont
  41d3f0:	cmp	x6, #0x0
  41d3f4:	csel	x5, xzr, x24, eq  // eq = none
  41d3f8:	cmp	x25, #0x0
  41d3fc:	csel	x8, x23, x25, eq  // eq = none
  41d400:	cbz	x21, 41d40c <udev_rule_apply_token_to_event+0x1aac>
  41d404:	ldr	w9, [x21, #8]
  41d408:	b	41d410 <udev_rule_apply_token_to_event+0x1ab0>
  41d40c:	mov	w9, wzr
  41d410:	add	x10, sp, #0x4, lsl #12
  41d414:	str	x8, [sp, #16]
  41d418:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41d41c:	add	x10, x10, #0xc8
  41d420:	add	x8, x8, #0x865
  41d424:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41d428:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41d42c:	str	w22, [sp, #40]
  41d430:	str	w9, [sp, #24]
  41d434:	add	x2, x2, #0x8da
  41d438:	add	x4, x4, #0x6c8
  41d43c:	str	x10, [sp, #32]
  41d440:	stp	xzr, x8, [sp]
  41d444:	mov	w0, #0x7                   	// #7
  41d448:	mov	w3, #0x688                 	// #1672
  41d44c:	mov	w1, wzr
  41d450:	b	41dfe8 <udev_rule_apply_token_to_event+0x2688>
  41d454:	ldr	x8, [x26]
  41d458:	mov	w21, w0
  41d45c:	cbz	x8, 41e640 <udev_rule_apply_token_to_event+0x2ce0>
  41d460:	ldp	x24, x23, [x8]
  41d464:	b	41e648 <udev_rule_apply_token_to_event+0x2ce8>
  41d468:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  41d46c:	adrp	x3, 438000 <worker_hash_op+0x3df8>
  41d470:	add	x1, x1, #0x8da
  41d474:	add	x3, x3, #0x6c8
  41d478:	mov	w0, #0x1                   	// #1
  41d47c:	mov	w2, #0x7ad                 	// #1965
  41d480:	b	41dd90 <udev_rule_apply_token_to_event+0x2430>
  41d484:	mov	x20, xzr
  41d488:	mov	x22, xzr
  41d48c:	mov	w0, #0x1                   	// #1
  41d490:	str	xzr, [sp, #56]
  41d494:	bl	40a2c0 <log_get_max_level_realm@plt>
  41d498:	cmp	w0, #0x3
  41d49c:	mov	x6, xzr
  41d4a0:	b.ge	41ee64 <udev_rule_apply_token_to_event+0x3504>  // b.tcont
  41d4a4:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  41d4a8:	add	x8, x8, #0x7f
  41d4ac:	cmp	x6, #0x0
  41d4b0:	adrp	x9, 437000 <worker_hash_op+0x2df8>
  41d4b4:	add	x9, x9, #0xbc0
  41d4b8:	csel	x5, xzr, x8, eq  // eq = none
  41d4bc:	cmp	x22, #0x0
  41d4c0:	csel	x8, x9, x22, eq  // eq = none
  41d4c4:	cbz	x20, 41d4d0 <udev_rule_apply_token_to_event+0x1b70>
  41d4c8:	ldr	w9, [x20, #8]
  41d4cc:	b	41d4d4 <udev_rule_apply_token_to_event+0x1b74>
  41d4d0:	mov	w9, wzr
  41d4d4:	str	x8, [sp, #16]
  41d4d8:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41d4dc:	add	x8, x8, #0x78c
  41d4e0:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41d4e4:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41d4e8:	str	w9, [sp, #24]
  41d4ec:	add	x2, x2, #0x8da
  41d4f0:	add	x4, x4, #0x6c8
  41d4f4:	str	x8, [sp, #8]
  41d4f8:	mov	w0, #0x3                   	// #3
  41d4fc:	mov	w3, #0x64c                 	// #1612
  41d500:	b	41ec14 <udev_rule_apply_token_to_event+0x32b4>
  41d504:	mov	x20, xzr
  41d508:	mov	x22, xzr
  41d50c:	mov	w0, #0x1                   	// #1
  41d510:	str	xzr, [sp, #56]
  41d514:	bl	40a2c0 <log_get_max_level_realm@plt>
  41d518:	cmp	w0, #0x3
  41d51c:	mov	x6, xzr
  41d520:	b.ge	41ee78 <udev_rule_apply_token_to_event+0x3518>  // b.tcont
  41d524:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  41d528:	add	x8, x8, #0x7f
  41d52c:	cmp	x6, #0x0
  41d530:	adrp	x9, 437000 <worker_hash_op+0x2df8>
  41d534:	add	x9, x9, #0xbc0
  41d538:	csel	x5, xzr, x8, eq  // eq = none
  41d53c:	cmp	x22, #0x0
  41d540:	csel	x8, x9, x22, eq  // eq = none
  41d544:	cbz	x20, 41d550 <udev_rule_apply_token_to_event+0x1bf0>
  41d548:	ldr	w9, [x20, #8]
  41d54c:	b	41d554 <udev_rule_apply_token_to_event+0x1bf4>
  41d550:	mov	w9, wzr
  41d554:	str	x8, [sp, #16]
  41d558:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41d55c:	add	x8, x8, #0x76a
  41d560:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41d564:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41d568:	str	w9, [sp, #24]
  41d56c:	add	x2, x2, #0x8da
  41d570:	add	x4, x4, #0x6c8
  41d574:	str	x8, [sp, #8]
  41d578:	mov	w0, #0x3                   	// #3
  41d57c:	mov	w3, #0x643                 	// #1603
  41d580:	b	41ec14 <udev_rule_apply_token_to_event+0x32b4>
  41d584:	mov	x23, xzr
  41d588:	mov	x24, xzr
  41d58c:	mov	w0, #0x1                   	// #1
  41d590:	str	xzr, [sp, #16448]
  41d594:	bl	40a2c0 <log_get_max_level_realm@plt>
  41d598:	cmp	w0, #0x3
  41d59c:	mov	x6, xzr
  41d5a0:	b.ge	41ee8c <udev_rule_apply_token_to_event+0x352c>  // b.tcont
  41d5a4:	cmp	x6, #0x0
  41d5a8:	csel	x5, xzr, x21, eq  // eq = none
  41d5ac:	cmp	x24, #0x0
  41d5b0:	csel	x8, x22, x24, eq  // eq = none
  41d5b4:	cbz	x23, 41d5c0 <udev_rule_apply_token_to_event+0x1c60>
  41d5b8:	ldr	w9, [x23, #8]
  41d5bc:	b	41d5c4 <udev_rule_apply_token_to_event+0x1c64>
  41d5c0:	mov	w9, wzr
  41d5c4:	add	x11, sp, #0x4, lsl #12
  41d5c8:	str	x8, [sp, #16]
  41d5cc:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41d5d0:	add	x10, sp, #0x38
  41d5d4:	add	x11, x11, #0xc8
  41d5d8:	add	x8, x8, #0xe12
  41d5dc:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41d5e0:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41d5e4:	str	w9, [sp, #24]
  41d5e8:	add	x2, x2, #0x8da
  41d5ec:	add	x4, x4, #0x6c8
  41d5f0:	stp	x11, x10, [sp, #32]
  41d5f4:	str	x8, [sp, #8]
  41d5f8:	mov	w0, #0x3                   	// #3
  41d5fc:	mov	w3, #0x845                 	// #2117
  41d600:	b	41e388 <udev_rule_apply_token_to_event+0x2a28>
  41d604:	mov	x22, xzr
  41d608:	mov	x23, xzr
  41d60c:	mov	w0, #0x1                   	// #1
  41d610:	str	xzr, [sp, #16584]
  41d614:	bl	40a2c0 <log_get_max_level_realm@plt>
  41d618:	cmp	w0, #0x3
  41d61c:	mov	x6, xzr
  41d620:	b.ge	41eea4 <udev_rule_apply_token_to_event+0x3544>  // b.tcont
  41d624:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  41d628:	add	x8, x8, #0x7f
  41d62c:	cmp	x6, #0x0
  41d630:	adrp	x9, 437000 <worker_hash_op+0x2df8>
  41d634:	add	x9, x9, #0xbc0
  41d638:	csel	x5, xzr, x8, eq  // eq = none
  41d63c:	cmp	x23, #0x0
  41d640:	csel	x8, x9, x23, eq  // eq = none
  41d644:	cbz	x22, 41d650 <udev_rule_apply_token_to_event+0x1cf0>
  41d648:	ldr	w9, [x22, #8]
  41d64c:	b	41d654 <udev_rule_apply_token_to_event+0x1cf4>
  41d650:	mov	w9, wzr
  41d654:	ldr	x10, [x20, #8]
  41d658:	str	x8, [sp, #16]
  41d65c:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41d660:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41d664:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41d668:	add	x8, x8, #0xab6
  41d66c:	add	x2, x2, #0x8da
  41d670:	add	x4, x4, #0x6c8
  41d674:	mov	w0, #0x3                   	// #3
  41d678:	mov	w3, #0x71f                 	// #1823
  41d67c:	str	x10, [sp, #32]
  41d680:	str	w9, [sp, #24]
  41d684:	str	x8, [sp, #8]
  41d688:	b	41e6d0 <udev_rule_apply_token_to_event+0x2d70>
  41d68c:	mov	x20, xzr
  41d690:	mov	x22, xzr
  41d694:	mov	w0, #0x1                   	// #1
  41d698:	str	xzr, [sp, #56]
  41d69c:	bl	40a2c0 <log_get_max_level_realm@plt>
  41d6a0:	cmp	w0, #0x3
  41d6a4:	mov	x6, xzr
  41d6a8:	b.ge	41eebc <udev_rule_apply_token_to_event+0x355c>  // b.tcont
  41d6ac:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  41d6b0:	add	x8, x8, #0x7f
  41d6b4:	cmp	x6, #0x0
  41d6b8:	adrp	x9, 437000 <worker_hash_op+0x2df8>
  41d6bc:	add	x9, x9, #0xbc0
  41d6c0:	csel	x5, xzr, x8, eq  // eq = none
  41d6c4:	cmp	x22, #0x0
  41d6c8:	csel	x8, x9, x22, eq  // eq = none
  41d6cc:	cbz	x20, 41d724 <udev_rule_apply_token_to_event+0x1dc4>
  41d6d0:	ldr	w9, [x20, #8]
  41d6d4:	b	41d728 <udev_rule_apply_token_to_event+0x1dc8>
  41d6d8:	mov	x20, xzr
  41d6dc:	mov	x22, xzr
  41d6e0:	mov	w0, #0x1                   	// #1
  41d6e4:	str	xzr, [sp, #56]
  41d6e8:	bl	40a2c0 <log_get_max_level_realm@plt>
  41d6ec:	cmp	w0, #0x3
  41d6f0:	mov	x6, xzr
  41d6f4:	b.ge	41eed0 <udev_rule_apply_token_to_event+0x3570>  // b.tcont
  41d6f8:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  41d6fc:	add	x8, x8, #0x7f
  41d700:	cmp	x6, #0x0
  41d704:	adrp	x9, 437000 <worker_hash_op+0x2df8>
  41d708:	add	x9, x9, #0xbc0
  41d70c:	csel	x5, xzr, x8, eq  // eq = none
  41d710:	cmp	x22, #0x0
  41d714:	csel	x8, x9, x22, eq  // eq = none
  41d718:	cbz	x20, 41d758 <udev_rule_apply_token_to_event+0x1df8>
  41d71c:	ldr	w9, [x20, #8]
  41d720:	b	41d75c <udev_rule_apply_token_to_event+0x1dfc>
  41d724:	mov	w9, wzr
  41d728:	str	x8, [sp, #16]
  41d72c:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41d730:	add	x8, x8, #0x712
  41d734:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41d738:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41d73c:	str	w9, [sp, #24]
  41d740:	add	x2, x2, #0x8da
  41d744:	add	x4, x4, #0x6c8
  41d748:	str	x8, [sp, #8]
  41d74c:	mov	w0, #0x3                   	// #3
  41d750:	mov	w3, #0x616                 	// #1558
  41d754:	b	41ec14 <udev_rule_apply_token_to_event+0x32b4>
  41d758:	mov	w9, wzr
  41d75c:	str	x8, [sp, #16]
  41d760:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41d764:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41d768:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41d76c:	add	x8, x8, #0x6e7
  41d770:	add	x2, x2, #0x8da
  41d774:	add	x4, x4, #0x6c8
  41d778:	mov	w0, #0x3                   	// #3
  41d77c:	mov	w3, #0x60f                 	// #1551
  41d780:	str	w9, [sp, #24]
  41d784:	str	x8, [sp, #8]
  41d788:	b	41ec14 <udev_rule_apply_token_to_event+0x32b4>
  41d78c:	mov	x20, xzr
  41d790:	mov	x21, xzr
  41d794:	mov	w0, #0x1                   	// #1
  41d798:	str	xzr, [sp, #56]
  41d79c:	bl	40a2c0 <log_get_max_level_realm@plt>
  41d7a0:	cmp	w0, #0x3
  41d7a4:	mov	x6, xzr
  41d7a8:	b.ge	41eee4 <udev_rule_apply_token_to_event+0x3584>  // b.tcont
  41d7ac:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  41d7b0:	add	x8, x8, #0x7f
  41d7b4:	cmp	x6, #0x0
  41d7b8:	adrp	x9, 437000 <worker_hash_op+0x2df8>
  41d7bc:	add	x9, x9, #0xbc0
  41d7c0:	csel	x5, xzr, x8, eq  // eq = none
  41d7c4:	cmp	x21, #0x0
  41d7c8:	csel	x8, x9, x21, eq  // eq = none
  41d7cc:	cbz	x20, 41d7d8 <udev_rule_apply_token_to_event+0x1e78>
  41d7d0:	ldr	w9, [x20, #8]
  41d7d4:	b	41d7dc <udev_rule_apply_token_to_event+0x1e7c>
  41d7d8:	mov	w9, wzr
  41d7dc:	add	x10, sp, #0x4, lsl #12
  41d7e0:	str	x8, [sp, #16]
  41d7e4:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41d7e8:	add	x10, x10, #0xc8
  41d7ec:	add	x8, x8, #0xd74
  41d7f0:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41d7f4:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41d7f8:	str	w9, [sp, #24]
  41d7fc:	add	x2, x2, #0x8da
  41d800:	add	x4, x4, #0x6c8
  41d804:	str	x10, [sp, #32]
  41d808:	stp	xzr, x8, [sp]
  41d80c:	mov	w0, #0x3                   	// #3
  41d810:	mov	w3, #0x831                 	// #2097
  41d814:	mov	w1, w22
  41d818:	b	41e4c0 <udev_rule_apply_token_to_event+0x2b60>
  41d81c:	mov	x21, xzr
  41d820:	mov	x22, xzr
  41d824:	mov	w0, #0x1                   	// #1
  41d828:	str	xzr, [sp, #16448]
  41d82c:	bl	40a2c0 <log_get_max_level_realm@plt>
  41d830:	cmp	w0, #0x7
  41d834:	mov	x6, xzr
  41d838:	b.ge	41eef8 <udev_rule_apply_token_to_event+0x3598>  // b.tcont
  41d83c:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  41d840:	add	x8, x8, #0x7f
  41d844:	cmp	x6, #0x0
  41d848:	adrp	x9, 437000 <worker_hash_op+0x2df8>
  41d84c:	add	x9, x9, #0xbc0
  41d850:	csel	x5, xzr, x8, eq  // eq = none
  41d854:	cmp	x22, #0x0
  41d858:	csel	x8, x9, x22, eq  // eq = none
  41d85c:	cbz	x21, 41d868 <udev_rule_apply_token_to_event+0x1f08>
  41d860:	ldr	w9, [x21, #8]
  41d864:	b	41d86c <udev_rule_apply_token_to_event+0x1f0c>
  41d868:	mov	w9, wzr
  41d86c:	ldr	w10, [x20]
  41d870:	str	x8, [sp, #16]
  41d874:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41d878:	add	x8, x8, #0xb38
  41d87c:	str	w10, [sp, #40]
  41d880:	add	x10, sp, #0x38
  41d884:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41d888:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41d88c:	str	w9, [sp, #24]
  41d890:	add	x2, x2, #0x8da
  41d894:	add	x4, x4, #0x6c8
  41d898:	str	x10, [sp, #32]
  41d89c:	str	x8, [sp, #8]
  41d8a0:	mov	w0, #0x7                   	// #7
  41d8a4:	mov	w3, #0x767                 	// #1895
  41d8a8:	b	41e4b8 <udev_rule_apply_token_to_event+0x2b58>
  41d8ac:	mov	x25, xzr
  41d8b0:	mov	x26, xzr
  41d8b4:	mov	w0, #0x1                   	// #1
  41d8b8:	str	xzr, [sp, #56]
  41d8bc:	bl	40a2c0 <log_get_max_level_realm@plt>
  41d8c0:	cmp	w0, #0x7
  41d8c4:	mov	x23, xzr
  41d8c8:	b.ge	41ef10 <udev_rule_apply_token_to_event+0x35b0>  // b.tcont
  41d8cc:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  41d8d0:	add	x8, x8, #0x7f
  41d8d4:	cmp	x23, #0x0
  41d8d8:	adrp	x9, 437000 <worker_hash_op+0x2df8>
  41d8dc:	add	x9, x9, #0xbc0
  41d8e0:	csel	x19, xzr, x8, eq  // eq = none
  41d8e4:	cmp	x26, #0x0
  41d8e8:	csel	x26, x9, x26, eq  // eq = none
  41d8ec:	cbz	x25, 41d8f4 <udev_rule_apply_token_to_event+0x1f94>
  41d8f0:	ldr	w25, [x25, #8]
  41d8f4:	mov	w0, w22
  41d8f8:	bl	420700 <udev_builtin_name>
  41d8fc:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41d900:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41d904:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41d908:	str	x0, [sp, #32]
  41d90c:	add	x8, x8, #0x9ca
  41d910:	add	x2, x2, #0x8da
  41d914:	add	x4, x4, #0x6c8
  41d918:	mov	w0, #0x7                   	// #7
  41d91c:	mov	w3, #0x6f4                 	// #1780
  41d920:	mov	w1, wzr
  41d924:	mov	x5, x19
  41d928:	mov	x6, x23
  41d92c:	mov	x7, xzr
  41d930:	str	w25, [sp, #24]
  41d934:	stp	x8, x26, [sp, #8]
  41d938:	str	xzr, [sp]
  41d93c:	bl	40a730 <log_object_internal@plt>
  41d940:	ldr	w9, [x21, #100]
  41d944:	ldr	w8, [x20]
  41d948:	tst	w9, w24
  41d94c:	lsl	w8, w8, #16
  41d950:	cset	w9, ne  // ne = any
  41d954:	cmp	w9, w8, asr #24
  41d958:	cset	w19, eq  // eq = none
  41d95c:	b	41e4cc <udev_rule_apply_token_to_event+0x2b6c>
  41d960:	mov	x21, xzr
  41d964:	mov	x22, xzr
  41d968:	mov	w0, #0x1                   	// #1
  41d96c:	str	xzr, [sp, #16448]
  41d970:	bl	40a2c0 <log_get_max_level_realm@plt>
  41d974:	cmp	w0, #0x7
  41d978:	mov	x6, xzr
  41d97c:	b.ge	41ef24 <udev_rule_apply_token_to_event+0x35c4>  // b.tcont
  41d980:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  41d984:	add	x8, x8, #0x7f
  41d988:	cmp	x6, #0x0
  41d98c:	adrp	x9, 437000 <worker_hash_op+0x2df8>
  41d990:	add	x9, x9, #0xbc0
  41d994:	csel	x5, xzr, x8, eq  // eq = none
  41d998:	cmp	x22, #0x0
  41d99c:	csel	x8, x9, x22, eq  // eq = none
  41d9a0:	cbz	x21, 41d9ac <udev_rule_apply_token_to_event+0x204c>
  41d9a4:	ldr	w9, [x21, #8]
  41d9a8:	b	41d9b0 <udev_rule_apply_token_to_event+0x2050>
  41d9ac:	mov	w9, wzr
  41d9b0:	ldr	w10, [x20]
  41d9b4:	str	x8, [sp, #16]
  41d9b8:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41d9bc:	add	x8, x8, #0xb25
  41d9c0:	str	w10, [sp, #40]
  41d9c4:	add	x10, sp, #0x38
  41d9c8:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41d9cc:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41d9d0:	str	w9, [sp, #24]
  41d9d4:	add	x2, x2, #0x8da
  41d9d8:	add	x4, x4, #0x6c8
  41d9dc:	str	x10, [sp, #32]
  41d9e0:	str	x8, [sp, #8]
  41d9e4:	mov	w0, #0x7                   	// #7
  41d9e8:	mov	w3, #0x756                 	// #1878
  41d9ec:	b	41e4b8 <udev_rule_apply_token_to_event+0x2b58>
  41d9f0:	ldr	x8, [x26]
  41d9f4:	cbz	x8, 41e8e0 <udev_rule_apply_token_to_event+0x2f80>
  41d9f8:	ldp	x23, x22, [x8]
  41d9fc:	b	41e8e8 <udev_rule_apply_token_to_event+0x2f88>
  41da00:	mov	x20, xzr
  41da04:	mov	x22, xzr
  41da08:	mov	w0, #0x1                   	// #1
  41da0c:	str	xzr, [sp, #56]
  41da10:	bl	40a2c0 <log_get_max_level_realm@plt>
  41da14:	cmp	w0, #0x7
  41da18:	mov	x6, xzr
  41da1c:	b.ge	41ef3c <udev_rule_apply_token_to_event+0x35dc>  // b.tcont
  41da20:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  41da24:	add	x8, x8, #0x7f
  41da28:	cmp	x6, #0x0
  41da2c:	adrp	x9, 437000 <worker_hash_op+0x2df8>
  41da30:	add	x9, x9, #0xbc0
  41da34:	csel	x5, xzr, x8, eq  // eq = none
  41da38:	cmp	x22, #0x0
  41da3c:	csel	x8, x9, x22, eq  // eq = none
  41da40:	cbz	x20, 41da4c <udev_rule_apply_token_to_event+0x20ec>
  41da44:	ldr	w9, [x20, #8]
  41da48:	b	41da50 <udev_rule_apply_token_to_event+0x20f0>
  41da4c:	mov	w9, wzr
  41da50:	ldr	w10, [x21, #44]
  41da54:	str	x8, [sp, #16]
  41da58:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41da5c:	add	x8, x8, #0xb88
  41da60:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41da64:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41da68:	str	w10, [sp, #32]
  41da6c:	str	w9, [sp, #24]
  41da70:	add	x2, x2, #0x8da
  41da74:	add	x4, x4, #0x6c8
  41da78:	str	x8, [sp, #8]
  41da7c:	mov	w0, #0x7                   	// #7
  41da80:	mov	w3, #0x782                 	// #1922
  41da84:	b	41e4b8 <udev_rule_apply_token_to_event+0x2b58>
  41da88:	mov	x20, xzr
  41da8c:	mov	x22, xzr
  41da90:	mov	w0, #0x1                   	// #1
  41da94:	str	xzr, [sp, #16584]
  41da98:	bl	40a2c0 <log_get_max_level_realm@plt>
  41da9c:	cmp	w0, #0x7
  41daa0:	mov	x6, xzr
  41daa4:	b.ge	41ef50 <udev_rule_apply_token_to_event+0x35f0>  // b.tcont
  41daa8:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  41daac:	add	x8, x8, #0x7f
  41dab0:	cmp	x6, #0x0
  41dab4:	adrp	x9, 437000 <worker_hash_op+0x2df8>
  41dab8:	add	x9, x9, #0xbc0
  41dabc:	csel	x5, xzr, x8, eq  // eq = none
  41dac0:	cmp	x22, #0x0
  41dac4:	csel	x8, x9, x22, eq  // eq = none
  41dac8:	cbz	x20, 41db20 <udev_rule_apply_token_to_event+0x21c0>
  41dacc:	ldr	w9, [x20, #8]
  41dad0:	b	41db24 <udev_rule_apply_token_to_event+0x21c4>
  41dad4:	mov	x20, xzr
  41dad8:	mov	x22, xzr
  41dadc:	mov	w0, #0x1                   	// #1
  41dae0:	str	xzr, [sp, #56]
  41dae4:	bl	40a2c0 <log_get_max_level_realm@plt>
  41dae8:	cmp	w0, #0x7
  41daec:	mov	x6, xzr
  41daf0:	b.ge	41ef68 <udev_rule_apply_token_to_event+0x3608>  // b.tcont
  41daf4:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  41daf8:	add	x8, x8, #0x7f
  41dafc:	cmp	x6, #0x0
  41db00:	adrp	x9, 437000 <worker_hash_op+0x2df8>
  41db04:	add	x9, x9, #0xbc0
  41db08:	csel	x5, xzr, x8, eq  // eq = none
  41db0c:	cmp	x22, #0x0
  41db10:	csel	x8, x9, x22, eq  // eq = none
  41db14:	cbz	x20, 41db5c <udev_rule_apply_token_to_event+0x21fc>
  41db18:	ldr	w9, [x20, #8]
  41db1c:	b	41db60 <udev_rule_apply_token_to_event+0x2200>
  41db20:	mov	w9, wzr
  41db24:	ldr	w10, [x21]
  41db28:	str	x8, [sp, #16]
  41db2c:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41db30:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41db34:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41db38:	add	x8, x8, #0xb79
  41db3c:	add	x2, x2, #0x8da
  41db40:	add	x4, x4, #0x6c8
  41db44:	mov	w0, #0x7                   	// #7
  41db48:	mov	w3, #0x777                 	// #1911
  41db4c:	str	w10, [sp, #32]
  41db50:	str	w9, [sp, #24]
  41db54:	str	x8, [sp, #8]
  41db58:	b	41e4b8 <udev_rule_apply_token_to_event+0x2b58>
  41db5c:	mov	w9, wzr
  41db60:	ldr	w10, [x21, #48]
  41db64:	str	x8, [sp, #16]
  41db68:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41db6c:	add	x8, x8, #0xb97
  41db70:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41db74:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41db78:	str	w10, [sp, #32]
  41db7c:	str	w9, [sp, #24]
  41db80:	add	x2, x2, #0x8da
  41db84:	add	x4, x4, #0x6c8
  41db88:	str	x8, [sp, #8]
  41db8c:	mov	w0, #0x7                   	// #7
  41db90:	mov	w3, #0x78c                 	// #1932
  41db94:	b	41e4b8 <udev_rule_apply_token_to_event+0x2b58>
  41db98:	mov	x20, xzr
  41db9c:	mov	x22, xzr
  41dba0:	mov	w0, #0x1                   	// #1
  41dba4:	str	xzr, [sp, #56]
  41dba8:	bl	40a2c0 <log_get_max_level_realm@plt>
  41dbac:	cmp	w0, #0x7
  41dbb0:	mov	x6, xzr
  41dbb4:	b.ge	41ef7c <udev_rule_apply_token_to_event+0x361c>  // b.tcont
  41dbb8:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  41dbbc:	add	x8, x8, #0x7f
  41dbc0:	cmp	x6, #0x0
  41dbc4:	adrp	x9, 437000 <worker_hash_op+0x2df8>
  41dbc8:	add	x9, x9, #0xbc0
  41dbcc:	csel	x5, xzr, x8, eq  // eq = none
  41dbd0:	cmp	x22, #0x0
  41dbd4:	csel	x8, x9, x22, eq  // eq = none
  41dbd8:	cbz	x20, 41dbe4 <udev_rule_apply_token_to_event+0x2284>
  41dbdc:	ldr	w9, [x20, #8]
  41dbe0:	b	41dbe8 <udev_rule_apply_token_to_event+0x2288>
  41dbe4:	mov	w9, wzr
  41dbe8:	ldr	w10, [x21, #40]
  41dbec:	str	x8, [sp, #16]
  41dbf0:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41dbf4:	add	x8, x8, #0xb79
  41dbf8:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41dbfc:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41dc00:	str	w10, [sp, #32]
  41dc04:	str	w9, [sp, #24]
  41dc08:	add	x2, x2, #0x8da
  41dc0c:	add	x4, x4, #0x6c8
  41dc10:	str	x8, [sp, #8]
  41dc14:	mov	w0, #0x7                   	// #7
  41dc18:	mov	w3, #0x796                 	// #1942
  41dc1c:	b	41e4b8 <udev_rule_apply_token_to_event+0x2b58>
  41dc20:	mov	x21, xzr
  41dc24:	mov	x22, xzr
  41dc28:	mov	w0, #0x1                   	// #1
  41dc2c:	str	xzr, [sp, #56]
  41dc30:	bl	40a2c0 <log_get_max_level_realm@plt>
  41dc34:	cmp	w0, #0x7
  41dc38:	mov	x6, xzr
  41dc3c:	b.ge	41ef90 <udev_rule_apply_token_to_event+0x3630>  // b.tcont
  41dc40:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  41dc44:	add	x8, x8, #0x7f
  41dc48:	cmp	x6, #0x0
  41dc4c:	adrp	x9, 437000 <worker_hash_op+0x2df8>
  41dc50:	add	x9, x9, #0xbc0
  41dc54:	csel	x5, xzr, x8, eq  // eq = none
  41dc58:	cmp	x22, #0x0
  41dc5c:	csel	x8, x9, x22, eq  // eq = none
  41dc60:	cbz	x21, 41dc6c <udev_rule_apply_token_to_event+0x230c>
  41dc64:	ldr	w9, [x21, #8]
  41dc68:	b	41dc70 <udev_rule_apply_token_to_event+0x2310>
  41dc6c:	mov	w9, wzr
  41dc70:	ldr	x10, [x20, #8]
  41dc74:	str	x8, [sp, #16]
  41dc78:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41dc7c:	add	x8, x8, #0xe46
  41dc80:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41dc84:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41dc88:	str	x10, [sp, #32]
  41dc8c:	str	w9, [sp, #24]
  41dc90:	add	x2, x2, #0x8da
  41dc94:	add	x4, x4, #0x6c8
  41dc98:	str	x8, [sp, #8]
  41dc9c:	mov	w0, #0x7                   	// #7
  41dca0:	mov	w3, #0x864                 	// #2148
  41dca4:	b	41e4b8 <udev_rule_apply_token_to_event+0x2b58>
  41dca8:	adrp	x1, 438000 <worker_hash_op+0x3df8>
  41dcac:	add	x1, x1, #0xd08
  41dcb0:	add	x0, sp, #0x4, lsl #12
  41dcb4:	add	x0, x0, #0xc8
  41dcb8:	bl	40ad70 <util_replace_chars@plt>
  41dcbc:	cbz	x0, 41e77c <udev_rule_apply_token_to_event+0x2e1c>
  41dcc0:	ldr	x8, [x26]
  41dcc4:	mov	x20, x0
  41dcc8:	cbz	x8, 41e6f0 <udev_rule_apply_token_to_event+0x2d90>
  41dccc:	ldp	x22, x21, [x8]
  41dcd0:	b	41e6f8 <udev_rule_apply_token_to_event+0x2d98>
  41dcd4:	mov	x26, xzr
  41dcd8:	mov	x27, xzr
  41dcdc:	mov	w0, #0x1                   	// #1
  41dce0:	str	xzr, [sp, #56]
  41dce4:	bl	40a2c0 <log_get_max_level_realm@plt>
  41dce8:	cmp	w0, #0x7
  41dcec:	mov	x6, xzr
  41dcf0:	b.ge	41efa4 <udev_rule_apply_token_to_event+0x3644>  // b.tcont
  41dcf4:	cmp	x6, #0x0
  41dcf8:	csel	x5, xzr, x23, eq  // eq = none
  41dcfc:	cmp	x27, #0x0
  41dd00:	csel	x8, x25, x27, eq  // eq = none
  41dd04:	cbz	x26, 41dd10 <udev_rule_apply_token_to_event+0x23b0>
  41dd08:	ldr	w9, [x26, #8]
  41dd0c:	b	41dd14 <udev_rule_apply_token_to_event+0x23b4>
  41dd10:	mov	w9, wzr
  41dd14:	add	x10, sp, #0x4, lsl #12
  41dd18:	str	x8, [sp, #16]
  41dd1c:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41dd20:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41dd24:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41dd28:	add	x10, x10, #0xc8
  41dd2c:	add	x8, x8, #0xa34
  41dd30:	add	x2, x2, #0x8da
  41dd34:	add	x4, x4, #0x6c8
  41dd38:	mov	w0, #0x7                   	// #7
  41dd3c:	mov	w3, #0x702                 	// #1794
  41dd40:	mov	w1, w22
  41dd44:	mov	x7, xzr
  41dd48:	str	w9, [sp, #24]
  41dd4c:	str	x10, [sp, #32]
  41dd50:	stp	xzr, x8, [sp]
  41dd54:	bl	40a730 <log_object_internal@plt>
  41dd58:	ldr	w8, [x21, #100]
  41dd5c:	orr	w8, w8, w24
  41dd60:	str	w8, [x21, #100]
  41dd64:	ldr	w8, [x20]
  41dd68:	sbfx	w8, w8, #8, #8
  41dd6c:	cmp	w8, w22, lsr #31
  41dd70:	cset	w19, eq  // eq = none
  41dd74:	b	41e4cc <udev_rule_apply_token_to_event+0x2b6c>
  41dd78:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  41dd7c:	adrp	x3, 438000 <worker_hash_op+0x3df8>
  41dd80:	add	x1, x1, #0x8da
  41dd84:	add	x3, x3, #0x6c8
  41dd88:	mov	w0, #0x1                   	// #1
  41dd8c:	mov	w2, #0x7b1                 	// #1969
  41dd90:	bl	40a330 <log_oom_internal@plt>
  41dd94:	mov	w19, w0
  41dd98:	mov	w20, wzr
  41dd9c:	b	41e5a0 <udev_rule_apply_token_to_event+0x2c40>
  41dda0:	mov	x20, xzr
  41dda4:	mov	x22, xzr
  41dda8:	mov	w0, #0x1                   	// #1
  41ddac:	str	xzr, [sp, #56]
  41ddb0:	bl	40a2c0 <log_get_max_level_realm@plt>
  41ddb4:	cmp	w0, #0x3
  41ddb8:	mov	x6, xzr
  41ddbc:	b.ge	41efb8 <udev_rule_apply_token_to_event+0x3658>  // b.tcont
  41ddc0:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  41ddc4:	add	x8, x8, #0x7f
  41ddc8:	cmp	x6, #0x0
  41ddcc:	adrp	x9, 437000 <worker_hash_op+0x2df8>
  41ddd0:	add	x9, x9, #0xbc0
  41ddd4:	csel	x5, xzr, x8, eq  // eq = none
  41ddd8:	cmp	x22, #0x0
  41dddc:	csel	x8, x9, x22, eq  // eq = none
  41dde0:	cbz	x20, 41ddec <udev_rule_apply_token_to_event+0x248c>
  41dde4:	ldr	w9, [x20, #8]
  41dde8:	b	41ddf0 <udev_rule_apply_token_to_event+0x2490>
  41ddec:	mov	w9, wzr
  41ddf0:	add	x10, sp, #0x4, lsl #12
  41ddf4:	str	x8, [sp, #16]
  41ddf8:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41ddfc:	add	x10, x10, #0xc8
  41de00:	add	x8, x8, #0xaee
  41de04:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41de08:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41de0c:	str	w9, [sp, #24]
  41de10:	add	x2, x2, #0x8da
  41de14:	add	x4, x4, #0x6c8
  41de18:	str	x10, [sp, #32]
  41de1c:	str	x8, [sp, #8]
  41de20:	mov	w0, #0x3                   	// #3
  41de24:	mov	w3, #0x72f                 	// #1839
  41de28:	b	41ec14 <udev_rule_apply_token_to_event+0x32b4>
  41de2c:	mov	x22, xzr
  41de30:	mov	x23, xzr
  41de34:	mov	w0, #0x1                   	// #1
  41de38:	str	xzr, [sp, #16448]
  41de3c:	bl	40a2c0 <log_get_max_level_realm@plt>
  41de40:	cmp	w0, #0x4
  41de44:	mov	x6, xzr
  41de48:	b.ge	41efe0 <udev_rule_apply_token_to_event+0x3680>  // b.tcont
  41de4c:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  41de50:	cmp	x6, #0x0
  41de54:	add	x8, x8, #0x7f
  41de58:	csel	x5, xzr, x8, eq  // eq = none
  41de5c:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  41de60:	cmp	x23, #0x0
  41de64:	add	x8, x8, #0xbc0
  41de68:	csel	x8, x8, x23, eq  // eq = none
  41de6c:	cbz	x22, 41de78 <udev_rule_apply_token_to_event+0x2518>
  41de70:	ldr	w9, [x22, #8]
  41de74:	b	41de7c <udev_rule_apply_token_to_event+0x251c>
  41de78:	mov	w9, wzr
  41de7c:	add	x10, sp, #0x4, lsl #12
  41de80:	str	x8, [sp, #16]
  41de84:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41de88:	add	x10, x10, #0xc8
  41de8c:	add	x8, x8, #0x83a
  41de90:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41de94:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41de98:	str	w9, [sp, #24]
  41de9c:	add	x2, x2, #0x8da
  41dea0:	add	x4, x4, #0x6c8
  41dea4:	str	x10, [sp, #32]
  41dea8:	stp	xzr, x8, [sp]
  41deac:	mov	w0, #0x4                   	// #4
  41deb0:	mov	w3, #0x6cc                 	// #1740
  41deb4:	mov	w1, w21
  41deb8:	mov	x7, xzr
  41debc:	bl	40a730 <log_object_internal@plt>
  41dec0:	ldrb	w8, [x20, #1]
  41dec4:	lsl	w8, w8, #8
  41dec8:	cmp	w8, #0x100
  41decc:	cset	w19, eq  // eq = none
  41ded0:	b	41e4cc <udev_rule_apply_token_to_event+0x2b6c>
  41ded4:	mov	x25, xzr
  41ded8:	mov	x26, xzr
  41dedc:	mov	w0, #0x1                   	// #1
  41dee0:	str	xzr, [sp, #16448]
  41dee4:	bl	40a2c0 <log_get_max_level_realm@plt>
  41dee8:	cmp	w0, #0x7
  41deec:	mov	x6, xzr
  41def0:	b.ge	41eff8 <udev_rule_apply_token_to_event+0x3698>  // b.tcont
  41def4:	cmp	x6, #0x0
  41def8:	csel	x5, xzr, x24, eq  // eq = none
  41defc:	cmp	x26, #0x0
  41df00:	csel	x8, x23, x26, eq  // eq = none
  41df04:	cbz	x25, 41df4c <udev_rule_apply_token_to_event+0x25ec>
  41df08:	ldr	w9, [x25, #8]
  41df0c:	b	41df50 <udev_rule_apply_token_to_event+0x25f0>
  41df10:	mov	x21, xzr
  41df14:	mov	x25, xzr
  41df18:	mov	w0, #0x1                   	// #1
  41df1c:	str	xzr, [sp, #16448]
  41df20:	bl	40a2c0 <log_get_max_level_realm@plt>
  41df24:	cmp	w0, #0x4
  41df28:	mov	x6, xzr
  41df2c:	b.ge	41f010 <udev_rule_apply_token_to_event+0x36b0>  // b.tcont
  41df30:	cmp	x6, #0x0
  41df34:	csel	x5, xzr, x24, eq  // eq = none
  41df38:	cmp	x25, #0x0
  41df3c:	csel	x8, x23, x25, eq  // eq = none
  41df40:	cbz	x21, 41dfa8 <udev_rule_apply_token_to_event+0x2648>
  41df44:	ldr	w9, [x21, #8]
  41df48:	b	41dfac <udev_rule_apply_token_to_event+0x264c>
  41df4c:	mov	w9, wzr
  41df50:	add	x10, sp, #0x4, lsl #12
  41df54:	str	x8, [sp, #16]
  41df58:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41df5c:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41df60:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41df64:	add	x10, x10, #0xc8
  41df68:	add	x8, x8, #0x898
  41df6c:	add	x2, x2, #0x8da
  41df70:	add	x4, x4, #0x6c8
  41df74:	mov	w0, #0x7                   	// #7
  41df78:	mov	w3, #0x690                 	// #1680
  41df7c:	mov	w1, wzr
  41df80:	mov	x7, xzr
  41df84:	str	w9, [sp, #24]
  41df88:	stp	x22, x10, [sp, #32]
  41df8c:	stp	xzr, x8, [sp]
  41df90:	bl	40a730 <log_object_internal@plt>
  41df94:	add	x0, sp, #0x38
  41df98:	bl	40a810 <strdup@plt>
  41df9c:	mov	w8, wzr
  41dfa0:	str	x0, [x21, #32]
  41dfa4:	b	41dff4 <udev_rule_apply_token_to_event+0x2694>
  41dfa8:	mov	w9, wzr
  41dfac:	add	x10, sp, #0x4, lsl #12
  41dfb0:	str	x8, [sp, #16]
  41dfb4:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41dfb8:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41dfbc:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41dfc0:	add	x10, x10, #0xc8
  41dfc4:	add	x8, x8, #0x83a
  41dfc8:	add	x2, x2, #0x8da
  41dfcc:	add	x4, x4, #0x6c8
  41dfd0:	mov	w0, #0x4                   	// #4
  41dfd4:	mov	w3, #0x686                 	// #1670
  41dfd8:	mov	w1, w22
  41dfdc:	str	w9, [sp, #24]
  41dfe0:	str	x10, [sp, #32]
  41dfe4:	stp	xzr, x8, [sp]
  41dfe8:	mov	x7, xzr
  41dfec:	bl	40a730 <log_object_internal@plt>
  41dff0:	mov	w8, #0x100                 	// #256
  41dff4:	ldrb	w9, [x20, #1]
  41dff8:	cmp	w8, w9, lsl #8
  41dffc:	cset	w19, eq  // eq = none
  41e000:	b	41e4cc <udev_rule_apply_token_to_event+0x2b6c>
  41e004:	mov	x23, xzr
  41e008:	mov	x24, xzr
  41e00c:	mov	w0, #0x1                   	// #1
  41e010:	str	xzr, [sp, #16448]
  41e014:	bl	40a2c0 <log_get_max_level_realm@plt>
  41e018:	cmp	w0, #0x3
  41e01c:	mov	x6, xzr
  41e020:	b.ge	41f028 <udev_rule_apply_token_to_event+0x36c8>  // b.tcont
  41e024:	cmp	x6, #0x0
  41e028:	csel	x5, xzr, x21, eq  // eq = none
  41e02c:	cmp	x24, #0x0
  41e030:	csel	x8, x22, x24, eq  // eq = none
  41e034:	cbz	x23, 41e040 <udev_rule_apply_token_to_event+0x26e0>
  41e038:	ldr	w9, [x23, #8]
  41e03c:	b	41e044 <udev_rule_apply_token_to_event+0x26e4>
  41e040:	mov	w9, wzr
  41e044:	add	x10, sp, #0x4, lsl #12
  41e048:	str	x8, [sp, #16]
  41e04c:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41e050:	add	x10, x10, #0xc8
  41e054:	add	x8, x8, #0xdc6
  41e058:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41e05c:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41e060:	str	w9, [sp, #24]
  41e064:	add	x2, x2, #0x8da
  41e068:	add	x4, x4, #0x6c8
  41e06c:	str	x10, [sp, #32]
  41e070:	str	x8, [sp, #8]
  41e074:	mov	w0, #0x3                   	// #3
  41e078:	mov	w3, #0x839                 	// #2105
  41e07c:	b	41e388 <udev_rule_apply_token_to_event+0x2a28>
  41e080:	mov	x23, xzr
  41e084:	mov	x24, xzr
  41e088:	mov	w0, #0x1                   	// #1
  41e08c:	str	xzr, [sp, #56]
  41e090:	bl	40a2c0 <log_get_max_level_realm@plt>
  41e094:	cmp	w0, #0x7
  41e098:	mov	x6, xzr
  41e09c:	b.ge	41f040 <udev_rule_apply_token_to_event+0x36e0>  // b.tcont
  41e0a0:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  41e0a4:	add	x8, x8, #0x7f
  41e0a8:	cmp	x6, #0x0
  41e0ac:	adrp	x9, 437000 <worker_hash_op+0x2df8>
  41e0b0:	add	x9, x9, #0xbc0
  41e0b4:	csel	x5, xzr, x8, eq  // eq = none
  41e0b8:	cmp	x24, #0x0
  41e0bc:	csel	x8, x9, x24, eq  // eq = none
  41e0c0:	cbz	x23, 41e0cc <udev_rule_apply_token_to_event+0x276c>
  41e0c4:	ldr	w9, [x23, #8]
  41e0c8:	b	41e0d0 <udev_rule_apply_token_to_event+0x2770>
  41e0cc:	mov	w9, wzr
  41e0d0:	ldr	x10, [x20, #8]
  41e0d4:	str	x8, [sp, #16]
  41e0d8:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41e0dc:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41e0e0:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41e0e4:	add	x8, x8, #0xc6f
  41e0e8:	add	x2, x2, #0x8da
  41e0ec:	add	x4, x4, #0x6c8
  41e0f0:	mov	w0, #0x7                   	// #7
  41e0f4:	mov	w3, #0x7ec                 	// #2028
  41e0f8:	mov	w1, wzr
  41e0fc:	mov	x7, xzr
  41e100:	stp	x22, x10, [sp, #32]
  41e104:	str	w9, [sp, #24]
  41e108:	stp	xzr, x8, [sp]
  41e10c:	bl	40a730 <log_object_internal@plt>
  41e110:	mov	x0, x19
  41e114:	mov	x1, xzr
  41e118:	bl	40aa60 <sd_device_get_devnum@plt>
  41e11c:	tbnz	w0, #31, 41e178 <udev_rule_apply_token_to_event+0x2818>
  41e120:	add	x1, sp, #0x4, lsl #12
  41e124:	add	x1, x1, #0xc0
  41e128:	mov	x0, x19
  41e12c:	bl	40a840 <sd_device_get_devname@plt>
  41e130:	tbnz	w0, #31, 41e168 <udev_rule_apply_token_to_event+0x2808>
  41e134:	ldr	x22, [sp, #16576]
  41e138:	adrp	x1, 438000 <worker_hash_op+0x3df8>
  41e13c:	add	x1, x1, #0x752
  41e140:	mov	w2, #0x5                   	// #5
  41e144:	mov	x0, x22
  41e148:	bl	40a6a0 <strncmp@plt>
  41e14c:	add	x8, x22, #0x5
  41e150:	cmp	w0, #0x0
  41e154:	add	x0, sp, #0x4, lsl #12
  41e158:	csel	x1, x8, xzr, eq  // eq = none
  41e15c:	add	x0, x0, #0xc8
  41e160:	bl	40a880 <strcmp_ptr@plt>
  41e164:	cbz	w0, 41e178 <udev_rule_apply_token_to_event+0x2818>
  41e168:	ldr	x8, [x26]
  41e16c:	cbz	x8, 41e1c4 <udev_rule_apply_token_to_event+0x2864>
  41e170:	ldp	x22, x21, [x8]
  41e174:	b	41e1cc <udev_rule_apply_token_to_event+0x286c>
  41e178:	add	x20, x21, #0x18
  41e17c:	add	x1, sp, #0x4, lsl #12
  41e180:	add	x1, x1, #0xc8
  41e184:	mov	x0, x20
  41e188:	bl	40afb0 <free_and_strdup@plt>
  41e18c:	tbnz	w0, #31, 41e1a0 <udev_rule_apply_token_to_event+0x2840>
  41e190:	ldr	x8, [x26]
  41e194:	cbz	x8, 41e434 <udev_rule_apply_token_to_event+0x2ad4>
  41e198:	ldp	x22, x21, [x8]
  41e19c:	b	41e43c <udev_rule_apply_token_to_event+0x2adc>
  41e1a0:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  41e1a4:	adrp	x3, 438000 <worker_hash_op+0x3df8>
  41e1a8:	add	x1, x1, #0x8da
  41e1ac:	add	x3, x3, #0x6c8
  41e1b0:	mov	w0, #0x1                   	// #1
  41e1b4:	mov	w2, #0x7f7                 	// #2039
  41e1b8:	bl	40a330 <log_oom_internal@plt>
  41e1bc:	mov	w19, w0
  41e1c0:	b	41e4cc <udev_rule_apply_token_to_event+0x2b6c>
  41e1c4:	mov	x21, xzr
  41e1c8:	mov	x22, xzr
  41e1cc:	mov	w0, #0x1                   	// #1
  41e1d0:	str	xzr, [sp, #56]
  41e1d4:	bl	40a2c0 <log_get_max_level_realm@plt>
  41e1d8:	cmp	w0, #0x3
  41e1dc:	mov	x6, xzr
  41e1e0:	b.ge	41efcc <udev_rule_apply_token_to_event+0x366c>  // b.tcont
  41e1e4:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  41e1e8:	add	x8, x8, #0x7f
  41e1ec:	cmp	x6, #0x0
  41e1f0:	adrp	x9, 437000 <worker_hash_op+0x2df8>
  41e1f4:	add	x9, x9, #0xbc0
  41e1f8:	csel	x5, xzr, x8, eq  // eq = none
  41e1fc:	cmp	x22, #0x0
  41e200:	csel	x8, x9, x22, eq  // eq = none
  41e204:	cbz	x21, 41e210 <udev_rule_apply_token_to_event+0x28b0>
  41e208:	ldr	w9, [x21, #8]
  41e20c:	b	41e214 <udev_rule_apply_token_to_event+0x28b4>
  41e210:	mov	w9, wzr
  41e214:	ldr	x10, [x20, #8]
  41e218:	str	x8, [sp, #16]
  41e21c:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41e220:	add	x8, x8, #0xca8
  41e224:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41e228:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41e22c:	str	x10, [sp, #32]
  41e230:	str	w9, [sp, #24]
  41e234:	add	x2, x2, #0x8da
  41e238:	add	x4, x4, #0x6c8
  41e23c:	str	x8, [sp, #8]
  41e240:	mov	w0, #0x3                   	// #3
  41e244:	mov	w3, #0x7f3                 	// #2035
  41e248:	b	41e4b8 <udev_rule_apply_token_to_event+0x2b58>
  41e24c:	mov	x20, xzr
  41e250:	mov	x23, xzr
  41e254:	mov	w0, #0x1                   	// #1
  41e258:	str	xzr, [sp, #56]
  41e25c:	bl	40a2c0 <log_get_max_level_realm@plt>
  41e260:	cmp	w0, #0x3
  41e264:	mov	x6, xzr
  41e268:	b.ge	41f054 <udev_rule_apply_token_to_event+0x36f4>  // b.tcont
  41e26c:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  41e270:	cmp	x6, #0x0
  41e274:	add	x8, x8, #0x7f
  41e278:	csel	x5, xzr, x8, eq  // eq = none
  41e27c:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  41e280:	cmp	x23, #0x0
  41e284:	add	x8, x8, #0xbc0
  41e288:	csel	x8, x8, x23, eq  // eq = none
  41e28c:	cbz	x20, 41e298 <udev_rule_apply_token_to_event+0x2938>
  41e290:	ldr	w9, [x20, #8]
  41e294:	b	41e29c <udev_rule_apply_token_to_event+0x293c>
  41e298:	mov	w9, wzr
  41e29c:	add	x10, sp, #0x4, lsl #12
  41e2a0:	str	x8, [sp, #16]
  41e2a4:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41e2a8:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41e2ac:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41e2b0:	add	x10, x10, #0xc8
  41e2b4:	add	x8, x8, #0x8f1
  41e2b8:	add	x2, x2, #0x8da
  41e2bc:	add	x4, x4, #0x6c8
  41e2c0:	mov	w0, #0x3                   	// #3
  41e2c4:	mov	w3, #0x69f                 	// #1695
  41e2c8:	mov	w1, w22
  41e2cc:	mov	x7, xzr
  41e2d0:	str	w9, [sp, #24]
  41e2d4:	str	x10, [sp, #32]
  41e2d8:	stp	xzr, x8, [sp]
  41e2dc:	bl	40a730 <log_object_internal@plt>
  41e2e0:	mov	w19, w0
  41e2e4:	mov	x0, x21
  41e2e8:	bl	40b110 <safe_fclose@plt>
  41e2ec:	b	41e4cc <udev_rule_apply_token_to_event+0x2b6c>
  41e2f0:	ldr	x8, [x26]
  41e2f4:	mov	w21, w0
  41e2f8:	cbz	x8, 41eb98 <udev_rule_apply_token_to_event+0x3238>
  41e2fc:	ldp	x22, x20, [x8]
  41e300:	b	41eba0 <udev_rule_apply_token_to_event+0x3240>
  41e304:	mov	x21, xzr
  41e308:	mov	x22, xzr
  41e30c:	mov	w0, #0x1                   	// #1
  41e310:	str	xzr, [sp, #16584]
  41e314:	bl	40a2c0 <log_get_max_level_realm@plt>
  41e318:	cmp	w0, #0x3
  41e31c:	mov	x6, xzr
  41e320:	b.ge	41f068 <udev_rule_apply_token_to_event+0x3708>  // b.tcont
  41e324:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  41e328:	add	x8, x8, #0x7f
  41e32c:	cmp	x6, #0x0
  41e330:	adrp	x9, 437000 <worker_hash_op+0x2df8>
  41e334:	add	x9, x9, #0xbc0
  41e338:	csel	x5, xzr, x8, eq  // eq = none
  41e33c:	cmp	x22, #0x0
  41e340:	csel	x8, x9, x22, eq  // eq = none
  41e344:	cbz	x21, 41e350 <udev_rule_apply_token_to_event+0x29f0>
  41e348:	ldr	w9, [x21, #8]
  41e34c:	b	41e354 <udev_rule_apply_token_to_event+0x29f4>
  41e350:	mov	w9, wzr
  41e354:	str	x8, [sp, #16]
  41e358:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41e35c:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41e360:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41e364:	add	x10, sp, #0x38
  41e368:	add	x8, x8, #0xb4b
  41e36c:	add	x2, x2, #0x8da
  41e370:	add	x4, x4, #0x6c8
  41e374:	mov	w0, #0x3                   	// #3
  41e378:	mov	w3, #0x775                 	// #1909
  41e37c:	str	w9, [sp, #24]
  41e380:	str	x10, [sp, #32]
  41e384:	str	x8, [sp, #8]
  41e388:	str	xzr, [sp]
  41e38c:	mov	w1, w20
  41e390:	b	41e4c0 <udev_rule_apply_token_to_event+0x2b60>
  41e394:	mov	x20, xzr
  41e398:	mov	x22, xzr
  41e39c:	mov	w0, #0x1                   	// #1
  41e3a0:	str	xzr, [sp, #56]
  41e3a4:	bl	40a2c0 <log_get_max_level_realm@plt>
  41e3a8:	cmp	w0, #0x3
  41e3ac:	mov	x6, xzr
  41e3b0:	b.ge	41f080 <udev_rule_apply_token_to_event+0x3720>  // b.tcont
  41e3b4:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  41e3b8:	add	x8, x8, #0x7f
  41e3bc:	cmp	x6, #0x0
  41e3c0:	adrp	x9, 437000 <worker_hash_op+0x2df8>
  41e3c4:	add	x9, x9, #0xbc0
  41e3c8:	csel	x5, xzr, x8, eq  // eq = none
  41e3cc:	cmp	x22, #0x0
  41e3d0:	csel	x8, x9, x22, eq  // eq = none
  41e3d4:	cbz	x20, 41e3e0 <udev_rule_apply_token_to_event+0x2a80>
  41e3d8:	ldr	w9, [x20, #8]
  41e3dc:	b	41e3e4 <udev_rule_apply_token_to_event+0x2a84>
  41e3e0:	mov	w9, wzr
  41e3e4:	add	x10, sp, #0x4, lsl #12
  41e3e8:	str	x8, [sp, #16]
  41e3ec:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41e3f0:	add	x10, x10, #0xc8
  41e3f4:	add	x8, x8, #0x7f0
  41e3f8:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41e3fc:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41e400:	str	w9, [sp, #24]
  41e404:	add	x2, x2, #0x8da
  41e408:	add	x4, x4, #0x6c8
  41e40c:	str	x10, [sp, #32]
  41e410:	str	x8, [sp, #8]
  41e414:	mov	w0, #0x3                   	// #3
  41e418:	mov	w3, #0x671                 	// #1649
  41e41c:	b	41ec14 <udev_rule_apply_token_to_event+0x32b4>
  41e420:	ldr	x8, [x26]
  41e424:	mov	w24, w0
  41e428:	cbz	x8, 41ec2c <udev_rule_apply_token_to_event+0x32cc>
  41e42c:	ldp	x22, x20, [x8]
  41e430:	b	41ec34 <udev_rule_apply_token_to_event+0x32d4>
  41e434:	mov	x21, xzr
  41e438:	mov	x22, xzr
  41e43c:	mov	w0, #0x1                   	// #1
  41e440:	str	xzr, [sp, #56]
  41e444:	bl	40a2c0 <log_get_max_level_realm@plt>
  41e448:	cmp	w0, #0x7
  41e44c:	mov	x6, xzr
  41e450:	b.ge	41f094 <udev_rule_apply_token_to_event+0x3734>  // b.tcont
  41e454:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  41e458:	add	x8, x8, #0x7f
  41e45c:	cmp	x6, #0x0
  41e460:	adrp	x9, 437000 <worker_hash_op+0x2df8>
  41e464:	add	x9, x9, #0xbc0
  41e468:	csel	x5, xzr, x8, eq  // eq = none
  41e46c:	cmp	x22, #0x0
  41e470:	csel	x8, x9, x22, eq  // eq = none
  41e474:	cbz	x21, 41e480 <udev_rule_apply_token_to_event+0x2b20>
  41e478:	ldr	w9, [x21, #8]
  41e47c:	b	41e484 <udev_rule_apply_token_to_event+0x2b24>
  41e480:	mov	w9, wzr
  41e484:	ldr	x10, [x20]
  41e488:	str	x8, [sp, #16]
  41e48c:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41e490:	add	x8, x8, #0xcf8
  41e494:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41e498:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41e49c:	str	x10, [sp, #32]
  41e4a0:	str	w9, [sp, #24]
  41e4a4:	add	x2, x2, #0x8da
  41e4a8:	add	x4, x4, #0x6c8
  41e4ac:	str	x8, [sp, #8]
  41e4b0:	mov	w0, #0x7                   	// #7
  41e4b4:	mov	w3, #0x7f9                 	// #2041
  41e4b8:	mov	w1, wzr
  41e4bc:	str	xzr, [sp]
  41e4c0:	mov	x7, xzr
  41e4c4:	bl	40a730 <log_object_internal@plt>
  41e4c8:	mov	w19, #0x1                   	// #1
  41e4cc:	mov	w0, w19
  41e4d0:	add	sp, sp, #0x4, lsl #12
  41e4d4:	add	sp, sp, #0x4d0
  41e4d8:	ldp	x20, x19, [sp, #80]
  41e4dc:	ldp	x22, x21, [sp, #64]
  41e4e0:	ldp	x24, x23, [sp, #48]
  41e4e4:	ldp	x26, x25, [sp, #32]
  41e4e8:	ldp	x28, x27, [sp, #16]
  41e4ec:	ldp	x29, x30, [sp], #96
  41e4f0:	ret
  41e4f4:	ldr	x8, [x26]
  41e4f8:	mov	w24, w0
  41e4fc:	cbz	x8, 41ecc8 <udev_rule_apply_token_to_event+0x3368>
  41e500:	ldp	x21, x20, [x8]
  41e504:	b	41ecd0 <udev_rule_apply_token_to_event+0x3370>
  41e508:	mov	x20, xzr
  41e50c:	mov	x21, xzr
  41e510:	mov	w0, #0x1                   	// #1
  41e514:	str	xzr, [sp, #16584]
  41e518:	bl	40a2c0 <log_get_max_level_realm@plt>
  41e51c:	cmp	w0, #0x7
  41e520:	mov	x6, xzr
  41e524:	b.ge	41f0a8 <udev_rule_apply_token_to_event+0x3748>  // b.tcont
  41e528:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  41e52c:	add	x8, x8, #0x7f
  41e530:	cmp	x6, #0x0
  41e534:	adrp	x9, 437000 <worker_hash_op+0x2df8>
  41e538:	add	x9, x9, #0xbc0
  41e53c:	csel	x5, xzr, x8, eq  // eq = none
  41e540:	cmp	x21, #0x0
  41e544:	csel	x8, x9, x21, eq  // eq = none
  41e548:	cbz	x20, 41e554 <udev_rule_apply_token_to_event+0x2bf4>
  41e54c:	ldr	w9, [x20, #8]
  41e550:	b	41e558 <udev_rule_apply_token_to_event+0x2bf8>
  41e554:	mov	w9, wzr
  41e558:	str	x8, [sp, #16]
  41e55c:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41e560:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41e564:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41e568:	add	x8, x8, #0xba6
  41e56c:	add	x2, x2, #0x8da
  41e570:	add	x4, x4, #0x6c8
  41e574:	mov	w0, #0x7                   	// #7
  41e578:	mov	w3, #0x7b2                 	// #1970
  41e57c:	mov	w1, wzr
  41e580:	mov	x7, xzr
  41e584:	stp	x22, x23, [sp, #32]
  41e588:	str	w9, [sp, #24]
  41e58c:	stp	xzr, x8, [sp]
  41e590:	bl	40a730 <log_object_internal@plt>
  41e594:	mov	x22, xzr
  41e598:	mov	x23, xzr
  41e59c:	mov	w20, #0x1                   	// #1
  41e5a0:	mov	x0, x23
  41e5a4:	bl	40a320 <free@plt>
  41e5a8:	mov	x0, x22
  41e5ac:	bl	40a320 <free@plt>
  41e5b0:	tbnz	w20, #0, 41e4c8 <udev_rule_apply_token_to_event+0x2b68>
  41e5b4:	b	41e4cc <udev_rule_apply_token_to_event+0x2b6c>
  41e5b8:	mov	x21, xzr
  41e5bc:	mov	x23, xzr
  41e5c0:	mov	w0, #0x1                   	// #1
  41e5c4:	str	xzr, [sp, #16448]
  41e5c8:	bl	40a2c0 <log_get_max_level_realm@plt>
  41e5cc:	cmp	w0, #0x3
  41e5d0:	mov	x6, xzr
  41e5d4:	b.ge	41f0c0 <udev_rule_apply_token_to_event+0x3760>  // b.tcont
  41e5d8:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  41e5dc:	add	x8, x8, #0x7f
  41e5e0:	cmp	x6, #0x0
  41e5e4:	adrp	x9, 437000 <worker_hash_op+0x2df8>
  41e5e8:	add	x9, x9, #0xbc0
  41e5ec:	csel	x5, xzr, x8, eq  // eq = none
  41e5f0:	cmp	x23, #0x0
  41e5f4:	csel	x8, x9, x23, eq  // eq = none
  41e5f8:	cbz	x21, 41e604 <udev_rule_apply_token_to_event+0x2ca4>
  41e5fc:	ldr	w9, [x21, #8]
  41e600:	b	41e608 <udev_rule_apply_token_to_event+0x2ca8>
  41e604:	mov	w9, wzr
  41e608:	str	x8, [sp, #16]
  41e60c:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41e610:	add	x10, sp, #0x38
  41e614:	add	x8, x8, #0xa8d
  41e618:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41e61c:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41e620:	str	w9, [sp, #24]
  41e624:	add	x2, x2, #0x8da
  41e628:	add	x4, x4, #0x6c8
  41e62c:	stp	x22, x10, [sp, #32]
  41e630:	str	x8, [sp, #8]
  41e634:	mov	w0, #0x3                   	// #3
  41e638:	mov	w3, #0x7cc                 	// #1996
  41e63c:	b	41eb8c <udev_rule_apply_token_to_event+0x322c>
  41e640:	mov	x23, xzr
  41e644:	mov	x24, xzr
  41e648:	mov	w0, #0x1                   	// #1
  41e64c:	str	xzr, [sp, #16584]
  41e650:	bl	40a2c0 <log_get_max_level_realm@plt>
  41e654:	cmp	w0, #0x3
  41e658:	mov	x6, xzr
  41e65c:	b.ge	41f0d8 <udev_rule_apply_token_to_event+0x3778>  // b.tcont
  41e660:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  41e664:	add	x8, x8, #0x7f
  41e668:	cmp	x6, #0x0
  41e66c:	adrp	x9, 437000 <worker_hash_op+0x2df8>
  41e670:	add	x9, x9, #0xbc0
  41e674:	csel	x5, xzr, x8, eq  // eq = none
  41e678:	cmp	x24, #0x0
  41e67c:	csel	x8, x9, x24, eq  // eq = none
  41e680:	cbz	x23, 41e68c <udev_rule_apply_token_to_event+0x2d2c>
  41e684:	ldr	w9, [x23, #8]
  41e688:	b	41e690 <udev_rule_apply_token_to_event+0x2d30>
  41e68c:	mov	w9, wzr
  41e690:	ldr	x10, [sp, #56]
  41e694:	ldr	x11, [x20, #8]
  41e698:	str	x8, [sp, #16]
  41e69c:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41e6a0:	cmp	x10, #0x0
  41e6a4:	csel	x10, x22, x10, eq  // eq = none
  41e6a8:	add	x8, x8, #0xa8d
  41e6ac:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41e6b0:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41e6b4:	stp	x11, x10, [sp, #32]
  41e6b8:	str	w9, [sp, #24]
  41e6bc:	add	x2, x2, #0x8da
  41e6c0:	add	x4, x4, #0x6c8
  41e6c4:	str	x8, [sp, #8]
  41e6c8:	mov	w0, #0x3                   	// #3
  41e6cc:	mov	w3, #0x726                 	// #1830
  41e6d0:	mov	w1, w21
  41e6d4:	mov	x7, xzr
  41e6d8:	str	xzr, [sp]
  41e6dc:	bl	40a730 <log_object_internal@plt>
  41e6e0:	mov	w19, w0
  41e6e4:	ldr	x0, [sp, #56]
  41e6e8:	bl	40a320 <free@plt>
  41e6ec:	b	41e4cc <udev_rule_apply_token_to_event+0x2b6c>
  41e6f0:	mov	x21, xzr
  41e6f4:	mov	x22, xzr
  41e6f8:	mov	w0, #0x1                   	// #1
  41e6fc:	str	xzr, [sp, #56]
  41e700:	bl	40a2c0 <log_get_max_level_realm@plt>
  41e704:	cmp	w0, #0x7
  41e708:	mov	x6, xzr
  41e70c:	b.ge	41f0f0 <udev_rule_apply_token_to_event+0x3790>  // b.tcont
  41e710:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  41e714:	add	x8, x8, #0x7f
  41e718:	cmp	x6, #0x0
  41e71c:	adrp	x9, 437000 <worker_hash_op+0x2df8>
  41e720:	add	x9, x9, #0xbc0
  41e724:	csel	x5, xzr, x8, eq  // eq = none
  41e728:	cmp	x22, #0x0
  41e72c:	csel	x8, x9, x22, eq  // eq = none
  41e730:	cbz	x21, 41e73c <udev_rule_apply_token_to_event+0x2ddc>
  41e734:	ldr	w9, [x21, #8]
  41e738:	b	41e740 <udev_rule_apply_token_to_event+0x2de0>
  41e73c:	mov	w9, wzr
  41e740:	str	x8, [sp, #16]
  41e744:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41e748:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41e74c:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41e750:	add	x8, x8, #0xd0b
  41e754:	add	x2, x2, #0x8da
  41e758:	add	x4, x4, #0x6c8
  41e75c:	mov	w0, #0x7                   	// #7
  41e760:	mov	w3, #0x811                 	// #2065
  41e764:	mov	w1, wzr
  41e768:	mov	x7, xzr
  41e76c:	str	x20, [sp, #32]
  41e770:	str	w9, [sp, #24]
  41e774:	stp	xzr, x8, [sp]
  41e778:	bl	40a730 <log_object_internal@plt>
  41e77c:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  41e780:	add	x0, sp, #0x4, lsl #12
  41e784:	add	x1, x1, #0xacd
  41e788:	add	x0, x0, #0xc8
  41e78c:	add	x20, sp, #0x4, lsl #12
  41e790:	add	x20, x20, #0xc8
  41e794:	bl	40ad40 <strspn@plt>
  41e798:	add	x24, x20, x0
  41e79c:	adrp	x21, 438000 <worker_hash_op+0x3df8>
  41e7a0:	adrp	x20, 438000 <worker_hash_op+0x3df8>
  41e7a4:	adrp	x22, 437000 <worker_hash_op+0x2df8>
  41e7a8:	adrp	x23, 438000 <worker_hash_op+0x3df8>
  41e7ac:	add	x21, x21, #0x752
  41e7b0:	add	x20, x20, #0xd64
  41e7b4:	add	x22, x22, #0x8da
  41e7b8:	add	x23, x23, #0x6c8
  41e7bc:	b	41e7f8 <udev_rule_apply_token_to_event+0x2e98>
  41e7c0:	ldr	w9, [x25, #8]
  41e7c4:	mov	w0, #0x7                   	// #7
  41e7c8:	mov	w3, #0x822                 	// #2082
  41e7cc:	mov	w1, wzr
  41e7d0:	mov	x2, x22
  41e7d4:	mov	x4, x23
  41e7d8:	mov	x7, xzr
  41e7dc:	str	x24, [sp, #32]
  41e7e0:	str	w9, [sp, #24]
  41e7e4:	stp	x20, x8, [sp, #8]
  41e7e8:	str	xzr, [sp]
  41e7ec:	bl	40a730 <log_object_internal@plt>
  41e7f0:	mov	x24, x27
  41e7f4:	cbz	x27, 41e4c8 <udev_rule_apply_token_to_event+0x2b68>
  41e7f8:	ldrb	w8, [x24]
  41e7fc:	cbz	w8, 41e4c8 <udev_rule_apply_token_to_event+0x2b68>
  41e800:	mov	w1, #0x20                  	// #32
  41e804:	mov	x0, x24
  41e808:	bl	40a7d0 <strchr@plt>
  41e80c:	cbz	x0, 41e830 <udev_rule_apply_token_to_event+0x2ed0>
  41e810:	mov	x25, x0
  41e814:	strb	wzr, [x25], #1
  41e818:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  41e81c:	mov	x0, x25
  41e820:	add	x1, x1, #0xacd
  41e824:	bl	40ad40 <strspn@plt>
  41e828:	add	x27, x25, x0
  41e82c:	b	41e834 <udev_rule_apply_token_to_event+0x2ed4>
  41e830:	mov	x27, xzr
  41e834:	add	x0, sp, #0x38
  41e838:	mov	w1, #0x400                 	// #1024
  41e83c:	mov	x2, x21
  41e840:	mov	x3, x24
  41e844:	mov	x4, xzr
  41e848:	bl	40b1a0 <strscpyl@plt>
  41e84c:	add	x1, sp, #0x38
  41e850:	mov	x0, x19
  41e854:	bl	40b3e0 <device_add_devlink@plt>
  41e858:	ldr	x8, [x26]
  41e85c:	tbnz	w0, #31, 41e8d0 <udev_rule_apply_token_to_event+0x2f70>
  41e860:	cbz	x8, 41e86c <udev_rule_apply_token_to_event+0x2f0c>
  41e864:	ldp	x28, x25, [x8]
  41e868:	b	41e874 <udev_rule_apply_token_to_event+0x2f14>
  41e86c:	mov	x25, xzr
  41e870:	mov	x28, xzr
  41e874:	mov	w0, #0x1                   	// #1
  41e878:	str	xzr, [sp, #16448]
  41e87c:	bl	40a2c0 <log_get_max_level_realm@plt>
  41e880:	cmp	w0, #0x7
  41e884:	mov	x6, xzr
  41e888:	b.ge	41e8b8 <udev_rule_apply_token_to_event+0x2f58>  // b.tcont
  41e88c:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  41e890:	cmp	x6, #0x0
  41e894:	add	x8, x8, #0x7f
  41e898:	csel	x5, xzr, x8, eq  // eq = none
  41e89c:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  41e8a0:	cmp	x28, #0x0
  41e8a4:	add	x8, x8, #0xbc0
  41e8a8:	csel	x8, x8, x28, eq  // eq = none
  41e8ac:	cbnz	x25, 41e7c0 <udev_rule_apply_token_to_event+0x2e60>
  41e8b0:	mov	w9, wzr
  41e8b4:	b	41e7c4 <udev_rule_apply_token_to_event+0x2e64>
  41e8b8:	add	x1, sp, #0x4, lsl #12
  41e8bc:	add	x1, x1, #0x40
  41e8c0:	mov	x0, x19
  41e8c4:	bl	40a780 <sd_device_get_sysname@plt>
  41e8c8:	ldr	x6, [sp, #16448]
  41e8cc:	b	41e88c <udev_rule_apply_token_to_event+0x2f2c>
  41e8d0:	mov	w25, w0
  41e8d4:	cbz	x8, 41e9ec <udev_rule_apply_token_to_event+0x308c>
  41e8d8:	ldp	x21, x20, [x8]
  41e8dc:	b	41e9f4 <udev_rule_apply_token_to_event+0x3094>
  41e8e0:	mov	x22, xzr
  41e8e4:	mov	x23, xzr
  41e8e8:	mov	w0, #0x1                   	// #1
  41e8ec:	str	xzr, [sp, #56]
  41e8f0:	bl	40a2c0 <log_get_max_level_realm@plt>
  41e8f4:	cmp	w0, #0x3
  41e8f8:	mov	x6, xzr
  41e8fc:	b.ge	41f104 <udev_rule_apply_token_to_event+0x37a4>  // b.tcont
  41e900:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  41e904:	add	x8, x8, #0x7f
  41e908:	cmp	x6, #0x0
  41e90c:	adrp	x9, 437000 <worker_hash_op+0x2df8>
  41e910:	add	x9, x9, #0xbc0
  41e914:	csel	x5, xzr, x8, eq  // eq = none
  41e918:	cmp	x23, #0x0
  41e91c:	csel	x8, x9, x23, eq  // eq = none
  41e920:	cbz	x22, 41e92c <udev_rule_apply_token_to_event+0x2fcc>
  41e924:	ldr	w9, [x22, #8]
  41e928:	b	41e930 <udev_rule_apply_token_to_event+0x2fd0>
  41e92c:	mov	w9, wzr
  41e930:	ldr	x10, [x20, #8]
  41e934:	str	x8, [sp, #16]
  41e938:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41e93c:	add	x8, x8, #0xa59
  41e940:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41e944:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41e948:	str	x10, [sp, #32]
  41e94c:	str	w9, [sp, #24]
  41e950:	add	x2, x2, #0x8da
  41e954:	add	x4, x4, #0x6c8
  41e958:	str	x8, [sp, #8]
  41e95c:	mov	w0, #0x3                   	// #3
  41e960:	mov	w3, #0x710                 	// #1808
  41e964:	b	41ec14 <udev_rule_apply_token_to_event+0x32b4>
  41e968:	mov	x21, xzr
  41e96c:	mov	x23, xzr
  41e970:	mov	w0, #0x1                   	// #1
  41e974:	str	xzr, [sp, #16448]
  41e978:	bl	40a2c0 <log_get_max_level_realm@plt>
  41e97c:	cmp	w0, #0x3
  41e980:	mov	x6, xzr
  41e984:	b.ge	41f118 <udev_rule_apply_token_to_event+0x37b8>  // b.tcont
  41e988:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  41e98c:	add	x8, x8, #0x7f
  41e990:	cmp	x6, #0x0
  41e994:	adrp	x9, 437000 <worker_hash_op+0x2df8>
  41e998:	add	x9, x9, #0xbc0
  41e99c:	csel	x5, xzr, x8, eq  // eq = none
  41e9a0:	cmp	x23, #0x0
  41e9a4:	csel	x8, x9, x23, eq  // eq = none
  41e9a8:	cbz	x21, 41e9b4 <udev_rule_apply_token_to_event+0x3054>
  41e9ac:	ldr	w9, [x21, #8]
  41e9b0:	b	41e9b8 <udev_rule_apply_token_to_event+0x3058>
  41e9b4:	mov	w9, wzr
  41e9b8:	str	x8, [sp, #16]
  41e9bc:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41e9c0:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41e9c4:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41e9c8:	add	x8, x8, #0xbbe
  41e9cc:	add	x2, x2, #0x8da
  41e9d0:	add	x4, x4, #0x6c8
  41e9d4:	mov	w0, #0x3                   	// #3
  41e9d8:	mov	w3, #0x7c0                 	// #1984
  41e9dc:	str	x22, [sp, #32]
  41e9e0:	str	w9, [sp, #24]
  41e9e4:	str	x8, [sp, #8]
  41e9e8:	b	41eb8c <udev_rule_apply_token_to_event+0x322c>
  41e9ec:	mov	x20, xzr
  41e9f0:	mov	x21, xzr
  41e9f4:	mov	w0, #0x1                   	// #1
  41e9f8:	str	xzr, [sp, #16448]
  41e9fc:	bl	40a2c0 <log_get_max_level_realm@plt>
  41ea00:	cmp	w0, #0x3
  41ea04:	mov	x6, xzr
  41ea08:	b.ge	41f130 <udev_rule_apply_token_to_event+0x37d0>  // b.tcont
  41ea0c:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  41ea10:	cmp	x6, #0x0
  41ea14:	add	x8, x8, #0x7f
  41ea18:	csel	x5, xzr, x8, eq  // eq = none
  41ea1c:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  41ea20:	cmp	x21, #0x0
  41ea24:	add	x8, x8, #0xbc0
  41ea28:	csel	x8, x8, x21, eq  // eq = none
  41ea2c:	cbz	x20, 41ea38 <udev_rule_apply_token_to_event+0x30d8>
  41ea30:	ldr	w9, [x20, #8]
  41ea34:	b	41ea3c <udev_rule_apply_token_to_event+0x30dc>
  41ea38:	mov	w9, wzr
  41ea3c:	str	x8, [sp, #16]
  41ea40:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41ea44:	add	x10, sp, #0x38
  41ea48:	add	x8, x8, #0xd3f
  41ea4c:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41ea50:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41ea54:	str	w9, [sp, #24]
  41ea58:	add	x2, x2, #0x8da
  41ea5c:	add	x4, x4, #0x6c8
  41ea60:	str	x10, [sp, #32]
  41ea64:	stp	xzr, x8, [sp]
  41ea68:	mov	w0, #0x3                   	// #3
  41ea6c:	mov	w3, #0x820                 	// #2080
  41ea70:	mov	w1, w25
  41ea74:	b	41ec1c <udev_rule_apply_token_to_event+0x32bc>
  41ea78:	mov	x22, xzr
  41ea7c:	mov	x23, xzr
  41ea80:	mov	w0, #0x1                   	// #1
  41ea84:	str	xzr, [sp, #56]
  41ea88:	bl	40a2c0 <log_get_max_level_realm@plt>
  41ea8c:	cmp	w0, #0x3
  41ea90:	mov	x6, xzr
  41ea94:	b.ge	41f148 <udev_rule_apply_token_to_event+0x37e8>  // b.tcont
  41ea98:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  41ea9c:	add	x8, x8, #0x7f
  41eaa0:	cmp	x6, #0x0
  41eaa4:	adrp	x9, 437000 <worker_hash_op+0x2df8>
  41eaa8:	add	x9, x9, #0xbc0
  41eaac:	csel	x5, xzr, x8, eq  // eq = none
  41eab0:	cmp	x23, #0x0
  41eab4:	csel	x8, x9, x23, eq  // eq = none
  41eab8:	cbz	x22, 41eac4 <udev_rule_apply_token_to_event+0x3164>
  41eabc:	ldr	w9, [x22, #8]
  41eac0:	b	41eac8 <udev_rule_apply_token_to_event+0x3168>
  41eac4:	mov	w9, wzr
  41eac8:	ldr	x10, [x20, #8]
  41eacc:	ldr	x11, [sp, #16576]
  41ead0:	str	x8, [sp, #16]
  41ead4:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41ead8:	add	x8, x8, #0xa8d
  41eadc:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41eae0:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41eae4:	stp	x10, x11, [sp, #32]
  41eae8:	str	w9, [sp, #24]
  41eaec:	add	x2, x2, #0x8da
  41eaf0:	add	x4, x4, #0x6c8
  41eaf4:	str	x8, [sp, #8]
  41eaf8:	mov	w0, #0x3                   	// #3
  41eafc:	mov	w3, #0x715                 	// #1813
  41eb00:	b	41ec14 <udev_rule_apply_token_to_event+0x32b4>
  41eb04:	mov	x21, xzr
  41eb08:	mov	x22, xzr
  41eb0c:	mov	w0, #0x1                   	// #1
  41eb10:	str	xzr, [sp, #56]
  41eb14:	bl	40a2c0 <log_get_max_level_realm@plt>
  41eb18:	cmp	w0, #0x3
  41eb1c:	mov	x6, xzr
  41eb20:	b.ge	41f15c <udev_rule_apply_token_to_event+0x37fc>  // b.tcont
  41eb24:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  41eb28:	add	x8, x8, #0x7f
  41eb2c:	cmp	x6, #0x0
  41eb30:	adrp	x9, 437000 <worker_hash_op+0x2df8>
  41eb34:	add	x9, x9, #0xbc0
  41eb38:	csel	x5, xzr, x8, eq  // eq = none
  41eb3c:	cmp	x22, #0x0
  41eb40:	csel	x8, x9, x22, eq  // eq = none
  41eb44:	cbz	x21, 41eb50 <udev_rule_apply_token_to_event+0x31f0>
  41eb48:	ldr	w9, [x21, #8]
  41eb4c:	b	41eb54 <udev_rule_apply_token_to_event+0x31f4>
  41eb50:	mov	w9, wzr
  41eb54:	add	x10, sp, #0x4, lsl #12
  41eb58:	str	x8, [sp, #16]
  41eb5c:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41eb60:	add	x10, x10, #0xc8
  41eb64:	add	x8, x8, #0xc4e
  41eb68:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41eb6c:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41eb70:	str	w9, [sp, #24]
  41eb74:	add	x2, x2, #0x8da
  41eb78:	add	x4, x4, #0x6c8
  41eb7c:	str	x10, [sp, #32]
  41eb80:	str	x8, [sp, #8]
  41eb84:	mov	w0, #0x3                   	// #3
  41eb88:	mov	w3, #0x7dd                 	// #2013
  41eb8c:	str	xzr, [sp]
  41eb90:	mov	w1, w20
  41eb94:	b	41ec1c <udev_rule_apply_token_to_event+0x32bc>
  41eb98:	mov	x20, xzr
  41eb9c:	mov	x22, xzr
  41eba0:	mov	w0, #0x1                   	// #1
  41eba4:	str	xzr, [sp, #16440]
  41eba8:	bl	40a2c0 <log_get_max_level_realm@plt>
  41ebac:	cmp	w0, #0x3
  41ebb0:	mov	x6, xzr
  41ebb4:	b.ge	41f170 <udev_rule_apply_token_to_event+0x3810>  // b.tcont
  41ebb8:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  41ebbc:	add	x8, x8, #0x7f
  41ebc0:	cmp	x6, #0x0
  41ebc4:	adrp	x9, 437000 <worker_hash_op+0x2df8>
  41ebc8:	add	x9, x9, #0xbc0
  41ebcc:	csel	x5, xzr, x8, eq  // eq = none
  41ebd0:	cmp	x22, #0x0
  41ebd4:	csel	x8, x9, x22, eq  // eq = none
  41ebd8:	cbz	x20, 41ebe4 <udev_rule_apply_token_to_event+0x3284>
  41ebdc:	ldr	w9, [x20, #8]
  41ebe0:	b	41ebe8 <udev_rule_apply_token_to_event+0x3288>
  41ebe4:	mov	w9, wzr
  41ebe8:	str	x8, [sp, #16]
  41ebec:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41ebf0:	add	x8, x8, #0x7d0
  41ebf4:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41ebf8:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41ebfc:	str	w9, [sp, #24]
  41ec00:	add	x2, x2, #0x8da
  41ec04:	add	x4, x4, #0x6c8
  41ec08:	str	x8, [sp, #8]
  41ec0c:	mov	w0, #0x3                   	// #3
  41ec10:	mov	w3, #0x667                 	// #1639
  41ec14:	mov	w1, w21
  41ec18:	str	xzr, [sp]
  41ec1c:	mov	x7, xzr
  41ec20:	bl	40a730 <log_object_internal@plt>
  41ec24:	mov	w19, w0
  41ec28:	b	41e4cc <udev_rule_apply_token_to_event+0x2b6c>
  41ec2c:	mov	x20, xzr
  41ec30:	mov	x22, xzr
  41ec34:	mov	w0, #0x1                   	// #1
  41ec38:	str	xzr, [sp, #16440]
  41ec3c:	bl	40a2c0 <log_get_max_level_realm@plt>
  41ec40:	cmp	w0, #0x3
  41ec44:	mov	x6, xzr
  41ec48:	b.ge	41f188 <udev_rule_apply_token_to_event+0x3828>  // b.tcont
  41ec4c:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  41ec50:	cmp	x6, #0x0
  41ec54:	add	x8, x8, #0x7f
  41ec58:	csel	x5, xzr, x8, eq  // eq = none
  41ec5c:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  41ec60:	cmp	x22, #0x0
  41ec64:	add	x8, x8, #0xbc0
  41ec68:	csel	x8, x8, x22, eq  // eq = none
  41ec6c:	cbz	x20, 41ec78 <udev_rule_apply_token_to_event+0x3318>
  41ec70:	ldr	w9, [x20, #8]
  41ec74:	b	41ec7c <udev_rule_apply_token_to_event+0x331c>
  41ec78:	mov	w9, wzr
  41ec7c:	ldr	x10, [sp, #16448]
  41ec80:	ldr	x11, [sp, #16576]
  41ec84:	str	x8, [sp, #16]
  41ec88:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41ec8c:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41ec90:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41ec94:	add	x8, x8, #0x973
  41ec98:	add	x2, x2, #0x8da
  41ec9c:	add	x4, x4, #0x6c8
  41eca0:	mov	w0, #0x3                   	// #3
  41eca4:	mov	w3, #0x6be                 	// #1726
  41eca8:	mov	w1, w24
  41ecac:	mov	x7, xzr
  41ecb0:	stp	x10, x11, [sp, #32]
  41ecb4:	str	w9, [sp, #24]
  41ecb8:	stp	xzr, x8, [sp]
  41ecbc:	bl	40a730 <log_object_internal@plt>
  41ecc0:	mov	w19, w0
  41ecc4:	b	41d330 <udev_rule_apply_token_to_event+0x19d0>
  41ecc8:	mov	x20, xzr
  41eccc:	mov	x21, xzr
  41ecd0:	mov	w0, #0x1                   	// #1
  41ecd4:	str	xzr, [sp, #16440]
  41ecd8:	bl	40a2c0 <log_get_max_level_realm@plt>
  41ecdc:	cmp	w0, #0x3
  41ece0:	mov	x6, xzr
  41ece4:	b.ge	41f1a0 <udev_rule_apply_token_to_event+0x3840>  // b.tcont
  41ece8:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  41ecec:	cmp	x6, #0x0
  41ecf0:	add	x8, x8, #0x7f
  41ecf4:	csel	x5, xzr, x8, eq  // eq = none
  41ecf8:	adrp	x8, 437000 <worker_hash_op+0x2df8>
  41ecfc:	cmp	x21, #0x0
  41ed00:	add	x8, x8, #0xbc0
  41ed04:	csel	x8, x8, x21, eq  // eq = none
  41ed08:	cbz	x20, 41ed14 <udev_rule_apply_token_to_event+0x33b4>
  41ed0c:	ldr	w9, [x20, #8]
  41ed10:	b	41ed18 <udev_rule_apply_token_to_event+0x33b8>
  41ed14:	mov	w9, wzr
  41ed18:	ldr	x10, [sp, #16448]
  41ed1c:	ldr	x11, [sp, #16576]
  41ed20:	str	x8, [sp, #16]
  41ed24:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  41ed28:	add	x8, x8, #0x973
  41ed2c:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41ed30:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41ed34:	stp	x10, x11, [sp, #32]
  41ed38:	str	w9, [sp, #24]
  41ed3c:	add	x2, x2, #0x8da
  41ed40:	add	x4, x4, #0x6c8
  41ed44:	stp	xzr, x8, [sp]
  41ed48:	mov	w0, #0x3                   	// #3
  41ed4c:	mov	w3, #0x6e7                 	// #1767
  41ed50:	mov	w1, w24
  41ed54:	b	41ec1c <udev_rule_apply_token_to_event+0x32bc>
  41ed58:	add	x1, sp, #0x4, lsl #12
  41ed5c:	add	x1, x1, #0x40
  41ed60:	mov	x0, x19
  41ed64:	bl	40a780 <sd_device_get_sysname@plt>
  41ed68:	ldr	x6, [sp, #16448]
  41ed6c:	b	41c674 <udev_rule_apply_token_to_event+0xd14>
  41ed70:	add	x1, sp, #0x4, lsl #12
  41ed74:	add	x1, x1, #0x40
  41ed78:	mov	x0, x19
  41ed7c:	bl	40a780 <sd_device_get_sysname@plt>
  41ed80:	ldr	x6, [sp, #16448]
  41ed84:	b	41c734 <udev_rule_apply_token_to_event+0xdd4>
  41ed88:	add	x1, sp, #0x38
  41ed8c:	mov	x0, x19
  41ed90:	bl	40a780 <sd_device_get_sysname@plt>
  41ed94:	ldr	x6, [sp, #56]
  41ed98:	b	41c93c <udev_rule_apply_token_to_event+0xfdc>
  41ed9c:	add	x1, sp, #0x38
  41eda0:	mov	x0, x19
  41eda4:	bl	40a780 <sd_device_get_sysname@plt>
  41eda8:	ldr	x6, [sp, #56]
  41edac:	b	41ca84 <udev_rule_apply_token_to_event+0x1124>
  41edb0:	add	x1, sp, #0x38
  41edb4:	mov	x0, x19
  41edb8:	bl	40a780 <sd_device_get_sysname@plt>
  41edbc:	ldr	x6, [sp, #56]
  41edc0:	b	41cd84 <udev_rule_apply_token_to_event+0x1424>
  41edc4:	add	x1, sp, #0x38
  41edc8:	mov	x0, x19
  41edcc:	bl	40a780 <sd_device_get_sysname@plt>
  41edd0:	ldr	x6, [sp, #56]
  41edd4:	b	41d0a8 <udev_rule_apply_token_to_event+0x1748>
  41edd8:	add	x1, sp, #0x38
  41eddc:	mov	x0, x19
  41ede0:	bl	40a780 <sd_device_get_sysname@plt>
  41ede4:	ldr	x6, [sp, #56]
  41ede8:	b	41cf10 <udev_rule_apply_token_to_event+0x15b0>
  41edec:	add	x1, sp, #0x4, lsl #12
  41edf0:	add	x1, x1, #0x40
  41edf4:	mov	x0, x19
  41edf8:	bl	40a780 <sd_device_get_sysname@plt>
  41edfc:	ldr	x6, [sp, #16448]
  41ee00:	b	41cf9c <udev_rule_apply_token_to_event+0x163c>
  41ee04:	add	x1, sp, #0x4, lsl #12
  41ee08:	add	x1, x1, #0x40
  41ee0c:	mov	x0, x19
  41ee10:	bl	40a780 <sd_device_get_sysname@plt>
  41ee14:	ldr	x6, [sp, #16448]
  41ee18:	b	41d18c <udev_rule_apply_token_to_event+0x182c>
  41ee1c:	add	x1, sp, #0x4, lsl #12
  41ee20:	add	x1, x1, #0x38
  41ee24:	mov	x0, x19
  41ee28:	bl	40a780 <sd_device_get_sysname@plt>
  41ee2c:	ldr	x6, [sp, #16440]
  41ee30:	b	41d2ac <udev_rule_apply_token_to_event+0x194c>
  41ee34:	add	x1, sp, #0x4, lsl #12
  41ee38:	add	x1, x1, #0x40
  41ee3c:	mov	x0, x19
  41ee40:	bl	40a780 <sd_device_get_sysname@plt>
  41ee44:	ldr	x6, [sp, #16448]
  41ee48:	b	41d35c <udev_rule_apply_token_to_event+0x19fc>
  41ee4c:	add	x1, sp, #0x4, lsl #12
  41ee50:	add	x1, x1, #0x40
  41ee54:	mov	x0, x19
  41ee58:	bl	40a780 <sd_device_get_sysname@plt>
  41ee5c:	ldr	x6, [sp, #16448]
  41ee60:	b	41d3f0 <udev_rule_apply_token_to_event+0x1a90>
  41ee64:	add	x1, sp, #0x38
  41ee68:	mov	x0, x19
  41ee6c:	bl	40a780 <sd_device_get_sysname@plt>
  41ee70:	ldr	x6, [sp, #56]
  41ee74:	b	41d4a4 <udev_rule_apply_token_to_event+0x1b44>
  41ee78:	add	x1, sp, #0x38
  41ee7c:	mov	x0, x19
  41ee80:	bl	40a780 <sd_device_get_sysname@plt>
  41ee84:	ldr	x6, [sp, #56]
  41ee88:	b	41d524 <udev_rule_apply_token_to_event+0x1bc4>
  41ee8c:	add	x1, sp, #0x4, lsl #12
  41ee90:	add	x1, x1, #0x40
  41ee94:	mov	x0, x19
  41ee98:	bl	40a780 <sd_device_get_sysname@plt>
  41ee9c:	ldr	x6, [sp, #16448]
  41eea0:	b	41d5a4 <udev_rule_apply_token_to_event+0x1c44>
  41eea4:	add	x1, sp, #0x4, lsl #12
  41eea8:	add	x1, x1, #0xc8
  41eeac:	mov	x0, x19
  41eeb0:	bl	40a780 <sd_device_get_sysname@plt>
  41eeb4:	ldr	x6, [sp, #16584]
  41eeb8:	b	41d624 <udev_rule_apply_token_to_event+0x1cc4>
  41eebc:	add	x1, sp, #0x38
  41eec0:	mov	x0, x19
  41eec4:	bl	40a780 <sd_device_get_sysname@plt>
  41eec8:	ldr	x6, [sp, #56]
  41eecc:	b	41d6ac <udev_rule_apply_token_to_event+0x1d4c>
  41eed0:	add	x1, sp, #0x38
  41eed4:	mov	x0, x19
  41eed8:	bl	40a780 <sd_device_get_sysname@plt>
  41eedc:	ldr	x6, [sp, #56]
  41eee0:	b	41d6f8 <udev_rule_apply_token_to_event+0x1d98>
  41eee4:	add	x1, sp, #0x38
  41eee8:	mov	x0, x19
  41eeec:	bl	40a780 <sd_device_get_sysname@plt>
  41eef0:	ldr	x6, [sp, #56]
  41eef4:	b	41d7ac <udev_rule_apply_token_to_event+0x1e4c>
  41eef8:	add	x1, sp, #0x4, lsl #12
  41eefc:	add	x1, x1, #0x40
  41ef00:	mov	x0, x19
  41ef04:	bl	40a780 <sd_device_get_sysname@plt>
  41ef08:	ldr	x6, [sp, #16448]
  41ef0c:	b	41d83c <udev_rule_apply_token_to_event+0x1edc>
  41ef10:	add	x1, sp, #0x38
  41ef14:	mov	x0, x19
  41ef18:	bl	40a780 <sd_device_get_sysname@plt>
  41ef1c:	ldr	x23, [sp, #56]
  41ef20:	b	41d8cc <udev_rule_apply_token_to_event+0x1f6c>
  41ef24:	add	x1, sp, #0x4, lsl #12
  41ef28:	add	x1, x1, #0x40
  41ef2c:	mov	x0, x19
  41ef30:	bl	40a780 <sd_device_get_sysname@plt>
  41ef34:	ldr	x6, [sp, #16448]
  41ef38:	b	41d980 <udev_rule_apply_token_to_event+0x2020>
  41ef3c:	add	x1, sp, #0x38
  41ef40:	mov	x0, x19
  41ef44:	bl	40a780 <sd_device_get_sysname@plt>
  41ef48:	ldr	x6, [sp, #56]
  41ef4c:	b	41da20 <udev_rule_apply_token_to_event+0x20c0>
  41ef50:	add	x1, sp, #0x4, lsl #12
  41ef54:	add	x1, x1, #0xc8
  41ef58:	mov	x0, x19
  41ef5c:	bl	40a780 <sd_device_get_sysname@plt>
  41ef60:	ldr	x6, [sp, #16584]
  41ef64:	b	41daa8 <udev_rule_apply_token_to_event+0x2148>
  41ef68:	add	x1, sp, #0x38
  41ef6c:	mov	x0, x19
  41ef70:	bl	40a780 <sd_device_get_sysname@plt>
  41ef74:	ldr	x6, [sp, #56]
  41ef78:	b	41daf4 <udev_rule_apply_token_to_event+0x2194>
  41ef7c:	add	x1, sp, #0x38
  41ef80:	mov	x0, x19
  41ef84:	bl	40a780 <sd_device_get_sysname@plt>
  41ef88:	ldr	x6, [sp, #56]
  41ef8c:	b	41dbb8 <udev_rule_apply_token_to_event+0x2258>
  41ef90:	add	x1, sp, #0x38
  41ef94:	mov	x0, x19
  41ef98:	bl	40a780 <sd_device_get_sysname@plt>
  41ef9c:	ldr	x6, [sp, #56]
  41efa0:	b	41dc40 <udev_rule_apply_token_to_event+0x22e0>
  41efa4:	add	x1, sp, #0x38
  41efa8:	mov	x0, x19
  41efac:	bl	40a780 <sd_device_get_sysname@plt>
  41efb0:	ldr	x6, [sp, #56]
  41efb4:	b	41dcf4 <udev_rule_apply_token_to_event+0x2394>
  41efb8:	add	x1, sp, #0x38
  41efbc:	mov	x0, x19
  41efc0:	bl	40a780 <sd_device_get_sysname@plt>
  41efc4:	ldr	x6, [sp, #56]
  41efc8:	b	41ddc0 <udev_rule_apply_token_to_event+0x2460>
  41efcc:	add	x1, sp, #0x38
  41efd0:	mov	x0, x19
  41efd4:	bl	40a780 <sd_device_get_sysname@plt>
  41efd8:	ldr	x6, [sp, #56]
  41efdc:	b	41e1e4 <udev_rule_apply_token_to_event+0x2884>
  41efe0:	add	x1, sp, #0x4, lsl #12
  41efe4:	add	x1, x1, #0x40
  41efe8:	mov	x0, x19
  41efec:	bl	40a780 <sd_device_get_sysname@plt>
  41eff0:	ldr	x6, [sp, #16448]
  41eff4:	b	41de4c <udev_rule_apply_token_to_event+0x24ec>
  41eff8:	add	x1, sp, #0x4, lsl #12
  41effc:	add	x1, x1, #0x40
  41f000:	mov	x0, x19
  41f004:	bl	40a780 <sd_device_get_sysname@plt>
  41f008:	ldr	x6, [sp, #16448]
  41f00c:	b	41def4 <udev_rule_apply_token_to_event+0x2594>
  41f010:	add	x1, sp, #0x4, lsl #12
  41f014:	add	x1, x1, #0x40
  41f018:	mov	x0, x19
  41f01c:	bl	40a780 <sd_device_get_sysname@plt>
  41f020:	ldr	x6, [sp, #16448]
  41f024:	b	41df30 <udev_rule_apply_token_to_event+0x25d0>
  41f028:	add	x1, sp, #0x4, lsl #12
  41f02c:	add	x1, x1, #0x40
  41f030:	mov	x0, x19
  41f034:	bl	40a780 <sd_device_get_sysname@plt>
  41f038:	ldr	x6, [sp, #16448]
  41f03c:	b	41e024 <udev_rule_apply_token_to_event+0x26c4>
  41f040:	add	x1, sp, #0x38
  41f044:	mov	x0, x19
  41f048:	bl	40a780 <sd_device_get_sysname@plt>
  41f04c:	ldr	x6, [sp, #56]
  41f050:	b	41e0a0 <udev_rule_apply_token_to_event+0x2740>
  41f054:	add	x1, sp, #0x38
  41f058:	mov	x0, x19
  41f05c:	bl	40a780 <sd_device_get_sysname@plt>
  41f060:	ldr	x6, [sp, #56]
  41f064:	b	41e26c <udev_rule_apply_token_to_event+0x290c>
  41f068:	add	x1, sp, #0x4, lsl #12
  41f06c:	add	x1, x1, #0xc8
  41f070:	mov	x0, x19
  41f074:	bl	40a780 <sd_device_get_sysname@plt>
  41f078:	ldr	x6, [sp, #16584]
  41f07c:	b	41e324 <udev_rule_apply_token_to_event+0x29c4>
  41f080:	add	x1, sp, #0x38
  41f084:	mov	x0, x19
  41f088:	bl	40a780 <sd_device_get_sysname@plt>
  41f08c:	ldr	x6, [sp, #56]
  41f090:	b	41e3b4 <udev_rule_apply_token_to_event+0x2a54>
  41f094:	add	x1, sp, #0x38
  41f098:	mov	x0, x19
  41f09c:	bl	40a780 <sd_device_get_sysname@plt>
  41f0a0:	ldr	x6, [sp, #56]
  41f0a4:	b	41e454 <udev_rule_apply_token_to_event+0x2af4>
  41f0a8:	add	x1, sp, #0x4, lsl #12
  41f0ac:	add	x1, x1, #0xc8
  41f0b0:	mov	x0, x19
  41f0b4:	bl	40a780 <sd_device_get_sysname@plt>
  41f0b8:	ldr	x6, [sp, #16584]
  41f0bc:	b	41e528 <udev_rule_apply_token_to_event+0x2bc8>
  41f0c0:	add	x1, sp, #0x4, lsl #12
  41f0c4:	add	x1, x1, #0x40
  41f0c8:	mov	x0, x19
  41f0cc:	bl	40a780 <sd_device_get_sysname@plt>
  41f0d0:	ldr	x6, [sp, #16448]
  41f0d4:	b	41e5d8 <udev_rule_apply_token_to_event+0x2c78>
  41f0d8:	add	x1, sp, #0x4, lsl #12
  41f0dc:	add	x1, x1, #0xc8
  41f0e0:	mov	x0, x19
  41f0e4:	bl	40a780 <sd_device_get_sysname@plt>
  41f0e8:	ldr	x6, [sp, #16584]
  41f0ec:	b	41e660 <udev_rule_apply_token_to_event+0x2d00>
  41f0f0:	add	x1, sp, #0x38
  41f0f4:	mov	x0, x19
  41f0f8:	bl	40a780 <sd_device_get_sysname@plt>
  41f0fc:	ldr	x6, [sp, #56]
  41f100:	b	41e710 <udev_rule_apply_token_to_event+0x2db0>
  41f104:	add	x1, sp, #0x38
  41f108:	mov	x0, x19
  41f10c:	bl	40a780 <sd_device_get_sysname@plt>
  41f110:	ldr	x6, [sp, #56]
  41f114:	b	41e900 <udev_rule_apply_token_to_event+0x2fa0>
  41f118:	add	x1, sp, #0x4, lsl #12
  41f11c:	add	x1, x1, #0x40
  41f120:	mov	x0, x19
  41f124:	bl	40a780 <sd_device_get_sysname@plt>
  41f128:	ldr	x6, [sp, #16448]
  41f12c:	b	41e988 <udev_rule_apply_token_to_event+0x3028>
  41f130:	add	x1, sp, #0x4, lsl #12
  41f134:	add	x1, x1, #0x40
  41f138:	mov	x0, x19
  41f13c:	bl	40a780 <sd_device_get_sysname@plt>
  41f140:	ldr	x6, [sp, #16448]
  41f144:	b	41ea0c <udev_rule_apply_token_to_event+0x30ac>
  41f148:	add	x1, sp, #0x38
  41f14c:	mov	x0, x19
  41f150:	bl	40a780 <sd_device_get_sysname@plt>
  41f154:	ldr	x6, [sp, #56]
  41f158:	b	41ea98 <udev_rule_apply_token_to_event+0x3138>
  41f15c:	add	x1, sp, #0x38
  41f160:	mov	x0, x19
  41f164:	bl	40a780 <sd_device_get_sysname@plt>
  41f168:	ldr	x6, [sp, #56]
  41f16c:	b	41eb24 <udev_rule_apply_token_to_event+0x31c4>
  41f170:	add	x1, sp, #0x4, lsl #12
  41f174:	add	x1, x1, #0x38
  41f178:	mov	x0, x19
  41f17c:	bl	40a780 <sd_device_get_sysname@plt>
  41f180:	ldr	x6, [sp, #16440]
  41f184:	b	41ebb8 <udev_rule_apply_token_to_event+0x3258>
  41f188:	add	x1, sp, #0x4, lsl #12
  41f18c:	add	x1, x1, #0x38
  41f190:	mov	x0, x19
  41f194:	bl	40a780 <sd_device_get_sysname@plt>
  41f198:	ldr	x6, [sp, #16440]
  41f19c:	b	41ec4c <udev_rule_apply_token_to_event+0x32ec>
  41f1a0:	add	x1, sp, #0x4, lsl #12
  41f1a4:	add	x1, x1, #0x38
  41f1a8:	mov	x0, x19
  41f1ac:	bl	40a780 <sd_device_get_sysname@plt>
  41f1b0:	ldr	x6, [sp, #16440]
  41f1b4:	b	41ece8 <udev_rule_apply_token_to_event+0x3388>
  41f1b8:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  41f1bc:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41f1c0:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41f1c4:	add	x1, x1, #0x856
  41f1c8:	add	x2, x2, #0x8da
  41f1cc:	add	x4, x4, #0x66b
  41f1d0:	mov	w0, #0x1                   	// #1
  41f1d4:	mov	w3, #0x5fe                 	// #1534
  41f1d8:	bl	40a630 <log_assert_failed_realm@plt>
  41f1dc:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  41f1e0:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41f1e4:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41f1e8:	add	x1, x1, #0x4f0
  41f1ec:	add	x2, x2, #0x8da
  41f1f0:	add	x4, x4, #0x66b
  41f1f4:	mov	w0, #0x1                   	// #1
  41f1f8:	mov	w3, #0x5ff                 	// #1535
  41f1fc:	bl	40a630 <log_assert_failed_realm@plt>
  41f200:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  41f204:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41f208:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41f20c:	add	x1, x1, #0x1bf
  41f210:	add	x2, x2, #0x8da
  41f214:	add	x4, x4, #0x66b
  41f218:	mov	w0, #0x1                   	// #1
  41f21c:	mov	w3, #0x600                 	// #1536
  41f220:	bl	40a630 <log_assert_failed_realm@plt>
  41f224:	adrp	x1, 438000 <worker_hash_op+0x3df8>
  41f228:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41f22c:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41f230:	add	x1, x1, #0xe55
  41f234:	add	x2, x2, #0x8da
  41f238:	add	x4, x4, #0x66b
  41f23c:	mov	w0, #0x1                   	// #1
  41f240:	mov	w3, #0x86b                 	// #2155
  41f244:	bl	40a620 <log_assert_failed_unreachable_realm@plt>
  41f248:	adrp	x1, 438000 <worker_hash_op+0x3df8>
  41f24c:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41f250:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41f254:	add	x1, x1, #0x482
  41f258:	add	x2, x2, #0x8da
  41f25c:	add	x4, x4, #0xed9
  41f260:	mov	w0, #0x1                   	// #1
  41f264:	mov	w3, #0x55e                 	// #1374
  41f268:	bl	40a630 <log_assert_failed_realm@plt>
  41f26c:	adrp	x1, 438000 <worker_hash_op+0x3df8>
  41f270:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41f274:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41f278:	add	x1, x1, #0xf1b
  41f27c:	add	x2, x2, #0x8da
  41f280:	add	x4, x4, #0xed9
  41f284:	mov	w0, #0x1                   	// #1
  41f288:	mov	w3, #0x573                 	// #1395
  41f28c:	bl	40a620 <log_assert_failed_unreachable_realm@plt>
  41f290:	adrp	x1, 438000 <worker_hash_op+0x3df8>
  41f294:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41f298:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41f29c:	add	x1, x1, #0x758
  41f2a0:	add	x2, x2, #0x8da
  41f2a4:	add	x4, x4, #0x66b
  41f2a8:	mov	w0, #0x1                   	// #1
  41f2ac:	mov	w3, #0x634                 	// #1588
  41f2b0:	bl	40a620 <log_assert_failed_unreachable_realm@plt>

000000000041f2b4 <token_match_string>:
  41f2b4:	stp	x29, x30, [sp, #-48]!
  41f2b8:	stp	x22, x21, [sp, #16]
  41f2bc:	stp	x20, x19, [sp, #32]
  41f2c0:	mov	x29, sp
  41f2c4:	cbz	x0, 41f400 <token_match_string+0x14c>
  41f2c8:	ldr	x20, [x0, #8]
  41f2cc:	mov	x21, x0
  41f2d0:	cbz	x20, 41f424 <token_match_string+0x170>
  41f2d4:	ldr	w22, [x21]
  41f2d8:	mov	w8, #0x1a000000            	// #436207616
  41f2dc:	cmp	w8, w22, lsl #24
  41f2e0:	b.le	41f448 <token_match_string+0x194>
  41f2e4:	adrp	x9, 438000 <worker_hash_op+0x3df8>
  41f2e8:	add	x9, x9, #0xed8
  41f2ec:	cmp	x1, #0x0
  41f2f0:	sbfx	w8, w22, #16, #8
  41f2f4:	csel	x19, x9, x1, eq  // eq = none
  41f2f8:	cmp	w8, #0x5
  41f2fc:	b.hi	41f46c <token_match_string+0x1b8>  // b.pmore
  41f300:	adrp	x9, 441000 <worker_hash_op+0xcdf8>
  41f304:	add	x9, x9, #0xfbc
  41f308:	adr	x10, 41f318 <token_match_string+0x64>
  41f30c:	ldrb	w11, [x9, x8]
  41f310:	add	x10, x10, x11, lsl #2
  41f314:	br	x10
  41f318:	ldrb	w8, [x19]
  41f31c:	cmp	w8, #0x0
  41f320:	cset	w8, ne  // ne = any
  41f324:	b	41f3e4 <token_match_string+0x130>
  41f328:	ldrb	w8, [x19]
  41f32c:	cbz	w8, 41f3e4 <token_match_string+0x130>
  41f330:	ldrb	w8, [x20]
  41f334:	cbz	w8, 41f360 <token_match_string+0xac>
  41f338:	mov	x0, x20
  41f33c:	mov	x1, x19
  41f340:	mov	w2, wzr
  41f344:	bl	40b370 <fnmatch@plt>
  41f348:	cbz	w0, 41f3dc <token_match_string+0x128>
  41f34c:	mov	x0, x20
  41f350:	bl	40aa40 <strlen@plt>
  41f354:	adds	x8, x20, #0x1
  41f358:	add	x20, x8, x0
  41f35c:	b.ne	41f330 <token_match_string+0x7c>  // b.any
  41f360:	mov	w8, #0x1                   	// #1
  41f364:	b	41f3e0 <token_match_string+0x12c>
  41f368:	ldrb	w8, [x19]
  41f36c:	cbz	w8, 41f3e4 <token_match_string+0x130>
  41f370:	ldrb	w8, [x20]
  41f374:	cbz	w8, 41f3cc <token_match_string+0x118>
  41f378:	mov	x0, x20
  41f37c:	mov	x1, x19
  41f380:	bl	40a930 <strcmp@plt>
  41f384:	cbz	w0, 41f3d4 <token_match_string+0x120>
  41f388:	mov	x0, x20
  41f38c:	bl	40aa40 <strlen@plt>
  41f390:	adds	x8, x20, #0x1
  41f394:	add	x20, x8, x0
  41f398:	b.ne	41f370 <token_match_string+0xbc>  // b.any
  41f39c:	b	41f3cc <token_match_string+0x118>
  41f3a0:	adrp	x20, 441000 <worker_hash_op+0xcdf8>
  41f3a4:	add	x20, x20, #0xfc2
  41f3a8:	mov	x0, x20
  41f3ac:	mov	x1, x19
  41f3b0:	bl	40a930 <strcmp@plt>
  41f3b4:	cbz	w0, 41f3d4 <token_match_string+0x120>
  41f3b8:	mov	x0, x20
  41f3bc:	bl	40aa40 <strlen@plt>
  41f3c0:	add	x20, x20, x0
  41f3c4:	ldrb	w8, [x20, #1]!
  41f3c8:	cbnz	w8, 41f3a8 <token_match_string+0xf4>
  41f3cc:	mov	w8, #0x1                   	// #1
  41f3d0:	b	41f3e4 <token_match_string+0x130>
  41f3d4:	mov	w8, wzr
  41f3d8:	b	41f3e4 <token_match_string+0x130>
  41f3dc:	mov	w8, wzr
  41f3e0:	ldr	w22, [x21]
  41f3e4:	lsl	w9, w22, #16
  41f3e8:	ldp	x20, x19, [sp, #32]
  41f3ec:	ldp	x22, x21, [sp, #16]
  41f3f0:	cmp	w8, w9, asr #24
  41f3f4:	cset	w0, eq  // eq = none
  41f3f8:	ldp	x29, x30, [sp], #48
  41f3fc:	ret
  41f400:	adrp	x1, 438000 <worker_hash_op+0x3df8>
  41f404:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41f408:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41f40c:	add	x1, x1, #0x482
  41f410:	add	x2, x2, #0x8da
  41f414:	add	x4, x4, #0xe68
  41f418:	mov	w0, #0x1                   	// #1
  41f41c:	mov	w3, #0x527                 	// #1319
  41f420:	bl	40a630 <log_assert_failed_realm@plt>
  41f424:	adrp	x1, 438000 <worker_hash_op+0x3df8>
  41f428:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41f42c:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41f430:	add	x1, x1, #0xea0
  41f434:	add	x2, x2, #0x8da
  41f438:	add	x4, x4, #0xe68
  41f43c:	mov	w0, #0x1                   	// #1
  41f440:	mov	w3, #0x528                 	// #1320
  41f444:	bl	40a630 <log_assert_failed_realm@plt>
  41f448:	adrp	x1, 438000 <worker_hash_op+0x3df8>
  41f44c:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41f450:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41f454:	add	x1, x1, #0xead
  41f458:	add	x2, x2, #0x8da
  41f45c:	add	x4, x4, #0xe68
  41f460:	mov	w0, #0x1                   	// #1
  41f464:	mov	w3, #0x529                 	// #1321
  41f468:	bl	40a630 <log_assert_failed_realm@plt>
  41f46c:	adrp	x1, 438000 <worker_hash_op+0x3df8>
  41f470:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41f474:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41f478:	add	x1, x1, #0xec5
  41f47c:	add	x2, x2, #0x8da
  41f480:	add	x4, x4, #0xe68
  41f484:	mov	w0, #0x1                   	// #1
  41f488:	mov	w3, #0x554                 	// #1364
  41f48c:	bl	40a620 <log_assert_failed_unreachable_realm@plt>

000000000041f490 <attr_subst_subdir>:
  41f490:	stp	x29, x30, [sp, #-80]!
  41f494:	str	x28, [sp, #16]
  41f498:	stp	x24, x23, [sp, #32]
  41f49c:	stp	x22, x21, [sp, #48]
  41f4a0:	stp	x20, x19, [sp, #64]
  41f4a4:	mov	x29, sp
  41f4a8:	sub	sp, sp, #0x400
  41f4ac:	adrp	x1, 438000 <worker_hash_op+0x3df8>
  41f4b0:	add	x1, x1, #0xf3f
  41f4b4:	mov	x19, x0
  41f4b8:	bl	40b1f0 <strstr@plt>
  41f4bc:	cbz	x0, 41f588 <attr_subst_subdir+0xf8>
  41f4c0:	sub	x8, x0, x19
  41f4c4:	mov	x22, x0
  41f4c8:	mov	x9, sp
  41f4cc:	add	x3, x8, #0x1
  41f4d0:	add	x0, x29, #0x18
  41f4d4:	mov	w1, #0x400                 	// #1024
  41f4d8:	mov	x2, x19
  41f4dc:	str	x9, [x29, #24]
  41f4e0:	mov	w24, #0x400                 	// #1024
  41f4e4:	bl	40ad80 <strnpcpy@plt>
  41f4e8:	mov	x23, x0
  41f4ec:	mov	x0, sp
  41f4f0:	bl	40af80 <opendir@plt>
  41f4f4:	mov	x20, x0
  41f4f8:	bl	40a3e0 <__errno_location@plt>
  41f4fc:	mov	x21, x0
  41f500:	cbz	x20, 41f5a0 <attr_subst_subdir+0x110>
  41f504:	mov	x0, x20
  41f508:	str	wzr, [x21]
  41f50c:	bl	40af90 <readdir64@plt>
  41f510:	cbz	x0, 41f590 <attr_subst_subdir+0x100>
  41f514:	mov	x2, x0
  41f518:	add	x22, x22, #0x2
  41f51c:	sub	x23, x24, x23
  41f520:	b	41f538 <attr_subst_subdir+0xa8>
  41f524:	mov	x0, x20
  41f528:	str	wzr, [x21]
  41f52c:	bl	40af90 <readdir64@plt>
  41f530:	mov	x2, x0
  41f534:	cbz	x0, 41f590 <attr_subst_subdir+0x100>
  41f538:	ldrb	w8, [x2, #19]!
  41f53c:	cmp	w8, #0x2e
  41f540:	b.eq	41f524 <attr_subst_subdir+0x94>  // b.none
  41f544:	ldr	x0, [x29, #24]
  41f548:	mov	x1, x23
  41f54c:	mov	x3, x22
  41f550:	mov	x4, xzr
  41f554:	bl	40b1a0 <strscpyl@plt>
  41f558:	mov	x0, x20
  41f55c:	bl	40b3f0 <dirfd@plt>
  41f560:	ldr	x1, [x29, #24]
  41f564:	mov	w2, wzr
  41f568:	mov	w3, wzr
  41f56c:	bl	40b400 <faccessat@plt>
  41f570:	tbnz	w0, #31, 41f524 <attr_subst_subdir+0x94>
  41f574:	mov	x1, sp
  41f578:	mov	x0, x19
  41f57c:	bl	40b410 <strcpy@plt>
  41f580:	mov	w19, wzr
  41f584:	b	41f594 <attr_subst_subdir+0x104>
  41f588:	mov	w19, wzr
  41f58c:	b	41f5a8 <attr_subst_subdir+0x118>
  41f590:	mov	w19, #0xfffffffe            	// #-2
  41f594:	mov	x0, x20
  41f598:	bl	40afc0 <closedir@plt>
  41f59c:	b	41f5a8 <attr_subst_subdir+0x118>
  41f5a0:	ldr	w8, [x21]
  41f5a4:	neg	w19, w8
  41f5a8:	mov	w0, w19
  41f5ac:	add	sp, sp, #0x400
  41f5b0:	ldp	x20, x19, [sp, #64]
  41f5b4:	ldp	x22, x21, [sp, #48]
  41f5b8:	ldp	x24, x23, [sp, #32]
  41f5bc:	ldr	x28, [sp, #16]
  41f5c0:	ldp	x29, x30, [sp], #80
  41f5c4:	ret

000000000041f5c8 <get_property_from_string>:
  41f5c8:	stp	x29, x30, [sp, #-64]!
  41f5cc:	str	x23, [sp, #16]
  41f5d0:	stp	x22, x21, [sp, #32]
  41f5d4:	stp	x20, x19, [sp, #48]
  41f5d8:	mov	x29, sp
  41f5dc:	cbz	x0, 41f6c8 <get_property_from_string+0x100>
  41f5e0:	mov	x20, x1
  41f5e4:	cbz	x1, 41f6ec <get_property_from_string+0x124>
  41f5e8:	mov	x19, x2
  41f5ec:	cbz	x2, 41f710 <get_property_from_string+0x148>
  41f5f0:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  41f5f4:	add	x1, x1, #0xacd
  41f5f8:	mov	x21, x0
  41f5fc:	bl	40ad40 <strspn@plt>
  41f600:	add	x21, x21, x0
  41f604:	ldrb	w8, [x21]
  41f608:	cmp	w8, #0x23
  41f60c:	b.eq	41f614 <get_property_from_string+0x4c>  // b.none
  41f610:	cbnz	w8, 41f624 <get_property_from_string+0x5c>
  41f614:	mov	w0, wzr
  41f618:	str	xzr, [x19]
  41f61c:	str	xzr, [x20]
  41f620:	b	41f6b4 <get_property_from_string+0xec>
  41f624:	mov	w1, #0x3d                  	// #61
  41f628:	mov	x0, x21
  41f62c:	bl	40a7d0 <strchr@plt>
  41f630:	cbz	x0, 41f6b0 <get_property_from_string+0xe8>
  41f634:	mov	x22, x0
  41f638:	strb	wzr, [x0]
  41f63c:	mov	x0, x21
  41f640:	bl	40b380 <strstrip@plt>
  41f644:	cbz	x0, 41f6b0 <get_property_from_string+0xe8>
  41f648:	ldrb	w8, [x0]
  41f64c:	mov	x21, x0
  41f650:	cbz	w8, 41f6b0 <get_property_from_string+0xe8>
  41f654:	add	x0, x22, #0x1
  41f658:	bl	40b380 <strstrip@plt>
  41f65c:	cbz	x0, 41f6b0 <get_property_from_string+0xe8>
  41f660:	ldrb	w23, [x0]
  41f664:	mov	x22, x0
  41f668:	cbz	w23, 41f6b0 <get_property_from_string+0xe8>
  41f66c:	cmp	w23, #0x27
  41f670:	b.eq	41f67c <get_property_from_string+0xb4>  // b.none
  41f674:	cmp	w23, #0x22
  41f678:	b.ne	41f6a0 <get_property_from_string+0xd8>  // b.any
  41f67c:	mov	x0, x22
  41f680:	bl	40aa40 <strlen@plt>
  41f684:	subs	x8, x0, #0x1
  41f688:	b.eq	41f6b0 <get_property_from_string+0xe8>  // b.none
  41f68c:	ldrb	w9, [x22, x8]
  41f690:	cmp	w9, w23
  41f694:	b.ne	41f6b0 <get_property_from_string+0xe8>  // b.any
  41f698:	strb	wzr, [x22, x8]
  41f69c:	add	x22, x22, #0x1
  41f6a0:	mov	w0, #0x1                   	// #1
  41f6a4:	str	x21, [x20]
  41f6a8:	str	x22, [x19]
  41f6ac:	b	41f6b4 <get_property_from_string+0xec>
  41f6b0:	mov	w0, #0xffffffea            	// #-22
  41f6b4:	ldp	x20, x19, [sp, #48]
  41f6b8:	ldp	x22, x21, [sp, #32]
  41f6bc:	ldr	x23, [sp, #16]
  41f6c0:	ldp	x29, x30, [sp], #64
  41f6c4:	ret
  41f6c8:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  41f6cc:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41f6d0:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41f6d4:	add	x1, x1, #0xb8d
  41f6d8:	add	x2, x2, #0x8da
  41f6dc:	add	x4, x4, #0xf43
  41f6e0:	mov	w0, #0x1                   	// #1
  41f6e4:	mov	w3, #0x587                 	// #1415
  41f6e8:	bl	40a630 <log_assert_failed_realm@plt>
  41f6ec:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  41f6f0:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41f6f4:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41f6f8:	add	x1, x1, #0xb92
  41f6fc:	add	x2, x2, #0x8da
  41f700:	add	x4, x4, #0xf43
  41f704:	mov	w0, #0x1                   	// #1
  41f708:	mov	w3, #0x588                 	// #1416
  41f70c:	bl	40a630 <log_assert_failed_realm@plt>
  41f710:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  41f714:	adrp	x2, 437000 <worker_hash_op+0x2df8>
  41f718:	adrp	x4, 438000 <worker_hash_op+0x3df8>
  41f71c:	add	x1, x1, #0xb9a
  41f720:	add	x2, x2, #0x8da
  41f724:	add	x4, x4, #0xf43
  41f728:	mov	w0, #0x1                   	// #1
  41f72c:	mov	w3, #0x589                 	// #1417
  41f730:	bl	40a630 <log_assert_failed_realm@plt>

000000000041f734 <udev_watch_init>:
  41f734:	stp	x29, x30, [sp, #-16]!
  41f738:	mov	w0, #0x80000               	// #524288
  41f73c:	mov	x29, sp
  41f740:	bl	40b420 <inotify_init1@plt>
  41f744:	adrp	x8, 470000 <arg_resolve_name_timing>
  41f748:	str	w0, [x8, #16]
  41f74c:	tbnz	w0, #31, 41f758 <udev_watch_init+0x24>
  41f750:	ldp	x29, x30, [sp], #16
  41f754:	ret
  41f758:	bl	40a3e0 <__errno_location@plt>
  41f75c:	ldr	w8, [x0]
  41f760:	neg	w0, w8
  41f764:	ldp	x29, x30, [sp], #16
  41f768:	ret

000000000041f76c <udev_watch_restore>:
  41f76c:	sub	sp, sp, #0x90
  41f770:	stp	x29, x30, [sp, #48]
  41f774:	stp	x28, x27, [sp, #64]
  41f778:	stp	x26, x25, [sp, #80]
  41f77c:	stp	x24, x23, [sp, #96]
  41f780:	stp	x22, x21, [sp, #112]
  41f784:	stp	x20, x19, [sp, #128]
  41f788:	adrp	x8, 470000 <arg_resolve_name_timing>
  41f78c:	ldr	w8, [x8, #16]
  41f790:	add	x29, sp, #0x30
  41f794:	tbnz	w8, #31, 41f960 <udev_watch_restore+0x1f4>
  41f798:	adrp	x0, 439000 <worker_hash_op+0x4df8>
  41f79c:	adrp	x1, 439000 <worker_hash_op+0x4df8>
  41f7a0:	add	x0, x0, #0x12c
  41f7a4:	add	x1, x1, #0x13c
  41f7a8:	bl	40b0e0 <rename@plt>
  41f7ac:	tbnz	w0, #31, 41f9b4 <udev_watch_restore+0x248>
  41f7b0:	adrp	x0, 439000 <worker_hash_op+0x4df8>
  41f7b4:	add	x0, x0, #0x13c
  41f7b8:	bl	40af80 <opendir@plt>
  41f7bc:	mov	x19, x0
  41f7c0:	bl	40a3e0 <__errno_location@plt>
  41f7c4:	mov	x20, x0
  41f7c8:	cbz	x19, 41f9d4 <udev_watch_restore+0x268>
  41f7cc:	mov	x0, x19
  41f7d0:	str	wzr, [x20]
  41f7d4:	bl	40af90 <readdir64@plt>
  41f7d8:	cbz	x0, 41f99c <udev_watch_restore+0x230>
  41f7dc:	adrp	x21, 439000 <worker_hash_op+0x4df8>
  41f7e0:	adrp	x22, 439000 <worker_hash_op+0x4df8>
  41f7e4:	adrp	x23, 439000 <worker_hash_op+0x4df8>
  41f7e8:	adrp	x24, 439000 <worker_hash_op+0x4df8>
  41f7ec:	adrp	x27, 435000 <worker_hash_op+0xdf8>
  41f7f0:	adrp	x28, 439000 <worker_hash_op+0x4df8>
  41f7f4:	mov	x25, x0
  41f7f8:	add	x21, x21, #0xe7
  41f7fc:	add	x22, x22, #0xfd
  41f800:	add	x23, x23, #0x206
  41f804:	add	x24, x24, #0x241
  41f808:	add	x27, x27, #0x7f
  41f80c:	add	x28, x28, #0x27a
  41f810:	b	41f828 <udev_watch_restore+0xbc>
  41f814:	mov	x0, x19
  41f818:	str	wzr, [x20]
  41f81c:	bl	40af90 <readdir64@plt>
  41f820:	mov	x25, x0
  41f824:	cbz	x0, 41f99c <udev_watch_restore+0x230>
  41f828:	stp	xzr, xzr, [x29, #-16]
  41f82c:	ldrb	w8, [x25, #19]!
  41f830:	mov	x0, xzr
  41f834:	cmp	w8, #0x2e
  41f838:	b.eq	41f938 <udev_watch_restore+0x1cc>  // b.none
  41f83c:	mov	x0, x19
  41f840:	bl	40b3f0 <dirfd@plt>
  41f844:	sub	x2, x29, #0x10
  41f848:	mov	x1, x25
  41f84c:	bl	40b430 <readlinkat_malloc@plt>
  41f850:	tbnz	w0, #31, 41f8b8 <udev_watch_restore+0x14c>
  41f854:	ldur	x1, [x29, #-16]
  41f858:	sub	x0, x29, #0x8
  41f85c:	bl	40afa0 <sd_device_new_from_device_id@plt>
  41f860:	tbnz	w0, #31, 41f8ec <udev_watch_restore+0x180>
  41f864:	ldur	x26, [x29, #-8]
  41f868:	str	xzr, [sp, #24]
  41f86c:	cbz	x26, 41f880 <udev_watch_restore+0x114>
  41f870:	mov	w0, #0x1                   	// #1
  41f874:	bl	40a2c0 <log_get_max_level_realm@plt>
  41f878:	cmp	w0, #0x7
  41f87c:	b.ge	41f94c <udev_watch_restore+0x1e0>  // b.tcont
  41f880:	mov	x6, xzr
  41f884:	cmp	x6, #0x0
  41f888:	csel	x5, xzr, x27, eq  // eq = none
  41f88c:	mov	w0, #0x7                   	// #7
  41f890:	mov	w3, #0x48                  	// #72
  41f894:	mov	w1, wzr
  41f898:	mov	x2, x21
  41f89c:	mov	x4, x22
  41f8a0:	mov	x7, xzr
  41f8a4:	stp	xzr, x28, [sp]
  41f8a8:	bl	40a730 <log_object_internal@plt>
  41f8ac:	ldur	x0, [x29, #-8]
  41f8b0:	bl	41fa90 <udev_watch_begin>
  41f8b4:	b	41f920 <udev_watch_restore+0x1b4>
  41f8b8:	mov	w26, w0
  41f8bc:	mov	w0, #0x1                   	// #1
  41f8c0:	bl	40a2c0 <log_get_max_level_realm@plt>
  41f8c4:	cmp	w0, #0x7
  41f8c8:	b.lt	41f920 <udev_watch_restore+0x1b4>  // b.tstop
  41f8cc:	mov	w0, #0x407                 	// #1031
  41f8d0:	mov	w3, #0x3e                  	// #62
  41f8d4:	mov	w1, w26
  41f8d8:	mov	x2, x21
  41f8dc:	mov	x4, x22
  41f8e0:	mov	x5, x23
  41f8e4:	mov	x6, x25
  41f8e8:	b	41f91c <udev_watch_restore+0x1b0>
  41f8ec:	mov	w26, w0
  41f8f0:	mov	w0, #0x1                   	// #1
  41f8f4:	bl	40a2c0 <log_get_max_level_realm@plt>
  41f8f8:	cmp	w0, #0x7
  41f8fc:	b.lt	41f920 <udev_watch_restore+0x1b4>  // b.tstop
  41f900:	ldur	x6, [x29, #-16]
  41f904:	mov	w0, #0x407                 	// #1031
  41f908:	mov	w3, #0x44                  	// #68
  41f90c:	mov	w1, w26
  41f910:	mov	x2, x21
  41f914:	mov	x4, x22
  41f918:	mov	x5, x24
  41f91c:	bl	40a2d0 <log_internal_realm@plt>
  41f920:	mov	x0, x19
  41f924:	bl	40b3f0 <dirfd@plt>
  41f928:	mov	x1, x25
  41f92c:	mov	w2, wzr
  41f930:	bl	40b440 <unlinkat@plt>
  41f934:	ldur	x0, [x29, #-16]
  41f938:	bl	40a320 <free@plt>
  41f93c:	ldur	x0, [x29, #-8]
  41f940:	cbz	x0, 41f814 <udev_watch_restore+0xa8>
  41f944:	bl	40a6e0 <sd_device_unref@plt>
  41f948:	b	41f814 <udev_watch_restore+0xa8>
  41f94c:	add	x1, sp, #0x18
  41f950:	mov	x0, x26
  41f954:	bl	40a780 <sd_device_get_sysname@plt>
  41f958:	ldr	x6, [sp, #24]
  41f95c:	b	41f884 <udev_watch_restore+0x118>
  41f960:	mov	w0, #0x1                   	// #1
  41f964:	bl	40a2c0 <log_get_max_level_realm@plt>
  41f968:	cmp	w0, #0x7
  41f96c:	b.lt	41f9cc <udev_watch_restore+0x260>  // b.tstop
  41f970:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  41f974:	adrp	x4, 439000 <worker_hash_op+0x4df8>
  41f978:	adrp	x5, 439000 <worker_hash_op+0x4df8>
  41f97c:	mov	w1, #0x16                  	// #22
  41f980:	add	x2, x2, #0xe7
  41f984:	add	x4, x4, #0xfd
  41f988:	add	x5, x5, #0x110
  41f98c:	mov	w0, #0x407                 	// #1031
  41f990:	movk	w1, #0x4000, lsl #16
  41f994:	mov	w3, #0x28                  	// #40
  41f998:	b	41fa40 <udev_watch_restore+0x2d4>
  41f99c:	mov	x0, x19
  41f9a0:	bl	40afc0 <closedir@plt>
  41f9a4:	adrp	x0, 439000 <worker_hash_op+0x4df8>
  41f9a8:	add	x0, x0, #0x13c
  41f9ac:	bl	40af70 <rmdir@plt>
  41f9b0:	b	41f9c4 <udev_watch_restore+0x258>
  41f9b4:	bl	40a3e0 <__errno_location@plt>
  41f9b8:	ldr	w19, [x0]
  41f9bc:	cmp	w19, #0x2
  41f9c0:	b.ne	41fa0c <udev_watch_restore+0x2a0>  // b.any
  41f9c4:	mov	w0, wzr
  41f9c8:	b	41fa70 <udev_watch_restore+0x304>
  41f9cc:	mov	w0, #0xffffffea            	// #-22
  41f9d0:	b	41fa70 <udev_watch_restore+0x304>
  41f9d4:	ldr	w19, [x20]
  41f9d8:	mov	w0, #0x1                   	// #1
  41f9dc:	bl	40a2c0 <log_get_max_level_realm@plt>
  41f9e0:	cmp	w0, #0x4
  41f9e4:	b.lt	41fa60 <udev_watch_restore+0x2f4>  // b.tstop
  41f9e8:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  41f9ec:	adrp	x4, 439000 <worker_hash_op+0x4df8>
  41f9f0:	adrp	x5, 439000 <worker_hash_op+0x4df8>
  41f9f4:	add	x2, x2, #0xe7
  41f9f8:	add	x4, x4, #0xfd
  41f9fc:	add	x5, x5, #0x1a7
  41fa00:	mov	w0, #0x404                 	// #1028
  41fa04:	mov	w3, #0x33                  	// #51
  41fa08:	b	41fa3c <udev_watch_restore+0x2d0>
  41fa0c:	mov	w0, #0x1                   	// #1
  41fa10:	bl	40a2c0 <log_get_max_level_realm@plt>
  41fa14:	cmp	w0, #0x4
  41fa18:	b.lt	41fa60 <udev_watch_restore+0x2f4>  // b.tstop
  41fa1c:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  41fa20:	adrp	x4, 439000 <worker_hash_op+0x4df8>
  41fa24:	adrp	x5, 439000 <worker_hash_op+0x4df8>
  41fa28:	add	x2, x2, #0xe7
  41fa2c:	add	x4, x4, #0xfd
  41fa30:	add	x5, x5, #0x150
  41fa34:	mov	w0, #0x404                 	// #1028
  41fa38:	mov	w3, #0x2c                  	// #44
  41fa3c:	mov	w1, w19
  41fa40:	ldp	x20, x19, [sp, #128]
  41fa44:	ldp	x22, x21, [sp, #112]
  41fa48:	ldp	x24, x23, [sp, #96]
  41fa4c:	ldp	x26, x25, [sp, #80]
  41fa50:	ldp	x28, x27, [sp, #64]
  41fa54:	ldp	x29, x30, [sp, #48]
  41fa58:	add	sp, sp, #0x90
  41fa5c:	b	40a2d0 <log_internal_realm@plt>
  41fa60:	cmp	w19, #0x0
  41fa64:	mov	w8, wzr
  41fa68:	cneg	w9, w19, mi  // mi = first
  41fa6c:	sub	w0, w8, w9, uxtb
  41fa70:	ldp	x20, x19, [sp, #128]
  41fa74:	ldp	x22, x21, [sp, #112]
  41fa78:	ldp	x24, x23, [sp, #96]
  41fa7c:	ldp	x26, x25, [sp, #80]
  41fa80:	ldp	x28, x27, [sp, #64]
  41fa84:	ldp	x29, x30, [sp, #48]
  41fa88:	add	sp, sp, #0x90
  41fa8c:	ret

000000000041fa90 <udev_watch_begin>:
  41fa90:	sub	sp, sp, #0x90
  41fa94:	stp	x22, x21, [sp, #112]
  41fa98:	adrp	x21, 470000 <arg_resolve_name_timing>
  41fa9c:	ldr	w8, [x21, #16]
  41faa0:	stp	x29, x30, [sp, #80]
  41faa4:	str	x23, [sp, #96]
  41faa8:	stp	x20, x19, [sp, #128]
  41faac:	add	x29, sp, #0x50
  41fab0:	tbnz	w8, #31, 41fbb0 <udev_watch_begin+0x120>
  41fab4:	add	x1, x29, #0x18
  41fab8:	mov	x19, x0
  41fabc:	bl	40a840 <sd_device_get_devname@plt>
  41fac0:	tbnz	w0, #31, 41fbf0 <udev_watch_begin+0x160>
  41fac4:	stur	xzr, [x29, #-32]
  41fac8:	cbz	x19, 41fadc <udev_watch_begin+0x4c>
  41facc:	mov	w0, #0x1                   	// #1
  41fad0:	bl	40a2c0 <log_get_max_level_realm@plt>
  41fad4:	cmp	w0, #0x7
  41fad8:	b.ge	41fdd8 <udev_watch_begin+0x348>  // b.tcont
  41fadc:	mov	x6, xzr
  41fae0:	ldr	x8, [x29, #24]
  41fae4:	adrp	x22, 435000 <worker_hash_op+0xdf8>
  41fae8:	add	x22, x22, #0x7f
  41faec:	cmp	x6, #0x0
  41faf0:	str	x8, [sp, #16]
  41faf4:	adrp	x8, 439000 <worker_hash_op+0x4df8>
  41faf8:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  41fafc:	adrp	x4, 439000 <worker_hash_op+0x4df8>
  41fb00:	csel	x5, xzr, x22, eq  // eq = none
  41fb04:	add	x8, x8, #0x2bd
  41fb08:	add	x2, x2, #0xe7
  41fb0c:	add	x4, x4, #0x28e
  41fb10:	mov	w0, #0x7                   	// #7
  41fb14:	mov	w3, #0x61                  	// #97
  41fb18:	mov	w1, wzr
  41fb1c:	mov	x7, xzr
  41fb20:	stp	xzr, x8, [sp]
  41fb24:	mov	w23, #0x7                   	// #7
  41fb28:	bl	40a730 <log_object_internal@plt>
  41fb2c:	ldr	w0, [x21, #16]
  41fb30:	ldr	x1, [x29, #24]
  41fb34:	mov	w2, #0x8                   	// #8
  41fb38:	bl	40b450 <inotify_add_watch@plt>
  41fb3c:	tbnz	w0, #31, 41fc50 <udev_watch_begin+0x1c0>
  41fb40:	mov	w20, w0
  41fb44:	mov	x0, x19
  41fb48:	mov	w1, w20
  41fb4c:	bl	40b460 <device_set_watch_handle@plt>
  41fb50:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  41fb54:	add	x2, x2, #0x2f9
  41fb58:	sub	x0, x29, #0x20
  41fb5c:	mov	w1, #0x1c                  	// #28
  41fb60:	mov	w3, w20
  41fb64:	bl	40b050 <snprintf@plt>
  41fb68:	cmp	w0, #0x1c
  41fb6c:	b.cs	41fe50 <udev_watch_begin+0x3c0>  // b.hs, b.nlast
  41fb70:	sub	x0, x29, #0x20
  41fb74:	mov	w1, #0x1ed                 	// #493
  41fb78:	bl	40afe0 <mkdir_parents@plt>
  41fb7c:	tbnz	w0, #31, 41fcb8 <udev_watch_begin+0x228>
  41fb80:	sub	x0, x29, #0x20
  41fb84:	bl	40a6f0 <unlink@plt>
  41fb88:	add	x1, sp, #0x28
  41fb8c:	mov	x0, x19
  41fb90:	bl	40af40 <device_get_id_filename@plt>
  41fb94:	tbnz	w0, #31, 41fd0c <udev_watch_begin+0x27c>
  41fb98:	ldr	x0, [sp, #40]
  41fb9c:	sub	x1, x29, #0x20
  41fba0:	bl	40b0b0 <symlink@plt>
  41fba4:	tbnz	w0, #31, 41fd5c <udev_watch_begin+0x2cc>
  41fba8:	mov	w0, wzr
  41fbac:	b	41fdc0 <udev_watch_begin+0x330>
  41fbb0:	mov	w0, #0x1                   	// #1
  41fbb4:	bl	40a2c0 <log_get_max_level_realm@plt>
  41fbb8:	cmp	w0, #0x7
  41fbbc:	b.lt	41fc48 <udev_watch_begin+0x1b8>  // b.tstop
  41fbc0:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  41fbc4:	adrp	x4, 439000 <worker_hash_op+0x4df8>
  41fbc8:	adrp	x5, 439000 <worker_hash_op+0x4df8>
  41fbcc:	mov	w1, #0x16                  	// #22
  41fbd0:	add	x2, x2, #0xe7
  41fbd4:	add	x4, x4, #0x28e
  41fbd8:	add	x5, x5, #0x110
  41fbdc:	mov	w0, #0x407                 	// #1031
  41fbe0:	movk	w1, #0x4000, lsl #16
  41fbe4:	mov	w3, #0x5b                  	// #91
  41fbe8:	bl	40a2d0 <log_internal_realm@plt>
  41fbec:	b	41fdc0 <udev_watch_begin+0x330>
  41fbf0:	mov	w20, w0
  41fbf4:	stur	xzr, [x29, #-32]
  41fbf8:	cbz	x19, 41fc0c <udev_watch_begin+0x17c>
  41fbfc:	mov	w0, #0x1                   	// #1
  41fc00:	bl	40a2c0 <log_get_max_level_realm@plt>
  41fc04:	cmp	w0, #0x3
  41fc08:	b.ge	41fdec <udev_watch_begin+0x35c>  // b.tcont
  41fc0c:	mov	x6, xzr
  41fc10:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  41fc14:	add	x8, x8, #0x7f
  41fc18:	cmp	x6, #0x0
  41fc1c:	csel	x5, xzr, x8, eq  // eq = none
  41fc20:	adrp	x8, 439000 <worker_hash_op+0x4df8>
  41fc24:	add	x8, x8, #0x29f
  41fc28:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  41fc2c:	adrp	x4, 439000 <worker_hash_op+0x4df8>
  41fc30:	add	x2, x2, #0xe7
  41fc34:	add	x4, x4, #0x28e
  41fc38:	str	x8, [sp, #8]
  41fc3c:	mov	w0, #0x3                   	// #3
  41fc40:	mov	w3, #0x5f                  	// #95
  41fc44:	b	41fdb0 <udev_watch_begin+0x320>
  41fc48:	mov	w0, #0xffffffea            	// #-22
  41fc4c:	b	41fdc0 <udev_watch_begin+0x330>
  41fc50:	stur	xzr, [x29, #-32]
  41fc54:	bl	40a3e0 <__errno_location@plt>
  41fc58:	ldr	w20, [x0]
  41fc5c:	mov	w8, #0x3                   	// #3
  41fc60:	cmp	w20, #0x2
  41fc64:	csel	w21, w23, w8, eq  // eq = none
  41fc68:	cbz	x19, 41fc7c <udev_watch_begin+0x1ec>
  41fc6c:	mov	w0, #0x1                   	// #1
  41fc70:	bl	40a2c0 <log_get_max_level_realm@plt>
  41fc74:	cmp	w0, w21
  41fc78:	b.ge	41fe00 <udev_watch_begin+0x370>  // b.tcont
  41fc7c:	mov	x6, xzr
  41fc80:	ldr	x8, [x29, #24]
  41fc84:	cmp	x6, #0x0
  41fc88:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  41fc8c:	adrp	x4, 439000 <worker_hash_op+0x4df8>
  41fc90:	str	x8, [sp, #16]
  41fc94:	adrp	x8, 439000 <worker_hash_op+0x4df8>
  41fc98:	add	x8, x8, #0x2d2
  41fc9c:	csel	x5, xzr, x22, eq  // eq = none
  41fca0:	add	x2, x2, #0xe7
  41fca4:	add	x4, x4, #0x28e
  41fca8:	stp	xzr, x8, [sp]
  41fcac:	mov	w3, #0x67                  	// #103
  41fcb0:	mov	w0, w21
  41fcb4:	b	41fdb4 <udev_watch_begin+0x324>
  41fcb8:	mov	w20, w0
  41fcbc:	str	xzr, [sp, #40]
  41fcc0:	cbz	x19, 41fcd4 <udev_watch_begin+0x244>
  41fcc4:	mov	w0, #0x1                   	// #1
  41fcc8:	bl	40a2c0 <log_get_max_level_realm@plt>
  41fccc:	cmp	w0, #0x3
  41fcd0:	b.ge	41fe14 <udev_watch_begin+0x384>  // b.tcont
  41fcd4:	mov	x6, xzr
  41fcd8:	adrp	x9, 439000 <worker_hash_op+0x4df8>
  41fcdc:	cmp	x6, #0x0
  41fce0:	sub	x8, x29, #0x20
  41fce4:	add	x9, x9, #0x32e
  41fce8:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  41fcec:	adrp	x4, 439000 <worker_hash_op+0x4df8>
  41fcf0:	csel	x5, xzr, x22, eq  // eq = none
  41fcf4:	add	x2, x2, #0xe7
  41fcf8:	add	x4, x4, #0x28e
  41fcfc:	stp	x9, x8, [sp, #8]
  41fd00:	mov	w0, #0x3                   	// #3
  41fd04:	mov	w3, #0x6e                  	// #110
  41fd08:	b	41fdb0 <udev_watch_begin+0x320>
  41fd0c:	mov	w20, w0
  41fd10:	str	xzr, [sp, #32]
  41fd14:	cbz	x19, 41fd28 <udev_watch_begin+0x298>
  41fd18:	mov	w0, #0x1                   	// #1
  41fd1c:	bl	40a2c0 <log_get_max_level_realm@plt>
  41fd20:	cmp	w0, #0x3
  41fd24:	b.ge	41fe28 <udev_watch_begin+0x398>  // b.tcont
  41fd28:	mov	x6, xzr
  41fd2c:	adrp	x8, 439000 <worker_hash_op+0x4df8>
  41fd30:	cmp	x6, #0x0
  41fd34:	add	x8, x8, #0x35c
  41fd38:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  41fd3c:	adrp	x4, 439000 <worker_hash_op+0x4df8>
  41fd40:	csel	x5, xzr, x22, eq  // eq = none
  41fd44:	add	x2, x2, #0xe7
  41fd48:	add	x4, x4, #0x28e
  41fd4c:	str	x8, [sp, #8]
  41fd50:	mov	w0, #0x3                   	// #3
  41fd54:	mov	w3, #0x73                  	// #115
  41fd58:	b	41fdb0 <udev_watch_begin+0x320>
  41fd5c:	str	xzr, [sp, #32]
  41fd60:	bl	40a3e0 <__errno_location@plt>
  41fd64:	ldr	w20, [x0]
  41fd68:	cbz	x19, 41fd7c <udev_watch_begin+0x2ec>
  41fd6c:	mov	w0, #0x1                   	// #1
  41fd70:	bl	40a2c0 <log_get_max_level_realm@plt>
  41fd74:	cmp	w0, #0x3
  41fd78:	b.ge	41fe3c <udev_watch_begin+0x3ac>  // b.tcont
  41fd7c:	mov	x6, xzr
  41fd80:	cmp	x6, #0x0
  41fd84:	adrp	x9, 439000 <worker_hash_op+0x4df8>
  41fd88:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  41fd8c:	adrp	x4, 439000 <worker_hash_op+0x4df8>
  41fd90:	csel	x5, xzr, x22, eq  // eq = none
  41fd94:	sub	x8, x29, #0x20
  41fd98:	add	x9, x9, #0x381
  41fd9c:	add	x2, x2, #0xe7
  41fda0:	add	x4, x4, #0x28e
  41fda4:	mov	w0, #0x3                   	// #3
  41fda8:	mov	w3, #0x76                  	// #118
  41fdac:	stp	x9, x8, [sp, #8]
  41fdb0:	str	xzr, [sp]
  41fdb4:	mov	w1, w20
  41fdb8:	mov	x7, xzr
  41fdbc:	bl	40a730 <log_object_internal@plt>
  41fdc0:	ldp	x20, x19, [sp, #128]
  41fdc4:	ldp	x22, x21, [sp, #112]
  41fdc8:	ldr	x23, [sp, #96]
  41fdcc:	ldp	x29, x30, [sp, #80]
  41fdd0:	add	sp, sp, #0x90
  41fdd4:	ret
  41fdd8:	sub	x1, x29, #0x20
  41fddc:	mov	x0, x19
  41fde0:	bl	40a780 <sd_device_get_sysname@plt>
  41fde4:	ldur	x6, [x29, #-32]
  41fde8:	b	41fae0 <udev_watch_begin+0x50>
  41fdec:	sub	x1, x29, #0x20
  41fdf0:	mov	x0, x19
  41fdf4:	bl	40a780 <sd_device_get_sysname@plt>
  41fdf8:	ldur	x6, [x29, #-32]
  41fdfc:	b	41fc10 <udev_watch_begin+0x180>
  41fe00:	sub	x1, x29, #0x20
  41fe04:	mov	x0, x19
  41fe08:	bl	40a780 <sd_device_get_sysname@plt>
  41fe0c:	ldur	x6, [x29, #-32]
  41fe10:	b	41fc80 <udev_watch_begin+0x1f0>
  41fe14:	add	x1, sp, #0x28
  41fe18:	mov	x0, x19
  41fe1c:	bl	40a780 <sd_device_get_sysname@plt>
  41fe20:	ldr	x6, [sp, #40]
  41fe24:	b	41fcd8 <udev_watch_begin+0x248>
  41fe28:	add	x1, sp, #0x20
  41fe2c:	mov	x0, x19
  41fe30:	bl	40a780 <sd_device_get_sysname@plt>
  41fe34:	ldr	x6, [sp, #32]
  41fe38:	b	41fd2c <udev_watch_begin+0x29c>
  41fe3c:	add	x1, sp, #0x20
  41fe40:	mov	x0, x19
  41fe44:	bl	40a780 <sd_device_get_sysname@plt>
  41fe48:	ldr	x6, [sp, #32]
  41fe4c:	b	41fd80 <udev_watch_begin+0x2f0>
  41fe50:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  41fe54:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  41fe58:	adrp	x4, 439000 <worker_hash_op+0x4df8>
  41fe5c:	add	x1, x1, #0x6a7
  41fe60:	add	x2, x2, #0xe7
  41fe64:	add	x4, x4, #0x30c
  41fe68:	mov	w0, #0x1                   	// #1
  41fe6c:	mov	w3, #0x6b                  	// #107
  41fe70:	bl	40a630 <log_assert_failed_realm@plt>

000000000041fe74 <udev_watch_end>:
  41fe74:	sub	sp, sp, #0x60
  41fe78:	str	x21, [sp, #64]
  41fe7c:	adrp	x21, 470000 <arg_resolve_name_timing>
  41fe80:	ldr	w8, [x21, #16]
  41fe84:	stp	x29, x30, [sp, #48]
  41fe88:	stp	x20, x19, [sp, #80]
  41fe8c:	add	x29, sp, #0x30
  41fe90:	tbnz	w8, #31, 41ff54 <udev_watch_end+0xe0>
  41fe94:	add	x1, x29, #0x1c
  41fe98:	mov	x19, x0
  41fe9c:	bl	40b470 <device_get_watch_handle@plt>
  41fea0:	cmn	w0, #0x2
  41fea4:	b.eq	41ff4c <udev_watch_end+0xd8>  // b.none
  41fea8:	mov	w20, w0
  41feac:	tbnz	w0, #31, 41ff9c <udev_watch_end+0x128>
  41feb0:	str	xzr, [sp, #16]
  41feb4:	cbz	x19, 41fec8 <udev_watch_end+0x54>
  41feb8:	mov	w0, #0x1                   	// #1
  41febc:	bl	40a2c0 <log_get_max_level_realm@plt>
  41fec0:	cmp	w0, #0x7
  41fec4:	b.ge	42000c <udev_watch_end+0x198>  // b.tcont
  41fec8:	mov	x6, xzr
  41fecc:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  41fed0:	add	x8, x8, #0x7f
  41fed4:	cmp	x6, #0x0
  41fed8:	csel	x5, xzr, x8, eq  // eq = none
  41fedc:	adrp	x8, 439000 <worker_hash_op+0x4df8>
  41fee0:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  41fee4:	adrp	x4, 439000 <worker_hash_op+0x4df8>
  41fee8:	add	x8, x8, #0x3d9
  41feec:	add	x2, x2, #0xe7
  41fef0:	add	x4, x4, #0x3a1
  41fef4:	mov	w0, #0x7                   	// #7
  41fef8:	mov	w3, #0x89                  	// #137
  41fefc:	mov	w1, wzr
  41ff00:	mov	x7, xzr
  41ff04:	stp	xzr, x8, [sp]
  41ff08:	bl	40a730 <log_object_internal@plt>
  41ff0c:	ldr	w0, [x21, #16]
  41ff10:	ldr	w1, [x29, #28]
  41ff14:	bl	40b480 <inotify_rm_watch@plt>
  41ff18:	ldr	w3, [x29, #28]
  41ff1c:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  41ff20:	add	x2, x2, #0x2f9
  41ff24:	add	x0, sp, #0x10
  41ff28:	mov	w1, #0x1c                  	// #28
  41ff2c:	bl	40b050 <snprintf@plt>
  41ff30:	cmp	w0, #0x1c
  41ff34:	b.cs	420034 <udev_watch_end+0x1c0>  // b.hs, b.nlast
  41ff38:	add	x0, sp, #0x10
  41ff3c:	bl	40a6f0 <unlink@plt>
  41ff40:	mov	w1, #0xffffffff            	// #-1
  41ff44:	mov	x0, x19
  41ff48:	bl	40b460 <device_set_watch_handle@plt>
  41ff4c:	mov	w0, wzr
  41ff50:	b	41fff8 <udev_watch_end+0x184>
  41ff54:	mov	w0, #0x1                   	// #1
  41ff58:	bl	40a2c0 <log_get_max_level_realm@plt>
  41ff5c:	cmp	w0, #0x7
  41ff60:	b.lt	41ff94 <udev_watch_end+0x120>  // b.tstop
  41ff64:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  41ff68:	adrp	x4, 439000 <worker_hash_op+0x4df8>
  41ff6c:	adrp	x5, 439000 <worker_hash_op+0x4df8>
  41ff70:	mov	w1, #0x16                  	// #22
  41ff74:	add	x2, x2, #0xe7
  41ff78:	add	x4, x4, #0x3a1
  41ff7c:	add	x5, x5, #0x110
  41ff80:	mov	w0, #0x407                 	// #1031
  41ff84:	movk	w1, #0x4000, lsl #16
  41ff88:	mov	w3, #0x81                  	// #129
  41ff8c:	bl	40a2d0 <log_internal_realm@plt>
  41ff90:	b	41fff8 <udev_watch_end+0x184>
  41ff94:	mov	w0, #0xffffffea            	// #-22
  41ff98:	b	41fff8 <udev_watch_end+0x184>
  41ff9c:	str	xzr, [sp, #16]
  41ffa0:	cbz	x19, 41ffb4 <udev_watch_end+0x140>
  41ffa4:	mov	w0, #0x1                   	// #1
  41ffa8:	bl	40a2c0 <log_get_max_level_realm@plt>
  41ffac:	cmp	w0, #0x7
  41ffb0:	b.ge	420020 <udev_watch_end+0x1ac>  // b.tcont
  41ffb4:	mov	x6, xzr
  41ffb8:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  41ffbc:	add	x8, x8, #0x7f
  41ffc0:	cmp	x6, #0x0
  41ffc4:	csel	x5, xzr, x8, eq  // eq = none
  41ffc8:	adrp	x8, 439000 <worker_hash_op+0x4df8>
  41ffcc:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  41ffd0:	adrp	x4, 439000 <worker_hash_op+0x4df8>
  41ffd4:	add	x8, x8, #0x3b0
  41ffd8:	add	x2, x2, #0xe7
  41ffdc:	add	x4, x4, #0x3a1
  41ffe0:	mov	w0, #0x7                   	// #7
  41ffe4:	mov	w3, #0x87                  	// #135
  41ffe8:	mov	w1, w20
  41ffec:	mov	x7, xzr
  41fff0:	stp	xzr, x8, [sp]
  41fff4:	bl	40a730 <log_object_internal@plt>
  41fff8:	ldp	x20, x19, [sp, #80]
  41fffc:	ldr	x21, [sp, #64]
  420000:	ldp	x29, x30, [sp, #48]
  420004:	add	sp, sp, #0x60
  420008:	ret
  42000c:	add	x1, sp, #0x10
  420010:	mov	x0, x19
  420014:	bl	40a780 <sd_device_get_sysname@plt>
  420018:	ldr	x6, [sp, #16]
  42001c:	b	41fecc <udev_watch_end+0x58>
  420020:	add	x1, sp, #0x10
  420024:	mov	x0, x19
  420028:	bl	40a780 <sd_device_get_sysname@plt>
  42002c:	ldr	x6, [sp, #16]
  420030:	b	41ffb8 <udev_watch_end+0x144>
  420034:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  420038:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  42003c:	adrp	x4, 439000 <worker_hash_op+0x4df8>
  420040:	add	x1, x1, #0x6a7
  420044:	add	x2, x2, #0xe7
  420048:	add	x4, x4, #0x3e8
  42004c:	mov	w0, #0x1                   	// #1
  420050:	mov	w3, #0x8c                  	// #140
  420054:	bl	40a630 <log_assert_failed_realm@plt>

0000000000420058 <udev_watch_lookup>:
  420058:	sub	sp, sp, #0x50
  42005c:	stp	x29, x30, [sp, #48]
  420060:	stp	x20, x19, [sp, #64]
  420064:	add	x29, sp, #0x30
  420068:	str	xzr, [sp, #8]
  42006c:	cbz	x1, 420228 <udev_watch_lookup+0x1d0>
  420070:	adrp	x8, 470000 <arg_resolve_name_timing>
  420074:	ldr	w8, [x8, #16]
  420078:	tbnz	w8, #31, 4200dc <udev_watch_lookup+0x84>
  42007c:	mov	w3, w0
  420080:	tbnz	w0, #31, 420118 <udev_watch_lookup+0xc0>
  420084:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  420088:	mov	x19, x1
  42008c:	add	x2, x2, #0x2f9
  420090:	add	x0, sp, #0x14
  420094:	mov	w1, #0x1c                  	// #28
  420098:	bl	40b050 <snprintf@plt>
  42009c:	cmp	w0, #0x1c
  4200a0:	b.cs	42024c <udev_watch_lookup+0x1f4>  // b.hs, b.nlast
  4200a4:	add	x0, sp, #0x14
  4200a8:	add	x1, sp, #0x8
  4200ac:	bl	40b0c0 <readlink_malloc@plt>
  4200b0:	cmn	w0, #0x2
  4200b4:	b.eq	4200d4 <udev_watch_lookup+0x7c>  // b.none
  4200b8:	mov	w20, w0
  4200bc:	tbnz	w0, #31, 42017c <udev_watch_lookup+0x124>
  4200c0:	ldr	x1, [sp, #8]
  4200c4:	mov	x0, x19
  4200c8:	bl	40afa0 <sd_device_new_from_device_id@plt>
  4200cc:	cmn	w0, #0x13
  4200d0:	b.ne	4201b8 <udev_watch_lookup+0x160>  // b.any
  4200d4:	mov	w19, wzr
  4200d8:	b	420160 <udev_watch_lookup+0x108>
  4200dc:	mov	w0, #0x1                   	// #1
  4200e0:	bl	40a2c0 <log_get_max_level_realm@plt>
  4200e4:	cmp	w0, #0x7
  4200e8:	b.lt	42015c <udev_watch_lookup+0x104>  // b.tstop
  4200ec:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  4200f0:	adrp	x4, 439000 <worker_hash_op+0x4df8>
  4200f4:	adrp	x5, 439000 <worker_hash_op+0x4df8>
  4200f8:	mov	w1, #0x16                  	// #22
  4200fc:	add	x2, x2, #0xe7
  420100:	add	x4, x4, #0x431
  420104:	add	x5, x5, #0x110
  420108:	mov	w0, #0x407                 	// #1031
  42010c:	movk	w1, #0x4000, lsl #16
  420110:	mov	w3, #0x9d                  	// #157
  420114:	b	420150 <udev_watch_lookup+0xf8>
  420118:	mov	w0, #0x1                   	// #1
  42011c:	bl	40a2c0 <log_get_max_level_realm@plt>
  420120:	cmp	w0, #0x7
  420124:	b.lt	42015c <udev_watch_lookup+0x104>  // b.tstop
  420128:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  42012c:	adrp	x4, 439000 <worker_hash_op+0x4df8>
  420130:	adrp	x5, 439000 <worker_hash_op+0x4df8>
  420134:	mov	w1, #0x16                  	// #22
  420138:	add	x2, x2, #0xe7
  42013c:	add	x4, x4, #0x431
  420140:	add	x5, x5, #0x443
  420144:	mov	w0, #0x407                 	// #1031
  420148:	movk	w1, #0x4000, lsl #16
  42014c:	mov	w3, #0xa1                  	// #161
  420150:	bl	40a2d0 <log_internal_realm@plt>
  420154:	mov	w19, w0
  420158:	b	420160 <udev_watch_lookup+0x108>
  42015c:	mov	w19, #0xffffffea            	// #-22
  420160:	ldr	x0, [sp, #8]
  420164:	bl	40a320 <free@plt>
  420168:	mov	w0, w19
  42016c:	ldp	x20, x19, [sp, #64]
  420170:	ldp	x29, x30, [sp, #48]
  420174:	add	sp, sp, #0x50
  420178:	ret
  42017c:	mov	w0, #0x1                   	// #1
  420180:	bl	40a2c0 <log_get_max_level_realm@plt>
  420184:	cmp	w0, #0x7
  420188:	b.lt	4201c8 <udev_watch_lookup+0x170>  // b.tstop
  42018c:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  420190:	adrp	x4, 439000 <worker_hash_op+0x4df8>
  420194:	adrp	x5, 439000 <worker_hash_op+0x4df8>
  420198:	add	x2, x2, #0xe7
  42019c:	add	x4, x4, #0x431
  4201a0:	add	x5, x5, #0x459
  4201a4:	add	x6, sp, #0x14
  4201a8:	mov	w0, #0x407                 	// #1031
  4201ac:	mov	w3, #0xa8                  	// #168
  4201b0:	mov	w1, w20
  4201b4:	b	42020c <udev_watch_lookup+0x1b4>
  4201b8:	mov	w19, w0
  4201bc:	tbnz	w0, #31, 4201d4 <udev_watch_lookup+0x17c>
  4201c0:	mov	w19, #0x1                   	// #1
  4201c4:	b	420160 <udev_watch_lookup+0x108>
  4201c8:	mov	w8, wzr
  4201cc:	neg	w9, w20
  4201d0:	b	420220 <udev_watch_lookup+0x1c8>
  4201d4:	mov	w0, #0x1                   	// #1
  4201d8:	bl	40a2c0 <log_get_max_level_realm@plt>
  4201dc:	cmp	w0, #0x7
  4201e0:	b.lt	420218 <udev_watch_lookup+0x1c0>  // b.tstop
  4201e4:	ldr	x6, [sp, #8]
  4201e8:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  4201ec:	adrp	x4, 439000 <worker_hash_op+0x4df8>
  4201f0:	adrp	x5, 439000 <worker_hash_op+0x4df8>
  4201f4:	add	x2, x2, #0xe7
  4201f8:	add	x4, x4, #0x431
  4201fc:	add	x5, x5, #0x476
  420200:	mov	w0, #0x407                 	// #1031
  420204:	mov	w3, #0xae                  	// #174
  420208:	mov	w1, w19
  42020c:	bl	40a2d0 <log_internal_realm@plt>
  420210:	mov	w19, w0
  420214:	b	420160 <udev_watch_lookup+0x108>
  420218:	mov	w8, wzr
  42021c:	neg	w9, w19
  420220:	sub	w19, w8, w9, uxtb
  420224:	b	420160 <udev_watch_lookup+0x108>
  420228:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  42022c:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  420230:	adrp	x4, 439000 <worker_hash_op+0x4df8>
  420234:	add	x1, x1, #0xfa2
  420238:	add	x2, x2, #0xe7
  42023c:	add	x4, x4, #0x408
  420240:	mov	w0, #0x1                   	// #1
  420244:	mov	w3, #0x99                  	// #153
  420248:	bl	40a630 <log_assert_failed_realm@plt>
  42024c:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  420250:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  420254:	adrp	x4, 439000 <worker_hash_op+0x4df8>
  420258:	add	x1, x1, #0x6a7
  42025c:	add	x2, x2, #0xe7
  420260:	add	x4, x4, #0x408
  420264:	mov	w0, #0x1                   	// #1
  420268:	mov	w3, #0xa3                  	// #163
  42026c:	bl	40a630 <log_assert_failed_realm@plt>

0000000000420270 <udev_builtin_init>:
  420270:	stp	x29, x30, [sp, #-32]!
  420274:	str	x19, [sp, #16]
  420278:	adrp	x19, 470000 <arg_resolve_name_timing>
  42027c:	ldrb	w8, [x19, #56]
  420280:	mov	x29, sp
  420284:	tbnz	w8, #0, 42036c <udev_builtin_init+0xfc>
  420288:	adrp	x8, 46f000 <_DYNAMIC+0x208>
  42028c:	ldr	x8, [x8, #136]
  420290:	ldr	x8, [x8, #24]
  420294:	cbz	x8, 42029c <udev_builtin_init+0x2c>
  420298:	blr	x8
  42029c:	adrp	x8, 46f000 <_DYNAMIC+0x208>
  4202a0:	ldr	x8, [x8, #144]
  4202a4:	ldr	x8, [x8, #24]
  4202a8:	cbz	x8, 4202b0 <udev_builtin_init+0x40>
  4202ac:	blr	x8
  4202b0:	adrp	x8, 46f000 <_DYNAMIC+0x208>
  4202b4:	ldr	x8, [x8, #152]
  4202b8:	ldr	x8, [x8, #24]
  4202bc:	cbz	x8, 4202c4 <udev_builtin_init+0x54>
  4202c0:	blr	x8
  4202c4:	adrp	x8, 46f000 <_DYNAMIC+0x208>
  4202c8:	ldr	x8, [x8, #160]
  4202cc:	ldr	x8, [x8, #24]
  4202d0:	cbz	x8, 4202d8 <udev_builtin_init+0x68>
  4202d4:	blr	x8
  4202d8:	adrp	x8, 46f000 <_DYNAMIC+0x208>
  4202dc:	ldr	x8, [x8, #168]
  4202e0:	ldr	x8, [x8, #24]
  4202e4:	cbz	x8, 4202ec <udev_builtin_init+0x7c>
  4202e8:	blr	x8
  4202ec:	adrp	x8, 46f000 <_DYNAMIC+0x208>
  4202f0:	ldr	x8, [x8, #176]
  4202f4:	ldr	x8, [x8, #24]
  4202f8:	cbz	x8, 420300 <udev_builtin_init+0x90>
  4202fc:	blr	x8
  420300:	adrp	x8, 46f000 <_DYNAMIC+0x208>
  420304:	ldr	x8, [x8, #184]
  420308:	ldr	x8, [x8, #24]
  42030c:	cbz	x8, 420314 <udev_builtin_init+0xa4>
  420310:	blr	x8
  420314:	adrp	x8, 46f000 <_DYNAMIC+0x208>
  420318:	ldr	x8, [x8, #192]
  42031c:	ldr	x8, [x8, #24]
  420320:	cbz	x8, 420328 <udev_builtin_init+0xb8>
  420324:	blr	x8
  420328:	adrp	x8, 46f000 <_DYNAMIC+0x208>
  42032c:	ldr	x8, [x8, #200]
  420330:	ldr	x8, [x8, #24]
  420334:	cbz	x8, 42033c <udev_builtin_init+0xcc>
  420338:	blr	x8
  42033c:	adrp	x8, 46f000 <_DYNAMIC+0x208>
  420340:	ldr	x8, [x8, #208]
  420344:	ldr	x8, [x8, #24]
  420348:	cbz	x8, 420350 <udev_builtin_init+0xe0>
  42034c:	blr	x8
  420350:	adrp	x8, 46f000 <_DYNAMIC+0x208>
  420354:	ldr	x8, [x8, #216]
  420358:	ldr	x8, [x8, #24]
  42035c:	cbz	x8, 420364 <udev_builtin_init+0xf4>
  420360:	blr	x8
  420364:	mov	w8, #0x1                   	// #1
  420368:	strb	w8, [x19, #56]
  42036c:	ldr	x19, [sp, #16]
  420370:	ldp	x29, x30, [sp], #32
  420374:	ret

0000000000420378 <udev_builtin_exit>:
  420378:	stp	x29, x30, [sp, #-32]!
  42037c:	str	x19, [sp, #16]
  420380:	adrp	x19, 470000 <arg_resolve_name_timing>
  420384:	ldrb	w8, [x19, #56]
  420388:	mov	x29, sp
  42038c:	cmp	w8, #0x1
  420390:	b.ne	420474 <udev_builtin_exit+0xfc>  // b.any
  420394:	adrp	x8, 46f000 <_DYNAMIC+0x208>
  420398:	ldr	x8, [x8, #136]
  42039c:	ldr	x8, [x8, #32]
  4203a0:	cbz	x8, 4203a8 <udev_builtin_exit+0x30>
  4203a4:	blr	x8
  4203a8:	adrp	x8, 46f000 <_DYNAMIC+0x208>
  4203ac:	ldr	x8, [x8, #144]
  4203b0:	ldr	x8, [x8, #32]
  4203b4:	cbz	x8, 4203bc <udev_builtin_exit+0x44>
  4203b8:	blr	x8
  4203bc:	adrp	x8, 46f000 <_DYNAMIC+0x208>
  4203c0:	ldr	x8, [x8, #152]
  4203c4:	ldr	x8, [x8, #32]
  4203c8:	cbz	x8, 4203d0 <udev_builtin_exit+0x58>
  4203cc:	blr	x8
  4203d0:	adrp	x8, 46f000 <_DYNAMIC+0x208>
  4203d4:	ldr	x8, [x8, #160]
  4203d8:	ldr	x8, [x8, #32]
  4203dc:	cbz	x8, 4203e4 <udev_builtin_exit+0x6c>
  4203e0:	blr	x8
  4203e4:	adrp	x8, 46f000 <_DYNAMIC+0x208>
  4203e8:	ldr	x8, [x8, #168]
  4203ec:	ldr	x8, [x8, #32]
  4203f0:	cbz	x8, 4203f8 <udev_builtin_exit+0x80>
  4203f4:	blr	x8
  4203f8:	adrp	x8, 46f000 <_DYNAMIC+0x208>
  4203fc:	ldr	x8, [x8, #176]
  420400:	ldr	x8, [x8, #32]
  420404:	cbz	x8, 42040c <udev_builtin_exit+0x94>
  420408:	blr	x8
  42040c:	adrp	x8, 46f000 <_DYNAMIC+0x208>
  420410:	ldr	x8, [x8, #184]
  420414:	ldr	x8, [x8, #32]
  420418:	cbz	x8, 420420 <udev_builtin_exit+0xa8>
  42041c:	blr	x8
  420420:	adrp	x8, 46f000 <_DYNAMIC+0x208>
  420424:	ldr	x8, [x8, #192]
  420428:	ldr	x8, [x8, #32]
  42042c:	cbz	x8, 420434 <udev_builtin_exit+0xbc>
  420430:	blr	x8
  420434:	adrp	x8, 46f000 <_DYNAMIC+0x208>
  420438:	ldr	x8, [x8, #200]
  42043c:	ldr	x8, [x8, #32]
  420440:	cbz	x8, 420448 <udev_builtin_exit+0xd0>
  420444:	blr	x8
  420448:	adrp	x8, 46f000 <_DYNAMIC+0x208>
  42044c:	ldr	x8, [x8, #208]
  420450:	ldr	x8, [x8, #32]
  420454:	cbz	x8, 42045c <udev_builtin_exit+0xe4>
  420458:	blr	x8
  42045c:	adrp	x8, 46f000 <_DYNAMIC+0x208>
  420460:	ldr	x8, [x8, #216]
  420464:	ldr	x8, [x8, #32]
  420468:	cbz	x8, 420470 <udev_builtin_exit+0xf8>
  42046c:	blr	x8
  420470:	strb	wzr, [x19, #56]
  420474:	ldr	x19, [sp, #16]
  420478:	ldp	x29, x30, [sp], #32
  42047c:	ret

0000000000420480 <udev_builtin_validate>:
  420480:	stp	x29, x30, [sp, #-16]!
  420484:	adrp	x8, 46f000 <_DYNAMIC+0x208>
  420488:	ldr	x8, [x8, #136]
  42048c:	mov	x29, sp
  420490:	ldr	x8, [x8, #40]
  420494:	cbz	x8, 4204a0 <udev_builtin_validate+0x20>
  420498:	blr	x8
  42049c:	tbnz	w0, #0, 420590 <udev_builtin_validate+0x110>
  4204a0:	adrp	x8, 46f000 <_DYNAMIC+0x208>
  4204a4:	ldr	x8, [x8, #144]
  4204a8:	ldr	x8, [x8, #40]
  4204ac:	cbz	x8, 4204b8 <udev_builtin_validate+0x38>
  4204b0:	blr	x8
  4204b4:	tbnz	w0, #0, 420590 <udev_builtin_validate+0x110>
  4204b8:	adrp	x8, 46f000 <_DYNAMIC+0x208>
  4204bc:	ldr	x8, [x8, #152]
  4204c0:	ldr	x8, [x8, #40]
  4204c4:	cbz	x8, 4204d0 <udev_builtin_validate+0x50>
  4204c8:	blr	x8
  4204cc:	tbnz	w0, #0, 420590 <udev_builtin_validate+0x110>
  4204d0:	adrp	x8, 46f000 <_DYNAMIC+0x208>
  4204d4:	ldr	x8, [x8, #160]
  4204d8:	ldr	x8, [x8, #40]
  4204dc:	cbz	x8, 4204e8 <udev_builtin_validate+0x68>
  4204e0:	blr	x8
  4204e4:	tbnz	w0, #0, 420590 <udev_builtin_validate+0x110>
  4204e8:	adrp	x8, 46f000 <_DYNAMIC+0x208>
  4204ec:	ldr	x8, [x8, #168]
  4204f0:	ldr	x8, [x8, #40]
  4204f4:	cbz	x8, 420500 <udev_builtin_validate+0x80>
  4204f8:	blr	x8
  4204fc:	tbnz	w0, #0, 420590 <udev_builtin_validate+0x110>
  420500:	adrp	x8, 46f000 <_DYNAMIC+0x208>
  420504:	ldr	x8, [x8, #176]
  420508:	ldr	x8, [x8, #40]
  42050c:	cbz	x8, 420518 <udev_builtin_validate+0x98>
  420510:	blr	x8
  420514:	tbnz	w0, #0, 420590 <udev_builtin_validate+0x110>
  420518:	adrp	x8, 46f000 <_DYNAMIC+0x208>
  42051c:	ldr	x8, [x8, #184]
  420520:	ldr	x8, [x8, #40]
  420524:	cbz	x8, 420530 <udev_builtin_validate+0xb0>
  420528:	blr	x8
  42052c:	tbnz	w0, #0, 420590 <udev_builtin_validate+0x110>
  420530:	adrp	x8, 46f000 <_DYNAMIC+0x208>
  420534:	ldr	x8, [x8, #192]
  420538:	ldr	x8, [x8, #40]
  42053c:	cbz	x8, 420548 <udev_builtin_validate+0xc8>
  420540:	blr	x8
  420544:	tbnz	w0, #0, 420590 <udev_builtin_validate+0x110>
  420548:	adrp	x8, 46f000 <_DYNAMIC+0x208>
  42054c:	ldr	x8, [x8, #200]
  420550:	ldr	x8, [x8, #40]
  420554:	cbz	x8, 420560 <udev_builtin_validate+0xe0>
  420558:	blr	x8
  42055c:	tbnz	w0, #0, 420590 <udev_builtin_validate+0x110>
  420560:	adrp	x8, 46f000 <_DYNAMIC+0x208>
  420564:	ldr	x8, [x8, #208]
  420568:	ldr	x8, [x8, #40]
  42056c:	cbz	x8, 420578 <udev_builtin_validate+0xf8>
  420570:	blr	x8
  420574:	tbnz	w0, #0, 420590 <udev_builtin_validate+0x110>
  420578:	adrp	x8, 46f000 <_DYNAMIC+0x208>
  42057c:	ldr	x8, [x8, #216]
  420580:	ldr	x8, [x8, #40]
  420584:	cbz	x8, 42059c <udev_builtin_validate+0x11c>
  420588:	blr	x8
  42058c:	tbz	w0, #0, 42059c <udev_builtin_validate+0x11c>
  420590:	mov	w0, #0x1                   	// #1
  420594:	ldp	x29, x30, [sp], #16
  420598:	ret
  42059c:	mov	w0, wzr
  4205a0:	ldp	x29, x30, [sp], #16
  4205a4:	ret

00000000004205a8 <udev_builtin_list>:
  4205a8:	stp	x29, x30, [sp, #-32]!
  4205ac:	stp	x20, x19, [sp, #16]
  4205b0:	adrp	x20, 46f000 <_DYNAMIC+0x208>
  4205b4:	adrp	x8, 46f000 <_DYNAMIC+0x208>
  4205b8:	ldr	x20, [x20, #224]
  4205bc:	ldr	x8, [x8, #136]
  4205c0:	adrp	x19, 439000 <worker_hash_op+0x4df8>
  4205c4:	add	x19, x19, #0x4a5
  4205c8:	ldr	x0, [x20]
  4205cc:	ldr	x2, [x8]
  4205d0:	ldr	x3, [x8, #16]
  4205d4:	mov	x1, x19
  4205d8:	mov	x29, sp
  4205dc:	bl	40b490 <fprintf@plt>
  4205e0:	adrp	x8, 46f000 <_DYNAMIC+0x208>
  4205e4:	ldr	x0, [x20]
  4205e8:	ldr	x8, [x8, #144]
  4205ec:	mov	x1, x19
  4205f0:	ldr	x2, [x8]
  4205f4:	ldr	x3, [x8, #16]
  4205f8:	bl	40b490 <fprintf@plt>
  4205fc:	adrp	x8, 46f000 <_DYNAMIC+0x208>
  420600:	ldr	x0, [x20]
  420604:	ldr	x8, [x8, #152]
  420608:	mov	x1, x19
  42060c:	ldr	x2, [x8]
  420610:	ldr	x3, [x8, #16]
  420614:	bl	40b490 <fprintf@plt>
  420618:	adrp	x8, 46f000 <_DYNAMIC+0x208>
  42061c:	ldr	x0, [x20]
  420620:	ldr	x8, [x8, #160]
  420624:	mov	x1, x19
  420628:	ldr	x2, [x8]
  42062c:	ldr	x3, [x8, #16]
  420630:	bl	40b490 <fprintf@plt>
  420634:	adrp	x8, 46f000 <_DYNAMIC+0x208>
  420638:	ldr	x0, [x20]
  42063c:	ldr	x8, [x8, #168]
  420640:	mov	x1, x19
  420644:	ldr	x2, [x8]
  420648:	ldr	x3, [x8, #16]
  42064c:	bl	40b490 <fprintf@plt>
  420650:	adrp	x8, 46f000 <_DYNAMIC+0x208>
  420654:	ldr	x0, [x20]
  420658:	ldr	x8, [x8, #176]
  42065c:	mov	x1, x19
  420660:	ldr	x2, [x8]
  420664:	ldr	x3, [x8, #16]
  420668:	bl	40b490 <fprintf@plt>
  42066c:	adrp	x8, 46f000 <_DYNAMIC+0x208>
  420670:	ldr	x0, [x20]
  420674:	ldr	x8, [x8, #184]
  420678:	mov	x1, x19
  42067c:	ldr	x2, [x8]
  420680:	ldr	x3, [x8, #16]
  420684:	bl	40b490 <fprintf@plt>
  420688:	adrp	x8, 46f000 <_DYNAMIC+0x208>
  42068c:	ldr	x0, [x20]
  420690:	ldr	x8, [x8, #192]
  420694:	mov	x1, x19
  420698:	ldr	x2, [x8]
  42069c:	ldr	x3, [x8, #16]
  4206a0:	bl	40b490 <fprintf@plt>
  4206a4:	adrp	x8, 46f000 <_DYNAMIC+0x208>
  4206a8:	ldr	x0, [x20]
  4206ac:	ldr	x8, [x8, #200]
  4206b0:	mov	x1, x19
  4206b4:	ldr	x2, [x8]
  4206b8:	ldr	x3, [x8, #16]
  4206bc:	bl	40b490 <fprintf@plt>
  4206c0:	adrp	x8, 46f000 <_DYNAMIC+0x208>
  4206c4:	ldr	x0, [x20]
  4206c8:	ldr	x8, [x8, #208]
  4206cc:	mov	x1, x19
  4206d0:	ldr	x2, [x8]
  4206d4:	ldr	x3, [x8, #16]
  4206d8:	bl	40b490 <fprintf@plt>
  4206dc:	adrp	x8, 46f000 <_DYNAMIC+0x208>
  4206e0:	ldr	x0, [x20]
  4206e4:	ldr	x8, [x8, #216]
  4206e8:	mov	x1, x19
  4206ec:	ldp	x20, x19, [sp, #16]
  4206f0:	ldr	x2, [x8]
  4206f4:	ldr	x3, [x8, #16]
  4206f8:	ldp	x29, x30, [sp], #32
  4206fc:	b	40b490 <fprintf@plt>

0000000000420700 <udev_builtin_name>:
  420700:	stp	x29, x30, [sp, #-16]!
  420704:	cmp	w0, #0xb
  420708:	mov	x29, sp
  42070c:	b.cs	420728 <udev_builtin_name+0x28>  // b.hs, b.nlast
  420710:	adrp	x8, 457000 <__FRAME_END__+0x149b8>
  420714:	add	x8, x8, #0x250
  420718:	ldr	x8, [x8, w0, uxtw #3]
  42071c:	ldr	x0, [x8]
  420720:	ldp	x29, x30, [sp], #16
  420724:	ret
  420728:	adrp	x1, 439000 <worker_hash_op+0x4df8>
  42072c:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  420730:	adrp	x4, 439000 <worker_hash_op+0x4df8>
  420734:	add	x1, x1, #0x4b2
  420738:	add	x2, x2, #0x4d9
  42073c:	add	x4, x4, #0x4f1
  420740:	mov	w0, #0x1                   	// #1
  420744:	mov	w3, #0x4e                  	// #78
  420748:	bl	40a630 <log_assert_failed_realm@plt>

000000000042074c <udev_builtin_run_once>:
  42074c:	stp	x29, x30, [sp, #-16]!
  420750:	cmp	w0, #0xb
  420754:	mov	x29, sp
  420758:	b.cs	420774 <udev_builtin_run_once+0x28>  // b.hs, b.nlast
  42075c:	adrp	x8, 457000 <__FRAME_END__+0x149b8>
  420760:	add	x8, x8, #0x250
  420764:	ldr	x8, [x8, w0, uxtw #3]
  420768:	ldrb	w0, [x8, #48]
  42076c:	ldp	x29, x30, [sp], #16
  420770:	ret
  420774:	adrp	x1, 439000 <worker_hash_op+0x4df8>
  420778:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  42077c:	adrp	x4, 439000 <worker_hash_op+0x4df8>
  420780:	add	x1, x1, #0x4b2
  420784:	add	x2, x2, #0x4d9
  420788:	add	x4, x4, #0x523
  42078c:	mov	w0, #0x1                   	// #1
  420790:	mov	w3, #0x57                  	// #87
  420794:	bl	40a630 <log_assert_failed_realm@plt>

0000000000420798 <udev_builtin_lookup>:
  420798:	stp	x29, x30, [sp, #-32]!
  42079c:	stp	x20, x19, [sp, #16]
  4207a0:	mov	x29, sp
  4207a4:	cbz	x0, 4209ac <udev_builtin_lookup+0x214>
  4207a8:	adrp	x20, 436000 <worker_hash_op+0x1df8>
  4207ac:	add	x20, x20, #0xacd
  4207b0:	mov	x1, x20
  4207b4:	mov	x19, x0
  4207b8:	bl	40ad40 <strspn@plt>
  4207bc:	add	x19, x19, x0
  4207c0:	mov	x0, x19
  4207c4:	mov	x1, x20
  4207c8:	bl	40b4a0 <strcspn@plt>
  4207cc:	adrp	x8, 46f000 <_DYNAMIC+0x208>
  4207d0:	ldr	x8, [x8, #136]
  4207d4:	mov	x20, x0
  4207d8:	mov	x1, x19
  4207dc:	mov	x2, x20
  4207e0:	ldr	x8, [x8]
  4207e4:	mov	x0, x8
  4207e8:	bl	40a6a0 <strncmp@plt>
  4207ec:	cbz	w0, 420920 <udev_builtin_lookup+0x188>
  4207f0:	adrp	x8, 46f000 <_DYNAMIC+0x208>
  4207f4:	ldr	x8, [x8, #144]
  4207f8:	mov	x1, x19
  4207fc:	mov	x2, x20
  420800:	ldr	x0, [x8]
  420804:	bl	40a6a0 <strncmp@plt>
  420808:	cbz	w0, 42091c <udev_builtin_lookup+0x184>
  42080c:	adrp	x8, 46f000 <_DYNAMIC+0x208>
  420810:	ldr	x8, [x8, #152]
  420814:	mov	x1, x19
  420818:	mov	x2, x20
  42081c:	ldr	x0, [x8]
  420820:	bl	40a6a0 <strncmp@plt>
  420824:	cbz	w0, 42092c <udev_builtin_lookup+0x194>
  420828:	adrp	x8, 46f000 <_DYNAMIC+0x208>
  42082c:	ldr	x8, [x8, #160]
  420830:	mov	x1, x19
  420834:	mov	x2, x20
  420838:	ldr	x0, [x8]
  42083c:	bl	40a6a0 <strncmp@plt>
  420840:	cbz	w0, 42093c <udev_builtin_lookup+0x1a4>
  420844:	adrp	x8, 46f000 <_DYNAMIC+0x208>
  420848:	ldr	x8, [x8, #168]
  42084c:	mov	x1, x19
  420850:	mov	x2, x20
  420854:	ldr	x0, [x8]
  420858:	bl	40a6a0 <strncmp@plt>
  42085c:	cbz	w0, 42094c <udev_builtin_lookup+0x1b4>
  420860:	adrp	x8, 46f000 <_DYNAMIC+0x208>
  420864:	ldr	x8, [x8, #176]
  420868:	mov	x1, x19
  42086c:	mov	x2, x20
  420870:	ldr	x0, [x8]
  420874:	bl	40a6a0 <strncmp@plt>
  420878:	cbz	w0, 42095c <udev_builtin_lookup+0x1c4>
  42087c:	adrp	x8, 46f000 <_DYNAMIC+0x208>
  420880:	ldr	x8, [x8, #184]
  420884:	mov	x1, x19
  420888:	mov	x2, x20
  42088c:	ldr	x0, [x8]
  420890:	bl	40a6a0 <strncmp@plt>
  420894:	cbz	w0, 42096c <udev_builtin_lookup+0x1d4>
  420898:	adrp	x8, 46f000 <_DYNAMIC+0x208>
  42089c:	ldr	x8, [x8, #192]
  4208a0:	mov	x1, x19
  4208a4:	mov	x2, x20
  4208a8:	ldr	x0, [x8]
  4208ac:	bl	40a6a0 <strncmp@plt>
  4208b0:	cbz	w0, 42097c <udev_builtin_lookup+0x1e4>
  4208b4:	adrp	x8, 46f000 <_DYNAMIC+0x208>
  4208b8:	ldr	x8, [x8, #200]
  4208bc:	mov	x1, x19
  4208c0:	mov	x2, x20
  4208c4:	ldr	x0, [x8]
  4208c8:	bl	40a6a0 <strncmp@plt>
  4208cc:	cbz	w0, 42098c <udev_builtin_lookup+0x1f4>
  4208d0:	adrp	x8, 46f000 <_DYNAMIC+0x208>
  4208d4:	ldr	x8, [x8, #208]
  4208d8:	mov	x1, x19
  4208dc:	mov	x2, x20
  4208e0:	ldr	x0, [x8]
  4208e4:	bl	40a6a0 <strncmp@plt>
  4208e8:	cbz	w0, 42099c <udev_builtin_lookup+0x204>
  4208ec:	adrp	x8, 46f000 <_DYNAMIC+0x208>
  4208f0:	ldr	x8, [x8, #216]
  4208f4:	mov	x1, x19
  4208f8:	mov	x2, x20
  4208fc:	ldr	x0, [x8]
  420900:	bl	40a6a0 <strncmp@plt>
  420904:	cmp	w0, #0x0
  420908:	mov	w8, #0xa                   	// #10
  42090c:	csinv	w0, w8, wzr, eq  // eq = none
  420910:	ldp	x20, x19, [sp, #16]
  420914:	ldp	x29, x30, [sp], #32
  420918:	ret
  42091c:	mov	w0, #0x1                   	// #1
  420920:	ldp	x20, x19, [sp, #16]
  420924:	ldp	x29, x30, [sp], #32
  420928:	ret
  42092c:	mov	w0, #0x2                   	// #2
  420930:	ldp	x20, x19, [sp, #16]
  420934:	ldp	x29, x30, [sp], #32
  420938:	ret
  42093c:	mov	w0, #0x3                   	// #3
  420940:	ldp	x20, x19, [sp, #16]
  420944:	ldp	x29, x30, [sp], #32
  420948:	ret
  42094c:	mov	w0, #0x4                   	// #4
  420950:	ldp	x20, x19, [sp, #16]
  420954:	ldp	x29, x30, [sp], #32
  420958:	ret
  42095c:	mov	w0, #0x5                   	// #5
  420960:	ldp	x20, x19, [sp, #16]
  420964:	ldp	x29, x30, [sp], #32
  420968:	ret
  42096c:	mov	w0, #0x6                   	// #6
  420970:	ldp	x20, x19, [sp, #16]
  420974:	ldp	x29, x30, [sp], #32
  420978:	ret
  42097c:	mov	w0, #0x7                   	// #7
  420980:	ldp	x20, x19, [sp, #16]
  420984:	ldp	x29, x30, [sp], #32
  420988:	ret
  42098c:	mov	w0, #0x8                   	// #8
  420990:	ldp	x20, x19, [sp, #16]
  420994:	ldp	x29, x30, [sp], #32
  420998:	ret
  42099c:	mov	w0, #0x9                   	// #9
  4209a0:	ldp	x20, x19, [sp, #16]
  4209a4:	ldp	x29, x30, [sp], #32
  4209a8:	ret
  4209ac:	adrp	x1, 439000 <worker_hash_op+0x4df8>
  4209b0:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  4209b4:	adrp	x4, 439000 <worker_hash_op+0x4df8>
  4209b8:	add	x1, x1, #0x553
  4209bc:	add	x2, x2, #0x4d9
  4209c0:	add	x4, x4, #0x55b
  4209c4:	mov	w0, #0x1                   	// #1
  4209c8:	mov	w3, #0x63                  	// #99
  4209cc:	bl	40a630 <log_assert_failed_realm@plt>

00000000004209d0 <udev_builtin_run>:
  4209d0:	stp	x29, x30, [sp, #-48]!
  4209d4:	stp	x22, x21, [sp, #16]
  4209d8:	stp	x20, x19, [sp, #32]
  4209dc:	mov	x29, sp
  4209e0:	cbz	x0, 420a80 <udev_builtin_run+0xb0>
  4209e4:	mov	w21, w1
  4209e8:	cmp	w1, #0xb
  4209ec:	b.cs	420aa4 <udev_builtin_run+0xd4>  // b.hs, b.nlast
  4209f0:	mov	x8, x2
  4209f4:	cbz	x2, 420ac8 <udev_builtin_run+0xf8>
  4209f8:	mov	x20, x0
  4209fc:	mov	w2, #0x3                   	// #3
  420a00:	mov	x0, x8
  420a04:	mov	x1, xzr
  420a08:	mov	w19, w3
  420a0c:	bl	40ade0 <strv_split_full@plt>
  420a10:	cbz	x0, 420a6c <udev_builtin_run+0x9c>
  420a14:	adrp	x8, 457000 <__FRAME_END__+0x149b8>
  420a18:	adrp	x9, 46f000 <_DYNAMIC+0x208>
  420a1c:	add	x8, x8, #0x250
  420a20:	ldr	x9, [x9, #232]
  420a24:	ldr	x8, [x8, w21, uxtw #3]
  420a28:	mov	x22, x0
  420a2c:	str	wzr, [x9]
  420a30:	ldr	x21, [x8, #8]
  420a34:	bl	40b4b0 <strv_length@plt>
  420a38:	mov	x1, x0
  420a3c:	and	w3, w19, #0x1
  420a40:	mov	x0, x20
  420a44:	mov	x2, x22
  420a48:	blr	x21
  420a4c:	mov	w19, w0
  420a50:	mov	x0, x22
  420a54:	bl	40ae30 <strv_free@plt>
  420a58:	mov	w0, w19
  420a5c:	ldp	x20, x19, [sp, #32]
  420a60:	ldp	x22, x21, [sp, #16]
  420a64:	ldp	x29, x30, [sp], #48
  420a68:	ret
  420a6c:	mov	w0, #0xfffffff4            	// #-12
  420a70:	ldp	x20, x19, [sp, #32]
  420a74:	ldp	x22, x21, [sp, #16]
  420a78:	ldp	x29, x30, [sp], #48
  420a7c:	ret
  420a80:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  420a84:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  420a88:	adrp	x4, 439000 <worker_hash_op+0x4df8>
  420a8c:	add	x1, x1, #0x4f0
  420a90:	add	x2, x2, #0x4d9
  420a94:	add	x4, x4, #0x590
  420a98:	mov	w0, #0x1                   	// #1
  420a9c:	mov	w3, #0x71                  	// #113
  420aa0:	bl	40a630 <log_assert_failed_realm@plt>
  420aa4:	adrp	x1, 439000 <worker_hash_op+0x4df8>
  420aa8:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  420aac:	adrp	x4, 439000 <worker_hash_op+0x4df8>
  420ab0:	add	x1, x1, #0x4b2
  420ab4:	add	x2, x2, #0x4d9
  420ab8:	add	x4, x4, #0x590
  420abc:	mov	w0, #0x1                   	// #1
  420ac0:	mov	w3, #0x72                  	// #114
  420ac4:	bl	40a630 <log_assert_failed_realm@plt>
  420ac8:	adrp	x1, 439000 <worker_hash_op+0x4df8>
  420acc:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  420ad0:	adrp	x4, 439000 <worker_hash_op+0x4df8>
  420ad4:	add	x1, x1, #0x553
  420ad8:	add	x2, x2, #0x4d9
  420adc:	add	x4, x4, #0x590
  420ae0:	mov	w0, #0x1                   	// #1
  420ae4:	mov	w3, #0x73                  	// #115
  420ae8:	bl	40a630 <log_assert_failed_realm@plt>

0000000000420aec <udev_builtin_add_property>:
  420aec:	sub	sp, sp, #0x70
  420af0:	stp	x29, x30, [sp, #48]
  420af4:	str	x23, [sp, #64]
  420af8:	stp	x22, x21, [sp, #80]
  420afc:	stp	x20, x19, [sp, #96]
  420b00:	add	x29, sp, #0x30
  420b04:	cbz	x0, 420c04 <udev_builtin_add_property+0x118>
  420b08:	mov	x19, x2
  420b0c:	cbz	x2, 420c28 <udev_builtin_add_property+0x13c>
  420b10:	mov	w23, w1
  420b14:	mov	x1, x19
  420b18:	mov	x2, x3
  420b1c:	mov	x20, x3
  420b20:	mov	x22, x0
  420b24:	bl	40ae90 <device_add_property@plt>
  420b28:	tbnz	w0, #31, 420b58 <udev_builtin_add_property+0x6c>
  420b2c:	tbz	w23, #0, 420b50 <udev_builtin_add_property+0x64>
  420b30:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  420b34:	add	x8, x8, #0xed8
  420b38:	cmp	x20, #0x0
  420b3c:	adrp	x0, 439000 <worker_hash_op+0x4df8>
  420b40:	csel	x2, x8, x20, eq  // eq = none
  420b44:	add	x0, x0, #0x665
  420b48:	mov	x1, x19
  420b4c:	bl	40a310 <printf@plt>
  420b50:	mov	w0, wzr
  420b54:	b	420bd8 <udev_builtin_add_property+0xec>
  420b58:	mov	w21, w0
  420b5c:	mov	w0, #0x1                   	// #1
  420b60:	str	xzr, [x29, #24]
  420b64:	bl	40a2c0 <log_get_max_level_realm@plt>
  420b68:	cmp	w0, #0x7
  420b6c:	mov	x6, xzr
  420b70:	b.ge	420bf0 <udev_builtin_add_property+0x104>  // b.tcont
  420b74:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  420b78:	add	x8, x8, #0x7f
  420b7c:	cmp	x6, #0x0
  420b80:	adrp	x9, 439000 <worker_hash_op+0x4df8>
  420b84:	adrp	x10, 438000 <worker_hash_op+0x3df8>
  420b88:	add	x9, x9, #0x663
  420b8c:	add	x10, x10, #0xed8
  420b90:	csel	x5, xzr, x8, eq  // eq = none
  420b94:	cmp	x20, #0x0
  420b98:	csel	x8, x10, x9, eq  // eq = none
  420b9c:	csel	x9, x10, x20, eq  // eq = none
  420ba0:	adrp	x10, 439000 <worker_hash_op+0x4df8>
  420ba4:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  420ba8:	adrp	x4, 439000 <worker_hash_op+0x4df8>
  420bac:	add	x10, x10, #0x643
  420bb0:	add	x2, x2, #0x4d9
  420bb4:	add	x4, x4, #0x629
  420bb8:	mov	w0, #0x7                   	// #7
  420bbc:	mov	w3, #0x8a                  	// #138
  420bc0:	mov	w1, w21
  420bc4:	mov	x7, xzr
  420bc8:	stp	x8, x9, [sp, #24]
  420bcc:	stp	xzr, x10, [sp]
  420bd0:	str	x19, [sp, #16]
  420bd4:	bl	40a730 <log_object_internal@plt>
  420bd8:	ldp	x20, x19, [sp, #96]
  420bdc:	ldp	x22, x21, [sp, #80]
  420be0:	ldr	x23, [sp, #64]
  420be4:	ldp	x29, x30, [sp, #48]
  420be8:	add	sp, sp, #0x70
  420bec:	ret
  420bf0:	add	x1, x29, #0x18
  420bf4:	mov	x0, x22
  420bf8:	bl	40a780 <sd_device_get_sysname@plt>
  420bfc:	ldr	x6, [x29, #24]
  420c00:	b	420b74 <udev_builtin_add_property+0x88>
  420c04:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  420c08:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  420c0c:	adrp	x4, 439000 <worker_hash_op+0x4df8>
  420c10:	add	x1, x1, #0x4f0
  420c14:	add	x2, x2, #0x4d9
  420c18:	add	x4, x4, #0x5db
  420c1c:	mov	w0, #0x1                   	// #1
  420c20:	mov	w3, #0x84                  	// #132
  420c24:	bl	40a630 <log_assert_failed_realm@plt>
  420c28:	adrp	x1, 434000 <__libc_csu_init+0x60>
  420c2c:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  420c30:	adrp	x4, 439000 <worker_hash_op+0x4df8>
  420c34:	add	x1, x1, #0x88f
  420c38:	add	x2, x2, #0x4d9
  420c3c:	add	x4, x4, #0x5db
  420c40:	mov	w0, #0x1                   	// #1
  420c44:	mov	w3, #0x85                  	// #133
  420c48:	bl	40a630 <log_assert_failed_realm@plt>

0000000000420c4c <builtin_btrfs>:
  420c4c:	stp	x29, x30, [sp, #-64]!
  420c50:	str	x28, [sp, #16]
  420c54:	stp	x22, x21, [sp, #32]
  420c58:	stp	x20, x19, [sp, #48]
  420c5c:	mov	x29, sp
  420c60:	sub	sp, sp, #0x1, lsl #12
  420c64:	sub	sp, sp, #0x10
  420c68:	mov	x22, x2
  420c6c:	mov	w19, w1
  420c70:	mov	x20, x0
  420c74:	add	x0, sp, #0x10
  420c78:	mov	w2, #0x1000                	// #4096
  420c7c:	mov	w1, wzr
  420c80:	mov	w21, w3
  420c84:	bl	40b300 <memset@plt>
  420c88:	cmp	w19, #0x3
  420c8c:	b.ne	420ca4 <builtin_btrfs+0x58>  // b.any
  420c90:	ldr	x0, [x22, #8]
  420c94:	adrp	x1, 439000 <worker_hash_op+0x4df8>
  420c98:	add	x1, x1, #0x68a
  420c9c:	bl	40a930 <strcmp@plt>
  420ca0:	cbz	w0, 420d34 <builtin_btrfs+0xe8>
  420ca4:	str	xzr, [x29, #24]
  420ca8:	cbz	x20, 420cbc <builtin_btrfs+0x70>
  420cac:	mov	w0, #0x1                   	// #1
  420cb0:	bl	40a2c0 <log_get_max_level_realm@plt>
  420cb4:	cmp	w0, #0x3
  420cb8:	b.ge	420e7c <builtin_btrfs+0x230>  // b.tcont
  420cbc:	mov	x6, xzr
  420cc0:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  420cc4:	add	x8, x8, #0x7f
  420cc8:	cmp	x6, #0x0
  420ccc:	csel	x5, xzr, x8, eq  // eq = none
  420cd0:	adrp	x8, 439000 <worker_hash_op+0x4df8>
  420cd4:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  420cd8:	adrp	x4, 439000 <worker_hash_op+0x4df8>
  420cdc:	mov	w1, #0x16                  	// #22
  420ce0:	add	x8, x8, #0x6bf
  420ce4:	add	x2, x2, #0x693
  420ce8:	add	x4, x4, #0x6b1
  420cec:	mov	w0, #0x3                   	// #3
  420cf0:	movk	w1, #0x4000, lsl #16
  420cf4:	mov	w3, #0x15                  	// #21
  420cf8:	mov	x7, xzr
  420cfc:	stp	xzr, x8, [sp]
  420d00:	bl	40a730 <log_object_internal@plt>
  420d04:	mov	w20, w0
  420d08:	mov	w19, #0xffffffff            	// #-1
  420d0c:	mov	w0, w19
  420d10:	bl	40a660 <safe_close@plt>
  420d14:	mov	w0, w20
  420d18:	add	sp, sp, #0x1, lsl #12
  420d1c:	add	sp, sp, #0x10
  420d20:	ldp	x20, x19, [sp, #48]
  420d24:	ldp	x22, x21, [sp, #32]
  420d28:	ldr	x28, [sp, #16]
  420d2c:	ldp	x29, x30, [sp], #64
  420d30:	ret
  420d34:	adrp	x0, 439000 <worker_hash_op+0x4df8>
  420d38:	mov	w1, #0x2                   	// #2
  420d3c:	add	x0, x0, #0x6d1
  420d40:	movk	w1, #0x8, lsl #16
  420d44:	bl	40a890 <open64@plt>
  420d48:	mov	w19, w0
  420d4c:	tbnz	w0, #31, 420db0 <builtin_btrfs+0x164>
  420d50:	ldr	x2, [x22, #16]
  420d54:	add	x8, sp, #0x10
  420d58:	add	x0, x8, #0x8
  420d5c:	mov	w1, #0xff8                 	// #4088
  420d60:	bl	40ac50 <strscpy@plt>
  420d64:	mov	w1, #0x9427                	// #37927
  420d68:	add	x2, sp, #0x10
  420d6c:	movk	w1, #0x9000, lsl #16
  420d70:	mov	w0, w19
  420d74:	bl	40a8b0 <ioctl@plt>
  420d78:	tbnz	w0, #31, 420e0c <builtin_btrfs+0x1c0>
  420d7c:	adrp	x8, 439000 <worker_hash_op+0x4df8>
  420d80:	adrp	x9, 437000 <worker_hash_op+0x2df8>
  420d84:	add	x8, x8, #0x744
  420d88:	add	x9, x9, #0xbc
  420d8c:	cmp	w0, #0x0
  420d90:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  420d94:	csel	x3, x9, x8, eq  // eq = none
  420d98:	and	w1, w21, #0x1
  420d9c:	add	x2, x2, #0x735
  420da0:	mov	x0, x20
  420da4:	bl	420aec <udev_builtin_add_property>
  420da8:	mov	w20, wzr
  420dac:	b	420d0c <builtin_btrfs+0xc0>
  420db0:	str	xzr, [x29, #24]
  420db4:	bl	40a3e0 <__errno_location@plt>
  420db8:	ldr	w21, [x0]
  420dbc:	cbz	x20, 420dd0 <builtin_btrfs+0x184>
  420dc0:	mov	w0, #0x1                   	// #1
  420dc4:	bl	40a2c0 <log_get_max_level_realm@plt>
  420dc8:	cmp	w0, #0x7
  420dcc:	b.ge	420e90 <builtin_btrfs+0x244>  // b.tcont
  420dd0:	mov	x6, xzr
  420dd4:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  420dd8:	add	x8, x8, #0x7f
  420ddc:	cmp	x6, #0x0
  420de0:	csel	x5, xzr, x8, eq  // eq = none
  420de4:	adrp	x8, 439000 <worker_hash_op+0x4df8>
  420de8:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  420dec:	adrp	x4, 439000 <worker_hash_op+0x4df8>
  420df0:	add	x8, x8, #0x6e4
  420df4:	add	x2, x2, #0x693
  420df8:	add	x4, x4, #0x6b1
  420dfc:	mov	w0, #0x7                   	// #7
  420e00:	mov	w3, #0x19                  	// #25
  420e04:	str	x8, [sp, #8]
  420e08:	b	420e64 <builtin_btrfs+0x218>
  420e0c:	str	xzr, [x29, #24]
  420e10:	bl	40a3e0 <__errno_location@plt>
  420e14:	ldr	w21, [x0]
  420e18:	cbz	x20, 420e2c <builtin_btrfs+0x1e0>
  420e1c:	mov	w0, #0x1                   	// #1
  420e20:	bl	40a2c0 <log_get_max_level_realm@plt>
  420e24:	cmp	w0, #0x7
  420e28:	b.ge	420ea4 <builtin_btrfs+0x258>  // b.tcont
  420e2c:	mov	x6, xzr
  420e30:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  420e34:	add	x8, x8, #0x7f
  420e38:	cmp	x6, #0x0
  420e3c:	csel	x5, xzr, x8, eq  // eq = none
  420e40:	adrp	x8, 439000 <worker_hash_op+0x4df8>
  420e44:	add	x8, x8, #0x70a
  420e48:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  420e4c:	adrp	x4, 439000 <worker_hash_op+0x4df8>
  420e50:	add	x2, x2, #0x693
  420e54:	add	x4, x4, #0x6b1
  420e58:	str	x8, [sp, #8]
  420e5c:	mov	w0, #0x7                   	// #7
  420e60:	mov	w3, #0x1e                  	// #30
  420e64:	mov	w1, w21
  420e68:	mov	x7, xzr
  420e6c:	str	xzr, [sp]
  420e70:	bl	40a730 <log_object_internal@plt>
  420e74:	mov	w20, w0
  420e78:	b	420d0c <builtin_btrfs+0xc0>
  420e7c:	add	x1, x29, #0x18
  420e80:	mov	x0, x20
  420e84:	bl	40a780 <sd_device_get_sysname@plt>
  420e88:	ldr	x6, [x29, #24]
  420e8c:	b	420cc0 <builtin_btrfs+0x74>
  420e90:	add	x1, x29, #0x18
  420e94:	mov	x0, x20
  420e98:	bl	40a780 <sd_device_get_sysname@plt>
  420e9c:	ldr	x6, [x29, #24]
  420ea0:	b	420dd4 <builtin_btrfs+0x188>
  420ea4:	add	x1, x29, #0x18
  420ea8:	mov	x0, x20
  420eac:	bl	40a780 <sd_device_get_sysname@plt>
  420eb0:	ldr	x6, [x29, #24]
  420eb4:	b	420e30 <builtin_btrfs+0x1e4>

0000000000420eb8 <udev_builtin_hwdb_lookup>:
  420eb8:	sub	sp, sp, #0x50
  420ebc:	stp	x24, x23, [sp, #32]
  420ec0:	adrp	x24, 470000 <arg_resolve_name_timing>
  420ec4:	ldr	x8, [x24, #64]
  420ec8:	stp	x29, x30, [sp, #16]
  420ecc:	stp	x22, x21, [sp, #48]
  420ed0:	stp	x20, x19, [sp, #64]
  420ed4:	add	x29, sp, #0x10
  420ed8:	cbz	x8, 420f20 <udev_builtin_hwdb_lookup+0x68>
  420edc:	mov	w20, w4
  420ee0:	mov	x23, x3
  420ee4:	mov	x21, x0
  420ee8:	cbz	x1, 420f2c <udev_builtin_hwdb_lookup+0x74>
  420eec:	mov	x0, x1
  420ef0:	mov	x1, x2
  420ef4:	mov	x2, xzr
  420ef8:	bl	40b4c0 <strjoin_real@plt>
  420efc:	mov	x19, x0
  420f00:	cbz	x0, 420f90 <udev_builtin_hwdb_lookup+0xd8>
  420f04:	ldr	x8, [x24, #64]
  420f08:	mov	x2, x19
  420f0c:	mov	x0, x8
  420f10:	mov	x1, x2
  420f14:	bl	40b4d0 <sd_hwdb_seek@plt>
  420f18:	tbz	w0, #31, 420f40 <udev_builtin_hwdb_lookup+0x88>
  420f1c:	b	420fe8 <udev_builtin_hwdb_lookup+0x130>
  420f20:	mov	x19, xzr
  420f24:	mov	w22, #0xfffffffe            	// #-2
  420f28:	b	420fec <udev_builtin_hwdb_lookup+0x134>
  420f2c:	mov	x19, xzr
  420f30:	mov	x0, x8
  420f34:	mov	x1, x2
  420f38:	bl	40b4d0 <sd_hwdb_seek@plt>
  420f3c:	tbnz	w0, #31, 420fe8 <udev_builtin_hwdb_lookup+0x130>
  420f40:	cbz	x23, 420f98 <udev_builtin_hwdb_lookup+0xe0>
  420f44:	mov	w22, wzr
  420f48:	ldr	x0, [x24, #64]
  420f4c:	add	x1, sp, #0x8
  420f50:	mov	x2, sp
  420f54:	bl	40b4e0 <sd_hwdb_enumerate@plt>
  420f58:	cmp	w0, #0x1
  420f5c:	b.lt	420fec <udev_builtin_hwdb_lookup+0x134>  // b.tstop
  420f60:	ldr	x1, [sp, #8]
  420f64:	mov	w2, #0x2                   	// #2
  420f68:	mov	x0, x23
  420f6c:	bl	40b370 <fnmatch@plt>
  420f70:	cbnz	w0, 420f48 <udev_builtin_hwdb_lookup+0x90>
  420f74:	ldp	x3, x2, [sp]
  420f78:	and	w1, w20, #0x1
  420f7c:	mov	x0, x21
  420f80:	bl	420aec <udev_builtin_add_property>
  420f84:	tbnz	w0, #31, 421010 <udev_builtin_hwdb_lookup+0x158>
  420f88:	add	w22, w22, #0x1
  420f8c:	b	420f48 <udev_builtin_hwdb_lookup+0x90>
  420f90:	mov	w22, #0xfffffff4            	// #-12
  420f94:	b	420fec <udev_builtin_hwdb_lookup+0x134>
  420f98:	ldr	x0, [x24, #64]
  420f9c:	add	x1, sp, #0x8
  420fa0:	mov	x2, sp
  420fa4:	bl	40b4e0 <sd_hwdb_enumerate@plt>
  420fa8:	cmp	w0, #0x1
  420fac:	b.lt	420fe8 <udev_builtin_hwdb_lookup+0x130>  // b.tstop
  420fb0:	mov	w22, wzr
  420fb4:	ldp	x3, x2, [sp]
  420fb8:	and	w1, w20, #0x1
  420fbc:	mov	x0, x21
  420fc0:	bl	420aec <udev_builtin_add_property>
  420fc4:	tbnz	w0, #31, 421010 <udev_builtin_hwdb_lookup+0x158>
  420fc8:	ldr	x0, [x24, #64]
  420fcc:	add	x1, sp, #0x8
  420fd0:	mov	x2, sp
  420fd4:	add	w22, w22, #0x1
  420fd8:	bl	40b4e0 <sd_hwdb_enumerate@plt>
  420fdc:	cmp	w0, #0x1
  420fe0:	b.ge	420fb4 <udev_builtin_hwdb_lookup+0xfc>  // b.tcont
  420fe4:	b	420fec <udev_builtin_hwdb_lookup+0x134>
  420fe8:	mov	w22, wzr
  420fec:	mov	x0, x19
  420ff0:	bl	40a320 <free@plt>
  420ff4:	mov	w0, w22
  420ff8:	ldp	x20, x19, [sp, #64]
  420ffc:	ldp	x22, x21, [sp, #48]
  421000:	ldp	x24, x23, [sp, #32]
  421004:	ldp	x29, x30, [sp, #16]
  421008:	add	sp, sp, #0x50
  42100c:	ret
  421010:	mov	w22, w0
  421014:	b	420fec <udev_builtin_hwdb_lookup+0x134>

0000000000421018 <builtin_hwdb>:
  421018:	sub	sp, sp, #0xe0
  42101c:	adrp	x8, 470000 <arg_resolve_name_timing>
  421020:	ldr	x8, [x8, #64]
  421024:	stp	x29, x30, [sp, #128]
  421028:	stp	x28, x27, [sp, #144]
  42102c:	stp	x26, x25, [sp, #160]
  421030:	stp	x24, x23, [sp, #176]
  421034:	stp	x22, x21, [sp, #192]
  421038:	stp	x20, x19, [sp, #208]
  42103c:	add	x29, sp, #0x80
  421040:	str	xzr, [sp, #48]
  421044:	cbz	x8, 421180 <builtin_hwdb+0x168>
  421048:	str	w3, [sp, #44]
  42104c:	str	x0, [sp, #32]
  421050:	adrp	x19, 46f000 <_DYNAMIC+0x208>
  421054:	ldr	x19, [x19, #240]
  421058:	adrp	x27, 439000 <worker_hash_op+0x4df8>
  42105c:	adrp	x28, 457000 <__FRAME_END__+0x149b8>
  421060:	adrp	x21, 441000 <worker_hash_op+0xcdf8>
  421064:	mov	x25, x2
  421068:	mov	w26, w1
  42106c:	mov	x23, xzr
  421070:	mov	x24, xzr
  421074:	mov	x20, xzr
  421078:	mov	x22, xzr
  42107c:	add	x27, x27, #0x779
  421080:	add	x28, x28, #0x318
  421084:	add	x21, x21, #0xfd7
  421088:	b	421094 <builtin_hwdb+0x7c>
  42108c:	cmn	w0, #0x1
  421090:	b.eq	4210e8 <builtin_hwdb+0xd0>  // b.none
  421094:	mov	w0, w26
  421098:	mov	x1, x25
  42109c:	mov	x2, x27
  4210a0:	mov	x3, x28
  4210a4:	mov	x4, xzr
  4210a8:	bl	40a290 <getopt_long@plt>
  4210ac:	sub	w8, w0, #0x64
  4210b0:	cmp	w8, #0xf
  4210b4:	b.hi	42108c <builtin_hwdb+0x74>  // b.pmore
  4210b8:	adr	x9, 421094 <builtin_hwdb+0x7c>
  4210bc:	ldrb	w10, [x21, x8]
  4210c0:	add	x9, x9, x10, lsl #2
  4210c4:	br	x9
  4210c8:	ldr	x20, [x19]
  4210cc:	b	421094 <builtin_hwdb+0x7c>
  4210d0:	ldr	x23, [x19]
  4210d4:	b	421094 <builtin_hwdb+0x7c>
  4210d8:	ldr	x24, [x19]
  4210dc:	b	421094 <builtin_hwdb+0x7c>
  4210e0:	ldr	x22, [x19]
  4210e4:	b	421094 <builtin_hwdb+0x7c>
  4210e8:	adrp	x8, 46f000 <_DYNAMIC+0x208>
  4210ec:	ldr	x8, [x8, #232]
  4210f0:	ldrsw	x8, [x8]
  4210f4:	ldr	x2, [x25, x8, lsl #3]
  4210f8:	cbz	x2, 421188 <builtin_hwdb+0x170>
  4210fc:	ldr	w8, [sp, #44]
  421100:	ldr	x19, [sp, #32]
  421104:	mov	x1, x23
  421108:	mov	x3, x22
  42110c:	and	w4, w8, #0x1
  421110:	mov	x0, x19
  421114:	bl	420eb8 <udev_builtin_hwdb_lookup>
  421118:	mov	w20, w0
  42111c:	tbnz	w0, #31, 4211ac <builtin_hwdb+0x194>
  421120:	cbnz	w20, 42161c <builtin_hwdb+0x604>
  421124:	stur	xzr, [x29, #-48]
  421128:	cbz	x19, 42113c <builtin_hwdb+0x124>
  42112c:	mov	w0, #0x1                   	// #1
  421130:	bl	40a2c0 <log_get_max_level_realm@plt>
  421134:	cmp	w0, #0x7
  421138:	b.ge	421674 <builtin_hwdb+0x65c>  // b.tcont
  42113c:	mov	x6, xzr
  421140:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  421144:	add	x8, x8, #0x7f
  421148:	cmp	x6, #0x0
  42114c:	csel	x5, xzr, x8, eq  // eq = none
  421150:	adrp	x8, 439000 <worker_hash_op+0x4df8>
  421154:	add	x8, x8, #0x7c9
  421158:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  42115c:	adrp	x4, 439000 <worker_hash_op+0x4df8>
  421160:	mov	w1, #0x3d                  	// #61
  421164:	add	x2, x2, #0x785
  421168:	add	x4, x4, #0x7a2
  42116c:	str	x8, [sp, #8]
  421170:	mov	w0, #0x7                   	// #7
  421174:	movk	w1, #0x4000, lsl #16
  421178:	mov	w3, #0xa8                  	// #168
  42117c:	b	4215b4 <builtin_hwdb+0x59c>
  421180:	mov	w20, #0xffffffea            	// #-22
  421184:	b	421628 <builtin_hwdb+0x610>
  421188:	ldr	x19, [sp, #32]
  42118c:	cbz	x20, 421200 <builtin_hwdb+0x1e8>
  421190:	add	x0, sp, #0x30
  421194:	mov	x1, x20
  421198:	bl	40afa0 <sd_device_new_from_device_id@plt>
  42119c:	ldr	w21, [sp, #44]
  4211a0:	tbnz	w0, #31, 4214e0 <builtin_hwdb+0x4c8>
  4211a4:	ldr	x8, [sp, #48]
  4211a8:	b	421208 <builtin_hwdb+0x1f0>
  4211ac:	stur	xzr, [x29, #-48]
  4211b0:	cbz	x19, 4211c4 <builtin_hwdb+0x1ac>
  4211b4:	mov	w0, #0x1                   	// #1
  4211b8:	bl	40a2c0 <log_get_max_level_realm@plt>
  4211bc:	cmp	w0, #0x7
  4211c0:	b.ge	42164c <builtin_hwdb+0x634>  // b.tcont
  4211c4:	mov	x6, xzr
  4211c8:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  4211cc:	add	x8, x8, #0x7f
  4211d0:	cmp	x6, #0x0
  4211d4:	csel	x5, xzr, x8, eq  // eq = none
  4211d8:	adrp	x8, 439000 <worker_hash_op+0x4df8>
  4211dc:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  4211e0:	adrp	x4, 439000 <worker_hash_op+0x4df8>
  4211e4:	add	x8, x8, #0x7af
  4211e8:	add	x2, x2, #0x785
  4211ec:	add	x4, x4, #0x7a2
  4211f0:	mov	w0, #0x7                   	// #7
  4211f4:	mov	w3, #0xa6                  	// #166
  4211f8:	str	x8, [sp, #8]
  4211fc:	b	421608 <builtin_hwdb+0x5f0>
  421200:	ldr	w21, [sp, #44]
  421204:	mov	x8, xzr
  421208:	cbz	x19, 4216b0 <builtin_hwdb+0x698>
  42120c:	cmp	x8, #0x0
  421210:	csel	x0, x19, x8, eq  // eq = none
  421214:	mov	w20, wzr
  421218:	mov	w27, wzr
  42121c:	stur	x0, [x29, #-32]
  421220:	cbz	x24, 421388 <builtin_hwdb+0x370>
  421224:	adrp	x25, 439000 <worker_hash_op+0x4df8>
  421228:	adrp	x26, 439000 <worker_hash_op+0x4df8>
  42122c:	add	x25, x25, #0x876
  421230:	add	x26, x26, #0x87f
  421234:	sub	x1, x29, #0x38
  421238:	str	xzr, [sp, #56]
  42123c:	bl	40a850 <sd_device_get_subsystem@plt>
  421240:	tbnz	w0, #31, 4212ac <builtin_hwdb+0x294>
  421244:	ldur	x0, [x29, #-56]
  421248:	mov	x1, x24
  42124c:	bl	40a930 <strcmp@plt>
  421250:	cbnz	w0, 4212ac <builtin_hwdb+0x294>
  421254:	ldur	x0, [x29, #-32]
  421258:	add	x2, sp, #0x38
  42125c:	mov	x1, x25
  421260:	bl	40aa50 <sd_device_get_property_value@plt>
  421264:	ldur	x0, [x29, #-56]
  421268:	mov	x1, x26
  42126c:	bl	40a930 <strcmp@plt>
  421270:	cbz	w0, 4212c8 <builtin_hwdb+0x2b0>
  421274:	ldr	x28, [sp, #56]
  421278:	cbz	x28, 4212ac <builtin_hwdb+0x294>
  42127c:	and	w4, w21, #0x1
  421280:	mov	x0, x19
  421284:	mov	x1, x23
  421288:	mov	x2, x28
  42128c:	mov	x3, x22
  421290:	bl	420eb8 <udev_builtin_hwdb_lookup>
  421294:	cmp	w0, #0x1
  421298:	cset	w8, lt  // lt = tstop
  42129c:	mov	w20, w0
  4212a0:	bic	w8, w8, w27
  4212a4:	tbz	w8, #0, 421558 <builtin_hwdb+0x540>
  4212a8:	mov	w27, wzr
  4212ac:	ldur	x0, [x29, #-32]
  4212b0:	sub	x1, x29, #0x20
  4212b4:	bl	40ab60 <sd_device_get_parent@plt>
  4212b8:	tbnz	w0, #31, 421558 <builtin_hwdb+0x540>
  4212bc:	ldur	x0, [x29, #-32]
  4212c0:	cbnz	x0, 421234 <builtin_hwdb+0x21c>
  4212c4:	b	421558 <builtin_hwdb+0x540>
  4212c8:	ldur	x0, [x29, #-32]
  4212cc:	add	x1, sp, #0x40
  4212d0:	bl	40a870 <sd_device_get_devtype@plt>
  4212d4:	tbnz	w0, #31, 421274 <builtin_hwdb+0x25c>
  4212d8:	ldr	x0, [sp, #64]
  4212dc:	adrp	x1, 439000 <worker_hash_op+0x4df8>
  4212e0:	add	x1, x1, #0x883
  4212e4:	bl	40a930 <strcmp@plt>
  4212e8:	cbnz	w0, 421274 <builtin_hwdb+0x25c>
  4212ec:	ldr	x2, [sp, #56]
  4212f0:	cbnz	x2, 421540 <builtin_hwdb+0x528>
  4212f4:	ldur	x28, [x29, #-32]
  4212f8:	adrp	x1, 439000 <worker_hash_op+0x4df8>
  4212fc:	sub	x2, x29, #0x8
  421300:	add	x1, x1, #0x88e
  421304:	mov	x0, x28
  421308:	bl	40ace0 <sd_device_get_sysattr_value@plt>
  42130c:	tbnz	w0, #31, 421374 <builtin_hwdb+0x35c>
  421310:	adrp	x1, 439000 <worker_hash_op+0x4df8>
  421314:	sub	x2, x29, #0x10
  421318:	mov	x0, x28
  42131c:	add	x1, x1, #0x897
  421320:	bl	40ace0 <sd_device_get_sysattr_value@plt>
  421324:	tbnz	w0, #31, 421374 <builtin_hwdb+0x35c>
  421328:	ldur	x0, [x29, #-8]
  42132c:	sub	x2, x29, #0x14
  421330:	mov	w1, #0x10                  	// #16
  421334:	bl	40b4f0 <safe_atou16_full@plt>
  421338:	tbnz	w0, #31, 421374 <builtin_hwdb+0x35c>
  42133c:	ldur	x0, [x29, #-16]
  421340:	sub	x2, x29, #0x18
  421344:	mov	w1, #0x10                  	// #16
  421348:	bl	40b4f0 <safe_atou16_full@plt>
  42134c:	tbnz	w0, #31, 421374 <builtin_hwdb+0x35c>
  421350:	ldurh	w3, [x29, #-20]
  421354:	ldurh	w4, [x29, #-24]
  421358:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  42135c:	sub	x0, x29, #0x30
  421360:	mov	w1, #0x10                  	// #16
  421364:	add	x2, x2, #0x8a1
  421368:	sub	x28, x29, #0x30
  42136c:	bl	40b050 <snprintf@plt>
  421370:	b	421378 <builtin_hwdb+0x360>
  421374:	mov	x28, xzr
  421378:	str	x28, [sp, #56]
  42137c:	mov	w27, #0x1                   	// #1
  421380:	cbnz	x28, 42127c <builtin_hwdb+0x264>
  421384:	b	4212ac <builtin_hwdb+0x294>
  421388:	adrp	x24, 439000 <worker_hash_op+0x4df8>
  42138c:	adrp	x25, 439000 <worker_hash_op+0x4df8>
  421390:	adrp	x26, 439000 <worker_hash_op+0x4df8>
  421394:	add	x24, x24, #0x876
  421398:	add	x25, x25, #0x87f
  42139c:	add	x26, x26, #0x883
  4213a0:	sub	x1, x29, #0x38
  4213a4:	str	xzr, [sp, #56]
  4213a8:	bl	40a850 <sd_device_get_subsystem@plt>
  4213ac:	tbnz	w0, #31, 421408 <builtin_hwdb+0x3f0>
  4213b0:	ldur	x0, [x29, #-32]
  4213b4:	add	x2, sp, #0x38
  4213b8:	mov	x1, x24
  4213bc:	bl	40aa50 <sd_device_get_property_value@plt>
  4213c0:	ldur	x0, [x29, #-56]
  4213c4:	mov	x1, x25
  4213c8:	bl	40a930 <strcmp@plt>
  4213cc:	cbz	w0, 421424 <builtin_hwdb+0x40c>
  4213d0:	ldr	x28, [sp, #56]
  4213d4:	cbz	x28, 421408 <builtin_hwdb+0x3f0>
  4213d8:	and	w4, w21, #0x1
  4213dc:	mov	x0, x19
  4213e0:	mov	x1, x23
  4213e4:	mov	x2, x28
  4213e8:	mov	x3, x22
  4213ec:	bl	420eb8 <udev_builtin_hwdb_lookup>
  4213f0:	cmp	w0, #0x0
  4213f4:	cset	w8, gt
  4213f8:	mov	w20, w0
  4213fc:	orr	w8, w27, w8
  421400:	tbnz	w8, #0, 421558 <builtin_hwdb+0x540>
  421404:	mov	w27, wzr
  421408:	ldur	x0, [x29, #-32]
  42140c:	sub	x1, x29, #0x20
  421410:	bl	40ab60 <sd_device_get_parent@plt>
  421414:	tbnz	w0, #31, 421558 <builtin_hwdb+0x540>
  421418:	ldur	x0, [x29, #-32]
  42141c:	cbnz	x0, 4213a0 <builtin_hwdb+0x388>
  421420:	b	421558 <builtin_hwdb+0x540>
  421424:	ldur	x0, [x29, #-32]
  421428:	add	x1, sp, #0x40
  42142c:	bl	40a870 <sd_device_get_devtype@plt>
  421430:	tbnz	w0, #31, 4213d0 <builtin_hwdb+0x3b8>
  421434:	ldr	x0, [sp, #64]
  421438:	mov	x1, x26
  42143c:	bl	40a930 <strcmp@plt>
  421440:	cbnz	w0, 4213d0 <builtin_hwdb+0x3b8>
  421444:	ldr	x2, [sp, #56]
  421448:	cbnz	x2, 421540 <builtin_hwdb+0x528>
  42144c:	ldur	x28, [x29, #-32]
  421450:	adrp	x1, 439000 <worker_hash_op+0x4df8>
  421454:	sub	x2, x29, #0x8
  421458:	add	x1, x1, #0x88e
  42145c:	mov	x0, x28
  421460:	bl	40ace0 <sd_device_get_sysattr_value@plt>
  421464:	tbnz	w0, #31, 4214cc <builtin_hwdb+0x4b4>
  421468:	adrp	x1, 439000 <worker_hash_op+0x4df8>
  42146c:	sub	x2, x29, #0x10
  421470:	mov	x0, x28
  421474:	add	x1, x1, #0x897
  421478:	bl	40ace0 <sd_device_get_sysattr_value@plt>
  42147c:	tbnz	w0, #31, 4214cc <builtin_hwdb+0x4b4>
  421480:	ldur	x0, [x29, #-8]
  421484:	sub	x2, x29, #0x14
  421488:	mov	w1, #0x10                  	// #16
  42148c:	bl	40b4f0 <safe_atou16_full@plt>
  421490:	tbnz	w0, #31, 4214cc <builtin_hwdb+0x4b4>
  421494:	ldur	x0, [x29, #-16]
  421498:	sub	x2, x29, #0x18
  42149c:	mov	w1, #0x10                  	// #16
  4214a0:	bl	40b4f0 <safe_atou16_full@plt>
  4214a4:	tbnz	w0, #31, 4214cc <builtin_hwdb+0x4b4>
  4214a8:	ldurh	w3, [x29, #-20]
  4214ac:	ldurh	w4, [x29, #-24]
  4214b0:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  4214b4:	sub	x0, x29, #0x30
  4214b8:	mov	w1, #0x10                  	// #16
  4214bc:	add	x2, x2, #0x8a1
  4214c0:	sub	x28, x29, #0x30
  4214c4:	bl	40b050 <snprintf@plt>
  4214c8:	b	4214d0 <builtin_hwdb+0x4b8>
  4214cc:	mov	x28, xzr
  4214d0:	mov	w27, #0x1                   	// #1
  4214d4:	str	x28, [sp, #56]
  4214d8:	cbnz	x28, 4213d8 <builtin_hwdb+0x3c0>
  4214dc:	b	421408 <builtin_hwdb+0x3f0>
  4214e0:	mov	w25, w0
  4214e4:	stur	xzr, [x29, #-48]
  4214e8:	cbz	x19, 4214fc <builtin_hwdb+0x4e4>
  4214ec:	mov	w0, #0x1                   	// #1
  4214f0:	bl	40a2c0 <log_get_max_level_realm@plt>
  4214f4:	cmp	w0, #0x7
  4214f8:	b.ge	42169c <builtin_hwdb+0x684>  // b.tcont
  4214fc:	mov	x6, xzr
  421500:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  421504:	add	x8, x8, #0x7f
  421508:	cmp	x6, #0x0
  42150c:	csel	x5, xzr, x8, eq  // eq = none
  421510:	adrp	x8, 439000 <worker_hash_op+0x4df8>
  421514:	add	x8, x8, #0x7e3
  421518:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  42151c:	adrp	x4, 439000 <worker_hash_op+0x4df8>
  421520:	add	x2, x2, #0x785
  421524:	add	x4, x4, #0x7a2
  421528:	stp	x8, x20, [sp, #8]
  42152c:	mov	w0, #0x7                   	// #7
  421530:	mov	w3, #0xb0                  	// #176
  421534:	str	xzr, [sp]
  421538:	mov	w1, w25
  42153c:	b	421610 <builtin_hwdb+0x5f8>
  421540:	and	w4, w21, #0x1
  421544:	mov	x0, x19
  421548:	mov	x1, x23
  42154c:	mov	x3, x22
  421550:	bl	420eb8 <udev_builtin_hwdb_lookup>
  421554:	mov	w20, w0
  421558:	tbnz	w20, #31, 4215bc <builtin_hwdb+0x5a4>
  42155c:	cbnz	w20, 42161c <builtin_hwdb+0x604>
  421560:	mov	w0, #0x1                   	// #1
  421564:	stur	xzr, [x29, #-48]
  421568:	bl	40a2c0 <log_get_max_level_realm@plt>
  42156c:	cmp	w0, #0x7
  421570:	mov	x6, xzr
  421574:	b.ge	421688 <builtin_hwdb+0x670>  // b.tcont
  421578:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  42157c:	add	x8, x8, #0x7f
  421580:	cmp	x6, #0x0
  421584:	csel	x5, xzr, x8, eq  // eq = none
  421588:	adrp	x8, 439000 <worker_hash_op+0x4df8>
  42158c:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  421590:	adrp	x4, 439000 <worker_hash_op+0x4df8>
  421594:	mov	w1, #0x3d                  	// #61
  421598:	add	x8, x8, #0x7c9
  42159c:	add	x2, x2, #0x785
  4215a0:	add	x4, x4, #0x7a2
  4215a4:	mov	w0, #0x7                   	// #7
  4215a8:	movk	w1, #0x4000, lsl #16
  4215ac:	mov	w3, #0xb7                  	// #183
  4215b0:	str	x8, [sp, #8]
  4215b4:	str	xzr, [sp]
  4215b8:	b	421610 <builtin_hwdb+0x5f8>
  4215bc:	mov	w0, #0x1                   	// #1
  4215c0:	stur	xzr, [x29, #-48]
  4215c4:	bl	40a2c0 <log_get_max_level_realm@plt>
  4215c8:	cmp	w0, #0x7
  4215cc:	mov	x6, xzr
  4215d0:	b.ge	421660 <builtin_hwdb+0x648>  // b.tcont
  4215d4:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  4215d8:	add	x8, x8, #0x7f
  4215dc:	cmp	x6, #0x0
  4215e0:	csel	x5, xzr, x8, eq  // eq = none
  4215e4:	adrp	x8, 439000 <worker_hash_op+0x4df8>
  4215e8:	add	x8, x8, #0x7af
  4215ec:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  4215f0:	adrp	x4, 439000 <worker_hash_op+0x4df8>
  4215f4:	add	x2, x2, #0x785
  4215f8:	add	x4, x4, #0x7a2
  4215fc:	str	x8, [sp, #8]
  421600:	mov	w0, #0x7                   	// #7
  421604:	mov	w3, #0xb5                  	// #181
  421608:	str	xzr, [sp]
  42160c:	mov	w1, w20
  421610:	mov	x7, xzr
  421614:	bl	40a730 <log_object_internal@plt>
  421618:	mov	w20, w0
  42161c:	ldr	x0, [sp, #48]
  421620:	cbz	x0, 421628 <builtin_hwdb+0x610>
  421624:	bl	40a6e0 <sd_device_unref@plt>
  421628:	mov	w0, w20
  42162c:	ldp	x20, x19, [sp, #208]
  421630:	ldp	x22, x21, [sp, #192]
  421634:	ldp	x24, x23, [sp, #176]
  421638:	ldp	x26, x25, [sp, #160]
  42163c:	ldp	x28, x27, [sp, #144]
  421640:	ldp	x29, x30, [sp, #128]
  421644:	add	sp, sp, #0xe0
  421648:	ret
  42164c:	sub	x1, x29, #0x30
  421650:	mov	x0, x19
  421654:	bl	40a780 <sd_device_get_sysname@plt>
  421658:	ldur	x6, [x29, #-48]
  42165c:	b	4211c8 <builtin_hwdb+0x1b0>
  421660:	sub	x1, x29, #0x30
  421664:	mov	x0, x19
  421668:	bl	40a780 <sd_device_get_sysname@plt>
  42166c:	ldur	x6, [x29, #-48]
  421670:	b	4215d4 <builtin_hwdb+0x5bc>
  421674:	sub	x1, x29, #0x30
  421678:	mov	x0, x19
  42167c:	bl	40a780 <sd_device_get_sysname@plt>
  421680:	ldur	x6, [x29, #-48]
  421684:	b	421140 <builtin_hwdb+0x128>
  421688:	sub	x1, x29, #0x30
  42168c:	mov	x0, x19
  421690:	bl	40a780 <sd_device_get_sysname@plt>
  421694:	ldur	x6, [x29, #-48]
  421698:	b	421578 <builtin_hwdb+0x560>
  42169c:	sub	x1, x29, #0x30
  4216a0:	mov	x0, x19
  4216a4:	bl	40a780 <sd_device_get_sysname@plt>
  4216a8:	ldur	x6, [x29, #-48]
  4216ac:	b	421500 <builtin_hwdb+0x4e8>
  4216b0:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  4216b4:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  4216b8:	adrp	x4, 439000 <worker_hash_op+0x4df8>
  4216bc:	add	x1, x1, #0x4f0
  4216c0:	add	x2, x2, #0x785
  4216c4:	add	x4, x4, #0x80e
  4216c8:	mov	w0, #0x1                   	// #1
  4216cc:	mov	w3, #0x49                  	// #73
  4216d0:	bl	40a630 <log_assert_failed_realm@plt>

00000000004216d4 <builtin_hwdb_init>:
  4216d4:	stp	x29, x30, [sp, #-16]!
  4216d8:	adrp	x8, 470000 <arg_resolve_name_timing>
  4216dc:	ldr	x8, [x8, #64]
  4216e0:	mov	x29, sp
  4216e4:	cbz	x8, 4216f4 <builtin_hwdb_init+0x20>
  4216e8:	mov	w0, wzr
  4216ec:	ldp	x29, x30, [sp], #16
  4216f0:	ret
  4216f4:	adrp	x0, 470000 <arg_resolve_name_timing>
  4216f8:	add	x0, x0, #0x40
  4216fc:	bl	40b500 <sd_hwdb_new@plt>
  421700:	and	w0, w0, w0, asr #31
  421704:	ldp	x29, x30, [sp], #16
  421708:	ret

000000000042170c <builtin_hwdb_exit>:
  42170c:	stp	x29, x30, [sp, #-32]!
  421710:	str	x19, [sp, #16]
  421714:	adrp	x19, 470000 <arg_resolve_name_timing>
  421718:	ldr	x0, [x19, #64]
  42171c:	mov	x29, sp
  421720:	bl	40b510 <sd_hwdb_unref@plt>
  421724:	str	x0, [x19, #64]
  421728:	ldr	x19, [sp, #16]
  42172c:	ldp	x29, x30, [sp], #32
  421730:	ret

0000000000421734 <builtin_hwdb_validate>:
  421734:	adrp	x8, 470000 <arg_resolve_name_timing>
  421738:	ldr	x0, [x8, #64]
  42173c:	b	40b520 <hwdb_validate@plt>

0000000000421740 <builtin_input_id>:
  421740:	sub	sp, sp, #0x170
  421744:	stp	x29, x30, [sp, #272]
  421748:	stp	x28, x27, [sp, #288]
  42174c:	stp	x26, x25, [sp, #304]
  421750:	stp	x24, x23, [sp, #320]
  421754:	stp	x22, x21, [sp, #336]
  421758:	stp	x20, x19, [sp, #352]
  42175c:	add	x29, sp, #0x110
  421760:	cbz	x0, 4221a8 <builtin_input_id+0xa68>
  421764:	adrp	x21, 439000 <worker_hash_op+0x4df8>
  421768:	adrp	x22, 439000 <worker_hash_op+0x4df8>
  42176c:	mov	w20, w3
  421770:	mov	x19, x0
  421774:	add	x21, x21, #0x92d
  421778:	add	x22, x22, #0x93d
  42177c:	stur	x0, [x29, #-88]
  421780:	add	x2, sp, #0x48
  421784:	mov	x1, x21
  421788:	bl	40ace0 <sd_device_get_sysattr_value@plt>
  42178c:	tbz	w0, #31, 4217b4 <builtin_input_id+0x74>
  421790:	ldur	x0, [x29, #-88]
  421794:	sub	x3, x29, #0x58
  421798:	mov	x1, x22
  42179c:	mov	x2, xzr
  4217a0:	bl	40b530 <sd_device_get_parent_with_subsystem_devtype@plt>
  4217a4:	tbnz	w0, #31, 4219c4 <builtin_input_id+0x284>
  4217a8:	ldur	x0, [x29, #-88]
  4217ac:	cbnz	x0, 421780 <builtin_input_id+0x40>
  4217b0:	b	421f88 <builtin_input_id+0x848>
  4217b4:	ldur	x8, [x29, #-88]
  4217b8:	cbz	x8, 421f88 <builtin_input_id+0x848>
  4217bc:	and	w21, w20, #0x1
  4217c0:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  4217c4:	adrp	x3, 437000 <worker_hash_op+0x2df8>
  4217c8:	add	x2, x2, #0x943
  4217cc:	add	x3, x3, #0xbc
  4217d0:	mov	x0, x19
  4217d4:	mov	w1, w21
  4217d8:	bl	420aec <udev_builtin_add_property>
  4217dc:	ldur	x0, [x29, #-88]
  4217e0:	adrp	x1, 439000 <worker_hash_op+0x4df8>
  4217e4:	add	x1, x1, #0x92d
  4217e8:	sub	x2, x29, #0x60
  4217ec:	mov	w3, #0x8                   	// #8
  4217f0:	mov	w4, w21
  4217f4:	bl	422214 <get_cap_mask>
  4217f8:	ldur	x0, [x29, #-88]
  4217fc:	adrp	x1, 439000 <worker_hash_op+0x4df8>
  421800:	add	x1, x1, #0x94c
  421804:	sub	x2, x29, #0x68
  421808:	mov	w3, #0x8                   	// #8
  42180c:	mov	w4, w21
  421810:	bl	422214 <get_cap_mask>
  421814:	ldur	x0, [x29, #-88]
  421818:	adrp	x1, 439000 <worker_hash_op+0x4df8>
  42181c:	add	x1, x1, #0x95d
  421820:	add	x2, sp, #0x40
  421824:	mov	w3, #0x8                   	// #8
  421828:	mov	w4, w21
  42182c:	bl	422214 <get_cap_mask>
  421830:	ldur	x0, [x29, #-88]
  421834:	adrp	x1, 439000 <worker_hash_op+0x4df8>
  421838:	add	x1, x1, #0x96e
  42183c:	add	x2, sp, #0x48
  421840:	mov	w3, #0x60                  	// #96
  421844:	mov	w4, w21
  421848:	bl	422214 <get_cap_mask>
  42184c:	ldur	x0, [x29, #-88]
  421850:	adrp	x1, 439000 <worker_hash_op+0x4df8>
  421854:	add	x1, x1, #0x97f
  421858:	add	x2, sp, #0x38
  42185c:	mov	w3, #0x8                   	// #8
  421860:	mov	w4, w21
  421864:	bl	422214 <get_cap_mask>
  421868:	ldp	x15, x21, [x29, #-104]
  42186c:	ldp	x23, x22, [sp, #56]
  421870:	and	x8, x15, #0x3
  421874:	cmp	x8, #0x3
  421878:	b.ne	4219cc <builtin_input_id+0x28c>  // b.any
  42187c:	and	x10, x15, #0x4
  421880:	and	x11, x23, #0x40
  421884:	orr	x10, x10, x11
  421888:	cmp	x10, #0x0
  42188c:	ubfx	x9, x23, #6, #1
  421890:	cset	w10, ne  // ne = any
  421894:	tst	x21, #0x2
  421898:	csel	w9, w10, w9, eq  // eq = none
  42189c:	cmp	w9, #0x1
  4218a0:	b.eq	4219e4 <builtin_input_id+0x2a4>  // b.none
  4218a4:	ldr	x17, [sp, #112]
  4218a8:	mov	w9, #0x801                 	// #2049
  4218ac:	mov	w10, #0x110                 	// #272
  4218b0:	add	x12, sp, #0x48
  4218b4:	and	x11, x17, x9
  4218b8:	mov	w13, #0x1                   	// #1
  4218bc:	lsr	x9, x10, #3
  4218c0:	and	x9, x9, #0x1ffffffffffffff8
  4218c4:	ldr	x9, [x12, x9]
  4218c8:	lsl	x14, x13, x10
  4218cc:	cmp	x10, #0x11e
  4218d0:	and	x9, x14, x9
  4218d4:	b.hi	4218e0 <builtin_input_id+0x1a0>  // b.pmore
  4218d8:	add	x10, x10, #0x1
  4218dc:	cbz	x9, 4218bc <builtin_input_id+0x17c>
  4218e0:	mov	w10, wzr
  4218e4:	mov	w0, #0x21                  	// #33
  4218e8:	tbz	w21, #2, 4218f4 <builtin_input_id+0x1b4>
  4218ec:	tbz	w22, #0, 4218f4 <builtin_input_id+0x1b4>
  4218f0:	ubfx	x10, x22, #1, #1
  4218f4:	and	x13, x15, #0x60000000000000
  4218f8:	mov	x12, #0x60000000000000      	// #27021597764222976
  4218fc:	ldr	w1, [sp, #104]
  421900:	and	x14, x15, #0xc00000000000
  421904:	mov	x18, #0xc00000000000        	// #211106232532992
  421908:	cmp	x13, x12
  42190c:	cset	w16, ne  // ne = any
  421910:	cmp	x14, x18
  421914:	cset	w18, eq  // eq = none
  421918:	and	x12, x23, #0x2
  42191c:	tbnz	w1, #31, 4219f4 <builtin_input_id+0x2b4>
  421920:	mov	w1, #0x120                 	// #288
  421924:	add	x2, sp, #0x48
  421928:	mov	w3, #0x1                   	// #1
  42192c:	lsr	x4, x1, #3
  421930:	and	x4, x4, #0x1ffffffffffffff8
  421934:	ldr	x4, [x2, x4]
  421938:	lsl	x5, x3, x1
  42193c:	cmp	x1, #0x13e
  421940:	and	x4, x5, x4
  421944:	b.hi	421950 <builtin_input_id+0x210>  // b.pmore
  421948:	add	x1, x1, #0x1
  42194c:	cbz	x4, 42192c <builtin_input_id+0x1ec>
  421950:	cbnz	x4, 4219bc <builtin_input_id+0x27c>
  421954:	mov	w1, #0x2c0                 	// #704
  421958:	add	x2, sp, #0x48
  42195c:	mov	w3, #0x1                   	// #1
  421960:	lsr	x4, x1, #3
  421964:	and	x4, x4, #0x1ffffffffffffff8
  421968:	ldr	x4, [x2, x4]
  42196c:	lsl	x5, x3, x1
  421970:	cmp	x1, #0x2e6
  421974:	and	x4, x5, x4
  421978:	b.hi	421984 <builtin_input_id+0x244>  // b.pmore
  42197c:	add	x1, x1, #0x1
  421980:	cbz	x4, 421960 <builtin_input_id+0x220>
  421984:	cbnz	x4, 4219bc <builtin_input_id+0x27c>
  421988:	mov	w1, #0x220                 	// #544
  42198c:	add	x2, sp, #0x48
  421990:	mov	w3, #0x1                   	// #1
  421994:	lsr	x4, x1, #3
  421998:	and	x4, x4, #0x1ffffffffffffff8
  42199c:	ldr	x4, [x2, x4]
  4219a0:	lsl	x5, x3, x1
  4219a4:	cmp	x1, #0x222
  4219a8:	and	x4, x5, x4
  4219ac:	b.hi	4219b8 <builtin_input_id+0x278>  // b.pmore
  4219b0:	add	x1, x1, #0x1
  4219b4:	cbz	x4, 421994 <builtin_input_id+0x254>
  4219b8:	cbz	x4, 4219f4 <builtin_input_id+0x2b4>
  4219bc:	mov	w24, #0x1                   	// #1
  4219c0:	b	421a1c <builtin_input_id+0x2dc>
  4219c4:	stur	xzr, [x29, #-88]
  4219c8:	b	421f88 <builtin_input_id+0x848>
  4219cc:	ubfx	x9, x23, #6, #1
  4219d0:	mov	w10, w9
  4219d4:	tst	x21, #0x2
  4219d8:	csel	w9, w10, w9, eq  // eq = none
  4219dc:	cmp	w9, #0x1
  4219e0:	b.ne	4218a4 <builtin_input_id+0x164>  // b.any
  4219e4:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  4219e8:	and	w1, w20, #0x1
  4219ec:	add	x2, x2, #0xaa6
  4219f0:	b	421da8 <builtin_input_id+0x668>
  4219f4:	mov	w1, #0x3                   	// #3
  4219f8:	mov	w2, #0x1                   	// #1
  4219fc:	lsl	x3, x2, x1
  421a00:	tst	x15, x3
  421a04:	cset	w24, ne  // ne = any
  421a08:	cmp	x1, #0x16
  421a0c:	b.hi	421a1c <builtin_input_id+0x2dc>  // b.pmore
  421a10:	and	x3, x15, x3
  421a14:	add	x1, x1, #0x1
  421a18:	cbz	x3, 4219fc <builtin_input_id+0x2bc>
  421a1c:	and	x0, x17, x0
  421a20:	cmp	x8, #0x3
  421a24:	and	x17, x17, #0x400
  421a28:	b.ne	421a48 <builtin_input_id+0x308>  // b.any
  421a2c:	cbz	x11, 421aa0 <builtin_input_id+0x360>
  421a30:	mov	w24, wzr
  421a34:	mov	w15, wzr
  421a38:	mov	w26, wzr
  421a3c:	mov	w25, wzr
  421a40:	mov	w27, #0x1                   	// #1
  421a44:	b	421ad4 <builtin_input_id+0x394>
  421a48:	mov	w15, wzr
  421a4c:	mov	w26, wzr
  421a50:	mov	w25, wzr
  421a54:	orr	w16, w18, w16
  421a58:	mov	x18, #0xc00000000000        	// #211106232532992
  421a5c:	mov	x1, #0x60000000000000      	// #27021597764222976
  421a60:	cmp	x14, x18
  421a64:	cset	w14, ne  // ne = any
  421a68:	cmp	x13, x1
  421a6c:	cset	w13, eq  // eq = none
  421a70:	cmp	x11, #0x0
  421a74:	cset	w11, ne  // ne = any
  421a78:	orr	w11, w16, w11
  421a7c:	tbz	w11, #0, 421a88 <builtin_input_id+0x348>
  421a80:	and	w27, w14, w13
  421a84:	b	421ad4 <builtin_input_id+0x394>
  421a88:	cbnz	x12, 421ac0 <builtin_input_id+0x380>
  421a8c:	cmp	x0, #0x20
  421a90:	b.ne	421ac0 <builtin_input_id+0x380>  // b.any
  421a94:	mov	w27, wzr
  421a98:	mov	w26, #0x1                   	// #1
  421a9c:	b	421ad4 <builtin_input_id+0x394>
  421aa0:	cbnz	x12, 4220e4 <builtin_input_id+0x9a4>
  421aa4:	cmp	x0, #0x20
  421aa8:	b.ne	4220e4 <builtin_input_id+0x9a4>  // b.any
  421aac:	mov	w15, wzr
  421ab0:	mov	w25, wzr
  421ab4:	mov	w24, wzr
  421ab8:	mov	w26, #0x1                   	// #1
  421abc:	b	421a54 <builtin_input_id+0x314>
  421ac0:	orr	x11, x17, x12
  421ac4:	cmp	x11, #0x0
  421ac8:	cset	w11, ne  // ne = any
  421acc:	mov	w27, wzr
  421ad0:	orr	w25, w11, w25
  421ad4:	cmp	x9, #0x0
  421ad8:	orr	w9, w26, w27
  421adc:	cset	w11, ne  // ne = any
  421ae0:	cmp	x8, #0x3
  421ae4:	orr	w8, w24, w9
  421ae8:	cset	w9, ne  // ne = any
  421aec:	eor	w8, w8, #0x1
  421af0:	and	w8, w11, w8
  421af4:	orr	w9, w10, w9
  421af8:	and	w8, w9, w8
  421afc:	orr	w28, w15, w8
  421b00:	tbz	w23, #5, 421d50 <builtin_input_id+0x610>
  421b04:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  421b08:	adrp	x3, 437000 <worker_hash_op+0x2df8>
  421b0c:	and	w1, w20, #0x1
  421b10:	add	x2, x2, #0xabd
  421b14:	add	x3, x3, #0xbc
  421b18:	mov	x0, x19
  421b1c:	bl	420aec <udev_builtin_add_property>
  421b20:	cbnz	w28, 421d54 <builtin_input_id+0x614>
  421b24:	cbz	w26, 421d74 <builtin_input_id+0x634>
  421b28:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  421b2c:	adrp	x3, 437000 <worker_hash_op+0x2df8>
  421b30:	and	w1, w20, #0x1
  421b34:	add	x2, x2, #0xae3
  421b38:	add	x3, x3, #0xbc
  421b3c:	mov	x0, x19
  421b40:	bl	420aec <udev_builtin_add_property>
  421b44:	cbnz	w25, 421d78 <builtin_input_id+0x638>
  421b48:	cbz	w24, 421d98 <builtin_input_id+0x658>
  421b4c:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  421b50:	adrp	x3, 437000 <worker_hash_op+0x2df8>
  421b54:	and	w1, w20, #0x1
  421b58:	add	x2, x2, #0xb0a
  421b5c:	add	x3, x3, #0xbc
  421b60:	mov	x0, x19
  421b64:	bl	420aec <udev_builtin_add_property>
  421b68:	cbnz	w27, 421d9c <builtin_input_id+0x65c>
  421b6c:	ubfx	x8, x23, #5, #1
  421b70:	orr	w9, w26, w28
  421b74:	orr	w9, w25, w9
  421b78:	orr	w8, w8, w24
  421b7c:	orr	w23, w8, w9
  421b80:	tbz	w21, #1, 421dc0 <builtin_input_id+0x680>
  421b84:	ldr	x24, [sp, #72]
  421b88:	mov	w0, #0x1                   	// #1
  421b8c:	stur	xzr, [x29, #-56]
  421b90:	bl	40a2c0 <log_get_max_level_realm@plt>
  421b94:	cmp	w0, #0x6
  421b98:	mov	x6, xzr
  421b9c:	b.gt	42211c <builtin_input_id+0x9dc>
  421ba0:	adrp	x25, 435000 <worker_hash_op+0xdf8>
  421ba4:	add	x25, x25, #0x7f
  421ba8:	cmp	x6, #0x0
  421bac:	csel	x5, xzr, x25, eq  // eq = none
  421bb0:	cmp	x24, #0x0
  421bb4:	adrp	x26, 439000 <worker_hash_op+0x4df8>
  421bb8:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  421bbc:	adrp	x4, 439000 <worker_hash_op+0x4df8>
  421bc0:	cset	w8, ne  // ne = any
  421bc4:	add	x26, x26, #0xb54
  421bc8:	add	x2, x2, #0x8d5
  421bcc:	add	x4, x4, #0xb2c
  421bd0:	mov	w0, #0x7                   	// #7
  421bd4:	mov	w3, #0x10c                 	// #268
  421bd8:	mov	w1, wzr
  421bdc:	mov	x7, xzr
  421be0:	stp	x26, xzr, [sp, #8]
  421be4:	str	xzr, [sp]
  421be8:	str	w8, [sp, #24]
  421bec:	bl	40a730 <log_object_internal@plt>
  421bf0:	ldr	x8, [sp, #80]
  421bf4:	mov	w0, #0x1                   	// #1
  421bf8:	stur	xzr, [x29, #-56]
  421bfc:	orr	x27, x8, x24
  421c00:	bl	40a2c0 <log_get_max_level_realm@plt>
  421c04:	cmp	w0, #0x6
  421c08:	mov	x6, xzr
  421c0c:	b.gt	422130 <builtin_input_id+0x9f0>
  421c10:	cmp	x6, #0x0
  421c14:	csel	x5, xzr, x25, eq  // eq = none
  421c18:	cmp	x27, #0x0
  421c1c:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  421c20:	adrp	x4, 439000 <worker_hash_op+0x4df8>
  421c24:	cset	w8, ne  // ne = any
  421c28:	mov	w9, #0x40                  	// #64
  421c2c:	add	x2, x2, #0x8d5
  421c30:	add	x4, x4, #0xb2c
  421c34:	mov	w0, #0x7                   	// #7
  421c38:	mov	w3, #0x10c                 	// #268
  421c3c:	mov	w1, wzr
  421c40:	mov	x7, xzr
  421c44:	stp	xzr, x26, [sp]
  421c48:	str	x9, [sp, #16]
  421c4c:	str	w8, [sp, #24]
  421c50:	bl	40a730 <log_object_internal@plt>
  421c54:	ldr	x8, [sp, #88]
  421c58:	mov	w0, #0x1                   	// #1
  421c5c:	stur	xzr, [x29, #-56]
  421c60:	orr	x27, x8, x27
  421c64:	bl	40a2c0 <log_get_max_level_realm@plt>
  421c68:	cmp	w0, #0x7
  421c6c:	mov	x6, xzr
  421c70:	b.ge	422144 <builtin_input_id+0xa04>  // b.tcont
  421c74:	cmp	x6, #0x0
  421c78:	csel	x5, xzr, x25, eq  // eq = none
  421c7c:	cmp	x27, #0x0
  421c80:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  421c84:	adrp	x4, 439000 <worker_hash_op+0x4df8>
  421c88:	cset	w8, ne  // ne = any
  421c8c:	mov	w9, #0x80                  	// #128
  421c90:	add	x2, x2, #0x8d5
  421c94:	add	x4, x4, #0xb2c
  421c98:	mov	w0, #0x7                   	// #7
  421c9c:	mov	w3, #0x10c                 	// #268
  421ca0:	mov	w1, wzr
  421ca4:	mov	x7, xzr
  421ca8:	stp	xzr, x26, [sp]
  421cac:	str	x9, [sp, #16]
  421cb0:	str	w8, [sp, #24]
  421cb4:	bl	40a730 <log_object_internal@plt>
  421cb8:	ldr	x8, [sp, #96]
  421cbc:	mov	w0, #0x1                   	// #1
  421cc0:	stur	xzr, [x29, #-56]
  421cc4:	orr	x27, x8, x27
  421cc8:	bl	40a2c0 <log_get_max_level_realm@plt>
  421ccc:	cmp	w0, #0x7
  421cd0:	mov	x6, xzr
  421cd4:	b.ge	422158 <builtin_input_id+0xa18>  // b.tcont
  421cd8:	cmp	x6, #0x0
  421cdc:	csel	x5, xzr, x25, eq  // eq = none
  421ce0:	cmp	x27, #0x0
  421ce4:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  421ce8:	adrp	x4, 439000 <worker_hash_op+0x4df8>
  421cec:	cset	w8, ne  // ne = any
  421cf0:	mov	w9, #0xc0                  	// #192
  421cf4:	add	x2, x2, #0x8d5
  421cf8:	add	x4, x4, #0xb2c
  421cfc:	mov	w0, #0x7                   	// #7
  421d00:	mov	w3, #0x10c                 	// #268
  421d04:	mov	w1, wzr
  421d08:	mov	x7, xzr
  421d0c:	stp	xzr, x26, [sp]
  421d10:	str	x9, [sp, #16]
  421d14:	str	w8, [sp, #24]
  421d18:	bl	40a730 <log_object_internal@plt>
  421d1c:	cbnz	x27, 421efc <builtin_input_id+0x7bc>
  421d20:	mov	w26, #0x160                 	// #352
  421d24:	add	x8, sp, #0x48
  421d28:	lsr	x9, x26, #3
  421d2c:	and	x9, x9, #0x1ffffffffffffff8
  421d30:	ldr	x9, [x8, x9]
  421d34:	lsr	x9, x9, x26
  421d38:	tbnz	w9, #0, 421e20 <builtin_input_id+0x6e0>
  421d3c:	add	x26, x26, #0x1
  421d40:	cmp	x26, #0x220
  421d44:	b.ne	421d28 <builtin_input_id+0x5e8>  // b.any
  421d48:	mov	x8, xzr
  421d4c:	b	421e78 <builtin_input_id+0x738>
  421d50:	cbz	w28, 421b24 <builtin_input_id+0x3e4>
  421d54:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  421d58:	adrp	x3, 437000 <worker_hash_op+0x2df8>
  421d5c:	and	w1, w20, #0x1
  421d60:	add	x2, x2, #0xad4
  421d64:	add	x3, x3, #0xbc
  421d68:	mov	x0, x19
  421d6c:	bl	420aec <udev_builtin_add_property>
  421d70:	cbnz	w26, 421b28 <builtin_input_id+0x3e8>
  421d74:	cbz	w25, 421b48 <builtin_input_id+0x408>
  421d78:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  421d7c:	adrp	x3, 437000 <worker_hash_op+0x2df8>
  421d80:	and	w1, w20, #0x1
  421d84:	add	x2, x2, #0xaf5
  421d88:	add	x3, x3, #0xbc
  421d8c:	mov	x0, x19
  421d90:	bl	420aec <udev_builtin_add_property>
  421d94:	cbnz	w24, 421b4c <builtin_input_id+0x40c>
  421d98:	cbz	w27, 421b6c <builtin_input_id+0x42c>
  421d9c:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  421da0:	and	w1, w20, #0x1
  421da4:	add	x2, x2, #0xb1c
  421da8:	adrp	x3, 437000 <worker_hash_op+0x2df8>
  421dac:	add	x3, x3, #0xbc
  421db0:	mov	x0, x19
  421db4:	bl	420aec <udev_builtin_add_property>
  421db8:	mov	w23, #0x1                   	// #1
  421dbc:	tbnz	w21, #1, 421b84 <builtin_input_id+0x444>
  421dc0:	mov	w0, #0x1                   	// #1
  421dc4:	stur	xzr, [x29, #-56]
  421dc8:	bl	40a2c0 <log_get_max_level_realm@plt>
  421dcc:	cmp	w0, #0x7
  421dd0:	mov	x6, xzr
  421dd4:	b.ge	42216c <builtin_input_id+0xa2c>  // b.tcont
  421dd8:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  421ddc:	add	x8, x8, #0x7f
  421de0:	cmp	x6, #0x0
  421de4:	csel	x5, xzr, x8, eq  // eq = none
  421de8:	adrp	x8, 439000 <worker_hash_op+0x4df8>
  421dec:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  421df0:	adrp	x4, 439000 <worker_hash_op+0x4df8>
  421df4:	add	x8, x8, #0xb35
  421df8:	add	x2, x2, #0x8d5
  421dfc:	add	x4, x4, #0xb2c
  421e00:	mov	w0, #0x7                   	// #7
  421e04:	mov	w3, #0x104                 	// #260
  421e08:	mov	w1, wzr
  421e0c:	mov	x7, xzr
  421e10:	stp	xzr, x8, [sp]
  421e14:	bl	40a730 <log_object_internal@plt>
  421e18:	mov	w8, wzr
  421e1c:	b	421f34 <builtin_input_id+0x7f4>
  421e20:	mov	w0, #0x1                   	// #1
  421e24:	stur	xzr, [x29, #-56]
  421e28:	bl	40a2c0 <log_get_max_level_realm@plt>
  421e2c:	cmp	w0, #0x7
  421e30:	mov	x6, xzr
  421e34:	b.ge	422180 <builtin_input_id+0xa40>  // b.tcont
  421e38:	cmp	x6, #0x0
  421e3c:	adrp	x8, 439000 <worker_hash_op+0x4df8>
  421e40:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  421e44:	adrp	x4, 439000 <worker_hash_op+0x4df8>
  421e48:	csel	x5, xzr, x25, eq  // eq = none
  421e4c:	add	x8, x8, #0xb8c
  421e50:	add	x2, x2, #0x8d5
  421e54:	add	x4, x4, #0xb2c
  421e58:	mov	w0, #0x7                   	// #7
  421e5c:	mov	w3, #0x114                 	// #276
  421e60:	mov	w1, wzr
  421e64:	mov	x7, xzr
  421e68:	str	w26, [sp, #16]
  421e6c:	stp	xzr, x8, [sp]
  421e70:	bl	40a730 <log_object_internal@plt>
  421e74:	mov	w8, #0x1                   	// #1
  421e78:	mov	w26, #0x230                 	// #560
  421e7c:	add	x9, sp, #0x48
  421e80:	lsr	x10, x26, #3
  421e84:	and	x10, x10, #0x1ffffffffffffff8
  421e88:	ldr	x10, [x9, x10]
  421e8c:	lsr	x10, x10, x26
  421e90:	tbnz	w10, #0, 421ea8 <builtin_input_id+0x768>
  421e94:	add	x26, x26, #0x1
  421e98:	cmp	x26, #0x2c0
  421e9c:	b.ne	421e80 <builtin_input_id+0x740>  // b.any
  421ea0:	cbnz	x8, 421efc <builtin_input_id+0x7bc>
  421ea4:	b	421f1c <builtin_input_id+0x7dc>
  421ea8:	mov	w0, #0x1                   	// #1
  421eac:	stur	xzr, [x29, #-56]
  421eb0:	bl	40a2c0 <log_get_max_level_realm@plt>
  421eb4:	cmp	w0, #0x7
  421eb8:	mov	x6, xzr
  421ebc:	b.ge	422194 <builtin_input_id+0xa54>  // b.tcont
  421ec0:	cmp	x6, #0x0
  421ec4:	adrp	x8, 439000 <worker_hash_op+0x4df8>
  421ec8:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  421ecc:	adrp	x4, 439000 <worker_hash_op+0x4df8>
  421ed0:	csel	x5, xzr, x25, eq  // eq = none
  421ed4:	add	x8, x8, #0xb8c
  421ed8:	add	x2, x2, #0x8d5
  421edc:	add	x4, x4, #0xb2c
  421ee0:	mov	w0, #0x7                   	// #7
  421ee4:	mov	w3, #0x114                 	// #276
  421ee8:	mov	w1, wzr
  421eec:	mov	x7, xzr
  421ef0:	str	w26, [sp, #16]
  421ef4:	stp	xzr, x8, [sp]
  421ef8:	bl	40a730 <log_object_internal@plt>
  421efc:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  421f00:	adrp	x3, 437000 <worker_hash_op+0x2df8>
  421f04:	and	w1, w20, #0x1
  421f08:	add	x2, x2, #0x98a
  421f0c:	add	x3, x3, #0xbc
  421f10:	mov	x0, x19
  421f14:	bl	420aec <udev_builtin_add_property>
  421f18:	mov	w8, #0x1                   	// #1
  421f1c:	mvn	w9, w24
  421f20:	tst	x9, #0xfffffffe
  421f24:	b.ne	421f34 <builtin_input_id+0x7f4>  // b.any
  421f28:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  421f2c:	add	x2, x2, #0xbb1
  421f30:	b	421f54 <builtin_input_id+0x814>
  421f34:	mov	w9, #0x140                 	// #320
  421f38:	tst	x22, x9
  421f3c:	b.eq	421f68 <builtin_input_id+0x828>  // b.none
  421f40:	tbz	w21, #2, 421f68 <builtin_input_id+0x828>
  421f44:	orr	w8, w23, w8
  421f48:	tbnz	w8, #0, 421f68 <builtin_input_id+0x828>
  421f4c:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  421f50:	add	x2, x2, #0x98a
  421f54:	adrp	x3, 437000 <worker_hash_op+0x2df8>
  421f58:	and	w1, w20, #0x1
  421f5c:	add	x3, x3, #0xbc
  421f60:	mov	x0, x19
  421f64:	bl	420aec <udev_builtin_add_property>
  421f68:	tbz	w21, #5, 421f88 <builtin_input_id+0x848>
  421f6c:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  421f70:	adrp	x3, 437000 <worker_hash_op+0x2df8>
  421f74:	and	w1, w20, #0x1
  421f78:	add	x2, x2, #0x997
  421f7c:	add	x3, x3, #0xbc
  421f80:	mov	x0, x19
  421f84:	bl	420aec <udev_builtin_add_property>
  421f88:	add	x1, sp, #0x28
  421f8c:	mov	x0, x19
  421f90:	bl	40a840 <sd_device_get_devname@plt>
  421f94:	tbnz	w0, #31, 4220c0 <builtin_input_id+0x980>
  421f98:	add	x1, sp, #0x30
  421f9c:	mov	x0, x19
  421fa0:	bl	40a780 <sd_device_get_sysname@plt>
  421fa4:	tbnz	w0, #31, 4220c0 <builtin_input_id+0x980>
  421fa8:	ldr	x0, [sp, #48]
  421fac:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  421fb0:	add	x1, x1, #0x1bf
  421fb4:	mov	w2, #0x5                   	// #5
  421fb8:	bl	40a6a0 <strncmp@plt>
  421fbc:	cbnz	w0, 4220c0 <builtin_input_id+0x980>
  421fc0:	ldr	x0, [sp, #40]
  421fc4:	mov	w1, #0x80000               	// #524288
  421fc8:	stp	xzr, xzr, [x29, #-56]
  421fcc:	stur	xzr, [x29, #-40]
  421fd0:	stp	xzr, xzr, [x29, #-80]
  421fd4:	stur	xzr, [x29, #-64]
  421fd8:	bl	40a890 <open64@plt>
  421fdc:	mov	w21, w0
  421fe0:	tbnz	w0, #31, 4220b8 <builtin_input_id+0x978>
  421fe4:	mov	w1, #0x4540                	// #17728
  421fe8:	mov	w22, #0x4540                	// #17728
  421fec:	sub	x2, x29, #0x38
  421ff0:	movk	w1, #0x8018, lsl #16
  421ff4:	mov	w0, w21
  421ff8:	movk	w22, #0x8018, lsl #16
  421ffc:	bl	40a8b0 <ioctl@plt>
  422000:	tbnz	w0, #31, 4220b8 <builtin_input_id+0x978>
  422004:	add	x1, x22, #0x1
  422008:	sub	x2, x29, #0x50
  42200c:	mov	w0, w21
  422010:	bl	40a8b0 <ioctl@plt>
  422014:	tbnz	w0, #31, 4220b8 <builtin_input_id+0x978>
  422018:	ldur	w8, [x29, #-36]
  42201c:	cmp	w8, #0x1
  422020:	b.lt	4220b8 <builtin_input_id+0x978>  // b.tstop
  422024:	ldur	w9, [x29, #-60]
  422028:	cmp	w9, #0x1
  42202c:	b.lt	4220b8 <builtin_input_id+0x978>  // b.tstop
  422030:	ldp	w9, w10, [x29, #-52]
  422034:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  422038:	add	x2, x2, #0xbc3
  42203c:	sub	x0, x29, #0x14
  422040:	sub	w9, w10, w9
  422044:	sdiv	w3, w9, w8
  422048:	mov	w1, #0xc                   	// #12
  42204c:	bl	40b050 <snprintf@plt>
  422050:	cmp	w0, #0xc
  422054:	b.cs	4221cc <builtin_input_id+0xa8c>  // b.hs, b.nlast
  422058:	ldp	w8, w9, [x29, #-76]
  42205c:	ldur	w10, [x29, #-60]
  422060:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  422064:	add	x2, x2, #0xbc3
  422068:	sub	w8, w9, w8
  42206c:	sdiv	w3, w8, w10
  422070:	sub	x0, x29, #0x20
  422074:	mov	w1, #0xc                   	// #12
  422078:	bl	40b050 <snprintf@plt>
  42207c:	cmp	w0, #0xc
  422080:	b.cs	4221f0 <builtin_input_id+0xab0>  // b.hs, b.nlast
  422084:	and	w20, w20, #0x1
  422088:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  42208c:	add	x2, x2, #0xc45
  422090:	sub	x3, x29, #0x14
  422094:	mov	x0, x19
  422098:	mov	w1, w20
  42209c:	bl	420aec <udev_builtin_add_property>
  4220a0:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  4220a4:	add	x2, x2, #0xc57
  4220a8:	sub	x3, x29, #0x20
  4220ac:	mov	x0, x19
  4220b0:	mov	w1, w20
  4220b4:	bl	420aec <udev_builtin_add_property>
  4220b8:	mov	w0, w21
  4220bc:	bl	40a660 <safe_close@plt>
  4220c0:	ldp	x20, x19, [sp, #352]
  4220c4:	ldp	x22, x21, [sp, #336]
  4220c8:	ldp	x24, x23, [sp, #320]
  4220cc:	ldp	x26, x25, [sp, #304]
  4220d0:	ldp	x28, x27, [sp, #288]
  4220d4:	ldp	x29, x30, [sp, #272]
  4220d8:	mov	w0, wzr
  4220dc:	add	sp, sp, #0x170
  4220e0:	ret
  4220e4:	cbz	x9, 4220fc <builtin_input_id+0x9bc>
  4220e8:	mov	w26, wzr
  4220ec:	mov	w25, wzr
  4220f0:	mov	w24, wzr
  4220f4:	mov	w15, #0x1                   	// #1
  4220f8:	b	421a54 <builtin_input_id+0x314>
  4220fc:	orr	x1, x17, x12
  422100:	cmp	x1, #0x0
  422104:	cset	w1, eq  // eq = none
  422108:	mov	w15, wzr
  42210c:	mov	w26, wzr
  422110:	cset	w25, ne  // ne = any
  422114:	and	w24, w24, w1
  422118:	b	421a54 <builtin_input_id+0x314>
  42211c:	sub	x1, x29, #0x38
  422120:	mov	x0, x19
  422124:	bl	40a780 <sd_device_get_sysname@plt>
  422128:	ldur	x6, [x29, #-56]
  42212c:	b	421ba0 <builtin_input_id+0x460>
  422130:	sub	x1, x29, #0x38
  422134:	mov	x0, x19
  422138:	bl	40a780 <sd_device_get_sysname@plt>
  42213c:	ldur	x6, [x29, #-56]
  422140:	b	421c10 <builtin_input_id+0x4d0>
  422144:	sub	x1, x29, #0x38
  422148:	mov	x0, x19
  42214c:	bl	40a780 <sd_device_get_sysname@plt>
  422150:	ldur	x6, [x29, #-56]
  422154:	b	421c74 <builtin_input_id+0x534>
  422158:	sub	x1, x29, #0x38
  42215c:	mov	x0, x19
  422160:	bl	40a780 <sd_device_get_sysname@plt>
  422164:	ldur	x6, [x29, #-56]
  422168:	b	421cd8 <builtin_input_id+0x598>
  42216c:	sub	x1, x29, #0x38
  422170:	mov	x0, x19
  422174:	bl	40a780 <sd_device_get_sysname@plt>
  422178:	ldur	x6, [x29, #-56]
  42217c:	b	421dd8 <builtin_input_id+0x698>
  422180:	sub	x1, x29, #0x38
  422184:	mov	x0, x19
  422188:	bl	40a780 <sd_device_get_sysname@plt>
  42218c:	ldur	x6, [x29, #-56]
  422190:	b	421e38 <builtin_input_id+0x6f8>
  422194:	sub	x1, x29, #0x38
  422198:	mov	x0, x19
  42219c:	bl	40a780 <sd_device_get_sysname@plt>
  4221a0:	ldur	x6, [x29, #-56]
  4221a4:	b	421ec0 <builtin_input_id+0x780>
  4221a8:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  4221ac:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  4221b0:	adrp	x4, 439000 <worker_hash_op+0x4df8>
  4221b4:	add	x1, x1, #0x4f0
  4221b8:	add	x2, x2, #0x8d5
  4221bc:	add	x4, x4, #0x8f6
  4221c0:	mov	w0, #0x1                   	// #1
  4221c4:	mov	w3, #0x137                 	// #311
  4221c8:	bl	40a630 <log_assert_failed_realm@plt>
  4221cc:	adrp	x1, 439000 <worker_hash_op+0x4df8>
  4221d0:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  4221d4:	adrp	x4, 439000 <worker_hash_op+0x4df8>
  4221d8:	add	x1, x1, #0xbc6
  4221dc:	add	x2, x2, #0x8d5
  4221e0:	add	x4, x4, #0xbeb
  4221e4:	mov	w0, #0x1                   	// #1
  4221e8:	mov	w3, #0x40                  	// #64
  4221ec:	bl	40a630 <log_assert_failed_realm@plt>
  4221f0:	adrp	x1, 439000 <worker_hash_op+0x4df8>
  4221f4:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  4221f8:	adrp	x4, 439000 <worker_hash_op+0x4df8>
  4221fc:	add	x1, x1, #0xc1f
  422200:	add	x2, x2, #0x8d5
  422204:	add	x4, x4, #0xbeb
  422208:	mov	w0, #0x1                   	// #1
  42220c:	mov	w3, #0x41                  	// #65
  422210:	bl	40a630 <log_assert_failed_realm@plt>

0000000000422214 <get_cap_mask>:
  422214:	stp	x29, x30, [sp, #-96]!
  422218:	stp	x28, x27, [sp, #16]
  42221c:	stp	x26, x25, [sp, #32]
  422220:	stp	x24, x23, [sp, #48]
  422224:	stp	x22, x21, [sp, #64]
  422228:	stp	x20, x19, [sp, #80]
  42222c:	mov	x29, sp
  422230:	sub	sp, sp, #0x1, lsl #12
  422234:	sub	sp, sp, #0x50
  422238:	mov	x19, x2
  42223c:	sub	x2, x29, #0x10
  422240:	mov	w22, w4
  422244:	mov	x24, x3
  422248:	mov	x21, x1
  42224c:	mov	x20, x0
  422250:	bl	40ace0 <sd_device_get_sysattr_value@plt>
  422254:	tbnz	w0, #31, 422260 <get_cap_mask+0x4c>
  422258:	ldur	x3, [x29, #-16]
  42225c:	b	42226c <get_cap_mask+0x58>
  422260:	adrp	x3, 438000 <worker_hash_op+0x3df8>
  422264:	add	x3, x3, #0xed8
  422268:	stur	x3, [x29, #-16]
  42226c:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  422270:	add	x2, x2, #0x9a7
  422274:	add	x0, sp, #0x40
  422278:	mov	w1, #0x1000                	// #4096
  42227c:	bl	40b050 <snprintf@plt>
  422280:	cmp	w0, #0x1, lsl #12
  422284:	b.cs	4226d8 <get_cap_mask+0x4c4>  // b.hs, b.nlast
  422288:	str	xzr, [sp, #56]
  42228c:	str	w22, [sp, #44]
  422290:	cbz	x20, 4222a4 <get_cap_mask+0x90>
  422294:	mov	w0, #0x1                   	// #1
  422298:	bl	40a2c0 <log_get_max_level_realm@plt>
  42229c:	cmp	w0, #0x7
  4222a0:	b.ge	42269c <get_cap_mask+0x488>  // b.tcont
  4222a4:	mov	x6, xzr
  4222a8:	adrp	x27, 435000 <worker_hash_op+0xdf8>
  4222ac:	add	x27, x27, #0x7f
  4222b0:	cmp	x6, #0x0
  4222b4:	adrp	x9, 439000 <worker_hash_op+0x4df8>
  4222b8:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  4222bc:	adrp	x4, 439000 <worker_hash_op+0x4df8>
  4222c0:	csel	x5, xzr, x27, eq  // eq = none
  4222c4:	add	x8, sp, #0x40
  4222c8:	add	x9, x9, #0xa28
  4222cc:	add	x2, x2, #0x8d5
  4222d0:	add	x4, x4, #0xa1b
  4222d4:	mov	w0, #0x7                   	// #7
  4222d8:	mov	w3, #0x5a                  	// #90
  4222dc:	mov	w1, wzr
  4222e0:	mov	x7, xzr
  4222e4:	stp	x21, x8, [sp, #16]
  4222e8:	stp	xzr, x9, [sp]
  4222ec:	bl	40a730 <log_object_internal@plt>
  4222f0:	mov	x0, x19
  4222f4:	mov	w1, wzr
  4222f8:	mov	x2, x24
  4222fc:	bl	40b300 <memset@plt>
  422300:	add	x0, sp, #0x40
  422304:	mov	w1, #0x20                  	// #32
  422308:	bl	40b540 <strrchr@plt>
  42230c:	lsr	x28, x24, #3
  422310:	str	x20, [sp, #48]
  422314:	cbz	x0, 42244c <get_cap_mask+0x238>
  422318:	adrp	x22, 439000 <worker_hash_op+0x4df8>
  42231c:	adrp	x24, 439000 <worker_hash_op+0x4df8>
  422320:	adrp	x25, 439000 <worker_hash_op+0x4df8>
  422324:	mov	x23, x0
  422328:	mov	w26, wzr
  42232c:	add	x22, x22, #0xa44
  422330:	add	x24, x24, #0x8d5
  422334:	add	x25, x25, #0xa1b
  422338:	cbnz	x20, 422360 <get_cap_mask+0x14c>
  42233c:	b	422428 <get_cap_mask+0x214>
  422340:	str	x26, [x19, x20, lsl #3]
  422344:	add	x0, sp, #0x40
  422348:	mov	w1, #0x20                  	// #32
  42234c:	strb	wzr, [x23]
  422350:	add	w26, w20, #0x1
  422354:	bl	40b540 <strrchr@plt>
  422358:	mov	x23, x0
  42235c:	cbz	x0, 422450 <get_cap_mask+0x23c>
  422360:	add	x0, x23, #0x1
  422364:	mov	w2, #0x10                  	// #16
  422368:	mov	x1, xzr
  42236c:	bl	40b550 <strtoul@plt>
  422370:	mov	w20, w26
  422374:	cmp	x28, x20
  422378:	mov	x26, x0
  42237c:	b.hi	422340 <get_cap_mask+0x12c>  // b.pmore
  422380:	mov	w0, #0x1                   	// #1
  422384:	str	xzr, [sp, #56]
  422388:	bl	40a2c0 <log_get_max_level_realm@plt>
  42238c:	cmp	w0, #0x7
  422390:	mov	x6, xzr
  422394:	b.ge	4223c8 <get_cap_mask+0x1b4>  // b.tcont
  422398:	cmp	x6, #0x0
  42239c:	csel	x5, xzr, x27, eq  // eq = none
  4223a0:	mov	w0, #0x7                   	// #7
  4223a4:	mov	w3, #0x63                  	// #99
  4223a8:	mov	w1, wzr
  4223ac:	mov	x2, x24
  4223b0:	mov	x4, x25
  4223b4:	mov	x7, xzr
  4223b8:	stp	x21, x26, [sp, #16]
  4223bc:	stp	xzr, x22, [sp]
  4223c0:	bl	40a730 <log_object_internal@plt>
  4223c4:	b	422344 <get_cap_mask+0x130>
  4223c8:	ldr	x0, [sp, #48]
  4223cc:	add	x1, sp, #0x38
  4223d0:	bl	40a780 <sd_device_get_sysname@plt>
  4223d4:	ldr	x6, [sp, #56]
  4223d8:	b	422398 <get_cap_mask+0x184>
  4223dc:	stp	x21, x0, [sp, #16]
  4223e0:	mov	w0, #0x7                   	// #7
  4223e4:	mov	w3, #0x63                  	// #99
  4223e8:	mov	w1, wzr
  4223ec:	mov	x2, x24
  4223f0:	mov	x4, x25
  4223f4:	mov	x5, xzr
  4223f8:	mov	x6, xzr
  4223fc:	mov	x7, xzr
  422400:	str	xzr, [sp, #56]
  422404:	stp	xzr, x22, [sp]
  422408:	bl	40a730 <log_object_internal@plt>
  42240c:	add	x0, sp, #0x40
  422410:	mov	w1, #0x20                  	// #32
  422414:	strb	wzr, [x23]
  422418:	add	w26, w20, #0x1
  42241c:	bl	40b540 <strrchr@plt>
  422420:	mov	x23, x0
  422424:	cbz	x0, 422450 <get_cap_mask+0x23c>
  422428:	add	x0, x23, #0x1
  42242c:	mov	w2, #0x10                  	// #16
  422430:	mov	x1, xzr
  422434:	bl	40b550 <strtoul@plt>
  422438:	mov	w20, w26
  42243c:	cmp	x28, x20
  422440:	b.ls	4223dc <get_cap_mask+0x1c8>  // b.plast
  422444:	str	x0, [x19, x20, lsl #3]
  422448:	b	42240c <get_cap_mask+0x1f8>
  42244c:	mov	w26, wzr
  422450:	add	x0, sp, #0x40
  422454:	mov	w2, #0x10                  	// #16
  422458:	mov	x1, xzr
  42245c:	bl	40b550 <strtoul@plt>
  422460:	mov	w8, w26
  422464:	cmp	x28, x8
  422468:	mov	x23, x0
  42246c:	b.ls	422484 <get_cap_mask+0x270>  // b.plast
  422470:	ldr	x26, [sp, #48]
  422474:	ldr	w20, [sp, #44]
  422478:	str	x23, [x19, x8, lsl #3]
  42247c:	tbnz	w20, #0, 4224e8 <get_cap_mask+0x2d4>
  422480:	b	422678 <get_cap_mask+0x464>
  422484:	ldr	x26, [sp, #48]
  422488:	ldr	w20, [sp, #44]
  42248c:	str	xzr, [sp, #56]
  422490:	cbz	x26, 4224a4 <get_cap_mask+0x290>
  422494:	mov	w0, #0x1                   	// #1
  422498:	bl	40a2c0 <log_get_max_level_realm@plt>
  42249c:	cmp	w0, #0x7
  4224a0:	b.ge	4226b0 <get_cap_mask+0x49c>  // b.tcont
  4224a4:	mov	x6, xzr
  4224a8:	cmp	x6, #0x0
  4224ac:	adrp	x8, 439000 <worker_hash_op+0x4df8>
  4224b0:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  4224b4:	adrp	x4, 439000 <worker_hash_op+0x4df8>
  4224b8:	csel	x5, xzr, x27, eq  // eq = none
  4224bc:	add	x8, x8, #0xa44
  4224c0:	add	x2, x2, #0x8d5
  4224c4:	add	x4, x4, #0xa1b
  4224c8:	mov	w0, #0x7                   	// #7
  4224cc:	mov	w3, #0x6b                  	// #107
  4224d0:	mov	w1, wzr
  4224d4:	mov	x7, xzr
  4224d8:	stp	x21, x23, [sp, #16]
  4224dc:	stp	xzr, x8, [sp]
  4224e0:	bl	40a730 <log_object_internal@plt>
  4224e4:	tbz	w20, #0, 422678 <get_cap_mask+0x464>
  4224e8:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  4224ec:	add	x2, x2, #0xa7c
  4224f0:	add	x0, sp, #0x40
  4224f4:	mov	w1, #0x1000                	// #4096
  4224f8:	mov	w3, #0x10                  	// #16
  4224fc:	bl	40b050 <snprintf@plt>
  422500:	cmp	w0, #0x1, lsl #12
  422504:	b.cs	4226fc <get_cap_mask+0x4e8>  // b.hs, b.nlast
  422508:	str	xzr, [sp, #56]
  42250c:	cbz	x26, 422520 <get_cap_mask+0x30c>
  422510:	mov	w0, #0x1                   	// #1
  422514:	bl	40a2c0 <log_get_max_level_realm@plt>
  422518:	cmp	w0, #0x7
  42251c:	b.ge	4226c4 <get_cap_mask+0x4b0>  // b.tcont
  422520:	mov	x6, xzr
  422524:	cmp	x6, #0x0
  422528:	adrp	x8, 439000 <worker_hash_op+0x4df8>
  42252c:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  422530:	adrp	x4, 439000 <worker_hash_op+0x4df8>
  422534:	csel	x5, xzr, x27, eq  // eq = none
  422538:	add	x8, x8, #0xa92
  42253c:	add	x2, x2, #0x8d5
  422540:	add	x4, x4, #0xa1b
  422544:	mov	w0, #0x7                   	// #7
  422548:	mov	w3, #0x71                  	// #113
  42254c:	mov	w1, wzr
  422550:	mov	x7, xzr
  422554:	stp	x8, x21, [sp, #8]
  422558:	str	xzr, [sp]
  42255c:	bl	40a730 <log_object_internal@plt>
  422560:	sub	x8, x19, #0x8
  422564:	subs	x9, x28, #0x1
  422568:	b.cc	422578 <get_cap_mask+0x364>  // b.lo, b.ul, b.last
  42256c:	ldr	x10, [x8, x28, lsl #3]
  422570:	mov	x28, x9
  422574:	cbz	x10, 422564 <get_cap_mask+0x350>
  422578:	adds	x23, x9, #0x1
  42257c:	b.cs	422678 <get_cap_mask+0x464>  // b.hs, b.nlast
  422580:	cbz	x26, 422614 <get_cap_mask+0x400>
  422584:	adrp	x21, 439000 <worker_hash_op+0x4df8>
  422588:	adrp	x22, 439000 <worker_hash_op+0x4df8>
  42258c:	mov	x20, xzr
  422590:	mov	w24, #0x1                   	// #1
  422594:	add	x25, sp, #0x40
  422598:	add	x21, x21, #0x8d5
  42259c:	add	x22, x22, #0xa1b
  4225a0:	mov	w0, #0x1                   	// #1
  4225a4:	str	xzr, [sp, #56]
  4225a8:	bl	40a2c0 <log_get_max_level_realm@plt>
  4225ac:	cmp	w0, #0x7
  4225b0:	mov	x6, xzr
  4225b4:	b.ge	422600 <get_cap_mask+0x3ec>  // b.tcont
  4225b8:	ldr	x8, [x19, x20, lsl #3]
  4225bc:	cmp	x6, #0x0
  4225c0:	csel	x5, xzr, x27, eq  // eq = none
  4225c4:	lsl	x9, x20, #6
  4225c8:	mov	w0, #0x7                   	// #7
  4225cc:	mov	w3, #0x78                  	// #120
  4225d0:	mov	w1, wzr
  4225d4:	mov	x2, x21
  4225d8:	mov	x4, x22
  4225dc:	mov	x7, xzr
  4225e0:	stp	x9, x8, [sp, #16]
  4225e4:	stp	xzr, x25, [sp]
  4225e8:	bl	40a730 <log_object_internal@plt>
  4225ec:	mov	w20, w24
  4225f0:	cmp	x23, x20
  4225f4:	add	w24, w24, #0x1
  4225f8:	b.hi	4225a0 <get_cap_mask+0x38c>  // b.pmore
  4225fc:	b	422678 <get_cap_mask+0x464>
  422600:	add	x1, sp, #0x38
  422604:	mov	x0, x26
  422608:	bl	40a780 <sd_device_get_sysname@plt>
  42260c:	ldr	x6, [sp, #56]
  422610:	b	4225b8 <get_cap_mask+0x3a4>
  422614:	adrp	x20, 439000 <worker_hash_op+0x4df8>
  422618:	adrp	x21, 439000 <worker_hash_op+0x4df8>
  42261c:	mov	x8, xzr
  422620:	mov	w22, #0x1                   	// #1
  422624:	add	x24, sp, #0x40
  422628:	add	x20, x20, #0x8d5
  42262c:	add	x21, x21, #0xa1b
  422630:	str	xzr, [sp, #56]
  422634:	ldr	x9, [x19, x8, lsl #3]
  422638:	lsl	x8, x8, #6
  42263c:	mov	w0, #0x7                   	// #7
  422640:	mov	w3, #0x78                  	// #120
  422644:	mov	w1, wzr
  422648:	mov	x2, x20
  42264c:	mov	x4, x21
  422650:	mov	x5, xzr
  422654:	mov	x6, xzr
  422658:	mov	x7, xzr
  42265c:	stp	x8, x9, [sp, #16]
  422660:	stp	xzr, x24, [sp]
  422664:	bl	40a730 <log_object_internal@plt>
  422668:	mov	w8, w22
  42266c:	cmp	x23, x8
  422670:	add	w22, w22, #0x1
  422674:	b.hi	422630 <get_cap_mask+0x41c>  // b.pmore
  422678:	add	sp, sp, #0x1, lsl #12
  42267c:	add	sp, sp, #0x50
  422680:	ldp	x20, x19, [sp, #80]
  422684:	ldp	x22, x21, [sp, #64]
  422688:	ldp	x24, x23, [sp, #48]
  42268c:	ldp	x26, x25, [sp, #32]
  422690:	ldp	x28, x27, [sp, #16]
  422694:	ldp	x29, x30, [sp], #96
  422698:	ret
  42269c:	add	x1, sp, #0x38
  4226a0:	mov	x0, x20
  4226a4:	bl	40a780 <sd_device_get_sysname@plt>
  4226a8:	ldr	x6, [sp, #56]
  4226ac:	b	4222a8 <get_cap_mask+0x94>
  4226b0:	add	x1, sp, #0x38
  4226b4:	mov	x0, x26
  4226b8:	bl	40a780 <sd_device_get_sysname@plt>
  4226bc:	ldr	x6, [sp, #56]
  4226c0:	b	4224a8 <get_cap_mask+0x294>
  4226c4:	add	x1, sp, #0x38
  4226c8:	mov	x0, x26
  4226cc:	bl	40a780 <sd_device_get_sysname@plt>
  4226d0:	ldr	x6, [sp, #56]
  4226d4:	b	422524 <get_cap_mask+0x310>
  4226d8:	adrp	x1, 439000 <worker_hash_op+0x4df8>
  4226dc:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  4226e0:	adrp	x4, 439000 <worker_hash_op+0x4df8>
  4226e4:	add	x1, x1, #0x9aa
  4226e8:	add	x2, x2, #0x8d5
  4226ec:	add	x4, x4, #0x9ce
  4226f0:	mov	w0, #0x1                   	// #1
  4226f4:	mov	w3, #0x59                  	// #89
  4226f8:	bl	40a630 <log_assert_failed_realm@plt>
  4226fc:	adrp	x1, 439000 <worker_hash_op+0x4df8>
  422700:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  422704:	adrp	x4, 439000 <worker_hash_op+0x4df8>
  422708:	add	x1, x1, #0x9aa
  42270c:	add	x2, x2, #0x8d5
  422710:	add	x4, x4, #0x9ce
  422714:	mov	w0, #0x1                   	// #1
  422718:	mov	w3, #0x70                  	// #112
  42271c:	bl	40a630 <log_assert_failed_realm@plt>

0000000000422720 <builtin_keyboard>:
  422720:	stp	x29, x30, [sp, #-96]!
  422724:	stp	x28, x27, [sp, #16]
  422728:	stp	x26, x25, [sp, #32]
  42272c:	stp	x24, x23, [sp, #48]
  422730:	stp	x22, x21, [sp, #64]
  422734:	stp	x20, x19, [sp, #80]
  422738:	mov	x29, sp
  42273c:	sub	sp, sp, #0x2, lsl #12
  422740:	sub	sp, sp, #0x80
  422744:	add	x1, sp, #0x50
  422748:	mov	x20, x0
  42274c:	bl	40a840 <sd_device_get_devname@plt>
  422750:	tbnz	w0, #31, 423264 <builtin_keyboard+0xb44>
  422754:	add	x1, sp, #0x48
  422758:	mov	x0, x20
  42275c:	bl	40b350 <sd_device_get_property_first@plt>
  422760:	cbz	x0, 423434 <builtin_keyboard+0xd14>
  422764:	adrp	x21, 439000 <worker_hash_op+0x4df8>
  422768:	adrp	x24, 435000 <worker_hash_op+0xdf8>
  42276c:	adrp	x22, 439000 <worker_hash_op+0x4df8>
  422770:	adrp	x25, 439000 <worker_hash_op+0x4df8>
  422774:	mov	x28, x0
  422778:	mov	w27, wzr
  42277c:	mov	w8, #0xffffffff            	// #-1
  422780:	add	x21, x21, #0xcca
  422784:	add	x24, x24, #0x7f
  422788:	add	x22, x22, #0xc98
  42278c:	add	x25, x25, #0xd25
  422790:	mov	w19, #0xffffffff            	// #-1
  422794:	str	x8, [sp, #64]
  422798:	b	4227ec <builtin_keyboard+0xcc>
  42279c:	mov	x6, xzr
  4227a0:	cmp	x6, #0x0
  4227a4:	adrp	x8, 439000 <worker_hash_op+0x4df8>
  4227a8:	csel	x5, xzr, x24, eq  // eq = none
  4227ac:	add	x8, x8, #0xcd8
  4227b0:	mov	w0, #0x4                   	// #4
  4227b4:	mov	w3, #0xb9                  	// #185
  4227b8:	stp	x8, x28, [sp, #8]
  4227bc:	adrp	x4, 439000 <worker_hash_op+0x4df8>
  4227c0:	str	xzr, [sp]
  4227c4:	mov	w1, wzr
  4227c8:	mov	x2, x22
  4227cc:	add	x4, x4, #0xcb9
  4227d0:	mov	x7, xzr
  4227d4:	bl	40a730 <log_object_internal@plt>
  4227d8:	add	x1, sp, #0x48
  4227dc:	mov	x0, x20
  4227e0:	bl	40b360 <sd_device_get_property_next@plt>
  4227e4:	mov	x28, x0
  4227e8:	cbz	x0, 4232d0 <builtin_keyboard+0xbb0>
  4227ec:	mov	w2, #0xd                   	// #13
  4227f0:	mov	x0, x28
  4227f4:	mov	x1, x21
  4227f8:	bl	40a6a0 <strncmp@plt>
  4227fc:	cbz	w0, 4228c0 <builtin_keyboard+0x1a0>
  422800:	mov	w2, #0xa                   	// #10
  422804:	mov	x0, x28
  422808:	mov	x1, x25
  42280c:	bl	40a6a0 <strncmp@plt>
  422810:	cbz	w0, 422914 <builtin_keyboard+0x1f4>
  422814:	adrp	x1, 439000 <worker_hash_op+0x4df8>
  422818:	mov	x0, x28
  42281c:	add	x1, x1, #0xdaf
  422820:	bl	40a930 <strcmp@plt>
  422824:	cbnz	w0, 4227d8 <builtin_keyboard+0xb8>
  422828:	cbz	x20, 423700 <builtin_keyboard+0xfe0>
  42282c:	ldr	x23, [sp, #72]
  422830:	cbz	x23, 423724 <builtin_keyboard+0x1004>
  422834:	adrp	x1, 43c000 <worker_hash_op+0x7df8>
  422838:	sub	x3, x29, #0x10
  42283c:	mov	x0, x20
  422840:	add	x1, x1, #0xabe
  422844:	mov	x2, xzr
  422848:	bl	40b530 <sd_device_get_parent_with_subsystem_devtype@plt>
  42284c:	tbnz	w0, #31, 422ce0 <builtin_keyboard+0x5c0>
  422850:	add	x1, sp, #0x1, lsl #12
  422854:	add	x1, x1, #0x58
  422858:	mov	x0, x23
  42285c:	bl	40b220 <safe_atoi@plt>
  422860:	tbnz	w0, #31, 422d24 <builtin_keyboard+0x604>
  422864:	ldr	w23, [sp, #4184]
  422868:	cmp	w23, #0x100
  42286c:	b.cc	422db0 <builtin_keyboard+0x690>  // b.lo, b.ul, b.last
  422870:	mov	w0, #0x1                   	// #1
  422874:	str	xzr, [sp, #4200]
  422878:	bl	40a2c0 <log_get_max_level_realm@plt>
  42287c:	adrp	x24, 435000 <worker_hash_op+0xdf8>
  422880:	cmp	w0, #0x3
  422884:	mov	x6, xzr
  422888:	add	x24, x24, #0x7f
  42288c:	b.ge	4231a0 <builtin_keyboard+0xa80>  // b.tcont
  422890:	mov	w8, #0x16                  	// #22
  422894:	movk	w8, #0x4000, lsl #16
  422898:	add	w1, w8, #0xc
  42289c:	adrp	x8, 43c000 <worker_hash_op+0x7df8>
  4228a0:	cmp	x6, #0x0
  4228a4:	add	x8, x8, #0xb31
  4228a8:	csel	x5, xzr, x24, eq  // eq = none
  4228ac:	str	w23, [sp, #16]
  4228b0:	stp	xzr, x8, [sp]
  4228b4:	mov	w0, #0x3                   	// #3
  4228b8:	mov	w3, #0x99                  	// #153
  4228bc:	b	422d70 <builtin_keyboard+0x650>
  4228c0:	ldr	x26, [sp, #72]
  4228c4:	add	x1, sp, #0x1, lsl #12
  4228c8:	add	x0, x28, #0xd
  4228cc:	add	x1, x1, #0x60
  4228d0:	mov	w2, #0x10                  	// #16
  4228d4:	bl	40b550 <strtoul@plt>
  4228d8:	ldr	x8, [sp, #4192]
  4228dc:	ldrb	w8, [x8]
  4228e0:	cbz	w8, 422970 <builtin_keyboard+0x250>
  4228e4:	str	xzr, [sp, #4200]
  4228e8:	cbz	x20, 42279c <builtin_keyboard+0x7c>
  4228ec:	mov	w0, #0x1                   	// #1
  4228f0:	bl	40a2c0 <log_get_max_level_realm@plt>
  4228f4:	cmp	w0, #0x4
  4228f8:	b.lt	42279c <builtin_keyboard+0x7c>  // b.tstop
  4228fc:	add	x1, sp, #0x1, lsl #12
  422900:	add	x1, x1, #0x68
  422904:	mov	x0, x20
  422908:	bl	40a780 <sd_device_get_sysname@plt>
  42290c:	ldr	x6, [sp, #4200]
  422910:	b	4227a0 <builtin_keyboard+0x80>
  422914:	add	x1, sp, #0x1, lsl #12
  422918:	add	x0, x28, #0xa
  42291c:	add	x1, x1, #0x60
  422920:	mov	w2, #0x10                  	// #16
  422924:	bl	40b550 <strtoul@plt>
  422928:	ldr	x8, [sp, #4192]
  42292c:	ldrb	w8, [x8]
  422930:	cbz	w8, 4229f4 <builtin_keyboard+0x2d4>
  422934:	str	xzr, [sp, #4200]
  422938:	cbz	x20, 42294c <builtin_keyboard+0x22c>
  42293c:	mov	w0, #0x1                   	// #1
  422940:	bl	40a2c0 <log_get_max_level_realm@plt>
  422944:	cmp	w0, #0x4
  422948:	b.ge	423140 <builtin_keyboard+0xa20>  // b.tcont
  42294c:	mov	x6, xzr
  422950:	adrp	x8, 439000 <worker_hash_op+0x4df8>
  422954:	cmp	x6, #0x0
  422958:	add	x8, x8, #0xd30
  42295c:	csel	x5, xzr, x24, eq  // eq = none
  422960:	stp	x8, x28, [sp, #8]
  422964:	mov	w0, #0x4                   	// #4
  422968:	mov	w3, #0xd6                  	// #214
  42296c:	b	4227bc <builtin_keyboard+0x9c>
  422970:	ldrb	w8, [x26]
  422974:	mov	x23, x0
  422978:	cmp	w8, #0x21
  42297c:	b.ne	422998 <builtin_keyboard+0x278>  // b.any
  422980:	add	x8, sp, #0x58
  422984:	str	w23, [x8, w27, uxtw #2]
  422988:	ldrb	w8, [x26, #1]!
  42298c:	cmp	w27, #0x3ff
  422990:	cinc	w27, w27, cc  // cc = lo, ul, last
  422994:	cbz	w8, 4227d8 <builtin_keyboard+0xb8>
  422998:	tbz	w19, #31, 4229b4 <builtin_keyboard+0x294>
  42299c:	ldr	x0, [sp, #80]
  4229a0:	mov	w1, #0x902                 	// #2306
  4229a4:	movk	w1, #0x8, lsl #16
  4229a8:	bl	40a890 <open64@plt>
  4229ac:	mov	w19, w0
  4229b0:	tbnz	w0, #31, 423524 <builtin_keyboard+0xe04>
  4229b4:	mov	x0, x26
  4229b8:	bl	40aa40 <strlen@plt>
  4229bc:	sub	x8, x0, #0x1
  4229c0:	cmp	x8, #0x1b
  4229c4:	b.hi	422fa8 <builtin_keyboard+0x888>  // b.pmore
  4229c8:	sub	w9, w0, #0x1
  4229cc:	cmp	w9, #0x12
  4229d0:	b.hi	422ec4 <builtin_keyboard+0x7a4>  // b.pmore
  4229d4:	adrp	x12, 441000 <worker_hash_op+0xcdf8>
  4229d8:	add	x12, x12, #0xfe8
  4229dc:	adr	x10, 422ed8 <builtin_keyboard+0x7b8>
  4229e0:	ldrb	w11, [x12, x9]
  4229e4:	add	x10, x10, x11, lsl #2
  4229e8:	adrp	x11, 441000 <worker_hash_op+0xcdf8>
  4229ec:	add	x11, x11, #0xffc
  4229f0:	br	x10
  4229f4:	mov	x23, x0
  4229f8:	tbz	w19, #31, 422a14 <builtin_keyboard+0x2f4>
  4229fc:	ldr	x0, [sp, #80]
  422a00:	mov	w1, #0x902                 	// #2306
  422a04:	movk	w1, #0x8, lsl #16
  422a08:	bl	40a890 <open64@plt>
  422a0c:	mov	w19, w0
  422a10:	tbnz	w0, #31, 423580 <builtin_keyboard+0xe60>
  422a14:	ldr	x26, [sp, #64]
  422a18:	cmn	w26, #0x1
  422a1c:	b.ne	422a98 <builtin_keyboard+0x378>  // b.any
  422a20:	add	x2, sp, #0x1, lsl #12
  422a24:	mov	w1, #0x4520                	// #17696
  422a28:	add	x2, x2, #0x68
  422a2c:	movk	w1, #0x8008, lsl #16
  422a30:	mov	w0, w19
  422a34:	bl	40a8b0 <ioctl@plt>
  422a38:	tbnz	w0, #31, 4235dc <builtin_keyboard+0xebc>
  422a3c:	ldr	x8, [sp, #4200]
  422a40:	ubfx	x26, x8, #3, #1
  422a44:	tbnz	w8, #3, 422a98 <builtin_keyboard+0x378>
  422a48:	stur	xzr, [x29, #-16]
  422a4c:	cbz	x20, 422a60 <builtin_keyboard+0x340>
  422a50:	mov	w0, #0x1                   	// #1
  422a54:	bl	40a2c0 <log_get_max_level_realm@plt>
  422a58:	cmp	w0, #0x4
  422a5c:	b.ge	423228 <builtin_keyboard+0xb08>  // b.tcont
  422a60:	mov	x6, xzr
  422a64:	cmp	x6, #0x0
  422a68:	adrp	x8, 439000 <worker_hash_op+0x4df8>
  422a6c:	adrp	x4, 439000 <worker_hash_op+0x4df8>
  422a70:	csel	x5, xzr, x24, eq  // eq = none
  422a74:	add	x8, x8, #0xd78
  422a78:	mov	w0, #0x4                   	// #4
  422a7c:	mov	w3, #0xea                  	// #234
  422a80:	mov	w1, wzr
  422a84:	mov	x2, x22
  422a88:	add	x4, x4, #0xcb9
  422a8c:	mov	x7, xzr
  422a90:	stp	xzr, x8, [sp]
  422a94:	bl	40a730 <log_object_internal@plt>
  422a98:	cbz	w26, 422d80 <builtin_keyboard+0x660>
  422a9c:	str	x26, [sp, #64]
  422aa0:	ldr	x26, [sp, #72]
  422aa4:	add	w8, w23, #0x40
  422aa8:	mov	w9, #0x4500                	// #17664
  422aac:	and	x8, x8, #0xffffffff
  422ab0:	movk	w9, #0x8018, lsl #16
  422ab4:	add	x2, sp, #0x1, lsl #12
  422ab8:	orr	x1, x8, x9
  422abc:	add	x2, x2, #0x68
  422ac0:	mov	w0, w19
  422ac4:	bl	40a8b0 <ioctl@plt>
  422ac8:	tbnz	w0, #31, 422e38 <builtin_keyboard+0x718>
  422acc:	cbz	x26, 422d88 <builtin_keyboard+0x668>
  422ad0:	sub	x1, x29, #0x10
  422ad4:	mov	x0, x26
  422ad8:	mov	w2, wzr
  422adc:	bl	40b560 <strtol@plt>
  422ae0:	ldur	x28, [x29, #-16]
  422ae4:	ldrb	w8, [x28]
  422ae8:	cmp	w8, #0x3a
  422aec:	b.eq	422af4 <builtin_keyboard+0x3d4>  // b.none
  422af0:	cbnz	w8, 422d88 <builtin_keyboard+0x668>
  422af4:	cmp	x28, x26
  422af8:	b.eq	422b04 <builtin_keyboard+0x3e4>  // b.none
  422afc:	str	w0, [sp, #4204]
  422b00:	ldrb	w8, [x28]
  422b04:	cbz	w8, 422b0c <builtin_keyboard+0x3ec>
  422b08:	add	x28, x28, #0x1
  422b0c:	sub	x1, x29, #0x10
  422b10:	mov	x0, x28
  422b14:	mov	w2, wzr
  422b18:	bl	40b560 <strtol@plt>
  422b1c:	ldur	x24, [x29, #-16]
  422b20:	ldrb	w8, [x24]
  422b24:	cmp	w8, #0x3a
  422b28:	b.eq	422b30 <builtin_keyboard+0x410>  // b.none
  422b2c:	cbnz	w8, 422d88 <builtin_keyboard+0x668>
  422b30:	cmp	x24, x28
  422b34:	b.eq	422b40 <builtin_keyboard+0x420>  // b.none
  422b38:	str	w0, [sp, #4208]
  422b3c:	ldrb	w8, [x24]
  422b40:	cbz	w8, 422b48 <builtin_keyboard+0x428>
  422b44:	add	x24, x24, #0x1
  422b48:	sub	x1, x29, #0x10
  422b4c:	mov	x0, x24
  422b50:	mov	w2, wzr
  422b54:	bl	40b560 <strtol@plt>
  422b58:	ldur	x28, [x29, #-16]
  422b5c:	ldrb	w8, [x28]
  422b60:	cmp	w8, #0x3a
  422b64:	b.eq	422b6c <builtin_keyboard+0x44c>  // b.none
  422b68:	cbnz	w8, 422d88 <builtin_keyboard+0x668>
  422b6c:	cmp	x28, x24
  422b70:	b.eq	422b7c <builtin_keyboard+0x45c>  // b.none
  422b74:	str	w0, [sp, #4220]
  422b78:	ldrb	w8, [x28]
  422b7c:	cbz	w8, 422b84 <builtin_keyboard+0x464>
  422b80:	add	x28, x28, #0x1
  422b84:	sub	x1, x29, #0x10
  422b88:	mov	x0, x28
  422b8c:	mov	w2, wzr
  422b90:	bl	40b560 <strtol@plt>
  422b94:	ldur	x24, [x29, #-16]
  422b98:	ldrb	w8, [x24]
  422b9c:	cmp	w8, #0x3a
  422ba0:	b.eq	422ba8 <builtin_keyboard+0x488>  // b.none
  422ba4:	cbnz	w8, 422d88 <builtin_keyboard+0x668>
  422ba8:	cmp	x24, x28
  422bac:	b.eq	422bb8 <builtin_keyboard+0x498>  // b.none
  422bb0:	str	w0, [sp, #4212]
  422bb4:	ldrb	w8, [x24]
  422bb8:	cbz	w8, 422bc0 <builtin_keyboard+0x4a0>
  422bbc:	add	x24, x24, #0x1
  422bc0:	sub	x1, x29, #0x10
  422bc4:	mov	x0, x24
  422bc8:	mov	w2, wzr
  422bcc:	bl	40b560 <strtol@plt>
  422bd0:	ldur	x8, [x29, #-16]
  422bd4:	ldrb	w9, [x8]
  422bd8:	cmp	w9, #0x3a
  422bdc:	b.eq	422be4 <builtin_keyboard+0x4c4>  // b.none
  422be0:	cbnz	w9, 422d88 <builtin_keyboard+0x668>
  422be4:	cmp	x8, x24
  422be8:	b.eq	422bf0 <builtin_keyboard+0x4d0>  // b.none
  422bec:	str	w0, [sp, #4216]
  422bf0:	adrp	x24, 435000 <worker_hash_op+0xdf8>
  422bf4:	add	x24, x24, #0x7f
  422bf8:	stur	xzr, [x29, #-16]
  422bfc:	cbz	x20, 422c10 <builtin_keyboard+0x4f0>
  422c00:	mov	w0, #0x1                   	// #1
  422c04:	bl	40a2c0 <log_get_max_level_realm@plt>
  422c08:	cmp	w0, #0x7
  422c0c:	b.ge	42323c <builtin_keyboard+0xb1c>  // b.tcont
  422c10:	mov	x6, xzr
  422c14:	ldr	w8, [sp, #4204]
  422c18:	ldr	w9, [sp, #4208]
  422c1c:	ldr	w10, [sp, #4220]
  422c20:	ldr	w11, [sp, #4212]
  422c24:	ldr	w12, [sp, #4216]
  422c28:	cmp	x6, #0x0
  422c2c:	str	w8, [sp, #24]
  422c30:	adrp	x8, 43c000 <worker_hash_op+0x7df8>
  422c34:	adrp	x4, 43c000 <worker_hash_op+0x7df8>
  422c38:	csel	x5, xzr, x24, eq  // eq = none
  422c3c:	add	x8, x8, #0xa3f
  422c40:	mov	w0, #0x7                   	// #7
  422c44:	mov	w3, #0x80                  	// #128
  422c48:	mov	w1, wzr
  422c4c:	mov	x2, x22
  422c50:	add	x4, x4, #0x9f4
  422c54:	mov	x7, xzr
  422c58:	str	w12, [sp, #56]
  422c5c:	str	w11, [sp, #48]
  422c60:	str	w10, [sp, #40]
  422c64:	str	w9, [sp, #32]
  422c68:	str	w23, [sp, #16]
  422c6c:	stp	xzr, x8, [sp]
  422c70:	bl	40a730 <log_object_internal@plt>
  422c74:	add	w8, w23, #0xc0
  422c78:	mov	w9, #0x4500                	// #17664
  422c7c:	and	x8, x8, #0xffffffff
  422c80:	movk	w9, #0x4018, lsl #16
  422c84:	add	x2, sp, #0x1, lsl #12
  422c88:	orr	x1, x8, x9
  422c8c:	add	x2, x2, #0x68
  422c90:	mov	w0, w19
  422c94:	bl	40a8b0 <ioctl@plt>
  422c98:	tbz	w0, #31, 4227d8 <builtin_keyboard+0xb8>
  422c9c:	stur	xzr, [x29, #-16]
  422ca0:	bl	40a3e0 <__errno_location@plt>
  422ca4:	ldr	w23, [x0]
  422ca8:	cbz	x20, 422cbc <builtin_keyboard+0x59c>
  422cac:	mov	w0, #0x1                   	// #1
  422cb0:	bl	40a2c0 <log_get_max_level_realm@plt>
  422cb4:	cmp	w0, #0x3
  422cb8:	b.ge	423250 <builtin_keyboard+0xb30>  // b.tcont
  422cbc:	mov	x6, xzr
  422cc0:	cmp	x6, #0x0
  422cc4:	adrp	x8, 43c000 <worker_hash_op+0x7df8>
  422cc8:	csel	x5, xzr, x24, eq  // eq = none
  422ccc:	add	x8, x8, #0xa6b
  422cd0:	mov	w0, #0x3                   	// #3
  422cd4:	mov	w3, #0x83                  	// #131
  422cd8:	str	x8, [sp, #8]
  422cdc:	b	422e78 <builtin_keyboard+0x758>
  422ce0:	mov	w24, w0
  422ce4:	mov	w0, #0x1                   	// #1
  422ce8:	str	xzr, [sp, #4200]
  422cec:	bl	40a2c0 <log_get_max_level_realm@plt>
  422cf0:	cmp	w0, #0x3
  422cf4:	mov	x6, xzr
  422cf8:	b.ge	423158 <builtin_keyboard+0xa38>  // b.tcont
  422cfc:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  422d00:	cmp	x6, #0x0
  422d04:	add	x8, x8, #0x7f
  422d08:	adrp	x9, 43c000 <worker_hash_op+0x7df8>
  422d0c:	csel	x5, xzr, x8, eq  // eq = none
  422d10:	add	x9, x9, #0xadf
  422d14:	mov	w0, #0x3                   	// #3
  422d18:	mov	w3, #0x93                  	// #147
  422d1c:	str	x9, [sp, #8]
  422d20:	b	422d64 <builtin_keyboard+0x644>
  422d24:	mov	w24, w0
  422d28:	mov	w0, #0x1                   	// #1
  422d2c:	str	xzr, [sp, #4200]
  422d30:	bl	40a2c0 <log_get_max_level_realm@plt>
  422d34:	cmp	w0, #0x3
  422d38:	mov	x6, xzr
  422d3c:	b.ge	423188 <builtin_keyboard+0xa68>  // b.tcont
  422d40:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  422d44:	adrp	x9, 43c000 <worker_hash_op+0x7df8>
  422d48:	cmp	x6, #0x0
  422d4c:	add	x8, x8, #0x7f
  422d50:	add	x9, x9, #0xafe
  422d54:	csel	x5, xzr, x8, eq  // eq = none
  422d58:	stp	x9, x23, [sp, #8]
  422d5c:	mov	w0, #0x3                   	// #3
  422d60:	mov	w3, #0x97                  	// #151
  422d64:	str	xzr, [sp]
  422d68:	mov	w1, w24
  422d6c:	mov	x24, x8
  422d70:	adrp	x4, 43c000 <worker_hash_op+0x7df8>
  422d74:	mov	x2, x22
  422d78:	add	x4, x4, #0xac4
  422d7c:	b	4227d0 <builtin_keyboard+0xb0>
  422d80:	str	xzr, [sp, #64]
  422d84:	b	4227d8 <builtin_keyboard+0xb8>
  422d88:	stur	xzr, [x29, #-16]
  422d8c:	cbz	x20, 422e84 <builtin_keyboard+0x764>
  422d90:	mov	w0, #0x1                   	// #1
  422d94:	bl	40a2c0 <log_get_max_level_realm@plt>
  422d98:	adrp	x24, 435000 <worker_hash_op+0xdf8>
  422d9c:	cmp	w0, #0x3
  422da0:	add	x24, x24, #0x7f
  422da4:	b.ge	4231d8 <builtin_keyboard+0xab8>  // b.tcont
  422da8:	mov	x6, xzr
  422dac:	b	422e90 <builtin_keyboard+0x770>
  422db0:	add	x0, sp, #0x1, lsl #12
  422db4:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  422db8:	add	x0, x0, #0x68
  422dbc:	mov	w1, #0xc                   	// #12
  422dc0:	add	x2, x2, #0xbc3
  422dc4:	mov	w3, w23
  422dc8:	bl	40b050 <snprintf@plt>
  422dcc:	adrp	x24, 435000 <worker_hash_op+0xdf8>
  422dd0:	cmp	w0, #0xc
  422dd4:	add	x24, x24, #0x7f
  422dd8:	b.cs	423748 <builtin_keyboard+0x1028>  // b.hs, b.nlast
  422ddc:	ldur	x0, [x29, #-16]
  422de0:	add	x2, sp, #0x1, lsl #12
  422de4:	adrp	x1, 43c000 <worker_hash_op+0x7df8>
  422de8:	add	x2, x2, #0x68
  422dec:	add	x1, x1, #0xb8a
  422df0:	bl	40b570 <sd_device_set_sysattr_value@plt>
  422df4:	tbz	w0, #31, 4227d8 <builtin_keyboard+0xb8>
  422df8:	mov	w23, w0
  422dfc:	mov	w0, #0x1                   	// #1
  422e00:	stur	xzr, [x29, #-24]
  422e04:	bl	40a2c0 <log_get_max_level_realm@plt>
  422e08:	cmp	w0, #0x3
  422e0c:	mov	x6, xzr
  422e10:	b.ge	423200 <builtin_keyboard+0xae0>  // b.tcont
  422e14:	cmp	x6, #0x0
  422e18:	adrp	x8, 43c000 <worker_hash_op+0x7df8>
  422e1c:	csel	x5, xzr, x24, eq  // eq = none
  422e20:	add	x8, x8, #0xb96
  422e24:	mov	w0, #0x3                   	// #3
  422e28:	mov	w3, #0x9f                  	// #159
  422e2c:	mov	w1, w23
  422e30:	stp	xzr, x8, [sp]
  422e34:	b	422d70 <builtin_keyboard+0x650>
  422e38:	stur	xzr, [x29, #-16]
  422e3c:	bl	40a3e0 <__errno_location@plt>
  422e40:	ldr	w23, [x0]
  422e44:	cbz	x20, 422e58 <builtin_keyboard+0x738>
  422e48:	mov	w0, #0x1                   	// #1
  422e4c:	bl	40a2c0 <log_get_max_level_realm@plt>
  422e50:	cmp	w0, #0x3
  422e54:	b.ge	4231ec <builtin_keyboard+0xacc>  // b.tcont
  422e58:	mov	x6, xzr
  422e5c:	adrp	x8, 43c000 <worker_hash_op+0x7df8>
  422e60:	cmp	x6, #0x0
  422e64:	add	x8, x8, #0xa01
  422e68:	csel	x5, xzr, x24, eq  // eq = none
  422e6c:	str	x8, [sp, #8]
  422e70:	mov	w0, #0x3                   	// #3
  422e74:	mov	w3, #0x75                  	// #117
  422e78:	mov	w1, w23
  422e7c:	str	xzr, [sp]
  422e80:	b	422eb4 <builtin_keyboard+0x794>
  422e84:	adrp	x24, 435000 <worker_hash_op+0xdf8>
  422e88:	mov	x6, xzr
  422e8c:	add	x24, x24, #0x7f
  422e90:	adrp	x8, 43c000 <worker_hash_op+0x7df8>
  422e94:	cmp	x6, #0x0
  422e98:	add	x8, x8, #0xa1a
  422e9c:	csel	x5, xzr, x24, eq  // eq = none
  422ea0:	stp	x8, x26, [sp, #8]
  422ea4:	mov	w0, #0x3                   	// #3
  422ea8:	mov	w3, #0x7d                  	// #125
  422eac:	str	xzr, [sp]
  422eb0:	mov	w1, wzr
  422eb4:	adrp	x4, 43c000 <worker_hash_op+0x7df8>
  422eb8:	mov	x2, x22
  422ebc:	add	x4, x4, #0x9f4
  422ec0:	b	4227d0 <builtin_keyboard+0xb0>
  422ec4:	ldrb	w9, [x26, #19]
  422ec8:	adrp	x11, 441000 <worker_hash_op+0xcdf8>
  422ecc:	add	x11, x11, #0xffc
  422ed0:	ldrh	w9, [x11, x9, lsl #1]
  422ed4:	add	w0, w9, w0
  422ed8:	ldrb	w9, [x26, #17]
  422edc:	add	x9, x11, x9, lsl #1
  422ee0:	ldrh	w9, [x9, #16]
  422ee4:	add	w0, w0, w9
  422ee8:	ldrb	w9, [x26, #14]
  422eec:	ldrh	w9, [x11, x9, lsl #1]
  422ef0:	add	w0, w0, w9
  422ef4:	ldrb	w9, [x26, #11]
  422ef8:	ldrh	w9, [x11, x9, lsl #1]
  422efc:	add	w0, w0, w9
  422f00:	ldrb	w9, [x26, #9]
  422f04:	add	x9, x11, x9, lsl #1
  422f08:	ldrh	w9, [x9, #16]
  422f0c:	add	w0, w0, w9
  422f10:	ldrb	w9, [x26, #6]
  422f14:	ldrh	w9, [x11, x9, lsl #1]
  422f18:	add	w0, w0, w9
  422f1c:	ldrb	w9, [x26, #5]
  422f20:	add	x9, x11, x9, lsl #1
  422f24:	ldrh	w9, [x9, #2]
  422f28:	add	w0, w0, w9
  422f2c:	ldrb	w9, [x26, #4]
  422f30:	ldrh	w9, [x11, x9, lsl #1]
  422f34:	add	w0, w0, w9
  422f38:	ldrb	w9, [x26, #2]
  422f3c:	add	x9, x11, x9, lsl #1
  422f40:	ldrh	w9, [x9, #2]
  422f44:	add	w0, w0, w9
  422f48:	ldrb	w9, [x26, #1]
  422f4c:	ldrh	w9, [x11, x9, lsl #1]
  422f50:	add	w0, w0, w9
  422f54:	ldrb	w9, [x26]
  422f58:	ldrb	w8, [x26, x8]
  422f5c:	ldrh	w10, [x11, x9, lsl #1]
  422f60:	ldrh	w8, [x11, x8, lsl #1]
  422f64:	add	x10, x10, w0, uxtw
  422f68:	add	x24, x10, x8
  422f6c:	mov	w8, #0x16ea                	// #5866
  422f70:	cmp	w24, w8
  422f74:	b.hi	422fa8 <builtin_keyboard+0x888>  // b.pmore
  422f78:	adrp	x10, 457000 <__FRAME_END__+0x149b8>
  422f7c:	lsl	x8, x24, #4
  422f80:	add	x10, x10, #0x428
  422f84:	ldr	x8, [x10, x8]
  422f88:	cbz	x8, 422fa8 <builtin_keyboard+0x888>
  422f8c:	ldrb	w10, [x8]
  422f90:	cmp	w9, w10
  422f94:	b.ne	422fa8 <builtin_keyboard+0x888>  // b.any
  422f98:	add	x0, x26, #0x1
  422f9c:	add	x1, x8, #0x1
  422fa0:	bl	40a930 <strcmp@plt>
  422fa4:	cbz	w0, 42311c <builtin_keyboard+0x9fc>
  422fa8:	sub	x1, x29, #0x10
  422fac:	mov	x0, x26
  422fb0:	mov	w2, wzr
  422fb4:	bl	40b550 <strtoul@plt>
  422fb8:	ldur	x8, [x29, #-16]
  422fbc:	ldrb	w8, [x8]
  422fc0:	cbz	w8, 422fec <builtin_keyboard+0x8cc>
  422fc4:	str	xzr, [sp, #4200]
  422fc8:	cbz	x20, 4230d8 <builtin_keyboard+0x9b8>
  422fcc:	mov	w0, #0x1                   	// #1
  422fd0:	bl	40a2c0 <log_get_max_level_realm@plt>
  422fd4:	adrp	x24, 435000 <worker_hash_op+0xdf8>
  422fd8:	cmp	w0, #0x3
  422fdc:	add	x24, x24, #0x7f
  422fe0:	b.ge	423170 <builtin_keyboard+0xa50>  // b.tcont
  422fe4:	mov	x6, xzr
  422fe8:	b	4230e4 <builtin_keyboard+0x9c4>
  422fec:	mov	x24, x0
  422ff0:	str	w23, [sp, #4200]
  422ff4:	str	w24, [sp, #4204]
  422ff8:	stur	xzr, [x29, #-24]
  422ffc:	cbz	x20, 423010 <builtin_keyboard+0x8f0>
  423000:	mov	w0, #0x1                   	// #1
  423004:	bl	40a2c0 <log_get_max_level_realm@plt>
  423008:	cmp	w0, #0x7
  42300c:	b.ge	4231bc <builtin_keyboard+0xa9c>  // b.tcont
  423010:	mov	x6, xzr
  423014:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  423018:	cmp	x6, #0x0
  42301c:	add	x8, x8, #0x7f
  423020:	csel	x5, xzr, x8, eq  // eq = none
  423024:	str	w24, [sp, #40]
  423028:	str	w24, [sp, #32]
  42302c:	mov	x24, x8
  423030:	adrp	x8, 439000 <worker_hash_op+0x4df8>
  423034:	adrp	x4, 439000 <worker_hash_op+0x4df8>
  423038:	add	x8, x8, #0xdf9
  42303c:	mov	w0, #0x7                   	// #7
  423040:	mov	w3, #0x52                  	// #82
  423044:	mov	w1, wzr
  423048:	mov	x2, x22
  42304c:	add	x4, x4, #0xdc9
  423050:	mov	x7, xzr
  423054:	str	w23, [sp, #24]
  423058:	str	w23, [sp, #16]
  42305c:	stp	xzr, x8, [sp]
  423060:	bl	40a730 <log_object_internal@plt>
  423064:	add	x2, sp, #0x1, lsl #12
  423068:	mov	w1, #0x4504                	// #17668
  42306c:	add	x2, x2, #0x68
  423070:	movk	w1, #0x4008, lsl #16
  423074:	mov	w0, w19
  423078:	bl	40a8b0 <ioctl@plt>
  42307c:	tbz	w0, #31, 4227d8 <builtin_keyboard+0xb8>
  423080:	stur	xzr, [x29, #-24]
  423084:	bl	40a3e0 <__errno_location@plt>
  423088:	ldr	w23, [x0]
  42308c:	cbz	x20, 4230a0 <builtin_keyboard+0x980>
  423090:	mov	w0, #0x1                   	// #1
  423094:	bl	40a2c0 <log_get_max_level_realm@plt>
  423098:	cmp	w0, #0x3
  42309c:	b.ge	423214 <builtin_keyboard+0xaf4>  // b.tcont
  4230a0:	mov	x6, xzr
  4230a4:	ldr	w8, [sp, #4200]
  4230a8:	ldr	w9, [sp, #4204]
  4230ac:	cmp	x6, #0x0
  4230b0:	csel	x5, xzr, x24, eq  // eq = none
  4230b4:	str	w8, [sp, #16]
  4230b8:	adrp	x8, 439000 <worker_hash_op+0x4df8>
  4230bc:	add	x8, x8, #0xe35
  4230c0:	mov	w0, #0x3                   	// #3
  4230c4:	mov	w3, #0x55                  	// #85
  4230c8:	mov	w1, w23
  4230cc:	str	w9, [sp, #24]
  4230d0:	stp	xzr, x8, [sp]
  4230d4:	b	42310c <builtin_keyboard+0x9ec>
  4230d8:	adrp	x24, 435000 <worker_hash_op+0xdf8>
  4230dc:	mov	x6, xzr
  4230e0:	add	x24, x24, #0x7f
  4230e4:	adrp	x8, 439000 <worker_hash_op+0x4df8>
  4230e8:	cmp	x6, #0x0
  4230ec:	add	x8, x8, #0xdd5
  4230f0:	mov	w1, #0x16                  	// #22
  4230f4:	csel	x5, xzr, x24, eq  // eq = none
  4230f8:	stp	x8, x26, [sp, #8]
  4230fc:	mov	w0, #0x3                   	// #3
  423100:	movk	w1, #0x4000, lsl #16
  423104:	mov	w3, #0x4b                  	// #75
  423108:	str	xzr, [sp]
  42310c:	adrp	x4, 439000 <worker_hash_op+0x4df8>
  423110:	mov	x2, x22
  423114:	add	x4, x4, #0xdc9
  423118:	b	4227d0 <builtin_keyboard+0xb0>
  42311c:	adrp	x8, 457000 <__FRAME_END__+0x149b8>
  423120:	add	x8, x8, #0x428
  423124:	add	x8, x8, x24, lsl #4
  423128:	ldrh	w24, [x8, #8]
  42312c:	str	w23, [sp, #4200]
  423130:	str	w24, [sp, #4204]
  423134:	stur	xzr, [x29, #-24]
  423138:	cbnz	x20, 423000 <builtin_keyboard+0x8e0>
  42313c:	b	423010 <builtin_keyboard+0x8f0>
  423140:	add	x1, sp, #0x1, lsl #12
  423144:	add	x1, x1, #0x68
  423148:	mov	x0, x20
  42314c:	bl	40a780 <sd_device_get_sysname@plt>
  423150:	ldr	x6, [sp, #4200]
  423154:	b	422950 <builtin_keyboard+0x230>
  423158:	add	x1, sp, #0x1, lsl #12
  42315c:	add	x1, x1, #0x68
  423160:	mov	x0, x20
  423164:	bl	40a780 <sd_device_get_sysname@plt>
  423168:	ldr	x6, [sp, #4200]
  42316c:	b	422cfc <builtin_keyboard+0x5dc>
  423170:	add	x1, sp, #0x1, lsl #12
  423174:	add	x1, x1, #0x68
  423178:	mov	x0, x20
  42317c:	bl	40a780 <sd_device_get_sysname@plt>
  423180:	ldr	x6, [sp, #4200]
  423184:	b	4230e4 <builtin_keyboard+0x9c4>
  423188:	add	x1, sp, #0x1, lsl #12
  42318c:	add	x1, x1, #0x68
  423190:	mov	x0, x20
  423194:	bl	40a780 <sd_device_get_sysname@plt>
  423198:	ldr	x6, [sp, #4200]
  42319c:	b	422d40 <builtin_keyboard+0x620>
  4231a0:	add	x1, sp, #0x1, lsl #12
  4231a4:	add	x1, x1, #0x68
  4231a8:	mov	x0, x20
  4231ac:	bl	40a780 <sd_device_get_sysname@plt>
  4231b0:	ldr	x6, [sp, #4200]
  4231b4:	ldr	w23, [sp, #4184]
  4231b8:	b	422890 <builtin_keyboard+0x170>
  4231bc:	sub	x1, x29, #0x18
  4231c0:	mov	x0, x20
  4231c4:	bl	40a780 <sd_device_get_sysname@plt>
  4231c8:	ldur	x6, [x29, #-24]
  4231cc:	ldr	w23, [sp, #4200]
  4231d0:	ldr	w24, [sp, #4204]
  4231d4:	b	423014 <builtin_keyboard+0x8f4>
  4231d8:	sub	x1, x29, #0x10
  4231dc:	mov	x0, x20
  4231e0:	bl	40a780 <sd_device_get_sysname@plt>
  4231e4:	ldur	x6, [x29, #-16]
  4231e8:	b	422e90 <builtin_keyboard+0x770>
  4231ec:	sub	x1, x29, #0x10
  4231f0:	mov	x0, x20
  4231f4:	bl	40a780 <sd_device_get_sysname@plt>
  4231f8:	ldur	x6, [x29, #-16]
  4231fc:	b	422e5c <builtin_keyboard+0x73c>
  423200:	sub	x1, x29, #0x18
  423204:	mov	x0, x20
  423208:	bl	40a780 <sd_device_get_sysname@plt>
  42320c:	ldur	x6, [x29, #-24]
  423210:	b	422e14 <builtin_keyboard+0x6f4>
  423214:	sub	x1, x29, #0x18
  423218:	mov	x0, x20
  42321c:	bl	40a780 <sd_device_get_sysname@plt>
  423220:	ldur	x6, [x29, #-24]
  423224:	b	4230a4 <builtin_keyboard+0x984>
  423228:	sub	x1, x29, #0x10
  42322c:	mov	x0, x20
  423230:	bl	40a780 <sd_device_get_sysname@plt>
  423234:	ldur	x6, [x29, #-16]
  423238:	b	422a64 <builtin_keyboard+0x344>
  42323c:	sub	x1, x29, #0x10
  423240:	mov	x0, x20
  423244:	bl	40a780 <sd_device_get_sysname@plt>
  423248:	ldur	x6, [x29, #-16]
  42324c:	b	422c14 <builtin_keyboard+0x4f4>
  423250:	sub	x1, x29, #0x10
  423254:	mov	x0, x20
  423258:	bl	40a780 <sd_device_get_sysname@plt>
  42325c:	ldur	x6, [x29, #-16]
  423260:	b	422cc0 <builtin_keyboard+0x5a0>
  423264:	mov	w19, w0
  423268:	str	xzr, [sp, #4200]
  42326c:	cbz	x20, 423280 <builtin_keyboard+0xb60>
  423270:	mov	w0, #0x1                   	// #1
  423274:	bl	40a2c0 <log_get_max_level_realm@plt>
  423278:	cmp	w0, #0x3
  42327c:	b.ge	423644 <builtin_keyboard+0xf24>  // b.tcont
  423280:	mov	x6, xzr
  423284:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  423288:	add	x8, x8, #0x7f
  42328c:	cmp	x6, #0x0
  423290:	csel	x5, xzr, x8, eq  // eq = none
  423294:	adrp	x8, 439000 <worker_hash_op+0x4df8>
  423298:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  42329c:	adrp	x4, 439000 <worker_hash_op+0x4df8>
  4232a0:	add	x8, x8, #0x29f
  4232a4:	add	x2, x2, #0xc98
  4232a8:	add	x4, x4, #0xcb9
  4232ac:	mov	w0, #0x3                   	// #3
  4232b0:	mov	w3, #0xad                  	// #173
  4232b4:	mov	w1, w19
  4232b8:	mov	x7, xzr
  4232bc:	stp	xzr, x8, [sp]
  4232c0:	bl	40a730 <log_object_internal@plt>
  4232c4:	mov	w20, w0
  4232c8:	mov	w19, #0xffffffff            	// #-1
  4232cc:	b	4234f4 <builtin_keyboard+0xdd4>
  4232d0:	cbz	w27, 4234f0 <builtin_keyboard+0xdd0>
  4232d4:	cbz	x20, 42376c <builtin_keyboard+0x104c>
  4232d8:	adrp	x1, 43c000 <worker_hash_op+0x7df8>
  4232dc:	add	x1, x1, #0xabe
  4232e0:	sub	x3, x29, #0x10
  4232e4:	mov	x0, x20
  4232e8:	mov	x2, xzr
  4232ec:	bl	40b530 <sd_device_get_parent_with_subsystem_devtype@plt>
  4232f0:	tbnz	w0, #31, 423440 <builtin_keyboard+0xd20>
  4232f4:	ldur	x0, [x29, #-16]
  4232f8:	adrp	x1, 43c000 <worker_hash_op+0x7df8>
  4232fc:	add	x1, x1, #0xc23
  423300:	sub	x2, x29, #0x18
  423304:	bl	40ace0 <sd_device_get_sysattr_value@plt>
  423308:	tbnz	w0, #31, 423490 <builtin_keyboard+0xd70>
  42330c:	ldur	x2, [x29, #-24]
  423310:	add	x8, sp, #0x1, lsl #12
  423314:	add	x0, sp, #0x1, lsl #12
  423318:	add	x8, x8, #0x68
  42331c:	add	x0, x0, #0x60
  423320:	mov	w1, #0x1000                	// #4096
  423324:	str	x8, [sp, #4192]
  423328:	bl	40ad20 <strpcpy@plt>
  42332c:	adrp	x20, 43c000 <worker_hash_op+0x7df8>
  423330:	mov	x1, x0
  423334:	mov	w21, w27
  423338:	add	x22, sp, #0x58
  42333c:	add	x20, x20, #0xc5b
  423340:	ldr	w3, [x22], #4
  423344:	add	x0, sp, #0x1, lsl #12
  423348:	add	x0, x0, #0x60
  42334c:	mov	x2, x20
  423350:	bl	40ad50 <strpcpyf@plt>
  423354:	subs	x21, x21, #0x1
  423358:	mov	x1, x0
  42335c:	b.ne	423340 <builtin_keyboard+0xc20>  // b.any
  423360:	ldur	x20, [x29, #-16]
  423364:	str	xzr, [sp, #4184]
  423368:	cbz	x20, 42337c <builtin_keyboard+0xc5c>
  42336c:	mov	w0, #0x1                   	// #1
  423370:	bl	40a2c0 <log_get_max_level_realm@plt>
  423374:	cmp	w0, #0x7
  423378:	b.ge	423674 <builtin_keyboard+0xf54>  // b.tcont
  42337c:	mov	x6, xzr
  423380:	cmp	x6, #0x0
  423384:	add	x8, sp, #0x1, lsl #12
  423388:	adrp	x9, 43c000 <worker_hash_op+0x7df8>
  42338c:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  423390:	adrp	x4, 43c000 <worker_hash_op+0x7df8>
  423394:	csel	x5, xzr, x24, eq  // eq = none
  423398:	add	x8, x8, #0x68
  42339c:	add	x9, x9, #0xc5f
  4233a0:	add	x2, x2, #0xc98
  4233a4:	add	x4, x4, #0xc0d
  4233a8:	mov	w0, #0x7                   	// #7
  4233ac:	mov	w3, #0x32                  	// #50
  4233b0:	mov	w1, wzr
  4233b4:	mov	x7, xzr
  4233b8:	stp	x9, x8, [sp, #8]
  4233bc:	str	xzr, [sp]
  4233c0:	bl	40a730 <log_object_internal@plt>
  4233c4:	ldur	x0, [x29, #-16]
  4233c8:	adrp	x1, 43c000 <worker_hash_op+0x7df8>
  4233cc:	add	x2, sp, #0x1, lsl #12
  4233d0:	add	x1, x1, #0xc23
  4233d4:	add	x2, x2, #0x68
  4233d8:	bl	40b570 <sd_device_set_sysattr_value@plt>
  4233dc:	tbz	w0, #31, 4234f0 <builtin_keyboard+0xdd0>
  4233e0:	ldur	x21, [x29, #-16]
  4233e4:	mov	w20, w0
  4233e8:	str	xzr, [sp, #4184]
  4233ec:	cbz	x21, 423400 <builtin_keyboard+0xce0>
  4233f0:	mov	w0, #0x1                   	// #1
  4233f4:	bl	40a2c0 <log_get_max_level_realm@plt>
  4233f8:	cmp	w0, #0x3
  4233fc:	b.ge	4236a4 <builtin_keyboard+0xf84>  // b.tcont
  423400:	mov	x6, xzr
  423404:	cmp	x6, #0x0
  423408:	adrp	x8, 43c000 <worker_hash_op+0x7df8>
  42340c:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  423410:	adrp	x4, 43c000 <worker_hash_op+0x7df8>
  423414:	csel	x5, xzr, x24, eq  // eq = none
  423418:	add	x8, x8, #0xc8f
  42341c:	add	x2, x2, #0xc98
  423420:	add	x4, x4, #0xc0d
  423424:	mov	w0, #0x3                   	// #3
  423428:	mov	w3, #0x35                  	// #53
  42342c:	str	x8, [sp, #8]
  423430:	b	4234e0 <builtin_keyboard+0xdc0>
  423434:	mov	w20, wzr
  423438:	mov	w19, #0xffffffff            	// #-1
  42343c:	b	4234f4 <builtin_keyboard+0xdd4>
  423440:	mov	w21, w0
  423444:	mov	w0, #0x1                   	// #1
  423448:	str	xzr, [sp, #4200]
  42344c:	bl	40a2c0 <log_get_max_level_realm@plt>
  423450:	cmp	w0, #0x3
  423454:	mov	x6, xzr
  423458:	b.ge	42365c <builtin_keyboard+0xf3c>  // b.tcont
  42345c:	adrp	x8, 43c000 <worker_hash_op+0x7df8>
  423460:	cmp	x6, #0x0
  423464:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  423468:	adrp	x4, 43c000 <worker_hash_op+0x7df8>
  42346c:	add	x8, x8, #0xadf
  423470:	csel	x5, xzr, x24, eq  // eq = none
  423474:	add	x2, x2, #0xc98
  423478:	add	x4, x4, #0xc0d
  42347c:	stp	xzr, x8, [sp]
  423480:	mov	w0, #0x3                   	// #3
  423484:	mov	w3, #0x22                  	// #34
  423488:	mov	w1, w21
  42348c:	b	4234e8 <builtin_keyboard+0xdc8>
  423490:	ldur	x21, [x29, #-16]
  423494:	mov	w20, w0
  423498:	str	xzr, [sp, #4200]
  42349c:	cbz	x21, 4234b0 <builtin_keyboard+0xd90>
  4234a0:	mov	w0, #0x1                   	// #1
  4234a4:	bl	40a2c0 <log_get_max_level_realm@plt>
  4234a8:	cmp	w0, #0x3
  4234ac:	b.ge	42368c <builtin_keyboard+0xf6c>  // b.tcont
  4234b0:	mov	x6, xzr
  4234b4:	adrp	x8, 43c000 <worker_hash_op+0x7df8>
  4234b8:	cmp	x6, #0x0
  4234bc:	add	x8, x8, #0xc31
  4234c0:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  4234c4:	adrp	x4, 43c000 <worker_hash_op+0x7df8>
  4234c8:	csel	x5, xzr, x24, eq  // eq = none
  4234cc:	add	x2, x2, #0xc98
  4234d0:	add	x4, x4, #0xc0d
  4234d4:	str	x8, [sp, #8]
  4234d8:	mov	w0, #0x3                   	// #3
  4234dc:	mov	w3, #0x26                  	// #38
  4234e0:	mov	w1, w20
  4234e4:	str	xzr, [sp]
  4234e8:	mov	x7, xzr
  4234ec:	bl	40a730 <log_object_internal@plt>
  4234f0:	mov	w20, wzr
  4234f4:	mov	w0, w19
  4234f8:	bl	40a660 <safe_close@plt>
  4234fc:	mov	w0, w20
  423500:	add	sp, sp, #0x2, lsl #12
  423504:	add	sp, sp, #0x80
  423508:	ldp	x20, x19, [sp, #80]
  42350c:	ldp	x22, x21, [sp, #64]
  423510:	ldp	x24, x23, [sp, #48]
  423514:	ldp	x26, x25, [sp, #32]
  423518:	ldp	x28, x27, [sp, #16]
  42351c:	ldp	x29, x30, [sp], #96
  423520:	ret
  423524:	str	xzr, [sp, #4200]
  423528:	bl	40a3e0 <__errno_location@plt>
  42352c:	ldr	w21, [x0]
  423530:	cbz	x20, 423544 <builtin_keyboard+0xe24>
  423534:	mov	w0, #0x1                   	// #1
  423538:	bl	40a2c0 <log_get_max_level_realm@plt>
  42353c:	cmp	w0, #0x3
  423540:	b.ge	4236bc <builtin_keyboard+0xf9c>  // b.tcont
  423544:	mov	x6, xzr
  423548:	ldr	x8, [sp, #80]
  42354c:	cmp	x6, #0x0
  423550:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  423554:	adrp	x4, 439000 <worker_hash_op+0x4df8>
  423558:	str	x8, [sp, #16]
  42355c:	adrp	x8, 439000 <worker_hash_op+0x4df8>
  423560:	add	x8, x8, #0xd06
  423564:	csel	x5, xzr, x24, eq  // eq = none
  423568:	add	x2, x2, #0xc98
  42356c:	add	x4, x4, #0xcb9
  423570:	str	x8, [sp, #8]
  423574:	mov	w0, #0x3                   	// #3
  423578:	mov	w3, #0xcc                  	// #204
  42357c:	b	42362c <builtin_keyboard+0xf0c>
  423580:	str	xzr, [sp, #4200]
  423584:	bl	40a3e0 <__errno_location@plt>
  423588:	ldr	w21, [x0]
  42358c:	cbz	x20, 4235a0 <builtin_keyboard+0xe80>
  423590:	mov	w0, #0x1                   	// #1
  423594:	bl	40a2c0 <log_get_max_level_realm@plt>
  423598:	cmp	w0, #0x3
  42359c:	b.ge	4236d4 <builtin_keyboard+0xfb4>  // b.tcont
  4235a0:	mov	x6, xzr
  4235a4:	ldr	x8, [sp, #80]
  4235a8:	cmp	x6, #0x0
  4235ac:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  4235b0:	adrp	x4, 439000 <worker_hash_op+0x4df8>
  4235b4:	str	x8, [sp, #16]
  4235b8:	adrp	x8, 439000 <worker_hash_op+0x4df8>
  4235bc:	add	x8, x8, #0xd06
  4235c0:	csel	x5, xzr, x24, eq  // eq = none
  4235c4:	add	x2, x2, #0xc98
  4235c8:	add	x4, x4, #0xcb9
  4235cc:	str	x8, [sp, #8]
  4235d0:	mov	w0, #0x3                   	// #3
  4235d4:	mov	w3, #0xdd                  	// #221
  4235d8:	b	42362c <builtin_keyboard+0xf0c>
  4235dc:	stur	xzr, [x29, #-16]
  4235e0:	bl	40a3e0 <__errno_location@plt>
  4235e4:	ldr	w21, [x0]
  4235e8:	cbz	x20, 4235fc <builtin_keyboard+0xedc>
  4235ec:	mov	w0, #0x1                   	// #1
  4235f0:	bl	40a2c0 <log_get_max_level_realm@plt>
  4235f4:	cmp	w0, #0x3
  4235f8:	b.ge	4236ec <builtin_keyboard+0xfcc>  // b.tcont
  4235fc:	mov	x6, xzr
  423600:	cmp	x6, #0x0
  423604:	adrp	x8, 439000 <worker_hash_op+0x4df8>
  423608:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  42360c:	adrp	x4, 439000 <worker_hash_op+0x4df8>
  423610:	csel	x5, xzr, x24, eq  // eq = none
  423614:	add	x8, x8, #0xd60
  423618:	add	x2, x2, #0xc98
  42361c:	add	x4, x4, #0xcb9
  423620:	mov	w0, #0x3                   	// #3
  423624:	mov	w3, #0xe6                  	// #230
  423628:	str	x8, [sp, #8]
  42362c:	mov	w1, w21
  423630:	mov	x7, xzr
  423634:	str	xzr, [sp]
  423638:	bl	40a730 <log_object_internal@plt>
  42363c:	mov	w20, w0
  423640:	b	4234f4 <builtin_keyboard+0xdd4>
  423644:	add	x1, sp, #0x1, lsl #12
  423648:	add	x1, x1, #0x68
  42364c:	mov	x0, x20
  423650:	bl	40a780 <sd_device_get_sysname@plt>
  423654:	ldr	x6, [sp, #4200]
  423658:	b	423284 <builtin_keyboard+0xb64>
  42365c:	add	x1, sp, #0x1, lsl #12
  423660:	add	x1, x1, #0x68
  423664:	mov	x0, x20
  423668:	bl	40a780 <sd_device_get_sysname@plt>
  42366c:	ldr	x6, [sp, #4200]
  423670:	b	42345c <builtin_keyboard+0xd3c>
  423674:	add	x1, sp, #0x1, lsl #12
  423678:	add	x1, x1, #0x58
  42367c:	mov	x0, x20
  423680:	bl	40a780 <sd_device_get_sysname@plt>
  423684:	ldr	x6, [sp, #4184]
  423688:	b	423380 <builtin_keyboard+0xc60>
  42368c:	add	x1, sp, #0x1, lsl #12
  423690:	add	x1, x1, #0x68
  423694:	mov	x0, x21
  423698:	bl	40a780 <sd_device_get_sysname@plt>
  42369c:	ldr	x6, [sp, #4200]
  4236a0:	b	4234b4 <builtin_keyboard+0xd94>
  4236a4:	add	x1, sp, #0x1, lsl #12
  4236a8:	add	x1, x1, #0x58
  4236ac:	mov	x0, x21
  4236b0:	bl	40a780 <sd_device_get_sysname@plt>
  4236b4:	ldr	x6, [sp, #4184]
  4236b8:	b	423404 <builtin_keyboard+0xce4>
  4236bc:	add	x1, sp, #0x1, lsl #12
  4236c0:	add	x1, x1, #0x68
  4236c4:	mov	x0, x20
  4236c8:	bl	40a780 <sd_device_get_sysname@plt>
  4236cc:	ldr	x6, [sp, #4200]
  4236d0:	b	423548 <builtin_keyboard+0xe28>
  4236d4:	add	x1, sp, #0x1, lsl #12
  4236d8:	add	x1, x1, #0x68
  4236dc:	mov	x0, x20
  4236e0:	bl	40a780 <sd_device_get_sysname@plt>
  4236e4:	ldr	x6, [sp, #4200]
  4236e8:	b	4235a4 <builtin_keyboard+0xe84>
  4236ec:	sub	x1, x29, #0x10
  4236f0:	mov	x0, x20
  4236f4:	bl	40a780 <sd_device_get_sysname@plt>
  4236f8:	ldur	x6, [x29, #-16]
  4236fc:	b	423600 <builtin_keyboard+0xee0>
  423700:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  423704:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  423708:	adrp	x4, 43c000 <worker_hash_op+0x7df8>
  42370c:	add	x1, x1, #0x4f0
  423710:	add	x2, x2, #0xc98
  423714:	add	x4, x4, #0xa84
  423718:	mov	w0, #0x1                   	// #1
  42371c:	mov	w3, #0x8d                  	// #141
  423720:	bl	40a630 <log_assert_failed_realm@plt>
  423724:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  423728:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  42372c:	adrp	x4, 43c000 <worker_hash_op+0x7df8>
  423730:	add	x1, x1, #0x8db
  423734:	add	x2, x2, #0xc98
  423738:	add	x4, x4, #0xa84
  42373c:	mov	w0, #0x1                   	// #1
  423740:	mov	w3, #0x8e                  	// #142
  423744:	bl	40a630 <log_assert_failed_realm@plt>
  423748:	adrp	x1, 43c000 <worker_hash_op+0x7df8>
  42374c:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  423750:	adrp	x4, 43c000 <worker_hash_op+0x7df8>
  423754:	add	x1, x1, #0xb65
  423758:	add	x2, x2, #0xc98
  42375c:	add	x4, x4, #0xa84
  423760:	mov	w0, #0x1                   	// #1
  423764:	mov	w3, #0x9b                  	// #155
  423768:	bl	40a630 <log_assert_failed_realm@plt>
  42376c:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  423770:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  423774:	adrp	x4, 43c000 <worker_hash_op+0x7df8>
  423778:	add	x1, x1, #0x4f0
  42377c:	add	x2, x2, #0xc98
  423780:	add	x4, x4, #0xbc2
  423784:	mov	w0, #0x1                   	// #1
  423788:	mov	w3, #0x1d                  	// #29
  42378c:	bl	40a630 <log_assert_failed_realm@plt>

0000000000423790 <builtin_net_id>:
  423790:	stp	x29, x30, [sp, #-80]!
  423794:	stp	x28, x25, [sp, #16]
  423798:	stp	x24, x23, [sp, #32]
  42379c:	stp	x22, x21, [sp, #48]
  4237a0:	stp	x20, x19, [sp, #64]
  4237a4:	mov	x29, sp
  4237a8:	sub	sp, sp, #0x210
  4237ac:	adrp	x1, 43c000 <worker_hash_op+0x7df8>
  4237b0:	movi	v0.2d, #0x0
  4237b4:	add	x1, x1, #0xcdd
  4237b8:	add	x2, sp, #0xd0
  4237bc:	mov	w20, w3
  4237c0:	mov	x19, x0
  4237c4:	stp	q0, q0, [sp, #160]
  4237c8:	stp	q0, q0, [sp, #128]
  4237cc:	stp	q0, q0, [sp, #96]
  4237d0:	stp	q0, q0, [sp, #64]
  4237d4:	stp	q0, q0, [sp, #32]
  4237d8:	str	q0, [sp, #16]
  4237dc:	bl	40ace0 <sd_device_get_sysattr_value@plt>
  4237e0:	tbnz	w0, #31, 423f34 <builtin_net_id+0x7a4>
  4237e4:	ldr	x0, [sp, #208]
  4237e8:	mov	x1, xzr
  4237ec:	mov	w2, wzr
  4237f0:	bl	40b550 <strtoul@plt>
  4237f4:	cmp	x0, #0x1
  4237f8:	b.eq	423834 <builtin_net_id+0xa4>  // b.none
  4237fc:	cmp	x0, #0x100
  423800:	b.eq	423828 <builtin_net_id+0x98>  // b.none
  423804:	cmp	x0, #0x20
  423808:	mov	w0, wzr
  42380c:	b.ne	423f34 <builtin_net_id+0x7a4>  // b.any
  423810:	bl	429be8 <naming_scheme>
  423814:	ldrb	w8, [x0, #8]
  423818:	tbz	w8, #2, 423f30 <builtin_net_id+0x7a0>
  42381c:	adrp	x21, 43c000 <worker_hash_op+0x7df8>
  423820:	add	x21, x21, #0xce2
  423824:	b	42383c <builtin_net_id+0xac>
  423828:	adrp	x21, 43c000 <worker_hash_op+0x7df8>
  42382c:	add	x21, x21, #0xce5
  423830:	b	42383c <builtin_net_id+0xac>
  423834:	adrp	x21, 43c000 <worker_hash_op+0x7df8>
  423838:	add	x21, x21, #0xcda
  42383c:	adrp	x1, 43c000 <worker_hash_op+0x7df8>
  423840:	add	x1, x1, #0xce8
  423844:	add	x2, sp, #0xd0
  423848:	mov	x0, x19
  42384c:	bl	40ace0 <sd_device_get_sysattr_value@plt>
  423850:	tbnz	w0, #31, 423f34 <builtin_net_id+0x7a4>
  423854:	adrp	x1, 43c000 <worker_hash_op+0x7df8>
  423858:	add	x1, x1, #0xcf0
  42385c:	add	x2, sp, #0xc8
  423860:	mov	x0, x19
  423864:	bl	40ace0 <sd_device_get_sysattr_value@plt>
  423868:	tbnz	w0, #31, 423f34 <builtin_net_id+0x7a4>
  42386c:	ldp	x1, x0, [sp, #200]
  423870:	bl	40a930 <strcmp@plt>
  423874:	cbnz	w0, 423f30 <builtin_net_id+0x7a0>
  423878:	add	x1, sp, #0xc0
  42387c:	mov	x0, x19
  423880:	bl	40a870 <sd_device_get_devtype@plt>
  423884:	tbnz	w0, #31, 4238cc <builtin_net_id+0x13c>
  423888:	ldr	x22, [sp, #192]
  42388c:	adrp	x0, 43b000 <worker_hash_op+0x6df8>
  423890:	add	x0, x0, #0x84
  423894:	mov	x1, x22
  423898:	bl	40a930 <strcmp@plt>
  42389c:	cbz	w0, 4238c4 <builtin_net_id+0x134>
  4238a0:	adrp	x0, 43b000 <worker_hash_op+0x6df8>
  4238a4:	add	x0, x0, #0xc23
  4238a8:	mov	x1, x22
  4238ac:	bl	40a930 <strcmp@plt>
  4238b0:	adrp	x8, 43c000 <worker_hash_op+0x7df8>
  4238b4:	add	x8, x8, #0xcfa
  4238b8:	cmp	w0, #0x0
  4238bc:	csel	x21, x8, x21, eq  // eq = none
  4238c0:	b	4238cc <builtin_net_id+0x13c>
  4238c4:	adrp	x21, 43c000 <worker_hash_op+0x7df8>
  4238c8:	add	x21, x21, #0xcf7
  4238cc:	bl	429be8 <naming_scheme>
  4238d0:	ldr	x3, [x0]
  4238d4:	adrp	x2, 43c000 <worker_hash_op+0x7df8>
  4238d8:	and	w1, w20, #0x1
  4238dc:	add	x2, x2, #0xcfd
  4238e0:	mov	x0, x19
  4238e4:	bl	420aec <udev_builtin_add_property>
  4238e8:	adrp	x1, 43c000 <worker_hash_op+0x7df8>
  4238ec:	add	x1, x1, #0xcdd
  4238f0:	sub	x2, x29, #0x100
  4238f4:	mov	x0, x19
  4238f8:	bl	40ace0 <sd_device_get_sysattr_value@plt>
  4238fc:	tbnz	w0, #31, 423954 <builtin_net_id+0x1c4>
  423900:	ldur	x0, [x29, #-256]
  423904:	mov	x1, xzr
  423908:	mov	w2, wzr
  42390c:	bl	40b550 <strtoul@plt>
  423910:	cmp	x0, #0x20
  423914:	b.ne	423920 <builtin_net_id+0x190>  // b.any
  423918:	mov	w0, #0xffffffea            	// #-22
  42391c:	b	423954 <builtin_net_id+0x1c4>
  423920:	adrp	x1, 43c000 <worker_hash_op+0x7df8>
  423924:	add	x1, x1, #0xe0f
  423928:	sub	x2, x29, #0x100
  42392c:	mov	x0, x19
  423930:	bl	40ace0 <sd_device_get_sysattr_value@plt>
  423934:	tbnz	w0, #31, 423954 <builtin_net_id+0x1c4>
  423938:	ldur	x0, [x29, #-256]
  42393c:	mov	x1, xzr
  423940:	mov	w2, wzr
  423944:	bl	40b550 <strtoul@plt>
  423948:	mov	x8, x0
  42394c:	mov	w0, wzr
  423950:	cbz	x8, 423c88 <builtin_net_id+0x4f8>
  423954:	tbnz	w0, #31, 423a24 <builtin_net_id+0x294>
  423958:	ldrb	w8, [sp, #26]
  42395c:	cbz	w8, 423a24 <builtin_net_id+0x294>
  423960:	ldrb	w4, [sp, #20]
  423964:	ldrb	w5, [sp, #21]
  423968:	ldrb	w6, [sp, #22]
  42396c:	ldrb	w7, [sp, #23]
  423970:	ldrb	w8, [sp, #24]
  423974:	ldrb	w9, [sp, #25]
  423978:	adrp	x2, 43c000 <worker_hash_op+0x7df8>
  42397c:	add	x2, x2, #0xd12
  423980:	add	x0, sp, #0xe0
  423984:	mov	w1, #0x10                  	// #16
  423988:	mov	x3, x21
  42398c:	str	w9, [sp, #8]
  423990:	str	w8, [sp]
  423994:	bl	40b050 <snprintf@plt>
  423998:	cmp	w0, #0x10
  42399c:	b.cs	424604 <builtin_net_id+0xe74>  // b.hs, b.nlast
  4239a0:	adrp	x2, 43c000 <worker_hash_op+0x7df8>
  4239a4:	and	w1, w20, #0x1
  4239a8:	add	x2, x2, #0xda8
  4239ac:	add	x3, sp, #0xe0
  4239b0:	mov	x0, x19
  4239b4:	bl	420aec <udev_builtin_add_property>
  4239b8:	ldrb	w8, [sp, #26]
  4239bc:	cbz	w8, 423a24 <builtin_net_id+0x294>
  4239c0:	ldrh	w8, [sp, #20]
  4239c4:	ldrb	w9, [sp, #22]
  4239c8:	orr	w8, w8, w9
  4239cc:	tst	w8, #0xffff
  4239d0:	b.eq	423a24 <builtin_net_id+0x294>  // b.none
  4239d4:	ldrb	w3, [sp, #20]
  4239d8:	ldrb	w4, [sp, #21]
  4239dc:	ldrb	w5, [sp, #22]
  4239e0:	ldrb	w6, [sp, #23]
  4239e4:	ldrb	w7, [sp, #24]
  4239e8:	ldrb	w8, [sp, #25]
  4239ec:	adrp	x2, 43c000 <worker_hash_op+0x7df8>
  4239f0:	add	x2, x2, #0xe3a
  4239f4:	sub	x0, x29, #0x100
  4239f8:	mov	w1, #0x20                  	// #32
  4239fc:	str	w8, [sp]
  423a00:	bl	40b050 <snprintf@plt>
  423a04:	cmp	w0, #0x20
  423a08:	b.cs	424628 <builtin_net_id+0xe98>  // b.hs, b.nlast
  423a0c:	and	w4, w20, #0x1
  423a10:	sub	x2, x29, #0x100
  423a14:	mov	x0, x19
  423a18:	mov	x1, xzr
  423a1c:	mov	x3, xzr
  423a20:	bl	420eb8 <udev_builtin_hwdb_lookup>
  423a24:	cbz	x19, 4245e0 <builtin_net_id+0xe50>
  423a28:	add	x1, sp, #0x108
  423a2c:	mov	x0, x19
  423a30:	bl	40ab60 <sd_device_get_parent@plt>
  423a34:	tbnz	w0, #31, 423a88 <builtin_net_id+0x2f8>
  423a38:	ldr	x0, [sp, #264]
  423a3c:	stur	x0, [x29, #-256]
  423a40:	cbz	x0, 423a80 <builtin_net_id+0x2f0>
  423a44:	adrp	x22, 43c000 <worker_hash_op+0x7df8>
  423a48:	add	x22, x22, #0xed3
  423a4c:	add	x1, sp, #0xe0
  423a50:	bl	40a850 <sd_device_get_subsystem@plt>
  423a54:	tbnz	w0, #31, 423b60 <builtin_net_id+0x3d0>
  423a58:	ldr	x0, [sp, #224]
  423a5c:	mov	x1, x22
  423a60:	bl	40a930 <strcmp@plt>
  423a64:	cbnz	w0, 423b60 <builtin_net_id+0x3d0>
  423a68:	ldur	x0, [x29, #-256]
  423a6c:	sub	x1, x29, #0x100
  423a70:	bl	40ab60 <sd_device_get_parent@plt>
  423a74:	tbnz	w0, #31, 423a80 <builtin_net_id+0x2f0>
  423a78:	ldur	x0, [x29, #-256]
  423a7c:	cbnz	x0, 423a4c <builtin_net_id+0x2bc>
  423a80:	str	xzr, [sp, #264]
  423a84:	mov	w0, #0xfffffffe            	// #-2
  423a88:	tbnz	w0, #31, 423aa4 <builtin_net_id+0x314>
  423a8c:	ldr	w8, [sp, #16]
  423a90:	cmp	w8, #0x5
  423a94:	b.ne	423aa4 <builtin_net_id+0x314>  // b.any
  423a98:	add	x8, sp, #0x10
  423a9c:	add	x4, x8, #0x70
  423aa0:	b	423ef8 <builtin_net_id+0x768>
  423aa4:	sub	x1, x29, #0x100
  423aa8:	mov	x0, x19
  423aac:	bl	40ab60 <sd_device_get_parent@plt>
  423ab0:	tbnz	w0, #31, 423adc <builtin_net_id+0x34c>
  423ab4:	ldur	x0, [x29, #-256]
  423ab8:	add	x1, sp, #0x108
  423abc:	bl	40a850 <sd_device_get_subsystem@plt>
  423ac0:	tbnz	w0, #31, 423adc <builtin_net_id+0x34c>
  423ac4:	ldr	x1, [sp, #264]
  423ac8:	adrp	x0, 43c000 <worker_hash_op+0x7df8>
  423acc:	add	x0, x0, #0xeda
  423ad0:	bl	40a930 <strcmp@plt>
  423ad4:	cbz	w0, 423c20 <builtin_net_id+0x490>
  423ad8:	mov	w0, #0xfffffffe            	// #-2
  423adc:	tbnz	w0, #31, 423b24 <builtin_net_id+0x394>
  423ae0:	ldr	w8, [sp, #16]
  423ae4:	cmp	w8, #0x6
  423ae8:	b.ne	423b24 <builtin_net_id+0x394>  // b.any
  423aec:	add	x8, sp, #0x10
  423af0:	add	x4, x8, #0x80
  423af4:	adrp	x2, 43c000 <worker_hash_op+0x7df8>
  423af8:	add	x2, x2, #0xdb8
  423afc:	sub	x0, x29, #0x100
  423b00:	mov	w1, #0x10                  	// #16
  423b04:	mov	x3, x21
  423b08:	bl	40b050 <snprintf@plt>
  423b0c:	cmp	w0, #0xf
  423b10:	b.hi	423f30 <builtin_net_id+0x7a0>  // b.pmore
  423b14:	adrp	x2, 43c000 <worker_hash_op+0x7df8>
  423b18:	and	w1, w20, #0x1
  423b1c:	add	x2, x2, #0xdce
  423b20:	b	423f24 <builtin_net_id+0x794>
  423b24:	sub	x1, x29, #0x100
  423b28:	mov	x0, x19
  423b2c:	bl	40ab60 <sd_device_get_parent@plt>
  423b30:	tbnz	w0, #31, 423df8 <builtin_net_id+0x668>
  423b34:	ldur	x0, [x29, #-256]
  423b38:	add	x1, sp, #0x108
  423b3c:	bl	40a850 <sd_device_get_subsystem@plt>
  423b40:	tbnz	w0, #31, 423df8 <builtin_net_id+0x668>
  423b44:	ldr	x1, [sp, #264]
  423b48:	adrp	x0, 43c000 <worker_hash_op+0x7df8>
  423b4c:	add	x0, x0, #0xf61
  423b50:	bl	40a930 <strcmp@plt>
  423b54:	cbz	w0, 423d24 <builtin_net_id+0x594>
  423b58:	mov	w0, #0xfffffffe            	// #-2
  423b5c:	b	423df8 <builtin_net_id+0x668>
  423b60:	ldur	x0, [x29, #-256]
  423b64:	str	x0, [sp, #264]
  423b68:	cbz	x0, 423a84 <builtin_net_id+0x2f4>
  423b6c:	add	x1, sp, #0x100
  423b70:	bl	40a850 <sd_device_get_subsystem@plt>
  423b74:	tbnz	w0, #31, 423a88 <builtin_net_id+0x2f8>
  423b78:	adrp	x8, 46e000 <keyboard_lookup_key.wordlist+0x16bd8>
  423b7c:	add	x8, x8, #0x310
  423b80:	ldr	q0, [x8]
  423b84:	ldr	x8, [x8, #16]
  423b88:	ldr	x1, [sp, #256]
  423b8c:	sub	x0, x29, #0x100
  423b90:	stur	q0, [x29, #-256]
  423b94:	stur	x8, [x29, #-240]
  423b98:	bl	40b1e0 <strv_find@plt>
  423b9c:	cbz	x0, 423a84 <builtin_net_id+0x2f4>
  423ba0:	ldr	x0, [sp, #264]
  423ba4:	add	x1, sp, #0xe0
  423ba8:	bl	40a780 <sd_device_get_sysname@plt>
  423bac:	tbnz	w0, #31, 423a88 <builtin_net_id+0x2f8>
  423bb0:	ldr	x22, [sp, #224]
  423bb4:	mov	x0, x22
  423bb8:	bl	40aa40 <strlen@plt>
  423bbc:	and	x8, x0, #0xfffffffffffffffe
  423bc0:	cmp	x8, #0x8
  423bc4:	b.ne	423ed4 <builtin_net_id+0x744>  // b.any
  423bc8:	adrp	x1, 43c000 <worker_hash_op+0x7df8>
  423bcc:	mov	x23, x0
  423bd0:	add	x1, x1, #0xecc
  423bd4:	mov	x0, x22
  423bd8:	bl	40ad40 <strspn@plt>
  423bdc:	sub	x8, x23, #0x1
  423be0:	cmp	x0, x23
  423be4:	add	x9, sp, #0x10
  423be8:	csel	x8, x0, x8, cc  // cc = lo, ul, last
  423bec:	adrp	x2, 43c000 <worker_hash_op+0x7df8>
  423bf0:	add	x3, x22, x8
  423bf4:	add	x0, x9, #0x70
  423bf8:	add	x2, x2, #0xecf
  423bfc:	mov	w1, #0x10                  	// #16
  423c00:	str	x3, [sp, #224]
  423c04:	bl	40b050 <snprintf@plt>
  423c08:	cmp	w0, #0xf
  423c0c:	b.hi	42433c <builtin_net_id+0xbac>  // b.pmore
  423c10:	mov	w0, wzr
  423c14:	mov	w8, #0x5                   	// #5
  423c18:	str	w8, [sp, #16]
  423c1c:	b	423a88 <builtin_net_id+0x2f8>
  423c20:	add	x1, sp, #0xe0
  423c24:	mov	x0, x19
  423c28:	bl	40a860 <sd_device_get_syspath@plt>
  423c2c:	tbnz	w0, #31, 423adc <builtin_net_id+0x34c>
  423c30:	ldr	x0, [sp, #224]
  423c34:	adrp	x1, 43c000 <worker_hash_op+0x7df8>
  423c38:	add	x1, x1, #0xede
  423c3c:	add	x2, sp, #0x100
  423c40:	add	x3, sp, #0xf8
  423c44:	add	x4, sp, #0xdc
  423c48:	bl	40b580 <__isoc99_sscanf@plt>
  423c4c:	cmp	w0, #0x3
  423c50:	b.ne	423ecc <builtin_net_id+0x73c>  // b.any
  423c54:	ldr	w3, [sp, #248]
  423c58:	add	x8, sp, #0x10
  423c5c:	adrp	x2, 43c000 <worker_hash_op+0x7df8>
  423c60:	add	x0, x8, #0x80
  423c64:	add	x2, x2, #0xf00
  423c68:	mov	w1, #0x10                  	// #16
  423c6c:	bl	40b050 <snprintf@plt>
  423c70:	cmp	w0, #0x10
  423c74:	b.cs	42464c <builtin_net_id+0xebc>  // b.hs, b.nlast
  423c78:	mov	w0, wzr
  423c7c:	mov	w8, #0x6                   	// #6
  423c80:	str	w8, [sp, #16]
  423c84:	b	423adc <builtin_net_id+0x34c>
  423c88:	adrp	x1, 43c000 <worker_hash_op+0x7df8>
  423c8c:	add	x1, x1, #0xe20
  423c90:	sub	x2, x29, #0x100
  423c94:	mov	x0, x19
  423c98:	bl	40ace0 <sd_device_get_sysattr_value@plt>
  423c9c:	tbnz	w0, #31, 423954 <builtin_net_id+0x1c4>
  423ca0:	ldur	x0, [x29, #-256]
  423ca4:	adrp	x1, 43c000 <worker_hash_op+0x7df8>
  423ca8:	add	x1, x1, #0xe28
  423cac:	add	x2, sp, #0xe0
  423cb0:	add	x3, sp, #0x108
  423cb4:	add	x4, sp, #0x100
  423cb8:	add	x5, sp, #0xf8
  423cbc:	add	x6, sp, #0xdc
  423cc0:	add	x7, sp, #0xd8
  423cc4:	bl	40b580 <__isoc99_sscanf@plt>
  423cc8:	cmp	w0, #0x6
  423ccc:	b.ne	423918 <builtin_net_id+0x188>  // b.any
  423cd0:	ldp	w12, w8, [sp, #220]
  423cd4:	ldr	w9, [sp, #264]
  423cd8:	ldr	w10, [sp, #256]
  423cdc:	ldr	w11, [sp, #248]
  423ce0:	ldr	w13, [sp, #216]
  423ce4:	add	w14, w9, w8
  423ce8:	add	w14, w14, w10
  423cec:	add	w14, w14, w11
  423cf0:	add	w14, w14, w12
  423cf4:	cmn	w14, w13
  423cf8:	b.eq	423918 <builtin_net_id+0x188>  // b.none
  423cfc:	mov	w0, wzr
  423d00:	strb	w8, [sp, #20]
  423d04:	mov	w8, #0x1                   	// #1
  423d08:	strb	w9, [sp, #21]
  423d0c:	strb	w10, [sp, #22]
  423d10:	strb	w11, [sp, #23]
  423d14:	strb	w12, [sp, #24]
  423d18:	strb	w13, [sp, #25]
  423d1c:	strb	w8, [sp, #26]
  423d20:	b	423954 <builtin_net_id+0x1c4>
  423d24:	add	x1, sp, #0xe0
  423d28:	mov	x0, x19
  423d2c:	bl	40a860 <sd_device_get_syspath@plt>
  423d30:	tbnz	w0, #31, 423df8 <builtin_net_id+0x668>
  423d34:	ldr	x22, [sp, #224]
  423d38:	mov	x0, x22
  423d3c:	bl	40aa40 <strlen@plt>
  423d40:	cmp	x0, #0x1f
  423d44:	b.cc	423df4 <builtin_net_id+0x664>  // b.lo, b.ul, b.last
  423d48:	ldrb	w23, [x22, #30]
  423d4c:	adrp	x8, 43c000 <worker_hash_op+0x7df8>
  423d50:	adrp	x9, 43c000 <worker_hash_op+0x7df8>
  423d54:	add	x8, x8, #0xfba
  423d58:	add	x9, x9, #0xf6a
  423d5c:	cmp	w23, #0x3a
  423d60:	csel	x1, x9, x8, eq  // eq = none
  423d64:	add	x2, sp, #0x100
  423d68:	add	x3, sp, #0xf8
  423d6c:	add	x4, sp, #0xdc
  423d70:	add	x5, sp, #0xd8
  423d74:	mov	x0, x22
  423d78:	add	x24, sp, #0x100
  423d7c:	bl	40b580 <__isoc99_sscanf@plt>
  423d80:	cmp	w0, #0x4
  423d84:	b.ne	423df4 <builtin_net_id+0x664>  // b.any
  423d88:	adrp	x8, 43c000 <worker_hash_op+0x7df8>
  423d8c:	adrp	x9, 43c000 <worker_hash_op+0x7df8>
  423d90:	add	x8, x8, #0xfe5
  423d94:	add	x9, x9, #0xf95
  423d98:	cmp	w23, #0x3a
  423d9c:	csel	x1, x9, x8, eq  // eq = none
  423da0:	add	x0, sp, #0x100
  423da4:	bl	40ad40 <strspn@plt>
  423da8:	ldrb	w8, [x24, x0]
  423dac:	cbnz	w8, 423b58 <builtin_net_id+0x3c8>
  423db0:	add	x0, sp, #0x100
  423db4:	bl	40b590 <ascii_strlower@plt>
  423db8:	ldr	w4, [sp, #248]
  423dbc:	ldr	w5, [sp, #220]
  423dc0:	add	x8, sp, #0x10
  423dc4:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  423dc8:	add	x0, x8, #0x90
  423dcc:	add	x2, x2, #0x0
  423dd0:	add	x3, sp, #0x100
  423dd4:	mov	w1, #0x10                  	// #16
  423dd8:	bl	40b050 <snprintf@plt>
  423ddc:	cmp	w0, #0x10
  423de0:	b.cs	424670 <builtin_net_id+0xee0>  // b.hs, b.nlast
  423de4:	mov	w0, wzr
  423de8:	mov	w8, #0x7                   	// #7
  423dec:	str	w8, [sp, #16]
  423df0:	b	423df8 <builtin_net_id+0x668>
  423df4:	mov	w0, #0xffffffea            	// #-22
  423df8:	tbnz	w0, #31, 423e14 <builtin_net_id+0x684>
  423dfc:	ldr	w8, [sp, #16]
  423e00:	cmp	w8, #0x7
  423e04:	b.ne	423e14 <builtin_net_id+0x684>  // b.any
  423e08:	add	x8, sp, #0x10
  423e0c:	add	x4, x8, #0x90
  423e10:	b	423ef8 <builtin_net_id+0x768>
  423e14:	str	xzr, [sp, #264]
  423e18:	bl	429be8 <naming_scheme>
  423e1c:	ldrb	w8, [x0, #8]
  423e20:	tbnz	w8, #6, 423e2c <builtin_net_id+0x69c>
  423e24:	mov	w0, wzr
  423e28:	b	423ee0 <builtin_net_id+0x750>
  423e2c:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  423e30:	add	x1, x1, #0x77
  423e34:	sub	x3, x29, #0x100
  423e38:	mov	x0, x19
  423e3c:	mov	x2, xzr
  423e40:	bl	40b530 <sd_device_get_parent_with_subsystem_devtype@plt>
  423e44:	tbnz	w0, #31, 423ee0 <builtin_net_id+0x750>
  423e48:	ldur	x0, [x29, #-256]
  423e4c:	add	x1, sp, #0xe0
  423e50:	bl	40a780 <sd_device_get_sysname@plt>
  423e54:	tbnz	w0, #31, 423ee0 <builtin_net_id+0x750>
  423e58:	ldr	x0, [sp, #224]
  423e5c:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  423e60:	add	x1, x1, #0x81
  423e64:	add	x2, sp, #0x100
  423e68:	bl	40b580 <__isoc99_sscanf@plt>
  423e6c:	cmp	w0, #0x1
  423e70:	b.ne	423ec4 <builtin_net_id+0x734>  // b.any
  423e74:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  423e78:	add	x1, x1, #0x8d
  423e7c:	add	x2, sp, #0x108
  423e80:	mov	x0, x19
  423e84:	bl	40ace0 <sd_device_get_sysattr_value@plt>
  423e88:	tbnz	w0, #31, 423ee0 <builtin_net_id+0x750>
  423e8c:	ldr	w3, [sp, #256]
  423e90:	ldr	x4, [sp, #264]
  423e94:	add	x8, sp, #0x10
  423e98:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  423e9c:	add	x0, x8, #0xa0
  423ea0:	add	x2, x2, #0x9c
  423ea4:	mov	w1, #0x10                  	// #16
  423ea8:	bl	40b050 <snprintf@plt>
  423eac:	cmp	w0, #0xf
  423eb0:	b.hi	423edc <builtin_net_id+0x74c>  // b.pmore
  423eb4:	mov	w0, wzr
  423eb8:	mov	w8, #0x8                   	// #8
  423ebc:	str	w8, [sp, #16]
  423ec0:	b	423ee0 <builtin_net_id+0x750>
  423ec4:	mov	w0, #0xffffffea            	// #-22
  423ec8:	b	423ee0 <builtin_net_id+0x750>
  423ecc:	mov	w0, #0xffffffea            	// #-22
  423ed0:	b	423adc <builtin_net_id+0x34c>
  423ed4:	mov	w0, #0xffffffea            	// #-22
  423ed8:	b	423a88 <builtin_net_id+0x2f8>
  423edc:	mov	w0, #0xffffff97            	// #-105
  423ee0:	tbnz	w0, #31, 423f50 <builtin_net_id+0x7c0>
  423ee4:	ldr	w8, [sp, #16]
  423ee8:	cmp	w8, #0x8
  423eec:	b.ne	423f50 <builtin_net_id+0x7c0>  // b.any
  423ef0:	add	x8, sp, #0x10
  423ef4:	add	x4, x8, #0xa0
  423ef8:	adrp	x2, 43c000 <worker_hash_op+0x7df8>
  423efc:	add	x2, x2, #0xdb8
  423f00:	sub	x0, x29, #0x100
  423f04:	mov	w1, #0x10                  	// #16
  423f08:	mov	x3, x21
  423f0c:	bl	40b050 <snprintf@plt>
  423f10:	cmp	w0, #0xf
  423f14:	b.hi	423f30 <builtin_net_id+0x7a0>  // b.pmore
  423f18:	adrp	x2, 43c000 <worker_hash_op+0x7df8>
  423f1c:	and	w1, w20, #0x1
  423f20:	add	x2, x2, #0xdbd
  423f24:	sub	x3, x29, #0x100
  423f28:	mov	x0, x19
  423f2c:	bl	420aec <udev_builtin_add_property>
  423f30:	mov	w0, wzr
  423f34:	add	sp, sp, #0x210
  423f38:	ldp	x20, x19, [sp, #64]
  423f3c:	ldp	x22, x21, [sp, #48]
  423f40:	ldp	x24, x23, [sp, #32]
  423f44:	ldp	x28, x25, [sp, #16]
  423f48:	ldp	x29, x30, [sp], #80
  423f4c:	ret
  423f50:	movi	v0.2d, #0x0
  423f54:	add	x1, sp, #0xf8
  423f58:	mov	x0, x19
  423f5c:	stp	xzr, xzr, [sp, #224]
  423f60:	stp	q0, q0, [x29, #-112]
  423f64:	stp	q0, q0, [x29, #-144]
  423f68:	stp	q0, q0, [x29, #-176]
  423f6c:	stp	q0, q0, [x29, #-208]
  423f70:	stp	q0, q0, [x29, #-240]
  423f74:	stur	q0, [x29, #-256]
  423f78:	str	xzr, [sp, #240]
  423f7c:	bl	40ab60 <sd_device_get_parent@plt>
  423f80:	tbnz	w0, #31, 423fd4 <builtin_net_id+0x844>
  423f84:	ldr	x0, [sp, #248]
  423f88:	str	x0, [sp, #264]
  423f8c:	cbz	x0, 423fcc <builtin_net_id+0x83c>
  423f90:	adrp	x22, 43c000 <worker_hash_op+0x7df8>
  423f94:	add	x22, x22, #0xed3
  423f98:	add	x1, sp, #0x100
  423f9c:	bl	40a850 <sd_device_get_subsystem@plt>
  423fa0:	tbnz	w0, #31, 424254 <builtin_net_id+0xac4>
  423fa4:	ldr	x0, [sp, #256]
  423fa8:	mov	x1, x22
  423fac:	bl	40a930 <strcmp@plt>
  423fb0:	cbnz	w0, 424254 <builtin_net_id+0xac4>
  423fb4:	ldr	x0, [sp, #264]
  423fb8:	add	x1, sp, #0x108
  423fbc:	bl	40ab60 <sd_device_get_parent@plt>
  423fc0:	tbnz	w0, #31, 423fcc <builtin_net_id+0x83c>
  423fc4:	ldr	x0, [sp, #264]
  423fc8:	cbnz	x0, 423f98 <builtin_net_id+0x808>
  423fcc:	str	xzr, [sp, #248]
  423fd0:	mov	w0, #0xfffffffe            	// #-2
  423fd4:	tbnz	w0, #31, 423f30 <builtin_net_id+0x7a0>
  423fd8:	ldr	w8, [sp, #16]
  423fdc:	cmp	w8, #0x1
  423fe0:	b.ne	4240dc <builtin_net_id+0x94c>  // b.any
  423fe4:	ldrb	w8, [sp, #72]
  423fe8:	cbz	w8, 42402c <builtin_net_id+0x89c>
  423fec:	add	x8, sp, #0x10
  423ff0:	adrp	x2, 43c000 <worker_hash_op+0x7df8>
  423ff4:	add	x4, x8, #0x38
  423ff8:	add	x2, x2, #0xdb8
  423ffc:	sub	x0, x29, #0x100
  424000:	mov	w1, #0x10                  	// #16
  424004:	mov	x3, x21
  424008:	bl	40b050 <snprintf@plt>
  42400c:	cmp	w0, #0xf
  424010:	b.hi	42402c <builtin_net_id+0x89c>  // b.pmore
  424014:	adrp	x2, 43c000 <worker_hash_op+0x7df8>
  424018:	and	w1, w20, #0x1
  42401c:	add	x2, x2, #0xddf
  424020:	sub	x3, x29, #0x100
  424024:	mov	x0, x19
  424028:	bl	420aec <udev_builtin_add_property>
  42402c:	ldr	x8, [sp, #88]
  424030:	cbz	x8, 424084 <builtin_net_id+0x8f4>
  424034:	bl	429be8 <naming_scheme>
  424038:	ldr	w8, [x0, #8]
  42403c:	ldr	x4, [sp, #88]
  424040:	adrp	x9, 438000 <worker_hash_op+0x3df8>
  424044:	add	x9, x9, #0xed8
  424048:	tst	w8, #0x80
  42404c:	adrp	x2, 43c000 <worker_hash_op+0x7df8>
  424050:	csel	x3, x21, x9, eq  // eq = none
  424054:	add	x2, x2, #0xdb8
  424058:	sub	x0, x29, #0x100
  42405c:	mov	w1, #0x10                  	// #16
  424060:	bl	40b050 <snprintf@plt>
  424064:	cmp	w0, #0xf
  424068:	b.hi	424084 <builtin_net_id+0x8f4>  // b.pmore
  42406c:	adrp	x2, 43c000 <worker_hash_op+0x7df8>
  424070:	and	w1, w20, #0x1
  424074:	add	x2, x2, #0xdf3
  424078:	sub	x3, x29, #0x100
  42407c:	mov	x0, x19
  424080:	bl	420aec <udev_builtin_add_property>
  424084:	ldrb	w8, [sp, #56]
  424088:	add	x22, sp, #0x10
  42408c:	cbz	w8, 4240cc <builtin_net_id+0x93c>
  424090:	adrp	x2, 43c000 <worker_hash_op+0x7df8>
  424094:	add	x4, x22, #0x28
  424098:	add	x2, x2, #0xdb8
  42409c:	sub	x0, x29, #0x100
  4240a0:	mov	w1, #0x10                  	// #16
  4240a4:	mov	x3, x21
  4240a8:	bl	40b050 <snprintf@plt>
  4240ac:	cmp	w0, #0xf
  4240b0:	b.hi	4240cc <builtin_net_id+0x93c>  // b.pmore
  4240b4:	adrp	x2, 43c000 <worker_hash_op+0x7df8>
  4240b8:	and	w1, w20, #0x1
  4240bc:	add	x2, x2, #0xdbd
  4240c0:	sub	x3, x29, #0x100
  4240c4:	mov	x0, x19
  4240c8:	bl	420aec <udev_builtin_add_property>
  4240cc:	ldrb	w8, [sp, #40]
  4240d0:	cbz	w8, 423f30 <builtin_net_id+0x7a0>
  4240d4:	add	x4, x22, #0x18
  4240d8:	b	423af4 <builtin_net_id+0x364>
  4240dc:	adrp	x1, 439000 <worker_hash_op+0x4df8>
  4240e0:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  4240e4:	add	x1, x1, #0x87f
  4240e8:	add	x2, x2, #0x1a3
  4240ec:	add	x3, sp, #0xe0
  4240f0:	mov	x0, x19
  4240f4:	bl	40b530 <sd_device_get_parent_with_subsystem_devtype@plt>
  4240f8:	tbnz	w0, #31, 4242a8 <builtin_net_id+0xb18>
  4240fc:	ldr	x0, [sp, #224]
  424100:	add	x1, sp, #0x100
  424104:	bl	40a780 <sd_device_get_sysname@plt>
  424108:	tbnz	w0, #31, 4242a8 <builtin_net_id+0xb18>
  42410c:	ldr	x2, [sp, #256]
  424110:	sub	x0, x29, #0x100
  424114:	mov	w1, #0x100                 	// #256
  424118:	bl	40ac50 <strscpy@plt>
  42411c:	sub	x0, x29, #0x100
  424120:	mov	w1, #0x2d                  	// #45
  424124:	bl	40a7d0 <strchr@plt>
  424128:	str	x0, [sp, #264]
  42412c:	cbz	x0, 4242a4 <builtin_net_id+0xb14>
  424130:	add	x24, x0, #0x1
  424134:	mov	w1, #0x3a                  	// #58
  424138:	mov	x0, x24
  42413c:	bl	40a7d0 <strchr@plt>
  424140:	str	x0, [sp, #264]
  424144:	cbz	x0, 4242a4 <builtin_net_id+0xb14>
  424148:	strb	wzr, [x0]
  42414c:	ldr	x8, [sp, #264]
  424150:	mov	w1, #0x2e                  	// #46
  424154:	add	x23, x8, #0x1
  424158:	mov	x0, x23
  42415c:	bl	40a7d0 <strchr@plt>
  424160:	str	x0, [sp, #264]
  424164:	cbz	x0, 4242a4 <builtin_net_id+0xb14>
  424168:	strb	wzr, [x0]
  42416c:	ldr	x8, [sp, #264]
  424170:	mov	w1, #0x2e                  	// #46
  424174:	mov	x0, x24
  424178:	str	x24, [sp, #264]
  42417c:	add	x22, x8, #0x1
  424180:	bl	40a7d0 <strchr@plt>
  424184:	str	x0, [sp, #264]
  424188:	cbz	x0, 4241a8 <builtin_net_id+0xa18>
  42418c:	mov	w25, #0x75                  	// #117
  424190:	strb	w25, [x0]
  424194:	ldr	x0, [sp, #264]
  424198:	mov	w1, #0x2e                  	// #46
  42419c:	bl	40a7d0 <strchr@plt>
  4241a0:	str	x0, [sp, #264]
  4241a4:	cbnz	x0, 424190 <builtin_net_id+0xa00>
  4241a8:	add	x8, sp, #0x10
  4241ac:	adrp	x2, 43a000 <worker_hash_op+0x5df8>
  4241b0:	add	x8, x8, #0x50
  4241b4:	add	x2, x2, #0x5b5
  4241b8:	add	x0, sp, #0x108
  4241bc:	mov	w1, #0x10                  	// #16
  4241c0:	mov	x3, x24
  4241c4:	mov	x4, xzr
  4241c8:	str	x8, [sp, #264]
  4241cc:	bl	40ad00 <strpcpyl@plt>
  4241d0:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  4241d4:	mov	x24, x0
  4241d8:	add	x1, x1, #0xbc
  4241dc:	mov	x0, x23
  4241e0:	bl	40a930 <strcmp@plt>
  4241e4:	cbz	w0, 424208 <builtin_net_id+0xa78>
  4241e8:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  4241ec:	add	x2, x2, #0xf2b
  4241f0:	add	x0, sp, #0x108
  4241f4:	mov	w1, #0x10                  	// #16
  4241f8:	mov	x3, x23
  4241fc:	mov	x4, xzr
  424200:	bl	40ad00 <strpcpyl@plt>
  424204:	mov	x24, x0
  424208:	adrp	x1, 439000 <worker_hash_op+0x4df8>
  42420c:	add	x1, x1, #0x744
  424210:	mov	x0, x22
  424214:	bl	40a930 <strcmp@plt>
  424218:	cbz	w0, 42423c <builtin_net_id+0xaac>
  42421c:	adrp	x2, 43a000 <worker_hash_op+0x5df8>
  424220:	add	x2, x2, #0xdc6
  424224:	add	x0, sp, #0x108
  424228:	mov	w1, #0x10                  	// #16
  42422c:	mov	x3, x22
  424230:	mov	x4, xzr
  424234:	bl	40ad00 <strpcpyl@plt>
  424238:	mov	x24, x0
  42423c:	cbz	x24, 4244b8 <builtin_net_id+0xd28>
  424240:	mov	w0, wzr
  424244:	mov	w8, #0x2                   	// #2
  424248:	str	w8, [sp, #16]
  42424c:	tbz	w0, #31, 4242ac <builtin_net_id+0xb1c>
  424250:	b	4244c0 <builtin_net_id+0xd30>
  424254:	ldr	x0, [sp, #264]
  424258:	str	x0, [sp, #248]
  42425c:	cbz	x0, 423fd0 <builtin_net_id+0x840>
  424260:	add	x1, sp, #0x108
  424264:	bl	40a850 <sd_device_get_subsystem@plt>
  424268:	tbnz	w0, #31, 424280 <builtin_net_id+0xaf0>
  42426c:	ldr	x1, [sp, #264]
  424270:	adrp	x0, 43d000 <worker_hash_op+0x8df8>
  424274:	add	x0, x0, #0xa3
  424278:	bl	40a930 <strcmp@plt>
  42427c:	cbz	w0, 424344 <builtin_net_id+0xbb4>
  424280:	add	x8, sp, #0x10
  424284:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  424288:	add	x3, x8, #0x10
  42428c:	add	x1, x1, #0xa3
  424290:	mov	x0, x19
  424294:	mov	x2, xzr
  424298:	bl	40b530 <sd_device_get_parent_with_subsystem_devtype@plt>
  42429c:	tbz	w0, #31, 424354 <builtin_net_id+0xbc4>
  4242a0:	b	423fd4 <builtin_net_id+0x844>
  4242a4:	mov	w0, #0xffffffea            	// #-22
  4242a8:	tbnz	w0, #31, 4244c0 <builtin_net_id+0xd30>
  4242ac:	ldr	w8, [sp, #16]
  4242b0:	cmp	w8, #0x2
  4242b4:	b.ne	4244c0 <builtin_net_id+0xd30>  // b.any
  4242b8:	ldrb	w8, [sp, #56]
  4242bc:	add	x22, sp, #0x10
  4242c0:	cbz	w8, 424304 <builtin_net_id+0xb74>
  4242c4:	adrp	x2, 43c000 <worker_hash_op+0x7df8>
  4242c8:	add	x4, x22, #0x28
  4242cc:	add	x5, x22, #0x50
  4242d0:	add	x2, x2, #0xe08
  4242d4:	sub	x0, x29, #0x100
  4242d8:	mov	w1, #0x10                  	// #16
  4242dc:	mov	x3, x21
  4242e0:	bl	40b050 <snprintf@plt>
  4242e4:	cmp	w0, #0xf
  4242e8:	b.hi	424304 <builtin_net_id+0xb74>  // b.pmore
  4242ec:	adrp	x2, 43c000 <worker_hash_op+0x7df8>
  4242f0:	and	w1, w20, #0x1
  4242f4:	add	x2, x2, #0xdbd
  4242f8:	sub	x3, x29, #0x100
  4242fc:	mov	x0, x19
  424300:	bl	420aec <udev_builtin_add_property>
  424304:	ldrb	w8, [sp, #40]
  424308:	cbz	w8, 423f30 <builtin_net_id+0x7a0>
  42430c:	add	x8, sp, #0x10
  424310:	adrp	x2, 43c000 <worker_hash_op+0x7df8>
  424314:	add	x4, x22, #0x18
  424318:	add	x5, x8, #0x50
  42431c:	add	x2, x2, #0xe08
  424320:	sub	x0, x29, #0x100
  424324:	mov	w1, #0x10                  	// #16
  424328:	mov	x3, x21
  42432c:	bl	40b050 <snprintf@plt>
  424330:	cmp	w0, #0xf
  424334:	b.ls	423b14 <builtin_net_id+0x384>  // b.plast
  424338:	b	423f30 <builtin_net_id+0x7a0>
  42433c:	mov	w0, wzr
  424340:	b	423a88 <builtin_net_id+0x2f8>
  424344:	ldr	x8, [sp, #248]
  424348:	mov	w9, #0x1                   	// #1
  42434c:	str	w9, [sp, #16]
  424350:	str	x8, [sp, #32]
  424354:	bl	429be8 <naming_scheme>
  424358:	ldrb	w8, [x0, #8]
  42435c:	tbz	w8, #0, 424498 <builtin_net_id+0xd08>
  424360:	add	x1, sp, #0x10
  424364:	add	x2, sp, #0xe0
  424368:	mov	x0, x19
  42436c:	bl	4246b8 <get_virtfn_info>
  424370:	tbnz	w0, #31, 424498 <builtin_net_id+0xd08>
  424374:	ldr	x8, [sp, #224]
  424378:	sub	x1, x29, #0x100
  42437c:	mov	x0, x19
  424380:	sub	x25, x29, #0x100
  424384:	stur	x8, [x29, #-240]
  424388:	bl	424990 <dev_pci_onboard>
  42438c:	sub	x1, x29, #0x100
  424390:	mov	x0, x19
  424394:	bl	424afc <dev_pci_slot>
  424398:	ldurb	w8, [x29, #-200]
  42439c:	cbz	w8, 4243e8 <builtin_net_id+0xc58>
  4243a0:	add	x22, x25, #0x38
  4243a4:	mov	x0, x22
  4243a8:	bl	40aa40 <strlen@plt>
  4243ac:	add	x8, sp, #0xe0
  4243b0:	add	x23, x8, #0x8
  4243b4:	mov	x24, x0
  4243b8:	mov	x0, x23
  4243bc:	bl	40aa40 <strlen@plt>
  4243c0:	add	x8, x0, x24
  4243c4:	cmp	x8, #0xf
  4243c8:	b.hi	4243e8 <builtin_net_id+0xc58>  // b.pmore
  4243cc:	add	x8, sp, #0x10
  4243d0:	add	x0, x8, #0x38
  4243d4:	mov	w1, #0x10                  	// #16
  4243d8:	mov	x2, x22
  4243dc:	mov	x3, x23
  4243e0:	mov	x4, xzr
  4243e4:	bl	40b1a0 <strscpyl@plt>
  4243e8:	ldurb	w8, [x29, #-232]
  4243ec:	cbz	w8, 424438 <builtin_net_id+0xca8>
  4243f0:	add	x22, x25, #0x18
  4243f4:	mov	x0, x22
  4243f8:	bl	40aa40 <strlen@plt>
  4243fc:	add	x8, sp, #0xe0
  424400:	add	x23, x8, #0x8
  424404:	mov	x24, x0
  424408:	mov	x0, x23
  42440c:	bl	40aa40 <strlen@plt>
  424410:	add	x8, x0, x24
  424414:	cmp	x8, #0xf
  424418:	b.hi	424438 <builtin_net_id+0xca8>  // b.pmore
  42441c:	add	x8, sp, #0x10
  424420:	add	x0, x8, #0x18
  424424:	mov	w1, #0x10                  	// #16
  424428:	mov	x2, x22
  42442c:	mov	x3, x23
  424430:	mov	x4, xzr
  424434:	bl	40b1a0 <strscpyl@plt>
  424438:	ldurb	w8, [x29, #-216]
  42443c:	cbz	w8, 42448c <builtin_net_id+0xcfc>
  424440:	sub	x8, x29, #0x100
  424444:	add	x22, x8, #0x28
  424448:	mov	x0, x22
  42444c:	bl	40aa40 <strlen@plt>
  424450:	add	x8, sp, #0xe0
  424454:	add	x23, x8, #0x8
  424458:	mov	x24, x0
  42445c:	mov	x0, x23
  424460:	bl	40aa40 <strlen@plt>
  424464:	add	x8, x0, x24
  424468:	cmp	x8, #0xf
  42446c:	b.hi	42448c <builtin_net_id+0xcfc>  // b.pmore
  424470:	add	x8, sp, #0x10
  424474:	add	x0, x8, #0x28
  424478:	mov	w1, #0x10                  	// #16
  42447c:	mov	x2, x22
  424480:	mov	x3, x23
  424484:	mov	x4, xzr
  424488:	bl	40b1a0 <strscpyl@plt>
  42448c:	ldr	x0, [sp, #224]
  424490:	bl	40a6e0 <sd_device_unref@plt>
  424494:	b	4244b0 <builtin_net_id+0xd20>
  424498:	add	x1, sp, #0x10
  42449c:	mov	x0, x19
  4244a0:	bl	424990 <dev_pci_onboard>
  4244a4:	add	x1, sp, #0x10
  4244a8:	mov	x0, x19
  4244ac:	bl	424afc <dev_pci_slot>
  4244b0:	mov	w0, wzr
  4244b4:	b	423fd4 <builtin_net_id+0x844>
  4244b8:	mov	w0, #0xffffffdc            	// #-36
  4244bc:	tbz	w0, #31, 4242ac <builtin_net_id+0xb1c>
  4244c0:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  4244c4:	add	x1, x1, #0x1e0
  4244c8:	sub	x3, x29, #0x100
  4244cc:	mov	x0, x19
  4244d0:	mov	x2, xzr
  4244d4:	bl	40b530 <sd_device_get_parent_with_subsystem_devtype@plt>
  4244d8:	tbnz	w0, #31, 424540 <builtin_net_id+0xdb0>
  4244dc:	ldur	x0, [x29, #-256]
  4244e0:	add	x1, sp, #0xe0
  4244e4:	bl	40a780 <sd_device_get_sysname@plt>
  4244e8:	tbnz	w0, #31, 424540 <builtin_net_id+0xdb0>
  4244ec:	ldr	x0, [sp, #224]
  4244f0:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  4244f4:	add	x1, x1, #0x1e5
  4244f8:	add	x2, sp, #0x108
  4244fc:	bl	40b580 <__isoc99_sscanf@plt>
  424500:	cmp	w0, #0x1
  424504:	b.ne	424548 <builtin_net_id+0xdb8>  // b.any
  424508:	ldr	w3, [sp, #264]
  42450c:	cbz	w3, 424530 <builtin_net_id+0xda0>
  424510:	add	x8, sp, #0x10
  424514:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  424518:	add	x0, x8, #0x60
  42451c:	add	x2, x2, #0x1f0
  424520:	mov	w1, #0x10                  	// #16
  424524:	bl	40b050 <snprintf@plt>
  424528:	cmp	w0, #0x10
  42452c:	b.cs	424694 <builtin_net_id+0xf04>  // b.hs, b.nlast
  424530:	mov	w8, wzr
  424534:	mov	w9, #0x3                   	// #3
  424538:	str	w9, [sp, #16]
  42453c:	b	42454c <builtin_net_id+0xdbc>
  424540:	mov	w8, w0
  424544:	b	42454c <builtin_net_id+0xdbc>
  424548:	mov	w8, #0xffffffea            	// #-22
  42454c:	mov	w0, wzr
  424550:	tbnz	w8, #31, 423f34 <builtin_net_id+0x7a4>
  424554:	ldr	w8, [sp, #16]
  424558:	cmp	w8, #0x3
  42455c:	b.ne	423f34 <builtin_net_id+0x7a4>  // b.any
  424560:	ldrb	w8, [sp, #56]
  424564:	add	x22, sp, #0x10
  424568:	cbz	w8, 4245ac <builtin_net_id+0xe1c>
  42456c:	adrp	x2, 43c000 <worker_hash_op+0x7df8>
  424570:	add	x4, x22, #0x28
  424574:	add	x5, x22, #0x60
  424578:	add	x2, x2, #0xe08
  42457c:	sub	x0, x29, #0x100
  424580:	mov	w1, #0x10                  	// #16
  424584:	mov	x3, x21
  424588:	bl	40b050 <snprintf@plt>
  42458c:	cmp	w0, #0xf
  424590:	b.hi	4245ac <builtin_net_id+0xe1c>  // b.pmore
  424594:	adrp	x2, 43c000 <worker_hash_op+0x7df8>
  424598:	and	w1, w20, #0x1
  42459c:	add	x2, x2, #0xdbd
  4245a0:	sub	x3, x29, #0x100
  4245a4:	mov	x0, x19
  4245a8:	bl	420aec <udev_builtin_add_property>
  4245ac:	ldrb	w8, [sp, #40]
  4245b0:	cbz	w8, 423f30 <builtin_net_id+0x7a0>
  4245b4:	add	x8, sp, #0x10
  4245b8:	adrp	x2, 43c000 <worker_hash_op+0x7df8>
  4245bc:	add	x4, x22, #0x18
  4245c0:	add	x5, x8, #0x60
  4245c4:	add	x2, x2, #0xe08
  4245c8:	sub	x0, x29, #0x100
  4245cc:	mov	w1, #0x10                  	// #16
  4245d0:	mov	x3, x21
  4245d4:	bl	40b050 <snprintf@plt>
  4245d8:	cbnz	w0, 423b14 <builtin_net_id+0x384>
  4245dc:	b	423f30 <builtin_net_id+0x7a0>
  4245e0:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  4245e4:	adrp	x2, 43c000 <worker_hash_op+0x7df8>
  4245e8:	adrp	x4, 43c000 <worker_hash_op+0x7df8>
  4245ec:	add	x1, x1, #0x4f0
  4245f0:	add	x2, x2, #0xd54
  4245f4:	add	x4, x4, #0xe8b
  4245f8:	mov	w0, #0x1                   	// #1
  4245fc:	mov	w3, #0x268                 	// #616
  424600:	bl	40a630 <log_assert_failed_realm@plt>
  424604:	adrp	x1, 43c000 <worker_hash_op+0x7df8>
  424608:	adrp	x2, 43c000 <worker_hash_op+0x7df8>
  42460c:	adrp	x4, 43c000 <worker_hash_op+0x7df8>
  424610:	add	x1, x1, #0xd2e
  424614:	add	x2, x2, #0xd54
  424618:	add	x4, x4, #0xd73
  42461c:	mov	w0, #0x1                   	// #1
  424620:	mov	w3, #0x33a                 	// #826
  424624:	bl	40a630 <log_assert_failed_realm@plt>
  424628:	adrp	x1, 43c000 <worker_hash_op+0x7df8>
  42462c:	adrp	x2, 43c000 <worker_hash_op+0x7df8>
  424630:	adrp	x4, 43c000 <worker_hash_op+0x7df8>
  424634:	add	x1, x1, #0xd2e
  424638:	add	x2, x2, #0xd54
  42463c:	add	x4, x4, #0xe57
  424640:	mov	w0, #0x1                   	// #1
  424644:	mov	w3, #0x2ff                 	// #767
  424648:	bl	40a630 <log_assert_failed_realm@plt>
  42464c:	adrp	x1, 43c000 <worker_hash_op+0x7df8>
  424650:	adrp	x2, 43c000 <worker_hash_op+0x7df8>
  424654:	adrp	x4, 43c000 <worker_hash_op+0x7df8>
  424658:	add	x1, x1, #0xf04
  42465c:	add	x2, x2, #0xd54
  424660:	add	x4, x4, #0xf33
  424664:	mov	w0, #0x1                   	// #1
  424668:	mov	w3, #0x190                 	// #400
  42466c:	bl	40a630 <log_assert_failed_realm@plt>
  424670:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  424674:	adrp	x2, 43c000 <worker_hash_op+0x7df8>
  424678:	adrp	x4, 43d000 <worker_hash_op+0x8df8>
  42467c:	add	x1, x1, #0x9
  424680:	add	x2, x2, #0xd54
  424684:	add	x4, x4, #0x3d
  424688:	mov	w0, #0x1                   	// #1
  42468c:	mov	w3, #0x1cd                 	// #461
  424690:	bl	40a630 <log_assert_failed_realm@plt>
  424694:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  424698:	adrp	x2, 43c000 <worker_hash_op+0x7df8>
  42469c:	adrp	x4, 43d000 <worker_hash_op+0x8df8>
  4246a0:	add	x1, x1, #0x1f4
  4246a4:	add	x2, x2, #0xd54
  4246a8:	add	x4, x4, #0x1b1
  4246ac:	mov	w0, #0x1                   	// #1
  4246b0:	mov	w3, #0x25b                 	// #603
  4246b4:	bl	40a630 <log_assert_failed_realm@plt>

00000000004246b8 <get_virtfn_info>:
  4246b8:	stp	x29, x30, [sp, #-64]!
  4246bc:	stp	x24, x23, [sp, #16]
  4246c0:	stp	x22, x21, [sp, #32]
  4246c4:	stp	x20, x19, [sp, #48]
  4246c8:	mov	x29, sp
  4246cc:	sub	sp, sp, #0x30
  4246d0:	stur	xzr, [x29, #-8]
  4246d4:	stp	xzr, xzr, [x29, #-32]
  4246d8:	cbz	x0, 424900 <get_virtfn_info+0x248>
  4246dc:	cbz	x1, 424924 <get_virtfn_info+0x26c>
  4246e0:	mov	x19, x2
  4246e4:	cbz	x2, 424948 <get_virtfn_info+0x290>
  4246e8:	ldr	x0, [x1, #16]
  4246ec:	sub	x1, x29, #0x10
  4246f0:	bl	40a860 <sd_device_get_syspath@plt>
  4246f4:	tbnz	w0, #31, 424898 <get_virtfn_info+0x1e0>
  4246f8:	ldur	x21, [x29, #-16]
  4246fc:	cbz	x21, 42474c <get_virtfn_info+0x94>
  424700:	mov	x0, x21
  424704:	bl	40aa40 <strlen@plt>
  424708:	add	x8, x0, #0x8
  42470c:	cmp	x8, #0x400, lsl #12
  424710:	b.hi	42496c <get_virtfn_info+0x2b4>  // b.pmore
  424714:	add	x8, x8, #0xf
  424718:	mov	x9, sp
  42471c:	and	x8, x8, #0xfffffffffffffff0
  424720:	sub	x20, x9, x8
  424724:	mov	sp, x20
  424728:	mov	x0, x20
  42472c:	mov	x1, x21
  424730:	bl	40ab70 <stpcpy@plt>
  424734:	mov	x8, #0x702f                	// #28719
  424738:	movk	x8, #0x7968, lsl #16
  42473c:	movk	x8, #0x6673, lsl #32
  424740:	movk	x8, #0x6e, lsl #48
  424744:	str	x8, [x0], #7
  424748:	b	424758 <get_virtfn_info+0xa0>
  42474c:	sub	x20, sp, #0x10
  424750:	mov	sp, x20
  424754:	mov	x0, x20
  424758:	strb	wzr, [x0]
  42475c:	sub	x3, x29, #0x18
  424760:	mov	x0, x20
  424764:	mov	x1, xzr
  424768:	mov	w2, wzr
  42476c:	mov	x4, xzr
  424770:	bl	40b5a0 <chase_symlinks@plt>
  424774:	tbnz	w0, #31, 424898 <get_virtfn_info+0x1e0>
  424778:	ldur	x1, [x29, #-24]
  42477c:	sub	x0, x29, #0x8
  424780:	bl	40b5b0 <sd_device_new_from_syspath@plt>
  424784:	tbnz	w0, #31, 424898 <get_virtfn_info+0x1e0>
  424788:	ldur	x0, [x29, #-24]
  42478c:	bl	40af80 <opendir@plt>
  424790:	mov	x20, x0
  424794:	bl	40a3e0 <__errno_location@plt>
  424798:	mov	x21, x0
  42479c:	cbz	x20, 4248d4 <get_virtfn_info+0x21c>
  4247a0:	mov	x0, x20
  4247a4:	str	wzr, [x21]
  4247a8:	bl	40af90 <readdir64@plt>
  4247ac:	cbz	x0, 42486c <get_virtfn_info+0x1b4>
  4247b0:	adrp	x22, 43d000 <worker_hash_op+0x8df8>
  4247b4:	mov	x24, x0
  4247b8:	add	x22, x22, #0xf1
  4247bc:	b	4247e0 <get_virtfn_info+0x128>
  4247c0:	mov	x23, xzr
  4247c4:	mov	x0, x23
  4247c8:	bl	40a320 <free@plt>
  4247cc:	mov	x0, x20
  4247d0:	str	wzr, [x21]
  4247d4:	bl	40af90 <readdir64@plt>
  4247d8:	mov	x24, x0
  4247dc:	cbz	x0, 42486c <get_virtfn_info+0x1b4>
  4247e0:	add	x23, x24, #0x13
  4247e4:	mov	w2, #0x6                   	// #6
  4247e8:	mov	x0, x23
  4247ec:	mov	x1, x22
  4247f0:	bl	40a6a0 <strncmp@plt>
  4247f4:	cbnz	w0, 4247c0 <get_virtfn_info+0x108>
  4247f8:	ldur	x0, [x29, #-24]
  4247fc:	mov	x2, #0xffffffffffffffff    	// #-1
  424800:	mov	x1, x23
  424804:	bl	40ae00 <path_join_internal@plt>
  424808:	mov	x23, x0
  42480c:	cbz	x0, 4248e0 <get_virtfn_info+0x228>
  424810:	sub	x3, x29, #0x20
  424814:	mov	x0, x23
  424818:	mov	x1, xzr
  42481c:	mov	w2, wzr
  424820:	mov	x4, xzr
  424824:	bl	40b5a0 <chase_symlinks@plt>
  424828:	tbnz	w0, #31, 4247c4 <get_virtfn_info+0x10c>
  42482c:	ldur	x0, [x29, #-16]
  424830:	ldur	x1, [x29, #-32]
  424834:	bl	40a930 <strcmp@plt>
  424838:	cbnz	w0, 4247c4 <get_virtfn_info+0x10c>
  42483c:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  424840:	add	x3, x24, #0x19
  424844:	add	x2, x2, #0xf8
  424848:	sub	x0, x29, #0x30
  42484c:	mov	w1, #0x10                  	// #16
  424850:	bl	40b050 <snprintf@plt>
  424854:	cmp	w0, #0x10
  424858:	b.cs	4248e8 <get_virtfn_info+0x230>  // b.hs, b.nlast
  42485c:	mov	x0, x23
  424860:	bl	40a320 <free@plt>
  424864:	ldurb	w8, [x29, #-48]
  424868:	cbz	w8, 4248f8 <get_virtfn_info+0x240>
  42486c:	ldur	x8, [x29, #-8]
  424870:	stur	xzr, [x29, #-8]
  424874:	sub	x1, x29, #0x30
  424878:	mov	w2, #0x10                  	// #16
  42487c:	str	x8, [x19], #8
  424880:	mov	x0, x19
  424884:	bl	40b5c0 <strncpy@plt>
  424888:	mov	w21, wzr
  42488c:	mov	x0, x20
  424890:	bl	40afc0 <closedir@plt>
  424894:	b	42489c <get_virtfn_info+0x1e4>
  424898:	mov	w21, w0
  42489c:	ldur	x0, [x29, #-32]
  4248a0:	bl	40a320 <free@plt>
  4248a4:	ldur	x0, [x29, #-24]
  4248a8:	bl	40a320 <free@plt>
  4248ac:	ldur	x0, [x29, #-8]
  4248b0:	cbz	x0, 4248b8 <get_virtfn_info+0x200>
  4248b4:	bl	40a6e0 <sd_device_unref@plt>
  4248b8:	mov	w0, w21
  4248bc:	mov	sp, x29
  4248c0:	ldp	x20, x19, [sp, #48]
  4248c4:	ldp	x22, x21, [sp, #32]
  4248c8:	ldp	x24, x23, [sp, #16]
  4248cc:	ldp	x29, x30, [sp], #64
  4248d0:	ret
  4248d4:	ldr	w8, [x21]
  4248d8:	neg	w21, w8
  4248dc:	b	42489c <get_virtfn_info+0x1e4>
  4248e0:	mov	w21, #0xfffffff4            	// #-12
  4248e4:	b	4248ec <get_virtfn_info+0x234>
  4248e8:	mov	w21, #0xfffffffe            	// #-2
  4248ec:	mov	x0, x23
  4248f0:	bl	40a320 <free@plt>
  4248f4:	b	42488c <get_virtfn_info+0x1d4>
  4248f8:	mov	w21, #0xfffffffe            	// #-2
  4248fc:	b	42488c <get_virtfn_info+0x1d4>
  424900:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  424904:	adrp	x2, 43c000 <worker_hash_op+0x7df8>
  424908:	adrp	x4, 43d000 <worker_hash_op+0x8df8>
  42490c:	add	x1, x1, #0x4f0
  424910:	add	x2, x2, #0xd54
  424914:	add	x4, x4, #0xa7
  424918:	mov	w0, #0x1                   	// #1
  42491c:	mov	w3, #0x6e                  	// #110
  424920:	bl	40a630 <log_assert_failed_realm@plt>
  424924:	adrp	x1, 43c000 <worker_hash_op+0x7df8>
  424928:	adrp	x2, 43c000 <worker_hash_op+0x7df8>
  42492c:	adrp	x4, 43d000 <worker_hash_op+0x8df8>
  424930:	add	x1, x1, #0xeb9
  424934:	add	x2, x2, #0xd54
  424938:	add	x4, x4, #0xa7
  42493c:	mov	w0, #0x1                   	// #1
  424940:	mov	w3, #0x6f                  	// #111
  424944:	bl	40a630 <log_assert_failed_realm@plt>
  424948:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  42494c:	adrp	x2, 43c000 <worker_hash_op+0x7df8>
  424950:	adrp	x4, 43d000 <worker_hash_op+0x8df8>
  424954:	add	x1, x1, #0xfa2
  424958:	add	x2, x2, #0xd54
  42495c:	add	x4, x4, #0xa7
  424960:	mov	w0, #0x1                   	// #1
  424964:	mov	w3, #0x70                  	// #112
  424968:	bl	40a630 <log_assert_failed_realm@plt>
  42496c:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  424970:	adrp	x2, 43c000 <worker_hash_op+0x7df8>
  424974:	adrp	x4, 43d000 <worker_hash_op+0x8df8>
  424978:	add	x1, x1, #0xc66
  42497c:	add	x2, x2, #0xd54
  424980:	add	x4, x4, #0xa7
  424984:	mov	w0, #0x1                   	// #1
  424988:	mov	w3, #0x77                  	// #119
  42498c:	bl	40a630 <log_assert_failed_realm@plt>

0000000000424990 <dev_pci_onboard>:
  424990:	sub	sp, sp, #0x50
  424994:	stp	x29, x30, [sp, #32]
  424998:	stp	x20, x19, [sp, #64]
  42499c:	str	xzr, [sp, #16]
  4249a0:	ldr	x8, [x1, #16]
  4249a4:	add	x29, sp, #0x20
  4249a8:	mov	x19, x1
  4249ac:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  4249b0:	mov	x20, x0
  4249b4:	add	x1, x1, #0xfc
  4249b8:	sub	x2, x29, #0x8
  4249bc:	mov	x0, x8
  4249c0:	str	x21, [sp, #48]
  4249c4:	bl	40ace0 <sd_device_get_sysattr_value@plt>
  4249c8:	tbz	w0, #31, 4249e4 <dev_pci_onboard+0x54>
  4249cc:	ldr	x0, [x19, #16]
  4249d0:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  4249d4:	add	x1, x1, #0x107
  4249d8:	sub	x2, x29, #0x8
  4249dc:	bl	40ace0 <sd_device_get_sysattr_value@plt>
  4249e0:	tbnz	w0, #31, 424ae8 <dev_pci_onboard+0x158>
  4249e4:	ldur	x0, [x29, #-8]
  4249e8:	add	x1, x29, #0x18
  4249ec:	bl	40b5d0 <safe_atollu@plt>
  4249f0:	tbnz	w0, #31, 424ae8 <dev_pci_onboard+0x158>
  4249f4:	ldr	x8, [x29, #24]
  4249f8:	cbz	x8, 424a34 <dev_pci_onboard+0xa4>
  4249fc:	lsr	x8, x8, #14
  424a00:	cbnz	x8, 424ae8 <dev_pci_onboard+0x158>
  424a04:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  424a08:	add	x1, x1, #0x10d
  424a0c:	sub	x2, x29, #0x8
  424a10:	mov	x0, x20
  424a14:	bl	40ace0 <sd_device_get_sysattr_value@plt>
  424a18:	tbnz	w0, #31, 424a50 <dev_pci_onboard+0xc0>
  424a1c:	ldur	x0, [x29, #-8]
  424a20:	mov	w2, #0xa                   	// #10
  424a24:	mov	x1, xzr
  424a28:	bl	40b550 <strtoul@plt>
  424a2c:	mov	x21, x0
  424a30:	b	424a54 <dev_pci_onboard+0xc4>
  424a34:	bl	429be8 <naming_scheme>
  424a38:	ldrb	w8, [x0, #8]
  424a3c:	tbz	w8, #3, 424ae8 <dev_pci_onboard+0x158>
  424a40:	ldr	x8, [x29, #24]
  424a44:	lsr	x8, x8, #14
  424a48:	cbz	x8, 424a04 <dev_pci_onboard+0x74>
  424a4c:	b	424ae8 <dev_pci_onboard+0x158>
  424a50:	mov	x21, xzr
  424a54:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  424a58:	add	x1, x1, #0x8d
  424a5c:	add	x2, sp, #0x10
  424a60:	mov	x0, x20
  424a64:	bl	40ace0 <sd_device_get_sysattr_value@plt>
  424a68:	ldr	x3, [x29, #24]
  424a6c:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  424a70:	add	x20, x19, #0x38
  424a74:	add	x2, x2, #0x116
  424a78:	add	x0, sp, #0x8
  424a7c:	mov	w1, #0x10                  	// #16
  424a80:	str	x20, [sp, #8]
  424a84:	bl	40ad50 <strpcpyf@plt>
  424a88:	ldr	x3, [sp, #16]
  424a8c:	mov	x1, x0
  424a90:	cbz	x3, 424aa4 <dev_pci_onboard+0x114>
  424a94:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  424a98:	add	x2, x2, #0x11b
  424a9c:	add	x0, sp, #0x8
  424aa0:	b	424ab8 <dev_pci_onboard+0x128>
  424aa4:	cbz	x21, 424ac0 <dev_pci_onboard+0x130>
  424aa8:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  424aac:	add	x2, x2, #0x11f
  424ab0:	add	x0, sp, #0x8
  424ab4:	mov	x3, x21
  424ab8:	bl	40ad50 <strpcpyf@plt>
  424abc:	mov	x1, x0
  424ac0:	cbnz	x1, 424ac8 <dev_pci_onboard+0x138>
  424ac4:	strb	wzr, [x20]
  424ac8:	ldr	x0, [x19, #16]
  424acc:	add	x19, x19, #0x48
  424ad0:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  424ad4:	add	x1, x1, #0x124
  424ad8:	mov	x2, x19
  424adc:	bl	40ace0 <sd_device_get_sysattr_value@plt>
  424ae0:	tbz	w0, #31, 424ae8 <dev_pci_onboard+0x158>
  424ae4:	str	xzr, [x19]
  424ae8:	ldp	x20, x19, [sp, #64]
  424aec:	ldr	x21, [sp, #48]
  424af0:	ldp	x29, x30, [sp, #32]
  424af4:	add	sp, sp, #0x50
  424af8:	ret

0000000000424afc <dev_pci_slot>:
  424afc:	stp	x29, x30, [sp, #-96]!
  424b00:	stp	x28, x27, [sp, #16]
  424b04:	stp	x26, x25, [sp, #32]
  424b08:	stp	x24, x23, [sp, #48]
  424b0c:	stp	x22, x21, [sp, #64]
  424b10:	stp	x20, x19, [sp, #80]
  424b14:	mov	x29, sp
  424b18:	sub	sp, sp, #0x2, lsl #12
  424b1c:	sub	sp, sp, #0x60
  424b20:	stur	xzr, [x29, #-48]
  424b24:	stur	xzr, [x29, #-64]
  424b28:	ldr	x8, [x1, #16]
  424b2c:	mov	x19, x1
  424b30:	mov	x21, x0
  424b34:	sub	x1, x29, #0x20
  424b38:	mov	x0, x8
  424b3c:	bl	40a780 <sd_device_get_sysname@plt>
  424b40:	tbnz	w0, #31, 424fb4 <dev_pci_slot+0x4b8>
  424b44:	ldur	x0, [x29, #-32]
  424b48:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  424b4c:	add	x1, x1, #0x12a
  424b50:	sub	x2, x29, #0x4
  424b54:	sub	x3, x29, #0x8
  424b58:	sub	x4, x29, #0xc
  424b5c:	sub	x5, x29, #0x10
  424b60:	bl	40b580 <__isoc99_sscanf@plt>
  424b64:	cmp	w0, #0x4
  424b68:	b.ne	424fb4 <dev_pci_slot+0x4b8>  // b.any
  424b6c:	bl	429be8 <naming_scheme>
  424b70:	ldrb	w8, [x0, #8]
  424b74:	tbz	w8, #1, 424bb4 <dev_pci_slot+0xb8>
  424b78:	ldr	x0, [x19, #16]
  424b7c:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  424b80:	add	x2, sp, #0x1, lsl #12
  424b84:	add	x1, x1, #0x16f
  424b88:	add	x2, x2, #0x18
  424b8c:	bl	40ace0 <sd_device_get_sysattr_value@plt>
  424b90:	tbnz	w0, #31, 424bb4 <dev_pci_slot+0xb8>
  424b94:	ldr	x0, [sp, #4120]
  424b98:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  424b9c:	add	x1, x1, #0xbc
  424ba0:	bl	40a930 <strcmp@plt>
  424ba4:	cbnz	w0, 424bb4 <dev_pci_slot+0xb8>
  424ba8:	ldp	w9, w8, [x29, #-16]
  424bac:	add	w8, w9, w8, lsl #3
  424bb0:	stur	w8, [x29, #-16]
  424bb4:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  424bb8:	add	x1, x1, #0x10d
  424bbc:	sub	x2, x29, #0x28
  424bc0:	mov	x0, x21
  424bc4:	bl	40ace0 <sd_device_get_sysattr_value@plt>
  424bc8:	tbnz	w0, #31, 424c48 <dev_pci_slot+0x14c>
  424bcc:	ldur	x0, [x29, #-40]
  424bd0:	mov	w2, #0xa                   	// #10
  424bd4:	mov	x1, xzr
  424bd8:	bl	40b550 <strtoul@plt>
  424bdc:	mov	x20, x0
  424be0:	cbnz	x0, 424c4c <dev_pci_slot+0x150>
  424be4:	adrp	x1, 43c000 <worker_hash_op+0x7df8>
  424be8:	add	x1, x1, #0xcdd
  424bec:	sub	x2, x29, #0x28
  424bf0:	mov	x0, x21
  424bf4:	bl	40ace0 <sd_device_get_sysattr_value@plt>
  424bf8:	tbnz	w0, #31, 424c48 <dev_pci_slot+0x14c>
  424bfc:	ldur	x0, [x29, #-40]
  424c00:	mov	w2, #0xa                   	// #10
  424c04:	mov	x1, xzr
  424c08:	bl	40b550 <strtoul@plt>
  424c0c:	cmp	x0, #0x20
  424c10:	mov	x20, xzr
  424c14:	b.ne	424c4c <dev_pci_slot+0x150>  // b.any
  424c18:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  424c1c:	add	x1, x1, #0x136
  424c20:	sub	x2, x29, #0x28
  424c24:	mov	x0, x21
  424c28:	bl	40ace0 <sd_device_get_sysattr_value@plt>
  424c2c:	tbnz	w0, #31, 424c48 <dev_pci_slot+0x14c>
  424c30:	ldur	x0, [x29, #-40]
  424c34:	mov	w2, #0x10                  	// #16
  424c38:	mov	x1, xzr
  424c3c:	bl	40b550 <strtoul@plt>
  424c40:	mov	x20, x0
  424c44:	b	424c4c <dev_pci_slot+0x150>
  424c48:	mov	x20, xzr
  424c4c:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  424c50:	add	x1, x1, #0x8d
  424c54:	sub	x2, x29, #0x30
  424c58:	mov	x0, x21
  424c5c:	bl	40ace0 <sd_device_get_sysattr_value@plt>
  424c60:	ldur	w3, [x29, #-4]
  424c64:	add	x22, x19, #0x28
  424c68:	stur	x22, [x29, #-24]
  424c6c:	cbz	w3, 424c8c <dev_pci_slot+0x190>
  424c70:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  424c74:	add	x2, x2, #0x13d
  424c78:	sub	x0, x29, #0x18
  424c7c:	mov	w1, #0x10                  	// #16
  424c80:	bl	40ad50 <strpcpyf@plt>
  424c84:	mov	x1, x0
  424c88:	b	424c90 <dev_pci_slot+0x194>
  424c8c:	mov	w1, #0x10                  	// #16
  424c90:	ldp	w4, w3, [x29, #-12]
  424c94:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  424c98:	add	x2, x2, #0x141
  424c9c:	sub	x0, x29, #0x18
  424ca0:	bl	40ad50 <strpcpyf@plt>
  424ca4:	ldur	w3, [x29, #-16]
  424ca8:	mov	x21, x0
  424cac:	cbnz	w3, 424cc0 <dev_pci_slot+0x1c4>
  424cb0:	ldr	x0, [x19, #16]
  424cb4:	bl	424fe4 <is_pci_multifunction>
  424cb8:	tbz	w0, #0, 424cd8 <dev_pci_slot+0x1dc>
  424cbc:	ldur	w3, [x29, #-16]
  424cc0:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  424cc4:	add	x2, x2, #0x148
  424cc8:	sub	x0, x29, #0x18
  424ccc:	mov	x1, x21
  424cd0:	bl	40ad50 <strpcpyf@plt>
  424cd4:	mov	x21, x0
  424cd8:	ldur	x3, [x29, #-48]
  424cdc:	cbz	x3, 424cf4 <dev_pci_slot+0x1f8>
  424ce0:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  424ce4:	add	x2, x2, #0x11b
  424ce8:	sub	x0, x29, #0x18
  424cec:	mov	x1, x21
  424cf0:	b	424d0c <dev_pci_slot+0x210>
  424cf4:	cbz	x20, 424d14 <dev_pci_slot+0x218>
  424cf8:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  424cfc:	add	x2, x2, #0x11f
  424d00:	sub	x0, x29, #0x18
  424d04:	mov	x1, x21
  424d08:	mov	x3, x20
  424d0c:	bl	40ad50 <strpcpyf@plt>
  424d10:	mov	x21, x0
  424d14:	cbnz	x21, 424d1c <dev_pci_slot+0x220>
  424d18:	strb	wzr, [x22]
  424d1c:	adrp	x1, 438000 <worker_hash_op+0x3df8>
  424d20:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  424d24:	add	x1, x1, #0x46c
  424d28:	add	x2, x2, #0xa3
  424d2c:	sub	x0, x29, #0x40
  424d30:	bl	40b5e0 <sd_device_new_from_subsystem_sysname@plt>
  424d34:	tbnz	w0, #31, 424fb4 <dev_pci_slot+0x4b8>
  424d38:	ldur	x0, [x29, #-64]
  424d3c:	sub	x1, x29, #0x38
  424d40:	bl	40a860 <sd_device_get_syspath@plt>
  424d44:	tbnz	w0, #31, 424fb4 <dev_pci_slot+0x4b8>
  424d48:	ldur	x3, [x29, #-56]
  424d4c:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  424d50:	add	x0, sp, #0x1, lsl #12
  424d54:	add	x2, x2, #0x14c
  424d58:	add	x0, x0, #0x18
  424d5c:	mov	w1, #0x1000                	// #4096
  424d60:	bl	40b050 <snprintf@plt>
  424d64:	cmp	w0, #0xfff
  424d68:	b.hi	424fb4 <dev_pci_slot+0x4b8>  // b.pmore
  424d6c:	add	x0, sp, #0x1, lsl #12
  424d70:	add	x0, x0, #0x18
  424d74:	bl	40af80 <opendir@plt>
  424d78:	cbz	x0, 424fb4 <dev_pci_slot+0x4b8>
  424d7c:	mov	x21, x0
  424d80:	ldr	x0, [x19, #16]
  424d84:	stur	x0, [x29, #-72]
  424d88:	cbz	x0, 424fac <dev_pci_slot+0x4b0>
  424d8c:	adrp	x22, 43d000 <worker_hash_op+0x8df8>
  424d90:	adrp	x23, 43d000 <worker_hash_op+0x8df8>
  424d94:	add	x22, x22, #0xa3
  424d98:	add	x23, x23, #0x155
  424d9c:	b	424da8 <dev_pci_slot+0x2ac>
  424da0:	ldur	x0, [x29, #-72]
  424da4:	cbz	x0, 424fac <dev_pci_slot+0x4b0>
  424da8:	sub	x1, x29, #0x20
  424dac:	bl	40a780 <sd_device_get_sysname@plt>
  424db0:	tbnz	w0, #31, 424da0 <dev_pci_slot+0x2a4>
  424db4:	bl	40a3e0 <__errno_location@plt>
  424db8:	mov	x25, x0
  424dbc:	str	wzr, [x0]
  424dc0:	mov	x0, x21
  424dc4:	bl	40af90 <readdir64@plt>
  424dc8:	cbz	x0, 424ecc <dev_pci_slot+0x3d0>
  424dcc:	mov	x26, x0
  424dd0:	mov	w24, wzr
  424dd4:	str	xzr, [sp, #8]
  424dd8:	ldrb	w8, [x26, #19]!
  424ddc:	cmp	w8, #0x2e
  424de0:	b.ne	424df8 <dev_pci_slot+0x2fc>  // b.any
  424de4:	mov	w27, wzr
  424de8:	ldr	x0, [sp, #8]
  424dec:	bl	40a320 <free@plt>
  424df0:	tbz	w27, #0, 424eb4 <dev_pci_slot+0x3b8>
  424df4:	b	424ec8 <dev_pci_slot+0x3cc>
  424df8:	add	x2, sp, #0x1, lsl #12
  424dfc:	add	x2, x2, #0x14
  424e00:	mov	w1, #0xa                   	// #10
  424e04:	mov	x0, x26
  424e08:	bl	40a2e0 <safe_atou_full@plt>
  424e0c:	mov	w27, wzr
  424e10:	tbnz	w0, #31, 424ea8 <dev_pci_slot+0x3ac>
  424e14:	ldr	w8, [sp, #4116]
  424e18:	cbz	w8, 424ea8 <dev_pci_slot+0x3ac>
  424e1c:	add	x3, sp, #0x1, lsl #12
  424e20:	add	x0, sp, #0x14
  424e24:	add	x3, x3, #0x18
  424e28:	mov	w1, #0x1000                	// #4096
  424e2c:	mov	x2, x23
  424e30:	mov	x4, x26
  424e34:	bl	40b050 <snprintf@plt>
  424e38:	cmp	w0, #0xfff
  424e3c:	b.hi	424ea4 <dev_pci_slot+0x3a8>  // b.pmore
  424e40:	add	x0, sp, #0x14
  424e44:	add	x1, sp, #0x8
  424e48:	bl	40b5f0 <read_one_line_file@plt>
  424e4c:	tbnz	w0, #31, 424de4 <dev_pci_slot+0x2e8>
  424e50:	ldr	x27, [sp, #8]
  424e54:	ldur	x26, [x29, #-32]
  424e58:	mov	x0, x27
  424e5c:	bl	40aa40 <strlen@plt>
  424e60:	mov	x2, x0
  424e64:	mov	x0, x26
  424e68:	mov	x1, x27
  424e6c:	bl	40a6a0 <strncmp@plt>
  424e70:	cmp	w0, #0x0
  424e74:	ldr	w8, [sp, #4116]
  424e78:	cset	w9, ne  // ne = any
  424e7c:	cmp	x26, #0x0
  424e80:	cset	w10, eq  // eq = none
  424e84:	orr	w9, w10, w9
  424e88:	cmp	w9, #0x0
  424e8c:	csel	w24, w24, w8, ne  // ne = any
  424e90:	eor	w27, w9, #0x1
  424e94:	ldr	x0, [sp, #8]
  424e98:	bl	40a320 <free@plt>
  424e9c:	tbz	w27, #0, 424eb4 <dev_pci_slot+0x3b8>
  424ea0:	b	424ec8 <dev_pci_slot+0x3cc>
  424ea4:	mov	w27, wzr
  424ea8:	ldr	x0, [sp, #8]
  424eac:	bl	40a320 <free@plt>
  424eb0:	tbnz	w27, #0, 424ec8 <dev_pci_slot+0x3cc>
  424eb4:	mov	x0, x21
  424eb8:	str	wzr, [x25]
  424ebc:	bl	40af90 <readdir64@plt>
  424ec0:	mov	x26, x0
  424ec4:	cbnz	x0, 424dd4 <dev_pci_slot+0x2d8>
  424ec8:	cbnz	w24, 424ef0 <dev_pci_slot+0x3f4>
  424ecc:	ldur	x0, [x29, #-72]
  424ed0:	sub	x3, x29, #0x48
  424ed4:	mov	x1, x22
  424ed8:	mov	x2, xzr
  424edc:	bl	40b530 <sd_device_get_parent_with_subsystem_devtype@plt>
  424ee0:	tbnz	w0, #31, 424fac <dev_pci_slot+0x4b0>
  424ee4:	mov	x0, x21
  424ee8:	bl	40b600 <rewinddir@plt>
  424eec:	b	424da0 <dev_pci_slot+0x2a4>
  424ef0:	ldur	w3, [x29, #-4]
  424ef4:	add	x23, x19, #0x18
  424ef8:	stur	x23, [x29, #-24]
  424efc:	cbz	w3, 424f1c <dev_pci_slot+0x420>
  424f00:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  424f04:	add	x2, x2, #0x163
  424f08:	sub	x0, x29, #0x18
  424f0c:	mov	w1, #0x10                  	// #16
  424f10:	bl	40ad50 <strpcpyf@plt>
  424f14:	mov	x1, x0
  424f18:	b	424f20 <dev_pci_slot+0x424>
  424f1c:	mov	w1, #0x10                  	// #16
  424f20:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  424f24:	add	x2, x2, #0x167
  424f28:	sub	x0, x29, #0x18
  424f2c:	mov	w3, w24
  424f30:	bl	40ad50 <strpcpyf@plt>
  424f34:	ldur	w3, [x29, #-16]
  424f38:	mov	x22, x0
  424f3c:	cbnz	w3, 424f50 <dev_pci_slot+0x454>
  424f40:	ldr	x0, [x19, #16]
  424f44:	bl	424fe4 <is_pci_multifunction>
  424f48:	tbz	w0, #0, 424f68 <dev_pci_slot+0x46c>
  424f4c:	ldur	w3, [x29, #-16]
  424f50:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  424f54:	add	x2, x2, #0x16b
  424f58:	sub	x0, x29, #0x18
  424f5c:	mov	x1, x22
  424f60:	bl	40ad50 <strpcpyf@plt>
  424f64:	mov	x22, x0
  424f68:	ldur	x3, [x29, #-48]
  424f6c:	cbz	x3, 424f84 <dev_pci_slot+0x488>
  424f70:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  424f74:	add	x2, x2, #0x11b
  424f78:	sub	x0, x29, #0x18
  424f7c:	mov	x1, x22
  424f80:	b	424f9c <dev_pci_slot+0x4a0>
  424f84:	cbz	x20, 424fa4 <dev_pci_slot+0x4a8>
  424f88:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  424f8c:	add	x2, x2, #0x11f
  424f90:	sub	x0, x29, #0x18
  424f94:	mov	x1, x22
  424f98:	mov	x3, x20
  424f9c:	bl	40ad50 <strpcpyf@plt>
  424fa0:	mov	x22, x0
  424fa4:	cbnz	x22, 424fac <dev_pci_slot+0x4b0>
  424fa8:	strb	wzr, [x23]
  424fac:	mov	x0, x21
  424fb0:	bl	40afc0 <closedir@plt>
  424fb4:	ldur	x0, [x29, #-64]
  424fb8:	cbz	x0, 424fc0 <dev_pci_slot+0x4c4>
  424fbc:	bl	40a6e0 <sd_device_unref@plt>
  424fc0:	add	sp, sp, #0x2, lsl #12
  424fc4:	add	sp, sp, #0x60
  424fc8:	ldp	x20, x19, [sp, #80]
  424fcc:	ldp	x22, x21, [sp, #64]
  424fd0:	ldp	x24, x23, [sp, #48]
  424fd4:	ldp	x26, x25, [sp, #32]
  424fd8:	ldp	x28, x27, [sp, #16]
  424fdc:	ldp	x29, x30, [sp], #96
  424fe0:	ret

0000000000424fe4 <is_pci_multifunction>:
  424fe4:	stp	x29, x30, [sp, #-32]!
  424fe8:	stp	x20, x19, [sp, #16]
  424fec:	mov	x29, sp
  424ff0:	sub	sp, sp, #0x50
  424ff4:	sub	x1, x29, #0x8
  424ff8:	bl	40a860 <sd_device_get_syspath@plt>
  424ffc:	tbnz	w0, #31, 425054 <is_pci_multifunction+0x70>
  425000:	ldur	x20, [x29, #-8]
  425004:	cbz	x20, 425060 <is_pci_multifunction+0x7c>
  425008:	mov	x0, x20
  42500c:	bl	40aa40 <strlen@plt>
  425010:	add	x8, x0, #0x8
  425014:	cmp	x8, #0x400, lsl #12
  425018:	b.hi	4250cc <is_pci_multifunction+0xe8>  // b.pmore
  42501c:	add	x8, x8, #0xf
  425020:	mov	x9, sp
  425024:	and	x8, x8, #0xfffffffffffffff0
  425028:	sub	x19, x9, x8
  42502c:	mov	sp, x19
  425030:	mov	x0, x19
  425034:	mov	x1, x20
  425038:	bl	40ab70 <stpcpy@plt>
  42503c:	mov	x8, #0x632f                	// #25391
  425040:	movk	x8, #0x6e6f, lsl #16
  425044:	movk	x8, #0x6966, lsl #32
  425048:	movk	x8, #0x67, lsl #48
  42504c:	str	x8, [x0], #7
  425050:	b	42506c <is_pci_multifunction+0x88>
  425054:	mov	w20, wzr
  425058:	mov	w19, #0xffffffff            	// #-1
  42505c:	b	4250b0 <is_pci_multifunction+0xcc>
  425060:	sub	x19, sp, #0x10
  425064:	mov	sp, x19
  425068:	mov	x0, x19
  42506c:	strb	wzr, [x0]
  425070:	mov	w1, #0x80000               	// #524288
  425074:	mov	x0, x19
  425078:	bl	40a890 <open64@plt>
  42507c:	mov	w19, w0
  425080:	tbnz	w0, #31, 4250ac <is_pci_multifunction+0xc8>
  425084:	sub	x1, x29, #0x48
  425088:	mov	w2, #0x40                  	// #64
  42508c:	mov	w0, w19
  425090:	bl	40a830 <read@plt>
  425094:	cmp	x0, #0x40
  425098:	b.ne	4250ac <is_pci_multifunction+0xc8>  // b.any
  42509c:	ldursb	w8, [x29, #-58]
  4250a0:	cmp	w8, #0x0
  4250a4:	cset	w20, lt  // lt = tstop
  4250a8:	b	4250b0 <is_pci_multifunction+0xcc>
  4250ac:	mov	w20, wzr
  4250b0:	mov	w0, w19
  4250b4:	bl	40a660 <safe_close@plt>
  4250b8:	mov	w0, w20
  4250bc:	mov	sp, x29
  4250c0:	ldp	x20, x19, [sp, #16]
  4250c4:	ldp	x29, x30, [sp], #32
  4250c8:	ret
  4250cc:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  4250d0:	adrp	x2, 43c000 <worker_hash_op+0x7df8>
  4250d4:	adrp	x4, 43d000 <worker_hash_op+0x8df8>
  4250d8:	add	x1, x1, #0xc66
  4250dc:	add	x2, x2, #0xd54
  4250e0:	add	x4, x4, #0x17b
  4250e4:	mov	w0, #0x1                   	// #1
  4250e8:	mov	w3, #0xe1                  	// #225
  4250ec:	bl	40a630 <log_assert_failed_realm@plt>

00000000004250f0 <builtin_net_setup_link>:
  4250f0:	sub	sp, sp, #0x60
  4250f4:	stp	x29, x30, [sp, #48]
  4250f8:	stp	x20, x19, [sp, #80]
  4250fc:	add	x29, sp, #0x30
  425100:	mov	x19, x0
  425104:	cmp	w1, #0x2
  425108:	stp	x22, x21, [sp, #64]
  42510c:	stp	xzr, xzr, [x29, #-16]
  425110:	b.lt	425180 <builtin_net_setup_link+0x90>  // b.tstop
  425114:	str	xzr, [sp, #24]
  425118:	cbz	x19, 42512c <builtin_net_setup_link+0x3c>
  42511c:	mov	w0, #0x1                   	// #1
  425120:	bl	40a2c0 <log_get_max_level_realm@plt>
  425124:	cmp	w0, #0x3
  425128:	b.ge	42535c <builtin_net_setup_link+0x26c>  // b.tcont
  42512c:	mov	x6, xzr
  425130:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  425134:	add	x8, x8, #0x7f
  425138:	cmp	x6, #0x0
  42513c:	csel	x5, xzr, x8, eq  // eq = none
  425140:	adrp	x8, 43d000 <worker_hash_op+0x8df8>
  425144:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  425148:	adrp	x4, 43d000 <worker_hash_op+0x8df8>
  42514c:	mov	w1, #0x16                  	// #22
  425150:	add	x8, x8, #0x28b
  425154:	add	x2, x2, #0x24d
  425158:	add	x4, x4, #0x274
  42515c:	mov	w0, #0x3                   	// #3
  425160:	movk	w1, #0x4000, lsl #16
  425164:	mov	w3, #0x13                  	// #19
  425168:	str	x8, [sp, #8]
  42516c:	str	xzr, [sp]
  425170:	mov	x7, xzr
  425174:	bl	40a730 <log_object_internal@plt>
  425178:	mov	w19, w0
  42517c:	b	425280 <builtin_net_setup_link+0x190>
  425180:	adrp	x22, 470000 <arg_resolve_name_timing>
  425184:	ldr	x0, [x22, #72]
  425188:	sub	x2, x29, #0x8
  42518c:	mov	x1, x19
  425190:	mov	w20, w3
  425194:	bl	429740 <link_get_driver>
  425198:	tbnz	w0, #31, 4251b4 <builtin_net_setup_link+0xc4>
  42519c:	ldur	x3, [x29, #-8]
  4251a0:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  4251a4:	and	w1, w20, #0x1
  4251a8:	add	x2, x2, #0x2ac
  4251ac:	mov	x0, x19
  4251b0:	bl	420aec <udev_builtin_add_property>
  4251b4:	ldr	x0, [x22, #72]
  4251b8:	add	x2, sp, #0x18
  4251bc:	mov	x1, x19
  4251c0:	bl	4285b8 <link_config_get>
  4251c4:	tbnz	w0, #31, 4252a0 <builtin_net_setup_link+0x1b0>
  4251c8:	ldr	x0, [x22, #72]
  4251cc:	ldr	x1, [sp, #24]
  4251d0:	sub	x3, x29, #0x10
  4251d4:	mov	x2, x19
  4251d8:	bl	428a30 <link_config_apply>
  4251dc:	tbz	w0, #31, 425240 <builtin_net_setup_link+0x150>
  4251e0:	mov	w21, w0
  4251e4:	str	xzr, [sp, #16]
  4251e8:	cbz	x19, 4251fc <builtin_net_setup_link+0x10c>
  4251ec:	mov	w0, #0x1                   	// #1
  4251f0:	bl	40a2c0 <log_get_max_level_realm@plt>
  4251f4:	cmp	w0, #0x4
  4251f8:	b.ge	425370 <builtin_net_setup_link+0x280>  // b.tcont
  4251fc:	mov	x6, xzr
  425200:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  425204:	add	x8, x8, #0x7f
  425208:	cmp	x6, #0x0
  42520c:	csel	x5, xzr, x8, eq  // eq = none
  425210:	adrp	x8, 43d000 <worker_hash_op+0x8df8>
  425214:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  425218:	adrp	x4, 43d000 <worker_hash_op+0x8df8>
  42521c:	add	x8, x8, #0x2fe
  425220:	add	x2, x2, #0x24d
  425224:	add	x4, x4, #0x274
  425228:	mov	w0, #0x4                   	// #4
  42522c:	mov	w3, #0x23                  	// #35
  425230:	mov	w1, w21
  425234:	mov	x7, xzr
  425238:	stp	xzr, x8, [sp]
  42523c:	bl	40a730 <log_object_internal@plt>
  425240:	ldr	x8, [sp, #24]
  425244:	and	w20, w20, #0x1
  425248:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  42524c:	add	x2, x2, #0x328
  425250:	ldr	x3, [x8]
  425254:	mov	x0, x19
  425258:	mov	w1, w20
  42525c:	bl	420aec <udev_builtin_add_property>
  425260:	ldur	x3, [x29, #-16]
  425264:	cbz	x3, 42527c <builtin_net_setup_link+0x18c>
  425268:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  42526c:	add	x2, x2, #0x339
  425270:	mov	x0, x19
  425274:	mov	w1, w20
  425278:	bl	420aec <udev_builtin_add_property>
  42527c:	mov	w19, wzr
  425280:	ldur	x0, [x29, #-8]
  425284:	bl	40a320 <free@plt>
  425288:	mov	w0, w19
  42528c:	ldp	x20, x19, [sp, #80]
  425290:	ldp	x22, x21, [sp, #64]
  425294:	ldp	x29, x30, [sp, #48]
  425298:	add	sp, sp, #0x60
  42529c:	ret
  4252a0:	mov	w21, w0
  4252a4:	cmn	w0, #0x2
  4252a8:	b.ne	425304 <builtin_net_setup_link+0x214>  // b.any
  4252ac:	str	xzr, [sp, #16]
  4252b0:	cbz	x19, 4252c4 <builtin_net_setup_link+0x1d4>
  4252b4:	mov	w0, #0x1                   	// #1
  4252b8:	bl	40a2c0 <log_get_max_level_realm@plt>
  4252bc:	cmp	w0, #0x7
  4252c0:	b.ge	425384 <builtin_net_setup_link+0x294>  // b.tcont
  4252c4:	mov	x6, xzr
  4252c8:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  4252cc:	add	x8, x8, #0x7f
  4252d0:	cmp	x6, #0x0
  4252d4:	csel	x5, xzr, x8, eq  // eq = none
  4252d8:	adrp	x8, 43d000 <worker_hash_op+0x8df8>
  4252dc:	add	x8, x8, #0x2ba
  4252e0:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  4252e4:	adrp	x4, 43d000 <worker_hash_op+0x8df8>
  4252e8:	add	x2, x2, #0x24d
  4252ec:	add	x4, x4, #0x274
  4252f0:	str	x8, [sp, #8]
  4252f4:	mov	w0, #0x7                   	// #7
  4252f8:	mov	w1, #0xfffffffe            	// #-2
  4252fc:	mov	w3, #0x1c                  	// #28
  425300:	b	42516c <builtin_net_setup_link+0x7c>
  425304:	str	xzr, [sp, #16]
  425308:	cbz	x19, 42531c <builtin_net_setup_link+0x22c>
  42530c:	mov	w0, #0x1                   	// #1
  425310:	bl	40a2c0 <log_get_max_level_realm@plt>
  425314:	cmp	w0, #0x3
  425318:	b.ge	425398 <builtin_net_setup_link+0x2a8>  // b.tcont
  42531c:	mov	x6, xzr
  425320:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  425324:	add	x8, x8, #0x7f
  425328:	cmp	x6, #0x0
  42532c:	csel	x5, xzr, x8, eq  // eq = none
  425330:	adrp	x8, 43d000 <worker_hash_op+0x8df8>
  425334:	add	x8, x8, #0x2e0
  425338:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  42533c:	adrp	x4, 43d000 <worker_hash_op+0x8df8>
  425340:	add	x2, x2, #0x24d
  425344:	add	x4, x4, #0x274
  425348:	stp	xzr, x8, [sp]
  42534c:	mov	w0, #0x3                   	// #3
  425350:	mov	w3, #0x1e                  	// #30
  425354:	mov	w1, w21
  425358:	b	425170 <builtin_net_setup_link+0x80>
  42535c:	add	x1, sp, #0x18
  425360:	mov	x0, x19
  425364:	bl	40a780 <sd_device_get_sysname@plt>
  425368:	ldr	x6, [sp, #24]
  42536c:	b	425130 <builtin_net_setup_link+0x40>
  425370:	add	x1, sp, #0x10
  425374:	mov	x0, x19
  425378:	bl	40a780 <sd_device_get_sysname@plt>
  42537c:	ldr	x6, [sp, #16]
  425380:	b	425200 <builtin_net_setup_link+0x110>
  425384:	add	x1, sp, #0x10
  425388:	mov	x0, x19
  42538c:	bl	40a780 <sd_device_get_sysname@plt>
  425390:	ldr	x6, [sp, #16]
  425394:	b	4252c8 <builtin_net_setup_link+0x1d8>
  425398:	add	x1, sp, #0x10
  42539c:	mov	x0, x19
  4253a0:	bl	40a780 <sd_device_get_sysname@plt>
  4253a4:	ldr	x6, [sp, #16]
  4253a8:	b	425320 <builtin_net_setup_link+0x230>

00000000004253ac <builtin_net_setup_link_init>:
  4253ac:	stp	x29, x30, [sp, #-32]!
  4253b0:	str	x19, [sp, #16]
  4253b4:	adrp	x19, 470000 <arg_resolve_name_timing>
  4253b8:	ldr	x8, [x19, #72]
  4253bc:	mov	x29, sp
  4253c0:	cbz	x8, 4253d4 <builtin_net_setup_link_init+0x28>
  4253c4:	mov	w0, wzr
  4253c8:	ldr	x19, [sp, #16]
  4253cc:	ldp	x29, x30, [sp], #32
  4253d0:	ret
  4253d4:	adrp	x0, 470000 <arg_resolve_name_timing>
  4253d8:	add	x0, x0, #0x48
  4253dc:	bl	427f78 <link_config_ctx_new>
  4253e0:	tbnz	w0, #31, 4253c8 <builtin_net_setup_link_init+0x1c>
  4253e4:	ldr	x0, [x19, #72]
  4253e8:	bl	428348 <link_config_load>
  4253ec:	tbnz	w0, #31, 4253c8 <builtin_net_setup_link_init+0x1c>
  4253f0:	mov	w0, #0x1                   	// #1
  4253f4:	bl	40a2c0 <log_get_max_level_realm@plt>
  4253f8:	cmp	w0, #0x7
  4253fc:	b.lt	4253c4 <builtin_net_setup_link_init+0x18>  // b.tstop
  425400:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  425404:	adrp	x4, 43d000 <worker_hash_op+0x8df8>
  425408:	adrp	x5, 43d000 <worker_hash_op+0x8df8>
  42540c:	add	x2, x2, #0x24d
  425410:	add	x4, x4, #0x345
  425414:	add	x5, x5, #0x361
  425418:	mov	w0, #0x407                 	// #1031
  42541c:	mov	w3, #0x3b                  	// #59
  425420:	mov	w1, wzr
  425424:	bl	40a2d0 <log_internal_realm@plt>
  425428:	b	4253c4 <builtin_net_setup_link_init+0x18>

000000000042542c <builtin_net_setup_link_exit>:
  42542c:	stp	x29, x30, [sp, #-32]!
  425430:	str	x19, [sp, #16]
  425434:	adrp	x19, 470000 <arg_resolve_name_timing>
  425438:	ldr	x0, [x19, #72]
  42543c:	mov	x29, sp
  425440:	bl	427f28 <link_config_ctx_free>
  425444:	mov	w0, #0x1                   	// #1
  425448:	str	xzr, [x19, #72]
  42544c:	bl	40a2c0 <log_get_max_level_realm@plt>
  425450:	cmp	w0, #0x7
  425454:	b.lt	425488 <builtin_net_setup_link_exit+0x5c>  // b.tstop
  425458:	ldr	x19, [sp, #16]
  42545c:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  425460:	adrp	x4, 43d000 <worker_hash_op+0x8df8>
  425464:	adrp	x5, 43d000 <worker_hash_op+0x8df8>
  425468:	add	x2, x2, #0x24d
  42546c:	add	x4, x4, #0x385
  425470:	add	x5, x5, #0x3a1
  425474:	mov	w0, #0x407                 	// #1031
  425478:	mov	w3, #0x42                  	// #66
  42547c:	mov	w1, wzr
  425480:	ldp	x29, x30, [sp], #32
  425484:	b	40a2d0 <log_internal_realm@plt>
  425488:	ldr	x19, [sp, #16]
  42548c:	ldp	x29, x30, [sp], #32
  425490:	ret

0000000000425494 <builtin_net_setup_link_validate>:
  425494:	stp	x29, x30, [sp, #-16]!
  425498:	mov	w0, #0x1                   	// #1
  42549c:	mov	x29, sp
  4254a0:	bl	40a2c0 <log_get_max_level_realm@plt>
  4254a4:	cmp	w0, #0x7
  4254a8:	b.lt	4254d4 <builtin_net_setup_link_validate+0x40>  // b.tstop
  4254ac:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  4254b0:	adrp	x4, 43d000 <worker_hash_op+0x8df8>
  4254b4:	adrp	x5, 43d000 <worker_hash_op+0x8df8>
  4254b8:	add	x2, x2, #0x24d
  4254bc:	add	x4, x4, #0x3c6
  4254c0:	add	x5, x5, #0x3e6
  4254c4:	mov	w0, #0x407                 	// #1031
  4254c8:	mov	w3, #0x46                  	// #70
  4254cc:	mov	w1, wzr
  4254d0:	bl	40a2d0 <log_internal_realm@plt>
  4254d4:	adrp	x8, 470000 <arg_resolve_name_timing>
  4254d8:	ldr	x0, [x8, #72]
  4254dc:	cbz	x0, 4254e8 <builtin_net_setup_link_validate+0x54>
  4254e0:	ldp	x29, x30, [sp], #16
  4254e4:	b	428574 <link_config_should_reload>
  4254e8:	ldp	x29, x30, [sp], #16
  4254ec:	ret

00000000004254f0 <builtin_path_id>:
  4254f0:	stp	x29, x30, [sp, #-96]!
  4254f4:	stp	x28, x27, [sp, #16]
  4254f8:	stp	x26, x25, [sp, #32]
  4254fc:	stp	x24, x23, [sp, #48]
  425500:	stp	x22, x21, [sp, #64]
  425504:	stp	x20, x19, [sp, #80]
  425508:	mov	x29, sp
  42550c:	sub	sp, sp, #0x2d0
  425510:	str	w3, [sp, #12]
  425514:	stur	xzr, [x29, #-176]
  425518:	cbz	x0, 4263f4 <builtin_path_id+0xf04>
  42551c:	adrp	x21, 43d000 <worker_hash_op+0x8df8>
  425520:	adrp	x27, 43d000 <worker_hash_op+0x8df8>
  425524:	adrp	x24, 43d000 <worker_hash_op+0x8df8>
  425528:	adrp	x22, 43d000 <worker_hash_op+0x8df8>
  42552c:	adrp	x20, 43c000 <worker_hash_op+0x7df8>
  425530:	adrp	x23, 43d000 <worker_hash_op+0x8df8>
  425534:	mov	x19, x0
  425538:	mov	w25, wzr
  42553c:	mov	w28, wzr
  425540:	stur	x0, [x29, #-168]
  425544:	add	x21, x21, #0x493
  425548:	add	x27, x27, #0x49d
  42554c:	add	x24, x24, #0x4a2
  425550:	add	x22, x22, #0xa3
  425554:	add	x20, x20, #0xed3
  425558:	add	x23, x23, #0x4dc
  42555c:	sub	x1, x29, #0xb8
  425560:	bl	40a850 <sd_device_get_subsystem@plt>
  425564:	tbnz	w0, #31, 425740 <builtin_path_id+0x250>
  425568:	ldur	x0, [x29, #-168]
  42556c:	sub	x1, x29, #0xc0
  425570:	bl	40a780 <sd_device_get_sysname@plt>
  425574:	tbnz	w0, #31, 425740 <builtin_path_id+0x250>
  425578:	ldur	x26, [x29, #-184]
  42557c:	mov	x1, x21
  425580:	mov	x0, x26
  425584:	bl	40a930 <strcmp@plt>
  425588:	cbz	w0, 425730 <builtin_path_id+0x240>
  42558c:	mov	x0, x26
  425590:	mov	x1, x27
  425594:	bl	40a930 <strcmp@plt>
  425598:	cbz	w0, 425764 <builtin_path_id+0x274>
  42559c:	mov	x0, x26
  4255a0:	mov	x1, x24
  4255a4:	bl	40a930 <strcmp@plt>
  4255a8:	cbz	w0, 4257d0 <builtin_path_id+0x2e0>
  4255ac:	adrp	x1, 439000 <worker_hash_op+0x4df8>
  4255b0:	mov	x0, x26
  4255b4:	add	x1, x1, #0x87f
  4255b8:	bl	40a930 <strcmp@plt>
  4255bc:	cbz	w0, 4258b8 <builtin_path_id+0x3c8>
  4255c0:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  4255c4:	mov	x0, x26
  4255c8:	add	x1, x1, #0x1e0
  4255cc:	bl	40a930 <strcmp@plt>
  4255d0:	cbz	w0, 425940 <builtin_path_id+0x450>
  4255d4:	adrp	x1, 43c000 <worker_hash_op+0x7df8>
  4255d8:	mov	x0, x26
  4255dc:	add	x1, x1, #0xabe
  4255e0:	bl	40a930 <strcmp@plt>
  4255e4:	cbz	w0, 425988 <builtin_path_id+0x498>
  4255e8:	mov	x0, x26
  4255ec:	mov	x1, x22
  4255f0:	bl	40a930 <strcmp@plt>
  4255f4:	cbz	w0, 4259fc <builtin_path_id+0x50c>
  4255f8:	mov	x21, x27
  4255fc:	mov	x27, x20
  425600:	adrp	x20, 43c000 <worker_hash_op+0x7df8>
  425604:	add	x20, x20, #0xf61
  425608:	mov	x0, x26
  42560c:	mov	x1, x20
  425610:	bl	40a930 <strcmp@plt>
  425614:	cbz	w0, 425b14 <builtin_path_id+0x624>
  425618:	adrp	x20, 43d000 <worker_hash_op+0x8df8>
  42561c:	add	x20, x20, #0x4c4
  425620:	mov	x0, x26
  425624:	mov	x1, x20
  425628:	bl	40a930 <strcmp@plt>
  42562c:	cbz	w0, 425b48 <builtin_path_id+0x658>
  425630:	adrp	x20, 43d000 <worker_hash_op+0x8df8>
  425634:	add	x20, x20, #0x4d1
  425638:	mov	x0, x26
  42563c:	mov	x1, x20
  425640:	bl	40a930 <strcmp@plt>
  425644:	cbz	w0, 425b88 <builtin_path_id+0x698>
  425648:	mov	x0, x26
  42564c:	mov	x1, x27
  425650:	mov	x20, x27
  425654:	bl	40a930 <strcmp@plt>
  425658:	cbz	w0, 425d74 <builtin_path_id+0x884>
  42565c:	adrp	x23, 43d000 <worker_hash_op+0x8df8>
  425660:	add	x23, x23, #0x4dc
  425664:	mov	x0, x26
  425668:	mov	x1, x23
  42566c:	bl	40a930 <strcmp@plt>
  425670:	mov	x27, x21
  425674:	cbz	w0, 425d90 <builtin_path_id+0x8a0>
  425678:	adrp	x1, 43c000 <worker_hash_op+0x7df8>
  42567c:	mov	x0, x26
  425680:	add	x1, x1, #0xec8
  425684:	bl	40a930 <strcmp@plt>
  425688:	adrp	x21, 43d000 <worker_hash_op+0x8df8>
  42568c:	add	x21, x21, #0x493
  425690:	cbz	w0, 425df4 <builtin_path_id+0x904>
  425694:	adrp	x1, 43c000 <worker_hash_op+0x7df8>
  425698:	mov	x0, x26
  42569c:	add	x1, x1, #0xebf
  4256a0:	bl	40a930 <strcmp@plt>
  4256a4:	cbz	w0, 425e18 <builtin_path_id+0x928>
  4256a8:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  4256ac:	mov	x0, x26
  4256b0:	add	x1, x1, #0x4fa
  4256b4:	bl	40a930 <strcmp@plt>
  4256b8:	cbz	w0, 425ee4 <builtin_path_id+0x9f4>
  4256bc:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  4256c0:	mov	x0, x26
  4256c4:	add	x1, x1, #0x4fd
  4256c8:	bl	40a930 <strcmp@plt>
  4256cc:	cbz	w0, 425f48 <builtin_path_id+0xa58>
  4256d0:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  4256d4:	mov	x0, x26
  4256d8:	add	x1, x1, #0x50a
  4256dc:	bl	40a930 <strcmp@plt>
  4256e0:	cbnz	w0, 425740 <builtin_path_id+0x250>
  4256e4:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  4256e8:	add	x2, sp, #0x10
  4256ec:	mov	x0, x19
  4256f0:	add	x1, x1, #0x50f
  4256f4:	bl	40ace0 <sd_device_get_sysattr_value@plt>
  4256f8:	tbnz	w0, #31, 425740 <builtin_path_id+0x250>
  4256fc:	ldr	x2, [sp, #16]
  425700:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  425704:	sub	x0, x29, #0xb0
  425708:	add	x1, x1, #0x514
  42570c:	bl	4264a8 <path_prepend>
  425710:	ldur	x0, [x29, #-168]
  425714:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  425718:	add	x1, x1, #0x50a
  42571c:	bl	4265c0 <skip_subsystem>
  425720:	mov	w28, #0x1                   	// #1
  425724:	mov	w25, #0x1                   	// #1
  425728:	stur	x0, [x29, #-168]
  42572c:	b	425740 <builtin_path_id+0x250>
  425730:	ldur	x8, [x29, #-176]
  425734:	cbz	x8, 42582c <builtin_path_id+0x33c>
  425738:	adrp	x22, 43d000 <worker_hash_op+0x8df8>
  42573c:	add	x22, x22, #0xa3
  425740:	ldur	x26, [x29, #-168]
  425744:	cbz	x26, 426280 <builtin_path_id+0xd90>
  425748:	sub	x1, x29, #0xa8
  42574c:	mov	x0, x26
  425750:	bl	40ab60 <sd_device_get_parent@plt>
  425754:	tbnz	w0, #31, 426280 <builtin_path_id+0xd90>
  425758:	ldur	x0, [x29, #-168]
  42575c:	cbnz	x0, 42555c <builtin_path_id+0x6c>
  425760:	b	426280 <builtin_path_id+0xd90>
  425764:	ldur	x26, [x29, #-168]
  425768:	sub	x1, x29, #0x90
  42576c:	mov	x0, x26
  425770:	bl	40a870 <sd_device_get_devtype@plt>
  425774:	tbnz	w0, #31, 425b08 <builtin_path_id+0x618>
  425778:	ldur	x0, [x29, #-144]
  42577c:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  425780:	add	x1, x1, #0x546
  425784:	bl	40a930 <strcmp@plt>
  425788:	cbnz	w0, 425b08 <builtin_path_id+0x618>
  42578c:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  425790:	sub	x2, x29, #0x98
  425794:	mov	x0, x26
  425798:	add	x1, x1, #0x552
  42579c:	bl	40ace0 <sd_device_get_sysattr_value@plt>
  4257a0:	tbnz	w0, #31, 425a2c <builtin_path_id+0x53c>
  4257a4:	ldur	x2, [x29, #-152]
  4257a8:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  4257ac:	sub	x0, x29, #0xb0
  4257b0:	add	x1, x1, #0x55e
  4257b4:	bl	4264a8 <path_prepend>
  4257b8:	mov	x0, x26
  4257bc:	mov	x1, x27
  4257c0:	bl	4265c0 <skip_subsystem>
  4257c4:	mov	x26, x0
  4257c8:	mov	w28, #0x1                   	// #1
  4257cc:	b	425b08 <builtin_path_id+0x618>
  4257d0:	ldur	x22, [x29, #-168]
  4257d4:	add	x1, sp, #0x10
  4257d8:	mov	x0, x22
  4257dc:	bl	40a780 <sd_device_get_sysname@plt>
  4257e0:	tbnz	w0, #31, 4258a0 <builtin_path_id+0x3b0>
  4257e4:	ldr	x0, [sp, #16]
  4257e8:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  4257ec:	sub	x2, x29, #0x10
  4257f0:	sub	x3, x29, #0x18
  4257f4:	add	x1, x1, #0x862
  4257f8:	bl	40b580 <__isoc99_sscanf@plt>
  4257fc:	cmp	w0, #0x2
  425800:	b.ne	4258a0 <builtin_path_id+0x3b0>  // b.any
  425804:	ldur	w2, [x29, #-24]
  425808:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  42580c:	sub	x0, x29, #0xb0
  425810:	add	x1, x1, #0x86c
  425814:	bl	4264a8 <path_prepend>
  425818:	mov	x0, x22
  42581c:	mov	x1, x24
  425820:	bl	4265c0 <skip_subsystem>
  425824:	mov	x26, x0
  425828:	b	4258a4 <builtin_path_id+0x3b4>
  42582c:	ldur	x0, [x29, #-168]
  425830:	add	x1, sp, #0x10
  425834:	bl	40a780 <sd_device_get_sysname@plt>
  425838:	tbnz	w0, #31, 425738 <builtin_path_id+0x248>
  42583c:	ldr	x22, [sp, #16]
  425840:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  425844:	mov	w2, #0x3                   	// #3
  425848:	add	x1, x1, #0x530
  42584c:	mov	x0, x22
  425850:	bl	40a6a0 <strncmp@plt>
  425854:	cbz	w0, 4259c8 <builtin_path_id+0x4d8>
  425858:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  42585c:	mov	w2, #0x2                   	// #2
  425860:	mov	x0, x22
  425864:	add	x1, x1, #0x53e
  425868:	bl	40a6a0 <strncmp@plt>
  42586c:	cbnz	w0, 425738 <builtin_path_id+0x248>
  425870:	ldrb	w22, [x22, #2]
  425874:	adrp	x0, 43d000 <worker_hash_op+0x8df8>
  425878:	mov	w2, #0x4                   	// #4
  42587c:	add	x0, x0, #0x534
  425880:	mov	w1, w22
  425884:	bl	40b180 <memchr@plt>
  425888:	cbz	x0, 425738 <builtin_path_id+0x248>
  42588c:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  425890:	sub	x0, x29, #0xb0
  425894:	add	x1, x1, #0x541
  425898:	mov	w2, w22
  42589c:	b	4259f4 <builtin_path_id+0x504>
  4258a0:	mov	x26, xzr
  4258a4:	adrp	x22, 43d000 <worker_hash_op+0x8df8>
  4258a8:	stur	x26, [x29, #-168]
  4258ac:	mov	w25, #0x1                   	// #1
  4258b0:	add	x22, x22, #0xa3
  4258b4:	b	425744 <builtin_path_id+0x254>
  4258b8:	ldur	x26, [x29, #-168]
  4258bc:	sub	x1, x29, #0x10
  4258c0:	mov	x0, x26
  4258c4:	bl	40a870 <sd_device_get_devtype@plt>
  4258c8:	tbnz	w0, #31, 425b08 <builtin_path_id+0x618>
  4258cc:	adrp	x8, 46e000 <keyboard_lookup_key.wordlist+0x16bd8>
  4258d0:	add	x8, x8, #0x398
  4258d4:	ldr	q0, [x8]
  4258d8:	ldr	x8, [x8, #16]
  4258dc:	ldur	x1, [x29, #-16]
  4258e0:	add	x0, sp, #0x10
  4258e4:	str	q0, [sp, #16]
  4258e8:	str	x8, [sp, #32]
  4258ec:	bl	40b1e0 <strv_find@plt>
  4258f0:	cbz	x0, 425b08 <builtin_path_id+0x618>
  4258f4:	sub	x1, x29, #0x18
  4258f8:	mov	x0, x26
  4258fc:	bl	40a780 <sd_device_get_sysname@plt>
  425900:	tbnz	w0, #31, 425b08 <builtin_path_id+0x618>
  425904:	ldur	x0, [x29, #-24]
  425908:	mov	w1, #0x2d                  	// #45
  42590c:	bl	40a7d0 <strchr@plt>
  425910:	cbz	x0, 425b08 <builtin_path_id+0x618>
  425914:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  425918:	add	x2, x0, #0x1
  42591c:	sub	x0, x29, #0xb0
  425920:	add	x1, x1, #0x879
  425924:	bl	4264a8 <path_prepend>
  425928:	adrp	x1, 439000 <worker_hash_op+0x4df8>
  42592c:	mov	x0, x26
  425930:	add	x1, x1, #0x87f
  425934:	bl	4265c0 <skip_subsystem>
  425938:	mov	x26, x0
  42593c:	b	425b08 <builtin_path_id+0x618>
  425940:	ldur	x26, [x29, #-168]
  425944:	add	x1, sp, #0x10
  425948:	mov	x0, x26
  42594c:	bl	40a780 <sd_device_get_sysname@plt>
  425950:	tbnz	w0, #31, 425b04 <builtin_path_id+0x614>
  425954:	ldr	x0, [sp, #16]
  425958:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  42595c:	sub	x2, x29, #0x10
  425960:	add	x1, x1, #0x1e5
  425964:	bl	40b580 <__isoc99_sscanf@plt>
  425968:	cmp	w0, #0x1
  42596c:	b.ne	425b04 <builtin_path_id+0x614>  // b.any
  425970:	ldur	w2, [x29, #-16]
  425974:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  425978:	sub	x0, x29, #0xb0
  42597c:	add	x1, x1, #0x882
  425980:	bl	4264a8 <path_prepend>
  425984:	b	425b08 <builtin_path_id+0x618>
  425988:	ldur	x0, [x29, #-168]
  42598c:	add	x1, sp, #0x10
  425990:	bl	40acc0 <sd_device_get_sysnum@plt>
  425994:	tbnz	w0, #31, 425740 <builtin_path_id+0x250>
  425998:	ldr	x2, [sp, #16]
  42599c:	cbz	x2, 425740 <builtin_path_id+0x250>
  4259a0:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  4259a4:	sub	x0, x29, #0xb0
  4259a8:	add	x1, x1, #0x4a8
  4259ac:	bl	4264a8 <path_prepend>
  4259b0:	ldur	x0, [x29, #-168]
  4259b4:	adrp	x1, 43c000 <worker_hash_op+0x7df8>
  4259b8:	add	x1, x1, #0xabe
  4259bc:	bl	4265c0 <skip_subsystem>
  4259c0:	stur	x0, [x29, #-168]
  4259c4:	b	425740 <builtin_path_id+0x250>
  4259c8:	ldrb	w26, [x22, #3]
  4259cc:	adrp	x0, 43d000 <worker_hash_op+0x8df8>
  4259d0:	mov	w2, #0x4                   	// #4
  4259d4:	add	x0, x0, #0x534
  4259d8:	mov	w1, w26
  4259dc:	bl	40b180 <memchr@plt>
  4259e0:	cbz	x0, 425858 <builtin_path_id+0x368>
  4259e4:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  4259e8:	sub	x0, x29, #0xb0
  4259ec:	add	x1, x1, #0x538
  4259f0:	mov	w2, w26
  4259f4:	bl	4264a8 <path_prepend>
  4259f8:	b	425738 <builtin_path_id+0x248>
  4259fc:	ldur	x2, [x29, #-192]
  425a00:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  425a04:	sub	x0, x29, #0xb0
  425a08:	add	x1, x1, #0x4b1
  425a0c:	bl	4264a8 <path_prepend>
  425a10:	ldur	x0, [x29, #-168]
  425a14:	mov	x1, x22
  425a18:	bl	4265c0 <skip_subsystem>
  425a1c:	mov	x26, x0
  425a20:	stur	x0, [x29, #-168]
  425a24:	mov	w28, #0x1                   	// #1
  425a28:	b	425744 <builtin_path_id+0x254>
  425a2c:	sub	x1, x29, #0xa0
  425a30:	mov	x0, x26
  425a34:	bl	40a860 <sd_device_get_syspath@plt>
  425a38:	tbnz	w0, #31, 425b04 <builtin_path_id+0x614>
  425a3c:	ldur	x22, [x29, #-160]
  425a40:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  425a44:	add	x1, x1, #0x56c
  425a48:	mov	x0, x22
  425a4c:	bl	40b1f0 <strstr@plt>
  425a50:	cbz	x0, 425bd0 <builtin_path_id+0x6e0>
  425a54:	stur	xzr, [x29, #-24]
  425a58:	stur	xzr, [x29, #-48]
  425a5c:	cbz	x26, 426418 <builtin_path_id+0xf28>
  425a60:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  425a64:	sub	x3, x29, #0x10
  425a68:	mov	x0, x26
  425a6c:	mov	x1, x27
  425a70:	add	x2, x2, #0x5de
  425a74:	bl	40b530 <sd_device_get_parent_with_subsystem_devtype@plt>
  425a78:	tbnz	w0, #31, 425b5c <builtin_path_id+0x66c>
  425a7c:	ldur	x0, [x29, #-16]
  425a80:	sub	x1, x29, #0x28
  425a84:	bl	40a780 <sd_device_get_sysname@plt>
  425a88:	tbnz	w0, #31, 425b5c <builtin_path_id+0x66c>
  425a8c:	ldur	x2, [x29, #-40]
  425a90:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  425a94:	sub	x0, x29, #0x18
  425a98:	add	x1, x1, #0x5ea
  425a9c:	bl	40b5e0 <sd_device_new_from_subsystem_sysname@plt>
  425aa0:	tbnz	w0, #31, 425b5c <builtin_path_id+0x66c>
  425aa4:	ldur	x0, [x29, #-24]
  425aa8:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  425aac:	sub	x2, x29, #0x20
  425ab0:	add	x1, x1, #0x5f7
  425ab4:	bl	40ace0 <sd_device_get_sysattr_value@plt>
  425ab8:	tbnz	w0, #31, 425b5c <builtin_path_id+0x66c>
  425abc:	add	x1, sp, #0x10
  425ac0:	mov	x0, x26
  425ac4:	bl	40acc0 <sd_device_get_sysnum@plt>
  425ac8:	tbnz	w0, #31, 426048 <builtin_path_id+0xb58>
  425acc:	ldr	x0, [sp, #16]
  425ad0:	cbz	x0, 426048 <builtin_path_id+0xb58>
  425ad4:	mov	w2, #0xa                   	// #10
  425ad8:	mov	x1, xzr
  425adc:	bl	40b550 <strtoul@plt>
  425ae0:	mov	x8, x0
  425ae4:	cmp	x0, #0xff
  425ae8:	b.hi	426030 <builtin_path_id+0xb40>  // b.pmore
  425aec:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  425af0:	sub	x0, x29, #0x30
  425af4:	add	x1, x1, #0x60a
  425af8:	mov	x2, x8
  425afc:	bl	4264a8 <path_prepend>
  425b00:	b	426048 <builtin_path_id+0xb58>
  425b04:	mov	x26, xzr
  425b08:	stur	x26, [x29, #-168]
  425b0c:	mov	w25, #0x1                   	// #1
  425b10:	b	425744 <builtin_path_id+0x254>
  425b14:	ldur	x2, [x29, #-192]
  425b18:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  425b1c:	sub	x0, x29, #0xb0
  425b20:	add	x1, x1, #0x4b8
  425b24:	bl	4264a8 <path_prepend>
  425b28:	ldur	x0, [x29, #-168]
  425b2c:	mov	x1, x20
  425b30:	bl	4265c0 <skip_subsystem>
  425b34:	mov	x26, x0
  425b38:	stur	x0, [x29, #-168]
  425b3c:	mov	w28, #0x1                   	// #1
  425b40:	mov	w25, #0x1                   	// #1
  425b44:	b	425bb4 <builtin_path_id+0x6c4>
  425b48:	ldur	x2, [x29, #-192]
  425b4c:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  425b50:	sub	x0, x29, #0xb0
  425b54:	add	x1, x1, #0x4c9
  425b58:	b	425b98 <builtin_path_id+0x6a8>
  425b5c:	mov	x22, xzr
  425b60:	mov	x26, xzr
  425b64:	mov	x0, x22
  425b68:	bl	40a320 <free@plt>
  425b6c:	ldur	x0, [x29, #-24]
  425b70:	cbz	x0, 425b78 <builtin_path_id+0x688>
  425b74:	bl	40a6e0 <sd_device_unref@plt>
  425b78:	mov	w28, #0x1                   	// #1
  425b7c:	adrp	x22, 43d000 <worker_hash_op+0x8df8>
  425b80:	add	x22, x22, #0xa3
  425b84:	b	425b08 <builtin_path_id+0x618>
  425b88:	ldur	x2, [x29, #-192]
  425b8c:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  425b90:	sub	x0, x29, #0xb0
  425b94:	add	x1, x1, #0x4d5
  425b98:	bl	4264a8 <path_prepend>
  425b9c:	ldur	x0, [x29, #-168]
  425ba0:	mov	x1, x20
  425ba4:	bl	4265c0 <skip_subsystem>
  425ba8:	mov	x26, x0
  425bac:	mov	w28, #0x1                   	// #1
  425bb0:	stur	x0, [x29, #-168]
  425bb4:	mov	x20, x27
  425bb8:	mov	x27, x21
  425bbc:	adrp	x21, 43d000 <worker_hash_op+0x8df8>
  425bc0:	adrp	x23, 43d000 <worker_hash_op+0x8df8>
  425bc4:	add	x21, x21, #0x493
  425bc8:	add	x23, x23, #0x4dc
  425bcc:	b	425744 <builtin_path_id+0x254>
  425bd0:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  425bd4:	mov	x0, x22
  425bd8:	add	x1, x1, #0x574
  425bdc:	bl	40b1f0 <strstr@plt>
  425be0:	cbz	x0, 425dcc <builtin_path_id+0x8dc>
  425be4:	stp	xzr, xzr, [x29, #-96]
  425be8:	stp	xzr, xzr, [x29, #-112]
  425bec:	stur	xzr, [x29, #-136]
  425bf0:	cbz	x26, 42643c <builtin_path_id+0xf4c>
  425bf4:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  425bf8:	sub	x3, x29, #0x40
  425bfc:	mov	x0, x26
  425c00:	mov	x1, x27
  425c04:	add	x2, x2, #0x5de
  425c08:	bl	40b530 <sd_device_get_parent_with_subsystem_devtype@plt>
  425c0c:	adrp	x22, 43d000 <worker_hash_op+0x8df8>
  425c10:	add	x22, x22, #0xa3
  425c14:	tbnz	w0, #31, 426184 <builtin_path_id+0xc94>
  425c18:	ldur	x0, [x29, #-64]
  425c1c:	sub	x1, x29, #0x48
  425c20:	bl	40ab60 <sd_device_get_parent@plt>
  425c24:	tbnz	w0, #31, 426184 <builtin_path_id+0xc94>
  425c28:	ldur	x0, [x29, #-72]
  425c2c:	sub	x1, x29, #0x80
  425c30:	bl	40a780 <sd_device_get_sysname@plt>
  425c34:	tbnz	w0, #31, 426184 <builtin_path_id+0xc94>
  425c38:	ldur	x2, [x29, #-128]
  425c3c:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  425c40:	sub	x0, x29, #0x58
  425c44:	add	x1, x1, #0x65c
  425c48:	bl	40b5e0 <sd_device_new_from_subsystem_sysname@plt>
  425c4c:	tbnz	w0, #31, 426184 <builtin_path_id+0xc94>
  425c50:	ldur	x0, [x29, #-72]
  425c54:	sub	x1, x29, #0x50
  425c58:	bl	40ab60 <sd_device_get_parent@plt>
  425c5c:	tbnz	w0, #31, 426184 <builtin_path_id+0xc94>
  425c60:	ldur	x0, [x29, #-80]
  425c64:	sub	x1, x29, #0x80
  425c68:	bl	40a780 <sd_device_get_sysname@plt>
  425c6c:	tbnz	w0, #31, 426184 <builtin_path_id+0xc94>
  425c70:	ldur	x2, [x29, #-128]
  425c74:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  425c78:	sub	x0, x29, #0x68
  425c7c:	add	x1, x1, #0x667
  425c80:	bl	40b5e0 <sd_device_new_from_subsystem_sysname@plt>
  425c84:	tbnz	w0, #31, 426184 <builtin_path_id+0xc94>
  425c88:	ldur	x0, [x29, #-104]
  425c8c:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  425c90:	sub	x2, x29, #0x78
  425c94:	add	x1, x1, #0x670
  425c98:	bl	40ace0 <sd_device_get_sysattr_value@plt>
  425c9c:	tbnz	w0, #31, 426184 <builtin_path_id+0xc94>
  425ca0:	ldur	x0, [x29, #-120]
  425ca4:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  425ca8:	mov	w2, #0x2                   	// #2
  425cac:	add	x1, x1, #0xbc
  425cb0:	bl	40a6a0 <strncmp@plt>
  425cb4:	cbz	w0, 4260d4 <builtin_path_id+0xbe4>
  425cb8:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  425cbc:	sub	x3, x29, #0x10
  425cc0:	mov	x0, x26
  425cc4:	mov	x1, x27
  425cc8:	add	x2, x2, #0x5de
  425ccc:	stur	xzr, [x29, #-32]
  425cd0:	stur	xzr, [x29, #-56]
  425cd4:	bl	40b530 <sd_device_get_parent_with_subsystem_devtype@plt>
  425cd8:	tbnz	w0, #31, 4260a4 <builtin_path_id+0xbb4>
  425cdc:	ldur	x0, [x29, #-16]
  425ce0:	sub	x1, x29, #0x18
  425ce4:	bl	40ab60 <sd_device_get_parent@plt>
  425ce8:	tbnz	w0, #31, 4260a4 <builtin_path_id+0xbb4>
  425cec:	ldur	x0, [x29, #-24]
  425cf0:	sub	x1, x29, #0x30
  425cf4:	bl	40a780 <sd_device_get_sysname@plt>
  425cf8:	tbnz	w0, #31, 4260a4 <builtin_path_id+0xbb4>
  425cfc:	ldur	x2, [x29, #-48]
  425d00:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  425d04:	sub	x0, x29, #0x20
  425d08:	add	x1, x1, #0x65c
  425d0c:	bl	40b5e0 <sd_device_new_from_subsystem_sysname@plt>
  425d10:	tbnz	w0, #31, 4260a4 <builtin_path_id+0xbb4>
  425d14:	ldur	x0, [x29, #-32]
  425d18:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  425d1c:	sub	x2, x29, #0x28
  425d20:	add	x1, x1, #0x688
  425d24:	bl	40ace0 <sd_device_get_sysattr_value@plt>
  425d28:	tbnz	w0, #31, 4260a4 <builtin_path_id+0xbb4>
  425d2c:	add	x1, sp, #0x10
  425d30:	mov	x0, x26
  425d34:	bl	40acc0 <sd_device_get_sysnum@plt>
  425d38:	tbnz	w0, #31, 426250 <builtin_path_id+0xd60>
  425d3c:	ldr	x0, [sp, #16]
  425d40:	cbz	x0, 426250 <builtin_path_id+0xd60>
  425d44:	mov	w2, #0xa                   	// #10
  425d48:	mov	x1, xzr
  425d4c:	bl	40b550 <strtoul@plt>
  425d50:	mov	x8, x0
  425d54:	cmp	x0, #0xff
  425d58:	b.hi	426238 <builtin_path_id+0xd48>  // b.pmore
  425d5c:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  425d60:	sub	x0, x29, #0x38
  425d64:	add	x1, x1, #0x60a
  425d68:	mov	x2, x8
  425d6c:	bl	4264a8 <path_prepend>
  425d70:	b	426250 <builtin_path_id+0xd60>
  425d74:	ldur	x0, [x29, #-168]
  425d78:	mov	x1, x20
  425d7c:	bl	4265c0 <skip_subsystem>
  425d80:	mov	x26, x0
  425d84:	stur	x0, [x29, #-168]
  425d88:	mov	w25, #0x1                   	// #1
  425d8c:	b	425bb8 <builtin_path_id+0x6c8>
  425d90:	ldur	x2, [x29, #-192]
  425d94:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  425d98:	sub	x0, x29, #0xb0
  425d9c:	add	x1, x1, #0x4e0
  425da0:	bl	4264a8 <path_prepend>
  425da4:	ldur	x0, [x29, #-168]
  425da8:	mov	x1, x23
  425dac:	bl	4265c0 <skip_subsystem>
  425db0:	adrp	x21, 43d000 <worker_hash_op+0x8df8>
  425db4:	mov	x26, x0
  425db8:	stur	x0, [x29, #-168]
  425dbc:	mov	w28, #0x1                   	// #1
  425dc0:	mov	w25, #0x1                   	// #1
  425dc4:	add	x21, x21, #0x493
  425dc8:	b	425744 <builtin_path_id+0x254>
  425dcc:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  425dd0:	mov	x0, x22
  425dd4:	add	x1, x1, #0x581
  425dd8:	bl	40b1f0 <strstr@plt>
  425ddc:	cbz	x0, 425e3c <builtin_path_id+0x94c>
  425de0:	sub	x1, x29, #0xb0
  425de4:	mov	x0, x26
  425de8:	bl	426680 <handle_scsi_iscsi>
  425dec:	mov	x26, x0
  425df0:	b	425b78 <builtin_path_id+0x688>
  425df4:	ldur	x2, [x29, #-192]
  425df8:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  425dfc:	sub	x0, x29, #0xb0
  425e00:	add	x1, x1, #0x4e7
  425e04:	bl	4264a8 <path_prepend>
  425e08:	ldur	x0, [x29, #-168]
  425e0c:	adrp	x1, 43c000 <worker_hash_op+0x7df8>
  425e10:	add	x1, x1, #0xec8
  425e14:	b	425f68 <builtin_path_id+0xa78>
  425e18:	ldur	x2, [x29, #-192]
  425e1c:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  425e20:	sub	x0, x29, #0xb0
  425e24:	add	x1, x1, #0x4ee
  425e28:	bl	4264a8 <path_prepend>
  425e2c:	ldur	x0, [x29, #-168]
  425e30:	adrp	x1, 43c000 <worker_hash_op+0x7df8>
  425e34:	add	x1, x1, #0xebf
  425e38:	b	425f68 <builtin_path_id+0xa78>
  425e3c:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  425e40:	mov	x0, x22
  425e44:	add	x1, x1, #0x58a
  425e48:	bl	40b1f0 <strstr@plt>
  425e4c:	cbz	x0, 426010 <builtin_path_id+0xb20>
  425e50:	stur	xzr, [x29, #-24]
  425e54:	cbz	x26, 426460 <builtin_path_id+0xf70>
  425e58:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  425e5c:	add	x3, sp, #0x10
  425e60:	mov	x0, x26
  425e64:	mov	x1, x27
  425e68:	add	x2, x2, #0x797
  425e6c:	bl	40b530 <sd_device_get_parent_with_subsystem_devtype@plt>
  425e70:	adrp	x22, 43d000 <worker_hash_op+0x8df8>
  425e74:	add	x22, x22, #0xa3
  425e78:	tbnz	w0, #31, 425f34 <builtin_path_id+0xa44>
  425e7c:	ldr	x0, [sp, #16]
  425e80:	sub	x1, x29, #0x10
  425e84:	bl	40ab60 <sd_device_get_parent@plt>
  425e88:	tbnz	w0, #31, 425f34 <builtin_path_id+0xa44>
  425e8c:	ldur	x0, [x29, #-16]
  425e90:	sub	x1, x29, #0x28
  425e94:	bl	40a780 <sd_device_get_sysname@plt>
  425e98:	tbnz	w0, #31, 425f34 <builtin_path_id+0xa44>
  425e9c:	ldur	x2, [x29, #-40]
  425ea0:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  425ea4:	sub	x0, x29, #0x18
  425ea8:	add	x1, x1, #0x7a1
  425eac:	bl	40b5e0 <sd_device_new_from_subsystem_sysname@plt>
  425eb0:	tbnz	w0, #31, 425f34 <builtin_path_id+0xa44>
  425eb4:	ldur	x0, [x29, #-24]
  425eb8:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  425ebc:	sub	x2, x29, #0x20
  425ec0:	add	x1, x1, #0x7aa
  425ec4:	bl	40ace0 <sd_device_get_sysattr_value@plt>
  425ec8:	tbnz	w0, #31, 425f34 <builtin_path_id+0xa44>
  425ecc:	ldur	x2, [x29, #-32]
  425ed0:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  425ed4:	sub	x0, x29, #0xb0
  425ed8:	add	x1, x1, #0x7b2
  425edc:	bl	4264a8 <path_prepend>
  425ee0:	b	425f38 <builtin_path_id+0xa48>
  425ee4:	ldur	x26, [x29, #-168]
  425ee8:	cbz	x26, 426484 <builtin_path_id+0xf94>
  425eec:	adrp	x1, 43c000 <worker_hash_op+0x7df8>
  425ef0:	sub	x2, x29, #0x18
  425ef4:	mov	x0, x26
  425ef8:	add	x1, x1, #0xcdd
  425efc:	bl	40ace0 <sd_device_get_sysattr_value@plt>
  425f00:	tbnz	w0, #31, 425f80 <builtin_path_id+0xa90>
  425f04:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  425f08:	sub	x2, x29, #0x20
  425f0c:	mov	x0, x26
  425f10:	add	x1, x1, #0x900
  425f14:	bl	40ace0 <sd_device_get_sysattr_value@plt>
  425f18:	tbnz	w0, #31, 425f80 <builtin_path_id+0xa90>
  425f1c:	ldp	x3, x2, [x29, #-32]
  425f20:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  425f24:	sub	x0, x29, #0xb0
  425f28:	add	x1, x1, #0x90d
  425f2c:	bl	4264a8 <path_prepend>
  425f30:	b	425fa4 <builtin_path_id+0xab4>
  425f34:	mov	x26, xzr
  425f38:	ldur	x0, [x29, #-24]
  425f3c:	cbz	x0, 425b08 <builtin_path_id+0x618>
  425f40:	bl	40a6e0 <sd_device_unref@plt>
  425f44:	b	425b08 <builtin_path_id+0x618>
  425f48:	ldur	x2, [x29, #-192]
  425f4c:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  425f50:	sub	x0, x29, #0xb0
  425f54:	add	x1, x1, #0x502
  425f58:	bl	4264a8 <path_prepend>
  425f5c:	ldur	x0, [x29, #-168]
  425f60:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  425f64:	add	x1, x1, #0x4fd
  425f68:	bl	4265c0 <skip_subsystem>
  425f6c:	mov	x26, x0
  425f70:	stur	x0, [x29, #-168]
  425f74:	mov	w28, #0x1                   	// #1
  425f78:	mov	w25, #0x1                   	// #1
  425f7c:	b	425744 <builtin_path_id+0x254>
  425f80:	add	x1, sp, #0x10
  425f84:	mov	x0, x26
  425f88:	bl	40a780 <sd_device_get_sysname@plt>
  425f8c:	tbnz	w0, #31, 425fa4 <builtin_path_id+0xab4>
  425f90:	ldr	x2, [sp, #16]
  425f94:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  425f98:	sub	x0, x29, #0xb0
  425f9c:	add	x1, x1, #0x916
  425fa0:	bl	4264a8 <path_prepend>
  425fa4:	sub	x1, x29, #0x10
  425fa8:	mov	x0, x26
  425fac:	str	x26, [sp, #16]
  425fb0:	bl	40a850 <sd_device_get_subsystem@plt>
  425fb4:	tbnz	w0, #31, 425fcc <builtin_path_id+0xadc>
  425fb8:	ldur	x0, [x29, #-16]
  425fbc:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  425fc0:	add	x1, x1, #0x4fa
  425fc4:	bl	40a930 <strcmp@plt>
  425fc8:	cbz	w0, 425fd8 <builtin_path_id+0xae8>
  425fcc:	stur	x26, [x29, #-168]
  425fd0:	b	425f74 <builtin_path_id+0xa84>
  425fd4:	ldr	x26, [sp, #16]
  425fd8:	add	x1, sp, #0x10
  425fdc:	mov	x0, x26
  425fe0:	bl	40ab60 <sd_device_get_parent@plt>
  425fe4:	tbnz	w0, #31, 425fcc <builtin_path_id+0xadc>
  425fe8:	ldr	x0, [sp, #16]
  425fec:	sub	x1, x29, #0x10
  425ff0:	bl	40a850 <sd_device_get_subsystem@plt>
  425ff4:	tbnz	w0, #31, 425fcc <builtin_path_id+0xadc>
  425ff8:	ldur	x0, [x29, #-16]
  425ffc:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  426000:	add	x1, x1, #0x4fa
  426004:	bl	40a930 <strcmp@plt>
  426008:	cbz	w0, 425fd4 <builtin_path_id+0xae4>
  42600c:	b	425fcc <builtin_path_id+0xadc>
  426010:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  426014:	mov	x0, x22
  426018:	add	x1, x1, #0x58f
  42601c:	bl	40b1f0 <strstr@plt>
  426020:	cbz	x0, 426078 <builtin_path_id+0xb88>
  426024:	sub	x1, x29, #0xb0
  426028:	mov	w2, #0x25                  	// #37
  42602c:	b	426094 <builtin_path_id+0xba4>
  426030:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  426034:	and	x2, x8, #0xffff
  426038:	ubfx	x3, x8, #16, #16
  42603c:	sub	x0, x29, #0x30
  426040:	add	x1, x1, #0x612
  426044:	bl	4264a8 <path_prepend>
  426048:	ldur	x22, [x29, #-48]
  42604c:	ldur	x2, [x29, #-32]
  426050:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  426054:	sub	x0, x29, #0xb0
  426058:	add	x1, x1, #0x601
  42605c:	mov	x3, x22
  426060:	bl	4264a8 <path_prepend>
  426064:	mov	x0, x22
  426068:	bl	40a320 <free@plt>
  42606c:	ldur	x0, [x29, #-24]
  426070:	cbnz	x0, 425b74 <builtin_path_id+0x684>
  426074:	b	425b78 <builtin_path_id+0x688>
  426078:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  42607c:	mov	x0, x22
  426080:	add	x1, x1, #0x597
  426084:	bl	40b1f0 <strstr@plt>
  426088:	sub	x1, x29, #0xb0
  42608c:	cbz	x0, 4260c8 <builtin_path_id+0xbd8>
  426090:	mov	w2, #0x26                  	// #38
  426094:	mov	x0, x26
  426098:	bl	426938 <handle_scsi_hyperv>
  42609c:	mov	x26, x0
  4260a0:	b	425b7c <builtin_path_id+0x68c>
  4260a4:	mov	x22, xzr
  4260a8:	mov	x26, xzr
  4260ac:	mov	x0, x22
  4260b0:	bl	40a320 <free@plt>
  4260b4:	ldur	x0, [x29, #-32]
  4260b8:	cbz	x0, 4260c0 <builtin_path_id+0xbd0>
  4260bc:	bl	40a6e0 <sd_device_unref@plt>
  4260c0:	mov	x28, xzr
  4260c4:	b	42621c <builtin_path_id+0xd2c>
  4260c8:	mov	x0, x26
  4260cc:	bl	426b18 <handle_scsi_default>
  4260d0:	b	42609c <builtin_path_id+0xbac>
  4260d4:	ldur	x0, [x29, #-88]
  4260d8:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  4260dc:	sub	x2, x29, #0x18
  4260e0:	add	x1, x1, #0x679
  4260e4:	bl	40ace0 <sd_device_get_sysattr_value@plt>
  4260e8:	tbnz	w0, #31, 426184 <builtin_path_id+0xc94>
  4260ec:	ldur	x0, [x29, #-80]
  4260f0:	sub	x1, x29, #0x10
  4260f4:	bl	40ab60 <sd_device_get_parent@plt>
  4260f8:	tbnz	w0, #31, 4261bc <builtin_path_id+0xccc>
  4260fc:	ldur	x0, [x29, #-16]
  426100:	sub	x1, x29, #0x80
  426104:	bl	40a780 <sd_device_get_sysname@plt>
  426108:	tbnz	w0, #31, 4261bc <builtin_path_id+0xccc>
  42610c:	ldur	x2, [x29, #-128]
  426110:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  426114:	sub	x0, x29, #0x60
  426118:	add	x1, x1, #0x65c
  42611c:	bl	40b5e0 <sd_device_new_from_subsystem_sysname@plt>
  426120:	tbnz	w0, #31, 42613c <builtin_path_id+0xc4c>
  426124:	ldur	x0, [x29, #-96]
  426128:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  42612c:	sub	x2, x29, #0x70
  426130:	add	x1, x1, #0x688
  426134:	bl	40ace0 <sd_device_get_sysattr_value@plt>
  426138:	tbnz	w0, #31, 4261bc <builtin_path_id+0xccc>
  42613c:	add	x1, sp, #0x10
  426140:	mov	x0, x26
  426144:	bl	40acc0 <sd_device_get_sysnum@plt>
  426148:	tbnz	w0, #31, 4261e0 <builtin_path_id+0xcf0>
  42614c:	ldr	x0, [sp, #16]
  426150:	cbz	x0, 4261e0 <builtin_path_id+0xcf0>
  426154:	mov	w2, #0xa                   	// #10
  426158:	mov	x1, xzr
  42615c:	bl	40b550 <strtoul@plt>
  426160:	mov	x8, x0
  426164:	cmp	x0, #0xff
  426168:	b.hi	4261c8 <builtin_path_id+0xcd8>  // b.pmore
  42616c:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  426170:	sub	x0, x29, #0x88
  426174:	add	x1, x1, #0x60a
  426178:	mov	x2, x8
  42617c:	bl	4264a8 <path_prepend>
  426180:	b	4261e0 <builtin_path_id+0xcf0>
  426184:	mov	x28, xzr
  426188:	mov	x26, xzr
  42618c:	mov	x0, x28
  426190:	bl	40a320 <free@plt>
  426194:	ldur	x0, [x29, #-104]
  426198:	cbz	x0, 4261a0 <builtin_path_id+0xcb0>
  42619c:	bl	40a6e0 <sd_device_unref@plt>
  4261a0:	ldur	x0, [x29, #-96]
  4261a4:	cbz	x0, 4261ac <builtin_path_id+0xcbc>
  4261a8:	bl	40a6e0 <sd_device_unref@plt>
  4261ac:	ldur	x0, [x29, #-88]
  4261b0:	cbz	x0, 4257c8 <builtin_path_id+0x2d8>
  4261b4:	bl	40a6e0 <sd_device_unref@plt>
  4261b8:	b	4257c8 <builtin_path_id+0x2d8>
  4261bc:	mov	x28, xzr
  4261c0:	mov	x26, xzr
  4261c4:	b	42621c <builtin_path_id+0xd2c>
  4261c8:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  4261cc:	and	x2, x8, #0xffff
  4261d0:	ubfx	x3, x8, #16, #16
  4261d4:	sub	x0, x29, #0x88
  4261d8:	add	x1, x1, #0x612
  4261dc:	bl	4264a8 <path_prepend>
  4261e0:	ldur	x2, [x29, #-112]
  4261e4:	ldur	x3, [x29, #-24]
  4261e8:	ldur	x28, [x29, #-136]
  4261ec:	sub	x0, x29, #0xb0
  4261f0:	cbz	x2, 426208 <builtin_path_id+0xd18>
  4261f4:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  4261f8:	add	x1, x1, #0x694
  4261fc:	mov	x4, x28
  426200:	bl	4264a8 <path_prepend>
  426204:	b	42621c <builtin_path_id+0xd2c>
  426208:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  42620c:	add	x1, x1, #0x6a7
  426210:	mov	x2, x3
  426214:	mov	x3, x28
  426218:	bl	4264a8 <path_prepend>
  42621c:	adrp	x22, 43d000 <worker_hash_op+0x8df8>
  426220:	add	x22, x22, #0xa3
  426224:	mov	x0, x28
  426228:	bl	40a320 <free@plt>
  42622c:	ldur	x0, [x29, #-104]
  426230:	cbnz	x0, 42619c <builtin_path_id+0xcac>
  426234:	b	4261a0 <builtin_path_id+0xcb0>
  426238:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  42623c:	and	x2, x8, #0xffff
  426240:	ubfx	x3, x8, #16, #16
  426244:	sub	x0, x29, #0x38
  426248:	add	x1, x1, #0x612
  42624c:	bl	4264a8 <path_prepend>
  426250:	ldur	x22, [x29, #-56]
  426254:	ldur	x2, [x29, #-40]
  426258:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  42625c:	sub	x0, x29, #0xb0
  426260:	add	x1, x1, #0x6b4
  426264:	mov	x3, x22
  426268:	bl	4264a8 <path_prepend>
  42626c:	mov	x0, x22
  426270:	bl	40a320 <free@plt>
  426274:	ldur	x0, [x29, #-32]
  426278:	cbnz	x0, 4260bc <builtin_path_id+0xbcc>
  42627c:	b	4260c0 <builtin_path_id+0xbd0>
  426280:	tst	w28, #0xff
  426284:	mov	w21, #0xfffffffe            	// #-2
  426288:	b.eq	4263c8 <builtin_path_id+0xed8>  // b.none
  42628c:	ldur	x8, [x29, #-176]
  426290:	cbz	x8, 4263c8 <builtin_path_id+0xed8>
  426294:	sub	x1, x29, #0x10
  426298:	mov	x0, x19
  42629c:	bl	40a850 <sd_device_get_subsystem@plt>
  4262a0:	tbnz	w0, #31, 4262c4 <builtin_path_id+0xdd4>
  4262a4:	ldur	x0, [x29, #-16]
  4262a8:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  4262ac:	add	x1, x1, #0x1ad
  4262b0:	bl	40a930 <strcmp@plt>
  4262b4:	cmp	w0, #0x0
  4262b8:	cset	w8, eq  // eq = none
  4262bc:	bic	w8, w8, w25
  4262c0:	tbnz	w8, #0, 42635c <builtin_path_id+0xe6c>
  4262c4:	ldur	x3, [x29, #-176]
  4262c8:	ldrb	w12, [x3]
  4262cc:	cbz	w12, 426364 <builtin_path_id+0xe74>
  4262d0:	ldr	w14, [sp, #12]
  4262d4:	mov	x8, xzr
  4262d8:	add	x9, x3, #0x1
  4262dc:	add	x10, sp, #0x10
  4262e0:	mov	w11, #0x5f                  	// #95
  4262e4:	b	4262fc <builtin_path_id+0xe0c>
  4262e8:	add	x13, x8, #0x1
  4262ec:	strb	w12, [x10, x8]
  4262f0:	mov	x8, x13
  4262f4:	ldrb	w12, [x9], #1
  4262f8:	cbz	w12, 42636c <builtin_path_id+0xe7c>
  4262fc:	sub	w13, w12, #0x30
  426300:	and	w13, w13, #0xff
  426304:	cmp	w13, #0xa
  426308:	b.cc	4262e8 <builtin_path_id+0xdf8>  // b.lo, b.ul, b.last
  42630c:	sub	w13, w12, #0x41
  426310:	and	w13, w13, #0xff
  426314:	cmp	w13, #0x1a
  426318:	b.cc	4262e8 <builtin_path_id+0xdf8>  // b.lo, b.ul, b.last
  42631c:	and	w13, w12, #0xff
  426320:	cmp	w13, #0x2d
  426324:	b.eq	4262e8 <builtin_path_id+0xdf8>  // b.none
  426328:	sub	w13, w12, #0x61
  42632c:	and	w13, w13, #0xff
  426330:	cmp	w13, #0x19
  426334:	b.ls	4262e8 <builtin_path_id+0xdf8>  // b.plast
  426338:	cbz	x8, 4262f4 <builtin_path_id+0xe04>
  42633c:	add	x12, x8, x10
  426340:	ldurb	w12, [x12, #-1]
  426344:	cmp	w12, #0x5f
  426348:	b.eq	4262f4 <builtin_path_id+0xe04>  // b.none
  42634c:	add	x12, x8, #0x1
  426350:	strb	w11, [x10, x8]
  426354:	mov	x8, x12
  426358:	b	4262f4 <builtin_path_id+0xe04>
  42635c:	mov	w21, #0xfffffffe            	// #-2
  426360:	b	4263c8 <builtin_path_id+0xed8>
  426364:	ldr	w14, [sp, #12]
  426368:	mov	x8, xzr
  42636c:	add	x10, sp, #0x10
  426370:	mov	x9, x8
  426374:	cbz	x8, 42638c <builtin_path_id+0xe9c>
  426378:	add	x8, x10, x9
  42637c:	ldurb	w8, [x8, #-1]
  426380:	cmp	w8, #0x5f
  426384:	sub	x8, x9, #0x1
  426388:	b.eq	426370 <builtin_path_id+0xe80>  // b.none
  42638c:	and	w20, w14, #0x1
  426390:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  426394:	add	x8, sp, #0x10
  426398:	add	x2, x2, #0x51c
  42639c:	mov	x0, x19
  4263a0:	mov	w1, w20
  4263a4:	strb	wzr, [x8, x9]
  4263a8:	bl	420aec <udev_builtin_add_property>
  4263ac:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  4263b0:	add	x2, x2, #0x524
  4263b4:	add	x3, sp, #0x10
  4263b8:	mov	x0, x19
  4263bc:	mov	w1, w20
  4263c0:	bl	420aec <udev_builtin_add_property>
  4263c4:	mov	w21, wzr
  4263c8:	ldur	x0, [x29, #-176]
  4263cc:	bl	40a320 <free@plt>
  4263d0:	mov	w0, w21
  4263d4:	add	sp, sp, #0x2d0
  4263d8:	ldp	x20, x19, [sp, #80]
  4263dc:	ldp	x22, x21, [sp, #64]
  4263e0:	ldp	x24, x23, [sp, #48]
  4263e4:	ldp	x26, x25, [sp, #32]
  4263e8:	ldp	x28, x27, [sp, #16]
  4263ec:	ldp	x29, x30, [sp], #96
  4263f0:	ret
  4263f4:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  4263f8:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  4263fc:	adrp	x4, 43d000 <worker_hash_op+0x8df8>
  426400:	add	x1, x1, #0x4f0
  426404:	add	x2, x2, #0x43d
  426408:	add	x4, x4, #0x45d
  42640c:	mov	w0, #0x1                   	// #1
  426410:	mov	w3, #0x20f                 	// #527
  426414:	bl	40a630 <log_assert_failed_realm@plt>
  426418:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  42641c:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  426420:	adrp	x4, 43d000 <worker_hash_op+0x8df8>
  426424:	add	x1, x1, #0xaaf
  426428:	add	x2, x2, #0x43d
  42642c:	add	x4, x4, #0x59e
  426430:	mov	w0, #0x1                   	// #1
  426434:	mov	w3, #0x6d                  	// #109
  426438:	bl	40a630 <log_assert_failed_realm@plt>
  42643c:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  426440:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  426444:	adrp	x4, 43d000 <worker_hash_op+0x8df8>
  426448:	add	x1, x1, #0xaaf
  42644c:	add	x2, x2, #0x43d
  426450:	add	x4, x4, #0x62b
  426454:	mov	w0, #0x1                   	// #1
  426458:	mov	w3, #0x9f                  	// #159
  42645c:	bl	40a630 <log_assert_failed_realm@plt>
  426460:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  426464:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  426468:	adrp	x4, 43d000 <worker_hash_op+0x8df8>
  42646c:	add	x1, x1, #0xaaf
  426470:	add	x2, x2, #0x43d
  426474:	add	x4, x4, #0x766
  426478:	mov	w0, #0x1                   	// #1
  42647c:	mov	w3, #0x105                 	// #261
  426480:	bl	40a630 <log_assert_failed_realm@plt>
  426484:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  426488:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  42648c:	adrp	x4, 43d000 <worker_hash_op+0x8df8>
  426490:	add	x1, x1, #0xaaf
  426494:	add	x2, x2, #0x43d
  426498:	add	x4, x4, #0x8d5
  42649c:	mov	w0, #0x1                   	// #1
  4264a0:	mov	w3, #0x1f8                 	// #504
  4264a4:	bl	40a630 <log_assert_failed_realm@plt>

00000000004264a8 <path_prepend>:
  4264a8:	sub	sp, sp, #0x120
  4264ac:	stp	x29, x30, [sp, #240]
  4264b0:	add	x29, sp, #0xf0
  4264b4:	sub	x9, x29, #0x70
  4264b8:	mov	x10, sp
  4264bc:	mov	x11, #0xffffffffffffffd0    	// #-48
  4264c0:	add	x8, x29, #0x30
  4264c4:	movk	x11, #0xff80, lsl #32
  4264c8:	add	x9, x9, #0x30
  4264cc:	add	x10, x10, #0x80
  4264d0:	stp	x8, x9, [x29, #-32]
  4264d4:	stp	x10, x11, [x29, #-16]
  4264d8:	stp	x2, x3, [x29, #-112]
  4264dc:	stp	x4, x5, [x29, #-96]
  4264e0:	stp	x6, x7, [x29, #-80]
  4264e4:	stp	q1, q2, [sp, #16]
  4264e8:	str	q0, [sp]
  4264ec:	ldp	q0, q1, [x29, #-32]
  4264f0:	stp	x20, x19, [sp, #272]
  4264f4:	mov	x19, x0
  4264f8:	add	x0, x29, #0x18
  4264fc:	sub	x2, x29, #0x40
  426500:	str	x28, [sp, #256]
  426504:	stp	q3, q4, [sp, #48]
  426508:	stp	q5, q6, [sp, #80]
  42650c:	str	q7, [sp, #112]
  426510:	str	xzr, [x29, #24]
  426514:	stp	q0, q1, [x29, #-64]
  426518:	bl	40b610 <vasprintf@plt>
  42651c:	tbnz	w0, #31, 426580 <path_prepend+0xd8>
  426520:	ldr	x2, [x19]
  426524:	cbz	x2, 426558 <path_prepend+0xb0>
  426528:	ldr	x0, [x29, #24]
  42652c:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  426530:	add	x1, x1, #0x897
  426534:	mov	x3, xzr
  426538:	bl	40b4c0 <strjoin_real@plt>
  42653c:	cbz	x0, 42659c <path_prepend+0xf4>
  426540:	mov	x20, x0
  426544:	ldr	x0, [x19]
  426548:	bl	40a320 <free@plt>
  42654c:	str	x20, [x19]
  426550:	ldr	x0, [x29, #24]
  426554:	b	426568 <path_prepend+0xc0>
  426558:	ldr	x8, [x29, #24]
  42655c:	mov	x0, xzr
  426560:	str	xzr, [x29, #24]
  426564:	str	x8, [x19]
  426568:	bl	40a320 <free@plt>
  42656c:	ldp	x20, x19, [sp, #272]
  426570:	ldr	x28, [sp, #256]
  426574:	ldp	x29, x30, [sp, #240]
  426578:	add	sp, sp, #0x120
  42657c:	ret
  426580:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  426584:	adrp	x3, 43d000 <worker_hash_op+0x8df8>
  426588:	add	x1, x1, #0x43d
  42658c:	add	x3, x3, #0x88a
  426590:	mov	w0, #0x1                   	// #1
  426594:	mov	w2, #0x24                  	// #36
  426598:	b	4265b4 <path_prepend+0x10c>
  42659c:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  4265a0:	adrp	x3, 43d000 <worker_hash_op+0x8df8>
  4265a4:	add	x1, x1, #0x43d
  4265a8:	add	x3, x3, #0x88a
  4265ac:	mov	w0, #0x1                   	// #1
  4265b0:	mov	w2, #0x2d                  	// #45
  4265b4:	bl	40a330 <log_oom_internal@plt>
  4265b8:	mov	w0, #0x47                  	// #71
  4265bc:	bl	40b620 <exit@plt>

00000000004265c0 <skip_subsystem>:
  4265c0:	sub	sp, sp, #0x30
  4265c4:	stp	x29, x30, [sp, #16]
  4265c8:	stp	x20, x19, [sp, #32]
  4265cc:	add	x29, sp, #0x10
  4265d0:	cbz	x0, 426638 <skip_subsystem+0x78>
  4265d4:	mov	x20, x1
  4265d8:	cbz	x1, 42665c <skip_subsystem+0x9c>
  4265dc:	mov	x19, x0
  4265e0:	str	x0, [sp, #8]
  4265e4:	mov	x1, sp
  4265e8:	bl	40a850 <sd_device_get_subsystem@plt>
  4265ec:	tbnz	w0, #31, 426624 <skip_subsystem+0x64>
  4265f0:	ldr	x0, [sp]
  4265f4:	mov	x1, x20
  4265f8:	bl	40a930 <strcmp@plt>
  4265fc:	cbnz	w0, 426624 <skip_subsystem+0x64>
  426600:	ldr	x19, [sp, #8]
  426604:	add	x1, sp, #0x8
  426608:	mov	x0, x19
  42660c:	bl	40ab60 <sd_device_get_parent@plt>
  426610:	tbnz	w0, #31, 426624 <skip_subsystem+0x64>
  426614:	ldr	x0, [sp, #8]
  426618:	mov	x1, sp
  42661c:	bl	40a850 <sd_device_get_subsystem@plt>
  426620:	tbz	w0, #31, 4265f0 <skip_subsystem+0x30>
  426624:	mov	x0, x19
  426628:	ldp	x20, x19, [sp, #32]
  42662c:	ldp	x29, x30, [sp, #16]
  426630:	add	sp, sp, #0x30
  426634:	ret
  426638:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  42663c:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  426640:	adrp	x4, 43d000 <worker_hash_op+0x8df8>
  426644:	add	x1, x1, #0x4f0
  426648:	add	x2, x2, #0x43d
  42664c:	add	x4, x4, #0x899
  426650:	mov	w0, #0x1                   	// #1
  426654:	mov	w3, #0x53                  	// #83
  426658:	bl	40a630 <log_assert_failed_realm@plt>
  42665c:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  426660:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  426664:	adrp	x4, 43d000 <worker_hash_op+0x8df8>
  426668:	add	x1, x1, #0x8ce
  42666c:	add	x2, x2, #0x43d
  426670:	add	x4, x4, #0x899
  426674:	mov	w0, #0x1                   	// #1
  426678:	mov	w3, #0x54                  	// #84
  42667c:	bl	40a630 <log_assert_failed_realm@plt>

0000000000426680 <handle_scsi_iscsi>:
  426680:	stp	x29, x30, [sp, #-64]!
  426684:	str	x23, [sp, #16]
  426688:	stp	x22, x21, [sp, #32]
  42668c:	stp	x20, x19, [sp, #48]
  426690:	mov	x29, sp
  426694:	sub	sp, sp, #0x50
  426698:	stp	xzr, xzr, [x29, #-24]
  42669c:	stur	xzr, [x29, #-56]
  4266a0:	cbz	x0, 4268cc <handle_scsi_iscsi+0x24c>
  4266a4:	mov	x20, x1
  4266a8:	cbz	x1, 4268f0 <handle_scsi_iscsi+0x270>
  4266ac:	sub	x1, x29, #0x8
  4266b0:	mov	x19, x0
  4266b4:	stur	x0, [x29, #-8]
  4266b8:	bl	40ab60 <sd_device_get_parent@plt>
  4266bc:	tbnz	w0, #31, 426840 <handle_scsi_iscsi+0x1c0>
  4266c0:	adrp	x21, 43d000 <worker_hash_op+0x8df8>
  4266c4:	add	x21, x21, #0x6f1
  4266c8:	ldur	x0, [x29, #-8]
  4266cc:	sub	x1, x29, #0x40
  4266d0:	bl	40a780 <sd_device_get_sysname@plt>
  4266d4:	tbnz	w0, #31, 426840 <handle_scsi_iscsi+0x1c0>
  4266d8:	ldur	x22, [x29, #-64]
  4266dc:	mov	w2, #0x7                   	// #7
  4266e0:	mov	x1, x21
  4266e4:	mov	x0, x22
  4266e8:	bl	40a6a0 <strncmp@plt>
  4266ec:	cbz	w0, 426704 <handle_scsi_iscsi+0x84>
  4266f0:	ldur	x0, [x29, #-8]
  4266f4:	sub	x1, x29, #0x8
  4266f8:	bl	40ab60 <sd_device_get_parent@plt>
  4266fc:	tbz	w0, #31, 4266c8 <handle_scsi_iscsi+0x48>
  426700:	b	426840 <handle_scsi_iscsi+0x1c0>
  426704:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  426708:	add	x1, x1, #0x6f9
  42670c:	sub	x0, x29, #0x10
  426710:	mov	x2, x22
  426714:	bl	40b5e0 <sd_device_new_from_subsystem_sysname@plt>
  426718:	tbnz	w0, #31, 426840 <handle_scsi_iscsi+0x1c0>
  42671c:	ldur	x0, [x29, #-16]
  426720:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  426724:	add	x1, x1, #0x707
  426728:	sub	x2, x29, #0x20
  42672c:	bl	40ace0 <sd_device_get_sysattr_value@plt>
  426730:	tbnz	w0, #31, 426840 <handle_scsi_iscsi+0x1c0>
  426734:	ldur	x0, [x29, #-8]
  426738:	sub	x1, x29, #0x48
  42673c:	bl	40acc0 <sd_device_get_sysnum@plt>
  426740:	mov	x21, xzr
  426744:	tbnz	w0, #31, 426884 <handle_scsi_iscsi+0x204>
  426748:	ldur	x23, [x29, #-72]
  42674c:	mov	x22, x21
  426750:	cbz	x23, 426848 <handle_scsi_iscsi+0x1c8>
  426754:	mov	x0, x23
  426758:	bl	40aa40 <strlen@plt>
  42675c:	add	x8, x0, #0xd
  426760:	cmp	x8, #0x400, lsl #12
  426764:	b.hi	426914 <handle_scsi_iscsi+0x294>  // b.pmore
  426768:	add	x8, x8, #0xf
  42676c:	mov	x9, sp
  426770:	and	x8, x8, #0xfffffffffffffff0
  426774:	sub	x21, x9, x8
  426778:	mov	sp, x21
  42677c:	adrp	x8, 43d000 <worker_hash_op+0x8df8>
  426780:	add	x8, x8, #0x712
  426784:	ldr	x8, [x8]
  426788:	mov	w9, #0x6f69                	// #28521
  42678c:	movk	w9, #0x6e, lsl #16
  426790:	add	x0, x21, #0xa
  426794:	mov	x1, x23
  426798:	stur	w9, [x21, #7]
  42679c:	str	x8, [x21]
  4267a0:	bl	40ab70 <stpcpy@plt>
  4267a4:	mov	w8, #0x303a                	// #12346
  4267a8:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  4267ac:	strh	w8, [x0]
  4267b0:	strb	wzr, [x0, #2]
  4267b4:	add	x1, x1, #0x71d
  4267b8:	sub	x0, x29, #0x18
  4267bc:	mov	x2, x21
  4267c0:	bl	40b5e0 <sd_device_new_from_subsystem_sysname@plt>
  4267c4:	tbnz	w0, #31, 426840 <handle_scsi_iscsi+0x1c0>
  4267c8:	ldur	x0, [x29, #-24]
  4267cc:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  4267d0:	add	x1, x1, #0x72e
  4267d4:	sub	x2, x29, #0x28
  4267d8:	bl	40ace0 <sd_device_get_sysattr_value@plt>
  4267dc:	tbnz	w0, #31, 426840 <handle_scsi_iscsi+0x1c0>
  4267e0:	ldur	x0, [x29, #-24]
  4267e4:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  4267e8:	add	x1, x1, #0x741
  4267ec:	sub	x2, x29, #0x30
  4267f0:	bl	40ace0 <sd_device_get_sysattr_value@plt>
  4267f4:	tbnz	w0, #31, 426840 <handle_scsi_iscsi+0x1c0>
  4267f8:	add	x1, x29, #0x18
  4267fc:	mov	x0, x19
  426800:	bl	40acc0 <sd_device_get_sysnum@plt>
  426804:	tbnz	w0, #31, 4268a4 <handle_scsi_iscsi+0x224>
  426808:	ldr	x0, [x29, #24]
  42680c:	cbz	x0, 4268a4 <handle_scsi_iscsi+0x224>
  426810:	mov	w2, #0xa                   	// #10
  426814:	mov	x1, xzr
  426818:	bl	40b550 <strtoul@plt>
  42681c:	mov	x8, x0
  426820:	cmp	x0, #0xff
  426824:	b.hi	42688c <handle_scsi_iscsi+0x20c>  // b.pmore
  426828:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  42682c:	add	x1, x1, #0x60a
  426830:	sub	x0, x29, #0x38
  426834:	mov	x2, x8
  426838:	bl	4264a8 <path_prepend>
  42683c:	b	4268a4 <handle_scsi_iscsi+0x224>
  426840:	mov	x21, xzr
  426844:	mov	x22, xzr
  426848:	mov	x0, x21
  42684c:	bl	40a320 <free@plt>
  426850:	ldur	x0, [x29, #-24]
  426854:	cbz	x0, 42685c <handle_scsi_iscsi+0x1dc>
  426858:	bl	40a6e0 <sd_device_unref@plt>
  42685c:	ldur	x0, [x29, #-16]
  426860:	cbz	x0, 426868 <handle_scsi_iscsi+0x1e8>
  426864:	bl	40a6e0 <sd_device_unref@plt>
  426868:	mov	x0, x22
  42686c:	mov	sp, x29
  426870:	ldp	x20, x19, [sp, #48]
  426874:	ldp	x22, x21, [sp, #32]
  426878:	ldr	x23, [sp, #16]
  42687c:	ldp	x29, x30, [sp], #64
  426880:	ret
  426884:	mov	x22, x21
  426888:	b	426848 <handle_scsi_iscsi+0x1c8>
  42688c:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  426890:	and	x2, x8, #0xffff
  426894:	ubfx	x3, x8, #16, #16
  426898:	add	x1, x1, #0x612
  42689c:	sub	x0, x29, #0x38
  4268a0:	bl	4264a8 <path_prepend>
  4268a4:	ldur	x21, [x29, #-56]
  4268a8:	ldp	x3, x2, [x29, #-48]
  4268ac:	ldur	x4, [x29, #-32]
  4268b0:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  4268b4:	add	x1, x1, #0x751
  4268b8:	mov	x0, x20
  4268bc:	mov	x5, x21
  4268c0:	bl	4264a8 <path_prepend>
  4268c4:	mov	x22, x19
  4268c8:	b	426848 <handle_scsi_iscsi+0x1c8>
  4268cc:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  4268d0:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  4268d4:	adrp	x4, 43d000 <worker_hash_op+0x8df8>
  4268d8:	add	x1, x1, #0xaaf
  4268dc:	add	x2, x2, #0x43d
  4268e0:	add	x4, x4, #0x6be
  4268e4:	mov	w0, #0x1                   	// #1
  4268e8:	mov	w3, #0xdb                  	// #219
  4268ec:	bl	40a630 <log_assert_failed_realm@plt>
  4268f0:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  4268f4:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  4268f8:	adrp	x4, 43d000 <worker_hash_op+0x8df8>
  4268fc:	add	x1, x1, #0x5d9
  426900:	add	x2, x2, #0x43d
  426904:	add	x4, x4, #0x6be
  426908:	mov	w0, #0x1                   	// #1
  42690c:	mov	w3, #0xdc                  	// #220
  426910:	bl	40a630 <log_assert_failed_realm@plt>
  426914:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  426918:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  42691c:	adrp	x4, 43d000 <worker_hash_op+0x8df8>
  426920:	add	x1, x1, #0xc66
  426924:	add	x2, x2, #0x43d
  426928:	add	x4, x4, #0x6be
  42692c:	mov	w0, #0x1                   	// #1
  426930:	mov	w3, #0xf2                  	// #242
  426934:	bl	40a630 <log_assert_failed_realm@plt>

0000000000426938 <handle_scsi_hyperv>:
  426938:	sub	sp, sp, #0x80
  42693c:	stp	x29, x30, [sp, #80]
  426940:	stp	x22, x21, [sp, #96]
  426944:	stp	x20, x19, [sp, #112]
  426948:	add	x29, sp, #0x50
  42694c:	str	xzr, [sp, #40]
  426950:	cbz	x0, 426ad0 <handle_scsi_hyperv+0x198>
  426954:	mov	x20, x1
  426958:	cbz	x1, 426af4 <handle_scsi_hyperv+0x1bc>
  42695c:	mov	x21, x2
  426960:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  426964:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  426968:	add	x1, x1, #0x49d
  42696c:	add	x2, x2, #0x797
  426970:	sub	x3, x29, #0x10
  426974:	mov	x19, x0
  426978:	bl	40b530 <sd_device_get_parent_with_subsystem_devtype@plt>
  42697c:	tbnz	w0, #31, 4269f4 <handle_scsi_hyperv+0xbc>
  426980:	ldur	x0, [x29, #-16]
  426984:	sub	x1, x29, #0x18
  426988:	bl	40ab60 <sd_device_get_parent@plt>
  42698c:	tbnz	w0, #31, 4269f4 <handle_scsi_hyperv+0xbc>
  426990:	ldur	x0, [x29, #-24]
  426994:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  426998:	add	x1, x1, #0x7f5
  42699c:	sub	x2, x29, #0x20
  4269a0:	bl	40ace0 <sd_device_get_sysattr_value@plt>
  4269a4:	tbnz	w0, #31, 4269f4 <handle_scsi_hyperv+0xbc>
  4269a8:	ldur	x22, [x29, #-32]
  4269ac:	mov	x0, x22
  4269b0:	bl	40aa40 <strlen@plt>
  4269b4:	cmp	x0, x21
  4269b8:	b.cc	4269f4 <handle_scsi_hyperv+0xbc>  // b.lo, b.ul, b.last
  4269bc:	ldrb	w8, [x22]
  4269c0:	cmp	w8, #0x7b
  4269c4:	b.ne	4269f4 <handle_scsi_hyperv+0xbc>  // b.any
  4269c8:	sub	x8, x21, #0x1
  4269cc:	ldrb	w9, [x22, x8]
  4269d0:	cmp	w9, #0x7d
  4269d4:	b.ne	4269f4 <handle_scsi_hyperv+0xbc>  // b.any
  4269d8:	cmp	x8, #0x2
  4269dc:	b.cc	426a44 <handle_scsi_hyperv+0x10c>  // b.lo, b.ul, b.last
  4269e0:	mov	x8, xzr
  4269e4:	sub	x9, x21, #0x2
  4269e8:	add	x10, x22, #0x1
  4269ec:	mov	x11, sp
  4269f0:	b	426a28 <handle_scsi_hyperv+0xf0>
  4269f4:	mov	x21, xzr
  4269f8:	mov	x19, xzr
  4269fc:	mov	x0, x21
  426a00:	bl	40a320 <free@plt>
  426a04:	mov	x0, x19
  426a08:	ldp	x20, x19, [sp, #112]
  426a0c:	ldp	x22, x21, [sp, #96]
  426a10:	ldp	x29, x30, [sp, #80]
  426a14:	add	sp, sp, #0x80
  426a18:	ret
  426a1c:	subs	x9, x9, #0x1
  426a20:	add	x10, x10, #0x1
  426a24:	b.eq	426a48 <handle_scsi_hyperv+0x110>  // b.none
  426a28:	ldrb	w12, [x10]
  426a2c:	cmp	w12, #0x2d
  426a30:	b.eq	426a1c <handle_scsi_hyperv+0xe4>  // b.none
  426a34:	add	x13, x8, #0x1
  426a38:	strb	w12, [x11, x8]
  426a3c:	mov	x8, x13
  426a40:	b	426a1c <handle_scsi_hyperv+0xe4>
  426a44:	mov	x8, xzr
  426a48:	mov	x9, sp
  426a4c:	sub	x1, x29, #0x8
  426a50:	mov	x0, x19
  426a54:	strb	wzr, [x9, x8]
  426a58:	bl	40acc0 <sd_device_get_sysnum@plt>
  426a5c:	tbnz	w0, #31, 426ab0 <handle_scsi_hyperv+0x178>
  426a60:	ldur	x0, [x29, #-8]
  426a64:	cbz	x0, 426ab0 <handle_scsi_hyperv+0x178>
  426a68:	mov	w2, #0xa                   	// #10
  426a6c:	mov	x1, xzr
  426a70:	bl	40b550 <strtoul@plt>
  426a74:	mov	x8, x0
  426a78:	cmp	x0, #0xff
  426a7c:	b.hi	426a98 <handle_scsi_hyperv+0x160>  // b.pmore
  426a80:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  426a84:	add	x1, x1, #0x60a
  426a88:	add	x0, sp, #0x28
  426a8c:	mov	x2, x8
  426a90:	bl	4264a8 <path_prepend>
  426a94:	b	426ab0 <handle_scsi_hyperv+0x178>
  426a98:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  426a9c:	and	x2, x8, #0xffff
  426aa0:	ubfx	x3, x8, #16, #16
  426aa4:	add	x1, x1, #0x612
  426aa8:	add	x0, sp, #0x28
  426aac:	bl	4264a8 <path_prepend>
  426ab0:	ldr	x21, [sp, #40]
  426ab4:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  426ab8:	add	x1, x1, #0x7ff
  426abc:	mov	x2, sp
  426ac0:	mov	x0, x20
  426ac4:	mov	x3, x21
  426ac8:	bl	4264a8 <path_prepend>
  426acc:	b	4269fc <handle_scsi_hyperv+0xc4>
  426ad0:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  426ad4:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  426ad8:	adrp	x4, 43d000 <worker_hash_op+0x8df8>
  426adc:	add	x1, x1, #0xaaf
  426ae0:	add	x2, x2, #0x43d
  426ae4:	add	x4, x4, #0x7b9
  426ae8:	mov	w0, #0x1                   	// #1
  426aec:	mov	w3, #0x16f                 	// #367
  426af0:	bl	40a630 <log_assert_failed_realm@plt>
  426af4:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  426af8:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  426afc:	adrp	x4, 43d000 <worker_hash_op+0x8df8>
  426b00:	add	x1, x1, #0x5d9
  426b04:	add	x2, x2, #0x43d
  426b08:	add	x4, x4, #0x7b9
  426b0c:	mov	w0, #0x1                   	// #1
  426b10:	mov	w3, #0x170                 	// #368
  426b14:	bl	40a630 <log_assert_failed_realm@plt>

0000000000426b18 <handle_scsi_default>:
  426b18:	stp	x29, x30, [sp, #-80]!
  426b1c:	str	x25, [sp, #16]
  426b20:	stp	x24, x23, [sp, #32]
  426b24:	stp	x22, x21, [sp, #48]
  426b28:	stp	x20, x19, [sp, #64]
  426b2c:	mov	x29, sp
  426b30:	sub	sp, sp, #0x30
  426b34:	cbz	x0, 426d08 <handle_scsi_default+0x1f0>
  426b38:	mov	x19, x1
  426b3c:	cbz	x1, 426d2c <handle_scsi_default+0x214>
  426b40:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  426b44:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  426b48:	add	x1, x1, #0x49d
  426b4c:	add	x2, x2, #0x797
  426b50:	add	x3, x29, #0x18
  426b54:	mov	x20, x0
  426b58:	bl	40b530 <sd_device_get_parent_with_subsystem_devtype@plt>
  426b5c:	tbnz	w0, #31, 426c34 <handle_scsi_default+0x11c>
  426b60:	sub	x1, x29, #0x18
  426b64:	mov	x0, x20
  426b68:	bl	40a780 <sd_device_get_sysname@plt>
  426b6c:	tbnz	w0, #31, 426c34 <handle_scsi_default+0x11c>
  426b70:	ldur	x0, [x29, #-24]
  426b74:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  426b78:	add	x1, x1, #0x840
  426b7c:	sub	x2, x29, #0x4
  426b80:	sub	x3, x29, #0x8
  426b84:	sub	x4, x29, #0xc
  426b88:	sub	x5, x29, #0x10
  426b8c:	bl	40b580 <__isoc99_sscanf@plt>
  426b90:	cmp	w0, #0x4
  426b94:	b.ne	426c34 <handle_scsi_default+0x11c>  // b.any
  426b98:	ldr	x0, [x29, #24]
  426b9c:	sub	x1, x29, #0x20
  426ba0:	bl	40a860 <sd_device_get_syspath@plt>
  426ba4:	tbnz	w0, #31, 426c34 <handle_scsi_default+0x11c>
  426ba8:	ldur	x20, [x29, #-32]
  426bac:	mov	w1, #0x2f                  	// #47
  426bb0:	mov	x0, x20
  426bb4:	bl	40b540 <strrchr@plt>
  426bb8:	cbz	x0, 426c34 <handle_scsi_default+0x11c>
  426bbc:	sub	x1, x0, x20
  426bc0:	mov	x0, x20
  426bc4:	bl	40abc0 <strnlen@plt>
  426bc8:	add	x8, x0, #0x10
  426bcc:	and	x8, x8, #0xfffffffffffffff0
  426bd0:	mov	x9, sp
  426bd4:	sub	x21, x9, x8
  426bd8:	mov	x2, x0
  426bdc:	mov	sp, x21
  426be0:	strb	wzr, [x21, x0]
  426be4:	mov	x0, x21
  426be8:	mov	x1, x20
  426bec:	bl	40adc0 <memcpy@plt>
  426bf0:	mov	x0, x21
  426bf4:	stur	x21, [x29, #-32]
  426bf8:	bl	40af80 <opendir@plt>
  426bfc:	cbz	x0, 426c34 <handle_scsi_default+0x11c>
  426c00:	mov	x20, x0
  426c04:	bl	40a3e0 <__errno_location@plt>
  426c08:	mov	x21, x0
  426c0c:	str	wzr, [x0]
  426c10:	mov	x0, x20
  426c14:	bl	40af90 <readdir64@plt>
  426c18:	cbz	x0, 426cf8 <handle_scsi_default+0x1e0>
  426c1c:	adrp	x22, 43d000 <worker_hash_op+0x8df8>
  426c20:	mov	x23, x0
  426c24:	mov	w25, #0xffffffff            	// #-1
  426c28:	add	x22, x22, #0x84c
  426c2c:	mov	w24, #0xffffffff            	// #-1
  426c30:	b	426c7c <handle_scsi_default+0x164>
  426c34:	mov	x19, xzr
  426c38:	mov	x0, x19
  426c3c:	mov	sp, x29
  426c40:	ldp	x20, x19, [sp, #64]
  426c44:	ldp	x22, x21, [sp, #48]
  426c48:	ldp	x24, x23, [sp, #32]
  426c4c:	ldr	x25, [sp, #16]
  426c50:	ldp	x29, x30, [sp], #80
  426c54:	ret
  426c58:	mov	w2, #0x4                   	// #4
  426c5c:	mov	x1, x22
  426c60:	bl	40a6a0 <strncmp@plt>
  426c64:	cbz	w0, 426ca4 <handle_scsi_default+0x18c>
  426c68:	mov	x0, x20
  426c6c:	str	wzr, [x21]
  426c70:	bl	40af90 <readdir64@plt>
  426c74:	mov	x23, x0
  426c78:	cbz	x0, 426cd0 <handle_scsi_default+0x1b8>
  426c7c:	mov	x0, x23
  426c80:	ldrb	w8, [x0, #19]!
  426c84:	cmp	w8, #0x2e
  426c88:	b.eq	426c68 <handle_scsi_default+0x150>  // b.none
  426c8c:	ldrb	w8, [x23, #18]
  426c90:	cmp	w8, #0xa
  426c94:	b.eq	426c58 <handle_scsi_default+0x140>  // b.none
  426c98:	cmp	w8, #0x4
  426c9c:	b.eq	426c58 <handle_scsi_default+0x140>  // b.none
  426ca0:	b	426c68 <handle_scsi_default+0x150>
  426ca4:	add	x0, x23, #0x17
  426ca8:	sub	x1, x29, #0x28
  426cac:	mov	w2, #0xa                   	// #10
  426cb0:	bl	40b550 <strtoul@plt>
  426cb4:	ldur	x8, [x29, #-40]
  426cb8:	ldrb	w8, [x8]
  426cbc:	cbnz	w8, 426c68 <handle_scsi_default+0x150>
  426cc0:	cmp	w24, w0
  426cc4:	ccmp	w24, w25, #0x4, le
  426cc8:	csel	w24, w0, w24, eq  // eq = none
  426ccc:	b	426c68 <handle_scsi_default+0x150>
  426cd0:	cmn	w24, #0x1
  426cd4:	b.eq	426cf8 <handle_scsi_default+0x1e0>  // b.none
  426cd8:	ldp	w3, w8, [x29, #-8]
  426cdc:	ldp	w5, w4, [x29, #-16]
  426ce0:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  426ce4:	add	x1, x1, #0x851
  426ce8:	sub	w2, w8, w24
  426cec:	mov	x0, x19
  426cf0:	stur	w2, [x29, #-4]
  426cf4:	bl	4264a8 <path_prepend>
  426cf8:	ldr	x19, [x29, #24]
  426cfc:	mov	x0, x20
  426d00:	bl	40afc0 <closedir@plt>
  426d04:	b	426c38 <handle_scsi_default+0x120>
  426d08:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  426d0c:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  426d10:	adrp	x4, 43d000 <worker_hash_op+0x8df8>
  426d14:	add	x1, x1, #0xaaf
  426d18:	add	x2, x2, #0x43d
  426d1c:	add	x4, x4, #0x80b
  426d20:	mov	w0, #0x1                   	// #1
  426d24:	mov	w3, #0x122                 	// #290
  426d28:	bl	40a630 <log_assert_failed_realm@plt>
  426d2c:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  426d30:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  426d34:	adrp	x4, 43d000 <worker_hash_op+0x8df8>
  426d38:	add	x1, x1, #0x5d9
  426d3c:	add	x2, x2, #0x43d
  426d40:	add	x4, x4, #0x80b
  426d44:	mov	w0, #0x1                   	// #1
  426d48:	mov	w3, #0x123                 	// #291
  426d4c:	bl	40a630 <log_assert_failed_realm@plt>

0000000000426d50 <builtin_usb_id>:
  426d50:	stp	x29, x30, [sp, #-80]!
  426d54:	str	x28, [sp, #16]
  426d58:	stp	x24, x23, [sp, #32]
  426d5c:	stp	x22, x21, [sp, #48]
  426d60:	stp	x20, x19, [sp, #64]
  426d64:	mov	x29, sp
  426d68:	sub	sp, sp, #0x8f0
  426d6c:	movi	v0.2d, #0x0
  426d70:	str	xzr, [sp, #408]
  426d74:	stp	q0, q0, [x29, #-32]
  426d78:	stp	q0, q0, [x29, #-64]
  426d7c:	str	q0, [sp, #1952]
  426d80:	str	q0, [sp, #1936]
  426d84:	str	q0, [sp, #1920]
  426d88:	str	q0, [sp, #1904]
  426d8c:	str	q0, [sp, #1616]
  426d90:	str	q0, [sp, #1600]
  426d94:	str	q0, [sp, #1584]
  426d98:	str	q0, [sp, #1568]
  426d9c:	str	q0, [sp, #1552]
  426da0:	str	q0, [sp, #1536]
  426da4:	str	q0, [sp, #1520]
  426da8:	str	q0, [sp, #1504]
  426dac:	str	q0, [sp, #1488]
  426db0:	str	q0, [sp, #1472]
  426db4:	str	q0, [sp, #1456]
  426db8:	str	q0, [sp, #1440]
  426dbc:	str	q0, [sp, #1424]
  426dc0:	str	q0, [sp, #1408]
  426dc4:	str	q0, [sp, #1392]
  426dc8:	str	q0, [sp, #1376]
  426dcc:	str	q0, [sp, #1360]
  426dd0:	str	q0, [sp, #1344]
  426dd4:	str	q0, [sp, #1328]
  426dd8:	str	q0, [sp, #1312]
  426ddc:	str	q0, [sp, #1296]
  426de0:	str	q0, [sp, #1280]
  426de4:	str	q0, [sp, #1264]
  426de8:	str	q0, [sp, #1248]
  426dec:	str	q0, [sp, #1232]
  426df0:	str	q0, [sp, #1216]
  426df4:	str	q0, [sp, #1200]
  426df8:	str	q0, [sp, #1184]
  426dfc:	str	q0, [sp, #1168]
  426e00:	str	q0, [sp, #1152]
  426e04:	str	q0, [sp, #1136]
  426e08:	str	q0, [sp, #1120]
  426e0c:	str	q0, [sp, #1104]
  426e10:	str	q0, [sp, #1088]
  426e14:	str	q0, [sp, #1072]
  426e18:	str	q0, [sp, #1056]
  426e1c:	str	q0, [sp, #1040]
  426e20:	stp	q0, q0, [sp, #1008]
  426e24:	stp	q0, q0, [sp, #976]
  426e28:	stp	q0, q0, [sp, #944]
  426e2c:	stp	q0, q0, [sp, #912]
  426e30:	stp	q0, q0, [sp, #880]
  426e34:	stp	q0, q0, [sp, #848]
  426e38:	stp	q0, q0, [sp, #816]
  426e3c:	stp	q0, q0, [sp, #784]
  426e40:	stp	q0, q0, [sp, #752]
  426e44:	stp	q0, q0, [sp, #720]
  426e48:	stp	q0, q0, [sp, #688]
  426e4c:	stp	q0, q0, [sp, #656]
  426e50:	stp	q0, q0, [sp, #624]
  426e54:	stp	q0, q0, [sp, #592]
  426e58:	stp	q0, q0, [sp, #560]
  426e5c:	stp	q0, q0, [sp, #528]
  426e60:	stp	q0, q0, [sp, #496]
  426e64:	stp	q0, q0, [sp, #464]
  426e68:	stp	q0, q0, [sp, #432]
  426e6c:	str	q0, [sp, #416]
  426e70:	str	xzr, [sp, #400]
  426e74:	cbz	x0, 427b74 <builtin_usb_id+0xe24>
  426e78:	add	x1, sp, #0x60
  426e7c:	mov	w20, w3
  426e80:	mov	x19, x0
  426e84:	bl	40a860 <sd_device_get_syspath@plt>
  426e88:	tbnz	w0, #31, 4274e8 <builtin_usb_id+0x798>
  426e8c:	add	x1, sp, #0x58
  426e90:	mov	x0, x19
  426e94:	bl	40a780 <sd_device_get_sysname@plt>
  426e98:	tbnz	w0, #31, 4274e8 <builtin_usb_id+0x798>
  426e9c:	add	x1, sp, #0x50
  426ea0:	mov	x0, x19
  426ea4:	bl	40a870 <sd_device_get_devtype@plt>
  426ea8:	tbnz	w0, #31, 426ec0 <builtin_usb_id+0x170>
  426eac:	ldr	x0, [sp, #80]
  426eb0:	adrp	x1, 439000 <worker_hash_op+0x4df8>
  426eb4:	add	x1, x1, #0x883
  426eb8:	bl	40a930 <strcmp@plt>
  426ebc:	cbz	w0, 426fd8 <builtin_usb_id+0x288>
  426ec0:	adrp	x1, 439000 <worker_hash_op+0x4df8>
  426ec4:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  426ec8:	add	x1, x1, #0x87f
  426ecc:	add	x2, x2, #0x1a3
  426ed0:	add	x3, sp, #0x88
  426ed4:	mov	x0, x19
  426ed8:	bl	40b530 <sd_device_get_parent_with_subsystem_devtype@plt>
  426edc:	tbnz	w0, #31, 426f84 <builtin_usb_id+0x234>
  426ee0:	ldr	x0, [sp, #136]
  426ee4:	add	x1, sp, #0x48
  426ee8:	bl	40a860 <sd_device_get_syspath@plt>
  426eec:	tbnz	w0, #31, 427034 <builtin_usb_id+0x2e4>
  426ef0:	ldr	x0, [sp, #136]
  426ef4:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  426ef8:	add	x1, x1, #0x9dc
  426efc:	add	x2, sp, #0x198
  426f00:	bl	40ace0 <sd_device_get_sysattr_value@plt>
  426f04:	ldr	x0, [sp, #136]
  426f08:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  426f0c:	add	x1, x1, #0xa8a
  426f10:	add	x2, sp, #0x190
  426f14:	bl	40ace0 <sd_device_get_sysattr_value@plt>
  426f18:	ldr	x0, [sp, #136]
  426f1c:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  426f20:	add	x1, x1, #0x9ed
  426f24:	add	x2, sp, #0x78
  426f28:	bl	40ace0 <sd_device_get_sysattr_value@plt>
  426f2c:	adrp	x24, 435000 <worker_hash_op+0xdf8>
  426f30:	add	x24, x24, #0x7f
  426f34:	tbnz	w0, #31, 4270ec <builtin_usb_id+0x39c>
  426f38:	ldr	x0, [sp, #120]
  426f3c:	mov	w2, #0x10                  	// #16
  426f40:	mov	x1, xzr
  426f44:	bl	40b550 <strtoul@plt>
  426f48:	mov	x21, x0
  426f4c:	sub	w8, w21, #0x1
  426f50:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  426f54:	cmp	w8, #0xd
  426f58:	add	x1, x1, #0xd53
  426f5c:	b.hi	42724c <builtin_usb_id+0x4fc>  // b.pmore
  426f60:	adrp	x9, 442000 <hash_key_name.asso_values+0x4>
  426f64:	add	x9, x9, #0x20c
  426f68:	adr	x10, 426f78 <builtin_usb_id+0x228>
  426f6c:	ldrb	w11, [x9, x8]
  426f70:	add	x10, x10, x11, lsl #2
  426f74:	br	x10
  426f78:	adrp	x1, 43a000 <worker_hash_op+0x5df8>
  426f7c:	add	x1, x1, #0x3ad
  426f80:	b	42724c <builtin_usb_id+0x4fc>
  426f84:	mov	w21, w0
  426f88:	mov	w0, #0x1                   	// #1
  426f8c:	str	xzr, [sp, #1968]
  426f90:	bl	40a2c0 <log_get_max_level_realm@plt>
  426f94:	cmp	w0, #0x7
  426f98:	mov	x6, xzr
  426f9c:	b.ge	427a70 <builtin_usb_id+0xd20>  // b.tcont
  426fa0:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  426fa4:	add	x8, x8, #0x7f
  426fa8:	cmp	x6, #0x0
  426fac:	csel	x5, xzr, x8, eq  // eq = none
  426fb0:	adrp	x8, 43d000 <worker_hash_op+0x8df8>
  426fb4:	add	x8, x8, #0x99f
  426fb8:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  426fbc:	adrp	x4, 43d000 <worker_hash_op+0x8df8>
  426fc0:	add	x2, x2, #0x93c
  426fc4:	add	x4, x4, #0x990
  426fc8:	str	x8, [sp, #8]
  426fcc:	mov	w0, #0x7                   	// #7
  426fd0:	mov	w3, #0x114                 	// #276
  426fd4:	b	4274d8 <builtin_usb_id+0x788>
  426fd8:	add	x1, sp, #0x260
  426fdc:	mov	x0, x19
  426fe0:	bl	427b98 <dev_if_packed_info>
  426fe4:	str	x19, [sp, #128]
  426fe8:	ldr	x0, [sp, #128]
  426fec:	adrp	x1, 439000 <worker_hash_op+0x4df8>
  426ff0:	add	x1, x1, #0x88e
  426ff4:	add	x2, x29, #0x18
  426ff8:	bl	40ace0 <sd_device_get_sysattr_value@plt>
  426ffc:	tbnz	w0, #31, 427090 <builtin_usb_id+0x340>
  427000:	ldr	x0, [sp, #128]
  427004:	adrp	x1, 439000 <worker_hash_op+0x4df8>
  427008:	add	x1, x1, #0x897
  42700c:	add	x2, sp, #0x668
  427010:	bl	40ace0 <sd_device_get_sysattr_value@plt>
  427014:	tbnz	w0, #31, 427140 <builtin_usb_id+0x3f0>
  427018:	ldurb	w8, [x29, #-64]
  42701c:	cbz	w8, 42719c <builtin_usb_id+0x44c>
  427020:	ldrb	w8, [sp, #1904]
  427024:	cbz	w8, 427590 <builtin_usb_id+0x840>
  427028:	ldrb	w8, [sp, #544]
  42702c:	cbnz	w8, 42761c <builtin_usb_id+0x8cc>
  427030:	b	4275e8 <builtin_usb_id+0x898>
  427034:	ldr	x19, [sp, #136]
  427038:	mov	w21, w0
  42703c:	str	xzr, [sp, #1968]
  427040:	cbz	x19, 427054 <builtin_usb_id+0x304>
  427044:	mov	w0, #0x1                   	// #1
  427048:	bl	40a2c0 <log_get_max_level_realm@plt>
  42704c:	cmp	w0, #0x7
  427050:	b.ge	427a98 <builtin_usb_id+0xd48>  // b.tcont
  427054:	mov	x6, xzr
  427058:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  42705c:	add	x8, x8, #0x7f
  427060:	cmp	x6, #0x0
  427064:	csel	x5, xzr, x8, eq  // eq = none
  427068:	adrp	x8, 43d000 <worker_hash_op+0x8df8>
  42706c:	add	x8, x8, #0x9c2
  427070:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  427074:	adrp	x4, 43d000 <worker_hash_op+0x8df8>
  427078:	add	x2, x2, #0x93c
  42707c:	add	x4, x4, #0x990
  427080:	str	x8, [sp, #8]
  427084:	mov	w0, #0x7                   	// #7
  427088:	mov	w3, #0x118                 	// #280
  42708c:	b	4274d8 <builtin_usb_id+0x788>
  427090:	ldr	x19, [sp, #128]
  427094:	mov	w21, w0
  427098:	str	xzr, [sp, #144]
  42709c:	cbz	x19, 4270b0 <builtin_usb_id+0x360>
  4270a0:	mov	w0, #0x1                   	// #1
  4270a4:	bl	40a2c0 <log_get_max_level_realm@plt>
  4270a8:	cmp	w0, #0x7
  4270ac:	b.ge	427aac <builtin_usb_id+0xd5c>  // b.tcont
  4270b0:	mov	x6, xzr
  4270b4:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  4270b8:	add	x8, x8, #0x7f
  4270bc:	cmp	x6, #0x0
  4270c0:	csel	x5, xzr, x8, eq  // eq = none
  4270c4:	adrp	x8, 43d000 <worker_hash_op+0x8df8>
  4270c8:	add	x8, x8, #0xb5c
  4270cc:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  4270d0:	adrp	x4, 43d000 <worker_hash_op+0x8df8>
  4270d4:	add	x2, x2, #0x93c
  4270d8:	add	x4, x4, #0x990
  4270dc:	str	x8, [sp, #8]
  4270e0:	mov	w0, #0x7                   	// #7
  4270e4:	mov	w3, #0x171                 	// #369
  4270e8:	b	4274d8 <builtin_usb_id+0x788>
  4270ec:	ldr	x19, [sp, #136]
  4270f0:	mov	w21, w0
  4270f4:	str	xzr, [sp, #1968]
  4270f8:	cbz	x19, 42710c <builtin_usb_id+0x3bc>
  4270fc:	mov	w0, #0x1                   	// #1
  427100:	bl	40a2c0 <log_get_max_level_realm@plt>
  427104:	cmp	w0, #0x7
  427108:	b.ge	427ac0 <builtin_usb_id+0xd70>  // b.tcont
  42710c:	mov	x6, xzr
  427110:	cmp	x6, #0x0
  427114:	adrp	x8, 43d000 <worker_hash_op+0x8df8>
  427118:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  42711c:	adrp	x4, 43d000 <worker_hash_op+0x8df8>
  427120:	csel	x5, xzr, x24, eq  // eq = none
  427124:	add	x8, x8, #0x9fd
  427128:	add	x2, x2, #0x93c
  42712c:	add	x4, x4, #0x990
  427130:	mov	w0, #0x7                   	// #7
  427134:	mov	w3, #0x11e                 	// #286
  427138:	str	x8, [sp, #8]
  42713c:	b	4274d8 <builtin_usb_id+0x788>
  427140:	ldr	x19, [sp, #128]
  427144:	mov	w21, w0
  427148:	str	xzr, [sp, #144]
  42714c:	cbz	x19, 427160 <builtin_usb_id+0x410>
  427150:	mov	w0, #0x1                   	// #1
  427154:	bl	40a2c0 <log_get_max_level_realm@plt>
  427158:	cmp	w0, #0x7
  42715c:	b.ge	427ad4 <builtin_usb_id+0xd84>  // b.tcont
  427160:	mov	x6, xzr
  427164:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  427168:	add	x8, x8, #0x7f
  42716c:	cmp	x6, #0x0
  427170:	csel	x5, xzr, x8, eq  // eq = none
  427174:	adrp	x8, 43d000 <worker_hash_op+0x8df8>
  427178:	add	x8, x8, #0xb81
  42717c:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  427180:	adrp	x4, 43d000 <worker_hash_op+0x8df8>
  427184:	add	x2, x2, #0x93c
  427188:	add	x4, x4, #0x990
  42718c:	str	x8, [sp, #8]
  427190:	mov	w0, #0x7                   	// #7
  427194:	mov	w3, #0x175                 	// #373
  427198:	b	4274d8 <builtin_usb_id+0x788>
  42719c:	ldr	x0, [sp, #128]
  4271a0:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  4271a4:	add	x1, x1, #0xba7
  4271a8:	add	x2, sp, #0x90
  4271ac:	bl	40ace0 <sd_device_get_sysattr_value@plt>
  4271b0:	tbnz	w0, #31, 427558 <builtin_usb_id+0x808>
  4271b4:	ldr	x0, [sp, #144]
  4271b8:	b	427560 <builtin_usb_id+0x810>
  4271bc:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  4271c0:	add	x1, x1, #0xd78
  4271c4:	b	42724c <builtin_usb_id+0x4fc>
  4271c8:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  4271cc:	add	x1, x1, #0xd6c
  4271d0:	b	42724c <builtin_usb_id+0x4fc>
  4271d4:	adrp	x1, 43a000 <worker_hash_op+0x5df8>
  4271d8:	add	x1, x1, #0x1d1
  4271dc:	b	42724c <builtin_usb_id+0x4fc>
  4271e0:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  4271e4:	add	x1, x1, #0xd70
  4271e8:	b	42724c <builtin_usb_id+0x4fc>
  4271ec:	ldr	x0, [sp, #136]
  4271f0:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  4271f4:	add	x1, x1, #0xa29
  4271f8:	add	x2, sp, #0x70
  4271fc:	bl	40ace0 <sd_device_get_sysattr_value@plt>
  427200:	tbnz	w0, #31, 427918 <builtin_usb_id+0xbc8>
  427204:	ldr	x22, [sp, #112]
  427208:	add	x1, sp, #0x7b0
  42720c:	mov	w2, wzr
  427210:	mov	x0, x22
  427214:	bl	40b550 <strtoul@plt>
  427218:	ldr	x8, [sp, #1968]
  42721c:	cmp	x8, x22
  427220:	mov	x22, x0
  427224:	b.eq	427900 <builtin_usb_id+0xbb0>  // b.none
  427228:	sub	w8, w22, #0x1
  42722c:	cmp	w8, #0x5
  427230:	b.hi	427900 <builtin_usb_id+0xbb0>  // b.pmore
  427234:	adrp	x9, 46e000 <keyboard_lookup_key.wordlist+0x16bd8>
  427238:	add	x9, x9, #0x3e8
  42723c:	ldr	x2, [x9, w8, sxtw #3]
  427240:	b	427908 <builtin_usb_id+0xbb8>
  427244:	adrp	x1, 43a000 <worker_hash_op+0x5df8>
  427248:	add	x1, x1, #0xf7a
  42724c:	add	x0, sp, #0x1e0
  427250:	mov	w2, #0x3f                  	// #63
  427254:	bl	40b5c0 <strncpy@plt>
  427258:	mov	w22, wzr
  42725c:	strb	wzr, [sp, #542]
  427260:	ldr	x23, [sp, #136]
  427264:	str	xzr, [sp, #1968]
  427268:	cbz	x23, 42727c <builtin_usb_id+0x52c>
  42726c:	mov	w0, #0x1                   	// #1
  427270:	bl	40a2c0 <log_get_max_level_realm@plt>
  427274:	cmp	w0, #0x7
  427278:	b.ge	427a84 <builtin_usb_id+0xd34>  // b.tcont
  42727c:	mov	x6, xzr
  427280:	cmp	x6, #0x0
  427284:	adrp	x8, 43d000 <worker_hash_op+0x8df8>
  427288:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  42728c:	adrp	x4, 43d000 <worker_hash_op+0x8df8>
  427290:	csel	x5, xzr, x24, eq  // eq = none
  427294:	add	x8, x8, #0xa3c
  427298:	add	x2, x2, #0x93c
  42729c:	add	x4, x4, #0x990
  4272a0:	mov	w0, #0x7                   	// #7
  4272a4:	mov	w3, #0x128                 	// #296
  4272a8:	mov	w1, wzr
  4272ac:	mov	x7, xzr
  4272b0:	str	w22, [sp, #24]
  4272b4:	str	w21, [sp, #16]
  4272b8:	stp	xzr, x8, [sp]
  4272bc:	bl	40a730 <log_object_internal@plt>
  4272c0:	ldr	x0, [sp, #136]
  4272c4:	adrp	x1, 439000 <worker_hash_op+0x4df8>
  4272c8:	adrp	x2, 439000 <worker_hash_op+0x4df8>
  4272cc:	add	x1, x1, #0x87f
  4272d0:	add	x2, x2, #0x883
  4272d4:	add	x3, sp, #0x80
  4272d8:	bl	40b530 <sd_device_get_parent_with_subsystem_devtype@plt>
  4272dc:	tbnz	w0, #31, 427488 <builtin_usb_id+0x738>
  4272e0:	ldr	x0, [sp, #128]
  4272e4:	add	x1, sp, #0x260
  4272e8:	bl	427b98 <dev_if_packed_info>
  4272ec:	orr	w8, w22, #0x4
  4272f0:	cmp	w8, #0x6
  4272f4:	b.ne	426fe8 <builtin_usb_id+0x298>  // b.any
  4272f8:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  4272fc:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  427300:	add	x1, x1, #0x49d
  427304:	add	x2, x2, #0x546
  427308:	add	x3, x29, #0x18
  42730c:	mov	x0, x19
  427310:	bl	40b530 <sd_device_get_parent_with_subsystem_devtype@plt>
  427314:	tbnz	w0, #31, 427504 <builtin_usb_id+0x7b4>
  427318:	ldr	x0, [x29, #24]
  42731c:	add	x1, sp, #0x668
  427320:	bl	40a780 <sd_device_get_sysname@plt>
  427324:	tbnz	w0, #31, 426fe8 <builtin_usb_id+0x298>
  427328:	ldr	x0, [sp, #1640]
  42732c:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  427330:	add	x1, x1, #0x840
  427334:	add	x2, sp, #0x34
  427338:	add	x3, sp, #0x30
  42733c:	add	x4, sp, #0x2c
  427340:	add	x5, sp, #0x28
  427344:	bl	40b580 <__isoc99_sscanf@plt>
  427348:	cmp	w0, #0x4
  42734c:	b.ne	42768c <builtin_usb_id+0x93c>  // b.any
  427350:	ldr	x0, [x29, #24]
  427354:	adrp	x1, 43a000 <worker_hash_op+0x5df8>
  427358:	add	x1, x1, #0x82c
  42735c:	add	x2, sp, #0x40
  427360:	bl	40ace0 <sd_device_get_sysattr_value@plt>
  427364:	tbnz	w0, #31, 427920 <builtin_usb_id+0xbd0>
  427368:	ldr	x0, [sp, #64]
  42736c:	add	x1, sp, #0x7b0
  427370:	mov	w2, #0x100                 	// #256
  427374:	bl	40b630 <udev_util_encode_string@plt>
  427378:	ldr	x0, [sp, #64]
  42737c:	sub	x1, x29, #0x40
  427380:	mov	w2, #0x3f                  	// #63
  427384:	bl	40ad90 <util_replace_whitespace@plt>
  427388:	sub	x0, x29, #0x40
  42738c:	mov	x1, xzr
  427390:	bl	40ad70 <util_replace_chars@plt>
  427394:	ldr	x0, [x29, #24]
  427398:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  42739c:	add	x1, x1, #0xad5
  4273a0:	add	x2, sp, #0x68
  4273a4:	bl	40ace0 <sd_device_get_sysattr_value@plt>
  4273a8:	tbnz	w0, #31, 427974 <builtin_usb_id+0xc24>
  4273ac:	ldr	x0, [sp, #104]
  4273b0:	add	x1, sp, #0x670
  4273b4:	mov	w2, #0x100                 	// #256
  4273b8:	bl	40b630 <udev_util_encode_string@plt>
  4273bc:	ldr	x0, [sp, #104]
  4273c0:	add	x1, sp, #0x770
  4273c4:	mov	w2, #0x3f                  	// #63
  4273c8:	bl	40ad90 <util_replace_whitespace@plt>
  4273cc:	add	x0, sp, #0x770
  4273d0:	mov	x1, xzr
  4273d4:	bl	40ad70 <util_replace_chars@plt>
  4273d8:	ldr	x0, [x29, #24]
  4273dc:	adrp	x1, 43c000 <worker_hash_op+0x7df8>
  4273e0:	add	x1, x1, #0xcdd
  4273e4:	add	x2, sp, #0x38
  4273e8:	bl	40ace0 <sd_device_get_sysattr_value@plt>
  4273ec:	tbnz	w0, #31, 4279c8 <builtin_usb_id+0xc78>
  4273f0:	ldr	x21, [sp, #56]
  4273f4:	add	x1, sp, #0x90
  4273f8:	mov	w2, wzr
  4273fc:	mov	x0, x21
  427400:	bl	40b550 <strtoul@plt>
  427404:	ldr	x8, [sp, #144]
  427408:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  42740c:	add	x2, x2, #0xd53
  427410:	cmp	x8, x21
  427414:	b.eq	427430 <builtin_usb_id+0x6e0>  // b.none
  427418:	cmp	w0, #0xf
  42741c:	b.hi	427430 <builtin_usb_id+0x6e0>  // b.pmore
  427420:	adrp	x9, 46e000 <keyboard_lookup_key.wordlist+0x16bd8>
  427424:	sbfiz	x8, x0, #3, #32
  427428:	add	x9, x9, #0x418
  42742c:	ldr	x2, [x9, x8]
  427430:	add	x0, sp, #0x1e0
  427434:	mov	w1, #0x3f                  	// #63
  427438:	bl	40ac50 <strscpy@plt>
  42743c:	ldr	x0, [x29, #24]
  427440:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  427444:	add	x1, x1, #0xb28
  427448:	add	x2, sp, #0x90
  42744c:	bl	40ace0 <sd_device_get_sysattr_value@plt>
  427450:	tbnz	w0, #31, 427a1c <builtin_usb_id+0xccc>
  427454:	ldr	x0, [sp, #144]
  427458:	add	x1, sp, #0x220
  42745c:	mov	w2, #0x3f                  	// #63
  427460:	bl	40ad90 <util_replace_whitespace@plt>
  427464:	add	x0, sp, #0x220
  427468:	mov	x1, xzr
  42746c:	bl	40ad70 <util_replace_chars@plt>
  427470:	ldp	w3, w2, [sp, #40]
  427474:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  427478:	add	x1, x1, #0xb56
  42747c:	add	x0, sp, #0x1a0
  427480:	bl	40b640 <sprintf@plt>
  427484:	b	426fe8 <builtin_usb_id+0x298>
  427488:	ldr	x19, [sp, #136]
  42748c:	mov	w21, w0
  427490:	str	xzr, [sp, #1968]
  427494:	cbz	x19, 4274a8 <builtin_usb_id+0x758>
  427498:	mov	w0, #0x1                   	// #1
  42749c:	bl	40a2c0 <log_get_max_level_realm@plt>
  4274a0:	cmp	w0, #0x7
  4274a4:	b.ge	427ae8 <builtin_usb_id+0xd98>  // b.tcont
  4274a8:	mov	x6, xzr
  4274ac:	adrp	x8, 43d000 <worker_hash_op+0x8df8>
  4274b0:	cmp	x6, #0x0
  4274b4:	add	x8, x8, #0xa54
  4274b8:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  4274bc:	adrp	x4, 43d000 <worker_hash_op+0x8df8>
  4274c0:	csel	x5, xzr, x24, eq  // eq = none
  4274c4:	add	x2, x2, #0x93c
  4274c8:	add	x4, x4, #0x990
  4274cc:	str	x8, [sp, #8]
  4274d0:	mov	w0, #0x7                   	// #7
  4274d4:	mov	w3, #0x12d                 	// #301
  4274d8:	mov	w1, w21
  4274dc:	mov	x7, xzr
  4274e0:	str	xzr, [sp]
  4274e4:	bl	40a730 <log_object_internal@plt>
  4274e8:	add	sp, sp, #0x8f0
  4274ec:	ldp	x20, x19, [sp, #64]
  4274f0:	ldp	x22, x21, [sp, #48]
  4274f4:	ldp	x24, x23, [sp, #32]
  4274f8:	ldr	x28, [sp, #16]
  4274fc:	ldp	x29, x30, [sp], #80
  427500:	ret
  427504:	mov	w21, w0
  427508:	mov	w0, #0x1                   	// #1
  42750c:	str	xzr, [sp, #1968]
  427510:	bl	40a2c0 <log_get_max_level_realm@plt>
  427514:	cmp	w0, #0x7
  427518:	mov	x6, xzr
  42751c:	b.ge	427afc <builtin_usb_id+0xdac>  // b.tcont
  427520:	cmp	x6, #0x0
  427524:	adrp	x8, 43d000 <worker_hash_op+0x8df8>
  427528:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  42752c:	adrp	x4, 43d000 <worker_hash_op+0x8df8>
  427530:	csel	x5, xzr, x24, eq  // eq = none
  427534:	add	x8, x8, #0xa77
  427538:	add	x2, x2, #0x93c
  42753c:	add	x4, x4, #0x990
  427540:	mov	w0, #0x7                   	// #7
  427544:	mov	w3, #0x13b                 	// #315
  427548:	str	x8, [sp, #8]
  42754c:	mov	w1, w21
  427550:	str	xzr, [sp]
  427554:	b	4276dc <builtin_usb_id+0x98c>
  427558:	ldr	x0, [x29, #24]
  42755c:	str	x0, [sp, #144]
  427560:	add	x1, sp, #0x7b0
  427564:	mov	w2, #0x100                 	// #256
  427568:	bl	40b630 <udev_util_encode_string@plt>
  42756c:	ldr	x0, [sp, #144]
  427570:	sub	x1, x29, #0x40
  427574:	mov	w2, #0x3f                  	// #63
  427578:	bl	40ad90 <util_replace_whitespace@plt>
  42757c:	sub	x0, x29, #0x40
  427580:	mov	x1, xzr
  427584:	bl	40ad70 <util_replace_chars@plt>
  427588:	ldrb	w8, [sp, #1904]
  42758c:	cbnz	w8, 427028 <builtin_usb_id+0x2d8>
  427590:	ldr	x0, [sp, #128]
  427594:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  427598:	add	x1, x1, #0xbb4
  42759c:	add	x2, sp, #0x90
  4275a0:	bl	40ace0 <sd_device_get_sysattr_value@plt>
  4275a4:	tbnz	w0, #31, 4275b0 <builtin_usb_id+0x860>
  4275a8:	ldr	x0, [sp, #144]
  4275ac:	b	4275b8 <builtin_usb_id+0x868>
  4275b0:	ldr	x0, [sp, #1640]
  4275b4:	str	x0, [sp, #144]
  4275b8:	add	x1, sp, #0x670
  4275bc:	mov	w2, #0x100                 	// #256
  4275c0:	bl	40b630 <udev_util_encode_string@plt>
  4275c4:	ldr	x0, [sp, #144]
  4275c8:	add	x1, sp, #0x770
  4275cc:	mov	w2, #0x3f                  	// #63
  4275d0:	bl	40ad90 <util_replace_whitespace@plt>
  4275d4:	add	x0, sp, #0x770
  4275d8:	mov	x1, xzr
  4275dc:	bl	40ad70 <util_replace_chars@plt>
  4275e0:	ldrb	w8, [sp, #544]
  4275e4:	cbnz	w8, 42761c <builtin_usb_id+0x8cc>
  4275e8:	ldr	x0, [sp, #128]
  4275ec:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  4275f0:	add	x1, x1, #0xbbc
  4275f4:	add	x2, sp, #0x90
  4275f8:	bl	40ace0 <sd_device_get_sysattr_value@plt>
  4275fc:	tbnz	w0, #31, 42761c <builtin_usb_id+0x8cc>
  427600:	ldr	x0, [sp, #144]
  427604:	add	x1, sp, #0x220
  427608:	mov	w2, #0x3f                  	// #63
  42760c:	bl	40ad90 <util_replace_whitespace@plt>
  427610:	add	x0, sp, #0x220
  427614:	mov	x1, xzr
  427618:	bl	40ad70 <util_replace_chars@plt>
  42761c:	ldrb	w8, [sp, #1120]
  427620:	cbnz	w8, 4276ec <builtin_usb_id+0x99c>
  427624:	ldr	x0, [sp, #128]
  427628:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  42762c:	add	x1, x1, #0xbc6
  427630:	add	x2, sp, #0x90
  427634:	bl	40ace0 <sd_device_get_sysattr_value@plt>
  427638:	tbnz	w0, #31, 4276ec <builtin_usb_id+0x99c>
  42763c:	ldr	x0, [sp, #144]
  427640:	ldrb	w9, [x0]
  427644:	cbz	w9, 427670 <builtin_usb_id+0x920>
  427648:	add	x8, x0, #0x1
  42764c:	and	w10, w9, #0xff
  427650:	cmp	w10, #0x2c
  427654:	b.eq	4276e8 <builtin_usb_id+0x998>  // b.none
  427658:	cmp	w10, #0x20
  42765c:	b.cc	4276e8 <builtin_usb_id+0x998>  // b.lo, b.ul, b.last
  427660:	sxtb	w9, w9
  427664:	tbnz	w9, #31, 4276e8 <builtin_usb_id+0x998>
  427668:	ldrb	w9, [x8], #1
  42766c:	cbnz	w9, 42764c <builtin_usb_id+0x8fc>
  427670:	add	x1, sp, #0x460
  427674:	mov	w2, #0x1ff                 	// #511
  427678:	bl	40ad90 <util_replace_whitespace@plt>
  42767c:	add	x0, sp, #0x460
  427680:	mov	x1, xzr
  427684:	bl	40ad70 <util_replace_chars@plt>
  427688:	b	4276ec <builtin_usb_id+0x99c>
  42768c:	ldr	x21, [x29, #24]
  427690:	str	xzr, [sp, #1968]
  427694:	cbz	x21, 4276a8 <builtin_usb_id+0x958>
  427698:	mov	w0, #0x1                   	// #1
  42769c:	bl	40a2c0 <log_get_max_level_realm@plt>
  4276a0:	cmp	w0, #0x7
  4276a4:	b.ge	427b10 <builtin_usb_id+0xdc0>  // b.tcont
  4276a8:	mov	x6, xzr
  4276ac:	adrp	x8, 43d000 <worker_hash_op+0x8df8>
  4276b0:	cmp	x6, #0x0
  4276b4:	add	x8, x8, #0xa99
  4276b8:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  4276bc:	adrp	x4, 43d000 <worker_hash_op+0x8df8>
  4276c0:	csel	x5, xzr, x24, eq  // eq = none
  4276c4:	add	x2, x2, #0x93c
  4276c8:	add	x4, x4, #0x990
  4276cc:	stp	xzr, x8, [sp]
  4276d0:	mov	w0, #0x7                   	// #7
  4276d4:	mov	w3, #0x141                 	// #321
  4276d8:	mov	w1, wzr
  4276dc:	mov	x7, xzr
  4276e0:	bl	40a730 <log_object_internal@plt>
  4276e4:	b	426fe8 <builtin_usb_id+0x298>
  4276e8:	str	xzr, [sp, #144]
  4276ec:	adrp	x3, 43d000 <worker_hash_op+0x8df8>
  4276f0:	add	x8, sp, #0x90
  4276f4:	add	x3, x3, #0xbcd
  4276f8:	add	x0, sp, #0x68
  4276fc:	sub	x2, x29, #0x40
  427700:	add	x4, sp, #0x770
  427704:	mov	w1, #0x100                 	// #256
  427708:	mov	x5, xzr
  42770c:	str	x8, [sp, #104]
  427710:	bl	40ad00 <strpcpyl@plt>
  427714:	ldrb	w8, [sp, #1120]
  427718:	mov	x1, x0
  42771c:	cbz	w8, 42773c <builtin_usb_id+0x9ec>
  427720:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  427724:	add	x2, x2, #0xbcd
  427728:	add	x0, sp, #0x68
  42772c:	add	x3, sp, #0x460
  427730:	mov	x4, xzr
  427734:	bl	40ad00 <strpcpyl@plt>
  427738:	mov	x1, x0
  42773c:	ldrb	w8, [sp, #416]
  427740:	cbz	w8, 42775c <builtin_usb_id+0xa0c>
  427744:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  427748:	add	x2, x2, #0x897
  42774c:	add	x0, sp, #0x68
  427750:	add	x3, sp, #0x1a0
  427754:	mov	x4, xzr
  427758:	bl	40ad00 <strpcpyl@plt>
  42775c:	and	w21, w20, #0x1
  427760:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  427764:	add	x2, x2, #0xbcf
  427768:	sub	x3, x29, #0x40
  42776c:	mov	x0, x19
  427770:	mov	w1, w21
  427774:	bl	420aec <udev_builtin_add_property>
  427778:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  42777c:	add	x2, x2, #0xbd9
  427780:	add	x3, sp, #0x7b0
  427784:	mov	x0, x19
  427788:	mov	w1, w21
  42778c:	bl	420aec <udev_builtin_add_property>
  427790:	ldr	x3, [x29, #24]
  427794:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  427798:	add	x2, x2, #0xbe7
  42779c:	mov	x0, x19
  4277a0:	mov	w1, w21
  4277a4:	bl	420aec <udev_builtin_add_property>
  4277a8:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  4277ac:	add	x2, x2, #0xbf4
  4277b0:	add	x3, sp, #0x770
  4277b4:	mov	x0, x19
  4277b8:	mov	w1, w21
  4277bc:	bl	420aec <udev_builtin_add_property>
  4277c0:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  4277c4:	add	x2, x2, #0xbfd
  4277c8:	add	x3, sp, #0x670
  4277cc:	mov	x0, x19
  4277d0:	mov	w1, w21
  4277d4:	bl	420aec <udev_builtin_add_property>
  4277d8:	ldr	x3, [sp, #1640]
  4277dc:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  4277e0:	add	x2, x2, #0xc0a
  4277e4:	mov	x0, x19
  4277e8:	mov	w1, w21
  4277ec:	bl	420aec <udev_builtin_add_property>
  4277f0:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  4277f4:	add	x2, x2, #0xc16
  4277f8:	add	x3, sp, #0x220
  4277fc:	mov	x0, x19
  427800:	mov	w1, w21
  427804:	bl	420aec <udev_builtin_add_property>
  427808:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  42780c:	add	x2, x2, #0xc22
  427810:	add	x3, sp, #0x90
  427814:	mov	x0, x19
  427818:	mov	w1, w21
  42781c:	bl	420aec <udev_builtin_add_property>
  427820:	ldrb	w8, [sp, #1120]
  427824:	cbz	w8, 427840 <builtin_usb_id+0xaf0>
  427828:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  42782c:	add	x2, x2, #0xc2c
  427830:	add	x3, sp, #0x460
  427834:	mov	x0, x19
  427838:	mov	w1, w21
  42783c:	bl	420aec <udev_builtin_add_property>
  427840:	ldrb	w8, [sp, #480]
  427844:	cbz	w8, 427860 <builtin_usb_id+0xb10>
  427848:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  42784c:	and	w1, w20, #0x1
  427850:	add	x2, x2, #0xc3c
  427854:	add	x3, sp, #0x1e0
  427858:	mov	x0, x19
  42785c:	bl	420aec <udev_builtin_add_property>
  427860:	ldrb	w8, [sp, #416]
  427864:	cbz	w8, 427880 <builtin_usb_id+0xb30>
  427868:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  42786c:	and	w1, w20, #0x1
  427870:	add	x2, x2, #0xc44
  427874:	add	x3, sp, #0x1a0
  427878:	mov	x0, x19
  42787c:	bl	420aec <udev_builtin_add_property>
  427880:	and	w21, w20, #0x1
  427884:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  427888:	adrp	x3, 439000 <worker_hash_op+0x4df8>
  42788c:	add	x2, x2, #0xc50
  427890:	add	x3, x3, #0x87f
  427894:	mov	x0, x19
  427898:	mov	w1, w21
  42789c:	bl	420aec <udev_builtin_add_property>
  4278a0:	ldrb	w8, [sp, #608]
  4278a4:	cbz	w8, 4278c0 <builtin_usb_id+0xb70>
  4278a8:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  4278ac:	add	x2, x2, #0xc57
  4278b0:	add	x3, sp, #0x260
  4278b4:	mov	x0, x19
  4278b8:	mov	w1, w21
  4278bc:	bl	420aec <udev_builtin_add_property>
  4278c0:	ldr	x3, [sp, #408]
  4278c4:	cbz	x3, 4278dc <builtin_usb_id+0xb8c>
  4278c8:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  4278cc:	and	w1, w20, #0x1
  4278d0:	add	x2, x2, #0xc69
  4278d4:	mov	x0, x19
  4278d8:	bl	420aec <udev_builtin_add_property>
  4278dc:	ldr	x3, [sp, #400]
  4278e0:	cbz	x3, 4278f8 <builtin_usb_id+0xba8>
  4278e4:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  4278e8:	and	w1, w20, #0x1
  4278ec:	add	x2, x2, #0xc7e
  4278f0:	mov	x0, x19
  4278f4:	bl	420aec <udev_builtin_add_property>
  4278f8:	mov	w0, wzr
  4278fc:	b	4274e8 <builtin_usb_id+0x798>
  427900:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  427904:	add	x2, x2, #0xd53
  427908:	add	x0, sp, #0x1e0
  42790c:	mov	w1, #0x3f                  	// #63
  427910:	bl	40ac50 <strscpy@plt>
  427914:	b	427260 <builtin_usb_id+0x510>
  427918:	mov	w22, wzr
  42791c:	b	427260 <builtin_usb_id+0x510>
  427920:	ldr	x22, [x29, #24]
  427924:	mov	w21, w0
  427928:	str	xzr, [sp, #1968]
  42792c:	cbz	x22, 427940 <builtin_usb_id+0xbf0>
  427930:	mov	w0, #0x1                   	// #1
  427934:	bl	40a2c0 <log_get_max_level_realm@plt>
  427938:	cmp	w0, #0x7
  42793c:	b.ge	427b24 <builtin_usb_id+0xdd4>  // b.tcont
  427940:	mov	x6, xzr
  427944:	adrp	x8, 43d000 <worker_hash_op+0x8df8>
  427948:	cmp	x6, #0x0
  42794c:	add	x8, x8, #0xaad
  427950:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  427954:	adrp	x4, 43d000 <worker_hash_op+0x8df8>
  427958:	csel	x5, xzr, x24, eq  // eq = none
  42795c:	add	x2, x2, #0x93c
  427960:	add	x4, x4, #0x990
  427964:	str	x8, [sp, #8]
  427968:	mov	w0, #0x7                   	// #7
  42796c:	mov	w3, #0x148                 	// #328
  427970:	b	42754c <builtin_usb_id+0x7fc>
  427974:	ldr	x22, [x29, #24]
  427978:	mov	w21, w0
  42797c:	str	xzr, [sp, #1648]
  427980:	cbz	x22, 427994 <builtin_usb_id+0xc44>
  427984:	mov	w0, #0x1                   	// #1
  427988:	bl	40a2c0 <log_get_max_level_realm@plt>
  42798c:	cmp	w0, #0x7
  427990:	b.ge	427b38 <builtin_usb_id+0xde8>  // b.tcont
  427994:	mov	x6, xzr
  427998:	adrp	x8, 43d000 <worker_hash_op+0x8df8>
  42799c:	cmp	x6, #0x0
  4279a0:	add	x8, x8, #0xadb
  4279a4:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  4279a8:	adrp	x4, 43d000 <worker_hash_op+0x8df8>
  4279ac:	csel	x5, xzr, x24, eq  // eq = none
  4279b0:	add	x2, x2, #0x93c
  4279b4:	add	x4, x4, #0x990
  4279b8:	str	x8, [sp, #8]
  4279bc:	mov	w0, #0x7                   	// #7
  4279c0:	mov	w3, #0x151                 	// #337
  4279c4:	b	42754c <builtin_usb_id+0x7fc>
  4279c8:	ldr	x22, [x29, #24]
  4279cc:	mov	w21, w0
  4279d0:	str	xzr, [sp, #144]
  4279d4:	cbz	x22, 4279e8 <builtin_usb_id+0xc98>
  4279d8:	mov	w0, #0x1                   	// #1
  4279dc:	bl	40a2c0 <log_get_max_level_realm@plt>
  4279e0:	cmp	w0, #0x7
  4279e4:	b.ge	427b4c <builtin_usb_id+0xdfc>  // b.tcont
  4279e8:	mov	x6, xzr
  4279ec:	adrp	x8, 43d000 <worker_hash_op+0x8df8>
  4279f0:	cmp	x6, #0x0
  4279f4:	add	x8, x8, #0xb02
  4279f8:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  4279fc:	adrp	x4, 43d000 <worker_hash_op+0x8df8>
  427a00:	csel	x5, xzr, x24, eq  // eq = none
  427a04:	add	x2, x2, #0x93c
  427a08:	add	x4, x4, #0x990
  427a0c:	str	x8, [sp, #8]
  427a10:	mov	w0, #0x7                   	// #7
  427a14:	mov	w3, #0x15a                 	// #346
  427a18:	b	42754c <builtin_usb_id+0x7fc>
  427a1c:	ldr	x22, [x29, #24]
  427a20:	mov	w21, w0
  427a24:	str	xzr, [sp, #32]
  427a28:	cbz	x22, 427a3c <builtin_usb_id+0xcec>
  427a2c:	mov	w0, #0x1                   	// #1
  427a30:	bl	40a2c0 <log_get_max_level_realm@plt>
  427a34:	cmp	w0, #0x7
  427a38:	b.ge	427b60 <builtin_usb_id+0xe10>  // b.tcont
  427a3c:	mov	x6, xzr
  427a40:	adrp	x8, 43d000 <worker_hash_op+0x8df8>
  427a44:	cmp	x6, #0x0
  427a48:	add	x8, x8, #0xb2c
  427a4c:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  427a50:	adrp	x4, 43d000 <worker_hash_op+0x8df8>
  427a54:	csel	x5, xzr, x24, eq  // eq = none
  427a58:	add	x2, x2, #0x93c
  427a5c:	add	x4, x4, #0x990
  427a60:	str	x8, [sp, #8]
  427a64:	mov	w0, #0x7                   	// #7
  427a68:	mov	w3, #0x161                 	// #353
  427a6c:	b	42754c <builtin_usb_id+0x7fc>
  427a70:	add	x1, sp, #0x7b0
  427a74:	mov	x0, x19
  427a78:	bl	40a780 <sd_device_get_sysname@plt>
  427a7c:	ldr	x6, [sp, #1968]
  427a80:	b	426fa0 <builtin_usb_id+0x250>
  427a84:	add	x1, sp, #0x7b0
  427a88:	mov	x0, x23
  427a8c:	bl	40a780 <sd_device_get_sysname@plt>
  427a90:	ldr	x6, [sp, #1968]
  427a94:	b	427280 <builtin_usb_id+0x530>
  427a98:	add	x1, sp, #0x7b0
  427a9c:	mov	x0, x19
  427aa0:	bl	40a780 <sd_device_get_sysname@plt>
  427aa4:	ldr	x6, [sp, #1968]
  427aa8:	b	427058 <builtin_usb_id+0x308>
  427aac:	add	x1, sp, #0x90
  427ab0:	mov	x0, x19
  427ab4:	bl	40a780 <sd_device_get_sysname@plt>
  427ab8:	ldr	x6, [sp, #144]
  427abc:	b	4270b4 <builtin_usb_id+0x364>
  427ac0:	add	x1, sp, #0x7b0
  427ac4:	mov	x0, x19
  427ac8:	bl	40a780 <sd_device_get_sysname@plt>
  427acc:	ldr	x6, [sp, #1968]
  427ad0:	b	427110 <builtin_usb_id+0x3c0>
  427ad4:	add	x1, sp, #0x90
  427ad8:	mov	x0, x19
  427adc:	bl	40a780 <sd_device_get_sysname@plt>
  427ae0:	ldr	x6, [sp, #144]
  427ae4:	b	427164 <builtin_usb_id+0x414>
  427ae8:	add	x1, sp, #0x7b0
  427aec:	mov	x0, x19
  427af0:	bl	40a780 <sd_device_get_sysname@plt>
  427af4:	ldr	x6, [sp, #1968]
  427af8:	b	4274ac <builtin_usb_id+0x75c>
  427afc:	add	x1, sp, #0x7b0
  427b00:	mov	x0, x19
  427b04:	bl	40a780 <sd_device_get_sysname@plt>
  427b08:	ldr	x6, [sp, #1968]
  427b0c:	b	427520 <builtin_usb_id+0x7d0>
  427b10:	add	x1, sp, #0x7b0
  427b14:	mov	x0, x21
  427b18:	bl	40a780 <sd_device_get_sysname@plt>
  427b1c:	ldr	x6, [sp, #1968]
  427b20:	b	4276ac <builtin_usb_id+0x95c>
  427b24:	add	x1, sp, #0x7b0
  427b28:	mov	x0, x22
  427b2c:	bl	40a780 <sd_device_get_sysname@plt>
  427b30:	ldr	x6, [sp, #1968]
  427b34:	b	427944 <builtin_usb_id+0xbf4>
  427b38:	add	x1, sp, #0x670
  427b3c:	mov	x0, x22
  427b40:	bl	40a780 <sd_device_get_sysname@plt>
  427b44:	ldr	x6, [sp, #1648]
  427b48:	b	427998 <builtin_usb_id+0xc48>
  427b4c:	add	x1, sp, #0x90
  427b50:	mov	x0, x22
  427b54:	bl	40a780 <sd_device_get_sysname@plt>
  427b58:	ldr	x6, [sp, #144]
  427b5c:	b	4279ec <builtin_usb_id+0xc9c>
  427b60:	add	x1, sp, #0x20
  427b64:	mov	x0, x22
  427b68:	bl	40a780 <sd_device_get_sysname@plt>
  427b6c:	ldr	x6, [sp, #32]
  427b70:	b	427a40 <builtin_usb_id+0xcf0>
  427b74:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  427b78:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  427b7c:	adrp	x4, 43d000 <worker_hash_op+0x8df8>
  427b80:	add	x1, x1, #0x4f0
  427b84:	add	x2, x2, #0x93c
  427b88:	add	x4, x4, #0x95b
  427b8c:	mov	w0, #0x1                   	// #1
  427b90:	mov	w3, #0x100                 	// #256
  427b94:	bl	40a630 <log_assert_failed_realm@plt>

0000000000427b98 <dev_if_packed_info>:
  427b98:	stp	x29, x30, [sp, #-96]!
  427b9c:	stp	x28, x27, [sp, #16]
  427ba0:	stp	x26, x25, [sp, #32]
  427ba4:	stp	x24, x23, [sp, #48]
  427ba8:	stp	x22, x21, [sp, #64]
  427bac:	stp	x20, x19, [sp, #80]
  427bb0:	mov	x29, sp
  427bb4:	sub	sp, sp, #0x10, lsl #12
  427bb8:	sub	sp, sp, #0x40
  427bbc:	mov	x19, sp
  427bc0:	mov	x23, x1
  427bc4:	add	x1, x19, #0x18
  427bc8:	mov	x22, x0
  427bcc:	bl	40a860 <sd_device_get_syspath@plt>
  427bd0:	tbnz	w0, #31, 427c30 <dev_if_packed_info+0x98>
  427bd4:	ldr	x20, [x19, #24]
  427bd8:	cbz	x20, 427c38 <dev_if_packed_info+0xa0>
  427bdc:	mov	x0, x20
  427be0:	bl	40aa40 <strlen@plt>
  427be4:	add	x8, x0, #0xd
  427be8:	cmp	x8, #0x400, lsl #12
  427bec:	b.hi	427ee0 <dev_if_packed_info+0x348>  // b.pmore
  427bf0:	add	x8, x8, #0xf
  427bf4:	mov	x9, sp
  427bf8:	and	x8, x8, #0xfffffffffffffff0
  427bfc:	sub	x21, x9, x8
  427c00:	mov	sp, x21
  427c04:	mov	x0, x21
  427c08:	mov	x1, x20
  427c0c:	bl	40ab70 <stpcpy@plt>
  427c10:	adrp	x8, 43d000 <worker_hash_op+0x8df8>
  427c14:	add	x8, x8, #0xc8c
  427c18:	ldr	x9, [x8]
  427c1c:	ldur	x10, [x8, #5]
  427c20:	add	x8, x0, #0xc
  427c24:	str	x9, [x0]
  427c28:	stur	x10, [x0, #5]
  427c2c:	b	427c44 <dev_if_packed_info+0xac>
  427c30:	mov	w20, #0xffffffff            	// #-1
  427c34:	b	427d54 <dev_if_packed_info+0x1bc>
  427c38:	sub	x21, sp, #0x10
  427c3c:	mov	sp, x21
  427c40:	mov	x8, x21
  427c44:	mov	w1, #0x80000               	// #524288
  427c48:	mov	x0, x21
  427c4c:	strb	wzr, [x8]
  427c50:	bl	40a890 <open64@plt>
  427c54:	mov	w20, w0
  427c58:	tbnz	w0, #31, 427ce4 <dev_if_packed_info+0x14c>
  427c5c:	mov	w2, #0x11                  	// #17
  427c60:	mov	w25, #0x11                  	// #17
  427c64:	add	x1, x19, #0x20
  427c68:	movk	w2, #0x1, lsl #16
  427c6c:	mov	w0, w20
  427c70:	movk	w25, #0x1, lsl #16
  427c74:	bl	40a830 <read@plt>
  427c78:	cmp	x0, #0x11
  427c7c:	b.gt	427d7c <dev_if_packed_info+0x1e4>
  427c80:	str	xzr, [x19, #16]
  427c84:	cbz	x22, 427c98 <dev_if_packed_info+0x100>
  427c88:	mov	w0, #0x1                   	// #1
  427c8c:	bl	40a2c0 <log_get_max_level_realm@plt>
  427c90:	cmp	w0, #0x4
  427c94:	b.ge	427eb8 <dev_if_packed_info+0x320>  // b.tcont
  427c98:	mov	x6, xzr
  427c9c:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  427ca0:	add	x8, x8, #0x7f
  427ca4:	cmp	x6, #0x0
  427ca8:	csel	x5, xzr, x8, eq  // eq = none
  427cac:	sub	sp, sp, #0x20
  427cb0:	adrp	x8, 43d000 <worker_hash_op+0x8df8>
  427cb4:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  427cb8:	adrp	x4, 43d000 <worker_hash_op+0x8df8>
  427cbc:	mov	w1, #0x5                   	// #5
  427cc0:	add	x8, x8, #0xcf8
  427cc4:	add	x2, x2, #0x93c
  427cc8:	add	x4, x4, #0xccd
  427ccc:	mov	w0, #0x4                   	// #4
  427cd0:	movk	w1, #0x4000, lsl #16
  427cd4:	mov	w3, #0xab                  	// #171
  427cd8:	stp	x8, x21, [sp, #8]
  427cdc:	str	xzr, [sp]
  427ce0:	b	427d48 <dev_if_packed_info+0x1b0>
  427ce4:	str	xzr, [x19, #32]
  427ce8:	bl	40a3e0 <__errno_location@plt>
  427cec:	ldr	w23, [x0]
  427cf0:	cbz	x22, 427d04 <dev_if_packed_info+0x16c>
  427cf4:	mov	w0, #0x1                   	// #1
  427cf8:	bl	40a2c0 <log_get_max_level_realm@plt>
  427cfc:	cmp	w0, #0x7
  427d00:	b.ge	427ea4 <dev_if_packed_info+0x30c>  // b.tcont
  427d04:	mov	x6, xzr
  427d08:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  427d0c:	add	x8, x8, #0x7f
  427d10:	cmp	x6, #0x0
  427d14:	csel	x5, xzr, x8, eq  // eq = none
  427d18:	sub	sp, sp, #0x20
  427d1c:	adrp	x8, 43d000 <worker_hash_op+0x8df8>
  427d20:	add	x8, x8, #0xce0
  427d24:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  427d28:	adrp	x4, 43d000 <worker_hash_op+0x8df8>
  427d2c:	add	x2, x2, #0x93c
  427d30:	add	x4, x4, #0xccd
  427d34:	stp	x8, x21, [sp, #8]
  427d38:	mov	w0, #0x7                   	// #7
  427d3c:	mov	w3, #0xa6                  	// #166
  427d40:	str	xzr, [sp]
  427d44:	mov	w1, w23
  427d48:	mov	x7, xzr
  427d4c:	bl	40a730 <log_object_internal@plt>
  427d50:	add	sp, sp, #0x20
  427d54:	mov	w0, w20
  427d58:	bl	40a660 <safe_close@plt>
  427d5c:	mov	sp, x29
  427d60:	ldp	x20, x19, [sp, #80]
  427d64:	ldp	x22, x21, [sp, #64]
  427d68:	ldp	x24, x23, [sp, #48]
  427d6c:	ldp	x26, x25, [sp, #32]
  427d70:	ldp	x28, x27, [sp, #16]
  427d74:	ldp	x29, x30, [sp], #96
  427d78:	ret
  427d7c:	mov	x24, x0
  427d80:	cmp	x0, x25
  427d84:	b.hi	427f04 <dev_if_packed_info+0x36c>  // b.pmore
  427d88:	mov	x27, xzr
  427d8c:	mov	w25, wzr
  427d90:	sub	x28, x24, #0x9
  427d94:	add	x11, x19, #0x20
  427d98:	strb	wzr, [x23]
  427d9c:	b	427db0 <dev_if_packed_info+0x218>
  427da0:	add	x11, x19, #0x20
  427da4:	add	x8, x27, #0x9
  427da8:	cmp	x8, x24
  427dac:	b.cs	427e2c <dev_if_packed_info+0x294>  // b.hs, b.nlast
  427db0:	add	w26, w25, #0x7
  427db4:	cmp	w26, #0x1fd
  427db8:	b.hi	427e30 <dev_if_packed_info+0x298>  // b.pmore
  427dbc:	add	x8, x11, x27
  427dc0:	ldrb	w9, [x8]
  427dc4:	cmp	x9, #0x2
  427dc8:	b.ls	427e2c <dev_if_packed_info+0x294>  // b.plast
  427dcc:	cmp	x28, x9
  427dd0:	b.cc	427e44 <dev_if_packed_info+0x2ac>  // b.lo, b.ul, b.last
  427dd4:	ldrb	w10, [x8, #1]
  427dd8:	add	x27, x27, x9
  427ddc:	cmp	w10, #0x4
  427de0:	b.ne	427da4 <dev_if_packed_info+0x20c>  // b.any
  427de4:	ldrb	w3, [x8, #5]
  427de8:	ldrb	w4, [x8, #6]
  427dec:	ldrb	w5, [x8, #7]
  427df0:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  427df4:	add	x0, x19, #0x10
  427df8:	mov	w1, #0x8                   	// #8
  427dfc:	add	x2, x2, #0xd45
  427e00:	bl	40b050 <snprintf@plt>
  427e04:	cmp	w0, #0x7
  427e08:	b.ne	427da0 <dev_if_packed_info+0x208>  // b.any
  427e0c:	add	x1, x19, #0x10
  427e10:	mov	x0, x23
  427e14:	bl	40b1f0 <strstr@plt>
  427e18:	cbnz	x0, 427da0 <dev_if_packed_info+0x208>
  427e1c:	ldr	x8, [x19, #16]
  427e20:	str	x8, [x23, w25, uxtw]
  427e24:	mov	w25, w26
  427e28:	b	427da0 <dev_if_packed_info+0x208>
  427e2c:	cbz	w25, 427d54 <dev_if_packed_info+0x1bc>
  427e30:	add	w8, w25, #0x1
  427e34:	mov	w9, #0x3a                  	// #58
  427e38:	strb	w9, [x23, w25, uxtw]
  427e3c:	strb	wzr, [x23, w8, uxtw]
  427e40:	b	427d54 <dev_if_packed_info+0x1bc>
  427e44:	str	xzr, [x19, #8]
  427e48:	cbz	x22, 427e5c <dev_if_packed_info+0x2c4>
  427e4c:	mov	w0, #0x1                   	// #1
  427e50:	bl	40a2c0 <log_get_max_level_realm@plt>
  427e54:	cmp	w0, #0x7
  427e58:	b.ge	427ecc <dev_if_packed_info+0x334>  // b.tcont
  427e5c:	mov	x6, xzr
  427e60:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  427e64:	add	x8, x8, #0x7f
  427e68:	cmp	x6, #0x0
  427e6c:	csel	x5, xzr, x8, eq  // eq = none
  427e70:	sub	sp, sp, #0x20
  427e74:	adrp	x8, 43d000 <worker_hash_op+0x8df8>
  427e78:	add	x8, x8, #0xd29
  427e7c:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  427e80:	adrp	x4, 43d000 <worker_hash_op+0x8df8>
  427e84:	mov	w1, #0x5                   	// #5
  427e88:	add	x2, x2, #0x93c
  427e8c:	add	x4, x4, #0xccd
  427e90:	stp	x8, x21, [sp, #8]
  427e94:	mov	w0, #0x7                   	// #7
  427e98:	movk	w1, #0x4000, lsl #16
  427e9c:	mov	w3, #0xba                  	// #186
  427ea0:	b	427cdc <dev_if_packed_info+0x144>
  427ea4:	add	x1, x19, #0x20
  427ea8:	mov	x0, x22
  427eac:	bl	40a780 <sd_device_get_sysname@plt>
  427eb0:	ldr	x6, [x19, #32]
  427eb4:	b	427d08 <dev_if_packed_info+0x170>
  427eb8:	add	x1, x19, #0x10
  427ebc:	mov	x0, x22
  427ec0:	bl	40a780 <sd_device_get_sysname@plt>
  427ec4:	ldr	x6, [x19, #16]
  427ec8:	b	427c9c <dev_if_packed_info+0x104>
  427ecc:	add	x1, x19, #0x8
  427ed0:	mov	x0, x22
  427ed4:	bl	40a780 <sd_device_get_sysname@plt>
  427ed8:	ldr	x6, [x19, #8]
  427edc:	b	427e60 <dev_if_packed_info+0x2c8>
  427ee0:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  427ee4:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  427ee8:	adrp	x4, 43d000 <worker_hash_op+0x8df8>
  427eec:	add	x1, x1, #0xc66
  427ef0:	add	x2, x2, #0x93c
  427ef4:	add	x4, x4, #0xc99
  427ef8:	mov	w0, #0x1                   	// #1
  427efc:	mov	w3, #0xa3                  	// #163
  427f00:	bl	40a630 <log_assert_failed_realm@plt>
  427f04:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  427f08:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  427f0c:	adrp	x4, 43d000 <worker_hash_op+0x8df8>
  427f10:	add	x1, x1, #0xd0d
  427f14:	add	x2, x2, #0x93c
  427f18:	add	x4, x4, #0xc99
  427f1c:	mov	w0, #0x1                   	// #1
  427f20:	mov	w3, #0xac                  	// #172
  427f24:	bl	40a630 <log_assert_failed_realm@plt>

0000000000427f28 <link_config_ctx_free>:
  427f28:	cbz	x0, 427f74 <link_config_ctx_free+0x4c>
  427f2c:	stp	x29, x30, [sp, #-32]!
  427f30:	stp	x20, x19, [sp, #16]
  427f34:	mov	x19, x0
  427f38:	ldr	w0, [x0, #8]
  427f3c:	mov	x29, sp
  427f40:	bl	40a660 <safe_close@plt>
  427f44:	ldr	x0, [x19, #16]
  427f48:	bl	40a640 <sd_netlink_unref@plt>
  427f4c:	ldr	x0, [x19]
  427f50:	cbz	x0, 427f64 <link_config_ctx_free+0x3c>
  427f54:	ldr	x20, [x0, #208]
  427f58:	bl	429b48 <link_config_free>
  427f5c:	mov	x0, x20
  427f60:	cbnz	x20, 427f54 <link_config_ctx_free+0x2c>
  427f64:	mov	x0, x19
  427f68:	ldp	x20, x19, [sp, #16]
  427f6c:	ldp	x29, x30, [sp], #32
  427f70:	b	40a320 <free@plt>
  427f74:	ret

0000000000427f78 <link_config_ctx_new>:
  427f78:	stp	x29, x30, [sp, #-32]!
  427f7c:	stp	x20, x19, [sp, #16]
  427f80:	mov	x29, sp
  427f84:	cbz	x0, 427fc4 <link_config_ctx_new+0x4c>
  427f88:	mov	x19, x0
  427f8c:	mov	w0, #0x1                   	// #1
  427f90:	mov	w1, #0x20                  	// #32
  427f94:	mov	w20, #0x1                   	// #1
  427f98:	bl	40b650 <calloc@plt>
  427f9c:	cbz	x0, 427fd4 <link_config_ctx_new+0x5c>
  427fa0:	mov	x8, x0
  427fa4:	mov	w0, wzr
  427fa8:	mov	w9, #0xffffffff            	// #-1
  427fac:	strb	w20, [x8, #12]
  427fb0:	str	w9, [x8, #8]
  427fb4:	str	x8, [x19]
  427fb8:	ldp	x20, x19, [sp, #16]
  427fbc:	ldp	x29, x30, [sp], #32
  427fc0:	ret
  427fc4:	mov	w0, #0xffffffea            	// #-22
  427fc8:	ldp	x20, x19, [sp, #16]
  427fcc:	ldp	x29, x30, [sp], #32
  427fd0:	ret
  427fd4:	mov	w0, #0xfffffff4            	// #-12
  427fd8:	ldp	x20, x19, [sp, #16]
  427fdc:	ldp	x29, x30, [sp], #32
  427fe0:	ret

0000000000427fe4 <link_load_one>:
  427fe4:	stp	x29, x30, [sp, #-64]!
  427fe8:	stp	x24, x23, [sp, #16]
  427fec:	stp	x22, x21, [sp, #32]
  427ff0:	stp	x20, x19, [sp, #48]
  427ff4:	mov	x29, sp
  427ff8:	cbz	x0, 428300 <link_load_one+0x31c>
  427ffc:	mov	x21, x1
  428000:	cbz	x1, 428324 <link_load_one+0x340>
  428004:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  428008:	mov	x22, x0
  42800c:	add	x1, x1, #0xa77
  428010:	mov	x0, x21
  428014:	bl	40b120 <fopen64@plt>
  428018:	mov	x19, x0
  42801c:	cbz	x0, 42807c <link_load_one+0x98>
  428020:	mov	x0, x19
  428024:	bl	40b130 <fileno@plt>
  428028:	bl	40b150 <null_or_empty_fd@plt>
  42802c:	cbz	w0, 428098 <link_load_one+0xb4>
  428030:	mov	w0, #0x1                   	// #1
  428034:	bl	40a2c0 <log_get_max_level_realm@plt>
  428038:	cmp	w0, #0x7
  42803c:	b.lt	42806c <link_load_one+0x88>  // b.tstop
  428040:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  428044:	adrp	x4, 43d000 <worker_hash_op+0x8df8>
  428048:	adrp	x5, 437000 <worker_hash_op+0x2df8>
  42804c:	add	x2, x2, #0xd8b
  428050:	add	x4, x4, #0xde2
  428054:	add	x5, x5, #0xa85
  428058:	mov	w0, #0x407                 	// #1031
  42805c:	mov	w3, #0x81                  	// #129
  428060:	mov	w1, wzr
  428064:	mov	x6, x21
  428068:	bl	40a2d0 <log_internal_realm@plt>
  42806c:	mov	x20, xzr
  428070:	mov	x23, xzr
  428074:	mov	w24, wzr
  428078:	b	428168 <link_load_one+0x184>
  42807c:	bl	40a3e0 <__errno_location@plt>
  428080:	ldr	w8, [x0]
  428084:	mov	x20, xzr
  428088:	mov	x23, xzr
  42808c:	cmp	w8, #0x2
  428090:	csneg	w24, wzr, w8, eq  // eq = none
  428094:	b	428168 <link_load_one+0x184>
  428098:	mov	x0, x21
  42809c:	bl	40a810 <strdup@plt>
  4280a0:	mov	x23, x0
  4280a4:	cbz	x0, 428160 <link_load_one+0x17c>
  4280a8:	mov	w0, #0xe0                  	// #224
  4280ac:	bl	40a490 <malloc@plt>
  4280b0:	mov	x20, x0
  4280b4:	cbz	x0, 428164 <link_load_one+0x180>
  4280b8:	str	x23, [x20]
  4280bc:	movi	v0.2d, #0x0
  4280c0:	mov	x23, x20
  4280c4:	mov	w8, #0xffffffff            	// #-1
  4280c8:	movi	v1.2d, #0xffffffffffffffff
  4280cc:	str	q0, [x23, #8]!
  4280d0:	str	w8, [x20, #80]
  4280d4:	mov	x8, #0xffffffffffffffff    	// #-1
  4280d8:	str	xzr, [x20, #72]
  4280dc:	stur	q0, [x20, #24]
  4280e0:	stur	q0, [x20, #40]
  4280e4:	stur	q0, [x20, #56]
  4280e8:	stur	q0, [x20, #84]
  4280ec:	stur	q0, [x20, #100]
  4280f0:	str	q0, [x20, #112]
  4280f4:	str	d1, [x20, #128]
  4280f8:	str	xzr, [x20, #136]
  4280fc:	str	wzr, [x20, #144]
  428100:	stur	d1, [x20, #148]
  428104:	stp	q0, q0, [x20, #176]
  428108:	str	q0, [x20, #208]
  42810c:	stur	x8, [x20, #164]
  428110:	stur	x8, [x20, #156]
  428114:	str	w8, [x20, #172]
  428118:	adrp	x4, 46f000 <_DYNAMIC+0x208>
  42811c:	adrp	x5, 46f000 <_DYNAMIC+0x208>
  428120:	ldr	x4, [x4, #248]
  428124:	ldr	x5, [x5, #256]
  428128:	adrp	x3, 442000 <hash_key_name.asso_values+0x4>
  42812c:	add	x3, x3, #0x222
  428130:	mov	w6, #0x4                   	// #4
  428134:	mov	x0, xzr
  428138:	mov	x1, x21
  42813c:	mov	x2, x19
  428140:	mov	x7, x20
  428144:	bl	40b660 <config_parse@plt>
  428148:	tbnz	w0, #31, 42819c <link_load_one+0x1b8>
  42814c:	ldr	w8, [x20, #124]
  428150:	cbz	w8, 4281a8 <link_load_one+0x1c4>
  428154:	mov	x23, xzr
  428158:	mov	w24, #0xffffffde            	// #-34
  42815c:	b	428168 <link_load_one+0x184>
  428160:	mov	x20, xzr
  428164:	mov	w24, #0xfffffff4            	// #-12
  428168:	mov	x0, x23
  42816c:	bl	40a320 <free@plt>
  428170:	mov	x0, x19
  428174:	bl	40b110 <safe_fclose@plt>
  428178:	cbz	x20, 428184 <link_load_one+0x1a0>
  42817c:	mov	x0, x20
  428180:	bl	429b48 <link_config_free>
  428184:	mov	w0, w24
  428188:	ldp	x20, x19, [sp, #48]
  42818c:	ldp	x22, x21, [sp, #32]
  428190:	ldp	x24, x23, [sp, #16]
  428194:	ldp	x29, x30, [sp], #64
  428198:	ret
  42819c:	mov	w24, w0
  4281a0:	mov	x23, xzr
  4281a4:	b	428168 <link_load_one+0x184>
  4281a8:	ldr	x0, [x23]
  4281ac:	bl	40a790 <internal_hashmap_size@plt>
  4281b0:	cbz	w0, 428268 <link_load_one+0x284>
  4281b4:	ldr	x0, [x20, #56]
  4281b8:	mov	x1, xzr
  4281bc:	mov	x2, xzr
  4281c0:	mov	x3, xzr
  4281c4:	bl	40b670 <condition_test_list@plt>
  4281c8:	mov	w23, w0
  4281cc:	mov	w0, #0x1                   	// #1
  4281d0:	bl	40a2c0 <log_get_max_level_realm@plt>
  4281d4:	cmp	w0, #0x7
  4281d8:	tbz	w23, #0, 428234 <link_load_one+0x250>
  4281dc:	b.lt	42820c <link_load_one+0x228>  // b.tstop
  4281e0:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  4281e4:	adrp	x4, 43d000 <worker_hash_op+0x8df8>
  4281e8:	adrp	x5, 43d000 <worker_hash_op+0x8df8>
  4281ec:	add	x2, x2, #0xd8b
  4281f0:	add	x4, x4, #0xde2
  4281f4:	add	x5, x5, #0xecd
  4281f8:	mov	w0, #0x407                 	// #1031
  4281fc:	mov	w3, #0xb0                  	// #176
  428200:	mov	w1, wzr
  428204:	mov	x6, x21
  428208:	bl	40a2d0 <log_internal_realm@plt>
  42820c:	ldr	x8, [x22]
  428210:	str	x8, [x20, #208]
  428214:	cbz	x8, 42821c <link_load_one+0x238>
  428218:	str	x20, [x8, #216]
  42821c:	mov	x23, xzr
  428220:	mov	w24, wzr
  428224:	str	xzr, [x20, #216]
  428228:	str	x20, [x22]
  42822c:	mov	x20, xzr
  428230:	b	428168 <link_load_one+0x184>
  428234:	b.lt	428070 <link_load_one+0x8c>  // b.tstop
  428238:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  42823c:	adrp	x4, 43d000 <worker_hash_op+0x8df8>
  428240:	adrp	x5, 43d000 <worker_hash_op+0x8df8>
  428244:	add	x2, x2, #0xd8b
  428248:	add	x4, x4, #0xde2
  42824c:	add	x5, x5, #0xe8f
  428250:	mov	w0, #0x407                 	// #1031
  428254:	mov	w3, #0xac                  	// #172
  428258:	mov	w1, wzr
  42825c:	mov	x6, x21
  428260:	bl	40a2d0 <log_internal_realm@plt>
  428264:	b	428070 <link_load_one+0x8c>
  428268:	ldr	x8, [x20, #16]
  42826c:	cbz	x8, 428278 <link_load_one+0x294>
  428270:	ldr	x8, [x8]
  428274:	cbnz	x8, 4281b4 <link_load_one+0x1d0>
  428278:	ldr	x8, [x20, #24]
  42827c:	cbz	x8, 428288 <link_load_one+0x2a4>
  428280:	ldr	x8, [x8]
  428284:	cbnz	x8, 4281b4 <link_load_one+0x1d0>
  428288:	ldr	x8, [x20, #32]
  42828c:	cbz	x8, 428298 <link_load_one+0x2b4>
  428290:	ldr	x8, [x8]
  428294:	cbnz	x8, 4281b4 <link_load_one+0x1d0>
  428298:	ldr	x8, [x20, #40]
  42829c:	cbz	x8, 4282a8 <link_load_one+0x2c4>
  4282a0:	ldr	x8, [x8]
  4282a4:	cbnz	x8, 4281b4 <link_load_one+0x1d0>
  4282a8:	ldr	x8, [x20, #48]
  4282ac:	cbz	x8, 4282b8 <link_load_one+0x2d4>
  4282b0:	ldr	x8, [x8]
  4282b4:	cbnz	x8, 4281b4 <link_load_one+0x1d0>
  4282b8:	ldr	x8, [x20, #56]
  4282bc:	cbnz	x8, 4281b4 <link_load_one+0x1d0>
  4282c0:	mov	w0, #0x1                   	// #1
  4282c4:	bl	40a2c0 <log_get_max_level_realm@plt>
  4282c8:	cmp	w0, #0x4
  4282cc:	b.lt	4281b4 <link_load_one+0x1d0>  // b.tstop
  4282d0:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  4282d4:	adrp	x4, 43d000 <worker_hash_op+0x8df8>
  4282d8:	adrp	x5, 43d000 <worker_hash_op+0x8df8>
  4282dc:	add	x2, x2, #0xd8b
  4282e0:	add	x4, x4, #0xde2
  4282e4:	add	x5, x5, #0xdf0
  4282e8:	mov	w0, #0x404                 	// #1028
  4282ec:	mov	w3, #0xa9                  	// #169
  4282f0:	mov	w1, wzr
  4282f4:	mov	x6, x21
  4282f8:	bl	40a2d0 <log_internal_realm@plt>
  4282fc:	b	4281b4 <link_load_one+0x1d0>
  428300:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  428304:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  428308:	adrp	x4, 43d000 <worker_hash_op+0x8df8>
  42830c:	add	x1, x1, #0xd84
  428310:	add	x2, x2, #0xd8b
  428314:	add	x4, x4, #0xda6
  428318:	mov	w0, #0x1                   	// #1
  42831c:	mov	w3, #0x79                  	// #121
  428320:	bl	40a630 <log_assert_failed_realm@plt>
  428324:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  428328:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  42832c:	adrp	x4, 43d000 <worker_hash_op+0x8df8>
  428330:	add	x1, x1, #0xdd9
  428334:	add	x2, x2, #0xd8b
  428338:	add	x4, x4, #0xda6
  42833c:	mov	w0, #0x1                   	// #1
  428340:	mov	w3, #0x7a                  	// #122
  428344:	bl	40a630 <log_assert_failed_realm@plt>

0000000000428348 <link_config_load>:
  428348:	sub	sp, sp, #0xe0
  42834c:	stp	x20, x19, [sp, #208]
  428350:	mov	x19, x0
  428354:	stp	x29, x30, [sp, #144]
  428358:	str	x25, [sp, #160]
  42835c:	stp	x24, x23, [sp, #176]
  428360:	stp	x22, x21, [sp, #192]
  428364:	add	x29, sp, #0x90
  428368:	cbz	x0, 428384 <link_config_load+0x3c>
  42836c:	ldr	x0, [x19]
  428370:	cbz	x0, 428384 <link_config_load+0x3c>
  428374:	ldr	x20, [x0, #208]
  428378:	bl	429b48 <link_config_free>
  42837c:	mov	x0, x20
  428380:	cbnz	x20, 428374 <link_config_load+0x2c>
  428384:	adrp	x0, 43e000 <worker_hash_op+0x9df8>
  428388:	add	x0, x0, #0x647
  42838c:	add	x1, x29, #0x18
  428390:	bl	40b680 <proc_cmdline_get_bool@plt>
  428394:	cmp	w0, #0x1
  428398:	b.lt	4283e0 <link_config_load+0x98>  // b.tstop
  42839c:	ldrb	w8, [x29, #24]
  4283a0:	tbnz	w8, #0, 4283e0 <link_config_load+0x98>
  4283a4:	mov	w0, #0x1                   	// #1
  4283a8:	strb	wzr, [x19, #12]
  4283ac:	bl	40a2c0 <log_get_max_level_realm@plt>
  4283b0:	cmp	w0, #0x6
  4283b4:	b.lt	4283e0 <link_config_load+0x98>  // b.tstop
  4283b8:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  4283bc:	adrp	x4, 43d000 <worker_hash_op+0x8df8>
  4283c0:	adrp	x5, 43d000 <worker_hash_op+0x8df8>
  4283c4:	add	x2, x2, #0xd8b
  4283c8:	add	x4, x4, #0xeea
  4283cc:	add	x5, x5, #0xefb
  4283d0:	mov	w0, #0x406                 	// #1030
  4283d4:	mov	w3, #0xd5                  	// #213
  4283d8:	mov	w1, wzr
  4283dc:	bl	40a2d0 <log_internal_realm@plt>
  4283e0:	adrp	x8, 46e000 <keyboard_lookup_key.wordlist+0x16bd8>
  4283e4:	add	x8, x8, #0x498
  4283e8:	ldp	q0, q1, [x8]
  4283ec:	ldr	q2, [x8, #32]
  4283f0:	add	x1, x19, #0x18
  4283f4:	sub	x0, x29, #0x30
  4283f8:	mov	w2, #0x1                   	// #1
  4283fc:	stp	q0, q1, [sp]
  428400:	str	q2, [sp, #32]
  428404:	stp	q0, q1, [x29, #-48]
  428408:	stur	q2, [x29, #-16]
  42840c:	bl	40b0f0 <paths_check_timestamp@plt>
  428410:	ldr	q0, [sp]
  428414:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  428418:	add	x1, x1, #0xfbb
  42841c:	add	x0, x29, #0x18
  428420:	str	q0, [sp, #48]
  428424:	ldr	q0, [sp, #16]
  428428:	add	x4, sp, #0x30
  42842c:	mov	x2, xzr
  428430:	mov	w3, wzr
  428434:	str	q0, [sp, #64]
  428438:	ldr	q0, [sp, #32]
  42843c:	str	q0, [sp, #80]
  428440:	bl	40b100 <conf_files_list_strv@plt>
  428444:	tbnz	w0, #31, 428470 <link_config_load+0x128>
  428448:	ldr	x22, [x29, #24]
  42844c:	cbz	x22, 4284b4 <link_config_load+0x16c>
  428450:	mov	x0, x22
  428454:	bl	40b4b0 <strv_length@plt>
  428458:	add	x8, x22, x0, lsl #3
  42845c:	sub	x9, x8, #0x8
  428460:	cmp	x9, x22
  428464:	b.cs	4284bc <link_config_load+0x174>  // b.hs, b.nlast
  428468:	mov	w24, wzr
  42846c:	b	42854c <link_config_load+0x204>
  428470:	mov	w20, w0
  428474:	mov	w0, #0x1                   	// #1
  428478:	bl	40a2c0 <log_get_max_level_realm@plt>
  42847c:	cmp	w0, #0x3
  428480:	b.lt	428538 <link_config_load+0x1f0>  // b.tstop
  428484:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  428488:	adrp	x4, 43d000 <worker_hash_op+0x8df8>
  42848c:	adrp	x5, 43d000 <worker_hash_op+0x8df8>
  428490:	add	x2, x2, #0xd8b
  428494:	add	x4, x4, #0xeea
  428498:	add	x5, x5, #0xfc1
  42849c:	mov	w0, #0x403                 	// #1027
  4284a0:	mov	w3, #0xdd                  	// #221
  4284a4:	mov	w1, w20
  4284a8:	bl	40a2d0 <log_internal_realm@plt>
  4284ac:	mov	w24, w0
  4284b0:	b	428544 <link_config_load+0x1fc>
  4284b4:	mov	w24, wzr
  4284b8:	b	428554 <link_config_load+0x20c>
  4284bc:	adrp	x20, 43d000 <worker_hash_op+0x8df8>
  4284c0:	adrp	x21, 43d000 <worker_hash_op+0x8df8>
  4284c4:	adrp	x23, 43d000 <worker_hash_op+0x8df8>
  4284c8:	sub	x25, x8, #0x10
  4284cc:	add	x20, x20, #0xd8b
  4284d0:	add	x21, x21, #0xeea
  4284d4:	add	x23, x23, #0xfe4
  4284d8:	ldr	x1, [x25, #8]
  4284dc:	mov	x0, x19
  4284e0:	bl	427fe4 <link_load_one>
  4284e4:	tbz	w0, #31, 42851c <link_config_load+0x1d4>
  4284e8:	mov	w22, w0
  4284ec:	mov	w0, #0x1                   	// #1
  4284f0:	bl	40a2c0 <log_get_max_level_realm@plt>
  4284f4:	cmp	w0, #0x3
  4284f8:	b.lt	42851c <link_config_load+0x1d4>  // b.tstop
  4284fc:	ldr	x6, [x25, #8]
  428500:	mov	w0, #0x403                 	// #1027
  428504:	mov	w3, #0xe2                  	// #226
  428508:	mov	w1, w22
  42850c:	mov	x2, x20
  428510:	mov	x4, x21
  428514:	mov	x5, x23
  428518:	bl	40a2d0 <log_internal_realm@plt>
  42851c:	ldr	x22, [x29, #24]
  428520:	mov	w24, wzr
  428524:	cbz	x22, 428548 <link_config_load+0x200>
  428528:	cmp	x25, x22
  42852c:	sub	x25, x25, #0x8
  428530:	b.cs	4284d8 <link_config_load+0x190>  // b.hs, b.nlast
  428534:	b	428548 <link_config_load+0x200>
  428538:	mov	w8, wzr
  42853c:	neg	w9, w20
  428540:	sub	w24, w8, w9, uxtb
  428544:	ldr	x22, [x29, #24]
  428548:	cbz	x22, 428554 <link_config_load+0x20c>
  42854c:	mov	x0, x22
  428550:	bl	40ae30 <strv_free@plt>
  428554:	mov	w0, w24
  428558:	ldp	x20, x19, [sp, #208]
  42855c:	ldp	x22, x21, [sp, #192]
  428560:	ldp	x24, x23, [sp, #176]
  428564:	ldr	x25, [sp, #160]
  428568:	ldp	x29, x30, [sp, #144]
  42856c:	add	sp, sp, #0xe0
  428570:	ret

0000000000428574 <link_config_should_reload>:
  428574:	sub	sp, sp, #0x40
  428578:	adrp	x8, 46e000 <keyboard_lookup_key.wordlist+0x16bd8>
  42857c:	add	x8, x8, #0x498
  428580:	ldp	q0, q1, [x8]
  428584:	ldr	q2, [x8, #32]
  428588:	add	x1, x0, #0x18
  42858c:	mov	x0, sp
  428590:	mov	w2, wzr
  428594:	stp	x29, x30, [sp, #48]
  428598:	add	x29, sp, #0x30
  42859c:	stp	q0, q1, [sp]
  4285a0:	str	q2, [sp, #32]
  4285a4:	bl	40b0f0 <paths_check_timestamp@plt>
  4285a8:	ldp	x29, x30, [sp, #48]
  4285ac:	and	w0, w0, #0x1
  4285b0:	add	sp, sp, #0x40
  4285b4:	ret

00000000004285b8 <link_config_get>:
  4285b8:	sub	sp, sp, #0xa0
  4285bc:	stp	x29, x30, [sp, #64]
  4285c0:	str	x27, [sp, #80]
  4285c4:	stp	x26, x25, [sp, #96]
  4285c8:	stp	x24, x23, [sp, #112]
  4285cc:	stp	x22, x21, [sp, #128]
  4285d0:	stp	x20, x19, [sp, #144]
  4285d4:	add	x29, sp, #0x40
  4285d8:	cbz	x0, 428800 <link_config_get+0x248>
  4285dc:	mov	x20, x1
  4285e0:	cbz	x1, 428824 <link_config_get+0x26c>
  4285e4:	mov	x19, x2
  4285e8:	cbz	x2, 428848 <link_config_get+0x290>
  4285ec:	ldr	x25, [x0]
  4285f0:	cbz	x25, 4286f0 <link_config_get+0x138>
  4285f4:	adrp	x21, 43e000 <worker_hash_op+0x9df8>
  4285f8:	adrp	x22, 43e000 <worker_hash_op+0x9df8>
  4285fc:	adrp	x26, 435000 <worker_hash_op+0xdf8>
  428600:	adrp	x27, 43e000 <worker_hash_op+0x9df8>
  428604:	adrp	x23, 43d000 <worker_hash_op+0x8df8>
  428608:	adrp	x24, 43e000 <worker_hash_op+0x9df8>
  42860c:	add	x21, x21, #0x48
  428610:	add	x22, x22, #0x4a
  428614:	add	x26, x26, #0x7f
  428618:	add	x27, x27, #0xbe
  42861c:	add	x23, x23, #0xd8b
  428620:	add	x24, x24, #0x5b
  428624:	b	428660 <link_config_get+0xa8>
  428628:	ldr	x8, [x25]
  42862c:	cmp	x6, #0x0
  428630:	csel	x5, xzr, x26, eq  // eq = none
  428634:	mov	w0, #0x4                   	// #4
  428638:	mov	w3, #0x104                 	// #260
  42863c:	mov	w1, wzr
  428640:	mov	x2, x23
  428644:	mov	x4, x24
  428648:	mov	x7, xzr
  42864c:	stp	x27, x8, [sp, #8]
  428650:	str	xzr, [sp]
  428654:	bl	40a730 <log_object_internal@plt>
  428658:	ldr	x25, [x25, #208]
  42865c:	cbz	x25, 4286f0 <link_config_get+0x138>
  428660:	ldp	x0, x1, [x25, #8]
  428664:	ldp	x2, x3, [x25, #24]
  428668:	ldp	x4, x5, [x25, #40]
  42866c:	movi	v0.2d, #0x0
  428670:	mov	x6, xzr
  428674:	mov	x7, xzr
  428678:	stur	q0, [sp, #40]
  42867c:	str	wzr, [sp, #32]
  428680:	str	q0, [sp, #16]
  428684:	stp	xzr, x20, [sp]
  428688:	bl	42e550 <net_match_config>
  42868c:	tbz	w0, #0, 428658 <link_config_get+0xa0>
  428690:	ldr	x0, [x25, #40]
  428694:	cbz	x0, 428754 <link_config_get+0x19c>
  428698:	mov	x1, x21
  42869c:	bl	40b1e0 <strv_find@plt>
  4286a0:	cbnz	x0, 428754 <link_config_get+0x19c>
  4286a4:	add	x2, x29, #0x1c
  4286a8:	mov	x0, x20
  4286ac:	mov	x1, x22
  4286b0:	str	wzr, [x29, #28]
  4286b4:	bl	42886c <link_unsigned_attribute>
  4286b8:	ldr	w8, [x29, #28]
  4286bc:	cmp	w8, #0x4
  4286c0:	b.ne	4286fc <link_config_get+0x144>  // b.any
  4286c4:	mov	w0, #0x1                   	// #1
  4286c8:	stur	xzr, [x29, #-8]
  4286cc:	bl	40a2c0 <log_get_max_level_realm@plt>
  4286d0:	cmp	w0, #0x4
  4286d4:	mov	x6, xzr
  4286d8:	b.lt	428628 <link_config_get+0x70>  // b.tstop
  4286dc:	sub	x1, x29, #0x8
  4286e0:	mov	x0, x20
  4286e4:	bl	40a780 <sd_device_get_sysname@plt>
  4286e8:	ldur	x6, [x29, #-8]
  4286ec:	b	428628 <link_config_get+0x70>
  4286f0:	mov	w0, #0xfffffffe            	// #-2
  4286f4:	str	xzr, [x19]
  4286f8:	b	4287b8 <link_config_get+0x200>
  4286fc:	cmp	w8, #0x1
  428700:	b.ne	428754 <link_config_get+0x19c>  // b.any
  428704:	mov	w0, #0x1                   	// #1
  428708:	stur	xzr, [x29, #-8]
  42870c:	bl	40a2c0 <log_get_max_level_realm@plt>
  428710:	cmp	w0, #0x4
  428714:	mov	x6, xzr
  428718:	b.ge	4287ec <link_config_get+0x234>  // b.tcont
  42871c:	ldr	x8, [x25]
  428720:	cmp	x6, #0x0
  428724:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  428728:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  42872c:	str	x8, [sp, #16]
  428730:	adrp	x8, 43e000 <worker_hash_op+0x9df8>
  428734:	csel	x5, xzr, x26, eq  // eq = none
  428738:	add	x8, x8, #0x6b
  42873c:	add	x2, x2, #0xd8b
  428740:	add	x4, x4, #0x5b
  428744:	mov	w0, #0x4                   	// #4
  428748:	mov	w3, #0xfe                  	// #254
  42874c:	str	x8, [sp, #8]
  428750:	b	4287a0 <link_config_get+0x1e8>
  428754:	mov	w0, #0x1                   	// #1
  428758:	stur	xzr, [x29, #-8]
  42875c:	bl	40a2c0 <log_get_max_level_realm@plt>
  428760:	cmp	w0, #0x7
  428764:	mov	x6, xzr
  428768:	b.ge	4287d8 <link_config_get+0x220>  // b.tcont
  42876c:	ldr	x8, [x25]
  428770:	cmp	x6, #0x0
  428774:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  428778:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  42877c:	str	x8, [sp, #16]
  428780:	adrp	x8, 43e000 <worker_hash_op+0x9df8>
  428784:	add	x8, x8, #0x106
  428788:	csel	x5, xzr, x26, eq  // eq = none
  42878c:	add	x2, x2, #0xd8b
  428790:	add	x4, x4, #0x5b
  428794:	str	x8, [sp, #8]
  428798:	mov	w0, #0x7                   	// #7
  42879c:	mov	w3, #0x10a                 	// #266
  4287a0:	mov	w1, wzr
  4287a4:	mov	x7, xzr
  4287a8:	str	xzr, [sp]
  4287ac:	bl	40a730 <log_object_internal@plt>
  4287b0:	mov	w0, wzr
  4287b4:	str	x25, [x19]
  4287b8:	ldp	x20, x19, [sp, #144]
  4287bc:	ldp	x22, x21, [sp, #128]
  4287c0:	ldp	x24, x23, [sp, #112]
  4287c4:	ldp	x26, x25, [sp, #96]
  4287c8:	ldr	x27, [sp, #80]
  4287cc:	ldp	x29, x30, [sp, #64]
  4287d0:	add	sp, sp, #0xa0
  4287d4:	ret
  4287d8:	sub	x1, x29, #0x8
  4287dc:	mov	x0, x20
  4287e0:	bl	40a780 <sd_device_get_sysname@plt>
  4287e4:	ldur	x6, [x29, #-8]
  4287e8:	b	42876c <link_config_get+0x1b4>
  4287ec:	sub	x1, x29, #0x8
  4287f0:	mov	x0, x20
  4287f4:	bl	40a780 <sd_device_get_sysname@plt>
  4287f8:	ldur	x6, [x29, #-8]
  4287fc:	b	42871c <link_config_get+0x164>
  428800:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  428804:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  428808:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  42880c:	add	x1, x1, #0xd84
  428810:	add	x2, x2, #0xd8b
  428814:	add	x4, x4, #0x4
  428818:	mov	w0, #0x1                   	// #1
  42881c:	mov	w3, #0xef                  	// #239
  428820:	bl	40a630 <log_assert_failed_realm@plt>
  428824:	adrp	x1, 439000 <worker_hash_op+0x4df8>
  428828:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  42882c:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  428830:	add	x1, x1, #0x764
  428834:	add	x2, x2, #0xd8b
  428838:	add	x4, x4, #0x4
  42883c:	mov	w0, #0x1                   	// #1
  428840:	mov	w3, #0xf0                  	// #240
  428844:	bl	40a630 <log_assert_failed_realm@plt>
  428848:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  42884c:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  428850:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  428854:	add	x1, x1, #0xfa2
  428858:	add	x2, x2, #0xd8b
  42885c:	add	x4, x4, #0x4
  428860:	mov	w0, #0x1                   	// #1
  428864:	mov	w3, #0xf1                  	// #241
  428868:	bl	40a630 <log_assert_failed_realm@plt>

000000000042886c <link_unsigned_attribute>:
  42886c:	sub	sp, sp, #0x60
  428870:	stp	x29, x30, [sp, #48]
  428874:	add	x29, sp, #0x30
  428878:	stp	x22, x21, [sp, #64]
  42887c:	mov	x21, x2
  428880:	sub	x2, x29, #0x8
  428884:	stp	x20, x19, [sp, #80]
  428888:	mov	x19, x1
  42888c:	mov	x20, x0
  428890:	bl	40ace0 <sd_device_get_sysattr_value@plt>
  428894:	tbnz	w0, #31, 42891c <link_unsigned_attribute+0xb0>
  428898:	ldur	x0, [x29, #-8]
  42889c:	mov	w1, wzr
  4288a0:	mov	x2, x21
  4288a4:	bl	40a2e0 <safe_atou_full@plt>
  4288a8:	tbnz	w0, #31, 428974 <link_unsigned_attribute+0x108>
  4288ac:	stur	xzr, [x29, #-16]
  4288b0:	cbz	x20, 4288c4 <link_unsigned_attribute+0x58>
  4288b4:	mov	w0, #0x1                   	// #1
  4288b8:	bl	40a2c0 <log_get_max_level_realm@plt>
  4288bc:	cmp	w0, #0x7
  4288c0:	b.ge	4289f4 <link_unsigned_attribute+0x188>  // b.tcont
  4288c4:	mov	x6, xzr
  4288c8:	ldr	w8, [x21]
  4288cc:	adrp	x9, 435000 <worker_hash_op+0xdf8>
  4288d0:	add	x9, x9, #0x7f
  4288d4:	cmp	x6, #0x0
  4288d8:	str	w8, [sp, #24]
  4288dc:	adrp	x8, 43e000 <worker_hash_op+0x9df8>
  4288e0:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  4288e4:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  4288e8:	csel	x5, xzr, x9, eq  // eq = none
  4288ec:	add	x8, x8, #0x69e
  4288f0:	add	x2, x2, #0xd8b
  4288f4:	add	x4, x4, #0x653
  4288f8:	mov	w0, #0x7                   	// #7
  4288fc:	mov	w3, #0xc8                  	// #200
  428900:	mov	w1, wzr
  428904:	mov	x7, xzr
  428908:	stp	x8, x19, [sp, #8]
  42890c:	str	xzr, [sp]
  428910:	bl	40a730 <log_object_internal@plt>
  428914:	mov	w0, wzr
  428918:	b	4289e0 <link_unsigned_attribute+0x174>
  42891c:	mov	w22, w0
  428920:	stur	xzr, [x29, #-16]
  428924:	cbz	x20, 428938 <link_unsigned_attribute+0xcc>
  428928:	mov	w0, #0x1                   	// #1
  42892c:	bl	40a2c0 <log_get_max_level_realm@plt>
  428930:	cmp	w0, #0x7
  428934:	b.ge	428a08 <link_unsigned_attribute+0x19c>  // b.tcont
  428938:	mov	x6, xzr
  42893c:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  428940:	add	x8, x8, #0x7f
  428944:	cmp	x6, #0x0
  428948:	csel	x5, xzr, x8, eq  // eq = none
  42894c:	adrp	x8, 43e000 <worker_hash_op+0x9df8>
  428950:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  428954:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  428958:	add	x8, x8, #0x66b
  42895c:	add	x2, x2, #0xd8b
  428960:	add	x4, x4, #0x653
  428964:	mov	w0, #0x7                   	// #7
  428968:	mov	w3, #0xc2                  	// #194
  42896c:	stp	x8, x19, [sp, #8]
  428970:	b	4289d0 <link_unsigned_attribute+0x164>
  428974:	mov	w22, w0
  428978:	stur	xzr, [x29, #-16]
  42897c:	cbz	x20, 428990 <link_unsigned_attribute+0x124>
  428980:	mov	w0, #0x1                   	// #1
  428984:	bl	40a2c0 <log_get_max_level_realm@plt>
  428988:	cmp	w0, #0x4
  42898c:	b.ge	428a1c <link_unsigned_attribute+0x1b0>  // b.tcont
  428990:	mov	x6, xzr
  428994:	ldur	x8, [x29, #-8]
  428998:	adrp	x9, 435000 <worker_hash_op+0xdf8>
  42899c:	add	x9, x9, #0x7f
  4289a0:	cmp	x6, #0x0
  4289a4:	stp	x19, x8, [sp, #16]
  4289a8:	adrp	x8, 43e000 <worker_hash_op+0x9df8>
  4289ac:	add	x8, x8, #0x682
  4289b0:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  4289b4:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  4289b8:	csel	x5, xzr, x9, eq  // eq = none
  4289bc:	add	x2, x2, #0xd8b
  4289c0:	add	x4, x4, #0x653
  4289c4:	str	x8, [sp, #8]
  4289c8:	mov	w0, #0x4                   	// #4
  4289cc:	mov	w3, #0xc6                  	// #198
  4289d0:	mov	w1, w22
  4289d4:	mov	x7, xzr
  4289d8:	str	xzr, [sp]
  4289dc:	bl	40a730 <log_object_internal@plt>
  4289e0:	ldp	x20, x19, [sp, #80]
  4289e4:	ldp	x22, x21, [sp, #64]
  4289e8:	ldp	x29, x30, [sp, #48]
  4289ec:	add	sp, sp, #0x60
  4289f0:	ret
  4289f4:	sub	x1, x29, #0x10
  4289f8:	mov	x0, x20
  4289fc:	bl	40a780 <sd_device_get_sysname@plt>
  428a00:	ldur	x6, [x29, #-16]
  428a04:	b	4288c8 <link_unsigned_attribute+0x5c>
  428a08:	sub	x1, x29, #0x10
  428a0c:	mov	x0, x20
  428a10:	bl	40a780 <sd_device_get_sysname@plt>
  428a14:	ldur	x6, [x29, #-16]
  428a18:	b	42893c <link_unsigned_attribute+0xd0>
  428a1c:	sub	x1, x29, #0x10
  428a20:	mov	x0, x20
  428a24:	bl	40a780 <sd_device_get_sysname@plt>
  428a28:	ldur	x6, [x29, #-16]
  428a2c:	b	428994 <link_unsigned_attribute+0x128>

0000000000428a30 <link_config_apply>:
  428a30:	sub	sp, sp, #0xb0
  428a34:	stp	x29, x30, [sp, #80]
  428a38:	add	x29, sp, #0x50
  428a3c:	stp	x28, x27, [sp, #96]
  428a40:	stp	x26, x25, [sp, #112]
  428a44:	stp	x24, x23, [sp, #128]
  428a48:	stp	x22, x21, [sp, #144]
  428a4c:	stp	x20, x19, [sp, #160]
  428a50:	stur	xzr, [x29, #-32]
  428a54:	str	wzr, [sp, #36]
  428a58:	cbz	x0, 42966c <link_config_apply+0xc3c>
  428a5c:	mov	x20, x1
  428a60:	cbz	x1, 429690 <link_config_apply+0xc60>
  428a64:	mov	x22, x2
  428a68:	cbz	x2, 4296b4 <link_config_apply+0xc84>
  428a6c:	mov	x19, x3
  428a70:	cbz	x3, 4296d8 <link_config_apply+0xca8>
  428a74:	mov	x21, x0
  428a78:	add	x1, sp, #0x28
  428a7c:	mov	x0, x22
  428a80:	bl	40a780 <sd_device_get_sysname@plt>
  428a84:	tbnz	w0, #31, 429410 <link_config_apply+0x9e0>
  428a88:	ldr	x1, [sp, #40]
  428a8c:	ldr	x4, [x20, #120]
  428a90:	ldp	w5, w2, [x20, #128]
  428a94:	ldr	w6, [x20, #152]
  428a98:	add	x23, x21, #0x8
  428a9c:	add	x25, x20, #0x88
  428aa0:	mov	x0, x23
  428aa4:	mov	x3, x25
  428aa8:	bl	40b690 <ethtool_set_glinksettings@plt>
  428aac:	tbnz	w0, #31, 428d04 <link_config_apply+0x2d4>
  428ab0:	ldr	x1, [sp, #40]
  428ab4:	ldr	w2, [x20, #148]
  428ab8:	mov	x0, x23
  428abc:	bl	40b6a0 <ethtool_set_wol@plt>
  428ac0:	tbz	w0, #31, 428b14 <link_config_apply+0xe4>
  428ac4:	mov	w24, w0
  428ac8:	mov	w0, #0x1                   	// #1
  428acc:	bl	40a2c0 <log_get_max_level_realm@plt>
  428ad0:	cmp	w0, #0x4
  428ad4:	b.lt	428b14 <link_config_apply+0xe4>  // b.tstop
  428ad8:	ldr	w0, [x20, #148]
  428adc:	ldr	x25, [sp, #40]
  428ae0:	bl	40b6b0 <wol_to_string@plt>
  428ae4:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  428ae8:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  428aec:	adrp	x5, 43e000 <worker_hash_op+0x9df8>
  428af0:	mov	x7, x0
  428af4:	add	x2, x2, #0xd8b
  428af8:	add	x4, x4, #0x174
  428afc:	add	x5, x5, #0x217
  428b00:	mov	w0, #0x404                 	// #1028
  428b04:	mov	w3, #0x174                 	// #372
  428b08:	mov	w1, w24
  428b0c:	mov	x6, x25
  428b10:	bl	40a2d0 <log_internal_realm@plt>
  428b14:	ldr	x1, [sp, #40]
  428b18:	add	x2, x20, #0x9c
  428b1c:	mov	x0, x23
  428b20:	bl	40b6c0 <ethtool_set_features@plt>
  428b24:	tbz	w0, #31, 428b68 <link_config_apply+0x138>
  428b28:	mov	w24, w0
  428b2c:	mov	w0, #0x1                   	// #1
  428b30:	bl	40a2c0 <log_get_max_level_realm@plt>
  428b34:	cmp	w0, #0x4
  428b38:	b.lt	428b68 <link_config_apply+0x138>  // b.tstop
  428b3c:	ldr	x6, [sp, #40]
  428b40:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  428b44:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  428b48:	adrp	x5, 43e000 <worker_hash_op+0x9df8>
  428b4c:	add	x2, x2, #0xd8b
  428b50:	add	x4, x4, #0x174
  428b54:	add	x5, x5, #0x23f
  428b58:	mov	w0, #0x404                 	// #1028
  428b5c:	mov	w3, #0x178                 	// #376
  428b60:	mov	w1, w24
  428b64:	bl	40a2d0 <log_internal_realm@plt>
  428b68:	ldrb	w8, [x20, #192]
  428b6c:	cbnz	w8, 428b88 <link_config_apply+0x158>
  428b70:	ldrb	w8, [x20, #193]
  428b74:	cbnz	w8, 428b88 <link_config_apply+0x158>
  428b78:	ldrb	w8, [x20, #194]
  428b7c:	cbnz	w8, 428b88 <link_config_apply+0x158>
  428b80:	ldrb	w8, [x20, #195]
  428b84:	cbz	w8, 428bdc <link_config_apply+0x1ac>
  428b88:	ldr	x1, [sp, #40]
  428b8c:	add	x2, x20, #0xb0
  428b90:	mov	x0, x23
  428b94:	bl	40b6d0 <ethtool_set_channels@plt>
  428b98:	tbz	w0, #31, 428bdc <link_config_apply+0x1ac>
  428b9c:	mov	w24, w0
  428ba0:	mov	w0, #0x1                   	// #1
  428ba4:	bl	40a2c0 <log_get_max_level_realm@plt>
  428ba8:	cmp	w0, #0x4
  428bac:	b.lt	428bdc <link_config_apply+0x1ac>  // b.tstop
  428bb0:	ldr	x6, [sp, #40]
  428bb4:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  428bb8:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  428bbc:	adrp	x5, 43e000 <worker_hash_op+0x9df8>
  428bc0:	add	x2, x2, #0xd8b
  428bc4:	add	x4, x4, #0x174
  428bc8:	add	x5, x5, #0x268
  428bcc:	mov	w0, #0x404                 	// #1028
  428bd0:	mov	w3, #0x17d                 	// #381
  428bd4:	mov	w1, w24
  428bd8:	bl	40a2d0 <log_internal_realm@plt>
  428bdc:	ldrb	w8, [x20, #204]
  428be0:	cbnz	w8, 428bec <link_config_apply+0x1bc>
  428be4:	ldrb	w8, [x20, #205]
  428be8:	cbz	w8, 428c40 <link_config_apply+0x210>
  428bec:	ldr	x1, [sp, #40]
  428bf0:	add	x2, x20, #0xc4
  428bf4:	mov	x0, x23
  428bf8:	bl	40b6e0 <ethtool_set_nic_buffer_size@plt>
  428bfc:	tbz	w0, #31, 428c40 <link_config_apply+0x210>
  428c00:	mov	w23, w0
  428c04:	mov	w0, #0x1                   	// #1
  428c08:	bl	40a2c0 <log_get_max_level_realm@plt>
  428c0c:	cmp	w0, #0x4
  428c10:	b.lt	428c40 <link_config_apply+0x210>  // b.tstop
  428c14:	ldr	x6, [sp, #40]
  428c18:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  428c1c:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  428c20:	adrp	x5, 43e000 <worker_hash_op+0x9df8>
  428c24:	add	x2, x2, #0xd8b
  428c28:	add	x4, x4, #0x174
  428c2c:	add	x5, x5, #0x289
  428c30:	mov	w0, #0x404                 	// #1028
  428c34:	mov	w3, #0x183                 	// #387
  428c38:	mov	w1, w23
  428c3c:	bl	40a2d0 <log_internal_realm@plt>
  428c40:	add	x1, sp, #0x20
  428c44:	mov	x0, x22
  428c48:	bl	40aa70 <sd_device_get_ifindex@plt>
  428c4c:	tbnz	w0, #31, 428e98 <link_config_apply+0x468>
  428c50:	adrp	x1, 43e000 <worker_hash_op+0x9df8>
  428c54:	add	x1, x1, #0x4a
  428c58:	add	x2, sp, #0x24
  428c5c:	mov	x0, x22
  428c60:	bl	42886c <link_unsigned_attribute>
  428c64:	ldr	w8, [sp, #36]
  428c68:	sub	w8, w8, #0x3
  428c6c:	cmp	w8, #0x1
  428c70:	b.hi	428cd0 <link_config_apply+0x2a0>  // b.pmore
  428c74:	bl	429be8 <naming_scheme>
  428c78:	ldrb	w8, [x0, #8]
  428c7c:	tbnz	w8, #4, 428cd0 <link_config_apply+0x2a0>
  428c80:	mov	w0, #0x1                   	// #1
  428c84:	stur	xzr, [x29, #-16]
  428c88:	bl	40a2c0 <log_get_max_level_realm@plt>
  428c8c:	cmp	w0, #0x7
  428c90:	mov	x6, xzr
  428c94:	b.ge	429574 <link_config_apply+0xb44>  // b.tcont
  428c98:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  428c9c:	add	x8, x8, #0x7f
  428ca0:	cmp	x6, #0x0
  428ca4:	csel	x5, xzr, x8, eq  // eq = none
  428ca8:	adrp	x8, 43e000 <worker_hash_op+0x9df8>
  428cac:	add	x8, x8, #0x2c8
  428cb0:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  428cb4:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  428cb8:	add	x2, x2, #0xd8b
  428cbc:	add	x4, x4, #0x174
  428cc0:	str	x8, [sp, #8]
  428cc4:	mov	w0, #0x7                   	// #7
  428cc8:	mov	w3, #0x18e                 	// #398
  428ccc:	b	4290b4 <link_config_apply+0x684>
  428cd0:	ldrb	w8, [x21, #12]
  428cd4:	cbz	w8, 428ef8 <link_config_apply+0x4c8>
  428cd8:	ldr	x23, [x20, #88]
  428cdc:	cbz	x23, 428ef8 <link_config_apply+0x4c8>
  428ce0:	ldur	x25, [x29, #-32]
  428ce4:	cbnz	x25, 428f00 <link_config_apply+0x4d0>
  428ce8:	adrp	x24, 442000 <hash_key_name.asso_values+0x4>
  428cec:	adrp	x26, 43c000 <worker_hash_op+0x7df8>
  428cf0:	adrp	x27, 43c000 <worker_hash_op+0x7df8>
  428cf4:	add	x24, x24, #0x21a
  428cf8:	add	x26, x26, #0xdbd
  428cfc:	add	x27, x27, #0xda8
  428d00:	b	428f80 <link_config_apply+0x550>
  428d04:	ldr	w26, [x20, #152]
  428d08:	mov	w24, w0
  428d0c:	cmn	w26, #0x1
  428d10:	b.eq	428d5c <link_config_apply+0x32c>  // b.none
  428d14:	mov	w0, #0x1                   	// #1
  428d18:	bl	40a2c0 <log_get_max_level_realm@plt>
  428d1c:	cmp	w0, #0x4
  428d20:	b.lt	428d5c <link_config_apply+0x32c>  // b.tstop
  428d24:	mov	w0, w26
  428d28:	bl	40b6f0 <port_to_string@plt>
  428d2c:	ldr	x7, [sp, #40]
  428d30:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  428d34:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  428d38:	adrp	x5, 43e000 <worker_hash_op+0x9df8>
  428d3c:	mov	x6, x0
  428d40:	add	x2, x2, #0xd8b
  428d44:	add	x4, x4, #0x174
  428d48:	add	x5, x5, #0x186
  428d4c:	mov	w0, #0x404                 	// #1028
  428d50:	mov	w3, #0x15f                 	// #351
  428d54:	mov	w1, w24
  428d58:	bl	40a2d0 <log_internal_realm@plt>
  428d5c:	mov	w1, #0xc                   	// #12
  428d60:	mov	x0, x25
  428d64:	bl	40b700 <memeqzero@plt>
  428d68:	tbnz	w0, #0, 428da4 <link_config_apply+0x374>
  428d6c:	mov	w0, #0x1                   	// #1
  428d70:	bl	40a2c0 <log_get_max_level_realm@plt>
  428d74:	cmp	w0, #0x4
  428d78:	b.lt	428da4 <link_config_apply+0x374>  // b.tstop
  428d7c:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  428d80:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  428d84:	adrp	x5, 43e000 <worker_hash_op+0x9df8>
  428d88:	add	x2, x2, #0xd8b
  428d8c:	add	x4, x4, #0x174
  428d90:	add	x5, x5, #0x1a8
  428d94:	mov	w0, #0x404                 	// #1028
  428d98:	mov	w3, #0x162                 	// #354
  428d9c:	mov	w1, w24
  428da0:	bl	40a2d0 <log_internal_realm@plt>
  428da4:	ldr	x8, [x20, #120]
  428da8:	cbz	x8, 428e3c <link_config_apply+0x40c>
  428dac:	mov	x9, #0x34db                	// #13531
  428db0:	movk	x9, #0xd7b6, lsl #16
  428db4:	movk	x9, #0xde82, lsl #32
  428db8:	movk	x9, #0x431b, lsl #48
  428dbc:	mov	w10, #0x4240                	// #16960
  428dc0:	umulh	x9, x8, x9
  428dc4:	movk	w10, #0xf, lsl #16
  428dc8:	lsr	x9, x9, #18
  428dcc:	msub	x8, x9, x10, x8
  428dd0:	cmp	x8, #0x0
  428dd4:	cinc	w25, w9, ne  // ne = any
  428dd8:	cmn	w24, #0x5f
  428ddc:	b.ne	428e3c <link_config_apply+0x40c>  // b.any
  428de0:	ldr	x1, [sp, #40]
  428de4:	ldr	w3, [x20, #128]
  428de8:	mov	x0, x23
  428dec:	mov	w2, w25
  428df0:	bl	40b710 <ethtool_set_speed@plt>
  428df4:	mov	w24, w0
  428df8:	tbz	w0, #31, 428e3c <link_config_apply+0x40c>
  428dfc:	mov	w0, #0x1                   	// #1
  428e00:	bl	40a2c0 <log_get_max_level_realm@plt>
  428e04:	cmp	w0, #0x4
  428e08:	b.lt	428e3c <link_config_apply+0x40c>  // b.tstop
  428e0c:	ldr	x6, [sp, #40]
  428e10:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  428e14:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  428e18:	adrp	x5, 43e000 <worker_hash_op+0x9df8>
  428e1c:	add	x2, x2, #0xd8b
  428e20:	add	x4, x4, #0x174
  428e24:	add	x5, x5, #0x1c9
  428e28:	mov	w0, #0x404                 	// #1028
  428e2c:	mov	w3, #0x169                 	// #361
  428e30:	mov	w1, w24
  428e34:	mov	w7, w25
  428e38:	bl	40a2d0 <log_internal_realm@plt>
  428e3c:	ldr	w25, [x20, #128]
  428e40:	cmn	w25, #0x1
  428e44:	b.eq	428ab0 <link_config_apply+0x80>  // b.none
  428e48:	mov	w0, #0x1                   	// #1
  428e4c:	bl	40a2c0 <log_get_max_level_realm@plt>
  428e50:	cmp	w0, #0x4
  428e54:	b.lt	428ab0 <link_config_apply+0x80>  // b.tstop
  428e58:	ldr	x26, [sp, #40]
  428e5c:	mov	w0, w25
  428e60:	bl	40b720 <duplex_to_string@plt>
  428e64:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  428e68:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  428e6c:	adrp	x5, 43e000 <worker_hash_op+0x9df8>
  428e70:	mov	x7, x0
  428e74:	add	x2, x2, #0xd8b
  428e78:	add	x4, x4, #0x174
  428e7c:	add	x5, x5, #0x1f2
  428e80:	mov	w0, #0x404                 	// #1028
  428e84:	mov	w3, #0x16e                 	// #366
  428e88:	mov	w1, w24
  428e8c:	mov	x6, x26
  428e90:	bl	40a2d0 <log_internal_realm@plt>
  428e94:	b	428ab0 <link_config_apply+0x80>
  428e98:	mov	w23, w0
  428e9c:	mov	w0, #0x1                   	// #1
  428ea0:	stur	xzr, [x29, #-16]
  428ea4:	bl	40a2c0 <log_get_max_level_realm@plt>
  428ea8:	cmp	w0, #0x4
  428eac:	mov	x6, xzr
  428eb0:	b.ge	429548 <link_config_apply+0xb18>  // b.tcont
  428eb4:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  428eb8:	add	x8, x8, #0x7f
  428ebc:	cmp	x6, #0x0
  428ec0:	csel	x5, xzr, x8, eq  // eq = none
  428ec4:	adrp	x8, 43e000 <worker_hash_op+0x9df8>
  428ec8:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  428ecc:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  428ed0:	add	x8, x8, #0x2ad
  428ed4:	add	x2, x2, #0xd8b
  428ed8:	add	x4, x4, #0x174
  428edc:	mov	w0, #0x4                   	// #4
  428ee0:	mov	w3, #0x188                 	// #392
  428ee4:	mov	w1, w23
  428ee8:	mov	x7, xzr
  428eec:	stp	xzr, x8, [sp]
  428ef0:	bl	40a730 <log_object_internal@plt>
  428ef4:	b	429410 <link_config_apply+0x9e0>
  428ef8:	ldur	x25, [x29, #-32]
  428efc:	cbz	x25, 42900c <link_config_apply+0x5dc>
  428f00:	mov	w0, #0x1                   	// #1
  428f04:	stur	xzr, [x29, #-16]
  428f08:	bl	40a2c0 <log_get_max_level_realm@plt>
  428f0c:	cmp	w0, #0x7
  428f10:	mov	x6, xzr
  428f14:	b.ge	42955c <link_config_apply+0xb2c>  // b.tcont
  428f18:	adrp	x8, 46e000 <keyboard_lookup_key.wordlist+0x16bd8>
  428f1c:	add	x8, x8, #0x4e0
  428f20:	ldr	x8, [x8, w28, uxtw #3]
  428f24:	adrp	x9, 435000 <worker_hash_op+0xdf8>
  428f28:	add	x9, x9, #0x7f
  428f2c:	cmp	x6, #0x0
  428f30:	stp	x8, x25, [sp, #16]
  428f34:	adrp	x8, 43e000 <worker_hash_op+0x9df8>
  428f38:	add	x8, x8, #0x387
  428f3c:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  428f40:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  428f44:	csel	x5, xzr, x9, eq  // eq = none
  428f48:	add	x2, x2, #0xd8b
  428f4c:	add	x4, x4, #0x174
  428f50:	str	x8, [sp, #8]
  428f54:	mov	w0, #0x7                   	// #7
  428f58:	mov	w3, #0x1bb                 	// #443
  428f5c:	b	4290b4 <link_config_apply+0x684>
  428f60:	adrp	x1, 43c000 <worker_hash_op+0x7df8>
  428f64:	sub	x2, x29, #0x20
  428f68:	mov	x0, x22
  428f6c:	add	x1, x1, #0xddf
  428f70:	bl	40aa50 <sd_device_get_property_value@plt>
  428f74:	ldur	x25, [x29, #-32]
  428f78:	add	x23, x23, #0x4
  428f7c:	cbnz	x25, 428f00 <link_config_apply+0x4d0>
  428f80:	ldr	w28, [x23]
  428f84:	add	w8, w28, #0x1
  428f88:	cmp	w8, #0x7
  428f8c:	b.hi	4296fc <link_config_apply+0xccc>  // b.pmore
  428f90:	adr	x9, 428f60 <link_config_apply+0x530>
  428f94:	ldrb	w10, [x24, x8]
  428f98:	add	x9, x9, x10, lsl #2
  428f9c:	br	x9
  428fa0:	ldr	w8, [sp, #36]
  428fa4:	cmp	w8, #0x2
  428fa8:	b.ne	428f74 <link_config_apply+0x544>  // b.any
  428fac:	b	4294f0 <link_config_apply+0xac0>
  428fb0:	ldr	w8, [sp, #36]
  428fb4:	sub	w8, w8, #0x3
  428fb8:	cmp	w8, #0x1
  428fbc:	b.hi	428f74 <link_config_apply+0x544>  // b.pmore
  428fc0:	b	429498 <link_config_apply+0xa68>
  428fc4:	adrp	x1, 43e000 <worker_hash_op+0x9df8>
  428fc8:	sub	x2, x29, #0x20
  428fcc:	mov	x0, x22
  428fd0:	add	x1, x1, #0x35e
  428fd4:	b	428f70 <link_config_apply+0x540>
  428fd8:	sub	x2, x29, #0x20
  428fdc:	mov	x0, x22
  428fe0:	mov	x1, x27
  428fe4:	b	428f70 <link_config_apply+0x540>
  428fe8:	adrp	x1, 43c000 <worker_hash_op+0x7df8>
  428fec:	sub	x2, x29, #0x20
  428ff0:	mov	x0, x22
  428ff4:	add	x1, x1, #0xdce
  428ff8:	b	428f70 <link_config_apply+0x540>
  428ffc:	sub	x2, x29, #0x20
  429000:	mov	x0, x22
  429004:	mov	x1, x26
  429008:	b	428f70 <link_config_apply+0x540>
  42900c:	ldr	x23, [x20, #96]
  429010:	cbz	x23, 429068 <link_config_apply+0x638>
  429014:	mov	w0, #0x1                   	// #1
  429018:	stur	x23, [x29, #-32]
  42901c:	stur	xzr, [x29, #-16]
  429020:	bl	40a2c0 <log_get_max_level_realm@plt>
  429024:	cmp	w0, #0x7
  429028:	mov	x6, xzr
  42902c:	b.ge	429588 <link_config_apply+0xb58>  // b.tcont
  429030:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  429034:	add	x8, x8, #0x7f
  429038:	cmp	x6, #0x0
  42903c:	csel	x5, xzr, x8, eq  // eq = none
  429040:	adrp	x8, 43e000 <worker_hash_op+0x9df8>
  429044:	add	x8, x8, #0x3a0
  429048:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  42904c:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  429050:	add	x2, x2, #0xd8b
  429054:	add	x4, x4, #0x174
  429058:	stp	x8, x23, [sp, #8]
  42905c:	mov	w0, #0x7                   	// #7
  429060:	mov	w3, #0x1be                 	// #446
  429064:	b	4290b4 <link_config_apply+0x684>
  429068:	mov	w0, #0x1                   	// #1
  42906c:	stur	xzr, [x29, #-16]
  429070:	bl	40a2c0 <log_get_max_level_realm@plt>
  429074:	cmp	w0, #0x7
  429078:	mov	x6, xzr
  42907c:	b.ge	4295a0 <link_config_apply+0xb70>  // b.tcont
  429080:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  429084:	add	x8, x8, #0x7f
  429088:	cmp	x6, #0x0
  42908c:	csel	x5, xzr, x8, eq  // eq = none
  429090:	adrp	x8, 43e000 <worker_hash_op+0x9df8>
  429094:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  429098:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  42909c:	add	x8, x8, #0x3d7
  4290a0:	add	x2, x2, #0xd8b
  4290a4:	add	x4, x4, #0x174
  4290a8:	mov	w0, #0x7                   	// #7
  4290ac:	mov	w3, #0x1c0                 	// #448
  4290b0:	str	x8, [sp, #8]
  4290b4:	mov	w1, wzr
  4290b8:	mov	x7, xzr
  4290bc:	str	xzr, [sp]
  4290c0:	bl	40a730 <log_object_internal@plt>
  4290c4:	ldr	w23, [x20, #80]
  4290c8:	cmp	w23, #0x1
  4290cc:	b.hi	429150 <link_config_apply+0x720>  // b.pmore
  4290d0:	adrp	x1, 43c000 <worker_hash_op+0x7df8>
  4290d4:	add	x1, x1, #0xe0f
  4290d8:	sub	x2, x29, #0x4
  4290dc:	mov	x0, x22
  4290e0:	bl	42886c <link_unsigned_attribute>
  4290e4:	tbnz	w0, #31, 4292f8 <link_config_apply+0x8c8>
  4290e8:	ldur	w24, [x29, #-4]
  4290ec:	cmp	w24, #0x2
  4290f0:	b.cc	429158 <link_config_apply+0x728>  // b.lo, b.ul, b.last
  4290f4:	b.eq	4291d0 <link_config_apply+0x7a0>  // b.none
  4290f8:	cmp	w24, #0x3
  4290fc:	b.ne	429290 <link_config_apply+0x860>  // b.any
  429100:	mov	w0, #0x1                   	// #1
  429104:	stur	xzr, [x29, #-16]
  429108:	bl	40a2c0 <log_get_max_level_realm@plt>
  42910c:	cmp	w0, #0x7
  429110:	mov	x6, xzr
  429114:	b.ge	4295b4 <link_config_apply+0xb84>  // b.tcont
  429118:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  42911c:	add	x8, x8, #0x7f
  429120:	cmp	x6, #0x0
  429124:	csel	x5, xzr, x8, eq  // eq = none
  429128:	adrp	x8, 43e000 <worker_hash_op+0x9df8>
  42912c:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  429130:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  429134:	add	x8, x8, #0x6b7
  429138:	add	x2, x2, #0xd8b
  42913c:	add	x4, x4, #0x6af
  429140:	mov	w0, #0x7                   	// #7
  429144:	mov	w3, #0x121                 	// #289
  429148:	str	x8, [sp, #8]
  42914c:	b	4292e0 <link_config_apply+0x8b0>
  429150:	ldr	x3, [x20, #72]
  429154:	b	429398 <link_config_apply+0x968>
  429158:	cmp	w23, #0x1
  42915c:	cset	w8, eq  // eq = none
  429160:	cmp	w24, #0x1
  429164:	cset	w9, ne  // ne = any
  429168:	cmp	w8, w9
  42916c:	b.eq	429220 <link_config_apply+0x7f0>  // b.none
  429170:	mov	w0, #0x1                   	// #1
  429174:	stur	xzr, [x29, #-16]
  429178:	bl	40a2c0 <log_get_max_level_realm@plt>
  42917c:	cmp	w0, #0x7
  429180:	mov	x6, xzr
  429184:	b.ge	4295c8 <link_config_apply+0xb98>  // b.tcont
  429188:	adrp	x8, 46e000 <keyboard_lookup_key.wordlist+0x16bd8>
  42918c:	add	x8, x8, #0x4c8
  429190:	ldr	x8, [x8, x23, lsl #3]
  429194:	adrp	x9, 435000 <worker_hash_op+0xdf8>
  429198:	add	x9, x9, #0x7f
  42919c:	cmp	x6, #0x0
  4291a0:	str	x8, [sp, #16]
  4291a4:	adrp	x8, 43e000 <worker_hash_op+0x9df8>
  4291a8:	add	x8, x8, #0x73e
  4291ac:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  4291b0:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  4291b4:	csel	x5, xzr, x9, eq  // eq = none
  4291b8:	add	x2, x2, #0xd8b
  4291bc:	add	x4, x4, #0x6af
  4291c0:	str	x8, [sp, #8]
  4291c4:	mov	w0, #0x7                   	// #7
  4291c8:	mov	w3, #0x12d                 	// #301
  4291cc:	b	4292e0 <link_config_apply+0x8b0>
  4291d0:	mov	w0, #0x1                   	// #1
  4291d4:	stur	xzr, [x29, #-16]
  4291d8:	bl	40a2c0 <log_get_max_level_realm@plt>
  4291dc:	cmp	w0, #0x7
  4291e0:	mov	x6, xzr
  4291e4:	b.ge	4295dc <link_config_apply+0xbac>  // b.tcont
  4291e8:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  4291ec:	add	x8, x8, #0x7f
  4291f0:	cmp	x6, #0x0
  4291f4:	csel	x5, xzr, x8, eq  // eq = none
  4291f8:	adrp	x8, 43e000 <worker_hash_op+0x9df8>
  4291fc:	add	x8, x8, #0x6e2
  429200:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  429204:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  429208:	add	x2, x2, #0xd8b
  42920c:	add	x4, x4, #0x6af
  429210:	str	x8, [sp, #8]
  429214:	mov	w0, #0x7                   	// #7
  429218:	mov	w3, #0x123                 	// #291
  42921c:	b	4292e0 <link_config_apply+0x8b0>
  429220:	cmp	w23, #0x1
  429224:	b.ne	429300 <link_config_apply+0x8d0>  // b.any
  429228:	mov	w0, #0x1                   	// #1
  42922c:	stur	xzr, [x29, #-16]
  429230:	bl	40a2c0 <log_get_max_level_realm@plt>
  429234:	cmp	w0, #0x7
  429238:	mov	x6, xzr
  42923c:	b.ge	429608 <link_config_apply+0xbd8>  // b.tcont
  429240:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  429244:	add	x8, x8, #0x7f
  429248:	cmp	x6, #0x0
  42924c:	csel	x5, xzr, x8, eq  // eq = none
  429250:	adrp	x8, 43e000 <worker_hash_op+0x9df8>
  429254:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  429258:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  42925c:	add	x8, x8, #0x76c
  429260:	add	x2, x2, #0xd8b
  429264:	add	x4, x4, #0x6af
  429268:	mov	w0, #0x7                   	// #7
  42926c:	mov	w3, #0x130                 	// #304
  429270:	mov	w1, wzr
  429274:	mov	x7, xzr
  429278:	stp	xzr, x8, [sp]
  42927c:	bl	40a730 <log_object_internal@plt>
  429280:	sub	x0, x29, #0x18
  429284:	mov	w1, #0x6                   	// #6
  429288:	bl	40b730 <random_bytes@plt>
  42928c:	b	429384 <link_config_apply+0x954>
  429290:	mov	w0, #0x1                   	// #1
  429294:	stur	xzr, [x29, #-16]
  429298:	bl	40a2c0 <log_get_max_level_realm@plt>
  42929c:	cmp	w0, #0x4
  4292a0:	b.ge	4295f0 <link_config_apply+0xbc0>  // b.tcont
  4292a4:	mov	x6, xzr
  4292a8:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  4292ac:	add	x8, x8, #0x7f
  4292b0:	cmp	x6, #0x0
  4292b4:	csel	x5, xzr, x8, eq  // eq = none
  4292b8:	adrp	x8, 43e000 <worker_hash_op+0x9df8>
  4292bc:	add	x8, x8, #0x718
  4292c0:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  4292c4:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  4292c8:	str	w24, [sp, #16]
  4292cc:	add	x2, x2, #0xd8b
  4292d0:	add	x4, x4, #0x6af
  4292d4:	str	x8, [sp, #8]
  4292d8:	mov	w0, #0x4                   	// #4
  4292dc:	mov	w3, #0x128                 	// #296
  4292e0:	mov	w1, wzr
  4292e4:	str	xzr, [sp]
  4292e8:	mov	x7, xzr
  4292ec:	bl	40a730 <log_object_internal@plt>
  4292f0:	cmp	w0, #0x1
  4292f4:	b.ge	429394 <link_config_apply+0x964>  // b.tcont
  4292f8:	mov	x3, xzr
  4292fc:	b	429398 <link_config_apply+0x968>
  429300:	bl	429be8 <naming_scheme>
  429304:	ldr	w8, [x0, #8]
  429308:	sub	x2, x29, #0x10
  42930c:	mov	x0, x22
  429310:	ubfx	w1, w8, #5, #1
  429314:	bl	42e2f0 <net_get_unique_predictable_data>
  429318:	tbnz	w0, #31, 429430 <link_config_apply+0xa00>
  42931c:	mov	w0, #0x1                   	// #1
  429320:	stur	xzr, [x29, #-24]
  429324:	bl	40a2c0 <log_get_max_level_realm@plt>
  429328:	cmp	w0, #0x7
  42932c:	mov	x6, xzr
  429330:	b.ge	42961c <link_config_apply+0xbec>  // b.tcont
  429334:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  429338:	add	x8, x8, #0x7f
  42933c:	cmp	x6, #0x0
  429340:	csel	x5, xzr, x8, eq  // eq = none
  429344:	adrp	x8, 43e000 <worker_hash_op+0x9df8>
  429348:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  42934c:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  429350:	add	x8, x8, #0x7b5
  429354:	add	x2, x2, #0xd8b
  429358:	add	x4, x4, #0x6af
  42935c:	mov	w0, #0x7                   	// #7
  429360:	mov	w3, #0x13b                 	// #315
  429364:	mov	w1, wzr
  429368:	mov	x7, xzr
  42936c:	stp	xzr, x8, [sp]
  429370:	bl	40a730 <log_object_internal@plt>
  429374:	ldur	w8, [x29, #-16]
  429378:	ldurh	w9, [x29, #-12]
  42937c:	stur	w8, [x29, #-24]
  429380:	sturh	w9, [x29, #-20]
  429384:	ldurb	w8, [x29, #-24]
  429388:	and	w8, w8, #0xfc
  42938c:	orr	w8, w8, #0x2
  429390:	sturb	w8, [x29, #-24]
  429394:	sub	x3, x29, #0x18
  429398:	ldr	w1, [sp, #32]
  42939c:	ldr	x2, [x20, #104]
  4293a0:	ldr	w4, [x20, #112]
  4293a4:	add	x0, x21, #0x10
  4293a8:	bl	40b740 <rtnl_set_link_properties@plt>
  4293ac:	tbnz	w0, #31, 4293c0 <link_config_apply+0x990>
  4293b0:	ldur	x8, [x29, #-32]
  4293b4:	mov	w0, wzr
  4293b8:	str	x8, [x19]
  4293bc:	b	429410 <link_config_apply+0x9e0>
  4293c0:	mov	w20, w0
  4293c4:	mov	w0, #0x1                   	// #1
  4293c8:	bl	40a2c0 <log_get_max_level_realm@plt>
  4293cc:	cmp	w0, #0x4
  4293d0:	b.lt	429404 <link_config_apply+0x9d4>  // b.tstop
  4293d4:	ldr	x6, [sp, #40]
  4293d8:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  4293dc:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  4293e0:	adrp	x5, 43e000 <worker_hash_op+0x9df8>
  4293e4:	add	x2, x2, #0xd8b
  4293e8:	add	x4, x4, #0x174
  4293ec:	add	x5, x5, #0x41a
  4293f0:	mov	w0, #0x404                 	// #1028
  4293f4:	mov	w3, #0x1cb                 	// #459
  4293f8:	mov	w1, w20
  4293fc:	bl	40a2d0 <log_internal_realm@plt>
  429400:	b	429410 <link_config_apply+0x9e0>
  429404:	mov	w8, wzr
  429408:	neg	w9, w20
  42940c:	sub	w0, w8, w9, uxtb
  429410:	ldp	x20, x19, [sp, #160]
  429414:	ldp	x22, x21, [sp, #144]
  429418:	ldp	x24, x23, [sp, #128]
  42941c:	ldp	x26, x25, [sp, #112]
  429420:	ldp	x28, x27, [sp, #96]
  429424:	ldp	x29, x30, [sp, #80]
  429428:	add	sp, sp, #0xb0
  42942c:	ret
  429430:	mov	w23, w0
  429434:	mov	w0, #0x1                   	// #1
  429438:	stur	xzr, [x29, #-24]
  42943c:	bl	40a2c0 <log_get_max_level_realm@plt>
  429440:	cmp	w0, #0x4
  429444:	mov	x6, xzr
  429448:	b.ge	429630 <link_config_apply+0xc00>  // b.tcont
  42944c:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  429450:	add	x8, x8, #0x7f
  429454:	cmp	x6, #0x0
  429458:	csel	x5, xzr, x8, eq  // eq = none
  42945c:	adrp	x8, 43e000 <worker_hash_op+0x9df8>
  429460:	add	x8, x8, #0x78f
  429464:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  429468:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  42946c:	add	x2, x2, #0xd8b
  429470:	add	x4, x4, #0x6af
  429474:	stp	xzr, x8, [sp]
  429478:	mov	w0, #0x4                   	// #4
  42947c:	mov	w3, #0x139                 	// #313
  429480:	mov	w1, w23
  429484:	mov	x7, xzr
  429488:	bl	40a730 <log_object_internal@plt>
  42948c:	cmp	w0, #0x1
  429490:	b.ge	429394 <link_config_apply+0x964>  // b.tcont
  429494:	b	4292f8 <link_config_apply+0x8c8>
  429498:	mov	w0, #0x1                   	// #1
  42949c:	stur	xzr, [x29, #-16]
  4294a0:	bl	40a2c0 <log_get_max_level_realm@plt>
  4294a4:	cmp	w0, #0x7
  4294a8:	mov	x6, xzr
  4294ac:	b.ge	429644 <link_config_apply+0xc14>  // b.tcont
  4294b0:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  4294b4:	add	x8, x8, #0x7f
  4294b8:	cmp	x6, #0x0
  4294bc:	csel	x5, xzr, x8, eq  // eq = none
  4294c0:	adrp	x8, 43e000 <worker_hash_op+0x9df8>
  4294c4:	adrp	x9, 43e000 <worker_hash_op+0x9df8>
  4294c8:	add	x8, x8, #0x7f3
  4294cc:	add	x9, x9, #0x331
  4294d0:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  4294d4:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  4294d8:	add	x2, x2, #0xd8b
  4294dc:	add	x4, x4, #0x174
  4294e0:	stp	x9, x8, [sp, #8]
  4294e4:	mov	w0, #0x7                   	// #7
  4294e8:	mov	w3, #0x1a4                 	// #420
  4294ec:	b	4290b4 <link_config_apply+0x684>
  4294f0:	mov	w0, #0x1                   	// #1
  4294f4:	stur	xzr, [x29, #-16]
  4294f8:	bl	40a2c0 <log_get_max_level_realm@plt>
  4294fc:	cmp	w0, #0x7
  429500:	mov	x6, xzr
  429504:	b.ge	429658 <link_config_apply+0xc28>  // b.tcont
  429508:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  42950c:	add	x8, x8, #0x7f
  429510:	cmp	x6, #0x0
  429514:	csel	x5, xzr, x8, eq  // eq = none
  429518:	adrp	x8, 436000 <worker_hash_op+0x1df8>
  42951c:	adrp	x9, 43e000 <worker_hash_op+0x9df8>
  429520:	add	x8, x8, #0xa7c
  429524:	add	x9, x9, #0x304
  429528:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  42952c:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  429530:	add	x2, x2, #0xd8b
  429534:	add	x4, x4, #0x174
  429538:	stp	x9, x8, [sp, #8]
  42953c:	mov	w0, #0x7                   	// #7
  429540:	mov	w3, #0x19d                 	// #413
  429544:	b	4290b4 <link_config_apply+0x684>
  429548:	sub	x1, x29, #0x10
  42954c:	mov	x0, x22
  429550:	bl	40a780 <sd_device_get_sysname@plt>
  429554:	ldur	x6, [x29, #-16]
  429558:	b	428eb4 <link_config_apply+0x484>
  42955c:	sub	x1, x29, #0x10
  429560:	mov	x0, x22
  429564:	bl	40a780 <sd_device_get_sysname@plt>
  429568:	ldur	x6, [x29, #-16]
  42956c:	ldur	x25, [x29, #-32]
  429570:	b	428f18 <link_config_apply+0x4e8>
  429574:	sub	x1, x29, #0x10
  429578:	mov	x0, x22
  42957c:	bl	40a780 <sd_device_get_sysname@plt>
  429580:	ldur	x6, [x29, #-16]
  429584:	b	428c98 <link_config_apply+0x268>
  429588:	sub	x1, x29, #0x10
  42958c:	mov	x0, x22
  429590:	bl	40a780 <sd_device_get_sysname@plt>
  429594:	ldur	x6, [x29, #-16]
  429598:	ldur	x23, [x29, #-32]
  42959c:	b	429030 <link_config_apply+0x600>
  4295a0:	sub	x1, x29, #0x10
  4295a4:	mov	x0, x22
  4295a8:	bl	40a780 <sd_device_get_sysname@plt>
  4295ac:	ldur	x6, [x29, #-16]
  4295b0:	b	429080 <link_config_apply+0x650>
  4295b4:	sub	x1, x29, #0x10
  4295b8:	mov	x0, x22
  4295bc:	bl	40a780 <sd_device_get_sysname@plt>
  4295c0:	ldur	x6, [x29, #-16]
  4295c4:	b	429118 <link_config_apply+0x6e8>
  4295c8:	sub	x1, x29, #0x10
  4295cc:	mov	x0, x22
  4295d0:	bl	40a780 <sd_device_get_sysname@plt>
  4295d4:	ldur	x6, [x29, #-16]
  4295d8:	b	429188 <link_config_apply+0x758>
  4295dc:	sub	x1, x29, #0x10
  4295e0:	mov	x0, x22
  4295e4:	bl	40a780 <sd_device_get_sysname@plt>
  4295e8:	ldur	x6, [x29, #-16]
  4295ec:	b	4291e8 <link_config_apply+0x7b8>
  4295f0:	sub	x1, x29, #0x10
  4295f4:	mov	x0, x22
  4295f8:	bl	40a780 <sd_device_get_sysname@plt>
  4295fc:	ldur	x6, [x29, #-16]
  429600:	ldur	w24, [x29, #-4]
  429604:	b	4292a8 <link_config_apply+0x878>
  429608:	sub	x1, x29, #0x10
  42960c:	mov	x0, x22
  429610:	bl	40a780 <sd_device_get_sysname@plt>
  429614:	ldur	x6, [x29, #-16]
  429618:	b	429240 <link_config_apply+0x810>
  42961c:	sub	x1, x29, #0x18
  429620:	mov	x0, x22
  429624:	bl	40a780 <sd_device_get_sysname@plt>
  429628:	ldur	x6, [x29, #-24]
  42962c:	b	429334 <link_config_apply+0x904>
  429630:	sub	x1, x29, #0x18
  429634:	mov	x0, x22
  429638:	bl	40a780 <sd_device_get_sysname@plt>
  42963c:	ldur	x6, [x29, #-24]
  429640:	b	42944c <link_config_apply+0xa1c>
  429644:	sub	x1, x29, #0x10
  429648:	mov	x0, x22
  42964c:	bl	40a780 <sd_device_get_sysname@plt>
  429650:	ldur	x6, [x29, #-16]
  429654:	b	4294b0 <link_config_apply+0xa80>
  429658:	sub	x1, x29, #0x10
  42965c:	mov	x0, x22
  429660:	bl	40a780 <sd_device_get_sysname@plt>
  429664:	ldur	x6, [x29, #-16]
  429668:	b	429508 <link_config_apply+0xad8>
  42966c:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  429670:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  429674:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  429678:	add	x1, x1, #0xd84
  42967c:	add	x2, x2, #0xd8b
  429680:	add	x4, x4, #0x120
  429684:	mov	w0, #0x1                   	// #1
  429688:	mov	w3, #0x150                 	// #336
  42968c:	bl	40a630 <log_assert_failed_realm@plt>
  429690:	adrp	x1, 43b000 <worker_hash_op+0x6df8>
  429694:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  429698:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  42969c:	add	x1, x1, #0xa33
  4296a0:	add	x2, x2, #0xd8b
  4296a4:	add	x4, x4, #0x120
  4296a8:	mov	w0, #0x1                   	// #1
  4296ac:	mov	w3, #0x151                 	// #337
  4296b0:	bl	40a630 <log_assert_failed_realm@plt>
  4296b4:	adrp	x1, 439000 <worker_hash_op+0x4df8>
  4296b8:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  4296bc:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  4296c0:	add	x1, x1, #0x764
  4296c4:	add	x2, x2, #0xd8b
  4296c8:	add	x4, x4, #0x120
  4296cc:	mov	w0, #0x1                   	// #1
  4296d0:	mov	w3, #0x152                 	// #338
  4296d4:	bl	40a630 <log_assert_failed_realm@plt>
  4296d8:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  4296dc:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  4296e0:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  4296e4:	add	x1, x1, #0xab6
  4296e8:	add	x2, x2, #0xd8b
  4296ec:	add	x4, x4, #0x120
  4296f0:	mov	w0, #0x1                   	// #1
  4296f4:	mov	w3, #0x153                 	// #339
  4296f8:	bl	40a630 <log_assert_failed_realm@plt>
  4296fc:	adrp	x1, 43e000 <worker_hash_op+0x9df8>
  429700:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  429704:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  429708:	add	x1, x1, #0x378
  42970c:	add	x2, x2, #0xd8b
  429710:	add	x4, x4, #0x120
  429714:	mov	w0, #0x1                   	// #1
  429718:	mov	w3, #0x1b6                 	// #438
  42971c:	bl	40a620 <log_assert_failed_unreachable_realm@plt>

0000000000429720 <name_policy_to_string>:
  429720:	cmp	w0, #0x6
  429724:	b.ls	429730 <name_policy_to_string+0x10>  // b.plast
  429728:	mov	x0, xzr
  42972c:	ret
  429730:	adrp	x8, 46e000 <keyboard_lookup_key.wordlist+0x16bd8>
  429734:	add	x8, x8, #0x4e0
  429738:	ldr	x0, [x8, w0, uxtw #3]
  42973c:	ret

0000000000429740 <link_get_driver>:
  429740:	sub	sp, sp, #0x30
  429744:	mov	x8, x1
  429748:	stp	x20, x19, [sp, #32]
  42974c:	mov	x20, x0
  429750:	add	x1, sp, #0x8
  429754:	mov	x0, x8
  429758:	stp	x29, x30, [sp, #16]
  42975c:	add	x29, sp, #0x10
  429760:	mov	x19, x2
  429764:	str	xzr, [sp]
  429768:	bl	40a780 <sd_device_get_sysname@plt>
  42976c:	tbnz	w0, #31, 429790 <link_get_driver+0x50>
  429770:	ldr	x1, [sp, #8]
  429774:	add	x0, x20, #0x8
  429778:	mov	x2, sp
  42977c:	bl	40b750 <ethtool_get_driver@plt>
  429780:	tbnz	w0, #31, 429790 <link_get_driver+0x50>
  429784:	ldr	x8, [sp]
  429788:	mov	w0, wzr
  42978c:	str	x8, [x19]
  429790:	ldp	x20, x19, [sp, #32]
  429794:	ldp	x29, x30, [sp, #16]
  429798:	add	sp, sp, #0x30
  42979c:	ret

00000000004297a0 <mac_address_policy_to_string>:
  4297a0:	cmp	w0, #0x2
  4297a4:	b.ls	4297b0 <mac_address_policy_to_string+0x10>  // b.plast
  4297a8:	mov	x0, xzr
  4297ac:	ret
  4297b0:	adrp	x8, 46e000 <keyboard_lookup_key.wordlist+0x16bd8>
  4297b4:	add	x8, x8, #0x4c8
  4297b8:	ldr	x0, [x8, w0, uxtw #3]
  4297bc:	ret

00000000004297c0 <mac_address_policy_from_string>:
  4297c0:	stp	x29, x30, [sp, #-16]!
  4297c4:	mov	x2, x0
  4297c8:	adrp	x0, 46e000 <keyboard_lookup_key.wordlist+0x16bd8>
  4297cc:	add	x0, x0, #0x4c8
  4297d0:	mov	w1, #0x3                   	// #3
  4297d4:	mov	x29, sp
  4297d8:	bl	40b760 <string_table_lookup@plt>
  4297dc:	ldp	x29, x30, [sp], #16
  4297e0:	ret

00000000004297e4 <config_parse_mac_address_policy>:
  4297e4:	sub	sp, sp, #0x50
  4297e8:	stp	x29, x30, [sp, #16]
  4297ec:	str	x23, [sp, #32]
  4297f0:	stp	x22, x21, [sp, #48]
  4297f4:	stp	x20, x19, [sp, #64]
  4297f8:	add	x29, sp, #0x10
  4297fc:	cbz	x1, 4298a4 <config_parse_mac_address_policy+0xc0>
  429800:	cbz	x5, 4298b0 <config_parse_mac_address_policy+0xcc>
  429804:	mov	x22, x7
  429808:	cbz	x7, 4298bc <config_parse_mac_address_policy+0xd8>
  42980c:	ldr	x23, [x29, #64]
  429810:	cbz	x23, 4298c8 <config_parse_mac_address_policy+0xe4>
  429814:	mov	x21, x0
  429818:	adrp	x0, 46e000 <keyboard_lookup_key.wordlist+0x16bd8>
  42981c:	mov	w19, w2
  429820:	mov	x20, x1
  429824:	add	x0, x0, #0x4c8
  429828:	mov	w1, #0x3                   	// #3
  42982c:	mov	x2, x22
  429830:	bl	40b760 <string_table_lookup@plt>
  429834:	tbnz	w0, #31, 429840 <config_parse_mac_address_policy+0x5c>
  429838:	str	w0, [x23]
  42983c:	b	429888 <config_parse_mac_address_policy+0xa4>
  429840:	mov	w0, #0x1                   	// #1
  429844:	bl	40a2c0 <log_get_max_level_realm@plt>
  429848:	cmp	w0, #0x3
  42984c:	b.lt	429888 <config_parse_mac_address_policy+0xa4>  // b.tstop
  429850:	adrp	x8, 43e000 <worker_hash_op+0x9df8>
  429854:	adrp	x5, 43d000 <worker_hash_op+0x8df8>
  429858:	adrp	x7, 43e000 <worker_hash_op+0x9df8>
  42985c:	add	x8, x8, #0x517
  429860:	add	x5, x5, #0xd8b
  429864:	add	x7, x7, #0x4f7
  429868:	mov	w1, #0x3                   	// #3
  42986c:	mov	w6, #0x1eb                 	// #491
  429870:	mov	x0, x21
  429874:	mov	x2, x20
  429878:	mov	w3, w19
  42987c:	mov	w4, wzr
  429880:	stp	x8, x22, [sp]
  429884:	bl	40b770 <log_syntax_internal@plt>
  429888:	ldp	x20, x19, [sp, #64]
  42988c:	ldp	x22, x21, [sp, #48]
  429890:	ldr	x23, [sp, #32]
  429894:	ldp	x29, x30, [sp, #16]
  429898:	mov	w0, wzr
  42989c:	add	sp, sp, #0x50
  4298a0:	ret
  4298a4:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  4298a8:	add	x1, x1, #0xdd9
  4298ac:	b	4298d0 <config_parse_mac_address_policy+0xec>
  4298b0:	adrp	x1, 43e000 <worker_hash_op+0x9df8>
  4298b4:	add	x1, x1, #0x4e9
  4298b8:	b	4298d0 <config_parse_mac_address_policy+0xec>
  4298bc:	adrp	x1, 43e000 <worker_hash_op+0x9df8>
  4298c0:	add	x1, x1, #0x4f0
  4298c4:	b	4298d0 <config_parse_mac_address_policy+0xec>
  4298c8:	adrp	x1, 438000 <worker_hash_op+0x3df8>
  4298cc:	add	x1, x1, #0x479
  4298d0:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  4298d4:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  4298d8:	add	x2, x2, #0xd8b
  4298dc:	add	x4, x4, #0x44e
  4298e0:	mov	w0, #0x1                   	// #1
  4298e4:	mov	w3, #0x1eb                 	// #491
  4298e8:	bl	40a630 <log_assert_failed_realm@plt>

00000000004298ec <name_policy_from_string>:
  4298ec:	stp	x29, x30, [sp, #-16]!
  4298f0:	mov	x2, x0
  4298f4:	adrp	x0, 46e000 <keyboard_lookup_key.wordlist+0x16bd8>
  4298f8:	add	x0, x0, #0x4e0
  4298fc:	mov	w1, #0x7                   	// #7
  429900:	mov	x29, sp
  429904:	bl	40b760 <string_table_lookup@plt>
  429908:	ldp	x29, x30, [sp], #16
  42990c:	ret

0000000000429910 <config_parse_name_policy>:
  429910:	sub	sp, sp, #0x80
  429914:	stp	x29, x30, [sp, #32]
  429918:	stp	x28, x27, [sp, #48]
  42991c:	stp	x26, x25, [sp, #64]
  429920:	stp	x24, x23, [sp, #80]
  429924:	stp	x22, x21, [sp, #96]
  429928:	stp	x20, x19, [sp, #112]
  42992c:	add	x29, sp, #0x20
  429930:	cbz	x1, 429b00 <config_parse_name_policy+0x1f0>
  429934:	cbz	x5, 429b0c <config_parse_name_policy+0x1fc>
  429938:	mov	x23, x7
  42993c:	cbz	x7, 429b18 <config_parse_name_policy+0x208>
  429940:	ldr	x28, [x29, #96]
  429944:	cbz	x28, 429b24 <config_parse_name_policy+0x214>
  429948:	mov	x21, x1
  42994c:	mov	x22, x0
  429950:	mov	w0, #0x1                   	// #1
  429954:	mov	w1, #0x4                   	// #4
  429958:	mov	w20, w2
  42995c:	bl	40b650 <calloc@plt>
  429960:	mov	x19, x0
  429964:	cbz	x0, 429ad0 <config_parse_name_policy+0x1c0>
  429968:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  42996c:	mov	w24, #0xffffffff            	// #-1
  429970:	add	x2, x2, #0xacd
  429974:	sub	x0, x29, #0x8
  429978:	add	x1, sp, #0x10
  42997c:	mov	w3, wzr
  429980:	str	w24, [x19]
  429984:	stur	x23, [x29, #-8]
  429988:	bl	40b780 <split@plt>
  42998c:	cbz	x0, 429ab0 <config_parse_name_policy+0x1a0>
  429990:	adrp	x23, 46e000 <keyboard_lookup_key.wordlist+0x16bd8>
  429994:	adrp	x26, 436000 <worker_hash_op+0x1df8>
  429998:	mov	x25, xzr
  42999c:	add	x23, x23, #0x4e0
  4299a0:	add	x26, x26, #0xacd
  4299a4:	b	4299f0 <config_parse_name_policy+0xe0>
  4299a8:	adrp	x5, 43d000 <worker_hash_op+0x8df8>
  4299ac:	adrp	x7, 43e000 <worker_hash_op+0x9df8>
  4299b0:	mov	x0, x22
  4299b4:	mov	x2, x21
  4299b8:	mov	w3, w20
  4299bc:	mov	w4, wzr
  4299c0:	add	x5, x5, #0xd8b
  4299c4:	add	x7, x7, #0x5dc
  4299c8:	str	x8, [sp]
  4299cc:	bl	40b770 <log_syntax_internal@plt>
  4299d0:	mov	x0, x27
  4299d4:	bl	40a320 <free@plt>
  4299d8:	sub	x0, x29, #0x8
  4299dc:	add	x1, sp, #0x10
  4299e0:	mov	x2, x26
  4299e4:	mov	w3, wzr
  4299e8:	bl	40b780 <split@plt>
  4299ec:	cbz	x0, 429ab0 <config_parse_name_policy+0x1a0>
  4299f0:	ldr	x1, [sp, #16]
  4299f4:	bl	40a7e0 <strndup@plt>
  4299f8:	mov	x27, x0
  4299fc:	cbz	x0, 429ac8 <config_parse_name_policy+0x1b8>
  429a00:	mov	w1, #0x7                   	// #7
  429a04:	mov	x0, x23
  429a08:	mov	x2, x27
  429a0c:	bl	40b760 <string_table_lookup@plt>
  429a10:	tbnz	w0, #31, 429a60 <config_parse_name_policy+0x150>
  429a14:	ldr	w8, [x19]
  429a18:	cmn	w8, #0x1
  429a1c:	b.eq	429a38 <config_parse_name_policy+0x128>  // b.none
  429a20:	add	x9, x19, #0x4
  429a24:	cmp	w8, w0
  429a28:	b.eq	429a88 <config_parse_name_policy+0x178>  // b.none
  429a2c:	ldr	w8, [x9], #4
  429a30:	cmn	w8, #0x1
  429a34:	b.ne	429a24 <config_parse_name_policy+0x114>  // b.any
  429a38:	lsl	x8, x25, #2
  429a3c:	str	w0, [x19, x8]
  429a40:	add	x1, x8, #0x8
  429a44:	mov	x0, x19
  429a48:	bl	40b790 <realloc@plt>
  429a4c:	cbz	x0, 429ac8 <config_parse_name_policy+0x1b8>
  429a50:	add	x25, x25, #0x1
  429a54:	mov	x19, x0
  429a58:	str	w24, [x0, x25, lsl #2]
  429a5c:	b	4299d0 <config_parse_name_policy+0xc0>
  429a60:	mov	w0, #0x1                   	// #1
  429a64:	bl	40a2c0 <log_get_max_level_realm@plt>
  429a68:	cmp	w0, #0x3
  429a6c:	b.lt	4299d0 <config_parse_name_policy+0xc0>  // b.tstop
  429a70:	adrp	x8, 43e000 <worker_hash_op+0x9df8>
  429a74:	mov	w1, #0x3                   	// #3
  429a78:	mov	w6, #0x1fa                 	// #506
  429a7c:	add	x8, x8, #0x5f5
  429a80:	str	x27, [sp, #8]
  429a84:	b	4299a8 <config_parse_name_policy+0x98>
  429a88:	mov	w0, #0x1                   	// #1
  429a8c:	bl	40a2c0 <log_get_max_level_realm@plt>
  429a90:	cmp	w0, #0x5
  429a94:	b.lt	4299d0 <config_parse_name_policy+0xc0>  // b.tstop
  429a98:	adrp	x8, 43e000 <worker_hash_op+0x9df8>
  429a9c:	str	x27, [sp, #8]
  429aa0:	mov	w1, #0x5                   	// #5
  429aa4:	mov	w6, #0x1fa                 	// #506
  429aa8:	add	x8, x8, #0x629
  429aac:	b	4299a8 <config_parse_name_policy+0x98>
  429ab0:	ldr	x0, [x28]
  429ab4:	bl	40a320 <free@plt>
  429ab8:	mov	w20, wzr
  429abc:	str	x19, [x28]
  429ac0:	mov	x19, xzr
  429ac4:	b	429ad4 <config_parse_name_policy+0x1c4>
  429ac8:	mov	x0, x27
  429acc:	bl	40a320 <free@plt>
  429ad0:	mov	w20, #0xfffffff4            	// #-12
  429ad4:	mov	x0, x19
  429ad8:	bl	40a320 <free@plt>
  429adc:	mov	w0, w20
  429ae0:	ldp	x20, x19, [sp, #112]
  429ae4:	ldp	x22, x21, [sp, #96]
  429ae8:	ldp	x24, x23, [sp, #80]
  429aec:	ldp	x26, x25, [sp, #64]
  429af0:	ldp	x28, x27, [sp, #48]
  429af4:	ldp	x29, x30, [sp, #32]
  429af8:	add	sp, sp, #0x80
  429afc:	ret
  429b00:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  429b04:	add	x1, x1, #0xdd9
  429b08:	b	429b2c <config_parse_name_policy+0x21c>
  429b0c:	adrp	x1, 43e000 <worker_hash_op+0x9df8>
  429b10:	add	x1, x1, #0x4e9
  429b14:	b	429b2c <config_parse_name_policy+0x21c>
  429b18:	adrp	x1, 43e000 <worker_hash_op+0x9df8>
  429b1c:	add	x1, x1, #0x4f0
  429b20:	b	429b2c <config_parse_name_policy+0x21c>
  429b24:	adrp	x1, 438000 <worker_hash_op+0x3df8>
  429b28:	add	x1, x1, #0x479
  429b2c:	adrp	x2, 43d000 <worker_hash_op+0x8df8>
  429b30:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  429b34:	add	x2, x2, #0xd8b
  429b38:	add	x4, x4, #0x548
  429b3c:	mov	w0, #0x1                   	// #1
  429b40:	mov	w3, #0x1fa                 	// #506
  429b44:	bl	40a630 <log_assert_failed_realm@plt>

0000000000429b48 <link_config_free>:
  429b48:	cbz	x0, 429be4 <link_config_free+0x9c>
  429b4c:	stp	x29, x30, [sp, #-32]!
  429b50:	str	x19, [sp, #16]
  429b54:	mov	x19, x0
  429b58:	ldr	x0, [x0]
  429b5c:	mov	x29, sp
  429b60:	bl	40a320 <free@plt>
  429b64:	adrp	x1, 46f000 <_DYNAMIC+0x208>
  429b68:	ldr	x0, [x19, #8]
  429b6c:	ldr	x1, [x1, #120]
  429b70:	mov	x2, xzr
  429b74:	bl	40a650 <internal_hashmap_free@plt>
  429b78:	ldr	x0, [x19, #16]
  429b7c:	bl	40ae30 <strv_free@plt>
  429b80:	ldr	x0, [x19, #24]
  429b84:	bl	40ae30 <strv_free@plt>
  429b88:	ldr	x0, [x19, #32]
  429b8c:	bl	40ae30 <strv_free@plt>
  429b90:	ldr	x0, [x19, #40]
  429b94:	bl	40ae30 <strv_free@plt>
  429b98:	ldr	x0, [x19, #48]
  429b9c:	bl	40ae30 <strv_free@plt>
  429ba0:	ldr	x0, [x19, #56]
  429ba4:	mov	w1, #0xffffffff            	// #-1
  429ba8:	bl	40b7a0 <condition_free_list_type@plt>
  429bac:	ldr	x0, [x19, #64]
  429bb0:	bl	40a320 <free@plt>
  429bb4:	ldr	x0, [x19, #72]
  429bb8:	bl	40a320 <free@plt>
  429bbc:	ldr	x0, [x19, #88]
  429bc0:	bl	40a320 <free@plt>
  429bc4:	ldr	x0, [x19, #96]
  429bc8:	bl	40a320 <free@plt>
  429bcc:	ldr	x0, [x19, #104]
  429bd0:	bl	40a320 <free@plt>
  429bd4:	mov	x0, x19
  429bd8:	ldr	x19, [sp, #16]
  429bdc:	ldp	x29, x30, [sp], #32
  429be0:	b	40a320 <free@plt>
  429be4:	ret

0000000000429be8 <naming_scheme>:
  429be8:	stp	x29, x30, [sp, #-48]!
  429bec:	str	x21, [sp, #16]
  429bf0:	adrp	x21, 470000 <arg_resolve_name_timing>
  429bf4:	stp	x20, x19, [sp, #32]
  429bf8:	ldr	x20, [x21, #80]
  429bfc:	mov	x29, sp
  429c00:	str	xzr, [x29, #24]
  429c04:	cbnz	x20, 429d2c <naming_scheme+0x144>
  429c08:	adrp	x0, 43e000 <worker_hash_op+0x9df8>
  429c0c:	add	x0, x0, #0x809
  429c10:	add	x2, x29, #0x18
  429c14:	mov	w1, wzr
  429c18:	bl	40b2e0 <proc_cmdline_get_key@plt>
  429c1c:	adrp	x0, 43e000 <worker_hash_op+0x9df8>
  429c20:	add	x0, x0, #0x81b
  429c24:	bl	40b7b0 <getenv@plt>
  429c28:	cbz	x0, 429c4c <naming_scheme+0x64>
  429c2c:	ldrb	w8, [x0]
  429c30:	mov	x19, x0
  429c34:	cmp	w8, #0x3a
  429c38:	b.ne	429c54 <naming_scheme+0x6c>  // b.any
  429c3c:	ldr	x8, [x29, #24]
  429c40:	cmp	x8, #0x0
  429c44:	csinc	x19, x8, x19, ne  // ne = any
  429c48:	b	429c54 <naming_scheme+0x6c>
  429c4c:	ldr	x19, [x29, #24]
  429c50:	cbz	x19, 429cd4 <naming_scheme+0xec>
  429c54:	mov	x0, x19
  429c58:	bl	429d6c <naming_scheme_from_name>
  429c5c:	mov	x20, x0
  429c60:	str	x0, [x21, #80]
  429c64:	mov	w0, #0x1                   	// #1
  429c68:	bl	40a2c0 <log_get_max_level_realm@plt>
  429c6c:	cbz	x20, 429ca0 <naming_scheme+0xb8>
  429c70:	cmp	w0, #0x6
  429c74:	b.lt	429d2c <naming_scheme+0x144>  // b.tstop
  429c78:	ldr	x6, [x20]
  429c7c:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  429c80:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  429c84:	adrp	x5, 43e000 <worker_hash_op+0x9df8>
  429c88:	add	x2, x2, #0x830
  429c8c:	add	x4, x4, #0x84d
  429c90:	add	x5, x5, #0x85b
  429c94:	mov	w0, #0x406                 	// #1030
  429c98:	mov	w3, #0x36                  	// #54
  429c9c:	b	429d20 <naming_scheme+0x138>
  429ca0:	cmp	w0, #0x4
  429ca4:	b.lt	429cd4 <naming_scheme+0xec>  // b.tstop
  429ca8:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  429cac:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  429cb0:	adrp	x5, 43e000 <worker_hash_op+0x9df8>
  429cb4:	add	x2, x2, #0x830
  429cb8:	add	x4, x4, #0x84d
  429cbc:	add	x5, x5, #0x87f
  429cc0:	mov	w0, #0x404                 	// #1028
  429cc4:	mov	w3, #0x3a                  	// #58
  429cc8:	mov	w1, wzr
  429ccc:	mov	x6, x19
  429cd0:	bl	40a2d0 <log_internal_realm@plt>
  429cd4:	adrp	x0, 43e000 <worker_hash_op+0x9df8>
  429cd8:	add	x0, x0, #0x8b9
  429cdc:	bl	429d6c <naming_scheme_from_name>
  429ce0:	str	x0, [x21, #80]
  429ce4:	cbz	x0, 429d48 <naming_scheme+0x160>
  429ce8:	mov	x20, x0
  429cec:	mov	w0, #0x1                   	// #1
  429cf0:	bl	40a2c0 <log_get_max_level_realm@plt>
  429cf4:	cmp	w0, #0x6
  429cf8:	b.lt	429d2c <naming_scheme+0x144>  // b.tstop
  429cfc:	ldr	x6, [x20]
  429d00:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  429d04:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  429d08:	adrp	x5, 43e000 <worker_hash_op+0x9df8>
  429d0c:	add	x2, x2, #0x830
  429d10:	add	x4, x4, #0x84d
  429d14:	add	x5, x5, #0x8ee
  429d18:	mov	w0, #0x406                 	// #1030
  429d1c:	mov	w3, #0x3f                  	// #63
  429d20:	mov	w1, wzr
  429d24:	bl	40a2d0 <log_internal_realm@plt>
  429d28:	ldr	x20, [x21, #80]
  429d2c:	ldr	x0, [x29, #24]
  429d30:	bl	40a320 <free@plt>
  429d34:	mov	x0, x20
  429d38:	ldp	x20, x19, [sp, #32]
  429d3c:	ldr	x21, [sp, #16]
  429d40:	ldp	x29, x30, [sp], #48
  429d44:	ret
  429d48:	adrp	x1, 43e000 <worker_hash_op+0x9df8>
  429d4c:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  429d50:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  429d54:	add	x1, x1, #0x8c0
  429d58:	add	x2, x2, #0x830
  429d5c:	add	x4, x4, #0x8c6
  429d60:	mov	w0, #0x1                   	// #1
  429d64:	mov	w3, #0x3e                  	// #62
  429d68:	bl	40a630 <log_assert_failed_realm@plt>

0000000000429d6c <naming_scheme_from_name>:
  429d6c:	stp	x29, x30, [sp, #-32]!
  429d70:	adrp	x1, 43e000 <worker_hash_op+0x9df8>
  429d74:	add	x1, x1, #0x8b9
  429d78:	str	x19, [sp, #16]
  429d7c:	mov	x29, sp
  429d80:	mov	x19, x0
  429d84:	bl	40a930 <strcmp@plt>
  429d88:	cbz	w0, 429e00 <naming_scheme_from_name+0x94>
  429d8c:	adrp	x0, 43e000 <worker_hash_op+0x9df8>
  429d90:	add	x0, x0, #0x91a
  429d94:	mov	x1, x19
  429d98:	bl	40a930 <strcmp@plt>
  429d9c:	cbz	w0, 429e14 <naming_scheme_from_name+0xa8>
  429da0:	adrp	x0, 43e000 <worker_hash_op+0x9df8>
  429da4:	add	x0, x0, #0x91f
  429da8:	mov	x1, x19
  429dac:	bl	40a930 <strcmp@plt>
  429db0:	cbz	w0, 429e1c <naming_scheme_from_name+0xb0>
  429db4:	adrp	x0, 43e000 <worker_hash_op+0x9df8>
  429db8:	add	x0, x0, #0x924
  429dbc:	mov	x1, x19
  429dc0:	bl	40a930 <strcmp@plt>
  429dc4:	cbz	w0, 429e24 <naming_scheme_from_name+0xb8>
  429dc8:	adrp	x0, 43e000 <worker_hash_op+0x9df8>
  429dcc:	add	x0, x0, #0x929
  429dd0:	mov	x1, x19
  429dd4:	bl	40a930 <strcmp@plt>
  429dd8:	cbz	w0, 429e2c <naming_scheme_from_name+0xc0>
  429ddc:	adrp	x0, 43e000 <worker_hash_op+0x9df8>
  429de0:	add	x0, x0, #0x92e
  429de4:	mov	x1, x19
  429de8:	bl	40a930 <strcmp@plt>
  429dec:	cbz	w0, 429e34 <naming_scheme_from_name+0xc8>
  429df0:	mov	x0, xzr
  429df4:	ldr	x19, [sp, #16]
  429df8:	ldp	x29, x30, [sp], #32
  429dfc:	ret
  429e00:	adrp	x0, 46e000 <keyboard_lookup_key.wordlist+0x16bd8>
  429e04:	add	x0, x0, #0x558
  429e08:	ldr	x19, [sp, #16]
  429e0c:	ldp	x29, x30, [sp], #32
  429e10:	ret
  429e14:	mov	x8, xzr
  429e18:	b	429e38 <naming_scheme_from_name+0xcc>
  429e1c:	mov	w8, #0x1                   	// #1
  429e20:	b	429e38 <naming_scheme_from_name+0xcc>
  429e24:	mov	w8, #0x2                   	// #2
  429e28:	b	429e38 <naming_scheme_from_name+0xcc>
  429e2c:	mov	w8, #0x3                   	// #3
  429e30:	b	429e38 <naming_scheme_from_name+0xcc>
  429e34:	mov	w8, #0x4                   	// #4
  429e38:	adrp	x9, 46e000 <keyboard_lookup_key.wordlist+0x16bd8>
  429e3c:	add	x9, x9, #0x518
  429e40:	add	x0, x9, x8, lsl #4
  429e44:	ldr	x19, [sp, #16]
  429e48:	ldp	x29, x30, [sp], #32
  429e4c:	ret

0000000000429e50 <builtin_kmod>:
  429e50:	stp	x29, x30, [sp, #-48]!
  429e54:	str	x21, [sp, #16]
  429e58:	stp	x20, x19, [sp, #32]
  429e5c:	adrp	x21, 470000 <arg_resolve_name_timing>
  429e60:	ldr	x20, [x21, #88]
  429e64:	mov	x29, sp
  429e68:	cbz	x20, 429f20 <builtin_kmod+0xd0>
  429e6c:	mov	x19, x2
  429e70:	cmp	w1, #0x3
  429e74:	b.lt	429e8c <builtin_kmod+0x3c>  // b.tstop
  429e78:	ldr	x0, [x19, #8]
  429e7c:	adrp	x1, 43e000 <worker_hash_op+0x9df8>
  429e80:	add	x1, x1, #0x94d
  429e84:	bl	40a930 <strcmp@plt>
  429e88:	cbz	w0, 429eec <builtin_kmod+0x9c>
  429e8c:	mov	w0, #0x1                   	// #1
  429e90:	bl	40a2c0 <log_get_max_level_realm@plt>
  429e94:	cmp	w0, #0x3
  429e98:	b.lt	429ed8 <builtin_kmod+0x88>  // b.tstop
  429e9c:	ldr	x6, [x19]
  429ea0:	ldp	x20, x19, [sp, #32]
  429ea4:	ldr	x21, [sp, #16]
  429ea8:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  429eac:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  429eb0:	adrp	x5, 43e000 <worker_hash_op+0x9df8>
  429eb4:	mov	w1, #0x16                  	// #22
  429eb8:	add	x2, x2, #0x955
  429ebc:	add	x4, x4, #0x972
  429ec0:	add	x5, x5, #0x97f
  429ec4:	mov	w0, #0x403                 	// #1027
  429ec8:	movk	w1, #0x4000, lsl #16
  429ecc:	mov	w3, #0x1f                  	// #31
  429ed0:	ldp	x29, x30, [sp], #48
  429ed4:	b	40a2d0 <log_internal_realm@plt>
  429ed8:	mov	w0, #0xffffffea            	// #-22
  429edc:	ldp	x20, x19, [sp, #32]
  429ee0:	ldr	x21, [sp, #16]
  429ee4:	ldp	x29, x30, [sp], #48
  429ee8:	ret
  429eec:	ldr	x1, [x19, #16]
  429ef0:	cbz	x1, 429f20 <builtin_kmod+0xd0>
  429ef4:	mov	x0, x20
  429ef8:	mov	w2, wzr
  429efc:	bl	40b7c0 <module_load_and_warn@plt>
  429f00:	ldr	x1, [x19, #24]
  429f04:	cbz	x1, 429f20 <builtin_kmod+0xd0>
  429f08:	add	x19, x19, #0x20
  429f0c:	ldr	x0, [x21, #88]
  429f10:	mov	w2, wzr
  429f14:	bl	40b7c0 <module_load_and_warn@plt>
  429f18:	ldr	x1, [x19], #8
  429f1c:	cbnz	x1, 429f0c <builtin_kmod+0xbc>
  429f20:	mov	w0, wzr
  429f24:	ldp	x20, x19, [sp, #32]
  429f28:	ldr	x21, [sp, #16]
  429f2c:	ldp	x29, x30, [sp], #48
  429f30:	ret

0000000000429f34 <builtin_kmod_init>:
  429f34:	stp	x29, x30, [sp, #-32]!
  429f38:	stp	x20, x19, [sp, #16]
  429f3c:	adrp	x20, 470000 <arg_resolve_name_timing>
  429f40:	ldr	x8, [x20, #88]
  429f44:	mov	x29, sp
  429f48:	cbnz	x8, 429fbc <builtin_kmod_init+0x88>
  429f4c:	mov	x0, xzr
  429f50:	mov	x1, xzr
  429f54:	bl	40b7d0 <kmod_new@plt>
  429f58:	str	x0, [x20, #88]
  429f5c:	cbz	x0, 429fcc <builtin_kmod_init+0x98>
  429f60:	mov	x19, x0
  429f64:	mov	w0, #0x1                   	// #1
  429f68:	bl	40a2c0 <log_get_max_level_realm@plt>
  429f6c:	cmp	w0, #0x7
  429f70:	b.lt	429fa0 <builtin_kmod_init+0x6c>  // b.tstop
  429f74:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  429f78:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  429f7c:	adrp	x5, 43e000 <worker_hash_op+0x9df8>
  429f80:	add	x2, x2, #0x955
  429f84:	add	x4, x4, #0x99b
  429f88:	add	x5, x5, #0x9ad
  429f8c:	mov	w0, #0x407                 	// #1031
  429f90:	mov	w3, #0x30                  	// #48
  429f94:	mov	w1, wzr
  429f98:	bl	40a2d0 <log_internal_realm@plt>
  429f9c:	ldr	x19, [x20, #88]
  429fa0:	adrp	x1, 42a000 <builtin_kmod_exit+0x24>
  429fa4:	add	x1, x1, #0x9c
  429fa8:	mov	x0, x19
  429fac:	mov	x2, xzr
  429fb0:	bl	40b7e0 <kmod_set_log_fn@plt>
  429fb4:	ldr	x0, [x20, #88]
  429fb8:	bl	40b7f0 <kmod_load_resources@plt>
  429fbc:	mov	w0, wzr
  429fc0:	ldp	x20, x19, [sp, #16]
  429fc4:	ldp	x29, x30, [sp], #32
  429fc8:	ret
  429fcc:	mov	w0, #0xfffffff4            	// #-12
  429fd0:	ldp	x20, x19, [sp, #16]
  429fd4:	ldp	x29, x30, [sp], #32
  429fd8:	ret

0000000000429fdc <builtin_kmod_exit>:
  429fdc:	stp	x29, x30, [sp, #-32]!
  429fe0:	mov	w0, #0x1                   	// #1
  429fe4:	str	x19, [sp, #16]
  429fe8:	mov	x29, sp
  429fec:	bl	40a2c0 <log_get_max_level_realm@plt>
  429ff0:	cmp	w0, #0x7
  429ff4:	b.lt	42a020 <builtin_kmod_exit+0x44>  // b.tstop
  429ff8:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  429ffc:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  42a000:	adrp	x5, 43e000 <worker_hash_op+0x9df8>
  42a004:	add	x2, x2, #0x955
  42a008:	add	x4, x4, #0x9bf
  42a00c:	add	x5, x5, #0x9d1
  42a010:	mov	w0, #0x407                 	// #1031
  42a014:	mov	w3, #0x38                  	// #56
  42a018:	mov	w1, wzr
  42a01c:	bl	40a2d0 <log_internal_realm@plt>
  42a020:	adrp	x19, 470000 <arg_resolve_name_timing>
  42a024:	ldr	x0, [x19, #88]
  42a028:	bl	40b800 <kmod_unref@plt>
  42a02c:	str	x0, [x19, #88]
  42a030:	ldr	x19, [sp, #16]
  42a034:	ldp	x29, x30, [sp], #32
  42a038:	ret

000000000042a03c <builtin_kmod_validate>:
  42a03c:	stp	x29, x30, [sp, #-16]!
  42a040:	mov	w0, #0x1                   	// #1
  42a044:	mov	x29, sp
  42a048:	bl	40a2c0 <log_get_max_level_realm@plt>
  42a04c:	cmp	w0, #0x7
  42a050:	b.lt	42a07c <builtin_kmod_validate+0x40>  // b.tstop
  42a054:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42a058:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  42a05c:	adrp	x5, 43e000 <worker_hash_op+0x9df8>
  42a060:	add	x2, x2, #0x955
  42a064:	add	x4, x4, #0x9e5
  42a068:	add	x5, x5, #0x9fb
  42a06c:	mov	w0, #0x407                 	// #1031
  42a070:	mov	w3, #0x3e                  	// #62
  42a074:	mov	w1, wzr
  42a078:	bl	40a2d0 <log_internal_realm@plt>
  42a07c:	adrp	x8, 470000 <arg_resolve_name_timing>
  42a080:	ldr	x0, [x8, #88]
  42a084:	cbz	x0, 42a094 <builtin_kmod_validate+0x58>
  42a088:	bl	40b810 <kmod_validate_resources@plt>
  42a08c:	cmp	w0, #0x0
  42a090:	cset	w0, ne  // ne = any
  42a094:	ldp	x29, x30, [sp], #16
  42a098:	ret

000000000042a09c <udev_kmod_log>:
  42a09c:	sub	sp, sp, #0x30
  42a0a0:	stp	x29, x30, [sp, #32]
  42a0a4:	ldp	q1, q0, [x6]
  42a0a8:	orr	w0, w1, #0x400
  42a0ac:	mov	x6, sp
  42a0b0:	mov	w1, wzr
  42a0b4:	add	x29, sp, #0x20
  42a0b8:	stp	q1, q0, [sp]
  42a0bc:	bl	40b820 <log_internalv_realm@plt>
  42a0c0:	ldp	x29, x30, [sp, #32]
  42a0c4:	add	sp, sp, #0x30
  42a0c8:	ret

000000000042a0cc <builtin_blkid>:
  42a0cc:	stp	x29, x30, [sp, #-96]!
  42a0d0:	stp	x28, x27, [sp, #16]
  42a0d4:	stp	x26, x25, [sp, #32]
  42a0d8:	stp	x24, x23, [sp, #48]
  42a0dc:	stp	x22, x21, [sp, #64]
  42a0e0:	stp	x20, x19, [sp, #80]
  42a0e4:	mov	x29, sp
  42a0e8:	sub	sp, sp, #0x200
  42a0ec:	str	xzr, [sp, #128]
  42a0f0:	str	xzr, [sp, #104]
  42a0f4:	adrp	x27, 46f000 <_DYNAMIC+0x208>
  42a0f8:	ldr	x27, [x27, #240]
  42a0fc:	adrp	x24, 43e000 <worker_hash_op+0x9df8>
  42a100:	adrp	x25, 46e000 <keyboard_lookup_key.wordlist+0x16bd8>
  42a104:	mov	w22, w3
  42a108:	mov	x20, x2
  42a10c:	mov	w23, w1
  42a110:	mov	x21, x0
  42a114:	mov	w26, wzr
  42a118:	add	x24, x24, #0xa46
  42a11c:	add	x25, x25, #0x5d8
  42a120:	mov	w0, w23
  42a124:	mov	x1, x20
  42a128:	mov	x2, x24
  42a12c:	mov	x3, x25
  42a130:	mov	x4, xzr
  42a134:	bl	40a290 <getopt_long@plt>
  42a138:	cmp	w0, #0x6f
  42a13c:	b.eq	42a158 <builtin_blkid+0x8c>  // b.none
  42a140:	cmn	w0, #0x1
  42a144:	b.eq	42a27c <builtin_blkid+0x1b0>  // b.none
  42a148:	cmp	w0, #0x52
  42a14c:	b.ne	42a120 <builtin_blkid+0x54>  // b.any
  42a150:	mov	w26, #0x1                   	// #1
  42a154:	b	42a120 <builtin_blkid+0x54>
  42a158:	ldr	x0, [x27]
  42a15c:	add	x1, sp, #0x68
  42a160:	bl	40b830 <safe_atolli@plt>
  42a164:	tbnz	w0, #31, 42a1cc <builtin_blkid+0x100>
  42a168:	ldr	x19, [sp, #104]
  42a16c:	tbz	x19, #63, 42a120 <builtin_blkid+0x54>
  42a170:	str	xzr, [sp, #144]
  42a174:	cbz	x21, 42a188 <builtin_blkid+0xbc>
  42a178:	mov	w0, #0x1                   	// #1
  42a17c:	bl	40a2c0 <log_get_max_level_realm@plt>
  42a180:	cmp	w0, #0x3
  42a184:	b.ge	42acc8 <builtin_blkid+0xbfc>  // b.tcont
  42a188:	mov	x6, xzr
  42a18c:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  42a190:	add	x8, x8, #0x7f
  42a194:	cmp	x6, #0x0
  42a198:	csel	x5, xzr, x8, eq  // eq = none
  42a19c:	adrp	x8, 43e000 <worker_hash_op+0x9df8>
  42a1a0:	add	x8, x8, #0xaa0
  42a1a4:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42a1a8:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  42a1ac:	mov	w1, #0x22                  	// #34
  42a1b0:	add	x2, x2, #0xa4d
  42a1b4:	add	x4, x4, #0xa6b
  42a1b8:	stp	x8, x19, [sp, #8]
  42a1bc:	mov	w0, #0x3                   	// #3
  42a1c0:	movk	w1, #0x4000, lsl #16
  42a1c4:	mov	w3, #0xf2                  	// #242
  42a1c8:	b	42a22c <builtin_blkid+0x160>
  42a1cc:	mov	w19, w0
  42a1d0:	str	xzr, [sp, #144]
  42a1d4:	cbz	x21, 42a1e8 <builtin_blkid+0x11c>
  42a1d8:	mov	w0, #0x1                   	// #1
  42a1dc:	bl	40a2c0 <log_get_max_level_realm@plt>
  42a1e0:	cmp	w0, #0x3
  42a1e4:	b.ge	42acb4 <builtin_blkid+0xbe8>  // b.tcont
  42a1e8:	mov	x6, xzr
  42a1ec:	ldr	x8, [x27]
  42a1f0:	adrp	x9, 435000 <worker_hash_op+0xdf8>
  42a1f4:	add	x9, x9, #0x7f
  42a1f8:	cmp	x6, #0x0
  42a1fc:	str	x8, [sp, #16]
  42a200:	adrp	x8, 43e000 <worker_hash_op+0x9df8>
  42a204:	add	x8, x8, #0xa79
  42a208:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42a20c:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  42a210:	csel	x5, xzr, x9, eq  // eq = none
  42a214:	add	x2, x2, #0xa4d
  42a218:	add	x4, x4, #0xa6b
  42a21c:	str	x8, [sp, #8]
  42a220:	mov	w0, #0x3                   	// #3
  42a224:	mov	w3, #0xf0                  	// #240
  42a228:	mov	w1, w19
  42a22c:	str	xzr, [sp]
  42a230:	mov	x7, xzr
  42a234:	bl	40a730 <log_object_internal@plt>
  42a238:	mov	w21, w0
  42a23c:	mov	x19, xzr
  42a240:	mov	w20, #0xffffffff            	// #-1
  42a244:	mov	w0, w20
  42a248:	bl	40a660 <safe_close@plt>
  42a24c:	cbz	x19, 42a258 <builtin_blkid+0x18c>
  42a250:	mov	x0, x19
  42a254:	bl	40b840 <blkid_free_probe@plt>
  42a258:	mov	w0, w21
  42a25c:	add	sp, sp, #0x200
  42a260:	ldp	x20, x19, [sp, #80]
  42a264:	ldp	x22, x21, [sp, #64]
  42a268:	ldp	x24, x23, [sp, #48]
  42a26c:	ldp	x26, x25, [sp, #32]
  42a270:	ldp	x28, x27, [sp, #16]
  42a274:	ldp	x29, x30, [sp], #96
  42a278:	ret
  42a27c:	bl	40a3e0 <__errno_location@plt>
  42a280:	mov	x23, x0
  42a284:	str	wzr, [x0]
  42a288:	bl	40b850 <blkid_new_probe@plt>
  42a28c:	cbz	x0, 42a3a0 <builtin_blkid+0x2d4>
  42a290:	mov	w1, #0x1ea                 	// #490
  42a294:	mov	x19, x0
  42a298:	bl	40b860 <blkid_probe_set_superblocks_flags@plt>
  42a29c:	tbz	w26, #0, 42a2b0 <builtin_blkid+0x1e4>
  42a2a0:	mov	w1, #0x1                   	// #1
  42a2a4:	mov	w2, #0x4                   	// #4
  42a2a8:	mov	x0, x19
  42a2ac:	bl	40b870 <blkid_probe_filter_superblocks_usage@plt>
  42a2b0:	add	x1, sp, #0x88
  42a2b4:	mov	x0, x21
  42a2b8:	bl	40a840 <sd_device_get_devname@plt>
  42a2bc:	tbnz	w0, #31, 42a404 <builtin_blkid+0x338>
  42a2c0:	ldr	x0, [sp, #136]
  42a2c4:	mov	w1, #0x800                 	// #2048
  42a2c8:	movk	w1, #0x8, lsl #16
  42a2cc:	bl	40a890 <open64@plt>
  42a2d0:	mov	w20, w0
  42a2d4:	tbnz	w0, #31, 42a46c <builtin_blkid+0x3a0>
  42a2d8:	str	wzr, [x23]
  42a2dc:	ldr	x2, [sp, #104]
  42a2e0:	mov	x0, x19
  42a2e4:	mov	w1, w20
  42a2e8:	mov	x3, xzr
  42a2ec:	bl	40b880 <blkid_probe_set_device@plt>
  42a2f0:	tbnz	w0, #31, 42a4cc <builtin_blkid+0x400>
  42a2f4:	str	xzr, [sp, #144]
  42a2f8:	cbz	x21, 42a30c <builtin_blkid+0x240>
  42a2fc:	mov	w0, #0x1                   	// #1
  42a300:	bl	40a2c0 <log_get_max_level_realm@plt>
  42a304:	cmp	w0, #0x7
  42a308:	b.ge	42ad08 <builtin_blkid+0xc3c>  // b.tcont
  42a30c:	mov	x6, xzr
  42a310:	ldr	x8, [sp, #136]
  42a314:	adrp	x25, 435000 <worker_hash_op+0xdf8>
  42a318:	ldr	x10, [sp, #104]
  42a31c:	add	x25, x25, #0x7f
  42a320:	cmp	x6, #0x0
  42a324:	adrp	x9, 438000 <worker_hash_op+0x3df8>
  42a328:	adrp	x11, 43e000 <worker_hash_op+0x9df8>
  42a32c:	add	x9, x9, #0xed8
  42a330:	csel	x5, xzr, x25, eq  // eq = none
  42a334:	add	x11, x11, #0xb49
  42a338:	tst	w26, #0x1
  42a33c:	str	x8, [sp, #16]
  42a340:	adrp	x8, 43e000 <worker_hash_op+0x9df8>
  42a344:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42a348:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  42a34c:	csel	x9, x11, x9, ne  // ne = any
  42a350:	add	x8, x8, #0xb25
  42a354:	add	x2, x2, #0xa4d
  42a358:	add	x4, x4, #0xa6b
  42a35c:	mov	w0, #0x7                   	// #7
  42a360:	mov	w3, #0x114                 	// #276
  42a364:	mov	w1, wzr
  42a368:	mov	x7, xzr
  42a36c:	stp	x9, x10, [sp, #24]
  42a370:	stp	xzr, x8, [sp]
  42a374:	bl	40a730 <log_object_internal@plt>
  42a378:	mov	x0, x19
  42a37c:	bl	40b890 <blkid_probe_get_fd@plt>
  42a380:	mov	w1, w0
  42a384:	add	x2, sp, #0x90
  42a388:	mov	w0, wzr
  42a38c:	bl	40b8a0 <__fxstat64@plt>
  42a390:	cbz	w0, 42a530 <builtin_blkid+0x464>
  42a394:	ldr	w8, [x23]
  42a398:	neg	w24, w8
  42a39c:	b	42a5c0 <builtin_blkid+0x4f4>
  42a3a0:	str	xzr, [sp, #144]
  42a3a4:	ldr	w8, [x23]
  42a3a8:	mov	w9, #0xc                   	// #12
  42a3ac:	cmp	w8, #0x0
  42a3b0:	csel	w19, w8, w9, gt
  42a3b4:	cbz	x21, 42a3c8 <builtin_blkid+0x2fc>
  42a3b8:	mov	w0, #0x1                   	// #1
  42a3bc:	bl	40a2c0 <log_get_max_level_realm@plt>
  42a3c0:	cmp	w0, #0x7
  42a3c4:	b.ge	42ace0 <builtin_blkid+0xc14>  // b.tcont
  42a3c8:	mov	x6, xzr
  42a3cc:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  42a3d0:	add	x8, x8, #0x7f
  42a3d4:	cmp	x6, #0x0
  42a3d8:	csel	x5, xzr, x8, eq  // eq = none
  42a3dc:	adrp	x8, 43e000 <worker_hash_op+0x9df8>
  42a3e0:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42a3e4:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  42a3e8:	add	x8, x8, #0xab7
  42a3ec:	add	x2, x2, #0xa4d
  42a3f0:	add	x4, x4, #0xa6b
  42a3f4:	mov	w0, #0x7                   	// #7
  42a3f8:	mov	w3, #0xfd                  	// #253
  42a3fc:	str	x8, [sp, #8]
  42a400:	b	42a228 <builtin_blkid+0x15c>
  42a404:	mov	w20, w0
  42a408:	str	xzr, [sp, #144]
  42a40c:	cbz	x21, 42a420 <builtin_blkid+0x354>
  42a410:	mov	w0, #0x1                   	// #1
  42a414:	bl	40a2c0 <log_get_max_level_realm@plt>
  42a418:	cmp	w0, #0x7
  42a41c:	b.ge	42acf4 <builtin_blkid+0xc28>  // b.tcont
  42a420:	mov	x6, xzr
  42a424:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  42a428:	add	x8, x8, #0x7f
  42a42c:	cmp	x6, #0x0
  42a430:	csel	x5, xzr, x8, eq  // eq = none
  42a434:	adrp	x8, 439000 <worker_hash_op+0x4df8>
  42a438:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42a43c:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  42a440:	add	x8, x8, #0x29f
  42a444:	add	x2, x2, #0xa4d
  42a448:	add	x4, x4, #0xa6b
  42a44c:	mov	w0, #0x7                   	// #7
  42a450:	mov	w3, #0x109                 	// #265
  42a454:	mov	w1, w20
  42a458:	mov	x7, xzr
  42a45c:	stp	xzr, x8, [sp]
  42a460:	bl	40a730 <log_object_internal@plt>
  42a464:	mov	w21, w0
  42a468:	b	42a240 <builtin_blkid+0x174>
  42a46c:	str	xzr, [sp, #144]
  42a470:	ldr	w22, [x23]
  42a474:	cbz	x21, 42a488 <builtin_blkid+0x3bc>
  42a478:	mov	w0, #0x1                   	// #1
  42a47c:	bl	40a2c0 <log_get_max_level_realm@plt>
  42a480:	cmp	w0, #0x7
  42a484:	b.ge	42ad1c <builtin_blkid+0xc50>  // b.tcont
  42a488:	mov	x6, xzr
  42a48c:	ldr	x8, [sp, #136]
  42a490:	adrp	x9, 435000 <worker_hash_op+0xdf8>
  42a494:	add	x9, x9, #0x7f
  42a498:	cmp	x6, #0x0
  42a49c:	str	x8, [sp, #16]
  42a4a0:	adrp	x8, 43e000 <worker_hash_op+0x9df8>
  42a4a4:	add	x8, x8, #0xad9
  42a4a8:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42a4ac:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  42a4b0:	csel	x5, xzr, x9, eq  // eq = none
  42a4b4:	add	x2, x2, #0xa4d
  42a4b8:	add	x4, x4, #0xa6b
  42a4bc:	str	x8, [sp, #8]
  42a4c0:	mov	w0, #0x7                   	// #7
  42a4c4:	mov	w3, #0x10d                 	// #269
  42a4c8:	b	42ab18 <builtin_blkid+0xa4c>
  42a4cc:	str	xzr, [sp, #144]
  42a4d0:	ldr	w8, [x23]
  42a4d4:	mov	w9, #0xc                   	// #12
  42a4d8:	cmp	w8, #0x0
  42a4dc:	csel	w22, w8, w9, gt
  42a4e0:	cbz	x21, 42a4f4 <builtin_blkid+0x428>
  42a4e4:	mov	w0, #0x1                   	// #1
  42a4e8:	bl	40a2c0 <log_get_max_level_realm@plt>
  42a4ec:	cmp	w0, #0x7
  42a4f0:	b.ge	42ad30 <builtin_blkid+0xc64>  // b.tcont
  42a4f4:	mov	x6, xzr
  42a4f8:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  42a4fc:	add	x8, x8, #0x7f
  42a500:	cmp	x6, #0x0
  42a504:	csel	x5, xzr, x8, eq  // eq = none
  42a508:	adrp	x8, 43e000 <worker_hash_op+0x9df8>
  42a50c:	add	x8, x8, #0xafc
  42a510:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42a514:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  42a518:	add	x2, x2, #0xa4d
  42a51c:	add	x4, x4, #0xa6b
  42a520:	str	x8, [sp, #8]
  42a524:	mov	w0, #0x7                   	// #7
  42a528:	mov	w3, #0x112                 	// #274
  42a52c:	b	42ab18 <builtin_blkid+0xa4c>
  42a530:	mov	w1, #0x1                   	// #1
  42a534:	mov	x0, x19
  42a538:	bl	40b8b0 <blkid_probe_enable_partitions@plt>
  42a53c:	ldr	w8, [sp, #160]
  42a540:	and	w8, w8, #0xf000
  42a544:	cmp	w8, #0x2, lsl #12
  42a548:	b.eq	42a59c <builtin_blkid+0x4d0>  // b.none
  42a54c:	mov	x0, x19
  42a550:	bl	40b8c0 <blkid_probe_get_size@plt>
  42a554:	cmp	x0, #0x168, lsl #12
  42a558:	b.gt	42a59c <builtin_blkid+0x4d0>
  42a55c:	mov	x0, x19
  42a560:	bl	40b8d0 <blkid_probe_is_wholedisk@plt>
  42a564:	cbz	w0, 42a59c <builtin_blkid+0x4d0>
  42a568:	mov	x0, x19
  42a56c:	mov	w1, wzr
  42a570:	bl	40b8e0 <blkid_probe_enable_superblocks@plt>
  42a574:	mov	x0, x19
  42a578:	bl	40b8f0 <blkid_do_fullprobe@plt>
  42a57c:	tbnz	w0, #31, 42ac60 <builtin_blkid+0xb94>
  42a580:	adrp	x1, 43e000 <worker_hash_op+0x9df8>
  42a584:	add	x1, x1, #0xbb1
  42a588:	mov	x0, x19
  42a58c:	mov	x2, xzr
  42a590:	mov	x3, xzr
  42a594:	bl	40b900 <blkid_probe_lookup_value@plt>
  42a598:	cbz	w0, 42a5c4 <builtin_blkid+0x4f8>
  42a59c:	mov	w1, #0x4                   	// #4
  42a5a0:	mov	x0, x19
  42a5a4:	bl	40b910 <blkid_probe_set_partitions_flags@plt>
  42a5a8:	mov	w1, #0x1                   	// #1
  42a5ac:	mov	x0, x19
  42a5b0:	bl	40b8e0 <blkid_probe_enable_superblocks@plt>
  42a5b4:	mov	x0, x19
  42a5b8:	bl	40b920 <blkid_do_safeprobe@plt>
  42a5bc:	mov	w24, w0
  42a5c0:	tbnz	w24, #31, 42ac64 <builtin_blkid+0xb98>
  42a5c4:	adrp	x1, 43e000 <worker_hash_op+0x9df8>
  42a5c8:	add	x1, x1, #0xb6c
  42a5cc:	add	x2, sp, #0x80
  42a5d0:	mov	x0, x21
  42a5d4:	bl	40aa50 <sd_device_get_property_value@plt>
  42a5d8:	mov	x0, x19
  42a5dc:	str	wzr, [x23]
  42a5e0:	bl	40b930 <blkid_probe_numof_values@plt>
  42a5e4:	tbnz	w0, #31, 42aac0 <builtin_blkid+0x9f4>
  42a5e8:	mov	w24, w0
  42a5ec:	cbz	w0, 42ac58 <builtin_blkid+0xb8c>
  42a5f0:	mov	w28, wzr
  42a5f4:	mov	w25, wzr
  42a5f8:	b	42a608 <builtin_blkid+0x53c>
  42a5fc:	add	w25, w25, #0x1
  42a600:	cmp	w24, w25
  42a604:	b.eq	42aa70 <builtin_blkid+0x9a4>  // b.none
  42a608:	add	x2, sp, #0x70
  42a60c:	add	x3, sp, #0x78
  42a610:	mov	x0, x19
  42a614:	mov	w1, w25
  42a618:	mov	x4, xzr
  42a61c:	bl	40b940 <blkid_probe_get_value@plt>
  42a620:	tbnz	w0, #31, 42a5fc <builtin_blkid+0x530>
  42a624:	ldp	x26, x27, [sp, #112]
  42a628:	adrp	x1, 43e000 <worker_hash_op+0x9df8>
  42a62c:	add	x1, x1, #0xbe2
  42a630:	strb	wzr, [sp, #144]
  42a634:	mov	x0, x26
  42a638:	bl	40a930 <strcmp@plt>
  42a63c:	cbz	w0, 42a784 <builtin_blkid+0x6b8>
  42a640:	adrp	x1, 43e000 <worker_hash_op+0x9df8>
  42a644:	mov	x0, x26
  42a648:	add	x1, x1, #0xbf2
  42a64c:	bl	40a930 <strcmp@plt>
  42a650:	cbz	w0, 42a79c <builtin_blkid+0x6d0>
  42a654:	adrp	x1, 43e000 <worker_hash_op+0x9df8>
  42a658:	mov	x0, x26
  42a65c:	add	x1, x1, #0xc04
  42a660:	bl	40a930 <strcmp@plt>
  42a664:	cbz	w0, 42a7b4 <builtin_blkid+0x6e8>
  42a668:	adrp	x1, 43e000 <worker_hash_op+0x9df8>
  42a66c:	mov	x0, x26
  42a670:	add	x1, x1, #0xc1a
  42a674:	bl	40a930 <strcmp@plt>
  42a678:	cbz	w0, 42a7cc <builtin_blkid+0x700>
  42a67c:	adrp	x1, 43e000 <worker_hash_op+0x9df8>
  42a680:	mov	x0, x26
  42a684:	add	x1, x1, #0xc39
  42a688:	bl	40a930 <strcmp@plt>
  42a68c:	cbz	w0, 42a820 <builtin_blkid+0x754>
  42a690:	adrp	x1, 438000 <worker_hash_op+0x3df8>
  42a694:	mov	x0, x26
  42a698:	add	x1, x1, #0x3b0
  42a69c:	bl	40a930 <strcmp@plt>
  42a6a0:	cbz	w0, 42a874 <builtin_blkid+0x7a8>
  42a6a4:	adrp	x1, 43e000 <worker_hash_op+0x9df8>
  42a6a8:	mov	x0, x26
  42a6ac:	add	x1, x1, #0xbb1
  42a6b0:	bl	40a930 <strcmp@plt>
  42a6b4:	cbz	w0, 42a8c8 <builtin_blkid+0x7fc>
  42a6b8:	adrp	x1, 43e000 <worker_hash_op+0x9df8>
  42a6bc:	mov	x0, x26
  42a6c0:	add	x1, x1, #0xc93
  42a6c4:	bl	40a930 <strcmp@plt>
  42a6c8:	cbz	w0, 42a8e0 <builtin_blkid+0x814>
  42a6cc:	adrp	x1, 43e000 <worker_hash_op+0x9df8>
  42a6d0:	mov	x0, x26
  42a6d4:	add	x1, x1, #0xcad
  42a6d8:	bl	40a930 <strcmp@plt>
  42a6dc:	cbz	w0, 42a8f8 <builtin_blkid+0x82c>
  42a6e0:	adrp	x1, 43e000 <worker_hash_op+0x9df8>
  42a6e4:	mov	x0, x26
  42a6e8:	add	x1, x1, #0xcd0
  42a6ec:	bl	40a930 <strcmp@plt>
  42a6f0:	cbz	w0, 42a920 <builtin_blkid+0x854>
  42a6f4:	adrp	x1, 43e000 <worker_hash_op+0x9df8>
  42a6f8:	mov	w2, #0xb                   	// #11
  42a6fc:	mov	x0, x26
  42a700:	add	x1, x1, #0xcf3
  42a704:	bl	40a6a0 <strncmp@plt>
  42a708:	cbz	w0, 42a948 <builtin_blkid+0x87c>
  42a70c:	adrp	x1, 43e000 <worker_hash_op+0x9df8>
  42a710:	mov	x0, x26
  42a714:	add	x1, x1, #0xd03
  42a718:	bl	40a930 <strcmp@plt>
  42a71c:	cbz	w0, 42a978 <builtin_blkid+0x8ac>
  42a720:	adrp	x1, 43e000 <worker_hash_op+0x9df8>
  42a724:	mov	x0, x26
  42a728:	add	x1, x1, #0xd1d
  42a72c:	bl	40a930 <strcmp@plt>
  42a730:	cbz	w0, 42a9a0 <builtin_blkid+0x8d4>
  42a734:	adrp	x1, 43e000 <worker_hash_op+0x9df8>
  42a738:	mov	x0, x26
  42a73c:	add	x1, x1, #0xd3d
  42a740:	bl	40a930 <strcmp@plt>
  42a744:	cbz	w0, 42a9c8 <builtin_blkid+0x8fc>
  42a748:	adrp	x1, 43e000 <worker_hash_op+0x9df8>
  42a74c:	mov	x0, x26
  42a750:	add	x1, x1, #0xd61
  42a754:	bl	40a930 <strcmp@plt>
  42a758:	cbnz	w0, 42a9f0 <builtin_blkid+0x924>
  42a75c:	add	x1, sp, #0x90
  42a760:	mov	w2, #0x100                 	// #256
  42a764:	mov	x0, x27
  42a768:	bl	40b950 <blkid_encode_string@plt>
  42a76c:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42a770:	and	w1, w22, #0x1
  42a774:	add	x3, sp, #0x90
  42a778:	mov	x0, x21
  42a77c:	add	x2, x2, #0xd70
  42a780:	b	42a9ec <builtin_blkid+0x920>
  42a784:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42a788:	and	w1, w22, #0x1
  42a78c:	mov	x0, x21
  42a790:	add	x2, x2, #0xbe7
  42a794:	mov	x3, x27
  42a798:	b	42a9ec <builtin_blkid+0x920>
  42a79c:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42a7a0:	and	w1, w22, #0x1
  42a7a4:	mov	x0, x21
  42a7a8:	add	x2, x2, #0xbf8
  42a7ac:	mov	x3, x27
  42a7b0:	b	42a9ec <builtin_blkid+0x920>
  42a7b4:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42a7b8:	and	w1, w22, #0x1
  42a7bc:	mov	x0, x21
  42a7c0:	add	x2, x2, #0xc0c
  42a7c4:	mov	x3, x27
  42a7c8:	b	42a9ec <builtin_blkid+0x920>
  42a7cc:	add	x1, sp, #0x90
  42a7d0:	mov	w2, #0x100                 	// #256
  42a7d4:	mov	x0, x27
  42a7d8:	bl	40b960 <blkid_safe_string@plt>
  42a7dc:	and	w26, w22, #0x1
  42a7e0:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42a7e4:	add	x3, sp, #0x90
  42a7e8:	mov	x0, x21
  42a7ec:	mov	w1, w26
  42a7f0:	add	x2, x2, #0xc1f
  42a7f4:	bl	420aec <udev_builtin_add_property>
  42a7f8:	add	x1, sp, #0x90
  42a7fc:	mov	w2, #0x100                 	// #256
  42a800:	mov	x0, x27
  42a804:	bl	40b950 <blkid_encode_string@plt>
  42a808:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42a80c:	add	x3, sp, #0x90
  42a810:	mov	x0, x21
  42a814:	mov	w1, w26
  42a818:	add	x2, x2, #0xc2a
  42a81c:	b	42a9ec <builtin_blkid+0x920>
  42a820:	add	x1, sp, #0x90
  42a824:	mov	w2, #0x100                 	// #256
  42a828:	mov	x0, x27
  42a82c:	bl	40b960 <blkid_safe_string@plt>
  42a830:	and	w26, w22, #0x1
  42a834:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42a838:	add	x3, sp, #0x90
  42a83c:	mov	x0, x21
  42a840:	mov	w1, w26
  42a844:	add	x2, x2, #0xc42
  42a848:	bl	420aec <udev_builtin_add_property>
  42a84c:	add	x1, sp, #0x90
  42a850:	mov	w2, #0x100                 	// #256
  42a854:	mov	x0, x27
  42a858:	bl	40b950 <blkid_encode_string@plt>
  42a85c:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42a860:	add	x3, sp, #0x90
  42a864:	mov	x0, x21
  42a868:	mov	w1, w26
  42a86c:	add	x2, x2, #0xc51
  42a870:	b	42a9ec <builtin_blkid+0x920>
  42a874:	add	x1, sp, #0x90
  42a878:	mov	w2, #0x100                 	// #256
  42a87c:	mov	x0, x27
  42a880:	bl	40b960 <blkid_safe_string@plt>
  42a884:	and	w26, w22, #0x1
  42a888:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42a88c:	add	x3, sp, #0x90
  42a890:	mov	x0, x21
  42a894:	mov	w1, w26
  42a898:	add	x2, x2, #0xc64
  42a89c:	bl	420aec <udev_builtin_add_property>
  42a8a0:	add	x1, sp, #0x90
  42a8a4:	mov	w2, #0x100                 	// #256
  42a8a8:	mov	x0, x27
  42a8ac:	bl	40b950 <blkid_encode_string@plt>
  42a8b0:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42a8b4:	add	x3, sp, #0x90
  42a8b8:	mov	x0, x21
  42a8bc:	mov	w1, w26
  42a8c0:	add	x2, x2, #0xc70
  42a8c4:	b	42a9ec <builtin_blkid+0x920>
  42a8c8:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42a8cc:	and	w1, w22, #0x1
  42a8d0:	mov	x0, x21
  42a8d4:	add	x2, x2, #0xc80
  42a8d8:	mov	x3, x27
  42a8dc:	b	42a9ec <builtin_blkid+0x920>
  42a8e0:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42a8e4:	and	w1, w22, #0x1
  42a8e8:	mov	x0, x21
  42a8ec:	add	x2, x2, #0xc9a
  42a8f0:	mov	x3, x27
  42a8f4:	b	42a9ec <builtin_blkid+0x920>
  42a8f8:	add	x1, sp, #0x90
  42a8fc:	mov	w2, #0x100                 	// #256
  42a900:	mov	x0, x27
  42a904:	bl	40b950 <blkid_encode_string@plt>
  42a908:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42a90c:	and	w1, w22, #0x1
  42a910:	add	x3, sp, #0x90
  42a914:	mov	x0, x21
  42a918:	add	x2, x2, #0xcbd
  42a91c:	b	42a9ec <builtin_blkid+0x920>
  42a920:	add	x1, sp, #0x90
  42a924:	mov	w2, #0x100                 	// #256
  42a928:	mov	x0, x27
  42a92c:	bl	40b950 <blkid_encode_string@plt>
  42a930:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42a934:	and	w1, w22, #0x1
  42a938:	add	x3, sp, #0x90
  42a93c:	mov	x0, x21
  42a940:	add	x2, x2, #0xce0
  42a944:	b	42a9ec <builtin_blkid+0x920>
  42a948:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42a94c:	add	x0, sp, #0x90
  42a950:	mov	w1, #0x100                 	// #256
  42a954:	add	x2, x2, #0xcff
  42a958:	mov	x3, x26
  42a95c:	mov	x4, xzr
  42a960:	bl	40b1a0 <strscpyl@plt>
  42a964:	and	w1, w22, #0x1
  42a968:	add	x2, sp, #0x90
  42a96c:	mov	x0, x21
  42a970:	mov	x3, x27
  42a974:	b	42a9ec <builtin_blkid+0x920>
  42a978:	add	x1, sp, #0x90
  42a97c:	mov	w2, #0x100                 	// #256
  42a980:	mov	x0, x27
  42a984:	bl	40b950 <blkid_encode_string@plt>
  42a988:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42a98c:	and	w1, w22, #0x1
  42a990:	add	x3, sp, #0x90
  42a994:	mov	x0, x21
  42a998:	add	x2, x2, #0xd0d
  42a99c:	b	42a9ec <builtin_blkid+0x920>
  42a9a0:	add	x1, sp, #0x90
  42a9a4:	mov	w2, #0x100                 	// #256
  42a9a8:	mov	x0, x27
  42a9ac:	bl	40b950 <blkid_encode_string@plt>
  42a9b0:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42a9b4:	and	w1, w22, #0x1
  42a9b8:	add	x3, sp, #0x90
  42a9bc:	mov	x0, x21
  42a9c0:	add	x2, x2, #0xd2a
  42a9c4:	b	42a9ec <builtin_blkid+0x920>
  42a9c8:	add	x1, sp, #0x90
  42a9cc:	mov	w2, #0x100                 	// #256
  42a9d0:	mov	x0, x27
  42a9d4:	bl	40b950 <blkid_encode_string@plt>
  42a9d8:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42a9dc:	and	w1, w22, #0x1
  42a9e0:	add	x3, sp, #0x90
  42a9e4:	mov	x0, x21
  42a9e8:	add	x2, x2, #0xd4c
  42a9ec:	bl	420aec <udev_builtin_add_property>
  42a9f0:	ldr	x26, [sp, #112]
  42a9f4:	adrp	x1, 43e000 <worker_hash_op+0x9df8>
  42a9f8:	add	x1, x1, #0xbb1
  42a9fc:	mov	x0, x26
  42aa00:	bl	40a930 <strcmp@plt>
  42aa04:	cbnz	w0, 42aa24 <builtin_blkid+0x958>
  42aa08:	ldr	x0, [sp, #120]
  42aa0c:	adrp	x1, 43e000 <worker_hash_op+0x9df8>
  42aa10:	add	x1, x1, #0xbb8
  42aa14:	bl	40a930 <strcmp@plt>
  42aa18:	cmp	w0, #0x0
  42aa1c:	cset	w8, eq  // eq = none
  42aa20:	orr	w28, w28, w8
  42aa24:	ldr	x27, [sp, #128]
  42aa28:	cbz	x27, 42a5fc <builtin_blkid+0x530>
  42aa2c:	adrp	x1, 43e000 <worker_hash_op+0x9df8>
  42aa30:	mov	x0, x26
  42aa34:	add	x1, x1, #0xbbc
  42aa38:	bl	40a930 <strcmp@plt>
  42aa3c:	cbnz	w0, 42a5fc <builtin_blkid+0x530>
  42aa40:	ldr	x0, [sp, #120]
  42aa44:	mov	x1, x27
  42aa48:	bl	40a930 <strcmp@plt>
  42aa4c:	cbnz	w0, 42a5fc <builtin_blkid+0x530>
  42aa50:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42aa54:	adrp	x3, 437000 <worker_hash_op+0x2df8>
  42aa58:	and	w1, w22, #0x1
  42aa5c:	mov	x0, x21
  42aa60:	add	x2, x2, #0xbcc
  42aa64:	add	x3, x3, #0xbc
  42aa68:	bl	420aec <udev_builtin_add_property>
  42aa6c:	b	42a5fc <builtin_blkid+0x530>
  42aa70:	tbz	w28, #0, 42ac58 <builtin_blkid+0xb8c>
  42aa74:	mov	x0, x19
  42aa78:	str	wzr, [x23]
  42aa7c:	bl	40b970 <blkid_probe_get_partitions@plt>
  42aa80:	cbz	x0, 42ab30 <builtin_blkid+0xa64>
  42aa84:	mov	x24, x0
  42aa88:	bl	40b980 <blkid_partlist_numof_partitions@plt>
  42aa8c:	cmp	w0, #0x1
  42aa90:	b.lt	42ab30 <builtin_blkid+0xa64>  // b.tstop
  42aa94:	adrp	x8, 442000 <hash_key_name.asso_values+0x4>
  42aa98:	ldr	q0, [x8, #560]
  42aa9c:	adrp	x9, 442000 <hash_key_name.asso_values+0x4>
  42aaa0:	mov	w25, w0
  42aaa4:	mov	w26, wzr
  42aaa8:	str	q0, [sp, #80]
  42aaac:	ldr	q0, [x9, #576]
  42aab0:	mov	x23, xzr
  42aab4:	str	wzr, [sp, #76]
  42aab8:	str	q0, [sp, #48]
  42aabc:	b	42ab6c <builtin_blkid+0xaa0>
  42aac0:	str	xzr, [sp, #144]
  42aac4:	ldr	w8, [x23]
  42aac8:	mov	w9, #0xc                   	// #12
  42aacc:	cmp	w8, #0x0
  42aad0:	csel	w22, w8, w9, gt
  42aad4:	cbz	x21, 42aae8 <builtin_blkid+0xa1c>
  42aad8:	mov	w0, #0x1                   	// #1
  42aadc:	bl	40a2c0 <log_get_max_level_realm@plt>
  42aae0:	cmp	w0, #0x7
  42aae4:	b.ge	42ad58 <builtin_blkid+0xc8c>  // b.tcont
  42aae8:	mov	x6, xzr
  42aaec:	cmp	x6, #0x0
  42aaf0:	adrp	x8, 43e000 <worker_hash_op+0x9df8>
  42aaf4:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42aaf8:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  42aafc:	csel	x5, xzr, x25, eq  // eq = none
  42ab00:	add	x8, x8, #0xb87
  42ab04:	add	x2, x2, #0xa4d
  42ab08:	add	x4, x4, #0xa6b
  42ab0c:	mov	w0, #0x7                   	// #7
  42ab10:	mov	w3, #0x120                 	// #288
  42ab14:	str	x8, [sp, #8]
  42ab18:	mov	w1, w22
  42ab1c:	str	xzr, [sp]
  42ab20:	mov	x7, xzr
  42ab24:	bl	40a730 <log_object_internal@plt>
  42ab28:	mov	w21, w0
  42ab2c:	b	42a244 <builtin_blkid+0x178>
  42ab30:	mov	x23, xzr
  42ab34:	b	42ac50 <builtin_blkid+0xb84>
  42ab38:	ldp	x8, x9, [sp, #144]
  42ab3c:	ldp	x10, x11, [x29, #-104]
  42ab40:	eor	x8, x8, x10
  42ab44:	eor	x9, x9, x11
  42ab48:	orr	x8, x8, x9
  42ab4c:	ldr	w9, [sp, #76]
  42ab50:	cmp	x8, #0x0
  42ab54:	cset	w8, eq  // eq = none
  42ab58:	orr	w9, w9, w8
  42ab5c:	str	w9, [sp, #76]
  42ab60:	add	w26, w26, #0x1
  42ab64:	cmp	w25, w26
  42ab68:	b.eq	42ac24 <builtin_blkid+0xb58>  // b.none
  42ab6c:	mov	x0, x24
  42ab70:	mov	w1, w26
  42ab74:	bl	40b990 <blkid_partlist_get_partition@plt>
  42ab78:	cbz	x0, 42ab60 <builtin_blkid+0xa94>
  42ab7c:	mov	x28, x0
  42ab80:	bl	40b9a0 <blkid_partition_get_uuid@plt>
  42ab84:	cbz	x0, 42ab60 <builtin_blkid+0xa94>
  42ab88:	mov	x27, x0
  42ab8c:	mov	x0, x28
  42ab90:	bl	40b9b0 <blkid_partition_get_type_string@plt>
  42ab94:	cbz	x0, 42ab60 <builtin_blkid+0xa94>
  42ab98:	sub	x1, x29, #0x58
  42ab9c:	bl	40b9c0 <sd_id128_from_string@plt>
  42aba0:	tbnz	w0, #31, 42ab60 <builtin_blkid+0xa94>
  42aba4:	ldr	q0, [sp, #80]
  42aba8:	ldp	x8, x9, [x29, #-88]
  42abac:	str	q0, [sp, #144]
  42abb0:	ldp	x10, x11, [sp, #144]
  42abb4:	eor	x10, x8, x10
  42abb8:	eor	x11, x9, x11
  42abbc:	orr	x10, x10, x11
  42abc0:	cbz	x10, 42ac04 <builtin_blkid+0xb38>
  42abc4:	ldr	q0, [sp, #48]
  42abc8:	str	q0, [sp, #144]
  42abcc:	ldp	x10, x11, [sp, #144]
  42abd0:	eor	x8, x8, x10
  42abd4:	eor	x9, x9, x11
  42abd8:	orr	x8, x8, x9
  42abdc:	cbnz	x8, 42ab60 <builtin_blkid+0xa94>
  42abe0:	mov	x0, x28
  42abe4:	bl	40b9d0 <blkid_partition_get_flags@plt>
  42abe8:	tbnz	x0, #63, 42ab60 <builtin_blkid+0xa94>
  42abec:	cbnz	x23, 42ab60 <builtin_blkid+0xa94>
  42abf0:	mov	x0, x27
  42abf4:	bl	40a810 <strdup@plt>
  42abf8:	mov	x23, x0
  42abfc:	cbnz	x0, 42ab60 <builtin_blkid+0xa94>
  42ac00:	b	42ac50 <builtin_blkid+0xb84>
  42ac04:	add	x1, sp, #0x90
  42ac08:	mov	x0, x27
  42ac0c:	bl	40b9c0 <sd_id128_from_string@plt>
  42ac10:	tbnz	w0, #31, 42ab60 <builtin_blkid+0xa94>
  42ac14:	sub	x0, x29, #0x68
  42ac18:	bl	40b9e0 <efi_loader_get_device_part_uuid@plt>
  42ac1c:	tbz	w0, #31, 42ab38 <builtin_blkid+0xa6c>
  42ac20:	b	42ac50 <builtin_blkid+0xb84>
  42ac24:	ldr	w9, [sp, #76]
  42ac28:	cmp	x23, #0x0
  42ac2c:	cset	w8, eq  // eq = none
  42ac30:	orn	w8, w8, w9
  42ac34:	tbnz	w8, #0, 42ac50 <builtin_blkid+0xb84>
  42ac38:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42ac3c:	and	w1, w22, #0x1
  42ac40:	add	x2, x2, #0xb6c
  42ac44:	mov	x0, x21
  42ac48:	mov	x3, x23
  42ac4c:	bl	420aec <udev_builtin_add_property>
  42ac50:	mov	x0, x23
  42ac54:	bl	40a320 <free@plt>
  42ac58:	mov	w21, wzr
  42ac5c:	b	42a244 <builtin_blkid+0x178>
  42ac60:	mov	w24, w0
  42ac64:	str	xzr, [sp, #144]
  42ac68:	cbz	x21, 42ac7c <builtin_blkid+0xbb0>
  42ac6c:	mov	w0, #0x1                   	// #1
  42ac70:	bl	40a2c0 <log_get_max_level_realm@plt>
  42ac74:	cmp	w0, #0x7
  42ac78:	b.ge	42ad44 <builtin_blkid+0xc78>  // b.tcont
  42ac7c:	mov	x6, xzr
  42ac80:	adrp	x8, 43e000 <worker_hash_op+0x9df8>
  42ac84:	cmp	x6, #0x0
  42ac88:	add	x8, x8, #0xb4c
  42ac8c:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42ac90:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  42ac94:	csel	x5, xzr, x25, eq  // eq = none
  42ac98:	add	x2, x2, #0xa4d
  42ac9c:	add	x4, x4, #0xa6b
  42aca0:	stp	xzr, x8, [sp]
  42aca4:	mov	w0, #0x7                   	// #7
  42aca8:	mov	w3, #0x118                 	// #280
  42acac:	mov	w1, w24
  42acb0:	b	42ab20 <builtin_blkid+0xa54>
  42acb4:	add	x1, sp, #0x90
  42acb8:	mov	x0, x21
  42acbc:	bl	40a780 <sd_device_get_sysname@plt>
  42acc0:	ldr	x6, [sp, #144]
  42acc4:	b	42a1ec <builtin_blkid+0x120>
  42acc8:	add	x1, sp, #0x90
  42accc:	mov	x0, x21
  42acd0:	bl	40a780 <sd_device_get_sysname@plt>
  42acd4:	ldr	x6, [sp, #144]
  42acd8:	ldr	x19, [sp, #104]
  42acdc:	b	42a18c <builtin_blkid+0xc0>
  42ace0:	add	x1, sp, #0x90
  42ace4:	mov	x0, x21
  42ace8:	bl	40a780 <sd_device_get_sysname@plt>
  42acec:	ldr	x6, [sp, #144]
  42acf0:	b	42a3cc <builtin_blkid+0x300>
  42acf4:	add	x1, sp, #0x90
  42acf8:	mov	x0, x21
  42acfc:	bl	40a780 <sd_device_get_sysname@plt>
  42ad00:	ldr	x6, [sp, #144]
  42ad04:	b	42a424 <builtin_blkid+0x358>
  42ad08:	add	x1, sp, #0x90
  42ad0c:	mov	x0, x21
  42ad10:	bl	40a780 <sd_device_get_sysname@plt>
  42ad14:	ldr	x6, [sp, #144]
  42ad18:	b	42a310 <builtin_blkid+0x244>
  42ad1c:	add	x1, sp, #0x90
  42ad20:	mov	x0, x21
  42ad24:	bl	40a780 <sd_device_get_sysname@plt>
  42ad28:	ldr	x6, [sp, #144]
  42ad2c:	b	42a48c <builtin_blkid+0x3c0>
  42ad30:	add	x1, sp, #0x90
  42ad34:	mov	x0, x21
  42ad38:	bl	40a780 <sd_device_get_sysname@plt>
  42ad3c:	ldr	x6, [sp, #144]
  42ad40:	b	42a4f8 <builtin_blkid+0x42c>
  42ad44:	add	x1, sp, #0x90
  42ad48:	mov	x0, x21
  42ad4c:	bl	40a780 <sd_device_get_sysname@plt>
  42ad50:	ldr	x6, [sp, #144]
  42ad54:	b	42ac80 <builtin_blkid+0xbb4>
  42ad58:	add	x1, sp, #0x90
  42ad5c:	mov	x0, x21
  42ad60:	bl	40a780 <sd_device_get_sysname@plt>
  42ad64:	ldr	x6, [sp, #144]
  42ad68:	b	42aaec <builtin_blkid+0xa20>

000000000042ad6c <builtin_uaccess>:
  42ad6c:	sub	sp, sp, #0x70
  42ad70:	stp	x29, x30, [sp, #64]
  42ad74:	stp	x20, x19, [sp, #96]
  42ad78:	add	x29, sp, #0x40
  42ad7c:	mov	x19, x0
  42ad80:	mov	w0, #0x12                  	// #18
  42ad84:	stp	x22, x21, [sp, #80]
  42ad88:	stur	xzr, [x29, #-8]
  42ad8c:	bl	40a3b0 <umask@plt>
  42ad90:	adrp	x0, 43e000 <worker_hash_op+0x9df8>
  42ad94:	add	x0, x0, #0xe31
  42ad98:	mov	w1, wzr
  42ad9c:	bl	40b9f0 <access@plt>
  42ada0:	tbnz	w0, #31, 42ae6c <builtin_uaccess+0x100>
  42ada4:	sub	x1, x29, #0x8
  42ada8:	mov	x0, x19
  42adac:	bl	40a840 <sd_device_get_devname@plt>
  42adb0:	tbnz	w0, #31, 42ae74 <builtin_uaccess+0x108>
  42adb4:	adrp	x1, 43e000 <worker_hash_op+0x9df8>
  42adb8:	add	x1, x1, #0xddc
  42adbc:	sub	x2, x29, #0x10
  42adc0:	mov	x0, x19
  42adc4:	bl	40aa50 <sd_device_get_property_value@plt>
  42adc8:	tbnz	w0, #31, 42af00 <builtin_uaccess+0x194>
  42adcc:	ldur	x0, [x29, #-16]
  42add0:	sub	x2, x29, #0x14
  42add4:	mov	x1, xzr
  42add8:	bl	42d130 <sd_seat_get_active>
  42addc:	tbnz	w0, #31, 42af1c <builtin_uaccess+0x1b0>
  42ade0:	ldur	x0, [x29, #-8]
  42ade4:	ldur	w5, [x29, #-20]
  42ade8:	mov	w1, #0x1                   	// #1
  42adec:	mov	w4, #0x1                   	// #1
  42adf0:	mov	w2, wzr
  42adf4:	mov	w3, wzr
  42adf8:	bl	42b06c <devnode_acl>
  42adfc:	mov	w20, w0
  42ae00:	mov	w0, wzr
  42ae04:	tbz	w20, #31, 42b008 <builtin_uaccess+0x29c>
  42ae08:	cmn	w20, #0x2
  42ae0c:	mov	w8, #0x3                   	// #3
  42ae10:	mov	w9, #0x7                   	// #7
  42ae14:	csel	w21, w9, w8, eq  // eq = none
  42ae18:	str	xzr, [sp, #32]
  42ae1c:	cbz	x19, 42ae30 <builtin_uaccess+0xc4>
  42ae20:	mov	w0, #0x1                   	// #1
  42ae24:	bl	40a2c0 <log_get_max_level_realm@plt>
  42ae28:	cmp	w0, w21
  42ae2c:	b.ge	42b044 <builtin_uaccess+0x2d8>  // b.tcont
  42ae30:	mov	x6, xzr
  42ae34:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  42ae38:	add	x8, x8, #0x7f
  42ae3c:	cmp	x6, #0x0
  42ae40:	csel	x5, xzr, x8, eq  // eq = none
  42ae44:	adrp	x8, 43e000 <worker_hash_op+0x9df8>
  42ae48:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42ae4c:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  42ae50:	add	x8, x8, #0xe19
  42ae54:	add	x2, x2, #0xdac
  42ae58:	add	x4, x4, #0xdcc
  42ae5c:	mov	w3, #0x35                  	// #53
  42ae60:	mov	w0, w21
  42ae64:	stp	xzr, x8, [sp]
  42ae68:	b	42aec8 <builtin_uaccess+0x15c>
  42ae6c:	mov	w0, wzr
  42ae70:	b	42b008 <builtin_uaccess+0x29c>
  42ae74:	mov	w20, w0
  42ae78:	stur	xzr, [x29, #-16]
  42ae7c:	cbz	x19, 42ae90 <builtin_uaccess+0x124>
  42ae80:	mov	w0, #0x1                   	// #1
  42ae84:	bl	40a2c0 <log_get_max_level_realm@plt>
  42ae88:	cmp	w0, #0x3
  42ae8c:	b.ge	42b01c <builtin_uaccess+0x2b0>  // b.tcont
  42ae90:	mov	x6, xzr
  42ae94:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  42ae98:	add	x8, x8, #0x7f
  42ae9c:	cmp	x6, #0x0
  42aea0:	csel	x5, xzr, x8, eq  // eq = none
  42aea4:	adrp	x8, 439000 <worker_hash_op+0x4df8>
  42aea8:	add	x8, x8, #0x29f
  42aeac:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42aeb0:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  42aeb4:	add	x2, x2, #0xdac
  42aeb8:	add	x4, x4, #0xdcc
  42aebc:	stp	xzr, x8, [sp]
  42aec0:	mov	w0, #0x3                   	// #3
  42aec4:	mov	w3, #0x21                  	// #33
  42aec8:	mov	w1, w20
  42aecc:	mov	x7, xzr
  42aed0:	bl	40a730 <log_object_internal@plt>
  42aed4:	ldur	x0, [x29, #-8]
  42aed8:	cbz	x0, 42aef8 <builtin_uaccess+0x18c>
  42aedc:	mov	w1, #0x1                   	// #1
  42aee0:	mov	w2, wzr
  42aee4:	mov	w3, wzr
  42aee8:	mov	w4, wzr
  42aeec:	mov	w5, wzr
  42aef0:	bl	42b06c <devnode_acl>
  42aef4:	tbnz	w0, #31, 42af90 <builtin_uaccess+0x224>
  42aef8:	mov	w0, w20
  42aefc:	b	42b008 <builtin_uaccess+0x29c>
  42af00:	adrp	x0, 43e000 <worker_hash_op+0x9df8>
  42af04:	add	x0, x0, #0xde4
  42af08:	stur	x0, [x29, #-16]
  42af0c:	sub	x2, x29, #0x14
  42af10:	mov	x1, xzr
  42af14:	bl	42d130 <sd_seat_get_active>
  42af18:	tbz	w0, #31, 42ade0 <builtin_uaccess+0x74>
  42af1c:	cmn	w0, #0x3d
  42af20:	mov	w20, wzr
  42af24:	b.eq	42aed4 <builtin_uaccess+0x168>  // b.none
  42af28:	cmn	w0, #0x6
  42af2c:	b.eq	42aed4 <builtin_uaccess+0x168>  // b.none
  42af30:	mov	w20, w0
  42af34:	str	xzr, [sp, #32]
  42af38:	cbz	x19, 42af4c <builtin_uaccess+0x1e0>
  42af3c:	mov	w0, #0x1                   	// #1
  42af40:	bl	40a2c0 <log_get_max_level_realm@plt>
  42af44:	cmp	w0, #0x3
  42af48:	b.ge	42b058 <builtin_uaccess+0x2ec>  // b.tcont
  42af4c:	mov	x6, xzr
  42af50:	ldur	x8, [x29, #-16]
  42af54:	adrp	x9, 435000 <worker_hash_op+0xdf8>
  42af58:	add	x9, x9, #0x7f
  42af5c:	cmp	x6, #0x0
  42af60:	str	x8, [sp, #16]
  42af64:	adrp	x8, 43e000 <worker_hash_op+0x9df8>
  42af68:	add	x8, x8, #0xdea
  42af6c:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42af70:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  42af74:	csel	x5, xzr, x9, eq  // eq = none
  42af78:	add	x2, x2, #0xdac
  42af7c:	add	x4, x4, #0xdcc
  42af80:	stp	xzr, x8, [sp]
  42af84:	mov	w0, #0x3                   	// #3
  42af88:	mov	w3, #0x2e                  	// #46
  42af8c:	b	42aec8 <builtin_uaccess+0x15c>
  42af90:	cmn	w0, #0x2
  42af94:	mov	w8, #0x3                   	// #3
  42af98:	mov	w9, #0x7                   	// #7
  42af9c:	mov	w21, w0
  42afa0:	csel	w22, w9, w8, eq  // eq = none
  42afa4:	str	xzr, [sp, #32]
  42afa8:	cbz	x19, 42afbc <builtin_uaccess+0x250>
  42afac:	mov	w0, #0x1                   	// #1
  42afb0:	bl	40a2c0 <log_get_max_level_realm@plt>
  42afb4:	cmp	w0, w22
  42afb8:	b.ge	42b030 <builtin_uaccess+0x2c4>  // b.tcont
  42afbc:	mov	x6, xzr
  42afc0:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  42afc4:	add	x8, x8, #0x7f
  42afc8:	cmp	x6, #0x0
  42afcc:	csel	x5, xzr, x8, eq  // eq = none
  42afd0:	adrp	x8, 43e000 <worker_hash_op+0x9df8>
  42afd4:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42afd8:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  42afdc:	add	x8, x8, #0xe19
  42afe0:	add	x2, x2, #0xdac
  42afe4:	add	x4, x4, #0xdcc
  42afe8:	mov	w3, #0x43                  	// #67
  42afec:	mov	w0, w22
  42aff0:	mov	w1, w21
  42aff4:	mov	x7, xzr
  42aff8:	stp	xzr, x8, [sp]
  42affc:	bl	40a730 <log_object_internal@plt>
  42b000:	cmp	w20, #0x0
  42b004:	csel	w0, w21, w20, ge  // ge = tcont
  42b008:	ldp	x20, x19, [sp, #96]
  42b00c:	ldp	x22, x21, [sp, #80]
  42b010:	ldp	x29, x30, [sp, #64]
  42b014:	add	sp, sp, #0x70
  42b018:	ret
  42b01c:	sub	x1, x29, #0x10
  42b020:	mov	x0, x19
  42b024:	bl	40a780 <sd_device_get_sysname@plt>
  42b028:	ldur	x6, [x29, #-16]
  42b02c:	b	42ae94 <builtin_uaccess+0x128>
  42b030:	add	x1, sp, #0x20
  42b034:	mov	x0, x19
  42b038:	bl	40a780 <sd_device_get_sysname@plt>
  42b03c:	ldr	x6, [sp, #32]
  42b040:	b	42afc0 <builtin_uaccess+0x254>
  42b044:	add	x1, sp, #0x20
  42b048:	mov	x0, x19
  42b04c:	bl	40a780 <sd_device_get_sysname@plt>
  42b050:	ldr	x6, [sp, #32]
  42b054:	b	42ae34 <builtin_uaccess+0xc8>
  42b058:	add	x1, sp, #0x20
  42b05c:	mov	x0, x19
  42b060:	bl	40a780 <sd_device_get_sysname@plt>
  42b064:	ldr	x6, [sp, #32]
  42b068:	b	42af50 <builtin_uaccess+0x1e4>

000000000042b06c <devnode_acl>:
  42b06c:	sub	sp, sp, #0x70
  42b070:	stp	x29, x30, [sp, #32]
  42b074:	add	x29, sp, #0x20
  42b078:	str	x25, [sp, #48]
  42b07c:	stp	x24, x23, [sp, #64]
  42b080:	stp	x22, x21, [sp, #80]
  42b084:	stp	x20, x19, [sp, #96]
  42b088:	stur	w5, [x29, #-4]
  42b08c:	cbz	x0, 42b2c8 <devnode_acl+0x25c>
  42b090:	mov	w21, w1
  42b094:	mov	w1, #0x8000                	// #32768
  42b098:	mov	w20, w4
  42b09c:	mov	w23, w3
  42b0a0:	mov	w24, w2
  42b0a4:	mov	x19, x0
  42b0a8:	bl	40ba00 <acl_get_file@plt>
  42b0ac:	str	x0, [sp, #16]
  42b0b0:	cbz	x0, 42b128 <devnode_acl+0xbc>
  42b0b4:	mov	x22, x0
  42b0b8:	tbz	w21, #0, 42b138 <devnode_acl+0xcc>
  42b0bc:	add	x2, x29, #0x18
  42b0c0:	mov	x0, x22
  42b0c4:	mov	w1, wzr
  42b0c8:	bl	40ba10 <acl_get_entry@plt>
  42b0cc:	cmp	w0, #0x1
  42b0d0:	b.lt	42b184 <devnode_acl+0x118>  // b.tstop
  42b0d4:	mov	w21, wzr
  42b0d8:	b	42b0f8 <devnode_acl+0x8c>
  42b0dc:	mov	w21, #0x1                   	// #1
  42b0e0:	add	x2, x29, #0x18
  42b0e4:	mov	w1, #0x1                   	// #1
  42b0e8:	mov	x0, x22
  42b0ec:	bl	40ba10 <acl_get_entry@plt>
  42b0f0:	cmp	w0, #0x0
  42b0f4:	b.le	42b188 <devnode_acl+0x11c>
  42b0f8:	ldr	x0, [x29, #24]
  42b0fc:	add	x1, sp, #0x8
  42b100:	bl	40ba20 <acl_get_tag_type@plt>
  42b104:	tbnz	w0, #31, 42b194 <devnode_acl+0x128>
  42b108:	ldr	w8, [sp, #8]
  42b10c:	cmp	w8, #0x2
  42b110:	b.ne	42b0e0 <devnode_acl+0x74>  // b.any
  42b114:	ldr	x1, [x29, #24]
  42b118:	mov	x0, x22
  42b11c:	bl	40ba30 <acl_delete_entry@plt>
  42b120:	tbz	w0, #31, 42b0dc <devnode_acl+0x70>
  42b124:	b	42b194 <devnode_acl+0x128>
  42b128:	bl	40a3e0 <__errno_location@plt>
  42b12c:	ldr	w8, [x0]
  42b130:	neg	w21, w8
  42b134:	b	42b2a8 <devnode_acl+0x23c>
  42b138:	mov	w25, wzr
  42b13c:	mov	w21, wzr
  42b140:	cbz	w23, 42b1b0 <devnode_acl+0x144>
  42b144:	tbz	w24, #0, 42b1b0 <devnode_acl+0x144>
  42b148:	add	x2, x29, #0x18
  42b14c:	mov	x0, x22
  42b150:	mov	w1, w23
  42b154:	bl	40ba40 <acl_find_uid@plt>
  42b158:	mov	w21, w0
  42b15c:	tbnz	w0, #31, 42b2a0 <devnode_acl+0x234>
  42b160:	cbz	w21, 42b24c <devnode_acl+0x1e0>
  42b164:	ldr	x0, [sp, #16]
  42b168:	ldr	x1, [x29, #24]
  42b16c:	bl	40ba30 <acl_delete_entry@plt>
  42b170:	tbnz	w0, #31, 42b294 <devnode_acl+0x228>
  42b174:	mov	w25, #0x1                   	// #1
  42b178:	ldur	w1, [x29, #-4]
  42b17c:	cbnz	w1, 42b1b8 <devnode_acl+0x14c>
  42b180:	b	42b258 <devnode_acl+0x1ec>
  42b184:	mov	w21, wzr
  42b188:	tbnz	w0, #31, 42b194 <devnode_acl+0x128>
  42b18c:	and	w21, w21, #0x1
  42b190:	b	42b1a8 <devnode_acl+0x13c>
  42b194:	bl	40a3e0 <__errno_location@plt>
  42b198:	ldr	w8, [x0]
  42b19c:	cmp	w8, #0x0
  42b1a0:	neg	w21, w8
  42b1a4:	b.gt	42b2a0 <devnode_acl+0x234>
  42b1a8:	cmp	w21, #0x0
  42b1ac:	cset	w25, ne  // ne = any
  42b1b0:	ldur	w1, [x29, #-4]
  42b1b4:	cbz	w1, 42b258 <devnode_acl+0x1ec>
  42b1b8:	tbz	w20, #0, 42b258 <devnode_acl+0x1ec>
  42b1bc:	ldr	x0, [sp, #16]
  42b1c0:	add	x2, x29, #0x18
  42b1c4:	bl	40ba40 <acl_find_uid@plt>
  42b1c8:	mov	w21, w0
  42b1cc:	tbnz	w0, #31, 42b2a0 <devnode_acl+0x234>
  42b1d0:	cbz	w21, 42b218 <devnode_acl+0x1ac>
  42b1d4:	ldr	x0, [x29, #24]
  42b1d8:	add	x1, sp, #0x8
  42b1dc:	bl	40ba50 <acl_get_permset@plt>
  42b1e0:	tbnz	w0, #31, 42b294 <devnode_acl+0x228>
  42b1e4:	ldr	x0, [sp, #8]
  42b1e8:	mov	w1, #0x4                   	// #4
  42b1ec:	bl	40ba60 <acl_get_perm@plt>
  42b1f0:	tbnz	w0, #31, 42b294 <devnode_acl+0x228>
  42b1f4:	mov	w20, w0
  42b1f8:	ldr	x0, [sp, #8]
  42b1fc:	mov	w1, #0x2                   	// #2
  42b200:	bl	40ba60 <acl_get_perm@plt>
  42b204:	tbnz	w0, #31, 42b294 <devnode_acl+0x228>
  42b208:	cbz	w20, 42b284 <devnode_acl+0x218>
  42b20c:	cbz	w0, 42b284 <devnode_acl+0x218>
  42b210:	tbnz	w25, #0, 42b25c <devnode_acl+0x1f0>
  42b214:	b	42b2a0 <devnode_acl+0x234>
  42b218:	add	x0, sp, #0x10
  42b21c:	add	x1, x29, #0x18
  42b220:	bl	40ba70 <acl_create_entry@plt>
  42b224:	tbnz	w0, #31, 42b294 <devnode_acl+0x228>
  42b228:	ldr	x0, [x29, #24]
  42b22c:	mov	w1, #0x2                   	// #2
  42b230:	bl	40ba80 <acl_set_tag_type@plt>
  42b234:	tbnz	w0, #31, 42b294 <devnode_acl+0x228>
  42b238:	ldr	x0, [x29, #24]
  42b23c:	sub	x1, x29, #0x4
  42b240:	bl	40ba90 <acl_set_qualifier@plt>
  42b244:	tbz	w0, #31, 42b1d4 <devnode_acl+0x168>
  42b248:	b	42b294 <devnode_acl+0x228>
  42b24c:	mov	w25, wzr
  42b250:	ldur	w1, [x29, #-4]
  42b254:	cbnz	w1, 42b1b8 <devnode_acl+0x14c>
  42b258:	cbz	w25, 42b2a0 <devnode_acl+0x234>
  42b25c:	add	x0, sp, #0x10
  42b260:	bl	40baa0 <acl_calc_mask@plt>
  42b264:	tbnz	w0, #31, 42b294 <devnode_acl+0x228>
  42b268:	ldr	x2, [sp, #16]
  42b26c:	mov	w1, #0x8000                	// #32768
  42b270:	mov	x0, x19
  42b274:	bl	40bab0 <acl_set_file@plt>
  42b278:	tbnz	w0, #31, 42b294 <devnode_acl+0x228>
  42b27c:	mov	w21, wzr
  42b280:	b	42b2a0 <devnode_acl+0x234>
  42b284:	ldr	x0, [sp, #8]
  42b288:	mov	w1, #0x6                   	// #6
  42b28c:	bl	40bac0 <acl_add_perm@plt>
  42b290:	tbz	w0, #31, 42b25c <devnode_acl+0x1f0>
  42b294:	bl	40a3e0 <__errno_location@plt>
  42b298:	ldr	w8, [x0]
  42b29c:	neg	w21, w8
  42b2a0:	ldr	x0, [sp, #16]
  42b2a4:	bl	40bad0 <acl_free@plt>
  42b2a8:	mov	w0, w21
  42b2ac:	ldp	x20, x19, [sp, #96]
  42b2b0:	ldp	x22, x21, [sp, #80]
  42b2b4:	ldp	x24, x23, [sp, #64]
  42b2b8:	ldr	x25, [sp, #48]
  42b2bc:	ldp	x29, x30, [sp, #32]
  42b2c0:	add	sp, sp, #0x70
  42b2c4:	ret
  42b2c8:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  42b2cc:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42b2d0:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  42b2d4:	add	x1, x1, #0x5d9
  42b2d8:	add	x2, x2, #0xe48
  42b2dc:	add	x4, x4, #0xe5f
  42b2e0:	mov	w0, #0x1                   	// #1
  42b2e4:	mov	w3, #0x3b                  	// #59
  42b2e8:	bl	40a630 <log_assert_failed_realm@plt>

000000000042b2ec <devnode_acl_all>:
  42b2ec:	sub	sp, sp, #0xc0
  42b2f0:	stp	x29, x30, [sp, #96]
  42b2f4:	add	x29, sp, #0x60
  42b2f8:	stp	x28, x27, [sp, #112]
  42b2fc:	stp	x26, x25, [sp, #128]
  42b300:	stp	x24, x23, [sp, #144]
  42b304:	stp	x22, x21, [sp, #160]
  42b308:	stp	x20, x19, [sp, #176]
  42b30c:	str	w4, [sp, #36]
  42b310:	mov	x24, x0
  42b314:	stur	xzr, [x29, #-8]
  42b318:	adrp	x0, 46f000 <_DYNAMIC+0x208>
  42b31c:	ldr	x0, [x0, #264]
  42b320:	mov	w20, w5
  42b324:	mov	w22, w3
  42b328:	mov	w23, w2
  42b32c:	mov	w21, w1
  42b330:	bl	40bae0 <internal_set_new@plt>
  42b334:	mov	x19, x0
  42b338:	cbz	x0, 42b48c <devnode_acl_all+0x1a0>
  42b33c:	sub	x0, x29, #0x8
  42b340:	bl	40a8d0 <sd_device_enumerator_new@plt>
  42b344:	tbnz	w0, #31, 42b484 <devnode_acl_all+0x198>
  42b348:	cbz	x24, 42b354 <devnode_acl_all+0x68>
  42b34c:	ldrb	w8, [x24]
  42b350:	cbnz	w8, 42b35c <devnode_acl_all+0x70>
  42b354:	adrp	x24, 43e000 <worker_hash_op+0x9df8>
  42b358:	add	x24, x24, #0xde4
  42b35c:	ldur	x0, [x29, #-8]
  42b360:	adrp	x1, 43e000 <worker_hash_op+0x9df8>
  42b364:	add	x1, x1, #0xd85
  42b368:	bl	40baf0 <sd_device_enumerator_add_match_tag@plt>
  42b36c:	tbnz	w0, #31, 42b484 <devnode_acl_all+0x198>
  42b370:	ldur	x0, [x29, #-8]
  42b374:	bl	40a910 <sd_device_enumerator_get_device_first@plt>
  42b378:	cbz	x0, 42b494 <devnode_acl_all+0x1a8>
  42b37c:	adrp	x26, 43e000 <worker_hash_op+0x9df8>
  42b380:	adrp	x28, 43e000 <worker_hash_op+0x9df8>
  42b384:	adrp	x25, 43e000 <worker_hash_op+0x9df8>
  42b388:	mov	x27, x0
  42b38c:	add	x26, x26, #0xddc
  42b390:	add	x28, x28, #0xde4
  42b394:	add	x25, x25, #0xea0
  42b398:	b	42b3c0 <devnode_acl_all+0xd4>
  42b39c:	mov	x1, x28
  42b3a0:	str	x28, [sp, #48]
  42b3a4:	mov	x0, x24
  42b3a8:	bl	40a930 <strcmp@plt>
  42b3ac:	cbz	w0, 42b3f0 <devnode_acl_all+0x104>
  42b3b0:	ldur	x0, [x29, #-8]
  42b3b4:	bl	40a920 <sd_device_enumerator_get_device_next@plt>
  42b3b8:	mov	x27, x0
  42b3bc:	cbz	x0, 42b494 <devnode_acl_all+0x1a8>
  42b3c0:	add	x2, sp, #0x30
  42b3c4:	mov	x0, x27
  42b3c8:	mov	x1, x26
  42b3cc:	bl	40aa50 <sd_device_get_property_value@plt>
  42b3d0:	tbnz	w0, #31, 42b39c <devnode_acl_all+0xb0>
  42b3d4:	ldr	x1, [sp, #48]
  42b3d8:	cbz	x1, 42b39c <devnode_acl_all+0xb0>
  42b3dc:	ldrb	w8, [x1]
  42b3e0:	cbz	w8, 42b39c <devnode_acl_all+0xb0>
  42b3e4:	mov	x0, x24
  42b3e8:	bl	40a930 <strcmp@plt>
  42b3ec:	cbnz	w0, 42b3b0 <devnode_acl_all+0xc4>
  42b3f0:	sub	x1, x29, #0x28
  42b3f4:	mov	x0, x27
  42b3f8:	bl	40a840 <sd_device_get_devname@plt>
  42b3fc:	tbnz	w0, #31, 42b3b0 <devnode_acl_all+0xc4>
  42b400:	mov	w0, #0x1                   	// #1
  42b404:	str	xzr, [sp, #40]
  42b408:	bl	40a2c0 <log_get_max_level_realm@plt>
  42b40c:	cmp	w0, #0x7
  42b410:	mov	x6, xzr
  42b414:	b.ge	42b470 <devnode_acl_all+0x184>  // b.tcont
  42b418:	ldur	x8, [x29, #-40]
  42b41c:	adrp	x9, 435000 <worker_hash_op+0xdf8>
  42b420:	cmp	x6, #0x0
  42b424:	add	x9, x9, #0x7f
  42b428:	stp	x8, x24, [sp, #16]
  42b42c:	adrp	x8, 43e000 <worker_hash_op+0x9df8>
  42b430:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42b434:	csel	x5, xzr, x9, eq  // eq = none
  42b438:	add	x8, x8, #0xeb0
  42b43c:	mov	w0, #0x7                   	// #7
  42b440:	mov	w3, #0xd0                  	// #208
  42b444:	mov	w1, wzr
  42b448:	add	x2, x2, #0xe48
  42b44c:	mov	x4, x25
  42b450:	mov	x7, xzr
  42b454:	stp	xzr, x8, [sp]
  42b458:	bl	40a730 <log_object_internal@plt>
  42b45c:	ldur	x1, [x29, #-40]
  42b460:	mov	x0, x19
  42b464:	bl	40bb00 <set_put_strdup@plt>
  42b468:	tbz	w0, #31, 42b3b0 <devnode_acl_all+0xc4>
  42b46c:	b	42b484 <devnode_acl_all+0x198>
  42b470:	add	x1, sp, #0x28
  42b474:	mov	x0, x27
  42b478:	bl	40a780 <sd_device_get_sysname@plt>
  42b47c:	ldr	x6, [sp, #40]
  42b480:	b	42b418 <devnode_acl_all+0x12c>
  42b484:	mov	w27, w0
  42b488:	b	42b6e4 <devnode_acl_all+0x3f8>
  42b48c:	mov	w27, #0xfffffff4            	// #-12
  42b490:	b	42b6e4 <devnode_acl_all+0x3f8>
  42b494:	adrp	x0, 43e000 <worker_hash_op+0x9df8>
  42b498:	add	x0, x0, #0xecf
  42b49c:	bl	40af80 <opendir@plt>
  42b4a0:	mov	x26, x0
  42b4a4:	cbz	x0, 42b5a0 <devnode_acl_all+0x2b4>
  42b4a8:	bl	40a3e0 <__errno_location@plt>
  42b4ac:	mov	x28, x0
  42b4b0:	str	wzr, [x0]
  42b4b4:	mov	x0, x26
  42b4b8:	bl	40af90 <readdir64@plt>
  42b4bc:	cbz	x0, 42b58c <devnode_acl_all+0x2a0>
  42b4c0:	adrp	x25, 436000 <worker_hash_op+0x1df8>
  42b4c4:	add	x25, x25, #0xb36
  42b4c8:	b	42b4e4 <devnode_acl_all+0x1f8>
  42b4cc:	ldur	x0, [x29, #-40]
  42b4d0:	bl	40a320 <free@plt>
  42b4d4:	mov	x0, x26
  42b4d8:	str	wzr, [x28]
  42b4dc:	bl	40af90 <readdir64@plt>
  42b4e0:	cbz	x0, 42b58c <devnode_acl_all+0x2a0>
  42b4e4:	add	x27, x0, #0x13
  42b4e8:	mov	x0, x27
  42b4ec:	bl	40bb10 <hidden_or_backup_file@plt>
  42b4f0:	tbnz	w0, #0, 42b4d4 <devnode_acl_all+0x1e8>
  42b4f4:	sub	x2, x29, #0x28
  42b4f8:	mov	w1, #0x1                   	// #1
  42b4fc:	mov	x0, x27
  42b500:	stur	xzr, [x29, #-40]
  42b504:	bl	40bb20 <cunescape@plt>
  42b508:	tbnz	w0, #31, 42b6cc <devnode_acl_all+0x3e0>
  42b50c:	ldur	x1, [x29, #-40]
  42b510:	mov	x2, #0xffffffffffffffff    	// #-1
  42b514:	mov	x0, x25
  42b518:	bl	40ae00 <path_join_internal@plt>
  42b51c:	stur	x0, [x29, #-32]
  42b520:	cbz	x0, 42b6cc <devnode_acl_all+0x3e0>
  42b524:	mov	x27, x0
  42b528:	mov	w0, #0x1                   	// #1
  42b52c:	bl	40a2c0 <log_get_max_level_realm@plt>
  42b530:	cmp	w0, #0x7
  42b534:	b.lt	42b56c <devnode_acl_all+0x280>  // b.tstop
  42b538:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42b53c:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  42b540:	adrp	x5, 43e000 <worker_hash_op+0x9df8>
  42b544:	mov	w0, #0x407                 	// #1031
  42b548:	mov	w3, #0xe4                  	// #228
  42b54c:	mov	w1, wzr
  42b550:	add	x2, x2, #0xe48
  42b554:	add	x4, x4, #0xea0
  42b558:	add	x5, x5, #0xef2
  42b55c:	mov	x6, x27
  42b560:	mov	x7, x24
  42b564:	bl	40a2d0 <log_internal_realm@plt>
  42b568:	ldur	x27, [x29, #-32]
  42b56c:	mov	x0, x19
  42b570:	mov	x1, x27
  42b574:	bl	40bb30 <set_consume@plt>
  42b578:	cmn	w0, #0x11
  42b57c:	b.eq	42b4cc <devnode_acl_all+0x1e0>  // b.none
  42b580:	mov	w27, w0
  42b584:	tbz	w0, #31, 42b4cc <devnode_acl_all+0x1e0>
  42b588:	b	42b6d0 <devnode_acl_all+0x3e4>
  42b58c:	ldr	w8, [x28]
  42b590:	cmp	w8, #0x1
  42b594:	b.lt	42b5a0 <devnode_acl_all+0x2b4>  // b.tstop
  42b598:	neg	w27, w8
  42b59c:	b	42b6d8 <devnode_acl_all+0x3ec>
  42b5a0:	mov	w8, #0xfffffffe            	// #-2
  42b5a4:	sub	x1, x29, #0x18
  42b5a8:	sub	x2, x29, #0x20
  42b5ac:	mov	x0, x19
  42b5b0:	stur	w8, [x29, #-24]
  42b5b4:	stur	xzr, [x29, #-16]
  42b5b8:	bl	40bb40 <set_iterate@plt>
  42b5bc:	mov	w27, wzr
  42b5c0:	tbz	w0, #0, 42b6d8 <devnode_acl_all+0x3ec>
  42b5c4:	adrp	x8, 438000 <worker_hash_op+0x3df8>
  42b5c8:	adrp	x9, 43e000 <worker_hash_op+0x9df8>
  42b5cc:	add	x8, x8, #0xed8
  42b5d0:	add	x9, x9, #0xf45
  42b5d4:	tst	w23, #0x1
  42b5d8:	csel	x28, x9, x8, ne  // ne = any
  42b5dc:	ldr	w9, [sp, #36]
  42b5e0:	adrp	x10, 43e000 <worker_hash_op+0x9df8>
  42b5e4:	add	x10, x10, #0xf4a
  42b5e8:	and	w25, w21, #0x1
  42b5ec:	tst	w9, #0x1
  42b5f0:	csel	x21, x10, x8, ne  // ne = any
  42b5f4:	b	42b618 <devnode_acl_all+0x32c>
  42b5f8:	cmp	w0, #0x0
  42b5fc:	ccmp	w27, #0x0, #0x0, lt  // lt = tstop
  42b600:	csel	w27, w0, w27, eq  // eq = none
  42b604:	sub	x1, x29, #0x18
  42b608:	sub	x2, x29, #0x20
  42b60c:	mov	x0, x19
  42b610:	bl	40bb40 <set_iterate@plt>
  42b614:	tbz	w0, #0, 42b6d8 <devnode_acl_all+0x3ec>
  42b618:	mov	w0, #0x1                   	// #1
  42b61c:	bl	40a2c0 <log_get_max_level_realm@plt>
  42b620:	cmp	w0, #0x7
  42b624:	b.lt	42b664 <devnode_acl_all+0x378>  // b.tstop
  42b628:	ldur	x6, [x29, #-32]
  42b62c:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42b630:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  42b634:	adrp	x5, 43e000 <worker_hash_op+0x9df8>
  42b638:	mov	w0, #0x407                 	// #1031
  42b63c:	mov	w3, #0xf3                  	// #243
  42b640:	mov	w1, wzr
  42b644:	add	x2, x2, #0xe48
  42b648:	add	x4, x4, #0xea0
  42b64c:	add	x5, x5, #0xf13
  42b650:	mov	x7, x24
  42b654:	stp	x28, x21, [sp, #16]
  42b658:	str	w20, [sp, #8]
  42b65c:	str	w22, [sp]
  42b660:	bl	40a2d0 <log_internal_realm@plt>
  42b664:	ldr	w8, [sp, #36]
  42b668:	ldur	x0, [x29, #-32]
  42b66c:	and	w2, w23, #0x1
  42b670:	mov	w1, w25
  42b674:	and	w4, w8, #0x1
  42b678:	mov	w3, w22
  42b67c:	mov	w5, w20
  42b680:	bl	42b06c <devnode_acl>
  42b684:	cmn	w0, #0x2
  42b688:	b.ne	42b5f8 <devnode_acl_all+0x30c>  // b.any
  42b68c:	mov	w0, #0x1                   	// #1
  42b690:	bl	40a2c0 <log_get_max_level_realm@plt>
  42b694:	cmp	w0, #0x7
  42b698:	b.lt	42b604 <devnode_acl_all+0x318>  // b.tstop
  42b69c:	ldur	x6, [x29, #-32]
  42b6a0:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42b6a4:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  42b6a8:	adrp	x5, 43e000 <worker_hash_op+0x9df8>
  42b6ac:	mov	w0, #0x407                 	// #1031
  42b6b0:	mov	w3, #0xf7                  	// #247
  42b6b4:	mov	w1, wzr
  42b6b8:	add	x2, x2, #0xe48
  42b6bc:	add	x4, x4, #0xea0
  42b6c0:	add	x5, x5, #0xf4f
  42b6c4:	bl	40a2d0 <log_internal_realm@plt>
  42b6c8:	b	42b604 <devnode_acl_all+0x318>
  42b6cc:	mov	w27, #0xfffffff4            	// #-12
  42b6d0:	ldur	x0, [x29, #-40]
  42b6d4:	bl	40a320 <free@plt>
  42b6d8:	cbz	x26, 42b6e4 <devnode_acl_all+0x3f8>
  42b6dc:	mov	x0, x26
  42b6e0:	bl	40afc0 <closedir@plt>
  42b6e4:	cbz	x19, 42b6fc <devnode_acl_all+0x410>
  42b6e8:	adrp	x1, 46f000 <_DYNAMIC+0x208>
  42b6ec:	ldr	x1, [x1, #120]
  42b6f0:	mov	x0, x19
  42b6f4:	mov	x2, xzr
  42b6f8:	bl	40a650 <internal_hashmap_free@plt>
  42b6fc:	ldur	x0, [x29, #-8]
  42b700:	cbz	x0, 42b708 <devnode_acl_all+0x41c>
  42b704:	bl	40a940 <sd_device_enumerator_unref@plt>
  42b708:	mov	w0, w27
  42b70c:	ldp	x20, x19, [sp, #176]
  42b710:	ldp	x22, x21, [sp, #160]
  42b714:	ldp	x24, x23, [sp, #144]
  42b718:	ldp	x26, x25, [sp, #128]
  42b71c:	ldp	x28, x27, [sp, #112]
  42b720:	ldp	x29, x30, [sp, #96]
  42b724:	add	sp, sp, #0xc0
  42b728:	ret

000000000042b72c <sd_pid_get_session>:
  42b72c:	stp	x29, x30, [sp, #-16]!
  42b730:	mov	x29, sp
  42b734:	tbnz	w0, #31, 42b75c <sd_pid_get_session+0x30>
  42b738:	cbz	x1, 42b780 <sd_pid_get_session+0x54>
  42b73c:	bl	40bb50 <cg_pid_get_session@plt>
  42b740:	cmn	w0, #0x6
  42b744:	b.eq	42b750 <sd_pid_get_session+0x24>  // b.none
  42b748:	cmn	w0, #0x7b
  42b74c:	b.ne	42b754 <sd_pid_get_session+0x28>  // b.any
  42b750:	mov	w0, #0xffffffc3            	// #-61
  42b754:	ldp	x29, x30, [sp], #16
  42b758:	ret
  42b75c:	adrp	x1, 43e000 <worker_hash_op+0x9df8>
  42b760:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42b764:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  42b768:	add	x1, x1, #0xf78
  42b76c:	add	x2, x2, #0xf84
  42b770:	add	x4, x4, #0xfa7
  42b774:	mov	w0, #0x1                   	// #1
  42b778:	mov	w3, #0x2b                  	// #43
  42b77c:	b	42b7a0 <sd_pid_get_session+0x74>
  42b780:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  42b784:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42b788:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  42b78c:	add	x1, x1, #0x6f1
  42b790:	add	x2, x2, #0xf84
  42b794:	add	x4, x4, #0xfa7
  42b798:	mov	w0, #0x1                   	// #1
  42b79c:	mov	w3, #0x2c                  	// #44
  42b7a0:	bl	40ac10 <log_assert_failed_return_realm@plt>
  42b7a4:	mov	w0, #0xffffffea            	// #-22
  42b7a8:	ldp	x29, x30, [sp], #16
  42b7ac:	ret

000000000042b7b0 <sd_pid_get_unit>:
  42b7b0:	stp	x29, x30, [sp, #-16]!
  42b7b4:	mov	x29, sp
  42b7b8:	tbnz	w0, #31, 42b7e0 <sd_pid_get_unit+0x30>
  42b7bc:	cbz	x1, 42b804 <sd_pid_get_unit+0x54>
  42b7c0:	bl	40bb60 <cg_pid_get_unit@plt>
  42b7c4:	cmn	w0, #0x6
  42b7c8:	b.eq	42b7d4 <sd_pid_get_unit+0x24>  // b.none
  42b7cc:	cmn	w0, #0x7b
  42b7d0:	b.ne	42b7d8 <sd_pid_get_unit+0x28>  // b.any
  42b7d4:	mov	w0, #0xffffffc3            	// #-61
  42b7d8:	ldp	x29, x30, [sp], #16
  42b7dc:	ret
  42b7e0:	adrp	x1, 43e000 <worker_hash_op+0x9df8>
  42b7e4:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42b7e8:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  42b7ec:	add	x1, x1, #0xf78
  42b7f0:	add	x2, x2, #0xf84
  42b7f4:	add	x4, x4, #0xfce
  42b7f8:	mov	w0, #0x1                   	// #1
  42b7fc:	mov	w3, #0x35                  	// #53
  42b800:	b	42b824 <sd_pid_get_unit+0x74>
  42b804:	adrp	x1, 43e000 <worker_hash_op+0x9df8>
  42b808:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42b80c:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  42b810:	add	x1, x1, #0xff2
  42b814:	add	x2, x2, #0xf84
  42b818:	add	x4, x4, #0xfce
  42b81c:	mov	w0, #0x1                   	// #1
  42b820:	mov	w3, #0x36                  	// #54
  42b824:	bl	40ac10 <log_assert_failed_return_realm@plt>
  42b828:	mov	w0, #0xffffffea            	// #-22
  42b82c:	ldp	x29, x30, [sp], #16
  42b830:	ret

000000000042b834 <sd_pid_get_user_unit>:
  42b834:	stp	x29, x30, [sp, #-16]!
  42b838:	mov	x29, sp
  42b83c:	tbnz	w0, #31, 42b864 <sd_pid_get_user_unit+0x30>
  42b840:	cbz	x1, 42b888 <sd_pid_get_user_unit+0x54>
  42b844:	bl	40bb70 <cg_pid_get_user_unit@plt>
  42b848:	cmn	w0, #0x6
  42b84c:	b.eq	42b858 <sd_pid_get_user_unit+0x24>  // b.none
  42b850:	cmn	w0, #0x7b
  42b854:	b.ne	42b85c <sd_pid_get_user_unit+0x28>  // b.any
  42b858:	mov	w0, #0xffffffc3            	// #-61
  42b85c:	ldp	x29, x30, [sp], #16
  42b860:	ret
  42b864:	adrp	x1, 43e000 <worker_hash_op+0x9df8>
  42b868:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42b86c:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  42b870:	add	x1, x1, #0xf78
  42b874:	add	x2, x2, #0xf84
  42b878:	add	x4, x4, #0xff7
  42b87c:	mov	w0, #0x1                   	// #1
  42b880:	mov	w3, #0x3f                  	// #63
  42b884:	b	42b8a8 <sd_pid_get_user_unit+0x74>
  42b888:	adrp	x1, 43e000 <worker_hash_op+0x9df8>
  42b88c:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42b890:	adrp	x4, 43e000 <worker_hash_op+0x9df8>
  42b894:	add	x1, x1, #0xff2
  42b898:	add	x2, x2, #0xf84
  42b89c:	add	x4, x4, #0xff7
  42b8a0:	mov	w0, #0x1                   	// #1
  42b8a4:	mov	w3, #0x40                  	// #64
  42b8a8:	bl	40ac10 <log_assert_failed_return_realm@plt>
  42b8ac:	mov	w0, #0xffffffea            	// #-22
  42b8b0:	ldp	x29, x30, [sp], #16
  42b8b4:	ret

000000000042b8b8 <sd_pid_get_machine_name>:
  42b8b8:	stp	x29, x30, [sp, #-16]!
  42b8bc:	mov	x29, sp
  42b8c0:	tbnz	w0, #31, 42b8e8 <sd_pid_get_machine_name+0x30>
  42b8c4:	cbz	x1, 42b90c <sd_pid_get_machine_name+0x54>
  42b8c8:	bl	40bb80 <cg_pid_get_machine_name@plt>
  42b8cc:	cmn	w0, #0x6
  42b8d0:	b.eq	42b8dc <sd_pid_get_machine_name+0x24>  // b.none
  42b8d4:	cmn	w0, #0x7b
  42b8d8:	b.ne	42b8e0 <sd_pid_get_machine_name+0x28>  // b.any
  42b8dc:	mov	w0, #0xffffffc3            	// #-61
  42b8e0:	ldp	x29, x30, [sp], #16
  42b8e4:	ret
  42b8e8:	adrp	x1, 43e000 <worker_hash_op+0x9df8>
  42b8ec:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42b8f0:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42b8f4:	add	x1, x1, #0xf78
  42b8f8:	add	x2, x2, #0xf84
  42b8fc:	add	x4, x4, #0x20
  42b900:	mov	w0, #0x1                   	// #1
  42b904:	mov	w3, #0x49                  	// #73
  42b908:	b	42b92c <sd_pid_get_machine_name+0x74>
  42b90c:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  42b910:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42b914:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42b918:	add	x1, x1, #0xab6
  42b91c:	add	x2, x2, #0xf84
  42b920:	add	x4, x4, #0x20
  42b924:	mov	w0, #0x1                   	// #1
  42b928:	mov	w3, #0x4a                  	// #74
  42b92c:	bl	40ac10 <log_assert_failed_return_realm@plt>
  42b930:	mov	w0, #0xffffffea            	// #-22
  42b934:	ldp	x29, x30, [sp], #16
  42b938:	ret

000000000042b93c <sd_pid_get_slice>:
  42b93c:	stp	x29, x30, [sp, #-16]!
  42b940:	mov	x29, sp
  42b944:	tbnz	w0, #31, 42b96c <sd_pid_get_slice+0x30>
  42b948:	cbz	x1, 42b990 <sd_pid_get_slice+0x54>
  42b94c:	bl	40bb90 <cg_pid_get_slice@plt>
  42b950:	cmn	w0, #0x6
  42b954:	b.eq	42b960 <sd_pid_get_slice+0x24>  // b.none
  42b958:	cmn	w0, #0x7b
  42b95c:	b.ne	42b964 <sd_pid_get_slice+0x28>  // b.any
  42b960:	mov	w0, #0xffffffc3            	// #-61
  42b964:	ldp	x29, x30, [sp], #16
  42b968:	ret
  42b96c:	adrp	x1, 43e000 <worker_hash_op+0x9df8>
  42b970:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42b974:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42b978:	add	x1, x1, #0xf78
  42b97c:	add	x2, x2, #0xf84
  42b980:	add	x4, x4, #0x4c
  42b984:	mov	w0, #0x1                   	// #1
  42b988:	mov	w3, #0x53                  	// #83
  42b98c:	b	42b9b0 <sd_pid_get_slice+0x74>
  42b990:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42b994:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42b998:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42b99c:	add	x1, x1, #0x71
  42b9a0:	add	x2, x2, #0xf84
  42b9a4:	add	x4, x4, #0x4c
  42b9a8:	mov	w0, #0x1                   	// #1
  42b9ac:	mov	w3, #0x54                  	// #84
  42b9b0:	bl	40ac10 <log_assert_failed_return_realm@plt>
  42b9b4:	mov	w0, #0xffffffea            	// #-22
  42b9b8:	ldp	x29, x30, [sp], #16
  42b9bc:	ret

000000000042b9c0 <sd_pid_get_user_slice>:
  42b9c0:	stp	x29, x30, [sp, #-16]!
  42b9c4:	mov	x29, sp
  42b9c8:	tbnz	w0, #31, 42b9f0 <sd_pid_get_user_slice+0x30>
  42b9cc:	cbz	x1, 42ba14 <sd_pid_get_user_slice+0x54>
  42b9d0:	bl	40bba0 <cg_pid_get_user_slice@plt>
  42b9d4:	cmn	w0, #0x6
  42b9d8:	b.eq	42b9e4 <sd_pid_get_user_slice+0x24>  // b.none
  42b9dc:	cmn	w0, #0x7b
  42b9e0:	b.ne	42b9e8 <sd_pid_get_user_slice+0x28>  // b.any
  42b9e4:	mov	w0, #0xffffffc3            	// #-61
  42b9e8:	ldp	x29, x30, [sp], #16
  42b9ec:	ret
  42b9f0:	adrp	x1, 43e000 <worker_hash_op+0x9df8>
  42b9f4:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42b9f8:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42b9fc:	add	x1, x1, #0xf78
  42ba00:	add	x2, x2, #0xf84
  42ba04:	add	x4, x4, #0x77
  42ba08:	mov	w0, #0x1                   	// #1
  42ba0c:	mov	w3, #0x5d                  	// #93
  42ba10:	b	42ba34 <sd_pid_get_user_slice+0x74>
  42ba14:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42ba18:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42ba1c:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42ba20:	add	x1, x1, #0x71
  42ba24:	add	x2, x2, #0xf84
  42ba28:	add	x4, x4, #0x77
  42ba2c:	mov	w0, #0x1                   	// #1
  42ba30:	mov	w3, #0x5e                  	// #94
  42ba34:	bl	40ac10 <log_assert_failed_return_realm@plt>
  42ba38:	mov	w0, #0xffffffea            	// #-22
  42ba3c:	ldp	x29, x30, [sp], #16
  42ba40:	ret

000000000042ba44 <sd_pid_get_owner_uid>:
  42ba44:	stp	x29, x30, [sp, #-16]!
  42ba48:	mov	x29, sp
  42ba4c:	tbnz	w0, #31, 42ba74 <sd_pid_get_owner_uid+0x30>
  42ba50:	cbz	x1, 42ba98 <sd_pid_get_owner_uid+0x54>
  42ba54:	bl	40bbb0 <cg_pid_get_owner_uid@plt>
  42ba58:	cmn	w0, #0x6
  42ba5c:	b.eq	42ba68 <sd_pid_get_owner_uid+0x24>  // b.none
  42ba60:	cmn	w0, #0x7b
  42ba64:	b.ne	42ba6c <sd_pid_get_owner_uid+0x28>  // b.any
  42ba68:	mov	w0, #0xffffffc3            	// #-61
  42ba6c:	ldp	x29, x30, [sp], #16
  42ba70:	ret
  42ba74:	adrp	x1, 43e000 <worker_hash_op+0x9df8>
  42ba78:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42ba7c:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42ba80:	add	x1, x1, #0xf78
  42ba84:	add	x2, x2, #0xf84
  42ba88:	add	x4, x4, #0xa1
  42ba8c:	mov	w0, #0x1                   	// #1
  42ba90:	mov	w3, #0x67                  	// #103
  42ba94:	b	42bab8 <sd_pid_get_owner_uid+0x74>
  42ba98:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42ba9c:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42baa0:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42baa4:	add	x1, x1, #0xca
  42baa8:	add	x2, x2, #0xf84
  42baac:	add	x4, x4, #0xa1
  42bab0:	mov	w0, #0x1                   	// #1
  42bab4:	mov	w3, #0x68                  	// #104
  42bab8:	bl	40ac10 <log_assert_failed_return_realm@plt>
  42babc:	mov	w0, #0xffffffea            	// #-22
  42bac0:	ldp	x29, x30, [sp], #16
  42bac4:	ret

000000000042bac8 <sd_pid_get_cgroup>:
  42bac8:	stp	x29, x30, [sp, #-32]!
  42bacc:	str	x19, [sp, #16]
  42bad0:	mov	x29, sp
  42bad4:	tbnz	w0, #31, 42bb4c <sd_pid_get_cgroup+0x84>
  42bad8:	mov	x19, x1
  42badc:	cbz	x1, 42bb70 <sd_pid_get_cgroup+0xa8>
  42bae0:	mov	w1, w0
  42bae4:	adrp	x0, 434000 <__libc_csu_init+0x60>
  42bae8:	add	x0, x0, #0x2f7
  42baec:	add	x2, x29, #0x18
  42baf0:	bl	40a460 <cg_pid_get_path@plt>
  42baf4:	tbnz	w0, #31, 42bb30 <sd_pid_get_cgroup+0x68>
  42baf8:	ldr	x8, [x29, #24]
  42bafc:	cbz	x8, 42bb08 <sd_pid_get_cgroup+0x40>
  42bb00:	ldrb	w9, [x8]
  42bb04:	cbnz	w9, 42bb28 <sd_pid_get_cgroup+0x60>
  42bb08:	mov	x0, x8
  42bb0c:	bl	40a320 <free@plt>
  42bb10:	adrp	x0, 434000 <__libc_csu_init+0x60>
  42bb14:	add	x0, x0, #0x289
  42bb18:	bl	40a810 <strdup@plt>
  42bb1c:	mov	x8, x0
  42bb20:	str	x0, [x29, #24]
  42bb24:	cbz	x0, 42bb3c <sd_pid_get_cgroup+0x74>
  42bb28:	mov	w0, wzr
  42bb2c:	str	x8, [x19]
  42bb30:	ldr	x19, [sp, #16]
  42bb34:	ldp	x29, x30, [sp], #32
  42bb38:	ret
  42bb3c:	mov	w0, #0xfffffff4            	// #-12
  42bb40:	ldr	x19, [sp, #16]
  42bb44:	ldp	x29, x30, [sp], #32
  42bb48:	ret
  42bb4c:	adrp	x1, 43e000 <worker_hash_op+0x9df8>
  42bb50:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42bb54:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42bb58:	add	x1, x1, #0xf78
  42bb5c:	add	x2, x2, #0xf84
  42bb60:	add	x4, x4, #0xce
  42bb64:	mov	w0, #0x1                   	// #1
  42bb68:	mov	w3, #0x72                  	// #114
  42bb6c:	b	42bb90 <sd_pid_get_cgroup+0xc8>
  42bb70:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42bb74:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42bb78:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42bb7c:	add	x1, x1, #0xf4
  42bb80:	add	x2, x2, #0xf84
  42bb84:	add	x4, x4, #0xce
  42bb88:	mov	w0, #0x1                   	// #1
  42bb8c:	mov	w3, #0x73                  	// #115
  42bb90:	bl	40ac10 <log_assert_failed_return_realm@plt>
  42bb94:	mov	w0, #0xffffffea            	// #-22
  42bb98:	ldr	x19, [sp, #16]
  42bb9c:	ldp	x29, x30, [sp], #32
  42bba0:	ret

000000000042bba4 <sd_peer_get_session>:
  42bba4:	sub	sp, sp, #0x30
  42bba8:	stp	x29, x30, [sp, #16]
  42bbac:	str	x19, [sp, #32]
  42bbb0:	add	x29, sp, #0x10
  42bbb4:	str	wzr, [sp, #8]
  42bbb8:	str	xzr, [sp]
  42bbbc:	tbnz	w0, #31, 42bbf0 <sd_peer_get_session+0x4c>
  42bbc0:	mov	x19, x1
  42bbc4:	cbz	x1, 42bc28 <sd_peer_get_session+0x84>
  42bbc8:	mov	x1, sp
  42bbcc:	bl	40ac30 <getpeercred@plt>
  42bbd0:	tbnz	w0, #31, 42bbe0 <sd_peer_get_session+0x3c>
  42bbd4:	ldr	w0, [sp]
  42bbd8:	mov	x1, x19
  42bbdc:	bl	40bb50 <cg_pid_get_session@plt>
  42bbe0:	ldr	x19, [sp, #32]
  42bbe4:	ldp	x29, x30, [sp, #16]
  42bbe8:	add	sp, sp, #0x30
  42bbec:	ret
  42bbf0:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42bbf4:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42bbf8:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42bbfc:	add	x1, x1, #0xfb
  42bc00:	add	x2, x2, #0xf84
  42bc04:	add	x4, x4, #0x103
  42bc08:	mov	w0, #0x1                   	// #1
  42bc0c:	mov	w3, #0x8c                  	// #140
  42bc10:	bl	40ac10 <log_assert_failed_return_realm@plt>
  42bc14:	mov	w0, #0xfffffff7            	// #-9
  42bc18:	ldr	x19, [sp, #32]
  42bc1c:	ldp	x29, x30, [sp, #16]
  42bc20:	add	sp, sp, #0x30
  42bc24:	ret
  42bc28:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  42bc2c:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42bc30:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42bc34:	add	x1, x1, #0x6f1
  42bc38:	add	x2, x2, #0xf84
  42bc3c:	add	x4, x4, #0x103
  42bc40:	mov	w0, #0x1                   	// #1
  42bc44:	mov	w3, #0x8d                  	// #141
  42bc48:	bl	40ac10 <log_assert_failed_return_realm@plt>
  42bc4c:	mov	w0, #0xffffffea            	// #-22
  42bc50:	ldr	x19, [sp, #32]
  42bc54:	ldp	x29, x30, [sp, #16]
  42bc58:	add	sp, sp, #0x30
  42bc5c:	ret

000000000042bc60 <sd_peer_get_owner_uid>:
  42bc60:	sub	sp, sp, #0x30
  42bc64:	stp	x29, x30, [sp, #16]
  42bc68:	str	x19, [sp, #32]
  42bc6c:	add	x29, sp, #0x10
  42bc70:	tbnz	w0, #31, 42bca4 <sd_peer_get_owner_uid+0x44>
  42bc74:	mov	x19, x1
  42bc78:	cbz	x1, 42bcdc <sd_peer_get_owner_uid+0x7c>
  42bc7c:	mov	x1, sp
  42bc80:	bl	40ac30 <getpeercred@plt>
  42bc84:	tbnz	w0, #31, 42bc94 <sd_peer_get_owner_uid+0x34>
  42bc88:	ldr	w0, [sp]
  42bc8c:	mov	x1, x19
  42bc90:	bl	40bbb0 <cg_pid_get_owner_uid@plt>
  42bc94:	ldr	x19, [sp, #32]
  42bc98:	ldp	x29, x30, [sp, #16]
  42bc9c:	add	sp, sp, #0x30
  42bca0:	ret
  42bca4:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42bca8:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42bcac:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42bcb0:	add	x1, x1, #0xfb
  42bcb4:	add	x2, x2, #0xf84
  42bcb8:	add	x4, x4, #0x129
  42bcbc:	mov	w0, #0x1                   	// #1
  42bcc0:	mov	w3, #0x9a                  	// #154
  42bcc4:	bl	40ac10 <log_assert_failed_return_realm@plt>
  42bcc8:	mov	w0, #0xfffffff7            	// #-9
  42bccc:	ldr	x19, [sp, #32]
  42bcd0:	ldp	x29, x30, [sp, #16]
  42bcd4:	add	sp, sp, #0x30
  42bcd8:	ret
  42bcdc:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42bce0:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42bce4:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42bce8:	add	x1, x1, #0xca
  42bcec:	add	x2, x2, #0xf84
  42bcf0:	add	x4, x4, #0x129
  42bcf4:	mov	w0, #0x1                   	// #1
  42bcf8:	mov	w3, #0x9b                  	// #155
  42bcfc:	bl	40ac10 <log_assert_failed_return_realm@plt>
  42bd00:	mov	w0, #0xffffffea            	// #-22
  42bd04:	ldr	x19, [sp, #32]
  42bd08:	ldp	x29, x30, [sp, #16]
  42bd0c:	add	sp, sp, #0x30
  42bd10:	ret

000000000042bd14 <sd_peer_get_unit>:
  42bd14:	sub	sp, sp, #0x30
  42bd18:	stp	x29, x30, [sp, #16]
  42bd1c:	str	x19, [sp, #32]
  42bd20:	add	x29, sp, #0x10
  42bd24:	tbnz	w0, #31, 42bd58 <sd_peer_get_unit+0x44>
  42bd28:	mov	x19, x1
  42bd2c:	cbz	x1, 42bd90 <sd_peer_get_unit+0x7c>
  42bd30:	mov	x1, sp
  42bd34:	bl	40ac30 <getpeercred@plt>
  42bd38:	tbnz	w0, #31, 42bd48 <sd_peer_get_unit+0x34>
  42bd3c:	ldr	w0, [sp]
  42bd40:	mov	x1, x19
  42bd44:	bl	40bb60 <cg_pid_get_unit@plt>
  42bd48:	ldr	x19, [sp, #32]
  42bd4c:	ldp	x29, x30, [sp, #16]
  42bd50:	add	sp, sp, #0x30
  42bd54:	ret
  42bd58:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42bd5c:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42bd60:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42bd64:	add	x1, x1, #0xfb
  42bd68:	add	x2, x2, #0xf84
  42bd6c:	add	x4, x4, #0x151
  42bd70:	mov	w0, #0x1                   	// #1
  42bd74:	mov	w3, #0xa8                  	// #168
  42bd78:	bl	40ac10 <log_assert_failed_return_realm@plt>
  42bd7c:	mov	w0, #0xfffffff7            	// #-9
  42bd80:	ldr	x19, [sp, #32]
  42bd84:	ldp	x29, x30, [sp, #16]
  42bd88:	add	sp, sp, #0x30
  42bd8c:	ret
  42bd90:	adrp	x1, 43e000 <worker_hash_op+0x9df8>
  42bd94:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42bd98:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42bd9c:	add	x1, x1, #0xff2
  42bda0:	add	x2, x2, #0xf84
  42bda4:	add	x4, x4, #0x151
  42bda8:	mov	w0, #0x1                   	// #1
  42bdac:	mov	w3, #0xa9                  	// #169
  42bdb0:	bl	40ac10 <log_assert_failed_return_realm@plt>
  42bdb4:	mov	w0, #0xffffffea            	// #-22
  42bdb8:	ldr	x19, [sp, #32]
  42bdbc:	ldp	x29, x30, [sp, #16]
  42bdc0:	add	sp, sp, #0x30
  42bdc4:	ret

000000000042bdc8 <sd_peer_get_user_unit>:
  42bdc8:	sub	sp, sp, #0x30
  42bdcc:	stp	x29, x30, [sp, #16]
  42bdd0:	str	x19, [sp, #32]
  42bdd4:	add	x29, sp, #0x10
  42bdd8:	tbnz	w0, #31, 42be0c <sd_peer_get_user_unit+0x44>
  42bddc:	mov	x19, x1
  42bde0:	cbz	x1, 42be44 <sd_peer_get_user_unit+0x7c>
  42bde4:	mov	x1, sp
  42bde8:	bl	40ac30 <getpeercred@plt>
  42bdec:	tbnz	w0, #31, 42bdfc <sd_peer_get_user_unit+0x34>
  42bdf0:	ldr	w0, [sp]
  42bdf4:	mov	x1, x19
  42bdf8:	bl	40bb70 <cg_pid_get_user_unit@plt>
  42bdfc:	ldr	x19, [sp, #32]
  42be00:	ldp	x29, x30, [sp, #16]
  42be04:	add	sp, sp, #0x30
  42be08:	ret
  42be0c:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42be10:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42be14:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42be18:	add	x1, x1, #0xfb
  42be1c:	add	x2, x2, #0xf84
  42be20:	add	x4, x4, #0x174
  42be24:	mov	w0, #0x1                   	// #1
  42be28:	mov	w3, #0xb6                  	// #182
  42be2c:	bl	40ac10 <log_assert_failed_return_realm@plt>
  42be30:	mov	w0, #0xfffffff7            	// #-9
  42be34:	ldr	x19, [sp, #32]
  42be38:	ldp	x29, x30, [sp, #16]
  42be3c:	add	sp, sp, #0x30
  42be40:	ret
  42be44:	adrp	x1, 43e000 <worker_hash_op+0x9df8>
  42be48:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42be4c:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42be50:	add	x1, x1, #0xff2
  42be54:	add	x2, x2, #0xf84
  42be58:	add	x4, x4, #0x174
  42be5c:	mov	w0, #0x1                   	// #1
  42be60:	mov	w3, #0xb7                  	// #183
  42be64:	bl	40ac10 <log_assert_failed_return_realm@plt>
  42be68:	mov	w0, #0xffffffea            	// #-22
  42be6c:	ldr	x19, [sp, #32]
  42be70:	ldp	x29, x30, [sp, #16]
  42be74:	add	sp, sp, #0x30
  42be78:	ret

000000000042be7c <sd_peer_get_machine_name>:
  42be7c:	sub	sp, sp, #0x30
  42be80:	stp	x29, x30, [sp, #16]
  42be84:	str	x19, [sp, #32]
  42be88:	add	x29, sp, #0x10
  42be8c:	tbnz	w0, #31, 42bec0 <sd_peer_get_machine_name+0x44>
  42be90:	mov	x19, x1
  42be94:	cbz	x1, 42bef8 <sd_peer_get_machine_name+0x7c>
  42be98:	mov	x1, sp
  42be9c:	bl	40ac30 <getpeercred@plt>
  42bea0:	tbnz	w0, #31, 42beb0 <sd_peer_get_machine_name+0x34>
  42bea4:	ldr	w0, [sp]
  42bea8:	mov	x1, x19
  42beac:	bl	40bb80 <cg_pid_get_machine_name@plt>
  42beb0:	ldr	x19, [sp, #32]
  42beb4:	ldp	x29, x30, [sp, #16]
  42beb8:	add	sp, sp, #0x30
  42bebc:	ret
  42bec0:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42bec4:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42bec8:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42becc:	add	x1, x1, #0xfb
  42bed0:	add	x2, x2, #0xf84
  42bed4:	add	x4, x4, #0x19c
  42bed8:	mov	w0, #0x1                   	// #1
  42bedc:	mov	w3, #0xc4                  	// #196
  42bee0:	bl	40ac10 <log_assert_failed_return_realm@plt>
  42bee4:	mov	w0, #0xfffffff7            	// #-9
  42bee8:	ldr	x19, [sp, #32]
  42beec:	ldp	x29, x30, [sp, #16]
  42bef0:	add	sp, sp, #0x30
  42bef4:	ret
  42bef8:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42befc:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42bf00:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42bf04:	add	x1, x1, #0x1c7
  42bf08:	add	x2, x2, #0xf84
  42bf0c:	add	x4, x4, #0x19c
  42bf10:	mov	w0, #0x1                   	// #1
  42bf14:	mov	w3, #0xc5                  	// #197
  42bf18:	bl	40ac10 <log_assert_failed_return_realm@plt>
  42bf1c:	mov	w0, #0xffffffea            	// #-22
  42bf20:	ldr	x19, [sp, #32]
  42bf24:	ldp	x29, x30, [sp, #16]
  42bf28:	add	sp, sp, #0x30
  42bf2c:	ret

000000000042bf30 <sd_peer_get_slice>:
  42bf30:	sub	sp, sp, #0x30
  42bf34:	stp	x29, x30, [sp, #16]
  42bf38:	str	x19, [sp, #32]
  42bf3c:	add	x29, sp, #0x10
  42bf40:	tbnz	w0, #31, 42bf74 <sd_peer_get_slice+0x44>
  42bf44:	mov	x19, x1
  42bf48:	cbz	x1, 42bfac <sd_peer_get_slice+0x7c>
  42bf4c:	mov	x1, sp
  42bf50:	bl	40ac30 <getpeercred@plt>
  42bf54:	tbnz	w0, #31, 42bf64 <sd_peer_get_slice+0x34>
  42bf58:	ldr	w0, [sp]
  42bf5c:	mov	x1, x19
  42bf60:	bl	40bb90 <cg_pid_get_slice@plt>
  42bf64:	ldr	x19, [sp, #32]
  42bf68:	ldp	x29, x30, [sp, #16]
  42bf6c:	add	sp, sp, #0x30
  42bf70:	ret
  42bf74:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42bf78:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42bf7c:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42bf80:	add	x1, x1, #0xfb
  42bf84:	add	x2, x2, #0xf84
  42bf88:	add	x4, x4, #0x1cf
  42bf8c:	mov	w0, #0x1                   	// #1
  42bf90:	mov	w3, #0xd2                  	// #210
  42bf94:	bl	40ac10 <log_assert_failed_return_realm@plt>
  42bf98:	mov	w0, #0xfffffff7            	// #-9
  42bf9c:	ldr	x19, [sp, #32]
  42bfa0:	ldp	x29, x30, [sp, #16]
  42bfa4:	add	sp, sp, #0x30
  42bfa8:	ret
  42bfac:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42bfb0:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42bfb4:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42bfb8:	add	x1, x1, #0x71
  42bfbc:	add	x2, x2, #0xf84
  42bfc0:	add	x4, x4, #0x1cf
  42bfc4:	mov	w0, #0x1                   	// #1
  42bfc8:	mov	w3, #0xd3                  	// #211
  42bfcc:	bl	40ac10 <log_assert_failed_return_realm@plt>
  42bfd0:	mov	w0, #0xffffffea            	// #-22
  42bfd4:	ldr	x19, [sp, #32]
  42bfd8:	ldp	x29, x30, [sp, #16]
  42bfdc:	add	sp, sp, #0x30
  42bfe0:	ret

000000000042bfe4 <sd_peer_get_user_slice>:
  42bfe4:	sub	sp, sp, #0x30
  42bfe8:	stp	x29, x30, [sp, #16]
  42bfec:	str	x19, [sp, #32]
  42bff0:	add	x29, sp, #0x10
  42bff4:	tbnz	w0, #31, 42c028 <sd_peer_get_user_slice+0x44>
  42bff8:	mov	x19, x1
  42bffc:	cbz	x1, 42c060 <sd_peer_get_user_slice+0x7c>
  42c000:	mov	x1, sp
  42c004:	bl	40ac30 <getpeercred@plt>
  42c008:	tbnz	w0, #31, 42c018 <sd_peer_get_user_slice+0x34>
  42c00c:	ldr	w0, [sp]
  42c010:	mov	x1, x19
  42c014:	bl	40bba0 <cg_pid_get_user_slice@plt>
  42c018:	ldr	x19, [sp, #32]
  42c01c:	ldp	x29, x30, [sp, #16]
  42c020:	add	sp, sp, #0x30
  42c024:	ret
  42c028:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42c02c:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42c030:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42c034:	add	x1, x1, #0xfb
  42c038:	add	x2, x2, #0xf84
  42c03c:	add	x4, x4, #0x1f3
  42c040:	mov	w0, #0x1                   	// #1
  42c044:	mov	w3, #0xe0                  	// #224
  42c048:	bl	40ac10 <log_assert_failed_return_realm@plt>
  42c04c:	mov	w0, #0xfffffff7            	// #-9
  42c050:	ldr	x19, [sp, #32]
  42c054:	ldp	x29, x30, [sp, #16]
  42c058:	add	sp, sp, #0x30
  42c05c:	ret
  42c060:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42c064:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42c068:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42c06c:	add	x1, x1, #0x71
  42c070:	add	x2, x2, #0xf84
  42c074:	add	x4, x4, #0x1f3
  42c078:	mov	w0, #0x1                   	// #1
  42c07c:	mov	w3, #0xe1                  	// #225
  42c080:	bl	40ac10 <log_assert_failed_return_realm@plt>
  42c084:	mov	w0, #0xffffffea            	// #-22
  42c088:	ldr	x19, [sp, #32]
  42c08c:	ldp	x29, x30, [sp, #16]
  42c090:	add	sp, sp, #0x30
  42c094:	ret

000000000042c098 <sd_peer_get_cgroup>:
  42c098:	sub	sp, sp, #0x30
  42c09c:	stp	x29, x30, [sp, #16]
  42c0a0:	str	x19, [sp, #32]
  42c0a4:	add	x29, sp, #0x10
  42c0a8:	tbnz	w0, #31, 42c138 <sd_peer_get_cgroup+0xa0>
  42c0ac:	mov	x19, x1
  42c0b0:	cbz	x1, 42c170 <sd_peer_get_cgroup+0xd8>
  42c0b4:	mov	x1, sp
  42c0b8:	bl	40ac30 <getpeercred@plt>
  42c0bc:	tbnz	w0, #31, 42c114 <sd_peer_get_cgroup+0x7c>
  42c0c0:	ldr	w1, [sp]
  42c0c4:	tbnz	w1, #31, 42c194 <sd_peer_get_cgroup+0xfc>
  42c0c8:	adrp	x0, 434000 <__libc_csu_init+0x60>
  42c0cc:	add	x0, x0, #0x2f7
  42c0d0:	add	x2, x29, #0x18
  42c0d4:	bl	40a460 <cg_pid_get_path@plt>
  42c0d8:	tbnz	w0, #31, 42c114 <sd_peer_get_cgroup+0x7c>
  42c0dc:	ldr	x8, [x29, #24]
  42c0e0:	cbz	x8, 42c0ec <sd_peer_get_cgroup+0x54>
  42c0e4:	ldrb	w9, [x8]
  42c0e8:	cbnz	w9, 42c10c <sd_peer_get_cgroup+0x74>
  42c0ec:	mov	x0, x8
  42c0f0:	bl	40a320 <free@plt>
  42c0f4:	adrp	x0, 434000 <__libc_csu_init+0x60>
  42c0f8:	add	x0, x0, #0x289
  42c0fc:	bl	40a810 <strdup@plt>
  42c100:	mov	x8, x0
  42c104:	str	x0, [x29, #24]
  42c108:	cbz	x0, 42c124 <sd_peer_get_cgroup+0x8c>
  42c10c:	mov	w0, wzr
  42c110:	str	x8, [x19]
  42c114:	ldr	x19, [sp, #32]
  42c118:	ldp	x29, x30, [sp, #16]
  42c11c:	add	sp, sp, #0x30
  42c120:	ret
  42c124:	mov	w0, #0xfffffff4            	// #-12
  42c128:	ldr	x19, [sp, #32]
  42c12c:	ldp	x29, x30, [sp, #16]
  42c130:	add	sp, sp, #0x30
  42c134:	ret
  42c138:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42c13c:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42c140:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42c144:	add	x1, x1, #0xfb
  42c148:	add	x2, x2, #0xf84
  42c14c:	add	x4, x4, #0x21c
  42c150:	mov	w0, #0x1                   	// #1
  42c154:	mov	w3, #0xee                  	// #238
  42c158:	bl	40ac10 <log_assert_failed_return_realm@plt>
  42c15c:	mov	w0, #0xfffffff7            	// #-9
  42c160:	ldr	x19, [sp, #32]
  42c164:	ldp	x29, x30, [sp, #16]
  42c168:	add	sp, sp, #0x30
  42c16c:	ret
  42c170:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42c174:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42c178:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42c17c:	add	x1, x1, #0xf4
  42c180:	add	x2, x2, #0xf84
  42c184:	add	x4, x4, #0x21c
  42c188:	mov	w0, #0x1                   	// #1
  42c18c:	mov	w3, #0xef                  	// #239
  42c190:	b	42c1b4 <sd_peer_get_cgroup+0x11c>
  42c194:	adrp	x1, 43e000 <worker_hash_op+0x9df8>
  42c198:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42c19c:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42c1a0:	add	x1, x1, #0xf78
  42c1a4:	add	x2, x2, #0xf84
  42c1a8:	add	x4, x4, #0xce
  42c1ac:	mov	w0, #0x1                   	// #1
  42c1b0:	mov	w3, #0x72                  	// #114
  42c1b4:	bl	40ac10 <log_assert_failed_return_realm@plt>
  42c1b8:	mov	w0, #0xffffffea            	// #-22
  42c1bc:	ldr	x19, [sp, #32]
  42c1c0:	ldp	x29, x30, [sp, #16]
  42c1c4:	add	sp, sp, #0x30
  42c1c8:	ret

000000000042c1cc <sd_uid_get_state>:
  42c1cc:	sub	sp, sp, #0x30
  42c1d0:	stp	x29, x30, [sp, #16]
  42c1d4:	stp	x20, x19, [sp, #32]
  42c1d8:	add	x29, sp, #0x10
  42c1dc:	stp	xzr, xzr, [sp]
  42c1e0:	cbz	x1, 42c2ac <sd_uid_get_state+0xe0>
  42c1e4:	mov	x19, x1
  42c1e8:	mov	w20, w0
  42c1ec:	bl	40aec0 <uid_is_valid@plt>
  42c1f0:	tbz	w0, #0, 42c2d0 <sd_uid_get_state+0x104>
  42c1f4:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42c1f8:	add	x1, x1, #0x71e
  42c1fc:	add	x0, sp, #0x8
  42c200:	mov	w2, w20
  42c204:	bl	40bbc0 <asprintf@plt>
  42c208:	tbnz	w0, #31, 42c24c <sd_uid_get_state+0x80>
  42c20c:	ldr	x1, [sp, #8]
  42c210:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  42c214:	add	x2, x2, #0x26c
  42c218:	mov	x3, sp
  42c21c:	mov	x0, xzr
  42c220:	mov	x4, xzr
  42c224:	bl	40bbd0 <parse_env_file_sentinel@plt>
  42c228:	cmn	w0, #0x2
  42c22c:	b.ne	42c254 <sd_uid_get_state+0x88>  // b.any
  42c230:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42c234:	add	x1, x1, #0x272
  42c238:	mov	x0, sp
  42c23c:	bl	40afb0 <free_and_strdup@plt>
  42c240:	tbnz	w0, #31, 42c284 <sd_uid_get_state+0xb8>
  42c244:	ldr	x8, [sp]
  42c248:	b	42c26c <sd_uid_get_state+0xa0>
  42c24c:	mov	w20, #0xfffffff4            	// #-12
  42c250:	b	42c288 <sd_uid_get_state+0xbc>
  42c254:	mov	w20, w0
  42c258:	tbnz	w0, #31, 42c288 <sd_uid_get_state+0xbc>
  42c25c:	ldr	x8, [sp]
  42c260:	cbz	x8, 42c27c <sd_uid_get_state+0xb0>
  42c264:	ldrb	w9, [x8]
  42c268:	cbz	w9, 42c27c <sd_uid_get_state+0xb0>
  42c26c:	mov	w20, wzr
  42c270:	str	xzr, [sp]
  42c274:	str	x8, [x19]
  42c278:	b	42c288 <sd_uid_get_state+0xbc>
  42c27c:	mov	w20, #0xfffffffb            	// #-5
  42c280:	b	42c288 <sd_uid_get_state+0xbc>
  42c284:	mov	w20, w0
  42c288:	ldr	x0, [sp]
  42c28c:	bl	40a320 <free@plt>
  42c290:	ldr	x0, [sp, #8]
  42c294:	bl	40a320 <free@plt>
  42c298:	mov	w0, w20
  42c29c:	ldp	x20, x19, [sp, #32]
  42c2a0:	ldp	x29, x30, [sp, #16]
  42c2a4:	add	sp, sp, #0x30
  42c2a8:	ret
  42c2ac:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42c2b0:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42c2b4:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42c2b8:	add	x1, x1, #0x241
  42c2bc:	add	x2, x2, #0xf84
  42c2c0:	add	x4, x4, #0x247
  42c2c4:	mov	w0, #0x1                   	// #1
  42c2c8:	mov	w3, #0x107                 	// #263
  42c2cc:	b	42c2f0 <sd_uid_get_state+0x124>
  42c2d0:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42c2d4:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42c2d8:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42c2dc:	add	x1, x1, #0x2a9
  42c2e0:	add	x2, x2, #0xf84
  42c2e4:	add	x4, x4, #0x6fe
  42c2e8:	mov	w0, #0x1                   	// #1
  42c2ec:	mov	w3, #0xfa                  	// #250
  42c2f0:	bl	40ac10 <log_assert_failed_return_realm@plt>
  42c2f4:	mov	w20, #0xffffffea            	// #-22
  42c2f8:	b	42c288 <sd_uid_get_state+0xbc>

000000000042c2fc <sd_uid_get_display>:
  42c2fc:	sub	sp, sp, #0x30
  42c300:	stp	x29, x30, [sp, #16]
  42c304:	stp	x20, x19, [sp, #32]
  42c308:	add	x29, sp, #0x10
  42c30c:	stp	xzr, xzr, [sp]
  42c310:	cbz	x1, 42c3b8 <sd_uid_get_display+0xbc>
  42c314:	mov	x19, x1
  42c318:	mov	w20, w0
  42c31c:	bl	40aec0 <uid_is_valid@plt>
  42c320:	tbz	w0, #0, 42c3dc <sd_uid_get_display+0xe0>
  42c324:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42c328:	add	x1, x1, #0x71e
  42c32c:	add	x0, sp, #0x8
  42c330:	mov	w2, w20
  42c334:	bl	40bbc0 <asprintf@plt>
  42c338:	tbnz	w0, #31, 42c368 <sd_uid_get_display+0x6c>
  42c33c:	ldr	x1, [sp, #8]
  42c340:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  42c344:	add	x2, x2, #0x2a1
  42c348:	mov	x3, sp
  42c34c:	mov	x0, xzr
  42c350:	mov	x4, xzr
  42c354:	bl	40bbd0 <parse_env_file_sentinel@plt>
  42c358:	cmn	w0, #0x2
  42c35c:	b.ne	42c370 <sd_uid_get_display+0x74>  // b.any
  42c360:	mov	w20, #0xffffffc3            	// #-61
  42c364:	b	42c394 <sd_uid_get_display+0x98>
  42c368:	mov	w20, #0xfffffff4            	// #-12
  42c36c:	b	42c394 <sd_uid_get_display+0x98>
  42c370:	mov	w20, w0
  42c374:	tbnz	w0, #31, 42c394 <sd_uid_get_display+0x98>
  42c378:	ldr	x8, [sp]
  42c37c:	cbz	x8, 42c360 <sd_uid_get_display+0x64>
  42c380:	ldrb	w9, [x8]
  42c384:	cbz	w9, 42c360 <sd_uid_get_display+0x64>
  42c388:	mov	w20, wzr
  42c38c:	str	xzr, [sp]
  42c390:	str	x8, [x19]
  42c394:	ldr	x0, [sp]
  42c398:	bl	40a320 <free@plt>
  42c39c:	ldr	x0, [sp, #8]
  42c3a0:	bl	40a320 <free@plt>
  42c3a4:	mov	w0, w20
  42c3a8:	ldp	x20, x19, [sp, #32]
  42c3ac:	ldp	x29, x30, [sp, #16]
  42c3b0:	add	sp, sp, #0x30
  42c3b4:	ret
  42c3b8:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  42c3bc:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42c3c0:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42c3c4:	add	x1, x1, #0x6f1
  42c3c8:	add	x2, x2, #0xf84
  42c3cc:	add	x4, x4, #0x27a
  42c3d0:	mov	w0, #0x1                   	// #1
  42c3d4:	mov	w3, #0x11f                 	// #287
  42c3d8:	b	42c3fc <sd_uid_get_display+0x100>
  42c3dc:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42c3e0:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42c3e4:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42c3e8:	add	x1, x1, #0x2a9
  42c3ec:	add	x2, x2, #0xf84
  42c3f0:	add	x4, x4, #0x6fe
  42c3f4:	mov	w0, #0x1                   	// #1
  42c3f8:	mov	w3, #0xfa                  	// #250
  42c3fc:	bl	40ac10 <log_assert_failed_return_realm@plt>
  42c400:	mov	w20, #0xffffffea            	// #-22
  42c404:	b	42c394 <sd_uid_get_display+0x98>

000000000042c408 <sd_uid_is_on_seat>:
  42c408:	sub	sp, sp, #0x60
  42c40c:	stp	x29, x30, [sp, #32]
  42c410:	add	x29, sp, #0x20
  42c414:	str	x23, [sp, #48]
  42c418:	stp	x22, x21, [sp, #64]
  42c41c:	stp	x20, x19, [sp, #80]
  42c420:	mov	x19, x2
  42c424:	mov	w22, w1
  42c428:	mov	w20, w0
  42c42c:	stur	xzr, [x29, #-8]
  42c430:	str	xzr, [sp, #16]
  42c434:	bl	40aec0 <uid_is_valid@plt>
  42c438:	tbz	w0, #0, 42c5a8 <sd_uid_is_on_seat+0x1a0>
  42c43c:	cbz	x19, 42c468 <sd_uid_is_on_seat+0x60>
  42c440:	mov	x0, x19
  42c444:	bl	40bbe0 <filename_is_valid@plt>
  42c448:	tbz	w0, #0, 42c5cc <sd_uid_is_on_seat+0x1c4>
  42c44c:	adrp	x0, 43f000 <worker_hash_op+0xadf8>
  42c450:	add	x0, x0, #0x734
  42c454:	mov	x2, #0xffffffffffffffff    	// #-1
  42c458:	mov	x1, x19
  42c45c:	bl	40ae00 <path_join_internal@plt>
  42c460:	mov	x19, x0
  42c464:	b	42c4b0 <sd_uid_is_on_seat+0xa8>
  42c468:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42c46c:	add	x1, x1, #0x3b4
  42c470:	add	x2, x29, #0x18
  42c474:	mov	x0, xzr
  42c478:	str	xzr, [x29, #24]
  42c47c:	bl	42cdb8 <session_get_string>
  42c480:	mov	w21, w0
  42c484:	tbnz	w0, #31, 42c4bc <sd_uid_is_on_seat+0xb4>
  42c488:	ldr	x1, [x29, #24]
  42c48c:	adrp	x0, 43f000 <worker_hash_op+0xadf8>
  42c490:	add	x0, x0, #0x734
  42c494:	mov	x2, #0xffffffffffffffff    	// #-1
  42c498:	bl	40ae00 <path_join_internal@plt>
  42c49c:	mov	x19, x0
  42c4a0:	mov	w23, #0x1                   	// #1
  42c4a4:	ldr	x0, [x29, #24]
  42c4a8:	bl	40a320 <free@plt>
  42c4ac:	cbz	w23, 42c4cc <sd_uid_is_on_seat+0xc4>
  42c4b0:	cbnz	x19, 42c4d4 <sd_uid_is_on_seat+0xcc>
  42c4b4:	mov	w21, #0xfffffff4            	// #-12
  42c4b8:	b	42c5d4 <sd_uid_is_on_seat+0x1cc>
  42c4bc:	mov	w23, wzr
  42c4c0:	ldr	x0, [x29, #24]
  42c4c4:	bl	40a320 <free@plt>
  42c4c8:	cbnz	w23, 42c4b0 <sd_uid_is_on_seat+0xa8>
  42c4cc:	mov	x19, xzr
  42c4d0:	tbnz	w21, #31, 42c5d4 <sd_uid_is_on_seat+0x1cc>
  42c4d4:	adrp	x8, 43f000 <worker_hash_op+0xadf8>
  42c4d8:	adrp	x9, 43f000 <worker_hash_op+0xadf8>
  42c4dc:	add	x8, x8, #0x2eb
  42c4e0:	add	x9, x9, #0x2f6
  42c4e4:	cmp	w22, #0x0
  42c4e8:	csel	x2, x9, x8, eq  // eq = none
  42c4ec:	add	x3, sp, #0x10
  42c4f0:	mov	x0, xzr
  42c4f4:	mov	x1, x19
  42c4f8:	mov	x4, xzr
  42c4fc:	bl	40bbd0 <parse_env_file_sentinel@plt>
  42c500:	cmn	w0, #0x2
  42c504:	b.ne	42c510 <sd_uid_is_on_seat+0x108>  // b.any
  42c508:	mov	w21, wzr
  42c50c:	b	42c5d4 <sd_uid_is_on_seat+0x1cc>
  42c510:	mov	w21, w0
  42c514:	tbnz	w0, #31, 42c5d4 <sd_uid_is_on_seat+0x1cc>
  42c518:	ldr	x8, [sp, #16]
  42c51c:	cbz	x8, 42c508 <sd_uid_is_on_seat+0x100>
  42c520:	ldrb	w8, [x8]
  42c524:	cbz	w8, 42c508 <sd_uid_is_on_seat+0x100>
  42c528:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  42c52c:	add	x1, x1, #0xaca
  42c530:	sub	x0, x29, #0x8
  42c534:	mov	w2, w20
  42c538:	bl	40bbc0 <asprintf@plt>
  42c53c:	tbnz	w0, #31, 42c4b4 <sd_uid_is_on_seat+0xac>
  42c540:	ldr	x8, [sp, #16]
  42c544:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  42c548:	add	x2, x2, #0xacd
  42c54c:	add	x0, sp, #0x8
  42c550:	add	x1, x29, #0x18
  42c554:	mov	w3, wzr
  42c558:	str	x8, [sp, #8]
  42c55c:	bl	40b780 <split@plt>
  42c560:	cbz	x0, 42c508 <sd_uid_is_on_seat+0x100>
  42c564:	adrp	x20, 436000 <worker_hash_op+0x1df8>
  42c568:	mov	x1, x0
  42c56c:	add	x20, x20, #0xacd
  42c570:	ldur	x0, [x29, #-8]
  42c574:	ldr	x2, [x29, #24]
  42c578:	bl	40a6a0 <strncmp@plt>
  42c57c:	cbz	w0, 42c5a0 <sd_uid_is_on_seat+0x198>
  42c580:	add	x0, sp, #0x8
  42c584:	add	x1, x29, #0x18
  42c588:	mov	x2, x20
  42c58c:	mov	w3, wzr
  42c590:	bl	40b780 <split@plt>
  42c594:	mov	x1, x0
  42c598:	cbnz	x0, 42c570 <sd_uid_is_on_seat+0x168>
  42c59c:	b	42c508 <sd_uid_is_on_seat+0x100>
  42c5a0:	mov	w21, #0x1                   	// #1
  42c5a4:	b	42c5d4 <sd_uid_is_on_seat+0x1cc>
  42c5a8:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42c5ac:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42c5b0:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42c5b4:	add	x1, x1, #0x2a9
  42c5b8:	add	x2, x2, #0xf84
  42c5bc:	add	x4, x4, #0x2bb
  42c5c0:	mov	w0, #0x1                   	// #1
  42c5c4:	mov	w3, #0x153                 	// #339
  42c5c8:	bl	40ac10 <log_assert_failed_return_realm@plt>
  42c5cc:	mov	x19, xzr
  42c5d0:	mov	w21, #0xffffffea            	// #-22
  42c5d4:	mov	x0, x19
  42c5d8:	bl	40a320 <free@plt>
  42c5dc:	ldr	x0, [sp, #16]
  42c5e0:	bl	40a320 <free@plt>
  42c5e4:	ldur	x0, [x29, #-8]
  42c5e8:	bl	40a320 <free@plt>
  42c5ec:	mov	w0, w21
  42c5f0:	ldp	x20, x19, [sp, #80]
  42c5f4:	ldp	x22, x21, [sp, #64]
  42c5f8:	ldr	x23, [sp, #48]
  42c5fc:	ldp	x29, x30, [sp, #32]
  42c600:	add	sp, sp, #0x60
  42c604:	ret

000000000042c608 <sd_uid_get_sessions>:
  42c608:	adrp	x8, 43f000 <worker_hash_op+0xadf8>
  42c60c:	adrp	x9, 43f000 <worker_hash_op+0xadf8>
  42c610:	add	x8, x8, #0x31b
  42c614:	add	x9, x9, #0x30b
  42c618:	cmp	w1, #0x0
  42c61c:	csel	x8, x9, x8, gt
  42c620:	adrp	x9, 43f000 <worker_hash_op+0xadf8>
  42c624:	add	x9, x9, #0x2fb
  42c628:	csel	x1, x9, x8, eq  // eq = none
  42c62c:	b	42c630 <uid_get_array>

000000000042c630 <uid_get_array>:
  42c630:	sub	sp, sp, #0x40
  42c634:	stp	x29, x30, [sp, #16]
  42c638:	add	x29, sp, #0x10
  42c63c:	str	x21, [sp, #32]
  42c640:	stp	x20, x19, [sp, #48]
  42c644:	str	xzr, [x29, #24]
  42c648:	str	xzr, [sp, #8]
  42c64c:	cbz	x1, 42c75c <uid_get_array+0x12c>
  42c650:	mov	x19, x2
  42c654:	mov	x20, x1
  42c658:	mov	w21, w0
  42c65c:	bl	40aec0 <uid_is_valid@plt>
  42c660:	tbz	w0, #0, 42c730 <uid_get_array+0x100>
  42c664:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42c668:	add	x1, x1, #0x71e
  42c66c:	add	x0, x29, #0x18
  42c670:	mov	w2, w21
  42c674:	bl	40bbc0 <asprintf@plt>
  42c678:	tbnz	w0, #31, 42c6f8 <uid_get_array+0xc8>
  42c67c:	ldr	x1, [x29, #24]
  42c680:	add	x3, sp, #0x8
  42c684:	mov	x0, xzr
  42c688:	mov	x2, x20
  42c68c:	mov	x4, xzr
  42c690:	bl	40bbd0 <parse_env_file_sentinel@plt>
  42c694:	cmn	w0, #0x2
  42c698:	b.ne	42c6ac <uid_get_array+0x7c>  // b.any
  42c69c:	mov	w20, wzr
  42c6a0:	cbz	x19, 42c6fc <uid_get_array+0xcc>
  42c6a4:	str	xzr, [x19]
  42c6a8:	b	42c6fc <uid_get_array+0xcc>
  42c6ac:	mov	w20, w0
  42c6b0:	tbnz	w0, #31, 42c6fc <uid_get_array+0xcc>
  42c6b4:	ldr	x0, [sp, #8]
  42c6b8:	cbz	x0, 42c69c <uid_get_array+0x6c>
  42c6bc:	ldrb	w8, [x0]
  42c6c0:	cbz	w8, 42c69c <uid_get_array+0x6c>
  42c6c4:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  42c6c8:	add	x1, x1, #0xb34
  42c6cc:	mov	w2, wzr
  42c6d0:	bl	40ade0 <strv_split_full@plt>
  42c6d4:	cbz	x0, 42c6f8 <uid_get_array+0xc8>
  42c6d8:	mov	x21, x0
  42c6dc:	bl	40bbf0 <strv_uniq@plt>
  42c6e0:	mov	x0, x21
  42c6e4:	bl	40b4b0 <strv_length@plt>
  42c6e8:	mov	x20, x0
  42c6ec:	cbz	x19, 42c724 <uid_get_array+0xf4>
  42c6f0:	str	x21, [x19]
  42c6f4:	b	42c6fc <uid_get_array+0xcc>
  42c6f8:	mov	w20, #0xfffffff4            	// #-12
  42c6fc:	ldr	x0, [sp, #8]
  42c700:	bl	40a320 <free@plt>
  42c704:	ldr	x0, [x29, #24]
  42c708:	bl	40a320 <free@plt>
  42c70c:	mov	w0, w20
  42c710:	ldp	x20, x19, [sp, #48]
  42c714:	ldr	x21, [sp, #32]
  42c718:	ldp	x29, x30, [sp, #16]
  42c71c:	add	sp, sp, #0x40
  42c720:	ret
  42c724:	mov	x0, x21
  42c728:	bl	40ae30 <strv_free@plt>
  42c72c:	b	42c6fc <uid_get_array+0xcc>
  42c730:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42c734:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42c738:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42c73c:	add	x1, x1, #0x2a9
  42c740:	add	x2, x2, #0xf84
  42c744:	add	x4, x4, #0x6fe
  42c748:	mov	w0, #0x1                   	// #1
  42c74c:	mov	w3, #0xfa                  	// #250
  42c750:	bl	40ac10 <log_assert_failed_return_realm@plt>
  42c754:	mov	w20, #0xffffffea            	// #-22
  42c758:	b	42c6fc <uid_get_array+0xcc>
  42c75c:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42c760:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42c764:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42c768:	add	x1, x1, #0x747
  42c76c:	add	x2, x2, #0xf84
  42c770:	add	x4, x4, #0x750
  42c774:	mov	w0, #0x1                   	// #1
  42c778:	mov	w3, #0x172                 	// #370
  42c77c:	bl	40a630 <log_assert_failed_realm@plt>

000000000042c780 <sd_uid_get_seats>:
  42c780:	adrp	x8, 43f000 <worker_hash_op+0xadf8>
  42c784:	adrp	x9, 43f000 <worker_hash_op+0xadf8>
  42c788:	add	x8, x8, #0x33e
  42c78c:	add	x9, x9, #0x331
  42c790:	cmp	w1, #0x0
  42c794:	csel	x8, x9, x8, gt
  42c798:	adrp	x9, 43f000 <worker_hash_op+0xadf8>
  42c79c:	add	x9, x9, #0x324
  42c7a0:	csel	x1, x9, x8, eq  // eq = none
  42c7a4:	b	42c630 <uid_get_array>

000000000042c7a8 <sd_session_is_active>:
  42c7a8:	sub	sp, sp, #0x40
  42c7ac:	stp	x29, x30, [sp, #16]
  42c7b0:	stp	x22, x21, [sp, #32]
  42c7b4:	stp	x20, x19, [sp, #48]
  42c7b8:	add	x29, sp, #0x10
  42c7bc:	str	xzr, [sp]
  42c7c0:	cbz	x0, 42c7ec <sd_session_is_active+0x44>
  42c7c4:	mov	x19, x0
  42c7c8:	bl	40bc00 <session_id_valid@plt>
  42c7cc:	tbz	w0, #0, 42c850 <sd_session_is_active+0xa8>
  42c7d0:	adrp	x0, 43f000 <worker_hash_op+0xadf8>
  42c7d4:	add	x0, x0, #0x781
  42c7d8:	mov	x2, #0xffffffffffffffff    	// #-1
  42c7dc:	mov	x1, x19
  42c7e0:	bl	40ae00 <path_join_internal@plt>
  42c7e4:	mov	x19, x0
  42c7e8:	b	42c868 <sd_session_is_active+0xc0>
  42c7ec:	add	x1, sp, #0x8
  42c7f0:	str	xzr, [sp, #8]
  42c7f4:	bl	40bb50 <cg_pid_get_session@plt>
  42c7f8:	mov	w22, wzr
  42c7fc:	cmn	w0, #0x7b
  42c800:	mov	w20, #0xffffffc3            	// #-61
  42c804:	b.eq	42c85c <sd_session_is_active+0xb4>  // b.none
  42c808:	mov	w21, w0
  42c80c:	cmn	w0, #0x6
  42c810:	b.eq	42c85c <sd_session_is_active+0xb4>  // b.none
  42c814:	tbnz	w21, #31, 42c8f0 <sd_session_is_active+0x148>
  42c818:	ldr	x1, [sp, #8]
  42c81c:	adrp	x0, 43f000 <worker_hash_op+0xadf8>
  42c820:	add	x0, x0, #0x781
  42c824:	mov	x2, #0xffffffffffffffff    	// #-1
  42c828:	bl	40ae00 <path_join_internal@plt>
  42c82c:	mov	x19, x0
  42c830:	mov	w22, #0x1                   	// #1
  42c834:	mov	w20, w21
  42c838:	ldr	x0, [sp, #8]
  42c83c:	bl	40a320 <free@plt>
  42c840:	cbnz	w22, 42c868 <sd_session_is_active+0xc0>
  42c844:	mov	x19, xzr
  42c848:	tbz	w20, #31, 42c86c <sd_session_is_active+0xc4>
  42c84c:	b	42c8c8 <sd_session_is_active+0x120>
  42c850:	mov	x19, xzr
  42c854:	mov	w20, #0xffffffea            	// #-22
  42c858:	b	42c8c8 <sd_session_is_active+0x120>
  42c85c:	ldr	x0, [sp, #8]
  42c860:	bl	40a320 <free@plt>
  42c864:	cbz	w22, 42c844 <sd_session_is_active+0x9c>
  42c868:	cbz	x19, 42c8bc <sd_session_is_active+0x114>
  42c86c:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  42c870:	add	x2, x2, #0x344
  42c874:	mov	x3, sp
  42c878:	mov	x0, xzr
  42c87c:	mov	x1, x19
  42c880:	mov	x4, xzr
  42c884:	bl	40bbd0 <parse_env_file_sentinel@plt>
  42c888:	cmn	w0, #0x2
  42c88c:	b.ne	42c898 <sd_session_is_active+0xf0>  // b.any
  42c890:	mov	w20, #0xfffffffa            	// #-6
  42c894:	b	42c8c8 <sd_session_is_active+0x120>
  42c898:	mov	w20, w0
  42c89c:	tbnz	w0, #31, 42c8c8 <sd_session_is_active+0x120>
  42c8a0:	ldr	x0, [sp]
  42c8a4:	cbz	x0, 42c8c4 <sd_session_is_active+0x11c>
  42c8a8:	ldrb	w8, [x0]
  42c8ac:	cbz	w8, 42c8c4 <sd_session_is_active+0x11c>
  42c8b0:	bl	40bc10 <parse_boolean@plt>
  42c8b4:	mov	w20, w0
  42c8b8:	b	42c8c8 <sd_session_is_active+0x120>
  42c8bc:	mov	w20, #0xfffffff4            	// #-12
  42c8c0:	b	42c8c8 <sd_session_is_active+0x120>
  42c8c4:	mov	w20, #0xfffffffb            	// #-5
  42c8c8:	ldr	x0, [sp]
  42c8cc:	bl	40a320 <free@plt>
  42c8d0:	mov	x0, x19
  42c8d4:	bl	40a320 <free@plt>
  42c8d8:	mov	w0, w20
  42c8dc:	ldp	x20, x19, [sp, #48]
  42c8e0:	ldp	x22, x21, [sp, #32]
  42c8e4:	ldp	x29, x30, [sp, #16]
  42c8e8:	add	sp, sp, #0x40
  42c8ec:	ret
  42c8f0:	mov	w22, wzr
  42c8f4:	mov	w20, w21
  42c8f8:	ldr	x0, [sp, #8]
  42c8fc:	bl	40a320 <free@plt>
  42c900:	cbnz	w22, 42c868 <sd_session_is_active+0xc0>
  42c904:	b	42c844 <sd_session_is_active+0x9c>

000000000042c908 <sd_session_is_remote>:
  42c908:	sub	sp, sp, #0x40
  42c90c:	stp	x29, x30, [sp, #16]
  42c910:	stp	x22, x21, [sp, #32]
  42c914:	stp	x20, x19, [sp, #48]
  42c918:	add	x29, sp, #0x10
  42c91c:	str	xzr, [sp]
  42c920:	cbz	x0, 42c94c <sd_session_is_remote+0x44>
  42c924:	mov	x19, x0
  42c928:	bl	40bc00 <session_id_valid@plt>
  42c92c:	tbz	w0, #0, 42c9b0 <sd_session_is_remote+0xa8>
  42c930:	adrp	x0, 43f000 <worker_hash_op+0xadf8>
  42c934:	add	x0, x0, #0x781
  42c938:	mov	x2, #0xffffffffffffffff    	// #-1
  42c93c:	mov	x1, x19
  42c940:	bl	40ae00 <path_join_internal@plt>
  42c944:	mov	x19, x0
  42c948:	b	42c9c8 <sd_session_is_remote+0xc0>
  42c94c:	add	x1, sp, #0x8
  42c950:	str	xzr, [sp, #8]
  42c954:	bl	40bb50 <cg_pid_get_session@plt>
  42c958:	mov	w22, wzr
  42c95c:	cmn	w0, #0x7b
  42c960:	mov	w20, #0xffffffc3            	// #-61
  42c964:	b.eq	42c9bc <sd_session_is_remote+0xb4>  // b.none
  42c968:	mov	w21, w0
  42c96c:	cmn	w0, #0x6
  42c970:	b.eq	42c9bc <sd_session_is_remote+0xb4>  // b.none
  42c974:	tbnz	w21, #31, 42ca50 <sd_session_is_remote+0x148>
  42c978:	ldr	x1, [sp, #8]
  42c97c:	adrp	x0, 43f000 <worker_hash_op+0xadf8>
  42c980:	add	x0, x0, #0x781
  42c984:	mov	x2, #0xffffffffffffffff    	// #-1
  42c988:	bl	40ae00 <path_join_internal@plt>
  42c98c:	mov	x19, x0
  42c990:	mov	w22, #0x1                   	// #1
  42c994:	mov	w20, w21
  42c998:	ldr	x0, [sp, #8]
  42c99c:	bl	40a320 <free@plt>
  42c9a0:	cbnz	w22, 42c9c8 <sd_session_is_remote+0xc0>
  42c9a4:	mov	x19, xzr
  42c9a8:	tbz	w20, #31, 42c9cc <sd_session_is_remote+0xc4>
  42c9ac:	b	42ca28 <sd_session_is_remote+0x120>
  42c9b0:	mov	x19, xzr
  42c9b4:	mov	w20, #0xffffffea            	// #-22
  42c9b8:	b	42ca28 <sd_session_is_remote+0x120>
  42c9bc:	ldr	x0, [sp, #8]
  42c9c0:	bl	40a320 <free@plt>
  42c9c4:	cbz	w22, 42c9a4 <sd_session_is_remote+0x9c>
  42c9c8:	cbz	x19, 42ca1c <sd_session_is_remote+0x114>
  42c9cc:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  42c9d0:	add	x2, x2, #0x34b
  42c9d4:	mov	x3, sp
  42c9d8:	mov	x0, xzr
  42c9dc:	mov	x1, x19
  42c9e0:	mov	x4, xzr
  42c9e4:	bl	40bbd0 <parse_env_file_sentinel@plt>
  42c9e8:	cmn	w0, #0x2
  42c9ec:	b.ne	42c9f8 <sd_session_is_remote+0xf0>  // b.any
  42c9f0:	mov	w20, #0xfffffffa            	// #-6
  42c9f4:	b	42ca28 <sd_session_is_remote+0x120>
  42c9f8:	mov	w20, w0
  42c9fc:	tbnz	w0, #31, 42ca28 <sd_session_is_remote+0x120>
  42ca00:	ldr	x0, [sp]
  42ca04:	cbz	x0, 42ca24 <sd_session_is_remote+0x11c>
  42ca08:	ldrb	w8, [x0]
  42ca0c:	cbz	w8, 42ca24 <sd_session_is_remote+0x11c>
  42ca10:	bl	40bc10 <parse_boolean@plt>
  42ca14:	mov	w20, w0
  42ca18:	b	42ca28 <sd_session_is_remote+0x120>
  42ca1c:	mov	w20, #0xfffffff4            	// #-12
  42ca20:	b	42ca28 <sd_session_is_remote+0x120>
  42ca24:	mov	w20, #0xffffffc3            	// #-61
  42ca28:	ldr	x0, [sp]
  42ca2c:	bl	40a320 <free@plt>
  42ca30:	mov	x0, x19
  42ca34:	bl	40a320 <free@plt>
  42ca38:	mov	w0, w20
  42ca3c:	ldp	x20, x19, [sp, #48]
  42ca40:	ldp	x22, x21, [sp, #32]
  42ca44:	ldp	x29, x30, [sp, #16]
  42ca48:	add	sp, sp, #0x40
  42ca4c:	ret
  42ca50:	mov	w22, wzr
  42ca54:	mov	w20, w21
  42ca58:	ldr	x0, [sp, #8]
  42ca5c:	bl	40a320 <free@plt>
  42ca60:	cbnz	w22, 42c9c8 <sd_session_is_remote+0xc0>
  42ca64:	b	42c9a4 <sd_session_is_remote+0x9c>

000000000042ca68 <sd_session_get_state>:
  42ca68:	sub	sp, sp, #0x50
  42ca6c:	stp	x29, x30, [sp, #16]
  42ca70:	str	x23, [sp, #32]
  42ca74:	stp	x22, x21, [sp, #48]
  42ca78:	stp	x20, x19, [sp, #64]
  42ca7c:	add	x29, sp, #0x10
  42ca80:	str	xzr, [sp, #8]
  42ca84:	cbz	x1, 42cbb0 <sd_session_get_state+0x148>
  42ca88:	mov	x19, x1
  42ca8c:	mov	x20, x0
  42ca90:	cbz	x0, 42cabc <sd_session_get_state+0x54>
  42ca94:	mov	x0, x20
  42ca98:	bl	40bc00 <session_id_valid@plt>
  42ca9c:	tbz	w0, #0, 42cbd4 <sd_session_get_state+0x16c>
  42caa0:	adrp	x0, 43f000 <worker_hash_op+0xadf8>
  42caa4:	add	x0, x0, #0x781
  42caa8:	mov	x2, #0xffffffffffffffff    	// #-1
  42caac:	mov	x1, x20
  42cab0:	bl	40ae00 <path_join_internal@plt>
  42cab4:	mov	x20, x0
  42cab8:	b	42cb30 <sd_session_get_state+0xc8>
  42cabc:	add	x1, x29, #0x18
  42cac0:	mov	w0, wzr
  42cac4:	str	xzr, [x29, #24]
  42cac8:	bl	40bb50 <cg_pid_get_session@plt>
  42cacc:	mov	w23, wzr
  42cad0:	cmn	w0, #0x7b
  42cad4:	mov	w21, #0xffffffc3            	// #-61
  42cad8:	b.eq	42cb24 <sd_session_get_state+0xbc>  // b.none
  42cadc:	mov	w22, w0
  42cae0:	cmn	w0, #0x6
  42cae4:	b.eq	42cb24 <sd_session_get_state+0xbc>  // b.none
  42cae8:	tbnz	w22, #31, 42cb98 <sd_session_get_state+0x130>
  42caec:	ldr	x1, [x29, #24]
  42caf0:	adrp	x0, 43f000 <worker_hash_op+0xadf8>
  42caf4:	add	x0, x0, #0x781
  42caf8:	mov	x2, #0xffffffffffffffff    	// #-1
  42cafc:	bl	40ae00 <path_join_internal@plt>
  42cb00:	mov	x20, x0
  42cb04:	mov	w23, #0x1                   	// #1
  42cb08:	mov	w21, w22
  42cb0c:	ldr	x0, [x29, #24]
  42cb10:	bl	40a320 <free@plt>
  42cb14:	cbnz	w23, 42cb30 <sd_session_get_state+0xc8>
  42cb18:	mov	x20, xzr
  42cb1c:	tbz	w21, #31, 42cb34 <sd_session_get_state+0xcc>
  42cb20:	b	42cbdc <sd_session_get_state+0x174>
  42cb24:	ldr	x0, [x29, #24]
  42cb28:	bl	40a320 <free@plt>
  42cb2c:	cbz	w23, 42cb18 <sd_session_get_state+0xb0>
  42cb30:	cbz	x20, 42cb88 <sd_session_get_state+0x120>
  42cb34:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  42cb38:	add	x2, x2, #0x26c
  42cb3c:	add	x3, sp, #0x8
  42cb40:	mov	x0, xzr
  42cb44:	mov	x1, x20
  42cb48:	mov	x4, xzr
  42cb4c:	bl	40bbd0 <parse_env_file_sentinel@plt>
  42cb50:	cmn	w0, #0x2
  42cb54:	b.ne	42cb60 <sd_session_get_state+0xf8>  // b.any
  42cb58:	mov	w21, #0xfffffffa            	// #-6
  42cb5c:	b	42cbdc <sd_session_get_state+0x174>
  42cb60:	mov	w21, w0
  42cb64:	tbnz	w0, #31, 42cbdc <sd_session_get_state+0x174>
  42cb68:	ldr	x8, [sp, #8]
  42cb6c:	cbz	x8, 42cb90 <sd_session_get_state+0x128>
  42cb70:	ldrb	w9, [x8]
  42cb74:	cbz	w9, 42cb90 <sd_session_get_state+0x128>
  42cb78:	mov	w21, wzr
  42cb7c:	str	xzr, [sp, #8]
  42cb80:	str	x8, [x19]
  42cb84:	b	42cbdc <sd_session_get_state+0x174>
  42cb88:	mov	w21, #0xfffffff4            	// #-12
  42cb8c:	b	42cbdc <sd_session_get_state+0x174>
  42cb90:	mov	w21, #0xfffffffb            	// #-5
  42cb94:	b	42cbdc <sd_session_get_state+0x174>
  42cb98:	mov	w23, wzr
  42cb9c:	mov	w21, w22
  42cba0:	ldr	x0, [x29, #24]
  42cba4:	bl	40a320 <free@plt>
  42cba8:	cbnz	w23, 42cb30 <sd_session_get_state+0xc8>
  42cbac:	b	42cb18 <sd_session_get_state+0xb0>
  42cbb0:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42cbb4:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42cbb8:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42cbbc:	add	x1, x1, #0x241
  42cbc0:	add	x2, x2, #0xf84
  42cbc4:	add	x4, x4, #0x352
  42cbc8:	mov	w0, #0x1                   	// #1
  42cbcc:	mov	w3, #0x1e8                 	// #488
  42cbd0:	bl	40ac10 <log_assert_failed_return_realm@plt>
  42cbd4:	mov	x20, xzr
  42cbd8:	mov	w21, #0xffffffea            	// #-22
  42cbdc:	ldr	x0, [sp, #8]
  42cbe0:	bl	40a320 <free@plt>
  42cbe4:	mov	x0, x20
  42cbe8:	bl	40a320 <free@plt>
  42cbec:	mov	w0, w21
  42cbf0:	ldp	x20, x19, [sp, #64]
  42cbf4:	ldp	x22, x21, [sp, #48]
  42cbf8:	ldr	x23, [sp, #32]
  42cbfc:	ldp	x29, x30, [sp, #16]
  42cc00:	add	sp, sp, #0x50
  42cc04:	ret

000000000042cc08 <sd_session_get_uid>:
  42cc08:	sub	sp, sp, #0x50
  42cc0c:	stp	x29, x30, [sp, #16]
  42cc10:	str	x23, [sp, #32]
  42cc14:	stp	x22, x21, [sp, #48]
  42cc18:	stp	x20, x19, [sp, #64]
  42cc1c:	add	x29, sp, #0x10
  42cc20:	str	xzr, [sp, #8]
  42cc24:	cbz	x1, 42cd50 <sd_session_get_uid+0x148>
  42cc28:	mov	x19, x1
  42cc2c:	mov	x20, x0
  42cc30:	cbz	x0, 42cc5c <sd_session_get_uid+0x54>
  42cc34:	mov	x0, x20
  42cc38:	bl	40bc00 <session_id_valid@plt>
  42cc3c:	tbz	w0, #0, 42cd74 <sd_session_get_uid+0x16c>
  42cc40:	adrp	x0, 43f000 <worker_hash_op+0xadf8>
  42cc44:	add	x0, x0, #0x781
  42cc48:	mov	x2, #0xffffffffffffffff    	// #-1
  42cc4c:	mov	x1, x20
  42cc50:	bl	40ae00 <path_join_internal@plt>
  42cc54:	mov	x20, x0
  42cc58:	b	42ccd0 <sd_session_get_uid+0xc8>
  42cc5c:	add	x1, x29, #0x18
  42cc60:	mov	w0, wzr
  42cc64:	str	xzr, [x29, #24]
  42cc68:	bl	40bb50 <cg_pid_get_session@plt>
  42cc6c:	mov	w23, wzr
  42cc70:	cmn	w0, #0x7b
  42cc74:	mov	w21, #0xffffffc3            	// #-61
  42cc78:	b.eq	42ccc4 <sd_session_get_uid+0xbc>  // b.none
  42cc7c:	mov	w22, w0
  42cc80:	cmn	w0, #0x6
  42cc84:	b.eq	42ccc4 <sd_session_get_uid+0xbc>  // b.none
  42cc88:	tbnz	w22, #31, 42cd38 <sd_session_get_uid+0x130>
  42cc8c:	ldr	x1, [x29, #24]
  42cc90:	adrp	x0, 43f000 <worker_hash_op+0xadf8>
  42cc94:	add	x0, x0, #0x781
  42cc98:	mov	x2, #0xffffffffffffffff    	// #-1
  42cc9c:	bl	40ae00 <path_join_internal@plt>
  42cca0:	mov	x20, x0
  42cca4:	mov	w23, #0x1                   	// #1
  42cca8:	mov	w21, w22
  42ccac:	ldr	x0, [x29, #24]
  42ccb0:	bl	40a320 <free@plt>
  42ccb4:	cbnz	w23, 42ccd0 <sd_session_get_uid+0xc8>
  42ccb8:	mov	x20, xzr
  42ccbc:	tbz	w21, #31, 42ccd4 <sd_session_get_uid+0xcc>
  42ccc0:	b	42cd7c <sd_session_get_uid+0x174>
  42ccc4:	ldr	x0, [x29, #24]
  42ccc8:	bl	40a320 <free@plt>
  42cccc:	cbz	w23, 42ccb8 <sd_session_get_uid+0xb0>
  42ccd0:	cbz	x20, 42cd28 <sd_session_get_uid+0x120>
  42ccd4:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  42ccd8:	add	x2, x2, #0x3b0
  42ccdc:	add	x3, sp, #0x8
  42cce0:	mov	x0, xzr
  42cce4:	mov	x1, x20
  42cce8:	mov	x4, xzr
  42ccec:	bl	40bbd0 <parse_env_file_sentinel@plt>
  42ccf0:	cmn	w0, #0x2
  42ccf4:	b.ne	42cd00 <sd_session_get_uid+0xf8>  // b.any
  42ccf8:	mov	w21, #0xfffffffa            	// #-6
  42ccfc:	b	42cd7c <sd_session_get_uid+0x174>
  42cd00:	mov	w21, w0
  42cd04:	tbnz	w0, #31, 42cd7c <sd_session_get_uid+0x174>
  42cd08:	ldr	x0, [sp, #8]
  42cd0c:	cbz	x0, 42cd30 <sd_session_get_uid+0x128>
  42cd10:	ldrb	w8, [x0]
  42cd14:	cbz	w8, 42cd30 <sd_session_get_uid+0x128>
  42cd18:	mov	x1, x19
  42cd1c:	bl	40b210 <parse_uid@plt>
  42cd20:	mov	w21, w0
  42cd24:	b	42cd7c <sd_session_get_uid+0x174>
  42cd28:	mov	w21, #0xfffffff4            	// #-12
  42cd2c:	b	42cd7c <sd_session_get_uid+0x174>
  42cd30:	mov	w21, #0xfffffffb            	// #-5
  42cd34:	b	42cd7c <sd_session_get_uid+0x174>
  42cd38:	mov	w23, wzr
  42cd3c:	mov	w21, w22
  42cd40:	ldr	x0, [x29, #24]
  42cd44:	bl	40a320 <free@plt>
  42cd48:	cbnz	w23, 42ccd0 <sd_session_get_uid+0xc8>
  42cd4c:	b	42ccb8 <sd_session_get_uid+0xb0>
  42cd50:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42cd54:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42cd58:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42cd5c:	add	x1, x1, #0xca
  42cd60:	add	x2, x2, #0xf84
  42cd64:	add	x4, x4, #0x382
  42cd68:	mov	w0, #0x1                   	// #1
  42cd6c:	mov	w3, #0x1ff                 	// #511
  42cd70:	bl	40ac10 <log_assert_failed_return_realm@plt>
  42cd74:	mov	x20, xzr
  42cd78:	mov	w21, #0xffffffea            	// #-22
  42cd7c:	ldr	x0, [sp, #8]
  42cd80:	bl	40a320 <free@plt>
  42cd84:	mov	x0, x20
  42cd88:	bl	40a320 <free@plt>
  42cd8c:	mov	w0, w21
  42cd90:	ldp	x20, x19, [sp, #64]
  42cd94:	ldp	x22, x21, [sp, #48]
  42cd98:	ldr	x23, [sp, #32]
  42cd9c:	ldp	x29, x30, [sp, #16]
  42cda0:	add	sp, sp, #0x50
  42cda4:	ret

000000000042cda8 <sd_session_get_seat>:
  42cda8:	mov	x2, x1
  42cdac:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42cdb0:	add	x1, x1, #0x3b4
  42cdb4:	b	42cdb8 <session_get_string>

000000000042cdb8 <session_get_string>:
  42cdb8:	sub	sp, sp, #0x50
  42cdbc:	stp	x29, x30, [sp, #16]
  42cdc0:	stp	x24, x23, [sp, #32]
  42cdc4:	stp	x22, x21, [sp, #48]
  42cdc8:	stp	x20, x19, [sp, #64]
  42cdcc:	add	x29, sp, #0x10
  42cdd0:	str	xzr, [sp]
  42cdd4:	cbz	x2, 42cf04 <session_get_string+0x14c>
  42cdd8:	mov	x21, x1
  42cddc:	cbz	x1, 42cf5c <session_get_string+0x1a4>
  42cde0:	mov	x19, x2
  42cde4:	mov	x20, x0
  42cde8:	cbz	x0, 42ce14 <session_get_string+0x5c>
  42cdec:	mov	x0, x20
  42cdf0:	bl	40bc00 <session_id_valid@plt>
  42cdf4:	tbz	w0, #0, 42cf28 <session_get_string+0x170>
  42cdf8:	adrp	x0, 43f000 <worker_hash_op+0xadf8>
  42cdfc:	add	x0, x0, #0x781
  42ce00:	mov	x2, #0xffffffffffffffff    	// #-1
  42ce04:	mov	x1, x20
  42ce08:	bl	40ae00 <path_join_internal@plt>
  42ce0c:	mov	x20, x0
  42ce10:	b	42ce88 <session_get_string+0xd0>
  42ce14:	add	x1, sp, #0x8
  42ce18:	mov	w0, wzr
  42ce1c:	str	xzr, [sp, #8]
  42ce20:	bl	40bb50 <cg_pid_get_session@plt>
  42ce24:	mov	w24, wzr
  42ce28:	cmn	w0, #0x7b
  42ce2c:	mov	w22, #0xffffffc3            	// #-61
  42ce30:	b.eq	42ce7c <session_get_string+0xc4>  // b.none
  42ce34:	mov	w23, w0
  42ce38:	cmn	w0, #0x6
  42ce3c:	b.eq	42ce7c <session_get_string+0xc4>  // b.none
  42ce40:	tbnz	w23, #31, 42ceec <session_get_string+0x134>
  42ce44:	ldr	x1, [sp, #8]
  42ce48:	adrp	x0, 43f000 <worker_hash_op+0xadf8>
  42ce4c:	add	x0, x0, #0x781
  42ce50:	mov	x2, #0xffffffffffffffff    	// #-1
  42ce54:	bl	40ae00 <path_join_internal@plt>
  42ce58:	mov	x20, x0
  42ce5c:	mov	w24, #0x1                   	// #1
  42ce60:	mov	w22, w23
  42ce64:	ldr	x0, [sp, #8]
  42ce68:	bl	40a320 <free@plt>
  42ce6c:	cbnz	w24, 42ce88 <session_get_string+0xd0>
  42ce70:	mov	x20, xzr
  42ce74:	tbz	w22, #31, 42ce8c <session_get_string+0xd4>
  42ce78:	b	42cf30 <session_get_string+0x178>
  42ce7c:	ldr	x0, [sp, #8]
  42ce80:	bl	40a320 <free@plt>
  42ce84:	cbz	w24, 42ce70 <session_get_string+0xb8>
  42ce88:	cbz	x20, 42cedc <session_get_string+0x124>
  42ce8c:	mov	x3, sp
  42ce90:	mov	x0, xzr
  42ce94:	mov	x1, x20
  42ce98:	mov	x2, x21
  42ce9c:	mov	x4, xzr
  42cea0:	bl	40bbd0 <parse_env_file_sentinel@plt>
  42cea4:	cmn	w0, #0x2
  42cea8:	b.ne	42ceb4 <session_get_string+0xfc>  // b.any
  42ceac:	mov	w22, #0xfffffffa            	// #-6
  42ceb0:	b	42cf30 <session_get_string+0x178>
  42ceb4:	mov	w22, w0
  42ceb8:	tbnz	w0, #31, 42cf30 <session_get_string+0x178>
  42cebc:	ldr	x8, [sp]
  42cec0:	cbz	x8, 42cee4 <session_get_string+0x12c>
  42cec4:	ldrb	w9, [x8]
  42cec8:	cbz	w9, 42cee4 <session_get_string+0x12c>
  42cecc:	mov	w22, wzr
  42ced0:	str	xzr, [sp]
  42ced4:	str	x8, [x19]
  42ced8:	b	42cf30 <session_get_string+0x178>
  42cedc:	mov	w22, #0xfffffff4            	// #-12
  42cee0:	b	42cf30 <session_get_string+0x178>
  42cee4:	mov	w22, #0xffffffc3            	// #-61
  42cee8:	b	42cf30 <session_get_string+0x178>
  42ceec:	mov	w24, wzr
  42cef0:	mov	w22, w23
  42cef4:	ldr	x0, [sp, #8]
  42cef8:	bl	40a320 <free@plt>
  42cefc:	cbnz	w24, 42ce88 <session_get_string+0xd0>
  42cf00:	b	42ce70 <session_get_string+0xb8>
  42cf04:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  42cf08:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42cf0c:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42cf10:	add	x1, x1, #0x8db
  42cf14:	add	x2, x2, #0xf84
  42cf18:	add	x4, x4, #0x797
  42cf1c:	mov	w0, #0x1                   	// #1
  42cf20:	mov	w3, #0x214                 	// #532
  42cf24:	bl	40ac10 <log_assert_failed_return_realm@plt>
  42cf28:	mov	x20, xzr
  42cf2c:	mov	w22, #0xffffffea            	// #-22
  42cf30:	ldr	x0, [sp]
  42cf34:	bl	40a320 <free@plt>
  42cf38:	mov	x0, x20
  42cf3c:	bl	40a320 <free@plt>
  42cf40:	mov	w0, w22
  42cf44:	ldp	x20, x19, [sp, #64]
  42cf48:	ldp	x22, x21, [sp, #48]
  42cf4c:	ldp	x24, x23, [sp, #32]
  42cf50:	ldp	x29, x30, [sp, #16]
  42cf54:	add	sp, sp, #0x50
  42cf58:	ret
  42cf5c:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42cf60:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42cf64:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42cf68:	add	x1, x1, #0x7d3
  42cf6c:	add	x2, x2, #0xf84
  42cf70:	add	x4, x4, #0x797
  42cf74:	mov	w0, #0x1                   	// #1
  42cf78:	mov	w3, #0x215                 	// #533
  42cf7c:	bl	40a630 <log_assert_failed_realm@plt>

000000000042cf80 <sd_session_get_tty>:
  42cf80:	mov	x2, x1
  42cf84:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42cf88:	add	x1, x1, #0x3b9
  42cf8c:	b	42cdb8 <session_get_string>

000000000042cf90 <sd_session_get_vt>:
  42cf90:	sub	sp, sp, #0x30
  42cf94:	stp	x29, x30, [sp, #16]
  42cf98:	stp	x20, x19, [sp, #32]
  42cf9c:	add	x29, sp, #0x10
  42cfa0:	str	xzr, [sp, #8]
  42cfa4:	cbz	x1, 42d004 <sd_session_get_vt+0x74>
  42cfa8:	mov	x19, x1
  42cfac:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42cfb0:	add	x1, x1, #0x3f6
  42cfb4:	add	x2, sp, #0x8
  42cfb8:	bl	42cdb8 <session_get_string>
  42cfbc:	tbnz	w0, #31, 42cfe4 <sd_session_get_vt+0x54>
  42cfc0:	ldr	x0, [sp, #8]
  42cfc4:	add	x2, sp, #0x4
  42cfc8:	mov	w1, wzr
  42cfcc:	bl	40a2e0 <safe_atou_full@plt>
  42cfd0:	tbnz	w0, #31, 42cfe4 <sd_session_get_vt+0x54>
  42cfd4:	ldr	w8, [sp, #4]
  42cfd8:	mov	w20, wzr
  42cfdc:	str	w8, [x19]
  42cfe0:	b	42cfe8 <sd_session_get_vt+0x58>
  42cfe4:	mov	w20, w0
  42cfe8:	ldr	x0, [sp, #8]
  42cfec:	bl	40a320 <free@plt>
  42cff0:	mov	w0, w20
  42cff4:	ldp	x20, x19, [sp, #32]
  42cff8:	ldp	x29, x30, [sp, #16]
  42cffc:	add	sp, sp, #0x30
  42d000:	ret
  42d004:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42d008:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42d00c:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42d010:	add	x1, x1, #0x3bd
  42d014:	add	x2, x2, #0xf84
  42d018:	add	x4, x4, #0x3c2
  42d01c:	mov	w0, #0x1                   	// #1
  42d020:	mov	w3, #0x234                 	// #564
  42d024:	bl	40ac10 <log_assert_failed_return_realm@plt>
  42d028:	mov	w20, #0xffffffea            	// #-22
  42d02c:	b	42cfe8 <sd_session_get_vt+0x58>

000000000042d030 <sd_session_get_service>:
  42d030:	mov	x2, x1
  42d034:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42d038:	add	x1, x1, #0x3fb
  42d03c:	b	42cdb8 <session_get_string>

000000000042d040 <sd_session_get_type>:
  42d040:	mov	x2, x1
  42d044:	adrp	x1, 43e000 <worker_hash_op+0x9df8>
  42d048:	add	x1, x1, #0xbe2
  42d04c:	b	42cdb8 <session_get_string>

000000000042d050 <sd_session_get_class>:
  42d050:	mov	x2, x1
  42d054:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42d058:	add	x1, x1, #0x403
  42d05c:	b	42cdb8 <session_get_string>

000000000042d060 <sd_session_get_desktop>:
  42d060:	sub	sp, sp, #0x30
  42d064:	stp	x29, x30, [sp, #16]
  42d068:	stp	x20, x19, [sp, #32]
  42d06c:	add	x29, sp, #0x10
  42d070:	str	xzr, [sp, #8]
  42d074:	cbz	x1, 42d0d4 <sd_session_get_desktop+0x74>
  42d078:	mov	x19, x1
  42d07c:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42d080:	add	x1, x1, #0x443
  42d084:	add	x2, sp, #0x8
  42d088:	bl	42cdb8 <session_get_string>
  42d08c:	tbnz	w0, #31, 42d0b4 <sd_session_get_desktop+0x54>
  42d090:	ldr	x0, [sp, #8]
  42d094:	mov	x2, sp
  42d098:	mov	w1, wzr
  42d09c:	bl	40bb20 <cunescape@plt>
  42d0a0:	tbnz	w0, #31, 42d0b4 <sd_session_get_desktop+0x54>
  42d0a4:	ldr	x8, [sp]
  42d0a8:	mov	w20, wzr
  42d0ac:	str	x8, [x19]
  42d0b0:	b	42d0b8 <sd_session_get_desktop+0x58>
  42d0b4:	mov	w20, w0
  42d0b8:	ldr	x0, [sp, #8]
  42d0bc:	bl	40a320 <free@plt>
  42d0c0:	mov	w0, w20
  42d0c4:	ldp	x20, x19, [sp, #32]
  42d0c8:	ldp	x29, x30, [sp, #16]
  42d0cc:	add	sp, sp, #0x30
  42d0d0:	ret
  42d0d4:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42d0d8:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42d0dc:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42d0e0:	add	x1, x1, #0x409
  42d0e4:	add	x2, x2, #0xf84
  42d0e8:	add	x4, x4, #0x411
  42d0ec:	mov	w0, #0x1                   	// #1
  42d0f0:	mov	w3, #0x253                 	// #595
  42d0f4:	bl	40ac10 <log_assert_failed_return_realm@plt>
  42d0f8:	mov	w20, #0xffffffea            	// #-22
  42d0fc:	b	42d0b8 <sd_session_get_desktop+0x58>

000000000042d100 <sd_session_get_display>:
  42d100:	mov	x2, x1
  42d104:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42d108:	add	x1, x1, #0x2a1
  42d10c:	b	42cdb8 <session_get_string>

000000000042d110 <sd_session_get_remote_user>:
  42d110:	mov	x2, x1
  42d114:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42d118:	add	x1, x1, #0x44b
  42d11c:	b	42cdb8 <session_get_string>

000000000042d120 <sd_session_get_remote_host>:
  42d120:	mov	x2, x1
  42d124:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42d128:	add	x1, x1, #0x457
  42d12c:	b	42cdb8 <session_get_string>

000000000042d130 <sd_seat_get_active>:
  42d130:	sub	sp, sp, #0x50
  42d134:	stp	x22, x21, [sp, #48]
  42d138:	stp	x20, x19, [sp, #64]
  42d13c:	mov	x21, x2
  42d140:	mov	x20, x1
  42d144:	mov	x19, x0
  42d148:	stp	x29, x30, [sp, #16]
  42d14c:	str	x23, [sp, #32]
  42d150:	add	x29, sp, #0x10
  42d154:	stp	xzr, xzr, [sp]
  42d158:	cbnz	x1, 42d160 <sd_seat_get_active+0x30>
  42d15c:	cbz	x21, 42d294 <sd_seat_get_active+0x164>
  42d160:	cbz	x19, 42d18c <sd_seat_get_active+0x5c>
  42d164:	mov	x0, x19
  42d168:	bl	40bbe0 <filename_is_valid@plt>
  42d16c:	tbz	w0, #0, 42d2b8 <sd_seat_get_active+0x188>
  42d170:	adrp	x0, 43f000 <worker_hash_op+0xadf8>
  42d174:	add	x0, x0, #0x734
  42d178:	mov	x2, #0xffffffffffffffff    	// #-1
  42d17c:	mov	x1, x19
  42d180:	bl	40ae00 <path_join_internal@plt>
  42d184:	mov	x19, x0
  42d188:	b	42d1d4 <sd_seat_get_active+0xa4>
  42d18c:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42d190:	add	x1, x1, #0x3b4
  42d194:	add	x2, x29, #0x18
  42d198:	mov	x0, xzr
  42d19c:	str	xzr, [x29, #24]
  42d1a0:	bl	42cdb8 <session_get_string>
  42d1a4:	mov	w22, w0
  42d1a8:	tbnz	w0, #31, 42d1e0 <sd_seat_get_active+0xb0>
  42d1ac:	ldr	x1, [x29, #24]
  42d1b0:	adrp	x0, 43f000 <worker_hash_op+0xadf8>
  42d1b4:	add	x0, x0, #0x734
  42d1b8:	mov	x2, #0xffffffffffffffff    	// #-1
  42d1bc:	bl	40ae00 <path_join_internal@plt>
  42d1c0:	mov	x19, x0
  42d1c4:	mov	w23, #0x1                   	// #1
  42d1c8:	ldr	x0, [x29, #24]
  42d1cc:	bl	40a320 <free@plt>
  42d1d0:	cbz	w23, 42d1f0 <sd_seat_get_active+0xc0>
  42d1d4:	cbnz	x19, 42d1f8 <sd_seat_get_active+0xc8>
  42d1d8:	mov	w22, #0xfffffff4            	// #-12
  42d1dc:	b	42d2c0 <sd_seat_get_active+0x190>
  42d1e0:	mov	w23, wzr
  42d1e4:	ldr	x0, [x29, #24]
  42d1e8:	bl	40a320 <free@plt>
  42d1ec:	cbnz	w23, 42d1d4 <sd_seat_get_active+0xa4>
  42d1f0:	mov	x19, xzr
  42d1f4:	tbnz	w22, #31, 42d2c0 <sd_seat_get_active+0x190>
  42d1f8:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  42d1fc:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42d200:	add	x2, x2, #0x344
  42d204:	add	x4, x4, #0x2eb
  42d208:	add	x3, sp, #0x8
  42d20c:	mov	x5, sp
  42d210:	mov	x0, xzr
  42d214:	mov	x1, x19
  42d218:	mov	x6, xzr
  42d21c:	bl	40bbd0 <parse_env_file_sentinel@plt>
  42d220:	cmn	w0, #0x2
  42d224:	b.ne	42d230 <sd_seat_get_active+0x100>  // b.any
  42d228:	mov	w22, #0xfffffffa            	// #-6
  42d22c:	b	42d2c0 <sd_seat_get_active+0x190>
  42d230:	mov	w22, w0
  42d234:	tbnz	w0, #31, 42d2c0 <sd_seat_get_active+0x190>
  42d238:	ldr	x8, [sp, #8]
  42d23c:	cbz	x20, 42d244 <sd_seat_get_active+0x114>
  42d240:	cbz	x8, 42d250 <sd_seat_get_active+0x120>
  42d244:	ldr	x0, [sp]
  42d248:	cbz	x21, 42d258 <sd_seat_get_active+0x128>
  42d24c:	cbnz	x0, 42d258 <sd_seat_get_active+0x128>
  42d250:	mov	w22, #0xffffffc3            	// #-61
  42d254:	b	42d2c0 <sd_seat_get_active+0x190>
  42d258:	cbz	x21, 42d270 <sd_seat_get_active+0x140>
  42d25c:	cbz	x0, 42d270 <sd_seat_get_active+0x140>
  42d260:	mov	x1, x21
  42d264:	bl	40b210 <parse_uid@plt>
  42d268:	tbnz	w0, #31, 42d28c <sd_seat_get_active+0x15c>
  42d26c:	ldr	x8, [sp, #8]
  42d270:	mov	w22, wzr
  42d274:	cbz	x20, 42d2c0 <sd_seat_get_active+0x190>
  42d278:	cbz	x8, 42d2c0 <sd_seat_get_active+0x190>
  42d27c:	mov	w22, wzr
  42d280:	str	xzr, [sp, #8]
  42d284:	str	x8, [x20]
  42d288:	b	42d2c0 <sd_seat_get_active+0x190>
  42d28c:	mov	w22, w0
  42d290:	b	42d2c0 <sd_seat_get_active+0x190>
  42d294:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42d298:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42d29c:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42d2a0:	add	x1, x1, #0x463
  42d2a4:	add	x2, x2, #0xf84
  42d2a8:	add	x4, x4, #0x472
  42d2ac:	mov	w0, #0x1                   	// #1
  42d2b0:	mov	w3, #0x271                 	// #625
  42d2b4:	bl	40ac10 <log_assert_failed_return_realm@plt>
  42d2b8:	mov	x19, xzr
  42d2bc:	mov	w22, #0xffffffea            	// #-22
  42d2c0:	ldr	x0, [sp]
  42d2c4:	bl	40a320 <free@plt>
  42d2c8:	ldr	x0, [sp, #8]
  42d2cc:	bl	40a320 <free@plt>
  42d2d0:	mov	x0, x19
  42d2d4:	bl	40a320 <free@plt>
  42d2d8:	mov	w0, w22
  42d2dc:	ldp	x20, x19, [sp, #64]
  42d2e0:	ldp	x22, x21, [sp, #48]
  42d2e4:	ldr	x23, [sp, #32]
  42d2e8:	ldp	x29, x30, [sp, #16]
  42d2ec:	add	sp, sp, #0x50
  42d2f0:	ret

000000000042d2f4 <sd_seat_get_sessions>:
  42d2f4:	sub	sp, sp, #0x80
  42d2f8:	stp	x22, x21, [sp, #96]
  42d2fc:	stp	x20, x19, [sp, #112]
  42d300:	mov	x20, x3
  42d304:	mov	x21, x2
  42d308:	mov	x22, x1
  42d30c:	stp	x29, x30, [sp, #32]
  42d310:	stp	x28, x27, [sp, #48]
  42d314:	stp	x26, x25, [sp, #64]
  42d318:	stp	x24, x23, [sp, #80]
  42d31c:	add	x29, sp, #0x20
  42d320:	stp	xzr, xzr, [sp, #8]
  42d324:	cbz	x0, 42d350 <sd_seat_get_sessions+0x5c>
  42d328:	mov	x19, x0
  42d32c:	bl	40bbe0 <filename_is_valid@plt>
  42d330:	tbz	w0, #0, 42d3a0 <sd_seat_get_sessions+0xac>
  42d334:	adrp	x0, 43f000 <worker_hash_op+0xadf8>
  42d338:	add	x0, x0, #0x734
  42d33c:	mov	x2, #0xffffffffffffffff    	// #-1
  42d340:	mov	x1, x19
  42d344:	bl	40ae00 <path_join_internal@plt>
  42d348:	mov	x19, x0
  42d34c:	b	42d394 <sd_seat_get_sessions+0xa0>
  42d350:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42d354:	add	x1, x1, #0x3b4
  42d358:	sub	x2, x29, #0x8
  42d35c:	stur	xzr, [x29, #-8]
  42d360:	bl	42cdb8 <session_get_string>
  42d364:	mov	w24, w0
  42d368:	tbnz	w0, #31, 42d3ac <sd_seat_get_sessions+0xb8>
  42d36c:	ldur	x1, [x29, #-8]
  42d370:	adrp	x0, 43f000 <worker_hash_op+0xadf8>
  42d374:	add	x0, x0, #0x734
  42d378:	mov	x2, #0xffffffffffffffff    	// #-1
  42d37c:	bl	40ae00 <path_join_internal@plt>
  42d380:	mov	x19, x0
  42d384:	mov	w23, #0x1                   	// #1
  42d388:	ldur	x0, [x29, #-8]
  42d38c:	bl	40a320 <free@plt>
  42d390:	cbz	w23, 42d3bc <sd_seat_get_sessions+0xc8>
  42d394:	cbnz	x19, 42d3c4 <sd_seat_get_sessions+0xd0>
  42d398:	mov	w24, #0xfffffff4            	// #-12
  42d39c:	b	42d564 <sd_seat_get_sessions+0x270>
  42d3a0:	mov	x19, xzr
  42d3a4:	mov	w24, #0xffffffea            	// #-22
  42d3a8:	b	42d564 <sd_seat_get_sessions+0x270>
  42d3ac:	mov	w23, wzr
  42d3b0:	ldur	x0, [x29, #-8]
  42d3b4:	bl	40a320 <free@plt>
  42d3b8:	cbnz	w23, 42d394 <sd_seat_get_sessions+0xa0>
  42d3bc:	mov	x19, xzr
  42d3c0:	tbnz	w24, #31, 42d564 <sd_seat_get_sessions+0x270>
  42d3c4:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  42d3c8:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42d3cc:	add	x2, x2, #0x31b
  42d3d0:	add	x4, x4, #0x2f6
  42d3d4:	add	x3, sp, #0x10
  42d3d8:	add	x5, sp, #0x8
  42d3dc:	mov	x0, xzr
  42d3e0:	mov	x1, x19
  42d3e4:	mov	x6, xzr
  42d3e8:	bl	40bbd0 <parse_env_file_sentinel@plt>
  42d3ec:	cmn	w0, #0x2
  42d3f0:	b.ne	42d3fc <sd_seat_get_sessions+0x108>  // b.any
  42d3f4:	mov	w24, #0xfffffffa            	// #-6
  42d3f8:	b	42d564 <sd_seat_get_sessions+0x270>
  42d3fc:	mov	w24, w0
  42d400:	tbnz	w0, #31, 42d564 <sd_seat_get_sessions+0x270>
  42d404:	ldr	x0, [sp, #16]
  42d408:	cbz	x0, 42d434 <sd_seat_get_sessions+0x140>
  42d40c:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  42d410:	add	x1, x1, #0xb34
  42d414:	mov	w2, wzr
  42d418:	bl	40ade0 <strv_split_full@plt>
  42d41c:	mov	x23, x0
  42d420:	cbz	x0, 42d398 <sd_seat_get_sessions+0xa4>
  42d424:	mov	w28, wzr
  42d428:	mov	x25, xzr
  42d42c:	cbnz	x21, 42d444 <sd_seat_get_sessions+0x150>
  42d430:	b	42d524 <sd_seat_get_sessions+0x230>
  42d434:	mov	x23, xzr
  42d438:	mov	w28, wzr
  42d43c:	mov	x25, xzr
  42d440:	cbz	x21, 42d524 <sd_seat_get_sessions+0x230>
  42d444:	ldr	x8, [sp, #8]
  42d448:	cbz	x8, 42d524 <sd_seat_get_sessions+0x230>
  42d44c:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  42d450:	add	x2, x2, #0xacd
  42d454:	sub	x0, x29, #0x8
  42d458:	mov	x1, sp
  42d45c:	mov	w3, wzr
  42d460:	stur	x8, [x29, #-8]
  42d464:	bl	40b780 <split@plt>
  42d468:	mov	w28, wzr
  42d46c:	cbz	x0, 42d520 <sd_seat_get_sessions+0x22c>
  42d470:	adrp	x24, 436000 <worker_hash_op+0x1df8>
  42d474:	add	x24, x24, #0xacd
  42d478:	sub	x0, x29, #0x8
  42d47c:	mov	x1, sp
  42d480:	mov	x2, x24
  42d484:	mov	w3, wzr
  42d488:	add	w28, w28, #0x1
  42d48c:	bl	40b780 <split@plt>
  42d490:	cbnz	x0, 42d478 <sd_seat_get_sessions+0x184>
  42d494:	cbz	w28, 42d520 <sd_seat_get_sessions+0x22c>
  42d498:	mov	w8, w28
  42d49c:	lsl	x0, x8, #2
  42d4a0:	bl	40a490 <malloc@plt>
  42d4a4:	mov	x25, x0
  42d4a8:	cbz	x0, 42d5a0 <sd_seat_get_sessions+0x2ac>
  42d4ac:	ldr	x8, [sp, #8]
  42d4b0:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  42d4b4:	add	x2, x2, #0xacd
  42d4b8:	sub	x0, x29, #0x8
  42d4bc:	mov	x1, sp
  42d4c0:	mov	w3, wzr
  42d4c4:	stur	x8, [x29, #-8]
  42d4c8:	bl	40b780 <split@plt>
  42d4cc:	cbz	x0, 42d524 <sd_seat_get_sessions+0x230>
  42d4d0:	mov	w26, wzr
  42d4d4:	ldr	x1, [sp]
  42d4d8:	bl	40a7e0 <strndup@plt>
  42d4dc:	mov	x27, x0
  42d4e0:	cbz	x0, 42d5a8 <sd_seat_get_sessions+0x2b4>
  42d4e4:	add	x1, x25, w26, uxtw #2
  42d4e8:	mov	x0, x27
  42d4ec:	bl	40b210 <parse_uid@plt>
  42d4f0:	tbnz	w0, #31, 42d5b0 <sd_seat_get_sessions+0x2bc>
  42d4f4:	mov	x0, x27
  42d4f8:	add	w26, w26, #0x1
  42d4fc:	bl	40a320 <free@plt>
  42d500:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  42d504:	sub	x0, x29, #0x8
  42d508:	mov	x1, sp
  42d50c:	add	x2, x2, #0xacd
  42d510:	mov	w3, wzr
  42d514:	bl	40b780 <split@plt>
  42d518:	cbnz	x0, 42d4d4 <sd_seat_get_sessions+0x1e0>
  42d51c:	b	42d524 <sd_seat_get_sessions+0x230>
  42d520:	mov	x25, xzr
  42d524:	mov	x0, x23
  42d528:	bl	40b4b0 <strv_length@plt>
  42d52c:	mov	x24, x0
  42d530:	cbz	x22, 42d53c <sd_seat_get_sessions+0x248>
  42d534:	str	x23, [x22]
  42d538:	mov	x23, xzr
  42d53c:	cbz	x21, 42d548 <sd_seat_get_sessions+0x254>
  42d540:	str	x25, [x21]
  42d544:	mov	x25, xzr
  42d548:	cbz	x20, 42d550 <sd_seat_get_sessions+0x25c>
  42d54c:	str	w28, [x20]
  42d550:	mov	x0, x25
  42d554:	bl	40a320 <free@plt>
  42d558:	cbz	x23, 42d564 <sd_seat_get_sessions+0x270>
  42d55c:	mov	x0, x23
  42d560:	bl	40ae30 <strv_free@plt>
  42d564:	ldr	x0, [sp, #8]
  42d568:	bl	40a320 <free@plt>
  42d56c:	ldr	x0, [sp, #16]
  42d570:	bl	40a320 <free@plt>
  42d574:	mov	x0, x19
  42d578:	bl	40a320 <free@plt>
  42d57c:	mov	w0, w24
  42d580:	ldp	x20, x19, [sp, #112]
  42d584:	ldp	x22, x21, [sp, #96]
  42d588:	ldp	x24, x23, [sp, #80]
  42d58c:	ldp	x26, x25, [sp, #64]
  42d590:	ldp	x28, x27, [sp, #48]
  42d594:	ldp	x29, x30, [sp, #32]
  42d598:	add	sp, sp, #0x80
  42d59c:	ret
  42d5a0:	mov	w24, #0xfffffff4            	// #-12
  42d5a4:	b	42d550 <sd_seat_get_sessions+0x25c>
  42d5a8:	mov	w24, #0xfffffff4            	// #-12
  42d5ac:	b	42d5b4 <sd_seat_get_sessions+0x2c0>
  42d5b0:	mov	w24, w0
  42d5b4:	mov	x0, x27
  42d5b8:	bl	40a320 <free@plt>
  42d5bc:	b	42d550 <sd_seat_get_sessions+0x25c>

000000000042d5c0 <sd_seat_can_multi_session>:
  42d5c0:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42d5c4:	add	x1, x1, #0x4a9
  42d5c8:	b	42d5cc <seat_get_can>

000000000042d5cc <seat_get_can>:
  42d5cc:	sub	sp, sp, #0x40
  42d5d0:	stp	x29, x30, [sp, #16]
  42d5d4:	stp	x22, x21, [sp, #32]
  42d5d8:	stp	x20, x19, [sp, #48]
  42d5dc:	add	x29, sp, #0x10
  42d5e0:	str	xzr, [sp]
  42d5e4:	cbz	x1, 42d70c <seat_get_can+0x140>
  42d5e8:	mov	x21, x1
  42d5ec:	mov	x19, x0
  42d5f0:	cbz	x0, 42d61c <seat_get_can+0x50>
  42d5f4:	mov	x0, x19
  42d5f8:	bl	40bbe0 <filename_is_valid@plt>
  42d5fc:	tbz	w0, #0, 42d670 <seat_get_can+0xa4>
  42d600:	adrp	x0, 43f000 <worker_hash_op+0xadf8>
  42d604:	add	x0, x0, #0x734
  42d608:	mov	x2, #0xffffffffffffffff    	// #-1
  42d60c:	mov	x1, x19
  42d610:	bl	40ae00 <path_join_internal@plt>
  42d614:	mov	x19, x0
  42d618:	b	42d664 <seat_get_can+0x98>
  42d61c:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42d620:	add	x1, x1, #0x3b4
  42d624:	add	x2, sp, #0x8
  42d628:	mov	x0, xzr
  42d62c:	str	xzr, [sp, #8]
  42d630:	bl	42cdb8 <session_get_string>
  42d634:	mov	w20, w0
  42d638:	tbnz	w0, #31, 42d67c <seat_get_can+0xb0>
  42d63c:	ldr	x1, [sp, #8]
  42d640:	adrp	x0, 43f000 <worker_hash_op+0xadf8>
  42d644:	add	x0, x0, #0x734
  42d648:	mov	x2, #0xffffffffffffffff    	// #-1
  42d64c:	bl	40ae00 <path_join_internal@plt>
  42d650:	mov	x19, x0
  42d654:	mov	w22, #0x1                   	// #1
  42d658:	ldr	x0, [sp, #8]
  42d65c:	bl	40a320 <free@plt>
  42d660:	cbz	w22, 42d68c <seat_get_can+0xc0>
  42d664:	cbnz	x19, 42d694 <seat_get_can+0xc8>
  42d668:	mov	w20, #0xfffffff4            	// #-12
  42d66c:	b	42d6e4 <seat_get_can+0x118>
  42d670:	mov	x19, xzr
  42d674:	mov	w20, #0xffffffea            	// #-22
  42d678:	b	42d6e4 <seat_get_can+0x118>
  42d67c:	mov	w22, wzr
  42d680:	ldr	x0, [sp, #8]
  42d684:	bl	40a320 <free@plt>
  42d688:	cbnz	w22, 42d664 <seat_get_can+0x98>
  42d68c:	mov	x19, xzr
  42d690:	tbnz	w20, #31, 42d6e4 <seat_get_can+0x118>
  42d694:	mov	x3, sp
  42d698:	mov	x0, xzr
  42d69c:	mov	x1, x19
  42d6a0:	mov	x2, x21
  42d6a4:	mov	x4, xzr
  42d6a8:	bl	40bbd0 <parse_env_file_sentinel@plt>
  42d6ac:	cmn	w0, #0x2
  42d6b0:	b.ne	42d6bc <seat_get_can+0xf0>  // b.any
  42d6b4:	mov	w20, #0xfffffffa            	// #-6
  42d6b8:	b	42d6e4 <seat_get_can+0x118>
  42d6bc:	mov	w20, w0
  42d6c0:	tbnz	w0, #31, 42d6e4 <seat_get_can+0x118>
  42d6c4:	ldr	x0, [sp]
  42d6c8:	cbz	x0, 42d6e0 <seat_get_can+0x114>
  42d6cc:	ldrb	w8, [x0]
  42d6d0:	cbz	w8, 42d6e0 <seat_get_can+0x114>
  42d6d4:	bl	40bc10 <parse_boolean@plt>
  42d6d8:	mov	w20, w0
  42d6dc:	b	42d6e4 <seat_get_can+0x118>
  42d6e0:	mov	w20, #0xffffffc3            	// #-61
  42d6e4:	ldr	x0, [sp]
  42d6e8:	bl	40a320 <free@plt>
  42d6ec:	mov	x0, x19
  42d6f0:	bl	40a320 <free@plt>
  42d6f4:	mov	w0, w20
  42d6f8:	ldp	x20, x19, [sp, #48]
  42d6fc:	ldp	x22, x21, [sp, #32]
  42d700:	ldp	x29, x30, [sp, #16]
  42d704:	add	sp, sp, #0x40
  42d708:	ret
  42d70c:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42d710:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42d714:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42d718:	add	x1, x1, #0x747
  42d71c:	add	x2, x2, #0xf84
  42d720:	add	x4, x4, #0x7d9
  42d724:	mov	w0, #0x1                   	// #1
  42d728:	mov	w3, #0x2da                 	// #730
  42d72c:	bl	40a630 <log_assert_failed_realm@plt>

000000000042d730 <sd_seat_can_tty>:
  42d730:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42d734:	add	x1, x1, #0x4bb
  42d738:	b	42d5cc <seat_get_can>

000000000042d73c <sd_seat_can_graphical>:
  42d73c:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42d740:	add	x1, x1, #0x4c3
  42d744:	b	42d5cc <seat_get_can>

000000000042d748 <sd_get_seats>:
  42d748:	stp	x29, x30, [sp, #-32]!
  42d74c:	str	x19, [sp, #16]
  42d750:	mov	x19, x0
  42d754:	adrp	x0, 43e000 <worker_hash_op+0x9df8>
  42d758:	add	x0, x0, #0xe31
  42d75c:	mov	x1, x19
  42d760:	mov	x29, sp
  42d764:	bl	40bc20 <get_files_in_directory@plt>
  42d768:	cmn	w0, #0x2
  42d76c:	b.ne	42d77c <sd_get_seats+0x34>  // b.any
  42d770:	mov	w0, wzr
  42d774:	cbz	x19, 42d77c <sd_get_seats+0x34>
  42d778:	str	xzr, [x19]
  42d77c:	ldr	x19, [sp, #16]
  42d780:	ldp	x29, x30, [sp], #32
  42d784:	ret

000000000042d788 <sd_get_sessions>:
  42d788:	stp	x29, x30, [sp, #-32]!
  42d78c:	str	x19, [sp, #16]
  42d790:	mov	x19, x0
  42d794:	adrp	x0, 43f000 <worker_hash_op+0xadf8>
  42d798:	add	x0, x0, #0x4d1
  42d79c:	mov	x1, x19
  42d7a0:	mov	x29, sp
  42d7a4:	bl	40bc20 <get_files_in_directory@plt>
  42d7a8:	cmn	w0, #0x2
  42d7ac:	b.ne	42d7bc <sd_get_sessions+0x34>  // b.any
  42d7b0:	mov	w0, wzr
  42d7b4:	cbz	x19, 42d7bc <sd_get_sessions+0x34>
  42d7b8:	str	xzr, [x19]
  42d7bc:	ldr	x19, [sp, #16]
  42d7c0:	ldp	x29, x30, [sp], #32
  42d7c4:	ret

000000000042d7c8 <sd_get_uids>:
  42d7c8:	sub	sp, sp, #0x60
  42d7cc:	stp	x20, x19, [sp, #80]
  42d7d0:	mov	x20, x0
  42d7d4:	adrp	x0, 43f000 <worker_hash_op+0xadf8>
  42d7d8:	add	x0, x0, #0x4e8
  42d7dc:	stp	x29, x30, [sp, #16]
  42d7e0:	stp	x26, x25, [sp, #32]
  42d7e4:	stp	x24, x23, [sp, #48]
  42d7e8:	stp	x22, x21, [sp, #64]
  42d7ec:	add	x29, sp, #0x10
  42d7f0:	bl	40af80 <opendir@plt>
  42d7f4:	mov	x19, x0
  42d7f8:	bl	40a3e0 <__errno_location@plt>
  42d7fc:	mov	x22, x0
  42d800:	cbz	x19, 42d8f4 <sd_get_uids+0x12c>
  42d804:	mov	x0, x19
  42d808:	str	wzr, [x22]
  42d80c:	bl	40af90 <readdir64@plt>
  42d810:	cbz	x0, 42d910 <sd_get_uids+0x148>
  42d814:	mov	x25, x0
  42d818:	mov	w21, wzr
  42d81c:	cbz	x20, 42d8c4 <sd_get_uids+0xfc>
  42d820:	mov	w24, wzr
  42d824:	mov	x23, xzr
  42d828:	mov	w26, #0x10                  	// #16
  42d82c:	b	42d844 <sd_get_uids+0x7c>
  42d830:	mov	x0, x19
  42d834:	str	wzr, [x22]
  42d838:	bl	40af90 <readdir64@plt>
  42d83c:	mov	x25, x0
  42d840:	cbz	x0, 42d918 <sd_get_uids+0x150>
  42d844:	mov	x0, x19
  42d848:	mov	x1, x25
  42d84c:	bl	40bc30 <dirent_ensure_type@plt>
  42d850:	mov	x0, x25
  42d854:	bl	40bc40 <dirent_is_file@plt>
  42d858:	tbz	w0, #0, 42d830 <sd_get_uids+0x68>
  42d85c:	add	x0, x25, #0x13
  42d860:	sub	x1, x29, #0x4
  42d864:	bl	40b210 <parse_uid@plt>
  42d868:	tbnz	w0, #31, 42d830 <sd_get_uids+0x68>
  42d86c:	cmp	w21, w24
  42d870:	b.cc	42d898 <sd_get_uids+0xd0>  // b.lo, b.ul, b.last
  42d874:	lsl	w8, w21, #1
  42d878:	cmp	w8, #0x10
  42d87c:	csel	w24, w8, w26, gt
  42d880:	mov	w1, #0x4                   	// #4
  42d884:	mov	x0, x23
  42d888:	mov	x2, x24
  42d88c:	bl	40bc50 <reallocarray@plt>
  42d890:	cbz	x0, 42d980 <sd_get_uids+0x1b8>
  42d894:	mov	x23, x0
  42d898:	cmp	w21, w24
  42d89c:	b.cs	42d988 <sd_get_uids+0x1c0>  // b.hs, b.nlast
  42d8a0:	ldur	w8, [x29, #-4]
  42d8a4:	str	w8, [x23, w21, sxtw #2]
  42d8a8:	add	w21, w21, #0x1
  42d8ac:	b	42d830 <sd_get_uids+0x68>
  42d8b0:	mov	x0, x19
  42d8b4:	str	wzr, [x22]
  42d8b8:	bl	40af90 <readdir64@plt>
  42d8bc:	mov	x25, x0
  42d8c0:	cbz	x0, 42d934 <sd_get_uids+0x16c>
  42d8c4:	mov	x0, x19
  42d8c8:	mov	x1, x25
  42d8cc:	bl	40bc30 <dirent_ensure_type@plt>
  42d8d0:	mov	x0, x25
  42d8d4:	bl	40bc40 <dirent_is_file@plt>
  42d8d8:	tbz	w0, #0, 42d8b0 <sd_get_uids+0xe8>
  42d8dc:	add	x0, x25, #0x13
  42d8e0:	sub	x1, x29, #0x4
  42d8e4:	bl	40b210 <parse_uid@plt>
  42d8e8:	mvn	w8, w0
  42d8ec:	add	w21, w21, w8, lsr #31
  42d8f0:	b	42d8b0 <sd_get_uids+0xe8>
  42d8f4:	ldr	w8, [x22]
  42d8f8:	cmp	w8, #0x2
  42d8fc:	b.ne	42d92c <sd_get_uids+0x164>  // b.any
  42d900:	mov	w21, wzr
  42d904:	cbz	x20, 42d960 <sd_get_uids+0x198>
  42d908:	str	xzr, [x20]
  42d90c:	b	42d960 <sd_get_uids+0x198>
  42d910:	mov	x23, xzr
  42d914:	mov	w21, wzr
  42d918:	ldr	w8, [x22]
  42d91c:	cmp	w8, #0x1
  42d920:	b.lt	42d944 <sd_get_uids+0x17c>  // b.tstop
  42d924:	neg	w21, w8
  42d928:	b	42d950 <sd_get_uids+0x188>
  42d92c:	neg	w21, w8
  42d930:	b	42d960 <sd_get_uids+0x198>
  42d934:	mov	x23, xzr
  42d938:	ldr	w8, [x22]
  42d93c:	cmp	w8, #0x1
  42d940:	b.ge	42d924 <sd_get_uids+0x15c>  // b.tcont
  42d944:	cbz	x20, 42d950 <sd_get_uids+0x188>
  42d948:	str	x23, [x20]
  42d94c:	mov	x23, xzr
  42d950:	mov	x0, x23
  42d954:	bl	40a320 <free@plt>
  42d958:	mov	x0, x19
  42d95c:	bl	40afc0 <closedir@plt>
  42d960:	mov	w0, w21
  42d964:	ldp	x20, x19, [sp, #80]
  42d968:	ldp	x22, x21, [sp, #64]
  42d96c:	ldp	x24, x23, [sp, #48]
  42d970:	ldp	x26, x25, [sp, #32]
  42d974:	ldp	x29, x30, [sp, #16]
  42d978:	add	sp, sp, #0x60
  42d97c:	ret
  42d980:	mov	w21, #0xfffffff4            	// #-12
  42d984:	b	42d950 <sd_get_uids+0x188>
  42d988:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42d98c:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42d990:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42d994:	add	x1, x1, #0x4fc
  42d998:	add	x2, x2, #0xf84
  42d99c:	add	x4, x4, #0x50d
  42d9a0:	mov	w0, #0x1                   	// #1
  42d9a4:	mov	w3, #0x33a                 	// #826
  42d9a8:	bl	40a630 <log_assert_failed_realm@plt>

000000000042d9ac <sd_get_machine_names>:
  42d9ac:	sub	sp, sp, #0x50
  42d9b0:	stp	x20, x19, [sp, #64]
  42d9b4:	mov	x20, x0
  42d9b8:	adrp	x0, 43f000 <worker_hash_op+0xadf8>
  42d9bc:	add	x0, x0, #0x527
  42d9c0:	add	x1, sp, #0x8
  42d9c4:	stp	x29, x30, [sp, #16]
  42d9c8:	stp	x24, x23, [sp, #32]
  42d9cc:	stp	x22, x21, [sp, #48]
  42d9d0:	add	x29, sp, #0x10
  42d9d4:	str	xzr, [sp, #8]
  42d9d8:	bl	40bc20 <get_files_in_directory@plt>
  42d9dc:	cmn	w0, #0x2
  42d9e0:	b.ne	42d9f4 <sd_get_machine_names+0x48>  // b.any
  42d9e4:	mov	w19, wzr
  42d9e8:	cbz	x20, 42da84 <sd_get_machine_names+0xd8>
  42d9ec:	str	xzr, [x20]
  42d9f0:	b	42da84 <sd_get_machine_names+0xd8>
  42d9f4:	mov	w19, w0
  42d9f8:	tbnz	w0, #31, 42da84 <sd_get_machine_names+0xd8>
  42d9fc:	ldr	x23, [sp, #8]
  42da00:	cbz	x23, 42da70 <sd_get_machine_names+0xc4>
  42da04:	ldr	x22, [x23]
  42da08:	cbz	x22, 42da68 <sd_get_machine_names+0xbc>
  42da0c:	adrp	x21, 43f000 <worker_hash_op+0xadf8>
  42da10:	mov	w19, wzr
  42da14:	add	x24, x23, #0x8
  42da18:	add	x21, x21, #0x53e
  42da1c:	b	42da30 <sd_get_machine_names+0x84>
  42da20:	mov	x0, x22
  42da24:	bl	40a320 <free@plt>
  42da28:	ldr	x22, [x24], #8
  42da2c:	cbz	x22, 42da6c <sd_get_machine_names+0xc0>
  42da30:	mov	w2, #0x5                   	// #5
  42da34:	mov	x0, x22
  42da38:	mov	x1, x21
  42da3c:	bl	40a6a0 <strncmp@plt>
  42da40:	cbz	w0, 42da20 <sd_get_machine_names+0x74>
  42da44:	mov	x0, x22
  42da48:	mov	w1, wzr
  42da4c:	bl	40bc60 <hostname_is_valid@plt>
  42da50:	tbz	w0, #0, 42da20 <sd_get_machine_names+0x74>
  42da54:	str	x22, [x23], #8
  42da58:	add	w19, w19, #0x1
  42da5c:	ldr	x22, [x24], #8
  42da60:	cbnz	x22, 42da30 <sd_get_machine_names+0x84>
  42da64:	b	42da6c <sd_get_machine_names+0xc0>
  42da68:	mov	w19, wzr
  42da6c:	str	xzr, [x23]
  42da70:	cbz	x20, 42da84 <sd_get_machine_names+0xd8>
  42da74:	ldr	x8, [sp, #8]
  42da78:	str	xzr, [sp, #8]
  42da7c:	str	x8, [x20]
  42da80:	b	42da90 <sd_get_machine_names+0xe4>
  42da84:	ldr	x0, [sp, #8]
  42da88:	cbz	x0, 42da90 <sd_get_machine_names+0xe4>
  42da8c:	bl	40ae30 <strv_free@plt>
  42da90:	mov	w0, w19
  42da94:	ldp	x20, x19, [sp, #64]
  42da98:	ldp	x22, x21, [sp, #48]
  42da9c:	ldp	x24, x23, [sp, #32]
  42daa0:	ldp	x29, x30, [sp, #16]
  42daa4:	add	sp, sp, #0x50
  42daa8:	ret

000000000042daac <sd_machine_get_class>:
  42daac:	stp	x29, x30, [sp, #-48]!
  42dab0:	mov	x29, sp
  42dab4:	str	x21, [sp, #16]
  42dab8:	stp	x20, x19, [sp, #32]
  42dabc:	str	xzr, [x29, #24]
  42dac0:	cbz	x1, 42dc00 <sd_machine_get_class+0x154>
  42dac4:	mov	x19, x1
  42dac8:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42dacc:	add	x1, x1, #0x574
  42dad0:	mov	x20, x0
  42dad4:	bl	40a930 <strcmp@plt>
  42dad8:	cbz	w0, 42db40 <sd_machine_get_class+0x94>
  42dadc:	mov	x0, x20
  42dae0:	mov	w1, wzr
  42dae4:	bl	40bc60 <hostname_is_valid@plt>
  42dae8:	tbz	w0, #0, 42db5c <sd_machine_get_class+0xb0>
  42daec:	cbz	x20, 42db64 <sd_machine_get_class+0xb8>
  42daf0:	mov	x0, x20
  42daf4:	bl	40aa40 <strlen@plt>
  42daf8:	add	x8, x0, #0x17
  42dafc:	cmp	x8, #0x400, lsl #12
  42db00:	b.hi	42dc2c <sd_machine_get_class+0x180>  // b.pmore
  42db04:	add	x8, x8, #0xf
  42db08:	mov	x9, sp
  42db0c:	and	x8, x8, #0xfffffffffffffff0
  42db10:	sub	x21, x9, x8
  42db14:	mov	sp, x21
  42db18:	adrp	x8, 43f000 <worker_hash_op+0xadf8>
  42db1c:	add	x8, x8, #0x527
  42db20:	ldur	x9, [x8, #15]
  42db24:	ldr	q0, [x8]
  42db28:	add	x0, x21, #0x16
  42db2c:	mov	x1, x20
  42db30:	stur	x9, [x21, #15]
  42db34:	str	q0, [x21]
  42db38:	bl	40ab70 <stpcpy@plt>
  42db3c:	b	42db8c <sd_machine_get_class+0xe0>
  42db40:	adrp	x0, 43d000 <worker_hash_op+0x8df8>
  42db44:	add	x0, x0, #0x84c
  42db48:	bl	40a810 <strdup@plt>
  42db4c:	str	x0, [x29, #24]
  42db50:	cbnz	x0, 42dbcc <sd_machine_get_class+0x120>
  42db54:	mov	w20, #0xfffffff4            	// #-12
  42db58:	b	42dbd8 <sd_machine_get_class+0x12c>
  42db5c:	mov	w20, #0xffffffea            	// #-22
  42db60:	b	42dbd8 <sd_machine_get_class+0x12c>
  42db64:	mov	x8, sp
  42db68:	sub	x21, x8, #0x20
  42db6c:	mov	sp, x21
  42db70:	adrp	x9, 43f000 <worker_hash_op+0xadf8>
  42db74:	add	x9, x9, #0x527
  42db78:	ldur	x10, [x9, #15]
  42db7c:	ldr	q0, [x9]
  42db80:	sub	x0, x8, #0xa
  42db84:	stur	x10, [x8, #-17]
  42db88:	stur	q0, [x8, #-32]
  42db8c:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  42db90:	strb	wzr, [x0]
  42db94:	add	x2, x2, #0x403
  42db98:	add	x3, x29, #0x18
  42db9c:	mov	x0, xzr
  42dba0:	mov	x1, x21
  42dba4:	mov	x4, xzr
  42dba8:	bl	40bbd0 <parse_env_file_sentinel@plt>
  42dbac:	cmn	w0, #0x2
  42dbb0:	b.ne	42dbbc <sd_machine_get_class+0x110>  // b.any
  42dbb4:	mov	w20, #0xfffffffa            	// #-6
  42dbb8:	b	42dbd8 <sd_machine_get_class+0x12c>
  42dbbc:	mov	w20, w0
  42dbc0:	tbnz	w0, #31, 42dbd8 <sd_machine_get_class+0x12c>
  42dbc4:	ldr	x0, [x29, #24]
  42dbc8:	cbz	x0, 42dbf8 <sd_machine_get_class+0x14c>
  42dbcc:	mov	w20, wzr
  42dbd0:	str	xzr, [x29, #24]
  42dbd4:	str	x0, [x19]
  42dbd8:	ldr	x0, [x29, #24]
  42dbdc:	bl	40a320 <free@plt>
  42dbe0:	mov	w0, w20
  42dbe4:	mov	sp, x29
  42dbe8:	ldp	x20, x19, [sp, #32]
  42dbec:	ldr	x21, [sp, #16]
  42dbf0:	ldp	x29, x30, [sp], #48
  42dbf4:	ret
  42dbf8:	mov	w20, #0xfffffffb            	// #-5
  42dbfc:	b	42dbd8 <sd_machine_get_class+0x12c>
  42dc00:	adrp	x1, 437000 <worker_hash_op+0x2df8>
  42dc04:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42dc08:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42dc0c:	add	x1, x1, #0xe66
  42dc10:	add	x2, x2, #0xf84
  42dc14:	add	x4, x4, #0x544
  42dc18:	mov	w0, #0x1                   	// #1
  42dc1c:	mov	w3, #0x370                 	// #880
  42dc20:	bl	40ac10 <log_assert_failed_return_realm@plt>
  42dc24:	mov	w20, #0xffffffea            	// #-22
  42dc28:	b	42dbd8 <sd_machine_get_class+0x12c>
  42dc2c:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  42dc30:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42dc34:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42dc38:	add	x1, x1, #0xc66
  42dc3c:	add	x2, x2, #0xf84
  42dc40:	add	x4, x4, #0x544
  42dc44:	mov	w0, #0x1                   	// #1
  42dc48:	mov	w3, #0x37a                 	// #890
  42dc4c:	bl	40a630 <log_assert_failed_realm@plt>

000000000042dc50 <sd_machine_get_ifindices>:
  42dc50:	stp	x29, x30, [sp, #-64]!
  42dc54:	stp	x24, x23, [sp, #16]
  42dc58:	stp	x22, x21, [sp, #32]
  42dc5c:	stp	x20, x19, [sp, #48]
  42dc60:	mov	x29, sp
  42dc64:	sub	sp, sp, #0x30
  42dc68:	mov	x19, x1
  42dc6c:	mov	w1, wzr
  42dc70:	mov	x20, x0
  42dc74:	stur	xzr, [x29, #-8]
  42dc78:	stp	xzr, xzr, [x29, #-32]
  42dc7c:	bl	40bc60 <hostname_is_valid@plt>
  42dc80:	tbz	w0, #0, 42de58 <sd_machine_get_ifindices+0x208>
  42dc84:	cbz	x19, 42de7c <sd_machine_get_ifindices+0x22c>
  42dc88:	cbz	x20, 42dcdc <sd_machine_get_ifindices+0x8c>
  42dc8c:	mov	x0, x20
  42dc90:	bl	40aa40 <strlen@plt>
  42dc94:	add	x8, x0, #0x17
  42dc98:	cmp	x8, #0x400, lsl #12
  42dc9c:	b.hi	42dea8 <sd_machine_get_ifindices+0x258>  // b.pmore
  42dca0:	add	x8, x8, #0xf
  42dca4:	mov	x9, sp
  42dca8:	and	x8, x8, #0xfffffffffffffff0
  42dcac:	sub	x21, x9, x8
  42dcb0:	mov	sp, x21
  42dcb4:	adrp	x8, 43f000 <worker_hash_op+0xadf8>
  42dcb8:	add	x8, x8, #0x527
  42dcbc:	ldur	x9, [x8, #15]
  42dcc0:	ldr	q0, [x8]
  42dcc4:	add	x0, x21, #0x16
  42dcc8:	mov	x1, x20
  42dccc:	stur	x9, [x21, #15]
  42dcd0:	str	q0, [x21]
  42dcd4:	bl	40ab70 <stpcpy@plt>
  42dcd8:	b	42dd04 <sd_machine_get_ifindices+0xb4>
  42dcdc:	mov	x8, sp
  42dce0:	sub	x21, x8, #0x20
  42dce4:	mov	sp, x21
  42dce8:	adrp	x9, 43f000 <worker_hash_op+0xadf8>
  42dcec:	add	x9, x9, #0x527
  42dcf0:	ldur	x10, [x9, #15]
  42dcf4:	ldr	q0, [x9]
  42dcf8:	sub	x0, x8, #0xa
  42dcfc:	stur	x10, [x8, #-17]
  42dd00:	stur	q0, [x8, #-32]
  42dd04:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  42dd08:	strb	wzr, [x0]
  42dd0c:	add	x2, x2, #0x5d6
  42dd10:	sub	x3, x29, #0x8
  42dd14:	mov	x0, xzr
  42dd18:	mov	x1, x21
  42dd1c:	mov	x4, xzr
  42dd20:	bl	40bbd0 <parse_env_file_sentinel@plt>
  42dd24:	cmn	w0, #0x2
  42dd28:	b.ne	42dd34 <sd_machine_get_ifindices+0xe4>  // b.any
  42dd2c:	mov	w20, #0xfffffffa            	// #-6
  42dd30:	b	42de34 <sd_machine_get_ifindices+0x1e4>
  42dd34:	mov	w20, w0
  42dd38:	tbnz	w0, #31, 42de34 <sd_machine_get_ifindices+0x1e4>
  42dd3c:	ldur	x8, [x29, #-8]
  42dd40:	cbz	x8, 42de08 <sd_machine_get_ifindices+0x1b8>
  42dd44:	adrp	x2, 436000 <worker_hash_op+0x1df8>
  42dd48:	add	x2, x2, #0xacd
  42dd4c:	sub	x0, x29, #0x28
  42dd50:	sub	x1, x29, #0x10
  42dd54:	mov	w3, wzr
  42dd58:	stur	x8, [x29, #-40]
  42dd5c:	bl	40b780 <split@plt>
  42dd60:	cbz	x0, 42de14 <sd_machine_get_ifindices+0x1c4>
  42dd64:	adrp	x21, 436000 <worker_hash_op+0x1df8>
  42dd68:	mov	x1, x0
  42dd6c:	mov	x20, xzr
  42dd70:	add	x21, x21, #0xacd
  42dd74:	b	42dd98 <sd_machine_get_ifindices+0x148>
  42dd78:	mov	sp, x24
  42dd7c:	sub	x0, x29, #0x28
  42dd80:	sub	x1, x29, #0x10
  42dd84:	mov	x2, x21
  42dd88:	mov	w3, wzr
  42dd8c:	bl	40b780 <split@plt>
  42dd90:	mov	x1, x0
  42dd94:	cbz	x0, 42de18 <sd_machine_get_ifindices+0x1c8>
  42dd98:	ldur	x8, [x29, #-16]
  42dd9c:	mov	x9, sp
  42dda0:	mov	x24, sp
  42dda4:	add	x8, x8, #0x10
  42dda8:	and	x8, x8, #0xfffffffffffffff0
  42ddac:	sub	x22, x9, x8
  42ddb0:	mov	sp, x22
  42ddb4:	ldur	x23, [x29, #-16]
  42ddb8:	mov	x0, x22
  42ddbc:	mov	x2, x23
  42ddc0:	bl	40adc0 <memcpy@plt>
  42ddc4:	sub	x1, x29, #0x2c
  42ddc8:	mov	x0, x22
  42ddcc:	strb	wzr, [x22, x23]
  42ddd0:	bl	40bc70 <parse_ifindex@plt>
  42ddd4:	tbnz	w0, #31, 42dd78 <sd_machine_get_ifindices+0x128>
  42ddd8:	add	x22, x20, #0x1
  42dddc:	sub	x0, x29, #0x20
  42dde0:	sub	x1, x29, #0x18
  42dde4:	mov	w3, #0x4                   	// #4
  42dde8:	mov	x2, x22
  42ddec:	bl	40bc80 <greedy_realloc@plt>
  42ddf0:	cbz	x0, 42de24 <sd_machine_get_ifindices+0x1d4>
  42ddf4:	ldur	w8, [x29, #-44]
  42ddf8:	ldur	x9, [x29, #-32]
  42ddfc:	str	w8, [x9, x20, lsl #2]
  42de00:	mov	x20, x22
  42de04:	b	42dd78 <sd_machine_get_ifindices+0x128>
  42de08:	mov	w20, wzr
  42de0c:	str	xzr, [x19]
  42de10:	b	42de34 <sd_machine_get_ifindices+0x1e4>
  42de14:	mov	x20, xzr
  42de18:	ldur	x8, [x29, #-32]
  42de1c:	str	x8, [x19]
  42de20:	b	42de34 <sd_machine_get_ifindices+0x1e4>
  42de24:	ldur	x0, [x29, #-32]
  42de28:	bl	40a320 <free@plt>
  42de2c:	mov	w20, #0xfffffff4            	// #-12
  42de30:	mov	sp, x24
  42de34:	ldur	x0, [x29, #-8]
  42de38:	bl	40a320 <free@plt>
  42de3c:	mov	w0, w20
  42de40:	mov	sp, x29
  42de44:	ldp	x20, x19, [sp, #48]
  42de48:	ldp	x22, x21, [sp, #32]
  42de4c:	ldp	x24, x23, [sp, #16]
  42de50:	ldp	x29, x30, [sp], #64
  42de54:	ret
  42de58:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42de5c:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42de60:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42de64:	add	x1, x1, #0x57a
  42de68:	add	x2, x2, #0xf84
  42de6c:	add	x4, x4, #0x599
  42de70:	mov	w0, #0x1                   	// #1
  42de74:	mov	w3, #0x38f                 	// #911
  42de78:	b	42de9c <sd_machine_get_ifindices+0x24c>
  42de7c:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42de80:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42de84:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42de88:	add	x1, x1, #0x5cc
  42de8c:	add	x2, x2, #0xf84
  42de90:	add	x4, x4, #0x599
  42de94:	mov	w0, #0x1                   	// #1
  42de98:	mov	w3, #0x390                 	// #912
  42de9c:	bl	40ac10 <log_assert_failed_return_realm@plt>
  42dea0:	mov	w20, #0xffffffea            	// #-22
  42dea4:	b	42de34 <sd_machine_get_ifindices+0x1e4>
  42dea8:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  42deac:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42deb0:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42deb4:	add	x1, x1, #0xc66
  42deb8:	add	x2, x2, #0xf84
  42debc:	add	x4, x4, #0x599
  42dec0:	mov	w0, #0x1                   	// #1
  42dec4:	mov	w3, #0x392                 	// #914
  42dec8:	bl	40a630 <log_assert_failed_realm@plt>

000000000042decc <sd_login_monitor_new>:
  42decc:	stp	x29, x30, [sp, #-48]!
  42ded0:	stp	x22, x21, [sp, #16]
  42ded4:	stp	x20, x19, [sp, #32]
  42ded8:	mov	x29, sp
  42dedc:	cbz	x1, 42e01c <sd_login_monitor_new+0x150>
  42dee0:	mov	x21, x0
  42dee4:	mov	w0, #0x800                 	// #2048
  42dee8:	movk	w0, #0x8, lsl #16
  42deec:	mov	x20, x1
  42def0:	bl	40b420 <inotify_init1@plt>
  42def4:	mov	w19, w0
  42def8:	tbnz	w0, #31, 42dff4 <sd_login_monitor_new+0x128>
  42defc:	cbz	x21, 42df1c <sd_login_monitor_new+0x50>
  42df00:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42df04:	add	x1, x1, #0x618
  42df08:	mov	x0, x21
  42df0c:	bl	40a930 <strcmp@plt>
  42df10:	cbz	w0, 42df1c <sd_login_monitor_new+0x50>
  42df14:	mov	w22, wzr
  42df18:	b	42df3c <sd_login_monitor_new+0x70>
  42df1c:	adrp	x1, 43e000 <worker_hash_op+0x9df8>
  42df20:	add	x1, x1, #0xe31
  42df24:	mov	w2, #0x280                 	// #640
  42df28:	mov	w0, w19
  42df2c:	bl	40b450 <inotify_add_watch@plt>
  42df30:	tbnz	w0, #31, 42dff4 <sd_login_monitor_new+0x128>
  42df34:	cbz	x21, 42df50 <sd_login_monitor_new+0x84>
  42df38:	mov	w22, #0x1                   	// #1
  42df3c:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  42df40:	add	x1, x1, #0x6f1
  42df44:	mov	x0, x21
  42df48:	bl	40a930 <strcmp@plt>
  42df4c:	cbnz	w0, 42df70 <sd_login_monitor_new+0xa4>
  42df50:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42df54:	add	x1, x1, #0x4d1
  42df58:	mov	w2, #0x280                 	// #640
  42df5c:	mov	w0, w19
  42df60:	bl	40b450 <inotify_add_watch@plt>
  42df64:	tbnz	w0, #31, 42dff4 <sd_login_monitor_new+0x128>
  42df68:	cbz	x21, 42df84 <sd_login_monitor_new+0xb8>
  42df6c:	mov	w22, #0x1                   	// #1
  42df70:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42df74:	add	x1, x1, #0xca
  42df78:	mov	x0, x21
  42df7c:	bl	40a930 <strcmp@plt>
  42df80:	cbnz	w0, 42dfa4 <sd_login_monitor_new+0xd8>
  42df84:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42df88:	add	x1, x1, #0x4e8
  42df8c:	mov	w2, #0x280                 	// #640
  42df90:	mov	w0, w19
  42df94:	bl	40b450 <inotify_add_watch@plt>
  42df98:	tbnz	w0, #31, 42dff4 <sd_login_monitor_new+0x128>
  42df9c:	cbz	x21, 42dfc4 <sd_login_monitor_new+0xf8>
  42dfa0:	mov	w22, #0x1                   	// #1
  42dfa4:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42dfa8:	add	x1, x1, #0x1c7
  42dfac:	mov	x0, x21
  42dfb0:	bl	40a930 <strcmp@plt>
  42dfb4:	cbz	w0, 42dfc4 <sd_login_monitor_new+0xf8>
  42dfb8:	cbnz	w22, 42dfdc <sd_login_monitor_new+0x110>
  42dfbc:	mov	w21, #0xffffffea            	// #-22
  42dfc0:	b	42e000 <sd_login_monitor_new+0x134>
  42dfc4:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42dfc8:	add	x1, x1, #0x527
  42dfcc:	mov	w2, #0x280                 	// #640
  42dfd0:	mov	w0, w19
  42dfd4:	bl	40b450 <inotify_add_watch@plt>
  42dfd8:	tbnz	w0, #31, 42dff4 <sd_login_monitor_new+0x128>
  42dfdc:	add	w8, w19, #0x1
  42dfe0:	sxtw	x8, w8
  42dfe4:	mov	w21, wzr
  42dfe8:	str	x8, [x20]
  42dfec:	mov	w19, #0xffffffff            	// #-1
  42dff0:	b	42e000 <sd_login_monitor_new+0x134>
  42dff4:	bl	40a3e0 <__errno_location@plt>
  42dff8:	ldr	w8, [x0]
  42dffc:	neg	w21, w8
  42e000:	mov	w0, w19
  42e004:	bl	40a660 <safe_close@plt>
  42e008:	mov	w0, w21
  42e00c:	ldp	x20, x19, [sp, #32]
  42e010:	ldp	x22, x21, [sp, #16]
  42e014:	ldp	x29, x30, [sp], #48
  42e018:	ret
  42e01c:	adrp	x1, 43a000 <worker_hash_op+0x5df8>
  42e020:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42e024:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42e028:	add	x1, x1, #0x73
  42e02c:	add	x2, x2, #0xf84
  42e030:	add	x4, x4, #0x5dc
  42e034:	mov	w0, #0x1                   	// #1
  42e038:	mov	w3, #0x3bf                 	// #959
  42e03c:	bl	40ac10 <log_assert_failed_return_realm@plt>
  42e040:	mov	w21, #0xffffffea            	// #-22
  42e044:	mov	w19, #0xffffffff            	// #-1
  42e048:	b	42e000 <sd_login_monitor_new+0x134>

000000000042e04c <sd_login_monitor_unref>:
  42e04c:	cbz	x0, 42e064 <sd_login_monitor_unref+0x18>
  42e050:	stp	x29, x30, [sp, #-16]!
  42e054:	sub	w0, w0, #0x1
  42e058:	mov	x29, sp
  42e05c:	bl	40bc90 <close_nointr@plt>
  42e060:	ldp	x29, x30, [sp], #16
  42e064:	mov	x0, xzr
  42e068:	ret

000000000042e06c <sd_login_monitor_flush>:
  42e06c:	stp	x29, x30, [sp, #-16]!
  42e070:	mov	x29, sp
  42e074:	cbz	x0, 42e08c <sd_login_monitor_flush+0x20>
  42e078:	sub	w0, w0, #0x1
  42e07c:	bl	40bca0 <flush_fd@plt>
  42e080:	and	w0, w0, w0, asr #31
  42e084:	ldp	x29, x30, [sp], #16
  42e088:	ret
  42e08c:	adrp	x1, 43a000 <worker_hash_op+0x5df8>
  42e090:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42e094:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42e098:	add	x1, x1, #0x73
  42e09c:	add	x2, x2, #0xf84
  42e0a0:	add	x4, x4, #0x61d
  42e0a4:	mov	w0, #0x1                   	// #1
  42e0a8:	mov	w3, #0x3fd                 	// #1021
  42e0ac:	bl	40ac10 <log_assert_failed_return_realm@plt>
  42e0b0:	mov	w0, #0xffffffea            	// #-22
  42e0b4:	ldp	x29, x30, [sp], #16
  42e0b8:	ret

000000000042e0bc <sd_login_monitor_get_fd>:
  42e0bc:	cbz	x0, 42e0c8 <sd_login_monitor_get_fd+0xc>
  42e0c0:	sub	w0, w0, #0x1
  42e0c4:	ret
  42e0c8:	stp	x29, x30, [sp, #-16]!
  42e0cc:	adrp	x1, 43a000 <worker_hash_op+0x5df8>
  42e0d0:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42e0d4:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42e0d8:	add	x1, x1, #0x73
  42e0dc:	add	x2, x2, #0xf84
  42e0e0:	add	x4, x4, #0x64c
  42e0e4:	mov	w0, #0x1                   	// #1
  42e0e8:	mov	w3, #0x408                 	// #1032
  42e0ec:	mov	x29, sp
  42e0f0:	bl	40ac10 <log_assert_failed_return_realm@plt>
  42e0f4:	mov	w0, #0xffffffea            	// #-22
  42e0f8:	ldp	x29, x30, [sp], #16
  42e0fc:	ret

000000000042e100 <sd_login_monitor_get_events>:
  42e100:	cbz	x0, 42e10c <sd_login_monitor_get_events+0xc>
  42e104:	mov	w0, #0x1                   	// #1
  42e108:	ret
  42e10c:	stp	x29, x30, [sp, #-16]!
  42e110:	adrp	x1, 43a000 <worker_hash_op+0x5df8>
  42e114:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42e118:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42e11c:	add	x1, x1, #0x73
  42e120:	add	x2, x2, #0xf84
  42e124:	add	x4, x4, #0x67c
  42e128:	mov	w0, #0x1                   	// #1
  42e12c:	mov	w3, #0x40f                 	// #1039
  42e130:	mov	x29, sp
  42e134:	bl	40ac10 <log_assert_failed_return_realm@plt>
  42e138:	mov	w0, #0xffffffea            	// #-22
  42e13c:	ldp	x29, x30, [sp], #16
  42e140:	ret

000000000042e144 <sd_login_monitor_get_timeout>:
  42e144:	stp	x29, x30, [sp, #-16]!
  42e148:	mov	x29, sp
  42e14c:	cbz	x0, 42e168 <sd_login_monitor_get_timeout+0x24>
  42e150:	cbz	x1, 42e18c <sd_login_monitor_get_timeout+0x48>
  42e154:	mov	x8, #0xffffffffffffffff    	// #-1
  42e158:	mov	w0, wzr
  42e15c:	str	x8, [x1]
  42e160:	ldp	x29, x30, [sp], #16
  42e164:	ret
  42e168:	adrp	x1, 43a000 <worker_hash_op+0x5df8>
  42e16c:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42e170:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42e174:	add	x1, x1, #0x73
  42e178:	add	x2, x2, #0xf84
  42e17c:	add	x4, x4, #0x6b0
  42e180:	mov	w0, #0x1                   	// #1
  42e184:	mov	w3, #0x41a                 	// #1050
  42e188:	b	42e1ac <sd_login_monitor_get_timeout+0x68>
  42e18c:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42e190:	adrp	x2, 43e000 <worker_hash_op+0x9df8>
  42e194:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42e198:	add	x1, x1, #0x6f1
  42e19c:	add	x2, x2, #0xf84
  42e1a0:	add	x4, x4, #0x6b0
  42e1a4:	mov	w0, #0x1                   	// #1
  42e1a8:	mov	w3, #0x41b                 	// #1051
  42e1ac:	bl	40ac10 <log_assert_failed_return_realm@plt>
  42e1b0:	mov	w0, #0xffffffea            	// #-22
  42e1b4:	ldp	x29, x30, [sp], #16
  42e1b8:	ret

000000000042e1bc <link_config_gperf_lookup>:
  42e1bc:	stp	x29, x30, [sp, #-32]!
  42e1c0:	sub	x8, x1, #0x9
  42e1c4:	cmp	x8, #0x16
  42e1c8:	str	x19, [sp, #16]
  42e1cc:	mov	x29, sp
  42e1d0:	b.hi	42e230 <link_config_gperf_lookup+0x74>  // b.pmore
  42e1d4:	ldrb	w8, [x0, #6]
  42e1d8:	ldrb	w9, [x0, #5]
  42e1dc:	adrp	x10, 442000 <hash_key_name.asso_values+0x4>
  42e1e0:	add	x10, x10, #0x270
  42e1e4:	ldrb	w8, [x10, x8]
  42e1e8:	ldrb	w9, [x10, x9]
  42e1ec:	add	x8, x8, x1
  42e1f0:	add	x8, x8, x9
  42e1f4:	cmp	w8, #0x37
  42e1f8:	b.hi	42e230 <link_config_gperf_lookup+0x74>  // b.pmore
  42e1fc:	adrp	x9, 46e000 <keyboard_lookup_key.wordlist+0x16bd8>
  42e200:	add	x9, x9, #0x670
  42e204:	add	x19, x9, x8, lsl #5
  42e208:	ldr	x8, [x19]
  42e20c:	cbz	x8, 42e230 <link_config_gperf_lookup+0x74>
  42e210:	ldrb	w9, [x0]
  42e214:	ldrb	w10, [x8]
  42e218:	cmp	w9, w10
  42e21c:	b.ne	42e230 <link_config_gperf_lookup+0x74>  // b.any
  42e220:	add	x0, x0, #0x1
  42e224:	add	x1, x8, #0x1
  42e228:	bl	40a930 <strcmp@plt>
  42e22c:	cbz	w0, 42e234 <link_config_gperf_lookup+0x78>
  42e230:	mov	x19, xzr
  42e234:	mov	x0, x19
  42e238:	ldr	x19, [sp, #16]
  42e23c:	ldp	x29, x30, [sp], #32
  42e240:	ret

000000000042e244 <net_get_name_persistent>:
  42e244:	sub	sp, sp, #0x50
  42e248:	stp	x29, x30, [sp, #48]
  42e24c:	stp	x20, x19, [sp, #64]
  42e250:	add	x29, sp, #0x30
  42e254:	cbz	x0, 42e2d0 <net_get_name_persistent+0x8c>
  42e258:	adrp	x1, 43c000 <worker_hash_op+0x7df8>
  42e25c:	mov	x8, sp
  42e260:	adrp	x9, 43c000 <worker_hash_op+0x7df8>
  42e264:	adrp	x10, 43c000 <worker_hash_op+0x7df8>
  42e268:	adrp	x11, 43c000 <worker_hash_op+0x7df8>
  42e26c:	mov	x19, x0
  42e270:	add	x1, x1, #0xddf
  42e274:	add	x9, x9, #0xdce
  42e278:	add	x10, x10, #0xdbd
  42e27c:	add	x11, x11, #0xda8
  42e280:	add	x20, x8, #0x8
  42e284:	stp	x1, x9, [sp]
  42e288:	stp	x10, x11, [sp, #16]
  42e28c:	str	xzr, [sp, #32]
  42e290:	sub	x2, x29, #0x8
  42e294:	mov	x0, x19
  42e298:	bl	40aa50 <sd_device_get_property_value@plt>
  42e29c:	tbz	w0, #31, 42e2bc <net_get_name_persistent+0x78>
  42e2a0:	ldr	x1, [x20], #8
  42e2a4:	cbnz	x1, 42e290 <net_get_name_persistent+0x4c>
  42e2a8:	mov	x0, xzr
  42e2ac:	ldp	x20, x19, [sp, #64]
  42e2b0:	ldp	x29, x30, [sp, #48]
  42e2b4:	add	sp, sp, #0x50
  42e2b8:	ret
  42e2bc:	ldur	x0, [x29, #-8]
  42e2c0:	ldp	x20, x19, [sp, #64]
  42e2c4:	ldp	x29, x30, [sp, #48]
  42e2c8:	add	sp, sp, #0x50
  42e2cc:	ret
  42e2d0:	adrp	x1, 439000 <worker_hash_op+0x4df8>
  42e2d4:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  42e2d8:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42e2dc:	add	x1, x1, #0x764
  42e2e0:	add	x2, x2, #0xa9a
  42e2e4:	add	x4, x4, #0xac4
  42e2e8:	mov	w3, #0x20                  	// #32
  42e2ec:	bl	40a630 <log_assert_failed_realm@plt>

000000000042e2f0 <net_get_unique_predictable_data>:
  42e2f0:	stp	x29, x30, [sp, #-48]!
  42e2f4:	stp	x22, x21, [sp, #16]
  42e2f8:	stp	x20, x19, [sp, #32]
  42e2fc:	mov	x29, sp
  42e300:	sub	sp, sp, #0x40
  42e304:	cbz	x0, 42e50c <net_get_unique_predictable_data+0x21c>
  42e308:	mov	w21, w1
  42e30c:	adrp	x1, 43c000 <worker_hash_op+0x7df8>
  42e310:	sub	x8, x29, #0x30
  42e314:	adrp	x9, 43c000 <worker_hash_op+0x7df8>
  42e318:	adrp	x10, 43c000 <worker_hash_op+0x7df8>
  42e31c:	adrp	x11, 43c000 <worker_hash_op+0x7df8>
  42e320:	mov	x19, x2
  42e324:	mov	x20, x0
  42e328:	add	x1, x1, #0xddf
  42e32c:	add	x9, x9, #0xdce
  42e330:	add	x10, x10, #0xdbd
  42e334:	add	x11, x11, #0xda8
  42e338:	add	x22, x8, #0x8
  42e33c:	stp	x1, x9, [x29, #-48]
  42e340:	stp	x10, x11, [x29, #-32]
  42e344:	stur	xzr, [x29, #-16]
  42e348:	sub	x2, x29, #0x8
  42e34c:	mov	x0, x20
  42e350:	bl	40aa50 <sd_device_get_property_value@plt>
  42e354:	tbz	w0, #31, 42e370 <net_get_unique_predictable_data+0x80>
  42e358:	ldr	x1, [x22], #8
  42e35c:	cbnz	x1, 42e348 <net_get_unique_predictable_data+0x58>
  42e360:	mov	x22, xzr
  42e364:	stur	x22, [x29, #-48]
  42e368:	cbz	x22, 42e37c <net_get_unique_predictable_data+0x8c>
  42e36c:	b	42e390 <net_get_unique_predictable_data+0xa0>
  42e370:	ldur	x22, [x29, #-8]
  42e374:	stur	x22, [x29, #-48]
  42e378:	cbnz	x22, 42e390 <net_get_unique_predictable_data+0xa0>
  42e37c:	tbz	w21, #0, 42e390 <net_get_unique_predictable_data+0xa0>
  42e380:	sub	x1, x29, #0x30
  42e384:	mov	x0, x20
  42e388:	bl	40a780 <sd_device_get_sysname@plt>
  42e38c:	ldur	x22, [x29, #-48]
  42e390:	cbz	x22, 42e46c <net_get_unique_predictable_data+0x17c>
  42e394:	mov	w0, wzr
  42e398:	stur	xzr, [x29, #-8]
  42e39c:	bl	40a2c0 <log_get_max_level_realm@plt>
  42e3a0:	cmp	w0, #0x7
  42e3a4:	mov	x6, xzr
  42e3a8:	b.ge	42e4e0 <net_get_unique_predictable_data+0x1f0>  // b.tcont
  42e3ac:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  42e3b0:	add	x8, x8, #0x7f
  42e3b4:	cmp	x6, #0x0
  42e3b8:	csel	x5, xzr, x8, eq  // eq = none
  42e3bc:	sub	sp, sp, #0x20
  42e3c0:	adrp	x8, 43f000 <worker_hash_op+0xadf8>
  42e3c4:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  42e3c8:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42e3cc:	add	x8, x8, #0xb81
  42e3d0:	add	x2, x2, #0xa9a
  42e3d4:	add	x4, x4, #0xb39
  42e3d8:	mov	w0, #0x7                   	// #7
  42e3dc:	mov	w3, #0x3d                  	// #61
  42e3e0:	mov	w1, wzr
  42e3e4:	mov	x7, xzr
  42e3e8:	stp	x8, x22, [sp, #8]
  42e3ec:	str	xzr, [sp]
  42e3f0:	bl	40a730 <log_object_internal@plt>
  42e3f4:	add	sp, sp, #0x20
  42e3f8:	ldur	x0, [x29, #-48]
  42e3fc:	bl	40aa40 <strlen@plt>
  42e400:	add	x20, x0, #0x10
  42e404:	cmp	x20, #0x400, lsl #12
  42e408:	b.hi	42e52c <net_get_unique_predictable_data+0x23c>  // b.pmore
  42e40c:	add	x9, x20, #0xf
  42e410:	mov	x8, sp
  42e414:	and	x9, x9, #0xfffffffffffffff0
  42e418:	mov	x22, x0
  42e41c:	sub	x21, x8, x9
  42e420:	mov	sp, x21
  42e424:	mov	x0, x21
  42e428:	bl	40bd70 <sd_id128_get_machine@plt>
  42e42c:	tbnz	w0, #31, 42e4cc <net_get_unique_predictable_data+0x1dc>
  42e430:	ldur	x1, [x29, #-48]
  42e434:	add	x0, x21, #0x10
  42e438:	mov	x2, x22
  42e43c:	bl	40adc0 <memcpy@plt>
  42e440:	adrp	x8, 442000 <hash_key_name.asso_values+0x4>
  42e444:	ldr	q0, [x8, #592]
  42e448:	sub	x2, x29, #0x40
  42e44c:	mov	x0, x21
  42e450:	mov	x1, x20
  42e454:	stur	q0, [x29, #-64]
  42e458:	bl	40bd80 <siphash24@plt>
  42e45c:	mov	x8, x0
  42e460:	mov	w0, wzr
  42e464:	str	x8, [x19]
  42e468:	b	42e4cc <net_get_unique_predictable_data+0x1dc>
  42e46c:	mov	w0, wzr
  42e470:	stur	xzr, [x29, #-8]
  42e474:	bl	40a2c0 <log_get_max_level_realm@plt>
  42e478:	cmp	w0, #0x7
  42e47c:	mov	x6, xzr
  42e480:	b.ge	42e4f8 <net_get_unique_predictable_data+0x208>  // b.tcont
  42e484:	adrp	x8, 435000 <worker_hash_op+0xdf8>
  42e488:	add	x8, x8, #0x7f
  42e48c:	cmp	x6, #0x0
  42e490:	csel	x5, xzr, x8, eq  // eq = none
  42e494:	adrp	x8, 43f000 <worker_hash_op+0xadf8>
  42e498:	add	x8, x8, #0xb59
  42e49c:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  42e4a0:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42e4a4:	add	x2, x2, #0xa9a
  42e4a8:	add	x4, x4, #0xb39
  42e4ac:	stp	xzr, x8, [sp, #-16]!
  42e4b0:	mov	w1, #0x3d                  	// #61
  42e4b4:	mov	w0, #0x7                   	// #7
  42e4b8:	movk	w1, #0x4000, lsl #16
  42e4bc:	mov	w3, #0x3b                  	// #59
  42e4c0:	mov	x7, xzr
  42e4c4:	bl	40a730 <log_object_internal@plt>
  42e4c8:	add	sp, sp, #0x10
  42e4cc:	mov	sp, x29
  42e4d0:	ldp	x20, x19, [sp, #32]
  42e4d4:	ldp	x22, x21, [sp, #16]
  42e4d8:	ldp	x29, x30, [sp], #48
  42e4dc:	ret
  42e4e0:	sub	x1, x29, #0x8
  42e4e4:	mov	x0, x20
  42e4e8:	bl	40a780 <sd_device_get_sysname@plt>
  42e4ec:	ldur	x6, [x29, #-8]
  42e4f0:	ldur	x22, [x29, #-48]
  42e4f4:	b	42e3ac <net_get_unique_predictable_data+0xbc>
  42e4f8:	sub	x1, x29, #0x8
  42e4fc:	mov	x0, x20
  42e500:	bl	40a780 <sd_device_get_sysname@plt>
  42e504:	ldur	x6, [x29, #-8]
  42e508:	b	42e484 <net_get_unique_predictable_data+0x194>
  42e50c:	adrp	x1, 439000 <worker_hash_op+0x4df8>
  42e510:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  42e514:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42e518:	add	x1, x1, #0x764
  42e51c:	add	x2, x2, #0xa9a
  42e520:	add	x4, x4, #0xaf5
  42e524:	mov	w3, #0x32                  	// #50
  42e528:	bl	40a630 <log_assert_failed_realm@plt>
  42e52c:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42e530:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  42e534:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42e538:	add	x1, x1, #0xbae
  42e53c:	add	x2, x2, #0xa9a
  42e540:	add	x4, x4, #0xaf5
  42e544:	mov	w3, #0x40                  	// #64
  42e548:	mov	w0, wzr
  42e54c:	bl	40a630 <log_assert_failed_realm@plt>

000000000042e550 <net_match_config>:
  42e550:	sub	sp, sp, #0xa0
  42e554:	stp	x29, x30, [sp, #64]
  42e558:	add	x29, sp, #0x40
  42e55c:	stp	x28, x27, [sp, #80]
  42e560:	stp	x22, x21, [sp, #128]
  42e564:	ldp	x21, x28, [x29, #104]
  42e568:	stp	x26, x25, [sp, #96]
  42e56c:	stp	x24, x23, [sp, #112]
  42e570:	stp	x20, x19, [sp, #144]
  42e574:	mov	x19, x7
  42e578:	mov	x22, x5
  42e57c:	mov	x23, x4
  42e580:	mov	x24, x3
  42e584:	mov	x25, x2
  42e588:	mov	x26, x1
  42e58c:	mov	x27, x0
  42e590:	str	x6, [sp, #16]
  42e594:	stp	xzr, xzr, [x29, #-24]
  42e598:	str	xzr, [sp, #32]
  42e59c:	cbz	x21, 42e5e0 <net_match_config+0x90>
  42e5a0:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  42e5a4:	add	x1, x1, #0x51c
  42e5a8:	sub	x2, x29, #0x10
  42e5ac:	mov	x0, x21
  42e5b0:	bl	40aa50 <sd_device_get_property_value@plt>
  42e5b4:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  42e5b8:	add	x1, x1, #0x2ac
  42e5bc:	sub	x2, x29, #0x18
  42e5c0:	mov	x0, x21
  42e5c4:	bl	40aa50 <sd_device_get_property_value@plt>
  42e5c8:	add	x1, sp, #0x20
  42e5cc:	mov	x0, x21
  42e5d0:	bl	40a870 <sd_device_get_devtype@plt>
  42e5d4:	ldr	x8, [x29, #120]
  42e5d8:	cbz	x8, 42e5fc <net_match_config+0xac>
  42e5dc:	cbz	x28, 42e60c <net_match_config+0xbc>
  42e5e0:	cbz	x27, 42e640 <net_match_config+0xf0>
  42e5e4:	cbz	x28, 42eaf4 <net_match_config+0x5a4>
  42e5e8:	mov	x0, x27
  42e5ec:	mov	x1, x28
  42e5f0:	bl	40bd90 <internal_hashmap_contains@plt>
  42e5f4:	tbz	w0, #0, 42eaf4 <net_match_config+0x5a4>
  42e5f8:	b	42e640 <net_match_config+0xf0>
  42e5fc:	add	x1, x29, #0x78
  42e600:	mov	x0, x21
  42e604:	bl	40a780 <sd_device_get_sysname@plt>
  42e608:	cbnz	x28, 42e5e0 <net_match_config+0x90>
  42e60c:	adrp	x1, 43c000 <worker_hash_op+0x7df8>
  42e610:	add	x1, x1, #0xe20
  42e614:	add	x2, sp, #0x18
  42e618:	mov	x0, x21
  42e61c:	bl	40ace0 <sd_device_get_sysattr_value@plt>
  42e620:	tbnz	w0, #31, 42e638 <net_match_config+0xe8>
  42e624:	ldr	x0, [sp, #24]
  42e628:	bl	40bda0 <ether_aton@plt>
  42e62c:	mov	x28, x0
  42e630:	cbnz	x27, 42e5e4 <net_match_config+0x94>
  42e634:	b	42e640 <net_match_config+0xf0>
  42e638:	mov	x28, xzr
  42e63c:	cbnz	x27, 42e5e4 <net_match_config+0x94>
  42e640:	str	x19, [sp, #8]
  42e644:	cbz	x26, 42e6d8 <net_match_config+0x188>
  42e648:	ldr	x8, [x26]
  42e64c:	cbz	x8, 42e6d8 <net_match_config+0x188>
  42e650:	ldur	x27, [x29, #-16]
  42e654:	cbz	x27, 42e6ac <net_match_config+0x15c>
  42e658:	mov	w28, wzr
  42e65c:	mov	w19, wzr
  42e660:	add	x26, x26, #0x8
  42e664:	b	42e678 <net_match_config+0x128>
  42e668:	ldr	x8, [x26], #8
  42e66c:	orr	w28, w28, w20
  42e670:	orr	w19, w19, w9
  42e674:	cbz	x8, 42e6d0 <net_match_config+0x180>
  42e678:	mov	x9, x8
  42e67c:	ldrb	w10, [x9], #1
  42e680:	mov	x1, x27
  42e684:	mov	w2, wzr
  42e688:	cmp	w10, #0x21
  42e68c:	csel	x0, x8, x9, ne  // ne = any
  42e690:	cset	w20, ne  // ne = any
  42e694:	bl	40b370 <fnmatch@plt>
  42e698:	cmp	w0, #0x0
  42e69c:	cset	w9, eq  // eq = none
  42e6a0:	cbnz	w0, 42e668 <net_match_config+0x118>
  42e6a4:	cbnz	w20, 42e668 <net_match_config+0x118>
  42e6a8:	b	42eaf4 <net_match_config+0x5a4>
  42e6ac:	mov	w28, wzr
  42e6b0:	add	x9, x26, #0x8
  42e6b4:	ldrb	w10, [x8]
  42e6b8:	ldr	x8, [x9], #8
  42e6bc:	cmp	w10, #0x21
  42e6c0:	cset	w10, ne  // ne = any
  42e6c4:	orr	w28, w28, w10
  42e6c8:	cbnz	x8, 42e6b4 <net_match_config+0x164>
  42e6cc:	mov	w19, wzr
  42e6d0:	tbnz	w19, #0, 42e6d8 <net_match_config+0x188>
  42e6d4:	tbnz	w28, #0, 42eaf4 <net_match_config+0x5a4>
  42e6d8:	cbz	x25, 42e76c <net_match_config+0x21c>
  42e6dc:	ldr	x8, [x25]
  42e6e0:	cbz	x8, 42e76c <net_match_config+0x21c>
  42e6e4:	ldur	x26, [x29, #-24]
  42e6e8:	cbz	x26, 42e740 <net_match_config+0x1f0>
  42e6ec:	mov	w27, wzr
  42e6f0:	mov	w19, wzr
  42e6f4:	add	x25, x25, #0x8
  42e6f8:	b	42e70c <net_match_config+0x1bc>
  42e6fc:	ldr	x8, [x25], #8
  42e700:	orr	w27, w27, w20
  42e704:	orr	w19, w19, w9
  42e708:	cbz	x8, 42e764 <net_match_config+0x214>
  42e70c:	mov	x9, x8
  42e710:	ldrb	w10, [x9], #1
  42e714:	mov	x1, x26
  42e718:	mov	w2, wzr
  42e71c:	cmp	w10, #0x21
  42e720:	csel	x0, x8, x9, ne  // ne = any
  42e724:	cset	w20, ne  // ne = any
  42e728:	bl	40b370 <fnmatch@plt>
  42e72c:	cmp	w0, #0x0
  42e730:	cset	w9, eq  // eq = none
  42e734:	cbnz	w0, 42e6fc <net_match_config+0x1ac>
  42e738:	cbnz	w20, 42e6fc <net_match_config+0x1ac>
  42e73c:	b	42eaf4 <net_match_config+0x5a4>
  42e740:	mov	w27, wzr
  42e744:	add	x9, x25, #0x8
  42e748:	ldrb	w10, [x8]
  42e74c:	ldr	x8, [x9], #8
  42e750:	cmp	w10, #0x21
  42e754:	cset	w10, ne  // ne = any
  42e758:	orr	w27, w27, w10
  42e75c:	cbnz	x8, 42e748 <net_match_config+0x1f8>
  42e760:	mov	w19, wzr
  42e764:	tbnz	w19, #0, 42e76c <net_match_config+0x21c>
  42e768:	tbnz	w27, #0, 42eaf4 <net_match_config+0x5a4>
  42e76c:	cbz	x24, 42e800 <net_match_config+0x2b0>
  42e770:	ldr	x8, [x24]
  42e774:	cbz	x8, 42e800 <net_match_config+0x2b0>
  42e778:	ldr	x25, [sp, #32]
  42e77c:	cbz	x25, 42e7d4 <net_match_config+0x284>
  42e780:	mov	w26, wzr
  42e784:	mov	w19, wzr
  42e788:	add	x24, x24, #0x8
  42e78c:	b	42e7a0 <net_match_config+0x250>
  42e790:	ldr	x8, [x24], #8
  42e794:	orr	w26, w26, w20
  42e798:	orr	w19, w19, w9
  42e79c:	cbz	x8, 42e7f8 <net_match_config+0x2a8>
  42e7a0:	mov	x9, x8
  42e7a4:	ldrb	w10, [x9], #1
  42e7a8:	mov	x1, x25
  42e7ac:	mov	w2, wzr
  42e7b0:	cmp	w10, #0x21
  42e7b4:	csel	x0, x8, x9, ne  // ne = any
  42e7b8:	cset	w20, ne  // ne = any
  42e7bc:	bl	40b370 <fnmatch@plt>
  42e7c0:	cmp	w0, #0x0
  42e7c4:	cset	w9, eq  // eq = none
  42e7c8:	cbnz	w0, 42e790 <net_match_config+0x240>
  42e7cc:	cbnz	w20, 42e790 <net_match_config+0x240>
  42e7d0:	b	42eaf4 <net_match_config+0x5a4>
  42e7d4:	mov	w26, wzr
  42e7d8:	add	x9, x24, #0x8
  42e7dc:	ldrb	w10, [x8]
  42e7e0:	ldr	x8, [x9], #8
  42e7e4:	cmp	w10, #0x21
  42e7e8:	cset	w10, ne  // ne = any
  42e7ec:	orr	w26, w26, w10
  42e7f0:	cbnz	x8, 42e7dc <net_match_config+0x28c>
  42e7f4:	mov	w19, wzr
  42e7f8:	tbnz	w19, #0, 42e800 <net_match_config+0x2b0>
  42e7fc:	tbnz	w26, #0, 42eaf4 <net_match_config+0x5a4>
  42e800:	cbz	x23, 42e894 <net_match_config+0x344>
  42e804:	ldr	x8, [x23]
  42e808:	cbz	x8, 42e894 <net_match_config+0x344>
  42e80c:	ldr	x24, [x29, #120]
  42e810:	cbz	x24, 42e868 <net_match_config+0x318>
  42e814:	mov	w25, wzr
  42e818:	mov	w19, wzr
  42e81c:	add	x23, x23, #0x8
  42e820:	b	42e834 <net_match_config+0x2e4>
  42e824:	ldr	x8, [x23], #8
  42e828:	orr	w25, w25, w20
  42e82c:	orr	w19, w19, w9
  42e830:	cbz	x8, 42e88c <net_match_config+0x33c>
  42e834:	mov	x9, x8
  42e838:	ldrb	w10, [x9], #1
  42e83c:	mov	x1, x24
  42e840:	mov	w2, wzr
  42e844:	cmp	w10, #0x21
  42e848:	csel	x0, x8, x9, ne  // ne = any
  42e84c:	cset	w20, ne  // ne = any
  42e850:	bl	40b370 <fnmatch@plt>
  42e854:	cmp	w0, #0x0
  42e858:	cset	w9, eq  // eq = none
  42e85c:	cbnz	w0, 42e824 <net_match_config+0x2d4>
  42e860:	cbnz	w20, 42e824 <net_match_config+0x2d4>
  42e864:	b	42eaf4 <net_match_config+0x5a4>
  42e868:	mov	w25, wzr
  42e86c:	add	x9, x23, #0x8
  42e870:	ldrb	w10, [x8]
  42e874:	ldr	x8, [x9], #8
  42e878:	cmp	w10, #0x21
  42e87c:	cset	w10, ne  // ne = any
  42e880:	orr	w25, w25, w10
  42e884:	cbnz	x8, 42e870 <net_match_config+0x320>
  42e888:	mov	w19, wzr
  42e88c:	tbnz	w19, #0, 42e894 <net_match_config+0x344>
  42e890:	tbnz	w25, #0, 42eaf4 <net_match_config+0x5a4>
  42e894:	cbz	x22, 42e988 <net_match_config+0x438>
  42e898:	ldr	x25, [x22]
  42e89c:	cbz	x25, 42e988 <net_match_config+0x438>
  42e8a0:	cbz	x21, 42e958 <net_match_config+0x408>
  42e8a4:	add	x24, x22, #0x8
  42e8a8:	b	42e8c0 <net_match_config+0x370>
  42e8ac:	cbz	w8, 42e94c <net_match_config+0x3fc>
  42e8b0:	mov	x0, x22
  42e8b4:	bl	40a320 <free@plt>
  42e8b8:	ldr	x25, [x24], #8
  42e8bc:	cbz	x25, 42e988 <net_match_config+0x438>
  42e8c0:	mov	x8, x25
  42e8c4:	ldrb	w26, [x8], #1
  42e8c8:	mov	w1, #0x3d                  	// #61
  42e8cc:	cmp	w26, #0x21
  42e8d0:	csel	x22, x25, x8, ne  // ne = any
  42e8d4:	mov	x0, x22
  42e8d8:	bl	40a7d0 <strchr@plt>
  42e8dc:	cbz	x0, 42e988 <net_match_config+0x438>
  42e8e0:	cmp	w26, #0x21
  42e8e4:	cset	w8, eq  // eq = none
  42e8e8:	sub	x9, x0, x25
  42e8ec:	mov	x23, x0
  42e8f0:	sub	x1, x9, x8
  42e8f4:	mov	x0, x22
  42e8f8:	bl	40a7e0 <strndup@plt>
  42e8fc:	cbz	x0, 42e988 <net_match_config+0x438>
  42e900:	mov	x22, x0
  42e904:	sub	x2, x29, #0x8
  42e908:	mov	x0, x21
  42e90c:	mov	x1, x22
  42e910:	bl	40aa50 <sd_device_get_property_value@plt>
  42e914:	tbnz	w0, #31, 42e93c <net_match_config+0x3ec>
  42e918:	ldur	x1, [x29, #-8]
  42e91c:	add	x0, x23, #0x1
  42e920:	mov	w2, wzr
  42e924:	bl	40b370 <fnmatch@plt>
  42e928:	cmp	w0, #0x0
  42e92c:	cset	w8, eq  // eq = none
  42e930:	cmp	w26, #0x21
  42e934:	b.ne	42e8ac <net_match_config+0x35c>  // b.any
  42e938:	b	42e948 <net_match_config+0x3f8>
  42e93c:	mov	w8, wzr
  42e940:	cmp	w26, #0x21
  42e944:	b.ne	42e8ac <net_match_config+0x35c>  // b.any
  42e948:	tbz	w8, #0, 42e8b0 <net_match_config+0x360>
  42e94c:	mov	x0, x22
  42e950:	bl	40a320 <free@plt>
  42e954:	b	42eaf4 <net_match_config+0x5a4>
  42e958:	add	x19, x22, #0x8
  42e95c:	mov	x8, x25
  42e960:	ldrb	w20, [x8], #1
  42e964:	mov	w1, #0x3d                  	// #61
  42e968:	cmp	w20, #0x21
  42e96c:	csel	x0, x25, x8, ne  // ne = any
  42e970:	bl	40a7d0 <strchr@plt>
  42e974:	cbz	x0, 42e988 <net_match_config+0x438>
  42e978:	cmp	w20, #0x21
  42e97c:	b.ne	42eaf4 <net_match_config+0x5a4>  // b.any
  42e980:	ldr	x25, [x19], #8
  42e984:	cbnz	x25, 42e95c <net_match_config+0x40c>
  42e988:	ldr	w8, [x29, #128]
  42e98c:	cmp	w8, #0xc
  42e990:	b.ls	42e9a4 <net_match_config+0x454>  // b.plast
  42e994:	mov	x21, xzr
  42e998:	ldr	x9, [sp, #16]
  42e99c:	cbnz	x9, 42e9b8 <net_match_config+0x468>
  42e9a0:	b	42ea40 <net_match_config+0x4f0>
  42e9a4:	adrp	x9, 46e000 <keyboard_lookup_key.wordlist+0x16bd8>
  42e9a8:	add	x9, x9, #0xd70
  42e9ac:	ldr	x21, [x9, w8, uxtw #3]
  42e9b0:	ldr	x9, [sp, #16]
  42e9b4:	cbz	x9, 42ea40 <net_match_config+0x4f0>
  42e9b8:	ldr	x8, [x9]
  42e9bc:	cbz	x8, 42ea40 <net_match_config+0x4f0>
  42e9c0:	mov	w22, wzr
  42e9c4:	cbz	x21, 42ea18 <net_match_config+0x4c8>
  42e9c8:	mov	w19, wzr
  42e9cc:	add	x20, x9, #0x8
  42e9d0:	b	42e9e4 <net_match_config+0x494>
  42e9d4:	ldr	x8, [x20], #8
  42e9d8:	orr	w22, w22, w23
  42e9dc:	orr	w19, w19, w9
  42e9e0:	cbz	x8, 42ea38 <net_match_config+0x4e8>
  42e9e4:	mov	x9, x8
  42e9e8:	ldrb	w10, [x9], #1
  42e9ec:	mov	x1, x21
  42e9f0:	mov	w2, wzr
  42e9f4:	cmp	w10, #0x21
  42e9f8:	csel	x0, x8, x9, ne  // ne = any
  42e9fc:	cset	w23, ne  // ne = any
  42ea00:	bl	40b370 <fnmatch@plt>
  42ea04:	cmp	w0, #0x0
  42ea08:	cset	w9, eq  // eq = none
  42ea0c:	cbnz	w0, 42e9d4 <net_match_config+0x484>
  42ea10:	cbnz	w23, 42e9d4 <net_match_config+0x484>
  42ea14:	b	42eaf4 <net_match_config+0x5a4>
  42ea18:	add	x9, x9, #0x8
  42ea1c:	ldrb	w10, [x8]
  42ea20:	ldr	x8, [x9], #8
  42ea24:	cmp	w10, #0x21
  42ea28:	cset	w10, ne  // ne = any
  42ea2c:	orr	w22, w22, w10
  42ea30:	cbnz	x8, 42ea1c <net_match_config+0x4cc>
  42ea34:	mov	w19, wzr
  42ea38:	tbnz	w19, #0, 42ea40 <net_match_config+0x4f0>
  42ea3c:	tbnz	w22, #0, 42eaf4 <net_match_config+0x5a4>
  42ea40:	ldr	x9, [sp, #8]
  42ea44:	cbz	x9, 42ead4 <net_match_config+0x584>
  42ea48:	ldr	x8, [x9]
  42ea4c:	cbz	x8, 42ead4 <net_match_config+0x584>
  42ea50:	ldr	x20, [x29, #136]
  42ea54:	mov	w21, wzr
  42ea58:	cbz	x20, 42eaac <net_match_config+0x55c>
  42ea5c:	mov	w19, wzr
  42ea60:	add	x22, x9, #0x8
  42ea64:	b	42ea78 <net_match_config+0x528>
  42ea68:	ldr	x8, [x22], #8
  42ea6c:	orr	w21, w21, w23
  42ea70:	orr	w19, w19, w9
  42ea74:	cbz	x8, 42eacc <net_match_config+0x57c>
  42ea78:	mov	x9, x8
  42ea7c:	ldrb	w10, [x9], #1
  42ea80:	mov	x1, x20
  42ea84:	mov	w2, wzr
  42ea88:	cmp	w10, #0x21
  42ea8c:	csel	x0, x8, x9, ne  // ne = any
  42ea90:	cset	w23, ne  // ne = any
  42ea94:	bl	40b370 <fnmatch@plt>
  42ea98:	cmp	w0, #0x0
  42ea9c:	cset	w9, eq  // eq = none
  42eaa0:	cbnz	w0, 42ea68 <net_match_config+0x518>
  42eaa4:	cbnz	w23, 42ea68 <net_match_config+0x518>
  42eaa8:	b	42eaf4 <net_match_config+0x5a4>
  42eaac:	add	x9, x9, #0x8
  42eab0:	ldrb	w10, [x8]
  42eab4:	ldr	x8, [x9], #8
  42eab8:	cmp	w10, #0x21
  42eabc:	cset	w10, ne  // ne = any
  42eac0:	orr	w21, w21, w10
  42eac4:	cbnz	x8, 42eab0 <net_match_config+0x560>
  42eac8:	mov	w19, wzr
  42eacc:	tbnz	w19, #0, 42ead4 <net_match_config+0x584>
  42ead0:	tbnz	w21, #0, 42eaf4 <net_match_config+0x5a4>
  42ead4:	ldr	x0, [x29, #96]
  42ead8:	cbz	x0, 42eaec <net_match_config+0x59c>
  42eadc:	ldr	x1, [x29, #144]
  42eae0:	cbz	x1, 42eaf4 <net_match_config+0x5a4>
  42eae4:	bl	40bd90 <internal_hashmap_contains@plt>
  42eae8:	tbz	w0, #0, 42eaf4 <net_match_config+0x5a4>
  42eaec:	mov	w0, #0x1                   	// #1
  42eaf0:	b	42eaf8 <net_match_config+0x5a8>
  42eaf4:	mov	w0, wzr
  42eaf8:	ldp	x20, x19, [sp, #144]
  42eafc:	ldp	x22, x21, [sp, #128]
  42eb00:	ldp	x24, x23, [sp, #112]
  42eb04:	ldp	x26, x25, [sp, #96]
  42eb08:	ldp	x28, x27, [sp, #80]
  42eb0c:	ldp	x29, x30, [sp, #64]
  42eb10:	add	sp, sp, #0xa0
  42eb14:	ret

000000000042eb18 <config_parse_net_condition>:
  42eb18:	stp	x29, x30, [sp, #-48]!
  42eb1c:	str	x21, [sp, #16]
  42eb20:	stp	x20, x19, [sp, #32]
  42eb24:	mov	x29, sp
  42eb28:	cbz	x1, 42ebd8 <config_parse_net_condition+0xc0>
  42eb2c:	cbz	x5, 42ebfc <config_parse_net_condition+0xe4>
  42eb30:	cbz	x7, 42ec20 <config_parse_net_condition+0x108>
  42eb34:	ldr	x21, [x29, #48]
  42eb38:	cbz	x21, 42ec44 <config_parse_net_condition+0x12c>
  42eb3c:	ldrb	w8, [x7]
  42eb40:	mov	w19, w6
  42eb44:	cbz	w8, 42eb90 <config_parse_net_condition+0x78>
  42eb48:	cmp	w8, #0x21
  42eb4c:	cset	w3, eq  // eq = none
  42eb50:	cinc	x1, x7, eq  // eq = none
  42eb54:	mov	w0, w19
  42eb58:	mov	w2, wzr
  42eb5c:	bl	40bdb0 <condition_new@plt>
  42eb60:	cbz	x0, 42ebb4 <config_parse_net_condition+0x9c>
  42eb64:	mov	x20, x0
  42eb68:	ldr	x0, [x21]
  42eb6c:	mov	w1, w19
  42eb70:	bl	40b7a0 <condition_free_list_type@plt>
  42eb74:	str	x0, [x21]
  42eb78:	str	x0, [x20, #16]
  42eb7c:	cbz	x0, 42eb84 <config_parse_net_condition+0x6c>
  42eb80:	str	x20, [x0, #24]
  42eb84:	str	xzr, [x20, #24]
  42eb88:	str	x20, [x21]
  42eb8c:	b	42eba0 <config_parse_net_condition+0x88>
  42eb90:	ldr	x0, [x21]
  42eb94:	mov	w1, w19
  42eb98:	bl	40b7a0 <condition_free_list_type@plt>
  42eb9c:	str	x0, [x21]
  42eba0:	ldp	x20, x19, [sp, #32]
  42eba4:	ldr	x21, [sp, #16]
  42eba8:	mov	w0, wzr
  42ebac:	ldp	x29, x30, [sp], #48
  42ebb0:	ret
  42ebb4:	ldp	x20, x19, [sp, #32]
  42ebb8:	ldr	x21, [sp, #16]
  42ebbc:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42ebc0:	adrp	x3, 43f000 <worker_hash_op+0xadf8>
  42ebc4:	add	x1, x1, #0xa9a
  42ebc8:	add	x3, x3, #0xc66
  42ebcc:	mov	w2, #0xf8                  	// #248
  42ebd0:	ldp	x29, x30, [sp], #48
  42ebd4:	b	40a330 <log_oom_internal@plt>
  42ebd8:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  42ebdc:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  42ebe0:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42ebe4:	add	x1, x1, #0xdd9
  42ebe8:	add	x2, x2, #0xa9a
  42ebec:	add	x4, x4, #0xbd0
  42ebf0:	mov	w3, #0xe8                  	// #232
  42ebf4:	mov	w0, wzr
  42ebf8:	bl	40a630 <log_assert_failed_realm@plt>
  42ebfc:	adrp	x1, 43e000 <worker_hash_op+0x9df8>
  42ec00:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  42ec04:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42ec08:	add	x1, x1, #0x4e9
  42ec0c:	add	x2, x2, #0xa9a
  42ec10:	add	x4, x4, #0xbd0
  42ec14:	mov	w3, #0xe9                  	// #233
  42ec18:	mov	w0, wzr
  42ec1c:	bl	40a630 <log_assert_failed_realm@plt>
  42ec20:	adrp	x1, 43e000 <worker_hash_op+0x9df8>
  42ec24:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  42ec28:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42ec2c:	add	x1, x1, #0x4f0
  42ec30:	add	x2, x2, #0xa9a
  42ec34:	add	x4, x4, #0xbd0
  42ec38:	mov	w3, #0xea                  	// #234
  42ec3c:	mov	w0, wzr
  42ec40:	bl	40a630 <log_assert_failed_realm@plt>
  42ec44:	adrp	x1, 438000 <worker_hash_op+0x3df8>
  42ec48:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  42ec4c:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42ec50:	add	x1, x1, #0x479
  42ec54:	add	x2, x2, #0xa9a
  42ec58:	add	x4, x4, #0xbd0
  42ec5c:	mov	w3, #0xeb                  	// #235
  42ec60:	mov	w0, wzr
  42ec64:	bl	40a630 <log_assert_failed_realm@plt>

000000000042ec68 <config_parse_match_strv>:
  42ec68:	sub	sp, sp, #0x90
  42ec6c:	stp	x29, x30, [sp, #48]
  42ec70:	add	x29, sp, #0x30
  42ec74:	stp	x28, x27, [sp, #64]
  42ec78:	stp	x26, x25, [sp, #80]
  42ec7c:	stp	x24, x23, [sp, #96]
  42ec80:	stp	x22, x21, [sp, #112]
  42ec84:	stp	x20, x19, [sp, #128]
  42ec88:	stur	w2, [x29, #-20]
  42ec8c:	stur	x7, [x29, #-8]
  42ec90:	cbz	x1, 42eecc <config_parse_match_strv+0x264>
  42ec94:	cbz	x5, 42eef0 <config_parse_match_strv+0x288>
  42ec98:	mov	x19, x7
  42ec9c:	cbz	x7, 42ef14 <config_parse_match_strv+0x2ac>
  42eca0:	ldr	x23, [x29, #96]
  42eca4:	cbz	x23, 42ef38 <config_parse_match_strv+0x2d0>
  42eca8:	ldrb	w8, [x19]
  42ecac:	cbz	w8, 42edc8 <config_parse_match_strv+0x160>
  42ecb0:	cmp	w8, #0x21
  42ecb4:	adrp	x24, 43f000 <worker_hash_op+0xadf8>
  42ecb8:	adrp	x25, 43f000 <worker_hash_op+0xadf8>
  42ecbc:	mov	x21, x1
  42ecc0:	mov	x22, x0
  42ecc4:	cinc	x8, x19, eq  // eq = none
  42ecc8:	add	x24, x24, #0xa9a
  42eccc:	add	x25, x25, #0xd14
  42ecd0:	stur	x8, [x29, #-8]
  42ecd4:	b.ne	42edfc <config_parse_match_strv+0x194>  // b.any
  42ecd8:	adrp	x26, 43f000 <worker_hash_op+0xadf8>
  42ecdc:	add	x26, x26, #0xd49
  42ece0:	b	42ed0c <config_parse_match_strv+0xa4>
  42ece4:	mov	w2, #0x12f                 	// #303
  42ece8:	mov	x1, x24
  42ecec:	mov	x3, x25
  42ecf0:	bl	40a330 <log_oom_internal@plt>
  42ecf4:	mov	w27, w0
  42ecf8:	mov	w20, wzr
  42ecfc:	ldur	x0, [x29, #-16]
  42ed00:	bl	40a320 <free@plt>
  42ed04:	mov	w28, w27
  42ed08:	tbz	w20, #0, 42edd8 <config_parse_match_strv+0x170>
  42ed0c:	sub	x0, x29, #0x8
  42ed10:	sub	x1, x29, #0x10
  42ed14:	mov	w3, #0x28                  	// #40
  42ed18:	mov	x2, xzr
  42ed1c:	stur	xzr, [x29, #-16]
  42ed20:	bl	40bdc0 <extract_first_word@plt>
  42ed24:	mov	w27, w0
  42ed28:	cbz	w0, 42ecf8 <config_parse_match_strv+0x90>
  42ed2c:	cmn	w27, #0xc
  42ed30:	b.ne	42ed40 <config_parse_match_strv+0xd8>  // b.any
  42ed34:	mov	w2, #0x126                 	// #294
  42ed38:	mov	w0, wzr
  42ed3c:	b	42ece8 <config_parse_match_strv+0x80>
  42ed40:	tbnz	w27, #31, 42ed74 <config_parse_match_strv+0x10c>
  42ed44:	ldur	x1, [x29, #-16]
  42ed48:	mov	x0, x26
  42ed4c:	mov	x2, xzr
  42ed50:	bl	40b4c0 <strjoin_real@plt>
  42ed54:	cbz	x0, 42ece4 <config_parse_match_strv+0x7c>
  42ed58:	mov	x1, x0
  42ed5c:	mov	x0, x23
  42ed60:	bl	40bdd0 <strv_consume@plt>
  42ed64:	tbnz	w0, #31, 42edc0 <config_parse_match_strv+0x158>
  42ed68:	mov	w20, #0x1                   	// #1
  42ed6c:	mov	w27, w28
  42ed70:	b	42ecfc <config_parse_match_strv+0x94>
  42ed74:	mov	w0, wzr
  42ed78:	bl	40a2c0 <log_get_max_level_realm@plt>
  42ed7c:	cmp	w0, #0x3
  42ed80:	b.lt	42edb4 <config_parse_match_strv+0x14c>  // b.tstop
  42ed84:	ldur	w3, [x29, #-20]
  42ed88:	adrp	x8, 43f000 <worker_hash_op+0xadf8>
  42ed8c:	mov	w1, #0x3                   	// #3
  42ed90:	mov	w6, #0x128                 	// #296
  42ed94:	add	x8, x8, #0xd2c
  42ed98:	mov	x0, x22
  42ed9c:	mov	x2, x21
  42eda0:	mov	w4, w27
  42eda4:	mov	x5, x24
  42eda8:	mov	x7, x25
  42edac:	stp	x8, x19, [sp]
  42edb0:	bl	40b770 <log_syntax_internal@plt>
  42edb4:	mov	w20, wzr
  42edb8:	mov	w27, wzr
  42edbc:	b	42ecfc <config_parse_match_strv+0x94>
  42edc0:	mov	w2, #0x135                 	// #309
  42edc4:	b	42ed38 <config_parse_match_strv+0xd0>
  42edc8:	ldr	x0, [x23]
  42edcc:	bl	40ae30 <strv_free@plt>
  42edd0:	mov	w27, wzr
  42edd4:	str	x0, [x23]
  42edd8:	mov	w0, w27
  42eddc:	ldp	x20, x19, [sp, #128]
  42ede0:	ldp	x22, x21, [sp, #112]
  42ede4:	ldp	x24, x23, [sp, #96]
  42ede8:	ldp	x26, x25, [sp, #80]
  42edec:	ldp	x28, x27, [sp, #64]
  42edf0:	ldp	x29, x30, [sp, #48]
  42edf4:	add	sp, sp, #0x90
  42edf8:	ret
  42edfc:	adrp	x26, 43f000 <worker_hash_op+0xadf8>
  42ee00:	add	x26, x26, #0xd2c
  42ee04:	b	42ee34 <config_parse_match_strv+0x1cc>
  42ee08:	mov	w2, #0x126                 	// #294
  42ee0c:	mov	w0, wzr
  42ee10:	mov	x1, x24
  42ee14:	mov	x3, x25
  42ee18:	bl	40a330 <log_oom_internal@plt>
  42ee1c:	mov	w27, w0
  42ee20:	mov	w20, wzr
  42ee24:	ldur	x0, [x29, #-16]
  42ee28:	bl	40a320 <free@plt>
  42ee2c:	mov	w28, w27
  42ee30:	tbz	w20, #0, 42edd8 <config_parse_match_strv+0x170>
  42ee34:	sub	x0, x29, #0x8
  42ee38:	sub	x1, x29, #0x10
  42ee3c:	mov	w3, #0x28                  	// #40
  42ee40:	mov	x2, xzr
  42ee44:	stur	xzr, [x29, #-16]
  42ee48:	bl	40bdc0 <extract_first_word@plt>
  42ee4c:	mov	w27, w0
  42ee50:	cbz	w0, 42ee20 <config_parse_match_strv+0x1b8>
  42ee54:	cmn	w27, #0xc
  42ee58:	b.eq	42ee08 <config_parse_match_strv+0x1a0>  // b.none
  42ee5c:	tbnz	w27, #31, 42ee80 <config_parse_match_strv+0x218>
  42ee60:	ldur	x1, [x29, #-16]
  42ee64:	mov	x0, x23
  42ee68:	stur	xzr, [x29, #-16]
  42ee6c:	bl	40bdd0 <strv_consume@plt>
  42ee70:	tbnz	w0, #31, 42eec4 <config_parse_match_strv+0x25c>
  42ee74:	mov	w20, #0x1                   	// #1
  42ee78:	mov	w27, w28
  42ee7c:	b	42ee24 <config_parse_match_strv+0x1bc>
  42ee80:	mov	w0, wzr
  42ee84:	bl	40a2c0 <log_get_max_level_realm@plt>
  42ee88:	cmp	w0, #0x3
  42ee8c:	b.lt	42eeb8 <config_parse_match_strv+0x250>  // b.tstop
  42ee90:	ldur	w3, [x29, #-20]
  42ee94:	mov	w1, #0x3                   	// #3
  42ee98:	mov	w6, #0x128                 	// #296
  42ee9c:	mov	x0, x22
  42eea0:	mov	x2, x21
  42eea4:	mov	w4, w27
  42eea8:	mov	x5, x24
  42eeac:	mov	x7, x25
  42eeb0:	stp	x26, x19, [sp]
  42eeb4:	bl	40b770 <log_syntax_internal@plt>
  42eeb8:	mov	w20, wzr
  42eebc:	mov	w27, wzr
  42eec0:	b	42ee24 <config_parse_match_strv+0x1bc>
  42eec4:	mov	w2, #0x135                 	// #309
  42eec8:	b	42ee0c <config_parse_match_strv+0x1a4>
  42eecc:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  42eed0:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  42eed4:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42eed8:	add	x1, x1, #0xdd9
  42eedc:	add	x2, x2, #0xa9a
  42eee0:	add	x4, x4, #0xc81
  42eee4:	mov	w3, #0x112                 	// #274
  42eee8:	mov	w0, wzr
  42eeec:	bl	40a630 <log_assert_failed_realm@plt>
  42eef0:	adrp	x1, 43e000 <worker_hash_op+0x9df8>
  42eef4:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  42eef8:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42eefc:	add	x1, x1, #0x4e9
  42ef00:	add	x2, x2, #0xa9a
  42ef04:	add	x4, x4, #0xc81
  42ef08:	mov	w3, #0x113                 	// #275
  42ef0c:	mov	w0, wzr
  42ef10:	bl	40a630 <log_assert_failed_realm@plt>
  42ef14:	adrp	x1, 43e000 <worker_hash_op+0x9df8>
  42ef18:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  42ef1c:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42ef20:	add	x1, x1, #0x4f0
  42ef24:	add	x2, x2, #0xa9a
  42ef28:	add	x4, x4, #0xc81
  42ef2c:	mov	w3, #0x114                 	// #276
  42ef30:	mov	w0, wzr
  42ef34:	bl	40a630 <log_assert_failed_realm@plt>
  42ef38:	adrp	x1, 438000 <worker_hash_op+0x3df8>
  42ef3c:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  42ef40:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42ef44:	add	x1, x1, #0x479
  42ef48:	add	x2, x2, #0xa9a
  42ef4c:	add	x4, x4, #0xc81
  42ef50:	mov	w3, #0x115                 	// #277
  42ef54:	mov	w0, wzr
  42ef58:	bl	40a630 <log_assert_failed_realm@plt>

000000000042ef5c <config_parse_match_ifnames>:
  42ef5c:	sub	sp, sp, #0x80
  42ef60:	stp	x29, x30, [sp, #32]
  42ef64:	add	x29, sp, #0x20
  42ef68:	stp	x28, x27, [sp, #48]
  42ef6c:	stp	x26, x25, [sp, #64]
  42ef70:	stp	x24, x23, [sp, #80]
  42ef74:	stp	x22, x21, [sp, #96]
  42ef78:	stp	x20, x19, [sp, #112]
  42ef7c:	stur	x7, [x29, #-8]
  42ef80:	cbz	x1, 42f208 <config_parse_match_ifnames+0x2ac>
  42ef84:	cbz	x5, 42f22c <config_parse_match_ifnames+0x2d0>
  42ef88:	mov	x22, x7
  42ef8c:	cbz	x7, 42f250 <config_parse_match_ifnames+0x2f4>
  42ef90:	ldr	x23, [x29, #96]
  42ef94:	cbz	x23, 42f274 <config_parse_match_ifnames+0x318>
  42ef98:	mov	x8, x22
  42ef9c:	ldrb	w9, [x8], #1
  42efa0:	mov	w19, w2
  42efa4:	mov	x20, x1
  42efa8:	mov	x21, x0
  42efac:	cmp	w9, #0x21
  42efb0:	csel	x8, x22, x8, ne  // ne = any
  42efb4:	stur	x8, [x29, #-8]
  42efb8:	b.ne	42f088 <config_parse_match_ifnames+0x12c>  // b.any
  42efbc:	adrp	x24, 43f000 <worker_hash_op+0xadf8>
  42efc0:	adrp	x28, 43f000 <worker_hash_op+0xadf8>
  42efc4:	adrp	x25, 43f000 <worker_hash_op+0xadf8>
  42efc8:	adrp	x26, 43f000 <worker_hash_op+0xadf8>
  42efcc:	add	x24, x24, #0xd49
  42efd0:	add	x28, x28, #0xe24
  42efd4:	add	x25, x25, #0xa9a
  42efd8:	add	x26, x26, #0xde1
  42efdc:	b	42efe8 <config_parse_match_ifnames+0x8c>
  42efe0:	ldr	x0, [sp, #16]
  42efe4:	bl	40a320 <free@plt>
  42efe8:	sub	x0, x29, #0x8
  42efec:	add	x1, sp, #0x10
  42eff0:	mov	x2, xzr
  42eff4:	mov	w3, wzr
  42eff8:	str	xzr, [sp, #16]
  42effc:	bl	40bdc0 <extract_first_word@plt>
  42f000:	cmn	w0, #0xc
  42f004:	b.eq	42f18c <config_parse_match_ifnames+0x230>  // b.none
  42f008:	mov	w27, w0
  42f00c:	cbz	w0, 42f1c4 <config_parse_match_ifnames+0x268>
  42f010:	tbnz	w27, #31, 42f138 <config_parse_match_ifnames+0x1dc>
  42f014:	ldr	x0, [sp, #16]
  42f018:	bl	40bde0 <ifname_valid@plt>
  42f01c:	tbz	w0, #0, 42f048 <config_parse_match_ifnames+0xec>
  42f020:	ldr	x1, [sp, #16]
  42f024:	mov	x0, x24
  42f028:	mov	x2, xzr
  42f02c:	bl	40b4c0 <strjoin_real@plt>
  42f030:	cbz	x0, 42f1f0 <config_parse_match_ifnames+0x294>
  42f034:	mov	x1, x0
  42f038:	mov	x0, x23
  42f03c:	bl	40bdd0 <strv_consume@plt>
  42f040:	tbz	w0, #31, 42efe0 <config_parse_match_ifnames+0x84>
  42f044:	b	42f1a4 <config_parse_match_ifnames+0x248>
  42f048:	mov	w0, wzr
  42f04c:	bl	40a2c0 <log_get_max_level_realm@plt>
  42f050:	cmp	w0, #0x3
  42f054:	b.lt	42efe0 <config_parse_match_ifnames+0x84>  // b.tstop
  42f058:	ldr	x8, [sp, #16]
  42f05c:	mov	w1, #0x3                   	// #3
  42f060:	mov	w6, #0x162                 	// #354
  42f064:	mov	x0, x21
  42f068:	mov	x2, x20
  42f06c:	mov	w3, w19
  42f070:	mov	w4, wzr
  42f074:	mov	x5, x25
  42f078:	mov	x7, x26
  42f07c:	stp	x28, x8, [sp]
  42f080:	bl	40b770 <log_syntax_internal@plt>
  42f084:	b	42efe0 <config_parse_match_ifnames+0x84>
  42f088:	adrp	x26, 43f000 <worker_hash_op+0xadf8>
  42f08c:	adrp	x24, 43f000 <worker_hash_op+0xadf8>
  42f090:	adrp	x25, 43f000 <worker_hash_op+0xadf8>
  42f094:	add	x26, x26, #0xe24
  42f098:	add	x24, x24, #0xa9a
  42f09c:	add	x25, x25, #0xde1
  42f0a0:	b	42f0c0 <config_parse_match_ifnames+0x164>
  42f0a4:	ldr	x1, [sp, #16]
  42f0a8:	mov	x0, x23
  42f0ac:	str	xzr, [sp, #16]
  42f0b0:	bl	40bdd0 <strv_consume@plt>
  42f0b4:	tbnz	w0, #31, 42f1a4 <config_parse_match_ifnames+0x248>
  42f0b8:	ldr	x0, [sp, #16]
  42f0bc:	bl	40a320 <free@plt>
  42f0c0:	sub	x0, x29, #0x8
  42f0c4:	add	x1, sp, #0x10
  42f0c8:	mov	x2, xzr
  42f0cc:	mov	w3, wzr
  42f0d0:	str	xzr, [sp, #16]
  42f0d4:	bl	40bdc0 <extract_first_word@plt>
  42f0d8:	mov	w27, w0
  42f0dc:	cbz	w0, 42f1c4 <config_parse_match_ifnames+0x268>
  42f0e0:	cmn	w27, #0xc
  42f0e4:	b.eq	42f18c <config_parse_match_ifnames+0x230>  // b.none
  42f0e8:	tbnz	w27, #31, 42f138 <config_parse_match_ifnames+0x1dc>
  42f0ec:	ldr	x0, [sp, #16]
  42f0f0:	bl	40bde0 <ifname_valid@plt>
  42f0f4:	tbnz	w0, #0, 42f0a4 <config_parse_match_ifnames+0x148>
  42f0f8:	mov	w0, wzr
  42f0fc:	bl	40a2c0 <log_get_max_level_realm@plt>
  42f100:	cmp	w0, #0x3
  42f104:	b.lt	42f0b8 <config_parse_match_ifnames+0x15c>  // b.tstop
  42f108:	ldr	x8, [sp, #16]
  42f10c:	mov	w1, #0x3                   	// #3
  42f110:	mov	w6, #0x162                 	// #354
  42f114:	mov	x0, x21
  42f118:	mov	x2, x20
  42f11c:	mov	w3, w19
  42f120:	mov	w4, wzr
  42f124:	mov	x5, x24
  42f128:	mov	x7, x25
  42f12c:	stp	x26, x8, [sp]
  42f130:	bl	40b770 <log_syntax_internal@plt>
  42f134:	b	42f0b8 <config_parse_match_ifnames+0x15c>
  42f138:	mov	w0, wzr
  42f13c:	bl	40a2c0 <log_get_max_level_realm@plt>
  42f140:	cmp	w0, #0x3
  42f144:	mov	w27, wzr
  42f148:	b.lt	42f1c4 <config_parse_match_ifnames+0x268>  // b.tstop
  42f14c:	adrp	x8, 43f000 <worker_hash_op+0xadf8>
  42f150:	adrp	x5, 43f000 <worker_hash_op+0xadf8>
  42f154:	adrp	x7, 43f000 <worker_hash_op+0xadf8>
  42f158:	add	x8, x8, #0xdfc
  42f15c:	add	x5, x5, #0xa9a
  42f160:	add	x7, x7, #0xde1
  42f164:	mov	w1, #0x3                   	// #3
  42f168:	mov	w6, #0x15c                 	// #348
  42f16c:	mov	x0, x21
  42f170:	mov	x2, x20
  42f174:	mov	w3, w19
  42f178:	mov	w4, wzr
  42f17c:	stp	x8, x22, [sp]
  42f180:	bl	40b770 <log_syntax_internal@plt>
  42f184:	mov	w27, wzr
  42f188:	b	42f1c4 <config_parse_match_ifnames+0x268>
  42f18c:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42f190:	adrp	x3, 43f000 <worker_hash_op+0xadf8>
  42f194:	add	x1, x1, #0xa9a
  42f198:	add	x3, x3, #0xde1
  42f19c:	mov	w2, #0x159                 	// #345
  42f1a0:	b	42f1b8 <config_parse_match_ifnames+0x25c>
  42f1a4:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42f1a8:	adrp	x3, 43f000 <worker_hash_op+0xadf8>
  42f1ac:	add	x1, x1, #0xa9a
  42f1b0:	add	x3, x3, #0xde1
  42f1b4:	mov	w2, #0x16f                 	// #367
  42f1b8:	mov	w0, wzr
  42f1bc:	bl	40a330 <log_oom_internal@plt>
  42f1c0:	mov	w27, w0
  42f1c4:	ldr	x0, [sp, #16]
  42f1c8:	bl	40a320 <free@plt>
  42f1cc:	mov	w0, w27
  42f1d0:	ldp	x20, x19, [sp, #112]
  42f1d4:	ldp	x22, x21, [sp, #96]
  42f1d8:	ldp	x24, x23, [sp, #80]
  42f1dc:	ldp	x26, x25, [sp, #64]
  42f1e0:	ldp	x28, x27, [sp, #48]
  42f1e4:	ldp	x29, x30, [sp, #32]
  42f1e8:	add	sp, sp, #0x80
  42f1ec:	ret
  42f1f0:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42f1f4:	adrp	x3, 43f000 <worker_hash_op+0xadf8>
  42f1f8:	add	x1, x1, #0xa9a
  42f1fc:	add	x3, x3, #0xde1
  42f200:	mov	w2, #0x169                 	// #361
  42f204:	b	42f1bc <config_parse_match_ifnames+0x260>
  42f208:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  42f20c:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  42f210:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42f214:	add	x1, x1, #0xdd9
  42f218:	add	x2, x2, #0xa9a
  42f21c:	add	x4, x4, #0xd4b
  42f220:	mov	w3, #0x14a                 	// #330
  42f224:	mov	w0, wzr
  42f228:	bl	40a630 <log_assert_failed_realm@plt>
  42f22c:	adrp	x1, 43e000 <worker_hash_op+0x9df8>
  42f230:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  42f234:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42f238:	add	x1, x1, #0x4e9
  42f23c:	add	x2, x2, #0xa9a
  42f240:	add	x4, x4, #0xd4b
  42f244:	mov	w3, #0x14b                 	// #331
  42f248:	mov	w0, wzr
  42f24c:	bl	40a630 <log_assert_failed_realm@plt>
  42f250:	adrp	x1, 43e000 <worker_hash_op+0x9df8>
  42f254:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  42f258:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42f25c:	add	x1, x1, #0x4f0
  42f260:	add	x2, x2, #0xa9a
  42f264:	add	x4, x4, #0xd4b
  42f268:	mov	w3, #0x14c                 	// #332
  42f26c:	mov	w0, wzr
  42f270:	bl	40a630 <log_assert_failed_realm@plt>
  42f274:	adrp	x1, 438000 <worker_hash_op+0x3df8>
  42f278:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  42f27c:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42f280:	add	x1, x1, #0x479
  42f284:	add	x2, x2, #0xa9a
  42f288:	add	x4, x4, #0xd4b
  42f28c:	mov	w3, #0x14d                 	// #333
  42f290:	mov	w0, wzr
  42f294:	bl	40a630 <log_assert_failed_realm@plt>

000000000042f298 <config_parse_match_property>:
  42f298:	sub	sp, sp, #0x80
  42f29c:	stp	x29, x30, [sp, #32]
  42f2a0:	add	x29, sp, #0x20
  42f2a4:	stp	x28, x27, [sp, #48]
  42f2a8:	stp	x26, x25, [sp, #64]
  42f2ac:	stp	x24, x23, [sp, #80]
  42f2b0:	stp	x22, x21, [sp, #96]
  42f2b4:	stp	x20, x19, [sp, #112]
  42f2b8:	stur	x7, [x29, #-8]
  42f2bc:	cbz	x1, 42f544 <config_parse_match_property+0x2ac>
  42f2c0:	cbz	x5, 42f568 <config_parse_match_property+0x2d0>
  42f2c4:	mov	x22, x7
  42f2c8:	cbz	x7, 42f58c <config_parse_match_property+0x2f4>
  42f2cc:	ldr	x23, [x29, #96]
  42f2d0:	cbz	x23, 42f5b0 <config_parse_match_property+0x318>
  42f2d4:	mov	x8, x22
  42f2d8:	ldrb	w9, [x8], #1
  42f2dc:	mov	w19, w2
  42f2e0:	mov	x20, x1
  42f2e4:	mov	x21, x0
  42f2e8:	cmp	w9, #0x21
  42f2ec:	csel	x8, x22, x8, ne  // ne = any
  42f2f0:	stur	x8, [x29, #-8]
  42f2f4:	b.ne	42f3c4 <config_parse_match_property+0x12c>  // b.any
  42f2f8:	adrp	x24, 43f000 <worker_hash_op+0xadf8>
  42f2fc:	adrp	x28, 43f000 <worker_hash_op+0xadf8>
  42f300:	adrp	x25, 43f000 <worker_hash_op+0xadf8>
  42f304:	adrp	x26, 43f000 <worker_hash_op+0xadf8>
  42f308:	add	x24, x24, #0xd49
  42f30c:	add	x28, x28, #0xf18
  42f310:	add	x25, x25, #0xa9a
  42f314:	add	x26, x26, #0xefc
  42f318:	b	42f324 <config_parse_match_property+0x8c>
  42f31c:	ldr	x0, [sp, #16]
  42f320:	bl	40a320 <free@plt>
  42f324:	sub	x0, x29, #0x8
  42f328:	add	x1, sp, #0x10
  42f32c:	mov	w3, #0xa                   	// #10
  42f330:	mov	x2, xzr
  42f334:	str	xzr, [sp, #16]
  42f338:	bl	40bdc0 <extract_first_word@plt>
  42f33c:	cmn	w0, #0xc
  42f340:	b.eq	42f4c8 <config_parse_match_property+0x230>  // b.none
  42f344:	mov	w27, w0
  42f348:	cbz	w0, 42f500 <config_parse_match_property+0x268>
  42f34c:	tbnz	w27, #31, 42f474 <config_parse_match_property+0x1dc>
  42f350:	ldr	x0, [sp, #16]
  42f354:	bl	40bdf0 <env_assignment_is_valid@plt>
  42f358:	tbz	w0, #0, 42f384 <config_parse_match_property+0xec>
  42f35c:	ldr	x1, [sp, #16]
  42f360:	mov	x0, x24
  42f364:	mov	x2, xzr
  42f368:	bl	40b4c0 <strjoin_real@plt>
  42f36c:	cbz	x0, 42f52c <config_parse_match_property+0x294>
  42f370:	mov	x1, x0
  42f374:	mov	x0, x23
  42f378:	bl	40bdd0 <strv_consume@plt>
  42f37c:	tbz	w0, #31, 42f31c <config_parse_match_property+0x84>
  42f380:	b	42f4e0 <config_parse_match_property+0x248>
  42f384:	mov	w0, wzr
  42f388:	bl	40a2c0 <log_get_max_level_realm@plt>
  42f38c:	cmp	w0, #0x3
  42f390:	b.lt	42f31c <config_parse_match_property+0x84>  // b.tstop
  42f394:	ldr	x8, [sp, #16]
  42f398:	mov	w1, #0x3                   	// #3
  42f39c:	mov	w6, #0x19c                 	// #412
  42f3a0:	mov	x0, x21
  42f3a4:	mov	x2, x20
  42f3a8:	mov	w3, w19
  42f3ac:	mov	w4, wzr
  42f3b0:	mov	x5, x25
  42f3b4:	mov	x7, x26
  42f3b8:	stp	x28, x8, [sp]
  42f3bc:	bl	40b770 <log_syntax_internal@plt>
  42f3c0:	b	42f31c <config_parse_match_property+0x84>
  42f3c4:	adrp	x26, 43f000 <worker_hash_op+0xadf8>
  42f3c8:	adrp	x24, 43f000 <worker_hash_op+0xadf8>
  42f3cc:	adrp	x25, 43f000 <worker_hash_op+0xadf8>
  42f3d0:	add	x26, x26, #0xf18
  42f3d4:	add	x24, x24, #0xa9a
  42f3d8:	add	x25, x25, #0xefc
  42f3dc:	b	42f3fc <config_parse_match_property+0x164>
  42f3e0:	ldr	x1, [sp, #16]
  42f3e4:	mov	x0, x23
  42f3e8:	str	xzr, [sp, #16]
  42f3ec:	bl	40bdd0 <strv_consume@plt>
  42f3f0:	tbnz	w0, #31, 42f4e0 <config_parse_match_property+0x248>
  42f3f4:	ldr	x0, [sp, #16]
  42f3f8:	bl	40a320 <free@plt>
  42f3fc:	sub	x0, x29, #0x8
  42f400:	add	x1, sp, #0x10
  42f404:	mov	w3, #0xa                   	// #10
  42f408:	mov	x2, xzr
  42f40c:	str	xzr, [sp, #16]
  42f410:	bl	40bdc0 <extract_first_word@plt>
  42f414:	mov	w27, w0
  42f418:	cbz	w0, 42f500 <config_parse_match_property+0x268>
  42f41c:	cmn	w27, #0xc
  42f420:	b.eq	42f4c8 <config_parse_match_property+0x230>  // b.none
  42f424:	tbnz	w27, #31, 42f474 <config_parse_match_property+0x1dc>
  42f428:	ldr	x0, [sp, #16]
  42f42c:	bl	40bdf0 <env_assignment_is_valid@plt>
  42f430:	tbnz	w0, #0, 42f3e0 <config_parse_match_property+0x148>
  42f434:	mov	w0, wzr
  42f438:	bl	40a2c0 <log_get_max_level_realm@plt>
  42f43c:	cmp	w0, #0x3
  42f440:	b.lt	42f3f4 <config_parse_match_property+0x15c>  // b.tstop
  42f444:	ldr	x8, [sp, #16]
  42f448:	mov	w1, #0x3                   	// #3
  42f44c:	mov	w6, #0x19c                 	// #412
  42f450:	mov	x0, x21
  42f454:	mov	x2, x20
  42f458:	mov	w3, w19
  42f45c:	mov	w4, wzr
  42f460:	mov	x5, x24
  42f464:	mov	x7, x25
  42f468:	stp	x26, x8, [sp]
  42f46c:	bl	40b770 <log_syntax_internal@plt>
  42f470:	b	42f3f4 <config_parse_match_property+0x15c>
  42f474:	mov	w0, wzr
  42f478:	bl	40a2c0 <log_get_max_level_realm@plt>
  42f47c:	cmp	w0, #0x3
  42f480:	mov	w27, wzr
  42f484:	b.lt	42f500 <config_parse_match_property+0x268>  // b.tstop
  42f488:	adrp	x8, 43f000 <worker_hash_op+0xadf8>
  42f48c:	adrp	x5, 43f000 <worker_hash_op+0xadf8>
  42f490:	adrp	x7, 43f000 <worker_hash_op+0xadf8>
  42f494:	add	x8, x8, #0xd2c
  42f498:	add	x5, x5, #0xa9a
  42f49c:	add	x7, x7, #0xefc
  42f4a0:	mov	w1, #0x3                   	// #3
  42f4a4:	mov	w6, #0x196                 	// #406
  42f4a8:	mov	x0, x21
  42f4ac:	mov	x2, x20
  42f4b0:	mov	w3, w19
  42f4b4:	mov	w4, wzr
  42f4b8:	stp	x8, x22, [sp]
  42f4bc:	bl	40b770 <log_syntax_internal@plt>
  42f4c0:	mov	w27, wzr
  42f4c4:	b	42f500 <config_parse_match_property+0x268>
  42f4c8:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42f4cc:	adrp	x3, 43f000 <worker_hash_op+0xadf8>
  42f4d0:	add	x1, x1, #0xa9a
  42f4d4:	add	x3, x3, #0xefc
  42f4d8:	mov	w2, #0x193                 	// #403
  42f4dc:	b	42f4f4 <config_parse_match_property+0x25c>
  42f4e0:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42f4e4:	adrp	x3, 43f000 <worker_hash_op+0xadf8>
  42f4e8:	add	x1, x1, #0xa9a
  42f4ec:	add	x3, x3, #0xefc
  42f4f0:	mov	w2, #0x1a9                 	// #425
  42f4f4:	mov	w0, wzr
  42f4f8:	bl	40a330 <log_oom_internal@plt>
  42f4fc:	mov	w27, w0
  42f500:	ldr	x0, [sp, #16]
  42f504:	bl	40a320 <free@plt>
  42f508:	mov	w0, w27
  42f50c:	ldp	x20, x19, [sp, #112]
  42f510:	ldp	x22, x21, [sp, #96]
  42f514:	ldp	x24, x23, [sp, #80]
  42f518:	ldp	x26, x25, [sp, #64]
  42f51c:	ldp	x28, x27, [sp, #48]
  42f520:	ldp	x29, x30, [sp, #32]
  42f524:	add	sp, sp, #0x80
  42f528:	ret
  42f52c:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42f530:	adrp	x3, 43f000 <worker_hash_op+0xadf8>
  42f534:	add	x1, x1, #0xa9a
  42f538:	add	x3, x3, #0xefc
  42f53c:	mov	w2, #0x1a3                 	// #419
  42f540:	b	42f4f8 <config_parse_match_property+0x260>
  42f544:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  42f548:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  42f54c:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42f550:	add	x1, x1, #0xdd9
  42f554:	add	x2, x2, #0xa9a
  42f558:	add	x4, x4, #0xe65
  42f55c:	mov	w3, #0x184                 	// #388
  42f560:	mov	w0, wzr
  42f564:	bl	40a630 <log_assert_failed_realm@plt>
  42f568:	adrp	x1, 43e000 <worker_hash_op+0x9df8>
  42f56c:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  42f570:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42f574:	add	x1, x1, #0x4e9
  42f578:	add	x2, x2, #0xa9a
  42f57c:	add	x4, x4, #0xe65
  42f580:	mov	w3, #0x185                 	// #389
  42f584:	mov	w0, wzr
  42f588:	bl	40a630 <log_assert_failed_realm@plt>
  42f58c:	adrp	x1, 43e000 <worker_hash_op+0x9df8>
  42f590:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  42f594:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42f598:	add	x1, x1, #0x4f0
  42f59c:	add	x2, x2, #0xa9a
  42f5a0:	add	x4, x4, #0xe65
  42f5a4:	mov	w3, #0x186                 	// #390
  42f5a8:	mov	w0, wzr
  42f5ac:	bl	40a630 <log_assert_failed_realm@plt>
  42f5b0:	adrp	x1, 438000 <worker_hash_op+0x3df8>
  42f5b4:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  42f5b8:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42f5bc:	add	x1, x1, #0x479
  42f5c0:	add	x2, x2, #0xa9a
  42f5c4:	add	x4, x4, #0xe65
  42f5c8:	mov	w3, #0x187                 	// #391
  42f5cc:	mov	w0, wzr
  42f5d0:	bl	40a630 <log_assert_failed_realm@plt>

000000000042f5d4 <config_parse_ifalias>:
  42f5d4:	sub	sp, sp, #0x50
  42f5d8:	stp	x29, x30, [sp, #16]
  42f5dc:	stp	x24, x23, [sp, #32]
  42f5e0:	stp	x22, x21, [sp, #48]
  42f5e4:	stp	x20, x19, [sp, #64]
  42f5e8:	add	x29, sp, #0x10
  42f5ec:	cbz	x1, 42f6fc <config_parse_ifalias+0x128>
  42f5f0:	cbz	x5, 42f720 <config_parse_ifalias+0x14c>
  42f5f4:	mov	x23, x7
  42f5f8:	cbz	x7, 42f744 <config_parse_ifalias+0x170>
  42f5fc:	ldr	x24, [x29, #64]
  42f600:	cbz	x24, 42f768 <config_parse_ifalias+0x194>
  42f604:	mov	x22, x0
  42f608:	mov	x0, x23
  42f60c:	mov	w20, w2
  42f610:	mov	x21, x1
  42f614:	bl	40a810 <strdup@plt>
  42f618:	mov	x19, x0
  42f61c:	cbz	x0, 42f68c <config_parse_ifalias+0xb8>
  42f620:	mov	x0, x19
  42f624:	bl	40be00 <ascii_is_valid@plt>
  42f628:	cbz	x0, 42f63c <config_parse_ifalias+0x68>
  42f62c:	mov	x0, x19
  42f630:	bl	40aa40 <strlen@plt>
  42f634:	cmp	x0, #0x100
  42f638:	b.cc	42f6b4 <config_parse_ifalias+0xe0>  // b.lo, b.ul, b.last
  42f63c:	mov	w0, wzr
  42f640:	bl	40a2c0 <log_get_max_level_realm@plt>
  42f644:	cmp	w0, #0x3
  42f648:	b.lt	42f6ac <config_parse_ifalias+0xd8>  // b.tstop
  42f64c:	adrp	x8, 43f000 <worker_hash_op+0xadf8>
  42f650:	adrp	x5, 43f000 <worker_hash_op+0xadf8>
  42f654:	adrp	x7, 43f000 <worker_hash_op+0xadf8>
  42f658:	add	x8, x8, #0xff0
  42f65c:	add	x5, x5, #0xa9a
  42f660:	add	x7, x7, #0xfdb
  42f664:	mov	w1, #0x3                   	// #3
  42f668:	mov	w6, #0x1c5                 	// #453
  42f66c:	mov	x0, x22
  42f670:	mov	x2, x21
  42f674:	mov	w3, w20
  42f678:	mov	w4, wzr
  42f67c:	stp	x8, x23, [sp]
  42f680:	bl	40b770 <log_syntax_internal@plt>
  42f684:	mov	w20, wzr
  42f688:	b	42f6d8 <config_parse_ifalias+0x104>
  42f68c:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42f690:	adrp	x3, 43f000 <worker_hash_op+0xadf8>
  42f694:	add	x1, x1, #0xa9a
  42f698:	add	x3, x3, #0xfdb
  42f69c:	mov	w2, #0x1c2                 	// #450
  42f6a0:	bl	40a330 <log_oom_internal@plt>
  42f6a4:	mov	w20, w0
  42f6a8:	b	42f6d8 <config_parse_ifalias+0x104>
  42f6ac:	mov	w20, wzr
  42f6b0:	b	42f6d8 <config_parse_ifalias+0x104>
  42f6b4:	ldr	x0, [x24]
  42f6b8:	ldrb	w20, [x19]
  42f6bc:	bl	40a320 <free@plt>
  42f6c0:	cbz	w20, 42f6d4 <config_parse_ifalias+0x100>
  42f6c4:	mov	w20, wzr
  42f6c8:	str	x19, [x24]
  42f6cc:	mov	x19, xzr
  42f6d0:	b	42f6d8 <config_parse_ifalias+0x104>
  42f6d4:	str	xzr, [x24]
  42f6d8:	mov	x0, x19
  42f6dc:	bl	40a320 <free@plt>
  42f6e0:	mov	w0, w20
  42f6e4:	ldp	x20, x19, [sp, #64]
  42f6e8:	ldp	x22, x21, [sp, #48]
  42f6ec:	ldp	x24, x23, [sp, #32]
  42f6f0:	ldp	x29, x30, [sp, #16]
  42f6f4:	add	sp, sp, #0x50
  42f6f8:	ret
  42f6fc:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  42f700:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  42f704:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42f708:	add	x1, x1, #0xdd9
  42f70c:	add	x2, x2, #0xa9a
  42f710:	add	x4, x4, #0xf4b
  42f714:	mov	w3, #0x1bb                 	// #443
  42f718:	mov	w0, wzr
  42f71c:	bl	40a630 <log_assert_failed_realm@plt>
  42f720:	adrp	x1, 43e000 <worker_hash_op+0x9df8>
  42f724:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  42f728:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42f72c:	add	x1, x1, #0x4e9
  42f730:	add	x2, x2, #0xa9a
  42f734:	add	x4, x4, #0xf4b
  42f738:	mov	w3, #0x1bc                 	// #444
  42f73c:	mov	w0, wzr
  42f740:	bl	40a630 <log_assert_failed_realm@plt>
  42f744:	adrp	x1, 43e000 <worker_hash_op+0x9df8>
  42f748:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  42f74c:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42f750:	add	x1, x1, #0x4f0
  42f754:	add	x2, x2, #0xa9a
  42f758:	add	x4, x4, #0xf4b
  42f75c:	mov	w3, #0x1bd                 	// #445
  42f760:	mov	w0, wzr
  42f764:	bl	40a630 <log_assert_failed_realm@plt>
  42f768:	adrp	x1, 438000 <worker_hash_op+0x3df8>
  42f76c:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  42f770:	adrp	x4, 43f000 <worker_hash_op+0xadf8>
  42f774:	add	x1, x1, #0x479
  42f778:	add	x2, x2, #0xa9a
  42f77c:	add	x4, x4, #0xf4b
  42f780:	mov	w3, #0x1be                 	// #446
  42f784:	mov	w0, wzr
  42f788:	bl	40a630 <log_assert_failed_realm@plt>

000000000042f78c <config_parse_hwaddr>:
  42f78c:	sub	sp, sp, #0x60
  42f790:	stp	x29, x30, [sp, #16]
  42f794:	str	x25, [sp, #32]
  42f798:	stp	x24, x23, [sp, #48]
  42f79c:	stp	x22, x21, [sp, #64]
  42f7a0:	stp	x20, x19, [sp, #80]
  42f7a4:	add	x29, sp, #0x10
  42f7a8:	cbz	x1, 42f8a0 <config_parse_hwaddr+0x114>
  42f7ac:	cbz	x5, 42f8c4 <config_parse_hwaddr+0x138>
  42f7b0:	mov	x23, x7
  42f7b4:	cbz	x7, 42f8e8 <config_parse_hwaddr+0x15c>
  42f7b8:	ldr	x25, [x29, #80]
  42f7bc:	cbz	x25, 42f90c <config_parse_hwaddr+0x180>
  42f7c0:	mov	x21, x1
  42f7c4:	mov	x22, x0
  42f7c8:	mov	w0, #0x1                   	// #1
  42f7cc:	mov	w1, #0x6                   	// #6
  42f7d0:	mov	w20, w2
  42f7d4:	bl	40b650 <calloc@plt>
  42f7d8:	mov	x19, x0
  42f7dc:	cbz	x0, 42f808 <config_parse_hwaddr+0x7c>
  42f7e0:	mov	x0, x23
  42f7e4:	mov	x1, x19
  42f7e8:	bl	40be10 <ether_addr_from_string@plt>
  42f7ec:	tbnz	w0, #31, 42f828 <config_parse_hwaddr+0x9c>
  42f7f0:	ldr	x0, [x25]
  42f7f4:	bl	40a320 <free@plt>
  42f7f8:	mov	w20, wzr
  42f7fc:	str	x19, [x25]
  42f800:	mov	x19, xzr
  42f804:	b	42f878 <config_parse_hwaddr+0xec>
  42f808:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42f80c:	adrp	x3, 440000 <worker_hash_op+0xbdf8>
  42f810:	add	x1, x1, #0xa9a
  42f814:	add	x3, x3, #0xca
  42f818:	mov	w2, #0x1e7                 	// #487
  42f81c:	bl	40a330 <log_oom_internal@plt>
  42f820:	mov	w20, w0
  42f824:	b	42f878 <config_parse_hwaddr+0xec>
  42f828:	mov	w24, w0
  42f82c:	mov	w0, wzr
  42f830:	bl	40a2c0 <log_get_max_level_realm@plt>
  42f834:	cmp	w0, #0x3
  42f838:	b.lt	42f874 <config_parse_hwaddr+0xe8>  // b.tstop
  42f83c:	adrp	x8, 440000 <worker_hash_op+0xbdf8>
  42f840:	adrp	x5, 43f000 <worker_hash_op+0xadf8>
  42f844:	adrp	x7, 440000 <worker_hash_op+0xbdf8>
  42f848:	add	x8, x8, #0xde
  42f84c:	add	x5, x5, #0xa9a
  42f850:	add	x7, x7, #0xca
  42f854:	mov	w1, #0x3                   	// #3
  42f858:	mov	w6, #0x1eb                 	// #491
  42f85c:	mov	x0, x22
  42f860:	mov	x2, x21
  42f864:	mov	w3, w20
  42f868:	mov	w4, w24
  42f86c:	stp	x8, x23, [sp]
  42f870:	bl	40b770 <log_syntax_internal@plt>
  42f874:	mov	w20, wzr
  42f878:	mov	x0, x19
  42f87c:	bl	40a320 <free@plt>
  42f880:	mov	w0, w20
  42f884:	ldp	x20, x19, [sp, #80]
  42f888:	ldp	x22, x21, [sp, #64]
  42f88c:	ldp	x24, x23, [sp, #48]
  42f890:	ldr	x25, [sp, #32]
  42f894:	ldp	x29, x30, [sp, #16]
  42f898:	add	sp, sp, #0x60
  42f89c:	ret
  42f8a0:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  42f8a4:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  42f8a8:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  42f8ac:	add	x1, x1, #0xdd9
  42f8b0:	add	x2, x2, #0xa9a
  42f8b4:	add	x4, x4, #0x3b
  42f8b8:	mov	w3, #0x1e0                 	// #480
  42f8bc:	mov	w0, wzr
  42f8c0:	bl	40a630 <log_assert_failed_realm@plt>
  42f8c4:	adrp	x1, 43e000 <worker_hash_op+0x9df8>
  42f8c8:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  42f8cc:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  42f8d0:	add	x1, x1, #0x4e9
  42f8d4:	add	x2, x2, #0xa9a
  42f8d8:	add	x4, x4, #0x3b
  42f8dc:	mov	w3, #0x1e1                 	// #481
  42f8e0:	mov	w0, wzr
  42f8e4:	bl	40a630 <log_assert_failed_realm@plt>
  42f8e8:	adrp	x1, 43e000 <worker_hash_op+0x9df8>
  42f8ec:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  42f8f0:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  42f8f4:	add	x1, x1, #0x4f0
  42f8f8:	add	x2, x2, #0xa9a
  42f8fc:	add	x4, x4, #0x3b
  42f900:	mov	w3, #0x1e2                 	// #482
  42f904:	mov	w0, wzr
  42f908:	bl	40a630 <log_assert_failed_realm@plt>
  42f90c:	adrp	x1, 438000 <worker_hash_op+0x3df8>
  42f910:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  42f914:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  42f918:	add	x1, x1, #0x479
  42f91c:	add	x2, x2, #0xa9a
  42f920:	add	x4, x4, #0x3b
  42f924:	mov	w3, #0x1e3                 	// #483
  42f928:	mov	w0, wzr
  42f92c:	bl	40a630 <log_assert_failed_realm@plt>

000000000042f930 <config_parse_hwaddrs>:
  42f930:	sub	sp, sp, #0x80
  42f934:	stp	x29, x30, [sp, #32]
  42f938:	add	x29, sp, #0x20
  42f93c:	stp	x28, x27, [sp, #48]
  42f940:	stp	x26, x25, [sp, #64]
  42f944:	stp	x24, x23, [sp, #80]
  42f948:	stp	x22, x21, [sp, #96]
  42f94c:	stp	x20, x19, [sp, #112]
  42f950:	stur	x7, [x29, #-8]
  42f954:	cbz	x1, 42fc10 <config_parse_hwaddrs+0x2e0>
  42f958:	cbz	x5, 42fc34 <config_parse_hwaddrs+0x304>
  42f95c:	mov	x23, x7
  42f960:	cbz	x7, 42fc58 <config_parse_hwaddrs+0x328>
  42f964:	ldr	x24, [x29, #96]
  42f968:	cbz	x24, 42fc7c <config_parse_hwaddrs+0x34c>
  42f96c:	ldrb	w8, [x23]
  42f970:	cbz	w8, 42fa64 <config_parse_hwaddrs+0x134>
  42f974:	mov	x22, x0
  42f978:	adrp	x0, 46f000 <_DYNAMIC+0x208>
  42f97c:	ldr	x0, [x0, #272]
  42f980:	mov	w20, w2
  42f984:	mov	x21, x1
  42f988:	bl	40bae0 <internal_set_new@plt>
  42f98c:	cbz	x0, 42fa84 <config_parse_hwaddrs+0x154>
  42f990:	adrp	x28, 440000 <worker_hash_op+0xbdf8>
  42f994:	adrp	x25, 43f000 <worker_hash_op+0xadf8>
  42f998:	adrp	x26, 440000 <worker_hash_op+0xbdf8>
  42f99c:	mov	x19, x0
  42f9a0:	add	x28, x28, #0x1b4
  42f9a4:	add	x25, x25, #0xa9a
  42f9a8:	add	x26, x26, #0x19f
  42f9ac:	b	42f9d8 <config_parse_hwaddrs+0xa8>
  42f9b0:	mov	x0, x19
  42f9b4:	mov	x1, x27
  42f9b8:	bl	40be20 <set_put@plt>
  42f9bc:	tbnz	w0, #31, 42fb10 <config_parse_hwaddrs+0x1e0>
  42f9c0:	cmp	w0, #0x0
  42f9c4:	csel	x27, x27, xzr, eq  // eq = none
  42f9c8:	mov	x0, x27
  42f9cc:	bl	40a320 <free@plt>
  42f9d0:	ldr	x0, [sp, #16]
  42f9d4:	bl	40a320 <free@plt>
  42f9d8:	sub	x0, x29, #0x8
  42f9dc:	add	x1, sp, #0x10
  42f9e0:	mov	x2, xzr
  42f9e4:	mov	w3, wzr
  42f9e8:	str	xzr, [sp, #16]
  42f9ec:	bl	40bdc0 <extract_first_word@plt>
  42f9f0:	cbz	w0, 42fb34 <config_parse_hwaddrs+0x204>
  42f9f4:	mov	w27, w0
  42f9f8:	cmn	w0, #0xc
  42f9fc:	b.eq	42fb68 <config_parse_hwaddrs+0x238>  // b.none
  42fa00:	tbnz	w27, #31, 42faa4 <config_parse_hwaddrs+0x174>
  42fa04:	mov	w0, #0x6                   	// #6
  42fa08:	bl	40a490 <malloc@plt>
  42fa0c:	mov	x27, x0
  42fa10:	cbz	x0, 42faf8 <config_parse_hwaddrs+0x1c8>
  42fa14:	ldr	x0, [sp, #16]
  42fa18:	mov	x1, x27
  42fa1c:	bl	40be10 <ether_addr_from_string@plt>
  42fa20:	tbz	w0, #31, 42f9b0 <config_parse_hwaddrs+0x80>
  42fa24:	mov	w0, wzr
  42fa28:	bl	40a2c0 <log_get_max_level_realm@plt>
  42fa2c:	cmp	w0, #0x3
  42fa30:	b.lt	42f9c8 <config_parse_hwaddrs+0x98>  // b.tstop
  42fa34:	ldr	x8, [sp, #16]
  42fa38:	mov	w1, #0x3                   	// #3
  42fa3c:	mov	w6, #0x227                 	// #551
  42fa40:	mov	x0, x22
  42fa44:	mov	x2, x21
  42fa48:	mov	w3, w20
  42fa4c:	mov	w4, wzr
  42fa50:	mov	x5, x25
  42fa54:	mov	x7, x26
  42fa58:	stp	x28, x8, [sp]
  42fa5c:	bl	40b770 <log_syntax_internal@plt>
  42fa60:	b	42f9c8 <config_parse_hwaddrs+0x98>
  42fa64:	adrp	x1, 46f000 <_DYNAMIC+0x208>
  42fa68:	ldr	x0, [x24]
  42fa6c:	ldr	x1, [x1, #120]
  42fa70:	mov	x2, xzr
  42fa74:	bl	40a650 <internal_hashmap_free@plt>
  42fa78:	mov	w20, wzr
  42fa7c:	str	x0, [x24]
  42fa80:	b	42fbb0 <config_parse_hwaddrs+0x280>
  42fa84:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42fa88:	adrp	x3, 440000 <worker_hash_op+0xbdf8>
  42fa8c:	add	x1, x1, #0xa9a
  42fa90:	add	x3, x3, #0x19f
  42fa94:	mov	w2, #0x211                 	// #529
  42fa98:	bl	40a330 <log_oom_internal@plt>
  42fa9c:	mov	w20, w0
  42faa0:	b	42fbb0 <config_parse_hwaddrs+0x280>
  42faa4:	mov	w0, wzr
  42faa8:	bl	40a2c0 <log_get_max_level_realm@plt>
  42faac:	cmp	w0, #0x4
  42fab0:	b.lt	42faec <config_parse_hwaddrs+0x1bc>  // b.tstop
  42fab4:	adrp	x8, 43f000 <worker_hash_op+0xadf8>
  42fab8:	adrp	x5, 43f000 <worker_hash_op+0xadf8>
  42fabc:	adrp	x7, 440000 <worker_hash_op+0xbdf8>
  42fac0:	add	x8, x8, #0xd2c
  42fac4:	add	x5, x5, #0xa9a
  42fac8:	add	x7, x7, #0x19f
  42facc:	mov	w1, #0x4                   	// #4
  42fad0:	mov	w6, #0x21d                 	// #541
  42fad4:	mov	x0, x22
  42fad8:	mov	x2, x21
  42fadc:	mov	w3, w20
  42fae0:	mov	w4, w27
  42fae4:	stp	x8, x23, [sp]
  42fae8:	bl	40b770 <log_syntax_internal@plt>
  42faec:	mov	x27, xzr
  42faf0:	mov	w20, wzr
  42faf4:	b	42fb8c <config_parse_hwaddrs+0x25c>
  42faf8:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42fafc:	adrp	x3, 440000 <worker_hash_op+0xbdf8>
  42fb00:	add	x1, x1, #0xa9a
  42fb04:	add	x3, x3, #0x19f
  42fb08:	mov	w2, #0x223                 	// #547
  42fb0c:	b	42fb28 <config_parse_hwaddrs+0x1f8>
  42fb10:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42fb14:	adrp	x3, 440000 <worker_hash_op+0xbdf8>
  42fb18:	add	x1, x1, #0xa9a
  42fb1c:	add	x3, x3, #0x19f
  42fb20:	mov	w2, #0x22d                 	// #557
  42fb24:	mov	w0, wzr
  42fb28:	bl	40a330 <log_oom_internal@plt>
  42fb2c:	mov	w20, w0
  42fb30:	b	42fb8c <config_parse_hwaddrs+0x25c>
  42fb34:	ldr	x0, [sp, #16]
  42fb38:	bl	40a320 <free@plt>
  42fb3c:	adrp	x1, 46f000 <_DYNAMIC+0x208>
  42fb40:	ldr	x1, [x1, #272]
  42fb44:	mov	x0, x24
  42fb48:	bl	40be30 <internal_set_ensure_allocated@plt>
  42fb4c:	tbnz	w0, #31, 42fbd4 <config_parse_hwaddrs+0x2a4>
  42fb50:	ldr	x0, [x24]
  42fb54:	mov	x1, x19
  42fb58:	bl	40be40 <internal_hashmap_move@plt>
  42fb5c:	tbnz	w0, #31, 42fbec <config_parse_hwaddrs+0x2bc>
  42fb60:	mov	w20, wzr
  42fb64:	b	42fb9c <config_parse_hwaddrs+0x26c>
  42fb68:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42fb6c:	adrp	x3, 440000 <worker_hash_op+0xbdf8>
  42fb70:	add	x1, x1, #0xa9a
  42fb74:	add	x3, x3, #0x19f
  42fb78:	mov	w2, #0x21b                 	// #539
  42fb7c:	mov	w0, wzr
  42fb80:	bl	40a330 <log_oom_internal@plt>
  42fb84:	mov	w20, w0
  42fb88:	mov	x27, xzr
  42fb8c:	mov	x0, x27
  42fb90:	bl	40a320 <free@plt>
  42fb94:	ldr	x0, [sp, #16]
  42fb98:	bl	40a320 <free@plt>
  42fb9c:	adrp	x1, 46f000 <_DYNAMIC+0x208>
  42fba0:	ldr	x1, [x1, #120]
  42fba4:	mov	x0, x19
  42fba8:	mov	x2, xzr
  42fbac:	bl	40a650 <internal_hashmap_free@plt>
  42fbb0:	mov	w0, w20
  42fbb4:	ldp	x20, x19, [sp, #112]
  42fbb8:	ldp	x22, x21, [sp, #96]
  42fbbc:	ldp	x24, x23, [sp, #80]
  42fbc0:	ldp	x26, x25, [sp, #64]
  42fbc4:	ldp	x28, x27, [sp, #48]
  42fbc8:	ldp	x29, x30, [sp, #32]
  42fbcc:	add	sp, sp, #0x80
  42fbd0:	ret
  42fbd4:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42fbd8:	adrp	x3, 440000 <worker_hash_op+0xbdf8>
  42fbdc:	add	x1, x1, #0xa9a
  42fbe0:	add	x3, x3, #0x19f
  42fbe4:	mov	w2, #0x234                 	// #564
  42fbe8:	b	42fc00 <config_parse_hwaddrs+0x2d0>
  42fbec:	adrp	x1, 43f000 <worker_hash_op+0xadf8>
  42fbf0:	adrp	x3, 440000 <worker_hash_op+0xbdf8>
  42fbf4:	add	x1, x1, #0xa9a
  42fbf8:	add	x3, x3, #0x19f
  42fbfc:	mov	w2, #0x238                 	// #568
  42fc00:	mov	w0, wzr
  42fc04:	bl	40a330 <log_oom_internal@plt>
  42fc08:	mov	w20, w0
  42fc0c:	b	42fb9c <config_parse_hwaddrs+0x26c>
  42fc10:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  42fc14:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  42fc18:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  42fc1c:	add	x1, x1, #0xdd9
  42fc20:	add	x2, x2, #0xa9a
  42fc24:	add	x4, x4, #0x10f
  42fc28:	mov	w3, #0x204                 	// #516
  42fc2c:	mov	w0, wzr
  42fc30:	bl	40a630 <log_assert_failed_realm@plt>
  42fc34:	adrp	x1, 43e000 <worker_hash_op+0x9df8>
  42fc38:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  42fc3c:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  42fc40:	add	x1, x1, #0x4e9
  42fc44:	add	x2, x2, #0xa9a
  42fc48:	add	x4, x4, #0x10f
  42fc4c:	mov	w3, #0x205                 	// #517
  42fc50:	mov	w0, wzr
  42fc54:	bl	40a630 <log_assert_failed_realm@plt>
  42fc58:	adrp	x1, 43e000 <worker_hash_op+0x9df8>
  42fc5c:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  42fc60:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  42fc64:	add	x1, x1, #0x4f0
  42fc68:	add	x2, x2, #0xa9a
  42fc6c:	add	x4, x4, #0x10f
  42fc70:	mov	w3, #0x206                 	// #518
  42fc74:	mov	w0, wzr
  42fc78:	bl	40a630 <log_assert_failed_realm@plt>
  42fc7c:	adrp	x1, 438000 <worker_hash_op+0x3df8>
  42fc80:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  42fc84:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  42fc88:	add	x1, x1, #0x479
  42fc8c:	add	x2, x2, #0xa9a
  42fc90:	add	x4, x4, #0x10f
  42fc94:	mov	w3, #0x207                 	// #519
  42fc98:	mov	w0, wzr
  42fc9c:	bl	40a630 <log_assert_failed_realm@plt>

000000000042fca0 <config_parse_bridge_port_priority>:
  42fca0:	sub	sp, sp, #0x60
  42fca4:	stp	x29, x30, [sp, #32]
  42fca8:	stp	x24, x23, [sp, #48]
  42fcac:	stp	x22, x21, [sp, #64]
  42fcb0:	stp	x20, x19, [sp, #80]
  42fcb4:	add	x29, sp, #0x20
  42fcb8:	cbz	x1, 42fdb0 <config_parse_bridge_port_priority+0x110>
  42fcbc:	cbz	x5, 42fdd4 <config_parse_bridge_port_priority+0x134>
  42fcc0:	mov	x23, x7
  42fcc4:	cbz	x7, 42fdf8 <config_parse_bridge_port_priority+0x158>
  42fcc8:	ldr	x24, [x29, #64]
  42fccc:	cbz	x24, 42fe1c <config_parse_bridge_port_priority+0x17c>
  42fcd0:	mov	w19, w2
  42fcd4:	mov	x20, x1
  42fcd8:	mov	x21, x0
  42fcdc:	sub	x2, x29, #0x4
  42fce0:	mov	x0, x23
  42fce4:	mov	w1, wzr
  42fce8:	bl	40b4f0 <safe_atou16_full@plt>
  42fcec:	mov	w22, w0
  42fcf0:	tbnz	w0, #31, 42fd44 <config_parse_bridge_port_priority+0xa4>
  42fcf4:	ldurh	w8, [x29, #-4]
  42fcf8:	cmp	w8, #0x40
  42fcfc:	b.cc	42fd90 <config_parse_bridge_port_priority+0xf0>  // b.lo, b.ul, b.last
  42fd00:	mov	w0, wzr
  42fd04:	bl	40a2c0 <log_get_max_level_realm@plt>
  42fd08:	cmp	w0, #0x3
  42fd0c:	b.lt	42fd94 <config_parse_bridge_port_priority+0xf4>  // b.tstop
  42fd10:	adrp	x9, 440000 <worker_hash_op+0xbdf8>
  42fd14:	mov	w8, #0x3f                  	// #63
  42fd18:	add	x9, x9, #0x2cc
  42fd1c:	adrp	x5, 43f000 <worker_hash_op+0xadf8>
  42fd20:	adrp	x7, 440000 <worker_hash_op+0xbdf8>
  42fd24:	str	x23, [sp, #16]
  42fd28:	add	x5, x5, #0xa9a
  42fd2c:	add	x7, x7, #0x277
  42fd30:	str	w8, [sp, #8]
  42fd34:	mov	w1, #0x3                   	// #3
  42fd38:	mov	w6, #0x25a                 	// #602
  42fd3c:	str	x9, [sp]
  42fd40:	b	42fd78 <config_parse_bridge_port_priority+0xd8>
  42fd44:	mov	w0, wzr
  42fd48:	bl	40a2c0 <log_get_max_level_realm@plt>
  42fd4c:	cmp	w0, #0x3
  42fd50:	b.lt	42fd94 <config_parse_bridge_port_priority+0xf4>  // b.tstop
  42fd54:	adrp	x8, 440000 <worker_hash_op+0xbdf8>
  42fd58:	adrp	x5, 43f000 <worker_hash_op+0xadf8>
  42fd5c:	adrp	x7, 440000 <worker_hash_op+0xbdf8>
  42fd60:	add	x8, x8, #0x299
  42fd64:	add	x5, x5, #0xa9a
  42fd68:	add	x7, x7, #0x277
  42fd6c:	mov	w1, #0x3                   	// #3
  42fd70:	mov	w6, #0x254                 	// #596
  42fd74:	stp	x8, x23, [sp]
  42fd78:	mov	x0, x21
  42fd7c:	mov	x2, x20
  42fd80:	mov	w3, w19
  42fd84:	mov	w4, w22
  42fd88:	bl	40b770 <log_syntax_internal@plt>
  42fd8c:	b	42fd94 <config_parse_bridge_port_priority+0xf4>
  42fd90:	strh	w8, [x24]
  42fd94:	ldp	x20, x19, [sp, #80]
  42fd98:	ldp	x22, x21, [sp, #64]
  42fd9c:	ldp	x24, x23, [sp, #48]
  42fda0:	ldp	x29, x30, [sp, #32]
  42fda4:	mov	w0, wzr
  42fda8:	add	sp, sp, #0x60
  42fdac:	ret
  42fdb0:	adrp	x1, 43d000 <worker_hash_op+0x8df8>
  42fdb4:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  42fdb8:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  42fdbc:	add	x1, x1, #0xdd9
  42fdc0:	add	x2, x2, #0xa9a
  42fdc4:	add	x4, x4, #0x1da
  42fdc8:	mov	w3, #0x24c                 	// #588
  42fdcc:	mov	w0, wzr
  42fdd0:	bl	40a630 <log_assert_failed_realm@plt>
  42fdd4:	adrp	x1, 43e000 <worker_hash_op+0x9df8>
  42fdd8:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  42fddc:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  42fde0:	add	x1, x1, #0x4e9
  42fde4:	add	x2, x2, #0xa9a
  42fde8:	add	x4, x4, #0x1da
  42fdec:	mov	w3, #0x24d                 	// #589
  42fdf0:	mov	w0, wzr
  42fdf4:	bl	40a630 <log_assert_failed_realm@plt>
  42fdf8:	adrp	x1, 43e000 <worker_hash_op+0x9df8>
  42fdfc:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  42fe00:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  42fe04:	add	x1, x1, #0x4f0
  42fe08:	add	x2, x2, #0xa9a
  42fe0c:	add	x4, x4, #0x1da
  42fe10:	mov	w3, #0x24e                 	// #590
  42fe14:	mov	w0, wzr
  42fe18:	bl	40a630 <log_assert_failed_realm@plt>
  42fe1c:	adrp	x1, 438000 <worker_hash_op+0x3df8>
  42fe20:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  42fe24:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  42fe28:	add	x1, x1, #0x479
  42fe2c:	add	x2, x2, #0xa9a
  42fe30:	add	x4, x4, #0x1da
  42fe34:	mov	w3, #0x24f                 	// #591
  42fe38:	mov	w0, wzr
  42fe3c:	bl	40a630 <log_assert_failed_realm@plt>

000000000042fe40 <serialize_in_addrs>:
  42fe40:	sub	sp, sp, #0x50
  42fe44:	stp	x29, x30, [sp, #16]
  42fe48:	stp	x24, x23, [sp, #32]
  42fe4c:	stp	x22, x21, [sp, #48]
  42fe50:	stp	x20, x19, [sp, #64]
  42fe54:	add	x29, sp, #0x10
  42fe58:	cbz	x0, 42ff70 <serialize_in_addrs+0x130>
  42fe5c:	mov	x21, x1
  42fe60:	cbz	x1, 42ff90 <serialize_in_addrs+0x150>
  42fe64:	mov	x19, x2
  42fe68:	cbz	x2, 42fed4 <serialize_in_addrs+0x94>
  42fe6c:	mov	x22, x4
  42fe70:	mov	w24, w3
  42fe74:	mov	x20, x0
  42fe78:	cbz	x4, 42fedc <serialize_in_addrs+0x9c>
  42fe7c:	mov	x23, xzr
  42fe80:	b	42feb4 <serialize_in_addrs+0x74>
  42fe84:	mov	x2, sp
  42fe88:	mov	w0, #0x2                   	// #2
  42fe8c:	mov	w3, #0x10                  	// #16
  42fe90:	mov	x1, x21
  42fe94:	bl	40be50 <inet_ntop@plt>
  42fe98:	mov	x1, x20
  42fe9c:	bl	40be60 <fputs@plt>
  42fea0:	add	x23, x23, #0x1
  42fea4:	mov	w24, #0x1                   	// #1
  42fea8:	subs	x19, x19, #0x1
  42feac:	add	x21, x21, #0x4
  42feb0:	b.eq	42ff54 <serialize_in_addrs+0x114>  // b.none
  42feb4:	mov	x0, x21
  42feb8:	blr	x22
  42febc:	tbz	w0, #0, 42fea8 <serialize_in_addrs+0x68>
  42fec0:	tbz	w24, #0, 42fe84 <serialize_in_addrs+0x44>
  42fec4:	mov	w0, #0x20                  	// #32
  42fec8:	mov	x1, x20
  42fecc:	bl	40be70 <fputc@plt>
  42fed0:	b	42fe84 <serialize_in_addrs+0x44>
  42fed4:	mov	x23, xzr
  42fed8:	b	42ff54 <serialize_in_addrs+0x114>
  42fedc:	tbz	w24, #0, 42feec <serialize_in_addrs+0xac>
  42fee0:	mov	w0, #0x20                  	// #32
  42fee4:	mov	x1, x20
  42fee8:	bl	40be70 <fputc@plt>
  42feec:	mov	x2, sp
  42fef0:	mov	w0, #0x2                   	// #2
  42fef4:	mov	w3, #0x10                  	// #16
  42fef8:	mov	x1, x21
  42fefc:	bl	40be50 <inet_ntop@plt>
  42ff00:	mov	x1, x20
  42ff04:	bl	40be60 <fputs@plt>
  42ff08:	cmp	x19, #0x1
  42ff0c:	b.eq	42ff50 <serialize_in_addrs+0x110>  // b.none
  42ff10:	add	x21, x21, #0x4
  42ff14:	mov	w22, #0x1                   	// #1
  42ff18:	mov	w0, #0x20                  	// #32
  42ff1c:	mov	x1, x20
  42ff20:	bl	40be70 <fputc@plt>
  42ff24:	mov	x2, sp
  42ff28:	mov	w0, #0x2                   	// #2
  42ff2c:	mov	w3, #0x10                  	// #16
  42ff30:	mov	x1, x21
  42ff34:	bl	40be50 <inet_ntop@plt>
  42ff38:	mov	x1, x20
  42ff3c:	bl	40be60 <fputs@plt>
  42ff40:	add	x22, x22, #0x1
  42ff44:	cmp	x19, x22
  42ff48:	add	x21, x21, #0x4
  42ff4c:	b.ne	42ff18 <serialize_in_addrs+0xd8>  // b.any
  42ff50:	mov	x23, x19
  42ff54:	mov	x0, x23
  42ff58:	ldp	x20, x19, [sp, #64]
  42ff5c:	ldp	x22, x21, [sp, #48]
  42ff60:	ldp	x24, x23, [sp, #32]
  42ff64:	ldp	x29, x30, [sp, #16]
  42ff68:	add	sp, sp, #0x50
  42ff6c:	ret
  42ff70:	adrp	x1, 43a000 <worker_hash_op+0x5df8>
  42ff74:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  42ff78:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  42ff7c:	add	x1, x1, #0x230
  42ff80:	add	x2, x2, #0xa9a
  42ff84:	add	x4, x4, #0x309
  42ff88:	mov	w3, #0x26b                 	// #619
  42ff8c:	bl	40a630 <log_assert_failed_realm@plt>
  42ff90:	adrp	x1, 440000 <worker_hash_op+0xbdf8>
  42ff94:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  42ff98:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  42ff9c:	add	x1, x1, #0x375
  42ffa0:	add	x2, x2, #0xa9a
  42ffa4:	add	x4, x4, #0x309
  42ffa8:	mov	w3, #0x26c                 	// #620
  42ffac:	mov	w0, wzr
  42ffb0:	bl	40a630 <log_assert_failed_realm@plt>

000000000042ffb4 <deserialize_in_addrs>:
  42ffb4:	sub	sp, sp, #0x50
  42ffb8:	stp	x29, x30, [sp, #16]
  42ffbc:	add	x29, sp, #0x10
  42ffc0:	str	x23, [sp, #32]
  42ffc4:	stp	x22, x21, [sp, #48]
  42ffc8:	stp	x20, x19, [sp, #64]
  42ffcc:	str	x1, [x29, #24]
  42ffd0:	cbz	x0, 4300cc <deserialize_in_addrs+0x118>
  42ffd4:	cbz	x1, 4300ec <deserialize_in_addrs+0x138>
  42ffd8:	mov	x19, x0
  42ffdc:	add	x0, x29, #0x18
  42ffe0:	add	x1, sp, #0x8
  42ffe4:	mov	x2, xzr
  42ffe8:	mov	w3, wzr
  42ffec:	str	xzr, [sp, #8]
  42fff0:	bl	40bdc0 <extract_first_word@plt>
  42fff4:	mov	w22, w0
  42fff8:	tbnz	w0, #31, 430074 <deserialize_in_addrs+0xc0>
  42fffc:	mov	w20, wzr
  430000:	mov	x21, xzr
  430004:	cbz	w22, 43007c <deserialize_in_addrs+0xc8>
  430008:	add	w22, w20, #0x1
  43000c:	sxtw	x1, w22
  430010:	mov	w2, #0x4                   	// #4
  430014:	mov	x0, x21
  430018:	bl	40bc50 <reallocarray@plt>
  43001c:	cbz	x0, 430098 <deserialize_in_addrs+0xe4>
  430020:	ldr	x1, [sp, #8]
  430024:	mov	x23, x0
  430028:	add	x2, x0, w20, sxtw #2
  43002c:	mov	w0, #0x2                   	// #2
  430030:	bl	40be80 <inet_pton@plt>
  430034:	ldr	x8, [sp, #8]
  430038:	cmp	w0, #0x1
  43003c:	csel	w20, w20, w22, lt  // lt = tstop
  430040:	mov	x0, x8
  430044:	bl	40a320 <free@plt>
  430048:	add	x0, x29, #0x18
  43004c:	add	x1, sp, #0x8
  430050:	mov	x2, xzr
  430054:	mov	w3, wzr
  430058:	str	xzr, [sp, #8]
  43005c:	bl	40bdc0 <extract_first_word@plt>
  430060:	mov	w22, w0
  430064:	mov	x21, x23
  430068:	tbz	w0, #31, 430004 <deserialize_in_addrs+0x50>
  43006c:	mov	x21, x23
  430070:	b	43009c <deserialize_in_addrs+0xe8>
  430074:	mov	x21, xzr
  430078:	b	43009c <deserialize_in_addrs+0xe8>
  43007c:	ldr	x0, [sp, #8]
  430080:	bl	40a320 <free@plt>
  430084:	cmp	w20, #0x0
  430088:	csel	x8, x21, xzr, gt
  43008c:	csel	x21, xzr, x21, gt
  430090:	str	x8, [x19]
  430094:	b	4300a8 <deserialize_in_addrs+0xf4>
  430098:	mov	w22, #0xfffffff4            	// #-12
  43009c:	ldr	x0, [sp, #8]
  4300a0:	bl	40a320 <free@plt>
  4300a4:	mov	w20, w22
  4300a8:	mov	x0, x21
  4300ac:	bl	40a320 <free@plt>
  4300b0:	mov	w0, w20
  4300b4:	ldp	x20, x19, [sp, #64]
  4300b8:	ldp	x22, x21, [sp, #48]
  4300bc:	ldr	x23, [sp, #32]
  4300c0:	ldp	x29, x30, [sp, #16]
  4300c4:	add	sp, sp, #0x50
  4300c8:	ret
  4300cc:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  4300d0:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  4300d4:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  4300d8:	add	x1, x1, #0xfa2
  4300dc:	add	x2, x2, #0xa9a
  4300e0:	add	x4, x4, #0x37f
  4300e4:	mov	w3, #0x284                 	// #644
  4300e8:	bl	40a630 <log_assert_failed_realm@plt>
  4300ec:	adrp	x1, 440000 <worker_hash_op+0xbdf8>
  4300f0:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  4300f4:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  4300f8:	add	x1, x1, #0x3b9
  4300fc:	add	x2, x2, #0xa9a
  430100:	add	x4, x4, #0x37f
  430104:	mov	w3, #0x285                 	// #645
  430108:	mov	w0, wzr
  43010c:	bl	40a630 <log_assert_failed_realm@plt>

0000000000430110 <serialize_in6_addrs>:
  430110:	sub	sp, sp, #0x70
  430114:	stp	x29, x30, [sp, #48]
  430118:	stp	x24, x23, [sp, #64]
  43011c:	stp	x22, x21, [sp, #80]
  430120:	stp	x20, x19, [sp, #96]
  430124:	add	x29, sp, #0x30
  430128:	cbz	x0, 4301ac <serialize_in6_addrs+0x9c>
  43012c:	mov	x20, x1
  430130:	cbz	x1, 4301cc <serialize_in6_addrs+0xbc>
  430134:	mov	x19, x2
  430138:	cbz	x2, 4301f0 <serialize_in6_addrs+0xe0>
  43013c:	mov	x21, x0
  430140:	mov	x24, xzr
  430144:	sub	x22, x19, #0x1
  430148:	mov	w23, #0x1                   	// #1
  43014c:	b	430160 <serialize_in6_addrs+0x50>
  430150:	mov	w24, w23
  430154:	cmp	x24, x19
  430158:	add	w23, w23, #0x1
  43015c:	b.cs	430194 <serialize_in6_addrs+0x84>  // b.hs, b.nlast
  430160:	add	x1, x20, x24, lsl #4
  430164:	mov	x2, sp
  430168:	mov	w0, #0xa                   	// #10
  43016c:	mov	w3, #0x2e                  	// #46
  430170:	bl	40be50 <inet_ntop@plt>
  430174:	mov	x1, x21
  430178:	bl	40be60 <fputs@plt>
  43017c:	cmp	x22, x24
  430180:	b.ls	430150 <serialize_in6_addrs+0x40>  // b.plast
  430184:	mov	w0, #0x20                  	// #32
  430188:	mov	x1, x21
  43018c:	bl	40be70 <fputc@plt>
  430190:	b	430150 <serialize_in6_addrs+0x40>
  430194:	ldp	x20, x19, [sp, #96]
  430198:	ldp	x22, x21, [sp, #80]
  43019c:	ldp	x24, x23, [sp, #64]
  4301a0:	ldp	x29, x30, [sp, #48]
  4301a4:	add	sp, sp, #0x70
  4301a8:	ret
  4301ac:	adrp	x1, 43a000 <worker_hash_op+0x5df8>
  4301b0:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  4301b4:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  4301b8:	add	x1, x1, #0x230
  4301bc:	add	x2, x2, #0xa9a
  4301c0:	add	x4, x4, #0x3c0
  4301c4:	mov	w3, #0x2a7                 	// #679
  4301c8:	bl	40a630 <log_assert_failed_realm@plt>
  4301cc:	adrp	x1, 440000 <worker_hash_op+0xbdf8>
  4301d0:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  4301d4:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  4301d8:	add	x1, x1, #0x375
  4301dc:	add	x2, x2, #0xa9a
  4301e0:	add	x4, x4, #0x3c0
  4301e4:	mov	w3, #0x2a8                 	// #680
  4301e8:	mov	w0, wzr
  4301ec:	bl	40a630 <log_assert_failed_realm@plt>
  4301f0:	adrp	x1, 440000 <worker_hash_op+0xbdf8>
  4301f4:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  4301f8:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  4301fc:	add	x1, x1, #0x402
  430200:	add	x2, x2, #0xa9a
  430204:	add	x4, x4, #0x3c0
  430208:	mov	w3, #0x2a9                 	// #681
  43020c:	mov	w0, wzr
  430210:	bl	40a630 <log_assert_failed_realm@plt>

0000000000430214 <deserialize_in6_addrs>:
  430214:	sub	sp, sp, #0x50
  430218:	stp	x29, x30, [sp, #16]
  43021c:	add	x29, sp, #0x10
  430220:	str	x23, [sp, #32]
  430224:	stp	x22, x21, [sp, #48]
  430228:	stp	x20, x19, [sp, #64]
  43022c:	str	x1, [x29, #24]
  430230:	cbz	x0, 430324 <deserialize_in6_addrs+0x110>
  430234:	cbz	x1, 430344 <deserialize_in6_addrs+0x130>
  430238:	mov	x19, x0
  43023c:	add	x0, x29, #0x18
  430240:	add	x1, sp, #0x8
  430244:	mov	x2, xzr
  430248:	mov	w3, wzr
  43024c:	str	xzr, [sp, #8]
  430250:	bl	40bdc0 <extract_first_word@plt>
  430254:	mov	w22, w0
  430258:	tbnz	w0, #31, 4302d4 <deserialize_in6_addrs+0xc0>
  43025c:	mov	w20, wzr
  430260:	mov	x21, xzr
  430264:	cbz	w22, 4302dc <deserialize_in6_addrs+0xc8>
  430268:	add	w22, w20, #0x1
  43026c:	sxtw	x1, w22
  430270:	mov	w2, #0x10                  	// #16
  430274:	mov	x0, x21
  430278:	bl	40bc50 <reallocarray@plt>
  43027c:	cbz	x0, 4302f0 <deserialize_in6_addrs+0xdc>
  430280:	ldr	x1, [sp, #8]
  430284:	mov	x23, x0
  430288:	add	x2, x0, w20, sxtw #4
  43028c:	mov	w0, #0xa                   	// #10
  430290:	bl	40be80 <inet_pton@plt>
  430294:	ldr	x8, [sp, #8]
  430298:	cmp	w0, #0x1
  43029c:	csel	w20, w20, w22, lt  // lt = tstop
  4302a0:	mov	x0, x8
  4302a4:	bl	40a320 <free@plt>
  4302a8:	add	x0, x29, #0x18
  4302ac:	add	x1, sp, #0x8
  4302b0:	mov	x2, xzr
  4302b4:	mov	w3, wzr
  4302b8:	str	xzr, [sp, #8]
  4302bc:	bl	40bdc0 <extract_first_word@plt>
  4302c0:	mov	w22, w0
  4302c4:	mov	x21, x23
  4302c8:	tbz	w0, #31, 430264 <deserialize_in6_addrs+0x50>
  4302cc:	mov	x21, x23
  4302d0:	b	4302f4 <deserialize_in6_addrs+0xe0>
  4302d4:	mov	x21, xzr
  4302d8:	b	4302f4 <deserialize_in6_addrs+0xe0>
  4302dc:	ldr	x0, [sp, #8]
  4302e0:	bl	40a320 <free@plt>
  4302e4:	str	x21, [x19]
  4302e8:	mov	x21, xzr
  4302ec:	b	430300 <deserialize_in6_addrs+0xec>
  4302f0:	mov	w22, #0xfffffff4            	// #-12
  4302f4:	ldr	x0, [sp, #8]
  4302f8:	bl	40a320 <free@plt>
  4302fc:	mov	w20, w22
  430300:	mov	x0, x21
  430304:	bl	40a320 <free@plt>
  430308:	mov	w0, w20
  43030c:	ldp	x20, x19, [sp, #64]
  430310:	ldp	x22, x21, [sp, #48]
  430314:	ldr	x23, [sp, #32]
  430318:	ldp	x29, x30, [sp, #16]
  43031c:	add	sp, sp, #0x50
  430320:	ret
  430324:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  430328:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  43032c:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  430330:	add	x1, x1, #0xfa2
  430334:	add	x2, x2, #0xa9a
  430338:	add	x4, x4, #0x407
  43033c:	mov	w3, #0x2b9                 	// #697
  430340:	bl	40a630 <log_assert_failed_realm@plt>
  430344:	adrp	x1, 440000 <worker_hash_op+0xbdf8>
  430348:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  43034c:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  430350:	add	x1, x1, #0x3b9
  430354:	add	x2, x2, #0xa9a
  430358:	add	x4, x4, #0x407
  43035c:	mov	w3, #0x2ba                 	// #698
  430360:	mov	w0, wzr
  430364:	bl	40a630 <log_assert_failed_realm@plt>

0000000000430368 <serialize_dhcp_routes>:
  430368:	sub	sp, sp, #0x90
  43036c:	stp	x29, x30, [sp, #48]
  430370:	stp	x28, x27, [sp, #64]
  430374:	stp	x26, x25, [sp, #80]
  430378:	stp	x24, x23, [sp, #96]
  43037c:	stp	x22, x21, [sp, #112]
  430380:	stp	x20, x19, [sp, #128]
  430384:	add	x29, sp, #0x30
  430388:	cbz	x0, 43050c <serialize_dhcp_routes+0x1a4>
  43038c:	mov	x21, x2
  430390:	mov	x2, x1
  430394:	cbz	x1, 43052c <serialize_dhcp_routes+0x1c4>
  430398:	cbz	x21, 430550 <serialize_dhcp_routes+0x1e8>
  43039c:	mov	x20, x3
  4303a0:	cbz	x3, 430574 <serialize_dhcp_routes+0x20c>
  4303a4:	adrp	x1, 440000 <worker_hash_op+0xbdf8>
  4303a8:	add	x1, x1, #0x495
  4303ac:	mov	x19, x0
  4303b0:	bl	40b490 <fprintf@plt>
  4303b4:	adrp	x22, 440000 <worker_hash_op+0xbdf8>
  4303b8:	adrp	x27, 438000 <worker_hash_op+0x3df8>
  4303bc:	adrp	x28, 436000 <worker_hash_op+0x1df8>
  4303c0:	adrp	x23, 440000 <worker_hash_op+0xbdf8>
  4303c4:	mov	x26, xzr
  4303c8:	sub	x24, x20, #0x1
  4303cc:	mov	w25, #0x1                   	// #1
  4303d0:	add	x22, x22, #0x542
  4303d4:	add	x27, x27, #0xed8
  4303d8:	add	x28, x28, #0xb34
  4303dc:	add	x23, x23, #0x548
  4303e0:	ldr	x0, [x21, x26, lsl #3]
  4303e4:	add	x1, sp, #0x18
  4303e8:	bl	433df0 <sd_dhcp_route_get_destination>
  4303ec:	tbnz	w0, #31, 4304a0 <serialize_dhcp_routes+0x138>
  4303f0:	ldr	x0, [x21, x26, lsl #3]
  4303f4:	add	x1, sp, #0x10
  4303f8:	bl	433ee0 <sd_dhcp_route_get_gateway>
  4303fc:	tbnz	w0, #31, 4304c4 <serialize_dhcp_routes+0x15c>
  430400:	ldr	x0, [x21, x26, lsl #3]
  430404:	add	x1, sp, #0xc
  430408:	bl	433e68 <sd_dhcp_route_get_destination_prefix_length>
  43040c:	tbnz	w0, #31, 4304e8 <serialize_dhcp_routes+0x180>
  430410:	add	x1, sp, #0x18
  430414:	sub	x2, x29, #0x10
  430418:	mov	w0, #0x2                   	// #2
  43041c:	mov	w3, #0x10                  	// #16
  430420:	bl	40be50 <inet_ntop@plt>
  430424:	ldrb	w3, [sp, #12]
  430428:	mov	x2, x0
  43042c:	mov	x0, x19
  430430:	mov	x1, x22
  430434:	bl	40b490 <fprintf@plt>
  430438:	add	x1, sp, #0x10
  43043c:	sub	x2, x29, #0x10
  430440:	mov	w0, #0x2                   	// #2
  430444:	mov	w3, #0x10                  	// #16
  430448:	bl	40be50 <inet_ntop@plt>
  43044c:	cmp	x24, x26
  430450:	mov	x2, x0
  430454:	csel	x3, x28, x27, hi  // hi = pmore
  430458:	mov	x0, x19
  43045c:	mov	x1, x23
  430460:	bl	40b490 <fprintf@plt>
  430464:	mov	w26, w25
  430468:	cmp	x26, x20
  43046c:	add	w25, w25, #0x1
  430470:	b.cc	4303e0 <serialize_dhcp_routes+0x78>  // b.lo, b.ul, b.last
  430474:	mov	w0, #0xa                   	// #10
  430478:	mov	x1, x19
  43047c:	bl	40be70 <fputc@plt>
  430480:	ldp	x20, x19, [sp, #128]
  430484:	ldp	x22, x21, [sp, #112]
  430488:	ldp	x24, x23, [sp, #96]
  43048c:	ldp	x26, x25, [sp, #80]
  430490:	ldp	x28, x27, [sp, #64]
  430494:	ldp	x29, x30, [sp, #48]
  430498:	add	sp, sp, #0x90
  43049c:	ret
  4304a0:	adrp	x1, 440000 <worker_hash_op+0xbdf8>
  4304a4:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  4304a8:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  4304ac:	add	x1, x1, #0x499
  4304b0:	add	x2, x2, #0xa9a
  4304b4:	add	x4, x4, #0x443
  4304b8:	mov	w3, #0x2e8                 	// #744
  4304bc:	mov	w0, wzr
  4304c0:	bl	40a630 <log_assert_failed_realm@plt>
  4304c4:	adrp	x1, 440000 <worker_hash_op+0xbdf8>
  4304c8:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  4304cc:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  4304d0:	add	x1, x1, #0x4ce
  4304d4:	add	x2, x2, #0xa9a
  4304d8:	add	x4, x4, #0x443
  4304dc:	mov	w3, #0x2e9                 	// #745
  4304e0:	mov	w0, wzr
  4304e4:	bl	40a630 <log_assert_failed_realm@plt>
  4304e8:	adrp	x1, 440000 <worker_hash_op+0xbdf8>
  4304ec:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  4304f0:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  4304f4:	add	x1, x1, #0x4fd
  4304f8:	add	x2, x2, #0xa9a
  4304fc:	add	x4, x4, #0x443
  430500:	mov	w3, #0x2ea                 	// #746
  430504:	mov	w0, wzr
  430508:	bl	40a630 <log_assert_failed_realm@plt>
  43050c:	adrp	x1, 43a000 <worker_hash_op+0x5df8>
  430510:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  430514:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  430518:	add	x1, x1, #0x230
  43051c:	add	x2, x2, #0xa9a
  430520:	add	x4, x4, #0x443
  430524:	mov	w3, #0x2dc                 	// #732
  430528:	bl	40a630 <log_assert_failed_realm@plt>
  43052c:	adrp	x1, 434000 <__libc_csu_init+0x60>
  430530:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  430534:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  430538:	add	x1, x1, #0x88f
  43053c:	add	x2, x2, #0xa9a
  430540:	add	x4, x4, #0x443
  430544:	mov	w3, #0x2dd                 	// #733
  430548:	mov	w0, wzr
  43054c:	bl	40a630 <log_assert_failed_realm@plt>
  430550:	adrp	x1, 440000 <worker_hash_op+0xbdf8>
  430554:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  430558:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  43055c:	add	x1, x1, #0x48e
  430560:	add	x2, x2, #0xa9a
  430564:	add	x4, x4, #0x443
  430568:	mov	w3, #0x2de                 	// #734
  43056c:	mov	w0, wzr
  430570:	bl	40a630 <log_assert_failed_realm@plt>
  430574:	adrp	x1, 440000 <worker_hash_op+0xbdf8>
  430578:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  43057c:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  430580:	add	x1, x1, #0x402
  430584:	add	x2, x2, #0xa9a
  430588:	add	x4, x4, #0x443
  43058c:	mov	w3, #0x2df                 	// #735
  430590:	mov	w0, wzr
  430594:	bl	40a630 <log_assert_failed_realm@plt>

0000000000430598 <deserialize_dhcp_routes>:
  430598:	sub	sp, sp, #0x80
  43059c:	stp	x29, x30, [sp, #48]
  4305a0:	add	x29, sp, #0x30
  4305a4:	stp	x26, x25, [sp, #64]
  4305a8:	stp	x24, x23, [sp, #80]
  4305ac:	stp	x22, x21, [sp, #96]
  4305b0:	stp	x20, x19, [sp, #112]
  4305b4:	stp	xzr, x3, [x29, #-16]
  4305b8:	str	xzr, [sp, #24]
  4305bc:	cbz	x0, 430738 <deserialize_dhcp_routes+0x1a0>
  4305c0:	mov	x21, x1
  4305c4:	cbz	x1, 430758 <deserialize_dhcp_routes+0x1c0>
  4305c8:	mov	x20, x2
  4305cc:	cbz	x2, 43077c <deserialize_dhcp_routes+0x1e4>
  4305d0:	cbz	x3, 4307a0 <deserialize_dhcp_routes+0x208>
  4305d4:	mov	x19, x0
  4305d8:	sub	x0, x29, #0x8
  4305dc:	add	x1, sp, #0x10
  4305e0:	mov	x2, xzr
  4305e4:	mov	w3, wzr
  4305e8:	str	xzr, [sp, #16]
  4305ec:	bl	40bdc0 <extract_first_word@plt>
  4305f0:	mov	w22, w0
  4305f4:	tbnz	w0, #31, 430708 <deserialize_dhcp_routes+0x170>
  4305f8:	mov	x25, xzr
  4305fc:	mov	w26, #0xc                   	// #12
  430600:	b	43062c <deserialize_dhcp_routes+0x94>
  430604:	ldr	x0, [sp, #16]
  430608:	bl	40a320 <free@plt>
  43060c:	sub	x0, x29, #0x8
  430610:	add	x1, sp, #0x10
  430614:	mov	x2, xzr
  430618:	mov	w3, wzr
  43061c:	str	xzr, [sp, #16]
  430620:	bl	40bdc0 <extract_first_word@plt>
  430624:	mov	w22, w0
  430628:	tbnz	w0, #31, 430708 <deserialize_dhcp_routes+0x170>
  43062c:	cbz	w22, 4306dc <deserialize_dhcp_routes+0x144>
  430630:	add	x22, x25, #0x1
  430634:	sub	x0, x29, #0x10
  430638:	add	x1, sp, #0x18
  43063c:	mov	w3, #0xc                   	// #12
  430640:	mov	x2, x22
  430644:	bl	40bc80 <greedy_realloc@plt>
  430648:	cbz	x0, 430704 <deserialize_dhcp_routes+0x16c>
  43064c:	ldr	x24, [sp, #16]
  430650:	mov	w1, #0x2f                  	// #47
  430654:	mov	x0, x24
  430658:	bl	40a7d0 <strchr@plt>
  43065c:	cbz	x0, 430604 <deserialize_dhcp_routes+0x6c>
  430660:	strb	wzr, [x0]
  430664:	ldur	x8, [x29, #-16]
  430668:	mov	x23, x0
  43066c:	mov	x0, x24
  430670:	madd	x1, x25, x26, x8
  430674:	bl	40be90 <inet_aton@plt>
  430678:	cbz	w0, 430604 <deserialize_dhcp_routes+0x6c>
  43067c:	add	x24, x23, #0x1
  430680:	mov	w1, #0x2c                  	// #44
  430684:	mov	x0, x24
  430688:	bl	40a7d0 <strchr@plt>
  43068c:	cbz	x0, 430604 <deserialize_dhcp_routes+0x6c>
  430690:	mov	x23, x0
  430694:	strb	wzr, [x0]
  430698:	add	x2, sp, #0xc
  43069c:	mov	x0, x24
  4306a0:	mov	w1, wzr
  4306a4:	bl	40a2e0 <safe_atou_full@plt>
  4306a8:	tbnz	w0, #31, 430604 <deserialize_dhcp_routes+0x6c>
  4306ac:	ldr	w8, [sp, #12]
  4306b0:	cmp	w8, #0x20
  4306b4:	b.hi	430604 <deserialize_dhcp_routes+0x6c>  // b.pmore
  4306b8:	ldur	x9, [x29, #-16]
  4306bc:	add	x0, x23, #0x1
  4306c0:	madd	x9, x25, x26, x9
  4306c4:	add	x1, x9, #0x4
  4306c8:	strb	w8, [x9, #8]
  4306cc:	bl	40be90 <inet_aton@plt>
  4306d0:	cmp	w0, #0x0
  4306d4:	csel	x25, x25, x22, eq  // eq = none
  4306d8:	b	430604 <deserialize_dhcp_routes+0x6c>
  4306dc:	ldr	x0, [sp, #16]
  4306e0:	bl	40a320 <free@plt>
  4306e4:	str	x25, [x21]
  4306e8:	ldr	x8, [sp, #24]
  4306ec:	mov	x0, xzr
  4306f0:	str	x8, [x20]
  4306f4:	ldur	x8, [x29, #-16]
  4306f8:	stur	xzr, [x29, #-16]
  4306fc:	str	x8, [x19]
  430700:	b	430714 <deserialize_dhcp_routes+0x17c>
  430704:	mov	w22, #0xfffffff4            	// #-12
  430708:	ldr	x0, [sp, #16]
  43070c:	bl	40a320 <free@plt>
  430710:	ldur	x0, [x29, #-16]
  430714:	bl	40a320 <free@plt>
  430718:	mov	w0, w22
  43071c:	ldp	x20, x19, [sp, #112]
  430720:	ldp	x22, x21, [sp, #96]
  430724:	ldp	x24, x23, [sp, #80]
  430728:	ldp	x26, x25, [sp, #64]
  43072c:	ldp	x29, x30, [sp, #48]
  430730:	add	sp, sp, #0x80
  430734:	ret
  430738:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  43073c:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  430740:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  430744:	add	x1, x1, #0xfa2
  430748:	add	x2, x2, #0xa9a
  43074c:	add	x4, x4, #0x54e
  430750:	mov	w3, #0x2f7                 	// #759
  430754:	bl	40a630 <log_assert_failed_realm@plt>
  430758:	adrp	x1, 440000 <worker_hash_op+0xbdf8>
  43075c:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  430760:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  430764:	add	x1, x1, #0x5a5
  430768:	add	x2, x2, #0xa9a
  43076c:	add	x4, x4, #0x54e
  430770:	mov	w3, #0x2f8                 	// #760
  430774:	mov	w0, wzr
  430778:	bl	40a630 <log_assert_failed_realm@plt>
  43077c:	adrp	x1, 440000 <worker_hash_op+0xbdf8>
  430780:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  430784:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  430788:	add	x1, x1, #0x5ae
  43078c:	add	x2, x2, #0xa9a
  430790:	add	x4, x4, #0x54e
  430794:	mov	w3, #0x2f9                 	// #761
  430798:	mov	w0, wzr
  43079c:	bl	40a630 <log_assert_failed_realm@plt>
  4307a0:	adrp	x1, 440000 <worker_hash_op+0xbdf8>
  4307a4:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  4307a8:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  4307ac:	add	x1, x1, #0x3b9
  4307b0:	add	x2, x2, #0xa9a
  4307b4:	add	x4, x4, #0x54e
  4307b8:	mov	w3, #0x2fa                 	// #762
  4307bc:	mov	w0, wzr
  4307c0:	bl	40a630 <log_assert_failed_realm@plt>

00000000004307c4 <serialize_dhcp_option>:
  4307c4:	stp	x29, x30, [sp, #-48]!
  4307c8:	str	x21, [sp, #16]
  4307cc:	stp	x20, x19, [sp, #32]
  4307d0:	mov	x29, sp
  4307d4:	cbz	x0, 43083c <serialize_dhcp_option+0x78>
  4307d8:	mov	x19, x1
  4307dc:	cbz	x1, 43085c <serialize_dhcp_option+0x98>
  4307e0:	cbz	x2, 430880 <serialize_dhcp_option+0xbc>
  4307e4:	mov	x21, x0
  4307e8:	mov	x0, x2
  4307ec:	mov	x1, x3
  4307f0:	bl	40bea0 <hexmem@plt>
  4307f4:	mov	x20, x0
  4307f8:	cbz	x0, 43081c <serialize_dhcp_option+0x58>
  4307fc:	adrp	x1, 439000 <worker_hash_op+0x4df8>
  430800:	add	x1, x1, #0x665
  430804:	mov	x0, x21
  430808:	mov	x2, x19
  43080c:	mov	x3, x20
  430810:	bl	40b490 <fprintf@plt>
  430814:	mov	w19, wzr
  430818:	b	430820 <serialize_dhcp_option+0x5c>
  43081c:	mov	w19, #0xfffffff4            	// #-12
  430820:	mov	x0, x20
  430824:	bl	40a320 <free@plt>
  430828:	mov	w0, w19
  43082c:	ldp	x20, x19, [sp, #32]
  430830:	ldr	x21, [sp, #16]
  430834:	ldp	x29, x30, [sp], #48
  430838:	ret
  43083c:	adrp	x1, 43a000 <worker_hash_op+0x5df8>
  430840:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  430844:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  430848:	add	x1, x1, #0x230
  43084c:	add	x2, x2, #0xa9a
  430850:	add	x4, x4, #0x5bc
  430854:	mov	w3, #0x33a                 	// #826
  430858:	bl	40a630 <log_assert_failed_realm@plt>
  43085c:	adrp	x1, 434000 <__libc_csu_init+0x60>
  430860:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  430864:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  430868:	add	x1, x1, #0x88f
  43086c:	add	x2, x2, #0xa9a
  430870:	add	x4, x4, #0x5bc
  430874:	mov	w3, #0x33b                 	// #827
  430878:	mov	w0, wzr
  43087c:	bl	40a630 <log_assert_failed_realm@plt>
  430880:	adrp	x1, 438000 <worker_hash_op+0x3df8>
  430884:	adrp	x2, 43f000 <worker_hash_op+0xadf8>
  430888:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  43088c:	add	x1, x1, #0x479
  430890:	add	x2, x2, #0xa9a
  430894:	add	x4, x4, #0x5bc
  430898:	mov	w3, #0x33c                 	// #828
  43089c:	mov	w0, wzr
  4308a0:	bl	40a630 <log_assert_failed_realm@plt>

00000000004308a4 <sd_dhcp_lease_get_address>:
  4308a4:	stp	x29, x30, [sp, #-16]!
  4308a8:	mov	x29, sp
  4308ac:	cbz	x0, 4308d8 <sd_dhcp_lease_get_address+0x34>
  4308b0:	cbz	x1, 4308f8 <sd_dhcp_lease_get_address+0x54>
  4308b4:	ldr	w8, [x0, #16]
  4308b8:	cbz	w8, 4308cc <sd_dhcp_lease_get_address+0x28>
  4308bc:	mov	w0, wzr
  4308c0:	str	w8, [x1]
  4308c4:	ldp	x29, x30, [sp], #16
  4308c8:	ret
  4308cc:	mov	w0, #0xffffffc3            	// #-61
  4308d0:	ldp	x29, x30, [sp], #16
  4308d4:	ret
  4308d8:	adrp	x1, 440000 <worker_hash_op+0xbdf8>
  4308dc:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  4308e0:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  4308e4:	add	x1, x1, #0x64d
  4308e8:	add	x2, x2, #0x656
  4308ec:	add	x4, x4, #0x67d
  4308f0:	mov	w3, #0x22                  	// #34
  4308f4:	b	430918 <sd_dhcp_lease_get_address+0x74>
  4308f8:	adrp	x1, 440000 <worker_hash_op+0xbdf8>
  4308fc:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  430900:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  430904:	add	x1, x1, #0x6be
  430908:	add	x2, x2, #0x656
  43090c:	add	x4, x4, #0x67d
  430910:	mov	w3, #0x23                  	// #35
  430914:	mov	w0, wzr
  430918:	bl	40ac10 <log_assert_failed_return_realm@plt>
  43091c:	mov	w0, #0xffffffea            	// #-22
  430920:	ldp	x29, x30, [sp], #16
  430924:	ret

0000000000430928 <sd_dhcp_lease_get_broadcast>:
  430928:	stp	x29, x30, [sp, #-16]!
  43092c:	mov	x29, sp
  430930:	cbz	x0, 430964 <sd_dhcp_lease_get_broadcast+0x3c>
  430934:	cbz	x1, 430984 <sd_dhcp_lease_get_broadcast+0x5c>
  430938:	ldrb	w9, [x0, #36]
  43093c:	mov	x8, x0
  430940:	cbz	w9, 430958 <sd_dhcp_lease_get_broadcast+0x30>
  430944:	ldr	w8, [x8, #40]
  430948:	mov	w0, wzr
  43094c:	str	w8, [x1]
  430950:	ldp	x29, x30, [sp], #16
  430954:	ret
  430958:	mov	w0, #0xffffffc3            	// #-61
  43095c:	ldp	x29, x30, [sp], #16
  430960:	ret
  430964:	adrp	x1, 440000 <worker_hash_op+0xbdf8>
  430968:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  43096c:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  430970:	add	x1, x1, #0x64d
  430974:	add	x2, x2, #0x656
  430978:	add	x4, x4, #0x6c3
  43097c:	mov	w3, #0x2d                  	// #45
  430980:	b	4309a4 <sd_dhcp_lease_get_broadcast+0x7c>
  430984:	adrp	x1, 440000 <worker_hash_op+0xbdf8>
  430988:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  43098c:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  430990:	add	x1, x1, #0x6be
  430994:	add	x2, x2, #0x656
  430998:	add	x4, x4, #0x6c3
  43099c:	mov	w3, #0x2e                  	// #46
  4309a0:	mov	w0, wzr
  4309a4:	bl	40ac10 <log_assert_failed_return_realm@plt>
  4309a8:	mov	w0, #0xffffffea            	// #-22
  4309ac:	ldp	x29, x30, [sp], #16
  4309b0:	ret

00000000004309b4 <sd_dhcp_lease_get_lifetime>:
  4309b4:	stp	x29, x30, [sp, #-16]!
  4309b8:	mov	x29, sp
  4309bc:	cbz	x0, 4309e8 <sd_dhcp_lease_get_lifetime+0x34>
  4309c0:	cbz	x1, 430a08 <sd_dhcp_lease_get_lifetime+0x54>
  4309c4:	ldr	w8, [x0, #12]
  4309c8:	cbz	w8, 4309dc <sd_dhcp_lease_get_lifetime+0x28>
  4309cc:	mov	w0, wzr
  4309d0:	str	w8, [x1]
  4309d4:	ldp	x29, x30, [sp], #16
  4309d8:	ret
  4309dc:	mov	w0, #0xffffffc3            	// #-61
  4309e0:	ldp	x29, x30, [sp], #16
  4309e4:	ret
  4309e8:	adrp	x1, 440000 <worker_hash_op+0xbdf8>
  4309ec:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  4309f0:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  4309f4:	add	x1, x1, #0x64d
  4309f8:	add	x2, x2, #0x656
  4309fc:	add	x4, x4, #0x706
  430a00:	mov	w3, #0x38                  	// #56
  430a04:	b	430a28 <sd_dhcp_lease_get_lifetime+0x74>
  430a08:	adrp	x1, 440000 <worker_hash_op+0xbdf8>
  430a0c:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  430a10:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  430a14:	add	x1, x1, #0x742
  430a18:	add	x2, x2, #0x656
  430a1c:	add	x4, x4, #0x706
  430a20:	mov	w3, #0x39                  	// #57
  430a24:	mov	w0, wzr
  430a28:	bl	40ac10 <log_assert_failed_return_realm@plt>
  430a2c:	mov	w0, #0xffffffea            	// #-22
  430a30:	ldp	x29, x30, [sp], #16
  430a34:	ret

0000000000430a38 <sd_dhcp_lease_get_t1>:
  430a38:	stp	x29, x30, [sp, #-16]!
  430a3c:	mov	x29, sp
  430a40:	cbz	x0, 430a6c <sd_dhcp_lease_get_t1+0x34>
  430a44:	cbz	x1, 430a8c <sd_dhcp_lease_get_t1+0x54>
  430a48:	ldr	w8, [x0, #4]
  430a4c:	cbz	w8, 430a60 <sd_dhcp_lease_get_t1+0x28>
  430a50:	mov	w0, wzr
  430a54:	str	w8, [x1]
  430a58:	ldp	x29, x30, [sp], #16
  430a5c:	ret
  430a60:	mov	w0, #0xffffffc3            	// #-61
  430a64:	ldp	x29, x30, [sp], #16
  430a68:	ret
  430a6c:	adrp	x1, 440000 <worker_hash_op+0xbdf8>
  430a70:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  430a74:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  430a78:	add	x1, x1, #0x64d
  430a7c:	add	x2, x2, #0x656
  430a80:	add	x4, x4, #0x74b
  430a84:	mov	w3, #0x43                  	// #67
  430a88:	b	430aac <sd_dhcp_lease_get_t1+0x74>
  430a8c:	adrp	x1, 440000 <worker_hash_op+0xbdf8>
  430a90:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  430a94:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  430a98:	add	x1, x1, #0x781
  430a9c:	add	x2, x2, #0x656
  430aa0:	add	x4, x4, #0x74b
  430aa4:	mov	w3, #0x44                  	// #68
  430aa8:	mov	w0, wzr
  430aac:	bl	40ac10 <log_assert_failed_return_realm@plt>
  430ab0:	mov	w0, #0xffffffea            	// #-22
  430ab4:	ldp	x29, x30, [sp], #16
  430ab8:	ret

0000000000430abc <sd_dhcp_lease_get_t2>:
  430abc:	stp	x29, x30, [sp, #-16]!
  430ac0:	mov	x29, sp
  430ac4:	cbz	x0, 430af0 <sd_dhcp_lease_get_t2+0x34>
  430ac8:	cbz	x1, 430b10 <sd_dhcp_lease_get_t2+0x54>
  430acc:	ldr	w8, [x0, #8]
  430ad0:	cbz	w8, 430ae4 <sd_dhcp_lease_get_t2+0x28>
  430ad4:	mov	w0, wzr
  430ad8:	str	w8, [x1]
  430adc:	ldp	x29, x30, [sp], #16
  430ae0:	ret
  430ae4:	mov	w0, #0xffffffc3            	// #-61
  430ae8:	ldp	x29, x30, [sp], #16
  430aec:	ret
  430af0:	adrp	x1, 440000 <worker_hash_op+0xbdf8>
  430af4:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  430af8:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  430afc:	add	x1, x1, #0x64d
  430b00:	add	x2, x2, #0x656
  430b04:	add	x4, x4, #0x784
  430b08:	mov	w3, #0x4e                  	// #78
  430b0c:	b	430b30 <sd_dhcp_lease_get_t2+0x74>
  430b10:	adrp	x1, 440000 <worker_hash_op+0xbdf8>
  430b14:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  430b18:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  430b1c:	add	x1, x1, #0x7ba
  430b20:	add	x2, x2, #0x656
  430b24:	add	x4, x4, #0x784
  430b28:	mov	w3, #0x4f                  	// #79
  430b2c:	mov	w0, wzr
  430b30:	bl	40ac10 <log_assert_failed_return_realm@plt>
  430b34:	mov	w0, #0xffffffea            	// #-22
  430b38:	ldp	x29, x30, [sp], #16
  430b3c:	ret

0000000000430b40 <sd_dhcp_lease_get_mtu>:
  430b40:	stp	x29, x30, [sp, #-16]!
  430b44:	mov	x29, sp
  430b48:	cbz	x0, 430b74 <sd_dhcp_lease_get_mtu+0x34>
  430b4c:	cbz	x1, 430b94 <sd_dhcp_lease_get_mtu+0x54>
  430b50:	ldrh	w8, [x0, #136]
  430b54:	cbz	w8, 430b68 <sd_dhcp_lease_get_mtu+0x28>
  430b58:	mov	w0, wzr
  430b5c:	strh	w8, [x1]
  430b60:	ldp	x29, x30, [sp], #16
  430b64:	ret
  430b68:	mov	w0, #0xffffffc3            	// #-61
  430b6c:	ldp	x29, x30, [sp], #16
  430b70:	ret
  430b74:	adrp	x1, 440000 <worker_hash_op+0xbdf8>
  430b78:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  430b7c:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  430b80:	add	x1, x1, #0x64d
  430b84:	add	x2, x2, #0x656
  430b88:	add	x4, x4, #0x7bd
  430b8c:	mov	w3, #0x59                  	// #89
  430b90:	b	430bb4 <sd_dhcp_lease_get_mtu+0x74>
  430b94:	adrp	x1, 440000 <worker_hash_op+0xbdf8>
  430b98:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  430b9c:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  430ba0:	add	x1, x1, #0x7f4
  430ba4:	add	x2, x2, #0x656
  430ba8:	add	x4, x4, #0x7bd
  430bac:	mov	w3, #0x5a                  	// #90
  430bb0:	mov	w0, wzr
  430bb4:	bl	40ac10 <log_assert_failed_return_realm@plt>
  430bb8:	mov	w0, #0xffffffea            	// #-22
  430bbc:	ldp	x29, x30, [sp], #16
  430bc0:	ret

0000000000430bc4 <sd_dhcp_lease_get_dns>:
  430bc4:	stp	x29, x30, [sp, #-16]!
  430bc8:	mov	x29, sp
  430bcc:	cbz	x0, 430bfc <sd_dhcp_lease_get_dns+0x38>
  430bd0:	cbz	x1, 430c1c <sd_dhcp_lease_get_dns+0x58>
  430bd4:	mov	x8, x0
  430bd8:	ldr	x0, [x0, #72]
  430bdc:	cbz	x0, 430bf0 <sd_dhcp_lease_get_dns+0x2c>
  430be0:	ldr	x8, [x8, #64]
  430be4:	str	x8, [x1]
  430be8:	ldp	x29, x30, [sp], #16
  430bec:	ret
  430bf0:	mov	w0, #0xffffffc3            	// #-61
  430bf4:	ldp	x29, x30, [sp], #16
  430bf8:	ret
  430bfc:	adrp	x1, 440000 <worker_hash_op+0xbdf8>
  430c00:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  430c04:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  430c08:	add	x1, x1, #0x64d
  430c0c:	add	x2, x2, #0x656
  430c10:	add	x4, x4, #0x7f8
  430c14:	mov	w3, #0x64                  	// #100
  430c18:	b	430c3c <sd_dhcp_lease_get_dns+0x78>
  430c1c:	adrp	x1, 440000 <worker_hash_op+0xbdf8>
  430c20:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  430c24:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  430c28:	add	x1, x1, #0x6be
  430c2c:	add	x2, x2, #0x656
  430c30:	add	x4, x4, #0x7f8
  430c34:	mov	w3, #0x65                  	// #101
  430c38:	mov	w0, wzr
  430c3c:	bl	40ac10 <log_assert_failed_return_realm@plt>
  430c40:	mov	w0, #0xffffffea            	// #-22
  430c44:	ldp	x29, x30, [sp], #16
  430c48:	ret

0000000000430c4c <sd_dhcp_lease_get_ntp>:
  430c4c:	stp	x29, x30, [sp, #-16]!
  430c50:	mov	x29, sp
  430c54:	cbz	x0, 430c84 <sd_dhcp_lease_get_ntp+0x38>
  430c58:	cbz	x1, 430ca4 <sd_dhcp_lease_get_ntp+0x58>
  430c5c:	mov	x8, x0
  430c60:	ldr	x0, [x0, #88]
  430c64:	cbz	x0, 430c78 <sd_dhcp_lease_get_ntp+0x2c>
  430c68:	ldr	x8, [x8, #80]
  430c6c:	str	x8, [x1]
  430c70:	ldp	x29, x30, [sp], #16
  430c74:	ret
  430c78:	mov	w0, #0xffffffc3            	// #-61
  430c7c:	ldp	x29, x30, [sp], #16
  430c80:	ret
  430c84:	adrp	x1, 440000 <worker_hash_op+0xbdf8>
  430c88:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  430c8c:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  430c90:	add	x1, x1, #0x64d
  430c94:	add	x2, x2, #0x656
  430c98:	add	x4, x4, #0x83c
  430c9c:	mov	w3, #0x6f                  	// #111
  430ca0:	b	430cc4 <sd_dhcp_lease_get_ntp+0x78>
  430ca4:	adrp	x1, 440000 <worker_hash_op+0xbdf8>
  430ca8:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  430cac:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  430cb0:	add	x1, x1, #0x6be
  430cb4:	add	x2, x2, #0x656
  430cb8:	add	x4, x4, #0x83c
  430cbc:	mov	w3, #0x70                  	// #112
  430cc0:	mov	w0, wzr
  430cc4:	bl	40ac10 <log_assert_failed_return_realm@plt>
  430cc8:	mov	w0, #0xffffffea            	// #-22
  430ccc:	ldp	x29, x30, [sp], #16
  430cd0:	ret

0000000000430cd4 <sd_dhcp_lease_get_sip>:
  430cd4:	stp	x29, x30, [sp, #-16]!
  430cd8:	mov	x29, sp
  430cdc:	cbz	x0, 430d0c <sd_dhcp_lease_get_sip+0x38>
  430ce0:	cbz	x1, 430d2c <sd_dhcp_lease_get_sip+0x58>
  430ce4:	mov	x8, x0
  430ce8:	ldr	x0, [x0, #104]
  430cec:	cbz	x0, 430d00 <sd_dhcp_lease_get_sip+0x2c>
  430cf0:	ldr	x8, [x8, #96]
  430cf4:	str	x8, [x1]
  430cf8:	ldp	x29, x30, [sp], #16
  430cfc:	ret
  430d00:	mov	w0, #0xffffffc3            	// #-61
  430d04:	ldp	x29, x30, [sp], #16
  430d08:	ret
  430d0c:	adrp	x1, 440000 <worker_hash_op+0xbdf8>
  430d10:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  430d14:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  430d18:	add	x1, x1, #0x64d
  430d1c:	add	x2, x2, #0x656
  430d20:	add	x4, x4, #0x880
  430d24:	mov	w3, #0x7a                  	// #122
  430d28:	b	430d4c <sd_dhcp_lease_get_sip+0x78>
  430d2c:	adrp	x1, 440000 <worker_hash_op+0xbdf8>
  430d30:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  430d34:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  430d38:	add	x1, x1, #0x6be
  430d3c:	add	x2, x2, #0x656
  430d40:	add	x4, x4, #0x880
  430d44:	mov	w3, #0x7b                  	// #123
  430d48:	mov	w0, wzr
  430d4c:	bl	40ac10 <log_assert_failed_return_realm@plt>
  430d50:	mov	w0, #0xffffffea            	// #-22
  430d54:	ldp	x29, x30, [sp], #16
  430d58:	ret

0000000000430d5c <sd_dhcp_lease_get_domainname>:
  430d5c:	stp	x29, x30, [sp, #-16]!
  430d60:	mov	x29, sp
  430d64:	cbz	x0, 430d90 <sd_dhcp_lease_get_domainname+0x34>
  430d68:	cbz	x1, 430db0 <sd_dhcp_lease_get_domainname+0x54>
  430d6c:	ldr	x8, [x0, #144]
  430d70:	cbz	x8, 430d84 <sd_dhcp_lease_get_domainname+0x28>
  430d74:	mov	w0, wzr
  430d78:	str	x8, [x1]
  430d7c:	ldp	x29, x30, [sp], #16
  430d80:	ret
  430d84:	mov	w0, #0xffffffc3            	// #-61
  430d88:	ldp	x29, x30, [sp], #16
  430d8c:	ret
  430d90:	adrp	x1, 440000 <worker_hash_op+0xbdf8>
  430d94:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  430d98:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  430d9c:	add	x1, x1, #0x64d
  430da0:	add	x2, x2, #0x656
  430da4:	add	x4, x4, #0x8c4
  430da8:	mov	w3, #0x85                  	// #133
  430dac:	b	430dd0 <sd_dhcp_lease_get_domainname+0x74>
  430db0:	adrp	x1, 440000 <worker_hash_op+0xbdf8>
  430db4:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  430db8:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  430dbc:	add	x1, x1, #0x905
  430dc0:	add	x2, x2, #0x656
  430dc4:	add	x4, x4, #0x8c4
  430dc8:	mov	w3, #0x86                  	// #134
  430dcc:	mov	w0, wzr
  430dd0:	bl	40ac10 <log_assert_failed_return_realm@plt>
  430dd4:	mov	w0, #0xffffffea            	// #-22
  430dd8:	ldp	x29, x30, [sp], #16
  430ddc:	ret

0000000000430de0 <sd_dhcp_lease_get_hostname>:
  430de0:	stp	x29, x30, [sp, #-16]!
  430de4:	mov	x29, sp
  430de8:	cbz	x0, 430e14 <sd_dhcp_lease_get_hostname+0x34>
  430dec:	cbz	x1, 430e34 <sd_dhcp_lease_get_hostname+0x54>
  430df0:	ldr	x8, [x0, #160]
  430df4:	cbz	x8, 430e08 <sd_dhcp_lease_get_hostname+0x28>
  430df8:	mov	w0, wzr
  430dfc:	str	x8, [x1]
  430e00:	ldp	x29, x30, [sp], #16
  430e04:	ret
  430e08:	mov	w0, #0xffffffc3            	// #-61
  430e0c:	ldp	x29, x30, [sp], #16
  430e10:	ret
  430e14:	adrp	x1, 440000 <worker_hash_op+0xbdf8>
  430e18:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  430e1c:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  430e20:	add	x1, x1, #0x64d
  430e24:	add	x2, x2, #0x656
  430e28:	add	x4, x4, #0x910
  430e2c:	mov	w3, #0x90                  	// #144
  430e30:	b	430e54 <sd_dhcp_lease_get_hostname+0x74>
  430e34:	adrp	x1, 440000 <worker_hash_op+0xbdf8>
  430e38:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  430e3c:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  430e40:	add	x1, x1, #0x94f
  430e44:	add	x2, x2, #0x656
  430e48:	add	x4, x4, #0x910
  430e4c:	mov	w3, #0x91                  	// #145
  430e50:	mov	w0, wzr
  430e54:	bl	40ac10 <log_assert_failed_return_realm@plt>
  430e58:	mov	w0, #0xffffffea            	// #-22
  430e5c:	ldp	x29, x30, [sp], #16
  430e60:	ret

0000000000430e64 <sd_dhcp_lease_get_root_path>:
  430e64:	stp	x29, x30, [sp, #-16]!
  430e68:	mov	x29, sp
  430e6c:	cbz	x0, 430e98 <sd_dhcp_lease_get_root_path+0x34>
  430e70:	cbz	x1, 430eb8 <sd_dhcp_lease_get_root_path+0x54>
  430e74:	ldr	x8, [x0, #168]
  430e78:	cbz	x8, 430e8c <sd_dhcp_lease_get_root_path+0x28>
  430e7c:	mov	w0, wzr
  430e80:	str	x8, [x1]
  430e84:	ldp	x29, x30, [sp], #16
  430e88:	ret
  430e8c:	mov	w0, #0xffffffc3            	// #-61
  430e90:	ldp	x29, x30, [sp], #16
  430e94:	ret
  430e98:	adrp	x1, 440000 <worker_hash_op+0xbdf8>
  430e9c:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  430ea0:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  430ea4:	add	x1, x1, #0x64d
  430ea8:	add	x2, x2, #0x656
  430eac:	add	x4, x4, #0x958
  430eb0:	mov	w3, #0x9b                  	// #155
  430eb4:	b	430ed8 <sd_dhcp_lease_get_root_path+0x74>
  430eb8:	adrp	x1, 440000 <worker_hash_op+0xbdf8>
  430ebc:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  430ec0:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  430ec4:	add	x1, x1, #0x998
  430ec8:	add	x2, x2, #0x656
  430ecc:	add	x4, x4, #0x958
  430ed0:	mov	w3, #0x9c                  	// #156
  430ed4:	mov	w0, wzr
  430ed8:	bl	40ac10 <log_assert_failed_return_realm@plt>
  430edc:	mov	w0, #0xffffffea            	// #-22
  430ee0:	ldp	x29, x30, [sp], #16
  430ee4:	ret

0000000000430ee8 <sd_dhcp_lease_get_router>:
  430ee8:	stp	x29, x30, [sp, #-16]!
  430eec:	mov	x29, sp
  430ef0:	cbz	x0, 430f20 <sd_dhcp_lease_get_router+0x38>
  430ef4:	cbz	x1, 430f40 <sd_dhcp_lease_get_router+0x58>
  430ef8:	mov	x8, x0
  430efc:	ldr	x0, [x0, #56]
  430f00:	cbz	x0, 430f14 <sd_dhcp_lease_get_router+0x2c>
  430f04:	ldr	x8, [x8, #48]
  430f08:	str	x8, [x1]
  430f0c:	ldp	x29, x30, [sp], #16
  430f10:	ret
  430f14:	mov	w0, #0xffffffc3            	// #-61
  430f18:	ldp	x29, x30, [sp], #16
  430f1c:	ret
  430f20:	adrp	x1, 440000 <worker_hash_op+0xbdf8>
  430f24:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  430f28:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  430f2c:	add	x1, x1, #0x64d
  430f30:	add	x2, x2, #0x656
  430f34:	add	x4, x4, #0x9a2
  430f38:	mov	w3, #0xa6                  	// #166
  430f3c:	b	430f60 <sd_dhcp_lease_get_router+0x78>
  430f40:	adrp	x1, 440000 <worker_hash_op+0xbdf8>
  430f44:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  430f48:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  430f4c:	add	x1, x1, #0x6be
  430f50:	add	x2, x2, #0x656
  430f54:	add	x4, x4, #0x9a2
  430f58:	mov	w3, #0xa7                  	// #167
  430f5c:	mov	w0, wzr
  430f60:	bl	40ac10 <log_assert_failed_return_realm@plt>
  430f64:	mov	w0, #0xffffffea            	// #-22
  430f68:	ldp	x29, x30, [sp], #16
  430f6c:	ret

0000000000430f70 <sd_dhcp_lease_get_netmask>:
  430f70:	stp	x29, x30, [sp, #-16]!
  430f74:	mov	x29, sp
  430f78:	cbz	x0, 430fac <sd_dhcp_lease_get_netmask+0x3c>
  430f7c:	cbz	x1, 430fcc <sd_dhcp_lease_get_netmask+0x5c>
  430f80:	ldrb	w9, [x0, #28]
  430f84:	mov	x8, x0
  430f88:	cbz	w9, 430fa0 <sd_dhcp_lease_get_netmask+0x30>
  430f8c:	ldr	w8, [x8, #32]
  430f90:	mov	w0, wzr
  430f94:	str	w8, [x1]
  430f98:	ldp	x29, x30, [sp], #16
  430f9c:	ret
  430fa0:	mov	w0, #0xffffffc3            	// #-61
  430fa4:	ldp	x29, x30, [sp], #16
  430fa8:	ret
  430fac:	adrp	x1, 440000 <worker_hash_op+0xbdf8>
  430fb0:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  430fb4:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  430fb8:	add	x1, x1, #0x64d
  430fbc:	add	x2, x2, #0x656
  430fc0:	add	x4, x4, #0x9e9
  430fc4:	mov	w3, #0xb1                  	// #177
  430fc8:	b	430fec <sd_dhcp_lease_get_netmask+0x7c>
  430fcc:	adrp	x1, 440000 <worker_hash_op+0xbdf8>
  430fd0:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  430fd4:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  430fd8:	add	x1, x1, #0x6be
  430fdc:	add	x2, x2, #0x656
  430fe0:	add	x4, x4, #0x9e9
  430fe4:	mov	w3, #0xb2                  	// #178
  430fe8:	mov	w0, wzr
  430fec:	bl	40ac10 <log_assert_failed_return_realm@plt>
  430ff0:	mov	w0, #0xffffffea            	// #-22
  430ff4:	ldp	x29, x30, [sp], #16
  430ff8:	ret

0000000000430ffc <sd_dhcp_lease_get_server_identifier>:
  430ffc:	stp	x29, x30, [sp, #-16]!
  431000:	mov	x29, sp
  431004:	cbz	x0, 431030 <sd_dhcp_lease_get_server_identifier+0x34>
  431008:	cbz	x1, 431050 <sd_dhcp_lease_get_server_identifier+0x54>
  43100c:	ldr	w8, [x0, #20]
  431010:	cbz	w8, 431024 <sd_dhcp_lease_get_server_identifier+0x28>
  431014:	mov	w0, wzr
  431018:	str	w8, [x1]
  43101c:	ldp	x29, x30, [sp], #16
  431020:	ret
  431024:	mov	w0, #0xffffffc3            	// #-61
  431028:	ldp	x29, x30, [sp], #16
  43102c:	ret
  431030:	adrp	x1, 440000 <worker_hash_op+0xbdf8>
  431034:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  431038:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  43103c:	add	x1, x1, #0x64d
  431040:	add	x2, x2, #0x656
  431044:	add	x4, x4, #0xa2a
  431048:	mov	w3, #0xbc                  	// #188
  43104c:	b	431070 <sd_dhcp_lease_get_server_identifier+0x74>
  431050:	adrp	x1, 440000 <worker_hash_op+0xbdf8>
  431054:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  431058:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  43105c:	add	x1, x1, #0x6be
  431060:	add	x2, x2, #0x656
  431064:	add	x4, x4, #0xa2a
  431068:	mov	w3, #0xbd                  	// #189
  43106c:	mov	w0, wzr
  431070:	bl	40ac10 <log_assert_failed_return_realm@plt>
  431074:	mov	w0, #0xffffffea            	// #-22
  431078:	ldp	x29, x30, [sp], #16
  43107c:	ret

0000000000431080 <sd_dhcp_lease_get_next_server>:
  431080:	stp	x29, x30, [sp, #-16]!
  431084:	mov	x29, sp
  431088:	cbz	x0, 4310b4 <sd_dhcp_lease_get_next_server+0x34>
  43108c:	cbz	x1, 4310d4 <sd_dhcp_lease_get_next_server+0x54>
  431090:	ldr	w8, [x0, #24]
  431094:	cbz	w8, 4310a8 <sd_dhcp_lease_get_next_server+0x28>
  431098:	mov	w0, wzr
  43109c:	str	w8, [x1]
  4310a0:	ldp	x29, x30, [sp], #16
  4310a4:	ret
  4310a8:	mov	w0, #0xffffffc3            	// #-61
  4310ac:	ldp	x29, x30, [sp], #16
  4310b0:	ret
  4310b4:	adrp	x1, 440000 <worker_hash_op+0xbdf8>
  4310b8:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  4310bc:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  4310c0:	add	x1, x1, #0x64d
  4310c4:	add	x2, x2, #0x656
  4310c8:	add	x4, x4, #0xa75
  4310cc:	mov	w3, #0xc7                  	// #199
  4310d0:	b	4310f4 <sd_dhcp_lease_get_next_server+0x74>
  4310d4:	adrp	x1, 440000 <worker_hash_op+0xbdf8>
  4310d8:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  4310dc:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  4310e0:	add	x1, x1, #0x6be
  4310e4:	add	x2, x2, #0x656
  4310e8:	add	x4, x4, #0xa75
  4310ec:	mov	w3, #0xc8                  	// #200
  4310f0:	mov	w0, wzr
  4310f4:	bl	40ac10 <log_assert_failed_return_realm@plt>
  4310f8:	mov	w0, #0xffffffea            	// #-22
  4310fc:	ldp	x29, x30, [sp], #16
  431100:	ret

0000000000431104 <sd_dhcp_lease_get_routes>:
  431104:	stp	x29, x30, [sp, #-48]!
  431108:	str	x21, [sp, #16]
  43110c:	stp	x20, x19, [sp, #32]
  431110:	mov	x29, sp
  431114:	cbz	x0, 43122c <sd_dhcp_lease_get_routes+0x128>
  431118:	mov	x20, x1
  43111c:	cbz	x1, 43124c <sd_dhcp_lease_get_routes+0x148>
  431120:	ldr	x19, [x0, #120]
  431124:	mov	x21, x0
  431128:	cbz	x19, 431184 <sd_dhcp_lease_get_routes+0x80>
  43112c:	cmp	xzr, x19, lsr #61
  431130:	b.ne	43117c <sd_dhcp_lease_get_routes+0x78>  // b.any
  431134:	lsl	x0, x19, #3
  431138:	bl	40a490 <malloc@plt>
  43113c:	cbz	x0, 43117c <sd_dhcp_lease_get_routes+0x78>
  431140:	ldr	x8, [x21, #112]
  431144:	cmp	x19, #0x4
  431148:	b.cs	43119c <sd_dhcp_lease_get_routes+0x98>  // b.hs, b.nlast
  43114c:	mov	x9, xzr
  431150:	mov	w10, wzr
  431154:	add	w10, w10, #0x1
  431158:	mov	w11, #0xc                   	// #12
  43115c:	madd	x12, x9, x11, x8
  431160:	str	x12, [x0, x9, lsl #3]
  431164:	mov	w9, w10
  431168:	cmp	x19, x9
  43116c:	add	w10, w10, #0x1
  431170:	b.hi	43115c <sd_dhcp_lease_get_routes+0x58>  // b.pmore
  431174:	str	x0, [x20]
  431178:	b	431188 <sd_dhcp_lease_get_routes+0x84>
  43117c:	mov	w19, #0xfffffff4            	// #-12
  431180:	b	431188 <sd_dhcp_lease_get_routes+0x84>
  431184:	mov	w19, #0xffffffc3            	// #-61
  431188:	mov	w0, w19
  43118c:	ldp	x20, x19, [sp, #32]
  431190:	ldr	x21, [sp, #16]
  431194:	ldp	x29, x30, [sp], #48
  431198:	ret
  43119c:	sub	x11, x19, #0x1
  4311a0:	mov	w10, wzr
  4311a4:	cmn	w11, #0x1
  4311a8:	mov	x9, xzr
  4311ac:	b.eq	431154 <sd_dhcp_lease_get_routes+0x50>  // b.none
  4311b0:	lsr	x11, x11, #32
  4311b4:	cbnz	x11, 431154 <sd_dhcp_lease_get_routes+0x50>
  4311b8:	adrp	x12, 442000 <hash_key_name.asso_values+0x4>
  4311bc:	ldr	q1, [x12, #608]
  4311c0:	mov	w12, #0x18                  	// #24
  4311c4:	and	x9, x19, #0xfffffffffffffffc
  4311c8:	dup	v2.2d, x12
  4311cc:	mov	w12, #0x4                   	// #4
  4311d0:	add	x11, x0, #0x10
  4311d4:	dup	v0.2d, x8
  4311d8:	mov	w10, w9
  4311dc:	dup	v3.2d, x12
  4311e0:	mov	x12, x9
  4311e4:	fmov	x13, d1
  4311e8:	add	x13, x13, x13, lsl #1
  4311ec:	mov	x14, v1.d[1]
  4311f0:	lsl	x13, x13, #2
  4311f4:	add	x14, x14, x14, lsl #1
  4311f8:	fmov	d4, x13
  4311fc:	lsl	x13, x14, #2
  431200:	mov	v4.d[1], x13
  431204:	add	v4.2d, v0.2d, v4.2d
  431208:	add	v5.2d, v4.2d, v2.2d
  43120c:	add	v1.2d, v1.2d, v3.2d
  431210:	subs	x12, x12, #0x4
  431214:	stp	q4, q5, [x11, #-16]
  431218:	add	x11, x11, #0x20
  43121c:	b.ne	4311e4 <sd_dhcp_lease_get_routes+0xe0>  // b.any
  431220:	cmp	x19, x9
  431224:	b.ne	431154 <sd_dhcp_lease_get_routes+0x50>  // b.any
  431228:	b	431174 <sd_dhcp_lease_get_routes+0x70>
  43122c:	adrp	x1, 440000 <worker_hash_op+0xbdf8>
  431230:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  431234:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  431238:	add	x1, x1, #0x64d
  43123c:	add	x2, x2, #0x656
  431240:	add	x4, x4, #0xaba
  431244:	mov	w3, #0xd9                  	// #217
  431248:	b	43126c <sd_dhcp_lease_get_routes+0x168>
  43124c:	adrp	x1, 440000 <worker_hash_op+0xbdf8>
  431250:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  431254:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  431258:	add	x1, x1, #0x48e
  43125c:	add	x2, x2, #0x656
  431260:	add	x4, x4, #0xaba
  431264:	mov	w3, #0xda                  	// #218
  431268:	mov	w0, wzr
  43126c:	bl	40ac10 <log_assert_failed_return_realm@plt>
  431270:	mov	w19, #0xffffffea            	// #-22
  431274:	b	431188 <sd_dhcp_lease_get_routes+0x84>

0000000000431278 <sd_dhcp_lease_get_search_domains>:
  431278:	stp	x29, x30, [sp, #-32]!
  43127c:	stp	x20, x19, [sp, #16]
  431280:	mov	x29, sp
  431284:	cbz	x0, 4312c0 <sd_dhcp_lease_get_search_domains+0x48>
  431288:	mov	x19, x1
  43128c:	cbz	x1, 4312e0 <sd_dhcp_lease_get_search_domains+0x68>
  431290:	ldr	x20, [x0, #152]
  431294:	mov	x0, x20
  431298:	bl	40b4b0 <strv_length@plt>
  43129c:	cbz	x0, 4312b0 <sd_dhcp_lease_get_search_domains+0x38>
  4312a0:	str	x20, [x19]
  4312a4:	ldp	x20, x19, [sp, #16]
  4312a8:	ldp	x29, x30, [sp], #32
  4312ac:	ret
  4312b0:	mov	w0, #0xffffffc3            	// #-61
  4312b4:	ldp	x20, x19, [sp, #16]
  4312b8:	ldp	x29, x30, [sp], #32
  4312bc:	ret
  4312c0:	adrp	x1, 440000 <worker_hash_op+0xbdf8>
  4312c4:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  4312c8:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  4312cc:	add	x1, x1, #0x64d
  4312d0:	add	x2, x2, #0x656
  4312d4:	add	x4, x4, #0xafb
  4312d8:	mov	w3, #0xed                  	// #237
  4312dc:	b	431300 <sd_dhcp_lease_get_search_domains+0x88>
  4312e0:	adrp	x1, 440000 <worker_hash_op+0xbdf8>
  4312e4:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  4312e8:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  4312ec:	add	x1, x1, #0xb3b
  4312f0:	add	x2, x2, #0x656
  4312f4:	add	x4, x4, #0xafb
  4312f8:	mov	w3, #0xee                  	// #238
  4312fc:	mov	w0, wzr
  431300:	bl	40ac10 <log_assert_failed_return_realm@plt>
  431304:	mov	w0, #0xffffffea            	// #-22
  431308:	ldp	x20, x19, [sp, #16]
  43130c:	ldp	x29, x30, [sp], #32
  431310:	ret

0000000000431314 <sd_dhcp_lease_get_vendor_specific>:
  431314:	stp	x29, x30, [sp, #-16]!
  431318:	mov	x29, sp
  43131c:	cbz	x0, 431358 <sd_dhcp_lease_get_vendor_specific+0x44>
  431320:	cbz	x1, 431378 <sd_dhcp_lease_get_vendor_specific+0x64>
  431324:	cbz	x2, 431398 <sd_dhcp_lease_get_vendor_specific+0x84>
  431328:	ldr	x9, [x0, #200]
  43132c:	mov	x8, x0
  431330:	cbz	x9, 43134c <sd_dhcp_lease_get_vendor_specific+0x38>
  431334:	ldr	x8, [x8, #192]
  431338:	mov	w0, wzr
  43133c:	str	x8, [x1]
  431340:	str	x9, [x2]
  431344:	ldp	x29, x30, [sp], #16
  431348:	ret
  43134c:	mov	w0, #0xffffffc3            	// #-61
  431350:	ldp	x29, x30, [sp], #16
  431354:	ret
  431358:	adrp	x1, 440000 <worker_hash_op+0xbdf8>
  43135c:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  431360:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  431364:	add	x1, x1, #0x64d
  431368:	add	x2, x2, #0x656
  43136c:	add	x4, x4, #0xb43
  431370:	mov	w3, #0xfa                  	// #250
  431374:	b	4313b8 <sd_dhcp_lease_get_vendor_specific+0xa4>
  431378:	adrp	x1, 438000 <worker_hash_op+0x3df8>
  43137c:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  431380:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  431384:	add	x1, x1, #0x479
  431388:	add	x2, x2, #0x656
  43138c:	add	x4, x4, #0xb43
  431390:	mov	w3, #0xfb                  	// #251
  431394:	b	4313b4 <sd_dhcp_lease_get_vendor_specific+0xa0>
  431398:	adrp	x1, 440000 <worker_hash_op+0xbdf8>
  43139c:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  4313a0:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  4313a4:	add	x1, x1, #0xb93
  4313a8:	add	x2, x2, #0x656
  4313ac:	add	x4, x4, #0xb43
  4313b0:	mov	w3, #0xfc                  	// #252
  4313b4:	mov	w0, wzr
  4313b8:	bl	40ac10 <log_assert_failed_return_realm@plt>
  4313bc:	mov	w0, #0xffffffea            	// #-22
  4313c0:	ldp	x29, x30, [sp], #16
  4313c4:	ret

00000000004313c8 <sd_dhcp_lease_ref>:
  4313c8:	stp	x29, x30, [sp, #-16]!
  4313cc:	mov	x29, sp
  4313d0:	cbz	x0, 4313e4 <sd_dhcp_lease_ref+0x1c>
  4313d4:	ldr	w8, [x0]
  4313d8:	cbz	w8, 4313ec <sd_dhcp_lease_ref+0x24>
  4313dc:	add	w8, w8, #0x1
  4313e0:	str	w8, [x0]
  4313e4:	ldp	x29, x30, [sp], #16
  4313e8:	ret
  4313ec:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  4313f0:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  4313f4:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  4313f8:	add	x1, x1, #0xbf
  4313fc:	add	x2, x2, #0x656
  431400:	add	x4, x4, #0xb9c
  431404:	mov	w3, #0x121                 	// #289
  431408:	mov	w0, wzr
  43140c:	bl	40a630 <log_assert_failed_realm@plt>

0000000000431410 <sd_dhcp_lease_unref>:
  431410:	stp	x29, x30, [sp, #-48]!
  431414:	str	x21, [sp, #16]
  431418:	stp	x20, x19, [sp, #32]
  43141c:	mov	x29, sp
  431420:	cbz	x0, 4314b0 <sd_dhcp_lease_unref+0xa0>
  431424:	ldr	w8, [x0]
  431428:	mov	x19, x0
  43142c:	cbz	w8, 431530 <sd_dhcp_lease_unref+0x120>
  431430:	subs	w8, w8, #0x1
  431434:	str	w8, [x19]
  431438:	b.ne	4314b0 <sd_dhcp_lease_unref+0xa0>  // b.any
  43143c:	mov	x21, x19
  431440:	ldr	x20, [x21, #216]!
  431444:	cbnz	x20, 4314e4 <sd_dhcp_lease_unref+0xd4>
  431448:	ldr	x0, [x19, #168]
  43144c:	bl	40a320 <free@plt>
  431450:	ldr	x0, [x19, #48]
  431454:	bl	40a320 <free@plt>
  431458:	ldr	x0, [x19, #208]
  43145c:	bl	40a320 <free@plt>
  431460:	ldr	x0, [x19, #160]
  431464:	bl	40a320 <free@plt>
  431468:	ldr	x0, [x19, #144]
  43146c:	bl	40a320 <free@plt>
  431470:	ldr	x0, [x19, #64]
  431474:	bl	40a320 <free@plt>
  431478:	ldr	x0, [x19, #80]
  43147c:	bl	40a320 <free@plt>
  431480:	ldr	x0, [x19, #96]
  431484:	bl	40a320 <free@plt>
  431488:	ldr	x0, [x19, #112]
  43148c:	bl	40a320 <free@plt>
  431490:	ldr	x0, [x19, #176]
  431494:	bl	40a320 <free@plt>
  431498:	ldr	x0, [x19, #192]
  43149c:	bl	40a320 <free@plt>
  4314a0:	ldr	x0, [x19, #152]
  4314a4:	bl	40ae30 <strv_free@plt>
  4314a8:	mov	x0, x19
  4314ac:	bl	40a320 <free@plt>
  4314b0:	ldp	x20, x19, [sp, #32]
  4314b4:	ldr	x21, [sp, #16]
  4314b8:	mov	x0, xzr
  4314bc:	ldp	x29, x30, [sp], #48
  4314c0:	ret
  4314c4:	str	x8, [x9]
  4314c8:	ldr	x0, [x20, #24]
  4314cc:	stp	xzr, xzr, [x20]
  4314d0:	bl	40a320 <free@plt>
  4314d4:	mov	x0, x20
  4314d8:	bl	40a320 <free@plt>
  4314dc:	ldr	x20, [x21]
  4314e0:	cbz	x20, 431448 <sd_dhcp_lease_unref+0x38>
  4314e4:	ldr	x8, [x20]
  4314e8:	cbz	x8, 4314f4 <sd_dhcp_lease_unref+0xe4>
  4314ec:	ldr	x9, [x20, #8]
  4314f0:	str	x9, [x8, #8]
  4314f4:	ldr	x9, [x20, #8]
  4314f8:	cbnz	x9, 4314c4 <sd_dhcp_lease_unref+0xb4>
  4314fc:	ldr	x9, [x21]
  431500:	cmp	x9, x20
  431504:	mov	x9, x21
  431508:	b.eq	4314c4 <sd_dhcp_lease_unref+0xb4>  // b.none
  43150c:	adrp	x1, 434000 <__libc_csu_init+0x60>
  431510:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  431514:	adrp	x4, 441000 <worker_hash_op+0xcdf8>
  431518:	add	x1, x1, #0x45e
  43151c:	add	x2, x2, #0x656
  431520:	add	x4, x4, #0xa4b
  431524:	mov	w3, #0x10c                 	// #268
  431528:	mov	w0, wzr
  43152c:	bl	40a630 <log_assert_failed_realm@plt>
  431530:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  431534:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  431538:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  43153c:	add	x1, x1, #0xbf
  431540:	add	x2, x2, #0x656
  431544:	add	x4, x4, #0xbce
  431548:	mov	w3, #0x121                 	// #289
  43154c:	mov	w0, wzr
  431550:	bl	40a630 <log_assert_failed_realm@plt>

0000000000431554 <dhcp_lease_parse_options>:
  431554:	stp	x29, x30, [sp, #-96]!
  431558:	stp	x28, x27, [sp, #16]
  43155c:	stp	x26, x25, [sp, #32]
  431560:	stp	x24, x23, [sp, #48]
  431564:	stp	x22, x21, [sp, #64]
  431568:	stp	x20, x19, [sp, #80]
  43156c:	mov	x29, sp
  431570:	cbz	x3, 4320f0 <dhcp_lease_parse_options+0xb9c>
  431574:	and	w22, w0, #0xff
  431578:	sub	w8, w22, #0x1
  43157c:	mov	w21, w1
  431580:	mov	w1, w0
  431584:	cmp	w8, #0xfd
  431588:	b.hi	431b54 <dhcp_lease_parse_options+0x600>  // b.pmore
  43158c:	adrp	x9, 442000 <hash_key_name.asso_values+0x4>
  431590:	add	x9, x9, #0x370
  431594:	adr	x10, 4315ac <dhcp_lease_parse_options+0x58>
  431598:	ldrh	w11, [x9, x8, lsl #1]
  43159c:	add	x10, x10, x11, lsl #2
  4315a0:	mov	x19, x3
  4315a4:	mov	x20, x2
  4315a8:	br	x10
  4315ac:	mov	x0, x19
  4315b0:	mov	x2, x20
  4315b4:	mov	w3, w21
  4315b8:	bl	432618 <dhcp_lease_insert_private_option>
  4315bc:	tbnz	w0, #31, 4315c4 <dhcp_lease_parse_options+0x70>
  4315c0:	mov	w0, wzr
  4315c4:	ldp	x20, x19, [sp, #80]
  4315c8:	ldp	x22, x21, [sp, #64]
  4315cc:	ldp	x24, x23, [sp, #48]
  4315d0:	ldp	x26, x25, [sp, #32]
  4315d4:	ldp	x28, x27, [sp, #16]
  4315d8:	ldp	x29, x30, [sp], #96
  4315dc:	ret
  4315e0:	tst	w21, #0xff
  4315e4:	b.eq	4315ec <dhcp_lease_parse_options+0x98>  // b.none
  4315e8:	cbz	x20, 4321a4 <dhcp_lease_parse_options+0xc50>
  4315ec:	tst	w21, #0xff
  4315f0:	b.eq	4315c0 <dhcp_lease_parse_options+0x6c>  // b.none
  4315f4:	ldr	x8, [x19, #120]
  4315f8:	and	x26, x21, #0xff
  4315fc:	add	x21, x19, #0x70
  431600:	add	x22, x19, #0x80
  431604:	mov	w24, #0xc                   	// #12
  431608:	mov	w25, #0x79                  	// #121
  43160c:	add	x2, x8, #0x1
  431610:	mov	w3, #0xc                   	// #12
  431614:	mov	x0, x21
  431618:	mov	x1, x22
  43161c:	bl	40bc80 <greedy_realloc@plt>
  431620:	cbz	x0, 432008 <dhcp_lease_parse_options+0xab4>
  431624:	ldp	x27, x28, [x19, #112]
  431628:	madd	x0, x28, x24, x27
  43162c:	strb	w25, [x0, #9]
  431630:	ldrb	w8, [x20]
  431634:	cbz	w8, 431670 <dhcp_lease_parse_options+0x11c>
  431638:	sub	w9, w8, #0x1
  43163c:	add	w10, w8, #0x6
  431640:	cmp	w9, #0x0
  431644:	csel	w9, w10, w9, lt  // lt = tstop
  431648:	asr	w9, w9, #3
  43164c:	madd	x10, x28, x24, x27
  431650:	cmp	w9, #0x3
  431654:	strb	w8, [x10, #8]
  431658:	b.hi	431de0 <dhcp_lease_parse_options+0x88c>  // b.pmore
  43165c:	add	w23, w9, #0x1
  431660:	sub	x8, x26, #0x1
  431664:	subs	x26, x8, x23
  431668:	b.cs	431688 <dhcp_lease_parse_options+0x134>  // b.hs, b.nlast
  43166c:	b	431de0 <dhcp_lease_parse_options+0x88c>
  431670:	madd	x8, x28, x24, x27
  431674:	mov	w23, wzr
  431678:	strb	wzr, [x8, #8]
  43167c:	sub	x8, x26, #0x1
  431680:	subs	x26, x8, x23
  431684:	b.cc	431de0 <dhcp_lease_parse_options+0x88c>  // b.lo, b.ul, b.last
  431688:	add	x20, x20, #0x1
  43168c:	mov	x1, x20
  431690:	mov	x2, x23
  431694:	str	wzr, [x0]
  431698:	bl	40adc0 <memcpy@plt>
  43169c:	cmp	x26, #0x4
  4316a0:	b.cc	431de0 <dhcp_lease_parse_options+0x88c>  // b.lo, b.ul, b.last
  4316a4:	add	x20, x20, x23
  4316a8:	ldr	w8, [x20], #4
  4316ac:	madd	x9, x28, x24, x27
  4316b0:	subs	x26, x26, #0x4
  4316b4:	str	w8, [x9, #4]
  4316b8:	ldr	x8, [x19, #120]
  4316bc:	add	x8, x8, #0x1
  4316c0:	str	x8, [x19, #120]
  4316c4:	b.ne	43160c <dhcp_lease_parse_options+0xb8>  // b.any
  4316c8:	b	4315c0 <dhcp_lease_parse_options+0x6c>
  4316cc:	cbz	x20, 432138 <dhcp_lease_parse_options+0xbe4>
  4316d0:	and	w8, w21, #0xff
  4316d4:	cmp	w8, #0x4
  4316d8:	b.ne	431b94 <dhcp_lease_parse_options+0x640>  // b.any
  4316dc:	ldr	w8, [x20]
  4316e0:	rev	w9, w8
  4316e4:	cmp	w8, #0x0
  4316e8:	csinc	w8, w9, wzr, ne  // ne = any
  4316ec:	str	w8, [x19, #4]
  4316f0:	b	4315c0 <dhcp_lease_parse_options+0x6c>
  4316f4:	tst	w21, #0xff
  4316f8:	b.eq	431700 <dhcp_lease_parse_options+0x1ac>  // b.none
  4316fc:	cbz	x20, 4321c8 <dhcp_lease_parse_options+0xc74>
  431700:	tst	w21, #0xff
  431704:	b.eq	4315c0 <dhcp_lease_parse_options+0x6c>  // b.none
  431708:	and	x24, x21, #0xff
  43170c:	tst	x24, #0x7
  431710:	b.eq	431df0 <dhcp_lease_parse_options+0x89c>  // b.none
  431714:	mov	w19, #0xffffffea            	// #-22
  431718:	mov	w0, wzr
  43171c:	bl	40a2c0 <log_get_max_level_realm@plt>
  431720:	cmp	w0, #0x7
  431724:	b.lt	4315c0 <dhcp_lease_parse_options+0x6c>  // b.tstop
  431728:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  43172c:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  431730:	adrp	x5, 440000 <worker_hash_op+0xbdf8>
  431734:	add	x2, x2, #0x656
  431738:	add	x4, x4, #0xc47
  43173c:	add	x5, x5, #0xdbd
  431740:	mov	w0, #0x7                   	// #7
  431744:	mov	w3, #0x25f                 	// #607
  431748:	b	43203c <dhcp_lease_parse_options+0xae8>
  43174c:	cbz	x20, 4321ec <dhcp_lease_parse_options+0xc98>
  431750:	and	w8, w21, #0xff
  431754:	cmp	w8, #0x2
  431758:	b.ne	431bd0 <dhcp_lease_parse_options+0x67c>  // b.any
  43175c:	ldrh	w8, [x20]
  431760:	mov	w9, #0x44                  	// #68
  431764:	rev	w8, w8
  431768:	lsr	w8, w8, #16
  43176c:	cmp	w8, #0x44
  431770:	csel	w20, w8, w9, hi  // hi = pmore
  431774:	strh	w20, [x19, #136]
  431778:	b	431c0c <dhcp_lease_parse_options+0x6b8>
  43177c:	tst	w21, #0xff
  431780:	b.eq	431d8c <dhcp_lease_parse_options+0x838>  // b.none
  431784:	and	x21, x21, #0xff
  431788:	mov	x0, x20
  43178c:	mov	x1, x21
  431790:	bl	40beb0 <memdup@plt>
  431794:	cbz	x0, 431de8 <dhcp_lease_parse_options+0x894>
  431798:	mov	x20, x0
  43179c:	ldr	x0, [x19, #192]
  4317a0:	bl	40a320 <free@plt>
  4317a4:	stp	x20, x21, [x19, #192]
  4317a8:	b	4315c0 <dhcp_lease_parse_options+0x6c>
  4317ac:	and	x1, x21, #0xff
  4317b0:	add	x2, x19, #0xa0
  4317b4:	mov	x0, x20
  4317b8:	bl	432234 <lease_parse_domain>
  4317bc:	tbz	w0, #31, 4315c0 <dhcp_lease_parse_options+0x6c>
  4317c0:	mov	w19, w0
  4317c4:	mov	w0, wzr
  4317c8:	bl	40a2c0 <log_get_max_level_realm@plt>
  4317cc:	cmp	w0, #0x7
  4317d0:	mov	w0, wzr
  4317d4:	b.lt	4315c4 <dhcp_lease_parse_options+0x70>  // b.tstop
  4317d8:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  4317dc:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  4317e0:	adrp	x5, 440000 <worker_hash_op+0xbdf8>
  4317e4:	add	x2, x2, #0x656
  4317e8:	add	x4, x4, #0xc47
  4317ec:	add	x5, x5, #0xea8
  4317f0:	mov	w0, #0x7                   	// #7
  4317f4:	mov	w3, #0x27f                 	// #639
  4317f8:	b	43203c <dhcp_lease_parse_options+0xae8>
  4317fc:	cbz	x20, 43215c <dhcp_lease_parse_options+0xc08>
  431800:	tst	w21, #0xff
  431804:	b.eq	431d9c <dhcp_lease_parse_options+0x848>  // b.none
  431808:	and	x21, x21, #0xff
  43180c:	tst	x21, #0x3
  431810:	b.eq	431ecc <dhcp_lease_parse_options+0x978>  // b.none
  431814:	mov	w19, #0xffffffea            	// #-22
  431818:	mov	w0, wzr
  43181c:	bl	40a2c0 <log_get_max_level_realm@plt>
  431820:	cmp	w0, #0x7
  431824:	b.lt	4315c0 <dhcp_lease_parse_options+0x6c>  // b.tstop
  431828:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  43182c:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  431830:	adrp	x5, 440000 <worker_hash_op+0xbdf8>
  431834:	add	x2, x2, #0x656
  431838:	add	x4, x4, #0xc47
  43183c:	add	x5, x5, #0xd42
  431840:	mov	w0, #0x7                   	// #7
  431844:	mov	w3, #0x24d                 	// #589
  431848:	b	43203c <dhcp_lease_parse_options+0xae8>
  43184c:	cbz	x20, 432114 <dhcp_lease_parse_options+0xbc0>
  431850:	and	w8, w21, #0xff
  431854:	cmp	w8, #0x4
  431858:	b.ne	431c60 <dhcp_lease_parse_options+0x70c>  // b.any
  43185c:	ldr	w8, [x20]
  431860:	str	w8, [x19, #20]
  431864:	b	4315c0 <dhcp_lease_parse_options+0x6c>
  431868:	cbz	x20, 432114 <dhcp_lease_parse_options+0xbc0>
  43186c:	and	w8, w21, #0xff
  431870:	cmp	w8, #0x4
  431874:	b.ne	431c9c <dhcp_lease_parse_options+0x748>  // b.any
  431878:	ldr	w8, [x20]
  43187c:	mov	w9, #0x1                   	// #1
  431880:	strb	w9, [x19, #28]
  431884:	str	w8, [x19, #32]
  431888:	b	4315c0 <dhcp_lease_parse_options+0x6c>
  43188c:	cbz	x20, 432138 <dhcp_lease_parse_options+0xbe4>
  431890:	and	w8, w21, #0xff
  431894:	cmp	w8, #0x4
  431898:	b.ne	431cd8 <dhcp_lease_parse_options+0x784>  // b.any
  43189c:	ldr	w8, [x20]
  4318a0:	rev	w9, w8
  4318a4:	cmp	w8, #0x0
  4318a8:	csinc	w8, w9, wzr, ne  // ne = any
  4318ac:	str	w8, [x19, #12]
  4318b0:	b	4315c0 <dhcp_lease_parse_options+0x6c>
  4318b4:	and	x1, x21, #0xff
  4318b8:	add	x2, x19, #0x90
  4318bc:	mov	x0, x20
  4318c0:	bl	432234 <lease_parse_domain>
  4318c4:	tbz	w0, #31, 4315c0 <dhcp_lease_parse_options+0x6c>
  4318c8:	mov	w19, w0
  4318cc:	mov	w0, wzr
  4318d0:	bl	40a2c0 <log_get_max_level_realm@plt>
  4318d4:	cmp	w0, #0x7
  4318d8:	mov	w0, wzr
  4318dc:	b.lt	4315c4 <dhcp_lease_parse_options+0x70>  // b.tstop
  4318e0:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  4318e4:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  4318e8:	adrp	x5, 440000 <worker_hash_op+0xbdf8>
  4318ec:	add	x2, x2, #0x656
  4318f0:	add	x4, x4, #0xc47
  4318f4:	add	x5, x5, #0xe4d
  4318f8:	mov	w0, #0x7                   	// #7
  4318fc:	mov	w3, #0x270                 	// #624
  431900:	b	43203c <dhcp_lease_parse_options+0xae8>
  431904:	cbz	x20, 43215c <dhcp_lease_parse_options+0xc08>
  431908:	tst	w21, #0xff
  43190c:	b.eq	431da4 <dhcp_lease_parse_options+0x850>  // b.none
  431910:	and	x21, x21, #0xff
  431914:	tst	x21, #0x3
  431918:	b.eq	431ef4 <dhcp_lease_parse_options+0x9a0>  // b.none
  43191c:	mov	w19, #0xffffffea            	// #-22
  431920:	mov	w0, wzr
  431924:	bl	40a2c0 <log_get_max_level_realm@plt>
  431928:	cmp	w0, #0x7
  43192c:	b.lt	4315c0 <dhcp_lease_parse_options+0x6c>  // b.tstop
  431930:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  431934:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  431938:	adrp	x5, 440000 <worker_hash_op+0xbdf8>
  43193c:	add	x2, x2, #0x656
  431940:	add	x4, x4, #0xc47
  431944:	add	x5, x5, #0xd13
  431948:	mov	w0, #0x7                   	// #7
  43194c:	mov	w3, #0x247                 	// #583
  431950:	b	43203c <dhcp_lease_parse_options+0xae8>
  431954:	cbz	x20, 432180 <dhcp_lease_parse_options+0xc2c>
  431958:	tst	w21, #0xff
  43195c:	b.eq	431dac <dhcp_lease_parse_options+0x858>  // b.none
  431960:	and	x21, x21, #0xff
  431964:	sub	x2, x21, #0x1
  431968:	mov	x0, x20
  43196c:	mov	w1, wzr
  431970:	bl	40b180 <memchr@plt>
  431974:	cbz	x0, 431f1c <dhcp_lease_parse_options+0x9c8>
  431978:	mov	w19, #0xffffffea            	// #-22
  43197c:	mov	w0, wzr
  431980:	bl	40a2c0 <log_get_max_level_realm@plt>
  431984:	cmp	w0, #0x7
  431988:	b.lt	4315c0 <dhcp_lease_parse_options+0x6c>  // b.tstop
  43198c:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  431990:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  431994:	adrp	x5, 440000 <worker_hash_op+0xbdf8>
  431998:	add	x2, x2, #0x656
  43199c:	add	x4, x4, #0xc47
  4319a0:	add	x5, x5, #0xed0
  4319a4:	mov	w0, #0x7                   	// #7
  4319a8:	mov	w3, #0x288                 	// #648
  4319ac:	b	43203c <dhcp_lease_parse_options+0xae8>
  4319b0:	cbz	x20, 432138 <dhcp_lease_parse_options+0xbe4>
  4319b4:	and	w8, w21, #0xff
  4319b8:	cmp	w8, #0x4
  4319bc:	b.ne	431d14 <dhcp_lease_parse_options+0x7c0>  // b.any
  4319c0:	ldr	w8, [x20]
  4319c4:	rev	w9, w8
  4319c8:	cmp	w8, #0x0
  4319cc:	csinc	w8, w9, wzr, ne  // ne = any
  4319d0:	str	w8, [x19, #8]
  4319d4:	b	4315c0 <dhcp_lease_parse_options+0x6c>
  4319d8:	cbz	x20, 432180 <dhcp_lease_parse_options+0xc2c>
  4319dc:	tst	w21, #0xff
  4319e0:	b.eq	431dbc <dhcp_lease_parse_options+0x868>  // b.none
  4319e4:	and	x21, x21, #0xff
  4319e8:	sub	x2, x21, #0x1
  4319ec:	mov	x0, x20
  4319f0:	mov	w1, wzr
  4319f4:	bl	40b180 <memchr@plt>
  4319f8:	cbz	x0, 431f40 <dhcp_lease_parse_options+0x9ec>
  4319fc:	mov	w19, #0xffffffea            	// #-22
  431a00:	mov	w0, wzr
  431a04:	bl	40a2c0 <log_get_max_level_realm@plt>
  431a08:	cmp	w0, #0x7
  431a0c:	b.lt	431a38 <dhcp_lease_parse_options+0x4e4>  // b.tstop
  431a10:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  431a14:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  431a18:	adrp	x5, 440000 <worker_hash_op+0xbdf8>
  431a1c:	add	x2, x2, #0x656
  431a20:	add	x4, x4, #0xc47
  431a24:	add	x5, x5, #0xf73
  431a28:	mov	w0, #0x7                   	// #7
  431a2c:	mov	w3, #0x2a6                 	// #678
  431a30:	mov	w1, w19
  431a34:	bl	40a2d0 <log_internal_realm@plt>
  431a38:	mov	x20, xzr
  431a3c:	b	431fac <dhcp_lease_parse_options+0xa58>
  431a40:	cbz	x20, 432114 <dhcp_lease_parse_options+0xbc0>
  431a44:	and	w8, w21, #0xff
  431a48:	cmp	w8, #0x4
  431a4c:	b.ne	431d50 <dhcp_lease_parse_options+0x7fc>  // b.any
  431a50:	ldr	w8, [x20]
  431a54:	mov	w9, #0x1                   	// #1
  431a58:	strb	w9, [x19, #36]
  431a5c:	str	w8, [x19, #40]
  431a60:	b	4315c0 <dhcp_lease_parse_options+0x6c>
  431a64:	cbz	x20, 43215c <dhcp_lease_parse_options+0xc08>
  431a68:	tst	w21, #0xff
  431a6c:	b.eq	431dc4 <dhcp_lease_parse_options+0x870>  // b.none
  431a70:	and	x21, x21, #0xff
  431a74:	tst	x21, #0x3
  431a78:	b.eq	431fb8 <dhcp_lease_parse_options+0xa64>  // b.none
  431a7c:	mov	w19, #0xffffffea            	// #-22
  431a80:	mov	w0, wzr
  431a84:	bl	40a2c0 <log_get_max_level_realm@plt>
  431a88:	cmp	w0, #0x7
  431a8c:	b.lt	4315c0 <dhcp_lease_parse_options+0x6c>  // b.tstop
  431a90:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  431a94:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  431a98:	adrp	x5, 440000 <worker_hash_op+0xbdf8>
  431a9c:	add	x2, x2, #0x656
  431aa0:	add	x4, x4, #0xc47
  431aa4:	add	x5, x5, #0xd6b
  431aa8:	mov	w0, #0x7                   	// #7
  431aac:	mov	w3, #0x253                 	// #595
  431ab0:	b	43203c <dhcp_lease_parse_options+0xae8>
  431ab4:	cbz	x20, 432210 <dhcp_lease_parse_options+0xcbc>
  431ab8:	tst	w21, #0xff
  431abc:	b.eq	431dcc <dhcp_lease_parse_options+0x878>  // b.none
  431ac0:	and	w8, w21, #0xff
  431ac4:	sub	w8, w8, #0x1
  431ac8:	tst	w8, #0x3
  431acc:	b.eq	431fe0 <dhcp_lease_parse_options+0xa8c>  // b.none
  431ad0:	mov	w19, #0xffffffea            	// #-22
  431ad4:	mov	w0, wzr
  431ad8:	bl	40a2c0 <log_get_max_level_realm@plt>
  431adc:	cmp	w0, #0x7
  431ae0:	b.lt	4315c0 <dhcp_lease_parse_options+0x6c>  // b.tstop
  431ae4:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  431ae8:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  431aec:	adrp	x5, 440000 <worker_hash_op+0xbdf8>
  431af0:	add	x2, x2, #0x656
  431af4:	add	x4, x4, #0xc47
  431af8:	add	x5, x5, #0xd94
  431afc:	mov	w0, #0x7                   	// #7
  431b00:	mov	w3, #0x259                 	// #601
  431b04:	b	43203c <dhcp_lease_parse_options+0xae8>
  431b08:	and	x1, x21, #0xff
  431b0c:	add	x2, x19, #0x98
  431b10:	mov	x0, x20
  431b14:	bl	43236c <dhcp_lease_parse_search_domains>
  431b18:	tbz	w0, #31, 4315c0 <dhcp_lease_parse_options+0x6c>
  431b1c:	mov	w19, w0
  431b20:	mov	w0, wzr
  431b24:	bl	40a2c0 <log_get_max_level_realm@plt>
  431b28:	cmp	w0, #0x7
  431b2c:	b.lt	4315c0 <dhcp_lease_parse_options+0x6c>  // b.tstop
  431b30:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  431b34:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  431b38:	adrp	x5, 440000 <worker_hash_op+0xbdf8>
  431b3c:	add	x2, x2, #0x656
  431b40:	add	x4, x4, #0xc47
  431b44:	add	x5, x5, #0xe77
  431b48:	mov	w0, #0x7                   	// #7
  431b4c:	mov	w3, #0x279                 	// #633
  431b50:	b	43203c <dhcp_lease_parse_options+0xae8>
  431b54:	mov	w0, wzr
  431b58:	bl	40a2c0 <log_get_max_level_realm@plt>
  431b5c:	cmp	w0, #0x7
  431b60:	b.lt	4315c0 <dhcp_lease_parse_options+0x6c>  // b.tstop
  431b64:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  431b68:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  431b6c:	adrp	x5, 440000 <worker_hash_op+0xbdf8>
  431b70:	add	x2, x2, #0x656
  431b74:	add	x4, x4, #0xc47
  431b78:	add	x5, x5, #0xfc5
  431b7c:	mov	w0, #0x7                   	// #7
  431b80:	mov	w3, #0x2ce                 	// #718
  431b84:	mov	w1, wzr
  431b88:	mov	w6, w22
  431b8c:	bl	40a2d0 <log_internal_realm@plt>
  431b90:	b	4315c0 <dhcp_lease_parse_options+0x6c>
  431b94:	mov	w0, wzr
  431b98:	bl	40a2c0 <log_get_max_level_realm@plt>
  431b9c:	cmp	w0, #0x7
  431ba0:	b.lt	4315c0 <dhcp_lease_parse_options+0x6c>  // b.tstop
  431ba4:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  431ba8:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  431bac:	adrp	x5, 440000 <worker_hash_op+0xbdf8>
  431bb0:	add	x2, x2, #0x656
  431bb4:	add	x4, x4, #0xc47
  431bb8:	add	x5, x5, #0xef8
  431bbc:	mov	w0, #0x7                   	// #7
  431bc0:	mov	w1, #0xffffffea            	// #-22
  431bc4:	mov	w3, #0x28e                 	// #654
  431bc8:	bl	40a2d0 <log_internal_realm@plt>
  431bcc:	b	4315c0 <dhcp_lease_parse_options+0x6c>
  431bd0:	mov	w0, wzr
  431bd4:	bl	40a2c0 <log_get_max_level_realm@plt>
  431bd8:	cmp	w0, #0x7
  431bdc:	b.lt	431c08 <dhcp_lease_parse_options+0x6b4>  // b.tstop
  431be0:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  431be4:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  431be8:	adrp	x5, 440000 <worker_hash_op+0xbdf8>
  431bec:	add	x2, x2, #0x656
  431bf0:	add	x4, x4, #0xc47
  431bf4:	add	x5, x5, #0xde9
  431bf8:	mov	w0, #0x7                   	// #7
  431bfc:	mov	w1, #0xffffffea            	// #-22
  431c00:	mov	w3, #0x265                 	// #613
  431c04:	bl	40a2d0 <log_internal_realm@plt>
  431c08:	ldrh	w20, [x19, #136]
  431c0c:	cmp	w20, #0x23f
  431c10:	b.hi	4315c0 <dhcp_lease_parse_options+0x6c>  // b.pmore
  431c14:	mov	w0, wzr
  431c18:	bl	40a2c0 <log_get_max_level_realm@plt>
  431c1c:	cmp	w0, #0x7
  431c20:	b.lt	431c54 <dhcp_lease_parse_options+0x700>  // b.tstop
  431c24:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  431c28:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  431c2c:	adrp	x5, 440000 <worker_hash_op+0xbdf8>
  431c30:	add	x2, x2, #0x656
  431c34:	add	x4, x4, #0xc47
  431c38:	add	x5, x5, #0xe0b
  431c3c:	mov	w0, #0x7                   	// #7
  431c40:	mov	w3, #0x267                 	// #615
  431c44:	mov	w7, #0x240                 	// #576
  431c48:	mov	w1, wzr
  431c4c:	mov	w6, w20
  431c50:	bl	40a2d0 <log_internal_realm@plt>
  431c54:	mov	w8, #0x240                 	// #576
  431c58:	strh	w8, [x19, #136]
  431c5c:	b	4315c0 <dhcp_lease_parse_options+0x6c>
  431c60:	mov	w0, wzr
  431c64:	bl	40a2c0 <log_get_max_level_realm@plt>
  431c68:	cmp	w0, #0x7
  431c6c:	b.lt	4315c0 <dhcp_lease_parse_options+0x6c>  // b.tstop
  431c70:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  431c74:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  431c78:	adrp	x5, 440000 <worker_hash_op+0xbdf8>
  431c7c:	add	x2, x2, #0x656
  431c80:	add	x4, x4, #0xc47
  431c84:	add	x5, x5, #0xc89
  431c88:	mov	w0, #0x7                   	// #7
  431c8c:	mov	w1, #0xffffffea            	// #-22
  431c90:	mov	w3, #0x230                 	// #560
  431c94:	bl	40a2d0 <log_internal_realm@plt>
  431c98:	b	4315c0 <dhcp_lease_parse_options+0x6c>
  431c9c:	mov	w0, wzr
  431ca0:	bl	40a2c0 <log_get_max_level_realm@plt>
  431ca4:	cmp	w0, #0x7
  431ca8:	b.lt	4315c0 <dhcp_lease_parse_options+0x6c>  // b.tstop
  431cac:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  431cb0:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  431cb4:	adrp	x5, 440000 <worker_hash_op+0xbdf8>
  431cb8:	add	x2, x2, #0x656
  431cbc:	add	x4, x4, #0xc47
  431cc0:	add	x5, x5, #0xcb9
  431cc4:	mov	w0, #0x7                   	// #7
  431cc8:	mov	w1, #0xffffffea            	// #-22
  431ccc:	mov	w3, #0x237                 	// #567
  431cd0:	bl	40a2d0 <log_internal_realm@plt>
  431cd4:	b	4315c0 <dhcp_lease_parse_options+0x6c>
  431cd8:	mov	w0, wzr
  431cdc:	bl	40a2c0 <log_get_max_level_realm@plt>
  431ce0:	cmp	w0, #0x7
  431ce4:	b.lt	4315c0 <dhcp_lease_parse_options+0x6c>  // b.tstop
  431ce8:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  431cec:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  431cf0:	adrp	x5, 440000 <worker_hash_op+0xbdf8>
  431cf4:	add	x2, x2, #0x656
  431cf8:	add	x4, x4, #0xc47
  431cfc:	add	x5, x5, #0xc60
  431d00:	mov	w0, #0x7                   	// #7
  431d04:	mov	w1, #0xffffffea            	// #-22
  431d08:	mov	w3, #0x229                 	// #553
  431d0c:	bl	40a2d0 <log_internal_realm@plt>
  431d10:	b	4315c0 <dhcp_lease_parse_options+0x6c>
  431d14:	mov	w0, wzr
  431d18:	bl	40a2c0 <log_get_max_level_realm@plt>
  431d1c:	cmp	w0, #0x7
  431d20:	b.lt	4315c0 <dhcp_lease_parse_options+0x6c>  // b.tstop
  431d24:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  431d28:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  431d2c:	adrp	x5, 440000 <worker_hash_op+0xbdf8>
  431d30:	add	x2, x2, #0x656
  431d34:	add	x4, x4, #0xc47
  431d38:	add	x5, x5, #0xf1e
  431d3c:	mov	w0, #0x7                   	// #7
  431d40:	mov	w1, #0xffffffea            	// #-22
  431d44:	mov	w3, #0x294                 	// #660
  431d48:	bl	40a2d0 <log_internal_realm@plt>
  431d4c:	b	4315c0 <dhcp_lease_parse_options+0x6c>
  431d50:	mov	w0, wzr
  431d54:	bl	40a2c0 <log_get_max_level_realm@plt>
  431d58:	cmp	w0, #0x7
  431d5c:	b.lt	4315c0 <dhcp_lease_parse_options+0x6c>  // b.tstop
  431d60:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  431d64:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  431d68:	adrp	x5, 440000 <worker_hash_op+0xbdf8>
  431d6c:	add	x2, x2, #0x656
  431d70:	add	x4, x4, #0xc47
  431d74:	add	x5, x5, #0xce3
  431d78:	mov	w0, #0x7                   	// #7
  431d7c:	mov	w1, #0xffffffea            	// #-22
  431d80:	mov	w3, #0x23f                 	// #575
  431d84:	bl	40a2d0 <log_internal_realm@plt>
  431d88:	b	4315c0 <dhcp_lease_parse_options+0x6c>
  431d8c:	ldr	x0, [x19, #192]
  431d90:	bl	40a320 <free@plt>
  431d94:	stp	xzr, xzr, [x19, #192]
  431d98:	b	4315c0 <dhcp_lease_parse_options+0x6c>
  431d9c:	add	x19, x19, #0x40
  431da0:	b	431dd0 <dhcp_lease_parse_options+0x87c>
  431da4:	add	x19, x19, #0x30
  431da8:	b	431dd0 <dhcp_lease_parse_options+0x87c>
  431dac:	ldr	x0, [x19, #168]
  431db0:	bl	40a320 <free@plt>
  431db4:	str	xzr, [x19, #168]
  431db8:	b	4315c0 <dhcp_lease_parse_options+0x6c>
  431dbc:	mov	x20, xzr
  431dc0:	b	431f54 <dhcp_lease_parse_options+0xa00>
  431dc4:	add	x19, x19, #0x50
  431dc8:	b	431dd0 <dhcp_lease_parse_options+0x87c>
  431dcc:	add	x19, x19, #0x60
  431dd0:	ldr	x0, [x19]
  431dd4:	bl	40a320 <free@plt>
  431dd8:	stp	xzr, xzr, [x19]
  431ddc:	b	4315c0 <dhcp_lease_parse_options+0x6c>
  431de0:	mov	w19, #0xffffffea            	// #-22
  431de4:	b	43200c <dhcp_lease_parse_options+0xab8>
  431de8:	mov	w0, #0xfffffff4            	// #-12
  431dec:	b	4315c4 <dhcp_lease_parse_options+0x70>
  431df0:	ldr	x8, [x19, #120]
  431df4:	add	x0, x19, #0x70
  431df8:	add	x1, x19, #0x80
  431dfc:	mov	w3, #0xc                   	// #12
  431e00:	add	x2, x8, x24, lsr #3
  431e04:	bl	40bc80 <greedy_realloc@plt>
  431e08:	cbz	x0, 432048 <dhcp_lease_parse_options+0xaf4>
  431e0c:	and	w8, w21, #0xff
  431e10:	cmp	w8, #0x8
  431e14:	b.cc	4315c0 <dhcp_lease_parse_options+0x6c>  // b.lo, b.ul, b.last
  431e18:	adrp	x21, 440000 <worker_hash_op+0xbdf8>
  431e1c:	adrp	x22, 441000 <worker_hash_op+0xcdf8>
  431e20:	adrp	x23, 441000 <worker_hash_op+0xcdf8>
  431e24:	mov	w25, #0xc                   	// #12
  431e28:	mov	w26, #0x21                  	// #33
  431e2c:	add	x21, x21, #0x656
  431e30:	add	x22, x22, #0xc06
  431e34:	add	x23, x23, #0xc19
  431e38:	b	431e44 <dhcp_lease_parse_options+0x8f0>
  431e3c:	cmp	x24, #0x7
  431e40:	b.ls	4315c0 <dhcp_lease_parse_options+0x6c>  // b.plast
  431e44:	ldp	x27, x28, [x19, #112]
  431e48:	mov	x0, x20
  431e4c:	madd	x8, x28, x25, x27
  431e50:	add	x1, x8, #0x8
  431e54:	strb	w26, [x8, #9]
  431e58:	bl	40bec0 <in4_addr_default_prefixlen@plt>
  431e5c:	tbnz	w0, #31, 431e9c <dhcp_lease_parse_options+0x948>
  431e60:	cbz	x20, 432114 <dhcp_lease_parse_options+0xbc0>
  431e64:	ldr	w0, [x20]
  431e68:	bl	40bed0 <inet_netof@plt>
  431e6c:	mov	w1, wzr
  431e70:	bl	40bee0 <inet_makeaddr@plt>
  431e74:	madd	x8, x28, x25, x27
  431e78:	str	w0, [x8]
  431e7c:	ldr	w9, [x20, #4]
  431e80:	add	x20, x20, #0x8
  431e84:	sub	x24, x24, #0x8
  431e88:	str	w9, [x8, #4]
  431e8c:	ldr	x8, [x19, #120]
  431e90:	add	x8, x8, #0x1
  431e94:	str	x8, [x19, #120]
  431e98:	b	431e3c <dhcp_lease_parse_options+0x8e8>
  431e9c:	mov	w0, wzr
  431ea0:	bl	40a2c0 <log_get_max_level_realm@plt>
  431ea4:	cmp	w0, #0x7
  431ea8:	b.lt	431e3c <dhcp_lease_parse_options+0x8e8>  // b.tstop
  431eac:	mov	w0, #0x7                   	// #7
  431eb0:	mov	w3, #0x1d8                 	// #472
  431eb4:	mov	w1, wzr
  431eb8:	mov	x2, x21
  431ebc:	mov	x4, x22
  431ec0:	mov	x5, x23
  431ec4:	bl	40a2d0 <log_internal_realm@plt>
  431ec8:	b	431e3c <dhcp_lease_parse_options+0x8e8>
  431ecc:	and	x1, x21, #0xfc
  431ed0:	mov	x0, x20
  431ed4:	bl	40beb0 <memdup@plt>
  431ed8:	cbz	x0, 432060 <dhcp_lease_parse_options+0xb0c>
  431edc:	mov	x20, x0
  431ee0:	ldr	x0, [x19, #64]
  431ee4:	lsr	x21, x21, #2
  431ee8:	bl	40a320 <free@plt>
  431eec:	stp	x20, x21, [x19, #64]
  431ef0:	b	4315c0 <dhcp_lease_parse_options+0x6c>
  431ef4:	and	x1, x21, #0xfc
  431ef8:	mov	x0, x20
  431efc:	bl	40beb0 <memdup@plt>
  431f00:	cbz	x0, 432078 <dhcp_lease_parse_options+0xb24>
  431f04:	mov	x20, x0
  431f08:	ldr	x0, [x19, #48]
  431f0c:	lsr	x21, x21, #2
  431f10:	bl	40a320 <free@plt>
  431f14:	stp	x20, x21, [x19, #48]
  431f18:	b	4315c0 <dhcp_lease_parse_options+0x6c>
  431f1c:	mov	x0, x20
  431f20:	mov	x1, x21
  431f24:	bl	40bef0 <memdup_suffix0@plt>
  431f28:	cbz	x0, 432090 <dhcp_lease_parse_options+0xb3c>
  431f2c:	mov	x20, x0
  431f30:	ldr	x0, [x19, #168]
  431f34:	bl	40a320 <free@plt>
  431f38:	str	x20, [x19, #168]
  431f3c:	b	4315c0 <dhcp_lease_parse_options+0x6c>
  431f40:	mov	x0, x20
  431f44:	mov	x1, x21
  431f48:	bl	40bef0 <memdup_suffix0@plt>
  431f4c:	cbz	x0, 4320a8 <dhcp_lease_parse_options+0xb54>
  431f50:	mov	x20, x0
  431f54:	mov	w1, #0x7                   	// #7
  431f58:	mov	x0, x20
  431f5c:	bl	40bf00 <timezone_is_valid@plt>
  431f60:	tbz	w0, #0, 431f74 <dhcp_lease_parse_options+0xa20>
  431f64:	ldr	x0, [x19, #208]
  431f68:	bl	40a320 <free@plt>
  431f6c:	str	x20, [x19, #208]
  431f70:	b	4315c0 <dhcp_lease_parse_options+0x6c>
  431f74:	mov	w0, wzr
  431f78:	bl	40a2c0 <log_get_max_level_realm@plt>
  431f7c:	cmp	w0, #0x7
  431f80:	b.lt	431fac <dhcp_lease_parse_options+0xa58>  // b.tstop
  431f84:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  431f88:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  431f8c:	adrp	x5, 440000 <worker_hash_op+0xbdf8>
  431f90:	add	x2, x2, #0x656
  431f94:	add	x4, x4, #0xc47
  431f98:	add	x5, x5, #0xfa1
  431f9c:	mov	w0, #0x7                   	// #7
  431fa0:	mov	w3, #0x2ab                 	// #683
  431fa4:	mov	w1, wzr
  431fa8:	bl	40a2d0 <log_internal_realm@plt>
  431fac:	mov	x0, x20
  431fb0:	bl	40a320 <free@plt>
  431fb4:	b	4315c0 <dhcp_lease_parse_options+0x6c>
  431fb8:	and	x1, x21, #0xfc
  431fbc:	mov	x0, x20
  431fc0:	bl	40beb0 <memdup@plt>
  431fc4:	cbz	x0, 4320c0 <dhcp_lease_parse_options+0xb6c>
  431fc8:	mov	x20, x0
  431fcc:	ldr	x0, [x19, #80]
  431fd0:	lsr	x21, x21, #2
  431fd4:	bl	40a320 <free@plt>
  431fd8:	stp	x20, x21, [x19, #80]
  431fdc:	b	4315c0 <dhcp_lease_parse_options+0x6c>
  431fe0:	lsr	w21, w8, #2
  431fe4:	add	x0, x20, #0x1
  431fe8:	lsl	x1, x21, #2
  431fec:	bl	40beb0 <memdup@plt>
  431ff0:	cbz	x0, 4320d8 <dhcp_lease_parse_options+0xb84>
  431ff4:	mov	x20, x0
  431ff8:	ldr	x0, [x19, #96]
  431ffc:	bl	40a320 <free@plt>
  432000:	stp	x20, x21, [x19, #96]
  432004:	b	4315c0 <dhcp_lease_parse_options+0x6c>
  432008:	mov	w19, #0xfffffff4            	// #-12
  43200c:	mov	w0, wzr
  432010:	bl	40a2c0 <log_get_max_level_realm@plt>
  432014:	cmp	w0, #0x7
  432018:	b.lt	4315c0 <dhcp_lease_parse_options+0x6c>  // b.tstop
  43201c:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  432020:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  432024:	adrp	x5, 440000 <worker_hash_op+0xbdf8>
  432028:	add	x2, x2, #0x656
  43202c:	add	x4, x4, #0xc47
  432030:	add	x5, x5, #0xf44
  432034:	mov	w0, #0x7                   	// #7
  432038:	mov	w3, #0x29e                 	// #670
  43203c:	mov	w1, w19
  432040:	bl	40a2d0 <log_internal_realm@plt>
  432044:	b	4315c0 <dhcp_lease_parse_options+0x6c>
  432048:	mov	w19, #0xfffffff4            	// #-12
  43204c:	mov	w0, wzr
  432050:	bl	40a2c0 <log_get_max_level_realm@plt>
  432054:	cmp	w0, #0x7
  432058:	b.lt	4315c0 <dhcp_lease_parse_options+0x6c>  // b.tstop
  43205c:	b	431728 <dhcp_lease_parse_options+0x1d4>
  432060:	mov	w19, #0xfffffff4            	// #-12
  432064:	mov	w0, wzr
  432068:	bl	40a2c0 <log_get_max_level_realm@plt>
  43206c:	cmp	w0, #0x7
  432070:	b.lt	4315c0 <dhcp_lease_parse_options+0x6c>  // b.tstop
  432074:	b	431828 <dhcp_lease_parse_options+0x2d4>
  432078:	mov	w19, #0xfffffff4            	// #-12
  43207c:	mov	w0, wzr
  432080:	bl	40a2c0 <log_get_max_level_realm@plt>
  432084:	cmp	w0, #0x7
  432088:	b.lt	4315c0 <dhcp_lease_parse_options+0x6c>  // b.tstop
  43208c:	b	431930 <dhcp_lease_parse_options+0x3dc>
  432090:	mov	w19, #0xfffffff4            	// #-12
  432094:	mov	w0, wzr
  432098:	bl	40a2c0 <log_get_max_level_realm@plt>
  43209c:	cmp	w0, #0x7
  4320a0:	b.lt	4315c0 <dhcp_lease_parse_options+0x6c>  // b.tstop
  4320a4:	b	43198c <dhcp_lease_parse_options+0x438>
  4320a8:	mov	w19, #0xfffffff4            	// #-12
  4320ac:	mov	w0, wzr
  4320b0:	bl	40a2c0 <log_get_max_level_realm@plt>
  4320b4:	cmp	w0, #0x7
  4320b8:	b.ge	431a10 <dhcp_lease_parse_options+0x4bc>  // b.tcont
  4320bc:	b	431a38 <dhcp_lease_parse_options+0x4e4>
  4320c0:	mov	w19, #0xfffffff4            	// #-12
  4320c4:	mov	w0, wzr
  4320c8:	bl	40a2c0 <log_get_max_level_realm@plt>
  4320cc:	cmp	w0, #0x7
  4320d0:	b.lt	4315c0 <dhcp_lease_parse_options+0x6c>  // b.tstop
  4320d4:	b	431a90 <dhcp_lease_parse_options+0x53c>
  4320d8:	mov	w19, #0xfffffff4            	// #-12
  4320dc:	mov	w0, wzr
  4320e0:	bl	40a2c0 <log_get_max_level_realm@plt>
  4320e4:	cmp	w0, #0x7
  4320e8:	b.lt	4315c0 <dhcp_lease_parse_options+0x6c>  // b.tstop
  4320ec:	b	431ae4 <dhcp_lease_parse_options+0x590>
  4320f0:	adrp	x1, 440000 <worker_hash_op+0xbdf8>
  4320f4:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  4320f8:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  4320fc:	add	x1, x1, #0x64d
  432100:	add	x2, x2, #0x656
  432104:	add	x4, x4, #0xc02
  432108:	mov	w3, #0x222                 	// #546
  43210c:	mov	w0, wzr
  432110:	bl	40a630 <log_assert_failed_realm@plt>
  432114:	adrp	x1, 43a000 <worker_hash_op+0x5df8>
  432118:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  43211c:	adrp	x4, 441000 <worker_hash_op+0xcdf8>
  432120:	add	x1, x1, #0x5e1
  432124:	add	x2, x2, #0x656
  432128:	add	x4, x4, #0xabe
  43212c:	mov	w3, #0x140                 	// #320
  432130:	mov	w0, wzr
  432134:	bl	40a630 <log_assert_failed_realm@plt>
  432138:	adrp	x1, 43a000 <worker_hash_op+0x5df8>
  43213c:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  432140:	adrp	x4, 441000 <worker_hash_op+0xcdf8>
  432144:	add	x1, x1, #0x5e1
  432148:	add	x2, x2, #0x656
  43214c:	add	x4, x4, #0xa7b
  432150:	mov	w3, #0x124                 	// #292
  432154:	mov	w0, wzr
  432158:	bl	40a630 <log_assert_failed_realm@plt>
  43215c:	adrp	x1, 43a000 <worker_hash_op+0x5df8>
  432160:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  432164:	adrp	x4, 441000 <worker_hash_op+0xcdf8>
  432168:	add	x1, x1, #0x5e1
  43216c:	add	x2, x2, #0x656
  432170:	add	x4, x4, #0xaf6
  432174:	mov	w3, #0x183                 	// #387
  432178:	mov	w0, wzr
  43217c:	bl	40a630 <log_assert_failed_realm@plt>
  432180:	adrp	x1, 43a000 <worker_hash_op+0x5df8>
  432184:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  432188:	adrp	x4, 441000 <worker_hash_op+0xcdf8>
  43218c:	add	x1, x1, #0x5e1
  432190:	add	x2, x2, #0x656
  432194:	add	x4, x4, #0xce1
  432198:	mov	w3, #0x14b                 	// #331
  43219c:	mov	w0, wzr
  4321a0:	bl	40a630 <log_assert_failed_realm@plt>
  4321a4:	adrp	x1, 441000 <worker_hash_op+0xcdf8>
  4321a8:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  4321ac:	adrp	x4, 441000 <worker_hash_op+0xcdf8>
  4321b0:	add	x1, x1, #0xb96
  4321b4:	add	x2, x2, #0x656
  4321b8:	add	x4, x4, #0xd1a
  4321bc:	mov	w3, #0x1ef                 	// #495
  4321c0:	mov	w0, wzr
  4321c4:	bl	40a630 <log_assert_failed_realm@plt>
  4321c8:	adrp	x1, 441000 <worker_hash_op+0xcdf8>
  4321cc:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  4321d0:	adrp	x4, 441000 <worker_hash_op+0xcdf8>
  4321d4:	add	x1, x1, #0xb96
  4321d8:	add	x2, x2, #0x656
  4321dc:	add	x4, x4, #0xba9
  4321e0:	mov	w3, #0x1c3                 	// #451
  4321e4:	mov	w0, wzr
  4321e8:	bl	40a630 <log_assert_failed_realm@plt>
  4321ec:	adrp	x1, 43a000 <worker_hash_op+0x5df8>
  4321f0:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  4321f4:	adrp	x4, 441000 <worker_hash_op+0xcdf8>
  4321f8:	add	x1, x1, #0x5e1
  4321fc:	add	x2, x2, #0x656
  432200:	add	x4, x4, #0xc65
  432204:	mov	w3, #0x132                 	// #306
  432208:	mov	w0, wzr
  43220c:	bl	40a630 <log_assert_failed_realm@plt>
  432210:	adrp	x1, 43a000 <worker_hash_op+0x5df8>
  432214:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  432218:	adrp	x4, 441000 <worker_hash_op+0xcdf8>
  43221c:	add	x1, x1, #0x5e1
  432220:	add	x2, x2, #0x656
  432224:	add	x4, x4, #0xb45
  432228:	mov	w3, #0x1a0                 	// #416
  43222c:	mov	w0, wzr
  432230:	bl	40a630 <log_assert_failed_realm@plt>

0000000000432234 <lease_parse_domain>:
  432234:	stp	x29, x30, [sp, #-48]!
  432238:	mov	x29, sp
  43223c:	str	x21, [sp, #16]
  432240:	stp	x20, x19, [sp, #32]
  432244:	str	xzr, [x29, #24]
  432248:	cbz	x0, 432328 <lease_parse_domain+0xf4>
  43224c:	mov	x20, x2
  432250:	cbz	x2, 432348 <lease_parse_domain+0x114>
  432254:	mov	x19, x1
  432258:	cbz	x1, 43227c <lease_parse_domain+0x48>
  43225c:	sub	x2, x19, #0x1
  432260:	mov	w1, wzr
  432264:	mov	x21, x0
  432268:	bl	40b180 <memchr@plt>
  43226c:	cbz	x0, 4322b0 <lease_parse_domain+0x7c>
  432270:	mov	x19, xzr
  432274:	mov	w21, #0xffffffea            	// #-22
  432278:	b	43228c <lease_parse_domain+0x58>
  43227c:	ldr	x0, [x20]
  432280:	bl	40a320 <free@plt>
  432284:	mov	w21, wzr
  432288:	str	xzr, [x20]
  43228c:	ldr	x0, [x29, #24]
  432290:	bl	40a320 <free@plt>
  432294:	mov	x0, x19
  432298:	bl	40a320 <free@plt>
  43229c:	mov	w0, w21
  4322a0:	ldp	x20, x19, [sp, #32]
  4322a4:	ldr	x21, [sp, #16]
  4322a8:	ldp	x29, x30, [sp], #48
  4322ac:	ret
  4322b0:	mov	x0, x21
  4322b4:	mov	x1, x19
  4322b8:	bl	40bef0 <memdup_suffix0@plt>
  4322bc:	mov	x19, x0
  4322c0:	cbz	x0, 4322fc <lease_parse_domain+0xc8>
  4322c4:	add	x3, x29, #0x18
  4322c8:	mov	x0, x19
  4322cc:	mov	x1, xzr
  4322d0:	mov	w2, wzr
  4322d4:	bl	40bf10 <dns_name_concat@plt>
  4322d8:	tbnz	w0, #31, 432304 <lease_parse_domain+0xd0>
  4322dc:	ldr	x0, [x29, #24]
  4322e0:	bl	40bf20 <is_localhost@plt>
  4322e4:	tbnz	w0, #0, 4322f4 <lease_parse_domain+0xc0>
  4322e8:	ldr	x0, [x29, #24]
  4322ec:	bl	40bf30 <dns_name_is_root@plt>
  4322f0:	tbz	w0, #0, 43230c <lease_parse_domain+0xd8>
  4322f4:	mov	w21, #0xffffffea            	// #-22
  4322f8:	b	43228c <lease_parse_domain+0x58>
  4322fc:	mov	w21, #0xfffffff4            	// #-12
  432300:	b	43228c <lease_parse_domain+0x58>
  432304:	mov	w21, w0
  432308:	b	43228c <lease_parse_domain+0x58>
  43230c:	ldr	x0, [x20]
  432310:	bl	40a320 <free@plt>
  432314:	ldr	x8, [x29, #24]
  432318:	mov	w21, wzr
  43231c:	str	x8, [x20]
  432320:	str	xzr, [x29, #24]
  432324:	b	43228c <lease_parse_domain+0x58>
  432328:	adrp	x1, 43a000 <worker_hash_op+0x5df8>
  43232c:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  432330:	adrp	x4, 441000 <worker_hash_op+0xcdf8>
  432334:	add	x1, x1, #0x5e1
  432338:	add	x2, x2, #0x656
  43233c:	add	x4, x4, #0xca8
  432340:	mov	w3, #0x168                 	// #360
  432344:	bl	40a630 <log_assert_failed_realm@plt>
  432348:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  43234c:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  432350:	adrp	x4, 441000 <worker_hash_op+0xcdf8>
  432354:	add	x1, x1, #0xfa2
  432358:	add	x2, x2, #0x656
  43235c:	add	x4, x4, #0xca8
  432360:	mov	w3, #0x169                 	// #361
  432364:	mov	w0, wzr
  432368:	bl	40a630 <log_assert_failed_realm@plt>

000000000043236c <dhcp_lease_parse_search_domains>:
  43236c:	sub	sp, sp, #0x90
  432370:	stp	x29, x30, [sp, #48]
  432374:	add	x29, sp, #0x30
  432378:	stp	x28, x27, [sp, #64]
  43237c:	stp	x26, x25, [sp, #80]
  432380:	stp	x24, x23, [sp, #96]
  432384:	stp	x22, x21, [sp, #112]
  432388:	stp	x20, x19, [sp, #128]
  43238c:	stur	xzr, [x29, #-8]
  432390:	cbz	x2, 4325f4 <dhcp_lease_parse_search_domains+0x288>
  432394:	mov	x21, x0
  432398:	cbz	x0, 4325c8 <dhcp_lease_parse_search_domains+0x25c>
  43239c:	mov	x20, x1
  4323a0:	cbz	x1, 4325c8 <dhcp_lease_parse_search_domains+0x25c>
  4323a4:	mov	x27, xzr
  4323a8:	mov	w25, #0xfd                  	// #253
  4323ac:	stp	x2, xzr, [sp]
  4323b0:	b	4323d0 <dhcp_lease_parse_search_domains+0x64>
  4323b4:	mov	w8, #0xfffffff4            	// #-12
  4323b8:	mov	w19, wzr
  4323bc:	str	w8, [sp, #20]
  4323c0:	mov	x27, x24
  4323c4:	ldur	x0, [x29, #-16]
  4323c8:	bl	40a320 <free@plt>
  4323cc:	tbz	w19, #0, 432598 <dhcp_lease_parse_search_domains+0x22c>
  4323d0:	cmp	x27, x20
  4323d4:	b.cs	43257c <dhcp_lease_parse_search_domains+0x210>  // b.hs, b.nlast
  4323d8:	stur	xzr, [x29, #-16]
  4323dc:	str	xzr, [sp, #24]
  4323e0:	ldrb	w8, [x21, x27]
  4323e4:	add	x24, x27, #0x1
  4323e8:	cbz	w8, 4324cc <dhcp_lease_parse_search_domains+0x160>
  4323ec:	mov	x19, xzr
  4323f0:	mov	x28, xzr
  4323f4:	mov	w22, #0x1                   	// #1
  4323f8:	mov	x26, x27
  4323fc:	b	43242c <dhcp_lease_parse_search_domains+0xc0>
  432400:	ldur	x8, [x29, #-16]
  432404:	mov	w3, #0xfd                  	// #253
  432408:	mov	x1, x23
  43240c:	add	x2, x8, x19
  432410:	bl	40bf40 <dns_label_escape@plt>
  432414:	tbnz	w0, #31, 432570 <dhcp_lease_parse_search_domains+0x204>
  432418:	mov	w22, wzr
  43241c:	add	x19, x19, w0, uxtw
  432420:	ldrb	w8, [x21, x27]
  432424:	add	x24, x27, #0x1
  432428:	cbz	w8, 4324d4 <dhcp_lease_parse_search_domains+0x168>
  43242c:	and	w9, w8, #0xff
  432430:	cmp	w9, #0x3f
  432434:	b.hi	432488 <dhcp_lease_parse_search_domains+0x11c>  // b.pmore
  432438:	and	x23, x8, #0xff
  43243c:	add	x27, x24, x23
  432440:	cmp	x27, x20
  432444:	b.cs	43253c <dhcp_lease_parse_search_domains+0x1d0>  // b.hs, b.nlast
  432448:	tst	w22, #0x1
  43244c:	cinc	x8, x25, eq  // eq = none
  432450:	add	x2, x8, x19
  432454:	sub	x0, x29, #0x10
  432458:	add	x1, sp, #0x18
  43245c:	mov	w3, #0x1                   	// #1
  432460:	bl	40bc80 <greedy_realloc@plt>
  432464:	cbz	x0, 43254c <dhcp_lease_parse_search_domains+0x1e0>
  432468:	add	x0, x21, x24
  43246c:	tbnz	w22, #0, 432400 <dhcp_lease_parse_search_domains+0x94>
  432470:	ldur	x8, [x29, #-16]
  432474:	add	x9, x19, #0x1
  432478:	mov	w10, #0x2e                  	// #46
  43247c:	strb	w10, [x8, x19]
  432480:	mov	x19, x9
  432484:	b	432400 <dhcp_lease_parse_search_domains+0x94>
  432488:	cmp	w9, #0xc0
  43248c:	b.cc	432530 <dhcp_lease_parse_search_domains+0x1c4>  // b.lo, b.ul, b.last
  432490:	cmp	x24, x20
  432494:	b.cs	432530 <dhcp_lease_parse_search_domains+0x1c4>  // b.hs, b.nlast
  432498:	add	x9, x27, #0x2
  43249c:	ldrb	w27, [x21, x24]
  4324a0:	and	x8, x8, #0x3f
  4324a4:	bfi	x27, x8, #8, #6
  4324a8:	cmp	x27, x26
  4324ac:	b.cs	43255c <dhcp_lease_parse_search_domains+0x1f0>  // b.hs, b.nlast
  4324b0:	cmp	x28, #0x0
  4324b4:	csel	x28, x9, x28, eq  // eq = none
  4324b8:	mov	x26, x27
  4324bc:	ldrb	w8, [x21, x27]
  4324c0:	add	x24, x27, #0x1
  4324c4:	cbnz	w8, 43242c <dhcp_lease_parse_search_domains+0xc0>
  4324c8:	b	4324d4 <dhcp_lease_parse_search_domains+0x168>
  4324cc:	mov	x28, xzr
  4324d0:	mov	x19, xzr
  4324d4:	add	x2, x19, #0x1
  4324d8:	sub	x0, x29, #0x10
  4324dc:	add	x1, sp, #0x18
  4324e0:	mov	w3, #0x1                   	// #1
  4324e4:	bl	40bc80 <greedy_realloc@plt>
  4324e8:	cbz	x0, 4323b4 <dhcp_lease_parse_search_domains+0x48>
  4324ec:	ldur	x8, [x29, #-16]
  4324f0:	sub	x0, x29, #0x8
  4324f4:	strb	wzr, [x8, x19]
  4324f8:	ldur	x1, [x29, #-16]
  4324fc:	bl	40b190 <strv_extend@plt>
  432500:	tbnz	w0, #31, 432520 <dhcp_lease_parse_search_domains+0x1b4>
  432504:	ldr	x8, [sp, #8]
  432508:	cmp	x28, #0x0
  43250c:	csel	x27, x24, x28, eq  // eq = none
  432510:	mov	w19, #0x1                   	// #1
  432514:	add	x8, x8, #0x1
  432518:	str	x8, [sp, #8]
  43251c:	b	4323c4 <dhcp_lease_parse_search_domains+0x58>
  432520:	mov	w19, wzr
  432524:	mov	x27, x24
  432528:	str	w0, [sp, #20]
  43252c:	b	4323c4 <dhcp_lease_parse_search_domains+0x58>
  432530:	mov	w19, wzr
  432534:	mov	x27, x24
  432538:	b	432540 <dhcp_lease_parse_search_domains+0x1d4>
  43253c:	mov	w19, wzr
  432540:	mov	w8, #0xffffffb6            	// #-74
  432544:	str	w8, [sp, #20]
  432548:	b	4323c4 <dhcp_lease_parse_search_domains+0x58>
  43254c:	mov	w8, #0xfffffff4            	// #-12
  432550:	mov	w19, wzr
  432554:	str	w8, [sp, #20]
  432558:	b	4323c4 <dhcp_lease_parse_search_domains+0x58>
  43255c:	mov	w8, #0xffffffb6            	// #-74
  432560:	mov	w19, wzr
  432564:	str	w8, [sp, #20]
  432568:	mov	x27, x9
  43256c:	b	4323c4 <dhcp_lease_parse_search_domains+0x58>
  432570:	mov	w19, wzr
  432574:	str	w0, [sp, #20]
  432578:	b	4323c4 <dhcp_lease_parse_search_domains+0x58>
  43257c:	ldur	x8, [x29, #-8]
  432580:	ldr	x9, [sp]
  432584:	stur	xzr, [x29, #-8]
  432588:	str	x8, [x9]
  43258c:	ldr	x8, [sp, #8]
  432590:	mov	w0, w8
  432594:	b	4325a8 <dhcp_lease_parse_search_domains+0x23c>
  432598:	ldur	x0, [x29, #-8]
  43259c:	cbz	x0, 4325a4 <dhcp_lease_parse_search_domains+0x238>
  4325a0:	bl	40ae30 <strv_free@plt>
  4325a4:	ldr	w0, [sp, #20]
  4325a8:	ldp	x20, x19, [sp, #128]
  4325ac:	ldp	x22, x21, [sp, #112]
  4325b0:	ldp	x24, x23, [sp, #96]
  4325b4:	ldp	x26, x25, [sp, #80]
  4325b8:	ldp	x28, x27, [sp, #64]
  4325bc:	ldp	x29, x30, [sp, #48]
  4325c0:	add	sp, sp, #0x90
  4325c4:	ret
  4325c8:	adrp	x1, 441000 <worker_hash_op+0xcdf8>
  4325cc:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  4325d0:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  4325d4:	add	x1, x1, #0x3a
  4325d8:	add	x2, x2, #0x656
  4325dc:	add	x4, x4, #0xff3
  4325e0:	mov	w3, #0x2dc                 	// #732
  4325e4:	mov	w0, wzr
  4325e8:	bl	40ac10 <log_assert_failed_return_realm@plt>
  4325ec:	mov	w0, #0xffffffc3            	// #-61
  4325f0:	b	4325a8 <dhcp_lease_parse_search_domains+0x23c>
  4325f4:	adrp	x1, 440000 <worker_hash_op+0xbdf8>
  4325f8:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  4325fc:	adrp	x4, 440000 <worker_hash_op+0xbdf8>
  432600:	add	x1, x1, #0xb3b
  432604:	add	x2, x2, #0x656
  432608:	add	x4, x4, #0xff3
  43260c:	mov	w3, #0x2db                 	// #731
  432610:	mov	w0, wzr
  432614:	bl	40a630 <log_assert_failed_realm@plt>

0000000000432618 <dhcp_lease_insert_private_option>:
  432618:	stp	x29, x30, [sp, #-80]!
  43261c:	str	x25, [sp, #16]
  432620:	stp	x24, x23, [sp, #32]
  432624:	stp	x22, x21, [sp, #48]
  432628:	stp	x20, x19, [sp, #64]
  43262c:	mov	x29, sp
  432630:	cbz	x0, 432774 <dhcp_lease_insert_private_option+0x15c>
  432634:	mov	x19, x0
  432638:	ldr	x24, [x19, #216]!
  43263c:	mov	w22, w3
  432640:	mov	x21, x2
  432644:	mov	w20, w1
  432648:	cbz	x24, 432664 <dhcp_lease_insert_private_option+0x4c>
  43264c:	ldrb	w8, [x24, #16]
  432650:	cmp	w8, w20, uxtb
  432654:	b.hi	4326bc <dhcp_lease_insert_private_option+0xa4>  // b.pmore
  432658:	b.eq	4326d4 <dhcp_lease_insert_private_option+0xbc>  // b.none
  43265c:	ldr	x24, [x24]
  432660:	cbnz	x24, 43264c <dhcp_lease_insert_private_option+0x34>
  432664:	mov	w25, wzr
  432668:	mov	w0, #0x20                  	// #32
  43266c:	bl	40a490 <malloc@plt>
  432670:	cbz	x0, 4326cc <dhcp_lease_insert_private_option+0xb4>
  432674:	mov	x23, x0
  432678:	strb	w20, [x0, #16]
  43267c:	strb	w22, [x0, #17]
  432680:	and	x1, x22, #0xff
  432684:	mov	x0, x21
  432688:	bl	40beb0 <memdup@plt>
  43268c:	str	x0, [x23, #24]
  432690:	cbz	x0, 43271c <dhcp_lease_insert_private_option+0x104>
  432694:	tbz	w25, #0, 43272c <dhcp_lease_insert_private_option+0x114>
  432698:	ldr	x8, [x24, #8]
  43269c:	mov	w0, wzr
  4326a0:	cmp	x8, #0x0
  4326a4:	str	x8, [x23, #8]
  4326a8:	csel	x8, x19, x8, eq  // eq = none
  4326ac:	str	x23, [x8]
  4326b0:	str	x24, [x23]
  4326b4:	str	x23, [x24, #8]
  4326b8:	b	43275c <dhcp_lease_insert_private_option+0x144>
  4326bc:	mov	w25, #0x1                   	// #1
  4326c0:	mov	w0, #0x20                  	// #32
  4326c4:	bl	40a490 <malloc@plt>
  4326c8:	cbnz	x0, 432674 <dhcp_lease_insert_private_option+0x5c>
  4326cc:	mov	w0, #0xfffffff4            	// #-12
  4326d0:	b	43275c <dhcp_lease_insert_private_option+0x144>
  4326d4:	mov	w0, wzr
  4326d8:	bl	40a2c0 <log_get_max_level_realm@plt>
  4326dc:	cmp	w0, #0x7
  4326e0:	mov	w0, wzr
  4326e4:	b.lt	43275c <dhcp_lease_insert_private_option+0x144>  // b.tstop
  4326e8:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  4326ec:	adrp	x4, 441000 <worker_hash_op+0xcdf8>
  4326f0:	adrp	x5, 441000 <worker_hash_op+0xcdf8>
  4326f4:	and	w6, w20, #0xff
  4326f8:	add	x2, x2, #0x656
  4326fc:	add	x4, x4, #0xa2
  432700:	add	x5, x5, #0xc3
  432704:	mov	w0, #0x7                   	// #7
  432708:	mov	w3, #0x337                 	// #823
  43270c:	mov	w1, wzr
  432710:	bl	40a2d0 <log_internal_realm@plt>
  432714:	mov	w0, wzr
  432718:	b	43275c <dhcp_lease_insert_private_option+0x144>
  43271c:	mov	x0, x23
  432720:	bl	40a320 <free@plt>
  432724:	mov	w0, #0xfffffff4            	// #-12
  432728:	b	43275c <dhcp_lease_insert_private_option+0x144>
  43272c:	ldr	x8, [x19]
  432730:	cbz	x8, 432750 <dhcp_lease_insert_private_option+0x138>
  432734:	mov	x9, x8
  432738:	ldr	x8, [x8]
  43273c:	cbnz	x8, 432734 <dhcp_lease_insert_private_option+0x11c>
  432740:	mov	w0, wzr
  432744:	stp	xzr, x9, [x23]
  432748:	str	x23, [x9]
  43274c:	b	43275c <dhcp_lease_insert_private_option+0x144>
  432750:	mov	w0, wzr
  432754:	stp	xzr, xzr, [x23]
  432758:	str	x23, [x19]
  43275c:	ldp	x20, x19, [sp, #64]
  432760:	ldp	x22, x21, [sp, #48]
  432764:	ldp	x24, x23, [sp, #32]
  432768:	ldr	x25, [sp, #16]
  43276c:	ldp	x29, x30, [sp], #80
  432770:	ret
  432774:	adrp	x1, 440000 <worker_hash_op+0xbdf8>
  432778:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  43277c:	adrp	x4, 441000 <worker_hash_op+0xcdf8>
  432780:	add	x1, x1, #0x64d
  432784:	add	x2, x2, #0x656
  432788:	add	x4, x4, #0x4c
  43278c:	mov	w3, #0x331                 	// #817
  432790:	bl	40a630 <log_assert_failed_realm@plt>

0000000000432794 <dhcp_lease_new>:
  432794:	stp	x29, x30, [sp, #-32]!
  432798:	stp	x20, x19, [sp, #16]
  43279c:	mov	x19, x0
  4327a0:	mov	w0, #0x1                   	// #1
  4327a4:	mov	w1, #0xe0                  	// #224
  4327a8:	mov	x29, sp
  4327ac:	mov	w20, #0x1                   	// #1
  4327b0:	bl	40b650 <calloc@plt>
  4327b4:	cbz	x0, 4327d4 <dhcp_lease_new+0x40>
  4327b8:	mov	x8, x0
  4327bc:	mov	w0, wzr
  4327c0:	str	w20, [x8]
  4327c4:	str	x8, [x19]
  4327c8:	ldp	x20, x19, [sp, #16]
  4327cc:	ldp	x29, x30, [sp], #32
  4327d0:	ret
  4327d4:	mov	w0, #0xfffffff4            	// #-12
  4327d8:	ldp	x20, x19, [sp, #16]
  4327dc:	ldp	x29, x30, [sp], #32
  4327e0:	ret

00000000004327e4 <dhcp_lease_save>:
  4327e4:	sub	sp, sp, #0x70
  4327e8:	stp	x29, x30, [sp, #48]
  4327ec:	add	x29, sp, #0x30
  4327f0:	str	x23, [sp, #64]
  4327f4:	stp	x22, x21, [sp, #80]
  4327f8:	stp	x20, x19, [sp, #96]
  4327fc:	str	xzr, [x29, #24]
  432800:	stur	xzr, [x29, #-8]
  432804:	cbz	x0, 432ea0 <dhcp_lease_save+0x6bc>
  432808:	mov	x19, x1
  43280c:	cbz	x1, 432ec0 <dhcp_lease_save+0x6dc>
  432810:	mov	x20, x0
  432814:	sub	x1, x29, #0x8
  432818:	add	x2, x29, #0x18
  43281c:	mov	x0, x19
  432820:	bl	40bf50 <fopen_temporary@plt>
  432824:	tbnz	w0, #31, 432be4 <dhcp_lease_save+0x400>
  432828:	ldur	x0, [x29, #-8]
  43282c:	bl	40b130 <fileno@plt>
  432830:	mov	w1, #0x1a4                 	// #420
  432834:	bl	40bf60 <fchmod@plt>
  432838:	ldur	x3, [x29, #-8]
  43283c:	adrp	x0, 441000 <worker_hash_op+0xcdf8>
  432840:	add	x0, x0, #0x127
  432844:	mov	w1, #0x26                  	// #38
  432848:	mov	w2, #0x1                   	// #1
  43284c:	bl	40bf70 <fwrite@plt>
  432850:	ldr	w8, [x20, #16]
  432854:	cbz	w8, 432888 <dhcp_lease_save+0xa4>
  432858:	ldur	x21, [x29, #-8]
  43285c:	sub	x1, x29, #0x10
  432860:	add	x2, sp, #0x10
  432864:	mov	w0, #0x2                   	// #2
  432868:	mov	w3, #0x10                  	// #16
  43286c:	stur	w8, [x29, #-16]
  432870:	bl	40be50 <inet_ntop@plt>
  432874:	adrp	x1, 441000 <worker_hash_op+0xcdf8>
  432878:	mov	x2, x0
  43287c:	add	x1, x1, #0x14e
  432880:	mov	x0, x21
  432884:	bl	40b490 <fprintf@plt>
  432888:	ldrb	w8, [x20, #28]
  43288c:	cbz	w8, 4328c4 <dhcp_lease_save+0xe0>
  432890:	ldr	w8, [x20, #32]
  432894:	ldur	x21, [x29, #-8]
  432898:	sub	x1, x29, #0x10
  43289c:	add	x2, sp, #0x10
  4328a0:	mov	w0, #0x2                   	// #2
  4328a4:	mov	w3, #0x10                  	// #16
  4328a8:	stur	w8, [x29, #-16]
  4328ac:	bl	40be50 <inet_ntop@plt>
  4328b0:	adrp	x1, 441000 <worker_hash_op+0xcdf8>
  4328b4:	mov	x2, x0
  4328b8:	add	x1, x1, #0x15a
  4328bc:	mov	x0, x21
  4328c0:	bl	40b490 <fprintf@plt>
  4328c4:	ldr	x22, [x20, #56]
  4328c8:	cbz	x22, 432914 <dhcp_lease_save+0x130>
  4328cc:	cmp	w22, #0x1
  4328d0:	b.lt	432914 <dhcp_lease_save+0x130>  // b.tstop
  4328d4:	ldur	x3, [x29, #-8]
  4328d8:	ldr	x21, [x20, #48]
  4328dc:	adrp	x0, 441000 <worker_hash_op+0xcdf8>
  4328e0:	add	x0, x0, #0x166
  4328e4:	mov	w1, #0x7                   	// #7
  4328e8:	mov	w2, #0x1                   	// #1
  4328ec:	bl	40bf70 <fwrite@plt>
  4328f0:	ldur	x0, [x29, #-8]
  4328f4:	and	x2, x22, #0xffffffff
  4328f8:	mov	x1, x21
  4328fc:	mov	w3, wzr
  432900:	mov	x4, xzr
  432904:	bl	42fe40 <serialize_in_addrs>
  432908:	ldur	x1, [x29, #-8]
  43290c:	mov	w0, #0xa                   	// #10
  432910:	bl	40be70 <fputc@plt>
  432914:	ldr	w8, [x20, #20]
  432918:	cbz	w8, 43294c <dhcp_lease_save+0x168>
  43291c:	ldur	x21, [x29, #-8]
  432920:	sub	x1, x29, #0x10
  432924:	add	x2, sp, #0x10
  432928:	mov	w0, #0x2                   	// #2
  43292c:	mov	w3, #0x10                  	// #16
  432930:	stur	w8, [x29, #-16]
  432934:	bl	40be50 <inet_ntop@plt>
  432938:	adrp	x1, 441000 <worker_hash_op+0xcdf8>
  43293c:	mov	x2, x0
  432940:	add	x1, x1, #0x16e
  432944:	mov	x0, x21
  432948:	bl	40b490 <fprintf@plt>
  43294c:	ldr	w8, [x20, #24]
  432950:	cbz	w8, 432984 <dhcp_lease_save+0x1a0>
  432954:	ldur	x21, [x29, #-8]
  432958:	sub	x1, x29, #0x10
  43295c:	add	x2, sp, #0x10
  432960:	mov	w0, #0x2                   	// #2
  432964:	mov	w3, #0x10                  	// #16
  432968:	stur	w8, [x29, #-16]
  43296c:	bl	40be50 <inet_ntop@plt>
  432970:	adrp	x1, 441000 <worker_hash_op+0xcdf8>
  432974:	mov	x2, x0
  432978:	add	x1, x1, #0x181
  43297c:	mov	x0, x21
  432980:	bl	40b490 <fprintf@plt>
  432984:	ldrb	w8, [x20, #36]
  432988:	cbz	w8, 4329c0 <dhcp_lease_save+0x1dc>
  43298c:	ldr	w8, [x20, #40]
  432990:	ldur	x21, [x29, #-8]
  432994:	sub	x1, x29, #0x10
  432998:	add	x2, sp, #0x10
  43299c:	mov	w0, #0x2                   	// #2
  4329a0:	mov	w3, #0x10                  	// #16
  4329a4:	stur	w8, [x29, #-16]
  4329a8:	bl	40be50 <inet_ntop@plt>
  4329ac:	adrp	x1, 441000 <worker_hash_op+0xcdf8>
  4329b0:	mov	x2, x0
  4329b4:	add	x1, x1, #0x191
  4329b8:	mov	x0, x21
  4329bc:	bl	40b490 <fprintf@plt>
  4329c0:	ldrh	w2, [x20, #136]
  4329c4:	cbz	w2, 4329d8 <dhcp_lease_save+0x1f4>
  4329c8:	ldur	x0, [x29, #-8]
  4329cc:	adrp	x1, 441000 <worker_hash_op+0xcdf8>
  4329d0:	add	x1, x1, #0x19f
  4329d4:	bl	40b490 <fprintf@plt>
  4329d8:	ldr	w2, [x20, #4]
  4329dc:	cbz	w2, 4329f0 <dhcp_lease_save+0x20c>
  4329e0:	ldur	x0, [x29, #-8]
  4329e4:	adrp	x1, 441000 <worker_hash_op+0xcdf8>
  4329e8:	add	x1, x1, #0x1a7
  4329ec:	bl	40b490 <fprintf@plt>
  4329f0:	ldr	w2, [x20, #8]
  4329f4:	cbz	w2, 432a08 <dhcp_lease_save+0x224>
  4329f8:	ldur	x0, [x29, #-8]
  4329fc:	adrp	x1, 441000 <worker_hash_op+0xcdf8>
  432a00:	add	x1, x1, #0x1ae
  432a04:	bl	40b490 <fprintf@plt>
  432a08:	ldr	w2, [x20, #12]
  432a0c:	cbz	w2, 432a20 <dhcp_lease_save+0x23c>
  432a10:	ldur	x0, [x29, #-8]
  432a14:	adrp	x1, 441000 <worker_hash_op+0xcdf8>
  432a18:	add	x1, x1, #0x1b5
  432a1c:	bl	40b490 <fprintf@plt>
  432a20:	ldr	x22, [x20, #72]
  432a24:	cbz	x22, 432a70 <dhcp_lease_save+0x28c>
  432a28:	cmp	w22, #0x1
  432a2c:	b.lt	432a70 <dhcp_lease_save+0x28c>  // b.tstop
  432a30:	ldur	x3, [x29, #-8]
  432a34:	ldr	x21, [x20, #64]
  432a38:	adrp	x0, 441000 <worker_hash_op+0xcdf8>
  432a3c:	add	x0, x0, #0x1c2
  432a40:	mov	w1, #0x4                   	// #4
  432a44:	mov	w2, #0x1                   	// #1
  432a48:	bl	40bf70 <fwrite@plt>
  432a4c:	ldur	x0, [x29, #-8]
  432a50:	and	x2, x22, #0xffffffff
  432a54:	mov	x1, x21
  432a58:	mov	w3, wzr
  432a5c:	mov	x4, xzr
  432a60:	bl	42fe40 <serialize_in_addrs>
  432a64:	ldur	x1, [x29, #-8]
  432a68:	mov	w0, #0xa                   	// #10
  432a6c:	bl	40be70 <fputc@plt>
  432a70:	ldr	x22, [x20, #88]
  432a74:	cbz	x22, 432ac0 <dhcp_lease_save+0x2dc>
  432a78:	cmp	w22, #0x1
  432a7c:	b.lt	432ac0 <dhcp_lease_save+0x2dc>  // b.tstop
  432a80:	ldur	x3, [x29, #-8]
  432a84:	ldr	x21, [x20, #80]
  432a88:	adrp	x0, 441000 <worker_hash_op+0xcdf8>
  432a8c:	add	x0, x0, #0x1c7
  432a90:	mov	w1, #0x4                   	// #4
  432a94:	mov	w2, #0x1                   	// #1
  432a98:	bl	40bf70 <fwrite@plt>
  432a9c:	ldur	x0, [x29, #-8]
  432aa0:	and	x2, x22, #0xffffffff
  432aa4:	mov	x1, x21
  432aa8:	mov	w3, wzr
  432aac:	mov	x4, xzr
  432ab0:	bl	42fe40 <serialize_in_addrs>
  432ab4:	ldur	x1, [x29, #-8]
  432ab8:	mov	w0, #0xa                   	// #10
  432abc:	bl	40be70 <fputc@plt>
  432ac0:	ldr	x22, [x20, #104]
  432ac4:	cbz	x22, 432b10 <dhcp_lease_save+0x32c>
  432ac8:	cmp	w22, #0x1
  432acc:	b.lt	432b10 <dhcp_lease_save+0x32c>  // b.tstop
  432ad0:	ldur	x3, [x29, #-8]
  432ad4:	ldr	x21, [x20, #96]
  432ad8:	adrp	x0, 441000 <worker_hash_op+0xcdf8>
  432adc:	add	x0, x0, #0x1cc
  432ae0:	mov	w1, #0x4                   	// #4
  432ae4:	mov	w2, #0x1                   	// #1
  432ae8:	bl	40bf70 <fwrite@plt>
  432aec:	ldur	x0, [x29, #-8]
  432af0:	and	x2, x22, #0xffffffff
  432af4:	mov	x1, x21
  432af8:	mov	w3, wzr
  432afc:	mov	x4, xzr
  432b00:	bl	42fe40 <serialize_in_addrs>
  432b04:	ldur	x1, [x29, #-8]
  432b08:	mov	w0, #0xa                   	// #10
  432b0c:	bl	40be70 <fputc@plt>
  432b10:	ldr	x2, [x20, #144]
  432b14:	cbz	x2, 432b28 <dhcp_lease_save+0x344>
  432b18:	ldur	x0, [x29, #-8]
  432b1c:	adrp	x1, 441000 <worker_hash_op+0xcdf8>
  432b20:	add	x1, x1, #0x1d1
  432b24:	bl	40b490 <fprintf@plt>
  432b28:	ldr	x21, [x20, #152]
  432b2c:	mov	x0, x21
  432b30:	bl	40b4b0 <strv_length@plt>
  432b34:	cbz	x0, 432b78 <dhcp_lease_save+0x394>
  432b38:	cmp	w0, #0x1
  432b3c:	b.lt	432b78 <dhcp_lease_save+0x394>  // b.tstop
  432b40:	ldur	x3, [x29, #-8]
  432b44:	adrp	x0, 441000 <worker_hash_op+0xcdf8>
  432b48:	add	x0, x0, #0x1e0
  432b4c:	mov	w1, #0x13                  	// #19
  432b50:	mov	w2, #0x1                   	// #1
  432b54:	bl	40bf70 <fwrite@plt>
  432b58:	ldur	x0, [x29, #-8]
  432b5c:	mov	x1, x21
  432b60:	mov	x2, xzr
  432b64:	mov	x3, xzr
  432b68:	bl	40bf80 <fputstrv@plt>
  432b6c:	ldur	x1, [x29, #-8]
  432b70:	mov	w0, #0xa                   	// #10
  432b74:	bl	40be70 <fputc@plt>
  432b78:	ldr	x2, [x20, #160]
  432b7c:	cbz	x2, 432b90 <dhcp_lease_save+0x3ac>
  432b80:	ldur	x0, [x29, #-8]
  432b84:	adrp	x1, 441000 <worker_hash_op+0xcdf8>
  432b88:	add	x1, x1, #0x1f4
  432b8c:	bl	40b490 <fprintf@plt>
  432b90:	ldr	x2, [x20, #168]
  432b94:	cbz	x2, 432ba8 <dhcp_lease_save+0x3c4>
  432b98:	ldur	x0, [x29, #-8]
  432b9c:	adrp	x1, 441000 <worker_hash_op+0xcdf8>
  432ba0:	add	x1, x1, #0x201
  432ba4:	bl	40b490 <fprintf@plt>
  432ba8:	ldr	x22, [x20, #120]
  432bac:	cbz	x22, 432c80 <dhcp_lease_save+0x49c>
  432bb0:	cmp	xzr, x22, lsr #61
  432bb4:	mov	x21, xzr
  432bb8:	b.ne	432d54 <dhcp_lease_save+0x570>  // b.any
  432bbc:	lsl	x0, x22, #3
  432bc0:	bl	40a490 <malloc@plt>
  432bc4:	mov	x21, x0
  432bc8:	cbz	x0, 432d54 <dhcp_lease_save+0x570>
  432bcc:	ldr	x8, [x20, #112]
  432bd0:	cmp	x22, #0x4
  432bd4:	b.cs	432c88 <dhcp_lease_save+0x4a4>  // b.hs, b.nlast
  432bd8:	mov	x9, xzr
  432bdc:	mov	w10, wzr
  432be0:	b	432d14 <dhcp_lease_save+0x530>
  432be4:	mov	w22, w0
  432be8:	mov	x21, xzr
  432bec:	ldr	x0, [x29, #24]
  432bf0:	cbz	x0, 432bf8 <dhcp_lease_save+0x414>
  432bf4:	bl	40a6f0 <unlink@plt>
  432bf8:	mov	w0, wzr
  432bfc:	bl	40a2c0 <log_get_max_level_realm@plt>
  432c00:	cmp	w0, #0x3
  432c04:	b.lt	432c3c <dhcp_lease_save+0x458>  // b.tstop
  432c08:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  432c0c:	adrp	x4, 441000 <worker_hash_op+0xcdf8>
  432c10:	adrp	x5, 441000 <worker_hash_op+0xcdf8>
  432c14:	add	x2, x2, #0x656
  432c18:	add	x4, x4, #0x271
  432c1c:	add	x5, x5, #0x281
  432c20:	mov	w0, #0x3                   	// #3
  432c24:	mov	w3, #0x400                 	// #1024
  432c28:	mov	w1, w22
  432c2c:	mov	x6, x19
  432c30:	bl	40a2d0 <log_internal_realm@plt>
  432c34:	mov	w19, w0
  432c38:	b	432c4c <dhcp_lease_save+0x468>
  432c3c:	cmp	w22, #0x0
  432c40:	mov	w8, wzr
  432c44:	cneg	w9, w22, mi  // mi = first
  432c48:	sub	w19, w8, w9, uxtb
  432c4c:	mov	x0, x21
  432c50:	bl	40a320 <free@plt>
  432c54:	ldur	x0, [x29, #-8]
  432c58:	bl	40b110 <safe_fclose@plt>
  432c5c:	ldr	x0, [x29, #24]
  432c60:	bl	40a320 <free@plt>
  432c64:	mov	w0, w19
  432c68:	ldp	x20, x19, [sp, #96]
  432c6c:	ldp	x22, x21, [sp, #80]
  432c70:	ldr	x23, [sp, #64]
  432c74:	ldp	x29, x30, [sp, #48]
  432c78:	add	sp, sp, #0x70
  432c7c:	ret
  432c80:	mov	x21, xzr
  432c84:	b	432d54 <dhcp_lease_save+0x570>
  432c88:	sub	x11, x22, #0x1
  432c8c:	mov	w10, wzr
  432c90:	cmn	w11, #0x1
  432c94:	mov	x9, xzr
  432c98:	b.eq	432d14 <dhcp_lease_save+0x530>  // b.none
  432c9c:	lsr	x11, x11, #32
  432ca0:	cbnz	x11, 432d14 <dhcp_lease_save+0x530>
  432ca4:	adrp	x12, 442000 <hash_key_name.asso_values+0x4>
  432ca8:	ldr	q1, [x12, #608]
  432cac:	mov	w12, #0x18                  	// #24
  432cb0:	and	x9, x22, #0xfffffffffffffffc
  432cb4:	dup	v2.2d, x12
  432cb8:	mov	w12, #0x4                   	// #4
  432cbc:	add	x11, x21, #0x10
  432cc0:	dup	v0.2d, x8
  432cc4:	mov	w10, w9
  432cc8:	dup	v3.2d, x12
  432ccc:	mov	x12, x9
  432cd0:	fmov	x13, d1
  432cd4:	add	x13, x13, x13, lsl #1
  432cd8:	mov	x14, v1.d[1]
  432cdc:	lsl	x13, x13, #2
  432ce0:	add	x14, x14, x14, lsl #1
  432ce4:	fmov	d4, x13
  432ce8:	lsl	x13, x14, #2
  432cec:	mov	v4.d[1], x13
  432cf0:	add	v4.2d, v0.2d, v4.2d
  432cf4:	add	v5.2d, v4.2d, v2.2d
  432cf8:	add	v1.2d, v1.2d, v3.2d
  432cfc:	subs	x12, x12, #0x4
  432d00:	stp	q4, q5, [x11, #-16]
  432d04:	add	x11, x11, #0x20
  432d08:	b.ne	432cd0 <dhcp_lease_save+0x4ec>  // b.any
  432d0c:	cmp	x22, x9
  432d10:	b.eq	432d34 <dhcp_lease_save+0x550>  // b.none
  432d14:	add	w10, w10, #0x1
  432d18:	mov	w11, #0xc                   	// #12
  432d1c:	madd	x12, x9, x11, x8
  432d20:	str	x12, [x21, x9, lsl #3]
  432d24:	mov	w9, w10
  432d28:	cmp	x22, x9
  432d2c:	add	w10, w10, #0x1
  432d30:	b.hi	432d1c <dhcp_lease_save+0x538>  // b.pmore
  432d34:	cmp	w22, #0x1
  432d38:	b.lt	432d54 <dhcp_lease_save+0x570>  // b.tstop
  432d3c:	ldur	x0, [x29, #-8]
  432d40:	adrp	x1, 441000 <worker_hash_op+0xcdf8>
  432d44:	and	x3, x22, #0xffffffff
  432d48:	add	x1, x1, #0x20f
  432d4c:	mov	x2, x21
  432d50:	bl	430368 <serialize_dhcp_routes>
  432d54:	ldr	x2, [x20, #208]
  432d58:	cbz	x2, 432d6c <dhcp_lease_save+0x588>
  432d5c:	ldur	x0, [x29, #-8]
  432d60:	adrp	x1, 441000 <worker_hash_op+0xcdf8>
  432d64:	add	x1, x1, #0x216
  432d68:	bl	40b490 <fprintf@plt>
  432d6c:	ldr	x0, [x20, #176]
  432d70:	cbz	x0, 432da0 <dhcp_lease_save+0x5bc>
  432d74:	ldr	x1, [x20, #184]
  432d78:	bl	40bea0 <hexmem@plt>
  432d7c:	cbz	x0, 432e44 <dhcp_lease_save+0x660>
  432d80:	mov	x22, x0
  432d84:	ldur	x0, [x29, #-8]
  432d88:	adrp	x1, 441000 <worker_hash_op+0xcdf8>
  432d8c:	add	x1, x1, #0x223
  432d90:	mov	x2, x22
  432d94:	bl	40b490 <fprintf@plt>
  432d98:	mov	x0, x22
  432d9c:	bl	40a320 <free@plt>
  432da0:	ldr	x1, [x20, #200]
  432da4:	cbz	x1, 432dd4 <dhcp_lease_save+0x5f0>
  432da8:	ldr	x0, [x20, #192]
  432dac:	bl	40bea0 <hexmem@plt>
  432db0:	cbz	x0, 432e44 <dhcp_lease_save+0x660>
  432db4:	mov	x22, x0
  432db8:	ldur	x0, [x29, #-8]
  432dbc:	adrp	x1, 441000 <worker_hash_op+0xcdf8>
  432dc0:	add	x1, x1, #0x230
  432dc4:	mov	x2, x22
  432dc8:	bl	40b490 <fprintf@plt>
  432dcc:	mov	x0, x22
  432dd0:	bl	40a320 <free@plt>
  432dd4:	ldr	x23, [x20, #216]
  432dd8:	cbz	x23, 432e20 <dhcp_lease_save+0x63c>
  432ddc:	adrp	x20, 441000 <worker_hash_op+0xcdf8>
  432de0:	add	x20, x20, #0x244
  432de4:	ldrb	w3, [x23, #16]
  432de8:	add	x0, sp, #0x4
  432dec:	mov	w1, #0xb                   	// #11
  432df0:	mov	x2, x20
  432df4:	bl	40b050 <snprintf@plt>
  432df8:	cmp	w0, #0xb
  432dfc:	b.cs	432e7c <dhcp_lease_save+0x698>  // b.hs, b.nlast
  432e00:	ldur	x0, [x29, #-8]
  432e04:	ldr	x2, [x23, #24]
  432e08:	ldrb	w3, [x23, #17]
  432e0c:	add	x1, sp, #0x4
  432e10:	bl	4307c4 <serialize_dhcp_option>
  432e14:	tbnz	w0, #31, 432e54 <dhcp_lease_save+0x670>
  432e18:	ldr	x23, [x23]
  432e1c:	cbnz	x23, 432de4 <dhcp_lease_save+0x600>
  432e20:	ldur	x0, [x29, #-8]
  432e24:	bl	40bf90 <fflush_and_check@plt>
  432e28:	tbnz	w0, #31, 432e54 <dhcp_lease_save+0x670>
  432e2c:	ldr	x0, [x29, #24]
  432e30:	mov	x1, x19
  432e34:	bl	40b0e0 <rename@plt>
  432e38:	tbnz	w0, #31, 432e64 <dhcp_lease_save+0x680>
  432e3c:	mov	w19, wzr
  432e40:	b	432c4c <dhcp_lease_save+0x468>
  432e44:	mov	w22, #0xfffffff4            	// #-12
  432e48:	ldr	x0, [x29, #24]
  432e4c:	cbnz	x0, 432bf4 <dhcp_lease_save+0x410>
  432e50:	b	432bf8 <dhcp_lease_save+0x414>
  432e54:	mov	w22, w0
  432e58:	ldr	x0, [x29, #24]
  432e5c:	cbnz	x0, 432bf4 <dhcp_lease_save+0x410>
  432e60:	b	432bf8 <dhcp_lease_save+0x414>
  432e64:	bl	40a3e0 <__errno_location@plt>
  432e68:	ldr	w8, [x0]
  432e6c:	neg	w22, w8
  432e70:	ldr	x0, [x29, #24]
  432e74:	cbnz	x0, 432bf4 <dhcp_lease_save+0x410>
  432e78:	b	432bf8 <dhcp_lease_save+0x414>
  432e7c:	adrp	x1, 441000 <worker_hash_op+0xcdf8>
  432e80:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  432e84:	adrp	x4, 441000 <worker_hash_op+0xcdf8>
  432e88:	add	x1, x1, #0x24e
  432e8c:	add	x2, x2, #0x656
  432e90:	add	x4, x4, #0xe9
  432e94:	mov	w3, #0x3eb                 	// #1003
  432e98:	mov	w0, wzr
  432e9c:	bl	40a630 <log_assert_failed_realm@plt>
  432ea0:	adrp	x1, 440000 <worker_hash_op+0xbdf8>
  432ea4:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  432ea8:	adrp	x4, 441000 <worker_hash_op+0xcdf8>
  432eac:	add	x1, x1, #0x64d
  432eb0:	add	x2, x2, #0x656
  432eb4:	add	x4, x4, #0xe9
  432eb8:	mov	w3, #0x369                 	// #873
  432ebc:	bl	40a630 <log_assert_failed_realm@plt>
  432ec0:	adrp	x1, 441000 <worker_hash_op+0xcdf8>
  432ec4:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  432ec8:	adrp	x4, 441000 <worker_hash_op+0xcdf8>
  432ecc:	add	x1, x1, #0x11c
  432ed0:	add	x2, x2, #0x656
  432ed4:	add	x4, x4, #0xe9
  432ed8:	mov	w3, #0x36a                 	// #874
  432edc:	mov	w0, wzr
  432ee0:	bl	40a630 <log_assert_failed_realm@plt>

0000000000432ee4 <sd_dhcp_lease_get_timezone>:
  432ee4:	stp	x29, x30, [sp, #-16]!
  432ee8:	mov	x29, sp
  432eec:	cbz	x0, 432f18 <sd_dhcp_lease_get_timezone+0x34>
  432ef0:	cbz	x1, 432f38 <sd_dhcp_lease_get_timezone+0x54>
  432ef4:	ldr	x8, [x0, #208]
  432ef8:	cbz	x8, 432f0c <sd_dhcp_lease_get_timezone+0x28>
  432efc:	mov	w0, wzr
  432f00:	str	x8, [x1]
  432f04:	ldp	x29, x30, [sp], #16
  432f08:	ret
  432f0c:	mov	w0, #0xffffffc3            	// #-61
  432f10:	ldp	x29, x30, [sp], #16
  432f14:	ret
  432f18:	adrp	x1, 440000 <worker_hash_op+0xbdf8>
  432f1c:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  432f20:	adrp	x4, 441000 <worker_hash_op+0xcdf8>
  432f24:	add	x1, x1, #0x64d
  432f28:	add	x2, x2, #0x656
  432f2c:	add	x4, x4, #0x8e8
  432f30:	mov	w3, #0x528                 	// #1320
  432f34:	b	432f58 <sd_dhcp_lease_get_timezone+0x74>
  432f38:	adrp	x1, 441000 <worker_hash_op+0xcdf8>
  432f3c:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  432f40:	adrp	x4, 441000 <worker_hash_op+0xcdf8>
  432f44:	add	x1, x1, #0x927
  432f48:	add	x2, x2, #0x656
  432f4c:	add	x4, x4, #0x8e8
  432f50:	mov	w3, #0x529                 	// #1321
  432f54:	mov	w0, wzr
  432f58:	bl	40ac10 <log_assert_failed_return_realm@plt>
  432f5c:	mov	w0, #0xffffffea            	// #-22
  432f60:	ldp	x29, x30, [sp], #16
  432f64:	ret

0000000000432f68 <sd_dhcp_lease_get_client_id>:
  432f68:	stp	x29, x30, [sp, #-16]!
  432f6c:	mov	x29, sp
  432f70:	cbz	x0, 432fac <sd_dhcp_lease_get_client_id+0x44>
  432f74:	cbz	x1, 432fcc <sd_dhcp_lease_get_client_id+0x64>
  432f78:	cbz	x2, 432fec <sd_dhcp_lease_get_client_id+0x84>
  432f7c:	ldr	x9, [x0, #176]
  432f80:	mov	x8, x0
  432f84:	cbz	x9, 432fa0 <sd_dhcp_lease_get_client_id+0x38>
  432f88:	str	x9, [x1]
  432f8c:	ldr	x8, [x8, #184]
  432f90:	mov	w0, wzr
  432f94:	str	x8, [x2]
  432f98:	ldp	x29, x30, [sp], #16
  432f9c:	ret
  432fa0:	mov	w0, #0xffffffc3            	// #-61
  432fa4:	ldp	x29, x30, [sp], #16
  432fa8:	ret
  432fac:	adrp	x1, 440000 <worker_hash_op+0xbdf8>
  432fb0:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  432fb4:	adrp	x4, 441000 <worker_hash_op+0xcdf8>
  432fb8:	add	x1, x1, #0x64d
  432fbc:	add	x2, x2, #0x656
  432fc0:	add	x4, x4, #0x822
  432fc4:	mov	w3, #0x505                 	// #1285
  432fc8:	b	43300c <sd_dhcp_lease_get_client_id+0xa4>
  432fcc:	adrp	x1, 441000 <worker_hash_op+0xcdf8>
  432fd0:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  432fd4:	adrp	x4, 441000 <worker_hash_op+0xcdf8>
  432fd8:	add	x1, x1, #0x86c
  432fdc:	add	x2, x2, #0x656
  432fe0:	add	x4, x4, #0x822
  432fe4:	mov	w3, #0x506                 	// #1286
  432fe8:	b	433008 <sd_dhcp_lease_get_client_id+0xa0>
  432fec:	adrp	x1, 441000 <worker_hash_op+0xcdf8>
  432ff0:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  432ff4:	adrp	x4, 441000 <worker_hash_op+0xcdf8>
  432ff8:	add	x1, x1, #0x876
  432ffc:	add	x2, x2, #0x656
  433000:	add	x4, x4, #0x822
  433004:	mov	w3, #0x507                 	// #1287
  433008:	mov	w0, wzr
  43300c:	bl	40ac10 <log_assert_failed_return_realm@plt>
  433010:	mov	w0, #0xffffffea            	// #-22
  433014:	ldp	x29, x30, [sp], #16
  433018:	ret

000000000043301c <dhcp_lease_load>:
  43301c:	stp	x29, x30, [sp, #-96]!
  433020:	stp	x28, x27, [sp, #16]
  433024:	stp	x26, x25, [sp, #32]
  433028:	stp	x24, x23, [sp, #48]
  43302c:	stp	x22, x21, [sp, #64]
  433030:	stp	x20, x19, [sp, #80]
  433034:	mov	x29, sp
  433038:	sub	sp, sp, #0x500
  43303c:	movi	v0.2d, #0x0
  433040:	stp	xzr, xzr, [x29, #-24]
  433044:	stp	xzr, xzr, [x29, #-40]
  433048:	stp	xzr, xzr, [x29, #-56]
  43304c:	stp	xzr, xzr, [x29, #-72]
  433050:	stp	xzr, xzr, [x29, #-88]
  433054:	stp	xzr, xzr, [x29, #-104]
  433058:	stp	xzr, xzr, [x29, #-120]
  43305c:	stp	xzr, xzr, [x29, #-136]
  433060:	stur	xzr, [x29, #-144]
  433064:	str	xzr, [sp, #1120]
  433068:	str	q0, [sp, #1104]
  43306c:	str	q0, [sp, #1088]
  433070:	str	q0, [sp, #1072]
  433074:	str	q0, [sp, #1056]
  433078:	str	q0, [sp, #1040]
  43307c:	stp	q0, q0, [sp, #1008]
  433080:	stp	q0, q0, [sp, #976]
  433084:	stp	q0, q0, [sp, #944]
  433088:	stp	q0, q0, [sp, #912]
  43308c:	stp	q0, q0, [sp, #880]
  433090:	cbz	x1, 433c34 <dhcp_lease_load+0xc18>
  433094:	mov	x19, x0
  433098:	cbz	x0, 433c58 <dhcp_lease_load+0xc3c>
  43309c:	mov	x20, x1
  4330a0:	mov	w0, #0x1                   	// #1
  4330a4:	mov	w1, #0xe0                  	// #224
  4330a8:	mov	w22, #0x1                   	// #1
  4330ac:	bl	40b650 <calloc@plt>
  4330b0:	cbz	x0, 433500 <dhcp_lease_load+0x4e4>
  4330b4:	add	x8, x0, #0x90
  4330b8:	str	x8, [sp, #848]
  4330bc:	add	x8, x0, #0xa0
  4330c0:	str	x8, [sp, #840]
  4330c4:	add	x8, x0, #0xa8
  4330c8:	add	x12, sp, #0x370
  4330cc:	str	x8, [sp, #832]
  4330d0:	orr	x8, x12, #0x8
  4330d4:	str	x8, [sp, #816]
  4330d8:	add	x8, x12, #0x10
  4330dc:	str	x8, [sp, #808]
  4330e0:	add	x8, x12, #0x18
  4330e4:	str	x8, [sp, #800]
  4330e8:	add	x9, x12, #0xe8
  4330ec:	add	x8, x12, #0xf0
  4330f0:	str	x8, [sp, #776]
  4330f4:	str	x9, [sp, #760]
  4330f8:	adrp	x8, 441000 <worker_hash_op+0xcdf8>
  4330fc:	adrp	x9, 441000 <worker_hash_op+0xcdf8>
  433100:	add	x8, x8, #0x4d1
  433104:	add	x9, x9, #0x4c6
  433108:	str	x8, [sp, #768]
  43310c:	adrp	x8, 441000 <worker_hash_op+0xcdf8>
  433110:	str	x9, [sp, #752]
  433114:	adrp	x9, 441000 <worker_hash_op+0xcdf8>
  433118:	mov	x14, x0
  43311c:	add	x10, x12, #0xe0
  433120:	add	x8, x8, #0x458
  433124:	add	x9, x9, #0x44d
  433128:	adrp	x17, 441000 <worker_hash_op+0xcdf8>
  43312c:	str	x19, [sp, #792]
  433130:	str	w22, [x14], #208
  433134:	add	x19, x12, #0xd0
  433138:	str	x10, [sp, #744]
  43313c:	adrp	x10, 441000 <worker_hash_op+0xcdf8>
  433140:	str	x8, [sp, #592]
  433144:	adrp	x8, 441000 <worker_hash_op+0xcdf8>
  433148:	str	x9, [sp, #576]
  43314c:	adrp	x9, 441000 <worker_hash_op+0xcdf8>
  433150:	add	x17, x17, #0x35f
  433154:	str	x0, [sp, #856]
  433158:	add	x18, x12, #0x30
  43315c:	add	x0, x12, #0x38
  433160:	str	x19, [sp, #712]
  433164:	add	x10, x10, #0x4bb
  433168:	adrp	x19, 441000 <worker_hash_op+0xcdf8>
  43316c:	add	x8, x8, #0x3df
  433170:	add	x9, x9, #0x3d4
  433174:	stp	x17, x14, [sp, #208]
  433178:	adrp	x14, 441000 <worker_hash_op+0xcdf8>
  43317c:	add	x19, x19, #0x49a
  433180:	str	x10, [sp, #736]
  433184:	adrp	x10, 441000 <worker_hash_op+0xcdf8>
  433188:	stp	x0, x8, [sp, #408]
  43318c:	sub	x0, x29, #0x70
  433190:	stp	x18, x9, [sp, #392]
  433194:	adrp	x18, 441000 <worker_hash_op+0xcdf8>
  433198:	add	x14, x14, #0x356
  43319c:	add	x13, x12, #0xc0
  4331a0:	add	x10, x10, #0x442
  4331a4:	str	x19, [sp, #688]
  4331a8:	adrp	x19, 441000 <worker_hash_op+0xcdf8>
  4331ac:	add	x18, x18, #0x20f
  4331b0:	ldr	x8, [sp, #800]
  4331b4:	stp	x14, x0, [sp, #192]
  4331b8:	sub	x14, x29, #0x60
  4331bc:	add	x6, x12, #0x68
  4331c0:	str	x13, [sp, #680]
  4331c4:	adrp	x13, 441000 <worker_hash_op+0xcdf8>
  4331c8:	add	x19, x19, #0x421
  4331cc:	str	x10, [sp, #560]
  4331d0:	adrp	x10, 441000 <worker_hash_op+0xcdf8>
  4331d4:	stp	x18, x14, [sp, #176]
  4331d8:	ldr	x14, [sp, #832]
  4331dc:	add	x15, x12, #0x28
  4331e0:	add	x7, x12, #0x70
  4331e4:	add	x13, x13, #0x4a5
  4331e8:	add	x10, x10, #0x3c9
  4331ec:	stp	x6, x19, [sp, #504]
  4331f0:	adrp	x19, 441000 <worker_hash_op+0xcdf8>
  4331f4:	str	x7, [sp, #520]
  4331f8:	adrp	x7, 441000 <worker_hash_op+0xcdf8>
  4331fc:	str	x13, [sp, #704]
  433200:	adrp	x13, 441000 <worker_hash_op+0xcdf8>
  433204:	add	x19, x19, #0x3a8
  433208:	stp	x15, x10, [sp, #376]
  43320c:	adrp	x10, 441000 <worker_hash_op+0xcdf8>
  433210:	add	x22, x12, #0x78
  433214:	add	x23, x12, #0x80
  433218:	str	x20, [sp, #824]
  43321c:	add	x20, x12, #0xb8
  433220:	add	x21, x12, #0xc8
  433224:	add	x11, x12, #0xd8
  433228:	add	x7, x7, #0x463
  43322c:	add	x13, x13, #0x42c
  433230:	add	x10, x10, #0x34c
  433234:	stp	x19, x8, [sp, #336]
  433238:	ldr	x8, [sp, #808]
  43323c:	str	x11, [sp, #728]
  433240:	str	x21, [sp, #696]
  433244:	str	x20, [sp, #664]
  433248:	adrp	x11, 441000 <worker_hash_op+0xcdf8>
  43324c:	adrp	x20, 441000 <worker_hash_op+0xcdf8>
  433250:	adrp	x21, 441000 <worker_hash_op+0xcdf8>
  433254:	str	x23, [sp, #552]
  433258:	adrp	x23, 441000 <worker_hash_op+0xcdf8>
  43325c:	str	x22, [sp, #536]
  433260:	adrp	x22, 441000 <worker_hash_op+0xcdf8>
  433264:	str	x7, [sp, #608]
  433268:	adrp	x7, 441000 <worker_hash_op+0xcdf8>
  43326c:	str	x13, [sp, #528]
  433270:	adrp	x13, 441000 <worker_hash_op+0xcdf8>
  433274:	stp	x10, x14, [sp, #160]
  433278:	ldr	x10, [sp, #840]
  43327c:	add	x1, x12, #0x40
  433280:	add	x11, x11, #0x4b0
  433284:	add	x20, x20, #0x48f
  433288:	add	x21, x21, #0x484
  43328c:	add	x23, x23, #0x479
  433290:	add	x22, x22, #0x46e
  433294:	add	x7, x7, #0x3ea
  433298:	add	x13, x13, #0x3b3
  43329c:	adrp	x6, 441000 <worker_hash_op+0xcdf8>
  4332a0:	str	x11, [sp, #720]
  4332a4:	adrp	x11, 441000 <worker_hash_op+0xcdf8>
  4332a8:	str	x20, [sp, #672]
  4332ac:	adrp	x20, 441000 <worker_hash_op+0xcdf8>
  4332b0:	str	x21, [sp, #656]
  4332b4:	adrp	x21, 441000 <worker_hash_op+0xcdf8>
  4332b8:	str	x23, [sp, #640]
  4332bc:	adrp	x23, 441000 <worker_hash_op+0xcdf8>
  4332c0:	str	x22, [sp, #624]
  4332c4:	adrp	x22, 441000 <worker_hash_op+0xcdf8>
  4332c8:	add	x6, x6, #0x39d
  4332cc:	stp	x1, x7, [sp, #424]
  4332d0:	adrp	x1, 441000 <worker_hash_op+0xcdf8>
  4332d4:	str	x13, [sp, #352]
  4332d8:	adrp	x13, 441000 <worker_hash_op+0xcdf8>
  4332dc:	add	x2, x12, #0x48
  4332e0:	add	x3, x12, #0x50
  4332e4:	add	x4, x12, #0x58
  4332e8:	add	x5, x12, #0x60
  4332ec:	add	x11, x11, #0x437
  4332f0:	add	x20, x20, #0x416
  4332f4:	add	x21, x21, #0x40b
  4332f8:	add	x23, x23, #0x400
  4332fc:	add	x22, x22, #0x3f5
  433300:	sub	x7, x29, #0x78
  433304:	add	x1, x1, #0x368
  433308:	add	x13, x13, #0x330
  43330c:	stp	x6, x8, [sp, #320]
  433310:	ldr	x8, [sp, #816]
  433314:	str	x11, [sp, #544]
  433318:	adrp	x11, 441000 <worker_hash_op+0xcdf8>
  43331c:	stp	x5, x20, [sp, #488]
  433320:	adrp	x5, 441000 <worker_hash_op+0xcdf8>
  433324:	stp	x4, x21, [sp, #472]
  433328:	adrp	x4, 441000 <worker_hash_op+0xcdf8>
  43332c:	stp	x3, x23, [sp, #456]
  433330:	adrp	x3, 441000 <worker_hash_op+0xcdf8>
  433334:	stp	x2, x22, [sp, #440]
  433338:	adrp	x2, 441000 <worker_hash_op+0xcdf8>
  43333c:	stp	x1, x7, [sp, #224]
  433340:	stp	x13, x10, [sp, #128]
  433344:	ldr	x10, [sp, #848]
  433348:	ldr	x1, [sp, #824]
  43334c:	add	x16, x12, #0x20
  433350:	add	x24, x12, #0x88
  433354:	add	x26, x12, #0x98
  433358:	add	x27, x12, #0xa0
  43335c:	add	x11, x11, #0x3be
  433360:	adrp	x20, 441000 <worker_hash_op+0xcdf8>
  433364:	add	x5, x5, #0x387
  433368:	sub	x21, x29, #0x90
  43336c:	add	x4, x4, #0x384
  433370:	sub	x23, x29, #0x88
  433374:	add	x3, x3, #0x381
  433378:	sub	x22, x29, #0x80
  43337c:	add	x2, x2, #0x378
  433380:	add	x25, x12, #0x90
  433384:	add	x28, x12, #0xa8
  433388:	add	x30, x12, #0xb0
  43338c:	str	x27, [sp, #616]
  433390:	str	x26, [sp, #600]
  433394:	str	x24, [sp, #568]
  433398:	add	x20, x20, #0x392
  43339c:	stp	x16, x11, [sp, #360]
  4333a0:	adrp	x16, 441000 <worker_hash_op+0xcdf8>
  4333a4:	adrp	x15, 441000 <worker_hash_op+0xcdf8>
  4333a8:	adrp	x24, 441000 <worker_hash_op+0xcdf8>
  4333ac:	adrp	x26, 441000 <worker_hash_op+0xcdf8>
  4333b0:	stp	x5, x12, [sp, #288]
  4333b4:	adrp	x12, 441000 <worker_hash_op+0xcdf8>
  4333b8:	stp	x4, x21, [sp, #272]
  4333bc:	adrp	x21, 441000 <worker_hash_op+0xcdf8>
  4333c0:	stp	x3, x23, [sp, #256]
  4333c4:	adrp	x23, 441000 <worker_hash_op+0xcdf8>
  4333c8:	stp	x2, x22, [sp, #240]
  4333cc:	adrp	x22, 441000 <worker_hash_op+0xcdf8>
  4333d0:	adrp	x27, 441000 <worker_hash_op+0xcdf8>
  4333d4:	adrp	x2, 441000 <worker_hash_op+0xcdf8>
  4333d8:	adrp	x4, 441000 <worker_hash_op+0xcdf8>
  4333dc:	adrp	x6, 441000 <worker_hash_op+0xcdf8>
  4333e0:	str	x30, [sp, #648]
  4333e4:	str	x28, [sp, #632]
  4333e8:	str	x25, [sp, #584]
  4333ec:	sub	x11, x29, #0x68
  4333f0:	add	x16, x16, #0x339
  4333f4:	add	x15, x15, #0x325
  4333f8:	sub	x19, x29, #0x58
  4333fc:	add	x24, x24, #0x321
  433400:	sub	x25, x29, #0x50
  433404:	stp	x20, x8, [sp, #304]
  433408:	add	x26, x26, #0x31d
  43340c:	sub	x20, x29, #0x48
  433410:	add	x12, x12, #0x319
  433414:	sub	x9, x29, #0x40
  433418:	add	x21, x21, #0x315
  43341c:	sub	x28, x29, #0x38
  433420:	add	x23, x23, #0x30b
  433424:	sub	x30, x29, #0x30
  433428:	add	x22, x22, #0x2ff
  43342c:	sub	x8, x29, #0x28
  433430:	add	x27, x27, #0x2ed
  433434:	add	x2, x2, #0x2d6
  433438:	add	x4, x4, #0x2de
  43343c:	add	x6, x6, #0x2e5
  433440:	sub	x3, x29, #0x10
  433444:	sub	x5, x29, #0x18
  433448:	sub	x7, x29, #0x20
  43344c:	mov	x0, xzr
  433450:	str	xzr, [sp, #784]
  433454:	stp	x16, x11, [sp, #144]
  433458:	stp	x15, x10, [sp, #112]
  43345c:	stp	x24, x19, [sp, #96]
  433460:	stp	x26, x25, [sp, #80]
  433464:	stp	x12, x20, [sp, #64]
  433468:	stp	x21, x9, [sp, #48]
  43346c:	stp	x23, x28, [sp, #32]
  433470:	stp	x22, x30, [sp, #16]
  433474:	stp	x27, x8, [sp]
  433478:	bl	40bbd0 <parse_env_file_sentinel@plt>
  43347c:	tbnz	w0, #31, 43350c <dhcp_lease_load+0x4f0>
  433480:	ldur	x1, [x29, #-16]
  433484:	ldr	x19, [sp, #856]
  433488:	cbz	x1, 4334dc <dhcp_lease_load+0x4c0>
  43348c:	add	x2, x19, #0x10
  433490:	mov	w0, #0x2                   	// #2
  433494:	bl	40be80 <inet_pton@plt>
  433498:	cmp	w0, #0x0
  43349c:	b.gt	4334dc <dhcp_lease_load+0x4c0>
  4334a0:	mov	w0, wzr
  4334a4:	bl	40a2c0 <log_get_max_level_realm@plt>
  4334a8:	cmp	w0, #0x7
  4334ac:	b.lt	4334dc <dhcp_lease_load+0x4c0>  // b.tstop
  4334b0:	ldur	x6, [x29, #-16]
  4334b4:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  4334b8:	adrp	x4, 441000 <worker_hash_op+0xcdf8>
  4334bc:	adrp	x5, 441000 <worker_hash_op+0xcdf8>
  4334c0:	add	x2, x2, #0x656
  4334c4:	add	x4, x4, #0x4dc
  4334c8:	add	x5, x5, #0x4ec
  4334cc:	mov	w0, #0x7                   	// #7
  4334d0:	mov	w3, #0x45e                 	// #1118
  4334d4:	mov	w1, wzr
  4334d8:	bl	40a2d0 <log_internal_realm@plt>
  4334dc:	ldur	x1, [x29, #-24]
  4334e0:	cbz	x1, 433554 <dhcp_lease_load+0x538>
  4334e4:	add	x0, x19, #0x30
  4334e8:	bl	42ffb4 <deserialize_in_addrs>
  4334ec:	mov	w21, w0
  4334f0:	tbnz	w0, #31, 433518 <dhcp_lease_load+0x4fc>
  4334f4:	mov	w8, w21
  4334f8:	str	x8, [x19, #56]
  4334fc:	b	433554 <dhcp_lease_load+0x538>
  433500:	mov	x19, xzr
  433504:	mov	w21, #0xfffffff4            	// #-12
  433508:	b	433b74 <dhcp_lease_load+0xb58>
  43350c:	ldr	x19, [sp, #856]
  433510:	mov	w21, w0
  433514:	b	433b74 <dhcp_lease_load+0xb58>
  433518:	mov	w0, wzr
  43351c:	bl	40a2c0 <log_get_max_level_realm@plt>
  433520:	cmp	w0, #0x7
  433524:	b.lt	433554 <dhcp_lease_load+0x538>  // b.tstop
  433528:	ldur	x6, [x29, #-24]
  43352c:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  433530:	adrp	x4, 441000 <worker_hash_op+0xcdf8>
  433534:	adrp	x5, 441000 <worker_hash_op+0xcdf8>
  433538:	add	x2, x2, #0x656
  43353c:	add	x4, x4, #0x4dc
  433540:	add	x5, x5, #0x512
  433544:	mov	w0, #0x7                   	// #7
  433548:	mov	w3, #0x464                 	// #1124
  43354c:	mov	w1, w21
  433550:	bl	40a2d0 <log_internal_realm@plt>
  433554:	ldur	x1, [x29, #-32]
  433558:	cbz	x1, 4335b8 <dhcp_lease_load+0x59c>
  43355c:	add	x2, x19, #0x20
  433560:	mov	w0, #0x2                   	// #2
  433564:	bl	40be80 <inet_pton@plt>
  433568:	cmp	w0, #0x0
  43356c:	b.le	43357c <dhcp_lease_load+0x560>
  433570:	mov	w8, #0x1                   	// #1
  433574:	strb	w8, [x19, #28]
  433578:	b	4335b8 <dhcp_lease_load+0x59c>
  43357c:	mov	w0, wzr
  433580:	bl	40a2c0 <log_get_max_level_realm@plt>
  433584:	cmp	w0, #0x7
  433588:	b.lt	4335b8 <dhcp_lease_load+0x59c>  // b.tstop
  43358c:	ldur	x6, [x29, #-32]
  433590:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  433594:	adrp	x4, 441000 <worker_hash_op+0xcdf8>
  433598:	adrp	x5, 441000 <worker_hash_op+0xcdf8>
  43359c:	add	x2, x2, #0x656
  4335a0:	add	x4, x4, #0x4dc
  4335a4:	add	x5, x5, #0x54a
  4335a8:	mov	w0, #0x7                   	// #7
  4335ac:	mov	w3, #0x46c                 	// #1132
  4335b0:	mov	w1, wzr
  4335b4:	bl	40a2d0 <log_internal_realm@plt>
  4335b8:	ldur	x1, [x29, #-40]
  4335bc:	cbz	x1, 433610 <dhcp_lease_load+0x5f4>
  4335c0:	add	x2, x19, #0x14
  4335c4:	mov	w0, #0x2                   	// #2
  4335c8:	bl	40be80 <inet_pton@plt>
  4335cc:	cmp	w0, #0x0
  4335d0:	b.gt	433610 <dhcp_lease_load+0x5f4>
  4335d4:	mov	w0, wzr
  4335d8:	bl	40a2c0 <log_get_max_level_realm@plt>
  4335dc:	cmp	w0, #0x7
  4335e0:	b.lt	433610 <dhcp_lease_load+0x5f4>  // b.tstop
  4335e4:	ldur	x6, [x29, #-40]
  4335e8:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  4335ec:	adrp	x4, 441000 <worker_hash_op+0xcdf8>
  4335f0:	adrp	x5, 441000 <worker_hash_op+0xcdf8>
  4335f4:	add	x2, x2, #0x656
  4335f8:	add	x4, x4, #0x4dc
  4335fc:	add	x5, x5, #0x570
  433600:	mov	w0, #0x7                   	// #7
  433604:	mov	w3, #0x474                 	// #1140
  433608:	mov	w1, wzr
  43360c:	bl	40a2d0 <log_internal_realm@plt>
  433610:	ldur	x1, [x29, #-48]
  433614:	cbz	x1, 433668 <dhcp_lease_load+0x64c>
  433618:	add	x2, x19, #0x18
  43361c:	mov	w0, #0x2                   	// #2
  433620:	bl	40be80 <inet_pton@plt>
  433624:	cmp	w0, #0x0
  433628:	b.gt	433668 <dhcp_lease_load+0x64c>
  43362c:	mov	w0, wzr
  433630:	bl	40a2c0 <log_get_max_level_realm@plt>
  433634:	cmp	w0, #0x7
  433638:	b.lt	433668 <dhcp_lease_load+0x64c>  // b.tstop
  43363c:	ldur	x6, [x29, #-48]
  433640:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  433644:	adrp	x4, 441000 <worker_hash_op+0xcdf8>
  433648:	adrp	x5, 441000 <worker_hash_op+0xcdf8>
  43364c:	add	x2, x2, #0x656
  433650:	add	x4, x4, #0x4dc
  433654:	add	x5, x5, #0x59d
  433658:	mov	w0, #0x7                   	// #7
  43365c:	mov	w3, #0x47a                 	// #1146
  433660:	mov	w1, wzr
  433664:	bl	40a2d0 <log_internal_realm@plt>
  433668:	ldur	x1, [x29, #-56]
  43366c:	cbz	x1, 4336cc <dhcp_lease_load+0x6b0>
  433670:	add	x2, x19, #0x28
  433674:	mov	w0, #0x2                   	// #2
  433678:	bl	40be80 <inet_pton@plt>
  43367c:	cmp	w0, #0x0
  433680:	b.le	433690 <dhcp_lease_load+0x674>
  433684:	mov	w8, #0x1                   	// #1
  433688:	strb	w8, [x19, #36]
  43368c:	b	4336cc <dhcp_lease_load+0x6b0>
  433690:	mov	w0, wzr
  433694:	bl	40a2c0 <log_get_max_level_realm@plt>
  433698:	cmp	w0, #0x7
  43369c:	b.lt	4336cc <dhcp_lease_load+0x6b0>  // b.tstop
  4336a0:	ldur	x6, [x29, #-56]
  4336a4:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  4336a8:	adrp	x4, 441000 <worker_hash_op+0xcdf8>
  4336ac:	adrp	x5, 441000 <worker_hash_op+0xcdf8>
  4336b0:	add	x2, x2, #0x656
  4336b4:	add	x4, x4, #0x4dc
  4336b8:	add	x5, x5, #0x5c7
  4336bc:	mov	w0, #0x7                   	// #7
  4336c0:	mov	w3, #0x480                 	// #1152
  4336c4:	mov	w1, wzr
  4336c8:	bl	40a2d0 <log_internal_realm@plt>
  4336cc:	ldur	x1, [x29, #-64]
  4336d0:	cbz	x1, 43372c <dhcp_lease_load+0x710>
  4336d4:	add	x0, x19, #0x40
  4336d8:	bl	42ffb4 <deserialize_in_addrs>
  4336dc:	mov	w21, w0
  4336e0:	tbnz	w0, #31, 4336f0 <dhcp_lease_load+0x6d4>
  4336e4:	mov	w8, w21
  4336e8:	str	x8, [x19, #72]
  4336ec:	b	43372c <dhcp_lease_load+0x710>
  4336f0:	mov	w0, wzr
  4336f4:	bl	40a2c0 <log_get_max_level_realm@plt>
  4336f8:	cmp	w0, #0x7
  4336fc:	b.lt	43372c <dhcp_lease_load+0x710>  // b.tstop
  433700:	ldur	x6, [x29, #-64]
  433704:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  433708:	adrp	x4, 441000 <worker_hash_op+0xcdf8>
  43370c:	adrp	x5, 441000 <worker_hash_op+0xcdf8>
  433710:	add	x2, x2, #0x656
  433714:	add	x4, x4, #0x4dc
  433718:	add	x5, x5, #0x5f7
  43371c:	mov	w0, #0x7                   	// #7
  433720:	mov	w3, #0x488                 	// #1160
  433724:	mov	w1, w21
  433728:	bl	40a2d0 <log_internal_realm@plt>
  43372c:	ldur	x1, [x29, #-72]
  433730:	cbz	x1, 43378c <dhcp_lease_load+0x770>
  433734:	add	x0, x19, #0x50
  433738:	bl	42ffb4 <deserialize_in_addrs>
  43373c:	mov	w21, w0
  433740:	tbnz	w0, #31, 433750 <dhcp_lease_load+0x734>
  433744:	mov	w8, w21
  433748:	str	x8, [x19, #88]
  43374c:	b	43378c <dhcp_lease_load+0x770>
  433750:	mov	w0, wzr
  433754:	bl	40a2c0 <log_get_max_level_realm@plt>
  433758:	cmp	w0, #0x7
  43375c:	b.lt	43378c <dhcp_lease_load+0x770>  // b.tstop
  433760:	ldur	x6, [x29, #-72]
  433764:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  433768:	adrp	x4, 441000 <worker_hash_op+0xcdf8>
  43376c:	adrp	x5, 441000 <worker_hash_op+0xcdf8>
  433770:	add	x2, x2, #0x656
  433774:	add	x4, x4, #0x4dc
  433778:	add	x5, x5, #0x62a
  43377c:	mov	w0, #0x7                   	// #7
  433780:	mov	w3, #0x490                 	// #1168
  433784:	mov	w1, w21
  433788:	bl	40a2d0 <log_internal_realm@plt>
  43378c:	ldur	x1, [x29, #-80]
  433790:	cbz	x1, 4337ec <dhcp_lease_load+0x7d0>
  433794:	add	x0, x19, #0x60
  433798:	bl	42ffb4 <deserialize_in_addrs>
  43379c:	mov	w21, w0
  4337a0:	tbnz	w0, #31, 4337b0 <dhcp_lease_load+0x794>
  4337a4:	mov	w8, w21
  4337a8:	str	x8, [x19, #88]
  4337ac:	b	4337ec <dhcp_lease_load+0x7d0>
  4337b0:	mov	w0, wzr
  4337b4:	bl	40a2c0 <log_get_max_level_realm@plt>
  4337b8:	cmp	w0, #0x7
  4337bc:	b.lt	4337ec <dhcp_lease_load+0x7d0>  // b.tstop
  4337c0:	ldur	x6, [x29, #-80]
  4337c4:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  4337c8:	adrp	x4, 441000 <worker_hash_op+0xcdf8>
  4337cc:	adrp	x5, 441000 <worker_hash_op+0xcdf8>
  4337d0:	add	x2, x2, #0x656
  4337d4:	add	x4, x4, #0x4dc
  4337d8:	add	x5, x5, #0x65d
  4337dc:	mov	w0, #0x7                   	// #7
  4337e0:	mov	w3, #0x498                 	// #1176
  4337e4:	mov	w1, w21
  4337e8:	bl	40a2d0 <log_internal_realm@plt>
  4337ec:	ldur	x0, [x29, #-88]
  4337f0:	cbz	x0, 433844 <dhcp_lease_load+0x828>
  4337f4:	add	x2, x19, #0x88
  4337f8:	mov	w1, wzr
  4337fc:	bl	40b4f0 <safe_atou16_full@plt>
  433800:	tbz	w0, #31, 433844 <dhcp_lease_load+0x828>
  433804:	mov	w21, w0
  433808:	mov	w0, wzr
  43380c:	bl	40a2c0 <log_get_max_level_realm@plt>
  433810:	cmp	w0, #0x7
  433814:	b.lt	433844 <dhcp_lease_load+0x828>  // b.tstop
  433818:	ldur	x6, [x29, #-88]
  43381c:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  433820:	adrp	x4, 441000 <worker_hash_op+0xcdf8>
  433824:	adrp	x5, 441000 <worker_hash_op+0xcdf8>
  433828:	add	x2, x2, #0x656
  43382c:	add	x4, x4, #0x4dc
  433830:	add	x5, x5, #0x690
  433834:	mov	w0, #0x7                   	// #7
  433838:	mov	w3, #0x4a0                 	// #1184
  43383c:	mov	w1, w21
  433840:	bl	40a2d0 <log_internal_realm@plt>
  433844:	ldur	x0, [x29, #-104]
  433848:	cbz	x0, 43386c <dhcp_lease_load+0x850>
  43384c:	adrp	x1, 436000 <worker_hash_op+0x1df8>
  433850:	add	x1, x1, #0xb34
  433854:	mov	w2, wzr
  433858:	bl	40ade0 <strv_split_full@plt>
  43385c:	cbz	x0, 4338cc <dhcp_lease_load+0x8b0>
  433860:	ldr	x8, [x0]
  433864:	cbz	x8, 4338d4 <dhcp_lease_load+0x8b8>
  433868:	str	x0, [x19, #152]
  43386c:	ldur	x3, [x29, #-96]
  433870:	cbz	x3, 4338e0 <dhcp_lease_load+0x8c4>
  433874:	add	x0, x19, #0x70
  433878:	add	x1, x19, #0x78
  43387c:	add	x2, x19, #0x80
  433880:	bl	430598 <deserialize_dhcp_routes>
  433884:	tbz	w0, #31, 4338e0 <dhcp_lease_load+0x8c4>
  433888:	mov	w21, w0
  43388c:	mov	w0, wzr
  433890:	bl	40a2c0 <log_get_max_level_realm@plt>
  433894:	cmp	w0, #0x7
  433898:	b.lt	4338e0 <dhcp_lease_load+0x8c4>  // b.tstop
  43389c:	ldur	x6, [x29, #-96]
  4338a0:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  4338a4:	adrp	x4, 441000 <worker_hash_op+0xcdf8>
  4338a8:	adrp	x5, 441000 <worker_hash_op+0xcdf8>
  4338ac:	add	x2, x2, #0x656
  4338b0:	add	x4, x4, #0x4dc
  4338b4:	add	x5, x5, #0x6b5
  4338b8:	mov	w0, #0x7                   	// #7
  4338bc:	mov	w3, #0x4b6                 	// #1206
  4338c0:	mov	w1, w21
  4338c4:	bl	40a2d0 <log_internal_realm@plt>
  4338c8:	b	4338e0 <dhcp_lease_load+0x8c4>
  4338cc:	mov	w21, #0xfffffff4            	// #-12
  4338d0:	b	433b74 <dhcp_lease_load+0xb58>
  4338d4:	bl	40ae30 <strv_free@plt>
  4338d8:	ldur	x3, [x29, #-96]
  4338dc:	cbnz	x3, 433874 <dhcp_lease_load+0x858>
  4338e0:	ldur	x0, [x29, #-128]
  4338e4:	cbz	x0, 433938 <dhcp_lease_load+0x91c>
  4338e8:	add	x2, x19, #0xc
  4338ec:	mov	w1, wzr
  4338f0:	bl	40a2e0 <safe_atou_full@plt>
  4338f4:	tbz	w0, #31, 433938 <dhcp_lease_load+0x91c>
  4338f8:	mov	w21, w0
  4338fc:	mov	w0, wzr
  433900:	bl	40a2c0 <log_get_max_level_realm@plt>
  433904:	cmp	w0, #0x7
  433908:	b.lt	433938 <dhcp_lease_load+0x91c>  // b.tstop
  43390c:	ldur	x6, [x29, #-128]
  433910:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  433914:	adrp	x4, 441000 <worker_hash_op+0xcdf8>
  433918:	adrp	x5, 441000 <worker_hash_op+0xcdf8>
  43391c:	add	x2, x2, #0x656
  433920:	add	x4, x4, #0x4dc
  433924:	add	x5, x5, #0x6e2
  433928:	mov	w0, #0x7                   	// #7
  43392c:	mov	w3, #0x4bc                 	// #1212
  433930:	mov	w1, w21
  433934:	bl	40a2d0 <log_internal_realm@plt>
  433938:	ldur	x0, [x29, #-136]
  43393c:	cbz	x0, 433990 <dhcp_lease_load+0x974>
  433940:	add	x2, x19, #0x4
  433944:	mov	w1, wzr
  433948:	bl	40a2e0 <safe_atou_full@plt>
  43394c:	tbz	w0, #31, 433990 <dhcp_lease_load+0x974>
  433950:	mov	w21, w0
  433954:	mov	w0, wzr
  433958:	bl	40a2c0 <log_get_max_level_realm@plt>
  43395c:	cmp	w0, #0x7
  433960:	b.lt	433990 <dhcp_lease_load+0x974>  // b.tstop
  433964:	ldur	x6, [x29, #-136]
  433968:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  43396c:	adrp	x4, 441000 <worker_hash_op+0xcdf8>
  433970:	adrp	x5, 441000 <worker_hash_op+0xcdf8>
  433974:	add	x2, x2, #0x656
  433978:	add	x4, x4, #0x4dc
  43397c:	add	x5, x5, #0x70c
  433980:	mov	w0, #0x7                   	// #7
  433984:	mov	w3, #0x4c2                 	// #1218
  433988:	mov	w1, w21
  43398c:	bl	40a2d0 <log_internal_realm@plt>
  433990:	ldur	x0, [x29, #-144]
  433994:	cbz	x0, 4339e8 <dhcp_lease_load+0x9cc>
  433998:	add	x2, x19, #0x8
  43399c:	mov	w1, wzr
  4339a0:	bl	40a2e0 <safe_atou_full@plt>
  4339a4:	tbz	w0, #31, 4339e8 <dhcp_lease_load+0x9cc>
  4339a8:	mov	w21, w0
  4339ac:	mov	w0, wzr
  4339b0:	bl	40a2c0 <log_get_max_level_realm@plt>
  4339b4:	cmp	w0, #0x7
  4339b8:	b.lt	4339e8 <dhcp_lease_load+0x9cc>  // b.tstop
  4339bc:	ldur	x6, [x29, #-144]
  4339c0:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  4339c4:	adrp	x4, 441000 <worker_hash_op+0xcdf8>
  4339c8:	adrp	x5, 441000 <worker_hash_op+0xcdf8>
  4339cc:	add	x2, x2, #0x656
  4339d0:	add	x4, x4, #0x4dc
  4339d4:	add	x5, x5, #0x730
  4339d8:	mov	w0, #0x7                   	// #7
  4339dc:	mov	w3, #0x4c8                 	// #1224
  4339e0:	mov	w1, w21
  4339e4:	bl	40a2d0 <log_internal_realm@plt>
  4339e8:	ldur	x0, [x29, #-112]
  4339ec:	cbz	x0, 433a48 <dhcp_lease_load+0xa2c>
  4339f0:	add	x3, x19, #0xb0
  4339f4:	add	x4, x19, #0xb8
  4339f8:	mov	x1, #0xffffffffffffffff    	// #-1
  4339fc:	mov	w2, wzr
  433a00:	bl	40bfa0 <unhexmem_full@plt>
  433a04:	tbz	w0, #31, 433a48 <dhcp_lease_load+0xa2c>
  433a08:	mov	w21, w0
  433a0c:	mov	w0, wzr
  433a10:	bl	40a2c0 <log_get_max_level_realm@plt>
  433a14:	cmp	w0, #0x7
  433a18:	b.lt	433a48 <dhcp_lease_load+0xa2c>  // b.tstop
  433a1c:	ldur	x6, [x29, #-112]
  433a20:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  433a24:	adrp	x4, 441000 <worker_hash_op+0xcdf8>
  433a28:	adrp	x5, 441000 <worker_hash_op+0xcdf8>
  433a2c:	add	x2, x2, #0x656
  433a30:	add	x4, x4, #0x4dc
  433a34:	add	x5, x5, #0x754
  433a38:	mov	w0, #0x7                   	// #7
  433a3c:	mov	w3, #0x4ce                 	// #1230
  433a40:	mov	w1, w21
  433a44:	bl	40a2d0 <log_internal_realm@plt>
  433a48:	ldur	x0, [x29, #-120]
  433a4c:	cbz	x0, 433aa8 <dhcp_lease_load+0xa8c>
  433a50:	add	x3, x19, #0xc0
  433a54:	add	x4, x19, #0xc8
  433a58:	mov	x1, #0xffffffffffffffff    	// #-1
  433a5c:	mov	w2, wzr
  433a60:	bl	40bfa0 <unhexmem_full@plt>
  433a64:	tbz	w0, #31, 433aa8 <dhcp_lease_load+0xa8c>
  433a68:	mov	w21, w0
  433a6c:	mov	w0, wzr
  433a70:	bl	40a2c0 <log_get_max_level_realm@plt>
  433a74:	cmp	w0, #0x7
  433a78:	b.lt	433aa8 <dhcp_lease_load+0xa8c>  // b.tstop
  433a7c:	ldur	x6, [x29, #-120]
  433a80:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  433a84:	adrp	x4, 441000 <worker_hash_op+0xcdf8>
  433a88:	adrp	x5, 441000 <worker_hash_op+0xcdf8>
  433a8c:	add	x2, x2, #0x656
  433a90:	add	x4, x4, #0x4dc
  433a94:	add	x5, x5, #0x77f
  433a98:	mov	w0, #0x7                   	// #7
  433a9c:	mov	w3, #0x4d4                 	// #1236
  433aa0:	mov	w1, w21
  433aa4:	bl	40a2d0 <log_internal_realm@plt>
  433aa8:	adrp	x22, 440000 <worker_hash_op+0xbdf8>
  433aac:	adrp	x23, 441000 <worker_hash_op+0xcdf8>
  433ab0:	adrp	x24, 441000 <worker_hash_op+0xcdf8>
  433ab4:	mov	x25, xzr
  433ab8:	add	x26, sp, #0x370
  433abc:	add	x22, x22, #0x656
  433ac0:	add	x23, x23, #0x4dc
  433ac4:	add	x24, x24, #0x7b5
  433ac8:	b	433af8 <dhcp_lease_load+0xadc>
  433acc:	ldr	x2, [sp, #872]
  433ad0:	ldrb	w3, [sp, #864]
  433ad4:	sub	w1, w25, #0x20
  433ad8:	mov	x0, x19
  433adc:	bl	432618 <dhcp_lease_insert_private_option>
  433ae0:	tbnz	w0, #31, 433b68 <dhcp_lease_load+0xb4c>
  433ae4:	ldr	x0, [sp, #872]
  433ae8:	bl	40a320 <free@plt>
  433aec:	add	x25, x25, #0x1
  433af0:	cmp	x25, #0x1f
  433af4:	b.eq	433b54 <dhcp_lease_load+0xb38>  // b.none
  433af8:	ldr	x0, [x26, x25, lsl #3]
  433afc:	str	xzr, [sp, #872]
  433b00:	cbz	x0, 433ae4 <dhcp_lease_load+0xac8>
  433b04:	add	x3, sp, #0x368
  433b08:	add	x4, sp, #0x360
  433b0c:	mov	x1, #0xffffffffffffffff    	// #-1
  433b10:	mov	w2, wzr
  433b14:	bl	40bfa0 <unhexmem_full@plt>
  433b18:	tbz	w0, #31, 433acc <dhcp_lease_load+0xab0>
  433b1c:	mov	w21, w0
  433b20:	mov	w0, wzr
  433b24:	bl	40a2c0 <log_get_max_level_realm@plt>
  433b28:	cmp	w0, #0x7
  433b2c:	b.lt	433ae4 <dhcp_lease_load+0xac8>  // b.tstop
  433b30:	ldr	x6, [x26, x25, lsl #3]
  433b34:	mov	w0, #0x7                   	// #7
  433b38:	mov	w3, #0x4e0                 	// #1248
  433b3c:	mov	w1, w21
  433b40:	mov	x2, x22
  433b44:	mov	x4, x23
  433b48:	mov	x5, x24
  433b4c:	bl	40a2d0 <log_internal_realm@plt>
  433b50:	b	433ae4 <dhcp_lease_load+0xac8>
  433b54:	ldr	x8, [sp, #792]
  433b58:	mov	w21, wzr
  433b5c:	str	x19, [x8]
  433b60:	mov	x19, xzr
  433b64:	b	433b74 <dhcp_lease_load+0xb58>
  433b68:	mov	w21, w0
  433b6c:	ldr	x0, [sp, #872]
  433b70:	bl	40a320 <free@plt>
  433b74:	ldr	x0, [sp, #880]
  433b78:	bl	40a320 <free@plt>
  433b7c:	ldur	x0, [x29, #-144]
  433b80:	bl	40a320 <free@plt>
  433b84:	ldur	x0, [x29, #-136]
  433b88:	bl	40a320 <free@plt>
  433b8c:	ldur	x0, [x29, #-128]
  433b90:	bl	40a320 <free@plt>
  433b94:	ldur	x0, [x29, #-120]
  433b98:	bl	40a320 <free@plt>
  433b9c:	ldur	x0, [x29, #-112]
  433ba0:	bl	40a320 <free@plt>
  433ba4:	ldur	x0, [x29, #-104]
  433ba8:	bl	40a320 <free@plt>
  433bac:	ldur	x0, [x29, #-96]
  433bb0:	bl	40a320 <free@plt>
  433bb4:	ldur	x0, [x29, #-88]
  433bb8:	bl	40a320 <free@plt>
  433bbc:	ldur	x0, [x29, #-80]
  433bc0:	bl	40a320 <free@plt>
  433bc4:	ldur	x0, [x29, #-72]
  433bc8:	bl	40a320 <free@plt>
  433bcc:	ldur	x0, [x29, #-64]
  433bd0:	bl	40a320 <free@plt>
  433bd4:	ldur	x0, [x29, #-56]
  433bd8:	bl	40a320 <free@plt>
  433bdc:	ldur	x0, [x29, #-48]
  433be0:	bl	40a320 <free@plt>
  433be4:	ldur	x0, [x29, #-40]
  433be8:	bl	40a320 <free@plt>
  433bec:	ldur	x0, [x29, #-32]
  433bf0:	bl	40a320 <free@plt>
  433bf4:	ldur	x0, [x29, #-24]
  433bf8:	bl	40a320 <free@plt>
  433bfc:	ldur	x0, [x29, #-16]
  433c00:	bl	40a320 <free@plt>
  433c04:	cbz	x19, 433c10 <dhcp_lease_load+0xbf4>
  433c08:	mov	x0, x19
  433c0c:	bl	431410 <sd_dhcp_lease_unref>
  433c10:	mov	w0, w21
  433c14:	add	sp, sp, #0x500
  433c18:	ldp	x20, x19, [sp, #80]
  433c1c:	ldp	x22, x21, [sp, #64]
  433c20:	ldp	x24, x23, [sp, #48]
  433c24:	ldp	x26, x25, [sp, #32]
  433c28:	ldp	x28, x27, [sp, #16]
  433c2c:	ldp	x29, x30, [sp], #96
  433c30:	ret
  433c34:	adrp	x1, 441000 <worker_hash_op+0xcdf8>
  433c38:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  433c3c:	adrp	x4, 441000 <worker_hash_op+0xcdf8>
  433c40:	add	x1, x1, #0x11c
  433c44:	add	x2, x2, #0x656
  433c48:	add	x4, x4, #0x2a2
  433c4c:	mov	w3, #0x41c                 	// #1052
  433c50:	mov	w0, wzr
  433c54:	bl	40a630 <log_assert_failed_realm@plt>
  433c58:	adrp	x1, 435000 <worker_hash_op+0xdf8>
  433c5c:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  433c60:	adrp	x4, 441000 <worker_hash_op+0xcdf8>
  433c64:	add	x1, x1, #0xfa2
  433c68:	add	x2, x2, #0x656
  433c6c:	add	x4, x4, #0x2a2
  433c70:	mov	w3, #0x41d                 	// #1053
  433c74:	mov	w0, wzr
  433c78:	bl	40a630 <log_assert_failed_realm@plt>

0000000000433c7c <dhcp_lease_set_default_subnet_mask>:
  433c7c:	sub	sp, sp, #0x30
  433c80:	stp	x29, x30, [sp, #16]
  433c84:	str	x19, [sp, #32]
  433c88:	add	x29, sp, #0x10
  433c8c:	cbz	x0, 433ce8 <dhcp_lease_set_default_subnet_mask+0x6c>
  433c90:	ldr	w8, [x0, #16]
  433c94:	mov	x19, x0
  433c98:	cbz	w8, 433cd4 <dhcp_lease_set_default_subnet_mask+0x58>
  433c9c:	add	x0, x29, #0x18
  433ca0:	add	x1, sp, #0x8
  433ca4:	str	w8, [x29, #24]
  433ca8:	bl	40bfb0 <in4_addr_default_subnet_mask@plt>
  433cac:	tbnz	w0, #31, 433cc4 <dhcp_lease_set_default_subnet_mask+0x48>
  433cb0:	ldr	w8, [sp, #8]
  433cb4:	mov	w0, wzr
  433cb8:	mov	w9, #0x1                   	// #1
  433cbc:	strb	w9, [x19, #28]
  433cc0:	str	w8, [x19, #32]
  433cc4:	ldr	x19, [sp, #32]
  433cc8:	ldp	x29, x30, [sp, #16]
  433ccc:	add	sp, sp, #0x30
  433cd0:	ret
  433cd4:	mov	w0, #0xffffffc3            	// #-61
  433cd8:	ldr	x19, [sp, #32]
  433cdc:	ldp	x29, x30, [sp, #16]
  433ce0:	add	sp, sp, #0x30
  433ce4:	ret
  433ce8:	adrp	x1, 440000 <worker_hash_op+0xbdf8>
  433cec:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  433cf0:	adrp	x4, 441000 <worker_hash_op+0xcdf8>
  433cf4:	add	x1, x1, #0x64d
  433cf8:	add	x2, x2, #0x656
  433cfc:	add	x4, x4, #0x7ea
  433d00:	mov	w3, #0x4f2                 	// #1266
  433d04:	bl	40a630 <log_assert_failed_realm@plt>

0000000000433d08 <dhcp_lease_set_client_id>:
  433d08:	stp	x29, x30, [sp, #-48]!
  433d0c:	str	x21, [sp, #16]
  433d10:	stp	x20, x19, [sp, #32]
  433d14:	mov	x29, sp
  433d18:	cbz	x0, 433d98 <dhcp_lease_set_client_id+0x90>
  433d1c:	mov	x20, x2
  433d20:	mov	x19, x0
  433d24:	cbnz	x1, 433d2c <dhcp_lease_set_client_id+0x24>
  433d28:	cbnz	x20, 433db8 <dhcp_lease_set_client_id+0xb0>
  433d2c:	cbz	x20, 433d64 <dhcp_lease_set_client_id+0x5c>
  433d30:	mov	x0, x1
  433d34:	mov	x1, x20
  433d38:	bl	40beb0 <memdup@plt>
  433d3c:	cbz	x0, 433d84 <dhcp_lease_set_client_id+0x7c>
  433d40:	mov	x21, x0
  433d44:	ldr	x0, [x19, #176]
  433d48:	bl	40a320 <free@plt>
  433d4c:	mov	w0, wzr
  433d50:	stp	x21, x20, [x19, #176]
  433d54:	ldp	x20, x19, [sp, #32]
  433d58:	ldr	x21, [sp, #16]
  433d5c:	ldp	x29, x30, [sp], #48
  433d60:	ret
  433d64:	ldr	x0, [x19, #176]
  433d68:	bl	40a320 <free@plt>
  433d6c:	mov	w0, wzr
  433d70:	str	xzr, [x19, #176]
  433d74:	ldp	x20, x19, [sp, #32]
  433d78:	ldr	x21, [sp, #16]
  433d7c:	ldp	x29, x30, [sp], #48
  433d80:	ret
  433d84:	mov	w0, #0xfffffff4            	// #-12
  433d88:	ldp	x20, x19, [sp, #32]
  433d8c:	ldr	x21, [sp, #16]
  433d90:	ldp	x29, x30, [sp], #48
  433d94:	ret
  433d98:	adrp	x1, 440000 <worker_hash_op+0xbdf8>
  433d9c:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  433da0:	adrp	x4, 441000 <worker_hash_op+0xcdf8>
  433da4:	add	x1, x1, #0x64d
  433da8:	add	x2, x2, #0x656
  433dac:	add	x4, x4, #0x884
  433db0:	mov	w3, #0x513                 	// #1299
  433db4:	b	433dd8 <dhcp_lease_set_client_id+0xd0>
  433db8:	adrp	x1, 441000 <worker_hash_op+0xcdf8>
  433dbc:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  433dc0:	adrp	x4, 441000 <worker_hash_op+0xcdf8>
  433dc4:	add	x1, x1, #0x8c8
  433dc8:	add	x2, x2, #0x656
  433dcc:	add	x4, x4, #0x884
  433dd0:	mov	w3, #0x514                 	// #1300
  433dd4:	mov	w0, wzr
  433dd8:	bl	40ac10 <log_assert_failed_return_realm@plt>
  433ddc:	mov	w0, #0xffffffea            	// #-22
  433de0:	ldp	x20, x19, [sp, #32]
  433de4:	ldr	x21, [sp, #16]
  433de8:	ldp	x29, x30, [sp], #48
  433dec:	ret

0000000000433df0 <sd_dhcp_route_get_destination>:
  433df0:	stp	x29, x30, [sp, #-16]!
  433df4:	mov	x29, sp
  433df8:	cbz	x0, 433e18 <sd_dhcp_route_get_destination+0x28>
  433dfc:	cbz	x1, 433e38 <sd_dhcp_route_get_destination+0x48>
  433e00:	mov	x8, x0
  433e04:	ldr	w8, [x8]
  433e08:	mov	w0, wzr
  433e0c:	str	w8, [x1]
  433e10:	ldp	x29, x30, [sp], #16
  433e14:	ret
  433e18:	adrp	x1, 441000 <worker_hash_op+0xcdf8>
  433e1c:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  433e20:	adrp	x4, 441000 <worker_hash_op+0xcdf8>
  433e24:	add	x1, x1, #0x92a
  433e28:	add	x2, x2, #0x656
  433e2c:	add	x4, x4, #0x930
  433e30:	mov	w3, #0x533                 	// #1331
  433e34:	b	433e58 <sd_dhcp_route_get_destination+0x68>
  433e38:	adrp	x1, 441000 <worker_hash_op+0xcdf8>
  433e3c:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  433e40:	adrp	x4, 441000 <worker_hash_op+0xcdf8>
  433e44:	add	x1, x1, #0x975
  433e48:	add	x2, x2, #0x656
  433e4c:	add	x4, x4, #0x930
  433e50:	mov	w3, #0x534                 	// #1332
  433e54:	mov	w0, wzr
  433e58:	bl	40ac10 <log_assert_failed_return_realm@plt>
  433e5c:	mov	w0, #0xffffffea            	// #-22
  433e60:	ldp	x29, x30, [sp], #16
  433e64:	ret

0000000000433e68 <sd_dhcp_route_get_destination_prefix_length>:
  433e68:	stp	x29, x30, [sp, #-16]!
  433e6c:	mov	x29, sp
  433e70:	cbz	x0, 433e90 <sd_dhcp_route_get_destination_prefix_length+0x28>
  433e74:	cbz	x1, 433eb0 <sd_dhcp_route_get_destination_prefix_length+0x48>
  433e78:	mov	x8, x0
  433e7c:	ldrb	w8, [x8, #8]
  433e80:	mov	w0, wzr
  433e84:	strb	w8, [x1]
  433e88:	ldp	x29, x30, [sp], #16
  433e8c:	ret
  433e90:	adrp	x1, 441000 <worker_hash_op+0xcdf8>
  433e94:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  433e98:	adrp	x4, 441000 <worker_hash_op+0xcdf8>
  433e9c:	add	x1, x1, #0x92a
  433ea0:	add	x2, x2, #0x656
  433ea4:	add	x4, x4, #0x981
  433ea8:	mov	w3, #0x53b                 	// #1339
  433eac:	b	433ed0 <sd_dhcp_route_get_destination_prefix_length+0x68>
  433eb0:	adrp	x1, 441000 <worker_hash_op+0xcdf8>
  433eb4:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  433eb8:	adrp	x4, 441000 <worker_hash_op+0xcdf8>
  433ebc:	add	x1, x1, #0x9cd
  433ec0:	add	x2, x2, #0x656
  433ec4:	add	x4, x4, #0x981
  433ec8:	mov	w3, #0x53c                 	// #1340
  433ecc:	mov	w0, wzr
  433ed0:	bl	40ac10 <log_assert_failed_return_realm@plt>
  433ed4:	mov	w0, #0xffffffea            	// #-22
  433ed8:	ldp	x29, x30, [sp], #16
  433edc:	ret

0000000000433ee0 <sd_dhcp_route_get_gateway>:
  433ee0:	stp	x29, x30, [sp, #-16]!
  433ee4:	mov	x29, sp
  433ee8:	cbz	x0, 433f08 <sd_dhcp_route_get_gateway+0x28>
  433eec:	cbz	x1, 433f28 <sd_dhcp_route_get_gateway+0x48>
  433ef0:	mov	x8, x0
  433ef4:	ldr	w8, [x8, #4]
  433ef8:	mov	w0, wzr
  433efc:	str	w8, [x1]
  433f00:	ldp	x29, x30, [sp], #16
  433f04:	ret
  433f08:	adrp	x1, 441000 <worker_hash_op+0xcdf8>
  433f0c:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  433f10:	adrp	x4, 441000 <worker_hash_op+0xcdf8>
  433f14:	add	x1, x1, #0x92a
  433f18:	add	x2, x2, #0x656
  433f1c:	add	x4, x4, #0x9d4
  433f20:	mov	w3, #0x543                 	// #1347
  433f24:	b	433f48 <sd_dhcp_route_get_gateway+0x68>
  433f28:	adrp	x1, 441000 <worker_hash_op+0xcdf8>
  433f2c:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  433f30:	adrp	x4, 441000 <worker_hash_op+0xcdf8>
  433f34:	add	x1, x1, #0xa15
  433f38:	add	x2, x2, #0x656
  433f3c:	add	x4, x4, #0x9d4
  433f40:	mov	w3, #0x544                 	// #1348
  433f44:	mov	w0, wzr
  433f48:	bl	40ac10 <log_assert_failed_return_realm@plt>
  433f4c:	mov	w0, #0xffffffea            	// #-22
  433f50:	ldp	x29, x30, [sp], #16
  433f54:	ret

0000000000433f58 <sd_dhcp_route_get_option>:
  433f58:	stp	x29, x30, [sp, #-16]!
  433f5c:	mov	x29, sp
  433f60:	cbz	x0, 433f70 <sd_dhcp_route_get_option+0x18>
  433f64:	ldrb	w0, [x0, #9]
  433f68:	ldp	x29, x30, [sp], #16
  433f6c:	ret
  433f70:	adrp	x1, 441000 <worker_hash_op+0xcdf8>
  433f74:	adrp	x2, 440000 <worker_hash_op+0xbdf8>
  433f78:	adrp	x4, 441000 <worker_hash_op+0xcdf8>
  433f7c:	add	x1, x1, #0x92a
  433f80:	add	x2, x2, #0x656
  433f84:	add	x4, x4, #0xa1d
  433f88:	mov	w3, #0x54b                 	// #1355
  433f8c:	bl	40ac10 <log_assert_failed_return_realm@plt>
  433f90:	mov	w0, #0xffffffea            	// #-22
  433f94:	ldp	x29, x30, [sp], #16
  433f98:	ret
  433f9c:	udf	#0

0000000000433fa0 <__libc_csu_init>:
  433fa0:	stp	x29, x30, [sp, #-64]!
  433fa4:	mov	x29, sp
  433fa8:	stp	x19, x20, [sp, #16]
  433fac:	adrp	x20, 457000 <__FRAME_END__+0x149b8>
  433fb0:	add	x20, x20, #0x48
  433fb4:	stp	x21, x22, [sp, #32]
  433fb8:	adrp	x21, 457000 <__FRAME_END__+0x149b8>
  433fbc:	add	x21, x21, #0x40
  433fc0:	sub	x20, x20, x21
  433fc4:	mov	w22, w0
  433fc8:	stp	x23, x24, [sp, #48]
  433fcc:	mov	x23, x1
  433fd0:	mov	x24, x2
  433fd4:	bl	40a1e8 <_init>
  433fd8:	cmp	xzr, x20, asr #3
  433fdc:	b.eq	434008 <__libc_csu_init+0x68>  // b.none
  433fe0:	asr	x20, x20, #3
  433fe4:	mov	x19, #0x0                   	// #0
  433fe8:	ldr	x3, [x21, x19, lsl #3]
  433fec:	mov	x2, x24
  433ff0:	add	x19, x19, #0x1
  433ff4:	mov	x1, x23
  433ff8:	mov	w0, w22
  433ffc:	blr	x3
  434000:	cmp	x20, x19
  434004:	b.ne	433fe8 <__libc_csu_init+0x48>  // b.any
  434008:	ldp	x19, x20, [sp, #16]
  43400c:	ldp	x21, x22, [sp, #32]
  434010:	ldp	x23, x24, [sp, #48]
  434014:	ldp	x29, x30, [sp], #64
  434018:	ret
  43401c:	nop

0000000000434020 <__libc_csu_fini>:
  434020:	ret

Disassembly of section .fini:

0000000000434024 <_fini>:
  434024:	stp	x29, x30, [sp, #-16]!
  434028:	mov	x29, sp
  43402c:	ldp	x29, x30, [sp], #16
  434030:	ret
