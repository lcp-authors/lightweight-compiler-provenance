
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//gettext.module_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_register_command_p1>:
       0:	stp	x29, x30, [sp, #-48]!
       4:	mov	x29, sp
       8:	str	x0, [sp, #40]
       c:	str	x1, [sp, #32]
      10:	str	x2, [sp, #24]
      14:	str	x3, [sp, #16]
      18:	mov	w4, #0x1                   	// #1
      1c:	ldr	x3, [sp, #16]
      20:	ldr	x2, [sp, #24]
      24:	ldr	x1, [sp, #32]
      28:	ldr	x0, [sp, #40]
      2c:	bl	0 <grub_register_command_prio>
      30:	ldp	x29, x30, [sp], #48
      34:	ret

0000000000000038 <grub_gettext_pread>:
      38:	stp	x29, x30, [sp, #-48]!
      3c:	mov	x29, sp
      40:	str	x0, [sp, #40]
      44:	str	x1, [sp, #32]
      48:	str	x2, [sp, #24]
      4c:	str	x3, [sp, #16]
      50:	ldr	x0, [sp, #24]
      54:	cmp	x0, #0x0
      58:	b.ne	64 <grub_gettext_pread+0x2c>  // b.any
      5c:	mov	w0, #0x0                   	// #0
      60:	b	f0 <grub_gettext_pread+0xb8>
      64:	ldr	x1, [sp, #16]
      68:	ldr	x0, [sp, #40]
      6c:	bl	0 <grub_file_seek>
      70:	cmn	x0, #0x1
      74:	b.ne	8c <grub_gettext_pread+0x54>  // b.any
      78:	adrp	x0, 0 <grub_register_command_p1>
      7c:	add	x0, x0, #0x0
      80:	ldr	x0, [x0]
      84:	ldr	w0, [x0]
      88:	b	f0 <grub_gettext_pread+0xb8>
      8c:	ldr	x2, [sp, #24]
      90:	ldr	x1, [sp, #32]
      94:	ldr	x0, [sp, #40]
      98:	bl	0 <grub_file_read>
      9c:	mov	x1, x0
      a0:	ldr	x0, [sp, #24]
      a4:	cmp	x1, x0
      a8:	b.eq	ec <grub_gettext_pread+0xb4>  // b.none
      ac:	adrp	x0, 0 <grub_register_command_p1>
      b0:	add	x0, x0, #0x0
      b4:	ldr	x0, [x0]
      b8:	ldr	w0, [x0]
      bc:	cmp	w0, #0x0
      c0:	b.ne	d8 <grub_gettext_pread+0xa0>  // b.any
      c4:	adrp	x0, 0 <grub_register_command_p1>
      c8:	add	x0, x0, #0x0
      cc:	ldr	x1, [x0]
      d0:	mov	w0, #0xe                   	// #14
      d4:	bl	0 <grub_error>
      d8:	adrp	x0, 0 <grub_register_command_p1>
      dc:	add	x0, x0, #0x0
      e0:	ldr	x0, [x0]
      e4:	ldr	w0, [x0]
      e8:	b	f0 <grub_gettext_pread+0xb8>
      ec:	mov	w0, #0x0                   	// #0
      f0:	ldp	x29, x30, [sp], #48
      f4:	ret
	...

0000000000000108 <grub_gettext_getstr_from_position>:
     108:	stp	x29, x30, [sp, #-96]!
     10c:	mov	x29, sp
     110:	str	x0, [sp, #40]
     114:	str	x1, [sp, #32]
     118:	str	x2, [sp, #24]
     11c:	ldr	x0, [sp, #24]
     120:	lsl	x0, x0, #3
     124:	ldr	x1, [sp, #32]
     128:	add	x0, x1, x0
     12c:	str	x0, [sp, #88]
     130:	ldr	x0, [sp, #40]
     134:	ldr	x0, [x0]
     138:	add	x1, sp, #0x30
     13c:	ldr	x3, [sp, #88]
     140:	mov	x2, #0x8                   	// #8
     144:	bl	38 <grub_gettext_pread>
     148:	str	w0, [sp, #84]
     14c:	ldr	w0, [sp, #84]
     150:	cmp	w0, #0x0
     154:	b.eq	160 <grub_gettext_getstr_from_position+0x58>  // b.none
     158:	mov	x0, #0x0                   	// #0
     15c:	b	1e8 <grub_gettext_getstr_from_position+0xe0>
     160:	ldr	w0, [sp, #48]
     164:	mov	w0, w0
     168:	str	x0, [sp, #72]
     16c:	ldr	w0, [sp, #52]
     170:	mov	w0, w0
     174:	str	x0, [sp, #64]
     178:	ldr	x0, [sp, #72]
     17c:	add	x0, x0, #0x1
     180:	bl	0 <grub_malloc>
     184:	str	x0, [sp, #56]
     188:	ldr	x0, [sp, #56]
     18c:	cmp	x0, #0x0
     190:	b.ne	19c <grub_gettext_getstr_from_position+0x94>  // b.any
     194:	mov	x0, #0x0                   	// #0
     198:	b	1e8 <grub_gettext_getstr_from_position+0xe0>
     19c:	ldr	x0, [sp, #40]
     1a0:	ldr	x0, [x0]
     1a4:	ldr	x3, [sp, #64]
     1a8:	ldr	x2, [sp, #72]
     1ac:	ldr	x1, [sp, #56]
     1b0:	bl	38 <grub_gettext_pread>
     1b4:	str	w0, [sp, #84]
     1b8:	ldr	w0, [sp, #84]
     1bc:	cmp	w0, #0x0
     1c0:	b.eq	1d4 <grub_gettext_getstr_from_position+0xcc>  // b.none
     1c4:	ldr	x0, [sp, #56]
     1c8:	bl	0 <grub_free>
     1cc:	mov	x0, #0x0                   	// #0
     1d0:	b	1e8 <grub_gettext_getstr_from_position+0xe0>
     1d4:	ldr	x1, [sp, #56]
     1d8:	ldr	x0, [sp, #72]
     1dc:	add	x0, x1, x0
     1e0:	strb	wzr, [x0]
     1e4:	ldr	x0, [sp, #56]
     1e8:	ldp	x29, x30, [sp], #96
     1ec:	ret

00000000000001f0 <grub_gettext_gettranslation_from_position>:
     1f0:	stp	x29, x30, [sp, #-48]!
     1f4:	mov	x29, sp
     1f8:	str	x19, [sp, #16]
     1fc:	str	x0, [sp, #40]
     200:	str	x1, [sp, #32]
     204:	ldr	x0, [sp, #40]
     208:	ldr	x1, [x0, #40]
     20c:	ldr	x0, [sp, #32]
     210:	lsl	x0, x0, #4
     214:	add	x0, x1, x0
     218:	ldr	x0, [x0, #8]
     21c:	cmp	x0, #0x0
     220:	b.ne	254 <grub_gettext_gettranslation_from_position+0x64>  // b.any
     224:	ldr	x0, [sp, #40]
     228:	ldr	x3, [x0, #16]
     22c:	ldr	x0, [sp, #40]
     230:	ldr	x1, [x0, #40]
     234:	ldr	x0, [sp, #32]
     238:	lsl	x0, x0, #4
     23c:	add	x19, x1, x0
     240:	ldr	x2, [sp, #32]
     244:	mov	x1, x3
     248:	ldr	x0, [sp, #40]
     24c:	bl	108 <grub_gettext_getstr_from_position>
     250:	str	x0, [x19, #8]
     254:	ldr	x0, [sp, #40]
     258:	ldr	x1, [x0, #40]
     25c:	ldr	x0, [sp, #32]
     260:	lsl	x0, x0, #4
     264:	add	x0, x1, x0
     268:	ldr	x0, [x0, #8]
     26c:	ldr	x19, [sp, #16]
     270:	ldp	x29, x30, [sp], #48
     274:	ret

0000000000000278 <grub_gettext_getstring_from_position>:
     278:	stp	x29, x30, [sp, #-48]!
     27c:	mov	x29, sp
     280:	str	x19, [sp, #16]
     284:	str	x0, [sp, #40]
     288:	str	x1, [sp, #32]
     28c:	ldr	x0, [sp, #40]
     290:	ldr	x1, [x0, #40]
     294:	ldr	x0, [sp, #32]
     298:	lsl	x0, x0, #4
     29c:	add	x0, x1, x0
     2a0:	ldr	x0, [x0]
     2a4:	cmp	x0, #0x0
     2a8:	b.ne	2dc <grub_gettext_getstring_from_position+0x64>  // b.any
     2ac:	ldr	x0, [sp, #40]
     2b0:	ldr	x3, [x0, #8]
     2b4:	ldr	x0, [sp, #40]
     2b8:	ldr	x1, [x0, #40]
     2bc:	ldr	x0, [sp, #32]
     2c0:	lsl	x0, x0, #4
     2c4:	add	x19, x1, x0
     2c8:	ldr	x2, [sp, #32]
     2cc:	mov	x1, x3
     2d0:	ldr	x0, [sp, #40]
     2d4:	bl	108 <grub_gettext_getstr_from_position>
     2d8:	str	x0, [x19]
     2dc:	ldr	x0, [sp, #40]
     2e0:	ldr	x1, [x0, #40]
     2e4:	ldr	x0, [sp, #32]
     2e8:	lsl	x0, x0, #4
     2ec:	add	x0, x1, x0
     2f0:	ldr	x0, [x0]
     2f4:	ldr	x19, [sp, #16]
     2f8:	ldp	x29, x30, [sp], #48
     2fc:	ret

0000000000000300 <grub_gettext_translate_real>:
     300:	stp	x29, x30, [sp, #-96]!
     304:	mov	x29, sp
     308:	str	x0, [sp, #24]
     30c:	str	x1, [sp, #16]
     310:	str	xzr, [sp, #88]
     314:	ldr	x0, [sp, #24]
     318:	ldr	x0, [x0, #40]
     31c:	cmp	x0, #0x0
     320:	b.eq	334 <grub_gettext_translate_real+0x34>  // b.none
     324:	ldr	x0, [sp, #24]
     328:	ldr	x0, [x0]
     32c:	cmp	x0, #0x0
     330:	b.ne	33c <grub_gettext_translate_real+0x3c>  // b.any
     334:	mov	x0, #0x0                   	// #0
     338:	b	644 <grub_gettext_translate_real+0x344>
     33c:	adrp	x0, 0 <grub_register_command_p1>
     340:	add	x0, x0, #0x0
     344:	ldr	x0, [x0]
     348:	ldr	w0, [x0]
     34c:	cmp	w0, #0x2
     350:	b.le	35c <grub_gettext_translate_real+0x5c>
     354:	mov	x0, #0x0                   	// #0
     358:	b	644 <grub_gettext_translate_real+0x344>
     35c:	adrp	x0, 0 <grub_register_command_p1>
     360:	add	x0, x0, #0x0
     364:	ldr	x0, [x0]
     368:	ldr	w0, [x0]
     36c:	add	w1, w0, #0x1
     370:	adrp	x0, 0 <grub_register_command_p1>
     374:	add	x0, x0, #0x0
     378:	ldr	x0, [x0]
     37c:	str	w1, [x0]
     380:	bl	0 <grub_error_push>
     384:	ldr	x0, [sp, #24]
     388:	ldr	w0, [x0, #32]
     38c:	str	w0, [sp, #84]
     390:	b	4f0 <grub_gettext_translate_real+0x1f0>
     394:	ldr	w0, [sp, #84]
     398:	mov	w1, #0x1                   	// #1
     39c:	lsl	w0, w1, w0
     3a0:	sxtw	x0, w0
     3a4:	ldr	x1, [sp, #88]
     3a8:	orr	x0, x1, x0
     3ac:	str	x0, [sp, #56]
     3b0:	ldr	x0, [sp, #24]
     3b4:	ldr	x0, [x0, #24]
     3b8:	ldr	x1, [sp, #56]
     3bc:	cmp	x1, x0
     3c0:	b.cs	4e0 <grub_gettext_translate_real+0x1e0>  // b.hs, b.nlast
     3c4:	ldr	x1, [sp, #56]
     3c8:	ldr	x0, [sp, #24]
     3cc:	bl	278 <grub_gettext_getstring_from_position>
     3d0:	str	x0, [sp, #72]
     3d4:	ldr	x0, [sp, #72]
     3d8:	cmp	x0, #0x0
     3dc:	b.ne	420 <grub_gettext_translate_real+0x120>  // b.any
     3e0:	adrp	x0, 0 <grub_register_command_p1>
     3e4:	add	x0, x0, #0x0
     3e8:	ldr	x0, [x0]
     3ec:	str	wzr, [x0]
     3f0:	bl	0 <grub_error_pop>
     3f4:	adrp	x0, 0 <grub_register_command_p1>
     3f8:	add	x0, x0, #0x0
     3fc:	ldr	x0, [x0]
     400:	ldr	w0, [x0]
     404:	sub	w1, w0, #0x1
     408:	adrp	x0, 0 <grub_register_command_p1>
     40c:	add	x0, x0, #0x0
     410:	ldr	x0, [x0]
     414:	str	w1, [x0]
     418:	mov	x0, #0x0                   	// #0
     41c:	b	644 <grub_gettext_translate_real+0x344>
     420:	ldr	x1, [sp, #16]
     424:	ldr	x0, [sp, #72]
     428:	bl	0 <grub_strcmp>
     42c:	str	w0, [sp, #52]
     430:	ldr	w0, [sp, #52]
     434:	cmp	w0, #0x0
     438:	b.gt	444 <grub_gettext_translate_real+0x144>
     43c:	ldr	x0, [sp, #56]
     440:	str	x0, [sp, #88]
     444:	ldr	w0, [sp, #52]
     448:	cmp	w0, #0x0
     44c:	b.ne	4e4 <grub_gettext_translate_real+0x1e4>  // b.any
     450:	str	xzr, [sp, #40]
     454:	ldr	x1, [sp, #88]
     458:	ldr	x0, [sp, #24]
     45c:	bl	1f0 <grub_gettext_gettranslation_from_position>
     460:	str	x0, [sp, #40]
     464:	ldr	x0, [sp, #40]
     468:	cmp	x0, #0x0
     46c:	b.ne	4b0 <grub_gettext_translate_real+0x1b0>  // b.any
     470:	adrp	x0, 0 <grub_register_command_p1>
     474:	add	x0, x0, #0x0
     478:	ldr	x0, [x0]
     47c:	str	wzr, [x0]
     480:	bl	0 <grub_error_pop>
     484:	adrp	x0, 0 <grub_register_command_p1>
     488:	add	x0, x0, #0x0
     48c:	ldr	x0, [x0]
     490:	ldr	w0, [x0]
     494:	sub	w1, w0, #0x1
     498:	adrp	x0, 0 <grub_register_command_p1>
     49c:	add	x0, x0, #0x0
     4a0:	ldr	x0, [x0]
     4a4:	str	w1, [x0]
     4a8:	mov	x0, #0x0                   	// #0
     4ac:	b	644 <grub_gettext_translate_real+0x344>
     4b0:	bl	0 <grub_error_pop>
     4b4:	adrp	x0, 0 <grub_register_command_p1>
     4b8:	add	x0, x0, #0x0
     4bc:	ldr	x0, [x0]
     4c0:	ldr	w0, [x0]
     4c4:	sub	w1, w0, #0x1
     4c8:	adrp	x0, 0 <grub_register_command_p1>
     4cc:	add	x0, x0, #0x0
     4d0:	ldr	x0, [x0]
     4d4:	str	w1, [x0]
     4d8:	ldr	x0, [sp, #40]
     4dc:	b	644 <grub_gettext_translate_real+0x344>
     4e0:	nop
     4e4:	ldr	w0, [sp, #84]
     4e8:	sub	w0, w0, #0x1
     4ec:	str	w0, [sp, #84]
     4f0:	ldr	w0, [sp, #84]
     4f4:	cmp	w0, #0x0
     4f8:	b.ge	394 <grub_gettext_translate_real+0x94>  // b.tcont
     4fc:	ldr	x0, [sp, #88]
     500:	cmp	x0, #0x0
     504:	b.ne	618 <grub_gettext_translate_real+0x318>  // b.any
     508:	ldr	x0, [sp, #24]
     50c:	ldr	x0, [x0, #24]
     510:	cmp	x0, #0x0
     514:	b.eq	618 <grub_gettext_translate_real+0x318>  // b.none
     518:	mov	x1, #0x0                   	// #0
     51c:	ldr	x0, [sp, #24]
     520:	bl	278 <grub_gettext_getstring_from_position>
     524:	str	x0, [sp, #72]
     528:	ldr	x0, [sp, #72]
     52c:	cmp	x0, #0x0
     530:	b.ne	574 <grub_gettext_translate_real+0x274>  // b.any
     534:	adrp	x0, 0 <grub_register_command_p1>
     538:	add	x0, x0, #0x0
     53c:	ldr	x0, [x0]
     540:	str	wzr, [x0]
     544:	bl	0 <grub_error_pop>
     548:	adrp	x0, 0 <grub_register_command_p1>
     54c:	add	x0, x0, #0x0
     550:	ldr	x0, [x0]
     554:	ldr	w0, [x0]
     558:	sub	w1, w0, #0x1
     55c:	adrp	x0, 0 <grub_register_command_p1>
     560:	add	x0, x0, #0x0
     564:	ldr	x0, [x0]
     568:	str	w1, [x0]
     56c:	mov	x0, #0x0                   	// #0
     570:	b	644 <grub_gettext_translate_real+0x344>
     574:	ldr	x1, [sp, #16]
     578:	ldr	x0, [sp, #72]
     57c:	bl	0 <grub_strcmp>
     580:	cmp	w0, #0x0
     584:	b.ne	618 <grub_gettext_translate_real+0x318>  // b.any
     588:	str	xzr, [sp, #64]
     58c:	ldr	x1, [sp, #88]
     590:	ldr	x0, [sp, #24]
     594:	bl	1f0 <grub_gettext_gettranslation_from_position>
     598:	str	x0, [sp, #64]
     59c:	ldr	x0, [sp, #64]
     5a0:	cmp	x0, #0x0
     5a4:	b.ne	5e8 <grub_gettext_translate_real+0x2e8>  // b.any
     5a8:	adrp	x0, 0 <grub_register_command_p1>
     5ac:	add	x0, x0, #0x0
     5b0:	ldr	x0, [x0]
     5b4:	str	wzr, [x0]
     5b8:	bl	0 <grub_error_pop>
     5bc:	adrp	x0, 0 <grub_register_command_p1>
     5c0:	add	x0, x0, #0x0
     5c4:	ldr	x0, [x0]
     5c8:	ldr	w0, [x0]
     5cc:	sub	w1, w0, #0x1
     5d0:	adrp	x0, 0 <grub_register_command_p1>
     5d4:	add	x0, x0, #0x0
     5d8:	ldr	x0, [x0]
     5dc:	str	w1, [x0]
     5e0:	mov	x0, #0x0                   	// #0
     5e4:	b	644 <grub_gettext_translate_real+0x344>
     5e8:	bl	0 <grub_error_pop>
     5ec:	adrp	x0, 0 <grub_register_command_p1>
     5f0:	add	x0, x0, #0x0
     5f4:	ldr	x0, [x0]
     5f8:	ldr	w0, [x0]
     5fc:	sub	w1, w0, #0x1
     600:	adrp	x0, 0 <grub_register_command_p1>
     604:	add	x0, x0, #0x0
     608:	ldr	x0, [x0]
     60c:	str	w1, [x0]
     610:	ldr	x0, [sp, #64]
     614:	b	644 <grub_gettext_translate_real+0x344>
     618:	bl	0 <grub_error_pop>
     61c:	adrp	x0, 0 <grub_register_command_p1>
     620:	add	x0, x0, #0x0
     624:	ldr	x0, [x0]
     628:	ldr	w0, [x0]
     62c:	sub	w1, w0, #0x1
     630:	adrp	x0, 0 <grub_register_command_p1>
     634:	add	x0, x0, #0x0
     638:	ldr	x0, [x0]
     63c:	str	w1, [x0]
     640:	mov	x0, #0x0                   	// #0
     644:	ldp	x29, x30, [sp], #96
     648:	ret
     64c:	nop
	...

0000000000000660 <grub_gettext_translate>:
     660:	stp	x29, x30, [sp, #-48]!
     664:	mov	x29, sp
     668:	str	x0, [sp, #24]
     66c:	ldr	x0, [sp, #24]
     670:	ldrb	w0, [x0]
     674:	cmp	w0, #0x0
     678:	b.ne	684 <grub_gettext_translate+0x24>  // b.any
     67c:	ldr	x0, [sp, #24]
     680:	b	6e0 <grub_gettext_translate+0x80>
     684:	ldr	x1, [sp, #24]
     688:	adrp	x0, 0 <grub_register_command_p1>
     68c:	add	x0, x0, #0x0
     690:	ldr	x0, [x0]
     694:	bl	300 <grub_gettext_translate_real>
     698:	str	x0, [sp, #40]
     69c:	ldr	x0, [sp, #40]
     6a0:	cmp	x0, #0x0
     6a4:	b.eq	6b0 <grub_gettext_translate+0x50>  // b.none
     6a8:	ldr	x0, [sp, #40]
     6ac:	b	6e0 <grub_gettext_translate+0x80>
     6b0:	ldr	x1, [sp, #24]
     6b4:	adrp	x0, 0 <grub_register_command_p1>
     6b8:	add	x0, x0, #0x0
     6bc:	ldr	x0, [x0]
     6c0:	bl	300 <grub_gettext_translate_real>
     6c4:	str	x0, [sp, #40]
     6c8:	ldr	x0, [sp, #40]
     6cc:	cmp	x0, #0x0
     6d0:	b.eq	6dc <grub_gettext_translate+0x7c>  // b.none
     6d4:	ldr	x0, [sp, #40]
     6d8:	b	6e0 <grub_gettext_translate+0x80>
     6dc:	ldr	x0, [sp, #24]
     6e0:	ldp	x29, x30, [sp], #48
     6e4:	ret
	...

00000000000006f8 <grub_gettext_delete_list>:
     6f8:	stp	x29, x30, [sp, #-48]!
     6fc:	mov	x29, sp
     700:	str	x0, [sp, #24]
     704:	ldr	x0, [sp, #24]
     708:	ldr	x0, [x0, #40]
     70c:	str	x0, [sp, #32]
     710:	ldr	x0, [sp, #32]
     714:	cmp	x0, #0x0
     718:	b.eq	7a4 <grub_gettext_delete_list+0xac>  // b.none
     71c:	ldr	x0, [sp, #24]
     720:	str	xzr, [x0, #40]
     724:	str	xzr, [sp, #40]
     728:	b	750 <grub_gettext_delete_list+0x58>
     72c:	ldr	x0, [sp, #40]
     730:	lsl	x0, x0, #4
     734:	ldr	x1, [sp, #32]
     738:	add	x0, x1, x0
     73c:	ldr	x0, [x0]
     740:	bl	0 <grub_free>
     744:	ldr	x0, [sp, #40]
     748:	add	x0, x0, #0x1
     74c:	str	x0, [sp, #40]
     750:	ldr	x0, [sp, #24]
     754:	ldr	x0, [x0, #24]
     758:	ldr	x1, [sp, #40]
     75c:	cmp	x1, x0
     760:	b.cc	72c <grub_gettext_delete_list+0x34>  // b.lo, b.ul, b.last
     764:	ldr	x0, [sp, #32]
     768:	bl	0 <grub_free>
     76c:	ldr	x0, [sp, #24]
     770:	ldr	x0, [x0]
     774:	cmp	x0, #0x0
     778:	b.eq	788 <grub_gettext_delete_list+0x90>  // b.none
     77c:	ldr	x0, [sp, #24]
     780:	ldr	x0, [x0]
     784:	bl	0 <grub_file_close>
     788:	ldr	x0, [sp, #24]
     78c:	str	xzr, [x0]
     790:	mov	x2, #0x30                  	// #48
     794:	mov	w1, #0x0                   	// #0
     798:	ldr	x0, [sp, #24]
     79c:	bl	0 <grub_memset>
     7a0:	b	7a8 <grub_gettext_delete_list+0xb0>
     7a4:	nop
     7a8:	ldp	x29, x30, [sp], #48
     7ac:	ret

00000000000007b0 <grub_mofile_open>:
     7b0:	stp	x29, x30, [sp, #-64]!
     7b4:	mov	x29, sp
     7b8:	str	x0, [sp, #24]
     7bc:	str	x1, [sp, #16]
     7c0:	mov	w1, #0x35                  	// #53
     7c4:	ldr	x0, [sp, #16]
     7c8:	bl	0 <grub_file_open>
     7cc:	str	x0, [sp, #56]
     7d0:	ldr	x0, [sp, #56]
     7d4:	cmp	x0, #0x0
     7d8:	b.ne	7f0 <grub_mofile_open+0x40>  // b.any
     7dc:	adrp	x0, 0 <grub_register_command_p1>
     7e0:	add	x0, x0, #0x0
     7e4:	ldr	x0, [x0]
     7e8:	ldr	w0, [x0]
     7ec:	b	9b4 <grub_mofile_open+0x204>
     7f0:	add	x0, sp, #0x20
     7f4:	mov	x3, #0x0                   	// #0
     7f8:	mov	x2, #0x14                  	// #20
     7fc:	mov	x1, x0
     800:	ldr	x0, [sp, #56]
     804:	bl	38 <grub_gettext_pread>
     808:	str	w0, [sp, #52]
     80c:	ldr	w0, [sp, #52]
     810:	cmp	w0, #0x0
     814:	b.eq	828 <grub_mofile_open+0x78>  // b.none
     818:	ldr	x0, [sp, #56]
     81c:	bl	0 <grub_file_close>
     820:	ldr	w0, [sp, #52]
     824:	b	9b4 <grub_mofile_open+0x204>
     828:	ldr	w1, [sp, #32]
     82c:	mov	w0, #0x12de                	// #4830
     830:	movk	w0, #0x9504, lsl #16
     834:	cmp	w1, w0
     838:	b.eq	860 <grub_mofile_open+0xb0>  // b.none
     83c:	ldr	x0, [sp, #56]
     840:	bl	0 <grub_file_close>
     844:	ldr	x2, [sp, #16]
     848:	adrp	x0, 0 <grub_register_command_p1>
     84c:	add	x0, x0, #0x0
     850:	ldr	x1, [x0]
     854:	mov	w0, #0x4                   	// #4
     858:	bl	0 <grub_error>
     85c:	b	9b4 <grub_mofile_open+0x204>
     860:	ldr	w0, [sp, #36]
     864:	cmp	w0, #0x0
     868:	b.eq	890 <grub_mofile_open+0xe0>  // b.none
     86c:	ldr	x0, [sp, #56]
     870:	bl	0 <grub_file_close>
     874:	ldr	x2, [sp, #16]
     878:	adrp	x0, 0 <grub_register_command_p1>
     87c:	add	x0, x0, #0x0
     880:	ldr	x1, [x0]
     884:	mov	w0, #0x4                   	// #4
     888:	bl	0 <grub_error>
     88c:	b	9b4 <grub_mofile_open+0x204>
     890:	ldr	w0, [sp, #44]
     894:	mov	w1, w0
     898:	ldr	x0, [sp, #24]
     89c:	str	x1, [x0, #8]
     8a0:	ldr	w0, [sp, #48]
     8a4:	mov	w1, w0
     8a8:	ldr	x0, [sp, #24]
     8ac:	str	x1, [x0, #16]
     8b0:	ldr	w0, [sp, #40]
     8b4:	mov	w1, w0
     8b8:	ldr	x0, [sp, #24]
     8bc:	str	x1, [x0, #24]
     8c0:	ldr	x0, [sp, #24]
     8c4:	str	wzr, [x0, #32]
     8c8:	b	8e0 <grub_mofile_open+0x130>
     8cc:	ldr	x0, [sp, #24]
     8d0:	ldr	w0, [x0, #32]
     8d4:	add	w1, w0, #0x1
     8d8:	ldr	x0, [sp, #24]
     8dc:	str	w1, [x0, #32]
     8e0:	ldr	x0, [sp, #24]
     8e4:	ldr	x1, [x0, #24]
     8e8:	ldr	x0, [sp, #24]
     8ec:	ldr	w0, [x0, #32]
     8f0:	lsr	x0, x1, x0
     8f4:	cmp	x0, #0x0
     8f8:	b.ne	8cc <grub_mofile_open+0x11c>  // b.any
     8fc:	ldr	x0, [sp, #24]
     900:	ldr	x0, [x0, #24]
     904:	lsl	x0, x0, #4
     908:	bl	0 <grub_zalloc>
     90c:	mov	x1, x0
     910:	ldr	x0, [sp, #24]
     914:	str	x1, [x0, #40]
     918:	ldr	x0, [sp, #24]
     91c:	ldr	x0, [x0, #40]
     920:	cmp	x0, #0x0
     924:	b.ne	944 <grub_mofile_open+0x194>  // b.any
     928:	ldr	x0, [sp, #56]
     92c:	bl	0 <grub_file_close>
     930:	adrp	x0, 0 <grub_register_command_p1>
     934:	add	x0, x0, #0x0
     938:	ldr	x0, [x0]
     93c:	ldr	w0, [x0]
     940:	b	9b4 <grub_mofile_open+0x204>
     944:	ldr	x0, [sp, #24]
     948:	ldr	x1, [sp, #56]
     94c:	str	x1, [x0]
     950:	adrp	x0, 0 <grub_register_command_p1>
     954:	add	x0, x0, #0x0
     958:	ldr	x0, [x0]
     95c:	ldr	x1, [x0]
     960:	adrp	x0, 0 <grub_register_command_p1>
     964:	add	x0, x0, #0x0
     968:	ldr	x0, [x0]
     96c:	cmp	x1, x0
     970:	b.eq	9b0 <grub_mofile_open+0x200>  // b.none
     974:	adrp	x0, 0 <grub_register_command_p1>
     978:	add	x0, x0, #0x0
     97c:	ldr	x0, [x0]
     980:	ldr	x1, [x0]
     984:	adrp	x0, 0 <grub_register_command_p1>
     988:	add	x0, x0, #0x0
     98c:	ldr	x0, [x0]
     990:	str	x1, [x0]
     994:	adrp	x0, 0 <grub_register_command_p1>
     998:	add	x0, x0, #0x0
     99c:	ldr	x0, [x0]
     9a0:	adrp	x1, 0 <grub_register_command_p1>
     9a4:	add	x1, x1, #0x0
     9a8:	ldr	x1, [x1]
     9ac:	str	x1, [x0]
     9b0:	mov	w0, #0x0                   	// #0
     9b4:	ldp	x29, x30, [sp], #64
     9b8:	ret
     9bc:	nop
	...

00000000000009f0 <grub_mofile_open_lang>:
     9f0:	stp	x29, x30, [sp, #-64]!
     9f4:	mov	x29, sp
     9f8:	str	x0, [sp, #40]
     9fc:	str	x1, [sp, #32]
     a00:	str	x2, [sp, #24]
     a04:	str	x3, [sp, #16]
     a08:	ldr	x3, [sp, #16]
     a0c:	ldr	x2, [sp, #24]
     a10:	ldr	x1, [sp, #32]
     a14:	adrp	x0, 0 <grub_register_command_p1>
     a18:	add	x0, x0, #0x0
     a1c:	ldr	x0, [x0]
     a20:	bl	0 <grub_xasprintf>
     a24:	str	x0, [sp, #48]
     a28:	ldr	x0, [sp, #48]
     a2c:	cmp	x0, #0x0
     a30:	b.ne	a48 <grub_mofile_open_lang+0x58>  // b.any
     a34:	adrp	x0, 0 <grub_register_command_p1>
     a38:	add	x0, x0, #0x0
     a3c:	ldr	x0, [x0]
     a40:	ldr	w0, [x0]
     a44:	b	b4c <grub_mofile_open_lang+0x15c>
     a48:	ldr	x1, [sp, #48]
     a4c:	ldr	x0, [sp, #40]
     a50:	bl	7b0 <grub_mofile_open>
     a54:	str	w0, [sp, #60]
     a58:	ldr	x0, [sp, #48]
     a5c:	bl	0 <grub_free>
     a60:	ldr	w0, [sp, #60]
     a64:	cmp	w0, #0x0
     a68:	b.eq	ad4 <grub_mofile_open_lang+0xe4>  // b.none
     a6c:	adrp	x0, 0 <grub_register_command_p1>
     a70:	add	x0, x0, #0x0
     a74:	ldr	x0, [x0]
     a78:	str	wzr, [x0]
     a7c:	ldr	x3, [sp, #16]
     a80:	ldr	x2, [sp, #24]
     a84:	ldr	x1, [sp, #32]
     a88:	adrp	x0, 0 <grub_register_command_p1>
     a8c:	add	x0, x0, #0x0
     a90:	ldr	x0, [x0]
     a94:	bl	0 <grub_xasprintf>
     a98:	str	x0, [sp, #48]
     a9c:	ldr	x0, [sp, #48]
     aa0:	cmp	x0, #0x0
     aa4:	b.ne	abc <grub_mofile_open_lang+0xcc>  // b.any
     aa8:	adrp	x0, 0 <grub_register_command_p1>
     aac:	add	x0, x0, #0x0
     ab0:	ldr	x0, [x0]
     ab4:	ldr	w0, [x0]
     ab8:	b	b4c <grub_mofile_open_lang+0x15c>
     abc:	ldr	x1, [sp, #48]
     ac0:	ldr	x0, [sp, #40]
     ac4:	bl	7b0 <grub_mofile_open>
     ac8:	str	w0, [sp, #60]
     acc:	ldr	x0, [sp, #48]
     ad0:	bl	0 <grub_free>
     ad4:	ldr	w0, [sp, #60]
     ad8:	cmp	w0, #0x0
     adc:	b.eq	b48 <grub_mofile_open_lang+0x158>  // b.none
     ae0:	adrp	x0, 0 <grub_register_command_p1>
     ae4:	add	x0, x0, #0x0
     ae8:	ldr	x0, [x0]
     aec:	str	wzr, [x0]
     af0:	ldr	x3, [sp, #16]
     af4:	ldr	x2, [sp, #24]
     af8:	ldr	x1, [sp, #32]
     afc:	adrp	x0, 0 <grub_register_command_p1>
     b00:	add	x0, x0, #0x0
     b04:	ldr	x0, [x0]
     b08:	bl	0 <grub_xasprintf>
     b0c:	str	x0, [sp, #48]
     b10:	ldr	x0, [sp, #48]
     b14:	cmp	x0, #0x0
     b18:	b.ne	b30 <grub_mofile_open_lang+0x140>  // b.any
     b1c:	adrp	x0, 0 <grub_register_command_p1>
     b20:	add	x0, x0, #0x0
     b24:	ldr	x0, [x0]
     b28:	ldr	w0, [x0]
     b2c:	b	b4c <grub_mofile_open_lang+0x15c>
     b30:	ldr	x1, [sp, #48]
     b34:	ldr	x0, [sp, #40]
     b38:	bl	7b0 <grub_mofile_open>
     b3c:	str	w0, [sp, #60]
     b40:	ldr	x0, [sp, #48]
     b44:	bl	0 <grub_free>
     b48:	ldr	w0, [sp, #60]
     b4c:	ldp	x29, x30, [sp], #64
     b50:	ret
     b54:	nop
	...

0000000000000b78 <grub_gettext_init_ext>:
     b78:	stp	x29, x30, [sp, #-96]!
     b7c:	mov	x29, sp
     b80:	str	x0, [sp, #40]
     b84:	str	x1, [sp, #32]
     b88:	str	x2, [sp, #24]
     b8c:	str	x3, [sp, #16]
     b90:	ldr	x0, [sp, #40]
     b94:	bl	6f8 <grub_gettext_delete_list>
     b98:	ldr	x0, [sp, #32]
     b9c:	cmp	x0, #0x0
     ba0:	b.eq	bb4 <grub_gettext_init_ext+0x3c>  // b.none
     ba4:	ldr	x0, [sp, #32]
     ba8:	ldrb	w0, [x0]
     bac:	cmp	w0, #0x0
     bb0:	b.ne	bbc <grub_gettext_init_ext+0x44>  // b.any
     bb4:	mov	w0, #0x0                   	// #0
     bb8:	b	d2c <grub_gettext_init_ext+0x1b4>
     bbc:	ldr	x0, [sp, #24]
     bc0:	str	x0, [sp, #88]
     bc4:	adrp	x0, 0 <grub_register_command_p1>
     bc8:	add	x0, x0, #0x0
     bcc:	ldr	x0, [x0]
     bd0:	str	x0, [sp, #80]
     bd4:	ldr	x0, [sp, #88]
     bd8:	cmp	x0, #0x0
     bdc:	b.eq	bf0 <grub_gettext_init_ext+0x78>  // b.none
     be0:	ldr	x0, [sp, #88]
     be4:	ldrb	w0, [x0]
     be8:	cmp	w0, #0x0
     bec:	b.ne	c08 <grub_gettext_init_ext+0x90>  // b.any
     bf0:	ldr	x0, [sp, #16]
     bf4:	str	x0, [sp, #88]
     bf8:	adrp	x0, 0 <grub_register_command_p1>
     bfc:	add	x0, x0, #0x0
     c00:	ldr	x0, [x0]
     c04:	str	x0, [sp, #80]
     c08:	ldr	x0, [sp, #88]
     c0c:	cmp	x0, #0x0
     c10:	b.eq	c24 <grub_gettext_init_ext+0xac>  // b.none
     c14:	ldr	x0, [sp, #88]
     c18:	ldrb	w0, [x0]
     c1c:	cmp	w0, #0x0
     c20:	b.ne	c2c <grub_gettext_init_ext+0xb4>  // b.any
     c24:	mov	w0, #0x0                   	// #0
     c28:	b	d2c <grub_gettext_init_ext+0x1b4>
     c2c:	ldr	x3, [sp, #32]
     c30:	ldr	x2, [sp, #80]
     c34:	ldr	x1, [sp, #88]
     c38:	ldr	x0, [sp, #40]
     c3c:	bl	9f0 <grub_mofile_open_lang>
     c40:	str	w0, [sp, #76]
     c44:	ldr	w0, [sp, #76]
     c48:	cmp	w0, #0x0
     c4c:	b.eq	cc4 <grub_gettext_init_ext+0x14c>  // b.none
     c50:	ldr	x0, [sp, #32]
     c54:	bl	0 <grub_strdup>
     c58:	str	x0, [sp, #64]
     c5c:	ldr	x0, [sp, #64]
     c60:	cmp	x0, #0x0
     c64:	b.eq	c78 <grub_gettext_init_ext+0x100>  // b.none
     c68:	mov	w1, #0x5f                  	// #95
     c6c:	ldr	x0, [sp, #64]
     c70:	bl	0 <grub_strchr>
     c74:	b	c7c <grub_gettext_init_ext+0x104>
     c78:	mov	x0, #0x0                   	// #0
     c7c:	str	x0, [sp, #56]
     c80:	ldr	x0, [sp, #56]
     c84:	cmp	x0, #0x0
     c88:	b.eq	cbc <grub_gettext_init_ext+0x144>  // b.none
     c8c:	ldr	x0, [sp, #56]
     c90:	strb	wzr, [x0]
     c94:	adrp	x0, 0 <grub_register_command_p1>
     c98:	add	x0, x0, #0x0
     c9c:	ldr	x0, [x0]
     ca0:	str	wzr, [x0]
     ca4:	ldr	x3, [sp, #64]
     ca8:	ldr	x2, [sp, #80]
     cac:	ldr	x1, [sp, #88]
     cb0:	ldr	x0, [sp, #40]
     cb4:	bl	9f0 <grub_mofile_open_lang>
     cb8:	str	w0, [sp, #76]
     cbc:	ldr	x0, [sp, #64]
     cc0:	bl	0 <grub_free>
     cc4:	ldr	x0, [sp, #32]
     cc8:	ldrb	w0, [x0]
     ccc:	cmp	w0, #0x65
     cd0:	b.ne	d28 <grub_gettext_init_ext+0x1b0>  // b.any
     cd4:	ldr	x0, [sp, #32]
     cd8:	add	x0, x0, #0x1
     cdc:	ldrb	w0, [x0]
     ce0:	cmp	w0, #0x6e
     ce4:	b.ne	d28 <grub_gettext_init_ext+0x1b0>  // b.any
     ce8:	ldr	x0, [sp, #32]
     cec:	add	x0, x0, #0x2
     cf0:	ldrb	w0, [x0]
     cf4:	cmp	w0, #0x0
     cf8:	b.eq	d10 <grub_gettext_init_ext+0x198>  // b.none
     cfc:	ldr	x0, [sp, #32]
     d00:	add	x0, x0, #0x2
     d04:	ldrb	w0, [x0]
     d08:	cmp	w0, #0x5f
     d0c:	b.ne	d28 <grub_gettext_init_ext+0x1b0>  // b.any
     d10:	str	wzr, [sp, #76]
     d14:	adrp	x0, 0 <grub_register_command_p1>
     d18:	add	x0, x0, #0x0
     d1c:	ldr	x0, [x0]
     d20:	ldr	w1, [sp, #76]
     d24:	str	w1, [x0]
     d28:	ldr	w0, [sp, #76]
     d2c:	ldp	x29, x30, [sp], #96
     d30:	ret
     d34:	nop
	...

0000000000000d50 <grub_gettext_env_write_lang>:
     d50:	stp	x29, x30, [sp, #-64]!
     d54:	mov	x29, sp
     d58:	str	x19, [sp, #16]
     d5c:	str	x0, [sp, #40]
     d60:	str	x1, [sp, #32]
     d64:	adrp	x0, 0 <grub_register_command_p1>
     d68:	add	x0, x0, #0x0
     d6c:	ldr	x0, [x0]
     d70:	bl	0 <grub_env_get>
     d74:	mov	x19, x0
     d78:	adrp	x0, 0 <grub_register_command_p1>
     d7c:	add	x0, x0, #0x0
     d80:	ldr	x0, [x0]
     d84:	bl	0 <grub_env_get>
     d88:	mov	x3, x0
     d8c:	mov	x2, x19
     d90:	ldr	x1, [sp, #32]
     d94:	adrp	x0, 0 <grub_register_command_p1>
     d98:	add	x0, x0, #0x0
     d9c:	ldr	x0, [x0]
     da0:	bl	b78 <grub_gettext_init_ext>
     da4:	str	w0, [sp, #60]
     da8:	ldr	w0, [sp, #60]
     dac:	cmp	w0, #0x0
     db0:	b.eq	db8 <grub_gettext_env_write_lang+0x68>  // b.none
     db4:	bl	0 <grub_print_error>
     db8:	adrp	x0, 0 <grub_register_command_p1>
     dbc:	add	x0, x0, #0x0
     dc0:	ldr	x0, [x0]
     dc4:	bl	0 <grub_env_get>
     dc8:	mov	x3, #0x0                   	// #0
     dcc:	mov	x2, x0
     dd0:	ldr	x1, [sp, #32]
     dd4:	adrp	x0, 0 <grub_register_command_p1>
     dd8:	add	x0, x0, #0x0
     ddc:	ldr	x0, [x0]
     de0:	bl	b78 <grub_gettext_init_ext>
     de4:	str	w0, [sp, #60]
     de8:	ldr	w0, [sp, #60]
     dec:	cmp	w0, #0x0
     df0:	b.eq	df8 <grub_gettext_env_write_lang+0xa8>  // b.none
     df4:	bl	0 <grub_print_error>
     df8:	ldr	x0, [sp, #32]
     dfc:	bl	0 <grub_strdup>
     e00:	ldr	x19, [sp, #16]
     e04:	ldp	x29, x30, [sp], #64
     e08:	ret
     e0c:	nop
	...

0000000000000e38 <grub_gettext_reread_prefix>:
     e38:	stp	x29, x30, [sp, #-64]!
     e3c:	mov	x29, sp
     e40:	str	x19, [sp, #16]
     e44:	str	x0, [sp, #40]
     e48:	adrp	x0, 0 <grub_register_command_p1>
     e4c:	add	x0, x0, #0x0
     e50:	ldr	x0, [x0]
     e54:	bl	0 <grub_env_get>
     e58:	mov	x19, x0
     e5c:	adrp	x0, 0 <grub_register_command_p1>
     e60:	add	x0, x0, #0x0
     e64:	ldr	x0, [x0]
     e68:	bl	0 <grub_env_get>
     e6c:	ldr	x3, [sp, #40]
     e70:	mov	x2, x0
     e74:	mov	x1, x19
     e78:	adrp	x0, 0 <grub_register_command_p1>
     e7c:	add	x0, x0, #0x0
     e80:	ldr	x0, [x0]
     e84:	bl	b78 <grub_gettext_init_ext>
     e88:	str	w0, [sp, #60]
     e8c:	ldr	w0, [sp, #60]
     e90:	cmp	w0, #0x0
     e94:	b.eq	e9c <grub_gettext_reread_prefix+0x64>  // b.none
     e98:	bl	0 <grub_print_error>
     e9c:	nop
     ea0:	ldr	x19, [sp, #16]
     ea4:	ldp	x29, x30, [sp], #64
     ea8:	ret
     eac:	nop
	...

0000000000000ec8 <read_main>:
     ec8:	stp	x29, x30, [sp, #-64]!
     ecc:	mov	x29, sp
     ed0:	str	x19, [sp, #16]
     ed4:	str	x0, [sp, #40]
     ed8:	str	x1, [sp, #32]
     edc:	adrp	x0, 0 <grub_register_command_p1>
     ee0:	add	x0, x0, #0x0
     ee4:	ldr	x0, [x0]
     ee8:	bl	0 <grub_env_get>
     eec:	mov	x19, x0
     ef0:	adrp	x0, 0 <grub_register_command_p1>
     ef4:	add	x0, x0, #0x0
     ef8:	ldr	x0, [x0]
     efc:	bl	0 <grub_env_get>
     f00:	mov	x3, x0
     f04:	ldr	x2, [sp, #32]
     f08:	mov	x1, x19
     f0c:	adrp	x0, 0 <grub_register_command_p1>
     f10:	add	x0, x0, #0x0
     f14:	ldr	x0, [x0]
     f18:	bl	b78 <grub_gettext_init_ext>
     f1c:	str	w0, [sp, #60]
     f20:	ldr	w0, [sp, #60]
     f24:	cmp	w0, #0x0
     f28:	b.eq	f30 <read_main+0x68>  // b.none
     f2c:	bl	0 <grub_print_error>
     f30:	ldr	x0, [sp, #32]
     f34:	bl	0 <grub_strdup>
     f38:	ldr	x19, [sp, #16]
     f3c:	ldp	x29, x30, [sp], #64
     f40:	ret
     f44:	nop
	...

0000000000000f60 <read_secondary>:
     f60:	stp	x29, x30, [sp, #-48]!
     f64:	mov	x29, sp
     f68:	str	x0, [sp, #24]
     f6c:	str	x1, [sp, #16]
     f70:	adrp	x0, 0 <grub_register_command_p1>
     f74:	add	x0, x0, #0x0
     f78:	ldr	x0, [x0]
     f7c:	bl	0 <grub_env_get>
     f80:	mov	x3, #0x0                   	// #0
     f84:	ldr	x2, [sp, #16]
     f88:	mov	x1, x0
     f8c:	adrp	x0, 0 <grub_register_command_p1>
     f90:	add	x0, x0, #0x0
     f94:	ldr	x0, [x0]
     f98:	bl	b78 <grub_gettext_init_ext>
     f9c:	str	w0, [sp, #44]
     fa0:	ldr	w0, [sp, #44]
     fa4:	cmp	w0, #0x0
     fa8:	b.eq	fb0 <read_secondary+0x50>  // b.none
     fac:	bl	0 <grub_print_error>
     fb0:	ldr	x0, [sp, #16]
     fb4:	bl	0 <grub_strdup>
     fb8:	ldp	x29, x30, [sp], #48
     fbc:	ret
	...

0000000000000fd0 <grub_cmd_translate>:
     fd0:	stp	x29, x30, [sp, #-64]!
     fd4:	mov	x29, sp
     fd8:	str	x0, [sp, #40]
     fdc:	str	w1, [sp, #36]
     fe0:	str	x2, [sp, #24]
     fe4:	ldr	w0, [sp, #36]
     fe8:	cmp	w0, #0x1
     fec:	b.eq	1008 <grub_cmd_translate+0x38>  // b.none
     ff0:	adrp	x0, 0 <grub_register_command_p1>
     ff4:	add	x0, x0, #0x0
     ff8:	ldr	x1, [x0]
     ffc:	mov	w0, #0x12                  	// #18
    1000:	bl	0 <grub_error>
    1004:	b	1030 <grub_cmd_translate+0x60>
    1008:	ldr	x0, [sp, #24]
    100c:	ldr	x0, [x0]
    1010:	bl	660 <grub_gettext_translate>
    1014:	str	x0, [sp, #56]
    1018:	ldr	x1, [sp, #56]
    101c:	adrp	x0, 0 <grub_register_command_p1>
    1020:	add	x0, x0, #0x0
    1024:	ldr	x0, [x0]
    1028:	bl	0 <grub_printf>
    102c:	mov	w0, #0x0                   	// #0
    1030:	ldp	x29, x30, [sp], #64
    1034:	ret
	...

0000000000001048 <grub_mod_init>:
    1048:	stp	x29, x30, [sp, #-64]!
    104c:	mov	x29, sp
    1050:	str	x19, [sp, #16]
    1054:	str	x0, [sp, #40]
    1058:	adrp	x0, 0 <grub_register_command_p1>
    105c:	add	x0, x0, #0x0
    1060:	ldr	x0, [x0]
    1064:	bl	0 <grub_env_get>
    1068:	str	x0, [sp, #56]
    106c:	adrp	x0, 0 <grub_register_command_p1>
    1070:	add	x0, x0, #0x0
    1074:	ldr	x0, [x0]
    1078:	bl	0 <grub_env_get>
    107c:	mov	x19, x0
    1080:	adrp	x0, 0 <grub_register_command_p1>
    1084:	add	x0, x0, #0x0
    1088:	ldr	x0, [x0]
    108c:	bl	0 <grub_env_get>
    1090:	mov	x3, x0
    1094:	mov	x2, x19
    1098:	ldr	x1, [sp, #56]
    109c:	adrp	x0, 0 <grub_register_command_p1>
    10a0:	add	x0, x0, #0x0
    10a4:	ldr	x0, [x0]
    10a8:	bl	b78 <grub_gettext_init_ext>
    10ac:	str	w0, [sp, #52]
    10b0:	ldr	w0, [sp, #52]
    10b4:	cmp	w0, #0x0
    10b8:	b.eq	10c0 <grub_mod_init+0x78>  // b.none
    10bc:	bl	0 <grub_print_error>
    10c0:	adrp	x0, 0 <grub_register_command_p1>
    10c4:	add	x0, x0, #0x0
    10c8:	ldr	x0, [x0]
    10cc:	bl	0 <grub_env_get>
    10d0:	mov	x3, #0x0                   	// #0
    10d4:	mov	x2, x0
    10d8:	ldr	x1, [sp, #56]
    10dc:	adrp	x0, 0 <grub_register_command_p1>
    10e0:	add	x0, x0, #0x0
    10e4:	ldr	x0, [x0]
    10e8:	bl	b78 <grub_gettext_init_ext>
    10ec:	str	w0, [sp, #52]
    10f0:	ldr	w0, [sp, #52]
    10f4:	cmp	w0, #0x0
    10f8:	b.eq	1100 <grub_mod_init+0xb8>  // b.none
    10fc:	bl	0 <grub_print_error>
    1100:	adrp	x0, 0 <grub_register_command_p1>
    1104:	add	x0, x0, #0x0
    1108:	ldr	x2, [x0]
    110c:	mov	x1, #0x0                   	// #0
    1110:	adrp	x0, 0 <grub_register_command_p1>
    1114:	add	x0, x0, #0x0
    1118:	ldr	x0, [x0]
    111c:	bl	0 <grub_register_variable_hook>
    1120:	adrp	x0, 0 <grub_register_command_p1>
    1124:	add	x0, x0, #0x0
    1128:	ldr	x2, [x0]
    112c:	mov	x1, #0x0                   	// #0
    1130:	adrp	x0, 0 <grub_register_command_p1>
    1134:	add	x0, x0, #0x0
    1138:	ldr	x0, [x0]
    113c:	bl	0 <grub_register_variable_hook>
    1140:	adrp	x0, 0 <grub_register_command_p1>
    1144:	add	x0, x0, #0x0
    1148:	ldr	x3, [x0]
    114c:	adrp	x0, 0 <grub_register_command_p1>
    1150:	add	x0, x0, #0x0
    1154:	ldr	x2, [x0]
    1158:	adrp	x0, 0 <grub_register_command_p1>
    115c:	add	x0, x0, #0x0
    1160:	ldr	x1, [x0]
    1164:	adrp	x0, 0 <grub_register_command_p1>
    1168:	add	x0, x0, #0x0
    116c:	ldr	x0, [x0]
    1170:	bl	0 <grub_register_command_p1>
    1174:	adrp	x0, 0 <grub_register_command_p1>
    1178:	add	x0, x0, #0x0
    117c:	ldr	x2, [x0]
    1180:	mov	x1, #0x0                   	// #0
    1184:	adrp	x0, 0 <grub_register_command_p1>
    1188:	add	x0, x0, #0x0
    118c:	ldr	x0, [x0]
    1190:	bl	0 <grub_register_variable_hook>
    1194:	adrp	x0, 0 <grub_register_command_p1>
    1198:	add	x0, x0, #0x0
    119c:	ldr	x0, [x0]
    11a0:	bl	0 <grub_env_export>
    11a4:	adrp	x0, 0 <grub_register_command_p1>
    11a8:	add	x0, x0, #0x0
    11ac:	ldr	x0, [x0]
    11b0:	bl	0 <grub_env_export>
    11b4:	adrp	x0, 0 <grub_register_command_p1>
    11b8:	add	x0, x0, #0x0
    11bc:	ldr	x0, [x0]
    11c0:	bl	0 <grub_env_export>
    11c4:	nop
    11c8:	ldr	x19, [sp, #16]
    11cc:	ldp	x29, x30, [sp], #64
    11d0:	ret
    11d4:	nop
	...

0000000000001240 <grub_mod_fini>:
    1240:	stp	x29, x30, [sp, #-16]!
    1244:	mov	x29, sp
    1248:	adrp	x0, 0 <grub_register_command_p1>
    124c:	add	x0, x0, #0x0
    1250:	ldr	x0, [x0]
    1254:	bl	6f8 <grub_gettext_delete_list>
    1258:	adrp	x0, 0 <grub_register_command_p1>
    125c:	add	x0, x0, #0x0
    1260:	ldr	x0, [x0]
    1264:	bl	6f8 <grub_gettext_delete_list>
    1268:	adrp	x0, 0 <grub_register_command_p1>
    126c:	add	x0, x0, #0x0
    1270:	ldr	x0, [x0]
    1274:	ldr	x1, [x0]
    1278:	adrp	x0, 0 <grub_register_command_p1>
    127c:	add	x0, x0, #0x0
    1280:	ldr	x0, [x0]
    1284:	str	x1, [x0]
    1288:	nop
    128c:	ldp	x29, x30, [sp], #16
    1290:	ret
    1294:	nop
	...
