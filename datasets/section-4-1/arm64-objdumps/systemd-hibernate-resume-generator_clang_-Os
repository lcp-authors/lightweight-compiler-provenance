
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-hibernate-resume-generator_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400b90 <_init>:
  400b90:	stp	x29, x30, [sp, #-16]!
  400b94:	mov	x29, sp
  400b98:	bl	400d88 <call_weak_fn>
  400b9c:	ldp	x29, x30, [sp], #16
  400ba0:	ret

Disassembly of section .plt:

0000000000400ba8 <__libc_start_main@plt-0x20>:
  400ba8:	stp	x16, x30, [sp, #-16]!
  400bac:	adrp	x16, 41f000 <__FRAME_END__+0x1d7d8>
  400bb0:	ldr	x17, [x16, #3904]
  400bb4:	add	x16, x16, #0xf40
  400bb8:	br	x17
  400bbc:	nop
  400bc0:	nop
  400bc4:	nop

0000000000400bc8 <__libc_start_main@plt>:
  400bc8:	adrp	x16, 41f000 <__FRAME_END__+0x1d7d8>
  400bcc:	ldr	x17, [x16, #3912]
  400bd0:	add	x16, x16, #0xf48
  400bd4:	br	x17

0000000000400bd8 <abort@plt>:
  400bd8:	adrp	x16, 41f000 <__FRAME_END__+0x1d7d8>
  400bdc:	ldr	x17, [x16, #3920]
  400be0:	add	x16, x16, #0xf50
  400be4:	br	x17

0000000000400be8 <__gmon_start__@plt>:
  400be8:	adrp	x16, 41f000 <__FRAME_END__+0x1d7d8>
  400bec:	ldr	x17, [x16, #3928]
  400bf0:	add	x16, x16, #0xf58
  400bf4:	br	x17

0000000000400bf8 <free@plt>:
  400bf8:	adrp	x16, 41f000 <__FRAME_END__+0x1d7d8>
  400bfc:	ldr	x17, [x16, #3936]
  400c00:	add	x16, x16, #0xf60
  400c04:	br	x17

0000000000400c08 <log_setup_generator@plt>:
  400c08:	adrp	x16, 41f000 <__FRAME_END__+0x1d7d8>
  400c0c:	ldr	x17, [x16, #3944]
  400c10:	add	x16, x16, #0xf68
  400c14:	br	x17

0000000000400c18 <log_get_max_level_realm@plt>:
  400c18:	adrp	x16, 41f000 <__FRAME_END__+0x1d7d8>
  400c1c:	ldr	x17, [x16, #3952]
  400c20:	add	x16, x16, #0xf70
  400c24:	br	x17

0000000000400c28 <log_internal_realm@plt>:
  400c28:	adrp	x16, 41f000 <__FRAME_END__+0x1d7d8>
  400c2c:	ldr	x17, [x16, #3960]
  400c30:	add	x16, x16, #0xf78
  400c34:	br	x17

0000000000400c38 <in_initrd@plt>:
  400c38:	adrp	x16, 41f000 <__FRAME_END__+0x1d7d8>
  400c3c:	ldr	x17, [x16, #3968]
  400c40:	add	x16, x16, #0xf80
  400c44:	br	x17

0000000000400c48 <proc_cmdline_parse@plt>:
  400c48:	adrp	x16, 41f000 <__FRAME_END__+0x1d7d8>
  400c4c:	ldr	x17, [x16, #3976]
  400c50:	add	x16, x16, #0xf88
  400c54:	br	x17

0000000000400c58 <unit_name_from_path_instance@plt>:
  400c58:	adrp	x16, 41f000 <__FRAME_END__+0x1d7d8>
  400c5c:	ldr	x17, [x16, #3984]
  400c60:	add	x16, x16, #0xf90
  400c64:	br	x17

0000000000400c68 <strjoin_real@plt>:
  400c68:	adrp	x16, 41f000 <__FRAME_END__+0x1d7d8>
  400c6c:	ldr	x17, [x16, #3992]
  400c70:	add	x16, x16, #0xf98
  400c74:	br	x17

0000000000400c78 <mkdir_parents_label@plt>:
  400c78:	adrp	x16, 41f000 <__FRAME_END__+0x1d7d8>
  400c7c:	ldr	x17, [x16, #4000]
  400c80:	add	x16, x16, #0xfa0
  400c84:	br	x17

0000000000400c88 <symlink@plt>:
  400c88:	adrp	x16, 41f000 <__FRAME_END__+0x1d7d8>
  400c8c:	ldr	x17, [x16, #4008]
  400c90:	add	x16, x16, #0xfa8
  400c94:	br	x17

0000000000400c98 <generator_write_timeouts@plt>:
  400c98:	adrp	x16, 41f000 <__FRAME_END__+0x1d7d8>
  400c9c:	ldr	x17, [x16, #4016]
  400ca0:	add	x16, x16, #0xfb0
  400ca4:	br	x17

0000000000400ca8 <log_oom_internal@plt>:
  400ca8:	adrp	x16, 41f000 <__FRAME_END__+0x1d7d8>
  400cac:	ldr	x17, [x16, #4024]
  400cb0:	add	x16, x16, #0xfb8
  400cb4:	br	x17

0000000000400cb8 <__errno_location@plt>:
  400cb8:	adrp	x16, 41f000 <__FRAME_END__+0x1d7d8>
  400cbc:	ldr	x17, [x16, #4032]
  400cc0:	add	x16, x16, #0xfc0
  400cc4:	br	x17

0000000000400cc8 <ask_password_agent_close@plt>:
  400cc8:	adrp	x16, 41f000 <__FRAME_END__+0x1d7d8>
  400ccc:	ldr	x17, [x16, #4040]
  400cd0:	add	x16, x16, #0xfc8
  400cd4:	br	x17

0000000000400cd8 <polkit_agent_close@plt>:
  400cd8:	adrp	x16, 41f000 <__FRAME_END__+0x1d7d8>
  400cdc:	ldr	x17, [x16, #4048]
  400ce0:	add	x16, x16, #0xfd0
  400ce4:	br	x17

0000000000400ce8 <pager_close@plt>:
  400ce8:	adrp	x16, 41f000 <__FRAME_END__+0x1d7d8>
  400cec:	ldr	x17, [x16, #4056]
  400cf0:	add	x16, x16, #0xfd8
  400cf4:	br	x17

0000000000400cf8 <mac_selinux_finish@plt>:
  400cf8:	adrp	x16, 41f000 <__FRAME_END__+0x1d7d8>
  400cfc:	ldr	x17, [x16, #4064]
  400d00:	add	x16, x16, #0xfe0
  400d04:	br	x17

0000000000400d08 <strcmp@plt>:
  400d08:	adrp	x16, 41f000 <__FRAME_END__+0x1d7d8>
  400d0c:	ldr	x17, [x16, #4072]
  400d10:	add	x16, x16, #0xfe8
  400d14:	br	x17

0000000000400d18 <fstab_node_to_udev_node@plt>:
  400d18:	adrp	x16, 41f000 <__FRAME_END__+0x1d7d8>
  400d1c:	ldr	x17, [x16, #4080]
  400d20:	add	x16, x16, #0xff0
  400d24:	br	x17

0000000000400d28 <strextend_with_separator@plt>:
  400d28:	adrp	x16, 41f000 <__FRAME_END__+0x1d7d8>
  400d2c:	ldr	x17, [x16, #4088]
  400d30:	add	x16, x16, #0xff8
  400d34:	br	x17

Disassembly of section .text:

0000000000400d38 <_start>:
  400d38:	mov	x29, #0x0                   	// #0
  400d3c:	mov	x30, #0x0                   	// #0
  400d40:	mov	x5, x0
  400d44:	ldr	x1, [sp]
  400d48:	add	x2, sp, #0x8
  400d4c:	mov	x6, sp
  400d50:	movz	x0, #0x0, lsl #48
  400d54:	movk	x0, #0x0, lsl #32
  400d58:	movk	x0, #0x40, lsl #16
  400d5c:	movk	x0, #0xe7c
  400d60:	movz	x3, #0x0, lsl #48
  400d64:	movk	x3, #0x0, lsl #32
  400d68:	movk	x3, #0x40, lsl #16
  400d6c:	movk	x3, #0x13b0
  400d70:	movz	x4, #0x0, lsl #48
  400d74:	movk	x4, #0x0, lsl #32
  400d78:	movk	x4, #0x40, lsl #16
  400d7c:	movk	x4, #0x1430
  400d80:	bl	400bc8 <__libc_start_main@plt>
  400d84:	bl	400bd8 <abort@plt>

0000000000400d88 <call_weak_fn>:
  400d88:	adrp	x0, 41f000 <__FRAME_END__+0x1d7d8>
  400d8c:	ldr	x0, [x0, #3864]
  400d90:	cbz	x0, 400d98 <call_weak_fn+0x10>
  400d94:	b	400be8 <__gmon_start__@plt>
  400d98:	ret

0000000000400d9c <deregister_tm_clones>:
  400d9c:	adrp	x0, 420000 <arg_dest>
  400da0:	add	x1, x0, #0x0
  400da4:	adrp	x0, 420000 <arg_dest>
  400da8:	add	x0, x0, #0x0
  400dac:	cmp	x1, x0
  400db0:	b.eq	400ddc <deregister_tm_clones+0x40>  // b.none
  400db4:	sub	sp, sp, #0x10
  400db8:	adrp	x1, 401000 <main+0x184>
  400dbc:	ldr	x1, [x1, #1096]
  400dc0:	str	x1, [sp, #8]
  400dc4:	cbz	x1, 400dd4 <deregister_tm_clones+0x38>
  400dc8:	mov	x16, x1
  400dcc:	add	sp, sp, #0x10
  400dd0:	br	x16
  400dd4:	add	sp, sp, #0x10
  400dd8:	ret
  400ddc:	ret

0000000000400de0 <register_tm_clones>:
  400de0:	adrp	x0, 420000 <arg_dest>
  400de4:	add	x1, x0, #0x0
  400de8:	adrp	x0, 420000 <arg_dest>
  400dec:	add	x0, x0, #0x0
  400df0:	sub	x1, x1, x0
  400df4:	mov	x2, #0x2                   	// #2
  400df8:	asr	x1, x1, #3
  400dfc:	sdiv	x1, x1, x2
  400e00:	cbz	x1, 400e2c <register_tm_clones+0x4c>
  400e04:	sub	sp, sp, #0x10
  400e08:	adrp	x2, 401000 <main+0x184>
  400e0c:	ldr	x2, [x2, #1104]
  400e10:	str	x2, [sp, #8]
  400e14:	cbz	x2, 400e24 <register_tm_clones+0x44>
  400e18:	mov	x16, x2
  400e1c:	add	sp, sp, #0x10
  400e20:	br	x16
  400e24:	add	sp, sp, #0x10
  400e28:	ret
  400e2c:	ret

0000000000400e30 <__do_global_dtors_aux>:
  400e30:	stp	x29, x30, [sp, #-32]!
  400e34:	mov	x29, sp
  400e38:	str	x19, [sp, #16]
  400e3c:	adrp	x19, 420000 <arg_dest>
  400e40:	ldrb	w0, [x19, #8]
  400e44:	cbnz	w0, 400e54 <__do_global_dtors_aux+0x24>
  400e48:	bl	400d9c <deregister_tm_clones>
  400e4c:	mov	w0, #0x1                   	// #1
  400e50:	strb	w0, [x19, #8]
  400e54:	ldr	x19, [sp, #16]
  400e58:	ldp	x29, x30, [sp], #32
  400e5c:	ret

0000000000400e60 <frame_dummy>:
  400e60:	b	400de0 <register_tm_clones>

0000000000400e64 <__unique_prefix_static_destructor_wrapper0>:
  400e64:	ldr	x0, [x0]
  400e68:	b	400bf8 <free@plt>

0000000000400e6c <__unique_prefix_static_destructor_wrapper1>:
  400e6c:	ldr	x0, [x0]
  400e70:	b	400bf8 <free@plt>

0000000000400e74 <__unique_prefix_static_destructor_wrapper2>:
  400e74:	ldr	x0, [x0]
  400e78:	b	400bf8 <free@plt>

0000000000400e7c <main>:
  400e7c:	stp	x29, x30, [sp, #-48]!
  400e80:	adrp	x8, 420000 <arg_dest>
  400e84:	adrp	x9, 420000 <arg_dest>
  400e88:	str	x21, [sp, #16]
  400e8c:	stp	x20, x19, [sp, #32]
  400e90:	mov	x29, sp
  400e94:	mov	x19, x1
  400e98:	mov	w20, w0
  400e9c:	str	w0, [x8, #48]
  400ea0:	str	x1, [x9, #56]
  400ea4:	bl	400c08 <log_setup_generator@plt>
  400ea8:	cmp	w20, #0x2
  400eac:	b.lt	400efc <main+0x80>  // b.tstop
  400eb0:	cmp	w20, #0x4
  400eb4:	b.eq	400efc <main+0x80>  // b.none
  400eb8:	mov	w0, wzr
  400ebc:	bl	400c18 <log_get_max_level_realm@plt>
  400ec0:	cmp	w0, #0x3
  400ec4:	b.lt	400fb4 <main+0x138>  // b.tstop
  400ec8:	adrp	x2, 401000 <main+0x184>
  400ecc:	adrp	x4, 401000 <main+0x184>
  400ed0:	adrp	x5, 401000 <main+0x184>
  400ed4:	mov	w1, #0x16                  	// #22
  400ed8:	add	x2, x2, #0x45b
  400edc:	add	x4, x4, #0x48d
  400ee0:	add	x5, x5, #0x491
  400ee4:	mov	w0, #0x3                   	// #3
  400ee8:	movk	w1, #0x4000, lsl #16
  400eec:	mov	w3, #0x6d                  	// #109
  400ef0:	bl	400c28 <log_internal_realm@plt>
  400ef4:	mov	w20, w0
  400ef8:	b	401190 <main+0x314>
  400efc:	cmp	w20, #0x2
  400f00:	b.lt	400f10 <main+0x94>  // b.tstop
  400f04:	ldr	x8, [x19, #8]
  400f08:	adrp	x9, 420000 <arg_dest>
  400f0c:	str	x8, [x9]
  400f10:	bl	400c38 <in_initrd@plt>
  400f14:	tbz	w0, #0, 400fbc <main+0x140>
  400f18:	adrp	x0, 401000 <main+0x184>
  400f1c:	add	x0, x0, #0x1f4
  400f20:	mov	x1, xzr
  400f24:	mov	w2, wzr
  400f28:	bl	400c48 <proc_cmdline_parse@plt>
  400f2c:	tbz	w0, #31, 400f6c <main+0xf0>
  400f30:	mov	w19, w0
  400f34:	mov	w0, wzr
  400f38:	bl	400c18 <log_get_max_level_realm@plt>
  400f3c:	cmp	w0, #0x4
  400f40:	b.lt	400f6c <main+0xf0>  // b.tstop
  400f44:	adrp	x2, 401000 <main+0x184>
  400f48:	adrp	x4, 401000 <main+0x184>
  400f4c:	adrp	x5, 401000 <main+0x184>
  400f50:	add	x2, x2, #0x45b
  400f54:	add	x4, x4, #0x48d
  400f58:	add	x5, x5, #0x4df
  400f5c:	mov	w0, #0x4                   	// #4
  400f60:	mov	w3, #0x7a                  	// #122
  400f64:	mov	w1, w19
  400f68:	bl	400c28 <log_internal_realm@plt>
  400f6c:	adrp	x8, 420000 <arg_dest>
  400f70:	ldrb	w8, [x8, #40]
  400f74:	cmp	w8, #0x1
  400f78:	b.ne	401000 <main+0x184>  // b.any
  400f7c:	mov	w0, wzr
  400f80:	bl	400c18 <log_get_max_level_realm@plt>
  400f84:	cmp	w0, #0x5
  400f88:	mov	w20, wzr
  400f8c:	b.lt	401190 <main+0x314>  // b.tstop
  400f90:	adrp	x2, 401000 <main+0x184>
  400f94:	adrp	x4, 401000 <main+0x184>
  400f98:	adrp	x5, 401000 <main+0x184>
  400f9c:	add	x2, x2, #0x45b
  400fa0:	add	x4, x4, #0x48d
  400fa4:	add	x5, x5, #0x511
  400fa8:	mov	w0, #0x5                   	// #5
  400fac:	mov	w3, #0x7d                  	// #125
  400fb0:	b	400ff0 <main+0x174>
  400fb4:	mov	w20, #0xffffffea            	// #-22
  400fb8:	b	401190 <main+0x314>
  400fbc:	mov	w0, wzr
  400fc0:	bl	400c18 <log_get_max_level_realm@plt>
  400fc4:	cmp	w0, #0x7
  400fc8:	mov	w20, wzr
  400fcc:	b.lt	401190 <main+0x314>  // b.tstop
  400fd0:	adrp	x2, 401000 <main+0x184>
  400fd4:	adrp	x4, 401000 <main+0x184>
  400fd8:	adrp	x5, 401000 <main+0x184>
  400fdc:	add	x2, x2, #0x45b
  400fe0:	add	x4, x4, #0x48d
  400fe4:	add	x5, x5, #0x4bb
  400fe8:	mov	w0, #0x7                   	// #7
  400fec:	mov	w3, #0x74                  	// #116
  400ff0:	mov	w1, wzr
  400ff4:	bl	400c28 <log_internal_realm@plt>
  400ff8:	mov	w20, wzr
  400ffc:	b	401190 <main+0x314>
  401000:	adrp	x21, 420000 <arg_dest>
  401004:	ldr	x1, [x21, #16]
  401008:	str	xzr, [x29, #24]
  40100c:	cbz	x1, 4010a4 <main+0x228>
  401010:	adrp	x0, 401000 <main+0x184>
  401014:	adrp	x2, 401000 <main+0x184>
  401018:	add	x0, x0, #0x64f
  40101c:	add	x2, x2, #0x668
  401020:	add	x3, x29, #0x18
  401024:	bl	400c58 <unit_name_from_path_instance@plt>
  401028:	tbnz	w0, #31, 4010b0 <main+0x234>
  40102c:	adrp	x20, 420000 <arg_dest>
  401030:	ldr	x0, [x20]
  401034:	ldr	x2, [x29, #24]
  401038:	adrp	x1, 401000 <main+0x184>
  40103c:	add	x1, x1, #0x6a1
  401040:	mov	x3, xzr
  401044:	bl	400c68 <strjoin_real@plt>
  401048:	mov	x19, x0
  40104c:	cbz	x0, 4010f8 <main+0x27c>
  401050:	mov	w1, #0x1ed                 	// #493
  401054:	mov	x0, x19
  401058:	bl	400c78 <mkdir_parents_label@plt>
  40105c:	adrp	x0, 401000 <main+0x184>
  401060:	add	x0, x0, #0x6b8
  401064:	mov	x1, x19
  401068:	bl	400c88 <symlink@plt>
  40106c:	tbnz	w0, #31, 401124 <main+0x2a8>
  401070:	adrp	x8, 420000 <arg_dest>
  401074:	adrp	x9, 420000 <arg_dest>
  401078:	ldr	x8, [x8, #24]
  40107c:	ldr	x9, [x9, #32]
  401080:	ldr	x1, [x21, #16]
  401084:	ldr	x0, [x20]
  401088:	cmp	x8, #0x0
  40108c:	csel	x3, x9, x8, eq  // eq = none
  401090:	mov	x2, x1
  401094:	mov	x4, xzr
  401098:	bl	400c98 <generator_write_timeouts@plt>
  40109c:	and	w20, w0, w0, asr #31
  4010a0:	b	401180 <main+0x304>
  4010a4:	mov	x19, xzr
  4010a8:	mov	w20, wzr
  4010ac:	b	401180 <main+0x304>
  4010b0:	mov	w20, w0
  4010b4:	mov	w0, wzr
  4010b8:	bl	400c18 <log_get_max_level_realm@plt>
  4010bc:	cmp	w0, #0x3
  4010c0:	b.lt	401114 <main+0x298>  // b.tstop
  4010c4:	adrp	x2, 401000 <main+0x184>
  4010c8:	adrp	x4, 401000 <main+0x184>
  4010cc:	adrp	x5, 401000 <main+0x184>
  4010d0:	add	x2, x2, #0x45b
  4010d4:	add	x4, x4, #0x671
  4010d8:	add	x5, x5, #0x680
  4010dc:	mov	w0, #0x3                   	// #3
  4010e0:	mov	w3, #0x50                  	// #80
  4010e4:	mov	w1, w20
  4010e8:	bl	400c28 <log_internal_realm@plt>
  4010ec:	mov	w20, w0
  4010f0:	mov	x19, xzr
  4010f4:	b	401180 <main+0x304>
  4010f8:	adrp	x1, 401000 <main+0x184>
  4010fc:	adrp	x3, 401000 <main+0x184>
  401100:	add	x1, x1, #0x45b
  401104:	add	x3, x3, #0x671
  401108:	mov	w2, #0x54                  	// #84
  40110c:	bl	400ca8 <log_oom_internal@plt>
  401110:	b	401168 <main+0x2ec>
  401114:	mov	w8, wzr
  401118:	neg	w9, w20
  40111c:	mov	x19, xzr
  401120:	b	40117c <main+0x300>
  401124:	bl	400cb8 <__errno_location@plt>
  401128:	ldr	w20, [x0]
  40112c:	mov	w0, wzr
  401130:	bl	400c18 <log_get_max_level_realm@plt>
  401134:	cmp	w0, #0x3
  401138:	b.lt	401170 <main+0x2f4>  // b.tstop
  40113c:	adrp	x2, 401000 <main+0x184>
  401140:	adrp	x4, 401000 <main+0x184>
  401144:	adrp	x5, 401000 <main+0x184>
  401148:	add	x2, x2, #0x45b
  40114c:	add	x4, x4, #0x671
  401150:	add	x5, x5, #0x6ee
  401154:	mov	w0, #0x3                   	// #3
  401158:	mov	w3, #0x58                  	// #88
  40115c:	mov	w1, w20
  401160:	mov	x6, x19
  401164:	bl	400c28 <log_internal_realm@plt>
  401168:	mov	w20, w0
  40116c:	b	401180 <main+0x304>
  401170:	cmp	w20, #0x0
  401174:	mov	w8, wzr
  401178:	cneg	w9, w20, mi  // mi = first
  40117c:	sub	w20, w8, w9, uxtb
  401180:	mov	x0, x19
  401184:	bl	400bf8 <free@plt>
  401188:	ldr	x0, [x29, #24]
  40118c:	bl	400bf8 <free@plt>
  401190:	bl	400cc8 <ask_password_agent_close@plt>
  401194:	bl	400cd8 <polkit_agent_close@plt>
  401198:	bl	400ce8 <pager_close@plt>
  40119c:	bl	400cf8 <mac_selinux_finish@plt>
  4011a0:	adrp	x8, 41f000 <__FRAME_END__+0x1d7d8>
  4011a4:	ldr	x8, [x8, #3872]
  4011a8:	adrp	x19, 41f000 <__FRAME_END__+0x1d7d8>
  4011ac:	ldr	x19, [x19, #3880]
  4011b0:	add	x9, x8, #0x7
  4011b4:	and	x21, x9, #0xfffffffffffffff8
  4011b8:	cmp	x21, x19
  4011bc:	cset	w9, cs  // cs = hs, nlast
  4011c0:	cmp	x8, #0x0
  4011c4:	cset	w8, eq  // eq = none
  4011c8:	orr	w8, w8, w9
  4011cc:	tbnz	w8, #0, 4011e0 <main+0x364>
  4011d0:	ldp	x0, x8, [x21], #16
  4011d4:	blr	x8
  4011d8:	cmp	x21, x19
  4011dc:	b.cc	4011d0 <main+0x354>  // b.lo, b.ul, b.last
  4011e0:	lsr	w0, w20, #31
  4011e4:	ldp	x20, x19, [sp, #32]
  4011e8:	ldr	x21, [sp, #16]
  4011ec:	ldp	x29, x30, [sp], #48
  4011f0:	ret

00000000004011f4 <parse_proc_cmdline_item>:
  4011f4:	stp	x29, x30, [sp, #-32]!
  4011f8:	stp	x20, x19, [sp, #16]
  4011fc:	mov	x20, x1
  401200:	adrp	x1, 401000 <main+0x184>
  401204:	add	x1, x1, #0x54d
  401208:	mov	x29, sp
  40120c:	mov	x19, x0
  401210:	bl	400d08 <strcmp@plt>
  401214:	cbz	w0, 401294 <parse_proc_cmdline_item+0xa0>
  401218:	adrp	x1, 401000 <main+0x184>
  40121c:	add	x1, x1, #0x56c
  401220:	mov	x0, x19
  401224:	bl	400d08 <strcmp@plt>
  401228:	cbz	w0, 4012bc <parse_proc_cmdline_item+0xc8>
  40122c:	adrp	x1, 401000 <main+0x184>
  401230:	add	x1, x1, #0x57a
  401234:	mov	x0, x19
  401238:	bl	400d08 <strcmp@plt>
  40123c:	cbz	w0, 4012f8 <parse_proc_cmdline_item+0x104>
  401240:	adrp	x1, 401000 <main+0x184>
  401244:	add	x1, x1, #0x584
  401248:	mov	x0, x19
  40124c:	bl	400d08 <strcmp@plt>
  401250:	cbnz	w0, 4013a0 <parse_proc_cmdline_item+0x1ac>
  401254:	cbz	x20, 401394 <parse_proc_cmdline_item+0x1a0>
  401258:	mov	w0, wzr
  40125c:	bl	400c18 <log_get_max_level_realm@plt>
  401260:	cmp	w0, #0x4
  401264:	b.lt	4013a0 <parse_proc_cmdline_item+0x1ac>  // b.tstop
  401268:	adrp	x2, 401000 <main+0x184>
  40126c:	adrp	x4, 401000 <main+0x184>
  401270:	adrp	x5, 401000 <main+0x184>
  401274:	add	x2, x2, #0x45b
  401278:	add	x4, x4, #0x554
  40127c:	add	x5, x5, #0x58d
  401280:	mov	w0, #0x4                   	// #4
  401284:	mov	w3, #0x3c                  	// #60
  401288:	mov	w1, wzr
  40128c:	bl	400c28 <log_internal_realm@plt>
  401290:	b	4013a0 <parse_proc_cmdline_item+0x1ac>
  401294:	cbz	x20, 401334 <parse_proc_cmdline_item+0x140>
  401298:	mov	x0, x20
  40129c:	bl	400d18 <fstab_node_to_udev_node@plt>
  4012a0:	cbz	x0, 401374 <parse_proc_cmdline_item+0x180>
  4012a4:	adrp	x20, 420000 <arg_dest>
  4012a8:	mov	x19, x0
  4012ac:	ldr	x0, [x20, #16]
  4012b0:	bl	400bf8 <free@plt>
  4012b4:	str	x19, [x20, #16]
  4012b8:	b	4013a0 <parse_proc_cmdline_item+0x1ac>
  4012bc:	cbz	x20, 401334 <parse_proc_cmdline_item+0x140>
  4012c0:	adrp	x0, 420000 <arg_dest>
  4012c4:	adrp	x1, 401000 <main+0x184>
  4012c8:	add	x0, x0, #0x18
  4012cc:	add	x1, x1, #0x578
  4012d0:	mov	x2, x20
  4012d4:	mov	x3, xzr
  4012d8:	bl	400d28 <strextend_with_separator@plt>
  4012dc:	cbnz	x0, 4013a0 <parse_proc_cmdline_item+0x1ac>
  4012e0:	adrp	x1, 401000 <main+0x184>
  4012e4:	adrp	x3, 401000 <main+0x184>
  4012e8:	add	x1, x1, #0x45b
  4012ec:	add	x3, x3, #0x554
  4012f0:	mov	w2, #0x30                  	// #48
  4012f4:	b	401388 <parse_proc_cmdline_item+0x194>
  4012f8:	cbz	x20, 401334 <parse_proc_cmdline_item+0x140>
  4012fc:	adrp	x0, 420000 <arg_dest>
  401300:	adrp	x1, 401000 <main+0x184>
  401304:	add	x0, x0, #0x20
  401308:	add	x1, x1, #0x578
  40130c:	mov	x2, x20
  401310:	mov	x3, xzr
  401314:	bl	400d28 <strextend_with_separator@plt>
  401318:	cbnz	x0, 4013a0 <parse_proc_cmdline_item+0x1ac>
  40131c:	adrp	x1, 401000 <main+0x184>
  401320:	adrp	x3, 401000 <main+0x184>
  401324:	add	x1, x1, #0x45b
  401328:	add	x3, x3, #0x554
  40132c:	mov	w2, #0x38                  	// #56
  401330:	b	401388 <parse_proc_cmdline_item+0x194>
  401334:	mov	w0, wzr
  401338:	bl	400c18 <log_get_max_level_realm@plt>
  40133c:	cmp	w0, #0x4
  401340:	b.lt	4013a0 <parse_proc_cmdline_item+0x1ac>  // b.tstop
  401344:	adrp	x2, 401000 <main+0x184>
  401348:	adrp	x4, 401000 <main+0x184>
  40134c:	adrp	x5, 401000 <main+0x184>
  401350:	add	x2, x2, #0x5dc
  401354:	add	x4, x4, #0x5f5
  401358:	add	x5, x5, #0x610
  40135c:	mov	w0, #0x4                   	// #4
  401360:	mov	w3, #0x21                  	// #33
  401364:	mov	w1, wzr
  401368:	mov	x6, x19
  40136c:	bl	400c28 <log_internal_realm@plt>
  401370:	b	4013a0 <parse_proc_cmdline_item+0x1ac>
  401374:	adrp	x1, 401000 <main+0x184>
  401378:	adrp	x3, 401000 <main+0x184>
  40137c:	add	x1, x1, #0x45b
  401380:	add	x3, x3, #0x554
  401384:	mov	w2, #0x26                  	// #38
  401388:	ldp	x20, x19, [sp, #16]
  40138c:	ldp	x29, x30, [sp], #32
  401390:	b	400ca8 <log_oom_internal@plt>
  401394:	adrp	x8, 420000 <arg_dest>
  401398:	mov	w9, #0x1                   	// #1
  40139c:	strb	w9, [x8, #40]
  4013a0:	ldp	x20, x19, [sp, #16]
  4013a4:	mov	w0, wzr
  4013a8:	ldp	x29, x30, [sp], #32
  4013ac:	ret

00000000004013b0 <__libc_csu_init>:
  4013b0:	stp	x29, x30, [sp, #-64]!
  4013b4:	mov	x29, sp
  4013b8:	stp	x19, x20, [sp, #16]
  4013bc:	adrp	x20, 41f000 <__FRAME_END__+0x1d7d8>
  4013c0:	add	x20, x20, #0xcf0
  4013c4:	stp	x21, x22, [sp, #32]
  4013c8:	adrp	x21, 41f000 <__FRAME_END__+0x1d7d8>
  4013cc:	add	x21, x21, #0xce8
  4013d0:	sub	x20, x20, x21
  4013d4:	mov	w22, w0
  4013d8:	stp	x23, x24, [sp, #48]
  4013dc:	mov	x23, x1
  4013e0:	mov	x24, x2
  4013e4:	bl	400b90 <_init>
  4013e8:	cmp	xzr, x20, asr #3
  4013ec:	b.eq	401418 <__libc_csu_init+0x68>  // b.none
  4013f0:	asr	x20, x20, #3
  4013f4:	mov	x19, #0x0                   	// #0
  4013f8:	ldr	x3, [x21, x19, lsl #3]
  4013fc:	mov	x2, x24
  401400:	add	x19, x19, #0x1
  401404:	mov	x1, x23
  401408:	mov	w0, w22
  40140c:	blr	x3
  401410:	cmp	x20, x19
  401414:	b.ne	4013f8 <__libc_csu_init+0x48>  // b.any
  401418:	ldp	x19, x20, [sp, #16]
  40141c:	ldp	x21, x22, [sp, #32]
  401420:	ldp	x23, x24, [sp, #48]
  401424:	ldp	x29, x30, [sp], #64
  401428:	ret
  40142c:	nop

0000000000401430 <__libc_csu_fini>:
  401430:	ret

Disassembly of section .fini:

0000000000401434 <_fini>:
  401434:	stp	x29, x30, [sp, #-16]!
  401438:	mov	x29, sp
  40143c:	ldp	x29, x30, [sp], #16
  401440:	ret
