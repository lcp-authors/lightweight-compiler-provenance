
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//EUC-KR.so_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000830 <.init>:
 830:	stp	x29, x30, [sp, #-16]!
 834:	mov	x29, sp
 838:	bl	8e0 <__assert_fail@plt+0x10>
 83c:	ldp	x29, x30, [sp], #16
 840:	ret

Disassembly of section .plt:

0000000000000850 <__cxa_finalize@plt-0x20>:
 850:	stp	x16, x30, [sp, #-16]!
 854:	adrp	x16, 12000 <gconv@@Base+0x115a8>
 858:	ldr	x17, [x16, #4088]
 85c:	add	x16, x16, #0xff8
 860:	br	x17
 864:	nop
 868:	nop
 86c:	nop

0000000000000870 <__cxa_finalize@plt>:
 870:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 874:	ldr	x17, [x16]
 878:	add	x16, x16, #0x0
 87c:	br	x17

0000000000000880 <__gconv_transliterate@plt>:
 880:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 884:	ldr	x17, [x16, #8]
 888:	add	x16, x16, #0x8
 88c:	br	x17

0000000000000890 <__stack_chk_fail@plt>:
 890:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 894:	ldr	x17, [x16, #16]
 898:	add	x16, x16, #0x10
 89c:	br	x17

00000000000008a0 <__gmon_start__@plt>:
 8a0:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 8a4:	ldr	x17, [x16, #24]
 8a8:	add	x16, x16, #0x18
 8ac:	br	x17

00000000000008b0 <strcmp@plt>:
 8b0:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 8b4:	ldr	x17, [x16, #32]
 8b8:	add	x16, x16, #0x20
 8bc:	br	x17

00000000000008c0 <_dl_mcount_wrapper_check@plt>:
 8c0:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 8c4:	ldr	x17, [x16, #40]
 8c8:	add	x16, x16, #0x28
 8cc:	br	x17

00000000000008d0 <__assert_fail@plt>:
 8d0:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 8d4:	ldr	x17, [x16, #48]
 8d8:	add	x16, x16, #0x30
 8dc:	br	x17

Disassembly of section .text:

00000000000008e0 <gconv_init@@Base-0xe8>:
     8e0:	adrp	x0, 12000 <gconv@@Base+0x115a8>
     8e4:	ldr	x0, [x0, #4032]
     8e8:	cbz	x0, 8f0 <__assert_fail@plt+0x20>
     8ec:	b	8a0 <__gmon_start__@plt>
     8f0:	ret
     8f4:	nop
     8f8:	adrp	x0, 13000 <gconv@@Base+0x125a8>
     8fc:	add	x0, x0, #0x40
     900:	adrp	x1, 13000 <gconv@@Base+0x125a8>
     904:	add	x1, x1, #0x40
     908:	cmp	x1, x0
     90c:	b.eq	924 <__assert_fail@plt+0x54>  // b.none
     910:	adrp	x1, 12000 <gconv@@Base+0x115a8>
     914:	ldr	x1, [x1, #3984]
     918:	cbz	x1, 924 <__assert_fail@plt+0x54>
     91c:	mov	x16, x1
     920:	br	x16
     924:	ret
     928:	adrp	x0, 13000 <gconv@@Base+0x125a8>
     92c:	add	x0, x0, #0x40
     930:	adrp	x1, 13000 <gconv@@Base+0x125a8>
     934:	add	x1, x1, #0x40
     938:	sub	x1, x1, x0
     93c:	lsr	x2, x1, #63
     940:	add	x1, x2, x1, asr #3
     944:	cmp	xzr, x1, asr #1
     948:	asr	x1, x1, #1
     94c:	b.eq	964 <__assert_fail@plt+0x94>  // b.none
     950:	adrp	x2, 12000 <gconv@@Base+0x115a8>
     954:	ldr	x2, [x2, #4064]
     958:	cbz	x2, 964 <__assert_fail@plt+0x94>
     95c:	mov	x16, x2
     960:	br	x16
     964:	ret
     968:	stp	x29, x30, [sp, #-32]!
     96c:	mov	x29, sp
     970:	str	x19, [sp, #16]
     974:	adrp	x19, 13000 <gconv@@Base+0x125a8>
     978:	ldrb	w0, [x19, #64]
     97c:	cbnz	w0, 9a4 <__assert_fail@plt+0xd4>
     980:	adrp	x0, 12000 <gconv@@Base+0x115a8>
     984:	ldr	x0, [x0, #3992]
     988:	cbz	x0, 998 <__assert_fail@plt+0xc8>
     98c:	adrp	x0, 13000 <gconv@@Base+0x125a8>
     990:	ldr	x0, [x0, #56]
     994:	bl	870 <__cxa_finalize@plt>
     998:	bl	8f8 <__assert_fail@plt+0x28>
     99c:	mov	w0, #0x1                   	// #1
     9a0:	strb	w0, [x19, #64]
     9a4:	ldr	x19, [sp, #16]
     9a8:	ldp	x29, x30, [sp], #32
     9ac:	ret
     9b0:	b	928 <__assert_fail@plt+0x58>
     9b4:	nop
     9b8:	and	w0, w1, #0xff
     9bc:	cmp	w0, #0x9f
     9c0:	csinv	w0, w0, wzr, ls  // ls = plast
     9c4:	ret

00000000000009c8 <gconv_init@@Base>:
     9c8:	stp	x29, x30, [sp, #-32]!
     9cc:	mov	x29, sp
     9d0:	stp	x19, x20, [sp, #16]
     9d4:	mov	x19, x0
     9d8:	adrp	x20, 1000 <gconv@@Base+0x5a8>
     9dc:	ldr	x0, [x0, #24]
     9e0:	add	x20, x20, #0xf20
     9e4:	mov	x1, x20
     9e8:	bl	8b0 <strcmp@plt>
     9ec:	cbnz	w0, a24 <gconv_init@@Base+0x5c>
     9f0:	mov	x2, #0x1                   	// #1
     9f4:	adrp	x0, 0 <__cxa_finalize@plt-0x870>
     9f8:	movk	x2, #0x2, lsl #32
     9fc:	add	x0, x0, #0x9b8
     a00:	mov	x1, #0x400000004           	// #17179869188
     a04:	str	x0, [x19, #48]
     a08:	stp	x2, x1, [x19, #72]
     a0c:	str	xzr, [x19, #96]
     a10:	mov	w0, #0x0                   	// #0
     a14:	str	wzr, [x19, #88]
     a18:	ldp	x19, x20, [sp, #16]
     a1c:	ldp	x29, x30, [sp], #32
     a20:	ret
     a24:	ldr	x0, [x19, #32]
     a28:	mov	x1, x20
     a2c:	bl	8b0 <strcmp@plt>
     a30:	cbnz	w0, a50 <gconv_init@@Base+0x88>
     a34:	mov	x1, #0x1                   	// #1
     a38:	mov	x0, #0xffffffffffffffff    	// #-1
     a3c:	mov	x2, #0x400000004           	// #17179869188
     a40:	movk	x1, #0x2, lsl #32
     a44:	stp	x2, x1, [x19, #72]
     a48:	str	x0, [x19, #96]
     a4c:	b	a10 <gconv_init@@Base+0x48>
     a50:	mov	w0, #0x1                   	// #1
     a54:	b	a18 <gconv_init@@Base+0x50>

0000000000000a58 <gconv@@Base>:
     a58:	stp	x29, x30, [sp, #-224]!
     a5c:	mov	x11, x0
     a60:	mov	x9, x2
     a64:	mov	x29, sp
     a68:	stp	x19, x20, [sp, #16]
     a6c:	mov	x20, x1
     a70:	adrp	x1, 12000 <gconv@@Base+0x115a8>
     a74:	stp	x23, x24, [sp, #48]
     a78:	mov	x19, x3
     a7c:	ldr	w23, [x20, #16]
     a80:	ldr	x1, [x1, #4040]
     a84:	stp	x25, x26, [sp, #64]
     a88:	mov	x10, x4
     a8c:	ldr	x0, [x1]
     a90:	str	x0, [sp, #216]
     a94:	mov	x0, #0x0                   	// #0
     a98:	add	x1, x11, #0x68
     a9c:	add	x0, x20, #0x30
     aa0:	stp	x1, x0, [sp, #120]
     aa4:	mov	x25, x5
     aa8:	mov	w26, w7
     aac:	mov	x24, #0x0                   	// #0
     ab0:	tbnz	w23, #0, ad0 <gconv@@Base+0x78>
     ab4:	ldr	x0, [x11, #104]
     ab8:	ldr	x24, [x11, #144]
     abc:	cbz	x0, ad0 <gconv@@Base+0x78>
     ac0:	adrp	x0, 12000 <gconv@@Base+0x115a8>
     ac4:	ldr	x0, [x0, #4016]
     ac8:	ldr	x0, [x0]
     acc:	eor	x24, x24, x0
     ad0:	cbnz	w6, 1570 <gconv@@Base+0xb18>
     ad4:	cmp	x10, #0x0
     ad8:	add	x0, sp, #0xb0
     adc:	csel	x1, x20, x10, eq  // eq = none
     ae0:	cmp	x25, #0x0
     ae4:	csel	x0, x0, xzr, ne  // ne = any
     ae8:	stp	x21, x22, [sp, #32]
     aec:	stp	x27, x28, [sp, #80]
     af0:	ldr	x28, [x1]
     af4:	str	x0, [sp, #136]
     af8:	str	xzr, [sp, #176]
     afc:	ldr	x21, [x9]
     b00:	ldr	x22, [x20, #8]
     b04:	cbnz	w26, f00 <gconv@@Base+0x4a8>
     b08:	stp	x10, x25, [sp, #104]
     b0c:	mov	w10, w23
     b10:	mov	x23, x28
     b14:	mov	x28, x11
     b18:	add	x0, sp, #0xc8
     b1c:	str	x0, [sp, #144]
     b20:	add	x0, sp, #0xc0
     b24:	str	x0, [sp, #152]
     b28:	mov	x27, x9
     b2c:	ldr	x0, [x28, #96]
     b30:	cbz	x0, ccc <gconv@@Base+0x274>
     b34:	stp	x21, x23, [sp, #192]
     b38:	cmp	x19, x21
     b3c:	b.eq	1648 <gconv@@Base+0xbf0>  // b.none
     b40:	adrp	x7, 12000 <gconv@@Base+0x115a8>
     b44:	mov	x25, x23
     b48:	mov	x0, x21
     b4c:	mov	w12, #0x4                   	// #4
     b50:	ldr	x7, [x7, #4008]
     b54:	add	x6, x0, #0x4
     b58:	cmp	x19, x6
     b5c:	b.cc	ecc <gconv@@Base+0x474>  // b.lo, b.ul, b.last
     b60:	cmp	x22, x25
     b64:	b.ls	d98 <gconv@@Base+0x340>  // b.plast
     b68:	ldr	w2, [x0]
     b6c:	cmp	w2, #0x9f
     b70:	b.ls	c18 <gconv@@Base+0x1c0>  // b.plast
     b74:	mov	w0, #0x20a9                	// #8361
     b78:	cmp	w2, w0
     b7c:	b.eq	1134 <gconv@@Base+0x6dc>  // b.none
     b80:	mov	w11, #0xffff5400            	// #-44032
     b84:	add	w1, w2, w11
     b88:	mov	w0, #0x2ba3                	// #11171
     b8c:	cmp	w1, w0
     b90:	b.ls	da4 <gconv@@Base+0x34c>  // b.plast
     b94:	mov	w8, #0xffff0700            	// #-63744
     b98:	add	w1, w2, w8
     b9c:	cmp	w1, #0x10b
     ba0:	mov	w9, #0xffffb200            	// #-19968
     ba4:	add	w0, w2, w9
     ba8:	mov	w1, #0x51ff                	// #20991
     bac:	ccmp	w0, w1, #0x0, hi  // hi = pmore
     bb0:	b.hi	e08 <gconv@@Base+0x3b0>  // b.pmore
     bb4:	adrp	x5, 12000 <gconv@@Base+0x115a8>
     bb8:	mov	w4, #0x0                   	// #0
     bbc:	mov	w0, #0x1317                	// #4887
     bc0:	ldr	x5, [x5, #4024]
     bc4:	b	bd4 <gconv@@Base+0x17c>
     bc8:	sub	w0, w3, #0x1
     bcc:	cmp	w0, w4
     bd0:	b.lt	c00 <gconv@@Base+0x1a8>  // b.tstop
     bd4:	add	w3, w4, w0
     bd8:	asr	w3, w3, #1
     bdc:	sbfiz	x1, x3, #2, #32
     be0:	add	x8, x5, x1
     be4:	ldrh	w1, [x5, x1]
     be8:	cmp	w2, w1
     bec:	b.cc	bc8 <gconv@@Base+0x170>  // b.lo, b.ul, b.last
     bf0:	b.ls	11b4 <gconv@@Base+0x75c>  // b.plast
     bf4:	add	w4, w3, #0x1
     bf8:	cmp	w0, w4
     bfc:	b.ge	bd4 <gconv@@Base+0x17c>  // b.tcont
     c00:	mov	w0, #0x1c00                	// #7168
     c04:	cmp	w0, w2, lsr #7
     c08:	b.ne	de8 <gconv@@Base+0x390>  // b.any
     c0c:	mov	x0, x6
     c10:	str	x6, [sp, #192]
     c14:	b	c38 <gconv@@Base+0x1e0>
     c18:	and	w0, w2, #0xff
     c1c:	cbz	w2, 1124 <gconv@@Base+0x6cc>
     c20:	add	x1, x25, #0x1
     c24:	str	x1, [sp, #200]
     c28:	strb	w0, [x25]
     c2c:	ldp	x0, x25, [sp, #192]
     c30:	add	x0, x0, #0x4
     c34:	str	x0, [sp, #192]
     c38:	cmp	x19, x0
     c3c:	b.ne	b54 <gconv@@Base+0xfc>  // b.any
     c40:	str	x0, [x27]
     c44:	ldr	x0, [sp, #104]
     c48:	cbnz	x0, d58 <gconv@@Base+0x300>
     c4c:	ldp	w1, w0, [x20, #16]
     c50:	add	w0, w0, #0x1
     c54:	str	w0, [x20, #20]
     c58:	tbnz	w1, #0, 11cc <gconv@@Base+0x774>
     c5c:	cmp	x23, x25
     c60:	b.cs	1204 <gconv@@Base+0x7ac>  // b.hs, b.nlast
     c64:	ldr	x1, [x20]
     c68:	mov	x0, x24
     c6c:	str	w12, [sp, #96]
     c70:	str	x1, [sp, #184]
     c74:	bl	8c0 <_dl_mcount_wrapper_check@plt>
     c78:	ldp	x5, x0, [sp, #112]
     c7c:	mov	w7, w26
     c80:	ldr	x1, [sp, #128]
     c84:	mov	x3, x25
     c88:	add	x2, sp, #0xb8
     c8c:	mov	w6, #0x0                   	// #0
     c90:	mov	x4, #0x0                   	// #0
     c94:	blr	x24
     c98:	mov	w10, w0
     c9c:	ldr	w12, [sp, #96]
     ca0:	cmp	w0, #0x4
     ca4:	b.eq	ed8 <gconv@@Base+0x480>  // b.none
     ca8:	ldr	x7, [sp, #184]
     cac:	cmp	x7, x25
     cb0:	b.ne	1050 <gconv@@Base+0x5f8>  // b.any
     cb4:	cbnz	w10, 15bc <gconv@@Base+0xb64>
     cb8:	ldr	x0, [x28, #96]
     cbc:	ldr	w10, [x20, #16]
     cc0:	ldr	x23, [x20]
     cc4:	ldr	x21, [x27]
     cc8:	cbnz	x0, b34 <gconv@@Base+0xdc>
     ccc:	cmp	x19, x21
     cd0:	b.eq	1808 <gconv@@Base+0xdb0>  // b.none
     cd4:	add	x2, x23, #0x4
     cd8:	cmp	x22, x2
     cdc:	b.cc	1480 <gconv@@Base+0xa28>  // b.lo, b.ul, b.last
     ce0:	adrp	x15, 12000 <gconv@@Base+0x115a8>
     ce4:	adrp	x14, 12000 <gconv@@Base+0x115a8>
     ce8:	adrp	x7, 12000 <gconv@@Base+0x115a8>
     cec:	and	w10, w10, #0x2
     cf0:	ldr	x15, [x15, #4048]
     cf4:	mov	x1, x21
     cf8:	ldr	x14, [x14, #4000]
     cfc:	mov	x25, x23
     d00:	ldr	x7, [x7, #4056]
     d04:	mov	w12, #0x4                   	// #4
     d08:	mov	w5, #0xff                  	// #255
     d0c:	mov	w4, #0xc9                  	// #201
     d10:	mov	w16, #0x7e                  	// #126
     d14:	mov	w18, #0x5e                  	// #94
     d18:	mov	w17, #0xfffd                	// #65533
     d1c:	ldrb	w0, [x1]
     d20:	cmp	w0, #0x9f
     d24:	b.hi	e48 <gconv@@Base+0x3f0>  // b.pmore
     d28:	add	x1, x1, #0x1
     d2c:	str	w0, [x25]
     d30:	mov	x25, x2
     d34:	cmp	x19, x1
     d38:	b.eq	d4c <gconv@@Base+0x2f4>  // b.none
     d3c:	add	x2, x25, #0x4
     d40:	cmp	x22, x2
     d44:	b.cs	d1c <gconv@@Base+0x2c4>  // b.hs, b.nlast
     d48:	mov	w12, #0x5                   	// #5
     d4c:	str	x1, [x27]
     d50:	ldr	x0, [sp, #104]
     d54:	cbz	x0, c4c <gconv@@Base+0x1f4>
     d58:	ldp	x27, x28, [sp, #80]
     d5c:	ldp	x21, x22, [sp, #32]
     d60:	str	x25, [x0]
     d64:	adrp	x0, 12000 <gconv@@Base+0x115a8>
     d68:	ldr	x0, [x0, #4040]
     d6c:	ldr	x1, [sp, #216]
     d70:	ldr	x0, [x0]
     d74:	eor	x0, x1, x0
     d78:	cbnz	x0, 1e2c <gconv@@Base+0x13d4>
     d7c:	mov	w0, w12
     d80:	ldp	x19, x20, [sp, #16]
     d84:	ldp	x23, x24, [sp, #48]
     d88:	ldp	x25, x26, [sp, #64]
     d8c:	ldp	x29, x30, [sp], #224
     d90:	ret
     d94:	sub	x25, x3, #0x1
     d98:	mov	w12, #0x5                   	// #5
     d9c:	ldr	x0, [sp, #192]
     da0:	b	c40 <gconv@@Base+0x1e8>
     da4:	adrp	x6, 12000 <gconv@@Base+0x115a8>
     da8:	mov	w0, #0x0                   	// #0
     dac:	mov	w1, #0x92d                 	// #2349
     db0:	ldr	x6, [x6, #4056]
     db4:	b	dc4 <gconv@@Base+0x36c>
     db8:	sub	w1, w3, #0x1
     dbc:	cmp	w1, w0
     dc0:	b.lt	de8 <gconv@@Base+0x390>  // b.tstop
     dc4:	add	w5, w0, w1
     dc8:	asr	w3, w5, #1
     dcc:	ldrh	w4, [x6, w3, sxtw #1]
     dd0:	cmp	w2, w4
     dd4:	b.cc	db8 <gconv@@Base+0x360>  // b.lo, b.ul, b.last
     dd8:	b.ls	1164 <gconv@@Base+0x70c>  // b.plast
     ddc:	add	w0, w3, #0x1
     de0:	cmp	w1, w0
     de4:	b.ge	dc4 <gconv@@Base+0x36c>  // b.tcont
     de8:	ldr	x0, [sp, #136]
     dec:	cbz	x0, 1adc <gconv@@Base+0x1084>
     df0:	ldr	w0, [x20, #16]
     df4:	tbnz	w0, #3, 1528 <gconv@@Base+0xad0>
     df8:	ldr	x0, [sp, #192]
     dfc:	tbnz	w10, #1, 1244 <gconv@@Base+0x7ec>
     e00:	mov	w12, #0x6                   	// #6
     e04:	b	c40 <gconv@@Base+0x1e8>
     e08:	mov	w4, #0x0                   	// #0
     e0c:	mov	w0, #0x3dc                 	// #988
     e10:	b	e20 <gconv@@Base+0x3c8>
     e14:	sub	w0, w3, #0x1
     e18:	cmp	w0, w4
     e1c:	b.lt	c00 <gconv@@Base+0x1a8>  // b.tstop
     e20:	add	w3, w4, w0
     e24:	asr	w3, w3, #1
     e28:	sbfiz	x1, x3, #2, #32
     e2c:	add	x5, x7, x1
     e30:	ldrh	w1, [x7, x1]
     e34:	cmp	w2, w1
     e38:	b.cc	e14 <gconv@@Base+0x3bc>  // b.lo, b.ul, b.last
     e3c:	b.ls	11c0 <gconv@@Base+0x768>  // b.plast
     e40:	add	w4, w3, #0x1
     e44:	b	e18 <gconv@@Base+0x3c0>
     e48:	cmp	w0, #0xa0
     e4c:	ccmp	w0, w5, #0x4, ne  // ne = any
     e50:	ccmp	w0, w4, #0x4, ne  // ne = any
     e54:	b.eq	ee8 <gconv@@Base+0x490>  // b.none
     e58:	cmp	w0, #0xc9
     e5c:	sub	w3, w0, #0x80
     e60:	ccmp	w3, w16, #0x4, ne  // ne = any
     e64:	b.eq	1220 <gconv@@Base+0x7c8>  // b.none
     e68:	sub	x3, x19, x1
     e6c:	cmp	x3, #0x1
     e70:	b.eq	120c <gconv@@Base+0x7b4>  // b.none
     e74:	ldrb	w3, [x1, #1]
     e78:	add	w6, w3, #0x5f
     e7c:	and	w6, w6, #0xff
     e80:	cmp	w6, #0x5d
     e84:	b.hi	1220 <gconv@@Base+0x7c8>  // b.pmore
     e88:	sub	w3, w3, #0xa1
     e8c:	sub	w0, w0, #0xa1
     e90:	add	x6, x1, #0x2
     e94:	madd	w0, w0, w18, w3
     e98:	sub	w3, w0, #0x582
     e9c:	cmp	w3, #0x92d
     ea0:	b.ls	1218 <gconv@@Base+0x7c0>  // b.plast
     ea4:	cmp	w0, #0xf0d
     ea8:	b.gt	1264 <gconv@@Base+0x80c>
     eac:	cmp	w0, #0x45a
     eb0:	b.gt	1220 <gconv@@Base+0x7c8>
     eb4:	ldrh	w0, [x15, w0, sxtw #1]
     eb8:	cbz	w0, 1220 <gconv@@Base+0x7c8>
     ebc:	mov	x1, x6
     ec0:	cmp	w0, w17
     ec4:	b.ne	d2c <gconv@@Base+0x2d4>  // b.any
     ec8:	b	1220 <gconv@@Base+0x7c8>
     ecc:	mov	w12, #0x7                   	// #7
     ed0:	ldr	x0, [sp, #192]
     ed4:	b	c40 <gconv@@Base+0x1e8>
     ed8:	mov	w10, w12
     edc:	cmp	w12, #0x5
     ee0:	b.ne	cb4 <gconv@@Base+0x25c>  // b.any
     ee4:	b	cb8 <gconv@@Base+0x260>
     ee8:	ldr	x2, [sp, #136]
     eec:	cbz	x2, ef4 <gconv@@Base+0x49c>
     ef0:	cbnz	w10, 1038 <gconv@@Base+0x5e0>
     ef4:	mov	w12, #0x6                   	// #6
     ef8:	str	x1, [x27]
     efc:	b	d50 <gconv@@Base+0x2f8>
     f00:	ldr	x14, [x20, #32]
     f04:	ldr	w3, [x14]
     f08:	ands	w0, w3, #0x7
     f0c:	b.eq	b08 <gconv@@Base+0xb0>  // b.none
     f10:	cbnz	x10, 1e50 <gconv@@Base+0x13f8>
     f14:	ldr	x1, [x11, #96]
     f18:	mov	w4, w0
     f1c:	cbz	x1, 1274 <gconv@@Base+0x81c>
     f20:	stp	x21, x28, [sp, #192]
     f24:	cmp	w4, #0x4
     f28:	b.hi	1e40 <gconv@@Base+0x13e8>  // b.pmore
     f2c:	mov	w7, w4
     f30:	cbz	w4, 17fc <gconv@@Base+0xda4>
     f34:	add	x13, sp, #0xd0
     f38:	add	x6, x14, #0x3
     f3c:	mov	x0, #0x1                   	// #1
     f40:	add	x1, x13, x0
     f44:	ldrb	w5, [x6, x0]
     f48:	cmp	x0, x7
     f4c:	add	x0, x0, #0x1
     f50:	sturb	w5, [x1, #-1]
     f54:	b.ne	f40 <gconv@@Base+0x4e8>  // b.any
     f58:	mov	x0, #0x4                   	// #4
     f5c:	sub	x0, x0, x7
     f60:	add	x0, x21, x0
     f64:	cmp	x19, x0
     f68:	b.cc	1a1c <gconv@@Base+0xfc4>  // b.lo, b.ul, b.last
     f6c:	add	x0, x21, #0x1
     f70:	add	x13, sp, #0xd0
     f74:	cmp	x28, x22
     f78:	b.cs	17c4 <gconv@@Base+0xd6c>  // b.hs, b.nlast
     f7c:	add	x7, x7, #0x1
     f80:	str	x0, [sp, #192]
     f84:	add	x1, x13, x7
     f88:	cmp	x7, #0x3
     f8c:	ldurb	w2, [x0, #-1]
     f90:	ccmp	x19, x0, #0x0, ls  // ls = plast
     f94:	add	x0, x0, #0x1
     f98:	sturb	w2, [x1, #-1]
     f9c:	b.hi	f7c <gconv@@Base+0x524>  // b.pmore
     fa0:	ldr	w0, [sp, #208]
     fa4:	str	x13, [sp, #192]
     fa8:	cmp	w0, #0x9f
     fac:	b.ls	1658 <gconv@@Base+0xc00>  // b.plast
     fb0:	mov	w1, #0x20a9                	// #8361
     fb4:	cmp	w0, w1
     fb8:	b.eq	1724 <gconv@@Base+0xccc>  // b.none
     fbc:	mov	w16, #0xffff5400            	// #-44032
     fc0:	add	w2, w0, w16
     fc4:	mov	w1, #0x2ba3                	// #11171
     fc8:	cmp	w2, w1
     fcc:	b.ls	1954 <gconv@@Base+0xefc>  // b.plast
     fd0:	mov	w12, #0xffff0700            	// #-63744
     fd4:	add	w2, w0, w12
     fd8:	cmp	w2, #0x10b
     fdc:	mov	w15, #0xffffb200            	// #-19968
     fe0:	add	w1, w0, w15
     fe4:	mov	w2, #0x51ff                	// #20991
     fe8:	ccmp	w1, w2, #0x0, hi  // hi = pmore
     fec:	b.hi	190c <gconv@@Base+0xeb4>  // b.pmore
     ff0:	adrp	x12, 12000 <gconv@@Base+0x115a8>
     ff4:	mov	w6, #0x0                   	// #0
     ff8:	mov	w5, #0x1317                	// #4887
     ffc:	ldr	x12, [x12, #4024]
    1000:	b	1010 <gconv@@Base+0x5b8>
    1004:	sub	w5, w1, #0x1
    1008:	cmp	w5, w6
    100c:	b.lt	1c10 <gconv@@Base+0x11b8>  // b.tstop
    1010:	add	w1, w6, w5
    1014:	asr	w1, w1, #1
    1018:	sbfiz	x2, x1, #2, #32
    101c:	add	x15, x12, x2
    1020:	ldrh	w2, [x12, x2]
    1024:	cmp	w0, w2
    1028:	b.cc	1004 <gconv@@Base+0x5ac>  // b.lo, b.ul, b.last
    102c:	b.ls	1a5c <gconv@@Base+0x1004>  // b.plast
    1030:	add	w6, w1, #0x1
    1034:	b	1008 <gconv@@Base+0x5b0>
    1038:	ldr	x0, [x2]
    103c:	add	x1, x1, #0x1
    1040:	mov	w12, #0x6                   	// #6
    1044:	add	x0, x0, #0x1
    1048:	str	x0, [x2]
    104c:	b	d34 <gconv@@Base+0x2dc>
    1050:	ldr	w14, [x20, #16]
    1054:	str	x21, [x27]
    1058:	ldr	x0, [x28, #96]
    105c:	cbz	x0, 139c <gconv@@Base+0x944>
    1060:	stp	x21, x23, [sp, #192]
    1064:	cmp	x19, x21
    1068:	b.eq	1bfc <gconv@@Base+0x11a4>  // b.none
    106c:	adrp	x12, 12000 <gconv@@Base+0x115a8>
    1070:	mov	x0, x23
    1074:	mov	w4, #0x4                   	// #4
    1078:	ldr	x25, [x12, #4008]
    107c:	add	x9, x21, #0x4
    1080:	cmp	x19, x9
    1084:	b.cc	16b8 <gconv@@Base+0xc60>  // b.lo, b.ul, b.last
    1088:	cmp	x7, x0
    108c:	b.ls	1780 <gconv@@Base+0xd28>  // b.plast
    1090:	ldr	w2, [x21]
    1094:	cmp	w2, #0x9f
    1098:	b.ls	1448 <gconv@@Base+0x9f0>  // b.plast
    109c:	mov	w1, #0x20a9                	// #8361
    10a0:	cmp	w2, w1
    10a4:	b.eq	18bc <gconv@@Base+0xe64>  // b.none
    10a8:	mov	w6, #0xffff5400            	// #-44032
    10ac:	add	w3, w2, w6
    10b0:	mov	w1, #0x2ba3                	// #11171
    10b4:	cmp	w3, w1
    10b8:	b.ls	15c8 <gconv@@Base+0xb70>  // b.plast
    10bc:	mov	w1, #0xffff0700            	// #-63744
    10c0:	add	w3, w2, w1
    10c4:	cmp	w3, #0x10b
    10c8:	mov	w5, #0xffffb200            	// #-19968
    10cc:	add	w1, w2, w5
    10d0:	mov	w3, #0x51ff                	// #20991
    10d4:	ccmp	w1, w3, #0x0, hi  // hi = pmore
    10d8:	b.hi	1608 <gconv@@Base+0xbb0>  // b.pmore
    10dc:	adrp	x8, 12000 <gconv@@Base+0x115a8>
    10e0:	mov	w6, #0x0                   	// #0
    10e4:	mov	w5, #0x1317                	// #4887
    10e8:	ldr	x8, [x8, #4024]
    10ec:	b	10fc <gconv@@Base+0x6a4>
    10f0:	sub	w5, w1, #0x1
    10f4:	cmp	w6, w5
    10f8:	b.gt	1b74 <gconv@@Base+0x111c>
    10fc:	add	w1, w6, w5
    1100:	asr	w1, w1, #1
    1104:	sbfiz	x3, x1, #2, #32
    1108:	add	x11, x8, x3
    110c:	ldrh	w3, [x8, x3]
    1110:	cmp	w2, w3
    1114:	b.cc	10f0 <gconv@@Base+0x698>  // b.lo, b.ul, b.last
    1118:	b.ls	18e0 <gconv@@Base+0xe88>  // b.plast
    111c:	add	w6, w1, #0x1
    1120:	b	10f4 <gconv@@Base+0x69c>
    1124:	add	x0, x25, #0x1
    1128:	str	x0, [sp, #200]
    112c:	strb	wzr, [x25]
    1130:	b	c2c <gconv@@Base+0x1d4>
    1134:	add	x0, x25, #0x1
    1138:	str	x0, [sp, #200]
    113c:	mov	w0, #0xffffffa3            	// #-93
    1140:	strb	w0, [x25]
    1144:	mov	w0, #0xdc                  	// #220
    1148:	ldr	x3, [sp, #200]
    114c:	cmp	x22, x3
    1150:	b.ls	d94 <gconv@@Base+0x33c>  // b.plast
    1154:	add	x1, x3, #0x1
    1158:	str	x1, [sp, #200]
    115c:	strb	w0, [x3]
    1160:	b	c2c <gconv@@Base+0x1d4>
    1164:	mov	w0, #0x415d                	// #16733
    1168:	mov	w2, #0x415d                	// #16733
    116c:	movk	w0, #0xae4c, lsl #16
    1170:	movk	w2, #0xae4c, lsl #16
    1174:	mov	w1, #0x5e                  	// #94
    1178:	umull	x0, w3, w0
    117c:	umull	x2, w5, w2
    1180:	lsr	x0, x0, #38
    1184:	lsr	x2, x2, #39
    1188:	add	w2, w2, #0x30
    118c:	msub	w0, w0, w1, w3
    1190:	and	w2, w2, #0xff
    1194:	add	w0, w0, #0x21
    1198:	and	w0, w0, #0xff
    119c:	add	x1, x25, #0x1
    11a0:	str	x1, [sp, #200]
    11a4:	orr	w2, w2, #0xffffff80
    11a8:	orr	w0, w0, #0x80
    11ac:	strb	w2, [x25]
    11b0:	b	1148 <gconv@@Base+0x6f0>
    11b4:	ldrb	w2, [x8, #2]
    11b8:	ldrb	w0, [x8, #3]
    11bc:	b	119c <gconv@@Base+0x744>
    11c0:	ldrb	w2, [x5, #2]
    11c4:	ldrb	w0, [x5, #3]
    11c8:	b	119c <gconv@@Base+0x744>
    11cc:	mov	x9, x27
    11d0:	mov	x27, x25
    11d4:	ldr	x25, [sp, #112]
    11d8:	ldr	x1, [sp, #176]
    11dc:	ldr	x0, [x25]
    11e0:	str	x27, [x20]
    11e4:	add	x0, x0, x1
    11e8:	str	x0, [x25]
    11ec:	cmp	w26, #0x0
    11f0:	ccmp	w12, #0x7, #0x0, ne  // ne = any
    11f4:	b.eq	19c0 <gconv@@Base+0xf68>  // b.none
    11f8:	ldp	x21, x22, [sp, #32]
    11fc:	ldp	x27, x28, [sp, #80]
    1200:	b	d64 <gconv@@Base+0x30c>
    1204:	mov	w10, w12
    1208:	b	cb4 <gconv@@Base+0x25c>
    120c:	mov	w12, #0x7                   	// #7
    1210:	str	x1, [x27]
    1214:	b	d50 <gconv@@Base+0x2f8>
    1218:	ldrh	w0, [x7, w3, sxtw #1]
    121c:	cbnz	w0, ebc <gconv@@Base+0x464>
    1220:	ldr	x2, [sp, #136]
    1224:	cbz	x2, ef4 <gconv@@Base+0x49c>
    1228:	cbz	w10, ef4 <gconv@@Base+0x49c>
    122c:	ldr	x0, [x2]
    1230:	add	x1, x1, #0x2
    1234:	mov	w12, #0x6                   	// #6
    1238:	add	x0, x0, #0x1
    123c:	str	x0, [x2]
    1240:	b	d34 <gconv@@Base+0x2dc>
    1244:	ldr	x2, [sp, #136]
    1248:	add	x0, x0, #0x4
    124c:	mov	w12, #0x6                   	// #6
    1250:	str	x0, [sp, #192]
    1254:	ldr	x1, [x2]
    1258:	add	x1, x1, #0x1
    125c:	str	x1, [x2]
    1260:	b	c38 <gconv@@Base+0x1e0>
    1264:	sub	w0, w0, #0xf0e
    1268:	ldrh	w0, [x14, w0, sxtw #1]
    126c:	cbz	w0, 1220 <gconv@@Base+0x7c8>
    1270:	b	ebc <gconv@@Base+0x464>
    1274:	cmp	w0, #0x4
    1278:	b.hi	1df8 <gconv@@Base+0x13a0>  // b.pmore
    127c:	add	x2, x28, #0x4
    1280:	cbz	w0, 16e8 <gconv@@Base+0xc90>
    1284:	ldrb	w1, [x14, #4]
    1288:	tst	w3, #0x6
    128c:	strb	w1, [sp, #208]
    1290:	mov	x1, #0x1                   	// #1
    1294:	b.eq	12a4 <gconv@@Base+0x84c>  // b.none
    1298:	ldrb	w5, [x14, #5]
    129c:	mov	x1, #0x2                   	// #2
    12a0:	strb	w5, [sp, #209]
    12a4:	cmp	x22, x2
    12a8:	b.cc	17c4 <gconv@@Base+0xd6c>  // b.lo, b.ul, b.last
    12ac:	add	x13, sp, #0xd0
    12b0:	ldrb	w5, [x21]
    12b4:	add	x7, x1, #0x1
    12b8:	strb	w5, [x13, x1]
    12bc:	ldrb	w5, [sp, #208]
    12c0:	cmp	w5, #0x9f
    12c4:	b.ls	181c <gconv@@Base+0xdc4>  // b.plast
    12c8:	cmp	w5, #0xa0
    12cc:	mov	w1, #0xff                  	// #255
    12d0:	ccmp	w5, w1, #0x4, ne  // ne = any
    12d4:	mov	w1, #0xc9                  	// #201
    12d8:	ccmp	w5, w1, #0x4, ne  // ne = any
    12dc:	b.eq	1ab4 <gconv@@Base+0x105c>  // b.none
    12e0:	cmp	w5, #0xc9
    12e4:	sub	w1, w5, #0x80
    12e8:	mov	w6, #0x7e                  	// #126
    12ec:	ccmp	w1, w6, #0x4, ne  // ne = any
    12f0:	b.eq	1350 <gconv@@Base+0x8f8>  // b.none
    12f4:	cmp	x7, #0x1
    12f8:	add	x6, x13, x7
    12fc:	b.ls	1d2c <gconv@@Base+0x12d4>  // b.plast
    1300:	ldrb	w1, [sp, #209]
    1304:	add	w0, w1, #0x5f
    1308:	and	w0, w0, #0xff
    130c:	cmp	w0, #0x5d
    1310:	b.hi	1350 <gconv@@Base+0x8f8>  // b.pmore
    1314:	sub	w0, w5, #0xa1
    1318:	sub	w1, w1, #0xa1
    131c:	mov	w5, #0x5e                  	// #94
    1320:	madd	w0, w0, w5, w1
    1324:	sub	w1, w0, #0x582
    1328:	cmp	w1, #0x92d
    132c:	b.ls	1d18 <gconv@@Base+0x12c0>  // b.plast
    1330:	cmp	w0, #0xf0d
    1334:	b.gt	1a7c <gconv@@Base+0x1024>
    1338:	cmp	w0, #0x45a
    133c:	b.gt	1350 <gconv@@Base+0x8f8>
    1340:	adrp	x1, 12000 <gconv@@Base+0x115a8>
    1344:	ldr	x1, [x1, #4048]
    1348:	ldrh	w0, [x1, w0, sxtw #1]
    134c:	cbnz	w0, 1a90 <gconv@@Base+0x1038>
    1350:	ldr	x0, [sp, #136]
    1354:	cbz	x0, 1ac0 <gconv@@Base+0x1068>
    1358:	tbz	w23, #1, 1ac0 <gconv@@Base+0x1068>
    135c:	mov	x0, x13
    1360:	ldr	x2, [sp, #136]
    1364:	add	x0, x0, #0x2
    1368:	sub	x13, x0, x13
    136c:	ldr	x1, [x2]
    1370:	add	x0, x1, #0x1
    1374:	str	x0, [x2]
    1378:	cmp	x4, x13
    137c:	b.ge	1eb0 <gconv@@Base+0x1458>  // b.tcont
    1380:	sub	x13, x13, x4
    1384:	ldr	w23, [x20, #16]
    1388:	add	x21, x21, x13
    138c:	str	x21, [x9]
    1390:	and	w3, w3, #0xfffffff8
    1394:	str	w3, [x14]
    1398:	b	b08 <gconv@@Base+0xb0>
    139c:	cmp	x19, x21
    13a0:	b.eq	1bfc <gconv@@Base+0x11a4>  // b.none
    13a4:	add	x2, x23, #0x4
    13a8:	mov	x0, x23
    13ac:	cmp	x7, x2
    13b0:	mov	x3, #0x4                   	// #4
    13b4:	b.cc	1ad0 <gconv@@Base+0x1078>  // b.lo, b.ul, b.last
    13b8:	adrp	x12, 12000 <gconv@@Base+0x115a8>
    13bc:	adrp	x6, 12000 <gconv@@Base+0x115a8>
    13c0:	adrp	x5, 12000 <gconv@@Base+0x115a8>
    13c4:	and	w4, w14, #0x2
    13c8:	ldr	x12, [x12, #4048]
    13cc:	mov	w15, #0xa0                  	// #160
    13d0:	ldr	x6, [x6, #4000]
    13d4:	mov	w14, #0xc9                  	// #201
    13d8:	ldr	x5, [x5, #4056]
    13dc:	mov	w16, #0x7e                  	// #126
    13e0:	ldr	x11, [sp, #136]
    13e4:	mov	w8, #0x5e                  	// #94
    13e8:	mov	w17, #0xfffd                	// #65533
    13ec:	ldrb	w1, [x21]
    13f0:	cmp	w1, #0x9f
    13f4:	b.hi	1494 <gconv@@Base+0xa3c>  // b.pmore
    13f8:	add	x21, x21, #0x1
    13fc:	str	w1, [x0]
    1400:	mov	x0, x2
    1404:	cmp	x19, x21
    1408:	b.eq	141c <gconv@@Base+0x9c4>  // b.none
    140c:	add	x2, x0, #0x4
    1410:	cmp	x7, x2
    1414:	b.cs	13ec <gconv@@Base+0x994>  // b.hs, b.nlast
    1418:	mov	x3, #0x5                   	// #5
    141c:	str	x21, [x27]
    1420:	cmp	x0, x7
    1424:	b.ne	1790 <gconv@@Base+0xd38>  // b.any
    1428:	cmp	x3, #0x5
    142c:	b.ne	16c8 <gconv@@Base+0xc70>  // b.any
    1430:	cmp	x0, x23
    1434:	b.ne	cb4 <gconv@@Base+0x25c>  // b.any
    1438:	ldr	w0, [x20, #20]
    143c:	sub	w0, w0, #0x1
    1440:	str	w0, [x20, #20]
    1444:	b	cb4 <gconv@@Base+0x25c>
    1448:	and	w1, w2, #0xff
    144c:	cbz	w2, 1834 <gconv@@Base+0xddc>
    1450:	add	x2, x0, #0x1
    1454:	str	x2, [sp, #200]
    1458:	strb	w1, [x0]
    145c:	ldp	x21, x0, [sp, #192]
    1460:	add	x21, x21, #0x4
    1464:	str	x21, [sp, #192]
    1468:	cmp	x19, x21
    146c:	b.ne	107c <gconv@@Base+0x624>  // b.any
    1470:	sxtw	x3, w4
    1474:	str	x19, [x27]
    1478:	ldr	x7, [sp, #184]
    147c:	b	1420 <gconv@@Base+0x9c8>
    1480:	mov	x1, x21
    1484:	mov	x25, x23
    1488:	mov	w12, #0x5                   	// #5
    148c:	str	x1, [x27]
    1490:	b	d50 <gconv@@Base+0x2f8>
    1494:	cmp	w1, #0xff
    1498:	ccmp	w1, w15, #0x4, ne  // ne = any
    149c:	ccmp	w1, w14, #0x4, ne  // ne = any
    14a0:	b.eq	17dc <gconv@@Base+0xd84>  // b.none
    14a4:	cmp	w1, #0xc9
    14a8:	sub	w9, w1, #0x80
    14ac:	ccmp	w9, w16, #0x4, ne  // ne = any
    14b0:	b.eq	1508 <gconv@@Base+0xab0>  // b.none
    14b4:	sub	x9, x19, x21
    14b8:	cmp	x9, #0x1
    14bc:	b.eq	171c <gconv@@Base+0xcc4>  // b.none
    14c0:	ldrb	w13, [x21, #1]
    14c4:	add	w9, w13, #0x5f
    14c8:	and	w9, w9, #0xff
    14cc:	cmp	w9, #0x5d
    14d0:	b.hi	1508 <gconv@@Base+0xab0>  // b.pmore
    14d4:	sub	w13, w13, #0xa1
    14d8:	sub	w1, w1, #0xa1
    14dc:	add	x9, x21, #0x2
    14e0:	madd	w1, w1, w8, w13
    14e4:	sub	w13, w1, #0x582
    14e8:	cmp	w13, #0x92d
    14ec:	b.ls	1ae8 <gconv@@Base+0x1090>  // b.plast
    14f0:	cmp	w1, #0xf0d
    14f4:	b.gt	1764 <gconv@@Base+0xd0c>
    14f8:	cmp	w1, #0x45a
    14fc:	b.gt	1508 <gconv@@Base+0xab0>
    1500:	ldrh	w1, [x12, w1, sxtw #1]
    1504:	cbnz	w1, 1770 <gconv@@Base+0xd18>
    1508:	cbz	x11, 18ec <gconv@@Base+0xe94>
    150c:	cbz	w4, 18ec <gconv@@Base+0xe94>
    1510:	ldr	x1, [x11]
    1514:	add	x21, x21, #0x2
    1518:	mov	x3, #0x6                   	// #6
    151c:	add	x1, x1, #0x1
    1520:	str	x1, [x11]
    1524:	b	1404 <gconv@@Base+0x9ac>
    1528:	ldp	x6, x5, [sp, #136]
    152c:	mov	x4, x19
    1530:	ldr	x2, [x27]
    1534:	mov	x1, x20
    1538:	ldr	x3, [sp, #152]
    153c:	mov	x0, x28
    1540:	str	w10, [sp, #96]
    1544:	str	x7, [sp, #160]
    1548:	bl	880 <__gconv_transliterate@plt>
    154c:	mov	w12, w0
    1550:	ldr	w10, [sp, #96]
    1554:	cmp	w0, #0x6
    1558:	ldr	x7, [sp, #160]
    155c:	b.eq	17d4 <gconv@@Base+0xd7c>  // b.none
    1560:	cmp	w0, #0x5
    1564:	ldp	x0, x25, [sp, #192]
    1568:	b.ne	c38 <gconv@@Base+0x1e0>  // b.any
    156c:	b	c40 <gconv@@Base+0x1e8>
    1570:	cbnz	x10, 1d90 <gconv@@Base+0x1338>
    1574:	ldr	x0, [x20, #32]
    1578:	mov	w12, #0x0                   	// #0
    157c:	str	xzr, [x0]
    1580:	ldr	w0, [x20, #16]
    1584:	tbnz	w0, #0, d64 <gconv@@Base+0x30c>
    1588:	mov	x0, x24
    158c:	str	w6, [sp, #96]
    1590:	bl	8c0 <_dl_mcount_wrapper_check@plt>
    1594:	ldp	x0, x1, [sp, #120]
    1598:	mov	w7, w26
    159c:	ldr	w6, [sp, #96]
    15a0:	mov	x5, x25
    15a4:	mov	x4, #0x0                   	// #0
    15a8:	mov	x3, #0x0                   	// #0
    15ac:	mov	x2, #0x0                   	// #0
    15b0:	blr	x24
    15b4:	mov	w12, w0
    15b8:	b	d64 <gconv@@Base+0x30c>
    15bc:	mov	x9, x27
    15c0:	mov	w12, w10
    15c4:	b	11ec <gconv@@Base+0x794>
    15c8:	adrp	x9, 12000 <gconv@@Base+0x115a8>
    15cc:	mov	w6, #0x0                   	// #0
    15d0:	mov	w5, #0x92d                 	// #2349
    15d4:	ldr	x9, [x9, #4056]
    15d8:	b	15e8 <gconv@@Base+0xb90>
    15dc:	sub	w5, w3, #0x1
    15e0:	cmp	w5, w6
    15e4:	b.lt	1994 <gconv@@Base+0xf3c>  // b.tstop
    15e8:	add	w1, w6, w5
    15ec:	asr	w3, w1, #1
    15f0:	ldrh	w8, [x9, w3, sxtw #1]
    15f4:	cmp	w2, w8
    15f8:	b.cc	15dc <gconv@@Base+0xb84>  // b.lo, b.ul, b.last
    15fc:	b.ls	1854 <gconv@@Base+0xdfc>  // b.plast
    1600:	add	w6, w3, #0x1
    1604:	b	15e0 <gconv@@Base+0xb88>
    1608:	mov	w6, #0x0                   	// #0
    160c:	mov	w5, #0x3dc                 	// #988
    1610:	b	1620 <gconv@@Base+0xbc8>
    1614:	sub	w5, w1, #0x1
    1618:	cmp	w5, w6
    161c:	b.lt	1b74 <gconv@@Base+0x111c>  // b.tstop
    1620:	add	w1, w6, w5
    1624:	asr	w1, w1, #1
    1628:	sbfiz	x3, x1, #2, #32
    162c:	add	x8, x25, x3
    1630:	ldrh	w3, [x25, x3]
    1634:	cmp	w2, w3
    1638:	b.cc	1614 <gconv@@Base+0xbbc>  // b.lo, b.ul, b.last
    163c:	b.ls	18d4 <gconv@@Base+0xe7c>  // b.plast
    1640:	add	w6, w1, #0x1
    1644:	b	1618 <gconv@@Base+0xbc0>
    1648:	mov	x25, x23
    164c:	mov	x0, x19
    1650:	mov	w12, #0x4                   	// #4
    1654:	b	c40 <gconv@@Base+0x1e8>
    1658:	and	w1, w0, #0xff
    165c:	cbz	w0, 1754 <gconv@@Base+0xcfc>
    1660:	add	x0, x28, #0x1
    1664:	str	x0, [sp, #200]
    1668:	strb	w1, [x28]
    166c:	ldr	x0, [sp, #192]
    1670:	add	x0, x0, #0x4
    1674:	str	x0, [sp, #192]
    1678:	cmp	x0, x13
    167c:	b.eq	1848 <gconv@@Base+0xdf0>  // b.none
    1680:	ldr	w3, [x14]
    1684:	sub	x13, x0, x13
    1688:	and	w4, w3, #0x7
    168c:	cmp	x4, x13
    1690:	b.ge	1e90 <gconv@@Base+0x1438>  // b.tcont
    1694:	ldr	x21, [x9]
    1698:	sub	x13, x13, x4
    169c:	ldr	w23, [x20, #16]
    16a0:	and	w3, w3, #0xfffffff8
    16a4:	add	x21, x21, x13
    16a8:	str	x21, [x9]
    16ac:	ldr	x28, [sp, #200]
    16b0:	str	w3, [x14]
    16b4:	b	b08 <gconv@@Base+0xb0>
    16b8:	ldp	x1, x2, [sp, #184]
    16bc:	str	x2, [x27]
    16c0:	cmp	x1, x0
    16c4:	b.ne	1790 <gconv@@Base+0xd38>  // b.any
    16c8:	adrp	x3, 2000 <gconv@@Base+0x15a8>
    16cc:	adrp	x1, 1000 <gconv@@Base+0x5a8>
    16d0:	adrp	x0, 2000 <gconv@@Base+0x15a8>
    16d4:	add	x3, x3, #0xc8
    16d8:	add	x1, x1, #0xf30
    16dc:	add	x0, x0, #0x60
    16e0:	mov	w2, #0x2eb                 	// #747
    16e4:	bl	8d0 <__assert_fail@plt>
    16e8:	cmp	x22, x2
    16ec:	b.cc	17c4 <gconv@@Base+0xd6c>  // b.lo, b.ul, b.last
    16f0:	mov	x5, x21
    16f4:	add	x13, sp, #0xd0
    16f8:	mov	x1, #0x0                   	// #0
    16fc:	ldrb	w6, [x5], #1
    1700:	add	x7, x1, #0x1
    1704:	strb	w6, [x13, x1]
    1708:	cmp	x7, #0x1
    170c:	ccmp	x19, x5, #0x0, ls  // ls = plast
    1710:	mov	x1, #0x1                   	// #1
    1714:	b.hi	16fc <gconv@@Base+0xca4>  // b.pmore
    1718:	b	12bc <gconv@@Base+0x864>
    171c:	mov	x3, #0x7                   	// #7
    1720:	b	141c <gconv@@Base+0x9c4>
    1724:	add	x0, x28, #0x1
    1728:	str	x0, [sp, #200]
    172c:	mov	w1, #0xdc                  	// #220
    1730:	mov	w0, #0xffffffa3            	// #-93
    1734:	strb	w0, [x28]
    1738:	ldr	x2, [sp, #200]
    173c:	cmp	x22, x2
    1740:	b.ls	17b0 <gconv@@Base+0xd58>  // b.plast
    1744:	add	x0, x2, #0x1
    1748:	str	x0, [sp, #200]
    174c:	strb	w1, [x2]
    1750:	b	166c <gconv@@Base+0xc14>
    1754:	add	x0, x28, #0x1
    1758:	str	x0, [sp, #200]
    175c:	strb	wzr, [x28]
    1760:	b	166c <gconv@@Base+0xc14>
    1764:	sub	w1, w1, #0xf0e
    1768:	ldrh	w1, [x6, w1, sxtw #1]
    176c:	cbz	w1, 1508 <gconv@@Base+0xab0>
    1770:	mov	x21, x9
    1774:	cmp	w1, w17
    1778:	b.ne	13fc <gconv@@Base+0x9a4>  // b.any
    177c:	b	1508 <gconv@@Base+0xab0>
    1780:	ldp	x1, x2, [sp, #184]
    1784:	str	x2, [x27]
    1788:	cmp	x1, x0
    178c:	b.eq	1430 <gconv@@Base+0x9d8>  // b.none
    1790:	adrp	x3, 2000 <gconv@@Base+0x15a8>
    1794:	adrp	x1, 1000 <gconv@@Base+0x5a8>
    1798:	adrp	x0, 2000 <gconv@@Base+0x15a8>
    179c:	add	x3, x3, #0xc8
    17a0:	add	x1, x1, #0xf30
    17a4:	add	x0, x0, #0x48
    17a8:	mov	w2, #0x2ea                 	// #746
    17ac:	bl	8d0 <__assert_fail@plt>
    17b0:	ldr	x0, [sp, #192]
    17b4:	sub	x2, x2, #0x1
    17b8:	str	x2, [sp, #200]
    17bc:	cmp	x0, x13
    17c0:	b.ne	1680 <gconv@@Base+0xc28>  // b.any
    17c4:	mov	w12, #0x5                   	// #5
    17c8:	ldp	x21, x22, [sp, #32]
    17cc:	ldp	x27, x28, [sp, #80]
    17d0:	b	d64 <gconv@@Base+0x30c>
    17d4:	ldr	x25, [sp, #200]
    17d8:	b	df8 <gconv@@Base+0x3a0>
    17dc:	cbz	x11, 18ec <gconv@@Base+0xe94>
    17e0:	cbz	w4, 18ec <gconv@@Base+0xe94>
    17e4:	ldr	x1, [x11]
    17e8:	add	x21, x21, #0x1
    17ec:	mov	x3, #0x6                   	// #6
    17f0:	add	x1, x1, #0x1
    17f4:	str	x1, [x11]
    17f8:	b	1404 <gconv@@Base+0x9ac>
    17fc:	mov	x0, #0x4                   	// #4
    1800:	mov	x7, #0x0                   	// #0
    1804:	b	f60 <gconv@@Base+0x508>
    1808:	mov	x1, x19
    180c:	mov	x25, x23
    1810:	mov	w12, #0x4                   	// #4
    1814:	str	x1, [x27]
    1818:	b	d50 <gconv@@Base+0x2f8>
    181c:	str	w5, [x28]
    1820:	mov	x13, #0x1                   	// #1
    1824:	mov	x28, x2
    1828:	ldr	w3, [x14]
    182c:	and	w4, w3, #0x7
    1830:	b	1378 <gconv@@Base+0x920>
    1834:	add	x1, x0, #0x1
    1838:	str	x1, [sp, #200]
    183c:	strb	wzr, [x0]
    1840:	b	145c <gconv@@Base+0xa04>
    1844:	cbnz	w12, 11f8 <gconv@@Base+0x7a0>
    1848:	ldr	w23, [x20, #16]
    184c:	ldr	x21, [x9]
    1850:	b	b08 <gconv@@Base+0xb0>
    1854:	mov	w2, #0x415d                	// #16733
    1858:	mov	w6, #0x415d                	// #16733
    185c:	movk	w2, #0xae4c, lsl #16
    1860:	movk	w6, #0xae4c, lsl #16
    1864:	mov	w5, #0x5e                  	// #94
    1868:	umull	x2, w3, w2
    186c:	umull	x1, w1, w6
    1870:	lsr	x2, x2, #38
    1874:	lsr	x1, x1, #39
    1878:	add	w1, w1, #0x30
    187c:	msub	w2, w2, w5, w3
    1880:	and	w1, w1, #0xff
    1884:	add	w2, w2, #0x21
    1888:	and	w2, w2, #0xff
    188c:	add	x3, x0, #0x1
    1890:	orr	w2, w2, #0x80
    1894:	str	x3, [sp, #200]
    1898:	orr	w1, w1, #0xffffff80
    189c:	strb	w1, [x0]
    18a0:	ldr	x0, [sp, #200]
    18a4:	cmp	x7, x0
    18a8:	b.ls	18f4 <gconv@@Base+0xe9c>  // b.plast
    18ac:	add	x1, x0, #0x1
    18b0:	str	x1, [sp, #200]
    18b4:	strb	w2, [x0]
    18b8:	b	145c <gconv@@Base+0xa04>
    18bc:	add	x1, x0, #0x1
    18c0:	str	x1, [sp, #200]
    18c4:	mov	w2, #0xdc                  	// #220
    18c8:	mov	w1, #0xffffffa3            	// #-93
    18cc:	strb	w1, [x0]
    18d0:	b	18a0 <gconv@@Base+0xe48>
    18d4:	ldrb	w1, [x8, #2]
    18d8:	ldrb	w2, [x8, #3]
    18dc:	b	188c <gconv@@Base+0xe34>
    18e0:	ldrb	w1, [x11, #2]
    18e4:	ldrb	w2, [x11, #3]
    18e8:	b	188c <gconv@@Base+0xe34>
    18ec:	mov	x3, #0x6                   	// #6
    18f0:	b	141c <gconv@@Base+0x9c4>
    18f4:	ldp	x1, x2, [sp, #184]
    18f8:	str	x2, [x27]
    18fc:	sub	x0, x0, #0x1
    1900:	cmp	x1, x0
    1904:	b.eq	1430 <gconv@@Base+0x9d8>  // b.none
    1908:	b	1790 <gconv@@Base+0xd38>
    190c:	adrp	x12, 12000 <gconv@@Base+0x115a8>
    1910:	mov	w6, #0x0                   	// #0
    1914:	mov	w5, #0x3dc                 	// #988
    1918:	ldr	x12, [x12, #4008]
    191c:	b	192c <gconv@@Base+0xed4>
    1920:	sub	w5, w1, #0x1
    1924:	cmp	w6, w5
    1928:	b.gt	1c10 <gconv@@Base+0x11b8>
    192c:	add	w1, w6, w5
    1930:	asr	w1, w1, #1
    1934:	sbfiz	x2, x1, #2, #32
    1938:	add	x15, x12, x2
    193c:	ldrh	w2, [x12, x2]
    1940:	cmp	w0, w2
    1944:	b.cc	1920 <gconv@@Base+0xec8>  // b.lo, b.ul, b.last
    1948:	b.ls	1a5c <gconv@@Base+0x1004>  // b.plast
    194c:	add	w6, w1, #0x1
    1950:	b	1924 <gconv@@Base+0xecc>
    1954:	adrp	x6, 12000 <gconv@@Base+0x115a8>
    1958:	mov	w4, #0x0                   	// #0
    195c:	mov	w3, #0x92d                 	// #2349
    1960:	ldr	x6, [x6, #4056]
    1964:	b	1974 <gconv@@Base+0xf1c>
    1968:	sub	w3, w2, #0x1
    196c:	cmp	w3, w4
    1970:	b.lt	1b8c <gconv@@Base+0x1134>  // b.tstop
    1974:	add	w1, w4, w3
    1978:	asr	w2, w1, #1
    197c:	ldrh	w5, [x6, w2, sxtw #1]
    1980:	cmp	w0, w5
    1984:	b.cc	1968 <gconv@@Base+0xf10>  // b.lo, b.ul, b.last
    1988:	b.ls	1bc8 <gconv@@Base+0x1170>  // b.plast
    198c:	add	w4, w2, #0x1
    1990:	b	196c <gconv@@Base+0xf14>
    1994:	ldr	x1, [sp, #136]
    1998:	cbz	x1, 16b8 <gconv@@Base+0xc60>
    199c:	ldr	w1, [x20, #16]
    19a0:	tbnz	w1, #3, 1b14 <gconv@@Base+0x10bc>
    19a4:	ldr	x8, [sp, #192]
    19a8:	tbnz	w14, #1, 1af4 <gconv@@Base+0x109c>
    19ac:	ldr	x1, [sp, #184]
    19b0:	str	x8, [x27]
    19b4:	cmp	x1, x0
    19b8:	b.eq	16c8 <gconv@@Base+0xc70>  // b.none
    19bc:	b	1790 <gconv@@Base+0xd38>
    19c0:	ldr	x0, [x9]
    19c4:	sub	x2, x19, x0
    19c8:	cmp	x2, #0x3
    19cc:	b.gt	1e70 <gconv@@Base+0x1418>
    19d0:	ldr	x4, [x20, #32]
    19d4:	cmp	x0, x19
    19d8:	add	x0, x0, #0x1
    19dc:	add	x1, x4, #0x4
    19e0:	b.cs	1c08 <gconv@@Base+0x11b0>  // b.hs, b.nlast
    19e4:	str	x0, [x9]
    19e8:	cmp	x19, x0
    19ec:	add	x0, x0, #0x1
    19f0:	ldurb	w3, [x0, #-2]
    19f4:	strb	w3, [x1], #1
    19f8:	b.ne	19e4 <gconv@@Base+0xf8c>  // b.any
    19fc:	mov	w1, w2
    1a00:	ldr	w0, [x4]
    1a04:	ldp	x21, x22, [sp, #32]
    1a08:	and	w0, w0, #0xfffffff8
    1a0c:	orr	w0, w0, w1
    1a10:	ldp	x27, x28, [sp, #80]
    1a14:	str	w0, [x4]
    1a18:	b	d64 <gconv@@Base+0x30c>
    1a1c:	str	x19, [x9]
    1a20:	cmp	x21, x19
    1a24:	b.cs	1a4c <gconv@@Base+0xff4>  // b.hs, b.nlast
    1a28:	add	x21, x21, #0x1
    1a2c:	add	x7, x14, x7
    1a30:	str	x21, [sp, #192]
    1a34:	cmp	x19, x21
    1a38:	add	x7, x7, #0x1
    1a3c:	add	x21, x21, #0x1
    1a40:	ldurb	w0, [x21, #-2]
    1a44:	strb	w0, [x7, #3]
    1a48:	b.ne	1a30 <gconv@@Base+0xfd8>  // b.any
    1a4c:	mov	w12, #0x7                   	// #7
    1a50:	ldp	x21, x22, [sp, #32]
    1a54:	ldp	x27, x28, [sp, #80]
    1a58:	b	d64 <gconv@@Base+0x30c>
    1a5c:	ldrb	w0, [x15, #2]
    1a60:	ldrb	w1, [x15, #3]
    1a64:	add	x2, x28, #0x1
    1a68:	str	x2, [sp, #200]
    1a6c:	orr	w0, w0, #0xffffff80
    1a70:	orr	w1, w1, #0x80
    1a74:	strb	w0, [x28]
    1a78:	b	1738 <gconv@@Base+0xce0>
    1a7c:	adrp	x1, 12000 <gconv@@Base+0x115a8>
    1a80:	sub	w0, w0, #0xf0e
    1a84:	ldr	x1, [x1, #4000]
    1a88:	ldrh	w0, [x1, w0, sxtw #1]
    1a8c:	cbz	w0, 1350 <gconv@@Base+0x8f8>
    1a90:	mov	w1, #0xfffd                	// #65533
    1a94:	cmp	w0, w1
    1a98:	b.eq	1e18 <gconv@@Base+0x13c0>  // b.none
    1a9c:	str	w0, [x28]
    1aa0:	mov	x13, #0x2                   	// #2
    1aa4:	mov	x28, x2
    1aa8:	ldr	w3, [x14]
    1aac:	and	w4, w3, #0x7
    1ab0:	b	1378 <gconv@@Base+0x920>
    1ab4:	ldr	x0, [sp, #136]
    1ab8:	cbz	x0, 1ac0 <gconv@@Base+0x1068>
    1abc:	tbnz	w23, #1, 1d00 <gconv@@Base+0x12a8>
    1ac0:	mov	w12, #0x6                   	// #6
    1ac4:	ldp	x21, x22, [sp, #32]
    1ac8:	ldp	x27, x28, [sp, #80]
    1acc:	b	d64 <gconv@@Base+0x30c>
    1ad0:	cmp	x7, x23
    1ad4:	b.eq	1438 <gconv@@Base+0x9e0>  // b.none
    1ad8:	b	1790 <gconv@@Base+0xd38>
    1adc:	mov	w12, #0x6                   	// #6
    1ae0:	ldr	x0, [sp, #192]
    1ae4:	b	c40 <gconv@@Base+0x1e8>
    1ae8:	ldrh	w1, [x5, w13, sxtw #1]
    1aec:	cbz	w1, 1508 <gconv@@Base+0xab0>
    1af0:	b	1770 <gconv@@Base+0xd18>
    1af4:	ldr	x2, [sp, #136]
    1af8:	add	x21, x8, #0x4
    1afc:	mov	w4, #0x6                   	// #6
    1b00:	str	x21, [sp, #192]
    1b04:	ldr	x1, [x2]
    1b08:	add	x1, x1, #0x1
    1b0c:	str	x1, [x2]
    1b10:	b	1468 <gconv@@Base+0xa10>
    1b14:	ldp	x6, x5, [sp, #136]
    1b18:	mov	x4, x19
    1b1c:	ldr	x2, [x27]
    1b20:	mov	x1, x20
    1b24:	ldr	x3, [sp, #152]
    1b28:	mov	x0, x28
    1b2c:	str	x7, [sp, #96]
    1b30:	str	w10, [sp, #160]
    1b34:	str	w14, [sp, #172]
    1b38:	bl	880 <__gconv_transliterate@plt>
    1b3c:	ldr	w10, [sp, #160]
    1b40:	mov	w4, w0
    1b44:	ldr	w14, [sp, #172]
    1b48:	cmp	w0, #0x6
    1b4c:	ldr	x7, [sp, #96]
    1b50:	b.eq	1c2c <gconv@@Base+0x11d4>  // b.none
    1b54:	cmp	w0, #0x5
    1b58:	ldp	x21, x0, [sp, #192]
    1b5c:	b.ne	1468 <gconv@@Base+0xa10>  // b.any
    1b60:	ldr	x1, [sp, #184]
    1b64:	str	x21, [x27]
    1b68:	cmp	x0, x1
    1b6c:	b.eq	1430 <gconv@@Base+0x9d8>  // b.none
    1b70:	b	1790 <gconv@@Base+0xd38>
    1b74:	mov	w1, #0x1c00                	// #7168
    1b78:	cmp	w1, w2, lsr #7
    1b7c:	b.ne	1994 <gconv@@Base+0xf3c>  // b.any
    1b80:	mov	x21, x9
    1b84:	str	x9, [sp, #192]
    1b88:	b	1468 <gconv@@Base+0xa10>
    1b8c:	ldr	x0, [sp, #136]
    1b90:	cbz	x0, 1ac0 <gconv@@Base+0x1068>
    1b94:	tbnz	w23, #3, 1c34 <gconv@@Base+0x11dc>
    1b98:	tbz	w23, #1, 1ac0 <gconv@@Base+0x1068>
    1b9c:	mov	x0, x13
    1ba0:	ldr	x2, [sp, #136]
    1ba4:	add	x0, x0, #0x4
    1ba8:	str	x0, [sp, #192]
    1bac:	ldr	x1, [x2]
    1bb0:	add	x0, x1, #0x1
    1bb4:	str	x0, [x2]
    1bb8:	ldr	x0, [sp, #192]
    1bbc:	cmp	x0, x13
    1bc0:	b.ne	1680 <gconv@@Base+0xc28>  // b.any
    1bc4:	b	1ac0 <gconv@@Base+0x1068>
    1bc8:	mov	w0, #0x415d                	// #16733
    1bcc:	mov	w4, #0x5e                  	// #94
    1bd0:	movk	w0, #0xae4c, lsl #16
    1bd4:	umull	x3, w2, w0
    1bd8:	umull	x0, w1, w0
    1bdc:	lsr	x1, x3, #38
    1be0:	lsr	x0, x0, #39
    1be4:	add	w0, w0, #0x30
    1be8:	msub	w1, w1, w4, w2
    1bec:	and	w0, w0, #0xff
    1bf0:	add	w1, w1, #0x21
    1bf4:	and	w1, w1, #0xff
    1bf8:	b	1a64 <gconv@@Base+0x100c>
    1bfc:	cmp	x7, x23
    1c00:	b.eq	16c8 <gconv@@Base+0xc70>  // b.none
    1c04:	b	1790 <gconv@@Base+0xd38>
    1c08:	mov	w1, #0x0                   	// #0
    1c0c:	b	1a00 <gconv@@Base+0xfa8>
    1c10:	mov	w1, #0x1c00                	// #7168
    1c14:	cmp	w1, w0, lsr #7
    1c18:	b.ne	1b8c <gconv@@Base+0x1134>  // b.any
    1c1c:	add	x0, x13, #0x4
    1c20:	mov	x13, #0x4                   	// #4
    1c24:	str	x0, [sp, #192]
    1c28:	b	168c <gconv@@Base+0xc34>
    1c2c:	ldr	x0, [sp, #200]
    1c30:	b	19a4 <gconv@@Base+0xf4c>
    1c34:	ldr	x6, [sp, #136]
    1c38:	add	x27, x13, x7
    1c3c:	mov	x0, x11
    1c40:	mov	x2, x21
    1c44:	mov	x4, x27
    1c48:	add	x5, sp, #0xc8
    1c4c:	add	x3, sp, #0xc0
    1c50:	mov	x1, x20
    1c54:	stp	x11, x13, [sp, #96]
    1c58:	str	x7, [sp, #112]
    1c5c:	stp	x14, x9, [sp, #144]
    1c60:	str	x10, [sp, #160]
    1c64:	bl	880 <__gconv_transliterate@plt>
    1c68:	mov	w12, w0
    1c6c:	cmp	w0, #0x6
    1c70:	ldp	x11, x13, [sp, #96]
    1c74:	ldp	x14, x9, [sp, #144]
    1c78:	ldr	x10, [sp, #160]
    1c7c:	b.eq	1f00 <gconv@@Base+0x14a8>  // b.none
    1c80:	ldr	x0, [sp, #192]
    1c84:	ldr	x7, [sp, #112]
    1c88:	cmp	x0, x13
    1c8c:	b.ne	1680 <gconv@@Base+0xc28>  // b.any
    1c90:	cmp	w12, #0x7
    1c94:	b.ne	1844 <gconv@@Base+0xdec>  // b.any
    1c98:	add	x0, x13, #0x4
    1c9c:	cmp	x27, x0
    1ca0:	b.eq	1ef0 <gconv@@Base+0x1498>  // b.none
    1ca4:	ldr	w0, [x14]
    1ca8:	ldr	x1, [x9]
    1cac:	and	x2, x0, #0x7
    1cb0:	sub	x2, x7, x2
    1cb4:	and	w0, w0, #0xfffffff8
    1cb8:	add	x1, x1, x2
    1cbc:	str	x1, [x9]
    1cc0:	cmp	x7, w0, sxtw
    1cc4:	b.le	1ee0 <gconv@@Base+0x1488>
    1cc8:	cmp	x7, #0x4
    1ccc:	b.hi	1ec0 <gconv@@Base+0x1468>  // b.pmore
    1cd0:	orr	w0, w0, w7
    1cd4:	str	w0, [x14]
    1cd8:	cmp	x27, x13
    1cdc:	b.ls	1a4c <gconv@@Base+0xff4>  // b.plast
    1ce0:	add	x14, x14, #0x4
    1ce4:	add	x13, x13, #0x1
    1ce8:	str	x13, [sp, #192]
    1cec:	cmp	x27, x13
    1cf0:	ldurb	w0, [x13, #-1]
    1cf4:	strb	w0, [x14], #1
    1cf8:	b.ne	1ce4 <gconv@@Base+0x128c>  // b.any
    1cfc:	b	1a4c <gconv@@Base+0xff4>
    1d00:	mov	x1, x0
    1d04:	mov	x13, #0x1                   	// #1
    1d08:	ldr	x0, [x0]
    1d0c:	add	x0, x0, x13
    1d10:	str	x0, [x1]
    1d14:	b	1378 <gconv@@Base+0x920>
    1d18:	adrp	x6, 12000 <gconv@@Base+0x115a8>
    1d1c:	ldr	x6, [x6, #4056]
    1d20:	ldrh	w0, [x6, w1, sxtw #1]
    1d24:	cbz	w0, 1350 <gconv@@Base+0x8f8>
    1d28:	b	1a90 <gconv@@Base+0x1038>
    1d2c:	add	x1, x13, #0x2
    1d30:	cmp	x6, x1
    1d34:	b.eq	1dd8 <gconv@@Base+0x1380>  // b.none
    1d38:	mov	w1, w0
    1d3c:	and	w3, w3, #0xfffffff8
    1d40:	sub	x1, x7, x1
    1d44:	add	x21, x21, x1
    1d48:	str	x21, [x9]
    1d4c:	cmp	x7, w3, sxtw
    1d50:	b.le	1db8 <gconv@@Base+0x1360>
    1d54:	orr	w3, w3, w7
    1d58:	str	w3, [x14]
    1d5c:	cmp	x6, x13
    1d60:	b.ls	1a4c <gconv@@Base+0xff4>  // b.plast
    1d64:	add	x14, x14, #0x4
    1d68:	add	x13, x13, #0x1
    1d6c:	cmp	x6, x13
    1d70:	strb	w5, [x14], #1
    1d74:	b.eq	1a4c <gconv@@Base+0xff4>  // b.none
    1d78:	ldrb	w5, [x13]
    1d7c:	add	x13, x13, #0x1
    1d80:	strb	w5, [x14], #1
    1d84:	cmp	x6, x13
    1d88:	b.ne	1d78 <gconv@@Base+0x1320>  // b.any
    1d8c:	b	1a4c <gconv@@Base+0xff4>
    1d90:	adrp	x3, 2000 <gconv@@Base+0x15a8>
    1d94:	adrp	x1, 1000 <gconv@@Base+0x5a8>
    1d98:	adrp	x0, 1000 <gconv@@Base+0x5a8>
    1d9c:	add	x3, x3, #0xc8
    1da0:	add	x1, x1, #0xf30
    1da4:	add	x0, x0, #0xf48
    1da8:	mov	w2, #0x1a4                 	// #420
    1dac:	stp	x21, x22, [sp, #32]
    1db0:	stp	x27, x28, [sp, #80]
    1db4:	bl	8d0 <__assert_fail@plt>
    1db8:	adrp	x3, 2000 <gconv@@Base+0x15a8>
    1dbc:	add	x3, x3, #0xb0
    1dc0:	adrp	x1, 1000 <gconv@@Base+0x5a8>
    1dc4:	adrp	x0, 1000 <gconv@@Base+0x5a8>
    1dc8:	add	x1, x1, #0xf60
    1dcc:	add	x0, x0, #0xff0
    1dd0:	mov	w2, #0x1e5                 	// #485
    1dd4:	bl	8d0 <__assert_fail@plt>
    1dd8:	adrp	x3, 2000 <gconv@@Base+0x15a8>
    1ddc:	add	x3, x3, #0xb0
    1de0:	adrp	x1, 1000 <gconv@@Base+0x5a8>
    1de4:	adrp	x0, 1000 <gconv@@Base+0x5a8>
    1de8:	add	x1, x1, #0xf60
    1dec:	add	x0, x0, #0xfc8
    1df0:	mov	w2, #0x1db                 	// #475
    1df4:	bl	8d0 <__assert_fail@plt>
    1df8:	adrp	x3, 2000 <gconv@@Base+0x15a8>
    1dfc:	add	x3, x3, #0xb0
    1e00:	adrp	x1, 1000 <gconv@@Base+0x5a8>
    1e04:	adrp	x0, 1000 <gconv@@Base+0x5a8>
    1e08:	add	x1, x1, #0xf60
    1e0c:	add	x0, x0, #0xf70
    1e10:	mov	w2, #0x18b                 	// #395
    1e14:	bl	8d0 <__assert_fail@plt>
    1e18:	ldr	x0, [sp, #136]
    1e1c:	cbz	x0, 1e24 <gconv@@Base+0x13cc>
    1e20:	tbnz	w23, #1, 1e38 <gconv@@Base+0x13e0>
    1e24:	mov	x13, #0x2                   	// #2
    1e28:	b	1378 <gconv@@Base+0x920>
    1e2c:	stp	x21, x22, [sp, #32]
    1e30:	stp	x27, x28, [sp, #80]
    1e34:	bl	890 <__stack_chk_fail@plt>
    1e38:	add	x0, x13, #0x2
    1e3c:	b	1360 <gconv@@Base+0x908>
    1e40:	adrp	x3, 2000 <gconv@@Base+0x15a8>
    1e44:	adrp	x1, 1000 <gconv@@Base+0x5a8>
    1e48:	add	x3, x3, #0x98
    1e4c:	b	1e04 <gconv@@Base+0x13ac>
    1e50:	adrp	x3, 2000 <gconv@@Base+0x15a8>
    1e54:	adrp	x1, 1000 <gconv@@Base+0x5a8>
    1e58:	adrp	x0, 1000 <gconv@@Base+0x5a8>
    1e5c:	add	x3, x3, #0xc8
    1e60:	add	x1, x1, #0xf30
    1e64:	add	x0, x0, #0xf48
    1e68:	mov	w2, #0x234                 	// #564
    1e6c:	bl	8d0 <__assert_fail@plt>
    1e70:	adrp	x3, 2000 <gconv@@Base+0x15a8>
    1e74:	adrp	x1, 1000 <gconv@@Base+0x5a8>
    1e78:	adrp	x0, 2000 <gconv@@Base+0x15a8>
    1e7c:	add	x3, x3, #0xc8
    1e80:	add	x1, x1, #0xf30
    1e84:	add	x0, x0, #0x80
    1e88:	mov	w2, #0x31e                 	// #798
    1e8c:	bl	8d0 <__assert_fail@plt>
    1e90:	adrp	x3, 2000 <gconv@@Base+0x15a8>
    1e94:	add	x3, x3, #0x98
    1e98:	adrp	x1, 1000 <gconv@@Base+0x5a8>
    1e9c:	adrp	x0, 1000 <gconv@@Base+0x5a8>
    1ea0:	add	x1, x1, #0xf60
    1ea4:	add	x0, x0, #0xfa0
    1ea8:	mov	w2, #0x1c9                 	// #457
    1eac:	bl	8d0 <__assert_fail@plt>
    1eb0:	adrp	x3, 2000 <gconv@@Base+0x15a8>
    1eb4:	adrp	x1, 1000 <gconv@@Base+0x5a8>
    1eb8:	add	x3, x3, #0xb0
    1ebc:	b	1e9c <gconv@@Base+0x1444>
    1ec0:	adrp	x3, 2000 <gconv@@Base+0x15a8>
    1ec4:	adrp	x1, 1000 <gconv@@Base+0x5a8>
    1ec8:	adrp	x0, 2000 <gconv@@Base+0x15a8>
    1ecc:	add	x3, x3, #0x98
    1ed0:	add	x1, x1, #0xf60
    1ed4:	add	x0, x0, #0x18
    1ed8:	mov	w2, #0x1e6                 	// #486
    1edc:	bl	8d0 <__assert_fail@plt>
    1ee0:	adrp	x3, 2000 <gconv@@Base+0x15a8>
    1ee4:	adrp	x1, 1000 <gconv@@Base+0x5a8>
    1ee8:	add	x3, x3, #0x98
    1eec:	b	1dc4 <gconv@@Base+0x136c>
    1ef0:	adrp	x3, 2000 <gconv@@Base+0x15a8>
    1ef4:	adrp	x1, 1000 <gconv@@Base+0x5a8>
    1ef8:	add	x3, x3, #0x98
    1efc:	b	1de4 <gconv@@Base+0x138c>
    1f00:	tbz	w23, #1, 1bb8 <gconv@@Base+0x1160>
    1f04:	ldr	x0, [sp, #192]
    1f08:	b	1ba0 <gconv@@Base+0x1148>

Disassembly of section .fini:

0000000000001f0c <.fini>:
    1f0c:	stp	x29, x30, [sp, #-16]!
    1f10:	mov	x29, sp
    1f14:	ldp	x29, x30, [sp], #16
    1f18:	ret
