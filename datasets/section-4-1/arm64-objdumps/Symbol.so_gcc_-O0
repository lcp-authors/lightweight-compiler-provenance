
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//Symbol.so_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000007140 <_init>:
    7140:	stp	x29, x30, [sp, #-16]!
    7144:	mov	x29, sp
    7148:	bl	7280 <call_weak_fn>
    714c:	ldp	x29, x30, [sp], #16
    7150:	ret

Disassembly of section .plt:

0000000000007160 <.plt>:
    7160:	stp	x16, x30, [sp, #-16]!
    7164:	adrp	x16, 1c000 <utf8_dingbats_e2+0x28>
    7168:	ldr	x17, [x16, #4088]
    716c:	add	x16, x16, #0xff8
    7170:	br	x17
    7174:	nop
    7178:	nop
    717c:	nop

0000000000007180 <strlen@plt>:
    7180:	adrp	x16, 1d000 <strlen@GLIBC_2.17>
    7184:	ldr	x17, [x16]
    7188:	add	x16, x16, #0x0
    718c:	br	x17

0000000000007190 <Perl_newRV_noinc@plt>:
    7190:	adrp	x16, 1d000 <strlen@GLIBC_2.17>
    7194:	ldr	x17, [x16, #8]
    7198:	add	x16, x16, #0x8
    719c:	br	x17

00000000000071a0 <Perl_stack_grow@plt>:
    71a0:	adrp	x16, 1d000 <strlen@GLIBC_2.17>
    71a4:	ldr	x17, [x16, #16]
    71a8:	add	x16, x16, #0x10
    71ac:	br	x17

00000000000071b0 <__cxa_finalize@plt>:
    71b0:	adrp	x16, 1d000 <strlen@GLIBC_2.17>
    71b4:	ldr	x17, [x16, #24]
    71b8:	add	x16, x16, #0x18
    71bc:	br	x17

00000000000071c0 <Perl_sv_bless@plt>:
    71c0:	adrp	x16, 1d000 <strlen@GLIBC_2.17>
    71c4:	ldr	x17, [x16, #32]
    71c8:	add	x16, x16, #0x20
    71cc:	br	x17

00000000000071d0 <Perl_xs_boot_epilog@plt>:
    71d0:	adrp	x16, 1d000 <strlen@GLIBC_2.17>
    71d4:	ldr	x17, [x16, #40]
    71d8:	add	x16, x16, #0x28
    71dc:	br	x17

00000000000071e0 <__gmon_start__@plt>:
    71e0:	adrp	x16, 1d000 <strlen@GLIBC_2.17>
    71e4:	ldr	x17, [x16, #48]
    71e8:	add	x16, x16, #0x30
    71ec:	br	x17

00000000000071f0 <Perl_gv_stashpv@plt>:
    71f0:	adrp	x16, 1d000 <strlen@GLIBC_2.17>
    71f4:	ldr	x17, [x16, #56]
    71f8:	add	x16, x16, #0x38
    71fc:	br	x17

0000000000007200 <Perl_croak_nocontext@plt>:
    7200:	adrp	x16, 1d000 <strlen@GLIBC_2.17>
    7204:	ldr	x17, [x16, #64]
    7208:	add	x16, x16, #0x40
    720c:	br	x17

0000000000007210 <Perl_sv_2mortal@plt>:
    7210:	adrp	x16, 1d000 <strlen@GLIBC_2.17>
    7214:	ldr	x17, [x16, #72]
    7218:	add	x16, x16, #0x48
    721c:	br	x17

0000000000007220 <Perl_call_pv@plt>:
    7220:	adrp	x16, 1d000 <strlen@GLIBC_2.17>
    7224:	ldr	x17, [x16, #80]
    7228:	add	x16, x16, #0x50
    722c:	br	x17

0000000000007230 <Perl_xs_handshake@plt>:
    7230:	adrp	x16, 1d000 <strlen@GLIBC_2.17>
    7234:	ldr	x17, [x16, #88]
    7238:	add	x16, x16, #0x58
    723c:	br	x17

0000000000007240 <Perl_markstack_grow@plt>:
    7240:	adrp	x16, 1d000 <strlen@GLIBC_2.17>
    7244:	ldr	x17, [x16, #96]
    7248:	add	x16, x16, #0x60
    724c:	br	x17

0000000000007250 <Perl_sv_free2@plt>:
    7250:	adrp	x16, 1d000 <strlen@GLIBC_2.17>
    7254:	ldr	x17, [x16, #104]
    7258:	add	x16, x16, #0x68
    725c:	br	x17

0000000000007260 <Perl_newSViv@plt>:
    7260:	adrp	x16, 1d000 <strlen@GLIBC_2.17>
    7264:	ldr	x17, [x16, #112]
    7268:	add	x16, x16, #0x70
    726c:	br	x17

0000000000007270 <Perl_newSVpvn@plt>:
    7270:	adrp	x16, 1d000 <strlen@GLIBC_2.17>
    7274:	ldr	x17, [x16, #120]
    7278:	add	x16, x16, #0x78
    727c:	br	x17

Disassembly of section .text:

0000000000007280 <call_weak_fn>:
    7280:	adrp	x0, 1c000 <utf8_dingbats_e2+0x28>
    7284:	ldr	x0, [x0, #4024]
    7288:	cbz	x0, 7290 <call_weak_fn+0x10>
    728c:	b	71e0 <__gmon_start__@plt>
    7290:	ret

0000000000007294 <deregister_tm_clones>:
    7294:	stp	x29, x30, [sp, #-32]!
    7298:	mov	x29, sp
    729c:	adrp	x0, 1d000 <strlen@GLIBC_2.17>
    72a0:	add	x0, x0, #0x88
    72a4:	str	x0, [sp, #24]
    72a8:	ldr	x0, [sp, #24]
    72ac:	str	x0, [sp, #24]
    72b0:	ldr	x1, [sp, #24]
    72b4:	adrp	x0, 1d000 <strlen@GLIBC_2.17>
    72b8:	add	x0, x0, #0x88
    72bc:	cmp	x1, x0
    72c0:	b.eq	72f8 <deregister_tm_clones+0x64>  // b.none
    72c4:	adrp	x0, 1c000 <utf8_dingbats_e2+0x28>
    72c8:	ldr	x0, [x0, #3984]
    72cc:	str	x0, [sp, #16]
    72d0:	ldr	x0, [sp, #16]
    72d4:	str	x0, [sp, #16]
    72d8:	ldr	x0, [sp, #16]
    72dc:	cmp	x0, #0x0
    72e0:	b.eq	72fc <deregister_tm_clones+0x68>  // b.none
    72e4:	ldr	x1, [sp, #16]
    72e8:	adrp	x0, 1d000 <strlen@GLIBC_2.17>
    72ec:	add	x0, x0, #0x88
    72f0:	blr	x1
    72f4:	b	72fc <deregister_tm_clones+0x68>
    72f8:	nop
    72fc:	ldp	x29, x30, [sp], #32
    7300:	ret

0000000000007304 <register_tm_clones>:
    7304:	stp	x29, x30, [sp, #-48]!
    7308:	mov	x29, sp
    730c:	adrp	x0, 1d000 <strlen@GLIBC_2.17>
    7310:	add	x0, x0, #0x88
    7314:	str	x0, [sp, #40]
    7318:	ldr	x0, [sp, #40]
    731c:	str	x0, [sp, #40]
    7320:	ldr	x1, [sp, #40]
    7324:	adrp	x0, 1d000 <strlen@GLIBC_2.17>
    7328:	add	x0, x0, #0x88
    732c:	sub	x0, x1, x0
    7330:	asr	x0, x0, #3
    7334:	lsr	x1, x0, #63
    7338:	add	x0, x1, x0
    733c:	asr	x0, x0, #1
    7340:	str	x0, [sp, #32]
    7344:	ldr	x0, [sp, #32]
    7348:	cmp	x0, #0x0
    734c:	b.eq	7388 <register_tm_clones+0x84>  // b.none
    7350:	adrp	x0, 1c000 <utf8_dingbats_e2+0x28>
    7354:	ldr	x0, [x0, #4064]
    7358:	str	x0, [sp, #24]
    735c:	ldr	x0, [sp, #24]
    7360:	str	x0, [sp, #24]
    7364:	ldr	x0, [sp, #24]
    7368:	cmp	x0, #0x0
    736c:	b.eq	738c <register_tm_clones+0x88>  // b.none
    7370:	ldr	x2, [sp, #24]
    7374:	ldr	x1, [sp, #32]
    7378:	adrp	x0, 1d000 <strlen@GLIBC_2.17>
    737c:	add	x0, x0, #0x88
    7380:	blr	x2
    7384:	b	738c <register_tm_clones+0x88>
    7388:	nop
    738c:	ldp	x29, x30, [sp], #48
    7390:	ret

0000000000007394 <__do_global_dtors_aux>:
    7394:	stp	x29, x30, [sp, #-16]!
    7398:	mov	x29, sp
    739c:	adrp	x0, 1d000 <strlen@GLIBC_2.17>
    73a0:	add	x0, x0, #0x88
    73a4:	ldrb	w0, [x0]
    73a8:	and	x0, x0, #0xff
    73ac:	cmp	x0, #0x0
    73b0:	b.ne	73ec <__do_global_dtors_aux+0x58>  // b.any
    73b4:	adrp	x0, 1c000 <utf8_dingbats_e2+0x28>
    73b8:	ldr	x0, [x0, #4000]
    73bc:	cmp	x0, #0x0
    73c0:	b.eq	73d4 <__do_global_dtors_aux+0x40>  // b.none
    73c4:	adrp	x0, 1d000 <strlen@GLIBC_2.17>
    73c8:	add	x0, x0, #0x80
    73cc:	ldr	x0, [x0]
    73d0:	bl	71b0 <__cxa_finalize@plt>
    73d4:	bl	7294 <deregister_tm_clones>
    73d8:	adrp	x0, 1d000 <strlen@GLIBC_2.17>
    73dc:	add	x0, x0, #0x88
    73e0:	mov	w1, #0x1                   	// #1
    73e4:	strb	w1, [x0]
    73e8:	b	73f0 <__do_global_dtors_aux+0x5c>
    73ec:	nop
    73f0:	ldp	x29, x30, [sp], #16
    73f4:	ret

00000000000073f8 <frame_dummy>:
    73f8:	stp	x29, x30, [sp, #-16]!
    73fc:	mov	x29, sp
    7400:	bl	7304 <register_tm_clones>
    7404:	nop
    7408:	ldp	x29, x30, [sp], #16
    740c:	ret

0000000000007410 <S_SvREFCNT_dec>:
    7410:	stp	x29, x30, [sp, #-48]!
    7414:	mov	x29, sp
    7418:	str	x0, [sp, #24]
    741c:	str	x1, [sp, #16]
    7420:	ldr	x0, [sp, #16]
    7424:	cmp	x0, #0x0
    7428:	cset	w0, ne  // ne = any
    742c:	and	w0, w0, #0xff
    7430:	and	x0, x0, #0xff
    7434:	cmp	x0, #0x0
    7438:	b.eq	7488 <S_SvREFCNT_dec+0x78>  // b.none
    743c:	ldr	x0, [sp, #16]
    7440:	ldr	w0, [x0, #8]
    7444:	str	w0, [sp, #44]
    7448:	ldr	w0, [sp, #44]
    744c:	cmp	w0, #0x1
    7450:	cset	w0, hi  // hi = pmore
    7454:	and	w0, w0, #0xff
    7458:	and	x0, x0, #0xff
    745c:	cmp	x0, #0x0
    7460:	b.eq	7478 <S_SvREFCNT_dec+0x68>  // b.none
    7464:	ldr	w0, [sp, #44]
    7468:	sub	w1, w0, #0x1
    746c:	ldr	x0, [sp, #16]
    7470:	str	w1, [x0, #8]
    7474:	b	7488 <S_SvREFCNT_dec+0x78>
    7478:	ldr	w2, [sp, #44]
    747c:	ldr	x1, [sp, #16]
    7480:	ldr	x0, [sp, #24]
    7484:	bl	7250 <Perl_sv_free2@plt>
    7488:	nop
    748c:	ldp	x29, x30, [sp], #48
    7490:	ret

0000000000007494 <S_croak_memory_wrap>:
    7494:	stp	x29, x30, [sp, #-16]!
    7498:	mov	x29, sp
    749c:	adrp	x0, 1c000 <utf8_dingbats_e2+0x28>
    74a0:	ldr	x1, [x0, #4040]
    74a4:	adrp	x0, 7000 <_init-0x140>
    74a8:	add	x0, x0, #0x800
    74ac:	bl	7200 <Perl_croak_nocontext@plt>

00000000000074b0 <Encode_XSEncoding>:
    74b0:	stp	x29, x30, [sp, #-96]!
    74b4:	mov	x29, sp
    74b8:	str	x0, [sp, #24]
    74bc:	str	x1, [sp, #16]
    74c0:	ldr	x0, [sp, #24]
    74c4:	ldr	x0, [x0]
    74c8:	str	x0, [sp, #40]
    74cc:	mov	w2, #0x1                   	// #1
    74d0:	adrp	x0, 7000 <_init-0x140>
    74d4:	add	x1, x0, #0x8a8
    74d8:	ldr	x0, [sp, #24]
    74dc:	bl	71f0 <Perl_gv_stashpv@plt>
    74e0:	str	x0, [sp, #56]
    74e4:	ldr	x0, [sp, #16]
    74e8:	mov	x1, x0
    74ec:	ldr	x0, [sp, #24]
    74f0:	bl	7260 <Perl_newSViv@plt>
    74f4:	str	x0, [sp, #64]
    74f8:	ldr	x1, [sp, #64]
    74fc:	ldr	x0, [sp, #24]
    7500:	bl	7190 <Perl_newRV_noinc@plt>
    7504:	ldr	x2, [sp, #56]
    7508:	mov	x1, x0
    750c:	ldr	x0, [sp, #24]
    7510:	bl	71c0 <Perl_sv_bless@plt>
    7514:	str	x0, [sp, #72]
    7518:	str	wzr, [sp, #36]
    751c:	ldr	x0, [sp, #64]
    7520:	ldr	w0, [x0, #12]
    7524:	orr	w1, w0, #0x4000
    7528:	ldr	x0, [sp, #64]
    752c:	str	w1, [x0, #12]
    7530:	ldr	x0, [sp, #16]
    7534:	ldr	x1, [x0, #32]
    7538:	ldr	x0, [sp, #64]
    753c:	str	x1, [x0, #16]
    7540:	ldr	x0, [sp, #24]
    7544:	ldr	x0, [x0, #120]
    7548:	add	x1, x0, #0x4
    754c:	ldr	x0, [sp, #24]
    7550:	str	x1, [x0, #120]
    7554:	ldr	x0, [sp, #24]
    7558:	ldr	x0, [x0, #120]
    755c:	str	x0, [sp, #48]
    7560:	ldr	x0, [sp, #24]
    7564:	ldr	x0, [x0, #128]
    7568:	ldr	x1, [sp, #48]
    756c:	cmp	x1, x0
    7570:	cset	w0, eq  // eq = none
    7574:	and	w0, w0, #0xff
    7578:	and	x0, x0, #0xff
    757c:	cmp	x0, #0x0
    7580:	b.eq	7590 <Encode_XSEncoding+0xe0>  // b.none
    7584:	ldr	x0, [sp, #24]
    7588:	bl	7240 <Perl_markstack_grow@plt>
    758c:	str	x0, [sp, #48]
    7590:	ldr	x0, [sp, #24]
    7594:	ldr	x0, [x0, #24]
    7598:	ldr	x1, [sp, #40]
    759c:	sub	x0, x1, x0
    75a0:	asr	x0, x0, #3
    75a4:	mov	w1, w0
    75a8:	ldr	x0, [sp, #48]
    75ac:	str	w1, [x0]
    75b0:	ldr	x0, [sp, #24]
    75b4:	ldr	x1, [x0, #32]
    75b8:	ldr	x0, [sp, #40]
    75bc:	sub	x0, x1, x0
    75c0:	cmp	x0, #0x0
    75c4:	cset	w0, le
    75c8:	and	w0, w0, #0xff
    75cc:	and	x0, x0, #0xff
    75d0:	cmp	x0, #0x0
    75d4:	b.eq	75f0 <Encode_XSEncoding+0x140>  // b.none
    75d8:	mov	x3, #0x1                   	// #1
    75dc:	ldr	x2, [sp, #40]
    75e0:	ldr	x1, [sp, #40]
    75e4:	ldr	x0, [sp, #24]
    75e8:	bl	71a0 <Perl_stack_grow@plt>
    75ec:	str	x0, [sp, #40]
    75f0:	ldr	x0, [sp, #40]
    75f4:	add	x0, x0, #0x8
    75f8:	str	x0, [sp, #40]
    75fc:	ldr	x0, [sp, #40]
    7600:	ldr	x1, [sp, #72]
    7604:	str	x1, [x0]
    7608:	b	76a8 <Encode_XSEncoding+0x1f8>
    760c:	ldr	w0, [sp, #36]
    7610:	add	w1, w0, #0x1
    7614:	str	w1, [sp, #36]
    7618:	ldr	x1, [sp, #16]
    761c:	sxtw	x0, w0
    7620:	add	x0, x0, #0x4
    7624:	ldr	x0, [x1, x0, lsl #3]
    7628:	str	x0, [sp, #88]
    762c:	ldr	x0, [sp, #24]
    7630:	ldr	x1, [x0, #32]
    7634:	ldr	x0, [sp, #40]
    7638:	sub	x0, x1, x0
    763c:	cmp	x0, #0x0
    7640:	cset	w0, le
    7644:	and	w0, w0, #0xff
    7648:	and	x0, x0, #0xff
    764c:	cmp	x0, #0x0
    7650:	b.eq	766c <Encode_XSEncoding+0x1bc>  // b.none
    7654:	mov	x3, #0x1                   	// #1
    7658:	ldr	x2, [sp, #40]
    765c:	ldr	x1, [sp, #40]
    7660:	ldr	x0, [sp, #24]
    7664:	bl	71a0 <Perl_stack_grow@plt>
    7668:	str	x0, [sp, #40]
    766c:	ldr	x0, [sp, #88]
    7670:	bl	7180 <strlen@plt>
    7674:	mov	x2, x0
    7678:	ldr	x1, [sp, #88]
    767c:	ldr	x0, [sp, #24]
    7680:	bl	7270 <Perl_newSVpvn@plt>
    7684:	mov	x1, x0
    7688:	ldr	x0, [sp, #40]
    768c:	add	x0, x0, #0x8
    7690:	str	x0, [sp, #40]
    7694:	ldr	x0, [sp, #24]
    7698:	bl	7210 <Perl_sv_2mortal@plt>
    769c:	mov	x1, x0
    76a0:	ldr	x0, [sp, #40]
    76a4:	str	x1, [x0]
    76a8:	ldr	x0, [sp, #16]
    76ac:	ldrsw	x1, [sp, #36]
    76b0:	add	x1, x1, #0x4
    76b4:	ldr	x0, [x0, x1, lsl #3]
    76b8:	cmp	x0, #0x0
    76bc:	b.ne	760c <Encode_XSEncoding+0x15c>  // b.any
    76c0:	ldr	x0, [sp, #24]
    76c4:	ldr	x1, [sp, #40]
    76c8:	str	x1, [x0]
    76cc:	mov	w2, #0x4                   	// #4
    76d0:	adrp	x0, 7000 <_init-0x140>
    76d4:	add	x1, x0, #0x8b8
    76d8:	ldr	x0, [sp, #24]
    76dc:	bl	7220 <Perl_call_pv@plt>
    76e0:	ldr	x0, [sp, #72]
    76e4:	str	x0, [sp, #80]
    76e8:	ldr	x0, [sp, #80]
    76ec:	mov	x1, x0
    76f0:	ldr	x0, [sp, #24]
    76f4:	bl	7410 <S_SvREFCNT_dec>
    76f8:	nop
    76fc:	ldp	x29, x30, [sp], #96
    7700:	ret

0000000000007704 <boot_Encode__Symbol>:
    7704:	stp	x29, x30, [sp, #-64]!
    7708:	mov	x29, sp
    770c:	str	x0, [sp, #24]
    7710:	str	x1, [sp, #16]
    7714:	adrp	x0, 7000 <_init-0x140>
    7718:	add	x4, x0, #0x8d0
    771c:	adrp	x0, 7000 <_init-0x140>
    7720:	add	x3, x0, #0x8d8
    7724:	adrp	x0, 7000 <_init-0x140>
    7728:	add	x2, x0, #0x8e0
    772c:	ldr	x1, [sp, #24]
    7730:	mov	w0, #0x4e7                 	// #1255
    7734:	movk	w0, #0xd30, lsl #16
    7738:	bl	7230 <Perl_xs_handshake@plt>
    773c:	str	w0, [sp, #40]
    7740:	ldr	x0, [sp, #24]
    7744:	ldr	x1, [x0, #24]
    7748:	ldrsw	x0, [sp, #40]
    774c:	lsl	x0, x0, #3
    7750:	add	x0, x1, x0
    7754:	str	x0, [sp, #48]
    7758:	ldr	x0, [sp, #24]
    775c:	ldr	x0, [x0]
    7760:	str	x0, [sp, #56]
    7764:	ldr	x1, [sp, #56]
    7768:	ldr	x0, [sp, #48]
    776c:	sub	x0, x1, x0
    7770:	asr	x0, x0, #3
    7774:	str	w0, [sp, #44]
    7778:	adrp	x0, 1c000 <utf8_dingbats_e2+0x28>
    777c:	ldr	x1, [x0, #4048]
    7780:	ldr	x0, [sp, #24]
    7784:	bl	74b0 <Encode_XSEncoding>
    7788:	adrp	x0, 1c000 <utf8_dingbats_e2+0x28>
    778c:	ldr	x1, [x0, #4056]
    7790:	ldr	x0, [sp, #24]
    7794:	bl	74b0 <Encode_XSEncoding>
    7798:	adrp	x0, 1c000 <utf8_dingbats_e2+0x28>
    779c:	ldr	x1, [x0, #4016]
    77a0:	ldr	x0, [sp, #24]
    77a4:	bl	74b0 <Encode_XSEncoding>
    77a8:	adrp	x0, 1c000 <utf8_dingbats_e2+0x28>
    77ac:	ldr	x1, [x0, #4008]
    77b0:	ldr	x0, [sp, #24]
    77b4:	bl	74b0 <Encode_XSEncoding>
    77b8:	adrp	x0, 1c000 <utf8_dingbats_e2+0x28>
    77bc:	ldr	x1, [x0, #4032]
    77c0:	ldr	x0, [sp, #24]
    77c4:	bl	74b0 <Encode_XSEncoding>
    77c8:	adrp	x0, 1c000 <utf8_dingbats_e2+0x28>
    77cc:	ldr	x1, [x0, #3992]
    77d0:	ldr	x0, [sp, #24]
    77d4:	bl	74b0 <Encode_XSEncoding>
    77d8:	ldr	w1, [sp, #40]
    77dc:	ldr	x0, [sp, #24]
    77e0:	bl	71d0 <Perl_xs_boot_epilog@plt>
    77e4:	nop
    77e8:	ldp	x29, x30, [sp], #64
    77ec:	ret

Disassembly of section .fini:

00000000000077f0 <_fini>:
    77f0:	stp	x29, x30, [sp, #-16]!
    77f4:	mov	x29, sp
    77f8:	ldp	x29, x30, [sp], #16
    77fc:	ret
