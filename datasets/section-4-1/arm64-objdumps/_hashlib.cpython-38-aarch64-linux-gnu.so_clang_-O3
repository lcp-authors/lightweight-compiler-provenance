
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_hashlib.cpython-38-aarch64-linux-gnu.so_clang_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000024e0 <.init>:
    24e0:	stp	x29, x30, [sp, #-16]!
    24e4:	mov	x29, sp
    24e8:	bl	29d0 <PyThread_acquire_lock@plt+0x10>
    24ec:	ldp	x29, x30, [sp], #16
    24f0:	ret

Disassembly of section .plt:

0000000000002500 <PyModule_AddObject@plt-0x20>:
    2500:	stp	x16, x30, [sp, #-16]!
    2504:	adrp	x16, 15000 <PyInit__hashlib@@Base+0x1255c>
    2508:	ldr	x17, [x16, #4088]
    250c:	add	x16, x16, #0xff8
    2510:	br	x17
    2514:	nop
    2518:	nop
    251c:	nop

0000000000002520 <PyModule_AddObject@plt>:
    2520:	adrp	x16, 16000 <PyModule_AddObject>
    2524:	ldr	x17, [x16]
    2528:	add	x16, x16, #0x0
    252c:	br	x17

0000000000002530 <EVP_MD_type@plt>:
    2530:	adrp	x16, 16000 <PyModule_AddObject>
    2534:	ldr	x17, [x16, #8]
    2538:	add	x16, x16, #0x8
    253c:	br	x17

0000000000002540 <PKCS5_PBKDF2_HMAC@plt>:
    2540:	adrp	x16, 16000 <PyModule_AddObject>
    2544:	ldr	x17, [x16, #16]
    2548:	add	x16, x16, #0x10
    254c:	br	x17

0000000000002550 <EVP_DigestInit_ex@plt>:
    2550:	adrp	x16, 16000 <PyModule_AddObject>
    2554:	ldr	x17, [x16, #24]
    2558:	add	x16, x16, #0x18
    255c:	br	x17

0000000000002560 <ERR_reason_error_string@plt>:
    2560:	adrp	x16, 16000 <PyModule_AddObject>
    2564:	ldr	x17, [x16, #32]
    2568:	add	x16, x16, #0x20
    256c:	br	x17

0000000000002570 <EVP_sha512_224@plt>:
    2570:	adrp	x16, 16000 <PyModule_AddObject>
    2574:	ldr	x17, [x16, #40]
    2578:	add	x16, x16, #0x28
    257c:	br	x17

0000000000002580 <EVP_blake2s256@plt>:
    2580:	adrp	x16, 16000 <PyModule_AddObject>
    2584:	ldr	x17, [x16, #48]
    2588:	add	x16, x16, #0x30
    258c:	br	x17

0000000000002590 <EVP_MD_CTX_md@plt>:
    2590:	adrp	x16, 16000 <PyModule_AddObject>
    2594:	ldr	x17, [x16, #56]
    2598:	add	x16, x16, #0x38
    259c:	br	x17

00000000000025a0 <PyType_Ready@plt>:
    25a0:	adrp	x16, 16000 <PyModule_AddObject>
    25a4:	ldr	x17, [x16, #64]
    25a8:	add	x16, x16, #0x40
    25ac:	br	x17

00000000000025b0 <EVP_shake256@plt>:
    25b0:	adrp	x16, 16000 <PyModule_AddObject>
    25b4:	ldr	x17, [x16, #72]
    25b8:	add	x16, x16, #0x48
    25bc:	br	x17

00000000000025c0 <EVP_sha384@plt>:
    25c0:	adrp	x16, 16000 <PyModule_AddObject>
    25c4:	ldr	x17, [x16, #80]
    25c8:	add	x16, x16, #0x50
    25cc:	br	x17

00000000000025d0 <__gmon_start__@plt>:
    25d0:	adrp	x16, 16000 <PyModule_AddObject>
    25d4:	ldr	x17, [x16, #88]
    25d8:	add	x16, x16, #0x58
    25dc:	br	x17

00000000000025e0 <ERR_func_error_string@plt>:
    25e0:	adrp	x16, 16000 <PyModule_AddObject>
    25e4:	ldr	x17, [x16, #96]
    25e8:	add	x16, x16, #0x60
    25ec:	br	x17

00000000000025f0 <EVP_sha3_512@plt>:
    25f0:	adrp	x16, 16000 <PyModule_AddObject>
    25f4:	ldr	x17, [x16, #104]
    25f8:	add	x16, x16, #0x68
    25fc:	br	x17

0000000000002600 <OBJ_nid2ln@plt>:
    2600:	adrp	x16, 16000 <PyModule_AddObject>
    2604:	ldr	x17, [x16, #112]
    2608:	add	x16, x16, #0x70
    260c:	br	x17

0000000000002610 <ERR_clear_error@plt>:
    2610:	adrp	x16, 16000 <PyModule_AddObject>
    2614:	ldr	x17, [x16, #120]
    2618:	add	x16, x16, #0x78
    261c:	br	x17

0000000000002620 <PyUnicode_FromString@plt>:
    2620:	adrp	x16, 16000 <PyModule_AddObject>
    2624:	ldr	x17, [x16, #128]
    2628:	add	x16, x16, #0x80
    262c:	br	x17

0000000000002630 <PyErr_NoMemory@plt>:
    2630:	adrp	x16, 16000 <PyModule_AddObject>
    2634:	ldr	x17, [x16, #136]
    2638:	add	x16, x16, #0x88
    263c:	br	x17

0000000000002640 <EVP_get_digestbyname@plt>:
    2640:	adrp	x16, 16000 <PyModule_AddObject>
    2644:	ldr	x17, [x16, #144]
    2648:	add	x16, x16, #0x90
    264c:	br	x17

0000000000002650 <PyThread_free_lock@plt>:
    2650:	adrp	x16, 16000 <PyModule_AddObject>
    2654:	ldr	x17, [x16, #152]
    2658:	add	x16, x16, #0x98
    265c:	br	x17

0000000000002660 <_PyObject_New@plt>:
    2660:	adrp	x16, 16000 <PyModule_AddObject>
    2664:	ldr	x17, [x16, #160]
    2668:	add	x16, x16, #0xa0
    266c:	br	x17

0000000000002670 <PyUnicode_AsUTF8AndSize@plt>:
    2670:	adrp	x16, 16000 <PyModule_AddObject>
    2674:	ldr	x17, [x16, #168]
    2678:	add	x16, x16, #0xa8
    267c:	br	x17

0000000000002680 <EVP_shake128@plt>:
    2680:	adrp	x16, 16000 <PyModule_AddObject>
    2684:	ldr	x17, [x16, #176]
    2688:	add	x16, x16, #0xb0
    268c:	br	x17

0000000000002690 <EVP_md5@plt>:
    2690:	adrp	x16, 16000 <PyModule_AddObject>
    2694:	ldr	x17, [x16, #184]
    2698:	add	x16, x16, #0xb8
    269c:	br	x17

00000000000026a0 <PyUnicode_FromFormat@plt>:
    26a0:	adrp	x16, 16000 <PyModule_AddObject>
    26a4:	ldr	x17, [x16, #192]
    26a8:	add	x16, x16, #0xc0
    26ac:	br	x17

00000000000026b0 <PyThread_allocate_lock@plt>:
    26b0:	adrp	x16, 16000 <PyModule_AddObject>
    26b4:	ldr	x17, [x16, #200]
    26b8:	add	x16, x16, #0xc8
    26bc:	br	x17

00000000000026c0 <EVP_MD_size@plt>:
    26c0:	adrp	x16, 16000 <PyModule_AddObject>
    26c4:	ldr	x17, [x16, #208]
    26c8:	add	x16, x16, #0xd0
    26cc:	br	x17

00000000000026d0 <PyLong_AsLong@plt>:
    26d0:	adrp	x16, 16000 <PyModule_AddObject>
    26d4:	ldr	x17, [x16, #216]
    26d8:	add	x16, x16, #0xd8
    26dc:	br	x17

00000000000026e0 <__cxa_finalize@plt>:
    26e0:	adrp	x16, 16000 <PyModule_AddObject>
    26e4:	ldr	x17, [x16, #224]
    26e8:	add	x16, x16, #0xe0
    26ec:	br	x17

00000000000026f0 <PyErr_Format@plt>:
    26f0:	adrp	x16, 16000 <PyModule_AddObject>
    26f4:	ldr	x17, [x16, #232]
    26f8:	add	x16, x16, #0xe8
    26fc:	br	x17

0000000000002700 <EVP_DigestUpdate@plt>:
    2700:	adrp	x16, 16000 <PyModule_AddObject>
    2704:	ldr	x17, [x16, #240]
    2708:	add	x16, x16, #0xf0
    270c:	br	x17

0000000000002710 <EVP_MD_do_all@plt>:
    2710:	adrp	x16, 16000 <PyModule_AddObject>
    2714:	ldr	x17, [x16, #248]
    2718:	add	x16, x16, #0xf8
    271c:	br	x17

0000000000002720 <PyErr_Occurred@plt>:
    2720:	adrp	x16, 16000 <PyModule_AddObject>
    2724:	ldr	x17, [x16, #256]
    2728:	add	x16, x16, #0x100
    272c:	br	x17

0000000000002730 <EVP_MD_block_size@plt>:
    2730:	adrp	x16, 16000 <PyModule_AddObject>
    2734:	ldr	x17, [x16, #264]
    2738:	add	x16, x16, #0x108
    273c:	br	x17

0000000000002740 <PyThread_release_lock@plt>:
    2740:	adrp	x16, 16000 <PyModule_AddObject>
    2744:	ldr	x17, [x16, #272]
    2748:	add	x16, x16, #0x110
    274c:	br	x17

0000000000002750 <PyObject_GetBuffer@plt>:
    2750:	adrp	x16, 16000 <PyModule_AddObject>
    2754:	ldr	x17, [x16, #280]
    2758:	add	x16, x16, #0x118
    275c:	br	x17

0000000000002760 <EVP_DigestFinal@plt>:
    2760:	adrp	x16, 16000 <PyModule_AddObject>
    2764:	ldr	x17, [x16, #288]
    2768:	add	x16, x16, #0x120
    276c:	br	x17

0000000000002770 <PyEval_RestoreThread@plt>:
    2770:	adrp	x16, 16000 <PyModule_AddObject>
    2774:	ldr	x17, [x16, #296]
    2778:	add	x16, x16, #0x128
    277c:	br	x17

0000000000002780 <EVP_MD_CTX_copy@plt>:
    2780:	adrp	x16, 16000 <PyModule_AddObject>
    2784:	ldr	x17, [x16, #304]
    2788:	add	x16, x16, #0x130
    278c:	br	x17

0000000000002790 <EVP_sha3_384@plt>:
    2790:	adrp	x16, 16000 <PyModule_AddObject>
    2794:	ldr	x17, [x16, #312]
    2798:	add	x16, x16, #0x138
    279c:	br	x17

00000000000027a0 <PyFrozenSet_New@plt>:
    27a0:	adrp	x16, 16000 <PyModule_AddObject>
    27a4:	ldr	x17, [x16, #320]
    27a8:	add	x16, x16, #0x140
    27ac:	br	x17

00000000000027b0 <PyEval_SaveThread@plt>:
    27b0:	adrp	x16, 16000 <PyModule_AddObject>
    27b4:	ldr	x17, [x16, #328]
    27b8:	add	x16, x16, #0x148
    27bc:	br	x17

00000000000027c0 <EVP_sha224@plt>:
    27c0:	adrp	x16, 16000 <PyModule_AddObject>
    27c4:	ldr	x17, [x16, #336]
    27c8:	add	x16, x16, #0x150
    27cc:	br	x17

00000000000027d0 <EVP_sha3_256@plt>:
    27d0:	adrp	x16, 16000 <PyModule_AddObject>
    27d4:	ldr	x17, [x16, #344]
    27d8:	add	x16, x16, #0x158
    27dc:	br	x17

00000000000027e0 <EVP_MD_CTX_new@plt>:
    27e0:	adrp	x16, 16000 <PyModule_AddObject>
    27e4:	ldr	x17, [x16, #352]
    27e8:	add	x16, x16, #0x160
    27ec:	br	x17

00000000000027f0 <PyBuffer_IsContiguous@plt>:
    27f0:	adrp	x16, 16000 <PyModule_AddObject>
    27f4:	ldr	x17, [x16, #360]
    27f8:	add	x16, x16, #0x168
    27fc:	br	x17

0000000000002800 <PyType_IsSubtype@plt>:
    2800:	adrp	x16, 16000 <PyModule_AddObject>
    2804:	ldr	x17, [x16, #368]
    2808:	add	x16, x16, #0x170
    280c:	br	x17

0000000000002810 <_Py_strhex@plt>:
    2810:	adrp	x16, 16000 <PyModule_AddObject>
    2814:	ldr	x17, [x16, #376]
    2818:	add	x16, x16, #0x178
    281c:	br	x17

0000000000002820 <EVP_sha1@plt>:
    2820:	adrp	x16, 16000 <PyModule_AddObject>
    2824:	ldr	x17, [x16, #384]
    2828:	add	x16, x16, #0x180
    282c:	br	x17

0000000000002830 <EVP_PBE_scrypt@plt>:
    2830:	adrp	x16, 16000 <PyModule_AddObject>
    2834:	ldr	x17, [x16, #392]
    2838:	add	x16, x16, #0x188
    283c:	br	x17

0000000000002840 <ERR_peek_last_error@plt>:
    2840:	adrp	x16, 16000 <PyModule_AddObject>
    2844:	ldr	x17, [x16, #400]
    2848:	add	x16, x16, #0x190
    284c:	br	x17

0000000000002850 <PySet_Add@plt>:
    2850:	adrp	x16, 16000 <PyModule_AddObject>
    2854:	ldr	x17, [x16, #408]
    2858:	add	x16, x16, #0x198
    285c:	br	x17

0000000000002860 <HMAC@plt>:
    2860:	adrp	x16, 16000 <PyModule_AddObject>
    2864:	ldr	x17, [x16, #416]
    2868:	add	x16, x16, #0x1a0
    286c:	br	x17

0000000000002870 <PyBytes_FromStringAndSize@plt>:
    2870:	adrp	x16, 16000 <PyModule_AddObject>
    2874:	ldr	x17, [x16, #424]
    2878:	add	x16, x16, #0x1a8
    287c:	br	x17

0000000000002880 <_PyArg_Parse_SizeT@plt>:
    2880:	adrp	x16, 16000 <PyModule_AddObject>
    2884:	ldr	x17, [x16, #432]
    2888:	add	x16, x16, #0x1b0
    288c:	br	x17

0000000000002890 <PyLong_FromLong@plt>:
    2890:	adrp	x16, 16000 <PyModule_AddObject>
    2894:	ldr	x17, [x16, #440]
    2898:	add	x16, x16, #0x1b8
    289c:	br	x17

00000000000028a0 <strcmp@plt>:
    28a0:	adrp	x16, 16000 <PyModule_AddObject>
    28a4:	ldr	x17, [x16, #448]
    28a8:	add	x16, x16, #0x1c0
    28ac:	br	x17

00000000000028b0 <EVP_blake2b512@plt>:
    28b0:	adrp	x16, 16000 <PyModule_AddObject>
    28b4:	ldr	x17, [x16, #456]
    28b8:	add	x16, x16, #0x1c8
    28bc:	br	x17

00000000000028c0 <_PyArg_UnpackKeywords@plt>:
    28c0:	adrp	x16, 16000 <PyModule_AddObject>
    28c4:	ldr	x17, [x16, #464]
    28c8:	add	x16, x16, #0x1d0
    28cc:	br	x17

00000000000028d0 <EVP_MD_CTX_free@plt>:
    28d0:	adrp	x16, 16000 <PyModule_AddObject>
    28d4:	ldr	x17, [x16, #472]
    28d8:	add	x16, x16, #0x1d8
    28dc:	br	x17

00000000000028e0 <_Py_Dealloc@plt>:
    28e0:	adrp	x16, 16000 <PyModule_AddObject>
    28e4:	ldr	x17, [x16, #480]
    28e8:	add	x16, x16, #0x1e0
    28ec:	br	x17

00000000000028f0 <PyObject_Free@plt>:
    28f0:	adrp	x16, 16000 <PyModule_AddObject>
    28f4:	ldr	x17, [x16, #488]
    28f8:	add	x16, x16, #0x1e8
    28fc:	br	x17

0000000000002900 <EVP_sha3_224@plt>:
    2900:	adrp	x16, 16000 <PyModule_AddObject>
    2904:	ldr	x17, [x16, #496]
    2908:	add	x16, x16, #0x1f0
    290c:	br	x17

0000000000002910 <PyModule_Create2@plt>:
    2910:	adrp	x16, 16000 <PyModule_AddObject>
    2914:	ldr	x17, [x16, #504]
    2918:	add	x16, x16, #0x1f8
    291c:	br	x17

0000000000002920 <PyErr_SetString@plt>:
    2920:	adrp	x16, 16000 <PyModule_AddObject>
    2924:	ldr	x17, [x16, #512]
    2928:	add	x16, x16, #0x200
    292c:	br	x17

0000000000002930 <OBJ_nid2sn@plt>:
    2930:	adrp	x16, 16000 <PyModule_AddObject>
    2934:	ldr	x17, [x16, #520]
    2938:	add	x16, x16, #0x208
    293c:	br	x17

0000000000002940 <EVP_sha512@plt>:
    2940:	adrp	x16, 16000 <PyModule_AddObject>
    2944:	ldr	x17, [x16, #528]
    2948:	add	x16, x16, #0x210
    294c:	br	x17

0000000000002950 <EVP_sha256@plt>:
    2950:	adrp	x16, 16000 <PyModule_AddObject>
    2954:	ldr	x17, [x16, #536]
    2958:	add	x16, x16, #0x218
    295c:	br	x17

0000000000002960 <EVP_sha512_256@plt>:
    2960:	adrp	x16, 16000 <PyModule_AddObject>
    2964:	ldr	x17, [x16, #544]
    2968:	add	x16, x16, #0x220
    296c:	br	x17

0000000000002970 <PyBuffer_Release@plt>:
    2970:	adrp	x16, 16000 <PyModule_AddObject>
    2974:	ldr	x17, [x16, #552]
    2978:	add	x16, x16, #0x228
    297c:	br	x17

0000000000002980 <strlen@plt>:
    2980:	adrp	x16, 16000 <PyModule_AddObject>
    2984:	ldr	x17, [x16, #560]
    2988:	add	x16, x16, #0x230
    298c:	br	x17

0000000000002990 <ERR_lib_error_string@plt>:
    2990:	adrp	x16, 16000 <PyModule_AddObject>
    2994:	ldr	x17, [x16, #568]
    2998:	add	x16, x16, #0x238
    299c:	br	x17

00000000000029a0 <PyLong_AsUnsignedLong@plt>:
    29a0:	adrp	x16, 16000 <PyModule_AddObject>
    29a4:	ldr	x17, [x16, #576]
    29a8:	add	x16, x16, #0x240
    29ac:	br	x17

00000000000029b0 <_PyArg_BadArgument@plt>:
    29b0:	adrp	x16, 16000 <PyModule_AddObject>
    29b4:	ldr	x17, [x16, #584]
    29b8:	add	x16, x16, #0x248
    29bc:	br	x17

00000000000029c0 <PyThread_acquire_lock@plt>:
    29c0:	adrp	x16, 16000 <PyModule_AddObject>
    29c4:	ldr	x17, [x16, #592]
    29c8:	add	x16, x16, #0x250
    29cc:	br	x17

Disassembly of section .text:

00000000000029d0 <PyInit__hashlib@@Base-0xd4>:
    29d0:	adrp	x0, 15000 <PyInit__hashlib@@Base+0x1255c>
    29d4:	ldr	x0, [x0, #3992]
    29d8:	cbz	x0, 29e0 <PyThread_acquire_lock@plt+0x20>
    29dc:	b	25d0 <__gmon_start__@plt>
    29e0:	ret
    29e4:	nop
    29e8:	adrp	x0, 16000 <PyInit__hashlib@@Base+0x1355c>
    29ec:	add	x0, x0, #0x988
    29f0:	adrp	x1, 16000 <PyInit__hashlib@@Base+0x1355c>
    29f4:	add	x1, x1, #0x988
    29f8:	cmp	x1, x0
    29fc:	b.eq	2a14 <PyThread_acquire_lock@plt+0x54>  // b.none
    2a00:	adrp	x1, 15000 <PyInit__hashlib@@Base+0x1255c>
    2a04:	ldr	x1, [x1, #4016]
    2a08:	cbz	x1, 2a14 <PyThread_acquire_lock@plt+0x54>
    2a0c:	mov	x16, x1
    2a10:	br	x16
    2a14:	ret
    2a18:	adrp	x0, 16000 <PyInit__hashlib@@Base+0x1355c>
    2a1c:	add	x0, x0, #0x988
    2a20:	adrp	x1, 16000 <PyInit__hashlib@@Base+0x1355c>
    2a24:	add	x1, x1, #0x988
    2a28:	sub	x1, x1, x0
    2a2c:	lsr	x2, x1, #63
    2a30:	add	x1, x2, x1, asr #3
    2a34:	cmp	xzr, x1, asr #1
    2a38:	asr	x1, x1, #1
    2a3c:	b.eq	2a54 <PyThread_acquire_lock@plt+0x94>  // b.none
    2a40:	adrp	x2, 15000 <PyInit__hashlib@@Base+0x1255c>
    2a44:	ldr	x2, [x2, #4032]
    2a48:	cbz	x2, 2a54 <PyThread_acquire_lock@plt+0x94>
    2a4c:	mov	x16, x2
    2a50:	br	x16
    2a54:	ret
    2a58:	stp	x29, x30, [sp, #-32]!
    2a5c:	mov	x29, sp
    2a60:	str	x19, [sp, #16]
    2a64:	adrp	x19, 16000 <PyInit__hashlib@@Base+0x1355c>
    2a68:	ldrb	w0, [x19, #2440]
    2a6c:	cbnz	w0, 2a94 <PyThread_acquire_lock@plt+0xd4>
    2a70:	adrp	x0, 15000 <PyInit__hashlib@@Base+0x1255c>
    2a74:	ldr	x0, [x0, #4008]
    2a78:	cbz	x0, 2a88 <PyThread_acquire_lock@plt+0xc8>
    2a7c:	adrp	x0, 16000 <PyInit__hashlib@@Base+0x1355c>
    2a80:	ldr	x0, [x0, #600]
    2a84:	bl	26e0 <__cxa_finalize@plt>
    2a88:	bl	29e8 <PyThread_acquire_lock@plt+0x28>
    2a8c:	mov	w0, #0x1                   	// #1
    2a90:	strb	w0, [x19, #2440]
    2a94:	ldr	x19, [sp, #16]
    2a98:	ldp	x29, x30, [sp], #32
    2a9c:	ret
    2aa0:	b	2a18 <PyThread_acquire_lock@plt+0x58>

0000000000002aa4 <PyInit__hashlib@@Base>:
    2aa4:	sub	sp, sp, #0x30
    2aa8:	stp	x29, x30, [sp, #16]
    2aac:	stp	x20, x19, [sp, #32]
    2ab0:	add	x29, sp, #0x10
    2ab4:	adrp	x8, 15000 <PyInit__hashlib@@Base+0x1255c>
    2ab8:	ldr	x8, [x8, #4048]
    2abc:	adrp	x20, 16000 <PyInit__hashlib@@Base+0x1355c>
    2ac0:	add	x20, x20, #0x7e8
    2ac4:	mov	x0, x20
    2ac8:	str	x8, [x20, #8]
    2acc:	bl	25a0 <PyType_Ready@plt>
    2ad0:	tbnz	w0, #31, 2b68 <PyInit__hashlib@@Base+0xc4>
    2ad4:	adrp	x0, 16000 <PyInit__hashlib@@Base+0x1355c>
    2ad8:	add	x0, x0, #0x780
    2adc:	mov	w1, #0x3f5                 	// #1013
    2ae0:	bl	2910 <PyModule_Create2@plt>
    2ae4:	mov	x19, x0
    2ae8:	cbz	x0, 2b6c <PyInit__hashlib@@Base+0xc8>
    2aec:	mov	x0, xzr
    2af0:	bl	27a0 <PyFrozenSet_New@plt>
    2af4:	str	x0, [sp]
    2af8:	cbz	x0, 2b50 <PyInit__hashlib@@Base+0xac>
    2afc:	adrp	x0, 4000 <PyInit__hashlib@@Base+0x155c>
    2b00:	add	x0, x0, #0x998
    2b04:	mov	x1, sp
    2b08:	str	wzr, [sp, #8]
    2b0c:	bl	2710 <EVP_MD_do_all@plt>
    2b10:	ldr	w8, [sp, #8]
    2b14:	ldr	x2, [sp]
    2b18:	cbz	w8, 2b38 <PyInit__hashlib@@Base+0x94>
    2b1c:	ldr	x8, [x2]
    2b20:	subs	x8, x8, #0x1
    2b24:	str	x8, [x2]
    2b28:	b.ne	2b50 <PyInit__hashlib@@Base+0xac>  // b.any
    2b2c:	mov	x0, x2
    2b30:	bl	28e0 <_Py_Dealloc@plt>
    2b34:	b	2b50 <PyInit__hashlib@@Base+0xac>
    2b38:	cbz	x2, 2b50 <PyInit__hashlib@@Base+0xac>
    2b3c:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    2b40:	add	x1, x1, #0x232
    2b44:	mov	x0, x19
    2b48:	bl	2520 <PyModule_AddObject@plt>
    2b4c:	cbz	w0, 2b80 <PyInit__hashlib@@Base+0xdc>
    2b50:	ldr	x8, [x19]
    2b54:	subs	x8, x8, #0x1
    2b58:	str	x8, [x19]
    2b5c:	b.ne	2b68 <PyInit__hashlib@@Base+0xc4>  // b.any
    2b60:	mov	x0, x19
    2b64:	bl	28e0 <_Py_Dealloc@plt>
    2b68:	mov	x19, xzr
    2b6c:	mov	x0, x19
    2b70:	ldp	x20, x19, [sp, #32]
    2b74:	ldp	x29, x30, [sp, #16]
    2b78:	add	sp, sp, #0x30
    2b7c:	ret
    2b80:	ldr	x8, [x20]
    2b84:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    2b88:	add	x1, x1, #0x251
    2b8c:	mov	x0, x19
    2b90:	add	x8, x8, #0x1
    2b94:	mov	x2, x20
    2b98:	str	x8, [x20]
    2b9c:	bl	2520 <PyModule_AddObject@plt>
    2ba0:	b	2b6c <PyInit__hashlib@@Base+0xc8>
    2ba4:	stp	x29, x30, [sp, #-32]!
    2ba8:	str	x19, [sp, #16]
    2bac:	mov	x29, sp
    2bb0:	mov	x19, x0
    2bb4:	ldr	x0, [x0, #24]
    2bb8:	cbz	x0, 2bc0 <PyInit__hashlib@@Base+0x11c>
    2bbc:	bl	2650 <PyThread_free_lock@plt>
    2bc0:	ldr	x0, [x19, #16]
    2bc4:	bl	28d0 <EVP_MD_CTX_free@plt>
    2bc8:	mov	x0, x19
    2bcc:	ldr	x19, [sp, #16]
    2bd0:	ldp	x29, x30, [sp], #32
    2bd4:	b	28f0 <PyObject_Free@plt>
    2bd8:	stp	x29, x30, [sp, #-32]!
    2bdc:	stp	x20, x19, [sp, #16]
    2be0:	mov	x29, sp
    2be4:	mov	x20, x0
    2be8:	ldr	x0, [x0, #16]
    2bec:	bl	2590 <EVP_MD_CTX_md@plt>
    2bf0:	bl	2c60 <PyInit__hashlib@@Base+0x1bc>
    2bf4:	cbz	x0, 2c34 <PyInit__hashlib@@Base+0x190>
    2bf8:	mov	x19, x0
    2bfc:	adrp	x0, 5000 <PyInit__hashlib@@Base+0x255c>
    2c00:	add	x0, x0, #0x256
    2c04:	mov	x1, x19
    2c08:	mov	x2, x20
    2c0c:	bl	26a0 <PyUnicode_FromFormat@plt>
    2c10:	ldr	x8, [x19]
    2c14:	mov	x20, x0
    2c18:	subs	x8, x8, #0x1
    2c1c:	str	x8, [x19]
    2c20:	b.eq	2c48 <PyInit__hashlib@@Base+0x1a4>  // b.none
    2c24:	mov	x0, x20
    2c28:	ldp	x20, x19, [sp, #16]
    2c2c:	ldp	x29, x30, [sp], #32
    2c30:	ret
    2c34:	mov	x20, xzr
    2c38:	mov	x0, x20
    2c3c:	ldp	x20, x19, [sp, #16]
    2c40:	ldp	x29, x30, [sp], #32
    2c44:	ret
    2c48:	mov	x0, x19
    2c4c:	bl	28e0 <_Py_Dealloc@plt>
    2c50:	mov	x0, x20
    2c54:	ldp	x20, x19, [sp, #16]
    2c58:	ldp	x29, x30, [sp], #32
    2c5c:	ret
    2c60:	stp	x29, x30, [sp, #-32]!
    2c64:	str	x19, [sp, #16]
    2c68:	mov	x29, sp
    2c6c:	bl	2530 <EVP_MD_type@plt>
    2c70:	mov	w19, w0
    2c74:	cmp	w0, #0x41f
    2c78:	b.le	2cb4 <PyInit__hashlib@@Base+0x210>
    2c7c:	sub	w8, w19, #0x420
    2c80:	cmp	w8, #0x2d
    2c84:	b.hi	2e14 <PyInit__hashlib@@Base+0x370>  // b.pmore
    2c88:	adrp	x9, 4000 <PyInit__hashlib@@Base+0x155c>
    2c8c:	add	x9, x9, #0xa24
    2c90:	adr	x10, 2ca0 <PyInit__hashlib@@Base+0x1fc>
    2c94:	ldrb	w11, [x9, x8]
    2c98:	add	x10, x10, x11, lsl #2
    2c9c:	br	x10
    2ca0:	adrp	x0, 5000 <PyInit__hashlib@@Base+0x255c>
    2ca4:	add	x0, x0, #0x2c2
    2ca8:	ldr	x19, [sp, #16]
    2cac:	ldp	x29, x30, [sp], #32
    2cb0:	b	2620 <PyUnicode_FromString@plt>
    2cb4:	sub	w8, w19, #0x2a0
    2cb8:	cmp	w8, #0x3
    2cbc:	b.hi	2cec <PyInit__hashlib@@Base+0x248>  // b.pmore
    2cc0:	adrp	x9, 4000 <PyInit__hashlib@@Base+0x155c>
    2cc4:	add	x9, x9, #0xa20
    2cc8:	adr	x10, 2cd8 <PyInit__hashlib@@Base+0x234>
    2ccc:	ldrb	w11, [x9, x8]
    2cd0:	add	x10, x10, x11, lsl #2
    2cd4:	br	x10
    2cd8:	adrp	x0, 5000 <PyInit__hashlib@@Base+0x255c>
    2cdc:	add	x0, x0, #0x400
    2ce0:	ldr	x19, [sp, #16]
    2ce4:	ldp	x29, x30, [sp], #32
    2ce8:	b	2620 <PyUnicode_FromString@plt>
    2cec:	cmp	w19, #0x4
    2cf0:	b.eq	2e00 <PyInit__hashlib@@Base+0x35c>  // b.none
    2cf4:	cmp	w19, #0x40
    2cf8:	b.ne	2e14 <PyInit__hashlib@@Base+0x370>  // b.any
    2cfc:	adrp	x0, 5000 <PyInit__hashlib@@Base+0x255c>
    2d00:	add	x0, x0, #0x3e4
    2d04:	ldr	x19, [sp, #16]
    2d08:	ldp	x29, x30, [sp], #32
    2d0c:	b	2620 <PyUnicode_FromString@plt>
    2d10:	adrp	x0, 5000 <PyInit__hashlib@@Base+0x255c>
    2d14:	add	x0, x0, #0x2ba
    2d18:	ldr	x19, [sp, #16]
    2d1c:	ldp	x29, x30, [sp], #32
    2d20:	b	2620 <PyUnicode_FromString@plt>
    2d24:	adrp	x0, 5000 <PyInit__hashlib@@Base+0x255c>
    2d28:	add	x0, x0, #0x26c
    2d2c:	ldr	x19, [sp, #16]
    2d30:	ldp	x29, x30, [sp], #32
    2d34:	b	2620 <PyUnicode_FromString@plt>
    2d38:	adrp	x0, 5000 <PyInit__hashlib@@Base+0x255c>
    2d3c:	add	x0, x0, #0x277
    2d40:	ldr	x19, [sp, #16]
    2d44:	ldp	x29, x30, [sp], #32
    2d48:	b	2620 <PyUnicode_FromString@plt>
    2d4c:	adrp	x0, 5000 <PyInit__hashlib@@Base+0x255c>
    2d50:	add	x0, x0, #0x282
    2d54:	ldr	x19, [sp, #16]
    2d58:	ldp	x29, x30, [sp], #32
    2d5c:	b	2620 <PyUnicode_FromString@plt>
    2d60:	adrp	x0, 5000 <PyInit__hashlib@@Base+0x255c>
    2d64:	add	x0, x0, #0x28b
    2d68:	ldr	x19, [sp, #16]
    2d6c:	ldp	x29, x30, [sp], #32
    2d70:	b	2620 <PyUnicode_FromString@plt>
    2d74:	adrp	x0, 5000 <PyInit__hashlib@@Base+0x255c>
    2d78:	add	x0, x0, #0x294
    2d7c:	ldr	x19, [sp, #16]
    2d80:	ldp	x29, x30, [sp], #32
    2d84:	b	2620 <PyUnicode_FromString@plt>
    2d88:	adrp	x0, 5000 <PyInit__hashlib@@Base+0x255c>
    2d8c:	add	x0, x0, #0x29d
    2d90:	ldr	x19, [sp, #16]
    2d94:	ldp	x29, x30, [sp], #32
    2d98:	b	2620 <PyUnicode_FromString@plt>
    2d9c:	adrp	x0, 5000 <PyInit__hashlib@@Base+0x255c>
    2da0:	add	x0, x0, #0x2a6
    2da4:	ldr	x19, [sp, #16]
    2da8:	ldp	x29, x30, [sp], #32
    2dac:	b	2620 <PyUnicode_FromString@plt>
    2db0:	adrp	x0, 5000 <PyInit__hashlib@@Base+0x255c>
    2db4:	add	x0, x0, #0x2b0
    2db8:	ldr	x19, [sp, #16]
    2dbc:	ldp	x29, x30, [sp], #32
    2dc0:	b	2620 <PyUnicode_FromString@plt>
    2dc4:	adrp	x0, 5000 <PyInit__hashlib@@Base+0x255c>
    2dc8:	add	x0, x0, #0x40f
    2dcc:	ldr	x19, [sp, #16]
    2dd0:	ldp	x29, x30, [sp], #32
    2dd4:	b	2620 <PyUnicode_FromString@plt>
    2dd8:	adrp	x0, 5000 <PyInit__hashlib@@Base+0x255c>
    2ddc:	add	x0, x0, #0x41e
    2de0:	ldr	x19, [sp, #16]
    2de4:	ldp	x29, x30, [sp], #32
    2de8:	b	2620 <PyUnicode_FromString@plt>
    2dec:	adrp	x0, 5000 <PyInit__hashlib@@Base+0x255c>
    2df0:	add	x0, x0, #0x3f1
    2df4:	ldr	x19, [sp, #16]
    2df8:	ldp	x29, x30, [sp], #32
    2dfc:	b	2620 <PyUnicode_FromString@plt>
    2e00:	adrp	x0, 5000 <PyInit__hashlib@@Base+0x255c>
    2e04:	add	x0, x0, #0x3d8
    2e08:	ldr	x19, [sp, #16]
    2e0c:	ldp	x29, x30, [sp], #32
    2e10:	b	2620 <PyUnicode_FromString@plt>
    2e14:	mov	w0, w19
    2e18:	bl	2600 <OBJ_nid2ln@plt>
    2e1c:	cbnz	x0, 2ca8 <PyInit__hashlib@@Base+0x204>
    2e20:	mov	w0, w19
    2e24:	bl	2930 <OBJ_nid2sn@plt>
    2e28:	ldr	x19, [sp, #16]
    2e2c:	ldp	x29, x30, [sp], #32
    2e30:	b	2620 <PyUnicode_FromString@plt>
    2e34:	sub	sp, sp, #0x90
    2e38:	stp	x29, x30, [sp, #80]
    2e3c:	stp	x24, x23, [sp, #96]
    2e40:	stp	x22, x21, [sp, #112]
    2e44:	stp	x20, x19, [sp, #128]
    2e48:	add	x29, sp, #0x50
    2e4c:	ldr	x9, [x1, #8]
    2e50:	ldrb	w10, [x9, #171]
    2e54:	tbnz	w10, #4, 2eb8 <PyInit__hashlib@@Base+0x414>
    2e58:	ldr	x9, [x9, #160]
    2e5c:	cbz	x9, 2ecc <PyInit__hashlib@@Base+0x428>
    2e60:	ldr	x9, [x9]
    2e64:	cbz	x9, 2ecc <PyInit__hashlib@@Base+0x428>
    2e68:	mov	x8, x1
    2e6c:	mov	x19, x0
    2e70:	mov	x1, sp
    2e74:	mov	x0, x8
    2e78:	mov	w2, wzr
    2e7c:	bl	2750 <PyObject_GetBuffer@plt>
    2e80:	cmn	w0, #0x1
    2e84:	b.eq	2ee4 <PyInit__hashlib@@Base+0x440>  // b.none
    2e88:	ldr	w8, [sp, #36]
    2e8c:	cmp	w8, #0x2
    2e90:	b.lt	2f00 <PyInit__hashlib@@Base+0x45c>  // b.tstop
    2e94:	adrp	x8, 15000 <PyInit__hashlib@@Base+0x1255c>
    2e98:	ldr	x8, [x8, #4024]
    2e9c:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    2ea0:	add	x1, x1, #0x339
    2ea4:	ldr	x0, [x8]
    2ea8:	bl	2920 <PyErr_SetString@plt>
    2eac:	mov	x0, sp
    2eb0:	bl	2970 <PyBuffer_Release@plt>
    2eb4:	b	2ee4 <PyInit__hashlib@@Base+0x440>
    2eb8:	adrp	x8, 15000 <PyInit__hashlib@@Base+0x1255c>
    2ebc:	ldr	x8, [x8, #4000]
    2ec0:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    2ec4:	add	x1, x1, #0x2e0
    2ec8:	b	2edc <PyInit__hashlib@@Base+0x438>
    2ecc:	adrp	x8, 15000 <PyInit__hashlib@@Base+0x1255c>
    2ed0:	ldr	x8, [x8, #4000]
    2ed4:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    2ed8:	add	x1, x1, #0x30f
    2edc:	ldr	x0, [x8]
    2ee0:	bl	2920 <PyErr_SetString@plt>
    2ee4:	mov	x0, xzr
    2ee8:	ldp	x20, x19, [sp, #128]
    2eec:	ldp	x22, x21, [sp, #112]
    2ef0:	ldp	x24, x23, [sp, #96]
    2ef4:	ldp	x29, x30, [sp, #80]
    2ef8:	add	sp, sp, #0x90
    2efc:	ret
    2f00:	ldr	x8, [x19, #24]
    2f04:	cbz	x8, 2f90 <PyInit__hashlib@@Base+0x4ec>
    2f08:	bl	27b0 <PyEval_SaveThread@plt>
    2f0c:	ldr	x8, [x19, #24]
    2f10:	mov	x20, x0
    2f14:	mov	w1, #0x1                   	// #1
    2f18:	mov	x0, x8
    2f1c:	bl	29c0 <PyThread_acquire_lock@plt>
    2f20:	ldr	x23, [sp, #16]
    2f24:	cmp	x23, #0x1
    2f28:	b.lt	2f60 <PyInit__hashlib@@Base+0x4bc>  // b.tstop
    2f2c:	ldr	x21, [sp]
    2f30:	mov	w24, #0x7fffffff            	// #2147483647
    2f34:	ldr	x0, [x19, #16]
    2f38:	cmp	x23, x24
    2f3c:	csel	x22, x23, x24, lt  // lt = tstop
    2f40:	mov	x1, x21
    2f44:	mov	x2, x22
    2f48:	bl	2700 <EVP_DigestUpdate@plt>
    2f4c:	cbz	w0, 2fec <PyInit__hashlib@@Base+0x548>
    2f50:	sub	x23, x23, x22
    2f54:	cmp	x23, #0x0
    2f58:	add	x21, x21, x22
    2f5c:	b.gt	2f34 <PyInit__hashlib@@Base+0x490>
    2f60:	ldr	x0, [x19, #24]
    2f64:	bl	2740 <PyThread_release_lock@plt>
    2f68:	mov	x0, x20
    2f6c:	bl	2770 <PyEval_RestoreThread@plt>
    2f70:	mov	x0, sp
    2f74:	bl	2970 <PyBuffer_Release@plt>
    2f78:	adrp	x0, 15000 <PyInit__hashlib@@Base+0x1255c>
    2f7c:	ldr	x0, [x0, #4056]
    2f80:	ldr	x8, [x0]
    2f84:	add	x8, x8, #0x1
    2f88:	str	x8, [x0]
    2f8c:	b	2ee8 <PyInit__hashlib@@Base+0x444>
    2f90:	ldr	x22, [sp, #16]
    2f94:	cmp	x22, #0x800
    2f98:	b.lt	2fac <PyInit__hashlib@@Base+0x508>  // b.tstop
    2f9c:	bl	26b0 <PyThread_allocate_lock@plt>
    2fa0:	str	x0, [x19, #24]
    2fa4:	cbnz	x0, 2f08 <PyInit__hashlib@@Base+0x464>
    2fa8:	ldr	x22, [sp, #16]
    2fac:	cmp	x22, #0x1
    2fb0:	b.lt	2f70 <PyInit__hashlib@@Base+0x4cc>  // b.tstop
    2fb4:	ldr	x20, [sp]
    2fb8:	mov	w23, #0x7fffffff            	// #2147483647
    2fbc:	ldr	x0, [x19, #16]
    2fc0:	cmp	x22, x23
    2fc4:	csel	x21, x22, x23, lt  // lt = tstop
    2fc8:	mov	x1, x20
    2fcc:	mov	x2, x21
    2fd0:	bl	2700 <EVP_DigestUpdate@plt>
    2fd4:	cbz	w0, 3010 <PyInit__hashlib@@Base+0x56c>
    2fd8:	sub	x22, x22, x21
    2fdc:	cmp	x22, #0x0
    2fe0:	add	x20, x20, x21
    2fe4:	b.gt	2fbc <PyInit__hashlib@@Base+0x518>
    2fe8:	b	2f70 <PyInit__hashlib@@Base+0x4cc>
    2fec:	adrp	x8, 15000 <PyInit__hashlib@@Base+0x1255c>
    2ff0:	ldr	x8, [x8, #3984]
    2ff4:	ldr	x0, [x8]
    2ff8:	bl	32f0 <PyInit__hashlib@@Base+0x84c>
    2ffc:	ldr	x0, [x19, #24]
    3000:	bl	2740 <PyThread_release_lock@plt>
    3004:	mov	x0, x20
    3008:	bl	2770 <PyEval_RestoreThread@plt>
    300c:	b	2eac <PyInit__hashlib@@Base+0x408>
    3010:	adrp	x8, 15000 <PyInit__hashlib@@Base+0x1255c>
    3014:	ldr	x8, [x8, #3984]
    3018:	ldr	x0, [x8]
    301c:	bl	32f0 <PyInit__hashlib@@Base+0x84c>
    3020:	b	2eac <PyInit__hashlib@@Base+0x408>
    3024:	sub	sp, sp, #0x70
    3028:	stp	x29, x30, [sp, #64]
    302c:	str	x21, [sp, #80]
    3030:	stp	x20, x19, [sp, #96]
    3034:	add	x29, sp, #0x40
    3038:	mov	x20, x0
    303c:	bl	27e0 <EVP_MD_CTX_new@plt>
    3040:	cbz	x0, 30e0 <PyInit__hashlib@@Base+0x63c>
    3044:	mov	x19, x0
    3048:	ldr	x0, [x20, #24]
    304c:	cbz	x0, 307c <PyInit__hashlib@@Base+0x5d8>
    3050:	mov	w1, wzr
    3054:	bl	29c0 <PyThread_acquire_lock@plt>
    3058:	cbnz	w0, 307c <PyInit__hashlib@@Base+0x5d8>
    305c:	bl	27b0 <PyEval_SaveThread@plt>
    3060:	ldr	x8, [x20, #24]
    3064:	mov	x21, x0
    3068:	mov	w1, #0x1                   	// #1
    306c:	mov	x0, x8
    3070:	bl	29c0 <PyThread_acquire_lock@plt>
    3074:	mov	x0, x21
    3078:	bl	2770 <PyEval_RestoreThread@plt>
    307c:	ldr	x1, [x20, #16]
    3080:	mov	x0, x19
    3084:	bl	2780 <EVP_MD_CTX_copy@plt>
    3088:	ldr	x8, [x20, #24]
    308c:	mov	w20, w0
    3090:	cbz	x8, 309c <PyInit__hashlib@@Base+0x5f8>
    3094:	mov	x0, x8
    3098:	bl	2740 <PyThread_release_lock@plt>
    309c:	cbz	w20, 30e8 <PyInit__hashlib@@Base+0x644>
    30a0:	mov	x0, x19
    30a4:	bl	2590 <EVP_MD_CTX_md@plt>
    30a8:	bl	26c0 <EVP_MD_size@plt>
    30ac:	mov	w20, w0
    30b0:	mov	x1, sp
    30b4:	mov	x0, x19
    30b8:	mov	x2, xzr
    30bc:	bl	2760 <EVP_DigestFinal@plt>
    30c0:	cbz	w0, 30e8 <PyInit__hashlib@@Base+0x644>
    30c4:	mov	w1, w20
    30c8:	mov	x0, sp
    30cc:	bl	2870 <PyBytes_FromStringAndSize@plt>
    30d0:	mov	x20, x0
    30d4:	mov	x0, x19
    30d8:	bl	28d0 <EVP_MD_CTX_free@plt>
    30dc:	b	30fc <PyInit__hashlib@@Base+0x658>
    30e0:	bl	2630 <PyErr_NoMemory@plt>
    30e4:	b	30f8 <PyInit__hashlib@@Base+0x654>
    30e8:	adrp	x8, 15000 <PyInit__hashlib@@Base+0x1255c>
    30ec:	ldr	x8, [x8, #3984]
    30f0:	ldr	x0, [x8]
    30f4:	bl	32f0 <PyInit__hashlib@@Base+0x84c>
    30f8:	mov	x20, xzr
    30fc:	mov	x0, x20
    3100:	ldp	x20, x19, [sp, #96]
    3104:	ldr	x21, [sp, #80]
    3108:	ldp	x29, x30, [sp, #64]
    310c:	add	sp, sp, #0x70
    3110:	ret
    3114:	sub	sp, sp, #0x70
    3118:	stp	x29, x30, [sp, #64]
    311c:	str	x21, [sp, #80]
    3120:	stp	x20, x19, [sp, #96]
    3124:	add	x29, sp, #0x40
    3128:	mov	x20, x0
    312c:	bl	27e0 <EVP_MD_CTX_new@plt>
    3130:	cbz	x0, 31cc <PyInit__hashlib@@Base+0x728>
    3134:	mov	x19, x0
    3138:	ldr	x0, [x20, #24]
    313c:	cbz	x0, 316c <PyInit__hashlib@@Base+0x6c8>
    3140:	mov	w1, wzr
    3144:	bl	29c0 <PyThread_acquire_lock@plt>
    3148:	cbnz	w0, 316c <PyInit__hashlib@@Base+0x6c8>
    314c:	bl	27b0 <PyEval_SaveThread@plt>
    3150:	ldr	x8, [x20, #24]
    3154:	mov	x21, x0
    3158:	mov	w1, #0x1                   	// #1
    315c:	mov	x0, x8
    3160:	bl	29c0 <PyThread_acquire_lock@plt>
    3164:	mov	x0, x21
    3168:	bl	2770 <PyEval_RestoreThread@plt>
    316c:	ldr	x1, [x20, #16]
    3170:	mov	x0, x19
    3174:	bl	2780 <EVP_MD_CTX_copy@plt>
    3178:	ldr	x8, [x20, #24]
    317c:	mov	w20, w0
    3180:	cbz	x8, 318c <PyInit__hashlib@@Base+0x6e8>
    3184:	mov	x0, x8
    3188:	bl	2740 <PyThread_release_lock@plt>
    318c:	cbz	w20, 31d4 <PyInit__hashlib@@Base+0x730>
    3190:	mov	x0, x19
    3194:	bl	2590 <EVP_MD_CTX_md@plt>
    3198:	bl	26c0 <EVP_MD_size@plt>
    319c:	mov	w20, w0
    31a0:	mov	x1, sp
    31a4:	mov	x0, x19
    31a8:	mov	x2, xzr
    31ac:	bl	2760 <EVP_DigestFinal@plt>
    31b0:	cbz	w0, 31d4 <PyInit__hashlib@@Base+0x730>
    31b4:	mov	x0, x19
    31b8:	bl	28d0 <EVP_MD_CTX_free@plt>
    31bc:	mov	w1, w20
    31c0:	mov	x0, sp
    31c4:	bl	2810 <_Py_strhex@plt>
    31c8:	b	31e8 <PyInit__hashlib@@Base+0x744>
    31cc:	bl	2630 <PyErr_NoMemory@plt>
    31d0:	b	31e4 <PyInit__hashlib@@Base+0x740>
    31d4:	adrp	x8, 15000 <PyInit__hashlib@@Base+0x1255c>
    31d8:	ldr	x8, [x8, #3984]
    31dc:	ldr	x0, [x8]
    31e0:	bl	32f0 <PyInit__hashlib@@Base+0x84c>
    31e4:	mov	x0, xzr
    31e8:	ldp	x20, x19, [sp, #96]
    31ec:	ldr	x21, [sp, #80]
    31f0:	ldp	x29, x30, [sp, #64]
    31f4:	add	sp, sp, #0x70
    31f8:	ret
    31fc:	stp	x29, x30, [sp, #-48]!
    3200:	stp	x22, x21, [sp, #16]
    3204:	stp	x20, x19, [sp, #32]
    3208:	mov	x29, sp
    320c:	mov	x20, x0
    3210:	adrp	x0, 16000 <PyInit__hashlib@@Base+0x1355c>
    3214:	add	x0, x0, #0x7e8
    3218:	bl	2660 <_PyObject_New@plt>
    321c:	mov	x19, x0
    3220:	cbz	x0, 32dc <PyInit__hashlib@@Base+0x838>
    3224:	str	xzr, [x19, #24]
    3228:	bl	27e0 <EVP_MD_CTX_new@plt>
    322c:	str	x0, [x19, #16]
    3230:	cbz	x0, 32bc <PyInit__hashlib@@Base+0x818>
    3234:	mov	x21, x0
    3238:	ldr	x0, [x20, #24]
    323c:	cbz	x0, 326c <PyInit__hashlib@@Base+0x7c8>
    3240:	mov	w1, wzr
    3244:	bl	29c0 <PyThread_acquire_lock@plt>
    3248:	cbnz	w0, 326c <PyInit__hashlib@@Base+0x7c8>
    324c:	bl	27b0 <PyEval_SaveThread@plt>
    3250:	ldr	x8, [x20, #24]
    3254:	mov	x22, x0
    3258:	mov	w1, #0x1                   	// #1
    325c:	mov	x0, x8
    3260:	bl	29c0 <PyThread_acquire_lock@plt>
    3264:	mov	x0, x22
    3268:	bl	2770 <PyEval_RestoreThread@plt>
    326c:	ldr	x1, [x20, #16]
    3270:	mov	x0, x21
    3274:	bl	2780 <EVP_MD_CTX_copy@plt>
    3278:	ldr	x8, [x20, #24]
    327c:	mov	w20, w0
    3280:	cbz	x8, 328c <PyInit__hashlib@@Base+0x7e8>
    3284:	mov	x0, x8
    3288:	bl	2740 <PyThread_release_lock@plt>
    328c:	cbnz	w20, 32dc <PyInit__hashlib@@Base+0x838>
    3290:	ldr	x8, [x19]
    3294:	subs	x8, x8, #0x1
    3298:	str	x8, [x19]
    329c:	b.ne	32a8 <PyInit__hashlib@@Base+0x804>  // b.any
    32a0:	mov	x0, x19
    32a4:	bl	28e0 <_Py_Dealloc@plt>
    32a8:	adrp	x8, 15000 <PyInit__hashlib@@Base+0x1255c>
    32ac:	ldr	x8, [x8, #3984]
    32b0:	ldr	x0, [x8]
    32b4:	bl	32f0 <PyInit__hashlib@@Base+0x84c>
    32b8:	b	32d8 <PyInit__hashlib@@Base+0x834>
    32bc:	ldr	x8, [x19]
    32c0:	subs	x8, x8, #0x1
    32c4:	str	x8, [x19]
    32c8:	b.ne	32d4 <PyInit__hashlib@@Base+0x830>  // b.any
    32cc:	mov	x0, x19
    32d0:	bl	28e0 <_Py_Dealloc@plt>
    32d4:	bl	2630 <PyErr_NoMemory@plt>
    32d8:	mov	x19, xzr
    32dc:	mov	x0, x19
    32e0:	ldp	x20, x19, [sp, #32]
    32e4:	ldp	x22, x21, [sp, #16]
    32e8:	ldp	x29, x30, [sp], #48
    32ec:	ret
    32f0:	stp	x29, x30, [sp, #-48]!
    32f4:	stp	x22, x21, [sp, #16]
    32f8:	stp	x20, x19, [sp, #32]
    32fc:	mov	x29, sp
    3300:	mov	x19, x0
    3304:	bl	2840 <ERR_peek_last_error@plt>
    3308:	cbz	x0, 3364 <PyInit__hashlib@@Base+0x8c0>
    330c:	mov	x21, x0
    3310:	bl	2610 <ERR_clear_error@plt>
    3314:	mov	x0, x21
    3318:	bl	2990 <ERR_lib_error_string@plt>
    331c:	mov	x20, x0
    3320:	mov	x0, x21
    3324:	bl	25e0 <ERR_func_error_string@plt>
    3328:	mov	x22, x0
    332c:	mov	x0, x21
    3330:	bl	2560 <ERR_reason_error_string@plt>
    3334:	mov	x4, x0
    3338:	cbz	x20, 3380 <PyInit__hashlib@@Base+0x8dc>
    333c:	cbz	x22, 3380 <PyInit__hashlib@@Base+0x8dc>
    3340:	mov	x0, x19
    3344:	mov	x2, x20
    3348:	mov	x3, x22
    334c:	ldp	x20, x19, [sp, #32]
    3350:	ldp	x22, x21, [sp, #16]
    3354:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    3358:	add	x1, x1, #0x369
    335c:	ldp	x29, x30, [sp], #48
    3360:	b	26f0 <PyErr_Format@plt>
    3364:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    3368:	add	x1, x1, #0x359
    336c:	mov	x0, x19
    3370:	ldp	x20, x19, [sp, #32]
    3374:	ldp	x22, x21, [sp, #16]
    3378:	ldp	x29, x30, [sp], #48
    337c:	b	2920 <PyErr_SetString@plt>
    3380:	cbz	x20, 33a8 <PyInit__hashlib@@Base+0x904>
    3384:	mov	x0, x19
    3388:	mov	x2, x20
    338c:	ldp	x20, x19, [sp, #32]
    3390:	ldp	x22, x21, [sp, #16]
    3394:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    3398:	add	x1, x1, #0x375
    339c:	mov	x3, x4
    33a0:	ldp	x29, x30, [sp], #48
    33a4:	b	26f0 <PyErr_Format@plt>
    33a8:	mov	x0, x19
    33ac:	mov	x1, x4
    33b0:	ldp	x20, x19, [sp, #32]
    33b4:	ldp	x22, x21, [sp, #16]
    33b8:	ldp	x29, x30, [sp], #48
    33bc:	b	2920 <PyErr_SetString@plt>
    33c0:	stp	x29, x30, [sp, #-16]!
    33c4:	mov	x29, sp
    33c8:	ldr	x0, [x0, #16]
    33cc:	bl	2590 <EVP_MD_CTX_md@plt>
    33d0:	bl	26c0 <EVP_MD_size@plt>
    33d4:	sxtw	x0, w0
    33d8:	ldp	x29, x30, [sp], #16
    33dc:	b	2890 <PyLong_FromLong@plt>
    33e0:	stp	x29, x30, [sp, #-16]!
    33e4:	mov	x29, sp
    33e8:	ldr	x0, [x0, #16]
    33ec:	bl	2590 <EVP_MD_CTX_md@plt>
    33f0:	bl	2730 <EVP_MD_block_size@plt>
    33f4:	sxtw	x0, w0
    33f8:	ldp	x29, x30, [sp], #16
    33fc:	b	2890 <PyLong_FromLong@plt>
    3400:	stp	x29, x30, [sp, #-16]!
    3404:	mov	x29, sp
    3408:	ldr	x0, [x0, #16]
    340c:	bl	2590 <EVP_MD_CTX_md@plt>
    3410:	ldp	x29, x30, [sp], #16
    3414:	b	2c60 <PyInit__hashlib@@Base+0x1bc>
    3418:	sub	sp, sp, #0x90
    341c:	stp	x29, x30, [sp, #112]
    3420:	stp	x20, x19, [sp, #128]
    3424:	add	x29, sp, #0x70
    3428:	mov	x0, x1
    342c:	cbz	x3, 346c <PyInit__hashlib@@Base+0x9c8>
    3430:	ldr	x8, [x3, #16]
    3434:	add	x19, x8, x2
    3438:	adrp	x4, 16000 <PyInit__hashlib@@Base+0x1355c>
    343c:	add	x8, sp, #0x8
    3440:	add	x4, x4, #0x500
    3444:	mov	w5, #0x1                   	// #1
    3448:	mov	w6, #0x2                   	// #2
    344c:	mov	x1, x2
    3450:	mov	x2, xzr
    3454:	mov	w7, wzr
    3458:	str	x8, [sp]
    345c:	bl	28c0 <_PyArg_UnpackKeywords@plt>
    3460:	mov	x2, x19
    3464:	cbnz	x0, 3484 <PyInit__hashlib@@Base+0x9e0>
    3468:	b	3674 <PyInit__hashlib@@Base+0xbd0>
    346c:	mov	x19, x2
    3470:	cbz	x0, 3438 <PyInit__hashlib@@Base+0x994>
    3474:	sub	x8, x2, #0x1
    3478:	cmp	x8, #0x2
    347c:	mov	x19, x2
    3480:	b.cs	3438 <PyInit__hashlib@@Base+0x994>  // b.hs, b.nlast
    3484:	ldr	x8, [x0]
    3488:	cmp	x2, #0x1
    348c:	b.ne	3498 <PyInit__hashlib@@Base+0x9f4>  // b.any
    3490:	mov	x19, xzr
    3494:	b	349c <PyInit__hashlib@@Base+0x9f8>
    3498:	ldr	x19, [x0, #8]
    349c:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    34a0:	movi	v0.2d, #0x0
    34a4:	add	x1, x1, #0x373
    34a8:	add	x2, sp, #0x18
    34ac:	mov	x0, x8
    34b0:	stp	q0, q0, [sp, #80]
    34b4:	stp	q0, q0, [sp, #48]
    34b8:	str	q0, [sp, #32]
    34bc:	bl	2880 <_PyArg_Parse_SizeT@plt>
    34c0:	cbz	w0, 352c <PyInit__hashlib@@Base+0xa88>
    34c4:	cbz	x19, 3540 <PyInit__hashlib@@Base+0xa9c>
    34c8:	ldr	x8, [x19, #8]
    34cc:	ldrb	w9, [x8, #171]
    34d0:	tbnz	w9, #4, 3648 <PyInit__hashlib@@Base+0xba4>
    34d4:	ldr	x8, [x8, #160]
    34d8:	cbz	x8, 365c <PyInit__hashlib@@Base+0xbb8>
    34dc:	ldr	x8, [x8]
    34e0:	cbz	x8, 365c <PyInit__hashlib@@Base+0xbb8>
    34e4:	add	x1, sp, #0x20
    34e8:	mov	x0, x19
    34ec:	mov	w2, wzr
    34f0:	bl	2750 <PyObject_GetBuffer@plt>
    34f4:	cmn	w0, #0x1
    34f8:	b.eq	3674 <PyInit__hashlib@@Base+0xbd0>  // b.none
    34fc:	ldr	w8, [sp, #68]
    3500:	cmp	w8, #0x2
    3504:	b.lt	3540 <PyInit__hashlib@@Base+0xa9c>  // b.tstop
    3508:	adrp	x8, 15000 <PyInit__hashlib@@Base+0x1255c>
    350c:	ldr	x8, [x8, #4024]
    3510:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    3514:	add	x1, x1, #0x339
    3518:	ldr	x0, [x8]
    351c:	bl	2920 <PyErr_SetString@plt>
    3520:	add	x0, sp, #0x20
    3524:	bl	2970 <PyBuffer_Release@plt>
    3528:	b	3674 <PyInit__hashlib@@Base+0xbd0>
    352c:	adrp	x8, 15000 <PyInit__hashlib@@Base+0x1255c>
    3530:	ldr	x8, [x8, #4000]
    3534:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    3538:	add	x1, x1, #0x425
    353c:	b	366c <PyInit__hashlib@@Base+0xbc8>
    3540:	ldr	x20, [sp, #24]
    3544:	mov	x0, x20
    3548:	bl	2640 <EVP_get_digestbyname@plt>
    354c:	cbnz	x0, 3698 <PyInit__hashlib@@Base+0xbf4>
    3550:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    3554:	add	x1, x1, #0x26c
    3558:	mov	x0, x20
    355c:	bl	28a0 <strcmp@plt>
    3560:	cbz	w0, 368c <PyInit__hashlib@@Base+0xbe8>
    3564:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    3568:	add	x1, x1, #0x43b
    356c:	mov	x0, x20
    3570:	bl	28a0 <strcmp@plt>
    3574:	cbz	w0, 368c <PyInit__hashlib@@Base+0xbe8>
    3578:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    357c:	add	x1, x1, #0x277
    3580:	mov	x0, x20
    3584:	bl	28a0 <strcmp@plt>
    3588:	cbz	w0, 3694 <PyInit__hashlib@@Base+0xbf0>
    358c:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    3590:	add	x1, x1, #0x446
    3594:	mov	x0, x20
    3598:	bl	28a0 <strcmp@plt>
    359c:	cbz	w0, 3694 <PyInit__hashlib@@Base+0xbf0>
    35a0:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    35a4:	add	x1, x1, #0x282
    35a8:	mov	x0, x20
    35ac:	bl	28a0 <strcmp@plt>
    35b0:	cbz	w0, 36b8 <PyInit__hashlib@@Base+0xc14>
    35b4:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    35b8:	add	x1, x1, #0x28b
    35bc:	mov	x0, x20
    35c0:	bl	28a0 <strcmp@plt>
    35c4:	cbz	w0, 36c0 <PyInit__hashlib@@Base+0xc1c>
    35c8:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    35cc:	add	x1, x1, #0x294
    35d0:	mov	x0, x20
    35d4:	bl	28a0 <strcmp@plt>
    35d8:	cbz	w0, 36c8 <PyInit__hashlib@@Base+0xc24>
    35dc:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    35e0:	add	x1, x1, #0x29d
    35e4:	mov	x0, x20
    35e8:	bl	28a0 <strcmp@plt>
    35ec:	cbz	w0, 36d0 <PyInit__hashlib@@Base+0xc2c>
    35f0:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    35f4:	add	x1, x1, #0x2a6
    35f8:	mov	x0, x20
    35fc:	bl	28a0 <strcmp@plt>
    3600:	cbz	w0, 36d8 <PyInit__hashlib@@Base+0xc34>
    3604:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    3608:	add	x1, x1, #0x2b0
    360c:	mov	x0, x20
    3610:	bl	28a0 <strcmp@plt>
    3614:	cbz	w0, 36e0 <PyInit__hashlib@@Base+0xc3c>
    3618:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    361c:	add	x1, x1, #0x451
    3620:	mov	x0, x20
    3624:	bl	28a0 <strcmp@plt>
    3628:	cbz	w0, 36e8 <PyInit__hashlib@@Base+0xc44>
    362c:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    3630:	add	x1, x1, #0x45c
    3634:	mov	x0, x20
    3638:	bl	28a0 <strcmp@plt>
    363c:	cbz	w0, 36f0 <PyInit__hashlib@@Base+0xc4c>
    3640:	mov	x0, xzr
    3644:	b	3698 <PyInit__hashlib@@Base+0xbf4>
    3648:	adrp	x8, 15000 <PyInit__hashlib@@Base+0x1255c>
    364c:	ldr	x8, [x8, #4000]
    3650:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    3654:	add	x1, x1, #0x2e0
    3658:	b	366c <PyInit__hashlib@@Base+0xbc8>
    365c:	adrp	x8, 15000 <PyInit__hashlib@@Base+0x1255c>
    3660:	ldr	x8, [x8, #4000]
    3664:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    3668:	add	x1, x1, #0x30f
    366c:	ldr	x0, [x8]
    3670:	bl	2920 <PyErr_SetString@plt>
    3674:	mov	x20, xzr
    3678:	mov	x0, x20
    367c:	ldp	x20, x19, [sp, #128]
    3680:	ldp	x29, x30, [sp, #112]
    3684:	add	sp, sp, #0x90
    3688:	ret
    368c:	bl	2570 <EVP_sha512_224@plt>
    3690:	b	3698 <PyInit__hashlib@@Base+0xbf4>
    3694:	bl	2960 <EVP_sha512_256@plt>
    3698:	ldr	x1, [sp, #32]
    369c:	ldr	x2, [sp, #48]
    36a0:	bl	4700 <PyInit__hashlib@@Base+0x1c5c>
    36a4:	mov	x20, x0
    36a8:	cbz	x19, 3678 <PyInit__hashlib@@Base+0xbd4>
    36ac:	add	x0, sp, #0x20
    36b0:	bl	2970 <PyBuffer_Release@plt>
    36b4:	b	3678 <PyInit__hashlib@@Base+0xbd4>
    36b8:	bl	2900 <EVP_sha3_224@plt>
    36bc:	b	3698 <PyInit__hashlib@@Base+0xbf4>
    36c0:	bl	27d0 <EVP_sha3_256@plt>
    36c4:	b	3698 <PyInit__hashlib@@Base+0xbf4>
    36c8:	bl	2790 <EVP_sha3_384@plt>
    36cc:	b	3698 <PyInit__hashlib@@Base+0xbf4>
    36d0:	bl	25f0 <EVP_sha3_512@plt>
    36d4:	b	3698 <PyInit__hashlib@@Base+0xbf4>
    36d8:	bl	2680 <EVP_shake128@plt>
    36dc:	b	3698 <PyInit__hashlib@@Base+0xbf4>
    36e0:	bl	25b0 <EVP_shake256@plt>
    36e4:	b	3698 <PyInit__hashlib@@Base+0xbf4>
    36e8:	bl	2580 <EVP_blake2s256@plt>
    36ec:	b	3698 <PyInit__hashlib@@Base+0xbf4>
    36f0:	bl	28b0 <EVP_blake2b512@plt>
    36f4:	b	3698 <PyInit__hashlib@@Base+0xbf4>
    36f8:	sub	sp, sp, #0x130
    36fc:	stp	x29, x30, [sp, #224]
    3700:	str	x28, [sp, #240]
    3704:	stp	x24, x23, [sp, #256]
    3708:	stp	x22, x21, [sp, #272]
    370c:	stp	x20, x19, [sp, #288]
    3710:	add	x29, sp, #0xe0
    3714:	mov	x20, x2
    3718:	mov	x19, x1
    371c:	add	x8, sp, #0x60
    3720:	cbz	x3, 372c <PyInit__hashlib@@Base+0xc88>
    3724:	ldr	x23, [x3, #16]
    3728:	b	3730 <PyInit__hashlib@@Base+0xc8c>
    372c:	mov	x23, xzr
    3730:	movi	v0.2d, #0x0
    3734:	stp	q0, q0, [x8, #48]
    3738:	stp	q0, q0, [sp, #112]
    373c:	stp	q0, q0, [sp, #80]
    3740:	stp	q0, q0, [sp, #48]
    3744:	stp	q0, q0, [sp, #16]
    3748:	cbz	x19, 375c <PyInit__hashlib@@Base+0xcb8>
    374c:	and	x8, x20, #0xfffffffffffffffe
    3750:	cmp	x8, #0x4
    3754:	b.ne	375c <PyInit__hashlib@@Base+0xcb8>  // b.any
    3758:	cbz	x3, 3790 <PyInit__hashlib@@Base+0xcec>
    375c:	adrp	x4, 16000 <PyInit__hashlib@@Base+0x1355c>
    3760:	sub	x8, x29, #0x28
    3764:	add	x4, x4, #0x540
    3768:	mov	w5, #0x4                   	// #4
    376c:	mov	w6, #0x5                   	// #5
    3770:	mov	x0, x19
    3774:	mov	x1, x20
    3778:	mov	x2, xzr
    377c:	mov	w7, wzr
    3780:	str	x8, [sp]
    3784:	bl	28c0 <_PyArg_UnpackKeywords@plt>
    3788:	mov	x19, x0
    378c:	cbz	x0, 3884 <PyInit__hashlib@@Base+0xde0>
    3790:	ldr	x3, [x19]
    3794:	ldr	x8, [x3, #8]
    3798:	ldrb	w8, [x8, #171]
    379c:	tbnz	w8, #4, 37c0 <PyInit__hashlib@@Base+0xd1c>
    37a0:	adrp	x0, 5000 <PyInit__hashlib@@Base+0x255c>
    37a4:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    37a8:	adrp	x2, 5000 <PyInit__hashlib@@Base+0x255c>
    37ac:	add	x0, x0, #0x3b1
    37b0:	add	x1, x1, #0x4a6
    37b4:	add	x2, x2, #0x4bb
    37b8:	bl	29b0 <_PyArg_BadArgument@plt>
    37bc:	b	3880 <PyInit__hashlib@@Base+0xddc>
    37c0:	add	x1, sp, #0x8
    37c4:	mov	x0, x3
    37c8:	bl	2670 <PyUnicode_AsUTF8AndSize@plt>
    37cc:	cbz	x0, 3880 <PyInit__hashlib@@Base+0xddc>
    37d0:	mov	x22, x0
    37d4:	bl	2980 <strlen@plt>
    37d8:	ldr	x8, [sp, #8]
    37dc:	cmp	x0, x8
    37e0:	b.ne	3868 <PyInit__hashlib@@Base+0xdc4>  // b.any
    37e4:	ldr	x0, [x19, #8]
    37e8:	add	x1, sp, #0x60
    37ec:	mov	w2, wzr
    37f0:	bl	2750 <PyObject_GetBuffer@plt>
    37f4:	cbnz	w0, 3880 <PyInit__hashlib@@Base+0xddc>
    37f8:	add	x0, sp, #0x60
    37fc:	mov	w1, #0x43                  	// #67
    3800:	bl	27f0 <PyBuffer_IsContiguous@plt>
    3804:	cbz	w0, 38c4 <PyInit__hashlib@@Base+0xe20>
    3808:	ldr	x0, [x19, #16]
    380c:	add	x1, sp, #0x10
    3810:	mov	w2, wzr
    3814:	bl	2750 <PyObject_GetBuffer@plt>
    3818:	cbnz	w0, 3880 <PyInit__hashlib@@Base+0xddc>
    381c:	add	x0, sp, #0x10
    3820:	mov	w1, #0x43                  	// #67
    3824:	bl	27f0 <PyBuffer_IsContiguous@plt>
    3828:	cbz	w0, 38e8 <PyInit__hashlib@@Base+0xe44>
    382c:	ldr	x8, [x19, #24]
    3830:	ldr	x0, [x8, #8]
    3834:	adrp	x8, 15000 <PyInit__hashlib@@Base+0x1255c>
    3838:	ldr	x8, [x8, #4040]
    383c:	cmp	x0, x8
    3840:	b.eq	3854 <PyInit__hashlib@@Base+0xdb0>  // b.none
    3844:	adrp	x1, 15000 <PyInit__hashlib@@Base+0x1255c>
    3848:	ldr	x1, [x1, #4040]
    384c:	bl	2800 <PyType_IsSubtype@plt>
    3850:	cbz	w0, 3900 <PyInit__hashlib@@Base+0xe5c>
    3854:	adrp	x8, 15000 <PyInit__hashlib@@Base+0x1255c>
    3858:	ldr	x8, [x8, #4000]
    385c:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    3860:	add	x1, x1, #0x50d
    3864:	b	3878 <PyInit__hashlib@@Base+0xdd4>
    3868:	adrp	x8, 15000 <PyInit__hashlib@@Base+0x1255c>
    386c:	ldr	x8, [x8, #3984]
    3870:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    3874:	add	x1, x1, #0x4bf
    3878:	ldr	x0, [x8]
    387c:	bl	2920 <PyErr_SetString@plt>
    3880:	mov	x19, xzr
    3884:	ldr	x8, [sp, #104]
    3888:	cbz	x8, 3894 <PyInit__hashlib@@Base+0xdf0>
    388c:	add	x0, sp, #0x60
    3890:	bl	2970 <PyBuffer_Release@plt>
    3894:	ldr	x8, [sp, #24]
    3898:	cbz	x8, 38a4 <PyInit__hashlib@@Base+0xe00>
    389c:	add	x0, sp, #0x10
    38a0:	bl	2970 <PyBuffer_Release@plt>
    38a4:	mov	x0, x19
    38a8:	ldp	x20, x19, [sp, #288]
    38ac:	ldp	x22, x21, [sp, #272]
    38b0:	ldp	x24, x23, [sp, #256]
    38b4:	ldr	x28, [sp, #240]
    38b8:	ldp	x29, x30, [sp, #224]
    38bc:	add	sp, sp, #0x130
    38c0:	ret
    38c4:	ldr	x3, [x19, #8]
    38c8:	adrp	x0, 5000 <PyInit__hashlib@@Base+0x255c>
    38cc:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    38d0:	add	x0, x0, #0x3b1
    38d4:	add	x1, x1, #0x4d7
    38d8:	adrp	x2, 5000 <PyInit__hashlib@@Base+0x255c>
    38dc:	add	x2, x2, #0x4eb
    38e0:	bl	29b0 <_PyArg_BadArgument@plt>
    38e4:	b	3880 <PyInit__hashlib@@Base+0xddc>
    38e8:	ldr	x3, [x19, #16]
    38ec:	adrp	x0, 5000 <PyInit__hashlib@@Base+0x255c>
    38f0:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    38f4:	add	x0, x0, #0x3b1
    38f8:	add	x1, x1, #0x4fd
    38fc:	b	38d8 <PyInit__hashlib@@Base+0xe34>
    3900:	ldr	x0, [x19, #24]
    3904:	bl	26d0 <PyLong_AsLong@plt>
    3908:	mov	x21, x0
    390c:	cmn	x0, #0x1
    3910:	b.eq	3960 <PyInit__hashlib@@Base+0xebc>  // b.none
    3914:	adrp	x24, 15000 <PyInit__hashlib@@Base+0x1255c>
    3918:	ldr	x24, [x24, #4056]
    391c:	add	x8, x23, x20
    3920:	cmp	x8, #0x4
    3924:	mov	x23, x24
    3928:	b.eq	3930 <PyInit__hashlib@@Base+0xe8c>  // b.none
    392c:	ldr	x23, [x19, #32]
    3930:	mov	x0, x22
    3934:	bl	2640 <EVP_get_digestbyname@plt>
    3938:	cbz	x0, 396c <PyInit__hashlib@@Base+0xec8>
    393c:	ldr	x8, [sp, #112]
    3940:	mov	w9, #0x80000000            	// #-2147483648
    3944:	cmp	x8, x9
    3948:	b.lt	3980 <PyInit__hashlib@@Base+0xedc>  // b.tstop
    394c:	adrp	x8, 15000 <PyInit__hashlib@@Base+0x1255c>
    3950:	ldr	x8, [x8, #4064]
    3954:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    3958:	add	x1, x1, #0x532
    395c:	b	3878 <PyInit__hashlib@@Base+0xdd4>
    3960:	bl	2720 <PyErr_Occurred@plt>
    3964:	cbnz	x0, 3880 <PyInit__hashlib@@Base+0xddc>
    3968:	b	3914 <PyInit__hashlib@@Base+0xe70>
    396c:	adrp	x8, 15000 <PyInit__hashlib@@Base+0x1255c>
    3970:	ldr	x8, [x8, #3984]
    3974:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    3978:	add	x1, x1, #0x467
    397c:	b	3878 <PyInit__hashlib@@Base+0xdd4>
    3980:	ldr	x8, [sp, #32]
    3984:	mov	w9, #0x80000000            	// #-2147483648
    3988:	cmp	x8, x9
    398c:	b.lt	39a4 <PyInit__hashlib@@Base+0xf00>  // b.tstop
    3990:	adrp	x8, 15000 <PyInit__hashlib@@Base+0x1255c>
    3994:	ldr	x8, [x8, #4064]
    3998:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    399c:	add	x1, x1, #0x548
    39a0:	b	3878 <PyInit__hashlib@@Base+0xdd4>
    39a4:	cmp	x21, #0x0
    39a8:	b.le	39cc <PyInit__hashlib@@Base+0xf28>
    39ac:	mov	w8, #0x80000000            	// #-2147483648
    39b0:	cmp	x21, x8
    39b4:	b.lt	39e0 <PyInit__hashlib@@Base+0xf3c>  // b.tstop
    39b8:	adrp	x8, 15000 <PyInit__hashlib@@Base+0x1255c>
    39bc:	ldr	x8, [x8, #4064]
    39c0:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    39c4:	add	x1, x1, #0x582
    39c8:	b	3878 <PyInit__hashlib@@Base+0xdd4>
    39cc:	adrp	x8, 15000 <PyInit__hashlib@@Base+0x1255c>
    39d0:	ldr	x8, [x8, #3984]
    39d4:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    39d8:	add	x1, x1, #0x55a
    39dc:	b	3878 <PyInit__hashlib@@Base+0xdd4>
    39e0:	mov	x20, x0
    39e4:	cmp	x23, x24
    39e8:	b.eq	3a0c <PyInit__hashlib@@Base+0xf68>  // b.none
    39ec:	mov	x0, x23
    39f0:	bl	26d0 <PyLong_AsLong@plt>
    39f4:	mov	x22, x0
    39f8:	cmn	x0, #0x1
    39fc:	b.ne	3a18 <PyInit__hashlib@@Base+0xf74>  // b.any
    3a00:	bl	2720 <PyErr_Occurred@plt>
    3a04:	cbnz	x0, 3880 <PyInit__hashlib@@Base+0xddc>
    3a08:	b	3a40 <PyInit__hashlib@@Base+0xf9c>
    3a0c:	mov	x0, x20
    3a10:	bl	26c0 <EVP_MD_size@plt>
    3a14:	sxtw	x22, w0
    3a18:	cmp	x22, #0x0
    3a1c:	b.le	3a40 <PyInit__hashlib@@Base+0xf9c>
    3a20:	mov	w8, #0x80000000            	// #-2147483648
    3a24:	cmp	x22, x8
    3a28:	b.lt	3a54 <PyInit__hashlib@@Base+0xfb0>  // b.tstop
    3a2c:	adrp	x8, 15000 <PyInit__hashlib@@Base+0x1255c>
    3a30:	ldr	x8, [x8, #4064]
    3a34:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    3a38:	add	x1, x1, #0x5c3
    3a3c:	b	3878 <PyInit__hashlib@@Base+0xdd4>
    3a40:	adrp	x8, 15000 <PyInit__hashlib@@Base+0x1255c>
    3a44:	ldr	x8, [x8, #3984]
    3a48:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    3a4c:	add	x1, x1, #0x5a0
    3a50:	b	3878 <PyInit__hashlib@@Base+0xdd4>
    3a54:	mov	x0, xzr
    3a58:	mov	x1, x22
    3a5c:	bl	2870 <PyBytes_FromStringAndSize@plt>
    3a60:	mov	x19, x0
    3a64:	cbz	x0, 3884 <PyInit__hashlib@@Base+0xde0>
    3a68:	add	x23, x19, #0x20
    3a6c:	bl	27b0 <PyEval_SaveThread@plt>
    3a70:	ldr	x8, [sp, #96]
    3a74:	ldr	w1, [sp, #112]
    3a78:	ldr	x2, [sp, #16]
    3a7c:	ldr	w3, [sp, #32]
    3a80:	mov	x24, x0
    3a84:	mov	x0, x8
    3a88:	mov	w4, w21
    3a8c:	mov	x5, x20
    3a90:	mov	w6, w22
    3a94:	mov	x7, x23
    3a98:	bl	2540 <PKCS5_PBKDF2_HMAC@plt>
    3a9c:	mov	w20, w0
    3aa0:	mov	x0, x24
    3aa4:	bl	2770 <PyEval_RestoreThread@plt>
    3aa8:	cbnz	w20, 3884 <PyInit__hashlib@@Base+0xde0>
    3aac:	ldr	x8, [x19]
    3ab0:	subs	x8, x8, #0x1
    3ab4:	str	x8, [x19]
    3ab8:	b.ne	3ac4 <PyInit__hashlib@@Base+0x1020>  // b.any
    3abc:	mov	x0, x19
    3ac0:	bl	28e0 <_Py_Dealloc@plt>
    3ac4:	adrp	x8, 15000 <PyInit__hashlib@@Base+0x1255c>
    3ac8:	ldr	x8, [x8, #3984]
    3acc:	ldr	x0, [x8]
    3ad0:	bl	32f0 <PyInit__hashlib@@Base+0x84c>
    3ad4:	b	3880 <PyInit__hashlib@@Base+0xddc>
    3ad8:	sub	sp, sp, #0x150
    3adc:	stp	x29, x30, [sp, #240]
    3ae0:	str	x28, [sp, #256]
    3ae4:	stp	x26, x25, [sp, #272]
    3ae8:	stp	x24, x23, [sp, #288]
    3aec:	stp	x22, x21, [sp, #304]
    3af0:	stp	x20, x19, [sp, #320]
    3af4:	add	x29, sp, #0xf0
    3af8:	mov	x19, x2
    3afc:	mov	x21, x1
    3b00:	cbz	x3, 3b0c <PyInit__hashlib@@Base+0x1068>
    3b04:	ldr	x20, [x3, #16]
    3b08:	b	3b10 <PyInit__hashlib@@Base+0x106c>
    3b0c:	mov	x20, xzr
    3b10:	movi	v0.2d, #0x0
    3b14:	stp	q0, q0, [sp, #144]
    3b18:	stp	q0, q0, [sp, #112]
    3b1c:	stp	q0, q0, [sp, #80]
    3b20:	stp	q0, q0, [sp, #48]
    3b24:	stp	q0, q0, [sp, #16]
    3b28:	cbz	x21, 3b38 <PyInit__hashlib@@Base+0x1094>
    3b2c:	cmp	x19, #0x1
    3b30:	b.ne	3b38 <PyInit__hashlib@@Base+0x1094>  // b.any
    3b34:	cbz	x3, 3b6c <PyInit__hashlib@@Base+0x10c8>
    3b38:	adrp	x4, 16000 <PyInit__hashlib@@Base+0x1355c>
    3b3c:	sub	x8, x29, #0x38
    3b40:	add	x4, x4, #0x580
    3b44:	mov	w5, #0x1                   	// #1
    3b48:	mov	w6, #0x1                   	// #1
    3b4c:	mov	x0, x21
    3b50:	mov	x1, x19
    3b54:	mov	x2, xzr
    3b58:	mov	w7, wzr
    3b5c:	str	x8, [sp]
    3b60:	bl	28c0 <_PyArg_UnpackKeywords@plt>
    3b64:	mov	x21, x0
    3b68:	cbz	x0, 3b80 <PyInit__hashlib@@Base+0x10dc>
    3b6c:	ldr	x0, [x21]
    3b70:	add	x1, sp, #0x60
    3b74:	mov	w2, wzr
    3b78:	bl	2750 <PyObject_GetBuffer@plt>
    3b7c:	cbz	w0, 3bc8 <PyInit__hashlib@@Base+0x1124>
    3b80:	mov	x22, xzr
    3b84:	ldr	x8, [sp, #104]
    3b88:	cbz	x8, 3b94 <PyInit__hashlib@@Base+0x10f0>
    3b8c:	add	x0, sp, #0x60
    3b90:	bl	2970 <PyBuffer_Release@plt>
    3b94:	ldr	x8, [sp, #24]
    3b98:	cbz	x8, 3ba4 <PyInit__hashlib@@Base+0x1100>
    3b9c:	add	x0, sp, #0x10
    3ba0:	bl	2970 <PyBuffer_Release@plt>
    3ba4:	mov	x0, x22
    3ba8:	ldp	x20, x19, [sp, #320]
    3bac:	ldp	x22, x21, [sp, #304]
    3bb0:	ldp	x24, x23, [sp, #288]
    3bb4:	ldp	x26, x25, [sp, #272]
    3bb8:	ldr	x28, [sp, #256]
    3bbc:	ldp	x29, x30, [sp, #240]
    3bc0:	add	sp, sp, #0x150
    3bc4:	ret
    3bc8:	add	x0, sp, #0x60
    3bcc:	mov	w1, #0x43                  	// #67
    3bd0:	bl	27f0 <PyBuffer_IsContiguous@plt>
    3bd4:	cbz	w0, 3c4c <PyInit__hashlib@@Base+0x11a8>
    3bd8:	add	x19, x20, x19
    3bdc:	sub	x24, x19, #0x1
    3be0:	cbz	x24, 3c70 <PyInit__hashlib@@Base+0x11cc>
    3be4:	ldr	x0, [x21, #8]
    3be8:	cbz	x0, 3c14 <PyInit__hashlib@@Base+0x1170>
    3bec:	add	x1, sp, #0x10
    3bf0:	mov	w2, wzr
    3bf4:	bl	2750 <PyObject_GetBuffer@plt>
    3bf8:	cbnz	w0, 3b80 <PyInit__hashlib@@Base+0x10dc>
    3bfc:	add	x0, sp, #0x10
    3c00:	mov	w1, #0x43                  	// #67
    3c04:	bl	27f0 <PyBuffer_IsContiguous@plt>
    3c08:	cbz	w0, 3dd4 <PyInit__hashlib@@Base+0x1330>
    3c0c:	subs	x24, x19, #0x2
    3c10:	b.eq	3c70 <PyInit__hashlib@@Base+0x11cc>  // b.none
    3c14:	ldr	x20, [x21, #16]
    3c18:	cbz	x20, 3ce8 <PyInit__hashlib@@Base+0x1244>
    3c1c:	ldr	x8, [x20, #8]
    3c20:	ldrb	w8, [x8, #171]
    3c24:	tbnz	w8, #0, 3cf4 <PyInit__hashlib@@Base+0x1250>
    3c28:	adrp	x0, 5000 <PyInit__hashlib@@Base+0x255c>
    3c2c:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    3c30:	adrp	x2, 5000 <PyInit__hashlib@@Base+0x255c>
    3c34:	add	x0, x0, #0x3bd
    3c38:	add	x1, x1, #0x5e5
    3c3c:	add	x2, x2, #0x643
    3c40:	mov	x3, x20
    3c44:	bl	29b0 <_PyArg_BadArgument@plt>
    3c48:	b	3b80 <PyInit__hashlib@@Base+0x10dc>
    3c4c:	ldr	x3, [x21]
    3c50:	adrp	x0, 5000 <PyInit__hashlib@@Base+0x255c>
    3c54:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    3c58:	add	x0, x0, #0x3bd
    3c5c:	add	x1, x1, #0x4d7
    3c60:	adrp	x2, 5000 <PyInit__hashlib@@Base+0x255c>
    3c64:	add	x2, x2, #0x4eb
    3c68:	bl	29b0 <_PyArg_BadArgument@plt>
    3c6c:	b	3b80 <PyInit__hashlib@@Base+0x10dc>
    3c70:	adrp	x20, 15000 <PyInit__hashlib@@Base+0x1255c>
    3c74:	ldr	x20, [x20, #4056]
    3c78:	mov	x19, xzr
    3c7c:	mov	w21, #0x40                  	// #64
    3c80:	mov	x22, x20
    3c84:	mov	x23, x20
    3c88:	ldr	x8, [sp, #112]
    3c8c:	mov	w9, #0x80000000            	// #-2147483648
    3c90:	cmp	x8, x9
    3c94:	b.lt	3cb4 <PyInit__hashlib@@Base+0x1210>  // b.tstop
    3c98:	adrp	x8, 15000 <PyInit__hashlib@@Base+0x1255c>
    3c9c:	ldr	x8, [x8, #4064]
    3ca0:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    3ca4:	add	x1, x1, #0x532
    3ca8:	ldr	x0, [x8]
    3cac:	bl	2920 <PyErr_SetString@plt>
    3cb0:	b	3b80 <PyInit__hashlib@@Base+0x10dc>
    3cb4:	ldr	x8, [sp, #16]
    3cb8:	cbz	x8, 3d34 <PyInit__hashlib@@Base+0x1290>
    3cbc:	ldr	x8, [sp, #32]
    3cc0:	mov	w9, #0x80000000            	// #-2147483648
    3cc4:	cmp	x8, x9
    3cc8:	b.lt	3d50 <PyInit__hashlib@@Base+0x12ac>  // b.tstop
    3ccc:	adrp	x8, 15000 <PyInit__hashlib@@Base+0x1255c>
    3cd0:	ldr	x8, [x8, #4064]
    3cd4:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    3cd8:	add	x1, x1, #0x548
    3cdc:	ldr	x0, [x8]
    3ce0:	bl	2920 <PyErr_SetString@plt>
    3ce4:	b	3b80 <PyInit__hashlib@@Base+0x10dc>
    3ce8:	adrp	x20, 15000 <PyInit__hashlib@@Base+0x1255c>
    3cec:	ldr	x20, [x20, #4056]
    3cf0:	b	3cfc <PyInit__hashlib@@Base+0x1258>
    3cf4:	subs	x24, x24, #0x1
    3cf8:	b.eq	3e38 <PyInit__hashlib@@Base+0x1394>  // b.none
    3cfc:	ldr	x22, [x21, #24]
    3d00:	cbz	x22, 3dc8 <PyInit__hashlib@@Base+0x1324>
    3d04:	ldr	x8, [x22, #8]
    3d08:	ldrb	w8, [x8, #171]
    3d0c:	tbnz	w8, #0, 3dec <PyInit__hashlib@@Base+0x1348>
    3d10:	adrp	x0, 5000 <PyInit__hashlib@@Base+0x255c>
    3d14:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    3d18:	adrp	x2, 5000 <PyInit__hashlib@@Base+0x255c>
    3d1c:	add	x0, x0, #0x3bd
    3d20:	add	x1, x1, #0x5f2
    3d24:	add	x2, x2, #0x643
    3d28:	mov	x3, x22
    3d2c:	bl	29b0 <_PyArg_BadArgument@plt>
    3d30:	b	3b80 <PyInit__hashlib@@Base+0x10dc>
    3d34:	adrp	x8, 15000 <PyInit__hashlib@@Base+0x1255c>
    3d38:	ldr	x8, [x8, #4000]
    3d3c:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    3d40:	add	x1, x1, #0x60c
    3d44:	ldr	x0, [x8]
    3d48:	bl	2920 <PyErr_SetString@plt>
    3d4c:	b	3b80 <PyInit__hashlib@@Base+0x10dc>
    3d50:	mov	x0, x20
    3d54:	bl	29a0 <PyLong_AsUnsignedLong@plt>
    3d58:	mov	x20, x0
    3d5c:	cmn	x0, #0x1
    3d60:	b.eq	3ec4 <PyInit__hashlib@@Base+0x1420>  // b.none
    3d64:	cmp	x20, #0x2
    3d68:	b.cc	3ea8 <PyInit__hashlib@@Base+0x1404>  // b.lo, b.ul, b.last
    3d6c:	fmov	d0, x20
    3d70:	cnt	v0.8b, v0.8b
    3d74:	uaddlv	h0, v0.8b
    3d78:	fmov	w8, s0
    3d7c:	cmp	x8, #0x2
    3d80:	b.cs	3ea8 <PyInit__hashlib@@Base+0x1404>  // b.hs, b.nlast
    3d84:	mov	x0, x22
    3d88:	bl	29a0 <PyLong_AsUnsignedLong@plt>
    3d8c:	mov	x24, x0
    3d90:	cmn	x0, #0x1
    3d94:	b.eq	3f3c <PyInit__hashlib@@Base+0x1498>  // b.none
    3d98:	mov	x0, x23
    3d9c:	bl	29a0 <PyLong_AsUnsignedLong@plt>
    3da0:	mov	x23, x0
    3da4:	cmn	x0, #0x1
    3da8:	b.eq	3f90 <PyInit__hashlib@@Base+0x14ec>  // b.none
    3dac:	lsr	x8, x19, #31
    3db0:	cbz	x8, 3f60 <PyInit__hashlib@@Base+0x14bc>
    3db4:	adrp	x8, 15000 <PyInit__hashlib@@Base+0x1255c>
    3db8:	ldr	x8, [x8, #3984]
    3dbc:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    3dc0:	add	x1, x1, #0x6b3
    3dc4:	b	3f80 <PyInit__hashlib@@Base+0x14dc>
    3dc8:	adrp	x22, 15000 <PyInit__hashlib@@Base+0x1255c>
    3dcc:	ldr	x22, [x22, #4056]
    3dd0:	b	3df4 <PyInit__hashlib@@Base+0x1350>
    3dd4:	ldr	x3, [x21, #8]
    3dd8:	adrp	x0, 5000 <PyInit__hashlib@@Base+0x255c>
    3ddc:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    3de0:	add	x0, x0, #0x3bd
    3de4:	add	x1, x1, #0x4fd
    3de8:	b	3c60 <PyInit__hashlib@@Base+0x11bc>
    3dec:	subs	x24, x24, #0x1
    3df0:	b.eq	3f28 <PyInit__hashlib@@Base+0x1484>  // b.none
    3df4:	ldr	x23, [x21, #32]
    3df8:	cbz	x23, 3e2c <PyInit__hashlib@@Base+0x1388>
    3dfc:	ldr	x8, [x23, #8]
    3e00:	ldrb	w8, [x8, #171]
    3e04:	tbnz	w8, #0, 3e50 <PyInit__hashlib@@Base+0x13ac>
    3e08:	adrp	x0, 5000 <PyInit__hashlib@@Base+0x255c>
    3e0c:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    3e10:	adrp	x2, 5000 <PyInit__hashlib@@Base+0x255c>
    3e14:	add	x0, x0, #0x3bd
    3e18:	add	x1, x1, #0x5ff
    3e1c:	add	x2, x2, #0x643
    3e20:	mov	x3, x23
    3e24:	bl	29b0 <_PyArg_BadArgument@plt>
    3e28:	b	3b80 <PyInit__hashlib@@Base+0x10dc>
    3e2c:	adrp	x23, 15000 <PyInit__hashlib@@Base+0x1255c>
    3e30:	ldr	x23, [x23, #4056]
    3e34:	b	3e58 <PyInit__hashlib@@Base+0x13b4>
    3e38:	adrp	x22, 15000 <PyInit__hashlib@@Base+0x1255c>
    3e3c:	ldr	x22, [x22, #4056]
    3e40:	mov	x19, xzr
    3e44:	mov	w21, #0x40                  	// #64
    3e48:	mov	x23, x22
    3e4c:	b	3c88 <PyInit__hashlib@@Base+0x11e4>
    3e50:	subs	x24, x24, #0x1
    3e54:	b.eq	3f30 <PyInit__hashlib@@Base+0x148c>  // b.none
    3e58:	adrp	x25, 15000 <PyInit__hashlib@@Base+0x1255c>
    3e5c:	ldr	x8, [x21, #40]
    3e60:	ldr	x25, [x25, #4040]
    3e64:	cbz	x8, 3ee8 <PyInit__hashlib@@Base+0x1444>
    3e68:	ldr	x0, [x8, #8]
    3e6c:	cmp	x0, x25
    3e70:	b.eq	3f0c <PyInit__hashlib@@Base+0x1468>  // b.none
    3e74:	adrp	x1, 15000 <PyInit__hashlib@@Base+0x1255c>
    3e78:	ldr	x1, [x1, #4040]
    3e7c:	bl	2800 <PyType_IsSubtype@plt>
    3e80:	cbnz	w0, 3f0c <PyInit__hashlib@@Base+0x1468>
    3e84:	ldr	x0, [x21, #40]
    3e88:	bl	26d0 <PyLong_AsLong@plt>
    3e8c:	mov	x19, x0
    3e90:	cmn	x0, #0x1
    3e94:	b.eq	4080 <PyInit__hashlib@@Base+0x15dc>  // b.none
    3e98:	cmp	x24, #0x1
    3e9c:	b.ne	3eec <PyInit__hashlib@@Base+0x1448>  // b.any
    3ea0:	mov	w21, #0x40                  	// #64
    3ea4:	b	3c88 <PyInit__hashlib@@Base+0x11e4>
    3ea8:	adrp	x8, 15000 <PyInit__hashlib@@Base+0x1255c>
    3eac:	ldr	x8, [x8, #3984]
    3eb0:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    3eb4:	add	x1, x1, #0x647
    3eb8:	ldr	x0, [x8]
    3ebc:	bl	2920 <PyErr_SetString@plt>
    3ec0:	b	3b80 <PyInit__hashlib@@Base+0x10dc>
    3ec4:	bl	2720 <PyErr_Occurred@plt>
    3ec8:	cbz	x0, 3d64 <PyInit__hashlib@@Base+0x12c0>
    3ecc:	adrp	x8, 15000 <PyInit__hashlib@@Base+0x1255c>
    3ed0:	ldr	x8, [x8, #4000]
    3ed4:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    3ed8:	add	x1, x1, #0x61d
    3edc:	ldr	x0, [x8]
    3ee0:	bl	2920 <PyErr_SetString@plt>
    3ee4:	b	3b80 <PyInit__hashlib@@Base+0x10dc>
    3ee8:	mov	x19, xzr
    3eec:	ldr	x8, [x21, #48]
    3ef0:	ldr	x0, [x8, #8]
    3ef4:	cmp	x0, x25
    3ef8:	b.eq	3f0c <PyInit__hashlib@@Base+0x1468>  // b.none
    3efc:	adrp	x1, 15000 <PyInit__hashlib@@Base+0x1255c>
    3f00:	ldr	x1, [x1, #4040]
    3f04:	bl	2800 <PyType_IsSubtype@plt>
    3f08:	cbz	w0, 3fb4 <PyInit__hashlib@@Base+0x1510>
    3f0c:	adrp	x8, 15000 <PyInit__hashlib@@Base+0x1255c>
    3f10:	ldr	x8, [x8, #4000]
    3f14:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    3f18:	add	x1, x1, #0x50d
    3f1c:	ldr	x0, [x8]
    3f20:	bl	2920 <PyErr_SetString@plt>
    3f24:	b	3b80 <PyInit__hashlib@@Base+0x10dc>
    3f28:	adrp	x23, 15000 <PyInit__hashlib@@Base+0x1255c>
    3f2c:	ldr	x23, [x23, #4056]
    3f30:	mov	x19, xzr
    3f34:	mov	w21, #0x40                  	// #64
    3f38:	b	3c88 <PyInit__hashlib@@Base+0x11e4>
    3f3c:	bl	2720 <PyErr_Occurred@plt>
    3f40:	cbz	x0, 3d98 <PyInit__hashlib@@Base+0x12f4>
    3f44:	adrp	x8, 15000 <PyInit__hashlib@@Base+0x1255c>
    3f48:	ldr	x8, [x8, #4000]
    3f4c:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    3f50:	add	x1, x1, #0x65f
    3f54:	ldr	x0, [x8]
    3f58:	bl	2920 <PyErr_SetString@plt>
    3f5c:	b	3b80 <PyInit__hashlib@@Base+0x10dc>
    3f60:	sub	x8, x21, #0x1
    3f64:	mov	w9, #0x7fffffff            	// #2147483647
    3f68:	cmp	x8, x9
    3f6c:	b.cc	3fcc <PyInit__hashlib@@Base+0x1528>  // b.lo, b.ul, b.last
    3f70:	adrp	x8, 15000 <PyInit__hashlib@@Base+0x1255c>
    3f74:	ldr	x8, [x8, #3984]
    3f78:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    3f7c:	add	x1, x1, #0x6df
    3f80:	ldr	x0, [x8]
    3f84:	mov	w2, #0x7fffffff            	// #2147483647
    3f88:	bl	26f0 <PyErr_Format@plt>
    3f8c:	b	3b80 <PyInit__hashlib@@Base+0x10dc>
    3f90:	bl	2720 <PyErr_Occurred@plt>
    3f94:	cbz	x0, 3dac <PyInit__hashlib@@Base+0x1308>
    3f98:	adrp	x8, 15000 <PyInit__hashlib@@Base+0x1255c>
    3f9c:	ldr	x8, [x8, #4000]
    3fa0:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    3fa4:	add	x1, x1, #0x689
    3fa8:	ldr	x0, [x8]
    3fac:	bl	2920 <PyErr_SetString@plt>
    3fb0:	b	3b80 <PyInit__hashlib@@Base+0x10dc>
    3fb4:	ldr	x0, [x21, #48]
    3fb8:	bl	26d0 <PyLong_AsLong@plt>
    3fbc:	cmn	x0, #0x1
    3fc0:	b.eq	408c <PyInit__hashlib@@Base+0x15e8>  // b.none
    3fc4:	mov	x21, x0
    3fc8:	b	3c88 <PyInit__hashlib@@Base+0x11e4>
    3fcc:	mov	x0, xzr
    3fd0:	mov	x1, xzr
    3fd4:	mov	x2, xzr
    3fd8:	mov	x3, xzr
    3fdc:	mov	x4, x20
    3fe0:	mov	x5, x24
    3fe4:	mov	x6, x23
    3fe8:	mov	x7, x19
    3fec:	stp	xzr, xzr, [sp]
    3ff0:	bl	2830 <EVP_PBE_scrypt@plt>
    3ff4:	cbz	w0, 409c <PyInit__hashlib@@Base+0x15f8>
    3ff8:	mov	x0, xzr
    3ffc:	mov	x1, x21
    4000:	bl	2870 <PyBytes_FromStringAndSize@plt>
    4004:	mov	x22, x0
    4008:	cbz	x0, 3b84 <PyInit__hashlib@@Base+0x10e0>
    400c:	add	x26, x22, #0x20
    4010:	bl	27b0 <PyEval_SaveThread@plt>
    4014:	ldr	x8, [sp, #96]
    4018:	ldr	x1, [sp, #112]
    401c:	ldr	x2, [sp, #16]
    4020:	ldr	x3, [sp, #32]
    4024:	mov	x25, x0
    4028:	mov	x0, x8
    402c:	mov	x4, x20
    4030:	mov	x5, x24
    4034:	mov	x6, x23
    4038:	mov	x7, x19
    403c:	stp	x26, x21, [sp]
    4040:	bl	2830 <EVP_PBE_scrypt@plt>
    4044:	mov	w19, w0
    4048:	mov	x0, x25
    404c:	bl	2770 <PyEval_RestoreThread@plt>
    4050:	cbnz	w19, 3b84 <PyInit__hashlib@@Base+0x10e0>
    4054:	ldr	x8, [x22]
    4058:	subs	x8, x8, #0x1
    405c:	str	x8, [x22]
    4060:	b.ne	406c <PyInit__hashlib@@Base+0x15c8>  // b.any
    4064:	mov	x0, x22
    4068:	bl	28e0 <_Py_Dealloc@plt>
    406c:	adrp	x8, 15000 <PyInit__hashlib@@Base+0x1255c>
    4070:	ldr	x8, [x8, #3984]
    4074:	ldr	x0, [x8]
    4078:	bl	32f0 <PyInit__hashlib@@Base+0x84c>
    407c:	b	3b80 <PyInit__hashlib@@Base+0x10dc>
    4080:	bl	2720 <PyErr_Occurred@plt>
    4084:	cbnz	x0, 3b80 <PyInit__hashlib@@Base+0x10dc>
    4088:	b	3e98 <PyInit__hashlib@@Base+0x13f4>
    408c:	bl	2720 <PyErr_Occurred@plt>
    4090:	cbnz	x0, 3b80 <PyInit__hashlib@@Base+0x10dc>
    4094:	mov	x21, #0xffffffffffffffff    	// #-1
    4098:	b	3c88 <PyInit__hashlib@@Base+0x11e4>
    409c:	adrp	x8, 15000 <PyInit__hashlib@@Base+0x1255c>
    40a0:	ldr	x8, [x8, #3984]
    40a4:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    40a8:	add	x1, x1, #0x710
    40ac:	ldr	x0, [x8]
    40b0:	bl	2920 <PyErr_SetString@plt>
    40b4:	b	3b80 <PyInit__hashlib@@Base+0x10dc>
    40b8:	sub	sp, sp, #0x140
    40bc:	stp	x29, x30, [sp, #272]
    40c0:	str	x28, [sp, #288]
    40c4:	stp	x20, x19, [sp, #304]
    40c8:	add	x29, sp, #0x110
    40cc:	mov	x19, x1
    40d0:	add	x20, sp, #0x60
    40d4:	movi	v0.2d, #0x0
    40d8:	stp	q0, q0, [x20, #48]
    40dc:	stp	q0, q0, [sp, #112]
    40e0:	stp	q0, q0, [sp, #80]
    40e4:	stp	q0, q0, [sp, #48]
    40e8:	stp	q0, q0, [sp, #16]
    40ec:	cbz	x1, 40fc <PyInit__hashlib@@Base+0x1658>
    40f0:	cmp	x2, #0x3
    40f4:	b.ne	40fc <PyInit__hashlib@@Base+0x1658>  // b.any
    40f8:	cbz	x3, 4130 <PyInit__hashlib@@Base+0x168c>
    40fc:	adrp	x4, 16000 <PyInit__hashlib@@Base+0x1355c>
    4100:	sub	x8, x29, #0x60
    4104:	add	x4, x4, #0x5c0
    4108:	mov	w5, #0x3                   	// #3
    410c:	mov	w6, #0x3                   	// #3
    4110:	mov	x0, x19
    4114:	mov	x1, x2
    4118:	mov	x2, xzr
    411c:	mov	w7, wzr
    4120:	str	x8, [sp]
    4124:	bl	28c0 <_PyArg_UnpackKeywords@plt>
    4128:	mov	x19, x0
    412c:	cbz	x0, 41c8 <PyInit__hashlib@@Base+0x1724>
    4130:	ldr	x0, [x19]
    4134:	add	x1, sp, #0x60
    4138:	mov	w2, wzr
    413c:	bl	2750 <PyObject_GetBuffer@plt>
    4140:	cbnz	w0, 41c4 <PyInit__hashlib@@Base+0x1720>
    4144:	add	x0, sp, #0x60
    4148:	mov	w1, #0x43                  	// #67
    414c:	bl	27f0 <PyBuffer_IsContiguous@plt>
    4150:	cbz	w0, 41a4 <PyInit__hashlib@@Base+0x1700>
    4154:	ldr	x0, [x19, #8]
    4158:	add	x1, sp, #0x10
    415c:	mov	w2, wzr
    4160:	bl	2750 <PyObject_GetBuffer@plt>
    4164:	cbnz	w0, 41c4 <PyInit__hashlib@@Base+0x1720>
    4168:	add	x0, sp, #0x10
    416c:	mov	w1, #0x43                  	// #67
    4170:	bl	27f0 <PyBuffer_IsContiguous@plt>
    4174:	cbz	w0, 4200 <PyInit__hashlib@@Base+0x175c>
    4178:	ldr	x3, [x19, #16]
    417c:	ldr	x8, [x3, #8]
    4180:	ldrb	w8, [x8, #171]
    4184:	tbnz	w8, #4, 4218 <PyInit__hashlib@@Base+0x1774>
    4188:	adrp	x0, 5000 <PyInit__hashlib@@Base+0x255c>
    418c:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    4190:	adrp	x2, 5000 <PyInit__hashlib@@Base+0x255c>
    4194:	add	x0, x0, #0x3c4
    4198:	add	x1, x1, #0x769
    419c:	add	x2, x2, #0x4bb
    41a0:	b	41c0 <PyInit__hashlib@@Base+0x171c>
    41a4:	ldr	x3, [x19]
    41a8:	adrp	x0, 5000 <PyInit__hashlib@@Base+0x255c>
    41ac:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    41b0:	add	x0, x0, #0x3c4
    41b4:	add	x1, x1, #0x74b
    41b8:	adrp	x2, 5000 <PyInit__hashlib@@Base+0x255c>
    41bc:	add	x2, x2, #0x4eb
    41c0:	bl	29b0 <_PyArg_BadArgument@plt>
    41c4:	mov	x19, xzr
    41c8:	ldr	x8, [sp, #104]
    41cc:	cbz	x8, 41d8 <PyInit__hashlib@@Base+0x1734>
    41d0:	add	x0, sp, #0x60
    41d4:	bl	2970 <PyBuffer_Release@plt>
    41d8:	ldr	x8, [sp, #24]
    41dc:	cbz	x8, 41e8 <PyInit__hashlib@@Base+0x1744>
    41e0:	add	x0, sp, #0x10
    41e4:	bl	2970 <PyBuffer_Release@plt>
    41e8:	mov	x0, x19
    41ec:	ldp	x20, x19, [sp, #304]
    41f0:	ldr	x28, [sp, #288]
    41f4:	ldp	x29, x30, [sp, #272]
    41f8:	add	sp, sp, #0x140
    41fc:	ret
    4200:	ldr	x3, [x19, #8]
    4204:	adrp	x0, 5000 <PyInit__hashlib@@Base+0x255c>
    4208:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    420c:	add	x0, x0, #0x3c4
    4210:	add	x1, x1, #0x75a
    4214:	b	41b8 <PyInit__hashlib@@Base+0x1714>
    4218:	add	x1, sp, #0x8
    421c:	mov	x0, x3
    4220:	bl	2670 <PyUnicode_AsUTF8AndSize@plt>
    4224:	mov	x19, x0
    4228:	cbz	x0, 41c8 <PyInit__hashlib@@Base+0x1724>
    422c:	mov	x0, x19
    4230:	bl	2980 <strlen@plt>
    4234:	ldr	x8, [sp, #8]
    4238:	cmp	x0, x8
    423c:	b.ne	4284 <PyInit__hashlib@@Base+0x17e0>  // b.any
    4240:	movi	v0.2d, #0x0
    4244:	mov	x0, x19
    4248:	stp	q0, q0, [x20, #144]
    424c:	stp	q0, q0, [x20, #112]
    4250:	stur	wzr, [x29, #-68]
    4254:	bl	2640 <EVP_get_digestbyname@plt>
    4258:	mov	x19, x0
    425c:	cbz	x0, 42a0 <PyInit__hashlib@@Base+0x17fc>
    4260:	ldr	x8, [sp, #112]
    4264:	mov	w9, #0x80000000            	// #-2147483648
    4268:	cmp	x8, x9
    426c:	b.lt	42bc <PyInit__hashlib@@Base+0x1818>  // b.tstop
    4270:	adrp	x8, 15000 <PyInit__hashlib@@Base+0x1255c>
    4274:	ldr	x8, [x8, #4064]
    4278:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    427c:	add	x1, x1, #0x77b
    4280:	b	4294 <PyInit__hashlib@@Base+0x17f0>
    4284:	adrp	x8, 15000 <PyInit__hashlib@@Base+0x1255c>
    4288:	ldr	x8, [x8, #3984]
    428c:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    4290:	add	x1, x1, #0x4bf
    4294:	ldr	x0, [x8]
    4298:	bl	2920 <PyErr_SetString@plt>
    429c:	b	41c4 <PyInit__hashlib@@Base+0x1720>
    42a0:	adrp	x8, 15000 <PyInit__hashlib@@Base+0x1255c>
    42a4:	ldr	x8, [x8, #3984]
    42a8:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    42ac:	add	x1, x1, #0x467
    42b0:	ldr	x0, [x8]
    42b4:	bl	2920 <PyErr_SetString@plt>
    42b8:	b	41c8 <PyInit__hashlib@@Base+0x1724>
    42bc:	ldr	x8, [sp, #32]
    42c0:	mov	w9, #0x80000000            	// #-2147483648
    42c4:	cmp	x8, x9
    42c8:	b.lt	42e0 <PyInit__hashlib@@Base+0x183c>  // b.tstop
    42cc:	adrp	x8, 15000 <PyInit__hashlib@@Base+0x1255c>
    42d0:	ldr	x8, [x8, #4064]
    42d4:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    42d8:	add	x1, x1, #0x78c
    42dc:	b	4294 <PyInit__hashlib@@Base+0x17f0>
    42e0:	bl	27b0 <PyEval_SaveThread@plt>
    42e4:	ldr	x1, [sp, #96]
    42e8:	ldr	w2, [sp, #112]
    42ec:	ldr	x3, [sp, #16]
    42f0:	ldrsw	x4, [sp, #32]
    42f4:	mov	x20, x0
    42f8:	sub	x5, x29, #0x40
    42fc:	sub	x6, x29, #0x44
    4300:	mov	x0, x19
    4304:	bl	2860 <HMAC@plt>
    4308:	mov	x19, x0
    430c:	mov	x0, x20
    4310:	bl	2770 <PyEval_RestoreThread@plt>
    4314:	cbz	x19, 432c <PyInit__hashlib@@Base+0x1888>
    4318:	ldur	w1, [x29, #-68]
    431c:	sub	x0, x29, #0x40
    4320:	bl	2870 <PyBytes_FromStringAndSize@plt>
    4324:	mov	x19, x0
    4328:	b	41c8 <PyInit__hashlib@@Base+0x1724>
    432c:	adrp	x8, 15000 <PyInit__hashlib@@Base+0x1255c>
    4330:	ldr	x8, [x8, #3984]
    4334:	ldr	x0, [x8]
    4338:	bl	32f0 <PyInit__hashlib@@Base+0x84c>
    433c:	b	41c8 <PyInit__hashlib@@Base+0x1724>
    4340:	sub	sp, sp, #0x30
    4344:	stp	x29, x30, [sp, #16]
    4348:	stp	x20, x19, [sp, #32]
    434c:	add	x29, sp, #0x10
    4350:	mov	x19, x2
    4354:	mov	x0, x1
    4358:	cbz	x3, 439c <PyInit__hashlib@@Base+0x18f8>
    435c:	ldr	x20, [x3, #16]
    4360:	adrp	x4, 16000 <PyInit__hashlib@@Base+0x1355c>
    4364:	add	x8, sp, #0x8
    4368:	add	x4, x4, #0x600
    436c:	mov	w6, #0x1                   	// #1
    4370:	mov	x1, x19
    4374:	mov	x2, xzr
    4378:	mov	w5, wzr
    437c:	mov	w7, wzr
    4380:	str	x8, [sp]
    4384:	bl	28c0 <_PyArg_UnpackKeywords@plt>
    4388:	cbnz	x0, 43ac <PyInit__hashlib@@Base+0x1908>
    438c:	ldp	x20, x19, [sp, #32]
    4390:	ldp	x29, x30, [sp, #16]
    4394:	add	sp, sp, #0x30
    4398:	ret
    439c:	mov	x20, xzr
    43a0:	cbz	x0, 4360 <PyInit__hashlib@@Base+0x18bc>
    43a4:	cmp	x19, #0x2
    43a8:	b.cs	4360 <PyInit__hashlib@@Base+0x18bc>  // b.hs, b.nlast
    43ac:	cmn	x20, x19
    43b0:	b.ne	43bc <PyInit__hashlib@@Base+0x1918>  // b.any
    43b4:	mov	x19, xzr
    43b8:	b	43c0 <PyInit__hashlib@@Base+0x191c>
    43bc:	ldr	x19, [x0]
    43c0:	bl	2690 <EVP_md5@plt>
    43c4:	mov	x1, x0
    43c8:	mov	x0, x19
    43cc:	bl	4894 <PyInit__hashlib@@Base+0x1df0>
    43d0:	ldp	x20, x19, [sp, #32]
    43d4:	ldp	x29, x30, [sp, #16]
    43d8:	add	sp, sp, #0x30
    43dc:	ret
    43e0:	sub	sp, sp, #0x30
    43e4:	stp	x29, x30, [sp, #16]
    43e8:	stp	x20, x19, [sp, #32]
    43ec:	add	x29, sp, #0x10
    43f0:	mov	x19, x2
    43f4:	mov	x0, x1
    43f8:	cbz	x3, 443c <PyInit__hashlib@@Base+0x1998>
    43fc:	ldr	x20, [x3, #16]
    4400:	adrp	x4, 16000 <PyInit__hashlib@@Base+0x1355c>
    4404:	add	x8, sp, #0x8
    4408:	add	x4, x4, #0x640
    440c:	mov	w6, #0x1                   	// #1
    4410:	mov	x1, x19
    4414:	mov	x2, xzr
    4418:	mov	w5, wzr
    441c:	mov	w7, wzr
    4420:	str	x8, [sp]
    4424:	bl	28c0 <_PyArg_UnpackKeywords@plt>
    4428:	cbnz	x0, 444c <PyInit__hashlib@@Base+0x19a8>
    442c:	ldp	x20, x19, [sp, #32]
    4430:	ldp	x29, x30, [sp, #16]
    4434:	add	sp, sp, #0x30
    4438:	ret
    443c:	mov	x20, xzr
    4440:	cbz	x0, 4400 <PyInit__hashlib@@Base+0x195c>
    4444:	cmp	x19, #0x2
    4448:	b.cs	4400 <PyInit__hashlib@@Base+0x195c>  // b.hs, b.nlast
    444c:	cmn	x20, x19
    4450:	b.ne	445c <PyInit__hashlib@@Base+0x19b8>  // b.any
    4454:	mov	x19, xzr
    4458:	b	4460 <PyInit__hashlib@@Base+0x19bc>
    445c:	ldr	x19, [x0]
    4460:	bl	2820 <EVP_sha1@plt>
    4464:	mov	x1, x0
    4468:	mov	x0, x19
    446c:	bl	4894 <PyInit__hashlib@@Base+0x1df0>
    4470:	ldp	x20, x19, [sp, #32]
    4474:	ldp	x29, x30, [sp, #16]
    4478:	add	sp, sp, #0x30
    447c:	ret
    4480:	sub	sp, sp, #0x30
    4484:	stp	x29, x30, [sp, #16]
    4488:	stp	x20, x19, [sp, #32]
    448c:	add	x29, sp, #0x10
    4490:	mov	x19, x2
    4494:	mov	x0, x1
    4498:	cbz	x3, 44dc <PyInit__hashlib@@Base+0x1a38>
    449c:	ldr	x20, [x3, #16]
    44a0:	adrp	x4, 16000 <PyInit__hashlib@@Base+0x1355c>
    44a4:	add	x8, sp, #0x8
    44a8:	add	x4, x4, #0x680
    44ac:	mov	w6, #0x1                   	// #1
    44b0:	mov	x1, x19
    44b4:	mov	x2, xzr
    44b8:	mov	w5, wzr
    44bc:	mov	w7, wzr
    44c0:	str	x8, [sp]
    44c4:	bl	28c0 <_PyArg_UnpackKeywords@plt>
    44c8:	cbnz	x0, 44ec <PyInit__hashlib@@Base+0x1a48>
    44cc:	ldp	x20, x19, [sp, #32]
    44d0:	ldp	x29, x30, [sp, #16]
    44d4:	add	sp, sp, #0x30
    44d8:	ret
    44dc:	mov	x20, xzr
    44e0:	cbz	x0, 44a0 <PyInit__hashlib@@Base+0x19fc>
    44e4:	cmp	x19, #0x2
    44e8:	b.cs	44a0 <PyInit__hashlib@@Base+0x19fc>  // b.hs, b.nlast
    44ec:	cmn	x20, x19
    44f0:	b.ne	44fc <PyInit__hashlib@@Base+0x1a58>  // b.any
    44f4:	mov	x19, xzr
    44f8:	b	4500 <PyInit__hashlib@@Base+0x1a5c>
    44fc:	ldr	x19, [x0]
    4500:	bl	27c0 <EVP_sha224@plt>
    4504:	mov	x1, x0
    4508:	mov	x0, x19
    450c:	bl	4894 <PyInit__hashlib@@Base+0x1df0>
    4510:	ldp	x20, x19, [sp, #32]
    4514:	ldp	x29, x30, [sp, #16]
    4518:	add	sp, sp, #0x30
    451c:	ret
    4520:	sub	sp, sp, #0x30
    4524:	stp	x29, x30, [sp, #16]
    4528:	stp	x20, x19, [sp, #32]
    452c:	add	x29, sp, #0x10
    4530:	mov	x19, x2
    4534:	mov	x0, x1
    4538:	cbz	x3, 457c <PyInit__hashlib@@Base+0x1ad8>
    453c:	ldr	x20, [x3, #16]
    4540:	adrp	x4, 16000 <PyInit__hashlib@@Base+0x1355c>
    4544:	add	x8, sp, #0x8
    4548:	add	x4, x4, #0x6c0
    454c:	mov	w6, #0x1                   	// #1
    4550:	mov	x1, x19
    4554:	mov	x2, xzr
    4558:	mov	w5, wzr
    455c:	mov	w7, wzr
    4560:	str	x8, [sp]
    4564:	bl	28c0 <_PyArg_UnpackKeywords@plt>
    4568:	cbnz	x0, 458c <PyInit__hashlib@@Base+0x1ae8>
    456c:	ldp	x20, x19, [sp, #32]
    4570:	ldp	x29, x30, [sp, #16]
    4574:	add	sp, sp, #0x30
    4578:	ret
    457c:	mov	x20, xzr
    4580:	cbz	x0, 4540 <PyInit__hashlib@@Base+0x1a9c>
    4584:	cmp	x19, #0x2
    4588:	b.cs	4540 <PyInit__hashlib@@Base+0x1a9c>  // b.hs, b.nlast
    458c:	cmn	x20, x19
    4590:	b.ne	459c <PyInit__hashlib@@Base+0x1af8>  // b.any
    4594:	mov	x19, xzr
    4598:	b	45a0 <PyInit__hashlib@@Base+0x1afc>
    459c:	ldr	x19, [x0]
    45a0:	bl	2950 <EVP_sha256@plt>
    45a4:	mov	x1, x0
    45a8:	mov	x0, x19
    45ac:	bl	4894 <PyInit__hashlib@@Base+0x1df0>
    45b0:	ldp	x20, x19, [sp, #32]
    45b4:	ldp	x29, x30, [sp, #16]
    45b8:	add	sp, sp, #0x30
    45bc:	ret
    45c0:	sub	sp, sp, #0x30
    45c4:	stp	x29, x30, [sp, #16]
    45c8:	stp	x20, x19, [sp, #32]
    45cc:	add	x29, sp, #0x10
    45d0:	mov	x19, x2
    45d4:	mov	x0, x1
    45d8:	cbz	x3, 461c <PyInit__hashlib@@Base+0x1b78>
    45dc:	ldr	x20, [x3, #16]
    45e0:	adrp	x4, 16000 <PyInit__hashlib@@Base+0x1355c>
    45e4:	add	x8, sp, #0x8
    45e8:	add	x4, x4, #0x700
    45ec:	mov	w6, #0x1                   	// #1
    45f0:	mov	x1, x19
    45f4:	mov	x2, xzr
    45f8:	mov	w5, wzr
    45fc:	mov	w7, wzr
    4600:	str	x8, [sp]
    4604:	bl	28c0 <_PyArg_UnpackKeywords@plt>
    4608:	cbnz	x0, 462c <PyInit__hashlib@@Base+0x1b88>
    460c:	ldp	x20, x19, [sp, #32]
    4610:	ldp	x29, x30, [sp, #16]
    4614:	add	sp, sp, #0x30
    4618:	ret
    461c:	mov	x20, xzr
    4620:	cbz	x0, 45e0 <PyInit__hashlib@@Base+0x1b3c>
    4624:	cmp	x19, #0x2
    4628:	b.cs	45e0 <PyInit__hashlib@@Base+0x1b3c>  // b.hs, b.nlast
    462c:	cmn	x20, x19
    4630:	b.ne	463c <PyInit__hashlib@@Base+0x1b98>  // b.any
    4634:	mov	x19, xzr
    4638:	b	4640 <PyInit__hashlib@@Base+0x1b9c>
    463c:	ldr	x19, [x0]
    4640:	bl	25c0 <EVP_sha384@plt>
    4644:	mov	x1, x0
    4648:	mov	x0, x19
    464c:	bl	4894 <PyInit__hashlib@@Base+0x1df0>
    4650:	ldp	x20, x19, [sp, #32]
    4654:	ldp	x29, x30, [sp, #16]
    4658:	add	sp, sp, #0x30
    465c:	ret
    4660:	sub	sp, sp, #0x30
    4664:	stp	x29, x30, [sp, #16]
    4668:	stp	x20, x19, [sp, #32]
    466c:	add	x29, sp, #0x10
    4670:	mov	x19, x2
    4674:	mov	x0, x1
    4678:	cbz	x3, 46bc <PyInit__hashlib@@Base+0x1c18>
    467c:	ldr	x20, [x3, #16]
    4680:	adrp	x4, 16000 <PyInit__hashlib@@Base+0x1355c>
    4684:	add	x8, sp, #0x8
    4688:	add	x4, x4, #0x740
    468c:	mov	w6, #0x1                   	// #1
    4690:	mov	x1, x19
    4694:	mov	x2, xzr
    4698:	mov	w5, wzr
    469c:	mov	w7, wzr
    46a0:	str	x8, [sp]
    46a4:	bl	28c0 <_PyArg_UnpackKeywords@plt>
    46a8:	cbnz	x0, 46cc <PyInit__hashlib@@Base+0x1c28>
    46ac:	ldp	x20, x19, [sp, #32]
    46b0:	ldp	x29, x30, [sp, #16]
    46b4:	add	sp, sp, #0x30
    46b8:	ret
    46bc:	mov	x20, xzr
    46c0:	cbz	x0, 4680 <PyInit__hashlib@@Base+0x1bdc>
    46c4:	cmp	x19, #0x2
    46c8:	b.cs	4680 <PyInit__hashlib@@Base+0x1bdc>  // b.hs, b.nlast
    46cc:	cmn	x20, x19
    46d0:	b.ne	46dc <PyInit__hashlib@@Base+0x1c38>  // b.any
    46d4:	mov	x19, xzr
    46d8:	b	46e0 <PyInit__hashlib@@Base+0x1c3c>
    46dc:	ldr	x19, [x0]
    46e0:	bl	2940 <EVP_sha512@plt>
    46e4:	mov	x1, x0
    46e8:	mov	x0, x19
    46ec:	bl	4894 <PyInit__hashlib@@Base+0x1df0>
    46f0:	ldp	x20, x19, [sp, #32]
    46f4:	ldp	x29, x30, [sp, #16]
    46f8:	add	sp, sp, #0x30
    46fc:	ret
    4700:	stp	x29, x30, [sp, #-64]!
    4704:	stp	x24, x23, [sp, #16]
    4708:	stp	x22, x21, [sp, #32]
    470c:	stp	x20, x19, [sp, #48]
    4710:	mov	x29, sp
    4714:	cbz	x0, 47ac <PyInit__hashlib@@Base+0x1d08>
    4718:	mov	x22, x0
    471c:	adrp	x0, 16000 <PyInit__hashlib@@Base+0x1355c>
    4720:	add	x0, x0, #0x7e8
    4724:	mov	x20, x2
    4728:	mov	x21, x1
    472c:	bl	2660 <_PyObject_New@plt>
    4730:	mov	x19, x0
    4734:	cbz	x0, 4850 <PyInit__hashlib@@Base+0x1dac>
    4738:	str	xzr, [x19, #24]
    473c:	bl	27e0 <EVP_MD_CTX_new@plt>
    4740:	str	x0, [x19, #16]
    4744:	cbz	x0, 47c8 <PyInit__hashlib@@Base+0x1d24>
    4748:	mov	x1, x22
    474c:	mov	x2, xzr
    4750:	bl	2550 <EVP_DigestInit_ex@plt>
    4754:	cbz	w0, 4824 <PyInit__hashlib@@Base+0x1d80>
    4758:	cbz	x21, 4850 <PyInit__hashlib@@Base+0x1dac>
    475c:	cbz	x20, 4850 <PyInit__hashlib@@Base+0x1dac>
    4760:	cmp	x20, #0x800
    4764:	b.lt	47e8 <PyInit__hashlib@@Base+0x1d44>  // b.tstop
    4768:	bl	27b0 <PyEval_SaveThread@plt>
    476c:	mov	x22, x0
    4770:	mov	w24, #0x7fffffff            	// #2147483647
    4774:	ldr	x0, [x19, #16]
    4778:	cmp	x20, x24
    477c:	csel	x23, x20, x24, lt  // lt = tstop
    4780:	mov	x1, x21
    4784:	mov	x2, x23
    4788:	bl	2700 <EVP_DigestUpdate@plt>
    478c:	cbz	w0, 4868 <PyInit__hashlib@@Base+0x1dc4>
    4790:	sub	x20, x20, x23
    4794:	cmp	x20, #0x0
    4798:	add	x21, x21, x23
    479c:	b.gt	4774 <PyInit__hashlib@@Base+0x1cd0>
    47a0:	mov	x0, x22
    47a4:	bl	2770 <PyEval_RestoreThread@plt>
    47a8:	b	4850 <PyInit__hashlib@@Base+0x1dac>
    47ac:	adrp	x8, 15000 <PyInit__hashlib@@Base+0x1255c>
    47b0:	ldr	x8, [x8, #3984]
    47b4:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    47b8:	add	x1, x1, #0x467
    47bc:	ldr	x0, [x8]
    47c0:	bl	2920 <PyErr_SetString@plt>
    47c4:	b	484c <PyInit__hashlib@@Base+0x1da8>
    47c8:	ldr	x8, [x19]
    47cc:	subs	x8, x8, #0x1
    47d0:	str	x8, [x19]
    47d4:	b.ne	47e0 <PyInit__hashlib@@Base+0x1d3c>  // b.any
    47d8:	mov	x0, x19
    47dc:	bl	28e0 <_Py_Dealloc@plt>
    47e0:	bl	2630 <PyErr_NoMemory@plt>
    47e4:	b	484c <PyInit__hashlib@@Base+0x1da8>
    47e8:	cmp	x20, #0x1
    47ec:	b.lt	4850 <PyInit__hashlib@@Base+0x1dac>  // b.tstop
    47f0:	mov	w23, #0x7fffffff            	// #2147483647
    47f4:	ldr	x0, [x19, #16]
    47f8:	cmp	x20, x23
    47fc:	csel	x22, x20, x23, lt  // lt = tstop
    4800:	mov	x1, x21
    4804:	mov	x2, x22
    4808:	bl	2700 <EVP_DigestUpdate@plt>
    480c:	cbz	w0, 4824 <PyInit__hashlib@@Base+0x1d80>
    4810:	sub	x20, x20, x22
    4814:	cmp	x20, #0x0
    4818:	add	x21, x21, x22
    481c:	b.gt	47f4 <PyInit__hashlib@@Base+0x1d50>
    4820:	b	4850 <PyInit__hashlib@@Base+0x1dac>
    4824:	adrp	x8, 15000 <PyInit__hashlib@@Base+0x1255c>
    4828:	ldr	x8, [x8, #3984]
    482c:	ldr	x0, [x8]
    4830:	bl	32f0 <PyInit__hashlib@@Base+0x84c>
    4834:	ldr	x8, [x19]
    4838:	subs	x8, x8, #0x1
    483c:	str	x8, [x19]
    4840:	b.ne	484c <PyInit__hashlib@@Base+0x1da8>  // b.any
    4844:	mov	x0, x19
    4848:	bl	28e0 <_Py_Dealloc@plt>
    484c:	mov	x19, xzr
    4850:	mov	x0, x19
    4854:	ldp	x20, x19, [sp, #48]
    4858:	ldp	x22, x21, [sp, #32]
    485c:	ldp	x24, x23, [sp, #16]
    4860:	ldp	x29, x30, [sp], #64
    4864:	ret
    4868:	adrp	x8, 15000 <PyInit__hashlib@@Base+0x1255c>
    486c:	ldr	x8, [x8, #3984]
    4870:	ldr	x0, [x8]
    4874:	bl	32f0 <PyInit__hashlib@@Base+0x84c>
    4878:	mov	x0, x22
    487c:	bl	2770 <PyEval_RestoreThread@plt>
    4880:	ldr	x8, [x19]
    4884:	subs	x8, x8, #0x1
    4888:	str	x8, [x19]
    488c:	b.ne	484c <PyInit__hashlib@@Base+0x1da8>  // b.any
    4890:	b	4844 <PyInit__hashlib@@Base+0x1da0>
    4894:	sub	sp, sp, #0x70
    4898:	stp	x29, x30, [sp, #80]
    489c:	str	x19, [sp, #96]
    48a0:	add	x29, sp, #0x50
    48a4:	mov	x19, x1
    48a8:	movi	v0.2d, #0x0
    48ac:	stp	q0, q0, [sp, #48]
    48b0:	stp	q0, q0, [sp, #16]
    48b4:	str	q0, [sp]
    48b8:	cbz	x0, 491c <PyInit__hashlib@@Base+0x1e78>
    48bc:	ldr	x8, [x0, #8]
    48c0:	ldrb	w9, [x8, #171]
    48c4:	tbnz	w9, #4, 4934 <PyInit__hashlib@@Base+0x1e90>
    48c8:	ldr	x8, [x8, #160]
    48cc:	cbz	x8, 4948 <PyInit__hashlib@@Base+0x1ea4>
    48d0:	ldr	x8, [x8]
    48d4:	cbz	x8, 4948 <PyInit__hashlib@@Base+0x1ea4>
    48d8:	mov	x1, sp
    48dc:	mov	w2, wzr
    48e0:	bl	2750 <PyObject_GetBuffer@plt>
    48e4:	cmn	w0, #0x1
    48e8:	b.eq	4960 <PyInit__hashlib@@Base+0x1ebc>  // b.none
    48ec:	ldr	w8, [sp, #36]
    48f0:	cmp	w8, #0x2
    48f4:	b.lt	4978 <PyInit__hashlib@@Base+0x1ed4>  // b.tstop
    48f8:	adrp	x8, 15000 <PyInit__hashlib@@Base+0x1255c>
    48fc:	ldr	x8, [x8, #4024]
    4900:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    4904:	add	x1, x1, #0x339
    4908:	ldr	x0, [x8]
    490c:	bl	2920 <PyErr_SetString@plt>
    4910:	mov	x0, sp
    4914:	bl	2970 <PyBuffer_Release@plt>
    4918:	b	4960 <PyInit__hashlib@@Base+0x1ebc>
    491c:	mov	x0, x19
    4920:	mov	x1, xzr
    4924:	mov	x2, xzr
    4928:	bl	4700 <PyInit__hashlib@@Base+0x1c5c>
    492c:	mov	x19, x0
    4930:	b	4964 <PyInit__hashlib@@Base+0x1ec0>
    4934:	adrp	x8, 15000 <PyInit__hashlib@@Base+0x1255c>
    4938:	ldr	x8, [x8, #4000]
    493c:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    4940:	add	x1, x1, #0x2e0
    4944:	b	4958 <PyInit__hashlib@@Base+0x1eb4>
    4948:	adrp	x8, 15000 <PyInit__hashlib@@Base+0x1255c>
    494c:	ldr	x8, [x8, #4000]
    4950:	adrp	x1, 5000 <PyInit__hashlib@@Base+0x255c>
    4954:	add	x1, x1, #0x30f
    4958:	ldr	x0, [x8]
    495c:	bl	2920 <PyErr_SetString@plt>
    4960:	mov	x19, xzr
    4964:	mov	x0, x19
    4968:	ldr	x19, [sp, #96]
    496c:	ldp	x29, x30, [sp, #80]
    4970:	add	sp, sp, #0x70
    4974:	ret
    4978:	ldr	x1, [sp]
    497c:	ldr	x2, [sp, #16]
    4980:	mov	x0, x19
    4984:	bl	4700 <PyInit__hashlib@@Base+0x1c5c>
    4988:	mov	x19, x0
    498c:	mov	x0, sp
    4990:	bl	2970 <PyBuffer_Release@plt>
    4994:	b	4964 <PyInit__hashlib@@Base+0x1ec0>
    4998:	stp	x29, x30, [sp, #-32]!
    499c:	stp	x20, x19, [sp, #16]
    49a0:	mov	x29, sp
    49a4:	cbz	x0, 49e0 <PyInit__hashlib@@Base+0x1f3c>
    49a8:	mov	x19, x3
    49ac:	bl	2c60 <PyInit__hashlib@@Base+0x1bc>
    49b0:	cbz	x0, 49ec <PyInit__hashlib@@Base+0x1f48>
    49b4:	mov	x20, x0
    49b8:	ldr	x0, [x19]
    49bc:	mov	x1, x20
    49c0:	bl	2850 <PySet_Add@plt>
    49c4:	cbz	w0, 49d0 <PyInit__hashlib@@Base+0x1f2c>
    49c8:	mov	w8, #0x1                   	// #1
    49cc:	str	w8, [x19, #8]
    49d0:	ldr	x8, [x20]
    49d4:	subs	x8, x8, #0x1
    49d8:	str	x8, [x20]
    49dc:	b.eq	4a00 <PyInit__hashlib@@Base+0x1f5c>  // b.none
    49e0:	ldp	x20, x19, [sp, #16]
    49e4:	ldp	x29, x30, [sp], #32
    49e8:	ret
    49ec:	mov	w8, #0x1                   	// #1
    49f0:	str	w8, [x19, #8]
    49f4:	ldp	x20, x19, [sp, #16]
    49f8:	ldp	x29, x30, [sp], #32
    49fc:	ret
    4a00:	mov	x0, x20
    4a04:	ldp	x20, x19, [sp, #16]
    4a08:	ldp	x29, x30, [sp], #32
    4a0c:	b	28e0 <_Py_Dealloc@plt>

Disassembly of section .fini:

0000000000004a10 <.fini>:
    4a10:	stp	x29, x30, [sp, #-16]!
    4a14:	mov	x29, sp
    4a18:	ldp	x29, x30, [sp], #16
    4a1c:	ret
