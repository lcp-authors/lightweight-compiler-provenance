
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-reply-password_clang_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400ce8 <_init>:
  400ce8:	stp	x29, x30, [sp, #-16]!
  400cec:	mov	x29, sp
  400cf0:	bl	400f00 <call_weak_fn>
  400cf4:	ldp	x29, x30, [sp], #16
  400cf8:	ret

Disassembly of section .plt:

0000000000400d00 <__libc_start_main@plt-0x20>:
  400d00:	stp	x16, x30, [sp, #-16]!
  400d04:	adrp	x16, 41f000 <__FRAME_END__+0x1d870>
  400d08:	ldr	x17, [x16, #3888]
  400d0c:	add	x16, x16, #0xf30
  400d10:	br	x17
  400d14:	nop
  400d18:	nop
  400d1c:	nop

0000000000400d20 <__libc_start_main@plt>:
  400d20:	adrp	x16, 41f000 <__FRAME_END__+0x1d870>
  400d24:	ldr	x17, [x16, #3896]
  400d28:	add	x16, x16, #0xf38
  400d2c:	br	x17

0000000000400d30 <abort@plt>:
  400d30:	adrp	x16, 41f000 <__FRAME_END__+0x1d870>
  400d34:	ldr	x17, [x16, #3904]
  400d38:	add	x16, x16, #0xf40
  400d3c:	br	x17

0000000000400d40 <__gmon_start__@plt>:
  400d40:	adrp	x16, 41f000 <__FRAME_END__+0x1d870>
  400d44:	ldr	x17, [x16, #3912]
  400d48:	add	x16, x16, #0xf48
  400d4c:	br	x17

0000000000400d50 <log_setup_service@plt>:
  400d50:	adrp	x16, 41f000 <__FRAME_END__+0x1d870>
  400d54:	ldr	x17, [x16, #3920]
  400d58:	add	x16, x16, #0xf50
  400d5c:	br	x17

0000000000400d60 <strcmp@plt>:
  400d60:	adrp	x16, 41f000 <__FRAME_END__+0x1d870>
  400d64:	ldr	x17, [x16, #3928]
  400d68:	add	x16, x16, #0xf58
  400d6c:	br	x17

0000000000400d70 <log_get_max_level_realm@plt>:
  400d70:	adrp	x16, 41f000 <__FRAME_END__+0x1d870>
  400d74:	ldr	x17, [x16, #3936]
  400d78:	add	x16, x16, #0xf60
  400d7c:	br	x17

0000000000400d80 <log_internal_realm@plt>:
  400d80:	adrp	x16, 41f000 <__FRAME_END__+0x1d870>
  400d84:	ldr	x17, [x16, #3944]
  400d88:	add	x16, x16, #0xf68
  400d8c:	br	x17

0000000000400d90 <safe_close@plt>:
  400d90:	adrp	x16, 41f000 <__FRAME_END__+0x1d870>
  400d94:	ldr	x17, [x16, #3952]
  400d98:	add	x16, x16, #0xf70
  400d9c:	br	x17

0000000000400da0 <read_line_full@plt>:
  400da0:	adrp	x16, 41f000 <__FRAME_END__+0x1d870>
  400da4:	ldr	x17, [x16, #3960]
  400da8:	add	x16, x16, #0xf78
  400dac:	br	x17

0000000000400db0 <strjoin_real@plt>:
  400db0:	adrp	x16, 41f000 <__FRAME_END__+0x1d870>
  400db4:	ldr	x17, [x16, #3968]
  400db8:	add	x16, x16, #0xf80
  400dbc:	br	x17

0000000000400dc0 <strlen@plt>:
  400dc0:	adrp	x16, 41f000 <__FRAME_END__+0x1d870>
  400dc4:	ldr	x17, [x16, #3976]
  400dc8:	add	x16, x16, #0xf88
  400dcc:	br	x17

0000000000400dd0 <strdup@plt>:
  400dd0:	adrp	x16, 41f000 <__FRAME_END__+0x1d870>
  400dd4:	ldr	x17, [x16, #3984]
  400dd8:	add	x16, x16, #0xf90
  400ddc:	br	x17

0000000000400de0 <log_oom_internal@plt>:
  400de0:	adrp	x16, 41f000 <__FRAME_END__+0x1d870>
  400de4:	ldr	x17, [x16, #3992]
  400de8:	add	x16, x16, #0xf98
  400dec:	br	x17

0000000000400df0 <malloc_usable_size@plt>:
  400df0:	adrp	x16, 41f000 <__FRAME_END__+0x1d870>
  400df4:	ldr	x17, [x16, #4000]
  400df8:	add	x16, x16, #0xfa0
  400dfc:	br	x17

0000000000400e00 <explicit_bzero@plt>:
  400e00:	adrp	x16, 41f000 <__FRAME_END__+0x1d870>
  400e04:	ldr	x17, [x16, #4008]
  400e08:	add	x16, x16, #0xfa8
  400e0c:	br	x17

0000000000400e10 <free@plt>:
  400e10:	adrp	x16, 41f000 <__FRAME_END__+0x1d870>
  400e14:	ldr	x17, [x16, #4016]
  400e18:	add	x16, x16, #0xfb0
  400e1c:	br	x17

0000000000400e20 <socket@plt>:
  400e20:	adrp	x16, 41f000 <__FRAME_END__+0x1d870>
  400e24:	ldr	x17, [x16, #4024]
  400e28:	add	x16, x16, #0xfb8
  400e2c:	br	x17

0000000000400e30 <sockaddr_un_set_path@plt>:
  400e30:	adrp	x16, 41f000 <__FRAME_END__+0x1d870>
  400e34:	ldr	x17, [x16, #4032]
  400e38:	add	x16, x16, #0xfc0
  400e3c:	br	x17

0000000000400e40 <sendto@plt>:
  400e40:	adrp	x16, 41f000 <__FRAME_END__+0x1d870>
  400e44:	ldr	x17, [x16, #4040]
  400e48:	add	x16, x16, #0xfc8
  400e4c:	br	x17

0000000000400e50 <__errno_location@plt>:
  400e50:	adrp	x16, 41f000 <__FRAME_END__+0x1d870>
  400e54:	ldr	x17, [x16, #4048]
  400e58:	add	x16, x16, #0xfd0
  400e5c:	br	x17

0000000000400e60 <ask_password_agent_close@plt>:
  400e60:	adrp	x16, 41f000 <__FRAME_END__+0x1d870>
  400e64:	ldr	x17, [x16, #4056]
  400e68:	add	x16, x16, #0xfd8
  400e6c:	br	x17

0000000000400e70 <polkit_agent_close@plt>:
  400e70:	adrp	x16, 41f000 <__FRAME_END__+0x1d870>
  400e74:	ldr	x17, [x16, #4064]
  400e78:	add	x16, x16, #0xfe0
  400e7c:	br	x17

0000000000400e80 <pager_close@plt>:
  400e80:	adrp	x16, 41f000 <__FRAME_END__+0x1d870>
  400e84:	ldr	x17, [x16, #4072]
  400e88:	add	x16, x16, #0xfe8
  400e8c:	br	x17

0000000000400e90 <mac_selinux_finish@plt>:
  400e90:	adrp	x16, 41f000 <__FRAME_END__+0x1d870>
  400e94:	ldr	x17, [x16, #4080]
  400e98:	add	x16, x16, #0xff0
  400e9c:	br	x17

0000000000400ea0 <log_assert_failed_realm@plt>:
  400ea0:	adrp	x16, 41f000 <__FRAME_END__+0x1d870>
  400ea4:	ldr	x17, [x16, #4088]
  400ea8:	add	x16, x16, #0xff8
  400eac:	br	x17

Disassembly of section .text:

0000000000400eb0 <_start>:
  400eb0:	mov	x29, #0x0                   	// #0
  400eb4:	mov	x30, #0x0                   	// #0
  400eb8:	mov	x5, x0
  400ebc:	ldr	x1, [sp]
  400ec0:	add	x2, sp, #0x8
  400ec4:	mov	x6, sp
  400ec8:	movz	x0, #0x0, lsl #48
  400ecc:	movk	x0, #0x0, lsl #32
  400ed0:	movk	x0, #0x40, lsl #16
  400ed4:	movk	x0, #0xfbc
  400ed8:	movz	x3, #0x0, lsl #48
  400edc:	movk	x3, #0x0, lsl #32
  400ee0:	movk	x3, #0x40, lsl #16
  400ee4:	movk	x3, #0x14a8
  400ee8:	movz	x4, #0x0, lsl #48
  400eec:	movk	x4, #0x0, lsl #32
  400ef0:	movk	x4, #0x40, lsl #16
  400ef4:	movk	x4, #0x1528
  400ef8:	bl	400d20 <__libc_start_main@plt>
  400efc:	bl	400d30 <abort@plt>

0000000000400f00 <call_weak_fn>:
  400f00:	adrp	x0, 41f000 <__FRAME_END__+0x1d870>
  400f04:	ldr	x0, [x0, #3848]
  400f08:	cbz	x0, 400f10 <call_weak_fn+0x10>
  400f0c:	b	400d40 <__gmon_start__@plt>
  400f10:	ret
  400f14:	udf	#0

0000000000400f18 <deregister_tm_clones>:
  400f18:	adrp	x0, 420000 <completed.8445>
  400f1c:	add	x0, x0, #0x0
  400f20:	adrp	x1, 420000 <completed.8445>
  400f24:	add	x1, x1, #0x0
  400f28:	cmp	x1, x0
  400f2c:	b.eq	400f44 <deregister_tm_clones+0x2c>  // b.none
  400f30:	adrp	x1, 401000 <main+0x44>
  400f34:	ldr	x1, [x1, #1344]
  400f38:	cbz	x1, 400f44 <deregister_tm_clones+0x2c>
  400f3c:	mov	x16, x1
  400f40:	br	x16
  400f44:	ret

0000000000400f48 <register_tm_clones>:
  400f48:	adrp	x0, 420000 <completed.8445>
  400f4c:	add	x0, x0, #0x0
  400f50:	adrp	x1, 420000 <completed.8445>
  400f54:	add	x1, x1, #0x0
  400f58:	sub	x1, x1, x0
  400f5c:	lsr	x2, x1, #63
  400f60:	add	x1, x2, x1, asr #3
  400f64:	cmp	xzr, x1, asr #1
  400f68:	asr	x1, x1, #1
  400f6c:	b.eq	400f84 <register_tm_clones+0x3c>  // b.none
  400f70:	adrp	x2, 401000 <main+0x44>
  400f74:	ldr	x2, [x2, #1352]
  400f78:	cbz	x2, 400f84 <register_tm_clones+0x3c>
  400f7c:	mov	x16, x2
  400f80:	br	x16
  400f84:	ret

0000000000400f88 <__do_global_dtors_aux>:
  400f88:	stp	x29, x30, [sp, #-32]!
  400f8c:	mov	x29, sp
  400f90:	str	x19, [sp, #16]
  400f94:	adrp	x19, 420000 <completed.8445>
  400f98:	ldrb	w0, [x19]
  400f9c:	cbnz	w0, 400fac <__do_global_dtors_aux+0x24>
  400fa0:	bl	400f18 <deregister_tm_clones>
  400fa4:	mov	w0, #0x1                   	// #1
  400fa8:	strb	w0, [x19]
  400fac:	ldr	x19, [sp, #16]
  400fb0:	ldp	x29, x30, [sp], #32
  400fb4:	ret

0000000000400fb8 <frame_dummy>:
  400fb8:	b	400f48 <register_tm_clones>

0000000000400fbc <main>:
  400fbc:	sub	sp, sp, #0xc0
  400fc0:	adrp	x8, 420000 <completed.8445>
  400fc4:	adrp	x9, 420000 <completed.8445>
  400fc8:	stp	x29, x30, [sp, #128]
  400fcc:	stp	x24, x23, [sp, #144]
  400fd0:	stp	x22, x21, [sp, #160]
  400fd4:	stp	x20, x19, [sp, #176]
  400fd8:	add	x29, sp, #0x80
  400fdc:	mov	x20, x1
  400fe0:	mov	w19, w0
  400fe4:	str	w0, [x8, #8]
  400fe8:	str	x1, [x9, #16]
  400fec:	bl	400d50 <log_setup_service@plt>
  400ff0:	cmp	w19, #0x3
  400ff4:	b.ne	401068 <main+0xac>  // b.any
  400ff8:	ldr	x19, [x20, #8]
  400ffc:	adrp	x1, 401000 <main+0x44>
  401000:	add	x1, x1, #0x596
  401004:	mov	x0, x19
  401008:	bl	400d60 <strcmp@plt>
  40100c:	cbz	w0, 4010bc <main+0x100>
  401010:	adrp	x1, 401000 <main+0x44>
  401014:	add	x1, x1, #0x5d6
  401018:	mov	x0, x19
  40101c:	bl	400d60 <strcmp@plt>
  401020:	cbz	w0, 401118 <main+0x15c>
  401024:	mov	w0, wzr
  401028:	bl	400d70 <log_get_max_level_realm@plt>
  40102c:	cmp	w0, #0x3
  401030:	b.lt	4010ac <main+0xf0>  // b.tstop
  401034:	adrp	x2, 401000 <main+0x44>
  401038:	adrp	x4, 401000 <main+0x44>
  40103c:	adrp	x5, 401000 <main+0x44>
  401040:	mov	w1, #0x16                  	// #22
  401044:	add	x2, x2, #0x553
  401048:	add	x4, x4, #0x577
  40104c:	add	x5, x5, #0x5da
  401050:	mov	w0, #0x3                   	// #3
  401054:	movk	w1, #0x4000, lsl #16
  401058:	mov	w3, #0x48                  	// #72
  40105c:	mov	x6, x19
  401060:	bl	400d80 <log_internal_realm@plt>
  401064:	b	4010a4 <main+0xe8>
  401068:	mov	w0, wzr
  40106c:	bl	400d70 <log_get_max_level_realm@plt>
  401070:	cmp	w0, #0x3
  401074:	b.lt	4010ac <main+0xf0>  // b.tstop
  401078:	adrp	x2, 401000 <main+0x44>
  40107c:	adrp	x4, 401000 <main+0x44>
  401080:	adrp	x5, 401000 <main+0x44>
  401084:	mov	w1, #0x16                  	// #22
  401088:	add	x2, x2, #0x553
  40108c:	add	x4, x4, #0x577
  401090:	add	x5, x5, #0x57b
  401094:	mov	w0, #0x3                   	// #3
  401098:	movk	w1, #0x4000, lsl #16
  40109c:	mov	w3, #0x2d                  	// #45
  4010a0:	bl	400d80 <log_internal_realm@plt>
  4010a4:	mov	w21, w0
  4010a8:	b	4010b0 <main+0xf4>
  4010ac:	mov	w21, #0xffffffea            	// #-22
  4010b0:	mov	w0, #0xffffffff            	// #-1
  4010b4:	bl	400d90 <safe_close@plt>
  4010b8:	b	4013f4 <main+0x438>
  4010bc:	adrp	x8, 420000 <completed.8445>
  4010c0:	ldr	x0, [x8, #24]
  4010c4:	mov	x3, sp
  4010c8:	mov	w1, #0x100000              	// #1048576
  4010cc:	mov	w2, wzr
  4010d0:	str	xzr, [sp]
  4010d4:	bl	400da0 <read_line_full@plt>
  4010d8:	mov	w19, w0
  4010dc:	tbnz	w0, #31, 401134 <main+0x178>
  4010e0:	cbz	w19, 40116c <main+0x1b0>
  4010e4:	ldr	x1, [sp]
  4010e8:	adrp	x0, 401000 <main+0x44>
  4010ec:	add	x0, x0, #0x5d4
  4010f0:	mov	x2, xzr
  4010f4:	bl	400db0 <strjoin_real@plt>
  4010f8:	cbz	x0, 4011e0 <main+0x224>
  4010fc:	ldr	x22, [sp]
  401100:	mov	x19, x0
  401104:	mov	x0, x22
  401108:	bl	400dc0 <strlen@plt>
  40110c:	add	x23, x0, #0x2
  401110:	mov	w24, #0x1                   	// #1
  401114:	b	401214 <main+0x258>
  401118:	adrp	x0, 401000 <main+0x44>
  40111c:	add	x0, x0, #0x5d8
  401120:	bl	400dd0 <strdup@plt>
  401124:	cbz	x0, 4011b4 <main+0x1f8>
  401128:	mov	x19, x0
  40112c:	mov	w23, #0x1                   	// #1
  401130:	b	40123c <main+0x280>
  401134:	mov	w0, wzr
  401138:	bl	400d70 <log_get_max_level_realm@plt>
  40113c:	cmp	w0, #0x3
  401140:	b.lt	4011d0 <main+0x214>  // b.tstop
  401144:	adrp	x2, 401000 <main+0x44>
  401148:	adrp	x4, 401000 <main+0x44>
  40114c:	adrp	x5, 401000 <main+0x44>
  401150:	add	x2, x2, #0x553
  401154:	add	x4, x4, #0x577
  401158:	add	x5, x5, #0x598
  40115c:	mov	w0, #0x3                   	// #3
  401160:	mov	w3, #0x34                  	// #52
  401164:	mov	w1, w19
  401168:	b	4011a8 <main+0x1ec>
  40116c:	mov	w0, wzr
  401170:	bl	400d70 <log_get_max_level_realm@plt>
  401174:	cmp	w0, #0x3
  401178:	b.lt	401200 <main+0x244>  // b.tstop
  40117c:	mov	w8, #0x16                  	// #22
  401180:	movk	w8, #0x4000, lsl #16
  401184:	adrp	x2, 401000 <main+0x44>
  401188:	adrp	x4, 401000 <main+0x44>
  40118c:	adrp	x5, 401000 <main+0x44>
  401190:	sub	w1, w8, #0x11
  401194:	add	x2, x2, #0x553
  401198:	add	x4, x4, #0x577
  40119c:	add	x5, x5, #0x5b4
  4011a0:	mov	w0, #0x3                   	// #3
  4011a4:	mov	w3, #0x37                  	// #55
  4011a8:	bl	400d80 <log_internal_realm@plt>
  4011ac:	mov	w21, w0
  4011b0:	b	401204 <main+0x248>
  4011b4:	adrp	x1, 401000 <main+0x44>
  4011b8:	adrp	x3, 401000 <main+0x44>
  4011bc:	add	x1, x1, #0x553
  4011c0:	add	x3, x3, #0x577
  4011c4:	mov	w2, #0x42                  	// #66
  4011c8:	bl	400de0 <log_oom_internal@plt>
  4011cc:	b	4010a4 <main+0xe8>
  4011d0:	mov	w8, wzr
  4011d4:	neg	w9, w19
  4011d8:	sub	w21, w8, w9, uxtb
  4011dc:	b	401204 <main+0x248>
  4011e0:	adrp	x1, 401000 <main+0x44>
  4011e4:	adrp	x3, 401000 <main+0x44>
  4011e8:	add	x1, x1, #0x553
  4011ec:	add	x3, x3, #0x577
  4011f0:	mov	w2, #0x3b                  	// #59
  4011f4:	bl	400de0 <log_oom_internal@plt>
  4011f8:	mov	w21, w0
  4011fc:	b	401204 <main+0x248>
  401200:	mov	w21, #0xfffffffb            	// #-5
  401204:	ldr	x22, [sp]
  401208:	mov	x19, xzr
  40120c:	mov	w24, wzr
  401210:	mov	x23, xzr
  401214:	cbz	x22, 401238 <main+0x27c>
  401218:	mov	x0, x22
  40121c:	bl	400df0 <malloc_usable_size@plt>
  401220:	cbz	x0, 401230 <main+0x274>
  401224:	mov	x1, x0
  401228:	mov	x0, x22
  40122c:	bl	400e00 <explicit_bzero@plt>
  401230:	mov	x0, x22
  401234:	bl	400e10 <free@plt>
  401238:	tbz	w24, #0, 4012b4 <main+0x2f8>
  40123c:	mov	w1, #0x802                 	// #2050
  401240:	mov	w0, #0x1                   	// #1
  401244:	movk	w1, #0x8, lsl #16
  401248:	mov	w2, wzr
  40124c:	bl	400e20 <socket@plt>
  401250:	mov	w22, w0
  401254:	tbnz	w0, #31, 4012bc <main+0x300>
  401258:	ldr	x20, [x20, #16]
  40125c:	movi	v0.2d, #0x0
  401260:	stp	q0, q0, [sp, #96]
  401264:	stp	q0, q0, [sp, #64]
  401268:	stp	q0, q0, [sp, #32]
  40126c:	stp	q0, q0, [sp]
  401270:	cbz	x20, 401460 <main+0x4a4>
  401274:	cbz	x19, 401484 <main+0x4c8>
  401278:	mov	x0, sp
  40127c:	mov	x1, x20
  401280:	bl	400e30 <sockaddr_un_set_path@plt>
  401284:	mov	w21, w0
  401288:	tbnz	w0, #31, 401304 <main+0x348>
  40128c:	mov	x4, sp
  401290:	mov	w3, #0x4000                	// #16384
  401294:	mov	w0, w22
  401298:	mov	x1, x19
  40129c:	mov	x2, x23
  4012a0:	mov	w5, w21
  4012a4:	bl	400e40 <sendto@plt>
  4012a8:	tbnz	x0, #63, 401368 <main+0x3ac>
  4012ac:	mov	w21, wzr
  4012b0:	b	4013cc <main+0x410>
  4012b4:	mov	w22, #0xffffffff            	// #-1
  4012b8:	b	401358 <main+0x39c>
  4012bc:	bl	400e50 <__errno_location@plt>
  4012c0:	ldr	w20, [x0]
  4012c4:	mov	w0, wzr
  4012c8:	bl	400d70 <log_get_max_level_realm@plt>
  4012cc:	cmp	w0, #0x3
  4012d0:	b.lt	401348 <main+0x38c>  // b.tstop
  4012d4:	adrp	x2, 401000 <main+0x44>
  4012d8:	adrp	x4, 401000 <main+0x44>
  4012dc:	adrp	x5, 401000 <main+0x44>
  4012e0:	add	x2, x2, #0x553
  4012e4:	add	x4, x4, #0x577
  4012e8:	add	x5, x5, #0x5f4
  4012ec:	mov	w0, #0x3                   	// #3
  4012f0:	mov	w3, #0x4c                  	// #76
  4012f4:	mov	w1, w20
  4012f8:	bl	400d80 <log_internal_realm@plt>
  4012fc:	mov	w21, w0
  401300:	b	401358 <main+0x39c>
  401304:	mov	w0, wzr
  401308:	bl	400d70 <log_get_max_level_realm@plt>
  40130c:	cmp	w0, #0x3
  401310:	b.lt	4013b0 <main+0x3f4>  // b.tstop
  401314:	adrp	x2, 401000 <main+0x44>
  401318:	adrp	x4, 401000 <main+0x44>
  40131c:	adrp	x5, 401000 <main+0x44>
  401320:	add	x2, x2, #0x553
  401324:	add	x4, x4, #0x657
  401328:	add	x5, x5, #0x666
  40132c:	mov	w0, #0x3                   	// #3
  401330:	mov	w3, #0x1c                  	// #28
  401334:	mov	w1, w21
  401338:	mov	x6, x20
  40133c:	bl	400d80 <log_internal_realm@plt>
  401340:	mov	w21, w0
  401344:	b	4013cc <main+0x410>
  401348:	cmp	w20, #0x0
  40134c:	mov	w8, wzr
  401350:	cneg	w9, w20, mi  // mi = first
  401354:	sub	w21, w8, w9, uxtb
  401358:	mov	w0, w22
  40135c:	bl	400d90 <safe_close@plt>
  401360:	cbnz	x19, 4013d4 <main+0x418>
  401364:	b	4013f4 <main+0x438>
  401368:	bl	400e50 <__errno_location@plt>
  40136c:	ldr	w20, [x0]
  401370:	mov	w0, wzr
  401374:	bl	400d70 <log_get_max_level_realm@plt>
  401378:	cmp	w0, #0x3
  40137c:	b.lt	4013bc <main+0x400>  // b.tstop
  401380:	adrp	x2, 401000 <main+0x44>
  401384:	adrp	x4, 401000 <main+0x44>
  401388:	adrp	x5, 401000 <main+0x44>
  40138c:	add	x2, x2, #0x553
  401390:	add	x4, x4, #0x657
  401394:	add	x5, x5, #0x6a5
  401398:	mov	w0, #0x3                   	// #3
  40139c:	mov	w3, #0x1f                  	// #31
  4013a0:	mov	w1, w20
  4013a4:	bl	400d80 <log_internal_realm@plt>
  4013a8:	mov	w21, w0
  4013ac:	b	4013cc <main+0x410>
  4013b0:	mov	w8, wzr
  4013b4:	neg	w9, w21
  4013b8:	b	4013c8 <main+0x40c>
  4013bc:	cmp	w20, #0x0
  4013c0:	mov	w8, wzr
  4013c4:	cneg	w9, w20, mi  // mi = first
  4013c8:	sub	w21, w8, w9, uxtb
  4013cc:	mov	w0, w22
  4013d0:	bl	400d90 <safe_close@plt>
  4013d4:	mov	x0, x19
  4013d8:	bl	400df0 <malloc_usable_size@plt>
  4013dc:	cbz	x0, 4013ec <main+0x430>
  4013e0:	mov	x1, x0
  4013e4:	mov	x0, x19
  4013e8:	bl	400e00 <explicit_bzero@plt>
  4013ec:	mov	x0, x19
  4013f0:	bl	400e10 <free@plt>
  4013f4:	bl	400e60 <ask_password_agent_close@plt>
  4013f8:	bl	400e70 <polkit_agent_close@plt>
  4013fc:	bl	400e80 <pager_close@plt>
  401400:	bl	400e90 <mac_selinux_finish@plt>
  401404:	adrp	x8, 41f000 <__FRAME_END__+0x1d870>
  401408:	ldr	x8, [x8, #3856]
  40140c:	adrp	x19, 41f000 <__FRAME_END__+0x1d870>
  401410:	ldr	x19, [x19, #3864]
  401414:	add	x9, x8, #0x7
  401418:	and	x20, x9, #0xfffffffffffffff8
  40141c:	cmp	x20, x19
  401420:	cset	w9, cs  // cs = hs, nlast
  401424:	cmp	x8, #0x0
  401428:	cset	w8, eq  // eq = none
  40142c:	orr	w8, w8, w9
  401430:	tbnz	w8, #0, 401444 <main+0x488>
  401434:	ldp	x0, x8, [x20], #16
  401438:	blr	x8
  40143c:	cmp	x20, x19
  401440:	b.cc	401434 <main+0x478>  // b.lo, b.ul, b.last
  401444:	lsr	w0, w21, #31
  401448:	ldp	x20, x19, [sp, #176]
  40144c:	ldp	x22, x21, [sp, #160]
  401450:	ldp	x24, x23, [sp, #144]
  401454:	ldp	x29, x30, [sp, #128]
  401458:	add	sp, sp, #0xc0
  40145c:	ret
  401460:	adrp	x1, 401000 <main+0x44>
  401464:	adrp	x2, 401000 <main+0x44>
  401468:	adrp	x4, 401000 <main+0x44>
  40146c:	add	x1, x1, #0x644
  401470:	add	x2, x2, #0x553
  401474:	add	x4, x4, #0x608
  401478:	mov	w3, #0x17                  	// #23
  40147c:	mov	w0, wzr
  401480:	bl	400ea0 <log_assert_failed_realm@plt>
  401484:	adrp	x1, 401000 <main+0x44>
  401488:	adrp	x2, 401000 <main+0x44>
  40148c:	adrp	x4, 401000 <main+0x44>
  401490:	add	x1, x1, #0x650
  401494:	add	x2, x2, #0x553
  401498:	add	x4, x4, #0x608
  40149c:	mov	w3, #0x18                  	// #24
  4014a0:	mov	w0, wzr
  4014a4:	bl	400ea0 <log_assert_failed_realm@plt>

00000000004014a8 <__libc_csu_init>:
  4014a8:	stp	x29, x30, [sp, #-64]!
  4014ac:	mov	x29, sp
  4014b0:	stp	x19, x20, [sp, #16]
  4014b4:	adrp	x20, 41f000 <__FRAME_END__+0x1d870>
  4014b8:	add	x20, x20, #0xce0
  4014bc:	stp	x21, x22, [sp, #32]
  4014c0:	adrp	x21, 41f000 <__FRAME_END__+0x1d870>
  4014c4:	add	x21, x21, #0xcd8
  4014c8:	sub	x20, x20, x21
  4014cc:	mov	w22, w0
  4014d0:	stp	x23, x24, [sp, #48]
  4014d4:	mov	x23, x1
  4014d8:	mov	x24, x2
  4014dc:	bl	400ce8 <_init>
  4014e0:	cmp	xzr, x20, asr #3
  4014e4:	b.eq	401510 <__libc_csu_init+0x68>  // b.none
  4014e8:	asr	x20, x20, #3
  4014ec:	mov	x19, #0x0                   	// #0
  4014f0:	ldr	x3, [x21, x19, lsl #3]
  4014f4:	mov	x2, x24
  4014f8:	add	x19, x19, #0x1
  4014fc:	mov	x1, x23
  401500:	mov	w0, w22
  401504:	blr	x3
  401508:	cmp	x20, x19
  40150c:	b.ne	4014f0 <__libc_csu_init+0x48>  // b.any
  401510:	ldp	x19, x20, [sp, #16]
  401514:	ldp	x21, x22, [sp, #32]
  401518:	ldp	x23, x24, [sp, #48]
  40151c:	ldp	x29, x30, [sp], #64
  401520:	ret
  401524:	nop

0000000000401528 <__libc_csu_fini>:
  401528:	ret

Disassembly of section .fini:

000000000040152c <_fini>:
  40152c:	stp	x29, x30, [sp, #-16]!
  401530:	mov	x29, sp
  401534:	ldp	x29, x30, [sp], #16
  401538:	ret
