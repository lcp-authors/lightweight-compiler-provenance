
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//reiserfs.mod_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x2220>:
       0:	mov	x1, x0
       4:	ldr	w0, [x0, #12]
       8:	mov	w2, #0x10000000            	// #268435456
       c:	cmp	w0, w2
      10:	b.eq	80 <grub_mod_init-0x21a0>  // b.none
      14:	b.hi	38 <grub_mod_init-0x21e8>  // b.pmore
      18:	cmp	w0, #0x1f4
      1c:	b.eq	88 <grub_mod_init-0x2198>  // b.none
      20:	cmp	w0, #0x22b
      24:	b.ne	30 <grub_mod_init-0x21f0>  // b.any
      28:	mov	w0, #0x4                   	// #4
      2c:	ret
      30:	cbnz	w0, 4c <grub_mod_init-0x21d4>
      34:	ret
      38:	mov	w2, #0x20000000            	// #536870912
      3c:	cmp	w0, w2
      40:	b.eq	78 <grub_mod_init-0x21a8>  // b.none
      44:	cmn	w0, #0x2
      48:	b.cs	64 <grub_mod_init-0x21bc>  // b.hs, b.nlast
      4c:	ldr	x0, [x1, #8]
      50:	adrp	x1, 0 <grub_mod_init-0x2220>
      54:	ldr	x1, [x1]
      58:	lsr	x0, x0, #60
      5c:	ldr	w0, [x1, x0, lsl #2]
      60:	ret
      64:	b.eq	80 <grub_mod_init-0x21a0>  // b.none
      68:	cmn	w0, #0x1
      6c:	b.eq	78 <grub_mod_init-0x21a8>  // b.none
      70:	cmp	w0, w2
      74:	b.ne	90 <grub_mod_init-0x2190>  // b.any
      78:	mov	w0, #0x2                   	// #2
      7c:	ret
      80:	mov	w0, #0x3                   	// #3
      84:	ret
      88:	mov	w0, #0x1                   	// #1
      8c:	ret
      90:	mov	w0, #0x5                   	// #5
      94:	ret
	...
      a0:	stp	x29, x30, [sp, #-32]!
      a4:	mov	x29, sp
      a8:	str	x19, [sp, #16]
      ac:	ldr	x19, [x0, #80]
      b0:	ldr	x0, [x19]
      b4:	bl	0 <grub_free>
      b8:	mov	x0, x19
      bc:	bl	0 <grub_free>
      c0:	adrp	x0, 0 <grub_mod_init-0x2220>
      c4:	ldr	x0, [x0]
      c8:	ldr	x0, [x0]
      cc:	bl	0 <grub_dl_unref>
      d0:	mov	w0, #0x0                   	// #0
      d4:	ldr	x19, [sp, #16]
      d8:	ldp	x29, x30, [sp], #32
      dc:	ret
	...
      e8:	stp	x29, x30, [sp, #-48]!
      ec:	mov	x29, sp
      f0:	stp	x19, x20, [sp, #16]
      f4:	mov	x20, x0
      f8:	mov	x0, #0x80                  	// #128
      fc:	bl	0 <grub_malloc>
     100:	mov	x19, x0
     104:	cbz	x0, 18c <grub_mod_init-0x2094>
     108:	mov	x4, x0
     10c:	mov	x3, #0x74                  	// #116
     110:	mov	x0, x20
     114:	mov	x2, #0x0                   	// #0
     118:	mov	x1, #0x80                  	// #128
     11c:	str	x21, [sp, #32]
     120:	bl	0 <grub_disk_read>
     124:	adrp	x0, 0 <grub_mod_init-0x2220>
     128:	ldr	x21, [x0]
     12c:	ldr	w0, [x21]
     130:	cbnz	w0, 164 <grub_mod_init-0x20bc>
     134:	adrp	x1, 0 <grub_mod_init-0x2220>
     138:	add	x0, x19, #0x34
     13c:	mov	x2, #0x6                   	// #6
     140:	ldr	x1, [x1]
     144:	bl	0 <grub_memcmp>
     148:	cbnz	w0, 1b0 <grub_mod_init-0x2070>
     14c:	ldr	x21, [sp, #32]
     150:	str	x20, [x19, #120]
     154:	mov	x0, x19
     158:	ldp	x19, x20, [sp, #16]
     15c:	ldp	x29, x30, [sp], #48
     160:	ret
     164:	ldr	x21, [sp, #32]
     168:	cmp	w0, #0xb
     16c:	b.eq	19c <grub_mod_init-0x2084>  // b.none
     170:	mov	x0, x19
     174:	mov	x19, #0x0                   	// #0
     178:	bl	0 <grub_free>
     17c:	mov	x0, x19
     180:	ldp	x19, x20, [sp, #16]
     184:	ldp	x29, x30, [sp], #48
     188:	ret
     18c:	adrp	x0, 0 <grub_mod_init-0x2220>
     190:	ldr	x0, [x0]
     194:	ldr	w0, [x0]
     198:	b	168 <grub_mod_init-0x20b8>
     19c:	adrp	x1, 0 <grub_mod_init-0x2220>
     1a0:	mov	w0, #0x9                   	// #9
     1a4:	ldr	x1, [x1]
     1a8:	bl	0 <grub_error>
     1ac:	b	170 <grub_mod_init-0x20b0>
     1b0:	adrp	x1, 0 <grub_mod_init-0x2220>
     1b4:	mov	w0, #0x9                   	// #9
     1b8:	ldr	x1, [x1]
     1bc:	bl	0 <grub_error>
     1c0:	ldr	w0, [x21]
     1c4:	ldr	x21, [sp, #32]
     1c8:	b	168 <grub_mod_init-0x20b8>
     1cc:	nop
	...
     1e8:	sub	sp, sp, #0x40
     1ec:	adrp	x2, 0 <grub_mod_init-0x2220>
     1f0:	stp	x29, x30, [sp, #16]
     1f4:	add	x29, sp, #0x10
     1f8:	stp	x19, x20, [sp, #32]
     1fc:	mov	x20, x1
     200:	ldr	x19, [x0]
     204:	str	x21, [sp, #48]
     208:	ldr	x21, [x2]
     20c:	ldr	x0, [x21]
     210:	bl	0 <grub_dl_ref>
     214:	str	xzr, [x20]
     218:	mov	x0, x19
     21c:	bl	e8 <grub_mod_init-0x2138>
     220:	mov	x19, x0
     224:	cbz	x0, 268 <grub_mod_init-0x1fb8>
     228:	ldrh	w8, [x0, #84]
     22c:	ldrh	w2, [x0, #86]
     230:	ldrh	w3, [x0, #88]
     234:	cbnz	w8, 298 <grub_mod_init-0x1f88>
     238:	cbnz	w2, 298 <grub_mod_init-0x1f88>
     23c:	ldrh	w4, [x0, #90]
     240:	ldrh	w5, [x0, #92]
     244:	ldrh	w6, [x0, #94]
     248:	ldrh	w7, [x0, #96]
     24c:	ldrh	w0, [x0, #98]
     250:	cbnz	w3, 2ac <grub_mod_init-0x1f74>
     254:	cbnz	w4, 2ac <grub_mod_init-0x1f74>
     258:	cbnz	w5, 2ac <grub_mod_init-0x1f74>
     25c:	cbnz	w6, 2ac <grub_mod_init-0x1f74>
     260:	cbnz	w7, 2ac <grub_mod_init-0x1f74>
     264:	cbnz	w0, 2ac <grub_mod_init-0x1f74>
     268:	ldr	x0, [x21]
     26c:	bl	0 <grub_dl_unref>
     270:	mov	x0, x19
     274:	bl	0 <grub_free>
     278:	adrp	x0, 0 <grub_mod_init-0x2220>
     27c:	ldp	x29, x30, [sp, #16]
     280:	ldr	x0, [x0]
     284:	ldp	x19, x20, [sp, #32]
     288:	ldr	w0, [x0]
     28c:	ldr	x21, [sp, #48]
     290:	add	sp, sp, #0x40
     294:	ret
     298:	ldrh	w4, [x19, #90]
     29c:	ldrh	w5, [x19, #92]
     2a0:	ldrh	w6, [x19, #94]
     2a4:	ldrh	w7, [x19, #96]
     2a8:	ldrh	w0, [x19, #98]
     2ac:	adrp	x9, 0 <grub_mod_init-0x2220>
     2b0:	lsl	w1, w0, #8
     2b4:	orr	w1, w1, w0, lsr #8
     2b8:	lsr	w15, w7, #8
     2bc:	ldr	x0, [x9]
     2c0:	lsr	w14, w6, #8
     2c4:	lsr	w13, w5, #8
     2c8:	lsr	w12, w4, #8
     2cc:	lsr	w11, w3, #8
     2d0:	lsr	w10, w2, #8
     2d4:	lsr	w9, w8, #8
     2d8:	and	w1, w1, #0xffff
     2dc:	str	w1, [sp]
     2e0:	orr	w7, w15, w7, lsl #8
     2e4:	orr	w6, w14, w6, lsl #8
     2e8:	orr	w5, w13, w5, lsl #8
     2ec:	orr	w4, w12, w4, lsl #8
     2f0:	orr	w3, w11, w3, lsl #8
     2f4:	orr	w2, w10, w2, lsl #8
     2f8:	orr	w1, w9, w8, lsl #8
     2fc:	and	w7, w7, #0xffff
     300:	and	w6, w6, #0xffff
     304:	and	w5, w5, #0xffff
     308:	and	w4, w4, #0xffff
     30c:	and	w3, w3, #0xffff
     310:	and	w2, w2, #0xffff
     314:	and	w1, w1, #0xffff
     318:	bl	0 <grub_xasprintf>
     31c:	str	x0, [x20]
     320:	b	268 <grub_mod_init-0x1fb8>
     324:	nop
	...
     340:	stp	x29, x30, [sp, #-48]!
     344:	adrp	x2, 0 <grub_mod_init-0x2220>
     348:	mov	x29, sp
     34c:	stp	x19, x20, [sp, #16]
     350:	mov	x20, x1
     354:	ldr	x19, [x0]
     358:	str	x21, [sp, #32]
     35c:	ldr	x21, [x2]
     360:	ldr	x0, [x21]
     364:	bl	0 <grub_dl_ref>
     368:	mov	x0, x19
     36c:	bl	e8 <grub_mod_init-0x2138>
     370:	mov	x19, x0
     374:	cbz	x0, 3b4 <grub_mod_init-0x1e6c>
     378:	add	x0, x0, #0x64
     37c:	mov	x1, #0x10                  	// #16
     380:	bl	0 <grub_strndup>
     384:	str	x0, [x20]
     388:	ldr	x0, [x21]
     38c:	bl	0 <grub_dl_unref>
     390:	mov	x0, x19
     394:	bl	0 <grub_free>
     398:	adrp	x0, 0 <grub_mod_init-0x2220>
     39c:	ldp	x19, x20, [sp, #16]
     3a0:	ldr	x0, [x0]
     3a4:	ldr	x21, [sp, #32]
     3a8:	ldr	w0, [x0]
     3ac:	ldp	x29, x30, [sp], #48
     3b0:	ret
     3b4:	str	xzr, [x20]
     3b8:	b	388 <grub_mod_init-0x1e98>
     3bc:	nop
	...
     3d0:	stp	x29, x30, [sp, #-64]!
     3d4:	mov	x29, sp
     3d8:	stp	x19, x20, [sp, #16]
     3dc:	mov	w19, w1
     3e0:	mov	x20, x3
     3e4:	and	w19, w19, #0xff
     3e8:	mov	w1, #0x0                   	// #0
     3ec:	stp	x21, x22, [sp, #32]
     3f0:	mov	x21, x2
     3f4:	mov	x22, x0
     3f8:	mov	x2, #0x10                  	// #16
     3fc:	add	x0, sp, #0x30
     400:	bl	0 <grub_memset>
     404:	cmp	w19, #0x2
     408:	ldrb	w0, [sp, #48]
     40c:	cset	w1, eq  // eq = none
     410:	ldr	w2, [x21, #24]
     414:	and	w0, w0, #0xfffffffc
     418:	orr	w1, w1, #0x2
     41c:	orr	w1, w1, w0
     420:	mov	x0, x21
     424:	strb	w1, [sp, #48]
     428:	str	w2, [sp, #52]
     42c:	bl	0 <grub_free>
     430:	ldp	x3, x2, [x20]
     434:	add	x1, sp, #0x30
     438:	mov	x0, x22
     43c:	blr	x3
     440:	ldp	x19, x20, [sp, #16]
     444:	ldp	x21, x22, [sp, #32]
     448:	ldp	x29, x30, [sp], #64
     44c:	ret
     450:	mov	x4, x0
     454:	mov	w0, #0x10000000            	// #268435456
     458:	ldr	w2, [x4, #12]
     45c:	cmp	w2, w0
     460:	b.eq	478 <grub_mod_init-0x1da8>  // b.none
     464:	b.hi	5d8 <grub_mod_init-0x1c48>  // b.pmore
     468:	cmp	w2, #0x1f4
     46c:	b.eq	478 <grub_mod_init-0x1da8>  // b.none
     470:	cmp	w2, #0x22b
     474:	b.ne	50c <grub_mod_init-0x1d14>  // b.any
     478:	ldr	w0, [x4, #8]
     47c:	ldr	w3, [x1, #12]
     480:	mov	w5, #0x10000000            	// #268435456
     484:	cmp	w3, w5
     488:	b.eq	4a0 <grub_mod_init-0x1d80>  // b.none
     48c:	b.hi	5f8 <grub_mod_init-0x1c28>  // b.pmore
     490:	cmp	w3, #0x1f4
     494:	b.eq	4a0 <grub_mod_init-0x1d80>  // b.none
     498:	cmp	w3, #0x22b
     49c:	b.ne	514 <grub_mod_init-0x1d0c>  // b.any
     4a0:	ldr	w5, [x1, #8]
     4a4:	cmp	x5, x0
     4a8:	b.hi	75c <grub_mod_init-0x1ac4>  // b.pmore
     4ac:	mov	w0, #0x1                   	// #1
     4b0:	b.cc	508 <grub_mod_init-0x1d18>  // b.lo, b.ul, b.last
     4b4:	mov	w5, #0x10000000            	// #268435456
     4b8:	cmp	w2, w5
     4bc:	b.eq	618 <grub_mod_init-0x1c08>  // b.none
     4c0:	b.hi	51c <grub_mod_init-0x1d04>  // b.pmore
     4c4:	cmp	w2, #0x1f4
     4c8:	b.eq	6ac <grub_mod_init-0x1b74>  // b.none
     4cc:	cmp	w2, #0x22b
     4d0:	b.ne	5bc <grub_mod_init-0x1c64>  // b.any
     4d4:	cmp	w3, w5
     4d8:	b.eq	730 <grub_mod_init-0x1af0>  // b.none
     4dc:	b.hi	714 <grub_mod_init-0x1b0c>  // b.pmore
     4e0:	cmp	w3, #0x1f4
     4e4:	b.eq	750 <grub_mod_init-0x1ad0>  // b.none
     4e8:	cmp	w3, #0x22b
     4ec:	mov	w2, #0x4                   	// #4
     4f0:	b.ne	6b4 <grub_mod_init-0x1b6c>  // b.any
     4f4:	mov	w3, #0x4                   	// #4
     4f8:	cmp	w2, w3
     4fc:	b.cc	75c <grub_mod_init-0x1ac4>  // b.lo, b.ul, b.last
     500:	cmp	w3, w2
     504:	cset	w0, cc  // cc = lo, ul, last
     508:	ret
     50c:	cbz	w2, 478 <grub_mod_init-0x1da8>
     510:	b	5ec <grub_mod_init-0x1c34>
     514:	cbz	w3, 4a0 <grub_mod_init-0x1d80>
     518:	b	60c <grub_mod_init-0x1c14>
     51c:	mov	w0, #0x20000000            	// #536870912
     520:	cmp	w2, w0
     524:	b.eq	580 <grub_mod_init-0x1ca0>  // b.none
     528:	cmn	w2, #0x2
     52c:	b.cs	574 <grub_mod_init-0x1cac>  // b.hs, b.nlast
     530:	ldr	x0, [x4, #8]
     534:	adrp	x2, 0 <grub_mod_init-0x2220>
     538:	ldr	x2, [x2]
     53c:	lsr	x0, x0, #60
     540:	ldr	w2, [x2, x0, lsl #2]
     544:	nop
     548:	mov	w0, #0x10000000            	// #268435456
     54c:	cmp	w3, w0
     550:	b.eq	634 <grub_mod_init-0x1bec>  // b.none
     554:	b.hi	6e0 <grub_mod_init-0x1b40>  // b.pmore
     558:	cmp	w3, #0x1f4
     55c:	b.eq	764 <grub_mod_init-0x1abc>  // b.none
     560:	cmp	w3, #0x22b
     564:	b.eq	5a4 <grub_mod_init-0x1c7c>  // b.none
     568:	cbnz	w3, 6f4 <grub_mod_init-0x1b2c>
     56c:	mov	w3, #0x0                   	// #0
     570:	b	500 <grub_mod_init-0x1d20>
     574:	b.eq	618 <grub_mod_init-0x1c08>  // b.none
     578:	cmn	w2, #0x1
     57c:	b.ne	678 <grub_mod_init-0x1ba8>  // b.any
     580:	mov	w2, #0x2                   	// #2
     584:	mov	w0, #0x10000000            	// #268435456
     588:	cmp	w3, w0
     58c:	b.eq	634 <grub_mod_init-0x1bec>  // b.none
     590:	b.hi	620 <grub_mod_init-0x1c00>  // b.pmore
     594:	cmp	w3, #0x1f4
     598:	b.eq	764 <grub_mod_init-0x1abc>  // b.none
     59c:	cmp	w3, #0x22b
     5a0:	b.ne	688 <grub_mod_init-0x1b98>  // b.any
     5a4:	sub	w1, w2, #0x2
     5a8:	mov	w0, #0x0                   	// #0
     5ac:	cmp	w1, #0x1
     5b0:	b.ls	508 <grub_mod_init-0x1d18>  // b.plast
     5b4:	mov	w3, #0x4                   	// #4
     5b8:	b	4f8 <grub_mod_init-0x1d28>
     5bc:	cbz	w2, 548 <grub_mod_init-0x1cd8>
     5c0:	ldr	x0, [x4, #8]
     5c4:	adrp	x2, 0 <grub_mod_init-0x2220>
     5c8:	ldr	x2, [x2]
     5cc:	lsr	x0, x0, #60
     5d0:	ldr	w2, [x2, x0, lsl #2]
     5d4:	b	548 <grub_mod_init-0x1cd8>
     5d8:	mov	w0, #0x20000000            	// #536870912
     5dc:	cmp	w2, w0
     5e0:	b.eq	478 <grub_mod_init-0x1da8>  // b.none
     5e4:	cmn	w2, #0x2
     5e8:	b.cs	478 <grub_mod_init-0x1da8>  // b.hs, b.nlast
     5ec:	ldr	x0, [x4, #8]
     5f0:	and	x0, x0, #0xfffffffffffffff
     5f4:	b	47c <grub_mod_init-0x1da4>
     5f8:	mov	w5, #0x20000000            	// #536870912
     5fc:	cmp	w3, w5
     600:	b.eq	4a0 <grub_mod_init-0x1d80>  // b.none
     604:	cmn	w3, #0x2
     608:	b.cs	4a0 <grub_mod_init-0x1d80>  // b.hs, b.nlast
     60c:	ldr	x5, [x1, #8]
     610:	and	x5, x5, #0xfffffffffffffff
     614:	b	4a4 <grub_mod_init-0x1d7c>
     618:	mov	w2, #0x3                   	// #3
     61c:	b	584 <grub_mod_init-0x1c9c>
     620:	mov	w0, #0x20000000            	// #536870912
     624:	cmp	w3, w0
     628:	b.eq	634 <grub_mod_init-0x1bec>  // b.none
     62c:	cmn	w3, #0x2
     630:	b.cc	68c <grub_mod_init-0x1b94>  // b.lo, b.ul, b.last
     634:	cmn	w3, #0x2
     638:	b.eq	738 <grub_mod_init-0x1ae8>  // b.none
     63c:	cmn	w3, #0x1
     640:	b.ne	658 <grub_mod_init-0x1bc8>  // b.any
     644:	cmp	w2, #0x4
     648:	mov	w3, #0x2                   	// #2
     64c:	mov	w0, #0x0                   	// #0
     650:	b.ne	4f8 <grub_mod_init-0x1d28>  // b.any
     654:	ret
     658:	mov	w0, #0x10000000            	// #268435456
     65c:	cmp	w3, w0
     660:	b.eq	738 <grub_mod_init-0x1ae8>  // b.none
     664:	mov	w0, #0x20000000            	// #536870912
     668:	cmp	w3, w0
     66c:	b.eq	644 <grub_mod_init-0x1bdc>  // b.none
     670:	mov	w3, #0x5                   	// #5
     674:	b	4f8 <grub_mod_init-0x1d28>
     678:	cmp	w2, w0
     67c:	b.eq	580 <grub_mod_init-0x1ca0>  // b.none
     680:	mov	w2, #0x5                   	// #5
     684:	b	584 <grub_mod_init-0x1c9c>
     688:	cbz	w3, 56c <grub_mod_init-0x1cb4>
     68c:	ldr	x0, [x1, #8]
     690:	adrp	x1, 0 <grub_mod_init-0x2220>
     694:	ldr	x1, [x1]
     698:	lsr	x0, x0, #60
     69c:	ldr	w3, [x1, x0, lsl #2]
     6a0:	cmp	w3, #0x4
     6a4:	b.eq	5a4 <grub_mod_init-0x1c7c>  // b.none
     6a8:	b	4f8 <grub_mod_init-0x1d28>
     6ac:	mov	w2, w0
     6b0:	b	584 <grub_mod_init-0x1c9c>
     6b4:	cbz	w3, 500 <grub_mod_init-0x1d20>
     6b8:	ldr	x0, [x1, #8]
     6bc:	adrp	x1, 0 <grub_mod_init-0x2220>
     6c0:	ldr	x1, [x1]
     6c4:	lsr	x0, x0, #60
     6c8:	ldr	w3, [x1, x0, lsl #2]
     6cc:	sub	w0, w3, #0x2
     6d0:	cmp	w0, #0x1
     6d4:	b.ls	748 <grub_mod_init-0x1ad8>  // b.plast
     6d8:	mov	w2, #0x4                   	// #4
     6dc:	b	6a0 <grub_mod_init-0x1b80>
     6e0:	mov	w0, #0x20000000            	// #536870912
     6e4:	cmp	w3, w0
     6e8:	b.eq	634 <grub_mod_init-0x1bec>  // b.none
     6ec:	cmn	w3, #0x2
     6f0:	b.cs	634 <grub_mod_init-0x1bec>  // b.hs, b.nlast
     6f4:	ldr	x0, [x1, #8]
     6f8:	adrp	x1, 0 <grub_mod_init-0x2220>
     6fc:	cmp	w2, #0x4
     700:	ldr	x1, [x1]
     704:	lsr	x0, x0, #60
     708:	ldr	w3, [x1, x0, lsl #2]
     70c:	b.eq	6cc <grub_mod_init-0x1b54>  // b.none
     710:	b	6a0 <grub_mod_init-0x1b80>
     714:	mov	w0, #0x20000000            	// #536870912
     718:	cmp	w3, w0
     71c:	b.eq	728 <grub_mod_init-0x1af8>  // b.none
     720:	cmn	w3, #0x2
     724:	b.cc	6b8 <grub_mod_init-0x1b68>  // b.lo, b.ul, b.last
     728:	cmn	w3, #0x2
     72c:	b.eq	748 <grub_mod_init-0x1ad8>  // b.none
     730:	mov	w2, #0x4                   	// #4
     734:	b	63c <grub_mod_init-0x1be4>
     738:	cmp	w2, #0x4
     73c:	b.eq	748 <grub_mod_init-0x1ad8>  // b.none
     740:	mov	w3, #0x3                   	// #3
     744:	b	4f8 <grub_mod_init-0x1d28>
     748:	mov	w0, #0x0                   	// #0
     74c:	ret
     750:	mov	w3, w0
     754:	mov	w2, #0x4                   	// #4
     758:	b	4f8 <grub_mod_init-0x1d28>
     75c:	mov	w0, #0xffffffff            	// #-1
     760:	ret
     764:	mov	w3, #0x1                   	// #1
     768:	b	4f8 <grub_mod_init-0x1d28>
     76c:	nop
	...
     778:	stp	x29, x30, [sp, #-128]!
     77c:	mov	x29, sp
     780:	stp	x27, x28, [sp, #80]
     784:	mov	x28, x1
     788:	ldrh	w1, [x0, #44]
     78c:	stp	x19, x20, [sp, #16]
     790:	and	x27, x1, #0xffff
     794:	stp	x21, x22, [sp, #32]
     798:	ldr	w21, [x0, #8]
     79c:	stp	x23, x24, [sp, #48]
     7a0:	str	x0, [sp, #104]
     7a4:	mov	x0, x27
     7a8:	str	w1, [sp, #112]
     7ac:	str	x2, [sp, #120]
     7b0:	bl	0 <grub_malloc>
     7b4:	mov	x19, x0
     7b8:	cbz	x0, db0 <grub_mod_init-0x1470>
     7bc:	adrp	x0, 0 <grub_mod_init-0x2220>
     7c0:	ldr	w1, [sp, #112]
     7c4:	stp	x25, x26, [sp, #64]
     7c8:	mov	w22, #0xffff                	// #65535
     7cc:	mov	w26, #0x10000000            	// #268435456
     7d0:	ldr	x0, [x0]
     7d4:	str	x0, [sp, #96]
     7d8:	ldr	x0, [sp, #120]
     7dc:	lsr	w1, w1, #9
     7e0:	str	w1, [sp, #116]
     7e4:	str	xzr, [x0, #16]
     7e8:	ldp	w2, w0, [sp, #112]
     7ec:	mov	x4, x19
     7f0:	mov	x3, x27
     7f4:	mul	w1, w0, w21
     7f8:	ldr	x0, [sp, #104]
     7fc:	umull	x2, w2, w21
     800:	and	x2, x2, #0x1ff
     804:	ldr	x0, [x0, #120]
     808:	bl	0 <grub_disk_read>
     80c:	ldr	x0, [sp, #96]
     810:	ldr	w23, [x0]
     814:	cbnz	w23, ce0 <grub_mod_init-0x1540>
     818:	adrp	x1, 0 <grub_mod_init-0x2220>
     81c:	adrp	x2, 0 <grub_mod_init-0x2220>
     820:	adrp	x0, 0 <grub_mod_init-0x2220>
     824:	ldrh	w24, [x19]
     828:	ldr	x3, [x1]
     82c:	mov	w4, w24
     830:	ldr	x2, [x2]
     834:	mov	w1, #0x211                 	// #529
     838:	ldr	x20, [x0]
     83c:	mov	x0, x20
     840:	bl	0 <grub_real_dprintf>
     844:	adrp	x0, 0 <grub_mod_init-0x2220>
     848:	add	x0, x0, #0x0
     84c:	cmp	w24, w22
     850:	ldr	x2, [x0]
     854:	b.cs	d14 <grub_mod_init-0x150c>  // b.hs, b.nlast
     858:	adrp	x0, 0 <grub_mod_init-0x2220>
     85c:	ldrh	w25, [x19, #2]
     860:	mov	w1, #0x21a                 	// #538
     864:	add	x22, x19, #0x18
     868:	ldr	x3, [x0]
     86c:	mov	w4, w25
     870:	mov	x0, x20
     874:	bl	0 <grub_real_dprintf>
     878:	cmp	w24, #0x1
     87c:	b.ls	b9c <grub_mod_init-0x1684>  // b.plast
     880:	ubfiz	x15, x25, #4, #16
     884:	cbz	w25, 97c <grub_mod_init-0x18a4>
     888:	ldr	w12, [x28]
     88c:	mov	x3, x22
     890:	mov	x5, #0x0                   	// #0
     894:	mov	w9, #0x20000000            	// #536870912
     898:	adrp	x16, 0 <grub_mod_init-0x2220>
     89c:	nop
     8a0:	ldr	w1, [x3]
     8a4:	cmp	w12, w1
     8a8:	b.cc	c90 <grub_mod_init-0x1590>  // b.lo, b.ul, b.last
     8ac:	b.hi	960 <grub_mod_init-0x18c0>  // b.pmore
     8b0:	ldr	w11, [x3, #4]
     8b4:	ldr	w10, [x28, #4]
     8b8:	cmp	w10, w11
     8bc:	b.cc	c90 <grub_mod_init-0x1590>  // b.lo, b.ul, b.last
     8c0:	b.hi	960 <grub_mod_init-0x18c0>  // b.pmore
     8c4:	ldr	w0, [x28, #12]
     8c8:	cmp	w0, w26
     8cc:	b.eq	8e4 <grub_mod_init-0x193c>  // b.none
     8d0:	b.hi	a20 <grub_mod_init-0x1800>  // b.pmore
     8d4:	cmp	w0, #0x1f4
     8d8:	b.eq	8e4 <grub_mod_init-0x193c>  // b.none
     8dc:	cmp	w0, #0x22b
     8e0:	b.ne	988 <grub_mod_init-0x1898>  // b.any
     8e4:	ldr	w13, [x28, #8]
     8e8:	ldr	w2, [x3, #12]
     8ec:	cmp	w2, w26
     8f0:	b.eq	908 <grub_mod_init-0x1918>  // b.none
     8f4:	b.hi	a04 <grub_mod_init-0x181c>  // b.pmore
     8f8:	cmp	w2, #0x1f4
     8fc:	b.eq	908 <grub_mod_init-0x1918>  // b.none
     900:	cmp	w2, #0x22b
     904:	b.ne	998 <grub_mod_init-0x1888>  // b.any
     908:	ldr	w14, [x3, #8]
     90c:	cmp	x14, x13
     910:	b.hi	9b0 <grub_mod_init-0x1870>  // b.pmore
     914:	b.cc	960 <grub_mod_init-0x18c0>  // b.lo, b.ul, b.last
     918:	cmp	w0, w26
     91c:	b.eq	b50 <grub_mod_init-0x16d0>  // b.none
     920:	b.hi	a6c <grub_mod_init-0x17b4>  // b.pmore
     924:	cmp	w0, #0x1f4
     928:	b.eq	c54 <grub_mod_init-0x15cc>  // b.none
     92c:	cmp	w0, #0x22b
     930:	b.ne	a3c <grub_mod_init-0x17e4>  // b.any
     934:	cmp	w2, w26
     938:	b.eq	c64 <grub_mod_init-0x15bc>  // b.none
     93c:	b.hi	c6c <grub_mod_init-0x15b4>  // b.pmore
     940:	cmp	w2, #0x1f4
     944:	b.eq	ca0 <grub_mod_init-0x1580>  // b.none
     948:	cmp	w2, #0x22b
     94c:	mov	w0, #0x4                   	// #4
     950:	b.ne	9fc <grub_mod_init-0x1824>  // b.any
     954:	mov	w2, #0x4                   	// #4
     958:	cmp	w0, w2
     95c:	b.cc	9b0 <grub_mod_init-0x1870>  // b.lo, b.ul, b.last
     960:	add	w0, w5, #0x1
     964:	add	x5, x5, #0x1
     968:	add	x3, x3, #0x10
     96c:	and	w0, w0, #0xffff
     970:	cmp	w25, w5, uxth
     974:	b.hi	8a0 <grub_mod_init-0x1980>  // b.pmore
     978:	add	x15, x15, w0, uxth #3
     97c:	ldr	w21, [x22, x15]
     980:	mov	w22, w24
     984:	b	7e8 <grub_mod_init-0x1a38>
     988:	cbz	w0, 8e4 <grub_mod_init-0x193c>
     98c:	ldr	x13, [x28, #8]
     990:	and	x13, x13, #0xfffffffffffffff
     994:	b	8e8 <grub_mod_init-0x1938>
     998:	cbz	w2, 908 <grub_mod_init-0x1918>
     99c:	ldr	x14, [x3, #8]
     9a0:	and	x14, x14, #0xfffffffffffffff
     9a4:	nop
     9a8:	cmp	x14, x13
     9ac:	b.ls	914 <grub_mod_init-0x190c>  // b.plast
     9b0:	add	x5, x22, x5, lsl #3
     9b4:	cmp	w12, w1
     9b8:	ldr	w21, [x5, x15]
     9bc:	b.ne	980 <grub_mod_init-0x18a0>  // b.any
     9c0:	cmp	w10, w11
     9c4:	b.ne	980 <grub_mod_init-0x18a0>  // b.any
     9c8:	ldr	w0, [x3, #12]
     9cc:	cmp	w0, w26
     9d0:	b.eq	9e8 <grub_mod_init-0x1838>  // b.none
     9d4:	b.hi	cc0 <grub_mod_init-0x1560>  // b.pmore
     9d8:	cmp	w0, #0x1f4
     9dc:	b.eq	9e8 <grub_mod_init-0x1838>  // b.none
     9e0:	cmp	w0, #0x22b
     9e4:	b.ne	cb0 <grub_mod_init-0x1570>  // b.any
     9e8:	ldr	w0, [x3, #8]
     9ec:	ldr	x1, [sp, #120]
     9f0:	mov	w22, w24
     9f4:	str	x0, [x1, #16]
     9f8:	b	7e8 <grub_mod_init-0x1a38>
     9fc:	cbz	w2, 960 <grub_mod_init-0x18c0>
     a00:	b	c7c <grub_mod_init-0x15a4>
     a04:	cmp	w2, w9
     a08:	b.eq	908 <grub_mod_init-0x1918>  // b.none
     a0c:	cmn	w2, #0x2
     a10:	b.cs	908 <grub_mod_init-0x1918>  // b.hs, b.nlast
     a14:	ldr	x14, [x3, #8]
     a18:	and	x14, x14, #0xfffffffffffffff
     a1c:	b	9a8 <grub_mod_init-0x1878>
     a20:	cmp	w0, w9
     a24:	b.eq	8e4 <grub_mod_init-0x193c>  // b.none
     a28:	cmn	w0, #0x2
     a2c:	b.cs	8e4 <grub_mod_init-0x193c>  // b.hs, b.nlast
     a30:	ldr	x13, [x28, #8]
     a34:	and	x13, x13, #0xfffffffffffffff
     a38:	b	8e8 <grub_mod_init-0x1938>
     a3c:	cbnz	w0, a7c <grub_mod_init-0x17a4>
     a40:	cmp	w2, w26
     a44:	b.eq	a98 <grub_mod_init-0x1788>  // b.none
     a48:	b.hi	b58 <grub_mod_init-0x16c8>  // b.pmore
     a4c:	cmp	w2, #0x1f4
     a50:	b.eq	ca8 <grub_mod_init-0x1578>  // b.none
     a54:	cmp	w2, #0x22b
     a58:	b.ne	b94 <grub_mod_init-0x168c>  // b.any
     a5c:	sub	w2, w0, #0x2
     a60:	cmp	w2, #0x1
     a64:	b.hi	954 <grub_mod_init-0x18cc>  // b.pmore
     a68:	b	960 <grub_mod_init-0x18c0>
     a6c:	cmp	w0, w9
     a70:	b.eq	acc <grub_mod_init-0x1754>  // b.none
     a74:	cmn	w0, #0x2
     a78:	b.cs	ab8 <grub_mod_init-0x1768>  // b.hs, b.nlast
     a7c:	ldr	x0, [x28, #8]
     a80:	cmp	w2, w26
     a84:	ldr	x13, [x16]
     a88:	lsr	x0, x0, #60
     a8c:	ldr	w0, [x13, x0, lsl #2]
     a90:	b.ne	a48 <grub_mod_init-0x17d8>  // b.any
     a94:	nop
     a98:	cmn	w2, #0x2
     a9c:	b.eq	b40 <grub_mod_init-0x16e0>  // b.none
     aa0:	cmn	w2, #0x1
     aa4:	b.ne	b0c <grub_mod_init-0x1714>  // b.any
     aa8:	cmp	w0, #0x4
     aac:	mov	w2, #0x2                   	// #2
     ab0:	b.ne	958 <grub_mod_init-0x18c8>  // b.any
     ab4:	b	960 <grub_mod_init-0x18c0>
     ab8:	b.eq	b50 <grub_mod_init-0x16d0>  // b.none
     abc:	cmn	w0, #0x1
     ac0:	b.eq	acc <grub_mod_init-0x1754>  // b.none
     ac4:	cmp	w0, w9
     ac8:	b.ne	e10 <grub_mod_init-0x1410>  // b.any
     acc:	mov	w0, #0x2                   	// #2
     ad0:	cmp	w2, w26
     ad4:	b.eq	a98 <grub_mod_init-0x1788>  // b.none
     ad8:	b.hi	b24 <grub_mod_init-0x16fc>  // b.pmore
     adc:	cmp	w2, #0x1f4
     ae0:	b.eq	ca8 <grub_mod_init-0x1578>  // b.none
     ae4:	cmp	w2, #0x22b
     ae8:	b.eq	a5c <grub_mod_init-0x17c4>  // b.none
     aec:	cbz	w2, 960 <grub_mod_init-0x18c0>
     af0:	ldr	x2, [x3, #8]
     af4:	ldr	x13, [x16]
     af8:	lsr	x2, x2, #60
     afc:	ldr	w2, [x13, x2, lsl #2]
     b00:	cmp	w2, #0x4
     b04:	b.eq	a5c <grub_mod_init-0x17c4>  // b.none
     b08:	b	958 <grub_mod_init-0x18c8>
     b0c:	cmp	w2, w26
     b10:	b.eq	b40 <grub_mod_init-0x16e0>  // b.none
     b14:	cmp	w2, w9
     b18:	b.eq	aa8 <grub_mod_init-0x1778>  // b.none
     b1c:	mov	w2, #0x5                   	// #5
     b20:	b	958 <grub_mod_init-0x18c8>
     b24:	cmp	w2, w9
     b28:	b.eq	a98 <grub_mod_init-0x1788>  // b.none
     b2c:	cmn	w2, #0x2
     b30:	b.cc	af0 <grub_mod_init-0x1730>  // b.lo, b.ul, b.last
     b34:	cmn	w2, #0x2
     b38:	b.ne	aa0 <grub_mod_init-0x1780>  // b.any
     b3c:	nop
     b40:	cmp	w0, #0x4
     b44:	b.eq	960 <grub_mod_init-0x18c0>  // b.none
     b48:	mov	w2, #0x3                   	// #3
     b4c:	b	958 <grub_mod_init-0x18c8>
     b50:	mov	w0, #0x3                   	// #3
     b54:	b	ad0 <grub_mod_init-0x1750>
     b58:	cmp	w2, w9
     b5c:	b.eq	a98 <grub_mod_init-0x1788>  // b.none
     b60:	cmn	w2, #0x2
     b64:	b.cs	a98 <grub_mod_init-0x1788>  // b.hs, b.nlast
     b68:	ldr	x2, [x3, #8]
     b6c:	cmp	w0, #0x4
     b70:	ldr	x13, [x16]
     b74:	lsr	x2, x2, #60
     b78:	ldr	w2, [x13, x2, lsl #2]
     b7c:	b.ne	b00 <grub_mod_init-0x1720>  // b.any
     b80:	sub	w0, w2, #0x2
     b84:	cmp	w0, #0x1
     b88:	b.ls	960 <grub_mod_init-0x18c0>  // b.plast
     b8c:	mov	w0, #0x4                   	// #4
     b90:	b	b00 <grub_mod_init-0x1720>
     b94:	cbz	w2, 960 <grub_mod_init-0x18c0>
     b98:	b	b68 <grub_mod_init-0x16b8>
     b9c:	cbz	w25, c00 <grub_mod_init-0x1620>
     ba0:	ldr	w9, [x28]
     ba4:	mov	x6, x22
     ba8:	mov	w8, #0x0                   	// #0
     bac:	b	bc4 <grub_mod_init-0x165c>
     bb0:	add	w0, w8, #0x1
     bb4:	add	x6, x6, #0x18
     bb8:	and	w8, w0, #0xffff
     bbc:	cmp	w25, w0, uxth
     bc0:	b.eq	c00 <grub_mod_init-0x1620>  // b.none
     bc4:	ldr	w2, [x6]
     bc8:	mov	x1, x6
     bcc:	mov	x0, x28
     bd0:	cmp	w9, w2
     bd4:	b.cc	c00 <grub_mod_init-0x1620>  // b.lo, b.ul, b.last
     bd8:	b.hi	bb0 <grub_mod_init-0x1670>  // b.pmore
     bdc:	ldr	w2, [x6, #4]
     be0:	ldr	w3, [x28, #4]
     be4:	cmp	w3, w2
     be8:	b.cc	c00 <grub_mod_init-0x1620>  // b.lo, b.ul, b.last
     bec:	b.hi	bb0 <grub_mod_init-0x1670>  // b.pmore
     bf0:	bl	450 <grub_mod_init-0x1dd0>
     bf4:	cmp	w0, #0x0
     bf8:	cbz	w0, dc0 <grub_mod_init-0x1460>
     bfc:	b.ge	bb0 <grub_mod_init-0x1670>  // b.tcont
     c00:	ldr	x0, [sp, #120]
     c04:	ldr	x1, [sp, #104]
     c08:	str	x1, [x0]
     c0c:	mov	x1, x0
     c10:	mov	w0, #0x5                   	// #5
     c14:	str	wzr, [x1, #8]
     c18:	strh	wzr, [x1, #12]
     c1c:	str	w0, [x1, #40]
     c20:	ldr	x0, [sp, #96]
     c24:	ldr	w0, [x0]
     c28:	cbnz	w0, df8 <grub_mod_init-0x1428>
     c2c:	mov	x0, x19
     c30:	bl	0 <grub_free>
     c34:	mov	w0, w23
     c38:	ldp	x19, x20, [sp, #16]
     c3c:	ldp	x21, x22, [sp, #32]
     c40:	ldp	x23, x24, [sp, #48]
     c44:	ldp	x25, x26, [sp, #64]
     c48:	ldp	x27, x28, [sp, #80]
     c4c:	ldp	x29, x30, [sp], #128
     c50:	ret
     c54:	mov	w0, #0x1                   	// #1
     c58:	b	ad0 <grub_mod_init-0x1750>
     c5c:	cmn	w2, #0x2
     c60:	b.eq	960 <grub_mod_init-0x18c0>  // b.none
     c64:	mov	w0, #0x4                   	// #4
     c68:	b	aa0 <grub_mod_init-0x1780>
     c6c:	cmp	w2, w9
     c70:	b.eq	c5c <grub_mod_init-0x15c4>  // b.none
     c74:	cmn	w2, #0x2
     c78:	b.cs	c5c <grub_mod_init-0x15c4>  // b.hs, b.nlast
     c7c:	ldr	x0, [x3, #8]
     c80:	ldr	x2, [x16]
     c84:	lsr	x0, x0, #60
     c88:	ldr	w2, [x2, x0, lsl #2]
     c8c:	b	b80 <grub_mod_init-0x16a0>
     c90:	add	x5, x22, x5, lsl #3
     c94:	mov	w22, w24
     c98:	ldr	w21, [x5, x15]
     c9c:	b	7e8 <grub_mod_init-0x1a38>
     ca0:	mov	w0, #0x4                   	// #4
     ca4:	nop
     ca8:	mov	w2, #0x1                   	// #1
     cac:	b	958 <grub_mod_init-0x18c8>
     cb0:	cbz	w0, 9e8 <grub_mod_init-0x1838>
     cb4:	ldr	x0, [x3, #8]
     cb8:	and	x0, x0, #0xfffffffffffffff
     cbc:	b	9ec <grub_mod_init-0x1834>
     cc0:	mov	w1, #0x20000000            	// #536870912
     cc4:	cmp	w0, w1
     cc8:	b.eq	9e8 <grub_mod_init-0x1838>  // b.none
     ccc:	cmn	w0, #0x2
     cd0:	b.cs	9e8 <grub_mod_init-0x1838>  // b.hs, b.nlast
     cd4:	ldr	x0, [x3, #8]
     cd8:	and	x0, x0, #0xfffffffffffffff
     cdc:	b	9ec <grub_mod_init-0x1834>
     ce0:	ldp	x25, x26, [sp, #64]
     ce4:	mov	x0, x19
     ce8:	bl	0 <grub_free>
     cec:	ldr	x0, [sp, #96]
     cf0:	ldr	w23, [x0]
     cf4:	cbz	w23, d74 <grub_mod_init-0x14ac>
     cf8:	mov	w0, w23
     cfc:	ldp	x19, x20, [sp, #16]
     d00:	ldp	x21, x22, [sp, #32]
     d04:	ldp	x23, x24, [sp, #48]
     d08:	ldp	x27, x28, [sp, #80]
     d0c:	ldp	x29, x30, [sp], #128
     d10:	ret
     d14:	adrp	x3, 0 <grub_mod_init-0x2220>
     d18:	mov	x0, x20
     d1c:	mov	w1, #0x214                 	// #532
     d20:	ldr	x3, [x3]
     d24:	bl	0 <grub_real_dprintf>
     d28:	adrp	x1, 0 <grub_mod_init-0x2220>
     d2c:	mov	w0, #0x9                   	// #9
     d30:	ldr	x1, [x1]
     d34:	bl	0 <grub_error>
     d38:	ldp	x25, x26, [sp, #64]
     d3c:	ldr	x0, [sp, #96]
     d40:	ldr	w0, [x0]
     d44:	cbnz	w0, ce4 <grub_mod_init-0x153c>
     d48:	adrp	x1, 0 <grub_mod_init-0x2220>
     d4c:	adrp	x0, 0 <grub_mod_init-0x2220>
     d50:	mov	w2, #0x292                 	// #658
     d54:	ldr	x1, [x1]
     d58:	ldr	x0, [x0]
     d5c:	bl	0 <grub_printf>
     d60:	mov	x0, x19
     d64:	bl	0 <grub_free>
     d68:	ldr	x0, [sp, #96]
     d6c:	ldr	w23, [x0]
     d70:	cbnz	w23, cf8 <grub_mod_init-0x1528>
     d74:	adrp	x1, 0 <grub_mod_init-0x2220>
     d78:	adrp	x0, 0 <grub_mod_init-0x2220>
     d7c:	mov	w2, #0x294                 	// #660
     d80:	ldr	x1, [x1]
     d84:	ldr	x0, [x0]
     d88:	bl	0 <grub_printf>
     d8c:	ldr	x0, [sp, #96]
     d90:	ldp	x19, x20, [sp, #16]
     d94:	ldr	w23, [x0]
     d98:	ldp	x21, x22, [sp, #32]
     d9c:	mov	w0, w23
     da0:	ldp	x23, x24, [sp, #48]
     da4:	ldp	x27, x28, [sp, #80]
     da8:	ldp	x29, x30, [sp], #128
     dac:	ret
     db0:	adrp	x0, 0 <grub_mod_init-0x2220>
     db4:	ldr	x0, [x0]
     db8:	str	x0, [sp, #96]
     dbc:	b	d3c <grub_mod_init-0x14e4>
     dc0:	ldr	x3, [sp, #120]
     dc4:	mov	x0, x6
     dc8:	ldr	x1, [sp, #104]
     dcc:	str	x1, [x3]
     dd0:	str	w21, [x3, #8]
     dd4:	strh	w8, [x3, #12]
     dd8:	bl	0 <grub_mod_init-0x2220>
     ddc:	str	w0, [x3, #40]
     de0:	mov	w1, #0x18                  	// #24
     de4:	add	x0, x3, #0x2c
     de8:	mov	x2, #0x18                  	// #24
     dec:	umaddl	x1, w8, w1, x22
     df0:	bl	0 <grub_memmove>
     df4:	b	c20 <grub_mod_init-0x1600>
     df8:	adrp	x0, 0 <grub_mod_init-0x2220>
     dfc:	mov	x1, x20
     e00:	mov	w2, #0x28d                 	// #653
     e04:	ldr	x0, [x0]
     e08:	bl	0 <grub_printf>
     e0c:	b	c2c <grub_mod_init-0x15f4>
     e10:	mov	w0, #0x5                   	// #5
     e14:	b	ad0 <grub_mod_init-0x1750>
	...
     e60:	stp	x29, x30, [sp, #-288]!
     e64:	mov	x29, sp
     e68:	ldr	x7, [x0]
     e6c:	stp	x27, x28, [sp, #80]
     e70:	mov	x27, x1
     e74:	ldur	x6, [x0, #44]
     e78:	mov	x1, #0xf000000000000000    	// #-1152921504606846976
     e7c:	stp	x19, x20, [sp, #16]
     e80:	mov	x19, x0
     e84:	add	x0, sp, #0xc8
     e88:	stp	x21, x22, [sp, #32]
     e8c:	stp	x23, x24, [sp, #48]
     e90:	stp	x25, x26, [sp, #64]
     e94:	str	x7, [sp, #96]
     e98:	str	x2, [sp, #112]
     e9c:	stp	x3, x4, [sp, #168]
     ea0:	str	x5, [sp, #184]
     ea4:	stp	x6, x1, [sp, #200]
     ea8:	bl	0 <grub_mod_init-0x2220>
     eac:	ldrh	w1, [x7, #44]
     eb0:	str	w1, [sp, #164]
     eb4:	cmp	w0, #0x4
     eb8:	b.ne	1570 <grub_mod_init-0xcb0>  // b.any
     ebc:	adrp	x1, 0 <grub_mod_init-0x2220>
     ec0:	ldr	x22, [x1]
     ec4:	adrp	x3, 0 <grub_mod_init-0x2220>
     ec8:	ldr	x7, [sp, #168]
     ecc:	adrp	x2, 0 <grub_mod_init-0x2220>
     ed0:	ldr	x1, [x19, #32]
     ed4:	add	x0, x27, x7
     ed8:	ldr	x2, [x2]
     edc:	cmp	x0, x1
     ee0:	ldr	x3, [x3]
     ee4:	csel	x0, x0, x1, ls  // ls = plast
     ee8:	sub	x6, x0, x27
     eec:	mov	x5, x0
     ef0:	mov	w1, #0x438                 	// #1080
     ef4:	mov	x4, x27
     ef8:	str	x0, [sp, #120]
     efc:	mov	x0, x22
     f00:	str	x2, [sp, #152]
     f04:	bl	0 <grub_real_dprintf>
     f08:	ldr	w0, [sp, #212]
     f0c:	mov	w2, #0x10000000            	// #268435456
     f10:	add	x1, x27, #0x1
     f14:	cmp	w0, w2
     f18:	b.eq	f30 <grub_mod_init-0x12f0>  // b.none
     f1c:	b.hi	13f4 <grub_mod_init-0xe2c>  // b.pmore
     f20:	cmp	w0, #0x1f4
     f24:	b.eq	f30 <grub_mod_init-0x12f0>  // b.none
     f28:	cmp	w0, #0x22b
     f2c:	b.ne	10b8 <grub_mod_init-0x1168>  // b.any
     f30:	str	w1, [sp, #208]
     f34:	ldr	x0, [sp, #96]
     f38:	ldrh	w1, [x0, #44]
     f3c:	ldr	w23, [x0, #8]
     f40:	and	x25, x1, #0xffff
     f44:	mov	w19, w1
     f48:	mov	x0, x25
     f4c:	bl	0 <grub_malloc>
     f50:	mov	x21, x0
     f54:	adrp	x0, 0 <grub_mod_init-0x2220>
     f58:	cbz	x21, 168c <grub_mod_init-0xb94>
     f5c:	mov	w1, w19
     f60:	str	x27, [sp, #104]
     f64:	ldr	x28, [x0]
     f68:	mov	w27, w1
     f6c:	lsr	w2, w19, #9
     f70:	adrp	x26, 0 <grub_mod_init-0x2220>
     f74:	mov	w19, #0xffff                	// #65535
     f78:	str	w2, [sp, #160]
     f7c:	str	xzr, [sp, #232]
     f80:	ldr	w0, [sp, #160]
     f84:	umull	x2, w27, w23
     f88:	mov	x4, x21
     f8c:	mov	x3, x25
     f90:	and	x2, x2, #0x1ff
     f94:	mul	w1, w0, w23
     f98:	ldr	x0, [sp, #96]
     f9c:	ldr	x0, [x0, #120]
     fa0:	bl	0 <grub_disk_read>
     fa4:	ldr	w0, [x28]
     fa8:	cbnz	w0, 146c <grub_mod_init-0xdb4>
     fac:	adrp	x0, 0 <grub_mod_init-0x2220>
     fb0:	ldrh	w20, [x21]
     fb4:	ldr	x24, [x26]
     fb8:	mov	w4, w20
     fbc:	ldr	x3, [x0]
     fc0:	mov	x2, x24
     fc4:	mov	x0, x22
     fc8:	mov	w1, #0x211                 	// #529
     fcc:	bl	0 <grub_real_dprintf>
     fd0:	cmp	w20, w19
     fd4:	b.cs	1590 <grub_mod_init-0xc90>  // b.hs, b.nlast
     fd8:	adrp	x0, 0 <grub_mod_init-0x2220>
     fdc:	mov	x2, x24
     fe0:	ldrh	w24, [x21, #2]
     fe4:	mov	w1, #0x21a                 	// #538
     fe8:	ldr	x3, [x0]
     fec:	mov	w4, w24
     ff0:	mov	x0, x22
     ff4:	add	x19, x21, #0x18
     ff8:	bl	0 <grub_real_dprintf>
     ffc:	cmp	w20, #0x1
    1000:	b.ls	10c0 <grub_mod_init-0x1160>  // b.plast
    1004:	ubfiz	x9, x24, #4, #16
    1008:	cbz	w24, 13dc <grub_mod_init-0xe44>
    100c:	ldp	w11, w12, [sp, #200]
    1010:	mov	x7, x19
    1014:	mov	x6, #0x0                   	// #0
    1018:	b	1034 <grub_mod_init-0x11ec>
    101c:	add	w0, w6, #0x1
    1020:	add	x6, x6, #0x1
    1024:	add	x7, x7, #0x10
    1028:	and	w0, w0, #0xffff
    102c:	cmp	w24, w6, uxth
    1030:	b.ls	13e8 <grub_mod_init-0xe38>  // b.plast
    1034:	ldr	w8, [x7]
    1038:	mov	x1, x7
    103c:	add	x0, sp, #0xc8
    1040:	cmp	w11, w8
    1044:	b.cc	13d8 <grub_mod_init-0xe48>  // b.lo, b.ul, b.last
    1048:	b.hi	101c <grub_mod_init-0x1204>  // b.pmore
    104c:	ldr	w10, [x7, #4]
    1050:	cmp	w12, w10
    1054:	b.cc	13d8 <grub_mod_init-0xe48>  // b.lo, b.ul, b.last
    1058:	b.hi	101c <grub_mod_init-0x1204>  // b.pmore
    105c:	bl	450 <grub_mod_init-0x1dd0>
    1060:	tbz	w0, #31, 101c <grub_mod_init-0x1204>
    1064:	add	x19, x19, x6, lsl #3
    1068:	cmp	w11, w8
    106c:	ldr	w23, [x19, x9]
    1070:	b.eq	107c <grub_mod_init-0x11a4>  // b.none
    1074:	mov	w19, w20
    1078:	b	f80 <grub_mod_init-0x12a0>
    107c:	cmp	w12, w10
    1080:	b.ne	1074 <grub_mod_init-0x11ac>  // b.any
    1084:	ldr	w0, [x7, #12]
    1088:	mov	w1, #0x10000000            	// #268435456
    108c:	cmp	w0, w1
    1090:	b.eq	10a8 <grub_mod_init-0x1178>  // b.none
    1094:	b.hi	1550 <grub_mod_init-0xcd0>  // b.pmore
    1098:	cmp	w0, #0x1f4
    109c:	b.eq	10a8 <grub_mod_init-0x1178>  // b.none
    10a0:	cmp	w0, #0x22b
    10a4:	b.ne	1418 <grub_mod_init-0xe08>  // b.any
    10a8:	ldr	w0, [x7, #8]
    10ac:	str	x0, [sp, #232]
    10b0:	mov	w19, w20
    10b4:	b	f80 <grub_mod_init-0x12a0>
    10b8:	cbz	w0, f30 <grub_mod_init-0x12f0>
    10bc:	b	1408 <grub_mod_init-0xe18>
    10c0:	ldr	x27, [sp, #104]
    10c4:	cbz	w24, 1694 <grub_mod_init-0xb8c>
    10c8:	ldp	w10, w9, [sp, #200]
    10cc:	mov	x6, x19
    10d0:	mov	w7, #0x0                   	// #0
    10d4:	b	10ec <grub_mod_init-0x1134>
    10d8:	add	w0, w7, #0x1
    10dc:	add	x6, x6, #0x18
    10e0:	and	w7, w0, #0xffff
    10e4:	cmp	w24, w0, uxth
    10e8:	b.eq	1144 <grub_mod_init-0x10dc>  // b.none
    10ec:	ldr	w2, [x6]
    10f0:	mov	x1, x6
    10f4:	add	x0, sp, #0xc8
    10f8:	mov	x8, x6
    10fc:	cmp	w10, w2
    1100:	b.cc	1128 <grub_mod_init-0x10f8>  // b.lo, b.ul, b.last
    1104:	b.hi	10d8 <grub_mod_init-0x1148>  // b.pmore
    1108:	ldr	w2, [x6, #4]
    110c:	cmp	w9, w2
    1110:	b.cc	1128 <grub_mod_init-0x10f8>  // b.lo, b.ul, b.last
    1114:	b.hi	10d8 <grub_mod_init-0x1148>  // b.pmore
    1118:	bl	450 <grub_mod_init-0x1dd0>
    111c:	cmp	w0, #0x0
    1120:	cbz	w0, 1154 <grub_mod_init-0x10cc>
    1124:	b.ge	10d8 <grub_mod_init-0x1148>  // b.tcont
    1128:	cbz	w7, 1694 <grub_mod_init-0xb8c>
    112c:	sub	w7, w7, #0x1
    1130:	mov	w8, #0x18                  	// #24
    1134:	and	w7, w7, #0xffff
    1138:	cmp	w24, w7
    113c:	umaddl	x8, w7, w8, x19
    1140:	b.ne	1154 <grub_mod_init-0x10cc>  // b.any
    1144:	sub	w7, w7, #0x1
    1148:	mov	w8, #0x18                  	// #24
    114c:	and	w7, w7, #0xffff
    1150:	umaddl	x8, w7, w8, x19
    1154:	ldr	x0, [sp, #96]
    1158:	str	x0, [sp, #216]
    115c:	mov	x0, x8
    1160:	str	w23, [sp, #224]
    1164:	strh	w7, [sp, #228]
    1168:	bl	0 <grub_mod_init-0x2220>
    116c:	mov	w1, #0x18                  	// #24
    1170:	mov	w3, w0
    1174:	mov	x2, #0x18                  	// #24
    1178:	add	x0, sp, #0x104
    117c:	umaddl	x1, w7, w1, x19
    1180:	str	w3, [sp, #256]
    1184:	bl	0 <grub_memmove>
    1188:	ldr	w0, [x28]
    118c:	cbnz	w0, 1674 <grub_mod_init-0xbac>
    1190:	mov	x0, x21
    1194:	bl	0 <grub_free>
    1198:	ldr	w0, [sp, #224]
    119c:	cbz	w0, 16a8 <grub_mod_init-0xb78>
    11a0:	ldr	w0, [sp, #272]
    11a4:	mov	w1, #0x10000000            	// #268435456
    11a8:	cmp	w0, w1
    11ac:	b.eq	11c4 <grub_mod_init-0x105c>  // b.none
    11b0:	b.hi	14a8 <grub_mod_init-0xd78>  // b.pmore
    11b4:	cmp	w0, #0x1f4
    11b8:	b.eq	11c4 <grub_mod_init-0x105c>  // b.none
    11bc:	cmp	w0, #0x22b
    11c0:	b.ne	1440 <grub_mod_init-0xde0>  // b.any
    11c4:	ldr	w1, [sp, #268]
    11c8:	ldr	x23, [sp, #120]
    11cc:	sub	x26, x1, #0x1
    11d0:	cmp	x23, x26
    11d4:	b.ls	1508 <grub_mod_init-0xd18>  // b.plast
    11d8:	ldr	w0, [sp, #164]
    11dc:	str	x28, [sp, #144]
    11e0:	lsr	w0, w0, #9
    11e4:	str	w0, [sp, #160]
    11e8:	ldr	w0, [sp, #212]
    11ec:	mov	w2, #0x10000000            	// #268435456
    11f0:	cmp	w0, w2
    11f4:	b.eq	120c <grub_mod_init-0x1014>  // b.none
    11f8:	b.hi	1454 <grub_mod_init-0xdcc>  // b.pmore
    11fc:	cmp	w0, #0x1f4
    1200:	b.eq	120c <grub_mod_init-0x1014>  // b.none
    1204:	cmp	w0, #0x22b
    1208:	b.ne	142c <grub_mod_init-0xdf4>  // b.any
    120c:	str	w1, [sp, #208]
    1210:	ldr	x0, [sp, #96]
    1214:	add	x2, sp, #0xd8
    1218:	add	x1, sp, #0xc8
    121c:	bl	778 <grub_mod_init-0x1aa8>
    1220:	cbnz	w0, 14a0 <grub_mod_init-0xd80>
    1224:	ldr	w1, [sp, #224]
    1228:	cbz	w1, 14a0 <grub_mod_init-0xd80>
    122c:	ldr	w0, [sp, #256]
    1230:	ldrh	w19, [sp, #278]
    1234:	cmp	w0, #0x2
    1238:	b.eq	14c0 <grub_mod_init-0xd60>  // b.none
    123c:	cmp	w0, #0x3
    1240:	b.ne	14a0 <grub_mod_init-0xd80>  // b.any
    1244:	and	x21, x19, #0xffff
    1248:	lsr	w19, w19, #2
    124c:	mov	x0, x21
    1250:	str	w19, [sp, #104]
    1254:	bl	0 <grub_malloc>
    1258:	mov	x20, x0
    125c:	cbz	x0, 14a0 <grub_mod_init-0xd80>
    1260:	ldr	w5, [sp, #160]
    1264:	mov	x4, x0
    1268:	ldr	w1, [sp, #224]
    126c:	mov	x3, x21
    1270:	ldr	x0, [sp, #216]
    1274:	ldrh	w2, [sp, #280]
    1278:	mul	w1, w5, w1
    127c:	ldr	x0, [x0, #120]
    1280:	bl	0 <grub_disk_read>
    1284:	ldr	x0, [sp, #144]
    1288:	ldr	w0, [x0]
    128c:	cbnz	w0, 13b0 <grub_mod_init-0xe70>
    1290:	ldr	x0, [sp, #216]
    1294:	cmp	w19, #0x0
    1298:	ldr	x1, [sp, #176]
    129c:	ccmp	x23, x26, #0x0, ne  // ne = any
    12a0:	ldr	x0, [x0, #120]
    12a4:	str	x1, [x0, #48]
    12a8:	ldr	x1, [sp, #184]
    12ac:	str	x1, [x0, #56]
    12b0:	b.ls	1540 <grub_mod_init-0xce0>  // b.plast
    12b4:	adrp	x0, 0 <grub_mod_init-0x2220>
    12b8:	adrp	x1, 0 <grub_mod_init-0x2220>
    12bc:	mov	x28, x26
    12c0:	mov	x19, #0x0                   	// #0
    12c4:	ldrh	w21, [sp, #164]
    12c8:	mov	x26, x19
    12cc:	ldr	x25, [x0]
    12d0:	ldr	x24, [x1]
    12d4:	b	1300 <grub_mod_init-0xf20>
    12d8:	mov	x28, x0
    12dc:	ldr	w1, [sp, #104]
    12e0:	add	w0, w26, #0x1
    12e4:	add	x26, x26, #0x1
    12e8:	cmp	w1, w0
    12ec:	cset	w1, hi  // hi = pmore
    12f0:	cmp	x28, x23
    12f4:	cset	w0, cc  // cc = lo, ul, last
    12f8:	tst	w1, w0
    12fc:	b.eq	1534 <grub_mod_init-0xcec>  // b.none
    1300:	ldr	w4, [x20, x26, lsl #2]
    1304:	mov	x0, x22
    1308:	ldr	w5, [sp, #160]
    130c:	mov	x3, x24
    1310:	mov	x2, x25
    1314:	mov	w1, #0x489                 	// #1161
    1318:	mul	w19, w5, w4
    131c:	mov	w4, w19
    1320:	bl	0 <grub_real_dprintf>
    1324:	add	x0, x21, x28
    1328:	cmp	x0, x27
    132c:	b.cc	12d8 <grub_mod_init-0xf48>  // b.lo, b.ul, b.last
    1330:	subs	w5, w27, w28
    1334:	sub	x9, x23, x28
    1338:	csel	w5, w5, wzr, pl  // pl = nfrst
    133c:	adrp	x0, 0 <grub_mod_init-0x2220>
    1340:	cmp	x9, x21
    1344:	mov	w4, w19
    1348:	sxtw	x11, w5
    134c:	csel	x9, x9, x21, ls  // ls = plast
    1350:	ldr	x3, [x0]
    1354:	sub	x10, x9, x11
    1358:	ldr	x2, [sp, #152]
    135c:	add	w6, w5, w10
    1360:	mov	x0, x22
    1364:	mov	w1, #0x490                 	// #1168
    1368:	stp	x10, x9, [sp, #120]
    136c:	str	x11, [sp, #136]
    1370:	bl	0 <grub_real_dprintf>
    1374:	ldp	x4, x10, [sp, #112]
    1378:	mov	w1, w19
    137c:	ldr	x0, [sp, #216]
    1380:	ldp	x9, x11, [sp, #128]
    1384:	ldr	x0, [x0, #120]
    1388:	add	x5, x4, x10
    138c:	mov	x3, x10
    1390:	str	x5, [sp, #112]
    1394:	add	x28, x28, x9
    1398:	mov	x2, x11
    139c:	bl	0 <grub_disk_read>
    13a0:	ldr	x0, [sp, #144]
    13a4:	ldr	w0, [x0]
    13a8:	cbz	w0, 12dc <grub_mod_init-0xf44>
    13ac:	nop
    13b0:	mov	x0, x20
    13b4:	bl	0 <grub_free>
    13b8:	mov	x0, #0xffffffffffffffff    	// #-1
    13bc:	ldp	x19, x20, [sp, #16]
    13c0:	ldp	x21, x22, [sp, #32]
    13c4:	ldp	x23, x24, [sp, #48]
    13c8:	ldp	x25, x26, [sp, #64]
    13cc:	ldp	x27, x28, [sp, #80]
    13d0:	ldp	x29, x30, [sp], #288
    13d4:	ret
    13d8:	add	x19, x19, x6, lsl #3
    13dc:	ldr	w23, [x19, x9]
    13e0:	mov	w19, w20
    13e4:	b	f80 <grub_mod_init-0x12a0>
    13e8:	add	x9, x9, w0, uxth #3
    13ec:	ldr	w23, [x19, x9]
    13f0:	b	13e0 <grub_mod_init-0xe40>
    13f4:	mov	w2, #0x20000000            	// #536870912
    13f8:	cmp	w0, w2
    13fc:	b.eq	f30 <grub_mod_init-0x12f0>  // b.none
    1400:	cmn	w0, #0x2
    1404:	b.cs	f30 <grub_mod_init-0x12f0>  // b.hs, b.nlast
    1408:	ldr	x0, [sp, #208]
    140c:	bfxil	x0, x1, #0, #60
    1410:	str	x0, [sp, #208]
    1414:	b	f34 <grub_mod_init-0x12ec>
    1418:	cbz	w0, 10a8 <grub_mod_init-0x1178>
    141c:	ldr	x0, [x7, #8]
    1420:	and	x0, x0, #0xfffffffffffffff
    1424:	str	x0, [sp, #232]
    1428:	b	10b0 <grub_mod_init-0x1170>
    142c:	cbz	w0, 120c <grub_mod_init-0x1014>
    1430:	ldr	x0, [sp, #208]
    1434:	bfxil	x0, x1, #0, #60
    1438:	str	x0, [sp, #208]
    143c:	b	1210 <grub_mod_init-0x1010>
    1440:	cbz	w0, 11c4 <grub_mod_init-0x105c>
    1444:	add	x0, sp, #0x200
    1448:	ldur	x1, [x0, #-244]
    144c:	and	x1, x1, #0xfffffffffffffff
    1450:	b	11c8 <grub_mod_init-0x1058>
    1454:	mov	w2, #0x20000000            	// #536870912
    1458:	cmp	w0, w2
    145c:	b.eq	120c <grub_mod_init-0x1014>  // b.none
    1460:	cmn	w0, #0x2
    1464:	b.cc	1430 <grub_mod_init-0xdf0>  // b.lo, b.ul, b.last
    1468:	b	120c <grub_mod_init-0x1014>
    146c:	ldr	x27, [sp, #104]
    1470:	mov	x0, x21
    1474:	bl	0 <grub_free>
    1478:	ldr	w0, [x28]
    147c:	cbnz	w0, 14a0 <grub_mod_init-0xd80>
    1480:	adrp	x0, 0 <grub_mod_init-0x2220>
    1484:	mov	x1, x22
    1488:	mov	w2, #0x294                 	// #660
    148c:	ldr	x0, [x0]
    1490:	bl	0 <grub_printf>
    1494:	ldr	w0, [x28]
    1498:	cbz	w0, 1198 <grub_mod_init-0x1088>
    149c:	nop
    14a0:	mov	x20, #0x0                   	// #0
    14a4:	b	13b0 <grub_mod_init-0xe70>
    14a8:	mov	w1, #0x20000000            	// #536870912
    14ac:	cmp	w0, w1
    14b0:	b.eq	11c4 <grub_mod_init-0x105c>  // b.none
    14b4:	cmn	w0, #0x2
    14b8:	b.cc	1444 <grub_mod_init-0xddc>  // b.lo, b.ul, b.last
    14bc:	b	11c4 <grub_mod_init-0x105c>
    14c0:	ldr	w2, [sp, #160]
    14c4:	adrp	x0, 0 <grub_mod_init-0x2220>
    14c8:	umull	x20, w2, w1
    14cc:	adrp	x1, 0 <grub_mod_init-0x2220>
    14d0:	ldr	x2, [x0]
    14d4:	mov	w4, w20
    14d8:	ldr	x3, [x1]
    14dc:	mov	x0, x22
    14e0:	mov	w1, #0x45b                 	// #1115
    14e4:	bl	0 <grub_real_dprintf>
    14e8:	add	x0, x26, w19, uxth
    14ec:	and	x19, x19, #0xffff
    14f0:	cmp	x0, x27
    14f4:	b.hi	15dc <grub_mod_init-0xc44>  // b.pmore
    14f8:	mov	x26, x0
    14fc:	cmp	x26, x23
    1500:	add	x1, x26, #0x1
    1504:	b.cc	11e8 <grub_mod_init-0x1038>  // b.lo, b.ul, b.last
    1508:	adrp	x0, 0 <grub_mod_init-0x2220>
    150c:	sub	x27, x26, x27
    1510:	ldr	x2, [sp, #152]
    1514:	mov	x4, x27
    1518:	ldr	x3, [x0]
    151c:	mov	w1, #0x4ae                 	// #1198
    1520:	ldr	x5, [sp, #168]
    1524:	mov	x0, x22
    1528:	bl	0 <grub_real_dprintf>
    152c:	mov	x0, x27
    1530:	b	13bc <grub_mod_init-0xe64>
    1534:	ldr	x0, [sp, #216]
    1538:	mov	x26, x28
    153c:	ldr	x0, [x0, #120]
    1540:	str	xzr, [x0, #48]
    1544:	mov	x0, x20
    1548:	bl	0 <grub_free>
    154c:	b	14fc <grub_mod_init-0xd24>
    1550:	mov	w1, #0x20000000            	// #536870912
    1554:	cmp	w0, w1
    1558:	b.eq	10a8 <grub_mod_init-0x1178>  // b.none
    155c:	cmn	w0, #0x2
    1560:	b.cs	10a8 <grub_mod_init-0x1178>  // b.hs, b.nlast
    1564:	ldr	x0, [x7, #8]
    1568:	and	x0, x0, #0xfffffffffffffff
    156c:	b	1424 <grub_mod_init-0xdfc>
    1570:	adrp	x0, 0 <grub_mod_init-0x2220>
    1574:	adrp	x1, 0 <grub_mod_init-0x2220>
    1578:	mov	w2, #0x1a2                 	// #418
    157c:	ldr	x0, [x0]
    1580:	ldr	x22, [x1]
    1584:	mov	x1, x22
    1588:	bl	0 <grub_printf>
    158c:	b	ec4 <grub_mod_init-0x135c>
    1590:	adrp	x3, 0 <grub_mod_init-0x2220>
    1594:	mov	x0, x22
    1598:	mov	w1, #0x214                 	// #532
    159c:	mov	x2, x24
    15a0:	ldr	x3, [x3]
    15a4:	ldr	x27, [sp, #104]
    15a8:	bl	0 <grub_real_dprintf>
    15ac:	adrp	x1, 0 <grub_mod_init-0x2220>
    15b0:	mov	w0, #0x9                   	// #9
    15b4:	ldr	x1, [x1]
    15b8:	bl	0 <grub_error>
    15bc:	ldr	w0, [x28]
    15c0:	cbnz	w0, 1470 <grub_mod_init-0xdb0>
    15c4:	adrp	x0, 0 <grub_mod_init-0x2220>
    15c8:	mov	x1, x22
    15cc:	mov	w2, #0x292                 	// #658
    15d0:	ldr	x0, [x0]
    15d4:	bl	0 <grub_printf>
    15d8:	b	1470 <grub_mod_init-0xdb0>
    15dc:	adrp	x1, 0 <grub_mod_init-0x2220>
    15e0:	subs	w5, w27, w26
    15e4:	csel	w5, w5, wzr, pl  // pl = nfrst
    15e8:	sub	x0, x23, x26
    15ec:	ldr	x3, [x1]
    15f0:	cmp	x0, x19
    15f4:	ldr	x2, [sp, #152]
    15f8:	sxtw	x24, w5
    15fc:	csel	x19, x0, x19, ls  // ls = plast
    1600:	mov	w4, w20
    1604:	sub	x21, x19, x24
    1608:	mov	x0, x22
    160c:	add	w6, w5, w21
    1610:	mov	w1, #0x461                 	// #1121
    1614:	bl	0 <grub_real_dprintf>
    1618:	ldr	x0, [sp, #216]
    161c:	mov	x1, x20
    1620:	ldr	x5, [sp, #176]
    1624:	mov	x3, x21
    1628:	ldr	x0, [x0, #120]
    162c:	ldrh	w2, [sp, #280]
    1630:	ldr	x20, [sp, #112]
    1634:	str	x5, [x0, #48]
    1638:	ldr	x5, [sp, #184]
    163c:	str	x5, [x0, #56]
    1640:	add	x2, x2, x24
    1644:	mov	x4, x20
    1648:	bl	0 <grub_disk_read>
    164c:	ldr	x1, [sp, #216]
    1650:	ldr	x0, [sp, #144]
    1654:	ldr	x1, [x1, #120]
    1658:	ldr	w0, [x0]
    165c:	str	xzr, [x1, #48]
    1660:	cbnz	w0, 14a0 <grub_mod_init-0xd80>
    1664:	add	x0, x20, x21
    1668:	add	x26, x26, x19
    166c:	str	x0, [sp, #112]
    1670:	b	14fc <grub_mod_init-0xd24>
    1674:	adrp	x0, 0 <grub_mod_init-0x2220>
    1678:	mov	x1, x22
    167c:	mov	w2, #0x28d                 	// #653
    1680:	ldr	x0, [x0]
    1684:	bl	0 <grub_printf>
    1688:	b	1190 <grub_mod_init-0x1090>
    168c:	ldr	x28, [x0]
    1690:	b	15bc <grub_mod_init-0xc64>
    1694:	adrp	x1, 0 <grub_mod_init-0x2220>
    1698:	mov	w0, #0xe                   	// #14
    169c:	ldr	x1, [x1]
    16a0:	bl	0 <grub_error>
    16a4:	b	15bc <grub_mod_init-0xc64>
    16a8:	adrp	x1, 0 <grub_mod_init-0x2220>
    16ac:	mov	x2, x27
    16b0:	mov	x20, #0x0                   	// #0
    16b4:	mov	w0, #0xe                   	// #14
    16b8:	ldr	x1, [x1]
    16bc:	bl	0 <grub_error>
    16c0:	b	13b0 <grub_mod_init-0xe70>
    16c4:	nop
	...
    1758:	mov	x5, x0
    175c:	mov	x3, x2
    1760:	mov	x2, x1
    1764:	ldr	x1, [x0, #24]
    1768:	ldp	x0, x4, [x0, #80]
    176c:	ldr	x5, [x5, #96]
    1770:	b	e60 <grub_mod_init-0x13c0>
    1774:	nop
    1778:	stp	x29, x30, [sp, #-48]!
    177c:	mov	x29, sp
    1780:	str	x21, [sp, #32]
    1784:	ldr	x21, [x0, #32]
    1788:	stp	x19, x20, [sp, #16]
    178c:	mov	x20, x0
    1790:	add	x0, x21, #0x1
    1794:	bl	0 <grub_malloc>
    1798:	mov	x19, x0
    179c:	cbz	x0, 17c4 <grub_mod_init-0xa5c>
    17a0:	mov	x3, x21
    17a4:	mov	x0, x20
    17a8:	mov	x2, x19
    17ac:	mov	x5, #0x0                   	// #0
    17b0:	mov	x4, #0x0                   	// #0
    17b4:	mov	x1, #0x0                   	// #0
    17b8:	bl	e60 <grub_mod_init-0x13c0>
    17bc:	tbnz	x0, #63, 17d8 <grub_mod_init-0xa48>
    17c0:	strb	wzr, [x19, x0]
    17c4:	mov	x0, x19
    17c8:	ldp	x19, x20, [sp, #16]
    17cc:	ldr	x21, [sp, #32]
    17d0:	ldp	x29, x30, [sp], #48
    17d4:	ret
    17d8:	mov	x0, x19
    17dc:	mov	x19, #0x0                   	// #0
    17e0:	bl	0 <grub_free>
    17e4:	b	17c4 <grub_mod_init-0xa5c>
    17e8:	stp	x29, x30, [sp, #-272]!
    17ec:	mov	x29, sp
    17f0:	stp	x19, x20, [sp, #16]
    17f4:	mov	x20, x0
    17f8:	ldr	w0, [x0, #40]
    17fc:	str	x1, [sp, #104]
    1800:	cmp	w0, #0x1
    1804:	b.eq	1860 <grub_mod_init-0x9c0>  // b.none
    1808:	adrp	x1, 0 <grub_mod_init-0x2220>
    180c:	mov	w0, #0x4                   	// #4
    1810:	str	xzr, [sp, #112]
    1814:	ldr	x1, [x1]
    1818:	bl	0 <grub_error>
    181c:	adrp	x0, 0 <grub_mod_init-0x2220>
    1820:	ldr	x0, [x0]
    1824:	ldr	w0, [x0]
    1828:	cbnz	w0, 1844 <grub_mod_init-0x9dc>
    182c:	adrp	x1, 0 <grub_mod_init-0x2220>
    1830:	adrp	x0, 0 <grub_mod_init-0x2220>
    1834:	mov	w2, #0x3e8                 	// #1000
    1838:	ldr	x1, [x1]
    183c:	ldr	x0, [x0]
    1840:	bl	0 <grub_printf>
    1844:	ldr	x0, [sp, #112]
    1848:	mov	w19, #0x0                   	// #0
    184c:	bl	0 <grub_free>
    1850:	mov	w0, w19
    1854:	ldp	x19, x20, [sp, #16]
    1858:	ldp	x29, x30, [sp], #272
    185c:	ret
    1860:	stp	x23, x24, [sp, #48]
    1864:	ldr	x24, [x20]
    1868:	stp	x21, x22, [sp, #32]
    186c:	ldr	x0, [x20, #16]
    1870:	str	x0, [sp, #152]
    1874:	ldrh	w21, [x24, #44]
    1878:	stp	x27, x28, [sp, #80]
    187c:	mov	x28, x2
    1880:	add	w0, w21, #0x1
    1884:	str	w21, [sp, #148]
    1888:	sxtw	x0, w0
    188c:	bl	0 <grub_malloc>
    1890:	str	x0, [sp, #112]
    1894:	mov	x22, x0
    1898:	cbz	x0, 1ca0 <grub_mod_init-0x580>
    189c:	adrp	x1, 0 <grub_mod_init-0x2220>
    18a0:	adrp	x2, 0 <grub_mod_init-0x2220>
    18a4:	adrp	x0, 0 <grub_mod_init-0x2220>
    18a8:	lsr	w4, w21, #9
    18ac:	ldr	x3, [x1]
    18b0:	str	w4, [sp, #144]
    18b4:	ldr	x0, [x0]
    18b8:	and	x4, x21, #0xffff
    18bc:	ldr	x2, [x2]
    18c0:	mov	w1, #0x2e5                 	// #741
    18c4:	ldrh	w19, [x20, #12]
    18c8:	add	x23, x22, w21, uxth
    18cc:	ldr	w20, [x20, #8]
    18d0:	stp	x25, x26, [sp, #64]
    18d4:	str	x0, [sp, #120]
    18d8:	str	x4, [sp, #160]
    18dc:	str	x2, [sp, #168]
    18e0:	bl	0 <grub_real_dprintf>
    18e4:	adrp	x0, 0 <grub_mod_init-0x2220>
    18e8:	ldr	x0, [x0]
    18ec:	str	x0, [sp, #136]
    18f0:	ldp	w0, w2, [sp, #144]
    18f4:	ldr	x3, [sp, #160]
    18f8:	mul	w1, w0, w20
    18fc:	ldr	x0, [x24, #120]
    1900:	umull	x2, w2, w20
    1904:	ldr	x20, [sp, #112]
    1908:	and	x2, x2, #0x1ff
    190c:	mov	x4, x20
    1910:	bl	0 <grub_disk_read>
    1914:	ldr	x0, [sp, #136]
    1918:	ldr	w0, [x0]
    191c:	cbnz	w0, 1d78 <grub_mod_init-0x4a8>
    1920:	and	x19, x19, #0xffff
    1924:	strb	wzr, [x23]
    1928:	add	x19, x19, #0x1
    192c:	add	x19, x19, x19, lsl #1
    1930:	add	x1, x20, x19, lsl #3
    1934:	str	x1, [sp, #128]
    1938:	ldrh	w26, [x1, #16]
    193c:	ldrh	w25, [x1, #20]
    1940:	add	x25, x20, x25
    1944:	cbz	w26, 1bd0 <grub_mod_init-0x650>
    1948:	add	x20, x25, #0x4
    194c:	mov	w22, #0x0                   	// #0
    1950:	b	1ac8 <grub_mod_init-0x758>
    1954:	ldurh	w19, [x20, #-8]
    1958:	add	x19, x25, x19
    195c:	ldr	w0, [x20]
    1960:	cmp	x19, x21
    1964:	str	w0, [sp, #184]
    1968:	ccmp	x23, x19, #0x0, cs  // cs = hs, nlast
    196c:	csel	x19, x19, x23, cs  // cs = hs, nlast
    1970:	add	x0, sp, #0xb8
    1974:	ldr	w1, [x20, #4]
    1978:	str	w1, [sp, #188]
    197c:	mov	x1, #0x3000000000000000    	// #3458764513820540928
    1980:	str	x1, [sp, #192]
    1984:	bl	0 <grub_mod_init-0x2220>
    1988:	cmp	w0, #0x1
    198c:	b.ne	1b44 <grub_mod_init-0x6dc>  // b.any
    1990:	ldr	x0, [sp, #192]
    1994:	and	x0, x0, #0xf000000000000000
    1998:	orr	x0, x0, #0x1
    199c:	str	x0, [sp, #192]
    19a0:	mov	x0, #0x48                  	// #72
    19a4:	bl	0 <grub_malloc>
    19a8:	mov	x27, x0
    19ac:	cbz	x0, 1c84 <grub_mod_init-0x59c>
    19b0:	mov	x2, x0
    19b4:	add	x1, sp, #0xb8
    19b8:	mov	x0, x24
    19bc:	bl	778 <grub_mod_init-0x1aa8>
    19c0:	cbnz	w0, 1c7c <grub_mod_init-0x5a4>
    19c4:	ldr	w0, [x27, #40]
    19c8:	mov	w1, #0x2                   	// #2
    19cc:	cmp	w0, #0x1
    19d0:	b.eq	1a88 <grub_mod_init-0x798>  // b.none
    19d4:	ldr	w0, [sp, #196]
    19d8:	mov	w1, #0x10000000            	// #268435456
    19dc:	cmp	w0, w1
    19e0:	b.eq	19f8 <grub_mod_init-0x828>  // b.none
    19e4:	b.hi	1b28 <grub_mod_init-0x6f8>  // b.pmore
    19e8:	cmp	w0, #0x1f4
    19ec:	b.eq	19f8 <grub_mod_init-0x828>  // b.none
    19f0:	cmp	w0, #0x22b
    19f4:	b.ne	1af8 <grub_mod_init-0x728>  // b.any
    19f8:	str	wzr, [sp, #192]
    19fc:	ldr	x1, [sp, #192]
    1a00:	and	x1, x1, #0xfffffffffffffff
    1a04:	add	x0, sp, #0xb8
    1a08:	str	x1, [sp, #192]
    1a0c:	bl	0 <grub_mod_init-0x2220>
    1a10:	cbnz	w0, 1b10 <grub_mod_init-0x710>
    1a14:	mov	x2, x27
    1a18:	add	x1, sp, #0xb8
    1a1c:	mov	x0, x24
    1a20:	bl	778 <grub_mod_init-0x1aa8>
    1a24:	cbnz	w0, 1c7c <grub_mod_init-0x5a4>
    1a28:	ldr	w1, [x27, #8]
    1a2c:	cbz	w1, 1ba8 <grub_mod_init-0x678>
    1a30:	ldr	w0, [sp, #144]
    1a34:	add	x4, sp, #0xc8
    1a38:	ldrh	w3, [x27, #66]
    1a3c:	ldrh	w2, [x27, #64]
    1a40:	mul	w1, w0, w1
    1a44:	ldr	x0, [x24, #120]
    1a48:	cbnz	w3, 1c3c <grub_mod_init-0x5e4>
    1a4c:	mov	x3, #0x20                  	// #32
    1a50:	bl	0 <grub_disk_read>
    1a54:	ldr	x0, [sp, #136]
    1a58:	ldr	w0, [x0]
    1a5c:	cbnz	w0, 1d78 <grub_mod_init-0x4a8>
    1a60:	ldrh	w0, [sp, #200]
    1a64:	mov	w1, #0xa000                	// #40960
    1a68:	ldr	w2, [sp, #208]
    1a6c:	and	w0, w0, w1
    1a70:	ldr	w3, [sp, #216]
    1a74:	cmp	w0, w1
    1a78:	mov	w1, #0x3                   	// #3
    1a7c:	csinc	w1, w1, wzr, eq  // eq = none
    1a80:	str	w3, [x27, #24]
    1a84:	str	x2, [x27, #32]
    1a88:	ldrb	w4, [x19]
    1a8c:	mov	x2, x27
    1a90:	stp	w1, w4, [sp, #96]
    1a94:	mov	x3, x28
    1a98:	ldr	x4, [sp, #104]
    1a9c:	strb	wzr, [x19]
    1aa0:	mov	x0, x21
    1aa4:	blr	x4
    1aa8:	ldp	w1, w4, [sp, #96]
    1aac:	cbnz	w0, 1d28 <grub_mod_init-0x4f8>
    1ab0:	strb	w4, [x19]
    1ab4:	add	w0, w22, #0x1
    1ab8:	add	x20, x20, #0x10
    1abc:	and	w22, w0, #0xffff
    1ac0:	cmp	w26, w0, uxth
    1ac4:	b.eq	1bd0 <grub_mod_init-0x650>  // b.none
    1ac8:	ldrh	w0, [x20, #10]
    1acc:	tbz	w0, #2, 1ab4 <grub_mod_init-0x76c>
    1ad0:	ldrh	w21, [x20, #8]
    1ad4:	add	x21, x25, x21
    1ad8:	cbnz	w22, 1954 <grub_mod_init-0x8cc>
    1adc:	ldr	x0, [sp, #128]
    1ae0:	ldrh	w19, [x0, #20]
    1ae4:	ldrh	w0, [x0, #18]
    1ae8:	add	x19, x19, x0
    1aec:	ldr	x0, [sp, #112]
    1af0:	add	x19, x0, x19
    1af4:	b	195c <grub_mod_init-0x8c4>
    1af8:	mov	x1, #0x0                   	// #0
    1afc:	cbz	w0, 19f8 <grub_mod_init-0x828>
    1b00:	add	x0, sp, #0xb8
    1b04:	str	x1, [sp, #192]
    1b08:	bl	0 <grub_mod_init-0x2220>
    1b0c:	cbz	w0, 1a14 <grub_mod_init-0x80c>
    1b10:	adrp	x0, 0 <grub_mod_init-0x2220>
    1b14:	mov	w2, #0x1a2                 	// #418
    1b18:	ldr	x1, [sp, #120]
    1b1c:	ldr	x0, [x0]
    1b20:	bl	0 <grub_printf>
    1b24:	b	1a14 <grub_mod_init-0x80c>
    1b28:	mov	w1, #0x20000000            	// #536870912
    1b2c:	cmp	w0, w1
    1b30:	b.eq	19f8 <grub_mod_init-0x828>  // b.none
    1b34:	cmn	w0, #0x2
    1b38:	mov	x1, #0x0                   	// #0
    1b3c:	b.cc	1a04 <grub_mod_init-0x81c>  // b.lo, b.ul, b.last
    1b40:	b	19f8 <grub_mod_init-0x828>
    1b44:	adrp	x0, 0 <grub_mod_init-0x2220>
    1b48:	mov	w2, #0x1a2                 	// #418
    1b4c:	ldr	x1, [sp, #120]
    1b50:	ldr	x0, [x0]
    1b54:	bl	0 <grub_printf>
    1b58:	ldr	w0, [sp, #196]
    1b5c:	mov	w1, #0x10000000            	// #268435456
    1b60:	cmp	w0, w1
    1b64:	b.eq	1b7c <grub_mod_init-0x6a4>  // b.none
    1b68:	b.hi	1b90 <grub_mod_init-0x690>  // b.pmore
    1b6c:	cmp	w0, #0x1f4
    1b70:	b.eq	1b7c <grub_mod_init-0x6a4>  // b.none
    1b74:	cmp	w0, #0x22b
    1b78:	b.ne	1b88 <grub_mod_init-0x698>  // b.any
    1b7c:	mov	w0, #0x1                   	// #1
    1b80:	str	w0, [sp, #192]
    1b84:	b	19a0 <grub_mod_init-0x880>
    1b88:	cbz	w0, 1b7c <grub_mod_init-0x6a4>
    1b8c:	b	1990 <grub_mod_init-0x890>
    1b90:	mov	w1, #0x20000000            	// #536870912
    1b94:	cmp	w0, w1
    1b98:	b.eq	1b7c <grub_mod_init-0x6a4>  // b.none
    1b9c:	cmn	w0, #0x2
    1ba0:	b.cs	1b7c <grub_mod_init-0x6a4>  // b.hs, b.nlast
    1ba4:	b	1990 <grub_mod_init-0x890>
    1ba8:	add	x0, x21, #0x2
    1bac:	cmp	x19, x0
    1bb0:	b.eq	1cf0 <grub_mod_init-0x530>  // b.none
    1bb4:	mov	x0, x27
    1bb8:	bl	0 <grub_free>
    1bbc:	add	w0, w22, #0x1
    1bc0:	add	x20, x20, #0x10
    1bc4:	and	w22, w0, #0xffff
    1bc8:	cmp	w26, w0, uxth
    1bcc:	b.ne	1ac8 <grub_mod_init-0x758>  // b.any
    1bd0:	ldr	x0, [sp, #152]
    1bd4:	cbz	x0, 1c34 <grub_mod_init-0x5ec>
    1bd8:	ldr	x0, [sp, #128]
    1bdc:	mov	w1, #0x10000000            	// #268435456
    1be0:	ldr	w0, [x0, #12]
    1be4:	cmp	w0, w1
    1be8:	b.eq	1c00 <grub_mod_init-0x620>  // b.none
    1bec:	b.hi	1cd8 <grub_mod_init-0x548>  // b.pmore
    1bf0:	cmp	w0, #0x1f4
    1bf4:	b.eq	1c00 <grub_mod_init-0x620>  // b.none
    1bf8:	cmp	w0, #0x22b
    1bfc:	b.ne	1cbc <grub_mod_init-0x564>  // b.any
    1c00:	ldr	x0, [sp, #128]
    1c04:	ldr	w1, [sp, #152]
    1c08:	str	w1, [x0, #8]
    1c0c:	mov	x1, x0
    1c10:	add	x2, sp, #0xc8
    1c14:	mov	x0, x24
    1c18:	bl	778 <grub_mod_init-0x1aa8>
    1c1c:	cbnz	w0, 1c84 <grub_mod_init-0x59c>
    1c20:	ldr	w20, [sp, #208]
    1c24:	ldr	x0, [sp, #216]
    1c28:	str	x0, [sp, #152]
    1c2c:	ldrh	w19, [sp, #212]
    1c30:	cbnz	w20, 18f0 <grub_mod_init-0x930>
    1c34:	mov	w19, #0x0                   	// #0
    1c38:	b	1d50 <grub_mod_init-0x4d0>
    1c3c:	mov	x3, #0x2c                  	// #44
    1c40:	bl	0 <grub_disk_read>
    1c44:	ldr	x0, [sp, #136]
    1c48:	ldr	w0, [x0]
    1c4c:	cbnz	w0, 1d78 <grub_mod_init-0x4a8>
    1c50:	ldrh	w0, [sp, #200]
    1c54:	mov	w1, #0xa000                	// #40960
    1c58:	ldr	x2, [sp, #208]
    1c5c:	and	w0, w0, w1
    1c60:	cmp	w0, w1
    1c64:	ldr	w0, [sp, #228]
    1c68:	mov	w1, #0x3                   	// #3
    1c6c:	csinc	w1, w1, wzr, eq  // eq = none
    1c70:	str	w0, [x27, #24]
    1c74:	str	x2, [x27, #32]
    1c78:	b	1a88 <grub_mod_init-0x798>
    1c7c:	mov	x0, x27
    1c80:	bl	0 <grub_free>
    1c84:	ldr	x0, [sp, #136]
    1c88:	ldp	x21, x22, [sp, #32]
    1c8c:	ldr	w0, [x0]
    1c90:	ldp	x23, x24, [sp, #48]
    1c94:	ldp	x25, x26, [sp, #64]
    1c98:	ldp	x27, x28, [sp, #80]
    1c9c:	b	1828 <grub_mod_init-0x9f8>
    1ca0:	adrp	x0, 0 <grub_mod_init-0x2220>
    1ca4:	ldp	x21, x22, [sp, #32]
    1ca8:	ldr	x0, [x0]
    1cac:	ldp	x23, x24, [sp, #48]
    1cb0:	ldr	w0, [x0]
    1cb4:	ldp	x27, x28, [sp, #80]
    1cb8:	b	1828 <grub_mod_init-0x9f8>
    1cbc:	cbz	w0, 1c00 <grub_mod_init-0x620>
    1cc0:	ldr	x1, [sp, #128]
    1cc4:	ldr	x2, [sp, #152]
    1cc8:	ldr	x0, [x1, #8]
    1ccc:	bfxil	x0, x2, #0, #60
    1cd0:	str	x0, [x1, #8]
    1cd4:	b	1c10 <grub_mod_init-0x610>
    1cd8:	mov	w1, #0x20000000            	// #536870912
    1cdc:	cmp	w0, w1
    1ce0:	b.eq	1c00 <grub_mod_init-0x620>  // b.none
    1ce4:	cmn	w0, #0x2
    1ce8:	b.cc	1cc0 <grub_mod_init-0x560>  // b.lo, b.ul, b.last
    1cec:	b	1c00 <grub_mod_init-0x620>
    1cf0:	adrp	x1, 0 <grub_mod_init-0x2220>
    1cf4:	mov	x0, x21
    1cf8:	mov	x2, #0x2                   	// #2
    1cfc:	ldr	x1, [x1]
    1d00:	bl	0 <grub_memcmp>
    1d04:	cbz	w0, 1bb4 <grub_mod_init-0x66c>
    1d08:	adrp	x0, 0 <grub_mod_init-0x2220>
    1d0c:	mov	x4, x21
    1d10:	ldr	x2, [sp, #168]
    1d14:	mov	w1, #0x3bd                 	// #957
    1d18:	ldr	x3, [x0]
    1d1c:	ldr	x0, [sp, #120]
    1d20:	bl	0 <grub_real_dprintf>
    1d24:	b	1bb4 <grub_mod_init-0x66c>
    1d28:	adrp	x0, 0 <grub_mod_init-0x2220>
    1d2c:	strb	w4, [x19]
    1d30:	ldr	x2, [sp, #168]
    1d34:	mov	w5, w1
    1d38:	ldr	x3, [x0]
    1d3c:	mov	x4, x21
    1d40:	ldr	x0, [sp, #120]
    1d44:	mov	w1, #0x3ca                 	// #970
    1d48:	mov	w19, #0x1                   	// #1
    1d4c:	bl	0 <grub_real_dprintf>
    1d50:	ldr	x0, [sp, #136]
    1d54:	ldr	w0, [x0]
    1d58:	cbnz	w0, 1d8c <grub_mod_init-0x494>
    1d5c:	ldr	x0, [sp, #112]
    1d60:	bl	0 <grub_free>
    1d64:	ldp	x21, x22, [sp, #32]
    1d68:	ldp	x23, x24, [sp, #48]
    1d6c:	ldp	x25, x26, [sp, #64]
    1d70:	ldp	x27, x28, [sp, #80]
    1d74:	b	1850 <grub_mod_init-0x9d0>
    1d78:	ldp	x21, x22, [sp, #32]
    1d7c:	ldp	x23, x24, [sp, #48]
    1d80:	ldp	x25, x26, [sp, #64]
    1d84:	ldp	x27, x28, [sp, #80]
    1d88:	b	1844 <grub_mod_init-0x9dc>
    1d8c:	adrp	x0, 0 <grub_mod_init-0x2220>
    1d90:	mov	w2, #0x3e4                 	// #996
    1d94:	ldr	x1, [sp, #120]
    1d98:	ldr	x0, [x0]
    1d9c:	bl	0 <grub_printf>
    1da0:	b	1d5c <grub_mod_init-0x4c4>
    1da4:	nop
	...
    1df0:	stp	x29, x30, [sp, #-160]!
    1df4:	adrp	x2, 0 <grub_mod_init-0x2220>
    1df8:	mov	x29, sp
    1dfc:	stp	x23, x24, [sp, #48]
    1e00:	mov	x23, x0
    1e04:	ldr	x24, [x2]
    1e08:	stp	x19, x20, [sp, #16]
    1e0c:	mov	x20, x1
    1e10:	stp	x21, x22, [sp, #32]
    1e14:	add	x21, sp, #0x58
    1e18:	ldr	x0, [x24]
    1e1c:	str	xzr, [sp, #64]
    1e20:	bl	0 <grub_dl_ref>
    1e24:	ldr	x0, [x23, #8]
    1e28:	ldr	x0, [x0]
    1e2c:	bl	e8 <grub_mod_init-0x2138>
    1e30:	mov	x19, x0
    1e34:	cbz	x0, 1f3c <grub_mod_init-0x2e4>
    1e38:	mov	x2, #0x1                   	// #1
    1e3c:	mov	x1, #0x3000000000000000    	// #3458764513820540928
    1e40:	movk	x2, #0x2, lsl #32
    1e44:	add	x0, sp, #0x48
    1e48:	stp	x2, x1, [sp, #72]
    1e4c:	bl	0 <grub_mod_init-0x2220>
    1e50:	cmp	w0, #0x1
    1e54:	b.eq	1f78 <grub_mod_init-0x2a8>  // b.none
    1e58:	adrp	x1, 0 <grub_mod_init-0x2220>
    1e5c:	adrp	x0, 0 <grub_mod_init-0x2220>
    1e60:	mov	w2, #0x1a2                 	// #418
    1e64:	ldr	x1, [x1]
    1e68:	ldr	x0, [x0]
    1e6c:	bl	0 <grub_printf>
    1e70:	ldr	w2, [sp, #84]
    1e74:	mov	w0, #0x10000000            	// #268435456
    1e78:	cmp	w2, w0
    1e7c:	b.eq	1e94 <grub_mod_init-0x38c>  // b.none
    1e80:	b.hi	1f8c <grub_mod_init-0x294>  // b.pmore
    1e84:	cmp	w2, #0x1f4
    1e88:	b.eq	1e94 <grub_mod_init-0x38c>  // b.none
    1e8c:	cmp	w2, #0x22b
    1e90:	b.ne	1f74 <grub_mod_init-0x2ac>  // b.any
    1e94:	mov	w0, #0x1                   	// #1
    1e98:	str	w0, [sp, #80]
    1e9c:	add	x21, sp, #0x58
    1ea0:	add	x1, sp, #0x48
    1ea4:	mov	x2, x21
    1ea8:	mov	x0, x19
    1eac:	bl	778 <grub_mod_init-0x1aa8>
    1eb0:	cbnz	w0, 1f3c <grub_mod_init-0x2e4>
    1eb4:	ldr	w0, [sp, #96]
    1eb8:	cbz	w0, 1f2c <grub_mod_init-0x2f4>
    1ebc:	adrp	x2, 0 <grub_mod_init-0x2220>
    1ec0:	adrp	x1, 0 <grub_mod_init-0x2220>
    1ec4:	mov	x0, x20
    1ec8:	mov	w5, #0x1                   	// #1
    1ecc:	ldr	x4, [x2]
    1ed0:	add	x2, sp, #0x40
    1ed4:	ldr	x3, [x1]
    1ed8:	mov	x1, x21
    1edc:	bl	0 <grub_fshelp_find_file>
    1ee0:	adrp	x0, 0 <grub_mod_init-0x2220>
    1ee4:	ldr	x20, [x0]
    1ee8:	ldr	w22, [x20]
    1eec:	cbz	w22, 1fa4 <grub_mod_init-0x27c>
    1ef0:	ldr	x0, [sp, #64]
    1ef4:	cmp	x0, x21
    1ef8:	b.eq	1f00 <grub_mod_init-0x320>  // b.none
    1efc:	bl	0 <grub_free>
    1f00:	mov	x0, x19
    1f04:	bl	0 <grub_free>
    1f08:	ldr	x0, [x24]
    1f0c:	bl	0 <grub_dl_unref>
    1f10:	ldr	w22, [x20]
    1f14:	ldp	x19, x20, [sp, #16]
    1f18:	mov	w0, w22
    1f1c:	ldp	x21, x22, [sp, #32]
    1f20:	ldp	x23, x24, [sp, #48]
    1f24:	ldp	x29, x30, [sp], #160
    1f28:	ret
    1f2c:	adrp	x1, 0 <grub_mod_init-0x2220>
    1f30:	mov	w0, #0x9                   	// #9
    1f34:	ldr	x1, [x1]
    1f38:	bl	0 <grub_error>
    1f3c:	adrp	x0, 0 <grub_mod_init-0x2220>
    1f40:	ldr	x20, [x0]
    1f44:	ldr	w0, [x20]
    1f48:	cbnz	w0, 1ef0 <grub_mod_init-0x330>
    1f4c:	adrp	x1, 0 <grub_mod_init-0x2220>
    1f50:	adrp	x0, 0 <grub_mod_init-0x2220>
    1f54:	mov	w2, #0x418                 	// #1048
    1f58:	ldr	x1, [x1]
    1f5c:	ldr	x0, [x0]
    1f60:	bl	0 <grub_printf>
    1f64:	ldr	x0, [sp, #64]
    1f68:	cmp	x0, x21
    1f6c:	b.ne	1efc <grub_mod_init-0x324>  // b.any
    1f70:	b	1f00 <grub_mod_init-0x320>
    1f74:	cbz	w2, 1e94 <grub_mod_init-0x38c>
    1f78:	ldr	x0, [sp, #80]
    1f7c:	and	x0, x0, #0xf000000000000000
    1f80:	orr	x0, x0, #0x1
    1f84:	str	x0, [sp, #80]
    1f88:	b	1e9c <grub_mod_init-0x384>
    1f8c:	mov	w0, #0x20000000            	// #536870912
    1f90:	cmp	w2, w0
    1f94:	b.eq	1e94 <grub_mod_init-0x38c>  // b.none
    1f98:	cmn	w2, #0x2
    1f9c:	b.cs	1e94 <grub_mod_init-0x38c>  // b.hs, b.nlast
    1fa0:	b	1f78 <grub_mod_init-0x2a8>
    1fa4:	ldr	x4, [sp, #64]
    1fa8:	adrp	x1, 0 <grub_mod_init-0x2220>
    1fac:	adrp	x2, 0 <grub_mod_init-0x2220>
    1fb0:	adrp	x0, 0 <grub_mod_init-0x2220>
    1fb4:	ldr	x3, [x1]
    1fb8:	mov	w1, #0x410                 	// #1040
    1fbc:	ldr	x2, [x2]
    1fc0:	ldr	x0, [x0]
    1fc4:	ldr	x5, [x4, #32]
    1fc8:	str	x5, [x23, #64]
    1fcc:	mov	w6, w5
    1fd0:	mov	w4, w5
    1fd4:	lsr	x5, x5, #32
    1fd8:	bl	0 <grub_real_dprintf>
    1fdc:	ldr	x0, [sp, #64]
    1fe0:	str	xzr, [x23, #24]
    1fe4:	str	x0, [x23, #80]
    1fe8:	mov	w0, w22
    1fec:	ldp	x19, x20, [sp, #16]
    1ff0:	ldp	x21, x22, [sp, #32]
    1ff4:	ldp	x23, x24, [sp, #48]
    1ff8:	ldp	x29, x30, [sp], #160
    1ffc:	ret
	...
    2048:	stp	x29, x30, [sp, #-160]!
    204c:	adrp	x4, 0 <grub_mod_init-0x2220>
    2050:	mov	x29, sp
    2054:	stp	x21, x22, [sp, #32]
    2058:	ldr	x22, [x4]
    205c:	stp	x19, x20, [sp, #16]
    2060:	mov	x19, x0
    2064:	mov	x20, x1
    2068:	stp	x2, x3, [sp, #56]
    206c:	ldr	x0, [x22]
    2070:	bl	0 <grub_dl_ref>
    2074:	ldr	x0, [x19]
    2078:	bl	e8 <grub_mod_init-0x2138>
    207c:	mov	x19, x0
    2080:	cbz	x0, 2180 <grub_mod_init-0xa0>
    2084:	mov	x2, #0x1                   	// #1
    2088:	mov	x1, #0x3000000000000000    	// #3458764513820540928
    208c:	movk	x2, #0x2, lsl #32
    2090:	add	x0, sp, #0x48
    2094:	stp	x2, x1, [sp, #72]
    2098:	bl	0 <grub_mod_init-0x2220>
    209c:	cmp	w0, #0x1
    20a0:	b.eq	21b4 <grub_mod_init-0x6c>  // b.none
    20a4:	adrp	x1, 0 <grub_mod_init-0x2220>
    20a8:	adrp	x0, 0 <grub_mod_init-0x2220>
    20ac:	mov	w2, #0x1a2                 	// #418
    20b0:	ldr	x1, [x1]
    20b4:	ldr	x0, [x0]
    20b8:	bl	0 <grub_printf>
    20bc:	ldr	w0, [sp, #84]
    20c0:	mov	w1, #0x10000000            	// #268435456
    20c4:	cmp	w0, w1
    20c8:	b.eq	20e0 <grub_mod_init-0x140>  // b.none
    20cc:	b.hi	21c8 <grub_mod_init-0x58>  // b.pmore
    20d0:	cmp	w0, #0x1f4
    20d4:	b.eq	20e0 <grub_mod_init-0x140>  // b.none
    20d8:	cmp	w0, #0x22b
    20dc:	b.ne	21b0 <grub_mod_init-0x70>  // b.any
    20e0:	mov	w0, #0x1                   	// #1
    20e4:	str	w0, [sp, #80]
    20e8:	add	x1, sp, #0x48
    20ec:	add	x2, sp, #0x58
    20f0:	mov	x0, x19
    20f4:	bl	778 <grub_mod_init-0x1aa8>
    20f8:	cbnz	w0, 2180 <grub_mod_init-0xa0>
    20fc:	ldr	w0, [sp, #96]
    2100:	cbz	w0, 2170 <grub_mod_init-0xb0>
    2104:	adrp	x3, 0 <grub_mod_init-0x2220>
    2108:	adrp	x2, 0 <grub_mod_init-0x2220>
    210c:	mov	x0, x20
    2110:	add	x1, sp, #0x58
    2114:	ldr	x4, [x3]
    2118:	mov	w5, #0x2                   	// #2
    211c:	ldr	x3, [x2]
    2120:	add	x2, sp, #0x30
    2124:	bl	0 <grub_fshelp_find_file>
    2128:	adrp	x0, 0 <grub_mod_init-0x2220>
    212c:	ldr	x21, [x0]
    2130:	ldr	w20, [x21]
    2134:	cbnz	w20, 2188 <grub_mod_init-0x98>
    2138:	adrp	x1, 0 <grub_mod_init-0x2220>
    213c:	add	x2, sp, #0x38
    2140:	ldr	x0, [sp, #48]
    2144:	ldr	x1, [x1]
    2148:	bl	17e8 <grub_mod_init-0xa38>
    214c:	mov	x0, x19
    2150:	bl	0 <grub_free>
    2154:	ldr	x0, [x22]
    2158:	bl	0 <grub_dl_unref>
    215c:	mov	w0, w20
    2160:	ldp	x19, x20, [sp, #16]
    2164:	ldp	x21, x22, [sp, #32]
    2168:	ldp	x29, x30, [sp], #160
    216c:	ret
    2170:	adrp	x1, 0 <grub_mod_init-0x2220>
    2174:	mov	w0, #0x9                   	// #9
    2178:	ldr	x1, [x1]
    217c:	bl	0 <grub_error>
    2180:	adrp	x0, 0 <grub_mod_init-0x2220>
    2184:	ldr	x21, [x0]
    2188:	mov	x0, x19
    218c:	bl	0 <grub_free>
    2190:	ldr	x0, [x22]
    2194:	bl	0 <grub_dl_unref>
    2198:	ldr	w20, [x21]
    219c:	ldp	x21, x22, [sp, #32]
    21a0:	mov	w0, w20
    21a4:	ldp	x19, x20, [sp, #16]
    21a8:	ldp	x29, x30, [sp], #160
    21ac:	ret
    21b0:	cbz	w0, 20e0 <grub_mod_init-0x140>
    21b4:	ldr	x0, [sp, #80]
    21b8:	and	x0, x0, #0xf000000000000000
    21bc:	orr	x0, x0, #0x1
    21c0:	str	x0, [sp, #80]
    21c4:	b	20e8 <grub_mod_init-0x138>
    21c8:	mov	w1, #0x20000000            	// #536870912
    21cc:	cmp	w0, w1
    21d0:	b.eq	20e0 <grub_mod_init-0x140>  // b.none
    21d4:	cmn	w0, #0x2
    21d8:	b.cs	20e0 <grub_mod_init-0x140>  // b.hs, b.nlast
    21dc:	b	21b4 <grub_mod_init-0x6c>
	...

0000000000002220 <grub_mod_init>:
    2220:	stp	x29, x30, [sp, #-32]!
    2224:	adrp	x2, 0 <grub_mod_init-0x2220>
    2228:	adrp	x1, 0 <grub_mod_init-0x2220>
    222c:	mov	x29, sp
    2230:	ldr	x1, [x1]
    2234:	str	x19, [sp, #16]
    2238:	mov	x19, x0
    223c:	ldr	x0, [x2]
    2240:	bl	0 <grub_list_push>
    2244:	adrp	x0, 0 <grub_mod_init-0x2220>
    2248:	ldr	x0, [x0]
    224c:	str	x19, [x0]
    2250:	ldr	x19, [sp, #16]
    2254:	ldp	x29, x30, [sp], #32
    2258:	ret
    225c:	nop
	...

0000000000002278 <grub_mod_fini>:
    2278:	adrp	x0, 0 <grub_mod_init-0x2220>
    227c:	ldr	x0, [x0]
    2280:	b	0 <grub_list_remove>
    2284:	nop
	...
