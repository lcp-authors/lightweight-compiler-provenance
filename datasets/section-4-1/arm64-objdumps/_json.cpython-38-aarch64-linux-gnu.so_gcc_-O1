
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_json.cpython-38-aarch64-linux-gnu.so_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000001d58 <.init>:
    1d58:	stp	x29, x30, [sp, #-16]!
    1d5c:	mov	x29, sp
    1d60:	bl	20e0 <PySequence_Fast@plt+0x10>
    1d64:	ldp	x29, x30, [sp], #16
    1d68:	ret

Disassembly of section .plt:

0000000000001d70 <PyMapping_Items@plt-0x20>:
    1d70:	stp	x16, x30, [sp, #-16]!
    1d74:	adrp	x16, 18000 <PyInit__json@@Base+0x113a4>
    1d78:	ldr	x17, [x16, #4088]
    1d7c:	add	x16, x16, #0xff8
    1d80:	br	x17
    1d84:	nop
    1d88:	nop
    1d8c:	nop

0000000000001d90 <PyMapping_Items@plt>:
    1d90:	adrp	x16, 19000 <PyMapping_Items>
    1d94:	ldr	x17, [x16]
    1d98:	add	x16, x16, #0x0
    1d9c:	br	x17

0000000000001da0 <PyList_New@plt>:
    1da0:	adrp	x16, 19000 <PyMapping_Items>
    1da4:	ldr	x17, [x16, #8]
    1da8:	add	x16, x16, #0x8
    1dac:	br	x17

0000000000001db0 <_PyUnicode_Ready@plt>:
    1db0:	adrp	x16, 19000 <PyMapping_Items>
    1db4:	ldr	x17, [x16, #16]
    1db8:	add	x16, x16, #0x10
    1dbc:	br	x17

0000000000001dc0 <PyArg_ParseTupleAndKeywords@plt>:
    1dc0:	adrp	x16, 19000 <PyMapping_Items>
    1dc4:	ldr	x17, [x16, #24]
    1dc8:	add	x16, x16, #0x18
    1dcc:	br	x17

0000000000001dd0 <PyObject_GetAttrString@plt>:
    1dd0:	adrp	x16, 19000 <PyMapping_Items>
    1dd4:	ldr	x17, [x16, #32]
    1dd8:	add	x16, x16, #0x20
    1ddc:	br	x17

0000000000001de0 <__cxa_finalize@plt>:
    1de0:	adrp	x16, 19000 <PyMapping_Items>
    1de4:	ldr	x17, [x16, #40]
    1de8:	add	x16, x16, #0x28
    1dec:	br	x17

0000000000001df0 <_PyAccu_Init@plt>:
    1df0:	adrp	x16, 19000 <PyMapping_Items>
    1df4:	ldr	x17, [x16, #48]
    1df8:	add	x16, x16, #0x30
    1dfc:	br	x17

0000000000001e00 <PyUnicode_Join@plt>:
    1e00:	adrp	x16, 19000 <PyMapping_Items>
    1e04:	ldr	x17, [x16, #56]
    1e08:	add	x16, x16, #0x38
    1e0c:	br	x17

0000000000001e10 <PyDict_Contains@plt>:
    1e10:	adrp	x16, 19000 <PyMapping_Items>
    1e14:	ldr	x17, [x16, #64]
    1e18:	add	x16, x16, #0x40
    1e1c:	br	x17

0000000000001e20 <PyBytes_FromStringAndSize@plt>:
    1e20:	adrp	x16, 19000 <PyMapping_Items>
    1e24:	ldr	x17, [x16, #72]
    1e28:	add	x16, x16, #0x48
    1e2c:	br	x17

0000000000001e30 <_Py_Dealloc@plt>:
    1e30:	adrp	x16, 19000 <PyMapping_Items>
    1e34:	ldr	x17, [x16, #80]
    1e38:	add	x16, x16, #0x50
    1e3c:	br	x17

0000000000001e40 <PyErr_SetObject@plt>:
    1e40:	adrp	x16, 19000 <PyMapping_Items>
    1e44:	ldr	x17, [x16, #88]
    1e48:	add	x16, x16, #0x58
    1e4c:	br	x17

0000000000001e50 <PyIter_Next@plt>:
    1e50:	adrp	x16, 19000 <PyMapping_Items>
    1e54:	ldr	x17, [x16, #96]
    1e58:	add	x16, x16, #0x60
    1e5c:	br	x17

0000000000001e60 <PyErr_SetString@plt>:
    1e60:	adrp	x16, 19000 <PyMapping_Items>
    1e64:	ldr	x17, [x16, #104]
    1e68:	add	x16, x16, #0x68
    1e6c:	br	x17

0000000000001e70 <_PyAccu_Accumulate@plt>:
    1e70:	adrp	x16, 19000 <PyMapping_Items>
    1e74:	ldr	x17, [x16, #112]
    1e78:	add	x16, x16, #0x70
    1e7c:	br	x17

0000000000001e80 <PyLong_FromSsize_t@plt>:
    1e80:	adrp	x16, 19000 <PyMapping_Items>
    1e84:	ldr	x17, [x16, #120]
    1e88:	add	x16, x16, #0x78
    1e8c:	br	x17

0000000000001e90 <PyType_Ready@plt>:
    1e90:	adrp	x16, 19000 <PyMapping_Items>
    1e94:	ldr	x17, [x16, #128]
    1e98:	add	x16, x16, #0x80
    1e9c:	br	x17

0000000000001ea0 <PyLong_FromVoidPtr@plt>:
    1ea0:	adrp	x16, 19000 <PyMapping_Items>
    1ea4:	ldr	x17, [x16, #136]
    1ea8:	add	x16, x16, #0x88
    1eac:	br	x17

0000000000001eb0 <PyList_Append@plt>:
    1eb0:	adrp	x16, 19000 <PyMapping_Items>
    1eb4:	ldr	x17, [x16, #144]
    1eb8:	add	x16, x16, #0x90
    1ebc:	br	x17

0000000000001ec0 <_Py_CheckRecursiveCall@plt>:
    1ec0:	adrp	x16, 19000 <PyMapping_Items>
    1ec4:	ldr	x17, [x16, #152]
    1ec8:	add	x16, x16, #0x98
    1ecc:	br	x17

0000000000001ed0 <PyDict_Clear@plt>:
    1ed0:	adrp	x16, 19000 <PyMapping_Items>
    1ed4:	ldr	x17, [x16, #160]
    1ed8:	add	x16, x16, #0xa0
    1edc:	br	x17

0000000000001ee0 <_PyAccu_Destroy@plt>:
    1ee0:	adrp	x16, 19000 <PyMapping_Items>
    1ee4:	ldr	x17, [x16, #168]
    1ee8:	add	x16, x16, #0xa8
    1eec:	br	x17

0000000000001ef0 <__gmon_start__@plt>:
    1ef0:	adrp	x16, 19000 <PyMapping_Items>
    1ef4:	ldr	x17, [x16, #176]
    1ef8:	add	x16, x16, #0xb0
    1efc:	br	x17

0000000000001f00 <PyObject_CallFunction@plt>:
    1f00:	adrp	x16, 19000 <PyMapping_Items>
    1f04:	ldr	x17, [x16, #184]
    1f08:	add	x16, x16, #0xb8
    1f0c:	br	x17

0000000000001f10 <PyTuple_New@plt>:
    1f10:	adrp	x16, 19000 <PyMapping_Items>
    1f14:	ldr	x17, [x16, #192]
    1f18:	add	x16, x16, #0xc0
    1f1c:	br	x17

0000000000001f20 <PyThreadState_Get@plt>:
    1f20:	adrp	x16, 19000 <PyMapping_Items>
    1f24:	ldr	x17, [x16, #200]
    1f28:	add	x16, x16, #0xc8
    1f2c:	br	x17

0000000000001f30 <PyDict_DelItem@plt>:
    1f30:	adrp	x16, 19000 <PyMapping_Items>
    1f34:	ldr	x17, [x16, #208]
    1f38:	add	x16, x16, #0xd0
    1f3c:	br	x17

0000000000001f40 <PyErr_Occurred@plt>:
    1f40:	adrp	x16, 19000 <PyMapping_Items>
    1f44:	ldr	x17, [x16, #216]
    1f48:	add	x16, x16, #0xd8
    1f4c:	br	x17

0000000000001f50 <PyModule_Create2@plt>:
    1f50:	adrp	x16, 19000 <PyMapping_Items>
    1f54:	ldr	x17, [x16, #224]
    1f58:	add	x16, x16, #0xe0
    1f5c:	br	x17

0000000000001f60 <PyImport_ImportModule@plt>:
    1f60:	adrp	x16, 19000 <PyMapping_Items>
    1f64:	ldr	x17, [x16, #232]
    1f68:	add	x16, x16, #0xe8
    1f6c:	br	x17

0000000000001f70 <PyObject_CallFunctionObjArgs@plt>:
    1f70:	adrp	x16, 19000 <PyMapping_Items>
    1f74:	ldr	x17, [x16, #240]
    1f78:	add	x16, x16, #0xf0
    1f7c:	br	x17

0000000000001f80 <PyList_Sort@plt>:
    1f80:	adrp	x16, 19000 <PyMapping_Items>
    1f84:	ldr	x17, [x16, #248]
    1f88:	add	x16, x16, #0xf8
    1f8c:	br	x17

0000000000001f90 <PyObject_IsTrue@plt>:
    1f90:	adrp	x16, 19000 <PyMapping_Items>
    1f94:	ldr	x17, [x16, #256]
    1f98:	add	x16, x16, #0x100
    1f9c:	br	x17

0000000000001fa0 <PyArg_ParseTuple@plt>:
    1fa0:	adrp	x16, 19000 <PyMapping_Items>
    1fa4:	ldr	x17, [x16, #264]
    1fa8:	add	x16, x16, #0x108
    1fac:	br	x17

0000000000001fb0 <PyUnicode_FromKindAndData@plt>:
    1fb0:	adrp	x16, 19000 <PyMapping_Items>
    1fb4:	ldr	x17, [x16, #272]
    1fb8:	add	x16, x16, #0x110
    1fbc:	br	x17

0000000000001fc0 <PyCFunction_GetFunction@plt>:
    1fc0:	adrp	x16, 19000 <PyMapping_Items>
    1fc4:	ldr	x17, [x16, #280]
    1fc8:	add	x16, x16, #0x118
    1fcc:	br	x17

0000000000001fd0 <PyDict_New@plt>:
    1fd0:	adrp	x16, 19000 <PyMapping_Items>
    1fd4:	ldr	x17, [x16, #288]
    1fd8:	add	x16, x16, #0x120
    1fdc:	br	x17

0000000000001fe0 <PyUnicode_FromString@plt>:
    1fe0:	adrp	x16, 19000 <PyMapping_Items>
    1fe4:	ldr	x17, [x16, #296]
    1fe8:	add	x16, x16, #0x128
    1fec:	br	x17

0000000000001ff0 <PyObject_GetIter@plt>:
    1ff0:	adrp	x16, 19000 <PyMapping_Items>
    1ff4:	ldr	x17, [x16, #304]
    1ff8:	add	x16, x16, #0x130
    1ffc:	br	x17

0000000000002000 <PyUnicode_InternFromString@plt>:
    2000:	adrp	x16, 19000 <PyMapping_Items>
    2004:	ldr	x17, [x16, #312]
    2008:	add	x16, x16, #0x138
    200c:	br	x17

0000000000002010 <PyModule_AddObject@plt>:
    2010:	adrp	x16, 19000 <PyMapping_Items>
    2014:	ldr	x17, [x16, #320]
    2018:	add	x16, x16, #0x140
    201c:	br	x17

0000000000002020 <PyDict_SetItem@plt>:
    2020:	adrp	x16, 19000 <PyMapping_Items>
    2024:	ldr	x17, [x16, #328]
    2028:	add	x16, x16, #0x148
    202c:	br	x17

0000000000002030 <PyType_IsSubtype@plt>:
    2030:	adrp	x16, 19000 <PyMapping_Items>
    2034:	ldr	x17, [x16, #336]
    2038:	add	x16, x16, #0x150
    203c:	br	x17

0000000000002040 <PyErr_Format@plt>:
    2040:	adrp	x16, 19000 <PyMapping_Items>
    2044:	ldr	x17, [x16, #344]
    2048:	add	x16, x16, #0x158
    204c:	br	x17

0000000000002050 <PyUnicode_FromStringAndSize@plt>:
    2050:	adrp	x16, 19000 <PyMapping_Items>
    2054:	ldr	x17, [x16, #352]
    2058:	add	x16, x16, #0x160
    205c:	br	x17

0000000000002060 <PyLong_FromString@plt>:
    2060:	adrp	x16, 19000 <PyMapping_Items>
    2064:	ldr	x17, [x16, #360]
    2068:	add	x16, x16, #0x168
    206c:	br	x17

0000000000002070 <_PyAccu_FinishAsList@plt>:
    2070:	adrp	x16, 19000 <PyMapping_Items>
    2074:	ldr	x17, [x16, #368]
    2078:	add	x16, x16, #0x170
    207c:	br	x17

0000000000002080 <PyUnicode_New@plt>:
    2080:	adrp	x16, 19000 <PyMapping_Items>
    2084:	ldr	x17, [x16, #376]
    2088:	add	x16, x16, #0x178
    208c:	br	x17

0000000000002090 <PyTuple_Pack@plt>:
    2090:	adrp	x16, 19000 <PyMapping_Items>
    2094:	ldr	x17, [x16, #384]
    2098:	add	x16, x16, #0x180
    209c:	br	x17

00000000000020a0 <PyObject_GC_UnTrack@plt>:
    20a0:	adrp	x16, 19000 <PyMapping_Items>
    20a4:	ldr	x17, [x16, #392]
    20a8:	add	x16, x16, #0x188
    20ac:	br	x17

00000000000020b0 <PyDict_GetItemWithError@plt>:
    20b0:	adrp	x16, 19000 <PyMapping_Items>
    20b4:	ldr	x17, [x16, #400]
    20b8:	add	x16, x16, #0x190
    20bc:	br	x17

00000000000020c0 <PyFloat_FromString@plt>:
    20c0:	adrp	x16, 19000 <PyMapping_Items>
    20c4:	ldr	x17, [x16, #408]
    20c8:	add	x16, x16, #0x198
    20cc:	br	x17

00000000000020d0 <PySequence_Fast@plt>:
    20d0:	adrp	x16, 19000 <PyMapping_Items>
    20d4:	ldr	x17, [x16, #416]
    20d8:	add	x16, x16, #0x1a0
    20dc:	br	x17

Disassembly of section .text:

00000000000020e0 <PyInit__json@@Base-0x4b7c>:
    20e0:	adrp	x0, 18000 <PyInit__json@@Base+0x113a4>
    20e4:	ldr	x0, [x0, #4000]
    20e8:	cbz	x0, 20f0 <PySequence_Fast@plt+0x20>
    20ec:	b	1ef0 <__gmon_start__@plt>
    20f0:	ret
    20f4:	adrp	x0, 19000 <PyInit__json@@Base+0x123a4>
    20f8:	add	x0, x0, #0x8e8
    20fc:	adrp	x1, 19000 <PyInit__json@@Base+0x123a4>
    2100:	add	x1, x1, #0x8e8
    2104:	cmp	x0, x1
    2108:	b.eq	2134 <PySequence_Fast@plt+0x64>  // b.none
    210c:	adrp	x1, 18000 <PyInit__json@@Base+0x113a4>
    2110:	ldr	x1, [x1, #3944]
    2114:	cbz	x1, 2134 <PySequence_Fast@plt+0x64>
    2118:	stp	x29, x30, [sp, #-16]!
    211c:	mov	x29, sp
    2120:	adrp	x0, 19000 <PyInit__json@@Base+0x123a4>
    2124:	add	x0, x0, #0x8e8
    2128:	blr	x1
    212c:	ldp	x29, x30, [sp], #16
    2130:	ret
    2134:	ret
    2138:	adrp	x0, 19000 <PyInit__json@@Base+0x123a4>
    213c:	add	x0, x0, #0x8e8
    2140:	adrp	x1, 19000 <PyInit__json@@Base+0x123a4>
    2144:	add	x1, x1, #0x8e8
    2148:	sub	x0, x0, x1
    214c:	lsr	x1, x0, #63
    2150:	add	x0, x1, x0, asr #3
    2154:	cmp	xzr, x0, asr #1
    2158:	b.eq	2188 <PySequence_Fast@plt+0xb8>  // b.none
    215c:	asr	x1, x0, #1
    2160:	adrp	x2, 18000 <PyInit__json@@Base+0x113a4>
    2164:	ldr	x2, [x2, #4056]
    2168:	cbz	x2, 2188 <PySequence_Fast@plt+0xb8>
    216c:	stp	x29, x30, [sp, #-16]!
    2170:	mov	x29, sp
    2174:	adrp	x0, 19000 <PyInit__json@@Base+0x123a4>
    2178:	add	x0, x0, #0x8e8
    217c:	blr	x2
    2180:	ldp	x29, x30, [sp], #16
    2184:	ret
    2188:	ret
    218c:	adrp	x0, 19000 <PyInit__json@@Base+0x123a4>
    2190:	ldrb	w0, [x0, #2280]
    2194:	cbnz	w0, 21d0 <PySequence_Fast@plt+0x100>
    2198:	stp	x29, x30, [sp, #-16]!
    219c:	mov	x29, sp
    21a0:	adrp	x0, 18000 <PyInit__json@@Base+0x113a4>
    21a4:	ldr	x0, [x0, #3960]
    21a8:	cbz	x0, 21b8 <PySequence_Fast@plt+0xe8>
    21ac:	adrp	x0, 19000 <PyInit__json@@Base+0x123a4>
    21b0:	ldr	x0, [x0, #424]
    21b4:	bl	1de0 <__cxa_finalize@plt>
    21b8:	bl	20f4 <PySequence_Fast@plt+0x24>
    21bc:	adrp	x0, 19000 <PyInit__json@@Base+0x123a4>
    21c0:	mov	w1, #0x1                   	// #1
    21c4:	strb	w1, [x0, #2280]
    21c8:	ldp	x29, x30, [sp], #16
    21cc:	ret
    21d0:	ret
    21d4:	stp	x29, x30, [sp, #-16]!
    21d8:	mov	x29, sp
    21dc:	bl	2138 <PySequence_Fast@plt+0x68>
    21e0:	ldp	x29, x30, [sp], #16
    21e4:	ret
    21e8:	stp	x29, x30, [sp, #-48]!
    21ec:	mov	x29, sp
    21f0:	stp	x19, x20, [sp, #16]
    21f4:	str	x21, [sp, #32]
    21f8:	mov	x19, x0
    21fc:	mov	x20, x1
    2200:	mov	x21, x2
    2204:	ldr	x0, [x0, #24]
    2208:	cbz	x0, 2218 <PySequence_Fast@plt+0x148>
    220c:	mov	x1, x2
    2210:	blr	x20
    2214:	cbnz	w0, 226c <PySequence_Fast@plt+0x19c>
    2218:	ldr	x0, [x19, #32]
    221c:	cbz	x0, 222c <PySequence_Fast@plt+0x15c>
    2220:	mov	x1, x21
    2224:	blr	x20
    2228:	cbnz	w0, 226c <PySequence_Fast@plt+0x19c>
    222c:	ldr	x0, [x19, #40]
    2230:	cbz	x0, 2240 <PySequence_Fast@plt+0x170>
    2234:	mov	x1, x21
    2238:	blr	x20
    223c:	cbnz	w0, 226c <PySequence_Fast@plt+0x19c>
    2240:	ldr	x0, [x19, #48]
    2244:	cbz	x0, 2254 <PySequence_Fast@plt+0x184>
    2248:	mov	x1, x21
    224c:	blr	x20
    2250:	cbnz	w0, 226c <PySequence_Fast@plt+0x19c>
    2254:	ldr	x2, [x19, #56]
    2258:	mov	w0, #0x0                   	// #0
    225c:	cbz	x2, 226c <PySequence_Fast@plt+0x19c>
    2260:	mov	x1, x21
    2264:	mov	x0, x2
    2268:	blr	x20
    226c:	ldp	x19, x20, [sp, #16]
    2270:	ldr	x21, [sp, #32]
    2274:	ldp	x29, x30, [sp], #48
    2278:	ret
    227c:	stp	x29, x30, [sp, #-48]!
    2280:	mov	x29, sp
    2284:	stp	x19, x20, [sp, #16]
    2288:	str	x21, [sp, #32]
    228c:	mov	x19, x0
    2290:	mov	x20, x1
    2294:	mov	x21, x2
    2298:	ldr	x0, [x0, #16]
    229c:	cbz	x0, 22ac <PySequence_Fast@plt+0x1dc>
    22a0:	mov	x1, x2
    22a4:	blr	x20
    22a8:	cbnz	w0, 2314 <PySequence_Fast@plt+0x244>
    22ac:	ldr	x0, [x19, #24]
    22b0:	cbz	x0, 22c0 <PySequence_Fast@plt+0x1f0>
    22b4:	mov	x1, x21
    22b8:	blr	x20
    22bc:	cbnz	w0, 2314 <PySequence_Fast@plt+0x244>
    22c0:	ldr	x0, [x19, #32]
    22c4:	cbz	x0, 22d4 <PySequence_Fast@plt+0x204>
    22c8:	mov	x1, x21
    22cc:	blr	x20
    22d0:	cbnz	w0, 2314 <PySequence_Fast@plt+0x244>
    22d4:	ldr	x0, [x19, #40]
    22d8:	cbz	x0, 22e8 <PySequence_Fast@plt+0x218>
    22dc:	mov	x1, x21
    22e0:	blr	x20
    22e4:	cbnz	w0, 2314 <PySequence_Fast@plt+0x244>
    22e8:	ldr	x0, [x19, #48]
    22ec:	cbz	x0, 22fc <PySequence_Fast@plt+0x22c>
    22f0:	mov	x1, x21
    22f4:	blr	x20
    22f8:	cbnz	w0, 2314 <PySequence_Fast@plt+0x244>
    22fc:	ldr	x2, [x19, #56]
    2300:	mov	w0, #0x0                   	// #0
    2304:	cbz	x2, 2314 <PySequence_Fast@plt+0x244>
    2308:	mov	x1, x21
    230c:	mov	x0, x2
    2310:	blr	x20
    2314:	ldp	x19, x20, [sp, #16]
    2318:	ldr	x21, [sp, #32]
    231c:	ldp	x29, x30, [sp], #48
    2320:	ret
    2324:	sub	sp, sp, #0x90
    2328:	stp	x29, x30, [sp, #48]
    232c:	add	x29, sp, #0x30
    2330:	str	x19, [sp, #64]
    2334:	mov	x19, x0
    2338:	mov	x0, x1
    233c:	mov	x1, x2
    2340:	add	x2, sp, #0x54
    2344:	str	x2, [sp, #32]
    2348:	add	x2, sp, #0x58
    234c:	str	x2, [sp, #24]
    2350:	add	x2, sp, #0x5c
    2354:	str	x2, [sp, #16]
    2358:	add	x2, sp, #0x60
    235c:	str	x2, [sp, #8]
    2360:	add	x2, sp, #0x68
    2364:	str	x2, [sp]
    2368:	add	x7, sp, #0x70
    236c:	add	x6, sp, #0x78
    2370:	add	x5, sp, #0x80
    2374:	add	x4, sp, #0x88
    2378:	adrp	x3, 19000 <PyInit__json@@Base+0x123a4>
    237c:	add	x3, x3, #0x1b0
    2380:	adrp	x2, 6000 <PySequence_Fast@plt+0x3f30>
    2384:	add	x2, x2, #0xd90
    2388:	bl	1dc0 <PyArg_ParseTupleAndKeywords@plt>
    238c:	cbz	w0, 24e8 <PySequence_Fast@plt+0x418>
    2390:	ldr	x1, [sp, #136]
    2394:	adrp	x0, 18000 <PyInit__json@@Base+0x113a4>
    2398:	ldr	x0, [x0, #4016]
    239c:	cmp	x1, x0
    23a0:	b.eq	23b0 <PySequence_Fast@plt+0x2e0>  // b.none
    23a4:	ldr	x0, [x1, #8]
    23a8:	ldr	x1, [x0, #168]
    23ac:	tbz	w1, #29, 249c <PySequence_Fast@plt+0x3cc>
    23b0:	ldr	x2, [x19, #304]
    23b4:	mov	x1, #0x0                   	// #0
    23b8:	mov	x0, x19
    23bc:	blr	x2
    23c0:	mov	x19, x0
    23c4:	cbz	x0, 2488 <PySequence_Fast@plt+0x3b8>
    23c8:	ldr	x0, [sp, #136]
    23cc:	str	x0, [x19, #16]
    23d0:	ldr	x0, [sp, #128]
    23d4:	str	x0, [x19, #24]
    23d8:	ldr	x0, [sp, #120]
    23dc:	str	x0, [x19, #32]
    23e0:	ldr	x1, [sp, #112]
    23e4:	str	x1, [x19, #40]
    23e8:	ldr	x1, [sp, #104]
    23ec:	str	x1, [x19, #48]
    23f0:	ldr	x1, [sp, #96]
    23f4:	str	x1, [x19, #56]
    23f8:	ldr	w1, [sp, #92]
    23fc:	strb	w1, [x19, #64]
    2400:	ldr	w1, [sp, #88]
    2404:	strb	w1, [x19, #65]
    2408:	ldr	w1, [sp, #84]
    240c:	str	w1, [x19, #68]
    2410:	str	xzr, [x19, #72]
    2414:	ldr	x2, [x0, #8]
    2418:	adrp	x1, 18000 <PyInit__json@@Base+0x113a4>
    241c:	ldr	x1, [x1, #4064]
    2420:	cmp	x2, x1
    2424:	b.eq	24c0 <PySequence_Fast@plt+0x3f0>  // b.none
    2428:	ldr	x1, [x19, #16]
    242c:	ldr	x0, [x1]
    2430:	add	x0, x0, #0x1
    2434:	str	x0, [x1]
    2438:	ldr	x1, [x19, #24]
    243c:	ldr	x0, [x1]
    2440:	add	x0, x0, #0x1
    2444:	str	x0, [x1]
    2448:	ldr	x1, [x19, #32]
    244c:	ldr	x0, [x1]
    2450:	add	x0, x0, #0x1
    2454:	str	x0, [x1]
    2458:	ldr	x1, [x19, #40]
    245c:	ldr	x0, [x1]
    2460:	add	x0, x0, #0x1
    2464:	str	x0, [x1]
    2468:	ldr	x1, [x19, #48]
    246c:	ldr	x0, [x1]
    2470:	add	x0, x0, #0x1
    2474:	str	x0, [x1]
    2478:	ldr	x1, [x19, #56]
    247c:	ldr	x0, [x1]
    2480:	add	x0, x0, #0x1
    2484:	str	x0, [x1]
    2488:	mov	x0, x19
    248c:	ldr	x19, [sp, #64]
    2490:	ldp	x29, x30, [sp, #48]
    2494:	add	sp, sp, #0x90
    2498:	ret
    249c:	ldr	x2, [x0, #24]
    24a0:	adrp	x1, 6000 <PySequence_Fast@plt+0x3f30>
    24a4:	add	x1, x1, #0xda8
    24a8:	adrp	x0, 18000 <PyInit__json@@Base+0x113a4>
    24ac:	ldr	x0, [x0, #3976]
    24b0:	ldr	x0, [x0]
    24b4:	bl	2040 <PyErr_Format@plt>
    24b8:	mov	x19, #0x0                   	// #0
    24bc:	b	2488 <PySequence_Fast@plt+0x3b8>
    24c0:	bl	1fc0 <PyCFunction_GetFunction@plt>
    24c4:	adrp	x1, 2000 <PyUnicode_InternFromString@plt>
    24c8:	add	x1, x1, #0x4f0
    24cc:	cmp	x0, x1
    24d0:	adrp	x1, 2000 <PyUnicode_InternFromString@plt>
    24d4:	add	x1, x1, #0xc08
    24d8:	ccmp	x0, x1, #0x4, ne  // ne = any
    24dc:	b.ne	2428 <PySequence_Fast@plt+0x358>  // b.any
    24e0:	str	x0, [x19, #72]
    24e4:	b	2428 <PySequence_Fast@plt+0x358>
    24e8:	mov	x19, #0x0                   	// #0
    24ec:	b	2488 <PySequence_Fast@plt+0x3b8>
    24f0:	stp	x29, x30, [sp, #-48]!
    24f4:	mov	x29, sp
    24f8:	stp	x19, x20, [sp, #16]
    24fc:	mov	x19, x1
    2500:	ldr	x0, [x1, #8]
    2504:	ldr	x1, [x0, #168]
    2508:	tbz	w1, #28, 2b3c <PySequence_Fast@plt+0xa6c>
    250c:	ldrsb	w0, [x19, #32]
    2510:	tbz	w0, #31, 257c <PySequence_Fast@plt+0x4ac>
    2514:	str	x21, [sp, #32]
    2518:	ldrb	w0, [x19, #32]
    251c:	tbnz	w0, #6, 2b60 <PySequence_Fast@plt+0xa90>
    2520:	and	w2, w0, #0x1c
    2524:	mov	w1, #0xff                  	// #255
    2528:	cmp	w2, #0x4
    252c:	b.eq	2540 <PySequence_Fast@plt+0x470>  // b.none
    2530:	cmp	w2, #0x8
    2534:	mov	w1, #0xffff                	// #65535
    2538:	mov	w2, #0x10ffff              	// #1114111
    253c:	csel	w1, w1, w2, eq  // eq = none
    2540:	ldr	x20, [x19, #16]
    2544:	add	x21, x19, #0x48
    2548:	tbnz	w0, #5, 2550 <PySequence_Fast@plt+0x480>
    254c:	ldr	x21, [x19, #72]
    2550:	ldrb	w4, [x19, #32]
    2554:	ubfx	x4, x4, #2, #3
    2558:	cmp	x20, #0x0
    255c:	b.le	2658 <PySequence_Fast@plt+0x588>
    2560:	mov	x0, #0x2                   	// #2
    2564:	mov	x3, #0x0                   	// #0
    2568:	mov	x6, #0x6                   	// #6
    256c:	mov	x9, #0x1                   	// #1
    2570:	mov	x8, x0
    2574:	mov	x7, #0x7fffffffffffffff    	// #9223372036854775807
    2578:	b	25dc <PySequence_Fast@plt+0x50c>
    257c:	mov	x0, x19
    2580:	bl	1db0 <_PyUnicode_Ready@plt>
    2584:	cmn	w0, #0x1
    2588:	b.ne	2514 <PySequence_Fast@plt+0x444>  // b.any
    258c:	mov	x0, #0x0                   	// #0
    2590:	b	264c <PySequence_Fast@plt+0x57c>
    2594:	ldrb	w2, [x21, x3]
    2598:	b	25a0 <PySequence_Fast@plt+0x4d0>
    259c:	ldr	w2, [x21, x3, lsl #2]
    25a0:	cmp	w2, #0x22
    25a4:	b.eq	2624 <PySequence_Fast@plt+0x554>  // b.none
    25a8:	cmp	w2, #0x22
    25ac:	b.hi	2608 <PySequence_Fast@plt+0x538>  // b.pmore
    25b0:	cmp	w2, #0xa
    25b4:	b.hi	25f4 <PySequence_Fast@plt+0x524>  // b.pmore
    25b8:	cmp	w2, #0x8
    25bc:	csel	x2, x6, x8, cc  // cc = lo, ul, last
    25c0:	sub	x5, x7, x2
    25c4:	cmp	x5, x0
    25c8:	b.lt	262c <PySequence_Fast@plt+0x55c>  // b.tstop
    25cc:	add	x0, x0, x2
    25d0:	add	x3, x3, #0x1
    25d4:	cmp	x3, x20
    25d8:	b.eq	265c <PySequence_Fast@plt+0x58c>  // b.none
    25dc:	cmp	w4, #0x1
    25e0:	b.eq	2594 <PySequence_Fast@plt+0x4c4>  // b.none
    25e4:	cmp	w4, #0x2
    25e8:	b.ne	259c <PySequence_Fast@plt+0x4cc>  // b.any
    25ec:	ldrh	w2, [x21, x3, lsl #1]
    25f0:	b	25a0 <PySequence_Fast@plt+0x4d0>
    25f4:	sub	w5, w2, #0xc
    25f8:	cmp	w5, #0x1
    25fc:	b.hi	2618 <PySequence_Fast@plt+0x548>  // b.pmore
    2600:	mov	x2, #0x2                   	// #2
    2604:	b	25c0 <PySequence_Fast@plt+0x4f0>
    2608:	cmp	w2, #0x5c
    260c:	cset	x2, eq  // eq = none
    2610:	add	x2, x2, #0x1
    2614:	b	25c0 <PySequence_Fast@plt+0x4f0>
    2618:	cmp	w2, #0x20
    261c:	csel	x2, x6, x9, cc  // cc = lo, ul, last
    2620:	b	25c0 <PySequence_Fast@plt+0x4f0>
    2624:	mov	x2, #0x2                   	// #2
    2628:	b	25c0 <PySequence_Fast@plt+0x4f0>
    262c:	adrp	x1, 6000 <PySequence_Fast@plt+0x3f30>
    2630:	add	x1, x1, #0xde8
    2634:	adrp	x0, 18000 <PyInit__json@@Base+0x113a4>
    2638:	ldr	x0, [x0, #4008]
    263c:	ldr	x0, [x0]
    2640:	bl	1e60 <PyErr_SetString@plt>
    2644:	mov	x0, #0x0                   	// #0
    2648:	ldr	x21, [sp, #32]
    264c:	ldp	x19, x20, [sp, #16]
    2650:	ldp	x29, x30, [sp], #48
    2654:	ret
    2658:	mov	x0, #0x2                   	// #2
    265c:	bl	2080 <PyUnicode_New@plt>
    2660:	cbz	x0, 2c00 <PySequence_Fast@plt+0xb30>
    2664:	ldrb	w1, [x0, #32]
    2668:	ubfx	x1, x1, #2, #3
    266c:	cmp	w1, #0x1
    2670:	b.eq	26e0 <PySequence_Fast@plt+0x610>  // b.none
    2674:	cmp	w1, #0x2
    2678:	b.eq	2850 <PySequence_Fast@plt+0x780>  // b.none
    267c:	ldrb	w1, [x0, #32]
    2680:	tbz	w1, #5, 29dc <PySequence_Fast@plt+0x90c>
    2684:	add	x4, x0, #0x30
    2688:	add	x2, x0, #0x48
    268c:	tst	x1, #0x40
    2690:	csel	x4, x2, x4, eq  // eq = none
    2694:	mov	w1, #0x22                  	// #34
    2698:	str	w1, [x4]
    269c:	cmp	x20, #0x0
    26a0:	b.le	2b28 <PySequence_Fast@plt+0xa58>
    26a4:	mov	x3, x21
    26a8:	add	x20, x21, x20, lsl #2
    26ac:	mov	x2, #0x1                   	// #1
    26b0:	mov	w5, #0x5c                  	// #92
    26b4:	mov	w13, #0x66                  	// #102
    26b8:	mov	w14, #0x75                  	// #117
    26bc:	mov	w12, #0x30                  	// #48
    26c0:	adrp	x6, 18000 <PyInit__json@@Base+0x113a4>
    26c4:	ldr	x6, [x6, #4048]
    26c8:	mov	w11, w1
    26cc:	mov	w10, #0x72                  	// #114
    26d0:	mov	w9, #0x74                  	// #116
    26d4:	mov	w8, #0x6e                  	// #110
    26d8:	mov	w7, #0x62                  	// #98
    26dc:	b	2a34 <PySequence_Fast@plt+0x964>
    26e0:	ldrb	w1, [x0, #32]
    26e4:	tbz	w1, #5, 2744 <PySequence_Fast@plt+0x674>
    26e8:	add	x4, x0, #0x30
    26ec:	add	x2, x0, #0x48
    26f0:	tst	x1, #0x40
    26f4:	csel	x4, x2, x4, eq  // eq = none
    26f8:	mov	w1, #0x22                  	// #34
    26fc:	strb	w1, [x4]
    2700:	cmp	x20, #0x0
    2704:	b.le	283c <PySequence_Fast@plt+0x76c>
    2708:	mov	x3, x21
    270c:	add	x20, x21, x20
    2710:	mov	x2, #0x1                   	// #1
    2714:	mov	w5, #0x5c                  	// #92
    2718:	mov	w13, #0x66                  	// #102
    271c:	mov	w14, #0x75                  	// #117
    2720:	mov	w12, #0x30                  	// #48
    2724:	adrp	x6, 18000 <PyInit__json@@Base+0x113a4>
    2728:	ldr	x6, [x6, #4048]
    272c:	mov	w11, w1
    2730:	mov	w10, #0x72                  	// #114
    2734:	mov	w9, #0x74                  	// #116
    2738:	mov	w8, #0x6e                  	// #110
    273c:	mov	w7, #0x62                  	// #98
    2740:	b	2794 <PySequence_Fast@plt+0x6c4>
    2744:	ldr	x4, [x0, #72]
    2748:	b	26f8 <PySequence_Fast@plt+0x628>
    274c:	cmp	w1, #0x8
    2750:	b.ne	2b78 <PySequence_Fast@plt+0xaa8>  // b.any
    2754:	add	x1, x2, #0x1
    2758:	strb	w5, [x4, x2]
    275c:	strb	w7, [x4, x1]
    2760:	add	x2, x2, #0x2
    2764:	b	2788 <PySequence_Fast@plt+0x6b8>
    2768:	cmp	w1, #0x22
    276c:	b.eq	27e8 <PySequence_Fast@plt+0x718>  // b.none
    2770:	cmp	w1, #0x5c
    2774:	b.ne	27cc <PySequence_Fast@plt+0x6fc>  // b.any
    2778:	add	x1, x2, #0x1
    277c:	strb	w5, [x4, x2]
    2780:	strb	w5, [x4, x1]
    2784:	add	x2, x2, #0x2
    2788:	add	x3, x3, #0x1
    278c:	cmp	x3, x20
    2790:	b.eq	2840 <PySequence_Fast@plt+0x770>  // b.none
    2794:	ldrb	w1, [x3]
    2798:	cmp	w1, #0xc
    279c:	b.eq	27fc <PySequence_Fast@plt+0x72c>  // b.none
    27a0:	cmp	w1, #0xc
    27a4:	b.hi	2768 <PySequence_Fast@plt+0x698>  // b.pmore
    27a8:	cmp	w1, #0x9
    27ac:	b.eq	2810 <PySequence_Fast@plt+0x740>  // b.none
    27b0:	cmp	w1, #0xa
    27b4:	b.ne	274c <PySequence_Fast@plt+0x67c>  // b.any
    27b8:	add	x1, x2, #0x1
    27bc:	strb	w5, [x4, x2]
    27c0:	strb	w8, [x4, x1]
    27c4:	add	x2, x2, #0x2
    27c8:	b	2788 <PySequence_Fast@plt+0x6b8>
    27cc:	cmp	w1, #0xd
    27d0:	b.ne	2824 <PySequence_Fast@plt+0x754>  // b.any
    27d4:	add	x1, x2, #0x1
    27d8:	strb	w5, [x4, x2]
    27dc:	strb	w10, [x4, x1]
    27e0:	add	x2, x2, #0x2
    27e4:	b	2788 <PySequence_Fast@plt+0x6b8>
    27e8:	add	x1, x2, #0x1
    27ec:	strb	w5, [x4, x2]
    27f0:	strb	w11, [x4, x1]
    27f4:	add	x2, x2, #0x2
    27f8:	b	2788 <PySequence_Fast@plt+0x6b8>
    27fc:	add	x1, x2, #0x1
    2800:	strb	w5, [x4, x2]
    2804:	strb	w13, [x4, x1]
    2808:	add	x2, x2, #0x2
    280c:	b	2788 <PySequence_Fast@plt+0x6b8>
    2810:	add	x1, x2, #0x1
    2814:	strb	w5, [x4, x2]
    2818:	strb	w9, [x4, x1]
    281c:	add	x2, x2, #0x2
    2820:	b	2788 <PySequence_Fast@plt+0x6b8>
    2824:	mov	w15, w1
    2828:	cmp	w1, #0x1f
    282c:	b.ls	2b7c <PySequence_Fast@plt+0xaac>  // b.plast
    2830:	strb	w1, [x4, x2]
    2834:	add	x2, x2, #0x1
    2838:	b	2788 <PySequence_Fast@plt+0x6b8>
    283c:	mov	x2, #0x1                   	// #1
    2840:	mov	w1, #0x22                  	// #34
    2844:	strb	w1, [x4, x2]
    2848:	ldr	x21, [sp, #32]
    284c:	b	264c <PySequence_Fast@plt+0x57c>
    2850:	ldrb	w1, [x0, #32]
    2854:	tbz	w1, #5, 28b4 <PySequence_Fast@plt+0x7e4>
    2858:	add	x4, x0, #0x30
    285c:	add	x2, x0, #0x48
    2860:	tst	x1, #0x40
    2864:	csel	x4, x2, x4, eq  // eq = none
    2868:	mov	w1, #0x22                  	// #34
    286c:	strh	w1, [x4]
    2870:	cmp	x20, #0x0
    2874:	b.le	29c8 <PySequence_Fast@plt+0x8f8>
    2878:	mov	x2, x21
    287c:	add	x20, x21, x20, lsl #1
    2880:	mov	x3, #0x1                   	// #1
    2884:	mov	w5, #0x5c                  	// #92
    2888:	mov	w13, #0x66                  	// #102
    288c:	mov	w14, #0x75                  	// #117
    2890:	mov	w12, #0x30                  	// #48
    2894:	adrp	x6, 18000 <PyInit__json@@Base+0x113a4>
    2898:	ldr	x6, [x6, #4048]
    289c:	mov	w11, w1
    28a0:	mov	w10, #0x72                  	// #114
    28a4:	mov	w9, #0x74                  	// #116
    28a8:	mov	w8, #0x6e                  	// #110
    28ac:	mov	w7, #0x62                  	// #98
    28b0:	b	290c <PySequence_Fast@plt+0x83c>
    28b4:	ldr	x4, [x0, #72]
    28b8:	b	2868 <PySequence_Fast@plt+0x798>
    28bc:	cmp	w1, #0x8
    28c0:	b.ne	2bbc <PySequence_Fast@plt+0xaec>  // b.any
    28c4:	lsl	x1, x3, #1
    28c8:	strh	w5, [x4, x1]
    28cc:	add	x3, x3, #0x2
    28d0:	add	x1, x4, x1
    28d4:	strh	w7, [x1, #2]
    28d8:	b	2900 <PySequence_Fast@plt+0x830>
    28dc:	cmp	w1, #0x22
    28e0:	b.eq	2968 <PySequence_Fast@plt+0x898>  // b.none
    28e4:	cmp	w1, #0x5c
    28e8:	b.ne	2948 <PySequence_Fast@plt+0x878>  // b.any
    28ec:	lsl	x1, x3, #1
    28f0:	strh	w5, [x4, x1]
    28f4:	add	x3, x3, #0x2
    28f8:	add	x1, x4, x1
    28fc:	strh	w5, [x1, #2]
    2900:	add	x2, x2, #0x2
    2904:	cmp	x2, x20
    2908:	b.eq	29cc <PySequence_Fast@plt+0x8fc>  // b.none
    290c:	ldrh	w1, [x2]
    2910:	cmp	w1, #0xc
    2914:	b.eq	2980 <PySequence_Fast@plt+0x8b0>  // b.none
    2918:	cmp	w1, #0xc
    291c:	b.hi	28dc <PySequence_Fast@plt+0x80c>  // b.pmore
    2920:	cmp	w1, #0x9
    2924:	b.eq	2998 <PySequence_Fast@plt+0x8c8>  // b.none
    2928:	cmp	w1, #0xa
    292c:	b.ne	28bc <PySequence_Fast@plt+0x7ec>  // b.any
    2930:	lsl	x1, x3, #1
    2934:	strh	w5, [x4, x1]
    2938:	add	x3, x3, #0x2
    293c:	add	x1, x4, x1
    2940:	strh	w8, [x1, #2]
    2944:	b	2900 <PySequence_Fast@plt+0x830>
    2948:	cmp	w1, #0xd
    294c:	b.ne	29b0 <PySequence_Fast@plt+0x8e0>  // b.any
    2950:	lsl	x1, x3, #1
    2954:	strh	w5, [x4, x1]
    2958:	add	x3, x3, #0x2
    295c:	add	x1, x4, x1
    2960:	strh	w10, [x1, #2]
    2964:	b	2900 <PySequence_Fast@plt+0x830>
    2968:	lsl	x1, x3, #1
    296c:	strh	w5, [x4, x1]
    2970:	add	x3, x3, #0x2
    2974:	add	x1, x4, x1
    2978:	strh	w11, [x1, #2]
    297c:	b	2900 <PySequence_Fast@plt+0x830>
    2980:	lsl	x1, x3, #1
    2984:	strh	w5, [x4, x1]
    2988:	add	x3, x3, #0x2
    298c:	add	x1, x4, x1
    2990:	strh	w13, [x1, #2]
    2994:	b	2900 <PySequence_Fast@plt+0x830>
    2998:	lsl	x1, x3, #1
    299c:	strh	w5, [x4, x1]
    29a0:	add	x3, x3, #0x2
    29a4:	add	x1, x4, x1
    29a8:	strh	w9, [x1, #2]
    29ac:	b	2900 <PySequence_Fast@plt+0x830>
    29b0:	mov	w16, w1
    29b4:	cmp	w1, #0x1f
    29b8:	b.ls	2bc0 <PySequence_Fast@plt+0xaf0>  // b.plast
    29bc:	strh	w1, [x4, x3, lsl #1]
    29c0:	add	x3, x3, #0x1
    29c4:	b	2900 <PySequence_Fast@plt+0x830>
    29c8:	mov	x3, #0x1                   	// #1
    29cc:	mov	w1, #0x22                  	// #34
    29d0:	strh	w1, [x4, x3, lsl #1]
    29d4:	ldr	x21, [sp, #32]
    29d8:	b	264c <PySequence_Fast@plt+0x57c>
    29dc:	ldr	x4, [x0, #72]
    29e0:	b	2694 <PySequence_Fast@plt+0x5c4>
    29e4:	cmp	w1, #0x8
    29e8:	b.ne	2aec <PySequence_Fast@plt+0xa1c>  // b.any
    29ec:	lsl	x1, x2, #2
    29f0:	str	w5, [x4, x2, lsl #2]
    29f4:	add	x1, x4, x1
    29f8:	add	x2, x2, #0x2
    29fc:	str	w7, [x1, #4]
    2a00:	b	2a28 <PySequence_Fast@plt+0x958>
    2a04:	cmp	w1, #0x22
    2a08:	b.eq	2a90 <PySequence_Fast@plt+0x9c0>  // b.none
    2a0c:	cmp	w1, #0x5c
    2a10:	b.ne	2a70 <PySequence_Fast@plt+0x9a0>  // b.any
    2a14:	lsl	x1, x2, #2
    2a18:	str	w5, [x4, x2, lsl #2]
    2a1c:	add	x1, x4, x1
    2a20:	add	x2, x2, #0x2
    2a24:	str	w5, [x1, #4]
    2a28:	add	x3, x3, #0x4
    2a2c:	cmp	x3, x20
    2a30:	b.eq	2b2c <PySequence_Fast@plt+0xa5c>  // b.none
    2a34:	ldr	w1, [x3]
    2a38:	cmp	w1, #0xc
    2a3c:	b.eq	2aa8 <PySequence_Fast@plt+0x9d8>  // b.none
    2a40:	cmp	w1, #0xc
    2a44:	b.hi	2a04 <PySequence_Fast@plt+0x934>  // b.pmore
    2a48:	cmp	w1, #0x9
    2a4c:	b.eq	2ac0 <PySequence_Fast@plt+0x9f0>  // b.none
    2a50:	cmp	w1, #0xa
    2a54:	b.ne	29e4 <PySequence_Fast@plt+0x914>  // b.any
    2a58:	lsl	x1, x2, #2
    2a5c:	str	w5, [x4, x2, lsl #2]
    2a60:	add	x1, x4, x1
    2a64:	add	x2, x2, #0x2
    2a68:	str	w8, [x1, #4]
    2a6c:	b	2a28 <PySequence_Fast@plt+0x958>
    2a70:	cmp	w1, #0xd
    2a74:	b.ne	2ad8 <PySequence_Fast@plt+0xa08>  // b.any
    2a78:	lsl	x1, x2, #2
    2a7c:	str	w5, [x4, x2, lsl #2]
    2a80:	add	x1, x4, x1
    2a84:	add	x2, x2, #0x2
    2a88:	str	w10, [x1, #4]
    2a8c:	b	2a28 <PySequence_Fast@plt+0x958>
    2a90:	lsl	x1, x2, #2
    2a94:	str	w5, [x4, x2, lsl #2]
    2a98:	add	x1, x4, x1
    2a9c:	add	x2, x2, #0x2
    2aa0:	str	w11, [x1, #4]
    2aa4:	b	2a28 <PySequence_Fast@plt+0x958>
    2aa8:	lsl	x1, x2, #2
    2aac:	str	w5, [x4, x2, lsl #2]
    2ab0:	add	x1, x4, x1
    2ab4:	add	x2, x2, #0x2
    2ab8:	str	w13, [x1, #4]
    2abc:	b	2a28 <PySequence_Fast@plt+0x958>
    2ac0:	lsl	x1, x2, #2
    2ac4:	str	w5, [x4, x2, lsl #2]
    2ac8:	add	x1, x4, x1
    2acc:	add	x2, x2, #0x2
    2ad0:	str	w9, [x1, #4]
    2ad4:	b	2a28 <PySequence_Fast@plt+0x958>
    2ad8:	cmp	w1, #0x1f
    2adc:	b.ls	2aec <PySequence_Fast@plt+0xa1c>  // b.plast
    2ae0:	str	w1, [x4, x2, lsl #2]
    2ae4:	add	x2, x2, #0x1
    2ae8:	b	2a28 <PySequence_Fast@plt+0x958>
    2aec:	str	w5, [x4, x2, lsl #2]
    2af0:	add	x15, x4, x2, lsl #2
    2af4:	str	w14, [x15, #4]
    2af8:	str	w12, [x15, #8]
    2afc:	str	w12, [x15, #12]
    2b00:	lsr	w17, w1, #4
    2b04:	ldr	x16, [x6]
    2b08:	ldrb	w16, [x16, w17, uxtw]
    2b0c:	str	w16, [x15, #16]
    2b10:	add	x2, x2, #0x6
    2b14:	and	w1, w1, #0xf
    2b18:	ldr	x16, [x6]
    2b1c:	ldrb	w1, [x16, w1, uxtw]
    2b20:	str	w1, [x15, #20]
    2b24:	b	2a28 <PySequence_Fast@plt+0x958>
    2b28:	mov	x2, #0x1                   	// #1
    2b2c:	mov	w1, #0x22                  	// #34
    2b30:	str	w1, [x4, x2, lsl #2]
    2b34:	ldr	x21, [sp, #32]
    2b38:	b	264c <PySequence_Fast@plt+0x57c>
    2b3c:	ldr	x2, [x0, #24]
    2b40:	adrp	x1, 6000 <PySequence_Fast@plt+0x3f30>
    2b44:	add	x1, x1, #0xe08
    2b48:	adrp	x0, 18000 <PyInit__json@@Base+0x113a4>
    2b4c:	ldr	x0, [x0, #3976]
    2b50:	ldr	x0, [x0]
    2b54:	bl	2040 <PyErr_Format@plt>
    2b58:	mov	x0, #0x0                   	// #0
    2b5c:	b	264c <PySequence_Fast@plt+0x57c>
    2b60:	ldr	x20, [x19, #16]
    2b64:	mov	w1, #0x7f                  	// #127
    2b68:	tbz	w0, #5, 254c <PySequence_Fast@plt+0x47c>
    2b6c:	add	x21, x19, #0x30
    2b70:	mov	w1, #0x7f                  	// #127
    2b74:	b	2550 <PySequence_Fast@plt+0x480>
    2b78:	mov	w15, w1
    2b7c:	strb	w5, [x4, x2]
    2b80:	add	x16, x4, x2
    2b84:	strb	w14, [x16, #1]
    2b88:	strb	w12, [x16, #2]
    2b8c:	strb	w12, [x16, #3]
    2b90:	add	x17, x2, #0x5
    2b94:	lsr	w15, w15, #4
    2b98:	ldr	x18, [x6]
    2b9c:	ldrb	w15, [x18, w15, uxtw]
    2ba0:	strb	w15, [x16, #4]
    2ba4:	and	x1, x1, #0xf
    2ba8:	ldr	x15, [x6]
    2bac:	ldrb	w15, [x15, x1]
    2bb0:	strb	w15, [x4, x17]
    2bb4:	add	x2, x2, #0x6
    2bb8:	b	2788 <PySequence_Fast@plt+0x6b8>
    2bbc:	mov	w16, w1
    2bc0:	lsl	x15, x3, #1
    2bc4:	strh	w5, [x4, x15]
    2bc8:	add	x15, x4, x15
    2bcc:	strh	w14, [x15, #2]
    2bd0:	strh	w12, [x15, #4]
    2bd4:	strh	w12, [x15, #6]
    2bd8:	lsr	w16, w16, #4
    2bdc:	ldr	x17, [x6]
    2be0:	ldrb	w16, [x17, w16, uxtw]
    2be4:	strh	w16, [x15, #8]
    2be8:	add	x3, x3, #0x6
    2bec:	and	x1, x1, #0xf
    2bf0:	ldr	x16, [x6]
    2bf4:	ldrb	w1, [x16, x1]
    2bf8:	strh	w1, [x15, #10]
    2bfc:	b	2900 <PySequence_Fast@plt+0x830>
    2c00:	ldr	x21, [sp, #32]
    2c04:	b	264c <PySequence_Fast@plt+0x57c>
    2c08:	stp	x29, x30, [sp, #-80]!
    2c0c:	mov	x29, sp
    2c10:	stp	x19, x20, [sp, #16]
    2c14:	mov	x19, x1
    2c18:	ldr	x0, [x1, #8]
    2c1c:	ldr	x1, [x0, #168]
    2c20:	tbz	w1, #28, 2fc4 <PySequence_Fast@plt+0xef4>
    2c24:	ldrsb	w0, [x19, #32]
    2c28:	tbz	w0, #31, 2c88 <PySequence_Fast@plt+0xbb8>
    2c2c:	stp	x21, x22, [sp, #32]
    2c30:	ldr	x21, [x19, #16]
    2c34:	ldrb	w0, [x19, #32]
    2c38:	tbz	w0, #5, 2ca0 <PySequence_Fast@plt+0xbd0>
    2c3c:	add	x20, x19, #0x30
    2c40:	add	x1, x19, #0x48
    2c44:	tst	x0, #0x40
    2c48:	csel	x20, x1, x20, eq  // eq = none
    2c4c:	ldrb	w19, [x19, #32]
    2c50:	ubfx	x19, x19, #2, #3
    2c54:	cmp	x21, #0x0
    2c58:	b.le	2d78 <PySequence_Fast@plt+0xca8>
    2c5c:	mov	x0, #0x2                   	// #2
    2c60:	mov	x3, #0x0                   	// #0
    2c64:	mov	w12, #0x22                  	// #34
    2c68:	mov	w11, #0x5e                  	// #94
    2c6c:	mov	x10, #0x1                   	// #1
    2c70:	mov	x4, x0
    2c74:	mov	w9, #0xffff                	// #65535
    2c78:	mov	x8, #0xc                   	// #12
    2c7c:	mov	x6, #0x6                   	// #6
    2c80:	mov	x7, #0x7fffffffffffffff    	// #9223372036854775807
    2c84:	b	2cdc <PySequence_Fast@plt+0xc0c>
    2c88:	mov	x0, x19
    2c8c:	bl	1db0 <_PyUnicode_Ready@plt>
    2c90:	cmn	w0, #0x1
    2c94:	b.ne	2c2c <PySequence_Fast@plt+0xb5c>  // b.any
    2c98:	mov	x0, #0x0                   	// #0
    2c9c:	b	2d6c <PySequence_Fast@plt+0xc9c>
    2ca0:	ldr	x20, [x19, #72]
    2ca4:	b	2c4c <PySequence_Fast@plt+0xb7c>
    2ca8:	ldrb	w1, [x20, x3]
    2cac:	b	2cf0 <PySequence_Fast@plt+0xc20>
    2cb0:	ldrh	w1, [x20, x3, lsl #1]
    2cb4:	b	2cf0 <PySequence_Fast@plt+0xc20>
    2cb8:	cmp	w1, #0x8
    2cbc:	csel	x2, x6, x4, cc  // cc = lo, ul, last
    2cc0:	sub	x1, x7, x2
    2cc4:	cmp	x1, x0
    2cc8:	b.lt	2d4c <PySequence_Fast@plt+0xc7c>  // b.tstop
    2ccc:	add	x0, x0, x2
    2cd0:	add	x3, x3, #0x1
    2cd4:	cmp	x21, x3
    2cd8:	b.eq	2d7c <PySequence_Fast@plt+0xcac>  // b.none
    2cdc:	cmp	w19, #0x1
    2ce0:	b.eq	2ca8 <PySequence_Fast@plt+0xbd8>  // b.none
    2ce4:	cmp	w19, #0x2
    2ce8:	b.eq	2cb0 <PySequence_Fast@plt+0xbe0>  // b.none
    2cec:	ldr	w1, [x20, x3, lsl #2]
    2cf0:	sub	w5, w1, #0x20
    2cf4:	cmp	w1, #0x5c
    2cf8:	ccmp	w1, w12, #0x4, ne  // ne = any
    2cfc:	mov	x2, x10
    2d00:	ccmp	w5, w11, #0x2, ne  // ne = any
    2d04:	b.ls	2cc0 <PySequence_Fast@plt+0xbf0>  // b.plast
    2d08:	cmp	w1, #0x22
    2d0c:	b.eq	2d44 <PySequence_Fast@plt+0xc74>  // b.none
    2d10:	b.hi	2d2c <PySequence_Fast@plt+0xc5c>  // b.pmore
    2d14:	cmp	w1, #0xa
    2d18:	b.ls	2cb8 <PySequence_Fast@plt+0xbe8>  // b.plast
    2d1c:	sub	w1, w1, #0xc
    2d20:	cmp	w1, #0x2
    2d24:	csel	x2, x4, x6, cc  // cc = lo, ul, last
    2d28:	b	2cc0 <PySequence_Fast@plt+0xbf0>
    2d2c:	mov	x2, x4
    2d30:	cmp	w1, #0x5c
    2d34:	b.eq	2cc0 <PySequence_Fast@plt+0xbf0>  // b.none
    2d38:	cmp	w1, w9
    2d3c:	csel	x2, x8, x6, hi  // hi = pmore
    2d40:	b	2cc0 <PySequence_Fast@plt+0xbf0>
    2d44:	mov	x2, x4
    2d48:	b	2cc0 <PySequence_Fast@plt+0xbf0>
    2d4c:	adrp	x1, 6000 <PySequence_Fast@plt+0x3f30>
    2d50:	add	x1, x1, #0xde8
    2d54:	adrp	x0, 18000 <PyInit__json@@Base+0x113a4>
    2d58:	ldr	x0, [x0, #4008]
    2d5c:	ldr	x0, [x0]
    2d60:	bl	1e60 <PyErr_SetString@plt>
    2d64:	mov	x0, #0x0                   	// #0
    2d68:	ldp	x21, x22, [sp, #32]
    2d6c:	ldp	x19, x20, [sp, #16]
    2d70:	ldp	x29, x30, [sp], #80
    2d74:	ret
    2d78:	mov	x0, #0x2                   	// #2
    2d7c:	mov	w1, #0x7f                  	// #127
    2d80:	bl	2080 <PyUnicode_New@plt>
    2d84:	cbz	x0, 2fe8 <PySequence_Fast@plt+0xf18>
    2d88:	ldrb	w1, [x0, #32]
    2d8c:	tbz	w1, #5, 2e04 <PySequence_Fast@plt+0xd34>
    2d90:	add	x4, x0, #0x30
    2d94:	add	x2, x0, #0x48
    2d98:	tst	x1, #0x40
    2d9c:	csel	x4, x2, x4, eq  // eq = none
    2da0:	mov	w1, #0x22                  	// #34
    2da4:	strb	w1, [x4]
    2da8:	cmp	x21, #0x0
    2dac:	b.le	2fbc <PySequence_Fast@plt+0xeec>
    2db0:	stp	x23, x24, [sp, #48]
    2db4:	str	x25, [sp, #64]
    2db8:	mov	x2, #0x1                   	// #1
    2dbc:	mov	x3, #0x0                   	// #0
    2dc0:	mov	w10, #0x22                  	// #34
    2dc4:	mov	w9, #0x5e                  	// #94
    2dc8:	mov	w8, #0x5c                  	// #92
    2dcc:	mov	w18, #0x66                  	// #102
    2dd0:	mov	w12, #0x75                  	// #117
    2dd4:	adrp	x1, 18000 <PyInit__json@@Base+0x113a4>
    2dd8:	ldr	x11, [x1, #4048]
    2ddc:	mov	w17, #0x22                  	// #34
    2de0:	mov	w22, #0xffff                	// #65535
    2de4:	mov	w30, #0xd7c0                	// #55232
    2de8:	mov	x7, x11
    2dec:	mov	w23, #0xdc00                	// #56320
    2df0:	mov	w16, #0x72                  	// #114
    2df4:	mov	w15, #0x74                  	// #116
    2df8:	mov	w14, #0x6e                  	// #110
    2dfc:	mov	w13, #0x62                  	// #98
    2e00:	b	2e30 <PySequence_Fast@plt+0xd60>
    2e04:	ldr	x4, [x0, #72]
    2e08:	b	2da0 <PySequence_Fast@plt+0xcd0>
    2e0c:	ldrb	w1, [x20, x3]
    2e10:	b	2e44 <PySequence_Fast@plt+0xd74>
    2e14:	ldrh	w1, [x20, x3, lsl #1]
    2e18:	b	2e44 <PySequence_Fast@plt+0xd74>
    2e1c:	strb	w1, [x4, x2]
    2e20:	add	x2, x2, #0x1
    2e24:	add	x3, x3, #0x1
    2e28:	cmp	x21, x3
    2e2c:	b.eq	2fa4 <PySequence_Fast@plt+0xed4>  // b.none
    2e30:	cmp	w19, #0x1
    2e34:	b.eq	2e0c <PySequence_Fast@plt+0xd3c>  // b.none
    2e38:	cmp	w19, #0x2
    2e3c:	b.eq	2e14 <PySequence_Fast@plt+0xd44>  // b.none
    2e40:	ldr	w1, [x20, x3, lsl #2]
    2e44:	sub	w5, w1, #0x20
    2e48:	cmp	w1, #0x5c
    2e4c:	ccmp	w1, w10, #0x4, ne  // ne = any
    2e50:	ccmp	w5, w9, #0x2, ne  // ne = any
    2e54:	b.ls	2e1c <PySequence_Fast@plt+0xd4c>  // b.plast
    2e58:	add	x5, x2, #0x1
    2e5c:	strb	w8, [x4, x2]
    2e60:	cmp	w1, #0xc
    2e64:	b.eq	2ed8 <PySequence_Fast@plt+0xe08>  // b.none
    2e68:	b.hi	2e9c <PySequence_Fast@plt+0xdcc>  // b.pmore
    2e6c:	cmp	w1, #0x9
    2e70:	b.eq	2ee4 <PySequence_Fast@plt+0xe14>  // b.none
    2e74:	cmp	w1, #0xa
    2e78:	b.ne	2e88 <PySequence_Fast@plt+0xdb8>  // b.any
    2e7c:	add	x2, x2, #0x2
    2e80:	strb	w14, [x4, x5]
    2e84:	b	2e24 <PySequence_Fast@plt+0xd54>
    2e88:	cmp	w1, #0x8
    2e8c:	b.ne	2f54 <PySequence_Fast@plt+0xe84>  // b.any
    2e90:	add	x2, x2, #0x2
    2e94:	strb	w13, [x4, x5]
    2e98:	b	2e24 <PySequence_Fast@plt+0xd54>
    2e9c:	cmp	w1, #0x22
    2ea0:	b.eq	2ecc <PySequence_Fast@plt+0xdfc>  // b.none
    2ea4:	cmp	w1, #0x5c
    2ea8:	b.ne	2eb8 <PySequence_Fast@plt+0xde8>  // b.any
    2eac:	add	x2, x2, #0x2
    2eb0:	strb	w8, [x4, x5]
    2eb4:	b	2e24 <PySequence_Fast@plt+0xd54>
    2eb8:	cmp	w1, #0xd
    2ebc:	b.ne	2ef0 <PySequence_Fast@plt+0xe20>  // b.any
    2ec0:	add	x2, x2, #0x2
    2ec4:	strb	w16, [x4, x5]
    2ec8:	b	2e24 <PySequence_Fast@plt+0xd54>
    2ecc:	add	x2, x2, #0x2
    2ed0:	strb	w17, [x4, x5]
    2ed4:	b	2e24 <PySequence_Fast@plt+0xd54>
    2ed8:	add	x2, x2, #0x2
    2edc:	strb	w18, [x4, x5]
    2ee0:	b	2e24 <PySequence_Fast@plt+0xd54>
    2ee4:	add	x2, x2, #0x2
    2ee8:	strb	w15, [x4, x5]
    2eec:	b	2e24 <PySequence_Fast@plt+0xd54>
    2ef0:	cmp	w1, w22
    2ef4:	b.ls	2f54 <PySequence_Fast@plt+0xe84>  // b.plast
    2ef8:	add	w6, w30, w1, lsr #10
    2efc:	strb	w12, [x4, x5]
    2f00:	ubfx	x24, x6, #12, #4
    2f04:	ldr	x5, [x7]
    2f08:	ldrb	w5, [x5, w24, uxtw]
    2f0c:	add	x24, x4, x2
    2f10:	strb	w5, [x24, #2]
    2f14:	ubfx	x25, x6, #8, #4
    2f18:	ldr	x5, [x7]
    2f1c:	ldrb	w5, [x5, w25, uxtw]
    2f20:	strb	w5, [x24, #3]
    2f24:	ubfx	x25, x6, #4, #4
    2f28:	ldr	x5, [x7]
    2f2c:	ldrb	w5, [x5, w25, uxtw]
    2f30:	strb	w5, [x24, #4]
    2f34:	and	w6, w6, #0xf
    2f38:	ldr	x5, [x7]
    2f3c:	ldrb	w5, [x5, w6, uxtw]
    2f40:	strb	w5, [x24, #5]
    2f44:	and	w1, w1, #0x3ff
    2f48:	add	w1, w1, w23
    2f4c:	add	x5, x2, #0x7
    2f50:	strb	w8, [x24, #6]
    2f54:	strb	w12, [x4, x5]
    2f58:	ubfx	x6, x1, #12, #4
    2f5c:	ldr	x2, [x11]
    2f60:	ldrb	w2, [x2, w6, uxtw]
    2f64:	add	x6, x4, x5
    2f68:	strb	w2, [x6, #1]
    2f6c:	ubfx	x24, x1, #8, #4
    2f70:	ldr	x2, [x11]
    2f74:	ldrb	w2, [x2, w24, uxtw]
    2f78:	strb	w2, [x6, #2]
    2f7c:	ubfx	x24, x1, #4, #4
    2f80:	ldr	x2, [x11]
    2f84:	ldrb	w2, [x2, w24, uxtw]
    2f88:	strb	w2, [x6, #3]
    2f8c:	add	x2, x5, #0x5
    2f90:	and	w1, w1, #0xf
    2f94:	ldr	x5, [x11]
    2f98:	ldrb	w1, [x5, w1, uxtw]
    2f9c:	strb	w1, [x6, #4]
    2fa0:	b	2e24 <PySequence_Fast@plt+0xd54>
    2fa4:	ldp	x23, x24, [sp, #48]
    2fa8:	ldr	x25, [sp, #64]
    2fac:	mov	w1, #0x22                  	// #34
    2fb0:	strb	w1, [x4, x2]
    2fb4:	ldp	x21, x22, [sp, #32]
    2fb8:	b	2d6c <PySequence_Fast@plt+0xc9c>
    2fbc:	mov	x2, #0x1                   	// #1
    2fc0:	b	2fac <PySequence_Fast@plt+0xedc>
    2fc4:	ldr	x2, [x0, #24]
    2fc8:	adrp	x1, 6000 <PySequence_Fast@plt+0x3f30>
    2fcc:	add	x1, x1, #0xe08
    2fd0:	adrp	x0, 18000 <PyInit__json@@Base+0x113a4>
    2fd4:	ldr	x0, [x0, #3976]
    2fd8:	ldr	x0, [x0]
    2fdc:	bl	2040 <PyErr_Format@plt>
    2fe0:	mov	x0, #0x0                   	// #0
    2fe4:	b	2d6c <PySequence_Fast@plt+0xc9c>
    2fe8:	ldp	x21, x22, [sp, #32]
    2fec:	b	2d6c <PySequence_Fast@plt+0xc9c>
    2ff0:	stp	x29, x30, [sp, #-16]!
    2ff4:	mov	x29, sp
    2ff8:	adrp	x1, 18000 <PyInit__json@@Base+0x113a4>
    2ffc:	ldr	x1, [x1, #4016]
    3000:	cmp	x0, x1
    3004:	b.eq	3048 <PySequence_Fast@plt+0xf78>  // b.none
    3008:	adrp	x1, 18000 <PyInit__json@@Base+0x113a4>
    300c:	ldr	x1, [x1, #4024]
    3010:	cmp	x0, x1
    3014:	b.eq	3080 <PySequence_Fast@plt+0xfb0>  // b.none
    3018:	adrp	x1, 18000 <PyInit__json@@Base+0x113a4>
    301c:	ldr	x1, [x1, #3992]
    3020:	cmp	x0, x1
    3024:	b.ne	30d4 <PySequence_Fast@plt+0x1004>  // b.any
    3028:	adrp	x0, 19000 <PyInit__json@@Base+0x123a4>
    302c:	ldr	x0, [x0, #2304]
    3030:	cbz	x0, 30b8 <PySequence_Fast@plt+0xfe8>
    3034:	ldr	x1, [x0]
    3038:	add	x1, x1, #0x1
    303c:	str	x1, [x0]
    3040:	ldp	x29, x30, [sp], #16
    3044:	ret
    3048:	adrp	x0, 19000 <PyInit__json@@Base+0x123a4>
    304c:	ldr	x0, [x0, #2288]
    3050:	cbz	x0, 3064 <PySequence_Fast@plt+0xf94>
    3054:	ldr	x1, [x0]
    3058:	add	x1, x1, #0x1
    305c:	str	x1, [x0]
    3060:	b	3040 <PySequence_Fast@plt+0xf70>
    3064:	adrp	x0, 6000 <PySequence_Fast@plt+0x3f30>
    3068:	add	x0, x0, #0xe38
    306c:	bl	2000 <PyUnicode_InternFromString@plt>
    3070:	adrp	x1, 19000 <PyInit__json@@Base+0x123a4>
    3074:	str	x0, [x1, #2288]
    3078:	cbz	x0, 3040 <PySequence_Fast@plt+0xf70>
    307c:	b	3054 <PySequence_Fast@plt+0xf84>
    3080:	adrp	x0, 19000 <PyInit__json@@Base+0x123a4>
    3084:	ldr	x0, [x0, #2296]
    3088:	cbz	x0, 309c <PySequence_Fast@plt+0xfcc>
    308c:	ldr	x1, [x0]
    3090:	add	x1, x1, #0x1
    3094:	str	x1, [x0]
    3098:	b	3040 <PySequence_Fast@plt+0xf70>
    309c:	adrp	x0, 6000 <PySequence_Fast@plt+0x3f30>
    30a0:	add	x0, x0, #0xe40
    30a4:	bl	2000 <PyUnicode_InternFromString@plt>
    30a8:	adrp	x1, 19000 <PyInit__json@@Base+0x123a4>
    30ac:	str	x0, [x1, #2296]
    30b0:	cbz	x0, 3040 <PySequence_Fast@plt+0xf70>
    30b4:	b	308c <PySequence_Fast@plt+0xfbc>
    30b8:	adrp	x0, 6000 <PySequence_Fast@plt+0x3f30>
    30bc:	add	x0, x0, #0xe48
    30c0:	bl	2000 <PyUnicode_InternFromString@plt>
    30c4:	adrp	x1, 19000 <PyInit__json@@Base+0x123a4>
    30c8:	str	x0, [x1, #2304]
    30cc:	cbz	x0, 3040 <PySequence_Fast@plt+0xf70>
    30d0:	b	3034 <PySequence_Fast@plt+0xf64>
    30d4:	adrp	x1, 6000 <PySequence_Fast@plt+0x3f30>
    30d8:	add	x1, x1, #0xe50
    30dc:	adrp	x0, 18000 <PyInit__json@@Base+0x113a4>
    30e0:	ldr	x0, [x0, #3968]
    30e4:	ldr	x0, [x0]
    30e8:	bl	1e60 <PyErr_SetString@plt>
    30ec:	mov	x0, #0x0                   	// #0
    30f0:	b	3040 <PySequence_Fast@plt+0xf70>
    30f4:	stp	x29, x30, [sp, #-16]!
    30f8:	mov	x29, sp
    30fc:	mov	x2, x0
    3100:	mov	x0, x1
    3104:	ldr	d0, [x1, #16]
    3108:	fabs	d2, d0
    310c:	mov	x1, #0x7fefffffffffffff    	// #9218868437227405311
    3110:	fmov	d1, x1
    3114:	fcmp	d2, d1
    3118:	b.ls	3180 <PySequence_Fast@plt+0x10b0>  // b.plast
    311c:	ldr	w0, [x2, #68]
    3120:	cbz	w0, 3140 <PySequence_Fast@plt+0x1070>
    3124:	fcmpe	d0, #0.0
    3128:	b.gt	3160 <PySequence_Fast@plt+0x1090>
    312c:	b.mi	3170 <PySequence_Fast@plt+0x10a0>  // b.first
    3130:	adrp	x0, 6000 <PySequence_Fast@plt+0x3f30>
    3134:	add	x0, x0, #0xeb8
    3138:	bl	1fe0 <PyUnicode_FromString@plt>
    313c:	b	3190 <PySequence_Fast@plt+0x10c0>
    3140:	adrp	x1, 6000 <PySequence_Fast@plt+0x3f30>
    3144:	add	x1, x1, #0xe60
    3148:	adrp	x0, 18000 <PyInit__json@@Base+0x113a4>
    314c:	ldr	x0, [x0, #3968]
    3150:	ldr	x0, [x0]
    3154:	bl	1e60 <PyErr_SetString@plt>
    3158:	mov	x0, #0x0                   	// #0
    315c:	b	3190 <PySequence_Fast@plt+0x10c0>
    3160:	adrp	x0, 6000 <PySequence_Fast@plt+0x3f30>
    3164:	add	x0, x0, #0xe98
    3168:	bl	1fe0 <PyUnicode_FromString@plt>
    316c:	b	3190 <PySequence_Fast@plt+0x10c0>
    3170:	adrp	x0, 6000 <PySequence_Fast@plt+0x3f30>
    3174:	add	x0, x0, #0xea8
    3178:	bl	1fe0 <PyUnicode_FromString@plt>
    317c:	b	3190 <PySequence_Fast@plt+0x10c0>
    3180:	adrp	x1, 18000 <PyInit__json@@Base+0x113a4>
    3184:	ldr	x1, [x1, #3952]
    3188:	ldr	x1, [x1, #88]
    318c:	blr	x1
    3190:	ldp	x29, x30, [sp], #16
    3194:	ret
    3198:	stp	x29, x30, [sp, #-32]!
    319c:	mov	x29, sp
    31a0:	str	x19, [sp, #16]
    31a4:	mov	x19, x0
    31a8:	ldr	x0, [x0, #16]
    31ac:	cbz	x0, 31c4 <PySequence_Fast@plt+0x10f4>
    31b0:	str	xzr, [x19, #16]
    31b4:	ldr	x1, [x0]
    31b8:	sub	x1, x1, #0x1
    31bc:	str	x1, [x0]
    31c0:	cbz	x1, 3260 <PySequence_Fast@plt+0x1190>
    31c4:	ldr	x0, [x19, #24]
    31c8:	cbz	x0, 31e0 <PySequence_Fast@plt+0x1110>
    31cc:	str	xzr, [x19, #24]
    31d0:	ldr	x1, [x0]
    31d4:	sub	x1, x1, #0x1
    31d8:	str	x1, [x0]
    31dc:	cbz	x1, 3268 <PySequence_Fast@plt+0x1198>
    31e0:	ldr	x0, [x19, #32]
    31e4:	cbz	x0, 31fc <PySequence_Fast@plt+0x112c>
    31e8:	str	xzr, [x19, #32]
    31ec:	ldr	x1, [x0]
    31f0:	sub	x1, x1, #0x1
    31f4:	str	x1, [x0]
    31f8:	cbz	x1, 3270 <PySequence_Fast@plt+0x11a0>
    31fc:	ldr	x0, [x19, #40]
    3200:	cbz	x0, 3218 <PySequence_Fast@plt+0x1148>
    3204:	str	xzr, [x19, #40]
    3208:	ldr	x1, [x0]
    320c:	sub	x1, x1, #0x1
    3210:	str	x1, [x0]
    3214:	cbz	x1, 3278 <PySequence_Fast@plt+0x11a8>
    3218:	ldr	x0, [x19, #48]
    321c:	cbz	x0, 3234 <PySequence_Fast@plt+0x1164>
    3220:	str	xzr, [x19, #48]
    3224:	ldr	x1, [x0]
    3228:	sub	x1, x1, #0x1
    322c:	str	x1, [x0]
    3230:	cbz	x1, 3280 <PySequence_Fast@plt+0x11b0>
    3234:	ldr	x0, [x19, #56]
    3238:	cbz	x0, 3250 <PySequence_Fast@plt+0x1180>
    323c:	str	xzr, [x19, #56]
    3240:	ldr	x1, [x0]
    3244:	sub	x1, x1, #0x1
    3248:	str	x1, [x0]
    324c:	cbz	x1, 3288 <PySequence_Fast@plt+0x11b8>
    3250:	mov	w0, #0x0                   	// #0
    3254:	ldr	x19, [sp, #16]
    3258:	ldp	x29, x30, [sp], #32
    325c:	ret
    3260:	bl	1e30 <_Py_Dealloc@plt>
    3264:	b	31c4 <PySequence_Fast@plt+0x10f4>
    3268:	bl	1e30 <_Py_Dealloc@plt>
    326c:	b	31e0 <PySequence_Fast@plt+0x1110>
    3270:	bl	1e30 <_Py_Dealloc@plt>
    3274:	b	31fc <PySequence_Fast@plt+0x112c>
    3278:	bl	1e30 <_Py_Dealloc@plt>
    327c:	b	3218 <PySequence_Fast@plt+0x1148>
    3280:	bl	1e30 <_Py_Dealloc@plt>
    3284:	b	3234 <PySequence_Fast@plt+0x1164>
    3288:	bl	1e30 <_Py_Dealloc@plt>
    328c:	b	3250 <PySequence_Fast@plt+0x1180>
    3290:	stp	x29, x30, [sp, #-32]!
    3294:	mov	x29, sp
    3298:	str	x19, [sp, #16]
    329c:	mov	x19, x0
    32a0:	bl	20a0 <PyObject_GC_UnTrack@plt>
    32a4:	mov	x0, x19
    32a8:	bl	3198 <PySequence_Fast@plt+0x10c8>
    32ac:	ldr	x0, [x19, #8]
    32b0:	ldr	x1, [x0, #320]
    32b4:	mov	x0, x19
    32b8:	blr	x1
    32bc:	ldr	x19, [sp, #16]
    32c0:	ldp	x29, x30, [sp], #32
    32c4:	ret
    32c8:	stp	x29, x30, [sp, #-32]!
    32cc:	mov	x29, sp
    32d0:	str	x19, [sp, #16]
    32d4:	ldr	x2, [x0, #72]
    32d8:	cbz	x2, 32f8 <PySequence_Fast@plt+0x1228>
    32dc:	mov	x0, #0x0                   	// #0
    32e0:	blr	x2
    32e4:	mov	x19, x0
    32e8:	mov	x0, x19
    32ec:	ldr	x19, [sp, #16]
    32f0:	ldp	x29, x30, [sp], #32
    32f4:	ret
    32f8:	mov	x2, #0x0                   	// #0
    32fc:	ldr	x0, [x0, #32]
    3300:	bl	1f70 <PyObject_CallFunctionObjArgs@plt>
    3304:	mov	x19, x0
    3308:	cbz	x0, 32e8 <PySequence_Fast@plt+0x1218>
    330c:	ldr	x0, [x0, #8]
    3310:	ldr	x1, [x0, #168]
    3314:	tbnz	w1, #28, 32e8 <PySequence_Fast@plt+0x1218>
    3318:	ldr	x2, [x0, #24]
    331c:	adrp	x1, 6000 <PySequence_Fast@plt+0x3f30>
    3320:	add	x1, x1, #0xec0
    3324:	adrp	x0, 18000 <PyInit__json@@Base+0x113a4>
    3328:	ldr	x0, [x0, #3976]
    332c:	ldr	x0, [x0]
    3330:	bl	2040 <PyErr_Format@plt>
    3334:	ldr	x0, [x19]
    3338:	sub	x0, x0, #0x1
    333c:	str	x0, [x19]
    3340:	cbz	x0, 334c <PySequence_Fast@plt+0x127c>
    3344:	mov	x19, #0x0                   	// #0
    3348:	b	32e8 <PySequence_Fast@plt+0x1218>
    334c:	mov	x0, x19
    3350:	bl	1e30 <_Py_Dealloc@plt>
    3354:	mov	x19, #0x0                   	// #0
    3358:	b	32e8 <PySequence_Fast@plt+0x1218>
    335c:	stp	x29, x30, [sp, #-32]!
    3360:	mov	x29, sp
    3364:	stp	x19, x20, [sp, #16]
    3368:	mov	x19, x1
    336c:	bl	1e70 <_PyAccu_Accumulate@plt>
    3370:	mov	w20, w0
    3374:	ldr	x1, [x19]
    3378:	sub	x1, x1, #0x1
    337c:	str	x1, [x19]
    3380:	cbz	x1, 3394 <PySequence_Fast@plt+0x12c4>
    3384:	mov	w0, w20
    3388:	ldp	x19, x20, [sp, #16]
    338c:	ldp	x29, x30, [sp], #32
    3390:	ret
    3394:	mov	x0, x19
    3398:	bl	1e30 <_Py_Dealloc@plt>
    339c:	b	3384 <PySequence_Fast@plt+0x12b4>
    33a0:	stp	x29, x30, [sp, #-112]!
    33a4:	mov	x29, sp
    33a8:	stp	x19, x20, [sp, #16]
    33ac:	stp	x21, x22, [sp, #32]
    33b0:	mov	x20, x0
    33b4:	mov	x19, x1
    33b8:	mov	x22, x2
    33bc:	adrp	x0, 18000 <PyInit__json@@Base+0x113a4>
    33c0:	ldr	x0, [x0, #4024]
    33c4:	cmp	x2, x0
    33c8:	adrp	x0, 18000 <PyInit__json@@Base+0x113a4>
    33cc:	ldr	x0, [x0, #4016]
    33d0:	ccmp	x2, x0, #0x4, ne  // ne = any
    33d4:	adrp	x0, 18000 <PyInit__json@@Base+0x113a4>
    33d8:	ldr	x0, [x0, #3992]
    33dc:	ccmp	x2, x0, #0x4, ne  // ne = any
    33e0:	b.ne	3414 <PySequence_Fast@plt+0x1344>  // b.any
    33e4:	mov	x0, x2
    33e8:	bl	2ff0 <PySequence_Fast@plt+0xf20>
    33ec:	mov	x1, x0
    33f0:	cbz	x0, 4060 <PySequence_Fast@plt+0x1f90>
    33f4:	mov	x0, x19
    33f8:	bl	335c <PySequence_Fast@plt+0x128c>
    33fc:	mov	w19, w0
    3400:	mov	w0, w19
    3404:	ldp	x19, x20, [sp, #16]
    3408:	ldp	x21, x22, [sp, #32]
    340c:	ldp	x29, x30, [sp], #112
    3410:	ret
    3414:	mov	x21, x3
    3418:	ldr	x0, [x2, #8]
    341c:	ldr	x1, [x0, #168]
    3420:	tbnz	w1, #28, 3454 <PySequence_Fast@plt+0x1384>
    3424:	tbz	w1, #24, 3478 <PySequence_Fast@plt+0x13a8>
    3428:	adrp	x0, 18000 <PyInit__json@@Base+0x113a4>
    342c:	ldr	x0, [x0, #4032]
    3430:	ldr	x1, [x0, #88]
    3434:	mov	x0, x2
    3438:	blr	x1
    343c:	mov	x1, x0
    3440:	cbz	x0, 4070 <PySequence_Fast@plt+0x1fa0>
    3444:	mov	x0, x19
    3448:	bl	335c <PySequence_Fast@plt+0x128c>
    344c:	mov	w19, w0
    3450:	b	3400 <PySequence_Fast@plt+0x1330>
    3454:	mov	x1, x2
    3458:	mov	x0, x20
    345c:	bl	32c8 <PySequence_Fast@plt+0x11f8>
    3460:	mov	x1, x0
    3464:	cbz	x0, 4068 <PySequence_Fast@plt+0x1f98>
    3468:	mov	x0, x19
    346c:	bl	335c <PySequence_Fast@plt+0x128c>
    3470:	mov	w19, w0
    3474:	b	3400 <PySequence_Fast@plt+0x1330>
    3478:	adrp	x1, 18000 <PyInit__json@@Base+0x113a4>
    347c:	ldr	x1, [x1, #3952]
    3480:	cmp	x0, x1
    3484:	b.eq	3498 <PySequence_Fast@plt+0x13c8>  // b.none
    3488:	adrp	x1, 18000 <PyInit__json@@Base+0x113a4>
    348c:	ldr	x1, [x1, #3952]
    3490:	bl	2030 <PyType_IsSubtype@plt>
    3494:	cbz	w0, 34bc <PySequence_Fast@plt+0x13ec>
    3498:	mov	x1, x22
    349c:	mov	x0, x20
    34a0:	bl	30f4 <PySequence_Fast@plt+0x1024>
    34a4:	mov	x1, x0
    34a8:	cbz	x0, 4078 <PySequence_Fast@plt+0x1fa8>
    34ac:	mov	x0, x19
    34b0:	bl	335c <PySequence_Fast@plt+0x128c>
    34b4:	mov	w19, w0
    34b8:	b	3400 <PySequence_Fast@plt+0x1330>
    34bc:	ldr	x0, [x22, #8]
    34c0:	ldr	x0, [x0, #168]
    34c4:	tst	x0, #0x6000000
    34c8:	b.ne	35fc <PySequence_Fast@plt+0x152c>  // b.any
    34cc:	tbnz	w0, #29, 3900 <PySequence_Fast@plt+0x1830>
    34d0:	stp	x23, x24, [sp, #48]
    34d4:	ldr	x1, [x20, #16]
    34d8:	adrp	x0, 18000 <PyInit__json@@Base+0x113a4>
    34dc:	ldr	x0, [x0, #4016]
    34e0:	cmp	x1, x0
    34e4:	b.eq	4118 <PySequence_Fast@plt+0x2048>  // b.none
    34e8:	mov	x0, x22
    34ec:	bl	1ea0 <PyLong_FromVoidPtr@plt>
    34f0:	mov	x23, x0
    34f4:	cbz	x0, 4090 <PySequence_Fast@plt+0x1fc0>
    34f8:	mov	x1, x0
    34fc:	ldr	x0, [x20, #16]
    3500:	bl	1e10 <PyDict_Contains@plt>
    3504:	cbnz	w0, 3ed0 <PySequence_Fast@plt+0x1e00>
    3508:	mov	x2, x22
    350c:	mov	x1, x23
    3510:	ldr	x0, [x20, #16]
    3514:	bl	2020 <PyDict_SetItem@plt>
    3518:	cbnz	w0, 3f24 <PySequence_Fast@plt+0x1e54>
    351c:	mov	x2, #0x0                   	// #0
    3520:	mov	x1, x22
    3524:	ldr	x0, [x20, #24]
    3528:	bl	1f70 <PyObject_CallFunctionObjArgs@plt>
    352c:	mov	x22, x0
    3530:	cbz	x0, 3f54 <PySequence_Fast@plt+0x1e84>
    3534:	bl	1f20 <PyThreadState_Get@plt>
    3538:	ldr	w1, [x0, #32]
    353c:	add	w1, w1, #0x1
    3540:	str	w1, [x0, #32]
    3544:	adrp	x0, 18000 <PyInit__json@@Base+0x113a4>
    3548:	ldr	x0, [x0, #3984]
    354c:	ldr	w0, [x0]
    3550:	cmp	w1, w0
    3554:	b.le	3568 <PySequence_Fast@plt+0x1498>
    3558:	adrp	x0, 6000 <PySequence_Fast@plt+0x3f30>
    355c:	add	x0, x0, #0xef0
    3560:	bl	1ec0 <_Py_CheckRecursiveCall@plt>
    3564:	cbnz	w0, 3f84 <PySequence_Fast@plt+0x1eb4>
    3568:	mov	x3, x21
    356c:	mov	x2, x22
    3570:	mov	x1, x19
    3574:	mov	x0, x20
    3578:	bl	33a0 <PySequence_Fast@plt+0x12d0>
    357c:	mov	w19, w0
    3580:	bl	1f20 <PyThreadState_Get@plt>
    3584:	ldr	w1, [x0, #32]
    3588:	sub	w1, w1, #0x1
    358c:	str	w1, [x0, #32]
    3590:	adrp	x0, 18000 <PyInit__json@@Base+0x113a4>
    3594:	ldr	x0, [x0, #3984]
    3598:	ldr	w2, [x0]
    359c:	sub	w3, w2, #0x32
    35a0:	asr	w0, w2, #2
    35a4:	add	w0, w0, w0, lsl #1
    35a8:	cmp	w2, #0xc9
    35ac:	csel	w0, w0, w3, lt  // lt = tstop
    35b0:	cmp	w1, w0
    35b4:	b.lt	3fd4 <PySequence_Fast@plt+0x1f04>  // b.tstop
    35b8:	ldr	x0, [x22]
    35bc:	sub	x0, x0, #0x1
    35c0:	str	x0, [x22]
    35c4:	cbz	x0, 3fe0 <PySequence_Fast@plt+0x1f10>
    35c8:	cbnz	w19, 3fec <PySequence_Fast@plt+0x1f1c>
    35cc:	cbz	x23, 4150 <PySequence_Fast@plt+0x2080>
    35d0:	mov	x1, x23
    35d4:	ldr	x0, [x20, #16]
    35d8:	bl	1f30 <PyDict_DelItem@plt>
    35dc:	mov	w19, w0
    35e0:	cbnz	w0, 4020 <PySequence_Fast@plt+0x1f50>
    35e4:	ldr	x0, [x23]
    35e8:	sub	x0, x0, #0x1
    35ec:	str	x0, [x23]
    35f0:	cbz	x0, 4050 <PySequence_Fast@plt+0x1f80>
    35f4:	ldp	x23, x24, [sp, #48]
    35f8:	b	3400 <PySequence_Fast@plt+0x1330>
    35fc:	bl	1f20 <PyThreadState_Get@plt>
    3600:	ldr	w1, [x0, #32]
    3604:	add	w1, w1, #0x1
    3608:	str	w1, [x0, #32]
    360c:	adrp	x0, 18000 <PyInit__json@@Base+0x113a4>
    3610:	ldr	x0, [x0, #3984]
    3614:	ldr	w0, [x0]
    3618:	cmp	w1, w0
    361c:	b.le	3630 <PySequence_Fast@plt+0x1560>
    3620:	adrp	x0, 6000 <PySequence_Fast@plt+0x3f30>
    3624:	add	x0, x0, #0xef0
    3628:	bl	1ec0 <_Py_CheckRecursiveCall@plt>
    362c:	cbnz	w0, 4080 <PySequence_Fast@plt+0x1fb0>
    3630:	stp	x23, x24, [sp, #48]
    3634:	adrp	x0, 19000 <PyInit__json@@Base+0x123a4>
    3638:	ldr	x0, [x0, #2312]
    363c:	cbz	x0, 3658 <PySequence_Fast@plt+0x1588>
    3640:	adrp	x0, 19000 <PyInit__json@@Base+0x123a4>
    3644:	ldr	x0, [x0, #2320]
    3648:	cbz	x0, 3658 <PySequence_Fast@plt+0x1588>
    364c:	adrp	x0, 19000 <PyInit__json@@Base+0x123a4>
    3650:	ldr	x0, [x0, #2328]
    3654:	cbnz	x0, 36ac <PySequence_Fast@plt+0x15dc>
    3658:	adrp	x0, 6000 <PySequence_Fast@plt+0x3f30>
    365c:	add	x0, x0, #0xf10
    3660:	bl	2000 <PyUnicode_InternFromString@plt>
    3664:	adrp	x23, 19000 <PyInit__json@@Base+0x123a4>
    3668:	add	x23, x23, #0x8f0
    366c:	str	x0, [x23, #24]
    3670:	adrp	x0, 6000 <PySequence_Fast@plt+0x3f30>
    3674:	add	x0, x0, #0xf18
    3678:	bl	2000 <PyUnicode_InternFromString@plt>
    367c:	str	x0, [x23, #32]
    3680:	adrp	x0, 6000 <PySequence_Fast@plt+0x3f30>
    3684:	add	x0, x0, #0xf20
    3688:	bl	2000 <PyUnicode_InternFromString@plt>
    368c:	str	x0, [x23, #40]
    3690:	ldr	x1, [x23, #24]
    3694:	cbz	x1, 38d8 <PySequence_Fast@plt+0x1808>
    3698:	adrp	x1, 19000 <PyInit__json@@Base+0x123a4>
    369c:	ldr	x1, [x1, #2320]
    36a0:	cmp	x1, #0x0
    36a4:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    36a8:	b.eq	38e0 <PySequence_Fast@plt+0x1810>  // b.none
    36ac:	adrp	x1, 6000 <PySequence_Fast@plt+0x3f30>
    36b0:	add	x1, x1, #0xf28
    36b4:	mov	x0, x22
    36b8:	bl	20d0 <PySequence_Fast@plt>
    36bc:	mov	x23, x0
    36c0:	cbz	x0, 38e8 <PySequence_Fast@plt+0x1818>
    36c4:	ldr	x0, [x0, #16]
    36c8:	cbz	x0, 3728 <PySequence_Fast@plt+0x1658>
    36cc:	stp	x25, x26, [sp, #64]
    36d0:	ldr	x1, [x20, #16]
    36d4:	adrp	x0, 18000 <PyInit__json@@Base+0x113a4>
    36d8:	ldr	x0, [x0, #4016]
    36dc:	cmp	x1, x0
    36e0:	b.eq	40c0 <PySequence_Fast@plt+0x1ff0>  // b.none
    36e4:	mov	x0, x22
    36e8:	bl	1ea0 <PyLong_FromVoidPtr@plt>
    36ec:	mov	x25, x0
    36f0:	cbz	x0, 37f4 <PySequence_Fast@plt+0x1724>
    36f4:	mov	x1, x0
    36f8:	ldr	x0, [x20, #16]
    36fc:	bl	1e10 <PyDict_Contains@plt>
    3700:	cbz	w0, 375c <PySequence_Fast@plt+0x168c>
    3704:	cmn	w0, #0x1
    3708:	b.eq	37e4 <PySequence_Fast@plt+0x1714>  // b.none
    370c:	adrp	x1, 6000 <PySequence_Fast@plt+0x3f30>
    3710:	add	x1, x1, #0xf50
    3714:	adrp	x0, 18000 <PyInit__json@@Base+0x113a4>
    3718:	ldr	x0, [x0, #3968]
    371c:	ldr	x0, [x0]
    3720:	bl	1e60 <PyErr_SetString@plt>
    3724:	b	37e4 <PySequence_Fast@plt+0x1714>
    3728:	ldr	x0, [x23]
    372c:	sub	x0, x0, #0x1
    3730:	str	x0, [x23]
    3734:	cbz	x0, 3750 <PySequence_Fast@plt+0x1680>
    3738:	adrp	x0, 19000 <PyInit__json@@Base+0x123a4>
    373c:	ldr	x1, [x0, #2328]
    3740:	mov	x0, x19
    3744:	bl	1e70 <_PyAccu_Accumulate@plt>
    3748:	mov	w19, w0
    374c:	b	380c <PySequence_Fast@plt+0x173c>
    3750:	mov	x0, x23
    3754:	bl	1e30 <_Py_Dealloc@plt>
    3758:	b	3738 <PySequence_Fast@plt+0x1668>
    375c:	mov	x2, x22
    3760:	mov	x1, x25
    3764:	ldr	x0, [x20, #16]
    3768:	bl	2020 <PyDict_SetItem@plt>
    376c:	cbnz	w0, 37e4 <PySequence_Fast@plt+0x1714>
    3770:	adrp	x0, 19000 <PyInit__json@@Base+0x123a4>
    3774:	ldr	x1, [x0, #2312]
    3778:	mov	x0, x19
    377c:	bl	1e70 <_PyAccu_Accumulate@plt>
    3780:	cbnz	w0, 37e4 <PySequence_Fast@plt+0x1714>
    3784:	b	40d8 <PySequence_Fast@plt+0x2008>
    3788:	ldr	x24, [x26, x22, lsl #3]
    378c:	b	37cc <PySequence_Fast@plt+0x16fc>
    3790:	mov	x3, x21
    3794:	mov	x2, x24
    3798:	mov	x1, x19
    379c:	mov	x0, x20
    37a0:	bl	33a0 <PySequence_Fast@plt+0x12d0>
    37a4:	cbnz	w0, 37e0 <PySequence_Fast@plt+0x1710>
    37a8:	add	x22, x22, #0x1
    37ac:	ldr	x0, [x23, #16]
    37b0:	cmp	x22, x0
    37b4:	b.ge	384c <PySequence_Fast@plt+0x177c>  // b.tcont
    37b8:	ldr	x0, [x23, #8]
    37bc:	ldr	x1, [x0, #168]
    37c0:	tbz	w1, #25, 3788 <PySequence_Fast@plt+0x16b8>
    37c4:	ldr	x0, [x23, #24]
    37c8:	ldr	x24, [x0, x22, lsl #3]
    37cc:	cbz	x22, 3790 <PySequence_Fast@plt+0x16c0>
    37d0:	ldr	x1, [x20, #56]
    37d4:	mov	x0, x19
    37d8:	bl	1e70 <_PyAccu_Accumulate@plt>
    37dc:	cbz	w0, 3790 <PySequence_Fast@plt+0x16c0>
    37e0:	cbz	x25, 37f4 <PySequence_Fast@plt+0x1724>
    37e4:	ldr	x0, [x25]
    37e8:	sub	x0, x0, #0x1
    37ec:	str	x0, [x25]
    37f0:	cbz	x0, 38bc <PySequence_Fast@plt+0x17ec>
    37f4:	ldr	x0, [x23]
    37f8:	sub	x0, x0, #0x1
    37fc:	str	x0, [x23]
    3800:	mov	w19, #0xffffffff            	// #-1
    3804:	cbz	x0, 38c8 <PySequence_Fast@plt+0x17f8>
    3808:	ldp	x25, x26, [sp, #64]
    380c:	bl	1f20 <PyThreadState_Get@plt>
    3810:	ldr	w1, [x0, #32]
    3814:	sub	w1, w1, #0x1
    3818:	str	w1, [x0, #32]
    381c:	adrp	x0, 18000 <PyInit__json@@Base+0x113a4>
    3820:	ldr	x0, [x0, #3984]
    3824:	ldr	w2, [x0]
    3828:	sub	w3, w2, #0x32
    382c:	asr	w0, w2, #2
    3830:	add	w0, w0, w0, lsl #1
    3834:	cmp	w2, #0xc9
    3838:	csel	w0, w0, w3, lt  // lt = tstop
    383c:	cmp	w1, w0
    3840:	b.lt	38f0 <PySequence_Fast@plt+0x1820>  // b.tstop
    3844:	ldp	x23, x24, [sp, #48]
    3848:	b	3400 <PySequence_Fast@plt+0x1330>
    384c:	cbz	x25, 3870 <PySequence_Fast@plt+0x17a0>
    3850:	mov	x1, x25
    3854:	ldr	x0, [x20, #16]
    3858:	bl	1f30 <PyDict_DelItem@plt>
    385c:	cbnz	w0, 37e4 <PySequence_Fast@plt+0x1714>
    3860:	ldr	x0, [x25]
    3864:	sub	x0, x0, #0x1
    3868:	str	x0, [x25]
    386c:	cbz	x0, 38a0 <PySequence_Fast@plt+0x17d0>
    3870:	adrp	x0, 19000 <PyInit__json@@Base+0x123a4>
    3874:	ldr	x1, [x0, #2320]
    3878:	mov	x0, x19
    387c:	bl	1e70 <_PyAccu_Accumulate@plt>
    3880:	mov	w19, w0
    3884:	cbnz	w0, 37f4 <PySequence_Fast@plt+0x1724>
    3888:	ldr	x0, [x23]
    388c:	sub	x0, x0, #0x1
    3890:	str	x0, [x23]
    3894:	cbz	x0, 38ac <PySequence_Fast@plt+0x17dc>
    3898:	ldp	x25, x26, [sp, #64]
    389c:	b	380c <PySequence_Fast@plt+0x173c>
    38a0:	mov	x0, x25
    38a4:	bl	1e30 <_Py_Dealloc@plt>
    38a8:	b	3870 <PySequence_Fast@plt+0x17a0>
    38ac:	mov	x0, x23
    38b0:	bl	1e30 <_Py_Dealloc@plt>
    38b4:	ldp	x25, x26, [sp, #64]
    38b8:	b	380c <PySequence_Fast@plt+0x173c>
    38bc:	mov	x0, x25
    38c0:	bl	1e30 <_Py_Dealloc@plt>
    38c4:	b	37f4 <PySequence_Fast@plt+0x1724>
    38c8:	mov	x0, x23
    38cc:	bl	1e30 <_Py_Dealloc@plt>
    38d0:	ldp	x25, x26, [sp, #64]
    38d4:	b	380c <PySequence_Fast@plt+0x173c>
    38d8:	mov	w19, #0xffffffff            	// #-1
    38dc:	b	380c <PySequence_Fast@plt+0x173c>
    38e0:	mov	w19, #0xffffffff            	// #-1
    38e4:	b	380c <PySequence_Fast@plt+0x173c>
    38e8:	mov	w19, #0xffffffff            	// #-1
    38ec:	b	380c <PySequence_Fast@plt+0x173c>
    38f0:	bl	1f20 <PyThreadState_Get@plt>
    38f4:	strb	wzr, [x0, #36]
    38f8:	ldp	x23, x24, [sp, #48]
    38fc:	b	3400 <PySequence_Fast@plt+0x1330>
    3900:	bl	1f20 <PyThreadState_Get@plt>
    3904:	ldr	w1, [x0, #32]
    3908:	add	w1, w1, #0x1
    390c:	str	w1, [x0, #32]
    3910:	adrp	x0, 18000 <PyInit__json@@Base+0x113a4>
    3914:	ldr	x0, [x0, #3984]
    3918:	ldr	w0, [x0]
    391c:	cmp	w1, w0
    3920:	b.le	3934 <PySequence_Fast@plt+0x1864>
    3924:	adrp	x0, 6000 <PySequence_Fast@plt+0x3f30>
    3928:	add	x0, x0, #0xef0
    392c:	bl	1ec0 <_Py_CheckRecursiveCall@plt>
    3930:	cbnz	w0, 4088 <PySequence_Fast@plt+0x1fb8>
    3934:	stp	x23, x24, [sp, #48]
    3938:	adrp	x0, 19000 <PyInit__json@@Base+0x123a4>
    393c:	ldr	x0, [x0, #2336]
    3940:	cbz	x0, 395c <PySequence_Fast@plt+0x188c>
    3944:	adrp	x0, 19000 <PyInit__json@@Base+0x123a4>
    3948:	ldr	x0, [x0, #2344]
    394c:	cbz	x0, 395c <PySequence_Fast@plt+0x188c>
    3950:	adrp	x0, 19000 <PyInit__json@@Base+0x123a4>
    3954:	ldr	x0, [x0, #2352]
    3958:	cbnz	x0, 39b0 <PySequence_Fast@plt+0x18e0>
    395c:	adrp	x0, 6000 <PySequence_Fast@plt+0x3f30>
    3960:	add	x0, x0, #0xf70
    3964:	bl	2000 <PyUnicode_InternFromString@plt>
    3968:	adrp	x23, 19000 <PyInit__json@@Base+0x123a4>
    396c:	add	x23, x23, #0x8f0
    3970:	str	x0, [x23, #48]
    3974:	adrp	x0, 6000 <PySequence_Fast@plt+0x3f30>
    3978:	add	x0, x0, #0xf78
    397c:	bl	2000 <PyUnicode_InternFromString@plt>
    3980:	str	x0, [x23, #56]
    3984:	adrp	x0, 6000 <PySequence_Fast@plt+0x3f30>
    3988:	add	x0, x0, #0xf80
    398c:	bl	2000 <PyUnicode_InternFromString@plt>
    3990:	str	x0, [x23, #64]
    3994:	ldr	x1, [x23, #48]
    3998:	cbz	x1, 3ea8 <PySequence_Fast@plt+0x1dd8>
    399c:	adrp	x1, 19000 <PyInit__json@@Base+0x123a4>
    39a0:	ldr	x1, [x1, #2344]
    39a4:	cmp	x1, #0x0
    39a8:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    39ac:	b.eq	3eb0 <PySequence_Fast@plt+0x1de0>  // b.none
    39b0:	ldr	x0, [x22, #16]
    39b4:	cbz	x0, 3a00 <PySequence_Fast@plt+0x1930>
    39b8:	stp	x25, x26, [sp, #64]
    39bc:	ldr	x1, [x20, #16]
    39c0:	adrp	x0, 18000 <PyInit__json@@Base+0x113a4>
    39c4:	ldr	x0, [x0, #4016]
    39c8:	cmp	x1, x0
    39cc:	b.eq	3a4c <PySequence_Fast@plt+0x197c>  // b.none
    39d0:	mov	x0, x22
    39d4:	bl	1ea0 <PyLong_FromVoidPtr@plt>
    39d8:	mov	x25, x0
    39dc:	cbz	x0, 39f8 <PySequence_Fast@plt+0x1928>
    39e0:	mov	x1, x0
    39e4:	ldr	x0, [x20, #16]
    39e8:	bl	1e10 <PyDict_Contains@plt>
    39ec:	cbz	w0, 3a34 <PySequence_Fast@plt+0x1964>
    39f0:	cmn	w0, #0x1
    39f4:	b.ne	3a18 <PySequence_Fast@plt+0x1948>  // b.any
    39f8:	mov	x23, #0x0                   	// #0
    39fc:	b	3d88 <PySequence_Fast@plt+0x1cb8>
    3a00:	adrp	x0, 19000 <PyInit__json@@Base+0x123a4>
    3a04:	ldr	x1, [x0, #2352]
    3a08:	mov	x0, x19
    3a0c:	bl	1e70 <_PyAccu_Accumulate@plt>
    3a10:	mov	w19, w0
    3a14:	b	3db8 <PySequence_Fast@plt+0x1ce8>
    3a18:	adrp	x1, 6000 <PySequence_Fast@plt+0x3f30>
    3a1c:	add	x1, x1, #0xf50
    3a20:	adrp	x0, 18000 <PyInit__json@@Base+0x113a4>
    3a24:	ldr	x0, [x0, #3968]
    3a28:	ldr	x0, [x0]
    3a2c:	bl	1e60 <PyErr_SetString@plt>
    3a30:	b	39f8 <PySequence_Fast@plt+0x1928>
    3a34:	mov	x2, x22
    3a38:	mov	x1, x25
    3a3c:	ldr	x0, [x20, #16]
    3a40:	bl	2020 <PyDict_SetItem@plt>
    3a44:	cbz	w0, 3a50 <PySequence_Fast@plt+0x1980>
    3a48:	b	39f8 <PySequence_Fast@plt+0x1928>
    3a4c:	mov	x25, #0x0                   	// #0
    3a50:	adrp	x0, 19000 <PyInit__json@@Base+0x123a4>
    3a54:	ldr	x1, [x0, #2336]
    3a58:	mov	x0, x19
    3a5c:	bl	1e70 <_PyAccu_Accumulate@plt>
    3a60:	cbnz	w0, 39f8 <PySequence_Fast@plt+0x1928>
    3a64:	ldr	x1, [x20, #40]
    3a68:	adrp	x0, 18000 <PyInit__json@@Base+0x113a4>
    3a6c:	ldr	x0, [x0, #4016]
    3a70:	cmp	x1, x0
    3a74:	cinc	x21, x21, ne  // ne = any
    3a78:	mov	x0, x22
    3a7c:	bl	1d90 <PyMapping_Items@plt>
    3a80:	mov	x22, x0
    3a84:	cbz	x0, 39f8 <PySequence_Fast@plt+0x1928>
    3a88:	ldrb	w0, [x20, #64]
    3a8c:	cbz	w0, 3a9c <PySequence_Fast@plt+0x19cc>
    3a90:	mov	x0, x22
    3a94:	bl	1f80 <PyList_Sort@plt>
    3a98:	tbnz	w0, #31, 3ae0 <PySequence_Fast@plt+0x1a10>
    3a9c:	mov	x0, x22
    3aa0:	bl	1ff0 <PyObject_GetIter@plt>
    3aa4:	mov	x26, x0
    3aa8:	ldr	x0, [x22]
    3aac:	sub	x0, x0, #0x1
    3ab0:	str	x0, [x22]
    3ab4:	cbz	x0, 3afc <PySequence_Fast@plt+0x1a2c>
    3ab8:	cbz	x26, 39f8 <PySequence_Fast@plt+0x1928>
    3abc:	stp	x27, x28, [sp, #80]
    3ac0:	mov	x27, #0x0                   	// #0
    3ac4:	adrp	x0, 18000 <PyInit__json@@Base+0x113a4>
    3ac8:	ldr	x28, [x0, #3952]
    3acc:	str	x28, [sp, #96]
    3ad0:	adrp	x0, 18000 <PyInit__json@@Base+0x113a4>
    3ad4:	ldr	x0, [x0, #3992]
    3ad8:	str	x0, [sp, #104]
    3adc:	b	3c94 <PySequence_Fast@plt+0x1bc4>
    3ae0:	ldr	x0, [x22]
    3ae4:	sub	x0, x0, #0x1
    3ae8:	str	x0, [x22]
    3aec:	cbnz	x0, 39f8 <PySequence_Fast@plt+0x1928>
    3af0:	mov	x0, x22
    3af4:	bl	1e30 <_Py_Dealloc@plt>
    3af8:	b	39f8 <PySequence_Fast@plt+0x1928>
    3afc:	mov	x0, x22
    3b00:	bl	1e30 <_Py_Dealloc@plt>
    3b04:	b	3ab8 <PySequence_Fast@plt+0x19e8>
    3b08:	adrp	x1, 6000 <PySequence_Fast@plt+0x3f30>
    3b0c:	add	x1, x1, #0xf88
    3b10:	adrp	x0, 18000 <PyInit__json@@Base+0x113a4>
    3b14:	ldr	x0, [x0, #3968]
    3b18:	ldr	x0, [x0]
    3b1c:	bl	1e60 <PyErr_SetString@plt>
    3b20:	mov	x23, #0x0                   	// #0
    3b24:	ldr	x0, [x26]
    3b28:	sub	x0, x0, #0x1
    3b2c:	str	x0, [x26]
    3b30:	cbnz	x0, 3d74 <PySequence_Fast@plt+0x1ca4>
    3b34:	b	3d68 <PySequence_Fast@plt+0x1c98>
    3b38:	cmp	x0, x28
    3b3c:	b.eq	3b4c <PySequence_Fast@plt+0x1a7c>  // b.none
    3b40:	ldr	x1, [sp, #96]
    3b44:	bl	2030 <PyType_IsSubtype@plt>
    3b48:	cbz	w0, 3b64 <PySequence_Fast@plt+0x1a94>
    3b4c:	mov	x1, x23
    3b50:	mov	x0, x20
    3b54:	bl	30f4 <PySequence_Fast@plt+0x1024>
    3b58:	mov	x23, x0
    3b5c:	cbnz	x0, 3cd8 <PySequence_Fast@plt+0x1c08>
    3b60:	b	3b24 <PySequence_Fast@plt+0x1a54>
    3b64:	ldr	x0, [sp, #104]
    3b68:	cmp	x23, x0
    3b6c:	adrp	x0, 18000 <PyInit__json@@Base+0x113a4>
    3b70:	ldr	x0, [x0, #4024]
    3b74:	ccmp	x23, x0, #0x4, ne  // ne = any
    3b78:	adrp	x0, 18000 <PyInit__json@@Base+0x113a4>
    3b7c:	ldr	x0, [x0, #4016]
    3b80:	ccmp	x23, x0, #0x4, ne  // ne = any
    3b84:	b.ne	3b9c <PySequence_Fast@plt+0x1acc>  // b.any
    3b88:	mov	x0, x23
    3b8c:	bl	2ff0 <PySequence_Fast@plt+0xf20>
    3b90:	mov	x23, x0
    3b94:	cbnz	x0, 3cd8 <PySequence_Fast@plt+0x1c08>
    3b98:	b	3b24 <PySequence_Fast@plt+0x1a54>
    3b9c:	ldr	x0, [x23, #8]
    3ba0:	ldr	x1, [x0, #168]
    3ba4:	tbz	w1, #24, 3bc8 <PySequence_Fast@plt+0x1af8>
    3ba8:	adrp	x0, 18000 <PyInit__json@@Base+0x113a4>
    3bac:	ldr	x0, [x0, #4032]
    3bb0:	ldr	x1, [x0, #88]
    3bb4:	mov	x0, x23
    3bb8:	blr	x1
    3bbc:	mov	x23, x0
    3bc0:	cbnz	x0, 3cd8 <PySequence_Fast@plt+0x1c08>
    3bc4:	b	3b24 <PySequence_Fast@plt+0x1a54>
    3bc8:	ldrb	w1, [x20, #65]
    3bcc:	cbz	w1, 3bec <PySequence_Fast@plt+0x1b1c>
    3bd0:	ldr	x0, [x22]
    3bd4:	sub	x0, x0, #0x1
    3bd8:	str	x0, [x22]
    3bdc:	cbnz	x0, 3c94 <PySequence_Fast@plt+0x1bc4>
    3be0:	mov	x0, x22
    3be4:	bl	1e30 <_Py_Dealloc@plt>
    3be8:	b	3c94 <PySequence_Fast@plt+0x1bc4>
    3bec:	ldr	x2, [x0, #24]
    3bf0:	adrp	x1, 6000 <PySequence_Fast@plt+0x3f30>
    3bf4:	add	x1, x1, #0xfa8
    3bf8:	adrp	x0, 18000 <PyInit__json@@Base+0x113a4>
    3bfc:	ldr	x0, [x0, #3976]
    3c00:	ldr	x0, [x0]
    3c04:	bl	2040 <PyErr_Format@plt>
    3c08:	mov	x23, #0x0                   	// #0
    3c0c:	b	3b24 <PySequence_Fast@plt+0x1a54>
    3c10:	ldr	x1, [x20, #56]
    3c14:	mov	x0, x19
    3c18:	bl	1e70 <_PyAccu_Accumulate@plt>
    3c1c:	cbnz	w0, 3b24 <PySequence_Fast@plt+0x1a54>
    3c20:	mov	x1, x23
    3c24:	mov	x0, x20
    3c28:	bl	32c8 <PySequence_Fast@plt+0x11f8>
    3c2c:	mov	x24, x0
    3c30:	cbnz	x23, 3cec <PySequence_Fast@plt+0x1c1c>
    3c34:	cbz	x24, 4138 <PySequence_Fast@plt+0x2068>
    3c38:	mov	x1, x24
    3c3c:	mov	x0, x19
    3c40:	bl	1e70 <_PyAccu_Accumulate@plt>
    3c44:	cbnz	w0, 3d08 <PySequence_Fast@plt+0x1c38>
    3c48:	ldr	x0, [x24]
    3c4c:	sub	x0, x0, #0x1
    3c50:	str	x0, [x24]
    3c54:	cbz	x0, 3d30 <PySequence_Fast@plt+0x1c60>
    3c58:	ldr	x1, [x20, #48]
    3c5c:	mov	x0, x19
    3c60:	bl	1e70 <_PyAccu_Accumulate@plt>
    3c64:	cbnz	w0, 4140 <PySequence_Fast@plt+0x2070>
    3c68:	mov	x3, x21
    3c6c:	ldr	x2, [x22, #32]
    3c70:	mov	x1, x19
    3c74:	mov	x0, x20
    3c78:	bl	33a0 <PySequence_Fast@plt+0x12d0>
    3c7c:	cbnz	w0, 4148 <PySequence_Fast@plt+0x2078>
    3c80:	add	x27, x27, #0x1
    3c84:	ldr	x0, [x22]
    3c88:	sub	x0, x0, #0x1
    3c8c:	str	x0, [x22]
    3c90:	cbz	x0, 3d3c <PySequence_Fast@plt+0x1c6c>
    3c94:	mov	x0, x26
    3c98:	bl	1e50 <PyIter_Next@plt>
    3c9c:	mov	x22, x0
    3ca0:	cbz	x0, 3d48 <PySequence_Fast@plt+0x1c78>
    3ca4:	ldr	x0, [x22, #8]
    3ca8:	ldr	x0, [x0, #168]
    3cac:	tbz	w0, #26, 3b08 <PySequence_Fast@plt+0x1a38>
    3cb0:	ldr	x0, [x22, #16]
    3cb4:	cmp	x0, #0x2
    3cb8:	b.ne	3b08 <PySequence_Fast@plt+0x1a38>  // b.any
    3cbc:	ldr	x23, [x22, #24]
    3cc0:	ldr	x0, [x23, #8]
    3cc4:	ldr	x1, [x0, #168]
    3cc8:	tbz	w1, #28, 3b38 <PySequence_Fast@plt+0x1a68>
    3ccc:	ldr	x0, [x23]
    3cd0:	add	x0, x0, #0x1
    3cd4:	str	x0, [x23]
    3cd8:	cbnz	x27, 3c10 <PySequence_Fast@plt+0x1b40>
    3cdc:	mov	x1, x23
    3ce0:	mov	x0, x20
    3ce4:	bl	32c8 <PySequence_Fast@plt+0x11f8>
    3ce8:	mov	x24, x0
    3cec:	ldr	x0, [x23]
    3cf0:	sub	x0, x0, #0x1
    3cf4:	str	x0, [x23]
    3cf8:	cbnz	x0, 3c34 <PySequence_Fast@plt+0x1b64>
    3cfc:	mov	x0, x23
    3d00:	bl	1e30 <_Py_Dealloc@plt>
    3d04:	b	3c34 <PySequence_Fast@plt+0x1b64>
    3d08:	ldr	x0, [x24]
    3d0c:	sub	x0, x0, #0x1
    3d10:	str	x0, [x24]
    3d14:	cbz	x0, 3d20 <PySequence_Fast@plt+0x1c50>
    3d18:	mov	x23, #0x0                   	// #0
    3d1c:	b	3b24 <PySequence_Fast@plt+0x1a54>
    3d20:	mov	x0, x24
    3d24:	bl	1e30 <_Py_Dealloc@plt>
    3d28:	mov	x23, #0x0                   	// #0
    3d2c:	b	3b24 <PySequence_Fast@plt+0x1a54>
    3d30:	mov	x0, x24
    3d34:	bl	1e30 <_Py_Dealloc@plt>
    3d38:	b	3c58 <PySequence_Fast@plt+0x1b88>
    3d3c:	mov	x0, x22
    3d40:	bl	1e30 <_Py_Dealloc@plt>
    3d44:	b	3c94 <PySequence_Fast@plt+0x1bc4>
    3d48:	bl	1f40 <PyErr_Occurred@plt>
    3d4c:	mov	x21, x0
    3d50:	cbz	x0, 3df8 <PySequence_Fast@plt+0x1d28>
    3d54:	ldr	x0, [x26]
    3d58:	sub	x0, x0, #0x1
    3d5c:	str	x0, [x26]
    3d60:	cbnz	x0, 3e78 <PySequence_Fast@plt+0x1da8>
    3d64:	mov	x23, x22
    3d68:	mov	x0, x26
    3d6c:	bl	1e30 <_Py_Dealloc@plt>
    3d70:	cbz	x22, 3e84 <PySequence_Fast@plt+0x1db4>
    3d74:	ldr	x0, [x22]
    3d78:	sub	x0, x0, #0x1
    3d7c:	str	x0, [x22]
    3d80:	cbz	x0, 3e68 <PySequence_Fast@plt+0x1d98>
    3d84:	ldp	x27, x28, [sp, #80]
    3d88:	cbz	x23, 3d9c <PySequence_Fast@plt+0x1ccc>
    3d8c:	ldr	x0, [x23]
    3d90:	sub	x0, x0, #0x1
    3d94:	str	x0, [x23]
    3d98:	cbz	x0, 3e8c <PySequence_Fast@plt+0x1dbc>
    3d9c:	mov	w19, #0xffffffff            	// #-1
    3da0:	cbz	x25, 3eb8 <PySequence_Fast@plt+0x1de8>
    3da4:	ldr	x0, [x25]
    3da8:	sub	x0, x0, #0x1
    3dac:	str	x0, [x25]
    3db0:	cbz	x0, 3e98 <PySequence_Fast@plt+0x1dc8>
    3db4:	ldp	x25, x26, [sp, #64]
    3db8:	bl	1f20 <PyThreadState_Get@plt>
    3dbc:	ldr	w1, [x0, #32]
    3dc0:	sub	w1, w1, #0x1
    3dc4:	str	w1, [x0, #32]
    3dc8:	adrp	x0, 18000 <PyInit__json@@Base+0x113a4>
    3dcc:	ldr	x0, [x0, #3984]
    3dd0:	ldr	w2, [x0]
    3dd4:	sub	w3, w2, #0x32
    3dd8:	asr	w0, w2, #2
    3ddc:	add	w0, w0, w0, lsl #1
    3de0:	cmp	w2, #0xc9
    3de4:	csel	w0, w0, w3, lt  // lt = tstop
    3de8:	cmp	w1, w0
    3dec:	b.lt	3ec0 <PySequence_Fast@plt+0x1df0>  // b.tstop
    3df0:	ldp	x23, x24, [sp, #48]
    3df4:	b	3400 <PySequence_Fast@plt+0x1330>
    3df8:	ldr	x0, [x26]
    3dfc:	sub	x0, x0, #0x1
    3e00:	str	x0, [x26]
    3e04:	cbz	x0, 3e50 <PySequence_Fast@plt+0x1d80>
    3e08:	cbz	x25, 3e2c <PySequence_Fast@plt+0x1d5c>
    3e0c:	mov	x1, x25
    3e10:	ldr	x0, [x20, #16]
    3e14:	bl	1f30 <PyDict_DelItem@plt>
    3e18:	cbnz	w0, 4110 <PySequence_Fast@plt+0x2040>
    3e1c:	ldr	x0, [x25]
    3e20:	sub	x0, x0, #0x1
    3e24:	str	x0, [x25]
    3e28:	cbz	x0, 3e5c <PySequence_Fast@plt+0x1d8c>
    3e2c:	adrp	x0, 19000 <PyInit__json@@Base+0x123a4>
    3e30:	ldr	x1, [x0, #2344]
    3e34:	mov	x0, x19
    3e38:	bl	1e70 <_PyAccu_Accumulate@plt>
    3e3c:	mov	w19, w0
    3e40:	cbnz	w0, 4104 <PySequence_Fast@plt+0x2034>
    3e44:	ldp	x25, x26, [sp, #64]
    3e48:	ldp	x27, x28, [sp, #80]
    3e4c:	b	3db8 <PySequence_Fast@plt+0x1ce8>
    3e50:	mov	x0, x26
    3e54:	bl	1e30 <_Py_Dealloc@plt>
    3e58:	b	3e08 <PySequence_Fast@plt+0x1d38>
    3e5c:	mov	x0, x25
    3e60:	bl	1e30 <_Py_Dealloc@plt>
    3e64:	b	3e2c <PySequence_Fast@plt+0x1d5c>
    3e68:	mov	x0, x22
    3e6c:	bl	1e30 <_Py_Dealloc@plt>
    3e70:	ldp	x27, x28, [sp, #80]
    3e74:	b	3d88 <PySequence_Fast@plt+0x1cb8>
    3e78:	mov	x23, x22
    3e7c:	ldp	x27, x28, [sp, #80]
    3e80:	b	3d88 <PySequence_Fast@plt+0x1cb8>
    3e84:	ldp	x27, x28, [sp, #80]
    3e88:	b	3d88 <PySequence_Fast@plt+0x1cb8>
    3e8c:	mov	x0, x23
    3e90:	bl	1e30 <_Py_Dealloc@plt>
    3e94:	b	3d9c <PySequence_Fast@plt+0x1ccc>
    3e98:	mov	x0, x25
    3e9c:	bl	1e30 <_Py_Dealloc@plt>
    3ea0:	ldp	x25, x26, [sp, #64]
    3ea4:	b	3db8 <PySequence_Fast@plt+0x1ce8>
    3ea8:	mov	w19, #0xffffffff            	// #-1
    3eac:	b	3db8 <PySequence_Fast@plt+0x1ce8>
    3eb0:	mov	w19, #0xffffffff            	// #-1
    3eb4:	b	3db8 <PySequence_Fast@plt+0x1ce8>
    3eb8:	ldp	x25, x26, [sp, #64]
    3ebc:	b	3db8 <PySequence_Fast@plt+0x1ce8>
    3ec0:	bl	1f20 <PyThreadState_Get@plt>
    3ec4:	strb	wzr, [x0, #36]
    3ec8:	ldp	x23, x24, [sp, #48]
    3ecc:	b	3400 <PySequence_Fast@plt+0x1330>
    3ed0:	cmn	w0, #0x1
    3ed4:	b.ne	3ef4 <PySequence_Fast@plt+0x1e24>  // b.any
    3ed8:	ldr	x0, [x23]
    3edc:	sub	x0, x0, #0x1
    3ee0:	str	x0, [x23]
    3ee4:	cbz	x0, 3f10 <PySequence_Fast@plt+0x1e40>
    3ee8:	mov	w19, #0xffffffff            	// #-1
    3eec:	ldp	x23, x24, [sp, #48]
    3ef0:	b	3400 <PySequence_Fast@plt+0x1330>
    3ef4:	adrp	x1, 6000 <PySequence_Fast@plt+0x3f30>
    3ef8:	add	x1, x1, #0xf50
    3efc:	adrp	x0, 18000 <PyInit__json@@Base+0x113a4>
    3f00:	ldr	x0, [x0, #3968]
    3f04:	ldr	x0, [x0]
    3f08:	bl	1e60 <PyErr_SetString@plt>
    3f0c:	b	3ed8 <PySequence_Fast@plt+0x1e08>
    3f10:	mov	x0, x23
    3f14:	bl	1e30 <_Py_Dealloc@plt>
    3f18:	mov	w19, #0xffffffff            	// #-1
    3f1c:	ldp	x23, x24, [sp, #48]
    3f20:	b	3400 <PySequence_Fast@plt+0x1330>
    3f24:	ldr	x0, [x23]
    3f28:	sub	x0, x0, #0x1
    3f2c:	str	x0, [x23]
    3f30:	cbz	x0, 3f40 <PySequence_Fast@plt+0x1e70>
    3f34:	mov	w19, #0xffffffff            	// #-1
    3f38:	ldp	x23, x24, [sp, #48]
    3f3c:	b	3400 <PySequence_Fast@plt+0x1330>
    3f40:	mov	x0, x23
    3f44:	bl	1e30 <_Py_Dealloc@plt>
    3f48:	mov	w19, #0xffffffff            	// #-1
    3f4c:	ldp	x23, x24, [sp, #48]
    3f50:	b	3400 <PySequence_Fast@plt+0x1330>
    3f54:	ldr	x0, [x23]
    3f58:	sub	x0, x0, #0x1
    3f5c:	str	x0, [x23]
    3f60:	cbz	x0, 3f70 <PySequence_Fast@plt+0x1ea0>
    3f64:	mov	w19, #0xffffffff            	// #-1
    3f68:	ldp	x23, x24, [sp, #48]
    3f6c:	b	3400 <PySequence_Fast@plt+0x1330>
    3f70:	mov	x0, x23
    3f74:	bl	1e30 <_Py_Dealloc@plt>
    3f78:	mov	w19, #0xffffffff            	// #-1
    3f7c:	ldp	x23, x24, [sp, #48]
    3f80:	b	3400 <PySequence_Fast@plt+0x1330>
    3f84:	ldr	x0, [x22]
    3f88:	sub	x0, x0, #0x1
    3f8c:	str	x0, [x22]
    3f90:	cbz	x0, 3fb4 <PySequence_Fast@plt+0x1ee4>
    3f94:	cbz	x23, 409c <PySequence_Fast@plt+0x1fcc>
    3f98:	ldr	x0, [x23]
    3f9c:	sub	x0, x0, #0x1
    3fa0:	str	x0, [x23]
    3fa4:	cbz	x0, 3fc0 <PySequence_Fast@plt+0x1ef0>
    3fa8:	mov	w19, #0xffffffff            	// #-1
    3fac:	ldp	x23, x24, [sp, #48]
    3fb0:	b	3400 <PySequence_Fast@plt+0x1330>
    3fb4:	mov	x0, x22
    3fb8:	bl	1e30 <_Py_Dealloc@plt>
    3fbc:	b	3f94 <PySequence_Fast@plt+0x1ec4>
    3fc0:	mov	x0, x23
    3fc4:	bl	1e30 <_Py_Dealloc@plt>
    3fc8:	mov	w19, #0xffffffff            	// #-1
    3fcc:	ldp	x23, x24, [sp, #48]
    3fd0:	b	3400 <PySequence_Fast@plt+0x1330>
    3fd4:	bl	1f20 <PyThreadState_Get@plt>
    3fd8:	strb	wzr, [x0, #36]
    3fdc:	b	35b8 <PySequence_Fast@plt+0x14e8>
    3fe0:	mov	x0, x22
    3fe4:	bl	1e30 <_Py_Dealloc@plt>
    3fe8:	b	35c8 <PySequence_Fast@plt+0x14f8>
    3fec:	cbz	x23, 40a8 <PySequence_Fast@plt+0x1fd8>
    3ff0:	ldr	x0, [x23]
    3ff4:	sub	x0, x0, #0x1
    3ff8:	str	x0, [x23]
    3ffc:	cbz	x0, 400c <PySequence_Fast@plt+0x1f3c>
    4000:	mov	w19, #0xffffffff            	// #-1
    4004:	ldp	x23, x24, [sp, #48]
    4008:	b	3400 <PySequence_Fast@plt+0x1330>
    400c:	mov	x0, x23
    4010:	bl	1e30 <_Py_Dealloc@plt>
    4014:	mov	w19, #0xffffffff            	// #-1
    4018:	ldp	x23, x24, [sp, #48]
    401c:	b	3400 <PySequence_Fast@plt+0x1330>
    4020:	ldr	x0, [x23]
    4024:	sub	x0, x0, #0x1
    4028:	str	x0, [x23]
    402c:	cbz	x0, 403c <PySequence_Fast@plt+0x1f6c>
    4030:	mov	w19, #0xffffffff            	// #-1
    4034:	ldp	x23, x24, [sp, #48]
    4038:	b	3400 <PySequence_Fast@plt+0x1330>
    403c:	mov	x0, x23
    4040:	bl	1e30 <_Py_Dealloc@plt>
    4044:	mov	w19, #0xffffffff            	// #-1
    4048:	ldp	x23, x24, [sp, #48]
    404c:	b	3400 <PySequence_Fast@plt+0x1330>
    4050:	mov	x0, x23
    4054:	bl	1e30 <_Py_Dealloc@plt>
    4058:	ldp	x23, x24, [sp, #48]
    405c:	b	3400 <PySequence_Fast@plt+0x1330>
    4060:	mov	w19, #0xffffffff            	// #-1
    4064:	b	3400 <PySequence_Fast@plt+0x1330>
    4068:	mov	w19, #0xffffffff            	// #-1
    406c:	b	3400 <PySequence_Fast@plt+0x1330>
    4070:	mov	w19, #0xffffffff            	// #-1
    4074:	b	3400 <PySequence_Fast@plt+0x1330>
    4078:	mov	w19, #0xffffffff            	// #-1
    407c:	b	3400 <PySequence_Fast@plt+0x1330>
    4080:	mov	w19, #0xffffffff            	// #-1
    4084:	b	3400 <PySequence_Fast@plt+0x1330>
    4088:	mov	w19, #0xffffffff            	// #-1
    408c:	b	3400 <PySequence_Fast@plt+0x1330>
    4090:	mov	w19, #0xffffffff            	// #-1
    4094:	ldp	x23, x24, [sp, #48]
    4098:	b	3400 <PySequence_Fast@plt+0x1330>
    409c:	mov	w19, #0xffffffff            	// #-1
    40a0:	ldp	x23, x24, [sp, #48]
    40a4:	b	3400 <PySequence_Fast@plt+0x1330>
    40a8:	mov	w19, #0xffffffff            	// #-1
    40ac:	ldp	x23, x24, [sp, #48]
    40b0:	b	3400 <PySequence_Fast@plt+0x1330>
    40b4:	mov	w19, #0xffffffff            	// #-1
    40b8:	ldp	x23, x24, [sp, #48]
    40bc:	b	3400 <PySequence_Fast@plt+0x1330>
    40c0:	adrp	x0, 19000 <PyInit__json@@Base+0x123a4>
    40c4:	ldr	x1, [x0, #2312]
    40c8:	mov	x0, x19
    40cc:	bl	1e70 <_PyAccu_Accumulate@plt>
    40d0:	cbnz	w0, 37f4 <PySequence_Fast@plt+0x1724>
    40d4:	mov	x25, #0x0                   	// #0
    40d8:	ldr	x1, [x20, #40]
    40dc:	adrp	x0, 18000 <PyInit__json@@Base+0x113a4>
    40e0:	ldr	x0, [x0, #4016]
    40e4:	cmp	x1, x0
    40e8:	cinc	x21, x21, ne  // ne = any
    40ec:	ldr	x0, [x23, #16]
    40f0:	cmp	x0, #0x0
    40f4:	b.le	384c <PySequence_Fast@plt+0x177c>
    40f8:	mov	x22, #0x0                   	// #0
    40fc:	add	x26, x23, #0x18
    4100:	b	37b8 <PySequence_Fast@plt+0x16e8>
    4104:	mov	x25, x21
    4108:	ldp	x27, x28, [sp, #80]
    410c:	b	39f8 <PySequence_Fast@plt+0x1928>
    4110:	ldp	x27, x28, [sp, #80]
    4114:	b	39f8 <PySequence_Fast@plt+0x1928>
    4118:	mov	x2, #0x0                   	// #0
    411c:	mov	x1, x22
    4120:	ldr	x0, [x20, #24]
    4124:	bl	1f70 <PyObject_CallFunctionObjArgs@plt>
    4128:	mov	x22, x0
    412c:	cbz	x0, 40b4 <PySequence_Fast@plt+0x1fe4>
    4130:	mov	x23, #0x0                   	// #0
    4134:	b	3534 <PySequence_Fast@plt+0x1464>
    4138:	mov	x23, x24
    413c:	b	3b24 <PySequence_Fast@plt+0x1a54>
    4140:	mov	x23, #0x0                   	// #0
    4144:	b	3b24 <PySequence_Fast@plt+0x1a54>
    4148:	mov	x23, #0x0                   	// #0
    414c:	b	3b24 <PySequence_Fast@plt+0x1a54>
    4150:	ldp	x23, x24, [sp, #48]
    4154:	b	3400 <PySequence_Fast@plt+0x1330>
    4158:	stp	x29, x30, [sp, #-64]!
    415c:	mov	x29, sp
    4160:	str	x19, [sp, #16]
    4164:	mov	x19, x0
    4168:	mov	x0, x1
    416c:	mov	x1, x2
    4170:	add	x5, sp, #0x30
    4174:	add	x4, sp, #0x38
    4178:	adrp	x3, 19000 <PyInit__json@@Base+0x123a4>
    417c:	add	x3, x3, #0x1b0
    4180:	add	x3, x3, #0x50
    4184:	adrp	x2, 6000 <PySequence_Fast@plt+0x3f30>
    4188:	add	x2, x2, #0xfe0
    418c:	bl	1dc0 <PyArg_ParseTupleAndKeywords@plt>
    4190:	cbz	w0, 41e4 <PySequence_Fast@plt+0x2114>
    4194:	add	x0, sp, #0x20
    4198:	bl	1df0 <_PyAccu_Init@plt>
    419c:	mov	w1, w0
    41a0:	mov	x0, #0x0                   	// #0
    41a4:	cbnz	w1, 41c8 <PySequence_Fast@plt+0x20f8>
    41a8:	ldr	x3, [sp, #48]
    41ac:	ldr	x2, [sp, #56]
    41b0:	add	x1, sp, #0x20
    41b4:	mov	x0, x19
    41b8:	bl	33a0 <PySequence_Fast@plt+0x12d0>
    41bc:	cbnz	w0, 41d4 <PySequence_Fast@plt+0x2104>
    41c0:	add	x0, sp, #0x20
    41c4:	bl	2070 <_PyAccu_FinishAsList@plt>
    41c8:	ldr	x19, [sp, #16]
    41cc:	ldp	x29, x30, [sp], #64
    41d0:	ret
    41d4:	add	x0, sp, #0x20
    41d8:	bl	1ee0 <_PyAccu_Destroy@plt>
    41dc:	mov	x0, #0x0                   	// #0
    41e0:	b	41c8 <PySequence_Fast@plt+0x20f8>
    41e4:	mov	x0, #0x0                   	// #0
    41e8:	b	41c8 <PySequence_Fast@plt+0x20f8>
    41ec:	stp	x29, x30, [sp, #-48]!
    41f0:	mov	x29, sp
    41f4:	stp	x19, x20, [sp, #16]
    41f8:	mov	x19, x0
    41fc:	mov	x0, x1
    4200:	mov	x1, x2
    4204:	add	x4, sp, #0x28
    4208:	adrp	x3, 19000 <PyInit__json@@Base+0x123a4>
    420c:	add	x3, x3, #0x1b0
    4210:	add	x3, x3, #0x68
    4214:	adrp	x2, 6000 <PySequence_Fast@plt+0x3f30>
    4218:	add	x2, x2, #0xff0
    421c:	bl	1dc0 <PyArg_ParseTupleAndKeywords@plt>
    4220:	cbz	w0, 4338 <PySequence_Fast@plt+0x2268>
    4224:	ldr	x2, [x19, #304]
    4228:	mov	x1, #0x0                   	// #0
    422c:	mov	x0, x19
    4230:	blr	x2
    4234:	mov	x19, x0
    4238:	cbz	x0, 430c <PySequence_Fast@plt+0x223c>
    423c:	bl	1fd0 <PyDict_New@plt>
    4240:	str	x0, [x19, #64]
    4244:	cbz	x0, 42f8 <PySequence_Fast@plt+0x2228>
    4248:	adrp	x1, 7000 <PyInit__json@@Base+0x3a4>
    424c:	add	x1, x1, #0x0
    4250:	ldr	x0, [sp, #40]
    4254:	bl	1dd0 <PyObject_GetAttrString@plt>
    4258:	mov	x20, x0
    425c:	cbz	x0, 42f8 <PySequence_Fast@plt+0x2228>
    4260:	bl	1f90 <PyObject_IsTrue@plt>
    4264:	strb	w0, [x19, #16]
    4268:	ldr	x0, [x20]
    426c:	sub	x0, x0, #0x1
    4270:	str	x0, [x20]
    4274:	cbz	x0, 431c <PySequence_Fast@plt+0x224c>
    4278:	ldrsb	w0, [x19, #16]
    427c:	tbnz	w0, #31, 42f8 <PySequence_Fast@plt+0x2228>
    4280:	adrp	x1, 7000 <PyInit__json@@Base+0x3a4>
    4284:	add	x1, x1, #0x8
    4288:	ldr	x0, [sp, #40]
    428c:	bl	1dd0 <PyObject_GetAttrString@plt>
    4290:	str	x0, [x19, #24]
    4294:	cbz	x0, 42f8 <PySequence_Fast@plt+0x2228>
    4298:	adrp	x1, 7000 <PyInit__json@@Base+0x3a4>
    429c:	add	x1, x1, #0x18
    42a0:	ldr	x0, [sp, #40]
    42a4:	bl	1dd0 <PyObject_GetAttrString@plt>
    42a8:	str	x0, [x19, #32]
    42ac:	cbz	x0, 42f8 <PySequence_Fast@plt+0x2228>
    42b0:	adrp	x1, 7000 <PyInit__json@@Base+0x3a4>
    42b4:	add	x1, x1, #0x30
    42b8:	ldr	x0, [sp, #40]
    42bc:	bl	1dd0 <PyObject_GetAttrString@plt>
    42c0:	str	x0, [x19, #40]
    42c4:	cbz	x0, 42f8 <PySequence_Fast@plt+0x2228>
    42c8:	adrp	x1, 7000 <PyInit__json@@Base+0x3a4>
    42cc:	add	x1, x1, #0x40
    42d0:	ldr	x0, [sp, #40]
    42d4:	bl	1dd0 <PyObject_GetAttrString@plt>
    42d8:	str	x0, [x19, #48]
    42dc:	cbz	x0, 42f8 <PySequence_Fast@plt+0x2228>
    42e0:	adrp	x1, 7000 <PyInit__json@@Base+0x3a4>
    42e4:	add	x1, x1, #0x50
    42e8:	ldr	x0, [sp, #40]
    42ec:	bl	1dd0 <PyObject_GetAttrString@plt>
    42f0:	str	x0, [x19, #56]
    42f4:	cbnz	x0, 430c <PySequence_Fast@plt+0x223c>
    42f8:	ldr	x0, [x19]
    42fc:	sub	x0, x0, #0x1
    4300:	str	x0, [x19]
    4304:	cbz	x0, 4328 <PySequence_Fast@plt+0x2258>
    4308:	mov	x19, #0x0                   	// #0
    430c:	mov	x0, x19
    4310:	ldp	x19, x20, [sp, #16]
    4314:	ldp	x29, x30, [sp], #48
    4318:	ret
    431c:	mov	x0, x20
    4320:	bl	1e30 <_Py_Dealloc@plt>
    4324:	b	4278 <PySequence_Fast@plt+0x21a8>
    4328:	mov	x0, x19
    432c:	bl	1e30 <_Py_Dealloc@plt>
    4330:	mov	x19, #0x0                   	// #0
    4334:	b	430c <PySequence_Fast@plt+0x223c>
    4338:	mov	x19, #0x0                   	// #0
    433c:	b	430c <PySequence_Fast@plt+0x223c>
    4340:	stp	x29, x30, [sp, #-32]!
    4344:	mov	x29, sp
    4348:	str	x19, [sp, #16]
    434c:	mov	x19, x0
    4350:	ldr	x0, [x0, #24]
    4354:	cbz	x0, 436c <PySequence_Fast@plt+0x229c>
    4358:	str	xzr, [x19, #24]
    435c:	ldr	x1, [x0]
    4360:	sub	x1, x1, #0x1
    4364:	str	x1, [x0]
    4368:	cbz	x1, 4408 <PySequence_Fast@plt+0x2338>
    436c:	ldr	x0, [x19, #32]
    4370:	cbz	x0, 4388 <PySequence_Fast@plt+0x22b8>
    4374:	str	xzr, [x19, #32]
    4378:	ldr	x1, [x0]
    437c:	sub	x1, x1, #0x1
    4380:	str	x1, [x0]
    4384:	cbz	x1, 4410 <PySequence_Fast@plt+0x2340>
    4388:	ldr	x0, [x19, #40]
    438c:	cbz	x0, 43a4 <PySequence_Fast@plt+0x22d4>
    4390:	str	xzr, [x19, #40]
    4394:	ldr	x1, [x0]
    4398:	sub	x1, x1, #0x1
    439c:	str	x1, [x0]
    43a0:	cbz	x1, 4418 <PySequence_Fast@plt+0x2348>
    43a4:	ldr	x0, [x19, #48]
    43a8:	cbz	x0, 43c0 <PySequence_Fast@plt+0x22f0>
    43ac:	str	xzr, [x19, #48]
    43b0:	ldr	x1, [x0]
    43b4:	sub	x1, x1, #0x1
    43b8:	str	x1, [x0]
    43bc:	cbz	x1, 4420 <PySequence_Fast@plt+0x2350>
    43c0:	ldr	x0, [x19, #56]
    43c4:	cbz	x0, 43dc <PySequence_Fast@plt+0x230c>
    43c8:	str	xzr, [x19, #56]
    43cc:	ldr	x1, [x0]
    43d0:	sub	x1, x1, #0x1
    43d4:	str	x1, [x0]
    43d8:	cbz	x1, 4428 <PySequence_Fast@plt+0x2358>
    43dc:	ldr	x0, [x19, #64]
    43e0:	cbz	x0, 43f8 <PySequence_Fast@plt+0x2328>
    43e4:	str	xzr, [x19, #64]
    43e8:	ldr	x1, [x0]
    43ec:	sub	x1, x1, #0x1
    43f0:	str	x1, [x0]
    43f4:	cbz	x1, 4430 <PySequence_Fast@plt+0x2360>
    43f8:	mov	w0, #0x0                   	// #0
    43fc:	ldr	x19, [sp, #16]
    4400:	ldp	x29, x30, [sp], #32
    4404:	ret
    4408:	bl	1e30 <_Py_Dealloc@plt>
    440c:	b	436c <PySequence_Fast@plt+0x229c>
    4410:	bl	1e30 <_Py_Dealloc@plt>
    4414:	b	4388 <PySequence_Fast@plt+0x22b8>
    4418:	bl	1e30 <_Py_Dealloc@plt>
    441c:	b	43a4 <PySequence_Fast@plt+0x22d4>
    4420:	bl	1e30 <_Py_Dealloc@plt>
    4424:	b	43c0 <PySequence_Fast@plt+0x22f0>
    4428:	bl	1e30 <_Py_Dealloc@plt>
    442c:	b	43dc <PySequence_Fast@plt+0x230c>
    4430:	bl	1e30 <_Py_Dealloc@plt>
    4434:	b	43f8 <PySequence_Fast@plt+0x2328>
    4438:	stp	x29, x30, [sp, #-32]!
    443c:	mov	x29, sp
    4440:	str	x19, [sp, #16]
    4444:	mov	x19, x0
    4448:	bl	20a0 <PyObject_GC_UnTrack@plt>
    444c:	mov	x0, x19
    4450:	bl	4340 <PySequence_Fast@plt+0x2270>
    4454:	ldr	x0, [x19, #8]
    4458:	ldr	x1, [x0, #320]
    445c:	mov	x0, x19
    4460:	blr	x1
    4464:	ldr	x19, [sp, #16]
    4468:	ldp	x29, x30, [sp], #32
    446c:	ret
    4470:	stp	x29, x30, [sp, #-32]!
    4474:	mov	x29, sp
    4478:	bl	1e80 <PyLong_FromSsize_t@plt>
    447c:	cbz	x0, 44b0 <PySequence_Fast@plt+0x23e0>
    4480:	str	x19, [sp, #16]
    4484:	mov	x19, x0
    4488:	mov	x1, x0
    448c:	adrp	x0, 18000 <PyInit__json@@Base+0x113a4>
    4490:	ldr	x0, [x0, #4040]
    4494:	ldr	x0, [x0]
    4498:	bl	1e40 <PyErr_SetObject@plt>
    449c:	ldr	x0, [x19]
    44a0:	sub	x0, x0, #0x1
    44a4:	str	x0, [x19]
    44a8:	cbz	x0, 44b8 <PySequence_Fast@plt+0x23e8>
    44ac:	ldr	x19, [sp, #16]
    44b0:	ldp	x29, x30, [sp], #32
    44b4:	ret
    44b8:	mov	x0, x19
    44bc:	bl	1e30 <_Py_Dealloc@plt>
    44c0:	ldr	x19, [sp, #16]
    44c4:	b	44b0 <PySequence_Fast@plt+0x23e0>
    44c8:	stp	x29, x30, [sp, #-48]!
    44cc:	mov	x29, sp
    44d0:	stp	x19, x20, [sp, #16]
    44d4:	stp	x21, x22, [sp, #32]
    44d8:	mov	x21, x0
    44dc:	mov	x20, x1
    44e0:	mov	x19, x2
    44e4:	adrp	x3, 19000 <PyInit__json@@Base+0x123a4>
    44e8:	ldr	x3, [x3, #2360]
    44ec:	cbz	x3, 4548 <PySequence_Fast@plt+0x2478>
    44f0:	mov	x4, x19
    44f4:	mov	x3, x20
    44f8:	mov	x2, x21
    44fc:	adrp	x1, 7000 <PyInit__json@@Base+0x3a4>
    4500:	add	x1, x1, #0x80
    4504:	adrp	x0, 19000 <PyInit__json@@Base+0x123a4>
    4508:	ldr	x0, [x0, #2360]
    450c:	bl	1f00 <PyObject_CallFunction@plt>
    4510:	mov	x19, x0
    4514:	cbz	x0, 4538 <PySequence_Fast@plt+0x2468>
    4518:	mov	x1, x0
    451c:	adrp	x0, 19000 <PyInit__json@@Base+0x123a4>
    4520:	ldr	x0, [x0, #2360]
    4524:	bl	1e40 <PyErr_SetObject@plt>
    4528:	ldr	x0, [x19]
    452c:	sub	x0, x0, #0x1
    4530:	str	x0, [x19]
    4534:	cbz	x0, 459c <PySequence_Fast@plt+0x24cc>
    4538:	ldp	x19, x20, [sp, #16]
    453c:	ldp	x21, x22, [sp, #32]
    4540:	ldp	x29, x30, [sp], #48
    4544:	ret
    4548:	adrp	x0, 7000 <PyInit__json@@Base+0x3a4>
    454c:	add	x0, x0, #0x60
    4550:	bl	1f60 <PyImport_ImportModule@plt>
    4554:	mov	x22, x0
    4558:	cbz	x0, 4538 <PySequence_Fast@plt+0x2468>
    455c:	adrp	x1, 7000 <PyInit__json@@Base+0x3a4>
    4560:	add	x1, x1, #0x70
    4564:	bl	1dd0 <PyObject_GetAttrString@plt>
    4568:	adrp	x1, 19000 <PyInit__json@@Base+0x123a4>
    456c:	str	x0, [x1, #2360]
    4570:	ldr	x0, [x22]
    4574:	sub	x0, x0, #0x1
    4578:	str	x0, [x22]
    457c:	cbz	x0, 4590 <PySequence_Fast@plt+0x24c0>
    4580:	adrp	x0, 19000 <PyInit__json@@Base+0x123a4>
    4584:	ldr	x0, [x0, #2360]
    4588:	cbnz	x0, 44f0 <PySequence_Fast@plt+0x2420>
    458c:	b	4538 <PySequence_Fast@plt+0x2468>
    4590:	mov	x0, x22
    4594:	bl	1e30 <_Py_Dealloc@plt>
    4598:	b	4580 <PySequence_Fast@plt+0x24b0>
    459c:	mov	x0, x19
    45a0:	bl	1e30 <_Py_Dealloc@plt>
    45a4:	b	4538 <PySequence_Fast@plt+0x2468>
    45a8:	stp	x29, x30, [sp, #-160]!
    45ac:	mov	x29, sp
    45b0:	stp	x23, x24, [sp, #48]
    45b4:	stp	x25, x26, [sp, #64]
    45b8:	stp	x27, x28, [sp, #80]
    45bc:	mov	x27, x0
    45c0:	mov	x26, x1
    45c4:	mov	w24, w2
    45c8:	str	x3, [sp, #112]
    45cc:	sub	x0, x1, #0x1
    45d0:	str	x0, [sp, #136]
    45d4:	ldrsb	w0, [x27, #32]
    45d8:	tbz	w0, #31, 4638 <PySequence_Fast@plt+0x2568>
    45dc:	stp	x19, x20, [sp, #16]
    45e0:	stp	x21, x22, [sp, #32]
    45e4:	ldr	x22, [x27, #16]
    45e8:	ldrb	w0, [x27, #32]
    45ec:	tbz	w0, #5, 4650 <PySequence_Fast@plt+0x2580>
    45f0:	add	x21, x27, #0x30
    45f4:	add	x1, x27, #0x48
    45f8:	tst	x0, #0x40
    45fc:	csel	x21, x1, x21, eq  // eq = none
    4600:	ldrb	w0, [x27, #32]
    4604:	ubfx	x0, x0, #2, #3
    4608:	mov	w20, w0
    460c:	cmp	x26, #0x0
    4610:	mov	x23, #0x0                   	// #0
    4614:	mov	x28, #0x0                   	// #0
    4618:	ccmp	x26, x22, #0x0, ge  // ge = tcont
    461c:	b.gt	4658 <PySequence_Fast@plt+0x2588>
    4620:	mov	w25, #0x5c                  	// #92
    4624:	and	x0, x0, #0xff
    4628:	str	x0, [sp, #128]
    462c:	add	x0, sp, #0x9c
    4630:	str	x0, [sp, #120]
    4634:	b	4960 <PySequence_Fast@plt+0x2890>
    4638:	mov	x0, x27
    463c:	bl	1db0 <_PyUnicode_Ready@plt>
    4640:	cmn	w0, #0x1
    4644:	b.ne	45dc <PySequence_Fast@plt+0x250c>  // b.any
    4648:	mov	x23, #0x0                   	// #0
    464c:	b	472c <PySequence_Fast@plt+0x265c>
    4650:	ldr	x21, [x27, #72]
    4654:	b	4600 <PySequence_Fast@plt+0x2530>
    4658:	adrp	x1, 7000 <PyInit__json@@Base+0x3a4>
    465c:	add	x1, x1, #0x88
    4660:	adrp	x0, 18000 <PyInit__json@@Base+0x113a4>
    4664:	ldr	x0, [x0, #3968]
    4668:	ldr	x0, [x0]
    466c:	bl	1e60 <PyErr_SetString@plt>
    4670:	mov	x0, #0xffffffffffffffff    	// #-1
    4674:	ldr	x1, [sp, #112]
    4678:	str	x0, [x1]
    467c:	mov	x23, #0x0                   	// #0
    4680:	ldp	x19, x20, [sp, #16]
    4684:	ldp	x21, x22, [sp, #32]
    4688:	b	472c <PySequence_Fast@plt+0x265c>
    468c:	ldrb	w0, [x21, x19]
    4690:	b	4698 <PySequence_Fast@plt+0x25c8>
    4694:	ldr	w0, [x21, x19, lsl #2]
    4698:	str	w0, [sp, #156]
    469c:	cmp	w0, #0x22
    46a0:	ccmp	w0, w25, #0x4, ne  // ne = any
    46a4:	b.eq	4744 <PySequence_Fast@plt+0x2674>  // b.none
    46a8:	cmp	w24, #0x0
    46ac:	ccmp	w0, #0x1f, #0x2, ne  // ne = any
    46b0:	b.ls	46d8 <PySequence_Fast@plt+0x2608>  // b.plast
    46b4:	add	x19, x19, #0x1
    46b8:	cmp	x22, x19
    46bc:	b.eq	4818 <PySequence_Fast@plt+0x2748>  // b.none
    46c0:	cmp	w20, #0x1
    46c4:	b.eq	468c <PySequence_Fast@plt+0x25bc>  // b.none
    46c8:	cmp	w20, #0x2
    46cc:	b.ne	4694 <PySequence_Fast@plt+0x25c4>  // b.any
    46d0:	ldrh	w0, [x21, x19, lsl #1]
    46d4:	b	4698 <PySequence_Fast@plt+0x25c8>
    46d8:	mov	x2, x19
    46dc:	mov	x1, x27
    46e0:	adrp	x0, 7000 <PyInit__json@@Base+0x3a4>
    46e4:	add	x0, x0, #0xa0
    46e8:	bl	44c8 <PySequence_Fast@plt+0x23f8>
    46ec:	mov	x0, #0xffffffffffffffff    	// #-1
    46f0:	ldr	x1, [sp, #112]
    46f4:	str	x0, [x1]
    46f8:	cbz	x28, 470c <PySequence_Fast@plt+0x263c>
    46fc:	ldr	x0, [x28]
    4700:	sub	x0, x0, #0x1
    4704:	str	x0, [x28]
    4708:	cbz	x0, 4d30 <PySequence_Fast@plt+0x2c60>
    470c:	cbz	x23, 4d54 <PySequence_Fast@plt+0x2c84>
    4710:	ldr	x0, [x23]
    4714:	sub	x0, x0, #0x1
    4718:	str	x0, [x23]
    471c:	cbz	x0, 4d3c <PySequence_Fast@plt+0x2c6c>
    4720:	mov	x23, #0x0                   	// #0
    4724:	ldp	x19, x20, [sp, #16]
    4728:	ldp	x21, x22, [sp, #32]
    472c:	mov	x0, x23
    4730:	ldp	x23, x24, [sp, #48]
    4734:	ldp	x25, x26, [sp, #64]
    4738:	ldp	x27, x28, [sp, #80]
    473c:	ldp	x29, x30, [sp], #160
    4740:	ret
    4744:	cmp	w0, #0x22
    4748:	ccmp	w0, w25, #0x4, ne  // ne = any
    474c:	b.ne	4818 <PySequence_Fast@plt+0x2748>  // b.any
    4750:	cmp	x26, x19
    4754:	b.eq	479c <PySequence_Fast@plt+0x26cc>  // b.none
    4758:	cbz	x23, 4780 <PySequence_Fast@plt+0x26b0>
    475c:	cbz	x28, 4830 <PySequence_Fast@plt+0x2760>
    4760:	mov	x1, x23
    4764:	mov	x0, x28
    4768:	bl	1eb0 <PyList_Append@plt>
    476c:	cbnz	w0, 4844 <PySequence_Fast@plt+0x2774>
    4770:	ldr	x0, [x23]
    4774:	sub	x0, x0, #0x1
    4778:	str	x0, [x23]
    477c:	cbz	x0, 4860 <PySequence_Fast@plt+0x2790>
    4780:	sub	x2, x19, x26
    4784:	ldr	x0, [sp, #128]
    4788:	madd	x1, x0, x26, x21
    478c:	mov	w0, w20
    4790:	bl	1fb0 <PyUnicode_FromKindAndData@plt>
    4794:	mov	x23, x0
    4798:	cbz	x0, 4c58 <PySequence_Fast@plt+0x2b88>
    479c:	add	x0, x19, #0x1
    47a0:	str	x0, [sp, #104]
    47a4:	ldr	w0, [sp, #156]
    47a8:	cmp	w0, #0x22
    47ac:	b.eq	486c <PySequence_Fast@plt+0x279c>  // b.none
    47b0:	ldr	x0, [sp, #104]
    47b4:	cmp	x22, x0
    47b8:	b.eq	48e0 <PySequence_Fast@plt+0x2810>  // b.none
    47bc:	cmp	w20, #0x1
    47c0:	b.eq	48f8 <PySequence_Fast@plt+0x2828>  // b.none
    47c4:	cmp	w20, #0x2
    47c8:	b.eq	4904 <PySequence_Fast@plt+0x2834>  // b.none
    47cc:	ldr	x0, [sp, #104]
    47d0:	ldr	w0, [x21, x0, lsl #2]
    47d4:	str	w0, [sp, #156]
    47d8:	cmp	w0, #0x75
    47dc:	b.eq	49d8 <PySequence_Fast@plt+0x2908>  // b.none
    47e0:	add	x26, x19, #0x2
    47e4:	cmp	w0, #0x6e
    47e8:	b.eq	49c0 <PySequence_Fast@plt+0x28f0>  // b.none
    47ec:	cmp	w0, #0x6e
    47f0:	b.hi	4998 <PySequence_Fast@plt+0x28c8>  // b.pmore
    47f4:	cmp	w0, #0x62
    47f8:	b.eq	49b4 <PySequence_Fast@plt+0x28e4>  // b.none
    47fc:	cmp	w0, #0x62
    4800:	b.ls	4910 <PySequence_Fast@plt+0x2840>  // b.plast
    4804:	cmp	w0, #0x66
    4808:	b.ne	497c <PySequence_Fast@plt+0x28ac>  // b.any
    480c:	mov	w0, #0xc                   	// #12
    4810:	str	w0, [sp, #156]
    4814:	b	4920 <PySequence_Fast@plt+0x2850>
    4818:	ldr	x2, [sp, #136]
    481c:	mov	x1, x27
    4820:	adrp	x0, 7000 <PyInit__json@@Base+0x3a4>
    4824:	add	x0, x0, #0xc0
    4828:	bl	44c8 <PySequence_Fast@plt+0x23f8>
    482c:	b	46ec <PySequence_Fast@plt+0x261c>
    4830:	mov	x0, #0x0                   	// #0
    4834:	bl	1da0 <PyList_New@plt>
    4838:	mov	x28, x0
    483c:	cbnz	x0, 4760 <PySequence_Fast@plt+0x2690>
    4840:	b	4c38 <PySequence_Fast@plt+0x2b68>
    4844:	ldr	x0, [x23]
    4848:	sub	x0, x0, #0x1
    484c:	str	x0, [x23]
    4850:	cbnz	x0, 4c58 <PySequence_Fast@plt+0x2b88>
    4854:	mov	x0, x23
    4858:	bl	1e30 <_Py_Dealloc@plt>
    485c:	b	4c58 <PySequence_Fast@plt+0x2b88>
    4860:	mov	x0, x23
    4864:	bl	1e30 <_Py_Dealloc@plt>
    4868:	b	4780 <PySequence_Fast@plt+0x26b0>
    486c:	cbz	x28, 4c94 <PySequence_Fast@plt+0x2bc4>
    4870:	cbz	x23, 4894 <PySequence_Fast@plt+0x27c4>
    4874:	mov	x1, x23
    4878:	mov	x0, x28
    487c:	bl	1eb0 <PyList_Append@plt>
    4880:	cbnz	w0, 4cb0 <PySequence_Fast@plt+0x2be0>
    4884:	ldr	x0, [x23]
    4888:	sub	x0, x0, #0x1
    488c:	str	x0, [x23]
    4890:	cbz	x0, 4cf8 <PySequence_Fast@plt+0x2c28>
    4894:	adrp	x0, 19000 <PyInit__json@@Base+0x123a4>
    4898:	ldr	x0, [x0, #2368]
    489c:	cbz	x0, 4d04 <PySequence_Fast@plt+0x2c34>
    48a0:	mov	x1, x28
    48a4:	adrp	x0, 19000 <PyInit__json@@Base+0x123a4>
    48a8:	ldr	x0, [x0, #2368]
    48ac:	bl	1e00 <PyUnicode_Join@plt>
    48b0:	mov	x23, x0
    48b4:	cbz	x0, 4cc0 <PySequence_Fast@plt+0x2bf0>
    48b8:	ldr	x0, [x28]
    48bc:	sub	x0, x0, #0x1
    48c0:	str	x0, [x28]
    48c4:	cbz	x0, 4d24 <PySequence_Fast@plt+0x2c54>
    48c8:	ldr	x0, [sp, #112]
    48cc:	ldr	x1, [sp, #104]
    48d0:	str	x1, [x0]
    48d4:	ldp	x19, x20, [sp, #16]
    48d8:	ldp	x21, x22, [sp, #32]
    48dc:	b	472c <PySequence_Fast@plt+0x265c>
    48e0:	ldr	x2, [sp, #136]
    48e4:	mov	x1, x27
    48e8:	adrp	x0, 7000 <PyInit__json@@Base+0x3a4>
    48ec:	add	x0, x0, #0xc0
    48f0:	bl	44c8 <PySequence_Fast@plt+0x23f8>
    48f4:	b	46ec <PySequence_Fast@plt+0x261c>
    48f8:	ldr	x0, [sp, #104]
    48fc:	ldrb	w0, [x21, x0]
    4900:	b	47d4 <PySequence_Fast@plt+0x2704>
    4904:	ldr	x0, [sp, #104]
    4908:	ldrh	w0, [x21, x0, lsl #1]
    490c:	b	47d4 <PySequence_Fast@plt+0x2704>
    4910:	cmp	w0, #0x2f
    4914:	b.eq	4920 <PySequence_Fast@plt+0x2850>  // b.none
    4918:	cmp	w0, #0x5c
    491c:	b.ne	4974 <PySequence_Fast@plt+0x28a4>  // b.any
    4920:	cbz	x23, 4948 <PySequence_Fast@plt+0x2878>
    4924:	cbz	x28, 4c28 <PySequence_Fast@plt+0x2b58>
    4928:	mov	x1, x23
    492c:	mov	x0, x28
    4930:	bl	1eb0 <PyList_Append@plt>
    4934:	cbnz	w0, 4c48 <PySequence_Fast@plt+0x2b78>
    4938:	ldr	x0, [x23]
    493c:	sub	x0, x0, #0x1
    4940:	str	x0, [x23]
    4944:	cbz	x0, 4c88 <PySequence_Fast@plt+0x2bb8>
    4948:	mov	x2, #0x1                   	// #1
    494c:	ldr	x1, [sp, #120]
    4950:	mov	w0, #0x4                   	// #4
    4954:	bl	1fb0 <PyUnicode_FromKindAndData@plt>
    4958:	mov	x23, x0
    495c:	cbz	x0, 4c58 <PySequence_Fast@plt+0x2b88>
    4960:	str	wzr, [sp, #156]
    4964:	cmp	x26, x22
    4968:	b.ge	4818 <PySequence_Fast@plt+0x2748>  // b.tcont
    496c:	mov	x19, x26
    4970:	b	46c0 <PySequence_Fast@plt+0x25f0>
    4974:	cmp	w0, #0x22
    4978:	b.eq	4920 <PySequence_Fast@plt+0x2850>  // b.none
    497c:	str	wzr, [sp, #156]
    4980:	mov	x2, x19
    4984:	mov	x1, x27
    4988:	adrp	x0, 7000 <PyInit__json@@Base+0x3a4>
    498c:	add	x0, x0, #0xe0
    4990:	bl	44c8 <PySequence_Fast@plt+0x23f8>
    4994:	b	46ec <PySequence_Fast@plt+0x261c>
    4998:	cmp	w0, #0x72
    499c:	b.eq	49cc <PySequence_Fast@plt+0x28fc>  // b.none
    49a0:	cmp	w0, #0x74
    49a4:	b.ne	497c <PySequence_Fast@plt+0x28ac>  // b.any
    49a8:	mov	w0, #0x9                   	// #9
    49ac:	str	w0, [sp, #156]
    49b0:	b	4920 <PySequence_Fast@plt+0x2850>
    49b4:	mov	w0, #0x8                   	// #8
    49b8:	str	w0, [sp, #156]
    49bc:	b	4920 <PySequence_Fast@plt+0x2850>
    49c0:	mov	w0, #0xa                   	// #10
    49c4:	str	w0, [sp, #156]
    49c8:	b	4920 <PySequence_Fast@plt+0x2850>
    49cc:	mov	w0, #0xd                   	// #13
    49d0:	str	w0, [sp, #156]
    49d4:	b	4920 <PySequence_Fast@plt+0x2850>
    49d8:	str	wzr, [sp, #156]
    49dc:	add	x2, x19, #0x2
    49e0:	add	x26, x19, #0x6
    49e4:	cmp	x22, x26
    49e8:	b.le	4a00 <PySequence_Fast@plt+0x2930>
    49ec:	mov	x5, x26
    49f0:	mov	x4, x26
    49f4:	cmp	x2, x26
    49f8:	b.lt	4a50 <PySequence_Fast@plt+0x2980>  // b.tstop
    49fc:	b	4920 <PySequence_Fast@plt+0x2850>
    4a00:	ldr	x2, [sp, #104]
    4a04:	mov	x1, x27
    4a08:	adrp	x0, 7000 <PyInit__json@@Base+0x3a4>
    4a0c:	add	x0, x0, #0xf0
    4a10:	bl	44c8 <PySequence_Fast@plt+0x23f8>
    4a14:	b	46ec <PySequence_Fast@plt+0x261c>
    4a18:	ldrb	w0, [x21, x2]
    4a1c:	b	4a64 <PySequence_Fast@plt+0x2994>
    4a20:	ldrh	w0, [x21, x2, lsl #1]
    4a24:	b	4a64 <PySequence_Fast@plt+0x2994>
    4a28:	sub	w3, w0, #0x61
    4a2c:	cmp	w3, #0x5
    4a30:	b.hi	4aa8 <PySequence_Fast@plt+0x29d8>  // b.pmore
    4a34:	sub	w0, w0, #0x57
    4a38:	orr	w0, w0, w1
    4a3c:	str	w0, [sp, #156]
    4a40:	add	x0, x2, #0x1
    4a44:	cmp	x0, x4
    4a48:	b.eq	4ac0 <PySequence_Fast@plt+0x29f0>  // b.none
    4a4c:	mov	x2, x0
    4a50:	cmp	w20, #0x1
    4a54:	b.eq	4a18 <PySequence_Fast@plt+0x2948>  // b.none
    4a58:	cmp	w20, #0x2
    4a5c:	b.eq	4a20 <PySequence_Fast@plt+0x2950>  // b.none
    4a60:	ldr	w0, [x21, x2, lsl #2]
    4a64:	ldr	w1, [sp, #156]
    4a68:	lsl	w1, w1, #4
    4a6c:	str	w1, [sp, #156]
    4a70:	cmp	w0, #0x46
    4a74:	b.hi	4a28 <PySequence_Fast@plt+0x2958>  // b.pmore
    4a78:	cmp	w0, #0x40
    4a7c:	b.hi	4a98 <PySequence_Fast@plt+0x29c8>  // b.pmore
    4a80:	sub	w0, w0, #0x30
    4a84:	cmp	w0, #0x9
    4a88:	b.hi	4aa8 <PySequence_Fast@plt+0x29d8>  // b.pmore
    4a8c:	orr	w0, w0, w1
    4a90:	str	w0, [sp, #156]
    4a94:	b	4a40 <PySequence_Fast@plt+0x2970>
    4a98:	sub	w0, w0, #0x37
    4a9c:	orr	w0, w0, w1
    4aa0:	str	w0, [sp, #156]
    4aa4:	b	4a40 <PySequence_Fast@plt+0x2970>
    4aa8:	ldr	x2, [sp, #104]
    4aac:	mov	x1, x27
    4ab0:	adrp	x0, 7000 <PyInit__json@@Base+0x3a4>
    4ab4:	add	x0, x0, #0xf0
    4ab8:	bl	44c8 <PySequence_Fast@plt+0x23f8>
    4abc:	b	46ec <PySequence_Fast@plt+0x261c>
    4ac0:	ldr	w7, [sp, #156]
    4ac4:	sub	w1, w7, #0xd, lsl #12
    4ac8:	sub	w1, w1, #0x800
    4acc:	cmp	w1, #0x3ff
    4ad0:	b.hi	4920 <PySequence_Fast@plt+0x2850>  // b.pmore
    4ad4:	add	x6, x19, #0xc
    4ad8:	cmp	x6, x22
    4adc:	b.ge	4920 <PySequence_Fast@plt+0x2850>  // b.tcont
    4ae0:	cmp	w20, #0x1
    4ae4:	b.eq	4b24 <PySequence_Fast@plt+0x2a54>  // b.none
    4ae8:	cmp	w20, #0x2
    4aec:	b.eq	4b48 <PySequence_Fast@plt+0x2a78>  // b.none
    4af0:	ldr	w0, [x21, x5, lsl #2]
    4af4:	cmp	w0, #0x5c
    4af8:	b.ne	4920 <PySequence_Fast@plt+0x2850>  // b.any
    4afc:	add	x4, x2, #0x3
    4b00:	add	x2, x2, #0x2
    4b04:	ldr	w1, [x21, x2, lsl #2]
    4b08:	cmp	w1, #0x75
    4b0c:	cset	w1, eq  // eq = none
    4b10:	cbz	w1, 4920 <PySequence_Fast@plt+0x2850>
    4b14:	cmp	x6, x4
    4b18:	b.le	4920 <PySequence_Fast@plt+0x2850>
    4b1c:	mov	w1, #0x0                   	// #0
    4b20:	b	4b9c <PySequence_Fast@plt+0x2acc>
    4b24:	ldrb	w0, [x21, x5]
    4b28:	cmp	w0, #0x5c
    4b2c:	b.ne	4920 <PySequence_Fast@plt+0x2850>  // b.any
    4b30:	add	x4, x2, #0x3
    4b34:	add	x2, x21, x2
    4b38:	ldrb	w1, [x2, #2]
    4b3c:	cmp	w1, #0x75
    4b40:	cset	w1, eq  // eq = none
    4b44:	b	4b10 <PySequence_Fast@plt+0x2a40>
    4b48:	ldrh	w0, [x21, x5, lsl #1]
    4b4c:	cmp	w0, #0x5c
    4b50:	b.ne	4920 <PySequence_Fast@plt+0x2850>  // b.any
    4b54:	add	x4, x2, #0x3
    4b58:	add	x2, x2, #0x2
    4b5c:	ldrh	w1, [x21, x2, lsl #1]
    4b60:	cmp	w1, #0x75
    4b64:	cset	w1, eq  // eq = none
    4b68:	b	4b10 <PySequence_Fast@plt+0x2a40>
    4b6c:	ldrb	w0, [x21, x4]
    4b70:	b	4bb0 <PySequence_Fast@plt+0x2ae0>
    4b74:	ldrh	w0, [x21, x4, lsl #1]
    4b78:	b	4bb0 <PySequence_Fast@plt+0x2ae0>
    4b7c:	sub	w1, w0, #0x61
    4b80:	cmp	w1, #0x5
    4b84:	b.hi	4be4 <PySequence_Fast@plt+0x2b14>  // b.pmore
    4b88:	sub	w2, w0, #0x57
    4b8c:	orr	w1, w2, w3
    4b90:	add	x4, x4, #0x1
    4b94:	cmp	x6, x4
    4b98:	b.le	4bfc <PySequence_Fast@plt+0x2b2c>
    4b9c:	cmp	w20, #0x1
    4ba0:	b.eq	4b6c <PySequence_Fast@plt+0x2a9c>  // b.none
    4ba4:	cmp	w20, #0x2
    4ba8:	b.eq	4b74 <PySequence_Fast@plt+0x2aa4>  // b.none
    4bac:	ldr	w0, [x21, x4, lsl #2]
    4bb0:	lsl	w3, w1, #4
    4bb4:	cmp	w0, #0x46
    4bb8:	b.hi	4b7c <PySequence_Fast@plt+0x2aac>  // b.pmore
    4bbc:	cmp	w0, #0x40
    4bc0:	b.hi	4bd8 <PySequence_Fast@plt+0x2b08>  // b.pmore
    4bc4:	sub	w0, w0, #0x30
    4bc8:	cmp	w0, #0x9
    4bcc:	b.hi	4be4 <PySequence_Fast@plt+0x2b14>  // b.pmore
    4bd0:	orr	w1, w0, w3
    4bd4:	b	4b90 <PySequence_Fast@plt+0x2ac0>
    4bd8:	sub	w1, w0, #0x37
    4bdc:	orr	w1, w1, w3
    4be0:	b	4b90 <PySequence_Fast@plt+0x2ac0>
    4be4:	add	x2, x19, #0x7
    4be8:	mov	x1, x27
    4bec:	adrp	x0, 7000 <PyInit__json@@Base+0x3a4>
    4bf0:	add	x0, x0, #0xf0
    4bf4:	bl	44c8 <PySequence_Fast@plt+0x23f8>
    4bf8:	b	46ec <PySequence_Fast@plt+0x261c>
    4bfc:	sub	w2, w1, #0xd, lsl #12
    4c00:	sub	w2, w2, #0xc00
    4c04:	cmp	w2, #0x3ff
    4c08:	b.hi	4920 <PySequence_Fast@plt+0x2850>  // b.pmore
    4c0c:	ubfiz	w0, w7, #10, #10
    4c10:	and	w1, w1, #0x3ff
    4c14:	orr	w0, w0, w1
    4c18:	add	w0, w0, #0x10, lsl #12
    4c1c:	str	w0, [sp, #156]
    4c20:	mov	x26, x6
    4c24:	b	4920 <PySequence_Fast@plt+0x2850>
    4c28:	mov	x0, #0x0                   	// #0
    4c2c:	bl	1da0 <PyList_New@plt>
    4c30:	mov	x28, x0
    4c34:	cbnz	x0, 4928 <PySequence_Fast@plt+0x2858>
    4c38:	mov	x0, #0xffffffffffffffff    	// #-1
    4c3c:	ldr	x1, [sp, #112]
    4c40:	str	x0, [x1]
    4c44:	b	470c <PySequence_Fast@plt+0x263c>
    4c48:	ldr	x0, [x23]
    4c4c:	sub	x0, x0, #0x1
    4c50:	str	x0, [x23]
    4c54:	cbz	x0, 4c7c <PySequence_Fast@plt+0x2bac>
    4c58:	mov	x0, #0xffffffffffffffff    	// #-1
    4c5c:	ldr	x1, [sp, #112]
    4c60:	str	x0, [x1]
    4c64:	mov	x23, #0x0                   	// #0
    4c68:	cbnz	x28, 46fc <PySequence_Fast@plt+0x262c>
    4c6c:	mov	x23, x28
    4c70:	ldp	x19, x20, [sp, #16]
    4c74:	ldp	x21, x22, [sp, #32]
    4c78:	b	472c <PySequence_Fast@plt+0x265c>
    4c7c:	mov	x0, x23
    4c80:	bl	1e30 <_Py_Dealloc@plt>
    4c84:	b	4c58 <PySequence_Fast@plt+0x2b88>
    4c88:	mov	x0, x23
    4c8c:	bl	1e30 <_Py_Dealloc@plt>
    4c90:	b	4948 <PySequence_Fast@plt+0x2878>
    4c94:	cbnz	x23, 48c8 <PySequence_Fast@plt+0x27f8>
    4c98:	mov	x1, #0x0                   	// #0
    4c9c:	adrp	x0, 7000 <PyInit__json@@Base+0x3a4>
    4ca0:	add	x0, x0, #0x2d8
    4ca4:	bl	2050 <PyUnicode_FromStringAndSize@plt>
    4ca8:	mov	x23, x0
    4cac:	b	48c8 <PySequence_Fast@plt+0x27f8>
    4cb0:	ldr	x0, [x23]
    4cb4:	sub	x0, x0, #0x1
    4cb8:	str	x0, [x23]
    4cbc:	cbz	x0, 4cec <PySequence_Fast@plt+0x2c1c>
    4cc0:	mov	x0, #0xffffffffffffffff    	// #-1
    4cc4:	ldr	x1, [sp, #112]
    4cc8:	str	x0, [x1]
    4ccc:	ldr	x0, [x28]
    4cd0:	sub	x0, x0, #0x1
    4cd4:	str	x0, [x28]
    4cd8:	mov	x23, #0x0                   	// #0
    4cdc:	cbz	x0, 4d30 <PySequence_Fast@plt+0x2c60>
    4ce0:	ldp	x19, x20, [sp, #16]
    4ce4:	ldp	x21, x22, [sp, #32]
    4ce8:	b	472c <PySequence_Fast@plt+0x265c>
    4cec:	mov	x0, x23
    4cf0:	bl	1e30 <_Py_Dealloc@plt>
    4cf4:	b	4cc0 <PySequence_Fast@plt+0x2bf0>
    4cf8:	mov	x0, x23
    4cfc:	bl	1e30 <_Py_Dealloc@plt>
    4d00:	b	4894 <PySequence_Fast@plt+0x27c4>
    4d04:	mov	x1, #0x0                   	// #0
    4d08:	adrp	x0, 7000 <PyInit__json@@Base+0x3a4>
    4d0c:	add	x0, x0, #0x2d8
    4d10:	bl	2050 <PyUnicode_FromStringAndSize@plt>
    4d14:	adrp	x1, 19000 <PyInit__json@@Base+0x123a4>
    4d18:	str	x0, [x1, #2368]
    4d1c:	cbnz	x0, 48a0 <PySequence_Fast@plt+0x27d0>
    4d20:	b	4cc0 <PySequence_Fast@plt+0x2bf0>
    4d24:	mov	x0, x28
    4d28:	bl	1e30 <_Py_Dealloc@plt>
    4d2c:	b	48c8 <PySequence_Fast@plt+0x27f8>
    4d30:	mov	x0, x28
    4d34:	bl	1e30 <_Py_Dealloc@plt>
    4d38:	b	470c <PySequence_Fast@plt+0x263c>
    4d3c:	mov	x0, x23
    4d40:	bl	1e30 <_Py_Dealloc@plt>
    4d44:	mov	x23, #0x0                   	// #0
    4d48:	ldp	x19, x20, [sp, #16]
    4d4c:	ldp	x21, x22, [sp, #32]
    4d50:	b	472c <PySequence_Fast@plt+0x265c>
    4d54:	ldp	x19, x20, [sp, #16]
    4d58:	ldp	x21, x22, [sp, #32]
    4d5c:	b	472c <PySequence_Fast@plt+0x265c>
    4d60:	stp	x29, x30, [sp, #-48]!
    4d64:	mov	x29, sp
    4d68:	stp	x19, x20, [sp, #16]
    4d6c:	stp	x21, x22, [sp, #32]
    4d70:	mov	x22, x0
    4d74:	mov	x0, x1
    4d78:	mov	x20, x2
    4d7c:	mov	x21, x3
    4d80:	bl	2000 <PyUnicode_InternFromString@plt>
    4d84:	mov	x19, x0
    4d88:	cbz	x0, 4ddc <PySequence_Fast@plt+0x2d0c>
    4d8c:	mov	x2, #0x0                   	// #0
    4d90:	mov	x1, x0
    4d94:	ldr	x0, [x22, #56]
    4d98:	bl	1f70 <PyObject_CallFunctionObjArgs@plt>
    4d9c:	mov	x22, x0
    4da0:	ldr	x2, [x19, #16]
    4da4:	add	x20, x20, x2
    4da8:	ldr	x1, [x19]
    4dac:	sub	x1, x1, #0x1
    4db0:	str	x1, [x19]
    4db4:	cbz	x1, 4dd0 <PySequence_Fast@plt+0x2d00>
    4db8:	str	x20, [x21]
    4dbc:	mov	x0, x22
    4dc0:	ldp	x19, x20, [sp, #16]
    4dc4:	ldp	x21, x22, [sp, #32]
    4dc8:	ldp	x29, x30, [sp], #48
    4dcc:	ret
    4dd0:	mov	x0, x19
    4dd4:	bl	1e30 <_Py_Dealloc@plt>
    4dd8:	b	4db8 <PySequence_Fast@plt+0x2ce8>
    4ddc:	mov	x22, x0
    4de0:	b	4dbc <PySequence_Fast@plt+0x2cec>
    4de4:	stp	x29, x30, [sp, #-144]!
    4de8:	mov	x29, sp
    4dec:	stp	x19, x20, [sp, #16]
    4df0:	stp	x23, x24, [sp, #48]
    4df4:	stp	x25, x26, [sp, #64]
    4df8:	mov	x23, x0
    4dfc:	mov	x20, x1
    4e00:	mov	x26, x2
    4e04:	mov	x25, x3
    4e08:	ldrsb	w0, [x1, #32]
    4e0c:	tbz	w0, #31, 4f1c <PySequence_Fast@plt+0x2e4c>
    4e10:	ldrb	w4, [x20, #32]
    4e14:	tbz	w4, #5, 4f34 <PySequence_Fast@plt+0x2e64>
    4e18:	add	x0, x20, #0x30
    4e1c:	add	x2, x20, #0x48
    4e20:	tst	x4, #0x40
    4e24:	csel	x2, x2, x0, eq  // eq = none
    4e28:	ldrb	w1, [x20, #32]
    4e2c:	ubfx	x1, x1, #2, #3
    4e30:	ldr	x3, [x20, #16]
    4e34:	tbnz	x26, #63, 4f3c <PySequence_Fast@plt+0x2e6c>
    4e38:	cmp	x3, x26
    4e3c:	b.le	4f5c <PySequence_Fast@plt+0x2e8c>
    4e40:	cmp	w1, #0x1
    4e44:	b.eq	4f6c <PySequence_Fast@plt+0x2e9c>  // b.none
    4e48:	cmp	w1, #0x2
    4e4c:	b.eq	4f74 <PySequence_Fast@plt+0x2ea4>  // b.none
    4e50:	ldr	w0, [x2, x26, lsl #2]
    4e54:	cmp	w0, #0x5b
    4e58:	b.eq	5a08 <PySequence_Fast@plt+0x3938>  // b.none
    4e5c:	b.ls	4f7c <PySequence_Fast@plt+0x2eac>  // b.plast
    4e60:	cmp	w0, #0x74
    4e64:	b.eq	5e64 <PySequence_Fast@plt+0x3d94>  // b.none
    4e68:	b.ls	51c0 <PySequence_Fast@plt+0x30f0>  // b.plast
    4e6c:	cmp	w0, #0x7b
    4e70:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    4e74:	bl	1f20 <PyThreadState_Get@plt>
    4e78:	ldr	w1, [x0, #32]
    4e7c:	add	w1, w1, #0x1
    4e80:	str	w1, [x0, #32]
    4e84:	adrp	x0, 18000 <PyInit__json@@Base+0x113a4>
    4e88:	ldr	x0, [x0, #3984]
    4e8c:	ldr	w0, [x0]
    4e90:	cmp	w1, w0
    4e94:	b.le	4ea8 <PySequence_Fast@plt+0x2dd8>
    4e98:	adrp	x0, 7000 <PyInit__json@@Base+0x3a4>
    4e9c:	add	x0, x0, #0x120
    4ea0:	bl	1ec0 <_Py_CheckRecursiveCall@plt>
    4ea4:	cbnz	w0, 6758 <PySequence_Fast@plt+0x4688>
    4ea8:	add	x26, x26, #0x1
    4eac:	ldr	x0, [x23, #32]
    4eb0:	str	x0, [sp, #112]
    4eb4:	ldrsb	w0, [x20, #32]
    4eb8:	tbz	w0, #31, 5260 <PySequence_Fast@plt+0x3190>
    4ebc:	stp	x21, x22, [sp, #32]
    4ec0:	ldrb	w0, [x20, #32]
    4ec4:	tbz	w0, #5, 5278 <PySequence_Fast@plt+0x31a8>
    4ec8:	add	x19, x20, #0x30
    4ecc:	add	x1, x20, #0x48
    4ed0:	tst	x0, #0x40
    4ed4:	csel	x19, x1, x19, eq  // eq = none
    4ed8:	ldrb	w21, [x20, #32]
    4edc:	ubfx	x21, x21, #2, #3
    4ee0:	ldr	x22, [x20, #16]
    4ee4:	sub	x22, x22, #0x1
    4ee8:	adrp	x0, 18000 <PyInit__json@@Base+0x113a4>
    4eec:	ldr	x0, [x0, #4016]
    4ef0:	ldr	x1, [sp, #112]
    4ef4:	cmp	x1, x0
    4ef8:	b.eq	5280 <PySequence_Fast@plt+0x31b0>  // b.none
    4efc:	mov	x0, #0x0                   	// #0
    4f00:	bl	1da0 <PyList_New@plt>
    4f04:	mov	x24, x0
    4f08:	cbz	x24, 5a00 <PySequence_Fast@plt+0x3930>
    4f0c:	cmp	x26, x22
    4f10:	b.gt	53a8 <PySequence_Fast@plt+0x32d8>
    4f14:	stp	x27, x28, [sp, #80]
    4f18:	b	52c0 <PySequence_Fast@plt+0x31f0>
    4f1c:	mov	x0, x1
    4f20:	bl	1db0 <_PyUnicode_Ready@plt>
    4f24:	cmn	w0, #0x1
    4f28:	b.ne	4e10 <PySequence_Fast@plt+0x2d40>  // b.any
    4f2c:	mov	x24, #0x0                   	// #0
    4f30:	b	6720 <PySequence_Fast@plt+0x4650>
    4f34:	ldr	x2, [x20, #72]
    4f38:	b	4e28 <PySequence_Fast@plt+0x2d58>
    4f3c:	adrp	x1, 7000 <PyInit__json@@Base+0x3a4>
    4f40:	add	x1, x1, #0x108
    4f44:	adrp	x0, 18000 <PyInit__json@@Base+0x113a4>
    4f48:	ldr	x0, [x0, #3968]
    4f4c:	ldr	x0, [x0]
    4f50:	bl	1e60 <PyErr_SetString@plt>
    4f54:	mov	x24, #0x0                   	// #0
    4f58:	b	6720 <PySequence_Fast@plt+0x4650>
    4f5c:	mov	x0, x26
    4f60:	bl	4470 <PySequence_Fast@plt+0x23a0>
    4f64:	mov	x24, #0x0                   	// #0
    4f68:	b	6720 <PySequence_Fast@plt+0x4650>
    4f6c:	ldrb	w0, [x2, x26]
    4f70:	b	4e54 <PySequence_Fast@plt+0x2d84>
    4f74:	ldrh	w0, [x2, x26, lsl #1]
    4f78:	b	4e54 <PySequence_Fast@plt+0x2d84>
    4f7c:	cmp	w0, #0x49
    4f80:	b.eq	60c0 <PySequence_Fast@plt+0x3ff0>  // b.none
    4f84:	b.ls	50ec <PySequence_Fast@plt+0x301c>  // b.plast
    4f88:	cmp	w0, #0x4e
    4f8c:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    4f90:	add	x0, x26, #0x2
    4f94:	cmp	x0, x3
    4f98:	b.ge	4fd4 <PySequence_Fast@plt+0x2f04>  // b.tcont
    4f9c:	cmp	w1, #0x1
    4fa0:	b.eq	6054 <PySequence_Fast@plt+0x3f84>  // b.none
    4fa4:	cmp	w1, #0x2
    4fa8:	b.eq	6078 <PySequence_Fast@plt+0x3fa8>  // b.none
    4fac:	add	x0, x26, #0x1
    4fb0:	lsl	x1, x0, #2
    4fb4:	ldr	w0, [x2, x0, lsl #2]
    4fb8:	cmp	w0, #0x61
    4fbc:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    4fc0:	add	x1, x2, x1
    4fc4:	ldr	w0, [x1, #4]
    4fc8:	cmp	w0, #0x4e
    4fcc:	cset	w0, eq  // eq = none
    4fd0:	cbnz	w0, 60a0 <PySequence_Fast@plt+0x3fd0>
    4fd4:	tbz	w4, #7, 636c <PySequence_Fast@plt+0x429c>
    4fd8:	stp	x21, x22, [sp, #32]
    4fdc:	ldrb	w0, [x20, #32]
    4fe0:	tbz	w0, #5, 6384 <PySequence_Fast@plt+0x42b4>
    4fe4:	add	x21, x20, #0x30
    4fe8:	add	x1, x20, #0x48
    4fec:	tst	x0, #0x40
    4ff0:	csel	x21, x1, x21, eq  // eq = none
    4ff4:	ldrb	w0, [x20, #32]
    4ff8:	ubfx	x1, x0, #2, #3
    4ffc:	mov	x0, x1
    5000:	mov	w22, w1
    5004:	ldr	x3, [x20, #16]
    5008:	sub	x3, x3, #0x1
    500c:	cmp	w1, #0x1
    5010:	b.eq	638c <PySequence_Fast@plt+0x42bc>  // b.none
    5014:	cmp	w1, #0x2
    5018:	b.eq	63c0 <PySequence_Fast@plt+0x42f0>  // b.none
    501c:	ldr	w2, [x21, x26, lsl #2]
    5020:	mov	x19, x26
    5024:	cmp	w2, #0x2d
    5028:	b.eq	6a1c <PySequence_Fast@plt+0x494c>  // b.none
    502c:	ldr	w2, [x21, x19, lsl #2]
    5030:	cmp	w2, #0x30
    5034:	b.hi	640c <PySequence_Fast@plt+0x433c>  // b.pmore
    5038:	cmp	w2, #0x30
    503c:	cset	w2, eq  // eq = none
    5040:	cbz	w2, 64d4 <PySequence_Fast@plt+0x4404>
    5044:	add	x19, x19, #0x1
    5048:	cmp	x3, x19
    504c:	b.le	6470 <PySequence_Fast@plt+0x43a0>
    5050:	cmp	w0, #0x1
    5054:	b.eq	6838 <PySequence_Fast@plt+0x4768>  // b.none
    5058:	cmp	w0, #0x2
    505c:	b.eq	64a8 <PySequence_Fast@plt+0x43d8>  // b.none
    5060:	lsl	x2, x19, #2
    5064:	ldr	w4, [x21, x19, lsl #2]
    5068:	cmp	w4, #0x2e
    506c:	b.eq	64e8 <PySequence_Fast@plt+0x4418>  // b.none
    5070:	mov	w5, #0x0                   	// #0
    5074:	cmp	w0, #0x1
    5078:	b.eq	67f8 <PySequence_Fast@plt+0x4728>  // b.none
    507c:	cmp	w0, #0x2
    5080:	b.eq	6594 <PySequence_Fast@plt+0x44c4>  // b.none
    5084:	lsl	x4, x19, #2
    5088:	ldr	w2, [x21, x19, lsl #2]
    508c:	cmp	w2, #0x65
    5090:	b.eq	6780 <PySequence_Fast@plt+0x46b0>  // b.none
    5094:	cmp	w2, #0x45
    5098:	b.eq	6780 <PySequence_Fast@plt+0x46b0>  // b.none
    509c:	cbz	w5, 6470 <PySequence_Fast@plt+0x43a0>
    50a0:	ldr	x23, [x23, #40]
    50a4:	adrp	x2, 18000 <PyInit__json@@Base+0x113a4>
    50a8:	ldr	x2, [x2, #3952]
    50ac:	cmp	x23, x2
    50b0:	b.eq	667c <PySequence_Fast@plt+0x45ac>  // b.none
    50b4:	mov	w24, #0x1                   	// #1
    50b8:	cbz	x23, 6680 <PySequence_Fast@plt+0x45b0>
    50bc:	and	x1, x1, #0xff
    50c0:	sub	x2, x19, x26
    50c4:	madd	x1, x1, x26, x21
    50c8:	bl	1fb0 <PyUnicode_FromKindAndData@plt>
    50cc:	mov	x20, x0
    50d0:	cbz	x0, 6768 <PySequence_Fast@plt+0x4698>
    50d4:	mov	x2, #0x0                   	// #0
    50d8:	mov	x1, x0
    50dc:	mov	x0, x23
    50e0:	bl	1f70 <PyObject_CallFunctionObjArgs@plt>
    50e4:	mov	x24, x0
    50e8:	b	6708 <PySequence_Fast@plt+0x4638>
    50ec:	cmp	w0, #0x22
    50f0:	b.eq	5244 <PySequence_Fast@plt+0x3174>  // b.none
    50f4:	cmp	w0, #0x2d
    50f8:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    50fc:	add	x0, x26, #0x8
    5100:	cmp	x0, x3
    5104:	b.ge	4fd4 <PySequence_Fast@plt+0x2f04>  // b.tcont
    5108:	cmp	w1, #0x1
    510c:	b.eq	6260 <PySequence_Fast@plt+0x4190>  // b.none
    5110:	cmp	w1, #0x2
    5114:	b.eq	62e4 <PySequence_Fast@plt+0x4214>  // b.none
    5118:	add	x0, x26, #0x1
    511c:	lsl	x1, x0, #2
    5120:	ldr	w0, [x2, x0, lsl #2]
    5124:	cmp	w0, #0x49
    5128:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    512c:	add	x0, x2, x1
    5130:	ldr	w0, [x0, #4]
    5134:	cmp	w0, #0x6e
    5138:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    513c:	add	x0, x2, x1
    5140:	ldr	w0, [x0, #8]
    5144:	cmp	w0, #0x66
    5148:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    514c:	add	x0, x2, x1
    5150:	ldr	w0, [x0, #12]
    5154:	cmp	w0, #0x69
    5158:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    515c:	add	x0, x2, x1
    5160:	ldr	w0, [x0, #16]
    5164:	cmp	w0, #0x6e
    5168:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    516c:	add	x0, x2, x1
    5170:	ldr	w0, [x0, #20]
    5174:	cmp	w0, #0x69
    5178:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    517c:	add	x0, x2, x1
    5180:	ldr	w0, [x0, #24]
    5184:	cmp	w0, #0x74
    5188:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    518c:	add	x2, x2, x1
    5190:	ldr	w0, [x2, #28]
    5194:	cmp	w0, #0x79
    5198:	cset	w0, eq  // eq = none
    519c:	cbz	w0, 4fd4 <PySequence_Fast@plt+0x2f04>
    51a0:	mov	x3, x25
    51a4:	mov	x2, x26
    51a8:	adrp	x1, 6000 <PySequence_Fast@plt+0x3f30>
    51ac:	add	x1, x1, #0xea8
    51b0:	mov	x0, x23
    51b4:	bl	4d60 <PySequence_Fast@plt+0x2c90>
    51b8:	mov	x24, x0
    51bc:	b	6720 <PySequence_Fast@plt+0x4650>
    51c0:	cmp	w0, #0x66
    51c4:	b.eq	5f44 <PySequence_Fast@plt+0x3e74>  // b.none
    51c8:	cmp	w0, #0x6e
    51cc:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    51d0:	add	x0, x26, #0x3
    51d4:	cmp	x0, x3
    51d8:	b.ge	4fd4 <PySequence_Fast@plt+0x2f04>  // b.tcont
    51dc:	cmp	w1, #0x1
    51e0:	b.eq	5df8 <PySequence_Fast@plt+0x3d28>  // b.none
    51e4:	cmp	w1, #0x2
    51e8:	b.eq	5e2c <PySequence_Fast@plt+0x3d5c>  // b.none
    51ec:	add	x0, x26, #0x1
    51f0:	lsl	x1, x0, #2
    51f4:	ldr	w0, [x2, x0, lsl #2]
    51f8:	cmp	w0, #0x75
    51fc:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    5200:	add	x0, x2, x1
    5204:	ldr	w0, [x0, #4]
    5208:	cmp	w0, #0x6c
    520c:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    5210:	add	x1, x2, x1
    5214:	ldr	w0, [x1, #8]
    5218:	cmp	w0, #0x6c
    521c:	cset	w0, eq  // eq = none
    5220:	cbz	w0, 4fd4 <PySequence_Fast@plt+0x2f04>
    5224:	add	x26, x26, #0x4
    5228:	str	x26, [x25]
    522c:	adrp	x24, 18000 <PyInit__json@@Base+0x113a4>
    5230:	ldr	x24, [x24, #4016]
    5234:	ldr	x0, [x24]
    5238:	add	x0, x0, #0x1
    523c:	str	x0, [x24]
    5240:	b	6720 <PySequence_Fast@plt+0x4650>
    5244:	mov	x3, x25
    5248:	ldrsb	w2, [x23, #16]
    524c:	add	x1, x26, #0x1
    5250:	mov	x0, x20
    5254:	bl	45a8 <PySequence_Fast@plt+0x24d8>
    5258:	mov	x24, x0
    525c:	b	6720 <PySequence_Fast@plt+0x4650>
    5260:	mov	x0, x20
    5264:	bl	1db0 <_PyUnicode_Ready@plt>
    5268:	cmn	w0, #0x1
    526c:	b.ne	4ebc <PySequence_Fast@plt+0x2dec>  // b.any
    5270:	mov	x24, #0x0                   	// #0
    5274:	b	58c4 <PySequence_Fast@plt+0x37f4>
    5278:	ldr	x19, [x20, #72]
    527c:	b	4ed8 <PySequence_Fast@plt+0x2e08>
    5280:	bl	1fd0 <PyDict_New@plt>
    5284:	mov	x24, x0
    5288:	b	4f08 <PySequence_Fast@plt+0x2e38>
    528c:	mov	x1, x26
    5290:	ldrb	w0, [x19, x26]
    5294:	cmp	w0, #0x20
    5298:	b.eq	52b4 <PySequence_Fast@plt+0x31e4>  // b.none
    529c:	cmp	w0, #0x9
    52a0:	b.eq	52b4 <PySequence_Fast@plt+0x31e4>  // b.none
    52a4:	cmp	w0, #0xa
    52a8:	b.eq	52b4 <PySequence_Fast@plt+0x31e4>  // b.none
    52ac:	cmp	w0, #0xd
    52b0:	b.ne	69b4 <PySequence_Fast@plt+0x48e4>  // b.any
    52b4:	add	x26, x26, #0x1
    52b8:	cmp	x22, x26
    52bc:	b.lt	539c <PySequence_Fast@plt+0x32cc>  // b.tstop
    52c0:	cmp	w21, #0x1
    52c4:	b.eq	528c <PySequence_Fast@plt+0x31bc>  // b.none
    52c8:	cmp	w21, #0x2
    52cc:	b.eq	5324 <PySequence_Fast@plt+0x3254>  // b.none
    52d0:	mov	x1, x26
    52d4:	ldr	w0, [x19, x26, lsl #2]
    52d8:	cmp	w0, #0x20
    52dc:	b.eq	52b4 <PySequence_Fast@plt+0x31e4>  // b.none
    52e0:	cmp	w0, #0x9
    52e4:	b.eq	52b4 <PySequence_Fast@plt+0x31e4>  // b.none
    52e8:	cmp	w0, #0xa
    52ec:	b.eq	52b4 <PySequence_Fast@plt+0x31e4>  // b.none
    52f0:	cmp	w0, #0xd
    52f4:	b.eq	52b4 <PySequence_Fast@plt+0x31e4>  // b.none
    52f8:	cmp	x22, x26
    52fc:	b.lt	6a14 <PySequence_Fast@plt+0x4944>  // b.tstop
    5300:	ldr	w0, [x19, x1, lsl #2]
    5304:	cmp	w0, #0x7d
    5308:	b.eq	69c8 <PySequence_Fast@plt+0x48f8>  // b.none
    530c:	add	x0, sp, #0x88
    5310:	str	x0, [sp, #104]
    5314:	adrp	x0, 18000 <PyInit__json@@Base+0x113a4>
    5318:	ldr	x0, [x0, #4016]
    531c:	str	x0, [sp, #120]
    5320:	b	57f0 <PySequence_Fast@plt+0x3720>
    5324:	mov	x1, x26
    5328:	ldrh	w0, [x19, x26, lsl #1]
    532c:	cmp	w0, #0x20
    5330:	b.eq	52b4 <PySequence_Fast@plt+0x31e4>  // b.none
    5334:	cmp	w0, #0x9
    5338:	b.eq	52b4 <PySequence_Fast@plt+0x31e4>  // b.none
    533c:	cmp	w0, #0xa
    5340:	b.eq	52b4 <PySequence_Fast@plt+0x31e4>  // b.none
    5344:	cmp	w0, #0xd
    5348:	b.eq	52b4 <PySequence_Fast@plt+0x31e4>  // b.none
    534c:	cmp	x22, x26
    5350:	b.lt	6a0c <PySequence_Fast@plt+0x493c>  // b.tstop
    5354:	ldrh	w0, [x19, x1, lsl #1]
    5358:	cmp	w0, #0x7d
    535c:	b.ne	530c <PySequence_Fast@plt+0x323c>  // b.any
    5360:	b	69c8 <PySequence_Fast@plt+0x48f8>
    5364:	ldp	x27, x28, [sp, #80]
    5368:	b	53a8 <PySequence_Fast@plt+0x32d8>
    536c:	ldrb	w0, [x19, x26]
    5370:	cmp	w0, #0x22
    5374:	b.eq	580c <PySequence_Fast@plt+0x373c>  // b.none
    5378:	ldp	x27, x28, [sp, #80]
    537c:	b	53a8 <PySequence_Fast@plt+0x32d8>
    5380:	ldrh	w0, [x19, x26, lsl #1]
    5384:	cmp	w0, #0x22
    5388:	b.eq	580c <PySequence_Fast@plt+0x373c>  // b.none
    538c:	ldp	x27, x28, [sp, #80]
    5390:	b	53a8 <PySequence_Fast@plt+0x32d8>
    5394:	ldp	x27, x28, [sp, #80]
    5398:	b	53a8 <PySequence_Fast@plt+0x32d8>
    539c:	ldp	x27, x28, [sp, #80]
    53a0:	b	53a8 <PySequence_Fast@plt+0x32d8>
    53a4:	ldp	x27, x28, [sp, #80]
    53a8:	mov	x2, x26
    53ac:	mov	x1, x20
    53b0:	adrp	x0, 7000 <PyInit__json@@Base+0x3a4>
    53b4:	add	x0, x0, #0x158
    53b8:	bl	44c8 <PySequence_Fast@plt+0x23f8>
    53bc:	b	58ac <PySequence_Fast@plt+0x37dc>
    53c0:	mov	x0, x27
    53c4:	bl	1e30 <_Py_Dealloc@plt>
    53c8:	b	5858 <PySequence_Fast@plt+0x3788>
    53cc:	bl	1f40 <PyErr_Occurred@plt>
    53d0:	cbnz	x0, 6950 <PySequence_Fast@plt+0x4880>
    53d4:	mov	x2, x27
    53d8:	mov	x1, x27
    53dc:	ldr	x0, [x23, #64]
    53e0:	bl	2020 <PyDict_SetItem@plt>
    53e4:	tbnz	w0, #31, 6950 <PySequence_Fast@plt+0x4880>
    53e8:	mov	x26, x27
    53ec:	b	5858 <PySequence_Fast@plt+0x3788>
    53f0:	mov	x1, x2
    53f4:	ldrb	w0, [x19, x2]
    53f8:	cmp	w0, #0x20
    53fc:	b.eq	5418 <PySequence_Fast@plt+0x3348>  // b.none
    5400:	cmp	w0, #0x9
    5404:	b.eq	5418 <PySequence_Fast@plt+0x3348>  // b.none
    5408:	cmp	w0, #0xa
    540c:	b.eq	5418 <PySequence_Fast@plt+0x3348>  // b.none
    5410:	cmp	w0, #0xd
    5414:	b.ne	699c <PySequence_Fast@plt+0x48cc>  // b.any
    5418:	add	x2, x2, #0x1
    541c:	cmp	x22, x2
    5420:	b.lt	5864 <PySequence_Fast@plt+0x3794>  // b.tstop
    5424:	cmp	w21, #0x1
    5428:	b.eq	53f0 <PySequence_Fast@plt+0x3320>  // b.none
    542c:	cmp	w21, #0x2
    5430:	b.eq	5480 <PySequence_Fast@plt+0x33b0>  // b.none
    5434:	mov	x1, x2
    5438:	ldr	w0, [x19, x2, lsl #2]
    543c:	cmp	w0, #0x20
    5440:	b.eq	5418 <PySequence_Fast@plt+0x3348>  // b.none
    5444:	cmp	w0, #0x9
    5448:	b.eq	5418 <PySequence_Fast@plt+0x3348>  // b.none
    544c:	cmp	w0, #0xa
    5450:	b.eq	5418 <PySequence_Fast@plt+0x3348>  // b.none
    5454:	cmp	w0, #0xd
    5458:	b.eq	5418 <PySequence_Fast@plt+0x3348>  // b.none
    545c:	cmp	x22, x2
    5460:	b.lt	5864 <PySequence_Fast@plt+0x3794>  // b.tstop
    5464:	ldr	w0, [x19, x1, lsl #2]
    5468:	cmp	w0, #0x3a
    546c:	b.ne	5864 <PySequence_Fast@plt+0x3794>  // b.any
    5470:	add	x2, x2, #0x1
    5474:	cmp	x22, x2
    5478:	b.ge	54f0 <PySequence_Fast@plt+0x3420>  // b.tcont
    547c:	b	5524 <PySequence_Fast@plt+0x3454>
    5480:	mov	x1, x2
    5484:	ldrh	w0, [x19, x2, lsl #1]
    5488:	cmp	w0, #0x20
    548c:	b.eq	5418 <PySequence_Fast@plt+0x3348>  // b.none
    5490:	cmp	w0, #0x9
    5494:	b.eq	5418 <PySequence_Fast@plt+0x3348>  // b.none
    5498:	cmp	w0, #0xa
    549c:	b.eq	5418 <PySequence_Fast@plt+0x3348>  // b.none
    54a0:	cmp	w0, #0xd
    54a4:	b.eq	5418 <PySequence_Fast@plt+0x3348>  // b.none
    54a8:	cmp	x22, x2
    54ac:	b.lt	5864 <PySequence_Fast@plt+0x3794>  // b.tstop
    54b0:	ldrh	w0, [x19, x1, lsl #1]
    54b4:	cmp	w0, #0x3a
    54b8:	b.eq	5470 <PySequence_Fast@plt+0x33a0>  // b.none
    54bc:	b	5864 <PySequence_Fast@plt+0x3794>
    54c0:	ldrb	w0, [x19, x2]
    54c4:	cmp	w0, #0x20
    54c8:	b.eq	54e4 <PySequence_Fast@plt+0x3414>  // b.none
    54cc:	cmp	w0, #0x9
    54d0:	b.eq	54e4 <PySequence_Fast@plt+0x3414>  // b.none
    54d4:	cmp	w0, #0xa
    54d8:	b.eq	54e4 <PySequence_Fast@plt+0x3414>  // b.none
    54dc:	cmp	w0, #0xd
    54e0:	b.ne	5524 <PySequence_Fast@plt+0x3454>  // b.any
    54e4:	add	x2, x2, #0x1
    54e8:	cmp	x22, x2
    54ec:	b.lt	5524 <PySequence_Fast@plt+0x3454>  // b.tstop
    54f0:	cmp	w21, #0x1
    54f4:	b.eq	54c0 <PySequence_Fast@plt+0x33f0>  // b.none
    54f8:	cmp	w21, #0x2
    54fc:	b.eq	55d4 <PySequence_Fast@plt+0x3504>  // b.none
    5500:	ldr	w0, [x19, x2, lsl #2]
    5504:	cmp	w0, #0x20
    5508:	b.eq	54e4 <PySequence_Fast@plt+0x3414>  // b.none
    550c:	cmp	w0, #0x9
    5510:	b.eq	54e4 <PySequence_Fast@plt+0x3414>  // b.none
    5514:	cmp	w0, #0xa
    5518:	b.eq	54e4 <PySequence_Fast@plt+0x3414>  // b.none
    551c:	cmp	w0, #0xd
    5520:	b.eq	54e4 <PySequence_Fast@plt+0x3414>  // b.none
    5524:	ldr	x3, [sp, #104]
    5528:	mov	x1, x20
    552c:	mov	x0, x23
    5530:	bl	4de4 <PySequence_Fast@plt+0x2d14>
    5534:	mov	x27, x0
    5538:	cbz	x0, 5874 <PySequence_Fast@plt+0x37a4>
    553c:	ldr	x0, [sp, #112]
    5540:	ldr	x1, [sp, #120]
    5544:	cmp	x0, x1
    5548:	b.eq	5648 <PySequence_Fast@plt+0x3578>  // b.none
    554c:	mov	x2, x27
    5550:	mov	x1, x26
    5554:	mov	x0, #0x2                   	// #2
    5558:	bl	2090 <PyTuple_Pack@plt>
    555c:	mov	x28, x0
    5560:	cbz	x0, 6958 <PySequence_Fast@plt+0x4888>
    5564:	cbz	x26, 5578 <PySequence_Fast@plt+0x34a8>
    5568:	ldr	x0, [x26]
    556c:	sub	x0, x0, #0x1
    5570:	str	x0, [x26]
    5574:	cbz	x0, 55fc <PySequence_Fast@plt+0x352c>
    5578:	ldr	x0, [x27]
    557c:	sub	x0, x0, #0x1
    5580:	str	x0, [x27]
    5584:	cbz	x0, 5608 <PySequence_Fast@plt+0x3538>
    5588:	mov	x1, x28
    558c:	mov	x0, x24
    5590:	bl	1eb0 <PyList_Append@plt>
    5594:	cmn	w0, #0x1
    5598:	b.eq	5614 <PySequence_Fast@plt+0x3544>  // b.none
    559c:	ldr	x0, [x28]
    55a0:	sub	x0, x0, #0x1
    55a4:	str	x0, [x28]
    55a8:	cbz	x0, 563c <PySequence_Fast@plt+0x356c>
    55ac:	ldr	x26, [sp, #136]
    55b0:	cmp	x22, x26
    55b4:	b.ge	56cc <PySequence_Fast@plt+0x35fc>  // b.tcont
    55b8:	mov	x2, x26
    55bc:	mov	x1, x20
    55c0:	adrp	x0, 7000 <PyInit__json@@Base+0x3a4>
    55c4:	add	x0, x0, #0x1a8
    55c8:	bl	44c8 <PySequence_Fast@plt+0x23f8>
    55cc:	ldp	x27, x28, [sp, #80]
    55d0:	b	58ac <PySequence_Fast@plt+0x37dc>
    55d4:	ldrh	w0, [x19, x2, lsl #1]
    55d8:	cmp	w0, #0x20
    55dc:	b.eq	54e4 <PySequence_Fast@plt+0x3414>  // b.none
    55e0:	cmp	w0, #0x9
    55e4:	b.eq	54e4 <PySequence_Fast@plt+0x3414>  // b.none
    55e8:	cmp	w0, #0xa
    55ec:	b.eq	54e4 <PySequence_Fast@plt+0x3414>  // b.none
    55f0:	cmp	w0, #0xd
    55f4:	b.eq	54e4 <PySequence_Fast@plt+0x3414>  // b.none
    55f8:	b	5524 <PySequence_Fast@plt+0x3454>
    55fc:	mov	x0, x26
    5600:	bl	1e30 <_Py_Dealloc@plt>
    5604:	b	5578 <PySequence_Fast@plt+0x34a8>
    5608:	mov	x0, x27
    560c:	bl	1e30 <_Py_Dealloc@plt>
    5610:	b	5588 <PySequence_Fast@plt+0x34b8>
    5614:	ldr	x0, [x28]
    5618:	sub	x0, x0, #0x1
    561c:	str	x0, [x28]
    5620:	cbz	x0, 562c <PySequence_Fast@plt+0x355c>
    5624:	ldp	x27, x28, [sp, #80]
    5628:	b	58ac <PySequence_Fast@plt+0x37dc>
    562c:	mov	x0, x28
    5630:	bl	1e30 <_Py_Dealloc@plt>
    5634:	ldp	x27, x28, [sp, #80]
    5638:	b	58ac <PySequence_Fast@plt+0x37dc>
    563c:	mov	x0, x28
    5640:	bl	1e30 <_Py_Dealloc@plt>
    5644:	b	55ac <PySequence_Fast@plt+0x34dc>
    5648:	mov	x2, x27
    564c:	mov	x1, x26
    5650:	mov	x0, x24
    5654:	bl	2020 <PyDict_SetItem@plt>
    5658:	tbnz	w0, #31, 6958 <PySequence_Fast@plt+0x4888>
    565c:	cbz	x26, 5670 <PySequence_Fast@plt+0x35a0>
    5660:	ldr	x0, [x26]
    5664:	sub	x0, x0, #0x1
    5668:	str	x0, [x26]
    566c:	cbz	x0, 568c <PySequence_Fast@plt+0x35bc>
    5670:	ldr	x0, [x27]
    5674:	sub	x0, x0, #0x1
    5678:	str	x0, [x27]
    567c:	cbnz	x0, 55ac <PySequence_Fast@plt+0x34dc>
    5680:	mov	x0, x27
    5684:	bl	1e30 <_Py_Dealloc@plt>
    5688:	b	55ac <PySequence_Fast@plt+0x34dc>
    568c:	mov	x0, x26
    5690:	bl	1e30 <_Py_Dealloc@plt>
    5694:	b	5670 <PySequence_Fast@plt+0x35a0>
    5698:	mov	x1, x26
    569c:	ldrb	w0, [x19, x26]
    56a0:	cmp	w0, #0x20
    56a4:	b.eq	56c0 <PySequence_Fast@plt+0x35f0>  // b.none
    56a8:	cmp	w0, #0x9
    56ac:	b.eq	56c0 <PySequence_Fast@plt+0x35f0>  // b.none
    56b0:	cmp	w0, #0xa
    56b4:	b.eq	56c0 <PySequence_Fast@plt+0x35f0>  // b.none
    56b8:	cmp	w0, #0xd
    56bc:	b.ne	6978 <PySequence_Fast@plt+0x48a8>  // b.any
    56c0:	add	x26, x26, #0x1
    56c4:	cmp	x22, x26
    56c8:	b.lt	55b8 <PySequence_Fast@plt+0x34e8>  // b.tstop
    56cc:	cmp	w21, #0x1
    56d0:	b.eq	5698 <PySequence_Fast@plt+0x35c8>  // b.none
    56d4:	cmp	w21, #0x2
    56d8:	b.eq	5738 <PySequence_Fast@plt+0x3668>  // b.none
    56dc:	mov	x1, x26
    56e0:	ldr	w0, [x19, x26, lsl #2]
    56e4:	cmp	w0, #0x20
    56e8:	b.eq	56c0 <PySequence_Fast@plt+0x35f0>  // b.none
    56ec:	cmp	w0, #0x9
    56f0:	b.eq	56c0 <PySequence_Fast@plt+0x35f0>  // b.none
    56f4:	cmp	w0, #0xa
    56f8:	b.eq	56c0 <PySequence_Fast@plt+0x35f0>  // b.none
    56fc:	cmp	w0, #0xd
    5700:	b.eq	56c0 <PySequence_Fast@plt+0x35f0>  // b.none
    5704:	cmp	x22, x26
    5708:	b.lt	55b8 <PySequence_Fast@plt+0x34e8>  // b.tstop
    570c:	ldr	w0, [x19, x1, lsl #2]
    5710:	cmp	w0, #0x7d
    5714:	b.eq	69c8 <PySequence_Fast@plt+0x48f8>  // b.none
    5718:	ldr	w0, [x19, x26, lsl #2]
    571c:	cmp	w0, #0x2c
    5720:	b.ne	55b8 <PySequence_Fast@plt+0x34e8>  // b.any
    5724:	add	x26, x26, #0x1
    5728:	cmp	x22, x26
    572c:	b.ge	57b4 <PySequence_Fast@plt+0x36e4>  // b.tcont
    5730:	ldp	x27, x28, [sp, #80]
    5734:	b	53a8 <PySequence_Fast@plt+0x32d8>
    5738:	mov	x1, x26
    573c:	ldrh	w0, [x19, x26, lsl #1]
    5740:	cmp	w0, #0x20
    5744:	b.eq	56c0 <PySequence_Fast@plt+0x35f0>  // b.none
    5748:	cmp	w0, #0x9
    574c:	b.eq	56c0 <PySequence_Fast@plt+0x35f0>  // b.none
    5750:	cmp	w0, #0xa
    5754:	b.eq	56c0 <PySequence_Fast@plt+0x35f0>  // b.none
    5758:	cmp	w0, #0xd
    575c:	b.eq	56c0 <PySequence_Fast@plt+0x35f0>  // b.none
    5760:	cmp	x22, x26
    5764:	b.lt	55b8 <PySequence_Fast@plt+0x34e8>  // b.tstop
    5768:	ldrh	w0, [x19, x1, lsl #1]
    576c:	cmp	w0, #0x7d
    5770:	b.eq	69c8 <PySequence_Fast@plt+0x48f8>  // b.none
    5774:	ldrh	w0, [x19, x26, lsl #1]
    5778:	cmp	w0, #0x2c
    577c:	b.eq	5724 <PySequence_Fast@plt+0x3654>  // b.none
    5780:	b	55b8 <PySequence_Fast@plt+0x34e8>
    5784:	ldrb	w0, [x19, x26]
    5788:	cmp	w0, #0x20
    578c:	b.eq	57a8 <PySequence_Fast@plt+0x36d8>  // b.none
    5790:	cmp	w0, #0x9
    5794:	b.eq	57a8 <PySequence_Fast@plt+0x36d8>  // b.none
    5798:	cmp	w0, #0xa
    579c:	b.eq	57a8 <PySequence_Fast@plt+0x36d8>  // b.none
    57a0:	cmp	w0, #0xd
    57a4:	b.ne	57e8 <PySequence_Fast@plt+0x3718>  // b.any
    57a8:	add	x26, x26, #0x1
    57ac:	cmp	x22, x26
    57b0:	b.lt	53a4 <PySequence_Fast@plt+0x32d4>  // b.tstop
    57b4:	cmp	w21, #0x1
    57b8:	b.eq	5784 <PySequence_Fast@plt+0x36b4>  // b.none
    57bc:	cmp	w21, #0x2
    57c0:	b.eq	5908 <PySequence_Fast@plt+0x3838>  // b.none
    57c4:	ldr	w0, [x19, x26, lsl #2]
    57c8:	cmp	w0, #0x20
    57cc:	b.eq	57a8 <PySequence_Fast@plt+0x36d8>  // b.none
    57d0:	cmp	w0, #0x9
    57d4:	b.eq	57a8 <PySequence_Fast@plt+0x36d8>  // b.none
    57d8:	cmp	w0, #0xa
    57dc:	b.eq	57a8 <PySequence_Fast@plt+0x36d8>  // b.none
    57e0:	cmp	w0, #0xd
    57e4:	b.eq	57a8 <PySequence_Fast@plt+0x36d8>  // b.none
    57e8:	cmp	x22, x26
    57ec:	b.lt	5364 <PySequence_Fast@plt+0x3294>  // b.tstop
    57f0:	cmp	w21, #0x1
    57f4:	b.eq	536c <PySequence_Fast@plt+0x329c>  // b.none
    57f8:	cmp	w21, #0x2
    57fc:	b.eq	5380 <PySequence_Fast@plt+0x32b0>  // b.none
    5800:	ldr	w0, [x19, x26, lsl #2]
    5804:	cmp	w0, #0x22
    5808:	b.ne	5394 <PySequence_Fast@plt+0x32c4>  // b.any
    580c:	ldr	x3, [sp, #104]
    5810:	ldrsb	w2, [x23, #16]
    5814:	add	x1, x26, #0x1
    5818:	mov	x0, x20
    581c:	bl	45a8 <PySequence_Fast@plt+0x24d8>
    5820:	mov	x27, x0
    5824:	cbz	x0, 59d4 <PySequence_Fast@plt+0x3904>
    5828:	mov	x1, x0
    582c:	ldr	x0, [x23, #64]
    5830:	bl	20b0 <PyDict_GetItemWithError@plt>
    5834:	mov	x26, x0
    5838:	cbz	x0, 53cc <PySequence_Fast@plt+0x32fc>
    583c:	ldr	x0, [x0]
    5840:	add	x0, x0, #0x1
    5844:	str	x0, [x26]
    5848:	ldr	x0, [x27]
    584c:	sub	x0, x0, #0x1
    5850:	str	x0, [x27]
    5854:	cbz	x0, 53c0 <PySequence_Fast@plt+0x32f0>
    5858:	ldr	x2, [sp, #136]
    585c:	cmp	x22, x2
    5860:	b.ge	5424 <PySequence_Fast@plt+0x3354>  // b.tcont
    5864:	mov	x1, x20
    5868:	adrp	x0, 7000 <PyInit__json@@Base+0x3a4>
    586c:	add	x0, x0, #0x190
    5870:	bl	44c8 <PySequence_Fast@plt+0x23f8>
    5874:	cbz	x26, 6970 <PySequence_Fast@plt+0x48a0>
    5878:	ldr	x0, [x26]
    587c:	sub	x0, x0, #0x1
    5880:	str	x0, [x26]
    5884:	cbnz	x0, 59e4 <PySequence_Fast@plt+0x3914>
    5888:	mov	x27, #0x0                   	// #0
    588c:	mov	x0, x26
    5890:	bl	1e30 <_Py_Dealloc@plt>
    5894:	cbz	x27, 59dc <PySequence_Fast@plt+0x390c>
    5898:	ldr	x0, [x27]
    589c:	sub	x0, x0, #0x1
    58a0:	str	x0, [x27]
    58a4:	cbz	x0, 59c4 <PySequence_Fast@plt+0x38f4>
    58a8:	ldp	x27, x28, [sp, #80]
    58ac:	ldr	x0, [x24]
    58b0:	sub	x0, x0, #0x1
    58b4:	str	x0, [x24]
    58b8:	cbz	x0, 59ec <PySequence_Fast@plt+0x391c>
    58bc:	mov	x24, #0x0                   	// #0
    58c0:	ldp	x21, x22, [sp, #32]
    58c4:	bl	1f20 <PyThreadState_Get@plt>
    58c8:	ldr	w1, [x0, #32]
    58cc:	sub	w1, w1, #0x1
    58d0:	str	w1, [x0, #32]
    58d4:	adrp	x0, 18000 <PyInit__json@@Base+0x113a4>
    58d8:	ldr	x0, [x0, #3984]
    58dc:	ldr	w2, [x0]
    58e0:	sub	w3, w2, #0x32
    58e4:	asr	w0, w2, #2
    58e8:	add	w0, w0, w0, lsl #1
    58ec:	cmp	w2, #0xc9
    58f0:	csel	w0, w0, w3, lt  // lt = tstop
    58f4:	cmp	w1, w0
    58f8:	b.ge	6720 <PySequence_Fast@plt+0x4650>  // b.tcont
    58fc:	bl	1f20 <PyThreadState_Get@plt>
    5900:	strb	wzr, [x0, #36]
    5904:	b	6720 <PySequence_Fast@plt+0x4650>
    5908:	ldrh	w0, [x19, x26, lsl #1]
    590c:	cmp	w0, #0x20
    5910:	b.eq	57a8 <PySequence_Fast@plt+0x36d8>  // b.none
    5914:	cmp	w0, #0x9
    5918:	b.eq	57a8 <PySequence_Fast@plt+0x36d8>  // b.none
    591c:	cmp	w0, #0xa
    5920:	b.eq	57a8 <PySequence_Fast@plt+0x36d8>  // b.none
    5924:	cmp	w0, #0xd
    5928:	b.eq	57a8 <PySequence_Fast@plt+0x36d8>  // b.none
    592c:	b	57e8 <PySequence_Fast@plt+0x3718>
    5930:	mov	x2, #0x0                   	// #0
    5934:	mov	x1, x24
    5938:	ldr	x0, [x23, #32]
    593c:	bl	1f70 <PyObject_CallFunctionObjArgs@plt>
    5940:	mov	x19, x0
    5944:	ldr	x1, [x24]
    5948:	sub	x1, x1, #0x1
    594c:	str	x1, [x24]
    5950:	cbz	x1, 5964 <PySequence_Fast@plt+0x3894>
    5954:	mov	x24, x0
    5958:	ldp	x21, x22, [sp, #32]
    595c:	ldp	x27, x28, [sp, #80]
    5960:	b	58c4 <PySequence_Fast@plt+0x37f4>
    5964:	mov	x0, x24
    5968:	bl	1e30 <_Py_Dealloc@plt>
    596c:	mov	x24, x19
    5970:	ldp	x21, x22, [sp, #32]
    5974:	ldp	x27, x28, [sp, #80]
    5978:	b	58c4 <PySequence_Fast@plt+0x37f4>
    597c:	mov	x2, #0x0                   	// #0
    5980:	mov	x1, x24
    5984:	bl	1f70 <PyObject_CallFunctionObjArgs@plt>
    5988:	mov	x19, x0
    598c:	ldr	x0, [x24]
    5990:	sub	x0, x0, #0x1
    5994:	str	x0, [x24]
    5998:	cbz	x0, 59ac <PySequence_Fast@plt+0x38dc>
    599c:	mov	x24, x19
    59a0:	ldp	x21, x22, [sp, #32]
    59a4:	ldp	x27, x28, [sp, #80]
    59a8:	b	58c4 <PySequence_Fast@plt+0x37f4>
    59ac:	mov	x0, x24
    59b0:	bl	1e30 <_Py_Dealloc@plt>
    59b4:	mov	x24, x19
    59b8:	ldp	x21, x22, [sp, #32]
    59bc:	ldp	x27, x28, [sp, #80]
    59c0:	b	58c4 <PySequence_Fast@plt+0x37f4>
    59c4:	mov	x0, x27
    59c8:	bl	1e30 <_Py_Dealloc@plt>
    59cc:	ldp	x27, x28, [sp, #80]
    59d0:	b	58ac <PySequence_Fast@plt+0x37dc>
    59d4:	ldp	x27, x28, [sp, #80]
    59d8:	b	58ac <PySequence_Fast@plt+0x37dc>
    59dc:	ldp	x27, x28, [sp, #80]
    59e0:	b	58ac <PySequence_Fast@plt+0x37dc>
    59e4:	ldp	x27, x28, [sp, #80]
    59e8:	b	58ac <PySequence_Fast@plt+0x37dc>
    59ec:	mov	x0, x24
    59f0:	bl	1e30 <_Py_Dealloc@plt>
    59f4:	mov	x24, #0x0                   	// #0
    59f8:	ldp	x21, x22, [sp, #32]
    59fc:	b	58c4 <PySequence_Fast@plt+0x37f4>
    5a00:	ldp	x21, x22, [sp, #32]
    5a04:	b	58c4 <PySequence_Fast@plt+0x37f4>
    5a08:	bl	1f20 <PyThreadState_Get@plt>
    5a0c:	ldr	w1, [x0, #32]
    5a10:	add	w1, w1, #0x1
    5a14:	str	w1, [x0, #32]
    5a18:	adrp	x0, 18000 <PyInit__json@@Base+0x113a4>
    5a1c:	ldr	x0, [x0, #3984]
    5a20:	ldr	w0, [x0]
    5a24:	cmp	w1, w0
    5a28:	b.le	5a3c <PySequence_Fast@plt+0x396c>
    5a2c:	adrp	x0, 7000 <PyInit__json@@Base+0x3a4>
    5a30:	add	x0, x0, #0x1c0
    5a34:	bl	1ec0 <_Py_CheckRecursiveCall@plt>
    5a38:	cbnz	w0, 6760 <PySequence_Fast@plt+0x4690>
    5a3c:	add	x26, x26, #0x1
    5a40:	ldrsb	w0, [x20, #32]
    5a44:	tbnz	w0, #31, 5a58 <PySequence_Fast@plt+0x3988>
    5a48:	mov	x0, x20
    5a4c:	bl	1db0 <_PyUnicode_Ready@plt>
    5a50:	cmn	w0, #0x1
    5a54:	b.eq	5df0 <PySequence_Fast@plt+0x3d20>  // b.none
    5a58:	mov	x0, #0x0                   	// #0
    5a5c:	bl	1da0 <PyList_New@plt>
    5a60:	mov	x24, x0
    5a64:	cbz	x0, 688c <PySequence_Fast@plt+0x47bc>
    5a68:	stp	x21, x22, [sp, #32]
    5a6c:	ldrb	w0, [x20, #32]
    5a70:	tbz	w0, #5, 5aa4 <PySequence_Fast@plt+0x39d4>
    5a74:	add	x19, x20, #0x30
    5a78:	add	x1, x20, #0x48
    5a7c:	tst	x0, #0x40
    5a80:	csel	x19, x1, x19, eq  // eq = none
    5a84:	ldrb	w21, [x20, #32]
    5a88:	ubfx	x21, x21, #2, #3
    5a8c:	ldr	x22, [x20, #16]
    5a90:	sub	x22, x22, #0x1
    5a94:	cmp	x26, x22
    5a98:	b.le	5ae0 <PySequence_Fast@plt+0x3a10>
    5a9c:	stp	x27, x28, [sp, #80]
    5aa0:	b	5b7c <PySequence_Fast@plt+0x3aac>
    5aa4:	ldr	x19, [x20, #72]
    5aa8:	b	5a84 <PySequence_Fast@plt+0x39b4>
    5aac:	mov	x1, x26
    5ab0:	ldrb	w0, [x19, x26]
    5ab4:	cmp	w0, #0x20
    5ab8:	b.eq	5ad4 <PySequence_Fast@plt+0x3a04>  // b.none
    5abc:	cmp	w0, #0x9
    5ac0:	b.eq	5ad4 <PySequence_Fast@plt+0x3a04>  // b.none
    5ac4:	cmp	w0, #0xa
    5ac8:	b.eq	5ad4 <PySequence_Fast@plt+0x3a04>  // b.none
    5acc:	cmp	w0, #0xd
    5ad0:	b.ne	6924 <PySequence_Fast@plt+0x4854>  // b.any
    5ad4:	add	x26, x26, #0x1
    5ad8:	cmp	x22, x26
    5adc:	b.lt	5b78 <PySequence_Fast@plt+0x3aa8>  // b.tstop
    5ae0:	cmp	w21, #0x1
    5ae4:	b.eq	5aac <PySequence_Fast@plt+0x39dc>  // b.none
    5ae8:	cmp	w21, #0x2
    5aec:	b.eq	5b34 <PySequence_Fast@plt+0x3a64>  // b.none
    5af0:	mov	x1, x26
    5af4:	ldr	w0, [x19, x26, lsl #2]
    5af8:	cmp	w0, #0x20
    5afc:	b.eq	5ad4 <PySequence_Fast@plt+0x3a04>  // b.none
    5b00:	cmp	w0, #0x9
    5b04:	b.eq	5ad4 <PySequence_Fast@plt+0x3a04>  // b.none
    5b08:	cmp	w0, #0xa
    5b0c:	b.eq	5ad4 <PySequence_Fast@plt+0x3a04>  // b.none
    5b10:	cmp	w0, #0xd
    5b14:	b.eq	5ad4 <PySequence_Fast@plt+0x3a04>  // b.none
    5b18:	cmp	x22, x26
    5b1c:	b.lt	691c <PySequence_Fast@plt+0x484c>  // b.tstop
    5b20:	ldr	w0, [x19, x1, lsl #2]
    5b24:	cmp	w0, #0x5d
    5b28:	b.eq	5da0 <PySequence_Fast@plt+0x3cd0>  // b.none
    5b2c:	stp	x27, x28, [sp, #80]
    5b30:	b	5b7c <PySequence_Fast@plt+0x3aac>
    5b34:	mov	x1, x26
    5b38:	ldrh	w0, [x19, x26, lsl #1]
    5b3c:	cmp	w0, #0x20
    5b40:	b.eq	5ad4 <PySequence_Fast@plt+0x3a04>  // b.none
    5b44:	cmp	w0, #0x9
    5b48:	b.eq	5ad4 <PySequence_Fast@plt+0x3a04>  // b.none
    5b4c:	cmp	w0, #0xa
    5b50:	b.eq	5ad4 <PySequence_Fast@plt+0x3a04>  // b.none
    5b54:	cmp	w0, #0xd
    5b58:	b.eq	5ad4 <PySequence_Fast@plt+0x3a04>  // b.none
    5b5c:	cmp	x22, x26
    5b60:	b.lt	6948 <PySequence_Fast@plt+0x4878>  // b.tstop
    5b64:	ldrh	w0, [x19, x1, lsl #1]
    5b68:	cmp	w0, #0x5d
    5b6c:	b.eq	5da0 <PySequence_Fast@plt+0x3cd0>  // b.none
    5b70:	stp	x27, x28, [sp, #80]
    5b74:	b	5b7c <PySequence_Fast@plt+0x3aac>
    5b78:	stp	x27, x28, [sp, #80]
    5b7c:	add	x27, sp, #0x88
    5b80:	b	5d04 <PySequence_Fast@plt+0x3c34>
    5b84:	mov	x0, x26
    5b88:	bl	1e30 <_Py_Dealloc@plt>
    5b8c:	b	5d44 <PySequence_Fast@plt+0x3c74>
    5b90:	mov	x1, x26
    5b94:	ldrb	w0, [x19, x26]
    5b98:	cmp	w0, #0x20
    5b9c:	b.eq	5bb8 <PySequence_Fast@plt+0x3ae8>  // b.none
    5ba0:	cmp	w0, #0x9
    5ba4:	b.eq	5bb8 <PySequence_Fast@plt+0x3ae8>  // b.none
    5ba8:	cmp	w0, #0xa
    5bac:	b.eq	5bb8 <PySequence_Fast@plt+0x3ae8>  // b.none
    5bb0:	cmp	w0, #0xd
    5bb4:	b.ne	6904 <PySequence_Fast@plt+0x4834>  // b.any
    5bb8:	add	x26, x26, #0x1
    5bbc:	cmp	x22, x26
    5bc0:	b.lt	5d50 <PySequence_Fast@plt+0x3c80>  // b.tstop
    5bc4:	cmp	w21, #0x1
    5bc8:	b.eq	5b90 <PySequence_Fast@plt+0x3ac0>  // b.none
    5bcc:	cmp	w21, #0x2
    5bd0:	b.eq	5c40 <PySequence_Fast@plt+0x3b70>  // b.none
    5bd4:	mov	x1, x26
    5bd8:	ldr	w0, [x19, x26, lsl #2]
    5bdc:	cmp	w0, #0x20
    5be0:	b.eq	5bb8 <PySequence_Fast@plt+0x3ae8>  // b.none
    5be4:	cmp	w0, #0x9
    5be8:	b.eq	5bb8 <PySequence_Fast@plt+0x3ae8>  // b.none
    5bec:	cmp	w0, #0xa
    5bf0:	b.eq	5bb8 <PySequence_Fast@plt+0x3ae8>  // b.none
    5bf4:	cmp	w0, #0xd
    5bf8:	b.eq	5bb8 <PySequence_Fast@plt+0x3ae8>  // b.none
    5bfc:	cmp	x22, x26
    5c00:	b.lt	5d50 <PySequence_Fast@plt+0x3c80>  // b.tstop
    5c04:	ldr	w0, [x19, x1, lsl #2]
    5c08:	cmp	w0, #0x5d
    5c0c:	cset	w0, eq  // eq = none
    5c10:	cbnz	w0, 68d0 <PySequence_Fast@plt+0x4800>
    5c14:	cmp	w21, #0x1
    5c18:	b.eq	5c80 <PySequence_Fast@plt+0x3bb0>  // b.none
    5c1c:	cmp	w21, #0x2
    5c20:	b.eq	5c90 <PySequence_Fast@plt+0x3bc0>  // b.none
    5c24:	ldr	w0, [x19, x26, lsl #2]
    5c28:	cmp	w0, #0x2c
    5c2c:	b.ne	5d50 <PySequence_Fast@plt+0x3c80>  // b.any
    5c30:	add	x26, x26, #0x1
    5c34:	cmp	x22, x26
    5c38:	b.ge	5cd0 <PySequence_Fast@plt+0x3c00>  // b.tcont
    5c3c:	b	5d04 <PySequence_Fast@plt+0x3c34>
    5c40:	mov	x1, x26
    5c44:	ldrh	w0, [x19, x26, lsl #1]
    5c48:	cmp	w0, #0x20
    5c4c:	b.eq	5bb8 <PySequence_Fast@plt+0x3ae8>  // b.none
    5c50:	cmp	w0, #0x9
    5c54:	b.eq	5bb8 <PySequence_Fast@plt+0x3ae8>  // b.none
    5c58:	cmp	w0, #0xa
    5c5c:	b.eq	5bb8 <PySequence_Fast@plt+0x3ae8>  // b.none
    5c60:	cmp	w0, #0xd
    5c64:	b.eq	5bb8 <PySequence_Fast@plt+0x3ae8>  // b.none
    5c68:	cmp	x22, x26
    5c6c:	b.lt	5d50 <PySequence_Fast@plt+0x3c80>  // b.tstop
    5c70:	ldrh	w0, [x19, x1, lsl #1]
    5c74:	cmp	w0, #0x5d
    5c78:	cset	w0, eq  // eq = none
    5c7c:	b	5c10 <PySequence_Fast@plt+0x3b40>
    5c80:	ldrb	w0, [x19, x26]
    5c84:	cmp	w0, #0x2c
    5c88:	b.eq	5c30 <PySequence_Fast@plt+0x3b60>  // b.none
    5c8c:	b	5d50 <PySequence_Fast@plt+0x3c80>
    5c90:	ldrh	w0, [x19, x26, lsl #1]
    5c94:	cmp	w0, #0x2c
    5c98:	b.eq	5c30 <PySequence_Fast@plt+0x3b60>  // b.none
    5c9c:	b	5d50 <PySequence_Fast@plt+0x3c80>
    5ca0:	ldrb	w0, [x19, x26]
    5ca4:	cmp	w0, #0x20
    5ca8:	b.eq	5cc4 <PySequence_Fast@plt+0x3bf4>  // b.none
    5cac:	cmp	w0, #0x9
    5cb0:	b.eq	5cc4 <PySequence_Fast@plt+0x3bf4>  // b.none
    5cb4:	cmp	w0, #0xa
    5cb8:	b.eq	5cc4 <PySequence_Fast@plt+0x3bf4>  // b.none
    5cbc:	cmp	w0, #0xd
    5cc0:	b.ne	5d04 <PySequence_Fast@plt+0x3c34>  // b.any
    5cc4:	add	x26, x26, #0x1
    5cc8:	cmp	x22, x26
    5ccc:	b.lt	5d04 <PySequence_Fast@plt+0x3c34>  // b.tstop
    5cd0:	cmp	w21, #0x1
    5cd4:	b.eq	5ca0 <PySequence_Fast@plt+0x3bd0>  // b.none
    5cd8:	cmp	w21, #0x2
    5cdc:	b.eq	5d68 <PySequence_Fast@plt+0x3c98>  // b.none
    5ce0:	ldr	w0, [x19, x26, lsl #2]
    5ce4:	cmp	w0, #0x20
    5ce8:	b.eq	5cc4 <PySequence_Fast@plt+0x3bf4>  // b.none
    5cec:	cmp	w0, #0x9
    5cf0:	b.eq	5cc4 <PySequence_Fast@plt+0x3bf4>  // b.none
    5cf4:	cmp	w0, #0xa
    5cf8:	b.eq	5cc4 <PySequence_Fast@plt+0x3bf4>  // b.none
    5cfc:	cmp	w0, #0xd
    5d00:	b.eq	5cc4 <PySequence_Fast@plt+0x3bf4>  // b.none
    5d04:	mov	x3, x27
    5d08:	mov	x2, x26
    5d0c:	mov	x1, x20
    5d10:	mov	x0, x23
    5d14:	bl	4de4 <PySequence_Fast@plt+0x2d14>
    5d18:	mov	x26, x0
    5d1c:	cbz	x0, 6870 <PySequence_Fast@plt+0x47a0>
    5d20:	mov	x1, x0
    5d24:	mov	x0, x24
    5d28:	bl	1eb0 <PyList_Append@plt>
    5d2c:	cmn	w0, #0x1
    5d30:	b.eq	6860 <PySequence_Fast@plt+0x4790>  // b.none
    5d34:	ldr	x0, [x26]
    5d38:	sub	x0, x0, #0x1
    5d3c:	str	x0, [x26]
    5d40:	cbz	x0, 5b84 <PySequence_Fast@plt+0x3ab4>
    5d44:	ldr	x26, [sp, #136]
    5d48:	cmp	x22, x26
    5d4c:	b.ge	5bc4 <PySequence_Fast@plt+0x3af4>  // b.tcont
    5d50:	mov	x2, x26
    5d54:	mov	x1, x20
    5d58:	adrp	x0, 7000 <PyInit__json@@Base+0x3a4>
    5d5c:	add	x0, x0, #0x1a8
    5d60:	bl	44c8 <PySequence_Fast@plt+0x23f8>
    5d64:	b	6870 <PySequence_Fast@plt+0x47a0>
    5d68:	ldrh	w0, [x19, x26, lsl #1]
    5d6c:	cmp	w0, #0x20
    5d70:	b.eq	5cc4 <PySequence_Fast@plt+0x3bf4>  // b.none
    5d74:	cmp	w0, #0x9
    5d78:	b.eq	5cc4 <PySequence_Fast@plt+0x3bf4>  // b.none
    5d7c:	cmp	w0, #0xa
    5d80:	b.eq	5cc4 <PySequence_Fast@plt+0x3bf4>  // b.none
    5d84:	cmp	w0, #0xd
    5d88:	b.eq	5cc4 <PySequence_Fast@plt+0x3bf4>  // b.none
    5d8c:	b	5d04 <PySequence_Fast@plt+0x3c34>
    5d90:	ldrb	w0, [x19, x26]
    5d94:	cmp	w0, #0x5d
    5d98:	b.ne	68ec <PySequence_Fast@plt+0x481c>  // b.any
    5d9c:	ldp	x27, x28, [sp, #80]
    5da0:	add	x26, x26, #0x1
    5da4:	str	x26, [x25]
    5da8:	ldp	x21, x22, [sp, #32]
    5dac:	b	688c <PySequence_Fast@plt+0x47bc>
    5db0:	ldrh	w0, [x19, x26, lsl #1]
    5db4:	cmp	w0, #0x5d
    5db8:	b.ne	68ec <PySequence_Fast@plt+0x481c>  // b.any
    5dbc:	ldp	x27, x28, [sp, #80]
    5dc0:	b	5da0 <PySequence_Fast@plt+0x3cd0>
    5dc4:	ldp	x27, x28, [sp, #80]
    5dc8:	b	5da0 <PySequence_Fast@plt+0x3cd0>
    5dcc:	mov	x0, x26
    5dd0:	bl	1e30 <_Py_Dealloc@plt>
    5dd4:	b	6870 <PySequence_Fast@plt+0x47a0>
    5dd8:	mov	x0, x24
    5ddc:	bl	1e30 <_Py_Dealloc@plt>
    5de0:	mov	x24, #0x0                   	// #0
    5de4:	ldp	x21, x22, [sp, #32]
    5de8:	ldp	x27, x28, [sp, #80]
    5dec:	b	688c <PySequence_Fast@plt+0x47bc>
    5df0:	mov	x24, #0x0                   	// #0
    5df4:	b	688c <PySequence_Fast@plt+0x47bc>
    5df8:	add	x0, x2, x26
    5dfc:	ldrb	w0, [x0, #1]
    5e00:	cmp	w0, #0x75
    5e04:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    5e08:	add	x0, x2, x26
    5e0c:	ldrb	w0, [x0, #2]
    5e10:	cmp	w0, #0x6c
    5e14:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    5e18:	add	x2, x2, x26
    5e1c:	ldrb	w0, [x2, #3]
    5e20:	cmp	w0, #0x6c
    5e24:	cset	w0, eq  // eq = none
    5e28:	b	5220 <PySequence_Fast@plt+0x3150>
    5e2c:	add	x0, x26, #0x1
    5e30:	lsl	x0, x0, #1
    5e34:	ldrh	w1, [x2, x0]
    5e38:	cmp	w1, #0x75
    5e3c:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    5e40:	add	x1, x2, x0
    5e44:	ldrh	w1, [x1, #2]
    5e48:	cmp	w1, #0x6c
    5e4c:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    5e50:	add	x0, x2, x0
    5e54:	ldrh	w0, [x0, #4]
    5e58:	cmp	w0, #0x6c
    5e5c:	cset	w0, eq  // eq = none
    5e60:	b	5220 <PySequence_Fast@plt+0x3150>
    5e64:	add	x0, x26, #0x3
    5e68:	cmp	x0, x3
    5e6c:	b.ge	4fd4 <PySequence_Fast@plt+0x2f04>  // b.tcont
    5e70:	cmp	w1, #0x1
    5e74:	b.eq	5ed8 <PySequence_Fast@plt+0x3e08>  // b.none
    5e78:	cmp	w1, #0x2
    5e7c:	b.eq	5f0c <PySequence_Fast@plt+0x3e3c>  // b.none
    5e80:	add	x0, x26, #0x1
    5e84:	lsl	x1, x0, #2
    5e88:	ldr	w0, [x2, x0, lsl #2]
    5e8c:	cmp	w0, #0x72
    5e90:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    5e94:	add	x0, x2, x1
    5e98:	ldr	w0, [x0, #4]
    5e9c:	cmp	w0, #0x75
    5ea0:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    5ea4:	add	x1, x2, x1
    5ea8:	ldr	w0, [x1, #8]
    5eac:	cmp	w0, #0x65
    5eb0:	cset	w0, eq  // eq = none
    5eb4:	cbz	w0, 4fd4 <PySequence_Fast@plt+0x2f04>
    5eb8:	add	x26, x26, #0x4
    5ebc:	str	x26, [x25]
    5ec0:	adrp	x24, 18000 <PyInit__json@@Base+0x113a4>
    5ec4:	ldr	x24, [x24, #4024]
    5ec8:	ldr	x0, [x24]
    5ecc:	add	x0, x0, #0x1
    5ed0:	str	x0, [x24]
    5ed4:	b	6720 <PySequence_Fast@plt+0x4650>
    5ed8:	add	x0, x2, x26
    5edc:	ldrb	w0, [x0, #1]
    5ee0:	cmp	w0, #0x72
    5ee4:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    5ee8:	add	x0, x2, x26
    5eec:	ldrb	w0, [x0, #2]
    5ef0:	cmp	w0, #0x75
    5ef4:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    5ef8:	add	x2, x2, x26
    5efc:	ldrb	w0, [x2, #3]
    5f00:	cmp	w0, #0x65
    5f04:	cset	w0, eq  // eq = none
    5f08:	b	5eb4 <PySequence_Fast@plt+0x3de4>
    5f0c:	add	x0, x26, #0x1
    5f10:	lsl	x0, x0, #1
    5f14:	ldrh	w1, [x2, x0]
    5f18:	cmp	w1, #0x72
    5f1c:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    5f20:	add	x1, x2, x0
    5f24:	ldrh	w1, [x1, #2]
    5f28:	cmp	w1, #0x75
    5f2c:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    5f30:	add	x0, x2, x0
    5f34:	ldrh	w0, [x0, #4]
    5f38:	cmp	w0, #0x65
    5f3c:	cset	w0, eq  // eq = none
    5f40:	b	5eb4 <PySequence_Fast@plt+0x3de4>
    5f44:	add	x0, x26, #0x4
    5f48:	cmp	x0, x3
    5f4c:	b.ge	4fd4 <PySequence_Fast@plt+0x2f04>  // b.tcont
    5f50:	cmp	w1, #0x1
    5f54:	b.eq	5fc8 <PySequence_Fast@plt+0x3ef8>  // b.none
    5f58:	cmp	w1, #0x2
    5f5c:	b.eq	600c <PySequence_Fast@plt+0x3f3c>  // b.none
    5f60:	add	x0, x26, #0x1
    5f64:	lsl	x1, x0, #2
    5f68:	ldr	w0, [x2, x0, lsl #2]
    5f6c:	cmp	w0, #0x61
    5f70:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    5f74:	add	x0, x2, x1
    5f78:	ldr	w0, [x0, #4]
    5f7c:	cmp	w0, #0x6c
    5f80:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    5f84:	add	x0, x2, x1
    5f88:	ldr	w0, [x0, #8]
    5f8c:	cmp	w0, #0x73
    5f90:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    5f94:	add	x1, x2, x1
    5f98:	ldr	w0, [x1, #12]
    5f9c:	cmp	w0, #0x65
    5fa0:	cset	w0, eq  // eq = none
    5fa4:	cbz	w0, 4fd4 <PySequence_Fast@plt+0x2f04>
    5fa8:	add	x26, x26, #0x5
    5fac:	str	x26, [x25]
    5fb0:	adrp	x24, 18000 <PyInit__json@@Base+0x113a4>
    5fb4:	ldr	x24, [x24, #3992]
    5fb8:	ldr	x0, [x24]
    5fbc:	add	x0, x0, #0x1
    5fc0:	str	x0, [x24]
    5fc4:	b	6720 <PySequence_Fast@plt+0x4650>
    5fc8:	add	x0, x2, x26
    5fcc:	ldrb	w0, [x0, #1]
    5fd0:	cmp	w0, #0x61
    5fd4:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    5fd8:	add	x0, x2, x26
    5fdc:	ldrb	w0, [x0, #2]
    5fe0:	cmp	w0, #0x6c
    5fe4:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    5fe8:	add	x0, x2, x26
    5fec:	ldrb	w0, [x0, #3]
    5ff0:	cmp	w0, #0x73
    5ff4:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    5ff8:	add	x2, x2, x26
    5ffc:	ldrb	w0, [x2, #4]
    6000:	cmp	w0, #0x65
    6004:	cset	w0, eq  // eq = none
    6008:	b	5fa4 <PySequence_Fast@plt+0x3ed4>
    600c:	add	x0, x26, #0x1
    6010:	lsl	x0, x0, #1
    6014:	ldrh	w1, [x2, x0]
    6018:	cmp	w1, #0x61
    601c:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    6020:	add	x1, x2, x0
    6024:	ldrh	w1, [x1, #2]
    6028:	cmp	w1, #0x6c
    602c:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    6030:	add	x1, x2, x0
    6034:	ldrh	w1, [x1, #4]
    6038:	cmp	w1, #0x73
    603c:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    6040:	add	x0, x2, x0
    6044:	ldrh	w0, [x0, #6]
    6048:	cmp	w0, #0x65
    604c:	cset	w0, eq  // eq = none
    6050:	b	5fa4 <PySequence_Fast@plt+0x3ed4>
    6054:	add	x0, x2, x26
    6058:	ldrb	w0, [x0, #1]
    605c:	cmp	w0, #0x61
    6060:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    6064:	add	x2, x2, x26
    6068:	ldrb	w0, [x2, #2]
    606c:	cmp	w0, #0x4e
    6070:	cset	w0, eq  // eq = none
    6074:	b	4fd0 <PySequence_Fast@plt+0x2f00>
    6078:	add	x0, x26, #0x1
    607c:	lsl	x0, x0, #1
    6080:	ldrh	w1, [x2, x0]
    6084:	cmp	w1, #0x61
    6088:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    608c:	add	x0, x2, x0
    6090:	ldrh	w0, [x0, #2]
    6094:	cmp	w0, #0x4e
    6098:	cset	w0, eq  // eq = none
    609c:	b	4fd0 <PySequence_Fast@plt+0x2f00>
    60a0:	mov	x3, x25
    60a4:	mov	x2, x26
    60a8:	adrp	x1, 6000 <PySequence_Fast@plt+0x3f30>
    60ac:	add	x1, x1, #0xeb8
    60b0:	mov	x0, x23
    60b4:	bl	4d60 <PySequence_Fast@plt+0x2c90>
    60b8:	mov	x24, x0
    60bc:	b	6720 <PySequence_Fast@plt+0x4650>
    60c0:	add	x0, x26, #0x7
    60c4:	cmp	x0, x3
    60c8:	b.ge	4fd4 <PySequence_Fast@plt+0x2f04>  // b.tcont
    60cc:	cmp	w1, #0x1
    60d0:	b.eq	6174 <PySequence_Fast@plt+0x40a4>  // b.none
    60d4:	cmp	w1, #0x2
    60d8:	b.eq	61e8 <PySequence_Fast@plt+0x4118>  // b.none
    60dc:	add	x0, x26, #0x1
    60e0:	lsl	x1, x0, #2
    60e4:	ldr	w0, [x2, x0, lsl #2]
    60e8:	cmp	w0, #0x6e
    60ec:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    60f0:	add	x0, x2, x1
    60f4:	ldr	w0, [x0, #4]
    60f8:	cmp	w0, #0x66
    60fc:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    6100:	add	x0, x2, x1
    6104:	ldr	w0, [x0, #8]
    6108:	cmp	w0, #0x69
    610c:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    6110:	add	x0, x2, x1
    6114:	ldr	w0, [x0, #12]
    6118:	cmp	w0, #0x6e
    611c:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    6120:	add	x0, x2, x1
    6124:	ldr	w0, [x0, #16]
    6128:	cmp	w0, #0x69
    612c:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    6130:	add	x0, x2, x1
    6134:	ldr	w0, [x0, #20]
    6138:	cmp	w0, #0x74
    613c:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    6140:	add	x1, x2, x1
    6144:	ldr	w0, [x1, #24]
    6148:	cmp	w0, #0x79
    614c:	cset	w0, eq  // eq = none
    6150:	cbz	w0, 4fd4 <PySequence_Fast@plt+0x2f04>
    6154:	mov	x3, x25
    6158:	mov	x2, x26
    615c:	adrp	x1, 6000 <PySequence_Fast@plt+0x3f30>
    6160:	add	x1, x1, #0xe98
    6164:	mov	x0, x23
    6168:	bl	4d60 <PySequence_Fast@plt+0x2c90>
    616c:	mov	x24, x0
    6170:	b	6720 <PySequence_Fast@plt+0x4650>
    6174:	add	x0, x2, x26
    6178:	ldrb	w0, [x0, #1]
    617c:	cmp	w0, #0x6e
    6180:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    6184:	add	x0, x2, x26
    6188:	ldrb	w0, [x0, #2]
    618c:	cmp	w0, #0x66
    6190:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    6194:	add	x0, x2, x26
    6198:	ldrb	w0, [x0, #3]
    619c:	cmp	w0, #0x69
    61a0:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    61a4:	add	x0, x2, x26
    61a8:	ldrb	w0, [x0, #4]
    61ac:	cmp	w0, #0x6e
    61b0:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    61b4:	add	x0, x2, x26
    61b8:	ldrb	w0, [x0, #5]
    61bc:	cmp	w0, #0x69
    61c0:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    61c4:	add	x0, x2, x26
    61c8:	ldrb	w0, [x0, #6]
    61cc:	cmp	w0, #0x74
    61d0:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    61d4:	add	x2, x2, x26
    61d8:	ldrb	w0, [x2, #7]
    61dc:	cmp	w0, #0x79
    61e0:	cset	w0, eq  // eq = none
    61e4:	b	6150 <PySequence_Fast@plt+0x4080>
    61e8:	add	x0, x26, #0x1
    61ec:	lsl	x0, x0, #1
    61f0:	ldrh	w1, [x2, x0]
    61f4:	cmp	w1, #0x6e
    61f8:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    61fc:	add	x1, x2, x0
    6200:	ldrh	w1, [x1, #2]
    6204:	cmp	w1, #0x66
    6208:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    620c:	add	x1, x2, x0
    6210:	ldrh	w1, [x1, #4]
    6214:	cmp	w1, #0x69
    6218:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    621c:	add	x1, x2, x0
    6220:	ldrh	w1, [x1, #6]
    6224:	cmp	w1, #0x6e
    6228:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    622c:	add	x1, x2, x0
    6230:	ldrh	w1, [x1, #8]
    6234:	cmp	w1, #0x69
    6238:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    623c:	add	x1, x2, x0
    6240:	ldrh	w1, [x1, #10]
    6244:	cmp	w1, #0x74
    6248:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    624c:	add	x0, x2, x0
    6250:	ldrh	w0, [x0, #12]
    6254:	cmp	w0, #0x79
    6258:	cset	w0, eq  // eq = none
    625c:	b	6150 <PySequence_Fast@plt+0x4080>
    6260:	add	x0, x2, x26
    6264:	ldrb	w0, [x0, #1]
    6268:	cmp	w0, #0x49
    626c:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    6270:	add	x0, x2, x26
    6274:	ldrb	w0, [x0, #2]
    6278:	cmp	w0, #0x6e
    627c:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    6280:	add	x0, x2, x26
    6284:	ldrb	w0, [x0, #3]
    6288:	cmp	w0, #0x66
    628c:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    6290:	add	x0, x2, x26
    6294:	ldrb	w0, [x0, #4]
    6298:	cmp	w0, #0x69
    629c:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    62a0:	add	x0, x2, x26
    62a4:	ldrb	w0, [x0, #5]
    62a8:	cmp	w0, #0x6e
    62ac:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    62b0:	add	x0, x2, x26
    62b4:	ldrb	w0, [x0, #6]
    62b8:	cmp	w0, #0x69
    62bc:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    62c0:	add	x0, x2, x26
    62c4:	ldrb	w0, [x0, #7]
    62c8:	cmp	w0, #0x74
    62cc:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    62d0:	add	x2, x2, x26
    62d4:	ldrb	w0, [x2, #8]
    62d8:	cmp	w0, #0x79
    62dc:	cset	w0, eq  // eq = none
    62e0:	b	519c <PySequence_Fast@plt+0x30cc>
    62e4:	add	x0, x26, #0x1
    62e8:	lsl	x0, x0, #1
    62ec:	ldrh	w1, [x2, x0]
    62f0:	cmp	w1, #0x49
    62f4:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    62f8:	add	x1, x2, x0
    62fc:	ldrh	w1, [x1, #2]
    6300:	cmp	w1, #0x6e
    6304:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    6308:	add	x1, x2, x0
    630c:	ldrh	w1, [x1, #4]
    6310:	cmp	w1, #0x66
    6314:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    6318:	add	x1, x2, x0
    631c:	ldrh	w1, [x1, #6]
    6320:	cmp	w1, #0x69
    6324:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    6328:	add	x1, x2, x0
    632c:	ldrh	w1, [x1, #8]
    6330:	cmp	w1, #0x6e
    6334:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    6338:	add	x1, x2, x0
    633c:	ldrh	w1, [x1, #10]
    6340:	cmp	w1, #0x69
    6344:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    6348:	add	x1, x2, x0
    634c:	ldrh	w1, [x1, #12]
    6350:	cmp	w1, #0x74
    6354:	b.ne	4fd4 <PySequence_Fast@plt+0x2f04>  // b.any
    6358:	add	x0, x2, x0
    635c:	ldrh	w0, [x0, #14]
    6360:	cmp	w0, #0x79
    6364:	cset	w0, eq  // eq = none
    6368:	b	519c <PySequence_Fast@plt+0x30cc>
    636c:	mov	x0, x20
    6370:	bl	1db0 <_PyUnicode_Ready@plt>
    6374:	cmn	w0, #0x1
    6378:	b.ne	4fd8 <PySequence_Fast@plt+0x2f08>  // b.any
    637c:	mov	x24, #0x0                   	// #0
    6380:	b	6720 <PySequence_Fast@plt+0x4650>
    6384:	ldr	x21, [x20, #72]
    6388:	b	4ff4 <PySequence_Fast@plt+0x2f24>
    638c:	ldrb	w2, [x21, x26]
    6390:	mov	x19, x26
    6394:	cmp	w2, #0x2d
    6398:	b.ne	63a8 <PySequence_Fast@plt+0x42d8>  // b.any
    639c:	add	x19, x26, #0x1
    63a0:	cmp	x19, x3
    63a4:	b.gt	6a28 <PySequence_Fast@plt+0x4958>
    63a8:	ldrb	w2, [x21, x19]
    63ac:	cmp	w2, #0x30
    63b0:	b.hi	63f4 <PySequence_Fast@plt+0x4324>  // b.pmore
    63b4:	cmp	w2, #0x30
    63b8:	cset	w2, eq  // eq = none
    63bc:	b	5040 <PySequence_Fast@plt+0x2f70>
    63c0:	ldrh	w2, [x21, x26, lsl #1]
    63c4:	mov	x19, x26
    63c8:	cmp	w2, #0x2d
    63cc:	b.ne	63dc <PySequence_Fast@plt+0x430c>  // b.any
    63d0:	add	x19, x26, #0x1
    63d4:	cmp	x19, x3
    63d8:	b.gt	6a28 <PySequence_Fast@plt+0x4958>
    63dc:	ldrh	w2, [x21, x19, lsl #1]
    63e0:	cmp	w2, #0x30
    63e4:	b.hi	6400 <PySequence_Fast@plt+0x4330>  // b.pmore
    63e8:	cmp	w2, #0x30
    63ec:	cset	w2, eq  // eq = none
    63f0:	b	5040 <PySequence_Fast@plt+0x2f70>
    63f4:	cmp	w2, #0x39
    63f8:	b.ls	6414 <PySequence_Fast@plt+0x4344>  // b.plast
    63fc:	b	63b4 <PySequence_Fast@plt+0x42e4>
    6400:	cmp	w2, #0x39
    6404:	b.ls	6414 <PySequence_Fast@plt+0x4344>  // b.plast
    6408:	b	63e8 <PySequence_Fast@plt+0x4318>
    640c:	cmp	w2, #0x39
    6410:	b.hi	5038 <PySequence_Fast@plt+0x2f68>  // b.pmore
    6414:	add	x19, x19, #0x1
    6418:	cmp	x3, x19
    641c:	b.ge	6444 <PySequence_Fast@plt+0x4374>  // b.tcont
    6420:	b	5048 <PySequence_Fast@plt+0x2f78>
    6424:	ldrb	w2, [x21, x19]
    6428:	cmp	w2, #0x2f
    642c:	b.ls	6830 <PySequence_Fast@plt+0x4760>  // b.plast
    6430:	cmp	w2, #0x39
    6434:	b.hi	6830 <PySequence_Fast@plt+0x4760>  // b.pmore
    6438:	add	x19, x19, #0x1
    643c:	cmp	x3, x19
    6440:	b.lt	5048 <PySequence_Fast@plt+0x2f78>  // b.tstop
    6444:	cmp	w22, #0x1
    6448:	b.eq	6424 <PySequence_Fast@plt+0x4354>  // b.none
    644c:	cmp	w22, #0x2
    6450:	b.eq	648c <PySequence_Fast@plt+0x43bc>  // b.none
    6454:	ldr	w2, [x21, x19, lsl #2]
    6458:	cmp	w2, #0x2f
    645c:	b.ls	6468 <PySequence_Fast@plt+0x4398>  // b.plast
    6460:	cmp	w2, #0x39
    6464:	b.ls	6438 <PySequence_Fast@plt+0x4368>  // b.plast
    6468:	cmp	x3, x19
    646c:	b.gt	5060 <PySequence_Fast@plt+0x2f90>
    6470:	ldr	x23, [x23, #48]
    6474:	mov	w24, #0x0                   	// #0
    6478:	adrp	x2, 18000 <PyInit__json@@Base+0x113a4>
    647c:	ldr	x2, [x2, #4032]
    6480:	cmp	x23, x2
    6484:	b.ne	50b8 <PySequence_Fast@plt+0x2fe8>  // b.any
    6488:	b	6680 <PySequence_Fast@plt+0x45b0>
    648c:	ldrh	w2, [x21, x19, lsl #1]
    6490:	cmp	w2, #0x2f
    6494:	b.ls	64a0 <PySequence_Fast@plt+0x43d0>  // b.plast
    6498:	cmp	w2, #0x39
    649c:	b.ls	6438 <PySequence_Fast@plt+0x4368>  // b.plast
    64a0:	cmp	x3, x19
    64a4:	b.le	6470 <PySequence_Fast@plt+0x43a0>
    64a8:	lsl	x2, x19, #1
    64ac:	ldrh	w4, [x21, x2]
    64b0:	cmp	w4, #0x2e
    64b4:	b.ne	5070 <PySequence_Fast@plt+0x2fa0>  // b.any
    64b8:	add	x2, x21, x2
    64bc:	ldrh	w2, [x2, #2]
    64c0:	cmp	w2, #0x2f
    64c4:	b.ls	5070 <PySequence_Fast@plt+0x2fa0>  // b.plast
    64c8:	cmp	w2, #0x39
    64cc:	cset	w2, ls  // ls = plast
    64d0:	b	6500 <PySequence_Fast@plt+0x4430>
    64d4:	mov	x0, x26
    64d8:	bl	4470 <PySequence_Fast@plt+0x23a0>
    64dc:	mov	x24, #0x0                   	// #0
    64e0:	ldp	x21, x22, [sp, #32]
    64e4:	b	6720 <PySequence_Fast@plt+0x4650>
    64e8:	add	x2, x21, x2
    64ec:	ldr	w2, [x2, #4]
    64f0:	cmp	w2, #0x2f
    64f4:	b.ls	5070 <PySequence_Fast@plt+0x2fa0>  // b.plast
    64f8:	cmp	w2, #0x39
    64fc:	cset	w2, ls  // ls = plast
    6500:	cbz	w2, 5070 <PySequence_Fast@plt+0x2fa0>
    6504:	add	x19, x19, #0x2
    6508:	cmp	x3, x19
    650c:	b.ge	6540 <PySequence_Fast@plt+0x4470>  // b.tcont
    6510:	cmp	x3, x19
    6514:	b.le	50a0 <PySequence_Fast@plt+0x2fd0>
    6518:	mov	w5, #0x1                   	// #1
    651c:	b	5074 <PySequence_Fast@plt+0x2fa4>
    6520:	ldrb	w2, [x21, x19]
    6524:	cmp	w2, #0x2f
    6528:	b.ls	67ec <PySequence_Fast@plt+0x471c>  // b.plast
    652c:	cmp	w2, #0x39
    6530:	b.hi	67ec <PySequence_Fast@plt+0x471c>  // b.pmore
    6534:	add	x19, x19, #0x1
    6538:	cmp	x3, x19
    653c:	b.lt	6510 <PySequence_Fast@plt+0x4440>  // b.tstop
    6540:	cmp	w22, #0x1
    6544:	b.eq	6520 <PySequence_Fast@plt+0x4450>  // b.none
    6548:	cmp	w22, #0x2
    654c:	b.eq	6574 <PySequence_Fast@plt+0x44a4>  // b.none
    6550:	ldr	w2, [x21, x19, lsl #2]
    6554:	cmp	w2, #0x2f
    6558:	b.ls	6564 <PySequence_Fast@plt+0x4494>  // b.plast
    655c:	cmp	w2, #0x39
    6560:	b.ls	6534 <PySequence_Fast@plt+0x4464>  // b.plast
    6564:	mov	w5, #0x1                   	// #1
    6568:	cmp	x3, x19
    656c:	b.gt	5084 <PySequence_Fast@plt+0x2fb4>
    6570:	b	50a0 <PySequence_Fast@plt+0x2fd0>
    6574:	ldrh	w2, [x21, x19, lsl #1]
    6578:	cmp	w2, #0x2f
    657c:	b.ls	6588 <PySequence_Fast@plt+0x44b8>  // b.plast
    6580:	cmp	w2, #0x39
    6584:	b.ls	6534 <PySequence_Fast@plt+0x4464>  // b.plast
    6588:	mov	w5, #0x1                   	// #1
    658c:	cmp	x3, x19
    6590:	b.le	50a0 <PySequence_Fast@plt+0x2fd0>
    6594:	lsl	x4, x19, #1
    6598:	ldrh	w2, [x21, x4]
    659c:	cmp	w2, #0x65
    65a0:	b.eq	65ac <PySequence_Fast@plt+0x44dc>  // b.none
    65a4:	cmp	w2, #0x45
    65a8:	b.ne	509c <PySequence_Fast@plt+0x2fcc>  // b.any
    65ac:	add	x2, x19, #0x1
    65b0:	cmp	x2, x3
    65b4:	b.ge	67a8 <PySequence_Fast@plt+0x46d8>  // b.tcont
    65b8:	add	x4, x21, x4
    65bc:	ldrh	w4, [x4, #2]
    65c0:	cmp	w4, #0x2d
    65c4:	b.eq	67a4 <PySequence_Fast@plt+0x46d4>  // b.none
    65c8:	cmp	w4, #0x2b
    65cc:	b.ne	65f4 <PySequence_Fast@plt+0x4524>  // b.any
    65d0:	b	67a4 <PySequence_Fast@plt+0x46d4>
    65d4:	ldrb	w4, [x21, x2]
    65d8:	cmp	w4, #0x2f
    65dc:	b.ls	665c <PySequence_Fast@plt+0x458c>  // b.plast
    65e0:	cmp	w4, #0x39
    65e4:	b.hi	665c <PySequence_Fast@plt+0x458c>  // b.pmore
    65e8:	add	x2, x2, #0x1
    65ec:	cmp	x3, x2
    65f0:	b.lt	67b0 <PySequence_Fast@plt+0x46e0>  // b.tstop
    65f4:	cmp	w22, #0x1
    65f8:	b.eq	65d4 <PySequence_Fast@plt+0x4504>  // b.none
    65fc:	cmp	w22, #0x2
    6600:	b.eq	661c <PySequence_Fast@plt+0x454c>  // b.none
    6604:	ldr	w4, [x21, x2, lsl #2]
    6608:	cmp	w4, #0x2f
    660c:	b.ls	67c0 <PySequence_Fast@plt+0x46f0>  // b.plast
    6610:	cmp	w4, #0x39
    6614:	b.ls	65e8 <PySequence_Fast@plt+0x4518>  // b.plast
    6618:	b	67c0 <PySequence_Fast@plt+0x46f0>
    661c:	ldrh	w4, [x21, x2, lsl #1]
    6620:	cmp	w4, #0x2f
    6624:	b.ls	6630 <PySequence_Fast@plt+0x4560>  // b.plast
    6628:	cmp	w4, #0x39
    662c:	b.ls	65e8 <PySequence_Fast@plt+0x4518>  // b.plast
    6630:	lsl	x3, x2, #1
    6634:	add	x4, x21, x3
    6638:	ldurh	w4, [x4, #-2]
    663c:	cmp	w4, #0x2f
    6640:	b.ls	509c <PySequence_Fast@plt+0x2fcc>  // b.plast
    6644:	add	x3, x21, x3
    6648:	ldurh	w3, [x3, #-2]
    664c:	cmp	w3, #0x39
    6650:	b.hi	509c <PySequence_Fast@plt+0x2fcc>  // b.pmore
    6654:	mov	x19, x2
    6658:	b	50a0 <PySequence_Fast@plt+0x2fd0>
    665c:	add	x3, x21, x2
    6660:	ldurb	w3, [x3, #-1]
    6664:	cmp	w3, #0x2f
    6668:	b.ls	509c <PySequence_Fast@plt+0x2fcc>  // b.plast
    666c:	cmp	w3, #0x39
    6670:	b.hi	509c <PySequence_Fast@plt+0x2fcc>  // b.pmore
    6674:	mov	x19, x2
    6678:	b	50a0 <PySequence_Fast@plt+0x2fd0>
    667c:	mov	w24, #0x1                   	// #1
    6680:	sub	x23, x19, x26
    6684:	mov	x1, x23
    6688:	mov	x0, #0x0                   	// #0
    668c:	bl	1e20 <PyBytes_FromStringAndSize@plt>
    6690:	mov	x20, x0
    6694:	cbz	x0, 6774 <PySequence_Fast@plt+0x46a4>
    6698:	add	x0, x0, #0x20
    669c:	cmp	x23, #0x0
    66a0:	b.le	66f8 <PySequence_Fast@plt+0x4628>
    66a4:	add	x5, x21, x26, lsl #2
    66a8:	add	x2, x21, x26, lsl #1
    66ac:	mov	x1, #0x0                   	// #0
    66b0:	add	x26, x21, x26
    66b4:	mov	x4, x0
    66b8:	b	66dc <PySequence_Fast@plt+0x460c>
    66bc:	ldrb	w3, [x26, x1]
    66c0:	b	66cc <PySequence_Fast@plt+0x45fc>
    66c4:	ldr	w3, [x5, x1, lsl #2]
    66c8:	and	w3, w3, #0xff
    66cc:	strb	w3, [x4, x1]
    66d0:	add	x1, x1, #0x1
    66d4:	cmp	x23, x1
    66d8:	b.eq	66f8 <PySequence_Fast@plt+0x4628>  // b.none
    66dc:	cmp	w22, #0x1
    66e0:	b.eq	66bc <PySequence_Fast@plt+0x45ec>  // b.none
    66e4:	cmp	w22, #0x2
    66e8:	b.ne	66c4 <PySequence_Fast@plt+0x45f4>  // b.any
    66ec:	ldrh	w3, [x2, x1, lsl #1]
    66f0:	and	w3, w3, #0xff
    66f4:	b	66cc <PySequence_Fast@plt+0x45fc>
    66f8:	cbz	w24, 6738 <PySequence_Fast@plt+0x4668>
    66fc:	mov	x0, x20
    6700:	bl	20c0 <PyFloat_FromString@plt>
    6704:	mov	x24, x0
    6708:	ldr	x0, [x20]
    670c:	sub	x0, x0, #0x1
    6710:	str	x0, [x20]
    6714:	cbz	x0, 674c <PySequence_Fast@plt+0x467c>
    6718:	str	x19, [x25]
    671c:	ldp	x21, x22, [sp, #32]
    6720:	mov	x0, x24
    6724:	ldp	x19, x20, [sp, #16]
    6728:	ldp	x23, x24, [sp, #48]
    672c:	ldp	x25, x26, [sp, #64]
    6730:	ldp	x29, x30, [sp], #144
    6734:	ret
    6738:	mov	w2, #0xa                   	// #10
    673c:	mov	x1, #0x0                   	// #0
    6740:	bl	2060 <PyLong_FromString@plt>
    6744:	mov	x24, x0
    6748:	b	6708 <PySequence_Fast@plt+0x4638>
    674c:	mov	x0, x20
    6750:	bl	1e30 <_Py_Dealloc@plt>
    6754:	b	6718 <PySequence_Fast@plt+0x4648>
    6758:	mov	x24, #0x0                   	// #0
    675c:	b	6720 <PySequence_Fast@plt+0x4650>
    6760:	mov	x24, #0x0                   	// #0
    6764:	b	6720 <PySequence_Fast@plt+0x4650>
    6768:	mov	x24, x0
    676c:	ldp	x21, x22, [sp, #32]
    6770:	b	6720 <PySequence_Fast@plt+0x4650>
    6774:	mov	x24, x0
    6778:	ldp	x21, x22, [sp, #32]
    677c:	b	6720 <PySequence_Fast@plt+0x4650>
    6780:	add	x2, x19, #0x1
    6784:	cmp	x3, x2
    6788:	b.le	67a8 <PySequence_Fast@plt+0x46d8>
    678c:	add	x4, x21, x4
    6790:	ldr	w4, [x4, #4]
    6794:	cmp	w4, #0x2d
    6798:	b.eq	67a4 <PySequence_Fast@plt+0x46d4>  // b.none
    679c:	cmp	w4, #0x2b
    67a0:	b.ne	65f4 <PySequence_Fast@plt+0x4524>  // b.any
    67a4:	add	x2, x19, #0x2
    67a8:	cmp	x2, x3
    67ac:	b.le	65f4 <PySequence_Fast@plt+0x4524>
    67b0:	cmp	w0, #0x1
    67b4:	b.eq	665c <PySequence_Fast@plt+0x458c>  // b.none
    67b8:	cmp	w0, #0x2
    67bc:	b.eq	6630 <PySequence_Fast@plt+0x4560>  // b.none
    67c0:	lsl	x3, x2, #2
    67c4:	add	x4, x21, x3
    67c8:	ldur	w4, [x4, #-4]
    67cc:	cmp	w4, #0x2f
    67d0:	b.ls	509c <PySequence_Fast@plt+0x2fcc>  // b.plast
    67d4:	add	x3, x21, x3
    67d8:	ldur	w3, [x3, #-4]
    67dc:	cmp	w3, #0x39
    67e0:	b.hi	509c <PySequence_Fast@plt+0x2fcc>  // b.pmore
    67e4:	mov	x19, x2
    67e8:	b	50a0 <PySequence_Fast@plt+0x2fd0>
    67ec:	mov	w5, w0
    67f0:	cmp	x3, x19
    67f4:	b.le	50a0 <PySequence_Fast@plt+0x2fd0>
    67f8:	ldrb	w2, [x21, x19]
    67fc:	cmp	w2, #0x65
    6800:	b.eq	680c <PySequence_Fast@plt+0x473c>  // b.none
    6804:	cmp	w2, #0x45
    6808:	b.ne	509c <PySequence_Fast@plt+0x2fcc>  // b.any
    680c:	add	x2, x19, #0x1
    6810:	cmp	x3, x2
    6814:	b.le	67a8 <PySequence_Fast@plt+0x46d8>
    6818:	ldrb	w4, [x21, x2]
    681c:	cmp	w4, #0x2d
    6820:	b.eq	67a4 <PySequence_Fast@plt+0x46d4>  // b.none
    6824:	cmp	w4, #0x2b
    6828:	b.ne	65f4 <PySequence_Fast@plt+0x4524>  // b.any
    682c:	b	67a4 <PySequence_Fast@plt+0x46d4>
    6830:	cmp	x3, x19
    6834:	b.le	6470 <PySequence_Fast@plt+0x43a0>
    6838:	ldrb	w2, [x21, x19]
    683c:	cmp	w2, #0x2e
    6840:	b.ne	5070 <PySequence_Fast@plt+0x2fa0>  // b.any
    6844:	add	x2, x21, x19
    6848:	ldrb	w2, [x2, #1]
    684c:	cmp	w2, #0x2f
    6850:	b.ls	5070 <PySequence_Fast@plt+0x2fa0>  // b.plast
    6854:	cmp	w2, #0x39
    6858:	cset	w2, ls  // ls = plast
    685c:	b	6500 <PySequence_Fast@plt+0x4430>
    6860:	ldr	x0, [x26]
    6864:	sub	x0, x0, #0x1
    6868:	str	x0, [x26]
    686c:	cbz	x0, 5dcc <PySequence_Fast@plt+0x3cfc>
    6870:	ldr	x0, [x24]
    6874:	sub	x0, x0, #0x1
    6878:	str	x0, [x24]
    687c:	cbz	x0, 5dd8 <PySequence_Fast@plt+0x3d08>
    6880:	mov	x24, #0x0                   	// #0
    6884:	ldp	x21, x22, [sp, #32]
    6888:	ldp	x27, x28, [sp, #80]
    688c:	bl	1f20 <PyThreadState_Get@plt>
    6890:	ldr	w1, [x0, #32]
    6894:	sub	w1, w1, #0x1
    6898:	str	w1, [x0, #32]
    689c:	adrp	x0, 18000 <PyInit__json@@Base+0x113a4>
    68a0:	ldr	x0, [x0, #3984]
    68a4:	ldr	w2, [x0]
    68a8:	sub	w3, w2, #0x32
    68ac:	asr	w0, w2, #2
    68b0:	add	w0, w0, w0, lsl #1
    68b4:	cmp	w2, #0xc9
    68b8:	csel	w0, w0, w3, lt  // lt = tstop
    68bc:	cmp	w1, w0
    68c0:	b.ge	6720 <PySequence_Fast@plt+0x4650>  // b.tcont
    68c4:	bl	1f20 <PyThreadState_Get@plt>
    68c8:	strb	wzr, [x0, #36]
    68cc:	b	6720 <PySequence_Fast@plt+0x4650>
    68d0:	cmp	w21, #0x1
    68d4:	b.eq	5d90 <PySequence_Fast@plt+0x3cc0>  // b.none
    68d8:	cmp	w21, #0x2
    68dc:	b.eq	5db0 <PySequence_Fast@plt+0x3ce0>  // b.none
    68e0:	ldr	w0, [x19, x26, lsl #2]
    68e4:	cmp	w0, #0x5d
    68e8:	b.eq	5dc4 <PySequence_Fast@plt+0x3cf4>  // b.none
    68ec:	mov	x2, x22
    68f0:	mov	x1, x20
    68f4:	adrp	x0, 7000 <PyInit__json@@Base+0x3a4>
    68f8:	add	x0, x0, #0x1f8
    68fc:	bl	44c8 <PySequence_Fast@plt+0x23f8>
    6900:	b	6870 <PySequence_Fast@plt+0x47a0>
    6904:	cmp	x22, x26
    6908:	b.lt	5d50 <PySequence_Fast@plt+0x3c80>  // b.tstop
    690c:	ldrb	w0, [x19, x1]
    6910:	cmp	w0, #0x5d
    6914:	cset	w0, eq  // eq = none
    6918:	b	5c10 <PySequence_Fast@plt+0x3b40>
    691c:	stp	x27, x28, [sp, #80]
    6920:	b	5b7c <PySequence_Fast@plt+0x3aac>
    6924:	cmp	x22, x26
    6928:	b.lt	6940 <PySequence_Fast@plt+0x4870>  // b.tstop
    692c:	ldrb	w0, [x19, x1]
    6930:	cmp	w0, #0x5d
    6934:	b.eq	5da0 <PySequence_Fast@plt+0x3cd0>  // b.none
    6938:	stp	x27, x28, [sp, #80]
    693c:	b	5b7c <PySequence_Fast@plt+0x3aac>
    6940:	stp	x27, x28, [sp, #80]
    6944:	b	5b7c <PySequence_Fast@plt+0x3aac>
    6948:	stp	x27, x28, [sp, #80]
    694c:	b	5b7c <PySequence_Fast@plt+0x3aac>
    6950:	mov	x26, x27
    6954:	b	5878 <PySequence_Fast@plt+0x37a8>
    6958:	cbz	x26, 5898 <PySequence_Fast@plt+0x37c8>
    695c:	ldr	x0, [x26]
    6960:	sub	x0, x0, #0x1
    6964:	str	x0, [x26]
    6968:	cbnz	x0, 5898 <PySequence_Fast@plt+0x37c8>
    696c:	b	588c <PySequence_Fast@plt+0x37bc>
    6970:	ldp	x27, x28, [sp, #80]
    6974:	b	58ac <PySequence_Fast@plt+0x37dc>
    6978:	cmp	x22, x26
    697c:	b.lt	55b8 <PySequence_Fast@plt+0x34e8>  // b.tstop
    6980:	ldrb	w0, [x19, x1]
    6984:	cmp	w0, #0x7d
    6988:	b.eq	69c8 <PySequence_Fast@plt+0x48f8>  // b.none
    698c:	ldrb	w0, [x19, x26]
    6990:	cmp	w0, #0x2c
    6994:	b.eq	5724 <PySequence_Fast@plt+0x3654>  // b.none
    6998:	b	55b8 <PySequence_Fast@plt+0x34e8>
    699c:	cmp	x22, x2
    69a0:	b.lt	5864 <PySequence_Fast@plt+0x3794>  // b.tstop
    69a4:	ldrb	w0, [x19, x1]
    69a8:	cmp	w0, #0x3a
    69ac:	b.eq	5470 <PySequence_Fast@plt+0x33a0>  // b.none
    69b0:	b	5864 <PySequence_Fast@plt+0x3794>
    69b4:	cmp	x22, x26
    69b8:	b.lt	6a04 <PySequence_Fast@plt+0x4934>  // b.tstop
    69bc:	ldrb	w0, [x19, x1]
    69c0:	cmp	w0, #0x7d
    69c4:	b.ne	530c <PySequence_Fast@plt+0x323c>  // b.any
    69c8:	add	x26, x26, #0x1
    69cc:	str	x26, [x25]
    69d0:	adrp	x0, 18000 <PyInit__json@@Base+0x113a4>
    69d4:	ldr	x0, [x0, #4016]
    69d8:	ldr	x1, [sp, #112]
    69dc:	cmp	x1, x0
    69e0:	b.ne	5930 <PySequence_Fast@plt+0x3860>  // b.any
    69e4:	ldr	x0, [x23, #24]
    69e8:	adrp	x1, 18000 <PyInit__json@@Base+0x113a4>
    69ec:	ldr	x1, [x1, #4016]
    69f0:	cmp	x0, x1
    69f4:	b.ne	597c <PySequence_Fast@plt+0x38ac>  // b.any
    69f8:	ldp	x21, x22, [sp, #32]
    69fc:	ldp	x27, x28, [sp, #80]
    6a00:	b	58c4 <PySequence_Fast@plt+0x37f4>
    6a04:	ldp	x27, x28, [sp, #80]
    6a08:	b	53a8 <PySequence_Fast@plt+0x32d8>
    6a0c:	ldp	x27, x28, [sp, #80]
    6a10:	b	53a8 <PySequence_Fast@plt+0x32d8>
    6a14:	ldp	x27, x28, [sp, #80]
    6a18:	b	53a8 <PySequence_Fast@plt+0x32d8>
    6a1c:	add	x19, x26, #0x1
    6a20:	cmp	x19, x3
    6a24:	b.le	502c <PySequence_Fast@plt+0x2f5c>
    6a28:	mov	x0, x26
    6a2c:	bl	4470 <PySequence_Fast@plt+0x23a0>
    6a30:	mov	x24, #0x0                   	// #0
    6a34:	ldp	x21, x22, [sp, #32]
    6a38:	b	6720 <PySequence_Fast@plt+0x4650>
    6a3c:	stp	x29, x30, [sp, #-48]!
    6a40:	mov	x29, sp
    6a44:	stp	x19, x20, [sp, #16]
    6a48:	mov	x20, x0
    6a4c:	cbz	x0, 6b00 <PySequence_Fast@plt+0x4a30>
    6a50:	str	x21, [sp, #32]
    6a54:	mov	x0, x1
    6a58:	bl	1e80 <PyLong_FromSsize_t@plt>
    6a5c:	mov	x21, x0
    6a60:	cbz	x0, 6a90 <PySequence_Fast@plt+0x49c0>
    6a64:	mov	x0, #0x2                   	// #2
    6a68:	bl	1f10 <PyTuple_New@plt>
    6a6c:	mov	x19, x0
    6a70:	cbz	x0, 6abc <PySequence_Fast@plt+0x49ec>
    6a74:	str	x20, [x0, #24]
    6a78:	str	x21, [x0, #32]
    6a7c:	ldr	x21, [sp, #32]
    6a80:	mov	x0, x19
    6a84:	ldp	x19, x20, [sp, #16]
    6a88:	ldp	x29, x30, [sp], #48
    6a8c:	ret
    6a90:	ldr	x0, [x20]
    6a94:	sub	x0, x0, #0x1
    6a98:	str	x0, [x20]
    6a9c:	mov	x19, x21
    6aa0:	cbz	x0, 6aac <PySequence_Fast@plt+0x49dc>
    6aa4:	ldr	x21, [sp, #32]
    6aa8:	b	6a80 <PySequence_Fast@plt+0x49b0>
    6aac:	mov	x0, x20
    6ab0:	bl	1e30 <_Py_Dealloc@plt>
    6ab4:	ldr	x21, [sp, #32]
    6ab8:	b	6a80 <PySequence_Fast@plt+0x49b0>
    6abc:	ldr	x0, [x21]
    6ac0:	sub	x0, x0, #0x1
    6ac4:	str	x0, [x21]
    6ac8:	cbz	x0, 6ae4 <PySequence_Fast@plt+0x4a14>
    6acc:	ldr	x0, [x20]
    6ad0:	sub	x0, x0, #0x1
    6ad4:	str	x0, [x20]
    6ad8:	cbz	x0, 6af0 <PySequence_Fast@plt+0x4a20>
    6adc:	ldr	x21, [sp, #32]
    6ae0:	b	6a80 <PySequence_Fast@plt+0x49b0>
    6ae4:	mov	x0, x21
    6ae8:	bl	1e30 <_Py_Dealloc@plt>
    6aec:	b	6acc <PySequence_Fast@plt+0x49fc>
    6af0:	mov	x0, x20
    6af4:	bl	1e30 <_Py_Dealloc@plt>
    6af8:	ldr	x21, [sp, #32]
    6afc:	b	6a80 <PySequence_Fast@plt+0x49b0>
    6b00:	mov	x19, x0
    6b04:	b	6a80 <PySequence_Fast@plt+0x49b0>
    6b08:	stp	x29, x30, [sp, #-64]!
    6b0c:	mov	x29, sp
    6b10:	stp	x19, x20, [sp, #16]
    6b14:	mov	x20, x0
    6b18:	mov	x0, x1
    6b1c:	mov	x1, x2
    6b20:	mov	x2, #0xffffffffffffffff    	// #-1
    6b24:	str	x2, [sp, #40]
    6b28:	add	x5, sp, #0x30
    6b2c:	add	x4, sp, #0x38
    6b30:	adrp	x3, 19000 <PyInit__json@@Base+0x123a4>
    6b34:	add	x3, x3, #0x1b0
    6b38:	add	x3, x3, #0x78
    6b3c:	adrp	x2, 7000 <PyInit__json@@Base+0x3a4>
    6b40:	add	x2, x2, #0x208
    6b44:	bl	1dc0 <PyArg_ParseTupleAndKeywords@plt>
    6b48:	cbz	w0, 6bc0 <PySequence_Fast@plt+0x4af0>
    6b4c:	ldr	x1, [sp, #56]
    6b50:	ldr	x0, [x1, #8]
    6b54:	ldr	x2, [x0, #168]
    6b58:	tbz	w2, #28, 6b9c <PySequence_Fast@plt+0x4acc>
    6b5c:	add	x3, sp, #0x28
    6b60:	ldr	x2, [sp, #48]
    6b64:	mov	x0, x20
    6b68:	bl	4de4 <PySequence_Fast@plt+0x2d14>
    6b6c:	mov	x19, x0
    6b70:	ldr	x0, [x20, #64]
    6b74:	bl	1ed0 <PyDict_Clear@plt>
    6b78:	cbz	x19, 6b8c <PySequence_Fast@plt+0x4abc>
    6b7c:	ldr	x1, [sp, #40]
    6b80:	mov	x0, x19
    6b84:	bl	6a3c <PySequence_Fast@plt+0x496c>
    6b88:	mov	x19, x0
    6b8c:	mov	x0, x19
    6b90:	ldp	x19, x20, [sp, #16]
    6b94:	ldp	x29, x30, [sp], #64
    6b98:	ret
    6b9c:	ldr	x2, [x0, #24]
    6ba0:	adrp	x1, 6000 <PySequence_Fast@plt+0x3f30>
    6ba4:	add	x1, x1, #0xe08
    6ba8:	adrp	x0, 18000 <PyInit__json@@Base+0x113a4>
    6bac:	ldr	x0, [x0, #3976]
    6bb0:	ldr	x0, [x0]
    6bb4:	bl	2040 <PyErr_Format@plt>
    6bb8:	mov	x19, #0x0                   	// #0
    6bbc:	b	6b8c <PySequence_Fast@plt+0x4abc>
    6bc0:	mov	x19, #0x0                   	// #0
    6bc4:	b	6b8c <PySequence_Fast@plt+0x4abc>
    6bc8:	stp	x29, x30, [sp, #-48]!
    6bcc:	mov	x29, sp
    6bd0:	mov	x0, x1
    6bd4:	mov	x1, #0xffffffffffffffff    	// #-1
    6bd8:	str	x1, [sp, #24]
    6bdc:	mov	w1, #0x1                   	// #1
    6be0:	str	w1, [sp, #20]
    6be4:	add	x4, sp, #0x14
    6be8:	add	x3, sp, #0x20
    6bec:	add	x2, sp, #0x28
    6bf0:	adrp	x1, 7000 <PyInit__json@@Base+0x3a4>
    6bf4:	add	x1, x1, #0x218
    6bf8:	bl	1fa0 <PyArg_ParseTuple@plt>
    6bfc:	cbz	w0, 6c54 <PySequence_Fast@plt+0x4b84>
    6c00:	ldr	x0, [sp, #40]
    6c04:	ldr	x1, [x0, #8]
    6c08:	ldr	x2, [x1, #168]
    6c0c:	tbz	w2, #28, 6c30 <PySequence_Fast@plt+0x4b60>
    6c10:	add	x3, sp, #0x18
    6c14:	ldr	w2, [sp, #20]
    6c18:	ldr	x1, [sp, #32]
    6c1c:	bl	45a8 <PySequence_Fast@plt+0x24d8>
    6c20:	ldr	x1, [sp, #24]
    6c24:	bl	6a3c <PySequence_Fast@plt+0x496c>
    6c28:	ldp	x29, x30, [sp], #48
    6c2c:	ret
    6c30:	ldr	x2, [x1, #24]
    6c34:	adrp	x1, 6000 <PySequence_Fast@plt+0x3f30>
    6c38:	add	x1, x1, #0xe08
    6c3c:	adrp	x0, 18000 <PyInit__json@@Base+0x113a4>
    6c40:	ldr	x0, [x0, #3976]
    6c44:	ldr	x0, [x0]
    6c48:	bl	2040 <PyErr_Format@plt>
    6c4c:	mov	x0, #0x0                   	// #0
    6c50:	b	6c28 <PySequence_Fast@plt+0x4b58>
    6c54:	mov	x0, #0x0                   	// #0
    6c58:	b	6c28 <PySequence_Fast@plt+0x4b58>

0000000000006c5c <PyInit__json@@Base>:
    6c5c:	stp	x29, x30, [sp, #-32]!
    6c60:	mov	x29, sp
    6c64:	str	x19, [sp, #16]
    6c68:	mov	w1, #0x3f5                 	// #1013
    6c6c:	adrp	x0, 19000 <PyInit__json@@Base+0x123a4>
    6c70:	add	x0, x0, #0x1b0
    6c74:	add	x0, x0, #0x90
    6c78:	bl	1f50 <PyModule_Create2@plt>
    6c7c:	mov	x19, x0
    6c80:	cbz	x0, 6d54 <PyInit__json@@Base+0xf8>
    6c84:	adrp	x0, 19000 <PyInit__json@@Base+0x123a4>
    6c88:	add	x0, x0, #0x1b0
    6c8c:	add	x0, x0, #0xf8
    6c90:	bl	1e90 <PyType_Ready@plt>
    6c94:	tbnz	w0, #31, 6d40 <PyInit__json@@Base+0xe4>
    6c98:	adrp	x0, 19000 <PyInit__json@@Base+0x123a4>
    6c9c:	add	x0, x0, #0x1b0
    6ca0:	add	x0, x0, #0x298
    6ca4:	bl	1e90 <PyType_Ready@plt>
    6ca8:	tbnz	w0, #31, 6d40 <PyInit__json@@Base+0xe4>
    6cac:	adrp	x2, 19000 <PyInit__json@@Base+0x123a4>
    6cb0:	add	x2, x2, #0x1b0
    6cb4:	ldr	x0, [x2, #248]
    6cb8:	add	x0, x0, #0x1
    6cbc:	str	x0, [x2, #248]
    6cc0:	add	x2, x2, #0xf8
    6cc4:	adrp	x1, 7000 <PyInit__json@@Base+0x3a4>
    6cc8:	add	x1, x1, #0x228
    6ccc:	mov	x0, x19
    6cd0:	bl	2010 <PyModule_AddObject@plt>
    6cd4:	tbnz	w0, #31, 6d28 <PyInit__json@@Base+0xcc>
    6cd8:	adrp	x2, 19000 <PyInit__json@@Base+0x123a4>
    6cdc:	add	x2, x2, #0x1b0
    6ce0:	ldr	x0, [x2, #664]
    6ce4:	add	x0, x0, #0x1
    6ce8:	str	x0, [x2, #664]
    6cec:	add	x2, x2, #0x298
    6cf0:	adrp	x1, 7000 <PyInit__json@@Base+0x3a4>
    6cf4:	add	x1, x1, #0x238
    6cf8:	mov	x0, x19
    6cfc:	bl	2010 <PyModule_AddObject@plt>
    6d00:	tbz	w0, #31, 6d54 <PyInit__json@@Base+0xf8>
    6d04:	adrp	x1, 19000 <PyInit__json@@Base+0x123a4>
    6d08:	add	x1, x1, #0x1b0
    6d0c:	ldr	x0, [x1, #664]
    6d10:	sub	x0, x0, #0x1
    6d14:	str	x0, [x1, #664]
    6d18:	cbnz	x0, 6d40 <PyInit__json@@Base+0xe4>
    6d1c:	add	x0, x1, #0x298
    6d20:	bl	1e30 <_Py_Dealloc@plt>
    6d24:	b	6d40 <PyInit__json@@Base+0xe4>
    6d28:	adrp	x1, 19000 <PyInit__json@@Base+0x123a4>
    6d2c:	add	x1, x1, #0x1b0
    6d30:	ldr	x0, [x1, #248]
    6d34:	sub	x0, x0, #0x1
    6d38:	str	x0, [x1, #248]
    6d3c:	cbz	x0, 6d64 <PyInit__json@@Base+0x108>
    6d40:	ldr	x0, [x19]
    6d44:	sub	x0, x0, #0x1
    6d48:	str	x0, [x19]
    6d4c:	cbz	x0, 6d70 <PyInit__json@@Base+0x114>
    6d50:	mov	x19, #0x0                   	// #0
    6d54:	mov	x0, x19
    6d58:	ldr	x19, [sp, #16]
    6d5c:	ldp	x29, x30, [sp], #32
    6d60:	ret
    6d64:	add	x0, x1, #0xf8
    6d68:	bl	1e30 <_Py_Dealloc@plt>
    6d6c:	b	6d40 <PyInit__json@@Base+0xe4>
    6d70:	mov	x0, x19
    6d74:	bl	1e30 <_Py_Dealloc@plt>
    6d78:	mov	x19, #0x0                   	// #0
    6d7c:	b	6d54 <PyInit__json@@Base+0xf8>

Disassembly of section .fini:

0000000000006d80 <.fini>:
    6d80:	stp	x29, x30, [sp, #-16]!
    6d84:	mov	x29, sp
    6d88:	ldp	x29, x30, [sp], #16
    6d8c:	ret
