
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_crypt.cpython-38-aarch64-linux-gnu.so_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000007a0 <.init>:
 7a0:	stp	x29, x30, [sp, #-16]!
 7a4:	mov	x29, sp
 7a8:	bl	890 <PyUnicode_AsUTF8AndSize@plt+0x10>
 7ac:	ldp	x29, x30, [sp], #16
 7b0:	ret

Disassembly of section .plt:

00000000000007c0 <strlen@plt-0x20>:
 7c0:	stp	x16, x30, [sp, #-16]!
 7c4:	adrp	x16, 10000 <PyInit__crypt@@Base+0xf69c>
 7c8:	ldr	x17, [x16, #4088]
 7cc:	add	x16, x16, #0xff8
 7d0:	br	x17
 7d4:	nop
 7d8:	nop
 7dc:	nop

00000000000007e0 <strlen@plt>:
 7e0:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 7e4:	ldr	x17, [x16]
 7e8:	add	x16, x16, #0x0
 7ec:	br	x17

00000000000007f0 <__cxa_finalize@plt>:
 7f0:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 7f4:	ldr	x17, [x16, #8]
 7f8:	add	x16, x16, #0x8
 7fc:	br	x17

0000000000000800 <PyErr_SetString@plt>:
 800:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 804:	ldr	x17, [x16, #16]
 808:	add	x16, x16, #0x10
 80c:	br	x17

0000000000000810 <memset@plt>:
 810:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 814:	ldr	x17, [x16, #24]
 818:	add	x16, x16, #0x18
 81c:	br	x17

0000000000000820 <_PyArg_BadArgument@plt>:
 820:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 824:	ldr	x17, [x16, #32]
 828:	add	x16, x16, #0x20
 82c:	br	x17

0000000000000830 <__gmon_start__@plt>:
 830:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 834:	ldr	x17, [x16, #40]
 838:	add	x16, x16, #0x28
 83c:	br	x17

0000000000000840 <_PyArg_CheckPositional@plt>:
 840:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 844:	ldr	x17, [x16, #48]
 848:	add	x16, x16, #0x30
 84c:	br	x17

0000000000000850 <Py_BuildValue@plt>:
 850:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 854:	ldr	x17, [x16, #56]
 858:	add	x16, x16, #0x38
 85c:	br	x17

0000000000000860 <PyModule_Create2@plt>:
 860:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 864:	ldr	x17, [x16, #64]
 868:	add	x16, x16, #0x40
 86c:	br	x17

0000000000000870 <crypt_r@plt>:
 870:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 874:	ldr	x17, [x16, #72]
 878:	add	x16, x16, #0x48
 87c:	br	x17

0000000000000880 <PyUnicode_AsUTF8AndSize@plt>:
 880:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 884:	ldr	x17, [x16, #80]
 888:	add	x16, x16, #0x50
 88c:	br	x17

Disassembly of section .text:

0000000000000890 <PyInit__crypt@@Base-0xd4>:
 890:	adrp	x0, 10000 <PyInit__crypt@@Base+0xf69c>
 894:	ldr	x0, [x0, #4056]
 898:	cbz	x0, 8a0 <PyUnicode_AsUTF8AndSize@plt+0x20>
 89c:	b	830 <__gmon_start__@plt>
 8a0:	ret
 8a4:	nop
 8a8:	adrp	x0, 11000 <PyInit__crypt@@Base+0x1069c>
 8ac:	add	x0, x0, #0x108
 8b0:	adrp	x1, 11000 <PyInit__crypt@@Base+0x1069c>
 8b4:	add	x1, x1, #0x108
 8b8:	cmp	x1, x0
 8bc:	b.eq	8d4 <PyUnicode_AsUTF8AndSize@plt+0x54>  // b.none
 8c0:	adrp	x1, 10000 <PyInit__crypt@@Base+0xf69c>
 8c4:	ldr	x1, [x1, #4032]
 8c8:	cbz	x1, 8d4 <PyUnicode_AsUTF8AndSize@plt+0x54>
 8cc:	mov	x16, x1
 8d0:	br	x16
 8d4:	ret
 8d8:	adrp	x0, 11000 <PyInit__crypt@@Base+0x1069c>
 8dc:	add	x0, x0, #0x108
 8e0:	adrp	x1, 11000 <PyInit__crypt@@Base+0x1069c>
 8e4:	add	x1, x1, #0x108
 8e8:	sub	x1, x1, x0
 8ec:	lsr	x2, x1, #63
 8f0:	add	x1, x2, x1, asr #3
 8f4:	cmp	xzr, x1, asr #1
 8f8:	asr	x1, x1, #1
 8fc:	b.eq	914 <PyUnicode_AsUTF8AndSize@plt+0x94>  // b.none
 900:	adrp	x2, 10000 <PyInit__crypt@@Base+0xf69c>
 904:	ldr	x2, [x2, #4064]
 908:	cbz	x2, 914 <PyUnicode_AsUTF8AndSize@plt+0x94>
 90c:	mov	x16, x2
 910:	br	x16
 914:	ret
 918:	stp	x29, x30, [sp, #-32]!
 91c:	mov	x29, sp
 920:	str	x19, [sp, #16]
 924:	adrp	x19, 11000 <PyInit__crypt@@Base+0x1069c>
 928:	ldrb	w0, [x19, #264]
 92c:	cbnz	w0, 954 <PyUnicode_AsUTF8AndSize@plt+0xd4>
 930:	adrp	x0, 10000 <PyInit__crypt@@Base+0xf69c>
 934:	ldr	x0, [x0, #4040]
 938:	cbz	x0, 948 <PyUnicode_AsUTF8AndSize@plt+0xc8>
 93c:	adrp	x0, 11000 <PyInit__crypt@@Base+0x1069c>
 940:	ldr	x0, [x0, #88]
 944:	bl	7f0 <__cxa_finalize@plt>
 948:	bl	8a8 <PyUnicode_AsUTF8AndSize@plt+0x28>
 94c:	mov	w0, #0x1                   	// #1
 950:	strb	w0, [x19, #264]
 954:	ldr	x19, [sp, #16]
 958:	ldp	x29, x30, [sp], #32
 95c:	ret
 960:	b	8d8 <PyUnicode_AsUTF8AndSize@plt+0x58>

0000000000000964 <PyInit__crypt@@Base>:
 964:	stp	x29, x30, [sp, #-16]!
 968:	mov	x29, sp
 96c:	adrp	x0, 11000 <PyInit__crypt@@Base+0x1069c>
 970:	add	x0, x0, #0x60
 974:	mov	w1, #0x3f5                 	// #1013
 978:	bl	860 <PyModule_Create2@plt>
 97c:	ldp	x29, x30, [sp], #16
 980:	ret
 984:	sub	sp, sp, #0x30
 988:	stp	x29, x30, [sp, #16]
 98c:	stp	x20, x19, [sp, #32]
 990:	add	x29, sp, #0x10
 994:	cmp	x2, #0x2
 998:	mov	x19, x1
 99c:	b.eq	9c0 <PyInit__crypt@@Base+0x5c>  // b.none
 9a0:	mov	x8, x2
 9a4:	adrp	x0, 0 <strlen@plt-0x7e0>
 9a8:	add	x0, x0, #0xb15
 9ac:	mov	w2, #0x2                   	// #2
 9b0:	mov	w3, #0x2                   	// #2
 9b4:	mov	x1, x8
 9b8:	bl	840 <_PyArg_CheckPositional@plt>
 9bc:	cbz	w0, a84 <PyInit__crypt@@Base+0x120>
 9c0:	ldr	x3, [x19]
 9c4:	ldr	x8, [x3, #8]
 9c8:	ldrb	w8, [x8, #171]
 9cc:	tbnz	w8, #4, 9f0 <PyInit__crypt@@Base+0x8c>
 9d0:	adrp	x0, 0 <strlen@plt-0x7e0>
 9d4:	adrp	x1, 0 <strlen@plt-0x7e0>
 9d8:	add	x0, x0, #0xb15
 9dc:	add	x1, x1, #0xb1b
 9e0:	adrp	x2, 0 <strlen@plt-0x7e0>
 9e4:	add	x2, x2, #0xb26
 9e8:	bl	820 <_PyArg_BadArgument@plt>
 9ec:	b	a84 <PyInit__crypt@@Base+0x120>
 9f0:	add	x1, sp, #0x8
 9f4:	mov	x0, x3
 9f8:	bl	880 <PyUnicode_AsUTF8AndSize@plt>
 9fc:	cbz	x0, a88 <PyInit__crypt@@Base+0x124>
 a00:	mov	x20, x0
 a04:	bl	7e0 <strlen@plt>
 a08:	ldr	x8, [sp, #8]
 a0c:	cmp	x0, x8
 a10:	b.ne	a6c <PyInit__crypt@@Base+0x108>  // b.any
 a14:	ldr	x3, [x19, #8]
 a18:	ldr	x8, [x3, #8]
 a1c:	ldrb	w8, [x8, #171]
 a20:	tbnz	w8, #4, a38 <PyInit__crypt@@Base+0xd4>
 a24:	adrp	x0, 0 <strlen@plt-0x7e0>
 a28:	adrp	x1, 0 <strlen@plt-0x7e0>
 a2c:	add	x0, x0, #0xb15
 a30:	add	x1, x1, #0xb42
 a34:	b	9e0 <PyInit__crypt@@Base+0x7c>
 a38:	mov	x1, sp
 a3c:	mov	x0, x3
 a40:	bl	880 <PyUnicode_AsUTF8AndSize@plt>
 a44:	cbz	x0, a88 <PyInit__crypt@@Base+0x124>
 a48:	mov	x19, x0
 a4c:	bl	7e0 <strlen@plt>
 a50:	ldr	x8, [sp]
 a54:	cmp	x0, x8
 a58:	b.ne	a6c <PyInit__crypt@@Base+0x108>  // b.any
 a5c:	mov	x0, x20
 a60:	mov	x1, x19
 a64:	bl	a98 <PyInit__crypt@@Base+0x134>
 a68:	b	a88 <PyInit__crypt@@Base+0x124>
 a6c:	adrp	x8, 10000 <PyInit__crypt@@Base+0xf69c>
 a70:	ldr	x8, [x8, #4048]
 a74:	adrp	x1, 0 <strlen@plt-0x7e0>
 a78:	add	x1, x1, #0xb2a
 a7c:	ldr	x0, [x8]
 a80:	bl	800 <PyErr_SetString@plt>
 a84:	mov	x0, xzr
 a88:	ldp	x20, x19, [sp, #32]
 a8c:	ldp	x29, x30, [sp, #16]
 a90:	add	sp, sp, #0x30
 a94:	ret
 a98:	stp	x29, x30, [sp, #-48]!
 a9c:	str	x28, [sp, #16]
 aa0:	stp	x20, x19, [sp, #32]
 aa4:	mov	x29, sp
 aa8:	sub	sp, sp, #0x20, lsl #12
 aac:	sub	sp, sp, #0xa0
 ab0:	mov	w2, #0xa0                  	// #160
 ab4:	mov	x19, x1
 ab8:	mov	x20, x0
 abc:	mov	x0, sp
 ac0:	movk	w2, #0x2, lsl #16
 ac4:	mov	w1, wzr
 ac8:	bl	810 <memset@plt>
 acc:	mov	x2, sp
 ad0:	mov	x0, x20
 ad4:	mov	x1, x19
 ad8:	bl	870 <crypt_r@plt>
 adc:	mov	x1, x0
 ae0:	adrp	x0, 0 <strlen@plt-0x7e0>
 ae4:	add	x0, x0, #0xb4d
 ae8:	bl	850 <Py_BuildValue@plt>
 aec:	add	sp, sp, #0x20, lsl #12
 af0:	add	sp, sp, #0xa0
 af4:	ldp	x20, x19, [sp, #32]
 af8:	ldr	x28, [sp, #16]
 afc:	ldp	x29, x30, [sp], #48
 b00:	ret

Disassembly of section .fini:

0000000000000b04 <.fini>:
 b04:	stp	x29, x30, [sp, #-16]!
 b08:	mov	x29, sp
 b0c:	ldp	x29, x30, [sp], #16
 b10:	ret
