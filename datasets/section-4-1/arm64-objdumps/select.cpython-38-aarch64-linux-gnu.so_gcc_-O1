
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//select.cpython-38-aarch64-linux-gnu.so_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000001e98 <.init>:
    1e98:	stp	x29, x30, [sp, #-16]!
    1e9c:	mov	x29, sp
    1ea0:	bl	2240 <PySequence_Fast@plt+0x10>
    1ea4:	ldp	x29, x30, [sp], #16
    1ea8:	ret

Disassembly of section .plt:

0000000000001eb0 <PyList_New@plt-0x20>:
    1eb0:	stp	x16, x30, [sp, #-16]!
    1eb4:	adrp	x16, 16000 <PyInit_select@@Base+0x11ef8>
    1eb8:	ldr	x17, [x16, #4088]
    1ebc:	add	x16, x16, #0xff8
    1ec0:	br	x17
    1ec4:	nop
    1ec8:	nop
    1ecc:	nop

0000000000001ed0 <PyList_New@plt>:
    1ed0:	adrp	x16, 17000 <PyList_New>
    1ed4:	ldr	x17, [x16]
    1ed8:	add	x16, x16, #0x0
    1edc:	br	x17

0000000000001ee0 <PyModule_AddIntConstant@plt>:
    1ee0:	adrp	x16, 17000 <PyList_New>
    1ee4:	ldr	x17, [x16, #8]
    1ee8:	add	x16, x16, #0x8
    1eec:	br	x17

0000000000001ef0 <_PyTime_FromMillisecondsObject@plt>:
    1ef0:	adrp	x16, 17000 <PyList_New>
    1ef4:	ldr	x17, [x16, #16]
    1ef8:	add	x16, x16, #0x10
    1efc:	br	x17

0000000000001f00 <PyEval_RestoreThread@plt>:
    1f00:	adrp	x16, 17000 <PyList_New>
    1f04:	ldr	x17, [x16, #24]
    1f08:	add	x16, x16, #0x18
    1f0c:	br	x17

0000000000001f10 <PyMem_Free@plt>:
    1f10:	adrp	x16, 17000 <PyList_New>
    1f14:	ldr	x17, [x16, #32]
    1f18:	add	x16, x16, #0x20
    1f1c:	br	x17

0000000000001f20 <PyErr_SetFromErrno@plt>:
    1f20:	adrp	x16, 17000 <PyList_New>
    1f24:	ldr	x17, [x16, #40]
    1f28:	add	x16, x16, #0x28
    1f2c:	br	x17

0000000000001f30 <__cxa_finalize@plt>:
    1f30:	adrp	x16, 17000 <PyList_New>
    1f34:	ldr	x17, [x16, #48]
    1f38:	add	x16, x16, #0x30
    1f3c:	br	x17

0000000000001f40 <_Py_Dealloc@plt>:
    1f40:	adrp	x16, 17000 <PyList_New>
    1f44:	ldr	x17, [x16, #56]
    1f48:	add	x16, x16, #0x38
    1f4c:	br	x17

0000000000001f50 <PyErr_NoMemory@plt>:
    1f50:	adrp	x16, 17000 <PyList_New>
    1f54:	ldr	x17, [x16, #64]
    1f58:	add	x16, x16, #0x40
    1f5c:	br	x17

0000000000001f60 <_PyArg_UnpackKeywords@plt>:
    1f60:	adrp	x16, 17000 <PyList_New>
    1f64:	ldr	x17, [x16, #72]
    1f68:	add	x16, x16, #0x48
    1f6c:	br	x17

0000000000001f70 <PyErr_SetString@plt>:
    1f70:	adrp	x16, 17000 <PyList_New>
    1f74:	ldr	x17, [x16, #80]
    1f78:	add	x16, x16, #0x50
    1f7c:	br	x17

0000000000001f80 <poll@plt>:
    1f80:	adrp	x16, 17000 <PyList_New>
    1f84:	ldr	x17, [x16, #88]
    1f88:	add	x16, x16, #0x58
    1f8c:	br	x17

0000000000001f90 <PyMem_Realloc@plt>:
    1f90:	adrp	x16, 17000 <PyList_New>
    1f94:	ldr	x17, [x16, #96]
    1f98:	add	x16, x16, #0x60
    1f9c:	br	x17

0000000000001fa0 <PyErr_ExceptionMatches@plt>:
    1fa0:	adrp	x16, 17000 <PyList_New>
    1fa4:	ldr	x17, [x16, #104]
    1fa8:	add	x16, x16, #0x68
    1fac:	br	x17

0000000000001fb0 <_PyTime_FromSecondsObject@plt>:
    1fb0:	adrp	x16, 17000 <PyList_New>
    1fb4:	ldr	x17, [x16, #112]
    1fb8:	add	x16, x16, #0x70
    1fbc:	br	x17

0000000000001fc0 <PyObject_Free@plt>:
    1fc0:	adrp	x16, 17000 <PyList_New>
    1fc4:	ldr	x17, [x16, #120]
    1fc8:	add	x16, x16, #0x78
    1fcc:	br	x17

0000000000001fd0 <_PyTime_AsMilliseconds@plt>:
    1fd0:	adrp	x16, 17000 <PyList_New>
    1fd4:	ldr	x17, [x16, #128]
    1fd8:	add	x16, x16, #0x80
    1fdc:	br	x17

0000000000001fe0 <PyType_Ready@plt>:
    1fe0:	adrp	x16, 17000 <PyList_New>
    1fe4:	ldr	x17, [x16, #136]
    1fe8:	add	x16, x16, #0x88
    1fec:	br	x17

0000000000001ff0 <PyLong_FromLong@plt>:
    1ff0:	adrp	x16, 17000 <PyList_New>
    1ff4:	ldr	x17, [x16, #144]
    1ff8:	add	x16, x16, #0x90
    1ffc:	br	x17

0000000000002000 <epoll_wait@plt>:
    2000:	adrp	x16, 17000 <PyList_New>
    2004:	ldr	x17, [x16, #152]
    2008:	add	x16, x16, #0x98
    200c:	br	x17

0000000000002010 <close@plt>:
    2010:	adrp	x16, 17000 <PyList_New>
    2014:	ldr	x17, [x16, #160]
    2018:	add	x16, x16, #0xa0
    201c:	br	x17

0000000000002020 <PyLong_AsUnsignedLongMask@plt>:
    2020:	adrp	x16, 17000 <PyList_New>
    2024:	ldr	x17, [x16, #168]
    2028:	add	x16, x16, #0xa8
    202c:	br	x17

0000000000002030 <__gmon_start__@plt>:
    2030:	adrp	x16, 17000 <PyList_New>
    2034:	ldr	x17, [x16, #176]
    2038:	add	x16, x16, #0xb0
    203c:	br	x17

0000000000002040 <PyTuple_New@plt>:
    2040:	adrp	x16, 17000 <PyList_New>
    2044:	ldr	x17, [x16, #184]
    2048:	add	x16, x16, #0xb8
    204c:	br	x17

0000000000002050 <_PyArg_CheckPositional@plt>:
    2050:	adrp	x16, 17000 <PyList_New>
    2054:	ldr	x17, [x16, #192]
    2058:	add	x16, x16, #0xc0
    205c:	br	x17

0000000000002060 <PyDict_DelItem@plt>:
    2060:	adrp	x16, 17000 <PyList_New>
    2064:	ldr	x17, [x16, #200]
    2068:	add	x16, x16, #0xc8
    206c:	br	x17

0000000000002070 <Py_BuildValue@plt>:
    2070:	adrp	x16, 17000 <PyList_New>
    2074:	ldr	x17, [x16, #208]
    2078:	add	x16, x16, #0xd0
    207c:	br	x17

0000000000002080 <PyErr_Occurred@plt>:
    2080:	adrp	x16, 17000 <PyList_New>
    2084:	ldr	x17, [x16, #216]
    2088:	add	x16, x16, #0xd8
    208c:	br	x17

0000000000002090 <PyModule_Create2@plt>:
    2090:	adrp	x16, 17000 <PyList_New>
    2094:	ldr	x17, [x16, #224]
    2098:	add	x16, x16, #0xe0
    209c:	br	x17

00000000000020a0 <PyLong_AsLong@plt>:
    20a0:	adrp	x16, 17000 <PyList_New>
    20a4:	ldr	x17, [x16, #232]
    20a8:	add	x16, x16, #0xe8
    20ac:	br	x17

00000000000020b0 <_PyTime_AsTimeval_noraise@plt>:
    20b0:	adrp	x16, 17000 <PyList_New>
    20b4:	ldr	x17, [x16, #240]
    20b8:	add	x16, x16, #0xf0
    20bc:	br	x17

00000000000020c0 <PyList_SetItem@plt>:
    20c0:	adrp	x16, 17000 <PyList_New>
    20c4:	ldr	x17, [x16, #248]
    20c8:	add	x16, x16, #0xf8
    20cc:	br	x17

00000000000020d0 <epoll_create1@plt>:
    20d0:	adrp	x16, 17000 <PyList_New>
    20d4:	ldr	x17, [x16, #256]
    20d8:	add	x16, x16, #0x100
    20dc:	br	x17

00000000000020e0 <_PyObject_CallMethodId@plt>:
    20e0:	adrp	x16, 17000 <PyList_New>
    20e4:	ldr	x17, [x16, #264]
    20e8:	add	x16, x16, #0x108
    20ec:	br	x17

00000000000020f0 <_PyLong_UnsignedShort_Converter@plt>:
    20f0:	adrp	x16, 17000 <PyList_New>
    20f4:	ldr	x17, [x16, #272]
    20f8:	add	x16, x16, #0x110
    20fc:	br	x17

0000000000002100 <PyDict_New@plt>:
    2100:	adrp	x16, 17000 <PyList_New>
    2104:	ldr	x17, [x16, #280]
    2108:	add	x16, x16, #0x118
    210c:	br	x17

0000000000002110 <PyDict_Next@plt>:
    2110:	adrp	x16, 17000 <PyList_New>
    2114:	ldr	x17, [x16, #288]
    2118:	add	x16, x16, #0x120
    211c:	br	x17

0000000000002120 <epoll_ctl@plt>:
    2120:	adrp	x16, 17000 <PyList_New>
    2124:	ldr	x17, [x16, #296]
    2128:	add	x16, x16, #0x128
    212c:	br	x17

0000000000002130 <_PyObject_New@plt>:
    2130:	adrp	x16, 17000 <PyList_New>
    2134:	ldr	x17, [x16, #304]
    2138:	add	x16, x16, #0x130
    213c:	br	x17

0000000000002140 <PyEval_SaveThread@plt>:
    2140:	adrp	x16, 17000 <PyList_New>
    2144:	ldr	x17, [x16, #312]
    2148:	add	x16, x16, #0x138
    214c:	br	x17

0000000000002150 <PyModule_AddObject@plt>:
    2150:	adrp	x16, 17000 <PyList_New>
    2154:	ldr	x17, [x16, #320]
    2158:	add	x16, x16, #0x140
    215c:	br	x17

0000000000002160 <PyDict_SetItem@plt>:
    2160:	adrp	x16, 17000 <PyList_New>
    2164:	ldr	x17, [x16, #328]
    2168:	add	x16, x16, #0x148
    216c:	br	x17

0000000000002170 <select@plt>:
    2170:	adrp	x16, 17000 <PyList_New>
    2174:	ldr	x17, [x16, #336]
    2178:	add	x16, x16, #0x150
    217c:	br	x17

0000000000002180 <PyObject_AsFileDescriptor@plt>:
    2180:	adrp	x16, 17000 <PyList_New>
    2184:	ldr	x17, [x16, #344]
    2188:	add	x16, x16, #0x158
    218c:	br	x17

0000000000002190 <_PyTime_AsTimeval@plt>:
    2190:	adrp	x16, 17000 <PyList_New>
    2194:	ldr	x17, [x16, #352]
    2198:	add	x16, x16, #0x160
    219c:	br	x17

00000000000021a0 <PyErr_CheckSignals@plt>:
    21a0:	adrp	x16, 17000 <PyList_New>
    21a4:	ldr	x17, [x16, #360]
    21a8:	add	x16, x16, #0x168
    21ac:	br	x17

00000000000021b0 <PyType_IsSubtype@plt>:
    21b0:	adrp	x16, 17000 <PyList_New>
    21b4:	ldr	x17, [x16, #368]
    21b8:	add	x16, x16, #0x170
    21bc:	br	x17

00000000000021c0 <PyErr_Format@plt>:
    21c0:	adrp	x16, 17000 <PyList_New>
    21c4:	ldr	x17, [x16, #376]
    21c8:	add	x16, x16, #0x178
    21cc:	br	x17

00000000000021d0 <__errno_location@plt>:
    21d0:	adrp	x16, 17000 <PyList_New>
    21d4:	ldr	x17, [x16, #384]
    21d8:	add	x16, x16, #0x180
    21dc:	br	x17

00000000000021e0 <_PyLong_AsInt@plt>:
    21e0:	adrp	x16, 17000 <PyList_New>
    21e4:	ldr	x17, [x16, #392]
    21e8:	add	x16, x16, #0x188
    21ec:	br	x17

00000000000021f0 <PyMem_Malloc@plt>:
    21f0:	adrp	x16, 17000 <PyList_New>
    21f4:	ldr	x17, [x16, #400]
    21f8:	add	x16, x16, #0x190
    21fc:	br	x17

0000000000002200 <_PyTime_GetMonotonicClock@plt>:
    2200:	adrp	x16, 17000 <PyList_New>
    2204:	ldr	x17, [x16, #408]
    2208:	add	x16, x16, #0x198
    220c:	br	x17

0000000000002210 <PyTuple_Pack@plt>:
    2210:	adrp	x16, 17000 <PyList_New>
    2214:	ldr	x17, [x16, #416]
    2218:	add	x16, x16, #0x1a0
    221c:	br	x17

0000000000002220 <PyDict_GetItemWithError@plt>:
    2220:	adrp	x16, 17000 <PyList_New>
    2224:	ldr	x17, [x16, #424]
    2228:	add	x16, x16, #0x1a8
    222c:	br	x17

0000000000002230 <PySequence_Fast@plt>:
    2230:	adrp	x16, 17000 <PyList_New>
    2234:	ldr	x17, [x16, #432]
    2238:	add	x16, x16, #0x1b0
    223c:	br	x17

Disassembly of section .text:

0000000000002240 <PyInit_select@@Base-0x1ec8>:
    2240:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    2244:	ldr	x0, [x0, #4024]
    2248:	cbz	x0, 2250 <PySequence_Fast@plt+0x20>
    224c:	b	2030 <__gmon_start__@plt>
    2250:	ret
    2254:	adrp	x0, 17000 <PyInit_select@@Base+0x12ef8>
    2258:	add	x0, x0, #0x950
    225c:	adrp	x1, 17000 <PyInit_select@@Base+0x12ef8>
    2260:	add	x1, x1, #0x950
    2264:	cmp	x0, x1
    2268:	b.eq	2294 <PySequence_Fast@plt+0x64>  // b.none
    226c:	adrp	x1, 16000 <PyInit_select@@Base+0x11ef8>
    2270:	ldr	x1, [x1, #3960]
    2274:	cbz	x1, 2294 <PySequence_Fast@plt+0x64>
    2278:	stp	x29, x30, [sp, #-16]!
    227c:	mov	x29, sp
    2280:	adrp	x0, 17000 <PyInit_select@@Base+0x12ef8>
    2284:	add	x0, x0, #0x950
    2288:	blr	x1
    228c:	ldp	x29, x30, [sp], #16
    2290:	ret
    2294:	ret
    2298:	adrp	x0, 17000 <PyInit_select@@Base+0x12ef8>
    229c:	add	x0, x0, #0x950
    22a0:	adrp	x1, 17000 <PyInit_select@@Base+0x12ef8>
    22a4:	add	x1, x1, #0x950
    22a8:	sub	x0, x0, x1
    22ac:	lsr	x1, x0, #63
    22b0:	add	x0, x1, x0, asr #3
    22b4:	cmp	xzr, x0, asr #1
    22b8:	b.eq	22e8 <PySequence_Fast@plt+0xb8>  // b.none
    22bc:	asr	x1, x0, #1
    22c0:	adrp	x2, 16000 <PyInit_select@@Base+0x11ef8>
    22c4:	ldr	x2, [x2, #4064]
    22c8:	cbz	x2, 22e8 <PySequence_Fast@plt+0xb8>
    22cc:	stp	x29, x30, [sp, #-16]!
    22d0:	mov	x29, sp
    22d4:	adrp	x0, 17000 <PyInit_select@@Base+0x12ef8>
    22d8:	add	x0, x0, #0x950
    22dc:	blr	x2
    22e0:	ldp	x29, x30, [sp], #16
    22e4:	ret
    22e8:	ret
    22ec:	adrp	x0, 17000 <PyInit_select@@Base+0x12ef8>
    22f0:	ldrb	w0, [x0, #2384]
    22f4:	cbnz	w0, 2330 <PySequence_Fast@plt+0x100>
    22f8:	stp	x29, x30, [sp, #-16]!
    22fc:	mov	x29, sp
    2300:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    2304:	ldr	x0, [x0, #3976]
    2308:	cbz	x0, 2318 <PySequence_Fast@plt+0xe8>
    230c:	adrp	x0, 17000 <PyInit_select@@Base+0x12ef8>
    2310:	ldr	x0, [x0, #440]
    2314:	bl	1f30 <__cxa_finalize@plt>
    2318:	bl	2254 <PySequence_Fast@plt+0x24>
    231c:	adrp	x0, 17000 <PyInit_select@@Base+0x12ef8>
    2320:	mov	w1, #0x1                   	// #1
    2324:	strb	w1, [x0, #2384]
    2328:	ldp	x29, x30, [sp], #16
    232c:	ret
    2330:	ret
    2334:	stp	x29, x30, [sp, #-16]!
    2338:	mov	x29, sp
    233c:	bl	2298 <PySequence_Fast@plt+0x68>
    2340:	ldp	x29, x30, [sp], #16
    2344:	ret
    2348:	ldr	w0, [x0, #16]
    234c:	tbnz	w0, #31, 2368 <PySequence_Fast@plt+0x138>
    2350:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    2354:	ldr	x0, [x0, #4016]
    2358:	ldr	x1, [x0]
    235c:	add	x1, x1, #0x1
    2360:	str	x1, [x0]
    2364:	ret
    2368:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    236c:	ldr	x0, [x0, #4056]
    2370:	ldr	x1, [x0]
    2374:	add	x1, x1, #0x1
    2378:	str	x1, [x0]
    237c:	b	2364 <PySequence_Fast@plt+0x134>
    2380:	stp	x29, x30, [sp, #-16]!
    2384:	mov	x29, sp
    2388:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    238c:	add	x1, x1, #0x410
    2390:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    2394:	ldr	x0, [x0, #3992]
    2398:	ldr	x0, [x0]
    239c:	bl	1f70 <PyErr_SetString@plt>
    23a0:	mov	x0, #0x0                   	// #0
    23a4:	ldp	x29, x30, [sp], #16
    23a8:	ret
    23ac:	ldr	w1, [x0, #16]
    23b0:	tbnz	w1, #31, 23c4 <PySequence_Fast@plt+0x194>
    23b4:	ldr	x1, [x0]
    23b8:	add	x1, x1, #0x1
    23bc:	str	x1, [x0]
    23c0:	ret
    23c4:	stp	x29, x30, [sp, #-16]!
    23c8:	mov	x29, sp
    23cc:	bl	2380 <PySequence_Fast@plt+0x150>
    23d0:	ldp	x29, x30, [sp], #16
    23d4:	ret
    23d8:	stp	x29, x30, [sp, #-32]!
    23dc:	mov	x29, sp
    23e0:	stp	x19, x20, [sp, #16]
    23e4:	mov	w20, w2
    23e8:	ldr	x2, [x0, #304]
    23ec:	mov	x1, #0x0                   	// #0
    23f0:	blr	x2
    23f4:	mov	x19, x0
    23f8:	cbz	x0, 2410 <PySequence_Fast@plt+0x1e0>
    23fc:	cmn	w20, #0x1
    2400:	b.eq	2420 <PySequence_Fast@plt+0x1f0>  // b.none
    2404:	str	w20, [x0, #16]
    2408:	ldr	w0, [x19, #16]
    240c:	tbnz	w0, #31, 2440 <PySequence_Fast@plt+0x210>
    2410:	mov	x0, x19
    2414:	ldp	x19, x20, [sp, #16]
    2418:	ldp	x29, x30, [sp], #32
    241c:	ret
    2420:	bl	2140 <PyEval_SaveThread@plt>
    2424:	mov	x20, x0
    2428:	mov	w0, #0x80000               	// #524288
    242c:	bl	20d0 <epoll_create1@plt>
    2430:	str	w0, [x19, #16]
    2434:	mov	x0, x20
    2438:	bl	1f00 <PyEval_RestoreThread@plt>
    243c:	b	2408 <PySequence_Fast@plt+0x1d8>
    2440:	ldr	x0, [x19]
    2444:	sub	x0, x0, #0x1
    2448:	str	x0, [x19]
    244c:	cbz	x0, 2468 <PySequence_Fast@plt+0x238>
    2450:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    2454:	ldr	x0, [x0, #4008]
    2458:	ldr	x0, [x0]
    245c:	bl	1f20 <PyErr_SetFromErrno@plt>
    2460:	mov	x19, #0x0                   	// #0
    2464:	b	2410 <PySequence_Fast@plt+0x1e0>
    2468:	mov	x0, x19
    246c:	bl	1f40 <_Py_Dealloc@plt>
    2470:	b	2450 <PySequence_Fast@plt+0x220>
    2474:	sub	sp, sp, #0x50
    2478:	stp	x29, x30, [sp, #16]
    247c:	add	x29, sp, #0x10
    2480:	stp	x19, x20, [sp, #32]
    2484:	stp	x21, x22, [sp, #48]
    2488:	mov	x22, x0
    248c:	mov	x19, x1
    2490:	ldr	x1, [x1, #16]
    2494:	cbz	x2, 254c <PySequence_Fast@plt+0x31c>
    2498:	ldr	x20, [x2, #16]
    249c:	add	x20, x1, x20
    24a0:	add	x0, sp, #0x40
    24a4:	str	x0, [sp]
    24a8:	mov	w7, #0x0                   	// #0
    24ac:	mov	w6, #0x2                   	// #2
    24b0:	mov	w5, #0x0                   	// #0
    24b4:	adrp	x4, 17000 <PyInit_select@@Base+0x12ef8>
    24b8:	add	x4, x4, #0x360
    24bc:	mov	x3, #0x0                   	// #0
    24c0:	add	x0, x19, #0x18
    24c4:	bl	1f60 <_PyArg_UnpackKeywords@plt>
    24c8:	mov	x19, x0
    24cc:	cbz	x0, 2674 <PySequence_Fast@plt+0x444>
    24d0:	cbz	x20, 265c <PySequence_Fast@plt+0x42c>
    24d4:	ldr	x0, [x19]
    24d8:	cbz	x0, 25a0 <PySequence_Fast@plt+0x370>
    24dc:	ldr	x0, [x0, #8]
    24e0:	adrp	x1, 16000 <PyInit_select@@Base+0x11ef8>
    24e4:	ldr	x1, [x1, #3968]
    24e8:	cmp	x0, x1
    24ec:	b.eq	2568 <PySequence_Fast@plt+0x338>  // b.none
    24f0:	adrp	x1, 16000 <PyInit_select@@Base+0x11ef8>
    24f4:	ldr	x1, [x1, #3968]
    24f8:	bl	21b0 <PyType_IsSubtype@plt>
    24fc:	cbnz	w0, 2568 <PySequence_Fast@plt+0x338>
    2500:	ldr	x0, [x19]
    2504:	bl	21e0 <_PyLong_AsInt@plt>
    2508:	mov	w21, w0
    250c:	cmn	w0, #0x1
    2510:	b.eq	2588 <PySequence_Fast@plt+0x358>  // b.none
    2514:	cmp	x20, #0x1
    2518:	b.ne	25a4 <PySequence_Fast@plt+0x374>  // b.any
    251c:	cmn	w0, #0x1
    2520:	b.eq	268c <PySequence_Fast@plt+0x45c>  // b.none
    2524:	cmp	w0, #0x0
    2528:	b.gt	2660 <PySequence_Fast@plt+0x430>
    252c:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    2530:	add	x1, x1, #0x460
    2534:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    2538:	ldr	x0, [x0, #3992]
    253c:	ldr	x0, [x0]
    2540:	bl	1f70 <PyErr_SetString@plt>
    2544:	mov	x19, #0x0                   	// #0
    2548:	b	2674 <PySequence_Fast@plt+0x444>
    254c:	cmp	x1, #0x2
    2550:	b.hi	2560 <PySequence_Fast@plt+0x330>  // b.pmore
    2554:	add	x19, x19, #0x18
    2558:	mov	x20, x1
    255c:	b	24d0 <PySequence_Fast@plt+0x2a0>
    2560:	mov	x20, x1
    2564:	b	24a0 <PySequence_Fast@plt+0x270>
    2568:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    256c:	add	x1, x1, #0x438
    2570:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    2574:	ldr	x0, [x0, #4000]
    2578:	ldr	x0, [x0]
    257c:	bl	1f70 <PyErr_SetString@plt>
    2580:	mov	x19, #0x0                   	// #0
    2584:	b	2674 <PySequence_Fast@plt+0x444>
    2588:	bl	2080 <PyErr_Occurred@plt>
    258c:	cbnz	x0, 2694 <PySequence_Fast@plt+0x464>
    2590:	cmp	x20, #0x1
    2594:	b.ne	25a4 <PySequence_Fast@plt+0x374>  // b.any
    2598:	mov	w21, #0x3ff                 	// #1023
    259c:	b	2660 <PySequence_Fast@plt+0x430>
    25a0:	mov	w21, #0xffffffff            	// #-1
    25a4:	ldr	x0, [x19, #8]
    25a8:	ldr	x0, [x0, #8]
    25ac:	adrp	x1, 16000 <PyInit_select@@Base+0x11ef8>
    25b0:	ldr	x1, [x1, #3968]
    25b4:	cmp	x0, x1
    25b8:	b.eq	2614 <PySequence_Fast@plt+0x3e4>  // b.none
    25bc:	adrp	x1, 16000 <PyInit_select@@Base+0x11ef8>
    25c0:	ldr	x1, [x1, #3968]
    25c4:	bl	21b0 <PyType_IsSubtype@plt>
    25c8:	cbnz	w0, 2614 <PySequence_Fast@plt+0x3e4>
    25cc:	ldr	x0, [x19, #8]
    25d0:	bl	21e0 <_PyLong_AsInt@plt>
    25d4:	cmn	w0, #0x1
    25d8:	b.eq	2634 <PySequence_Fast@plt+0x404>  // b.none
    25dc:	cmn	w21, #0x1
    25e0:	b.eq	2654 <PySequence_Fast@plt+0x424>  // b.none
    25e4:	cmp	w21, #0x0
    25e8:	b.le	252c <PySequence_Fast@plt+0x2fc>
    25ec:	tst	w0, #0xfff7ffff
    25f0:	b.eq	2660 <PySequence_Fast@plt+0x430>  // b.none
    25f4:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    25f8:	add	x1, x1, #0x478
    25fc:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    2600:	ldr	x0, [x0, #4008]
    2604:	ldr	x0, [x0]
    2608:	bl	1f70 <PyErr_SetString@plt>
    260c:	mov	x19, #0x0                   	// #0
    2610:	b	2674 <PySequence_Fast@plt+0x444>
    2614:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    2618:	add	x1, x1, #0x438
    261c:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    2620:	ldr	x0, [x0, #4000]
    2624:	ldr	x0, [x0]
    2628:	bl	1f70 <PyErr_SetString@plt>
    262c:	mov	x19, #0x0                   	// #0
    2630:	b	2674 <PySequence_Fast@plt+0x444>
    2634:	bl	2080 <PyErr_Occurred@plt>
    2638:	mov	x19, #0x0                   	// #0
    263c:	cbnz	x0, 2674 <PySequence_Fast@plt+0x444>
    2640:	cmn	w21, #0x1
    2644:	b.eq	25f4 <PySequence_Fast@plt+0x3c4>  // b.none
    2648:	cmp	w21, #0x0
    264c:	b.gt	25f4 <PySequence_Fast@plt+0x3c4>
    2650:	b	252c <PySequence_Fast@plt+0x2fc>
    2654:	mov	w21, #0x3ff                 	// #1023
    2658:	b	25ec <PySequence_Fast@plt+0x3bc>
    265c:	mov	w21, #0x3ff                 	// #1023
    2660:	mov	w2, #0xffffffff            	// #-1
    2664:	mov	w1, w21
    2668:	mov	x0, x22
    266c:	bl	23d8 <PySequence_Fast@plt+0x1a8>
    2670:	mov	x19, x0
    2674:	mov	x0, x19
    2678:	ldp	x19, x20, [sp, #32]
    267c:	ldp	x21, x22, [sp, #48]
    2680:	ldp	x29, x30, [sp, #16]
    2684:	add	sp, sp, #0x50
    2688:	ret
    268c:	mov	w21, #0x3ff                 	// #1023
    2690:	b	2660 <PySequence_Fast@plt+0x430>
    2694:	mov	x19, #0x0                   	// #0
    2698:	b	2674 <PySequence_Fast@plt+0x444>
    269c:	stp	x29, x30, [sp, #-32]!
    26a0:	mov	x29, sp
    26a4:	stp	x19, x20, [sp, #16]
    26a8:	mov	x20, x0
    26ac:	mov	x19, x1
    26b0:	ldr	x0, [x1, #8]
    26b4:	adrp	x1, 16000 <PyInit_select@@Base+0x11ef8>
    26b8:	ldr	x1, [x1, #3968]
    26bc:	cmp	x0, x1
    26c0:	b.eq	2704 <PySequence_Fast@plt+0x4d4>  // b.none
    26c4:	adrp	x1, 16000 <PyInit_select@@Base+0x11ef8>
    26c8:	ldr	x1, [x1, #3968]
    26cc:	bl	21b0 <PyType_IsSubtype@plt>
    26d0:	cbnz	w0, 2704 <PySequence_Fast@plt+0x4d4>
    26d4:	mov	x0, x19
    26d8:	bl	21e0 <_PyLong_AsInt@plt>
    26dc:	mov	w19, w0
    26e0:	cmn	w0, #0x1
    26e4:	b.eq	2724 <PySequence_Fast@plt+0x4f4>  // b.none
    26e8:	mov	w2, w19
    26ec:	mov	w1, #0x3ff                 	// #1023
    26f0:	mov	x0, x20
    26f4:	bl	23d8 <PySequence_Fast@plt+0x1a8>
    26f8:	ldp	x19, x20, [sp, #16]
    26fc:	ldp	x29, x30, [sp], #32
    2700:	ret
    2704:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    2708:	add	x1, x1, #0x438
    270c:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    2710:	ldr	x0, [x0, #4000]
    2714:	ldr	x0, [x0]
    2718:	bl	1f70 <PyErr_SetString@plt>
    271c:	mov	x0, #0x0                   	// #0
    2720:	b	26f8 <PySequence_Fast@plt+0x4c8>
    2724:	bl	2080 <PyErr_Occurred@plt>
    2728:	mov	x1, x0
    272c:	mov	x0, #0x0                   	// #0
    2730:	cbz	x1, 26e8 <PySequence_Fast@plt+0x4b8>
    2734:	b	26f8 <PySequence_Fast@plt+0x4c8>
    2738:	stp	x29, x30, [sp, #-48]!
    273c:	mov	x29, sp
    2740:	stp	x19, x20, [sp, #16]
    2744:	str	x21, [sp, #32]
    2748:	mov	x21, x0
    274c:	mov	x19, x0
    2750:	add	x20, x0, #0x4, lsl #12
    2754:	add	x20, x20, #0x10
    2758:	b	276c <PySequence_Fast@plt+0x53c>
    275c:	bl	1f40 <_Py_Dealloc@plt>
    2760:	add	x19, x19, #0x10
    2764:	cmp	x19, x20
    2768:	b.eq	2798 <PySequence_Fast@plt+0x568>  // b.none
    276c:	mov	x2, x19
    2770:	ldr	w1, [x19, #12]
    2774:	tbnz	w1, #31, 2798 <PySequence_Fast@plt+0x568>
    2778:	ldr	x0, [x19]
    277c:	cbz	x0, 2760 <PySequence_Fast@plt+0x530>
    2780:	str	xzr, [x2]
    2784:	ldr	x1, [x0]
    2788:	sub	x1, x1, #0x1
    278c:	str	x1, [x0]
    2790:	cbnz	x1, 2760 <PySequence_Fast@plt+0x530>
    2794:	b	275c <PySequence_Fast@plt+0x52c>
    2798:	mov	w0, #0xffffffff            	// #-1
    279c:	str	w0, [x21, #12]
    27a0:	ldp	x19, x20, [sp, #16]
    27a4:	ldr	x21, [sp, #32]
    27a8:	ldp	x29, x30, [sp], #48
    27ac:	ret
    27b0:	stp	x29, x30, [sp, #-32]!
    27b4:	mov	x29, sp
    27b8:	str	x19, [sp, #16]
    27bc:	mov	x19, x0
    27c0:	cmp	x2, #0x3
    27c4:	b.hi	27ec <PySequence_Fast@plt+0x5bc>  // b.pmore
    27c8:	mov	x2, #0x0                   	// #0
    27cc:	adrp	x1, 17000 <PyInit_select@@Base+0x12ef8>
    27d0:	add	x1, x1, #0x360
    27d4:	add	x1, x1, #0x40
    27d8:	mov	x0, x19
    27dc:	bl	20e0 <_PyObject_CallMethodId@plt>
    27e0:	ldr	x19, [sp, #16]
    27e4:	ldp	x29, x30, [sp], #32
    27e8:	ret
    27ec:	mov	x1, x2
    27f0:	mov	x3, #0x3                   	// #3
    27f4:	mov	x2, #0x0                   	// #0
    27f8:	adrp	x0, 4000 <PySequence_Fast@plt+0x1dd0>
    27fc:	add	x0, x0, #0x488
    2800:	bl	2050 <_PyArg_CheckPositional@plt>
    2804:	cbnz	w0, 27c8 <PySequence_Fast@plt+0x598>
    2808:	mov	x0, #0x0                   	// #0
    280c:	b	27e0 <PySequence_Fast@plt+0x5b0>
    2810:	sub	sp, sp, #0x90
    2814:	stp	x29, x30, [sp, #16]
    2818:	add	x29, sp, #0x10
    281c:	stp	x19, x20, [sp, #32]
    2820:	stp	x21, x22, [sp, #48]
    2824:	stp	x23, x24, [sp, #64]
    2828:	mov	x21, x0
    282c:	mov	x20, x1
    2830:	mov	x1, x2
    2834:	cbz	x3, 29cc <PySequence_Fast@plt+0x79c>
    2838:	ldr	x23, [x3, #16]
    283c:	add	x23, x2, x23
    2840:	add	x0, sp, #0x80
    2844:	str	x0, [sp]
    2848:	mov	w7, #0x0                   	// #0
    284c:	mov	w6, #0x2                   	// #2
    2850:	mov	w5, #0x0                   	// #0
    2854:	adrp	x4, 17000 <PyInit_select@@Base+0x12ef8>
    2858:	add	x4, x4, #0x360
    285c:	add	x4, x4, #0x58
    2860:	mov	x2, #0x0                   	// #0
    2864:	mov	x0, x20
    2868:	bl	1f60 <_PyArg_UnpackKeywords@plt>
    286c:	mov	x20, x0
    2870:	cbz	x0, 2bd0 <PySequence_Fast@plt+0x9a0>
    2874:	stp	x25, x26, [sp, #80]
    2878:	cbz	x23, 2bec <PySequence_Fast@plt+0x9bc>
    287c:	ldr	x22, [x20]
    2880:	cbz	x22, 29ec <PySequence_Fast@plt+0x7bc>
    2884:	cmp	x23, #0x1
    2888:	b.eq	2a30 <PySequence_Fast@plt+0x800>  // b.none
    288c:	ldr	x0, [x20, #8]
    2890:	ldr	x0, [x0, #8]
    2894:	adrp	x1, 16000 <PyInit_select@@Base+0x11ef8>
    2898:	ldr	x1, [x1, #3968]
    289c:	cmp	x0, x1
    28a0:	b.eq	29f8 <PySequence_Fast@plt+0x7c8>  // b.none
    28a4:	adrp	x1, 16000 <PyInit_select@@Base+0x11ef8>
    28a8:	ldr	x1, [x1, #3968]
    28ac:	bl	21b0 <PyType_IsSubtype@plt>
    28b0:	cbnz	w0, 29f8 <PySequence_Fast@plt+0x7c8>
    28b4:	ldr	x0, [x20, #8]
    28b8:	bl	21e0 <_PyLong_AsInt@plt>
    28bc:	mov	w24, w0
    28c0:	cmn	w0, #0x1
    28c4:	b.eq	2a1c <PySequence_Fast@plt+0x7ec>  // b.none
    28c8:	mov	x0, #0xffffffffffffffff    	// #-1
    28cc:	str	x0, [sp, #120]
    28d0:	ldr	w0, [x21, #16]
    28d4:	tbnz	w0, #31, 2a38 <PySequence_Fast@plt+0x808>
    28d8:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    28dc:	ldr	x0, [x0, #4048]
    28e0:	cmp	x22, x0
    28e4:	b.eq	2abc <PySequence_Fast@plt+0x88c>  // b.none
    28e8:	mov	w2, #0x3                   	// #3
    28ec:	mov	x1, x22
    28f0:	add	x0, sp, #0x78
    28f4:	bl	1fb0 <_PyTime_FromSecondsObject@plt>
    28f8:	tbnz	w0, #31, 2a48 <PySequence_Fast@plt+0x818>
    28fc:	mov	w1, #0x1                   	// #1
    2900:	ldr	x0, [sp, #120]
    2904:	bl	1fd0 <_PyTime_AsMilliseconds@plt>
    2908:	mov	x1, #0x80000000            	// #2147483648
    290c:	add	x1, x0, x1
    2910:	mov	x2, #0xffffffff            	// #4294967295
    2914:	cmp	x1, x2
    2918:	b.hi	2a88 <PySequence_Fast@plt+0x858>  // b.pmore
    291c:	cmp	x0, #0x0
    2920:	csinv	x26, x0, xzr, ge  // ge = tcont
    2924:	ldr	x0, [sp, #120]
    2928:	mov	x23, #0x0                   	// #0
    292c:	tbz	x0, #63, 2aac <PySequence_Fast@plt+0x87c>
    2930:	cmn	w24, #0x1
    2934:	b.eq	2af0 <PySequence_Fast@plt+0x8c0>  // b.none
    2938:	cmp	w24, #0x0
    293c:	b.le	2ac8 <PySequence_Fast@plt+0x898>
    2940:	str	x27, [sp, #96]
    2944:	sbfiz	x0, x24, #4, #32
    2948:	bl	21f0 <PyMem_Malloc@plt>
    294c:	mov	x22, x0
    2950:	mov	w27, #0x1                   	// #1
    2954:	cbz	x0, 2afc <PySequence_Fast@plt+0x8cc>
    2958:	bl	2140 <PyEval_SaveThread@plt>
    295c:	mov	x25, x0
    2960:	bl	21d0 <__errno_location@plt>
    2964:	mov	x20, x0
    2968:	str	wzr, [x0]
    296c:	mov	w3, w26
    2970:	mov	w2, w24
    2974:	mov	x1, x22
    2978:	ldr	w0, [x21, #16]
    297c:	bl	2000 <epoll_wait@plt>
    2980:	mov	w19, w0
    2984:	mov	x0, x25
    2988:	bl	1f00 <PyEval_RestoreThread@plt>
    298c:	ldr	w0, [x20]
    2990:	cmp	w0, #0x4
    2994:	b.ne	2b10 <PySequence_Fast@plt+0x8e0>  // b.any
    2998:	bl	21a0 <PyErr_CheckSignals@plt>
    299c:	mov	w19, w0
    29a0:	cbnz	w0, 2bbc <PySequence_Fast@plt+0x98c>
    29a4:	ldr	x0, [sp, #120]
    29a8:	tbnz	x0, #63, 2958 <PySequence_Fast@plt+0x728>
    29ac:	bl	2200 <_PyTime_GetMonotonicClock@plt>
    29b0:	sub	x0, x23, x0
    29b4:	str	x0, [sp, #120]
    29b8:	tbnz	x0, #63, 2b14 <PySequence_Fast@plt+0x8e4>
    29bc:	mov	w1, w27
    29c0:	bl	1fd0 <_PyTime_AsMilliseconds@plt>
    29c4:	mov	x26, x0
    29c8:	b	2958 <PySequence_Fast@plt+0x728>
    29cc:	cmp	x20, #0x0
    29d0:	ccmp	x2, #0x2, #0x2, ne  // ne = any
    29d4:	b.ls	29e0 <PySequence_Fast@plt+0x7b0>  // b.plast
    29d8:	mov	x23, x2
    29dc:	b	2840 <PySequence_Fast@plt+0x610>
    29e0:	stp	x25, x26, [sp, #80]
    29e4:	mov	x23, x2
    29e8:	b	2878 <PySequence_Fast@plt+0x648>
    29ec:	adrp	x22, 16000 <PyInit_select@@Base+0x11ef8>
    29f0:	ldr	x22, [x22, #4048]
    29f4:	b	288c <PySequence_Fast@plt+0x65c>
    29f8:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    29fc:	add	x1, x1, #0x438
    2a00:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    2a04:	ldr	x0, [x0, #4000]
    2a08:	ldr	x0, [x0]
    2a0c:	bl	1f70 <PyErr_SetString@plt>
    2a10:	mov	x20, #0x0                   	// #0
    2a14:	ldp	x25, x26, [sp, #80]
    2a18:	b	2bd0 <PySequence_Fast@plt+0x9a0>
    2a1c:	bl	2080 <PyErr_Occurred@plt>
    2a20:	mov	x20, #0x0                   	// #0
    2a24:	cbz	x0, 28c8 <PySequence_Fast@plt+0x698>
    2a28:	ldp	x25, x26, [sp, #80]
    2a2c:	b	2bd0 <PySequence_Fast@plt+0x9a0>
    2a30:	mov	w24, #0xffffffff            	// #-1
    2a34:	b	28c8 <PySequence_Fast@plt+0x698>
    2a38:	bl	2380 <PySequence_Fast@plt+0x150>
    2a3c:	mov	x20, x0
    2a40:	ldp	x25, x26, [sp, #80]
    2a44:	b	2bd0 <PySequence_Fast@plt+0x9a0>
    2a48:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    2a4c:	ldr	x0, [x0, #4000]
    2a50:	ldr	x0, [x0]
    2a54:	bl	1fa0 <PyErr_ExceptionMatches@plt>
    2a58:	mov	x20, #0x0                   	// #0
    2a5c:	cbnz	w0, 2a68 <PySequence_Fast@plt+0x838>
    2a60:	ldp	x25, x26, [sp, #80]
    2a64:	b	2bd0 <PySequence_Fast@plt+0x9a0>
    2a68:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    2a6c:	add	x1, x1, #0x498
    2a70:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    2a74:	ldr	x0, [x0, #4000]
    2a78:	ldr	x0, [x0]
    2a7c:	bl	1f70 <PyErr_SetString@plt>
    2a80:	ldp	x25, x26, [sp, #80]
    2a84:	b	2bd0 <PySequence_Fast@plt+0x9a0>
    2a88:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    2a8c:	add	x1, x1, #0x4c0
    2a90:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    2a94:	ldr	x0, [x0, #4032]
    2a98:	ldr	x0, [x0]
    2a9c:	bl	1f70 <PyErr_SetString@plt>
    2aa0:	mov	x20, #0x0                   	// #0
    2aa4:	ldp	x25, x26, [sp, #80]
    2aa8:	b	2bd0 <PySequence_Fast@plt+0x9a0>
    2aac:	bl	2200 <_PyTime_GetMonotonicClock@plt>
    2ab0:	ldr	x1, [sp, #120]
    2ab4:	add	x23, x0, x1
    2ab8:	b	2930 <PySequence_Fast@plt+0x700>
    2abc:	mov	x23, #0x0                   	// #0
    2ac0:	mov	x26, #0xffffffffffffffff    	// #-1
    2ac4:	b	2930 <PySequence_Fast@plt+0x700>
    2ac8:	mov	w2, w24
    2acc:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    2ad0:	add	x1, x1, #0x4d8
    2ad4:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    2ad8:	ldr	x0, [x0, #3992]
    2adc:	ldr	x0, [x0]
    2ae0:	bl	21c0 <PyErr_Format@plt>
    2ae4:	mov	x20, #0x0                   	// #0
    2ae8:	ldp	x25, x26, [sp, #80]
    2aec:	b	2bd0 <PySequence_Fast@plt+0x9a0>
    2af0:	str	x27, [sp, #96]
    2af4:	mov	w24, #0x3ff                 	// #1023
    2af8:	b	2944 <PySequence_Fast@plt+0x714>
    2afc:	bl	1f50 <PyErr_NoMemory@plt>
    2b00:	mov	x20, x22
    2b04:	ldp	x25, x26, [sp, #80]
    2b08:	ldr	x27, [sp, #96]
    2b0c:	b	2bd0 <PySequence_Fast@plt+0x9a0>
    2b10:	tbnz	w19, #31, 2b7c <PySequence_Fast@plt+0x94c>
    2b14:	sxtw	x0, w19
    2b18:	bl	1ed0 <PyList_New@plt>
    2b1c:	mov	x20, x0
    2b20:	cbz	x0, 2bc0 <PySequence_Fast@plt+0x990>
    2b24:	cmp	w19, #0x0
    2b28:	b.le	2bc0 <PySequence_Fast@plt+0x990>
    2b2c:	add	x24, x22, #0x8
    2b30:	sub	w19, w19, #0x1
    2b34:	add	x19, x19, #0x1
    2b38:	lsl	x19, x19, #3
    2b3c:	mov	x23, #0x0                   	// #0
    2b40:	adrp	x25, 4000 <PySequence_Fast@plt+0x1dd0>
    2b44:	add	x25, x25, #0x508
    2b48:	ldur	w2, [x24, #-8]
    2b4c:	ldr	w1, [x24]
    2b50:	mov	x0, x25
    2b54:	bl	2070 <Py_BuildValue@plt>
    2b58:	mov	x21, x0
    2b5c:	cbz	x0, 2b94 <PySequence_Fast@plt+0x964>
    2b60:	ldr	x0, [x20, #24]
    2b64:	str	x21, [x0, x23]
    2b68:	add	x23, x23, #0x8
    2b6c:	add	x24, x24, #0x10
    2b70:	cmp	x19, x23
    2b74:	b.ne	2b48 <PySequence_Fast@plt+0x918>  // b.any
    2b78:	b	2bc0 <PySequence_Fast@plt+0x990>
    2b7c:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    2b80:	ldr	x0, [x0, #4008]
    2b84:	ldr	x0, [x0]
    2b88:	bl	1f20 <PyErr_SetFromErrno@plt>
    2b8c:	mov	x20, #0x0                   	// #0
    2b90:	b	2bc0 <PySequence_Fast@plt+0x990>
    2b94:	ldr	x0, [x20]
    2b98:	sub	x0, x0, #0x1
    2b9c:	str	x0, [x20]
    2ba0:	cbz	x0, 2bac <PySequence_Fast@plt+0x97c>
    2ba4:	mov	x20, x21
    2ba8:	b	2bc0 <PySequence_Fast@plt+0x990>
    2bac:	mov	x0, x20
    2bb0:	bl	1f40 <_Py_Dealloc@plt>
    2bb4:	mov	x20, x21
    2bb8:	b	2bc0 <PySequence_Fast@plt+0x990>
    2bbc:	mov	x20, #0x0                   	// #0
    2bc0:	mov	x0, x22
    2bc4:	bl	1f10 <PyMem_Free@plt>
    2bc8:	ldp	x25, x26, [sp, #80]
    2bcc:	ldr	x27, [sp, #96]
    2bd0:	mov	x0, x20
    2bd4:	ldp	x19, x20, [sp, #32]
    2bd8:	ldp	x21, x22, [sp, #48]
    2bdc:	ldp	x23, x24, [sp, #64]
    2be0:	ldp	x29, x30, [sp, #16]
    2be4:	add	sp, sp, #0x90
    2be8:	ret
    2bec:	mov	x0, #0xffffffffffffffff    	// #-1
    2bf0:	str	x0, [sp, #120]
    2bf4:	ldr	w0, [x21, #16]
    2bf8:	tbnz	w0, #31, 2a38 <PySequence_Fast@plt+0x808>
    2bfc:	str	x27, [sp, #96]
    2c00:	mov	x26, #0xffffffffffffffff    	// #-1
    2c04:	mov	w24, #0x3ff                 	// #1023
    2c08:	b	2944 <PySequence_Fast@plt+0x714>
    2c0c:	stp	x29, x30, [sp, #-32]!
    2c10:	mov	x29, sp
    2c14:	str	x19, [sp, #16]
    2c18:	mov	x19, x1
    2c1c:	bl	2180 <PyObject_AsFileDescriptor@plt>
    2c20:	cmn	w0, #0x1
    2c24:	b.eq	2c3c <PySequence_Fast@plt+0xa0c>  // b.none
    2c28:	str	w0, [x19]
    2c2c:	mov	w0, #0x1                   	// #1
    2c30:	ldr	x19, [sp, #16]
    2c34:	ldp	x29, x30, [sp], #32
    2c38:	ret
    2c3c:	mov	w0, #0x0                   	// #0
    2c40:	b	2c30 <PySequence_Fast@plt+0xa00>
    2c44:	stp	x29, x30, [sp, #-64]!
    2c48:	mov	x29, sp
    2c4c:	tbnz	w0, #31, 2ca4 <PySequence_Fast@plt+0xa74>
    2c50:	stp	x19, x20, [sp, #16]
    2c54:	stp	x21, x22, [sp, #32]
    2c58:	mov	w20, w0
    2c5c:	mov	w19, w1
    2c60:	mov	w21, w2
    2c64:	cmp	w1, #0x2
    2c68:	b.eq	2d04 <PySequence_Fast@plt+0xad4>  // b.none
    2c6c:	and	w0, w1, #0xfffffffd
    2c70:	cmp	w0, #0x1
    2c74:	b.eq	2cac <PySequence_Fast@plt+0xa7c>  // b.none
    2c78:	bl	21d0 <__errno_location@plt>
    2c7c:	mov	w1, #0x16                  	// #22
    2c80:	str	w1, [x0]
    2c84:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    2c88:	ldr	x0, [x0, #4008]
    2c8c:	ldr	x0, [x0]
    2c90:	bl	1f20 <PyErr_SetFromErrno@plt>
    2c94:	mov	x0, #0x0                   	// #0
    2c98:	ldp	x19, x20, [sp, #16]
    2c9c:	ldp	x21, x22, [sp, #32]
    2ca0:	b	2cfc <PySequence_Fast@plt+0xacc>
    2ca4:	bl	2380 <PySequence_Fast@plt+0x150>
    2ca8:	b	2cfc <PySequence_Fast@plt+0xacc>
    2cac:	str	w3, [sp, #48]
    2cb0:	str	w2, [sp, #56]
    2cb4:	bl	2140 <PyEval_SaveThread@plt>
    2cb8:	mov	x22, x0
    2cbc:	add	x3, sp, #0x30
    2cc0:	mov	w2, w21
    2cc4:	mov	w1, w19
    2cc8:	mov	w0, w20
    2ccc:	bl	2120 <epoll_ctl@plt>
    2cd0:	mov	w19, w0
    2cd4:	mov	x0, x22
    2cd8:	bl	1f00 <PyEval_RestoreThread@plt>
    2cdc:	tbnz	w19, #31, 2c84 <PySequence_Fast@plt+0xa54>
    2ce0:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    2ce4:	ldr	x0, [x0, #4048]
    2ce8:	ldr	x1, [x0]
    2cec:	add	x1, x1, #0x1
    2cf0:	str	x1, [x0]
    2cf4:	ldp	x19, x20, [sp, #16]
    2cf8:	ldp	x21, x22, [sp, #32]
    2cfc:	ldp	x29, x30, [sp], #64
    2d00:	ret
    2d04:	bl	2140 <PyEval_SaveThread@plt>
    2d08:	mov	x22, x0
    2d0c:	add	x3, sp, #0x30
    2d10:	mov	w2, w21
    2d14:	mov	w1, #0x2                   	// #2
    2d18:	mov	w0, w20
    2d1c:	bl	2120 <epoll_ctl@plt>
    2d20:	mov	w19, w0
    2d24:	bl	21d0 <__errno_location@plt>
    2d28:	ldr	w1, [x0]
    2d2c:	cmp	w1, #0x9
    2d30:	b.eq	2d40 <PySequence_Fast@plt+0xb10>  // b.none
    2d34:	mov	x0, x22
    2d38:	bl	1f00 <PyEval_RestoreThread@plt>
    2d3c:	b	2cdc <PySequence_Fast@plt+0xaac>
    2d40:	str	wzr, [x0]
    2d44:	mov	w19, #0x0                   	// #0
    2d48:	b	2d34 <PySequence_Fast@plt+0xb04>
    2d4c:	sub	sp, sp, #0x40
    2d50:	stp	x29, x30, [sp, #16]
    2d54:	add	x29, sp, #0x10
    2d58:	str	x19, [sp, #32]
    2d5c:	mov	x19, x0
    2d60:	mov	x8, x1
    2d64:	mov	x1, x2
    2d68:	cmp	x3, #0x0
    2d6c:	ccmp	x2, #0x1, #0x0, eq  // eq = none
    2d70:	b.ne	2d78 <PySequence_Fast@plt+0xb48>  // b.any
    2d74:	cbnz	x8, 2dac <PySequence_Fast@plt+0xb7c>
    2d78:	add	x0, sp, #0x38
    2d7c:	str	x0, [sp]
    2d80:	mov	w7, #0x0                   	// #0
    2d84:	mov	w6, #0x1                   	// #1
    2d88:	mov	w5, w6
    2d8c:	adrp	x4, 17000 <PyInit_select@@Base+0x12ef8>
    2d90:	add	x4, x4, #0x360
    2d94:	add	x4, x4, #0x98
    2d98:	mov	x2, #0x0                   	// #0
    2d9c:	mov	x0, x8
    2da0:	bl	1f60 <_PyArg_UnpackKeywords@plt>
    2da4:	mov	x8, x0
    2da8:	cbz	x0, 2dd8 <PySequence_Fast@plt+0xba8>
    2dac:	add	x1, sp, #0x34
    2db0:	ldr	x0, [x8]
    2db4:	bl	2c0c <PySequence_Fast@plt+0x9dc>
    2db8:	mov	w1, w0
    2dbc:	mov	x0, #0x0                   	// #0
    2dc0:	cbz	w1, 2dd8 <PySequence_Fast@plt+0xba8>
    2dc4:	mov	w3, #0x0                   	// #0
    2dc8:	ldr	w2, [sp, #52]
    2dcc:	mov	w1, #0x2                   	// #2
    2dd0:	ldr	w0, [x19, #16]
    2dd4:	bl	2c44 <PySequence_Fast@plt+0xa14>
    2dd8:	ldr	x19, [sp, #32]
    2ddc:	ldp	x29, x30, [sp, #16]
    2de0:	add	sp, sp, #0x40
    2de4:	ret
    2de8:	sub	sp, sp, #0x60
    2dec:	stp	x29, x30, [sp, #16]
    2df0:	add	x29, sp, #0x10
    2df4:	stp	x19, x20, [sp, #32]
    2df8:	str	x21, [sp, #48]
    2dfc:	mov	x20, x0
    2e00:	mov	x19, x1
    2e04:	mov	x1, x2
    2e08:	cbz	x3, 2ec4 <PySequence_Fast@plt+0xc94>
    2e0c:	ldr	x21, [x3, #16]
    2e10:	add	x21, x2, x21
    2e14:	add	x0, sp, #0x50
    2e18:	str	x0, [sp]
    2e1c:	mov	w7, #0x0                   	// #0
    2e20:	mov	w6, #0x2                   	// #2
    2e24:	mov	w5, #0x1                   	// #1
    2e28:	adrp	x4, 17000 <PyInit_select@@Base+0x12ef8>
    2e2c:	add	x4, x4, #0x360
    2e30:	add	x4, x4, #0xd8
    2e34:	mov	x2, #0x0                   	// #0
    2e38:	mov	x0, x19
    2e3c:	bl	1f60 <_PyArg_UnpackKeywords@plt>
    2e40:	mov	x19, x0
    2e44:	cbz	x0, 2eb0 <PySequence_Fast@plt+0xc80>
    2e48:	add	x1, sp, #0x4c
    2e4c:	ldr	x0, [x19]
    2e50:	bl	2c0c <PySequence_Fast@plt+0x9dc>
    2e54:	cbz	w0, 2f20 <PySequence_Fast@plt+0xcf0>
    2e58:	cmp	x21, #0x1
    2e5c:	b.eq	2f18 <PySequence_Fast@plt+0xce8>  // b.none
    2e60:	ldr	x0, [x19, #8]
    2e64:	ldr	x0, [x0, #8]
    2e68:	adrp	x1, 16000 <PyInit_select@@Base+0x11ef8>
    2e6c:	ldr	x1, [x1, #3968]
    2e70:	cmp	x0, x1
    2e74:	b.eq	2ee4 <PySequence_Fast@plt+0xcb4>  // b.none
    2e78:	adrp	x1, 16000 <PyInit_select@@Base+0x11ef8>
    2e7c:	ldr	x1, [x1, #3968]
    2e80:	bl	21b0 <PyType_IsSubtype@plt>
    2e84:	cbnz	w0, 2ee4 <PySequence_Fast@plt+0xcb4>
    2e88:	ldr	x0, [x19, #8]
    2e8c:	bl	2020 <PyLong_AsUnsignedLongMask@plt>
    2e90:	mov	w19, w0
    2e94:	cmn	w0, #0x1
    2e98:	b.eq	2f04 <PySequence_Fast@plt+0xcd4>  // b.none
    2e9c:	mov	w3, w19
    2ea0:	ldr	w2, [sp, #76]
    2ea4:	mov	w1, #0x1                   	// #1
    2ea8:	ldr	w0, [x20, #16]
    2eac:	bl	2c44 <PySequence_Fast@plt+0xa14>
    2eb0:	ldp	x19, x20, [sp, #32]
    2eb4:	ldr	x21, [sp, #48]
    2eb8:	ldp	x29, x30, [sp, #16]
    2ebc:	add	sp, sp, #0x60
    2ec0:	ret
    2ec4:	sub	x0, x2, #0x1
    2ec8:	cmp	x0, #0x1
    2ecc:	b.hi	2edc <PySequence_Fast@plt+0xcac>  // b.pmore
    2ed0:	mov	x21, x2
    2ed4:	cbz	x19, 2e14 <PySequence_Fast@plt+0xbe4>
    2ed8:	b	2e48 <PySequence_Fast@plt+0xc18>
    2edc:	mov	x21, x2
    2ee0:	b	2e14 <PySequence_Fast@plt+0xbe4>
    2ee4:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    2ee8:	add	x1, x1, #0x438
    2eec:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    2ef0:	ldr	x0, [x0, #4000]
    2ef4:	ldr	x0, [x0]
    2ef8:	bl	1f70 <PyErr_SetString@plt>
    2efc:	mov	x0, #0x0                   	// #0
    2f00:	b	2eb0 <PySequence_Fast@plt+0xc80>
    2f04:	bl	2080 <PyErr_Occurred@plt>
    2f08:	mov	x1, x0
    2f0c:	mov	x0, #0x0                   	// #0
    2f10:	cbz	x1, 2e9c <PySequence_Fast@plt+0xc6c>
    2f14:	b	2eb0 <PySequence_Fast@plt+0xc80>
    2f18:	mov	w19, #0x7                   	// #7
    2f1c:	b	2e9c <PySequence_Fast@plt+0xc6c>
    2f20:	mov	x0, #0x0                   	// #0
    2f24:	b	2eb0 <PySequence_Fast@plt+0xc80>
    2f28:	sub	sp, sp, #0x50
    2f2c:	stp	x29, x30, [sp, #16]
    2f30:	add	x29, sp, #0x10
    2f34:	stp	x19, x20, [sp, #32]
    2f38:	mov	x20, x0
    2f3c:	mov	x19, x1
    2f40:	mov	x1, x2
    2f44:	cmp	x3, #0x0
    2f48:	ccmp	x2, #0x2, #0x0, eq  // eq = none
    2f4c:	b.ne	2f54 <PySequence_Fast@plt+0xd24>  // b.any
    2f50:	cbnz	x19, 2f88 <PySequence_Fast@plt+0xd58>
    2f54:	add	x0, sp, #0x40
    2f58:	str	x0, [sp]
    2f5c:	mov	w7, #0x0                   	// #0
    2f60:	mov	w6, #0x2                   	// #2
    2f64:	mov	w5, w6
    2f68:	adrp	x4, 17000 <PyInit_select@@Base+0x12ef8>
    2f6c:	add	x4, x4, #0x360
    2f70:	add	x4, x4, #0x118
    2f74:	mov	x2, #0x0                   	// #0
    2f78:	mov	x0, x19
    2f7c:	bl	1f60 <_PyArg_UnpackKeywords@plt>
    2f80:	mov	x19, x0
    2f84:	cbz	x0, 2fe8 <PySequence_Fast@plt+0xdb8>
    2f88:	add	x1, sp, #0x3c
    2f8c:	ldr	x0, [x19]
    2f90:	bl	2c0c <PySequence_Fast@plt+0x9dc>
    2f94:	cbz	w0, 302c <PySequence_Fast@plt+0xdfc>
    2f98:	ldr	x0, [x19, #8]
    2f9c:	ldr	x0, [x0, #8]
    2fa0:	adrp	x1, 16000 <PyInit_select@@Base+0x11ef8>
    2fa4:	ldr	x1, [x1, #3968]
    2fa8:	cmp	x0, x1
    2fac:	b.eq	2ff8 <PySequence_Fast@plt+0xdc8>  // b.none
    2fb0:	adrp	x1, 16000 <PyInit_select@@Base+0x11ef8>
    2fb4:	ldr	x1, [x1, #3968]
    2fb8:	bl	21b0 <PyType_IsSubtype@plt>
    2fbc:	cbnz	w0, 2ff8 <PySequence_Fast@plt+0xdc8>
    2fc0:	ldr	x0, [x19, #8]
    2fc4:	bl	2020 <PyLong_AsUnsignedLongMask@plt>
    2fc8:	mov	x19, x0
    2fcc:	cmn	w0, #0x1
    2fd0:	b.eq	3018 <PySequence_Fast@plt+0xde8>  // b.none
    2fd4:	mov	w3, w19
    2fd8:	ldr	w2, [sp, #60]
    2fdc:	mov	w1, #0x3                   	// #3
    2fe0:	ldr	w0, [x20, #16]
    2fe4:	bl	2c44 <PySequence_Fast@plt+0xa14>
    2fe8:	ldp	x19, x20, [sp, #32]
    2fec:	ldp	x29, x30, [sp, #16]
    2ff0:	add	sp, sp, #0x50
    2ff4:	ret
    2ff8:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    2ffc:	add	x1, x1, #0x438
    3000:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    3004:	ldr	x0, [x0, #4000]
    3008:	ldr	x0, [x0]
    300c:	bl	1f70 <PyErr_SetString@plt>
    3010:	mov	x0, #0x0                   	// #0
    3014:	b	2fe8 <PySequence_Fast@plt+0xdb8>
    3018:	bl	2080 <PyErr_Occurred@plt>
    301c:	mov	x1, x0
    3020:	mov	x0, #0x0                   	// #0
    3024:	cbz	x1, 2fd4 <PySequence_Fast@plt+0xda4>
    3028:	b	2fe8 <PySequence_Fast@plt+0xdb8>
    302c:	mov	x0, #0x0                   	// #0
    3030:	b	2fe8 <PySequence_Fast@plt+0xdb8>
    3034:	stp	x29, x30, [sp, #-16]!
    3038:	mov	x29, sp
    303c:	ldr	w0, [x0, #16]
    3040:	tbnz	w0, #31, 3054 <PySequence_Fast@plt+0xe24>
    3044:	sxtw	x0, w0
    3048:	bl	1ff0 <PyLong_FromLong@plt>
    304c:	ldp	x29, x30, [sp], #16
    3050:	ret
    3054:	bl	2380 <PySequence_Fast@plt+0x150>
    3058:	b	304c <PySequence_Fast@plt+0xe1c>
    305c:	stp	x29, x30, [sp, #-32]!
    3060:	mov	x29, sp
    3064:	stp	x19, x20, [sp, #16]
    3068:	ldr	w19, [x0, #16]
    306c:	tbz	w19, #31, 3084 <PySequence_Fast@plt+0xe54>
    3070:	mov	w19, #0x0                   	// #0
    3074:	mov	w0, w19
    3078:	ldp	x19, x20, [sp, #16]
    307c:	ldp	x29, x30, [sp], #32
    3080:	ret
    3084:	mov	w1, #0xffffffff            	// #-1
    3088:	str	w1, [x0, #16]
    308c:	bl	2140 <PyEval_SaveThread@plt>
    3090:	mov	x20, x0
    3094:	mov	w0, w19
    3098:	bl	2010 <close@plt>
    309c:	mov	w19, #0x0                   	// #0
    30a0:	tbnz	w0, #31, 30b0 <PySequence_Fast@plt+0xe80>
    30a4:	mov	x0, x20
    30a8:	bl	1f00 <PyEval_RestoreThread@plt>
    30ac:	b	3074 <PySequence_Fast@plt+0xe44>
    30b0:	bl	21d0 <__errno_location@plt>
    30b4:	ldr	w19, [x0]
    30b8:	b	30a4 <PySequence_Fast@plt+0xe74>
    30bc:	stp	x29, x30, [sp, #-32]!
    30c0:	mov	x29, sp
    30c4:	stp	x19, x20, [sp, #16]
    30c8:	mov	x20, x0
    30cc:	bl	21d0 <__errno_location@plt>
    30d0:	mov	x19, x0
    30d4:	mov	x0, x20
    30d8:	bl	305c <PySequence_Fast@plt+0xe2c>
    30dc:	str	w0, [x19]
    30e0:	tbnz	w0, #31, 3104 <PySequence_Fast@plt+0xed4>
    30e4:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    30e8:	ldr	x0, [x0, #4048]
    30ec:	ldr	x1, [x0]
    30f0:	add	x1, x1, #0x1
    30f4:	str	x1, [x0]
    30f8:	ldp	x19, x20, [sp, #16]
    30fc:	ldp	x29, x30, [sp], #32
    3100:	ret
    3104:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    3108:	ldr	x0, [x0, #4008]
    310c:	ldr	x0, [x0]
    3110:	bl	1f20 <PyErr_SetFromErrno@plt>
    3114:	mov	x0, #0x0                   	// #0
    3118:	b	30f8 <PySequence_Fast@plt+0xec8>
    311c:	stp	x29, x30, [sp, #-32]!
    3120:	mov	x29, sp
    3124:	str	x19, [sp, #16]
    3128:	mov	x19, x0
    312c:	bl	305c <PySequence_Fast@plt+0xe2c>
    3130:	ldr	x0, [x19, #8]
    3134:	ldr	x1, [x0, #320]
    3138:	mov	x0, x19
    313c:	blr	x1
    3140:	ldr	x19, [sp, #16]
    3144:	ldp	x29, x30, [sp], #32
    3148:	ret
    314c:	stp	x29, x30, [sp, #-112]!
    3150:	mov	x29, sp
    3154:	stp	x19, x20, [sp, #16]
    3158:	stp	x21, x22, [sp, #32]
    315c:	stp	x23, x24, [sp, #48]
    3160:	mov	x19, x0
    3164:	mov	x21, x1
    3168:	mov	x20, x2
    316c:	cmp	x2, #0x1
    3170:	b.hi	3270 <PySequence_Fast@plt+0x1040>  // b.pmore
    3174:	cmp	x20, #0x0
    3178:	b.le	3534 <PySequence_Fast@plt+0x1304>
    317c:	ldr	x1, [x21]
    3180:	mov	x0, #0xffffffffffffffff    	// #-1
    3184:	str	x0, [sp, #80]
    3188:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    318c:	ldr	x0, [x0, #4048]
    3190:	cmp	x1, x0
    3194:	b.eq	32f8 <PySequence_Fast@plt+0x10c8>  // b.none
    3198:	mov	w2, #0x3                   	// #3
    319c:	add	x0, sp, #0x50
    31a0:	bl	1ef0 <_PyTime_FromMillisecondsObject@plt>
    31a4:	tbnz	w0, #31, 3294 <PySequence_Fast@plt+0x1064>
    31a8:	mov	w1, #0x3                   	// #3
    31ac:	ldr	x0, [sp, #80]
    31b0:	bl	1fd0 <_PyTime_AsMilliseconds@plt>
    31b4:	mov	x21, x0
    31b8:	mov	x0, #0x80000000            	// #2147483648
    31bc:	add	x0, x21, x0
    31c0:	mov	x1, #0xffffffff            	// #4294967295
    31c4:	cmp	x0, x1
    31c8:	b.hi	32c8 <PySequence_Fast@plt+0x1098>  // b.pmore
    31cc:	ldr	x0, [sp, #80]
    31d0:	mov	x24, #0x0                   	// #0
    31d4:	tbz	x0, #63, 32e8 <PySequence_Fast@plt+0x10b8>
    31d8:	cmp	x21, #0x0
    31dc:	csinv	x21, x21, xzr, ge  // ge = tcont
    31e0:	ldr	w22, [x19, #40]
    31e4:	cbnz	w22, 3304 <PySequence_Fast@plt+0x10d4>
    31e8:	stp	x25, x26, [sp, #64]
    31ec:	ldr	w0, [x19, #24]
    31f0:	cbz	w0, 3324 <PySequence_Fast@plt+0x10f4>
    31f4:	mov	w0, #0x1                   	// #1
    31f8:	str	w0, [x19, #40]
    31fc:	mov	w25, w0
    3200:	bl	2140 <PyEval_SaveThread@plt>
    3204:	mov	x26, x0
    3208:	bl	21d0 <__errno_location@plt>
    320c:	mov	x23, x0
    3210:	str	wzr, [x0]
    3214:	mov	w2, w21
    3218:	ldrsw	x1, [x19, #28]
    321c:	ldr	x0, [x19, #32]
    3220:	bl	1f80 <poll@plt>
    3224:	mov	w20, w0
    3228:	mov	x0, x26
    322c:	bl	1f00 <PyEval_RestoreThread@plt>
    3230:	ldr	w0, [x23]
    3234:	cmp	w0, #0x4
    3238:	b.ne	34e8 <PySequence_Fast@plt+0x12b8>  // b.any
    323c:	bl	21a0 <PyErr_CheckSignals@plt>
    3240:	mov	w23, w0
    3244:	cbnz	w0, 3520 <PySequence_Fast@plt+0x12f0>
    3248:	ldr	x0, [sp, #80]
    324c:	tbnz	x0, #63, 3200 <PySequence_Fast@plt+0xfd0>
    3250:	bl	2200 <_PyTime_GetMonotonicClock@plt>
    3254:	sub	x0, x24, x0
    3258:	str	x0, [sp, #80]
    325c:	tbnz	x0, #63, 34dc <PySequence_Fast@plt+0x12ac>
    3260:	mov	w1, w25
    3264:	bl	1fd0 <_PyTime_AsMilliseconds@plt>
    3268:	mov	x21, x0
    326c:	b	3200 <PySequence_Fast@plt+0xfd0>
    3270:	mov	x3, #0x1                   	// #1
    3274:	mov	x2, #0x0                   	// #0
    3278:	mov	x1, x20
    327c:	adrp	x0, 4000 <PySequence_Fast@plt+0x1dd0>
    3280:	add	x0, x0, #0x840
    3284:	bl	2050 <_PyArg_CheckPositional@plt>
    3288:	cbnz	w0, 3174 <PySequence_Fast@plt+0xf44>
    328c:	mov	x23, #0x0                   	// #0
    3290:	b	3488 <PySequence_Fast@plt+0x1258>
    3294:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    3298:	ldr	x0, [x0, #4000]
    329c:	ldr	x0, [x0]
    32a0:	bl	1fa0 <PyErr_ExceptionMatches@plt>
    32a4:	mov	x23, #0x0                   	// #0
    32a8:	cbz	w0, 3488 <PySequence_Fast@plt+0x1258>
    32ac:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    32b0:	add	x1, x1, #0x498
    32b4:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    32b8:	ldr	x0, [x0, #4000]
    32bc:	ldr	x0, [x0]
    32c0:	bl	1f70 <PyErr_SetString@plt>
    32c4:	b	3488 <PySequence_Fast@plt+0x1258>
    32c8:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    32cc:	add	x1, x1, #0x4c0
    32d0:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    32d4:	ldr	x0, [x0, #4032]
    32d8:	ldr	x0, [x0]
    32dc:	bl	1f70 <PyErr_SetString@plt>
    32e0:	mov	x23, #0x0                   	// #0
    32e4:	b	3488 <PySequence_Fast@plt+0x1258>
    32e8:	bl	2200 <_PyTime_GetMonotonicClock@plt>
    32ec:	ldr	x1, [sp, #80]
    32f0:	add	x24, x0, x1
    32f4:	b	31d8 <PySequence_Fast@plt+0xfa8>
    32f8:	mov	x24, #0x0                   	// #0
    32fc:	mov	x21, #0xffffffffffffffff    	// #-1
    3300:	b	31e0 <PySequence_Fast@plt+0xfb0>
    3304:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    3308:	add	x1, x1, #0x510
    330c:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    3310:	ldr	x0, [x0, #3984]
    3314:	ldr	x0, [x0]
    3318:	bl	1f70 <PyErr_SetString@plt>
    331c:	mov	x23, #0x0                   	// #0
    3320:	b	3488 <PySequence_Fast@plt+0x1258>
    3324:	ldr	x20, [x19, #32]
    3328:	ldr	x0, [x19, #16]
    332c:	ldr	x1, [x0, #16]
    3330:	str	w1, [x19, #28]
    3334:	tbz	w1, #31, 334c <PySequence_Fast@plt+0x111c>
    3338:	str	x20, [x19, #32]
    333c:	bl	1f50 <PyErr_NoMemory@plt>
    3340:	mov	x23, #0x0                   	// #0
    3344:	ldp	x25, x26, [sp, #64]
    3348:	b	3488 <PySequence_Fast@plt+0x1258>
    334c:	sbfiz	x1, x1, #3, #32
    3350:	mov	x0, x20
    3354:	bl	1f90 <PyMem_Realloc@plt>
    3358:	str	x0, [x19, #32]
    335c:	cbz	x0, 3338 <PySequence_Fast@plt+0x1108>
    3360:	str	xzr, [sp, #88]
    3364:	mov	x20, #0x0                   	// #0
    3368:	add	x26, sp, #0x68
    336c:	add	x25, sp, #0x60
    3370:	add	x23, sp, #0x58
    3374:	mov	x3, x26
    3378:	mov	x2, x25
    337c:	mov	x1, x23
    3380:	ldr	x0, [x19, #16]
    3384:	bl	2110 <PyDict_Next@plt>
    3388:	cbz	w0, 33b8 <PySequence_Fast@plt+0x1188>
    338c:	ldr	x0, [sp, #96]
    3390:	bl	20a0 <PyLong_AsLong@plt>
    3394:	ldr	x1, [x19, #32]
    3398:	str	w0, [x1, x20]
    339c:	ldr	x0, [sp, #104]
    33a0:	bl	20a0 <PyLong_AsLong@plt>
    33a4:	ldr	x1, [x19, #32]
    33a8:	add	x1, x1, x20
    33ac:	strh	w0, [x1, #4]
    33b0:	add	x20, x20, #0x8
    33b4:	b	3374 <PySequence_Fast@plt+0x1144>
    33b8:	mov	w0, #0x1                   	// #1
    33bc:	str	w0, [x19, #24]
    33c0:	b	31f4 <PySequence_Fast@plt+0xfc4>
    33c4:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    33c8:	ldr	x0, [x0, #4008]
    33cc:	ldr	x0, [x0]
    33d0:	bl	1f20 <PyErr_SetFromErrno@plt>
    33d4:	mov	x23, #0x0                   	// #0
    33d8:	ldp	x25, x26, [sp, #64]
    33dc:	b	3488 <PySequence_Fast@plt+0x1258>
    33e0:	add	w22, w22, #0x1
    33e4:	sbfiz	x24, x22, #3, #32
    33e8:	add	x1, x0, x24
    33ec:	ldrsh	w1, [x1, #6]
    33f0:	cbz	w1, 33e0 <PySequence_Fast@plt+0x11b0>
    33f4:	mov	x0, x26
    33f8:	bl	2040 <PyTuple_New@plt>
    33fc:	mov	x20, x0
    3400:	cbz	x0, 3470 <PySequence_Fast@plt+0x1240>
    3404:	ldr	x0, [x19, #32]
    3408:	ldrsw	x0, [x0, x24]
    340c:	bl	1ff0 <PyLong_FromLong@plt>
    3410:	cbz	x0, 3460 <PySequence_Fast@plt+0x1230>
    3414:	str	x0, [x20, #24]
    3418:	ldr	x0, [x19, #32]
    341c:	add	x24, x0, x24
    3420:	ldrh	w0, [x24, #6]
    3424:	bl	1ff0 <PyLong_FromLong@plt>
    3428:	cbz	x0, 34ac <PySequence_Fast@plt+0x127c>
    342c:	str	x0, [x20, #32]
    3430:	ldr	x0, [x23, #24]
    3434:	str	x20, [x0, x25]
    3438:	add	w22, w22, #0x1
    343c:	add	x25, x25, #0x8
    3440:	cmp	x25, x21
    3444:	b.eq	3554 <PySequence_Fast@plt+0x1324>  // b.none
    3448:	ldr	x0, [x19, #32]
    344c:	sbfiz	x24, x22, #3, #32
    3450:	add	x1, x0, x24
    3454:	ldrsh	w1, [x1, #6]
    3458:	cbz	w1, 33e0 <PySequence_Fast@plt+0x11b0>
    345c:	b	33f4 <PySequence_Fast@plt+0x11c4>
    3460:	ldr	x0, [x20]
    3464:	sub	x0, x0, #0x1
    3468:	str	x0, [x20]
    346c:	cbz	x0, 34a0 <PySequence_Fast@plt+0x1270>
    3470:	ldr	x0, [x23]
    3474:	sub	x0, x0, #0x1
    3478:	str	x0, [x23]
    347c:	cbz	x0, 34c8 <PySequence_Fast@plt+0x1298>
    3480:	mov	x23, #0x0                   	// #0
    3484:	ldp	x25, x26, [sp, #64]
    3488:	mov	x0, x23
    348c:	ldp	x19, x20, [sp, #16]
    3490:	ldp	x21, x22, [sp, #32]
    3494:	ldp	x23, x24, [sp, #48]
    3498:	ldp	x29, x30, [sp], #112
    349c:	ret
    34a0:	mov	x0, x20
    34a4:	bl	1f40 <_Py_Dealloc@plt>
    34a8:	b	3470 <PySequence_Fast@plt+0x1240>
    34ac:	ldr	x0, [x20]
    34b0:	sub	x0, x0, #0x1
    34b4:	str	x0, [x20]
    34b8:	cbnz	x0, 3470 <PySequence_Fast@plt+0x1240>
    34bc:	mov	x0, x20
    34c0:	bl	1f40 <_Py_Dealloc@plt>
    34c4:	b	3470 <PySequence_Fast@plt+0x1240>
    34c8:	mov	x0, x23
    34cc:	bl	1f40 <_Py_Dealloc@plt>
    34d0:	mov	x23, #0x0                   	// #0
    34d4:	ldp	x25, x26, [sp, #64]
    34d8:	b	3488 <PySequence_Fast@plt+0x1258>
    34dc:	str	wzr, [x19, #40]
    34e0:	mov	w20, w23
    34e4:	b	34f0 <PySequence_Fast@plt+0x12c0>
    34e8:	str	wzr, [x19, #40]
    34ec:	tbnz	w20, #31, 33c4 <PySequence_Fast@plt+0x1194>
    34f0:	sxtw	x0, w20
    34f4:	bl	1ed0 <PyList_New@plt>
    34f8:	mov	x23, x0
    34fc:	cbz	x0, 3544 <PySequence_Fast@plt+0x1314>
    3500:	cmp	w20, #0x0
    3504:	b.le	354c <PySequence_Fast@plt+0x131c>
    3508:	sub	w21, w20, #0x1
    350c:	add	x21, x21, #0x1
    3510:	lsl	x21, x21, #3
    3514:	mov	x25, #0x0                   	// #0
    3518:	mov	x26, #0x2                   	// #2
    351c:	b	3448 <PySequence_Fast@plt+0x1218>
    3520:	str	wzr, [x19, #40]
    3524:	mov	x23, #0x0                   	// #0
    3528:	tbz	w20, #31, 34f0 <PySequence_Fast@plt+0x12c0>
    352c:	ldp	x25, x26, [sp, #64]
    3530:	b	3488 <PySequence_Fast@plt+0x1258>
    3534:	mov	x21, #0xffffffffffffffff    	// #-1
    3538:	str	x21, [sp, #80]
    353c:	mov	x24, #0x0                   	// #0
    3540:	b	31e0 <PySequence_Fast@plt+0xfb0>
    3544:	ldp	x25, x26, [sp, #64]
    3548:	b	3488 <PySequence_Fast@plt+0x1258>
    354c:	ldp	x25, x26, [sp, #64]
    3550:	b	3488 <PySequence_Fast@plt+0x1258>
    3554:	ldp	x25, x26, [sp, #64]
    3558:	b	3488 <PySequence_Fast@plt+0x1258>
    355c:	stp	x29, x30, [sp, #-48]!
    3560:	mov	x29, sp
    3564:	stp	x19, x20, [sp, #16]
    3568:	mov	x20, x0
    356c:	mov	x0, x1
    3570:	add	x1, sp, #0x2c
    3574:	bl	2c0c <PySequence_Fast@plt+0x9dc>
    3578:	mov	x19, #0x0                   	// #0
    357c:	cbz	w0, 35cc <PySequence_Fast@plt+0x139c>
    3580:	ldrsw	x0, [sp, #44]
    3584:	bl	1ff0 <PyLong_FromLong@plt>
    3588:	mov	x19, x0
    358c:	cbz	x0, 35cc <PySequence_Fast@plt+0x139c>
    3590:	mov	x1, x0
    3594:	ldr	x0, [x20, #16]
    3598:	bl	2060 <PyDict_DelItem@plt>
    359c:	cmn	w0, #0x1
    35a0:	b.eq	35dc <PySequence_Fast@plt+0x13ac>  // b.none
    35a4:	ldr	x0, [x19]
    35a8:	sub	x0, x0, #0x1
    35ac:	str	x0, [x19]
    35b0:	cbz	x0, 3604 <PySequence_Fast@plt+0x13d4>
    35b4:	str	wzr, [x20, #24]
    35b8:	adrp	x19, 16000 <PyInit_select@@Base+0x11ef8>
    35bc:	ldr	x19, [x19, #4048]
    35c0:	ldr	x0, [x19]
    35c4:	add	x0, x0, #0x1
    35c8:	str	x0, [x19]
    35cc:	mov	x0, x19
    35d0:	ldp	x19, x20, [sp, #16]
    35d4:	ldp	x29, x30, [sp], #48
    35d8:	ret
    35dc:	ldr	x0, [x19]
    35e0:	sub	x0, x0, #0x1
    35e4:	str	x0, [x19]
    35e8:	cbz	x0, 35f4 <PySequence_Fast@plt+0x13c4>
    35ec:	mov	x19, #0x0                   	// #0
    35f0:	b	35cc <PySequence_Fast@plt+0x139c>
    35f4:	mov	x0, x19
    35f8:	bl	1f40 <_Py_Dealloc@plt>
    35fc:	mov	x19, #0x0                   	// #0
    3600:	b	35cc <PySequence_Fast@plt+0x139c>
    3604:	mov	x0, x19
    3608:	bl	1f40 <_Py_Dealloc@plt>
    360c:	b	35b4 <PySequence_Fast@plt+0x1384>
    3610:	stp	x29, x30, [sp, #-64]!
    3614:	mov	x29, sp
    3618:	stp	x19, x20, [sp, #16]
    361c:	stp	x21, x22, [sp, #32]
    3620:	mov	x21, x0
    3624:	mov	x20, x1
    3628:	cmp	x2, #0x2
    362c:	b.eq	364c <PySequence_Fast@plt+0x141c>  // b.none
    3630:	mov	x1, x2
    3634:	mov	x3, #0x2                   	// #2
    3638:	mov	x2, x3
    363c:	adrp	x0, 4000 <PySequence_Fast@plt+0x1dd0>
    3640:	add	x0, x0, #0x530
    3644:	bl	2050 <_PyArg_CheckPositional@plt>
    3648:	cbz	w0, 379c <PySequence_Fast@plt+0x156c>
    364c:	add	x1, sp, #0x3c
    3650:	ldr	x0, [x20]
    3654:	bl	2c0c <PySequence_Fast@plt+0x9dc>
    3658:	mov	x19, #0x0                   	// #0
    365c:	cbz	w0, 36f8 <PySequence_Fast@plt+0x14c8>
    3660:	add	x1, sp, #0x3a
    3664:	ldr	x0, [x20, #8]
    3668:	bl	20f0 <_PyLong_UnsignedShort_Converter@plt>
    366c:	cbz	w0, 36f8 <PySequence_Fast@plt+0x14c8>
    3670:	ldrh	w22, [sp, #58]
    3674:	ldrsw	x0, [sp, #60]
    3678:	bl	1ff0 <PyLong_FromLong@plt>
    367c:	mov	x19, x0
    3680:	cbz	x0, 36f8 <PySequence_Fast@plt+0x14c8>
    3684:	mov	x1, x0
    3688:	ldr	x0, [x21, #16]
    368c:	bl	2220 <PyDict_GetItemWithError@plt>
    3690:	mov	x20, x0
    3694:	cbz	x0, 370c <PySequence_Fast@plt+0x14dc>
    3698:	and	x0, x22, #0xffff
    369c:	bl	1ff0 <PyLong_FromLong@plt>
    36a0:	mov	x20, x0
    36a4:	cbz	x0, 375c <PySequence_Fast@plt+0x152c>
    36a8:	mov	x2, x0
    36ac:	mov	x1, x19
    36b0:	ldr	x0, [x21, #16]
    36b4:	bl	2160 <PyDict_SetItem@plt>
    36b8:	mov	w22, w0
    36bc:	ldr	x1, [x19]
    36c0:	sub	x1, x1, #0x1
    36c4:	str	x1, [x19]
    36c8:	cbz	x1, 3784 <PySequence_Fast@plt+0x1554>
    36cc:	ldr	x1, [x20]
    36d0:	sub	x1, x1, #0x1
    36d4:	str	x1, [x20]
    36d8:	cbz	x1, 3790 <PySequence_Fast@plt+0x1560>
    36dc:	tbnz	w22, #31, 37a4 <PySequence_Fast@plt+0x1574>
    36e0:	str	wzr, [x21, #24]
    36e4:	adrp	x19, 16000 <PyInit_select@@Base+0x11ef8>
    36e8:	ldr	x19, [x19, #4048]
    36ec:	ldr	x0, [x19]
    36f0:	add	x0, x0, #0x1
    36f4:	str	x0, [x19]
    36f8:	mov	x0, x19
    36fc:	ldp	x19, x20, [sp, #16]
    3700:	ldp	x21, x22, [sp, #32]
    3704:	ldp	x29, x30, [sp], #64
    3708:	ret
    370c:	bl	2080 <PyErr_Occurred@plt>
    3710:	cbz	x0, 372c <PySequence_Fast@plt+0x14fc>
    3714:	ldr	x0, [x19]
    3718:	sub	x0, x0, #0x1
    371c:	str	x0, [x19]
    3720:	cbz	x0, 374c <PySequence_Fast@plt+0x151c>
    3724:	mov	x19, x20
    3728:	b	36f8 <PySequence_Fast@plt+0x14c8>
    372c:	bl	21d0 <__errno_location@plt>
    3730:	mov	w1, #0x2                   	// #2
    3734:	str	w1, [x0]
    3738:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    373c:	ldr	x0, [x0, #4008]
    3740:	ldr	x0, [x0]
    3744:	bl	1f20 <PyErr_SetFromErrno@plt>
    3748:	b	3714 <PySequence_Fast@plt+0x14e4>
    374c:	mov	x0, x19
    3750:	bl	1f40 <_Py_Dealloc@plt>
    3754:	mov	x19, x20
    3758:	b	36f8 <PySequence_Fast@plt+0x14c8>
    375c:	ldr	x0, [x19]
    3760:	sub	x0, x0, #0x1
    3764:	str	x0, [x19]
    3768:	cbz	x0, 3774 <PySequence_Fast@plt+0x1544>
    376c:	mov	x19, x20
    3770:	b	36f8 <PySequence_Fast@plt+0x14c8>
    3774:	mov	x0, x19
    3778:	bl	1f40 <_Py_Dealloc@plt>
    377c:	mov	x19, x20
    3780:	b	36f8 <PySequence_Fast@plt+0x14c8>
    3784:	mov	x0, x19
    3788:	bl	1f40 <_Py_Dealloc@plt>
    378c:	b	36cc <PySequence_Fast@plt+0x149c>
    3790:	mov	x0, x20
    3794:	bl	1f40 <_Py_Dealloc@plt>
    3798:	b	36dc <PySequence_Fast@plt+0x14ac>
    379c:	mov	x19, #0x0                   	// #0
    37a0:	b	36f8 <PySequence_Fast@plt+0x14c8>
    37a4:	mov	x19, #0x0                   	// #0
    37a8:	b	36f8 <PySequence_Fast@plt+0x14c8>
    37ac:	stp	x29, x30, [sp, #-64]!
    37b0:	mov	x29, sp
    37b4:	stp	x19, x20, [sp, #16]
    37b8:	stp	x21, x22, [sp, #32]
    37bc:	mov	x21, x0
    37c0:	mov	x20, x1
    37c4:	mov	x19, x2
    37c8:	mov	w0, #0x7                   	// #7
    37cc:	strh	w0, [sp, #58]
    37d0:	sub	x0, x2, #0x1
    37d4:	cmp	x0, #0x1
    37d8:	b.ls	37f8 <PySequence_Fast@plt+0x15c8>  // b.plast
    37dc:	mov	x3, #0x2                   	// #2
    37e0:	mov	x2, #0x1                   	// #1
    37e4:	mov	x1, x19
    37e8:	adrp	x0, 4000 <PySequence_Fast@plt+0x1dd0>
    37ec:	add	x0, x0, #0x538
    37f0:	bl	2050 <_PyArg_CheckPositional@plt>
    37f4:	cbz	w0, 38e8 <PySequence_Fast@plt+0x16b8>
    37f8:	add	x1, sp, #0x3c
    37fc:	ldr	x0, [x20]
    3800:	bl	2c0c <PySequence_Fast@plt+0x9dc>
    3804:	cbz	w0, 38f0 <PySequence_Fast@plt+0x16c0>
    3808:	cmp	x19, #0x1
    380c:	b.le	3820 <PySequence_Fast@plt+0x15f0>
    3810:	add	x1, sp, #0x3a
    3814:	ldr	x0, [x20, #8]
    3818:	bl	20f0 <_PyLong_UnsignedShort_Converter@plt>
    381c:	cbz	w0, 38f8 <PySequence_Fast@plt+0x16c8>
    3820:	ldrh	w20, [sp, #58]
    3824:	ldrsw	x0, [sp, #60]
    3828:	bl	1ff0 <PyLong_FromLong@plt>
    382c:	mov	x19, x0
    3830:	cbz	x0, 3894 <PySequence_Fast@plt+0x1664>
    3834:	and	x0, x20, #0xffff
    3838:	bl	1ff0 <PyLong_FromLong@plt>
    383c:	mov	x22, x0
    3840:	cbz	x0, 38a8 <PySequence_Fast@plt+0x1678>
    3844:	mov	x2, x0
    3848:	mov	x1, x19
    384c:	ldr	x0, [x21, #16]
    3850:	bl	2160 <PyDict_SetItem@plt>
    3854:	mov	w20, w0
    3858:	ldr	x1, [x19]
    385c:	sub	x1, x1, #0x1
    3860:	str	x1, [x19]
    3864:	cbz	x1, 38d0 <PySequence_Fast@plt+0x16a0>
    3868:	ldr	x1, [x22]
    386c:	sub	x1, x1, #0x1
    3870:	str	x1, [x22]
    3874:	cbz	x1, 38dc <PySequence_Fast@plt+0x16ac>
    3878:	tbnz	w20, #31, 3900 <PySequence_Fast@plt+0x16d0>
    387c:	str	wzr, [x21, #24]
    3880:	adrp	x19, 16000 <PyInit_select@@Base+0x11ef8>
    3884:	ldr	x19, [x19, #4048]
    3888:	ldr	x0, [x19]
    388c:	add	x0, x0, #0x1
    3890:	str	x0, [x19]
    3894:	mov	x0, x19
    3898:	ldp	x19, x20, [sp, #16]
    389c:	ldp	x21, x22, [sp, #32]
    38a0:	ldp	x29, x30, [sp], #64
    38a4:	ret
    38a8:	ldr	x0, [x19]
    38ac:	sub	x0, x0, #0x1
    38b0:	str	x0, [x19]
    38b4:	cbz	x0, 38c0 <PySequence_Fast@plt+0x1690>
    38b8:	mov	x19, x22
    38bc:	b	3894 <PySequence_Fast@plt+0x1664>
    38c0:	mov	x0, x19
    38c4:	bl	1f40 <_Py_Dealloc@plt>
    38c8:	mov	x19, x22
    38cc:	b	3894 <PySequence_Fast@plt+0x1664>
    38d0:	mov	x0, x19
    38d4:	bl	1f40 <_Py_Dealloc@plt>
    38d8:	b	3868 <PySequence_Fast@plt+0x1638>
    38dc:	mov	x0, x22
    38e0:	bl	1f40 <_Py_Dealloc@plt>
    38e4:	b	3878 <PySequence_Fast@plt+0x1648>
    38e8:	mov	x19, #0x0                   	// #0
    38ec:	b	3894 <PySequence_Fast@plt+0x1664>
    38f0:	mov	x19, #0x0                   	// #0
    38f4:	b	3894 <PySequence_Fast@plt+0x1664>
    38f8:	mov	x19, #0x0                   	// #0
    38fc:	b	3894 <PySequence_Fast@plt+0x1664>
    3900:	mov	x19, #0x0                   	// #0
    3904:	b	3894 <PySequence_Fast@plt+0x1664>
    3908:	stp	x29, x30, [sp, #-32]!
    390c:	mov	x29, sp
    3910:	str	x19, [sp, #16]
    3914:	mov	x19, x0
    3918:	ldr	x0, [x0, #32]
    391c:	cbz	x0, 3924 <PySequence_Fast@plt+0x16f4>
    3920:	bl	1f10 <PyMem_Free@plt>
    3924:	ldr	x0, [x19, #16]
    3928:	cbz	x0, 393c <PySequence_Fast@plt+0x170c>
    392c:	ldr	x1, [x0]
    3930:	sub	x1, x1, #0x1
    3934:	str	x1, [x0]
    3938:	cbz	x1, 3950 <PySequence_Fast@plt+0x1720>
    393c:	mov	x0, x19
    3940:	bl	1fc0 <PyObject_Free@plt>
    3944:	ldr	x19, [sp, #16]
    3948:	ldp	x29, x30, [sp], #32
    394c:	ret
    3950:	bl	1f40 <_Py_Dealloc@plt>
    3954:	b	393c <PySequence_Fast@plt+0x170c>
    3958:	stp	x29, x30, [sp, #-32]!
    395c:	mov	x29, sp
    3960:	stp	x19, x20, [sp, #16]
    3964:	adrp	x0, 17000 <PyInit_select@@Base+0x12ef8>
    3968:	add	x0, x0, #0x360
    396c:	add	x0, x0, #0x158
    3970:	bl	2130 <_PyObject_New@plt>
    3974:	mov	x19, x0
    3978:	cbz	x0, 3998 <PySequence_Fast@plt+0x1768>
    397c:	str	wzr, [x0, #24]
    3980:	str	xzr, [x0, #32]
    3984:	str	wzr, [x0, #40]
    3988:	bl	2100 <PyDict_New@plt>
    398c:	mov	x20, x0
    3990:	str	x0, [x19, #16]
    3994:	cbz	x0, 39a8 <PySequence_Fast@plt+0x1778>
    3998:	mov	x0, x19
    399c:	ldp	x19, x20, [sp, #16]
    39a0:	ldp	x29, x30, [sp], #32
    39a4:	ret
    39a8:	ldr	x0, [x19]
    39ac:	sub	x0, x0, #0x1
    39b0:	str	x0, [x19]
    39b4:	cbz	x0, 39c0 <PySequence_Fast@plt+0x1790>
    39b8:	mov	x19, x20
    39bc:	b	3998 <PySequence_Fast@plt+0x1768>
    39c0:	mov	x0, x19
    39c4:	bl	1f40 <_Py_Dealloc@plt>
    39c8:	mov	x19, x20
    39cc:	b	3998 <PySequence_Fast@plt+0x1768>
    39d0:	stp	x29, x30, [sp, #-96]!
    39d4:	mov	x29, sp
    39d8:	stp	x19, x20, [sp, #16]
    39dc:	stp	x21, x22, [sp, #32]
    39e0:	stp	x23, x24, [sp, #48]
    39e4:	stp	x25, x26, [sp, #64]
    39e8:	str	x27, [sp, #80]
    39ec:	mov	x24, x1
    39f0:	mov	x19, x2
    39f4:	str	xzr, [x2]
    39f8:	add	x3, x1, #0x80
    39fc:	str	xzr, [x1], #8
    3a00:	cmp	x1, x3
    3a04:	b.ne	39fc <PySequence_Fast@plt+0x17cc>  // b.any
    3a08:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    3a0c:	add	x1, x1, #0x548
    3a10:	bl	2230 <PySequence_Fast@plt>
    3a14:	mov	x22, x0
    3a18:	cbz	x0, 3ba4 <PySequence_Fast@plt+0x1974>
    3a1c:	ldr	x0, [x0, #16]
    3a20:	cmp	x0, #0x0
    3a24:	b.le	3b60 <PySequence_Fast@plt+0x1930>
    3a28:	mov	x21, #0x0                   	// #0
    3a2c:	mov	w23, #0xffffffff            	// #-1
    3a30:	add	x27, x22, #0x18
    3a34:	mov	x25, #0x1                   	// #1
    3a38:	mov	w26, w23
    3a3c:	b	3ad4 <PySequence_Fast@plt+0x18a4>
    3a40:	ldr	x20, [x27, x21, lsl #3]
    3a44:	cbz	x20, 3b14 <PySequence_Fast@plt+0x18e4>
    3a48:	ldr	x0, [x20]
    3a4c:	add	x0, x0, #0x1
    3a50:	str	x0, [x20]
    3a54:	mov	x0, x20
    3a58:	bl	2180 <PyObject_AsFileDescriptor@plt>
    3a5c:	cmn	w0, #0x1
    3a60:	b.eq	3b04 <PySequence_Fast@plt+0x18d4>  // b.none
    3a64:	cmp	w0, #0x3ff
    3a68:	b.hi	3aec <PySequence_Fast@plt+0x18bc>  // b.pmore
    3a6c:	cmp	w23, w0
    3a70:	csel	w23, w23, w0, ge  // ge = tcont
    3a74:	add	w1, w0, #0x3f
    3a78:	cmp	w0, #0x0
    3a7c:	csel	w1, w1, w0, lt  // lt = tstop
    3a80:	asr	w1, w1, #6
    3a84:	sxtw	x1, w1
    3a88:	negs	w3, w0
    3a8c:	and	w2, w0, #0x3f
    3a90:	and	w3, w3, #0x3f
    3a94:	csneg	w2, w2, w3, mi  // mi = first
    3a98:	lsl	x2, x25, x2
    3a9c:	ldr	x3, [x24, x1, lsl #3]
    3aa0:	orr	x2, x3, x2
    3aa4:	str	x2, [x24, x1, lsl #3]
    3aa8:	cmp	x21, #0x400
    3aac:	b.eq	3b44 <PySequence_Fast@plt+0x1914>  // b.none
    3ab0:	str	x20, [x19]
    3ab4:	str	w0, [x19, #8]
    3ab8:	str	wzr, [x19, #12]
    3abc:	str	w26, [x19, #28]
    3ac0:	add	x21, x21, #0x1
    3ac4:	add	x19, x19, #0x10
    3ac8:	ldr	x0, [x22, #16]
    3acc:	cmp	x0, x21
    3ad0:	b.le	3b64 <PySequence_Fast@plt+0x1934>
    3ad4:	ldr	x0, [x22, #8]
    3ad8:	ldr	x0, [x0, #168]
    3adc:	tbz	w0, #25, 3a40 <PySequence_Fast@plt+0x1810>
    3ae0:	ldr	x0, [x22, #24]
    3ae4:	ldr	x20, [x0, x21, lsl #3]
    3ae8:	b	3a44 <PySequence_Fast@plt+0x1814>
    3aec:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    3af0:	add	x1, x1, #0x568
    3af4:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    3af8:	ldr	x0, [x0, #3992]
    3afc:	ldr	x0, [x0]
    3b00:	bl	1f70 <PyErr_SetString@plt>
    3b04:	ldr	x0, [x20]
    3b08:	sub	x0, x0, #0x1
    3b0c:	str	x0, [x20]
    3b10:	cbz	x0, 3b88 <PySequence_Fast@plt+0x1958>
    3b14:	ldr	x1, [x22]
    3b18:	sub	x1, x1, #0x1
    3b1c:	str	x1, [x22]
    3b20:	mov	w0, #0xffffffff            	// #-1
    3b24:	cbz	x1, 3b94 <PySequence_Fast@plt+0x1964>
    3b28:	ldp	x19, x20, [sp, #16]
    3b2c:	ldp	x21, x22, [sp, #32]
    3b30:	ldp	x23, x24, [sp, #48]
    3b34:	ldp	x25, x26, [sp, #64]
    3b38:	ldr	x27, [sp, #80]
    3b3c:	ldp	x29, x30, [sp], #96
    3b40:	ret
    3b44:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    3b48:	add	x1, x1, #0x590
    3b4c:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    3b50:	ldr	x0, [x0, #3992]
    3b54:	ldr	x0, [x0]
    3b58:	bl	1f70 <PyErr_SetString@plt>
    3b5c:	b	3b04 <PySequence_Fast@plt+0x18d4>
    3b60:	mov	w23, #0xffffffff            	// #-1
    3b64:	ldr	x0, [x22]
    3b68:	sub	x0, x0, #0x1
    3b6c:	str	x0, [x22]
    3b70:	cbz	x0, 3b7c <PySequence_Fast@plt+0x194c>
    3b74:	add	w0, w23, #0x1
    3b78:	b	3b28 <PySequence_Fast@plt+0x18f8>
    3b7c:	mov	x0, x22
    3b80:	bl	1f40 <_Py_Dealloc@plt>
    3b84:	b	3b74 <PySequence_Fast@plt+0x1944>
    3b88:	mov	x0, x20
    3b8c:	bl	1f40 <_Py_Dealloc@plt>
    3b90:	b	3b14 <PySequence_Fast@plt+0x18e4>
    3b94:	mov	x0, x22
    3b98:	bl	1f40 <_Py_Dealloc@plt>
    3b9c:	mov	w0, #0xffffffff            	// #-1
    3ba0:	b	3b28 <PySequence_Fast@plt+0x18f8>
    3ba4:	mov	w0, #0xffffffff            	// #-1
    3ba8:	b	3b28 <PySequence_Fast@plt+0x18f8>
    3bac:	stp	x29, x30, [sp, #-64]!
    3bb0:	mov	x29, sp
    3bb4:	stp	x19, x20, [sp, #16]
    3bb8:	stp	x21, x22, [sp, #32]
    3bbc:	stp	x23, x24, [sp, #48]
    3bc0:	mov	x21, x0
    3bc4:	mov	x20, x1
    3bc8:	ldr	w0, [x1, #12]
    3bcc:	tbnz	w0, #31, 3c4c <PySequence_Fast@plt+0x1a1c>
    3bd0:	mov	w0, #0x0                   	// #0
    3bd4:	mov	w4, #0x0                   	// #0
    3bd8:	mov	x5, #0x1                   	// #1
    3bdc:	ldr	w1, [x1, #8]
    3be0:	add	w3, w1, #0x3f
    3be4:	cmp	w1, #0x0
    3be8:	csel	w3, w3, w1, lt  // lt = tstop
    3bec:	asr	w3, w3, #6
    3bf0:	negs	w2, w1
    3bf4:	and	w1, w1, #0x3f
    3bf8:	and	w2, w2, #0x3f
    3bfc:	csneg	w1, w1, w2, mi  // mi = first
    3c00:	lsl	x1, x5, x1
    3c04:	ldr	x2, [x21, w3, sxtw #3]
    3c08:	tst	x1, x2
    3c0c:	cinc	w0, w0, ne  // ne = any
    3c10:	add	w4, w4, #0x1
    3c14:	add	x1, x20, w4, sxtw #4
    3c18:	ldr	w2, [x1, #12]
    3c1c:	tbz	w2, #31, 3bdc <PySequence_Fast@plt+0x19ac>
    3c20:	sxtw	x0, w0
    3c24:	bl	1ed0 <PyList_New@plt>
    3c28:	mov	x24, x0
    3c2c:	cbz	x0, 3c68 <PySequence_Fast@plt+0x1a38>
    3c30:	ldr	w0, [x20, #12]
    3c34:	tbnz	w0, #31, 3c68 <PySequence_Fast@plt+0x1a38>
    3c38:	mov	x3, x20
    3c3c:	mov	w19, #0x0                   	// #0
    3c40:	mov	w23, #0x0                   	// #0
    3c44:	mov	x22, #0x1                   	// #1
    3c48:	b	3ca0 <PySequence_Fast@plt+0x1a70>
    3c4c:	mov	w0, #0x0                   	// #0
    3c50:	b	3c20 <PySequence_Fast@plt+0x19f0>
    3c54:	ldr	x0, [x24]
    3c58:	sub	x0, x0, #0x1
    3c5c:	str	x0, [x24]
    3c60:	cbz	x0, 3c80 <PySequence_Fast@plt+0x1a50>
    3c64:	mov	x24, #0x0                   	// #0
    3c68:	mov	x0, x24
    3c6c:	ldp	x19, x20, [sp, #16]
    3c70:	ldp	x21, x22, [sp, #32]
    3c74:	ldp	x23, x24, [sp, #48]
    3c78:	ldp	x29, x30, [sp], #64
    3c7c:	ret
    3c80:	mov	x0, x24
    3c84:	bl	1f40 <_Py_Dealloc@plt>
    3c88:	mov	x24, #0x0                   	// #0
    3c8c:	b	3c68 <PySequence_Fast@plt+0x1a38>
    3c90:	add	w19, w19, #0x1
    3c94:	add	x3, x20, w19, sxtw #4
    3c98:	ldr	w0, [x3, #12]
    3c9c:	tbnz	w0, #31, 3c68 <PySequence_Fast@plt+0x1a38>
    3ca0:	ldr	w2, [x3, #8]
    3ca4:	add	w1, w2, #0x3f
    3ca8:	cmp	w2, #0x0
    3cac:	csel	w1, w1, w2, lt  // lt = tstop
    3cb0:	asr	w1, w1, #6
    3cb4:	negs	w0, w2
    3cb8:	and	w2, w2, #0x3f
    3cbc:	and	w0, w0, #0x3f
    3cc0:	csneg	w2, w2, w0, mi  // mi = first
    3cc4:	lsl	x2, x22, x2
    3cc8:	ldr	x0, [x21, w1, sxtw #3]
    3ccc:	tst	x2, x0
    3cd0:	b.eq	3c90 <PySequence_Fast@plt+0x1a60>  // b.none
    3cd4:	ldr	x2, [x3]
    3cd8:	str	xzr, [x3]
    3cdc:	sxtw	x1, w23
    3ce0:	mov	x0, x24
    3ce4:	bl	20c0 <PyList_SetItem@plt>
    3ce8:	tbnz	w0, #31, 3c54 <PySequence_Fast@plt+0x1a24>
    3cec:	add	w23, w23, #0x1
    3cf0:	b	3c90 <PySequence_Fast@plt+0x1a60>
    3cf4:	mov	x12, #0xc240                	// #49728
    3cf8:	sub	sp, sp, x12
    3cfc:	stp	x29, x30, [sp]
    3d00:	mov	x29, sp
    3d04:	stp	x19, x20, [sp, #16]
    3d08:	stp	x21, x22, [sp, #32]
    3d0c:	stp	x23, x24, [sp, #48]
    3d10:	mov	x19, x1
    3d14:	mov	x20, x2
    3d18:	mov	x21, x3
    3d1c:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    3d20:	ldr	x0, [x0, #4048]
    3d24:	cmp	x4, x0
    3d28:	b.eq	3ee0 <PySequence_Fast@plt+0x1cb0>  // b.none
    3d2c:	mov	x1, x4
    3d30:	mov	w2, #0x3                   	// #3
    3d34:	add	x0, sp, #0x78
    3d38:	bl	1fb0 <_PyTime_FromSecondsObject@plt>
    3d3c:	tbnz	w0, #31, 3e8c <PySequence_Fast@plt+0x1c5c>
    3d40:	mov	w2, #0x3                   	// #3
    3d44:	add	x1, sp, #0x80
    3d48:	ldr	x0, [sp, #120]
    3d4c:	bl	2190 <_PyTime_AsTimeval@plt>
    3d50:	cmn	w0, #0x1
    3d54:	b.eq	4078 <PySequence_Fast@plt+0x1e48>  // b.none
    3d58:	ldr	x0, [sp, #128]
    3d5c:	add	x23, sp, #0x80
    3d60:	tbnz	x0, #63, 3ec0 <PySequence_Fast@plt+0x1c90>
    3d64:	mov	w0, #0xffffffff            	// #-1
    3d68:	add	x1, sp, #0x8, lsl #12
    3d6c:	add	x1, x1, #0x10
    3d70:	str	w0, [x1, #556]
    3d74:	add	x1, sp, #0x4, lsl #12
    3d78:	add	x1, x1, #0x10
    3d7c:	str	w0, [x1, #540]
    3d80:	str	w0, [sp, #540]
    3d84:	add	x2, sp, #0x8, lsl #12
    3d88:	add	x2, x2, #0x230
    3d8c:	add	x1, sp, #0x190
    3d90:	mov	x0, x19
    3d94:	bl	39d0 <PySequence_Fast@plt+0x17a0>
    3d98:	mov	w19, w0
    3d9c:	mov	x24, #0x0                   	// #0
    3da0:	tbnz	w0, #31, 402c <PySequence_Fast@plt+0x1dfc>
    3da4:	add	x2, sp, #0x4, lsl #12
    3da8:	add	x2, x2, #0x220
    3dac:	add	x1, sp, #0x110
    3db0:	mov	x0, x20
    3db4:	bl	39d0 <PySequence_Fast@plt+0x17a0>
    3db8:	mov	w20, w0
    3dbc:	tbnz	w0, #31, 402c <PySequence_Fast@plt+0x1dfc>
    3dc0:	add	x2, sp, #0x210
    3dc4:	add	x1, sp, #0x90
    3dc8:	mov	x0, x21
    3dcc:	bl	39d0 <PySequence_Fast@plt+0x17a0>
    3dd0:	tbnz	w0, #31, 402c <PySequence_Fast@plt+0x1dfc>
    3dd4:	stp	x25, x26, [sp, #64]
    3dd8:	stp	x27, x28, [sp, #80]
    3ddc:	cmp	w19, w20
    3de0:	csel	w19, w19, w20, ge  // ge = tcont
    3de4:	cmp	w19, w0
    3de8:	csel	w22, w19, w0, ge  // ge = tcont
    3dec:	str	xzr, [sp, #104]
    3df0:	cbz	x23, 3e04 <PySequence_Fast@plt+0x1bd4>
    3df4:	bl	2200 <_PyTime_GetMonotonicClock@plt>
    3df8:	ldr	x1, [sp, #120]
    3dfc:	add	x0, x0, x1
    3e00:	str	x0, [sp, #104]
    3e04:	add	x26, sp, #0x90
    3e08:	add	x25, sp, #0x110
    3e0c:	add	x24, sp, #0x190
    3e10:	add	x28, sp, #0x80
    3e14:	mov	w27, #0x1                   	// #1
    3e18:	bl	2140 <PyEval_SaveThread@plt>
    3e1c:	mov	x20, x0
    3e20:	bl	21d0 <__errno_location@plt>
    3e24:	mov	x19, x0
    3e28:	str	wzr, [x0]
    3e2c:	mov	x4, x23
    3e30:	mov	x3, x26
    3e34:	mov	x2, x25
    3e38:	mov	x1, x24
    3e3c:	mov	w0, w22
    3e40:	bl	2170 <select@plt>
    3e44:	mov	w21, w0
    3e48:	mov	x0, x20
    3e4c:	bl	1f00 <PyEval_RestoreThread@plt>
    3e50:	ldr	w0, [x19]
    3e54:	cmp	w0, #0x4
    3e58:	b.ne	3f28 <PySequence_Fast@plt+0x1cf8>  // b.any
    3e5c:	bl	21a0 <PyErr_CheckSignals@plt>
    3e60:	cbnz	w0, 4020 <PySequence_Fast@plt+0x1df0>
    3e64:	cbz	x23, 3e18 <PySequence_Fast@plt+0x1be8>
    3e68:	bl	2200 <_PyTime_GetMonotonicClock@plt>
    3e6c:	ldr	x1, [sp, #104]
    3e70:	sub	x0, x1, x0
    3e74:	str	x0, [sp, #120]
    3e78:	tbnz	x0, #63, 3ee8 <PySequence_Fast@plt+0x1cb8>
    3e7c:	mov	w2, w27
    3e80:	mov	x1, x28
    3e84:	bl	20b0 <_PyTime_AsTimeval_noraise@plt>
    3e88:	b	3e18 <PySequence_Fast@plt+0x1be8>
    3e8c:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    3e90:	ldr	x0, [x0, #4000]
    3e94:	ldr	x0, [x0]
    3e98:	bl	1fa0 <PyErr_ExceptionMatches@plt>
    3e9c:	mov	x24, #0x0                   	// #0
    3ea0:	cbz	w0, 404c <PySequence_Fast@plt+0x1e1c>
    3ea4:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    3ea8:	add	x1, x1, #0x5b8
    3eac:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    3eb0:	ldr	x0, [x0, #4000]
    3eb4:	ldr	x0, [x0]
    3eb8:	bl	1f70 <PyErr_SetString@plt>
    3ebc:	b	404c <PySequence_Fast@plt+0x1e1c>
    3ec0:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    3ec4:	add	x1, x1, #0x5d8
    3ec8:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    3ecc:	ldr	x0, [x0, #3992]
    3ed0:	ldr	x0, [x0]
    3ed4:	bl	1f70 <PyErr_SetString@plt>
    3ed8:	mov	x24, #0x0                   	// #0
    3edc:	b	404c <PySequence_Fast@plt+0x1e1c>
    3ee0:	mov	x23, #0x0                   	// #0
    3ee4:	b	3d64 <PySequence_Fast@plt+0x1b34>
    3ee8:	add	x0, sp, #0x190
    3eec:	add	x1, x0, #0x80
    3ef0:	str	xzr, [x0], #8
    3ef4:	cmp	x0, x1
    3ef8:	b.ne	3ef0 <PySequence_Fast@plt+0x1cc0>  // b.any
    3efc:	add	x0, sp, #0x110
    3f00:	add	x1, x0, #0x80
    3f04:	str	xzr, [x0], #8
    3f08:	cmp	x0, x1
    3f0c:	b.ne	3f04 <PySequence_Fast@plt+0x1cd4>  // b.any
    3f10:	add	x0, sp, #0x90
    3f14:	add	x1, x0, #0x80
    3f18:	str	xzr, [x0], #8
    3f1c:	cmp	x0, x1
    3f20:	b.ne	3f18 <PySequence_Fast@plt+0x1ce8>  // b.any
    3f24:	b	3f2c <PySequence_Fast@plt+0x1cfc>
    3f28:	tbnz	w21, #31, 3fb8 <PySequence_Fast@plt+0x1d88>
    3f2c:	add	x1, sp, #0x8, lsl #12
    3f30:	add	x1, x1, #0x230
    3f34:	add	x0, sp, #0x190
    3f38:	bl	3bac <PySequence_Fast@plt+0x197c>
    3f3c:	mov	x21, x0
    3f40:	add	x1, sp, #0x4, lsl #12
    3f44:	add	x1, x1, #0x220
    3f48:	add	x0, sp, #0x110
    3f4c:	bl	3bac <PySequence_Fast@plt+0x197c>
    3f50:	mov	x20, x0
    3f54:	add	x1, sp, #0x210
    3f58:	add	x0, sp, #0x90
    3f5c:	bl	3bac <PySequence_Fast@plt+0x197c>
    3f60:	mov	x19, x0
    3f64:	bl	2080 <PyErr_Occurred@plt>
    3f68:	mov	x24, #0x0                   	// #0
    3f6c:	cbz	x0, 3fd8 <PySequence_Fast@plt+0x1da8>
    3f70:	cbz	x21, 3f84 <PySequence_Fast@plt+0x1d54>
    3f74:	ldr	x0, [x21]
    3f78:	sub	x0, x0, #0x1
    3f7c:	str	x0, [x21]
    3f80:	cbz	x0, 3ff4 <PySequence_Fast@plt+0x1dc4>
    3f84:	cbz	x20, 3f98 <PySequence_Fast@plt+0x1d68>
    3f88:	ldr	x0, [x20]
    3f8c:	sub	x0, x0, #0x1
    3f90:	str	x0, [x20]
    3f94:	cbz	x0, 4000 <PySequence_Fast@plt+0x1dd0>
    3f98:	cbz	x19, 406c <PySequence_Fast@plt+0x1e3c>
    3f9c:	ldr	x0, [x19]
    3fa0:	sub	x0, x0, #0x1
    3fa4:	str	x0, [x19]
    3fa8:	cbz	x0, 400c <PySequence_Fast@plt+0x1ddc>
    3fac:	ldp	x25, x26, [sp, #64]
    3fb0:	ldp	x27, x28, [sp, #80]
    3fb4:	b	402c <PySequence_Fast@plt+0x1dfc>
    3fb8:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    3fbc:	ldr	x0, [x0, #4008]
    3fc0:	ldr	x0, [x0]
    3fc4:	bl	1f20 <PyErr_SetFromErrno@plt>
    3fc8:	mov	x24, #0x0                   	// #0
    3fcc:	ldp	x25, x26, [sp, #64]
    3fd0:	ldp	x27, x28, [sp, #80]
    3fd4:	b	402c <PySequence_Fast@plt+0x1dfc>
    3fd8:	mov	x3, x19
    3fdc:	mov	x2, x20
    3fe0:	mov	x1, x21
    3fe4:	mov	x0, #0x3                   	// #3
    3fe8:	bl	2210 <PyTuple_Pack@plt>
    3fec:	mov	x24, x0
    3ff0:	b	3f70 <PySequence_Fast@plt+0x1d40>
    3ff4:	mov	x0, x21
    3ff8:	bl	1f40 <_Py_Dealloc@plt>
    3ffc:	b	3f84 <PySequence_Fast@plt+0x1d54>
    4000:	mov	x0, x20
    4004:	bl	1f40 <_Py_Dealloc@plt>
    4008:	b	3f98 <PySequence_Fast@plt+0x1d68>
    400c:	mov	x0, x19
    4010:	bl	1f40 <_Py_Dealloc@plt>
    4014:	ldp	x25, x26, [sp, #64]
    4018:	ldp	x27, x28, [sp, #80]
    401c:	b	402c <PySequence_Fast@plt+0x1dfc>
    4020:	mov	x24, #0x0                   	// #0
    4024:	ldp	x25, x26, [sp, #64]
    4028:	ldp	x27, x28, [sp, #80]
    402c:	add	x0, sp, #0x8, lsl #12
    4030:	add	x0, x0, #0x230
    4034:	bl	2738 <PySequence_Fast@plt+0x508>
    4038:	add	x0, sp, #0x4, lsl #12
    403c:	add	x0, x0, #0x220
    4040:	bl	2738 <PySequence_Fast@plt+0x508>
    4044:	add	x0, sp, #0x210
    4048:	bl	2738 <PySequence_Fast@plt+0x508>
    404c:	mov	x0, x24
    4050:	ldp	x19, x20, [sp, #16]
    4054:	ldp	x21, x22, [sp, #32]
    4058:	ldp	x23, x24, [sp, #48]
    405c:	ldp	x29, x30, [sp]
    4060:	mov	x12, #0xc240                	// #49728
    4064:	add	sp, sp, x12
    4068:	ret
    406c:	ldp	x25, x26, [sp, #64]
    4070:	ldp	x27, x28, [sp, #80]
    4074:	b	402c <PySequence_Fast@plt+0x1dfc>
    4078:	mov	x24, #0x0                   	// #0
    407c:	b	404c <PySequence_Fast@plt+0x1e1c>
    4080:	stp	x29, x30, [sp, #-48]!
    4084:	mov	x29, sp
    4088:	stp	x19, x20, [sp, #16]
    408c:	str	x21, [sp, #32]
    4090:	mov	x21, x0
    4094:	mov	x19, x1
    4098:	mov	x20, x2
    409c:	sub	x1, x2, #0x3
    40a0:	cmp	x1, #0x1
    40a4:	b.hi	40d8 <PySequence_Fast@plt+0x1ea8>  // b.pmore
    40a8:	ldr	x1, [x19]
    40ac:	ldr	x2, [x19, #8]
    40b0:	ldr	x3, [x19, #16]
    40b4:	cmp	x20, #0x3
    40b8:	b.le	40fc <PySequence_Fast@plt+0x1ecc>
    40bc:	ldr	x4, [x19, #24]
    40c0:	mov	x0, x21
    40c4:	bl	3cf4 <PySequence_Fast@plt+0x1ac4>
    40c8:	ldp	x19, x20, [sp, #16]
    40cc:	ldr	x21, [sp, #32]
    40d0:	ldp	x29, x30, [sp], #48
    40d4:	ret
    40d8:	mov	x3, #0x4                   	// #4
    40dc:	mov	x2, #0x3                   	// #3
    40e0:	mov	x1, x20
    40e4:	adrp	x0, 4000 <PySequence_Fast@plt+0x1dd0>
    40e8:	add	x0, x0, #0x5f8
    40ec:	bl	2050 <_PyArg_CheckPositional@plt>
    40f0:	cbnz	w0, 40a8 <PySequence_Fast@plt+0x1e78>
    40f4:	mov	x0, #0x0                   	// #0
    40f8:	b	40c8 <PySequence_Fast@plt+0x1e98>
    40fc:	adrp	x4, 16000 <PyInit_select@@Base+0x11ef8>
    4100:	ldr	x4, [x4, #4048]
    4104:	b	40c0 <PySequence_Fast@plt+0x1e90>

0000000000004108 <PyInit_select@@Base>:
    4108:	stp	x29, x30, [sp, #-32]!
    410c:	mov	x29, sp
    4110:	str	x19, [sp, #16]
    4114:	mov	w1, #0x3f5                 	// #1013
    4118:	adrp	x0, 17000 <PyInit_select@@Base+0x12ef8>
    411c:	add	x0, x0, #0x360
    4120:	add	x0, x0, #0x2f8
    4124:	bl	2090 <PyModule_Create2@plt>
    4128:	mov	x19, x0
    412c:	cbz	x0, 43e0 <PyInit_select@@Base+0x2d8>
    4130:	adrp	x0, 16000 <PyInit_select@@Base+0x11ef8>
    4134:	ldr	x0, [x0, #4008]
    4138:	ldr	x2, [x0]
    413c:	ldr	x1, [x2]
    4140:	add	x1, x1, #0x1
    4144:	str	x1, [x2]
    4148:	ldr	x2, [x0]
    414c:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    4150:	add	x1, x1, #0x600
    4154:	mov	x0, x19
    4158:	bl	2150 <PyModule_AddObject@plt>
    415c:	mov	x2, #0x1000                	// #4096
    4160:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    4164:	add	x1, x1, #0x608
    4168:	mov	x0, x19
    416c:	bl	1ee0 <PyModule_AddIntConstant@plt>
    4170:	adrp	x0, 17000 <PyInit_select@@Base+0x12ef8>
    4174:	add	x0, x0, #0x360
    4178:	add	x0, x0, #0x158
    417c:	bl	1fe0 <PyType_Ready@plt>
    4180:	tbnz	w0, #31, 43f0 <PyInit_select@@Base+0x2e8>
    4184:	mov	x2, #0x1                   	// #1
    4188:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    418c:	add	x1, x1, #0x618
    4190:	mov	x0, x19
    4194:	bl	1ee0 <PyModule_AddIntConstant@plt>
    4198:	mov	x2, #0x2                   	// #2
    419c:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    41a0:	add	x1, x1, #0x620
    41a4:	mov	x0, x19
    41a8:	bl	1ee0 <PyModule_AddIntConstant@plt>
    41ac:	mov	x2, #0x4                   	// #4
    41b0:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    41b4:	add	x1, x1, #0x628
    41b8:	mov	x0, x19
    41bc:	bl	1ee0 <PyModule_AddIntConstant@plt>
    41c0:	mov	x2, #0x8                   	// #8
    41c4:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    41c8:	add	x1, x1, #0x630
    41cc:	mov	x0, x19
    41d0:	bl	1ee0 <PyModule_AddIntConstant@plt>
    41d4:	mov	x2, #0x10                  	// #16
    41d8:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    41dc:	add	x1, x1, #0x638
    41e0:	mov	x0, x19
    41e4:	bl	1ee0 <PyModule_AddIntConstant@plt>
    41e8:	mov	x2, #0x20                  	// #32
    41ec:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    41f0:	add	x1, x1, #0x640
    41f4:	mov	x0, x19
    41f8:	bl	1ee0 <PyModule_AddIntConstant@plt>
    41fc:	mov	x2, #0x40                  	// #64
    4200:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    4204:	add	x1, x1, #0x650
    4208:	mov	x0, x19
    420c:	bl	1ee0 <PyModule_AddIntConstant@plt>
    4210:	mov	x2, #0x80                  	// #128
    4214:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    4218:	add	x1, x1, #0x660
    421c:	mov	x0, x19
    4220:	bl	1ee0 <PyModule_AddIntConstant@plt>
    4224:	mov	x2, #0x100                 	// #256
    4228:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    422c:	add	x1, x1, #0x670
    4230:	mov	x0, x19
    4234:	bl	1ee0 <PyModule_AddIntConstant@plt>
    4238:	mov	x2, #0x200                 	// #512
    423c:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    4240:	add	x1, x1, #0x680
    4244:	mov	x0, x19
    4248:	bl	1ee0 <PyModule_AddIntConstant@plt>
    424c:	mov	x2, #0x400                 	// #1024
    4250:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    4254:	add	x1, x1, #0x690
    4258:	mov	x0, x19
    425c:	bl	1ee0 <PyModule_AddIntConstant@plt>
    4260:	mov	x2, #0x2000                	// #8192
    4264:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    4268:	add	x1, x1, #0x698
    426c:	mov	x0, x19
    4270:	bl	1ee0 <PyModule_AddIntConstant@plt>
    4274:	adrp	x0, 17000 <PyInit_select@@Base+0x12ef8>
    4278:	add	x0, x0, #0x1c0
    427c:	adrp	x1, 16000 <PyInit_select@@Base+0x11ef8>
    4280:	ldr	x1, [x1, #4040]
    4284:	str	x1, [x0, #8]
    4288:	bl	1fe0 <PyType_Ready@plt>
    428c:	tbnz	w0, #31, 43f8 <PyInit_select@@Base+0x2f0>
    4290:	adrp	x2, 17000 <PyInit_select@@Base+0x12ef8>
    4294:	ldr	x0, [x2, #448]
    4298:	add	x0, x0, #0x1
    429c:	str	x0, [x2, #448]
    42a0:	add	x2, x2, #0x1c0
    42a4:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    42a8:	add	x1, x1, #0x6a8
    42ac:	mov	x0, x19
    42b0:	bl	2150 <PyModule_AddObject@plt>
    42b4:	mov	x2, #0x1                   	// #1
    42b8:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    42bc:	add	x1, x1, #0x6b0
    42c0:	mov	x0, x19
    42c4:	bl	1ee0 <PyModule_AddIntConstant@plt>
    42c8:	mov	x2, #0x4                   	// #4
    42cc:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    42d0:	add	x1, x1, #0x6b8
    42d4:	mov	x0, x19
    42d8:	bl	1ee0 <PyModule_AddIntConstant@plt>
    42dc:	mov	x2, #0x2                   	// #2
    42e0:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    42e4:	add	x1, x1, #0x6c8
    42e8:	mov	x0, x19
    42ec:	bl	1ee0 <PyModule_AddIntConstant@plt>
    42f0:	mov	x2, #0x8                   	// #8
    42f4:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    42f8:	add	x1, x1, #0x6d8
    42fc:	mov	x0, x19
    4300:	bl	1ee0 <PyModule_AddIntConstant@plt>
    4304:	mov	x2, #0x10                  	// #16
    4308:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    430c:	add	x1, x1, #0x6e8
    4310:	mov	x0, x19
    4314:	bl	1ee0 <PyModule_AddIntConstant@plt>
    4318:	mov	x2, #0x2000                	// #8192
    431c:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    4320:	add	x1, x1, #0x6f8
    4324:	mov	x0, x19
    4328:	bl	1ee0 <PyModule_AddIntConstant@plt>
    432c:	mov	x2, #0x80000000            	// #2147483648
    4330:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    4334:	add	x1, x1, #0x708
    4338:	mov	x0, x19
    433c:	bl	1ee0 <PyModule_AddIntConstant@plt>
    4340:	mov	x2, #0x40000000            	// #1073741824
    4344:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    4348:	add	x1, x1, #0x710
    434c:	mov	x0, x19
    4350:	bl	1ee0 <PyModule_AddIntConstant@plt>
    4354:	mov	x2, #0x10000000            	// #268435456
    4358:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    435c:	add	x1, x1, #0x720
    4360:	mov	x0, x19
    4364:	bl	1ee0 <PyModule_AddIntConstant@plt>
    4368:	mov	x2, #0x40                  	// #64
    436c:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    4370:	add	x1, x1, #0x730
    4374:	mov	x0, x19
    4378:	bl	1ee0 <PyModule_AddIntConstant@plt>
    437c:	mov	x2, #0x80                  	// #128
    4380:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    4384:	add	x1, x1, #0x740
    4388:	mov	x0, x19
    438c:	bl	1ee0 <PyModule_AddIntConstant@plt>
    4390:	mov	x2, #0x100                 	// #256
    4394:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    4398:	add	x1, x1, #0x750
    439c:	mov	x0, x19
    43a0:	bl	1ee0 <PyModule_AddIntConstant@plt>
    43a4:	mov	x2, #0x200                 	// #512
    43a8:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    43ac:	add	x1, x1, #0x760
    43b0:	mov	x0, x19
    43b4:	bl	1ee0 <PyModule_AddIntConstant@plt>
    43b8:	mov	x2, #0x400                 	// #1024
    43bc:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    43c0:	add	x1, x1, #0x770
    43c4:	mov	x0, x19
    43c8:	bl	1ee0 <PyModule_AddIntConstant@plt>
    43cc:	mov	x2, #0x80000               	// #524288
    43d0:	adrp	x1, 4000 <PySequence_Fast@plt+0x1dd0>
    43d4:	add	x1, x1, #0x780
    43d8:	mov	x0, x19
    43dc:	bl	1ee0 <PyModule_AddIntConstant@plt>
    43e0:	mov	x0, x19
    43e4:	ldr	x19, [sp, #16]
    43e8:	ldp	x29, x30, [sp], #32
    43ec:	ret
    43f0:	mov	x19, #0x0                   	// #0
    43f4:	b	43e0 <PyInit_select@@Base+0x2d8>
    43f8:	mov	x19, #0x0                   	// #0
    43fc:	b	43e0 <PyInit_select@@Base+0x2d8>

Disassembly of section .fini:

0000000000004400 <.fini>:
    4400:	stp	x29, x30, [sp, #-16]!
    4404:	mov	x29, sp
    4408:	ldp	x29, x30, [sp], #16
    440c:	ret
