
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-getty-generator_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400eb0 <_init>:
  400eb0:	stp	x29, x30, [sp, #-16]!
  400eb4:	mov	x29, sp
  400eb8:	bl	401150 <call_weak_fn>
  400ebc:	ldp	x29, x30, [sp], #16
  400ec0:	ret

Disassembly of section .plt:

0000000000400ed0 <.plt>:
  400ed0:	stp	x16, x30, [sp, #-16]!
  400ed4:	adrp	x16, 413000 <__FRAME_END__+0x100f0>
  400ed8:	ldr	x17, [x16, #3808]
  400edc:	add	x16, x16, #0xee0
  400ee0:	br	x17
  400ee4:	nop
  400ee8:	nop
  400eec:	nop

0000000000400ef0 <mkdir_parents_label@plt>:
  400ef0:	adrp	x16, 413000 <__FRAME_END__+0x100f0>
  400ef4:	ldr	x17, [x16, #3816]
  400ef8:	add	x16, x16, #0xee8
  400efc:	br	x17

0000000000400f00 <stpcpy@plt>:
  400f00:	adrp	x16, 413000 <__FRAME_END__+0x100f0>
  400f04:	ldr	x17, [x16, #3824]
  400f08:	add	x16, x16, #0xef0
  400f0c:	br	x17

0000000000400f10 <__libc_start_main@plt>:
  400f10:	adrp	x16, 413000 <__FRAME_END__+0x100f0>
  400f14:	ldr	x17, [x16, #3832]
  400f18:	add	x16, x16, #0xef8
  400f1c:	br	x17

0000000000400f20 <__gmon_start__@plt>:
  400f20:	adrp	x16, 413000 <__FRAME_END__+0x100f0>
  400f24:	ldr	x17, [x16, #3840]
  400f28:	add	x16, x16, #0xf00
  400f2c:	br	x17

0000000000400f30 <polkit_agent_close@plt>:
  400f30:	adrp	x16, 413000 <__FRAME_END__+0x100f0>
  400f34:	ldr	x17, [x16, #3848]
  400f38:	add	x16, x16, #0xf08
  400f3c:	br	x17

0000000000400f40 <memcpy@plt>:
  400f40:	adrp	x16, 413000 <__FRAME_END__+0x100f0>
  400f44:	ldr	x17, [x16, #3856]
  400f48:	add	x16, x16, #0xf10
  400f4c:	br	x17

0000000000400f50 <symlink@plt>:
  400f50:	adrp	x16, 413000 <__FRAME_END__+0x100f0>
  400f54:	ldr	x17, [x16, #3864]
  400f58:	add	x16, x16, #0xf18
  400f5c:	br	x17

0000000000400f60 <safe_close@plt>:
  400f60:	adrp	x16, 413000 <__FRAME_END__+0x100f0>
  400f64:	ldr	x17, [x16, #3872]
  400f68:	add	x16, x16, #0xf20
  400f6c:	br	x17

0000000000400f70 <log_assert_failed_realm@plt>:
  400f70:	adrp	x16, 413000 <__FRAME_END__+0x100f0>
  400f74:	ldr	x17, [x16, #3880]
  400f78:	add	x16, x16, #0xf28
  400f7c:	br	x17

0000000000400f80 <access@plt>:
  400f80:	adrp	x16, 413000 <__FRAME_END__+0x100f0>
  400f84:	ldr	x17, [x16, #3888]
  400f88:	add	x16, x16, #0xf30
  400f8c:	br	x17

0000000000400f90 <abort@plt>:
  400f90:	adrp	x16, 413000 <__FRAME_END__+0x100f0>
  400f94:	ldr	x17, [x16, #3896]
  400f98:	add	x16, x16, #0xf38
  400f9c:	br	x17

0000000000400fa0 <tty_is_vc@plt>:
  400fa0:	adrp	x16, 413000 <__FRAME_END__+0x100f0>
  400fa4:	ldr	x17, [x16, #3904]
  400fa8:	add	x16, x16, #0xf40
  400fac:	br	x17

0000000000400fb0 <unit_name_from_path_instance@plt>:
  400fb0:	adrp	x16, 413000 <__FRAME_END__+0x100f0>
  400fb4:	ldr	x17, [x16, #3912]
  400fb8:	add	x16, x16, #0xf48
  400fbc:	br	x17

0000000000400fc0 <log_setup_generator@plt>:
  400fc0:	adrp	x16, 413000 <__FRAME_END__+0x100f0>
  400fc4:	ldr	x17, [x16, #3920]
  400fc8:	add	x16, x16, #0xf50
  400fcc:	br	x17

0000000000400fd0 <path_startswith@plt>:
  400fd0:	adrp	x16, 413000 <__FRAME_END__+0x100f0>
  400fd4:	ldr	x17, [x16, #3928]
  400fd8:	add	x16, x16, #0xf58
  400fdc:	br	x17

0000000000400fe0 <__errno_location@plt>:
  400fe0:	adrp	x16, 413000 <__FRAME_END__+0x100f0>
  400fe4:	ldr	x17, [x16, #3936]
  400fe8:	add	x16, x16, #0xf60
  400fec:	br	x17

0000000000400ff0 <read_one_line_file@plt>:
  400ff0:	adrp	x16, 413000 <__FRAME_END__+0x100f0>
  400ff4:	ldr	x17, [x16, #3944]
  400ff8:	add	x16, x16, #0xf68
  400ffc:	br	x17

0000000000401000 <strndup@plt>:
  401000:	adrp	x16, 413000 <__FRAME_END__+0x100f0>
  401004:	ldr	x17, [x16, #3952]
  401008:	add	x16, x16, #0xf70
  40100c:	br	x17

0000000000401010 <getenv_for_pid@plt>:
  401010:	adrp	x16, 413000 <__FRAME_END__+0x100f0>
  401014:	ldr	x17, [x16, #3960]
  401018:	add	x16, x16, #0xf78
  40101c:	br	x17

0000000000401020 <__stack_chk_fail@plt>:
  401020:	adrp	x16, 413000 <__FRAME_END__+0x100f0>
  401024:	ldr	x17, [x16, #3968]
  401028:	add	x16, x16, #0xf80
  40102c:	br	x17

0000000000401030 <path_join_internal@plt>:
  401030:	adrp	x16, 413000 <__FRAME_END__+0x100f0>
  401034:	ldr	x17, [x16, #3976]
  401038:	add	x16, x16, #0xf88
  40103c:	br	x17

0000000000401040 <ask_password_agent_close@plt>:
  401040:	adrp	x16, 413000 <__FRAME_END__+0x100f0>
  401044:	ldr	x17, [x16, #3984]
  401048:	add	x16, x16, #0xf90
  40104c:	br	x17

0000000000401050 <pager_close@plt>:
  401050:	adrp	x16, 413000 <__FRAME_END__+0x100f0>
  401054:	ldr	x17, [x16, #3992]
  401058:	add	x16, x16, #0xf98
  40105c:	br	x17

0000000000401060 <log_internal_realm@plt>:
  401060:	adrp	x16, 413000 <__FRAME_END__+0x100f0>
  401064:	ldr	x17, [x16, #4000]
  401068:	add	x16, x16, #0xfa0
  40106c:	br	x17

0000000000401070 <split@plt>:
  401070:	adrp	x16, 413000 <__FRAME_END__+0x100f0>
  401074:	ldr	x17, [x16, #4008]
  401078:	add	x16, x16, #0xfa8
  40107c:	br	x17

0000000000401080 <isatty@plt>:
  401080:	adrp	x16, 413000 <__FRAME_END__+0x100f0>
  401084:	ldr	x17, [x16, #4016]
  401088:	add	x16, x16, #0xfb0
  40108c:	br	x17

0000000000401090 <detect_container@plt>:
  401090:	adrp	x16, 413000 <__FRAME_END__+0x100f0>
  401094:	ldr	x17, [x16, #4024]
  401098:	add	x16, x16, #0xfb8
  40109c:	br	x17

00000000004010a0 <free@plt>:
  4010a0:	adrp	x16, 413000 <__FRAME_END__+0x100f0>
  4010a4:	ldr	x17, [x16, #4032]
  4010a8:	add	x16, x16, #0xfc0
  4010ac:	br	x17

00000000004010b0 <mac_selinux_finish@plt>:
  4010b0:	adrp	x16, 413000 <__FRAME_END__+0x100f0>
  4010b4:	ldr	x17, [x16, #4040]
  4010b8:	add	x16, x16, #0xfc8
  4010bc:	br	x17

00000000004010c0 <open64@plt>:
  4010c0:	adrp	x16, 413000 <__FRAME_END__+0x100f0>
  4010c4:	ldr	x17, [x16, #4048]
  4010c8:	add	x16, x16, #0xfd0
  4010cc:	br	x17

00000000004010d0 <strlen@plt>:
  4010d0:	adrp	x16, 413000 <__FRAME_END__+0x100f0>
  4010d4:	ldr	x17, [x16, #4056]
  4010d8:	add	x16, x16, #0xfd8
  4010dc:	br	x17

00000000004010e0 <log_oom_internal@plt>:
  4010e0:	adrp	x16, 413000 <__FRAME_END__+0x100f0>
  4010e4:	ldr	x17, [x16, #4064]
  4010e8:	add	x16, x16, #0xfe0
  4010ec:	br	x17

00000000004010f0 <log_get_max_level_realm@plt>:
  4010f0:	adrp	x16, 413000 <__FRAME_END__+0x100f0>
  4010f4:	ldr	x17, [x16, #4072]
  4010f8:	add	x16, x16, #0xfe8
  4010fc:	br	x17

Disassembly of section .text:

0000000000401100 <_start>:
  401100:	mov	x29, #0x0                   	// #0
  401104:	mov	x30, #0x0                   	// #0
  401108:	mov	x5, x0
  40110c:	ldr	x1, [sp]
  401110:	add	x2, sp, #0x8
  401114:	mov	x6, sp
  401118:	movz	x0, #0x0, lsl #48
  40111c:	movk	x0, #0x0, lsl #32
  401120:	movk	x0, #0x40, lsl #16
  401124:	movk	x0, #0x25dc
  401128:	movz	x3, #0x0, lsl #48
  40112c:	movk	x3, #0x0, lsl #32
  401130:	movk	x3, #0x40, lsl #16
  401134:	movk	x3, #0x2730
  401138:	movz	x4, #0x0, lsl #48
  40113c:	movk	x4, #0x0, lsl #32
  401140:	movk	x4, #0x40, lsl #16
  401144:	movk	x4, #0x27b0
  401148:	bl	400f10 <__libc_start_main@plt>
  40114c:	bl	400f90 <abort@plt>

0000000000401150 <call_weak_fn>:
  401150:	adrp	x0, 413000 <__FRAME_END__+0x100f0>
  401154:	ldr	x0, [x0, #4088]
  401158:	cbz	x0, 401160 <call_weak_fn+0x10>
  40115c:	b	400f20 <__gmon_start__@plt>
  401160:	ret

0000000000401164 <deregister_tm_clones>:
  401164:	stp	x29, x30, [sp, #-32]!
  401168:	mov	x29, sp
  40116c:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  401170:	add	x0, x0, #0x0
  401174:	str	x0, [sp, #24]
  401178:	ldr	x0, [sp, #24]
  40117c:	str	x0, [sp, #24]
  401180:	ldr	x1, [sp, #24]
  401184:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  401188:	add	x0, x0, #0x0
  40118c:	cmp	x1, x0
  401190:	b.eq	4011cc <deregister_tm_clones+0x68>  // b.none
  401194:	adrp	x0, 402000 <verify_tty+0x214>
  401198:	add	x0, x0, #0x7c8
  40119c:	ldr	x0, [x0]
  4011a0:	str	x0, [sp, #16]
  4011a4:	ldr	x0, [sp, #16]
  4011a8:	str	x0, [sp, #16]
  4011ac:	ldr	x0, [sp, #16]
  4011b0:	cmp	x0, #0x0
  4011b4:	b.eq	4011d0 <deregister_tm_clones+0x6c>  // b.none
  4011b8:	ldr	x1, [sp, #16]
  4011bc:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  4011c0:	add	x0, x0, #0x0
  4011c4:	blr	x1
  4011c8:	b	4011d0 <deregister_tm_clones+0x6c>
  4011cc:	nop
  4011d0:	ldp	x29, x30, [sp], #32
  4011d4:	ret

00000000004011d8 <register_tm_clones>:
  4011d8:	stp	x29, x30, [sp, #-48]!
  4011dc:	mov	x29, sp
  4011e0:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  4011e4:	add	x0, x0, #0x0
  4011e8:	str	x0, [sp, #40]
  4011ec:	ldr	x0, [sp, #40]
  4011f0:	str	x0, [sp, #40]
  4011f4:	ldr	x1, [sp, #40]
  4011f8:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  4011fc:	add	x0, x0, #0x0
  401200:	sub	x0, x1, x0
  401204:	asr	x0, x0, #3
  401208:	lsr	x1, x0, #63
  40120c:	add	x0, x1, x0
  401210:	asr	x0, x0, #1
  401214:	str	x0, [sp, #32]
  401218:	ldr	x0, [sp, #32]
  40121c:	cmp	x0, #0x0
  401220:	b.eq	401260 <register_tm_clones+0x88>  // b.none
  401224:	adrp	x0, 402000 <verify_tty+0x214>
  401228:	add	x0, x0, #0x7d0
  40122c:	ldr	x0, [x0]
  401230:	str	x0, [sp, #24]
  401234:	ldr	x0, [sp, #24]
  401238:	str	x0, [sp, #24]
  40123c:	ldr	x0, [sp, #24]
  401240:	cmp	x0, #0x0
  401244:	b.eq	401264 <register_tm_clones+0x8c>  // b.none
  401248:	ldr	x2, [sp, #24]
  40124c:	ldr	x1, [sp, #32]
  401250:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  401254:	add	x0, x0, #0x0
  401258:	blr	x2
  40125c:	b	401264 <register_tm_clones+0x8c>
  401260:	nop
  401264:	ldp	x29, x30, [sp], #48
  401268:	ret

000000000040126c <__do_global_dtors_aux>:
  40126c:	stp	x29, x30, [sp, #-16]!
  401270:	mov	x29, sp
  401274:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  401278:	add	x0, x0, #0xc
  40127c:	ldrb	w0, [x0]
  401280:	and	x0, x0, #0xff
  401284:	cmp	x0, #0x0
  401288:	b.ne	4012a4 <__do_global_dtors_aux+0x38>  // b.any
  40128c:	bl	401164 <deregister_tm_clones>
  401290:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  401294:	add	x0, x0, #0xc
  401298:	mov	w1, #0x1                   	// #1
  40129c:	strb	w1, [x0]
  4012a0:	b	4012a8 <__do_global_dtors_aux+0x3c>
  4012a4:	nop
  4012a8:	ldp	x29, x30, [sp], #16
  4012ac:	ret

00000000004012b0 <frame_dummy>:
  4012b0:	stp	x29, x30, [sp, #-16]!
  4012b4:	mov	x29, sp
  4012b8:	bl	4011d8 <register_tm_clones>
  4012bc:	nop
  4012c0:	ldp	x29, x30, [sp], #16
  4012c4:	ret

00000000004012c8 <ALIGN_TO>:
  4012c8:	sub	sp, sp, #0x10
  4012cc:	str	x0, [sp, #8]
  4012d0:	str	x1, [sp]
  4012d4:	ldr	x1, [sp, #8]
  4012d8:	ldr	x0, [sp]
  4012dc:	add	x0, x1, x0
  4012e0:	sub	x1, x0, #0x1
  4012e4:	ldr	x0, [sp]
  4012e8:	neg	x0, x0
  4012ec:	and	x0, x1, x0
  4012f0:	add	sp, sp, #0x10
  4012f4:	ret

00000000004012f8 <freep>:
  4012f8:	stp	x29, x30, [sp, #-32]!
  4012fc:	mov	x29, sp
  401300:	str	x0, [sp, #24]
  401304:	ldr	x0, [sp, #24]
  401308:	ldr	x0, [x0]
  40130c:	bl	4010a0 <free@plt>
  401310:	nop
  401314:	ldp	x29, x30, [sp], #32
  401318:	ret

000000000040131c <size_multiply_overflow>:
  40131c:	sub	sp, sp, #0x10
  401320:	str	x0, [sp, #8]
  401324:	str	x1, [sp]
  401328:	ldr	x0, [sp]
  40132c:	cmp	x0, #0x0
  401330:	cset	w0, ne  // ne = any
  401334:	and	w0, w0, #0xff
  401338:	and	x0, x0, #0xff
  40133c:	cmp	x0, #0x0
  401340:	b.eq	401384 <size_multiply_overflow+0x68>  // b.none
  401344:	mov	x2, #0x0                   	// #0
  401348:	ldr	x1, [sp, #8]
  40134c:	ldr	x0, [sp]
  401350:	umulh	x0, x1, x0
  401354:	cmp	x0, #0x0
  401358:	b.eq	401360 <size_multiply_overflow+0x44>  // b.none
  40135c:	mov	x2, #0x1                   	// #1
  401360:	mov	x0, x2
  401364:	cmp	x0, #0x0
  401368:	cset	w0, ne  // ne = any
  40136c:	and	w0, w0, #0xff
  401370:	and	x0, x0, #0xff
  401374:	cmp	x0, #0x0
  401378:	b.eq	401384 <size_multiply_overflow+0x68>  // b.none
  40137c:	mov	w0, #0x1                   	// #1
  401380:	b	401388 <size_multiply_overflow+0x6c>
  401384:	mov	w0, #0x0                   	// #0
  401388:	and	w0, w0, #0x1
  40138c:	and	w0, w0, #0xff
  401390:	add	sp, sp, #0x10
  401394:	ret

0000000000401398 <errno_or_else>:
  401398:	stp	x29, x30, [sp, #-32]!
  40139c:	mov	x29, sp
  4013a0:	str	w0, [sp, #28]
  4013a4:	bl	400fe0 <__errno_location@plt>
  4013a8:	ldr	w0, [x0]
  4013ac:	cmp	w0, #0x0
  4013b0:	b.le	4013c4 <errno_or_else+0x2c>
  4013b4:	bl	400fe0 <__errno_location@plt>
  4013b8:	ldr	w0, [x0]
  4013bc:	neg	w0, w0
  4013c0:	b	4013d4 <errno_or_else+0x3c>
  4013c4:	ldr	w0, [sp, #28]
  4013c8:	cmp	w0, #0x0
  4013cc:	cneg	w0, w0, lt  // lt = tstop
  4013d0:	neg	w0, w0
  4013d4:	ldp	x29, x30, [sp], #32
  4013d8:	ret

00000000004013dc <closep>:
  4013dc:	stp	x29, x30, [sp, #-32]!
  4013e0:	mov	x29, sp
  4013e4:	str	x0, [sp, #24]
  4013e8:	ldr	x0, [sp, #24]
  4013ec:	ldr	w0, [x0]
  4013f0:	bl	400f60 <safe_close@plt>
  4013f4:	nop
  4013f8:	ldp	x29, x30, [sp], #32
  4013fc:	ret

0000000000401400 <save_argc_argv>:
  401400:	sub	sp, sp, #0x10
  401404:	str	w0, [sp, #12]
  401408:	str	x1, [sp]
  40140c:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  401410:	add	x0, x0, #0x8
  401414:	ldr	w1, [sp, #12]
  401418:	str	w1, [x0]
  40141c:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  401420:	add	x0, x0, #0x0
  401424:	ldr	x1, [sp]
  401428:	str	x1, [x0]
  40142c:	nop
  401430:	add	sp, sp, #0x10
  401434:	ret

0000000000401438 <isempty>:
  401438:	sub	sp, sp, #0x10
  40143c:	str	x0, [sp, #8]
  401440:	ldr	x0, [sp, #8]
  401444:	cmp	x0, #0x0
  401448:	b.eq	40145c <isempty+0x24>  // b.none
  40144c:	ldr	x0, [sp, #8]
  401450:	ldrb	w0, [x0]
  401454:	cmp	w0, #0x0
  401458:	b.ne	401464 <isempty+0x2c>  // b.any
  40145c:	mov	w0, #0x1                   	// #1
  401460:	b	401468 <isempty+0x30>
  401464:	mov	w0, #0x0                   	// #0
  401468:	and	w0, w0, #0x1
  40146c:	and	w0, w0, #0xff
  401470:	add	sp, sp, #0x10
  401474:	ret

0000000000401478 <static_destruct>:
  401478:	stp	x29, x30, [sp, #-32]!
  40147c:	mov	x29, sp
  401480:	adrp	x0, 402000 <verify_tty+0x214>
  401484:	add	x0, x0, #0xaf0
  401488:	ldr	x0, [x0]
  40148c:	cmp	x0, #0x0
  401490:	b.eq	4014f4 <static_destruct+0x7c>  // b.none
  401494:	adrp	x0, 402000 <verify_tty+0x214>
  401498:	add	x0, x0, #0xaf0
  40149c:	ldr	x0, [x0]
  4014a0:	mov	x1, #0x8                   	// #8
  4014a4:	bl	4012c8 <ALIGN_TO>
  4014a8:	str	x0, [sp, #24]
  4014ac:	b	4014d8 <static_destruct+0x60>
  4014b0:	ldr	x0, [sp, #24]
  4014b4:	ldr	x1, [x0, #8]
  4014b8:	ldr	x0, [sp, #24]
  4014bc:	ldr	x0, [x0]
  4014c0:	blr	x1
  4014c4:	ldr	x0, [sp, #24]
  4014c8:	add	x0, x0, #0x10
  4014cc:	mov	x1, #0x8                   	// #8
  4014d0:	bl	4012c8 <ALIGN_TO>
  4014d4:	str	x0, [sp, #24]
  4014d8:	ldr	x1, [sp, #24]
  4014dc:	adrp	x0, 402000 <verify_tty+0x214>
  4014e0:	add	x0, x0, #0xaf8
  4014e4:	ldr	x0, [x0]
  4014e8:	cmp	x1, x0
  4014ec:	b.cc	4014b0 <static_destruct+0x38>  // b.lo, b.ul, b.last
  4014f0:	b	4014f8 <static_destruct+0x80>
  4014f4:	nop
  4014f8:	ldp	x29, x30, [sp], #32
  4014fc:	ret

0000000000401500 <add_symlink>:
  401500:	stp	x29, x30, [sp, #-176]!
  401504:	mov	x29, sp
  401508:	str	x0, [x29, #24]
  40150c:	str	x1, [x29, #16]
  401510:	adrp	x0, 413000 <__FRAME_END__+0x100f0>
  401514:	add	x0, x0, #0xc98
  401518:	ldr	x1, [x0]
  40151c:	str	x1, [x29, #168]
  401520:	mov	x1, #0x0                   	// #0
  401524:	ldr	x0, [x29, #24]
  401528:	cmp	x0, #0x0
  40152c:	cset	w0, eq  // eq = none
  401530:	and	w0, w0, #0xff
  401534:	and	x0, x0, #0xff
  401538:	cmp	x0, #0x0
  40153c:	b.eq	401568 <add_symlink+0x68>  // b.none
  401540:	adrp	x0, 402000 <verify_tty+0x214>
  401544:	add	x1, x0, #0x7db
  401548:	adrp	x0, 402000 <verify_tty+0x214>
  40154c:	add	x4, x0, #0xb00
  401550:	mov	w3, #0x1c                  	// #28
  401554:	mov	x2, x1
  401558:	adrp	x0, 402000 <verify_tty+0x214>
  40155c:	add	x1, x0, #0x808
  401560:	mov	w0, #0x0                   	// #0
  401564:	bl	400f70 <log_assert_failed_realm@plt>
  401568:	ldr	x0, [x29, #16]
  40156c:	cmp	x0, #0x0
  401570:	cset	w0, eq  // eq = none
  401574:	and	w0, w0, #0xff
  401578:	and	x0, x0, #0xff
  40157c:	cmp	x0, #0x0
  401580:	b.eq	4015ac <add_symlink+0xac>  // b.none
  401584:	adrp	x0, 402000 <verify_tty+0x214>
  401588:	add	x1, x0, #0x7db
  40158c:	adrp	x0, 402000 <verify_tty+0x214>
  401590:	add	x4, x0, #0xb00
  401594:	mov	w3, #0x1d                  	// #29
  401598:	mov	x2, x1
  40159c:	adrp	x0, 402000 <verify_tty+0x214>
  4015a0:	add	x1, x0, #0x818
  4015a4:	mov	w0, #0x0                   	// #0
  4015a8:	bl	400f70 <log_assert_failed_realm@plt>
  4015ac:	adrp	x0, 402000 <verify_tty+0x214>
  4015b0:	add	x0, x0, #0x828
  4015b4:	str	x0, [x29, #144]
  4015b8:	ldr	x0, [x29, #24]
  4015bc:	str	x0, [x29, #152]
  4015c0:	str	xzr, [x29, #56]
  4015c4:	str	xzr, [x29, #64]
  4015c8:	b	4015fc <add_symlink+0xfc>
  4015cc:	ldr	x0, [x29, #64]
  4015d0:	lsl	x0, x0, #3
  4015d4:	add	x1, x29, #0x90
  4015d8:	ldr	x0, [x1, x0]
  4015dc:	bl	4010d0 <strlen@plt>
  4015e0:	mov	x1, x0
  4015e4:	ldr	x0, [x29, #56]
  4015e8:	add	x0, x0, x1
  4015ec:	str	x0, [x29, #56]
  4015f0:	ldr	x0, [x29, #64]
  4015f4:	add	x0, x0, #0x1
  4015f8:	str	x0, [x29, #64]
  4015fc:	ldr	x0, [x29, #64]
  401600:	cmp	x0, #0x1
  401604:	b.hi	401620 <add_symlink+0x120>  // b.pmore
  401608:	ldr	x0, [x29, #64]
  40160c:	lsl	x0, x0, #3
  401610:	add	x1, x29, #0x90
  401614:	ldr	x0, [x1, x0]
  401618:	cmp	x0, #0x0
  40161c:	b.ne	4015cc <add_symlink+0xcc>  // b.any
  401620:	ldr	x0, [x29, #56]
  401624:	add	x0, x0, #0x1
  401628:	str	x0, [x29, #96]
  40162c:	ldr	x1, [x29, #96]
  401630:	mov	x0, #0x1                   	// #1
  401634:	bl	40131c <size_multiply_overflow>
  401638:	and	w0, w0, #0xff
  40163c:	and	x0, x0, #0xff
  401640:	cmp	x0, #0x0
  401644:	b.eq	401670 <add_symlink+0x170>  // b.none
  401648:	adrp	x0, 402000 <verify_tty+0x214>
  40164c:	add	x1, x0, #0x7db
  401650:	adrp	x0, 402000 <verify_tty+0x214>
  401654:	add	x4, x0, #0xb00
  401658:	mov	w3, #0x1f                  	// #31
  40165c:	mov	x2, x1
  401660:	adrp	x0, 402000 <verify_tty+0x214>
  401664:	add	x1, x0, #0x840
  401668:	mov	w0, #0x0                   	// #0
  40166c:	bl	400f70 <log_assert_failed_realm@plt>
  401670:	ldr	x0, [x29, #96]
  401674:	cmp	x0, #0x400, lsl #12
  401678:	cset	w0, hi  // hi = pmore
  40167c:	and	w0, w0, #0xff
  401680:	and	x0, x0, #0xff
  401684:	cmp	x0, #0x0
  401688:	b.eq	4016b4 <add_symlink+0x1b4>  // b.none
  40168c:	adrp	x0, 402000 <verify_tty+0x214>
  401690:	add	x1, x0, #0x7db
  401694:	adrp	x0, 402000 <verify_tty+0x214>
  401698:	add	x4, x0, #0xb00
  40169c:	mov	w3, #0x1f                  	// #31
  4016a0:	mov	x2, x1
  4016a4:	adrp	x0, 402000 <verify_tty+0x214>
  4016a8:	add	x1, x0, #0x870
  4016ac:	mov	w0, #0x0                   	// #0
  4016b0:	bl	400f70 <log_assert_failed_realm@plt>
  4016b4:	ldr	x0, [x29, #96]
  4016b8:	add	x0, x0, #0xf
  4016bc:	lsr	x0, x0, #4
  4016c0:	lsl	x0, x0, #4
  4016c4:	sub	sp, sp, x0
  4016c8:	mov	x0, sp
  4016cc:	add	x0, x0, #0xf
  4016d0:	lsr	x0, x0, #4
  4016d4:	lsl	x0, x0, #4
  4016d8:	str	x0, [x29, #104]
  4016dc:	ldr	x0, [x29, #104]
  4016e0:	str	x0, [x29, #48]
  4016e4:	str	xzr, [x29, #64]
  4016e8:	b	401718 <add_symlink+0x218>
  4016ec:	ldr	x0, [x29, #64]
  4016f0:	lsl	x0, x0, #3
  4016f4:	add	x1, x29, #0x90
  4016f8:	ldr	x0, [x1, x0]
  4016fc:	mov	x1, x0
  401700:	ldr	x0, [x29, #48]
  401704:	bl	400f00 <stpcpy@plt>
  401708:	str	x0, [x29, #48]
  40170c:	ldr	x0, [x29, #64]
  401710:	add	x0, x0, #0x1
  401714:	str	x0, [x29, #64]
  401718:	ldr	x0, [x29, #64]
  40171c:	cmp	x0, #0x1
  401720:	b.hi	40173c <add_symlink+0x23c>  // b.pmore
  401724:	ldr	x0, [x29, #64]
  401728:	lsl	x0, x0, #3
  40172c:	add	x1, x29, #0x90
  401730:	ldr	x0, [x1, x0]
  401734:	cmp	x0, #0x0
  401738:	b.ne	4016ec <add_symlink+0x1ec>  // b.any
  40173c:	ldr	x0, [x29, #48]
  401740:	strb	wzr, [x0]
  401744:	ldr	x0, [x29, #104]
  401748:	str	x0, [x29, #112]
  40174c:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  401750:	add	x0, x0, #0x10
  401754:	ldr	x0, [x0]
  401758:	str	x0, [x29, #144]
  40175c:	adrp	x0, 402000 <verify_tty+0x214>
  401760:	add	x0, x0, #0x890
  401764:	str	x0, [x29, #152]
  401768:	ldr	x0, [x29, #16]
  40176c:	str	x0, [x29, #160]
  401770:	str	xzr, [x29, #80]
  401774:	str	xzr, [x29, #88]
  401778:	b	4017ac <add_symlink+0x2ac>
  40177c:	ldr	x0, [x29, #88]
  401780:	lsl	x0, x0, #3
  401784:	add	x1, x29, #0x90
  401788:	ldr	x0, [x1, x0]
  40178c:	bl	4010d0 <strlen@plt>
  401790:	mov	x1, x0
  401794:	ldr	x0, [x29, #80]
  401798:	add	x0, x0, x1
  40179c:	str	x0, [x29, #80]
  4017a0:	ldr	x0, [x29, #88]
  4017a4:	add	x0, x0, #0x1
  4017a8:	str	x0, [x29, #88]
  4017ac:	ldr	x0, [x29, #88]
  4017b0:	cmp	x0, #0x2
  4017b4:	b.hi	4017d0 <add_symlink+0x2d0>  // b.pmore
  4017b8:	ldr	x0, [x29, #88]
  4017bc:	lsl	x0, x0, #3
  4017c0:	add	x1, x29, #0x90
  4017c4:	ldr	x0, [x1, x0]
  4017c8:	cmp	x0, #0x0
  4017cc:	b.ne	40177c <add_symlink+0x27c>  // b.any
  4017d0:	ldr	x0, [x29, #80]
  4017d4:	add	x0, x0, #0x1
  4017d8:	str	x0, [x29, #120]
  4017dc:	ldr	x1, [x29, #120]
  4017e0:	mov	x0, #0x1                   	// #1
  4017e4:	bl	40131c <size_multiply_overflow>
  4017e8:	and	w0, w0, #0xff
  4017ec:	and	x0, x0, #0xff
  4017f0:	cmp	x0, #0x0
  4017f4:	b.eq	401820 <add_symlink+0x320>  // b.none
  4017f8:	adrp	x0, 402000 <verify_tty+0x214>
  4017fc:	add	x1, x0, #0x7db
  401800:	adrp	x0, 402000 <verify_tty+0x214>
  401804:	add	x4, x0, #0xb00
  401808:	mov	w3, #0x20                  	// #32
  40180c:	mov	x2, x1
  401810:	adrp	x0, 402000 <verify_tty+0x214>
  401814:	add	x1, x0, #0x840
  401818:	mov	w0, #0x0                   	// #0
  40181c:	bl	400f70 <log_assert_failed_realm@plt>
  401820:	ldr	x0, [x29, #120]
  401824:	cmp	x0, #0x400, lsl #12
  401828:	cset	w0, hi  // hi = pmore
  40182c:	and	w0, w0, #0xff
  401830:	and	x0, x0, #0xff
  401834:	cmp	x0, #0x0
  401838:	b.eq	401864 <add_symlink+0x364>  // b.none
  40183c:	adrp	x0, 402000 <verify_tty+0x214>
  401840:	add	x1, x0, #0x7db
  401844:	adrp	x0, 402000 <verify_tty+0x214>
  401848:	add	x4, x0, #0xb00
  40184c:	mov	w3, #0x20                  	// #32
  401850:	mov	x2, x1
  401854:	adrp	x0, 402000 <verify_tty+0x214>
  401858:	add	x1, x0, #0x870
  40185c:	mov	w0, #0x0                   	// #0
  401860:	bl	400f70 <log_assert_failed_realm@plt>
  401864:	ldr	x0, [x29, #120]
  401868:	add	x0, x0, #0xf
  40186c:	lsr	x0, x0, #4
  401870:	lsl	x0, x0, #4
  401874:	sub	sp, sp, x0
  401878:	mov	x0, sp
  40187c:	add	x0, x0, #0xf
  401880:	lsr	x0, x0, #4
  401884:	lsl	x0, x0, #4
  401888:	str	x0, [x29, #128]
  40188c:	ldr	x0, [x29, #128]
  401890:	str	x0, [x29, #72]
  401894:	str	xzr, [x29, #88]
  401898:	b	4018c8 <add_symlink+0x3c8>
  40189c:	ldr	x0, [x29, #88]
  4018a0:	lsl	x0, x0, #3
  4018a4:	add	x1, x29, #0x90
  4018a8:	ldr	x0, [x1, x0]
  4018ac:	mov	x1, x0
  4018b0:	ldr	x0, [x29, #72]
  4018b4:	bl	400f00 <stpcpy@plt>
  4018b8:	str	x0, [x29, #72]
  4018bc:	ldr	x0, [x29, #88]
  4018c0:	add	x0, x0, #0x1
  4018c4:	str	x0, [x29, #88]
  4018c8:	ldr	x0, [x29, #88]
  4018cc:	cmp	x0, #0x2
  4018d0:	b.hi	4018ec <add_symlink+0x3ec>  // b.pmore
  4018d4:	ldr	x0, [x29, #88]
  4018d8:	lsl	x0, x0, #3
  4018dc:	add	x1, x29, #0x90
  4018e0:	ldr	x0, [x1, x0]
  4018e4:	cmp	x0, #0x0
  4018e8:	b.ne	40189c <add_symlink+0x39c>  // b.any
  4018ec:	ldr	x0, [x29, #72]
  4018f0:	strb	wzr, [x0]
  4018f4:	ldr	x0, [x29, #128]
  4018f8:	str	x0, [x29, #136]
  4018fc:	mov	w1, #0x1ed                 	// #493
  401900:	ldr	x0, [x29, #136]
  401904:	bl	400ef0 <mkdir_parents_label@plt>
  401908:	ldr	x1, [x29, #136]
  40190c:	ldr	x0, [x29, #112]
  401910:	bl	400f50 <symlink@plt>
  401914:	str	w0, [x29, #32]
  401918:	ldr	w0, [x29, #32]
  40191c:	cmp	w0, #0x0
  401920:	b.ge	4019cc <add_symlink+0x4cc>  // b.tcont
  401924:	bl	400fe0 <__errno_location@plt>
  401928:	ldr	w0, [x0]
  40192c:	cmp	w0, #0x11
  401930:	b.ne	40193c <add_symlink+0x43c>  // b.any
  401934:	mov	w0, #0x0                   	// #0
  401938:	b	4019d0 <add_symlink+0x4d0>
  40193c:	mov	w0, #0x3                   	// #3
  401940:	str	w0, [x29, #36]
  401944:	bl	400fe0 <__errno_location@plt>
  401948:	ldr	w0, [x0]
  40194c:	str	w0, [x29, #40]
  401950:	str	wzr, [x29, #44]
  401954:	ldr	w0, [x29, #44]
  401958:	bl	4010f0 <log_get_max_level_realm@plt>
  40195c:	mov	w1, w0
  401960:	ldr	w0, [x29, #36]
  401964:	and	w0, w0, #0x7
  401968:	cmp	w1, w0
  40196c:	b.lt	4019b4 <add_symlink+0x4b4>  // b.tstop
  401970:	ldr	w0, [x29, #44]
  401974:	lsl	w1, w0, #10
  401978:	ldr	w0, [x29, #36]
  40197c:	orr	w7, w1, w0
  401980:	adrp	x0, 402000 <verify_tty+0x214>
  401984:	add	x1, x0, #0x7db
  401988:	ldr	x6, [x29, #136]
  40198c:	adrp	x0, 402000 <verify_tty+0x214>
  401990:	add	x5, x0, #0x8a8
  401994:	adrp	x0, 402000 <verify_tty+0x214>
  401998:	add	x4, x0, #0xb10
  40199c:	mov	w3, #0x2a                  	// #42
  4019a0:	mov	x2, x1
  4019a4:	ldr	w1, [x29, #40]
  4019a8:	mov	w0, w7
  4019ac:	bl	401060 <log_internal_realm@plt>
  4019b0:	b	4019d0 <add_symlink+0x4d0>
  4019b4:	ldr	w0, [x29, #40]
  4019b8:	cmp	w0, #0x0
  4019bc:	cneg	w0, w0, lt  // lt = tstop
  4019c0:	and	w0, w0, #0xff
  4019c4:	neg	w0, w0
  4019c8:	b	4019d0 <add_symlink+0x4d0>
  4019cc:	mov	w0, #0x0                   	// #0
  4019d0:	mov	w1, w0
  4019d4:	adrp	x0, 413000 <__FRAME_END__+0x100f0>
  4019d8:	add	x0, x0, #0xc98
  4019dc:	ldr	x2, [x29, #168]
  4019e0:	ldr	x0, [x0]
  4019e4:	eor	x0, x2, x0
  4019e8:	cmp	x0, #0x0
  4019ec:	b.eq	4019f4 <add_symlink+0x4f4>  // b.none
  4019f0:	bl	401020 <__stack_chk_fail@plt>
  4019f4:	mov	w0, w1
  4019f8:	mov	sp, x29
  4019fc:	ldp	x29, x30, [sp], #176
  401a00:	ret

0000000000401a04 <add_serial_getty>:
  401a04:	stp	x29, x30, [sp, #-96]!
  401a08:	mov	x29, sp
  401a0c:	str	x19, [sp, #16]
  401a10:	str	x0, [sp, #40]
  401a14:	adrp	x0, 413000 <__FRAME_END__+0x100f0>
  401a18:	add	x0, x0, #0xc98
  401a1c:	ldr	x1, [x0]
  401a20:	str	x1, [sp, #88]
  401a24:	mov	x1, #0x0                   	// #0
  401a28:	str	xzr, [sp, #80]
  401a2c:	ldr	x0, [sp, #40]
  401a30:	cmp	x0, #0x0
  401a34:	cset	w0, eq  // eq = none
  401a38:	and	w0, w0, #0xff
  401a3c:	and	x0, x0, #0xff
  401a40:	cmp	x0, #0x0
  401a44:	b.eq	401a70 <add_serial_getty+0x6c>  // b.none
  401a48:	adrp	x0, 402000 <verify_tty+0x214>
  401a4c:	add	x1, x0, #0x7db
  401a50:	adrp	x0, 402000 <verify_tty+0x214>
  401a54:	add	x4, x0, #0xb20
  401a58:	mov	w3, #0x34                  	// #52
  401a5c:	mov	x2, x1
  401a60:	adrp	x0, 402000 <verify_tty+0x214>
  401a64:	add	x1, x0, #0x8c8
  401a68:	mov	w0, #0x0                   	// #0
  401a6c:	bl	400f70 <log_assert_failed_realm@plt>
  401a70:	mov	w0, #0x7                   	// #7
  401a74:	str	w0, [sp, #52]
  401a78:	str	wzr, [sp, #56]
  401a7c:	str	wzr, [sp, #60]
  401a80:	ldr	w0, [sp, #60]
  401a84:	bl	4010f0 <log_get_max_level_realm@plt>
  401a88:	mov	w1, w0
  401a8c:	ldr	w0, [sp, #52]
  401a90:	and	w0, w0, #0x7
  401a94:	cmp	w1, w0
  401a98:	b.lt	401ae0 <add_serial_getty+0xdc>  // b.tstop
  401a9c:	ldr	w0, [sp, #60]
  401aa0:	lsl	w1, w0, #10
  401aa4:	ldr	w0, [sp, #52]
  401aa8:	orr	w7, w1, w0
  401aac:	adrp	x0, 402000 <verify_tty+0x214>
  401ab0:	add	x1, x0, #0x7db
  401ab4:	ldr	x6, [sp, #40]
  401ab8:	adrp	x0, 402000 <verify_tty+0x214>
  401abc:	add	x5, x0, #0x8d0
  401ac0:	adrp	x0, 402000 <verify_tty+0x214>
  401ac4:	add	x4, x0, #0xb38
  401ac8:	mov	w3, #0x36                  	// #54
  401acc:	mov	x2, x1
  401ad0:	ldr	w1, [sp, #56]
  401ad4:	mov	w0, w7
  401ad8:	bl	401060 <log_internal_realm@plt>
  401adc:	b	401ae8 <add_serial_getty+0xe4>
  401ae0:	ldr	w0, [sp, #56]
  401ae4:	cmp	w0, #0x0
  401ae8:	add	x0, sp, #0x50
  401aec:	mov	x3, x0
  401af0:	adrp	x0, 402000 <verify_tty+0x214>
  401af4:	add	x2, x0, #0x900
  401af8:	ldr	x1, [sp, #40]
  401afc:	adrp	x0, 402000 <verify_tty+0x214>
  401b00:	add	x0, x0, #0x910
  401b04:	bl	400fb0 <unit_name_from_path_instance@plt>
  401b08:	str	w0, [sp, #64]
  401b0c:	ldr	w0, [sp, #64]
  401b10:	cmp	w0, #0x0
  401b14:	b.ge	401ba4 <add_serial_getty+0x1a0>  // b.tcont
  401b18:	mov	w0, #0x3                   	// #3
  401b1c:	str	w0, [sp, #68]
  401b20:	ldr	w0, [sp, #64]
  401b24:	str	w0, [sp, #72]
  401b28:	str	wzr, [sp, #76]
  401b2c:	ldr	w0, [sp, #76]
  401b30:	bl	4010f0 <log_get_max_level_realm@plt>
  401b34:	mov	w1, w0
  401b38:	ldr	w0, [sp, #68]
  401b3c:	and	w0, w0, #0x7
  401b40:	cmp	w1, w0
  401b44:	b.lt	401b8c <add_serial_getty+0x188>  // b.tstop
  401b48:	ldr	w0, [sp, #76]
  401b4c:	lsl	w1, w0, #10
  401b50:	ldr	w0, [sp, #68]
  401b54:	orr	w6, w1, w0
  401b58:	adrp	x0, 402000 <verify_tty+0x214>
  401b5c:	add	x1, x0, #0x7db
  401b60:	adrp	x0, 402000 <verify_tty+0x214>
  401b64:	add	x5, x0, #0x920
  401b68:	adrp	x0, 402000 <verify_tty+0x214>
  401b6c:	add	x4, x0, #0xb38
  401b70:	mov	w3, #0x3a                  	// #58
  401b74:	mov	x2, x1
  401b78:	ldr	w1, [sp, #72]
  401b7c:	mov	w0, w6
  401b80:	bl	401060 <log_internal_realm@plt>
  401b84:	mov	w19, w0
  401b88:	b	401bbc <add_serial_getty+0x1b8>
  401b8c:	ldr	w0, [sp, #72]
  401b90:	cmp	w0, #0x0
  401b94:	cneg	w0, w0, lt  // lt = tstop
  401b98:	and	w0, w0, #0xff
  401b9c:	neg	w19, w0
  401ba0:	b	401bbc <add_serial_getty+0x1b8>
  401ba4:	ldr	x0, [sp, #80]
  401ba8:	mov	x1, x0
  401bac:	adrp	x0, 402000 <verify_tty+0x214>
  401bb0:	add	x0, x0, #0x948
  401bb4:	bl	401500 <add_symlink>
  401bb8:	mov	w19, w0
  401bbc:	add	x0, sp, #0x50
  401bc0:	bl	4012f8 <freep>
  401bc4:	mov	w1, w19
  401bc8:	adrp	x0, 413000 <__FRAME_END__+0x100f0>
  401bcc:	add	x0, x0, #0xc98
  401bd0:	ldr	x2, [sp, #88]
  401bd4:	ldr	x0, [x0]
  401bd8:	eor	x0, x2, x0
  401bdc:	cmp	x0, #0x0
  401be0:	b.eq	401be8 <add_serial_getty+0x1e4>  // b.none
  401be4:	bl	401020 <__stack_chk_fail@plt>
  401be8:	mov	w0, w1
  401bec:	ldr	x19, [sp, #16]
  401bf0:	ldp	x29, x30, [sp], #96
  401bf4:	ret

0000000000401bf8 <add_container_getty>:
  401bf8:	stp	x29, x30, [sp, #-96]!
  401bfc:	mov	x29, sp
  401c00:	str	x19, [sp, #16]
  401c04:	str	x0, [sp, #40]
  401c08:	adrp	x0, 413000 <__FRAME_END__+0x100f0>
  401c0c:	add	x0, x0, #0xc98
  401c10:	ldr	x1, [x0]
  401c14:	str	x1, [sp, #88]
  401c18:	mov	x1, #0x0                   	// #0
  401c1c:	str	xzr, [sp, #80]
  401c20:	ldr	x0, [sp, #40]
  401c24:	cmp	x0, #0x0
  401c28:	cset	w0, eq  // eq = none
  401c2c:	and	w0, w0, #0xff
  401c30:	and	x0, x0, #0xff
  401c34:	cmp	x0, #0x0
  401c38:	b.eq	401c64 <add_container_getty+0x6c>  // b.none
  401c3c:	adrp	x0, 402000 <verify_tty+0x214>
  401c40:	add	x1, x0, #0x7db
  401c44:	adrp	x0, 402000 <verify_tty+0x214>
  401c48:	add	x4, x0, #0xb50
  401c4c:	mov	w3, #0x43                  	// #67
  401c50:	mov	x2, x1
  401c54:	adrp	x0, 402000 <verify_tty+0x214>
  401c58:	add	x1, x0, #0x8c8
  401c5c:	mov	w0, #0x0                   	// #0
  401c60:	bl	400f70 <log_assert_failed_realm@plt>
  401c64:	mov	w0, #0x7                   	// #7
  401c68:	str	w0, [sp, #52]
  401c6c:	str	wzr, [sp, #56]
  401c70:	str	wzr, [sp, #60]
  401c74:	ldr	w0, [sp, #60]
  401c78:	bl	4010f0 <log_get_max_level_realm@plt>
  401c7c:	mov	w1, w0
  401c80:	ldr	w0, [sp, #52]
  401c84:	and	w0, w0, #0x7
  401c88:	cmp	w1, w0
  401c8c:	b.lt	401cd4 <add_container_getty+0xdc>  // b.tstop
  401c90:	ldr	w0, [sp, #60]
  401c94:	lsl	w1, w0, #10
  401c98:	ldr	w0, [sp, #52]
  401c9c:	orr	w7, w1, w0
  401ca0:	adrp	x0, 402000 <verify_tty+0x214>
  401ca4:	add	x1, x0, #0x7db
  401ca8:	ldr	x6, [sp, #40]
  401cac:	adrp	x0, 402000 <verify_tty+0x214>
  401cb0:	add	x5, x0, #0x960
  401cb4:	adrp	x0, 402000 <verify_tty+0x214>
  401cb8:	add	x4, x0, #0xb68
  401cbc:	mov	w3, #0x45                  	// #69
  401cc0:	mov	x2, x1
  401cc4:	ldr	w1, [sp, #56]
  401cc8:	mov	w0, w7
  401ccc:	bl	401060 <log_internal_realm@plt>
  401cd0:	b	401cdc <add_container_getty+0xe4>
  401cd4:	ldr	w0, [sp, #56]
  401cd8:	cmp	w0, #0x0
  401cdc:	add	x0, sp, #0x50
  401ce0:	mov	x3, x0
  401ce4:	adrp	x0, 402000 <verify_tty+0x214>
  401ce8:	add	x2, x0, #0x900
  401cec:	ldr	x1, [sp, #40]
  401cf0:	adrp	x0, 402000 <verify_tty+0x214>
  401cf4:	add	x0, x0, #0x998
  401cf8:	bl	400fb0 <unit_name_from_path_instance@plt>
  401cfc:	str	w0, [sp, #64]
  401d00:	ldr	w0, [sp, #64]
  401d04:	cmp	w0, #0x0
  401d08:	b.ge	401d98 <add_container_getty+0x1a0>  // b.tcont
  401d0c:	mov	w0, #0x3                   	// #3
  401d10:	str	w0, [sp, #68]
  401d14:	ldr	w0, [sp, #64]
  401d18:	str	w0, [sp, #72]
  401d1c:	str	wzr, [sp, #76]
  401d20:	ldr	w0, [sp, #76]
  401d24:	bl	4010f0 <log_get_max_level_realm@plt>
  401d28:	mov	w1, w0
  401d2c:	ldr	w0, [sp, #68]
  401d30:	and	w0, w0, #0x7
  401d34:	cmp	w1, w0
  401d38:	b.lt	401d80 <add_container_getty+0x188>  // b.tstop
  401d3c:	ldr	w0, [sp, #76]
  401d40:	lsl	w1, w0, #10
  401d44:	ldr	w0, [sp, #68]
  401d48:	orr	w6, w1, w0
  401d4c:	adrp	x0, 402000 <verify_tty+0x214>
  401d50:	add	x1, x0, #0x7db
  401d54:	adrp	x0, 402000 <verify_tty+0x214>
  401d58:	add	x5, x0, #0x920
  401d5c:	adrp	x0, 402000 <verify_tty+0x214>
  401d60:	add	x4, x0, #0xb68
  401d64:	mov	w3, #0x49                  	// #73
  401d68:	mov	x2, x1
  401d6c:	ldr	w1, [sp, #72]
  401d70:	mov	w0, w6
  401d74:	bl	401060 <log_internal_realm@plt>
  401d78:	mov	w19, w0
  401d7c:	b	401db0 <add_container_getty+0x1b8>
  401d80:	ldr	w0, [sp, #72]
  401d84:	cmp	w0, #0x0
  401d88:	cneg	w0, w0, lt  // lt = tstop
  401d8c:	and	w0, w0, #0xff
  401d90:	neg	w19, w0
  401d94:	b	401db0 <add_container_getty+0x1b8>
  401d98:	ldr	x0, [sp, #80]
  401d9c:	mov	x1, x0
  401da0:	adrp	x0, 402000 <verify_tty+0x214>
  401da4:	add	x0, x0, #0x9a8
  401da8:	bl	401500 <add_symlink>
  401dac:	mov	w19, w0
  401db0:	add	x0, sp, #0x50
  401db4:	bl	4012f8 <freep>
  401db8:	mov	w1, w19
  401dbc:	adrp	x0, 413000 <__FRAME_END__+0x100f0>
  401dc0:	add	x0, x0, #0xc98
  401dc4:	ldr	x2, [sp, #88]
  401dc8:	ldr	x0, [x0]
  401dcc:	eor	x0, x2, x0
  401dd0:	cmp	x0, #0x0
  401dd4:	b.eq	401ddc <add_container_getty+0x1e4>  // b.none
  401dd8:	bl	401020 <__stack_chk_fail@plt>
  401ddc:	mov	w0, w1
  401de0:	ldr	x19, [sp, #16]
  401de4:	ldp	x29, x30, [sp], #96
  401de8:	ret

0000000000401dec <verify_tty>:
  401dec:	stp	x29, x30, [sp, #-128]!
  401df0:	mov	x29, sp
  401df4:	str	x19, [sp, #16]
  401df8:	str	x0, [x29, #40]
  401dfc:	adrp	x0, 413000 <__FRAME_END__+0x100f0>
  401e00:	add	x0, x0, #0xc98
  401e04:	ldr	x1, [x0]
  401e08:	str	x1, [x29, #120]
  401e0c:	mov	x1, #0x0                   	// #0
  401e10:	mov	w0, #0xffffffff            	// #-1
  401e14:	str	w0, [x29, #52]
  401e18:	adrp	x0, 402000 <verify_tty+0x214>
  401e1c:	add	x0, x0, #0x9c8
  401e20:	str	x0, [x29, #104]
  401e24:	ldr	x0, [x29, #40]
  401e28:	str	x0, [x29, #112]
  401e2c:	str	xzr, [x29, #64]
  401e30:	str	xzr, [x29, #72]
  401e34:	b	401e68 <verify_tty+0x7c>
  401e38:	ldr	x0, [x29, #72]
  401e3c:	lsl	x0, x0, #3
  401e40:	add	x1, x29, #0x68
  401e44:	ldr	x0, [x1, x0]
  401e48:	bl	4010d0 <strlen@plt>
  401e4c:	mov	x1, x0
  401e50:	ldr	x0, [x29, #64]
  401e54:	add	x0, x0, x1
  401e58:	str	x0, [x29, #64]
  401e5c:	ldr	x0, [x29, #72]
  401e60:	add	x0, x0, #0x1
  401e64:	str	x0, [x29, #72]
  401e68:	ldr	x0, [x29, #72]
  401e6c:	cmp	x0, #0x1
  401e70:	b.hi	401e8c <verify_tty+0xa0>  // b.pmore
  401e74:	ldr	x0, [x29, #72]
  401e78:	lsl	x0, x0, #3
  401e7c:	add	x1, x29, #0x68
  401e80:	ldr	x0, [x1, x0]
  401e84:	cmp	x0, #0x0
  401e88:	b.ne	401e38 <verify_tty+0x4c>  // b.any
  401e8c:	ldr	x0, [x29, #64]
  401e90:	add	x0, x0, #0x1
  401e94:	str	x0, [x29, #80]
  401e98:	ldr	x1, [x29, #80]
  401e9c:	mov	x0, #0x1                   	// #1
  401ea0:	bl	40131c <size_multiply_overflow>
  401ea4:	and	w0, w0, #0xff
  401ea8:	and	x0, x0, #0xff
  401eac:	cmp	x0, #0x0
  401eb0:	b.eq	401edc <verify_tty+0xf0>  // b.none
  401eb4:	adrp	x0, 402000 <verify_tty+0x214>
  401eb8:	add	x1, x0, #0x7db
  401ebc:	adrp	x0, 402000 <verify_tty+0x214>
  401ec0:	add	x4, x0, #0xb80
  401ec4:	mov	w3, #0x57                  	// #87
  401ec8:	mov	x2, x1
  401ecc:	adrp	x0, 402000 <verify_tty+0x214>
  401ed0:	add	x1, x0, #0x840
  401ed4:	mov	w0, #0x0                   	// #0
  401ed8:	bl	400f70 <log_assert_failed_realm@plt>
  401edc:	ldr	x0, [x29, #80]
  401ee0:	cmp	x0, #0x400, lsl #12
  401ee4:	cset	w0, hi  // hi = pmore
  401ee8:	and	w0, w0, #0xff
  401eec:	and	x0, x0, #0xff
  401ef0:	cmp	x0, #0x0
  401ef4:	b.eq	401f20 <verify_tty+0x134>  // b.none
  401ef8:	adrp	x0, 402000 <verify_tty+0x214>
  401efc:	add	x1, x0, #0x7db
  401f00:	adrp	x0, 402000 <verify_tty+0x214>
  401f04:	add	x4, x0, #0xb80
  401f08:	mov	w3, #0x57                  	// #87
  401f0c:	mov	x2, x1
  401f10:	adrp	x0, 402000 <verify_tty+0x214>
  401f14:	add	x1, x0, #0x870
  401f18:	mov	w0, #0x0                   	// #0
  401f1c:	bl	400f70 <log_assert_failed_realm@plt>
  401f20:	ldr	x0, [x29, #80]
  401f24:	add	x0, x0, #0xf
  401f28:	lsr	x0, x0, #4
  401f2c:	lsl	x0, x0, #4
  401f30:	sub	sp, sp, x0
  401f34:	mov	x0, sp
  401f38:	add	x0, x0, #0xf
  401f3c:	lsr	x0, x0, #4
  401f40:	lsl	x0, x0, #4
  401f44:	str	x0, [x29, #88]
  401f48:	ldr	x0, [x29, #88]
  401f4c:	str	x0, [x29, #56]
  401f50:	str	xzr, [x29, #72]
  401f54:	b	401f84 <verify_tty+0x198>
  401f58:	ldr	x0, [x29, #72]
  401f5c:	lsl	x0, x0, #3
  401f60:	add	x1, x29, #0x68
  401f64:	ldr	x0, [x1, x0]
  401f68:	mov	x1, x0
  401f6c:	ldr	x0, [x29, #56]
  401f70:	bl	400f00 <stpcpy@plt>
  401f74:	str	x0, [x29, #56]
  401f78:	ldr	x0, [x29, #72]
  401f7c:	add	x0, x0, #0x1
  401f80:	str	x0, [x29, #72]
  401f84:	ldr	x0, [x29, #72]
  401f88:	cmp	x0, #0x1
  401f8c:	b.hi	401fa8 <verify_tty+0x1bc>  // b.pmore
  401f90:	ldr	x0, [x29, #72]
  401f94:	lsl	x0, x0, #3
  401f98:	add	x1, x29, #0x68
  401f9c:	ldr	x0, [x1, x0]
  401fa0:	cmp	x0, #0x0
  401fa4:	b.ne	401f58 <verify_tty+0x16c>  // b.any
  401fa8:	ldr	x0, [x29, #56]
  401fac:	strb	wzr, [x0]
  401fb0:	ldr	x0, [x29, #88]
  401fb4:	str	x0, [x29, #96]
  401fb8:	mov	w1, #0x8902                	// #35074
  401fbc:	movk	w1, #0x8, lsl #16
  401fc0:	ldr	x0, [x29, #96]
  401fc4:	bl	4010c0 <open64@plt>
  401fc8:	str	w0, [x29, #52]
  401fcc:	ldr	w0, [x29, #52]
  401fd0:	cmp	w0, #0x0
  401fd4:	b.ge	401fe8 <verify_tty+0x1fc>  // b.tcont
  401fd8:	bl	400fe0 <__errno_location@plt>
  401fdc:	ldr	w0, [x0]
  401fe0:	neg	w19, w0
  401fe4:	b	402014 <verify_tty+0x228>
  401fe8:	bl	400fe0 <__errno_location@plt>
  401fec:	str	wzr, [x0]
  401ff0:	ldr	w0, [x29, #52]
  401ff4:	bl	401080 <isatty@plt>
  401ff8:	cmp	w0, #0x0
  401ffc:	b.gt	402010 <verify_tty+0x224>
  402000:	mov	w0, #0x5                   	// #5
  402004:	bl	401398 <errno_or_else>
  402008:	mov	w19, w0
  40200c:	b	402014 <verify_tty+0x228>
  402010:	mov	w19, #0x0                   	// #0
  402014:	add	x0, x29, #0x34
  402018:	bl	4013dc <closep>
  40201c:	mov	w1, w19
  402020:	adrp	x0, 413000 <__FRAME_END__+0x100f0>
  402024:	add	x0, x0, #0xc98
  402028:	ldr	x2, [x29, #120]
  40202c:	ldr	x0, [x0]
  402030:	eor	x0, x2, x0
  402034:	cmp	x0, #0x0
  402038:	b.eq	402040 <verify_tty+0x254>  // b.none
  40203c:	bl	401020 <__stack_chk_fail@plt>
  402040:	mov	w0, w1
  402044:	mov	sp, x29
  402048:	ldr	x19, [sp, #16]
  40204c:	ldp	x29, x30, [sp], #128
  402050:	ret

0000000000402054 <run>:
  402054:	stp	x29, x30, [sp, #-304]!
  402058:	mov	x29, sp
  40205c:	stp	x19, x20, [sp, #16]
  402060:	stp	x21, x22, [sp, #32]
  402064:	stp	x23, x24, [sp, #48]
  402068:	stp	x25, x26, [sp, #64]
  40206c:	stp	x27, x28, [sp, #80]
  402070:	str	x0, [x29, #120]
  402074:	str	x1, [x29, #112]
  402078:	str	x2, [x29, #104]
  40207c:	adrp	x0, 413000 <__FRAME_END__+0x100f0>
  402080:	add	x0, x0, #0xc98
  402084:	ldr	x1, [x0]
  402088:	str	x1, [x29, #296]
  40208c:	mov	x1, #0x0                   	// #0
  402090:	str	xzr, [x29, #152]
  402094:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  402098:	add	x0, x0, #0x10
  40209c:	ldr	x1, [x29, #120]
  4020a0:	str	x1, [x0]
  4020a4:	adrp	x0, 414000 <saved_argv@@SD_SHARED>
  4020a8:	add	x0, x0, #0x10
  4020ac:	ldr	x0, [x0]
  4020b0:	cmp	x0, #0x0
  4020b4:	cset	w0, eq  // eq = none
  4020b8:	and	w0, w0, #0xff
  4020bc:	and	x0, x0, #0xff
  4020c0:	cmp	x0, #0x0
  4020c4:	b.eq	4020f0 <run+0x9c>  // b.none
  4020c8:	adrp	x0, 402000 <verify_tty+0x214>
  4020cc:	add	x1, x0, #0x7db
  4020d0:	adrp	x0, 402000 <verify_tty+0x214>
  4020d4:	add	x4, x0, #0xb90
  4020d8:	mov	w3, #0x6b                  	// #107
  4020dc:	mov	x2, x1
  4020e0:	adrp	x0, 402000 <verify_tty+0x214>
  4020e4:	add	x1, x0, #0x9d0
  4020e8:	mov	w0, #0x0                   	// #0
  4020ec:	bl	400f70 <log_assert_failed_realm@plt>
  4020f0:	bl	401090 <detect_container@plt>
  4020f4:	cmp	w0, #0x0
  4020f8:	b.le	402334 <run+0x2e0>
  4020fc:	str	xzr, [x29, #160]
  402100:	mov	w0, #0x7                   	// #7
  402104:	str	w0, [x29, #140]
  402108:	str	wzr, [x29, #144]
  40210c:	str	wzr, [x29, #148]
  402110:	ldr	w0, [x29, #148]
  402114:	bl	4010f0 <log_get_max_level_realm@plt>
  402118:	mov	w1, w0
  40211c:	ldr	w0, [x29, #140]
  402120:	and	w0, w0, #0x7
  402124:	cmp	w1, w0
  402128:	b.lt	40216c <run+0x118>  // b.tstop
  40212c:	ldr	w0, [x29, #148]
  402130:	lsl	w1, w0, #10
  402134:	ldr	w0, [x29, #140]
  402138:	orr	w6, w1, w0
  40213c:	adrp	x0, 402000 <verify_tty+0x214>
  402140:	add	x1, x0, #0x7db
  402144:	adrp	x0, 402000 <verify_tty+0x214>
  402148:	add	x5, x0, #0x9e0
  40214c:	adrp	x0, 402000 <verify_tty+0x214>
  402150:	add	x4, x0, #0xb98
  402154:	mov	w3, #0x70                  	// #112
  402158:	mov	x2, x1
  40215c:	ldr	w1, [x29, #144]
  402160:	mov	w0, w6
  402164:	bl	401060 <log_internal_realm@plt>
  402168:	b	402174 <run+0x120>
  40216c:	ldr	w0, [x29, #144]
  402170:	cmp	w0, #0x0
  402174:	adrp	x0, 402000 <verify_tty+0x214>
  402178:	add	x1, x0, #0xa08
  40217c:	adrp	x0, 402000 <verify_tty+0x214>
  402180:	add	x0, x0, #0xa08
  402184:	bl	401500 <add_symlink>
  402188:	str	w0, [x29, #136]
  40218c:	ldr	w0, [x29, #136]
  402190:	cmp	w0, #0x0
  402194:	b.ge	4021a0 <run+0x14c>  // b.tcont
  402198:	ldr	w19, [x29, #136]
  40219c:	b	402328 <run+0x2d4>
  4021a0:	add	x0, x29, #0xa0
  4021a4:	mov	x2, x0
  4021a8:	adrp	x0, 402000 <verify_tty+0x214>
  4021ac:	add	x1, x0, #0xa20
  4021b0:	mov	w0, #0x1                   	// #1
  4021b4:	bl	401010 <getenv_for_pid@plt>
  4021b8:	str	w0, [x29, #136]
  4021bc:	ldr	w0, [x29, #136]
  4021c0:	cmp	w0, #0x0
  4021c4:	b.le	402324 <run+0x2d0>
  4021c8:	ldr	x0, [x29, #160]
  4021cc:	str	x0, [x29, #168]
  4021d0:	add	x1, x29, #0xb0
  4021d4:	add	x4, x29, #0xa8
  4021d8:	mov	w3, #0x0                   	// #0
  4021dc:	adrp	x0, 402000 <verify_tty+0x214>
  4021e0:	add	x2, x0, #0xa30
  4021e4:	mov	x0, x4
  4021e8:	bl	401070 <split@plt>
  4021ec:	str	x0, [x29, #192]
  4021f0:	b	402318 <run+0x2c4>
  4021f4:	mov	x0, sp
  4021f8:	mov	x28, x0
  4021fc:	ldr	x0, [x29, #176]
  402200:	add	x0, x0, #0x1
  402204:	mov	x1, x0
  402208:	sub	x1, x1, #0x1
  40220c:	str	x1, [x29, #224]
  402210:	mov	x24, x0
  402214:	mov	x25, #0x0                   	// #0
  402218:	lsr	x1, x24, #61
  40221c:	lsl	x21, x25, #3
  402220:	orr	x21, x1, x21
  402224:	lsl	x20, x24, #3
  402228:	mov	x26, x0
  40222c:	mov	x27, #0x0                   	// #0
  402230:	lsr	x1, x26, #61
  402234:	lsl	x23, x27, #3
  402238:	orr	x23, x1, x23
  40223c:	lsl	x22, x26, #3
  402240:	add	x0, x0, #0xf
  402244:	lsr	x0, x0, #4
  402248:	lsl	x0, x0, #4
  40224c:	sub	sp, sp, x0
  402250:	mov	x0, sp
  402254:	add	x0, x0, #0x0
  402258:	str	x0, [x29, #232]
  40225c:	ldr	x0, [x29, #232]
  402260:	ldr	x1, [x29, #176]
  402264:	mov	x2, x1
  402268:	ldr	x1, [x29, #192]
  40226c:	bl	400f40 <memcpy@plt>
  402270:	ldr	x0, [x29, #176]
  402274:	ldr	x1, [x29, #232]
  402278:	strb	wzr, [x1, x0]
  40227c:	ldr	x2, [x29, #232]
  402280:	adrp	x0, 402000 <verify_tty+0x214>
  402284:	add	x1, x0, #0x9c8
  402288:	mov	x0, x2
  40228c:	bl	400fd0 <path_startswith@plt>
  402290:	str	x0, [x29, #184]
  402294:	ldr	x0, [x29, #184]
  402298:	cmp	x0, #0x0
  40229c:	b.ne	4022a8 <run+0x254>  // b.any
  4022a0:	ldr	x0, [x29, #232]
  4022a4:	str	x0, [x29, #184]
  4022a8:	adrp	x0, 402000 <verify_tty+0x214>
  4022ac:	add	x1, x0, #0xa38
  4022b0:	ldr	x0, [x29, #184]
  4022b4:	bl	400fd0 <path_startswith@plt>
  4022b8:	str	x0, [x29, #184]
  4022bc:	ldr	x0, [x29, #184]
  4022c0:	cmp	x0, #0x0
  4022c4:	b.ne	4022d0 <run+0x27c>  // b.any
  4022c8:	mov	sp, x28
  4022cc:	b	4022f8 <run+0x2a4>
  4022d0:	ldr	x0, [x29, #184]
  4022d4:	bl	401bf8 <add_container_getty>
  4022d8:	str	w0, [x29, #136]
  4022dc:	ldr	w0, [x29, #136]
  4022e0:	cmp	w0, #0x0
  4022e4:	b.ge	4022f4 <run+0x2a0>  // b.tcont
  4022e8:	ldr	w19, [x29, #136]
  4022ec:	mov	sp, x28
  4022f0:	b	402328 <run+0x2d4>
  4022f4:	mov	sp, x28
  4022f8:	add	x1, x29, #0xb0
  4022fc:	add	x4, x29, #0xa8
  402300:	mov	w3, #0x0                   	// #0
  402304:	adrp	x0, 402000 <verify_tty+0x214>
  402308:	add	x2, x0, #0xa30
  40230c:	mov	x0, x4
  402310:	bl	401070 <split@plt>
  402314:	str	x0, [x29, #192]
  402318:	ldr	x0, [x29, #192]
  40231c:	cmp	x0, #0x0
  402320:	b.ne	4021f4 <run+0x1a0>  // b.any
  402324:	mov	w19, #0x0                   	// #0
  402328:	add	x0, x29, #0xa0
  40232c:	bl	4012f8 <freep>
  402330:	b	40258c <run+0x538>
  402334:	add	x0, x29, #0x98
  402338:	mov	x1, x0
  40233c:	adrp	x0, 402000 <verify_tty+0x214>
  402340:	add	x0, x0, #0xa40
  402344:	bl	400ff0 <read_one_line_file@plt>
  402348:	cmp	w0, #0x0
  40234c:	b.lt	402478 <run+0x424>  // b.tstop
  402350:	ldr	x0, [x29, #152]
  402354:	str	x0, [x29, #160]
  402358:	add	x1, x29, #0xa8
  40235c:	add	x4, x29, #0xa0
  402360:	mov	w3, #0x0                   	// #0
  402364:	adrp	x0, 402000 <verify_tty+0x214>
  402368:	add	x2, x0, #0xa30
  40236c:	mov	x0, x4
  402370:	bl	401070 <split@plt>
  402374:	str	x0, [x29, #208]
  402378:	b	40246c <run+0x418>
  40237c:	str	xzr, [x29, #176]
  402380:	ldr	x0, [x29, #168]
  402384:	mov	x1, x0
  402388:	ldr	x0, [x29, #208]
  40238c:	bl	401000 <strndup@plt>
  402390:	str	x0, [x29, #176]
  402394:	ldr	x0, [x29, #176]
  402398:	cmp	x0, #0x0
  40239c:	b.ne	4023c8 <run+0x374>  // b.any
  4023a0:	adrp	x0, 402000 <verify_tty+0x214>
  4023a4:	add	x1, x0, #0x7db
  4023a8:	adrp	x0, 402000 <verify_tty+0x214>
  4023ac:	add	x3, x0, #0xb98
  4023b0:	mov	w2, #0xa5                  	// #165
  4023b4:	mov	w0, #0x0                   	// #0
  4023b8:	bl	4010e0 <log_oom_internal@plt>
  4023bc:	mov	w19, w0
  4023c0:	mov	w20, #0x0                   	// #0
  4023c4:	b	402438 <run+0x3e4>
  4023c8:	ldr	x0, [x29, #176]
  4023cc:	bl	401438 <isempty>
  4023d0:	and	w0, w0, #0xff
  4023d4:	cmp	w0, #0x0
  4023d8:	b.ne	4023f0 <run+0x39c>  // b.any
  4023dc:	ldr	x0, [x29, #176]
  4023e0:	bl	400fa0 <tty_is_vc@plt>
  4023e4:	and	w0, w0, #0xff
  4023e8:	cmp	w0, #0x0
  4023ec:	b.eq	4023f8 <run+0x3a4>  // b.none
  4023f0:	mov	w20, #0x1                   	// #1
  4023f4:	b	402438 <run+0x3e4>
  4023f8:	ldr	x0, [x29, #176]
  4023fc:	bl	401dec <verify_tty>
  402400:	cmp	w0, #0x0
  402404:	b.ge	402410 <run+0x3bc>  // b.tcont
  402408:	mov	w20, #0x1                   	// #1
  40240c:	b	402438 <run+0x3e4>
  402410:	ldr	x0, [x29, #176]
  402414:	bl	401a04 <add_serial_getty>
  402418:	str	w0, [x29, #136]
  40241c:	ldr	w0, [x29, #136]
  402420:	cmp	w0, #0x0
  402424:	b.ge	402434 <run+0x3e0>  // b.tcont
  402428:	ldr	w19, [x29, #136]
  40242c:	mov	w20, #0x0                   	// #0
  402430:	b	402438 <run+0x3e4>
  402434:	mov	w20, #0x2                   	// #2
  402438:	add	x0, x29, #0xb0
  40243c:	bl	4012f8 <freep>
  402440:	cmp	w20, #0x0
  402444:	b.eq	40258c <run+0x538>  // b.none
  402448:	cmp	w20, #0x2
  40244c:	add	x1, x29, #0xa8
  402450:	add	x4, x29, #0xa0
  402454:	mov	w3, #0x0                   	// #0
  402458:	adrp	x0, 402000 <verify_tty+0x214>
  40245c:	add	x2, x0, #0xa30
  402460:	mov	x0, x4
  402464:	bl	401070 <split@plt>
  402468:	str	x0, [x29, #208]
  40246c:	ldr	x0, [x29, #208]
  402470:	cmp	x0, #0x0
  402474:	b.ne	40237c <run+0x328>  // b.any
  402478:	adrp	x0, 402000 <verify_tty+0x214>
  40247c:	add	x0, x0, #0xa60
  402480:	str	x0, [x29, #200]
  402484:	ldr	x0, [x29, #200]
  402488:	str	x0, [x29, #240]
  40248c:	adrp	x0, 402000 <verify_tty+0x214>
  402490:	add	x0, x0, #0xa68
  402494:	str	x0, [x29, #248]
  402498:	adrp	x0, 402000 <verify_tty+0x214>
  40249c:	add	x0, x0, #0xa70
  4024a0:	str	x0, [x29, #256]
  4024a4:	adrp	x0, 402000 <verify_tty+0x214>
  4024a8:	add	x0, x0, #0xa78
  4024ac:	str	x0, [x29, #264]
  4024b0:	adrp	x0, 402000 <verify_tty+0x214>
  4024b4:	add	x0, x0, #0xa88
  4024b8:	str	x0, [x29, #272]
  4024bc:	adrp	x0, 402000 <verify_tty+0x214>
  4024c0:	add	x0, x0, #0xa98
  4024c4:	str	x0, [x29, #280]
  4024c8:	str	xzr, [x29, #288]
  4024cc:	add	x0, x29, #0xf0
  4024d0:	str	x0, [x29, #216]
  4024d4:	b	40257c <run+0x528>
  4024d8:	str	xzr, [x29, #176]
  4024dc:	mov	x2, #0xffffffffffffffff    	// #-1
  4024e0:	ldr	x1, [x29, #200]
  4024e4:	adrp	x0, 402000 <verify_tty+0x214>
  4024e8:	add	x0, x0, #0xaa8
  4024ec:	bl	401030 <path_join_internal@plt>
  4024f0:	str	x0, [x29, #176]
  4024f4:	ldr	x0, [x29, #176]
  4024f8:	cmp	x0, #0x0
  4024fc:	b.ne	40250c <run+0x4b8>  // b.any
  402500:	mov	w19, #0xfffffff4            	// #-12
  402504:	mov	w20, #0x0                   	// #0
  402508:	b	402550 <run+0x4fc>
  40250c:	ldr	x0, [x29, #176]
  402510:	mov	w1, #0x0                   	// #0
  402514:	bl	400f80 <access@plt>
  402518:	cmp	w0, #0x0
  40251c:	b.ge	402528 <run+0x4d4>  // b.tcont
  402520:	mov	w20, #0x1                   	// #1
  402524:	b	402550 <run+0x4fc>
  402528:	ldr	x0, [x29, #200]
  40252c:	bl	401a04 <add_serial_getty>
  402530:	str	w0, [x29, #136]
  402534:	ldr	w0, [x29, #136]
  402538:	cmp	w0, #0x0
  40253c:	b.ge	40254c <run+0x4f8>  // b.tcont
  402540:	ldr	w19, [x29, #136]
  402544:	mov	w20, #0x0                   	// #0
  402548:	b	402550 <run+0x4fc>
  40254c:	mov	w20, #0x2                   	// #2
  402550:	add	x0, x29, #0xb0
  402554:	bl	4012f8 <freep>
  402558:	cmp	w20, #0x0
  40255c:	b.eq	40258c <run+0x538>  // b.none
  402560:	cmp	w20, #0x2
  402564:	ldr	x0, [x29, #216]
  402568:	add	x0, x0, #0x8
  40256c:	str	x0, [x29, #216]
  402570:	ldr	x0, [x29, #216]
  402574:	ldr	x0, [x0]
  402578:	str	x0, [x29, #200]
  40257c:	ldr	x0, [x29, #200]
  402580:	cmp	x0, #0x0
  402584:	b.ne	4024d8 <run+0x484>  // b.any
  402588:	mov	w19, #0x0                   	// #0
  40258c:	add	x0, x29, #0x98
  402590:	bl	4012f8 <freep>
  402594:	mov	w1, w19
  402598:	adrp	x0, 413000 <__FRAME_END__+0x100f0>
  40259c:	add	x0, x0, #0xc98
  4025a0:	ldr	x2, [x29, #296]
  4025a4:	ldr	x0, [x0]
  4025a8:	eor	x0, x2, x0
  4025ac:	cmp	x0, #0x0
  4025b0:	b.eq	4025b8 <run+0x564>  // b.none
  4025b4:	bl	401020 <__stack_chk_fail@plt>
  4025b8:	mov	w0, w1
  4025bc:	mov	sp, x29
  4025c0:	ldp	x19, x20, [sp, #16]
  4025c4:	ldp	x21, x22, [sp, #32]
  4025c8:	ldp	x23, x24, [sp, #48]
  4025cc:	ldp	x25, x26, [sp, #64]
  4025d0:	ldp	x27, x28, [sp, #80]
  4025d4:	ldp	x29, x30, [sp], #304
  4025d8:	ret

00000000004025dc <main>:
  4025dc:	stp	x29, x30, [sp, #-48]!
  4025e0:	mov	x29, sp
  4025e4:	str	w0, [sp, #28]
  4025e8:	str	x1, [sp, #16]
  4025ec:	ldr	x1, [sp, #16]
  4025f0:	ldr	w0, [sp, #28]
  4025f4:	bl	401400 <save_argc_argv>
  4025f8:	bl	400fc0 <log_setup_generator@plt>
  4025fc:	ldr	w0, [sp, #28]
  402600:	cmp	w0, #0x1
  402604:	b.le	4026a0 <main+0xc4>
  402608:	ldr	w0, [sp, #28]
  40260c:	cmp	w0, #0x4
  402610:	b.eq	4026a0 <main+0xc4>  // b.none
  402614:	mov	w0, #0x3                   	// #3
  402618:	str	w0, [sp, #32]
  40261c:	mov	w0, #0x16                  	// #22
  402620:	movk	w0, #0x4000, lsl #16
  402624:	str	w0, [sp, #36]
  402628:	str	wzr, [sp, #40]
  40262c:	ldr	w0, [sp, #40]
  402630:	bl	4010f0 <log_get_max_level_realm@plt>
  402634:	mov	w1, w0
  402638:	ldr	w0, [sp, #32]
  40263c:	and	w0, w0, #0x7
  402640:	cmp	w1, w0
  402644:	b.lt	402688 <main+0xac>  // b.tstop
  402648:	ldr	w0, [sp, #40]
  40264c:	lsl	w1, w0, #10
  402650:	ldr	w0, [sp, #32]
  402654:	orr	w6, w1, w0
  402658:	adrp	x0, 402000 <verify_tty+0x214>
  40265c:	add	x1, x0, #0x7db
  402660:	adrp	x0, 402000 <verify_tty+0x214>
  402664:	add	x5, x0, #0xab8
  402668:	adrp	x0, 402000 <verify_tty+0x214>
  40266c:	add	x4, x0, #0xba0
  402670:	mov	w3, #0xd0                  	// #208
  402674:	mov	x2, x1
  402678:	ldr	w1, [sp, #36]
  40267c:	mov	w0, w6
  402680:	bl	401060 <log_internal_realm@plt>
  402684:	b	402724 <main+0x148>
  402688:	ldr	w0, [sp, #36]
  40268c:	cmp	w0, #0x0
  402690:	cneg	w0, w0, lt  // lt = tstop
  402694:	and	w0, w0, #0xff
  402698:	neg	w0, w0
  40269c:	b	402724 <main+0x148>
  4026a0:	ldr	w0, [sp, #28]
  4026a4:	cmp	w0, #0x1
  4026a8:	b.le	4026b8 <main+0xdc>
  4026ac:	ldr	x0, [sp, #16]
  4026b0:	ldr	x0, [x0, #8]
  4026b4:	b	4026c0 <main+0xe4>
  4026b8:	adrp	x0, 402000 <verify_tty+0x214>
  4026bc:	add	x0, x0, #0xae8
  4026c0:	ldr	w1, [sp, #28]
  4026c4:	cmp	w1, #0x1
  4026c8:	b.le	4026d8 <main+0xfc>
  4026cc:	ldr	x1, [sp, #16]
  4026d0:	ldr	x1, [x1, #16]
  4026d4:	b	4026e0 <main+0x104>
  4026d8:	adrp	x1, 402000 <verify_tty+0x214>
  4026dc:	add	x1, x1, #0xae8
  4026e0:	ldr	w2, [sp, #28]
  4026e4:	cmp	w2, #0x1
  4026e8:	b.le	4026f8 <main+0x11c>
  4026ec:	ldr	x2, [sp, #16]
  4026f0:	ldr	x2, [x2, #24]
  4026f4:	b	402700 <main+0x124>
  4026f8:	adrp	x2, 402000 <verify_tty+0x214>
  4026fc:	add	x2, x2, #0xae8
  402700:	bl	402054 <run>
  402704:	str	w0, [sp, #44]
  402708:	bl	401040 <ask_password_agent_close@plt>
  40270c:	bl	400f30 <polkit_agent_close@plt>
  402710:	bl	401050 <pager_close@plt>
  402714:	bl	4010b0 <mac_selinux_finish@plt>
  402718:	bl	401478 <static_destruct>
  40271c:	ldr	w0, [sp, #44]
  402720:	lsr	w0, w0, #31
  402724:	ldp	x29, x30, [sp], #48
  402728:	ret
  40272c:	nop

0000000000402730 <__libc_csu_init>:
  402730:	stp	x29, x30, [sp, #-64]!
  402734:	mov	x29, sp
  402738:	stp	x19, x20, [sp, #16]
  40273c:	adrp	x20, 413000 <__FRAME_END__+0x100f0>
  402740:	add	x20, x20, #0xc90
  402744:	stp	x21, x22, [sp, #32]
  402748:	adrp	x21, 413000 <__FRAME_END__+0x100f0>
  40274c:	add	x21, x21, #0xc88
  402750:	sub	x20, x20, x21
  402754:	mov	w22, w0
  402758:	stp	x23, x24, [sp, #48]
  40275c:	mov	x23, x1
  402760:	mov	x24, x2
  402764:	bl	400eb0 <_init>
  402768:	cmp	xzr, x20, asr #3
  40276c:	b.eq	402798 <__libc_csu_init+0x68>  // b.none
  402770:	asr	x20, x20, #3
  402774:	mov	x19, #0x0                   	// #0
  402778:	ldr	x3, [x21, x19, lsl #3]
  40277c:	mov	x2, x24
  402780:	add	x19, x19, #0x1
  402784:	mov	x1, x23
  402788:	mov	w0, w22
  40278c:	blr	x3
  402790:	cmp	x20, x19
  402794:	b.ne	402778 <__libc_csu_init+0x48>  // b.any
  402798:	ldp	x19, x20, [sp, #16]
  40279c:	ldp	x21, x22, [sp, #32]
  4027a0:	ldp	x23, x24, [sp, #48]
  4027a4:	ldp	x29, x30, [sp], #64
  4027a8:	ret
  4027ac:	nop

00000000004027b0 <__libc_csu_fini>:
  4027b0:	ret

Disassembly of section .fini:

00000000004027b4 <_fini>:
  4027b4:	stp	x29, x30, [sp, #-16]!
  4027b8:	mov	x29, sp
  4027bc:	ldp	x29, x30, [sp], #16
  4027c0:	ret
