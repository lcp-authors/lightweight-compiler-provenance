
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//revoutput.so_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000620 <.init>:
 620:	stp	x29, x30, [sp, #-16]!
 624:	mov	x29, sp
 628:	bl	6c0 <fprintf@plt+0x10>
 62c:	ldp	x29, x30, [sp], #16
 630:	ret

Disassembly of section .plt:

0000000000000640 <exit@plt-0x20>:
 640:	stp	x16, x30, [sp, #-16]!
 644:	adrp	x16, 11000 <dl_load@@Base+0x1086c>
 648:	ldr	x17, [x16, #4088]
 64c:	add	x16, x16, #0xff8
 650:	br	x17
 654:	nop
 658:	nop
 65c:	nop

0000000000000660 <exit@plt>:
 660:	adrp	x16, 12000 <exit@GLIBC_2.17>
 664:	ldr	x17, [x16]
 668:	add	x16, x16, #0x0
 66c:	br	x17

0000000000000670 <__cxa_finalize@plt>:
 670:	adrp	x16, 12000 <exit@GLIBC_2.17>
 674:	ldr	x17, [x16, #8]
 678:	add	x16, x16, #0x8
 67c:	br	x17

0000000000000680 <putc@plt>:
 680:	adrp	x16, 12000 <exit@GLIBC_2.17>
 684:	ldr	x17, [x16, #16]
 688:	add	x16, x16, #0x10
 68c:	br	x17

0000000000000690 <__gmon_start__@plt>:
 690:	adrp	x16, 12000 <exit@GLIBC_2.17>
 694:	ldr	x17, [x16, #24]
 698:	add	x16, x16, #0x18
 69c:	br	x17

00000000000006a0 <gettext@plt>:
 6a0:	adrp	x16, 12000 <exit@GLIBC_2.17>
 6a4:	ldr	x17, [x16, #32]
 6a8:	add	x16, x16, #0x20
 6ac:	br	x17

00000000000006b0 <fprintf@plt>:
 6b0:	adrp	x16, 12000 <exit@GLIBC_2.17>
 6b4:	ldr	x17, [x16, #40]
 6b8:	add	x16, x16, #0x28
 6bc:	br	x17

Disassembly of section .text:

00000000000006c0 <dl_load@@Base-0xd4>:
 6c0:	adrp	x0, 11000 <dl_load@@Base+0x1086c>
 6c4:	ldr	x0, [x0, #4056]
 6c8:	cbz	x0, 6d0 <fprintf@plt+0x20>
 6cc:	b	690 <__gmon_start__@plt>
 6d0:	ret
 6d4:	nop
 6d8:	adrp	x0, 12000 <dl_load@@Base+0x1186c>
 6dc:	add	x0, x0, #0x68
 6e0:	adrp	x1, 12000 <dl_load@@Base+0x1186c>
 6e4:	add	x1, x1, #0x68
 6e8:	cmp	x1, x0
 6ec:	b.eq	704 <fprintf@plt+0x54>  // b.none
 6f0:	adrp	x1, 11000 <dl_load@@Base+0x1086c>
 6f4:	ldr	x1, [x1, #4032]
 6f8:	cbz	x1, 704 <fprintf@plt+0x54>
 6fc:	mov	x16, x1
 700:	br	x16
 704:	ret
 708:	adrp	x0, 12000 <dl_load@@Base+0x1186c>
 70c:	add	x0, x0, #0x68
 710:	adrp	x1, 12000 <dl_load@@Base+0x1186c>
 714:	add	x1, x1, #0x68
 718:	sub	x1, x1, x0
 71c:	lsr	x2, x1, #63
 720:	add	x1, x2, x1, asr #3
 724:	cmp	xzr, x1, asr #1
 728:	asr	x1, x1, #1
 72c:	b.eq	744 <fprintf@plt+0x94>  // b.none
 730:	adrp	x2, 11000 <dl_load@@Base+0x1086c>
 734:	ldr	x2, [x2, #4064]
 738:	cbz	x2, 744 <fprintf@plt+0x94>
 73c:	mov	x16, x2
 740:	br	x16
 744:	ret
 748:	stp	x29, x30, [sp, #-32]!
 74c:	mov	x29, sp
 750:	str	x19, [sp, #16]
 754:	adrp	x19, 12000 <dl_load@@Base+0x1186c>
 758:	ldrb	w0, [x19, #104]
 75c:	cbnz	w0, 784 <fprintf@plt+0xd4>
 760:	adrp	x0, 11000 <dl_load@@Base+0x1086c>
 764:	ldr	x0, [x0, #4040]
 768:	cbz	x0, 778 <fprintf@plt+0xc8>
 76c:	adrp	x0, 12000 <dl_load@@Base+0x1186c>
 770:	ldr	x0, [x0, #48]
 774:	bl	670 <__cxa_finalize@plt>
 778:	bl	6d8 <fprintf@plt+0x28>
 77c:	mov	w0, #0x1                   	// #1
 780:	strb	w0, [x19, #104]
 784:	ldr	x19, [sp, #16]
 788:	ldp	x29, x30, [sp], #32
 78c:	ret
 790:	b	708 <fprintf@plt+0x58>

0000000000000794 <dl_load@@Base>:
 794:	sub	sp, sp, #0x60
 798:	stp	x29, x30, [sp, #80]
 79c:	add	x29, sp, #0x50
 7a0:	adrp	x8, 12000 <dl_load@@Base+0x1186c>
 7a4:	add	x8, x8, #0x70
 7a8:	adrp	x9, 12000 <dl_load@@Base+0x1186c>
 7ac:	add	x9, x9, #0x78
 7b0:	adrp	x10, 12000 <dl_load@@Base+0x1186c>
 7b4:	add	x10, x10, #0x80
 7b8:	stur	x0, [x29, #-8]
 7bc:	stur	x1, [x29, #-16]
 7c0:	stur	wzr, [x29, #-36]
 7c4:	ldur	x11, [x29, #-8]
 7c8:	str	x11, [x8]
 7cc:	ldur	x11, [x29, #-16]
 7d0:	str	x11, [x9]
 7d4:	ldr	x11, [x8]
 7d8:	ldr	w12, [x11]
 7dc:	cmp	w12, #0x2
 7e0:	str	x8, [sp, #32]
 7e4:	str	x9, [sp, #24]
 7e8:	str	x10, [sp, #16]
 7ec:	b.ne	808 <dl_load@@Base+0x74>  // b.any
 7f0:	ldr	x8, [sp, #32]
 7f4:	ldr	x9, [x8]
 7f8:	ldr	w10, [x9, #4]
 7fc:	cmp	w10, #0x0
 800:	cset	w10, ge  // ge = tcont
 804:	tbnz	w10, #0, 868 <dl_load@@Base+0xd4>
 808:	adrp	x8, 11000 <dl_load@@Base+0x1086c>
 80c:	ldr	x8, [x8, #4048]
 810:	ldr	x0, [x8]
 814:	adrp	x1, 0 <exit@plt-0x660>
 818:	add	x1, x1, #0xca4
 81c:	str	x8, [sp, #8]
 820:	bl	6b0 <fprintf@plt>
 824:	ldr	x8, [sp, #8]
 828:	ldr	x9, [x8]
 82c:	ldr	x10, [sp, #32]
 830:	ldr	x11, [x10]
 834:	ldr	w4, [x11]
 838:	ldr	x11, [x10]
 83c:	ldr	w5, [x11, #4]
 840:	mov	x0, x9
 844:	adrp	x1, 0 <exit@plt-0x660>
 848:	add	x1, x1, #0xccc
 84c:	mov	w2, #0x2                   	// #2
 850:	mov	w12, wzr
 854:	mov	w3, w12
 858:	bl	6b0 <fprintf@plt>
 85c:	mov	w12, #0x1                   	// #1
 860:	mov	w0, w12
 864:	bl	660 <exit@plt>
 868:	stur	xzr, [x29, #-24]
 86c:	mov	x8, #0x1                   	// #1
 870:	stur	x8, [x29, #-32]
 874:	ldur	x8, [x29, #-24]
 878:	ldur	x9, [x29, #-32]
 87c:	cmp	x8, x9
 880:	b.cs	930 <dl_load@@Base+0x19c>  // b.hs, b.nlast
 884:	ldur	x8, [x29, #-24]
 888:	mov	x9, #0x30                  	// #48
 88c:	mul	x8, x9, x8
 890:	ldr	x9, [sp, #16]
 894:	add	x8, x9, x8
 898:	ldr	x8, [x8]
 89c:	cbnz	x8, 8a4 <dl_load@@Base+0x110>
 8a0:	b	930 <dl_load@@Base+0x19c>
 8a4:	ldr	x8, [sp, #32]
 8a8:	ldr	x9, [x8]
 8ac:	mov	x10, #0x30                  	// #48
 8b0:	ldr	x9, [x9, #48]
 8b4:	ldr	x11, [sp, #24]
 8b8:	ldr	x0, [x11]
 8bc:	ldur	x12, [x29, #-24]
 8c0:	mul	x10, x10, x12
 8c4:	ldr	x12, [sp, #16]
 8c8:	add	x2, x12, x10
 8cc:	adrp	x1, 0 <exit@plt-0x660>
 8d0:	add	x1, x1, #0xccb
 8d4:	blr	x9
 8d8:	cbnz	w0, 920 <dl_load@@Base+0x18c>
 8dc:	ldr	x8, [sp, #32]
 8e0:	ldr	x9, [x8]
 8e4:	ldr	x9, [x9, #104]
 8e8:	ldr	x10, [sp, #24]
 8ec:	ldr	x0, [x10]
 8f0:	ldur	x11, [x29, #-24]
 8f4:	mov	x12, #0x30                  	// #48
 8f8:	mul	x11, x12, x11
 8fc:	ldr	x12, [sp, #16]
 900:	add	x11, x12, x11
 904:	ldr	x2, [x11]
 908:	adrp	x1, 0 <exit@plt-0x660>
 90c:	add	x1, x1, #0xcff
 910:	blr	x9
 914:	ldur	w13, [x29, #-36]
 918:	add	w13, w13, #0x1
 91c:	stur	w13, [x29, #-36]
 920:	ldur	x8, [x29, #-24]
 924:	add	x8, x8, #0x1
 928:	stur	x8, [x29, #-24]
 92c:	b	874 <dl_load@@Base+0xe0>
 930:	adrp	x8, 12000 <dl_load@@Base+0x1186c>
 934:	add	x8, x8, #0x38
 938:	ldr	x8, [x8]
 93c:	cbz	x8, 980 <dl_load@@Base+0x1ec>
 940:	adrp	x8, 12000 <dl_load@@Base+0x1186c>
 944:	add	x8, x8, #0x38
 948:	ldr	x8, [x8]
 94c:	blr	x8
 950:	cbnz	w0, 980 <dl_load@@Base+0x1ec>
 954:	ldr	x8, [sp, #32]
 958:	ldr	x9, [x8]
 95c:	ldr	x9, [x9, #104]
 960:	ldr	x10, [sp, #24]
 964:	ldr	x0, [x10]
 968:	adrp	x1, 0 <exit@plt-0x660>
 96c:	add	x1, x1, #0xd1b
 970:	blr	x9
 974:	ldur	w11, [x29, #-36]
 978:	add	w11, w11, #0x1
 97c:	stur	w11, [x29, #-36]
 980:	adrp	x8, 12000 <dl_load@@Base+0x1186c>
 984:	add	x8, x8, #0x40
 988:	ldr	x8, [x8]
 98c:	cbz	x8, 9b4 <dl_load@@Base+0x220>
 990:	ldr	x8, [sp, #32]
 994:	ldr	x9, [x8]
 998:	ldr	x9, [x9, #88]
 99c:	ldr	x10, [sp, #24]
 9a0:	ldr	x0, [x10]
 9a4:	adrp	x11, 12000 <dl_load@@Base+0x1186c>
 9a8:	add	x11, x11, #0x40
 9ac:	ldr	x1, [x11]
 9b0:	blr	x9
 9b4:	ldur	w8, [x29, #-36]
 9b8:	cmp	w8, #0x0
 9bc:	cset	w8, eq  // eq = none
 9c0:	and	w0, w8, #0x1
 9c4:	ldp	x29, x30, [sp, #80]
 9c8:	add	sp, sp, #0x60
 9cc:	ret
 9d0:	sub	sp, sp, #0x90
 9d4:	stp	x29, x30, [sp, #128]
 9d8:	add	x29, sp, #0x80
 9dc:	adrp	x8, 12000 <dl_load@@Base+0x1186c>
 9e0:	add	x8, x8, #0x70
 9e4:	adrp	x9, 12000 <dl_load@@Base+0x1186c>
 9e8:	add	x9, x9, #0x78
 9ec:	adrp	x1, 12000 <dl_load@@Base+0x1186c>
 9f0:	add	x1, x1, #0x48
 9f4:	adrp	x10, 0 <exit@plt-0x660>
 9f8:	add	x10, x10, #0xccb
 9fc:	adrp	x2, 0 <exit@plt-0x660>
 a00:	add	x2, x2, #0xd45
 a04:	mov	w3, #0x6                   	// #6
 a08:	sub	x4, x29, #0x28
 a0c:	ldr	x11, [x8]
 a10:	ldr	x11, [x11, #64]
 a14:	ldr	x0, [x9]
 a18:	stur	x8, [x29, #-48]
 a1c:	stur	x9, [x29, #-56]
 a20:	str	x10, [sp, #64]
 a24:	str	x2, [sp, #56]
 a28:	str	w3, [sp, #52]
 a2c:	str	x4, [sp, #40]
 a30:	blr	x11
 a34:	ldur	x8, [x29, #-48]
 a38:	ldr	x9, [x8]
 a3c:	ldr	x9, [x9, #168]
 a40:	ldur	x10, [x29, #-56]
 a44:	ldr	x0, [x10]
 a48:	ldr	x1, [sp, #64]
 a4c:	ldr	x2, [sp, #56]
 a50:	ldr	w3, [sp, #52]
 a54:	ldr	x4, [sp, #40]
 a58:	blr	x9
 a5c:	cbnz	w0, af4 <dl_load@@Base+0x360>
 a60:	fmov	d0, xzr
 a64:	sub	x8, x29, #0x28
 a68:	mov	x0, x8
 a6c:	str	x8, [sp, #32]
 a70:	bl	b0c <dl_load@@Base+0x378>
 a74:	ldur	x8, [x29, #-48]
 a78:	ldr	x9, [x8]
 a7c:	ldr	x9, [x9, #176]
 a80:	ldur	x10, [x29, #-56]
 a84:	ldr	x11, [x10]
 a88:	mov	x0, x11
 a8c:	adrp	x1, 0 <exit@plt-0x660>
 a90:	add	x1, x1, #0xccb
 a94:	adrp	x2, 0 <exit@plt-0x660>
 a98:	add	x2, x2, #0xd45
 a9c:	ldr	x3, [sp, #32]
 aa0:	blr	x9
 aa4:	cbnz	w0, af4 <dl_load@@Base+0x360>
 aa8:	ldur	x8, [x29, #-48]
 aac:	ldr	x9, [x8]
 ab0:	ldr	x9, [x9, #104]
 ab4:	ldur	x10, [x29, #-56]
 ab8:	ldr	x0, [x10]
 abc:	adrp	x11, 0 <exit@plt-0x660>
 ac0:	add	x11, x11, #0xd4c
 ac4:	str	x0, [sp, #24]
 ac8:	mov	x0, x11
 acc:	str	x9, [sp, #16]
 ad0:	bl	6a0 <gettext@plt>
 ad4:	ldr	x8, [sp, #24]
 ad8:	str	x0, [sp, #8]
 adc:	mov	x0, x8
 ae0:	ldr	x1, [sp, #8]
 ae4:	ldr	x9, [sp, #16]
 ae8:	blr	x9
 aec:	stur	wzr, [x29, #-4]
 af0:	b	afc <dl_load@@Base+0x368>
 af4:	mov	w8, #0x1                   	// #1
 af8:	stur	w8, [x29, #-4]
 afc:	ldur	w0, [x29, #-4]
 b00:	ldp	x29, x30, [sp, #128]
 b04:	add	sp, sp, #0x90
 b08:	ret
 b0c:	sub	sp, sp, #0x10
 b10:	mov	w8, #0x1                   	// #1
 b14:	str	d0, [sp, #8]
 b18:	str	x0, [sp]
 b1c:	ldr	x9, [sp]
 b20:	str	w8, [x9]
 b24:	ldr	x9, [sp, #8]
 b28:	ldr	x10, [sp]
 b2c:	str	x9, [x10, #8]
 b30:	ldr	x9, [sp]
 b34:	str	wzr, [x9, #16]
 b38:	ldr	x0, [sp]
 b3c:	add	sp, sp, #0x10
 b40:	ret
 b44:	sub	sp, sp, #0x40
 b48:	stp	x29, x30, [sp, #48]
 b4c:	add	x29, sp, #0x30
 b50:	stur	x0, [x29, #-16]
 b54:	ldur	x8, [x29, #-16]
 b58:	cbnz	x8, b64 <dl_load@@Base+0x3d0>
 b5c:	stur	wzr, [x29, #-4]
 b60:	b	bbc <dl_load@@Base+0x428>
 b64:	adrp	x8, 12000 <dl_load@@Base+0x1186c>
 b68:	add	x8, x8, #0x70
 b6c:	ldr	x8, [x8]
 b70:	ldr	x8, [x8, #168]
 b74:	adrp	x9, 12000 <dl_load@@Base+0x1186c>
 b78:	add	x9, x9, #0x78
 b7c:	ldr	x0, [x9]
 b80:	adrp	x1, 0 <exit@plt-0x660>
 b84:	add	x1, x1, #0xccb
 b88:	adrp	x2, 0 <exit@plt-0x660>
 b8c:	add	x2, x2, #0xd45
 b90:	mov	w3, #0x1                   	// #1
 b94:	mov	x4, sp
 b98:	blr	x8
 b9c:	cbnz	w0, ba8 <dl_load@@Base+0x414>
 ba0:	stur	wzr, [x29, #-4]
 ba4:	b	bbc <dl_load@@Base+0x428>
 ba8:	ldr	d0, [sp, #8]
 bac:	fcmp	d0, #0.0
 bb0:	cset	w8, ne  // ne = any
 bb4:	and	w8, w8, #0x1
 bb8:	stur	w8, [x29, #-4]
 bbc:	ldur	w0, [x29, #-4]
 bc0:	ldp	x29, x30, [sp, #48]
 bc4:	add	sp, sp, #0x40
 bc8:	ret
 bcc:	sub	sp, sp, #0x10
 bd0:	str	x0, [sp]
 bd4:	ldr	x8, [sp]
 bd8:	cbnz	x8, be4 <dl_load@@Base+0x450>
 bdc:	str	wzr, [sp, #12]
 be0:	b	c04 <dl_load@@Base+0x470>
 be4:	ldr	x8, [sp]
 be8:	adrp	x9, 0 <exit@plt-0x660>
 bec:	add	x9, x9, #0xc10
 bf0:	str	x9, [x8, #40]
 bf4:	ldr	x8, [sp]
 bf8:	mov	w10, #0x1                   	// #1
 bfc:	str	w10, [x8, #24]
 c00:	str	w10, [sp, #12]
 c04:	ldr	w0, [sp, #12]
 c08:	add	sp, sp, #0x10
 c0c:	ret
 c10:	sub	sp, sp, #0x50
 c14:	stp	x29, x30, [sp, #64]
 c18:	add	x29, sp, #0x40
 c1c:	stur	x0, [x29, #-8]
 c20:	stur	x1, [x29, #-16]
 c24:	stur	x2, [x29, #-24]
 c28:	str	x3, [sp, #32]
 c2c:	str	x4, [sp, #24]
 c30:	ldur	x8, [x29, #-8]
 c34:	str	x8, [sp, #16]
 c38:	ldur	x8, [x29, #-16]
 c3c:	ldur	x9, [x29, #-24]
 c40:	mul	x8, x8, x9
 c44:	str	w8, [sp, #12]
 c48:	ldr	w8, [sp, #12]
 c4c:	cmp	w8, #0x1
 c50:	b.lt	c7c <dl_load@@Base+0x4e8>  // b.tstop
 c54:	ldr	x8, [sp, #16]
 c58:	ldr	w9, [sp, #12]
 c5c:	subs	w9, w9, #0x1
 c60:	ldrb	w0, [x8, w9, sxtw]
 c64:	ldr	x1, [sp, #32]
 c68:	bl	680 <putc@plt>
 c6c:	ldr	w8, [sp, #12]
 c70:	subs	w8, w8, #0x1
 c74:	str	w8, [sp, #12]
 c78:	b	c48 <dl_load@@Base+0x4b4>
 c7c:	ldur	x8, [x29, #-16]
 c80:	ldur	x9, [x29, #-24]
 c84:	mul	x0, x8, x9
 c88:	ldp	x29, x30, [sp, #64]
 c8c:	add	sp, sp, #0x50
 c90:	ret

Disassembly of section .fini:

0000000000000c94 <.fini>:
 c94:	stp	x29, x30, [sp, #-16]!
 c98:	mov	x29, sp
 c9c:	ldp	x29, x30, [sp], #16
 ca0:	ret
