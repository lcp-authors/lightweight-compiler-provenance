
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libltdl.so.7.3.1_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000020d0 <.init>:
    20d0:	stp	x29, x30, [sp, #-16]!
    20d4:	mov	x29, sp
    20d8:	bl	2570 <lt_dlloader_find@plt+0x10>
    20dc:	ldp	x29, x30, [sp], #16
    20e0:	ret

Disassembly of section .plt:

00000000000020f0 <lt_dlinterface_free@plt-0x20>:
    20f0:	stp	x16, x30, [sp, #-16]!
    20f4:	adrp	x16, 18000 <dlopen_LTX_get_vtable@@Base+0x11c6c>
    20f8:	ldr	x17, [x16, #4088]
    20fc:	add	x16, x16, #0xff8
    2100:	br	x17
    2104:	nop
    2108:	nop
    210c:	nop

0000000000002110 <lt_dlinterface_free@plt>:
    2110:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    2114:	ldr	x17, [x16]
    2118:	add	x16, x16, #0x0
    211c:	br	x17

0000000000002120 <memcpy@plt>:
    2120:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    2124:	ldr	x17, [x16, #8]
    2128:	add	x16, x16, #0x8
    212c:	br	x17

0000000000002130 <lt_dlclose@plt>:
    2130:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    2134:	ldr	x17, [x16, #16]
    2138:	add	x16, x16, #0x10
    213c:	br	x17

0000000000002140 <lt_dlloader_get@plt>:
    2140:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    2144:	ldr	x17, [x16, #24]
    2148:	add	x16, x16, #0x18
    214c:	br	x17

0000000000002150 <strlen@plt>:
    2150:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    2154:	ldr	x17, [x16, #32]
    2158:	add	x16, x16, #0x20
    215c:	br	x17

0000000000002160 <lt__slist_box@plt>:
    2160:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    2164:	ldr	x17, [x16, #40]
    2168:	add	x16, x16, #0x28
    216c:	br	x17

0000000000002170 <exit@plt>:
    2170:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    2174:	ldr	x17, [x16, #48]
    2178:	add	x16, x16, #0x30
    217c:	br	x17

0000000000002180 <lt__strdup@plt>:
    2180:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    2184:	ldr	x17, [x16, #56]
    2188:	add	x16, x16, #0x38
    218c:	br	x17

0000000000002190 <lt__get_last_error@plt>:
    2190:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    2194:	ldr	x17, [x16, #64]
    2198:	add	x16, x16, #0x40
    219c:	br	x17

00000000000021a0 <__cxa_finalize@plt>:
    21a0:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    21a4:	ldr	x17, [x16, #72]
    21a8:	add	x16, x16, #0x48
    21ac:	br	x17

00000000000021b0 <sprintf@plt>:
    21b0:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    21b4:	ldr	x17, [x16, #80]
    21b8:	add	x16, x16, #0x50
    21bc:	br	x17

00000000000021c0 <opendir@plt>:
    21c0:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    21c4:	ldr	x17, [x16, #88]
    21c8:	add	x16, x16, #0x58
    21cc:	br	x17

00000000000021d0 <dlclose@plt>:
    21d0:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    21d4:	ldr	x17, [x16, #96]
    21d8:	add	x16, x16, #0x60
    21dc:	br	x17

00000000000021e0 <dlopen@plt>:
    21e0:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    21e4:	ldr	x17, [x16, #104]
    21e8:	add	x16, x16, #0x68
    21ec:	br	x17

00000000000021f0 <lt_dladvise_init@plt>:
    21f0:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    21f4:	ldr	x17, [x16, #112]
    21f8:	add	x16, x16, #0x70
    21fc:	br	x17

0000000000002200 <fclose@plt>:
    2200:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    2204:	ldr	x17, [x16, #120]
    2208:	add	x16, x16, #0x78
    220c:	br	x17

0000000000002210 <fopen@plt>:
    2210:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    2214:	ldr	x17, [x16, #128]
    2218:	add	x16, x16, #0x80
    221c:	br	x17

0000000000002220 <lt_dlloader_next@plt>:
    2220:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    2224:	ldr	x17, [x16, #136]
    2228:	add	x16, x16, #0x88
    222c:	br	x17

0000000000002230 <malloc@plt>:
    2230:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    2234:	ldr	x17, [x16, #144]
    2238:	add	x16, x16, #0x90
    223c:	br	x17

0000000000002240 <dlerror@plt>:
    2240:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    2244:	ldr	x17, [x16, #152]
    2248:	add	x16, x16, #0x98
    224c:	br	x17

0000000000002250 <dlsym@plt>:
    2250:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    2254:	ldr	x17, [x16, #160]
    2258:	add	x16, x16, #0xa0
    225c:	br	x17

0000000000002260 <lt__slist_remove@plt>:
    2260:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    2264:	ldr	x17, [x16, #168]
    2268:	add	x16, x16, #0xa8
    226c:	br	x17

0000000000002270 <strncmp@plt>:
    2270:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    2274:	ldr	x17, [x16, #176]
    2278:	add	x16, x16, #0xb0
    227c:	br	x17

0000000000002280 <strcat@plt>:
    2280:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    2284:	ldr	x17, [x16, #184]
    2288:	add	x16, x16, #0xb8
    228c:	br	x17

0000000000002290 <memset@plt>:
    2290:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    2294:	ldr	x17, [x16, #192]
    2298:	add	x16, x16, #0xc0
    229c:	br	x17

00000000000022a0 <lt__error_string@plt>:
    22a0:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    22a4:	ldr	x17, [x16, #200]
    22a8:	add	x16, x16, #0xc8
    22ac:	br	x17

00000000000022b0 <lt_dladvise_ext@plt>:
    22b0:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    22b4:	ldr	x17, [x16, #208]
    22b8:	add	x16, x16, #0xd0
    22bc:	br	x17

00000000000022c0 <lt_dladvise_destroy@plt>:
    22c0:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    22c4:	ldr	x17, [x16, #216]
    22c8:	add	x16, x16, #0xd8
    22cc:	br	x17

00000000000022d0 <lt_dlpreload_open@plt>:
    22d0:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    22d4:	ldr	x17, [x16, #224]
    22d8:	add	x16, x16, #0xe0
    22dc:	br	x17

00000000000022e0 <lt__slist_find@plt>:
    22e0:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    22e4:	ldr	x17, [x16, #232]
    22e8:	add	x16, x16, #0xe8
    22ec:	br	x17

00000000000022f0 <argz_stringify@plt>:
    22f0:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    22f4:	ldr	x17, [x16, #240]
    22f8:	add	x16, x16, #0xf0
    22fc:	br	x17

0000000000002300 <readdir@plt>:
    2300:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    2304:	ldr	x17, [x16, #248]
    2308:	add	x16, x16, #0xf8
    230c:	br	x17

0000000000002310 <realloc@plt>:
    2310:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    2314:	ldr	x17, [x16, #256]
    2318:	add	x16, x16, #0x100
    231c:	br	x17

0000000000002320 <argz_insert@plt>:
    2320:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    2324:	ldr	x17, [x16, #264]
    2328:	add	x16, x16, #0x108
    232c:	br	x17

0000000000002330 <closedir@plt>:
    2330:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    2334:	ldr	x17, [x16, #272]
    2338:	add	x16, x16, #0x110
    233c:	br	x17

0000000000002340 <strrchr@plt>:
    2340:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    2344:	ldr	x17, [x16, #280]
    2348:	add	x16, x16, #0x118
    234c:	br	x17

0000000000002350 <lt__slist_concat@plt>:
    2350:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    2354:	ldr	x17, [x16, #288]
    2358:	add	x16, x16, #0x120
    235c:	br	x17

0000000000002360 <__gmon_start__@plt>:
    2360:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    2364:	ldr	x17, [x16, #296]
    2368:	add	x16, x16, #0x128
    236c:	br	x17

0000000000002370 <lt__malloc@plt>:
    2370:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    2374:	ldr	x17, [x16, #304]
    2378:	add	x16, x16, #0x130
    237c:	br	x17

0000000000002380 <lt_strlcpy@plt>:
    2380:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    2384:	ldr	x17, [x16, #312]
    2388:	add	x16, x16, #0x138
    238c:	br	x17

0000000000002390 <argz_append@plt>:
    2390:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    2394:	ldr	x17, [x16, #320]
    2398:	add	x16, x16, #0x140
    239c:	br	x17

00000000000023a0 <lt_dlisresident@plt>:
    23a0:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    23a4:	ldr	x17, [x16, #328]
    23a8:	add	x16, x16, #0x148
    23ac:	br	x17

00000000000023b0 <lt_dlopen@plt>:
    23b0:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    23b4:	ldr	x17, [x16, #336]
    23b8:	add	x16, x16, #0x150
    23bc:	br	x17

00000000000023c0 <access@plt>:
    23c0:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    23c4:	ldr	x17, [x16, #344]
    23c8:	add	x16, x16, #0x158
    23cc:	br	x17

00000000000023d0 <feof@plt>:
    23d0:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    23d4:	ldr	x17, [x16, #352]
    23d8:	add	x16, x16, #0x160
    23dc:	br	x17

00000000000023e0 <strcmp@plt>:
    23e0:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    23e4:	ldr	x17, [x16, #360]
    23e8:	add	x16, x16, #0x168
    23ec:	br	x17

00000000000023f0 <__ctype_b_loc@plt>:
    23f0:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    23f4:	ldr	x17, [x16, #368]
    23f8:	add	x16, x16, #0x170
    23fc:	br	x17

0000000000002400 <free@plt>:
    2400:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    2404:	ldr	x17, [x16, #376]
    2408:	add	x16, x16, #0x178
    240c:	br	x17

0000000000002410 <lt__set_last_error@plt>:
    2410:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    2414:	ldr	x17, [x16, #384]
    2418:	add	x16, x16, #0x180
    241c:	br	x17

0000000000002420 <lt__zalloc@plt>:
    2420:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    2424:	ldr	x17, [x16, #392]
    2428:	add	x16, x16, #0x188
    242c:	br	x17

0000000000002430 <strchr@plt>:
    2430:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    2434:	ldr	x17, [x16, #400]
    2438:	add	x16, x16, #0x190
    243c:	br	x17

0000000000002440 <lt_dlhandle_iterate@plt>:
    2440:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    2444:	ldr	x17, [x16, #408]
    2448:	add	x16, x16, #0x198
    244c:	br	x17

0000000000002450 <fwrite@plt>:
    2450:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    2454:	ldr	x17, [x16, #416]
    2458:	add	x16, x16, #0x1a0
    245c:	br	x17

0000000000002460 <strcpy@plt>:
    2460:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    2464:	ldr	x17, [x16, #424]
    2468:	add	x16, x16, #0x1a8
    246c:	br	x17

0000000000002470 <strncat@plt>:
    2470:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    2474:	ldr	x17, [x16, #432]
    2478:	add	x16, x16, #0x1b0
    247c:	br	x17

0000000000002480 <lt__slist_cons@plt>:
    2480:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    2484:	ldr	x17, [x16, #440]
    2488:	add	x16, x16, #0x1b8
    248c:	br	x17

0000000000002490 <lt__slist_unbox@plt>:
    2490:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    2494:	ldr	x17, [x16, #448]
    2498:	add	x16, x16, #0x1c0
    249c:	br	x17

00000000000024a0 <lt_dlloader_add@plt>:
    24a0:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    24a4:	ldr	x17, [x16, #456]
    24a8:	add	x16, x16, #0x1c8
    24ac:	br	x17

00000000000024b0 <argz_create_sep@plt>:
    24b0:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    24b4:	ldr	x17, [x16, #464]
    24b8:	add	x16, x16, #0x1d0
    24bc:	br	x17

00000000000024c0 <lt_dlinterface_register@plt>:
    24c0:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    24c4:	ldr	x17, [x16, #472]
    24c8:	add	x16, x16, #0x1d8
    24cc:	br	x17

00000000000024d0 <lt__realloc@plt>:
    24d0:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    24d4:	ldr	x17, [x16, #480]
    24d8:	add	x16, x16, #0x1e0
    24dc:	br	x17

00000000000024e0 <lt_dlsym@plt>:
    24e0:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    24e4:	ldr	x17, [x16, #488]
    24e8:	add	x16, x16, #0x1e8
    24ec:	br	x17

00000000000024f0 <lt_dlloader_remove@plt>:
    24f0:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    24f4:	ldr	x17, [x16, #496]
    24f8:	add	x16, x16, #0x1f0
    24fc:	br	x17

0000000000002500 <__assert_fail@plt>:
    2500:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    2504:	ldr	x17, [x16, #504]
    2508:	add	x16, x16, #0x1f8
    250c:	br	x17

0000000000002510 <getenv@plt>:
    2510:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    2514:	ldr	x17, [x16, #512]
    2518:	add	x16, x16, #0x200
    251c:	br	x17

0000000000002520 <lt__memdup@plt>:
    2520:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    2524:	ldr	x17, [x16, #520]
    2528:	add	x16, x16, #0x208
    252c:	br	x17

0000000000002530 <fgets@plt>:
    2530:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    2534:	ldr	x17, [x16, #528]
    2538:	add	x16, x16, #0x210
    253c:	br	x17

0000000000002540 <lt_dlopenadvise@plt>:
    2540:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    2544:	ldr	x17, [x16, #536]
    2548:	add	x16, x16, #0x218
    254c:	br	x17

0000000000002550 <lt_dlpreload@plt>:
    2550:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    2554:	ldr	x17, [x16, #544]
    2558:	add	x16, x16, #0x220
    255c:	br	x17

0000000000002560 <lt_dlloader_find@plt>:
    2560:	adrp	x16, 19000 <lt_dlinterface_free@@Base+0x13680>
    2564:	ldr	x17, [x16, #552]
    2568:	add	x16, x16, #0x228
    256c:	br	x17

Disassembly of section .text:

0000000000002570 <preopen_LTX_get_vtable@@Base-0x2a8>:
    2570:	adrp	x0, 18000 <dlopen_LTX_get_vtable@@Base+0x11c6c>
    2574:	ldr	x0, [x0, #4048]
    2578:	cbz	x0, 2580 <lt_dlloader_find@plt+0x20>
    257c:	b	2360 <__gmon_start__@plt>
    2580:	ret
    2584:	adrp	x0, 19000 <lt_dlinterface_free@@Base+0x13680>
    2588:	add	x0, x0, #0x248
    258c:	adrp	x1, 19000 <lt_dlinterface_free@@Base+0x13680>
    2590:	add	x1, x1, #0x248
    2594:	cmp	x0, x1
    2598:	b.eq	25c4 <lt_dlloader_find@plt+0x64>  // b.none
    259c:	adrp	x1, 18000 <dlopen_LTX_get_vtable@@Base+0x11c6c>
    25a0:	ldr	x1, [x1, #4008]
    25a4:	cbz	x1, 25c4 <lt_dlloader_find@plt+0x64>
    25a8:	stp	x29, x30, [sp, #-16]!
    25ac:	mov	x29, sp
    25b0:	adrp	x0, 19000 <lt_dlinterface_free@@Base+0x13680>
    25b4:	add	x0, x0, #0x248
    25b8:	blr	x1
    25bc:	ldp	x29, x30, [sp], #16
    25c0:	ret
    25c4:	ret
    25c8:	adrp	x0, 19000 <lt_dlinterface_free@@Base+0x13680>
    25cc:	add	x0, x0, #0x248
    25d0:	adrp	x1, 19000 <lt_dlinterface_free@@Base+0x13680>
    25d4:	add	x1, x1, #0x248
    25d8:	sub	x0, x0, x1
    25dc:	lsr	x1, x0, #63
    25e0:	add	x0, x1, x0, asr #3
    25e4:	cmp	xzr, x0, asr #1
    25e8:	b.eq	2618 <lt_dlloader_find@plt+0xb8>  // b.none
    25ec:	asr	x1, x0, #1
    25f0:	adrp	x2, 18000 <dlopen_LTX_get_vtable@@Base+0x11c6c>
    25f4:	ldr	x2, [x2, #4064]
    25f8:	cbz	x2, 2618 <lt_dlloader_find@plt+0xb8>
    25fc:	stp	x29, x30, [sp, #-16]!
    2600:	mov	x29, sp
    2604:	adrp	x0, 19000 <lt_dlinterface_free@@Base+0x13680>
    2608:	add	x0, x0, #0x248
    260c:	blr	x2
    2610:	ldp	x29, x30, [sp], #16
    2614:	ret
    2618:	ret
    261c:	adrp	x0, 19000 <lt_dlinterface_free@@Base+0x13680>
    2620:	ldrb	w0, [x0, #584]
    2624:	cbnz	w0, 2660 <lt_dlloader_find@plt+0x100>
    2628:	stp	x29, x30, [sp, #-16]!
    262c:	mov	x29, sp
    2630:	adrp	x0, 18000 <dlopen_LTX_get_vtable@@Base+0x11c6c>
    2634:	ldr	x0, [x0, #4016]
    2638:	cbz	x0, 2648 <lt_dlloader_find@plt+0xe8>
    263c:	adrp	x0, 19000 <lt_dlinterface_free@@Base+0x13680>
    2640:	ldr	x0, [x0, #560]
    2644:	bl	21a0 <__cxa_finalize@plt>
    2648:	bl	2584 <lt_dlloader_find@plt+0x24>
    264c:	adrp	x0, 19000 <lt_dlinterface_free@@Base+0x13680>
    2650:	mov	w1, #0x1                   	// #1
    2654:	strb	w1, [x0, #584]
    2658:	ldp	x29, x30, [sp], #16
    265c:	ret
    2660:	ret
    2664:	stp	x29, x30, [sp, #-16]!
    2668:	mov	x29, sp
    266c:	bl	25c8 <lt_dlloader_find@plt+0x68>
    2670:	ldp	x29, x30, [sp], #16
    2674:	ret
    2678:	mov	w0, #0x0                   	// #0
    267c:	ret
    2680:	stp	x29, x30, [sp, #-32]!
    2684:	mov	x29, sp
    2688:	str	x19, [sp, #16]
    268c:	adrp	x0, 19000 <lt_dlinterface_free@@Base+0x13680>
    2690:	ldr	x19, [x0, #592]
    2694:	cbz	x19, 26a8 <lt_dlloader_find@plt+0x148>
    2698:	mov	x0, x19
    269c:	ldr	x19, [x19]
    26a0:	bl	2400 <free@plt>
    26a4:	cbnz	x19, 2698 <lt_dlloader_find@plt+0x138>
    26a8:	adrp	x0, 19000 <lt_dlinterface_free@@Base+0x13680>
    26ac:	str	xzr, [x0, #592]
    26b0:	mov	w0, #0x0                   	// #0
    26b4:	ldr	x19, [sp, #16]
    26b8:	ldp	x29, x30, [sp], #32
    26bc:	ret
    26c0:	stp	x29, x30, [sp, #-16]!
    26c4:	mov	x29, sp
    26c8:	adrp	x0, 19000 <lt_dlinterface_free@@Base+0x13680>
    26cc:	str	xzr, [x0, #600]
    26d0:	bl	2680 <lt_dlloader_find@plt+0x120>
    26d4:	mov	w0, #0x0                   	// #0
    26d8:	ldp	x29, x30, [sp], #16
    26dc:	ret
    26e0:	stp	x29, x30, [sp, #-48]!
    26e4:	mov	x29, sp
    26e8:	stp	x19, x20, [sp, #16]
    26ec:	str	x21, [sp, #32]
    26f0:	mov	x21, x1
    26f4:	mov	x20, x2
    26f8:	ldr	x0, [x1, #16]
    26fc:	cbz	x0, 2718 <lt_dlloader_find@plt+0x1b8>
    2700:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    2704:	add	x1, x1, #0x458
    2708:	bl	23e0 <strcmp@plt>
    270c:	add	x1, x21, #0x10
    2710:	cmp	w0, #0x0
    2714:	csel	x21, x1, x21, eq  // eq = none
    2718:	add	x19, x21, #0x20
    271c:	ldr	x0, [x21, #32]
    2720:	cbz	x0, 2738 <lt_dlloader_find@plt+0x1d8>
    2724:	mov	x1, x20
    2728:	bl	23e0 <strcmp@plt>
    272c:	cbz	w0, 2758 <lt_dlloader_find@plt+0x1f8>
    2730:	ldr	x0, [x19, #16]!
    2734:	cbnz	x0, 2724 <lt_dlloader_find@plt+0x1c4>
    2738:	mov	w0, #0xa                   	// #10
    273c:	bl	22a0 <lt__error_string@plt>
    2740:	bl	2410 <lt__set_last_error@plt>
    2744:	mov	x0, #0x0                   	// #0
    2748:	ldp	x19, x20, [sp, #16]
    274c:	ldr	x21, [sp, #32]
    2750:	ldp	x29, x30, [sp], #48
    2754:	ret
    2758:	ldr	x0, [x19, #8]
    275c:	b	2748 <lt_dlloader_find@plt+0x1e8>
    2760:	stp	x29, x30, [sp, #-48]!
    2764:	mov	x29, sp
    2768:	stp	x21, x22, [sp, #32]
    276c:	adrp	x0, 19000 <lt_dlinterface_free@@Base+0x13680>
    2770:	ldr	x21, [x0, #592]
    2774:	cbz	x21, 2790 <lt_dlloader_find@plt+0x230>
    2778:	stp	x19, x20, [sp, #16]
    277c:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    2780:	add	x0, x0, #0x460
    2784:	cmp	x1, #0x0
    2788:	csel	x20, x0, x1, eq  // eq = none
    278c:	b	27ec <lt_dlloader_find@plt+0x28c>
    2790:	mov	w0, #0x7                   	// #7
    2794:	bl	22a0 <lt__error_string@plt>
    2798:	bl	2410 <lt__set_last_error@plt>
    279c:	mov	x22, x21
    27a0:	b	27d4 <lt_dlloader_find@plt+0x274>
    27a4:	ldr	x0, [x19, #16]!
    27a8:	cbz	x0, 27e4 <lt_dlloader_find@plt+0x284>
    27ac:	ldr	x2, [x19, #8]
    27b0:	cbnz	x2, 27a4 <lt_dlloader_find@plt+0x244>
    27b4:	mov	x1, x20
    27b8:	bl	23e0 <strcmp@plt>
    27bc:	cbnz	w0, 27a4 <lt_dlloader_find@plt+0x244>
    27c0:	ldr	x0, [x19, #24]
    27c4:	cbz	x0, 27a4 <lt_dlloader_find@plt+0x244>
    27c8:	ldr	x0, [x19, #16]
    27cc:	cbz	x0, 27a4 <lt_dlloader_find@plt+0x244>
    27d0:	ldp	x19, x20, [sp, #16]
    27d4:	mov	x0, x22
    27d8:	ldp	x21, x22, [sp, #32]
    27dc:	ldp	x29, x30, [sp], #48
    27e0:	ret
    27e4:	ldr	x21, [x21]
    27e8:	cbz	x21, 2800 <lt_dlloader_find@plt+0x2a0>
    27ec:	ldr	x22, [x21, #8]
    27f0:	ldr	x0, [x22]
    27f4:	cbz	x0, 27e4 <lt_dlloader_find@plt+0x284>
    27f8:	mov	x19, x22
    27fc:	b	27ac <lt_dlloader_find@plt+0x24c>
    2800:	mov	w0, #0x5                   	// #5
    2804:	bl	22a0 <lt__error_string@plt>
    2808:	bl	2410 <lt__set_last_error@plt>
    280c:	mov	x22, x21
    2810:	ldp	x19, x20, [sp, #16]
    2814:	b	27d4 <lt_dlloader_find@plt+0x274>

0000000000002818 <preopen_LTX_get_vtable@@Base>:
    2818:	stp	x29, x30, [sp, #-32]!
    281c:	mov	x29, sp
    2820:	str	x19, [sp, #16]
    2824:	mov	x19, x0
    2828:	adrp	x1, 19000 <lt_dlinterface_free@@Base+0x13680>
    282c:	ldr	x0, [x1, #600]
    2830:	cbz	x0, 2854 <preopen_LTX_get_vtable@@Base+0x3c>
    2834:	ldr	x1, [x0]
    2838:	cbz	x1, 286c <preopen_LTX_get_vtable@@Base+0x54>
    283c:	ldr	x1, [x0, #56]
    2840:	cmp	x1, x19
    2844:	b.ne	28c4 <preopen_LTX_get_vtable@@Base+0xac>  // b.any
    2848:	ldr	x19, [sp, #16]
    284c:	ldp	x29, x30, [sp], #32
    2850:	ret
    2854:	mov	x0, #0x48                  	// #72
    2858:	bl	2420 <lt__zalloc@plt>
    285c:	adrp	x1, 19000 <lt_dlinterface_free@@Base+0x13680>
    2860:	str	x0, [x1, #600]
    2864:	cbz	x0, 2848 <preopen_LTX_get_vtable@@Base+0x30>
    2868:	b	2834 <preopen_LTX_get_vtable@@Base+0x1c>
    286c:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    2870:	add	x1, x1, #0x470
    2874:	str	x1, [x0]
    2878:	str	xzr, [x0, #8]
    287c:	adrp	x1, 2000 <lt_dlinterface_free@plt-0x110>
    2880:	add	x1, x1, #0x760
    2884:	str	x1, [x0, #16]
    2888:	adrp	x1, 2000 <lt_dlinterface_free@plt-0x110>
    288c:	add	x1, x1, #0x678
    2890:	str	x1, [x0, #24]
    2894:	adrp	x1, 2000 <lt_dlinterface_free@plt-0x110>
    2898:	add	x1, x1, #0x6e0
    289c:	str	x1, [x0, #32]
    28a0:	adrp	x1, 2000 <lt_dlinterface_free@plt-0x110>
    28a4:	add	x1, x1, #0x9ac
    28a8:	str	x1, [x0, #40]
    28ac:	adrp	x1, 2000 <lt_dlinterface_free@plt-0x110>
    28b0:	add	x1, x1, #0x6c0
    28b4:	str	x1, [x0, #48]
    28b8:	str	x19, [x0, #56]
    28bc:	str	wzr, [x0, #64]
    28c0:	b	2848 <preopen_LTX_get_vtable@@Base+0x30>
    28c4:	mov	w0, #0x3                   	// #3
    28c8:	bl	22a0 <lt__error_string@plt>
    28cc:	bl	2410 <lt__set_last_error@plt>
    28d0:	mov	x0, #0x0                   	// #0
    28d4:	b	2848 <preopen_LTX_get_vtable@@Base+0x30>

00000000000028d8 <lt_dlpreload_default@@Base>:
    28d8:	adrp	x1, 19000 <lt_dlinterface_free@@Base+0x13680>
    28dc:	str	x0, [x1, #608]
    28e0:	mov	w0, #0x0                   	// #0
    28e4:	ret

00000000000028e8 <lt_dlpreload@@Base>:
    28e8:	stp	x29, x30, [sp, #-32]!
    28ec:	mov	x29, sp
    28f0:	stp	x19, x20, [sp, #16]
    28f4:	cbz	x0, 297c <lt_dlpreload@@Base+0x94>
    28f8:	mov	x19, x0
    28fc:	adrp	x0, 19000 <lt_dlinterface_free@@Base+0x13680>
    2900:	ldr	x1, [x0, #592]
    2904:	cbz	x1, 291c <lt_dlpreload@@Base+0x34>
    2908:	ldr	x0, [x1, #8]
    290c:	cmp	x19, x0
    2910:	b.eq	2968 <lt_dlpreload@@Base+0x80>  // b.none
    2914:	ldr	x1, [x1]
    2918:	cbnz	x1, 2908 <lt_dlpreload@@Base+0x20>
    291c:	mov	x0, #0x10                  	// #16
    2920:	bl	2420 <lt__zalloc@plt>
    2924:	cbz	x0, 29a4 <lt_dlpreload@@Base+0xbc>
    2928:	str	x19, [x0, #8]
    292c:	adrp	x1, 19000 <lt_dlinterface_free@@Base+0x13680>
    2930:	ldr	x2, [x1, #592]
    2934:	str	x2, [x0]
    2938:	str	x0, [x1, #592]
    293c:	ldr	x0, [x19, #16]
    2940:	mov	w20, #0x0                   	// #0
    2944:	cbz	x0, 296c <lt_dlpreload@@Base+0x84>
    2948:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    294c:	add	x1, x1, #0x458
    2950:	bl	23e0 <strcmp@plt>
    2954:	mov	w20, w0
    2958:	cbnz	w0, 299c <lt_dlpreload@@Base+0xb4>
    295c:	ldr	x0, [x19, #24]
    2960:	blr	x0
    2964:	b	296c <lt_dlpreload@@Base+0x84>
    2968:	mov	w20, #0x0                   	// #0
    296c:	mov	w0, w20
    2970:	ldp	x19, x20, [sp, #16]
    2974:	ldp	x29, x30, [sp], #32
    2978:	ret
    297c:	bl	2680 <lt_dlloader_find@plt+0x120>
    2980:	adrp	x0, 19000 <lt_dlinterface_free@@Base+0x13680>
    2984:	ldr	x0, [x0, #608]
    2988:	mov	w20, #0x0                   	// #0
    298c:	cbz	x0, 296c <lt_dlpreload@@Base+0x84>
    2990:	bl	28e8 <lt_dlpreload@@Base>
    2994:	mov	w20, w0
    2998:	b	296c <lt_dlpreload@@Base+0x84>
    299c:	mov	w20, #0x0                   	// #0
    29a0:	b	296c <lt_dlpreload@@Base+0x84>
    29a4:	mov	w20, #0x1                   	// #1
    29a8:	b	296c <lt_dlpreload@@Base+0x84>
    29ac:	adrp	x0, 19000 <lt_dlinterface_free@@Base+0x13680>
    29b0:	add	x1, x0, #0x250
    29b4:	str	xzr, [x0, #592]
    29b8:	ldr	x1, [x1, #16]
    29bc:	mov	w0, #0x0                   	// #0
    29c0:	cbz	x1, 29dc <lt_dlpreload@@Base+0xf4>
    29c4:	stp	x29, x30, [sp, #-16]!
    29c8:	mov	x29, sp
    29cc:	mov	x0, x1
    29d0:	bl	2550 <lt_dlpreload@plt>
    29d4:	ldp	x29, x30, [sp], #16
    29d8:	ret
    29dc:	ret

00000000000029e0 <lt_dlpreload_open@@Base>:
    29e0:	stp	x29, x30, [sp, #-80]!
    29e4:	mov	x29, sp
    29e8:	stp	x19, x20, [sp, #16]
    29ec:	stp	x21, x22, [sp, #32]
    29f0:	stp	x25, x26, [sp, #64]
    29f4:	mov	x22, x0
    29f8:	adrp	x0, 19000 <lt_dlinterface_free@@Base+0x13680>
    29fc:	ldr	x19, [x0, #592]
    2a00:	cbz	x19, 2af4 <lt_dlpreload_open@@Base+0x114>
    2a04:	stp	x23, x24, [sp, #48]
    2a08:	mov	x26, x1
    2a0c:	mov	w24, #0x0                   	// #0
    2a10:	mov	w25, #0x0                   	// #0
    2a14:	adrp	x23, 6000 <lt__slist_sort@@Base+0x74>
    2a18:	add	x23, x23, #0x460
    2a1c:	b	2a3c <lt_dlpreload_open@@Base+0x5c>
    2a20:	ldr	x0, [x19, #8]
    2a24:	mov	x1, x23
    2a28:	ldr	x0, [x0]
    2a2c:	bl	23e0 <strcmp@plt>
    2a30:	cbz	w0, 2a54 <lt_dlpreload_open@@Base+0x74>
    2a34:	ldr	x19, [x19]
    2a38:	cbz	x19, 2abc <lt_dlpreload_open@@Base+0xdc>
    2a3c:	cbz	x22, 2a20 <lt_dlpreload_open@@Base+0x40>
    2a40:	ldr	x0, [x19, #8]
    2a44:	mov	x1, x22
    2a48:	ldr	x0, [x0]
    2a4c:	bl	23e0 <strcmp@plt>
    2a50:	cbnz	w0, 2a34 <lt_dlpreload_open@@Base+0x54>
    2a54:	add	w24, w24, #0x1
    2a58:	ldr	x1, [x19, #8]
    2a5c:	add	x0, x1, #0x10
    2a60:	ldr	x21, [x1, #16]
    2a64:	cbz	x21, 2a34 <lt_dlpreload_open@@Base+0x54>
    2a68:	mov	w20, #0x1                   	// #1
    2a6c:	b	2a8c <lt_dlpreload_open@@Base+0xac>
    2a70:	add	w25, w25, #0x1
    2a74:	add	w20, w20, #0x1
    2a78:	ubfiz	x2, x20, #4, #32
    2a7c:	ldr	x3, [x19, #8]
    2a80:	add	x0, x3, x2
    2a84:	ldr	x21, [x3, x2]
    2a88:	cbz	x21, 2a34 <lt_dlpreload_open@@Base+0x54>
    2a8c:	ldr	x0, [x0, #8]
    2a90:	cbnz	x0, 2a74 <lt_dlpreload_open@@Base+0x94>
    2a94:	mov	x1, x23
    2a98:	mov	x0, x21
    2a9c:	bl	23e0 <strcmp@plt>
    2aa0:	cbz	w0, 2a74 <lt_dlpreload_open@@Base+0x94>
    2aa4:	mov	x0, x21
    2aa8:	bl	23b0 <lt_dlopen@plt>
    2aac:	cbz	x0, 2a70 <lt_dlpreload_open@@Base+0x90>
    2ab0:	blr	x26
    2ab4:	add	w25, w25, w0
    2ab8:	b	2a74 <lt_dlpreload_open@@Base+0x94>
    2abc:	cbz	w24, 2adc <lt_dlpreload_open@@Base+0xfc>
    2ac0:	ldp	x23, x24, [sp, #48]
    2ac4:	mov	w0, w25
    2ac8:	ldp	x19, x20, [sp, #16]
    2acc:	ldp	x21, x22, [sp, #32]
    2ad0:	ldp	x25, x26, [sp, #64]
    2ad4:	ldp	x29, x30, [sp], #80
    2ad8:	ret
    2adc:	ldp	x23, x24, [sp, #48]
    2ae0:	mov	w0, #0x8                   	// #8
    2ae4:	bl	22a0 <lt__error_string@plt>
    2ae8:	bl	2410 <lt__set_last_error@plt>
    2aec:	add	w25, w25, #0x1
    2af0:	b	2ac4 <lt_dlpreload_open@@Base+0xe4>
    2af4:	mov	w25, #0x0                   	// #0
    2af8:	b	2ae0 <lt_dlpreload_open@@Base+0x100>
    2afc:	stp	x29, x30, [sp, #-16]!
    2b00:	mov	x29, sp
    2b04:	adrp	x0, 18000 <dlopen_LTX_get_vtable@@Base+0x11c6c>
    2b08:	ldr	x0, [x0, #4024]
    2b0c:	ldr	x3, [x0]
    2b10:	mov	x2, #0xf                   	// #15
    2b14:	mov	x1, #0x1                   	// #1
    2b18:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    2b1c:	add	x0, x0, #0x480
    2b20:	bl	2450 <fwrite@plt>
    2b24:	mov	w0, #0x1                   	// #1
    2b28:	bl	2170 <exit@plt>

0000000000002b2c <lt__malloc@@Base>:
    2b2c:	stp	x29, x30, [sp, #-32]!
    2b30:	mov	x29, sp
    2b34:	str	x19, [sp, #16]
    2b38:	bl	2230 <malloc@plt>
    2b3c:	mov	x19, x0
    2b40:	cbz	x0, 2b54 <lt__malloc@@Base+0x28>
    2b44:	mov	x0, x19
    2b48:	ldr	x19, [sp, #16]
    2b4c:	ldp	x29, x30, [sp], #32
    2b50:	ret
    2b54:	adrp	x0, 18000 <dlopen_LTX_get_vtable@@Base+0x11c6c>
    2b58:	ldr	x0, [x0, #4040]
    2b5c:	ldr	x0, [x0]
    2b60:	blr	x0
    2b64:	b	2b44 <lt__malloc@@Base+0x18>

0000000000002b68 <lt__zalloc@@Base>:
    2b68:	stp	x29, x30, [sp, #-32]!
    2b6c:	mov	x29, sp
    2b70:	stp	x19, x20, [sp, #16]
    2b74:	mov	x20, x0
    2b78:	bl	2370 <lt__malloc@plt>
    2b7c:	mov	x19, x0
    2b80:	cbz	x0, 2b90 <lt__zalloc@@Base+0x28>
    2b84:	mov	x2, x20
    2b88:	mov	w1, #0x0                   	// #0
    2b8c:	bl	2290 <memset@plt>
    2b90:	mov	x0, x19
    2b94:	ldp	x19, x20, [sp, #16]
    2b98:	ldp	x29, x30, [sp], #32
    2b9c:	ret

0000000000002ba0 <lt__realloc@@Base>:
    2ba0:	stp	x29, x30, [sp, #-32]!
    2ba4:	mov	x29, sp
    2ba8:	str	x19, [sp, #16]
    2bac:	bl	2310 <realloc@plt>
    2bb0:	mov	x19, x0
    2bb4:	cbz	x0, 2bc8 <lt__realloc@@Base+0x28>
    2bb8:	mov	x0, x19
    2bbc:	ldr	x19, [sp, #16]
    2bc0:	ldp	x29, x30, [sp], #32
    2bc4:	ret
    2bc8:	adrp	x0, 18000 <dlopen_LTX_get_vtable@@Base+0x11c6c>
    2bcc:	ldr	x0, [x0, #4040]
    2bd0:	ldr	x0, [x0]
    2bd4:	blr	x0
    2bd8:	b	2bb8 <lt__realloc@@Base+0x18>

0000000000002bdc <lt__memdup@@Base>:
    2bdc:	stp	x29, x30, [sp, #-32]!
    2be0:	mov	x29, sp
    2be4:	stp	x19, x20, [sp, #16]
    2be8:	mov	x20, x0
    2bec:	mov	x19, x1
    2bf0:	mov	x0, x1
    2bf4:	bl	2370 <lt__malloc@plt>
    2bf8:	cbz	x0, 2c08 <lt__memdup@@Base+0x2c>
    2bfc:	mov	x2, x19
    2c00:	mov	x1, x20
    2c04:	bl	2120 <memcpy@plt>
    2c08:	ldp	x19, x20, [sp, #16]
    2c0c:	ldp	x29, x30, [sp], #32
    2c10:	ret

0000000000002c14 <lt__strdup@@Base>:
    2c14:	stp	x29, x30, [sp, #-32]!
    2c18:	mov	x29, sp
    2c1c:	str	x19, [sp, #16]
    2c20:	mov	x19, x0
    2c24:	bl	2150 <strlen@plt>
    2c28:	add	x1, x0, #0x1
    2c2c:	mov	x0, x19
    2c30:	bl	2520 <lt__memdup@plt>
    2c34:	ldr	x19, [sp, #16]
    2c38:	ldp	x29, x30, [sp], #32
    2c3c:	ret
    2c40:	stp	x29, x30, [sp, #-32]!
    2c44:	mov	x29, sp
    2c48:	str	x19, [sp, #16]
    2c4c:	mov	x19, x0
    2c50:	ldr	x0, [x0, #8]
    2c54:	cbz	x0, 2c74 <lt__strdup@@Base+0x60>
    2c58:	ldr	x0, [x0]
    2c5c:	bl	23e0 <strcmp@plt>
    2c60:	cmp	w0, #0x0
    2c64:	csel	x0, x19, xzr, eq  // eq = none
    2c68:	ldr	x19, [sp, #16]
    2c6c:	ldp	x29, x30, [sp], #32
    2c70:	ret
    2c74:	adrp	x3, 6000 <lt__slist_sort@@Base+0x74>
    2c78:	add	x3, x3, #0x4d8
    2c7c:	mov	w2, #0x36                  	// #54
    2c80:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    2c84:	add	x1, x1, #0x490
    2c88:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    2c8c:	add	x0, x0, #0x4a8
    2c90:	bl	2500 <__assert_fail@plt>

0000000000002c94 <lt_dlloader_add@@Base>:
    2c94:	stp	x29, x30, [sp, #-32]!
    2c98:	mov	x29, sp
    2c9c:	cbz	x0, 2cd0 <lt_dlloader_add@@Base+0x3c>
    2ca0:	str	x19, [sp, #16]
    2ca4:	mov	x19, x0
    2ca8:	ldr	x0, [x0, #16]
    2cac:	cbz	x0, 2ce8 <lt_dlloader_add@@Base+0x54>
    2cb0:	ldr	x0, [x19, #24]
    2cb4:	cbz	x0, 2cf0 <lt_dlloader_add@@Base+0x5c>
    2cb8:	ldr	x0, [x19, #32]
    2cbc:	cbz	x0, 2cf8 <lt_dlloader_add@@Base+0x64>
    2cc0:	ldr	w0, [x19, #64]
    2cc4:	cmp	w0, #0x1
    2cc8:	b.ls	2d00 <lt_dlloader_add@@Base+0x6c>  // b.plast
    2ccc:	ldr	x19, [sp, #16]
    2cd0:	mov	w0, #0x2                   	// #2
    2cd4:	bl	22a0 <lt__error_string@plt>
    2cd8:	bl	2410 <lt__set_last_error@plt>
    2cdc:	mov	w0, #0x1                   	// #1
    2ce0:	ldp	x29, x30, [sp], #32
    2ce4:	ret
    2ce8:	ldr	x19, [sp, #16]
    2cec:	b	2cd0 <lt_dlloader_add@@Base+0x3c>
    2cf0:	ldr	x19, [sp, #16]
    2cf4:	b	2cd0 <lt_dlloader_add@@Base+0x3c>
    2cf8:	ldr	x19, [sp, #16]
    2cfc:	b	2cd0 <lt_dlloader_add@@Base+0x3c>
    2d00:	mov	x0, x19
    2d04:	bl	2160 <lt__slist_box@plt>
    2d08:	cbz	x0, 2d3c <lt_dlloader_add@@Base+0xa8>
    2d0c:	ldr	w1, [x19, #64]
    2d10:	cbz	w1, 2d58 <lt_dlloader_add@@Base+0xc4>
    2d14:	cmp	w1, #0x1
    2d18:	b.ne	2d74 <lt_dlloader_add@@Base+0xe0>  // b.any
    2d1c:	adrp	x19, 19000 <lt_dlinterface_free@@Base+0x13680>
    2d20:	mov	x1, x0
    2d24:	ldr	x0, [x19, #616]
    2d28:	bl	2350 <lt__slist_concat@plt>
    2d2c:	str	x0, [x19, #616]
    2d30:	mov	w0, #0x0                   	// #0
    2d34:	ldr	x19, [sp, #16]
    2d38:	b	2ce0 <lt_dlloader_add@@Base+0x4c>
    2d3c:	adrp	x0, 18000 <dlopen_LTX_get_vtable@@Base+0x11c6c>
    2d40:	ldr	x0, [x0, #4040]
    2d44:	ldr	x0, [x0]
    2d48:	blr	x0
    2d4c:	mov	w0, #0x1                   	// #1
    2d50:	ldr	x19, [sp, #16]
    2d54:	b	2ce0 <lt_dlloader_add@@Base+0x4c>
    2d58:	adrp	x19, 19000 <lt_dlinterface_free@@Base+0x13680>
    2d5c:	ldr	x1, [x19, #616]
    2d60:	bl	2480 <lt__slist_cons@plt>
    2d64:	str	x0, [x19, #616]
    2d68:	mov	w0, #0x0                   	// #0
    2d6c:	ldr	x19, [sp, #16]
    2d70:	b	2ce0 <lt_dlloader_add@@Base+0x4c>
    2d74:	adrp	x3, 6000 <lt__slist_sort@@Base+0x74>
    2d78:	add	x3, x3, #0x4d8
    2d7c:	add	x3, x3, #0x10
    2d80:	mov	w2, #0x5e                  	// #94
    2d84:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    2d88:	add	x1, x1, #0x490
    2d8c:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    2d90:	add	x0, x0, #0x4b0
    2d94:	bl	2500 <__assert_fail@plt>

0000000000002d98 <lt_dlloader_next@@Base>:
    2d98:	cbz	x0, 2da4 <lt_dlloader_next@@Base+0xc>
    2d9c:	ldr	x0, [x0]
    2da0:	ret
    2da4:	adrp	x0, 19000 <lt_dlinterface_free@@Base+0x13680>
    2da8:	ldr	x0, [x0, #616]
    2dac:	b	2da0 <lt_dlloader_next@@Base+0x8>

0000000000002db0 <lt_dlloader_get@@Base>:
    2db0:	cbz	x0, 2db8 <lt_dlloader_get@@Base+0x8>
    2db4:	ldr	x0, [x0, #8]
    2db8:	ret

0000000000002dbc <lt_dlloader_find@@Base>:
    2dbc:	stp	x29, x30, [sp, #-16]!
    2dc0:	mov	x29, sp
    2dc4:	mov	x2, x0
    2dc8:	adrp	x1, 2000 <lt_dlinterface_free@plt-0x110>
    2dcc:	add	x1, x1, #0xc40
    2dd0:	adrp	x0, 19000 <lt_dlinterface_free@@Base+0x13680>
    2dd4:	ldr	x0, [x0, #616]
    2dd8:	bl	22e0 <lt__slist_find@plt>
    2ddc:	bl	2140 <lt_dlloader_get@plt>
    2de0:	ldp	x29, x30, [sp], #16
    2de4:	ret

0000000000002de8 <lt_dlloader_remove@@Base>:
    2de8:	stp	x29, x30, [sp, #-80]!
    2dec:	mov	x29, sp
    2df0:	stp	x19, x20, [sp, #16]
    2df4:	stp	x25, x26, [sp, #64]
    2df8:	mov	x25, x0
    2dfc:	bl	2560 <lt_dlloader_find@plt>
    2e00:	mov	x20, x0
    2e04:	cbz	x0, 2e74 <lt_dlloader_remove@@Base+0x8c>
    2e08:	stp	x21, x22, [sp, #32]
    2e0c:	stp	x23, x24, [sp, #48]
    2e10:	mov	x1, #0x0                   	// #0
    2e14:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    2e18:	add	x0, x0, #0x4d8
    2e1c:	add	x0, x0, #0x20
    2e20:	bl	24c0 <lt_dlinterface_register@plt>
    2e24:	mov	x21, x0
    2e28:	mov	w23, #0x0                   	// #0
    2e2c:	mov	w22, #0x0                   	// #0
    2e30:	mov	x19, #0x0                   	// #0
    2e34:	mov	w24, #0x1                   	// #1
    2e38:	mov	w26, w24
    2e3c:	mov	x1, x19
    2e40:	mov	x0, x21
    2e44:	bl	2440 <lt_dlhandle_iterate@plt>
    2e48:	mov	x19, x0
    2e4c:	cbz	x0, 2e88 <lt_dlloader_remove@@Base+0xa0>
    2e50:	ldr	x1, [x19, #8]
    2e54:	cmp	x1, x20
    2e58:	b.ne	2e3c <lt_dlloader_remove@@Base+0x54>  // b.any
    2e5c:	mov	x0, x19
    2e60:	bl	23a0 <lt_dlisresident@plt>
    2e64:	cmp	w0, #0x0
    2e68:	csel	w23, w23, w24, eq  // eq = none
    2e6c:	csel	w22, w24, w26, eq  // eq = none
    2e70:	b	2e3c <lt_dlloader_remove@@Base+0x54>
    2e74:	mov	w0, #0x2                   	// #2
    2e78:	bl	22a0 <lt__error_string@plt>
    2e7c:	bl	2410 <lt__set_last_error@plt>
    2e80:	mov	x19, x20
    2e84:	b	2ed0 <lt_dlloader_remove@@Base+0xe8>
    2e88:	mov	x0, x21
    2e8c:	bl	2110 <lt_dlinterface_free@plt>
    2e90:	cbnz	w22, 2ee4 <lt_dlloader_remove@@Base+0xfc>
    2e94:	ldr	x1, [x20, #48]
    2e98:	cbz	x1, 2ea8 <lt_dlloader_remove@@Base+0xc0>
    2e9c:	ldr	x0, [x20, #56]
    2ea0:	blr	x1
    2ea4:	cbnz	w0, 2f0c <lt_dlloader_remove@@Base+0x124>
    2ea8:	mov	x2, x25
    2eac:	adrp	x1, 2000 <lt_dlinterface_free@plt-0x110>
    2eb0:	add	x1, x1, #0xc40
    2eb4:	adrp	x0, 19000 <lt_dlinterface_free@@Base+0x13680>
    2eb8:	add	x0, x0, #0x268
    2ebc:	bl	2260 <lt__slist_remove@plt>
    2ec0:	bl	2490 <lt__slist_unbox@plt>
    2ec4:	mov	x19, x0
    2ec8:	ldp	x21, x22, [sp, #32]
    2ecc:	ldp	x23, x24, [sp, #48]
    2ed0:	mov	x0, x19
    2ed4:	ldp	x19, x20, [sp, #16]
    2ed8:	ldp	x25, x26, [sp, #64]
    2edc:	ldp	x29, x30, [sp], #80
    2ee0:	ret
    2ee4:	cbz	w23, 2ef4 <lt_dlloader_remove@@Base+0x10c>
    2ee8:	ldp	x21, x22, [sp, #32]
    2eec:	ldp	x23, x24, [sp, #48]
    2ef0:	b	2ed0 <lt_dlloader_remove@@Base+0xe8>
    2ef4:	mov	w0, #0x4                   	// #4
    2ef8:	bl	22a0 <lt__error_string@plt>
    2efc:	bl	2410 <lt__set_last_error@plt>
    2f00:	ldp	x21, x22, [sp, #32]
    2f04:	ldp	x23, x24, [sp, #48]
    2f08:	b	2ed0 <lt_dlloader_remove@@Base+0xe8>
    2f0c:	ldp	x21, x22, [sp, #32]
    2f10:	ldp	x23, x24, [sp, #48]
    2f14:	b	2ed0 <lt_dlloader_remove@@Base+0xe8>

0000000000002f18 <lt_dladderror@@Base>:
    2f18:	stp	x29, x30, [sp, #-32]!
    2f1c:	mov	x29, sp
    2f20:	stp	x19, x20, [sp, #16]
    2f24:	cbz	x0, 2f7c <lt_dladderror@@Base+0x64>
    2f28:	mov	x20, x0
    2f2c:	adrp	x0, 19000 <lt_dlinterface_free@@Base+0x13680>
    2f30:	ldr	w1, [x0, #576]
    2f34:	sub	w1, w1, #0x13
    2f38:	sbfiz	x19, x1, #3, #32
    2f3c:	mov	x1, x19
    2f40:	adrp	x0, 19000 <lt_dlinterface_free@@Base+0x13680>
    2f44:	ldr	x0, [x0, #624]
    2f48:	bl	24d0 <lt__realloc@plt>
    2f4c:	cbz	x0, 2f9c <lt_dladderror@@Base+0x84>
    2f50:	adrp	x1, 19000 <lt_dlinterface_free@@Base+0x13680>
    2f54:	str	x0, [x1, #624]
    2f58:	add	x1, x0, x19
    2f5c:	stur	x20, [x1, #-8]
    2f60:	adrp	x1, 19000 <lt_dlinterface_free@@Base+0x13680>
    2f64:	ldr	w0, [x1, #576]
    2f68:	add	w2, w0, #0x1
    2f6c:	str	w2, [x1, #576]
    2f70:	ldp	x19, x20, [sp, #16]
    2f74:	ldp	x29, x30, [sp], #32
    2f78:	ret
    2f7c:	adrp	x3, 6000 <lt__slist_sort@@Base+0x74>
    2f80:	add	x3, x3, #0x568
    2f84:	mov	w2, #0x35                  	// #53
    2f88:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    2f8c:	add	x1, x1, #0x510
    2f90:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    2f94:	add	x0, x0, #0x528
    2f98:	bl	2500 <__assert_fail@plt>
    2f9c:	mov	w0, #0xffffffff            	// #-1
    2fa0:	b	2f70 <lt_dladderror@@Base+0x58>

0000000000002fa4 <lt__error_string@@Base>:
    2fa4:	stp	x29, x30, [sp, #-16]!
    2fa8:	mov	x29, sp
    2fac:	tbnz	w0, #31, 2fdc <lt__error_string@@Base+0x38>
    2fb0:	cmp	w0, #0x13
    2fb4:	b.gt	3000 <lt__error_string@@Base+0x5c>
    2fb8:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    2fbc:	add	x1, x1, #0x568
    2fc0:	sxtw	x2, w0
    2fc4:	add	x0, x2, w0, sxtw #2
    2fc8:	add	x0, x2, x0, lsl #2
    2fcc:	add	x1, x1, #0x28
    2fd0:	add	x0, x1, x0, lsl #1
    2fd4:	ldp	x29, x30, [sp], #16
    2fd8:	ret
    2fdc:	adrp	x3, 6000 <lt__slist_sort@@Base+0x74>
    2fe0:	add	x3, x3, #0x568
    2fe4:	add	x3, x3, #0x10
    2fe8:	mov	w2, #0x5f                  	// #95
    2fec:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    2ff0:	add	x1, x1, #0x510
    2ff4:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    2ff8:	add	x0, x0, #0x538
    2ffc:	bl	2500 <__assert_fail@plt>
    3000:	adrp	x3, 6000 <lt__slist_sort@@Base+0x74>
    3004:	add	x3, x3, #0x568
    3008:	add	x3, x3, #0x10
    300c:	mov	w2, #0x60                  	// #96
    3010:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    3014:	add	x1, x1, #0x510
    3018:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    301c:	add	x0, x0, #0x548
    3020:	bl	2500 <__assert_fail@plt>

0000000000003024 <lt__get_last_error@@Base>:
    3024:	adrp	x0, 19000 <lt_dlinterface_free@@Base+0x13680>
    3028:	ldr	x0, [x0, #632]
    302c:	ret

0000000000003030 <lt__set_last_error@@Base>:
    3030:	adrp	x1, 19000 <lt_dlinterface_free@@Base+0x13680>
    3034:	str	x0, [x1, #632]
    3038:	ret

000000000000303c <lt_dlseterror@@Base>:
    303c:	stp	x29, x30, [sp, #-16]!
    3040:	mov	x29, sp
    3044:	adrp	x1, 19000 <lt_dlinterface_free@@Base+0x13680>
    3048:	ldr	w1, [x1, #576]
    304c:	cmp	w0, #0x0
    3050:	ccmp	w1, w0, #0x4, ge  // ge = tcont
    3054:	b.gt	3070 <lt_dlseterror@@Base+0x34>
    3058:	mov	w0, #0xe                   	// #14
    305c:	bl	22a0 <lt__error_string@plt>
    3060:	bl	2410 <lt__set_last_error@plt>
    3064:	mov	w0, #0x1                   	// #1
    3068:	ldp	x29, x30, [sp], #16
    306c:	ret
    3070:	cmp	w0, #0x13
    3074:	b.gt	30a0 <lt_dlseterror@@Base+0x64>
    3078:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    307c:	add	x1, x1, #0x568
    3080:	sxtw	x2, w0
    3084:	add	x0, x2, w0, sxtw #2
    3088:	add	x0, x2, x0, lsl #2
    308c:	add	x1, x1, #0x28
    3090:	add	x0, x1, x0, lsl #1
    3094:	bl	2410 <lt__set_last_error@plt>
    3098:	mov	w0, #0x0                   	// #0
    309c:	b	3068 <lt_dlseterror@@Base+0x2c>
    30a0:	adrp	x1, 19000 <lt_dlinterface_free@@Base+0x13680>
    30a4:	ldr	x1, [x1, #624]
    30a8:	add	x0, x1, w0, sxtw #3
    30ac:	ldur	x0, [x0, #-160]
    30b0:	bl	2410 <lt__set_last_error@plt>
    30b4:	mov	w0, #0x0                   	// #0
    30b8:	b	3068 <lt_dlseterror@@Base+0x2c>

00000000000030bc <lt__alloc_die_callback@@Base>:
    30bc:	stp	x29, x30, [sp, #-16]!
    30c0:	mov	x29, sp
    30c4:	mov	w0, #0xb                   	// #11
    30c8:	bl	22a0 <lt__error_string@plt>
    30cc:	bl	2410 <lt__set_last_error@plt>
    30d0:	ldp	x29, x30, [sp], #16
    30d4:	ret
    30d8:	stp	x29, x30, [sp, #-32]!
    30dc:	mov	x29, sp
    30e0:	str	x19, [sp, #16]
    30e4:	mov	x2, x0
    30e8:	mov	x19, #0x0                   	// #0
    30ec:	cbz	x0, 30fc <lt__alloc_die_callback@@Base+0x40>
    30f0:	mov	x0, x1
    30f4:	blr	x2
    30f8:	mov	x19, x0
    30fc:	mov	x0, x19
    3100:	bl	24a0 <lt_dlloader_add@plt>
    3104:	cmp	w0, #0x0
    3108:	ccmp	x19, #0x0, #0x0, eq  // eq = none
    310c:	b.eq	3134 <lt__alloc_die_callback@@Base+0x78>  // b.none
    3110:	cbnz	w0, 3128 <lt__alloc_die_callback@@Base+0x6c>
    3114:	ldr	x1, [x19, #40]
    3118:	cbz	x1, 3128 <lt__alloc_die_callback@@Base+0x6c>
    311c:	ldr	x0, [x19, #56]
    3120:	blr	x1
    3124:	cbnz	w0, 3154 <lt__alloc_die_callback@@Base+0x98>
    3128:	ldr	x19, [sp, #16]
    312c:	ldp	x29, x30, [sp], #32
    3130:	ret
    3134:	adrp	x3, 6000 <lt__slist_sort@@Base+0x74>
    3138:	add	x3, x3, #0xbb0
    313c:	mov	w2, #0xc7                  	// #199
    3140:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    3144:	add	x1, x1, #0x8d8
    3148:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    314c:	add	x0, x0, #0x8e8
    3150:	bl	2500 <__assert_fail@plt>
    3154:	mov	w0, #0x3                   	// #3
    3158:	bl	22a0 <lt__error_string@plt>
    315c:	bl	2410 <lt__set_last_error@plt>
    3160:	mov	w0, #0x1                   	// #1
    3164:	b	3128 <lt__alloc_die_callback@@Base+0x6c>
    3168:	stp	x29, x30, [sp, #-32]!
    316c:	mov	x29, sp
    3170:	stp	x19, x20, [sp, #16]
    3174:	cbz	x0, 31bc <lt__alloc_die_callback@@Base+0x100>
    3178:	mov	x19, x0
    317c:	mov	x20, x1
    3180:	ldrb	w0, [x0]
    3184:	cbz	w0, 31bc <lt__alloc_die_callback@@Base+0x100>
    3188:	cbz	x1, 31e0 <lt__alloc_die_callback@@Base+0x124>
    318c:	mov	x0, x19
    3190:	bl	2150 <strlen@plt>
    3194:	add	x0, x0, #0x1
    3198:	bl	2370 <lt__malloc@plt>
    319c:	cbz	x0, 3274 <lt__alloc_die_callback@@Base+0x1b8>
    31a0:	ldrb	w2, [x19]
    31a4:	cbz	w2, 3258 <lt__alloc_die_callback@@Base+0x19c>
    31a8:	add	x3, x19, #0x1
    31ac:	mov	x4, #0x0                   	// #0
    31b0:	mov	w5, #0x2f                  	// #47
    31b4:	mov	w6, #0x2f                  	// #47
    31b8:	b	3228 <lt__alloc_die_callback@@Base+0x16c>
    31bc:	adrp	x3, 6000 <lt__slist_sort@@Base+0x74>
    31c0:	add	x3, x3, #0xbb0
    31c4:	add	x3, x3, #0x10
    31c8:	mov	w2, #0x24f                 	// #591
    31cc:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    31d0:	add	x1, x1, #0x8d8
    31d4:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    31d8:	add	x0, x0, #0x900
    31dc:	bl	2500 <__assert_fail@plt>
    31e0:	adrp	x3, 6000 <lt__slist_sort@@Base+0x74>
    31e4:	add	x3, x3, #0xbb0
    31e8:	add	x3, x3, #0x10
    31ec:	mov	w2, #0x250                 	// #592
    31f0:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    31f4:	add	x1, x1, #0x8d8
    31f8:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    31fc:	add	x0, x0, #0x910
    3200:	bl	2500 <__assert_fail@plt>
    3204:	cbz	x4, 3220 <lt__alloc_die_callback@@Base+0x164>
    3208:	ldrb	w1, [x3]
    320c:	cmp	w1, #0x3a
    3210:	ccmp	w1, #0x0, #0x4, ne  // ne = any
    3214:	b.eq	3220 <lt__alloc_die_callback@@Base+0x164>  // b.none
    3218:	strb	w2, [x0, x4]
    321c:	add	x4, x4, #0x1
    3220:	ldrb	w2, [x3], #1
    3224:	cbz	w2, 325c <lt__alloc_die_callback@@Base+0x1a0>
    3228:	cmp	w2, #0x3a
    322c:	b.eq	3204 <lt__alloc_die_callback@@Base+0x148>  // b.none
    3230:	cmp	w2, #0x2f
    3234:	b.ne	3218 <lt__alloc_die_callback@@Base+0x15c>  // b.any
    3238:	ldrb	w2, [x3]
    323c:	cmp	w2, #0x3a
    3240:	ccmp	w2, #0x0, #0x4, ne  // ne = any
    3244:	ccmp	w2, w5, #0x4, ne  // ne = any
    3248:	b.eq	3220 <lt__alloc_die_callback@@Base+0x164>  // b.none
    324c:	strb	w6, [x0, x4]
    3250:	add	x4, x4, #0x1
    3254:	b	3220 <lt__alloc_die_callback@@Base+0x164>
    3258:	mov	x4, #0x0                   	// #0
    325c:	strb	wzr, [x0, x4]
    3260:	str	x0, [x20]
    3264:	mov	w0, #0x0                   	// #0
    3268:	ldp	x19, x20, [sp, #16]
    326c:	ldp	x29, x30, [sp], #32
    3270:	ret
    3274:	mov	w0, #0x1                   	// #1
    3278:	b	3268 <lt__alloc_die_callback@@Base+0x1ac>
    327c:	stp	x29, x30, [sp, #-80]!
    3280:	mov	x29, sp
    3284:	stp	x19, x20, [sp, #16]
    3288:	stp	x21, x22, [sp, #32]
    328c:	stp	x23, x24, [sp, #48]
    3290:	mov	x24, x0
    3294:	mov	x20, x1
    3298:	mov	x23, x2
    329c:	mov	x21, x3
    32a0:	adrp	x0, 19000 <lt_dlinterface_free@@Base+0x13680>
    32a4:	ldr	x19, [x0, #640]
    32a8:	bl	2190 <lt__get_last_error@plt>
    32ac:	mov	x22, x0
    32b0:	cbnz	x19, 32dc <lt__alloc_die_callback@@Base+0x220>
    32b4:	ldr	x24, [x24]
    32b8:	cbz	x20, 341c <lt__alloc_die_callback@@Base+0x360>
    32bc:	mov	x0, x20
    32c0:	bl	2180 <lt__strdup@plt>
    32c4:	str	x0, [x24, #16]
    32c8:	cbz	x0, 3414 <lt__alloc_die_callback@@Base+0x358>
    32cc:	str	x25, [sp, #64]
    32d0:	b	3424 <lt__alloc_die_callback@@Base+0x368>
    32d4:	ldr	x19, [x19]
    32d8:	cbz	x19, 32b4 <lt__alloc_die_callback@@Base+0x1f8>
    32dc:	ldr	x0, [x19, #16]
    32e0:	cmp	x0, x20
    32e4:	b.eq	3300 <lt__alloc_die_callback@@Base+0x244>  // b.none
    32e8:	cmp	x20, #0x0
    32ec:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    32f0:	b.eq	32d4 <lt__alloc_die_callback@@Base+0x218>  // b.none
    32f4:	mov	x1, x20
    32f8:	bl	23e0 <strcmp@plt>
    32fc:	cbnz	w0, 32d4 <lt__alloc_die_callback@@Base+0x218>
    3300:	ldr	w0, [x19, #32]
    3304:	add	w0, w0, #0x1
    3308:	str	w0, [x19, #32]
    330c:	str	x19, [x24]
    3310:	mov	w0, #0x0                   	// #0
    3314:	ldp	x19, x20, [sp, #16]
    3318:	ldp	x21, x22, [sp, #32]
    331c:	ldp	x23, x24, [sp, #48]
    3320:	ldp	x29, x30, [sp], #80
    3324:	ret
    3328:	mov	x0, x19
    332c:	bl	2140 <lt_dlloader_get@plt>
    3330:	mov	x25, x0
    3334:	ldr	x3, [x0, #16]
    3338:	mov	x2, x23
    333c:	mov	x1, x20
    3340:	ldr	x0, [x0, #56]
    3344:	blr	x3
    3348:	str	x0, [x24, #56]
    334c:	cbnz	x0, 33a0 <lt__alloc_die_callback@@Base+0x2e4>
    3350:	mov	x0, x19
    3354:	bl	2220 <lt_dlloader_next@plt>
    3358:	mov	x19, x0
    335c:	cbz	x0, 33a4 <lt__alloc_die_callback@@Base+0x2e8>
    3360:	cbz	x21, 3328 <lt__alloc_die_callback@@Base+0x26c>
    3364:	ldr	x3, [x21, #16]
    3368:	mov	x2, x23
    336c:	mov	x1, x20
    3370:	ldr	x0, [x21, #56]
    3374:	blr	x3
    3378:	str	x0, [x24, #56]
    337c:	cbnz	x0, 33c4 <lt__alloc_die_callback@@Base+0x308>
    3380:	ldr	x0, [x24, #56]
    3384:	cbz	x0, 33ac <lt__alloc_die_callback@@Base+0x2f0>
    3388:	str	x21, [x24, #8]
    338c:	mov	x0, x22
    3390:	bl	2410 <lt__set_last_error@plt>
    3394:	mov	w0, #0x0                   	// #0
    3398:	ldr	x25, [sp, #64]
    339c:	b	3314 <lt__alloc_die_callback@@Base+0x258>
    33a0:	cbnz	x23, 33cc <lt__alloc_die_callback@@Base+0x310>
    33a4:	orr	x19, x21, x19
    33a8:	cbnz	x19, 340c <lt__alloc_die_callback@@Base+0x350>
    33ac:	ldr	x0, [x24, #16]
    33b0:	bl	2400 <free@plt>
    33b4:	str	xzr, [x24, #16]
    33b8:	mov	w0, #0x1                   	// #1
    33bc:	ldr	x25, [sp, #64]
    33c0:	b	3314 <lt__alloc_die_callback@@Base+0x258>
    33c4:	cbz	x23, 3380 <lt__alloc_die_callback@@Base+0x2c4>
    33c8:	mov	x25, x21
    33cc:	ldrb	w1, [x23]
    33d0:	ubfx	x1, x1, #1, #1
    33d4:	ldrb	w0, [x24, #36]
    33d8:	bfxil	w0, w1, #0, #1
    33dc:	strb	w0, [x24, #36]
    33e0:	ldrb	w1, [x23]
    33e4:	ubfx	x1, x1, #2, #1
    33e8:	bfi	w0, w1, #1, #1
    33ec:	strb	w0, [x24, #36]
    33f0:	ldrb	w1, [x23]
    33f4:	ubfx	x1, x1, #3, #1
    33f8:	bfi	w0, w1, #2, #1
    33fc:	strb	w0, [x24, #36]
    3400:	cbz	x21, 33a4 <lt__alloc_die_callback@@Base+0x2e8>
    3404:	mov	x21, x25
    3408:	b	3380 <lt__alloc_die_callback@@Base+0x2c4>
    340c:	mov	x21, x25
    3410:	b	3388 <lt__alloc_die_callback@@Base+0x2cc>
    3414:	mov	w0, #0x1                   	// #1
    3418:	b	3314 <lt__alloc_die_callback@@Base+0x258>
    341c:	str	x25, [sp, #64]
    3420:	str	xzr, [x24, #16]
    3424:	mov	x0, #0x0                   	// #0
    3428:	bl	2220 <lt_dlloader_next@plt>
    342c:	mov	x19, x0
    3430:	b	3360 <lt__alloc_die_callback@@Base+0x2a4>
    3434:	stp	x29, x30, [sp, #-80]!
    3438:	mov	x29, sp
    343c:	stp	x19, x20, [sp, #16]
    3440:	stp	x21, x22, [sp, #32]
    3444:	stp	x23, x24, [sp, #48]
    3448:	stp	x25, x26, [sp, #64]
    344c:	mov	x23, x0
    3450:	cbz	x2, 3588 <lt__alloc_die_callback@@Base+0x4cc>
    3454:	mov	x24, x1
    3458:	mov	x19, x2
    345c:	mov	x20, x3
    3460:	mov	x26, x4
    3464:	ldrb	w0, [x2]
    3468:	mov	x22, #0x0                   	// #0
    346c:	cbz	w0, 347c <lt__alloc_die_callback@@Base+0x3c0>
    3470:	mov	x0, x2
    3474:	bl	2150 <strlen@plt>
    3478:	mov	x22, x0
    347c:	cbz	x23, 358c <lt__alloc_die_callback@@Base+0x4d0>
    3480:	cbz	x20, 3544 <lt__alloc_die_callback@@Base+0x488>
    3484:	cbz	x22, 3498 <lt__alloc_die_callback@@Base+0x3dc>
    3488:	sub	x0, x22, #0x1
    348c:	ldrb	w1, [x19, x0]
    3490:	cmp	w1, #0x2f
    3494:	csel	x22, x22, x0, ne  // ne = any
    3498:	ldrb	w1, [x20]
    349c:	mov	x0, #0x0                   	// #0
    34a0:	cbz	w1, 34ac <lt__alloc_die_callback@@Base+0x3f0>
    34a4:	mov	x0, x20
    34a8:	bl	2150 <strlen@plt>
    34ac:	add	x1, x22, #0x2
    34b0:	add	x0, x1, x0
    34b4:	bl	2370 <lt__malloc@plt>
    34b8:	mov	x21, x0
    34bc:	mov	w25, #0x1                   	// #1
    34c0:	cbz	x0, 3504 <lt__alloc_die_callback@@Base+0x448>
    34c4:	mov	x4, x20
    34c8:	mov	x3, x19
    34cc:	mov	w2, w22
    34d0:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    34d4:	add	x1, x1, #0x938
    34d8:	bl	21b0 <sprintf@plt>
    34dc:	cbz	x24, 3568 <lt__alloc_die_callback@@Base+0x4ac>
    34e0:	mov	x4, x26
    34e4:	mov	x3, x21
    34e8:	mov	x2, x24
    34ec:	mov	x1, #0x0                   	// #0
    34f0:	mov	x0, x23
    34f4:	bl	3434 <lt__alloc_die_callback@@Base+0x378>
    34f8:	mov	w25, w0
    34fc:	mov	x0, x21
    3500:	bl	2400 <free@plt>
    3504:	mov	w0, w25
    3508:	ldp	x19, x20, [sp, #16]
    350c:	ldp	x21, x22, [sp, #32]
    3510:	ldp	x23, x24, [sp, #48]
    3514:	ldp	x25, x26, [sp, #64]
    3518:	ldp	x29, x30, [sp], #80
    351c:	ret
    3520:	adrp	x3, 6000 <lt__slist_sort@@Base+0x74>
    3524:	add	x3, x3, #0xbb0
    3528:	add	x3, x3, #0x28
    352c:	mov	w2, #0x1f7                 	// #503
    3530:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    3534:	add	x1, x1, #0x8d8
    3538:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    353c:	add	x0, x0, #0x928
    3540:	bl	2500 <__assert_fail@plt>
    3544:	adrp	x3, 6000 <lt__slist_sort@@Base+0x74>
    3548:	add	x3, x3, #0xbb0
    354c:	add	x3, x3, #0x28
    3550:	mov	w2, #0x1f8                 	// #504
    3554:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    3558:	add	x1, x1, #0x8d8
    355c:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    3560:	add	x0, x0, #0x930
    3564:	bl	2500 <__assert_fail@plt>
    3568:	mov	x3, #0x0                   	// #0
    356c:	mov	x2, x26
    3570:	mov	x1, x21
    3574:	mov	x0, x23
    3578:	bl	327c <lt__alloc_die_callback@@Base+0x1c0>
    357c:	cmp	w0, #0x0
    3580:	cset	w25, ne  // ne = any
    3584:	b	34fc <lt__alloc_die_callback@@Base+0x440>
    3588:	cbnz	x0, 3520 <lt__alloc_die_callback@@Base+0x464>
    358c:	adrp	x3, 6000 <lt__slist_sort@@Base+0x74>
    3590:	add	x3, x3, #0xbb0
    3594:	add	x3, x3, #0x28
    3598:	mov	w2, #0x1f6                 	// #502
    359c:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    35a0:	add	x1, x1, #0x8d8
    35a4:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    35a8:	add	x0, x0, #0x920
    35ac:	bl	2500 <__assert_fail@plt>
    35b0:	stp	x29, x30, [sp, #-48]!
    35b4:	mov	x29, sp
    35b8:	stp	x19, x20, [sp, #16]
    35bc:	str	x21, [sp, #32]
    35c0:	cbz	x0, 3650 <lt__alloc_die_callback@@Base+0x594>
    35c4:	mov	x19, x0
    35c8:	mov	x20, x1
    35cc:	mov	x21, x2
    35d0:	ldrb	w0, [x0]
    35d4:	cbz	w0, 3650 <lt__alloc_die_callback@@Base+0x594>
    35d8:	cbz	x1, 3674 <lt__alloc_die_callback@@Base+0x5b8>
    35dc:	cbz	x2, 3698 <lt__alloc_die_callback@@Base+0x5dc>
    35e0:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    35e4:	add	x1, x1, #0x968
    35e8:	mov	x0, x19
    35ec:	bl	2210 <fopen@plt>
    35f0:	mov	x1, x0
    35f4:	str	x0, [x21]
    35f8:	mov	w0, #0x0                   	// #0
    35fc:	cbz	x1, 3640 <lt__alloc_die_callback@@Base+0x584>
    3600:	mov	w1, #0x2f                  	// #47
    3604:	mov	x0, x19
    3608:	bl	2340 <strrchr@plt>
    360c:	cmp	x19, x0
    3610:	b.cs	3618 <lt__alloc_die_callback@@Base+0x55c>  // b.hs, b.nlast
    3614:	strb	wzr, [x0]
    3618:	ldr	x0, [x20]
    361c:	bl	2400 <free@plt>
    3620:	str	xzr, [x20]
    3624:	mov	x0, x19
    3628:	bl	2180 <lt__strdup@plt>
    362c:	mov	x1, x0
    3630:	str	x0, [x20]
    3634:	mov	w0, #0x1                   	// #1
    3638:	cmp	x1, #0x0
    363c:	cneg	w0, w0, eq  // eq = none
    3640:	ldp	x19, x20, [sp, #16]
    3644:	ldr	x21, [sp, #32]
    3648:	ldp	x29, x30, [sp], #48
    364c:	ret
    3650:	adrp	x3, 6000 <lt__slist_sort@@Base+0x74>
    3654:	add	x3, x3, #0xbb0
    3658:	add	x3, x3, #0x40
    365c:	mov	w2, #0x2f0                 	// #752
    3660:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    3664:	add	x1, x1, #0x8d8
    3668:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    366c:	add	x0, x0, #0x940
    3670:	bl	2500 <__assert_fail@plt>
    3674:	adrp	x3, 6000 <lt__slist_sort@@Base+0x74>
    3678:	add	x3, x3, #0xbb0
    367c:	add	x3, x3, #0x40
    3680:	mov	w2, #0x2f1                 	// #753
    3684:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    3688:	add	x1, x1, #0x8d8
    368c:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    3690:	add	x0, x0, #0x958
    3694:	bl	2500 <__assert_fail@plt>
    3698:	adrp	x3, 6000 <lt__slist_sort@@Base+0x74>
    369c:	add	x3, x3, #0xbb0
    36a0:	add	x3, x3, #0x40
    36a4:	mov	w2, #0x2f2                 	// #754
    36a8:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    36ac:	add	x1, x1, #0x8d8
    36b0:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    36b4:	add	x0, x0, #0x960
    36b8:	bl	2500 <__assert_fail@plt>
    36bc:	stp	x29, x30, [sp, #-16]!
    36c0:	mov	x29, sp
    36c4:	cbz	x0, 36ec <lt__alloc_die_callback@@Base+0x630>
    36c8:	mov	x3, x2
    36cc:	cbz	x1, 3710 <lt__alloc_die_callback@@Base+0x654>
    36d0:	cbz	x2, 3734 <lt__alloc_die_callback@@Base+0x678>
    36d4:	mov	x2, x1
    36d8:	mov	w1, #0x3a                  	// #58
    36dc:	bl	24b0 <argz_create_sep@plt>
    36e0:	cbnz	w0, 3758 <lt__alloc_die_callback@@Base+0x69c>
    36e4:	ldp	x29, x30, [sp], #16
    36e8:	ret
    36ec:	adrp	x3, 6000 <lt__slist_sort@@Base+0x74>
    36f0:	add	x3, x3, #0xbb0
    36f4:	add	x3, x3, #0x58
    36f8:	mov	w2, #0x28c                 	// #652
    36fc:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    3700:	add	x1, x1, #0x8d8
    3704:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    3708:	add	x0, x0, #0x970
    370c:	bl	2500 <__assert_fail@plt>
    3710:	adrp	x3, 6000 <lt__slist_sort@@Base+0x74>
    3714:	add	x3, x3, #0xbb0
    3718:	add	x3, x3, #0x58
    371c:	mov	w2, #0x28d                 	// #653
    3720:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    3724:	add	x1, x1, #0x8d8
    3728:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    372c:	add	x0, x0, #0x978
    3730:	bl	2500 <__assert_fail@plt>
    3734:	adrp	x3, 6000 <lt__slist_sort@@Base+0x74>
    3738:	add	x3, x3, #0xbb0
    373c:	add	x3, x3, #0x58
    3740:	mov	w2, #0x28e                 	// #654
    3744:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    3748:	add	x1, x1, #0x8d8
    374c:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    3750:	add	x0, x0, #0x980
    3754:	bl	2500 <__assert_fail@plt>
    3758:	cmp	w0, #0xc
    375c:	b.eq	3774 <lt__alloc_die_callback@@Base+0x6b8>  // b.none
    3760:	mov	w0, #0x0                   	// #0
    3764:	bl	22a0 <lt__error_string@plt>
    3768:	bl	2410 <lt__set_last_error@plt>
    376c:	mov	w0, #0x1                   	// #1
    3770:	b	36e4 <lt__alloc_die_callback@@Base+0x628>
    3774:	mov	w0, #0xb                   	// #11
    3778:	bl	22a0 <lt__error_string@plt>
    377c:	bl	2410 <lt__set_last_error@plt>
    3780:	mov	w0, #0x1                   	// #1
    3784:	b	36e4 <lt__alloc_die_callback@@Base+0x628>
    3788:	stp	x29, x30, [sp, #-144]!
    378c:	mov	x29, sp
    3790:	stp	x19, x20, [sp, #16]
    3794:	stp	x21, x22, [sp, #32]
    3798:	stp	x23, x24, [sp, #48]
    379c:	stp	x27, x28, [sp, #80]
    37a0:	mov	x23, x0
    37a4:	mov	x19, x1
    37a8:	mov	x20, x2
    37ac:	mov	x28, x3
    37b0:	mov	x21, x4
    37b4:	mov	x22, #0x0                   	// #0
    37b8:	cbz	x1, 37d0 <lt__alloc_die_callback@@Base+0x714>
    37bc:	ldrb	w0, [x1]
    37c0:	cbz	w0, 37d0 <lt__alloc_die_callback@@Base+0x714>
    37c4:	mov	x0, x1
    37c8:	bl	2150 <strlen@plt>
    37cc:	mov	x22, x0
    37d0:	str	xzr, [sp, #136]
    37d4:	str	xzr, [sp, #128]
    37d8:	str	xzr, [sp, #120]
    37dc:	cbz	x23, 37e8 <lt__alloc_die_callback@@Base+0x72c>
    37e0:	ldrb	w0, [x23]
    37e4:	cbnz	w0, 3830 <lt__alloc_die_callback@@Base+0x774>
    37e8:	mov	w0, #0x5                   	// #5
    37ec:	bl	22a0 <lt__error_string@plt>
    37f0:	bl	2410 <lt__set_last_error@plt>
    37f4:	mov	x24, #0x0                   	// #0
    37f8:	mov	w23, #0x0                   	// #0
    37fc:	ldr	x0, [sp, #128]
    3800:	bl	2400 <free@plt>
    3804:	ldr	x0, [sp, #120]
    3808:	bl	2400 <free@plt>
    380c:	mov	x0, x24
    3810:	bl	2400 <free@plt>
    3814:	mov	w0, w23
    3818:	ldp	x19, x20, [sp, #16]
    381c:	ldp	x21, x22, [sp, #32]
    3820:	ldp	x23, x24, [sp, #48]
    3824:	ldp	x27, x28, [sp, #80]
    3828:	ldp	x29, x30, [sp], #144
    382c:	ret
    3830:	add	x1, sp, #0x78
    3834:	mov	x0, x23
    3838:	bl	3168 <lt__alloc_die_callback@@Base+0xac>
    383c:	mov	w24, w0
    3840:	cbz	w0, 3850 <lt__alloc_die_callback@@Base+0x794>
    3844:	mov	x24, #0x0                   	// #0
    3848:	mov	w23, #0x0                   	// #0
    384c:	b	37fc <lt__alloc_die_callback@@Base+0x740>
    3850:	add	x2, sp, #0x88
    3854:	add	x1, sp, #0x80
    3858:	ldr	x0, [sp, #120]
    385c:	bl	36bc <lt__alloc_die_callback@@Base+0x600>
    3860:	mov	w23, w0
    3864:	cbnz	w0, 39a8 <lt__alloc_die_callback@@Base+0x8ec>
    3868:	stp	x25, x26, [sp, #64]
    386c:	mov	x25, #0x0                   	// #0
    3870:	mov	x24, #0x0                   	// #0
    3874:	mov	x27, #0x0                   	// #0
    3878:	ldr	x26, [sp, #128]
    387c:	ldr	x0, [sp, #136]
    3880:	cbz	x25, 3990 <lt__alloc_die_callback@@Base+0x8d4>
    3884:	add	x26, x26, x0
    3888:	cmp	x25, x26
    388c:	b.cs	39b4 <lt__alloc_die_callback@@Base+0x8f8>  // b.hs, b.nlast
    3890:	mov	x0, x25
    3894:	bl	2150 <strlen@plt>
    3898:	add	x0, x0, #0x1
    389c:	add	x25, x25, x0
    38a0:	cmp	x26, x25
    38a4:	b.ls	3988 <lt__alloc_die_callback@@Base+0x8cc>  // b.plast
    38a8:	ldrb	w0, [x25]
    38ac:	mov	x26, #0x0                   	// #0
    38b0:	cbz	w0, 38c0 <lt__alloc_die_callback@@Base+0x804>
    38b4:	mov	x0, x25
    38b8:	bl	2150 <strlen@plt>
    38bc:	mov	x26, x0
    38c0:	add	x0, x22, x26
    38c4:	str	x0, [sp, #104]
    38c8:	add	x0, x0, #0x1
    38cc:	cmp	x0, x27
    38d0:	b.cs	393c <lt__alloc_die_callback@@Base+0x880>  // b.hs, b.nlast
    38d4:	cmp	x27, x26
    38d8:	b.ls	3964 <lt__alloc_die_callback@@Base+0x8a8>  // b.plast
    38dc:	mov	x1, x25
    38e0:	mov	x0, x24
    38e4:	bl	2460 <strcpy@plt>
    38e8:	cbz	x19, 391c <lt__alloc_die_callback@@Base+0x860>
    38ec:	ldrb	w0, [x19]
    38f0:	cbz	w0, 391c <lt__alloc_die_callback@@Base+0x860>
    38f4:	add	x0, x24, x26
    38f8:	ldurb	w0, [x0, #-1]
    38fc:	cmp	w0, #0x2f
    3900:	b.eq	3910 <lt__alloc_die_callback@@Base+0x854>  // b.none
    3904:	mov	w0, #0x2f                  	// #47
    3908:	strb	w0, [x24, x26]
    390c:	add	x26, x26, #0x1
    3910:	mov	x1, x19
    3914:	add	x0, x24, x26
    3918:	bl	2460 <strcpy@plt>
    391c:	mov	x2, x21
    3920:	mov	x1, x28
    3924:	mov	x0, x24
    3928:	blr	x20
    392c:	cbz	w0, 3878 <lt__alloc_die_callback@@Base+0x7bc>
    3930:	mov	w23, w0
    3934:	ldp	x25, x26, [sp, #64]
    3938:	b	37fc <lt__alloc_die_callback@@Base+0x740>
    393c:	mov	x0, x24
    3940:	bl	2400 <free@plt>
    3944:	ldr	x0, [sp, #104]
    3948:	add	x27, x0, #0x2
    394c:	mov	x0, x27
    3950:	bl	2370 <lt__malloc@plt>
    3954:	mov	x24, x0
    3958:	cbnz	x0, 38d4 <lt__alloc_die_callback@@Base+0x818>
    395c:	ldp	x25, x26, [sp, #64]
    3960:	b	37fc <lt__alloc_die_callback@@Base+0x740>
    3964:	adrp	x3, 6000 <lt__slist_sort@@Base+0x74>
    3968:	add	x3, x3, #0xbb0
    396c:	add	x3, x3, #0x68
    3970:	mov	w2, #0x2cd                 	// #717
    3974:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    3978:	add	x1, x1, #0x8d8
    397c:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    3980:	add	x0, x0, #0x990
    3984:	bl	2500 <__assert_fail@plt>
    3988:	ldp	x25, x26, [sp, #64]
    398c:	b	37fc <lt__alloc_die_callback@@Base+0x740>
    3990:	cbz	x0, 39bc <lt__alloc_die_callback@@Base+0x900>
    3994:	cbz	x26, 39a0 <lt__alloc_die_callback@@Base+0x8e4>
    3998:	mov	x25, x26
    399c:	b	38a8 <lt__alloc_die_callback@@Base+0x7ec>
    39a0:	ldp	x25, x26, [sp, #64]
    39a4:	b	37fc <lt__alloc_die_callback@@Base+0x740>
    39a8:	mov	w23, w24
    39ac:	mov	x24, #0x0                   	// #0
    39b0:	b	37fc <lt__alloc_die_callback@@Base+0x740>
    39b4:	ldp	x25, x26, [sp, #64]
    39b8:	b	37fc <lt__alloc_die_callback@@Base+0x740>
    39bc:	ldp	x25, x26, [sp, #64]
    39c0:	b	37fc <lt__alloc_die_callback@@Base+0x740>
    39c4:	stp	x29, x30, [sp, #-32]!
    39c8:	mov	x29, sp
    39cc:	str	xzr, [sp, #24]
    39d0:	add	x4, sp, #0x18
    39d4:	mov	x3, x2
    39d8:	adrp	x2, 3000 <lt__error_string@@Base+0x5c>
    39dc:	add	x2, x2, #0x5b0
    39e0:	bl	3788 <lt__alloc_die_callback@@Base+0x6cc>
    39e4:	ldr	x0, [sp, #24]
    39e8:	ldp	x29, x30, [sp], #32
    39ec:	ret
    39f0:	stp	x29, x30, [sp, #-32]!
    39f4:	mov	x29, sp
    39f8:	str	x19, [sp, #16]
    39fc:	cbz	x0, 3a30 <lt__alloc_die_callback@@Base+0x974>
    3a00:	mov	x19, x2
    3a04:	mov	x4, x3
    3a08:	mov	x3, x2
    3a0c:	adrp	x2, 3000 <lt__error_string@@Base+0x5c>
    3a10:	add	x2, x2, #0xaf8
    3a14:	bl	3788 <lt__alloc_die_callback@@Base+0x6cc>
    3a18:	cmp	w0, #0x0
    3a1c:	csel	x19, x19, xzr, ne  // ne = any
    3a20:	mov	x0, x19
    3a24:	ldr	x19, [sp, #16]
    3a28:	ldp	x29, x30, [sp], #32
    3a2c:	ret
    3a30:	mov	x19, x0
    3a34:	b	3a20 <lt__alloc_die_callback@@Base+0x964>
    3a38:	stp	x29, x30, [sp, #-48]!
    3a3c:	mov	x29, sp
    3a40:	stp	x19, x20, [sp, #16]
    3a44:	stp	x21, x22, [sp, #32]
    3a48:	mov	x21, x0
    3a4c:	mov	x19, x1
    3a50:	mov	w1, #0x27                  	// #39
    3a54:	mov	x0, x19
    3a58:	bl	2340 <strrchr@plt>
    3a5c:	mov	x20, x0
    3a60:	ldrb	w0, [x19]
    3a64:	mov	x22, #0x0                   	// #0
    3a68:	cbz	w0, 3a78 <lt__alloc_die_callback@@Base+0x9bc>
    3a6c:	mov	x0, x19
    3a70:	bl	2150 <strlen@plt>
    3a74:	mov	x22, x0
    3a78:	ldr	x0, [x21]
    3a7c:	bl	2400 <free@plt>
    3a80:	str	xzr, [x21]
    3a84:	cmp	x20, #0x0
    3a88:	mov	w0, #0x1                   	// #1
    3a8c:	ccmp	x19, x20, #0x4, ne  // ne = any
    3a90:	b.eq	3aac <lt__alloc_die_callback@@Base+0x9f0>  // b.none
    3a94:	mov	w0, #0x0                   	// #0
    3a98:	cmp	x22, #0x3
    3a9c:	b.ls	3aac <lt__alloc_die_callback@@Base+0x9f0>  // b.plast
    3aa0:	ldrb	w1, [x19]
    3aa4:	cmp	w1, #0x27
    3aa8:	b.eq	3abc <lt__alloc_die_callback@@Base+0xa00>  // b.none
    3aac:	ldp	x19, x20, [sp, #16]
    3ab0:	ldp	x21, x22, [sp, #32]
    3ab4:	ldp	x29, x30, [sp], #48
    3ab8:	ret
    3abc:	sub	x20, x20, x19
    3ac0:	mov	x0, x20
    3ac4:	bl	2370 <lt__malloc@plt>
    3ac8:	mov	x22, x0
    3acc:	mov	w0, #0x1                   	// #1
    3ad0:	cbz	x22, 3aac <lt__alloc_die_callback@@Base+0x9f0>
    3ad4:	sub	x2, x20, #0x1
    3ad8:	add	x1, x19, #0x1
    3adc:	mov	x0, x22
    3ae0:	bl	2120 <memcpy@plt>
    3ae4:	add	x20, x22, x20
    3ae8:	sturb	wzr, [x20, #-1]
    3aec:	str	x22, [x21]
    3af0:	mov	w0, #0x0                   	// #0
    3af4:	b	3aac <lt__alloc_die_callback@@Base+0x9f0>
    3af8:	stp	x29, x30, [sp, #-48]!
    3afc:	mov	x29, sp
    3b00:	stp	x19, x20, [sp, #16]
    3b04:	str	x21, [sp, #32]
    3b08:	mov	x20, x0
    3b0c:	mov	x19, x1
    3b10:	mov	x21, x2
    3b14:	mov	w1, #0x4                   	// #4
    3b18:	bl	23c0 <access@plt>
    3b1c:	cbz	w0, 3b34 <lt__alloc_die_callback@@Base+0xa78>
    3b20:	mov	w0, #0x0                   	// #0
    3b24:	ldp	x19, x20, [sp, #16]
    3b28:	ldr	x21, [sp, #32]
    3b2c:	ldp	x29, x30, [sp], #48
    3b30:	ret
    3b34:	mov	x3, #0x0                   	// #0
    3b38:	mov	x2, x21
    3b3c:	mov	x1, x20
    3b40:	mov	x0, x19
    3b44:	bl	327c <lt__alloc_die_callback@@Base+0x1c0>
    3b48:	mov	w1, w0
    3b4c:	mov	w0, #0x1                   	// #1
    3b50:	cbz	w1, 3b24 <lt__alloc_die_callback@@Base+0xa68>
    3b54:	str	xzr, [x19]
    3b58:	b	3b24 <lt__alloc_die_callback@@Base+0xa68>
    3b5c:	stp	x29, x30, [sp, #-48]!
    3b60:	mov	x29, sp
    3b64:	stp	x19, x20, [sp, #16]
    3b68:	str	x21, [sp, #32]
    3b6c:	mov	x20, x0
    3b70:	mov	x21, x1
    3b74:	mov	x19, x3
    3b78:	cbz	x2, 3b94 <lt__alloc_die_callback@@Base+0xad8>
    3b7c:	bl	2320 <argz_insert@plt>
    3b80:	cbnz	w0, 3bb4 <lt__alloc_die_callback@@Base+0xaf8>
    3b84:	ldp	x19, x20, [sp, #16]
    3b88:	ldr	x21, [sp, #32]
    3b8c:	ldp	x29, x30, [sp], #48
    3b90:	ret
    3b94:	mov	x0, x3
    3b98:	bl	2150 <strlen@plt>
    3b9c:	add	x3, x0, #0x1
    3ba0:	mov	x2, x19
    3ba4:	mov	x1, x21
    3ba8:	mov	x0, x20
    3bac:	bl	2390 <argz_append@plt>
    3bb0:	b	3b80 <lt__alloc_die_callback@@Base+0xac4>
    3bb4:	cmp	w0, #0xc
    3bb8:	b.eq	3bd0 <lt__alloc_die_callback@@Base+0xb14>  // b.none
    3bbc:	mov	w0, #0x0                   	// #0
    3bc0:	bl	22a0 <lt__error_string@plt>
    3bc4:	bl	2410 <lt__set_last_error@plt>
    3bc8:	mov	w0, #0x1                   	// #1
    3bcc:	b	3b84 <lt__alloc_die_callback@@Base+0xac8>
    3bd0:	mov	w0, #0xb                   	// #11
    3bd4:	bl	22a0 <lt__error_string@plt>
    3bd8:	bl	2410 <lt__set_last_error@plt>
    3bdc:	mov	w0, #0x1                   	// #1
    3be0:	b	3b84 <lt__alloc_die_callback@@Base+0xac8>
    3be4:	stp	x29, x30, [sp, #-144]!
    3be8:	mov	x29, sp
    3bec:	stp	x19, x20, [sp, #16]
    3bf0:	stp	x27, x28, [sp, #80]
    3bf4:	str	x2, [sp, #104]
    3bf8:	ldr	x27, [x1]
    3bfc:	str	xzr, [sp, #136]
    3c00:	str	xzr, [sp, #128]
    3c04:	cbz	x0, 3cfc <lt__alloc_die_callback@@Base+0xc40>
    3c08:	mov	x20, x0
    3c0c:	ldrb	w0, [x0]
    3c10:	cbz	w0, 3cfc <lt__alloc_die_callback@@Base+0xc40>
    3c14:	mov	x0, x20
    3c18:	bl	2150 <strlen@plt>
    3c1c:	add	x0, x20, x0
    3c20:	ldurb	w0, [x0, #-1]
    3c24:	cmp	w0, #0x2f
    3c28:	b.eq	3d2c <lt__alloc_die_callback@@Base+0xc70>  // b.none
    3c2c:	stp	x23, x24, [sp, #48]
    3c30:	mov	x0, x20
    3c34:	bl	21c0 <opendir@plt>
    3c38:	mov	x23, x0
    3c3c:	cbz	x0, 3d5c <lt__alloc_die_callback@@Base+0xca0>
    3c40:	stp	x21, x22, [sp, #32]
    3c44:	stp	x25, x26, [sp, #64]
    3c48:	adrp	x25, 6000 <lt__slist_sort@@Base+0x74>
    3c4c:	add	x25, x25, #0x9e8
    3c50:	add	x28, sp, #0x80
    3c54:	add	x0, sp, #0x88
    3c58:	str	x0, [sp, #120]
    3c5c:	mov	x0, x23
    3c60:	bl	2300 <readdir@plt>
    3c64:	mov	x19, x0
    3c68:	cbz	x0, 3f10 <lt__alloc_die_callback@@Base+0xe54>
    3c6c:	ldrb	w0, [x19, #19]
    3c70:	cmp	w0, #0x2e
    3c74:	b.eq	3c5c <lt__alloc_die_callback@@Base+0xba0>  // b.none
    3c78:	ldrb	w0, [x20]
    3c7c:	str	xzr, [sp, #112]
    3c80:	cbz	w0, 3c90 <lt__alloc_die_callback@@Base+0xbd4>
    3c84:	mov	x0, x20
    3c88:	bl	2150 <strlen@plt>
    3c8c:	str	x0, [sp, #112]
    3c90:	add	x24, x19, #0x13
    3c94:	mov	x0, x24
    3c98:	bl	2150 <strlen@plt>
    3c9c:	add	x21, x24, x0
    3ca0:	mov	x22, x21
    3ca4:	mov	x26, x22
    3ca8:	sub	x22, x22, #0x1
    3cac:	cmp	x24, x22
    3cb0:	b.cs	3cc4 <lt__alloc_die_callback@@Base+0xc08>  // b.hs, b.nlast
    3cb4:	ldrb	w1, [x22]
    3cb8:	mov	x0, x25
    3cbc:	bl	2430 <strchr@plt>
    3cc0:	cbnz	x0, 3ca4 <lt__alloc_die_callback@@Base+0xbe8>
    3cc4:	ldrb	w0, [x26]
    3cc8:	cmp	w0, #0x2e
    3ccc:	csel	x21, x21, x26, ne  // ne = any
    3cd0:	sub	x1, x21, #0x1
    3cd4:	cmp	x24, x1
    3cd8:	b.cs	3d68 <lt__alloc_die_callback@@Base+0xcac>  // b.hs, b.nlast
    3cdc:	add	x19, x19, #0x13
    3ce0:	ldrb	w2, [x1]
    3ce4:	cmp	w2, #0x2e
    3ce8:	b.eq	3d64 <lt__alloc_die_callback@@Base+0xca8>  // b.none
    3cec:	sub	x1, x1, #0x1
    3cf0:	cmp	x19, x1
    3cf4:	b.ne	3ce0 <lt__alloc_die_callback@@Base+0xc24>  // b.any
    3cf8:	b	3d68 <lt__alloc_die_callback@@Base+0xcac>
    3cfc:	stp	x21, x22, [sp, #32]
    3d00:	stp	x23, x24, [sp, #48]
    3d04:	stp	x25, x26, [sp, #64]
    3d08:	adrp	x3, 6000 <lt__slist_sort@@Base+0x74>
    3d0c:	add	x3, x3, #0xbb0
    3d10:	add	x3, x3, #0x80
    3d14:	mov	w2, #0x730                 	// #1840
    3d18:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    3d1c:	add	x1, x1, #0x8d8
    3d20:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    3d24:	add	x0, x0, #0x9a8
    3d28:	bl	2500 <__assert_fail@plt>
    3d2c:	stp	x21, x22, [sp, #32]
    3d30:	stp	x23, x24, [sp, #48]
    3d34:	stp	x25, x26, [sp, #64]
    3d38:	adrp	x3, 6000 <lt__slist_sort@@Base+0x74>
    3d3c:	add	x3, x3, #0xbb0
    3d40:	add	x3, x3, #0x80
    3d44:	mov	w2, #0x733                 	// #1843
    3d48:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    3d4c:	add	x1, x1, #0x8d8
    3d50:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    3d54:	add	x0, x0, #0x9c0
    3d58:	bl	2500 <__assert_fail@plt>
    3d5c:	mov	w20, #0x0                   	// #0
    3d60:	b	3ed0 <lt__alloc_die_callback@@Base+0xe14>
    3d64:	mov	x21, x1
    3d68:	sub	x21, x21, x24
    3d6c:	ldr	x0, [sp, #112]
    3d70:	add	x22, x21, x0
    3d74:	add	x0, x22, #0x2
    3d78:	bl	2370 <lt__malloc@plt>
    3d7c:	mov	x19, x0
    3d80:	cbz	x0, 3e7c <lt__alloc_die_callback@@Base+0xdc0>
    3d84:	mov	x1, x20
    3d88:	bl	2460 <strcpy@plt>
    3d8c:	mov	x0, x19
    3d90:	bl	2150 <strlen@plt>
    3d94:	mov	w1, #0x2f                  	// #47
    3d98:	strh	w1, [x19, x0]
    3d9c:	mov	x2, x21
    3da0:	mov	x1, x24
    3da4:	mov	x0, x19
    3da8:	bl	2470 <strncat@plt>
    3dac:	add	x22, x19, x22
    3db0:	strb	wzr, [x22, #1]
    3db4:	ldrb	w0, [x19]
    3db8:	cbz	w0, 3e14 <lt__alloc_die_callback@@Base+0xd58>
    3dbc:	ldr	x22, [sp, #136]
    3dc0:	cbz	x22, 3e4c <lt__alloc_die_callback@@Base+0xd90>
    3dc4:	ldr	x26, [sp, #128]
    3dc8:	add	x24, x22, x26
    3dcc:	mov	x21, #0x0                   	// #0
    3dd0:	cbz	x21, 3e40 <lt__alloc_die_callback@@Base+0xd84>
    3dd4:	cmp	x21, x24
    3dd8:	b.cs	3e54 <lt__alloc_die_callback@@Base+0xd98>  // b.hs, b.nlast
    3ddc:	mov	x0, x21
    3de0:	bl	2150 <strlen@plt>
    3de4:	add	x0, x0, #0x1
    3de8:	add	x21, x21, x0
    3dec:	cmp	x24, x21
    3df0:	b.ls	3e38 <lt__alloc_die_callback@@Base+0xd7c>  // b.plast
    3df4:	mov	x1, x21
    3df8:	mov	x0, x19
    3dfc:	bl	23e0 <strcmp@plt>
    3e00:	tbnz	w0, #31, 3e58 <lt__alloc_die_callback@@Base+0xd9c>
    3e04:	cbnz	w0, 3dd0 <lt__alloc_die_callback@@Base+0xd14>
    3e08:	mov	x0, x19
    3e0c:	bl	2400 <free@plt>
    3e10:	b	3c5c <lt__alloc_die_callback@@Base+0xba0>
    3e14:	adrp	x3, 6000 <lt__slist_sort@@Base+0x74>
    3e18:	add	x3, x3, #0xbb0
    3e1c:	add	x3, x3, #0x98
    3e20:	mov	w2, #0x6dd                 	// #1757
    3e24:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    3e28:	add	x1, x1, #0x8d8
    3e2c:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    3e30:	add	x0, x0, #0x9f8
    3e34:	bl	2500 <__assert_fail@plt>
    3e38:	mov	x21, #0x0                   	// #0
    3e3c:	b	3e58 <lt__alloc_die_callback@@Base+0xd9c>
    3e40:	cbz	x26, 3e58 <lt__alloc_die_callback@@Base+0xd9c>
    3e44:	mov	x21, x22
    3e48:	b	3df4 <lt__alloc_die_callback@@Base+0xd38>
    3e4c:	mov	x21, x22
    3e50:	b	3e58 <lt__alloc_die_callback@@Base+0xd9c>
    3e54:	mov	x21, #0x0                   	// #0
    3e58:	mov	x3, x19
    3e5c:	mov	x2, x21
    3e60:	mov	x1, x28
    3e64:	ldr	x0, [sp, #120]
    3e68:	bl	3b5c <lt__alloc_die_callback@@Base+0xaa0>
    3e6c:	mov	w21, w0
    3e70:	mov	x0, x19
    3e74:	bl	2400 <free@plt>
    3e78:	cbz	w21, 3c5c <lt__alloc_die_callback@@Base+0xba0>
    3e7c:	mov	x0, x23
    3e80:	bl	2330 <closedir@plt>
    3e84:	mov	w20, #0x0                   	// #0
    3e88:	ldp	x21, x22, [sp, #32]
    3e8c:	ldp	x25, x26, [sp, #64]
    3e90:	b	3ed0 <lt__alloc_die_callback@@Base+0xe14>
    3e94:	mov	w20, #0x0                   	// #0
    3e98:	ldp	x21, x22, [sp, #32]
    3e9c:	ldp	x25, x26, [sp, #64]
    3ea0:	b	3ed0 <lt__alloc_die_callback@@Base+0xe14>
    3ea4:	cbz	x20, 3ef0 <lt__alloc_die_callback@@Base+0xe34>
    3ea8:	cbz	x0, 3eb4 <lt__alloc_die_callback@@Base+0xdf8>
    3eac:	mov	x19, x0
    3eb0:	b	3f50 <lt__alloc_die_callback@@Base+0xe94>
    3eb4:	mov	w20, #0x0                   	// #0
    3eb8:	ldp	x21, x22, [sp, #32]
    3ebc:	ldp	x25, x26, [sp, #64]
    3ec0:	b	3ed0 <lt__alloc_die_callback@@Base+0xe14>
    3ec4:	mov	w20, #0x0                   	// #0
    3ec8:	ldp	x21, x22, [sp, #32]
    3ecc:	ldp	x25, x26, [sp, #64]
    3ed0:	ldr	x0, [sp, #136]
    3ed4:	bl	2400 <free@plt>
    3ed8:	mov	w0, w20
    3edc:	ldp	x23, x24, [sp, #48]
    3ee0:	ldp	x19, x20, [sp, #16]
    3ee4:	ldp	x27, x28, [sp, #80]
    3ee8:	ldp	x29, x30, [sp], #144
    3eec:	ret
    3ef0:	mov	w20, #0x0                   	// #0
    3ef4:	ldp	x21, x22, [sp, #32]
    3ef8:	ldp	x25, x26, [sp, #64]
    3efc:	b	3ed0 <lt__alloc_die_callback@@Base+0xe14>
    3f00:	mov	w20, #0x0                   	// #0
    3f04:	ldp	x21, x22, [sp, #32]
    3f08:	ldp	x25, x26, [sp, #64]
    3f0c:	b	3ed0 <lt__alloc_die_callback@@Base+0xe14>
    3f10:	mov	x0, x23
    3f14:	bl	2330 <closedir@plt>
    3f18:	ldr	x0, [sp, #136]
    3f1c:	cbz	x0, 3f00 <lt__alloc_die_callback@@Base+0xe44>
    3f20:	ldr	x0, [sp, #136]
    3f24:	ldr	x20, [sp, #128]
    3f28:	cbz	x19, 3ea4 <lt__alloc_die_callback@@Base+0xde8>
    3f2c:	add	x20, x0, x20
    3f30:	cmp	x19, x20
    3f34:	b.cs	3ec4 <lt__alloc_die_callback@@Base+0xe08>  // b.hs, b.nlast
    3f38:	mov	x0, x19
    3f3c:	bl	2150 <strlen@plt>
    3f40:	add	x0, x0, #0x1
    3f44:	add	x19, x19, x0
    3f48:	cmp	x20, x19
    3f4c:	b.ls	3e94 <lt__alloc_die_callback@@Base+0xdd8>  // b.plast
    3f50:	ldr	x1, [sp, #104]
    3f54:	mov	x0, x19
    3f58:	blr	x27
    3f5c:	mov	w20, w0
    3f60:	cbz	w0, 3f20 <lt__alloc_die_callback@@Base+0xe64>
    3f64:	ldp	x21, x22, [sp, #32]
    3f68:	ldp	x25, x26, [sp, #64]
    3f6c:	b	3ed0 <lt__alloc_die_callback@@Base+0xe14>
    3f70:	stp	x29, x30, [sp, #-80]!
    3f74:	mov	x29, sp
    3f78:	stp	x19, x20, [sp, #16]
    3f7c:	str	x21, [sp, #32]
    3f80:	str	xzr, [sp, #72]
    3f84:	str	xzr, [sp, #64]
    3f88:	str	xzr, [sp, #56]
    3f8c:	cbz	x0, 402c <lt__alloc_die_callback@@Base+0xf70>
    3f90:	mov	x20, x0
    3f94:	mov	x21, x1
    3f98:	mov	x19, x2
    3f9c:	cbz	x2, 4050 <lt__alloc_die_callback@@Base+0xf94>
    3fa0:	ldrb	w0, [x2]
    3fa4:	cbz	w0, 4050 <lt__alloc_die_callback@@Base+0xf94>
    3fa8:	add	x1, sp, #0x48
    3fac:	mov	x0, x2
    3fb0:	bl	3168 <lt__alloc_die_callback@@Base+0xac>
    3fb4:	cbnz	w0, 4154 <lt__alloc_die_callback@@Base+0x1098>
    3fb8:	ldr	x0, [sp, #72]
    3fbc:	cbz	x0, 4074 <lt__alloc_die_callback@@Base+0xfb8>
    3fc0:	ldrb	w0, [x0]
    3fc4:	cbz	w0, 4074 <lt__alloc_die_callback@@Base+0xfb8>
    3fc8:	ldr	x0, [x20]
    3fcc:	cbz	x0, 4098 <lt__alloc_die_callback@@Base+0xfdc>
    3fd0:	add	x2, sp, #0x38
    3fd4:	add	x1, sp, #0x40
    3fd8:	bl	36bc <lt__alloc_die_callback@@Base+0x600>
    3fdc:	cbnz	w0, 417c <lt__alloc_die_callback@@Base+0x10c0>
    3fe0:	cbz	x21, 4008 <lt__alloc_die_callback@@Base+0xf4c>
    3fe4:	ldr	x0, [x20]
    3fe8:	cmp	x0, x21
    3fec:	b.hi	40d8 <lt__alloc_die_callback@@Base+0x101c>  // b.pmore
    3ff0:	sub	x21, x21, x0
    3ff4:	bl	2150 <strlen@plt>
    3ff8:	cmp	w21, w0
    3ffc:	b.gt	40fc <lt__alloc_die_callback@@Base+0x1040>
    4000:	ldr	x1, [sp, #64]
    4004:	add	x21, x1, x21
    4008:	mov	x3, x19
    400c:	mov	x2, x21
    4010:	add	x1, sp, #0x38
    4014:	add	x0, sp, #0x40
    4018:	bl	3b5c <lt__alloc_die_callback@@Base+0xaa0>
    401c:	mov	w19, w0
    4020:	cbz	w0, 4120 <lt__alloc_die_callback@@Base+0x1064>
    4024:	mov	w19, #0x1                   	// #1
    4028:	b	4158 <lt__alloc_die_callback@@Base+0x109c>
    402c:	adrp	x3, 6000 <lt__slist_sort@@Base+0x74>
    4030:	add	x3, x3, #0xbb0
    4034:	add	x3, x3, #0xb0
    4038:	mov	w2, #0x84e                 	// #2126
    403c:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    4040:	add	x1, x1, #0x8d8
    4044:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    4048:	add	x0, x0, #0xa08
    404c:	bl	2500 <__assert_fail@plt>
    4050:	adrp	x3, 6000 <lt__slist_sort@@Base+0x74>
    4054:	add	x3, x3, #0xbb0
    4058:	add	x3, x3, #0xb0
    405c:	mov	w2, #0x84f                 	// #2127
    4060:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    4064:	add	x1, x1, #0x8d8
    4068:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    406c:	add	x0, x0, #0xa10
    4070:	bl	2500 <__assert_fail@plt>
    4074:	adrp	x3, 6000 <lt__slist_sort@@Base+0x74>
    4078:	add	x3, x3, #0xbb0
    407c:	add	x3, x3, #0xb0
    4080:	mov	w2, #0x857                 	// #2135
    4084:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    4088:	add	x1, x1, #0x8d8
    408c:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    4090:	add	x0, x0, #0xa20
    4094:	bl	2500 <__assert_fail@plt>
    4098:	cbnz	x21, 40b4 <lt__alloc_die_callback@@Base+0xff8>
    409c:	mov	x0, x19
    40a0:	bl	2180 <lt__strdup@plt>
    40a4:	str	x0, [x20]
    40a8:	cmp	x0, #0x0
    40ac:	cset	w19, eq  // eq = none
    40b0:	b	4158 <lt__alloc_die_callback@@Base+0x109c>
    40b4:	adrp	x3, 6000 <lt__slist_sort@@Base+0x74>
    40b8:	add	x3, x3, #0xbb0
    40bc:	add	x3, x3, #0xb0
    40c0:	mov	w2, #0x85c                 	// #2140
    40c4:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    40c8:	add	x1, x1, #0x8d8
    40cc:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    40d0:	add	x0, x0, #0xa38
    40d4:	bl	2500 <__assert_fail@plt>
    40d8:	adrp	x3, 6000 <lt__slist_sort@@Base+0x74>
    40dc:	add	x3, x3, #0xbb0
    40e0:	add	x3, x3, #0xb0
    40e4:	mov	w2, #0x875                 	// #2165
    40e8:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    40ec:	add	x1, x1, #0x8d8
    40f0:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    40f4:	add	x0, x0, #0xa40
    40f8:	bl	2500 <__assert_fail@plt>
    40fc:	adrp	x3, 6000 <lt__slist_sort@@Base+0x74>
    4100:	add	x3, x3, #0xbb0
    4104:	add	x3, x3, #0xb0
    4108:	mov	w2, #0x876                 	// #2166
    410c:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    4110:	add	x1, x1, #0x8d8
    4114:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    4118:	add	x0, x0, #0xa58
    411c:	bl	2500 <__assert_fail@plt>
    4120:	mov	w2, #0x3a                  	// #58
    4124:	ldr	x1, [sp, #56]
    4128:	ldr	x0, [sp, #64]
    412c:	bl	22f0 <argz_stringify@plt>
    4130:	ldr	x0, [x20]
    4134:	ldr	x1, [sp, #64]
    4138:	cmp	x0, x1
    413c:	b.eq	4158 <lt__alloc_die_callback@@Base+0x109c>  // b.none
    4140:	bl	2400 <free@plt>
    4144:	ldr	x0, [sp, #64]
    4148:	str	x0, [x20]
    414c:	str	xzr, [sp, #64]
    4150:	b	4158 <lt__alloc_die_callback@@Base+0x109c>
    4154:	mov	w19, #0x1                   	// #1
    4158:	ldr	x0, [sp, #64]
    415c:	bl	2400 <free@plt>
    4160:	ldr	x0, [sp, #72]
    4164:	bl	2400 <free@plt>
    4168:	mov	w0, w19
    416c:	ldp	x19, x20, [sp, #16]
    4170:	ldr	x21, [sp, #32]
    4174:	ldp	x29, x30, [sp], #80
    4178:	ret
    417c:	mov	w19, #0x1                   	// #1
    4180:	b	4158 <lt__alloc_die_callback@@Base+0x109c>

0000000000004184 <lt_dlinit@@Base>:
    4184:	adrp	x0, 19000 <lt_dlinterface_free@@Base+0x13680>
    4188:	add	x0, x0, #0x280
    418c:	ldr	w1, [x0, #8]
    4190:	add	w1, w1, #0x1
    4194:	str	w1, [x0, #8]
    4198:	mov	w0, #0x0                   	// #0
    419c:	cmp	w1, #0x1
    41a0:	b.eq	41a8 <lt_dlinit@@Base+0x24>  // b.none
    41a4:	ret
    41a8:	stp	x29, x30, [sp, #-16]!
    41ac:	mov	x29, sp
    41b0:	adrp	x0, 18000 <dlopen_LTX_get_vtable@@Base+0x11c6c>
    41b4:	ldr	x0, [x0, #4040]
    41b8:	adrp	x1, 18000 <dlopen_LTX_get_vtable@@Base+0x11c6c>
    41bc:	ldr	x1, [x1, #4056]
    41c0:	str	x1, [x0]
    41c4:	adrp	x0, 19000 <lt_dlinterface_free@@Base+0x13680>
    41c8:	add	x1, x0, #0x280
    41cc:	str	xzr, [x0, #640]
    41d0:	str	xzr, [x1, #16]
    41d4:	mov	x1, #0x0                   	// #0
    41d8:	adrp	x0, 18000 <dlopen_LTX_get_vtable@@Base+0x11c6c>
    41dc:	ldr	x0, [x0, #4032]
    41e0:	bl	30d8 <lt__alloc_die_callback@@Base+0x1c>
    41e4:	cbz	w0, 41f0 <lt_dlinit@@Base+0x6c>
    41e8:	ldp	x29, x30, [sp], #16
    41ec:	ret
    41f0:	adrp	x0, 18000 <dlopen_LTX_get_vtable@@Base+0x11c6c>
    41f4:	ldr	x0, [x0, #4000]
    41f8:	bl	2550 <lt_dlpreload@plt>
    41fc:	cbnz	w0, 41e8 <lt_dlinit@@Base+0x64>
    4200:	adrp	x1, 5000 <lt_dlexit@@Base+0xa14>
    4204:	add	x1, x1, #0x708
    4208:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    420c:	add	x0, x0, #0xa90
    4210:	bl	22d0 <lt_dlpreload_open@plt>
    4214:	b	41e8 <lt_dlinit@@Base+0x64>

0000000000004218 <lt_dladvise_init@@Base>:
    4218:	stp	x29, x30, [sp, #-32]!
    421c:	mov	x29, sp
    4220:	str	x19, [sp, #16]
    4224:	mov	x19, x0
    4228:	mov	x0, #0x4                   	// #4
    422c:	bl	2420 <lt__zalloc@plt>
    4230:	str	x0, [x19]
    4234:	cmp	x0, #0x0
    4238:	cset	w0, eq  // eq = none
    423c:	ldr	x19, [sp, #16]
    4240:	ldp	x29, x30, [sp], #32
    4244:	ret

0000000000004248 <lt_dladvise_destroy@@Base>:
    4248:	cbz	x0, 4278 <lt_dladvise_destroy@@Base+0x30>
    424c:	stp	x29, x30, [sp, #-32]!
    4250:	mov	x29, sp
    4254:	str	x19, [sp, #16]
    4258:	mov	x19, x0
    425c:	ldr	x0, [x0]
    4260:	bl	2400 <free@plt>
    4264:	str	xzr, [x19]
    4268:	mov	w0, #0x0                   	// #0
    426c:	ldr	x19, [sp, #16]
    4270:	ldp	x29, x30, [sp], #32
    4274:	ret
    4278:	mov	w0, #0x0                   	// #0
    427c:	ret

0000000000004280 <lt_dladvise_ext@@Base>:
    4280:	cbz	x0, 42a0 <lt_dladvise_ext@@Base+0x20>
    4284:	ldr	x0, [x0]
    4288:	cbz	x0, 42a0 <lt_dladvise_ext@@Base+0x20>
    428c:	ldrb	w1, [x0]
    4290:	orr	w1, w1, #0x1
    4294:	strb	w1, [x0]
    4298:	mov	w0, #0x0                   	// #0
    429c:	ret
    42a0:	stp	x29, x30, [sp, #-16]!
    42a4:	mov	x29, sp
    42a8:	adrp	x3, 6000 <lt__slist_sort@@Base+0x74>
    42ac:	add	x3, x3, #0xbb0
    42b0:	add	x3, x3, #0xc8
    42b4:	mov	w2, #0x631                 	// #1585
    42b8:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    42bc:	add	x1, x1, #0x8d8
    42c0:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    42c4:	add	x0, x0, #0xa98
    42c8:	bl	2500 <__assert_fail@plt>

00000000000042cc <lt_dladvise_resident@@Base>:
    42cc:	cbz	x0, 42ec <lt_dladvise_resident@@Base+0x20>
    42d0:	ldr	x0, [x0]
    42d4:	cbz	x0, 42ec <lt_dladvise_resident@@Base+0x20>
    42d8:	ldrb	w1, [x0]
    42dc:	orr	w1, w1, #0x2
    42e0:	strb	w1, [x0]
    42e4:	mov	w0, #0x0                   	// #0
    42e8:	ret
    42ec:	stp	x29, x30, [sp, #-16]!
    42f0:	mov	x29, sp
    42f4:	adrp	x3, 6000 <lt__slist_sort@@Base+0x74>
    42f8:	add	x3, x3, #0xbb0
    42fc:	add	x3, x3, #0xd8
    4300:	mov	w2, #0x639                 	// #1593
    4304:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    4308:	add	x1, x1, #0x8d8
    430c:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    4310:	add	x0, x0, #0xa98
    4314:	bl	2500 <__assert_fail@plt>

0000000000004318 <lt_dladvise_local@@Base>:
    4318:	cbz	x0, 4338 <lt_dladvise_local@@Base+0x20>
    431c:	ldr	x0, [x0]
    4320:	cbz	x0, 4338 <lt_dladvise_local@@Base+0x20>
    4324:	ldrb	w1, [x0]
    4328:	orr	w1, w1, #0x8
    432c:	strb	w1, [x0]
    4330:	mov	w0, #0x0                   	// #0
    4334:	ret
    4338:	stp	x29, x30, [sp, #-16]!
    433c:	mov	x29, sp
    4340:	adrp	x3, 6000 <lt__slist_sort@@Base+0x74>
    4344:	add	x3, x3, #0xbb0
    4348:	add	x3, x3, #0xf0
    434c:	mov	w2, #0x641                 	// #1601
    4350:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    4354:	add	x1, x1, #0x8d8
    4358:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    435c:	add	x0, x0, #0xa98
    4360:	bl	2500 <__assert_fail@plt>

0000000000004364 <lt_dladvise_global@@Base>:
    4364:	cbz	x0, 4384 <lt_dladvise_global@@Base+0x20>
    4368:	ldr	x0, [x0]
    436c:	cbz	x0, 4384 <lt_dladvise_global@@Base+0x20>
    4370:	ldrb	w1, [x0]
    4374:	orr	w1, w1, #0x4
    4378:	strb	w1, [x0]
    437c:	mov	w0, #0x0                   	// #0
    4380:	ret
    4384:	stp	x29, x30, [sp, #-16]!
    4388:	mov	x29, sp
    438c:	adrp	x3, 6000 <lt__slist_sort@@Base+0x74>
    4390:	add	x3, x3, #0xbb0
    4394:	add	x3, x3, #0x108
    4398:	mov	w2, #0x649                 	// #1609
    439c:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    43a0:	add	x1, x1, #0x8d8
    43a4:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    43a8:	add	x0, x0, #0xa98
    43ac:	bl	2500 <__assert_fail@plt>

00000000000043b0 <lt_dladvise_preload@@Base>:
    43b0:	cbz	x0, 43d0 <lt_dladvise_preload@@Base+0x20>
    43b4:	ldr	x0, [x0]
    43b8:	cbz	x0, 43d0 <lt_dladvise_preload@@Base+0x20>
    43bc:	ldrb	w1, [x0]
    43c0:	orr	w1, w1, #0x10
    43c4:	strb	w1, [x0]
    43c8:	mov	w0, #0x0                   	// #0
    43cc:	ret
    43d0:	stp	x29, x30, [sp, #-16]!
    43d4:	mov	x29, sp
    43d8:	adrp	x3, 6000 <lt__slist_sort@@Base+0x74>
    43dc:	add	x3, x3, #0xbb0
    43e0:	add	x3, x3, #0x120
    43e4:	mov	w2, #0x651                 	// #1617
    43e8:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    43ec:	add	x1, x1, #0x8d8
    43f0:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    43f4:	add	x0, x0, #0xa98
    43f8:	bl	2500 <__assert_fail@plt>

00000000000043fc <lt_dlforeachfile@@Base>:
    43fc:	stp	x29, x30, [sp, #-48]!
    4400:	mov	x29, sp
    4404:	str	x19, [sp, #16]
    4408:	str	x1, [sp, #40]
    440c:	mov	x19, x2
    4410:	cbz	x0, 4438 <lt_dlforeachfile@@Base+0x3c>
    4414:	mov	x4, x2
    4418:	add	x3, sp, #0x28
    441c:	adrp	x2, 3000 <lt__error_string@@Base+0x5c>
    4420:	add	x2, x2, #0xbe4
    4424:	mov	x1, #0x0                   	// #0
    4428:	bl	3788 <lt__alloc_die_callback@@Base+0x6cc>
    442c:	ldr	x19, [sp, #16]
    4430:	ldp	x29, x30, [sp], #48
    4434:	ret
    4438:	mov	x4, x2
    443c:	add	x3, sp, #0x28
    4440:	adrp	x2, 3000 <lt__error_string@@Base+0x5c>
    4444:	add	x2, x2, #0xbe4
    4448:	mov	x1, #0x0                   	// #0
    444c:	adrp	x0, 19000 <lt_dlinterface_free@@Base+0x13680>
    4450:	ldr	x0, [x0, #656]
    4454:	bl	3788 <lt__alloc_die_callback@@Base+0x6cc>
    4458:	cbnz	w0, 442c <lt_dlforeachfile@@Base+0x30>
    445c:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    4460:	add	x0, x0, #0xab0
    4464:	bl	2510 <getenv@plt>
    4468:	mov	x4, x19
    446c:	add	x3, sp, #0x28
    4470:	adrp	x2, 3000 <lt__error_string@@Base+0x5c>
    4474:	add	x2, x2, #0xbe4
    4478:	mov	x1, #0x0                   	// #0
    447c:	bl	3788 <lt__alloc_die_callback@@Base+0x6cc>
    4480:	cbnz	w0, 442c <lt_dlforeachfile@@Base+0x30>
    4484:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    4488:	add	x0, x0, #0xac8
    448c:	bl	2510 <getenv@plt>
    4490:	mov	x4, x19
    4494:	add	x3, sp, #0x28
    4498:	adrp	x2, 3000 <lt__error_string@@Base+0x5c>
    449c:	add	x2, x2, #0xbe4
    44a0:	mov	x1, #0x0                   	// #0
    44a4:	bl	3788 <lt__alloc_die_callback@@Base+0x6cc>
    44a8:	cbnz	w0, 442c <lt_dlforeachfile@@Base+0x30>
    44ac:	mov	x4, x19
    44b0:	add	x3, sp, #0x28
    44b4:	adrp	x2, 3000 <lt__error_string@@Base+0x5c>
    44b8:	add	x2, x2, #0xbe4
    44bc:	mov	x1, #0x0                   	// #0
    44c0:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    44c4:	add	x0, x0, #0xbb0
    44c8:	add	x0, x0, #0x138
    44cc:	bl	3788 <lt__alloc_die_callback@@Base+0x6cc>
    44d0:	b	442c <lt_dlforeachfile@@Base+0x30>

00000000000044d4 <lt_dlclose@@Base>:
    44d4:	stp	x29, x30, [sp, #-32]!
    44d8:	mov	x29, sp
    44dc:	stp	x19, x20, [sp, #16]
    44e0:	mov	x19, x0
    44e4:	adrp	x0, 19000 <lt_dlinterface_free@@Base+0x13680>
    44e8:	ldr	x3, [x0, #640]
    44ec:	cmp	x3, #0x0
    44f0:	ccmp	x3, x19, #0x4, ne  // ne = any
    44f4:	b.eq	4544 <lt_dlclose@@Base+0x70>  // b.none
    44f8:	mov	x1, x3
    44fc:	mov	x2, x1
    4500:	ldr	x1, [x1]
    4504:	cmp	x1, #0x0
    4508:	ccmp	x19, x1, #0x4, ne  // ne = any
    450c:	b.ne	44fc <lt_dlclose@@Base+0x28>  // b.any
    4510:	cbz	x1, 4550 <lt_dlclose@@Base+0x7c>
    4514:	ldr	w0, [x19, #32]
    4518:	sub	w0, w0, #0x1
    451c:	str	w0, [x19, #32]
    4520:	cmp	w0, #0x0
    4524:	b.le	4564 <lt_dlclose@@Base+0x90>
    4528:	ldrb	w0, [x19, #36]
    452c:	mov	w20, #0x0                   	// #0
    4530:	tbnz	w0, #0, 456c <lt_dlclose@@Base+0x98>
    4534:	mov	w0, w20
    4538:	ldp	x19, x20, [sp, #16]
    453c:	ldp	x29, x30, [sp], #32
    4540:	ret
    4544:	mov	x2, x3
    4548:	mov	x1, x3
    454c:	b	4510 <lt_dlclose@@Base+0x3c>
    4550:	mov	w0, #0xc                   	// #12
    4554:	bl	22a0 <lt__error_string@plt>
    4558:	bl	2410 <lt__set_last_error@plt>
    455c:	mov	w20, #0x1                   	// #1
    4560:	b	4534 <lt_dlclose@@Base+0x60>
    4564:	ldrb	w0, [x19, #36]
    4568:	tbz	w0, #0, 4580 <lt_dlclose@@Base+0xac>
    456c:	mov	w0, #0x10                  	// #16
    4570:	bl	22a0 <lt__error_string@plt>
    4574:	bl	2410 <lt__set_last_error@plt>
    4578:	mov	w20, #0x1                   	// #1
    457c:	b	4534 <lt_dlclose@@Base+0x60>
    4580:	ldr	x0, [x19, #8]
    4584:	ldr	x0, [x0, #56]
    4588:	cmp	x3, x19
    458c:	b.eq	45dc <lt_dlclose@@Base+0x108>  // b.none
    4590:	ldr	x1, [x19]
    4594:	str	x1, [x2]
    4598:	ldr	x1, [x19, #8]
    459c:	ldr	x2, [x1, #24]
    45a0:	ldr	x1, [x19, #56]
    45a4:	blr	x2
    45a8:	mov	w20, w0
    45ac:	mov	x0, x19
    45b0:	bl	47b8 <lt_dlexit@@Base+0x1cc>
    45b4:	add	w20, w20, w0
    45b8:	ldr	x0, [x19, #72]
    45bc:	bl	2400 <free@plt>
    45c0:	ldr	x0, [x19, #16]
    45c4:	bl	2400 <free@plt>
    45c8:	ldr	x0, [x19, #24]
    45cc:	bl	2400 <free@plt>
    45d0:	mov	x0, x19
    45d4:	bl	2400 <free@plt>
    45d8:	b	4534 <lt_dlclose@@Base+0x60>
    45dc:	ldr	x2, [x19]
    45e0:	adrp	x1, 19000 <lt_dlinterface_free@@Base+0x13680>
    45e4:	str	x2, [x1, #640]
    45e8:	b	4598 <lt_dlclose@@Base+0xc4>

00000000000045ec <lt_dlexit@@Base>:
    45ec:	stp	x29, x30, [sp, #-80]!
    45f0:	mov	x29, sp
    45f4:	stp	x19, x20, [sp, #16]
    45f8:	stp	x21, x22, [sp, #32]
    45fc:	adrp	x0, 19000 <lt_dlinterface_free@@Base+0x13680>
    4600:	ldr	w21, [x0, #648]
    4604:	cbz	w21, 4638 <lt_dlexit@@Base+0x4c>
    4608:	adrp	x0, 19000 <lt_dlinterface_free@@Base+0x13680>
    460c:	add	x1, x0, #0x280
    4610:	ldr	x0, [x0, #640]
    4614:	sub	w21, w21, #0x1
    4618:	str	w21, [x1, #8]
    461c:	mov	w20, #0x0                   	// #0
    4620:	cbz	w21, 464c <lt_dlexit@@Base+0x60>
    4624:	mov	w0, w20
    4628:	ldp	x19, x20, [sp, #16]
    462c:	ldp	x21, x22, [sp, #32]
    4630:	ldp	x29, x30, [sp], #80
    4634:	ret
    4638:	mov	w0, #0xf                   	// #15
    463c:	bl	22a0 <lt__error_string@plt>
    4640:	bl	2410 <lt__set_last_error@plt>
    4644:	mov	w20, #0x1                   	// #1
    4648:	b	4624 <lt_dlexit@@Base+0x38>
    464c:	mov	w2, #0x0                   	// #0
    4650:	mov	w3, #0x1                   	// #1
    4654:	cbz	x0, 4734 <lt_dlexit@@Base+0x148>
    4658:	ldrb	w1, [x0, #36]
    465c:	tbz	w1, #0, 4780 <lt_dlexit@@Base+0x194>
    4660:	ldr	x0, [x0]
    4664:	mov	w2, w3
    4668:	cbnz	x0, 4658 <lt_dlexit@@Base+0x6c>
    466c:	adrp	x0, 19000 <lt_dlinterface_free@@Base+0x13680>
    4670:	str	xzr, [x0, #640]
    4674:	mov	w20, w21
    4678:	b	46fc <lt_dlexit@@Base+0x110>
    467c:	ldr	x1, [x24, #640]
    4680:	cmp	x1, #0x0
    4684:	ccmp	x19, x1, #0x4, ne  // ne = any
    4688:	b.eq	46e8 <lt_dlexit@@Base+0xfc>  // b.none
    468c:	mov	x0, x1
    4690:	ldr	x0, [x0]
    4694:	cmp	x0, #0x0
    4698:	ccmp	x19, x0, #0x4, ne  // ne = any
    469c:	b.ne	4690 <lt_dlexit@@Base+0xa4>  // b.any
    46a0:	mov	w2, w22
    46a4:	cbnz	x0, 46b0 <lt_dlexit@@Base+0xc4>
    46a8:	mov	x19, x1
    46ac:	cbz	x19, 46f0 <lt_dlexit@@Base+0x104>
    46b0:	mov	x0, x19
    46b4:	ldr	x19, [x0]
    46b8:	ldrb	w1, [x0, #36]
    46bc:	tbnz	w1, #0, 46ac <lt_dlexit@@Base+0xc0>
    46c0:	ldr	w1, [x0, #32]
    46c4:	mov	w2, w22
    46c8:	cmp	w1, w23
    46cc:	b.gt	46ac <lt_dlexit@@Base+0xc0>
    46d0:	bl	2130 <lt_dlclose@plt>
    46d4:	cmp	w0, #0x0
    46d8:	cinc	w20, w20, ne  // ne = any
    46dc:	cbnz	x19, 467c <lt_dlexit@@Base+0x90>
    46e0:	add	w23, w23, #0x1
    46e4:	b	47a8 <lt_dlexit@@Base+0x1bc>
    46e8:	mov	x0, x1
    46ec:	b	46a0 <lt_dlexit@@Base+0xb4>
    46f0:	cbnz	w2, 46e0 <lt_dlexit@@Base+0xf4>
    46f4:	ldp	x23, x24, [sp, #48]
    46f8:	ldr	x25, [sp, #64]
    46fc:	cbz	w20, 4734 <lt_dlexit@@Base+0x148>
    4700:	mov	x0, #0x0                   	// #0
    4704:	bl	2220 <lt_dlloader_next@plt>
    4708:	mov	x19, x0
    470c:	cbnz	x0, 4754 <lt_dlexit@@Base+0x168>
    4710:	adrp	x19, 19000 <lt_dlinterface_free@@Base+0x13680>
    4714:	add	x19, x19, #0x280
    4718:	ldr	x0, [x19, #16]
    471c:	bl	2400 <free@plt>
    4720:	str	xzr, [x19, #16]
    4724:	b	4624 <lt_dlexit@@Base+0x38>
    4728:	ldp	x23, x24, [sp, #48]
    472c:	ldr	x25, [sp, #64]
    4730:	b	46fc <lt_dlexit@@Base+0x110>
    4734:	mov	x0, #0x0                   	// #0
    4738:	bl	2410 <lt__set_last_error@plt>
    473c:	mov	w20, w21
    4740:	b	4700 <lt_dlexit@@Base+0x114>
    4744:	bl	2190 <lt__get_last_error@plt>
    4748:	cmp	x0, #0x0
    474c:	cinc	w20, w20, ne  // ne = any
    4750:	cbz	x19, 4710 <lt_dlexit@@Base+0x124>
    4754:	mov	x21, x19
    4758:	mov	x0, x19
    475c:	bl	2220 <lt_dlloader_next@plt>
    4760:	mov	x19, x0
    4764:	mov	x0, x21
    4768:	bl	2140 <lt_dlloader_get@plt>
    476c:	ldr	x0, [x0]
    4770:	bl	24f0 <lt_dlloader_remove@plt>
    4774:	cbz	x0, 4744 <lt_dlexit@@Base+0x158>
    4778:	bl	2400 <free@plt>
    477c:	b	4750 <lt_dlexit@@Base+0x164>
    4780:	stp	x23, x24, [sp, #48]
    4784:	str	x25, [sp, #64]
    4788:	cbz	w2, 4794 <lt_dlexit@@Base+0x1a8>
    478c:	adrp	x1, 19000 <lt_dlinterface_free@@Base+0x13680>
    4790:	str	x0, [x1, #640]
    4794:	mov	w20, w21
    4798:	mov	w23, #0x1                   	// #1
    479c:	adrp	x24, 19000 <lt_dlinterface_free@@Base+0x13680>
    47a0:	mov	w25, w21
    47a4:	mov	w22, w23
    47a8:	ldr	x0, [x24, #640]
    47ac:	cbz	x0, 4728 <lt_dlexit@@Base+0x13c>
    47b0:	mov	w2, w25
    47b4:	b	46b4 <lt_dlexit@@Base+0xc8>
    47b8:	stp	x29, x30, [sp, #-48]!
    47bc:	mov	x29, sp
    47c0:	str	x21, [sp, #32]
    47c4:	ldr	w21, [x0, #40]
    47c8:	cbz	w21, 4828 <lt_dlexit@@Base+0x23c>
    47cc:	stp	x19, x20, [sp, #16]
    47d0:	mov	x20, x0
    47d4:	cmp	w21, #0x0
    47d8:	b.le	4814 <lt_dlexit@@Base+0x228>
    47dc:	mov	x19, #0x0                   	// #0
    47e0:	mov	w21, #0x0                   	// #0
    47e4:	b	4800 <lt_dlexit@@Base+0x214>
    47e8:	bl	2130 <lt_dlclose@plt>
    47ec:	add	w21, w21, w0
    47f0:	add	x19, x19, #0x1
    47f4:	ldr	w0, [x20, #40]
    47f8:	cmp	w0, w19
    47fc:	b.le	4818 <lt_dlexit@@Base+0x22c>
    4800:	ldr	x0, [x20, #48]
    4804:	ldr	x0, [x0, x19, lsl #3]
    4808:	ldrb	w1, [x0, #36]
    480c:	tbnz	w1, #0, 47f0 <lt_dlexit@@Base+0x204>
    4810:	b	47e8 <lt_dlexit@@Base+0x1fc>
    4814:	mov	w21, #0x0                   	// #0
    4818:	ldr	x0, [x20, #48]
    481c:	bl	2400 <free@plt>
    4820:	str	xzr, [x20, #48]
    4824:	ldp	x19, x20, [sp, #16]
    4828:	mov	w0, w21
    482c:	ldr	x21, [sp, #32]
    4830:	ldp	x29, x30, [sp], #48
    4834:	ret
    4838:	stp	x29, x30, [sp, #-208]!
    483c:	mov	x29, sp
    4840:	stp	x19, x20, [sp, #16]
    4844:	stp	x21, x22, [sp, #32]
    4848:	stp	x23, x24, [sp, #48]
    484c:	stp	x25, x26, [sp, #64]
    4850:	stp	x27, x28, [sp, #80]
    4854:	str	x3, [sp, #96]
    4858:	str	xzr, [sp, #200]
    485c:	str	xzr, [sp, #192]
    4860:	cbz	x0, 4a54 <lt_dlexit@@Base+0x468>
    4864:	mov	x23, x0
    4868:	mov	x21, x1
    486c:	mov	x19, x2
    4870:	ldr	x28, [x0]
    4874:	cbnz	x28, 4a78 <lt_dlexit@@Base+0x48c>
    4878:	bl	2190 <lt__get_last_error@plt>
    487c:	str	x0, [sp, #104]
    4880:	cbz	x21, 4a9c <lt_dlexit@@Base+0x4b0>
    4884:	ldrb	w0, [x21]
    4888:	cbz	w0, 4bc0 <lt_dlexit@@Base+0x5d4>
    488c:	cbz	x19, 4be4 <lt_dlexit@@Base+0x5f8>
    4890:	mov	x0, x21
    4894:	bl	2150 <strlen@plt>
    4898:	mov	x20, x0
    489c:	ldrb	w1, [x19]
    48a0:	mov	x0, #0x0                   	// #0
    48a4:	cbz	w1, 48b0 <lt_dlexit@@Base+0x2c4>
    48a8:	mov	x0, x19
    48ac:	bl	2150 <strlen@plt>
    48b0:	add	x20, x20, #0x1
    48b4:	add	x0, x20, x0
    48b8:	bl	2370 <lt__malloc@plt>
    48bc:	mov	x25, x0
    48c0:	cbz	x0, 52b8 <lt_dlexit@@Base+0xccc>
    48c4:	mov	x3, x19
    48c8:	mov	x2, x21
    48cc:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    48d0:	add	x1, x1, #0xaf0
    48d4:	bl	21b0 <sprintf@plt>
    48d8:	add	x1, sp, #0xc8
    48dc:	mov	x0, x25
    48e0:	bl	3168 <lt__alloc_die_callback@@Base+0xac>
    48e4:	mov	w19, w0
    48e8:	cbnz	w0, 5260 <lt_dlexit@@Base+0xc74>
    48ec:	ldr	x21, [sp, #200]
    48f0:	mov	w1, #0x2f                  	// #47
    48f4:	mov	x0, x21
    48f8:	bl	2340 <strrchr@plt>
    48fc:	mov	x20, x0
    4900:	cbz	x0, 4bfc <lt_dlexit@@Base+0x610>
    4904:	add	x26, x0, #0x1
    4908:	sub	x21, x26, x21
    490c:	add	x0, x21, #0x1
    4910:	bl	2370 <lt__malloc@plt>
    4914:	mov	x24, x0
    4918:	str	x0, [sp, #192]
    491c:	cbz	x0, 5270 <lt_dlexit@@Base+0xc84>
    4920:	mov	x2, x21
    4924:	ldr	x1, [sp, #200]
    4928:	bl	2380 <lt_strlcpy@plt>
    492c:	ldr	x0, [sp, #192]
    4930:	strb	wzr, [x0, x21]
    4934:	ldrb	w0, [x26]
    4938:	cbz	w0, 4c08 <lt_dlexit@@Base+0x61c>
    493c:	mov	w1, #0x2e                  	// #46
    4940:	mov	x0, x26
    4944:	bl	2340 <strrchr@plt>
    4948:	mov	x20, x0
    494c:	cbz	x0, 4c2c <lt_dlexit@@Base+0x640>
    4950:	sub	x21, x20, x26
    4954:	add	x0, x21, #0x1
    4958:	bl	2370 <lt__malloc@plt>
    495c:	mov	x24, x0
    4960:	cbz	x0, 5280 <lt_dlexit@@Base+0xc94>
    4964:	cmp	x21, #0x0
    4968:	b.le	49a4 <lt_dlexit@@Base+0x3b8>
    496c:	bl	23f0 <__ctype_b_loc@plt>
    4970:	mov	x6, x21
    4974:	mov	x1, #0x0                   	// #0
    4978:	mov	w5, #0x5f                  	// #95
    497c:	ldrb	w2, [x26, x1]
    4980:	and	x4, x2, #0xff
    4984:	ldr	x3, [x0]
    4988:	ldrh	w3, [x3, x4, lsl #1]
    498c:	tst	x3, #0x8
    4990:	csel	w2, w2, w5, ne  // ne = any
    4994:	strb	w2, [x24, x1]
    4998:	add	x1, x1, #0x1
    499c:	cmp	x1, x6
    49a0:	b.ne	497c <lt_dlexit@@Base+0x390>  // b.any
    49a4:	strb	wzr, [x24, x21]
    49a8:	ldr	x0, [sp, #192]
    49ac:	mov	x21, x28
    49b0:	cbz	x0, 4c3c <lt_dlexit@@Base+0x650>
    49b4:	ldr	x0, [sp, #96]
    49b8:	cbz	x0, 49c4 <lt_dlexit@@Base+0x3d8>
    49bc:	ldrb	w0, [x0]
    49c0:	tbnz	w0, #4, 5298 <lt_dlexit@@Base+0xcac>
    49c4:	cbz	x20, 518c <lt_dlexit@@Base+0xba0>
    49c8:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    49cc:	add	x1, x1, #0xbb0
    49d0:	add	x1, x1, #0x180
    49d4:	mov	x0, x20
    49d8:	bl	23e0 <strcmp@plt>
    49dc:	str	w0, [sp, #128]
    49e0:	cbnz	w0, 518c <lt_dlexit@@Base+0xba0>
    49e4:	str	xzr, [sp, #152]
    49e8:	str	xzr, [sp, #160]
    49ec:	str	xzr, [sp, #168]
    49f0:	str	xzr, [sp, #176]
    49f4:	ldr	x0, [sp, #192]
    49f8:	cbz	x0, 4d1c <lt_dlexit@@Base+0x730>
    49fc:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    4a00:	add	x1, x1, #0x968
    4a04:	mov	x0, x25
    4a08:	bl	2210 <fopen@plt>
    4a0c:	mov	x27, x0
    4a10:	cbz	x27, 4da4 <lt_dlexit@@Base+0x7b8>
    4a14:	mov	x0, #0x800                 	// #2048
    4a18:	bl	2370 <lt__malloc@plt>
    4a1c:	mov	x19, x0
    4a20:	mov	w0, #0x1                   	// #1
    4a24:	str	w0, [sp, #132]
    4a28:	mov	x20, #0x800                 	// #2048
    4a2c:	cbz	x19, 4dbc <lt_dlexit@@Base+0x7d0>
    4a30:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    4a34:	add	x0, x0, #0xb28
    4a38:	str	x0, [sp, #112]
    4a3c:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    4a40:	add	x0, x0, #0xb30
    4a44:	str	x0, [sp, #120]
    4a48:	add	x0, sp, #0x98
    4a4c:	str	x0, [sp, #136]
    4a50:	b	4f24 <lt_dlexit@@Base+0x938>
    4a54:	adrp	x3, 6000 <lt__slist_sort@@Base+0x74>
    4a58:	add	x3, x3, #0xbb0
    4a5c:	add	x3, x3, #0x160
    4a60:	mov	w2, #0x494                 	// #1172
    4a64:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    4a68:	add	x1, x1, #0x8d8
    4a6c:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    4a70:	add	x0, x0, #0xad8
    4a74:	bl	2500 <__assert_fail@plt>
    4a78:	adrp	x3, 6000 <lt__slist_sort@@Base+0x74>
    4a7c:	add	x3, x3, #0xbb0
    4a80:	add	x3, x3, #0x160
    4a84:	mov	w2, #0x495                 	// #1173
    4a88:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    4a8c:	add	x1, x1, #0x8d8
    4a90:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    4a94:	add	x0, x0, #0xae0
    4a98:	bl	2500 <__assert_fail@plt>
    4a9c:	mov	x0, #0x58                  	// #88
    4aa0:	bl	2420 <lt__zalloc@plt>
    4aa4:	str	x0, [x23]
    4aa8:	mov	w19, #0x1                   	// #1
    4aac:	cbz	x0, 4b90 <lt_dlexit@@Base+0x5a4>
    4ab0:	str	x0, [sp, #184]
    4ab4:	ldrb	w1, [x0, #36]
    4ab8:	orr	w1, w1, w19
    4abc:	strb	w1, [x0, #36]
    4ac0:	mov	x3, #0x0                   	// #0
    4ac4:	ldr	x2, [sp, #96]
    4ac8:	mov	x1, #0x0                   	// #0
    4acc:	add	x0, sp, #0xb8
    4ad0:	bl	327c <lt__alloc_die_callback@@Base+0x1c0>
    4ad4:	cbnz	w0, 4bb0 <lt_dlexit@@Base+0x5c4>
    4ad8:	mov	x25, x21
    4adc:	mov	x24, x21
    4ae0:	mov	x26, x21
    4ae4:	ldr	x0, [x23]
    4ae8:	ldr	x1, [sp, #184]
    4aec:	cmp	x0, x1
    4af0:	b.eq	4b04 <lt_dlexit@@Base+0x518>  // b.none
    4af4:	bl	2400 <free@plt>
    4af8:	ldr	x0, [sp, #184]
    4afc:	str	x0, [x23]
    4b00:	str	xzr, [sp, #184]
    4b04:	ldr	x0, [x23]
    4b08:	ldr	w1, [x0, #32]
    4b0c:	cbnz	w1, 4b50 <lt_dlexit@@Base+0x564>
    4b10:	mov	w1, #0x1                   	// #1
    4b14:	str	w1, [x0, #32]
    4b18:	ldr	x0, [x23]
    4b1c:	ldr	x0, [x0, #24]
    4b20:	cmp	x0, x24
    4b24:	b.eq	4b38 <lt_dlexit@@Base+0x54c>  // b.none
    4b28:	bl	2400 <free@plt>
    4b2c:	ldr	x0, [x23]
    4b30:	str	x24, [x0, #24]
    4b34:	mov	x24, x28
    4b38:	ldr	x1, [x23]
    4b3c:	adrp	x0, 19000 <lt_dlinterface_free@@Base+0x13680>
    4b40:	ldr	x2, [x0, #640]
    4b44:	str	x2, [x1]
    4b48:	ldr	x1, [x23]
    4b4c:	str	x1, [x0, #640]
    4b50:	ldr	x0, [sp, #104]
    4b54:	bl	2410 <lt__set_last_error@plt>
    4b58:	mov	x28, x21
    4b5c:	mov	w19, #0x0                   	// #0
    4b60:	ldr	x0, [sp, #192]
    4b64:	bl	2400 <free@plt>
    4b68:	mov	x0, x25
    4b6c:	bl	2400 <free@plt>
    4b70:	mov	x0, x24
    4b74:	bl	2400 <free@plt>
    4b78:	ldr	x0, [sp, #200]
    4b7c:	cbz	x0, 52ac <lt_dlexit@@Base+0xcc0>
    4b80:	ldr	x0, [sp, #200]
    4b84:	bl	2400 <free@plt>
    4b88:	mov	x0, x28
    4b8c:	bl	2400 <free@plt>
    4b90:	mov	w0, w19
    4b94:	ldp	x19, x20, [sp, #16]
    4b98:	ldp	x21, x22, [sp, #32]
    4b9c:	ldp	x23, x24, [sp, #48]
    4ba0:	ldp	x25, x26, [sp, #64]
    4ba4:	ldp	x27, x28, [sp, #80]
    4ba8:	ldp	x29, x30, [sp], #208
    4bac:	ret
    4bb0:	ldr	x0, [x23]
    4bb4:	bl	2400 <free@plt>
    4bb8:	str	xzr, [x23]
    4bbc:	b	4b90 <lt_dlexit@@Base+0x5a4>
    4bc0:	adrp	x3, 6000 <lt__slist_sort@@Base+0x74>
    4bc4:	add	x3, x3, #0xbb0
    4bc8:	add	x3, x3, #0x160
    4bcc:	mov	w2, #0x4b4                 	// #1204
    4bd0:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    4bd4:	add	x1, x1, #0x8d8
    4bd8:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    4bdc:	add	x0, x0, #0x940
    4be0:	bl	2500 <__assert_fail@plt>
    4be4:	mov	x0, x21
    4be8:	bl	2180 <lt__strdup@plt>
    4bec:	mov	x25, x0
    4bf0:	cbnz	x0, 48d8 <lt_dlexit@@Base+0x2ec>
    4bf4:	mov	w19, #0x1                   	// #1
    4bf8:	b	4b90 <lt_dlexit@@Base+0x5a4>
    4bfc:	str	xzr, [sp, #200]
    4c00:	mov	x26, x21
    4c04:	b	4934 <lt_dlexit@@Base+0x348>
    4c08:	adrp	x3, 6000 <lt__slist_sort@@Base+0x74>
    4c0c:	add	x3, x3, #0xbb0
    4c10:	add	x3, x3, #0x160
    4c14:	mov	w2, #0x4e3                 	// #1251
    4c18:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    4c1c:	add	x1, x1, #0x8d8
    4c20:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    4c24:	add	x0, x0, #0xaf8
    4c28:	bl	2500 <__assert_fail@plt>
    4c2c:	mov	x0, x26
    4c30:	bl	2150 <strlen@plt>
    4c34:	add	x20, x26, x0
    4c38:	b	4950 <lt_dlexit@@Base+0x364>
    4c3c:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    4c40:	add	x0, x0, #0x470
    4c44:	bl	2560 <lt_dlloader_find@plt>
    4c48:	mov	x21, x0
    4c4c:	cbz	x0, 49b4 <lt_dlexit@@Base+0x3c8>
    4c50:	ldrb	w1, [x24]
    4c54:	mov	x0, #0x6                   	// #6
    4c58:	cbz	w1, 4c68 <lt_dlexit@@Base+0x67c>
    4c5c:	mov	x0, x24
    4c60:	bl	2150 <strlen@plt>
    4c64:	add	x0, x0, #0x6
    4c68:	bl	2370 <lt__malloc@plt>
    4c6c:	mov	x22, x0
    4c70:	mov	x0, #0x58                  	// #88
    4c74:	bl	2420 <lt__zalloc@plt>
    4c78:	str	x0, [x23]
    4c7c:	cmp	x0, #0x0
    4c80:	ccmp	x22, #0x0, #0x4, ne  // ne = any
    4c84:	b.eq	528c <lt_dlexit@@Base+0xca0>  // b.none
    4c88:	str	x0, [sp, #184]
    4c8c:	mov	x2, #0x3                   	// #3
    4c90:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    4c94:	add	x1, x1, #0xb10
    4c98:	mov	x0, x24
    4c9c:	bl	2270 <strncmp@plt>
    4ca0:	cbnz	w0, 4cf8 <lt_dlexit@@Base+0x70c>
    4ca4:	adrp	x2, 6000 <lt__slist_sort@@Base+0x74>
    4ca8:	add	x2, x2, #0xbb0
    4cac:	add	x4, x2, #0x170
    4cb0:	add	x3, x24, #0x3
    4cb4:	add	x2, x2, #0x178
    4cb8:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    4cbc:	add	x1, x1, #0xb18
    4cc0:	mov	x0, x22
    4cc4:	bl	21b0 <sprintf@plt>
    4cc8:	mov	x3, x21
    4ccc:	ldr	x2, [sp, #96]
    4cd0:	mov	x1, x22
    4cd4:	add	x0, sp, #0xb8
    4cd8:	bl	327c <lt__alloc_die_callback@@Base+0x1c0>
    4cdc:	mov	x21, x22
    4ce0:	cbz	w0, 4ae4 <lt_dlexit@@Base+0x4f8>
    4ce4:	ldr	x0, [x23]
    4ce8:	bl	2400 <free@plt>
    4cec:	str	xzr, [x23]
    4cf0:	str	xzr, [sp, #184]
    4cf4:	b	49b4 <lt_dlexit@@Base+0x3c8>
    4cf8:	adrp	x3, 6000 <lt__slist_sort@@Base+0x74>
    4cfc:	add	x3, x3, #0xbb0
    4d00:	add	x3, x3, #0x170
    4d04:	mov	x2, x24
    4d08:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    4d0c:	add	x1, x1, #0xb20
    4d10:	mov	x0, x22
    4d14:	bl	21b0 <sprintf@plt>
    4d18:	b	4cc8 <lt_dlexit@@Base+0x6dc>
    4d1c:	adrp	x0, 19000 <lt_dlinterface_free@@Base+0x13680>
    4d20:	ldr	x0, [x0, #656]
    4d24:	cbz	x0, 4d3c <lt_dlexit@@Base+0x750>
    4d28:	add	x2, sp, #0xc0
    4d2c:	mov	x1, x26
    4d30:	bl	39c4 <lt__alloc_die_callback@@Base+0x908>
    4d34:	mov	x27, x0
    4d38:	cbnz	x0, 4a14 <lt_dlexit@@Base+0x428>
    4d3c:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    4d40:	add	x0, x0, #0xab0
    4d44:	bl	2510 <getenv@plt>
    4d48:	cbz	x0, 4d60 <lt_dlexit@@Base+0x774>
    4d4c:	add	x2, sp, #0xc0
    4d50:	mov	x1, x26
    4d54:	bl	39c4 <lt__alloc_die_callback@@Base+0x908>
    4d58:	mov	x27, x0
    4d5c:	cbnz	x0, 4a14 <lt_dlexit@@Base+0x428>
    4d60:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    4d64:	add	x0, x0, #0xac8
    4d68:	bl	2510 <getenv@plt>
    4d6c:	cbz	x0, 4d84 <lt_dlexit@@Base+0x798>
    4d70:	add	x2, sp, #0xc0
    4d74:	mov	x1, x26
    4d78:	bl	39c4 <lt__alloc_die_callback@@Base+0x908>
    4d7c:	mov	x27, x0
    4d80:	cbnz	x0, 4a14 <lt_dlexit@@Base+0x428>
    4d84:	add	x2, sp, #0xc0
    4d88:	mov	x1, x26
    4d8c:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    4d90:	add	x0, x0, #0xbb0
    4d94:	add	x0, x0, #0x138
    4d98:	bl	39c4 <lt__alloc_die_callback@@Base+0x908>
    4d9c:	mov	x27, x0
    4da0:	b	4a10 <lt_dlexit@@Base+0x424>
    4da4:	mov	w0, #0x5                   	// #5
    4da8:	bl	22a0 <lt__error_string@plt>
    4dac:	bl	2410 <lt__set_last_error@plt>
    4db0:	mov	w19, #0x1                   	// #1
    4db4:	mov	x28, x21
    4db8:	b	4b60 <lt_dlexit@@Base+0x574>
    4dbc:	mov	w0, #0x5                   	// #5
    4dc0:	bl	22a0 <lt__error_string@plt>
    4dc4:	bl	2410 <lt__set_last_error@plt>
    4dc8:	mov	x0, x27
    4dcc:	bl	2200 <fclose@plt>
    4dd0:	mov	x0, #0x58                  	// #88
    4dd4:	bl	2420 <lt__zalloc@plt>
    4dd8:	str	x0, [x23]
    4ddc:	mov	w19, #0x1                   	// #1
    4de0:	cbnz	x0, 4de8 <lt_dlexit@@Base+0x7fc>
    4de4:	add	w19, w19, #0x1
    4de8:	ldr	x0, [sp, #152]
    4dec:	bl	2400 <free@plt>
    4df0:	ldr	x0, [sp, #160]
    4df4:	bl	2400 <free@plt>
    4df8:	ldr	x0, [sp, #168]
    4dfc:	bl	2400 <free@plt>
    4e00:	ldr	x0, [sp, #176]
    4e04:	bl	2400 <free@plt>
    4e08:	ldr	x0, [x23]
    4e0c:	bl	2400 <free@plt>
    4e10:	str	xzr, [x23]
    4e14:	b	4db4 <lt_dlexit@@Base+0x7c8>
    4e18:	ldrb	w0, [x19]
    4e1c:	cmp	w0, #0x23
    4e20:	ccmp	w0, #0xa, #0x4, ne  // ne = any
    4e24:	b.eq	4f24 <lt_dlexit@@Base+0x938>  // b.none
    4e28:	mov	x2, #0x7                   	// #7
    4e2c:	ldr	x1, [sp, #112]
    4e30:	mov	x0, x19
    4e34:	bl	2270 <strncmp@plt>
    4e38:	cbz	w0, 4f14 <lt_dlexit@@Base+0x928>
    4e3c:	mov	x2, #0xc                   	// #12
    4e40:	ldr	x1, [sp, #120]
    4e44:	mov	x0, x19
    4e48:	bl	2270 <strncmp@plt>
    4e4c:	cbz	w0, 4fb0 <lt_dlexit@@Base+0x9c4>
    4e50:	mov	x2, #0x7                   	// #7
    4e54:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    4e58:	add	x1, x1, #0xb40
    4e5c:	mov	x0, x19
    4e60:	bl	2270 <strncmp@plt>
    4e64:	cbz	w0, 4fc0 <lt_dlexit@@Base+0x9d4>
    4e68:	mov	x2, #0x10                  	// #16
    4e6c:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    4e70:	add	x1, x1, #0xb48
    4e74:	mov	x0, x19
    4e78:	bl	2270 <strncmp@plt>
    4e7c:	cbz	w0, 4fd0 <lt_dlexit@@Base+0x9e4>
    4e80:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    4e84:	add	x1, x1, #0xb60
    4e88:	mov	x0, x19
    4e8c:	bl	23e0 <strcmp@plt>
    4e90:	cbz	w0, 52c0 <lt_dlexit@@Base+0xcd4>
    4e94:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    4e98:	add	x1, x1, #0xb70
    4e9c:	mov	x0, x19
    4ea0:	bl	23e0 <strcmp@plt>
    4ea4:	cbz	w0, 52cc <lt_dlexit@@Base+0xce0>
    4ea8:	ldr	x0, [sp, #152]
    4eac:	cbnz	x0, 4f24 <lt_dlexit@@Base+0x938>
    4eb0:	mov	x2, #0xe                   	// #14
    4eb4:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    4eb8:	add	x1, x1, #0xb80
    4ebc:	mov	x0, x19
    4ec0:	bl	2270 <strncmp@plt>
    4ec4:	cbnz	w0, 4f24 <lt_dlexit@@Base+0x938>
    4ec8:	add	x1, x19, #0xe
    4ecc:	ldr	x0, [sp, #136]
    4ed0:	bl	3a38 <lt__alloc_die_callback@@Base+0x97c>
    4ed4:	cbnz	w0, 50ec <lt_dlexit@@Base+0xb00>
    4ed8:	ldr	x0, [sp, #152]
    4edc:	cbz	x0, 4f24 <lt_dlexit@@Base+0x938>
    4ee0:	mov	w1, #0x20                  	// #32
    4ee4:	bl	2340 <strrchr@plt>
    4ee8:	cbz	x0, 4f24 <lt_dlexit@@Base+0x938>
    4eec:	add	x0, x0, #0x1
    4ef0:	bl	2180 <lt__strdup@plt>
    4ef4:	mov	x22, x0
    4ef8:	cbz	x0, 50f4 <lt_dlexit@@Base+0xb08>
    4efc:	ldr	x0, [sp, #152]
    4f00:	cmp	x22, x0
    4f04:	b.eq	4f24 <lt_dlexit@@Base+0x938>  // b.none
    4f08:	bl	2400 <free@plt>
    4f0c:	str	x22, [sp, #152]
    4f10:	b	4f24 <lt_dlexit@@Base+0x938>
    4f14:	add	x1, x19, #0x7
    4f18:	ldr	x0, [sp, #136]
    4f1c:	bl	3a38 <lt__alloc_die_callback@@Base+0x97c>
    4f20:	cbnz	w0, 5100 <lt_dlexit@@Base+0xb14>
    4f24:	mov	x0, x27
    4f28:	bl	23d0 <feof@plt>
    4f2c:	mov	w22, w0
    4f30:	cbnz	w0, 4ff0 <lt_dlexit@@Base+0xa04>
    4f34:	add	x0, x19, x20
    4f38:	sturb	wzr, [x0, #-2]
    4f3c:	mov	x2, x27
    4f40:	mov	w1, w20
    4f44:	mov	x0, x19
    4f48:	bl	2530 <fgets@plt>
    4f4c:	cbz	x0, 4fe0 <lt_dlexit@@Base+0x9f4>
    4f50:	add	x0, x19, x20
    4f54:	ldurb	w0, [x0, #-2]
    4f58:	cmp	w0, #0x0
    4f5c:	ccmp	w0, #0xa, #0x4, ne  // ne = any
    4f60:	b.eq	4e18 <lt_dlexit@@Base+0x82c>  // b.none
    4f64:	mov	x0, x27
    4f68:	bl	23d0 <feof@plt>
    4f6c:	cbnz	w0, 4e18 <lt_dlexit@@Base+0x82c>
    4f70:	lsl	x22, x20, #1
    4f74:	mov	x1, x22
    4f78:	mov	x0, x19
    4f7c:	bl	24d0 <lt__realloc@plt>
    4f80:	mov	x19, x0
    4f84:	cbz	x0, 4fe8 <lt_dlexit@@Base+0x9fc>
    4f88:	add	x0, x0, x22
    4f8c:	sturb	wzr, [x0, #-2]
    4f90:	sub	x0, x20, #0x1
    4f94:	mov	x2, x27
    4f98:	add	w1, w20, #0x1
    4f9c:	add	x0, x19, x0
    4fa0:	bl	2530 <fgets@plt>
    4fa4:	cbz	x0, 4e18 <lt_dlexit@@Base+0x82c>
    4fa8:	mov	x20, x22
    4fac:	b	4f50 <lt_dlexit@@Base+0x964>
    4fb0:	add	x1, x19, #0xc
    4fb4:	add	x0, sp, #0xa0
    4fb8:	bl	3a38 <lt__alloc_die_callback@@Base+0x97c>
    4fbc:	b	4f20 <lt_dlexit@@Base+0x934>
    4fc0:	add	x1, x19, #0x7
    4fc4:	add	x0, sp, #0xa8
    4fc8:	bl	3a38 <lt__alloc_die_callback@@Base+0x97c>
    4fcc:	b	4f20 <lt_dlexit@@Base+0x934>
    4fd0:	add	x1, x19, #0x10
    4fd4:	add	x0, sp, #0xb0
    4fd8:	bl	3a38 <lt__alloc_die_callback@@Base+0x97c>
    4fdc:	b	4f20 <lt_dlexit@@Base+0x934>
    4fe0:	str	w22, [sp, #128]
    4fe4:	b	4ff0 <lt_dlexit@@Base+0xa04>
    4fe8:	mov	w0, #0x1                   	// #1
    4fec:	str	w0, [sp, #128]
    4ff0:	mov	x0, x19
    4ff4:	bl	2400 <free@plt>
    4ff8:	ldr	w0, [sp, #128]
    4ffc:	cmp	w0, #0x0
    5000:	cset	w19, ne  // ne = any
    5004:	mov	x0, x27
    5008:	bl	2200 <fclose@plt>
    500c:	mov	x0, #0x58                  	// #88
    5010:	bl	2420 <lt__zalloc@plt>
    5014:	str	x0, [x23]
    5018:	cbz	x0, 4de4 <lt_dlexit@@Base+0x7f8>
    501c:	ldr	w1, [sp, #128]
    5020:	cbnz	w1, 4de8 <lt_dlexit@@Base+0x7fc>
    5024:	str	wzr, [x0, #40]
    5028:	ldr	x0, [x23]
    502c:	str	x0, [sp, #184]
    5030:	ldr	x22, [sp, #192]
    5034:	ldr	x27, [sp, #168]
    5038:	ldr	x20, [sp, #152]
    503c:	ldr	x19, [sp, #160]
    5040:	cbz	x19, 5068 <lt_dlexit@@Base+0xa7c>
    5044:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    5048:	add	x0, x0, #0x470
    504c:	bl	2560 <lt_dlloader_find@plt>
    5050:	mov	x3, x0
    5054:	ldr	x2, [sp, #96]
    5058:	mov	x1, x19
    505c:	add	x0, sp, #0xb8
    5060:	bl	327c <lt__alloc_die_callback@@Base+0x1c0>
    5064:	cbz	w0, 50a4 <lt_dlexit@@Base+0xab8>
    5068:	cbz	x20, 5150 <lt_dlexit@@Base+0xb64>
    506c:	ldr	w0, [sp, #132]
    5070:	cmp	w0, #0x0
    5074:	ccmp	x27, #0x0, #0x4, ne  // ne = any
    5078:	b.ne	5108 <lt_dlexit@@Base+0xb1c>  // b.any
    507c:	ldr	w0, [sp, #132]
    5080:	cbz	w0, 5128 <lt_dlexit@@Base+0xb3c>
    5084:	cbz	x22, 5150 <lt_dlexit@@Base+0xb64>
    5088:	ldr	x4, [sp, #96]
    508c:	mov	x3, x20
    5090:	mov	x2, x22
    5094:	mov	x1, #0x0                   	// #0
    5098:	add	x0, sp, #0xb8
    509c:	bl	3434 <lt__alloc_die_callback@@Base+0x378>
    50a0:	cbnz	w0, 5150 <lt_dlexit@@Base+0xb64>
    50a4:	ldr	x0, [sp, #152]
    50a8:	bl	2400 <free@plt>
    50ac:	str	xzr, [sp, #152]
    50b0:	ldr	x0, [sp, #160]
    50b4:	bl	2400 <free@plt>
    50b8:	str	xzr, [sp, #160]
    50bc:	ldr	x0, [sp, #168]
    50c0:	bl	2400 <free@plt>
    50c4:	str	xzr, [sp, #168]
    50c8:	ldr	x0, [sp, #176]
    50cc:	bl	2400 <free@plt>
    50d0:	str	xzr, [sp, #176]
    50d4:	ldr	x0, [x23]
    50d8:	ldr	x1, [sp, #184]
    50dc:	cmp	x0, x1
    50e0:	b.eq	4ae4 <lt_dlexit@@Base+0x4f8>  // b.none
    50e4:	bl	47b8 <lt_dlexit@@Base+0x1cc>
    50e8:	b	4ae4 <lt_dlexit@@Base+0x4f8>
    50ec:	str	w0, [sp, #128]
    50f0:	b	4ff0 <lt_dlexit@@Base+0xa04>
    50f4:	mov	w0, #0x1                   	// #1
    50f8:	str	w0, [sp, #128]
    50fc:	b	4ff0 <lt_dlexit@@Base+0xa04>
    5100:	str	w0, [sp, #128]
    5104:	b	4ff0 <lt_dlexit@@Base+0xa04>
    5108:	ldr	x4, [sp, #96]
    510c:	mov	x3, x20
    5110:	mov	x2, x27
    5114:	mov	x1, #0x0                   	// #0
    5118:	add	x0, sp, #0xb8
    511c:	bl	3434 <lt__alloc_die_callback@@Base+0x378>
    5120:	cbnz	w0, 5084 <lt_dlexit@@Base+0xa98>
    5124:	b	50a4 <lt_dlexit@@Base+0xab8>
    5128:	ldr	x4, [sp, #96]
    512c:	mov	x3, x20
    5130:	adrp	x2, 6000 <lt__slist_sort@@Base+0x74>
    5134:	add	x2, x2, #0xbb0
    5138:	add	x2, x2, #0x188
    513c:	mov	x1, x22
    5140:	add	x0, sp, #0xb8
    5144:	bl	3434 <lt__alloc_die_callback@@Base+0x378>
    5148:	cbnz	w0, 5084 <lt_dlexit@@Base+0xa98>
    514c:	b	50a4 <lt_dlexit@@Base+0xab8>
    5150:	ldr	x0, [x23]
    5154:	bl	47b8 <lt_dlexit@@Base+0x1cc>
    5158:	ldr	x0, [sp, #152]
    515c:	bl	2400 <free@plt>
    5160:	ldr	x0, [sp, #160]
    5164:	bl	2400 <free@plt>
    5168:	ldr	x0, [sp, #168]
    516c:	bl	2400 <free@plt>
    5170:	ldr	x0, [sp, #176]
    5174:	bl	2400 <free@plt>
    5178:	ldr	x0, [x23]
    517c:	bl	2400 <free@plt>
    5180:	str	xzr, [x23]
    5184:	mov	w19, #0x1                   	// #1
    5188:	b	4db4 <lt_dlexit@@Base+0x7c8>
    518c:	mov	x0, #0x58                  	// #88
    5190:	bl	2420 <lt__zalloc@plt>
    5194:	str	x0, [x23]
    5198:	cbz	x0, 52a0 <lt_dlexit@@Base+0xcb4>
    519c:	str	x0, [sp, #184]
    51a0:	ldr	x0, [sp, #192]
    51a4:	cbz	x0, 51e0 <lt_dlexit@@Base+0xbf4>
    51a8:	mov	x3, #0x0                   	// #0
    51ac:	ldr	x2, [sp, #96]
    51b0:	mov	x1, x25
    51b4:	add	x0, sp, #0xb8
    51b8:	bl	327c <lt__alloc_die_callback@@Base+0x1c0>
    51bc:	cbnz	w0, 51c8 <lt_dlexit@@Base+0xbdc>
    51c0:	ldr	x0, [sp, #184]
    51c4:	cbnz	x0, 4ae4 <lt_dlexit@@Base+0x4f8>
    51c8:	ldr	x0, [x23]
    51cc:	bl	2400 <free@plt>
    51d0:	str	xzr, [x23]
    51d4:	mov	x28, x21
    51d8:	mov	w19, #0x1                   	// #1
    51dc:	b	4b60 <lt_dlexit@@Base+0x574>
    51e0:	ldr	x3, [sp, #96]
    51e4:	add	x2, sp, #0xb8
    51e8:	mov	x1, x26
    51ec:	adrp	x0, 19000 <lt_dlinterface_free@@Base+0x13680>
    51f0:	ldr	x0, [x0, #656]
    51f4:	bl	39f0 <lt__alloc_die_callback@@Base+0x934>
    51f8:	cbnz	x0, 51c0 <lt_dlexit@@Base+0xbd4>
    51fc:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    5200:	add	x0, x0, #0xab0
    5204:	bl	2510 <getenv@plt>
    5208:	ldr	x3, [sp, #96]
    520c:	add	x2, sp, #0xb8
    5210:	mov	x1, x26
    5214:	bl	39f0 <lt__alloc_die_callback@@Base+0x934>
    5218:	cbnz	x0, 51c0 <lt_dlexit@@Base+0xbd4>
    521c:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    5220:	add	x0, x0, #0xac8
    5224:	bl	2510 <getenv@plt>
    5228:	ldr	x3, [sp, #96]
    522c:	add	x2, sp, #0xb8
    5230:	mov	x1, x26
    5234:	bl	39f0 <lt__alloc_die_callback@@Base+0x934>
    5238:	cbnz	x0, 51c0 <lt_dlexit@@Base+0xbd4>
    523c:	ldr	x3, [sp, #96]
    5240:	add	x2, sp, #0xb8
    5244:	mov	x1, x26
    5248:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    524c:	add	x0, x0, #0xbb0
    5250:	add	x0, x0, #0x138
    5254:	bl	39f0 <lt__alloc_die_callback@@Base+0x934>
    5258:	cbnz	x0, 51c0 <lt_dlexit@@Base+0xbd4>
    525c:	b	51a8 <lt_dlexit@@Base+0xbbc>
    5260:	mov	x24, x28
    5264:	mov	x26, x28
    5268:	mov	w19, #0x1                   	// #1
    526c:	b	4b60 <lt_dlexit@@Base+0x574>
    5270:	mov	x26, x20
    5274:	mov	x28, x0
    5278:	mov	w19, #0x1                   	// #1
    527c:	b	4b60 <lt_dlexit@@Base+0x574>
    5280:	mov	x28, x0
    5284:	mov	w19, #0x1                   	// #1
    5288:	b	4b60 <lt_dlexit@@Base+0x574>
    528c:	mov	x28, x22
    5290:	mov	w19, #0x1                   	// #1
    5294:	b	4b60 <lt_dlexit@@Base+0x574>
    5298:	mov	x28, x21
    529c:	b	4b60 <lt_dlexit@@Base+0x574>
    52a0:	mov	x28, x21
    52a4:	mov	w19, #0x1                   	// #1
    52a8:	b	4b60 <lt_dlexit@@Base+0x574>
    52ac:	mov	x0, x26
    52b0:	bl	2400 <free@plt>
    52b4:	b	4b80 <lt_dlexit@@Base+0x594>
    52b8:	mov	w19, #0x1                   	// #1
    52bc:	b	4b90 <lt_dlexit@@Base+0x5a4>
    52c0:	mov	w0, #0x1                   	// #1
    52c4:	str	w0, [sp, #132]
    52c8:	b	4f24 <lt_dlexit@@Base+0x938>
    52cc:	str	w0, [sp, #132]
    52d0:	b	4f24 <lt_dlexit@@Base+0x938>

00000000000052d4 <lt_dlopenadvise@@Base>:
    52d4:	stp	x29, x30, [sp, #-64]!
    52d8:	mov	x29, sp
    52dc:	stp	x19, x20, [sp, #16]
    52e0:	stp	x21, x22, [sp, #32]
    52e4:	mov	x21, x0
    52e8:	mov	x19, x1
    52ec:	str	xzr, [sp, #56]
    52f0:	bl	2190 <lt__get_last_error@plt>
    52f4:	cbz	x19, 5314 <lt_dlopenadvise@@Base+0x40>
    52f8:	mov	x20, x0
    52fc:	ldrb	w1, [x19]
    5300:	and	w0, w1, #0xc
    5304:	cmp	w0, #0xc
    5308:	b.eq	5344 <lt_dlopenadvise@@Base+0x70>  // b.none
    530c:	cbz	x21, 5314 <lt_dlopenadvise@@Base+0x40>
    5310:	tbnz	w1, #0, 5358 <lt_dlopenadvise@@Base+0x84>
    5314:	mov	x3, x19
    5318:	mov	x2, #0x0                   	// #0
    531c:	mov	x1, x21
    5320:	add	x0, sp, #0x38
    5324:	bl	4838 <lt_dlexit@@Base+0x24c>
    5328:	cmp	w0, #0x0
    532c:	ldr	x0, [sp, #56]
    5330:	csel	x0, x0, xzr, eq  // eq = none
    5334:	ldp	x19, x20, [sp, #16]
    5338:	ldp	x21, x22, [sp, #32]
    533c:	ldp	x29, x30, [sp], #64
    5340:	ret
    5344:	mov	w0, #0x13                  	// #19
    5348:	bl	22a0 <lt__error_string@plt>
    534c:	bl	2410 <lt__set_last_error@plt>
    5350:	mov	x0, #0x0                   	// #0
    5354:	b	5334 <lt_dlopenadvise@@Base+0x60>
    5358:	mov	w1, #0x2e                  	// #46
    535c:	mov	x0, x21
    5360:	bl	2340 <strrchr@plt>
    5364:	mov	x22, x0
    5368:	cbz	x0, 5398 <lt_dlopenadvise@@Base+0xc4>
    536c:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    5370:	add	x1, x1, #0xbb0
    5374:	add	x1, x1, #0x180
    5378:	bl	23e0 <strcmp@plt>
    537c:	cbz	w0, 5314 <lt_dlopenadvise@@Base+0x40>
    5380:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    5384:	add	x1, x1, #0xbb0
    5388:	add	x1, x1, #0x190
    538c:	mov	x0, x22
    5390:	bl	23e0 <strcmp@plt>
    5394:	cbz	w0, 5314 <lt_dlopenadvise@@Base+0x40>
    5398:	ldrb	w0, [x21]
    539c:	cbz	w0, 5440 <lt_dlopenadvise@@Base+0x16c>
    53a0:	mov	x3, x19
    53a4:	adrp	x2, 6000 <lt__slist_sort@@Base+0x74>
    53a8:	add	x2, x2, #0xbb0
    53ac:	add	x2, x2, #0x180
    53b0:	mov	x1, x21
    53b4:	add	x0, sp, #0x38
    53b8:	bl	4838 <lt_dlexit@@Base+0x24c>
    53bc:	ldr	x1, [sp, #56]
    53c0:	cbz	x1, 53cc <lt_dlopenadvise@@Base+0xf8>
    53c4:	ldr	x0, [sp, #56]
    53c8:	b	5334 <lt_dlopenadvise@@Base+0x60>
    53cc:	cmp	w0, #0x0
    53d0:	b.le	53ec <lt_dlopenadvise@@Base+0x118>
    53d4:	bl	2190 <lt__get_last_error@plt>
    53d8:	mov	x22, x0
    53dc:	mov	w0, #0x5                   	// #5
    53e0:	bl	22a0 <lt__error_string@plt>
    53e4:	cmp	x22, x0
    53e8:	b.ne	53c4 <lt_dlopenadvise@@Base+0xf0>  // b.any
    53ec:	mov	x0, x20
    53f0:	bl	2410 <lt__set_last_error@plt>
    53f4:	mov	x3, x19
    53f8:	adrp	x2, 6000 <lt__slist_sort@@Base+0x74>
    53fc:	add	x2, x2, #0xbb0
    5400:	add	x2, x2, #0x190
    5404:	mov	x1, x21
    5408:	add	x0, sp, #0x38
    540c:	bl	4838 <lt_dlexit@@Base+0x24c>
    5410:	ldr	x1, [sp, #56]
    5414:	cbz	x1, 5420 <lt_dlopenadvise@@Base+0x14c>
    5418:	ldr	x0, [sp, #56]
    541c:	b	5334 <lt_dlopenadvise@@Base+0x60>
    5420:	cmp	w0, #0x0
    5424:	b.le	5440 <lt_dlopenadvise@@Base+0x16c>
    5428:	bl	2190 <lt__get_last_error@plt>
    542c:	mov	x19, x0
    5430:	mov	w0, #0x5                   	// #5
    5434:	bl	22a0 <lt__error_string@plt>
    5438:	cmp	x19, x0
    543c:	b.ne	5418 <lt_dlopenadvise@@Base+0x144>  // b.any
    5440:	mov	w0, #0x5                   	// #5
    5444:	bl	22a0 <lt__error_string@plt>
    5448:	bl	2410 <lt__set_last_error@plt>
    544c:	mov	x0, #0x0                   	// #0
    5450:	b	5334 <lt_dlopenadvise@@Base+0x60>

0000000000005454 <lt_dlopen@@Base>:
    5454:	stp	x29, x30, [sp, #-16]!
    5458:	mov	x29, sp
    545c:	mov	x1, #0x0                   	// #0
    5460:	bl	2540 <lt_dlopenadvise@plt>
    5464:	ldp	x29, x30, [sp], #16
    5468:	ret

000000000000546c <lt_dlopenext@@Base>:
    546c:	stp	x29, x30, [sp, #-48]!
    5470:	mov	x29, sp
    5474:	stp	x19, x20, [sp, #16]
    5478:	mov	x19, x0
    547c:	add	x0, sp, #0x28
    5480:	bl	21f0 <lt_dladvise_init@plt>
    5484:	mov	x20, #0x0                   	// #0
    5488:	cbnz	w0, 54ac <lt_dlopenext@@Base+0x40>
    548c:	add	x0, sp, #0x28
    5490:	bl	22b0 <lt_dladvise_ext@plt>
    5494:	mov	x20, #0x0                   	// #0
    5498:	cbnz	w0, 54ac <lt_dlopenext@@Base+0x40>
    549c:	ldr	x1, [sp, #40]
    54a0:	mov	x0, x19
    54a4:	bl	2540 <lt_dlopenadvise@plt>
    54a8:	mov	x20, x0
    54ac:	add	x0, sp, #0x28
    54b0:	bl	22c0 <lt_dladvise_destroy@plt>
    54b4:	mov	x0, x20
    54b8:	ldp	x19, x20, [sp, #16]
    54bc:	ldp	x29, x30, [sp], #48
    54c0:	ret

00000000000054c4 <lt_dlsym@@Base>:
    54c4:	stp	x29, x30, [sp, #-192]!
    54c8:	mov	x29, sp
    54cc:	stp	x19, x20, [sp, #16]
    54d0:	stp	x21, x22, [sp, #32]
    54d4:	mov	x19, x0
    54d8:	cbz	x0, 55ec <lt_dlsym@@Base+0x128>
    54dc:	mov	x21, x1
    54e0:	cbz	x1, 5600 <lt_dlsym@@Base+0x13c>
    54e4:	stp	x23, x24, [sp, #48]
    54e8:	ldrb	w0, [x1]
    54ec:	mov	x20, #0x0                   	// #0
    54f0:	cbz	w0, 5500 <lt_dlsym@@Base+0x3c>
    54f4:	mov	x0, x1
    54f8:	bl	2150 <strlen@plt>
    54fc:	mov	x20, x0
    5500:	ldr	x22, [x19, #8]
    5504:	ldr	x0, [x22, #8]
    5508:	mov	x1, #0x0                   	// #0
    550c:	cbz	x0, 5520 <lt_dlsym@@Base+0x5c>
    5510:	ldrb	w2, [x0]
    5514:	cbz	w2, 5520 <lt_dlsym@@Base+0x5c>
    5518:	bl	2150 <strlen@plt>
    551c:	mov	x1, x0
    5520:	add	x20, x20, x1
    5524:	ldr	x0, [x19, #24]
    5528:	cbz	x0, 56e0 <lt_dlsym@@Base+0x21c>
    552c:	ldrb	w2, [x0]
    5530:	mov	x1, #0x0                   	// #0
    5534:	cbz	w2, 5540 <lt_dlsym@@Base+0x7c>
    5538:	bl	2150 <strlen@plt>
    553c:	mov	x1, x0
    5540:	add	x20, x20, x1
    5544:	add	x0, x20, #0x5
    5548:	cmp	x0, #0x7f
    554c:	b.hi	5614 <lt_dlsym@@Base+0x150>  // b.pmore
    5550:	ldr	x23, [x22, #56]
    5554:	add	x20, sp, #0x40
    5558:	bl	2190 <lt__get_last_error@plt>
    555c:	mov	x24, x0
    5560:	ldr	x0, [x19, #8]
    5564:	ldr	x1, [x0, #8]
    5568:	cbz	x1, 56b4 <lt_dlsym@@Base+0x1f0>
    556c:	mov	x0, x20
    5570:	bl	2460 <strcpy@plt>
    5574:	ldr	x1, [x19, #24]
    5578:	mov	x0, x20
    557c:	bl	2280 <strcat@plt>
    5580:	mov	x0, x20
    5584:	bl	2150 <strlen@plt>
    5588:	add	x2, x20, x0
    558c:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    5590:	add	x1, x1, #0xb90
    5594:	ldr	w3, [x1]
    5598:	str	w3, [x20, x0]
    559c:	ldrh	w0, [x1, #4]
    55a0:	strh	w0, [x2, #4]
    55a4:	mov	x1, x21
    55a8:	mov	x0, x20
    55ac:	bl	2280 <strcat@plt>
    55b0:	ldr	x0, [x19, #8]
    55b4:	ldr	x3, [x0, #32]
    55b8:	mov	x2, x20
    55bc:	ldr	x1, [x19, #56]
    55c0:	mov	x0, x23
    55c4:	blr	x3
    55c8:	mov	x22, x0
    55cc:	cbz	x0, 56c4 <lt_dlsym@@Base+0x200>
    55d0:	add	x0, sp, #0x40
    55d4:	cmp	x20, x0
    55d8:	b.eq	56f8 <lt_dlsym@@Base+0x234>  // b.none
    55dc:	mov	x0, x20
    55e0:	bl	2400 <free@plt>
    55e4:	ldp	x23, x24, [sp, #48]
    55e8:	b	5688 <lt_dlsym@@Base+0x1c4>
    55ec:	mov	w0, #0xc                   	// #12
    55f0:	bl	22a0 <lt__error_string@plt>
    55f4:	bl	2410 <lt__set_last_error@plt>
    55f8:	mov	x22, x19
    55fc:	b	5688 <lt_dlsym@@Base+0x1c4>
    5600:	mov	w0, #0xa                   	// #10
    5604:	bl	22a0 <lt__error_string@plt>
    5608:	bl	2410 <lt__set_last_error@plt>
    560c:	mov	x22, x21
    5610:	b	5688 <lt_dlsym@@Base+0x1c4>
    5614:	add	x0, x20, #0x6
    5618:	bl	2370 <lt__malloc@plt>
    561c:	mov	x20, x0
    5620:	cbz	x0, 569c <lt_dlsym@@Base+0x1d8>
    5624:	ldr	x0, [x19, #8]
    5628:	ldr	x23, [x0, #56]
    562c:	ldr	x0, [x19, #24]
    5630:	cbnz	x0, 5558 <lt_dlsym@@Base+0x94>
    5634:	ldr	x0, [x19, #8]
    5638:	ldr	x1, [x0, #8]
    563c:	cbz	x1, 56d0 <lt_dlsym@@Base+0x20c>
    5640:	mov	x0, x20
    5644:	bl	2460 <strcpy@plt>
    5648:	mov	x1, x21
    564c:	mov	x0, x20
    5650:	bl	2280 <strcat@plt>
    5654:	ldr	x0, [x19, #8]
    5658:	ldr	x3, [x0, #32]
    565c:	mov	x2, x20
    5660:	ldr	x1, [x19, #56]
    5664:	mov	x0, x23
    5668:	blr	x3
    566c:	mov	x22, x0
    5670:	add	x0, sp, #0x40
    5674:	cmp	x20, x0
    5678:	b.eq	5700 <lt_dlsym@@Base+0x23c>  // b.none
    567c:	mov	x0, x20
    5680:	bl	2400 <free@plt>
    5684:	ldp	x23, x24, [sp, #48]
    5688:	mov	x0, x22
    568c:	ldp	x19, x20, [sp, #16]
    5690:	ldp	x21, x22, [sp, #32]
    5694:	ldp	x29, x30, [sp], #192
    5698:	ret
    569c:	mov	w0, #0xd                   	// #13
    56a0:	bl	22a0 <lt__error_string@plt>
    56a4:	bl	2410 <lt__set_last_error@plt>
    56a8:	mov	x22, x20
    56ac:	ldp	x23, x24, [sp, #48]
    56b0:	b	5688 <lt_dlsym@@Base+0x1c4>
    56b4:	ldr	x1, [x19, #24]
    56b8:	mov	x0, x20
    56bc:	bl	2460 <strcpy@plt>
    56c0:	b	5580 <lt_dlsym@@Base+0xbc>
    56c4:	mov	x0, x24
    56c8:	bl	2410 <lt__set_last_error@plt>
    56cc:	b	5634 <lt_dlsym@@Base+0x170>
    56d0:	mov	x1, x21
    56d4:	mov	x0, x20
    56d8:	bl	2460 <strcpy@plt>
    56dc:	b	5654 <lt_dlsym@@Base+0x190>
    56e0:	add	x0, x20, #0x5
    56e4:	cmp	x0, #0x7f
    56e8:	b.hi	5614 <lt_dlsym@@Base+0x150>  // b.pmore
    56ec:	ldr	x23, [x22, #56]
    56f0:	add	x20, sp, #0x40
    56f4:	b	5634 <lt_dlsym@@Base+0x170>
    56f8:	ldp	x23, x24, [sp, #48]
    56fc:	b	5688 <lt_dlsym@@Base+0x1c4>
    5700:	ldp	x23, x24, [sp, #48]
    5704:	b	5688 <lt_dlsym@@Base+0x1c4>
    5708:	stp	x29, x30, [sp, #-16]!
    570c:	mov	x29, sp
    5710:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    5714:	add	x1, x1, #0xb98
    5718:	bl	24e0 <lt_dlsym@plt>
    571c:	mov	x1, #0x0                   	// #0
    5720:	bl	30d8 <lt__alloc_die_callback@@Base+0x1c>
    5724:	ldp	x29, x30, [sp], #16
    5728:	ret

000000000000572c <lt_dlerror@@Base>:
    572c:	stp	x29, x30, [sp, #-32]!
    5730:	mov	x29, sp
    5734:	str	x19, [sp, #16]
    5738:	bl	2190 <lt__get_last_error@plt>
    573c:	mov	x19, x0
    5740:	mov	x0, #0x0                   	// #0
    5744:	bl	2410 <lt__set_last_error@plt>
    5748:	mov	x0, x19
    574c:	ldr	x19, [sp, #16]
    5750:	ldp	x29, x30, [sp], #32
    5754:	ret

0000000000005758 <lt_dladdsearchdir@@Base>:
    5758:	cbz	x0, 579c <lt_dladdsearchdir@@Base+0x44>
    575c:	mov	x2, x0
    5760:	ldrb	w1, [x0]
    5764:	mov	w0, #0x0                   	// #0
    5768:	cbnz	w1, 5770 <lt_dladdsearchdir@@Base+0x18>
    576c:	ret
    5770:	stp	x29, x30, [sp, #-16]!
    5774:	mov	x29, sp
    5778:	mov	x1, #0x0                   	// #0
    577c:	adrp	x0, 19000 <lt_dlinterface_free@@Base+0x13680>
    5780:	add	x0, x0, #0x280
    5784:	add	x0, x0, #0x10
    5788:	bl	3f70 <lt__alloc_die_callback@@Base+0xeb4>
    578c:	cmp	w0, #0x0
    5790:	cset	w0, ne  // ne = any
    5794:	ldp	x29, x30, [sp], #16
    5798:	ret
    579c:	mov	w0, #0x0                   	// #0
    57a0:	ret

00000000000057a4 <lt_dlinsertsearchdir@@Base>:
    57a4:	stp	x29, x30, [sp, #-48]!
    57a8:	mov	x29, sp
    57ac:	stp	x19, x20, [sp, #16]
    57b0:	mov	x19, x0
    57b4:	mov	x20, x1
    57b8:	cbz	x0, 57f4 <lt_dlinsertsearchdir@@Base+0x50>
    57bc:	str	x21, [sp, #32]
    57c0:	adrp	x0, 19000 <lt_dlinterface_free@@Base+0x13680>
    57c4:	ldr	x21, [x0, #656]
    57c8:	cmp	x21, x19
    57cc:	b.hi	5828 <lt_dlinsertsearchdir@@Base+0x84>  // b.pmore
    57d0:	cbz	x21, 5828 <lt_dlinsertsearchdir@@Base+0x84>
    57d4:	ldrb	w0, [x21]
    57d8:	cbz	w0, 5828 <lt_dlinsertsearchdir@@Base+0x84>
    57dc:	mov	x0, x21
    57e0:	bl	2150 <strlen@plt>
    57e4:	add	x21, x21, x0
    57e8:	cmp	x19, x21
    57ec:	b.cs	5828 <lt_dlinsertsearchdir@@Base+0x84>  // b.hs, b.nlast
    57f0:	ldr	x21, [sp, #32]
    57f4:	mov	w0, #0x0                   	// #0
    57f8:	cbz	x20, 583c <lt_dlinsertsearchdir@@Base+0x98>
    57fc:	ldrb	w1, [x20]
    5800:	cbz	w1, 583c <lt_dlinsertsearchdir@@Base+0x98>
    5804:	mov	x2, x20
    5808:	mov	x1, x19
    580c:	adrp	x0, 19000 <lt_dlinterface_free@@Base+0x13680>
    5810:	add	x0, x0, #0x280
    5814:	add	x0, x0, #0x10
    5818:	bl	3f70 <lt__alloc_die_callback@@Base+0xeb4>
    581c:	cmp	w0, #0x0
    5820:	cset	w0, ne  // ne = any
    5824:	b	583c <lt_dlinsertsearchdir@@Base+0x98>
    5828:	mov	w0, #0x12                  	// #18
    582c:	bl	22a0 <lt__error_string@plt>
    5830:	bl	2410 <lt__set_last_error@plt>
    5834:	mov	w0, #0x1                   	// #1
    5838:	ldr	x21, [sp, #32]
    583c:	ldp	x19, x20, [sp, #16]
    5840:	ldp	x29, x30, [sp], #48
    5844:	ret

0000000000005848 <lt_dlsetsearchpath@@Base>:
    5848:	stp	x29, x30, [sp, #-32]!
    584c:	mov	x29, sp
    5850:	stp	x19, x20, [sp, #16]
    5854:	mov	x19, x0
    5858:	adrp	x20, 19000 <lt_dlinterface_free@@Base+0x13680>
    585c:	add	x20, x20, #0x280
    5860:	ldr	x0, [x20, #16]
    5864:	bl	2400 <free@plt>
    5868:	str	xzr, [x20, #16]
    586c:	cbz	x19, 58a0 <lt_dlsetsearchpath@@Base+0x58>
    5870:	ldrb	w1, [x19]
    5874:	mov	w0, #0x0                   	// #0
    5878:	cbnz	w1, 5888 <lt_dlsetsearchpath@@Base+0x40>
    587c:	ldp	x19, x20, [sp, #16]
    5880:	ldp	x29, x30, [sp], #32
    5884:	ret
    5888:	add	x1, x20, #0x10
    588c:	mov	x0, x19
    5890:	bl	3168 <lt__alloc_die_callback@@Base+0xac>
    5894:	cmp	w0, #0x0
    5898:	cset	w0, ne  // ne = any
    589c:	b	587c <lt_dlsetsearchpath@@Base+0x34>
    58a0:	mov	w0, #0x0                   	// #0
    58a4:	b	587c <lt_dlsetsearchpath@@Base+0x34>

00000000000058a8 <lt_dlgetsearchpath@@Base>:
    58a8:	adrp	x0, 19000 <lt_dlinterface_free@@Base+0x13680>
    58ac:	ldr	x0, [x0, #656]
    58b0:	ret

00000000000058b4 <lt_dlmakeresident@@Base>:
    58b4:	cbz	x0, 58cc <lt_dlmakeresident@@Base+0x18>
    58b8:	ldrb	w1, [x0, #36]
    58bc:	orr	w1, w1, #0x1
    58c0:	strb	w1, [x0, #36]
    58c4:	mov	w0, #0x0                   	// #0
    58c8:	ret
    58cc:	stp	x29, x30, [sp, #-16]!
    58d0:	mov	x29, sp
    58d4:	mov	w0, #0xc                   	// #12
    58d8:	bl	22a0 <lt__error_string@plt>
    58dc:	bl	2410 <lt__set_last_error@plt>
    58e0:	mov	w0, #0x1                   	// #1
    58e4:	ldp	x29, x30, [sp], #16
    58e8:	ret

00000000000058ec <lt_dlisresident@@Base>:
    58ec:	cbz	x0, 58fc <lt_dlisresident@@Base+0x10>
    58f0:	ldrb	w0, [x0, #36]
    58f4:	and	w0, w0, #0x1
    58f8:	ret
    58fc:	stp	x29, x30, [sp, #-16]!
    5900:	mov	x29, sp
    5904:	mov	w0, #0xc                   	// #12
    5908:	bl	22a0 <lt__error_string@plt>
    590c:	bl	2410 <lt__set_last_error@plt>
    5910:	mov	w0, #0xffffffff            	// #-1
    5914:	ldp	x29, x30, [sp], #16
    5918:	ret

000000000000591c <lt_dlinterface_register@@Base>:
    591c:	stp	x29, x30, [sp, #-48]!
    5920:	mov	x29, sp
    5924:	stp	x19, x20, [sp, #16]
    5928:	str	x21, [sp, #32]
    592c:	mov	x20, x0
    5930:	mov	x21, x1
    5934:	mov	x0, #0x10                  	// #16
    5938:	bl	2370 <lt__malloc@plt>
    593c:	mov	x19, x0
    5940:	cbz	x0, 595c <lt_dlinterface_register@@Base+0x40>
    5944:	mov	x0, x20
    5948:	bl	2180 <lt__strdup@plt>
    594c:	mov	x20, x0
    5950:	str	x0, [x19]
    5954:	cbz	x0, 5970 <lt_dlinterface_register@@Base+0x54>
    5958:	str	x21, [x19, #8]
    595c:	mov	x0, x19
    5960:	ldp	x19, x20, [sp, #16]
    5964:	ldr	x21, [sp, #32]
    5968:	ldp	x29, x30, [sp], #48
    596c:	ret
    5970:	mov	x0, x19
    5974:	bl	2400 <free@plt>
    5978:	mov	x19, x20
    597c:	b	595c <lt_dlinterface_register@@Base+0x40>

0000000000005980 <lt_dlinterface_free@@Base>:
    5980:	stp	x29, x30, [sp, #-32]!
    5984:	mov	x29, sp
    5988:	str	x19, [sp, #16]
    598c:	mov	x19, x0
    5990:	ldr	x0, [x0]
    5994:	bl	2400 <free@plt>
    5998:	mov	x0, x19
    599c:	bl	2400 <free@plt>
    59a0:	ldr	x19, [sp, #16]
    59a4:	ldp	x29, x30, [sp], #32
    59a8:	ret

00000000000059ac <lt_dlcaller_set_data@@Base>:
    59ac:	stp	x29, x30, [sp, #-64]!
    59b0:	mov	x29, sp
    59b4:	stp	x19, x20, [sp, #16]
    59b8:	stp	x21, x22, [sp, #32]
    59bc:	str	x23, [sp, #48]
    59c0:	mov	x21, x0
    59c4:	mov	x23, x1
    59c8:	mov	x22, x2
    59cc:	ldr	x0, [x1, #72]
    59d0:	cbz	x0, 5a68 <lt_dlcaller_set_data@@Base+0xbc>
    59d4:	ldr	x20, [x0]
    59d8:	cbz	x20, 5aa0 <lt_dlcaller_set_data@@Base+0xf4>
    59dc:	add	x2, x0, #0x10
    59e0:	mov	w5, #0x0                   	// #0
    59e4:	mov	w1, w5
    59e8:	add	w5, w5, #0x1
    59ec:	ldr	x20, [x2], #16
    59f0:	cbnz	x20, 59e4 <lt_dlcaller_set_data@@Base+0x38>
    59f4:	cmp	w5, #0x0
    59f8:	b.le	5a60 <lt_dlcaller_set_data@@Base+0xb4>
    59fc:	mov	x3, x0
    5a00:	mov	w4, #0x0                   	// #0
    5a04:	b	5a0c <lt_dlcaller_set_data@@Base+0x60>
    5a08:	mov	w4, w19
    5a0c:	ldr	x6, [x3]
    5a10:	cmp	x6, x21
    5a14:	b.eq	5a2c <lt_dlcaller_set_data@@Base+0x80>  // b.none
    5a18:	add	w19, w4, #0x1
    5a1c:	add	x3, x3, #0x10
    5a20:	cmp	w1, w4
    5a24:	b.gt	5a08 <lt_dlcaller_set_data@@Base+0x5c>
    5a28:	b	5a34 <lt_dlcaller_set_data@@Base+0x88>
    5a2c:	ldr	x20, [x3, #8]
    5a30:	mov	w19, w4
    5a34:	cmp	w5, w19
    5a38:	b.eq	5a74 <lt_dlcaller_set_data@@Base+0xc8>  // b.none
    5a3c:	ldr	x0, [x23, #72]
    5a40:	add	x19, x0, w19, sxtw #4
    5a44:	str	x22, [x19, #8]
    5a48:	mov	x0, x20
    5a4c:	ldp	x19, x20, [sp, #16]
    5a50:	ldp	x21, x22, [sp, #32]
    5a54:	ldr	x23, [sp, #48]
    5a58:	ldp	x29, x30, [sp], #64
    5a5c:	ret
    5a60:	mov	w19, #0x0                   	// #0
    5a64:	b	5a34 <lt_dlcaller_set_data@@Base+0x88>
    5a68:	mov	x20, x0
    5a6c:	mov	w19, #0x0                   	// #0
    5a70:	mov	w5, #0x0                   	// #0
    5a74:	add	w5, w5, #0x2
    5a78:	sbfiz	x1, x5, #4, #32
    5a7c:	bl	24d0 <lt__realloc@plt>
    5a80:	cbz	x0, 5aac <lt_dlcaller_set_data@@Base+0x100>
    5a84:	str	x0, [x23, #72]
    5a88:	sbfiz	x1, x19, #4, #32
    5a8c:	str	x21, [x0, x1]
    5a90:	ldr	x0, [x23, #72]
    5a94:	add	x0, x0, x1
    5a98:	str	xzr, [x0, #16]
    5a9c:	b	5a3c <lt_dlcaller_set_data@@Base+0x90>
    5aa0:	mov	w19, #0x0                   	// #0
    5aa4:	mov	w5, #0x0                   	// #0
    5aa8:	b	5a74 <lt_dlcaller_set_data@@Base+0xc8>
    5aac:	mov	x20, x0
    5ab0:	b	5a48 <lt_dlcaller_set_data@@Base+0x9c>

0000000000005ab4 <lt_dlcaller_get_data@@Base>:
    5ab4:	mov	x2, x0
    5ab8:	ldr	x1, [x1, #72]
    5abc:	cbz	x1, 5ae4 <lt_dlcaller_get_data@@Base+0x30>
    5ac0:	ldr	x0, [x1]
    5ac4:	cbz	x0, 5ae0 <lt_dlcaller_get_data@@Base+0x2c>
    5ac8:	cmp	x2, x0
    5acc:	b.eq	5adc <lt_dlcaller_get_data@@Base+0x28>  // b.none
    5ad0:	ldr	x0, [x1, #16]!
    5ad4:	cbnz	x0, 5ac8 <lt_dlcaller_get_data@@Base+0x14>
    5ad8:	b	5ae0 <lt_dlcaller_get_data@@Base+0x2c>
    5adc:	ldr	x0, [x1, #8]
    5ae0:	ret
    5ae4:	mov	x0, x1
    5ae8:	b	5ae0 <lt_dlcaller_get_data@@Base+0x2c>

0000000000005aec <lt_dlgetinfo@@Base>:
    5aec:	stp	x29, x30, [sp, #-32]!
    5af0:	mov	x29, sp
    5af4:	str	x19, [sp, #16]
    5af8:	mov	x19, x0
    5afc:	cbz	x0, 5b10 <lt_dlgetinfo@@Base+0x24>
    5b00:	add	x0, x0, #0x10
    5b04:	ldr	x19, [sp, #16]
    5b08:	ldp	x29, x30, [sp], #32
    5b0c:	ret
    5b10:	mov	w0, #0xc                   	// #12
    5b14:	bl	22a0 <lt__error_string@plt>
    5b18:	bl	2410 <lt__set_last_error@plt>
    5b1c:	mov	x0, x19
    5b20:	b	5b04 <lt_dlgetinfo@@Base+0x18>

0000000000005b24 <lt_dlhandle_iterate@@Base>:
    5b24:	stp	x29, x30, [sp, #-32]!
    5b28:	mov	x29, sp
    5b2c:	stp	x19, x20, [sp, #16]
    5b30:	cbz	x0, 5b74 <lt_dlhandle_iterate@@Base+0x50>
    5b34:	mov	x20, x0
    5b38:	cbz	x1, 5b98 <lt_dlhandle_iterate@@Base+0x74>
    5b3c:	ldr	x19, [x1]
    5b40:	cbz	x19, 5b64 <lt_dlhandle_iterate@@Base+0x40>
    5b44:	ldr	x2, [x20, #8]
    5b48:	cbz	x2, 5b64 <lt_dlhandle_iterate@@Base+0x40>
    5b4c:	ldr	x1, [x20]
    5b50:	mov	x0, x19
    5b54:	blr	x2
    5b58:	cbz	w0, 5b64 <lt_dlhandle_iterate@@Base+0x40>
    5b5c:	ldr	x19, [x19]
    5b60:	cbnz	x19, 5b44 <lt_dlhandle_iterate@@Base+0x20>
    5b64:	mov	x0, x19
    5b68:	ldp	x19, x20, [sp, #16]
    5b6c:	ldp	x29, x30, [sp], #32
    5b70:	ret
    5b74:	adrp	x3, 6000 <lt__slist_sort@@Base+0x74>
    5b78:	add	x3, x3, #0xbb0
    5b7c:	add	x3, x3, #0x198
    5b80:	mov	w2, #0x96a                 	// #2410
    5b84:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    5b88:	add	x1, x1, #0x8d8
    5b8c:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    5b90:	add	x0, x0, #0xba8
    5b94:	bl	2500 <__assert_fail@plt>
    5b98:	adrp	x0, 19000 <lt_dlinterface_free@@Base+0x13680>
    5b9c:	ldr	x19, [x0, #640]
    5ba0:	b	5b40 <lt_dlhandle_iterate@@Base+0x1c>

0000000000005ba4 <lt_dlhandle_fetch@@Base>:
    5ba4:	stp	x29, x30, [sp, #-48]!
    5ba8:	mov	x29, sp
    5bac:	stp	x19, x20, [sp, #16]
    5bb0:	str	x21, [sp, #32]
    5bb4:	mov	x20, x0
    5bb8:	mov	x21, x1
    5bbc:	mov	x19, #0x0                   	// #0
    5bc0:	cbz	x0, 5c00 <lt_dlhandle_fetch@@Base+0x5c>
    5bc4:	mov	x1, x19
    5bc8:	mov	x0, x20
    5bcc:	bl	2440 <lt_dlhandle_iterate@plt>
    5bd0:	mov	x19, x0
    5bd4:	cbz	x0, 5bec <lt_dlhandle_fetch@@Base+0x48>
    5bd8:	ldr	x0, [x19, #24]
    5bdc:	cbz	x0, 5bc4 <lt_dlhandle_fetch@@Base+0x20>
    5be0:	mov	x1, x21
    5be4:	bl	23e0 <strcmp@plt>
    5be8:	cbnz	w0, 5bc4 <lt_dlhandle_fetch@@Base+0x20>
    5bec:	mov	x0, x19
    5bf0:	ldp	x19, x20, [sp, #16]
    5bf4:	ldr	x21, [sp, #32]
    5bf8:	ldp	x29, x30, [sp], #48
    5bfc:	ret
    5c00:	adrp	x3, 6000 <lt__slist_sort@@Base+0x74>
    5c04:	add	x3, x3, #0xbb0
    5c08:	add	x3, x3, #0x1b0
    5c0c:	mov	w2, #0x981                 	// #2433
    5c10:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    5c14:	add	x1, x1, #0x8d8
    5c18:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    5c1c:	add	x0, x0, #0xba8
    5c20:	bl	2500 <__assert_fail@plt>

0000000000005c24 <lt_dlhandle_map@@Base>:
    5c24:	stp	x29, x30, [sp, #-48]!
    5c28:	mov	x29, sp
    5c2c:	stp	x19, x20, [sp, #16]
    5c30:	stp	x21, x22, [sp, #32]
    5c34:	mov	x20, x0
    5c38:	mov	x22, x1
    5c3c:	mov	x21, x2
    5c40:	adrp	x0, 19000 <lt_dlinterface_free@@Base+0x13680>
    5c44:	ldr	x19, [x0, #640]
    5c48:	cbnz	x20, 5c80 <lt_dlhandle_map@@Base+0x5c>
    5c4c:	adrp	x3, 6000 <lt__slist_sort@@Base+0x74>
    5c50:	add	x3, x3, #0xbb0
    5c54:	add	x3, x3, #0x1c8
    5c58:	mov	w2, #0x995                 	// #2453
    5c5c:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    5c60:	add	x1, x1, #0x8d8
    5c64:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    5c68:	add	x0, x0, #0xba8
    5c6c:	bl	2500 <__assert_fail@plt>
    5c70:	mov	x1, x21
    5c74:	mov	x0, x19
    5c78:	blr	x22
    5c7c:	cbnz	w0, 5cac <lt_dlhandle_map@@Base+0x88>
    5c80:	cbz	x19, 5ca8 <lt_dlhandle_map@@Base+0x84>
    5c84:	ldr	x3, [x20, #8]
    5c88:	cbz	x3, 5c70 <lt_dlhandle_map@@Base+0x4c>
    5c8c:	ldr	x1, [x20]
    5c90:	mov	x0, x19
    5c94:	blr	x3
    5c98:	cbz	w0, 5c70 <lt_dlhandle_map@@Base+0x4c>
    5c9c:	ldr	x19, [x19]
    5ca0:	cbnz	x19, 5c84 <lt_dlhandle_map@@Base+0x60>
    5ca4:	b	5c70 <lt_dlhandle_map@@Base+0x4c>
    5ca8:	mov	w0, #0x0                   	// #0
    5cac:	ldp	x19, x20, [sp, #16]
    5cb0:	ldp	x21, x22, [sp, #32]
    5cb4:	ldp	x29, x30, [sp], #48
    5cb8:	ret

0000000000005cbc <lt__slist_delete@@Base>:
    5cbc:	stp	x29, x30, [sp, #-32]!
    5cc0:	mov	x29, sp
    5cc4:	stp	x19, x20, [sp, #16]
    5cc8:	cbz	x1, 5cf8 <lt__slist_delete@@Base+0x3c>
    5ccc:	mov	x19, x0
    5cd0:	mov	x20, x1
    5cd4:	cbz	x0, 5ce8 <lt__slist_delete@@Base+0x2c>
    5cd8:	mov	x0, x19
    5cdc:	ldr	x19, [x19]
    5ce0:	blr	x20
    5ce4:	cbnz	x19, 5cd8 <lt__slist_delete@@Base+0x1c>
    5ce8:	mov	x0, #0x0                   	// #0
    5cec:	ldp	x19, x20, [sp, #16]
    5cf0:	ldp	x29, x30, [sp], #32
    5cf4:	ret
    5cf8:	adrp	x3, 6000 <lt__slist_sort@@Base+0x74>
    5cfc:	add	x3, x3, #0xdc8
    5d00:	mov	w2, #0x38                  	// #56
    5d04:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    5d08:	add	x1, x1, #0xd88
    5d0c:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    5d10:	add	x0, x0, #0xd98
    5d14:	bl	2500 <__assert_fail@plt>

0000000000005d18 <lt__slist_remove@@Base>:
    5d18:	stp	x29, x30, [sp, #-48]!
    5d1c:	mov	x29, sp
    5d20:	stp	x19, x20, [sp, #16]
    5d24:	str	x21, [sp, #32]
    5d28:	cbz	x1, 5d6c <lt__slist_remove@@Base+0x54>
    5d2c:	mov	x19, x0
    5d30:	mov	x20, x1
    5d34:	mov	x21, x2
    5d38:	cbz	x0, 5d5c <lt__slist_remove@@Base+0x44>
    5d3c:	ldr	x0, [x0]
    5d40:	cbz	x0, 5d5c <lt__slist_remove@@Base+0x44>
    5d44:	mov	x1, x2
    5d48:	blr	x20
    5d4c:	cbz	x0, 5d90 <lt__slist_remove@@Base+0x78>
    5d50:	ldr	x1, [x19]
    5d54:	ldr	x1, [x1]
    5d58:	str	x1, [x19]
    5d5c:	ldp	x19, x20, [sp, #16]
    5d60:	ldr	x21, [sp, #32]
    5d64:	ldp	x29, x30, [sp], #48
    5d68:	ret
    5d6c:	adrp	x3, 6000 <lt__slist_sort@@Base+0x74>
    5d70:	add	x3, x3, #0xdc8
    5d74:	add	x3, x3, #0x18
    5d78:	mov	w2, #0x53                  	// #83
    5d7c:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    5d80:	add	x1, x1, #0xd88
    5d84:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    5d88:	add	x0, x0, #0xda8
    5d8c:	bl	2500 <__assert_fail@plt>
    5d90:	ldr	x19, [x19]
    5d94:	ldr	x0, [x19]
    5d98:	cbz	x0, 5d5c <lt__slist_remove@@Base+0x44>
    5d9c:	mov	x1, x21
    5da0:	blr	x20
    5da4:	cbnz	x0, 5db8 <lt__slist_remove@@Base+0xa0>
    5da8:	ldr	x19, [x19]
    5dac:	ldr	x0, [x19]
    5db0:	cbnz	x0, 5d9c <lt__slist_remove@@Base+0x84>
    5db4:	b	5d5c <lt__slist_remove@@Base+0x44>
    5db8:	ldr	x1, [x19]
    5dbc:	ldr	x1, [x1]
    5dc0:	str	x1, [x19]
    5dc4:	b	5d5c <lt__slist_remove@@Base+0x44>

0000000000005dc8 <lt__slist_find@@Base>:
    5dc8:	stp	x29, x30, [sp, #-48]!
    5dcc:	mov	x29, sp
    5dd0:	stp	x19, x20, [sp, #16]
    5dd4:	str	x21, [sp, #32]
    5dd8:	cbz	x1, 5e18 <lt__slist_find@@Base+0x50>
    5ddc:	mov	x19, x0
    5de0:	mov	x20, x1
    5de4:	mov	x21, x2
    5de8:	cbz	x0, 5e08 <lt__slist_find@@Base+0x40>
    5dec:	mov	x1, x21
    5df0:	mov	x0, x19
    5df4:	blr	x20
    5df8:	cbnz	x0, 5e08 <lt__slist_find@@Base+0x40>
    5dfc:	ldr	x19, [x19]
    5e00:	cbnz	x19, 5dec <lt__slist_find@@Base+0x24>
    5e04:	mov	x0, x19
    5e08:	ldp	x19, x20, [sp, #16]
    5e0c:	ldr	x21, [sp, #32]
    5e10:	ldp	x29, x30, [sp], #48
    5e14:	ret
    5e18:	adrp	x3, 6000 <lt__slist_sort@@Base+0x74>
    5e1c:	add	x3, x3, #0xdc8
    5e20:	add	x3, x3, #0x30
    5e24:	mov	w2, #0x7a                  	// #122
    5e28:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    5e2c:	add	x1, x1, #0xd88
    5e30:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    5e34:	add	x0, x0, #0xda8
    5e38:	bl	2500 <__assert_fail@plt>

0000000000005e3c <lt__slist_concat@@Base>:
    5e3c:	cbz	x0, 5e58 <lt__slist_concat@@Base+0x1c>
    5e40:	mov	x2, x0
    5e44:	mov	x3, x2
    5e48:	ldr	x2, [x2]
    5e4c:	cbnz	x2, 5e44 <lt__slist_concat@@Base+0x8>
    5e50:	str	x1, [x3]
    5e54:	ret
    5e58:	mov	x0, x1
    5e5c:	b	5e54 <lt__slist_concat@@Base+0x18>

0000000000005e60 <lt__slist_cons@@Base>:
    5e60:	cbz	x0, 5ea0 <lt__slist_cons@@Base+0x40>
    5e64:	ldr	x2, [x0]
    5e68:	cbnz	x2, 5e74 <lt__slist_cons@@Base+0x14>
    5e6c:	str	x1, [x0]
    5e70:	ret
    5e74:	stp	x29, x30, [sp, #-16]!
    5e78:	mov	x29, sp
    5e7c:	adrp	x3, 6000 <lt__slist_sort@@Base+0x74>
    5e80:	add	x3, x3, #0xdc8
    5e84:	add	x3, x3, #0x40
    5e88:	mov	w2, #0xaf                  	// #175
    5e8c:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    5e90:	add	x1, x1, #0xd88
    5e94:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    5e98:	add	x0, x0, #0xdb0
    5e9c:	bl	2500 <__assert_fail@plt>
    5ea0:	mov	x0, x1
    5ea4:	ret

0000000000005ea8 <lt__slist_tail@@Base>:
    5ea8:	cbz	x0, 5eb0 <lt__slist_tail@@Base+0x8>
    5eac:	ldr	x0, [x0]
    5eb0:	ret

0000000000005eb4 <lt__slist_nth@@Base>:
    5eb4:	cmp	x0, #0x0
    5eb8:	ccmp	x1, #0x1, #0x0, ne  // ne = any
    5ebc:	b.ls	5ed4 <lt__slist_nth@@Base+0x20>  // b.plast
    5ec0:	ldr	x0, [x0]
    5ec4:	sub	x1, x1, #0x1
    5ec8:	cmp	x0, #0x0
    5ecc:	ccmp	x1, #0x1, #0x0, ne  // ne = any
    5ed0:	b.hi	5ec0 <lt__slist_nth@@Base+0xc>  // b.pmore
    5ed4:	ret

0000000000005ed8 <lt__slist_length@@Base>:
    5ed8:	mov	x1, x0
    5edc:	cbz	x0, 5ef4 <lt__slist_length@@Base+0x1c>
    5ee0:	mov	x0, #0x0                   	// #0
    5ee4:	ldr	x1, [x1]
    5ee8:	add	x0, x0, #0x1
    5eec:	cbnz	x1, 5ee4 <lt__slist_length@@Base+0xc>
    5ef0:	ret
    5ef4:	mov	x0, #0x0                   	// #0
    5ef8:	b	5ef0 <lt__slist_length@@Base+0x18>

0000000000005efc <lt__slist_reverse@@Base>:
    5efc:	cbz	x0, 5f1c <lt__slist_reverse@@Base+0x20>
    5f00:	mov	x2, #0x0                   	// #0
    5f04:	b	5f0c <lt__slist_reverse@@Base+0x10>
    5f08:	mov	x0, x1
    5f0c:	ldr	x1, [x0]
    5f10:	str	x2, [x0]
    5f14:	mov	x2, x0
    5f18:	cbnz	x1, 5f08 <lt__slist_reverse@@Base+0xc>
    5f1c:	ret

0000000000005f20 <lt__slist_foreach@@Base>:
    5f20:	stp	x29, x30, [sp, #-48]!
    5f24:	mov	x29, sp
    5f28:	stp	x19, x20, [sp, #16]
    5f2c:	str	x21, [sp, #32]
    5f30:	mov	x20, x1
    5f34:	mov	x21, x2
    5f38:	cbz	x1, 5f58 <lt__slist_foreach@@Base+0x38>
    5f3c:	cbz	x0, 5f7c <lt__slist_foreach@@Base+0x5c>
    5f40:	ldr	x19, [x0]
    5f44:	mov	x1, x21
    5f48:	blr	x20
    5f4c:	cbnz	x0, 5f7c <lt__slist_foreach@@Base+0x5c>
    5f50:	mov	x0, x19
    5f54:	b	5f3c <lt__slist_foreach@@Base+0x1c>
    5f58:	adrp	x3, 6000 <lt__slist_sort@@Base+0x74>
    5f5c:	add	x3, x3, #0xdc8
    5f60:	add	x3, x3, #0x50
    5f64:	mov	w2, #0xf6                  	// #246
    5f68:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    5f6c:	add	x1, x1, #0xd88
    5f70:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    5f74:	add	x0, x0, #0xdc0
    5f78:	bl	2500 <__assert_fail@plt>
    5f7c:	ldp	x19, x20, [sp, #16]
    5f80:	ldr	x21, [sp, #32]
    5f84:	ldp	x29, x30, [sp], #48
    5f88:	ret

0000000000005f8c <lt__slist_sort@@Base>:
    5f8c:	cbz	x0, 6078 <lt__slist_sort@@Base+0xec>
    5f90:	stp	x29, x30, [sp, #-80]!
    5f94:	mov	x29, sp
    5f98:	stp	x21, x22, [sp, #32]
    5f9c:	str	x23, [sp, #48]
    5fa0:	mov	x22, x1
    5fa4:	mov	x23, x2
    5fa8:	ldr	x3, [x0]
    5fac:	cbz	x3, 6068 <lt__slist_sort@@Base+0xdc>
    5fb0:	stp	x19, x20, [sp, #16]
    5fb4:	mov	x4, x0
    5fb8:	b	5fc0 <lt__slist_sort@@Base+0x34>
    5fbc:	ldr	x4, [x4]
    5fc0:	ldr	x3, [x3]
    5fc4:	cbz	x3, 5fd0 <lt__slist_sort@@Base+0x44>
    5fc8:	ldr	x3, [x3]
    5fcc:	cbnz	x3, 5fbc <lt__slist_sort@@Base+0x30>
    5fd0:	ldr	x19, [x4]
    5fd4:	str	xzr, [x4]
    5fd8:	mov	x2, x23
    5fdc:	mov	x1, x22
    5fe0:	bl	5f8c <lt__slist_sort@@Base>
    5fe4:	mov	x20, x0
    5fe8:	mov	x2, x23
    5fec:	mov	x1, x22
    5ff0:	mov	x0, x19
    5ff4:	bl	5f8c <lt__slist_sort@@Base>
    5ff8:	mov	x19, x0
    5ffc:	cmp	x20, #0x0
    6000:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    6004:	b.eq	6050 <lt__slist_sort@@Base+0xc4>  // b.none
    6008:	add	x21, sp, #0x40
    600c:	b	6028 <lt__slist_sort@@Base+0x9c>
    6010:	str	x20, [x21]
    6014:	mov	x21, x20
    6018:	ldr	x20, [x20]
    601c:	cmp	x20, #0x0
    6020:	ccmp	x19, #0x0, #0x4, ne  // ne = any
    6024:	b.eq	6054 <lt__slist_sort@@Base+0xc8>  // b.none
    6028:	mov	x2, x23
    602c:	mov	x1, x19
    6030:	mov	x0, x20
    6034:	blr	x22
    6038:	cmp	w0, #0x0
    603c:	b.le	6010 <lt__slist_sort@@Base+0x84>
    6040:	str	x19, [x21]
    6044:	mov	x21, x19
    6048:	ldr	x19, [x19]
    604c:	b	601c <lt__slist_sort@@Base+0x90>
    6050:	add	x21, sp, #0x40
    6054:	cmp	x20, #0x0
    6058:	csel	x20, x20, x19, ne  // ne = any
    605c:	str	x20, [x21]
    6060:	ldr	x0, [sp, #64]
    6064:	ldp	x19, x20, [sp, #16]
    6068:	ldp	x21, x22, [sp, #32]
    606c:	ldr	x23, [sp, #48]
    6070:	ldp	x29, x30, [sp], #80
    6074:	ret
    6078:	ret

000000000000607c <lt__slist_box@@Base>:
    607c:	stp	x29, x30, [sp, #-32]!
    6080:	mov	x29, sp
    6084:	str	x19, [sp, #16]
    6088:	mov	x19, x0
    608c:	mov	x0, #0x10                  	// #16
    6090:	bl	2230 <malloc@plt>
    6094:	cbz	x0, 60a0 <lt__slist_box@@Base+0x24>
    6098:	str	xzr, [x0]
    609c:	str	x19, [x0, #8]
    60a0:	ldr	x19, [sp, #16]
    60a4:	ldp	x29, x30, [sp], #32
    60a8:	ret

00000000000060ac <lt__slist_unbox@@Base>:
    60ac:	stp	x29, x30, [sp, #-32]!
    60b0:	mov	x29, sp
    60b4:	str	x19, [sp, #16]
    60b8:	mov	x19, x0
    60bc:	cbz	x0, 60c8 <lt__slist_unbox@@Base+0x1c>
    60c0:	ldr	x19, [x0, #8]
    60c4:	bl	2400 <free@plt>
    60c8:	mov	x0, x19
    60cc:	ldr	x19, [sp, #16]
    60d0:	ldp	x29, x30, [sp], #32
    60d4:	ret

00000000000060d8 <lt_strlcat@@Base>:
    60d8:	stp	x29, x30, [sp, #-48]!
    60dc:	mov	x29, sp
    60e0:	stp	x19, x20, [sp, #16]
    60e4:	str	x21, [sp, #32]
    60e8:	cbz	x0, 6168 <lt_strlcat@@Base+0x90>
    60ec:	mov	x21, x0
    60f0:	mov	x19, x1
    60f4:	mov	x20, x2
    60f8:	cbz	x1, 6188 <lt_strlcat@@Base+0xb0>
    60fc:	cbz	x2, 61a8 <lt_strlcat@@Base+0xd0>
    6100:	bl	2150 <strlen@plt>
    6104:	mov	x3, x0
    6108:	ldrb	w1, [x19]
    610c:	cbz	w1, 6138 <lt_strlcat@@Base+0x60>
    6110:	sub	x2, x20, #0x1
    6114:	cmp	x0, x2
    6118:	b.cs	6138 <lt_strlcat@@Base+0x60>  // b.hs, b.nlast
    611c:	strb	w1, [x21, x3]
    6120:	add	x3, x3, #0x1
    6124:	ldrb	w1, [x19, #1]!
    6128:	cbz	w1, 6138 <lt_strlcat@@Base+0x60>
    612c:	cmp	x3, x2
    6130:	b.ne	611c <lt_strlcat@@Base+0x44>  // b.any
    6134:	mov	x3, x2
    6138:	strb	wzr, [x21, x3]
    613c:	ldrb	w0, [x19]
    6140:	cbz	w0, 61c8 <lt_strlcat@@Base+0xf0>
    6144:	mov	x0, x3
    6148:	sub	x3, x19, x3
    614c:	add	x0, x0, #0x1
    6150:	ldrb	w1, [x3, x0]
    6154:	cbnz	w1, 614c <lt_strlcat@@Base+0x74>
    6158:	ldp	x19, x20, [sp, #16]
    615c:	ldr	x21, [sp, #32]
    6160:	ldp	x29, x30, [sp], #48
    6164:	ret
    6168:	adrp	x3, 6000 <lt__slist_sort@@Base+0x74>
    616c:	add	x3, x3, #0xe88
    6170:	mov	w2, #0x39                  	// #57
    6174:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    6178:	add	x1, x1, #0xe30
    617c:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    6180:	add	x0, x0, #0xe48
    6184:	bl	2500 <__assert_fail@plt>
    6188:	adrp	x3, 6000 <lt__slist_sort@@Base+0x74>
    618c:	add	x3, x3, #0xe88
    6190:	mov	w2, #0x3a                  	// #58
    6194:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    6198:	add	x1, x1, #0xe30
    619c:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    61a0:	add	x0, x0, #0xe58
    61a4:	bl	2500 <__assert_fail@plt>
    61a8:	adrp	x3, 6000 <lt__slist_sort@@Base+0x74>
    61ac:	add	x3, x3, #0xe88
    61b0:	mov	w2, #0x3b                  	// #59
    61b4:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    61b8:	add	x1, x1, #0xe30
    61bc:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    61c0:	add	x0, x0, #0xe78
    61c4:	bl	2500 <__assert_fail@plt>
    61c8:	mov	x0, x3
    61cc:	b	6158 <lt_strlcat@@Base+0x80>

00000000000061d0 <lt_strlcpy@@Base>:
    61d0:	stp	x29, x30, [sp, #-16]!
    61d4:	mov	x29, sp
    61d8:	cbz	x0, 6218 <lt_strlcpy@@Base+0x48>
    61dc:	cbz	x1, 623c <lt_strlcpy@@Base+0x6c>
    61e0:	cbz	x2, 6268 <lt_strlcpy@@Base+0x98>
    61e4:	ldrb	w4, [x1]
    61e8:	cbz	w4, 628c <lt_strlcpy@@Base+0xbc>
    61ec:	mov	x3, #0x0                   	// #0
    61f0:	subs	x5, x2, #0x1
    61f4:	b.eq	6260 <lt_strlcpy@@Base+0x90>  // b.none
    61f8:	strb	w4, [x0, x3]
    61fc:	add	x3, x3, #0x1
    6200:	add	x2, x1, x3
    6204:	ldrb	w4, [x1, x3]
    6208:	cbz	w4, 6298 <lt_strlcpy@@Base+0xc8>
    620c:	cmp	x3, x5
    6210:	b.ne	61f8 <lt_strlcpy@@Base+0x28>  // b.any
    6214:	b	629c <lt_strlcpy@@Base+0xcc>
    6218:	adrp	x3, 6000 <lt__slist_sort@@Base+0x74>
    621c:	add	x3, x3, #0xe88
    6220:	add	x3, x3, #0x10
    6224:	mov	w2, #0x69                  	// #105
    6228:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    622c:	add	x1, x1, #0xe30
    6230:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    6234:	add	x0, x0, #0xe48
    6238:	bl	2500 <__assert_fail@plt>
    623c:	adrp	x3, 6000 <lt__slist_sort@@Base+0x74>
    6240:	add	x3, x3, #0xe88
    6244:	add	x3, x3, #0x10
    6248:	mov	w2, #0x6a                  	// #106
    624c:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    6250:	add	x1, x1, #0xe30
    6254:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    6258:	add	x0, x0, #0xe58
    625c:	bl	2500 <__assert_fail@plt>
    6260:	mov	x2, x1
    6264:	b	629c <lt_strlcpy@@Base+0xcc>
    6268:	adrp	x3, 6000 <lt__slist_sort@@Base+0x74>
    626c:	add	x3, x3, #0xe88
    6270:	add	x3, x3, #0x10
    6274:	mov	w2, #0x6b                  	// #107
    6278:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    627c:	add	x1, x1, #0xe30
    6280:	adrp	x0, 6000 <lt__slist_sort@@Base+0x74>
    6284:	add	x0, x0, #0xe78
    6288:	bl	2500 <__assert_fail@plt>
    628c:	mov	x2, x1
    6290:	mov	x5, #0x0                   	// #0
    6294:	b	629c <lt_strlcpy@@Base+0xcc>
    6298:	mov	x5, x3
    629c:	strb	wzr, [x0, x5]
    62a0:	ldrb	w0, [x2]
    62a4:	cbz	w0, 62c4 <lt_strlcpy@@Base+0xf4>
    62a8:	mov	x0, x5
    62ac:	sub	x2, x2, x5
    62b0:	add	x0, x0, #0x1
    62b4:	ldrb	w1, [x2, x0]
    62b8:	cbnz	w1, 62b0 <lt_strlcpy@@Base+0xe0>
    62bc:	ldp	x29, x30, [sp], #16
    62c0:	ret
    62c4:	mov	x0, x5
    62c8:	b	62bc <lt_strlcpy@@Base+0xec>
    62cc:	adrp	x0, 19000 <lt_dlinterface_free@@Base+0x13680>
    62d0:	str	xzr, [x0, #664]
    62d4:	mov	w0, #0x0                   	// #0
    62d8:	ret
    62dc:	stp	x29, x30, [sp, #-32]!
    62e0:	mov	x29, sp
    62e4:	str	x19, [sp, #16]
    62e8:	mov	x0, x1
    62ec:	mov	x1, x2
    62f0:	bl	2250 <dlsym@plt>
    62f4:	mov	x19, x0
    62f8:	cbz	x0, 630c <lt_strlcpy@@Base+0x13c>
    62fc:	mov	x0, x19
    6300:	ldr	x19, [sp, #16]
    6304:	ldp	x29, x30, [sp], #32
    6308:	ret
    630c:	bl	2240 <dlerror@plt>
    6310:	bl	2410 <lt__set_last_error@plt>
    6314:	b	62fc <lt_strlcpy@@Base+0x12c>
    6318:	stp	x29, x30, [sp, #-16]!
    631c:	mov	x29, sp
    6320:	mov	x0, x1
    6324:	bl	21d0 <dlclose@plt>
    6328:	cbnz	w0, 6334 <lt_strlcpy@@Base+0x164>
    632c:	ldp	x29, x30, [sp], #16
    6330:	ret
    6334:	bl	2240 <dlerror@plt>
    6338:	bl	2410 <lt__set_last_error@plt>
    633c:	mov	w0, #0x1                   	// #1
    6340:	b	632c <lt_strlcpy@@Base+0x15c>
    6344:	stp	x29, x30, [sp, #-32]!
    6348:	mov	x29, sp
    634c:	str	x19, [sp, #16]
    6350:	mov	x0, x1
    6354:	mov	w1, #0x1                   	// #1
    6358:	cbz	x2, 636c <lt_strlcpy@@Base+0x19c>
    635c:	ldrb	w1, [x2]
    6360:	tst	x1, #0x4
    6364:	mov	w2, #0x101                 	// #257
    6368:	csinc	w1, w2, wzr, ne  // ne = any
    636c:	bl	21e0 <dlopen@plt>
    6370:	mov	x19, x0
    6374:	cbz	x0, 6388 <lt_strlcpy@@Base+0x1b8>
    6378:	mov	x0, x19
    637c:	ldr	x19, [sp, #16]
    6380:	ldp	x29, x30, [sp], #32
    6384:	ret
    6388:	bl	2240 <dlerror@plt>
    638c:	bl	2410 <lt__set_last_error@plt>
    6390:	b	6378 <lt_strlcpy@@Base+0x1a8>

0000000000006394 <dlopen_LTX_get_vtable@@Base>:
    6394:	stp	x29, x30, [sp, #-32]!
    6398:	mov	x29, sp
    639c:	str	x19, [sp, #16]
    63a0:	mov	x19, x0
    63a4:	adrp	x1, 19000 <lt_dlinterface_free@@Base+0x13680>
    63a8:	ldr	x0, [x1, #664]
    63ac:	cbz	x0, 63d0 <dlopen_LTX_get_vtable@@Base+0x3c>
    63b0:	ldr	x1, [x0]
    63b4:	cbz	x1, 63e8 <dlopen_LTX_get_vtable@@Base+0x54>
    63b8:	ldr	x1, [x0, #56]
    63bc:	cmp	x1, x19
    63c0:	b.ne	6430 <dlopen_LTX_get_vtable@@Base+0x9c>  // b.any
    63c4:	ldr	x19, [sp, #16]
    63c8:	ldp	x29, x30, [sp], #32
    63cc:	ret
    63d0:	mov	x0, #0x48                  	// #72
    63d4:	bl	2420 <lt__zalloc@plt>
    63d8:	adrp	x1, 19000 <lt_dlinterface_free@@Base+0x13680>
    63dc:	str	x0, [x1, #664]
    63e0:	cbz	x0, 63c4 <dlopen_LTX_get_vtable@@Base+0x30>
    63e4:	b	63b0 <dlopen_LTX_get_vtable@@Base+0x1c>
    63e8:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    63ec:	add	x1, x1, #0xed0
    63f0:	str	x1, [x0]
    63f4:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    63f8:	add	x1, x1, #0x344
    63fc:	str	x1, [x0, #16]
    6400:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    6404:	add	x1, x1, #0x318
    6408:	str	x1, [x0, #24]
    640c:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    6410:	add	x1, x1, #0x2dc
    6414:	str	x1, [x0, #32]
    6418:	adrp	x1, 6000 <lt__slist_sort@@Base+0x74>
    641c:	add	x1, x1, #0x2cc
    6420:	str	x1, [x0, #48]
    6424:	str	x19, [x0, #56]
    6428:	str	wzr, [x0, #64]
    642c:	b	63c4 <dlopen_LTX_get_vtable@@Base+0x30>
    6430:	mov	w0, #0x3                   	// #3
    6434:	bl	22a0 <lt__error_string@plt>
    6438:	bl	2410 <lt__set_last_error@plt>
    643c:	mov	x0, #0x0                   	// #0
    6440:	b	63c4 <dlopen_LTX_get_vtable@@Base+0x30>

Disassembly of section .fini:

0000000000006444 <.fini>:
    6444:	stp	x29, x30, [sp, #-16]!
    6448:	mov	x29, sp
    644c:	ldp	x29, x30, [sp], #16
    6450:	ret
