
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-sysv-generator_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000212810 <_start>:
  212810:	mov	x29, #0x0                   	// #0
  212814:	mov	x30, #0x0                   	// #0
  212818:	mov	x5, x0
  21281c:	ldr	x1, [sp]
  212820:	add	x2, sp, #0x8
  212824:	mov	x6, sp
  212828:	movz	x0, #0x0, lsl #48
  21282c:	movk	x0, #0x0, lsl #32
  212830:	movk	x0, #0x21, lsl #16
  212834:	movk	x0, #0x2960
  212838:	movz	x3, #0x0, lsl #48
  21283c:	movk	x3, #0x0, lsl #32
  212840:	movk	x3, #0x21, lsl #16
  212844:	movk	x3, #0x5180
  212848:	movz	x4, #0x0, lsl #48
  21284c:	movk	x4, #0x0, lsl #32
  212850:	movk	x4, #0x21, lsl #16
  212854:	movk	x4, #0x5200
  212858:	bl	215270 <__libc_start_main@plt>
  21285c:	bl	215280 <abort@plt>

0000000000212860 <call_weak_fn>:
  212860:	adrp	x0, 225000 <__fxstatat64@plt+0xf900>
  212864:	ldr	x0, [x0, #2288]
  212868:	cbz	x0, 212870 <call_weak_fn+0x10>
  21286c:	b	215290 <__gmon_start__@plt>
  212870:	ret

0000000000212874 <deregister_tm_clones>:
  212874:	adrp	x0, 235000 <string_hash_ops+0xf490>
  212878:	add	x0, x0, #0xb90
  21287c:	adrp	x1, 235000 <string_hash_ops+0xf490>
  212880:	add	x1, x1, #0xb90
  212884:	cmp	x0, x1
  212888:	b.eq	2128bc <deregister_tm_clones+0x48>  // b.none
  21288c:	stp	x29, x30, [sp, #-32]!
  212890:	mov	x29, sp
  212894:	adrp	x0, 201000 <rcnd_table-0x15f8>
  212898:	ldr	x0, [x0, #2792]
  21289c:	str	x0, [sp, #24]
  2128a0:	mov	x1, x0
  2128a4:	cbz	x1, 2128b4 <deregister_tm_clones+0x40>
  2128a8:	adrp	x0, 235000 <string_hash_ops+0xf490>
  2128ac:	add	x0, x0, #0xb90
  2128b0:	blr	x1
  2128b4:	ldp	x29, x30, [sp], #32
  2128b8:	ret
  2128bc:	ret

00000000002128c0 <register_tm_clones>:
  2128c0:	adrp	x0, 235000 <string_hash_ops+0xf490>
  2128c4:	add	x0, x0, #0xb90
  2128c8:	adrp	x1, 235000 <string_hash_ops+0xf490>
  2128cc:	add	x1, x1, #0xb90
  2128d0:	sub	x0, x0, x1
  2128d4:	lsr	x1, x0, #63
  2128d8:	add	x0, x1, x0, asr #3
  2128dc:	cmp	xzr, x0, asr #1
  2128e0:	b.eq	212918 <register_tm_clones+0x58>  // b.none
  2128e4:	stp	x29, x30, [sp, #-32]!
  2128e8:	mov	x29, sp
  2128ec:	asr	x1, x0, #1
  2128f0:	adrp	x0, 201000 <rcnd_table-0x15f8>
  2128f4:	ldr	x0, [x0, #2800]
  2128f8:	str	x0, [sp, #24]
  2128fc:	mov	x2, x0
  212900:	cbz	x2, 212910 <register_tm_clones+0x50>
  212904:	adrp	x0, 235000 <string_hash_ops+0xf490>
  212908:	add	x0, x0, #0xb90
  21290c:	blr	x2
  212910:	ldp	x29, x30, [sp], #32
  212914:	ret
  212918:	ret

000000000021291c <__do_global_dtors_aux>:
  21291c:	adrp	x0, 235000 <string_hash_ops+0xf490>
  212920:	ldrb	w0, [x0, #2960]
  212924:	cbnz	w0, 212948 <__do_global_dtors_aux+0x2c>
  212928:	stp	x29, x30, [sp, #-16]!
  21292c:	mov	x29, sp
  212930:	bl	212874 <deregister_tm_clones>
  212934:	adrp	x0, 235000 <string_hash_ops+0xf490>
  212938:	mov	w1, #0x1                   	// #1
  21293c:	strb	w1, [x0, #2960]
  212940:	ldp	x29, x30, [sp], #16
  212944:	ret
  212948:	ret

000000000021294c <frame_dummy>:
  21294c:	stp	x29, x30, [sp, #-16]!
  212950:	mov	x29, sp
  212954:	bl	2128c0 <register_tm_clones>
  212958:	ldp	x29, x30, [sp], #16
  21295c:	ret

0000000000212960 <main>:
  212960:	stp	x29, x30, [sp, #-32]!
  212964:	stp	x20, x19, [sp, #16]
  212968:	mov	x29, sp
  21296c:	mov	x19, x1
  212970:	mov	w20, w0
  212974:	bl	212a18 <save_argc_argv>
  212978:	bl	2152a0 <log_setup_generator@plt>
  21297c:	cmp	w20, #0x2
  212980:	b.lt	2129cc <main+0x6c>  // b.tstop
  212984:	cmp	w20, #0x4
  212988:	b.eq	2129cc <main+0x6c>  // b.none
  21298c:	mov	w0, wzr
  212990:	bl	2152b0 <log_get_max_level_realm@plt>
  212994:	cmp	w0, #0x3
  212998:	b.lt	212a08 <main+0xa8>  // b.tstop
  21299c:	adrp	x2, 202000 <rcnd_table-0x5f8>
  2129a0:	adrp	x4, 202000 <rcnd_table-0x5f8>
  2129a4:	adrp	x5, 202000 <rcnd_table-0x5f8>
  2129a8:	mov	w1, #0x16                  	// #22
  2129ac:	add	x2, x2, #0x1a7
  2129b0:	add	x4, x4, #0x1fc
  2129b4:	add	x5, x5, #0x1cb
  2129b8:	mov	w0, #0x3                   	// #3
  2129bc:	movk	w1, #0x4000, lsl #16
  2129c0:	mov	w3, #0x3bc                 	// #956
  2129c4:	bl	2152c0 <log_internal_realm@plt>
  2129c8:	b	212a0c <main+0xac>
  2129cc:	cmp	w20, #0x2
  2129d0:	b.lt	2129dc <main+0x7c>  // b.tstop
  2129d4:	ldr	x0, [x19, #24]
  2129d8:	b	2129e4 <main+0x84>
  2129dc:	adrp	x0, 202000 <rcnd_table-0x5f8>
  2129e0:	add	x0, x0, #0x2e6
  2129e4:	bl	212a2c <run>
  2129e8:	mov	w19, w0
  2129ec:	bl	2152d0 <ask_password_agent_close@plt>
  2129f0:	bl	2152e0 <polkit_agent_close@plt>
  2129f4:	bl	2152f0 <pager_close@plt>
  2129f8:	bl	215300 <mac_selinux_finish@plt>
  2129fc:	bl	212bc8 <static_destruct>
  212a00:	lsr	w0, w19, #31
  212a04:	b	212a0c <main+0xac>
  212a08:	mov	w0, #0xffffffea            	// #-22
  212a0c:	ldp	x20, x19, [sp, #16]
  212a10:	ldp	x29, x30, [sp], #32
  212a14:	ret

0000000000212a18 <save_argc_argv>:
  212a18:	adrp	x8, 235000 <string_hash_ops+0xf490>
  212a1c:	adrp	x9, 235000 <string_hash_ops+0xf490>
  212a20:	str	w0, [x8, #2976]
  212a24:	str	x1, [x9, #2984]
  212a28:	ret

0000000000212a2c <run>:
  212a2c:	sub	sp, sp, #0xb0
  212a30:	stp	x29, x30, [sp, #144]
  212a34:	add	x29, sp, #0x90
  212a38:	movi	v0.2d, #0x0
  212a3c:	adrp	x8, 235000 <string_hash_ops+0xf490>
  212a40:	stp	x20, x19, [sp, #160]
  212a44:	stur	xzr, [x29, #-8]
  212a48:	str	xzr, [sp, #128]
  212a4c:	stp	q0, q0, [sp, #96]
  212a50:	stp	q0, q0, [sp, #64]
  212a54:	stp	q0, q0, [sp, #32]
  212a58:	str	x0, [x8, #2968]
  212a5c:	cbz	x0, 212ba8 <run+0x17c>
  212a60:	add	x0, sp, #0x20
  212a64:	mov	w2, #0x1                   	// #1
  212a68:	mov	w1, wzr
  212a6c:	mov	x3, xzr
  212a70:	bl	215310 <lookup_paths_init@plt>
  212a74:	tbnz	w0, #31, 212adc <run+0xb0>
  212a78:	adrp	x0, 225000 <__fxstatat64@plt+0xf900>
  212a7c:	add	x0, x0, #0xb70
  212a80:	bl	215320 <internal_hashmap_new@plt>
  212a84:	stur	x0, [x29, #-8]
  212a88:	cbz	x0, 212b1c <run+0xf0>
  212a8c:	mov	x19, x0
  212a90:	add	x0, sp, #0x20
  212a94:	mov	x1, x19
  212a98:	bl	212c68 <enumerate_sysv>
  212a9c:	tbnz	w0, #31, 212b34 <run+0x108>
  212aa0:	add	x0, sp, #0x20
  212aa4:	mov	x1, x19
  212aa8:	bl	213030 <set_dependencies_from_rcnd>
  212aac:	tbnz	w0, #31, 212b34 <run+0x108>
  212ab0:	mov	w20, #0xfffffffe            	// #-2
  212ab4:	str	w20, [sp, #8]
  212ab8:	str	xzr, [sp, #16]
  212abc:	add	x1, sp, #0x8
  212ac0:	add	x2, sp, #0x18
  212ac4:	mov	x0, x19
  212ac8:	bl	2134ec <hashmap_iterate>
  212acc:	tbz	w0, #0, 212b4c <run+0x120>
  212ad0:	ldr	x0, [sp, #24]
  212ad4:	bl	213508 <load_sysv>
  212ad8:	b	212abc <run+0x90>
  212adc:	mov	w19, w0
  212ae0:	mov	w0, wzr
  212ae4:	bl	2152b0 <log_get_max_level_realm@plt>
  212ae8:	cmp	w0, #0x3
  212aec:	b.lt	212b3c <run+0x110>  // b.tstop
  212af0:	adrp	x2, 202000 <rcnd_table-0x5f8>
  212af4:	adrp	x4, 202000 <rcnd_table-0x5f8>
  212af8:	adrp	x5, 201000 <rcnd_table-0x15f8>
  212afc:	add	x2, x2, #0x1a7
  212b00:	add	x4, x4, #0x2a0
  212b04:	add	x5, x5, #0xcec
  212b08:	mov	w0, #0x3                   	// #3
  212b0c:	mov	w3, #0x3a3                 	// #931
  212b10:	mov	w1, w19
  212b14:	bl	2152c0 <log_internal_realm@plt>
  212b18:	b	212b34 <run+0x108>
  212b1c:	adrp	x1, 202000 <rcnd_table-0x5f8>
  212b20:	adrp	x3, 202000 <rcnd_table-0x5f8>
  212b24:	add	x1, x1, #0x1a7
  212b28:	add	x3, x3, #0x2a0
  212b2c:	mov	w2, #0x3a7                 	// #935
  212b30:	bl	215330 <log_oom_internal@plt>
  212b34:	mov	w20, w0
  212b38:	b	212b84 <run+0x158>
  212b3c:	mov	w8, wzr
  212b40:	neg	w9, w19
  212b44:	sub	w20, w8, w9, uxtb
  212b48:	b	212b84 <run+0x158>
  212b4c:	str	w20, [sp, #8]
  212b50:	str	xzr, [sp, #16]
  212b54:	add	x1, sp, #0x8
  212b58:	add	x2, sp, #0x18
  212b5c:	mov	x0, x19
  212b60:	bl	2134ec <hashmap_iterate>
  212b64:	tbz	w0, #0, 212b80 <run+0x154>
  212b68:	ldr	x0, [sp, #24]
  212b6c:	mov	x1, x19
  212b70:	bl	213c88 <fix_order>
  212b74:	ldr	x0, [sp, #24]
  212b78:	bl	213dbc <generate_unit_file>
  212b7c:	b	212b54 <run+0x128>
  212b80:	mov	w20, wzr
  212b84:	add	x0, sp, #0x20
  212b88:	bl	215340 <lookup_paths_free@plt>
  212b8c:	sub	x0, x29, #0x8
  212b90:	bl	212c28 <free_sysvstub_hashmapp>
  212b94:	mov	w0, w20
  212b98:	ldp	x20, x19, [sp, #160]
  212b9c:	ldp	x29, x30, [sp, #144]
  212ba0:	add	sp, sp, #0xb0
  212ba4:	ret
  212ba8:	adrp	x1, 201000 <rcnd_table-0x15f8>
  212bac:	adrp	x2, 202000 <rcnd_table-0x5f8>
  212bb0:	adrp	x4, 201000 <rcnd_table-0x15f8>
  212bb4:	add	x1, x1, #0xaf8
  212bb8:	add	x2, x2, #0x1a7
  212bbc:	add	x4, x4, #0xf41
  212bc0:	mov	w3, #0x39f                 	// #927
  212bc4:	bl	215350 <log_assert_failed_realm@plt>

0000000000212bc8 <static_destruct>:
  212bc8:	stp	x29, x30, [sp, #-32]!
  212bcc:	stp	x20, x19, [sp, #16]
  212bd0:	adrp	x8, 225000 <__fxstatat64@plt+0xf900>
  212bd4:	ldr	x8, [x8, #2296]
  212bd8:	mov	x29, sp
  212bdc:	cbz	x8, 212c1c <static_destruct+0x54>
  212be0:	adrp	x0, 225000 <__fxstatat64@plt+0xf900>
  212be4:	ldr	x0, [x0, #2296]
  212be8:	bl	215170 <ALIGN_TO>
  212bec:	adrp	x20, 225000 <__fxstatat64@plt+0xf900>
  212bf0:	ldr	x20, [x20, #2304]
  212bf4:	cmp	x0, x20
  212bf8:	b.cs	212c1c <static_destruct+0x54>  // b.hs, b.nlast
  212bfc:	mov	x19, x0
  212c00:	ldp	x0, x8, [x19]
  212c04:	blr	x8
  212c08:	add	x0, x19, #0x10
  212c0c:	bl	215170 <ALIGN_TO>
  212c10:	mov	x19, x0
  212c14:	cmp	x0, x20
  212c18:	b.cc	212c00 <static_destruct+0x38>  // b.lo, b.ul, b.last
  212c1c:	ldp	x20, x19, [sp, #16]
  212c20:	ldp	x29, x30, [sp], #32
  212c24:	ret

0000000000212c28 <free_sysvstub_hashmapp>:
  212c28:	stp	x29, x30, [sp, #-32]!
  212c2c:	str	x19, [sp, #16]
  212c30:	mov	x19, x0
  212c34:	ldr	x0, [x0]
  212c38:	mov	x29, sp
  212c3c:	bl	21424c <hashmap_steal_first>
  212c40:	cbz	x0, 212c54 <free_sysvstub_hashmapp+0x2c>
  212c44:	bl	214268 <free_sysvstub>
  212c48:	ldr	x0, [x19]
  212c4c:	bl	21424c <hashmap_steal_first>
  212c50:	cbnz	x0, 212c44 <free_sysvstub_hashmapp+0x1c>
  212c54:	ldr	x0, [x19]
  212c58:	bl	2142d0 <hashmap_free>
  212c5c:	ldr	x19, [sp, #16]
  212c60:	ldp	x29, x30, [sp], #32
  212c64:	ret

0000000000212c68 <enumerate_sysv>:
  212c68:	sub	sp, sp, #0x120
  212c6c:	stp	x29, x30, [sp, #192]
  212c70:	add	x29, sp, #0xc0
  212c74:	stp	x28, x27, [sp, #208]
  212c78:	stp	x26, x25, [sp, #224]
  212c7c:	stp	x24, x23, [sp, #240]
  212c80:	stp	x22, x21, [sp, #256]
  212c84:	stp	x20, x19, [sp, #272]
  212c88:	stur	xzr, [x29, #-16]
  212c8c:	str	x0, [sp, #8]
  212c90:	cbz	x0, 213010 <enumerate_sysv+0x3a8>
  212c94:	mov	x19, x1
  212c98:	adrp	x0, 202000 <rcnd_table-0x5f8>
  212c9c:	adrp	x1, 201000 <rcnd_table-0x15f8>
  212ca0:	add	x0, x0, #0x467
  212ca4:	add	x1, x1, #0xb92
  212ca8:	sub	x2, x29, #0x10
  212cac:	bl	214308 <acquire_search_path>
  212cb0:	tbnz	w0, #31, 212fe0 <enumerate_sysv+0x378>
  212cb4:	ldur	x25, [x29, #-16]
  212cb8:	cbz	x25, 212fd8 <enumerate_sysv+0x370>
  212cbc:	ldr	x8, [x25]
  212cc0:	cbz	x8, 212fd8 <enumerate_sysv+0x370>
  212cc4:	adrp	x22, 201000 <rcnd_table-0x15f8>
  212cc8:	add	x22, x22, #0xecf
  212ccc:	mov	w20, #0xf040                	// #61504
  212cd0:	mov	w21, #0x8040                	// #32832
  212cd4:	b	212ce0 <enumerate_sysv+0x78>
  212cd8:	ldr	x8, [x25, #8]!
  212cdc:	cbz	x8, 212fd8 <enumerate_sysv+0x370>
  212ce0:	stur	xzr, [x29, #-24]
  212ce4:	ldr	x0, [x25]
  212ce8:	bl	215360 <opendir@plt>
  212cec:	mov	x23, x0
  212cf0:	stur	x0, [x29, #-24]
  212cf4:	bl	215370 <__errno_location@plt>
  212cf8:	mov	x26, x0
  212cfc:	cbz	x23, 212f78 <enumerate_sysv+0x310>
  212d00:	mov	x0, x23
  212d04:	str	wzr, [x26]
  212d08:	b	212d14 <enumerate_sysv+0xac>
  212d0c:	str	wzr, [x26]
  212d10:	ldur	x0, [x29, #-24]
  212d14:	bl	215380 <readdir64@plt>
  212d18:	cbz	x0, 212f2c <enumerate_sysv+0x2c4>
  212d1c:	add	x23, x0, #0x13
  212d20:	mov	x0, x23
  212d24:	bl	215390 <hidden_or_backup_file@plt>
  212d28:	tbnz	w0, #0, 212d0c <enumerate_sysv+0xa4>
  212d2c:	ldur	x0, [x29, #-24]
  212d30:	stp	xzr, xzr, [x29, #-40]
  212d34:	stur	xzr, [x29, #-48]
  212d38:	bl	2153a0 <dirfd@plt>
  212d3c:	add	x2, sp, #0x10
  212d40:	mov	x1, x23
  212d44:	mov	w3, wzr
  212d48:	bl	215208 <fstatat64>
  212d4c:	tbnz	w0, #31, 212ddc <enumerate_sysv+0x174>
  212d50:	ldr	w8, [sp, #32]
  212d54:	and	w8, w8, w20
  212d58:	cmp	w8, w21
  212d5c:	b.ne	212e18 <enumerate_sysv+0x1b0>  // b.any
  212d60:	mov	x0, x23
  212d64:	bl	2144dc <sysv_translate_name>
  212d68:	stur	x0, [x29, #-40]
  212d6c:	cbz	x0, 212e44 <enumerate_sysv+0x1dc>
  212d70:	mov	x27, x0
  212d74:	mov	x0, x19
  212d78:	mov	x1, x27
  212d7c:	bl	214550 <hashmap_contains>
  212d80:	tbnz	w0, #0, 212e18 <enumerate_sysv+0x1b0>
  212d84:	ldr	x1, [sp, #8]
  212d88:	mov	w0, wzr
  212d8c:	mov	x2, x27
  212d90:	bl	2153b0 <unit_file_exists@plt>
  212d94:	mov	w24, w0
  212d98:	tbnz	w0, #31, 212e64 <enumerate_sysv+0x1fc>
  212d9c:	cbz	w24, 212eb0 <enumerate_sysv+0x248>
  212da0:	mov	w0, wzr
  212da4:	bl	2152b0 <log_get_max_level_realm@plt>
  212da8:	cmp	w0, #0x7
  212dac:	b.lt	212e18 <enumerate_sysv+0x1b0>  // b.tstop
  212db0:	adrp	x2, 202000 <rcnd_table-0x5f8>
  212db4:	adrp	x5, 202000 <rcnd_table-0x5f8>
  212db8:	mov	w0, #0x7                   	// #7
  212dbc:	mov	w3, #0x30f                 	// #783
  212dc0:	mov	w1, wzr
  212dc4:	add	x2, x2, #0x1a7
  212dc8:	mov	x4, x22
  212dcc:	add	x5, x5, #0x201
  212dd0:	mov	x6, x27
  212dd4:	bl	2152c0 <log_internal_realm@plt>
  212dd8:	b	212e18 <enumerate_sysv+0x1b0>
  212ddc:	mov	w0, wzr
  212de0:	bl	2152b0 <log_get_max_level_realm@plt>
  212de4:	cmp	w0, #0x4
  212de8:	b.lt	212e18 <enumerate_sysv+0x1b0>  // b.tstop
  212dec:	ldr	w1, [x26]
  212df0:	ldr	x6, [x25]
  212df4:	adrp	x2, 202000 <rcnd_table-0x5f8>
  212df8:	adrp	x5, 202000 <rcnd_table-0x5f8>
  212dfc:	mov	w0, #0x4                   	// #4
  212e00:	mov	w3, #0x2f9                 	// #761
  212e04:	add	x2, x2, #0x1a7
  212e08:	mov	x4, x22
  212e0c:	add	x5, x5, #0x259
  212e10:	mov	x7, x23
  212e14:	bl	2152c0 <log_internal_realm@plt>
  212e18:	mov	w24, #0x9                   	// #9
  212e1c:	sub	x0, x29, #0x30
  212e20:	bl	2144c0 <free_sysvstubp>
  212e24:	sub	x0, x29, #0x28
  212e28:	bl	2144a8 <freep>
  212e2c:	sub	x0, x29, #0x20
  212e30:	bl	2144a8 <freep>
  212e34:	cmp	w24, #0x9
  212e38:	b.eq	212d0c <enumerate_sysv+0xa4>  // b.none
  212e3c:	cbz	w24, 212d0c <enumerate_sysv+0xa4>
  212e40:	b	212fc0 <enumerate_sysv+0x358>
  212e44:	mov	w2, #0x305                 	// #773
  212e48:	adrp	x1, 202000 <rcnd_table-0x5f8>
  212e4c:	add	x1, x1, #0x1a7
  212e50:	mov	x3, x22
  212e54:	bl	215330 <log_oom_internal@plt>
  212e58:	mov	w28, w0
  212e5c:	mov	w24, #0x1                   	// #1
  212e60:	b	212e1c <enumerate_sysv+0x1b4>
  212e64:	cmn	w24, #0x84
  212e68:	b.eq	212da0 <enumerate_sysv+0x138>  // b.none
  212e6c:	cmn	w24, #0x63
  212e70:	b.eq	212da0 <enumerate_sysv+0x138>  // b.none
  212e74:	cmn	w24, #0x28
  212e78:	b.eq	212da0 <enumerate_sysv+0x138>  // b.none
  212e7c:	mov	w0, wzr
  212e80:	bl	2152b0 <log_get_max_level_realm@plt>
  212e84:	cmp	w0, #0x7
  212e88:	b.lt	212e18 <enumerate_sysv+0x1b0>  // b.tstop
  212e8c:	adrp	x2, 202000 <rcnd_table-0x5f8>
  212e90:	adrp	x5, 202000 <rcnd_table-0x5f8>
  212e94:	mov	w0, #0x7                   	// #7
  212e98:	mov	w3, #0x30c                 	// #780
  212e9c:	mov	w1, w24
  212ea0:	add	x2, x2, #0x1a7
  212ea4:	mov	x4, x22
  212ea8:	add	x5, x5, #0x2a4
  212eac:	b	212dd0 <enumerate_sysv+0x168>
  212eb0:	ldr	x0, [x25]
  212eb4:	mov	x2, #0xffffffffffffffff    	// #-1
  212eb8:	mov	x1, x23
  212ebc:	bl	2153c0 <path_join_internal@plt>
  212ec0:	stur	x0, [x29, #-32]
  212ec4:	cbz	x0, 212f10 <enumerate_sysv+0x2a8>
  212ec8:	mov	w0, #0x1                   	// #1
  212ecc:	mov	w1, #0x50                  	// #80
  212ed0:	bl	2153d0 <calloc@plt>
  212ed4:	stur	x0, [x29, #-48]
  212ed8:	cbz	x0, 212f18 <enumerate_sysv+0x2b0>
  212edc:	ldp	x2, x1, [x29, #-48]
  212ee0:	mov	w8, #0xffffffff            	// #-1
  212ee4:	str	w8, [x0, #24]
  212ee8:	mov	x0, x19
  212eec:	str	x1, [x2]
  212ef0:	ldur	x8, [x29, #-32]
  212ef4:	stp	xzr, xzr, [x29, #-40]
  212ef8:	str	x8, [x2, #8]
  212efc:	bl	2153e0 <hashmap_put@plt>
  212f00:	tbnz	w0, #31, 212f20 <enumerate_sysv+0x2b8>
  212f04:	mov	w24, wzr
  212f08:	stur	xzr, [x29, #-48]
  212f0c:	b	212e1c <enumerate_sysv+0x1b4>
  212f10:	mov	w2, #0x315                 	// #789
  212f14:	b	212e48 <enumerate_sysv+0x1e0>
  212f18:	mov	w2, #0x319                 	// #793
  212f1c:	b	212e48 <enumerate_sysv+0x1e0>
  212f20:	mov	w2, #0x321                 	// #801
  212f24:	mov	w0, wzr
  212f28:	b	212e48 <enumerate_sysv+0x1e0>
  212f2c:	ldr	w23, [x26]
  212f30:	cmp	w23, #0x1
  212f34:	b.lt	212f70 <enumerate_sysv+0x308>  // b.tstop
  212f38:	mov	w0, wzr
  212f3c:	bl	2152b0 <log_get_max_level_realm@plt>
  212f40:	cmp	w0, #0x3
  212f44:	b.lt	212f70 <enumerate_sysv+0x308>  // b.tstop
  212f48:	ldr	x6, [x25]
  212f4c:	adrp	x2, 202000 <rcnd_table-0x5f8>
  212f50:	adrp	x5, 202000 <rcnd_table-0x5f8>
  212f54:	mov	w0, #0x3                   	// #3
  212f58:	mov	w3, #0x2f3                 	// #755
  212f5c:	mov	w1, w23
  212f60:	add	x2, x2, #0x1a7
  212f64:	mov	x4, x22
  212f68:	add	x5, x5, #0x5ae
  212f6c:	bl	2152c0 <log_internal_realm@plt>
  212f70:	mov	w24, wzr
  212f74:	b	212fc0 <enumerate_sysv+0x358>
  212f78:	ldr	w23, [x26]
  212f7c:	cmp	w23, #0x2
  212f80:	b.eq	212fbc <enumerate_sysv+0x354>  // b.none
  212f84:	mov	w0, wzr
  212f88:	bl	2152b0 <log_get_max_level_realm@plt>
  212f8c:	cmp	w0, #0x4
  212f90:	b.lt	212fbc <enumerate_sysv+0x354>  // b.tstop
  212f94:	ldr	x6, [x25]
  212f98:	adrp	x2, 202000 <rcnd_table-0x5f8>
  212f9c:	adrp	x5, 201000 <rcnd_table-0x15f8>
  212fa0:	mov	w0, #0x4                   	// #4
  212fa4:	mov	w3, #0x2ef                 	// #751
  212fa8:	mov	w1, w23
  212fac:	add	x2, x2, #0x1a7
  212fb0:	mov	x4, x22
  212fb4:	add	x5, x5, #0xdd9
  212fb8:	bl	2152c0 <log_internal_realm@plt>
  212fbc:	mov	w24, #0x6                   	// #6
  212fc0:	sub	x0, x29, #0x18
  212fc4:	bl	21448c <closedirp>
  212fc8:	cmp	w24, #0x6
  212fcc:	b.eq	212cd8 <enumerate_sysv+0x70>  // b.none
  212fd0:	cbz	w24, 212cd8 <enumerate_sysv+0x70>
  212fd4:	b	212fe4 <enumerate_sysv+0x37c>
  212fd8:	mov	w28, wzr
  212fdc:	b	212fe4 <enumerate_sysv+0x37c>
  212fe0:	mov	w28, w0
  212fe4:	sub	x0, x29, #0x10
  212fe8:	bl	2142ec <strv_freep>
  212fec:	mov	w0, w28
  212ff0:	ldp	x20, x19, [sp, #272]
  212ff4:	ldp	x22, x21, [sp, #256]
  212ff8:	ldp	x24, x23, [sp, #240]
  212ffc:	ldp	x26, x25, [sp, #224]
  213000:	ldp	x28, x27, [sp, #208]
  213004:	ldp	x29, x30, [sp, #192]
  213008:	add	sp, sp, #0x120
  21300c:	ret
  213010:	adrp	x1, 201000 <rcnd_table-0x15f8>
  213014:	adrp	x2, 202000 <rcnd_table-0x5f8>
  213018:	adrp	x4, 202000 <rcnd_table-0x5f8>
  21301c:	add	x1, x1, #0xcd7
  213020:	add	x2, x2, #0x1a7
  213024:	add	x4, x4, #0x2eb
  213028:	mov	w3, #0x2e2                 	// #738
  21302c:	bl	215350 <log_assert_failed_realm@plt>

0000000000213030 <set_dependencies_from_rcnd>:
  213030:	sub	sp, sp, #0xf0
  213034:	stp	x29, x30, [sp, #144]
  213038:	add	x29, sp, #0x90
  21303c:	movi	v0.2d, #0x0
  213040:	stp	x28, x27, [sp, #160]
  213044:	stp	x26, x25, [sp, #176]
  213048:	stp	x24, x23, [sp, #192]
  21304c:	stp	x22, x21, [sp, #208]
  213050:	stp	x20, x19, [sp, #224]
  213054:	str	x1, [sp, #24]
  213058:	stur	xzr, [x29, #-16]
  21305c:	stp	q0, q0, [x29, #-48]
  213060:	stur	xzr, [x29, #-56]
  213064:	cbz	x0, 2134cc <set_dependencies_from_rcnd+0x49c>
  213068:	adrp	x0, 202000 <rcnd_table-0x5f8>
  21306c:	adrp	x1, 202000 <rcnd_table-0x5f8>
  213070:	add	x0, x0, #0x332
  213074:	add	x1, x1, #0x518
  213078:	sub	x2, x29, #0x38
  21307c:	bl	214308 <acquire_search_path>
  213080:	mov	w19, w0
  213084:	tbnz	w0, #31, 2134a0 <set_dependencies_from_rcnd+0x470>
  213088:	ldur	x8, [x29, #-56]
  21308c:	str	x8, [sp, #32]
  213090:	cbz	x8, 2133c0 <set_dependencies_from_rcnd+0x390>
  213094:	ldr	x8, [sp, #32]
  213098:	ldr	x8, [x8]
  21309c:	cbz	x8, 2133c0 <set_dependencies_from_rcnd+0x390>
  2130a0:	mov	x23, xzr
  2130a4:	b	2130b4 <set_dependencies_from_rcnd+0x84>
  2130a8:	add	x23, x23, #0x1
  2130ac:	cmp	x23, #0x5
  2130b0:	b.eq	2133b0 <set_dependencies_from_rcnd+0x380>  // b.none
  2130b4:	ldr	x9, [sp, #32]
  2130b8:	stp	xzr, xzr, [sp, #56]
  2130bc:	lsl	x8, x23, #4
  2130c0:	mov	x2, #0xffffffffffffffff    	// #-1
  2130c4:	ldr	x0, [x9]
  2130c8:	adrp	x9, 202000 <rcnd_table-0x5f8>
  2130cc:	add	x9, x9, #0x5f8
  2130d0:	ldr	x21, [x9, x8]
  2130d4:	mov	x1, x21
  2130d8:	bl	2153c0 <path_join_internal@plt>
  2130dc:	str	x0, [sp, #56]
  2130e0:	cbz	x0, 2132d0 <set_dependencies_from_rcnd+0x2a0>
  2130e4:	mov	x26, x0
  2130e8:	bl	215360 <opendir@plt>
  2130ec:	mov	x25, x0
  2130f0:	str	x0, [sp, #64]
  2130f4:	bl	215370 <__errno_location@plt>
  2130f8:	mov	x28, x0
  2130fc:	cbz	x25, 213344 <set_dependencies_from_rcnd+0x314>
  213100:	mov	x0, x25
  213104:	str	wzr, [x28]
  213108:	bl	215380 <readdir64@plt>
  21310c:	cbz	x0, 2132f4 <set_dependencies_from_rcnd+0x2c4>
  213110:	sub	x8, x29, #0x30
  213114:	mov	x20, x0
  213118:	add	x27, x8, x23, lsl #3
  21311c:	str	x21, [sp, #16]
  213120:	b	213138 <set_dependencies_from_rcnd+0x108>
  213124:	mov	x0, x25
  213128:	str	wzr, [x28]
  21312c:	bl	215380 <readdir64@plt>
  213130:	mov	x20, x0
  213134:	cbz	x0, 2132f4 <set_dependencies_from_rcnd+0x2c4>
  213138:	add	x24, x20, #0x13
  21313c:	mov	x0, x24
  213140:	bl	215390 <hidden_or_backup_file@plt>
  213144:	tbnz	w0, #0, 213124 <set_dependencies_from_rcnd+0xf4>
  213148:	stp	xzr, xzr, [sp, #40]
  21314c:	ldrb	w8, [x24]
  213150:	cmp	w8, #0x53
  213154:	b.ne	213280 <set_dependencies_from_rcnd+0x250>  // b.any
  213158:	mov	x0, x24
  21315c:	bl	2153f0 <strlen@plt>
  213160:	cmp	x0, #0x4
  213164:	b.cc	213280 <set_dependencies_from_rcnd+0x250>  // b.lo, b.ul, b.last
  213168:	ldrb	w0, [x20, #20]
  21316c:	bl	215400 <undecchar@plt>
  213170:	ldrb	w8, [x20, #21]
  213174:	mov	w21, w0
  213178:	mov	w0, w8
  21317c:	bl	215400 <undecchar@plt>
  213180:	orr	w8, w0, w21
  213184:	tbnz	w8, #31, 213280 <set_dependencies_from_rcnd+0x250>
  213188:	ldr	x8, [sp, #32]
  21318c:	mov	w22, w0
  213190:	mov	x2, #0xffffffffffffffff    	// #-1
  213194:	mov	x1, x24
  213198:	ldr	x0, [x8]
  21319c:	bl	2153c0 <path_join_internal@plt>
  2131a0:	str	x0, [sp, #40]
  2131a4:	cbz	x0, 213214 <set_dependencies_from_rcnd+0x1e4>
  2131a8:	add	x0, x20, #0x16
  2131ac:	bl	2144dc <sysv_translate_name>
  2131b0:	str	x0, [sp, #48]
  2131b4:	cbz	x0, 21321c <set_dependencies_from_rcnd+0x1ec>
  2131b8:	mov	x20, x0
  2131bc:	ldr	x0, [sp, #24]
  2131c0:	mov	x1, x20
  2131c4:	bl	2145ac <hashmap_get>
  2131c8:	stur	x0, [x29, #-64]
  2131cc:	cbz	x0, 213240 <set_dependencies_from_rcnd+0x210>
  2131d0:	ldr	w8, [x0, #24]
  2131d4:	mov	w9, #0xa                   	// #10
  2131d8:	madd	w9, w21, w9, w22
  2131dc:	mov	x1, xzr
  2131e0:	cmp	w9, w8
  2131e4:	csel	w8, w9, w8, gt
  2131e8:	str	w8, [x0, #24]
  2131ec:	mov	x0, x27
  2131f0:	bl	215410 <internal_set_ensure_allocated@plt>
  2131f4:	tbnz	w0, #31, 2132a4 <set_dependencies_from_rcnd+0x274>
  2131f8:	ldr	x0, [x27]
  2131fc:	ldur	x1, [x29, #-64]
  213200:	bl	215420 <set_put@plt>
  213204:	mov	w19, w0
  213208:	tbnz	w0, #31, 2132b0 <set_dependencies_from_rcnd+0x280>
  21320c:	mov	w21, wzr
  213210:	b	213284 <set_dependencies_from_rcnd+0x254>
  213214:	mov	w2, #0x360                 	// #864
  213218:	b	213220 <set_dependencies_from_rcnd+0x1f0>
  21321c:	mov	w2, #0x366                 	// #870
  213220:	adrp	x1, 202000 <rcnd_table-0x5f8>
  213224:	adrp	x3, 201000 <rcnd_table-0x15f8>
  213228:	add	x1, x1, #0x1a7
  21322c:	add	x3, x3, #0xf73
  213230:	bl	215330 <log_oom_internal@plt>
  213234:	mov	w19, w0
  213238:	mov	w21, #0xa                   	// #10
  21323c:	b	213284 <set_dependencies_from_rcnd+0x254>
  213240:	bl	2152b0 <log_get_max_level_realm@plt>
  213244:	cmp	w0, #0x7
  213248:	b.lt	213280 <set_dependencies_from_rcnd+0x250>  // b.tstop
  21324c:	ldr	x7, [sp, #16]
  213250:	adrp	x2, 202000 <rcnd_table-0x5f8>
  213254:	adrp	x4, 201000 <rcnd_table-0x15f8>
  213258:	adrp	x5, 202000 <rcnd_table-0x5f8>
  21325c:	mov	w0, #0x7                   	// #7
  213260:	mov	w3, #0x36c                 	// #876
  213264:	mov	w1, wzr
  213268:	add	x2, x2, #0x1a7
  21326c:	add	x4, x4, #0xf73
  213270:	add	x5, x5, #0x49f
  213274:	mov	x6, x24
  213278:	str	x20, [sp]
  21327c:	bl	2152c0 <log_internal_realm@plt>
  213280:	mov	w21, #0xd                   	// #13
  213284:	add	x0, sp, #0x28
  213288:	bl	2144a8 <freep>
  21328c:	add	x0, sp, #0x30
  213290:	bl	2144a8 <freep>
  213294:	cmp	w21, #0xd
  213298:	b.eq	213124 <set_dependencies_from_rcnd+0xf4>  // b.none
  21329c:	cbz	w21, 213124 <set_dependencies_from_rcnd+0xf4>
  2132a0:	b	213390 <set_dependencies_from_rcnd+0x360>
  2132a4:	mov	w19, w0
  2132a8:	mov	w2, #0x374                 	// #884
  2132ac:	b	2132b4 <set_dependencies_from_rcnd+0x284>
  2132b0:	mov	w2, #0x37a                 	// #890
  2132b4:	adrp	x1, 202000 <rcnd_table-0x5f8>
  2132b8:	adrp	x3, 201000 <rcnd_table-0x15f8>
  2132bc:	mov	w0, wzr
  2132c0:	add	x1, x1, #0x1a7
  2132c4:	add	x3, x3, #0xf73
  2132c8:	bl	215330 <log_oom_internal@plt>
  2132cc:	b	213238 <set_dependencies_from_rcnd+0x208>
  2132d0:	adrp	x1, 202000 <rcnd_table-0x5f8>
  2132d4:	adrp	x3, 201000 <rcnd_table-0x15f8>
  2132d8:	mov	w2, #0x342                 	// #834
  2132dc:	add	x1, x1, #0x1a7
  2132e0:	add	x3, x3, #0xf73
  2132e4:	bl	215330 <log_oom_internal@plt>
  2132e8:	mov	w19, w0
  2132ec:	mov	w21, #0xa                   	// #10
  2132f0:	b	213390 <set_dependencies_from_rcnd+0x360>
  2132f4:	ldr	w20, [x28]
  2132f8:	cmp	w20, #0x1
  2132fc:	b.lt	21333c <set_dependencies_from_rcnd+0x30c>  // b.tstop
  213300:	mov	w0, wzr
  213304:	bl	2152b0 <log_get_max_level_realm@plt>
  213308:	cmp	w0, #0x3
  21330c:	b.lt	21333c <set_dependencies_from_rcnd+0x30c>  // b.tstop
  213310:	adrp	x2, 202000 <rcnd_table-0x5f8>
  213314:	adrp	x4, 201000 <rcnd_table-0x15f8>
  213318:	adrp	x5, 202000 <rcnd_table-0x5f8>
  21331c:	mov	w0, #0x3                   	// #3
  213320:	mov	w3, #0x34e                 	// #846
  213324:	mov	w1, w20
  213328:	add	x2, x2, #0x1a7
  21332c:	add	x4, x4, #0xf73
  213330:	add	x5, x5, #0x5ae
  213334:	mov	x6, x26
  213338:	bl	2152c0 <log_internal_realm@plt>
  21333c:	mov	w21, wzr
  213340:	b	213390 <set_dependencies_from_rcnd+0x360>
  213344:	ldr	w20, [x28]
  213348:	cmp	w20, #0x2
  21334c:	b.eq	21338c <set_dependencies_from_rcnd+0x35c>  // b.none
  213350:	mov	w0, wzr
  213354:	bl	2152b0 <log_get_max_level_realm@plt>
  213358:	cmp	w0, #0x4
  21335c:	b.lt	21338c <set_dependencies_from_rcnd+0x35c>  // b.tstop
  213360:	adrp	x2, 202000 <rcnd_table-0x5f8>
  213364:	adrp	x4, 201000 <rcnd_table-0x15f8>
  213368:	adrp	x5, 201000 <rcnd_table-0x15f8>
  21336c:	mov	w0, #0x4                   	// #4
  213370:	mov	w3, #0x349                 	// #841
  213374:	mov	w1, w20
  213378:	add	x2, x2, #0x1a7
  21337c:	add	x4, x4, #0xf73
  213380:	add	x5, x5, #0xdd9
  213384:	mov	x6, x26
  213388:	bl	2152c0 <log_internal_realm@plt>
  21338c:	mov	w21, #0x9                   	// #9
  213390:	add	x0, sp, #0x38
  213394:	bl	2144a8 <freep>
  213398:	add	x0, sp, #0x40
  21339c:	bl	21448c <closedirp>
  2133a0:	cbz	w21, 2130a8 <set_dependencies_from_rcnd+0x78>
  2133a4:	cmp	w21, #0x9
  2133a8:	b.eq	2130a8 <set_dependencies_from_rcnd+0x78>  // b.none
  2133ac:	b	21343c <set_dependencies_from_rcnd+0x40c>
  2133b0:	ldr	x9, [sp, #32]
  2133b4:	ldr	x8, [x9, #8]!
  2133b8:	str	x9, [sp, #32]
  2133bc:	cbnz	x8, 2130a0 <set_dependencies_from_rcnd+0x70>
  2133c0:	mov	x21, xzr
  2133c4:	mov	w22, #0xfffffffe            	// #-2
  2133c8:	sub	x23, x29, #0x30
  2133cc:	adrp	x8, 202000 <rcnd_table-0x5f8>
  2133d0:	add	x8, x8, #0x5f8
  2133d4:	add	x8, x8, x21, lsl #4
  2133d8:	add	x24, x8, #0x8
  2133dc:	str	w22, [sp, #64]
  2133e0:	str	xzr, [sp, #72]
  2133e4:	ldr	x0, [x23, x21, lsl #3]
  2133e8:	add	x1, sp, #0x40
  2133ec:	sub	x2, x29, #0x40
  2133f0:	bl	215430 <set_iterate@plt>
  2133f4:	tbz	w0, #0, 213428 <set_dependencies_from_rcnd+0x3f8>
  2133f8:	ldur	x8, [x29, #-64]
  2133fc:	ldr	x20, [x24]
  213400:	add	x0, x8, #0x28
  213404:	mov	x1, x20
  213408:	bl	215440 <strv_extend@plt>
  21340c:	tbnz	w0, #31, 213448 <set_dependencies_from_rcnd+0x418>
  213410:	ldur	x8, [x29, #-64]
  213414:	mov	x1, x20
  213418:	add	x0, x8, #0x40
  21341c:	bl	215440 <strv_extend@plt>
  213420:	tbz	w0, #31, 2133e4 <set_dependencies_from_rcnd+0x3b4>
  213424:	b	213464 <set_dependencies_from_rcnd+0x434>
  213428:	add	x21, x21, #0x1
  21342c:	cmp	x21, #0x5
  213430:	b.ne	2133cc <set_dependencies_from_rcnd+0x39c>  // b.any
  213434:	mov	w19, wzr
  213438:	b	213484 <set_dependencies_from_rcnd+0x454>
  21343c:	cmp	w21, #0xa
  213440:	b.eq	213484 <set_dependencies_from_rcnd+0x454>  // b.none
  213444:	b	2134a0 <set_dependencies_from_rcnd+0x470>
  213448:	adrp	x1, 202000 <rcnd_table-0x5f8>
  21344c:	adrp	x3, 201000 <rcnd_table-0x15f8>
  213450:	mov	w19, w0
  213454:	add	x1, x1, #0x1a7
  213458:	add	x3, x3, #0xf73
  21345c:	mov	w2, #0x385                 	// #901
  213460:	b	21347c <set_dependencies_from_rcnd+0x44c>
  213464:	adrp	x1, 202000 <rcnd_table-0x5f8>
  213468:	adrp	x3, 201000 <rcnd_table-0x15f8>
  21346c:	mov	w19, w0
  213470:	add	x1, x1, #0x1a7
  213474:	add	x3, x3, #0xf73
  213478:	mov	w2, #0x38a                 	// #906
  21347c:	mov	w0, wzr
  213480:	bl	215330 <log_oom_internal@plt>
  213484:	mov	x20, xzr
  213488:	sub	x21, x29, #0x30
  21348c:	ldr	x0, [x21, x20]
  213490:	bl	2145c0 <set_free>
  213494:	add	x20, x20, #0x8
  213498:	cmp	x20, #0x28
  21349c:	b.ne	21348c <set_dependencies_from_rcnd+0x45c>  // b.any
  2134a0:	sub	x0, x29, #0x38
  2134a4:	bl	2142ec <strv_freep>
  2134a8:	mov	w0, w19
  2134ac:	ldp	x20, x19, [sp, #224]
  2134b0:	ldp	x22, x21, [sp, #208]
  2134b4:	ldp	x24, x23, [sp, #192]
  2134b8:	ldp	x26, x25, [sp, #176]
  2134bc:	ldp	x28, x27, [sp, #160]
  2134c0:	ldp	x29, x30, [sp, #144]
  2134c4:	add	sp, sp, #0xf0
  2134c8:	ret
  2134cc:	adrp	x1, 201000 <rcnd_table-0x15f8>
  2134d0:	adrp	x2, 202000 <rcnd_table-0x5f8>
  2134d4:	adrp	x4, 201000 <rcnd_table-0x15f8>
  2134d8:	add	x1, x1, #0xcd7
  2134dc:	add	x2, x2, #0x1a7
  2134e0:	add	x4, x4, #0xbfd
  2134e4:	mov	w3, #0x333                 	// #819
  2134e8:	bl	215350 <log_assert_failed_realm@plt>

00000000002134ec <hashmap_iterate>:
  2134ec:	stp	x29, x30, [sp, #-16]!
  2134f0:	mov	x3, xzr
  2134f4:	mov	x29, sp
  2134f8:	bl	215450 <internal_hashmap_iterate@plt>
  2134fc:	and	w0, w0, #0x1
  213500:	ldp	x29, x30, [sp], #16
  213504:	ret

0000000000213508 <load_sysv>:
  213508:	sub	sp, sp, #0x90
  21350c:	stp	x29, x30, [sp, #48]
  213510:	add	x29, sp, #0x30
  213514:	stp	x28, x27, [sp, #64]
  213518:	stp	x26, x25, [sp, #80]
  21351c:	stp	x24, x23, [sp, #96]
  213520:	stp	x22, x21, [sp, #112]
  213524:	stp	x20, x19, [sp, #128]
  213528:	stur	xzr, [x29, #-16]
  21352c:	stp	xzr, xzr, [sp, #16]
  213530:	cbz	x0, 213c68 <load_sysv+0x760>
  213534:	mov	x19, x0
  213538:	ldr	x0, [x0, #8]
  21353c:	adrp	x1, 201000 <rcnd_table-0x15f8>
  213540:	add	x1, x1, #0xba8
  213544:	bl	215460 <fopen64@plt>
  213548:	stur	x0, [x29, #-8]
  21354c:	cbz	x0, 213bc0 <load_sysv+0x6b8>
  213550:	mov	w0, wzr
  213554:	bl	2152b0 <log_get_max_level_realm@plt>
  213558:	cmp	w0, #0x7
  21355c:	b.lt	21358c <load_sysv+0x84>  // b.tstop
  213560:	ldr	x6, [x19, #8]
  213564:	adrp	x2, 202000 <rcnd_table-0x5f8>
  213568:	adrp	x4, 201000 <rcnd_table-0x15f8>
  21356c:	adrp	x5, 201000 <rcnd_table-0x15f8>
  213570:	add	x2, x2, #0x1a7
  213574:	add	x4, x4, #0xf8e
  213578:	add	x5, x5, #0xd4c
  21357c:	mov	w0, #0x7                   	// #7
  213580:	mov	w3, #0x1bf                 	// #447
  213584:	mov	w1, wzr
  213588:	bl	2152c0 <log_internal_realm@plt>
  21358c:	adrp	x22, 202000 <rcnd_table-0x5f8>
  213590:	adrp	x23, 201000 <rcnd_table-0x15f8>
  213594:	adrp	x24, 202000 <rcnd_table-0x5f8>
  213598:	adrp	x27, 202000 <rcnd_table-0x5f8>
  21359c:	mov	w26, wzr
  2135a0:	mov	w21, wzr
  2135a4:	mov	w20, wzr
  2135a8:	add	x8, x19, #0x20
  2135ac:	add	x22, x22, #0x1a7
  2135b0:	add	x23, x23, #0xf8e
  2135b4:	add	x24, x24, #0x3f9
  2135b8:	add	x27, x27, #0x5e3
  2135bc:	str	x8, [sp]
  2135c0:	ldur	x0, [x29, #-8]
  2135c4:	add	x1, sp, #0x8
  2135c8:	str	xzr, [sp, #8]
  2135cc:	bl	2145f4 <read_line>
  2135d0:	mov	w28, w0
  2135d4:	tbnz	w0, #31, 21368c <load_sysv+0x184>
  2135d8:	cbz	w28, 2136c4 <load_sysv+0x1bc>
  2135dc:	ldr	x0, [sp, #8]
  2135e0:	add	w20, w20, #0x1
  2135e4:	bl	215470 <strstrip@plt>
  2135e8:	ldrb	w8, [x0]
  2135ec:	mov	x28, x0
  2135f0:	cmp	w8, #0x23
  2135f4:	b.ne	2136cc <load_sysv+0x1c4>  // b.any
  2135f8:	cbnz	w21, 213610 <load_sysv+0x108>
  2135fc:	adrp	x1, 202000 <rcnd_table-0x5f8>
  213600:	mov	x0, x28
  213604:	add	x1, x1, #0x112
  213608:	bl	215480 <strcmp@plt>
  21360c:	cbz	w0, 21379c <load_sysv+0x294>
  213610:	and	w25, w21, #0xfffffffe
  213614:	cmp	w25, #0x2
  213618:	b.ne	213630 <load_sysv+0x128>  // b.any
  21361c:	adrp	x1, 201000 <rcnd_table-0x15f8>
  213620:	mov	x0, x28
  213624:	add	x1, x1, #0xb0d
  213628:	bl	215480 <strcmp@plt>
  21362c:	cbz	w0, 213768 <load_sysv+0x260>
  213630:	add	x28, x28, #0x1
  213634:	mov	x0, x28
  213638:	mov	x1, x27
  21363c:	bl	215490 <strspn@plt>
  213640:	add	x28, x28, x0
  213644:	cbz	w21, 213708 <load_sysv+0x200>
  213648:	cmp	w21, #0x1
  21364c:	b.eq	213774 <load_sysv+0x26c>  // b.none
  213650:	cmp	w25, #0x2
  213654:	b.ne	2139d4 <load_sysv+0x4cc>  // b.any
  213658:	adrp	x1, 202000 <rcnd_table-0x5f8>
  21365c:	mov	x0, x28
  213660:	add	x1, x1, #0x85
  213664:	bl	2146b0 <startswith_no_case>
  213668:	cbz	x0, 2138a0 <load_sysv+0x398>
  21366c:	add	x3, x28, #0x9
  213670:	mov	x0, x19
  213674:	mov	w1, w20
  213678:	mov	x2, x28
  21367c:	bl	214744 <handle_provides>
  213680:	mov	w21, #0x2                   	// #2
  213684:	tbz	w0, #31, 2139d4 <load_sysv+0x4cc>
  213688:	b	213918 <load_sysv+0x410>
  21368c:	mov	w0, wzr
  213690:	bl	2152b0 <log_get_max_level_realm@plt>
  213694:	cmp	w0, #0x3
  213698:	b.lt	213918 <load_sysv+0x410>  // b.tstop
  21369c:	ldr	x6, [x19, #8]
  2136a0:	mov	w0, #0x3                   	// #3
  2136a4:	mov	w3, #0x1c7                 	// #455
  2136a8:	mov	w1, w28
  2136ac:	mov	x2, x22
  2136b0:	mov	x4, x23
  2136b4:	mov	x5, x24
  2136b8:	bl	2152c0 <log_internal_realm@plt>
  2136bc:	mov	w25, #0x1                   	// #1
  2136c0:	b	2139d8 <load_sysv+0x4d0>
  2136c4:	mov	w25, #0x4                   	// #4
  2136c8:	b	2139d8 <load_sysv+0x4d0>
  2136cc:	cmp	w21, #0x4
  2136d0:	b.eq	2136ec <load_sysv+0x1e4>  // b.none
  2136d4:	cbnz	w21, 213700 <load_sysv+0x1f8>
  2136d8:	adrp	x1, 201000 <rcnd_table-0x15f8>
  2136dc:	mov	x0, x28
  2136e0:	add	x1, x1, #0xee4
  2136e4:	bl	2154a0 <strcasestr@plt>
  2136e8:	cbz	x0, 213768 <load_sysv+0x260>
  2136ec:	mov	x0, x28
  2136f0:	bl	214614 <usage_contains_reload>
  2136f4:	tbz	w0, #0, 213744 <load_sysv+0x23c>
  2136f8:	mov	w21, wzr
  2136fc:	mov	w26, #0x1                   	// #1
  213700:	mov	w25, #0x5                   	// #5
  213704:	b	2139d8 <load_sysv+0x4d0>
  213708:	adrp	x1, 202000 <rcnd_table-0x5f8>
  21370c:	mov	x0, x28
  213710:	add	x1, x1, #0x424
  213714:	bl	2146b0 <startswith_no_case>
  213718:	cbz	x0, 2137fc <load_sysv+0x2f4>
  21371c:	mov	x0, x28
  213720:	bl	2153f0 <strlen@plt>
  213724:	cbz	x0, 2137b0 <load_sysv+0x2a8>
  213728:	sub	x8, x0, #0x1
  21372c:	ldrb	w9, [x28, x8]
  213730:	cmp	w9, #0x5c
  213734:	b.ne	2137b0 <load_sysv+0x2a8>  // b.any
  213738:	mov	w21, #0x1                   	// #1
  21373c:	strb	wzr, [x28, x8]
  213740:	b	2137b4 <load_sysv+0x2ac>
  213744:	mov	x0, x28
  213748:	bl	2153f0 <strlen@plt>
  21374c:	add	x8, x0, x28
  213750:	ldurb	w8, [x8, #-1]
  213754:	mov	w25, #0x5                   	// #5
  213758:	cmp	w8, #0x5c
  21375c:	cset	w8, eq  // eq = none
  213760:	lsl	w21, w8, #2
  213764:	b	2139d8 <load_sysv+0x4d0>
  213768:	mov	w21, wzr
  21376c:	mov	w25, #0x5                   	// #5
  213770:	b	2139d8 <load_sysv+0x4d0>
  213774:	mov	x0, x28
  213778:	bl	2153f0 <strlen@plt>
  21377c:	cbz	x0, 2137dc <load_sysv+0x2d4>
  213780:	sub	x8, x0, #0x1
  213784:	ldrb	w9, [x28, x8]
  213788:	cmp	w9, #0x5c
  21378c:	b.ne	2137dc <load_sysv+0x2d4>  // b.any
  213790:	mov	w21, #0x1                   	// #1
  213794:	strb	wzr, [x28, x8]
  213798:	b	2137e0 <load_sysv+0x2d8>
  21379c:	mov	w8, #0x1                   	// #1
  2137a0:	strb	w8, [x19, #72]
  2137a4:	mov	w21, #0x2                   	// #2
  2137a8:	mov	w25, #0x5                   	// #5
  2137ac:	b	2139d8 <load_sysv+0x4d0>
  2137b0:	mov	w21, wzr
  2137b4:	add	x0, x28, #0xc
  2137b8:	bl	215470 <strstrip@plt>
  2137bc:	bl	214700 <empty_to_null>
  2137c0:	mov	x1, x0
  2137c4:	add	x0, sp, #0x10
  2137c8:	bl	2154b0 <free_and_strdup@plt>
  2137cc:	tbnz	w0, #31, 213880 <load_sysv+0x378>
  2137d0:	mov	w25, wzr
  2137d4:	cbnz	wzr, 2139d8 <load_sysv+0x4d0>
  2137d8:	b	2139d4 <load_sysv+0x4cc>
  2137dc:	mov	w21, wzr
  2137e0:	mov	x0, x28
  2137e4:	bl	215470 <strstrip@plt>
  2137e8:	mov	x28, x0
  2137ec:	bl	214728 <isempty>
  2137f0:	tbz	w0, #0, 213844 <load_sysv+0x33c>
  2137f4:	mov	w25, wzr
  2137f8:	b	21399c <load_sysv+0x494>
  2137fc:	adrp	x1, 201000 <rcnd_table-0x15f8>
  213800:	mov	x0, x28
  213804:	add	x1, x1, #0xeea
  213808:	bl	2146b0 <startswith_no_case>
  21380c:	cbz	x0, 213920 <load_sysv+0x418>
  213810:	add	x0, x28, #0x8
  213814:	bl	215470 <strstrip@plt>
  213818:	mov	x28, x0
  21381c:	bl	2154c0 <path_is_absolute@plt>
  213820:	tbz	w0, #0, 213928 <load_sysv+0x420>
  213824:	ldr	x0, [sp]
  213828:	mov	x1, x28
  21382c:	bl	2154b0 <free_and_strdup@plt>
  213830:	tbnz	w0, #31, 2139b4 <load_sysv+0x4ac>
  213834:	mov	w25, wzr
  213838:	mov	w21, wzr
  21383c:	cbnz	w25, 2139d8 <load_sysv+0x4d0>
  213840:	b	2139d4 <load_sysv+0x4cc>
  213844:	ldr	x0, [sp, #16]
  213848:	cbz	x0, 213970 <load_sysv+0x468>
  21384c:	adrp	x1, 201000 <rcnd_table-0x15f8>
  213850:	add	x1, x1, #0xd25
  213854:	mov	x2, x28
  213858:	mov	x3, xzr
  21385c:	bl	2154d0 <strjoin_real@plt>
  213860:	mov	x28, x0
  213864:	cbz	x0, 213980 <load_sysv+0x478>
  213868:	ldr	x0, [sp, #16]
  21386c:	bl	2154e0 <free@plt>
  213870:	mov	w25, wzr
  213874:	str	x28, [sp, #16]
  213878:	cbnz	w25, 21399c <load_sysv+0x494>
  21387c:	b	2137f4 <load_sysv+0x2ec>
  213880:	mov	w2, #0x201                 	// #513
  213884:	mov	w0, wzr
  213888:	mov	x1, x22
  21388c:	mov	x3, x23
  213890:	bl	215330 <log_oom_internal@plt>
  213894:	mov	w25, #0x1                   	// #1
  213898:	cbnz	w25, 2139d8 <load_sysv+0x4d0>
  21389c:	b	2139d4 <load_sysv+0x4cc>
  2138a0:	adrp	x1, 201000 <rcnd_table-0x15f8>
  2138a4:	mov	x0, x28
  2138a8:	add	x1, x1, #0xe64
  2138ac:	bl	2146b0 <startswith_no_case>
  2138b0:	cbnz	x0, 2138f0 <load_sysv+0x3e8>
  2138b4:	adrp	x1, 202000 <rcnd_table-0x5f8>
  2138b8:	mov	x0, x28
  2138bc:	add	x1, x1, #0x4f6
  2138c0:	bl	2146b0 <startswith_no_case>
  2138c4:	cbnz	x0, 2138f0 <load_sysv+0x3e8>
  2138c8:	adrp	x1, 202000 <rcnd_table-0x5f8>
  2138cc:	mov	x0, x28
  2138d0:	add	x1, x1, #0x379
  2138d4:	bl	2146b0 <startswith_no_case>
  2138d8:	cbnz	x0, 2138f0 <load_sysv+0x3e8>
  2138dc:	adrp	x1, 201000 <rcnd_table-0x15f8>
  2138e0:	mov	x0, x28
  2138e4:	add	x1, x1, #0xfdd
  2138e8:	bl	2146b0 <startswith_no_case>
  2138ec:	cbz	x0, 2139f0 <load_sysv+0x4e8>
  2138f0:	mov	w1, #0x3a                  	// #58
  2138f4:	mov	x0, x28
  2138f8:	bl	2154f0 <strchr@plt>
  2138fc:	add	x3, x0, #0x1
  213900:	mov	x0, x19
  213904:	mov	w1, w20
  213908:	mov	x2, x28
  21390c:	bl	214a98 <handle_dependencies>
  213910:	mov	w21, #0x2                   	// #2
  213914:	tbz	w0, #31, 2139d4 <load_sysv+0x4cc>
  213918:	mov	w25, #0x1                   	// #1
  21391c:	b	2139d8 <load_sysv+0x4d0>
  213920:	mov	w21, wzr
  213924:	b	2139d4 <load_sysv+0x4cc>
  213928:	mov	w0, wzr
  21392c:	bl	2152b0 <log_get_max_level_realm@plt>
  213930:	cmp	w0, #0x3
  213934:	b.lt	2139a4 <load_sysv+0x49c>  // b.tstop
  213938:	ldr	x6, [x19, #8]
  21393c:	adrp	x5, 201000 <rcnd_table-0x15f8>
  213940:	mov	w0, #0x3                   	// #3
  213944:	mov	w3, #0x20a                 	// #522
  213948:	mov	w1, wzr
  21394c:	mov	x2, x22
  213950:	mov	x4, x23
  213954:	add	x5, x5, #0xe3b
  213958:	mov	w7, w20
  21395c:	bl	2152c0 <log_internal_realm@plt>
  213960:	mov	w25, #0x5                   	// #5
  213964:	mov	w21, wzr
  213968:	cbnz	w25, 2139d8 <load_sysv+0x4d0>
  21396c:	b	2139d4 <load_sysv+0x4cc>
  213970:	mov	x0, x28
  213974:	bl	215500 <strdup@plt>
  213978:	mov	x28, x0
  21397c:	cbnz	x0, 213868 <load_sysv+0x360>
  213980:	mov	w2, #0x22a                 	// #554
  213984:	mov	w0, wzr
  213988:	mov	x1, x22
  21398c:	mov	x3, x23
  213990:	bl	215330 <log_oom_internal@plt>
  213994:	mov	w25, #0x1                   	// #1
  213998:	cbz	w25, 2137f4 <load_sysv+0x2ec>
  21399c:	cbnz	w25, 2139d8 <load_sysv+0x4d0>
  2139a0:	b	2139d4 <load_sysv+0x4cc>
  2139a4:	mov	w25, #0x5                   	// #5
  2139a8:	mov	w21, wzr
  2139ac:	cbnz	w25, 2139d8 <load_sysv+0x4d0>
  2139b0:	b	2139d4 <load_sysv+0x4cc>
  2139b4:	mov	w2, #0x210                 	// #528
  2139b8:	mov	w0, wzr
  2139bc:	mov	x1, x22
  2139c0:	mov	x3, x23
  2139c4:	bl	215330 <log_oom_internal@plt>
  2139c8:	mov	w25, #0x1                   	// #1
  2139cc:	mov	w21, wzr
  2139d0:	cbnz	w25, 2139d8 <load_sysv+0x4d0>
  2139d4:	mov	w25, wzr
  2139d8:	add	x0, sp, #0x8
  2139dc:	bl	2144a8 <freep>
  2139e0:	cbz	w25, 2135c0 <load_sysv+0xb8>
  2139e4:	cmp	w25, #0x5
  2139e8:	b.eq	2135c0 <load_sysv+0xb8>  // b.none
  2139ec:	b	213b5c <load_sysv+0x654>
  2139f0:	adrp	x1, 201000 <rcnd_table-0x15f8>
  2139f4:	mov	x0, x28
  2139f8:	add	x1, x1, #0xf98
  2139fc:	bl	2146b0 <startswith_no_case>
  213a00:	cbz	x0, 213a28 <load_sysv+0x520>
  213a04:	add	x0, x28, #0xc
  213a08:	bl	215470 <strstrip@plt>
  213a0c:	bl	214700 <empty_to_null>
  213a10:	mov	x1, x0
  213a14:	add	x0, sp, #0x18
  213a18:	bl	2154b0 <free_and_strdup@plt>
  213a1c:	tbnz	w0, #31, 213a60 <load_sysv+0x558>
  213a20:	mov	w25, wzr
  213a24:	b	213a78 <load_sysv+0x570>
  213a28:	adrp	x1, 202000 <rcnd_table-0x5f8>
  213a2c:	mov	x0, x28
  213a30:	add	x1, x1, #0x27e
  213a34:	bl	2146b0 <startswith_no_case>
  213a38:	cbz	x0, 213a84 <load_sysv+0x57c>
  213a3c:	add	x0, x28, #0x12
  213a40:	bl	215470 <strstrip@plt>
  213a44:	bl	214700 <empty_to_null>
  213a48:	mov	x1, x0
  213a4c:	sub	x0, x29, #0x10
  213a50:	bl	2154b0 <free_and_strdup@plt>
  213a54:	tbnz	w0, #31, 213aec <load_sysv+0x5e4>
  213a58:	mov	w25, wzr
  213a5c:	b	213b04 <load_sysv+0x5fc>
  213a60:	mov	w2, #0x24d                 	// #589
  213a64:	mov	w0, wzr
  213a68:	mov	x1, x22
  213a6c:	mov	x3, x23
  213a70:	bl	215330 <log_oom_internal@plt>
  213a74:	mov	w25, #0x1                   	// #1
  213a78:	mov	w21, #0x3                   	// #3
  213a7c:	cbnz	w25, 2139d8 <load_sysv+0x4d0>
  213a80:	b	2139d4 <load_sysv+0x4cc>
  213a84:	cmp	w21, #0x3
  213a88:	b.ne	2139d4 <load_sysv+0x4cc>  // b.any
  213a8c:	ldr	x21, [sp, #8]
  213a90:	adrp	x1, 201000 <rcnd_table-0x15f8>
  213a94:	add	x1, x1, #0xc3c
  213a98:	mov	x0, x21
  213a9c:	bl	214cd0 <startswith>
  213aa0:	cbnz	x0, 213ab8 <load_sysv+0x5b0>
  213aa4:	adrp	x1, 202000 <rcnd_table-0x5f8>
  213aa8:	mov	x0, x21
  213aac:	add	x1, x1, #0x504
  213ab0:	bl	214cd0 <startswith>
  213ab4:	cbz	x0, 213b54 <load_sysv+0x64c>
  213ab8:	mov	x0, x28
  213abc:	bl	215470 <strstrip@plt>
  213ac0:	mov	x21, x0
  213ac4:	bl	214728 <isempty>
  213ac8:	tbnz	w0, #0, 213a20 <load_sysv+0x518>
  213acc:	ldr	x0, [sp, #24]
  213ad0:	cbz	x0, 213b10 <load_sysv+0x608>
  213ad4:	adrp	x1, 201000 <rcnd_table-0x15f8>
  213ad8:	add	x1, x1, #0xd25
  213adc:	mov	x2, x28
  213ae0:	mov	x3, xzr
  213ae4:	bl	2154d0 <strjoin_real@plt>
  213ae8:	b	213b18 <load_sysv+0x610>
  213aec:	mov	w2, #0x258                 	// #600
  213af0:	mov	w0, wzr
  213af4:	mov	x1, x22
  213af8:	mov	x3, x23
  213afc:	bl	215330 <log_oom_internal@plt>
  213b00:	mov	w25, #0x1                   	// #1
  213b04:	mov	w21, #0x2                   	// #2
  213b08:	cbnz	w25, 2139d8 <load_sysv+0x4d0>
  213b0c:	b	2139d4 <load_sysv+0x4cc>
  213b10:	mov	x0, x21
  213b14:	bl	215500 <strdup@plt>
  213b18:	mov	x28, x0
  213b1c:	cbz	x0, 213b34 <load_sysv+0x62c>
  213b20:	ldr	x0, [sp, #24]
  213b24:	bl	2154e0 <free@plt>
  213b28:	mov	w25, wzr
  213b2c:	str	x28, [sp, #24]
  213b30:	b	213b4c <load_sysv+0x644>
  213b34:	mov	w2, #0x268                 	// #616
  213b38:	mov	w0, wzr
  213b3c:	mov	x1, x22
  213b40:	mov	x3, x23
  213b44:	bl	215330 <log_oom_internal@plt>
  213b48:	mov	w25, #0x1                   	// #1
  213b4c:	cbnz	w25, 213a78 <load_sysv+0x570>
  213b50:	b	213a20 <load_sysv+0x518>
  213b54:	mov	w21, #0x2                   	// #2
  213b58:	b	2139d4 <load_sysv+0x4cc>
  213b5c:	cmp	w25, #0x4
  213b60:	b.ne	213c28 <load_sysv+0x720>  // b.any
  213b64:	and	w8, w26, #0x1
  213b68:	strb	w8, [x19, #73]
  213b6c:	ldp	x8, x9, [sp, #16]
  213b70:	ldur	x10, [x29, #-16]
  213b74:	cmp	x8, #0x0
  213b78:	csel	x8, x9, x8, eq  // eq = none
  213b7c:	cmp	x10, #0x0
  213b80:	csel	x1, x8, x10, eq  // eq = none
  213b84:	cbz	x1, 213bb4 <load_sysv+0x6ac>
  213b88:	ldrb	w8, [x19, #72]
  213b8c:	adrp	x9, 201000 <rcnd_table-0x15f8>
  213b90:	adrp	x10, 201000 <rcnd_table-0x15f8>
  213b94:	add	x9, x9, #0xfa5
  213b98:	add	x10, x10, #0xef3
  213b9c:	cmp	w8, #0x0
  213ba0:	csel	x0, x10, x9, eq  // eq = none
  213ba4:	mov	x2, xzr
  213ba8:	bl	2154d0 <strjoin_real@plt>
  213bac:	cbz	x0, 213c10 <load_sysv+0x708>
  213bb0:	str	x0, [x19, #16]
  213bb4:	mov	w8, #0x1                   	// #1
  213bb8:	strb	w8, [x19, #74]
  213bbc:	b	213c28 <load_sysv+0x720>
  213bc0:	bl	215370 <__errno_location@plt>
  213bc4:	ldr	w20, [x0]
  213bc8:	cmp	w20, #0x2
  213bcc:	b.eq	213c28 <load_sysv+0x720>  // b.none
  213bd0:	mov	w0, wzr
  213bd4:	bl	2152b0 <log_get_max_level_realm@plt>
  213bd8:	cmp	w0, #0x3
  213bdc:	b.lt	213c28 <load_sysv+0x720>  // b.tstop
  213be0:	ldr	x6, [x19, #8]
  213be4:	adrp	x2, 202000 <rcnd_table-0x5f8>
  213be8:	adrp	x4, 201000 <rcnd_table-0x15f8>
  213bec:	adrp	x5, 201000 <rcnd_table-0x15f8>
  213bf0:	add	x2, x2, #0x1a7
  213bf4:	add	x4, x4, #0xf8e
  213bf8:	add	x5, x5, #0xb69
  213bfc:	mov	w0, #0x3                   	// #3
  213c00:	mov	w3, #0x1bc                 	// #444
  213c04:	mov	w1, w20
  213c08:	bl	2152c0 <log_internal_realm@plt>
  213c0c:	b	213c28 <load_sysv+0x720>
  213c10:	adrp	x1, 202000 <rcnd_table-0x5f8>
  213c14:	adrp	x3, 201000 <rcnd_table-0x15f8>
  213c18:	add	x1, x1, #0x1a7
  213c1c:	add	x3, x3, #0xf8e
  213c20:	mov	w2, #0x287                 	// #647
  213c24:	bl	215330 <log_oom_internal@plt>
  213c28:	add	x0, sp, #0x10
  213c2c:	bl	2144a8 <freep>
  213c30:	add	x0, sp, #0x18
  213c34:	bl	2144a8 <freep>
  213c38:	sub	x0, x29, #0x10
  213c3c:	bl	2144a8 <freep>
  213c40:	sub	x0, x29, #0x8
  213c44:	bl	2145dc <fclosep>
  213c48:	ldp	x20, x19, [sp, #128]
  213c4c:	ldp	x22, x21, [sp, #112]
  213c50:	ldp	x24, x23, [sp, #96]
  213c54:	ldp	x26, x25, [sp, #80]
  213c58:	ldp	x28, x27, [sp, #64]
  213c5c:	ldp	x29, x30, [sp, #48]
  213c60:	add	sp, sp, #0x90
  213c64:	ret
  213c68:	adrp	x1, 201000 <rcnd_table-0x15f8>
  213c6c:	adrp	x2, 202000 <rcnd_table-0x5f8>
  213c70:	adrp	x4, 201000 <rcnd_table-0x15f8>
  213c74:	add	x1, x1, #0xdb8
  213c78:	add	x2, x2, #0x1a7
  213c7c:	add	x4, x4, #0xfc3
  213c80:	mov	w3, #0x1b5                 	// #437
  213c84:	bl	215350 <log_assert_failed_realm@plt>

0000000000213c88 <fix_order>:
  213c88:	sub	sp, sp, #0x50
  213c8c:	stp	x29, x30, [sp, #32]
  213c90:	stp	x22, x21, [sp, #48]
  213c94:	stp	x20, x19, [sp, #64]
  213c98:	add	x29, sp, #0x20
  213c9c:	cbz	x0, 213d9c <fix_order+0x114>
  213ca0:	ldrb	w8, [x0, #74]
  213ca4:	mov	x20, x0
  213ca8:	cbz	w8, 213d88 <fix_order+0x100>
  213cac:	ldr	w8, [x20, #24]
  213cb0:	tbnz	w8, #31, 213d88 <fix_order+0x100>
  213cb4:	mov	x19, x1
  213cb8:	mov	w8, #0xfffffffe            	// #-2
  213cbc:	add	x1, sp, #0x8
  213cc0:	sub	x2, x29, #0x8
  213cc4:	mov	x0, x19
  213cc8:	str	w8, [sp, #8]
  213ccc:	str	xzr, [sp, #16]
  213cd0:	bl	2134ec <hashmap_iterate>
  213cd4:	tbz	w0, #0, 213d88 <fix_order+0x100>
  213cd8:	add	x21, x20, #0x28
  213cdc:	add	x22, x20, #0x30
  213ce0:	b	213d08 <fix_order+0x80>
  213ce4:	ldr	x1, [x8]
  213ce8:	mov	x0, x22
  213cec:	bl	215440 <strv_extend@plt>
  213cf0:	tbnz	w0, #31, 213d6c <fix_order+0xe4>
  213cf4:	add	x1, sp, #0x8
  213cf8:	sub	x2, x29, #0x8
  213cfc:	mov	x0, x19
  213d00:	bl	2134ec <hashmap_iterate>
  213d04:	tbz	w0, #0, 213d88 <fix_order+0x100>
  213d08:	ldur	x8, [x29, #-8]
  213d0c:	cmp	x8, x20
  213d10:	b.eq	213cf4 <fix_order+0x6c>  // b.none
  213d14:	ldrb	w9, [x8, #74]
  213d18:	cbz	w9, 213cf4 <fix_order+0x6c>
  213d1c:	ldr	w9, [x8, #24]
  213d20:	tbnz	w9, #31, 213cf4 <fix_order+0x6c>
  213d24:	ldrb	w10, [x20, #72]
  213d28:	cbz	w10, 213d34 <fix_order+0xac>
  213d2c:	ldrb	w10, [x8, #72]
  213d30:	cbnz	w10, 213cf4 <fix_order+0x6c>
  213d34:	ldr	w10, [x20, #24]
  213d38:	cmp	w9, w10
  213d3c:	b.lt	213ce4 <fix_order+0x5c>  // b.tstop
  213d40:	b.le	213cf4 <fix_order+0x6c>
  213d44:	ldr	x1, [x8]
  213d48:	mov	x0, x21
  213d4c:	bl	215440 <strv_extend@plt>
  213d50:	tbz	w0, #31, 213cf4 <fix_order+0x6c>
  213d54:	adrp	x1, 202000 <rcnd_table-0x5f8>
  213d58:	adrp	x3, 202000 <rcnd_table-0x5f8>
  213d5c:	add	x1, x1, #0x1a7
  213d60:	add	x3, x3, #0x5e8
  213d64:	mov	w2, #0x2b4                 	// #692
  213d68:	b	213d80 <fix_order+0xf8>
  213d6c:	adrp	x1, 202000 <rcnd_table-0x5f8>
  213d70:	adrp	x3, 202000 <rcnd_table-0x5f8>
  213d74:	add	x1, x1, #0x1a7
  213d78:	add	x3, x3, #0x5e8
  213d7c:	mov	w2, #0x2af                 	// #687
  213d80:	mov	w0, wzr
  213d84:	bl	215330 <log_oom_internal@plt>
  213d88:	ldp	x20, x19, [sp, #64]
  213d8c:	ldp	x22, x21, [sp, #48]
  213d90:	ldp	x29, x30, [sp, #32]
  213d94:	add	sp, sp, #0x50
  213d98:	ret
  213d9c:	adrp	x1, 201000 <rcnd_table-0x15f8>
  213da0:	adrp	x2, 202000 <rcnd_table-0x5f8>
  213da4:	adrp	x4, 201000 <rcnd_table-0x15f8>
  213da8:	add	x1, x1, #0xdb8
  213dac:	add	x2, x2, #0x1a7
  213db0:	add	x4, x4, #0xd27
  213db4:	mov	w3, #0x295                 	// #661
  213db8:	bl	215350 <log_assert_failed_realm@plt>

0000000000213dbc <generate_unit_file>:
  213dbc:	stp	x29, x30, [sp, #-80]!
  213dc0:	str	x25, [sp, #16]
  213dc4:	stp	x24, x23, [sp, #32]
  213dc8:	stp	x22, x21, [sp, #48]
  213dcc:	stp	x20, x19, [sp, #64]
  213dd0:	mov	x29, sp
  213dd4:	sub	sp, sp, #0x10
  213dd8:	str	xzr, [x29, #24]
  213ddc:	stur	xzr, [x29, #-8]
  213de0:	cbz	x0, 2141fc <generate_unit_file+0x440>
  213de4:	ldrb	w8, [x0, #74]
  213de8:	mov	x19, x0
  213dec:	cbz	w8, 2141d0 <generate_unit_file+0x414>
  213df0:	ldr	x0, [x19, #8]
  213df4:	bl	215130 <specifier_escape>
  213df8:	str	x0, [x29, #24]
  213dfc:	cbz	x0, 213e40 <generate_unit_file+0x84>
  213e00:	adrp	x24, 235000 <string_hash_ops+0xf490>
  213e04:	ldr	x8, [x19]
  213e08:	ldr	x22, [x24, #2968]
  213e0c:	mov	x21, x8
  213e10:	ldrb	w8, [x8]
  213e14:	cmp	w8, #0x2f
  213e18:	b.ne	213e2c <generate_unit_file+0x70>  // b.any
  213e1c:	mov	x8, x21
  213e20:	ldrb	w9, [x8, #1]!
  213e24:	cmp	w9, #0x2f
  213e28:	b.eq	213e0c <generate_unit_file+0x50>  // b.none
  213e2c:	mov	x0, x22
  213e30:	bl	214728 <isempty>
  213e34:	tbz	w0, #0, 213e5c <generate_unit_file+0xa0>
  213e38:	mov	x20, x21
  213e3c:	b	213ee8 <generate_unit_file+0x12c>
  213e40:	adrp	x1, 202000 <rcnd_table-0x5f8>
  213e44:	adrp	x3, 202000 <rcnd_table-0x5f8>
  213e48:	add	x1, x1, #0x1a7
  213e4c:	add	x3, x3, #0xdd
  213e50:	mov	w2, #0x75                  	// #117
  213e54:	bl	215330 <log_oom_internal@plt>
  213e58:	b	2141d0 <generate_unit_file+0x414>
  213e5c:	mov	x0, x22
  213e60:	bl	2153f0 <strlen@plt>
  213e64:	mov	x20, x0
  213e68:	mov	x0, x21
  213e6c:	bl	2153f0 <strlen@plt>
  213e70:	add	x8, x20, x0
  213e74:	add	x20, x8, #0x2
  213e78:	mov	x0, x20
  213e7c:	bl	215128 <size_multiply_overflow>
  213e80:	tbnz	w0, #0, 21421c <generate_unit_file+0x460>
  213e84:	cmp	x20, #0x400, lsl #12
  213e88:	b.hi	214228 <generate_unit_file+0x46c>  // b.pmore
  213e8c:	add	x9, x20, #0xf
  213e90:	mov	x8, sp
  213e94:	and	x9, x9, #0xfffffffffffffff0
  213e98:	sub	x20, x8, x9
  213e9c:	mov	sp, x20
  213ea0:	mov	x0, x20
  213ea4:	mov	x1, x22
  213ea8:	bl	215510 <stpcpy@plt>
  213eac:	mov	x8, x0
  213eb0:	mov	x0, x8
  213eb4:	cmp	x8, x20
  213eb8:	b.ls	213ecc <generate_unit_file+0x110>  // b.plast
  213ebc:	mov	x8, x0
  213ec0:	ldrb	w9, [x8, #-1]!
  213ec4:	cmp	w9, #0x2f
  213ec8:	b.eq	213eb0 <generate_unit_file+0xf4>  // b.none
  213ecc:	ldrb	w8, [x21]
  213ed0:	cmp	w8, #0x2f
  213ed4:	b.eq	213ee0 <generate_unit_file+0x124>  // b.none
  213ed8:	mov	w8, #0x2f                  	// #47
  213edc:	strb	w8, [x0], #1
  213ee0:	mov	x1, x21
  213ee4:	bl	215520 <strcpy@plt>
  213ee8:	mov	x0, x20
  213eec:	bl	215530 <is_symlink@plt>
  213ef0:	cmp	w0, #0x1
  213ef4:	b.lt	213f3c <generate_unit_file+0x180>  // b.tstop
  213ef8:	mov	w0, wzr
  213efc:	bl	2152b0 <log_get_max_level_realm@plt>
  213f00:	cmp	w0, #0x4
  213f04:	b.lt	213f34 <generate_unit_file+0x178>  // b.tstop
  213f08:	adrp	x2, 202000 <rcnd_table-0x5f8>
  213f0c:	adrp	x4, 202000 <rcnd_table-0x5f8>
  213f10:	adrp	x5, 201000 <rcnd_table-0x15f8>
  213f14:	add	x2, x2, #0x1a7
  213f18:	add	x4, x4, #0xdd
  213f1c:	add	x5, x5, #0xbca
  213f20:	mov	w0, #0x4                   	// #4
  213f24:	mov	w3, #0x7d                  	// #125
  213f28:	mov	w1, wzr
  213f2c:	mov	x6, x20
  213f30:	bl	2152c0 <log_internal_realm@plt>
  213f34:	mov	x0, x20
  213f38:	bl	215540 <unlink@plt>
  213f3c:	adrp	x1, 202000 <rcnd_table-0x5f8>
  213f40:	add	x1, x1, #0x3d3
  213f44:	mov	x0, x20
  213f48:	bl	215460 <fopen64@plt>
  213f4c:	stur	x0, [x29, #-8]
  213f50:	cbz	x0, 21411c <generate_unit_file+0x360>
  213f54:	ldr	x22, [x29, #24]
  213f58:	adrp	x1, 202000 <rcnd_table-0x5f8>
  213f5c:	add	x1, x1, #0x537
  213f60:	mov	x21, x0
  213f64:	mov	x2, x22
  213f68:	bl	215550 <fprintf@plt>
  213f6c:	ldr	x0, [x19, #16]
  213f70:	cbz	x0, 213f9c <generate_unit_file+0x1e0>
  213f74:	bl	215130 <specifier_escape>
  213f78:	stur	x0, [x29, #-16]
  213f7c:	cbz	x0, 214154 <generate_unit_file+0x398>
  213f80:	adrp	x1, 202000 <rcnd_table-0x5f8>
  213f84:	mov	x2, x0
  213f88:	add	x1, x1, #0x508
  213f8c:	mov	x0, x21
  213f90:	bl	215550 <fprintf@plt>
  213f94:	sub	x0, x29, #0x10
  213f98:	bl	2144a8 <freep>
  213f9c:	ldr	x8, [x19, #40]
  213fa0:	cbz	x8, 213fcc <generate_unit_file+0x210>
  213fa4:	ldr	x2, [x8]
  213fa8:	cbz	x2, 213fcc <generate_unit_file+0x210>
  213fac:	adrp	x23, 201000 <rcnd_table-0x15f8>
  213fb0:	add	x25, x8, #0x8
  213fb4:	add	x23, x23, #0xe2c
  213fb8:	mov	x0, x21
  213fbc:	mov	x1, x23
  213fc0:	bl	215550 <fprintf@plt>
  213fc4:	ldr	x2, [x25], #8
  213fc8:	cbnz	x2, 213fb8 <generate_unit_file+0x1fc>
  213fcc:	ldr	x8, [x19, #48]
  213fd0:	cbz	x8, 213ffc <generate_unit_file+0x240>
  213fd4:	ldr	x2, [x8]
  213fd8:	cbz	x2, 213ffc <generate_unit_file+0x240>
  213fdc:	adrp	x23, 201000 <rcnd_table-0x15f8>
  213fe0:	add	x25, x8, #0x8
  213fe4:	add	x23, x23, #0xe74
  213fe8:	mov	x0, x21
  213fec:	mov	x1, x23
  213ff0:	bl	215550 <fprintf@plt>
  213ff4:	ldr	x2, [x25], #8
  213ff8:	cbnz	x2, 213fe8 <generate_unit_file+0x22c>
  213ffc:	ldr	x8, [x19, #56]
  214000:	cbz	x8, 214030 <generate_unit_file+0x274>
  214004:	ldr	x9, [x8]
  214008:	cbz	x9, 214030 <generate_unit_file+0x274>
  21400c:	adrp	x23, 201000 <rcnd_table-0x15f8>
  214010:	add	x25, x8, #0x8
  214014:	add	x23, x23, #0xdab
  214018:	ldur	x2, [x25, #-8]
  21401c:	mov	x0, x21
  214020:	mov	x1, x23
  214024:	bl	215550 <fprintf@plt>
  214028:	ldr	x8, [x25], #8
  21402c:	cbnz	x8, 214018 <generate_unit_file+0x25c>
  214030:	ldr	x8, [x19, #32]
  214034:	cmp	x8, #0x0
  214038:	cset	w0, eq  // eq = none
  21403c:	bl	215154 <yes_no>
  214040:	adrp	x1, 201000 <rcnd_table-0x15f8>
  214044:	mov	x2, x0
  214048:	add	x1, x1, #0xc5e
  21404c:	mov	x0, x21
  214050:	bl	215550 <fprintf@plt>
  214054:	ldr	x0, [x19, #32]
  214058:	cbz	x0, 214084 <generate_unit_file+0x2c8>
  21405c:	bl	215130 <specifier_escape>
  214060:	stur	x0, [x29, #-16]
  214064:	cbz	x0, 2141b0 <generate_unit_file+0x3f4>
  214068:	adrp	x1, 201000 <rcnd_table-0x15f8>
  21406c:	mov	x2, x0
  214070:	add	x1, x1, #0xf35
  214074:	mov	x0, x21
  214078:	bl	215550 <fprintf@plt>
  21407c:	sub	x0, x29, #0x10
  214080:	bl	2144a8 <freep>
  214084:	ldrb	w8, [x19, #72]
  214088:	cbz	w8, 2140a4 <generate_unit_file+0x2e8>
  21408c:	adrp	x1, 202000 <rcnd_table-0x5f8>
  214090:	add	x1, x1, #0x44e
  214094:	mov	w2, #0x5                   	// #5
  214098:	mov	w3, #0x6                   	// #6
  21409c:	mov	x0, x21
  2140a0:	bl	215550 <fprintf@plt>
  2140a4:	adrp	x1, 202000 <rcnd_table-0x5f8>
  2140a8:	add	x1, x1, #0x34e
  2140ac:	mov	x0, x21
  2140b0:	mov	x2, x22
  2140b4:	mov	x3, x22
  2140b8:	bl	215550 <fprintf@plt>
  2140bc:	ldrb	w8, [x19, #73]
  2140c0:	cbz	w8, 2140d8 <generate_unit_file+0x31c>
  2140c4:	adrp	x1, 202000 <rcnd_table-0x5f8>
  2140c8:	add	x1, x1, #0x234
  2140cc:	mov	x0, x21
  2140d0:	mov	x2, x22
  2140d4:	bl	215550 <fprintf@plt>
  2140d8:	mov	x0, x21
  2140dc:	bl	215560 <fflush_and_check@plt>
  2140e0:	tbnz	w0, #31, 21416c <generate_unit_file+0x3b0>
  2140e4:	ldr	x8, [x19, #64]
  2140e8:	cbz	x8, 2141d0 <generate_unit_file+0x414>
  2140ec:	ldr	x1, [x8]
  2140f0:	cbz	x1, 2141d0 <generate_unit_file+0x414>
  2140f4:	adrp	x20, 201000 <rcnd_table-0x15f8>
  2140f8:	add	x21, x8, #0x8
  2140fc:	add	x20, x20, #0xffb
  214100:	ldr	x0, [x24, #2968]
  214104:	ldr	x3, [x19]
  214108:	mov	x2, x20
  21410c:	bl	215570 <generator_add_symlink@plt>
  214110:	ldr	x1, [x21], #8
  214114:	cbnz	x1, 214100 <generate_unit_file+0x344>
  214118:	b	2141d0 <generate_unit_file+0x414>
  21411c:	bl	2152b0 <log_get_max_level_realm@plt>
  214120:	cmp	w0, #0x3
  214124:	b.lt	2141d0 <generate_unit_file+0x414>  // b.tstop
  214128:	bl	215370 <__errno_location@plt>
  21412c:	ldr	w1, [x0]
  214130:	adrp	x2, 202000 <rcnd_table-0x5f8>
  214134:	adrp	x4, 202000 <rcnd_table-0x5f8>
  214138:	adrp	x5, 202000 <rcnd_table-0x5f8>
  21413c:	add	x2, x2, #0x1a7
  214140:	add	x4, x4, #0xdd
  214144:	add	x5, x5, #0x3d7
  214148:	mov	w0, #0x3                   	// #3
  21414c:	mov	w3, #0x83                  	// #131
  214150:	b	2141a4 <generate_unit_file+0x3e8>
  214154:	adrp	x1, 202000 <rcnd_table-0x5f8>
  214158:	adrp	x3, 202000 <rcnd_table-0x5f8>
  21415c:	add	x1, x1, #0x1a7
  214160:	add	x3, x3, #0xdd
  214164:	mov	w2, #0x91                  	// #145
  214168:	b	2141c4 <generate_unit_file+0x408>
  21416c:	mov	w21, w0
  214170:	mov	w0, wzr
  214174:	bl	2152b0 <log_get_max_level_realm@plt>
  214178:	cmp	w0, #0x3
  21417c:	b.lt	2141d0 <generate_unit_file+0x414>  // b.tstop
  214180:	adrp	x2, 202000 <rcnd_table-0x5f8>
  214184:	adrp	x4, 202000 <rcnd_table-0x5f8>
  214188:	adrp	x5, 202000 <rcnd_table-0x5f8>
  21418c:	add	x2, x2, #0x1a7
  214190:	add	x4, x4, #0xdd
  214194:	add	x5, x5, #0xf0
  214198:	mov	w0, #0x3                   	// #3
  21419c:	mov	w3, #0xc3                  	// #195
  2141a0:	mov	w1, w21
  2141a4:	mov	x6, x20
  2141a8:	bl	2152c0 <log_internal_realm@plt>
  2141ac:	b	2141d0 <generate_unit_file+0x414>
  2141b0:	adrp	x1, 202000 <rcnd_table-0x5f8>
  2141b4:	adrp	x3, 202000 <rcnd_table-0x5f8>
  2141b8:	add	x1, x1, #0x1a7
  2141bc:	add	x3, x3, #0xdd
  2141c0:	mov	w2, #0xad                  	// #173
  2141c4:	bl	215330 <log_oom_internal@plt>
  2141c8:	sub	x0, x29, #0x10
  2141cc:	bl	2144a8 <freep>
  2141d0:	sub	x0, x29, #0x8
  2141d4:	bl	2145dc <fclosep>
  2141d8:	add	x0, x29, #0x18
  2141dc:	bl	2144a8 <freep>
  2141e0:	mov	sp, x29
  2141e4:	ldp	x20, x19, [sp, #64]
  2141e8:	ldp	x22, x21, [sp, #48]
  2141ec:	ldp	x24, x23, [sp, #32]
  2141f0:	ldr	x25, [sp, #16]
  2141f4:	ldp	x29, x30, [sp], #80
  2141f8:	ret
  2141fc:	adrp	x1, 201000 <rcnd_table-0x15f8>
  214200:	adrp	x2, 202000 <rcnd_table-0x5f8>
  214204:	adrp	x4, 201000 <rcnd_table-0x15f8>
  214208:	add	x1, x1, #0xdb8
  21420c:	add	x2, x2, #0x1a7
  214210:	add	x4, x4, #0xe09
  214214:	mov	w3, #0x6e                  	// #110
  214218:	bl	215350 <log_assert_failed_realm@plt>
  21421c:	adrp	x1, 201000 <rcnd_table-0x15f8>
  214220:	add	x1, x1, #0xf0a
  214224:	b	214230 <generate_unit_file+0x474>
  214228:	adrp	x1, 201000 <rcnd_table-0x15f8>
  21422c:	add	x1, x1, #0xbab
  214230:	adrp	x2, 202000 <rcnd_table-0x5f8>
  214234:	adrp	x4, 201000 <rcnd_table-0x15f8>
  214238:	add	x2, x2, #0x1a7
  21423c:	add	x4, x4, #0xe09
  214240:	mov	w3, #0x77                  	// #119
  214244:	mov	w0, wzr
  214248:	bl	215350 <log_assert_failed_realm@plt>

000000000021424c <hashmap_steal_first>:
  21424c:	stp	x29, x30, [sp, #-16]!
  214250:	mov	w1, #0x1                   	// #1
  214254:	mov	x2, xzr
  214258:	mov	x29, sp
  21425c:	bl	215580 <internal_hashmap_first_key_and_value@plt>
  214260:	ldp	x29, x30, [sp], #16
  214264:	ret

0000000000214268 <free_sysvstub>:
  214268:	cbz	x0, 2142cc <free_sysvstub+0x64>
  21426c:	stp	x29, x30, [sp, #-32]!
  214270:	str	x19, [sp, #16]
  214274:	mov	x19, x0
  214278:	ldr	x0, [x0]
  21427c:	mov	x29, sp
  214280:	bl	2154e0 <free@plt>
  214284:	ldr	x0, [x19, #8]
  214288:	bl	2154e0 <free@plt>
  21428c:	ldr	x0, [x19, #16]
  214290:	bl	2154e0 <free@plt>
  214294:	ldr	x0, [x19, #32]
  214298:	bl	2154e0 <free@plt>
  21429c:	ldr	x0, [x19, #40]
  2142a0:	bl	215590 <strv_free@plt>
  2142a4:	ldr	x0, [x19, #48]
  2142a8:	bl	215590 <strv_free@plt>
  2142ac:	ldr	x0, [x19, #56]
  2142b0:	bl	215590 <strv_free@plt>
  2142b4:	ldr	x0, [x19, #64]
  2142b8:	bl	215590 <strv_free@plt>
  2142bc:	mov	x0, x19
  2142c0:	bl	2154e0 <free@plt>
  2142c4:	ldr	x19, [sp, #16]
  2142c8:	ldp	x29, x30, [sp], #32
  2142cc:	ret

00000000002142d0 <hashmap_free>:
  2142d0:	stp	x29, x30, [sp, #-16]!
  2142d4:	mov	x1, xzr
  2142d8:	mov	x2, xzr
  2142dc:	mov	x29, sp
  2142e0:	bl	2155a0 <internal_hashmap_free@plt>
  2142e4:	ldp	x29, x30, [sp], #16
  2142e8:	ret

00000000002142ec <strv_freep>:
  2142ec:	stp	x29, x30, [sp, #-16]!
  2142f0:	ldr	x0, [x0]
  2142f4:	mov	x29, sp
  2142f8:	cbz	x0, 214300 <strv_freep+0x14>
  2142fc:	bl	215590 <strv_free@plt>
  214300:	ldp	x29, x30, [sp], #16
  214304:	ret

0000000000214308 <acquire_search_path>:
  214308:	sub	sp, sp, #0x40
  21430c:	stp	x29, x30, [sp, #16]
  214310:	stp	x22, x21, [sp, #32]
  214314:	stp	x20, x19, [sp, #48]
  214318:	add	x29, sp, #0x10
  21431c:	str	xzr, [sp, #8]
  214320:	cbz	x0, 214448 <acquire_search_path+0x140>
  214324:	mov	x20, x1
  214328:	cbz	x1, 214468 <acquire_search_path+0x160>
  21432c:	mov	x21, x0
  214330:	mov	x0, x20
  214334:	mov	x19, x2
  214338:	bl	2155b0 <getenv@plt>
  21433c:	cbz	x0, 21434c <acquire_search_path+0x44>
  214340:	add	x1, sp, #0x8
  214344:	bl	2155c0 <path_split_and_make_absolute@plt>
  214348:	tbnz	w0, #31, 21439c <acquire_search_path+0x94>
  21434c:	ldr	x20, [sp, #8]
  214350:	mov	x0, x20
  214354:	bl	214568 <strv_isempty>
  214358:	tbz	w0, #0, 214378 <acquire_search_path+0x70>
  21435c:	mov	x0, x20
  214360:	bl	215590 <strv_free@plt>
  214364:	mov	x0, x21
  214368:	mov	x1, xzr
  21436c:	bl	2155d0 <strv_new_internal@plt>
  214370:	str	x0, [sp, #8]
  214374:	cbz	x0, 2143fc <acquire_search_path+0xf4>
  214378:	ldr	x0, [sp, #8]
  21437c:	mov	x1, xzr
  214380:	bl	2155e0 <path_strv_resolve_uniq@plt>
  214384:	cbz	x0, 2143e4 <acquire_search_path+0xdc>
  214388:	ldr	x8, [sp, #8]
  21438c:	mov	w20, wzr
  214390:	str	xzr, [sp, #8]
  214394:	str	x8, [x19]
  214398:	b	214428 <acquire_search_path+0x120>
  21439c:	mov	w22, w0
  2143a0:	mov	w0, wzr
  2143a4:	bl	2152b0 <log_get_max_level_realm@plt>
  2143a8:	cmp	w0, #0x3
  2143ac:	b.lt	21441c <acquire_search_path+0x114>  // b.tstop
  2143b0:	adrp	x2, 202000 <rcnd_table-0x5f8>
  2143b4:	adrp	x4, 202000 <rcnd_table-0x5f8>
  2143b8:	adrp	x5, 202000 <rcnd_table-0x5f8>
  2143bc:	add	x2, x2, #0x1a7
  2143c0:	add	x4, x4, #0x31e
  2143c4:	add	x5, x5, #0x473
  2143c8:	mov	w0, #0x3                   	// #3
  2143cc:	mov	w3, #0x2ca                 	// #714
  2143d0:	mov	w1, w22
  2143d4:	mov	x6, x20
  2143d8:	bl	2152c0 <log_internal_realm@plt>
  2143dc:	mov	w20, w0
  2143e0:	b	214428 <acquire_search_path+0x120>
  2143e4:	adrp	x1, 202000 <rcnd_table-0x5f8>
  2143e8:	adrp	x3, 202000 <rcnd_table-0x5f8>
  2143ec:	add	x1, x1, #0x1a7
  2143f0:	add	x3, x3, #0x31e
  2143f4:	mov	w2, #0x2d6                 	// #726
  2143f8:	b	214410 <acquire_search_path+0x108>
  2143fc:	adrp	x1, 202000 <rcnd_table-0x5f8>
  214400:	adrp	x3, 202000 <rcnd_table-0x5f8>
  214404:	add	x1, x1, #0x1a7
  214408:	add	x3, x3, #0x31e
  21440c:	mov	w2, #0x2d2                 	// #722
  214410:	bl	215330 <log_oom_internal@plt>
  214414:	mov	w20, w0
  214418:	b	214428 <acquire_search_path+0x120>
  21441c:	mov	w8, wzr
  214420:	neg	w9, w22
  214424:	sub	w20, w8, w9, uxtb
  214428:	add	x0, sp, #0x8
  21442c:	bl	2142ec <strv_freep>
  214430:	mov	w0, w20
  214434:	ldp	x20, x19, [sp, #48]
  214438:	ldp	x22, x21, [sp, #32]
  21443c:	ldp	x29, x30, [sp, #16]
  214440:	add	sp, sp, #0x40
  214444:	ret
  214448:	adrp	x1, 201000 <rcnd_table-0x15f8>
  21444c:	adrp	x2, 202000 <rcnd_table-0x5f8>
  214450:	adrp	x4, 202000 <rcnd_table-0x5f8>
  214454:	add	x1, x1, #0xe37
  214458:	add	x2, x2, #0x1a7
  21445c:	add	x4, x4, #0x37
  214460:	mov	w3, #0x2c3                 	// #707
  214464:	bl	215350 <log_assert_failed_realm@plt>
  214468:	adrp	x1, 201000 <rcnd_table-0x15f8>
  21446c:	adrp	x2, 202000 <rcnd_table-0x5f8>
  214470:	adrp	x4, 202000 <rcnd_table-0x5f8>
  214474:	add	x1, x1, #0xd0c
  214478:	add	x2, x2, #0x1a7
  21447c:	add	x4, x4, #0x37
  214480:	mov	w3, #0x2c4                 	// #708
  214484:	mov	w0, wzr
  214488:	bl	215350 <log_assert_failed_realm@plt>

000000000021448c <closedirp>:
  21448c:	stp	x29, x30, [sp, #-16]!
  214490:	ldr	x0, [x0]
  214494:	mov	x29, sp
  214498:	cbz	x0, 2144a0 <closedirp+0x14>
  21449c:	bl	2155f0 <closedir@plt>
  2144a0:	ldp	x29, x30, [sp], #16
  2144a4:	ret

00000000002144a8 <freep>:
  2144a8:	stp	x29, x30, [sp, #-16]!
  2144ac:	ldr	x0, [x0]
  2144b0:	mov	x29, sp
  2144b4:	bl	2154e0 <free@plt>
  2144b8:	ldp	x29, x30, [sp], #16
  2144bc:	ret

00000000002144c0 <free_sysvstubp>:
  2144c0:	stp	x29, x30, [sp, #-16]!
  2144c4:	ldr	x0, [x0]
  2144c8:	mov	x29, sp
  2144cc:	cbz	x0, 2144d4 <free_sysvstubp+0x14>
  2144d0:	bl	214268 <free_sysvstub>
  2144d4:	ldp	x29, x30, [sp], #16
  2144d8:	ret

00000000002144dc <sysv_translate_name>:
  2144dc:	sub	sp, sp, #0x30
  2144e0:	stp	x29, x30, [sp, #16]
  2144e4:	add	x29, sp, #0x10
  2144e8:	str	x19, [sp, #32]
  2144ec:	str	xzr, [x29, #24]
  2144f0:	bl	215500 <strdup@plt>
  2144f4:	mov	x19, x0
  2144f8:	str	x0, [x29, #24]
  2144fc:	cbz	x0, 214534 <sysv_translate_name+0x58>
  214500:	adrp	x1, 201000 <rcnd_table-0x15f8>
  214504:	add	x1, x1, #0xfbf
  214508:	mov	x0, x19
  21450c:	bl	215600 <endswith@plt>
  214510:	str	x0, [sp, #8]
  214514:	cbz	x0, 21451c <sysv_translate_name+0x40>
  214518:	strb	wzr, [x0]
  21451c:	add	x1, sp, #0x8
  214520:	mov	x0, x19
  214524:	bl	214584 <unit_name_mangle>
  214528:	ldr	x8, [sp, #8]
  21452c:	cmp	w0, #0x0
  214530:	csel	x19, xzr, x8, lt  // lt = tstop
  214534:	add	x0, x29, #0x18
  214538:	bl	2144a8 <freep>
  21453c:	mov	x0, x19
  214540:	ldr	x19, [sp, #32]
  214544:	ldp	x29, x30, [sp, #16]
  214548:	add	sp, sp, #0x30
  21454c:	ret

0000000000214550 <hashmap_contains>:
  214550:	stp	x29, x30, [sp, #-16]!
  214554:	mov	x29, sp
  214558:	bl	215610 <internal_hashmap_contains@plt>
  21455c:	and	w0, w0, #0x1
  214560:	ldp	x29, x30, [sp], #16
  214564:	ret

0000000000214568 <strv_isempty>:
  214568:	cbz	x0, 21457c <strv_isempty+0x14>
  21456c:	ldr	x8, [x0]
  214570:	cmp	x8, #0x0
  214574:	cset	w0, eq  // eq = none
  214578:	ret
  21457c:	mov	w0, #0x1                   	// #1
  214580:	ret

0000000000214584 <unit_name_mangle>:
  214584:	stp	x29, x30, [sp, #-16]!
  214588:	adrp	x3, 201000 <rcnd_table-0x15f8>
  21458c:	mov	x4, x1
  214590:	add	x3, x3, #0xe7e
  214594:	mov	x1, xzr
  214598:	mov	w2, wzr
  21459c:	mov	x29, sp
  2145a0:	bl	215620 <unit_name_mangle_with_suffix@plt>
  2145a4:	ldp	x29, x30, [sp], #16
  2145a8:	ret

00000000002145ac <hashmap_get>:
  2145ac:	stp	x29, x30, [sp, #-16]!
  2145b0:	mov	x29, sp
  2145b4:	bl	215630 <internal_hashmap_get@plt>
  2145b8:	ldp	x29, x30, [sp], #16
  2145bc:	ret

00000000002145c0 <set_free>:
  2145c0:	stp	x29, x30, [sp, #-16]!
  2145c4:	mov	x1, xzr
  2145c8:	mov	x2, xzr
  2145cc:	mov	x29, sp
  2145d0:	bl	2155a0 <internal_hashmap_free@plt>
  2145d4:	ldp	x29, x30, [sp], #16
  2145d8:	ret

00000000002145dc <fclosep>:
  2145dc:	stp	x29, x30, [sp, #-16]!
  2145e0:	ldr	x0, [x0]
  2145e4:	mov	x29, sp
  2145e8:	bl	215640 <safe_fclose@plt>
  2145ec:	ldp	x29, x30, [sp], #16
  2145f0:	ret

00000000002145f4 <read_line>:
  2145f4:	stp	x29, x30, [sp, #-16]!
  2145f8:	mov	x3, x1
  2145fc:	mov	w1, #0x100000              	// #1048576
  214600:	mov	w2, wzr
  214604:	mov	x29, sp
  214608:	bl	215650 <read_line_full@plt>
  21460c:	ldp	x29, x30, [sp], #16
  214610:	ret

0000000000214614 <usage_contains_reload>:
  214614:	stp	x29, x30, [sp, #-32]!
  214618:	adrp	x1, 201000 <rcnd_table-0x15f8>
  21461c:	add	x1, x1, #0xd63
  214620:	str	x19, [sp, #16]
  214624:	mov	x29, sp
  214628:	mov	x19, x0
  21462c:	bl	2154a0 <strcasestr@plt>
  214630:	cbnz	x0, 214684 <usage_contains_reload+0x70>
  214634:	adrp	x1, 201000 <rcnd_table-0x15f8>
  214638:	add	x1, x1, #0xe87
  21463c:	mov	x0, x19
  214640:	bl	2154a0 <strcasestr@plt>
  214644:	cbnz	x0, 214684 <usage_contains_reload+0x70>
  214648:	adrp	x1, 202000 <rcnd_table-0x5f8>
  21464c:	add	x1, x1, #0x4cd
  214650:	mov	x0, x19
  214654:	bl	2154a0 <strcasestr@plt>
  214658:	cbnz	x0, 214684 <usage_contains_reload+0x70>
  21465c:	adrp	x1, 201000 <rcnd_table-0x15f8>
  214660:	add	x1, x1, #0xb7f
  214664:	mov	x0, x19
  214668:	bl	2154a0 <strcasestr@plt>
  21466c:	cbnz	x0, 214684 <usage_contains_reload+0x70>
  214670:	adrp	x1, 201000 <rcnd_table-0x15f8>
  214674:	add	x1, x1, #0xdba
  214678:	mov	x0, x19
  21467c:	bl	2154a0 <strcasestr@plt>
  214680:	cbz	x0, 214694 <usage_contains_reload+0x80>
  214684:	mov	w0, #0x1                   	// #1
  214688:	ldr	x19, [sp, #16]
  21468c:	ldp	x29, x30, [sp], #32
  214690:	ret
  214694:	adrp	x1, 202000 <rcnd_table-0x5f8>
  214698:	add	x1, x1, #0x52e
  21469c:	mov	x0, x19
  2146a0:	bl	2154a0 <strcasestr@plt>
  2146a4:	cmp	x0, #0x0
  2146a8:	cset	w0, ne  // ne = any
  2146ac:	b	214688 <usage_contains_reload+0x74>

00000000002146b0 <startswith_no_case>:
  2146b0:	stp	x29, x30, [sp, #-48]!
  2146b4:	stp	x20, x19, [sp, #32]
  2146b8:	mov	x20, x0
  2146bc:	mov	x0, x1
  2146c0:	str	x21, [sp, #16]
  2146c4:	mov	x29, sp
  2146c8:	mov	x19, x1
  2146cc:	bl	2153f0 <strlen@plt>
  2146d0:	mov	x21, x0
  2146d4:	mov	x0, x20
  2146d8:	mov	x1, x19
  2146dc:	mov	x2, x21
  2146e0:	bl	215660 <strncasecmp@plt>
  2146e4:	add	x8, x20, x21
  2146e8:	ldp	x20, x19, [sp, #32]
  2146ec:	ldr	x21, [sp, #16]
  2146f0:	cmp	w0, #0x0
  2146f4:	csel	x0, x8, xzr, eq  // eq = none
  2146f8:	ldp	x29, x30, [sp], #48
  2146fc:	ret

0000000000214700 <empty_to_null>:
  214700:	stp	x29, x30, [sp, #-32]!
  214704:	str	x19, [sp, #16]
  214708:	mov	x29, sp
  21470c:	mov	x19, x0
  214710:	bl	214728 <isempty>
  214714:	tst	w0, #0x1
  214718:	csel	x0, xzr, x19, ne  // ne = any
  21471c:	ldr	x19, [sp, #16]
  214720:	ldp	x29, x30, [sp], #32
  214724:	ret

0000000000214728 <isempty>:
  214728:	cbz	x0, 21473c <isempty+0x14>
  21472c:	ldrb	w8, [x0]
  214730:	cmp	w8, #0x0
  214734:	cset	w0, eq  // eq = none
  214738:	ret
  21473c:	mov	w0, #0x1                   	// #1
  214740:	ret

0000000000214744 <handle_provides>:
  214744:	sub	sp, sp, #0x80
  214748:	stp	x29, x30, [sp, #32]
  21474c:	add	x29, sp, #0x20
  214750:	stp	x28, x27, [sp, #48]
  214754:	stp	x26, x25, [sp, #64]
  214758:	stp	x24, x23, [sp, #80]
  21475c:	stp	x22, x21, [sp, #96]
  214760:	stp	x20, x19, [sp, #112]
  214764:	stur	x3, [x29, #-8]
  214768:	cbz	x0, 214a30 <handle_provides+0x2ec>
  21476c:	cbz	x2, 214a50 <handle_provides+0x30c>
  214770:	cbz	x3, 214a74 <handle_provides+0x330>
  214774:	adrp	x23, 202000 <rcnd_table-0x5f8>
  214778:	adrp	x24, 201000 <rcnd_table-0x15f8>
  21477c:	adrp	x25, 202000 <rcnd_table-0x5f8>
  214780:	mov	w19, w1
  214784:	mov	x20, x0
  214788:	add	x21, x0, #0x28
  21478c:	add	x22, x0, #0x38
  214790:	add	x23, x23, #0x1a7
  214794:	add	x24, x24, #0xdf9
  214798:	add	x25, x25, #0x1
  21479c:	sub	x0, x29, #0x8
  2147a0:	add	x1, sp, #0x10
  2147a4:	mov	w3, #0x9                   	// #9
  2147a8:	mov	x2, xzr
  2147ac:	stp	xzr, xzr, [sp, #8]
  2147b0:	bl	215670 <extract_first_word@plt>
  2147b4:	mov	w28, w0
  2147b8:	tbnz	w0, #31, 214888 <handle_provides+0x144>
  2147bc:	cbz	w28, 2148c8 <handle_provides+0x184>
  2147c0:	ldr	x2, [sp, #16]
  2147c4:	add	x3, sp, #0x8
  2147c8:	mov	x0, x20
  2147cc:	mov	w1, w19
  2147d0:	bl	214d20 <sysv_translate_facility>
  2147d4:	cmp	w0, #0x1
  2147d8:	b.lt	2148e4 <handle_provides+0x1a0>  // b.tstop
  2147dc:	ldr	x28, [sp, #8]
  2147e0:	mov	x0, x28
  2147e4:	bl	215680 <unit_name_to_type@plt>
  2147e8:	cmn	w0, #0x1
  2147ec:	b.eq	214950 <handle_provides+0x20c>  // b.none
  2147f0:	cmp	w0, #0x4
  2147f4:	b.eq	2148ec <handle_provides+0x1a8>  // b.none
  2147f8:	cbnz	w0, 214980 <handle_provides+0x23c>
  2147fc:	bl	2152b0 <log_get_max_level_realm@plt>
  214800:	cmp	w0, #0x7
  214804:	b.lt	214830 <handle_provides+0xec>  // b.tstop
  214808:	ldr	x7, [x20]
  21480c:	adrp	x5, 201000 <rcnd_table-0x15f8>
  214810:	mov	w0, #0x7                   	// #7
  214814:	mov	w3, #0x152                 	// #338
  214818:	mov	w1, wzr
  21481c:	mov	x2, x23
  214820:	mov	x4, x24
  214824:	add	x5, x5, #0xd6c
  214828:	mov	x6, x28
  21482c:	bl	2152c0 <log_internal_realm@plt>
  214830:	ldr	x0, [x20]
  214834:	ldr	x1, [sp, #8]
  214838:	bl	214f78 <add_alias>
  21483c:	tbz	w0, #31, 2149b4 <handle_provides+0x270>
  214840:	mov	w28, w0
  214844:	mov	w0, wzr
  214848:	bl	2152b0 <log_get_max_level_realm@plt>
  21484c:	cmp	w0, #0x4
  214850:	b.lt	2149b4 <handle_provides+0x270>  // b.tstop
  214854:	ldr	x6, [x20, #8]
  214858:	ldr	x8, [sp, #8]
  21485c:	adrp	x5, 201000 <rcnd_table-0x15f8>
  214860:	mov	w0, #0x4                   	// #4
  214864:	mov	w3, #0x155                 	// #341
  214868:	mov	w1, w28
  21486c:	mov	x2, x23
  214870:	mov	x4, x24
  214874:	add	x5, x5, #0xb1f
  214878:	mov	w7, w19
  21487c:	str	x8, [sp]
  214880:	bl	2152c0 <log_internal_realm@plt>
  214884:	b	2149b4 <handle_provides+0x270>
  214888:	mov	w0, wzr
  21488c:	bl	2152b0 <log_get_max_level_realm@plt>
  214890:	cmp	w0, #0x3
  214894:	b.lt	2148d0 <handle_provides+0x18c>  // b.tstop
  214898:	ldr	x6, [x20, #8]
  21489c:	mov	w0, #0x3                   	// #3
  2148a0:	mov	w3, #0x147                 	// #327
  2148a4:	mov	w1, w28
  2148a8:	mov	x2, x23
  2148ac:	mov	x4, x24
  2148b0:	mov	x5, x25
  2148b4:	mov	w7, w19
  2148b8:	bl	2152c0 <log_internal_realm@plt>
  2148bc:	mov	w26, w0
  2148c0:	mov	w27, #0x1                   	// #1
  2148c4:	b	2149b8 <handle_provides+0x274>
  2148c8:	mov	w27, #0x8                   	// #8
  2148cc:	b	2149b8 <handle_provides+0x274>
  2148d0:	mov	w8, wzr
  2148d4:	neg	w9, w28
  2148d8:	sub	w26, w8, w9, uxtb
  2148dc:	mov	w27, #0x1                   	// #1
  2148e0:	b	2149b8 <handle_provides+0x274>
  2148e4:	mov	w27, #0x9                   	// #9
  2148e8:	b	2149b8 <handle_provides+0x274>
  2148ec:	mov	x0, x21
  2148f0:	mov	x1, x28
  2148f4:	bl	215440 <strv_extend@plt>
  2148f8:	adrp	x27, 201000 <rcnd_table-0x15f8>
  2148fc:	add	x27, x27, #0xfec
  214900:	tbnz	w0, #31, 2149d8 <handle_provides+0x294>
  214904:	ldr	x1, [sp, #8]
  214908:	mov	x0, x22
  21490c:	bl	215440 <strv_extend@plt>
  214910:	tbnz	w0, #31, 2149e0 <handle_provides+0x29c>
  214914:	ldr	x0, [sp, #8]
  214918:	adrp	x1, 201000 <rcnd_table-0x15f8>
  21491c:	add	x1, x1, #0xdc3
  214920:	bl	215480 <strcmp@plt>
  214924:	cbnz	w0, 2149b4 <handle_provides+0x270>
  214928:	mov	x0, x21
  21492c:	mov	x1, x27
  214930:	bl	215440 <strv_extend@plt>
  214934:	tbnz	w0, #31, 2149f8 <handle_provides+0x2b4>
  214938:	mov	x0, x22
  21493c:	mov	x1, x27
  214940:	bl	215440 <strv_extend@plt>
  214944:	tbz	w0, #31, 2149b4 <handle_provides+0x270>
  214948:	mov	w2, #0x16e                 	// #366
  21494c:	b	2149e4 <handle_provides+0x2a0>
  214950:	mov	w0, wzr
  214954:	bl	2152b0 <log_get_max_level_realm@plt>
  214958:	cmp	w0, #0x4
  21495c:	b.lt	2149b4 <handle_provides+0x270>  // b.tstop
  214960:	adrp	x5, 201000 <rcnd_table-0x15f8>
  214964:	mov	w0, #0x4                   	// #4
  214968:	mov	w3, #0x174                 	// #372
  21496c:	mov	w1, wzr
  214970:	mov	x2, x23
  214974:	mov	x4, x24
  214978:	add	x5, x5, #0xd91
  21497c:	b	2149ac <handle_provides+0x268>
  214980:	mov	w0, wzr
  214984:	bl	2152b0 <log_get_max_level_realm@plt>
  214988:	cmp	w0, #0x4
  21498c:	b.lt	2149b4 <handle_provides+0x270>  // b.tstop
  214990:	adrp	x5, 202000 <rcnd_table-0x5f8>
  214994:	mov	w0, #0x4                   	// #4
  214998:	mov	w3, #0x178                 	// #376
  21499c:	mov	w1, wzr
  2149a0:	mov	x2, x23
  2149a4:	mov	x4, x24
  2149a8:	add	x5, x5, #0x4d6
  2149ac:	mov	x6, x28
  2149b0:	bl	2152c0 <log_internal_realm@plt>
  2149b4:	mov	w27, wzr
  2149b8:	add	x0, sp, #0x8
  2149bc:	bl	2144a8 <freep>
  2149c0:	add	x0, sp, #0x10
  2149c4:	bl	2144a8 <freep>
  2149c8:	cbz	w27, 21479c <handle_provides+0x58>
  2149cc:	cmp	w27, #0x9
  2149d0:	b.eq	21479c <handle_provides+0x58>  // b.none
  2149d4:	b	214a00 <handle_provides+0x2bc>
  2149d8:	mov	w2, #0x162                 	// #354
  2149dc:	b	2149e4 <handle_provides+0x2a0>
  2149e0:	mov	w2, #0x166                 	// #358
  2149e4:	mov	w0, wzr
  2149e8:	mov	x1, x23
  2149ec:	mov	x3, x24
  2149f0:	bl	215330 <log_oom_internal@plt>
  2149f4:	b	2148bc <handle_provides+0x178>
  2149f8:	mov	w2, #0x16b                 	// #363
  2149fc:	b	2149e4 <handle_provides+0x2a0>
  214a00:	cmp	w27, #0x8
  214a04:	b.ne	214a0c <handle_provides+0x2c8>  // b.any
  214a08:	mov	w26, wzr
  214a0c:	mov	w0, w26
  214a10:	ldp	x20, x19, [sp, #112]
  214a14:	ldp	x22, x21, [sp, #96]
  214a18:	ldp	x24, x23, [sp, #80]
  214a1c:	ldp	x26, x25, [sp, #64]
  214a20:	ldp	x28, x27, [sp, #48]
  214a24:	ldp	x29, x30, [sp, #32]
  214a28:	add	sp, sp, #0x80
  214a2c:	ret
  214a30:	adrp	x1, 201000 <rcnd_table-0x15f8>
  214a34:	adrp	x2, 202000 <rcnd_table-0x5f8>
  214a38:	adrp	x4, 202000 <rcnd_table-0x5f8>
  214a3c:	add	x1, x1, #0xdb8
  214a40:	add	x2, x2, #0x1a7
  214a44:	add	x4, x4, #0x389
  214a48:	mov	w3, #0x13e                 	// #318
  214a4c:	bl	215350 <log_assert_failed_realm@plt>
  214a50:	adrp	x1, 201000 <rcnd_table-0x15f8>
  214a54:	adrp	x2, 202000 <rcnd_table-0x5f8>
  214a58:	adrp	x4, 202000 <rcnd_table-0x5f8>
  214a5c:	add	x1, x1, #0xb88
  214a60:	add	x2, x2, #0x1a7
  214a64:	add	x4, x4, #0x389
  214a68:	mov	w3, #0x13f                 	// #319
  214a6c:	mov	w0, wzr
  214a70:	bl	215350 <log_assert_failed_realm@plt>
  214a74:	adrp	x1, 202000 <rcnd_table-0x5f8>
  214a78:	adrp	x2, 202000 <rcnd_table-0x5f8>
  214a7c:	adrp	x4, 202000 <rcnd_table-0x5f8>
  214a80:	add	x1, x1, #0x291
  214a84:	add	x2, x2, #0x1a7
  214a88:	add	x4, x4, #0x389
  214a8c:	mov	w3, #0x140                 	// #320
  214a90:	mov	w0, wzr
  214a94:	bl	215350 <log_assert_failed_realm@plt>

0000000000214a98 <handle_dependencies>:
  214a98:	sub	sp, sp, #0x80
  214a9c:	stp	x29, x30, [sp, #32]
  214aa0:	add	x29, sp, #0x20
  214aa4:	stp	x28, x27, [sp, #48]
  214aa8:	stp	x26, x25, [sp, #64]
  214aac:	stp	x24, x23, [sp, #80]
  214ab0:	stp	x22, x21, [sp, #96]
  214ab4:	stp	x20, x19, [sp, #112]
  214ab8:	stur	x3, [x29, #-8]
  214abc:	cbz	x0, 214c68 <handle_dependencies+0x1d0>
  214ac0:	mov	x19, x2
  214ac4:	cbz	x2, 214c88 <handle_dependencies+0x1f0>
  214ac8:	cbz	x3, 214cac <handle_dependencies+0x214>
  214acc:	adrp	x24, 202000 <rcnd_table-0x5f8>
  214ad0:	adrp	x25, 202000 <rcnd_table-0x5f8>
  214ad4:	mov	w20, w1
  214ad8:	mov	x21, x0
  214adc:	add	x22, x0, #0x30
  214ae0:	add	x8, x0, #0x38
  214ae4:	add	x28, x0, #0x28
  214ae8:	add	x24, x24, #0x1a7
  214aec:	add	x25, x25, #0x43a
  214af0:	str	x8, [sp]
  214af4:	sub	x0, x29, #0x8
  214af8:	add	x1, sp, #0x10
  214afc:	mov	w3, #0x9                   	// #9
  214b00:	mov	x2, xzr
  214b04:	stp	xzr, xzr, [sp, #8]
  214b08:	bl	215670 <extract_first_word@plt>
  214b0c:	mov	w26, w0
  214b10:	tbnz	w0, #31, 214b88 <handle_dependencies+0xf0>
  214b14:	cbz	w26, 214bc4 <handle_dependencies+0x12c>
  214b18:	ldr	x2, [sp, #16]
  214b1c:	add	x3, sp, #0x8
  214b20:	mov	x0, x21
  214b24:	mov	w1, w20
  214b28:	bl	214d20 <sysv_translate_facility>
  214b2c:	cmp	w0, #0x1
  214b30:	b.lt	214bdc <handle_dependencies+0x144>  // b.tstop
  214b34:	adrp	x1, 202000 <rcnd_table-0x5f8>
  214b38:	mov	x0, x19
  214b3c:	add	x1, x1, #0x379
  214b40:	bl	2146b0 <startswith_no_case>
  214b44:	ldr	x26, [sp, #8]
  214b48:	adrp	x1, 201000 <rcnd_table-0x15f8>
  214b4c:	mov	x27, x0
  214b50:	add	x1, x1, #0xdc3
  214b54:	mov	x0, x26
  214b58:	bl	215480 <strcmp@plt>
  214b5c:	cbnz	x27, 214be4 <handle_dependencies+0x14c>
  214b60:	cbnz	w0, 214be4 <handle_dependencies+0x14c>
  214b64:	mov	x0, x22
  214b68:	mov	x1, x26
  214b6c:	bl	215440 <strv_extend@plt>
  214b70:	tbnz	w0, #31, 214c00 <handle_dependencies+0x168>
  214b74:	ldp	x0, x1, [sp]
  214b78:	bl	215440 <strv_extend@plt>
  214b7c:	tbz	w0, #31, 214bf8 <handle_dependencies+0x160>
  214b80:	mov	w2, #0x1a0                 	// #416
  214b84:	b	214c04 <handle_dependencies+0x16c>
  214b88:	mov	w0, wzr
  214b8c:	bl	2152b0 <log_get_max_level_realm@plt>
  214b90:	cmp	w0, #0x3
  214b94:	b.lt	214bcc <handle_dependencies+0x134>  // b.tstop
  214b98:	ldr	x6, [x21, #8]
  214b9c:	adrp	x5, 202000 <rcnd_table-0x5f8>
  214ba0:	mov	w0, #0x3                   	// #3
  214ba4:	mov	w3, #0x18c                 	// #396
  214ba8:	mov	w1, w26
  214bac:	mov	x2, x24
  214bb0:	mov	x4, x25
  214bb4:	add	x5, x5, #0x1
  214bb8:	mov	w7, w20
  214bbc:	bl	2152c0 <log_internal_realm@plt>
  214bc0:	b	214c14 <handle_dependencies+0x17c>
  214bc4:	mov	w26, #0x8                   	// #8
  214bc8:	b	214c1c <handle_dependencies+0x184>
  214bcc:	mov	w8, wzr
  214bd0:	neg	w9, w26
  214bd4:	sub	w23, w8, w9, uxtb
  214bd8:	b	214c18 <handle_dependencies+0x180>
  214bdc:	mov	w26, #0x9                   	// #9
  214be0:	b	214c1c <handle_dependencies+0x184>
  214be4:	cmp	x27, #0x0
  214be8:	csel	x0, x28, x22, ne  // ne = any
  214bec:	mov	x1, x26
  214bf0:	bl	215440 <strv_extend@plt>
  214bf4:	tbnz	w0, #31, 214b80 <handle_dependencies+0xe8>
  214bf8:	mov	w26, wzr
  214bfc:	b	214c1c <handle_dependencies+0x184>
  214c00:	mov	w2, #0x19a                 	// #410
  214c04:	mov	w0, wzr
  214c08:	mov	x1, x24
  214c0c:	mov	x3, x25
  214c10:	bl	215330 <log_oom_internal@plt>
  214c14:	mov	w23, w0
  214c18:	mov	w26, #0x1                   	// #1
  214c1c:	add	x0, sp, #0x8
  214c20:	bl	2144a8 <freep>
  214c24:	add	x0, sp, #0x10
  214c28:	bl	2144a8 <freep>
  214c2c:	cbz	w26, 214af4 <handle_dependencies+0x5c>
  214c30:	cmp	w26, #0x9
  214c34:	b.eq	214af4 <handle_dependencies+0x5c>  // b.none
  214c38:	cmp	w26, #0x8
  214c3c:	b.ne	214c44 <handle_dependencies+0x1ac>  // b.any
  214c40:	mov	w23, wzr
  214c44:	mov	w0, w23
  214c48:	ldp	x20, x19, [sp, #112]
  214c4c:	ldp	x22, x21, [sp, #96]
  214c50:	ldp	x24, x23, [sp, #80]
  214c54:	ldp	x26, x25, [sp, #64]
  214c58:	ldp	x28, x27, [sp, #48]
  214c5c:	ldp	x29, x30, [sp, #32]
  214c60:	add	sp, sp, #0x80
  214c64:	ret
  214c68:	adrp	x1, 201000 <rcnd_table-0x15f8>
  214c6c:	adrp	x2, 202000 <rcnd_table-0x5f8>
  214c70:	adrp	x4, 202000 <rcnd_table-0x5f8>
  214c74:	add	x1, x1, #0xdb8
  214c78:	add	x2, x2, #0x1a7
  214c7c:	add	x4, x4, #0x8f
  214c80:	mov	w3, #0x182                 	// #386
  214c84:	bl	215350 <log_assert_failed_realm@plt>
  214c88:	adrp	x1, 201000 <rcnd_table-0x15f8>
  214c8c:	adrp	x2, 202000 <rcnd_table-0x5f8>
  214c90:	adrp	x4, 202000 <rcnd_table-0x5f8>
  214c94:	add	x1, x1, #0xb88
  214c98:	add	x2, x2, #0x1a7
  214c9c:	add	x4, x4, #0x8f
  214ca0:	mov	w3, #0x183                 	// #387
  214ca4:	mov	w0, wzr
  214ca8:	bl	215350 <log_assert_failed_realm@plt>
  214cac:	adrp	x1, 202000 <rcnd_table-0x5f8>
  214cb0:	adrp	x2, 202000 <rcnd_table-0x5f8>
  214cb4:	adrp	x4, 202000 <rcnd_table-0x5f8>
  214cb8:	add	x1, x1, #0x291
  214cbc:	add	x2, x2, #0x1a7
  214cc0:	add	x4, x4, #0x8f
  214cc4:	mov	w3, #0x184                 	// #388
  214cc8:	mov	w0, wzr
  214ccc:	bl	215350 <log_assert_failed_realm@plt>

0000000000214cd0 <startswith>:
  214cd0:	stp	x29, x30, [sp, #-48]!
  214cd4:	stp	x20, x19, [sp, #32]
  214cd8:	mov	x20, x0
  214cdc:	mov	x0, x1
  214ce0:	str	x21, [sp, #16]
  214ce4:	mov	x29, sp
  214ce8:	mov	x19, x1
  214cec:	bl	2153f0 <strlen@plt>
  214cf0:	mov	x21, x0
  214cf4:	mov	x0, x20
  214cf8:	mov	x1, x19
  214cfc:	mov	x2, x21
  214d00:	bl	215690 <strncmp@plt>
  214d04:	add	x8, x20, x21
  214d08:	ldp	x20, x19, [sp, #32]
  214d0c:	ldr	x21, [sp, #16]
  214d10:	cmp	w0, #0x0
  214d14:	csel	x0, x8, xzr, eq  // eq = none
  214d18:	ldp	x29, x30, [sp], #48
  214d1c:	ret

0000000000214d20 <sysv_translate_facility>:
  214d20:	stp	x29, x30, [sp, #-96]!
  214d24:	str	x27, [sp, #16]
  214d28:	stp	x26, x25, [sp, #32]
  214d2c:	stp	x24, x23, [sp, #48]
  214d30:	stp	x22, x21, [sp, #64]
  214d34:	stp	x20, x19, [sp, #80]
  214d38:	mov	x29, sp
  214d3c:	cbz	x2, 214f0c <sysv_translate_facility+0x1ec>
  214d40:	mov	x23, x0
  214d44:	cbz	x0, 214f30 <sysv_translate_facility+0x210>
  214d48:	mov	x19, x3
  214d4c:	cbz	x3, 214f54 <sysv_translate_facility+0x234>
  214d50:	ldr	x0, [x23, #8]
  214d54:	mov	x21, x2
  214d58:	mov	w20, w1
  214d5c:	bl	2156a0 <basename@plt>
  214d60:	mov	x8, x21
  214d64:	ldrb	w27, [x8], #1
  214d68:	adrp	x26, 202000 <rcnd_table-0x5f8>
  214d6c:	mov	x24, x0
  214d70:	mov	x25, xzr
  214d74:	cmp	w27, #0x24
  214d78:	csel	x22, x8, x21, eq  // eq = none
  214d7c:	add	x26, x26, #0x648
  214d80:	ldr	x0, [x26, x25, lsl #3]
  214d84:	mov	x1, x22
  214d88:	bl	215480 <strcmp@plt>
  214d8c:	cbz	w0, 214e10 <sysv_translate_facility+0xf0>
  214d90:	cmp	x25, #0xc
  214d94:	add	x25, x25, #0x2
  214d98:	b.cc	214d80 <sysv_translate_facility+0x60>  // b.lo, b.ul, b.last
  214d9c:	cmp	w27, #0x24
  214da0:	b.ne	214e48 <sysv_translate_facility+0x128>  // b.any
  214da4:	adrp	x2, 201000 <rcnd_table-0x15f8>
  214da8:	add	x2, x2, #0xefa
  214dac:	mov	x0, x22
  214db0:	mov	x1, xzr
  214db4:	mov	x3, x19
  214db8:	bl	2156b0 <unit_name_build@plt>
  214dbc:	tbz	w0, #31, 214ebc <sysv_translate_facility+0x19c>
  214dc0:	mov	w19, w0
  214dc4:	mov	w0, wzr
  214dc8:	bl	2152b0 <log_get_max_level_realm@plt>
  214dcc:	cmp	w0, #0x3
  214dd0:	b.lt	214ee0 <sysv_translate_facility+0x1c0>  // b.tstop
  214dd4:	ldr	x6, [x23, #8]
  214dd8:	adrp	x2, 202000 <rcnd_table-0x5f8>
  214ddc:	adrp	x4, 201000 <rcnd_table-0x15f8>
  214de0:	adrp	x5, 202000 <rcnd_table-0x5f8>
  214de4:	mov	w0, #0x3                   	// #3
  214de8:	add	x2, x2, #0x1a7
  214dec:	add	x4, x4, #0xc46
  214df0:	add	x5, x5, #0x173
  214df4:	mov	w3, #0x11f                 	// #287
  214df8:	str	x21, [sp, #-16]!
  214dfc:	mov	w1, w19
  214e00:	mov	w7, w20
  214e04:	bl	2152c0 <log_internal_realm@plt>
  214e08:	add	sp, sp, #0x10
  214e0c:	b	214ec0 <sysv_translate_facility+0x1a0>
  214e10:	cmp	w25, #0xa
  214e14:	b.eq	214ea0 <sysv_translate_facility+0x180>  // b.none
  214e18:	cbz	w25, 214ea0 <sysv_translate_facility+0x180>
  214e1c:	add	x8, x26, x25, lsl #3
  214e20:	ldr	x0, [x8, #8]
  214e24:	bl	215500 <strdup@plt>
  214e28:	cbnz	x0, 214eb8 <sysv_translate_facility+0x198>
  214e2c:	adrp	x1, 202000 <rcnd_table-0x5f8>
  214e30:	adrp	x3, 201000 <rcnd_table-0x15f8>
  214e34:	add	x1, x1, #0x1a7
  214e38:	add	x3, x3, #0xc46
  214e3c:	mov	w2, #0x112                 	// #274
  214e40:	bl	215330 <log_oom_internal@plt>
  214e44:	b	214ec0 <sysv_translate_facility+0x1a0>
  214e48:	mov	x0, x24
  214e4c:	bl	2153f0 <strlen@plt>
  214e50:	add	x9, x0, #0x10
  214e54:	mov	x8, sp
  214e58:	and	x9, x9, #0xfffffffffffffff0
  214e5c:	sub	x20, x8, x9
  214e60:	add	x2, x0, #0x1
  214e64:	mov	sp, x20
  214e68:	mov	x0, x20
  214e6c:	mov	x1, x24
  214e70:	bl	2156c0 <memcpy@plt>
  214e74:	adrp	x1, 201000 <rcnd_table-0x15f8>
  214e78:	add	x1, x1, #0xfbf
  214e7c:	mov	x0, x20
  214e80:	bl	215600 <endswith@plt>
  214e84:	cbz	x0, 214e90 <sysv_translate_facility+0x170>
  214e88:	mov	x24, x20
  214e8c:	strb	wzr, [x0]
  214e90:	mov	x0, x22
  214e94:	mov	x1, x24
  214e98:	bl	21510c <streq_ptr>
  214e9c:	tbz	w0, #0, 214eac <sysv_translate_facility+0x18c>
  214ea0:	mov	w0, wzr
  214ea4:	str	xzr, [x19]
  214ea8:	b	214ec0 <sysv_translate_facility+0x1a0>
  214eac:	mov	x0, x22
  214eb0:	bl	2144dc <sysv_translate_name>
  214eb4:	cbz	x0, 214ef0 <sysv_translate_facility+0x1d0>
  214eb8:	str	x0, [x19]
  214ebc:	mov	w0, #0x1                   	// #1
  214ec0:	mov	sp, x29
  214ec4:	ldp	x20, x19, [sp, #80]
  214ec8:	ldp	x22, x21, [sp, #64]
  214ecc:	ldp	x24, x23, [sp, #48]
  214ed0:	ldp	x26, x25, [sp, #32]
  214ed4:	ldr	x27, [sp, #16]
  214ed8:	ldp	x29, x30, [sp], #96
  214edc:	ret
  214ee0:	mov	w8, wzr
  214ee4:	neg	w9, w19
  214ee8:	sub	w0, w8, w9, uxtb
  214eec:	b	214ec0 <sysv_translate_facility+0x1a0>
  214ef0:	adrp	x1, 202000 <rcnd_table-0x5f8>
  214ef4:	adrp	x3, 201000 <rcnd_table-0x15f8>
  214ef8:	add	x1, x1, #0x1a7
  214efc:	add	x3, x3, #0xc46
  214f00:	mov	w2, #0x135                 	// #309
  214f04:	bl	215330 <log_oom_internal@plt>
  214f08:	b	214ec0 <sysv_translate_facility+0x1a0>
  214f0c:	adrp	x1, 201000 <rcnd_table-0x15f8>
  214f10:	adrp	x2, 202000 <rcnd_table-0x5f8>
  214f14:	adrp	x4, 202000 <rcnd_table-0x5f8>
  214f18:	add	x1, x1, #0xeca
  214f1c:	add	x2, x2, #0x1a7
  214f20:	add	x4, x4, #0x126
  214f24:	mov	w3, #0xff                  	// #255
  214f28:	mov	w0, wzr
  214f2c:	bl	215350 <log_assert_failed_realm@plt>
  214f30:	adrp	x1, 201000 <rcnd_table-0x15f8>
  214f34:	adrp	x2, 202000 <rcnd_table-0x5f8>
  214f38:	adrp	x4, 202000 <rcnd_table-0x5f8>
  214f3c:	add	x1, x1, #0xdb8
  214f40:	add	x2, x2, #0x1a7
  214f44:	add	x4, x4, #0x126
  214f48:	mov	w3, #0x100                 	// #256
  214f4c:	mov	w0, wzr
  214f50:	bl	215350 <log_assert_failed_realm@plt>
  214f54:	adrp	x1, 202000 <rcnd_table-0x5f8>
  214f58:	adrp	x2, 202000 <rcnd_table-0x5f8>
  214f5c:	adrp	x4, 202000 <rcnd_table-0x5f8>
  214f60:	add	x1, x1, #0x81
  214f64:	add	x2, x2, #0x1a7
  214f68:	add	x4, x4, #0x126
  214f6c:	mov	w3, #0x101                 	// #257
  214f70:	mov	w0, wzr
  214f74:	bl	215350 <log_assert_failed_realm@plt>

0000000000214f78 <add_alias>:
  214f78:	stp	x29, x30, [sp, #-48]!
  214f7c:	stp	x22, x21, [sp, #16]
  214f80:	stp	x20, x19, [sp, #32]
  214f84:	mov	x29, sp
  214f88:	cbz	x0, 215098 <add_alias+0x120>
  214f8c:	cbz	x1, 2150b8 <add_alias+0x140>
  214f90:	adrp	x8, 235000 <string_hash_ops+0xf490>
  214f94:	ldr	x21, [x8, #2968]
  214f98:	mov	x19, x0
  214f9c:	ldrb	w8, [x1]
  214fa0:	mov	x20, x1
  214fa4:	cmp	w8, #0x2f
  214fa8:	b.ne	214fbc <add_alias+0x44>  // b.any
  214fac:	mov	x1, x20
  214fb0:	ldrb	w8, [x1, #1]!
  214fb4:	cmp	w8, #0x2f
  214fb8:	b.eq	214f9c <add_alias+0x24>  // b.none
  214fbc:	mov	x0, x21
  214fc0:	bl	214728 <isempty>
  214fc4:	tbz	w0, #0, 214fd0 <add_alias+0x58>
  214fc8:	mov	x22, x20
  214fcc:	b	21505c <add_alias+0xe4>
  214fd0:	mov	x0, x21
  214fd4:	bl	2153f0 <strlen@plt>
  214fd8:	mov	x22, x0
  214fdc:	mov	x0, x20
  214fe0:	bl	2153f0 <strlen@plt>
  214fe4:	add	x8, x22, x0
  214fe8:	add	x22, x8, #0x2
  214fec:	mov	x0, x22
  214ff0:	bl	215128 <size_multiply_overflow>
  214ff4:	tbnz	w0, #0, 2150dc <add_alias+0x164>
  214ff8:	cmp	x22, #0x400, lsl #12
  214ffc:	b.hi	2150e8 <add_alias+0x170>  // b.pmore
  215000:	add	x9, x22, #0xf
  215004:	mov	x8, sp
  215008:	and	x9, x9, #0xfffffffffffffff0
  21500c:	sub	x22, x8, x9
  215010:	mov	sp, x22
  215014:	mov	x0, x22
  215018:	mov	x1, x21
  21501c:	bl	215510 <stpcpy@plt>
  215020:	mov	x8, x0
  215024:	mov	x0, x8
  215028:	cmp	x8, x22
  21502c:	b.ls	215040 <add_alias+0xc8>  // b.plast
  215030:	mov	x8, x0
  215034:	ldrb	w9, [x8, #-1]!
  215038:	cmp	w9, #0x2f
  21503c:	b.eq	215024 <add_alias+0xac>  // b.none
  215040:	ldrb	w8, [x20]
  215044:	cmp	w8, #0x2f
  215048:	b.eq	215054 <add_alias+0xdc>  // b.none
  21504c:	mov	w8, #0x2f                  	// #47
  215050:	strb	w8, [x0], #1
  215054:	mov	x1, x20
  215058:	bl	215520 <strcpy@plt>
  21505c:	mov	x0, x19
  215060:	mov	x1, x22
  215064:	bl	2156d0 <symlink@plt>
  215068:	tbnz	w0, #31, 215074 <add_alias+0xfc>
  21506c:	mov	w0, #0x1                   	// #1
  215070:	b	215084 <add_alias+0x10c>
  215074:	bl	215370 <__errno_location@plt>
  215078:	ldr	w8, [x0]
  21507c:	cmp	w8, #0x11
  215080:	csneg	w0, wzr, w8, eq  // eq = none
  215084:	mov	sp, x29
  215088:	ldp	x20, x19, [sp, #32]
  21508c:	ldp	x22, x21, [sp, #16]
  215090:	ldp	x29, x30, [sp], #48
  215094:	ret
  215098:	adrp	x1, 201000 <rcnd_table-0x15f8>
  21509c:	adrp	x2, 202000 <rcnd_table-0x5f8>
  2150a0:	adrp	x4, 201000 <rcnd_table-0x15f8>
  2150a4:	add	x1, x1, #0xf02
  2150a8:	add	x2, x2, #0x1a7
  2150ac:	add	x4, x4, #0xe98
  2150b0:	mov	w3, #0x57                  	// #87
  2150b4:	bl	215350 <log_assert_failed_realm@plt>
  2150b8:	adrp	x1, 202000 <rcnd_table-0x5f8>
  2150bc:	adrp	x2, 202000 <rcnd_table-0x5f8>
  2150c0:	adrp	x4, 201000 <rcnd_table-0x15f8>
  2150c4:	add	x1, x1, #0x75
  2150c8:	add	x2, x2, #0x1a7
  2150cc:	add	x4, x4, #0xe98
  2150d0:	mov	w3, #0x58                  	// #88
  2150d4:	mov	w0, wzr
  2150d8:	bl	215350 <log_assert_failed_realm@plt>
  2150dc:	adrp	x1, 201000 <rcnd_table-0x15f8>
  2150e0:	add	x1, x1, #0xf0a
  2150e4:	b	2150f0 <add_alias+0x178>
  2150e8:	adrp	x1, 201000 <rcnd_table-0x15f8>
  2150ec:	add	x1, x1, #0xbab
  2150f0:	adrp	x2, 202000 <rcnd_table-0x5f8>
  2150f4:	adrp	x4, 201000 <rcnd_table-0x15f8>
  2150f8:	add	x2, x2, #0x1a7
  2150fc:	add	x4, x4, #0xe98
  215100:	mov	w3, #0x5a                  	// #90
  215104:	mov	w0, wzr
  215108:	bl	215350 <log_assert_failed_realm@plt>

000000000021510c <streq_ptr>:
  21510c:	stp	x29, x30, [sp, #-16]!
  215110:	mov	x29, sp
  215114:	bl	2156e0 <strcmp_ptr@plt>
  215118:	cmp	w0, #0x0
  21511c:	cset	w0, eq  // eq = none
  215120:	ldp	x29, x30, [sp], #16
  215124:	ret

0000000000215128 <size_multiply_overflow>:
  215128:	mov	w0, wzr
  21512c:	ret

0000000000215130 <specifier_escape>:
  215130:	stp	x29, x30, [sp, #-16]!
  215134:	adrp	x1, 202000 <rcnd_table-0x5f8>
  215138:	adrp	x2, 201000 <rcnd_table-0x15f8>
  21513c:	add	x1, x1, #0x5f2
  215140:	add	x2, x2, #0xdb5
  215144:	mov	x29, sp
  215148:	bl	2156f0 <strreplace@plt>
  21514c:	ldp	x29, x30, [sp], #16
  215150:	ret

0000000000215154 <yes_no>:
  215154:	adrp	x8, 201000 <rcnd_table-0x15f8>
  215158:	adrp	x9, 201000 <rcnd_table-0x15f8>
  21515c:	add	x8, x8, #0xfbc
  215160:	add	x9, x9, #0xce8
  215164:	tst	w0, #0x1
  215168:	csel	x0, x9, x8, ne  // ne = any
  21516c:	ret

0000000000215170 <ALIGN_TO>:
  215170:	add	x8, x0, #0x7
  215174:	and	x0, x8, #0xfffffffffffffff8
  215178:	ret
  21517c:	udf	#0

0000000000215180 <__libc_csu_init>:
  215180:	stp	x29, x30, [sp, #-64]!
  215184:	mov	x29, sp
  215188:	stp	x19, x20, [sp, #16]
  21518c:	adrp	x20, 225000 <__fxstatat64@plt+0xf900>
  215190:	add	x20, x20, #0x720
  215194:	stp	x21, x22, [sp, #32]
  215198:	adrp	x21, 225000 <__fxstatat64@plt+0xf900>
  21519c:	add	x21, x21, #0x718
  2151a0:	sub	x20, x20, x21
  2151a4:	mov	w22, w0
  2151a8:	stp	x23, x24, [sp, #48]
  2151ac:	mov	x23, x1
  2151b0:	mov	x24, x2
  2151b4:	bl	215228 <_init>
  2151b8:	cmp	xzr, x20, asr #3
  2151bc:	b.eq	2151e8 <__libc_csu_init+0x68>  // b.none
  2151c0:	asr	x20, x20, #3
  2151c4:	mov	x19, #0x0                   	// #0
  2151c8:	ldr	x3, [x21, x19, lsl #3]
  2151cc:	mov	x2, x24
  2151d0:	add	x19, x19, #0x1
  2151d4:	mov	x1, x23
  2151d8:	mov	w0, w22
  2151dc:	blr	x3
  2151e0:	cmp	x20, x19
  2151e4:	b.ne	2151c8 <__libc_csu_init+0x48>  // b.any
  2151e8:	ldp	x19, x20, [sp, #16]
  2151ec:	ldp	x21, x22, [sp, #32]
  2151f0:	ldp	x23, x24, [sp, #48]
  2151f4:	ldp	x29, x30, [sp], #64
  2151f8:	ret
  2151fc:	nop

0000000000215200 <__libc_csu_fini>:
  215200:	ret
  215204:	udf	#0

0000000000215208 <fstatat64>:
  215208:	mov	x4, x1
  21520c:	mov	x5, x2
  215210:	mov	w1, w0
  215214:	mov	x2, x4
  215218:	mov	w0, #0x0                   	// #0
  21521c:	mov	w4, w3
  215220:	mov	x3, x5
  215224:	b	215700 <__fxstatat64@plt>

Disassembly of section .init:

0000000000215228 <_init>:
  215228:	stp	x29, x30, [sp, #-16]!
  21522c:	mov	x29, sp
  215230:	bl	212860 <call_weak_fn>
  215234:	ldp	x29, x30, [sp], #16
  215238:	ret

Disassembly of section .fini:

000000000021523c <_fini>:
  21523c:	stp	x29, x30, [sp, #-16]!
  215240:	mov	x29, sp
  215244:	ldp	x29, x30, [sp], #16
  215248:	ret

Disassembly of section .plt:

0000000000215250 <__libc_start_main@plt-0x20>:
  215250:	stp	x16, x30, [sp, #-16]!
  215254:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  215258:	ldr	x17, [x16, #2328]
  21525c:	add	x16, x16, #0x918
  215260:	br	x17
  215264:	nop
  215268:	nop
  21526c:	nop

0000000000215270 <__libc_start_main@plt>:
  215270:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  215274:	ldr	x17, [x16, #2336]
  215278:	add	x16, x16, #0x920
  21527c:	br	x17

0000000000215280 <abort@plt>:
  215280:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  215284:	ldr	x17, [x16, #2344]
  215288:	add	x16, x16, #0x928
  21528c:	br	x17

0000000000215290 <__gmon_start__@plt>:
  215290:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  215294:	ldr	x17, [x16, #2352]
  215298:	add	x16, x16, #0x930
  21529c:	br	x17

00000000002152a0 <log_setup_generator@plt>:
  2152a0:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  2152a4:	ldr	x17, [x16, #2360]
  2152a8:	add	x16, x16, #0x938
  2152ac:	br	x17

00000000002152b0 <log_get_max_level_realm@plt>:
  2152b0:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  2152b4:	ldr	x17, [x16, #2368]
  2152b8:	add	x16, x16, #0x940
  2152bc:	br	x17

00000000002152c0 <log_internal_realm@plt>:
  2152c0:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  2152c4:	ldr	x17, [x16, #2376]
  2152c8:	add	x16, x16, #0x948
  2152cc:	br	x17

00000000002152d0 <ask_password_agent_close@plt>:
  2152d0:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  2152d4:	ldr	x17, [x16, #2384]
  2152d8:	add	x16, x16, #0x950
  2152dc:	br	x17

00000000002152e0 <polkit_agent_close@plt>:
  2152e0:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  2152e4:	ldr	x17, [x16, #2392]
  2152e8:	add	x16, x16, #0x958
  2152ec:	br	x17

00000000002152f0 <pager_close@plt>:
  2152f0:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  2152f4:	ldr	x17, [x16, #2400]
  2152f8:	add	x16, x16, #0x960
  2152fc:	br	x17

0000000000215300 <mac_selinux_finish@plt>:
  215300:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  215304:	ldr	x17, [x16, #2408]
  215308:	add	x16, x16, #0x968
  21530c:	br	x17

0000000000215310 <lookup_paths_init@plt>:
  215310:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  215314:	ldr	x17, [x16, #2416]
  215318:	add	x16, x16, #0x970
  21531c:	br	x17

0000000000215320 <internal_hashmap_new@plt>:
  215320:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  215324:	ldr	x17, [x16, #2424]
  215328:	add	x16, x16, #0x978
  21532c:	br	x17

0000000000215330 <log_oom_internal@plt>:
  215330:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  215334:	ldr	x17, [x16, #2432]
  215338:	add	x16, x16, #0x980
  21533c:	br	x17

0000000000215340 <lookup_paths_free@plt>:
  215340:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  215344:	ldr	x17, [x16, #2440]
  215348:	add	x16, x16, #0x988
  21534c:	br	x17

0000000000215350 <log_assert_failed_realm@plt>:
  215350:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  215354:	ldr	x17, [x16, #2448]
  215358:	add	x16, x16, #0x990
  21535c:	br	x17

0000000000215360 <opendir@plt>:
  215360:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  215364:	ldr	x17, [x16, #2456]
  215368:	add	x16, x16, #0x998
  21536c:	br	x17

0000000000215370 <__errno_location@plt>:
  215370:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  215374:	ldr	x17, [x16, #2464]
  215378:	add	x16, x16, #0x9a0
  21537c:	br	x17

0000000000215380 <readdir64@plt>:
  215380:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  215384:	ldr	x17, [x16, #2472]
  215388:	add	x16, x16, #0x9a8
  21538c:	br	x17

0000000000215390 <hidden_or_backup_file@plt>:
  215390:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  215394:	ldr	x17, [x16, #2480]
  215398:	add	x16, x16, #0x9b0
  21539c:	br	x17

00000000002153a0 <dirfd@plt>:
  2153a0:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  2153a4:	ldr	x17, [x16, #2488]
  2153a8:	add	x16, x16, #0x9b8
  2153ac:	br	x17

00000000002153b0 <unit_file_exists@plt>:
  2153b0:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  2153b4:	ldr	x17, [x16, #2496]
  2153b8:	add	x16, x16, #0x9c0
  2153bc:	br	x17

00000000002153c0 <path_join_internal@plt>:
  2153c0:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  2153c4:	ldr	x17, [x16, #2504]
  2153c8:	add	x16, x16, #0x9c8
  2153cc:	br	x17

00000000002153d0 <calloc@plt>:
  2153d0:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  2153d4:	ldr	x17, [x16, #2512]
  2153d8:	add	x16, x16, #0x9d0
  2153dc:	br	x17

00000000002153e0 <hashmap_put@plt>:
  2153e0:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  2153e4:	ldr	x17, [x16, #2520]
  2153e8:	add	x16, x16, #0x9d8
  2153ec:	br	x17

00000000002153f0 <strlen@plt>:
  2153f0:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  2153f4:	ldr	x17, [x16, #2528]
  2153f8:	add	x16, x16, #0x9e0
  2153fc:	br	x17

0000000000215400 <undecchar@plt>:
  215400:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  215404:	ldr	x17, [x16, #2536]
  215408:	add	x16, x16, #0x9e8
  21540c:	br	x17

0000000000215410 <internal_set_ensure_allocated@plt>:
  215410:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  215414:	ldr	x17, [x16, #2544]
  215418:	add	x16, x16, #0x9f0
  21541c:	br	x17

0000000000215420 <set_put@plt>:
  215420:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  215424:	ldr	x17, [x16, #2552]
  215428:	add	x16, x16, #0x9f8
  21542c:	br	x17

0000000000215430 <set_iterate@plt>:
  215430:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  215434:	ldr	x17, [x16, #2560]
  215438:	add	x16, x16, #0xa00
  21543c:	br	x17

0000000000215440 <strv_extend@plt>:
  215440:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  215444:	ldr	x17, [x16, #2568]
  215448:	add	x16, x16, #0xa08
  21544c:	br	x17

0000000000215450 <internal_hashmap_iterate@plt>:
  215450:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  215454:	ldr	x17, [x16, #2576]
  215458:	add	x16, x16, #0xa10
  21545c:	br	x17

0000000000215460 <fopen64@plt>:
  215460:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  215464:	ldr	x17, [x16, #2584]
  215468:	add	x16, x16, #0xa18
  21546c:	br	x17

0000000000215470 <strstrip@plt>:
  215470:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  215474:	ldr	x17, [x16, #2592]
  215478:	add	x16, x16, #0xa20
  21547c:	br	x17

0000000000215480 <strcmp@plt>:
  215480:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  215484:	ldr	x17, [x16, #2600]
  215488:	add	x16, x16, #0xa28
  21548c:	br	x17

0000000000215490 <strspn@plt>:
  215490:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  215494:	ldr	x17, [x16, #2608]
  215498:	add	x16, x16, #0xa30
  21549c:	br	x17

00000000002154a0 <strcasestr@plt>:
  2154a0:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  2154a4:	ldr	x17, [x16, #2616]
  2154a8:	add	x16, x16, #0xa38
  2154ac:	br	x17

00000000002154b0 <free_and_strdup@plt>:
  2154b0:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  2154b4:	ldr	x17, [x16, #2624]
  2154b8:	add	x16, x16, #0xa40
  2154bc:	br	x17

00000000002154c0 <path_is_absolute@plt>:
  2154c0:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  2154c4:	ldr	x17, [x16, #2632]
  2154c8:	add	x16, x16, #0xa48
  2154cc:	br	x17

00000000002154d0 <strjoin_real@plt>:
  2154d0:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  2154d4:	ldr	x17, [x16, #2640]
  2154d8:	add	x16, x16, #0xa50
  2154dc:	br	x17

00000000002154e0 <free@plt>:
  2154e0:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  2154e4:	ldr	x17, [x16, #2648]
  2154e8:	add	x16, x16, #0xa58
  2154ec:	br	x17

00000000002154f0 <strchr@plt>:
  2154f0:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  2154f4:	ldr	x17, [x16, #2656]
  2154f8:	add	x16, x16, #0xa60
  2154fc:	br	x17

0000000000215500 <strdup@plt>:
  215500:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  215504:	ldr	x17, [x16, #2664]
  215508:	add	x16, x16, #0xa68
  21550c:	br	x17

0000000000215510 <stpcpy@plt>:
  215510:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  215514:	ldr	x17, [x16, #2672]
  215518:	add	x16, x16, #0xa70
  21551c:	br	x17

0000000000215520 <strcpy@plt>:
  215520:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  215524:	ldr	x17, [x16, #2680]
  215528:	add	x16, x16, #0xa78
  21552c:	br	x17

0000000000215530 <is_symlink@plt>:
  215530:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  215534:	ldr	x17, [x16, #2688]
  215538:	add	x16, x16, #0xa80
  21553c:	br	x17

0000000000215540 <unlink@plt>:
  215540:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  215544:	ldr	x17, [x16, #2696]
  215548:	add	x16, x16, #0xa88
  21554c:	br	x17

0000000000215550 <fprintf@plt>:
  215550:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  215554:	ldr	x17, [x16, #2704]
  215558:	add	x16, x16, #0xa90
  21555c:	br	x17

0000000000215560 <fflush_and_check@plt>:
  215560:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  215564:	ldr	x17, [x16, #2712]
  215568:	add	x16, x16, #0xa98
  21556c:	br	x17

0000000000215570 <generator_add_symlink@plt>:
  215570:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  215574:	ldr	x17, [x16, #2720]
  215578:	add	x16, x16, #0xaa0
  21557c:	br	x17

0000000000215580 <internal_hashmap_first_key_and_value@plt>:
  215580:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  215584:	ldr	x17, [x16, #2728]
  215588:	add	x16, x16, #0xaa8
  21558c:	br	x17

0000000000215590 <strv_free@plt>:
  215590:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  215594:	ldr	x17, [x16, #2736]
  215598:	add	x16, x16, #0xab0
  21559c:	br	x17

00000000002155a0 <internal_hashmap_free@plt>:
  2155a0:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  2155a4:	ldr	x17, [x16, #2744]
  2155a8:	add	x16, x16, #0xab8
  2155ac:	br	x17

00000000002155b0 <getenv@plt>:
  2155b0:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  2155b4:	ldr	x17, [x16, #2752]
  2155b8:	add	x16, x16, #0xac0
  2155bc:	br	x17

00000000002155c0 <path_split_and_make_absolute@plt>:
  2155c0:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  2155c4:	ldr	x17, [x16, #2760]
  2155c8:	add	x16, x16, #0xac8
  2155cc:	br	x17

00000000002155d0 <strv_new_internal@plt>:
  2155d0:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  2155d4:	ldr	x17, [x16, #2768]
  2155d8:	add	x16, x16, #0xad0
  2155dc:	br	x17

00000000002155e0 <path_strv_resolve_uniq@plt>:
  2155e0:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  2155e4:	ldr	x17, [x16, #2776]
  2155e8:	add	x16, x16, #0xad8
  2155ec:	br	x17

00000000002155f0 <closedir@plt>:
  2155f0:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  2155f4:	ldr	x17, [x16, #2784]
  2155f8:	add	x16, x16, #0xae0
  2155fc:	br	x17

0000000000215600 <endswith@plt>:
  215600:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  215604:	ldr	x17, [x16, #2792]
  215608:	add	x16, x16, #0xae8
  21560c:	br	x17

0000000000215610 <internal_hashmap_contains@plt>:
  215610:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  215614:	ldr	x17, [x16, #2800]
  215618:	add	x16, x16, #0xaf0
  21561c:	br	x17

0000000000215620 <unit_name_mangle_with_suffix@plt>:
  215620:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  215624:	ldr	x17, [x16, #2808]
  215628:	add	x16, x16, #0xaf8
  21562c:	br	x17

0000000000215630 <internal_hashmap_get@plt>:
  215630:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  215634:	ldr	x17, [x16, #2816]
  215638:	add	x16, x16, #0xb00
  21563c:	br	x17

0000000000215640 <safe_fclose@plt>:
  215640:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  215644:	ldr	x17, [x16, #2824]
  215648:	add	x16, x16, #0xb08
  21564c:	br	x17

0000000000215650 <read_line_full@plt>:
  215650:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  215654:	ldr	x17, [x16, #2832]
  215658:	add	x16, x16, #0xb10
  21565c:	br	x17

0000000000215660 <strncasecmp@plt>:
  215660:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  215664:	ldr	x17, [x16, #2840]
  215668:	add	x16, x16, #0xb18
  21566c:	br	x17

0000000000215670 <extract_first_word@plt>:
  215670:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  215674:	ldr	x17, [x16, #2848]
  215678:	add	x16, x16, #0xb20
  21567c:	br	x17

0000000000215680 <unit_name_to_type@plt>:
  215680:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  215684:	ldr	x17, [x16, #2856]
  215688:	add	x16, x16, #0xb28
  21568c:	br	x17

0000000000215690 <strncmp@plt>:
  215690:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  215694:	ldr	x17, [x16, #2864]
  215698:	add	x16, x16, #0xb30
  21569c:	br	x17

00000000002156a0 <basename@plt>:
  2156a0:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  2156a4:	ldr	x17, [x16, #2872]
  2156a8:	add	x16, x16, #0xb38
  2156ac:	br	x17

00000000002156b0 <unit_name_build@plt>:
  2156b0:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  2156b4:	ldr	x17, [x16, #2880]
  2156b8:	add	x16, x16, #0xb40
  2156bc:	br	x17

00000000002156c0 <memcpy@plt>:
  2156c0:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  2156c4:	ldr	x17, [x16, #2888]
  2156c8:	add	x16, x16, #0xb48
  2156cc:	br	x17

00000000002156d0 <symlink@plt>:
  2156d0:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  2156d4:	ldr	x17, [x16, #2896]
  2156d8:	add	x16, x16, #0xb50
  2156dc:	br	x17

00000000002156e0 <strcmp_ptr@plt>:
  2156e0:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  2156e4:	ldr	x17, [x16, #2904]
  2156e8:	add	x16, x16, #0xb58
  2156ec:	br	x17

00000000002156f0 <strreplace@plt>:
  2156f0:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  2156f4:	ldr	x17, [x16, #2912]
  2156f8:	add	x16, x16, #0xb60
  2156fc:	br	x17

0000000000215700 <__fxstatat64@plt>:
  215700:	adrp	x16, 225000 <__fxstatat64@plt+0xf900>
  215704:	ldr	x17, [x16, #2920]
  215708:	add	x16, x16, #0xb68
  21570c:	br	x17
