
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//mmap.module_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_efi_mmap_iterate>:
       0:	stp	x29, x30, [sp, #-128]!
       4:	mov	x29, sp
       8:	add	x4, sp, #0x64
       c:	add	x3, sp, #0x78
      10:	stp	x21, x22, [sp, #32]
      14:	mov	x21, x0
      18:	mov	x22, x1
      1c:	add	x0, sp, #0x68
      20:	mov	x1, #0x0                   	// #0
      24:	stp	x23, x24, [sp, #48]
      28:	mov	w23, w2
      2c:	add	x2, sp, #0x70
      30:	str	wzr, [sp, #100]
      34:	stp	xzr, xzr, [sp, #104]
      38:	str	xzr, [sp, #120]
      3c:	bl	0 <grub_efi_get_memory_map>
      40:	tbnz	w0, #31, 268 <grub_efi_mmap_iterate+0x268>
      44:	ldr	x0, [sp, #104]
      48:	stp	x19, x20, [sp, #16]
      4c:	bl	0 <grub_malloc>
      50:	mov	x20, x0
      54:	cbz	x0, 1a0 <grub_efi_mmap_iterate+0x1a0>
      58:	add	x4, sp, #0x64
      5c:	add	x3, sp, #0x78
      60:	add	x2, sp, #0x70
      64:	add	x0, sp, #0x68
      68:	mov	x1, x20
      6c:	bl	0 <grub_efi_get_memory_map>
      70:	cmp	w0, #0x0
      74:	b.le	198 <grub_efi_mmap_iterate+0x198>
      78:	ldr	x0, [sp, #104]
      7c:	add	x0, x20, x0
      80:	cmp	x20, x0
      84:	b.cs	180 <grub_efi_mmap_iterate+0x180>  // b.hs, b.nlast
      88:	adrp	x2, 0 <grub_efi_mmap_iterate>
      8c:	adrp	x1, 0 <grub_efi_mmap_iterate>
      90:	adrp	x0, 0 <grub_efi_mmap_iterate>
      94:	mov	x19, x20
      98:	stp	x25, x26, [sp, #64]
      9c:	ldr	x24, [x0]
      a0:	str	x27, [sp, #80]
      a4:	ldr	x26, [x2]
      a8:	adrp	x27, 0 <grub_efi_mmap_iterate>
      ac:	ldr	x25, [x1]
      b0:	b	f8 <grub_efi_mmap_iterate+0xf8>
      b4:	cmp	w1, #0x4
      b8:	b.eq	284 <grub_efi_mmap_iterate+0x284>  // b.none
      bc:	b.ls	1c0 <grub_efi_mmap_iterate+0x1c0>  // b.plast
      c0:	cmp	w1, #0x5
      c4:	b.ne	2a4 <grub_efi_mmap_iterate+0x2a4>  // b.any
      c8:	ldr	x1, [x19, #24]
      cc:	ldr	x0, [x19, #8]
      d0:	lsl	x1, x1, #12
      d4:	mov	x3, x22
      d8:	mov	w2, #0x14                  	// #20
      dc:	blr	x21
      e0:	ldr	x0, [sp, #104]
      e4:	ldr	x1, [sp, #120]
      e8:	add	x0, x20, x0
      ec:	add	x19, x19, x1
      f0:	cmp	x19, x0
      f4:	b.cs	178 <grub_efi_mmap_iterate+0x178>  // b.hs, b.nlast
      f8:	ldr	w6, [x19]
      fc:	mov	w1, #0x3f                  	// #63
     100:	ldr	x4, [x19, #8]
     104:	mov	x3, x26
     108:	ldr	x5, [x19, #24]
     10c:	mov	x2, x25
     110:	mov	x0, x24
     114:	add	x5, x4, x5, lsl #12
     118:	bl	0 <grub_real_dprintf>
     11c:	ldr	w1, [x19]
     120:	cmp	w1, #0x7
     124:	b.eq	220 <grub_efi_mmap_iterate+0x220>  // b.none
     128:	b.ls	b4 <grub_efi_mmap_iterate+0xb4>  // b.plast
     12c:	cmp	w1, #0xa
     130:	b.eq	2c0 <grub_efi_mmap_iterate+0x2c0>  // b.none
     134:	b.ls	23c <grub_efi_mmap_iterate+0x23c>  // b.plast
     138:	cmp	w1, #0xd
     13c:	b.ls	2a4 <grub_efi_mmap_iterate+0x2a4>  // b.plast
     140:	cmp	w1, #0xe
     144:	b.ne	1f0 <grub_efi_mmap_iterate+0x1f0>  // b.any
     148:	ldr	x0, [x19, #8]
     14c:	mov	x3, x22
     150:	ldr	x1, [x19, #24]
     154:	mov	w2, #0x7                   	// #7
     158:	lsl	x1, x1, #12
     15c:	blr	x21
     160:	ldr	x0, [sp, #104]
     164:	ldr	x1, [sp, #120]
     168:	add	x0, x20, x0
     16c:	add	x19, x19, x1
     170:	cmp	x19, x0
     174:	b.cc	f8 <grub_efi_mmap_iterate+0xf8>  // b.lo, b.ul, b.last
     178:	ldp	x25, x26, [sp, #64]
     17c:	ldr	x27, [sp, #80]
     180:	mov	w0, #0x0                   	// #0
     184:	ldp	x19, x20, [sp, #16]
     188:	ldp	x21, x22, [sp, #32]
     18c:	ldp	x23, x24, [sp, #48]
     190:	ldp	x29, x30, [sp], #128
     194:	ret
     198:	mov	x0, x20
     19c:	bl	0 <grub_free>
     1a0:	adrp	x0, 0 <grub_efi_mmap_iterate>
     1a4:	ldp	x19, x20, [sp, #16]
     1a8:	ldr	x0, [x0]
     1ac:	ldp	x21, x22, [sp, #32]
     1b0:	ldr	w0, [x0]
     1b4:	ldp	x23, x24, [sp, #48]
     1b8:	ldp	x29, x30, [sp], #128
     1bc:	ret
     1c0:	cmp	w1, #0x3
     1c4:	b.ne	1e8 <grub_efi_mmap_iterate+0x1e8>  // b.any
     1c8:	ldr	x1, [x19, #24]
     1cc:	ldr	x0, [x19, #8]
     1d0:	lsl	x1, x1, #12
     1d4:	cbnz	w23, d4 <grub_efi_mmap_iterate+0xd4>
     1d8:	mov	x3, x22
     1dc:	mov	w2, #0x1                   	// #1
     1e0:	blr	x21
     1e4:	b	e0 <grub_efi_mmap_iterate+0xe0>
     1e8:	cmp	w1, #0x4
     1ec:	b.ne	214 <grub_efi_mmap_iterate+0x214>  // b.any
     1f0:	ldr	x0, [x27]
     1f4:	bl	0 <grub_printf>
     1f8:	ldr	x0, [x19, #8]
     1fc:	mov	x3, x22
     200:	ldr	x1, [x19, #24]
     204:	mov	w2, #0x2                   	// #2
     208:	lsl	x1, x1, #12
     20c:	blr	x21
     210:	b	e0 <grub_efi_mmap_iterate+0xe0>
     214:	cbz	w1, 2a4 <grub_efi_mmap_iterate+0x2a4>
     218:	cmp	w1, #0x3
     21c:	b.eq	1f0 <grub_efi_mmap_iterate+0x1f0>  // b.none
     220:	ldr	x0, [x19, #8]
     224:	mov	x3, x22
     228:	ldr	x1, [x19, #24]
     22c:	mov	w2, #0x1                   	// #1
     230:	lsl	x1, x1, #12
     234:	blr	x21
     238:	b	e0 <grub_efi_mmap_iterate+0xe0>
     23c:	cmp	w1, #0x8
     240:	b.eq	2dc <grub_efi_mmap_iterate+0x2dc>  // b.none
     244:	cmp	w1, #0x9
     248:	b.ne	1f0 <grub_efi_mmap_iterate+0x1f0>  // b.any
     24c:	ldr	x0, [x19, #8]
     250:	mov	x3, x22
     254:	ldr	x1, [x19, #24]
     258:	mov	w2, #0x3                   	// #3
     25c:	lsl	x1, x1, #12
     260:	blr	x21
     264:	b	e0 <grub_efi_mmap_iterate+0xe0>
     268:	adrp	x0, 0 <grub_efi_mmap_iterate>
     26c:	ldp	x21, x22, [sp, #32]
     270:	ldr	x0, [x0]
     274:	ldp	x23, x24, [sp, #48]
     278:	ldr	w0, [x0]
     27c:	ldp	x29, x30, [sp], #128
     280:	ret
     284:	ldr	x1, [x19, #24]
     288:	ldr	x0, [x19, #8]
     28c:	lsl	x1, x1, #12
     290:	cbz	w23, 1d8 <grub_efi_mmap_iterate+0x1d8>
     294:	mov	x3, x22
     298:	mov	w2, #0x2                   	// #2
     29c:	blr	x21
     2a0:	b	e0 <grub_efi_mmap_iterate+0xe0>
     2a4:	ldr	x0, [x19, #8]
     2a8:	mov	x3, x22
     2ac:	ldr	x1, [x19, #24]
     2b0:	mov	w2, #0x2                   	// #2
     2b4:	lsl	x1, x1, #12
     2b8:	blr	x21
     2bc:	b	e0 <grub_efi_mmap_iterate+0xe0>
     2c0:	ldr	x0, [x19, #8]
     2c4:	mov	x3, x22
     2c8:	ldr	x1, [x19, #24]
     2cc:	mov	w2, #0x4                   	// #4
     2d0:	lsl	x1, x1, #12
     2d4:	blr	x21
     2d8:	b	e0 <grub_efi_mmap_iterate+0xe0>
     2dc:	ldr	x0, [x19, #8]
     2e0:	mov	x3, x22
     2e4:	ldr	x1, [x19, #24]
     2e8:	mov	w2, #0x5                   	// #5
     2ec:	lsl	x1, x1, #12
     2f0:	blr	x21
     2f4:	b	e0 <grub_efi_mmap_iterate+0xe0>
	...

0000000000000320 <grub_machine_mmap_iterate>:
     320:	mov	w2, #0x0                   	// #0
     324:	b	0 <grub_efi_mmap_iterate>

0000000000000328 <grub_mmap_register>:
     328:	stp	x29, x30, [sp, #-64]!
     32c:	mov	x29, sp
     330:	stp	x19, x20, [sp, #16]
     334:	mov	x19, x0
     338:	mov	x0, #0x20                  	// #32
     33c:	stp	x21, x22, [sp, #32]
     340:	add	x22, x1, #0xfff
     344:	mov	w21, w2
     348:	bl	0 <grub_malloc>
     34c:	cbz	x0, 440 <grub_mmap_register+0x118>
     350:	adrp	x1, 0 <grub_efi_mmap_iterate>
     354:	mov	x20, x0
     358:	and	x0, x19, #0xfffffffffffff000
     35c:	str	x0, [sp, #56]
     360:	ldr	x1, [x1]
     364:	sub	x19, x19, x0
     368:	add	x19, x19, x22
     36c:	ldr	x2, [x1]
     370:	lsr	x19, x19, #12
     374:	mov	x1, x19
     378:	ldr	x22, [x2, #96]
     37c:	ldr	x2, [x22, #48]
     380:	blr	x2
     384:	cmp	x0, #0x0
     388:	mov	x1, #0xe                   	// #14
     38c:	movk	x1, #0x8000, lsl #48
     390:	ccmp	x0, x1, #0x4, ne  // ne = any
     394:	b.ne	424 <grub_mmap_register+0xfc>  // b.any
     398:	add	w21, w21, #0x2
     39c:	mov	w1, #0x8                   	// #8
     3a0:	cmp	w21, #0x16
     3a4:	ldr	x4, [x22, #40]
     3a8:	b.ls	404 <grub_mmap_register+0xdc>  // b.plast
     3ac:	add	x3, sp, #0x38
     3b0:	mov	x2, x19
     3b4:	mov	w0, #0x2                   	// #2
     3b8:	blr	x4
     3bc:	cbnz	x0, 424 <grub_mmap_register+0xfc>
     3c0:	adrp	x1, 0 <grub_efi_mmap_iterate>
     3c4:	adrp	x0, 0 <grub_efi_mmap_iterate>
     3c8:	ldr	x2, [sp, #56]
     3cc:	stp	x2, x19, [x20, #8]
     3d0:	ldr	x2, [x1]
     3d4:	ldr	x1, [x0]
     3d8:	ldr	w0, [x2]
     3dc:	str	w0, [x20, #24]
     3e0:	ldr	x4, [x1]
     3e4:	add	w3, w0, #0x1
     3e8:	str	x20, [x1]
     3ec:	str	x4, [x20]
     3f0:	str	w3, [x2]
     3f4:	ldp	x19, x20, [sp, #16]
     3f8:	ldp	x21, x22, [sp, #32]
     3fc:	ldp	x29, x30, [sp], #64
     400:	ret
     404:	adrp	x0, 0 <grub_efi_mmap_iterate>
     408:	add	x3, sp, #0x38
     40c:	mov	x2, x19
     410:	ldr	x0, [x0]
     414:	ldr	w1, [x0, w21, uxtw #2]
     418:	mov	w0, #0x2                   	// #2
     41c:	blr	x4
     420:	cbz	x0, 3c0 <grub_mmap_register+0x98>
     424:	mov	x0, x20
     428:	bl	0 <grub_free>
     42c:	mov	w0, #0x0                   	// #0
     430:	ldp	x19, x20, [sp, #16]
     434:	ldp	x21, x22, [sp, #32]
     438:	ldp	x29, x30, [sp], #64
     43c:	ret
     440:	mov	w0, #0x0                   	// #0
     444:	ldp	x19, x20, [sp, #16]
     448:	ldp	x21, x22, [sp, #32]
     44c:	ldp	x29, x30, [sp], #64
     450:	ret
     454:	nop
	...

0000000000000478 <grub_mmap_unregister>:
     478:	stp	x29, x30, [sp, #-48]!
     47c:	adrp	x1, 0 <grub_efi_mmap_iterate>
     480:	mov	w2, w0
     484:	mov	x29, sp
     488:	str	x21, [sp, #32]
     48c:	ldr	x21, [x1]
     490:	stp	x19, x20, [sp, #16]
     494:	ldr	x19, [x21]
     498:	cbz	x19, 504 <grub_mmap_unregister+0x8c>
     49c:	mov	x20, #0x0                   	// #0
     4a0:	b	4b4 <grub_mmap_unregister+0x3c>
     4a4:	ldr	x1, [x19]
     4a8:	mov	x20, x19
     4ac:	mov	x19, x1
     4b0:	cbz	x1, 504 <grub_mmap_unregister+0x8c>
     4b4:	ldr	w1, [x19, #24]
     4b8:	cmp	w1, w2
     4bc:	b.ne	4a4 <grub_mmap_unregister+0x2c>  // b.any
     4c0:	adrp	x1, 0 <grub_efi_mmap_iterate>
     4c4:	ldr	x2, [x1]
     4c8:	ldp	x0, x1, [x19, #8]
     4cc:	ldr	x2, [x2]
     4d0:	ldr	x2, [x2, #96]
     4d4:	ldr	x2, [x2, #48]
     4d8:	blr	x2
     4dc:	ldr	x0, [x19]
     4e0:	cbz	x20, 520 <grub_mmap_unregister+0xa8>
     4e4:	str	x0, [x20]
     4e8:	mov	x0, x19
     4ec:	bl	0 <grub_free>
     4f0:	mov	w0, #0x0                   	// #0
     4f4:	ldp	x19, x20, [sp, #16]
     4f8:	ldr	x21, [sp, #32]
     4fc:	ldp	x29, x30, [sp], #48
     500:	ret
     504:	adrp	x1, 0 <grub_efi_mmap_iterate>
     508:	mov	w0, #0x26                  	// #38
     50c:	ldp	x19, x20, [sp, #16]
     510:	ldr	x21, [sp, #32]
     514:	ldp	x29, x30, [sp], #48
     518:	ldr	x1, [x1]
     51c:	b	0 <grub_error>
     520:	str	x0, [x21]
     524:	mov	x0, x19
     528:	bl	0 <grub_free>
     52c:	mov	w0, #0x0                   	// #0
     530:	ldp	x19, x20, [sp, #16]
     534:	ldr	x21, [sp, #32]
     538:	ldp	x29, x30, [sp], #48
     53c:	ret
	...

0000000000000558 <grub_mmap_malign_and_register>:
     558:	stp	x29, x30, [sp, #-80]!
     55c:	mov	x0, #0x20                  	// #32
     560:	mov	x29, sp
     564:	stp	x19, x20, [sp, #16]
     568:	mov	x19, x1
     56c:	stp	x21, x22, [sp, #32]
     570:	mov	x22, x2
     574:	mov	w21, w3
     578:	bl	0 <grub_malloc>
     57c:	cbz	x0, 674 <grub_mmap_malign_and_register+0x11c>
     580:	mov	x20, x0
     584:	adrp	x0, 0 <grub_efi_mmap_iterate>
     588:	add	x19, x19, #0xfff
     58c:	mov	x1, #0xffffffff            	// #4294967295
     590:	ldr	x0, [x0]
     594:	str	x1, [sp, #72]
     598:	add	w3, w21, #0x2
     59c:	lsr	x19, x19, #12
     5a0:	cmp	w3, #0x16
     5a4:	mov	w21, #0x8                   	// #8
     5a8:	ldr	x0, [x0]
     5ac:	str	x23, [sp, #48]
     5b0:	ldr	x23, [x0, #96]
     5b4:	ldr	x4, [x23, #40]
     5b8:	b.ls	660 <grub_mmap_malign_and_register+0x108>  // b.plast
     5bc:	mov	x2, x19
     5c0:	add	x3, sp, #0x48
     5c4:	mov	w1, w21
     5c8:	mov	w0, #0x0                   	// #0
     5cc:	blr	x4
     5d0:	cbnz	x0, 688 <grub_mmap_malign_and_register+0x130>
     5d4:	ldr	x2, [sp, #72]
     5d8:	cbnz	x2, 614 <grub_mmap_malign_and_register+0xbc>
     5dc:	ldr	x4, [x23, #40]
     5e0:	mov	x0, #0xffffffff            	// #4294967295
     5e4:	add	x3, sp, #0x48
     5e8:	mov	x2, x19
     5ec:	str	x0, [sp, #72]
     5f0:	mov	w1, w21
     5f4:	mov	w0, #0x0                   	// #0
     5f8:	blr	x4
     5fc:	mov	x21, x0
     600:	mov	x1, x19
     604:	mov	x0, #0x0                   	// #0
     608:	bl	0 <grub_efi_free_pages>
     60c:	cbnz	x21, 670 <grub_mmap_malign_and_register+0x118>
     610:	ldr	x2, [sp, #72]
     614:	adrp	x3, 0 <grub_efi_mmap_iterate>
     618:	adrp	x1, 0 <grub_efi_mmap_iterate>
     61c:	mov	x0, x2
     620:	ldr	x3, [x3]
     624:	ldr	x23, [sp, #48]
     628:	stp	x2, x19, [x20, #8]
     62c:	ldr	x2, [x1]
     630:	ldr	x1, [x3]
     634:	str	x1, [x20]
     638:	ldr	w1, [x2]
     63c:	str	w1, [x20, #24]
     640:	add	w4, w1, #0x1
     644:	str	x20, [x3]
     648:	str	w4, [x2]
     64c:	str	w1, [x22]
     650:	ldp	x19, x20, [sp, #16]
     654:	ldp	x21, x22, [sp, #32]
     658:	ldp	x29, x30, [sp], #80
     65c:	ret
     660:	adrp	x0, 0 <grub_efi_mmap_iterate>
     664:	ldr	x0, [x0]
     668:	ldr	w21, [x0, w3, uxtw #2]
     66c:	b	5bc <grub_mmap_malign_and_register+0x64>
     670:	ldr	x23, [sp, #48]
     674:	mov	x0, #0x0                   	// #0
     678:	ldp	x19, x20, [sp, #16]
     67c:	ldp	x21, x22, [sp, #32]
     680:	ldp	x29, x30, [sp], #80
     684:	ret
     688:	mov	x0, x20
     68c:	bl	0 <grub_free>
     690:	mov	x0, #0x0                   	// #0
     694:	ldr	x23, [sp, #48]
     698:	b	650 <grub_mmap_malign_and_register+0xf8>
     69c:	nop
	...

00000000000006c0 <grub_mmap_free_and_unregister>:
     6c0:	stp	x29, x30, [sp, #-48]!
     6c4:	adrp	x1, 0 <grub_efi_mmap_iterate>
     6c8:	mov	w2, w0
     6cc:	mov	x29, sp
     6d0:	str	x21, [sp, #32]
     6d4:	ldr	x21, [x1]
     6d8:	stp	x19, x20, [sp, #16]
     6dc:	ldr	x19, [x21]
     6e0:	cbz	x19, 744 <grub_mmap_free_and_unregister+0x84>
     6e4:	mov	x20, #0x0                   	// #0
     6e8:	b	6fc <grub_mmap_free_and_unregister+0x3c>
     6ec:	ldr	x0, [x19]
     6f0:	mov	x20, x19
     6f4:	mov	x19, x0
     6f8:	cbz	x0, 744 <grub_mmap_free_and_unregister+0x84>
     6fc:	ldr	w0, [x19, #24]
     700:	cmp	w2, w0
     704:	b.ne	6ec <grub_mmap_free_and_unregister+0x2c>  // b.any
     708:	adrp	x1, 0 <grub_efi_mmap_iterate>
     70c:	ldr	x2, [x1]
     710:	ldp	x0, x1, [x19, #8]
     714:	ldr	x2, [x2]
     718:	ldr	x2, [x2, #96]
     71c:	ldr	x2, [x2, #48]
     720:	blr	x2
     724:	ldr	x0, [x19]
     728:	cbz	x20, 760 <grub_mmap_free_and_unregister+0xa0>
     72c:	str	x0, [x20]
     730:	mov	x0, x19
     734:	ldp	x19, x20, [sp, #16]
     738:	ldr	x21, [sp, #32]
     73c:	ldp	x29, x30, [sp], #48
     740:	b	0 <grub_free>
     744:	adrp	x1, 0 <grub_efi_mmap_iterate>
     748:	mov	w0, #0x26                  	// #38
     74c:	ldp	x19, x20, [sp, #16]
     750:	ldr	x21, [sp, #32]
     754:	ldp	x29, x30, [sp], #48
     758:	ldr	x1, [x1]
     75c:	b	0 <grub_error>
     760:	str	x0, [x21]
     764:	mov	x0, x19
     768:	ldp	x19, x20, [sp, #16]
     76c:	ldr	x21, [sp, #32]
     770:	ldp	x29, x30, [sp], #48
     774:	b	0 <grub_free>
	...

0000000000000790 <count_hook>:
     790:	ldr	w1, [x3]
     794:	mov	w0, #0x0                   	// #0
     798:	add	w1, w1, #0x1
     79c:	str	w1, [x3]
     7a0:	ret
     7a4:	nop

00000000000007a8 <fill_hook>:
     7a8:	stp	x29, x30, [sp, #-48]!
     7ac:	cmn	w2, #0x2
     7b0:	mov	x29, sp
     7b4:	stp	x19, x20, [sp, #16]
     7b8:	mov	x20, x1
     7bc:	mov	x19, x3
     7c0:	str	x21, [sp, #32]
     7c4:	mov	x21, x0
     7c8:	b.eq	824 <fill_hook+0x7c>  // b.none
     7cc:	ldr	w5, [x19, #8]
     7d0:	mov	w0, #0x18                  	// #24
     7d4:	ldr	x1, [x19]
     7d8:	add	w7, w5, #0x2
     7dc:	add	x20, x21, x20
     7e0:	mov	w8, #0x1                   	// #1
     7e4:	smull	x5, w5, w0
     7e8:	mov	w0, #0x0                   	// #0
     7ec:	add	x4, x1, x5
     7f0:	add	x6, x5, #0x18
     7f4:	add	x3, x1, x6
     7f8:	str	x21, [x1, x5]
     7fc:	ldr	x21, [sp, #32]
     800:	stp	wzr, w2, [x4, #8]
     804:	str	wzr, [x4, #16]
     808:	str	x20, [x1, x6]
     80c:	stp	w8, w2, [x3, #8]
     810:	str	wzr, [x3, #16]
     814:	str	w7, [x19, #8]
     818:	ldp	x19, x20, [sp, #16]
     81c:	ldp	x29, x30, [sp], #48
     820:	ret
     824:	adrp	x1, 0 <grub_efi_mmap_iterate>
     828:	adrp	x5, 0 <grub_efi_mmap_iterate>
     82c:	adrp	x0, 0 <grub_efi_mmap_iterate>
     830:	mov	w4, w2
     834:	ldr	x3, [x1]
     838:	mov	w1, #0x51                  	// #81
     83c:	ldr	x2, [x5]
     840:	ldr	x0, [x0]
     844:	bl	0 <grub_real_dprintf>
     848:	mov	w2, #0x2                   	// #2
     84c:	b	7cc <fill_hook+0x24>
	...

0000000000000868 <grub_cmd_badram>:
     868:	stp	x29, x30, [sp, #-208]!
     86c:	cmp	w1, #0x1
     870:	mov	x29, sp
     874:	b.eq	890 <grub_cmd_badram+0x28>  // b.none
     878:	adrp	x1, 0 <grub_efi_mmap_iterate>
     87c:	mov	w0, #0x12                  	// #18
     880:	ldr	x1, [x1]
     884:	bl	0 <grub_error>
     888:	ldp	x29, x30, [sp], #208
     88c:	ret
     890:	adrp	x3, 0 <grub_efi_mmap_iterate>
     894:	adrp	x0, 0 <grub_efi_mmap_iterate>
     898:	stp	x19, x20, [sp, #16]
     89c:	mov	x19, x2
     8a0:	adrp	x2, 0 <grub_efi_mmap_iterate>
     8a4:	ldr	x3, [x3]
     8a8:	stp	x23, x24, [sp, #48]
     8ac:	mov	w1, #0x1b0                 	// #432
     8b0:	ldr	x24, [x0]
     8b4:	stp	x25, x26, [sp, #64]
     8b8:	mov	x23, #0x1                   	// #1
     8bc:	ldr	x25, [x2]
     8c0:	mov	x0, x24
     8c4:	stp	x21, x22, [sp, #32]
     8c8:	mov	x2, x25
     8cc:	stp	x27, x28, [sp, #80]
     8d0:	bl	0 <grub_real_dprintf>
     8d4:	adrp	x1, 0 <grub_efi_mmap_iterate>
     8d8:	ldr	x0, [x19]
     8dc:	str	x0, [sp, #160]
     8e0:	ldr	x1, [x1]
     8e4:	str	x1, [sp, #136]
     8e8:	add	x1, sp, #0xa0
     8ec:	mov	w2, #0x10                  	// #16
     8f0:	bl	0 <grub_strtoull>
     8f4:	mov	x20, x0
     8f8:	ldr	x1, [sp, #160]
     8fc:	ldrb	w0, [x1]
     900:	cmp	w0, #0x2c
     904:	b.ne	910 <grub_cmd_badram+0xa8>  // b.any
     908:	add	x1, x1, #0x1
     90c:	str	x1, [sp, #160]
     910:	mov	x0, x1
     914:	mov	w2, #0x10                  	// #16
     918:	add	x1, sp, #0xa0
     91c:	bl	0 <grub_strtoull>
     920:	ldr	x1, [sp, #160]
     924:	ldrb	w2, [x1]
     928:	cmp	w2, #0x2c
     92c:	b.ne	938 <grub_cmd_badram+0xd0>  // b.any
     930:	add	x1, x1, #0x1
     934:	str	x1, [sp, #160]
     938:	ldr	x1, [sp, #136]
     93c:	ldr	w1, [x1]
     940:	cmp	w1, #0xa
     944:	b.eq	ddc <grub_cmd_badram+0x574>  // b.none
     948:	adrp	x1, 0 <grub_efi_mmap_iterate>
     94c:	and	x19, x0, #0xfffffffffffffc00
     950:	mov	x5, x19
     954:	mov	x4, x20
     958:	ldr	x3, [x1]
     95c:	mov	x2, x25
     960:	mov	x0, x24
     964:	mov	w1, #0x1c8                 	// #456
     968:	bl	0 <grub_real_dprintf>
     96c:	str	wzr, [sp, #156]
     970:	adrp	x0, 0 <grub_efi_mmap_iterate>
     974:	add	x1, sp, #0x9c
     978:	ldr	x0, [x0]
     97c:	bl	320 <grub_machine_mmap_iterate>
     980:	ldr	w1, [sp, #156]
     984:	mov	w0, #0x30                  	// #48
     988:	smull	x0, w1, w0
     98c:	bl	0 <grub_malloc>
     990:	mov	x1, x0
     994:	mov	x0, #0x10                  	// #16
     998:	str	x1, [sp, #168]
     99c:	bl	0 <grub_zalloc>
     9a0:	mov	x28, x0
     9a4:	ldr	x1, [sp, #168]
     9a8:	cmp	x1, #0x0
     9ac:	ccmp	x0, #0x0, #0x4, ne  // ne = any
     9b0:	b.eq	dc4 <grub_cmd_badram+0x55c>  // b.none
     9b4:	adrp	x0, 0 <grub_efi_mmap_iterate>
     9b8:	add	x1, sp, #0xa8
     9bc:	str	wzr, [sp, #176]
     9c0:	ldr	x0, [x0]
     9c4:	bl	320 <grub_machine_mmap_iterate>
     9c8:	ldr	w11, [sp, #156]
     9cc:	mov	w3, #0x0                   	// #0
     9d0:	mov	w7, #0x0                   	// #0
     9d4:	mov	w13, #0x18                  	// #24
     9d8:	ldr	x2, [sp, #168]
     9dc:	lsl	w11, w11, #1
     9e0:	sub	w6, w11, #0x1
     9e4:	cmp	w6, w3
     9e8:	b.le	a18 <grub_cmd_badram+0x1b0>
     9ec:	nop
     9f0:	smaddl	x1, w3, w13, x2
     9f4:	ldr	x4, [x1]
     9f8:	add	x0, x1, #0x18
     9fc:	ldr	x5, [x1, #24]
     a00:	cmp	x5, x4
     a04:	b.cc	c00 <grub_cmd_badram+0x398>  // b.lo, b.ul, b.last
     a08:	b.eq	be8 <grub_cmd_badram+0x380>  // b.none
     a0c:	add	w3, w3, #0x1
     a10:	cmp	w6, w3
     a14:	b.gt	9f0 <grub_cmd_badram+0x188>
     a18:	cbz	w7, a2c <grub_cmd_badram+0x1c4>
     a1c:	cmp	w6, #0x0
     a20:	mov	w3, #0x0                   	// #0
     a24:	mov	w7, #0x0                   	// #0
     a28:	b.gt	9f0 <grub_cmd_badram+0x188>
     a2c:	ldr	w27, [x2, #12]
     a30:	and	x20, x20, x19
     a34:	cmp	w11, #0x0
     a38:	mov	x21, #0x0                   	// #0
     a3c:	ldr	x26, [x2]
     a40:	b.le	bd8 <grub_cmd_badram+0x370>
     a44:	nop
     a48:	add	x22, x21, x21, lsl #1
     a4c:	lsl	x3, x22, #3
     a50:	add	x0, x2, x3
     a54:	ldrsw	x5, [x0, #16]
     a58:	ldr	w7, [x0, #8]
     a5c:	lsl	x5, x5, #4
     a60:	add	x1, x28, x5
     a64:	ldr	w6, [x1, #12]
     a68:	cbz	w7, ca4 <grub_cmd_badram+0x43c>
     a6c:	cbz	w6, a98 <grub_cmd_badram+0x230>
     a70:	ldr	w3, [x0, #12]
     a74:	ldr	w6, [x1, #8]
     a78:	ldr	x0, [x28, x5]
     a7c:	cmp	w6, w3
     a80:	b.ne	cf4 <grub_cmd_badram+0x48c>  // b.any
     a84:	cbz	x0, dbc <grub_cmd_badram+0x554>
     a88:	ldp	x2, x3, [x0]
     a8c:	stp	x2, x3, [x1]
     a90:	bl	0 <grub_free>
     a94:	ldr	x2, [sp, #168]
     a98:	mov	w6, #0xffffffff            	// #-1
     a9c:	ldr	w0, [x28, #12]
     aa0:	cbnz	w0, c90 <grub_cmd_badram+0x428>
     aa4:	ldr	x7, [x2, x22, lsl #3]
     aa8:	cmp	x7, x26
     aac:	b.eq	bc4 <grub_cmd_badram+0x35c>  // b.none
     ab0:	add	w27, w27, #0x2
     ab4:	cmp	w27, #0x1
     ab8:	b.ls	c40 <grub_cmd_badram+0x3d8>  // b.plast
     abc:	adrp	x0, 0 <grub_efi_mmap_iterate>
     ac0:	sub	x5, x7, x26
     ac4:	mov	x4, x26
     ac8:	mov	x2, x25
     acc:	ldr	x3, [x0]
     ad0:	mov	w1, #0x17b                 	// #379
     ad4:	mov	x0, x24
     ad8:	str	x7, [sp, #104]
     adc:	str	w6, [sp, #116]
     ae0:	bl	0 <grub_real_dprintf>
     ae4:	ldr	w6, [sp, #116]
     ae8:	mov	w5, #0x0                   	// #0
     aec:	ldr	x7, [sp, #104]
     af0:	add	w5, w5, #0x1
     af4:	lsr	x0, x19, x5
     af8:	tbz	w0, #0, af0 <grub_cmd_badram+0x288>
     afc:	mov	w3, #0x0                   	// #0
     b00:	mov	w0, #0x0                   	// #0
     b04:	nop
     b08:	lsr	x1, x19, x0
     b0c:	add	w0, w0, #0x1
     b10:	tst	x1, #0x1
     b14:	cinc	w3, w3, eq  // eq = none
     b18:	cmp	w0, #0x40
     b1c:	b.ne	b08 <grub_cmd_badram+0x2a0>  // b.any
     b20:	cmp	x20, x26
     b24:	b.cc	d2c <grub_cmd_badram+0x4c4>  // b.lo, b.ul, b.last
     b28:	mov	x27, #0x0                   	// #0
     b2c:	sub	w3, w3, w5
     b30:	lsl	x26, x23, x5
     b34:	adrp	x9, 0 <grub_efi_mmap_iterate>
     b38:	lsl	x8, x23, x3
     b3c:	cmp	x27, x8
     b40:	b.cs	bbc <grub_cmd_badram+0x354>  // b.hs, b.nlast
     b44:	nop
     b48:	mov	w1, #0x0                   	// #0
     b4c:	lsr	x0, x19, x1
     b50:	tbnz	w0, #0, c48 <grub_cmd_badram+0x3e0>
     b54:	add	w1, w1, #0x1
     b58:	cmp	w1, #0x40
     b5c:	b.ne	b4c <grub_cmd_badram+0x2e4>  // b.any
     b60:	mov	x4, x20
     b64:	cmp	x7, x4
     b68:	b.ls	bbc <grub_cmd_badram+0x354>  // b.plast
     b6c:	ldr	x3, [x9]
     b70:	mov	x5, x26
     b74:	mov	x2, x25
     b78:	mov	x0, x24
     b7c:	mov	w1, #0x19f                 	// #415
     b80:	str	x4, [sp, #104]
     b84:	str	w6, [sp, #116]
     b88:	add	x27, x27, #0x1
     b8c:	stp	x7, x8, [sp, #120]
     b90:	bl	0 <grub_real_dprintf>
     b94:	mov	x1, x26
     b98:	ldr	x4, [sp, #104]
     b9c:	mov	w2, #0xfffffffe            	// #-2
     ba0:	mov	x0, x4
     ba4:	bl	328 <grub_mmap_register>
     ba8:	ldp	x7, x8, [sp, #120]
     bac:	adrp	x9, 0 <grub_efi_mmap_iterate>
     bb0:	ldr	w6, [sp, #116]
     bb4:	cmp	x27, x8
     bb8:	b.ne	b48 <grub_cmd_badram+0x2e0>  // b.any
     bbc:	ldr	x2, [sp, #168]
     bc0:	ldr	x26, [x2, x22, lsl #3]
     bc4:	mov	w27, w6
     bc8:	ldr	w0, [sp, #156]
     bcc:	add	x21, x21, #0x1
     bd0:	cmp	w21, w0, lsl #1
     bd4:	b.lt	a48 <grub_cmd_badram+0x1e0>  // b.tstop
     bd8:	mov	x0, x2
     bdc:	bl	0 <grub_free>
     be0:	ldr	x0, [sp, #160]
     be4:	b	8e8 <grub_cmd_badram+0x80>
     be8:	ldr	w4, [x1, #32]
     bec:	cbnz	w4, a0c <grub_cmd_badram+0x1a4>
     bf0:	ldr	w4, [x1, #8]
     bf4:	cmp	w4, #0x1
     bf8:	b.ne	a0c <grub_cmd_badram+0x1a4>  // b.any
     bfc:	nop
     c00:	ldp	x4, x5, [x1]
     c04:	mov	w7, #0x1                   	// #1
     c08:	ldr	x10, [x0, #16]
     c0c:	str	x10, [sp, #200]
     c10:	ldr	x12, [x1, #16]
     c14:	add	w3, w3, w7
     c18:	ldp	x8, x9, [x1, #24]
     c1c:	stp	x4, x5, [x1, #24]
     c20:	cmp	w6, w3
     c24:	str	x12, [x0, #16]
     c28:	stp	x8, x9, [x1]
     c2c:	str	x10, [x1, #16]
     c30:	mov	x1, x0
     c34:	stp	x8, x9, [sp, #184]
     c38:	b.gt	9f4 <grub_cmd_badram+0x18c>
     c3c:	b	a1c <grub_cmd_badram+0x1b4>
     c40:	mov	x26, x7
     c44:	b	bc4 <grub_cmd_badram+0x35c>
     c48:	cmp	w1, #0x3f
     c4c:	mov	x4, x20
     c50:	add	w1, w1, #0x1
     c54:	mov	w0, #0x0                   	// #0
     c58:	b.eq	b64 <grub_cmd_badram+0x2fc>  // b.none
     c5c:	nop
     c60:	lsl	x2, x23, x1
     c64:	orr	x2, x4, x2
     c68:	lsr	x10, x19, x1
     c6c:	add	w1, w1, #0x1
     c70:	lsr	x3, x27, x0
     c74:	tbnz	w10, #0, c84 <grub_cmd_badram+0x41c>
     c78:	tst	x3, #0x1
     c7c:	add	w0, w0, #0x1
     c80:	csel	x4, x2, x4, ne  // ne = any
     c84:	cmp	w1, #0x40
     c88:	b.ne	c60 <grub_cmd_badram+0x3f8>  // b.any
     c8c:	b	b64 <grub_cmd_badram+0x2fc>
     c90:	ldr	w6, [x28, #8]
     c94:	cmp	w6, w27
     c98:	ccmn	w6, #0x1, #0x4, eq  // eq = none
     c9c:	b.ne	bc8 <grub_cmd_badram+0x360>  // b.any
     ca0:	b	aa4 <grub_cmd_badram+0x23c>
     ca4:	cbnz	w6, cb8 <grub_cmd_badram+0x450>
     ca8:	ldr	w3, [x0, #12]
     cac:	mov	w0, #0x1                   	// #1
     cb0:	stp	w3, w0, [x1, #8]
     cb4:	b	a98 <grub_cmd_badram+0x230>
     cb8:	mov	x0, #0x10                  	// #16
     cbc:	str	x3, [sp, #104]
     cc0:	bl	0 <grub_malloc>
     cc4:	ldr	x3, [sp, #104]
     cc8:	mov	w5, #0x1                   	// #1
     ccc:	ldr	x2, [sp, #168]
     cd0:	add	x3, x2, x3
     cd4:	ldrsw	x1, [x3, #16]
     cd8:	ldr	w3, [x3, #12]
     cdc:	stp	w3, w5, [x0, #8]
     ce0:	lsl	x1, x1, #4
     ce4:	ldr	x3, [x28, x1]
     ce8:	str	x3, [x0]
     cec:	str	x0, [x28, x1]
     cf0:	b	a98 <grub_cmd_badram+0x230>
     cf4:	cbnz	x0, d04 <grub_cmd_badram+0x49c>
     cf8:	b	a98 <grub_cmd_badram+0x230>
     cfc:	mov	x1, x5
     d00:	cbz	x0, a98 <grub_cmd_badram+0x230>
     d04:	ldr	w6, [x0, #8]
     d08:	mov	x5, x0
     d0c:	ldr	x0, [x0]
     d10:	cmp	w3, w6
     d14:	b.ne	cfc <grub_cmd_badram+0x494>  // b.any
     d18:	str	x0, [x1]
     d1c:	mov	x0, x5
     d20:	bl	0 <grub_free>
     d24:	ldr	x2, [sp, #168]
     d28:	b	a98 <grub_cmd_badram+0x230>
     d2c:	mov	x27, #0xffffffffffffffff    	// #-1
     d30:	mov	x11, #0x0                   	// #0
     d34:	nop
     d38:	sub	x0, x27, x11
     d3c:	cmp	x0, #0x1
     d40:	b.ls	b2c <grub_cmd_badram+0x2c4>  // b.plast
     d44:	add	x0, x27, x11
     d48:	mov	w2, #0x0                   	// #0
     d4c:	lsr	x0, x0, #1
     d50:	lsr	x1, x19, x2
     d54:	tbnz	w1, #0, d6c <grub_cmd_badram+0x504>
     d58:	add	w2, w2, #0x1
     d5c:	cmp	w2, #0x40
     d60:	b.ne	d50 <grub_cmd_badram+0x4e8>  // b.any
     d64:	mov	x11, x0
     d68:	b	d38 <grub_cmd_badram+0x4d0>
     d6c:	cmp	w2, #0x3f
     d70:	mov	x8, x20
     d74:	add	w2, w2, #0x1
     d78:	mov	w9, #0x0                   	// #0
     d7c:	b.eq	d64 <grub_cmd_badram+0x4fc>  // b.none
     d80:	lsl	x10, x23, x2
     d84:	orr	x10, x8, x10
     d88:	lsr	x12, x19, x2
     d8c:	add	w2, w2, #0x1
     d90:	lsr	x1, x0, x9
     d94:	tbnz	w12, #0, da4 <grub_cmd_badram+0x53c>
     d98:	tst	x1, #0x1
     d9c:	add	w9, w9, #0x1
     da0:	csel	x8, x10, x8, ne  // ne = any
     da4:	cmp	w2, #0x40
     da8:	b.ne	d80 <grub_cmd_badram+0x518>  // b.any
     dac:	cmp	x8, x26
     db0:	b.cc	d64 <grub_cmd_badram+0x4fc>  // b.lo, b.ul, b.last
     db4:	mov	x27, x0
     db8:	b	d38 <grub_cmd_badram+0x4d0>
     dbc:	str	wzr, [x1, #12]
     dc0:	b	a98 <grub_cmd_badram+0x230>
     dc4:	mov	x0, x1
     dc8:	bl	0 <grub_free>
     dcc:	mov	x0, x28
     dd0:	bl	0 <grub_free>
     dd4:	ldr	x0, [sp, #160]
     dd8:	b	8e8 <grub_cmd_badram+0x80>
     ddc:	ldr	x1, [sp, #136]
     de0:	mov	w0, #0x0                   	// #0
     de4:	ldp	x19, x20, [sp, #16]
     de8:	ldp	x21, x22, [sp, #32]
     dec:	ldp	x23, x24, [sp, #48]
     df0:	ldp	x25, x26, [sp, #64]
     df4:	ldp	x27, x28, [sp, #80]
     df8:	str	wzr, [x1]
     dfc:	ldp	x29, x30, [sp], #208
     e00:	ret
     e04:	nop
	...

0000000000000e58 <grub_cmd_cutmem>:
     e58:	stp	x29, x30, [sp, #-144]!
     e5c:	cmp	w1, #0x2
     e60:	mov	x29, sp
     e64:	stp	x21, x22, [sp, #32]
     e68:	b.eq	e90 <grub_cmd_cutmem+0x38>  // b.none
     e6c:	adrp	x1, 0 <grub_efi_mmap_iterate>
     e70:	mov	w0, #0x12                  	// #18
     e74:	ldr	x1, [x1]
     e78:	bl	0 <grub_error>
     e7c:	mov	w21, w0
     e80:	mov	w0, w21
     e84:	ldp	x21, x22, [sp, #32]
     e88:	ldp	x29, x30, [sp], #144
     e8c:	ret
     e90:	stp	x19, x20, [sp, #16]
     e94:	mov	x19, x2
     e98:	add	x1, sp, #0x78
     e9c:	mov	w2, #0x0                   	// #0
     ea0:	ldr	x0, [x19]
     ea4:	bl	0 <grub_strtoul>
     ea8:	mov	x20, x0
     eac:	ldr	x1, [sp, #120]
     eb0:	ldrb	w0, [x1]
     eb4:	cmp	w0, #0x4d
     eb8:	b.eq	11a8 <grub_cmd_cutmem+0x350>  // b.none
     ebc:	b.hi	ef8 <grub_cmd_cutmem+0xa0>  // b.pmore
     ec0:	cmp	w0, #0x47
     ec4:	b.eq	f84 <grub_cmd_cutmem+0x12c>  // b.none
     ec8:	cmp	w0, #0x4b
     ecc:	b.ne	f04 <grub_cmd_cutmem+0xac>  // b.any
     ed0:	adrp	x0, 0 <grub_efi_mmap_iterate>
     ed4:	lsl	x20, x20, #10
     ed8:	ldr	x22, [x0]
     edc:	ldr	w21, [x22]
     ee0:	cbz	w21, f14 <grub_cmd_cutmem+0xbc>
     ee4:	mov	w0, w21
     ee8:	ldp	x19, x20, [sp, #16]
     eec:	ldp	x21, x22, [sp, #32]
     ef0:	ldp	x29, x30, [sp], #144
     ef4:	ret
     ef8:	cmp	w0, #0x54
     efc:	lsl	x0, x20, #40
     f00:	csel	x20, x0, x20, eq  // eq = none
     f04:	adrp	x0, 0 <grub_efi_mmap_iterate>
     f08:	ldr	x22, [x0]
     f0c:	ldr	w21, [x22]
     f10:	cbnz	w21, ee4 <grub_cmd_cutmem+0x8c>
     f14:	ldr	x0, [x19, #8]
     f18:	add	x1, sp, #0x78
     f1c:	mov	w2, #0x0                   	// #0
     f20:	stp	x23, x24, [sp, #48]
     f24:	bl	0 <grub_strtoul>
     f28:	mov	x24, x0
     f2c:	ldr	x1, [sp, #120]
     f30:	ldrb	w0, [x1]
     f34:	cmp	w0, #0x4d
     f38:	b.eq	1250 <grub_cmd_cutmem+0x3f8>  // b.none
     f3c:	b.hi	f58 <grub_cmd_cutmem+0x100>  // b.pmore
     f40:	cmp	w0, #0x47
     f44:	b.eq	1248 <grub_cmd_cutmem+0x3f0>  // b.none
     f48:	cmp	w0, #0x4b
     f4c:	b.ne	f64 <grub_cmd_cutmem+0x10c>  // b.any
     f50:	lsl	x24, x24, #10
     f54:	b	f64 <grub_cmd_cutmem+0x10c>
     f58:	cmp	w0, #0x54
     f5c:	lsl	x0, x24, #40
     f60:	csel	x24, x0, x24, eq  // eq = none
     f64:	ldr	w21, [x22]
     f68:	cbz	w21, f8c <grub_cmd_cutmem+0x134>
     f6c:	mov	w0, w21
     f70:	ldp	x19, x20, [sp, #16]
     f74:	ldp	x21, x22, [sp, #32]
     f78:	ldp	x23, x24, [sp, #48]
     f7c:	ldp	x29, x30, [sp], #144
     f80:	ret
     f84:	lsl	x20, x20, #30
     f88:	b	f04 <grub_cmd_cutmem+0xac>
     f8c:	adrp	x0, 0 <grub_efi_mmap_iterate>
     f90:	add	x1, sp, #0x64
     f94:	str	wzr, [sp, #100]
     f98:	ldr	x0, [x0]
     f9c:	bl	320 <grub_machine_mmap_iterate>
     fa0:	ldr	w1, [sp, #100]
     fa4:	mov	w0, #0x30                  	// #48
     fa8:	smull	x0, w1, w0
     fac:	bl	0 <grub_malloc>
     fb0:	mov	x1, x0
     fb4:	mov	x0, #0x10                  	// #16
     fb8:	str	x1, [sp, #104]
     fbc:	bl	0 <grub_zalloc>
     fc0:	cmp	x0, #0x0
     fc4:	ldr	x1, [sp, #104]
     fc8:	mov	x23, x0
     fcc:	ccmp	x1, #0x0, #0x4, ne  // ne = any
     fd0:	b.eq	1258 <grub_cmd_cutmem+0x400>  // b.none
     fd4:	adrp	x0, 0 <grub_efi_mmap_iterate>
     fd8:	add	x1, sp, #0x68
     fdc:	stp	x27, x28, [sp, #80]
     fe0:	ldr	x0, [x0]
     fe4:	str	wzr, [sp, #112]
     fe8:	bl	320 <grub_machine_mmap_iterate>
     fec:	ldr	w9, [sp, #100]
     ff0:	mov	w2, #0x0                   	// #0
     ff4:	mov	w7, #0x0                   	// #0
     ff8:	mov	w8, #0x18                  	// #24
     ffc:	ldr	x6, [sp, #104]
    1000:	lsl	w9, w9, #1
    1004:	sub	w0, w9, #0x1
    1008:	cmp	w2, w0
    100c:	b.ge	1038 <grub_cmd_cutmem+0x1e0>  // b.tcont
    1010:	smaddl	x1, w2, w8, x6
    1014:	ldr	x4, [x1]
    1018:	add	x3, x1, #0x18
    101c:	ldr	x5, [x1, #24]
    1020:	cmp	x5, x4
    1024:	b.cc	1058 <grub_cmd_cutmem+0x200>  // b.lo, b.ul, b.last
    1028:	b.eq	1040 <grub_cmd_cutmem+0x1e8>  // b.none
    102c:	add	w2, w2, #0x1
    1030:	cmp	w2, w0
    1034:	b.lt	1010 <grub_cmd_cutmem+0x1b8>  // b.tstop
    1038:	cbnz	w7, 109c <grub_cmd_cutmem+0x244>
    103c:	b	10ac <grub_cmd_cutmem+0x254>
    1040:	ldr	w4, [x1, #32]
    1044:	cbnz	w4, 102c <grub_cmd_cutmem+0x1d4>
    1048:	ldr	w4, [x1, #8]
    104c:	cmp	w4, #0x1
    1050:	b.ne	102c <grub_cmd_cutmem+0x1d4>  // b.any
    1054:	nop
    1058:	ldp	x4, x5, [x1, #24]
    105c:	stp	x4, x5, [sp, #120]
    1060:	add	w2, w2, #0x1
    1064:	ldr	x4, [x3, #16]
    1068:	str	x4, [sp, #136]
    106c:	cmp	w0, w2
    1070:	mov	w7, #0x1                   	// #1
    1074:	ldp	x4, x5, [x1]
    1078:	stp	x4, x5, [x1, #24]
    107c:	ldr	x4, [x1, #16]
    1080:	str	x4, [x3, #16]
    1084:	ldp	x4, x5, [sp, #120]
    1088:	stp	x4, x5, [x1]
    108c:	ldr	x4, [sp, #136]
    1090:	str	x4, [x1, #16]
    1094:	mov	x1, x3
    1098:	b.gt	1014 <grub_cmd_cutmem+0x1bc>
    109c:	cmp	w0, #0x0
    10a0:	mov	w2, #0x0                   	// #0
    10a4:	mov	w7, #0x0                   	// #0
    10a8:	b.gt	1010 <grub_cmd_cutmem+0x1b8>
    10ac:	ldr	w27, [x6, #12]
    10b0:	cmp	w9, #0x0
    10b4:	mov	x19, #0x0                   	// #0
    10b8:	mov	w22, #0x1                   	// #1
    10bc:	ldr	x28, [x6]
    10c0:	b.le	1190 <grub_cmd_cutmem+0x338>
    10c4:	stp	x25, x26, [sp, #64]
    10c8:	add	x26, x19, x19, lsl #1
    10cc:	lsl	x25, x26, #3
    10d0:	add	x3, x6, x25
    10d4:	ldrsw	x1, [x3, #16]
    10d8:	ldr	w4, [x3, #8]
    10dc:	lsl	x1, x1, #4
    10e0:	add	x2, x23, x1
    10e4:	ldr	w0, [x2, #12]
    10e8:	cbz	w4, 11c4 <grub_cmd_cutmem+0x36c>
    10ec:	cbz	w0, 1120 <grub_cmd_cutmem+0x2c8>
    10f0:	ldr	w0, [x2, #8]
    10f4:	ldr	w4, [x3, #12]
    10f8:	ldr	x1, [x23, x1]
    10fc:	cmp	w0, w4
    1100:	b.ne	120c <grub_cmd_cutmem+0x3b4>  // b.any
    1104:	cbz	x1, 1240 <grub_cmd_cutmem+0x3e8>
    1108:	ldp	x4, x5, [x1]
    110c:	stp	x4, x5, [x2]
    1110:	mov	x0, x1
    1114:	bl	0 <grub_free>
    1118:	ldr	x6, [sp, #104]
    111c:	nop
    1120:	mov	w25, #0xffffffff            	// #-1
    1124:	ldr	w0, [x23, #12]
    1128:	cbnz	w0, 11b0 <grub_cmd_cutmem+0x358>
    112c:	ldr	x2, [x6, x26, lsl #3]
    1130:	cmp	x2, x28
    1134:	b.eq	1178 <grub_cmd_cutmem+0x320>  // b.none
    1138:	add	w27, w27, #0x2
    113c:	cmp	w27, #0x1
    1140:	b.ls	1204 <grub_cmd_cutmem+0x3ac>  // b.plast
    1144:	cmp	x20, x28
    1148:	csel	x0, x20, x28, cs  // cs = hs, nlast
    114c:	cmp	x24, x2
    1150:	csel	x1, x24, x2, ls  // ls = plast
    1154:	mov	x28, x2
    1158:	cmp	x0, x1
    115c:	b.cs	1178 <grub_cmd_cutmem+0x320>  // b.hs, b.nlast
    1160:	sub	x1, x1, x0
    1164:	mov	w2, #0xfffffffe            	// #-2
    1168:	bl	328 <grub_mmap_register>
    116c:	ldr	x6, [sp, #104]
    1170:	ldr	x28, [x6, x26, lsl #3]
    1174:	nop
    1178:	mov	w27, w25
    117c:	ldr	w0, [sp, #100]
    1180:	add	x19, x19, #0x1
    1184:	cmp	w19, w0, lsl #1
    1188:	b.lt	10c8 <grub_cmd_cutmem+0x270>  // b.tstop
    118c:	ldp	x25, x26, [sp, #64]
    1190:	mov	x0, x6
    1194:	bl	0 <grub_free>
    1198:	ldp	x19, x20, [sp, #16]
    119c:	ldp	x23, x24, [sp, #48]
    11a0:	ldp	x27, x28, [sp, #80]
    11a4:	b	e80 <grub_cmd_cutmem+0x28>
    11a8:	lsl	x20, x20, #20
    11ac:	b	f04 <grub_cmd_cutmem+0xac>
    11b0:	ldr	w25, [x23, #8]
    11b4:	cmp	w25, w27
    11b8:	ccmn	w25, #0x1, #0x4, eq  // eq = none
    11bc:	b.ne	117c <grub_cmd_cutmem+0x324>  // b.any
    11c0:	b	112c <grub_cmd_cutmem+0x2d4>
    11c4:	cbnz	w0, 11d4 <grub_cmd_cutmem+0x37c>
    11c8:	ldr	w0, [x3, #12]
    11cc:	stp	w0, w22, [x2, #8]
    11d0:	b	1120 <grub_cmd_cutmem+0x2c8>
    11d4:	mov	x0, #0x10                  	// #16
    11d8:	bl	0 <grub_malloc>
    11dc:	ldr	x6, [sp, #104]
    11e0:	add	x25, x6, x25
    11e4:	ldrsw	x1, [x25, #16]
    11e8:	ldr	w2, [x25, #12]
    11ec:	stp	w2, w22, [x0, #8]
    11f0:	lsl	x1, x1, #4
    11f4:	ldr	x2, [x23, x1]
    11f8:	str	x2, [x0]
    11fc:	str	x0, [x23, x1]
    1200:	b	1120 <grub_cmd_cutmem+0x2c8>
    1204:	mov	x28, x2
    1208:	b	1178 <grub_cmd_cutmem+0x320>
    120c:	cbnz	x1, 121c <grub_cmd_cutmem+0x3c4>
    1210:	b	1120 <grub_cmd_cutmem+0x2c8>
    1214:	mov	x2, x0
    1218:	cbz	x1, 1120 <grub_cmd_cutmem+0x2c8>
    121c:	ldr	w3, [x1, #8]
    1220:	mov	x0, x1
    1224:	ldr	x1, [x1]
    1228:	cmp	w4, w3
    122c:	b.ne	1214 <grub_cmd_cutmem+0x3bc>  // b.any
    1230:	str	x1, [x2]
    1234:	bl	0 <grub_free>
    1238:	ldr	x6, [sp, #104]
    123c:	b	1120 <grub_cmd_cutmem+0x2c8>
    1240:	str	wzr, [x2, #12]
    1244:	b	1120 <grub_cmd_cutmem+0x2c8>
    1248:	lsl	x24, x24, #30
    124c:	b	f64 <grub_cmd_cutmem+0x10c>
    1250:	lsl	x24, x24, #20
    1254:	b	f64 <grub_cmd_cutmem+0x10c>
    1258:	mov	x0, x1
    125c:	bl	0 <grub_free>
    1260:	mov	x0, x23
    1264:	bl	0 <grub_free>
    1268:	ldp	x19, x20, [sp, #16]
    126c:	ldp	x23, x24, [sp, #48]
    1270:	b	e80 <grub_cmd_cutmem+0x28>
    1274:	nop
	...

0000000000001298 <grub_mmap_iterate>:
    1298:	stp	x29, x30, [sp, #-144]!
    129c:	adrp	x2, 0 <grub_efi_mmap_iterate>
    12a0:	mov	x29, sp
    12a4:	stp	x19, x20, [sp, #16]
    12a8:	mov	x19, x0
    12ac:	mov	x20, x1
    12b0:	ldr	x0, [x2]
    12b4:	add	x1, sp, #0x64
    12b8:	stp	x23, x24, [sp, #48]
    12bc:	str	wzr, [sp, #100]
    12c0:	bl	320 <grub_machine_mmap_iterate>
    12c4:	ldr	w1, [sp, #100]
    12c8:	mov	w0, #0x30                  	// #48
    12cc:	smull	x0, w1, w0
    12d0:	bl	0 <grub_malloc>
    12d4:	mov	x1, x0
    12d8:	mov	x0, #0x10                  	// #16
    12dc:	str	x1, [sp, #104]
    12e0:	bl	0 <grub_zalloc>
    12e4:	mov	x23, x0
    12e8:	ldr	x1, [sp, #104]
    12ec:	cmp	x1, #0x0
    12f0:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    12f4:	b.eq	1568 <grub_mmap_iterate+0x2d0>  // b.none
    12f8:	adrp	x0, 0 <grub_efi_mmap_iterate>
    12fc:	add	x1, sp, #0x68
    1300:	stp	x21, x22, [sp, #32]
    1304:	ldr	x0, [x0]
    1308:	stp	x25, x26, [sp, #64]
    130c:	str	x27, [sp, #80]
    1310:	str	wzr, [sp, #112]
    1314:	bl	320 <grub_machine_mmap_iterate>
    1318:	ldr	w13, [sp, #100]
    131c:	mov	w3, #0x0                   	// #0
    1320:	mov	w0, #0x0                   	// #0
    1324:	mov	w12, #0x18                  	// #24
    1328:	ldr	x10, [sp, #104]
    132c:	lsl	w13, w13, #1
    1330:	sub	w1, w13, #0x1
    1334:	cmp	w3, w1
    1338:	b.ge	1368 <grub_mmap_iterate+0xd0>  // b.tcont
    133c:	nop
    1340:	smaddl	x2, w3, w12, x10
    1344:	ldr	x5, [x2]
    1348:	add	x4, x2, #0x18
    134c:	ldr	x6, [x2, #24]
    1350:	cmp	x6, x5
    1354:	b.cc	1488 <grub_mmap_iterate+0x1f0>  // b.lo, b.ul, b.last
    1358:	b.eq	1470 <grub_mmap_iterate+0x1d8>  // b.none
    135c:	add	w3, w3, #0x1
    1360:	cmp	w3, w1
    1364:	b.lt	1340 <grub_mmap_iterate+0xa8>  // b.tstop
    1368:	cbz	w0, 137c <grub_mmap_iterate+0xe4>
    136c:	cmp	w1, #0x0
    1370:	mov	w3, #0x0                   	// #0
    1374:	mov	w0, #0x0                   	// #0
    1378:	b.gt	1340 <grub_mmap_iterate+0xa8>
    137c:	ldr	w27, [x10, #12]
    1380:	cmp	w13, #0x0
    1384:	mov	x21, #0x0                   	// #0
    1388:	mov	w22, #0x1                   	// #1
    138c:	ldr	x26, [x10]
    1390:	b.le	1448 <grub_mmap_iterate+0x1b0>
    1394:	nop
    1398:	add	x25, x21, x21, lsl #1
    139c:	lsl	x24, x25, #3
    13a0:	add	x0, x10, x24
    13a4:	ldrsw	x1, [x0, #16]
    13a8:	ldr	w4, [x0, #8]
    13ac:	lsl	x1, x1, #4
    13b0:	add	x3, x23, x1
    13b4:	ldr	w5, [x3, #12]
    13b8:	cbz	w4, 14c8 <grub_mmap_iterate+0x230>
    13bc:	cbz	w5, 13f0 <grub_mmap_iterate+0x158>
    13c0:	ldr	w2, [x0, #12]
    13c4:	ldr	w4, [x3, #8]
    13c8:	ldr	x1, [x23, x1]
    13cc:	cmp	w4, w2
    13d0:	b.ne	152c <grub_mmap_iterate+0x294>  // b.any
    13d4:	cbz	x1, 1560 <grub_mmap_iterate+0x2c8>
    13d8:	ldp	x4, x5, [x1]
    13dc:	stp	x4, x5, [x3]
    13e0:	mov	x0, x1
    13e4:	bl	0 <grub_free>
    13e8:	ldr	x10, [sp, #104]
    13ec:	nop
    13f0:	mov	w24, #0xffffffff            	// #-1
    13f4:	ldr	w0, [x23, #12]
    13f8:	cbnz	w0, 14e0 <grub_mmap_iterate+0x248>
    13fc:	ldr	x1, [x10, x25, lsl #3]
    1400:	cmp	x1, x26
    1404:	b.eq	1434 <grub_mmap_iterate+0x19c>  // b.none
    1408:	add	w0, w27, #0x2
    140c:	cmp	w0, #0x1
    1410:	b.ls	1524 <grub_mmap_iterate+0x28c>  // b.plast
    1414:	mov	w2, w27
    1418:	sub	x1, x1, x26
    141c:	mov	x0, x26
    1420:	mov	x3, x20
    1424:	blr	x19
    1428:	cbnz	w0, 1594 <grub_mmap_iterate+0x2fc>
    142c:	ldr	x10, [sp, #104]
    1430:	ldr	x26, [x10, x25, lsl #3]
    1434:	mov	w27, w24
    1438:	ldr	w0, [sp, #100]
    143c:	add	x21, x21, #0x1
    1440:	cmp	w21, w0, lsl #1
    1444:	b.lt	1398 <grub_mmap_iterate+0x100>  // b.tstop
    1448:	mov	x0, x10
    144c:	bl	0 <grub_free>
    1450:	mov	w0, #0x0                   	// #0
    1454:	ldp	x19, x20, [sp, #16]
    1458:	ldp	x21, x22, [sp, #32]
    145c:	ldp	x23, x24, [sp, #48]
    1460:	ldp	x25, x26, [sp, #64]
    1464:	ldr	x27, [sp, #80]
    1468:	ldp	x29, x30, [sp], #144
    146c:	ret
    1470:	ldr	w5, [x2, #32]
    1474:	cbnz	w5, 135c <grub_mmap_iterate+0xc4>
    1478:	ldr	w5, [x2, #8]
    147c:	cmp	w5, #0x1
    1480:	b.ne	135c <grub_mmap_iterate+0xc4>  // b.any
    1484:	nop
    1488:	ldp	x6, x7, [x2]
    148c:	add	w3, w3, #0x1
    1490:	ldr	x5, [x4, #16]
    1494:	str	x5, [sp, #136]
    1498:	ldr	x11, [x2, #16]
    149c:	cmp	w3, w1
    14a0:	ldp	x8, x9, [x2, #24]
    14a4:	stp	x6, x7, [x2, #24]
    14a8:	mov	w0, #0x1                   	// #1
    14ac:	str	x11, [x4, #16]
    14b0:	stp	x8, x9, [x2]
    14b4:	str	x5, [x2, #16]
    14b8:	mov	x2, x4
    14bc:	stp	x8, x9, [sp, #120]
    14c0:	b.lt	1344 <grub_mmap_iterate+0xac>  // b.tstop
    14c4:	b	136c <grub_mmap_iterate+0xd4>
    14c8:	cbnz	w5, 14f4 <grub_mmap_iterate+0x25c>
    14cc:	ldr	w0, [x0, #12]
    14d0:	mov	w24, #0xffffffff            	// #-1
    14d4:	stp	w0, w22, [x3, #8]
    14d8:	ldr	w0, [x23, #12]
    14dc:	cbz	w0, 13fc <grub_mmap_iterate+0x164>
    14e0:	ldr	w24, [x23, #8]
    14e4:	cmp	w24, w27
    14e8:	ccmn	w24, #0x1, #0x4, eq  // eq = none
    14ec:	b.ne	1438 <grub_mmap_iterate+0x1a0>  // b.any
    14f0:	b	13fc <grub_mmap_iterate+0x164>
    14f4:	mov	x0, #0x10                  	// #16
    14f8:	bl	0 <grub_malloc>
    14fc:	ldr	x10, [sp, #104]
    1500:	add	x24, x10, x24
    1504:	ldrsw	x1, [x24, #16]
    1508:	ldr	w2, [x24, #12]
    150c:	stp	w2, w22, [x0, #8]
    1510:	lsl	x1, x1, #4
    1514:	ldr	x2, [x23, x1]
    1518:	str	x2, [x0]
    151c:	str	x0, [x23, x1]
    1520:	b	13f0 <grub_mmap_iterate+0x158>
    1524:	mov	x26, x1
    1528:	b	1434 <grub_mmap_iterate+0x19c>
    152c:	cbnz	x1, 153c <grub_mmap_iterate+0x2a4>
    1530:	b	13f0 <grub_mmap_iterate+0x158>
    1534:	mov	x3, x0
    1538:	cbz	x1, 13f0 <grub_mmap_iterate+0x158>
    153c:	ldr	w4, [x1, #8]
    1540:	mov	x0, x1
    1544:	ldr	x1, [x1]
    1548:	cmp	w2, w4
    154c:	b.ne	1534 <grub_mmap_iterate+0x29c>  // b.any
    1550:	str	x1, [x3]
    1554:	bl	0 <grub_free>
    1558:	ldr	x10, [sp, #104]
    155c:	b	13f0 <grub_mmap_iterate+0x158>
    1560:	str	wzr, [x3, #12]
    1564:	b	13f0 <grub_mmap_iterate+0x158>
    1568:	mov	x0, x1
    156c:	bl	0 <grub_free>
    1570:	mov	x0, x23
    1574:	bl	0 <grub_free>
    1578:	adrp	x0, 0 <grub_efi_mmap_iterate>
    157c:	ldp	x19, x20, [sp, #16]
    1580:	ldr	x0, [x0]
    1584:	ldp	x23, x24, [sp, #48]
    1588:	ldr	w0, [x0]
    158c:	ldp	x29, x30, [sp], #144
    1590:	ret
    1594:	ldr	x0, [sp, #104]
    1598:	b	144c <grub_mmap_iterate+0x1b4>
    159c:	nop
	...

00000000000015b8 <grub_mod_init>:
    15b8:	stp	x29, x30, [sp, #-32]!
    15bc:	adrp	x3, 0 <grub_efi_mmap_iterate>
    15c0:	adrp	x2, 0 <grub_efi_mmap_iterate>
    15c4:	adrp	x1, 0 <grub_efi_mmap_iterate>
    15c8:	adrp	x0, 0 <grub_efi_mmap_iterate>
    15cc:	mov	x29, sp
    15d0:	ldr	x3, [x3]
    15d4:	mov	w4, #0x0                   	// #0
    15d8:	ldr	x2, [x2]
    15dc:	str	x19, [sp, #16]
    15e0:	ldr	x1, [x1]
    15e4:	ldr	x0, [x0]
    15e8:	bl	0 <grub_register_command_prio>
    15ec:	adrp	x6, 0 <grub_efi_mmap_iterate>
    15f0:	adrp	x5, 0 <grub_efi_mmap_iterate>
    15f4:	adrp	x3, 0 <grub_efi_mmap_iterate>
    15f8:	adrp	x2, 0 <grub_efi_mmap_iterate>
    15fc:	ldr	x19, [x6]
    1600:	adrp	x1, 0 <grub_efi_mmap_iterate>
    1604:	ldr	x3, [x3]
    1608:	mov	w4, #0x0                   	// #0
    160c:	ldr	x2, [x2]
    1610:	str	x0, [x19]
    1614:	ldr	x1, [x1]
    1618:	ldr	x0, [x5]
    161c:	bl	0 <grub_register_command_prio>
    1620:	str	x0, [x19, #8]
    1624:	ldr	x19, [sp, #16]
    1628:	ldp	x29, x30, [sp], #32
    162c:	ret
	...

0000000000001678 <grub_mod_fini>:
    1678:	stp	x29, x30, [sp, #-32]!
    167c:	adrp	x0, 0 <grub_efi_mmap_iterate>
    1680:	mov	x29, sp
    1684:	str	x19, [sp, #16]
    1688:	ldr	x19, [x0]
    168c:	ldr	x0, [x19]
    1690:	bl	0 <grub_unregister_command>
    1694:	ldr	x0, [x19, #8]
    1698:	ldr	x19, [sp, #16]
    169c:	ldp	x29, x30, [sp], #32
    16a0:	b	0 <grub_unregister_command>
    16a4:	nop
	...
