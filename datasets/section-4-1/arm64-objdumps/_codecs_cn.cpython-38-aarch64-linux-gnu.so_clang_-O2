
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_codecs_cn.cpython-38-aarch64-linux-gnu.so_clang_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000002cc0 <.init>:
    2cc0:	stp	x29, x30, [sp, #-16]!
    2cc4:	mov	x29, sp
    2cc8:	bl	2dd0 <PyCapsule_New@plt+0x10>
    2ccc:	ldp	x29, x30, [sp], #16
    2cd0:	ret

Disassembly of section .plt:

0000000000002ce0 <PyObject_GetAttrString@plt-0x20>:
    2ce0:	stp	x16, x30, [sp, #-16]!
    2ce4:	adrp	x16, 33000 <PyInit__codecs_cn@@Base+0x3015c>
    2ce8:	ldr	x17, [x16, #4088]
    2cec:	add	x16, x16, #0xff8
    2cf0:	br	x17
    2cf4:	nop
    2cf8:	nop
    2cfc:	nop

0000000000002d00 <PyObject_GetAttrString@plt>:
    2d00:	adrp	x16, 34000 <PyObject_GetAttrString>
    2d04:	ldr	x17, [x16]
    2d08:	add	x16, x16, #0x0
    2d0c:	br	x17

0000000000002d10 <__cxa_finalize@plt>:
    2d10:	adrp	x16, 34000 <PyObject_GetAttrString>
    2d14:	ldr	x17, [x16, #8]
    2d18:	add	x16, x16, #0x8
    2d1c:	br	x17

0000000000002d20 <_Py_Dealloc@plt>:
    2d20:	adrp	x16, 34000 <PyObject_GetAttrString>
    2d24:	ldr	x17, [x16, #16]
    2d28:	add	x16, x16, #0x10
    2d2c:	br	x17

0000000000002d30 <PyErr_SetString@plt>:
    2d30:	adrp	x16, 34000 <PyObject_GetAttrString>
    2d34:	ldr	x17, [x16, #24]
    2d38:	add	x16, x16, #0x18
    2d3c:	br	x17

0000000000002d40 <__gmon_start__@plt>:
    2d40:	adrp	x16, 34000 <PyObject_GetAttrString>
    2d44:	ldr	x17, [x16, #32]
    2d48:	add	x16, x16, #0x20
    2d4c:	br	x17

0000000000002d50 <PyModule_Create2@plt>:
    2d50:	adrp	x16, 34000 <PyObject_GetAttrString>
    2d54:	ldr	x17, [x16, #40]
    2d58:	add	x16, x16, #0x28
    2d5c:	br	x17

0000000000002d60 <PyImport_ImportModuleNoBlock@plt>:
    2d60:	adrp	x16, 34000 <PyObject_GetAttrString>
    2d64:	ldr	x17, [x16, #48]
    2d68:	add	x16, x16, #0x30
    2d6c:	br	x17

0000000000002d70 <PyObject_CallFunctionObjArgs@plt>:
    2d70:	adrp	x16, 34000 <PyObject_GetAttrString>
    2d74:	ldr	x17, [x16, #56]
    2d78:	add	x16, x16, #0x38
    2d7c:	br	x17

0000000000002d80 <strcmp@plt>:
    2d80:	adrp	x16, 34000 <PyObject_GetAttrString>
    2d84:	ldr	x17, [x16, #64]
    2d88:	add	x16, x16, #0x40
    2d8c:	br	x17

0000000000002d90 <_PyUnicodeWriter_WriteChar@plt>:
    2d90:	adrp	x16, 34000 <PyObject_GetAttrString>
    2d94:	ldr	x17, [x16, #72]
    2d98:	add	x16, x16, #0x48
    2d9c:	br	x17

0000000000002da0 <PyUnicode_AsUTF8@plt>:
    2da0:	adrp	x16, 34000 <PyObject_GetAttrString>
    2da4:	ldr	x17, [x16, #80]
    2da8:	add	x16, x16, #0x50
    2dac:	br	x17

0000000000002db0 <PyModule_AddObject@plt>:
    2db0:	adrp	x16, 34000 <PyObject_GetAttrString>
    2db4:	ldr	x17, [x16, #88]
    2db8:	add	x16, x16, #0x58
    2dbc:	br	x17

0000000000002dc0 <PyCapsule_New@plt>:
    2dc0:	adrp	x16, 34000 <PyObject_GetAttrString>
    2dc4:	ldr	x17, [x16, #96]
    2dc8:	add	x16, x16, #0x60
    2dcc:	br	x17

Disassembly of section .text:

0000000000002dd0 <PyInit__codecs_cn@@Base-0xd4>:
    2dd0:	adrp	x0, 33000 <PyInit__codecs_cn@@Base+0x3015c>
    2dd4:	ldr	x0, [x0, #4048]
    2dd8:	cbz	x0, 2de0 <PyCapsule_New@plt+0x20>
    2ddc:	b	2d40 <__gmon_start__@plt>
    2de0:	ret
    2de4:	nop
    2de8:	adrp	x0, 34000 <PyInit__codecs_cn@@Base+0x3115c>
    2dec:	add	x0, x0, #0x118
    2df0:	adrp	x1, 34000 <PyInit__codecs_cn@@Base+0x3115c>
    2df4:	add	x1, x1, #0x118
    2df8:	cmp	x1, x0
    2dfc:	b.eq	2e14 <PyCapsule_New@plt+0x54>  // b.none
    2e00:	adrp	x1, 33000 <PyInit__codecs_cn@@Base+0x3015c>
    2e04:	ldr	x1, [x1, #4024]
    2e08:	cbz	x1, 2e14 <PyCapsule_New@plt+0x54>
    2e0c:	mov	x16, x1
    2e10:	br	x16
    2e14:	ret
    2e18:	adrp	x0, 34000 <PyInit__codecs_cn@@Base+0x3115c>
    2e1c:	add	x0, x0, #0x118
    2e20:	adrp	x1, 34000 <PyInit__codecs_cn@@Base+0x3115c>
    2e24:	add	x1, x1, #0x118
    2e28:	sub	x1, x1, x0
    2e2c:	lsr	x2, x1, #63
    2e30:	add	x1, x2, x1, asr #3
    2e34:	cmp	xzr, x1, asr #1
    2e38:	asr	x1, x1, #1
    2e3c:	b.eq	2e54 <PyCapsule_New@plt+0x94>  // b.none
    2e40:	adrp	x2, 33000 <PyInit__codecs_cn@@Base+0x3015c>
    2e44:	ldr	x2, [x2, #4056]
    2e48:	cbz	x2, 2e54 <PyCapsule_New@plt+0x94>
    2e4c:	mov	x16, x2
    2e50:	br	x16
    2e54:	ret
    2e58:	stp	x29, x30, [sp, #-32]!
    2e5c:	mov	x29, sp
    2e60:	str	x19, [sp, #16]
    2e64:	adrp	x19, 34000 <PyInit__codecs_cn@@Base+0x3115c>
    2e68:	ldrb	w0, [x19, #280]
    2e6c:	cbnz	w0, 2e94 <PyCapsule_New@plt+0xd4>
    2e70:	adrp	x0, 33000 <PyInit__codecs_cn@@Base+0x3015c>
    2e74:	ldr	x0, [x0, #4032]
    2e78:	cbz	x0, 2e88 <PyCapsule_New@plt+0xc8>
    2e7c:	adrp	x0, 34000 <PyInit__codecs_cn@@Base+0x3115c>
    2e80:	ldr	x0, [x0, #104]
    2e84:	bl	2d10 <__cxa_finalize@plt>
    2e88:	bl	2de8 <PyCapsule_New@plt+0x28>
    2e8c:	mov	w0, #0x1                   	// #1
    2e90:	strb	w0, [x19, #280]
    2e94:	ldr	x19, [sp, #16]
    2e98:	ldp	x29, x30, [sp], #32
    2e9c:	ret
    2ea0:	b	2e18 <PyCapsule_New@plt+0x58>

0000000000002ea4 <PyInit__codecs_cn@@Base>:
    2ea4:	sub	sp, sp, #0x140
    2ea8:	stp	x29, x30, [sp, #256]
    2eac:	str	x28, [sp, #272]
    2eb0:	stp	x22, x21, [sp, #288]
    2eb4:	stp	x20, x19, [sp, #304]
    2eb8:	add	x29, sp, #0x100
    2ebc:	adrp	x0, 34000 <PyInit__codecs_cn@@Base+0x3115c>
    2ec0:	add	x0, x0, #0x70
    2ec4:	mov	w1, #0x3f5                 	// #1013
    2ec8:	bl	2d50 <PyModule_Create2@plt>
    2ecc:	mov	x19, x0
    2ed0:	cbz	x0, 30bc <PyInit__codecs_cn@@Base+0x218>
    2ed4:	mov	w8, #0x6267                	// #25191
    2ed8:	movi	v0.2d, #0x0
    2edc:	movk	w8, #0x3332, lsl #16
    2ee0:	mov	w21, #0x5f5f                	// #24415
    2ee4:	stp	q0, q0, [sp]
    2ee8:	stur	w8, [sp, #6]
    2eec:	mov	w8, #0x3133                	// #12595
    2ef0:	adrp	x0, 33000 <PyInit__codecs_cn@@Base+0x3015c>
    2ef4:	adrp	x1, 4000 <PyInit__codecs_cn@@Base+0x115c>
    2ef8:	movk	w21, #0x616d, lsl #16
    2efc:	mov	w22, #0x5f70                	// #24432
    2f00:	movk	w8, #0x32, lsl #16
    2f04:	add	x0, x0, #0xd58
    2f08:	add	x1, x1, #0x20c
    2f0c:	mov	x2, xzr
    2f10:	mov	x20, sp
    2f14:	stp	q0, q0, [sp, #224]
    2f18:	stp	q0, q0, [sp, #192]
    2f1c:	stp	q0, q0, [sp, #160]
    2f20:	stp	q0, q0, [sp, #128]
    2f24:	stp	q0, q0, [sp, #96]
    2f28:	stp	q0, q0, [sp, #64]
    2f2c:	stp	q0, q0, [sp, #32]
    2f30:	str	w21, [sp]
    2f34:	strh	w22, [sp, #4]
    2f38:	stur	w8, [sp, #9]
    2f3c:	bl	2dc0 <PyCapsule_New@plt>
    2f40:	mov	x2, x0
    2f44:	mov	x1, sp
    2f48:	mov	x0, x19
    2f4c:	bl	2db0 <PyModule_AddObject@plt>
    2f50:	cmn	w0, #0x1
    2f54:	b.eq	30bc <PyInit__codecs_cn@@Base+0x218>  // b.none
    2f58:	mov	w8, #0x7865                	// #30821
    2f5c:	mov	w9, #0x6267                	// #25191
    2f60:	adrp	x0, 33000 <PyInit__codecs_cn@@Base+0x3015c>
    2f64:	adrp	x1, 4000 <PyInit__codecs_cn@@Base+0x115c>
    2f68:	orr	x20, x20, #0x6
    2f6c:	movi	v0.2d, #0x0
    2f70:	movk	w8, #0x74, lsl #16
    2f74:	movk	w9, #0x656b, lsl #16
    2f78:	add	x0, x0, #0xd70
    2f7c:	add	x1, x1, #0x20c
    2f80:	mov	x2, xzr
    2f84:	stp	q0, q0, [sp, #224]
    2f88:	stp	q0, q0, [sp, #192]
    2f8c:	stp	q0, q0, [sp, #160]
    2f90:	stp	q0, q0, [sp, #128]
    2f94:	stp	q0, q0, [sp, #96]
    2f98:	stp	q0, q0, [sp, #64]
    2f9c:	stp	q0, q0, [sp, #32]
    2fa0:	stp	q0, q0, [sp]
    2fa4:	str	w21, [sp]
    2fa8:	strh	w22, [sp, #4]
    2fac:	stur	w8, [x20, #3]
    2fb0:	str	w9, [x20]
    2fb4:	bl	2dc0 <PyCapsule_New@plt>
    2fb8:	mov	x2, x0
    2fbc:	mov	x1, sp
    2fc0:	mov	x0, x19
    2fc4:	bl	2db0 <PyModule_AddObject@plt>
    2fc8:	cmn	w0, #0x1
    2fcc:	b.eq	30bc <PyInit__codecs_cn@@Base+0x218>  // b.none
    2fd0:	adrp	x8, 4000 <PyInit__codecs_cn@@Base+0x115c>
    2fd4:	add	x8, x8, #0x25f
    2fd8:	ldr	x8, [x8]
    2fdc:	mov	w21, #0x5f5f                	// #24415
    2fe0:	adrp	x0, 33000 <PyInit__codecs_cn@@Base+0x3015c>
    2fe4:	adrp	x1, 4000 <PyInit__codecs_cn@@Base+0x115c>
    2fe8:	movi	v0.2d, #0x0
    2fec:	movk	w21, #0x616d, lsl #16
    2ff0:	mov	w22, #0x5f70                	// #24432
    2ff4:	add	x0, x0, #0xd88
    2ff8:	add	x1, x1, #0x20c
    2ffc:	mov	x2, xzr
    3000:	stp	q0, q0, [sp, #224]
    3004:	stp	q0, q0, [sp, #192]
    3008:	stp	q0, q0, [sp, #160]
    300c:	stp	q0, q0, [sp, #128]
    3010:	stp	q0, q0, [sp, #96]
    3014:	stp	q0, q0, [sp, #64]
    3018:	stp	q0, q0, [sp, #32]
    301c:	stp	q0, q0, [sp]
    3020:	str	w21, [sp]
    3024:	strh	w22, [sp, #4]
    3028:	strb	wzr, [x20, #8]
    302c:	str	x8, [x20]
    3030:	bl	2dc0 <PyCapsule_New@plt>
    3034:	mov	x2, x0
    3038:	mov	x1, sp
    303c:	mov	x0, x19
    3040:	bl	2db0 <PyModule_AddObject@plt>
    3044:	cmn	w0, #0x1
    3048:	b.eq	30bc <PyInit__codecs_cn@@Base+0x218>  // b.none
    304c:	adrp	x8, 4000 <PyInit__codecs_cn@@Base+0x115c>
    3050:	add	x8, x8, #0x268
    3054:	ldr	x8, [x8]
    3058:	mov	w9, #0x7865                	// #30821
    305c:	adrp	x0, 33000 <PyInit__codecs_cn@@Base+0x3015c>
    3060:	adrp	x1, 4000 <PyInit__codecs_cn@@Base+0x115c>
    3064:	movi	v0.2d, #0x0
    3068:	movk	w9, #0x74, lsl #16
    306c:	add	x0, x0, #0xda0
    3070:	add	x1, x1, #0x20c
    3074:	mov	x2, xzr
    3078:	stp	q0, q0, [sp, #224]
    307c:	stp	q0, q0, [sp, #192]
    3080:	stp	q0, q0, [sp, #160]
    3084:	stp	q0, q0, [sp, #128]
    3088:	stp	q0, q0, [sp, #96]
    308c:	stp	q0, q0, [sp, #64]
    3090:	stp	q0, q0, [sp, #32]
    3094:	stp	q0, q0, [sp]
    3098:	str	w21, [sp]
    309c:	strh	w22, [sp, #4]
    30a0:	stur	w9, [x20, #7]
    30a4:	str	x8, [x20]
    30a8:	bl	2dc0 <PyCapsule_New@plt>
    30ac:	mov	x2, x0
    30b0:	mov	x1, sp
    30b4:	mov	x0, x19
    30b8:	bl	2db0 <PyModule_AddObject@plt>
    30bc:	mov	x0, x19
    30c0:	ldp	x20, x19, [sp, #304]
    30c4:	ldp	x22, x21, [sp, #288]
    30c8:	ldr	x28, [sp, #272]
    30cc:	ldp	x29, x30, [sp, #256]
    30d0:	add	sp, sp, #0x140
    30d4:	ret
    30d8:	stp	x29, x30, [sp, #-48]!
    30dc:	stp	x22, x21, [sp, #16]
    30e0:	stp	x20, x19, [sp, #32]
    30e4:	mov	x29, sp
    30e8:	ldr	x8, [x1, #8]
    30ec:	ldrb	w8, [x8, #171]
    30f0:	tbnz	w8, #4, 3110 <PyInit__codecs_cn@@Base+0x26c>
    30f4:	adrp	x8, 33000 <PyInit__codecs_cn@@Base+0x3015c>
    30f8:	ldr	x8, [x8, #4040]
    30fc:	adrp	x1, 4000 <PyInit__codecs_cn@@Base+0x115c>
    3100:	add	x1, x1, #0x1d0
    3104:	ldr	x0, [x8]
    3108:	bl	2d30 <PyErr_SetString@plt>
    310c:	b	3250 <PyInit__codecs_cn@@Base+0x3ac>
    3110:	mov	x0, x1
    3114:	bl	2da0 <PyUnicode_AsUTF8@plt>
    3118:	cbz	x0, 3250 <PyInit__codecs_cn@@Base+0x3ac>
    311c:	adrp	x22, 34000 <PyInit__codecs_cn@@Base+0x3115c>
    3120:	ldr	x19, [x22, #288]
    3124:	mov	x20, x0
    3128:	cbz	x19, 3190 <PyInit__codecs_cn@@Base+0x2ec>
    312c:	adrp	x0, 4000 <PyInit__codecs_cn@@Base+0x115c>
    3130:	add	x0, x0, #0x242
    3134:	mov	x1, x20
    3138:	bl	2d80 <strcmp@plt>
    313c:	cbz	w0, 31dc <PyInit__codecs_cn@@Base+0x338>
    3140:	adrp	x0, 4000 <PyInit__codecs_cn@@Base+0x115c>
    3144:	add	x0, x0, #0x249
    3148:	mov	x1, x20
    314c:	bl	2d80 <strcmp@plt>
    3150:	cbz	w0, 31e8 <PyInit__codecs_cn@@Base+0x344>
    3154:	adrp	x0, 4000 <PyInit__codecs_cn@@Base+0x115c>
    3158:	add	x0, x0, #0x24d
    315c:	mov	x1, x20
    3160:	bl	2d80 <strcmp@plt>
    3164:	cbz	w0, 31f4 <PyInit__codecs_cn@@Base+0x350>
    3168:	adrp	x0, 4000 <PyInit__codecs_cn@@Base+0x115c>
    316c:	add	x0, x0, #0x255
    3170:	mov	x1, x20
    3174:	bl	2d80 <strcmp@plt>
    3178:	cbz	w0, 3200 <PyInit__codecs_cn@@Base+0x35c>
    317c:	adrp	x8, 33000 <PyInit__codecs_cn@@Base+0x3015c>
    3180:	ldr	x8, [x8, #4064]
    3184:	adrp	x1, 4000 <PyInit__codecs_cn@@Base+0x115c>
    3188:	add	x1, x1, #0x1f0
    318c:	b	3104 <PyInit__codecs_cn@@Base+0x260>
    3190:	adrp	x0, 4000 <PyInit__codecs_cn@@Base+0x115c>
    3194:	add	x0, x0, #0x223
    3198:	bl	2d60 <PyImport_ImportModuleNoBlock@plt>
    319c:	cbz	x0, 3250 <PyInit__codecs_cn@@Base+0x3ac>
    31a0:	adrp	x1, 4000 <PyInit__codecs_cn@@Base+0x115c>
    31a4:	add	x1, x1, #0x233
    31a8:	mov	x21, x0
    31ac:	bl	2d00 <PyObject_GetAttrString@plt>
    31b0:	str	x0, [x22, #288]
    31b4:	ldr	x8, [x21]
    31b8:	mov	x19, x0
    31bc:	subs	x8, x8, #0x1
    31c0:	str	x8, [x21]
    31c4:	b.ne	31d4 <PyInit__codecs_cn@@Base+0x330>  // b.any
    31c8:	mov	x0, x21
    31cc:	bl	2d20 <_Py_Dealloc@plt>
    31d0:	ldr	x19, [x22, #288]
    31d4:	cbnz	x19, 312c <PyInit__codecs_cn@@Base+0x288>
    31d8:	b	3254 <PyInit__codecs_cn@@Base+0x3b0>
    31dc:	adrp	x0, 2e000 <PyInit__codecs_cn@@Base+0x2b15c>
    31e0:	add	x0, x0, #0xbf0
    31e4:	b	3208 <PyInit__codecs_cn@@Base+0x364>
    31e8:	adrp	x0, 2e000 <PyInit__codecs_cn@@Base+0x2b15c>
    31ec:	add	x0, x0, #0xc38
    31f0:	b	3208 <PyInit__codecs_cn@@Base+0x364>
    31f4:	adrp	x0, 2e000 <PyInit__codecs_cn@@Base+0x2b15c>
    31f8:	add	x0, x0, #0xc80
    31fc:	b	3208 <PyInit__codecs_cn@@Base+0x364>
    3200:	adrp	x0, 2e000 <PyInit__codecs_cn@@Base+0x2b15c>
    3204:	add	x0, x0, #0xcc8
    3208:	adrp	x1, 4000 <PyInit__codecs_cn@@Base+0x115c>
    320c:	add	x1, x1, #0x20c
    3210:	mov	x2, xzr
    3214:	bl	2dc0 <PyCapsule_New@plt>
    3218:	cbz	x0, 3250 <PyInit__codecs_cn@@Base+0x3ac>
    321c:	mov	x20, x0
    3220:	mov	x0, x19
    3224:	mov	x1, x20
    3228:	mov	x2, xzr
    322c:	bl	2d70 <PyObject_CallFunctionObjArgs@plt>
    3230:	ldr	x8, [x20]
    3234:	mov	x19, x0
    3238:	subs	x8, x8, #0x1
    323c:	str	x8, [x20]
    3240:	b.ne	3254 <PyInit__codecs_cn@@Base+0x3b0>  // b.any
    3244:	mov	x0, x20
    3248:	bl	2d20 <_Py_Dealloc@plt>
    324c:	b	3254 <PyInit__codecs_cn@@Base+0x3b0>
    3250:	mov	x19, xzr
    3254:	mov	x0, x19
    3258:	ldp	x20, x19, [sp, #32]
    325c:	ldp	x22, x21, [sp, #16]
    3260:	ldp	x29, x30, [sp], #48
    3264:	ret
    3268:	ldr	x9, [x4]
    326c:	cmp	x9, x5
    3270:	b.ge	336c <PyInit__codecs_cn@@Base+0x4c8>  // b.tcont
    3274:	adrp	x8, 2e000 <PyInit__codecs_cn@@Base+0x2b15c>
    3278:	mov	w0, #0x1                   	// #1
    327c:	add	x8, x8, #0xd58
    3280:	b	32cc <PyInit__codecs_cn@@Base+0x428>
    3284:	ldr	x10, [x6]
    3288:	lsr	w11, w9, #8
    328c:	orr	w11, w11, #0x80
    3290:	orr	w9, w9, #0x80
    3294:	strb	w11, [x10]
    3298:	ldr	x11, [x6]
    329c:	mov	x10, #0xfffffffffffffffe    	// #-2
    32a0:	strb	w9, [x11, #1]
    32a4:	mov	w11, #0x2                   	// #2
    32a8:	ldr	x9, [x4]
    32ac:	add	x7, x7, x10
    32b0:	add	x9, x9, #0x1
    32b4:	str	x9, [x4]
    32b8:	ldr	x12, [x6]
    32bc:	cmp	x9, x5
    32c0:	add	x11, x12, x11
    32c4:	str	x11, [x6]
    32c8:	b.ge	336c <PyInit__codecs_cn@@Base+0x4c8>  // b.tcont
    32cc:	cmp	w2, #0x2
    32d0:	b.eq	3304 <PyInit__codecs_cn@@Base+0x460>  // b.none
    32d4:	cmp	w2, #0x1
    32d8:	b.ne	3314 <PyInit__codecs_cn@@Base+0x470>  // b.any
    32dc:	ldrb	w9, [x3, x9]
    32e0:	cmp	w9, #0x7f
    32e4:	b.hi	3320 <PyInit__codecs_cn@@Base+0x47c>  // b.pmore
    32e8:	cmp	x7, #0x1
    32ec:	b.lt	3374 <PyInit__codecs_cn@@Base+0x4d0>  // b.tstop
    32f0:	ldr	x11, [x6]
    32f4:	mov	x10, #0xffffffffffffffff    	// #-1
    32f8:	strb	w9, [x11]
    32fc:	mov	w11, #0x1                   	// #1
    3300:	b	32a8 <PyInit__codecs_cn@@Base+0x404>
    3304:	ldrh	w9, [x3, x9, lsl #1]
    3308:	cmp	w9, #0x7f
    330c:	b.ls	32e8 <PyInit__codecs_cn@@Base+0x444>  // b.plast
    3310:	b	3320 <PyInit__codecs_cn@@Base+0x47c>
    3314:	ldr	w9, [x3, x9, lsl #2]
    3318:	cmp	w9, #0x7f
    331c:	b.ls	32e8 <PyInit__codecs_cn@@Base+0x444>  // b.plast
    3320:	lsr	w10, w9, #16
    3324:	cbnz	w10, 3368 <PyInit__codecs_cn@@Base+0x4c4>
    3328:	cmp	x7, #0x2
    332c:	b.lt	3374 <PyInit__codecs_cn@@Base+0x4d0>  // b.tstop
    3330:	lsr	w11, w9, #8
    3334:	lsl	x10, x11, #4
    3338:	ldr	x10, [x8, x10]
    333c:	cbz	x10, 3368 <PyInit__codecs_cn@@Base+0x4c4>
    3340:	add	x11, x8, x11, lsl #4
    3344:	ldrb	w13, [x11, #8]
    3348:	and	w12, w9, #0xff
    334c:	subs	w9, w12, w13
    3350:	b.cc	3368 <PyInit__codecs_cn@@Base+0x4c4>  // b.lo, b.ul, b.last
    3354:	ldrb	w11, [x11, #9]
    3358:	cmp	w12, w11
    335c:	b.hi	3368 <PyInit__codecs_cn@@Base+0x4c4>  // b.pmore
    3360:	ldrsh	w9, [x10, w9, uxtw #1]
    3364:	tbz	w9, #31, 3284 <PyInit__codecs_cn@@Base+0x3e0>
    3368:	ret
    336c:	mov	x0, xzr
    3370:	ret
    3374:	mov	x0, #0xffffffffffffffff    	// #-1
    3378:	ret
    337c:	stp	x29, x30, [sp, #-64]!
    3380:	stp	x24, x23, [sp, #16]
    3384:	stp	x22, x21, [sp, #32]
    3388:	stp	x20, x19, [sp, #48]
    338c:	mov	x29, sp
    3390:	cmp	x3, #0x1
    3394:	b.lt	3460 <PyInit__codecs_cn@@Base+0x5bc>  // b.tstop
    3398:	ldr	x8, [x2]
    339c:	adrp	x23, 2f000 <PyInit__codecs_cn@@Base+0x2c15c>
    33a0:	mov	x20, x4
    33a4:	mov	x21, x3
    33a8:	mov	x22, x2
    33ac:	mov	w19, #0x1                   	// #1
    33b0:	add	x23, x23, #0xd58
    33b4:	mov	w24, #0xfffe                	// #65534
    33b8:	b	33d4 <PyInit__codecs_cn@@Base+0x530>
    33bc:	ldr	x10, [x22]
    33c0:	add	x21, x21, x8
    33c4:	cmp	x21, #0x0
    33c8:	add	x8, x10, x9
    33cc:	str	x8, [x22]
    33d0:	b.le	3460 <PyInit__codecs_cn@@Base+0x5bc>
    33d4:	ldrsb	w9, [x8]
    33d8:	tbnz	w9, #31, 33f8 <PyInit__codecs_cn@@Base+0x554>
    33dc:	and	w1, w9, #0xff
    33e0:	mov	x0, x20
    33e4:	bl	2d90 <_PyUnicodeWriter_WriteChar@plt>
    33e8:	tbnz	w0, #31, 3468 <PyInit__codecs_cn@@Base+0x5c4>
    33ec:	mov	x8, #0xffffffffffffffff    	// #-1
    33f0:	mov	w9, #0x1                   	// #1
    33f4:	b	33bc <PyInit__codecs_cn@@Base+0x518>
    33f8:	cmp	x21, #0x2
    33fc:	b.lt	3470 <PyInit__codecs_cn@@Base+0x5cc>  // b.tstop
    3400:	and	x9, x9, #0xff
    3404:	eor	x10, x9, #0x80
    3408:	lsl	x9, x10, #4
    340c:	ldr	x9, [x23, x9]
    3410:	cbz	x9, 3474 <PyInit__codecs_cn@@Base+0x5d0>
    3414:	ldrb	w12, [x8, #1]
    3418:	add	x11, x23, x10, lsl #4
    341c:	ldrb	w8, [x11, #8]
    3420:	eor	x10, x12, #0x80
    3424:	cmp	w10, w8
    3428:	b.cc	3474 <PyInit__codecs_cn@@Base+0x5d0>  // b.lo, b.ul, b.last
    342c:	ldrb	w11, [x11, #9]
    3430:	cmp	w10, w11
    3434:	b.hi	3474 <PyInit__codecs_cn@@Base+0x5d0>  // b.pmore
    3438:	sub	x8, x10, x8
    343c:	ldrh	w1, [x9, x8, lsl #1]
    3440:	cmp	w1, w24
    3444:	b.eq	3474 <PyInit__codecs_cn@@Base+0x5d0>  // b.none
    3448:	mov	x0, x20
    344c:	bl	2d90 <_PyUnicodeWriter_WriteChar@plt>
    3450:	tbnz	w0, #31, 3468 <PyInit__codecs_cn@@Base+0x5c4>
    3454:	mov	x8, #0xfffffffffffffffe    	// #-2
    3458:	mov	w9, #0x2                   	// #2
    345c:	b	33bc <PyInit__codecs_cn@@Base+0x518>
    3460:	mov	x19, xzr
    3464:	b	3474 <PyInit__codecs_cn@@Base+0x5d0>
    3468:	mov	x19, #0xfffffffffffffffc    	// #-4
    346c:	b	3474 <PyInit__codecs_cn@@Base+0x5d0>
    3470:	mov	x19, #0xfffffffffffffffe    	// #-2
    3474:	mov	x0, x19
    3478:	ldp	x20, x19, [sp, #48]
    347c:	ldp	x22, x21, [sp, #32]
    3480:	ldp	x24, x23, [sp, #16]
    3484:	ldp	x29, x30, [sp], #64
    3488:	ret
    348c:	ldr	x13, [x4]
    3490:	cmp	x13, x5
    3494:	b.ge	35ec <PyInit__codecs_cn@@Base+0x748>  // b.tcont
    3498:	adrp	x9, 2e000 <PyInit__codecs_cn@@Base+0x2b15c>
    349c:	mov	w0, #0x1                   	// #1
    34a0:	mov	w8, #0x2014                	// #8212
    34a4:	add	x9, x9, #0xd58
    34a8:	mov	w10, #0xffff                	// #65535
    34ac:	mov	w11, #0x2015                	// #8213
    34b0:	mov	w12, #0x30fb                	// #12539
    34b4:	b	3510 <PyInit__codecs_cn@@Base+0x66c>
    34b8:	mov	w13, #0xa1a4                	// #41380
    34bc:	ldr	x14, [x6]
    34c0:	lsr	w16, w13, #8
    34c4:	orr	w16, w16, #0x80
    34c8:	sxth	w15, w13
    34cc:	strb	w16, [x14]
    34d0:	ldr	x16, [x6]
    34d4:	orr	w17, w13, #0x80
    34d8:	cmp	w15, #0x0
    34dc:	mov	x14, #0xfffffffffffffffe    	// #-2
    34e0:	csel	w13, w17, w13, ge  // ge = tcont
    34e4:	mov	w15, #0x2                   	// #2
    34e8:	strb	w13, [x16, #1]
    34ec:	ldr	x13, [x4]
    34f0:	add	x7, x7, x14
    34f4:	add	x13, x13, #0x1
    34f8:	str	x13, [x4]
    34fc:	ldr	x16, [x6]
    3500:	cmp	x13, x5
    3504:	add	x15, x16, x15
    3508:	str	x15, [x6]
    350c:	b.ge	35ec <PyInit__codecs_cn@@Base+0x748>  // b.tcont
    3510:	cmp	w2, #0x2
    3514:	b.eq	3548 <PyInit__codecs_cn@@Base+0x6a4>  // b.none
    3518:	cmp	w2, #0x1
    351c:	b.ne	3558 <PyInit__codecs_cn@@Base+0x6b4>  // b.any
    3520:	ldrb	w13, [x3, x13]
    3524:	cmp	w13, #0x7f
    3528:	b.hi	3564 <PyInit__codecs_cn@@Base+0x6c0>  // b.pmore
    352c:	cmp	x7, #0x1
    3530:	b.lt	35f4 <PyInit__codecs_cn@@Base+0x750>  // b.tstop
    3534:	ldr	x15, [x6]
    3538:	mov	x14, #0xffffffffffffffff    	// #-1
    353c:	strb	w13, [x15]
    3540:	mov	w15, #0x1                   	// #1
    3544:	b	34ec <PyInit__codecs_cn@@Base+0x648>
    3548:	ldrh	w13, [x3, x13, lsl #1]
    354c:	cmp	w13, #0x7f
    3550:	b.ls	352c <PyInit__codecs_cn@@Base+0x688>  // b.plast
    3554:	b	3564 <PyInit__codecs_cn@@Base+0x6c0>
    3558:	ldr	w13, [x3, x13, lsl #2]
    355c:	cmp	w13, #0x7f
    3560:	b.ls	352c <PyInit__codecs_cn@@Base+0x688>  // b.plast
    3564:	lsr	w14, w13, #16
    3568:	cbnz	w14, 35f0 <PyInit__codecs_cn@@Base+0x74c>
    356c:	cmp	x7, #0x2
    3570:	b.lt	35f4 <PyInit__codecs_cn@@Base+0x750>  // b.tstop
    3574:	cmp	w13, w8
    3578:	b.gt	3594 <PyInit__codecs_cn@@Base+0x6f0>
    357c:	cmp	w13, #0xb7
    3580:	b.eq	34b8 <PyInit__codecs_cn@@Base+0x614>  // b.none
    3584:	cmp	w13, w8
    3588:	b.ne	35ac <PyInit__codecs_cn@@Base+0x708>  // b.any
    358c:	mov	w13, #0xa1aa                	// #41386
    3590:	b	34bc <PyInit__codecs_cn@@Base+0x618>
    3594:	cmp	w13, w11
    3598:	b.ne	35a4 <PyInit__codecs_cn@@Base+0x700>  // b.any
    359c:	mov	w13, #0xa844                	// #43076
    35a0:	b	34bc <PyInit__codecs_cn@@Base+0x618>
    35a4:	cmp	w13, w12
    35a8:	b.eq	35f0 <PyInit__codecs_cn@@Base+0x74c>  // b.none
    35ac:	lsr	w15, w13, #8
    35b0:	lsl	x14, x15, #4
    35b4:	ldr	x14, [x9, x14]
    35b8:	cbz	x14, 35f0 <PyInit__codecs_cn@@Base+0x74c>
    35bc:	add	x15, x9, x15, lsl #4
    35c0:	ldrb	w17, [x15, #8]
    35c4:	and	w16, w13, #0xff
    35c8:	subs	w13, w16, w17
    35cc:	b.cc	35f0 <PyInit__codecs_cn@@Base+0x74c>  // b.lo, b.ul, b.last
    35d0:	ldrb	w15, [x15, #9]
    35d4:	cmp	w16, w15
    35d8:	b.hi	35f0 <PyInit__codecs_cn@@Base+0x74c>  // b.pmore
    35dc:	ldrh	w13, [x14, w13, uxtw #1]
    35e0:	cmp	w13, w10
    35e4:	b.ne	34bc <PyInit__codecs_cn@@Base+0x618>  // b.any
    35e8:	b	35f0 <PyInit__codecs_cn@@Base+0x74c>
    35ec:	mov	x0, xzr
    35f0:	ret
    35f4:	mov	x0, #0xffffffffffffffff    	// #-1
    35f8:	ret
    35fc:	stp	x29, x30, [sp, #-80]!
    3600:	str	x25, [sp, #16]
    3604:	stp	x24, x23, [sp, #32]
    3608:	stp	x22, x21, [sp, #48]
    360c:	stp	x20, x19, [sp, #64]
    3610:	mov	x29, sp
    3614:	cmp	x3, #0x1
    3618:	b.lt	376c <PyInit__codecs_cn@@Base+0x8c8>  // b.tstop
    361c:	ldr	x8, [x2]
    3620:	adrp	x23, 2f000 <PyInit__codecs_cn@@Base+0x2c15c>
    3624:	adrp	x24, 30000 <PyInit__codecs_cn@@Base+0x2d15c>
    3628:	mov	x20, x4
    362c:	mov	x21, x3
    3630:	mov	x22, x2
    3634:	mov	w19, #0x1                   	// #1
    3638:	add	x23, x23, #0xd58
    363c:	add	x24, x24, #0xd58
    3640:	mov	w25, #0xfffe                	// #65534
    3644:	b	3678 <PyInit__codecs_cn@@Base+0x7d4>
    3648:	mov	w1, #0x2015                	// #8213
    364c:	mov	x0, x20
    3650:	bl	2d90 <_PyUnicodeWriter_WriteChar@plt>
    3654:	tbnz	w0, #31, 3774 <PyInit__codecs_cn@@Base+0x8d0>
    3658:	mov	x8, #0xfffffffffffffffe    	// #-2
    365c:	mov	w9, #0x2                   	// #2
    3660:	ldr	x10, [x22]
    3664:	add	x21, x21, x8
    3668:	cmp	x21, #0x0
    366c:	add	x8, x10, x9
    3670:	str	x8, [x22]
    3674:	b.le	376c <PyInit__codecs_cn@@Base+0x8c8>
    3678:	ldrsb	w9, [x8]
    367c:	and	w1, w9, #0xff
    3680:	tbnz	w9, #31, 369c <PyInit__codecs_cn@@Base+0x7f8>
    3684:	mov	x0, x20
    3688:	bl	2d90 <_PyUnicodeWriter_WriteChar@plt>
    368c:	tbnz	w0, #31, 3774 <PyInit__codecs_cn@@Base+0x8d0>
    3690:	mov	x8, #0xffffffffffffffff    	// #-1
    3694:	mov	w9, #0x1                   	// #1
    3698:	b	3660 <PyInit__codecs_cn@@Base+0x7bc>
    369c:	cmp	x21, #0x2
    36a0:	b.lt	377c <PyInit__codecs_cn@@Base+0x8d8>  // b.tstop
    36a4:	cmp	w1, #0xa8
    36a8:	b.eq	36d0 <PyInit__codecs_cn@@Base+0x82c>  // b.none
    36ac:	cmp	w1, #0xa1
    36b0:	b.ne	36dc <PyInit__codecs_cn@@Base+0x838>  // b.any
    36b4:	ldrb	w10, [x8, #1]
    36b8:	cmp	w10, #0xa4
    36bc:	b.eq	3764 <PyInit__codecs_cn@@Base+0x8c0>  // b.none
    36c0:	cmp	w10, #0xaa
    36c4:	b.ne	36dc <PyInit__codecs_cn@@Base+0x838>  // b.any
    36c8:	mov	w1, #0x2014                	// #8212
    36cc:	b	364c <PyInit__codecs_cn@@Base+0x7a8>
    36d0:	ldrb	w10, [x8, #1]
    36d4:	cmp	w10, #0x44
    36d8:	b.eq	3648 <PyInit__codecs_cn@@Base+0x7a4>  // b.none
    36dc:	and	x9, x9, #0xff
    36e0:	eor	x11, x9, #0x80
    36e4:	lsl	x10, x11, #4
    36e8:	ldr	x10, [x23, x10]
    36ec:	cbz	x10, 3724 <PyInit__codecs_cn@@Base+0x880>
    36f0:	ldrb	w12, [x8, #1]
    36f4:	add	x13, x23, x11, lsl #4
    36f8:	ldrb	w11, [x13, #8]
    36fc:	eor	x12, x12, #0x80
    3700:	cmp	w12, w11
    3704:	b.cc	3724 <PyInit__codecs_cn@@Base+0x880>  // b.lo, b.ul, b.last
    3708:	ldrb	w13, [x13, #9]
    370c:	cmp	w12, w13
    3710:	b.hi	3724 <PyInit__codecs_cn@@Base+0x880>  // b.pmore
    3714:	sub	x11, x12, x11
    3718:	ldrh	w1, [x10, x11, lsl #1]
    371c:	cmp	w1, w25
    3720:	b.ne	364c <PyInit__codecs_cn@@Base+0x7a8>  // b.any
    3724:	lsl	x10, x9, #4
    3728:	ldr	x10, [x24, x10]
    372c:	cbz	x10, 3780 <PyInit__codecs_cn@@Base+0x8dc>
    3730:	add	x11, x24, x9, lsl #4
    3734:	ldrb	w8, [x8, #1]
    3738:	ldrb	w9, [x11, #8]
    373c:	cmp	w8, w9
    3740:	b.cc	3780 <PyInit__codecs_cn@@Base+0x8dc>  // b.lo, b.ul, b.last
    3744:	ldrb	w11, [x11, #9]
    3748:	cmp	w8, w11
    374c:	b.hi	3780 <PyInit__codecs_cn@@Base+0x8dc>  // b.pmore
    3750:	sub	x8, x8, x9
    3754:	ldrh	w1, [x10, x8, lsl #1]
    3758:	cmp	w1, w25
    375c:	b.ne	364c <PyInit__codecs_cn@@Base+0x7a8>  // b.any
    3760:	b	3780 <PyInit__codecs_cn@@Base+0x8dc>
    3764:	mov	w1, #0xb7                  	// #183
    3768:	b	364c <PyInit__codecs_cn@@Base+0x7a8>
    376c:	mov	x19, xzr
    3770:	b	3780 <PyInit__codecs_cn@@Base+0x8dc>
    3774:	mov	x19, #0xfffffffffffffffc    	// #-4
    3778:	b	3780 <PyInit__codecs_cn@@Base+0x8dc>
    377c:	mov	x19, #0xfffffffffffffffe    	// #-2
    3780:	mov	x0, x19
    3784:	ldp	x20, x19, [sp, #64]
    3788:	ldp	x22, x21, [sp, #48]
    378c:	ldp	x24, x23, [sp, #32]
    3790:	ldr	x25, [sp, #16]
    3794:	ldp	x29, x30, [sp], #80
    3798:	ret
    379c:	str	x25, [sp, #-64]!
    37a0:	stp	x24, x23, [sp, #16]
    37a4:	stp	x22, x21, [sp, #32]
    37a8:	stp	x20, x19, [sp, #48]
    37ac:	ldr	x20, [x4]
    37b0:	cmp	x20, x5
    37b4:	b.ge	3ad4 <PyInit__codecs_cn@@Base+0xc30>  // b.tcont
    37b8:	mov	w8, #0xcccd                	// #52429
    37bc:	mov	w10, #0x2083                	// #8323
    37c0:	mov	w12, #0x8069                	// #32873
    37c4:	mov	w13, #0x19af                	// #6575
    37c8:	adrp	x15, 2e000 <PyInit__codecs_cn@@Base+0x2b15c>
    37cc:	adrp	x17, 31000 <PyInit__codecs_cn@@Base+0x2e15c>
    37d0:	adrp	x18, 1a000 <PyInit__codecs_cn@@Base+0x1715c>
    37d4:	mov	w0, #0x1                   	// #1
    37d8:	movk	w8, #0xcccc, lsl #16
    37dc:	mov	w9, #0xa                   	// #10
    37e0:	movk	w10, #0x8208, lsl #16
    37e4:	mov	w11, #0x7e                  	// #126
    37e8:	movk	w12, #0x6806, lsl #16
    37ec:	movk	w13, #0x14ce, lsl #16
    37f0:	mov	w14, #0x2014                	// #8212
    37f4:	add	x15, x15, #0xd58
    37f8:	mov	w16, #0xffff                	// #65535
    37fc:	add	x17, x17, #0xd58
    3800:	add	x18, x18, #0x3f4
    3804:	mov	w1, #0x30fb                	// #12539
    3808:	mov	w19, #0x2015                	// #8213
    380c:	cmp	w2, #0x2
    3810:	b.eq	3844 <PyInit__codecs_cn@@Base+0x9a0>  // b.none
    3814:	cmp	w2, #0x1
    3818:	b.ne	3854 <PyInit__codecs_cn@@Base+0x9b0>  // b.any
    381c:	ldrb	w20, [x3, x20]
    3820:	cmp	w20, #0x7f
    3824:	b.hi	3860 <PyInit__codecs_cn@@Base+0x9bc>  // b.pmore
    3828:	cmp	x7, #0x1
    382c:	b.lt	3aec <PyInit__codecs_cn@@Base+0xc48>  // b.tstop
    3830:	ldr	x22, [x6]
    3834:	mov	x21, #0xffffffffffffffff    	// #-1
    3838:	strb	w20, [x22]
    383c:	mov	w22, #0x1                   	// #1
    3840:	b	3960 <PyInit__codecs_cn@@Base+0xabc>
    3844:	ldrh	w20, [x3, x20, lsl #1]
    3848:	cmp	w20, #0x7f
    384c:	b.ls	3828 <PyInit__codecs_cn@@Base+0x984>  // b.plast
    3850:	b	3860 <PyInit__codecs_cn@@Base+0x9bc>
    3854:	ldr	w20, [x3, x20, lsl #2]
    3858:	cmp	w20, #0x7f
    385c:	b.ls	3828 <PyInit__codecs_cn@@Base+0x984>  // b.plast
    3860:	subs	w21, w20, #0x10, lsl #12
    3864:	b.cc	38ec <PyInit__codecs_cn@@Base+0xa48>  // b.lo, b.ul, b.last
    3868:	cmp	x7, #0x4
    386c:	b.lt	3aec <PyInit__codecs_cn@@Base+0xc48>  // b.tstop
    3870:	umull	x20, w21, w8
    3874:	ldr	x22, [x6]
    3878:	lsr	x23, x20, #35
    387c:	msub	w24, w23, w9, w21
    3880:	lsr	x20, x20, #36
    3884:	orr	w24, w24, #0x30
    3888:	mul	x20, x20, x10
    388c:	strb	w24, [x22, #3]
    3890:	lsr	x20, x20, #37
    3894:	msub	w20, w20, w11, w23
    3898:	ldr	x23, [x6]
    389c:	lsr	w22, w21, #2
    38a0:	umull	x22, w22, w12
    38a4:	sub	w20, w20, #0x7f
    38a8:	lsr	x22, x22, #39
    38ac:	strb	w20, [x23, #2]
    38b0:	mul	x20, x22, x8
    38b4:	ldr	x23, [x6]
    38b8:	lsr	x20, x20, #35
    38bc:	msub	w20, w20, w9, w22
    38c0:	orr	w20, w20, #0x30
    38c4:	strb	w20, [x23, #1]
    38c8:	lsr	w24, w21, #3
    38cc:	ldr	x20, [x6]
    38d0:	umull	x22, w24, w13
    38d4:	lsr	x22, x22, #39
    38d8:	sub	w22, w22, #0x70
    38dc:	mov	x21, #0xfffffffffffffffc    	// #-4
    38e0:	strb	w22, [x20]
    38e4:	mov	w22, #0x4                   	// #4
    38e8:	b	3960 <PyInit__codecs_cn@@Base+0xabc>
    38ec:	cmp	x7, #0x2
    38f0:	b.lt	3aec <PyInit__codecs_cn@@Base+0xc48>  // b.tstop
    38f4:	cmp	w20, w14
    38f8:	b.gt	3914 <PyInit__codecs_cn@@Base+0xa70>
    38fc:	cmp	w20, #0xb7
    3900:	b.eq	392c <PyInit__codecs_cn@@Base+0xa88>  // b.none
    3904:	cmp	w20, w14
    3908:	b.ne	3990 <PyInit__codecs_cn@@Base+0xaec>  // b.any
    390c:	mov	w22, #0xa1aa                	// #41386
    3910:	b	3930 <PyInit__codecs_cn@@Base+0xa8c>
    3914:	cmp	w20, w1
    3918:	b.eq	3988 <PyInit__codecs_cn@@Base+0xae4>  // b.none
    391c:	cmp	w20, w19
    3920:	b.ne	3990 <PyInit__codecs_cn@@Base+0xaec>  // b.any
    3924:	mov	w22, #0xa844                	// #43076
    3928:	b	3930 <PyInit__codecs_cn@@Base+0xa8c>
    392c:	mov	w22, #0xa1a4                	// #41380
    3930:	ldr	x21, [x6]
    3934:	lsr	w23, w22, #8
    3938:	orr	w23, w23, #0x80
    393c:	sxth	w20, w22
    3940:	strb	w23, [x21]
    3944:	ldr	x23, [x6]
    3948:	orr	w24, w22, #0x80
    394c:	cmp	w20, #0x0
    3950:	mov	x21, #0xfffffffffffffffe    	// #-2
    3954:	csel	w20, w24, w22, ge  // ge = tcont
    3958:	mov	w22, #0x2                   	// #2
    395c:	strb	w20, [x23, #1]
    3960:	ldr	x20, [x4]
    3964:	add	x7, x7, x21
    3968:	add	x20, x20, #0x1
    396c:	str	x20, [x4]
    3970:	ldr	x23, [x6]
    3974:	add	x22, x23, x22
    3978:	str	x22, [x6]
    397c:	cmp	x20, x5
    3980:	b.lt	380c <PyInit__codecs_cn@@Base+0x968>  // b.tstop
    3984:	b	3ad4 <PyInit__codecs_cn@@Base+0xc30>
    3988:	mov	w21, #0x30                  	// #48
    398c:	b	39cc <PyInit__codecs_cn@@Base+0xb28>
    3990:	lsr	w21, w20, #8
    3994:	lsl	x22, x21, #4
    3998:	ldr	x22, [x15, x22]
    399c:	cbz	x22, 39cc <PyInit__codecs_cn@@Base+0xb28>
    39a0:	add	x24, x15, x21, lsl #4
    39a4:	ldrb	w23, [x24, #8]
    39a8:	and	w25, w20, #0xff
    39ac:	subs	w23, w25, w23
    39b0:	b.cc	39cc <PyInit__codecs_cn@@Base+0xb28>  // b.lo, b.ul, b.last
    39b4:	ldrb	w24, [x24, #9]
    39b8:	cmp	w25, w24
    39bc:	b.hi	39cc <PyInit__codecs_cn@@Base+0xb28>  // b.pmore
    39c0:	ldrh	w22, [x22, w23, uxtw #1]
    39c4:	cmp	w22, w16
    39c8:	b.ne	3930 <PyInit__codecs_cn@@Base+0xa8c>  // b.any
    39cc:	lsl	x22, x21, #4
    39d0:	ldr	x22, [x17, x22]
    39d4:	cbz	x22, 3a04 <PyInit__codecs_cn@@Base+0xb60>
    39d8:	add	x23, x17, x21, lsl #4
    39dc:	ldrb	w21, [x23, #8]
    39e0:	and	w24, w20, #0xff
    39e4:	subs	w21, w24, w21
    39e8:	b.cc	3a04 <PyInit__codecs_cn@@Base+0xb60>  // b.lo, b.ul, b.last
    39ec:	ldrb	w23, [x23, #9]
    39f0:	cmp	w24, w23
    39f4:	b.hi	3a04 <PyInit__codecs_cn@@Base+0xb60>  // b.pmore
    39f8:	ldrh	w22, [x22, w21, uxtw #1]
    39fc:	cmp	w22, w16
    3a00:	b.ne	3930 <PyInit__codecs_cn@@Base+0xa8c>  // b.any
    3a04:	subs	x7, x7, #0x4
    3a08:	b.lt	3aec <PyInit__codecs_cn@@Base+0xc48>  // b.tstop
    3a0c:	mov	w22, #0x80                  	// #128
    3a10:	mov	x21, x18
    3a14:	b	3a24 <PyInit__codecs_cn@@Base+0xb80>
    3a18:	ldr	w22, [x21, #4]
    3a1c:	add	x21, x21, #0xc
    3a20:	cbz	w22, 3ad8 <PyInit__codecs_cn@@Base+0xc34>
    3a24:	subs	w22, w20, w22
    3a28:	b.cc	3a18 <PyInit__codecs_cn@@Base+0xb74>  // b.lo, b.ul, b.last
    3a2c:	ldur	w23, [x21, #-4]
    3a30:	cmp	w20, w23
    3a34:	b.hi	3a18 <PyInit__codecs_cn@@Base+0xb74>  // b.pmore
    3a38:	ldrh	w20, [x21]
    3a3c:	ldr	x23, [x6]
    3a40:	add	w20, w22, w20
    3a44:	umull	x22, w20, w8
    3a48:	lsr	x24, x22, #35
    3a4c:	msub	w25, w24, w9, w20
    3a50:	orr	w25, w25, #0x30
    3a54:	strb	w25, [x23, #3]
    3a58:	lsr	x22, x22, #36
    3a5c:	mul	x22, x22, x10
    3a60:	ldr	x25, [x6]
    3a64:	lsr	x22, x22, #37
    3a68:	lsr	w23, w20, #2
    3a6c:	msub	w22, w22, w11, w24
    3a70:	umull	x23, w23, w12
    3a74:	sub	w22, w22, #0x7f
    3a78:	lsr	x23, x23, #39
    3a7c:	strb	w22, [x25, #2]
    3a80:	mul	x24, x23, x8
    3a84:	ldr	x22, [x6]
    3a88:	lsr	x24, x24, #35
    3a8c:	msub	w23, w24, w9, w23
    3a90:	orr	w23, w23, #0x30
    3a94:	strb	w23, [x22, #1]
    3a98:	lsr	w20, w20, #3
    3a9c:	ldr	x22, [x6]
    3aa0:	umull	x20, w20, w13
    3aa4:	lsr	x20, x20, #39
    3aa8:	sub	w20, w20, #0x7f
    3aac:	strb	w20, [x22]
    3ab0:	ldr	x20, [x4]
    3ab4:	add	x20, x20, #0x1
    3ab8:	str	x20, [x4]
    3abc:	ldr	x22, [x6]
    3ac0:	add	x22, x22, #0x4
    3ac4:	str	x22, [x6]
    3ac8:	ldur	w21, [x21, #-8]
    3acc:	cbnz	w21, 397c <PyInit__codecs_cn@@Base+0xad8>
    3ad0:	b	3ad8 <PyInit__codecs_cn@@Base+0xc34>
    3ad4:	mov	x0, xzr
    3ad8:	ldp	x20, x19, [sp, #48]
    3adc:	ldp	x22, x21, [sp, #32]
    3ae0:	ldp	x24, x23, [sp, #16]
    3ae4:	ldr	x25, [sp], #64
    3ae8:	ret
    3aec:	mov	x0, #0xffffffffffffffff    	// #-1
    3af0:	b	3ad8 <PyInit__codecs_cn@@Base+0xc34>
    3af4:	stp	x29, x30, [sp, #-96]!
    3af8:	stp	x28, x27, [sp, #16]
    3afc:	stp	x26, x25, [sp, #32]
    3b00:	stp	x24, x23, [sp, #48]
    3b04:	stp	x22, x21, [sp, #64]
    3b08:	stp	x20, x19, [sp, #80]
    3b0c:	mov	x29, sp
    3b10:	cmp	x3, #0x1
    3b14:	b.lt	3db4 <PyInit__codecs_cn@@Base+0xf10>  // b.tstop
    3b18:	ldr	x9, [x2]
    3b1c:	adrp	x8, 1a000 <PyInit__codecs_cn@@Base+0x1715c>
    3b20:	add	x8, x8, #0x3ec
    3b24:	mov	w26, #0x1db8                	// #7608
    3b28:	adrp	x27, 32000 <PyInit__codecs_cn@@Base+0x2f15c>
    3b2c:	mov	x20, x4
    3b30:	mov	x21, x3
    3b34:	mov	x22, x2
    3b38:	mov	w19, #0x1                   	// #1
    3b3c:	mov	w23, #0xa                   	// #10
    3b40:	mov	w24, #0x4ec                 	// #1260
    3b44:	mov	w25, #0x99fb                	// #39419
    3b48:	movk	w26, #0xfffe, lsl #16
    3b4c:	sub	x28, x8, #0xc
    3b50:	add	x27, x27, #0xd58
    3b54:	b	3b88 <PyInit__codecs_cn@@Base+0xce4>
    3b58:	mov	w1, #0x2014                	// #8212
    3b5c:	mov	x0, x20
    3b60:	bl	2d90 <_PyUnicodeWriter_WriteChar@plt>
    3b64:	tbnz	w0, #31, 3dbc <PyInit__codecs_cn@@Base+0xf18>
    3b68:	mov	x8, #0xfffffffffffffffe    	// #-2
    3b6c:	mov	w9, #0x2                   	// #2
    3b70:	ldr	x10, [x22]
    3b74:	add	x21, x21, x8
    3b78:	cmp	x21, #0x0
    3b7c:	add	x9, x10, x9
    3b80:	str	x9, [x22]
    3b84:	b.le	3db4 <PyInit__codecs_cn@@Base+0xf10>
    3b88:	ldrsb	w11, [x9]
    3b8c:	and	w1, w11, #0xff
    3b90:	tbnz	w11, #31, 3bac <PyInit__codecs_cn@@Base+0xd08>
    3b94:	mov	x0, x20
    3b98:	bl	2d90 <_PyUnicodeWriter_WriteChar@plt>
    3b9c:	tbnz	w0, #31, 3dbc <PyInit__codecs_cn@@Base+0xf18>
    3ba0:	mov	x8, #0xffffffffffffffff    	// #-1
    3ba4:	mov	w9, #0x1                   	// #1
    3ba8:	b	3b70 <PyInit__codecs_cn@@Base+0xccc>
    3bac:	cmp	x21, #0x2
    3bb0:	b.lt	3dc4 <PyInit__codecs_cn@@Base+0xf20>  // b.tstop
    3bb4:	ldrb	w8, [x9, #1]
    3bb8:	sub	w10, w8, #0x30
    3bbc:	cmp	w10, #0x9
    3bc0:	b.hi	3c58 <PyInit__codecs_cn@@Base+0xdb4>  // b.pmore
    3bc4:	cmp	x21, #0x4
    3bc8:	b.lt	3dc4 <PyInit__codecs_cn@@Base+0xf20>  // b.tstop
    3bcc:	ldrb	w8, [x9, #3]
    3bd0:	sub	w8, w8, #0x30
    3bd4:	cmp	w8, #0x9
    3bd8:	b.hi	3dc8 <PyInit__codecs_cn@@Base+0xf24>  // b.pmore
    3bdc:	add	w11, w1, #0x7f
    3be0:	and	w12, w11, #0xff
    3be4:	cmp	w12, #0x7d
    3be8:	b.hi	3dc8 <PyInit__codecs_cn@@Base+0xf24>  // b.pmore
    3bec:	ldrb	w9, [x9, #2]
    3bf0:	add	w9, w9, #0x7f
    3bf4:	and	w12, w9, #0xff
    3bf8:	cmp	w12, #0x7d
    3bfc:	b.hi	3dc8 <PyInit__codecs_cn@@Base+0xf24>  // b.pmore
    3c00:	and	w11, w11, #0xff
    3c04:	cmp	w11, #0x3
    3c08:	b.hi	3c84 <PyInit__codecs_cn@@Base+0xde0>  // b.pmore
    3c0c:	mul	w11, w11, w23
    3c10:	add	w10, w11, w10, uxtb
    3c14:	mul	w10, w10, w24
    3c18:	and	w9, w9, #0xff
    3c1c:	madd	w9, w9, w23, w10
    3c20:	add	w8, w9, w8, uxtb
    3c24:	cmp	w8, w25
    3c28:	b.hi	3dc8 <PyInit__codecs_cn@@Base+0xf24>  // b.pmore
    3c2c:	mov	x9, x28
    3c30:	ldrh	w10, [x9, #32]
    3c34:	add	x9, x9, #0xc
    3c38:	cmp	w8, w10
    3c3c:	b.cs	3c30 <PyInit__codecs_cn@@Base+0xd8c>  // b.hs, b.nlast
    3c40:	ldr	w10, [x9]
    3c44:	ldrh	w9, [x9, #8]
    3c48:	mov	x0, x20
    3c4c:	add	w8, w10, w8
    3c50:	sub	w1, w8, w9
    3c54:	b	3cb8 <PyInit__codecs_cn@@Base+0xe14>
    3c58:	and	x9, x11, #0xff
    3c5c:	cmp	w9, #0xa1
    3c60:	b.ne	3c6c <PyInit__codecs_cn@@Base+0xdc8>  // b.any
    3c64:	cmp	w8, #0xaa
    3c68:	b.eq	3b58 <PyInit__codecs_cn@@Base+0xcb4>  // b.none
    3c6c:	cmp	w9, #0xa8
    3c70:	b.ne	3ccc <PyInit__codecs_cn@@Base+0xe28>  // b.any
    3c74:	cmp	w8, #0x44
    3c78:	b.ne	3ccc <PyInit__codecs_cn@@Base+0xe28>  // b.any
    3c7c:	mov	w1, #0x2015                	// #8213
    3c80:	b	3b5c <PyInit__codecs_cn@@Base+0xcb8>
    3c84:	cmp	w11, #0xf
    3c88:	b.cc	3dc8 <PyInit__codecs_cn@@Base+0xf24>  // b.lo, b.ul, b.last
    3c8c:	mul	w11, w11, w23
    3c90:	and	w9, w9, #0xff
    3c94:	add	w10, w11, w10, uxtb
    3c98:	mul	w9, w9, w23
    3c9c:	madd	w9, w10, w24, w9
    3ca0:	add	w8, w9, w8, uxtb
    3ca4:	add	w1, w8, w26
    3ca8:	lsr	w8, w1, #16
    3cac:	cmp	w8, #0x10
    3cb0:	b.hi	3dc8 <PyInit__codecs_cn@@Base+0xf24>  // b.pmore
    3cb4:	mov	x0, x20
    3cb8:	bl	2d90 <_PyUnicodeWriter_WriteChar@plt>
    3cbc:	mov	x8, #0xfffffffffffffffc    	// #-4
    3cc0:	tbnz	w0, #31, 3dbc <PyInit__codecs_cn@@Base+0xf18>
    3cc4:	mov	w9, #0x4                   	// #4
    3cc8:	b	3b70 <PyInit__codecs_cn@@Base+0xccc>
    3ccc:	cmp	w9, #0xa1
    3cd0:	b.ne	3ce4 <PyInit__codecs_cn@@Base+0xe40>  // b.any
    3cd4:	cmp	w8, #0xa4
    3cd8:	b.ne	3ce4 <PyInit__codecs_cn@@Base+0xe40>  // b.any
    3cdc:	mov	w1, #0xb7                  	// #183
    3ce0:	b	3b5c <PyInit__codecs_cn@@Base+0xcb8>
    3ce4:	eor	x11, x9, #0x80
    3ce8:	adrp	x12, 2f000 <PyInit__codecs_cn@@Base+0x2c15c>
    3cec:	lsl	x10, x11, #4
    3cf0:	add	x12, x12, #0xd58
    3cf4:	ldr	x10, [x12, x10]
    3cf8:	cbz	x10, 3d34 <PyInit__codecs_cn@@Base+0xe90>
    3cfc:	adrp	x12, 2f000 <PyInit__codecs_cn@@Base+0x2c15c>
    3d00:	add	x12, x12, #0xd58
    3d04:	add	x12, x12, x11, lsl #4
    3d08:	ldrb	w11, [x12, #8]
    3d0c:	eor	w13, w8, #0x80
    3d10:	subs	w11, w13, w11
    3d14:	b.cc	3d34 <PyInit__codecs_cn@@Base+0xe90>  // b.lo, b.ul, b.last
    3d18:	ldrb	w12, [x12, #9]
    3d1c:	cmp	w13, w12
    3d20:	b.hi	3d34 <PyInit__codecs_cn@@Base+0xe90>  // b.pmore
    3d24:	ldrh	w1, [x10, w11, sxtw #1]
    3d28:	mov	w10, #0xfffe                	// #65534
    3d2c:	cmp	w1, w10
    3d30:	b.ne	3b5c <PyInit__codecs_cn@@Base+0xcb8>  // b.any
    3d34:	adrp	x11, 30000 <PyInit__codecs_cn@@Base+0x2d15c>
    3d38:	lsl	x10, x9, #4
    3d3c:	add	x11, x11, #0xd58
    3d40:	ldr	x11, [x11, x10]
    3d44:	cbz	x11, 3d7c <PyInit__codecs_cn@@Base+0xed8>
    3d48:	adrp	x12, 30000 <PyInit__codecs_cn@@Base+0x2d15c>
    3d4c:	add	x12, x12, #0xd58
    3d50:	add	x13, x12, x9, lsl #4
    3d54:	ldrb	w12, [x13, #8]
    3d58:	subs	w12, w8, w12
    3d5c:	b.cc	3d7c <PyInit__codecs_cn@@Base+0xed8>  // b.lo, b.ul, b.last
    3d60:	ldrb	w13, [x13, #9]
    3d64:	cmp	w8, w13
    3d68:	b.hi	3d7c <PyInit__codecs_cn@@Base+0xed8>  // b.pmore
    3d6c:	ldrh	w1, [x11, w12, sxtw #1]
    3d70:	mov	w11, #0xfffe                	// #65534
    3d74:	cmp	w1, w11
    3d78:	b.ne	3b5c <PyInit__codecs_cn@@Base+0xcb8>  // b.any
    3d7c:	ldr	x10, [x27, x10]
    3d80:	cbz	x10, 3dc8 <PyInit__codecs_cn@@Base+0xf24>
    3d84:	add	x11, x27, x9, lsl #4
    3d88:	ldrb	w9, [x11, #8]
    3d8c:	subs	w9, w8, w9
    3d90:	b.cc	3dc8 <PyInit__codecs_cn@@Base+0xf24>  // b.lo, b.ul, b.last
    3d94:	ldrb	w11, [x11, #9]
    3d98:	cmp	w8, w11
    3d9c:	b.hi	3dc8 <PyInit__codecs_cn@@Base+0xf24>  // b.pmore
    3da0:	ldrh	w1, [x10, w9, sxtw #1]
    3da4:	mov	w8, #0xfffe                	// #65534
    3da8:	cmp	w1, w8
    3dac:	b.ne	3b5c <PyInit__codecs_cn@@Base+0xcb8>  // b.any
    3db0:	b	3dc8 <PyInit__codecs_cn@@Base+0xf24>
    3db4:	mov	x19, xzr
    3db8:	b	3dc8 <PyInit__codecs_cn@@Base+0xf24>
    3dbc:	mov	x19, #0xfffffffffffffffc    	// #-4
    3dc0:	b	3dc8 <PyInit__codecs_cn@@Base+0xf24>
    3dc4:	mov	x19, #0xfffffffffffffffe    	// #-2
    3dc8:	mov	x0, x19
    3dcc:	ldp	x20, x19, [sp, #80]
    3dd0:	ldp	x22, x21, [sp, #64]
    3dd4:	ldp	x24, x23, [sp, #48]
    3dd8:	ldp	x26, x25, [sp, #32]
    3ddc:	ldp	x28, x27, [sp, #16]
    3de0:	ldp	x29, x30, [sp], #96
    3de4:	ret
    3de8:	ldr	x14, [x4]
    3dec:	cmp	x14, x5
    3df0:	b.ge	3f9c <PyInit__codecs_cn@@Base+0x10f8>  // b.tcont
    3df4:	adrp	x11, 2e000 <PyInit__codecs_cn@@Base+0x2b15c>
    3df8:	mov	x8, x0
    3dfc:	mov	w9, #0x7e                  	// #126
    3e00:	mov	w10, #0x7d                  	// #125
    3e04:	mov	w0, #0x1                   	// #1
    3e08:	add	x11, x11, #0xd58
    3e0c:	mov	w12, #0x7b                  	// #123
    3e10:	b	3e58 <PyInit__codecs_cn@@Base+0xfb4>
    3e14:	subs	x13, x7, #0x2
    3e18:	b.lt	3fa4 <PyInit__codecs_cn@@Base+0x1100>  // b.tstop
    3e1c:	ldr	x15, [x6]
    3e20:	lsr	w16, w14, #8
    3e24:	strb	w16, [x15]
    3e28:	ldr	x15, [x6]
    3e2c:	strb	w14, [x15, #1]
    3e30:	ldr	x14, [x4]
    3e34:	add	x14, x14, #0x1
    3e38:	str	x14, [x4]
    3e3c:	ldr	x14, [x6]
    3e40:	add	x14, x14, #0x2
    3e44:	str	x14, [x6]
    3e48:	ldr	x14, [x4]
    3e4c:	mov	x7, x13
    3e50:	cmp	x14, x5
    3e54:	b.ge	3f9c <PyInit__codecs_cn@@Base+0x10f8>  // b.tcont
    3e58:	cmp	w2, #0x2
    3e5c:	b.eq	3eec <PyInit__codecs_cn@@Base+0x1048>  // b.none
    3e60:	cmp	w2, #0x1
    3e64:	b.ne	3efc <PyInit__codecs_cn@@Base+0x1058>  // b.any
    3e68:	ldrb	w14, [x3, x14]
    3e6c:	cmp	w14, #0x7f
    3e70:	b.hi	3f08 <PyInit__codecs_cn@@Base+0x1064>  // b.pmore
    3e74:	ldrb	w13, [x8]
    3e78:	cbz	w13, 3ea4 <PyInit__codecs_cn@@Base+0x1000>
    3e7c:	subs	x7, x7, #0x2
    3e80:	b.lt	3fa4 <PyInit__codecs_cn@@Base+0x1100>  // b.tstop
    3e84:	ldr	x13, [x6]
    3e88:	strb	w9, [x13]
    3e8c:	ldr	x13, [x6]
    3e90:	strb	w10, [x13, #1]
    3e94:	ldr	x13, [x6]
    3e98:	add	x13, x13, #0x2
    3e9c:	str	x13, [x6]
    3ea0:	strb	wzr, [x8]
    3ea4:	subs	x13, x7, #0x1
    3ea8:	b.lt	3fa4 <PyInit__codecs_cn@@Base+0x1100>  // b.tstop
    3eac:	ldr	x15, [x6]
    3eb0:	cmp	w14, #0x7e
    3eb4:	strb	w14, [x15]
    3eb8:	ldr	x15, [x4]
    3ebc:	add	x15, x15, #0x1
    3ec0:	str	x15, [x4]
    3ec4:	ldr	x15, [x6]
    3ec8:	add	x15, x15, #0x1
    3ecc:	str	x15, [x6]
    3ed0:	b.ne	3e48 <PyInit__codecs_cn@@Base+0xfa4>  // b.any
    3ed4:	subs	x13, x7, #0x2
    3ed8:	b.lt	3fa4 <PyInit__codecs_cn@@Base+0x1100>  // b.tstop
    3edc:	strb	w9, [x15]
    3ee0:	ldr	x14, [x6]
    3ee4:	add	x14, x14, #0x1
    3ee8:	b	3e44 <PyInit__codecs_cn@@Base+0xfa0>
    3eec:	ldrh	w14, [x3, x14, lsl #1]
    3ef0:	cmp	w14, #0x7f
    3ef4:	b.ls	3e74 <PyInit__codecs_cn@@Base+0xfd0>  // b.plast
    3ef8:	b	3f08 <PyInit__codecs_cn@@Base+0x1064>
    3efc:	ldr	w14, [x3, x14, lsl #2]
    3f00:	cmp	w14, #0x7f
    3f04:	b.ls	3e74 <PyInit__codecs_cn@@Base+0xfd0>  // b.plast
    3f08:	lsr	w13, w14, #16
    3f0c:	cbnz	w13, 3fa0 <PyInit__codecs_cn@@Base+0x10fc>
    3f10:	lsr	w15, w14, #8
    3f14:	lsl	x13, x15, #4
    3f18:	ldr	x13, [x11, x13]
    3f1c:	cbz	x13, 3fa0 <PyInit__codecs_cn@@Base+0x10fc>
    3f20:	add	x15, x11, x15, lsl #4
    3f24:	ldrb	w17, [x15, #8]
    3f28:	and	w16, w14, #0xff
    3f2c:	subs	w14, w16, w17
    3f30:	b.cc	3fa0 <PyInit__codecs_cn@@Base+0x10fc>  // b.lo, b.ul, b.last
    3f34:	ldrb	w15, [x15, #9]
    3f38:	cmp	w16, w15
    3f3c:	b.hi	3fa0 <PyInit__codecs_cn@@Base+0x10fc>  // b.pmore
    3f40:	ldrsh	w14, [x13, w14, uxtw #1]
    3f44:	tbnz	w14, #31, 3fa0 <PyInit__codecs_cn@@Base+0x10fc>
    3f48:	ldrb	w13, [x8]
    3f4c:	cbnz	w13, 3e14 <PyInit__codecs_cn@@Base+0xf70>
    3f50:	subs	x13, x7, #0x4
    3f54:	b.lt	3fa4 <PyInit__codecs_cn@@Base+0x1100>  // b.tstop
    3f58:	ldr	x15, [x6]
    3f5c:	lsr	w16, w14, #8
    3f60:	strb	w9, [x15]
    3f64:	ldr	x15, [x6]
    3f68:	strb	w12, [x15, #1]
    3f6c:	ldr	x15, [x6]
    3f70:	strb	w16, [x15, #2]
    3f74:	ldr	x15, [x6]
    3f78:	strb	w14, [x15, #3]
    3f7c:	ldr	x14, [x4]
    3f80:	add	x14, x14, #0x1
    3f84:	str	x14, [x4]
    3f88:	ldr	x14, [x6]
    3f8c:	add	x14, x14, #0x4
    3f90:	str	x14, [x6]
    3f94:	strb	w0, [x8]
    3f98:	b	3e48 <PyInit__codecs_cn@@Base+0xfa4>
    3f9c:	mov	x0, xzr
    3fa0:	ret
    3fa4:	mov	x0, #0xffffffffffffffff    	// #-1
    3fa8:	ret
    3fac:	strb	wzr, [x0]
    3fb0:	mov	w0, wzr
    3fb4:	ret
    3fb8:	ldrb	w9, [x0]
    3fbc:	cbz	w9, 3fd0 <PyInit__codecs_cn@@Base+0x112c>
    3fc0:	cmp	x3, #0x2
    3fc4:	b.ge	3fd8 <PyInit__codecs_cn@@Base+0x1134>  // b.tcont
    3fc8:	mov	x0, #0xffffffffffffffff    	// #-1
    3fcc:	ret
    3fd0:	mov	x0, xzr
    3fd4:	ret
    3fd8:	ldr	x9, [x2]
    3fdc:	mov	w10, #0x7e                  	// #126
    3fe0:	mov	x8, x0
    3fe4:	mov	x0, xzr
    3fe8:	strb	w10, [x9]
    3fec:	ldr	x9, [x2]
    3ff0:	mov	w10, #0x7d                  	// #125
    3ff4:	strb	w10, [x9, #1]
    3ff8:	strb	wzr, [x8]
    3ffc:	ldr	x8, [x2]
    4000:	add	x8, x8, #0x2
    4004:	str	x8, [x2]
    4008:	ret
    400c:	stp	x29, x30, [sp, #-80]!
    4010:	str	x25, [sp, #16]
    4014:	stp	x24, x23, [sp, #32]
    4018:	stp	x22, x21, [sp, #48]
    401c:	stp	x20, x19, [sp, #64]
    4020:	mov	x29, sp
    4024:	cmp	x3, #0x1
    4028:	b.lt	4164 <PyInit__codecs_cn@@Base+0x12c0>  // b.tstop
    402c:	ldr	x8, [x2]
    4030:	adrp	x24, 2f000 <PyInit__codecs_cn@@Base+0x2c15c>
    4034:	mov	x20, x4
    4038:	mov	x21, x3
    403c:	mov	x22, x2
    4040:	mov	x23, x0
    4044:	mov	w19, #0x1                   	// #1
    4048:	add	x24, x24, #0xd58
    404c:	mov	w25, #0xfffe                	// #65534
    4050:	ldrb	w1, [x8]
    4054:	cmp	w1, #0x7e
    4058:	b.ne	4090 <PyInit__codecs_cn@@Base+0x11ec>  // b.any
    405c:	cmp	x21, #0x2
    4060:	b.lt	4184 <PyInit__codecs_cn@@Base+0x12e0>  // b.tstop
    4064:	ldrb	w8, [x8, #1]
    4068:	cmp	w8, #0x7c
    406c:	b.gt	40e4 <PyInit__codecs_cn@@Base+0x1240>
    4070:	cmp	w8, #0xa
    4074:	b.eq	4128 <PyInit__codecs_cn@@Base+0x1284>  // b.none
    4078:	cmp	w8, #0x7b
    407c:	b.ne	4168 <PyInit__codecs_cn@@Base+0x12c4>  // b.any
    4080:	ldrb	w8, [x23]
    4084:	cbnz	w8, 4168 <PyInit__codecs_cn@@Base+0x12c4>
    4088:	strb	w19, [x23]
    408c:	b	4144 <PyInit__codecs_cn@@Base+0x12a0>
    4090:	tbnz	w1, #7, 4168 <PyInit__codecs_cn@@Base+0x12c4>
    4094:	ldrb	w9, [x23]
    4098:	cbz	w9, 4110 <PyInit__codecs_cn@@Base+0x126c>
    409c:	cmp	x21, #0x2
    40a0:	b.lt	4184 <PyInit__codecs_cn@@Base+0x12e0>  // b.tstop
    40a4:	lsl	x9, x1, #4
    40a8:	ldr	x9, [x24, x9]
    40ac:	cbz	x9, 4168 <PyInit__codecs_cn@@Base+0x12c4>
    40b0:	add	x11, x24, x1, lsl #4
    40b4:	ldrb	w8, [x8, #1]
    40b8:	ldrb	w10, [x11, #8]
    40bc:	cmp	w8, w10
    40c0:	b.cc	4168 <PyInit__codecs_cn@@Base+0x12c4>  // b.lo, b.ul, b.last
    40c4:	ldrb	w11, [x11, #9]
    40c8:	cmp	w8, w11
    40cc:	b.hi	4168 <PyInit__codecs_cn@@Base+0x12c4>  // b.pmore
    40d0:	sub	x8, x8, x10
    40d4:	ldrh	w1, [x9, x8, lsl #1]
    40d8:	cmp	w1, w25
    40dc:	b.ne	4100 <PyInit__codecs_cn@@Base+0x125c>  // b.any
    40e0:	b	4168 <PyInit__codecs_cn@@Base+0x12c4>
    40e4:	cmp	w8, #0x7d
    40e8:	b.eq	4134 <PyInit__codecs_cn@@Base+0x1290>  // b.none
    40ec:	cmp	w8, #0x7e
    40f0:	b.ne	4168 <PyInit__codecs_cn@@Base+0x12c4>  // b.any
    40f4:	ldrb	w8, [x23]
    40f8:	cbnz	w8, 4168 <PyInit__codecs_cn@@Base+0x12c4>
    40fc:	mov	w1, #0x7e                  	// #126
    4100:	mov	x0, x20
    4104:	bl	2d90 <_PyUnicodeWriter_WriteChar@plt>
    4108:	tbz	w0, #31, 4144 <PyInit__codecs_cn@@Base+0x12a0>
    410c:	b	418c <PyInit__codecs_cn@@Base+0x12e8>
    4110:	mov	x0, x20
    4114:	bl	2d90 <_PyUnicodeWriter_WriteChar@plt>
    4118:	tbnz	w0, #31, 418c <PyInit__codecs_cn@@Base+0x12e8>
    411c:	mov	x8, #0xffffffffffffffff    	// #-1
    4120:	mov	w9, #0x1                   	// #1
    4124:	b	414c <PyInit__codecs_cn@@Base+0x12a8>
    4128:	ldrb	w8, [x23]
    412c:	cbz	w8, 4144 <PyInit__codecs_cn@@Base+0x12a0>
    4130:	b	4168 <PyInit__codecs_cn@@Base+0x12c4>
    4134:	ldrb	w8, [x23]
    4138:	cmp	w8, #0x1
    413c:	b.ne	4168 <PyInit__codecs_cn@@Base+0x12c4>  // b.any
    4140:	strb	wzr, [x23]
    4144:	mov	x8, #0xfffffffffffffffe    	// #-2
    4148:	mov	w9, #0x2                   	// #2
    414c:	ldr	x10, [x22]
    4150:	add	x21, x21, x8
    4154:	cmp	x21, #0x0
    4158:	add	x8, x10, x9
    415c:	str	x8, [x22]
    4160:	b.gt	4050 <PyInit__codecs_cn@@Base+0x11ac>
    4164:	mov	x19, xzr
    4168:	mov	x0, x19
    416c:	ldp	x20, x19, [sp, #64]
    4170:	ldp	x22, x21, [sp, #48]
    4174:	ldp	x24, x23, [sp, #32]
    4178:	ldr	x25, [sp, #16]
    417c:	ldp	x29, x30, [sp], #80
    4180:	ret
    4184:	mov	x19, #0xfffffffffffffffe    	// #-2
    4188:	b	4168 <PyInit__codecs_cn@@Base+0x12c4>
    418c:	mov	x19, #0xfffffffffffffffc    	// #-4
    4190:	b	4168 <PyInit__codecs_cn@@Base+0x12c4>
    4194:	strb	wzr, [x0]
    4198:	mov	w0, wzr
    419c:	ret
    41a0:	strb	wzr, [x0]
    41a4:	mov	x0, xzr
    41a8:	ret

Disassembly of section .fini:

00000000000041ac <.fini>:
    41ac:	stp	x29, x30, [sp, #-16]!
    41b0:	mov	x29, sp
    41b4:	ldp	x29, x30, [sp], #16
    41b8:	ret
