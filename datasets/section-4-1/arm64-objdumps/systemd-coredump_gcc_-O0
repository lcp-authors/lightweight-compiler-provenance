
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-coredump_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000402dd8 <_init>:
  402dd8:	stp	x29, x30, [sp, #-16]!
  402ddc:	mov	x29, sp
  402de0:	bl	4036d0 <call_weak_fn>
  402de4:	ldp	x29, x30, [sp], #16
  402de8:	ret

Disassembly of section .plt:

0000000000402df0 <.plt>:
  402df0:	stp	x16, x30, [sp, #-16]!
  402df4:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  402df8:	ldr	x17, [x16, #2992]
  402dfc:	add	x16, x16, #0xbb0
  402e00:	br	x17
  402e04:	nop
  402e08:	nop
  402e0c:	nop

0000000000402e10 <compress_stream_xz@plt>:
  402e10:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  402e14:	ldr	x17, [x16, #3000]
  402e18:	add	x16, x16, #0xbb8
  402e1c:	br	x17

0000000000402e20 <safe_fclose@plt>:
  402e20:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  402e24:	ldr	x17, [x16, #3008]
  402e28:	add	x16, x16, #0xbc0
  402e2c:	br	x17

0000000000402e30 <read_line_full@plt>:
  402e30:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  402e34:	ldr	x17, [x16, #3016]
  402e38:	add	x16, x16, #0xbc8
  402e3c:	br	x17

0000000000402e40 <unlink@plt>:
  402e40:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  402e44:	ldr	x17, [x16, #3024]
  402e48:	add	x16, x16, #0xbd0
  402e4c:	br	x17

0000000000402e50 <openat64@plt>:
  402e50:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  402e54:	ldr	x17, [x16, #3032]
  402e58:	add	x16, x16, #0xbd8
  402e5c:	br	x17

0000000000402e60 <internal_hashmap_free@plt>:
  402e60:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  402e64:	ldr	x17, [x16, #3040]
  402e68:	add	x16, x16, #0xbe0
  402e6c:	br	x17

0000000000402e70 <acl_get_fd@plt>:
  402e70:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  402e74:	ldr	x17, [x16, #3048]
  402e78:	add	x16, x16, #0xbe8
  402e7c:	br	x17

0000000000402e80 <fsetxattr@plt>:
  402e80:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  402e84:	ldr	x17, [x16, #3056]
  402e88:	add	x16, x16, #0xbf0
  402e8c:	br	x17

0000000000402e90 <strcmp_ptr@plt>:
  402e90:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  402e94:	ldr	x17, [x16, #3064]
  402e98:	add	x16, x16, #0xbf8
  402e9c:	br	x17

0000000000402ea0 <fchmod@plt>:
  402ea0:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  402ea4:	ldr	x17, [x16, #3072]
  402ea8:	add	x16, x16, #0xc00
  402eac:	br	x17

0000000000402eb0 <stpcpy@plt>:
  402eb0:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  402eb4:	ldr	x17, [x16, #3080]
  402eb8:	add	x16, x16, #0xc08
  402ebc:	br	x17

0000000000402ec0 <iovw_new@plt>:
  402ec0:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  402ec4:	ldr	x17, [x16, #3088]
  402ec8:	add	x16, x16, #0xc10
  402ecc:	br	x17

0000000000402ed0 <__libc_start_main@plt>:
  402ed0:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  402ed4:	ldr	x17, [x16, #3096]
  402ed8:	add	x16, x16, #0xc18
  402edc:	br	x17

0000000000402ee0 <send_one_fd_iov_sa@plt>:
  402ee0:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  402ee4:	ldr	x17, [x16, #3104]
  402ee8:	add	x16, x16, #0xc20
  402eec:	br	x17

0000000000402ef0 <iovw_free_contents@plt>:
  402ef0:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  402ef4:	ldr	x17, [x16, #3112]
  402ef8:	add	x16, x16, #0xc28
  402efc:	br	x17

0000000000402f00 <fdopen@plt>:
  402f00:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  402f04:	ldr	x17, [x16, #3120]
  402f08:	add	x16, x16, #0xc30
  402f0c:	br	x17

0000000000402f10 <lseek64@plt>:
  402f10:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  402f14:	ldr	x17, [x16, #3128]
  402f18:	add	x16, x16, #0xc38
  402f1c:	br	x17

0000000000402f20 <safe_atollu@plt>:
  402f20:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  402f24:	ldr	x17, [x16, #3136]
  402f28:	add	x16, x16, #0xc40
  402f2c:	br	x17

0000000000402f30 <open_tmpfile_linkable@plt>:
  402f30:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  402f34:	ldr	x17, [x16, #3144]
  402f38:	add	x16, x16, #0xc48
  402f3c:	br	x17

0000000000402f40 <log_dispatch_internal@plt>:
  402f40:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  402f44:	ldr	x17, [x16, #3152]
  402f48:	add	x16, x16, #0xc50
  402f4c:	br	x17

0000000000402f50 <__gmon_start__@plt>:
  402f50:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  402f54:	ldr	x17, [x16, #3160]
  402f58:	add	x16, x16, #0xc58
  402f5c:	br	x17

0000000000402f60 <polkit_agent_close@plt>:
  402f60:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  402f64:	ldr	x17, [x16, #3168]
  402f68:	add	x16, x16, #0xc60
  402f6c:	br	x17

0000000000402f70 <get_process_exe@plt>:
  402f70:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  402f74:	ldr	x17, [x16, #3176]
  402f78:	add	x16, x16, #0xc68
  402f7c:	br	x17

0000000000402f80 <acl_get_permset@plt>:
  402f80:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  402f84:	ldr	x17, [x16, #3184]
  402f88:	add	x16, x16, #0xc70
  402f8c:	br	x17

0000000000402f90 <strnlen@plt>:
  402f90:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  402f94:	ldr	x17, [x16, #3192]
  402f98:	add	x16, x16, #0xc78
  402f9c:	br	x17

0000000000402fa0 <hidden_or_backup_file@plt>:
  402fa0:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  402fa4:	ldr	x17, [x16, #3200]
  402fa8:	add	x16, x16, #0xc80
  402fac:	br	x17

0000000000402fb0 <socket@plt>:
  402fb0:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  402fb4:	ldr	x17, [x16, #3208]
  402fb8:	add	x16, x16, #0xc88
  402fbc:	br	x17

0000000000402fc0 <cg_pid_get_path_shifted@plt>:
  402fc0:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  402fc4:	ldr	x17, [x16, #3216]
  402fc8:	add	x16, x16, #0xc90
  402fcc:	br	x17

0000000000402fd0 <config_item_table_lookup@plt>:
  402fd0:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  402fd4:	ldr	x17, [x16, #3224]
  402fd8:	add	x16, x16, #0xc98
  402fdc:	br	x17

0000000000402fe0 <fprintf@plt>:
  402fe0:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  402fe4:	ldr	x17, [x16, #3232]
  402fe8:	add	x16, x16, #0xca0
  402fec:	br	x17

0000000000402ff0 <iovw_put@plt>:
  402ff0:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  402ff4:	ldr	x17, [x16, #3240]
  402ff8:	add	x16, x16, #0xca8
  402ffc:	br	x17

0000000000403000 <__cmsg_nxthdr@plt>:
  403000:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403004:	ldr	x17, [x16, #3248]
  403008:	add	x16, x16, #0xcb0
  40300c:	br	x17

0000000000403010 <memcpy@plt>:
  403010:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403014:	ldr	x17, [x16, #3256]
  403018:	add	x16, x16, #0xcb8
  40301c:	br	x17

0000000000403020 <fsync@plt>:
  403020:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403024:	ldr	x17, [x16, #3264]
  403028:	add	x16, x16, #0xcc0
  40302c:	br	x17

0000000000403030 <journal_importer_cleanup@plt>:
  403030:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403034:	ldr	x17, [x16, #3272]
  403038:	add	x16, x16, #0xcc8
  40303c:	br	x17

0000000000403040 <log_setup_service@plt>:
  403040:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403044:	ldr	x17, [x16, #3280]
  403048:	add	x16, x16, #0xcd0
  40304c:	br	x17

0000000000403050 <strjoin_real@plt>:
  403050:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403054:	ldr	x17, [x16, #3288]
  403058:	add	x16, x16, #0xcd8
  40305c:	br	x17

0000000000403060 <safe_close@plt>:
  403060:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403064:	ldr	x17, [x16, #3296]
  403068:	add	x16, x16, #0xce0
  40306c:	br	x17

0000000000403070 <dirfd@plt>:
  403070:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403074:	ldr	x17, [x16, #3304]
  403078:	add	x16, x16, #0xce8
  40307c:	br	x17

0000000000403080 <log_assert_failed_realm@plt>:
  403080:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403084:	ldr	x17, [x16, #3312]
  403088:	add	x16, x16, #0xcf0
  40308c:	br	x17

0000000000403090 <readdir64@plt>:
  403090:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403094:	ldr	x17, [x16, #3320]
  403098:	add	x16, x16, #0xcf8
  40309c:	br	x17

00000000004030a0 <unlinkat_deallocate@plt>:
  4030a0:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  4030a4:	ldr	x17, [x16, #3328]
  4030a8:	add	x16, x16, #0xd00
  4030ac:	br	x17

00000000004030b0 <sd_pid_get_session@plt>:
  4030b0:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  4030b4:	ldr	x17, [x16, #3336]
  4030b8:	add	x16, x16, #0xd08
  4030bc:	br	x17

00000000004030c0 <acl_set_qualifier@plt>:
  4030c0:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  4030c4:	ldr	x17, [x16, #3344]
  4030c8:	add	x16, x16, #0xd10
  4030cc:	br	x17

00000000004030d0 <link_tmpfile@plt>:
  4030d0:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  4030d4:	ldr	x17, [x16, #3352]
  4030d8:	add	x16, x16, #0xd18
  4030dc:	br	x17

00000000004030e0 <read_full_file_full@plt>:
  4030e0:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  4030e4:	ldr	x17, [x16, #3360]
  4030e8:	add	x16, x16, #0xd20
  4030ec:	br	x17

00000000004030f0 <sd_listen_fds@plt>:
  4030f0:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  4030f4:	ldr	x17, [x16, #3368]
  4030f8:	add	x16, x16, #0xd28
  4030fc:	br	x17

0000000000403100 <disable_coredumps@plt>:
  403100:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403104:	ldr	x17, [x16, #3376]
  403108:	add	x16, x16, #0xd30
  40310c:	br	x17

0000000000403110 <calc_acl_mask_if_needed@plt>:
  403110:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403114:	ldr	x17, [x16, #3384]
  403118:	add	x16, x16, #0xd38
  40311c:	br	x17

0000000000403120 <fputc@plt>:
  403120:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403124:	ldr	x17, [x16, #3392]
  403128:	add	x16, x16, #0xd40
  40312c:	br	x17

0000000000403130 <closedir@plt>:
  403130:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403134:	ldr	x17, [x16, #3400]
  403138:	add	x16, x16, #0xd48
  40313c:	br	x17

0000000000403140 <sd_id128_get_boot@plt>:
  403140:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403144:	ldr	x17, [x16, #3408]
  403148:	add	x16, x16, #0xd50
  40314c:	br	x17

0000000000403150 <strncmp@plt>:
  403150:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403154:	ldr	x17, [x16, #3416]
  403158:	add	x16, x16, #0xd58
  40315c:	br	x17

0000000000403160 <acl_add_perm@plt>:
  403160:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403164:	ldr	x17, [x16, #3424]
  403168:	add	x16, x16, #0xd60
  40316c:	br	x17

0000000000403170 <abort@plt>:
  403170:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403174:	ldr	x17, [x16, #3432]
  403178:	add	x16, x16, #0xd68
  40317c:	br	x17

0000000000403180 <get_process_environ@plt>:
  403180:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403184:	ldr	x17, [x16, #3440]
  403188:	add	x16, x16, #0xd70
  40318c:	br	x17

0000000000403190 <get_process_ppid@plt>:
  403190:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403194:	ldr	x17, [x16, #3448]
  403198:	add	x16, x16, #0xd78
  40319c:	br	x17

00000000004031a0 <unlink_noerrno@plt>:
  4031a0:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  4031a4:	ldr	x17, [x16, #3456]
  4031a8:	add	x16, x16, #0xd80
  4031ac:	br	x17

00000000004031b0 <config_parse_iec_size@plt>:
  4031b0:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  4031b4:	ldr	x17, [x16, #3464]
  4031b8:	add	x16, x16, #0xd88
  4031bc:	br	x17

00000000004031c0 <internal_hashmap_get@plt>:
  4031c0:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  4031c4:	ldr	x17, [x16, #3472]
  4031c8:	add	x16, x16, #0xd90
  4031cc:	br	x17

00000000004031d0 <__fxstat64@plt>:
  4031d0:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  4031d4:	ldr	x17, [x16, #3480]
  4031d8:	add	x16, x16, #0xd98
  4031dc:	br	x17

00000000004031e0 <__fxstatat64@plt>:
  4031e0:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  4031e4:	ldr	x17, [x16, #3488]
  4031e8:	add	x16, x16, #0xda0
  4031ec:	br	x17

00000000004031f0 <open_memstream_unlocked@plt>:
  4031f0:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  4031f4:	ldr	x17, [x16, #3496]
  4031f8:	add	x16, x16, #0xda8
  4031fc:	br	x17

0000000000403200 <parse_pid@plt>:
  403200:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403204:	ldr	x17, [x16, #3504]
  403208:	add	x16, x16, #0xdb0
  40320c:	br	x17

0000000000403210 <get_process_comm@plt>:
  403210:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403214:	ldr	x17, [x16, #3512]
  403218:	add	x16, x16, #0xdb8
  40321c:	br	x17

0000000000403220 <__errno_location@plt>:
  403220:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403224:	ldr	x17, [x16, #3520]
  403228:	add	x16, x16, #0xdc0
  40322c:	br	x17

0000000000403230 <log_set_target@plt>:
  403230:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403234:	ldr	x17, [x16, #3528]
  403238:	add	x16, x16, #0xdc8
  40323c:	br	x17

0000000000403240 <fstatvfs64@plt>:
  403240:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403244:	ldr	x17, [x16, #3536]
  403248:	add	x16, x16, #0xdd0
  40324c:	br	x17

0000000000403250 <prctl@plt>:
  403250:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403254:	ldr	x17, [x16, #3544]
  403258:	add	x16, x16, #0xdd8
  40325c:	br	x17

0000000000403260 <read@plt>:
  403260:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403264:	ldr	x17, [x16, #3552]
  403268:	add	x16, x16, #0xde0
  40326c:	br	x17

0000000000403270 <sd_pid_get_owner_uid@plt>:
  403270:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403274:	ldr	x17, [x16, #3560]
  403278:	add	x16, x16, #0xde8
  40327c:	br	x17

0000000000403280 <safe_atoi@plt>:
  403280:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403284:	ldr	x17, [x16, #3568]
  403288:	add	x16, x16, #0xdf0
  40328c:	br	x17

0000000000403290 <iovw_put_string_field_free@plt>:
  403290:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403294:	ldr	x17, [x16, #3576]
  403298:	add	x16, x16, #0xdf8
  40329c:	br	x17

00000000004032a0 <rewinddir@plt>:
  4032a0:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  4032a4:	ldr	x17, [x16, #3584]
  4032a8:	add	x16, x16, #0xe00
  4032ac:	br	x17

00000000004032b0 <__stack_chk_fail@plt>:
  4032b0:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  4032b4:	ldr	x17, [x16, #3592]
  4032b8:	add	x16, x16, #0xe08
  4032bc:	br	x17

00000000004032c0 <sd_pid_get_slice@plt>:
  4032c0:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  4032c4:	ldr	x17, [x16, #3600]
  4032c8:	add	x16, x16, #0xe10
  4032cc:	br	x17

00000000004032d0 <get_process_root@plt>:
  4032d0:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  4032d4:	ldr	x17, [x16, #3608]
  4032d8:	add	x16, x16, #0xe18
  4032dc:	br	x17

00000000004032e0 <next_datagram_size_fd@plt>:
  4032e0:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  4032e4:	ldr	x17, [x16, #3616]
  4032e8:	add	x16, x16, #0xe20
  4032ec:	br	x17

00000000004032f0 <sd_journal_sendv_with_location@plt>:
  4032f0:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  4032f4:	ldr	x17, [x16, #3624]
  4032f8:	add	x16, x16, #0xe28
  4032fc:	br	x17

0000000000403300 <__xstat64@plt>:
  403300:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403304:	ldr	x17, [x16, #3632]
  403308:	add	x16, x16, #0xe30
  40330c:	br	x17

0000000000403310 <mkdir_p_label@plt>:
  403310:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403314:	ldr	x17, [x16, #3640]
  403318:	add	x16, x16, #0xe38
  40331c:	br	x17

0000000000403320 <ask_password_agent_close@plt>:
  403320:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403324:	ldr	x17, [x16, #3648]
  403328:	add	x16, x16, #0xe40
  40332c:	br	x17

0000000000403330 <signal_to_string@plt>:
  403330:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403334:	ldr	x17, [x16, #3656]
  403338:	add	x16, x16, #0xe48
  40333c:	br	x17

0000000000403340 <pager_close@plt>:
  403340:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403344:	ldr	x17, [x16, #3664]
  403348:	add	x16, x16, #0xe50
  40334c:	br	x17

0000000000403350 <iovw_free_free@plt>:
  403350:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403354:	ldr	x17, [x16, #3672]
  403358:	add	x16, x16, #0xe58
  40335c:	br	x17

0000000000403360 <iovw_put_string_field@plt>:
  403360:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403364:	ldr	x17, [x16, #3680]
  403368:	add	x16, x16, #0xe60
  40336c:	br	x17

0000000000403370 <journal_importer_eof@plt>:
  403370:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403374:	ldr	x17, [x16, #3688]
  403378:	add	x16, x16, #0xe68
  40337c:	br	x17

0000000000403380 <cmsg_close_all@plt>:
  403380:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403384:	ldr	x17, [x16, #3696]
  403388:	add	x16, x16, #0xe70
  40338c:	br	x17

0000000000403390 <log_struct_internal@plt>:
  403390:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403394:	ldr	x17, [x16, #3704]
  403398:	add	x16, x16, #0xe78
  40339c:	br	x17

00000000004033a0 <malloc@plt>:
  4033a0:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  4033a4:	ldr	x17, [x16, #3712]
  4033a8:	add	x16, x16, #0xe80
  4033ac:	br	x17

00000000004033b0 <log_internal_realm@plt>:
  4033b0:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  4033b4:	ldr	x17, [x16, #3720]
  4033b8:	add	x16, x16, #0xe88
  4033bc:	br	x17

00000000004033c0 <acl_set_tag_type@plt>:
  4033c0:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  4033c4:	ldr	x17, [x16, #3728]
  4033c8:	add	x16, x16, #0xe90
  4033cc:	br	x17

00000000004033d0 <hashmap_put@plt>:
  4033d0:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  4033d4:	ldr	x17, [x16, #3736]
  4033d8:	add	x16, x16, #0xe98
  4033dc:	br	x17

00000000004033e0 <cg_pid_get_user_unit@plt>:
  4033e0:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  4033e4:	ldr	x17, [x16, #3744]
  4033e8:	add	x16, x16, #0xea0
  4033ec:	br	x17

00000000004033f0 <get_user_creds@plt>:
  4033f0:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  4033f4:	ldr	x17, [x16, #3752]
  4033f8:	add	x16, x16, #0xea8
  4033fc:	br	x17

0000000000403400 <page_size@plt>:
  403400:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403404:	ldr	x17, [x16, #3760]
  403408:	add	x16, x16, #0xeb0
  40340c:	br	x17

0000000000403410 <journal_importer_process_data@plt>:
  403410:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403414:	ldr	x17, [x16, #3768]
  403418:	add	x16, x16, #0xeb8
  40341c:	br	x17

0000000000403420 <log_syntax_internal@plt>:
  403420:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403424:	ldr	x17, [x16, #3776]
  403428:	add	x16, x16, #0xec0
  40342c:	br	x17

0000000000403430 <parse_uid@plt>:
  403430:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403434:	ldr	x17, [x16, #3784]
  403438:	add	x16, x16, #0xec8
  40343c:	br	x17

0000000000403440 <string_table_lookup@plt>:
  403440:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403444:	ldr	x17, [x16, #3792]
  403448:	add	x16, x16, #0xed0
  40344c:	br	x17

0000000000403450 <strcmp@plt>:
  403450:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403454:	ldr	x17, [x16, #3800]
  403458:	add	x16, x16, #0xed8
  40345c:	br	x17

0000000000403460 <recvmsg@plt>:
  403460:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403464:	ldr	x17, [x16, #3808]
  403468:	add	x16, x16, #0xee0
  40346c:	br	x17

0000000000403470 <get_process_cmdline@plt>:
  403470:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403474:	ldr	x17, [x16, #3816]
  403478:	add	x16, x16, #0xee8
  40347c:	br	x17

0000000000403480 <opendir@plt>:
  403480:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403484:	ldr	x17, [x16, #3824]
  403488:	add	x16, x16, #0xef0
  40348c:	br	x17

0000000000403490 <readlinkat_malloc@plt>:
  403490:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403494:	ldr	x17, [x16, #3832]
  403498:	add	x16, x16, #0xef8
  40349c:	br	x17

00000000004034a0 <strdup@plt>:
  4034a0:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  4034a4:	ldr	x17, [x16, #3840]
  4034a8:	add	x16, x16, #0xf00
  4034ac:	br	x17

00000000004034b0 <calloc@plt>:
  4034b0:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  4034b4:	ldr	x17, [x16, #3848]
  4034b8:	add	x16, x16, #0xf08
  4034bc:	br	x17

00000000004034c0 <internal_hashmap_first_key_and_value@plt>:
  4034c0:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  4034c4:	ldr	x17, [x16, #3856]
  4034c8:	add	x16, x16, #0xf10
  4034cc:	br	x17

00000000004034d0 <strchr@plt>:
  4034d0:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  4034d4:	ldr	x17, [x16, #3864]
  4034d8:	add	x16, x16, #0xf18
  4034dc:	br	x17

00000000004034e0 <asprintf@plt>:
  4034e0:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  4034e4:	ldr	x17, [x16, #3872]
  4034e8:	add	x16, x16, #0xf20
  4034ec:	br	x17

00000000004034f0 <timespec_load@plt>:
  4034f0:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  4034f4:	ldr	x17, [x16, #3880]
  4034f8:	add	x16, x16, #0xf28
  4034fc:	br	x17

0000000000403500 <drop_privileges@plt>:
  403500:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403504:	ldr	x17, [x16, #3888]
  403508:	add	x16, x16, #0xf30
  40350c:	br	x17

0000000000403510 <cg_pid_get_unit@plt>:
  403510:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403514:	ldr	x17, [x16, #3896]
  403518:	add	x16, x16, #0xf38
  40351c:	br	x17

0000000000403520 <free@plt>:
  403520:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403524:	ldr	x17, [x16, #3904]
  403528:	add	x16, x16, #0xf40
  40352c:	br	x17

0000000000403530 <copy_bytes_full@plt>:
  403530:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403534:	ldr	x17, [x16, #3912]
  403538:	add	x16, x16, #0xf48
  40353c:	br	x17

0000000000403540 <sendmsg@plt>:
  403540:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403544:	ldr	x17, [x16, #3920]
  403548:	add	x16, x16, #0xf50
  40354c:	br	x17

0000000000403550 <acl_free@plt>:
  403550:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403554:	ldr	x17, [x16, #3928]
  403558:	add	x16, x16, #0xf58
  40355c:	br	x17

0000000000403560 <sprintf@plt>:
  403560:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403564:	ldr	x17, [x16, #3936]
  403568:	add	x16, x16, #0xf60
  40356c:	br	x17

0000000000403570 <config_parse_many_nulstr@plt>:
  403570:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403574:	ldr	x17, [x16, #3944]
  403578:	add	x16, x16, #0xf68
  40357c:	br	x17

0000000000403580 <internal_hashmap_ensure_allocated@plt>:
  403580:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403584:	ldr	x17, [x16, #3952]
  403588:	add	x16, x16, #0xf70
  40358c:	br	x17

0000000000403590 <config_parse_iec_uint64@plt>:
  403590:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403594:	ldr	x17, [x16, #3960]
  403598:	add	x16, x16, #0xf78
  40359c:	br	x17

00000000004035a0 <xescape_full@plt>:
  4035a0:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  4035a4:	ldr	x17, [x16, #3968]
  4035a8:	add	x16, x16, #0xf80
  4035ac:	br	x17

00000000004035b0 <mac_selinux_finish@plt>:
  4035b0:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  4035b4:	ldr	x17, [x16, #3976]
  4035b8:	add	x16, x16, #0xf88
  4035bc:	br	x17

00000000004035c0 <fputs@plt>:
  4035c0:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  4035c4:	ldr	x17, [x16, #3984]
  4035c8:	add	x16, x16, #0xf90
  4035cc:	br	x17

00000000004035d0 <connect@plt>:
  4035d0:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  4035d4:	ldr	x17, [x16, #3992]
  4035d8:	add	x16, x16, #0xf98
  4035dc:	br	x17

00000000004035e0 <open64@plt>:
  4035e0:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  4035e4:	ldr	x17, [x16, #4000]
  4035e8:	add	x16, x16, #0xfa0
  4035ec:	br	x17

00000000004035f0 <strlen@plt>:
  4035f0:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  4035f4:	ldr	x17, [x16, #4008]
  4035f8:	add	x16, x16, #0xfa8
  4035fc:	br	x17

0000000000403600 <fsync_directory_of_file@plt>:
  403600:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403604:	ldr	x17, [x16, #4016]
  403608:	add	x16, x16, #0xfb0
  40360c:	br	x17

0000000000403610 <log_open@plt>:
  403610:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403614:	ldr	x17, [x16, #4024]
  403618:	add	x16, x16, #0xfb8
  40361c:	br	x17

0000000000403620 <log_oom_internal@plt>:
  403620:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403624:	ldr	x17, [x16, #4032]
  403628:	add	x16, x16, #0xfc0
  40362c:	br	x17

0000000000403630 <config_parse_bool@plt>:
  403630:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403634:	ldr	x17, [x16, #4040]
  403638:	add	x16, x16, #0xfc8
  40363c:	br	x17

0000000000403640 <get_process_cwd@plt>:
  403640:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403644:	ldr	x17, [x16, #4048]
  403648:	add	x16, x16, #0xfd0
  40364c:	br	x17

0000000000403650 <acl_set_fd@plt>:
  403650:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403654:	ldr	x17, [x16, #4056]
  403658:	add	x16, x16, #0xfd8
  40365c:	br	x17

0000000000403660 <log_get_max_level_realm@plt>:
  403660:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403664:	ldr	x17, [x16, #4064]
  403668:	add	x16, x16, #0xfe0
  40366c:	br	x17

0000000000403670 <acl_create_entry@plt>:
  403670:	adrp	x16, 41d000 <__FRAME_END__+0xfdec>
  403674:	ldr	x17, [x16, #4072]
  403678:	add	x16, x16, #0xfe8
  40367c:	br	x17

Disassembly of section .text:

0000000000403680 <_start>:
  403680:	mov	x29, #0x0                   	// #0
  403684:	mov	x30, #0x0                   	// #0
  403688:	mov	x5, x0
  40368c:	ldr	x1, [sp]
  403690:	add	x2, sp, #0x8
  403694:	mov	x6, sp
  403698:	movz	x0, #0x0, lsl #48
  40369c:	movk	x0, #0x0, lsl #32
  4036a0:	movk	x0, #0x40, lsl #16
  4036a4:	movk	x0, #0x9c8c
  4036a8:	movz	x3, #0x0, lsl #48
  4036ac:	movk	x3, #0x0, lsl #32
  4036b0:	movk	x3, #0x40, lsl #16
  4036b4:	movk	x3, #0xab98
  4036b8:	movz	x4, #0x0, lsl #48
  4036bc:	movk	x4, #0x0, lsl #32
  4036c0:	movk	x4, #0x40, lsl #16
  4036c4:	movk	x4, #0xac18
  4036c8:	bl	402ed0 <__libc_start_main@plt>
  4036cc:	bl	403170 <abort@plt>

00000000004036d0 <call_weak_fn>:
  4036d0:	adrp	x0, 41d000 <__FRAME_END__+0xfdec>
  4036d4:	ldr	x0, [x0, #4088]
  4036d8:	cbz	x0, 4036e0 <call_weak_fn+0x10>
  4036dc:	b	402f50 <__gmon_start__@plt>
  4036e0:	ret

00000000004036e4 <deregister_tm_clones>:
  4036e4:	stp	x29, x30, [sp, #-32]!
  4036e8:	mov	x29, sp
  4036ec:	adrp	x0, 41e000 <arg_storage>
  4036f0:	add	x0, x0, #0x30
  4036f4:	str	x0, [sp, #24]
  4036f8:	ldr	x0, [sp, #24]
  4036fc:	str	x0, [sp, #24]
  403700:	ldr	x1, [sp, #24]
  403704:	adrp	x0, 41e000 <arg_storage>
  403708:	add	x0, x0, #0x30
  40370c:	cmp	x1, x0
  403710:	b.eq	40374c <deregister_tm_clones+0x68>  // b.none
  403714:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  403718:	add	x0, x0, #0xc70
  40371c:	ldr	x0, [x0]
  403720:	str	x0, [sp, #16]
  403724:	ldr	x0, [sp, #16]
  403728:	str	x0, [sp, #16]
  40372c:	ldr	x0, [sp, #16]
  403730:	cmp	x0, #0x0
  403734:	b.eq	403750 <deregister_tm_clones+0x6c>  // b.none
  403738:	ldr	x1, [sp, #16]
  40373c:	adrp	x0, 41e000 <arg_storage>
  403740:	add	x0, x0, #0x30
  403744:	blr	x1
  403748:	b	403750 <deregister_tm_clones+0x6c>
  40374c:	nop
  403750:	ldp	x29, x30, [sp], #32
  403754:	ret

0000000000403758 <register_tm_clones>:
  403758:	stp	x29, x30, [sp, #-48]!
  40375c:	mov	x29, sp
  403760:	adrp	x0, 41e000 <arg_storage>
  403764:	add	x0, x0, #0x30
  403768:	str	x0, [sp, #40]
  40376c:	ldr	x0, [sp, #40]
  403770:	str	x0, [sp, #40]
  403774:	ldr	x1, [sp, #40]
  403778:	adrp	x0, 41e000 <arg_storage>
  40377c:	add	x0, x0, #0x30
  403780:	sub	x0, x1, x0
  403784:	asr	x0, x0, #3
  403788:	lsr	x1, x0, #63
  40378c:	add	x0, x1, x0
  403790:	asr	x0, x0, #1
  403794:	str	x0, [sp, #32]
  403798:	ldr	x0, [sp, #32]
  40379c:	cmp	x0, #0x0
  4037a0:	b.eq	4037e0 <register_tm_clones+0x88>  // b.none
  4037a4:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  4037a8:	add	x0, x0, #0xc78
  4037ac:	ldr	x0, [x0]
  4037b0:	str	x0, [sp, #24]
  4037b4:	ldr	x0, [sp, #24]
  4037b8:	str	x0, [sp, #24]
  4037bc:	ldr	x0, [sp, #24]
  4037c0:	cmp	x0, #0x0
  4037c4:	b.eq	4037e4 <register_tm_clones+0x8c>  // b.none
  4037c8:	ldr	x2, [sp, #24]
  4037cc:	ldr	x1, [sp, #32]
  4037d0:	adrp	x0, 41e000 <arg_storage>
  4037d4:	add	x0, x0, #0x30
  4037d8:	blr	x2
  4037dc:	b	4037e4 <register_tm_clones+0x8c>
  4037e0:	nop
  4037e4:	ldp	x29, x30, [sp], #48
  4037e8:	ret

00000000004037ec <__do_global_dtors_aux>:
  4037ec:	stp	x29, x30, [sp, #-16]!
  4037f0:	mov	x29, sp
  4037f4:	adrp	x0, 41e000 <arg_storage>
  4037f8:	add	x0, x0, #0x3c
  4037fc:	ldrb	w0, [x0]
  403800:	and	x0, x0, #0xff
  403804:	cmp	x0, #0x0
  403808:	b.ne	403824 <__do_global_dtors_aux+0x38>  // b.any
  40380c:	bl	4036e4 <deregister_tm_clones>
  403810:	adrp	x0, 41e000 <arg_storage>
  403814:	add	x0, x0, #0x3c
  403818:	mov	w1, #0x1                   	// #1
  40381c:	strb	w1, [x0]
  403820:	b	403828 <__do_global_dtors_aux+0x3c>
  403824:	nop
  403828:	ldp	x29, x30, [sp], #16
  40382c:	ret

0000000000403830 <frame_dummy>:
  403830:	stp	x29, x30, [sp, #-16]!
  403834:	mov	x29, sp
  403838:	bl	403758 <register_tm_clones>
  40383c:	nop
  403840:	ldp	x29, x30, [sp], #16
  403844:	ret

0000000000403848 <ALIGN_TO>:
  403848:	sub	sp, sp, #0x10
  40384c:	str	x0, [sp, #8]
  403850:	str	x1, [sp]
  403854:	ldr	x1, [sp, #8]
  403858:	ldr	x0, [sp]
  40385c:	add	x0, x1, x0
  403860:	sub	x1, x0, #0x1
  403864:	ldr	x0, [sp]
  403868:	neg	x0, x0
  40386c:	and	x0, x1, x0
  403870:	add	sp, sp, #0x10
  403874:	ret

0000000000403878 <acl_freep>:
  403878:	stp	x29, x30, [sp, #-32]!
  40387c:	mov	x29, sp
  403880:	str	x0, [sp, #24]
  403884:	ldr	x0, [sp, #24]
  403888:	ldr	x0, [x0]
  40388c:	cmp	x0, #0x0
  403890:	b.eq	4038a0 <acl_freep+0x28>  // b.none
  403894:	ldr	x0, [sp, #24]
  403898:	ldr	x0, [x0]
  40389c:	bl	403550 <acl_free@plt>
  4038a0:	nop
  4038a4:	ldp	x29, x30, [sp], #32
  4038a8:	ret

00000000004038ac <freep>:
  4038ac:	stp	x29, x30, [sp, #-32]!
  4038b0:	mov	x29, sp
  4038b4:	str	x0, [sp, #24]
  4038b8:	ldr	x0, [sp, #24]
  4038bc:	ldr	x0, [x0]
  4038c0:	bl	403520 <free@plt>
  4038c4:	nop
  4038c8:	ldp	x29, x30, [sp], #32
  4038cc:	ret

00000000004038d0 <size_multiply_overflow>:
  4038d0:	sub	sp, sp, #0x10
  4038d4:	str	x0, [sp, #8]
  4038d8:	str	x1, [sp]
  4038dc:	ldr	x0, [sp]
  4038e0:	cmp	x0, #0x0
  4038e4:	cset	w0, ne  // ne = any
  4038e8:	and	w0, w0, #0xff
  4038ec:	and	x0, x0, #0xff
  4038f0:	cmp	x0, #0x0
  4038f4:	b.eq	403938 <size_multiply_overflow+0x68>  // b.none
  4038f8:	mov	x2, #0x0                   	// #0
  4038fc:	ldr	x1, [sp, #8]
  403900:	ldr	x0, [sp]
  403904:	umulh	x0, x1, x0
  403908:	cmp	x0, #0x0
  40390c:	b.eq	403914 <size_multiply_overflow+0x44>  // b.none
  403910:	mov	x2, #0x1                   	// #1
  403914:	mov	x0, x2
  403918:	cmp	x0, #0x0
  40391c:	cset	w0, ne  // ne = any
  403920:	and	w0, w0, #0xff
  403924:	and	x0, x0, #0xff
  403928:	cmp	x0, #0x0
  40392c:	b.eq	403938 <size_multiply_overflow+0x68>  // b.none
  403930:	mov	w0, #0x1                   	// #1
  403934:	b	40393c <size_multiply_overflow+0x6c>
  403938:	mov	w0, #0x0                   	// #0
  40393c:	and	w0, w0, #0x1
  403940:	and	w0, w0, #0xff
  403944:	add	sp, sp, #0x10
  403948:	ret

000000000040394c <save_argc_argv>:
  40394c:	sub	sp, sp, #0x10
  403950:	str	w0, [sp, #12]
  403954:	str	x1, [sp]
  403958:	adrp	x0, 41e000 <arg_storage>
  40395c:	add	x0, x0, #0x38
  403960:	ldr	w1, [sp, #12]
  403964:	str	w1, [x0]
  403968:	adrp	x0, 41e000 <arg_storage>
  40396c:	add	x0, x0, #0x30
  403970:	ldr	x1, [sp]
  403974:	str	x1, [x0]
  403978:	nop
  40397c:	add	sp, sp, #0x10
  403980:	ret

0000000000403984 <copy_bytes>:
  403984:	stp	x29, x30, [sp, #-48]!
  403988:	mov	x29, sp
  40398c:	str	w0, [sp, #44]
  403990:	str	w1, [sp, #40]
  403994:	str	x2, [sp, #32]
  403998:	str	w3, [sp, #28]
  40399c:	mov	x7, #0x0                   	// #0
  4039a0:	mov	x6, #0x0                   	// #0
  4039a4:	mov	x5, #0x0                   	// #0
  4039a8:	mov	x4, #0x0                   	// #0
  4039ac:	ldr	w3, [sp, #28]
  4039b0:	ldr	x2, [sp, #32]
  4039b4:	ldr	w1, [sp, #40]
  4039b8:	ldr	w0, [sp, #44]
  4039bc:	bl	403530 <copy_bytes_full@plt>
  4039c0:	ldp	x29, x30, [sp], #48
  4039c4:	ret

00000000004039c8 <streq_ptr>:
  4039c8:	stp	x29, x30, [sp, #-32]!
  4039cc:	mov	x29, sp
  4039d0:	str	x0, [sp, #24]
  4039d4:	str	x1, [sp, #16]
  4039d8:	ldr	x1, [sp, #16]
  4039dc:	ldr	x0, [sp, #24]
  4039e0:	bl	402e90 <strcmp_ptr@plt>
  4039e4:	cmp	w0, #0x0
  4039e8:	cset	w0, eq  // eq = none
  4039ec:	and	w0, w0, #0xff
  4039f0:	ldp	x29, x30, [sp], #32
  4039f4:	ret

00000000004039f8 <yes_no>:
  4039f8:	sub	sp, sp, #0x10
  4039fc:	strb	w0, [sp, #15]
  403a00:	ldrb	w0, [sp, #15]
  403a04:	cmp	w0, #0x0
  403a08:	b.eq	403a18 <yes_no+0x20>  // b.none
  403a0c:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  403a10:	add	x0, x0, #0xc80
  403a14:	b	403a20 <yes_no+0x28>
  403a18:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  403a1c:	add	x0, x0, #0xc88
  403a20:	add	sp, sp, #0x10
  403a24:	ret

0000000000403a28 <isempty>:
  403a28:	sub	sp, sp, #0x10
  403a2c:	str	x0, [sp, #8]
  403a30:	ldr	x0, [sp, #8]
  403a34:	cmp	x0, #0x0
  403a38:	b.eq	403a4c <isempty+0x24>  // b.none
  403a3c:	ldr	x0, [sp, #8]
  403a40:	ldrb	w0, [x0]
  403a44:	cmp	w0, #0x0
  403a48:	b.ne	403a54 <isempty+0x2c>  // b.any
  403a4c:	mov	w0, #0x1                   	// #1
  403a50:	b	403a58 <isempty+0x30>
  403a54:	mov	w0, #0x0                   	// #0
  403a58:	and	w0, w0, #0x1
  403a5c:	and	w0, w0, #0xff
  403a60:	add	sp, sp, #0x10
  403a64:	ret

0000000000403a68 <startswith>:
  403a68:	stp	x29, x30, [sp, #-48]!
  403a6c:	mov	x29, sp
  403a70:	str	x0, [sp, #24]
  403a74:	str	x1, [sp, #16]
  403a78:	ldr	x0, [sp, #16]
  403a7c:	bl	4035f0 <strlen@plt>
  403a80:	str	x0, [sp, #40]
  403a84:	ldr	x2, [sp, #40]
  403a88:	ldr	x1, [sp, #16]
  403a8c:	ldr	x0, [sp, #24]
  403a90:	bl	403150 <strncmp@plt>
  403a94:	cmp	w0, #0x0
  403a98:	b.ne	403aac <startswith+0x44>  // b.any
  403a9c:	ldr	x1, [sp, #24]
  403aa0:	ldr	x0, [sp, #40]
  403aa4:	add	x0, x1, x0
  403aa8:	b	403ab0 <startswith+0x48>
  403aac:	mov	x0, #0x0                   	// #0
  403ab0:	ldp	x29, x30, [sp], #48
  403ab4:	ret

0000000000403ab8 <xescape>:
  403ab8:	stp	x29, x30, [sp, #-32]!
  403abc:	mov	x29, sp
  403ac0:	str	x0, [sp, #24]
  403ac4:	str	x1, [sp, #16]
  403ac8:	mov	w3, #0x0                   	// #0
  403acc:	mov	x2, #0xffffffffffffffff    	// #-1
  403ad0:	ldr	x1, [sp, #16]
  403ad4:	ldr	x0, [sp, #24]
  403ad8:	bl	4035a0 <xescape_full@plt>
  403adc:	ldp	x29, x30, [sp], #32
  403ae0:	ret

0000000000403ae4 <closep>:
  403ae4:	stp	x29, x30, [sp, #-32]!
  403ae8:	mov	x29, sp
  403aec:	str	x0, [sp, #24]
  403af0:	ldr	x0, [sp, #24]
  403af4:	ldr	w0, [x0]
  403af8:	bl	403060 <safe_close@plt>
  403afc:	nop
  403b00:	ldp	x29, x30, [sp], #32
  403b04:	ret

0000000000403b08 <fclosep>:
  403b08:	stp	x29, x30, [sp, #-32]!
  403b0c:	mov	x29, sp
  403b10:	str	x0, [sp, #24]
  403b14:	ldr	x0, [sp, #24]
  403b18:	ldr	x0, [x0]
  403b1c:	bl	402e20 <safe_fclose@plt>
  403b20:	nop
  403b24:	ldp	x29, x30, [sp], #32
  403b28:	ret

0000000000403b2c <closedirp>:
  403b2c:	stp	x29, x30, [sp, #-32]!
  403b30:	mov	x29, sp
  403b34:	str	x0, [sp, #24]
  403b38:	ldr	x0, [sp, #24]
  403b3c:	ldr	x0, [x0]
  403b40:	cmp	x0, #0x0
  403b44:	b.eq	403b54 <closedirp+0x28>  // b.none
  403b48:	ldr	x0, [sp, #24]
  403b4c:	ldr	x0, [x0]
  403b50:	bl	403130 <closedir@plt>
  403b54:	nop
  403b58:	ldp	x29, x30, [sp], #32
  403b5c:	ret

0000000000403b60 <read_full_file>:
  403b60:	stp	x29, x30, [sp, #-48]!
  403b64:	mov	x29, sp
  403b68:	str	x0, [sp, #40]
  403b6c:	str	x1, [sp, #32]
  403b70:	str	x2, [sp, #24]
  403b74:	ldr	x3, [sp, #24]
  403b78:	ldr	x2, [sp, #32]
  403b7c:	mov	w1, #0x0                   	// #0
  403b80:	ldr	x0, [sp, #40]
  403b84:	bl	4030e0 <read_full_file_full@plt>
  403b88:	ldp	x29, x30, [sp], #48
  403b8c:	ret

0000000000403b90 <read_line>:
  403b90:	stp	x29, x30, [sp, #-48]!
  403b94:	mov	x29, sp
  403b98:	str	x0, [sp, #40]
  403b9c:	str	x1, [sp, #32]
  403ba0:	str	x2, [sp, #24]
  403ba4:	ldr	x3, [sp, #24]
  403ba8:	mov	w2, #0x0                   	// #0
  403bac:	ldr	x1, [sp, #32]
  403bb0:	ldr	x0, [sp, #40]
  403bb4:	bl	402e30 <read_line_full@plt>
  403bb8:	ldp	x29, x30, [sp], #48
  403bbc:	ret

0000000000403bc0 <static_destruct>:
  403bc0:	stp	x29, x30, [sp, #-32]!
  403bc4:	mov	x29, sp
  403bc8:	adrp	x0, 40c000 <_fini+0x13a0>
  403bcc:	add	x0, x0, #0x20
  403bd0:	ldr	x0, [x0]
  403bd4:	cmp	x0, #0x0
  403bd8:	b.eq	403c3c <static_destruct+0x7c>  // b.none
  403bdc:	adrp	x0, 40c000 <_fini+0x13a0>
  403be0:	add	x0, x0, #0x20
  403be4:	ldr	x0, [x0]
  403be8:	mov	x1, #0x8                   	// #8
  403bec:	bl	403848 <ALIGN_TO>
  403bf0:	str	x0, [sp, #24]
  403bf4:	b	403c20 <static_destruct+0x60>
  403bf8:	ldr	x0, [sp, #24]
  403bfc:	ldr	x1, [x0, #8]
  403c00:	ldr	x0, [sp, #24]
  403c04:	ldr	x0, [x0]
  403c08:	blr	x1
  403c0c:	ldr	x0, [sp, #24]
  403c10:	add	x0, x0, #0x10
  403c14:	mov	x1, #0x8                   	// #8
  403c18:	bl	403848 <ALIGN_TO>
  403c1c:	str	x0, [sp, #24]
  403c20:	ldr	x1, [sp, #24]
  403c24:	adrp	x0, 40c000 <_fini+0x13a0>
  403c28:	add	x0, x0, #0x28
  403c2c:	ldr	x0, [x0]
  403c30:	cmp	x1, x0
  403c34:	b.cc	403bf8 <static_destruct+0x38>  // b.lo, b.ul, b.last
  403c38:	b	403c40 <static_destruct+0x80>
  403c3c:	nop
  403c40:	ldp	x29, x30, [sp], #32
  403c44:	ret

0000000000403c48 <safe_atou64>:
  403c48:	stp	x29, x30, [sp, #-32]!
  403c4c:	mov	x29, sp
  403c50:	str	x0, [sp, #24]
  403c54:	str	x1, [sp, #16]
  403c58:	ldr	x1, [sp, #16]
  403c5c:	ldr	x0, [sp, #24]
  403c60:	bl	402f20 <safe_atollu@plt>
  403c64:	ldp	x29, x30, [sp], #32
  403c68:	ret

0000000000403c6c <SIGNAL_VALID>:
  403c6c:	sub	sp, sp, #0x10
  403c70:	str	w0, [sp, #12]
  403c74:	ldr	w0, [sp, #12]
  403c78:	cmp	w0, #0x0
  403c7c:	b.le	403c94 <SIGNAL_VALID+0x28>
  403c80:	ldr	w0, [sp, #12]
  403c84:	cmp	w0, #0x40
  403c88:	b.gt	403c94 <SIGNAL_VALID+0x28>
  403c8c:	mov	w0, #0x1                   	// #1
  403c90:	b	403c98 <SIGNAL_VALID+0x2c>
  403c94:	mov	w0, #0x0                   	// #0
  403c98:	and	w0, w0, #0x1
  403c9c:	and	w0, w0, #0xff
  403ca0:	add	sp, sp, #0x10
  403ca4:	ret

0000000000403ca8 <parse_gid>:
  403ca8:	stp	x29, x30, [sp, #-32]!
  403cac:	mov	x29, sp
  403cb0:	str	x0, [sp, #24]
  403cb4:	str	x1, [sp, #16]
  403cb8:	ldr	x1, [sp, #16]
  403cbc:	ldr	x0, [sp, #24]
  403cc0:	bl	403430 <parse_uid@plt>
  403cc4:	ldp	x29, x30, [sp], #32
  403cc8:	ret

0000000000403ccc <uid_is_dynamic>:
  403ccc:	sub	sp, sp, #0x10
  403cd0:	str	w0, [sp, #12]
  403cd4:	ldr	w1, [sp, #12]
  403cd8:	mov	w0, #0xeeff                	// #61183
  403cdc:	cmp	w1, w0
  403ce0:	b.ls	403cfc <uid_is_dynamic+0x30>  // b.plast
  403ce4:	ldr	w1, [sp, #12]
  403ce8:	mov	w0, #0xffef                	// #65519
  403cec:	cmp	w1, w0
  403cf0:	b.hi	403cfc <uid_is_dynamic+0x30>  // b.pmore
  403cf4:	mov	w0, #0x1                   	// #1
  403cf8:	b	403d00 <uid_is_dynamic+0x34>
  403cfc:	mov	w0, #0x0                   	// #0
  403d00:	and	w0, w0, #0x1
  403d04:	and	w0, w0, #0xff
  403d08:	add	sp, sp, #0x10
  403d0c:	ret

0000000000403d10 <uid_is_system>:
  403d10:	sub	sp, sp, #0x10
  403d14:	str	w0, [sp, #12]
  403d18:	ldr	w0, [sp, #12]
  403d1c:	cmp	w0, #0x3e7
  403d20:	cset	w0, ls  // ls = plast
  403d24:	and	w0, w0, #0xff
  403d28:	add	sp, sp, #0x10
  403d2c:	ret

0000000000403d30 <coredump_storage_to_string>:
  403d30:	sub	sp, sp, #0x10
  403d34:	str	w0, [sp, #12]
  403d38:	ldr	w0, [sp, #12]
  403d3c:	cmp	w0, #0x0
  403d40:	b.lt	403d50 <coredump_storage_to_string+0x20>  // b.tstop
  403d44:	ldr	w0, [sp, #12]
  403d48:	cmp	w0, #0x2
  403d4c:	b.le	403d58 <coredump_storage_to_string+0x28>
  403d50:	mov	x0, #0x0                   	// #0
  403d54:	b	403d68 <coredump_storage_to_string+0x38>
  403d58:	adrp	x0, 40c000 <_fini+0x13a0>
  403d5c:	add	x0, x0, #0x80
  403d60:	ldrsw	x1, [sp, #12]
  403d64:	ldr	x0, [x0, x1, lsl #3]
  403d68:	add	sp, sp, #0x10
  403d6c:	ret

0000000000403d70 <coredump_storage_from_string>:
  403d70:	stp	x29, x30, [sp, #-32]!
  403d74:	mov	x29, sp
  403d78:	str	x0, [sp, #24]
  403d7c:	ldr	x2, [sp, #24]
  403d80:	mov	x1, #0x3                   	// #3
  403d84:	adrp	x0, 40c000 <_fini+0x13a0>
  403d88:	add	x0, x0, #0x80
  403d8c:	bl	403440 <string_table_lookup@plt>
  403d90:	ldp	x29, x30, [sp], #32
  403d94:	ret

0000000000403d98 <config_parse_coredump_storage>:
  403d98:	sub	sp, sp, #0x80
  403d9c:	stp	x29, x30, [sp, #16]
  403da0:	add	x29, sp, #0x10
  403da4:	str	x0, [sp, #88]
  403da8:	str	x1, [sp, #80]
  403dac:	str	w2, [sp, #76]
  403db0:	str	x3, [sp, #64]
  403db4:	str	w4, [sp, #72]
  403db8:	str	x5, [sp, #56]
  403dbc:	str	w6, [sp, #52]
  403dc0:	str	x7, [sp, #40]
  403dc4:	ldr	x0, [sp, #128]
  403dc8:	str	x0, [sp, #120]
  403dcc:	ldr	x0, [sp, #80]
  403dd0:	cmp	x0, #0x0
  403dd4:	cset	w0, eq  // eq = none
  403dd8:	and	w0, w0, #0xff
  403ddc:	and	x0, x0, #0xff
  403de0:	cmp	x0, #0x0
  403de4:	b.eq	403e10 <config_parse_coredump_storage+0x78>  // b.none
  403de8:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  403dec:	add	x1, x0, #0xd73
  403df0:	adrp	x0, 40c000 <_fini+0x13a0>
  403df4:	add	x4, x0, #0x98
  403df8:	mov	w3, #0x88                  	// #136
  403dfc:	mov	x2, x1
  403e00:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  403e04:	add	x1, x0, #0xd90
  403e08:	mov	w0, #0x0                   	// #0
  403e0c:	bl	403080 <log_assert_failed_realm@plt>
  403e10:	ldr	x0, [sp, #56]
  403e14:	cmp	x0, #0x0
  403e18:	cset	w0, eq  // eq = none
  403e1c:	and	w0, w0, #0xff
  403e20:	and	x0, x0, #0xff
  403e24:	cmp	x0, #0x0
  403e28:	b.eq	403e54 <config_parse_coredump_storage+0xbc>  // b.none
  403e2c:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  403e30:	add	x1, x0, #0xd73
  403e34:	adrp	x0, 40c000 <_fini+0x13a0>
  403e38:	add	x4, x0, #0x98
  403e3c:	mov	w3, #0x88                  	// #136
  403e40:	mov	x2, x1
  403e44:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  403e48:	add	x1, x0, #0xda0
  403e4c:	mov	w0, #0x0                   	// #0
  403e50:	bl	403080 <log_assert_failed_realm@plt>
  403e54:	ldr	x0, [sp, #40]
  403e58:	cmp	x0, #0x0
  403e5c:	cset	w0, eq  // eq = none
  403e60:	and	w0, w0, #0xff
  403e64:	and	x0, x0, #0xff
  403e68:	cmp	x0, #0x0
  403e6c:	b.eq	403e98 <config_parse_coredump_storage+0x100>  // b.none
  403e70:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  403e74:	add	x1, x0, #0xd73
  403e78:	adrp	x0, 40c000 <_fini+0x13a0>
  403e7c:	add	x4, x0, #0x98
  403e80:	mov	w3, #0x88                  	// #136
  403e84:	mov	x2, x1
  403e88:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  403e8c:	add	x1, x0, #0xda8
  403e90:	mov	w0, #0x0                   	// #0
  403e94:	bl	403080 <log_assert_failed_realm@plt>
  403e98:	ldr	x0, [sp, #128]
  403e9c:	cmp	x0, #0x0
  403ea0:	cset	w0, eq  // eq = none
  403ea4:	and	w0, w0, #0xff
  403ea8:	and	x0, x0, #0xff
  403eac:	cmp	x0, #0x0
  403eb0:	b.eq	403edc <config_parse_coredump_storage+0x144>  // b.none
  403eb4:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  403eb8:	add	x1, x0, #0xd73
  403ebc:	adrp	x0, 40c000 <_fini+0x13a0>
  403ec0:	add	x4, x0, #0x98
  403ec4:	mov	w3, #0x88                  	// #136
  403ec8:	mov	x2, x1
  403ecc:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  403ed0:	add	x1, x0, #0xdb0
  403ed4:	mov	w0, #0x0                   	// #0
  403ed8:	bl	403080 <log_assert_failed_realm@plt>
  403edc:	ldr	x0, [sp, #40]
  403ee0:	bl	403d70 <coredump_storage_from_string>
  403ee4:	str	w0, [sp, #108]
  403ee8:	ldr	w0, [sp, #108]
  403eec:	cmp	w0, #0x0
  403ef0:	b.ge	403f74 <config_parse_coredump_storage+0x1dc>  // b.tcont
  403ef4:	mov	w0, #0x3                   	// #3
  403ef8:	str	w0, [sp, #112]
  403efc:	str	wzr, [sp, #116]
  403f00:	mov	w0, #0x0                   	// #0
  403f04:	bl	403660 <log_get_max_level_realm@plt>
  403f08:	mov	w1, w0
  403f0c:	ldr	w0, [sp, #112]
  403f10:	and	w0, w0, #0x7
  403f14:	cmp	w1, w0
  403f18:	b.lt	403f64 <config_parse_coredump_storage+0x1cc>  // b.tstop
  403f1c:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  403f20:	add	x1, x0, #0xd73
  403f24:	ldr	x0, [sp, #40]
  403f28:	str	x0, [sp, #8]
  403f2c:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  403f30:	add	x0, x0, #0xdb8
  403f34:	str	x0, [sp]
  403f38:	adrp	x0, 40c000 <_fini+0x13a0>
  403f3c:	add	x7, x0, #0xb8
  403f40:	mov	w6, #0x88                  	// #136
  403f44:	mov	x5, x1
  403f48:	ldr	w4, [sp, #116]
  403f4c:	ldr	w3, [sp, #76]
  403f50:	ldr	x2, [sp, #80]
  403f54:	ldr	w1, [sp, #112]
  403f58:	ldr	x0, [sp, #88]
  403f5c:	bl	403420 <log_syntax_internal@plt>
  403f60:	b	403f6c <config_parse_coredump_storage+0x1d4>
  403f64:	ldr	w0, [sp, #116]
  403f68:	cmp	w0, #0x0
  403f6c:	mov	w0, #0x0                   	// #0
  403f70:	b	403f84 <config_parse_coredump_storage+0x1ec>
  403f74:	ldr	x0, [sp, #120]
  403f78:	ldr	w1, [sp, #108]
  403f7c:	str	w1, [x0]
  403f80:	mov	w0, #0x0                   	// #0
  403f84:	ldp	x29, x30, [sp, #16]
  403f88:	add	sp, sp, #0x80
  403f8c:	ret

0000000000403f90 <parse_config>:
  403f90:	stp	x29, x30, [sp, #-16]!
  403f94:	mov	x29, sp
  403f98:	mov	x6, #0x0                   	// #0
  403f9c:	mov	w5, #0x4                   	// #4
  403fa0:	adrp	x0, 40c000 <_fini+0x13a0>
  403fa4:	add	x4, x0, #0xd8
  403fa8:	adrp	x0, 402000 <_init-0xdd8>
  403fac:	add	x3, x0, #0xfd0
  403fb0:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  403fb4:	add	x2, x0, #0xde8
  403fb8:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  403fbc:	add	x1, x0, #0xdf8
  403fc0:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  403fc4:	add	x0, x0, #0xe98
  403fc8:	bl	403570 <config_parse_many_nulstr@plt>
  403fcc:	ldp	x29, x30, [sp], #16
  403fd0:	ret

0000000000403fd4 <storage_size_max>:
  403fd4:	stp	x29, x30, [sp, #-16]!
  403fd8:	mov	x29, sp
  403fdc:	adrp	x0, 41e000 <arg_storage>
  403fe0:	add	x0, x0, #0x0
  403fe4:	ldr	w0, [x0]
  403fe8:	cmp	w0, #0x1
  403fec:	b.ne	404000 <storage_size_max+0x2c>  // b.any
  403ff0:	adrp	x0, 41e000 <arg_storage>
  403ff4:	add	x0, x0, #0x10
  403ff8:	ldr	x0, [x0]
  403ffc:	b	404074 <storage_size_max+0xa0>
  404000:	adrp	x0, 41e000 <arg_storage>
  404004:	add	x0, x0, #0x0
  404008:	ldr	w0, [x0]
  40400c:	cmp	w0, #0x2
  404010:	b.ne	404024 <storage_size_max+0x50>  // b.any
  404014:	adrp	x0, 41e000 <arg_storage>
  404018:	add	x0, x0, #0x18
  40401c:	ldr	x0, [x0]
  404020:	b	404074 <storage_size_max+0xa0>
  404024:	adrp	x0, 41e000 <arg_storage>
  404028:	add	x0, x0, #0x0
  40402c:	ldr	w0, [x0]
  404030:	cmp	w0, #0x0
  404034:	cset	w0, ne  // ne = any
  404038:	and	w0, w0, #0xff
  40403c:	and	x0, x0, #0xff
  404040:	cmp	x0, #0x0
  404044:	b.eq	404070 <storage_size_max+0x9c>  // b.none
  404048:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  40404c:	add	x1, x0, #0xd73
  404050:	adrp	x0, 40c000 <_fini+0x13a0>
  404054:	add	x4, x0, #0x218
  404058:	mov	w3, #0xaa                  	// #170
  40405c:	mov	x2, x1
  404060:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  404064:	add	x1, x0, #0xeb8
  404068:	mov	w0, #0x0                   	// #0
  40406c:	bl	403080 <log_assert_failed_realm@plt>
  404070:	mov	x0, #0x0                   	// #0
  404074:	ldp	x29, x30, [sp], #16
  404078:	ret

000000000040407c <fix_acl>:
  40407c:	stp	x29, x30, [sp, #-144]!
  404080:	mov	x29, sp
  404084:	str	x19, [sp, #16]
  404088:	str	w0, [sp, #44]
  40408c:	str	w1, [sp, #40]
  404090:	adrp	x0, 41d000 <__FRAME_END__+0xfdec>
  404094:	add	x0, x0, #0x948
  404098:	ldr	x1, [x0]
  40409c:	str	x1, [sp, #136]
  4040a0:	mov	x1, #0x0                   	// #0
  4040a4:	str	xzr, [sp, #112]
  4040a8:	ldr	w0, [sp, #44]
  4040ac:	lsr	w0, w0, #31
  4040b0:	and	w0, w0, #0xff
  4040b4:	and	x0, x0, #0xff
  4040b8:	cmp	x0, #0x0
  4040bc:	b.eq	4040e8 <fix_acl+0x6c>  // b.none
  4040c0:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  4040c4:	add	x1, x0, #0xd73
  4040c8:	adrp	x0, 40c000 <_fini+0x13a0>
  4040cc:	add	x4, x0, #0x230
  4040d0:	mov	w3, #0xb6                  	// #182
  4040d4:	mov	x2, x1
  4040d8:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  4040dc:	add	x1, x0, #0xee0
  4040e0:	mov	w0, #0x0                   	// #0
  4040e4:	bl	403080 <log_assert_failed_realm@plt>
  4040e8:	ldr	w0, [sp, #40]
  4040ec:	bl	403d10 <uid_is_system>
  4040f0:	and	w0, w0, #0xff
  4040f4:	cmp	w0, #0x0
  4040f8:	b.ne	404120 <fix_acl+0xa4>  // b.any
  4040fc:	ldr	w0, [sp, #40]
  404100:	bl	403ccc <uid_is_dynamic>
  404104:	and	w0, w0, #0xff
  404108:	cmp	w0, #0x0
  40410c:	b.ne	404120 <fix_acl+0xa4>  // b.any
  404110:	ldr	w1, [sp, #40]
  404114:	mov	w0, #0xfffe                	// #65534
  404118:	cmp	w1, w0
  40411c:	b.ne	404128 <fix_acl+0xac>  // b.any
  404120:	mov	w19, #0x0                   	// #0
  404124:	b	4044a4 <fix_acl+0x428>
  404128:	ldr	w0, [sp, #44]
  40412c:	bl	402e70 <acl_get_fd@plt>
  404130:	str	x0, [sp, #112]
  404134:	ldr	x0, [sp, #112]
  404138:	cmp	x0, #0x0
  40413c:	b.ne	4041d0 <fix_acl+0x154>  // b.any
  404140:	mov	w0, #0x3                   	// #3
  404144:	str	w0, [sp, #100]
  404148:	bl	403220 <__errno_location@plt>
  40414c:	ldr	w0, [x0]
  404150:	str	w0, [sp, #104]
  404154:	str	wzr, [sp, #108]
  404158:	ldr	w0, [sp, #108]
  40415c:	bl	403660 <log_get_max_level_realm@plt>
  404160:	mov	w1, w0
  404164:	ldr	w0, [sp, #100]
  404168:	and	w0, w0, #0x7
  40416c:	cmp	w1, w0
  404170:	b.lt	4041b8 <fix_acl+0x13c>  // b.tstop
  404174:	ldr	w0, [sp, #108]
  404178:	lsl	w1, w0, #10
  40417c:	ldr	w0, [sp, #100]
  404180:	orr	w6, w1, w0
  404184:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  404188:	add	x1, x0, #0xd73
  40418c:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  404190:	add	x5, x0, #0xee8
  404194:	adrp	x0, 40c000 <_fini+0x13a0>
  404198:	add	x4, x0, #0x238
  40419c:	mov	w3, #0xc0                  	// #192
  4041a0:	mov	x2, x1
  4041a4:	ldr	w1, [sp, #104]
  4041a8:	mov	w0, w6
  4041ac:	bl	4033b0 <log_internal_realm@plt>
  4041b0:	mov	w19, w0
  4041b4:	b	4044a4 <fix_acl+0x428>
  4041b8:	ldr	w0, [sp, #104]
  4041bc:	cmp	w0, #0x0
  4041c0:	cneg	w0, w0, lt  // lt = tstop
  4041c4:	and	w0, w0, #0xff
  4041c8:	neg	w19, w0
  4041cc:	b	4044a4 <fix_acl+0x428>
  4041d0:	add	x1, sp, #0x78
  4041d4:	add	x0, sp, #0x70
  4041d8:	bl	403670 <acl_create_entry@plt>
  4041dc:	cmp	w0, #0x0
  4041e0:	b.lt	40420c <fix_acl+0x190>  // b.tstop
  4041e4:	ldr	x0, [sp, #120]
  4041e8:	mov	w1, #0x2                   	// #2
  4041ec:	bl	4033c0 <acl_set_tag_type@plt>
  4041f0:	cmp	w0, #0x0
  4041f4:	b.lt	40420c <fix_acl+0x190>  // b.tstop
  4041f8:	ldr	x0, [sp, #120]
  4041fc:	add	x1, sp, #0x28
  404200:	bl	4030c0 <acl_set_qualifier@plt>
  404204:	cmp	w0, #0x0
  404208:	b.ge	40429c <fix_acl+0x220>  // b.tcont
  40420c:	mov	w0, #0x3                   	// #3
  404210:	str	w0, [sp, #88]
  404214:	bl	403220 <__errno_location@plt>
  404218:	ldr	w0, [x0]
  40421c:	str	w0, [sp, #92]
  404220:	str	wzr, [sp, #96]
  404224:	ldr	w0, [sp, #96]
  404228:	bl	403660 <log_get_max_level_realm@plt>
  40422c:	mov	w1, w0
  404230:	ldr	w0, [sp, #88]
  404234:	and	w0, w0, #0x7
  404238:	cmp	w1, w0
  40423c:	b.lt	404284 <fix_acl+0x208>  // b.tstop
  404240:	ldr	w0, [sp, #96]
  404244:	lsl	w1, w0, #10
  404248:	ldr	w0, [sp, #88]
  40424c:	orr	w6, w1, w0
  404250:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  404254:	add	x1, x0, #0xd73
  404258:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  40425c:	add	x5, x0, #0xf00
  404260:	adrp	x0, 40c000 <_fini+0x13a0>
  404264:	add	x4, x0, #0x238
  404268:	mov	w3, #0xc5                  	// #197
  40426c:	mov	x2, x1
  404270:	ldr	w1, [sp, #92]
  404274:	mov	w0, w6
  404278:	bl	4033b0 <log_internal_realm@plt>
  40427c:	mov	w19, w0
  404280:	b	4044a4 <fix_acl+0x428>
  404284:	ldr	w0, [sp, #92]
  404288:	cmp	w0, #0x0
  40428c:	cneg	w0, w0, lt  // lt = tstop
  404290:	and	w0, w0, #0xff
  404294:	neg	w19, w0
  404298:	b	4044a4 <fix_acl+0x428>
  40429c:	ldr	x0, [sp, #120]
  4042a0:	add	x1, sp, #0x80
  4042a4:	bl	402f80 <acl_get_permset@plt>
  4042a8:	cmp	w0, #0x0
  4042ac:	b.lt	4042c4 <fix_acl+0x248>  // b.tstop
  4042b0:	ldr	x0, [sp, #128]
  4042b4:	mov	w1, #0x4                   	// #4
  4042b8:	bl	403160 <acl_add_perm@plt>
  4042bc:	cmp	w0, #0x0
  4042c0:	b.ge	404354 <fix_acl+0x2d8>  // b.tcont
  4042c4:	mov	w0, #0x4                   	// #4
  4042c8:	str	w0, [sp, #76]
  4042cc:	bl	403220 <__errno_location@plt>
  4042d0:	ldr	w0, [x0]
  4042d4:	str	w0, [sp, #80]
  4042d8:	str	wzr, [sp, #84]
  4042dc:	ldr	w0, [sp, #84]
  4042e0:	bl	403660 <log_get_max_level_realm@plt>
  4042e4:	mov	w1, w0
  4042e8:	ldr	w0, [sp, #76]
  4042ec:	and	w0, w0, #0x7
  4042f0:	cmp	w1, w0
  4042f4:	b.lt	40433c <fix_acl+0x2c0>  // b.tstop
  4042f8:	ldr	w0, [sp, #84]
  4042fc:	lsl	w1, w0, #10
  404300:	ldr	w0, [sp, #76]
  404304:	orr	w6, w1, w0
  404308:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  40430c:	add	x1, x0, #0xd73
  404310:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  404314:	add	x5, x0, #0xf00
  404318:	adrp	x0, 40c000 <_fini+0x13a0>
  40431c:	add	x4, x0, #0x238
  404320:	mov	w3, #0xc9                  	// #201
  404324:	mov	x2, x1
  404328:	ldr	w1, [sp, #80]
  40432c:	mov	w0, w6
  404330:	bl	4033b0 <log_internal_realm@plt>
  404334:	mov	w19, w0
  404338:	b	4044a4 <fix_acl+0x428>
  40433c:	ldr	w0, [sp, #80]
  404340:	cmp	w0, #0x0
  404344:	cneg	w0, w0, lt  // lt = tstop
  404348:	and	w0, w0, #0xff
  40434c:	neg	w19, w0
  404350:	b	4044a4 <fix_acl+0x428>
  404354:	add	x0, sp, #0x70
  404358:	bl	403110 <calc_acl_mask_if_needed@plt>
  40435c:	str	w0, [sp, #48]
  404360:	ldr	w0, [sp, #48]
  404364:	cmp	w0, #0x0
  404368:	b.ge	4043f8 <fix_acl+0x37c>  // b.tcont
  40436c:	mov	w0, #0x4                   	// #4
  404370:	str	w0, [sp, #64]
  404374:	ldr	w0, [sp, #48]
  404378:	str	w0, [sp, #68]
  40437c:	str	wzr, [sp, #72]
  404380:	ldr	w0, [sp, #72]
  404384:	bl	403660 <log_get_max_level_realm@plt>
  404388:	mov	w1, w0
  40438c:	ldr	w0, [sp, #64]
  404390:	and	w0, w0, #0x7
  404394:	cmp	w1, w0
  404398:	b.lt	4043e0 <fix_acl+0x364>  // b.tstop
  40439c:	ldr	w0, [sp, #72]
  4043a0:	lsl	w1, w0, #10
  4043a4:	ldr	w0, [sp, #64]
  4043a8:	orr	w6, w1, w0
  4043ac:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  4043b0:	add	x1, x0, #0xd73
  4043b4:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  4043b8:	add	x5, x0, #0xf00
  4043bc:	adrp	x0, 40c000 <_fini+0x13a0>
  4043c0:	add	x4, x0, #0x238
  4043c4:	mov	w3, #0xcd                  	// #205
  4043c8:	mov	x2, x1
  4043cc:	ldr	w1, [sp, #68]
  4043d0:	mov	w0, w6
  4043d4:	bl	4033b0 <log_internal_realm@plt>
  4043d8:	mov	w19, w0
  4043dc:	b	4044a4 <fix_acl+0x428>
  4043e0:	ldr	w0, [sp, #68]
  4043e4:	cmp	w0, #0x0
  4043e8:	cneg	w0, w0, lt  // lt = tstop
  4043ec:	and	w0, w0, #0xff
  4043f0:	neg	w19, w0
  4043f4:	b	4044a4 <fix_acl+0x428>
  4043f8:	ldr	x0, [sp, #112]
  4043fc:	mov	x1, x0
  404400:	ldr	w0, [sp, #44]
  404404:	bl	403650 <acl_set_fd@plt>
  404408:	cmp	w0, #0x0
  40440c:	b.ge	4044a0 <fix_acl+0x424>  // b.tcont
  404410:	mov	w0, #0x3                   	// #3
  404414:	str	w0, [sp, #52]
  404418:	bl	403220 <__errno_location@plt>
  40441c:	ldr	w0, [x0]
  404420:	str	w0, [sp, #56]
  404424:	str	wzr, [sp, #60]
  404428:	ldr	w0, [sp, #60]
  40442c:	bl	403660 <log_get_max_level_realm@plt>
  404430:	mov	w1, w0
  404434:	ldr	w0, [sp, #52]
  404438:	and	w0, w0, #0x7
  40443c:	cmp	w1, w0
  404440:	b.lt	404488 <fix_acl+0x40c>  // b.tstop
  404444:	ldr	w0, [sp, #60]
  404448:	lsl	w1, w0, #10
  40444c:	ldr	w0, [sp, #52]
  404450:	orr	w6, w1, w0
  404454:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  404458:	add	x1, x0, #0xd73
  40445c:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  404460:	add	x5, x0, #0xf18
  404464:	adrp	x0, 40c000 <_fini+0x13a0>
  404468:	add	x4, x0, #0x238
  40446c:	mov	w3, #0xd0                  	// #208
  404470:	mov	x2, x1
  404474:	ldr	w1, [sp, #56]
  404478:	mov	w0, w6
  40447c:	bl	4033b0 <log_internal_realm@plt>
  404480:	mov	w19, w0
  404484:	b	4044a4 <fix_acl+0x428>
  404488:	ldr	w0, [sp, #56]
  40448c:	cmp	w0, #0x0
  404490:	cneg	w0, w0, lt  // lt = tstop
  404494:	and	w0, w0, #0xff
  404498:	neg	w19, w0
  40449c:	b	4044a4 <fix_acl+0x428>
  4044a0:	mov	w19, #0x0                   	// #0
  4044a4:	add	x0, sp, #0x70
  4044a8:	bl	403878 <acl_freep>
  4044ac:	mov	w1, w19
  4044b0:	adrp	x0, 41d000 <__FRAME_END__+0xfdec>
  4044b4:	add	x0, x0, #0x948
  4044b8:	ldr	x2, [sp, #136]
  4044bc:	ldr	x0, [x0]
  4044c0:	eor	x0, x2, x0
  4044c4:	cmp	x0, #0x0
  4044c8:	b.eq	4044d0 <fix_acl+0x454>  // b.none
  4044cc:	bl	4032b0 <__stack_chk_fail@plt>
  4044d0:	mov	w0, w1
  4044d4:	ldr	x19, [sp, #16]
  4044d8:	ldp	x29, x30, [sp], #144
  4044dc:	ret

00000000004044e0 <fix_xattr>:
  4044e0:	stp	x29, x30, [sp, #-64]!
  4044e4:	mov	x29, sp
  4044e8:	stp	x19, x20, [sp, #16]
  4044ec:	str	w0, [sp, #44]
  4044f0:	str	x1, [sp, #32]
  4044f4:	str	wzr, [sp, #52]
  4044f8:	ldr	w0, [sp, #44]
  4044fc:	lsr	w0, w0, #31
  404500:	and	w0, w0, #0xff
  404504:	and	x0, x0, #0xff
  404508:	cmp	x0, #0x0
  40450c:	b.eq	404538 <fix_xattr+0x58>  // b.none
  404510:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  404514:	add	x1, x0, #0xd73
  404518:	adrp	x0, 40c000 <_fini+0x13a0>
  40451c:	add	x4, x0, #0x240
  404520:	mov	w3, #0xe7                  	// #231
  404524:	mov	x2, x1
  404528:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  40452c:	add	x1, x0, #0xee0
  404530:	mov	w0, #0x0                   	// #0
  404534:	bl	403080 <log_assert_failed_realm@plt>
  404538:	str	wzr, [sp, #56]
  40453c:	b	4045f8 <fix_xattr+0x118>
  404540:	ldr	x0, [sp, #32]
  404544:	ldr	w1, [sp, #56]
  404548:	ldr	x0, [x0, x1, lsl #3]
  40454c:	bl	403a28 <isempty>
  404550:	and	w0, w0, #0xff
  404554:	cmp	w0, #0x0
  404558:	b.ne	4045e8 <fix_xattr+0x108>  // b.any
  40455c:	adrp	x0, 40c000 <_fini+0x13a0>
  404560:	add	x0, x0, #0x250
  404564:	ldr	w1, [sp, #56]
  404568:	ldr	x0, [x0, x1, lsl #3]
  40456c:	cmp	x0, #0x0
  404570:	b.eq	4045e8 <fix_xattr+0x108>  // b.none
  404574:	adrp	x0, 40c000 <_fini+0x13a0>
  404578:	add	x0, x0, #0x250
  40457c:	ldr	w1, [sp, #56]
  404580:	ldr	x19, [x0, x1, lsl #3]
  404584:	ldr	x0, [sp, #32]
  404588:	ldr	w1, [sp, #56]
  40458c:	ldr	x20, [x0, x1, lsl #3]
  404590:	ldr	x0, [sp, #32]
  404594:	ldr	w1, [sp, #56]
  404598:	ldr	x0, [x0, x1, lsl #3]
  40459c:	bl	4035f0 <strlen@plt>
  4045a0:	mov	w4, #0x1                   	// #1
  4045a4:	mov	x3, x0
  4045a8:	mov	x2, x20
  4045ac:	mov	x1, x19
  4045b0:	ldr	w0, [sp, #44]
  4045b4:	bl	402e80 <fsetxattr@plt>
  4045b8:	str	w0, [sp, #60]
  4045bc:	ldr	w0, [sp, #60]
  4045c0:	cmp	w0, #0x0
  4045c4:	b.ge	4045ec <fix_xattr+0x10c>  // b.tcont
  4045c8:	ldr	w0, [sp, #52]
  4045cc:	cmp	w0, #0x0
  4045d0:	b.ne	4045ec <fix_xattr+0x10c>  // b.any
  4045d4:	bl	403220 <__errno_location@plt>
  4045d8:	ldr	w0, [x0]
  4045dc:	neg	w0, w0
  4045e0:	str	w0, [sp, #52]
  4045e4:	b	4045ec <fix_xattr+0x10c>
  4045e8:	nop
  4045ec:	ldr	w0, [sp, #56]
  4045f0:	add	w0, w0, #0x1
  4045f4:	str	w0, [sp, #56]
  4045f8:	ldr	w0, [sp, #56]
  4045fc:	cmp	w0, #0x9
  404600:	b.ls	404540 <fix_xattr+0x60>  // b.plast
  404604:	ldr	w0, [sp, #52]
  404608:	ldp	x19, x20, [sp, #16]
  40460c:	ldp	x29, x30, [sp], #64
  404610:	ret

0000000000404614 <coredump_tmpfile_name>:
  404614:	sub	sp, sp, #0x10
  404618:	str	x0, [sp, #8]
  40461c:	ldr	x0, [sp, #8]
  404620:	cmp	x0, #0x0
  404624:	b.eq	404630 <coredump_tmpfile_name+0x1c>  // b.none
  404628:	ldr	x0, [sp, #8]
  40462c:	b	404638 <coredump_tmpfile_name+0x24>
  404630:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  404634:	add	x0, x0, #0xf30
  404638:	add	sp, sp, #0x10
  40463c:	ret

0000000000404640 <fix_permissions>:
  404640:	stp	x29, x30, [sp, #-96]!
  404644:	mov	x29, sp
  404648:	stp	x19, x20, [sp, #16]
  40464c:	str	w0, [sp, #60]
  404650:	str	x1, [sp, #48]
  404654:	str	x2, [sp, #40]
  404658:	str	x3, [sp, #32]
  40465c:	str	w4, [sp, #56]
  404660:	ldr	w0, [sp, #60]
  404664:	lsr	w0, w0, #31
  404668:	and	w0, w0, #0xff
  40466c:	and	x0, x0, #0xff
  404670:	cmp	x0, #0x0
  404674:	b.eq	4046a0 <fix_permissions+0x60>  // b.none
  404678:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  40467c:	add	x1, x0, #0xd73
  404680:	adrp	x0, 40c000 <_fini+0x13a0>
  404684:	add	x4, x0, #0x2a0
  404688:	mov	w3, #0x109                 	// #265
  40468c:	mov	x2, x1
  404690:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  404694:	add	x1, x0, #0xee0
  404698:	mov	w0, #0x0                   	// #0
  40469c:	bl	403080 <log_assert_failed_realm@plt>
  4046a0:	ldr	x0, [sp, #40]
  4046a4:	cmp	x0, #0x0
  4046a8:	cset	w0, eq  // eq = none
  4046ac:	and	w0, w0, #0xff
  4046b0:	and	x0, x0, #0xff
  4046b4:	cmp	x0, #0x0
  4046b8:	b.eq	4046e4 <fix_permissions+0xa4>  // b.none
  4046bc:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  4046c0:	add	x1, x0, #0xd73
  4046c4:	adrp	x0, 40c000 <_fini+0x13a0>
  4046c8:	add	x4, x0, #0x2a0
  4046cc:	mov	w3, #0x10a                 	// #266
  4046d0:	mov	x2, x1
  4046d4:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  4046d8:	add	x1, x0, #0xf50
  4046dc:	mov	w0, #0x0                   	// #0
  4046e0:	bl	403080 <log_assert_failed_realm@plt>
  4046e4:	ldr	x0, [sp, #32]
  4046e8:	cmp	x0, #0x0
  4046ec:	cset	w0, eq  // eq = none
  4046f0:	and	w0, w0, #0xff
  4046f4:	and	x0, x0, #0xff
  4046f8:	cmp	x0, #0x0
  4046fc:	b.eq	404728 <fix_permissions+0xe8>  // b.none
  404700:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  404704:	add	x1, x0, #0xd73
  404708:	adrp	x0, 40c000 <_fini+0x13a0>
  40470c:	add	x4, x0, #0x2a0
  404710:	mov	w3, #0x10b                 	// #267
  404714:	mov	x2, x1
  404718:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  40471c:	add	x1, x0, #0xf58
  404720:	mov	w0, #0x0                   	// #0
  404724:	bl	403080 <log_assert_failed_realm@plt>
  404728:	mov	w1, #0x1a0                 	// #416
  40472c:	ldr	w0, [sp, #60]
  404730:	bl	402ea0 <fchmod@plt>
  404734:	ldr	w1, [sp, #56]
  404738:	ldr	w0, [sp, #60]
  40473c:	bl	40407c <fix_acl>
  404740:	ldr	x1, [sp, #32]
  404744:	ldr	w0, [sp, #60]
  404748:	bl	4044e0 <fix_xattr>
  40474c:	ldr	w0, [sp, #60]
  404750:	bl	403020 <fsync@plt>
  404754:	cmp	w0, #0x0
  404758:	b.ge	4047f4 <fix_permissions+0x1b4>  // b.tcont
  40475c:	mov	w0, #0x3                   	// #3
  404760:	str	w0, [sp, #84]
  404764:	bl	403220 <__errno_location@plt>
  404768:	ldr	w0, [x0]
  40476c:	str	w0, [sp, #88]
  404770:	str	wzr, [sp, #92]
  404774:	ldr	w0, [sp, #92]
  404778:	bl	403660 <log_get_max_level_realm@plt>
  40477c:	mov	w1, w0
  404780:	ldr	w0, [sp, #84]
  404784:	and	w0, w0, #0x7
  404788:	cmp	w1, w0
  40478c:	b.lt	4047dc <fix_permissions+0x19c>  // b.tstop
  404790:	ldr	w0, [sp, #92]
  404794:	lsl	w1, w0, #10
  404798:	ldr	w0, [sp, #84]
  40479c:	orr	w19, w1, w0
  4047a0:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  4047a4:	add	x20, x0, #0xd73
  4047a8:	ldr	x0, [sp, #48]
  4047ac:	bl	404614 <coredump_tmpfile_name>
  4047b0:	mov	x6, x0
  4047b4:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  4047b8:	add	x5, x0, #0xf60
  4047bc:	adrp	x0, 40c000 <_fini+0x13a0>
  4047c0:	add	x4, x0, #0x2b0
  4047c4:	mov	w3, #0x113                 	// #275
  4047c8:	mov	x2, x20
  4047cc:	ldr	w1, [sp, #88]
  4047d0:	mov	w0, w19
  4047d4:	bl	4033b0 <log_internal_realm@plt>
  4047d8:	b	4048ac <fix_permissions+0x26c>
  4047dc:	ldr	w0, [sp, #88]
  4047e0:	cmp	w0, #0x0
  4047e4:	cneg	w0, w0, lt  // lt = tstop
  4047e8:	and	w0, w0, #0xff
  4047ec:	neg	w0, w0
  4047f0:	b	4048ac <fix_permissions+0x26c>
  4047f4:	ldr	w0, [sp, #60]
  4047f8:	bl	403600 <fsync_directory_of_file@plt>
  4047fc:	ldr	x2, [sp, #40]
  404800:	ldr	x1, [sp, #48]
  404804:	ldr	w0, [sp, #60]
  404808:	bl	4030d0 <link_tmpfile@plt>
  40480c:	str	w0, [sp, #68]
  404810:	ldr	w0, [sp, #68]
  404814:	cmp	w0, #0x0
  404818:	b.ge	4048a8 <fix_permissions+0x268>  // b.tcont
  40481c:	mov	w0, #0x3                   	// #3
  404820:	str	w0, [sp, #72]
  404824:	ldr	w0, [sp, #68]
  404828:	str	w0, [sp, #76]
  40482c:	str	wzr, [sp, #80]
  404830:	ldr	w0, [sp, #80]
  404834:	bl	403660 <log_get_max_level_realm@plt>
  404838:	mov	w1, w0
  40483c:	ldr	w0, [sp, #72]
  404840:	and	w0, w0, #0x7
  404844:	cmp	w1, w0
  404848:	b.lt	404890 <fix_permissions+0x250>  // b.tstop
  40484c:	ldr	w0, [sp, #80]
  404850:	lsl	w1, w0, #10
  404854:	ldr	w0, [sp, #72]
  404858:	orr	w7, w1, w0
  40485c:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  404860:	add	x1, x0, #0xd73
  404864:	ldr	x6, [sp, #40]
  404868:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  40486c:	add	x5, x0, #0xf80
  404870:	adrp	x0, 40c000 <_fini+0x13a0>
  404874:	add	x4, x0, #0x2b0
  404878:	mov	w3, #0x119                 	// #281
  40487c:	mov	x2, x1
  404880:	ldr	w1, [sp, #76]
  404884:	mov	w0, w7
  404888:	bl	4033b0 <log_internal_realm@plt>
  40488c:	b	4048ac <fix_permissions+0x26c>
  404890:	ldr	w0, [sp, #76]
  404894:	cmp	w0, #0x0
  404898:	cneg	w0, w0, lt  // lt = tstop
  40489c:	and	w0, w0, #0xff
  4048a0:	neg	w0, w0
  4048a4:	b	4048ac <fix_permissions+0x26c>
  4048a8:	mov	w0, #0x0                   	// #0
  4048ac:	ldp	x19, x20, [sp, #16]
  4048b0:	ldp	x29, x30, [sp], #96
  4048b4:	ret

00000000004048b8 <maybe_remove_external_coredump>:
  4048b8:	stp	x29, x30, [sp, #-48]!
  4048bc:	mov	x29, sp
  4048c0:	str	x0, [sp, #24]
  4048c4:	str	x1, [sp, #16]
  4048c8:	adrp	x0, 41e000 <arg_storage>
  4048cc:	add	x0, x0, #0x0
  4048d0:	ldr	w0, [x0]
  4048d4:	cmp	w0, #0x1
  4048d8:	b.ne	4048fc <maybe_remove_external_coredump+0x44>  // b.any
  4048dc:	adrp	x0, 41e000 <arg_storage>
  4048e0:	add	x0, x0, #0x10
  4048e4:	ldr	x0, [x0]
  4048e8:	ldr	x1, [sp, #16]
  4048ec:	cmp	x1, x0
  4048f0:	b.hi	4048fc <maybe_remove_external_coredump+0x44>  // b.pmore
  4048f4:	mov	w0, #0x0                   	// #0
  4048f8:	b	4049c4 <maybe_remove_external_coredump+0x10c>
  4048fc:	ldr	x0, [sp, #24]
  404900:	cmp	x0, #0x0
  404904:	b.ne	404910 <maybe_remove_external_coredump+0x58>  // b.any
  404908:	mov	w0, #0x1                   	// #1
  40490c:	b	4049c4 <maybe_remove_external_coredump+0x10c>
  404910:	ldr	x0, [sp, #24]
  404914:	bl	402e40 <unlink@plt>
  404918:	cmp	w0, #0x0
  40491c:	b.ge	4049c0 <maybe_remove_external_coredump+0x108>  // b.tcont
  404920:	bl	403220 <__errno_location@plt>
  404924:	ldr	w0, [x0]
  404928:	cmp	w0, #0x2
  40492c:	b.eq	4049c0 <maybe_remove_external_coredump+0x108>  // b.none
  404930:	mov	w0, #0x3                   	// #3
  404934:	str	w0, [sp, #36]
  404938:	bl	403220 <__errno_location@plt>
  40493c:	ldr	w0, [x0]
  404940:	str	w0, [sp, #40]
  404944:	str	wzr, [sp, #44]
  404948:	ldr	w0, [sp, #44]
  40494c:	bl	403660 <log_get_max_level_realm@plt>
  404950:	mov	w1, w0
  404954:	ldr	w0, [sp, #36]
  404958:	and	w0, w0, #0x7
  40495c:	cmp	w1, w0
  404960:	b.lt	4049a8 <maybe_remove_external_coredump+0xf0>  // b.tstop
  404964:	ldr	w0, [sp, #44]
  404968:	lsl	w1, w0, #10
  40496c:	ldr	w0, [sp, #36]
  404970:	orr	w7, w1, w0
  404974:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  404978:	add	x1, x0, #0xd73
  40497c:	ldr	x6, [sp, #24]
  404980:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  404984:	add	x5, x0, #0xfb0
  404988:	adrp	x0, 40c000 <_fini+0x13a0>
  40498c:	add	x4, x0, #0x2c0
  404990:	mov	w3, #0x12a                 	// #298
  404994:	mov	x2, x1
  404998:	ldr	w1, [sp, #40]
  40499c:	mov	w0, w7
  4049a0:	bl	4033b0 <log_internal_realm@plt>
  4049a4:	b	4049c4 <maybe_remove_external_coredump+0x10c>
  4049a8:	ldr	w0, [sp, #40]
  4049ac:	cmp	w0, #0x0
  4049b0:	cneg	w0, w0, lt  // lt = tstop
  4049b4:	and	w0, w0, #0xff
  4049b8:	neg	w0, w0
  4049bc:	b	4049c4 <maybe_remove_external_coredump+0x10c>
  4049c0:	mov	w0, #0x1                   	// #1
  4049c4:	ldp	x29, x30, [sp], #48
  4049c8:	ret

00000000004049cc <make_filename>:
  4049cc:	sub	sp, sp, #0xe0
  4049d0:	stp	x29, x30, [sp, #112]
  4049d4:	add	x29, sp, #0x70
  4049d8:	str	x19, [sp, #128]
  4049dc:	str	x0, [sp, #152]
  4049e0:	str	x1, [sp, #144]
  4049e4:	adrp	x0, 41d000 <__FRAME_END__+0xfdec>
  4049e8:	add	x0, x0, #0x948
  4049ec:	ldr	x1, [x0]
  4049f0:	str	x1, [sp, #216]
  4049f4:	mov	x1, #0x0                   	// #0
  4049f8:	str	xzr, [sp, #168]
  4049fc:	str	xzr, [sp, #176]
  404a00:	str	xzr, [sp, #184]
  404a04:	str	xzr, [sp, #192]
  404a08:	stp	xzr, xzr, [sp, #200]
  404a0c:	ldr	x0, [sp, #152]
  404a10:	cmp	x0, #0x0
  404a14:	cset	w0, eq  // eq = none
  404a18:	and	w0, w0, #0xff
  404a1c:	and	x0, x0, #0xff
  404a20:	cmp	x0, #0x0
  404a24:	b.eq	404a50 <make_filename+0x84>  // b.none
  404a28:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  404a2c:	add	x1, x0, #0xd73
  404a30:	adrp	x0, 40c000 <_fini+0x13a0>
  404a34:	add	x4, x0, #0x2e0
  404a38:	mov	w3, #0x134                 	// #308
  404a3c:	mov	x2, x1
  404a40:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  404a44:	add	x1, x0, #0xf58
  404a48:	mov	w0, #0x0                   	// #0
  404a4c:	bl	403080 <log_assert_failed_realm@plt>
  404a50:	ldr	x0, [sp, #152]
  404a54:	ldr	x2, [x0, #56]
  404a58:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  404a5c:	add	x1, x0, #0xfc8
  404a60:	mov	x0, x2
  404a64:	bl	403ab8 <xescape>
  404a68:	str	x0, [sp, #168]
  404a6c:	ldr	x0, [sp, #168]
  404a70:	cmp	x0, #0x0
  404a74:	b.ne	404a80 <make_filename+0xb4>  // b.any
  404a78:	mov	w19, #0xfffffff4            	// #-12
  404a7c:	b	404c2c <make_filename+0x260>
  404a80:	ldr	x0, [sp, #152]
  404a84:	ldr	x2, [x0, #8]
  404a88:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  404a8c:	add	x1, x0, #0xfc8
  404a90:	mov	x0, x2
  404a94:	bl	403ab8 <xescape>
  404a98:	str	x0, [sp, #176]
  404a9c:	ldr	x0, [sp, #176]
  404aa0:	cmp	x0, #0x0
  404aa4:	b.ne	404ab0 <make_filename+0xe4>  // b.any
  404aa8:	mov	w19, #0xfffffff4            	// #-12
  404aac:	b	404c2c <make_filename+0x260>
  404ab0:	add	x0, sp, #0xc8
  404ab4:	bl	403140 <sd_id128_get_boot@plt>
  404ab8:	str	w0, [sp, #164]
  404abc:	ldr	w0, [sp, #164]
  404ac0:	cmp	w0, #0x0
  404ac4:	b.ge	404ad0 <make_filename+0x104>  // b.tcont
  404ac8:	ldr	w19, [sp, #164]
  404acc:	b	404c2c <make_filename+0x260>
  404ad0:	ldr	x0, [sp, #152]
  404ad4:	ldr	x2, [x0]
  404ad8:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  404adc:	add	x1, x0, #0xfc8
  404ae0:	mov	x0, x2
  404ae4:	bl	403ab8 <xescape>
  404ae8:	str	x0, [sp, #184]
  404aec:	ldr	x0, [sp, #184]
  404af0:	cmp	x0, #0x0
  404af4:	b.ne	404b00 <make_filename+0x134>  // b.any
  404af8:	mov	w19, #0xfffffff4            	// #-12
  404afc:	b	404c2c <make_filename+0x260>
  404b00:	ldr	x0, [sp, #152]
  404b04:	ldr	x2, [x0, #32]
  404b08:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  404b0c:	add	x1, x0, #0xfc8
  404b10:	mov	x0, x2
  404b14:	bl	403ab8 <xescape>
  404b18:	str	x0, [sp, #192]
  404b1c:	ldr	x0, [sp, #192]
  404b20:	cmp	x0, #0x0
  404b24:	b.ne	404b30 <make_filename+0x164>  // b.any
  404b28:	mov	w19, #0xfffffff4            	// #-12
  404b2c:	b	404c2c <make_filename+0x260>
  404b30:	ldr	x2, [sp, #168]
  404b34:	ldr	x3, [sp, #176]
  404b38:	ldrb	w0, [sp, #200]
  404b3c:	mov	w16, w0
  404b40:	ldrb	w0, [sp, #201]
  404b44:	mov	w17, w0
  404b48:	ldrb	w0, [sp, #202]
  404b4c:	mov	w18, w0
  404b50:	ldrb	w0, [sp, #203]
  404b54:	mov	w19, w0
  404b58:	ldrb	w0, [sp, #204]
  404b5c:	mov	w4, w0
  404b60:	ldrb	w0, [sp, #205]
  404b64:	mov	w5, w0
  404b68:	ldrb	w0, [sp, #206]
  404b6c:	mov	w6, w0
  404b70:	ldrb	w0, [sp, #207]
  404b74:	mov	w7, w0
  404b78:	ldrb	w0, [sp, #208]
  404b7c:	mov	w8, w0
  404b80:	ldrb	w0, [sp, #209]
  404b84:	mov	w9, w0
  404b88:	ldrb	w0, [sp, #210]
  404b8c:	mov	w10, w0
  404b90:	ldrb	w0, [sp, #211]
  404b94:	mov	w11, w0
  404b98:	ldrb	w0, [sp, #212]
  404b9c:	mov	w12, w0
  404ba0:	ldrb	w0, [sp, #213]
  404ba4:	mov	w13, w0
  404ba8:	ldrb	w0, [sp, #214]
  404bac:	mov	w14, w0
  404bb0:	ldrb	w0, [sp, #215]
  404bb4:	mov	w15, w0
  404bb8:	ldr	x0, [sp, #184]
  404bbc:	ldr	x1, [sp, #192]
  404bc0:	str	x1, [sp, #104]
  404bc4:	str	x0, [sp, #96]
  404bc8:	str	w15, [sp, #88]
  404bcc:	str	w14, [sp, #80]
  404bd0:	str	w13, [sp, #72]
  404bd4:	str	w12, [sp, #64]
  404bd8:	str	w11, [sp, #56]
  404bdc:	str	w10, [sp, #48]
  404be0:	str	w9, [sp, #40]
  404be4:	str	w8, [sp, #32]
  404be8:	str	w7, [sp, #24]
  404bec:	str	w6, [sp, #16]
  404bf0:	str	w5, [sp, #8]
  404bf4:	str	w4, [sp]
  404bf8:	mov	w7, w19
  404bfc:	mov	w6, w18
  404c00:	mov	w5, w17
  404c04:	mov	w4, w16
  404c08:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  404c0c:	add	x1, x0, #0xfd0
  404c10:	ldr	x0, [sp, #144]
  404c14:	bl	4034e0 <asprintf@plt>
  404c18:	cmp	w0, #0x0
  404c1c:	b.ge	404c28 <make_filename+0x25c>  // b.tcont
  404c20:	mov	w19, #0xfffffff4            	// #-12
  404c24:	b	404c2c <make_filename+0x260>
  404c28:	mov	w19, #0x0                   	// #0
  404c2c:	add	x0, sp, #0xc0
  404c30:	bl	4038ac <freep>
  404c34:	add	x0, sp, #0xb8
  404c38:	bl	4038ac <freep>
  404c3c:	add	x0, sp, #0xb0
  404c40:	bl	4038ac <freep>
  404c44:	add	x0, sp, #0xa8
  404c48:	bl	4038ac <freep>
  404c4c:	mov	w1, w19
  404c50:	adrp	x0, 41d000 <__FRAME_END__+0xfdec>
  404c54:	add	x0, x0, #0x948
  404c58:	ldr	x2, [sp, #216]
  404c5c:	ldr	x0, [x0]
  404c60:	eor	x0, x2, x0
  404c64:	cmp	x0, #0x0
  404c68:	b.eq	404c70 <make_filename+0x2a4>  // b.none
  404c6c:	bl	4032b0 <__stack_chk_fail@plt>
  404c70:	mov	w0, w1
  404c74:	ldr	x19, [sp, #128]
  404c78:	ldp	x29, x30, [sp, #112]
  404c7c:	add	sp, sp, #0xe0
  404c80:	ret

0000000000404c84 <save_external_coredump>:
  404c84:	sub	sp, sp, #0x220
  404c88:	stp	x29, x30, [sp, #32]
  404c8c:	add	x29, sp, #0x20
  404c90:	stp	x19, x20, [sp, #48]
  404c94:	str	x21, [sp, #64]
  404c98:	str	x0, [sp, #136]
  404c9c:	str	w1, [sp, #132]
  404ca0:	str	x2, [sp, #120]
  404ca4:	str	x3, [sp, #112]
  404ca8:	str	x4, [sp, #104]
  404cac:	str	x5, [sp, #96]
  404cb0:	str	x6, [sp, #88]
  404cb4:	adrp	x0, 41d000 <__FRAME_END__+0xfdec>
  404cb8:	add	x0, x0, #0x948
  404cbc:	ldr	x1, [x0]
  404cc0:	str	x1, [sp, #536]
  404cc4:	mov	x1, #0x0                   	// #0
  404cc8:	str	xzr, [sp, #304]
  404ccc:	str	xzr, [sp, #312]
  404cd0:	mov	w0, #0xffffffff            	// #-1
  404cd4:	str	w0, [sp, #144]
  404cd8:	ldr	x0, [sp, #136]
  404cdc:	cmp	x0, #0x0
  404ce0:	cset	w0, eq  // eq = none
  404ce4:	and	w0, w0, #0xff
  404ce8:	and	x0, x0, #0xff
  404cec:	cmp	x0, #0x0
  404cf0:	b.eq	404d1c <save_external_coredump+0x98>  // b.none
  404cf4:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  404cf8:	add	x1, x0, #0xd73
  404cfc:	adrp	x0, 40c000 <_fini+0x13a0>
  404d00:	add	x4, x0, #0x2f0
  404d04:	mov	w3, #0x166                 	// #358
  404d08:	mov	x2, x1
  404d0c:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  404d10:	add	x1, x0, #0xf58
  404d14:	mov	w0, #0x0                   	// #0
  404d18:	bl	403080 <log_assert_failed_realm@plt>
  404d1c:	ldr	x0, [sp, #120]
  404d20:	cmp	x0, #0x0
  404d24:	cset	w0, eq  // eq = none
  404d28:	and	w0, w0, #0xff
  404d2c:	and	x0, x0, #0xff
  404d30:	cmp	x0, #0x0
  404d34:	b.eq	404d60 <save_external_coredump+0xdc>  // b.none
  404d38:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  404d3c:	add	x1, x0, #0xd73
  404d40:	adrp	x0, 40c000 <_fini+0x13a0>
  404d44:	add	x4, x0, #0x2f0
  404d48:	mov	w3, #0x167                 	// #359
  404d4c:	mov	x2, x1
  404d50:	adrp	x0, 40b000 <_fini+0x3a0>
  404d54:	add	x1, x0, #0x48
  404d58:	mov	w0, #0x0                   	// #0
  404d5c:	bl	403080 <log_assert_failed_realm@plt>
  404d60:	ldr	x0, [sp, #112]
  404d64:	cmp	x0, #0x0
  404d68:	cset	w0, eq  // eq = none
  404d6c:	and	w0, w0, #0xff
  404d70:	and	x0, x0, #0xff
  404d74:	cmp	x0, #0x0
  404d78:	b.eq	404da4 <save_external_coredump+0x120>  // b.none
  404d7c:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  404d80:	add	x1, x0, #0xd73
  404d84:	adrp	x0, 40c000 <_fini+0x13a0>
  404d88:	add	x4, x0, #0x2f0
  404d8c:	mov	w3, #0x168                 	// #360
  404d90:	mov	x2, x1
  404d94:	adrp	x0, 40b000 <_fini+0x3a0>
  404d98:	add	x1, x0, #0x58
  404d9c:	mov	w0, #0x0                   	// #0
  404da0:	bl	403080 <log_assert_failed_realm@plt>
  404da4:	ldr	x0, [sp, #104]
  404da8:	cmp	x0, #0x0
  404dac:	cset	w0, eq  // eq = none
  404db0:	and	w0, w0, #0xff
  404db4:	and	x0, x0, #0xff
  404db8:	cmp	x0, #0x0
  404dbc:	b.eq	404de8 <save_external_coredump+0x164>  // b.none
  404dc0:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  404dc4:	add	x1, x0, #0xd73
  404dc8:	adrp	x0, 40c000 <_fini+0x13a0>
  404dcc:	add	x4, x0, #0x2f0
  404dd0:	mov	w3, #0x169                 	// #361
  404dd4:	mov	x2, x1
  404dd8:	adrp	x0, 40b000 <_fini+0x3a0>
  404ddc:	add	x1, x0, #0x68
  404de0:	mov	w0, #0x0                   	// #0
  404de4:	bl	403080 <log_assert_failed_realm@plt>
  404de8:	ldr	x0, [sp, #96]
  404dec:	cmp	x0, #0x0
  404df0:	cset	w0, eq  // eq = none
  404df4:	and	w0, w0, #0xff
  404df8:	and	x0, x0, #0xff
  404dfc:	cmp	x0, #0x0
  404e00:	b.eq	404e2c <save_external_coredump+0x1a8>  // b.none
  404e04:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  404e08:	add	x1, x0, #0xd73
  404e0c:	adrp	x0, 40c000 <_fini+0x13a0>
  404e10:	add	x4, x0, #0x2f0
  404e14:	mov	w3, #0x16a                 	// #362
  404e18:	mov	x2, x1
  404e1c:	adrp	x0, 40b000 <_fini+0x3a0>
  404e20:	add	x1, x0, #0x78
  404e24:	mov	w0, #0x0                   	// #0
  404e28:	bl	403080 <log_assert_failed_realm@plt>
  404e2c:	ldr	x0, [sp, #136]
  404e30:	ldr	x0, [x0, #8]
  404e34:	add	x1, sp, #0x94
  404e38:	bl	403430 <parse_uid@plt>
  404e3c:	str	w0, [sp, #156]
  404e40:	ldr	w0, [sp, #156]
  404e44:	cmp	w0, #0x0
  404e48:	b.ge	404ed8 <save_external_coredump+0x254>  // b.tcont
  404e4c:	mov	w0, #0x3                   	// #3
  404e50:	str	w0, [sp, #292]
  404e54:	ldr	w0, [sp, #156]
  404e58:	str	w0, [sp, #296]
  404e5c:	str	wzr, [sp, #300]
  404e60:	ldr	w0, [sp, #300]
  404e64:	bl	403660 <log_get_max_level_realm@plt>
  404e68:	mov	w1, w0
  404e6c:	ldr	w0, [sp, #292]
  404e70:	and	w0, w0, #0x7
  404e74:	cmp	w1, w0
  404e78:	b.lt	404ec0 <save_external_coredump+0x23c>  // b.tstop
  404e7c:	ldr	w0, [sp, #300]
  404e80:	lsl	w1, w0, #10
  404e84:	ldr	w0, [sp, #292]
  404e88:	orr	w6, w1, w0
  404e8c:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  404e90:	add	x1, x0, #0xd73
  404e94:	adrp	x0, 40b000 <_fini+0x3a0>
  404e98:	add	x5, x0, #0x88
  404e9c:	adrp	x0, 40c000 <_fini+0x13a0>
  404ea0:	add	x4, x0, #0x308
  404ea4:	mov	w3, #0x16e                 	// #366
  404ea8:	mov	x2, x1
  404eac:	ldr	w1, [sp, #296]
  404eb0:	mov	w0, w6
  404eb4:	bl	4033b0 <log_internal_realm@plt>
  404eb8:	mov	w19, w0
  404ebc:	b	4058f8 <save_external_coredump+0xc74>
  404ec0:	ldr	w0, [sp, #296]
  404ec4:	cmp	w0, #0x0
  404ec8:	cneg	w0, w0, lt  // lt = tstop
  404ecc:	and	w0, w0, #0xff
  404ed0:	neg	w19, w0
  404ed4:	b	4058f8 <save_external_coredump+0xc74>
  404ed8:	ldr	x0, [sp, #136]
  404edc:	ldr	x0, [x0, #40]
  404ee0:	add	x1, sp, #0x140
  404ee4:	bl	403c48 <safe_atou64>
  404ee8:	str	w0, [sp, #156]
  404eec:	ldr	w0, [sp, #156]
  404ef0:	cmp	w0, #0x0
  404ef4:	b.ge	404f90 <save_external_coredump+0x30c>  // b.tcont
  404ef8:	mov	w0, #0x3                   	// #3
  404efc:	str	w0, [sp, #280]
  404f00:	ldr	w0, [sp, #156]
  404f04:	str	w0, [sp, #284]
  404f08:	str	wzr, [sp, #288]
  404f0c:	ldr	w0, [sp, #288]
  404f10:	bl	403660 <log_get_max_level_realm@plt>
  404f14:	mov	w1, w0
  404f18:	ldr	w0, [sp, #280]
  404f1c:	and	w0, w0, #0x7
  404f20:	cmp	w1, w0
  404f24:	b.lt	404f78 <save_external_coredump+0x2f4>  // b.tstop
  404f28:	ldr	w0, [sp, #288]
  404f2c:	lsl	w1, w0, #10
  404f30:	ldr	w0, [sp, #280]
  404f34:	orr	w7, w1, w0
  404f38:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  404f3c:	add	x1, x0, #0xd73
  404f40:	ldr	x0, [sp, #136]
  404f44:	ldr	x0, [x0, #40]
  404f48:	mov	x6, x0
  404f4c:	adrp	x0, 40b000 <_fini+0x3a0>
  404f50:	add	x5, x0, #0xa0
  404f54:	adrp	x0, 40c000 <_fini+0x13a0>
  404f58:	add	x4, x0, #0x308
  404f5c:	mov	w3, #0x172                 	// #370
  404f60:	mov	x2, x1
  404f64:	ldr	w1, [sp, #284]
  404f68:	mov	w0, w7
  404f6c:	bl	4033b0 <log_internal_realm@plt>
  404f70:	mov	w19, w0
  404f74:	b	4058f8 <save_external_coredump+0xc74>
  404f78:	ldr	w0, [sp, #284]
  404f7c:	cmp	w0, #0x0
  404f80:	cneg	w0, w0, lt  // lt = tstop
  404f84:	and	w0, w0, #0xff
  404f88:	neg	w19, w0
  404f8c:	b	4058f8 <save_external_coredump+0xc74>
  404f90:	bl	403400 <page_size@plt>
  404f94:	mov	x1, x0
  404f98:	ldr	x0, [sp, #320]
  404f9c:	cmp	x1, x0
  404fa0:	b.ls	40504c <save_external_coredump+0x3c8>  // b.plast
  404fa4:	mov	w0, #0x6                   	// #6
  404fa8:	str	w0, [sp, #268]
  404fac:	mov	w0, #0x39                  	// #57
  404fb0:	movk	w0, #0x4000, lsl #16
  404fb4:	str	w0, [sp, #272]
  404fb8:	str	wzr, [sp, #276]
  404fbc:	ldr	w0, [sp, #276]
  404fc0:	bl	403660 <log_get_max_level_realm@plt>
  404fc4:	mov	w1, w0
  404fc8:	ldr	w0, [sp, #268]
  404fcc:	and	w0, w0, #0x7
  404fd0:	cmp	w1, w0
  404fd4:	b.lt	405034 <save_external_coredump+0x3b0>  // b.tstop
  404fd8:	ldr	w0, [sp, #276]
  404fdc:	lsl	w1, w0, #10
  404fe0:	ldr	w0, [sp, #268]
  404fe4:	orr	w8, w1, w0
  404fe8:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  404fec:	add	x1, x0, #0xd73
  404ff0:	ldr	x0, [sp, #136]
  404ff4:	ldr	x2, [x0]
  404ff8:	ldr	x0, [sp, #136]
  404ffc:	ldr	x0, [x0, #56]
  405000:	mov	x7, x0
  405004:	mov	x6, x2
  405008:	adrp	x0, 40b000 <_fini+0x3a0>
  40500c:	add	x5, x0, #0xc8
  405010:	adrp	x0, 40c000 <_fini+0x13a0>
  405014:	add	x4, x0, #0x308
  405018:	mov	w3, #0x179                 	// #377
  40501c:	mov	x2, x1
  405020:	ldr	w1, [sp, #272]
  405024:	mov	w0, w8
  405028:	bl	4033b0 <log_internal_realm@plt>
  40502c:	mov	w19, w0
  405030:	b	4058f8 <save_external_coredump+0xc74>
  405034:	ldr	w0, [sp, #272]
  405038:	cmp	w0, #0x0
  40503c:	cneg	w0, w0, lt  // lt = tstop
  405040:	and	w0, w0, #0xff
  405044:	neg	w19, w0
  405048:	b	4058f8 <save_external_coredump+0xc74>
  40504c:	adrp	x0, 41e000 <arg_storage>
  405050:	add	x0, x0, #0x8
  405054:	ldr	x0, [x0]
  405058:	str	x0, [sp, #344]
  40505c:	bl	403fd4 <storage_size_max>
  405060:	str	x0, [sp, #352]
  405064:	ldr	x0, [sp, #344]
  405068:	ldr	x2, [sp, #352]
  40506c:	ldr	x1, [sp, #352]
  405070:	cmp	x2, x0
  405074:	csel	x0, x1, x0, cs  // cs = hs, nlast
  405078:	str	x0, [sp, #360]
  40507c:	ldr	x0, [sp, #360]
  405080:	cmp	x0, #0x0
  405084:	b.ne	405118 <save_external_coredump+0x494>  // b.any
  405088:	mov	w0, #0x7                   	// #7
  40508c:	str	w0, [sp, #256]
  405090:	mov	w0, #0x39                  	// #57
  405094:	movk	w0, #0x4000, lsl #16
  405098:	str	w0, [sp, #260]
  40509c:	str	wzr, [sp, #264]
  4050a0:	ldr	w0, [sp, #264]
  4050a4:	bl	403660 <log_get_max_level_realm@plt>
  4050a8:	mov	w1, w0
  4050ac:	ldr	w0, [sp, #256]
  4050b0:	and	w0, w0, #0x7
  4050b4:	cmp	w1, w0
  4050b8:	b.lt	405100 <save_external_coredump+0x47c>  // b.tstop
  4050bc:	ldr	w0, [sp, #264]
  4050c0:	lsl	w1, w0, #10
  4050c4:	ldr	w0, [sp, #256]
  4050c8:	orr	w6, w1, w0
  4050cc:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  4050d0:	add	x1, x0, #0xd73
  4050d4:	adrp	x0, 40b000 <_fini+0x3a0>
  4050d8:	add	x5, x0, #0x108
  4050dc:	adrp	x0, 40c000 <_fini+0x13a0>
  4050e0:	add	x4, x0, #0x308
  4050e4:	mov	w3, #0x180                 	// #384
  4050e8:	mov	x2, x1
  4050ec:	ldr	w1, [sp, #260]
  4050f0:	mov	w0, w6
  4050f4:	bl	4033b0 <log_internal_realm@plt>
  4050f8:	mov	w19, w0
  4050fc:	b	4058f8 <save_external_coredump+0xc74>
  405100:	ldr	w0, [sp, #260]
  405104:	cmp	w0, #0x0
  405108:	cneg	w0, w0, lt  // lt = tstop
  40510c:	and	w0, w0, #0xff
  405110:	neg	w19, w0
  405114:	b	4058f8 <save_external_coredump+0xc74>
  405118:	ldr	x0, [sp, #320]
  40511c:	str	x0, [sp, #368]
  405120:	ldr	x0, [sp, #360]
  405124:	str	x0, [sp, #376]
  405128:	ldr	x0, [sp, #368]
  40512c:	ldr	x2, [sp, #376]
  405130:	ldr	x1, [sp, #376]
  405134:	cmp	x2, x0
  405138:	csel	x0, x1, x0, ls  // ls = plast
  40513c:	str	x0, [sp, #384]
  405140:	add	x0, sp, #0x130
  405144:	mov	x1, x0
  405148:	ldr	x0, [sp, #136]
  40514c:	bl	4049cc <make_filename>
  405150:	str	w0, [sp, #156]
  405154:	ldr	w0, [sp, #156]
  405158:	cmp	w0, #0x0
  40515c:	b.ge	4051ec <save_external_coredump+0x568>  // b.tcont
  405160:	mov	w0, #0x3                   	// #3
  405164:	str	w0, [sp, #244]
  405168:	ldr	w0, [sp, #156]
  40516c:	str	w0, [sp, #248]
  405170:	str	wzr, [sp, #252]
  405174:	ldr	w0, [sp, #252]
  405178:	bl	403660 <log_get_max_level_realm@plt>
  40517c:	mov	w1, w0
  405180:	ldr	w0, [sp, #244]
  405184:	and	w0, w0, #0x7
  405188:	cmp	w1, w0
  40518c:	b.lt	4051d4 <save_external_coredump+0x550>  // b.tstop
  405190:	ldr	w0, [sp, #252]
  405194:	lsl	w1, w0, #10
  405198:	ldr	w0, [sp, #244]
  40519c:	orr	w6, w1, w0
  4051a0:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  4051a4:	add	x1, x0, #0xd73
  4051a8:	adrp	x0, 40b000 <_fini+0x3a0>
  4051ac:	add	x5, x0, #0x158
  4051b0:	adrp	x0, 40c000 <_fini+0x13a0>
  4051b4:	add	x4, x0, #0x308
  4051b8:	mov	w3, #0x188                 	// #392
  4051bc:	mov	x2, x1
  4051c0:	ldr	w1, [sp, #248]
  4051c4:	mov	w0, w6
  4051c8:	bl	4033b0 <log_internal_realm@plt>
  4051cc:	mov	w19, w0
  4051d0:	b	4058f8 <save_external_coredump+0xc74>
  4051d4:	ldr	w0, [sp, #248]
  4051d8:	cmp	w0, #0x0
  4051dc:	cneg	w0, w0, lt  // lt = tstop
  4051e0:	and	w0, w0, #0xff
  4051e4:	neg	w19, w0
  4051e8:	b	4058f8 <save_external_coredump+0xc74>
  4051ec:	mov	w1, #0x1ed                 	// #493
  4051f0:	adrp	x0, 40b000 <_fini+0x3a0>
  4051f4:	add	x0, x0, #0x188
  4051f8:	bl	403310 <mkdir_p_label@plt>
  4051fc:	ldr	x0, [sp, #304]
  405200:	add	x1, sp, #0x138
  405204:	mov	x2, x1
  405208:	mov	w1, #0x2                   	// #2
  40520c:	movk	w1, #0x8, lsl #16
  405210:	bl	402f30 <open_tmpfile_linkable@plt>
  405214:	str	w0, [sp, #144]
  405218:	ldr	w0, [sp, #144]
  40521c:	cmp	w0, #0x0
  405220:	b.ge	4052b8 <save_external_coredump+0x634>  // b.tcont
  405224:	mov	w0, #0x3                   	// #3
  405228:	str	w0, [sp, #232]
  40522c:	ldr	w0, [sp, #144]
  405230:	str	w0, [sp, #236]
  405234:	str	wzr, [sp, #240]
  405238:	ldr	w0, [sp, #240]
  40523c:	bl	403660 <log_get_max_level_realm@plt>
  405240:	mov	w1, w0
  405244:	ldr	w0, [sp, #232]
  405248:	and	w0, w0, #0x7
  40524c:	cmp	w1, w0
  405250:	b.lt	4052a0 <save_external_coredump+0x61c>  // b.tstop
  405254:	ldr	w0, [sp, #240]
  405258:	lsl	w1, w0, #10
  40525c:	ldr	w0, [sp, #232]
  405260:	orr	w7, w1, w0
  405264:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  405268:	add	x1, x0, #0xd73
  40526c:	ldr	x0, [sp, #304]
  405270:	mov	x6, x0
  405274:	adrp	x0, 40b000 <_fini+0x3a0>
  405278:	add	x5, x0, #0x1a8
  40527c:	adrp	x0, 40c000 <_fini+0x13a0>
  405280:	add	x4, x0, #0x308
  405284:	mov	w3, #0x18e                 	// #398
  405288:	mov	x2, x1
  40528c:	ldr	w1, [sp, #236]
  405290:	mov	w0, w7
  405294:	bl	4033b0 <log_internal_realm@plt>
  405298:	mov	w19, w0
  40529c:	b	4058f8 <save_external_coredump+0xc74>
  4052a0:	ldr	w0, [sp, #236]
  4052a4:	cmp	w0, #0x0
  4052a8:	cneg	w0, w0, lt  // lt = tstop
  4052ac:	and	w0, w0, #0xff
  4052b0:	neg	w19, w0
  4052b4:	b	4058f8 <save_external_coredump+0xc74>
  4052b8:	ldr	w0, [sp, #144]
  4052bc:	mov	w3, #0x0                   	// #0
  4052c0:	ldr	x2, [sp, #384]
  4052c4:	mov	w1, w0
  4052c8:	ldr	w0, [sp, #132]
  4052cc:	bl	403984 <copy_bytes>
  4052d0:	str	w0, [sp, #156]
  4052d4:	ldr	w0, [sp, #156]
  4052d8:	cmp	w0, #0x0
  4052dc:	b.ge	405374 <save_external_coredump+0x6f0>  // b.tcont
  4052e0:	mov	w0, #0x3                   	// #3
  4052e4:	str	w0, [sp, #220]
  4052e8:	ldr	w0, [sp, #156]
  4052ec:	str	w0, [sp, #224]
  4052f0:	str	wzr, [sp, #228]
  4052f4:	ldr	w0, [sp, #228]
  4052f8:	bl	403660 <log_get_max_level_realm@plt>
  4052fc:	mov	w1, w0
  405300:	ldr	w0, [sp, #220]
  405304:	and	w0, w0, #0x7
  405308:	cmp	w1, w0
  40530c:	b.lt	405368 <save_external_coredump+0x6e4>  // b.tstop
  405310:	ldr	w0, [sp, #228]
  405314:	lsl	w1, w0, #10
  405318:	ldr	w0, [sp, #220]
  40531c:	orr	w8, w1, w0
  405320:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  405324:	add	x1, x0, #0xd73
  405328:	ldr	x0, [sp, #136]
  40532c:	ldr	x2, [x0]
  405330:	ldr	x0, [sp, #136]
  405334:	ldr	x0, [x0, #56]
  405338:	mov	x7, x0
  40533c:	mov	x6, x2
  405340:	adrp	x0, 40b000 <_fini+0x3a0>
  405344:	add	x5, x0, #0x1e0
  405348:	adrp	x0, 40c000 <_fini+0x13a0>
  40534c:	add	x4, x0, #0x308
  405350:	mov	w3, #0x192                 	// #402
  405354:	mov	x2, x1
  405358:	ldr	w1, [sp, #224]
  40535c:	mov	w0, w8
  405360:	bl	4033b0 <log_internal_realm@plt>
  405364:	b	4058e0 <save_external_coredump+0xc5c>
  405368:	ldr	w0, [sp, #224]
  40536c:	cmp	w0, #0x0
  405370:	b	4058e0 <save_external_coredump+0xc5c>
  405374:	ldr	w0, [sp, #156]
  405378:	cmp	w0, #0x1
  40537c:	cset	w0, eq  // eq = none
  405380:	and	w1, w0, #0xff
  405384:	ldr	x0, [sp, #88]
  405388:	strb	w1, [x0]
  40538c:	ldr	x0, [sp, #88]
  405390:	ldrb	w0, [x0]
  405394:	cmp	w0, #0x0
  405398:	b.eq	4053ec <save_external_coredump+0x768>  // b.none
  40539c:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  4053a0:	add	x1, x0, #0xd73
  4053a4:	str	xzr, [sp, #16]
  4053a8:	adrp	x0, 40b000 <_fini+0x3a0>
  4053ac:	add	x0, x0, #0x248
  4053b0:	str	x0, [sp, #8]
  4053b4:	ldr	x0, [sp, #384]
  4053b8:	str	x0, [sp]
  4053bc:	adrp	x0, 40b000 <_fini+0x3a0>
  4053c0:	add	x7, x0, #0x208
  4053c4:	ldr	x6, [sp, #384]
  4053c8:	adrp	x0, 40b000 <_fini+0x3a0>
  4053cc:	add	x5, x0, #0x218
  4053d0:	adrp	x0, 40c000 <_fini+0x13a0>
  4053d4:	add	x4, x0, #0x308
  4053d8:	mov	w3, #0x198                 	// #408
  4053dc:	mov	x2, x1
  4053e0:	mov	w1, #0x0                   	// #0
  4053e4:	mov	w0, #0x6                   	// #6
  4053e8:	bl	403390 <log_struct_internal@plt>
  4053ec:	ldr	w0, [sp, #144]
  4053f0:	add	x1, sp, #0x198
  4053f4:	bl	40ac30 <fstat64>
  4053f8:	cmp	w0, #0x0
  4053fc:	b.ge	40548c <save_external_coredump+0x808>  // b.tcont
  405400:	mov	w0, #0x3                   	// #3
  405404:	str	w0, [sp, #208]
  405408:	bl	403220 <__errno_location@plt>
  40540c:	ldr	w0, [x0]
  405410:	str	w0, [sp, #212]
  405414:	str	wzr, [sp, #216]
  405418:	ldr	w0, [sp, #216]
  40541c:	bl	403660 <log_get_max_level_realm@plt>
  405420:	mov	w1, w0
  405424:	ldr	w0, [sp, #208]
  405428:	and	w0, w0, #0x7
  40542c:	cmp	w1, w0
  405430:	b.lt	405480 <save_external_coredump+0x7fc>  // b.tstop
  405434:	ldr	w0, [sp, #216]
  405438:	lsl	w1, w0, #10
  40543c:	ldr	w0, [sp, #208]
  405440:	orr	w19, w1, w0
  405444:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  405448:	add	x20, x0, #0xd73
  40544c:	ldr	x0, [sp, #312]
  405450:	bl	404614 <coredump_tmpfile_name>
  405454:	mov	x6, x0
  405458:	adrp	x0, 40b000 <_fini+0x3a0>
  40545c:	add	x5, x0, #0x278
  405460:	adrp	x0, 40c000 <_fini+0x13a0>
  405464:	add	x4, x0, #0x308
  405468:	mov	w3, #0x19e                 	// #414
  40546c:	mov	x2, x20
  405470:	ldr	w1, [sp, #212]
  405474:	mov	w0, w19
  405478:	bl	4033b0 <log_internal_realm@plt>
  40547c:	b	4058e0 <save_external_coredump+0xc5c>
  405480:	ldr	w0, [sp, #212]
  405484:	cmp	w0, #0x0
  405488:	b	4058e0 <save_external_coredump+0xc5c>
  40548c:	ldr	w0, [sp, #144]
  405490:	mov	w2, #0x0                   	// #0
  405494:	mov	x1, #0x0                   	// #0
  405498:	bl	402f10 <lseek64@plt>
  40549c:	cmn	x0, #0x1
  4054a0:	b.ne	405530 <save_external_coredump+0x8ac>  // b.any
  4054a4:	mov	w0, #0x3                   	// #3
  4054a8:	str	w0, [sp, #196]
  4054ac:	bl	403220 <__errno_location@plt>
  4054b0:	ldr	w0, [x0]
  4054b4:	str	w0, [sp, #200]
  4054b8:	str	wzr, [sp, #204]
  4054bc:	ldr	w0, [sp, #204]
  4054c0:	bl	403660 <log_get_max_level_realm@plt>
  4054c4:	mov	w1, w0
  4054c8:	ldr	w0, [sp, #196]
  4054cc:	and	w0, w0, #0x7
  4054d0:	cmp	w1, w0
  4054d4:	b.lt	405524 <save_external_coredump+0x8a0>  // b.tstop
  4054d8:	ldr	w0, [sp, #204]
  4054dc:	lsl	w1, w0, #10
  4054e0:	ldr	w0, [sp, #196]
  4054e4:	orr	w19, w1, w0
  4054e8:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  4054ec:	add	x20, x0, #0xd73
  4054f0:	ldr	x0, [sp, #312]
  4054f4:	bl	404614 <coredump_tmpfile_name>
  4054f8:	mov	x6, x0
  4054fc:	adrp	x0, 40b000 <_fini+0x3a0>
  405500:	add	x5, x0, #0x2a0
  405504:	adrp	x0, 40c000 <_fini+0x13a0>
  405508:	add	x4, x0, #0x308
  40550c:	mov	w3, #0x1a3                 	// #419
  405510:	mov	x2, x20
  405514:	ldr	w1, [sp, #200]
  405518:	mov	w0, w19
  40551c:	bl	4033b0 <log_internal_realm@plt>
  405520:	b	4058e0 <save_external_coredump+0xc5c>
  405524:	ldr	w0, [sp, #200]
  405528:	cmp	w0, #0x0
  40552c:	b	4058e0 <save_external_coredump+0xc5c>
  405530:	adrp	x0, 41e000 <arg_storage>
  405534:	add	x0, x0, #0x4
  405538:	ldrb	w0, [x0]
  40553c:	cmp	w0, #0x0
  405540:	b.eq	405854 <save_external_coredump+0xbd0>  // b.none
  405544:	ldr	x0, [sp, #456]
  405548:	mov	x1, x0
  40554c:	mov	x0, #0x0                   	// #0
  405550:	bl	4048b8 <maybe_remove_external_coredump>
  405554:	cmp	w0, #0x0
  405558:	b.ne	405854 <save_external_coredump+0xbd0>  // b.any
  40555c:	str	xzr, [sp, #328]
  405560:	str	xzr, [sp, #336]
  405564:	mov	w0, #0xffffffff            	// #-1
  405568:	str	w0, [sp, #152]
  40556c:	ldr	x3, [sp, #304]
  405570:	mov	x2, #0x0                   	// #0
  405574:	adrp	x0, 40b000 <_fini+0x3a0>
  405578:	add	x1, x0, #0x2c0
  40557c:	mov	x0, x3
  405580:	bl	403050 <strjoin_real@plt>
  405584:	str	x0, [sp, #328]
  405588:	ldr	x0, [sp, #328]
  40558c:	cmp	x0, #0x0
  405590:	b.ne	4055b8 <save_external_coredump+0x934>  // b.any
  405594:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  405598:	add	x1, x0, #0xd73
  40559c:	adrp	x0, 40c000 <_fini+0x13a0>
  4055a0:	add	x3, x0, #0x308
  4055a4:	mov	w2, #0x1b0                 	// #432
  4055a8:	mov	w0, #0x0                   	// #0
  4055ac:	bl	403620 <log_oom_internal@plt>
  4055b0:	mov	w20, #0x0                   	// #0
  4055b4:	b	4057d8 <save_external_coredump+0xb54>
  4055b8:	ldr	x0, [sp, #328]
  4055bc:	add	x1, sp, #0x150
  4055c0:	mov	x2, x1
  4055c4:	mov	w1, #0x2                   	// #2
  4055c8:	movk	w1, #0x8, lsl #16
  4055cc:	bl	402f30 <open_tmpfile_linkable@plt>
  4055d0:	str	w0, [sp, #152]
  4055d4:	ldr	w0, [sp, #152]
  4055d8:	cmp	w0, #0x0
  4055dc:	b.ge	405668 <save_external_coredump+0x9e4>  // b.tcont
  4055e0:	mov	w0, #0x3                   	// #3
  4055e4:	str	w0, [sp, #180]
  4055e8:	ldr	w0, [sp, #152]
  4055ec:	str	w0, [sp, #184]
  4055f0:	str	wzr, [sp, #188]
  4055f4:	ldr	w0, [sp, #188]
  4055f8:	bl	403660 <log_get_max_level_realm@plt>
  4055fc:	mov	w1, w0
  405600:	ldr	w0, [sp, #180]
  405604:	and	w0, w0, #0x7
  405608:	cmp	w1, w0
  40560c:	b.lt	405658 <save_external_coredump+0x9d4>  // b.tstop
  405610:	ldr	w0, [sp, #188]
  405614:	lsl	w1, w0, #10
  405618:	ldr	w0, [sp, #180]
  40561c:	orr	w7, w1, w0
  405620:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  405624:	add	x1, x0, #0xd73
  405628:	ldr	x0, [sp, #328]
  40562c:	mov	x6, x0
  405630:	adrp	x0, 40b000 <_fini+0x3a0>
  405634:	add	x5, x0, #0x1a8
  405638:	adrp	x0, 40c000 <_fini+0x13a0>
  40563c:	add	x4, x0, #0x308
  405640:	mov	w3, #0x1b6                 	// #438
  405644:	mov	x2, x1
  405648:	ldr	w1, [sp, #184]
  40564c:	mov	w0, w7
  405650:	bl	4033b0 <log_internal_realm@plt>
  405654:	b	405660 <save_external_coredump+0x9dc>
  405658:	ldr	w0, [sp, #184]
  40565c:	cmp	w0, #0x0
  405660:	mov	w20, #0x0                   	// #0
  405664:	b	4057d8 <save_external_coredump+0xb54>
  405668:	ldr	w0, [sp, #144]
  40566c:	ldr	w1, [sp, #152]
  405670:	mov	x2, #0xffffffffffffffff    	// #-1
  405674:	bl	402e10 <compress_stream_xz@plt>
  405678:	str	w0, [sp, #156]
  40567c:	ldr	w0, [sp, #156]
  405680:	cmp	w0, #0x0
  405684:	b.ge	405710 <save_external_coredump+0xa8c>  // b.tcont
  405688:	mov	w0, #0x3                   	// #3
  40568c:	str	w0, [sp, #168]
  405690:	ldr	w0, [sp, #156]
  405694:	str	w0, [sp, #172]
  405698:	str	wzr, [sp, #176]
  40569c:	ldr	w0, [sp, #176]
  4056a0:	bl	403660 <log_get_max_level_realm@plt>
  4056a4:	mov	w1, w0
  4056a8:	ldr	w0, [sp, #168]
  4056ac:	and	w0, w0, #0x7
  4056b0:	cmp	w1, w0
  4056b4:	b.lt	405704 <save_external_coredump+0xa80>  // b.tstop
  4056b8:	ldr	w0, [sp, #176]
  4056bc:	lsl	w1, w0, #10
  4056c0:	ldr	w0, [sp, #168]
  4056c4:	orr	w20, w1, w0
  4056c8:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  4056cc:	add	x21, x0, #0xd73
  4056d0:	ldr	x0, [sp, #336]
  4056d4:	bl	404614 <coredump_tmpfile_name>
  4056d8:	mov	x6, x0
  4056dc:	adrp	x0, 40b000 <_fini+0x3a0>
  4056e0:	add	x5, x0, #0x2c8
  4056e4:	adrp	x0, 40c000 <_fini+0x13a0>
  4056e8:	add	x4, x0, #0x308
  4056ec:	mov	w3, #0x1bc                 	// #444
  4056f0:	mov	x2, x21
  4056f4:	ldr	w1, [sp, #172]
  4056f8:	mov	w0, w20
  4056fc:	bl	4033b0 <log_internal_realm@plt>
  405700:	b	4057c0 <save_external_coredump+0xb3c>
  405704:	ldr	w0, [sp, #172]
  405708:	cmp	w0, #0x0
  40570c:	b	4057c0 <save_external_coredump+0xb3c>
  405710:	ldr	w0, [sp, #152]
  405714:	ldr	x1, [sp, #336]
  405718:	ldr	x2, [sp, #328]
  40571c:	ldr	w3, [sp, #148]
  405720:	mov	w4, w3
  405724:	ldr	x3, [sp, #136]
  405728:	bl	404640 <fix_permissions>
  40572c:	str	w0, [sp, #156]
  405730:	ldr	w0, [sp, #156]
  405734:	cmp	w0, #0x0
  405738:	b.lt	4057bc <save_external_coredump+0xb38>  // b.tstop
  40573c:	ldr	x0, [sp, #312]
  405740:	cmp	x0, #0x0
  405744:	b.eq	405750 <save_external_coredump+0xacc>  // b.none
  405748:	ldr	x0, [sp, #312]
  40574c:	bl	4031a0 <unlink_noerrno@plt>
  405750:	ldr	x0, [sp, #328]
  405754:	str	x0, [sp, #392]
  405758:	str	xzr, [sp, #328]
  40575c:	ldr	x1, [sp, #392]
  405760:	ldr	x0, [sp, #120]
  405764:	str	x1, [x0]
  405768:	ldr	w0, [sp, #152]
  40576c:	str	w0, [sp, #160]
  405770:	mov	w0, #0xffffffff            	// #-1
  405774:	str	w0, [sp, #152]
  405778:	ldr	w1, [sp, #160]
  40577c:	ldr	x0, [sp, #112]
  405780:	str	w1, [x0]
  405784:	ldr	w0, [sp, #144]
  405788:	str	w0, [sp, #164]
  40578c:	mov	w0, #0xffffffff            	// #-1
  405790:	str	w0, [sp, #144]
  405794:	ldr	w1, [sp, #164]
  405798:	ldr	x0, [sp, #104]
  40579c:	str	w1, [x0]
  4057a0:	ldr	x0, [sp, #456]
  4057a4:	mov	x1, x0
  4057a8:	ldr	x0, [sp, #96]
  4057ac:	str	x1, [x0]
  4057b0:	mov	w19, #0x0                   	// #0
  4057b4:	mov	w20, #0x1                   	// #1
  4057b8:	b	4057d8 <save_external_coredump+0xb54>
  4057bc:	nop
  4057c0:	ldr	x0, [sp, #336]
  4057c4:	cmp	x0, #0x0
  4057c8:	b.eq	4057d4 <save_external_coredump+0xb50>  // b.none
  4057cc:	ldr	x0, [sp, #336]
  4057d0:	bl	402e40 <unlink@plt>
  4057d4:	mov	w20, #0x2                   	// #2
  4057d8:	add	x0, sp, #0x98
  4057dc:	bl	403ae4 <closep>
  4057e0:	cmp	w20, #0x0
  4057e4:	b.eq	4057f4 <save_external_coredump+0xb70>  // b.none
  4057e8:	cmp	w20, #0x2
  4057ec:	b.ne	4057fc <save_external_coredump+0xb78>  // b.any
  4057f0:	b	405804 <save_external_coredump+0xb80>
  4057f4:	mov	w20, #0x0                   	// #0
  4057f8:	b	405808 <save_external_coredump+0xb84>
  4057fc:	mov	w20, #0x1                   	// #1
  405800:	b	405808 <save_external_coredump+0xb84>
  405804:	mov	w20, #0x2                   	// #2
  405808:	add	x0, sp, #0x150
  40580c:	bl	4038ac <freep>
  405810:	cmp	w20, #0x0
  405814:	b.eq	405824 <save_external_coredump+0xba0>  // b.none
  405818:	cmp	w20, #0x2
  40581c:	b.ne	40582c <save_external_coredump+0xba8>  // b.any
  405820:	b	405834 <save_external_coredump+0xbb0>
  405824:	mov	w20, #0x0                   	// #0
  405828:	b	405838 <save_external_coredump+0xbb4>
  40582c:	mov	w20, #0x1                   	// #1
  405830:	b	405838 <save_external_coredump+0xbb4>
  405834:	mov	w20, #0x2                   	// #2
  405838:	add	x0, sp, #0x148
  40583c:	bl	4038ac <freep>
  405840:	cmp	w20, #0x0
  405844:	b.eq	405858 <save_external_coredump+0xbd4>  // b.none
  405848:	cmp	w20, #0x2
  40584c:	b.ne	4058f8 <save_external_coredump+0xc74>  // b.any
  405850:	b	405858 <save_external_coredump+0xbd4>
  405854:	nop
  405858:	ldr	w0, [sp, #144]
  40585c:	ldr	x1, [sp, #312]
  405860:	ldr	x2, [sp, #304]
  405864:	ldr	w3, [sp, #148]
  405868:	mov	w4, w3
  40586c:	ldr	x3, [sp, #136]
  405870:	bl	404640 <fix_permissions>
  405874:	str	w0, [sp, #156]
  405878:	ldr	w0, [sp, #156]
  40587c:	cmp	w0, #0x0
  405880:	b.lt	4058dc <save_external_coredump+0xc58>  // b.tstop
  405884:	ldr	x0, [sp, #304]
  405888:	str	x0, [sp, #400]
  40588c:	str	xzr, [sp, #304]
  405890:	ldr	x1, [sp, #400]
  405894:	ldr	x0, [sp, #120]
  405898:	str	x1, [x0]
  40589c:	ldr	w0, [sp, #144]
  4058a0:	str	w0, [sp, #192]
  4058a4:	mov	w0, #0xffffffff            	// #-1
  4058a8:	str	w0, [sp, #144]
  4058ac:	ldr	w1, [sp, #192]
  4058b0:	ldr	x0, [sp, #104]
  4058b4:	str	w1, [x0]
  4058b8:	ldr	x0, [sp, #112]
  4058bc:	mov	w1, #0xffffffff            	// #-1
  4058c0:	str	w1, [x0]
  4058c4:	ldr	x0, [sp, #456]
  4058c8:	mov	x1, x0
  4058cc:	ldr	x0, [sp, #96]
  4058d0:	str	x1, [x0]
  4058d4:	mov	w19, #0x0                   	// #0
  4058d8:	b	4058f8 <save_external_coredump+0xc74>
  4058dc:	nop
  4058e0:	ldr	x0, [sp, #312]
  4058e4:	cmp	x0, #0x0
  4058e8:	b.eq	4058f4 <save_external_coredump+0xc70>  // b.none
  4058ec:	ldr	x0, [sp, #312]
  4058f0:	bl	402e40 <unlink@plt>
  4058f4:	ldr	w19, [sp, #156]
  4058f8:	add	x0, sp, #0x90
  4058fc:	bl	403ae4 <closep>
  405900:	add	x0, sp, #0x138
  405904:	bl	4038ac <freep>
  405908:	add	x0, sp, #0x130
  40590c:	bl	4038ac <freep>
  405910:	mov	w1, w19
  405914:	adrp	x0, 41d000 <__FRAME_END__+0xfdec>
  405918:	add	x0, x0, #0x948
  40591c:	ldr	x2, [sp, #536]
  405920:	ldr	x0, [x0]
  405924:	eor	x0, x2, x0
  405928:	cmp	x0, #0x0
  40592c:	b.eq	405934 <save_external_coredump+0xcb0>  // b.none
  405930:	bl	4032b0 <__stack_chk_fail@plt>
  405934:	mov	w0, w1
  405938:	ldp	x19, x20, [sp, #48]
  40593c:	ldr	x21, [sp, #64]
  405940:	ldp	x29, x30, [sp, #32]
  405944:	add	sp, sp, #0x220
  405948:	ret

000000000040594c <allocate_journal_field>:
  40594c:	stp	x29, x30, [sp, #-144]!
  405950:	mov	x29, sp
  405954:	str	x19, [sp, #16]
  405958:	str	w0, [sp, #60]
  40595c:	str	x1, [sp, #48]
  405960:	str	x2, [sp, #40]
  405964:	str	x3, [sp, #32]
  405968:	adrp	x0, 41d000 <__FRAME_END__+0xfdec>
  40596c:	add	x0, x0, #0x948
  405970:	ldr	x1, [x0]
  405974:	str	x1, [sp, #136]
  405978:	mov	x1, #0x0                   	// #0
  40597c:	str	xzr, [sp, #112]
  405980:	ldr	w0, [sp, #60]
  405984:	lsr	w0, w0, #31
  405988:	and	w0, w0, #0xff
  40598c:	and	x0, x0, #0xff
  405990:	cmp	x0, #0x0
  405994:	b.eq	4059c0 <allocate_journal_field+0x74>  // b.none
  405998:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  40599c:	add	x1, x0, #0xd73
  4059a0:	adrp	x0, 40c000 <_fini+0x13a0>
  4059a4:	add	x4, x0, #0x320
  4059a8:	mov	w3, #0x1ec                 	// #492
  4059ac:	mov	x2, x1
  4059b0:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  4059b4:	add	x1, x0, #0xee0
  4059b8:	mov	w0, #0x0                   	// #0
  4059bc:	bl	403080 <log_assert_failed_realm@plt>
  4059c0:	ldr	x0, [sp, #40]
  4059c4:	cmp	x0, #0x0
  4059c8:	cset	w0, eq  // eq = none
  4059cc:	and	w0, w0, #0xff
  4059d0:	and	x0, x0, #0xff
  4059d4:	cmp	x0, #0x0
  4059d8:	b.eq	405a04 <allocate_journal_field+0xb8>  // b.none
  4059dc:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  4059e0:	add	x1, x0, #0xd73
  4059e4:	adrp	x0, 40c000 <_fini+0x13a0>
  4059e8:	add	x4, x0, #0x320
  4059ec:	mov	w3, #0x1ed                 	// #493
  4059f0:	mov	x2, x1
  4059f4:	adrp	x0, 40b000 <_fini+0x3a0>
  4059f8:	add	x1, x0, #0x2e8
  4059fc:	mov	w0, #0x0                   	// #0
  405a00:	bl	403080 <log_assert_failed_realm@plt>
  405a04:	ldr	x0, [sp, #32]
  405a08:	cmp	x0, #0x0
  405a0c:	cset	w0, eq  // eq = none
  405a10:	and	w0, w0, #0xff
  405a14:	and	x0, x0, #0xff
  405a18:	cmp	x0, #0x0
  405a1c:	b.eq	405a48 <allocate_journal_field+0xfc>  // b.none
  405a20:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  405a24:	add	x1, x0, #0xd73
  405a28:	adrp	x0, 40c000 <_fini+0x13a0>
  405a2c:	add	x4, x0, #0x320
  405a30:	mov	w3, #0x1ee                 	// #494
  405a34:	mov	x2, x1
  405a38:	adrp	x0, 40b000 <_fini+0x3a0>
  405a3c:	add	x1, x0, #0x78
  405a40:	mov	w0, #0x0                   	// #0
  405a44:	bl	403080 <log_assert_failed_realm@plt>
  405a48:	mov	w2, #0x0                   	// #0
  405a4c:	mov	x1, #0x0                   	// #0
  405a50:	ldr	w0, [sp, #60]
  405a54:	bl	402f10 <lseek64@plt>
  405a58:	cmn	x0, #0x1
  405a5c:	b.ne	405af0 <allocate_journal_field+0x1a4>  // b.any
  405a60:	mov	w0, #0x4                   	// #4
  405a64:	str	w0, [sp, #100]
  405a68:	bl	403220 <__errno_location@plt>
  405a6c:	ldr	w0, [x0]
  405a70:	str	w0, [sp, #104]
  405a74:	str	wzr, [sp, #108]
  405a78:	ldr	w0, [sp, #108]
  405a7c:	bl	403660 <log_get_max_level_realm@plt>
  405a80:	mov	w1, w0
  405a84:	ldr	w0, [sp, #100]
  405a88:	and	w0, w0, #0x7
  405a8c:	cmp	w1, w0
  405a90:	b.lt	405ad8 <allocate_journal_field+0x18c>  // b.tstop
  405a94:	ldr	w0, [sp, #108]
  405a98:	lsl	w1, w0, #10
  405a9c:	ldr	w0, [sp, #100]
  405aa0:	orr	w6, w1, w0
  405aa4:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  405aa8:	add	x1, x0, #0xd73
  405aac:	adrp	x0, 40b000 <_fini+0x3a0>
  405ab0:	add	x5, x0, #0x2f0
  405ab4:	adrp	x0, 40c000 <_fini+0x13a0>
  405ab8:	add	x4, x0, #0x338
  405abc:	mov	w3, #0x1f1                 	// #497
  405ac0:	mov	x2, x1
  405ac4:	ldr	w1, [sp, #104]
  405ac8:	mov	w0, w6
  405acc:	bl	4033b0 <log_internal_realm@plt>
  405ad0:	mov	w19, w0
  405ad4:	b	405d20 <allocate_journal_field+0x3d4>
  405ad8:	ldr	w0, [sp, #104]
  405adc:	cmp	w0, #0x0
  405ae0:	cneg	w0, w0, lt  // lt = tstop
  405ae4:	and	w0, w0, #0xff
  405ae8:	neg	w19, w0
  405aec:	b	405d20 <allocate_journal_field+0x3d4>
  405af0:	ldr	x0, [sp, #48]
  405af4:	add	x0, x0, #0x9
  405af8:	bl	4033a0 <malloc@plt>
  405afc:	str	x0, [sp, #112]
  405b00:	ldr	x0, [sp, #112]
  405b04:	cmp	x0, #0x0
  405b08:	b.ne	405b88 <allocate_journal_field+0x23c>  // b.any
  405b0c:	mov	w0, #0x4                   	// #4
  405b10:	str	w0, [sp, #88]
  405b14:	str	wzr, [sp, #92]
  405b18:	str	wzr, [sp, #96]
  405b1c:	ldr	w0, [sp, #96]
  405b20:	bl	403660 <log_get_max_level_realm@plt>
  405b24:	mov	w1, w0
  405b28:	ldr	w0, [sp, #88]
  405b2c:	and	w0, w0, #0x7
  405b30:	cmp	w1, w0
  405b34:	b.lt	405b78 <allocate_journal_field+0x22c>  // b.tstop
  405b38:	ldr	w0, [sp, #96]
  405b3c:	lsl	w1, w0, #10
  405b40:	ldr	w0, [sp, #88]
  405b44:	orr	w6, w1, w0
  405b48:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  405b4c:	add	x1, x0, #0xd73
  405b50:	adrp	x0, 40b000 <_fini+0x3a0>
  405b54:	add	x5, x0, #0x308
  405b58:	adrp	x0, 40c000 <_fini+0x13a0>
  405b5c:	add	x4, x0, #0x338
  405b60:	mov	w3, #0x1f5                 	// #501
  405b64:	mov	x2, x1
  405b68:	ldr	w1, [sp, #92]
  405b6c:	mov	w0, w6
  405b70:	bl	4033b0 <log_internal_realm@plt>
  405b74:	b	405b80 <allocate_journal_field+0x234>
  405b78:	ldr	w0, [sp, #92]
  405b7c:	cmp	w0, #0x0
  405b80:	mov	w19, #0xfffffff4            	// #-12
  405b84:	b	405d20 <allocate_journal_field+0x3d4>
  405b88:	ldr	x3, [sp, #112]
  405b8c:	mov	x2, #0x9                   	// #9
  405b90:	adrp	x0, 40b000 <_fini+0x3a0>
  405b94:	add	x1, x0, #0x350
  405b98:	mov	x0, x3
  405b9c:	bl	403010 <memcpy@plt>
  405ba0:	ldr	x0, [sp, #112]
  405ba4:	add	x0, x0, #0x9
  405ba8:	ldr	x2, [sp, #48]
  405bac:	mov	x1, x0
  405bb0:	ldr	w0, [sp, #60]
  405bb4:	bl	403260 <read@plt>
  405bb8:	str	x0, [sp, #120]
  405bbc:	ldr	x0, [sp, #120]
  405bc0:	cmp	x0, #0x0
  405bc4:	b.ge	405c54 <allocate_journal_field+0x308>  // b.tcont
  405bc8:	mov	w0, #0x3                   	// #3
  405bcc:	str	w0, [sp, #76]
  405bd0:	ldr	x0, [sp, #120]
  405bd4:	str	w0, [sp, #80]
  405bd8:	str	wzr, [sp, #84]
  405bdc:	ldr	w0, [sp, #84]
  405be0:	bl	403660 <log_get_max_level_realm@plt>
  405be4:	mov	w1, w0
  405be8:	ldr	w0, [sp, #76]
  405bec:	and	w0, w0, #0x7
  405bf0:	cmp	w1, w0
  405bf4:	b.lt	405c3c <allocate_journal_field+0x2f0>  // b.tstop
  405bf8:	ldr	w0, [sp, #84]
  405bfc:	lsl	w1, w0, #10
  405c00:	ldr	w0, [sp, #76]
  405c04:	orr	w6, w1, w0
  405c08:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  405c0c:	add	x1, x0, #0xd73
  405c10:	adrp	x0, 40b000 <_fini+0x3a0>
  405c14:	add	x5, x0, #0x360
  405c18:	adrp	x0, 40c000 <_fini+0x13a0>
  405c1c:	add	x4, x0, #0x338
  405c20:	mov	w3, #0x1fd                 	// #509
  405c24:	mov	x2, x1
  405c28:	ldr	w1, [sp, #80]
  405c2c:	mov	w0, w6
  405c30:	bl	4033b0 <log_internal_realm@plt>
  405c34:	mov	w19, w0
  405c38:	b	405d20 <allocate_journal_field+0x3d4>
  405c3c:	ldr	w0, [sp, #80]
  405c40:	cmp	w0, #0x0
  405c44:	cneg	w0, w0, lt  // lt = tstop
  405c48:	and	w0, w0, #0xff
  405c4c:	neg	w19, w0
  405c50:	b	405d20 <allocate_journal_field+0x3d4>
  405c54:	ldr	x0, [sp, #120]
  405c58:	ldr	x1, [sp, #48]
  405c5c:	cmp	x1, x0
  405c60:	b.ls	405cf4 <allocate_journal_field+0x3a8>  // b.plast
  405c64:	mov	w0, #0x3                   	// #3
  405c68:	str	w0, [sp, #64]
  405c6c:	mov	w0, #0x5                   	// #5
  405c70:	movk	w0, #0x4000, lsl #16
  405c74:	str	w0, [sp, #68]
  405c78:	str	wzr, [sp, #72]
  405c7c:	ldr	w0, [sp, #72]
  405c80:	bl	403660 <log_get_max_level_realm@plt>
  405c84:	mov	w1, w0
  405c88:	ldr	w0, [sp, #64]
  405c8c:	and	w0, w0, #0x7
  405c90:	cmp	w1, w0
  405c94:	b.lt	405cdc <allocate_journal_field+0x390>  // b.tstop
  405c98:	ldr	w0, [sp, #72]
  405c9c:	lsl	w1, w0, #10
  405ca0:	ldr	w0, [sp, #64]
  405ca4:	orr	w6, w1, w0
  405ca8:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  405cac:	add	x1, x0, #0xd73
  405cb0:	adrp	x0, 40b000 <_fini+0x3a0>
  405cb4:	add	x5, x0, #0x380
  405cb8:	adrp	x0, 40c000 <_fini+0x13a0>
  405cbc:	add	x4, x0, #0x338
  405cc0:	mov	w3, #0x1ff                 	// #511
  405cc4:	mov	x2, x1
  405cc8:	ldr	w1, [sp, #68]
  405ccc:	mov	w0, w6
  405cd0:	bl	4033b0 <log_internal_realm@plt>
  405cd4:	mov	w19, w0
  405cd8:	b	405d20 <allocate_journal_field+0x3d4>
  405cdc:	ldr	w0, [sp, #68]
  405ce0:	cmp	w0, #0x0
  405ce4:	cneg	w0, w0, lt  // lt = tstop
  405ce8:	and	w0, w0, #0xff
  405cec:	neg	w19, w0
  405cf0:	b	405d20 <allocate_journal_field+0x3d4>
  405cf4:	ldr	x0, [sp, #112]
  405cf8:	str	x0, [sp, #128]
  405cfc:	str	xzr, [sp, #112]
  405d00:	ldr	x1, [sp, #128]
  405d04:	ldr	x0, [sp, #40]
  405d08:	str	x1, [x0]
  405d0c:	ldr	x0, [sp, #48]
  405d10:	add	x1, x0, #0x9
  405d14:	ldr	x0, [sp, #32]
  405d18:	str	x1, [x0]
  405d1c:	mov	w19, #0x0                   	// #0
  405d20:	add	x0, sp, #0x70
  405d24:	bl	4038ac <freep>
  405d28:	mov	w1, w19
  405d2c:	adrp	x0, 41d000 <__FRAME_END__+0xfdec>
  405d30:	add	x0, x0, #0x948
  405d34:	ldr	x2, [sp, #136]
  405d38:	ldr	x0, [x0]
  405d3c:	eor	x0, x2, x0
  405d40:	cmp	x0, #0x0
  405d44:	b.eq	405d4c <allocate_journal_field+0x400>  // b.none
  405d48:	bl	4032b0 <__stack_chk_fail@plt>
  405d4c:	mov	w0, w1
  405d50:	ldr	x19, [sp, #16]
  405d54:	ldp	x29, x30, [sp], #144
  405d58:	ret

0000000000405d5c <compose_open_fds>:
  405d5c:	stp	x29, x30, [sp, #-176]!
  405d60:	mov	x29, sp
  405d64:	stp	x19, x20, [sp, #16]
  405d68:	str	w0, [x29, #44]
  405d6c:	str	x1, [x29, #32]
  405d70:	adrp	x0, 41d000 <__FRAME_END__+0xfdec>
  405d74:	add	x0, x0, #0x948
  405d78:	ldr	x1, [x0]
  405d7c:	str	x1, [x29, #168]
  405d80:	mov	x1, #0x0                   	// #0
  405d84:	str	xzr, [x29, #64]
  405d88:	mov	w0, #0xffffffff            	// #-1
  405d8c:	str	w0, [x29, #48]
  405d90:	str	xzr, [x29, #72]
  405d94:	str	xzr, [x29, #80]
  405d98:	adrp	x0, 40b000 <_fini+0x3a0>
  405d9c:	add	x0, x0, #0x398
  405da0:	str	x0, [x29, #120]
  405da4:	str	xzr, [x29, #128]
  405da8:	str	xzr, [x29, #88]
  405dac:	ldr	w0, [x29, #44]
  405db0:	lsr	w0, w0, #31
  405db4:	and	w0, w0, #0xff
  405db8:	and	x0, x0, #0xff
  405dbc:	cmp	x0, #0x0
  405dc0:	b.eq	405dec <compose_open_fds+0x90>  // b.none
  405dc4:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  405dc8:	add	x1, x0, #0xd73
  405dcc:	adrp	x0, 40c000 <_fini+0x13a0>
  405dd0:	add	x4, x0, #0x350
  405dd4:	mov	w3, #0x220                 	// #544
  405dd8:	mov	x2, x1
  405ddc:	adrp	x0, 40b000 <_fini+0x3a0>
  405de0:	add	x1, x0, #0x3a0
  405de4:	mov	w0, #0x0                   	// #0
  405de8:	bl	403080 <log_assert_failed_realm@plt>
  405dec:	ldr	x0, [x29, #32]
  405df0:	cmp	x0, #0x0
  405df4:	cset	w0, eq  // eq = none
  405df8:	and	w0, w0, #0xff
  405dfc:	and	x0, x0, #0xff
  405e00:	cmp	x0, #0x0
  405e04:	b.eq	405e30 <compose_open_fds+0xd4>  // b.none
  405e08:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  405e0c:	add	x1, x0, #0xd73
  405e10:	adrp	x0, 40c000 <_fini+0x13a0>
  405e14:	add	x4, x0, #0x350
  405e18:	mov	w3, #0x221                 	// #545
  405e1c:	mov	x2, x1
  405e20:	adrp	x0, 40b000 <_fini+0x3a0>
  405e24:	add	x1, x0, #0x3b0
  405e28:	mov	w0, #0x0                   	// #0
  405e2c:	bl	403080 <log_assert_failed_realm@plt>
  405e30:	ldr	w0, [x29, #44]
  405e34:	str	w0, [x29, #52]
  405e38:	ldr	w0, [x29, #52]
  405e3c:	cmp	w0, #0x0
  405e40:	b.ne	405e54 <compose_open_fds+0xf8>  // b.any
  405e44:	adrp	x0, 40b000 <_fini+0x3a0>
  405e48:	add	x0, x0, #0x3c8
  405e4c:	str	x0, [x29, #136]
  405e50:	b	405f20 <compose_open_fds+0x1c4>
  405e54:	mov	x0, #0x16                  	// #22
  405e58:	str	x0, [x29, #144]
  405e5c:	ldr	x1, [x29, #144]
  405e60:	mov	x0, #0x1                   	// #1
  405e64:	bl	4038d0 <size_multiply_overflow>
  405e68:	and	w0, w0, #0xff
  405e6c:	and	x0, x0, #0xff
  405e70:	cmp	x0, #0x0
  405e74:	b.eq	405ea0 <compose_open_fds+0x144>  // b.none
  405e78:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  405e7c:	add	x1, x0, #0xd73
  405e80:	adrp	x0, 40c000 <_fini+0x13a0>
  405e84:	add	x4, x0, #0x350
  405e88:	mov	w3, #0x223                 	// #547
  405e8c:	mov	x2, x1
  405e90:	adrp	x0, 40b000 <_fini+0x3a0>
  405e94:	add	x1, x0, #0x3d8
  405e98:	mov	w0, #0x0                   	// #0
  405e9c:	bl	403080 <log_assert_failed_realm@plt>
  405ea0:	ldr	x0, [x29, #144]
  405ea4:	cmp	x0, #0x400, lsl #12
  405ea8:	cset	w0, hi  // hi = pmore
  405eac:	and	w0, w0, #0xff
  405eb0:	and	x0, x0, #0xff
  405eb4:	cmp	x0, #0x0
  405eb8:	b.eq	405ee4 <compose_open_fds+0x188>  // b.none
  405ebc:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  405ec0:	add	x1, x0, #0xd73
  405ec4:	adrp	x0, 40c000 <_fini+0x13a0>
  405ec8:	add	x4, x0, #0x350
  405ecc:	mov	w3, #0x223                 	// #547
  405ed0:	mov	x2, x1
  405ed4:	adrp	x0, 40b000 <_fini+0x3a0>
  405ed8:	add	x1, x0, #0x408
  405edc:	mov	w0, #0x0                   	// #0
  405ee0:	bl	403080 <log_assert_failed_realm@plt>
  405ee4:	ldr	x0, [x29, #144]
  405ee8:	add	x0, x0, #0xf
  405eec:	lsr	x0, x0, #4
  405ef0:	lsl	x0, x0, #4
  405ef4:	sub	sp, sp, x0
  405ef8:	mov	x0, sp
  405efc:	add	x0, x0, #0xf
  405f00:	lsr	x0, x0, #4
  405f04:	lsl	x0, x0, #4
  405f08:	str	x0, [x29, #136]
  405f0c:	ldr	w2, [x29, #52]
  405f10:	adrp	x0, 40b000 <_fini+0x3a0>
  405f14:	add	x1, x0, #0x428
  405f18:	ldr	x0, [x29, #136]
  405f1c:	bl	403560 <sprintf@plt>
  405f20:	ldr	x0, [x29, #136]
  405f24:	str	x0, [x29, #152]
  405f28:	ldr	x0, [x29, #152]
  405f2c:	bl	403480 <opendir@plt>
  405f30:	str	x0, [x29, #64]
  405f34:	ldr	x0, [x29, #64]
  405f38:	cmp	x0, #0x0
  405f3c:	b.ne	405f50 <compose_open_fds+0x1f4>  // b.any
  405f40:	bl	403220 <__errno_location@plt>
  405f44:	ldr	w0, [x0]
  405f48:	neg	w19, w0
  405f4c:	b	406244 <compose_open_fds+0x4e8>
  405f50:	ldr	x0, [x29, #64]
  405f54:	bl	403070 <dirfd@plt>
  405f58:	mov	w3, w0
  405f5c:	mov	w2, #0xc000                	// #49152
  405f60:	movk	w2, #0x28, lsl #16
  405f64:	adrp	x0, 40b000 <_fini+0x3a0>
  405f68:	add	x1, x0, #0x438
  405f6c:	mov	w0, w3
  405f70:	bl	402e50 <openat64@plt>
  405f74:	str	w0, [x29, #48]
  405f78:	ldr	w0, [x29, #48]
  405f7c:	cmp	w0, #0x0
  405f80:	b.ge	405f94 <compose_open_fds+0x238>  // b.tcont
  405f84:	bl	403220 <__errno_location@plt>
  405f88:	ldr	w0, [x0]
  405f8c:	neg	w19, w0
  405f90:	b	406244 <compose_open_fds+0x4e8>
  405f94:	add	x1, x29, #0x58
  405f98:	add	x0, x29, #0x48
  405f9c:	bl	4031f0 <open_memstream_unlocked@plt>
  405fa0:	str	x0, [x29, #80]
  405fa4:	ldr	x0, [x29, #80]
  405fa8:	cmp	x0, #0x0
  405fac:	b.ne	405fb8 <compose_open_fds+0x25c>  // b.any
  405fb0:	mov	w19, #0xfffffff4            	// #-12
  405fb4:	b	406244 <compose_open_fds+0x4e8>
  405fb8:	bl	403220 <__errno_location@plt>
  405fbc:	str	wzr, [x0]
  405fc0:	ldr	x0, [x29, #64]
  405fc4:	bl	403090 <readdir64@plt>
  405fc8:	str	x0, [x29, #128]
  405fcc:	ldr	x0, [x29, #128]
  405fd0:	cmp	x0, #0x0
  405fd4:	b.ne	405ff8 <compose_open_fds+0x29c>  // b.any
  405fd8:	bl	403220 <__errno_location@plt>
  405fdc:	ldr	w0, [x0]
  405fe0:	cmp	w0, #0x0
  405fe4:	b.le	4061f0 <compose_open_fds+0x494>
  405fe8:	bl	403220 <__errno_location@plt>
  405fec:	ldr	w0, [x0]
  405ff0:	neg	w19, w0
  405ff4:	b	406244 <compose_open_fds+0x4e8>
  405ff8:	ldr	x0, [x29, #128]
  405ffc:	add	x0, x0, #0x13
  406000:	bl	402fa0 <hidden_or_backup_file@plt>
  406004:	and	w0, w0, #0xff
  406008:	cmp	w0, #0x0
  40600c:	b.ne	4061d4 <compose_open_fds+0x478>  // b.any
  406010:	str	xzr, [x29, #96]
  406014:	str	xzr, [x29, #104]
  406018:	ldr	x0, [x29, #64]
  40601c:	bl	403070 <dirfd@plt>
  406020:	mov	w3, w0
  406024:	ldr	x0, [x29, #128]
  406028:	add	x0, x0, #0x13
  40602c:	add	x1, x29, #0x68
  406030:	mov	x2, x1
  406034:	mov	x1, x0
  406038:	mov	w0, w3
  40603c:	bl	403490 <readlinkat_malloc@plt>
  406040:	str	w0, [x29, #56]
  406044:	ldr	w0, [x29, #56]
  406048:	cmp	w0, #0x0
  40604c:	b.ge	40605c <compose_open_fds+0x300>  // b.tcont
  406050:	ldr	w19, [x29, #56]
  406054:	mov	w20, #0x0                   	// #0
  406058:	b	40618c <compose_open_fds+0x430>
  40605c:	ldr	x5, [x29, #80]
  406060:	ldr	x0, [x29, #128]
  406064:	add	x0, x0, #0x13
  406068:	ldr	x1, [x29, #104]
  40606c:	mov	x4, x1
  406070:	mov	x3, x0
  406074:	ldr	x2, [x29, #120]
  406078:	adrp	x0, 40b000 <_fini+0x3a0>
  40607c:	add	x1, x0, #0x448
  406080:	mov	x0, x5
  406084:	bl	402fe0 <fprintf@plt>
  406088:	adrp	x0, 40b000 <_fini+0x3a0>
  40608c:	add	x0, x0, #0x458
  406090:	str	x0, [x29, #120]
  406094:	ldr	w3, [x29, #48]
  406098:	ldr	x0, [x29, #128]
  40609c:	add	x0, x0, #0x13
  4060a0:	mov	w2, #0x8000                	// #32768
  4060a4:	movk	w2, #0x8, lsl #16
  4060a8:	mov	x1, x0
  4060ac:	mov	w0, w3
  4060b0:	bl	402e50 <openat64@plt>
  4060b4:	str	w0, [x29, #60]
  4060b8:	ldr	w0, [x29, #60]
  4060bc:	cmp	w0, #0x0
  4060c0:	b.ge	4060cc <compose_open_fds+0x370>  // b.tcont
  4060c4:	mov	w20, #0x1                   	// #1
  4060c8:	b	40618c <compose_open_fds+0x430>
  4060cc:	adrp	x0, 40b000 <_fini+0x3a0>
  4060d0:	add	x1, x0, #0x460
  4060d4:	ldr	w0, [x29, #60]
  4060d8:	bl	402f00 <fdopen@plt>
  4060dc:	str	x0, [x29, #96]
  4060e0:	ldr	x0, [x29, #96]
  4060e4:	cmp	x0, #0x0
  4060e8:	b.ne	4060fc <compose_open_fds+0x3a0>  // b.any
  4060ec:	ldr	w0, [x29, #60]
  4060f0:	bl	403060 <safe_close@plt>
  4060f4:	mov	w20, #0x1                   	// #1
  4060f8:	b	40618c <compose_open_fds+0x430>
  4060fc:	str	xzr, [x29, #112]
  406100:	ldr	x0, [x29, #96]
  406104:	add	x1, x29, #0x70
  406108:	mov	x2, x1
  40610c:	mov	x1, #0x100000              	// #1048576
  406110:	bl	403b90 <read_line>
  406114:	str	w0, [x29, #56]
  406118:	ldr	w0, [x29, #56]
  40611c:	cmp	w0, #0x0
  406120:	b.ge	406130 <compose_open_fds+0x3d4>  // b.tcont
  406124:	ldr	w19, [x29, #56]
  406128:	mov	w20, #0x0                   	// #0
  40612c:	b	406164 <compose_open_fds+0x408>
  406130:	ldr	w0, [x29, #56]
  406134:	cmp	w0, #0x0
  406138:	b.ne	406144 <compose_open_fds+0x3e8>  // b.any
  40613c:	mov	w20, #0x1                   	// #1
  406140:	b	406164 <compose_open_fds+0x408>
  406144:	ldr	x0, [x29, #112]
  406148:	ldr	x1, [x29, #80]
  40614c:	bl	4035c0 <fputs@plt>
  406150:	ldr	x0, [x29, #80]
  406154:	mov	x1, x0
  406158:	mov	w0, #0xa                   	// #10
  40615c:	bl	403120 <fputc@plt>
  406160:	mov	w20, #0x2                   	// #2
  406164:	add	x0, x29, #0x70
  406168:	bl	4038ac <freep>
  40616c:	cmp	w20, #0x0
  406170:	b.eq	406180 <compose_open_fds+0x424>  // b.none
  406174:	cmp	w20, #0x2
  406178:	b.ne	406188 <compose_open_fds+0x42c>  // b.any
  40617c:	b	4060fc <compose_open_fds+0x3a0>
  406180:	mov	w20, #0x0                   	// #0
  406184:	b	40618c <compose_open_fds+0x430>
  406188:	mov	w20, #0x2                   	// #2
  40618c:	add	x0, x29, #0x68
  406190:	bl	4038ac <freep>
  406194:	cmp	w20, #0x0
  406198:	b.eq	4061a8 <compose_open_fds+0x44c>  // b.none
  40619c:	cmp	w20, #0x2
  4061a0:	b.ne	4061b0 <compose_open_fds+0x454>  // b.any
  4061a4:	b	4061b8 <compose_open_fds+0x45c>
  4061a8:	mov	w20, #0x0                   	// #0
  4061ac:	b	4061bc <compose_open_fds+0x460>
  4061b0:	mov	w20, #0x1                   	// #1
  4061b4:	b	4061bc <compose_open_fds+0x460>
  4061b8:	mov	w20, #0x2                   	// #2
  4061bc:	add	x0, x29, #0x60
  4061c0:	bl	403b08 <fclosep>
  4061c4:	cmp	w20, #0x0
  4061c8:	b.eq	406244 <compose_open_fds+0x4e8>  // b.none
  4061cc:	cmp	w20, #0x2
  4061d0:	b	4061d8 <compose_open_fds+0x47c>
  4061d4:	nop
  4061d8:	bl	403220 <__errno_location@plt>
  4061dc:	str	wzr, [x0]
  4061e0:	ldr	x0, [x29, #64]
  4061e4:	bl	403090 <readdir64@plt>
  4061e8:	str	x0, [x29, #128]
  4061ec:	b	405fcc <compose_open_fds+0x270>
  4061f0:	nop
  4061f4:	bl	403220 <__errno_location@plt>
  4061f8:	str	wzr, [x0]
  4061fc:	ldr	x0, [x29, #80]
  406200:	bl	402e20 <safe_fclose@plt>
  406204:	str	x0, [x29, #80]
  406208:	bl	403220 <__errno_location@plt>
  40620c:	ldr	w0, [x0]
  406210:	cmp	w0, #0x0
  406214:	b.le	406228 <compose_open_fds+0x4cc>
  406218:	bl	403220 <__errno_location@plt>
  40621c:	ldr	w0, [x0]
  406220:	neg	w19, w0
  406224:	b	406244 <compose_open_fds+0x4e8>
  406228:	ldr	x0, [x29, #72]
  40622c:	str	x0, [x29, #160]
  406230:	str	xzr, [x29, #72]
  406234:	ldr	x1, [x29, #160]
  406238:	ldr	x0, [x29, #32]
  40623c:	str	x1, [x0]
  406240:	mov	w19, #0x0                   	// #0
  406244:	add	x0, x29, #0x50
  406248:	bl	403b08 <fclosep>
  40624c:	add	x0, x29, #0x48
  406250:	bl	4038ac <freep>
  406254:	add	x0, x29, #0x30
  406258:	bl	403ae4 <closep>
  40625c:	add	x0, x29, #0x40
  406260:	bl	403b2c <closedirp>
  406264:	mov	w1, w19
  406268:	adrp	x0, 41d000 <__FRAME_END__+0xfdec>
  40626c:	add	x0, x0, #0x948
  406270:	ldr	x2, [x29, #168]
  406274:	ldr	x0, [x0]
  406278:	eor	x0, x2, x0
  40627c:	cmp	x0, #0x0
  406280:	b.eq	406288 <compose_open_fds+0x52c>  // b.none
  406284:	bl	4032b0 <__stack_chk_fail@plt>
  406288:	mov	w0, w1
  40628c:	mov	sp, x29
  406290:	ldp	x19, x20, [sp, #16]
  406294:	ldp	x29, x30, [sp], #176
  406298:	ret

000000000040629c <get_process_ns>:
  40629c:	stp	x29, x30, [sp, #-240]!
  4062a0:	mov	x29, sp
  4062a4:	str	x19, [sp, #16]
  4062a8:	str	w0, [x29, #60]
  4062ac:	str	x1, [x29, #48]
  4062b0:	str	x2, [x29, #40]
  4062b4:	adrp	x0, 41d000 <__FRAME_END__+0xfdec>
  4062b8:	add	x0, x0, #0x948
  4062bc:	ldr	x1, [x0]
  4062c0:	str	x1, [x29, #232]
  4062c4:	mov	x1, #0x0                   	// #0
  4062c8:	ldr	w0, [x29, #60]
  4062cc:	str	w0, [x29, #76]
  4062d0:	ldr	w0, [x29, #76]
  4062d4:	cmp	w0, #0x0
  4062d8:	b.ne	4062ec <get_process_ns+0x50>  // b.any
  4062dc:	adrp	x0, 40b000 <_fini+0x3a0>
  4062e0:	add	x0, x0, #0x468
  4062e4:	str	x0, [x29, #80]
  4062e8:	b	4063b8 <get_process_ns+0x11c>
  4062ec:	mov	x0, #0x16                  	// #22
  4062f0:	str	x0, [x29, #88]
  4062f4:	ldr	x1, [x29, #88]
  4062f8:	mov	x0, #0x1                   	// #1
  4062fc:	bl	4038d0 <size_multiply_overflow>
  406300:	and	w0, w0, #0xff
  406304:	and	x0, x0, #0xff
  406308:	cmp	x0, #0x0
  40630c:	b.eq	406338 <get_process_ns+0x9c>  // b.none
  406310:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  406314:	add	x1, x0, #0xd73
  406318:	adrp	x0, 40c000 <_fini+0x13a0>
  40631c:	add	x4, x0, #0x368
  406320:	mov	w3, #0x265                 	// #613
  406324:	mov	x2, x1
  406328:	adrp	x0, 40b000 <_fini+0x3a0>
  40632c:	add	x1, x0, #0x3d8
  406330:	mov	w0, #0x0                   	// #0
  406334:	bl	403080 <log_assert_failed_realm@plt>
  406338:	ldr	x0, [x29, #88]
  40633c:	cmp	x0, #0x400, lsl #12
  406340:	cset	w0, hi  // hi = pmore
  406344:	and	w0, w0, #0xff
  406348:	and	x0, x0, #0xff
  40634c:	cmp	x0, #0x0
  406350:	b.eq	40637c <get_process_ns+0xe0>  // b.none
  406354:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  406358:	add	x1, x0, #0xd73
  40635c:	adrp	x0, 40c000 <_fini+0x13a0>
  406360:	add	x4, x0, #0x368
  406364:	mov	w3, #0x265                 	// #613
  406368:	mov	x2, x1
  40636c:	adrp	x0, 40b000 <_fini+0x3a0>
  406370:	add	x1, x0, #0x408
  406374:	mov	w0, #0x0                   	// #0
  406378:	bl	403080 <log_assert_failed_realm@plt>
  40637c:	ldr	x0, [x29, #88]
  406380:	add	x0, x0, #0xf
  406384:	lsr	x0, x0, #4
  406388:	lsl	x0, x0, #4
  40638c:	sub	sp, sp, x0
  406390:	mov	x0, sp
  406394:	add	x0, x0, #0xf
  406398:	lsr	x0, x0, #4
  40639c:	lsl	x0, x0, #4
  4063a0:	str	x0, [x29, #80]
  4063a4:	ldr	w2, [x29, #76]
  4063a8:	adrp	x0, 40b000 <_fini+0x3a0>
  4063ac:	add	x1, x0, #0x478
  4063b0:	ldr	x0, [x29, #80]
  4063b4:	bl	403560 <sprintf@plt>
  4063b8:	ldr	x0, [x29, #80]
  4063bc:	str	x0, [x29, #96]
  4063c0:	mov	w1, #0x4000                	// #16384
  4063c4:	movk	w1, #0x8, lsl #16
  4063c8:	ldr	x0, [x29, #96]
  4063cc:	bl	4035e0 <open64@plt>
  4063d0:	str	w0, [x29, #72]
  4063d4:	ldr	w0, [x29, #72]
  4063d8:	cmp	w0, #0x0
  4063dc:	b.ge	4063f0 <get_process_ns+0x154>  // b.tcont
  4063e0:	bl	403220 <__errno_location@plt>
  4063e4:	ldr	w0, [x0]
  4063e8:	neg	w19, w0
  4063ec:	b	406430 <get_process_ns+0x194>
  4063f0:	ldr	w0, [x29, #72]
  4063f4:	add	x1, x29, #0x68
  4063f8:	mov	w3, #0x0                   	// #0
  4063fc:	mov	x2, x1
  406400:	ldr	x1, [x29, #48]
  406404:	bl	40ac40 <fstatat64>
  406408:	cmp	w0, #0x0
  40640c:	b.ge	406420 <get_process_ns+0x184>  // b.tcont
  406410:	bl	403220 <__errno_location@plt>
  406414:	ldr	w0, [x0]
  406418:	neg	w19, w0
  40641c:	b	406430 <get_process_ns+0x194>
  406420:	ldr	x1, [x29, #112]
  406424:	ldr	x0, [x29, #40]
  406428:	str	x1, [x0]
  40642c:	mov	w19, #0x0                   	// #0
  406430:	add	x0, x29, #0x48
  406434:	bl	403ae4 <closep>
  406438:	mov	w1, w19
  40643c:	adrp	x0, 41d000 <__FRAME_END__+0xfdec>
  406440:	add	x0, x0, #0x948
  406444:	ldr	x2, [x29, #232]
  406448:	ldr	x0, [x0]
  40644c:	eor	x0, x2, x0
  406450:	cmp	x0, #0x0
  406454:	b.eq	40645c <get_process_ns+0x1c0>  // b.none
  406458:	bl	4032b0 <__stack_chk_fail@plt>
  40645c:	mov	w0, w1
  406460:	mov	sp, x29
  406464:	ldr	x19, [sp, #16]
  406468:	ldp	x29, x30, [sp], #240
  40646c:	ret

0000000000406470 <get_mount_namespace_leader>:
  406470:	stp	x29, x30, [sp, #-80]!
  406474:	mov	x29, sp
  406478:	str	w0, [sp, #28]
  40647c:	str	x1, [sp, #16]
  406480:	adrp	x0, 41d000 <__FRAME_END__+0xfdec>
  406484:	add	x0, x0, #0x948
  406488:	ldr	x1, [x0]
  40648c:	str	x1, [sp, #72]
  406490:	mov	x1, #0x0                   	// #0
  406494:	ldr	w0, [sp, #28]
  406498:	str	w0, [sp, #48]
  40649c:	str	wzr, [sp, #44]
  4064a0:	str	wzr, [sp, #52]
  4064a4:	add	x0, sp, #0x38
  4064a8:	mov	x2, x0
  4064ac:	adrp	x0, 40b000 <_fini+0x3a0>
  4064b0:	add	x1, x0, #0x488
  4064b4:	ldr	w0, [sp, #28]
  4064b8:	bl	40629c <get_process_ns>
  4064bc:	str	w0, [sp, #52]
  4064c0:	ldr	w0, [sp, #52]
  4064c4:	cmp	w0, #0x0
  4064c8:	b.ge	4064d4 <get_mount_namespace_leader+0x64>  // b.tcont
  4064cc:	ldr	w0, [sp, #52]
  4064d0:	b	406574 <get_mount_namespace_leader+0x104>
  4064d4:	add	x0, sp, #0x2c
  4064d8:	mov	x1, x0
  4064dc:	ldr	w0, [sp, #48]
  4064e0:	bl	403190 <get_process_ppid@plt>
  4064e4:	str	w0, [sp, #52]
  4064e8:	ldr	w0, [sp, #52]
  4064ec:	cmp	w0, #0x0
  4064f0:	b.ge	4064fc <get_mount_namespace_leader+0x8c>  // b.tcont
  4064f4:	ldr	w0, [sp, #52]
  4064f8:	b	406574 <get_mount_namespace_leader+0x104>
  4064fc:	ldr	w3, [sp, #44]
  406500:	add	x0, sp, #0x40
  406504:	mov	x2, x0
  406508:	adrp	x0, 40b000 <_fini+0x3a0>
  40650c:	add	x1, x0, #0x488
  406510:	mov	w0, w3
  406514:	bl	40629c <get_process_ns>
  406518:	str	w0, [sp, #52]
  40651c:	ldr	w0, [sp, #52]
  406520:	cmp	w0, #0x0
  406524:	b.ge	406530 <get_mount_namespace_leader+0xc0>  // b.tcont
  406528:	ldr	w0, [sp, #52]
  40652c:	b	406574 <get_mount_namespace_leader+0x104>
  406530:	ldr	x1, [sp, #56]
  406534:	ldr	x0, [sp, #64]
  406538:	cmp	x1, x0
  40653c:	b.eq	406554 <get_mount_namespace_leader+0xe4>  // b.none
  406540:	ldr	w1, [sp, #44]
  406544:	ldr	x0, [sp, #16]
  406548:	str	w1, [x0]
  40654c:	mov	w0, #0x0                   	// #0
  406550:	b	406574 <get_mount_namespace_leader+0x104>
  406554:	ldr	w0, [sp, #44]
  406558:	cmp	w0, #0x1
  40655c:	b.ne	406568 <get_mount_namespace_leader+0xf8>  // b.any
  406560:	mov	w0, #0xfffffffe            	// #-2
  406564:	b	406574 <get_mount_namespace_leader+0x104>
  406568:	ldr	w0, [sp, #44]
  40656c:	str	w0, [sp, #48]
  406570:	b	4064d4 <get_mount_namespace_leader+0x64>
  406574:	mov	w1, w0
  406578:	adrp	x0, 41d000 <__FRAME_END__+0xfdec>
  40657c:	add	x0, x0, #0x948
  406580:	ldr	x2, [sp, #72]
  406584:	ldr	x0, [x0]
  406588:	eor	x0, x2, x0
  40658c:	cmp	x0, #0x0
  406590:	b.eq	406598 <get_mount_namespace_leader+0x128>  // b.none
  406594:	bl	4032b0 <__stack_chk_fail@plt>
  406598:	mov	w0, w1
  40659c:	ldp	x29, x30, [sp], #80
  4065a0:	ret

00000000004065a4 <get_process_container_parent_cmdline>:
  4065a4:	stp	x29, x30, [sp, #-336]!
  4065a8:	mov	x29, sp
  4065ac:	str	w0, [x29, #28]
  4065b0:	str	x1, [x29, #16]
  4065b4:	adrp	x0, 41d000 <__FRAME_END__+0xfdec>
  4065b8:	add	x0, x0, #0x948
  4065bc:	ldr	x1, [x0]
  4065c0:	str	x1, [x29, #328]
  4065c4:	mov	x1, #0x0                   	// #0
  4065c8:	str	wzr, [x29, #40]
  4065cc:	add	x0, x29, #0x48
  4065d0:	mov	x1, x0
  4065d4:	adrp	x0, 40b000 <_fini+0x3a0>
  4065d8:	add	x0, x0, #0x490
  4065dc:	bl	40ac20 <stat64>
  4065e0:	cmp	w0, #0x0
  4065e4:	b.ge	4065f8 <get_process_container_parent_cmdline+0x54>  // b.tcont
  4065e8:	bl	403220 <__errno_location@plt>
  4065ec:	ldr	w0, [x0]
  4065f0:	neg	w0, w0
  4065f4:	b	406790 <get_process_container_parent_cmdline+0x1ec>
  4065f8:	ldr	w0, [x29, #28]
  4065fc:	str	w0, [x29, #44]
  406600:	ldr	w0, [x29, #44]
  406604:	cmp	w0, #0x0
  406608:	b.ne	40661c <get_process_container_parent_cmdline+0x78>  // b.any
  40660c:	adrp	x0, 40b000 <_fini+0x3a0>
  406610:	add	x0, x0, #0x498
  406614:	str	x0, [x29, #48]
  406618:	b	4066e8 <get_process_container_parent_cmdline+0x144>
  40661c:	mov	x0, #0x18                  	// #24
  406620:	str	x0, [x29, #56]
  406624:	ldr	x1, [x29, #56]
  406628:	mov	x0, #0x1                   	// #1
  40662c:	bl	4038d0 <size_multiply_overflow>
  406630:	and	w0, w0, #0xff
  406634:	and	x0, x0, #0xff
  406638:	cmp	x0, #0x0
  40663c:	b.eq	406668 <get_process_container_parent_cmdline+0xc4>  // b.none
  406640:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  406644:	add	x1, x0, #0xd73
  406648:	adrp	x0, 40c000 <_fini+0x13a0>
  40664c:	add	x4, x0, #0x378
  406650:	mov	w3, #0x2a2                 	// #674
  406654:	mov	x2, x1
  406658:	adrp	x0, 40b000 <_fini+0x3a0>
  40665c:	add	x1, x0, #0x3d8
  406660:	mov	w0, #0x0                   	// #0
  406664:	bl	403080 <log_assert_failed_realm@plt>
  406668:	ldr	x0, [x29, #56]
  40666c:	cmp	x0, #0x400, lsl #12
  406670:	cset	w0, hi  // hi = pmore
  406674:	and	w0, w0, #0xff
  406678:	and	x0, x0, #0xff
  40667c:	cmp	x0, #0x0
  406680:	b.eq	4066ac <get_process_container_parent_cmdline+0x108>  // b.none
  406684:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  406688:	add	x1, x0, #0xd73
  40668c:	adrp	x0, 40c000 <_fini+0x13a0>
  406690:	add	x4, x0, #0x378
  406694:	mov	w3, #0x2a2                 	// #674
  406698:	mov	x2, x1
  40669c:	adrp	x0, 40b000 <_fini+0x3a0>
  4066a0:	add	x1, x0, #0x408
  4066a4:	mov	w0, #0x0                   	// #0
  4066a8:	bl	403080 <log_assert_failed_realm@plt>
  4066ac:	ldr	x0, [x29, #56]
  4066b0:	add	x0, x0, #0xf
  4066b4:	lsr	x0, x0, #4
  4066b8:	lsl	x0, x0, #4
  4066bc:	sub	sp, sp, x0
  4066c0:	mov	x0, sp
  4066c4:	add	x0, x0, #0xf
  4066c8:	lsr	x0, x0, #4
  4066cc:	lsl	x0, x0, #4
  4066d0:	str	x0, [x29, #48]
  4066d4:	ldr	w2, [x29, #44]
  4066d8:	adrp	x0, 40b000 <_fini+0x3a0>
  4066dc:	add	x1, x0, #0x4a8
  4066e0:	ldr	x0, [x29, #48]
  4066e4:	bl	403560 <sprintf@plt>
  4066e8:	ldr	x0, [x29, #48]
  4066ec:	str	x0, [x29, #64]
  4066f0:	add	x0, x29, #0xc8
  4066f4:	mov	x1, x0
  4066f8:	ldr	x0, [x29, #64]
  4066fc:	bl	40ac20 <stat64>
  406700:	cmp	w0, #0x0
  406704:	b.ge	406718 <get_process_container_parent_cmdline+0x174>  // b.tcont
  406708:	bl	403220 <__errno_location@plt>
  40670c:	ldr	w0, [x0]
  406710:	neg	w0, w0
  406714:	b	406790 <get_process_container_parent_cmdline+0x1ec>
  406718:	ldr	x1, [x29, #208]
  40671c:	ldr	x0, [x29, #80]
  406720:	cmp	x1, x0
  406724:	b.ne	406738 <get_process_container_parent_cmdline+0x194>  // b.any
  406728:	ldr	x0, [x29, #16]
  40672c:	str	xzr, [x0]
  406730:	mov	w0, #0x0                   	// #0
  406734:	b	406790 <get_process_container_parent_cmdline+0x1ec>
  406738:	add	x0, x29, #0x24
  40673c:	mov	x1, x0
  406740:	ldr	w0, [x29, #28]
  406744:	bl	406470 <get_mount_namespace_leader>
  406748:	str	w0, [x29, #40]
  40674c:	ldr	w0, [x29, #40]
  406750:	cmp	w0, #0x0
  406754:	b.ge	406760 <get_process_container_parent_cmdline+0x1bc>  // b.tcont
  406758:	ldr	w0, [x29, #40]
  40675c:	b	406790 <get_process_container_parent_cmdline+0x1ec>
  406760:	ldr	w0, [x29, #36]
  406764:	ldr	x3, [x29, #16]
  406768:	mov	w2, #0x0                   	// #0
  40676c:	mov	x1, #0xffffffffffffffff    	// #-1
  406770:	bl	403470 <get_process_cmdline@plt>
  406774:	str	w0, [x29, #40]
  406778:	ldr	w0, [x29, #40]
  40677c:	cmp	w0, #0x0
  406780:	b.ge	40678c <get_process_container_parent_cmdline+0x1e8>  // b.tcont
  406784:	ldr	w0, [x29, #40]
  406788:	b	406790 <get_process_container_parent_cmdline+0x1ec>
  40678c:	mov	w0, #0x1                   	// #1
  406790:	mov	w1, w0
  406794:	adrp	x0, 41d000 <__FRAME_END__+0xfdec>
  406798:	add	x0, x0, #0x948
  40679c:	ldr	x2, [x29, #328]
  4067a0:	ldr	x0, [x0]
  4067a4:	eor	x0, x2, x0
  4067a8:	cmp	x0, #0x0
  4067ac:	b.eq	4067b4 <get_process_container_parent_cmdline+0x210>  // b.none
  4067b0:	bl	4032b0 <__stack_chk_fail@plt>
  4067b4:	mov	w0, w1
  4067b8:	mov	sp, x29
  4067bc:	ldp	x29, x30, [sp], #336
  4067c0:	ret

00000000004067c4 <change_uid_gid>:
  4067c4:	stp	x29, x30, [sp, #-80]!
  4067c8:	mov	x29, sp
  4067cc:	str	x0, [sp, #24]
  4067d0:	adrp	x0, 41d000 <__FRAME_END__+0xfdec>
  4067d4:	add	x0, x0, #0x948
  4067d8:	ldr	x1, [x0]
  4067dc:	str	x1, [sp, #72]
  4067e0:	mov	x1, #0x0                   	// #0
  4067e4:	ldr	x0, [sp, #24]
  4067e8:	ldr	x0, [x0, #8]
  4067ec:	add	x1, sp, #0x28
  4067f0:	bl	403430 <parse_uid@plt>
  4067f4:	str	w0, [sp, #48]
  4067f8:	ldr	w0, [sp, #48]
  4067fc:	cmp	w0, #0x0
  406800:	b.ge	40680c <change_uid_gid+0x48>  // b.tcont
  406804:	ldr	w0, [sp, #48]
  406808:	b	406918 <change_uid_gid+0x154>
  40680c:	ldr	w0, [sp, #40]
  406810:	cmp	w0, #0x3e7
  406814:	b.hi	4068e0 <change_uid_gid+0x11c>  // b.pmore
  406818:	adrp	x0, 40b000 <_fini+0x3a0>
  40681c:	add	x0, x0, #0x4b8
  406820:	str	x0, [sp, #64]
  406824:	add	x2, sp, #0x2c
  406828:	add	x1, sp, #0x28
  40682c:	add	x0, sp, #0x40
  406830:	mov	w5, #0x0                   	// #0
  406834:	mov	x4, #0x0                   	// #0
  406838:	mov	x3, #0x0                   	// #0
  40683c:	bl	4033f0 <get_user_creds@plt>
  406840:	str	w0, [sp, #48]
  406844:	ldr	w0, [sp, #48]
  406848:	cmp	w0, #0x0
  40684c:	b.ge	406908 <change_uid_gid+0x144>  // b.tcont
  406850:	mov	w0, #0x4                   	// #4
  406854:	str	w0, [sp, #52]
  406858:	ldr	w0, [sp, #48]
  40685c:	str	w0, [sp, #56]
  406860:	str	wzr, [sp, #60]
  406864:	ldr	w0, [sp, #60]
  406868:	bl	403660 <log_get_max_level_realm@plt>
  40686c:	mov	w1, w0
  406870:	ldr	w0, [sp, #52]
  406874:	and	w0, w0, #0x7
  406878:	cmp	w1, w0
  40687c:	b.lt	4068c8 <change_uid_gid+0x104>  // b.tstop
  406880:	ldr	w0, [sp, #60]
  406884:	lsl	w1, w0, #10
  406888:	ldr	w0, [sp, #52]
  40688c:	orr	w7, w1, w0
  406890:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  406894:	add	x1, x0, #0xd73
  406898:	ldr	x0, [sp, #64]
  40689c:	mov	x6, x0
  4068a0:	adrp	x0, 40b000 <_fini+0x3a0>
  4068a4:	add	x5, x0, #0x4d0
  4068a8:	adrp	x0, 40c000 <_fini+0x13a0>
  4068ac:	add	x4, x0, #0x3a0
  4068b0:	mov	w3, #0x2c5                 	// #709
  4068b4:	mov	x2, x1
  4068b8:	ldr	w1, [sp, #56]
  4068bc:	mov	w0, w7
  4068c0:	bl	4033b0 <log_internal_realm@plt>
  4068c4:	b	4068d0 <change_uid_gid+0x10c>
  4068c8:	ldr	w0, [sp, #56]
  4068cc:	cmp	w0, #0x0
  4068d0:	str	wzr, [sp, #44]
  4068d4:	ldr	w0, [sp, #44]
  4068d8:	str	w0, [sp, #40]
  4068dc:	b	406908 <change_uid_gid+0x144>
  4068e0:	ldr	x0, [sp, #24]
  4068e4:	ldr	x0, [x0, #16]
  4068e8:	add	x1, sp, #0x2c
  4068ec:	bl	403ca8 <parse_gid>
  4068f0:	str	w0, [sp, #48]
  4068f4:	ldr	w0, [sp, #48]
  4068f8:	cmp	w0, #0x0
  4068fc:	b.ge	406908 <change_uid_gid+0x144>  // b.tcont
  406900:	ldr	w0, [sp, #48]
  406904:	b	406918 <change_uid_gid+0x154>
  406908:	ldr	w0, [sp, #40]
  40690c:	ldr	w1, [sp, #44]
  406910:	mov	x2, #0x0                   	// #0
  406914:	bl	403500 <drop_privileges@plt>
  406918:	mov	w1, w0
  40691c:	adrp	x0, 41d000 <__FRAME_END__+0xfdec>
  406920:	add	x0, x0, #0x948
  406924:	ldr	x2, [sp, #72]
  406928:	ldr	x0, [x0]
  40692c:	eor	x0, x2, x0
  406930:	cmp	x0, #0x0
  406934:	b.eq	40693c <change_uid_gid+0x178>  // b.none
  406938:	bl	4032b0 <__stack_chk_fail@plt>
  40693c:	mov	w0, w1
  406940:	ldp	x29, x30, [sp], #80
  406944:	ret

0000000000406948 <submit_coredump>:
  406948:	stp	x29, x30, [sp, #-368]!
  40694c:	mov	x29, sp
  406950:	str	x19, [sp, #16]
  406954:	sub	sp, sp, #0x10
  406958:	str	x0, [x29, #56]
  40695c:	str	x1, [x29, #48]
  406960:	str	w2, [x29, #44]
  406964:	adrp	x0, 41d000 <__FRAME_END__+0xfdec>
  406968:	add	x0, x0, #0x948
  40696c:	ldr	x1, [x0]
  406970:	str	x1, [x29, #360]
  406974:	mov	x1, #0x0                   	// #0
  406978:	mov	w0, #0xffffffff            	// #-1
  40697c:	str	w0, [x29, #80]
  406980:	mov	w0, #0xffffffff            	// #-1
  406984:	str	w0, [x29, #84]
  406988:	str	xzr, [x29, #152]
  40698c:	str	xzr, [x29, #160]
  406990:	str	xzr, [x29, #168]
  406994:	mov	x0, #0xffffffffffffffff    	// #-1
  406998:	str	x0, [x29, #176]
  40699c:	strb	wzr, [x29, #79]
  4069a0:	ldr	x0, [x29, #56]
  4069a4:	cmp	x0, #0x0
  4069a8:	cset	w0, eq  // eq = none
  4069ac:	and	w0, w0, #0xff
  4069b0:	and	x0, x0, #0xff
  4069b4:	cmp	x0, #0x0
  4069b8:	b.eq	4069e4 <submit_coredump+0x9c>  // b.none
  4069bc:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  4069c0:	add	x1, x0, #0xd73
  4069c4:	adrp	x0, 40c000 <_fini+0x13a0>
  4069c8:	add	x4, x0, #0x3b0
  4069cc:	mov	w3, #0x2de                 	// #734
  4069d0:	mov	x2, x1
  4069d4:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  4069d8:	add	x1, x0, #0xf58
  4069dc:	mov	w0, #0x0                   	// #0
  4069e0:	bl	403080 <log_assert_failed_realm@plt>
  4069e4:	ldr	x0, [x29, #48]
  4069e8:	cmp	x0, #0x0
  4069ec:	cset	w0, eq  // eq = none
  4069f0:	and	w0, w0, #0xff
  4069f4:	and	x0, x0, #0xff
  4069f8:	cmp	x0, #0x0
  4069fc:	b.eq	406a28 <submit_coredump+0xe0>  // b.none
  406a00:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  406a04:	add	x1, x0, #0xd73
  406a08:	adrp	x0, 40c000 <_fini+0x13a0>
  406a0c:	add	x4, x0, #0x3b0
  406a10:	mov	w3, #0x2df                 	// #735
  406a14:	mov	x2, x1
  406a18:	adrp	x0, 40b000 <_fini+0x3a0>
  406a1c:	add	x1, x0, #0x510
  406a20:	mov	w0, #0x0                   	// #0
  406a24:	bl	403080 <log_assert_failed_realm@plt>
  406a28:	ldr	w0, [x29, #44]
  406a2c:	lsr	w0, w0, #31
  406a30:	and	w0, w0, #0xff
  406a34:	and	x0, x0, #0xff
  406a38:	cmp	x0, #0x0
  406a3c:	b.eq	406a68 <submit_coredump+0x120>  // b.none
  406a40:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  406a44:	add	x1, x0, #0xd73
  406a48:	adrp	x0, 40c000 <_fini+0x13a0>
  406a4c:	add	x4, x0, #0x3b0
  406a50:	mov	w3, #0x2e0                 	// #736
  406a54:	mov	x2, x1
  406a58:	adrp	x0, 40b000 <_fini+0x3a0>
  406a5c:	add	x1, x0, #0x518
  406a60:	mov	w0, #0x0                   	// #0
  406a64:	bl	403080 <log_assert_failed_realm@plt>
  406a68:	adrp	x0, 41e000 <arg_storage>
  406a6c:	add	x0, x0, #0x20
  406a70:	ldr	x1, [x0]
  406a74:	adrp	x0, 41e000 <arg_storage>
  406a78:	add	x0, x0, #0x28
  406a7c:	ldr	x0, [x0]
  406a80:	mov	x2, x0
  406a84:	mov	w0, #0xffffffff            	// #-1
  406a88:	bl	40a288 <coredump_vacuum>
  406a8c:	add	x4, x29, #0x4f
  406a90:	add	x3, x29, #0xb0
  406a94:	add	x2, x29, #0x50
  406a98:	add	x1, x29, #0x54
  406a9c:	add	x0, x29, #0x98
  406aa0:	mov	x6, x4
  406aa4:	mov	x5, x3
  406aa8:	mov	x4, x2
  406aac:	mov	x3, x1
  406ab0:	mov	x2, x0
  406ab4:	ldr	w1, [x29, #44]
  406ab8:	ldr	x0, [x29, #56]
  406abc:	bl	404c84 <save_external_coredump>
  406ac0:	str	w0, [x29, #88]
  406ac4:	ldr	w0, [x29, #88]
  406ac8:	cmp	w0, #0x0
  406acc:	b.lt	406c9c <submit_coredump+0x354>  // b.tstop
  406ad0:	ldr	x0, [x29, #152]
  406ad4:	ldr	x1, [x29, #176]
  406ad8:	bl	4048b8 <maybe_remove_external_coredump>
  406adc:	str	w0, [x29, #88]
  406ae0:	ldr	w0, [x29, #88]
  406ae4:	cmp	w0, #0x0
  406ae8:	b.ge	406af4 <submit_coredump+0x1ac>  // b.tcont
  406aec:	ldr	w19, [x29, #88]
  406af0:	b	40738c <submit_coredump+0xa44>
  406af4:	ldr	w0, [x29, #88]
  406af8:	cmp	w0, #0x0
  406afc:	b.ne	406b1c <submit_coredump+0x1d4>  // b.any
  406b00:	ldr	x0, [x29, #152]
  406b04:	mov	x2, x0
  406b08:	adrp	x0, 40b000 <_fini+0x3a0>
  406b0c:	add	x1, x0, #0x528
  406b10:	ldr	x0, [x29, #48]
  406b14:	bl	403360 <iovw_put_string_field@plt>
  406b18:	b	406bbc <submit_coredump+0x274>
  406b1c:	adrp	x0, 41e000 <arg_storage>
  406b20:	add	x0, x0, #0x0
  406b24:	ldr	w0, [x0]
  406b28:	cmp	w0, #0x1
  406b2c:	b.ne	406bbc <submit_coredump+0x274>  // b.any
  406b30:	mov	w0, #0x6                   	// #6
  406b34:	str	w0, [x29, #92]
  406b38:	str	wzr, [x29, #96]
  406b3c:	str	wzr, [x29, #100]
  406b40:	ldr	w0, [x29, #100]
  406b44:	bl	403660 <log_get_max_level_realm@plt>
  406b48:	mov	w1, w0
  406b4c:	ldr	w0, [x29, #92]
  406b50:	and	w0, w0, #0x7
  406b54:	cmp	w1, w0
  406b58:	b.lt	406bb4 <submit_coredump+0x26c>  // b.tstop
  406b5c:	ldr	w0, [x29, #100]
  406b60:	lsl	w1, w0, #10
  406b64:	ldr	w0, [x29, #92]
  406b68:	orr	w8, w1, w0
  406b6c:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  406b70:	add	x1, x0, #0xd73
  406b74:	ldr	x2, [x29, #176]
  406b78:	adrp	x0, 41e000 <arg_storage>
  406b7c:	add	x0, x0, #0x10
  406b80:	ldr	x0, [x0]
  406b84:	mov	x7, x0
  406b88:	mov	x6, x2
  406b8c:	adrp	x0, 40b000 <_fini+0x3a0>
  406b90:	add	x5, x0, #0x540
  406b94:	adrp	x0, 40c000 <_fini+0x13a0>
  406b98:	add	x4, x0, #0x3c0
  406b9c:	mov	w3, #0x2f6                 	// #758
  406ba0:	mov	x2, x1
  406ba4:	ldr	w1, [x29, #96]
  406ba8:	mov	w0, w8
  406bac:	bl	4033b0 <log_internal_realm@plt>
  406bb0:	b	406bbc <submit_coredump+0x274>
  406bb4:	ldr	w0, [x29, #96]
  406bb8:	cmp	w0, #0x0
  406bbc:	ldr	w0, [x29, #84]
  406bc0:	cmp	w0, #0x0
  406bc4:	b.lt	406bd0 <submit_coredump+0x288>  // b.tstop
  406bc8:	ldr	w0, [x29, #84]
  406bcc:	b	406bd4 <submit_coredump+0x28c>
  406bd0:	ldr	w0, [x29, #80]
  406bd4:	adrp	x1, 41e000 <arg_storage>
  406bd8:	add	x1, x1, #0x20
  406bdc:	ldr	x3, [x1]
  406be0:	adrp	x1, 41e000 <arg_storage>
  406be4:	add	x1, x1, #0x28
  406be8:	ldr	x1, [x1]
  406bec:	mov	x2, x1
  406bf0:	mov	x1, x3
  406bf4:	bl	40a288 <coredump_vacuum>
  406bf8:	ldr	x0, [x29, #56]
  406bfc:	bl	4067c4 <change_uid_gid>
  406c00:	str	w0, [x29, #88]
  406c04:	ldr	w0, [x29, #88]
  406c08:	cmp	w0, #0x0
  406c0c:	b.ge	406ca4 <submit_coredump+0x35c>  // b.tcont
  406c10:	mov	w0, #0x3                   	// #3
  406c14:	str	w0, [x29, #104]
  406c18:	ldr	w0, [x29, #88]
  406c1c:	str	w0, [x29, #108]
  406c20:	str	wzr, [x29, #112]
  406c24:	ldr	w0, [x29, #112]
  406c28:	bl	403660 <log_get_max_level_realm@plt>
  406c2c:	mov	w1, w0
  406c30:	ldr	w0, [x29, #104]
  406c34:	and	w0, w0, #0x7
  406c38:	cmp	w1, w0
  406c3c:	b.lt	406c84 <submit_coredump+0x33c>  // b.tstop
  406c40:	ldr	w0, [x29, #112]
  406c44:	lsl	w1, w0, #10
  406c48:	ldr	w0, [x29, #104]
  406c4c:	orr	w6, w1, w0
  406c50:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  406c54:	add	x1, x0, #0xd73
  406c58:	adrp	x0, 40b000 <_fini+0x3a0>
  406c5c:	add	x5, x0, #0x598
  406c60:	adrp	x0, 40c000 <_fini+0x13a0>
  406c64:	add	x4, x0, #0x3c0
  406c68:	mov	w3, #0x303                 	// #771
  406c6c:	mov	x2, x1
  406c70:	ldr	w1, [x29, #108]
  406c74:	mov	w0, w6
  406c78:	bl	4033b0 <log_internal_realm@plt>
  406c7c:	mov	w19, w0
  406c80:	b	40738c <submit_coredump+0xa44>
  406c84:	ldr	w0, [x29, #108]
  406c88:	cmp	w0, #0x0
  406c8c:	cneg	w0, w0, lt  // lt = tstop
  406c90:	and	w0, w0, #0xff
  406c94:	neg	w19, w0
  406c98:	b	40738c <submit_coredump+0xa44>
  406c9c:	nop
  406ca0:	b	406ca8 <submit_coredump+0x360>
  406ca4:	nop
  406ca8:	adrp	x0, 40b000 <_fini+0x3a0>
  406cac:	add	x0, x0, #0x5b8
  406cb0:	str	x0, [x29, #288]
  406cb4:	ldr	x0, [x29, #56]
  406cb8:	ldr	x0, [x0]
  406cbc:	str	x0, [x29, #296]
  406cc0:	adrp	x0, 40b000 <_fini+0x3a0>
  406cc4:	add	x0, x0, #0x5c8
  406cc8:	str	x0, [x29, #304]
  406ccc:	ldr	x0, [x29, #56]
  406cd0:	ldr	x0, [x0, #56]
  406cd4:	str	x0, [x29, #312]
  406cd8:	adrp	x0, 40b000 <_fini+0x3a0>
  406cdc:	add	x0, x0, #0x5d0
  406ce0:	str	x0, [x29, #320]
  406ce4:	ldr	x0, [x29, #56]
  406ce8:	ldr	x0, [x0, #8]
  406cec:	str	x0, [x29, #328]
  406cf0:	adrp	x0, 40b000 <_fini+0x3a0>
  406cf4:	add	x0, x0, #0x5e0
  406cf8:	str	x0, [x29, #336]
  406cfc:	ldr	x0, [x29, #56]
  406d00:	ldrb	w0, [x0, #85]
  406d04:	cmp	w0, #0x0
  406d08:	b.eq	406d24 <submit_coredump+0x3dc>  // b.none
  406d0c:	ldr	x0, [x29, #152]
  406d10:	cmp	x0, #0x0
  406d14:	b.eq	406d24 <submit_coredump+0x3dc>  // b.none
  406d18:	adrp	x0, 40b000 <_fini+0x3a0>
  406d1c:	add	x0, x0, #0x5f0
  406d20:	b	406d28 <submit_coredump+0x3e0>
  406d24:	mov	x0, #0x0                   	// #0
  406d28:	str	x0, [x29, #344]
  406d2c:	ldr	x0, [x29, #56]
  406d30:	ldrb	w0, [x0, #85]
  406d34:	cmp	w0, #0x0
  406d38:	b.eq	406d50 <submit_coredump+0x408>  // b.none
  406d3c:	ldr	x0, [x29, #152]
  406d40:	cmp	x0, #0x0
  406d44:	b.eq	406d50 <submit_coredump+0x408>  // b.none
  406d48:	ldr	x0, [x29, #152]
  406d4c:	b	406d54 <submit_coredump+0x40c>
  406d50:	mov	x0, #0x0                   	// #0
  406d54:	str	x0, [x29, #352]
  406d58:	str	xzr, [x29, #200]
  406d5c:	str	xzr, [x29, #208]
  406d60:	b	406d94 <submit_coredump+0x44c>
  406d64:	ldr	x0, [x29, #208]
  406d68:	lsl	x0, x0, #3
  406d6c:	add	x1, x29, #0x120
  406d70:	ldr	x0, [x1, x0]
  406d74:	bl	4035f0 <strlen@plt>
  406d78:	mov	x1, x0
  406d7c:	ldr	x0, [x29, #200]
  406d80:	add	x0, x0, x1
  406d84:	str	x0, [x29, #200]
  406d88:	ldr	x0, [x29, #208]
  406d8c:	add	x0, x0, #0x1
  406d90:	str	x0, [x29, #208]
  406d94:	ldr	x0, [x29, #208]
  406d98:	cmp	x0, #0x8
  406d9c:	b.hi	406db8 <submit_coredump+0x470>  // b.pmore
  406da0:	ldr	x0, [x29, #208]
  406da4:	lsl	x0, x0, #3
  406da8:	add	x1, x29, #0x120
  406dac:	ldr	x0, [x1, x0]
  406db0:	cmp	x0, #0x0
  406db4:	b.ne	406d64 <submit_coredump+0x41c>  // b.any
  406db8:	ldr	x0, [x29, #200]
  406dbc:	add	x0, x0, #0x1
  406dc0:	str	x0, [x29, #240]
  406dc4:	ldr	x1, [x29, #240]
  406dc8:	mov	x0, #0x1                   	// #1
  406dcc:	bl	4038d0 <size_multiply_overflow>
  406dd0:	and	w0, w0, #0xff
  406dd4:	and	x0, x0, #0xff
  406dd8:	cmp	x0, #0x0
  406ddc:	b.eq	406e08 <submit_coredump+0x4c0>  // b.none
  406de0:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  406de4:	add	x1, x0, #0xd73
  406de8:	adrp	x0, 40c000 <_fini+0x13a0>
  406dec:	add	x4, x0, #0x3b0
  406df0:	mov	w3, #0x310                 	// #784
  406df4:	mov	x2, x1
  406df8:	adrp	x0, 40b000 <_fini+0x3a0>
  406dfc:	add	x1, x0, #0x3d8
  406e00:	mov	w0, #0x0                   	// #0
  406e04:	bl	403080 <log_assert_failed_realm@plt>
  406e08:	ldr	x0, [x29, #240]
  406e0c:	cmp	x0, #0x400, lsl #12
  406e10:	cset	w0, hi  // hi = pmore
  406e14:	and	w0, w0, #0xff
  406e18:	and	x0, x0, #0xff
  406e1c:	cmp	x0, #0x0
  406e20:	b.eq	406e4c <submit_coredump+0x504>  // b.none
  406e24:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  406e28:	add	x1, x0, #0xd73
  406e2c:	adrp	x0, 40c000 <_fini+0x13a0>
  406e30:	add	x4, x0, #0x3b0
  406e34:	mov	w3, #0x310                 	// #784
  406e38:	mov	x2, x1
  406e3c:	adrp	x0, 40b000 <_fini+0x3a0>
  406e40:	add	x1, x0, #0x408
  406e44:	mov	w0, #0x0                   	// #0
  406e48:	bl	403080 <log_assert_failed_realm@plt>
  406e4c:	ldr	x0, [x29, #240]
  406e50:	add	x0, x0, #0xf
  406e54:	lsr	x0, x0, #4
  406e58:	lsl	x0, x0, #4
  406e5c:	sub	sp, sp, x0
  406e60:	add	x0, sp, #0x10
  406e64:	add	x0, x0, #0xf
  406e68:	lsr	x0, x0, #4
  406e6c:	lsl	x0, x0, #4
  406e70:	str	x0, [x29, #248]
  406e74:	ldr	x0, [x29, #248]
  406e78:	str	x0, [x29, #192]
  406e7c:	str	xzr, [x29, #208]
  406e80:	b	406eb0 <submit_coredump+0x568>
  406e84:	ldr	x0, [x29, #208]
  406e88:	lsl	x0, x0, #3
  406e8c:	add	x1, x29, #0x120
  406e90:	ldr	x0, [x1, x0]
  406e94:	mov	x1, x0
  406e98:	ldr	x0, [x29, #192]
  406e9c:	bl	402eb0 <stpcpy@plt>
  406ea0:	str	x0, [x29, #192]
  406ea4:	ldr	x0, [x29, #208]
  406ea8:	add	x0, x0, #0x1
  406eac:	str	x0, [x29, #208]
  406eb0:	ldr	x0, [x29, #208]
  406eb4:	cmp	x0, #0x8
  406eb8:	b.hi	406ed4 <submit_coredump+0x58c>  // b.pmore
  406ebc:	ldr	x0, [x29, #208]
  406ec0:	lsl	x0, x0, #3
  406ec4:	add	x1, x29, #0x120
  406ec8:	ldr	x0, [x1, x0]
  406ecc:	cmp	x0, #0x0
  406ed0:	b.ne	406e84 <submit_coredump+0x53c>  // b.any
  406ed4:	ldr	x0, [x29, #192]
  406ed8:	strb	wzr, [x0]
  406edc:	ldr	x0, [x29, #248]
  406ee0:	str	x0, [x29, #256]
  406ee4:	ldr	x0, [x29, #256]
  406ee8:	str	x0, [x29, #288]
  406eec:	ldr	x0, [x29, #168]
  406ef0:	cmp	x0, #0x0
  406ef4:	b.eq	406f04 <submit_coredump+0x5bc>  // b.none
  406ef8:	adrp	x0, 40b000 <_fini+0x3a0>
  406efc:	add	x0, x0, #0x608
  406f00:	b	406f08 <submit_coredump+0x5c0>
  406f04:	mov	x0, #0x0                   	// #0
  406f08:	str	x0, [x29, #296]
  406f0c:	ldr	x0, [x29, #168]
  406f10:	str	x0, [x29, #304]
  406f14:	str	xzr, [x29, #224]
  406f18:	str	xzr, [x29, #232]
  406f1c:	b	406f50 <submit_coredump+0x608>
  406f20:	ldr	x0, [x29, #232]
  406f24:	lsl	x0, x0, #3
  406f28:	add	x1, x29, #0x120
  406f2c:	ldr	x0, [x1, x0]
  406f30:	bl	4035f0 <strlen@plt>
  406f34:	mov	x1, x0
  406f38:	ldr	x0, [x29, #224]
  406f3c:	add	x0, x0, x1
  406f40:	str	x0, [x29, #224]
  406f44:	ldr	x0, [x29, #232]
  406f48:	add	x0, x0, #0x1
  406f4c:	str	x0, [x29, #232]
  406f50:	ldr	x0, [x29, #232]
  406f54:	cmp	x0, #0x2
  406f58:	b.hi	406f74 <submit_coredump+0x62c>  // b.pmore
  406f5c:	ldr	x0, [x29, #232]
  406f60:	lsl	x0, x0, #3
  406f64:	add	x1, x29, #0x120
  406f68:	ldr	x0, [x1, x0]
  406f6c:	cmp	x0, #0x0
  406f70:	b.ne	406f20 <submit_coredump+0x5d8>  // b.any
  406f74:	ldr	x0, [x29, #224]
  406f78:	add	x0, x0, #0x1
  406f7c:	str	x0, [x29, #264]
  406f80:	ldr	x1, [x29, #264]
  406f84:	mov	x0, #0x1                   	// #1
  406f88:	bl	4038d0 <size_multiply_overflow>
  406f8c:	and	w0, w0, #0xff
  406f90:	and	x0, x0, #0xff
  406f94:	cmp	x0, #0x0
  406f98:	b.eq	406fc4 <submit_coredump+0x67c>  // b.none
  406f9c:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  406fa0:	add	x1, x0, #0xd73
  406fa4:	adrp	x0, 40c000 <_fini+0x13a0>
  406fa8:	add	x4, x0, #0x3b0
  406fac:	mov	w3, #0x316                 	// #790
  406fb0:	mov	x2, x1
  406fb4:	adrp	x0, 40b000 <_fini+0x3a0>
  406fb8:	add	x1, x0, #0x3d8
  406fbc:	mov	w0, #0x0                   	// #0
  406fc0:	bl	403080 <log_assert_failed_realm@plt>
  406fc4:	ldr	x0, [x29, #264]
  406fc8:	cmp	x0, #0x400, lsl #12
  406fcc:	cset	w0, hi  // hi = pmore
  406fd0:	and	w0, w0, #0xff
  406fd4:	and	x0, x0, #0xff
  406fd8:	cmp	x0, #0x0
  406fdc:	b.eq	407008 <submit_coredump+0x6c0>  // b.none
  406fe0:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  406fe4:	add	x1, x0, #0xd73
  406fe8:	adrp	x0, 40c000 <_fini+0x13a0>
  406fec:	add	x4, x0, #0x3b0
  406ff0:	mov	w3, #0x316                 	// #790
  406ff4:	mov	x2, x1
  406ff8:	adrp	x0, 40b000 <_fini+0x3a0>
  406ffc:	add	x1, x0, #0x408
  407000:	mov	w0, #0x0                   	// #0
  407004:	bl	403080 <log_assert_failed_realm@plt>
  407008:	ldr	x0, [x29, #264]
  40700c:	add	x0, x0, #0xf
  407010:	lsr	x0, x0, #4
  407014:	lsl	x0, x0, #4
  407018:	sub	sp, sp, x0
  40701c:	add	x0, sp, #0x10
  407020:	add	x0, x0, #0xf
  407024:	lsr	x0, x0, #4
  407028:	lsl	x0, x0, #4
  40702c:	str	x0, [x29, #272]
  407030:	ldr	x0, [x29, #272]
  407034:	str	x0, [x29, #216]
  407038:	str	xzr, [x29, #232]
  40703c:	b	40706c <submit_coredump+0x724>
  407040:	ldr	x0, [x29, #232]
  407044:	lsl	x0, x0, #3
  407048:	add	x1, x29, #0x120
  40704c:	ldr	x0, [x1, x0]
  407050:	mov	x1, x0
  407054:	ldr	x0, [x29, #216]
  407058:	bl	402eb0 <stpcpy@plt>
  40705c:	str	x0, [x29, #216]
  407060:	ldr	x0, [x29, #232]
  407064:	add	x0, x0, #0x1
  407068:	str	x0, [x29, #232]
  40706c:	ldr	x0, [x29, #232]
  407070:	cmp	x0, #0x2
  407074:	b.hi	407090 <submit_coredump+0x748>  // b.pmore
  407078:	ldr	x0, [x29, #232]
  40707c:	lsl	x0, x0, #3
  407080:	add	x1, x29, #0x120
  407084:	ldr	x0, [x1, x0]
  407088:	cmp	x0, #0x0
  40708c:	b.ne	407040 <submit_coredump+0x6f8>  // b.any
  407090:	ldr	x0, [x29, #216]
  407094:	strb	wzr, [x0]
  407098:	ldr	x0, [x29, #272]
  40709c:	str	x0, [x29, #256]
  4070a0:	ldr	x0, [x29, #56]
  4070a4:	ldrb	w0, [x0, #85]
  4070a8:	cmp	w0, #0x0
  4070ac:	b.eq	4070f4 <submit_coredump+0x7ac>  // b.none
  4070b0:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  4070b4:	add	x1, x0, #0xd73
  4070b8:	ldr	x0, [x29, #256]
  4070bc:	str	x0, [sp, #8]
  4070c0:	str	xzr, [sp]
  4070c4:	mov	x7, #0x0                   	// #0
  4070c8:	mov	x6, #0x0                   	// #0
  4070cc:	mov	x5, #0x0                   	// #0
  4070d0:	adrp	x0, 40c000 <_fini+0x13a0>
  4070d4:	add	x4, x0, #0x3c0
  4070d8:	mov	w3, #0x31b                 	// #795
  4070dc:	mov	x2, x1
  4070e0:	mov	w1, #0x0                   	// #0
  4070e4:	mov	w0, #0x3                   	// #3
  4070e8:	bl	402f40 <log_dispatch_internal@plt>
  4070ec:	mov	w19, #0x0                   	// #0
  4070f0:	b	40738c <submit_coredump+0xa44>
  4070f4:	ldr	x2, [x29, #256]
  4070f8:	adrp	x0, 40b000 <_fini+0x3a0>
  4070fc:	add	x1, x0, #0x610
  407100:	ldr	x0, [x29, #48]
  407104:	bl	403360 <iovw_put_string_field@plt>
  407108:	ldrb	w0, [x29, #79]
  40710c:	cmp	w0, #0x0
  407110:	b.eq	40712c <submit_coredump+0x7e4>  // b.none
  407114:	adrp	x0, 40b000 <_fini+0x3a0>
  407118:	add	x2, x0, #0x620
  40711c:	adrp	x0, 40b000 <_fini+0x3a0>
  407120:	add	x1, x0, #0x628
  407124:	ldr	x0, [x29, #48]
  407128:	bl	403360 <iovw_put_string_field@plt>
  40712c:	adrp	x0, 41e000 <arg_storage>
  407130:	add	x0, x0, #0x0
  407134:	ldr	w0, [x0]
  407138:	cmp	w0, #0x2
  40713c:	b.ne	4072b8 <submit_coredump+0x970>  // b.any
  407140:	ldr	x1, [x29, #176]
  407144:	adrp	x0, 41e000 <arg_storage>
  407148:	add	x0, x0, #0x18
  40714c:	ldr	x0, [x0]
  407150:	cmp	x1, x0
  407154:	b.hi	40722c <submit_coredump+0x8e4>  // b.pmore
  407158:	str	xzr, [x29, #184]
  40715c:	ldr	w0, [x29, #80]
  407160:	ldr	x1, [x29, #176]
  407164:	add	x3, x29, #0xb8
  407168:	add	x2, x29, #0xa0
  40716c:	bl	40594c <allocate_journal_field>
  407170:	str	w0, [x29, #88]
  407174:	ldr	w0, [x29, #88]
  407178:	cmp	w0, #0x0
  40717c:	b.lt	4071b0 <submit_coredump+0x868>  // b.tstop
  407180:	ldr	x0, [x29, #160]
  407184:	ldr	x1, [x29, #184]
  407188:	mov	x2, x1
  40718c:	mov	x1, x0
  407190:	ldr	x0, [x29, #48]
  407194:	bl	402ff0 <iovw_put@plt>
  407198:	cmp	w0, #0x0
  40719c:	b.lt	4072b8 <submit_coredump+0x970>  // b.tstop
  4071a0:	ldr	x0, [x29, #160]
  4071a4:	str	x0, [x29, #280]
  4071a8:	str	xzr, [x29, #160]
  4071ac:	b	4072b8 <submit_coredump+0x970>
  4071b0:	mov	w0, #0x4                   	// #4
  4071b4:	str	w0, [x29, #128]
  4071b8:	ldr	w0, [x29, #88]
  4071bc:	str	w0, [x29, #132]
  4071c0:	str	wzr, [x29, #136]
  4071c4:	ldr	w0, [x29, #136]
  4071c8:	bl	403660 <log_get_max_level_realm@plt>
  4071cc:	mov	w1, w0
  4071d0:	ldr	w0, [x29, #128]
  4071d4:	and	w0, w0, #0x7
  4071d8:	cmp	w1, w0
  4071dc:	b.lt	407220 <submit_coredump+0x8d8>  // b.tstop
  4071e0:	ldr	w0, [x29, #136]
  4071e4:	lsl	w1, w0, #10
  4071e8:	ldr	w0, [x29, #128]
  4071ec:	orr	w6, w1, w0
  4071f0:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  4071f4:	add	x1, x0, #0xd73
  4071f8:	adrp	x0, 40b000 <_fini+0x3a0>
  4071fc:	add	x5, x0, #0x640
  407200:	adrp	x0, 40c000 <_fini+0x13a0>
  407204:	add	x4, x0, #0x3c0
  407208:	mov	w3, #0x330                 	// #816
  40720c:	mov	x2, x1
  407210:	ldr	w1, [x29, #132]
  407214:	mov	w0, w6
  407218:	bl	4033b0 <log_internal_realm@plt>
  40721c:	b	4072b8 <submit_coredump+0x970>
  407220:	ldr	w0, [x29, #132]
  407224:	cmp	w0, #0x0
  407228:	b	4072b8 <submit_coredump+0x970>
  40722c:	mov	w0, #0x6                   	// #6
  407230:	str	w0, [x29, #116]
  407234:	str	wzr, [x29, #120]
  407238:	str	wzr, [x29, #124]
  40723c:	ldr	w0, [x29, #124]
  407240:	bl	403660 <log_get_max_level_realm@plt>
  407244:	mov	w1, w0
  407248:	ldr	w0, [x29, #116]
  40724c:	and	w0, w0, #0x7
  407250:	cmp	w1, w0
  407254:	b.lt	4072b0 <submit_coredump+0x968>  // b.tstop
  407258:	ldr	w0, [x29, #124]
  40725c:	lsl	w1, w0, #10
  407260:	ldr	w0, [x29, #116]
  407264:	orr	w8, w1, w0
  407268:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  40726c:	add	x1, x0, #0xd73
  407270:	ldr	x2, [x29, #176]
  407274:	adrp	x0, 41e000 <arg_storage>
  407278:	add	x0, x0, #0x18
  40727c:	ldr	x0, [x0]
  407280:	mov	x7, x0
  407284:	mov	x6, x2
  407288:	adrp	x0, 40b000 <_fini+0x3a0>
  40728c:	add	x5, x0, #0x540
  407290:	adrp	x0, 40c000 <_fini+0x13a0>
  407294:	add	x4, x0, #0x3c0
  407298:	mov	w3, #0x332                 	// #818
  40729c:	mov	x2, x1
  4072a0:	ldr	w1, [x29, #120]
  4072a4:	mov	w0, w8
  4072a8:	bl	4033b0 <log_internal_realm@plt>
  4072ac:	b	4072b8 <submit_coredump+0x970>
  4072b0:	ldr	w0, [x29, #120]
  4072b4:	cmp	w0, #0x0
  4072b8:	ldr	x0, [x29, #48]
  4072bc:	ldr	x1, [x0]
  4072c0:	ldr	x0, [x29, #48]
  4072c4:	ldr	x0, [x0, #8]
  4072c8:	mov	w4, w0
  4072cc:	mov	x3, x1
  4072d0:	adrp	x0, 40c000 <_fini+0x13a0>
  4072d4:	add	x2, x0, #0x3c0
  4072d8:	adrp	x0, 40b000 <_fini+0x3a0>
  4072dc:	add	x1, x0, #0x678
  4072e0:	adrp	x0, 40b000 <_fini+0x3a0>
  4072e4:	add	x0, x0, #0x688
  4072e8:	bl	4032f0 <sd_journal_sendv_with_location@plt>
  4072ec:	str	w0, [x29, #88]
  4072f0:	ldr	w0, [x29, #88]
  4072f4:	cmp	w0, #0x0
  4072f8:	b.ge	407388 <submit_coredump+0xa40>  // b.tcont
  4072fc:	mov	w0, #0x3                   	// #3
  407300:	str	w0, [x29, #140]
  407304:	ldr	w0, [x29, #88]
  407308:	str	w0, [x29, #144]
  40730c:	str	wzr, [x29, #148]
  407310:	ldr	w0, [x29, #148]
  407314:	bl	403660 <log_get_max_level_realm@plt>
  407318:	mov	w1, w0
  40731c:	ldr	w0, [x29, #140]
  407320:	and	w0, w0, #0x7
  407324:	cmp	w1, w0
  407328:	b.lt	407370 <submit_coredump+0xa28>  // b.tstop
  40732c:	ldr	w0, [x29, #148]
  407330:	lsl	w1, w0, #10
  407334:	ldr	w0, [x29, #140]
  407338:	orr	w6, w1, w0
  40733c:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  407340:	add	x1, x0, #0xd73
  407344:	adrp	x0, 40b000 <_fini+0x3a0>
  407348:	add	x5, x0, #0x6b0
  40734c:	adrp	x0, 40c000 <_fini+0x13a0>
  407350:	add	x4, x0, #0x3c0
  407354:	mov	w3, #0x338                 	// #824
  407358:	mov	x2, x1
  40735c:	ldr	w1, [x29, #144]
  407360:	mov	w0, w6
  407364:	bl	4033b0 <log_internal_realm@plt>
  407368:	mov	w19, w0
  40736c:	b	40738c <submit_coredump+0xa44>
  407370:	ldr	w0, [x29, #144]
  407374:	cmp	w0, #0x0
  407378:	cneg	w0, w0, lt  // lt = tstop
  40737c:	and	w0, w0, #0xff
  407380:	neg	w19, w0
  407384:	b	40738c <submit_coredump+0xa44>
  407388:	mov	w19, #0x0                   	// #0
  40738c:	add	x0, x29, #0xa8
  407390:	bl	4038ac <freep>
  407394:	add	x0, x29, #0xa0
  407398:	bl	4038ac <freep>
  40739c:	add	x0, x29, #0x98
  4073a0:	bl	4038ac <freep>
  4073a4:	add	x0, x29, #0x54
  4073a8:	bl	403ae4 <closep>
  4073ac:	add	x0, x29, #0x50
  4073b0:	bl	403ae4 <closep>
  4073b4:	mov	w1, w19
  4073b8:	adrp	x0, 41d000 <__FRAME_END__+0xfdec>
  4073bc:	add	x0, x0, #0x948
  4073c0:	ldr	x2, [x29, #360]
  4073c4:	ldr	x0, [x0]
  4073c8:	eor	x0, x2, x0
  4073cc:	cmp	x0, #0x0
  4073d0:	b.eq	4073d8 <submit_coredump+0xa90>  // b.none
  4073d4:	bl	4032b0 <__stack_chk_fail@plt>
  4073d8:	mov	w0, w1
  4073dc:	mov	sp, x29
  4073e0:	ldr	x19, [sp, #16]
  4073e4:	ldp	x29, x30, [sp], #368
  4073e8:	ret

00000000004073ec <save_context>:
  4073ec:	stp	x29, x30, [sp, #-96]!
  4073f0:	mov	x29, sp
  4073f4:	str	x0, [sp, #24]
  4073f8:	str	x1, [sp, #16]
  4073fc:	str	wzr, [sp, #40]
  407400:	ldr	x0, [sp, #24]
  407404:	cmp	x0, #0x0
  407408:	cset	w0, eq  // eq = none
  40740c:	and	w0, w0, #0xff
  407410:	and	x0, x0, #0xff
  407414:	cmp	x0, #0x0
  407418:	b.eq	407444 <save_context+0x58>  // b.none
  40741c:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  407420:	add	x1, x0, #0xd73
  407424:	adrp	x0, 40c000 <_fini+0x13a0>
  407428:	add	x4, x0, #0x3d0
  40742c:	mov	w3, #0x342                 	// #834
  407430:	mov	x2, x1
  407434:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  407438:	add	x1, x0, #0xf58
  40743c:	mov	w0, #0x0                   	// #0
  407440:	bl	403080 <log_assert_failed_realm@plt>
  407444:	ldr	x0, [sp, #16]
  407448:	cmp	x0, #0x0
  40744c:	cset	w0, eq  // eq = none
  407450:	and	w0, w0, #0xff
  407454:	and	x0, x0, #0xff
  407458:	cmp	x0, #0x0
  40745c:	b.eq	407488 <save_context+0x9c>  // b.none
  407460:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  407464:	add	x1, x0, #0xd73
  407468:	adrp	x0, 40c000 <_fini+0x13a0>
  40746c:	add	x4, x0, #0x3d0
  407470:	mov	w3, #0x343                 	// #835
  407474:	mov	x2, x1
  407478:	adrp	x0, 40b000 <_fini+0x3a0>
  40747c:	add	x1, x0, #0x510
  407480:	mov	w0, #0x0                   	// #0
  407484:	bl	403080 <log_assert_failed_realm@plt>
  407488:	ldr	x0, [sp, #16]
  40748c:	ldr	x0, [x0, #8]
  407490:	cmp	x0, #0x6
  407494:	cset	w0, ls  // ls = plast
  407498:	and	w0, w0, #0xff
  40749c:	and	x0, x0, #0xff
  4074a0:	cmp	x0, #0x0
  4074a4:	b.eq	4074d0 <save_context+0xe4>  // b.none
  4074a8:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  4074ac:	add	x1, x0, #0xd73
  4074b0:	adrp	x0, 40c000 <_fini+0x13a0>
  4074b4:	add	x4, x0, #0x3d0
  4074b8:	mov	w3, #0x344                 	// #836
  4074bc:	mov	x2, x1
  4074c0:	adrp	x0, 40b000 <_fini+0x3a0>
  4074c4:	add	x1, x0, #0x6d0
  4074c8:	mov	w0, #0x0                   	// #0
  4074cc:	bl	403080 <log_assert_failed_realm@plt>
  4074d0:	str	wzr, [sp, #32]
  4074d4:	b	4075c8 <save_context+0x1dc>
  4074d8:	ldr	x0, [sp, #16]
  4074dc:	ldr	x1, [x0]
  4074e0:	ldr	w0, [sp, #32]
  4074e4:	lsl	x0, x0, #4
  4074e8:	add	x0, x1, x0
  4074ec:	str	x0, [sp, #80]
  4074f0:	str	wzr, [sp, #36]
  4074f4:	b	4075b0 <save_context+0x1c4>
  4074f8:	ldr	x0, [sp, #80]
  4074fc:	ldr	x1, [x0]
  407500:	ldr	x0, [sp, #80]
  407504:	ldr	x0, [x0, #8]
  407508:	add	x0, x1, x0
  40750c:	ldrb	w0, [x0]
  407510:	cmp	w0, #0x0
  407514:	cset	w0, ne  // ne = any
  407518:	and	w0, w0, #0xff
  40751c:	and	x0, x0, #0xff
  407520:	cmp	x0, #0x0
  407524:	b.eq	407550 <save_context+0x164>  // b.none
  407528:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  40752c:	add	x1, x0, #0xd73
  407530:	adrp	x0, 40c000 <_fini+0x13a0>
  407534:	add	x4, x0, #0x3d0
  407538:	mov	w3, #0x351                 	// #849
  40753c:	mov	x2, x1
  407540:	adrp	x0, 40b000 <_fini+0x3a0>
  407544:	add	x1, x0, #0x6f0
  407548:	mov	w0, #0x0                   	// #0
  40754c:	bl	403080 <log_assert_failed_realm@plt>
  407550:	ldr	x0, [sp, #80]
  407554:	ldr	x2, [x0]
  407558:	adrp	x0, 40c000 <_fini+0x13a0>
  40755c:	add	x0, x0, #0x30
  407560:	ldr	w1, [sp, #36]
  407564:	ldr	x0, [x0, x1, lsl #3]
  407568:	mov	x1, x0
  40756c:	mov	x0, x2
  407570:	bl	403a68 <startswith>
  407574:	str	x0, [sp, #88]
  407578:	ldr	x0, [sp, #88]
  40757c:	cmp	x0, #0x0
  407580:	b.eq	4075a4 <save_context+0x1b8>  // b.none
  407584:	ldr	x0, [sp, #24]
  407588:	ldr	w1, [sp, #36]
  40758c:	ldr	x2, [sp, #88]
  407590:	str	x2, [x0, x1, lsl #3]
  407594:	ldr	w0, [sp, #40]
  407598:	add	w0, w0, #0x1
  40759c:	str	w0, [sp, #40]
  4075a0:	b	4075bc <save_context+0x1d0>
  4075a4:	ldr	w0, [sp, #36]
  4075a8:	add	w0, w0, #0x1
  4075ac:	str	w0, [sp, #36]
  4075b0:	ldr	w0, [sp, #36]
  4075b4:	cmp	w0, #0x9
  4075b8:	b.ls	4074f8 <save_context+0x10c>  // b.plast
  4075bc:	ldr	w0, [sp, #32]
  4075c0:	add	w0, w0, #0x1
  4075c4:	str	w0, [sp, #32]
  4075c8:	ldr	w1, [sp, #32]
  4075cc:	ldr	x0, [sp, #16]
  4075d0:	ldr	x0, [x0, #8]
  4075d4:	cmp	x1, x0
  4075d8:	b.cc	4074d8 <save_context+0xec>  // b.lo, b.ul, b.last
  4075dc:	ldr	x0, [sp, #24]
  4075e0:	ldr	x0, [x0]
  4075e4:	cmp	x0, #0x0
  4075e8:	b.ne	407678 <save_context+0x28c>  // b.any
  4075ec:	mov	w0, #0x3                   	// #3
  4075f0:	str	w0, [sp, #60]
  4075f4:	mov	w0, #0x16                  	// #22
  4075f8:	movk	w0, #0x4000, lsl #16
  4075fc:	str	w0, [sp, #64]
  407600:	str	wzr, [sp, #68]
  407604:	ldr	w0, [sp, #68]
  407608:	bl	403660 <log_get_max_level_realm@plt>
  40760c:	mov	w1, w0
  407610:	ldr	w0, [sp, #60]
  407614:	and	w0, w0, #0x7
  407618:	cmp	w1, w0
  40761c:	b.lt	407660 <save_context+0x274>  // b.tstop
  407620:	ldr	w0, [sp, #68]
  407624:	lsl	w1, w0, #10
  407628:	ldr	w0, [sp, #60]
  40762c:	orr	w6, w1, w0
  407630:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  407634:	add	x1, x0, #0xd73
  407638:	adrp	x0, 40b000 <_fini+0x3a0>
  40763c:	add	x5, x0, #0x720
  407640:	adrp	x0, 40c000 <_fini+0x13a0>
  407644:	add	x4, x0, #0x3e0
  407648:	mov	w3, #0x35d                 	// #861
  40764c:	mov	x2, x1
  407650:	ldr	w1, [sp, #64]
  407654:	mov	w0, w6
  407658:	bl	4033b0 <log_internal_realm@plt>
  40765c:	b	4077bc <save_context+0x3d0>
  407660:	ldr	w0, [sp, #64]
  407664:	cmp	w0, #0x0
  407668:	cneg	w0, w0, lt  // lt = tstop
  40766c:	and	w0, w0, #0xff
  407670:	neg	w0, w0
  407674:	b	4077bc <save_context+0x3d0>
  407678:	ldr	x0, [sp, #24]
  40767c:	ldr	x2, [x0]
  407680:	ldr	x0, [sp, #24]
  407684:	add	x0, x0, #0x50
  407688:	mov	x1, x0
  40768c:	mov	x0, x2
  407690:	bl	403200 <parse_pid@plt>
  407694:	str	w0, [sp, #44]
  407698:	ldr	w0, [sp, #44]
  40769c:	cmp	w0, #0x0
  4076a0:	b.ge	407738 <save_context+0x34c>  // b.tcont
  4076a4:	mov	w0, #0x3                   	// #3
  4076a8:	str	w0, [sp, #48]
  4076ac:	ldr	w0, [sp, #44]
  4076b0:	str	w0, [sp, #52]
  4076b4:	str	wzr, [sp, #56]
  4076b8:	ldr	w0, [sp, #56]
  4076bc:	bl	403660 <log_get_max_level_realm@plt>
  4076c0:	mov	w1, w0
  4076c4:	ldr	w0, [sp, #48]
  4076c8:	and	w0, w0, #0x7
  4076cc:	cmp	w1, w0
  4076d0:	b.lt	407720 <save_context+0x334>  // b.tstop
  4076d4:	ldr	w0, [sp, #56]
  4076d8:	lsl	w1, w0, #10
  4076dc:	ldr	w0, [sp, #48]
  4076e0:	orr	w7, w1, w0
  4076e4:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  4076e8:	add	x1, x0, #0xd73
  4076ec:	ldr	x0, [sp, #24]
  4076f0:	ldr	x0, [x0]
  4076f4:	mov	x6, x0
  4076f8:	adrp	x0, 40b000 <_fini+0x3a0>
  4076fc:	add	x5, x0, #0x750
  407700:	adrp	x0, 40c000 <_fini+0x13a0>
  407704:	add	x4, x0, #0x3e0
  407708:	mov	w3, #0x362                 	// #866
  40770c:	mov	x2, x1
  407710:	ldr	w1, [sp, #52]
  407714:	mov	w0, w7
  407718:	bl	4033b0 <log_internal_realm@plt>
  40771c:	b	4077bc <save_context+0x3d0>
  407720:	ldr	w0, [sp, #52]
  407724:	cmp	w0, #0x0
  407728:	cneg	w0, w0, lt  // lt = tstop
  40772c:	and	w0, w0, #0xff
  407730:	neg	w0, w0
  407734:	b	4077bc <save_context+0x3d0>
  407738:	ldr	x0, [sp, #24]
  40773c:	ldr	x0, [x0, #72]
  407740:	str	x0, [sp, #72]
  407744:	ldr	x0, [sp, #24]
  407748:	ldr	x2, [x0]
  40774c:	adrp	x0, 40b000 <_fini+0x3a0>
  407750:	add	x1, x0, #0x620
  407754:	mov	x0, x2
  407758:	bl	403450 <strcmp@plt>
  40775c:	cmp	w0, #0x0
  407760:	b.eq	407780 <save_context+0x394>  // b.none
  407764:	adrp	x0, 40b000 <_fini+0x3a0>
  407768:	add	x1, x0, #0x770
  40776c:	ldr	x0, [sp, #72]
  407770:	bl	4039c8 <streq_ptr>
  407774:	and	w0, w0, #0xff
  407778:	cmp	w0, #0x0
  40777c:	b.eq	407788 <save_context+0x39c>  // b.none
  407780:	mov	w0, #0x1                   	// #1
  407784:	b	40778c <save_context+0x3a0>
  407788:	mov	w0, #0x0                   	// #0
  40778c:	and	w0, w0, #0x1
  407790:	and	w1, w0, #0xff
  407794:	ldr	x0, [sp, #24]
  407798:	strb	w1, [x0, #84]
  40779c:	adrp	x0, 40b000 <_fini+0x3a0>
  4077a0:	add	x1, x0, #0x780
  4077a4:	ldr	x0, [sp, #72]
  4077a8:	bl	4039c8 <streq_ptr>
  4077ac:	and	w1, w0, #0xff
  4077b0:	ldr	x0, [sp, #24]
  4077b4:	strb	w1, [x0, #85]
  4077b8:	mov	w0, #0x0                   	// #0
  4077bc:	ldp	x29, x30, [sp], #96
  4077c0:	ret

00000000004077c4 <process_socket>:
  4077c4:	stp	x29, x30, [sp, #-368]!
  4077c8:	mov	x29, sp
  4077cc:	str	x19, [sp, #16]
  4077d0:	str	w0, [sp, #44]
  4077d4:	adrp	x0, 41d000 <__FRAME_END__+0xfdec>
  4077d8:	add	x0, x0, #0x948
  4077dc:	ldr	x1, [x0]
  4077e0:	str	x1, [sp, #360]
  4077e4:	mov	x1, #0x0                   	// #0
  4077e8:	mov	w0, #0xffffffff            	// #-1
  4077ec:	str	w0, [sp, #48]
  4077f0:	stp	xzr, xzr, [sp, #272]
  4077f4:	stp	xzr, xzr, [sp, #288]
  4077f8:	stp	xzr, xzr, [sp, #304]
  4077fc:	stp	xzr, xzr, [sp, #320]
  407800:	stp	xzr, xzr, [sp, #336]
  407804:	str	xzr, [sp, #352]
  407808:	stp	xzr, xzr, [sp, #168]
  40780c:	str	xzr, [sp, #184]
  407810:	ldr	w0, [sp, #44]
  407814:	lsr	w0, w0, #31
  407818:	and	w0, w0, #0xff
  40781c:	and	x0, x0, #0xff
  407820:	cmp	x0, #0x0
  407824:	b.eq	407850 <process_socket+0x8c>  // b.none
  407828:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  40782c:	add	x1, x0, #0xd73
  407830:	adrp	x0, 40c000 <_fini+0x13a0>
  407834:	add	x4, x0, #0x3f0
  407838:	mov	w3, #0x372                 	// #882
  40783c:	mov	x2, x1
  407840:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  407844:	add	x1, x0, #0xee0
  407848:	mov	w0, #0x0                   	// #0
  40784c:	bl	403080 <log_assert_failed_realm@plt>
  407850:	bl	403040 <log_setup_service@plt>
  407854:	mov	w0, #0x7                   	// #7
  407858:	str	w0, [sp, #60]
  40785c:	str	wzr, [sp, #64]
  407860:	str	wzr, [sp, #68]
  407864:	ldr	w0, [sp, #68]
  407868:	bl	403660 <log_get_max_level_realm@plt>
  40786c:	mov	w1, w0
  407870:	ldr	w0, [sp, #60]
  407874:	and	w0, w0, #0x7
  407878:	cmp	w1, w0
  40787c:	b.lt	4078c0 <process_socket+0xfc>  // b.tstop
  407880:	ldr	w0, [sp, #68]
  407884:	lsl	w1, w0, #10
  407888:	ldr	w0, [sp, #60]
  40788c:	orr	w6, w1, w0
  407890:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  407894:	add	x1, x0, #0xd73
  407898:	adrp	x0, 40b000 <_fini+0x3a0>
  40789c:	add	x5, x0, #0x7a0
  4078a0:	adrp	x0, 40c000 <_fini+0x13a0>
  4078a4:	add	x4, x0, #0x400
  4078a8:	mov	w3, #0x376                 	// #886
  4078ac:	mov	x2, x1
  4078b0:	ldr	w1, [sp, #64]
  4078b4:	mov	w0, w6
  4078b8:	bl	4033b0 <log_internal_realm@plt>
  4078bc:	b	4078c8 <process_socket+0x104>
  4078c0:	ldr	w0, [sp, #64]
  4078c4:	cmp	w0, #0x0
  4078c8:	stp	xzr, xzr, [sp, #248]
  4078cc:	str	xzr, [sp, #264]
  4078d0:	stp	xzr, xzr, [sp, #192]
  4078d4:	stp	xzr, xzr, [sp, #208]
  4078d8:	stp	xzr, xzr, [sp, #224]
  4078dc:	str	xzr, [sp, #240]
  4078e0:	mov	x0, #0x1                   	// #1
  4078e4:	str	x0, [sp, #216]
  4078e8:	add	x0, sp, #0xf8
  4078ec:	str	x0, [sp, #224]
  4078f0:	mov	x0, #0x18                  	// #24
  4078f4:	str	x0, [sp, #232]
  4078f8:	ldr	w0, [sp, #44]
  4078fc:	bl	4032e0 <next_datagram_size_fd@plt>
  407900:	str	x0, [sp, #136]
  407904:	ldr	x0, [sp, #136]
  407908:	cmp	x0, #0x0
  40790c:	b.ge	40799c <process_socket+0x1d8>  // b.tcont
  407910:	mov	w0, #0x3                   	// #3
  407914:	str	w0, [sp, #108]
  407918:	ldr	x0, [sp, #136]
  40791c:	str	w0, [sp, #112]
  407920:	str	wzr, [sp, #116]
  407924:	ldr	w0, [sp, #116]
  407928:	bl	403660 <log_get_max_level_realm@plt>
  40792c:	mov	w1, w0
  407930:	ldr	w0, [sp, #108]
  407934:	and	w0, w0, #0x7
  407938:	cmp	w1, w0
  40793c:	b.lt	407980 <process_socket+0x1bc>  // b.tstop
  407940:	ldr	w0, [sp, #116]
  407944:	lsl	w1, w0, #10
  407948:	ldr	w0, [sp, #108]
  40794c:	orr	w6, w1, w0
  407950:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  407954:	add	x1, x0, #0xd73
  407958:	adrp	x0, 40b000 <_fini+0x3a0>
  40795c:	add	x5, x0, #0x7d0
  407960:	adrp	x0, 40c000 <_fini+0x13a0>
  407964:	add	x4, x0, #0x400
  407968:	mov	w3, #0x387                 	// #903
  40796c:	mov	x2, x1
  407970:	ldr	w1, [sp, #112]
  407974:	mov	w0, w6
  407978:	bl	4033b0 <log_internal_realm@plt>
  40797c:	b	407994 <process_socket+0x1d0>
  407980:	ldr	w0, [sp, #112]
  407984:	cmp	w0, #0x0
  407988:	cneg	w0, w0, lt  // lt = tstop
  40798c:	and	w0, w0, #0xff
  407990:	neg	w0, w0
  407994:	str	w0, [sp, #56]
  407998:	b	407df0 <process_socket+0x62c>
  40799c:	ldr	x0, [sp, #136]
  4079a0:	str	x0, [sp, #160]
  4079a4:	ldr	x0, [sp, #136]
  4079a8:	add	x0, x0, #0x1
  4079ac:	bl	4033a0 <malloc@plt>
  4079b0:	str	x0, [sp, #152]
  4079b4:	ldr	x0, [sp, #152]
  4079b8:	cmp	x0, #0x0
  4079bc:	b.ne	4079e4 <process_socket+0x220>  // b.any
  4079c0:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  4079c4:	add	x1, x0, #0xd73
  4079c8:	adrp	x0, 40c000 <_fini+0x13a0>
  4079cc:	add	x3, x0, #0x400
  4079d0:	mov	w2, #0x38e                 	// #910
  4079d4:	mov	w0, #0x0                   	// #0
  4079d8:	bl	403620 <log_oom_internal@plt>
  4079dc:	str	w0, [sp, #56]
  4079e0:	b	407df0 <process_socket+0x62c>
  4079e4:	add	x0, sp, #0x98
  4079e8:	str	x0, [sp, #208]
  4079ec:	add	x0, sp, #0xc0
  4079f0:	mov	w2, #0x40000000            	// #1073741824
  4079f4:	mov	x1, x0
  4079f8:	ldr	w0, [sp, #44]
  4079fc:	bl	403460 <recvmsg@plt>
  407a00:	str	x0, [sp, #144]
  407a04:	ldr	x0, [sp, #144]
  407a08:	cmp	x0, #0x0
  407a0c:	b.ge	407aa8 <process_socket+0x2e4>  // b.tcont
  407a10:	ldr	x0, [sp, #152]
  407a14:	bl	403520 <free@plt>
  407a18:	mov	w0, #0x3                   	// #3
  407a1c:	str	w0, [sp, #96]
  407a20:	bl	403220 <__errno_location@plt>
  407a24:	ldr	w0, [x0]
  407a28:	str	w0, [sp, #100]
  407a2c:	str	wzr, [sp, #104]
  407a30:	ldr	w0, [sp, #104]
  407a34:	bl	403660 <log_get_max_level_realm@plt>
  407a38:	mov	w1, w0
  407a3c:	ldr	w0, [sp, #96]
  407a40:	and	w0, w0, #0x7
  407a44:	cmp	w1, w0
  407a48:	b.lt	407a8c <process_socket+0x2c8>  // b.tstop
  407a4c:	ldr	w0, [sp, #104]
  407a50:	lsl	w1, w0, #10
  407a54:	ldr	w0, [sp, #96]
  407a58:	orr	w6, w1, w0
  407a5c:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  407a60:	add	x1, x0, #0xd73
  407a64:	adrp	x0, 40b000 <_fini+0x3a0>
  407a68:	add	x5, x0, #0x800
  407a6c:	adrp	x0, 40c000 <_fini+0x13a0>
  407a70:	add	x4, x0, #0x400
  407a74:	mov	w3, #0x397                 	// #919
  407a78:	mov	x2, x1
  407a7c:	ldr	w1, [sp, #100]
  407a80:	mov	w0, w6
  407a84:	bl	4033b0 <log_internal_realm@plt>
  407a88:	b	407aa0 <process_socket+0x2dc>
  407a8c:	ldr	w0, [sp, #100]
  407a90:	cmp	w0, #0x0
  407a94:	cneg	w0, w0, lt  // lt = tstop
  407a98:	and	w0, w0, #0xff
  407a9c:	neg	w0, w0
  407aa0:	str	w0, [sp, #56]
  407aa4:	b	407df0 <process_socket+0x62c>
  407aa8:	ldr	x0, [sp, #144]
  407aac:	cmp	x0, #0x0
  407ab0:	b.ne	407c78 <process_socket+0x4b4>  // b.any
  407ab4:	str	xzr, [sp, #128]
  407ab8:	ldr	x0, [sp, #152]
  407abc:	bl	403520 <free@plt>
  407ac0:	ldr	x0, [sp, #232]
  407ac4:	cmp	x0, #0xf
  407ac8:	b.ls	407ad4 <process_socket+0x310>  // b.plast
  407acc:	ldr	x0, [sp, #224]
  407ad0:	b	407ad8 <process_socket+0x314>
  407ad4:	mov	x0, #0x0                   	// #0
  407ad8:	str	x0, [sp, #120]
  407adc:	b	407b6c <process_socket+0x3a8>
  407ae0:	ldr	x0, [sp, #120]
  407ae4:	ldr	w0, [x0, #8]
  407ae8:	cmp	w0, #0x1
  407aec:	b.ne	407b5c <process_socket+0x398>  // b.any
  407af0:	ldr	x0, [sp, #120]
  407af4:	ldr	w0, [x0, #12]
  407af8:	cmp	w0, #0x1
  407afc:	b.ne	407b5c <process_socket+0x398>  // b.any
  407b00:	ldr	x0, [sp, #120]
  407b04:	ldr	x0, [x0]
  407b08:	cmp	x0, #0x14
  407b0c:	b.ne	407b5c <process_socket+0x398>  // b.any
  407b10:	ldr	x0, [sp, #128]
  407b14:	cmp	x0, #0x0
  407b18:	cset	w0, ne  // ne = any
  407b1c:	and	w0, w0, #0xff
  407b20:	and	x0, x0, #0xff
  407b24:	cmp	x0, #0x0
  407b28:	b.eq	407b54 <process_socket+0x390>  // b.none
  407b2c:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  407b30:	add	x1, x0, #0xd73
  407b34:	adrp	x0, 40c000 <_fini+0x13a0>
  407b38:	add	x4, x0, #0x3f0
  407b3c:	mov	w3, #0x3a6                 	// #934
  407b40:	mov	x2, x1
  407b44:	adrp	x0, 40b000 <_fini+0x3a0>
  407b48:	add	x1, x0, #0x820
  407b4c:	mov	w0, #0x0                   	// #0
  407b50:	bl	403080 <log_assert_failed_realm@plt>
  407b54:	ldr	x0, [sp, #120]
  407b58:	str	x0, [sp, #128]
  407b5c:	add	x0, sp, #0xc0
  407b60:	ldr	x1, [sp, #120]
  407b64:	bl	403000 <__cmsg_nxthdr@plt>
  407b68:	str	x0, [sp, #120]
  407b6c:	ldr	x0, [sp, #120]
  407b70:	cmp	x0, #0x0
  407b74:	b.ne	407ae0 <process_socket+0x31c>  // b.any
  407b78:	ldr	x0, [sp, #128]
  407b7c:	cmp	x0, #0x0
  407b80:	b.ne	407c04 <process_socket+0x440>  // b.any
  407b84:	mov	w0, #0x3                   	// #3
  407b88:	str	w0, [sp, #84]
  407b8c:	str	wzr, [sp, #88]
  407b90:	str	wzr, [sp, #92]
  407b94:	ldr	w0, [sp, #92]
  407b98:	bl	403660 <log_get_max_level_realm@plt>
  407b9c:	mov	w1, w0
  407ba0:	ldr	w0, [sp, #84]
  407ba4:	and	w0, w0, #0x7
  407ba8:	cmp	w1, w0
  407bac:	b.lt	407bf0 <process_socket+0x42c>  // b.tstop
  407bb0:	ldr	w0, [sp, #92]
  407bb4:	lsl	w1, w0, #10
  407bb8:	ldr	w0, [sp, #84]
  407bbc:	orr	w6, w1, w0
  407bc0:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  407bc4:	add	x1, x0, #0xd73
  407bc8:	adrp	x0, 40b000 <_fini+0x3a0>
  407bcc:	add	x5, x0, #0x828
  407bd0:	adrp	x0, 40c000 <_fini+0x13a0>
  407bd4:	add	x4, x0, #0x400
  407bd8:	mov	w3, #0x3ac                 	// #940
  407bdc:	mov	x2, x1
  407be0:	ldr	w1, [sp, #88]
  407be4:	mov	w0, w6
  407be8:	bl	4033b0 <log_internal_realm@plt>
  407bec:	b	407bf8 <process_socket+0x434>
  407bf0:	ldr	w0, [sp, #88]
  407bf4:	cmp	w0, #0x0
  407bf8:	mov	w0, #0xffffffb6            	// #-74
  407bfc:	str	w0, [sp, #56]
  407c00:	b	407df0 <process_socket+0x62c>
  407c04:	ldr	w0, [sp, #48]
  407c08:	mvn	w0, w0
  407c0c:	lsr	w0, w0, #31
  407c10:	and	w0, w0, #0xff
  407c14:	and	x0, x0, #0xff
  407c18:	cmp	x0, #0x0
  407c1c:	b.eq	407c48 <process_socket+0x484>  // b.none
  407c20:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  407c24:	add	x1, x0, #0xd73
  407c28:	adrp	x0, 40c000 <_fini+0x13a0>
  407c2c:	add	x4, x0, #0x3f0
  407c30:	mov	w3, #0x3b1                 	// #945
  407c34:	mov	x2, x1
  407c38:	adrp	x0, 40b000 <_fini+0x3a0>
  407c3c:	add	x1, x0, #0x850
  407c40:	mov	w0, #0x0                   	// #0
  407c44:	bl	403080 <log_assert_failed_realm@plt>
  407c48:	ldr	x0, [sp, #128]
  407c4c:	add	x0, x0, #0x10
  407c50:	ldr	w0, [x0]
  407c54:	str	w0, [sp, #48]
  407c58:	nop
  407c5c:	ldr	w0, [sp, #48]
  407c60:	lsr	w0, w0, #31
  407c64:	and	w0, w0, #0xff
  407c68:	and	x0, x0, #0xff
  407c6c:	cmp	x0, #0x0
  407c70:	b.eq	407ce4 <process_socket+0x520>  // b.none
  407c74:	b	407cbc <process_socket+0x4f8>
  407c78:	ldr	x1, [sp, #152]
  407c7c:	ldr	x0, [sp, #144]
  407c80:	add	x0, x1, x0
  407c84:	strb	wzr, [x0]
  407c88:	ldr	x0, [sp, #144]
  407c8c:	str	x0, [sp, #160]
  407c90:	ldr	x1, [sp, #152]
  407c94:	ldr	x2, [sp, #160]
  407c98:	add	x0, sp, #0xa8
  407c9c:	bl	402ff0 <iovw_put@plt>
  407ca0:	str	w0, [sp, #56]
  407ca4:	ldr	w0, [sp, #56]
  407ca8:	cmp	w0, #0x0
  407cac:	b.lt	407de4 <process_socket+0x620>  // b.tstop
  407cb0:	add	x0, sp, #0xc0
  407cb4:	bl	403380 <cmsg_close_all@plt>
  407cb8:	b	4078c8 <process_socket+0x104>
  407cbc:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  407cc0:	add	x1, x0, #0xd73
  407cc4:	adrp	x0, 40c000 <_fini+0x13a0>
  407cc8:	add	x4, x0, #0x3f0
  407ccc:	mov	w3, #0x3c2                 	// #962
  407cd0:	mov	x2, x1
  407cd4:	adrp	x0, 40b000 <_fini+0x3a0>
  407cd8:	add	x1, x0, #0x518
  407cdc:	mov	w0, #0x0                   	// #0
  407ce0:	bl	403080 <log_assert_failed_realm@plt>
  407ce4:	add	x1, sp, #0xa8
  407ce8:	add	x0, sp, #0x110
  407cec:	bl	4073ec <save_context>
  407cf0:	str	w0, [sp, #56]
  407cf4:	ldr	w0, [sp, #56]
  407cf8:	cmp	w0, #0x0
  407cfc:	b.lt	407dec <process_socket+0x628>  // b.tstop
  407d00:	str	wzr, [sp, #52]
  407d04:	b	407dc0 <process_socket+0x5fc>
  407d08:	ldrsw	x0, [sp, #52]
  407d0c:	lsl	x0, x0, #3
  407d10:	add	x1, sp, #0x110
  407d14:	ldr	x0, [x1, x0]
  407d18:	cmp	x0, #0x0
  407d1c:	b.ne	407db4 <process_socket+0x5f0>  // b.any
  407d20:	mov	w0, #0x3                   	// #3
  407d24:	str	w0, [sp, #72]
  407d28:	mov	w0, #0x16                  	// #22
  407d2c:	movk	w0, #0x4000, lsl #16
  407d30:	str	w0, [sp, #76]
  407d34:	str	wzr, [sp, #80]
  407d38:	ldr	w0, [sp, #80]
  407d3c:	bl	403660 <log_get_max_level_realm@plt>
  407d40:	mov	w1, w0
  407d44:	ldr	w0, [sp, #72]
  407d48:	and	w0, w0, #0x7
  407d4c:	cmp	w1, w0
  407d50:	b.lt	407d98 <process_socket+0x5d4>  // b.tstop
  407d54:	ldr	w0, [sp, #80]
  407d58:	lsl	w1, w0, #10
  407d5c:	ldr	w0, [sp, #72]
  407d60:	orr	w7, w1, w0
  407d64:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  407d68:	add	x1, x0, #0xd73
  407d6c:	ldr	w6, [sp, #52]
  407d70:	adrp	x0, 40b000 <_fini+0x3a0>
  407d74:	add	x5, x0, #0x860
  407d78:	adrp	x0, 40c000 <_fini+0x13a0>
  407d7c:	add	x4, x0, #0x400
  407d80:	mov	w3, #0x3cb                 	// #971
  407d84:	mov	x2, x1
  407d88:	ldr	w1, [sp, #76]
  407d8c:	mov	w0, w7
  407d90:	bl	4033b0 <log_internal_realm@plt>
  407d94:	b	407dac <process_socket+0x5e8>
  407d98:	ldr	w0, [sp, #76]
  407d9c:	cmp	w0, #0x0
  407da0:	cneg	w0, w0, lt  // lt = tstop
  407da4:	and	w0, w0, #0xff
  407da8:	neg	w0, w0
  407dac:	str	w0, [sp, #56]
  407db0:	b	407df0 <process_socket+0x62c>
  407db4:	ldr	w0, [sp, #52]
  407db8:	add	w0, w0, #0x1
  407dbc:	str	w0, [sp, #52]
  407dc0:	ldr	w0, [sp, #52]
  407dc4:	cmp	w0, #0x7
  407dc8:	b.le	407d08 <process_socket+0x544>
  407dcc:	ldr	w2, [sp, #48]
  407dd0:	add	x1, sp, #0xa8
  407dd4:	add	x0, sp, #0x110
  407dd8:	bl	406948 <submit_coredump>
  407ddc:	str	w0, [sp, #56]
  407de0:	b	407df0 <process_socket+0x62c>
  407de4:	nop
  407de8:	b	407df0 <process_socket+0x62c>
  407dec:	nop
  407df0:	add	x0, sp, #0xa8
  407df4:	mov	w1, #0x1                   	// #1
  407df8:	bl	402ef0 <iovw_free_contents@plt>
  407dfc:	ldr	w19, [sp, #56]
  407e00:	add	x0, sp, #0x30
  407e04:	bl	403ae4 <closep>
  407e08:	mov	w1, w19
  407e0c:	adrp	x0, 41d000 <__FRAME_END__+0xfdec>
  407e10:	add	x0, x0, #0x948
  407e14:	ldr	x2, [sp, #360]
  407e18:	ldr	x0, [x0]
  407e1c:	eor	x0, x2, x0
  407e20:	cmp	x0, #0x0
  407e24:	b.eq	407e2c <process_socket+0x668>  // b.none
  407e28:	bl	4032b0 <__stack_chk_fail@plt>
  407e2c:	mov	w0, w1
  407e30:	ldr	x19, [sp, #16]
  407e34:	ldp	x29, x30, [sp], #368
  407e38:	ret

0000000000407e3c <send_iovec>:
  407e3c:	stp	x29, x30, [sp, #-224]!
  407e40:	mov	x29, sp
  407e44:	stp	x19, x20, [sp, #16]
  407e48:	str	x0, [sp, #40]
  407e4c:	str	w1, [sp, #36]
  407e50:	adrp	x0, 41d000 <__FRAME_END__+0xfdec>
  407e54:	add	x0, x0, #0x948
  407e58:	ldr	x1, [x0]
  407e5c:	str	x1, [sp, #216]
  407e60:	mov	x1, #0x0                   	// #0
  407e64:	mov	w0, #0xffffffff            	// #-1
  407e68:	str	w0, [sp, #48]
  407e6c:	ldr	x0, [sp, #40]
  407e70:	cmp	x0, #0x0
  407e74:	cset	w0, eq  // eq = none
  407e78:	and	w0, w0, #0xff
  407e7c:	and	x0, x0, #0xff
  407e80:	cmp	x0, #0x0
  407e84:	b.eq	407eb0 <send_iovec+0x74>  // b.none
  407e88:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  407e8c:	add	x1, x0, #0xd73
  407e90:	adrp	x0, 40c000 <_fini+0x13a0>
  407e94:	add	x4, x0, #0x410
  407e98:	mov	w3, #0x3e2                 	// #994
  407e9c:	mov	x2, x1
  407ea0:	adrp	x0, 40b000 <_fini+0x3a0>
  407ea4:	add	x1, x0, #0x510
  407ea8:	mov	w0, #0x0                   	// #0
  407eac:	bl	403080 <log_assert_failed_realm@plt>
  407eb0:	ldr	w0, [sp, #36]
  407eb4:	lsr	w0, w0, #31
  407eb8:	and	w0, w0, #0xff
  407ebc:	and	x0, x0, #0xff
  407ec0:	cmp	x0, #0x0
  407ec4:	b.eq	407ef0 <send_iovec+0xb4>  // b.none
  407ec8:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  407ecc:	add	x1, x0, #0xd73
  407ed0:	adrp	x0, 40c000 <_fini+0x13a0>
  407ed4:	add	x4, x0, #0x410
  407ed8:	mov	w3, #0x3e3                 	// #995
  407edc:	mov	x2, x1
  407ee0:	adrp	x0, 40b000 <_fini+0x3a0>
  407ee4:	add	x1, x0, #0x518
  407ee8:	mov	w0, #0x0                   	// #0
  407eec:	bl	403080 <log_assert_failed_realm@plt>
  407ef0:	mov	w2, #0x0                   	// #0
  407ef4:	mov	w1, #0x5                   	// #5
  407ef8:	movk	w1, #0x8, lsl #16
  407efc:	mov	w0, #0x1                   	// #1
  407f00:	bl	402fb0 <socket@plt>
  407f04:	str	w0, [sp, #48]
  407f08:	ldr	w0, [sp, #48]
  407f0c:	cmp	w0, #0x0
  407f10:	b.ge	407fa4 <send_iovec+0x168>  // b.tcont
  407f14:	mov	w0, #0x3                   	// #3
  407f18:	str	w0, [sp, #92]
  407f1c:	bl	403220 <__errno_location@plt>
  407f20:	ldr	w0, [x0]
  407f24:	str	w0, [sp, #96]
  407f28:	str	wzr, [sp, #100]
  407f2c:	ldr	w0, [sp, #100]
  407f30:	bl	403660 <log_get_max_level_realm@plt>
  407f34:	mov	w1, w0
  407f38:	ldr	w0, [sp, #92]
  407f3c:	and	w0, w0, #0x7
  407f40:	cmp	w1, w0
  407f44:	b.lt	407f8c <send_iovec+0x150>  // b.tstop
  407f48:	ldr	w0, [sp, #100]
  407f4c:	lsl	w1, w0, #10
  407f50:	ldr	w0, [sp, #92]
  407f54:	orr	w6, w1, w0
  407f58:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  407f5c:	add	x1, x0, #0xd73
  407f60:	adrp	x0, 40b000 <_fini+0x3a0>
  407f64:	add	x5, x0, #0x898
  407f68:	adrp	x0, 40c000 <_fini+0x13a0>
  407f6c:	add	x4, x0, #0x420
  407f70:	mov	w3, #0x3e7                 	// #999
  407f74:	mov	x2, x1
  407f78:	ldr	w1, [sp, #96]
  407f7c:	mov	w0, w6
  407f80:	bl	4033b0 <log_internal_realm@plt>
  407f84:	mov	w19, w0
  407f88:	b	408348 <send_iovec+0x50c>
  407f8c:	ldr	w0, [sp, #96]
  407f90:	cmp	w0, #0x0
  407f94:	cneg	w0, w0, lt  // lt = tstop
  407f98:	and	w0, w0, #0xff
  407f9c:	neg	w19, w0
  407fa0:	b	408348 <send_iovec+0x50c>
  407fa4:	ldr	w19, [sp, #48]
  407fa8:	adrp	x0, 40c000 <_fini+0x13a0>
  407fac:	add	x20, x0, #0x430
  407fb0:	adrp	x0, 40c000 <_fini+0x13a0>
  407fb4:	add	x0, x0, #0x430
  407fb8:	str	x0, [sp, #112]
  407fbc:	ldr	x0, [sp, #112]
  407fc0:	ldrh	w0, [x0]
  407fc4:	cmp	w0, #0x1
  407fc8:	cset	w0, ne  // ne = any
  407fcc:	and	w0, w0, #0xff
  407fd0:	and	x0, x0, #0xff
  407fd4:	cmp	x0, #0x0
  407fd8:	b.eq	408004 <send_iovec+0x1c8>  // b.none
  407fdc:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  407fe0:	add	x1, x0, #0xd73
  407fe4:	adrp	x0, 40c000 <_fini+0x13a0>
  407fe8:	add	x4, x0, #0x410
  407fec:	mov	w3, #0x3e9                 	// #1001
  407ff0:	mov	x2, x1
  407ff4:	adrp	x0, 40b000 <_fini+0x3a0>
  407ff8:	add	x1, x0, #0x8c0
  407ffc:	mov	w0, #0x0                   	// #0
  408000:	bl	403080 <log_assert_failed_realm@plt>
  408004:	ldr	x0, [sp, #112]
  408008:	ldrb	w0, [x0, #2]
  40800c:	cmp	w0, #0x0
  408010:	b.ne	408030 <send_iovec+0x1f4>  // b.any
  408014:	ldr	x0, [sp, #112]
  408018:	add	x0, x0, #0x2
  40801c:	add	x0, x0, #0x1
  408020:	mov	x1, #0x6b                  	// #107
  408024:	bl	402f90 <strnlen@plt>
  408028:	add	x0, x0, #0x3
  40802c:	b	408044 <send_iovec+0x208>
  408030:	ldr	x0, [sp, #112]
  408034:	add	x0, x0, #0x2
  408038:	mov	x1, #0x6c                  	// #108
  40803c:	bl	402f90 <strnlen@plt>
  408040:	add	x0, x0, #0x3
  408044:	mov	w2, w0
  408048:	mov	x1, x20
  40804c:	mov	w0, w19
  408050:	bl	4035d0 <connect@plt>
  408054:	cmp	w0, #0x0
  408058:	b.ge	4080ec <send_iovec+0x2b0>  // b.tcont
  40805c:	mov	w0, #0x3                   	// #3
  408060:	str	w0, [sp, #80]
  408064:	bl	403220 <__errno_location@plt>
  408068:	ldr	w0, [x0]
  40806c:	str	w0, [sp, #84]
  408070:	str	wzr, [sp, #88]
  408074:	ldr	w0, [sp, #88]
  408078:	bl	403660 <log_get_max_level_realm@plt>
  40807c:	mov	w1, w0
  408080:	ldr	w0, [sp, #80]
  408084:	and	w0, w0, #0x7
  408088:	cmp	w1, w0
  40808c:	b.lt	4080d4 <send_iovec+0x298>  // b.tstop
  408090:	ldr	w0, [sp, #88]
  408094:	lsl	w1, w0, #10
  408098:	ldr	w0, [sp, #80]
  40809c:	orr	w6, w1, w0
  4080a0:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  4080a4:	add	x1, x0, #0xd73
  4080a8:	adrp	x0, 40b000 <_fini+0x3a0>
  4080ac:	add	x5, x0, #0x8e0
  4080b0:	adrp	x0, 40c000 <_fini+0x13a0>
  4080b4:	add	x4, x0, #0x420
  4080b8:	mov	w3, #0x3ea                 	// #1002
  4080bc:	mov	x2, x1
  4080c0:	ldr	w1, [sp, #84]
  4080c4:	mov	w0, w6
  4080c8:	bl	4033b0 <log_internal_realm@plt>
  4080cc:	mov	w19, w0
  4080d0:	b	408348 <send_iovec+0x50c>
  4080d4:	ldr	w0, [sp, #84]
  4080d8:	cmp	w0, #0x0
  4080dc:	cneg	w0, w0, lt  // lt = tstop
  4080e0:	and	w0, w0, #0xff
  4080e4:	neg	w19, w0
  4080e8:	b	408348 <send_iovec+0x50c>
  4080ec:	str	xzr, [sp, #104]
  4080f0:	b	408274 <send_iovec+0x438>
  4080f4:	stp	xzr, xzr, [sp, #120]
  4080f8:	stp	xzr, xzr, [sp, #136]
  4080fc:	stp	xzr, xzr, [sp, #152]
  408100:	str	xzr, [sp, #168]
  408104:	ldr	x0, [sp, #40]
  408108:	ldr	x1, [x0]
  40810c:	ldr	x0, [sp, #104]
  408110:	lsl	x0, x0, #4
  408114:	add	x0, x1, x0
  408118:	str	x0, [sp, #136]
  40811c:	mov	x0, #0x1                   	// #1
  408120:	str	x0, [sp, #144]
  408124:	ldr	w0, [sp, #48]
  408128:	add	x1, sp, #0x78
  40812c:	mov	w2, #0x4000                	// #16384
  408130:	bl	403540 <sendmsg@plt>
  408134:	cmp	x0, #0x0
  408138:	b.ge	408264 <send_iovec+0x428>  // b.tcont
  40813c:	bl	403220 <__errno_location@plt>
  408140:	ldr	w0, [x0]
  408144:	cmp	w0, #0x5a
  408148:	b.ne	4081d4 <send_iovec+0x398>  // b.any
  40814c:	ldr	x0, [sp, #136]
  408150:	ldr	x0, [x0, #8]
  408154:	cmp	x0, #0x0
  408158:	b.eq	4081d4 <send_iovec+0x398>  // b.none
  40815c:	ldr	x1, [sp, #136]
  408160:	add	x0, sp, #0xb0
  408164:	cmp	x1, x0
  408168:	b.eq	4081c4 <send_iovec+0x388>  // b.none
  40816c:	ldr	x0, [sp, #40]
  408170:	ldr	x1, [x0]
  408174:	ldr	x0, [sp, #104]
  408178:	lsl	x0, x0, #4
  40817c:	add	x0, x1, x0
  408180:	ldp	x0, x1, [x0]
  408184:	stp	x0, x1, [sp, #176]
  408188:	adrp	x0, 40b000 <_fini+0x3a0>
  40818c:	add	x1, x0, #0x958
  408190:	add	x0, sp, #0xd0
  408194:	ldrh	w2, [x1]
  408198:	strh	w2, [x0]
  40819c:	ldrb	w1, [x1, #2]
  4081a0:	strb	w1, [x0, #2]
  4081a4:	add	x0, sp, #0xd0
  4081a8:	str	x0, [sp, #192]
  4081ac:	mov	x0, #0x3                   	// #3
  4081b0:	str	x0, [sp, #200]
  4081b4:	add	x0, sp, #0xb0
  4081b8:	str	x0, [sp, #136]
  4081bc:	mov	x0, #0x2                   	// #2
  4081c0:	str	x0, [sp, #144]
  4081c4:	ldr	x0, [sp, #184]
  4081c8:	lsr	x0, x0, #1
  4081cc:	str	x0, [sp, #184]
  4081d0:	b	408124 <send_iovec+0x2e8>
  4081d4:	mov	w0, #0x3                   	// #3
  4081d8:	str	w0, [sp, #68]
  4081dc:	bl	403220 <__errno_location@plt>
  4081e0:	ldr	w0, [x0]
  4081e4:	str	w0, [sp, #72]
  4081e8:	str	wzr, [sp, #76]
  4081ec:	ldr	w0, [sp, #76]
  4081f0:	bl	403660 <log_get_max_level_realm@plt>
  4081f4:	mov	w1, w0
  4081f8:	ldr	w0, [sp, #68]
  4081fc:	and	w0, w0, #0x7
  408200:	cmp	w1, w0
  408204:	b.lt	40824c <send_iovec+0x410>  // b.tstop
  408208:	ldr	w0, [sp, #76]
  40820c:	lsl	w1, w0, #10
  408210:	ldr	w0, [sp, #68]
  408214:	orr	w6, w1, w0
  408218:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  40821c:	add	x1, x0, #0xd73
  408220:	adrp	x0, 40b000 <_fini+0x3a0>
  408224:	add	x5, x0, #0x910
  408228:	adrp	x0, 40c000 <_fini+0x13a0>
  40822c:	add	x4, x0, #0x420
  408230:	mov	w3, #0x40e                 	// #1038
  408234:	mov	x2, x1
  408238:	ldr	w1, [sp, #72]
  40823c:	mov	w0, w6
  408240:	bl	4033b0 <log_internal_realm@plt>
  408244:	mov	w19, w0
  408248:	b	408348 <send_iovec+0x50c>
  40824c:	ldr	w0, [sp, #72]
  408250:	cmp	w0, #0x0
  408254:	cneg	w0, w0, lt  // lt = tstop
  408258:	and	w0, w0, #0xff
  40825c:	neg	w19, w0
  408260:	b	408348 <send_iovec+0x50c>
  408264:	nop
  408268:	ldr	x0, [sp, #104]
  40826c:	add	x0, x0, #0x1
  408270:	str	x0, [sp, #104]
  408274:	ldr	x0, [sp, #40]
  408278:	ldr	x0, [x0, #8]
  40827c:	ldr	x1, [sp, #104]
  408280:	cmp	x1, x0
  408284:	b.cc	4080f4 <send_iovec+0x2b8>  // b.lo, b.ul, b.last
  408288:	ldr	w0, [sp, #48]
  40828c:	mov	w6, #0x0                   	// #0
  408290:	mov	w5, #0x0                   	// #0
  408294:	mov	x4, #0x0                   	// #0
  408298:	mov	x3, #0x0                   	// #0
  40829c:	mov	x2, #0x0                   	// #0
  4082a0:	ldr	w1, [sp, #36]
  4082a4:	bl	402ee0 <send_one_fd_iov_sa@plt>
  4082a8:	str	w0, [sp, #52]
  4082ac:	ldr	w0, [sp, #52]
  4082b0:	cmp	w0, #0x0
  4082b4:	b.ge	408344 <send_iovec+0x508>  // b.tcont
  4082b8:	mov	w0, #0x3                   	// #3
  4082bc:	str	w0, [sp, #56]
  4082c0:	ldr	w0, [sp, #52]
  4082c4:	str	w0, [sp, #60]
  4082c8:	str	wzr, [sp, #64]
  4082cc:	ldr	w0, [sp, #64]
  4082d0:	bl	403660 <log_get_max_level_realm@plt>
  4082d4:	mov	w1, w0
  4082d8:	ldr	w0, [sp, #56]
  4082dc:	and	w0, w0, #0x7
  4082e0:	cmp	w1, w0
  4082e4:	b.lt	40832c <send_iovec+0x4f0>  // b.tstop
  4082e8:	ldr	w0, [sp, #64]
  4082ec:	lsl	w1, w0, #10
  4082f0:	ldr	w0, [sp, #56]
  4082f4:	orr	w6, w1, w0
  4082f8:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  4082fc:	add	x1, x0, #0xd73
  408300:	adrp	x0, 40b000 <_fini+0x3a0>
  408304:	add	x5, x0, #0x938
  408308:	adrp	x0, 40c000 <_fini+0x13a0>
  40830c:	add	x4, x0, #0x420
  408310:	mov	w3, #0x414                 	// #1044
  408314:	mov	x2, x1
  408318:	ldr	w1, [sp, #60]
  40831c:	mov	w0, w6
  408320:	bl	4033b0 <log_internal_realm@plt>
  408324:	mov	w19, w0
  408328:	b	408348 <send_iovec+0x50c>
  40832c:	ldr	w0, [sp, #60]
  408330:	cmp	w0, #0x0
  408334:	cneg	w0, w0, lt  // lt = tstop
  408338:	and	w0, w0, #0xff
  40833c:	neg	w19, w0
  408340:	b	408348 <send_iovec+0x50c>
  408344:	mov	w19, #0x0                   	// #0
  408348:	add	x0, sp, #0x30
  40834c:	bl	403ae4 <closep>
  408350:	mov	w1, w19
  408354:	adrp	x0, 41d000 <__FRAME_END__+0xfdec>
  408358:	add	x0, x0, #0x948
  40835c:	ldr	x2, [sp, #216]
  408360:	ldr	x0, [x0]
  408364:	eor	x0, x2, x0
  408368:	cmp	x0, #0x0
  40836c:	b.eq	408374 <send_iovec+0x538>  // b.none
  408370:	bl	4032b0 <__stack_chk_fail@plt>
  408374:	mov	w0, w1
  408378:	ldp	x19, x20, [sp, #16]
  40837c:	ldp	x29, x30, [sp], #224
  408380:	ret

0000000000408384 <gather_pid_metadata_from_argv>:
  408384:	stp	x29, x30, [sp, #-112]!
  408388:	mov	x29, sp
  40838c:	str	x19, [sp, #16]
  408390:	str	x0, [sp, #56]
  408394:	str	x1, [sp, #48]
  408398:	str	w2, [sp, #44]
  40839c:	str	x3, [sp, #32]
  4083a0:	adrp	x0, 41d000 <__FRAME_END__+0xfdec>
  4083a4:	add	x0, x0, #0x948
  4083a8:	ldr	x1, [x0]
  4083ac:	str	x1, [sp, #104]
  4083b0:	mov	x1, #0x0                   	// #0
  4083b4:	str	xzr, [sp, #88]
  4083b8:	ldr	w0, [sp, #44]
  4083bc:	cmp	w0, #0x6
  4083c0:	b.gt	40845c <gather_pid_metadata_from_argv+0xd8>
  4083c4:	mov	w0, #0x3                   	// #3
  4083c8:	str	w0, [sp, #76]
  4083cc:	mov	w0, #0x16                  	// #22
  4083d0:	movk	w0, #0x4000, lsl #16
  4083d4:	str	w0, [sp, #80]
  4083d8:	str	wzr, [sp, #84]
  4083dc:	ldr	w0, [sp, #84]
  4083e0:	bl	403660 <log_get_max_level_realm@plt>
  4083e4:	mov	w1, w0
  4083e8:	ldr	w0, [sp, #76]
  4083ec:	and	w0, w0, #0x7
  4083f0:	cmp	w1, w0
  4083f4:	b.lt	408444 <gather_pid_metadata_from_argv+0xc0>  // b.tstop
  4083f8:	ldr	w0, [sp, #84]
  4083fc:	lsl	w1, w0, #10
  408400:	ldr	w0, [sp, #76]
  408404:	orr	w8, w1, w0
  408408:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  40840c:	add	x1, x0, #0xd73
  408410:	mov	w7, #0x7                   	// #7
  408414:	ldr	w6, [sp, #44]
  408418:	adrp	x0, 40b000 <_fini+0x3a0>
  40841c:	add	x5, x0, #0x960
  408420:	adrp	x0, 40c000 <_fini+0x13a0>
  408424:	add	x4, x0, #0x4b0
  408428:	mov	w3, #0x423                 	// #1059
  40842c:	mov	x2, x1
  408430:	ldr	w1, [sp, #80]
  408434:	mov	w0, w8
  408438:	bl	4033b0 <log_internal_realm@plt>
  40843c:	mov	w19, w0
  408440:	b	4085c4 <gather_pid_metadata_from_argv+0x240>
  408444:	ldr	w0, [sp, #80]
  408448:	cmp	w0, #0x0
  40844c:	cneg	w0, w0, lt  // lt = tstop
  408450:	and	w0, w0, #0xff
  408454:	neg	w19, w0
  408458:	b	4085c4 <gather_pid_metadata_from_argv+0x240>
  40845c:	str	wzr, [sp, #68]
  408460:	b	4085a8 <gather_pid_metadata_from_argv+0x224>
  408464:	ldrsw	x0, [sp, #68]
  408468:	lsl	x0, x0, #3
  40846c:	ldr	x1, [sp, #32]
  408470:	add	x0, x1, x0
  408474:	ldr	x0, [x0]
  408478:	str	x0, [sp, #96]
  40847c:	ldr	w0, [sp, #68]
  408480:	cmp	w0, #0x3
  408484:	b.eq	4084f8 <gather_pid_metadata_from_argv+0x174>  // b.none
  408488:	ldr	w0, [sp, #68]
  40848c:	cmp	w0, #0x4
  408490:	b.ne	408550 <gather_pid_metadata_from_argv+0x1cc>  // b.any
  408494:	ldrsw	x0, [sp, #68]
  408498:	lsl	x0, x0, #3
  40849c:	ldr	x1, [sp, #32]
  4084a0:	add	x0, x1, x0
  4084a4:	ldr	x3, [x0]
  4084a8:	mov	x2, #0x0                   	// #0
  4084ac:	adrp	x0, 40b000 <_fini+0x3a0>
  4084b0:	add	x1, x0, #0x9a0
  4084b4:	mov	x0, x3
  4084b8:	bl	403050 <strjoin_real@plt>
  4084bc:	str	x0, [sp, #88]
  4084c0:	ldr	x0, [sp, #88]
  4084c4:	str	x0, [sp, #96]
  4084c8:	ldr	x0, [sp, #96]
  4084cc:	cmp	x0, #0x0
  4084d0:	b.ne	408558 <gather_pid_metadata_from_argv+0x1d4>  // b.any
  4084d4:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  4084d8:	add	x1, x0, #0xd73
  4084dc:	adrp	x0, 40c000 <_fini+0x13a0>
  4084e0:	add	x3, x0, #0x4b0
  4084e4:	mov	w2, #0x433                 	// #1075
  4084e8:	mov	w0, #0x0                   	// #0
  4084ec:	bl	403620 <log_oom_internal@plt>
  4084f0:	mov	w19, w0
  4084f4:	b	4085c4 <gather_pid_metadata_from_argv+0x240>
  4084f8:	ldrsw	x0, [sp, #68]
  4084fc:	lsl	x0, x0, #3
  408500:	ldr	x1, [sp, #32]
  408504:	add	x0, x1, x0
  408508:	ldr	x0, [x0]
  40850c:	add	x1, sp, #0x40
  408510:	bl	403280 <safe_atoi@plt>
  408514:	cmp	w0, #0x0
  408518:	b.lt	408560 <gather_pid_metadata_from_argv+0x1dc>  // b.tstop
  40851c:	ldr	w0, [sp, #64]
  408520:	bl	403c6c <SIGNAL_VALID>
  408524:	and	w0, w0, #0xff
  408528:	cmp	w0, #0x0
  40852c:	b.eq	408560 <gather_pid_metadata_from_argv+0x1dc>  // b.none
  408530:	ldr	w0, [sp, #64]
  408534:	bl	403330 <signal_to_string@plt>
  408538:	mov	x2, x0
  40853c:	adrp	x0, 40b000 <_fini+0x3a0>
  408540:	add	x1, x0, #0x9a8
  408544:	ldr	x0, [sp, #56]
  408548:	bl	403360 <iovw_put_string_field@plt>
  40854c:	b	408560 <gather_pid_metadata_from_argv+0x1dc>
  408550:	nop
  408554:	b	408564 <gather_pid_metadata_from_argv+0x1e0>
  408558:	nop
  40855c:	b	408564 <gather_pid_metadata_from_argv+0x1e0>
  408560:	nop
  408564:	adrp	x0, 40c000 <_fini+0x13a0>
  408568:	add	x0, x0, #0x30
  40856c:	ldrsw	x1, [sp, #68]
  408570:	ldr	x0, [x0, x1, lsl #3]
  408574:	ldr	x2, [sp, #96]
  408578:	mov	x1, x0
  40857c:	ldr	x0, [sp, #56]
  408580:	bl	403360 <iovw_put_string_field@plt>
  408584:	str	w0, [sp, #72]
  408588:	ldr	w0, [sp, #72]
  40858c:	cmp	w0, #0x0
  408590:	b.ge	40859c <gather_pid_metadata_from_argv+0x218>  // b.tcont
  408594:	ldr	w19, [sp, #72]
  408598:	b	4085c4 <gather_pid_metadata_from_argv+0x240>
  40859c:	ldr	w0, [sp, #68]
  4085a0:	add	w0, w0, #0x1
  4085a4:	str	w0, [sp, #68]
  4085a8:	ldr	w0, [sp, #68]
  4085ac:	cmp	w0, #0x6
  4085b0:	b.le	408464 <gather_pid_metadata_from_argv+0xe0>
  4085b4:	ldr	x1, [sp, #56]
  4085b8:	ldr	x0, [sp, #48]
  4085bc:	bl	4073ec <save_context>
  4085c0:	mov	w19, w0
  4085c4:	add	x0, sp, #0x58
  4085c8:	bl	4038ac <freep>
  4085cc:	mov	w1, w19
  4085d0:	adrp	x0, 41d000 <__FRAME_END__+0xfdec>
  4085d4:	add	x0, x0, #0x948
  4085d8:	ldr	x2, [sp, #104]
  4085dc:	ldr	x0, [x0]
  4085e0:	eor	x0, x2, x0
  4085e4:	cmp	x0, #0x0
  4085e8:	b.eq	4085f0 <gather_pid_metadata_from_argv+0x26c>  // b.none
  4085ec:	bl	4032b0 <__stack_chk_fail@plt>
  4085f0:	mov	w0, w1
  4085f4:	ldr	x19, [sp, #16]
  4085f8:	ldp	x29, x30, [sp], #112
  4085fc:	ret

0000000000408600 <gather_pid_metadata>:
  408600:	stp	x29, x30, [sp, #-208]!
  408604:	mov	x29, sp
  408608:	str	x0, [x29, #24]
  40860c:	str	x1, [x29, #16]
  408610:	adrp	x0, 41d000 <__FRAME_END__+0xfdec>
  408614:	add	x0, x0, #0x948
  408618:	ldr	x1, [x0]
  40861c:	str	x1, [x29, #200]
  408620:	mov	x1, #0x0                   	// #0
  408624:	ldr	x0, [x29, #16]
  408628:	ldr	w0, [x0, #80]
  40862c:	str	w0, [x29, #56]
  408630:	add	x0, x29, #0x68
  408634:	mov	x1, x0
  408638:	ldr	w0, [x29, #56]
  40863c:	bl	403210 <get_process_comm@plt>
  408640:	str	w0, [x29, #52]
  408644:	ldr	w0, [x29, #52]
  408648:	cmp	w0, #0x0
  40864c:	b.ge	4086d8 <gather_pid_metadata+0xd8>  // b.tcont
  408650:	mov	w0, #0x3                   	// #3
  408654:	str	w0, [x29, #92]
  408658:	ldr	w0, [x29, #52]
  40865c:	str	w0, [x29, #96]
  408660:	str	wzr, [x29, #100]
  408664:	ldr	w0, [x29, #100]
  408668:	bl	403660 <log_get_max_level_realm@plt>
  40866c:	mov	w1, w0
  408670:	ldr	w0, [x29, #92]
  408674:	and	w0, w0, #0x7
  408678:	cmp	w1, w0
  40867c:	b.lt	4086c0 <gather_pid_metadata+0xc0>  // b.tstop
  408680:	ldr	w0, [x29, #100]
  408684:	lsl	w1, w0, #10
  408688:	ldr	w0, [x29, #92]
  40868c:	orr	w6, w1, w0
  408690:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  408694:	add	x1, x0, #0xd73
  408698:	adrp	x0, 40b000 <_fini+0x3a0>
  40869c:	add	x5, x0, #0x9c8
  4086a0:	adrp	x0, 40c000 <_fini+0x13a0>
  4086a4:	add	x4, x0, #0x4d0
  4086a8:	mov	w3, #0x458                 	// #1112
  4086ac:	mov	x2, x1
  4086b0:	ldr	w1, [x29, #96]
  4086b4:	mov	w0, w6
  4086b8:	bl	4033b0 <log_internal_realm@plt>
  4086bc:	b	409054 <gather_pid_metadata+0xa54>
  4086c0:	ldr	w0, [x29, #96]
  4086c4:	cmp	w0, #0x0
  4086c8:	cneg	w0, w0, lt  // lt = tstop
  4086cc:	and	w0, w0, #0xff
  4086d0:	neg	w0, w0
  4086d4:	b	409054 <gather_pid_metadata+0xa54>
  4086d8:	ldr	x0, [x29, #104]
  4086dc:	mov	x2, x0
  4086e0:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  4086e4:	add	x1, x0, #0xd20
  4086e8:	ldr	x0, [x29, #24]
  4086ec:	bl	403290 <iovw_put_string_field_free@plt>
  4086f0:	str	w0, [x29, #52]
  4086f4:	ldr	w0, [x29, #52]
  4086f8:	cmp	w0, #0x0
  4086fc:	b.ge	408708 <gather_pid_metadata+0x108>  // b.tcont
  408700:	ldr	w0, [x29, #52]
  408704:	b	409054 <gather_pid_metadata+0xa54>
  408708:	add	x0, x29, #0x68
  40870c:	mov	x1, x0
  408710:	ldr	w0, [x29, #56]
  408714:	bl	402f70 <get_process_exe@plt>
  408718:	str	w0, [x29, #52]
  40871c:	ldr	w0, [x29, #52]
  408720:	cmp	w0, #0x0
  408724:	b.lt	408744 <gather_pid_metadata+0x144>  // b.tstop
  408728:	ldr	x0, [x29, #104]
  40872c:	mov	x2, x0
  408730:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  408734:	add	x1, x0, #0xd30
  408738:	ldr	x0, [x29, #24]
  40873c:	bl	403290 <iovw_put_string_field_free@plt>
  408740:	str	w0, [x29, #52]
  408744:	ldr	w0, [x29, #52]
  408748:	cmp	w0, #0x0
  40874c:	b.ge	4087c8 <gather_pid_metadata+0x1c8>  // b.tcont
  408750:	mov	w0, #0x4                   	// #4
  408754:	str	w0, [x29, #60]
  408758:	ldr	w0, [x29, #52]
  40875c:	str	w0, [x29, #64]
  408760:	str	wzr, [x29, #68]
  408764:	ldr	w0, [x29, #68]
  408768:	bl	403660 <log_get_max_level_realm@plt>
  40876c:	mov	w1, w0
  408770:	ldr	w0, [x29, #60]
  408774:	and	w0, w0, #0x7
  408778:	cmp	w1, w0
  40877c:	b.lt	4087c0 <gather_pid_metadata+0x1c0>  // b.tstop
  408780:	ldr	w0, [x29, #68]
  408784:	lsl	w1, w0, #10
  408788:	ldr	w0, [x29, #60]
  40878c:	orr	w6, w1, w0
  408790:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  408794:	add	x1, x0, #0xd73
  408798:	adrp	x0, 40b000 <_fini+0x3a0>
  40879c:	add	x5, x0, #0x9e0
  4087a0:	adrp	x0, 40c000 <_fini+0x13a0>
  4087a4:	add	x4, x0, #0x4d0
  4087a8:	mov	w3, #0x463                 	// #1123
  4087ac:	mov	x2, x1
  4087b0:	ldr	w1, [x29, #64]
  4087b4:	mov	w0, w6
  4087b8:	bl	4033b0 <log_internal_realm@plt>
  4087bc:	b	4087c8 <gather_pid_metadata+0x1c8>
  4087c0:	ldr	w0, [x29, #64]
  4087c4:	cmp	w0, #0x0
  4087c8:	add	x0, x29, #0x68
  4087cc:	mov	x1, x0
  4087d0:	ldr	w0, [x29, #56]
  4087d4:	bl	403510 <cg_pid_get_unit@plt>
  4087d8:	cmp	w0, #0x0
  4087dc:	b.lt	4087f8 <gather_pid_metadata+0x1f8>  // b.tstop
  4087e0:	ldr	x0, [x29, #104]
  4087e4:	mov	x2, x0
  4087e8:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  4087ec:	add	x1, x0, #0xd40
  4087f0:	ldr	x0, [x29, #24]
  4087f4:	bl	403290 <iovw_put_string_field_free@plt>
  4087f8:	add	x0, x29, #0x68
  4087fc:	mov	x1, x0
  408800:	ldr	w0, [x29, #56]
  408804:	bl	4033e0 <cg_pid_get_user_unit@plt>
  408808:	cmp	w0, #0x0
  40880c:	b.lt	408828 <gather_pid_metadata+0x228>  // b.tstop
  408810:	ldr	x0, [x29, #104]
  408814:	mov	x2, x0
  408818:	adrp	x0, 40b000 <_fini+0x3a0>
  40881c:	add	x1, x0, #0xa00
  408820:	ldr	x0, [x29, #24]
  408824:	bl	403290 <iovw_put_string_field_free@plt>
  408828:	add	x0, x29, #0x68
  40882c:	mov	x1, x0
  408830:	ldr	w0, [x29, #56]
  408834:	bl	4030b0 <sd_pid_get_session@plt>
  408838:	cmp	w0, #0x0
  40883c:	b.lt	408858 <gather_pid_metadata+0x258>  // b.tstop
  408840:	ldr	x0, [x29, #104]
  408844:	mov	x2, x0
  408848:	adrp	x0, 40b000 <_fini+0x3a0>
  40884c:	add	x1, x0, #0xa18
  408850:	ldr	x0, [x29, #24]
  408854:	bl	403290 <iovw_put_string_field_free@plt>
  408858:	add	x0, x29, #0x30
  40885c:	mov	x1, x0
  408860:	ldr	w0, [x29, #56]
  408864:	bl	403270 <sd_pid_get_owner_uid@plt>
  408868:	cmp	w0, #0x0
  40886c:	b.lt	4088b4 <gather_pid_metadata+0x2b4>  // b.tstop
  408870:	ldr	w0, [x29, #48]
  408874:	add	x3, x29, #0x68
  408878:	mov	w2, w0
  40887c:	adrp	x0, 40b000 <_fini+0x3a0>
  408880:	add	x1, x0, #0xa30
  408884:	mov	x0, x3
  408888:	bl	4034e0 <asprintf@plt>
  40888c:	str	w0, [x29, #52]
  408890:	ldr	w0, [x29, #52]
  408894:	cmp	w0, #0x0
  408898:	b.le	4088b4 <gather_pid_metadata+0x2b4>
  40889c:	ldr	x0, [x29, #104]
  4088a0:	mov	x2, x0
  4088a4:	adrp	x0, 40b000 <_fini+0x3a0>
  4088a8:	add	x1, x0, #0xa38
  4088ac:	ldr	x0, [x29, #24]
  4088b0:	bl	403290 <iovw_put_string_field_free@plt>
  4088b4:	add	x0, x29, #0x68
  4088b8:	mov	x1, x0
  4088bc:	ldr	w0, [x29, #56]
  4088c0:	bl	4032c0 <sd_pid_get_slice@plt>
  4088c4:	cmp	w0, #0x0
  4088c8:	b.lt	4088e4 <gather_pid_metadata+0x2e4>  // b.tstop
  4088cc:	ldr	x0, [x29, #104]
  4088d0:	mov	x2, x0
  4088d4:	adrp	x0, 40b000 <_fini+0x3a0>
  4088d8:	add	x1, x0, #0xa50
  4088dc:	ldr	x0, [x29, #24]
  4088e0:	bl	403290 <iovw_put_string_field_free@plt>
  4088e4:	add	x0, x29, #0x68
  4088e8:	mov	x3, x0
  4088ec:	mov	w2, #0x0                   	// #0
  4088f0:	mov	x1, #0xffffffffffffffff    	// #-1
  4088f4:	ldr	w0, [x29, #56]
  4088f8:	bl	403470 <get_process_cmdline@plt>
  4088fc:	cmp	w0, #0x0
  408900:	b.lt	40891c <gather_pid_metadata+0x31c>  // b.tstop
  408904:	ldr	x0, [x29, #104]
  408908:	mov	x2, x0
  40890c:	adrp	x0, 40b000 <_fini+0x3a0>
  408910:	add	x1, x0, #0xa60
  408914:	ldr	x0, [x29, #24]
  408918:	bl	403290 <iovw_put_string_field_free@plt>
  40891c:	add	x0, x29, #0x68
  408920:	mov	x2, x0
  408924:	mov	x1, #0x0                   	// #0
  408928:	ldr	w0, [x29, #56]
  40892c:	bl	402fc0 <cg_pid_get_path_shifted@plt>
  408930:	cmp	w0, #0x0
  408934:	b.lt	408950 <gather_pid_metadata+0x350>  // b.tstop
  408938:	ldr	x0, [x29, #104]
  40893c:	mov	x2, x0
  408940:	adrp	x0, 40b000 <_fini+0x3a0>
  408944:	add	x1, x0, #0xa78
  408948:	ldr	x0, [x29, #24]
  40894c:	bl	403290 <iovw_put_string_field_free@plt>
  408950:	add	x0, x29, #0x68
  408954:	mov	x1, x0
  408958:	ldr	w0, [x29, #56]
  40895c:	bl	405d5c <compose_open_fds>
  408960:	cmp	w0, #0x0
  408964:	b.lt	408980 <gather_pid_metadata+0x380>  // b.tstop
  408968:	ldr	x0, [x29, #104]
  40896c:	mov	x2, x0
  408970:	adrp	x0, 40b000 <_fini+0x3a0>
  408974:	add	x1, x0, #0xa90
  408978:	ldr	x0, [x29, #24]
  40897c:	bl	403290 <iovw_put_string_field_free@plt>
  408980:	ldr	w0, [x29, #56]
  408984:	str	w0, [x29, #72]
  408988:	ldr	w0, [x29, #72]
  40898c:	cmp	w0, #0x0
  408990:	b.ne	4089a4 <gather_pid_metadata+0x3a4>  // b.any
  408994:	adrp	x0, 40b000 <_fini+0x3a0>
  408998:	add	x0, x0, #0xaa8
  40899c:	str	x0, [x29, #112]
  4089a0:	b	408a70 <gather_pid_metadata+0x470>
  4089a4:	mov	x0, #0x1a                  	// #26
  4089a8:	str	x0, [x29, #152]
  4089ac:	ldr	x1, [x29, #152]
  4089b0:	mov	x0, #0x1                   	// #1
  4089b4:	bl	4038d0 <size_multiply_overflow>
  4089b8:	and	w0, w0, #0xff
  4089bc:	and	x0, x0, #0xff
  4089c0:	cmp	x0, #0x0
  4089c4:	b.eq	4089f0 <gather_pid_metadata+0x3f0>  // b.none
  4089c8:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  4089cc:	add	x1, x0, #0xd73
  4089d0:	adrp	x0, 40c000 <_fini+0x13a0>
  4089d4:	add	x4, x0, #0x4e8
  4089d8:	mov	w3, #0x481                 	// #1153
  4089dc:	mov	x2, x1
  4089e0:	adrp	x0, 40b000 <_fini+0x3a0>
  4089e4:	add	x1, x0, #0x3d8
  4089e8:	mov	w0, #0x0                   	// #0
  4089ec:	bl	403080 <log_assert_failed_realm@plt>
  4089f0:	ldr	x0, [x29, #152]
  4089f4:	cmp	x0, #0x400, lsl #12
  4089f8:	cset	w0, hi  // hi = pmore
  4089fc:	and	w0, w0, #0xff
  408a00:	and	x0, x0, #0xff
  408a04:	cmp	x0, #0x0
  408a08:	b.eq	408a34 <gather_pid_metadata+0x434>  // b.none
  408a0c:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  408a10:	add	x1, x0, #0xd73
  408a14:	adrp	x0, 40c000 <_fini+0x13a0>
  408a18:	add	x4, x0, #0x4e8
  408a1c:	mov	w3, #0x481                 	// #1153
  408a20:	mov	x2, x1
  408a24:	adrp	x0, 40b000 <_fini+0x3a0>
  408a28:	add	x1, x0, #0x408
  408a2c:	mov	w0, #0x0                   	// #0
  408a30:	bl	403080 <log_assert_failed_realm@plt>
  408a34:	ldr	x0, [x29, #152]
  408a38:	add	x0, x0, #0xf
  408a3c:	lsr	x0, x0, #4
  408a40:	lsl	x0, x0, #4
  408a44:	sub	sp, sp, x0
  408a48:	mov	x0, sp
  408a4c:	add	x0, x0, #0xf
  408a50:	lsr	x0, x0, #4
  408a54:	lsl	x0, x0, #4
  408a58:	str	x0, [x29, #112]
  408a5c:	ldr	w2, [x29, #72]
  408a60:	adrp	x0, 40b000 <_fini+0x3a0>
  408a64:	add	x1, x0, #0xac0
  408a68:	ldr	x0, [x29, #112]
  408a6c:	bl	403560 <sprintf@plt>
  408a70:	ldr	x0, [x29, #112]
  408a74:	str	x0, [x29, #160]
  408a78:	add	x0, x29, #0x68
  408a7c:	mov	x2, #0x0                   	// #0
  408a80:	mov	x1, x0
  408a84:	ldr	x0, [x29, #160]
  408a88:	bl	403b60 <read_full_file>
  408a8c:	cmp	w0, #0x0
  408a90:	b.lt	408aac <gather_pid_metadata+0x4ac>  // b.tstop
  408a94:	ldr	x0, [x29, #104]
  408a98:	mov	x2, x0
  408a9c:	adrp	x0, 40b000 <_fini+0x3a0>
  408aa0:	add	x1, x0, #0xad0
  408aa4:	ldr	x0, [x29, #24]
  408aa8:	bl	403290 <iovw_put_string_field_free@plt>
  408aac:	ldr	w0, [x29, #56]
  408ab0:	str	w0, [x29, #76]
  408ab4:	ldr	w0, [x29, #76]
  408ab8:	cmp	w0, #0x0
  408abc:	b.ne	408ad0 <gather_pid_metadata+0x4d0>  // b.any
  408ac0:	adrp	x0, 40b000 <_fini+0x3a0>
  408ac4:	add	x0, x0, #0xae8
  408ac8:	str	x0, [x29, #120]
  408acc:	b	408b9c <gather_pid_metadata+0x59c>
  408ad0:	mov	x0, #0x18                  	// #24
  408ad4:	str	x0, [x29, #168]
  408ad8:	ldr	x1, [x29, #168]
  408adc:	mov	x0, #0x1                   	// #1
  408ae0:	bl	4038d0 <size_multiply_overflow>
  408ae4:	and	w0, w0, #0xff
  408ae8:	and	x0, x0, #0xff
  408aec:	cmp	x0, #0x0
  408af0:	b.eq	408b1c <gather_pid_metadata+0x51c>  // b.none
  408af4:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  408af8:	add	x1, x0, #0xd73
  408afc:	adrp	x0, 40c000 <_fini+0x13a0>
  408b00:	add	x4, x0, #0x4e8
  408b04:	mov	w3, #0x485                 	// #1157
  408b08:	mov	x2, x1
  408b0c:	adrp	x0, 40b000 <_fini+0x3a0>
  408b10:	add	x1, x0, #0x3d8
  408b14:	mov	w0, #0x0                   	// #0
  408b18:	bl	403080 <log_assert_failed_realm@plt>
  408b1c:	ldr	x0, [x29, #168]
  408b20:	cmp	x0, #0x400, lsl #12
  408b24:	cset	w0, hi  // hi = pmore
  408b28:	and	w0, w0, #0xff
  408b2c:	and	x0, x0, #0xff
  408b30:	cmp	x0, #0x0
  408b34:	b.eq	408b60 <gather_pid_metadata+0x560>  // b.none
  408b38:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  408b3c:	add	x1, x0, #0xd73
  408b40:	adrp	x0, 40c000 <_fini+0x13a0>
  408b44:	add	x4, x0, #0x4e8
  408b48:	mov	w3, #0x485                 	// #1157
  408b4c:	mov	x2, x1
  408b50:	adrp	x0, 40b000 <_fini+0x3a0>
  408b54:	add	x1, x0, #0x408
  408b58:	mov	w0, #0x0                   	// #0
  408b5c:	bl	403080 <log_assert_failed_realm@plt>
  408b60:	ldr	x0, [x29, #168]
  408b64:	add	x0, x0, #0xf
  408b68:	lsr	x0, x0, #4
  408b6c:	lsl	x0, x0, #4
  408b70:	sub	sp, sp, x0
  408b74:	mov	x0, sp
  408b78:	add	x0, x0, #0xf
  408b7c:	lsr	x0, x0, #4
  408b80:	lsl	x0, x0, #4
  408b84:	str	x0, [x29, #120]
  408b88:	ldr	w2, [x29, #76]
  408b8c:	adrp	x0, 40b000 <_fini+0x3a0>
  408b90:	add	x1, x0, #0xaf8
  408b94:	ldr	x0, [x29, #120]
  408b98:	bl	403560 <sprintf@plt>
  408b9c:	ldr	x0, [x29, #120]
  408ba0:	str	x0, [x29, #160]
  408ba4:	add	x0, x29, #0x68
  408ba8:	mov	x2, #0x0                   	// #0
  408bac:	mov	x1, x0
  408bb0:	ldr	x0, [x29, #160]
  408bb4:	bl	403b60 <read_full_file>
  408bb8:	cmp	w0, #0x0
  408bbc:	b.lt	408bd8 <gather_pid_metadata+0x5d8>  // b.tstop
  408bc0:	ldr	x0, [x29, #104]
  408bc4:	mov	x2, x0
  408bc8:	adrp	x0, 40b000 <_fini+0x3a0>
  408bcc:	add	x1, x0, #0xb08
  408bd0:	ldr	x0, [x29, #24]
  408bd4:	bl	403290 <iovw_put_string_field_free@plt>
  408bd8:	ldr	w0, [x29, #56]
  408bdc:	str	w0, [x29, #80]
  408be0:	ldr	w0, [x29, #80]
  408be4:	cmp	w0, #0x0
  408be8:	b.ne	408bfc <gather_pid_metadata+0x5fc>  // b.any
  408bec:	adrp	x0, 40b000 <_fini+0x3a0>
  408bf0:	add	x0, x0, #0xb20
  408bf4:	str	x0, [x29, #128]
  408bf8:	b	408cc8 <gather_pid_metadata+0x6c8>
  408bfc:	mov	x0, #0x1a                  	// #26
  408c00:	str	x0, [x29, #176]
  408c04:	ldr	x1, [x29, #176]
  408c08:	mov	x0, #0x1                   	// #1
  408c0c:	bl	4038d0 <size_multiply_overflow>
  408c10:	and	w0, w0, #0xff
  408c14:	and	x0, x0, #0xff
  408c18:	cmp	x0, #0x0
  408c1c:	b.eq	408c48 <gather_pid_metadata+0x648>  // b.none
  408c20:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  408c24:	add	x1, x0, #0xd73
  408c28:	adrp	x0, 40c000 <_fini+0x13a0>
  408c2c:	add	x4, x0, #0x4e8
  408c30:	mov	w3, #0x489                 	// #1161
  408c34:	mov	x2, x1
  408c38:	adrp	x0, 40b000 <_fini+0x3a0>
  408c3c:	add	x1, x0, #0x3d8
  408c40:	mov	w0, #0x0                   	// #0
  408c44:	bl	403080 <log_assert_failed_realm@plt>
  408c48:	ldr	x0, [x29, #176]
  408c4c:	cmp	x0, #0x400, lsl #12
  408c50:	cset	w0, hi  // hi = pmore
  408c54:	and	w0, w0, #0xff
  408c58:	and	x0, x0, #0xff
  408c5c:	cmp	x0, #0x0
  408c60:	b.eq	408c8c <gather_pid_metadata+0x68c>  // b.none
  408c64:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  408c68:	add	x1, x0, #0xd73
  408c6c:	adrp	x0, 40c000 <_fini+0x13a0>
  408c70:	add	x4, x0, #0x4e8
  408c74:	mov	w3, #0x489                 	// #1161
  408c78:	mov	x2, x1
  408c7c:	adrp	x0, 40b000 <_fini+0x3a0>
  408c80:	add	x1, x0, #0x408
  408c84:	mov	w0, #0x0                   	// #0
  408c88:	bl	403080 <log_assert_failed_realm@plt>
  408c8c:	ldr	x0, [x29, #176]
  408c90:	add	x0, x0, #0xf
  408c94:	lsr	x0, x0, #4
  408c98:	lsl	x0, x0, #4
  408c9c:	sub	sp, sp, x0
  408ca0:	mov	x0, sp
  408ca4:	add	x0, x0, #0xf
  408ca8:	lsr	x0, x0, #4
  408cac:	lsl	x0, x0, #4
  408cb0:	str	x0, [x29, #128]
  408cb4:	ldr	w2, [x29, #80]
  408cb8:	adrp	x0, 40b000 <_fini+0x3a0>
  408cbc:	add	x1, x0, #0xb38
  408cc0:	ldr	x0, [x29, #128]
  408cc4:	bl	403560 <sprintf@plt>
  408cc8:	ldr	x0, [x29, #128]
  408ccc:	str	x0, [x29, #160]
  408cd0:	add	x0, x29, #0x68
  408cd4:	mov	x2, #0x0                   	// #0
  408cd8:	mov	x1, x0
  408cdc:	ldr	x0, [x29, #160]
  408ce0:	bl	403b60 <read_full_file>
  408ce4:	cmp	w0, #0x0
  408ce8:	b.lt	408d04 <gather_pid_metadata+0x704>  // b.tstop
  408cec:	ldr	x0, [x29, #104]
  408cf0:	mov	x2, x0
  408cf4:	adrp	x0, 40b000 <_fini+0x3a0>
  408cf8:	add	x1, x0, #0xb48
  408cfc:	ldr	x0, [x29, #24]
  408d00:	bl	403290 <iovw_put_string_field_free@plt>
  408d04:	ldr	w0, [x29, #56]
  408d08:	str	w0, [x29, #84]
  408d0c:	ldr	w0, [x29, #84]
  408d10:	cmp	w0, #0x0
  408d14:	b.ne	408d28 <gather_pid_metadata+0x728>  // b.any
  408d18:	adrp	x0, 40b000 <_fini+0x3a0>
  408d1c:	add	x0, x0, #0xb60
  408d20:	str	x0, [x29, #136]
  408d24:	b	408df4 <gather_pid_metadata+0x7f4>
  408d28:	mov	x0, #0x1a                  	// #26
  408d2c:	str	x0, [x29, #184]
  408d30:	ldr	x1, [x29, #184]
  408d34:	mov	x0, #0x1                   	// #1
  408d38:	bl	4038d0 <size_multiply_overflow>
  408d3c:	and	w0, w0, #0xff
  408d40:	and	x0, x0, #0xff
  408d44:	cmp	x0, #0x0
  408d48:	b.eq	408d74 <gather_pid_metadata+0x774>  // b.none
  408d4c:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  408d50:	add	x1, x0, #0xd73
  408d54:	adrp	x0, 40c000 <_fini+0x13a0>
  408d58:	add	x4, x0, #0x4e8
  408d5c:	mov	w3, #0x48d                 	// #1165
  408d60:	mov	x2, x1
  408d64:	adrp	x0, 40b000 <_fini+0x3a0>
  408d68:	add	x1, x0, #0x3d8
  408d6c:	mov	w0, #0x0                   	// #0
  408d70:	bl	403080 <log_assert_failed_realm@plt>
  408d74:	ldr	x0, [x29, #184]
  408d78:	cmp	x0, #0x400, lsl #12
  408d7c:	cset	w0, hi  // hi = pmore
  408d80:	and	w0, w0, #0xff
  408d84:	and	x0, x0, #0xff
  408d88:	cmp	x0, #0x0
  408d8c:	b.eq	408db8 <gather_pid_metadata+0x7b8>  // b.none
  408d90:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  408d94:	add	x1, x0, #0xd73
  408d98:	adrp	x0, 40c000 <_fini+0x13a0>
  408d9c:	add	x4, x0, #0x4e8
  408da0:	mov	w3, #0x48d                 	// #1165
  408da4:	mov	x2, x1
  408da8:	adrp	x0, 40b000 <_fini+0x3a0>
  408dac:	add	x1, x0, #0x408
  408db0:	mov	w0, #0x0                   	// #0
  408db4:	bl	403080 <log_assert_failed_realm@plt>
  408db8:	ldr	x0, [x29, #184]
  408dbc:	add	x0, x0, #0xf
  408dc0:	lsr	x0, x0, #4
  408dc4:	lsl	x0, x0, #4
  408dc8:	sub	sp, sp, x0
  408dcc:	mov	x0, sp
  408dd0:	add	x0, x0, #0xf
  408dd4:	lsr	x0, x0, #4
  408dd8:	lsl	x0, x0, #4
  408ddc:	str	x0, [x29, #136]
  408de0:	ldr	w2, [x29, #84]
  408de4:	adrp	x0, 40b000 <_fini+0x3a0>
  408de8:	add	x1, x0, #0xb78
  408dec:	ldr	x0, [x29, #136]
  408df0:	bl	403560 <sprintf@plt>
  408df4:	ldr	x0, [x29, #136]
  408df8:	str	x0, [x29, #160]
  408dfc:	add	x0, x29, #0x68
  408e00:	mov	x2, #0x0                   	// #0
  408e04:	mov	x1, x0
  408e08:	ldr	x0, [x29, #160]
  408e0c:	bl	403b60 <read_full_file>
  408e10:	cmp	w0, #0x0
  408e14:	b.lt	408e30 <gather_pid_metadata+0x830>  // b.tstop
  408e18:	ldr	x0, [x29, #104]
  408e1c:	mov	x2, x0
  408e20:	adrp	x0, 40b000 <_fini+0x3a0>
  408e24:	add	x1, x0, #0xb88
  408e28:	ldr	x0, [x29, #24]
  408e2c:	bl	403290 <iovw_put_string_field_free@plt>
  408e30:	ldr	w0, [x29, #56]
  408e34:	str	w0, [x29, #88]
  408e38:	ldr	w0, [x29, #88]
  408e3c:	cmp	w0, #0x0
  408e40:	b.ne	408e54 <gather_pid_metadata+0x854>  // b.any
  408e44:	adrp	x0, 40b000 <_fini+0x3a0>
  408e48:	add	x0, x0, #0xba0
  408e4c:	str	x0, [x29, #144]
  408e50:	b	408f20 <gather_pid_metadata+0x920>
  408e54:	mov	x0, #0x1d                  	// #29
  408e58:	str	x0, [x29, #192]
  408e5c:	ldr	x1, [x29, #192]
  408e60:	mov	x0, #0x1                   	// #1
  408e64:	bl	4038d0 <size_multiply_overflow>
  408e68:	and	w0, w0, #0xff
  408e6c:	and	x0, x0, #0xff
  408e70:	cmp	x0, #0x0
  408e74:	b.eq	408ea0 <gather_pid_metadata+0x8a0>  // b.none
  408e78:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  408e7c:	add	x1, x0, #0xd73
  408e80:	adrp	x0, 40c000 <_fini+0x13a0>
  408e84:	add	x4, x0, #0x4e8
  408e88:	mov	w3, #0x491                 	// #1169
  408e8c:	mov	x2, x1
  408e90:	adrp	x0, 40b000 <_fini+0x3a0>
  408e94:	add	x1, x0, #0x3d8
  408e98:	mov	w0, #0x0                   	// #0
  408e9c:	bl	403080 <log_assert_failed_realm@plt>
  408ea0:	ldr	x0, [x29, #192]
  408ea4:	cmp	x0, #0x400, lsl #12
  408ea8:	cset	w0, hi  // hi = pmore
  408eac:	and	w0, w0, #0xff
  408eb0:	and	x0, x0, #0xff
  408eb4:	cmp	x0, #0x0
  408eb8:	b.eq	408ee4 <gather_pid_metadata+0x8e4>  // b.none
  408ebc:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  408ec0:	add	x1, x0, #0xd73
  408ec4:	adrp	x0, 40c000 <_fini+0x13a0>
  408ec8:	add	x4, x0, #0x4e8
  408ecc:	mov	w3, #0x491                 	// #1169
  408ed0:	mov	x2, x1
  408ed4:	adrp	x0, 40b000 <_fini+0x3a0>
  408ed8:	add	x1, x0, #0x408
  408edc:	mov	w0, #0x0                   	// #0
  408ee0:	bl	403080 <log_assert_failed_realm@plt>
  408ee4:	ldr	x0, [x29, #192]
  408ee8:	add	x0, x0, #0xf
  408eec:	lsr	x0, x0, #4
  408ef0:	lsl	x0, x0, #4
  408ef4:	sub	sp, sp, x0
  408ef8:	mov	x0, sp
  408efc:	add	x0, x0, #0xf
  408f00:	lsr	x0, x0, #4
  408f04:	lsl	x0, x0, #4
  408f08:	str	x0, [x29, #144]
  408f0c:	ldr	w2, [x29, #88]
  408f10:	adrp	x0, 40b000 <_fini+0x3a0>
  408f14:	add	x1, x0, #0xbb8
  408f18:	ldr	x0, [x29, #144]
  408f1c:	bl	403560 <sprintf@plt>
  408f20:	ldr	x0, [x29, #144]
  408f24:	str	x0, [x29, #160]
  408f28:	add	x0, x29, #0x68
  408f2c:	mov	x2, #0x0                   	// #0
  408f30:	mov	x1, x0
  408f34:	ldr	x0, [x29, #160]
  408f38:	bl	403b60 <read_full_file>
  408f3c:	cmp	w0, #0x0
  408f40:	b.lt	408f5c <gather_pid_metadata+0x95c>  // b.tstop
  408f44:	ldr	x0, [x29, #104]
  408f48:	mov	x2, x0
  408f4c:	adrp	x0, 40b000 <_fini+0x3a0>
  408f50:	add	x1, x0, #0xbd0
  408f54:	ldr	x0, [x29, #24]
  408f58:	bl	403290 <iovw_put_string_field_free@plt>
  408f5c:	add	x0, x29, #0x68
  408f60:	mov	x1, x0
  408f64:	ldr	w0, [x29, #56]
  408f68:	bl	403640 <get_process_cwd@plt>
  408f6c:	cmp	w0, #0x0
  408f70:	b.lt	408f8c <gather_pid_metadata+0x98c>  // b.tstop
  408f74:	ldr	x0, [x29, #104]
  408f78:	mov	x2, x0
  408f7c:	adrp	x0, 40b000 <_fini+0x3a0>
  408f80:	add	x1, x0, #0xbf0
  408f84:	ldr	x0, [x29, #24]
  408f88:	bl	403290 <iovw_put_string_field_free@plt>
  408f8c:	add	x0, x29, #0x68
  408f90:	mov	x1, x0
  408f94:	ldr	w0, [x29, #56]
  408f98:	bl	4032d0 <get_process_root@plt>
  408f9c:	cmp	w0, #0x0
  408fa0:	b.lt	409018 <gather_pid_metadata+0xa18>  // b.tstop
  408fa4:	ldr	x2, [x29, #104]
  408fa8:	adrp	x0, 40b000 <_fini+0x3a0>
  408fac:	add	x1, x0, #0x490
  408fb0:	mov	x0, x2
  408fb4:	bl	403450 <strcmp@plt>
  408fb8:	cmp	w0, #0x0
  408fbc:	cset	w0, eq  // eq = none
  408fc0:	strb	w0, [x29, #47]
  408fc4:	ldr	x0, [x29, #104]
  408fc8:	mov	x2, x0
  408fcc:	adrp	x0, 40b000 <_fini+0x3a0>
  408fd0:	add	x1, x0, #0xc00
  408fd4:	ldr	x0, [x29, #24]
  408fd8:	bl	403290 <iovw_put_string_field_free@plt>
  408fdc:	ldrb	w0, [x29, #47]
  408fe0:	cmp	w0, #0x0
  408fe4:	b.eq	409018 <gather_pid_metadata+0xa18>  // b.none
  408fe8:	add	x0, x29, #0x68
  408fec:	mov	x1, x0
  408ff0:	ldr	w0, [x29, #56]
  408ff4:	bl	4065a4 <get_process_container_parent_cmdline>
  408ff8:	cmp	w0, #0x0
  408ffc:	b.le	409018 <gather_pid_metadata+0xa18>
  409000:	ldr	x0, [x29, #104]
  409004:	mov	x2, x0
  409008:	adrp	x0, 40b000 <_fini+0x3a0>
  40900c:	add	x1, x0, #0xc10
  409010:	ldr	x0, [x29, #24]
  409014:	bl	403290 <iovw_put_string_field_free@plt>
  409018:	add	x0, x29, #0x68
  40901c:	mov	x1, x0
  409020:	ldr	w0, [x29, #56]
  409024:	bl	403180 <get_process_environ@plt>
  409028:	cmp	w0, #0x0
  40902c:	b.lt	409048 <gather_pid_metadata+0xa48>  // b.tstop
  409030:	ldr	x0, [x29, #104]
  409034:	mov	x2, x0
  409038:	adrp	x0, 40b000 <_fini+0x3a0>
  40903c:	add	x1, x0, #0xc30
  409040:	ldr	x0, [x29, #24]
  409044:	bl	403290 <iovw_put_string_field_free@plt>
  409048:	ldr	x1, [x29, #24]
  40904c:	ldr	x0, [x29, #16]
  409050:	bl	4073ec <save_context>
  409054:	mov	w1, w0
  409058:	adrp	x0, 41d000 <__FRAME_END__+0xfdec>
  40905c:	add	x0, x0, #0x948
  409060:	ldr	x2, [x29, #200]
  409064:	ldr	x0, [x0]
  409068:	eor	x0, x2, x0
  40906c:	cmp	x0, #0x0
  409070:	b.eq	409078 <gather_pid_metadata+0xa78>  // b.none
  409074:	bl	4032b0 <__stack_chk_fail@plt>
  409078:	mov	w0, w1
  40907c:	mov	sp, x29
  409080:	ldp	x29, x30, [sp], #208
  409084:	ret

0000000000409088 <process_kernel>:
  409088:	stp	x29, x30, [sp, #-176]!
  40908c:	mov	x29, sp
  409090:	str	w0, [sp, #28]
  409094:	str	x1, [sp, #16]
  409098:	adrp	x0, 41d000 <__FRAME_END__+0xfdec>
  40909c:	add	x0, x0, #0x948
  4090a0:	ldr	x1, [x0]
  4090a4:	str	x1, [sp, #168]
  4090a8:	mov	x1, #0x0                   	// #0
  4090ac:	stp	xzr, xzr, [sp, #80]
  4090b0:	stp	xzr, xzr, [sp, #96]
  4090b4:	stp	xzr, xzr, [sp, #112]
  4090b8:	stp	xzr, xzr, [sp, #128]
  4090bc:	stp	xzr, xzr, [sp, #144]
  4090c0:	str	xzr, [sp, #160]
  4090c4:	mov	w0, #0x7                   	// #7
  4090c8:	str	w0, [sp, #48]
  4090cc:	str	wzr, [sp, #52]
  4090d0:	str	wzr, [sp, #56]
  4090d4:	ldr	w0, [sp, #56]
  4090d8:	bl	403660 <log_get_max_level_realm@plt>
  4090dc:	mov	w1, w0
  4090e0:	ldr	w0, [sp, #48]
  4090e4:	and	w0, w0, #0x7
  4090e8:	cmp	w1, w0
  4090ec:	b.lt	409130 <process_kernel+0xa8>  // b.tstop
  4090f0:	ldr	w0, [sp, #56]
  4090f4:	lsl	w1, w0, #10
  4090f8:	ldr	w0, [sp, #48]
  4090fc:	orr	w6, w1, w0
  409100:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  409104:	add	x1, x0, #0xd73
  409108:	adrp	x0, 40b000 <_fini+0x3a0>
  40910c:	add	x5, x0, #0xc48
  409110:	adrp	x0, 40c000 <_fini+0x13a0>
  409114:	add	x4, x0, #0x500
  409118:	mov	w3, #0x4b1                 	// #1201
  40911c:	mov	x2, x1
  409120:	ldr	w1, [sp, #52]
  409124:	mov	w0, w6
  409128:	bl	4033b0 <log_internal_realm@plt>
  40912c:	b	409138 <process_kernel+0xb0>
  409130:	ldr	w0, [sp, #52]
  409134:	cmp	w0, #0x0
  409138:	bl	402ec0 <iovw_new@plt>
  40913c:	str	x0, [sp, #72]
  409140:	ldr	x0, [sp, #72]
  409144:	cmp	x0, #0x0
  409148:	b.ne	40916c <process_kernel+0xe4>  // b.any
  40914c:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  409150:	add	x1, x0, #0xd73
  409154:	adrp	x0, 40c000 <_fini+0x13a0>
  409158:	add	x3, x0, #0x500
  40915c:	mov	w2, #0x4b5                 	// #1205
  409160:	mov	w0, #0x0                   	// #0
  409164:	bl	403620 <log_oom_internal@plt>
  409168:	b	4092f8 <process_kernel+0x270>
  40916c:	adrp	x0, 40b000 <_fini+0x3a0>
  409170:	add	x2, x0, #0xc78
  409174:	adrp	x0, 40b000 <_fini+0x3a0>
  409178:	add	x1, x0, #0xca0
  40917c:	ldr	x0, [sp, #72]
  409180:	bl	403360 <iovw_put_string_field@plt>
  409184:	adrp	x0, 40b000 <_fini+0x3a0>
  409188:	add	x2, x0, #0xcb0
  40918c:	adrp	x0, 40b000 <_fini+0x3a0>
  409190:	add	x1, x0, #0xcb8
  409194:	ldr	x0, [sp, #72]
  409198:	bl	403360 <iovw_put_string_field@plt>
  40919c:	ldr	w0, [sp, #28]
  4091a0:	sub	w1, w0, #0x1
  4091a4:	ldr	x0, [sp, #16]
  4091a8:	add	x2, x0, #0x8
  4091ac:	add	x0, sp, #0x50
  4091b0:	mov	x3, x2
  4091b4:	mov	w2, w1
  4091b8:	mov	x1, x0
  4091bc:	ldr	x0, [sp, #72]
  4091c0:	bl	408384 <gather_pid_metadata_from_argv>
  4091c4:	str	w0, [sp, #44]
  4091c8:	ldr	w0, [sp, #44]
  4091cc:	cmp	w0, #0x0
  4091d0:	b.lt	4092dc <process_kernel+0x254>  // b.tstop
  4091d4:	add	x0, sp, #0x50
  4091d8:	mov	x1, x0
  4091dc:	ldr	x0, [sp, #72]
  4091e0:	bl	408600 <gather_pid_metadata>
  4091e4:	str	w0, [sp, #44]
  4091e8:	ldr	w0, [sp, #44]
  4091ec:	cmp	w0, #0x0
  4091f0:	b.lt	4092e4 <process_kernel+0x25c>  // b.tstop
  4091f4:	ldrb	w0, [sp, #165]
  4091f8:	eor	w0, w0, #0x1
  4091fc:	and	w0, w0, #0xff
  409200:	cmp	w0, #0x0
  409204:	b.eq	409214 <process_kernel+0x18c>  // b.none
  409208:	mov	w0, #0x4                   	// #4
  40920c:	bl	403230 <log_set_target@plt>
  409210:	bl	403610 <log_open@plt>
  409214:	ldrb	w0, [sp, #164]
  409218:	cmp	w0, #0x0
  40921c:	b.eq	409298 <process_kernel+0x210>  // b.none
  409220:	mov	w0, #0x5                   	// #5
  409224:	str	w0, [sp, #60]
  409228:	str	wzr, [sp, #64]
  40922c:	str	wzr, [sp, #68]
  409230:	ldr	w0, [sp, #68]
  409234:	bl	403660 <log_get_max_level_realm@plt>
  409238:	mov	w1, w0
  40923c:	ldr	w0, [sp, #60]
  409240:	and	w0, w0, #0x7
  409244:	cmp	w1, w0
  409248:	b.lt	40928c <process_kernel+0x204>  // b.tstop
  40924c:	ldr	w0, [sp, #68]
  409250:	lsl	w1, w0, #10
  409254:	ldr	w0, [sp, #60]
  409258:	orr	w6, w1, w0
  40925c:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  409260:	add	x1, x0, #0xd73
  409264:	adrp	x0, 40b000 <_fini+0x3a0>
  409268:	add	x5, x0, #0xcc8
  40926c:	adrp	x0, 40c000 <_fini+0x13a0>
  409270:	add	x4, x0, #0x500
  409274:	mov	w3, #0x4d1                 	// #1233
  409278:	mov	x2, x1
  40927c:	ldr	w1, [sp, #64]
  409280:	mov	w0, w6
  409284:	bl	4033b0 <log_internal_realm@plt>
  409288:	b	409294 <process_kernel+0x20c>
  40928c:	ldr	w0, [sp, #64]
  409290:	cmp	w0, #0x0
  409294:	bl	403100 <disable_coredumps@plt>
  409298:	ldrb	w0, [sp, #165]
  40929c:	cmp	w0, #0x0
  4092a0:	b.ne	4092b0 <process_kernel+0x228>  // b.any
  4092a4:	ldrb	w0, [sp, #164]
  4092a8:	cmp	w0, #0x0
  4092ac:	b.eq	4092c8 <process_kernel+0x240>  // b.none
  4092b0:	add	x0, sp, #0x50
  4092b4:	mov	w2, #0x0                   	// #0
  4092b8:	ldr	x1, [sp, #72]
  4092bc:	bl	406948 <submit_coredump>
  4092c0:	str	w0, [sp, #44]
  4092c4:	b	4092e8 <process_kernel+0x260>
  4092c8:	mov	w1, #0x0                   	// #0
  4092cc:	ldr	x0, [sp, #72]
  4092d0:	bl	407e3c <send_iovec>
  4092d4:	str	w0, [sp, #44]
  4092d8:	b	4092e8 <process_kernel+0x260>
  4092dc:	nop
  4092e0:	b	4092e8 <process_kernel+0x260>
  4092e4:	nop
  4092e8:	ldr	x0, [sp, #72]
  4092ec:	bl	403350 <iovw_free_free@plt>
  4092f0:	str	x0, [sp, #72]
  4092f4:	ldr	w0, [sp, #44]
  4092f8:	mov	w1, w0
  4092fc:	adrp	x0, 41d000 <__FRAME_END__+0xfdec>
  409300:	add	x0, x0, #0x948
  409304:	ldr	x2, [sp, #168]
  409308:	ldr	x0, [x0]
  40930c:	eor	x0, x2, x0
  409310:	cmp	x0, #0x0
  409314:	b.eq	40931c <process_kernel+0x294>  // b.none
  409318:	bl	4032b0 <__stack_chk_fail@plt>
  40931c:	mov	w0, w1
  409320:	ldp	x29, x30, [sp], #176
  409324:	ret

0000000000409328 <process_backtrace>:
  409328:	stp	x29, x30, [sp, #-480]!
  40932c:	mov	x29, sp
  409330:	str	x19, [sp, #16]
  409334:	str	w0, [x29, #44]
  409338:	str	x1, [x29, #32]
  40933c:	adrp	x0, 41d000 <__FRAME_END__+0xfdec>
  409340:	add	x0, x0, #0x948
  409344:	ldr	x1, [x0]
  409348:	str	x1, [x29, #472]
  40934c:	mov	x1, #0x0                   	// #0
  409350:	stp	xzr, xzr, [x29, #248]
  409354:	add	x0, x29, #0x200
  409358:	stp	xzr, xzr, [x0, #-248]
  40935c:	add	x0, x29, #0x200
  409360:	stp	xzr, xzr, [x0, #-232]
  409364:	add	x0, x29, #0x200
  409368:	stp	xzr, xzr, [x0, #-216]
  40936c:	add	x0, x29, #0x200
  409370:	stp	xzr, xzr, [x0, #-200]
  409374:	str	xzr, [x29, #328]
  409378:	stp	xzr, xzr, [x29, #336]
  40937c:	stp	xzr, xzr, [x29, #352]
  409380:	stp	xzr, xzr, [x29, #368]
  409384:	stp	xzr, xzr, [x29, #384]
  409388:	stp	xzr, xzr, [x29, #400]
  40938c:	stp	xzr, xzr, [x29, #416]
  409390:	stp	xzr, xzr, [x29, #432]
  409394:	stp	xzr, xzr, [x29, #448]
  409398:	str	xzr, [x29, #464]
  40939c:	mov	w0, #0x7                   	// #7
  4093a0:	str	w0, [x29, #64]
  4093a4:	str	wzr, [x29, #68]
  4093a8:	str	wzr, [x29, #72]
  4093ac:	ldr	w0, [x29, #72]
  4093b0:	bl	403660 <log_get_max_level_realm@plt>
  4093b4:	mov	w1, w0
  4093b8:	ldr	w0, [x29, #64]
  4093bc:	and	w0, w0, #0x7
  4093c0:	cmp	w1, w0
  4093c4:	b.lt	409408 <process_backtrace+0xe0>  // b.tstop
  4093c8:	ldr	w0, [x29, #72]
  4093cc:	lsl	w1, w0, #10
  4093d0:	ldr	w0, [x29, #64]
  4093d4:	orr	w6, w1, w0
  4093d8:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  4093dc:	add	x1, x0, #0xd73
  4093e0:	adrp	x0, 40b000 <_fini+0x3a0>
  4093e4:	add	x5, x0, #0xd10
  4093e8:	adrp	x0, 40c000 <_fini+0x13a0>
  4093ec:	add	x4, x0, #0x510
  4093f0:	mov	w3, #0x4e7                 	// #1255
  4093f4:	mov	x2, x1
  4093f8:	ldr	w1, [x29, #68]
  4093fc:	mov	w0, w6
  409400:	bl	4033b0 <log_internal_realm@plt>
  409404:	b	409410 <process_backtrace+0xe8>
  409408:	ldr	w0, [x29, #68]
  40940c:	cmp	w0, #0x0
  409410:	bl	402ec0 <iovw_new@plt>
  409414:	str	x0, [x29, #144]
  409418:	ldr	x0, [x29, #144]
  40941c:	cmp	x0, #0x0
  409420:	b.ne	409448 <process_backtrace+0x120>  // b.any
  409424:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  409428:	add	x1, x0, #0xd73
  40942c:	adrp	x0, 40c000 <_fini+0x13a0>
  409430:	add	x3, x0, #0x510
  409434:	mov	w2, #0x4eb                 	// #1259
  409438:	mov	w0, #0x0                   	// #0
  40943c:	bl	403620 <log_oom_internal@plt>
  409440:	mov	w19, w0
  409444:	b	409968 <process_backtrace+0x640>
  409448:	adrp	x0, 40b000 <_fini+0x3a0>
  40944c:	add	x2, x0, #0xd38
  409450:	adrp	x0, 40b000 <_fini+0x3a0>
  409454:	add	x1, x0, #0xca0
  409458:	ldr	x0, [x29, #144]
  40945c:	bl	403360 <iovw_put_string_field@plt>
  409460:	adrp	x0, 40b000 <_fini+0x3a0>
  409464:	add	x2, x0, #0xcb0
  409468:	adrp	x0, 40b000 <_fini+0x3a0>
  40946c:	add	x1, x0, #0xcb8
  409470:	ldr	x0, [x29, #144]
  409474:	bl	403360 <iovw_put_string_field@plt>
  409478:	ldr	w0, [x29, #44]
  40947c:	sub	w1, w0, #0x2
  409480:	ldr	x0, [x29, #32]
  409484:	add	x2, x0, #0x10
  409488:	add	x0, x29, #0xf8
  40948c:	mov	x3, x2
  409490:	mov	w2, w1
  409494:	mov	x1, x0
  409498:	ldr	x0, [x29, #144]
  40949c:	bl	408384 <gather_pid_metadata_from_argv>
  4094a0:	str	w0, [x29, #60]
  4094a4:	ldr	w0, [x29, #60]
  4094a8:	cmp	w0, #0x0
  4094ac:	b.lt	40992c <process_backtrace+0x604>  // b.tstop
  4094b0:	add	x0, x29, #0xf8
  4094b4:	mov	x1, x0
  4094b8:	ldr	x0, [x29, #144]
  4094bc:	bl	408600 <gather_pid_metadata>
  4094c0:	str	w0, [x29, #60]
  4094c4:	ldr	w0, [x29, #60]
  4094c8:	cmp	w0, #0x0
  4094cc:	b.lt	409934 <process_backtrace+0x60c>  // b.tstop
  4094d0:	add	x0, x29, #0x150
  4094d4:	bl	403410 <journal_importer_process_data@plt>
  4094d8:	str	w0, [x29, #60]
  4094dc:	ldr	w0, [x29, #60]
  4094e0:	cmp	w0, #0x0
  4094e4:	b.ge	409564 <process_backtrace+0x23c>  // b.tcont
  4094e8:	mov	w0, #0x3                   	// #3
  4094ec:	str	w0, [x29, #100]
  4094f0:	ldr	w0, [x29, #60]
  4094f4:	str	w0, [x29, #104]
  4094f8:	str	wzr, [x29, #108]
  4094fc:	ldr	w0, [x29, #108]
  409500:	bl	403660 <log_get_max_level_realm@plt>
  409504:	mov	w1, w0
  409508:	ldr	w0, [x29, #100]
  40950c:	and	w0, w0, #0x7
  409510:	cmp	w1, w0
  409514:	b.lt	409558 <process_backtrace+0x230>  // b.tstop
  409518:	ldr	w0, [x29, #108]
  40951c:	lsl	w1, w0, #10
  409520:	ldr	w0, [x29, #100]
  409524:	orr	w6, w1, w0
  409528:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  40952c:	add	x1, x0, #0xd73
  409530:	adrp	x0, 40b000 <_fini+0x3a0>
  409534:	add	x5, x0, #0xd60
  409538:	adrp	x0, 40c000 <_fini+0x13a0>
  40953c:	add	x4, x0, #0x510
  409540:	mov	w3, #0x4fe                 	// #1278
  409544:	mov	x2, x1
  409548:	ldr	w1, [x29, #104]
  40954c:	mov	w0, w6
  409550:	bl	4033b0 <log_internal_realm@plt>
  409554:	b	409940 <process_backtrace+0x618>
  409558:	ldr	w0, [x29, #104]
  40955c:	cmp	w0, #0x0
  409560:	b	409940 <process_backtrace+0x618>
  409564:	ldr	w0, [x29, #60]
  409568:	cmp	w0, #0x1
  40956c:	b.eq	409588 <process_backtrace+0x260>  // b.none
  409570:	add	x0, x29, #0x150
  409574:	bl	403370 <journal_importer_eof@plt>
  409578:	and	w0, w0, #0xff
  40957c:	cmp	w0, #0x0
  409580:	b.ne	409588 <process_backtrace+0x260>  // b.any
  409584:	b	4094d0 <process_backtrace+0x1a8>
  409588:	add	x0, x29, #0x150
  40958c:	bl	403370 <journal_importer_eof@plt>
  409590:	and	w0, w0, #0xff
  409594:	cmp	w0, #0x0
  409598:	b.eq	409818 <process_backtrace+0x4f0>  // b.none
  40959c:	mov	w0, #0x4                   	// #4
  4095a0:	str	w0, [x29, #76]
  4095a4:	str	wzr, [x29, #80]
  4095a8:	str	wzr, [x29, #84]
  4095ac:	ldr	w0, [x29, #84]
  4095b0:	bl	403660 <log_get_max_level_realm@plt>
  4095b4:	mov	w1, w0
  4095b8:	ldr	w0, [x29, #76]
  4095bc:	and	w0, w0, #0x7
  4095c0:	cmp	w1, w0
  4095c4:	b.lt	409608 <process_backtrace+0x2e0>  // b.tstop
  4095c8:	ldr	w0, [x29, #84]
  4095cc:	lsl	w1, w0, #10
  4095d0:	ldr	w0, [x29, #76]
  4095d4:	orr	w6, w1, w0
  4095d8:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  4095dc:	add	x1, x0, #0xd73
  4095e0:	adrp	x0, 40b000 <_fini+0x3a0>
  4095e4:	add	x5, x0, #0xd90
  4095e8:	adrp	x0, 40c000 <_fini+0x13a0>
  4095ec:	add	x4, x0, #0x510
  4095f0:	mov	w3, #0x507                 	// #1287
  4095f4:	mov	x2, x1
  4095f8:	ldr	w1, [x29, #80]
  4095fc:	mov	w0, w6
  409600:	bl	4033b0 <log_internal_realm@plt>
  409604:	b	409610 <process_backtrace+0x2e8>
  409608:	ldr	w0, [x29, #80]
  40960c:	cmp	w0, #0x0
  409610:	adrp	x0, 40b000 <_fini+0x3a0>
  409614:	add	x0, x0, #0x5b8
  409618:	str	x0, [x29, #184]
  40961c:	ldr	x0, [x29, #248]
  409620:	str	x0, [x29, #192]
  409624:	adrp	x0, 40b000 <_fini+0x3a0>
  409628:	add	x0, x0, #0x5c8
  40962c:	str	x0, [x29, #200]
  409630:	ldr	x0, [x29, #304]
  409634:	str	x0, [x29, #208]
  409638:	adrp	x0, 40b000 <_fini+0x3a0>
  40963c:	add	x0, x0, #0x5d0
  409640:	str	x0, [x29, #216]
  409644:	ldr	x0, [x29, #256]
  409648:	str	x0, [x29, #224]
  40964c:	adrp	x0, 40b000 <_fini+0x3a0>
  409650:	add	x0, x0, #0xde8
  409654:	str	x0, [x29, #232]
  409658:	ldr	x0, [x29, #272]
  40965c:	str	x0, [x29, #240]
  409660:	str	xzr, [x29, #128]
  409664:	str	xzr, [x29, #136]
  409668:	b	40969c <process_backtrace+0x374>
  40966c:	ldr	x0, [x29, #136]
  409670:	lsl	x0, x0, #3
  409674:	add	x1, x29, #0xb8
  409678:	ldr	x0, [x1, x0]
  40967c:	bl	4035f0 <strlen@plt>
  409680:	mov	x1, x0
  409684:	ldr	x0, [x29, #128]
  409688:	add	x0, x0, x1
  40968c:	str	x0, [x29, #128]
  409690:	ldr	x0, [x29, #136]
  409694:	add	x0, x0, #0x1
  409698:	str	x0, [x29, #136]
  40969c:	ldr	x0, [x29, #136]
  4096a0:	cmp	x0, #0x7
  4096a4:	b.hi	4096c0 <process_backtrace+0x398>  // b.pmore
  4096a8:	ldr	x0, [x29, #136]
  4096ac:	lsl	x0, x0, #3
  4096b0:	add	x1, x29, #0xb8
  4096b4:	ldr	x0, [x1, x0]
  4096b8:	cmp	x0, #0x0
  4096bc:	b.ne	40966c <process_backtrace+0x344>  // b.any
  4096c0:	ldr	x0, [x29, #128]
  4096c4:	add	x0, x0, #0x1
  4096c8:	str	x0, [x29, #160]
  4096cc:	ldr	x1, [x29, #160]
  4096d0:	mov	x0, #0x1                   	// #1
  4096d4:	bl	4038d0 <size_multiply_overflow>
  4096d8:	and	w0, w0, #0xff
  4096dc:	and	x0, x0, #0xff
  4096e0:	cmp	x0, #0x0
  4096e4:	b.eq	409710 <process_backtrace+0x3e8>  // b.none
  4096e8:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  4096ec:	add	x1, x0, #0xd73
  4096f0:	adrp	x0, 40c000 <_fini+0x13a0>
  4096f4:	add	x4, x0, #0x528
  4096f8:	mov	w3, #0x509                 	// #1289
  4096fc:	mov	x2, x1
  409700:	adrp	x0, 40b000 <_fini+0x3a0>
  409704:	add	x1, x0, #0x3d8
  409708:	mov	w0, #0x0                   	// #0
  40970c:	bl	403080 <log_assert_failed_realm@plt>
  409710:	ldr	x0, [x29, #160]
  409714:	cmp	x0, #0x400, lsl #12
  409718:	cset	w0, hi  // hi = pmore
  40971c:	and	w0, w0, #0xff
  409720:	and	x0, x0, #0xff
  409724:	cmp	x0, #0x0
  409728:	b.eq	409754 <process_backtrace+0x42c>  // b.none
  40972c:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  409730:	add	x1, x0, #0xd73
  409734:	adrp	x0, 40c000 <_fini+0x13a0>
  409738:	add	x4, x0, #0x528
  40973c:	mov	w3, #0x509                 	// #1289
  409740:	mov	x2, x1
  409744:	adrp	x0, 40b000 <_fini+0x3a0>
  409748:	add	x1, x0, #0x408
  40974c:	mov	w0, #0x0                   	// #0
  409750:	bl	403080 <log_assert_failed_realm@plt>
  409754:	ldr	x0, [x29, #160]
  409758:	add	x0, x0, #0xf
  40975c:	lsr	x0, x0, #4
  409760:	lsl	x0, x0, #4
  409764:	sub	sp, sp, x0
  409768:	mov	x0, sp
  40976c:	add	x0, x0, #0xf
  409770:	lsr	x0, x0, #4
  409774:	lsl	x0, x0, #4
  409778:	str	x0, [x29, #168]
  40977c:	ldr	x0, [x29, #168]
  409780:	str	x0, [x29, #120]
  409784:	str	xzr, [x29, #136]
  409788:	b	4097b8 <process_backtrace+0x490>
  40978c:	ldr	x0, [x29, #136]
  409790:	lsl	x0, x0, #3
  409794:	add	x1, x29, #0xb8
  409798:	ldr	x0, [x1, x0]
  40979c:	mov	x1, x0
  4097a0:	ldr	x0, [x29, #120]
  4097a4:	bl	402eb0 <stpcpy@plt>
  4097a8:	str	x0, [x29, #120]
  4097ac:	ldr	x0, [x29, #136]
  4097b0:	add	x0, x0, #0x1
  4097b4:	str	x0, [x29, #136]
  4097b8:	ldr	x0, [x29, #136]
  4097bc:	cmp	x0, #0x7
  4097c0:	b.hi	4097dc <process_backtrace+0x4b4>  // b.pmore
  4097c4:	ldr	x0, [x29, #136]
  4097c8:	lsl	x0, x0, #3
  4097cc:	add	x1, x29, #0xb8
  4097d0:	ldr	x0, [x1, x0]
  4097d4:	cmp	x0, #0x0
  4097d8:	b.ne	40978c <process_backtrace+0x464>  // b.any
  4097dc:	ldr	x0, [x29, #120]
  4097e0:	strb	wzr, [x0]
  4097e4:	ldr	x0, [x29, #168]
  4097e8:	str	x0, [x29, #176]
  4097ec:	ldr	x2, [x29, #176]
  4097f0:	adrp	x0, 40b000 <_fini+0x3a0>
  4097f4:	add	x1, x0, #0x610
  4097f8:	ldr	x0, [x29, #144]
  4097fc:	bl	403360 <iovw_put_string_field@plt>
  409800:	str	w0, [x29, #60]
  409804:	ldr	w0, [x29, #60]
  409808:	cmp	w0, #0x0
  40980c:	b.ge	40986c <process_backtrace+0x544>  // b.tcont
  409810:	ldr	w19, [x29, #60]
  409814:	b	409968 <process_backtrace+0x640>
  409818:	str	xzr, [x29, #112]
  40981c:	b	40985c <process_backtrace+0x534>
  409820:	ldr	x1, [x29, #408]
  409824:	ldr	x0, [x29, #112]
  409828:	lsl	x0, x0, #4
  40982c:	add	x0, x1, x0
  409830:	str	x0, [x29, #152]
  409834:	ldr	x0, [x29, #152]
  409838:	ldr	x1, [x0]
  40983c:	ldr	x0, [x29, #152]
  409840:	ldr	x0, [x0, #8]
  409844:	mov	x2, x0
  409848:	ldr	x0, [x29, #144]
  40984c:	bl	402ff0 <iovw_put@plt>
  409850:	ldr	x0, [x29, #112]
  409854:	add	x0, x0, #0x1
  409858:	str	x0, [x29, #112]
  40985c:	ldr	x0, [x29, #416]
  409860:	ldr	x1, [x29, #112]
  409864:	cmp	x1, x0
  409868:	b.cc	409820 <process_backtrace+0x4f8>  // b.lo, b.ul, b.last
  40986c:	ldr	x0, [x29, #144]
  409870:	ldr	x1, [x0]
  409874:	ldr	x0, [x29, #144]
  409878:	ldr	x0, [x0, #8]
  40987c:	mov	w4, w0
  409880:	mov	x3, x1
  409884:	adrp	x0, 40c000 <_fini+0x13a0>
  409888:	add	x2, x0, #0x510
  40988c:	adrp	x0, 40b000 <_fini+0x3a0>
  409890:	add	x1, x0, #0xdf8
  409894:	adrp	x0, 40b000 <_fini+0x3a0>
  409898:	add	x0, x0, #0x688
  40989c:	bl	4032f0 <sd_journal_sendv_with_location@plt>
  4098a0:	str	w0, [x29, #60]
  4098a4:	ldr	w0, [x29, #60]
  4098a8:	cmp	w0, #0x0
  4098ac:	b.ge	40993c <process_backtrace+0x614>  // b.tcont
  4098b0:	mov	w0, #0x3                   	// #3
  4098b4:	str	w0, [x29, #88]
  4098b8:	ldr	w0, [x29, #60]
  4098bc:	str	w0, [x29, #92]
  4098c0:	str	wzr, [x29, #96]
  4098c4:	ldr	w0, [x29, #96]
  4098c8:	bl	403660 <log_get_max_level_realm@plt>
  4098cc:	mov	w1, w0
  4098d0:	ldr	w0, [x29, #88]
  4098d4:	and	w0, w0, #0x7
  4098d8:	cmp	w1, w0
  4098dc:	b.lt	409920 <process_backtrace+0x5f8>  // b.tstop
  4098e0:	ldr	w0, [x29, #96]
  4098e4:	lsl	w1, w0, #10
  4098e8:	ldr	w0, [x29, #88]
  4098ec:	orr	w6, w1, w0
  4098f0:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  4098f4:	add	x1, x0, #0xd73
  4098f8:	adrp	x0, 40b000 <_fini+0x3a0>
  4098fc:	add	x5, x0, #0xe08
  409900:	adrp	x0, 40c000 <_fini+0x13a0>
  409904:	add	x4, x0, #0x510
  409908:	mov	w3, #0x51e                 	// #1310
  40990c:	mov	x2, x1
  409910:	ldr	w1, [x29, #92]
  409914:	mov	w0, w6
  409918:	bl	4033b0 <log_internal_realm@plt>
  40991c:	b	409940 <process_backtrace+0x618>
  409920:	ldr	w0, [x29, #92]
  409924:	cmp	w0, #0x0
  409928:	b	409940 <process_backtrace+0x618>
  40992c:	nop
  409930:	b	409940 <process_backtrace+0x618>
  409934:	nop
  409938:	b	409940 <process_backtrace+0x618>
  40993c:	nop
  409940:	ldr	x0, [x29, #144]
  409944:	ldr	x1, [x0, #8]
  409948:	ldr	x0, [x29, #416]
  40994c:	sub	x1, x1, x0
  409950:	ldr	x0, [x29, #144]
  409954:	str	x1, [x0, #8]
  409958:	ldr	x0, [x29, #144]
  40995c:	bl	403350 <iovw_free_free@plt>
  409960:	str	x0, [x29, #144]
  409964:	ldr	w19, [x29, #60]
  409968:	add	x0, x29, #0x150
  40996c:	bl	403030 <journal_importer_cleanup@plt>
  409970:	mov	w1, w19
  409974:	adrp	x0, 41d000 <__FRAME_END__+0xfdec>
  409978:	add	x0, x0, #0x948
  40997c:	ldr	x2, [x29, #472]
  409980:	ldr	x0, [x0]
  409984:	eor	x0, x2, x0
  409988:	cmp	x0, #0x0
  40998c:	b.eq	409994 <process_backtrace+0x66c>  // b.none
  409990:	bl	4032b0 <__stack_chk_fail@plt>
  409994:	mov	w0, w1
  409998:	mov	sp, x29
  40999c:	ldr	x19, [sp, #16]
  4099a0:	ldp	x29, x30, [sp], #480
  4099a4:	ret

00000000004099a8 <run>:
  4099a8:	stp	x29, x30, [sp, #-112]!
  4099ac:	mov	x29, sp
  4099b0:	stp	x19, x20, [sp, #16]
  4099b4:	str	w0, [sp, #44]
  4099b8:	str	x1, [sp, #32]
  4099bc:	mov	w0, #0x2                   	// #2
  4099c0:	bl	403230 <log_set_target@plt>
  4099c4:	bl	403610 <log_open@plt>
  4099c8:	mov	w1, #0x0                   	// #0
  4099cc:	mov	w0, #0x4                   	// #4
  4099d0:	bl	403250 <prctl@plt>
  4099d4:	bl	403f90 <parse_config>
  4099d8:	mov	w0, #0x7                   	// #7
  4099dc:	str	w0, [sp, #60]
  4099e0:	str	wzr, [sp, #64]
  4099e4:	str	wzr, [sp, #68]
  4099e8:	ldr	w0, [sp, #68]
  4099ec:	bl	403660 <log_get_max_level_realm@plt>
  4099f0:	mov	w1, w0
  4099f4:	ldr	w0, [sp, #60]
  4099f8:	and	w0, w0, #0x7
  4099fc:	cmp	w1, w0
  409a00:	b.lt	409a58 <run+0xb0>  // b.tstop
  409a04:	ldr	w0, [sp, #68]
  409a08:	lsl	w1, w0, #10
  409a0c:	ldr	w0, [sp, #60]
  409a10:	orr	w19, w1, w0
  409a14:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  409a18:	add	x20, x0, #0xd73
  409a1c:	adrp	x0, 41e000 <arg_storage>
  409a20:	add	x0, x0, #0x0
  409a24:	ldr	w0, [x0]
  409a28:	bl	403d30 <coredump_storage_to_string>
  409a2c:	mov	x6, x0
  409a30:	adrp	x0, 40b000 <_fini+0x3a0>
  409a34:	add	x5, x0, #0xe28
  409a38:	adrp	x0, 40c000 <_fini+0x13a0>
  409a3c:	add	x4, x0, #0x540
  409a40:	mov	w3, #0x535                 	// #1333
  409a44:	mov	x2, x20
  409a48:	ldr	w1, [sp, #64]
  409a4c:	mov	w0, w19
  409a50:	bl	4033b0 <log_internal_realm@plt>
  409a54:	b	409a60 <run+0xb8>
  409a58:	ldr	w0, [sp, #64]
  409a5c:	cmp	w0, #0x0
  409a60:	mov	w0, #0x7                   	// #7
  409a64:	str	w0, [sp, #72]
  409a68:	str	wzr, [sp, #76]
  409a6c:	str	wzr, [sp, #80]
  409a70:	ldr	w0, [sp, #80]
  409a74:	bl	403660 <log_get_max_level_realm@plt>
  409a78:	mov	w1, w0
  409a7c:	ldr	w0, [sp, #72]
  409a80:	and	w0, w0, #0x7
  409a84:	cmp	w1, w0
  409a88:	b.lt	409ae0 <run+0x138>  // b.tstop
  409a8c:	ldr	w0, [sp, #80]
  409a90:	lsl	w1, w0, #10
  409a94:	ldr	w0, [sp, #72]
  409a98:	orr	w19, w1, w0
  409a9c:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  409aa0:	add	x20, x0, #0xd73
  409aa4:	adrp	x0, 41e000 <arg_storage>
  409aa8:	add	x0, x0, #0x4
  409aac:	ldrb	w0, [x0]
  409ab0:	bl	4039f8 <yes_no>
  409ab4:	mov	x6, x0
  409ab8:	adrp	x0, 40b000 <_fini+0x3a0>
  409abc:	add	x5, x0, #0xe40
  409ac0:	adrp	x0, 40c000 <_fini+0x13a0>
  409ac4:	add	x4, x0, #0x540
  409ac8:	mov	w3, #0x536                 	// #1334
  409acc:	mov	x2, x20
  409ad0:	ldr	w1, [sp, #76]
  409ad4:	mov	w0, w19
  409ad8:	bl	4033b0 <log_internal_realm@plt>
  409adc:	b	409ae8 <run+0x140>
  409ae0:	ldr	w0, [sp, #76]
  409ae4:	cmp	w0, #0x0
  409ae8:	mov	w0, #0x0                   	// #0
  409aec:	bl	4030f0 <sd_listen_fds@plt>
  409af0:	str	w0, [sp, #84]
  409af4:	ldr	w0, [sp, #84]
  409af8:	cmp	w0, #0x0
  409afc:	b.ge	409b88 <run+0x1e0>  // b.tcont
  409b00:	mov	w0, #0x3                   	// #3
  409b04:	str	w0, [sp, #100]
  409b08:	ldr	w0, [sp, #84]
  409b0c:	str	w0, [sp, #104]
  409b10:	str	wzr, [sp, #108]
  409b14:	ldr	w0, [sp, #108]
  409b18:	bl	403660 <log_get_max_level_realm@plt>
  409b1c:	mov	w1, w0
  409b20:	ldr	w0, [sp, #100]
  409b24:	and	w0, w0, #0x7
  409b28:	cmp	w1, w0
  409b2c:	b.lt	409b70 <run+0x1c8>  // b.tstop
  409b30:	ldr	w0, [sp, #108]
  409b34:	lsl	w1, w0, #10
  409b38:	ldr	w0, [sp, #100]
  409b3c:	orr	w6, w1, w0
  409b40:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  409b44:	add	x1, x0, #0xd73
  409b48:	adrp	x0, 40b000 <_fini+0x3a0>
  409b4c:	add	x5, x0, #0xe60
  409b50:	adrp	x0, 40c000 <_fini+0x13a0>
  409b54:	add	x4, x0, #0x540
  409b58:	mov	w3, #0x53a                 	// #1338
  409b5c:	mov	x2, x1
  409b60:	ldr	w1, [sp, #104]
  409b64:	mov	w0, w6
  409b68:	bl	4033b0 <log_internal_realm@plt>
  409b6c:	b	409c80 <run+0x2d8>
  409b70:	ldr	w0, [sp, #104]
  409b74:	cmp	w0, #0x0
  409b78:	cneg	w0, w0, lt  // lt = tstop
  409b7c:	and	w0, w0, #0xff
  409b80:	neg	w0, w0
  409b84:	b	409c80 <run+0x2d8>
  409b88:	ldr	w0, [sp, #84]
  409b8c:	cmp	w0, #0x0
  409b90:	b.ne	409bdc <run+0x234>  // b.any
  409b94:	ldr	x0, [sp, #32]
  409b98:	add	x0, x0, #0x8
  409b9c:	ldr	x2, [x0]
  409ba0:	adrp	x0, 40b000 <_fini+0x3a0>
  409ba4:	add	x1, x0, #0xe98
  409ba8:	mov	x0, x2
  409bac:	bl	4039c8 <streq_ptr>
  409bb0:	and	w0, w0, #0xff
  409bb4:	cmp	w0, #0x0
  409bb8:	b.eq	409bcc <run+0x224>  // b.none
  409bbc:	ldr	x1, [sp, #32]
  409bc0:	ldr	w0, [sp, #44]
  409bc4:	bl	409328 <process_backtrace>
  409bc8:	b	409c80 <run+0x2d8>
  409bcc:	ldr	x1, [sp, #32]
  409bd0:	ldr	w0, [sp, #44]
  409bd4:	bl	409088 <process_kernel>
  409bd8:	b	409c80 <run+0x2d8>
  409bdc:	ldr	w0, [sp, #84]
  409be0:	cmp	w0, #0x1
  409be4:	b.ne	409bf4 <run+0x24c>  // b.any
  409be8:	mov	w0, #0x3                   	// #3
  409bec:	bl	4077c4 <process_socket>
  409bf0:	b	409c80 <run+0x2d8>
  409bf4:	mov	w0, #0x3                   	// #3
  409bf8:	str	w0, [sp, #88]
  409bfc:	mov	w0, #0x16                  	// #22
  409c00:	movk	w0, #0x4000, lsl #16
  409c04:	str	w0, [sp, #92]
  409c08:	str	wzr, [sp, #96]
  409c0c:	ldr	w0, [sp, #96]
  409c10:	bl	403660 <log_get_max_level_realm@plt>
  409c14:	mov	w1, w0
  409c18:	ldr	w0, [sp, #88]
  409c1c:	and	w0, w0, #0x7
  409c20:	cmp	w1, w0
  409c24:	b.lt	409c68 <run+0x2c0>  // b.tstop
  409c28:	ldr	w0, [sp, #96]
  409c2c:	lsl	w1, w0, #10
  409c30:	ldr	w0, [sp, #88]
  409c34:	orr	w6, w1, w0
  409c38:	adrp	x0, 40a000 <uid_from_file_name+0x11c>
  409c3c:	add	x1, x0, #0xd73
  409c40:	adrp	x0, 40b000 <_fini+0x3a0>
  409c44:	add	x5, x0, #0xea8
  409c48:	adrp	x0, 40c000 <_fini+0x13a0>
  409c4c:	add	x4, x0, #0x540
  409c50:	mov	w3, #0x546                 	// #1350
  409c54:	mov	x2, x1
  409c58:	ldr	w1, [sp, #92]
  409c5c:	mov	w0, w6
  409c60:	bl	4033b0 <log_internal_realm@plt>
  409c64:	b	409c7c <run+0x2d4>
  409c68:	ldr	w0, [sp, #92]
  409c6c:	cmp	w0, #0x0
  409c70:	cneg	w0, w0, lt  // lt = tstop
  409c74:	and	w0, w0, #0xff
  409c78:	neg	w0, w0
  409c7c:	nop
  409c80:	ldp	x19, x20, [sp, #16]
  409c84:	ldp	x29, x30, [sp], #112
  409c88:	ret

0000000000409c8c <main>:
  409c8c:	stp	x29, x30, [sp, #-48]!
  409c90:	mov	x29, sp
  409c94:	str	w0, [sp, #28]
  409c98:	str	x1, [sp, #16]
  409c9c:	ldr	x1, [sp, #16]
  409ca0:	ldr	w0, [sp, #28]
  409ca4:	bl	40394c <save_argc_argv>
  409ca8:	ldr	x1, [sp, #16]
  409cac:	ldr	w0, [sp, #28]
  409cb0:	bl	4099a8 <run>
  409cb4:	str	w0, [sp, #44]
  409cb8:	bl	403320 <ask_password_agent_close@plt>
  409cbc:	bl	402f60 <polkit_agent_close@plt>
  409cc0:	bl	403340 <pager_close@plt>
  409cc4:	bl	4035b0 <mac_selinux_finish@plt>
  409cc8:	bl	403bc0 <static_destruct>
  409ccc:	ldr	w0, [sp, #44]
  409cd0:	lsr	w0, w0, #31
  409cd4:	ldp	x29, x30, [sp], #48
  409cd8:	ret

0000000000409cdc <ALIGN_TO>:
  409cdc:	sub	sp, sp, #0x10
  409ce0:	str	x0, [sp, #8]
  409ce4:	str	x1, [sp]
  409ce8:	ldr	x1, [sp, #8]
  409cec:	ldr	x0, [sp]
  409cf0:	add	x0, x1, x0
  409cf4:	sub	x1, x0, #0x1
  409cf8:	ldr	x0, [sp]
  409cfc:	neg	x0, x0
  409d00:	and	x0, x1, x0
  409d04:	add	sp, sp, #0x10
  409d08:	ret

0000000000409d0c <startswith>:
  409d0c:	stp	x29, x30, [sp, #-48]!
  409d10:	mov	x29, sp
  409d14:	str	x0, [sp, #24]
  409d18:	str	x1, [sp, #16]
  409d1c:	ldr	x0, [sp, #16]
  409d20:	bl	4035f0 <strlen@plt>
  409d24:	str	x0, [sp, #40]
  409d28:	ldr	x2, [sp, #40]
  409d2c:	ldr	x1, [sp, #16]
  409d30:	ldr	x0, [sp, #24]
  409d34:	bl	403150 <strncmp@plt>
  409d38:	cmp	w0, #0x0
  409d3c:	b.ne	409d50 <startswith+0x44>  // b.any
  409d40:	ldr	x1, [sp, #24]
  409d44:	ldr	x0, [sp, #40]
  409d48:	add	x0, x1, x0
  409d4c:	b	409d54 <startswith+0x48>
  409d50:	mov	x0, #0x0                   	// #0
  409d54:	ldp	x29, x30, [sp], #48
  409d58:	ret

0000000000409d5c <hashmap_free>:
  409d5c:	stp	x29, x30, [sp, #-32]!
  409d60:	mov	x29, sp
  409d64:	str	x0, [sp, #24]
  409d68:	mov	x2, #0x0                   	// #0
  409d6c:	mov	x1, #0x0                   	// #0
  409d70:	ldr	x0, [sp, #24]
  409d74:	bl	402e60 <internal_hashmap_free@plt>
  409d78:	ldp	x29, x30, [sp], #32
  409d7c:	ret

0000000000409d80 <hashmap_get>:
  409d80:	stp	x29, x30, [sp, #-32]!
  409d84:	mov	x29, sp
  409d88:	str	x0, [sp, #24]
  409d8c:	str	x1, [sp, #16]
  409d90:	ldr	x1, [sp, #16]
  409d94:	ldr	x0, [sp, #24]
  409d98:	bl	4031c0 <internal_hashmap_get@plt>
  409d9c:	ldp	x29, x30, [sp], #32
  409da0:	ret

0000000000409da4 <hashmap_steal_first>:
  409da4:	stp	x29, x30, [sp, #-32]!
  409da8:	mov	x29, sp
  409dac:	str	x0, [sp, #24]
  409db0:	mov	x2, #0x0                   	// #0
  409db4:	mov	w1, #0x1                   	// #1
  409db8:	ldr	x0, [sp, #24]
  409dbc:	bl	4034c0 <internal_hashmap_first_key_and_value@plt>
  409dc0:	ldp	x29, x30, [sp], #32
  409dc4:	ret

0000000000409dc8 <closedirp>:
  409dc8:	stp	x29, x30, [sp, #-32]!
  409dcc:	mov	x29, sp
  409dd0:	str	x0, [sp, #24]
  409dd4:	ldr	x0, [sp, #24]
  409dd8:	ldr	x0, [x0]
  409ddc:	cmp	x0, #0x0
  409de0:	b.eq	409df0 <closedirp+0x28>  // b.none
  409de4:	ldr	x0, [sp, #24]
  409de8:	ldr	x0, [x0]
  409dec:	bl	403130 <closedir@plt>
  409df0:	nop
  409df4:	ldp	x29, x30, [sp], #32
  409df8:	ret

0000000000409dfc <vacuum_candidate_free>:
  409dfc:	stp	x29, x30, [sp, #-32]!
  409e00:	mov	x29, sp
  409e04:	str	x0, [sp, #24]
  409e08:	ldr	x0, [sp, #24]
  409e0c:	cmp	x0, #0x0
  409e10:	b.eq	409e2c <vacuum_candidate_free+0x30>  // b.none
  409e14:	ldr	x0, [sp, #24]
  409e18:	ldr	x0, [x0, #8]
  409e1c:	bl	403520 <free@plt>
  409e20:	ldr	x0, [sp, #24]
  409e24:	bl	403520 <free@plt>
  409e28:	b	409e30 <vacuum_candidate_free+0x34>
  409e2c:	nop
  409e30:	ldp	x29, x30, [sp], #32
  409e34:	ret

0000000000409e38 <vacuum_candidate_freep>:
  409e38:	stp	x29, x30, [sp, #-32]!
  409e3c:	mov	x29, sp
  409e40:	str	x0, [sp, #24]
  409e44:	ldr	x0, [sp, #24]
  409e48:	ldr	x0, [x0]
  409e4c:	cmp	x0, #0x0
  409e50:	b.eq	409e60 <vacuum_candidate_freep+0x28>  // b.none
  409e54:	ldr	x0, [sp, #24]
  409e58:	ldr	x0, [x0]
  409e5c:	bl	409dfc <vacuum_candidate_free>
  409e60:	nop
  409e64:	ldp	x29, x30, [sp], #32
  409e68:	ret

0000000000409e6c <vacuum_candidate_hashmap_free>:
  409e6c:	stp	x29, x30, [sp, #-48]!
  409e70:	mov	x29, sp
  409e74:	str	x0, [sp, #24]
  409e78:	b	409e84 <vacuum_candidate_hashmap_free+0x18>
  409e7c:	ldr	x0, [sp, #40]
  409e80:	bl	409dfc <vacuum_candidate_free>
  409e84:	ldr	x0, [sp, #24]
  409e88:	bl	409da4 <hashmap_steal_first>
  409e8c:	str	x0, [sp, #40]
  409e90:	ldr	x0, [sp, #40]
  409e94:	cmp	x0, #0x0
  409e98:	b.ne	409e7c <vacuum_candidate_hashmap_free+0x10>  // b.any
  409e9c:	ldr	x0, [sp, #24]
  409ea0:	bl	409d5c <hashmap_free>
  409ea4:	nop
  409ea8:	ldp	x29, x30, [sp], #48
  409eac:	ret

0000000000409eb0 <vacuum_candidate_hashmap_freep>:
  409eb0:	stp	x29, x30, [sp, #-32]!
  409eb4:	mov	x29, sp
  409eb8:	str	x0, [sp, #24]
  409ebc:	ldr	x0, [sp, #24]
  409ec0:	ldr	x0, [x0]
  409ec4:	cmp	x0, #0x0
  409ec8:	b.eq	409ed8 <vacuum_candidate_hashmap_freep+0x28>  // b.none
  409ecc:	ldr	x0, [sp, #24]
  409ed0:	ldr	x0, [x0]
  409ed4:	bl	409e6c <vacuum_candidate_hashmap_free>
  409ed8:	nop
  409edc:	ldp	x29, x30, [sp], #32
  409ee0:	ret

0000000000409ee4 <uid_from_file_name>:
  409ee4:	stp	x29, x30, [sp, #-96]!
  409ee8:	mov	x29, sp
  409eec:	str	x0, [x29, #24]
  409ef0:	str	x1, [x29, #16]
  409ef4:	adrp	x0, 41d000 <__FRAME_END__+0xfdec>
  409ef8:	add	x0, x0, #0x948
  409efc:	ldr	x1, [x0]
  409f00:	str	x1, [x29, #88]
  409f04:	mov	x1, #0x0                   	// #0
  409f08:	adrp	x0, 40c000 <_fini+0x13a0>
  409f0c:	add	x1, x0, #0x548
  409f10:	ldr	x0, [x29, #24]
  409f14:	bl	409d0c <startswith>
  409f18:	str	x0, [x29, #40]
  409f1c:	ldr	x0, [x29, #40]
  409f20:	cmp	x0, #0x0
  409f24:	b.ne	409f30 <uid_from_file_name+0x4c>  // b.any
  409f28:	mov	w0, #0xffffffea            	// #-22
  409f2c:	b	40a004 <uid_from_file_name+0x120>
  409f30:	mov	w1, #0x2e                  	// #46
  409f34:	ldr	x0, [x29, #40]
  409f38:	bl	4034d0 <strchr@plt>
  409f3c:	str	x0, [x29, #40]
  409f40:	ldr	x0, [x29, #40]
  409f44:	cmp	x0, #0x0
  409f48:	b.ne	409f54 <uid_from_file_name+0x70>  // b.any
  409f4c:	mov	w0, #0xffffffea            	// #-22
  409f50:	b	40a004 <uid_from_file_name+0x120>
  409f54:	ldr	x0, [x29, #40]
  409f58:	add	x0, x0, #0x1
  409f5c:	str	x0, [x29, #40]
  409f60:	mov	w1, #0x2e                  	// #46
  409f64:	ldr	x0, [x29, #40]
  409f68:	bl	4034d0 <strchr@plt>
  409f6c:	str	x0, [x29, #48]
  409f70:	ldr	x0, [x29, #48]
  409f74:	cmp	x0, #0x0
  409f78:	b.ne	409f84 <uid_from_file_name+0xa0>  // b.any
  409f7c:	mov	w0, #0xffffffea            	// #-22
  409f80:	b	40a004 <uid_from_file_name+0x120>
  409f84:	ldr	x0, [x29, #40]
  409f88:	str	x0, [x29, #56]
  409f8c:	ldr	x1, [x29, #48]
  409f90:	ldr	x0, [x29, #40]
  409f94:	sub	x0, x1, x0
  409f98:	mov	x1, x0
  409f9c:	ldr	x0, [x29, #56]
  409fa0:	bl	402f90 <strnlen@plt>
  409fa4:	str	x0, [x29, #64]
  409fa8:	ldr	x0, [x29, #64]
  409fac:	add	x0, x0, #0x1
  409fb0:	add	x0, x0, #0xf
  409fb4:	lsr	x0, x0, #4
  409fb8:	lsl	x0, x0, #4
  409fbc:	sub	sp, sp, x0
  409fc0:	mov	x0, sp
  409fc4:	add	x0, x0, #0xf
  409fc8:	lsr	x0, x0, #4
  409fcc:	lsl	x0, x0, #4
  409fd0:	str	x0, [x29, #72]
  409fd4:	ldr	x1, [x29, #72]
  409fd8:	ldr	x0, [x29, #64]
  409fdc:	add	x0, x1, x0
  409fe0:	strb	wzr, [x0]
  409fe4:	ldr	x2, [x29, #64]
  409fe8:	ldr	x1, [x29, #56]
  409fec:	ldr	x0, [x29, #72]
  409ff0:	bl	403010 <memcpy@plt>
  409ff4:	str	x0, [x29, #80]
  409ff8:	ldr	x1, [x29, #16]
  409ffc:	ldr	x0, [x29, #80]
  40a000:	bl	403430 <parse_uid@plt>
  40a004:	mov	w1, w0
  40a008:	adrp	x0, 41d000 <__FRAME_END__+0xfdec>
  40a00c:	add	x0, x0, #0x948
  40a010:	ldr	x2, [x29, #88]
  40a014:	ldr	x0, [x0]
  40a018:	eor	x0, x2, x0
  40a01c:	cmp	x0, #0x0
  40a020:	b.eq	40a028 <uid_from_file_name+0x144>  // b.none
  40a024:	bl	4032b0 <__stack_chk_fail@plt>
  40a028:	mov	w0, w1
  40a02c:	mov	sp, x29
  40a030:	ldp	x29, x30, [sp], #96
  40a034:	ret

000000000040a038 <vacuum_necessary>:
  40a038:	stp	x29, x30, [sp, #-208]!
  40a03c:	mov	x29, sp
  40a040:	str	x19, [sp, #16]
  40a044:	str	w0, [sp, #60]
  40a048:	str	x1, [sp, #48]
  40a04c:	str	x2, [sp, #40]
  40a050:	str	x3, [sp, #32]
  40a054:	adrp	x0, 41d000 <__FRAME_END__+0xfdec>
  40a058:	add	x0, x0, #0x948
  40a05c:	ldr	x1, [x0]
  40a060:	str	x1, [sp, #200]
  40a064:	mov	x1, #0x0                   	// #0
  40a068:	str	xzr, [sp, #72]
  40a06c:	mov	x0, #0xffffffffffffffff    	// #-1
  40a070:	str	x0, [sp, #80]
  40a074:	ldr	w0, [sp, #60]
  40a078:	lsr	w0, w0, #31
  40a07c:	and	w0, w0, #0xff
  40a080:	and	x0, x0, #0xff
  40a084:	cmp	x0, #0x0
  40a088:	b.eq	40a0b4 <vacuum_necessary+0x7c>  // b.none
  40a08c:	adrp	x0, 40c000 <_fini+0x13a0>
  40a090:	add	x1, x0, #0x553
  40a094:	adrp	x0, 40c000 <_fini+0x13a0>
  40a098:	add	x4, x0, #0x670
  40a09c:	mov	w3, #0x49                  	// #73
  40a0a0:	mov	x2, x1
  40a0a4:	adrp	x0, 40c000 <_fini+0x13a0>
  40a0a8:	add	x1, x0, #0x578
  40a0ac:	mov	w0, #0x0                   	// #0
  40a0b0:	bl	403080 <log_assert_failed_realm@plt>
  40a0b4:	add	x0, sp, #0x58
  40a0b8:	mov	x1, x0
  40a0bc:	ldr	w0, [sp, #60]
  40a0c0:	bl	403240 <fstatvfs64@plt>
  40a0c4:	cmp	w0, #0x0
  40a0c8:	b.lt	40a0ec <vacuum_necessary+0xb4>  // b.tstop
  40a0cc:	ldr	x1, [sp, #96]
  40a0d0:	ldr	x0, [sp, #104]
  40a0d4:	mul	x0, x1, x0
  40a0d8:	str	x0, [sp, #72]
  40a0dc:	ldr	x1, [sp, #96]
  40a0e0:	ldr	x0, [sp, #112]
  40a0e4:	mul	x0, x1, x0
  40a0e8:	str	x0, [sp, #80]
  40a0ec:	ldr	x0, [sp, #32]
  40a0f0:	cmn	x0, #0x1
  40a0f4:	b.ne	40a16c <vacuum_necessary+0x134>  // b.any
  40a0f8:	ldr	x0, [sp, #72]
  40a0fc:	cmp	x0, #0x0
  40a100:	b.eq	40a160 <vacuum_necessary+0x128>  // b.none
  40a104:	ldr	x1, [sp, #72]
  40a108:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
  40a10c:	movk	x0, #0xcccd
  40a110:	umulh	x0, x1, x0
  40a114:	lsr	x19, x0, #3
  40a118:	bl	403400 <page_size@plt>
  40a11c:	mov	x1, x0
  40a120:	mov	x0, x19
  40a124:	bl	409cdc <ALIGN_TO>
  40a128:	str	x0, [sp, #32]
  40a12c:	ldr	x1, [sp, #32]
  40a130:	mov	x0, #0x100000000           	// #4294967296
  40a134:	cmp	x1, x0
  40a138:	b.ls	40a144 <vacuum_necessary+0x10c>  // b.plast
  40a13c:	mov	x0, #0x100000000           	// #4294967296
  40a140:	str	x0, [sp, #32]
  40a144:	ldr	x1, [sp, #32]
  40a148:	mov	x0, #0xfffff               	// #1048575
  40a14c:	cmp	x1, x0
  40a150:	b.hi	40a180 <vacuum_necessary+0x148>  // b.pmore
  40a154:	mov	x0, #0x100000              	// #1048576
  40a158:	str	x0, [sp, #32]
  40a15c:	b	40a180 <vacuum_necessary+0x148>
  40a160:	mov	x0, #0x100000              	// #1048576
  40a164:	str	x0, [sp, #32]
  40a168:	b	40a180 <vacuum_necessary+0x148>
  40a16c:	bl	403400 <page_size@plt>
  40a170:	mov	x1, x0
  40a174:	ldr	x0, [sp, #32]
  40a178:	bl	409cdc <ALIGN_TO>
  40a17c:	str	x0, [sp, #32]
  40a180:	ldr	x0, [sp, #32]
  40a184:	cmp	x0, #0x0
  40a188:	b.eq	40a1a4 <vacuum_necessary+0x16c>  // b.none
  40a18c:	ldr	x1, [sp, #48]
  40a190:	ldr	x0, [sp, #32]
  40a194:	cmp	x1, x0
  40a198:	b.ls	40a1a4 <vacuum_necessary+0x16c>  // b.plast
  40a19c:	mov	w0, #0x1                   	// #1
  40a1a0:	b	40a254 <vacuum_necessary+0x21c>
  40a1a4:	ldr	x0, [sp, #40]
  40a1a8:	cmn	x0, #0x1
  40a1ac:	b.ne	40a218 <vacuum_necessary+0x1e0>  // b.any
  40a1b0:	ldr	x0, [sp, #72]
  40a1b4:	cmp	x0, #0x0
  40a1b8:	b.eq	40a20c <vacuum_necessary+0x1d4>  // b.none
  40a1bc:	ldr	x1, [sp, #72]
  40a1c0:	mov	x0, x1
  40a1c4:	lsl	x0, x0, #1
  40a1c8:	add	x1, x0, x1
  40a1cc:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
  40a1d0:	movk	x0, #0xcccd
  40a1d4:	umulh	x0, x1, x0
  40a1d8:	lsr	x19, x0, #4
  40a1dc:	bl	403400 <page_size@plt>
  40a1e0:	mov	x1, x0
  40a1e4:	mov	x0, x19
  40a1e8:	bl	409cdc <ALIGN_TO>
  40a1ec:	str	x0, [sp, #40]
  40a1f0:	ldr	x1, [sp, #40]
  40a1f4:	mov	x0, #0x100000000           	// #4294967296
  40a1f8:	cmp	x1, x0
  40a1fc:	b.ls	40a22c <vacuum_necessary+0x1f4>  // b.plast
  40a200:	mov	x0, #0x100000000           	// #4294967296
  40a204:	str	x0, [sp, #40]
  40a208:	b	40a22c <vacuum_necessary+0x1f4>
  40a20c:	mov	x0, #0x100000              	// #1048576
  40a210:	str	x0, [sp, #40]
  40a214:	b	40a22c <vacuum_necessary+0x1f4>
  40a218:	bl	403400 <page_size@plt>
  40a21c:	mov	x1, x0
  40a220:	ldr	x0, [sp, #40]
  40a224:	bl	409cdc <ALIGN_TO>
  40a228:	str	x0, [sp, #40]
  40a22c:	ldr	x0, [sp, #40]
  40a230:	cmp	x0, #0x0
  40a234:	b.eq	40a250 <vacuum_necessary+0x218>  // b.none
  40a238:	ldr	x1, [sp, #80]
  40a23c:	ldr	x0, [sp, #40]
  40a240:	cmp	x1, x0
  40a244:	b.cs	40a250 <vacuum_necessary+0x218>  // b.hs, b.nlast
  40a248:	mov	w0, #0x1                   	// #1
  40a24c:	b	40a254 <vacuum_necessary+0x21c>
  40a250:	mov	w0, #0x0                   	// #0
  40a254:	mov	w1, w0
  40a258:	adrp	x0, 41d000 <__FRAME_END__+0xfdec>
  40a25c:	add	x0, x0, #0x948
  40a260:	ldr	x2, [sp, #200]
  40a264:	ldr	x0, [x0]
  40a268:	eor	x0, x2, x0
  40a26c:	cmp	x0, #0x0
  40a270:	b.eq	40a278 <vacuum_necessary+0x240>  // b.none
  40a274:	bl	4032b0 <__stack_chk_fail@plt>
  40a278:	mov	w0, w1
  40a27c:	ldr	x19, [sp, #16]
  40a280:	ldp	x29, x30, [sp], #208
  40a284:	ret

000000000040a288 <coredump_vacuum>:
  40a288:	stp	x29, x30, [sp, #-496]!
  40a28c:	mov	x29, sp
  40a290:	stp	x19, x20, [sp, #16]
  40a294:	str	w0, [sp, #60]
  40a298:	str	x1, [sp, #48]
  40a29c:	str	x2, [sp, #40]
  40a2a0:	adrp	x0, 41d000 <__FRAME_END__+0xfdec>
  40a2a4:	add	x0, x0, #0x948
  40a2a8:	ldr	x1, [x0]
  40a2ac:	str	x1, [sp, #488]
  40a2b0:	mov	x1, #0x0                   	// #0
  40a2b4:	str	xzr, [sp, #152]
  40a2b8:	ldr	x0, [sp, #48]
  40a2bc:	cmp	x0, #0x0
  40a2c0:	b.ne	40a2d8 <coredump_vacuum+0x50>  // b.any
  40a2c4:	ldr	x0, [sp, #40]
  40a2c8:	cmp	x0, #0x0
  40a2cc:	b.ne	40a2d8 <coredump_vacuum+0x50>  // b.any
  40a2d0:	mov	w19, #0x0                   	// #0
  40a2d4:	b	40ab5c <coredump_vacuum+0x8d4>
  40a2d8:	ldr	w0, [sp, #60]
  40a2dc:	cmp	w0, #0x0
  40a2e0:	b.lt	40a38c <coredump_vacuum+0x104>  // b.tstop
  40a2e4:	add	x0, sp, #0xe8
  40a2e8:	mov	x1, x0
  40a2ec:	ldr	w0, [sp, #60]
  40a2f0:	bl	40ac30 <fstat64>
  40a2f4:	cmp	w0, #0x0
  40a2f8:	b.ge	40a38c <coredump_vacuum+0x104>  // b.tcont
  40a2fc:	mov	w0, #0x3                   	// #3
  40a300:	str	w0, [sp, #76]
  40a304:	bl	403220 <__errno_location@plt>
  40a308:	ldr	w0, [x0]
  40a30c:	str	w0, [sp, #80]
  40a310:	str	wzr, [sp, #84]
  40a314:	ldr	w0, [sp, #84]
  40a318:	bl	403660 <log_get_max_level_realm@plt>
  40a31c:	mov	w1, w0
  40a320:	ldr	w0, [sp, #76]
  40a324:	and	w0, w0, #0x7
  40a328:	cmp	w1, w0
  40a32c:	b.lt	40a374 <coredump_vacuum+0xec>  // b.tstop
  40a330:	ldr	w0, [sp, #84]
  40a334:	lsl	w1, w0, #10
  40a338:	ldr	w0, [sp, #76]
  40a33c:	orr	w6, w1, w0
  40a340:	adrp	x0, 40c000 <_fini+0x13a0>
  40a344:	add	x1, x0, #0x553
  40a348:	adrp	x0, 40c000 <_fini+0x13a0>
  40a34c:	add	x5, x0, #0x580
  40a350:	adrp	x0, 40c000 <_fini+0x13a0>
  40a354:	add	x4, x0, #0x688
  40a358:	mov	w3, #0x7e                  	// #126
  40a35c:	mov	x2, x1
  40a360:	ldr	w1, [sp, #80]
  40a364:	mov	w0, w6
  40a368:	bl	4033b0 <log_internal_realm@plt>
  40a36c:	mov	w19, w0
  40a370:	b	40ab5c <coredump_vacuum+0x8d4>
  40a374:	ldr	w0, [sp, #80]
  40a378:	cmp	w0, #0x0
  40a37c:	cneg	w0, w0, lt  // lt = tstop
  40a380:	and	w0, w0, #0xff
  40a384:	neg	w19, w0
  40a388:	b	40ab5c <coredump_vacuum+0x8d4>
  40a38c:	adrp	x0, 40c000 <_fini+0x13a0>
  40a390:	add	x0, x0, #0x598
  40a394:	bl	403480 <opendir@plt>
  40a398:	str	x0, [sp, #152]
  40a39c:	ldr	x0, [sp, #152]
  40a3a0:	cmp	x0, #0x0
  40a3a4:	b.ne	40a450 <coredump_vacuum+0x1c8>  // b.any
  40a3a8:	bl	403220 <__errno_location@plt>
  40a3ac:	ldr	w0, [x0]
  40a3b0:	cmp	w0, #0x2
  40a3b4:	b.ne	40a3c0 <coredump_vacuum+0x138>  // b.any
  40a3b8:	mov	w19, #0x0                   	// #0
  40a3bc:	b	40ab5c <coredump_vacuum+0x8d4>
  40a3c0:	mov	w0, #0x3                   	// #3
  40a3c4:	str	w0, [sp, #140]
  40a3c8:	bl	403220 <__errno_location@plt>
  40a3cc:	ldr	w0, [x0]
  40a3d0:	str	w0, [sp, #144]
  40a3d4:	str	wzr, [sp, #148]
  40a3d8:	ldr	w0, [sp, #148]
  40a3dc:	bl	403660 <log_get_max_level_realm@plt>
  40a3e0:	mov	w1, w0
  40a3e4:	ldr	w0, [sp, #140]
  40a3e8:	and	w0, w0, #0x7
  40a3ec:	cmp	w1, w0
  40a3f0:	b.lt	40a438 <coredump_vacuum+0x1b0>  // b.tstop
  40a3f4:	ldr	w0, [sp, #148]
  40a3f8:	lsl	w1, w0, #10
  40a3fc:	ldr	w0, [sp, #140]
  40a400:	orr	w6, w1, w0
  40a404:	adrp	x0, 40c000 <_fini+0x13a0>
  40a408:	add	x1, x0, #0x553
  40a40c:	adrp	x0, 40c000 <_fini+0x13a0>
  40a410:	add	x5, x0, #0x5b8
  40a414:	adrp	x0, 40c000 <_fini+0x13a0>
  40a418:	add	x4, x0, #0x688
  40a41c:	mov	w3, #0x8c                  	// #140
  40a420:	mov	x2, x1
  40a424:	ldr	w1, [sp, #144]
  40a428:	mov	w0, w6
  40a42c:	bl	4033b0 <log_internal_realm@plt>
  40a430:	mov	w19, w0
  40a434:	b	40ab5c <coredump_vacuum+0x8d4>
  40a438:	ldr	w0, [sp, #144]
  40a43c:	cmp	w0, #0x0
  40a440:	cneg	w0, w0, lt  // lt = tstop
  40a444:	and	w0, w0, #0xff
  40a448:	neg	w19, w0
  40a44c:	b	40ab5c <coredump_vacuum+0x8d4>
  40a450:	str	xzr, [sp, #160]
  40a454:	str	xzr, [sp, #176]
  40a458:	str	xzr, [sp, #192]
  40a45c:	ldr	x0, [sp, #152]
  40a460:	bl	4032a0 <rewinddir@plt>
  40a464:	bl	403220 <__errno_location@plt>
  40a468:	str	wzr, [x0]
  40a46c:	ldr	x0, [sp, #152]
  40a470:	bl	403090 <readdir64@plt>
  40a474:	str	x0, [sp, #184]
  40a478:	ldr	x0, [sp, #184]
  40a47c:	cmp	x0, #0x0
  40a480:	b.ne	40a49c <coredump_vacuum+0x214>  // b.any
  40a484:	bl	403220 <__errno_location@plt>
  40a488:	ldr	w0, [x0]
  40a48c:	cmp	w0, #0x0
  40a490:	b.le	40a8cc <coredump_vacuum+0x644>
  40a494:	mov	w20, #0x0                   	// #0
  40a498:	b	40aa84 <coredump_vacuum+0x7fc>
  40a49c:	ldr	x0, [sp, #184]
  40a4a0:	add	x0, x0, #0x13
  40a4a4:	bl	402fa0 <hidden_or_backup_file@plt>
  40a4a8:	and	w0, w0, #0xff
  40a4ac:	cmp	w0, #0x0
  40a4b0:	b.ne	40a890 <coredump_vacuum+0x608>  // b.any
  40a4b4:	ldr	x0, [sp, #184]
  40a4b8:	add	x0, x0, #0x13
  40a4bc:	add	x1, sp, #0x48
  40a4c0:	bl	409ee4 <uid_from_file_name>
  40a4c4:	str	w0, [sp, #88]
  40a4c8:	ldr	w0, [sp, #88]
  40a4cc:	cmp	w0, #0x0
  40a4d0:	b.lt	40a898 <coredump_vacuum+0x610>  // b.tstop
  40a4d4:	ldr	x0, [sp, #152]
  40a4d8:	bl	403070 <dirfd@plt>
  40a4dc:	mov	w4, w0
  40a4e0:	ldr	x0, [sp, #184]
  40a4e4:	add	x0, x0, #0x13
  40a4e8:	add	x1, sp, #0x168
  40a4ec:	mov	w3, #0x900                 	// #2304
  40a4f0:	mov	x2, x1
  40a4f4:	mov	x1, x0
  40a4f8:	mov	w0, w4
  40a4fc:	bl	40ac40 <fstatat64>
  40a500:	cmp	w0, #0x0
  40a504:	b.ge	40a5a4 <coredump_vacuum+0x31c>  // b.tcont
  40a508:	bl	403220 <__errno_location@plt>
  40a50c:	ldr	w0, [x0]
  40a510:	cmp	w0, #0x2
  40a514:	b.eq	40a8a0 <coredump_vacuum+0x618>  // b.none
  40a518:	mov	w0, #0x4                   	// #4
  40a51c:	str	w0, [sp, #92]
  40a520:	bl	403220 <__errno_location@plt>
  40a524:	ldr	w0, [x0]
  40a528:	str	w0, [sp, #96]
  40a52c:	str	wzr, [sp, #100]
  40a530:	ldr	w0, [sp, #100]
  40a534:	bl	403660 <log_get_max_level_realm@plt>
  40a538:	mov	w1, w0
  40a53c:	ldr	w0, [sp, #92]
  40a540:	and	w0, w0, #0x7
  40a544:	cmp	w1, w0
  40a548:	b.lt	40a598 <coredump_vacuum+0x310>  // b.tstop
  40a54c:	ldr	w0, [sp, #100]
  40a550:	lsl	w1, w0, #10
  40a554:	ldr	w0, [sp, #92]
  40a558:	orr	w7, w1, w0
  40a55c:	adrp	x0, 40c000 <_fini+0x13a0>
  40a560:	add	x1, x0, #0x553
  40a564:	ldr	x0, [sp, #184]
  40a568:	add	x0, x0, #0x13
  40a56c:	mov	x6, x0
  40a570:	adrp	x0, 40c000 <_fini+0x13a0>
  40a574:	add	x5, x0, #0x5e0
  40a578:	adrp	x0, 40c000 <_fini+0x13a0>
  40a57c:	add	x4, x0, #0x688
  40a580:	mov	w3, #0xa5                  	// #165
  40a584:	mov	x2, x1
  40a588:	ldr	w1, [sp, #96]
  40a58c:	mov	w0, w7
  40a590:	bl	4033b0 <log_internal_realm@plt>
  40a594:	b	40a8b4 <coredump_vacuum+0x62c>
  40a598:	ldr	w0, [sp, #96]
  40a59c:	cmp	w0, #0x0
  40a5a0:	b	40a8b4 <coredump_vacuum+0x62c>
  40a5a4:	ldr	w0, [sp, #376]
  40a5a8:	and	w0, w0, #0xf000
  40a5ac:	cmp	w0, #0x8, lsl #12
  40a5b0:	b.ne	40a8a8 <coredump_vacuum+0x620>  // b.any
  40a5b4:	ldr	w0, [sp, #60]
  40a5b8:	cmp	w0, #0x0
  40a5bc:	b.lt	40a5e0 <coredump_vacuum+0x358>  // b.tstop
  40a5c0:	ldr	x1, [sp, #232]
  40a5c4:	ldr	x0, [sp, #360]
  40a5c8:	cmp	x1, x0
  40a5cc:	b.ne	40a5e0 <coredump_vacuum+0x358>  // b.any
  40a5d0:	ldr	x1, [sp, #240]
  40a5d4:	ldr	x0, [sp, #368]
  40a5d8:	cmp	x1, x0
  40a5dc:	b.eq	40a8b0 <coredump_vacuum+0x628>  // b.none
  40a5e0:	add	x0, sp, #0xa0
  40a5e4:	mov	x1, #0x0                   	// #0
  40a5e8:	bl	403580 <internal_hashmap_ensure_allocated@plt>
  40a5ec:	str	w0, [sp, #88]
  40a5f0:	ldr	w0, [sp, #88]
  40a5f4:	cmp	w0, #0x0
  40a5f8:	b.ge	40a620 <coredump_vacuum+0x398>  // b.tcont
  40a5fc:	adrp	x0, 40c000 <_fini+0x13a0>
  40a600:	add	x1, x0, #0x553
  40a604:	adrp	x0, 40c000 <_fini+0x13a0>
  40a608:	add	x3, x0, #0x688
  40a60c:	mov	w2, #0xb3                  	// #179
  40a610:	mov	w0, #0x0                   	// #0
  40a614:	bl	403620 <log_oom_internal@plt>
  40a618:	mov	w19, w0
  40a61c:	b	40a888 <coredump_vacuum+0x600>
  40a620:	add	x0, sp, #0x168
  40a624:	add	x0, x0, #0x58
  40a628:	bl	4034f0 <timespec_load@plt>
  40a62c:	str	x0, [sp, #208]
  40a630:	ldr	x2, [sp, #160]
  40a634:	ldr	w0, [sp, #72]
  40a638:	mov	w0, w0
  40a63c:	add	x0, x0, #0x1
  40a640:	mov	x1, x0
  40a644:	mov	x0, x2
  40a648:	bl	409d80 <hashmap_get>
  40a64c:	str	x0, [sp, #200]
  40a650:	ldr	x0, [sp, #200]
  40a654:	cmp	x0, #0x0
  40a658:	b.eq	40a6d8 <coredump_vacuum+0x450>  // b.none
  40a65c:	ldr	x0, [sp, #200]
  40a660:	ldr	x0, [x0, #16]
  40a664:	ldr	x1, [sp, #208]
  40a668:	cmp	x1, x0
  40a66c:	b.cs	40a7fc <coredump_vacuum+0x574>  // b.hs, b.nlast
  40a670:	ldr	x0, [sp, #184]
  40a674:	add	x0, x0, #0x13
  40a678:	bl	4034a0 <strdup@plt>
  40a67c:	str	x0, [sp, #224]
  40a680:	ldr	x0, [sp, #224]
  40a684:	cmp	x0, #0x0
  40a688:	b.ne	40a6b0 <coredump_vacuum+0x428>  // b.any
  40a68c:	adrp	x0, 40c000 <_fini+0x13a0>
  40a690:	add	x1, x0, #0x553
  40a694:	adrp	x0, 40c000 <_fini+0x13a0>
  40a698:	add	x3, x0, #0x688
  40a69c:	mov	w2, #0xbf                  	// #191
  40a6a0:	mov	w0, #0x0                   	// #0
  40a6a4:	bl	403620 <log_oom_internal@plt>
  40a6a8:	mov	w19, w0
  40a6ac:	b	40a888 <coredump_vacuum+0x600>
  40a6b0:	ldr	x0, [sp, #200]
  40a6b4:	ldr	x0, [x0, #8]
  40a6b8:	bl	403520 <free@plt>
  40a6bc:	ldr	x0, [sp, #200]
  40a6c0:	ldr	x1, [sp, #224]
  40a6c4:	str	x1, [x0, #8]
  40a6c8:	ldr	x0, [sp, #200]
  40a6cc:	ldr	x1, [sp, #208]
  40a6d0:	str	x1, [x0, #16]
  40a6d4:	b	40a7fc <coredump_vacuum+0x574>
  40a6d8:	str	xzr, [sp, #168]
  40a6dc:	mov	x1, #0x18                  	// #24
  40a6e0:	mov	x0, #0x1                   	// #1
  40a6e4:	bl	4034b0 <calloc@plt>
  40a6e8:	str	x0, [sp, #168]
  40a6ec:	ldr	x0, [sp, #168]
  40a6f0:	cmp	x0, #0x0
  40a6f4:	b.ne	40a720 <coredump_vacuum+0x498>  // b.any
  40a6f8:	adrp	x0, 40c000 <_fini+0x13a0>
  40a6fc:	add	x1, x0, #0x553
  40a700:	adrp	x0, 40c000 <_fini+0x13a0>
  40a704:	add	x3, x0, #0x688
  40a708:	mov	w2, #0xcb                  	// #203
  40a70c:	mov	w0, #0x0                   	// #0
  40a710:	bl	403620 <log_oom_internal@plt>
  40a714:	mov	w19, w0
  40a718:	mov	w20, #0x0                   	// #0
  40a71c:	b	40a7ec <coredump_vacuum+0x564>
  40a720:	ldr	x0, [sp, #184]
  40a724:	add	x0, x0, #0x13
  40a728:	ldr	x20, [sp, #168]
  40a72c:	bl	4034a0 <strdup@plt>
  40a730:	str	x0, [x20, #8]
  40a734:	ldr	x0, [sp, #168]
  40a738:	ldr	x0, [x0, #8]
  40a73c:	cmp	x0, #0x0
  40a740:	b.ne	40a76c <coredump_vacuum+0x4e4>  // b.any
  40a744:	adrp	x0, 40c000 <_fini+0x13a0>
  40a748:	add	x1, x0, #0x553
  40a74c:	adrp	x0, 40c000 <_fini+0x13a0>
  40a750:	add	x3, x0, #0x688
  40a754:	mov	w2, #0xcf                  	// #207
  40a758:	mov	w0, #0x0                   	// #0
  40a75c:	bl	403620 <log_oom_internal@plt>
  40a760:	mov	w19, w0
  40a764:	mov	w20, #0x0                   	// #0
  40a768:	b	40a7ec <coredump_vacuum+0x564>
  40a76c:	ldr	x0, [sp, #168]
  40a770:	ldr	x1, [sp, #208]
  40a774:	str	x1, [x0, #16]
  40a778:	ldr	x3, [sp, #160]
  40a77c:	ldr	w0, [sp, #72]
  40a780:	mov	w0, w0
  40a784:	add	x0, x0, #0x1
  40a788:	mov	x1, x0
  40a78c:	ldr	x0, [sp, #168]
  40a790:	mov	x2, x0
  40a794:	mov	x0, x3
  40a798:	bl	4033d0 <hashmap_put@plt>
  40a79c:	str	w0, [sp, #88]
  40a7a0:	ldr	w0, [sp, #88]
  40a7a4:	cmp	w0, #0x0
  40a7a8:	b.ge	40a7d4 <coredump_vacuum+0x54c>  // b.tcont
  40a7ac:	adrp	x0, 40c000 <_fini+0x13a0>
  40a7b0:	add	x1, x0, #0x553
  40a7b4:	adrp	x0, 40c000 <_fini+0x13a0>
  40a7b8:	add	x3, x0, #0x688
  40a7bc:	mov	w2, #0xd5                  	// #213
  40a7c0:	mov	w0, #0x0                   	// #0
  40a7c4:	bl	403620 <log_oom_internal@plt>
  40a7c8:	mov	w19, w0
  40a7cc:	mov	w20, #0x0                   	// #0
  40a7d0:	b	40a7ec <coredump_vacuum+0x564>
  40a7d4:	ldr	x0, [sp, #168]
  40a7d8:	str	x0, [sp, #216]
  40a7dc:	str	xzr, [sp, #168]
  40a7e0:	ldr	x0, [sp, #216]
  40a7e4:	str	x0, [sp, #200]
  40a7e8:	mov	w20, #0x1                   	// #1
  40a7ec:	add	x0, sp, #0xa8
  40a7f0:	bl	409e38 <vacuum_candidate_freep>
  40a7f4:	cmp	w20, #0x1
  40a7f8:	b.ne	40a888 <coredump_vacuum+0x600>  // b.any
  40a7fc:	ldr	x0, [sp, #200]
  40a800:	ldr	w0, [x0]
  40a804:	add	w1, w0, #0x1
  40a808:	ldr	x0, [sp, #200]
  40a80c:	str	w1, [x0]
  40a810:	ldr	x0, [sp, #176]
  40a814:	cmp	x0, #0x0
  40a818:	b.eq	40a864 <coredump_vacuum+0x5dc>  // b.none
  40a81c:	ldr	x0, [sp, #176]
  40a820:	ldr	w1, [x0]
  40a824:	ldr	x0, [sp, #200]
  40a828:	ldr	w0, [x0]
  40a82c:	cmp	w1, w0
  40a830:	b.cc	40a864 <coredump_vacuum+0x5dc>  // b.lo, b.ul, b.last
  40a834:	ldr	x0, [sp, #176]
  40a838:	ldr	w1, [x0]
  40a83c:	ldr	x0, [sp, #200]
  40a840:	ldr	w0, [x0]
  40a844:	cmp	w1, w0
  40a848:	b.ne	40a86c <coredump_vacuum+0x5e4>  // b.any
  40a84c:	ldr	x0, [sp, #200]
  40a850:	ldr	x1, [x0, #16]
  40a854:	ldr	x0, [sp, #176]
  40a858:	ldr	x0, [x0, #16]
  40a85c:	cmp	x1, x0
  40a860:	b.cs	40a86c <coredump_vacuum+0x5e4>  // b.hs, b.nlast
  40a864:	ldr	x0, [sp, #200]
  40a868:	str	x0, [sp, #176]
  40a86c:	ldr	x0, [sp, #424]
  40a870:	lsl	x0, x0, #9
  40a874:	mov	x1, x0
  40a878:	ldr	x0, [sp, #192]
  40a87c:	add	x0, x0, x1
  40a880:	str	x0, [sp, #192]
  40a884:	b	40a8b4 <coredump_vacuum+0x62c>
  40a888:	mov	w20, #0x1                   	// #1
  40a88c:	b	40aa84 <coredump_vacuum+0x7fc>
  40a890:	nop
  40a894:	b	40a8b4 <coredump_vacuum+0x62c>
  40a898:	nop
  40a89c:	b	40a8b4 <coredump_vacuum+0x62c>
  40a8a0:	nop
  40a8a4:	b	40a8b4 <coredump_vacuum+0x62c>
  40a8a8:	nop
  40a8ac:	b	40a8b4 <coredump_vacuum+0x62c>
  40a8b0:	nop
  40a8b4:	bl	403220 <__errno_location@plt>
  40a8b8:	str	wzr, [x0]
  40a8bc:	ldr	x0, [sp, #152]
  40a8c0:	bl	403090 <readdir64@plt>
  40a8c4:	str	x0, [sp, #184]
  40a8c8:	b	40a478 <coredump_vacuum+0x1f0>
  40a8cc:	nop
  40a8d0:	ldr	x0, [sp, #176]
  40a8d4:	cmp	x0, #0x0
  40a8d8:	b.ne	40a8e4 <coredump_vacuum+0x65c>  // b.any
  40a8dc:	mov	w20, #0x2                   	// #2
  40a8e0:	b	40aa84 <coredump_vacuum+0x7fc>
  40a8e4:	ldr	x0, [sp, #152]
  40a8e8:	bl	403070 <dirfd@plt>
  40a8ec:	ldr	x3, [sp, #40]
  40a8f0:	ldr	x2, [sp, #48]
  40a8f4:	ldr	x1, [sp, #192]
  40a8f8:	bl	40a038 <vacuum_necessary>
  40a8fc:	and	w0, w0, #0xff
  40a900:	str	w0, [sp, #88]
  40a904:	ldr	w0, [sp, #88]
  40a908:	cmp	w0, #0x0
  40a90c:	b.gt	40a91c <coredump_vacuum+0x694>
  40a910:	ldr	w19, [sp, #88]
  40a914:	mov	w20, #0x1                   	// #1
  40a918:	b	40aa84 <coredump_vacuum+0x7fc>
  40a91c:	ldr	x0, [sp, #152]
  40a920:	bl	403070 <dirfd@plt>
  40a924:	mov	w3, w0
  40a928:	ldr	x0, [sp, #176]
  40a92c:	ldr	x0, [x0, #8]
  40a930:	mov	w2, #0x0                   	// #0
  40a934:	mov	x1, x0
  40a938:	mov	w0, w3
  40a93c:	bl	4030a0 <unlinkat_deallocate@plt>
  40a940:	str	w0, [sp, #88]
  40a944:	ldr	w0, [sp, #88]
  40a948:	cmn	w0, #0x2
  40a94c:	b.ne	40a958 <coredump_vacuum+0x6d0>  // b.any
  40a950:	mov	w20, #0x3                   	// #3
  40a954:	b	40aa84 <coredump_vacuum+0x7fc>
  40a958:	ldr	w0, [sp, #88]
  40a95c:	cmp	w0, #0x0
  40a960:	b.ge	40aa00 <coredump_vacuum+0x778>  // b.tcont
  40a964:	mov	w0, #0x3                   	// #3
  40a968:	str	w0, [sp, #116]
  40a96c:	ldr	w0, [sp, #88]
  40a970:	str	w0, [sp, #120]
  40a974:	str	wzr, [sp, #124]
  40a978:	ldr	w0, [sp, #124]
  40a97c:	bl	403660 <log_get_max_level_realm@plt>
  40a980:	mov	w1, w0
  40a984:	ldr	w0, [sp, #116]
  40a988:	and	w0, w0, #0x7
  40a98c:	cmp	w1, w0
  40a990:	b.lt	40a9e4 <coredump_vacuum+0x75c>  // b.tstop
  40a994:	ldr	w0, [sp, #124]
  40a998:	lsl	w1, w0, #10
  40a99c:	ldr	w0, [sp, #116]
  40a9a0:	orr	w7, w1, w0
  40a9a4:	adrp	x0, 40c000 <_fini+0x13a0>
  40a9a8:	add	x1, x0, #0x553
  40a9ac:	ldr	x0, [sp, #176]
  40a9b0:	ldr	x0, [x0, #8]
  40a9b4:	mov	x6, x0
  40a9b8:	adrp	x0, 40c000 <_fini+0x13a0>
  40a9bc:	add	x5, x0, #0x610
  40a9c0:	adrp	x0, 40c000 <_fini+0x13a0>
  40a9c4:	add	x4, x0, #0x688
  40a9c8:	mov	w3, #0xef                  	// #239
  40a9cc:	mov	x2, x1
  40a9d0:	ldr	w1, [sp, #120]
  40a9d4:	mov	w0, w7
  40a9d8:	bl	4033b0 <log_internal_realm@plt>
  40a9dc:	mov	w19, w0
  40a9e0:	b	40a9f8 <coredump_vacuum+0x770>
  40a9e4:	ldr	w0, [sp, #120]
  40a9e8:	cmp	w0, #0x0
  40a9ec:	cneg	w0, w0, lt  // lt = tstop
  40a9f0:	and	w0, w0, #0xff
  40a9f4:	neg	w19, w0
  40a9f8:	mov	w20, #0x1                   	// #1
  40a9fc:	b	40aa84 <coredump_vacuum+0x7fc>
  40aa00:	mov	w0, #0x6                   	// #6
  40aa04:	str	w0, [sp, #104]
  40aa08:	str	wzr, [sp, #108]
  40aa0c:	str	wzr, [sp, #112]
  40aa10:	ldr	w0, [sp, #112]
  40aa14:	bl	403660 <log_get_max_level_realm@plt>
  40aa18:	mov	w1, w0
  40aa1c:	ldr	w0, [sp, #104]
  40aa20:	and	w0, w0, #0x7
  40aa24:	cmp	w1, w0
  40aa28:	b.lt	40aa78 <coredump_vacuum+0x7f0>  // b.tstop
  40aa2c:	ldr	w0, [sp, #112]
  40aa30:	lsl	w1, w0, #10
  40aa34:	ldr	w0, [sp, #104]
  40aa38:	orr	w7, w1, w0
  40aa3c:	adrp	x0, 40c000 <_fini+0x13a0>
  40aa40:	add	x1, x0, #0x553
  40aa44:	ldr	x0, [sp, #176]
  40aa48:	ldr	x0, [x0, #8]
  40aa4c:	mov	x6, x0
  40aa50:	adrp	x0, 40c000 <_fini+0x13a0>
  40aa54:	add	x5, x0, #0x630
  40aa58:	adrp	x0, 40c000 <_fini+0x13a0>
  40aa5c:	add	x4, x0, #0x688
  40aa60:	mov	w3, #0xf1                  	// #241
  40aa64:	mov	x2, x1
  40aa68:	ldr	w1, [sp, #108]
  40aa6c:	mov	w0, w7
  40aa70:	bl	4033b0 <log_internal_realm@plt>
  40aa74:	b	40aa80 <coredump_vacuum+0x7f8>
  40aa78:	ldr	w0, [sp, #108]
  40aa7c:	cmp	w0, #0x0
  40aa80:	mov	w20, #0x4                   	// #4
  40aa84:	add	x0, sp, #0xa0
  40aa88:	bl	409eb0 <vacuum_candidate_hashmap_freep>
  40aa8c:	cmp	w20, #0x4
  40aa90:	b.eq	40aac8 <coredump_vacuum+0x840>  // b.none
  40aa94:	cmp	w20, #0x4
  40aa98:	b.gt	40a450 <coredump_vacuum+0x1c8>
  40aa9c:	cmp	w20, #0x2
  40aaa0:	b.eq	40aac0 <coredump_vacuum+0x838>  // b.none
  40aaa4:	cmp	w20, #0x2
  40aaa8:	b.gt	40a450 <coredump_vacuum+0x1c8>
  40aaac:	cmp	w20, #0x0
  40aab0:	b.eq	40aacc <coredump_vacuum+0x844>  // b.none
  40aab4:	cmp	w20, #0x1
  40aab8:	b.eq	40ab5c <coredump_vacuum+0x8d4>  // b.none
  40aabc:	b	40aac8 <coredump_vacuum+0x840>
  40aac0:	mov	w19, #0x0                   	// #0
  40aac4:	b	40ab5c <coredump_vacuum+0x8d4>
  40aac8:	b	40a450 <coredump_vacuum+0x1c8>
  40aacc:	mov	w0, #0x3                   	// #3
  40aad0:	str	w0, [sp, #128]
  40aad4:	bl	403220 <__errno_location@plt>
  40aad8:	ldr	w0, [x0]
  40aadc:	str	w0, [sp, #132]
  40aae0:	str	wzr, [sp, #136]
  40aae4:	ldr	w0, [sp, #136]
  40aae8:	bl	403660 <log_get_max_level_realm@plt>
  40aaec:	mov	w1, w0
  40aaf0:	ldr	w0, [sp, #128]
  40aaf4:	and	w0, w0, #0x7
  40aaf8:	cmp	w1, w0
  40aafc:	b.lt	40ab44 <coredump_vacuum+0x8bc>  // b.tstop
  40ab00:	ldr	w0, [sp, #136]
  40ab04:	lsl	w1, w0, #10
  40ab08:	ldr	w0, [sp, #128]
  40ab0c:	orr	w6, w1, w0
  40ab10:	adrp	x0, 40c000 <_fini+0x13a0>
  40ab14:	add	x1, x0, #0x553
  40ab18:	adrp	x0, 40c000 <_fini+0x13a0>
  40ab1c:	add	x5, x0, #0x650
  40ab20:	adrp	x0, 40c000 <_fini+0x13a0>
  40ab24:	add	x4, x0, #0x688
  40ab28:	mov	w3, #0xf7                  	// #247
  40ab2c:	mov	x2, x1
  40ab30:	ldr	w1, [sp, #132]
  40ab34:	mov	w0, w6
  40ab38:	bl	4033b0 <log_internal_realm@plt>
  40ab3c:	mov	w19, w0
  40ab40:	b	40ab58 <coredump_vacuum+0x8d0>
  40ab44:	ldr	w0, [sp, #132]
  40ab48:	cmp	w0, #0x0
  40ab4c:	cneg	w0, w0, lt  // lt = tstop
  40ab50:	and	w0, w0, #0xff
  40ab54:	neg	w19, w0
  40ab58:	nop
  40ab5c:	add	x0, sp, #0x98
  40ab60:	bl	409dc8 <closedirp>
  40ab64:	mov	w1, w19
  40ab68:	adrp	x0, 41d000 <__FRAME_END__+0xfdec>
  40ab6c:	add	x0, x0, #0x948
  40ab70:	ldr	x2, [sp, #488]
  40ab74:	ldr	x0, [x0]
  40ab78:	eor	x0, x2, x0
  40ab7c:	cmp	x0, #0x0
  40ab80:	b.eq	40ab88 <coredump_vacuum+0x900>  // b.none
  40ab84:	bl	4032b0 <__stack_chk_fail@plt>
  40ab88:	mov	w0, w1
  40ab8c:	ldp	x19, x20, [sp, #16]
  40ab90:	ldp	x29, x30, [sp], #496
  40ab94:	ret

000000000040ab98 <__libc_csu_init>:
  40ab98:	stp	x29, x30, [sp, #-64]!
  40ab9c:	mov	x29, sp
  40aba0:	stp	x19, x20, [sp, #16]
  40aba4:	adrp	x20, 41d000 <__FRAME_END__+0xfdec>
  40aba8:	add	x20, x20, #0x940
  40abac:	stp	x21, x22, [sp, #32]
  40abb0:	adrp	x21, 41d000 <__FRAME_END__+0xfdec>
  40abb4:	add	x21, x21, #0x938
  40abb8:	sub	x20, x20, x21
  40abbc:	mov	w22, w0
  40abc0:	stp	x23, x24, [sp, #48]
  40abc4:	mov	x23, x1
  40abc8:	mov	x24, x2
  40abcc:	bl	402dd8 <_init>
  40abd0:	cmp	xzr, x20, asr #3
  40abd4:	b.eq	40ac00 <__libc_csu_init+0x68>  // b.none
  40abd8:	asr	x20, x20, #3
  40abdc:	mov	x19, #0x0                   	// #0
  40abe0:	ldr	x3, [x21, x19, lsl #3]
  40abe4:	mov	x2, x24
  40abe8:	add	x19, x19, #0x1
  40abec:	mov	x1, x23
  40abf0:	mov	w0, w22
  40abf4:	blr	x3
  40abf8:	cmp	x20, x19
  40abfc:	b.ne	40abe0 <__libc_csu_init+0x48>  // b.any
  40ac00:	ldp	x19, x20, [sp, #16]
  40ac04:	ldp	x21, x22, [sp, #32]
  40ac08:	ldp	x23, x24, [sp, #48]
  40ac0c:	ldp	x29, x30, [sp], #64
  40ac10:	ret
  40ac14:	nop

000000000040ac18 <__libc_csu_fini>:
  40ac18:	ret
  40ac1c:	nop

000000000040ac20 <stat64>:
  40ac20:	mov	x2, x1
  40ac24:	mov	x1, x0
  40ac28:	mov	w0, #0x0                   	// #0
  40ac2c:	b	403300 <__xstat64@plt>

000000000040ac30 <fstat64>:
  40ac30:	mov	x2, x1
  40ac34:	mov	w1, w0
  40ac38:	mov	w0, #0x0                   	// #0
  40ac3c:	b	4031d0 <__fxstat64@plt>

000000000040ac40 <fstatat64>:
  40ac40:	mov	x4, x1
  40ac44:	mov	x5, x2
  40ac48:	mov	w1, w0
  40ac4c:	mov	x2, x4
  40ac50:	mov	w0, #0x0                   	// #0
  40ac54:	mov	w4, w3
  40ac58:	mov	x3, x5
  40ac5c:	b	4031e0 <__fxstatat64@plt>

Disassembly of section .fini:

000000000040ac60 <_fini>:
  40ac60:	stp	x29, x30, [sp, #-16]!
  40ac64:	mov	x29, sp
  40ac68:	ldp	x29, x30, [sp], #16
  40ac6c:	ret
