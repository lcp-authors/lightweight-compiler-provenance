
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_lzma.cpython-38-aarch64-linux-gnu.so_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000021f8 <.init>:
    21f8:	stp	x29, x30, [sp, #-16]!
    21fc:	mov	x29, sp
    2200:	bl	2690 <_PyDict_SetItemId@plt+0x10>
    2204:	ldp	x29, x30, [sp], #16
    2208:	ret

Disassembly of section .plt:

0000000000002210 <memcpy@plt-0x20>:
    2210:	stp	x16, x30, [sp, #-16]!
    2214:	adrp	x16, 17000 <PyInit__lzma@@Base+0x1489c>
    2218:	ldr	x17, [x16, #4088]
    221c:	add	x16, x16, #0xff8
    2220:	br	x17
    2224:	nop
    2228:	nop
    222c:	nop

0000000000002230 <memcpy@plt>:
    2230:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2234:	ldr	x17, [x16]
    2238:	add	x16, x16, #0x0
    223c:	br	x17

0000000000002240 <memmove@plt>:
    2240:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2244:	ldr	x17, [x16, #8]
    2248:	add	x16, x16, #0x8
    224c:	br	x17

0000000000002250 <PyModule_AddIntConstant@plt>:
    2250:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2254:	ldr	x17, [x16, #16]
    2258:	add	x16, x16, #0x10
    225c:	br	x17

0000000000002260 <PyMapping_Check@plt>:
    2260:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2264:	ldr	x17, [x16, #24]
    2268:	add	x16, x16, #0x18
    226c:	br	x17

0000000000002270 <_PyBytes_Resize@plt>:
    2270:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2274:	ldr	x17, [x16, #32]
    2278:	add	x16, x16, #0x20
    227c:	br	x17

0000000000002280 <lzma_code@plt>:
    2280:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2284:	ldr	x17, [x16, #40]
    2288:	add	x16, x16, #0x28
    228c:	br	x17

0000000000002290 <PyEval_RestoreThread@plt>:
    2290:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2294:	ldr	x17, [x16, #48]
    2298:	add	x16, x16, #0x30
    229c:	br	x17

00000000000022a0 <PyMem_Free@plt>:
    22a0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    22a4:	ldr	x17, [x16, #56]
    22a8:	add	x16, x16, #0x38
    22ac:	br	x17

00000000000022b0 <PyLong_FromUnsignedLongLong@plt>:
    22b0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    22b4:	ldr	x17, [x16, #64]
    22b8:	add	x16, x16, #0x40
    22bc:	br	x17

00000000000022c0 <PyBuffer_Release@plt>:
    22c0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    22c4:	ldr	x17, [x16, #72]
    22c8:	add	x16, x16, #0x48
    22cc:	br	x17

00000000000022d0 <PyLong_AsUnsignedLongLong@plt>:
    22d0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    22d4:	ldr	x17, [x16, #80]
    22d8:	add	x16, x16, #0x50
    22dc:	br	x17

00000000000022e0 <__cxa_finalize@plt>:
    22e0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    22e4:	ldr	x17, [x16, #88]
    22e8:	add	x16, x16, #0x58
    22ec:	br	x17

00000000000022f0 <PyMem_RawMalloc@plt>:
    22f0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    22f4:	ldr	x17, [x16, #96]
    22f8:	add	x16, x16, #0x60
    22fc:	br	x17

0000000000002300 <PyBuffer_IsContiguous@plt>:
    2300:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2304:	ldr	x17, [x16, #104]
    2308:	add	x16, x16, #0x68
    230c:	br	x17

0000000000002310 <PyBytes_FromStringAndSize@plt>:
    2310:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2314:	ldr	x17, [x16, #112]
    2318:	add	x16, x16, #0x70
    231c:	br	x17

0000000000002320 <_Py_Dealloc@plt>:
    2320:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2324:	ldr	x17, [x16, #120]
    2328:	add	x16, x16, #0x78
    232c:	br	x17

0000000000002330 <PyErr_NoMemory@plt>:
    2330:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2334:	ldr	x17, [x16, #128]
    2338:	add	x16, x16, #0x80
    233c:	br	x17

0000000000002340 <PyErr_NewExceptionWithDoc@plt>:
    2340:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2344:	ldr	x17, [x16, #136]
    2348:	add	x16, x16, #0x88
    234c:	br	x17

0000000000002350 <PyThread_acquire_lock@plt>:
    2350:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2354:	ldr	x17, [x16, #144]
    2358:	add	x16, x16, #0x90
    235c:	br	x17

0000000000002360 <lzma_easy_encoder@plt>:
    2360:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2364:	ldr	x17, [x16, #152]
    2368:	add	x16, x16, #0x98
    236c:	br	x17

0000000000002370 <_PyArg_UnpackKeywords@plt>:
    2370:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2374:	ldr	x17, [x16, #160]
    2378:	add	x16, x16, #0xa0
    237c:	br	x17

0000000000002380 <PyErr_SetString@plt>:
    2380:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2384:	ldr	x17, [x16, #168]
    2388:	add	x16, x16, #0xa8
    238c:	br	x17

0000000000002390 <PyMapping_GetItemString@plt>:
    2390:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2394:	ldr	x17, [x16, #176]
    2398:	add	x16, x16, #0xb0
    239c:	br	x17

00000000000023a0 <lzma_raw_encoder@plt>:
    23a0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    23a4:	ldr	x17, [x16, #184]
    23a8:	add	x16, x16, #0xb8
    23ac:	br	x17

00000000000023b0 <PyMem_Realloc@plt>:
    23b0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    23b4:	ldr	x17, [x16, #192]
    23b8:	add	x16, x16, #0xc0
    23bc:	br	x17

00000000000023c0 <PyErr_SetNone@plt>:
    23c0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    23c4:	ldr	x17, [x16, #200]
    23c8:	add	x16, x16, #0xc8
    23cc:	br	x17

00000000000023d0 <PyErr_ExceptionMatches@plt>:
    23d0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    23d4:	ldr	x17, [x16, #208]
    23d8:	add	x16, x16, #0xd0
    23dc:	br	x17

00000000000023e0 <memset@plt>:
    23e0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    23e4:	ldr	x17, [x16, #216]
    23e8:	add	x16, x16, #0xd8
    23ec:	br	x17

00000000000023f0 <lzma_properties_size@plt>:
    23f0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    23f4:	ldr	x17, [x16, #224]
    23f8:	add	x16, x16, #0xe0
    23fc:	br	x17

0000000000002400 <PySequence_GetItem@plt>:
    2400:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2404:	ldr	x17, [x16, #232]
    2408:	add	x16, x16, #0xe8
    240c:	br	x17

0000000000002410 <lzma_auto_decoder@plt>:
    2410:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2414:	ldr	x17, [x16, #240]
    2418:	add	x16, x16, #0xf0
    241c:	br	x17

0000000000002420 <PyType_Ready@plt>:
    2420:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2424:	ldr	x17, [x16, #248]
    2428:	add	x16, x16, #0xf8
    242c:	br	x17

0000000000002430 <PyLong_AsSsize_t@plt>:
    2430:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2434:	ldr	x17, [x16, #256]
    2438:	add	x16, x16, #0x100
    243c:	br	x17

0000000000002440 <_PyArg_BadArgument@plt>:
    2440:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2444:	ldr	x17, [x16, #264]
    2448:	add	x16, x16, #0x108
    244c:	br	x17

0000000000002450 <PySequence_Size@plt>:
    2450:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2454:	ldr	x17, [x16, #272]
    2458:	add	x16, x16, #0x110
    245c:	br	x17

0000000000002460 <PyErr_Clear@plt>:
    2460:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2464:	ldr	x17, [x16, #280]
    2468:	add	x16, x16, #0x118
    246c:	br	x17

0000000000002470 <PyBool_FromLong@plt>:
    2470:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2474:	ldr	x17, [x16, #288]
    2478:	add	x16, x16, #0x120
    247c:	br	x17

0000000000002480 <__gmon_start__@plt>:
    2480:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2484:	ldr	x17, [x16, #296]
    2488:	add	x16, x16, #0x128
    248c:	br	x17

0000000000002490 <PyTuple_New@plt>:
    2490:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2494:	ldr	x17, [x16, #304]
    2498:	add	x16, x16, #0x130
    249c:	br	x17

00000000000024a0 <_PyArg_CheckPositional@plt>:
    24a0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    24a4:	ldr	x17, [x16, #312]
    24a8:	add	x16, x16, #0x138
    24ac:	br	x17

00000000000024b0 <lzma_properties_decode@plt>:
    24b0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    24b4:	ldr	x17, [x16, #320]
    24b8:	add	x16, x16, #0x140
    24bc:	br	x17

00000000000024c0 <PyErr_Occurred@plt>:
    24c0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    24c4:	ldr	x17, [x16, #328]
    24c8:	add	x16, x16, #0x148
    24cc:	br	x17

00000000000024d0 <PyModule_Create2@plt>:
    24d0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    24d4:	ldr	x17, [x16, #336]
    24d8:	add	x16, x16, #0x150
    24dc:	br	x17

00000000000024e0 <lzma_stream_decoder@plt>:
    24e0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    24e4:	ldr	x17, [x16, #344]
    24e8:	add	x16, x16, #0x158
    24ec:	br	x17

00000000000024f0 <lzma_alone_decoder@plt>:
    24f0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    24f4:	ldr	x17, [x16, #352]
    24f8:	add	x16, x16, #0x160
    24fc:	br	x17

0000000000002500 <lzma_end@plt>:
    2500:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2504:	ldr	x17, [x16, #360]
    2508:	add	x16, x16, #0x168
    250c:	br	x17

0000000000002510 <PyMem_RawFree@plt>:
    2510:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2514:	ldr	x17, [x16, #368]
    2518:	add	x16, x16, #0x170
    251c:	br	x17

0000000000002520 <lzma_get_check@plt>:
    2520:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2524:	ldr	x17, [x16, #376]
    2528:	add	x16, x16, #0x178
    252c:	br	x17

0000000000002530 <free@plt>:
    2530:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2534:	ldr	x17, [x16, #384]
    2538:	add	x16, x16, #0x180
    253c:	br	x17

0000000000002540 <PyThread_allocate_lock@plt>:
    2540:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2544:	ldr	x17, [x16, #392]
    2548:	add	x16, x16, #0x188
    254c:	br	x17

0000000000002550 <_PyArg_ParseTupleAndKeywords_SizeT@plt>:
    2550:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2554:	ldr	x17, [x16, #400]
    2558:	add	x16, x16, #0x190
    255c:	br	x17

0000000000002560 <PyThread_release_lock@plt>:
    2560:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2564:	ldr	x17, [x16, #408]
    2568:	add	x16, x16, #0x198
    256c:	br	x17

0000000000002570 <lzma_raw_decoder@plt>:
    2570:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2574:	ldr	x17, [x16, #416]
    2578:	add	x16, x16, #0x1a0
    257c:	br	x17

0000000000002580 <PyDict_New@plt>:
    2580:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2584:	ldr	x17, [x16, #424]
    2588:	add	x16, x16, #0x1a8
    258c:	br	x17

0000000000002590 <lzma_alone_encoder@plt>:
    2590:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2594:	ldr	x17, [x16, #432]
    2598:	add	x16, x16, #0x1b0
    259c:	br	x17

00000000000025a0 <PyObject_GetBuffer@plt>:
    25a0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    25a4:	ldr	x17, [x16, #440]
    25a8:	add	x16, x16, #0x1b8
    25ac:	br	x17

00000000000025b0 <lzma_properties_encode@plt>:
    25b0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    25b4:	ldr	x17, [x16, #448]
    25b8:	add	x16, x16, #0x1c0
    25bc:	br	x17

00000000000025c0 <PyEval_SaveThread@plt>:
    25c0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    25c4:	ldr	x17, [x16, #456]
    25c8:	add	x16, x16, #0x1c8
    25cc:	br	x17

00000000000025d0 <PyModule_AddObject@plt>:
    25d0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    25d4:	ldr	x17, [x16, #464]
    25d8:	add	x16, x16, #0x1d0
    25dc:	br	x17

00000000000025e0 <PyType_IsSubtype@plt>:
    25e0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    25e4:	ldr	x17, [x16, #472]
    25e8:	add	x16, x16, #0x1d8
    25ec:	br	x17

00000000000025f0 <PyErr_Format@plt>:
    25f0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    25f4:	ldr	x17, [x16, #480]
    25f8:	add	x16, x16, #0x1e0
    25fc:	br	x17

0000000000002600 <lzma_check_is_supported@plt>:
    2600:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2604:	ldr	x17, [x16, #488]
    2608:	add	x16, x16, #0x1e8
    260c:	br	x17

0000000000002610 <lzma_stream_encoder@plt>:
    2610:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2614:	ldr	x17, [x16, #496]
    2618:	add	x16, x16, #0x1f0
    261c:	br	x17

0000000000002620 <PyLong_FromLongLong@plt>:
    2620:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2624:	ldr	x17, [x16, #504]
    2628:	add	x16, x16, #0x1f8
    262c:	br	x17

0000000000002630 <PyNumber_Index@plt>:
    2630:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2634:	ldr	x17, [x16, #512]
    2638:	add	x16, x16, #0x200
    263c:	br	x17

0000000000002640 <_PyLong_AsInt@plt>:
    2640:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2644:	ldr	x17, [x16, #520]
    2648:	add	x16, x16, #0x208
    264c:	br	x17

0000000000002650 <lzma_lzma_preset@plt>:
    2650:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2654:	ldr	x17, [x16, #528]
    2658:	add	x16, x16, #0x210
    265c:	br	x17

0000000000002660 <PyMem_Malloc@plt>:
    2660:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2664:	ldr	x17, [x16, #536]
    2668:	add	x16, x16, #0x218
    266c:	br	x17

0000000000002670 <PyThread_free_lock@plt>:
    2670:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2674:	ldr	x17, [x16, #544]
    2678:	add	x16, x16, #0x220
    267c:	br	x17

0000000000002680 <_PyDict_SetItemId@plt>:
    2680:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2684:	ldr	x17, [x16, #552]
    2688:	add	x16, x16, #0x228
    268c:	br	x17

Disassembly of section .text:

0000000000002690 <PyInit__lzma@@Base-0xd4>:
    2690:	adrp	x0, 17000 <PyInit__lzma@@Base+0x1489c>
    2694:	ldr	x0, [x0, #4032]
    2698:	cbz	x0, 26a0 <_PyDict_SetItemId@plt+0x20>
    269c:	b	2480 <__gmon_start__@plt>
    26a0:	ret
    26a4:	nop
    26a8:	adrp	x0, 18000 <PyInit__lzma@@Base+0x1589c>
    26ac:	add	x0, x0, #0x9b8
    26b0:	adrp	x1, 18000 <PyInit__lzma@@Base+0x1589c>
    26b4:	add	x1, x1, #0x9b8
    26b8:	cmp	x1, x0
    26bc:	b.eq	26d4 <_PyDict_SetItemId@plt+0x54>  // b.none
    26c0:	adrp	x1, 17000 <PyInit__lzma@@Base+0x1489c>
    26c4:	ldr	x1, [x1, #3976]
    26c8:	cbz	x1, 26d4 <_PyDict_SetItemId@plt+0x54>
    26cc:	mov	x16, x1
    26d0:	br	x16
    26d4:	ret
    26d8:	adrp	x0, 18000 <PyInit__lzma@@Base+0x1589c>
    26dc:	add	x0, x0, #0x9b8
    26e0:	adrp	x1, 18000 <PyInit__lzma@@Base+0x1589c>
    26e4:	add	x1, x1, #0x9b8
    26e8:	sub	x1, x1, x0
    26ec:	lsr	x2, x1, #63
    26f0:	add	x1, x2, x1, asr #3
    26f4:	cmp	xzr, x1, asr #1
    26f8:	asr	x1, x1, #1
    26fc:	b.eq	2714 <_PyDict_SetItemId@plt+0x94>  // b.none
    2700:	adrp	x2, 17000 <PyInit__lzma@@Base+0x1489c>
    2704:	ldr	x2, [x2, #4064]
    2708:	cbz	x2, 2714 <_PyDict_SetItemId@plt+0x94>
    270c:	mov	x16, x2
    2710:	br	x16
    2714:	ret
    2718:	stp	x29, x30, [sp, #-32]!
    271c:	mov	x29, sp
    2720:	str	x19, [sp, #16]
    2724:	adrp	x19, 18000 <PyInit__lzma@@Base+0x1589c>
    2728:	ldrb	w0, [x19, #2488]
    272c:	cbnz	w0, 2754 <_PyDict_SetItemId@plt+0xd4>
    2730:	adrp	x0, 17000 <PyInit__lzma@@Base+0x1489c>
    2734:	ldr	x0, [x0, #3992]
    2738:	cbz	x0, 2748 <_PyDict_SetItemId@plt+0xc8>
    273c:	adrp	x0, 18000 <PyInit__lzma@@Base+0x1589c>
    2740:	ldr	x0, [x0, #560]
    2744:	bl	22e0 <__cxa_finalize@plt>
    2748:	bl	26a8 <_PyDict_SetItemId@plt+0x28>
    274c:	mov	w0, #0x1                   	// #1
    2750:	strb	w0, [x19, #2488]
    2754:	ldr	x19, [sp, #16]
    2758:	ldp	x29, x30, [sp], #32
    275c:	ret
    2760:	b	26d8 <_PyDict_SetItemId@plt+0x58>

0000000000002764 <PyInit__lzma@@Base>:
    2764:	sub	sp, sp, #0x40
    2768:	stp	x29, x30, [sp, #48]
    276c:	add	x29, sp, #0x30
    2770:	mov	x8, xzr
    2774:	adrp	x9, 18000 <PyInit__lzma@@Base+0x1589c>
    2778:	add	x9, x9, #0x9c0
    277c:	adrp	x10, 18000 <PyInit__lzma@@Base+0x1589c>
    2780:	add	x10, x10, #0x9c8
    2784:	adrp	x11, 18000 <PyInit__lzma@@Base+0x1589c>
    2788:	add	x11, x11, #0x2a0
    278c:	adrp	x12, 18000 <PyInit__lzma@@Base+0x1589c>
    2790:	add	x12, x12, #0x440
    2794:	mov	x0, x8
    2798:	str	x9, [sp, #24]
    279c:	str	x10, [sp, #16]
    27a0:	str	x11, [sp, #8]
    27a4:	str	x12, [sp]
    27a8:	bl	2490 <PyTuple_New@plt>
    27ac:	ldr	x8, [sp, #24]
    27b0:	str	x0, [x8]
    27b4:	ldr	x9, [x8]
    27b8:	cbnz	x9, 27c8 <PyInit__lzma@@Base+0x64>
    27bc:	mov	x8, xzr
    27c0:	stur	x8, [x29, #-8]
    27c4:	b	2cb0 <PyInit__lzma@@Base+0x54c>
    27c8:	adrp	x0, 18000 <PyInit__lzma@@Base+0x1589c>
    27cc:	add	x0, x0, #0x238
    27d0:	mov	w1, #0x3f5                 	// #1013
    27d4:	bl	24d0 <PyModule_Create2@plt>
    27d8:	stur	x0, [x29, #-16]
    27dc:	ldur	x8, [x29, #-16]
    27e0:	cbnz	x8, 27f0 <PyInit__lzma@@Base+0x8c>
    27e4:	mov	x8, xzr
    27e8:	stur	x8, [x29, #-8]
    27ec:	b	2cb0 <PyInit__lzma@@Base+0x54c>
    27f0:	ldur	x0, [x29, #-16]
    27f4:	adrp	x1, 6000 <PyInit__lzma@@Base+0x389c>
    27f8:	add	x1, x1, #0xb4e
    27fc:	mov	x8, xzr
    2800:	mov	x2, x8
    2804:	bl	2250 <PyModule_AddIntConstant@plt>
    2808:	mov	w9, #0xffffffff            	// #-1
    280c:	cmp	w0, w9
    2810:	b.eq	2b7c <PyInit__lzma@@Base+0x418>  // b.none
    2814:	ldur	x0, [x29, #-16]
    2818:	adrp	x1, 7000 <PyInit__lzma@@Base+0x489c>
    281c:	add	x1, x1, #0xf5
    2820:	mov	x2, #0x1                   	// #1
    2824:	bl	2250 <PyModule_AddIntConstant@plt>
    2828:	mov	w8, #0xffffffff            	// #-1
    282c:	cmp	w0, w8
    2830:	b.eq	2b7c <PyInit__lzma@@Base+0x418>  // b.none
    2834:	ldur	x0, [x29, #-16]
    2838:	adrp	x1, 6000 <PyInit__lzma@@Base+0x389c>
    283c:	add	x1, x1, #0xb5a
    2840:	mov	x2, #0x2                   	// #2
    2844:	bl	2250 <PyModule_AddIntConstant@plt>
    2848:	mov	w8, #0xffffffff            	// #-1
    284c:	cmp	w0, w8
    2850:	b.eq	2b7c <PyInit__lzma@@Base+0x418>  // b.none
    2854:	ldur	x0, [x29, #-16]
    2858:	adrp	x1, 7000 <PyInit__lzma@@Base+0x489c>
    285c:	add	x1, x1, #0x2cf
    2860:	mov	x2, #0x3                   	// #3
    2864:	bl	2250 <PyModule_AddIntConstant@plt>
    2868:	mov	w8, #0xffffffff            	// #-1
    286c:	cmp	w0, w8
    2870:	b.eq	2b7c <PyInit__lzma@@Base+0x418>  // b.none
    2874:	ldur	x0, [x29, #-16]
    2878:	adrp	x1, 6000 <PyInit__lzma@@Base+0x389c>
    287c:	add	x1, x1, #0xb67
    2880:	mov	x8, xzr
    2884:	mov	x2, x8
    2888:	bl	2cc0 <PyInit__lzma@@Base+0x55c>
    288c:	mov	w9, #0xffffffff            	// #-1
    2890:	cmp	w0, w9
    2894:	b.eq	2b7c <PyInit__lzma@@Base+0x418>  // b.none
    2898:	ldur	x0, [x29, #-16]
    289c:	adrp	x1, 6000 <PyInit__lzma@@Base+0x389c>
    28a0:	add	x1, x1, #0xb72
    28a4:	mov	x2, #0x1                   	// #1
    28a8:	bl	2cc0 <PyInit__lzma@@Base+0x55c>
    28ac:	mov	w8, #0xffffffff            	// #-1
    28b0:	cmp	w0, w8
    28b4:	b.eq	2b7c <PyInit__lzma@@Base+0x418>  // b.none
    28b8:	ldur	x0, [x29, #-16]
    28bc:	adrp	x1, 6000 <PyInit__lzma@@Base+0x389c>
    28c0:	add	x1, x1, #0xb7e
    28c4:	mov	x2, #0x4                   	// #4
    28c8:	bl	2cc0 <PyInit__lzma@@Base+0x55c>
    28cc:	mov	w8, #0xffffffff            	// #-1
    28d0:	cmp	w0, w8
    28d4:	b.eq	2b7c <PyInit__lzma@@Base+0x418>  // b.none
    28d8:	ldur	x0, [x29, #-16]
    28dc:	adrp	x1, 6000 <PyInit__lzma@@Base+0x389c>
    28e0:	add	x1, x1, #0xb8a
    28e4:	mov	x2, #0xa                   	// #10
    28e8:	bl	2cc0 <PyInit__lzma@@Base+0x55c>
    28ec:	mov	w8, #0xffffffff            	// #-1
    28f0:	cmp	w0, w8
    28f4:	b.eq	2b7c <PyInit__lzma@@Base+0x418>  // b.none
    28f8:	ldur	x0, [x29, #-16]
    28fc:	adrp	x1, 6000 <PyInit__lzma@@Base+0x389c>
    2900:	add	x1, x1, #0xb97
    2904:	mov	x2, #0xf                   	// #15
    2908:	bl	2cc0 <PyInit__lzma@@Base+0x55c>
    290c:	mov	w8, #0xffffffff            	// #-1
    2910:	cmp	w0, w8
    2914:	b.eq	2b7c <PyInit__lzma@@Base+0x418>  // b.none
    2918:	ldur	x0, [x29, #-16]
    291c:	adrp	x1, 6000 <PyInit__lzma@@Base+0x389c>
    2920:	add	x1, x1, #0xba4
    2924:	mov	x2, #0x10                  	// #16
    2928:	bl	2cc0 <PyInit__lzma@@Base+0x55c>
    292c:	mov	w8, #0xffffffff            	// #-1
    2930:	cmp	w0, w8
    2934:	b.eq	2b7c <PyInit__lzma@@Base+0x418>  // b.none
    2938:	ldur	x0, [x29, #-16]
    293c:	adrp	x1, 6000 <PyInit__lzma@@Base+0x389c>
    2940:	add	x1, x1, #0xbb2
    2944:	mov	x2, #0x1                   	// #1
    2948:	movk	x2, #0x4000, lsl #48
    294c:	bl	2cc0 <PyInit__lzma@@Base+0x55c>
    2950:	mov	w8, #0xffffffff            	// #-1
    2954:	cmp	w0, w8
    2958:	b.eq	2b7c <PyInit__lzma@@Base+0x418>  // b.none
    295c:	ldur	x0, [x29, #-16]
    2960:	adrp	x1, 6000 <PyInit__lzma@@Base+0x389c>
    2964:	add	x1, x1, #0xbbf
    2968:	mov	x2, #0x21                  	// #33
    296c:	bl	2cc0 <PyInit__lzma@@Base+0x55c>
    2970:	mov	w8, #0xffffffff            	// #-1
    2974:	cmp	w0, w8
    2978:	b.eq	2b7c <PyInit__lzma@@Base+0x418>  // b.none
    297c:	ldur	x0, [x29, #-16]
    2980:	adrp	x1, 6000 <PyInit__lzma@@Base+0x389c>
    2984:	add	x1, x1, #0xbcc
    2988:	mov	x2, #0x3                   	// #3
    298c:	bl	2cc0 <PyInit__lzma@@Base+0x55c>
    2990:	mov	w8, #0xffffffff            	// #-1
    2994:	cmp	w0, w8
    2998:	b.eq	2b7c <PyInit__lzma@@Base+0x418>  // b.none
    299c:	ldur	x0, [x29, #-16]
    29a0:	adrp	x1, 6000 <PyInit__lzma@@Base+0x389c>
    29a4:	add	x1, x1, #0xbd9
    29a8:	mov	x2, #0x4                   	// #4
    29ac:	bl	2cc0 <PyInit__lzma@@Base+0x55c>
    29b0:	mov	w8, #0xffffffff            	// #-1
    29b4:	cmp	w0, w8
    29b8:	b.eq	2b7c <PyInit__lzma@@Base+0x418>  // b.none
    29bc:	ldur	x0, [x29, #-16]
    29c0:	adrp	x1, 6000 <PyInit__lzma@@Base+0x389c>
    29c4:	add	x1, x1, #0xbe4
    29c8:	mov	x2, #0x6                   	// #6
    29cc:	bl	2cc0 <PyInit__lzma@@Base+0x55c>
    29d0:	mov	w8, #0xffffffff            	// #-1
    29d4:	cmp	w0, w8
    29d8:	b.eq	2b7c <PyInit__lzma@@Base+0x418>  // b.none
    29dc:	ldur	x0, [x29, #-16]
    29e0:	adrp	x1, 6000 <PyInit__lzma@@Base+0x389c>
    29e4:	add	x1, x1, #0xbf0
    29e8:	mov	x2, #0x7                   	// #7
    29ec:	bl	2cc0 <PyInit__lzma@@Base+0x55c>
    29f0:	mov	w8, #0xffffffff            	// #-1
    29f4:	cmp	w0, w8
    29f8:	b.eq	2b7c <PyInit__lzma@@Base+0x418>  // b.none
    29fc:	ldur	x0, [x29, #-16]
    2a00:	adrp	x1, 6000 <PyInit__lzma@@Base+0x389c>
    2a04:	add	x1, x1, #0xbfb
    2a08:	mov	x2, #0x8                   	// #8
    2a0c:	bl	2cc0 <PyInit__lzma@@Base+0x55c>
    2a10:	mov	w8, #0xffffffff            	// #-1
    2a14:	cmp	w0, w8
    2a18:	b.eq	2b7c <PyInit__lzma@@Base+0x418>  // b.none
    2a1c:	ldur	x0, [x29, #-16]
    2a20:	adrp	x1, 6000 <PyInit__lzma@@Base+0x389c>
    2a24:	add	x1, x1, #0xc0b
    2a28:	mov	x2, #0x9                   	// #9
    2a2c:	bl	2cc0 <PyInit__lzma@@Base+0x55c>
    2a30:	mov	w8, #0xffffffff            	// #-1
    2a34:	cmp	w0, w8
    2a38:	b.eq	2b7c <PyInit__lzma@@Base+0x418>  // b.none
    2a3c:	ldur	x0, [x29, #-16]
    2a40:	adrp	x1, 6000 <PyInit__lzma@@Base+0x389c>
    2a44:	add	x1, x1, #0xc18
    2a48:	mov	x2, #0x5                   	// #5
    2a4c:	bl	2cc0 <PyInit__lzma@@Base+0x55c>
    2a50:	mov	w8, #0xffffffff            	// #-1
    2a54:	cmp	w0, w8
    2a58:	b.eq	2b7c <PyInit__lzma@@Base+0x418>  // b.none
    2a5c:	ldur	x0, [x29, #-16]
    2a60:	adrp	x1, 6000 <PyInit__lzma@@Base+0x389c>
    2a64:	add	x1, x1, #0xc27
    2a68:	mov	x2, #0x3                   	// #3
    2a6c:	bl	2cc0 <PyInit__lzma@@Base+0x55c>
    2a70:	mov	w8, #0xffffffff            	// #-1
    2a74:	cmp	w0, w8
    2a78:	b.eq	2b7c <PyInit__lzma@@Base+0x418>  // b.none
    2a7c:	ldur	x0, [x29, #-16]
    2a80:	adrp	x1, 6000 <PyInit__lzma@@Base+0x389c>
    2a84:	add	x1, x1, #0xc2e
    2a88:	mov	x2, #0x4                   	// #4
    2a8c:	bl	2cc0 <PyInit__lzma@@Base+0x55c>
    2a90:	mov	w8, #0xffffffff            	// #-1
    2a94:	cmp	w0, w8
    2a98:	b.eq	2b7c <PyInit__lzma@@Base+0x418>  // b.none
    2a9c:	ldur	x0, [x29, #-16]
    2aa0:	adrp	x1, 6000 <PyInit__lzma@@Base+0x389c>
    2aa4:	add	x1, x1, #0xc35
    2aa8:	mov	x2, #0x12                  	// #18
    2aac:	bl	2cc0 <PyInit__lzma@@Base+0x55c>
    2ab0:	mov	w8, #0xffffffff            	// #-1
    2ab4:	cmp	w0, w8
    2ab8:	b.eq	2b7c <PyInit__lzma@@Base+0x418>  // b.none
    2abc:	ldur	x0, [x29, #-16]
    2ac0:	adrp	x1, 6000 <PyInit__lzma@@Base+0x389c>
    2ac4:	add	x1, x1, #0xc3c
    2ac8:	mov	x2, #0x13                  	// #19
    2acc:	bl	2cc0 <PyInit__lzma@@Base+0x55c>
    2ad0:	mov	w8, #0xffffffff            	// #-1
    2ad4:	cmp	w0, w8
    2ad8:	b.eq	2b7c <PyInit__lzma@@Base+0x418>  // b.none
    2adc:	ldur	x0, [x29, #-16]
    2ae0:	adrp	x1, 6000 <PyInit__lzma@@Base+0x389c>
    2ae4:	add	x1, x1, #0xc43
    2ae8:	mov	x2, #0x14                  	// #20
    2aec:	bl	2cc0 <PyInit__lzma@@Base+0x55c>
    2af0:	mov	w8, #0xffffffff            	// #-1
    2af4:	cmp	w0, w8
    2af8:	b.eq	2b7c <PyInit__lzma@@Base+0x418>  // b.none
    2afc:	ldur	x0, [x29, #-16]
    2b00:	adrp	x1, 6000 <PyInit__lzma@@Base+0x389c>
    2b04:	add	x1, x1, #0xc4a
    2b08:	mov	x2, #0x1                   	// #1
    2b0c:	bl	2cc0 <PyInit__lzma@@Base+0x55c>
    2b10:	mov	w8, #0xffffffff            	// #-1
    2b14:	cmp	w0, w8
    2b18:	b.eq	2b7c <PyInit__lzma@@Base+0x418>  // b.none
    2b1c:	ldur	x0, [x29, #-16]
    2b20:	adrp	x1, 6000 <PyInit__lzma@@Base+0x389c>
    2b24:	add	x1, x1, #0xc54
    2b28:	mov	x2, #0x2                   	// #2
    2b2c:	bl	2cc0 <PyInit__lzma@@Base+0x55c>
    2b30:	mov	w8, #0xffffffff            	// #-1
    2b34:	cmp	w0, w8
    2b38:	b.eq	2b7c <PyInit__lzma@@Base+0x418>  // b.none
    2b3c:	ldur	x0, [x29, #-16]
    2b40:	adrp	x1, 6000 <PyInit__lzma@@Base+0x389c>
    2b44:	add	x1, x1, #0xc60
    2b48:	mov	x2, #0x6                   	// #6
    2b4c:	bl	2cc0 <PyInit__lzma@@Base+0x55c>
    2b50:	mov	w8, #0xffffffff            	// #-1
    2b54:	cmp	w0, w8
    2b58:	b.eq	2b7c <PyInit__lzma@@Base+0x418>  // b.none
    2b5c:	ldur	x0, [x29, #-16]
    2b60:	adrp	x1, 6000 <PyInit__lzma@@Base+0x389c>
    2b64:	add	x1, x1, #0xc6f
    2b68:	mov	x2, #0x80000000            	// #2147483648
    2b6c:	bl	2cc0 <PyInit__lzma@@Base+0x55c>
    2b70:	mov	w8, #0xffffffff            	// #-1
    2b74:	cmp	w0, w8
    2b78:	b.ne	2b88 <PyInit__lzma@@Base+0x424>  // b.any
    2b7c:	mov	x8, xzr
    2b80:	stur	x8, [x29, #-8]
    2b84:	b	2cb0 <PyInit__lzma@@Base+0x54c>
    2b88:	adrp	x0, 6000 <PyInit__lzma@@Base+0x389c>
    2b8c:	add	x0, x0, #0xc7e
    2b90:	adrp	x1, 6000 <PyInit__lzma@@Base+0x389c>
    2b94:	add	x1, x1, #0xc8e
    2b98:	mov	x8, xzr
    2b9c:	mov	x2, x8
    2ba0:	mov	x3, x8
    2ba4:	bl	2340 <PyErr_NewExceptionWithDoc@plt>
    2ba8:	ldr	x8, [sp, #16]
    2bac:	str	x0, [x8]
    2bb0:	ldr	x9, [x8]
    2bb4:	cbnz	x9, 2bc4 <PyInit__lzma@@Base+0x460>
    2bb8:	mov	x8, xzr
    2bbc:	stur	x8, [x29, #-8]
    2bc0:	b	2cb0 <PyInit__lzma@@Base+0x54c>
    2bc4:	ldr	x8, [sp, #16]
    2bc8:	ldr	x0, [x8]
    2bcc:	bl	2d40 <PyInit__lzma@@Base+0x5dc>
    2bd0:	ldur	x0, [x29, #-16]
    2bd4:	ldr	x8, [sp, #16]
    2bd8:	ldr	x2, [x8]
    2bdc:	adrp	x1, 6000 <PyInit__lzma@@Base+0x389c>
    2be0:	add	x1, x1, #0xc84
    2be4:	bl	25d0 <PyModule_AddObject@plt>
    2be8:	mov	w9, #0xffffffff            	// #-1
    2bec:	cmp	w0, w9
    2bf0:	b.ne	2c00 <PyInit__lzma@@Base+0x49c>  // b.any
    2bf4:	mov	x8, xzr
    2bf8:	stur	x8, [x29, #-8]
    2bfc:	b	2cb0 <PyInit__lzma@@Base+0x54c>
    2c00:	ldr	x0, [sp, #8]
    2c04:	bl	2420 <PyType_Ready@plt>
    2c08:	mov	w8, #0xffffffff            	// #-1
    2c0c:	cmp	w0, w8
    2c10:	b.ne	2c20 <PyInit__lzma@@Base+0x4bc>  // b.any
    2c14:	mov	x8, xzr
    2c18:	stur	x8, [x29, #-8]
    2c1c:	b	2cb0 <PyInit__lzma@@Base+0x54c>
    2c20:	ldr	x0, [sp, #8]
    2c24:	bl	2d40 <PyInit__lzma@@Base+0x5dc>
    2c28:	ldur	x0, [x29, #-16]
    2c2c:	adrp	x1, 7000 <PyInit__lzma@@Base+0x489c>
    2c30:	add	x1, x1, #0x57
    2c34:	ldr	x2, [sp, #8]
    2c38:	bl	25d0 <PyModule_AddObject@plt>
    2c3c:	mov	w8, #0xffffffff            	// #-1
    2c40:	cmp	w0, w8
    2c44:	b.ne	2c54 <PyInit__lzma@@Base+0x4f0>  // b.any
    2c48:	mov	x8, xzr
    2c4c:	stur	x8, [x29, #-8]
    2c50:	b	2cb0 <PyInit__lzma@@Base+0x54c>
    2c54:	ldr	x0, [sp]
    2c58:	bl	2420 <PyType_Ready@plt>
    2c5c:	mov	w8, #0xffffffff            	// #-1
    2c60:	cmp	w0, w8
    2c64:	b.ne	2c74 <PyInit__lzma@@Base+0x510>  // b.any
    2c68:	mov	x8, xzr
    2c6c:	stur	x8, [x29, #-8]
    2c70:	b	2cb0 <PyInit__lzma@@Base+0x54c>
    2c74:	ldr	x0, [sp]
    2c78:	bl	2d40 <PyInit__lzma@@Base+0x5dc>
    2c7c:	ldur	x0, [x29, #-16]
    2c80:	adrp	x1, 7000 <PyInit__lzma@@Base+0x489c>
    2c84:	add	x1, x1, #0x204
    2c88:	ldr	x2, [sp]
    2c8c:	bl	25d0 <PyModule_AddObject@plt>
    2c90:	mov	w8, #0xffffffff            	// #-1
    2c94:	cmp	w0, w8
    2c98:	b.ne	2ca8 <PyInit__lzma@@Base+0x544>  // b.any
    2c9c:	mov	x8, xzr
    2ca0:	stur	x8, [x29, #-8]
    2ca4:	b	2cb0 <PyInit__lzma@@Base+0x54c>
    2ca8:	ldur	x8, [x29, #-16]
    2cac:	stur	x8, [x29, #-8]
    2cb0:	ldur	x0, [x29, #-8]
    2cb4:	ldp	x29, x30, [sp, #48]
    2cb8:	add	sp, sp, #0x40
    2cbc:	ret
    2cc0:	sub	sp, sp, #0x40
    2cc4:	stp	x29, x30, [sp, #48]
    2cc8:	add	x29, sp, #0x30
    2ccc:	stur	x0, [x29, #-16]
    2cd0:	str	x1, [sp, #24]
    2cd4:	str	x2, [sp, #16]
    2cd8:	ldr	x0, [sp, #16]
    2cdc:	bl	2620 <PyLong_FromLongLong@plt>
    2ce0:	str	x0, [sp, #8]
    2ce4:	ldr	x8, [sp, #8]
    2ce8:	cbnz	x8, 2cf8 <PyInit__lzma@@Base+0x594>
    2cec:	mov	w8, #0xffffffff            	// #-1
    2cf0:	stur	w8, [x29, #-4]
    2cf4:	b	2d30 <PyInit__lzma@@Base+0x5cc>
    2cf8:	ldur	x0, [x29, #-16]
    2cfc:	ldr	x1, [sp, #24]
    2d00:	ldr	x2, [sp, #8]
    2d04:	bl	25d0 <PyModule_AddObject@plt>
    2d08:	cbnz	w0, 2d14 <PyInit__lzma@@Base+0x5b0>
    2d0c:	stur	wzr, [x29, #-4]
    2d10:	b	2d30 <PyInit__lzma@@Base+0x5cc>
    2d14:	ldr	x2, [sp, #8]
    2d18:	adrp	x0, 6000 <PyInit__lzma@@Base+0x389c>
    2d1c:	add	x0, x0, #0xd78
    2d20:	mov	w1, #0x597                 	// #1431
    2d24:	bl	3290 <PyInit__lzma@@Base+0xb2c>
    2d28:	mov	w8, #0xffffffff            	// #-1
    2d2c:	stur	w8, [x29, #-4]
    2d30:	ldur	w0, [x29, #-4]
    2d34:	ldp	x29, x30, [sp, #48]
    2d38:	add	sp, sp, #0x40
    2d3c:	ret
    2d40:	sub	sp, sp, #0x10
    2d44:	str	x0, [sp, #8]
    2d48:	ldr	x8, [sp, #8]
    2d4c:	ldr	x9, [x8]
    2d50:	add	x9, x9, #0x1
    2d54:	str	x9, [x8]
    2d58:	add	sp, sp, #0x10
    2d5c:	ret
    2d60:	sub	sp, sp, #0x30
    2d64:	stp	x29, x30, [sp, #32]
    2d68:	add	x29, sp, #0x20
    2d6c:	mov	x8, xzr
    2d70:	adrp	x9, 17000 <PyInit__lzma@@Base+0x1489c>
    2d74:	ldr	x9, [x9, #3984]
    2d78:	stur	x0, [x29, #-8]
    2d7c:	str	x1, [sp, #16]
    2d80:	str	x8, [sp, #8]
    2d84:	ldr	x8, [sp, #16]
    2d88:	ldr	x8, [x8, #8]
    2d8c:	cmp	x8, x9
    2d90:	b.eq	2dac <PyInit__lzma@@Base+0x648>  // b.none
    2d94:	ldr	x8, [sp, #16]
    2d98:	ldr	x0, [x8, #8]
    2d9c:	adrp	x1, 17000 <PyInit__lzma@@Base+0x1489c>
    2da0:	ldr	x1, [x1, #3984]
    2da4:	bl	25e0 <PyType_IsSubtype@plt>
    2da8:	cbz	w0, 2dc8 <PyInit__lzma@@Base+0x664>
    2dac:	adrp	x8, 17000 <PyInit__lzma@@Base+0x1489c>
    2db0:	ldr	x8, [x8, #4016]
    2db4:	ldr	x0, [x8]
    2db8:	adrp	x1, 6000 <PyInit__lzma@@Base+0x389c>
    2dbc:	add	x1, x1, #0xcf3
    2dc0:	bl	2380 <PyErr_SetString@plt>
    2dc4:	b	2e00 <PyInit__lzma@@Base+0x69c>
    2dc8:	ldr	x0, [sp, #16]
    2dcc:	bl	2640 <_PyLong_AsInt@plt>
    2dd0:	str	w0, [sp, #4]
    2dd4:	ldr	w8, [sp, #4]
    2dd8:	mov	w9, #0xffffffff            	// #-1
    2ddc:	cmp	w8, w9
    2de0:	b.ne	2df0 <PyInit__lzma@@Base+0x68c>  // b.any
    2de4:	bl	24c0 <PyErr_Occurred@plt>
    2de8:	cbz	x0, 2df0 <PyInit__lzma@@Base+0x68c>
    2dec:	b	2e00 <PyInit__lzma@@Base+0x69c>
    2df0:	ldur	x0, [x29, #-8]
    2df4:	ldr	w1, [sp, #4]
    2df8:	bl	2fc0 <PyInit__lzma@@Base+0x85c>
    2dfc:	str	x0, [sp, #8]
    2e00:	ldr	x0, [sp, #8]
    2e04:	ldp	x29, x30, [sp, #32]
    2e08:	add	sp, sp, #0x30
    2e0c:	ret
    2e10:	sub	sp, sp, #0x40
    2e14:	stp	x29, x30, [sp, #48]
    2e18:	add	x29, sp, #0x30
    2e1c:	mov	x8, xzr
    2e20:	adrp	x9, 7000 <PyInit__lzma@@Base+0x489c>
    2e24:	add	x9, x9, #0x308
    2e28:	mov	x10, sp
    2e2c:	stur	x0, [x29, #-8]
    2e30:	stur	x1, [x29, #-16]
    2e34:	str	x8, [sp, #24]
    2e38:	ldr	q0, [x9]
    2e3c:	str	q0, [sp]
    2e40:	ldur	x0, [x29, #-16]
    2e44:	mov	x1, x10
    2e48:	bl	2ff4 <PyInit__lzma@@Base+0x890>
    2e4c:	cbnz	w0, 2e54 <PyInit__lzma@@Base+0x6f0>
    2e50:	b	2e68 <PyInit__lzma@@Base+0x704>
    2e54:	ldur	x0, [x29, #-8]
    2e58:	ldr	x1, [sp]
    2e5c:	ldr	x2, [sp, #8]
    2e60:	bl	31d4 <PyInit__lzma@@Base+0xa70>
    2e64:	str	x0, [sp, #24]
    2e68:	ldr	x8, [sp]
    2e6c:	mov	x9, #0xffffffffffffffff    	// #-1
    2e70:	cmp	x8, x9
    2e74:	b.eq	2e84 <PyInit__lzma@@Base+0x720>  // b.none
    2e78:	mov	x8, sp
    2e7c:	ldr	x0, [x8, #8]
    2e80:	bl	22a0 <PyMem_Free@plt>
    2e84:	ldr	x0, [sp, #24]
    2e88:	ldp	x29, x30, [sp, #48]
    2e8c:	add	sp, sp, #0x40
    2e90:	ret
    2e94:	sub	sp, sp, #0x90
    2e98:	stp	x29, x30, [sp, #128]
    2e9c:	add	x29, sp, #0x80
    2ea0:	mov	x8, xzr
    2ea4:	mov	x9, #0x50                  	// #80
    2ea8:	mov	x10, #0x2                   	// #2
    2eac:	mov	w11, wzr
    2eb0:	add	x12, sp, #0x8
    2eb4:	stur	x0, [x29, #-8]
    2eb8:	stur	x1, [x29, #-16]
    2ebc:	stur	x2, [x29, #-24]
    2ec0:	stur	x8, [x29, #-32]
    2ec4:	mov	x0, x12
    2ec8:	mov	w1, w11
    2ecc:	mov	x2, x9
    2ed0:	str	x10, [sp]
    2ed4:	bl	23e0 <memset@plt>
    2ed8:	ldur	x8, [x29, #-24]
    2edc:	ldr	x9, [sp]
    2ee0:	cmp	x9, x8
    2ee4:	b.gt	2ef4 <PyInit__lzma@@Base+0x790>
    2ee8:	ldur	x8, [x29, #-24]
    2eec:	cmp	x8, #0x2
    2ef0:	b.le	2f18 <PyInit__lzma@@Base+0x7b4>
    2ef4:	ldur	x1, [x29, #-24]
    2ef8:	adrp	x0, 6000 <PyInit__lzma@@Base+0x389c>
    2efc:	add	x0, x0, #0xcd9
    2f00:	mov	x8, #0x2                   	// #2
    2f04:	mov	x2, x8
    2f08:	mov	x3, x8
    2f0c:	bl	24a0 <_PyArg_CheckPositional@plt>
    2f10:	cbnz	w0, 2f18 <PyInit__lzma@@Base+0x7b4>
    2f14:	b	2f9c <PyInit__lzma@@Base+0x838>
    2f18:	ldur	x8, [x29, #-16]
    2f1c:	ldr	x0, [x8]
    2f20:	sub	x1, x29, #0x28
    2f24:	bl	39fc <PyInit__lzma@@Base+0x1298>
    2f28:	cbnz	w0, 2f30 <PyInit__lzma@@Base+0x7cc>
    2f2c:	b	2f9c <PyInit__lzma@@Base+0x838>
    2f30:	ldur	x8, [x29, #-16]
    2f34:	ldr	x0, [x8, #8]
    2f38:	add	x1, sp, #0x8
    2f3c:	mov	w9, wzr
    2f40:	mov	w2, w9
    2f44:	bl	25a0 <PyObject_GetBuffer@plt>
    2f48:	cbz	w0, 2f50 <PyInit__lzma@@Base+0x7ec>
    2f4c:	b	2f9c <PyInit__lzma@@Base+0x838>
    2f50:	add	x0, sp, #0x8
    2f54:	mov	w1, #0x43                  	// #67
    2f58:	bl	2300 <PyBuffer_IsContiguous@plt>
    2f5c:	cbnz	w0, 2f88 <PyInit__lzma@@Base+0x824>
    2f60:	ldur	x8, [x29, #-16]
    2f64:	ldr	x3, [x8, #8]
    2f68:	adrp	x0, 6000 <PyInit__lzma@@Base+0x389c>
    2f6c:	add	x0, x0, #0xcd9
    2f70:	adrp	x1, 7000 <PyInit__lzma@@Base+0x489c>
    2f74:	add	x1, x1, #0x12
    2f78:	adrp	x2, 7000 <PyInit__lzma@@Base+0x489c>
    2f7c:	add	x2, x2, #0x1d
    2f80:	bl	2440 <_PyArg_BadArgument@plt>
    2f84:	b	2f9c <PyInit__lzma@@Base+0x838>
    2f88:	ldur	x0, [x29, #-8]
    2f8c:	ldur	x1, [x29, #-40]
    2f90:	add	x2, sp, #0x8
    2f94:	bl	3a80 <PyInit__lzma@@Base+0x131c>
    2f98:	stur	x0, [x29, #-32]
    2f9c:	add	x8, sp, #0x8
    2fa0:	ldr	x8, [x8, #8]
    2fa4:	cbz	x8, 2fb0 <PyInit__lzma@@Base+0x84c>
    2fa8:	add	x0, sp, #0x8
    2fac:	bl	22c0 <PyBuffer_Release@plt>
    2fb0:	ldur	x0, [x29, #-32]
    2fb4:	ldp	x29, x30, [sp, #128]
    2fb8:	add	sp, sp, #0x90
    2fbc:	ret
    2fc0:	sub	sp, sp, #0x20
    2fc4:	stp	x29, x30, [sp, #16]
    2fc8:	add	x29, sp, #0x10
    2fcc:	str	x0, [sp, #8]
    2fd0:	str	w1, [sp, #4]
    2fd4:	ldr	w0, [sp, #4]
    2fd8:	bl	2600 <lzma_check_is_supported@plt>
    2fdc:	mov	w2, w0
    2fe0:	and	x0, x2, #0xff
    2fe4:	bl	2470 <PyBool_FromLong@plt>
    2fe8:	ldp	x29, x30, [sp, #16]
    2fec:	add	sp, sp, #0x20
    2ff0:	ret
    2ff4:	sub	sp, sp, #0x40
    2ff8:	stp	x29, x30, [sp, #48]
    2ffc:	add	x29, sp, #0x30
    3000:	stur	x0, [x29, #-16]
    3004:	str	x1, [sp, #24]
    3008:	ldr	x8, [sp, #24]
    300c:	str	x8, [sp, #16]
    3010:	ldur	x0, [x29, #-16]
    3014:	bl	2260 <PyMapping_Check@plt>
    3018:	cbnz	w0, 303c <PyInit__lzma@@Base+0x8d8>
    301c:	adrp	x8, 17000 <PyInit__lzma@@Base+0x1489c>
    3020:	ldr	x8, [x8, #4016]
    3024:	ldr	x0, [x8]
    3028:	adrp	x1, 6000 <PyInit__lzma@@Base+0x389c>
    302c:	add	x1, x1, #0xd18
    3030:	bl	2380 <PyErr_SetString@plt>
    3034:	stur	wzr, [x29, #-4]
    3038:	b	31c4 <PyInit__lzma@@Base+0xa60>
    303c:	ldur	x0, [x29, #-16]
    3040:	adrp	x1, 6000 <PyInit__lzma@@Base+0x389c>
    3044:	add	x1, x1, #0xd4c
    3048:	bl	2390 <PyMapping_GetItemString@plt>
    304c:	str	x0, [sp, #8]
    3050:	ldr	x8, [sp, #8]
    3054:	cbnz	x8, 308c <PyInit__lzma@@Base+0x928>
    3058:	adrp	x8, 17000 <PyInit__lzma@@Base+0x1489c>
    305c:	ldr	x8, [x8, #4024]
    3060:	ldr	x0, [x8]
    3064:	bl	23d0 <PyErr_ExceptionMatches@plt>
    3068:	cbz	w0, 3084 <PyInit__lzma@@Base+0x920>
    306c:	adrp	x8, 17000 <PyInit__lzma@@Base+0x1489c>
    3070:	ldr	x8, [x8, #4008]
    3074:	ldr	x0, [x8]
    3078:	adrp	x1, 6000 <PyInit__lzma@@Base+0x389c>
    307c:	add	x1, x1, #0xd4f
    3080:	bl	2380 <PyErr_SetString@plt>
    3084:	stur	wzr, [x29, #-4]
    3088:	b	31c4 <PyInit__lzma@@Base+0xa60>
    308c:	ldr	x0, [sp, #8]
    3090:	bl	22d0 <PyLong_AsUnsignedLongLong@plt>
    3094:	ldr	x8, [sp, #16]
    3098:	str	x0, [x8]
    309c:	ldr	x2, [sp, #8]
    30a0:	adrp	x0, 6000 <PyInit__lzma@@Base+0x389c>
    30a4:	add	x0, x0, #0xd78
    30a8:	mov	w1, #0x137                 	// #311
    30ac:	bl	3290 <PyInit__lzma@@Base+0xb2c>
    30b0:	bl	24c0 <PyErr_Occurred@plt>
    30b4:	cbz	x0, 30c0 <PyInit__lzma@@Base+0x95c>
    30b8:	stur	wzr, [x29, #-4]
    30bc:	b	31c4 <PyInit__lzma@@Base+0xa60>
    30c0:	ldr	x8, [sp, #16]
    30c4:	ldr	x8, [x8]
    30c8:	cmp	x8, #0x3
    30cc:	str	x8, [sp]
    30d0:	b.eq	3148 <PyInit__lzma@@Base+0x9e4>  // b.none
    30d4:	b	30d8 <PyInit__lzma@@Base+0x974>
    30d8:	ldr	x8, [sp]
    30dc:	subs	x9, x8, #0x4
    30e0:	cmp	x9, #0x5
    30e4:	b.ls	3174 <PyInit__lzma@@Base+0xa10>  // b.plast
    30e8:	b	30ec <PyInit__lzma@@Base+0x988>
    30ec:	ldr	x8, [sp]
    30f0:	cmp	x8, #0x21
    30f4:	b.eq	311c <PyInit__lzma@@Base+0x9b8>  // b.none
    30f8:	b	30fc <PyInit__lzma@@Base+0x998>
    30fc:	mov	x8, #0x1                   	// #1
    3100:	movk	x8, #0x4000, lsl #48
    3104:	ldr	x9, [sp]
    3108:	cmp	x9, x8
    310c:	cset	w10, eq  // eq = none
    3110:	eor	w10, w10, #0x1
    3114:	tbnz	w10, #0, 31a0 <PyInit__lzma@@Base+0xa3c>
    3118:	b	311c <PyInit__lzma@@Base+0x9b8>
    311c:	ldur	x0, [x29, #-16]
    3120:	bl	32d4 <PyInit__lzma@@Base+0xb70>
    3124:	ldr	x8, [sp, #16]
    3128:	str	x0, [x8, #8]
    312c:	ldr	x8, [sp, #16]
    3130:	ldr	x8, [x8, #8]
    3134:	cmp	x8, #0x0
    3138:	cset	w9, ne  // ne = any
    313c:	and	w9, w9, #0x1
    3140:	stur	w9, [x29, #-4]
    3144:	b	31c4 <PyInit__lzma@@Base+0xa60>
    3148:	ldur	x0, [x29, #-16]
    314c:	bl	3524 <PyInit__lzma@@Base+0xdc0>
    3150:	ldr	x8, [sp, #16]
    3154:	str	x0, [x8, #8]
    3158:	ldr	x8, [sp, #16]
    315c:	ldr	x8, [x8, #8]
    3160:	cmp	x8, #0x0
    3164:	cset	w9, ne  // ne = any
    3168:	and	w9, w9, #0x1
    316c:	stur	w9, [x29, #-4]
    3170:	b	31c4 <PyInit__lzma@@Base+0xa60>
    3174:	ldur	x0, [x29, #-16]
    3178:	bl	35f8 <PyInit__lzma@@Base+0xe94>
    317c:	ldr	x8, [sp, #16]
    3180:	str	x0, [x8, #8]
    3184:	ldr	x8, [sp, #16]
    3188:	ldr	x8, [x8, #8]
    318c:	cmp	x8, #0x0
    3190:	cset	w9, ne  // ne = any
    3194:	and	w9, w9, #0x1
    3198:	stur	w9, [x29, #-4]
    319c:	b	31c4 <PyInit__lzma@@Base+0xa60>
    31a0:	adrp	x8, 17000 <PyInit__lzma@@Base+0x1489c>
    31a4:	ldr	x8, [x8, #4008]
    31a8:	ldr	x0, [x8]
    31ac:	ldr	x8, [sp, #16]
    31b0:	ldr	x2, [x8]
    31b4:	adrp	x1, 6000 <PyInit__lzma@@Base+0x389c>
    31b8:	add	x1, x1, #0xda4
    31bc:	bl	25f0 <PyErr_Format@plt>
    31c0:	stur	wzr, [x29, #-4]
    31c4:	ldur	w0, [x29, #-4]
    31c8:	ldp	x29, x30, [sp, #48]
    31cc:	add	sp, sp, #0x40
    31d0:	ret
    31d4:	sub	sp, sp, #0x40
    31d8:	stp	x29, x30, [sp, #48]
    31dc:	add	x29, sp, #0x30
    31e0:	mov	x8, xzr
    31e4:	add	x9, sp, #0x18
    31e8:	add	x10, sp, #0x8
    31ec:	str	x1, [sp, #24]
    31f0:	str	x2, [sp, #32]
    31f4:	str	x0, [sp, #16]
    31f8:	str	x8, [sp]
    31fc:	mov	x0, x10
    3200:	mov	x1, x9
    3204:	bl	23f0 <lzma_properties_size@plt>
    3208:	str	w0, [sp, #12]
    320c:	ldr	w0, [sp, #12]
    3210:	bl	384c <PyInit__lzma@@Base+0x10e8>
    3214:	cbz	w0, 321c <PyInit__lzma@@Base+0xab8>
    3218:	b	3270 <PyInit__lzma@@Base+0xb0c>
    321c:	ldr	w8, [sp, #8]
    3220:	mov	w1, w8
    3224:	mov	x9, xzr
    3228:	mov	x0, x9
    322c:	bl	2310 <PyBytes_FromStringAndSize@plt>
    3230:	str	x0, [sp]
    3234:	ldr	x9, [sp]
    3238:	cbnz	x9, 3240 <PyInit__lzma@@Base+0xadc>
    323c:	b	3270 <PyInit__lzma@@Base+0xb0c>
    3240:	ldr	x8, [sp]
    3244:	add	x1, x8, #0x20
    3248:	add	x0, sp, #0x18
    324c:	bl	25b0 <lzma_properties_encode@plt>
    3250:	str	w0, [sp, #12]
    3254:	ldr	w0, [sp, #12]
    3258:	bl	384c <PyInit__lzma@@Base+0x10e8>
    325c:	cbz	w0, 3264 <PyInit__lzma@@Base+0xb00>
    3260:	b	3270 <PyInit__lzma@@Base+0xb0c>
    3264:	ldr	x8, [sp]
    3268:	stur	x8, [x29, #-8]
    326c:	b	3280 <PyInit__lzma@@Base+0xb1c>
    3270:	ldr	x0, [sp]
    3274:	bl	39c4 <PyInit__lzma@@Base+0x1260>
    3278:	mov	x8, xzr
    327c:	stur	x8, [x29, #-8]
    3280:	ldur	x0, [x29, #-8]
    3284:	ldp	x29, x30, [sp, #48]
    3288:	add	sp, sp, #0x40
    328c:	ret
    3290:	sub	sp, sp, #0x30
    3294:	stp	x29, x30, [sp, #32]
    3298:	add	x29, sp, #0x20
    329c:	stur	x0, [x29, #-8]
    32a0:	stur	w1, [x29, #-12]
    32a4:	str	x2, [sp, #8]
    32a8:	ldr	x8, [sp, #8]
    32ac:	ldr	x9, [x8]
    32b0:	subs	x9, x9, #0x1
    32b4:	str	x9, [x8]
    32b8:	cbz	x9, 32c0 <PyInit__lzma@@Base+0xb5c>
    32bc:	b	32c8 <PyInit__lzma@@Base+0xb64>
    32c0:	ldr	x0, [sp, #8]
    32c4:	bl	2320 <_Py_Dealloc@plt>
    32c8:	ldp	x29, x30, [sp, #32]
    32cc:	add	sp, sp, #0x30
    32d0:	ret
    32d4:	sub	sp, sp, #0xc0
    32d8:	stp	x29, x30, [sp, #176]
    32dc:	add	x29, sp, #0xb0
    32e0:	mov	w8, #0x6                   	// #6
    32e4:	adrp	x1, 6000 <PyInit__lzma@@Base+0x389c>
    32e8:	add	x1, x1, #0xdbc
    32ec:	adrp	x9, 3000 <PyInit__lzma@@Base+0x89c>
    32f0:	add	x9, x9, #0x6b4
    32f4:	stur	x0, [x29, #-16]
    32f8:	stur	w8, [x29, #-36]
    32fc:	ldur	x0, [x29, #-16]
    3300:	stur	x9, [x29, #-64]
    3304:	bl	2390 <PyMapping_GetItemString@plt>
    3308:	stur	x0, [x29, #-32]
    330c:	ldur	x9, [x29, #-32]
    3310:	cbnz	x9, 3340 <PyInit__lzma@@Base+0xbdc>
    3314:	adrp	x8, 17000 <PyInit__lzma@@Base+0x1489c>
    3318:	ldr	x8, [x8, #4024]
    331c:	ldr	x0, [x8]
    3320:	bl	23d0 <PyErr_ExceptionMatches@plt>
    3324:	cbz	w0, 3330 <PyInit__lzma@@Base+0xbcc>
    3328:	bl	2460 <PyErr_Clear@plt>
    332c:	b	333c <PyInit__lzma@@Base+0xbd8>
    3330:	mov	x8, xzr
    3334:	stur	x8, [x29, #-8]
    3338:	b	3514 <PyInit__lzma@@Base+0xdb0>
    333c:	b	3378 <PyInit__lzma@@Base+0xc14>
    3340:	ldur	x0, [x29, #-32]
    3344:	sub	x1, x29, #0x24
    3348:	bl	36b4 <PyInit__lzma@@Base+0xf50>
    334c:	stur	w0, [x29, #-52]
    3350:	ldur	x2, [x29, #-32]
    3354:	adrp	x0, 6000 <PyInit__lzma@@Base+0x389c>
    3358:	add	x0, x0, #0xd78
    335c:	mov	w1, #0xd2                  	// #210
    3360:	bl	3290 <PyInit__lzma@@Base+0xb2c>
    3364:	ldur	w8, [x29, #-52]
    3368:	cbnz	w8, 3378 <PyInit__lzma@@Base+0xc14>
    336c:	mov	x8, xzr
    3370:	stur	x8, [x29, #-8]
    3374:	b	3514 <PyInit__lzma@@Base+0xdb0>
    3378:	mov	x0, #0x70                  	// #112
    337c:	bl	2660 <PyMem_Malloc@plt>
    3380:	stur	x0, [x29, #-48]
    3384:	ldur	x8, [x29, #-48]
    3388:	cbnz	x8, 3398 <PyInit__lzma@@Base+0xc34>
    338c:	bl	2330 <PyErr_NoMemory@plt>
    3390:	stur	x0, [x29, #-8]
    3394:	b	3514 <PyInit__lzma@@Base+0xdb0>
    3398:	ldur	x0, [x29, #-48]
    339c:	mov	w8, wzr
    33a0:	mov	w1, w8
    33a4:	mov	x2, #0x70                  	// #112
    33a8:	bl	23e0 <memset@plt>
    33ac:	ldur	x0, [x29, #-48]
    33b0:	ldur	w1, [x29, #-36]
    33b4:	bl	2650 <lzma_lzma_preset@plt>
    33b8:	and	w8, w0, #0xff
    33bc:	cbz	w8, 33f0 <PyInit__lzma@@Base+0xc8c>
    33c0:	ldur	x0, [x29, #-48]
    33c4:	bl	22a0 <PyMem_Free@plt>
    33c8:	adrp	x8, 18000 <PyInit__lzma@@Base+0x1589c>
    33cc:	add	x8, x8, #0x9c8
    33d0:	ldr	x0, [x8]
    33d4:	ldur	w2, [x29, #-36]
    33d8:	adrp	x1, 6000 <PyInit__lzma@@Base+0x389c>
    33dc:	add	x1, x1, #0xded
    33e0:	bl	25f0 <PyErr_Format@plt>
    33e4:	mov	x8, xzr
    33e8:	stur	x8, [x29, #-8]
    33ec:	b	3514 <PyInit__lzma@@Base+0xdb0>
    33f0:	adrp	x8, 18000 <PyInit__lzma@@Base+0x1589c>
    33f4:	add	x8, x8, #0x9c0
    33f8:	ldr	x0, [x8]
    33fc:	ldur	x1, [x29, #-16]
    3400:	ldur	x7, [x29, #-48]
    3404:	ldur	x8, [x29, #-48]
    3408:	add	x8, x8, #0x14
    340c:	ldur	x9, [x29, #-48]
    3410:	add	x9, x9, #0x18
    3414:	ldur	x10, [x29, #-48]
    3418:	add	x10, x10, #0x1c
    341c:	ldur	x11, [x29, #-48]
    3420:	add	x11, x11, #0x20
    3424:	ldur	x12, [x29, #-48]
    3428:	add	x12, x12, #0x24
    342c:	ldur	x13, [x29, #-48]
    3430:	add	x13, x13, #0x28
    3434:	ldur	x14, [x29, #-48]
    3438:	add	x14, x14, #0x2c
    343c:	adrp	x2, 6000 <PyInit__lzma@@Base+0x389c>
    3440:	add	x2, x2, #0xe0c
    3444:	adrp	x3, 18000 <PyInit__lzma@@Base+0x1589c>
    3448:	add	x3, x3, #0x660
    344c:	sub	x4, x29, #0x18
    3450:	sub	x5, x29, #0x20
    3454:	ldur	x6, [x29, #-64]
    3458:	mov	x15, sp
    345c:	ldur	x16, [x29, #-64]
    3460:	str	x16, [x15]
    3464:	mov	x15, sp
    3468:	str	x8, [x15, #8]
    346c:	mov	x8, sp
    3470:	str	x16, [x8, #16]
    3474:	mov	x8, sp
    3478:	str	x9, [x8, #24]
    347c:	mov	x8, sp
    3480:	str	x16, [x8, #32]
    3484:	mov	x8, sp
    3488:	str	x10, [x8, #40]
    348c:	mov	x8, sp
    3490:	adrp	x9, 3000 <PyInit__lzma@@Base+0x89c>
    3494:	add	x9, x9, #0x73c
    3498:	str	x9, [x8, #48]
    349c:	mov	x8, sp
    34a0:	str	x11, [x8, #56]
    34a4:	mov	x8, sp
    34a8:	str	x16, [x8, #64]
    34ac:	mov	x8, sp
    34b0:	str	x12, [x8, #72]
    34b4:	mov	x8, sp
    34b8:	adrp	x9, 3000 <PyInit__lzma@@Base+0x89c>
    34bc:	add	x9, x9, #0x7c4
    34c0:	str	x9, [x8, #80]
    34c4:	mov	x8, sp
    34c8:	str	x13, [x8, #88]
    34cc:	mov	x8, sp
    34d0:	str	x16, [x8, #96]
    34d4:	mov	x8, sp
    34d8:	str	x14, [x8, #104]
    34dc:	bl	2550 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    34e0:	cbnz	w0, 350c <PyInit__lzma@@Base+0xda8>
    34e4:	adrp	x8, 17000 <PyInit__lzma@@Base+0x1489c>
    34e8:	ldr	x8, [x8, #4008]
    34ec:	ldr	x0, [x8]
    34f0:	adrp	x1, 6000 <PyInit__lzma@@Base+0x389c>
    34f4:	add	x1, x1, #0xe20
    34f8:	bl	2380 <PyErr_SetString@plt>
    34fc:	ldur	x0, [x29, #-48]
    3500:	bl	22a0 <PyMem_Free@plt>
    3504:	mov	x8, xzr
    3508:	stur	x8, [x29, #-48]
    350c:	ldur	x8, [x29, #-48]
    3510:	stur	x8, [x29, #-8]
    3514:	ldur	x0, [x29, #-8]
    3518:	ldp	x29, x30, [sp, #176]
    351c:	add	sp, sp, #0xc0
    3520:	ret
    3524:	sub	sp, sp, #0x40
    3528:	stp	x29, x30, [sp, #48]
    352c:	add	x29, sp, #0x30
    3530:	mov	w8, #0x1                   	// #1
    3534:	adrp	x9, 18000 <PyInit__lzma@@Base+0x1589c>
    3538:	add	x9, x9, #0x9c0
    353c:	adrp	x2, 6000 <PyInit__lzma@@Base+0x389c>
    3540:	add	x2, x2, #0xebe
    3544:	adrp	x3, 18000 <PyInit__lzma@@Base+0x1589c>
    3548:	add	x3, x3, #0x6b8
    354c:	adrp	x5, 3000 <PyInit__lzma@@Base+0x89c>
    3550:	add	x5, x5, #0x6b4
    3554:	add	x4, sp, #0x18
    3558:	add	x6, sp, #0x14
    355c:	stur	x0, [x29, #-16]
    3560:	str	w8, [sp, #20]
    3564:	ldr	x0, [x9]
    3568:	ldur	x1, [x29, #-16]
    356c:	bl	2550 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    3570:	cbnz	w0, 3598 <PyInit__lzma@@Base+0xe34>
    3574:	adrp	x8, 17000 <PyInit__lzma@@Base+0x1489c>
    3578:	ldr	x8, [x8, #4008]
    357c:	ldr	x0, [x8]
    3580:	adrp	x1, 6000 <PyInit__lzma@@Base+0x389c>
    3584:	add	x1, x1, #0xec3
    3588:	bl	2380 <PyErr_SetString@plt>
    358c:	mov	x8, xzr
    3590:	stur	x8, [x29, #-8]
    3594:	b	35e8 <PyInit__lzma@@Base+0xe84>
    3598:	mov	x0, #0x28                  	// #40
    359c:	bl	2660 <PyMem_Malloc@plt>
    35a0:	str	x0, [sp, #8]
    35a4:	ldr	x8, [sp, #8]
    35a8:	cbnz	x8, 35b8 <PyInit__lzma@@Base+0xe54>
    35ac:	bl	2330 <PyErr_NoMemory@plt>
    35b0:	stur	x0, [x29, #-8]
    35b4:	b	35e8 <PyInit__lzma@@Base+0xe84>
    35b8:	ldr	x0, [sp, #8]
    35bc:	mov	w8, wzr
    35c0:	mov	w1, w8
    35c4:	mov	x2, #0x28                  	// #40
    35c8:	bl	23e0 <memset@plt>
    35cc:	ldr	x9, [sp, #8]
    35d0:	str	wzr, [x9]
    35d4:	ldr	w8, [sp, #20]
    35d8:	ldr	x9, [sp, #8]
    35dc:	str	w8, [x9, #4]
    35e0:	ldr	x9, [sp, #8]
    35e4:	stur	x9, [x29, #-8]
    35e8:	ldur	x0, [x29, #-8]
    35ec:	ldp	x29, x30, [sp, #48]
    35f0:	add	sp, sp, #0x40
    35f4:	ret
    35f8:	sub	sp, sp, #0x40
    35fc:	stp	x29, x30, [sp, #48]
    3600:	add	x29, sp, #0x30
    3604:	adrp	x8, 18000 <PyInit__lzma@@Base+0x1589c>
    3608:	add	x8, x8, #0x9c0
    360c:	adrp	x2, 6000 <PyInit__lzma@@Base+0x389c>
    3610:	add	x2, x2, #0xebe
    3614:	adrp	x3, 18000 <PyInit__lzma@@Base+0x1589c>
    3618:	add	x3, x3, #0x6d0
    361c:	adrp	x5, 3000 <PyInit__lzma@@Base+0x89c>
    3620:	add	x5, x5, #0x6b4
    3624:	add	x4, sp, #0x18
    3628:	add	x6, sp, #0x14
    362c:	stur	x0, [x29, #-16]
    3630:	str	wzr, [sp, #20]
    3634:	ldr	x0, [x8]
    3638:	ldur	x1, [x29, #-16]
    363c:	bl	2550 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    3640:	cbnz	w0, 3668 <PyInit__lzma@@Base+0xf04>
    3644:	adrp	x8, 17000 <PyInit__lzma@@Base+0x1489c>
    3648:	ldr	x8, [x8, #4008]
    364c:	ldr	x0, [x8]
    3650:	adrp	x1, 6000 <PyInit__lzma@@Base+0x389c>
    3654:	add	x1, x1, #0xefa
    3658:	bl	2380 <PyErr_SetString@plt>
    365c:	mov	x8, xzr
    3660:	stur	x8, [x29, #-8]
    3664:	b	36a4 <PyInit__lzma@@Base+0xf40>
    3668:	mov	x0, #0x4                   	// #4
    366c:	bl	2660 <PyMem_Malloc@plt>
    3670:	str	x0, [sp, #8]
    3674:	ldr	x8, [sp, #8]
    3678:	cbnz	x8, 3688 <PyInit__lzma@@Base+0xf24>
    367c:	bl	2330 <PyErr_NoMemory@plt>
    3680:	stur	x0, [x29, #-8]
    3684:	b	36a4 <PyInit__lzma@@Base+0xf40>
    3688:	ldr	x8, [sp, #8]
    368c:	str	wzr, [x8]
    3690:	ldr	w9, [sp, #20]
    3694:	ldr	x8, [sp, #8]
    3698:	str	w9, [x8]
    369c:	ldr	x8, [sp, #8]
    36a0:	stur	x8, [x29, #-8]
    36a4:	ldur	x0, [x29, #-8]
    36a8:	ldp	x29, x30, [sp, #48]
    36ac:	add	sp, sp, #0x40
    36b0:	ret
    36b4:	sub	sp, sp, #0x30
    36b8:	stp	x29, x30, [sp, #32]
    36bc:	add	x29, sp, #0x20
    36c0:	str	x0, [sp, #16]
    36c4:	str	x1, [sp, #8]
    36c8:	ldr	x0, [sp, #16]
    36cc:	bl	22d0 <PyLong_AsUnsignedLongLong@plt>
    36d0:	str	x0, [sp]
    36d4:	bl	24c0 <PyErr_Occurred@plt>
    36d8:	cbz	x0, 36e4 <PyInit__lzma@@Base+0xf80>
    36dc:	stur	wzr, [x29, #-4]
    36e0:	b	372c <PyInit__lzma@@Base+0xfc8>
    36e4:	ldr	x8, [sp]
    36e8:	and	x8, x8, #0xffffffff
    36ec:	ldr	x9, [sp]
    36f0:	cmp	x8, x9
    36f4:	b.eq	3718 <PyInit__lzma@@Base+0xfb4>  // b.none
    36f8:	adrp	x8, 17000 <PyInit__lzma@@Base+0x1489c>
    36fc:	ldr	x8, [x8, #4040]
    3700:	ldr	x0, [x8]
    3704:	adrp	x1, 6000 <PyInit__lzma@@Base+0x389c>
    3708:	add	x1, x1, #0xe49
    370c:	bl	2380 <PyErr_SetString@plt>
    3710:	stur	wzr, [x29, #-4]
    3714:	b	372c <PyInit__lzma@@Base+0xfc8>
    3718:	ldr	x8, [sp]
    371c:	ldr	x9, [sp, #8]
    3720:	str	w8, [x9]
    3724:	mov	w8, #0x1                   	// #1
    3728:	stur	w8, [x29, #-4]
    372c:	ldur	w0, [x29, #-4]
    3730:	ldp	x29, x30, [sp, #32]
    3734:	add	sp, sp, #0x30
    3738:	ret
    373c:	sub	sp, sp, #0x30
    3740:	stp	x29, x30, [sp, #32]
    3744:	add	x29, sp, #0x20
    3748:	str	x0, [sp, #16]
    374c:	str	x1, [sp, #8]
    3750:	ldr	x0, [sp, #16]
    3754:	bl	22d0 <PyLong_AsUnsignedLongLong@plt>
    3758:	str	x0, [sp]
    375c:	bl	24c0 <PyErr_Occurred@plt>
    3760:	cbz	x0, 376c <PyInit__lzma@@Base+0x1008>
    3764:	stur	wzr, [x29, #-4]
    3768:	b	37b4 <PyInit__lzma@@Base+0x1050>
    376c:	ldr	x8, [sp]
    3770:	and	x8, x8, #0xffffffff
    3774:	ldr	x9, [sp]
    3778:	cmp	x8, x9
    377c:	b.eq	37a0 <PyInit__lzma@@Base+0x103c>  // b.none
    3780:	adrp	x8, 17000 <PyInit__lzma@@Base+0x1489c>
    3784:	ldr	x8, [x8, #4040]
    3788:	ldr	x0, [x8]
    378c:	adrp	x1, 6000 <PyInit__lzma@@Base+0x389c>
    3790:	add	x1, x1, #0xe6b
    3794:	bl	2380 <PyErr_SetString@plt>
    3798:	stur	wzr, [x29, #-4]
    379c:	b	37b4 <PyInit__lzma@@Base+0x1050>
    37a0:	ldr	x8, [sp]
    37a4:	ldr	x9, [sp, #8]
    37a8:	str	w8, [x9]
    37ac:	mov	w8, #0x1                   	// #1
    37b0:	stur	w8, [x29, #-4]
    37b4:	ldur	w0, [x29, #-4]
    37b8:	ldp	x29, x30, [sp, #32]
    37bc:	add	sp, sp, #0x30
    37c0:	ret
    37c4:	sub	sp, sp, #0x30
    37c8:	stp	x29, x30, [sp, #32]
    37cc:	add	x29, sp, #0x20
    37d0:	str	x0, [sp, #16]
    37d4:	str	x1, [sp, #8]
    37d8:	ldr	x0, [sp, #16]
    37dc:	bl	22d0 <PyLong_AsUnsignedLongLong@plt>
    37e0:	str	x0, [sp]
    37e4:	bl	24c0 <PyErr_Occurred@plt>
    37e8:	cbz	x0, 37f4 <PyInit__lzma@@Base+0x1090>
    37ec:	stur	wzr, [x29, #-4]
    37f0:	b	383c <PyInit__lzma@@Base+0x10d8>
    37f4:	ldr	x8, [sp]
    37f8:	and	x8, x8, #0xffffffff
    37fc:	ldr	x9, [sp]
    3800:	cmp	x8, x9
    3804:	b.eq	3828 <PyInit__lzma@@Base+0x10c4>  // b.none
    3808:	adrp	x8, 17000 <PyInit__lzma@@Base+0x1489c>
    380c:	ldr	x8, [x8, #4040]
    3810:	ldr	x0, [x8]
    3814:	adrp	x1, 6000 <PyInit__lzma@@Base+0x389c>
    3818:	add	x1, x1, #0xe8e
    381c:	bl	2380 <PyErr_SetString@plt>
    3820:	stur	wzr, [x29, #-4]
    3824:	b	383c <PyInit__lzma@@Base+0x10d8>
    3828:	ldr	x8, [sp]
    382c:	ldr	x9, [sp, #8]
    3830:	str	w8, [x9]
    3834:	mov	w8, #0x1                   	// #1
    3838:	stur	w8, [x29, #-4]
    383c:	ldur	w0, [x29, #-4]
    3840:	ldp	x29, x30, [sp, #32]
    3844:	add	sp, sp, #0x30
    3848:	ret
    384c:	sub	sp, sp, #0x30
    3850:	stp	x29, x30, [sp, #32]
    3854:	add	x29, sp, #0x20
    3858:	adrp	x8, 18000 <PyInit__lzma@@Base+0x1589c>
    385c:	add	x8, x8, #0x9c8
    3860:	stur	w0, [x29, #-8]
    3864:	ldur	w9, [x29, #-8]
    3868:	subs	w9, w9, #0x0
    386c:	mov	w10, w9
    3870:	ubfx	x10, x10, #0, #32
    3874:	cmp	x10, #0xb
    3878:	str	x8, [sp, #16]
    387c:	str	x10, [sp, #8]
    3880:	b.hi	3994 <PyInit__lzma@@Base+0x1230>  // b.pmore
    3884:	adrp	x8, 5000 <PyInit__lzma@@Base+0x289c>
    3888:	add	x8, x8, #0xad8
    388c:	ldr	x11, [sp, #8]
    3890:	ldrsw	x10, [x8, x11, lsl #2]
    3894:	add	x9, x8, x10
    3898:	br	x9
    389c:	stur	wzr, [x29, #-4]
    38a0:	b	39b4 <PyInit__lzma@@Base+0x1250>
    38a4:	ldr	x8, [sp, #16]
    38a8:	ldr	x0, [x8]
    38ac:	adrp	x1, 6000 <PyInit__lzma@@Base+0x389c>
    38b0:	add	x1, x1, #0xf22
    38b4:	bl	2380 <PyErr_SetString@plt>
    38b8:	mov	w9, #0x1                   	// #1
    38bc:	stur	w9, [x29, #-4]
    38c0:	b	39b4 <PyInit__lzma@@Base+0x1250>
    38c4:	bl	2330 <PyErr_NoMemory@plt>
    38c8:	mov	w8, #0x1                   	// #1
    38cc:	stur	w8, [x29, #-4]
    38d0:	b	39b4 <PyInit__lzma@@Base+0x1250>
    38d4:	ldr	x8, [sp, #16]
    38d8:	ldr	x0, [x8]
    38dc:	adrp	x1, 6000 <PyInit__lzma@@Base+0x389c>
    38e0:	add	x1, x1, #0xf3e
    38e4:	bl	2380 <PyErr_SetString@plt>
    38e8:	mov	w9, #0x1                   	// #1
    38ec:	stur	w9, [x29, #-4]
    38f0:	b	39b4 <PyInit__lzma@@Base+0x1250>
    38f4:	ldr	x8, [sp, #16]
    38f8:	ldr	x0, [x8]
    38fc:	adrp	x1, 6000 <PyInit__lzma@@Base+0x389c>
    3900:	add	x1, x1, #0xf5a
    3904:	bl	2380 <PyErr_SetString@plt>
    3908:	mov	w9, #0x1                   	// #1
    390c:	stur	w9, [x29, #-4]
    3910:	b	39b4 <PyInit__lzma@@Base+0x1250>
    3914:	ldr	x8, [sp, #16]
    3918:	ldr	x0, [x8]
    391c:	adrp	x1, 6000 <PyInit__lzma@@Base+0x389c>
    3920:	add	x1, x1, #0xf80
    3924:	bl	2380 <PyErr_SetString@plt>
    3928:	mov	w9, #0x1                   	// #1
    392c:	stur	w9, [x29, #-4]
    3930:	b	39b4 <PyInit__lzma@@Base+0x1250>
    3934:	ldr	x8, [sp, #16]
    3938:	ldr	x0, [x8]
    393c:	adrp	x1, 6000 <PyInit__lzma@@Base+0x389c>
    3940:	add	x1, x1, #0xf9f
    3944:	bl	2380 <PyErr_SetString@plt>
    3948:	mov	w9, #0x1                   	// #1
    394c:	stur	w9, [x29, #-4]
    3950:	b	39b4 <PyInit__lzma@@Base+0x1250>
    3954:	ldr	x8, [sp, #16]
    3958:	ldr	x0, [x8]
    395c:	adrp	x1, 6000 <PyInit__lzma@@Base+0x389c>
    3960:	add	x1, x1, #0xfb2
    3964:	bl	2380 <PyErr_SetString@plt>
    3968:	mov	w9, #0x1                   	// #1
    396c:	stur	w9, [x29, #-4]
    3970:	b	39b4 <PyInit__lzma@@Base+0x1250>
    3974:	ldr	x8, [sp, #16]
    3978:	ldr	x0, [x8]
    397c:	adrp	x1, 6000 <PyInit__lzma@@Base+0x389c>
    3980:	add	x1, x1, #0xfcc
    3984:	bl	2380 <PyErr_SetString@plt>
    3988:	mov	w9, #0x1                   	// #1
    398c:	stur	w9, [x29, #-4]
    3990:	b	39b4 <PyInit__lzma@@Base+0x1250>
    3994:	ldr	x8, [sp, #16]
    3998:	ldr	x0, [x8]
    399c:	ldur	w2, [x29, #-8]
    39a0:	adrp	x1, 6000 <PyInit__lzma@@Base+0x389c>
    39a4:	add	x1, x1, #0xfdb
    39a8:	bl	25f0 <PyErr_Format@plt>
    39ac:	mov	w9, #0x1                   	// #1
    39b0:	stur	w9, [x29, #-4]
    39b4:	ldur	w0, [x29, #-4]
    39b8:	ldp	x29, x30, [sp, #32]
    39bc:	add	sp, sp, #0x30
    39c0:	ret
    39c4:	sub	sp, sp, #0x20
    39c8:	stp	x29, x30, [sp, #16]
    39cc:	add	x29, sp, #0x10
    39d0:	str	x0, [sp, #8]
    39d4:	ldr	x8, [sp, #8]
    39d8:	cbz	x8, 39f0 <PyInit__lzma@@Base+0x128c>
    39dc:	ldr	x2, [sp, #8]
    39e0:	adrp	x0, 6000 <PyInit__lzma@@Base+0x389c>
    39e4:	add	x0, x0, #0xfff
    39e8:	mov	w1, #0x21d                 	// #541
    39ec:	bl	3290 <PyInit__lzma@@Base+0xb2c>
    39f0:	ldp	x29, x30, [sp, #16]
    39f4:	add	sp, sp, #0x20
    39f8:	ret
    39fc:	sub	sp, sp, #0x30
    3a00:	stp	x29, x30, [sp, #32]
    3a04:	add	x29, sp, #0x20
    3a08:	str	x0, [sp, #16]
    3a0c:	str	x1, [sp, #8]
    3a10:	ldr	x0, [sp, #16]
    3a14:	bl	22d0 <PyLong_AsUnsignedLongLong@plt>
    3a18:	str	x0, [sp]
    3a1c:	bl	24c0 <PyErr_Occurred@plt>
    3a20:	cbz	x0, 3a2c <PyInit__lzma@@Base+0x12c8>
    3a24:	stur	wzr, [x29, #-4]
    3a28:	b	3a70 <PyInit__lzma@@Base+0x130c>
    3a2c:	ldr	x8, [sp]
    3a30:	ldr	x9, [sp]
    3a34:	cmp	x8, x9
    3a38:	b.eq	3a5c <PyInit__lzma@@Base+0x12f8>  // b.none
    3a3c:	adrp	x8, 17000 <PyInit__lzma@@Base+0x1489c>
    3a40:	ldr	x8, [x8, #4040]
    3a44:	ldr	x0, [x8]
    3a48:	adrp	x1, 7000 <PyInit__lzma@@Base+0x489c>
    3a4c:	add	x1, x1, #0x2f
    3a50:	bl	2380 <PyErr_SetString@plt>
    3a54:	stur	wzr, [x29, #-4]
    3a58:	b	3a70 <PyInit__lzma@@Base+0x130c>
    3a5c:	ldr	x8, [sp]
    3a60:	ldr	x9, [sp, #8]
    3a64:	str	x8, [x9]
    3a68:	mov	w10, #0x1                   	// #1
    3a6c:	stur	w10, [x29, #-4]
    3a70:	ldur	w0, [x29, #-4]
    3a74:	ldp	x29, x30, [sp, #32]
    3a78:	add	sp, sp, #0x30
    3a7c:	ret
    3a80:	sub	sp, sp, #0x60
    3a84:	stp	x29, x30, [sp, #80]
    3a88:	add	x29, sp, #0x50
    3a8c:	mov	x8, xzr
    3a90:	mov	x3, x8
    3a94:	add	x9, sp, #0x20
    3a98:	stur	x0, [x29, #-16]
    3a9c:	stur	x1, [x29, #-24]
    3aa0:	stur	x2, [x29, #-32]
    3aa4:	str	x8, [sp, #16]
    3aa8:	ldur	x8, [x29, #-24]
    3aac:	str	x8, [sp, #32]
    3ab0:	ldur	x8, [x29, #-32]
    3ab4:	ldr	x2, [x8]
    3ab8:	ldur	x8, [x29, #-32]
    3abc:	ldr	x8, [x8, #16]
    3ac0:	mov	x0, x9
    3ac4:	mov	x1, x3
    3ac8:	mov	x3, x8
    3acc:	bl	24b0 <lzma_properties_decode@plt>
    3ad0:	str	w0, [sp, #28]
    3ad4:	ldr	w0, [sp, #28]
    3ad8:	bl	384c <PyInit__lzma@@Base+0x10e8>
    3adc:	cbz	w0, 3aec <PyInit__lzma@@Base+0x1388>
    3ae0:	mov	x8, xzr
    3ae4:	stur	x8, [x29, #-8]
    3ae8:	b	3b14 <PyInit__lzma@@Base+0x13b0>
    3aec:	add	x8, sp, #0x20
    3af0:	mov	x0, x8
    3af4:	str	x8, [sp, #8]
    3af8:	bl	3b24 <PyInit__lzma@@Base+0x13c0>
    3afc:	str	x0, [sp, #16]
    3b00:	ldr	x8, [sp, #8]
    3b04:	ldr	x0, [x8, #8]
    3b08:	bl	2530 <free@plt>
    3b0c:	ldr	x8, [sp, #16]
    3b10:	stur	x8, [x29, #-8]
    3b14:	ldur	x0, [x29, #-8]
    3b18:	ldp	x29, x30, [sp, #80]
    3b1c:	add	sp, sp, #0x60
    3b20:	ret
    3b24:	sub	sp, sp, #0x50
    3b28:	stp	x29, x30, [sp, #64]
    3b2c:	add	x29, sp, #0x40
    3b30:	stur	x0, [x29, #-16]
    3b34:	bl	2580 <PyDict_New@plt>
    3b38:	stur	x0, [x29, #-24]
    3b3c:	ldur	x8, [x29, #-24]
    3b40:	cbnz	x8, 3b50 <PyInit__lzma@@Base+0x13ec>
    3b44:	mov	x8, xzr
    3b48:	stur	x8, [x29, #-8]
    3b4c:	b	3d94 <PyInit__lzma@@Base+0x1630>
    3b50:	ldur	x0, [x29, #-24]
    3b54:	ldur	x8, [x29, #-16]
    3b58:	ldr	x2, [x8]
    3b5c:	adrp	x1, 18000 <PyInit__lzma@@Base+0x1589c>
    3b60:	add	x1, x1, #0x6e8
    3b64:	bl	3da4 <PyInit__lzma@@Base+0x1640>
    3b68:	mov	w9, #0xffffffff            	// #-1
    3b6c:	cmp	w0, w9
    3b70:	b.ne	3b78 <PyInit__lzma@@Base+0x1414>  // b.any
    3b74:	b	3d78 <PyInit__lzma@@Base+0x1614>
    3b78:	ldur	x8, [x29, #-16]
    3b7c:	ldr	x8, [x8]
    3b80:	cmp	x8, #0x3
    3b84:	str	x8, [sp]
    3b88:	b.eq	3cd0 <PyInit__lzma@@Base+0x156c>  // b.none
    3b8c:	b	3b90 <PyInit__lzma@@Base+0x142c>
    3b90:	ldr	x8, [sp]
    3b94:	subs	x9, x8, #0x4
    3b98:	cmp	x9, #0x5
    3b9c:	b.ls	3d0c <PyInit__lzma@@Base+0x15a8>  // b.plast
    3ba0:	b	3ba4 <PyInit__lzma@@Base+0x1440>
    3ba4:	ldr	x8, [sp]
    3ba8:	cmp	x8, #0x21
    3bac:	b.eq	3c94 <PyInit__lzma@@Base+0x1530>  // b.none
    3bb0:	b	3bb4 <PyInit__lzma@@Base+0x1450>
    3bb4:	mov	x8, #0x1                   	// #1
    3bb8:	movk	x8, #0x4000, lsl #48
    3bbc:	ldr	x9, [sp]
    3bc0:	cmp	x9, x8
    3bc4:	cset	w10, eq  // eq = none
    3bc8:	eor	w10, w10, #0x1
    3bcc:	tbnz	w10, #0, 3d48 <PyInit__lzma@@Base+0x15e4>
    3bd0:	b	3bd4 <PyInit__lzma@@Base+0x1470>
    3bd4:	ldur	x8, [x29, #-16]
    3bd8:	ldr	x8, [x8, #8]
    3bdc:	str	x8, [sp, #32]
    3be0:	ldur	x0, [x29, #-24]
    3be4:	ldr	x8, [sp, #32]
    3be8:	ldr	w9, [x8, #20]
    3bec:	mov	w2, w9
    3bf0:	adrp	x1, 18000 <PyInit__lzma@@Base+0x1589c>
    3bf4:	add	x1, x1, #0x700
    3bf8:	bl	3da4 <PyInit__lzma@@Base+0x1640>
    3bfc:	mov	w9, #0xffffffff            	// #-1
    3c00:	cmp	w0, w9
    3c04:	b.ne	3c0c <PyInit__lzma@@Base+0x14a8>  // b.any
    3c08:	b	3d78 <PyInit__lzma@@Base+0x1614>
    3c0c:	ldur	x0, [x29, #-24]
    3c10:	ldr	x8, [sp, #32]
    3c14:	ldr	w9, [x8, #24]
    3c18:	mov	w2, w9
    3c1c:	adrp	x1, 18000 <PyInit__lzma@@Base+0x1589c>
    3c20:	add	x1, x1, #0x718
    3c24:	bl	3da4 <PyInit__lzma@@Base+0x1640>
    3c28:	mov	w9, #0xffffffff            	// #-1
    3c2c:	cmp	w0, w9
    3c30:	b.ne	3c38 <PyInit__lzma@@Base+0x14d4>  // b.any
    3c34:	b	3d78 <PyInit__lzma@@Base+0x1614>
    3c38:	ldur	x0, [x29, #-24]
    3c3c:	ldr	x8, [sp, #32]
    3c40:	ldr	w9, [x8, #28]
    3c44:	mov	w2, w9
    3c48:	adrp	x1, 18000 <PyInit__lzma@@Base+0x1589c>
    3c4c:	add	x1, x1, #0x730
    3c50:	bl	3da4 <PyInit__lzma@@Base+0x1640>
    3c54:	mov	w9, #0xffffffff            	// #-1
    3c58:	cmp	w0, w9
    3c5c:	b.ne	3c64 <PyInit__lzma@@Base+0x1500>  // b.any
    3c60:	b	3d78 <PyInit__lzma@@Base+0x1614>
    3c64:	ldur	x0, [x29, #-24]
    3c68:	ldr	x8, [sp, #32]
    3c6c:	ldr	w9, [x8]
    3c70:	mov	w2, w9
    3c74:	adrp	x1, 18000 <PyInit__lzma@@Base+0x1589c>
    3c78:	add	x1, x1, #0x748
    3c7c:	bl	3da4 <PyInit__lzma@@Base+0x1640>
    3c80:	mov	w9, #0xffffffff            	// #-1
    3c84:	cmp	w0, w9
    3c88:	b.ne	3c90 <PyInit__lzma@@Base+0x152c>  // b.any
    3c8c:	b	3d78 <PyInit__lzma@@Base+0x1614>
    3c90:	b	3d6c <PyInit__lzma@@Base+0x1608>
    3c94:	ldur	x8, [x29, #-16]
    3c98:	ldr	x8, [x8, #8]
    3c9c:	str	x8, [sp, #24]
    3ca0:	ldur	x0, [x29, #-24]
    3ca4:	ldr	x8, [sp, #24]
    3ca8:	ldr	w9, [x8]
    3cac:	mov	w2, w9
    3cb0:	adrp	x1, 18000 <PyInit__lzma@@Base+0x1589c>
    3cb4:	add	x1, x1, #0x760
    3cb8:	bl	3da4 <PyInit__lzma@@Base+0x1640>
    3cbc:	mov	w9, #0xffffffff            	// #-1
    3cc0:	cmp	w0, w9
    3cc4:	b.ne	3ccc <PyInit__lzma@@Base+0x1568>  // b.any
    3cc8:	b	3d78 <PyInit__lzma@@Base+0x1614>
    3ccc:	b	3d6c <PyInit__lzma@@Base+0x1608>
    3cd0:	ldur	x8, [x29, #-16]
    3cd4:	ldr	x8, [x8, #8]
    3cd8:	str	x8, [sp, #16]
    3cdc:	ldur	x0, [x29, #-24]
    3ce0:	ldr	x8, [sp, #16]
    3ce4:	ldr	w9, [x8, #4]
    3ce8:	mov	w2, w9
    3cec:	adrp	x1, 18000 <PyInit__lzma@@Base+0x1589c>
    3cf0:	add	x1, x1, #0x778
    3cf4:	bl	3da4 <PyInit__lzma@@Base+0x1640>
    3cf8:	mov	w9, #0xffffffff            	// #-1
    3cfc:	cmp	w0, w9
    3d00:	b.ne	3d08 <PyInit__lzma@@Base+0x15a4>  // b.any
    3d04:	b	3d78 <PyInit__lzma@@Base+0x1614>
    3d08:	b	3d6c <PyInit__lzma@@Base+0x1608>
    3d0c:	ldur	x8, [x29, #-16]
    3d10:	ldr	x8, [x8, #8]
    3d14:	str	x8, [sp, #8]
    3d18:	ldur	x0, [x29, #-24]
    3d1c:	ldr	x8, [sp, #8]
    3d20:	ldr	w9, [x8]
    3d24:	mov	w2, w9
    3d28:	adrp	x1, 18000 <PyInit__lzma@@Base+0x1589c>
    3d2c:	add	x1, x1, #0x790
    3d30:	bl	3da4 <PyInit__lzma@@Base+0x1640>
    3d34:	mov	w9, #0xffffffff            	// #-1
    3d38:	cmp	w0, w9
    3d3c:	b.ne	3d44 <PyInit__lzma@@Base+0x15e0>  // b.any
    3d40:	b	3d78 <PyInit__lzma@@Base+0x1614>
    3d44:	b	3d6c <PyInit__lzma@@Base+0x1608>
    3d48:	adrp	x8, 17000 <PyInit__lzma@@Base+0x1489c>
    3d4c:	ldr	x8, [x8, #4008]
    3d50:	ldr	x0, [x8]
    3d54:	ldur	x8, [x29, #-16]
    3d58:	ldr	x2, [x8]
    3d5c:	adrp	x1, 6000 <PyInit__lzma@@Base+0x389c>
    3d60:	add	x1, x1, #0xda4
    3d64:	bl	25f0 <PyErr_Format@plt>
    3d68:	b	3d78 <PyInit__lzma@@Base+0x1614>
    3d6c:	ldur	x8, [x29, #-24]
    3d70:	stur	x8, [x29, #-8]
    3d74:	b	3d94 <PyInit__lzma@@Base+0x1630>
    3d78:	ldur	x2, [x29, #-24]
    3d7c:	adrp	x0, 6000 <PyInit__lzma@@Base+0x389c>
    3d80:	add	x0, x0, #0xd78
    3d84:	mov	w1, #0x1ca                 	// #458
    3d88:	bl	3290 <PyInit__lzma@@Base+0xb2c>
    3d8c:	mov	x8, xzr
    3d90:	stur	x8, [x29, #-8]
    3d94:	ldur	x0, [x29, #-8]
    3d98:	ldp	x29, x30, [sp, #64]
    3d9c:	add	sp, sp, #0x50
    3da0:	ret
    3da4:	sub	sp, sp, #0x40
    3da8:	stp	x29, x30, [sp, #48]
    3dac:	add	x29, sp, #0x30
    3db0:	stur	x0, [x29, #-16]
    3db4:	str	x1, [sp, #24]
    3db8:	str	x2, [sp, #16]
    3dbc:	ldr	x0, [sp, #16]
    3dc0:	bl	22b0 <PyLong_FromUnsignedLongLong@plt>
    3dc4:	str	x0, [sp]
    3dc8:	ldr	x8, [sp]
    3dcc:	cbnz	x8, 3ddc <PyInit__lzma@@Base+0x1678>
    3dd0:	mov	w8, #0xffffffff            	// #-1
    3dd4:	stur	w8, [x29, #-4]
    3dd8:	b	3e0c <PyInit__lzma@@Base+0x16a8>
    3ddc:	ldur	x0, [x29, #-16]
    3de0:	ldr	x1, [sp, #24]
    3de4:	ldr	x2, [sp]
    3de8:	bl	2680 <_PyDict_SetItemId@plt>
    3dec:	str	w0, [sp, #12]
    3df0:	ldr	x2, [sp]
    3df4:	adrp	x0, 6000 <PyInit__lzma@@Base+0x389c>
    3df8:	add	x0, x0, #0xd78
    3dfc:	mov	w1, #0x18a                 	// #394
    3e00:	bl	3290 <PyInit__lzma@@Base+0xb2c>
    3e04:	ldr	w8, [sp, #12]
    3e08:	stur	w8, [x29, #-4]
    3e0c:	ldur	w0, [x29, #-4]
    3e10:	ldp	x29, x30, [sp, #48]
    3e14:	add	sp, sp, #0x40
    3e18:	ret
    3e1c:	sub	sp, sp, #0x20
    3e20:	stp	x29, x30, [sp, #16]
    3e24:	add	x29, sp, #0x10
    3e28:	str	x0, [sp, #8]
    3e2c:	ldr	x8, [sp, #8]
    3e30:	add	x0, x8, #0x28
    3e34:	bl	2500 <lzma_end@plt>
    3e38:	ldr	x8, [sp, #8]
    3e3c:	ldr	x8, [x8, #184]
    3e40:	cbz	x8, 3e50 <PyInit__lzma@@Base+0x16ec>
    3e44:	ldr	x8, [sp, #8]
    3e48:	ldr	x0, [x8, #184]
    3e4c:	bl	2670 <PyThread_free_lock@plt>
    3e50:	ldr	x8, [sp, #8]
    3e54:	ldr	x8, [x8, #8]
    3e58:	ldr	x8, [x8, #320]
    3e5c:	ldr	x0, [sp, #8]
    3e60:	blr	x8
    3e64:	ldp	x29, x30, [sp, #16]
    3e68:	add	sp, sp, #0x20
    3e6c:	ret
    3e70:	sub	sp, sp, #0x70
    3e74:	stp	x29, x30, [sp, #96]
    3e78:	add	x29, sp, #0x60
    3e7c:	mov	w8, #0x1                   	// #1
    3e80:	mov	w9, #0xffffffff            	// #-1
    3e84:	mov	w10, #0x6                   	// #6
    3e88:	adrp	x11, 17000 <PyInit__lzma@@Base+0x1489c>
    3e8c:	ldr	x11, [x11, #4056]
    3e90:	adrp	x12, 7000 <PyInit__lzma@@Base+0x489c>
    3e94:	add	x12, x12, #0xb9
    3e98:	adrp	x3, 18000 <PyInit__lzma@@Base+0x1589c>
    3e9c:	add	x3, x3, #0x808
    3ea0:	adrp	x13, 17000 <PyInit__lzma@@Base+0x1489c>
    3ea4:	ldr	x13, [x13, #4008]
    3ea8:	sub	x4, x29, #0x24
    3eac:	sub	x5, x29, #0x28
    3eb0:	add	x6, sp, #0x28
    3eb4:	add	x7, sp, #0x20
    3eb8:	stur	x0, [x29, #-16]
    3ebc:	stur	x1, [x29, #-24]
    3ec0:	stur	x2, [x29, #-32]
    3ec4:	stur	w8, [x29, #-36]
    3ec8:	stur	w9, [x29, #-40]
    3ecc:	stur	w10, [x29, #-44]
    3ed0:	str	x11, [sp, #40]
    3ed4:	str	x11, [sp, #32]
    3ed8:	ldur	x0, [x29, #-24]
    3edc:	ldur	x1, [x29, #-32]
    3ee0:	mov	x2, x12
    3ee4:	str	x11, [sp, #24]
    3ee8:	str	x13, [sp, #16]
    3eec:	bl	2550 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    3ef0:	cbnz	w0, 3f00 <PyInit__lzma@@Base+0x179c>
    3ef4:	mov	w8, #0xffffffff            	// #-1
    3ef8:	stur	w8, [x29, #-4]
    3efc:	b	4120 <PyInit__lzma@@Base+0x19bc>
    3f00:	ldur	w8, [x29, #-36]
    3f04:	cmp	w8, #0x1
    3f08:	b.eq	3f44 <PyInit__lzma@@Base+0x17e0>  // b.none
    3f0c:	ldur	w8, [x29, #-40]
    3f10:	mov	w9, #0xffffffff            	// #-1
    3f14:	cmp	w8, w9
    3f18:	b.eq	3f44 <PyInit__lzma@@Base+0x17e0>  // b.none
    3f1c:	ldur	w8, [x29, #-40]
    3f20:	cbz	w8, 3f44 <PyInit__lzma@@Base+0x17e0>
    3f24:	ldr	x8, [sp, #16]
    3f28:	ldr	x0, [x8]
    3f2c:	adrp	x1, 7000 <PyInit__lzma@@Base+0x489c>
    3f30:	add	x1, x1, #0xce
    3f34:	bl	2380 <PyErr_SetString@plt>
    3f38:	mov	w9, #0xffffffff            	// #-1
    3f3c:	stur	w9, [x29, #-4]
    3f40:	b	4120 <PyInit__lzma@@Base+0x19bc>
    3f44:	ldr	x8, [sp, #40]
    3f48:	ldr	x9, [sp, #24]
    3f4c:	cmp	x8, x9
    3f50:	b.eq	3f84 <PyInit__lzma@@Base+0x1820>  // b.none
    3f54:	ldr	x8, [sp, #32]
    3f58:	ldr	x9, [sp, #24]
    3f5c:	cmp	x8, x9
    3f60:	b.eq	3f84 <PyInit__lzma@@Base+0x1820>  // b.none
    3f64:	ldr	x8, [sp, #16]
    3f68:	ldr	x0, [x8]
    3f6c:	adrp	x1, 7000 <PyInit__lzma@@Base+0x489c>
    3f70:	add	x1, x1, #0xff
    3f74:	bl	2380 <PyErr_SetString@plt>
    3f78:	mov	w9, #0xffffffff            	// #-1
    3f7c:	stur	w9, [x29, #-4]
    3f80:	b	4120 <PyInit__lzma@@Base+0x19bc>
    3f84:	ldr	x8, [sp, #40]
    3f88:	ldr	x9, [sp, #24]
    3f8c:	cmp	x8, x9
    3f90:	b.eq	3fb0 <PyInit__lzma@@Base+0x184c>  // b.none
    3f94:	ldr	x0, [sp, #40]
    3f98:	sub	x1, x29, #0x2c
    3f9c:	bl	36b4 <PyInit__lzma@@Base+0xf50>
    3fa0:	cbnz	w0, 3fb0 <PyInit__lzma@@Base+0x184c>
    3fa4:	mov	w8, #0xffffffff            	// #-1
    3fa8:	stur	w8, [x29, #-4]
    3fac:	b	4120 <PyInit__lzma@@Base+0x19bc>
    3fb0:	ldur	x8, [x29, #-16]
    3fb4:	mov	x9, xzr
    3fb8:	str	x9, [x8, #32]
    3fbc:	ldur	x8, [x29, #-16]
    3fc0:	adrp	x9, 4000 <PyInit__lzma@@Base+0x189c>
    3fc4:	add	x9, x9, #0x5f4
    3fc8:	str	x9, [x8, #16]
    3fcc:	ldur	x8, [x29, #-16]
    3fd0:	adrp	x9, 4000 <PyInit__lzma@@Base+0x189c>
    3fd4:	add	x9, x9, #0x65c
    3fd8:	str	x9, [x8, #24]
    3fdc:	ldur	x8, [x29, #-16]
    3fe0:	add	x8, x8, #0x10
    3fe4:	ldur	x9, [x29, #-16]
    3fe8:	str	x8, [x9, #88]
    3fec:	bl	2540 <PyThread_allocate_lock@plt>
    3ff0:	ldur	x8, [x29, #-16]
    3ff4:	str	x0, [x8, #184]
    3ff8:	ldur	x8, [x29, #-16]
    3ffc:	ldr	x8, [x8, #184]
    4000:	cbnz	x8, 4028 <PyInit__lzma@@Base+0x18c4>
    4004:	adrp	x8, 17000 <PyInit__lzma@@Base+0x1489c>
    4008:	ldr	x8, [x8, #4000]
    400c:	ldr	x0, [x8]
    4010:	adrp	x1, 7000 <PyInit__lzma@@Base+0x489c>
    4014:	add	x1, x1, #0x12b
    4018:	bl	2380 <PyErr_SetString@plt>
    401c:	mov	w9, #0xffffffff            	// #-1
    4020:	stur	w9, [x29, #-4]
    4024:	b	4120 <PyInit__lzma@@Base+0x19bc>
    4028:	ldur	x8, [x29, #-16]
    402c:	str	wzr, [x8, #176]
    4030:	ldur	w9, [x29, #-36]
    4034:	cmp	w9, #0x1
    4038:	str	w9, [sp, #12]
    403c:	b.eq	4064 <PyInit__lzma@@Base+0x1900>  // b.none
    4040:	b	4044 <PyInit__lzma@@Base+0x18e0>
    4044:	ldr	w8, [sp, #12]
    4048:	cmp	w8, #0x2
    404c:	b.eq	40a4 <PyInit__lzma@@Base+0x1940>  // b.none
    4050:	b	4054 <PyInit__lzma@@Base+0x18f0>
    4054:	ldr	w8, [sp, #12]
    4058:	cmp	w8, #0x3
    405c:	b.eq	40c8 <PyInit__lzma@@Base+0x1964>  // b.none
    4060:	b	40e8 <PyInit__lzma@@Base+0x1984>
    4064:	ldur	w8, [x29, #-40]
    4068:	mov	w9, #0xffffffff            	// #-1
    406c:	cmp	w8, w9
    4070:	b.ne	407c <PyInit__lzma@@Base+0x1918>  // b.any
    4074:	mov	w8, #0x4                   	// #4
    4078:	stur	w8, [x29, #-40]
    407c:	ldur	x8, [x29, #-16]
    4080:	add	x0, x8, #0x28
    4084:	ldur	w1, [x29, #-40]
    4088:	ldur	w2, [x29, #-44]
    408c:	ldr	x3, [sp, #32]
    4090:	bl	4684 <PyInit__lzma@@Base+0x1f20>
    4094:	cbz	w0, 409c <PyInit__lzma@@Base+0x1938>
    4098:	b	4100 <PyInit__lzma@@Base+0x199c>
    409c:	stur	wzr, [x29, #-4]
    40a0:	b	4120 <PyInit__lzma@@Base+0x19bc>
    40a4:	ldur	x8, [x29, #-16]
    40a8:	add	x0, x8, #0x28
    40ac:	ldur	w1, [x29, #-44]
    40b0:	ldr	x2, [sp, #32]
    40b4:	bl	4740 <PyInit__lzma@@Base+0x1fdc>
    40b8:	cbz	w0, 40c0 <PyInit__lzma@@Base+0x195c>
    40bc:	b	4100 <PyInit__lzma@@Base+0x199c>
    40c0:	stur	wzr, [x29, #-4]
    40c4:	b	4120 <PyInit__lzma@@Base+0x19bc>
    40c8:	ldur	x8, [x29, #-16]
    40cc:	add	x0, x8, #0x28
    40d0:	ldr	x1, [sp, #32]
    40d4:	bl	4878 <PyInit__lzma@@Base+0x2114>
    40d8:	cbz	w0, 40e0 <PyInit__lzma@@Base+0x197c>
    40dc:	b	4100 <PyInit__lzma@@Base+0x199c>
    40e0:	stur	wzr, [x29, #-4]
    40e4:	b	4120 <PyInit__lzma@@Base+0x19bc>
    40e8:	ldr	x8, [sp, #16]
    40ec:	ldr	x0, [x8]
    40f0:	ldur	w2, [x29, #-36]
    40f4:	adrp	x1, 7000 <PyInit__lzma@@Base+0x489c>
    40f8:	add	x1, x1, #0x143
    40fc:	bl	25f0 <PyErr_Format@plt>
    4100:	ldur	x8, [x29, #-16]
    4104:	ldr	x0, [x8, #184]
    4108:	bl	2670 <PyThread_free_lock@plt>
    410c:	ldur	x8, [x29, #-16]
    4110:	mov	x9, xzr
    4114:	str	x9, [x8, #184]
    4118:	mov	w10, #0xffffffff            	// #-1
    411c:	stur	w10, [x29, #-4]
    4120:	ldur	w0, [x29, #-4]
    4124:	ldp	x29, x30, [sp, #96]
    4128:	add	sp, sp, #0x70
    412c:	ret
    4130:	sub	sp, sp, #0x90
    4134:	stp	x29, x30, [sp, #128]
    4138:	add	x29, sp, #0x80
    413c:	mov	x8, xzr
    4140:	mov	x2, #0x50                  	// #80
    4144:	mov	w9, wzr
    4148:	add	x10, sp, #0x18
    414c:	stur	x0, [x29, #-8]
    4150:	stur	x1, [x29, #-16]
    4154:	stur	x8, [x29, #-24]
    4158:	mov	x0, x10
    415c:	mov	w3, w9
    4160:	mov	w1, w3
    4164:	str	w9, [sp, #20]
    4168:	str	x10, [sp, #8]
    416c:	bl	23e0 <memset@plt>
    4170:	ldur	x0, [x29, #-16]
    4174:	ldr	x1, [sp, #8]
    4178:	ldr	w2, [sp, #20]
    417c:	bl	25a0 <PyObject_GetBuffer@plt>
    4180:	cbz	w0, 4188 <PyInit__lzma@@Base+0x1a24>
    4184:	b	41cc <PyInit__lzma@@Base+0x1a68>
    4188:	add	x0, sp, #0x18
    418c:	mov	w1, #0x43                  	// #67
    4190:	bl	2300 <PyBuffer_IsContiguous@plt>
    4194:	cbnz	w0, 41bc <PyInit__lzma@@Base+0x1a58>
    4198:	ldur	x3, [x29, #-16]
    419c:	adrp	x0, 7000 <PyInit__lzma@@Base+0x489c>
    41a0:	add	x0, x0, #0x217
    41a4:	adrp	x1, 7000 <PyInit__lzma@@Base+0x489c>
    41a8:	add	x1, x1, #0x6c
    41ac:	adrp	x2, 7000 <PyInit__lzma@@Base+0x489c>
    41b0:	add	x2, x2, #0x1d
    41b4:	bl	2440 <_PyArg_BadArgument@plt>
    41b8:	b	41cc <PyInit__lzma@@Base+0x1a68>
    41bc:	ldur	x0, [x29, #-8]
    41c0:	add	x1, sp, #0x18
    41c4:	bl	4218 <PyInit__lzma@@Base+0x1ab4>
    41c8:	stur	x0, [x29, #-24]
    41cc:	add	x8, sp, #0x18
    41d0:	ldr	x8, [x8, #8]
    41d4:	cbz	x8, 41e0 <PyInit__lzma@@Base+0x1a7c>
    41d8:	add	x0, sp, #0x18
    41dc:	bl	22c0 <PyBuffer_Release@plt>
    41e0:	ldur	x0, [x29, #-24]
    41e4:	ldp	x29, x30, [sp, #128]
    41e8:	add	sp, sp, #0x90
    41ec:	ret
    41f0:	sub	sp, sp, #0x20
    41f4:	stp	x29, x30, [sp, #16]
    41f8:	add	x29, sp, #0x10
    41fc:	str	x0, [sp, #8]
    4200:	str	x1, [sp]
    4204:	ldr	x0, [sp, #8]
    4208:	bl	4534 <PyInit__lzma@@Base+0x1dd0>
    420c:	ldp	x29, x30, [sp, #16]
    4210:	add	sp, sp, #0x20
    4214:	ret
    4218:	sub	sp, sp, #0x30
    421c:	stp	x29, x30, [sp, #32]
    4220:	add	x29, sp, #0x20
    4224:	mov	x8, xzr
    4228:	stur	x0, [x29, #-8]
    422c:	str	x1, [sp, #16]
    4230:	str	x8, [sp, #8]
    4234:	ldur	x8, [x29, #-8]
    4238:	ldr	x0, [x8, #184]
    423c:	mov	w9, wzr
    4240:	mov	w1, w9
    4244:	bl	2350 <PyThread_acquire_lock@plt>
    4248:	cbnz	w0, 4270 <PyInit__lzma@@Base+0x1b0c>
    424c:	bl	25c0 <PyEval_SaveThread@plt>
    4250:	str	x0, [sp]
    4254:	ldur	x8, [x29, #-8]
    4258:	ldr	x0, [x8, #184]
    425c:	mov	w1, #0x1                   	// #1
    4260:	bl	2350 <PyThread_acquire_lock@plt>
    4264:	ldr	x8, [sp]
    4268:	mov	x0, x8
    426c:	bl	2290 <PyEval_RestoreThread@plt>
    4270:	ldur	x8, [x29, #-8]
    4274:	ldr	w9, [x8, #176]
    4278:	cbz	w9, 4298 <PyInit__lzma@@Base+0x1b34>
    427c:	adrp	x8, 17000 <PyInit__lzma@@Base+0x1489c>
    4280:	ldr	x8, [x8, #4008]
    4284:	ldr	x0, [x8]
    4288:	adrp	x1, 7000 <PyInit__lzma@@Base+0x489c>
    428c:	add	x1, x1, #0x75
    4290:	bl	2380 <PyErr_SetString@plt>
    4294:	b	42bc <PyInit__lzma@@Base+0x1b58>
    4298:	ldur	x0, [x29, #-8]
    429c:	ldr	x8, [sp, #16]
    42a0:	ldr	x1, [x8]
    42a4:	ldr	x8, [sp, #16]
    42a8:	ldr	x2, [x8, #16]
    42ac:	mov	w9, wzr
    42b0:	mov	w3, w9
    42b4:	bl	42d8 <PyInit__lzma@@Base+0x1b74>
    42b8:	str	x0, [sp, #8]
    42bc:	ldur	x8, [x29, #-8]
    42c0:	ldr	x0, [x8, #184]
    42c4:	bl	2560 <PyThread_release_lock@plt>
    42c8:	ldr	x0, [sp, #8]
    42cc:	ldp	x29, x30, [sp, #32]
    42d0:	add	sp, sp, #0x30
    42d4:	ret
    42d8:	sub	sp, sp, #0x60
    42dc:	stp	x29, x30, [sp, #80]
    42e0:	add	x29, sp, #0x50
    42e4:	mov	x8, xzr
    42e8:	mov	x9, #0x2000                	// #8192
    42ec:	stur	x0, [x29, #-16]
    42f0:	stur	x1, [x29, #-24]
    42f4:	stur	x2, [x29, #-32]
    42f8:	stur	w3, [x29, #-36]
    42fc:	str	xzr, [sp, #32]
    4300:	mov	x0, x8
    4304:	mov	x1, x9
    4308:	bl	2310 <PyBytes_FromStringAndSize@plt>
    430c:	str	x0, [sp, #24]
    4310:	ldr	x8, [sp, #24]
    4314:	cbnz	x8, 4324 <PyInit__lzma@@Base+0x1bc0>
    4318:	mov	x8, xzr
    431c:	stur	x8, [x29, #-8]
    4320:	b	44ac <PyInit__lzma@@Base+0x1d48>
    4324:	ldur	x8, [x29, #-24]
    4328:	ldur	x9, [x29, #-16]
    432c:	str	x8, [x9, #40]
    4330:	ldur	x8, [x29, #-32]
    4334:	ldur	x9, [x29, #-16]
    4338:	str	x8, [x9, #48]
    433c:	ldr	x8, [sp, #24]
    4340:	add	x8, x8, #0x20
    4344:	ldur	x9, [x29, #-16]
    4348:	str	x8, [x9, #64]
    434c:	ldr	x8, [sp, #24]
    4350:	ldr	x8, [x8, #16]
    4354:	ldur	x9, [x29, #-16]
    4358:	str	x8, [x9, #72]
    435c:	bl	25c0 <PyEval_SaveThread@plt>
    4360:	str	x0, [sp, #8]
    4364:	ldur	x8, [x29, #-16]
    4368:	add	x0, x8, #0x28
    436c:	ldur	w1, [x29, #-36]
    4370:	bl	2280 <lzma_code@plt>
    4374:	str	w0, [sp, #20]
    4378:	ldur	x8, [x29, #-16]
    437c:	ldr	x8, [x8, #64]
    4380:	ldr	x9, [sp, #24]
    4384:	add	x9, x9, #0x20
    4388:	subs	x8, x8, x9
    438c:	str	x8, [sp, #32]
    4390:	ldr	w10, [sp, #20]
    4394:	cmp	w10, #0xa
    4398:	b.ne	43bc <PyInit__lzma@@Base+0x1c58>  // b.any
    439c:	ldur	x8, [x29, #-32]
    43a0:	cbnz	x8, 43bc <PyInit__lzma@@Base+0x1c58>
    43a4:	ldur	x8, [x29, #-16]
    43a8:	ldr	x8, [x8, #72]
    43ac:	cmp	x8, #0x0
    43b0:	cset	w9, ls  // ls = plast
    43b4:	tbnz	w9, #0, 43bc <PyInit__lzma@@Base+0x1c58>
    43b8:	str	wzr, [sp, #20]
    43bc:	ldr	x0, [sp, #8]
    43c0:	bl	2290 <PyEval_RestoreThread@plt>
    43c4:	ldr	w0, [sp, #20]
    43c8:	bl	384c <PyInit__lzma@@Base+0x10e8>
    43cc:	cbz	w0, 43d4 <PyInit__lzma@@Base+0x1c70>
    43d0:	b	449c <PyInit__lzma@@Base+0x1d38>
    43d4:	ldur	w8, [x29, #-36]
    43d8:	cbnz	w8, 43e8 <PyInit__lzma@@Base+0x1c84>
    43dc:	ldur	x8, [x29, #-16]
    43e0:	ldr	x8, [x8, #48]
    43e4:	cbz	x8, 4400 <PyInit__lzma@@Base+0x1c9c>
    43e8:	ldur	w8, [x29, #-36]
    43ec:	cmp	w8, #0x3
    43f0:	b.ne	4404 <PyInit__lzma@@Base+0x1ca0>  // b.any
    43f4:	ldr	w8, [sp, #20]
    43f8:	cmp	w8, #0x1
    43fc:	b.ne	4404 <PyInit__lzma@@Base+0x1ca0>  // b.any
    4400:	b	4460 <PyInit__lzma@@Base+0x1cfc>
    4404:	ldur	x8, [x29, #-16]
    4408:	ldr	x8, [x8, #72]
    440c:	cbnz	x8, 445c <PyInit__lzma@@Base+0x1cf8>
    4410:	add	x0, sp, #0x18
    4414:	mov	x1, #0xffffffffffffffff    	// #-1
    4418:	bl	44bc <PyInit__lzma@@Base+0x1d58>
    441c:	mov	w8, #0xffffffff            	// #-1
    4420:	cmp	w0, w8
    4424:	b.ne	442c <PyInit__lzma@@Base+0x1cc8>  // b.any
    4428:	b	449c <PyInit__lzma@@Base+0x1d38>
    442c:	ldr	x8, [sp, #24]
    4430:	add	x8, x8, #0x20
    4434:	ldr	x9, [sp, #32]
    4438:	add	x8, x8, x9
    443c:	ldur	x9, [x29, #-16]
    4440:	str	x8, [x9, #64]
    4444:	ldr	x8, [sp, #24]
    4448:	ldr	x8, [x8, #16]
    444c:	ldr	x9, [sp, #32]
    4450:	subs	x8, x8, x9
    4454:	ldur	x9, [x29, #-16]
    4458:	str	x8, [x9, #72]
    445c:	b	435c <PyInit__lzma@@Base+0x1bf8>
    4460:	ldr	x8, [sp, #32]
    4464:	ldr	x9, [sp, #24]
    4468:	ldr	x9, [x9, #16]
    446c:	cmp	x8, x9
    4470:	b.eq	4490 <PyInit__lzma@@Base+0x1d2c>  // b.none
    4474:	ldr	x1, [sp, #32]
    4478:	add	x0, sp, #0x18
    447c:	bl	2270 <_PyBytes_Resize@plt>
    4480:	mov	w8, #0xffffffff            	// #-1
    4484:	cmp	w0, w8
    4488:	b.ne	4490 <PyInit__lzma@@Base+0x1d2c>  // b.any
    448c:	b	449c <PyInit__lzma@@Base+0x1d38>
    4490:	ldr	x8, [sp, #24]
    4494:	stur	x8, [x29, #-8]
    4498:	b	44ac <PyInit__lzma@@Base+0x1d48>
    449c:	ldr	x0, [sp, #24]
    44a0:	bl	39c4 <PyInit__lzma@@Base+0x1260>
    44a4:	mov	x8, xzr
    44a8:	stur	x8, [x29, #-8]
    44ac:	ldur	x0, [x29, #-8]
    44b0:	ldp	x29, x30, [sp, #80]
    44b4:	add	sp, sp, #0x60
    44b8:	ret
    44bc:	sub	sp, sp, #0x30
    44c0:	stp	x29, x30, [sp, #32]
    44c4:	add	x29, sp, #0x20
    44c8:	stur	x0, [x29, #-8]
    44cc:	str	x1, [sp, #16]
    44d0:	ldur	x8, [x29, #-8]
    44d4:	ldr	x8, [x8]
    44d8:	ldr	x8, [x8, #16]
    44dc:	str	x8, [sp, #8]
    44e0:	ldr	x8, [sp, #8]
    44e4:	ldr	x9, [sp, #8]
    44e8:	add	x8, x8, x9, asr #3
    44ec:	add	x8, x8, #0x6
    44f0:	str	x8, [sp]
    44f4:	ldr	x8, [sp, #16]
    44f8:	cmp	x8, #0x0
    44fc:	cset	w10, le
    4500:	tbnz	w10, #0, 451c <PyInit__lzma@@Base+0x1db8>
    4504:	ldr	x8, [sp]
    4508:	ldr	x9, [sp, #16]
    450c:	cmp	x8, x9
    4510:	b.le	451c <PyInit__lzma@@Base+0x1db8>
    4514:	ldr	x8, [sp, #16]
    4518:	str	x8, [sp]
    451c:	ldur	x0, [x29, #-8]
    4520:	ldr	x1, [sp]
    4524:	bl	2270 <_PyBytes_Resize@plt>
    4528:	ldp	x29, x30, [sp, #32]
    452c:	add	sp, sp, #0x30
    4530:	ret
    4534:	sub	sp, sp, #0x30
    4538:	stp	x29, x30, [sp, #32]
    453c:	add	x29, sp, #0x20
    4540:	mov	x8, xzr
    4544:	stur	x0, [x29, #-8]
    4548:	str	x8, [sp, #16]
    454c:	ldur	x8, [x29, #-8]
    4550:	ldr	x0, [x8, #184]
    4554:	mov	w9, wzr
    4558:	mov	w1, w9
    455c:	bl	2350 <PyThread_acquire_lock@plt>
    4560:	cbnz	w0, 4588 <PyInit__lzma@@Base+0x1e24>
    4564:	bl	25c0 <PyEval_SaveThread@plt>
    4568:	str	x0, [sp, #8]
    456c:	ldur	x8, [x29, #-8]
    4570:	ldr	x0, [x8, #184]
    4574:	mov	w1, #0x1                   	// #1
    4578:	bl	2350 <PyThread_acquire_lock@plt>
    457c:	ldr	x8, [sp, #8]
    4580:	mov	x0, x8
    4584:	bl	2290 <PyEval_RestoreThread@plt>
    4588:	ldur	x8, [x29, #-8]
    458c:	ldr	w9, [x8, #176]
    4590:	cbz	w9, 45b0 <PyInit__lzma@@Base+0x1e4c>
    4594:	adrp	x8, 17000 <PyInit__lzma@@Base+0x1489c>
    4598:	ldr	x8, [x8, #4008]
    459c:	ldr	x0, [x8]
    45a0:	adrp	x1, 7000 <PyInit__lzma@@Base+0x489c>
    45a4:	add	x1, x1, #0x91
    45a8:	bl	2380 <PyErr_SetString@plt>
    45ac:	b	45d8 <PyInit__lzma@@Base+0x1e74>
    45b0:	ldur	x8, [x29, #-8]
    45b4:	mov	w9, #0x1                   	// #1
    45b8:	str	w9, [x8, #176]
    45bc:	ldur	x0, [x29, #-8]
    45c0:	mov	x8, xzr
    45c4:	mov	x1, x8
    45c8:	mov	x2, x8
    45cc:	mov	w3, #0x3                   	// #3
    45d0:	bl	42d8 <PyInit__lzma@@Base+0x1b74>
    45d4:	str	x0, [sp, #16]
    45d8:	ldur	x8, [x29, #-8]
    45dc:	ldr	x0, [x8, #184]
    45e0:	bl	2560 <PyThread_release_lock@plt>
    45e4:	ldr	x0, [sp, #16]
    45e8:	ldp	x29, x30, [sp, #32]
    45ec:	add	sp, sp, #0x30
    45f0:	ret
    45f4:	sub	sp, sp, #0x30
    45f8:	stp	x29, x30, [sp, #32]
    45fc:	add	x29, sp, #0x20
    4600:	str	x0, [sp, #16]
    4604:	str	x1, [sp, #8]
    4608:	str	x2, [sp]
    460c:	ldr	x8, [sp]
    4610:	cbz	x8, 4638 <PyInit__lzma@@Base+0x1ed4>
    4614:	ldr	x8, [sp, #8]
    4618:	ldr	x9, [sp]
    461c:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
    4620:	udiv	x9, x10, x9
    4624:	cmp	x8, x9
    4628:	b.ls	4638 <PyInit__lzma@@Base+0x1ed4>  // b.plast
    462c:	mov	x8, xzr
    4630:	stur	x8, [x29, #-8]
    4634:	b	464c <PyInit__lzma@@Base+0x1ee8>
    4638:	ldr	x8, [sp, #8]
    463c:	ldr	x9, [sp]
    4640:	mul	x0, x8, x9
    4644:	bl	22f0 <PyMem_RawMalloc@plt>
    4648:	stur	x0, [x29, #-8]
    464c:	ldur	x0, [x29, #-8]
    4650:	ldp	x29, x30, [sp, #32]
    4654:	add	sp, sp, #0x30
    4658:	ret
    465c:	sub	sp, sp, #0x20
    4660:	stp	x29, x30, [sp, #16]
    4664:	add	x29, sp, #0x10
    4668:	str	x0, [sp, #8]
    466c:	str	x1, [sp]
    4670:	ldr	x0, [sp]
    4674:	bl	2510 <PyMem_RawFree@plt>
    4678:	ldp	x29, x30, [sp, #16]
    467c:	add	sp, sp, #0x20
    4680:	ret
    4684:	sub	sp, sp, #0x90
    4688:	stp	x29, x30, [sp, #128]
    468c:	add	x29, sp, #0x80
    4690:	adrp	x8, 17000 <PyInit__lzma@@Base+0x1489c>
    4694:	ldr	x8, [x8, #4056]
    4698:	stur	x0, [x29, #-16]
    469c:	stur	w1, [x29, #-20]
    46a0:	stur	w2, [x29, #-24]
    46a4:	stur	x3, [x29, #-32]
    46a8:	ldur	x9, [x29, #-32]
    46ac:	cmp	x9, x8
    46b0:	b.ne	46cc <PyInit__lzma@@Base+0x1f68>  // b.any
    46b4:	ldur	x0, [x29, #-16]
    46b8:	ldur	w1, [x29, #-24]
    46bc:	ldur	w2, [x29, #-20]
    46c0:	bl	2360 <lzma_easy_encoder@plt>
    46c4:	stur	w0, [x29, #-36]
    46c8:	b	4714 <PyInit__lzma@@Base+0x1fb0>
    46cc:	ldur	x1, [x29, #-32]
    46d0:	add	x0, sp, #0x8
    46d4:	bl	4934 <PyInit__lzma@@Base+0x21d0>
    46d8:	mov	w8, #0xffffffff            	// #-1
    46dc:	cmp	w0, w8
    46e0:	b.ne	46f0 <PyInit__lzma@@Base+0x1f8c>  // b.any
    46e4:	mov	w8, #0xffffffff            	// #-1
    46e8:	stur	w8, [x29, #-4]
    46ec:	b	4730 <PyInit__lzma@@Base+0x1fcc>
    46f0:	ldur	x0, [x29, #-16]
    46f4:	ldur	w2, [x29, #-20]
    46f8:	add	x8, sp, #0x8
    46fc:	mov	x1, x8
    4700:	str	x8, [sp]
    4704:	bl	2610 <lzma_stream_encoder@plt>
    4708:	stur	w0, [x29, #-36]
    470c:	ldr	x0, [sp]
    4710:	bl	4a7c <PyInit__lzma@@Base+0x2318>
    4714:	ldur	w0, [x29, #-36]
    4718:	bl	384c <PyInit__lzma@@Base+0x10e8>
    471c:	cbz	w0, 472c <PyInit__lzma@@Base+0x1fc8>
    4720:	mov	w8, #0xffffffff            	// #-1
    4724:	stur	w8, [x29, #-4]
    4728:	b	4730 <PyInit__lzma@@Base+0x1fcc>
    472c:	stur	wzr, [x29, #-4]
    4730:	ldur	w0, [x29, #-4]
    4734:	ldp	x29, x30, [sp, #128]
    4738:	add	sp, sp, #0x90
    473c:	ret
    4740:	sub	sp, sp, #0x100
    4744:	stp	x29, x30, [sp, #240]
    4748:	add	x29, sp, #0xf0
    474c:	adrp	x8, 17000 <PyInit__lzma@@Base+0x1489c>
    4750:	ldr	x8, [x8, #4056]
    4754:	stur	x0, [x29, #-16]
    4758:	stur	w1, [x29, #-20]
    475c:	stur	x2, [x29, #-32]
    4760:	ldur	x9, [x29, #-32]
    4764:	cmp	x9, x8
    4768:	b.ne	47bc <PyInit__lzma@@Base+0x2058>  // b.any
    476c:	ldur	w1, [x29, #-20]
    4770:	add	x0, sp, #0x58
    4774:	bl	2650 <lzma_lzma_preset@plt>
    4778:	and	w8, w0, #0xff
    477c:	cbz	w8, 47a8 <PyInit__lzma@@Base+0x2044>
    4780:	adrp	x8, 18000 <PyInit__lzma@@Base+0x1589c>
    4784:	add	x8, x8, #0x9c8
    4788:	ldr	x0, [x8]
    478c:	ldur	w2, [x29, #-20]
    4790:	adrp	x1, 6000 <PyInit__lzma@@Base+0x389c>
    4794:	add	x1, x1, #0xded
    4798:	bl	25f0 <PyErr_Format@plt>
    479c:	mov	w9, #0xffffffff            	// #-1
    47a0:	stur	w9, [x29, #-4]
    47a4:	b	4868 <PyInit__lzma@@Base+0x2104>
    47a8:	ldur	x0, [x29, #-16]
    47ac:	add	x1, sp, #0x58
    47b0:	bl	2590 <lzma_alone_encoder@plt>
    47b4:	stur	w0, [x29, #-36]
    47b8:	b	4844 <PyInit__lzma@@Base+0x20e0>
    47bc:	ldur	x1, [x29, #-32]
    47c0:	add	x0, sp, #0x8
    47c4:	bl	4934 <PyInit__lzma@@Base+0x21d0>
    47c8:	mov	w8, #0xffffffff            	// #-1
    47cc:	cmp	w0, w8
    47d0:	b.ne	47e0 <PyInit__lzma@@Base+0x207c>  // b.any
    47d4:	mov	w8, #0xffffffff            	// #-1
    47d8:	stur	w8, [x29, #-4]
    47dc:	b	4868 <PyInit__lzma@@Base+0x2104>
    47e0:	ldr	x8, [sp, #8]
    47e4:	mov	x9, #0x1                   	// #1
    47e8:	movk	x9, #0x4000, lsl #48
    47ec:	cmp	x8, x9
    47f0:	b.ne	481c <PyInit__lzma@@Base+0x20b8>  // b.any
    47f4:	ldr	x8, [sp, #24]
    47f8:	mov	x9, #0xffffffffffffffff    	// #-1
    47fc:	cmp	x8, x9
    4800:	b.ne	481c <PyInit__lzma@@Base+0x20b8>  // b.any
    4804:	ldur	x0, [x29, #-16]
    4808:	add	x8, sp, #0x8
    480c:	ldr	x1, [x8, #8]
    4810:	bl	2590 <lzma_alone_encoder@plt>
    4814:	stur	w0, [x29, #-36]
    4818:	b	483c <PyInit__lzma@@Base+0x20d8>
    481c:	adrp	x8, 17000 <PyInit__lzma@@Base+0x1489c>
    4820:	ldr	x8, [x8, #4008]
    4824:	ldr	x0, [x8]
    4828:	adrp	x1, 7000 <PyInit__lzma@@Base+0x489c>
    482c:	add	x1, x1, #0x194
    4830:	bl	2380 <PyErr_SetString@plt>
    4834:	mov	w9, #0xb                   	// #11
    4838:	stur	w9, [x29, #-36]
    483c:	add	x0, sp, #0x8
    4840:	bl	4a7c <PyInit__lzma@@Base+0x2318>
    4844:	bl	24c0 <PyErr_Occurred@plt>
    4848:	cbnz	x0, 4858 <PyInit__lzma@@Base+0x20f4>
    484c:	ldur	w0, [x29, #-36]
    4850:	bl	384c <PyInit__lzma@@Base+0x10e8>
    4854:	cbz	w0, 4864 <PyInit__lzma@@Base+0x2100>
    4858:	mov	w8, #0xffffffff            	// #-1
    485c:	stur	w8, [x29, #-4]
    4860:	b	4868 <PyInit__lzma@@Base+0x2104>
    4864:	stur	wzr, [x29, #-4]
    4868:	ldur	w0, [x29, #-4]
    486c:	ldp	x29, x30, [sp, #240]
    4870:	add	sp, sp, #0x100
    4874:	ret
    4878:	sub	sp, sp, #0x90
    487c:	stp	x29, x30, [sp, #128]
    4880:	add	x29, sp, #0x80
    4884:	adrp	x8, 17000 <PyInit__lzma@@Base+0x1489c>
    4888:	ldr	x8, [x8, #4056]
    488c:	stur	x0, [x29, #-16]
    4890:	stur	x1, [x29, #-24]
    4894:	ldur	x9, [x29, #-24]
    4898:	cmp	x9, x8
    489c:	b.ne	48c4 <PyInit__lzma@@Base+0x2160>  // b.any
    48a0:	adrp	x8, 17000 <PyInit__lzma@@Base+0x1489c>
    48a4:	ldr	x8, [x8, #4008]
    48a8:	ldr	x0, [x8]
    48ac:	adrp	x1, 7000 <PyInit__lzma@@Base+0x489c>
    48b0:	add	x1, x1, #0x1da
    48b4:	bl	2380 <PyErr_SetString@plt>
    48b8:	mov	w9, #0xffffffff            	// #-1
    48bc:	stur	w9, [x29, #-4]
    48c0:	b	4924 <PyInit__lzma@@Base+0x21c0>
    48c4:	ldur	x1, [x29, #-24]
    48c8:	add	x0, sp, #0x18
    48cc:	bl	4934 <PyInit__lzma@@Base+0x21d0>
    48d0:	mov	w8, #0xffffffff            	// #-1
    48d4:	cmp	w0, w8
    48d8:	b.ne	48e8 <PyInit__lzma@@Base+0x2184>  // b.any
    48dc:	mov	w8, #0xffffffff            	// #-1
    48e0:	stur	w8, [x29, #-4]
    48e4:	b	4924 <PyInit__lzma@@Base+0x21c0>
    48e8:	ldur	x0, [x29, #-16]
    48ec:	add	x8, sp, #0x18
    48f0:	mov	x1, x8
    48f4:	str	x8, [sp, #8]
    48f8:	bl	23a0 <lzma_raw_encoder@plt>
    48fc:	str	w0, [sp, #20]
    4900:	ldr	x0, [sp, #8]
    4904:	bl	4a7c <PyInit__lzma@@Base+0x2318>
    4908:	ldr	w0, [sp, #20]
    490c:	bl	384c <PyInit__lzma@@Base+0x10e8>
    4910:	cbz	w0, 4920 <PyInit__lzma@@Base+0x21bc>
    4914:	mov	w8, #0xffffffff            	// #-1
    4918:	stur	w8, [x29, #-4]
    491c:	b	4924 <PyInit__lzma@@Base+0x21c0>
    4920:	stur	wzr, [x29, #-4]
    4924:	ldur	w0, [x29, #-4]
    4928:	ldp	x29, x30, [sp, #128]
    492c:	add	sp, sp, #0x90
    4930:	ret
    4934:	sub	sp, sp, #0x50
    4938:	stp	x29, x30, [sp, #64]
    493c:	add	x29, sp, #0x40
    4940:	mov	x8, #0xffffffffffffffff    	// #-1
    4944:	stur	x0, [x29, #-16]
    4948:	stur	x1, [x29, #-24]
    494c:	ldur	x0, [x29, #-24]
    4950:	str	x8, [sp]
    4954:	bl	2450 <PySequence_Size@plt>
    4958:	str	x0, [sp, #24]
    495c:	ldr	x8, [sp, #24]
    4960:	ldr	x9, [sp]
    4964:	cmp	x8, x9
    4968:	b.ne	4978 <PyInit__lzma@@Base+0x2214>  // b.any
    496c:	mov	w8, #0xffffffff            	// #-1
    4970:	stur	w8, [x29, #-4]
    4974:	b	4a6c <PyInit__lzma@@Base+0x2308>
    4978:	ldr	x8, [sp, #24]
    497c:	cmp	x8, #0x4
    4980:	b.le	49ac <PyInit__lzma@@Base+0x2248>
    4984:	adrp	x8, 17000 <PyInit__lzma@@Base+0x1489c>
    4988:	ldr	x8, [x8, #4008]
    498c:	ldr	x0, [x8]
    4990:	adrp	x1, 7000 <PyInit__lzma@@Base+0x489c>
    4994:	add	x1, x1, #0x160
    4998:	mov	w2, #0x4                   	// #4
    499c:	bl	25f0 <PyErr_Format@plt>
    49a0:	mov	w9, #0xffffffff            	// #-1
    49a4:	stur	w9, [x29, #-4]
    49a8:	b	4a6c <PyInit__lzma@@Base+0x2308>
    49ac:	str	xzr, [sp, #32]
    49b0:	ldr	x8, [sp, #32]
    49b4:	ldr	x9, [sp, #24]
    49b8:	cmp	x8, x9
    49bc:	b.ge	4a50 <PyInit__lzma@@Base+0x22ec>  // b.tcont
    49c0:	mov	w8, #0x1                   	// #1
    49c4:	str	w8, [sp, #20]
    49c8:	ldur	x0, [x29, #-24]
    49cc:	ldr	x1, [sp, #32]
    49d0:	bl	2400 <PySequence_GetItem@plt>
    49d4:	str	x0, [sp, #8]
    49d8:	ldr	x9, [sp, #8]
    49dc:	cbz	x9, 4a00 <PyInit__lzma@@Base+0x229c>
    49e0:	ldr	x0, [sp, #8]
    49e4:	ldur	x8, [x29, #-16]
    49e8:	ldr	x9, [sp, #32]
    49ec:	mov	x10, #0x10                  	// #16
    49f0:	mul	x9, x10, x9
    49f4:	add	x1, x8, x9
    49f8:	bl	2ff4 <PyInit__lzma@@Base+0x890>
    49fc:	cbnz	w0, 4a04 <PyInit__lzma@@Base+0x22a0>
    4a00:	str	wzr, [sp, #20]
    4a04:	ldr	x0, [sp, #8]
    4a08:	bl	39c4 <PyInit__lzma@@Base+0x1260>
    4a0c:	ldr	w8, [sp, #20]
    4a10:	cbnz	w8, 4a40 <PyInit__lzma@@Base+0x22dc>
    4a14:	ldur	x8, [x29, #-16]
    4a18:	ldr	x9, [sp, #32]
    4a1c:	mov	x10, #0x10                  	// #16
    4a20:	mul	x9, x10, x9
    4a24:	mov	x10, #0xffffffffffffffff    	// #-1
    4a28:	str	x10, [x8, x9]
    4a2c:	ldur	x0, [x29, #-16]
    4a30:	bl	4a7c <PyInit__lzma@@Base+0x2318>
    4a34:	mov	w11, #0xffffffff            	// #-1
    4a38:	stur	w11, [x29, #-4]
    4a3c:	b	4a6c <PyInit__lzma@@Base+0x2308>
    4a40:	ldr	x8, [sp, #32]
    4a44:	add	x8, x8, #0x1
    4a48:	str	x8, [sp, #32]
    4a4c:	b	49b0 <PyInit__lzma@@Base+0x224c>
    4a50:	ldur	x8, [x29, #-16]
    4a54:	ldr	x9, [sp, #24]
    4a58:	mov	x10, #0x10                  	// #16
    4a5c:	mul	x9, x10, x9
    4a60:	mov	x10, #0xffffffffffffffff    	// #-1
    4a64:	str	x10, [x8, x9]
    4a68:	stur	wzr, [x29, #-4]
    4a6c:	ldur	w0, [x29, #-4]
    4a70:	ldp	x29, x30, [sp, #64]
    4a74:	add	sp, sp, #0x50
    4a78:	ret
    4a7c:	sub	sp, sp, #0x20
    4a80:	stp	x29, x30, [sp, #16]
    4a84:	add	x29, sp, #0x10
    4a88:	str	x0, [sp, #8]
    4a8c:	str	wzr, [sp, #4]
    4a90:	ldr	x8, [sp, #8]
    4a94:	ldrsw	x9, [sp, #4]
    4a98:	mov	x10, #0x10                  	// #16
    4a9c:	mul	x9, x10, x9
    4aa0:	ldr	x8, [x8, x9]
    4aa4:	mov	x9, #0xffffffffffffffff    	// #-1
    4aa8:	cmp	x8, x9
    4aac:	b.eq	4adc <PyInit__lzma@@Base+0x2378>  // b.none
    4ab0:	ldr	x8, [sp, #8]
    4ab4:	ldrsw	x9, [sp, #4]
    4ab8:	mov	x10, #0x10                  	// #16
    4abc:	mul	x9, x10, x9
    4ac0:	add	x8, x8, x9
    4ac4:	ldr	x0, [x8, #8]
    4ac8:	bl	22a0 <PyMem_Free@plt>
    4acc:	ldr	w8, [sp, #4]
    4ad0:	add	w8, w8, #0x1
    4ad4:	str	w8, [sp, #4]
    4ad8:	b	4a90 <PyInit__lzma@@Base+0x232c>
    4adc:	ldp	x29, x30, [sp, #16]
    4ae0:	add	sp, sp, #0x20
    4ae4:	ret
    4ae8:	sub	sp, sp, #0x20
    4aec:	stp	x29, x30, [sp, #16]
    4af0:	add	x29, sp, #0x10
    4af4:	str	x0, [sp, #8]
    4af8:	ldr	x8, [sp, #8]
    4afc:	ldr	x8, [x8, #200]
    4b00:	cbz	x8, 4b10 <PyInit__lzma@@Base+0x23ac>
    4b04:	ldr	x8, [sp, #8]
    4b08:	ldr	x0, [x8, #200]
    4b0c:	bl	22a0 <PyMem_Free@plt>
    4b10:	ldr	x8, [sp, #8]
    4b14:	add	x0, x8, #0x28
    4b18:	bl	2500 <lzma_end@plt>
    4b1c:	ldr	x8, [sp, #8]
    4b20:	ldr	x8, [x8, #184]
    4b24:	str	x8, [sp]
    4b28:	ldr	x8, [sp]
    4b2c:	cbz	x8, 4b50 <PyInit__lzma@@Base+0x23ec>
    4b30:	ldr	x8, [sp, #8]
    4b34:	mov	x9, xzr
    4b38:	str	x9, [x8, #184]
    4b3c:	ldr	x2, [sp]
    4b40:	adrp	x0, 6000 <PyInit__lzma@@Base+0x389c>
    4b44:	add	x0, x0, #0xd78
    4b48:	mov	w1, #0x4cd                 	// #1229
    4b4c:	bl	3290 <PyInit__lzma@@Base+0xb2c>
    4b50:	ldr	x8, [sp, #8]
    4b54:	ldr	x8, [x8, #216]
    4b58:	cbz	x8, 4b68 <PyInit__lzma@@Base+0x2404>
    4b5c:	ldr	x8, [sp, #8]
    4b60:	ldr	x0, [x8, #216]
    4b64:	bl	2670 <PyThread_free_lock@plt>
    4b68:	ldr	x8, [sp, #8]
    4b6c:	ldr	x8, [x8, #8]
    4b70:	ldr	x8, [x8, #320]
    4b74:	ldr	x0, [sp, #8]
    4b78:	blr	x8
    4b7c:	ldp	x29, x30, [sp, #16]
    4b80:	add	sp, sp, #0x20
    4b84:	ret
    4b88:	sub	sp, sp, #0xa0
    4b8c:	stp	x29, x30, [sp, #144]
    4b90:	add	x29, sp, #0x90
    4b94:	mov	w8, #0xffffffff            	// #-1
    4b98:	stur	x0, [x29, #-8]
    4b9c:	stur	x1, [x29, #-16]
    4ba0:	stur	x2, [x29, #-24]
    4ba4:	stur	w8, [x29, #-28]
    4ba8:	ldur	x9, [x29, #-16]
    4bac:	ldr	x9, [x9, #16]
    4bb0:	str	x9, [sp, #72]
    4bb4:	ldr	x9, [sp, #72]
    4bb8:	ldur	x10, [x29, #-24]
    4bbc:	str	x9, [sp, #32]
    4bc0:	cbz	x10, 4bd4 <PyInit__lzma@@Base+0x2470>
    4bc4:	ldur	x8, [x29, #-24]
    4bc8:	ldr	x8, [x8, #16]
    4bcc:	str	x8, [sp, #24]
    4bd0:	b	4bdc <PyInit__lzma@@Base+0x2478>
    4bd4:	mov	x8, xzr
    4bd8:	str	x8, [sp, #24]
    4bdc:	ldr	x8, [sp, #24]
    4be0:	ldr	x9, [sp, #32]
    4be4:	add	x8, x9, x8
    4be8:	subs	x8, x8, #0x0
    4bec:	str	x8, [sp, #64]
    4bf0:	str	wzr, [sp, #60]
    4bf4:	adrp	x8, 17000 <PyInit__lzma@@Base+0x1489c>
    4bf8:	ldr	x8, [x8, #4056]
    4bfc:	str	x8, [sp, #48]
    4c00:	str	x8, [sp, #40]
    4c04:	ldur	x8, [x29, #-24]
    4c08:	cbnz	x8, 4c48 <PyInit__lzma@@Base+0x24e4>
    4c0c:	ldr	x8, [sp, #72]
    4c10:	mov	x9, xzr
    4c14:	cmp	x9, x8
    4c18:	cset	w10, gt
    4c1c:	tbnz	w10, #0, 4c48 <PyInit__lzma@@Base+0x24e4>
    4c20:	ldr	x8, [sp, #72]
    4c24:	cmp	x8, #0x3
    4c28:	b.gt	4c48 <PyInit__lzma@@Base+0x24e4>
    4c2c:	ldur	x8, [x29, #-16]
    4c30:	add	x8, x8, #0x18
    4c34:	cbz	x8, 4c48 <PyInit__lzma@@Base+0x24e4>
    4c38:	ldur	x8, [x29, #-16]
    4c3c:	add	x8, x8, #0x18
    4c40:	str	x8, [sp, #16]
    4c44:	b	4c8c <PyInit__lzma@@Base+0x2528>
    4c48:	ldur	x8, [x29, #-16]
    4c4c:	add	x0, x8, #0x18
    4c50:	ldr	x1, [sp, #72]
    4c54:	ldur	x2, [x29, #-24]
    4c58:	mov	x8, xzr
    4c5c:	mov	x3, x8
    4c60:	adrp	x4, 18000 <PyInit__lzma@@Base+0x1589c>
    4c64:	add	x4, x4, #0x978
    4c68:	mov	w9, wzr
    4c6c:	mov	w5, w9
    4c70:	mov	w6, #0x3                   	// #3
    4c74:	mov	w7, w9
    4c78:	mov	x8, sp
    4c7c:	sub	x10, x29, #0x38
    4c80:	str	x10, [x8]
    4c84:	bl	2370 <_PyArg_UnpackKeywords@plt>
    4c88:	str	x0, [sp, #16]
    4c8c:	ldr	x8, [sp, #16]
    4c90:	stur	x8, [x29, #-64]
    4c94:	ldur	x8, [x29, #-64]
    4c98:	cbnz	x8, 4ca0 <PyInit__lzma@@Base+0x253c>
    4c9c:	b	4d9c <PyInit__lzma@@Base+0x2638>
    4ca0:	ldr	x8, [sp, #64]
    4ca4:	cbnz	x8, 4cac <PyInit__lzma@@Base+0x2548>
    4ca8:	b	4d84 <PyInit__lzma@@Base+0x2620>
    4cac:	ldur	x8, [x29, #-64]
    4cb0:	ldr	x8, [x8]
    4cb4:	cbz	x8, 4d4c <PyInit__lzma@@Base+0x25e8>
    4cb8:	ldur	x8, [x29, #-64]
    4cbc:	ldr	x8, [x8]
    4cc0:	ldr	x8, [x8, #8]
    4cc4:	adrp	x9, 17000 <PyInit__lzma@@Base+0x1489c>
    4cc8:	ldr	x9, [x9, #3984]
    4ccc:	cmp	x8, x9
    4cd0:	b.eq	4cf0 <PyInit__lzma@@Base+0x258c>  // b.none
    4cd4:	ldur	x8, [x29, #-64]
    4cd8:	ldr	x8, [x8]
    4cdc:	ldr	x0, [x8, #8]
    4ce0:	adrp	x1, 17000 <PyInit__lzma@@Base+0x1489c>
    4ce4:	ldr	x1, [x1, #3984]
    4ce8:	bl	25e0 <PyType_IsSubtype@plt>
    4cec:	cbz	w0, 4d0c <PyInit__lzma@@Base+0x25a8>
    4cf0:	adrp	x8, 17000 <PyInit__lzma@@Base+0x1489c>
    4cf4:	ldr	x8, [x8, #4016]
    4cf8:	ldr	x0, [x8]
    4cfc:	adrp	x1, 6000 <PyInit__lzma@@Base+0x389c>
    4d00:	add	x1, x1, #0xcf3
    4d04:	bl	2380 <PyErr_SetString@plt>
    4d08:	b	4d9c <PyInit__lzma@@Base+0x2638>
    4d0c:	ldur	x8, [x29, #-64]
    4d10:	ldr	x0, [x8]
    4d14:	bl	2640 <_PyLong_AsInt@plt>
    4d18:	str	w0, [sp, #60]
    4d1c:	ldr	w9, [sp, #60]
    4d20:	mov	w10, #0xffffffff            	// #-1
    4d24:	cmp	w9, w10
    4d28:	b.ne	4d38 <PyInit__lzma@@Base+0x25d4>  // b.any
    4d2c:	bl	24c0 <PyErr_Occurred@plt>
    4d30:	cbz	x0, 4d38 <PyInit__lzma@@Base+0x25d4>
    4d34:	b	4d9c <PyInit__lzma@@Base+0x2638>
    4d38:	ldr	x8, [sp, #64]
    4d3c:	subs	x8, x8, #0x1
    4d40:	str	x8, [sp, #64]
    4d44:	cbnz	x8, 4d4c <PyInit__lzma@@Base+0x25e8>
    4d48:	b	4d84 <PyInit__lzma@@Base+0x2620>
    4d4c:	ldur	x8, [x29, #-64]
    4d50:	ldr	x8, [x8, #8]
    4d54:	cbz	x8, 4d78 <PyInit__lzma@@Base+0x2614>
    4d58:	ldur	x8, [x29, #-64]
    4d5c:	ldr	x8, [x8, #8]
    4d60:	str	x8, [sp, #48]
    4d64:	ldr	x8, [sp, #64]
    4d68:	subs	x8, x8, #0x1
    4d6c:	str	x8, [sp, #64]
    4d70:	cbnz	x8, 4d78 <PyInit__lzma@@Base+0x2614>
    4d74:	b	4d84 <PyInit__lzma@@Base+0x2620>
    4d78:	ldur	x8, [x29, #-64]
    4d7c:	ldr	x8, [x8, #16]
    4d80:	str	x8, [sp, #40]
    4d84:	ldur	x0, [x29, #-8]
    4d88:	ldr	w1, [sp, #60]
    4d8c:	ldr	x2, [sp, #48]
    4d90:	ldr	x3, [sp, #40]
    4d94:	bl	56ac <PyInit__lzma@@Base+0x2f48>
    4d98:	stur	w0, [x29, #-28]
    4d9c:	ldur	w0, [x29, #-28]
    4da0:	ldp	x29, x30, [sp, #144]
    4da4:	add	sp, sp, #0xa0
    4da8:	ret
    4dac:	sub	sp, sp, #0xe0
    4db0:	stp	x29, x30, [sp, #208]
    4db4:	add	x29, sp, #0xd0
    4db8:	mov	x8, xzr
    4dbc:	stur	x0, [x29, #-8]
    4dc0:	stur	x1, [x29, #-16]
    4dc4:	stur	x2, [x29, #-24]
    4dc8:	stur	x3, [x29, #-32]
    4dcc:	stur	x8, [x29, #-40]
    4dd0:	ldur	x8, [x29, #-24]
    4dd4:	ldur	x9, [x29, #-32]
    4dd8:	str	x8, [sp, #32]
    4ddc:	cbz	x9, 4df0 <PyInit__lzma@@Base+0x268c>
    4de0:	ldur	x8, [x29, #-32]
    4de4:	ldr	x8, [x8, #16]
    4de8:	str	x8, [sp, #24]
    4dec:	b	4df8 <PyInit__lzma@@Base+0x2694>
    4df0:	mov	x8, xzr
    4df4:	str	x8, [sp, #24]
    4df8:	ldr	x8, [sp, #24]
    4dfc:	ldr	x9, [sp, #32]
    4e00:	add	x8, x9, x8
    4e04:	subs	x8, x8, #0x1
    4e08:	stur	x8, [x29, #-64]
    4e0c:	add	x0, sp, #0x40
    4e10:	mov	w10, wzr
    4e14:	mov	w1, w10
    4e18:	mov	x2, #0x50                  	// #80
    4e1c:	bl	23e0 <memset@plt>
    4e20:	mov	x8, #0xffffffffffffffff    	// #-1
    4e24:	str	x8, [sp, #56]
    4e28:	ldur	x8, [x29, #-32]
    4e2c:	cbnz	x8, 4e60 <PyInit__lzma@@Base+0x26fc>
    4e30:	ldur	x8, [x29, #-24]
    4e34:	mov	x9, #0x1                   	// #1
    4e38:	cmp	x9, x8
    4e3c:	b.gt	4e60 <PyInit__lzma@@Base+0x26fc>
    4e40:	ldur	x8, [x29, #-24]
    4e44:	cmp	x8, #0x2
    4e48:	b.gt	4e60 <PyInit__lzma@@Base+0x26fc>
    4e4c:	ldur	x8, [x29, #-16]
    4e50:	cbz	x8, 4e60 <PyInit__lzma@@Base+0x26fc>
    4e54:	ldur	x8, [x29, #-16]
    4e58:	str	x8, [sp, #16]
    4e5c:	b	4ea0 <PyInit__lzma@@Base+0x273c>
    4e60:	ldur	x0, [x29, #-16]
    4e64:	ldur	x1, [x29, #-24]
    4e68:	ldur	x3, [x29, #-32]
    4e6c:	mov	x8, xzr
    4e70:	mov	x2, x8
    4e74:	adrp	x4, 18000 <PyInit__lzma@@Base+0x1589c>
    4e78:	add	x4, x4, #0x938
    4e7c:	mov	w5, #0x1                   	// #1
    4e80:	mov	w6, #0x2                   	// #2
    4e84:	mov	w9, wzr
    4e88:	mov	w7, w9
    4e8c:	mov	x8, sp
    4e90:	sub	x10, x29, #0x38
    4e94:	str	x10, [x8]
    4e98:	bl	2370 <_PyArg_UnpackKeywords@plt>
    4e9c:	str	x0, [sp, #16]
    4ea0:	ldr	x8, [sp, #16]
    4ea4:	stur	x8, [x29, #-16]
    4ea8:	ldur	x8, [x29, #-16]
    4eac:	cbnz	x8, 4eb4 <PyInit__lzma@@Base+0x2750>
    4eb0:	b	4fe4 <PyInit__lzma@@Base+0x2880>
    4eb4:	ldur	x8, [x29, #-16]
    4eb8:	ldr	x0, [x8]
    4ebc:	add	x1, sp, #0x40
    4ec0:	mov	w9, wzr
    4ec4:	mov	w2, w9
    4ec8:	bl	25a0 <PyObject_GetBuffer@plt>
    4ecc:	cbz	w0, 4ed4 <PyInit__lzma@@Base+0x2770>
    4ed0:	b	4fe4 <PyInit__lzma@@Base+0x2880>
    4ed4:	add	x0, sp, #0x40
    4ed8:	mov	w1, #0x43                  	// #67
    4edc:	bl	2300 <PyBuffer_IsContiguous@plt>
    4ee0:	cbnz	w0, 4f0c <PyInit__lzma@@Base+0x27a8>
    4ee4:	ldur	x8, [x29, #-16]
    4ee8:	ldr	x3, [x8]
    4eec:	adrp	x0, 7000 <PyInit__lzma@@Base+0x489c>
    4ef0:	add	x0, x0, #0x215
    4ef4:	adrp	x1, 7000 <PyInit__lzma@@Base+0x489c>
    4ef8:	add	x1, x1, #0x22b
    4efc:	adrp	x2, 7000 <PyInit__lzma@@Base+0x489c>
    4f00:	add	x2, x2, #0x1d
    4f04:	bl	2440 <_PyArg_BadArgument@plt>
    4f08:	b	4fe4 <PyInit__lzma@@Base+0x2880>
    4f0c:	ldur	x8, [x29, #-64]
    4f10:	cbnz	x8, 4f18 <PyInit__lzma@@Base+0x27b4>
    4f14:	b	4fd0 <PyInit__lzma@@Base+0x286c>
    4f18:	ldur	x8, [x29, #-16]
    4f1c:	ldr	x8, [x8, #8]
    4f20:	ldr	x8, [x8, #8]
    4f24:	adrp	x9, 17000 <PyInit__lzma@@Base+0x1489c>
    4f28:	ldr	x9, [x9, #3984]
    4f2c:	cmp	x8, x9
    4f30:	b.eq	4f50 <PyInit__lzma@@Base+0x27ec>  // b.none
    4f34:	ldur	x8, [x29, #-16]
    4f38:	ldr	x8, [x8, #8]
    4f3c:	ldr	x0, [x8, #8]
    4f40:	adrp	x1, 17000 <PyInit__lzma@@Base+0x1489c>
    4f44:	ldr	x1, [x1, #3984]
    4f48:	bl	25e0 <PyType_IsSubtype@plt>
    4f4c:	cbz	w0, 4f6c <PyInit__lzma@@Base+0x2808>
    4f50:	adrp	x8, 17000 <PyInit__lzma@@Base+0x1489c>
    4f54:	ldr	x8, [x8, #4016]
    4f58:	ldr	x0, [x8]
    4f5c:	adrp	x1, 6000 <PyInit__lzma@@Base+0x389c>
    4f60:	add	x1, x1, #0xcf3
    4f64:	bl	2380 <PyErr_SetString@plt>
    4f68:	b	4fe4 <PyInit__lzma@@Base+0x2880>
    4f6c:	mov	x8, #0xffffffffffffffff    	// #-1
    4f70:	str	x8, [sp, #48]
    4f74:	ldur	x8, [x29, #-16]
    4f78:	ldr	x0, [x8, #8]
    4f7c:	bl	2630 <PyNumber_Index@plt>
    4f80:	str	x0, [sp, #40]
    4f84:	ldr	x8, [sp, #40]
    4f88:	cbz	x8, 4fac <PyInit__lzma@@Base+0x2848>
    4f8c:	ldr	x0, [sp, #40]
    4f90:	bl	2430 <PyLong_AsSsize_t@plt>
    4f94:	str	x0, [sp, #48]
    4f98:	ldr	x2, [sp, #40]
    4f9c:	adrp	x0, 7000 <PyInit__lzma@@Base+0x489c>
    4fa0:	add	x0, x0, #0x23b
    4fa4:	mov	w1, #0x81                  	// #129
    4fa8:	bl	3290 <PyInit__lzma@@Base+0xb2c>
    4fac:	ldr	x8, [sp, #48]
    4fb0:	mov	x9, #0xffffffffffffffff    	// #-1
    4fb4:	cmp	x8, x9
    4fb8:	b.ne	4fc8 <PyInit__lzma@@Base+0x2864>  // b.any
    4fbc:	bl	24c0 <PyErr_Occurred@plt>
    4fc0:	cbz	x0, 4fc8 <PyInit__lzma@@Base+0x2864>
    4fc4:	b	4fe4 <PyInit__lzma@@Base+0x2880>
    4fc8:	ldr	x8, [sp, #48]
    4fcc:	str	x8, [sp, #56]
    4fd0:	ldur	x0, [x29, #-8]
    4fd4:	ldr	x2, [sp, #56]
    4fd8:	add	x1, sp, #0x40
    4fdc:	bl	5008 <PyInit__lzma@@Base+0x28a4>
    4fe0:	stur	x0, [x29, #-40]
    4fe4:	add	x8, sp, #0x40
    4fe8:	ldr	x8, [x8, #8]
    4fec:	cbz	x8, 4ff8 <PyInit__lzma@@Base+0x2894>
    4ff0:	add	x0, sp, #0x40
    4ff4:	bl	22c0 <PyBuffer_Release@plt>
    4ff8:	ldur	x0, [x29, #-40]
    4ffc:	ldp	x29, x30, [sp, #208]
    5000:	add	sp, sp, #0xe0
    5004:	ret
    5008:	sub	sp, sp, #0x40
    500c:	stp	x29, x30, [sp, #48]
    5010:	add	x29, sp, #0x30
    5014:	mov	x8, xzr
    5018:	stur	x0, [x29, #-8]
    501c:	stur	x1, [x29, #-16]
    5020:	str	x2, [sp, #24]
    5024:	str	x8, [sp, #16]
    5028:	ldur	x8, [x29, #-8]
    502c:	ldr	x0, [x8, #216]
    5030:	mov	w9, wzr
    5034:	mov	w1, w9
    5038:	bl	2350 <PyThread_acquire_lock@plt>
    503c:	cbnz	w0, 5064 <PyInit__lzma@@Base+0x2900>
    5040:	bl	25c0 <PyEval_SaveThread@plt>
    5044:	str	x0, [sp, #8]
    5048:	ldur	x8, [x29, #-8]
    504c:	ldr	x0, [x8, #216]
    5050:	mov	w1, #0x1                   	// #1
    5054:	bl	2350 <PyThread_acquire_lock@plt>
    5058:	ldr	x8, [sp, #8]
    505c:	mov	x0, x8
    5060:	bl	2290 <PyEval_RestoreThread@plt>
    5064:	ldur	x8, [x29, #-8]
    5068:	ldrb	w9, [x8, #180]
    506c:	cbz	w9, 508c <PyInit__lzma@@Base+0x2928>
    5070:	adrp	x8, 17000 <PyInit__lzma@@Base+0x1489c>
    5074:	ldr	x8, [x8, #4048]
    5078:	ldr	x0, [x8]
    507c:	adrp	x1, 7000 <PyInit__lzma@@Base+0x489c>
    5080:	add	x1, x1, #0x270
    5084:	bl	2380 <PyErr_SetString@plt>
    5088:	b	50ac <PyInit__lzma@@Base+0x2948>
    508c:	ldur	x0, [x29, #-8]
    5090:	ldur	x8, [x29, #-16]
    5094:	ldr	x1, [x8]
    5098:	ldur	x8, [x29, #-16]
    509c:	ldr	x2, [x8, #16]
    50a0:	ldr	x3, [sp, #24]
    50a4:	bl	50c8 <PyInit__lzma@@Base+0x2964>
    50a8:	str	x0, [sp, #16]
    50ac:	ldur	x8, [x29, #-8]
    50b0:	ldr	x0, [x8, #216]
    50b4:	bl	2560 <PyThread_release_lock@plt>
    50b8:	ldr	x0, [sp, #16]
    50bc:	ldp	x29, x30, [sp, #48]
    50c0:	add	sp, sp, #0x40
    50c4:	ret
    50c8:	sub	sp, sp, #0x80
    50cc:	stp	x29, x30, [sp, #112]
    50d0:	add	x29, sp, #0x70
    50d4:	stur	x0, [x29, #-16]
    50d8:	stur	x1, [x29, #-24]
    50dc:	stur	x2, [x29, #-32]
    50e0:	stur	x3, [x29, #-40]
    50e4:	ldur	x8, [x29, #-16]
    50e8:	add	x8, x8, #0x28
    50ec:	str	x8, [sp, #48]
    50f0:	ldr	x8, [sp, #48]
    50f4:	ldr	x8, [x8]
    50f8:	cbz	x8, 5270 <PyInit__lzma@@Base+0x2b0c>
    50fc:	ldur	x8, [x29, #-16]
    5100:	ldr	x8, [x8, #200]
    5104:	ldur	x9, [x29, #-16]
    5108:	ldr	x9, [x9, #208]
    510c:	add	x8, x8, x9
    5110:	ldr	x9, [sp, #48]
    5114:	ldr	x9, [x9]
    5118:	ldr	x10, [sp, #48]
    511c:	ldr	x10, [x10, #8]
    5120:	add	x9, x9, x10
    5124:	subs	x8, x8, x9
    5128:	str	x8, [sp, #40]
    512c:	ldur	x8, [x29, #-16]
    5130:	ldr	x8, [x8, #208]
    5134:	ldr	x9, [sp, #48]
    5138:	ldr	x9, [x9, #8]
    513c:	subs	x8, x8, x9
    5140:	str	x8, [sp, #32]
    5144:	ldr	x8, [sp, #32]
    5148:	ldur	x9, [x29, #-32]
    514c:	cmp	x8, x9
    5150:	b.cs	51f4 <PyInit__lzma@@Base+0x2a90>  // b.hs, b.nlast
    5154:	ldr	x8, [sp, #48]
    5158:	ldr	x8, [x8]
    515c:	ldur	x9, [x29, #-16]
    5160:	ldr	x9, [x9, #200]
    5164:	subs	x8, x8, x9
    5168:	str	x8, [sp, #24]
    516c:	ldur	x8, [x29, #-16]
    5170:	ldr	x8, [x8, #208]
    5174:	ldur	x9, [x29, #-32]
    5178:	add	x8, x8, x9
    517c:	ldr	x9, [sp, #40]
    5180:	subs	x8, x8, x9
    5184:	str	x8, [sp, #8]
    5188:	ldur	x8, [x29, #-16]
    518c:	ldr	x0, [x8, #200]
    5190:	ldr	x1, [sp, #8]
    5194:	bl	23b0 <PyMem_Realloc@plt>
    5198:	str	x0, [sp, #16]
    519c:	ldr	x8, [sp, #16]
    51a0:	cbnz	x8, 51c0 <PyInit__lzma@@Base+0x2a5c>
    51a4:	adrp	x8, 17000 <PyInit__lzma@@Base+0x1489c>
    51a8:	ldr	x8, [x8, #4000]
    51ac:	ldr	x0, [x8]
    51b0:	bl	23c0 <PyErr_SetNone@plt>
    51b4:	mov	x8, xzr
    51b8:	stur	x8, [x29, #-8]
    51bc:	b	5458 <PyInit__lzma@@Base+0x2cf4>
    51c0:	ldr	x8, [sp, #16]
    51c4:	ldur	x9, [x29, #-16]
    51c8:	str	x8, [x9, #200]
    51cc:	ldr	x8, [sp, #8]
    51d0:	ldur	x9, [x29, #-16]
    51d4:	str	x8, [x9, #208]
    51d8:	ldur	x8, [x29, #-16]
    51dc:	ldr	x8, [x8, #200]
    51e0:	ldr	x9, [sp, #24]
    51e4:	add	x8, x8, x9
    51e8:	ldr	x9, [sp, #48]
    51ec:	str	x8, [x9]
    51f0:	b	5230 <PyInit__lzma@@Base+0x2acc>
    51f4:	ldr	x8, [sp, #40]
    51f8:	ldur	x9, [x29, #-32]
    51fc:	cmp	x8, x9
    5200:	b.cs	5230 <PyInit__lzma@@Base+0x2acc>  // b.hs, b.nlast
    5204:	ldur	x8, [x29, #-16]
    5208:	ldr	x0, [x8, #200]
    520c:	ldr	x8, [sp, #48]
    5210:	ldr	x1, [x8]
    5214:	ldr	x8, [sp, #48]
    5218:	ldr	x2, [x8, #8]
    521c:	bl	2240 <memmove@plt>
    5220:	ldur	x8, [x29, #-16]
    5224:	ldr	x8, [x8, #200]
    5228:	ldr	x9, [sp, #48]
    522c:	str	x8, [x9]
    5230:	ldr	x8, [sp, #48]
    5234:	ldr	x8, [x8]
    5238:	ldr	x9, [sp, #48]
    523c:	ldr	x9, [x9, #8]
    5240:	add	x0, x8, x9
    5244:	ldur	x1, [x29, #-24]
    5248:	ldur	x2, [x29, #-32]
    524c:	bl	2230 <memcpy@plt>
    5250:	ldur	x8, [x29, #-32]
    5254:	ldr	x9, [sp, #48]
    5258:	ldr	x10, [x9, #8]
    525c:	add	x8, x10, x8
    5260:	str	x8, [x9, #8]
    5264:	mov	w11, #0x1                   	// #1
    5268:	sturb	w11, [x29, #-41]
    526c:	b	5290 <PyInit__lzma@@Base+0x2b2c>
    5270:	ldur	x8, [x29, #-24]
    5274:	ldr	x9, [sp, #48]
    5278:	str	x8, [x9]
    527c:	ldur	x8, [x29, #-32]
    5280:	ldr	x9, [sp, #48]
    5284:	str	x8, [x9, #8]
    5288:	mov	w10, #0x0                   	// #0
    528c:	sturb	w10, [x29, #-41]
    5290:	ldur	x0, [x29, #-16]
    5294:	ldur	x1, [x29, #-40]
    5298:	bl	5468 <PyInit__lzma@@Base+0x2d04>
    529c:	str	x0, [sp, #56]
    52a0:	ldr	x8, [sp, #56]
    52a4:	cbnz	x8, 52bc <PyInit__lzma@@Base+0x2b58>
    52a8:	ldr	x8, [sp, #48]
    52ac:	mov	x9, xzr
    52b0:	str	x9, [x8]
    52b4:	stur	x9, [x29, #-8]
    52b8:	b	5458 <PyInit__lzma@@Base+0x2cf4>
    52bc:	ldur	x8, [x29, #-16]
    52c0:	ldrb	w9, [x8, #180]
    52c4:	cbz	w9, 532c <PyInit__lzma@@Base+0x2bc8>
    52c8:	ldur	x8, [x29, #-16]
    52cc:	mov	w9, #0x0                   	// #0
    52d0:	strb	w9, [x8, #192]
    52d4:	ldr	x8, [sp, #48]
    52d8:	ldr	x8, [x8, #8]
    52dc:	cmp	x8, #0x0
    52e0:	cset	w9, ls  // ls = plast
    52e4:	tbnz	w9, #0, 5328 <PyInit__lzma@@Base+0x2bc4>
    52e8:	ldur	x8, [x29, #-16]
    52ec:	ldr	x8, [x8, #184]
    52f0:	str	x8, [sp]
    52f4:	ldr	x8, [sp, #48]
    52f8:	ldr	x0, [x8]
    52fc:	ldr	x8, [sp, #48]
    5300:	ldr	x1, [x8, #8]
    5304:	bl	2310 <PyBytes_FromStringAndSize@plt>
    5308:	ldur	x8, [x29, #-16]
    530c:	str	x0, [x8, #184]
    5310:	ldr	x0, [sp]
    5314:	bl	39c4 <PyInit__lzma@@Base+0x1260>
    5318:	ldur	x8, [x29, #-16]
    531c:	ldr	x8, [x8, #184]
    5320:	cbnz	x8, 5328 <PyInit__lzma@@Base+0x2bc4>
    5324:	b	5448 <PyInit__lzma@@Base+0x2ce4>
    5328:	b	543c <PyInit__lzma@@Base+0x2cd8>
    532c:	ldr	x8, [sp, #48]
    5330:	ldr	x8, [x8, #8]
    5334:	cbnz	x8, 5370 <PyInit__lzma@@Base+0x2c0c>
    5338:	ldr	x8, [sp, #48]
    533c:	mov	x9, xzr
    5340:	str	x9, [x8]
    5344:	ldr	x8, [sp, #48]
    5348:	ldr	x8, [x8, #32]
    534c:	cbnz	x8, 5360 <PyInit__lzma@@Base+0x2bfc>
    5350:	ldur	x8, [x29, #-16]
    5354:	mov	w9, #0x0                   	// #0
    5358:	strb	w9, [x8, #192]
    535c:	b	536c <PyInit__lzma@@Base+0x2c08>
    5360:	ldur	x8, [x29, #-16]
    5364:	mov	w9, #0x1                   	// #1
    5368:	strb	w9, [x8, #192]
    536c:	b	543c <PyInit__lzma@@Base+0x2cd8>
    5370:	ldur	x8, [x29, #-16]
    5374:	mov	w9, #0x0                   	// #0
    5378:	strb	w9, [x8, #192]
    537c:	ldurb	w9, [x29, #-41]
    5380:	cbnz	w9, 543c <PyInit__lzma@@Base+0x2cd8>
    5384:	ldur	x8, [x29, #-16]
    5388:	ldr	x8, [x8, #200]
    538c:	cbz	x8, 53c0 <PyInit__lzma@@Base+0x2c5c>
    5390:	ldur	x8, [x29, #-16]
    5394:	ldr	x8, [x8, #208]
    5398:	ldr	x9, [sp, #48]
    539c:	ldr	x9, [x9, #8]
    53a0:	cmp	x8, x9
    53a4:	b.cs	53c0 <PyInit__lzma@@Base+0x2c5c>  // b.hs, b.nlast
    53a8:	ldur	x8, [x29, #-16]
    53ac:	ldr	x0, [x8, #200]
    53b0:	bl	22a0 <PyMem_Free@plt>
    53b4:	ldur	x8, [x29, #-16]
    53b8:	mov	x9, xzr
    53bc:	str	x9, [x8, #200]
    53c0:	ldur	x8, [x29, #-16]
    53c4:	ldr	x8, [x8, #200]
    53c8:	cbnz	x8, 5410 <PyInit__lzma@@Base+0x2cac>
    53cc:	ldr	x8, [sp, #48]
    53d0:	ldr	x0, [x8, #8]
    53d4:	bl	2660 <PyMem_Malloc@plt>
    53d8:	ldur	x8, [x29, #-16]
    53dc:	str	x0, [x8, #200]
    53e0:	ldur	x8, [x29, #-16]
    53e4:	ldr	x8, [x8, #200]
    53e8:	cbnz	x8, 5400 <PyInit__lzma@@Base+0x2c9c>
    53ec:	adrp	x8, 17000 <PyInit__lzma@@Base+0x1489c>
    53f0:	ldr	x8, [x8, #4000]
    53f4:	ldr	x0, [x8]
    53f8:	bl	23c0 <PyErr_SetNone@plt>
    53fc:	b	5448 <PyInit__lzma@@Base+0x2ce4>
    5400:	ldr	x8, [sp, #48]
    5404:	ldr	x8, [x8, #8]
    5408:	ldur	x9, [x29, #-16]
    540c:	str	x8, [x9, #208]
    5410:	ldur	x8, [x29, #-16]
    5414:	ldr	x0, [x8, #200]
    5418:	ldr	x8, [sp, #48]
    541c:	ldr	x1, [x8]
    5420:	ldr	x8, [sp, #48]
    5424:	ldr	x2, [x8, #8]
    5428:	bl	2230 <memcpy@plt>
    542c:	ldur	x8, [x29, #-16]
    5430:	ldr	x8, [x8, #200]
    5434:	ldr	x9, [sp, #48]
    5438:	str	x8, [x9]
    543c:	ldr	x8, [sp, #56]
    5440:	stur	x8, [x29, #-8]
    5444:	b	5458 <PyInit__lzma@@Base+0x2cf4>
    5448:	ldr	x0, [sp, #56]
    544c:	bl	39c4 <PyInit__lzma@@Base+0x1260>
    5450:	mov	x8, xzr
    5454:	stur	x8, [x29, #-8]
    5458:	ldur	x0, [x29, #-8]
    545c:	ldp	x29, x30, [sp, #112]
    5460:	add	sp, sp, #0x80
    5464:	ret
    5468:	sub	sp, sp, #0x50
    546c:	stp	x29, x30, [sp, #64]
    5470:	add	x29, sp, #0x40
    5474:	stur	x0, [x29, #-16]
    5478:	stur	x1, [x29, #-24]
    547c:	str	xzr, [sp, #32]
    5480:	ldur	x8, [x29, #-16]
    5484:	add	x8, x8, #0x28
    5488:	str	x8, [sp, #16]
    548c:	ldur	x8, [x29, #-24]
    5490:	cmp	x8, #0x0
    5494:	cset	w9, lt  // lt = tstop
    5498:	tbnz	w9, #0, 54a8 <PyInit__lzma@@Base+0x2d44>
    549c:	ldur	x8, [x29, #-24]
    54a0:	cmp	x8, #0x2, lsl #12
    54a4:	b.lt	54c0 <PyInit__lzma@@Base+0x2d5c>  // b.tstop
    54a8:	mov	x8, xzr
    54ac:	mov	x0, x8
    54b0:	mov	x1, #0x2000                	// #8192
    54b4:	bl	2310 <PyBytes_FromStringAndSize@plt>
    54b8:	str	x0, [sp, #24]
    54bc:	b	54d4 <PyInit__lzma@@Base+0x2d70>
    54c0:	ldur	x1, [x29, #-24]
    54c4:	mov	x8, xzr
    54c8:	mov	x0, x8
    54cc:	bl	2310 <PyBytes_FromStringAndSize@plt>
    54d0:	str	x0, [sp, #24]
    54d4:	ldr	x8, [sp, #24]
    54d8:	cbnz	x8, 54e8 <PyInit__lzma@@Base+0x2d84>
    54dc:	mov	x8, xzr
    54e0:	stur	x8, [x29, #-8]
    54e4:	b	569c <PyInit__lzma@@Base+0x2f38>
    54e8:	ldr	x8, [sp, #24]
    54ec:	add	x8, x8, #0x20
    54f0:	ldr	x9, [sp, #16]
    54f4:	str	x8, [x9, #24]
    54f8:	ldr	x8, [sp, #24]
    54fc:	ldr	x8, [x8, #16]
    5500:	ldr	x9, [sp, #16]
    5504:	str	x8, [x9, #32]
    5508:	bl	25c0 <PyEval_SaveThread@plt>
    550c:	str	x0, [sp]
    5510:	ldr	x0, [sp, #16]
    5514:	mov	w8, wzr
    5518:	mov	w1, w8
    551c:	bl	2280 <lzma_code@plt>
    5520:	str	w0, [sp, #12]
    5524:	ldr	x9, [sp, #16]
    5528:	ldr	x9, [x9, #24]
    552c:	ldr	x10, [sp, #24]
    5530:	add	x10, x10, #0x20
    5534:	subs	x9, x9, x10
    5538:	str	x9, [sp, #32]
    553c:	ldr	w8, [sp, #12]
    5540:	cmp	w8, #0xa
    5544:	b.ne	556c <PyInit__lzma@@Base+0x2e08>  // b.any
    5548:	ldr	x8, [sp, #16]
    554c:	ldr	x8, [x8, #8]
    5550:	cbnz	x8, 556c <PyInit__lzma@@Base+0x2e08>
    5554:	ldr	x8, [sp, #16]
    5558:	ldr	x8, [x8, #32]
    555c:	cmp	x8, #0x0
    5560:	cset	w9, ls  // ls = plast
    5564:	tbnz	w9, #0, 556c <PyInit__lzma@@Base+0x2e08>
    5568:	str	wzr, [sp, #12]
    556c:	ldr	x0, [sp]
    5570:	bl	2290 <PyEval_RestoreThread@plt>
    5574:	ldr	w0, [sp, #12]
    5578:	bl	384c <PyInit__lzma@@Base+0x10e8>
    557c:	cbz	w0, 5584 <PyInit__lzma@@Base+0x2e20>
    5580:	b	568c <PyInit__lzma@@Base+0x2f28>
    5584:	ldr	w8, [sp, #12]
    5588:	cmp	w8, #0x4
    558c:	b.eq	559c <PyInit__lzma@@Base+0x2e38>  // b.none
    5590:	ldr	w8, [sp, #12]
    5594:	cmp	w8, #0x2
    5598:	b.ne	55b0 <PyInit__lzma@@Base+0x2e4c>  // b.any
    559c:	ldur	x8, [x29, #-16]
    55a0:	add	x0, x8, #0x28
    55a4:	bl	2520 <lzma_get_check@plt>
    55a8:	ldur	x8, [x29, #-16]
    55ac:	str	w0, [x8, #176]
    55b0:	ldr	w8, [sp, #12]
    55b4:	cmp	w8, #0x1
    55b8:	b.ne	55cc <PyInit__lzma@@Base+0x2e68>  // b.any
    55bc:	ldur	x8, [x29, #-16]
    55c0:	mov	w9, #0x1                   	// #1
    55c4:	strb	w9, [x8, #180]
    55c8:	b	5650 <PyInit__lzma@@Base+0x2eec>
    55cc:	ldr	x8, [sp, #16]
    55d0:	ldr	x8, [x8, #32]
    55d4:	cbnz	x8, 563c <PyInit__lzma@@Base+0x2ed8>
    55d8:	ldr	x8, [sp, #32]
    55dc:	ldur	x9, [x29, #-24]
    55e0:	cmp	x8, x9
    55e4:	b.ne	55ec <PyInit__lzma@@Base+0x2e88>  // b.any
    55e8:	b	5650 <PyInit__lzma@@Base+0x2eec>
    55ec:	ldur	x1, [x29, #-24]
    55f0:	add	x0, sp, #0x18
    55f4:	bl	44bc <PyInit__lzma@@Base+0x1d58>
    55f8:	mov	w8, #0xffffffff            	// #-1
    55fc:	cmp	w0, w8
    5600:	b.ne	5608 <PyInit__lzma@@Base+0x2ea4>  // b.any
    5604:	b	568c <PyInit__lzma@@Base+0x2f28>
    5608:	ldr	x8, [sp, #24]
    560c:	add	x8, x8, #0x20
    5610:	ldr	x9, [sp, #32]
    5614:	add	x8, x8, x9
    5618:	ldr	x9, [sp, #16]
    561c:	str	x8, [x9, #24]
    5620:	ldr	x8, [sp, #24]
    5624:	ldr	x8, [x8, #16]
    5628:	ldr	x9, [sp, #32]
    562c:	subs	x8, x8, x9
    5630:	ldr	x9, [sp, #16]
    5634:	str	x8, [x9, #32]
    5638:	b	564c <PyInit__lzma@@Base+0x2ee8>
    563c:	ldr	x8, [sp, #16]
    5640:	ldr	x8, [x8, #8]
    5644:	cbnz	x8, 564c <PyInit__lzma@@Base+0x2ee8>
    5648:	b	5650 <PyInit__lzma@@Base+0x2eec>
    564c:	b	5508 <PyInit__lzma@@Base+0x2da4>
    5650:	ldr	x8, [sp, #32]
    5654:	ldr	x9, [sp, #24]
    5658:	ldr	x9, [x9, #16]
    565c:	cmp	x8, x9
    5660:	b.eq	5680 <PyInit__lzma@@Base+0x2f1c>  // b.none
    5664:	ldr	x1, [sp, #32]
    5668:	add	x0, sp, #0x18
    566c:	bl	2270 <_PyBytes_Resize@plt>
    5670:	mov	w8, #0xffffffff            	// #-1
    5674:	cmp	w0, w8
    5678:	b.ne	5680 <PyInit__lzma@@Base+0x2f1c>  // b.any
    567c:	b	568c <PyInit__lzma@@Base+0x2f28>
    5680:	ldr	x8, [sp, #24]
    5684:	stur	x8, [x29, #-8]
    5688:	b	569c <PyInit__lzma@@Base+0x2f38>
    568c:	ldr	x0, [sp, #24]
    5690:	bl	39c4 <PyInit__lzma@@Base+0x1260>
    5694:	mov	x8, xzr
    5698:	stur	x8, [x29, #-8]
    569c:	ldur	x0, [x29, #-8]
    56a0:	ldp	x29, x30, [sp, #64]
    56a4:	add	sp, sp, #0x50
    56a8:	ret
    56ac:	sub	sp, sp, #0x80
    56b0:	stp	x29, x30, [sp, #112]
    56b4:	add	x29, sp, #0x70
    56b8:	mov	w8, #0x5                   	// #5
    56bc:	mov	x9, #0xffffffffffffffff    	// #-1
    56c0:	adrp	x10, 17000 <PyInit__lzma@@Base+0x1489c>
    56c4:	ldr	x10, [x10, #4056]
    56c8:	adrp	x11, 17000 <PyInit__lzma@@Base+0x1489c>
    56cc:	ldr	x11, [x11, #4008]
    56d0:	stur	x0, [x29, #-16]
    56d4:	stur	w1, [x29, #-20]
    56d8:	stur	x2, [x29, #-32]
    56dc:	stur	x3, [x29, #-40]
    56e0:	stur	w8, [x29, #-44]
    56e4:	str	x9, [sp, #56]
    56e8:	ldur	x9, [x29, #-32]
    56ec:	cmp	x9, x10
    56f0:	str	x10, [sp, #16]
    56f4:	str	x11, [sp, #8]
    56f8:	b.eq	5748 <PyInit__lzma@@Base+0x2fe4>  // b.none
    56fc:	ldur	w8, [x29, #-20]
    5700:	cmp	w8, #0x3
    5704:	b.ne	5728 <PyInit__lzma@@Base+0x2fc4>  // b.any
    5708:	ldr	x8, [sp, #8]
    570c:	ldr	x0, [x8]
    5710:	adrp	x1, 7000 <PyInit__lzma@@Base+0x489c>
    5714:	add	x1, x1, #0x2ae
    5718:	bl	2380 <PyErr_SetString@plt>
    571c:	mov	w9, #0xffffffff            	// #-1
    5720:	stur	w9, [x29, #-4]
    5724:	b	5a28 <PyInit__lzma@@Base+0x32c4>
    5728:	ldur	x0, [x29, #-32]
    572c:	bl	22d0 <PyLong_AsUnsignedLongLong@plt>
    5730:	str	x0, [sp, #56]
    5734:	bl	24c0 <PyErr_Occurred@plt>
    5738:	cbz	x0, 5748 <PyInit__lzma@@Base+0x2fe4>
    573c:	mov	w8, #0xffffffff            	// #-1
    5740:	stur	w8, [x29, #-4]
    5744:	b	5a28 <PyInit__lzma@@Base+0x32c4>
    5748:	ldur	w8, [x29, #-20]
    574c:	cmp	w8, #0x3
    5750:	b.ne	5784 <PyInit__lzma@@Base+0x3020>  // b.any
    5754:	ldur	x8, [x29, #-40]
    5758:	ldr	x9, [sp, #16]
    575c:	cmp	x8, x9
    5760:	b.ne	5784 <PyInit__lzma@@Base+0x3020>  // b.any
    5764:	ldr	x8, [sp, #8]
    5768:	ldr	x0, [x8]
    576c:	adrp	x1, 7000 <PyInit__lzma@@Base+0x489c>
    5770:	add	x1, x1, #0x1da
    5774:	bl	2380 <PyErr_SetString@plt>
    5778:	mov	w9, #0xffffffff            	// #-1
    577c:	stur	w9, [x29, #-4]
    5780:	b	5a28 <PyInit__lzma@@Base+0x32c4>
    5784:	ldur	w8, [x29, #-20]
    5788:	cmp	w8, #0x3
    578c:	b.eq	57c0 <PyInit__lzma@@Base+0x305c>  // b.none
    5790:	ldur	x8, [x29, #-40]
    5794:	ldr	x9, [sp, #16]
    5798:	cmp	x8, x9
    579c:	b.eq	57c0 <PyInit__lzma@@Base+0x305c>  // b.none
    57a0:	ldr	x8, [sp, #8]
    57a4:	ldr	x0, [x8]
    57a8:	adrp	x1, 7000 <PyInit__lzma@@Base+0x489c>
    57ac:	add	x1, x1, #0x2da
    57b0:	bl	2380 <PyErr_SetString@plt>
    57b4:	mov	w9, #0xffffffff            	// #-1
    57b8:	stur	w9, [x29, #-4]
    57bc:	b	5a28 <PyInit__lzma@@Base+0x32c4>
    57c0:	ldur	x8, [x29, #-16]
    57c4:	mov	x9, xzr
    57c8:	str	x9, [x8, #32]
    57cc:	ldur	x8, [x29, #-16]
    57d0:	adrp	x10, 4000 <PyInit__lzma@@Base+0x189c>
    57d4:	add	x10, x10, #0x5f4
    57d8:	str	x10, [x8, #16]
    57dc:	ldur	x8, [x29, #-16]
    57e0:	adrp	x10, 4000 <PyInit__lzma@@Base+0x189c>
    57e4:	add	x10, x10, #0x65c
    57e8:	str	x10, [x8, #24]
    57ec:	ldur	x8, [x29, #-16]
    57f0:	add	x8, x8, #0x10
    57f4:	ldur	x10, [x29, #-16]
    57f8:	str	x8, [x10, #88]
    57fc:	ldur	x8, [x29, #-16]
    5800:	str	x9, [x8, #40]
    5804:	bl	2540 <PyThread_allocate_lock@plt>
    5808:	str	x0, [sp, #40]
    580c:	ldr	x8, [sp, #40]
    5810:	cbnz	x8, 5838 <PyInit__lzma@@Base+0x30d4>
    5814:	adrp	x8, 17000 <PyInit__lzma@@Base+0x1489c>
    5818:	ldr	x8, [x8, #4000]
    581c:	ldr	x0, [x8]
    5820:	adrp	x1, 7000 <PyInit__lzma@@Base+0x489c>
    5824:	add	x1, x1, #0x12b
    5828:	bl	2380 <PyErr_SetString@plt>
    582c:	mov	w9, #0xffffffff            	// #-1
    5830:	stur	w9, [x29, #-4]
    5834:	b	5a28 <PyInit__lzma@@Base+0x32c4>
    5838:	ldur	x8, [x29, #-16]
    583c:	ldr	x8, [x8, #216]
    5840:	cbz	x8, 5850 <PyInit__lzma@@Base+0x30ec>
    5844:	ldur	x8, [x29, #-16]
    5848:	ldr	x0, [x8, #216]
    584c:	bl	2670 <PyThread_free_lock@plt>
    5850:	ldr	x8, [sp, #40]
    5854:	ldur	x9, [x29, #-16]
    5858:	str	x8, [x9, #216]
    585c:	ldur	x8, [x29, #-16]
    5860:	mov	w10, #0x10                  	// #16
    5864:	str	w10, [x8, #176]
    5868:	ldur	x8, [x29, #-16]
    586c:	mov	w10, #0x1                   	// #1
    5870:	strb	w10, [x8, #192]
    5874:	ldur	x8, [x29, #-16]
    5878:	mov	x9, xzr
    587c:	str	x9, [x8, #200]
    5880:	ldur	x8, [x29, #-16]
    5884:	str	xzr, [x8, #208]
    5888:	ldur	x8, [x29, #-16]
    588c:	ldr	x8, [x8, #184]
    5890:	str	x8, [sp, #32]
    5894:	mov	x8, xzr
    5898:	mov	x0, x8
    589c:	mov	x1, x8
    58a0:	bl	2310 <PyBytes_FromStringAndSize@plt>
    58a4:	ldur	x8, [x29, #-16]
    58a8:	str	x0, [x8, #184]
    58ac:	ldr	x0, [sp, #32]
    58b0:	bl	39c4 <PyInit__lzma@@Base+0x1260>
    58b4:	ldur	x8, [x29, #-16]
    58b8:	ldr	x8, [x8, #184]
    58bc:	cbnz	x8, 58c4 <PyInit__lzma@@Base+0x3160>
    58c0:	b	59d4 <PyInit__lzma@@Base+0x3270>
    58c4:	ldur	w8, [x29, #-20]
    58c8:	subs	w8, w8, #0x0
    58cc:	mov	w9, w8
    58d0:	ubfx	x9, x9, #0, #32
    58d4:	cmp	x9, #0x3
    58d8:	str	x9, [sp]
    58dc:	b.hi	59bc <PyInit__lzma@@Base+0x3258>  // b.pmore
    58e0:	adrp	x8, 5000 <PyInit__lzma@@Base+0x289c>
    58e4:	add	x8, x8, #0xb08
    58e8:	ldr	x11, [sp]
    58ec:	ldrsw	x10, [x8, x11, lsl #2]
    58f0:	add	x9, x8, x10
    58f4:	br	x9
    58f8:	ldur	x8, [x29, #-16]
    58fc:	add	x0, x8, #0x28
    5900:	ldr	x1, [sp, #56]
    5904:	mov	w2, #0x5                   	// #5
    5908:	bl	2410 <lzma_auto_decoder@plt>
    590c:	str	w0, [sp, #52]
    5910:	ldr	w0, [sp, #52]
    5914:	bl	384c <PyInit__lzma@@Base+0x10e8>
    5918:	cbz	w0, 5920 <PyInit__lzma@@Base+0x31bc>
    591c:	b	59d4 <PyInit__lzma@@Base+0x3270>
    5920:	stur	wzr, [x29, #-4]
    5924:	b	5a28 <PyInit__lzma@@Base+0x32c4>
    5928:	ldur	x8, [x29, #-16]
    592c:	add	x0, x8, #0x28
    5930:	ldr	x1, [sp, #56]
    5934:	mov	w2, #0x5                   	// #5
    5938:	bl	24e0 <lzma_stream_decoder@plt>
    593c:	str	w0, [sp, #52]
    5940:	ldr	w0, [sp, #52]
    5944:	bl	384c <PyInit__lzma@@Base+0x10e8>
    5948:	cbz	w0, 5950 <PyInit__lzma@@Base+0x31ec>
    594c:	b	59d4 <PyInit__lzma@@Base+0x3270>
    5950:	stur	wzr, [x29, #-4]
    5954:	b	5a28 <PyInit__lzma@@Base+0x32c4>
    5958:	ldur	x8, [x29, #-16]
    595c:	str	wzr, [x8, #176]
    5960:	ldur	x8, [x29, #-16]
    5964:	add	x0, x8, #0x28
    5968:	ldr	x1, [sp, #56]
    596c:	bl	24f0 <lzma_alone_decoder@plt>
    5970:	str	w0, [sp, #52]
    5974:	ldr	w0, [sp, #52]
    5978:	bl	384c <PyInit__lzma@@Base+0x10e8>
    597c:	cbz	w0, 5984 <PyInit__lzma@@Base+0x3220>
    5980:	b	59d4 <PyInit__lzma@@Base+0x3270>
    5984:	stur	wzr, [x29, #-4]
    5988:	b	5a28 <PyInit__lzma@@Base+0x32c4>
    598c:	ldur	x8, [x29, #-16]
    5990:	str	wzr, [x8, #176]
    5994:	ldur	x8, [x29, #-16]
    5998:	add	x0, x8, #0x28
    599c:	ldur	x1, [x29, #-40]
    59a0:	bl	5a38 <PyInit__lzma@@Base+0x32d4>
    59a4:	mov	w9, #0xffffffff            	// #-1
    59a8:	cmp	w0, w9
    59ac:	b.ne	59b4 <PyInit__lzma@@Base+0x3250>  // b.any
    59b0:	b	59d4 <PyInit__lzma@@Base+0x3270>
    59b4:	stur	wzr, [x29, #-4]
    59b8:	b	5a28 <PyInit__lzma@@Base+0x32c4>
    59bc:	ldr	x8, [sp, #8]
    59c0:	ldr	x0, [x8]
    59c4:	ldur	w2, [x29, #-20]
    59c8:	adrp	x1, 7000 <PyInit__lzma@@Base+0x489c>
    59cc:	add	x1, x1, #0x143
    59d0:	bl	25f0 <PyErr_Format@plt>
    59d4:	ldur	x8, [x29, #-16]
    59d8:	ldr	x8, [x8, #184]
    59dc:	str	x8, [sp, #24]
    59e0:	ldr	x8, [sp, #24]
    59e4:	cbz	x8, 5a08 <PyInit__lzma@@Base+0x32a4>
    59e8:	ldur	x8, [x29, #-16]
    59ec:	mov	x9, xzr
    59f0:	str	x9, [x8, #184]
    59f4:	ldr	x2, [sp, #24]
    59f8:	adrp	x0, 6000 <PyInit__lzma@@Base+0x389c>
    59fc:	add	x0, x0, #0xd78
    5a00:	mov	w1, #0x4c0                 	// #1216
    5a04:	bl	3290 <PyInit__lzma@@Base+0xb2c>
    5a08:	ldur	x8, [x29, #-16]
    5a0c:	ldr	x0, [x8, #216]
    5a10:	bl	2670 <PyThread_free_lock@plt>
    5a14:	ldur	x8, [x29, #-16]
    5a18:	mov	x9, xzr
    5a1c:	str	x9, [x8, #216]
    5a20:	mov	w10, #0xffffffff            	// #-1
    5a24:	stur	w10, [x29, #-4]
    5a28:	ldur	w0, [x29, #-4]
    5a2c:	ldp	x29, x30, [sp, #112]
    5a30:	add	sp, sp, #0x80
    5a34:	ret
    5a38:	sub	sp, sp, #0x90
    5a3c:	stp	x29, x30, [sp, #128]
    5a40:	add	x29, sp, #0x80
    5a44:	mov	w8, #0xffffffff            	// #-1
    5a48:	add	x9, sp, #0x18
    5a4c:	stur	x0, [x29, #-16]
    5a50:	stur	x1, [x29, #-24]
    5a54:	ldur	x1, [x29, #-24]
    5a58:	mov	x0, x9
    5a5c:	str	w8, [sp, #16]
    5a60:	bl	4934 <PyInit__lzma@@Base+0x21d0>
    5a64:	ldr	w8, [sp, #16]
    5a68:	cmp	w0, w8
    5a6c:	b.ne	5a7c <PyInit__lzma@@Base+0x3318>  // b.any
    5a70:	mov	w8, #0xffffffff            	// #-1
    5a74:	stur	w8, [x29, #-4]
    5a78:	b	5ab8 <PyInit__lzma@@Base+0x3354>
    5a7c:	ldur	x0, [x29, #-16]
    5a80:	add	x8, sp, #0x18
    5a84:	mov	x1, x8
    5a88:	str	x8, [sp, #8]
    5a8c:	bl	2570 <lzma_raw_decoder@plt>
    5a90:	str	w0, [sp, #20]
    5a94:	ldr	x0, [sp, #8]
    5a98:	bl	4a7c <PyInit__lzma@@Base+0x2318>
    5a9c:	ldr	w0, [sp, #20]
    5aa0:	bl	384c <PyInit__lzma@@Base+0x10e8>
    5aa4:	cbz	w0, 5ab4 <PyInit__lzma@@Base+0x3350>
    5aa8:	mov	w8, #0xffffffff            	// #-1
    5aac:	stur	w8, [x29, #-4]
    5ab0:	b	5ab8 <PyInit__lzma@@Base+0x3354>
    5ab4:	stur	wzr, [x29, #-4]
    5ab8:	ldur	w0, [x29, #-4]
    5abc:	ldp	x29, x30, [sp, #128]
    5ac0:	add	sp, sp, #0x90
    5ac4:	ret

Disassembly of section .fini:

0000000000005ac8 <.fini>:
    5ac8:	stp	x29, x30, [sp, #-16]!
    5acc:	mov	x29, sp
    5ad0:	ldp	x29, x30, [sp], #16
    5ad4:	ret
