
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_datetime.cpython-38-aarch64-linux-gnu.so_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000046b8 <.init>:
    46b8:	stp	x29, x30, [sp, #-16]!
    46bc:	mov	x29, sp
    46c0:	bl	4c10 <PyNumber_FloorDivide@plt+0x10>
    46c4:	ldp	x29, x30, [sp], #16
    46c8:	ret

Disassembly of section .plt:

00000000000046d0 <memcpy@plt-0x20>:
    46d0:	stp	x16, x30, [sp, #-16]!
    46d4:	adrp	x16, 24000 <PyInit__datetime@@Base+0x15118>
    46d8:	ldr	x17, [x16, #4088]
    46dc:	add	x16, x16, #0xff8
    46e0:	br	x17
    46e4:	nop
    46e8:	nop
    46ec:	nop

00000000000046f0 <memcpy@plt>:
    46f0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    46f4:	ldr	x17, [x16]
    46f8:	add	x16, x16, #0x0
    46fc:	br	x17

0000000000004700 <PyUnicode_FromFormat@plt>:
    4700:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4704:	ldr	x17, [x16, #8]
    4708:	add	x16, x16, #0x8
    470c:	br	x17

0000000000004710 <_PyUnicode_Ready@plt>:
    4710:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4714:	ldr	x17, [x16, #16]
    4718:	add	x16, x16, #0x10
    471c:	br	x17

0000000000004720 <PyDict_SetItemString@plt>:
    4720:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4724:	ldr	x17, [x16, #24]
    4728:	add	x16, x16, #0x18
    472c:	br	x17

0000000000004730 <strlen@plt>:
    4730:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4734:	ldr	x17, [x16, #32]
    4738:	add	x16, x16, #0x20
    473c:	br	x17

0000000000004740 <PyModule_AddIntConstant@plt>:
    4740:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4744:	ldr	x17, [x16, #40]
    4748:	add	x16, x16, #0x28
    474c:	br	x17

0000000000004750 <PyArg_ParseTupleAndKeywords@plt>:
    4750:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4754:	ldr	x17, [x16, #48]
    4758:	add	x16, x16, #0x30
    475c:	br	x17

0000000000004760 <_PyObject_LookupAttrId@plt>:
    4760:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4764:	ldr	x17, [x16, #56]
    4768:	add	x16, x16, #0x38
    476c:	br	x17

0000000000004770 <_PyBytes_Resize@plt>:
    4770:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4774:	ldr	x17, [x16, #64]
    4778:	add	x16, x16, #0x40
    477c:	br	x17

0000000000004780 <PyObject_CallMethod@plt>:
    4780:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4784:	ldr	x17, [x16, #72]
    4788:	add	x16, x16, #0x48
    478c:	br	x17

0000000000004790 <PyLong_FromDouble@plt>:
    4790:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4794:	ldr	x17, [x16, #80]
    4798:	add	x16, x16, #0x50
    479c:	br	x17

00000000000047a0 <_PyUnicode_Copy@plt>:
    47a0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    47a4:	ldr	x17, [x16, #88]
    47a8:	add	x16, x16, #0x58
    47ac:	br	x17

00000000000047b0 <_PyTime_ObjectToTimeval@plt>:
    47b0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    47b4:	ldr	x17, [x16, #96]
    47b8:	add	x16, x16, #0x60
    47bc:	br	x17

00000000000047c0 <PyNumber_Add@plt>:
    47c0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    47c4:	ldr	x17, [x16, #104]
    47c8:	add	x16, x16, #0x68
    47cc:	br	x17

00000000000047d0 <__cxa_finalize@plt>:
    47d0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    47d4:	ldr	x17, [x16, #112]
    47d8:	add	x16, x16, #0x70
    47dc:	br	x17

00000000000047e0 <sprintf@plt>:
    47e0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    47e4:	ldr	x17, [x16, #120]
    47e8:	add	x16, x16, #0x78
    47ec:	br	x17

00000000000047f0 <_PyTime_GetSystemClock@plt>:
    47f0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    47f4:	ldr	x17, [x16, #128]
    47f8:	add	x16, x16, #0x80
    47fc:	br	x17

0000000000004800 <PyBytes_FromStringAndSize@plt>:
    4800:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4804:	ldr	x17, [x16, #136]
    4808:	add	x16, x16, #0x88
    480c:	br	x17

0000000000004810 <_Py_Dealloc@plt>:
    4810:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4814:	ldr	x17, [x16, #144]
    4818:	add	x16, x16, #0x90
    481c:	br	x17

0000000000004820 <PyErr_NoMemory@plt>:
    4820:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4824:	ldr	x17, [x16, #152]
    4828:	add	x16, x16, #0x98
    482c:	br	x17

0000000000004830 <PyNumber_Multiply@plt>:
    4830:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4834:	ldr	x17, [x16, #160]
    4838:	add	x16, x16, #0xa0
    483c:	br	x17

0000000000004840 <_PyTime_AsTimevalTime_t@plt>:
    4840:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4844:	ldr	x17, [x16, #168]
    4848:	add	x16, x16, #0xa8
    484c:	br	x17

0000000000004850 <PyObject_Str@plt>:
    4850:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4854:	ldr	x17, [x16, #176]
    4858:	add	x16, x16, #0xb0
    485c:	br	x17

0000000000004860 <PyUnicode_WriteChar@plt>:
    4860:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4864:	ldr	x17, [x16, #184]
    4868:	add	x16, x16, #0xb8
    486c:	br	x17

0000000000004870 <_PyArg_UnpackKeywords@plt>:
    4870:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4874:	ldr	x17, [x16, #192]
    4878:	add	x16, x16, #0xc0
    487c:	br	x17

0000000000004880 <PyErr_SetString@plt>:
    4880:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4884:	ldr	x17, [x16, #200]
    4888:	add	x16, x16, #0xc8
    488c:	br	x17

0000000000004890 <PyObject_Malloc@plt>:
    4890:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4894:	ldr	x17, [x16, #208]
    4898:	add	x16, x16, #0xd0
    489c:	br	x17

00000000000048a0 <PyErr_ExceptionMatches@plt>:
    48a0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    48a4:	ldr	x17, [x16, #216]
    48a8:	add	x16, x16, #0xd8
    48ac:	br	x17

00000000000048b0 <_Py_HashBytes@plt>:
    48b0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    48b4:	ldr	x17, [x16, #224]
    48b8:	add	x16, x16, #0xe0
    48bc:	br	x17

00000000000048c0 <PyOS_snprintf@plt>:
    48c0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    48c4:	ldr	x17, [x16, #232]
    48c8:	add	x16, x16, #0xe8
    48cc:	br	x17

00000000000048d0 <PyUnicode_GetLength@plt>:
    48d0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    48d4:	ldr	x17, [x16, #240]
    48d8:	add	x16, x16, #0xf0
    48dc:	br	x17

00000000000048e0 <PyFloat_FromDouble@plt>:
    48e0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    48e4:	ldr	x17, [x16, #248]
    48e8:	add	x16, x16, #0xf8
    48ec:	br	x17

00000000000048f0 <PyType_Ready@plt>:
    48f0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    48f4:	ldr	x17, [x16, #256]
    48f8:	add	x16, x16, #0x100
    48fc:	br	x17

0000000000004900 <PyLong_FromLong@plt>:
    4900:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4904:	ldr	x17, [x16, #264]
    4908:	add	x16, x16, #0x108
    490c:	br	x17

0000000000004910 <_PyLong_DivmodNear@plt>:
    4910:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4914:	ldr	x17, [x16, #272]
    4918:	add	x16, x16, #0x110
    491c:	br	x17

0000000000004920 <PyUnicode_DecodeLocale@plt>:
    4920:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4924:	ldr	x17, [x16, #280]
    4928:	add	x16, x16, #0x118
    492c:	br	x17

0000000000004930 <PyNumber_And@plt>:
    4930:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4934:	ldr	x17, [x16, #288]
    4938:	add	x16, x16, #0x120
    493c:	br	x17

0000000000004940 <__gmon_start__@plt>:
    4940:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4944:	ldr	x17, [x16, #296]
    4948:	add	x16, x16, #0x128
    494c:	br	x17

0000000000004950 <PyObject_CallFunction@plt>:
    4950:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4954:	ldr	x17, [x16, #304]
    4958:	add	x16, x16, #0x130
    495c:	br	x17

0000000000004960 <PyUnicode_AsLatin1String@plt>:
    4960:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4964:	ldr	x17, [x16, #312]
    4968:	add	x16, x16, #0x138
    496c:	br	x17

0000000000004970 <PyTuple_New@plt>:
    4970:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4974:	ldr	x17, [x16, #320]
    4978:	add	x16, x16, #0x140
    497c:	br	x17

0000000000004980 <PyNumber_Remainder@plt>:
    4980:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4984:	ldr	x17, [x16, #328]
    4988:	add	x16, x16, #0x148
    498c:	br	x17

0000000000004990 <PyArg_UnpackTuple@plt>:
    4990:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4994:	ldr	x17, [x16, #336]
    4998:	add	x16, x16, #0x150
    499c:	br	x17

00000000000049a0 <Py_BuildValue@plt>:
    49a0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    49a4:	ldr	x17, [x16, #344]
    49a8:	add	x16, x16, #0x158
    49ac:	br	x17

00000000000049b0 <PyErr_Occurred@plt>:
    49b0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    49b4:	ldr	x17, [x16, #352]
    49b8:	add	x16, x16, #0x160
    49bc:	br	x17

00000000000049c0 <PyModule_Create2@plt>:
    49c0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    49c4:	ldr	x17, [x16, #360]
    49c8:	add	x16, x16, #0x168
    49cc:	br	x17

00000000000049d0 <PyImport_ImportModuleNoBlock@plt>:
    49d0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    49d4:	ldr	x17, [x16, #368]
    49d8:	add	x16, x16, #0x170
    49dc:	br	x17

00000000000049e0 <memcmp@plt>:
    49e0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    49e4:	ldr	x17, [x16, #376]
    49e8:	add	x16, x16, #0x178
    49ec:	br	x17

00000000000049f0 <strcmp@plt>:
    49f0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    49f4:	ldr	x17, [x16, #384]
    49f8:	add	x16, x16, #0x180
    49fc:	br	x17

0000000000004a00 <_Py_CheckFunctionResult@plt>:
    4a00:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4a04:	ldr	x17, [x16, #392]
    4a08:	add	x16, x16, #0x188
    4a0c:	br	x17

0000000000004a10 <PyFloat_AsDouble@plt>:
    4a10:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4a14:	ldr	x17, [x16, #400]
    4a18:	add	x16, x16, #0x190
    4a1c:	br	x17

0000000000004a20 <PyObject_IsTrue@plt>:
    4a20:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4a24:	ldr	x17, [x16, #408]
    4a28:	add	x16, x16, #0x198
    4a2c:	br	x17

0000000000004a30 <PyArg_ParseTuple@plt>:
    4a30:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4a34:	ldr	x17, [x16, #416]
    4a38:	add	x16, x16, #0x1a0
    4a3c:	br	x17

0000000000004a40 <Py_FatalError@plt>:
    4a40:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4a44:	ldr	x17, [x16, #424]
    4a48:	add	x16, x16, #0x1a8
    4a4c:	br	x17

0000000000004a50 <PyObject_Hash@plt>:
    4a50:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4a54:	ldr	x17, [x16, #432]
    4a58:	add	x16, x16, #0x1b0
    4a5c:	br	x17

0000000000004a60 <_PyObject_CallMethodId@plt>:
    4a60:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4a64:	ldr	x17, [x16, #440]
    4a68:	add	x16, x16, #0x1b8
    4a6c:	br	x17

0000000000004a70 <_PyTime_ObjectToTime_t@plt>:
    4a70:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4a74:	ldr	x17, [x16, #448]
    4a78:	add	x16, x16, #0x1c0
    4a7c:	br	x17

0000000000004a80 <modf@plt>:
    4a80:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4a84:	ldr	x17, [x16, #456]
    4a88:	add	x16, x16, #0x1c8
    4a8c:	br	x17

0000000000004a90 <PyLong_AsDouble@plt>:
    4a90:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4a94:	ldr	x17, [x16, #464]
    4a98:	add	x16, x16, #0x1d0
    4a9c:	br	x17

0000000000004aa0 <_PyLong_AsTime_t@plt>:
    4aa0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4aa4:	ldr	x17, [x16, #472]
    4aa8:	add	x16, x16, #0x1d8
    4aac:	br	x17

0000000000004ab0 <_PyTraceMalloc_NewReference@plt>:
    4ab0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4ab4:	ldr	x17, [x16, #480]
    4ab8:	add	x16, x16, #0x1e0
    4abc:	br	x17

0000000000004ac0 <_PyObject_GetDictPtr@plt>:
    4ac0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4ac4:	ldr	x17, [x16, #488]
    4ac8:	add	x16, x16, #0x1e8
    4acc:	br	x17

0000000000004ad0 <PyUnicode_FromString@plt>:
    4ad0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4ad4:	ldr	x17, [x16, #496]
    4ad8:	add	x16, x16, #0x1f0
    4adc:	br	x17

0000000000004ae0 <_PyObject_CallMethodIdObjArgs@plt>:
    4ae0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4ae4:	ldr	x17, [x16, #504]
    4ae8:	add	x16, x16, #0x1f8
    4aec:	br	x17

0000000000004af0 <PyType_GetFlags@plt>:
    4af0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4af4:	ldr	x17, [x16, #512]
    4af8:	add	x16, x16, #0x200
    4afc:	br	x17

0000000000004b00 <PyModule_AddObject@plt>:
    4b00:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4b04:	ldr	x17, [x16, #520]
    4b08:	add	x16, x16, #0x208
    4b0c:	br	x17

0000000000004b10 <PyBytes_AsString@plt>:
    4b10:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4b14:	ldr	x17, [x16, #528]
    4b18:	add	x16, x16, #0x210
    4b1c:	br	x17

0000000000004b20 <PyCapsule_New@plt>:
    4b20:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4b24:	ldr	x17, [x16, #536]
    4b28:	add	x16, x16, #0x218
    4b2c:	br	x17

0000000000004b30 <PyType_IsSubtype@plt>:
    4b30:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4b34:	ldr	x17, [x16, #544]
    4b38:	add	x16, x16, #0x220
    4b3c:	br	x17

0000000000004b40 <PyUnicode_AsUTF8AndSize@plt>:
    4b40:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4b44:	ldr	x17, [x16, #552]
    4b48:	add	x16, x16, #0x228
    4b4c:	br	x17

0000000000004b50 <PyTuple_Size@plt>:
    4b50:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4b54:	ldr	x17, [x16, #560]
    4b58:	add	x16, x16, #0x230
    4b5c:	br	x17

0000000000004b60 <PyErr_Format@plt>:
    4b60:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4b64:	ldr	x17, [x16, #568]
    4b68:	add	x16, x16, #0x238
    4b6c:	br	x17

0000000000004b70 <PyNumber_Divmod@plt>:
    4b70:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4b74:	ldr	x17, [x16, #576]
    4b78:	add	x16, x16, #0x240
    4b7c:	br	x17

0000000000004b80 <PyUnicode_FromStringAndSize@plt>:
    4b80:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4b84:	ldr	x17, [x16, #584]
    4b88:	add	x16, x16, #0x248
    4b8c:	br	x17

0000000000004b90 <_PyObject_MakeTpCall@plt>:
    4b90:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4b94:	ldr	x17, [x16, #592]
    4b98:	add	x16, x16, #0x250
    4b9c:	br	x17

0000000000004ba0 <PyUnicode_AppendAndDel@plt>:
    4ba0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4ba4:	ldr	x17, [x16, #600]
    4ba8:	add	x16, x16, #0x258
    4bac:	br	x17

0000000000004bb0 <_PyLong_AsInt@plt>:
    4bb0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4bb4:	ldr	x17, [x16, #608]
    4bb8:	add	x16, x16, #0x260
    4bbc:	br	x17

0000000000004bc0 <_PyTime_localtime@plt>:
    4bc0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4bc4:	ldr	x17, [x16, #616]
    4bc8:	add	x16, x16, #0x268
    4bcc:	br	x17

0000000000004bd0 <PyTuple_Pack@plt>:
    4bd0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4bd4:	ldr	x17, [x16, #624]
    4bd8:	add	x16, x16, #0x270
    4bdc:	br	x17

0000000000004be0 <PyNumber_TrueDivide@plt>:
    4be0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4be4:	ldr	x17, [x16, #632]
    4be8:	add	x16, x16, #0x278
    4bec:	br	x17

0000000000004bf0 <PyUnicode_Substring@plt>:
    4bf0:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4bf4:	ldr	x17, [x16, #640]
    4bf8:	add	x16, x16, #0x280
    4bfc:	br	x17

0000000000004c00 <PyNumber_FloorDivide@plt>:
    4c00:	adrp	x16, 25000 <memcpy@GLIBC_2.17>
    4c04:	ldr	x17, [x16, #648]
    4c08:	add	x16, x16, #0x288
    4c0c:	br	x17

Disassembly of section .text:

0000000000004c10 <PyInit__datetime@@Base-0xa2d8>:
    4c10:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    4c14:	ldr	x0, [x0, #4000]
    4c18:	cbz	x0, 4c20 <PyNumber_FloorDivide@plt+0x20>
    4c1c:	b	4940 <__gmon_start__@plt>
    4c20:	ret
    4c24:	nop
    4c28:	adrp	x0, 26000 <PyInit__datetime@@Base+0x17118>
    4c2c:	add	x0, x0, #0xf70
    4c30:	adrp	x1, 26000 <PyInit__datetime@@Base+0x17118>
    4c34:	add	x1, x1, #0xf70
    4c38:	cmp	x1, x0
    4c3c:	b.eq	4c54 <PyNumber_FloorDivide@plt+0x54>  // b.none
    4c40:	adrp	x1, 24000 <PyInit__datetime@@Base+0x15118>
    4c44:	ldr	x1, [x1, #3936]
    4c48:	cbz	x1, 4c54 <PyNumber_FloorDivide@plt+0x54>
    4c4c:	mov	x16, x1
    4c50:	br	x16
    4c54:	ret
    4c58:	adrp	x0, 26000 <PyInit__datetime@@Base+0x17118>
    4c5c:	add	x0, x0, #0xf70
    4c60:	adrp	x1, 26000 <PyInit__datetime@@Base+0x17118>
    4c64:	add	x1, x1, #0xf70
    4c68:	sub	x1, x1, x0
    4c6c:	lsr	x2, x1, #63
    4c70:	add	x1, x2, x1, asr #3
    4c74:	cmp	xzr, x1, asr #1
    4c78:	asr	x1, x1, #1
    4c7c:	b.eq	4c94 <PyNumber_FloorDivide@plt+0x94>  // b.none
    4c80:	adrp	x2, 24000 <PyInit__datetime@@Base+0x15118>
    4c84:	ldr	x2, [x2, #4056]
    4c88:	cbz	x2, 4c94 <PyNumber_FloorDivide@plt+0x94>
    4c8c:	mov	x16, x2
    4c90:	br	x16
    4c94:	ret
    4c98:	stp	x29, x30, [sp, #-32]!
    4c9c:	mov	x29, sp
    4ca0:	str	x19, [sp, #16]
    4ca4:	adrp	x19, 26000 <PyInit__datetime@@Base+0x17118>
    4ca8:	ldrb	w0, [x19, #3952]
    4cac:	cbnz	w0, 4cd4 <PyNumber_FloorDivide@plt+0xd4>
    4cb0:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    4cb4:	ldr	x0, [x0, #3952]
    4cb8:	cbz	x0, 4cc8 <PyNumber_FloorDivide@plt+0xc8>
    4cbc:	adrp	x0, 25000 <PyInit__datetime@@Base+0x16118>
    4cc0:	ldr	x0, [x0, #656]
    4cc4:	bl	47d0 <__cxa_finalize@plt>
    4cc8:	bl	4c28 <PyNumber_FloorDivide@plt+0x28>
    4ccc:	mov	w0, #0x1                   	// #1
    4cd0:	strb	w0, [x19, #3952]
    4cd4:	ldr	x19, [sp, #16]
    4cd8:	ldp	x29, x30, [sp], #32
    4cdc:	ret
    4ce0:	b	4c58 <PyNumber_FloorDivide@plt+0x58>
    4ce4:	nop
    4ce8:	sub	w12, w0, #0x1
    4cec:	mov	w8, #0x6bd                 	// #1725
    4cf0:	movk	w8, #0x396b, lsl #16
    4cf4:	mov	w14, #0x3ab1                	// #15025
    4cf8:	asr	w13, w12, #31
    4cfc:	movk	w14, #0x2, lsl #16
    4d00:	smull	x8, w12, w8
    4d04:	mov	w5, #0x81fb                	// #33275
    4d08:	movk	w5, #0xe5ac, lsl #16
    4d0c:	mov	w11, #0x8eac                	// #36524
    4d10:	mov	w6, #0xb073                	// #45171
    4d14:	mov	w0, #0x5b5                 	// #1461
    4d18:	asr	x8, x8, #47
    4d1c:	movk	w6, #0x166d, lsl #16
    4d20:	sub	w7, w8, w13
    4d24:	mov	w4, #0xf9b1                	// #63921
    4d28:	mov	w8, w7
    4d2c:	movk	w4, #0xb38c, lsl #16
    4d30:	mov	w9, #0x19                  	// #25
    4d34:	mov	w10, #0x190                 	// #400
    4d38:	msub	w7, w7, w14, w12
    4d3c:	smull	x5, w7, w5
    4d40:	lsr	x5, x5, #32
    4d44:	add	w5, w7, w5
    4d48:	asr	w5, w5, #15
    4d4c:	sub	w5, w5, w7, asr #31
    4d50:	msub	w7, w5, w11, w7
    4d54:	smull	x6, w7, w6
    4d58:	asr	x6, x6, #39
    4d5c:	sub	w6, w6, w7, asr #31
    4d60:	msub	w7, w6, w0, w7
    4d64:	madd	w9, w5, w9, w6
    4d68:	smull	x0, w7, w4
    4d6c:	lsr	x0, x0, #32
    4d70:	add	w0, w7, w0
    4d74:	asr	w0, w0, #8
    4d78:	sub	w0, w0, w7, asr #31
    4d7c:	add	w4, w0, w9, lsl #2
    4d80:	cmp	w0, #0x4
    4d84:	ccmp	w5, #0x4, #0x4, ne  // ne = any
    4d88:	madd	w4, w8, w10, w4
    4d8c:	add	w4, w4, #0x1
    4d90:	str	w4, [x1]
    4d94:	b.eq	4e64 <PyNumber_FloorDivide@plt+0x264>  // b.none
    4d98:	mov	w4, #0x16d                 	// #365
    4d9c:	cmp	w0, #0x3
    4da0:	adrp	x8, 11000 <PyInit__datetime@@Base+0x2118>
    4da4:	add	x9, x8, #0x5e0
    4da8:	msub	w0, w0, w4, w7
    4dac:	add	w4, w0, #0x32
    4db0:	asr	w4, w4, #5
    4db4:	ldr	w7, [x9, w4, sxtw #2]
    4db8:	b.eq	4e1c <PyNumber_FloorDivide@plt+0x21c>  // b.none
    4dbc:	str	w4, [x2]
    4dc0:	cmp	w7, w0
    4dc4:	b.le	4e0c <PyNumber_FloorDivide@plt+0x20c>
    4dc8:	sub	w4, w4, #0x1
    4dcc:	str	w4, [x2]
    4dd0:	cmp	w4, #0x2
    4dd4:	ldr	w1, [x1]
    4dd8:	b.ne	4e50 <PyNumber_FloorDivide@plt+0x250>  // b.any
    4ddc:	tst	x1, #0x3
    4de0:	b.ne	4e50 <PyNumber_FloorDivide@plt+0x250>  // b.any
    4de4:	mov	w6, #0x5c29                	// #23593
    4de8:	mov	w5, #0x5c28                	// #23592
    4dec:	movk	w6, #0xc28f, lsl #16
    4df0:	movk	w5, #0x28f, lsl #16
    4df4:	mov	w2, #0x1d                  	// #29
    4df8:	mul	w1, w1, w6
    4dfc:	ror	w6, w1, #2
    4e00:	cmp	w6, w5
    4e04:	b.ls	4e38 <PyNumber_FloorDivide@plt+0x238>  // b.plast
    4e08:	sub	w7, w7, w2
    4e0c:	add	w0, w0, #0x1
    4e10:	sub	w0, w0, w7
    4e14:	str	w0, [x3]
    4e18:	ret
    4e1c:	cmp	w6, #0x18
    4e20:	ccmp	w5, #0x3, #0x4, eq  // eq = none
    4e24:	b.ne	4dbc <PyNumber_FloorDivide@plt+0x1bc>  // b.any
    4e28:	cmp	w4, #0x2
    4e2c:	str	w4, [x2]
    4e30:	cinc	w7, w7, gt
    4e34:	b	4dc0 <PyNumber_FloorDivide@plt+0x1c0>
    4e38:	mov	w5, #0xd70a                	// #55050
    4e3c:	ror	w1, w1, #4
    4e40:	movk	w5, #0xa3, lsl #16
    4e44:	cmp	w1, w5
    4e48:	b.ls	4e08 <PyNumber_FloorDivide@plt+0x208>  // b.plast
    4e4c:	nop
    4e50:	add	x8, x8, #0x5e0
    4e54:	add	x8, x8, #0x38
    4e58:	ldr	w2, [x8, w4, sxtw #2]
    4e5c:	sub	w7, w7, w2
    4e60:	b	4e0c <PyNumber_FloorDivide@plt+0x20c>
    4e64:	sub	w4, w4, #0x1
    4e68:	str	w4, [x1]
    4e6c:	mov	w0, #0xc                   	// #12
    4e70:	str	w0, [x2]
    4e74:	mov	w0, #0x1f                  	// #31
    4e78:	str	w0, [x3]
    4e7c:	ret
    4e80:	subs	w4, w0, #0x1
    4e84:	add	w5, w0, #0x2
    4e88:	mov	w3, #0x851f                	// #34079
    4e8c:	csel	w5, w5, w4, mi  // mi = first
    4e90:	movk	w3, #0x51eb, lsl #16
    4e94:	mov	w8, #0x16d                 	// #365
    4e98:	asr	w5, w5, #2
    4e9c:	adrp	x6, 11000 <PyInit__datetime@@Base+0x2118>
    4ea0:	smull	x3, w4, w3
    4ea4:	add	x6, x6, #0x5e0
    4ea8:	cmp	w1, #0x2
    4eac:	madd	w4, w4, w8, w5
    4eb0:	asr	x7, x3, #37
    4eb4:	asr	x3, x3, #39
    4eb8:	sub	w3, w3, w7
    4ebc:	ldr	w1, [x6, w1, sxtw #2]
    4ec0:	add	w3, w3, w4
    4ec4:	b.le	4ef4 <PyNumber_FloorDivide@plt+0x2f4>
    4ec8:	tst	x0, #0x3
    4ecc:	b.ne	4ef4 <PyNumber_FloorDivide@plt+0x2f4>  // b.any
    4ed0:	mov	w5, #0x5c29                	// #23593
    4ed4:	mov	w4, #0x5c28                	// #23592
    4ed8:	movk	w5, #0xc28f, lsl #16
    4edc:	movk	w4, #0x28f, lsl #16
    4ee0:	mul	w0, w0, w5
    4ee4:	ror	w5, w0, #2
    4ee8:	cmp	w5, w4
    4eec:	b.ls	4f00 <PyNumber_FloorDivide@plt+0x300>  // b.plast
    4ef0:	add	w1, w1, #0x1
    4ef4:	add	w0, w2, w1
    4ef8:	add	w0, w0, w3
    4efc:	ret
    4f00:	mov	w4, #0xd70a                	// #55050
    4f04:	ror	w0, w0, #4
    4f08:	movk	w4, #0xa3, lsl #16
    4f0c:	cmp	w0, w4
    4f10:	b.hi	4ef4 <PyNumber_FloorDivide@plt+0x2f4>  // b.pmore
    4f14:	add	w1, w1, #0x1
    4f18:	b	4ef4 <PyNumber_FloorDivide@plt+0x2f4>
    4f1c:	nop
    4f20:	add	x7, x0, #0x4
    4f24:	mov	x6, x0
    4f28:	ldrb	w4, [x6], #1
    4f2c:	sub	w5, w4, #0x30
    4f30:	cmp	w5, #0x9
    4f34:	b.hi	4fe8 <PyNumber_FloorDivide@plt+0x3e8>  // b.pmore
    4f38:	ldr	w4, [x1]
    4f3c:	cmp	x6, x7
    4f40:	add	w4, w4, w4, lsl #2
    4f44:	add	w4, w5, w4, lsl #1
    4f48:	str	w4, [x1]
    4f4c:	b.ne	4f28 <PyNumber_FloorDivide@plt+0x328>  // b.any
    4f50:	ldrb	w1, [x0, #4]
    4f54:	cmp	w1, #0x2d
    4f58:	b.ne	4ff0 <PyNumber_FloorDivide@plt+0x3f0>  // b.any
    4f5c:	ldrb	w1, [x0, #5]
    4f60:	sub	w4, w1, #0x30
    4f64:	cmp	w4, #0x9
    4f68:	b.hi	4fe8 <PyNumber_FloorDivide@plt+0x3e8>  // b.pmore
    4f6c:	ldr	w1, [x2]
    4f70:	add	w1, w1, w1, lsl #2
    4f74:	add	w1, w4, w1, lsl #1
    4f78:	str	w1, [x2]
    4f7c:	ldrb	w4, [x0, #6]
    4f80:	sub	w4, w4, #0x30
    4f84:	cmp	w4, #0x9
    4f88:	b.hi	4fe8 <PyNumber_FloorDivide@plt+0x3e8>  // b.pmore
    4f8c:	add	w1, w1, w1, lsl #2
    4f90:	add	w1, w4, w1, lsl #1
    4f94:	str	w1, [x2]
    4f98:	ldrb	w1, [x0, #7]
    4f9c:	cmp	w1, #0x2d
    4fa0:	b.ne	4ff0 <PyNumber_FloorDivide@plt+0x3f0>  // b.any
    4fa4:	ldrb	w1, [x0, #8]
    4fa8:	sub	w2, w1, #0x30
    4fac:	cmp	w2, #0x9
    4fb0:	b.hi	4fe8 <PyNumber_FloorDivide@plt+0x3e8>  // b.pmore
    4fb4:	ldr	w1, [x3]
    4fb8:	add	w1, w1, w1, lsl #2
    4fbc:	add	w1, w2, w1, lsl #1
    4fc0:	str	w1, [x3]
    4fc4:	ldrb	w2, [x0, #9]
    4fc8:	sub	w2, w2, #0x30
    4fcc:	cmp	w2, #0x9
    4fd0:	b.hi	4fe8 <PyNumber_FloorDivide@plt+0x3e8>  // b.pmore
    4fd4:	add	w1, w1, w1, lsl #2
    4fd8:	mov	w0, #0x0                   	// #0
    4fdc:	add	w1, w2, w1, lsl #1
    4fe0:	str	w1, [x3]
    4fe4:	ret
    4fe8:	mov	w0, #0xffffffff            	// #-1
    4fec:	ret
    4ff0:	mov	w0, #0xfffffffe            	// #-2
    4ff4:	ret
    4ff8:	sub	sp, sp, #0x20
    4ffc:	mov	x6, #0x0                   	// #0
    5000:	add	x7, sp, #0x8
    5004:	stp	x3, x4, [sp, #16]
    5008:	ldrb	w3, [x0]
    500c:	sub	w4, w3, #0x30
    5010:	cmp	w4, #0x9
    5014:	b.hi	50a4 <PyNumber_FloorDivide@plt+0x4a4>  // b.pmore
    5018:	ldr	w3, [x2]
    501c:	add	x0, x0, #0x3
    5020:	add	w3, w3, w3, lsl #2
    5024:	add	w3, w4, w3, lsl #1
    5028:	str	w3, [x2]
    502c:	ldurb	w4, [x0, #-2]
    5030:	add	w3, w3, w3, lsl #2
    5034:	sub	w4, w4, #0x30
    5038:	add	w3, w4, w3, lsl #1
    503c:	cmp	w4, #0x9
    5040:	b.hi	50a4 <PyNumber_FloorDivide@plt+0x4a4>  // b.pmore
    5044:	str	w3, [x2]
    5048:	cmp	x0, x1
    504c:	ldurb	w2, [x0, #-1]
    5050:	b.cs	50f4 <PyNumber_FloorDivide@plt+0x4f4>  // b.hs, b.nlast
    5054:	cmp	w2, #0x3a
    5058:	b.eq	50d8 <PyNumber_FloorDivide@plt+0x4d8>  // b.none
    505c:	cmp	w2, #0x2e
    5060:	b.ne	5100 <PyNumber_FloorDivide@plt+0x500>  // b.any
    5064:	sub	x4, x1, x0
    5068:	cmp	x4, #0x6
    506c:	ccmp	x4, #0x3, #0x4, ne  // ne = any
    5070:	b.ne	50a4 <PyNumber_FloorDivide@plt+0x4a4>  // b.any
    5074:	cbnz	x4, 5094 <PyNumber_FloorDivide@plt+0x494>
    5078:	b	50ec <PyNumber_FloorDivide@plt+0x4ec>
    507c:	ldr	w2, [x5]
    5080:	cmp	x1, x0
    5084:	add	w2, w2, w2, lsl #2
    5088:	add	w2, w3, w2, lsl #1
    508c:	str	w2, [x5]
    5090:	b.eq	50b0 <PyNumber_FloorDivide@plt+0x4b0>  // b.none
    5094:	ldrb	w2, [x0], #1
    5098:	sub	w3, w2, #0x30
    509c:	cmp	w3, #0x9
    50a0:	b.ls	507c <PyNumber_FloorDivide@plt+0x47c>  // b.plast
    50a4:	mov	w0, #0xfffffffd            	// #-3
    50a8:	add	sp, sp, #0x20
    50ac:	ret
    50b0:	cmp	x4, #0x3
    50b4:	b.ne	50c4 <PyNumber_FloorDivide@plt+0x4c4>  // b.any
    50b8:	mov	w0, #0x3e8                 	// #1000
    50bc:	mul	w2, w2, w0
    50c0:	str	w2, [x5]
    50c4:	ldrb	w0, [x1]
    50c8:	add	sp, sp, #0x20
    50cc:	cmp	w0, #0x0
    50d0:	cset	w0, ne  // ne = any
    50d4:	ret
    50d8:	add	x6, x6, #0x1
    50dc:	cmp	x6, #0x3
    50e0:	b.eq	5064 <PyNumber_FloorDivide@plt+0x464>  // b.none
    50e4:	ldr	x2, [x7, x6, lsl #3]
    50e8:	b	5008 <PyNumber_FloorDivide@plt+0x408>
    50ec:	mov	x1, x0
    50f0:	b	50c4 <PyNumber_FloorDivide@plt+0x4c4>
    50f4:	cmp	w2, #0x0
    50f8:	cset	w0, ne  // ne = any
    50fc:	b	50a8 <PyNumber_FloorDivide@plt+0x4a8>
    5100:	mov	w0, #0xfffffffc            	// #-4
    5104:	b	50a8 <PyNumber_FloorDivide@plt+0x4a8>
    5108:	stp	x29, x30, [sp, #-32]!
    510c:	add	x11, x0, x1
    5110:	mov	x13, x6
    5114:	mov	x29, sp
    5118:	mov	x12, x7
    511c:	mov	x8, x0
    5120:	b	5130 <PyNumber_FloorDivide@plt+0x530>
    5124:	add	x8, x8, #0x1
    5128:	cmp	x11, x8
    512c:	b.ls	5144 <PyNumber_FloorDivide@plt+0x544>  // b.plast
    5130:	ldrb	w9, [x8]
    5134:	mov	w10, #0xfd                  	// #253
    5138:	sub	w9, w9, #0x2b
    513c:	tst	w9, w10
    5140:	b.ne	5124 <PyNumber_FloorDivide@plt+0x524>  // b.any
    5144:	mov	x1, x8
    5148:	bl	4ff8 <PyNumber_FloorDivide@plt+0x3f8>
    514c:	tbnz	w0, #31, 51dc <PyNumber_FloorDivide@plt+0x5dc>
    5150:	cmp	x8, x11
    5154:	b.eq	51e4 <PyNumber_FloorDivide@plt+0x5e4>  // b.none
    5158:	sub	x0, x11, x8
    515c:	cmp	x0, #0x6
    5160:	ccmp	x0, #0x9, #0x4, ne  // ne = any
    5164:	ccmp	x0, #0x10, #0x4, ne  // ne = any
    5168:	b.ne	51f8 <PyNumber_FloorDivide@plt+0x5f8>  // b.any
    516c:	mov	x0, x8
    5170:	mov	w8, #0x1                   	// #1
    5174:	mov	x1, x11
    5178:	mov	x5, x12
    517c:	add	x4, sp, #0x1c
    5180:	add	x3, sp, #0x18
    5184:	ldrb	w6, [x0], #1
    5188:	add	x2, sp, #0x14
    518c:	stp	wzr, wzr, [sp, #20]
    5190:	cmp	w6, #0x2d
    5194:	str	wzr, [sp, #28]
    5198:	cneg	w9, w8, eq  // eq = none
    519c:	bl	4ff8 <PyNumber_FloorDivide@plt+0x3f8>
    51a0:	ldp	w1, w3, [sp, #20]
    51a4:	mov	w5, #0xe10                 	// #3600
    51a8:	ldr	w4, [sp, #28]
    51ac:	lsl	w2, w3, #4
    51b0:	sub	w2, w2, w3
    51b4:	lsl	w2, w2, #2
    51b8:	madd	w1, w1, w5, w2
    51bc:	add	w1, w1, w4
    51c0:	mul	w1, w1, w9
    51c4:	str	w1, [x13]
    51c8:	ldr	w1, [x12]
    51cc:	mul	w1, w1, w9
    51d0:	str	w1, [x12]
    51d4:	cbnz	w0, 51f8 <PyNumber_FloorDivide@plt+0x5f8>
    51d8:	mov	w0, w8
    51dc:	ldp	x29, x30, [sp], #32
    51e0:	ret
    51e4:	cmp	w0, #0x1
    51e8:	b.eq	51f8 <PyNumber_FloorDivide@plt+0x5f8>  // b.none
    51ec:	mov	w0, #0x0                   	// #0
    51f0:	ldp	x29, x30, [sp], #32
    51f4:	ret
    51f8:	mov	w0, #0xfffffffb            	// #-5
    51fc:	b	51dc <PyNumber_FloorDivide@plt+0x5dc>
    5200:	ldr	x1, [x0, #24]
    5204:	cbnz	x1, 5218 <PyNumber_FloorDivide@plt+0x618>
    5208:	ldr	w0, [x0, #32]
    520c:	cmp	w0, #0x0
    5210:	cset	w0, ne  // ne = any
    5214:	ret
    5218:	mov	w0, #0x1                   	// #1
    521c:	ret
    5220:	ldrb	w1, [x0, #24]
    5224:	cbz	w1, 523c <PyNumber_FloorDivide@plt+0x63c>
    5228:	ldr	x0, [x0, #32]
    522c:	ldr	x1, [x0]
    5230:	add	x1, x1, #0x1
    5234:	str	x1, [x0]
    5238:	ret
    523c:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    5240:	ldr	x0, [x0, #4024]
    5244:	ldr	x1, [x0]
    5248:	add	x1, x1, #0x1
    524c:	str	x1, [x0]
    5250:	ret
    5254:	nop
    5258:	ldrb	w1, [x0, #24]
    525c:	cbz	w1, 5274 <PyNumber_FloorDivide@plt+0x674>
    5260:	ldr	x0, [x0, #40]
    5264:	ldr	x1, [x0]
    5268:	add	x1, x1, #0x1
    526c:	str	x1, [x0]
    5270:	ret
    5274:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    5278:	ldr	x0, [x0, #4024]
    527c:	ldr	x1, [x0]
    5280:	add	x1, x1, #0x1
    5284:	str	x1, [x0]
    5288:	ret
    528c:	nop
    5290:	ldrb	w0, [x0, #31]
    5294:	b	4900 <PyLong_FromLong@plt>
    5298:	ldrb	w2, [x0, #29]
    529c:	ldrb	w1, [x0, #28]
    52a0:	ldrb	w3, [x0, #30]
    52a4:	lsl	w0, w2, #8
    52a8:	orr	w0, w0, w1, lsl #16
    52ac:	orr	w0, w0, w3
    52b0:	sxtw	x0, w0
    52b4:	b	4900 <PyLong_FromLong@plt>
    52b8:	ldrb	w0, [x0, #27]
    52bc:	b	4900 <PyLong_FromLong@plt>
    52c0:	ldrb	w0, [x0, #26]
    52c4:	b	4900 <PyLong_FromLong@plt>
    52c8:	ldrb	w0, [x0, #25]
    52cc:	b	4900 <PyLong_FromLong@plt>
    52d0:	ldrb	w0, [x0, #35]
    52d4:	b	4900 <PyLong_FromLong@plt>
    52d8:	ldrb	w2, [x0, #33]
    52dc:	ldrb	w1, [x0, #32]
    52e0:	ldrb	w3, [x0, #34]
    52e4:	lsl	w0, w2, #8
    52e8:	orr	w0, w0, w1, lsl #16
    52ec:	orr	w0, w0, w3
    52f0:	sxtw	x0, w0
    52f4:	b	4900 <PyLong_FromLong@plt>
    52f8:	ldrb	w0, [x0, #31]
    52fc:	b	4900 <PyLong_FromLong@plt>
    5300:	ldrb	w0, [x0, #30]
    5304:	b	4900 <PyLong_FromLong@plt>
    5308:	ldrb	w0, [x0, #29]
    530c:	b	4900 <PyLong_FromLong@plt>
    5310:	ldrb	w0, [x0, #28]
    5314:	b	4900 <PyLong_FromLong@plt>
    5318:	ldrb	w0, [x0, #27]
    531c:	b	4900 <PyLong_FromLong@plt>
    5320:	ldurh	w0, [x0, #25]
    5324:	rev16	w0, w0
    5328:	and	x0, x0, #0xffff
    532c:	b	4900 <PyLong_FromLong@plt>
    5330:	stp	x29, x30, [sp, #-16]!
    5334:	mov	x29, sp
    5338:	ldrb	w2, [x0, #28]
    533c:	ldrb	w1, [x0, #27]
    5340:	ldurh	w0, [x0, #25]
    5344:	rev16	w0, w0
    5348:	and	w0, w0, #0xffff
    534c:	bl	4e80 <PyNumber_FloorDivide@plt+0x280>
    5350:	mov	w2, #0x2493                	// #9363
    5354:	add	w0, w0, #0x6
    5358:	movk	w2, #0x9249, lsl #16
    535c:	ldp	x29, x30, [sp], #16
    5360:	smull	x1, w0, w2
    5364:	lsr	x1, x1, #32
    5368:	add	w1, w0, w1
    536c:	asr	w1, w1, #2
    5370:	sub	w1, w1, w0, asr #31
    5374:	lsl	w2, w1, #3
    5378:	sub	w1, w2, w1
    537c:	sub	w0, w0, w1
    5380:	sxtw	x0, w0
    5384:	b	4900 <PyLong_FromLong@plt>
    5388:	stp	x29, x30, [sp, #-16]!
    538c:	mov	x29, sp
    5390:	ldrb	w2, [x0, #28]
    5394:	ldrb	w1, [x0, #27]
    5398:	ldurh	w0, [x0, #25]
    539c:	rev16	w0, w0
    53a0:	and	w0, w0, #0xffff
    53a4:	bl	4e80 <PyNumber_FloorDivide@plt+0x280>
    53a8:	ldp	x29, x30, [sp], #16
    53ac:	sxtw	x0, w0
    53b0:	b	4900 <PyLong_FromLong@plt>
    53b4:	nop
    53b8:	stp	x29, x30, [sp, #-16]!
    53bc:	mov	x29, sp
    53c0:	ldrb	w2, [x0, #28]
    53c4:	ldrb	w1, [x0, #27]
    53c8:	ldurh	w0, [x0, #25]
    53cc:	rev16	w0, w0
    53d0:	and	w0, w0, #0xffff
    53d4:	bl	4e80 <PyNumber_FloorDivide@plt+0x280>
    53d8:	mov	w2, #0x2493                	// #9363
    53dc:	add	w0, w0, #0x6
    53e0:	movk	w2, #0x9249, lsl #16
    53e4:	ldp	x29, x30, [sp], #16
    53e8:	smull	x1, w0, w2
    53ec:	lsr	x1, x1, #32
    53f0:	add	w1, w0, w1
    53f4:	asr	w1, w1, #2
    53f8:	sub	w1, w1, w0, asr #31
    53fc:	lsl	w2, w1, #3
    5400:	sub	w1, w2, w1
    5404:	sub	w0, w0, w1
    5408:	add	w0, w0, #0x1
    540c:	sxtw	x0, w0
    5410:	b	4900 <PyLong_FromLong@plt>
    5414:	nop
    5418:	adrp	x1, 25000 <PyInit__datetime@@Base+0x16118>
    541c:	mov	x2, #0x0                   	// #0
    5420:	add	x1, x1, #0xab8
    5424:	b	4a60 <_PyObject_CallMethodId@plt>
    5428:	adrp	x3, f000 <PyInit__datetime@@Base+0x118>
    542c:	adrp	x2, 10000 <PyInit__datetime@@Base+0x1118>
    5430:	add	x3, x3, #0x7f8
    5434:	add	x2, x2, #0x3d8
    5438:	adrp	x1, 25000 <PyInit__datetime@@Base+0x16118>
    543c:	add	x1, x1, #0xab8
    5440:	b	4a60 <_PyObject_CallMethodId@plt>
    5444:	nop
    5448:	adrp	x1, 25000 <PyInit__datetime@@Base+0x16118>
    544c:	mov	x2, #0x0                   	// #0
    5450:	add	x1, x1, #0xab8
    5454:	b	4a60 <_PyObject_CallMethodId@plt>
    5458:	stp	x29, x30, [sp, #-16]!
    545c:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    5460:	adrp	x2, f000 <PyInit__datetime@@Base+0x118>
    5464:	mov	x29, sp
    5468:	ldr	x0, [x0, #3928]
    546c:	add	x2, x2, #0x800
    5470:	adrp	x1, f000 <PyInit__datetime@@Base+0x118>
    5474:	add	x1, x1, #0x808
    5478:	ldr	x0, [x0]
    547c:	bl	4b60 <PyErr_Format@plt>
    5480:	mov	x0, #0x0                   	// #0
    5484:	ldp	x29, x30, [sp], #16
    5488:	ret
    548c:	nop
    5490:	stp	x29, x30, [sp, #-16]!
    5494:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    5498:	adrp	x2, f000 <PyInit__datetime@@Base+0x118>
    549c:	mov	x29, sp
    54a0:	ldr	x0, [x0, #3928]
    54a4:	add	x2, x2, #0x830
    54a8:	adrp	x1, f000 <PyInit__datetime@@Base+0x118>
    54ac:	add	x1, x1, #0x808
    54b0:	ldr	x0, [x0]
    54b4:	bl	4b60 <PyErr_Format@plt>
    54b8:	mov	x0, #0x0                   	// #0
    54bc:	ldp	x29, x30, [sp], #16
    54c0:	ret
    54c4:	nop
    54c8:	stp	x29, x30, [sp, #-16]!
    54cc:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    54d0:	adrp	x2, f000 <PyInit__datetime@@Base+0x118>
    54d4:	mov	x29, sp
    54d8:	ldr	x0, [x0, #3928]
    54dc:	add	x2, x2, #0x840
    54e0:	adrp	x1, f000 <PyInit__datetime@@Base+0x118>
    54e4:	add	x1, x1, #0x808
    54e8:	ldr	x0, [x0]
    54ec:	bl	4b60 <PyErr_Format@plt>
    54f0:	mov	x0, #0x0                   	// #0
    54f4:	ldp	x29, x30, [sp], #16
    54f8:	ret
    54fc:	nop
    5500:	stp	x29, x30, [sp, #-48]!
    5504:	mov	x29, sp
    5508:	stp	x19, x20, [sp, #16]
    550c:	mov	w19, w1
    5510:	mov	w20, w2
    5514:	str	x21, [sp, #32]
    5518:	mov	w21, w0
    551c:	mov	x0, x4
    5520:	cbnz	w3, 5570 <PyNumber_FloorDivide@plt+0x970>
    5524:	mov	w3, #0xc9ff                	// #51711
    5528:	mov	w1, #0x93fe                	// #37886
    552c:	movk	w3, #0x3b9a, lsl #16
    5530:	add	w4, w21, w3
    5534:	movk	w1, #0x7735, lsl #16
    5538:	cmp	w4, w1
    553c:	b.hi	560c <PyNumber_FloorDivide@plt+0xa0c>  // b.pmore
    5540:	ldr	x2, [x0, #304]
    5544:	mov	x1, #0x0                   	// #0
    5548:	blr	x2
    554c:	cbz	x0, 5560 <PyNumber_FloorDivide@plt+0x960>
    5550:	mov	x1, #0xffffffffffffffff    	// #-1
    5554:	str	x1, [x0, #16]
    5558:	stp	w21, w19, [x0, #24]
    555c:	str	w20, [x0, #32]
    5560:	ldp	x19, x20, [sp, #16]
    5564:	ldr	x21, [sp, #32]
    5568:	ldp	x29, x30, [sp], #48
    556c:	ret
    5570:	mov	w1, #0x423f                	// #16959
    5574:	movk	w1, #0xf, lsl #16
    5578:	cmp	w2, w1
    557c:	b.ls	55a8 <PyNumber_FloorDivide@plt+0x9a8>  // b.plast
    5580:	mov	w1, #0xde83                	// #56963
    5584:	mov	w2, #0x4240                	// #16960
    5588:	movk	w1, #0x431b, lsl #16
    558c:	movk	w2, #0xf, lsl #16
    5590:	smull	x1, w20, w1
    5594:	asr	x1, x1, #50
    5598:	sub	w1, w1, w20, asr #31
    559c:	msub	w20, w1, w2, w20
    55a0:	tbnz	w20, #31, 55fc <PyNumber_FloorDivide@plt+0x9fc>
    55a4:	add	w19, w19, w1
    55a8:	mov	w1, #0x517f                	// #20863
    55ac:	movk	w1, #0x1, lsl #16
    55b0:	cmp	w19, w1
    55b4:	b.ls	5524 <PyNumber_FloorDivide@plt+0x924>  // b.plast
    55b8:	mov	w1, #0x4507                	// #17671
    55bc:	mov	w2, #0x5180                	// #20864
    55c0:	movk	w1, #0xc22e, lsl #16
    55c4:	movk	w2, #0x1, lsl #16
    55c8:	smull	x1, w19, w1
    55cc:	lsr	x1, x1, #32
    55d0:	add	w1, w19, w1
    55d4:	asr	w1, w1, #16
    55d8:	sub	w1, w1, w19, asr #31
    55dc:	msub	w19, w1, w2, w19
    55e0:	tbnz	w19, #31, 55ec <PyNumber_FloorDivide@plt+0x9ec>
    55e4:	add	w21, w21, w1
    55e8:	b	5524 <PyNumber_FloorDivide@plt+0x924>
    55ec:	sub	w1, w1, #0x1
    55f0:	add	w19, w19, w2
    55f4:	add	w21, w21, w1
    55f8:	b	5524 <PyNumber_FloorDivide@plt+0x924>
    55fc:	sub	w1, w1, #0x1
    5600:	add	w20, w20, w2
    5604:	add	w19, w19, w1
    5608:	b	55a8 <PyNumber_FloorDivide@plt+0x9a8>
    560c:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    5610:	mov	w2, w21
    5614:	adrp	x1, f000 <PyInit__datetime@@Base+0x118>
    5618:	add	x1, x1, #0x848
    561c:	ldr	x0, [x0, #4008]
    5620:	ldr	x0, [x0]
    5624:	bl	4b60 <PyErr_Format@plt>
    5628:	mov	x0, #0x0                   	// #0
    562c:	b	5560 <PyNumber_FloorDivide@plt+0x960>
    5630:	ldp	w5, w1, [x0, #24]
    5634:	adrp	x4, 25000 <PyInit__datetime@@Base+0x16118>
    5638:	ldr	w2, [x0, #32]
    563c:	add	x4, x4, #0x298
    5640:	neg	w0, w5
    5644:	neg	w1, w1
    5648:	neg	w2, w2
    564c:	mov	w3, #0x1                   	// #1
    5650:	b	5500 <PyNumber_FloorDivide@plt+0x900>
    5654:	nop
    5658:	mov	x2, x0
    565c:	adrp	x4, 25000 <PyInit__datetime@@Base+0x16118>
    5660:	ldp	w0, w1, [x0, #24]
    5664:	add	x4, x4, #0x298
    5668:	ldr	w2, [x2, #32]
    566c:	mov	w3, #0x0                   	// #0
    5670:	b	5500 <PyNumber_FloorDivide@plt+0x900>
    5674:	nop
    5678:	ldr	w3, [x0, #24]
    567c:	mov	x2, x0
    5680:	tbnz	w3, #31, 569c <PyNumber_FloorDivide@plt+0xa9c>
    5684:	ldp	w1, w2, [x2, #28]
    5688:	mov	w0, w3
    568c:	adrp	x4, 25000 <PyInit__datetime@@Base+0x16118>
    5690:	mov	w3, #0x0                   	// #0
    5694:	add	x4, x4, #0x298
    5698:	b	5500 <PyNumber_FloorDivide@plt+0x900>
    569c:	b	5630 <PyNumber_FloorDivide@plt+0xa30>
    56a0:	stp	x29, x30, [sp, #-16]!
    56a4:	mov	x10, x1
    56a8:	mov	x9, x0
    56ac:	mov	x29, sp
    56b0:	ldr	w1, [x1]
    56b4:	mov	x12, x2
    56b8:	ldr	w0, [x0]
    56bc:	cmp	w1, #0x2
    56c0:	b.ne	56cc <PyNumber_FloorDivide@plt+0xacc>  // b.any
    56c4:	tst	x0, #0x3
    56c8:	b.eq	5758 <PyNumber_FloorDivide@plt+0xb58>  // b.none
    56cc:	adrp	x4, 11000 <PyInit__datetime@@Base+0x2118>
    56d0:	add	x4, x4, #0x5e0
    56d4:	add	x4, x4, #0x38
    56d8:	ldr	w4, [x4, w1, sxtw #2]
    56dc:	ldr	w11, [x12]
    56e0:	cmp	w11, #0x0
    56e4:	b.le	5794 <PyNumber_FloorDivide@plt+0xb94>
    56e8:	cmp	w11, w4
    56ec:	b.le	573c <PyNumber_FloorDivide@plt+0xb3c>
    56f0:	add	w4, w4, #0x1
    56f4:	cmp	w11, w4
    56f8:	b.eq	5840 <PyNumber_FloorDivide@plt+0xc40>  // b.none
    56fc:	mov	w2, #0x1                   	// #1
    5700:	bl	4e80 <PyNumber_FloorDivide@plt+0x280>
    5704:	add	w0, w11, w0
    5708:	mov	w1, #0xb9da                	// #47578
    570c:	sub	w2, w0, #0x2
    5710:	movk	w1, #0x37, lsl #16
    5714:	sub	w0, w0, #0x1
    5718:	cmp	w2, w1
    571c:	b.hi	587c <PyNumber_FloorDivide@plt+0xc7c>  // b.pmore
    5720:	mov	x3, x12
    5724:	mov	x2, x10
    5728:	mov	x1, x9
    572c:	bl	4ce8 <PyNumber_FloorDivide@plt+0xe8>
    5730:	mov	w0, #0x0                   	// #0
    5734:	ldp	x29, x30, [sp], #16
    5738:	ret
    573c:	sub	w0, w0, #0x1
    5740:	mov	w1, #0x270e                	// #9998
    5744:	cmp	w0, w1
    5748:	b.hi	587c <PyNumber_FloorDivide@plt+0xc7c>  // b.pmore
    574c:	mov	w0, #0x0                   	// #0
    5750:	ldp	x29, x30, [sp], #16
    5754:	ret
    5758:	mov	w2, #0x5c29                	// #23593
    575c:	mov	w3, #0x5c28                	// #23592
    5760:	movk	w2, #0xc28f, lsl #16
    5764:	movk	w3, #0x28f, lsl #16
    5768:	mov	w4, #0x1d                  	// #29
    576c:	mul	w2, w0, w2
    5770:	ror	w5, w2, #2
    5774:	cmp	w5, w3
    5778:	b.hi	56dc <PyNumber_FloorDivide@plt+0xadc>  // b.pmore
    577c:	mov	w3, #0xd70a                	// #55050
    5780:	ror	w2, w2, #4
    5784:	movk	w3, #0xa3, lsl #16
    5788:	cmp	w2, w3
    578c:	b.ls	56dc <PyNumber_FloorDivide@plt+0xadc>  // b.plast
    5790:	b	56cc <PyNumber_FloorDivide@plt+0xacc>
    5794:	b.ne	56f0 <PyNumber_FloorDivide@plt+0xaf0>  // b.any
    5798:	sub	w0, w1, #0x1
    579c:	str	w0, [x10]
    57a0:	cmp	w0, #0x0
    57a4:	b.le	5818 <PyNumber_FloorDivide@plt+0xc18>
    57a8:	ldr	w1, [x9]
    57ac:	cmp	w0, #0x2
    57b0:	b.ne	57f8 <PyNumber_FloorDivide@plt+0xbf8>  // b.any
    57b4:	tst	x1, #0x3
    57b8:	b.ne	57f8 <PyNumber_FloorDivide@plt+0xbf8>  // b.any
    57bc:	mov	w4, #0x5c29                	// #23593
    57c0:	mov	w3, #0x5c28                	// #23592
    57c4:	movk	w4, #0xc28f, lsl #16
    57c8:	movk	w3, #0x28f, lsl #16
    57cc:	mov	w2, #0x1d                  	// #29
    57d0:	mul	w1, w1, w4
    57d4:	ror	w4, w1, #2
    57d8:	cmp	w4, w3
    57dc:	b.hi	5808 <PyNumber_FloorDivide@plt+0xc08>  // b.pmore
    57e0:	mov	w3, #0xd70a                	// #55050
    57e4:	ror	w1, w1, #4
    57e8:	movk	w3, #0xa3, lsl #16
    57ec:	cmp	w1, w3
    57f0:	b.ls	5808 <PyNumber_FloorDivide@plt+0xc08>  // b.plast
    57f4:	nop
    57f8:	adrp	x1, 11000 <PyInit__datetime@@Base+0x2118>
    57fc:	add	x1, x1, #0x5e0
    5800:	add	x1, x1, #0x38
    5804:	ldr	w2, [x1, w0, sxtw #2]
    5808:	str	w2, [x12]
    580c:	ldr	w0, [x9]
    5810:	sub	w0, w0, #0x1
    5814:	b	5740 <PyNumber_FloorDivide@plt+0xb40>
    5818:	ldr	w0, [x9]
    581c:	mov	w2, #0xc                   	// #12
    5820:	mov	w1, #0x1f                  	// #31
    5824:	sub	w0, w0, #0x1
    5828:	str	w0, [x9]
    582c:	str	w2, [x10]
    5830:	str	w1, [x12]
    5834:	ldr	w0, [x9]
    5838:	sub	w0, w0, #0x1
    583c:	b	5740 <PyNumber_FloorDivide@plt+0xb40>
    5840:	add	w0, w1, #0x1
    5844:	str	w0, [x10]
    5848:	mov	w0, #0x1                   	// #1
    584c:	str	w0, [x12]
    5850:	ldr	w1, [x10]
    5854:	cmp	w1, #0xc
    5858:	b.gt	5868 <PyNumber_FloorDivide@plt+0xc68>
    585c:	ldr	w0, [x9]
    5860:	sub	w0, w0, #0x1
    5864:	b	5740 <PyNumber_FloorDivide@plt+0xb40>
    5868:	str	w0, [x10]
    586c:	ldr	w0, [x9]
    5870:	add	w1, w0, #0x1
    5874:	str	w1, [x9]
    5878:	b	5740 <PyNumber_FloorDivide@plt+0xb40>
    587c:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    5880:	adrp	x1, f000 <PyInit__datetime@@Base+0x118>
    5884:	add	x1, x1, #0x870
    5888:	ldr	x0, [x0, #4008]
    588c:	ldr	x0, [x0]
    5890:	bl	4880 <PyErr_SetString@plt>
    5894:	mov	w0, #0xffffffff            	// #-1
    5898:	b	5734 <PyNumber_FloorDivide@plt+0xb34>
    589c:	nop
    58a0:	mov	x4, x0
    58a4:	stp	x29, x30, [sp, #-32]!
    58a8:	adrp	x1, f000 <PyInit__datetime@@Base+0x118>
    58ac:	mov	x29, sp
    58b0:	add	x0, x1, #0x888
    58b4:	ldp	w1, w2, [x4, #24]
    58b8:	ldr	w3, [x4, #32]
    58bc:	str	x19, [sp, #16]
    58c0:	ldr	x19, [x4, #8]
    58c4:	bl	49a0 <Py_BuildValue@plt>
    58c8:	mov	x2, x0
    58cc:	mov	x1, x19
    58d0:	adrp	x0, f000 <PyInit__datetime@@Base+0x118>
    58d4:	ldr	x19, [sp, #16]
    58d8:	add	x0, x0, #0x890
    58dc:	ldp	x29, x30, [sp], #32
    58e0:	b	49a0 <Py_BuildValue@plt>
    58e4:	nop
    58e8:	stp	x29, x30, [sp, #-16]!
    58ec:	mov	w4, #0x851f                	// #34079
    58f0:	movk	w4, #0x51eb, lsl #16
    58f4:	mov	x29, sp
    58f8:	ldurh	w11, [x0, #25]
    58fc:	mov	w13, #0x16d                 	// #365
    5900:	mov	w12, #0x2493                	// #9363
    5904:	ldrb	w2, [x0, #28]
    5908:	rev16	w11, w11
    590c:	movk	w12, #0x9249, lsl #16
    5910:	and	w11, w11, #0xffff
    5914:	ldrb	w1, [x0, #27]
    5918:	subs	w10, w11, #0x1
    591c:	add	w9, w11, #0x2
    5920:	csel	w9, w9, w10, mi  // mi = first
    5924:	mov	w0, w11
    5928:	smull	x4, w10, w4
    592c:	mul	w13, w10, w13
    5930:	asr	x5, x4, #37
    5934:	asr	x3, x4, #39
    5938:	add	w9, w13, w9, asr #2
    593c:	sub	w3, w3, w5
    5940:	add	w3, w3, w9
    5944:	add	w4, w3, #0x7
    5948:	add	w3, w3, #0x1
    594c:	smull	x9, w4, w12
    5950:	lsr	x9, x9, #32
    5954:	add	w9, w4, w9
    5958:	asr	w9, w9, #2
    595c:	sub	w9, w9, w4, asr #31
    5960:	lsl	w5, w9, #3
    5964:	sub	w9, w5, w9
    5968:	sub	w9, w4, w9
    596c:	cmp	w9, #0x3
    5970:	sub	w9, w3, w9
    5974:	add	w3, w9, #0x7
    5978:	csel	w9, w3, w9, gt
    597c:	bl	4e80 <PyNumber_FloorDivide@plt+0x280>
    5980:	sub	w3, w0, w9
    5984:	smull	x2, w3, w12
    5988:	lsr	x2, x2, #32
    598c:	add	w2, w3, w2
    5990:	asr	w2, w2, #2
    5994:	sub	w2, w2, w3, asr #31
    5998:	lsl	w1, w2, #3
    599c:	sub	w1, w1, w2
    59a0:	subs	w3, w3, w1
    59a4:	b.mi	59d0 <PyNumber_FloorDivide@plt+0xdd0>  // b.first
    59a8:	tbnz	w2, #31, 59dc <PyNumber_FloorDivide@plt+0xddc>
    59ac:	cmp	w2, #0x33
    59b0:	b.gt	5a90 <PyNumber_FloorDivide@plt+0xe90>
    59b4:	add	w2, w2, #0x1
    59b8:	ldp	x29, x30, [sp], #16
    59bc:	add	w3, w3, #0x1
    59c0:	mov	w1, w11
    59c4:	adrp	x0, f000 <PyInit__datetime@@Base+0x118>
    59c8:	add	x0, x0, #0x888
    59cc:	b	49a0 <Py_BuildValue@plt>
    59d0:	sub	w2, w2, #0x1
    59d4:	add	w3, w3, #0x7
    59d8:	tbz	w2, #31, 59ac <PyNumber_FloorDivide@plt+0xdac>
    59dc:	subs	w1, w11, #0x2
    59e0:	mov	w3, #0x851f                	// #34079
    59e4:	movk	w3, #0x51eb, lsl #16
    59e8:	csinc	w11, w1, w11, pl  // pl = nfrst
    59ec:	sub	w13, w13, #0x16d
    59f0:	mov	w2, #0x2493                	// #9363
    59f4:	smull	x1, w1, w3
    59f8:	add	w3, w13, w11, asr #2
    59fc:	movk	w2, #0x9249, lsl #16
    5a00:	asr	x11, x1, #37
    5a04:	asr	x1, x1, #39
    5a08:	sub	w11, w1, w11
    5a0c:	add	w11, w11, w3
    5a10:	add	w3, w11, #0x7
    5a14:	add	w11, w11, #0x1
    5a18:	smull	x1, w3, w2
    5a1c:	lsr	x1, x1, #32
    5a20:	add	w1, w3, w1
    5a24:	asr	w1, w1, #2
    5a28:	sub	w1, w1, w3, asr #31
    5a2c:	lsl	w4, w1, #3
    5a30:	sub	w1, w4, w1
    5a34:	sub	w1, w3, w1
    5a38:	sub	w3, w11, w1
    5a3c:	cmp	w1, #0x3
    5a40:	add	w1, w3, #0x7
    5a44:	csel	w3, w1, w3, gt
    5a48:	sub	w3, w0, w3
    5a4c:	smull	x2, w3, w2
    5a50:	lsr	x2, x2, #32
    5a54:	add	w2, w3, w2
    5a58:	asr	w2, w2, #2
    5a5c:	sub	w2, w2, w3, asr #31
    5a60:	lsl	w0, w2, #3
    5a64:	sub	w0, w0, w2
    5a68:	subs	w3, w3, w0
    5a6c:	b.mi	5b2c <PyNumber_FloorDivide@plt+0xf2c>  // b.first
    5a70:	ldp	x29, x30, [sp], #16
    5a74:	mov	w11, w10
    5a78:	add	w2, w2, #0x1
    5a7c:	add	w3, w3, #0x1
    5a80:	mov	w1, w11
    5a84:	adrp	x0, f000 <PyInit__datetime@@Base+0x118>
    5a88:	add	x0, x0, #0x888
    5a8c:	b	49a0 <Py_BuildValue@plt>
    5a90:	mov	w6, #0x851f                	// #34079
    5a94:	add	w1, w13, #0x16d
    5a98:	movk	w6, #0x51eb, lsl #16
    5a9c:	asr	w5, w11, #31
    5aa0:	add	w1, w1, w11, asr #2
    5aa4:	mov	w4, #0x2493                	// #9363
    5aa8:	smull	x13, w11, w6
    5aac:	movk	w4, #0x9249, lsl #16
    5ab0:	umull	x6, w11, w6
    5ab4:	add	w2, w2, #0x1
    5ab8:	asr	x7, x13, #37
    5abc:	lsr	x6, x6, #39
    5ac0:	sub	w13, w5, w7
    5ac4:	add	w13, w13, w6
    5ac8:	add	w1, w1, w13
    5acc:	add	w5, w1, #0x7
    5ad0:	add	w1, w1, #0x1
    5ad4:	smull	x4, w5, w4
    5ad8:	lsr	x4, x4, #32
    5adc:	add	w4, w5, w4
    5ae0:	asr	w4, w4, #2
    5ae4:	sub	w4, w4, w5, asr #31
    5ae8:	lsl	w6, w4, #3
    5aec:	sub	w4, w6, w4
    5af0:	sub	w4, w5, w4
    5af4:	sub	w1, w1, w4
    5af8:	cmp	w4, #0x3
    5afc:	add	w4, w1, #0x7
    5b00:	csel	w1, w4, w1, gt
    5b04:	cmp	w0, w1
    5b08:	b.lt	59b8 <PyNumber_FloorDivide@plt+0xdb8>  // b.tstop
    5b0c:	ldp	x29, x30, [sp], #16
    5b10:	add	w11, w11, #0x1
    5b14:	add	w3, w3, #0x1
    5b18:	mov	w1, w11
    5b1c:	mov	w2, #0x1                   	// #1
    5b20:	adrp	x0, f000 <PyInit__datetime@@Base+0x118>
    5b24:	add	x0, x0, #0x888
    5b28:	b	49a0 <Py_BuildValue@plt>
    5b2c:	ldp	x29, x30, [sp], #16
    5b30:	mov	w11, w10
    5b34:	add	w3, w3, #0x7
    5b38:	mov	w1, w11
    5b3c:	add	w3, w3, #0x1
    5b40:	adrp	x0, f000 <PyInit__datetime@@Base+0x118>
    5b44:	add	x0, x0, #0x888
    5b48:	b	49a0 <Py_BuildValue@plt>
    5b4c:	nop
    5b50:	cmp	w1, #0x3
    5b54:	b.eq	5bf8 <PyNumber_FloorDivide@plt+0xff8>  // b.none
    5b58:	b.gt	5bb0 <PyNumber_FloorDivide@plt+0xfb0>
    5b5c:	cmp	w1, #0x1
    5b60:	b.eq	5bc8 <PyNumber_FloorDivide@plt+0xfc8>  // b.none
    5b64:	cmp	w1, #0x2
    5b68:	b.ne	5b8c <PyNumber_FloorDivide@plt+0xf8c>  // b.any
    5b6c:	cbz	w0, 5b94 <PyNumber_FloorDivide@plt+0xf94>
    5b70:	adrp	x1, 24000 <PyInit__datetime@@Base+0x15118>
    5b74:	ldr	x1, [x1, #3992]
    5b78:	mov	x0, x1
    5b7c:	ldr	x2, [x1]
    5b80:	add	x2, x2, #0x1
    5b84:	str	x2, [x1]
    5b88:	ret
    5b8c:	cbnz	w1, 5c18 <PyNumber_FloorDivide@plt+0x1018>
    5b90:	tbz	w0, #31, 5b70 <PyNumber_FloorDivide@plt+0xf70>
    5b94:	adrp	x1, 24000 <PyInit__datetime@@Base+0x15118>
    5b98:	ldr	x1, [x1, #4040]
    5b9c:	mov	x0, x1
    5ba0:	ldr	x2, [x1]
    5ba4:	add	x2, x2, #0x1
    5ba8:	str	x2, [x1]
    5bac:	ret
    5bb0:	cmp	w1, #0x4
    5bb4:	b.eq	5bec <PyNumber_FloorDivide@plt+0xfec>  // b.none
    5bb8:	cmp	w1, #0x5
    5bbc:	b.ne	5c18 <PyNumber_FloorDivide@plt+0x1018>  // b.any
    5bc0:	tbnz	w0, #31, 5b70 <PyNumber_FloorDivide@plt+0xf70>
    5bc4:	b	5b94 <PyNumber_FloorDivide@plt+0xf94>
    5bc8:	cmp	w0, #0x0
    5bcc:	b.le	5b94 <PyNumber_FloorDivide@plt+0xf94>
    5bd0:	adrp	x1, 24000 <PyInit__datetime@@Base+0x15118>
    5bd4:	ldr	x1, [x1, #3992]
    5bd8:	mov	x0, x1
    5bdc:	ldr	x2, [x1]
    5be0:	add	x2, x2, #0x1
    5be4:	str	x2, [x1]
    5be8:	ret
    5bec:	cmp	w0, #0x0
    5bf0:	b.le	5b70 <PyNumber_FloorDivide@plt+0xf70>
    5bf4:	b	5b94 <PyNumber_FloorDivide@plt+0xf94>
    5bf8:	cbnz	w0, 5b94 <PyNumber_FloorDivide@plt+0xf94>
    5bfc:	adrp	x1, 24000 <PyInit__datetime@@Base+0x15118>
    5c00:	ldr	x1, [x1, #3992]
    5c04:	mov	x0, x1
    5c08:	ldr	x2, [x1]
    5c0c:	add	x2, x2, #0x1
    5c10:	str	x2, [x1]
    5c14:	ret
    5c18:	stp	x29, x30, [sp, #-16]!
    5c1c:	adrp	x0, f000 <PyInit__datetime@@Base+0x118>
    5c20:	add	x0, x0, #0x898
    5c24:	mov	x29, sp
    5c28:	bl	4a40 <Py_FatalError@plt>
    5c2c:	nop
    5c30:	adrp	x1, 26000 <PyInit__datetime@@Base+0x17118>
    5c34:	ldr	x2, [x1, #3960]
    5c38:	ldr	x1, [x0, #8]
    5c3c:	cmp	x2, x0
    5c40:	ldr	x1, [x1, #24]
    5c44:	b.eq	5c68 <PyNumber_FloorDivide@plt+0x1068>  // b.none
    5c48:	ldp	x2, x3, [x0, #16]
    5c4c:	cbz	x3, 5c5c <PyNumber_FloorDivide@plt+0x105c>
    5c50:	adrp	x0, f000 <PyInit__datetime@@Base+0x118>
    5c54:	add	x0, x0, #0x8c8
    5c58:	b	4700 <PyUnicode_FromFormat@plt>
    5c5c:	adrp	x0, f000 <PyInit__datetime@@Base+0x118>
    5c60:	add	x0, x0, #0x8c0
    5c64:	b	4700 <PyUnicode_FromFormat@plt>
    5c68:	adrp	x0, f000 <PyInit__datetime@@Base+0x118>
    5c6c:	add	x0, x0, #0x8b8
    5c70:	b	4700 <PyUnicode_FromFormat@plt>
    5c74:	nop
    5c78:	ldp	w3, w4, [x0, #28]
    5c7c:	mov	w1, #0x8889                	// #34953
    5c80:	movk	w1, #0x8888, lsl #16
    5c84:	smull	x2, w3, w1
    5c88:	lsr	x2, x2, #32
    5c8c:	add	w2, w3, w2
    5c90:	asr	w2, w2, #5
    5c94:	sub	w2, w2, w3, asr #31
    5c98:	lsl	w5, w2, #4
    5c9c:	sub	w5, w5, w2
    5ca0:	subs	w3, w3, w5, lsl #2
    5ca4:	b.pl	5cb0 <PyNumber_FloorDivide@plt+0x10b0>  // b.nfrst
    5ca8:	sub	w2, w2, #0x1
    5cac:	add	w3, w3, #0x3c
    5cb0:	mov	w1, #0x8889                	// #34953
    5cb4:	movk	w1, #0x8888, lsl #16
    5cb8:	smull	x1, w2, w1
    5cbc:	lsr	x1, x1, #32
    5cc0:	add	w1, w2, w1
    5cc4:	asr	w1, w1, #5
    5cc8:	sub	w1, w1, w2, asr #31
    5ccc:	lsl	w5, w1, #4
    5cd0:	sub	w5, w5, w1
    5cd4:	subs	w2, w2, w5, lsl #2
    5cd8:	b.pl	5ce4 <PyNumber_FloorDivide@plt+0x10e4>  // b.nfrst
    5cdc:	sub	w1, w1, #0x1
    5ce0:	add	w2, w2, #0x3c
    5ce4:	ldr	w0, [x0, #24]
    5ce8:	cbz	w0, 5d30 <PyNumber_FloorDivide@plt+0x1130>
    5cec:	add	w5, w0, #0x1
    5cf0:	and	w5, w5, #0xfffffffd
    5cf4:	cmp	w5, #0x0
    5cf8:	cbz	w4, 5d4c <PyNumber_FloorDivide@plt+0x114c>
    5cfc:	adrp	x7, 10000 <PyInit__datetime@@Base+0x1118>
    5d00:	adrp	x8, 10000 <PyInit__datetime@@Base+0x1118>
    5d04:	add	x7, x7, #0x3d8
    5d08:	add	x8, x8, #0xb98
    5d0c:	mov	w6, w4
    5d10:	mov	w5, w3
    5d14:	mov	w4, w2
    5d18:	mov	w3, w1
    5d1c:	csel	x2, x8, x7, eq  // eq = none
    5d20:	mov	w1, w0
    5d24:	adrp	x0, f000 <PyInit__datetime@@Base+0x118>
    5d28:	add	x0, x0, #0x8d8
    5d2c:	b	4700 <PyUnicode_FromFormat@plt>
    5d30:	cbz	w4, 5d40 <PyNumber_FloorDivide@plt+0x1140>
    5d34:	adrp	x0, f000 <PyInit__datetime@@Base+0x118>
    5d38:	add	x0, x0, #0x910
    5d3c:	b	4700 <PyUnicode_FromFormat@plt>
    5d40:	adrp	x0, f000 <PyInit__datetime@@Base+0x118>
    5d44:	add	x0, x0, #0x928
    5d48:	b	4700 <PyUnicode_FromFormat@plt>
    5d4c:	adrp	x6, 10000 <PyInit__datetime@@Base+0x1118>
    5d50:	adrp	x7, 10000 <PyInit__datetime@@Base+0x1118>
    5d54:	add	x6, x6, #0x3d8
    5d58:	add	x7, x7, #0xb98
    5d5c:	mov	w5, w3
    5d60:	mov	w4, w2
    5d64:	mov	w3, w1
    5d68:	csel	x2, x7, x6, eq  // eq = none
    5d6c:	mov	w1, w0
    5d70:	adrp	x0, f000 <PyInit__datetime@@Base+0x118>
    5d74:	add	x0, x0, #0x8f8
    5d78:	b	4700 <PyUnicode_FromFormat@plt>
    5d7c:	nop
    5d80:	stp	x29, x30, [sp, #-16]!
    5d84:	mov	w13, w2
    5d88:	mov	w12, w1
    5d8c:	mov	x29, sp
    5d90:	ldurh	w10, [x0, #25]
    5d94:	mov	w14, w3
    5d98:	ldrb	w11, [x0, #27]
    5d9c:	ldrb	w2, [x0, #28]
    5da0:	rev16	w10, w10
    5da4:	and	w10, w10, #0xffff
    5da8:	mov	w1, w11
    5dac:	mov	w0, w10
    5db0:	bl	4e80 <PyNumber_FloorDivide@plt+0x280>
    5db4:	add	w9, w0, #0x6
    5db8:	mov	w8, #0x2493                	// #9363
    5dbc:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    5dc0:	movk	w8, #0x9249, lsl #16
    5dc4:	add	x0, x0, #0xc18
    5dc8:	add	x15, x0, #0x60
    5dcc:	sub	w11, w11, #0x1
    5dd0:	smull	x8, w9, w8
    5dd4:	mov	w3, w2
    5dd8:	ldp	x29, x30, [sp], #16
    5ddc:	mov	w7, w10
    5de0:	lsr	x1, x8, #32
    5de4:	mov	w6, w14
    5de8:	add	w1, w9, w1
    5dec:	mov	w5, w13
    5df0:	ldr	x2, [x0, w11, sxtw #3]
    5df4:	asr	w1, w1, #2
    5df8:	sub	w1, w1, w9, asr #31
    5dfc:	mov	w4, w12
    5e00:	adrp	x0, f000 <PyInit__datetime@@Base+0x118>
    5e04:	add	x0, x0, #0x938
    5e08:	lsl	w8, w1, #3
    5e0c:	sub	w1, w8, w1
    5e10:	sub	w9, w9, w1
    5e14:	ldr	x1, [x15, w9, sxtw #3]
    5e18:	b	4700 <PyUnicode_FromFormat@plt>
    5e1c:	nop
    5e20:	ldrb	w3, [x0, #31]
    5e24:	ldrb	w2, [x0, #30]
    5e28:	ldrb	w1, [x0, #29]
    5e2c:	b	5d80 <PyNumber_FloorDivide@plt+0x1180>
    5e30:	mov	w3, #0x0                   	// #0
    5e34:	mov	w2, #0x0                   	// #0
    5e38:	mov	w1, #0x0                   	// #0
    5e3c:	b	5d80 <PyNumber_FloorDivide@plt+0x1180>
    5e40:	mov	x1, x0
    5e44:	adrp	x2, f000 <PyInit__datetime@@Base+0x118>
    5e48:	add	x0, x2, #0x958
    5e4c:	ldrb	w3, [x1, #28]
    5e50:	ldrb	w2, [x1, #27]
    5e54:	ldurh	w1, [x1, #25]
    5e58:	rev16	w1, w1
    5e5c:	and	w1, w1, #0xffff
    5e60:	b	4700 <PyUnicode_FromFormat@plt>
    5e64:	nop
    5e68:	mov	x2, x0
    5e6c:	adrp	x1, f000 <PyInit__datetime@@Base+0x118>
    5e70:	add	x0, x1, #0x968
    5e74:	ldr	x1, [x2, #8]
    5e78:	ldrb	w4, [x2, #28]
    5e7c:	ldrb	w3, [x2, #27]
    5e80:	ldr	x1, [x1, #24]
    5e84:	ldurh	w2, [x2, #25]
    5e88:	rev16	w2, w2
    5e8c:	and	w2, w2, #0xffff
    5e90:	b	4700 <PyUnicode_FromFormat@plt>
    5e94:	nop
    5e98:	stp	x29, x30, [sp, #-32]!
    5e9c:	cmp	x1, #0x0
    5ea0:	mov	x1, #0x30                  	// #48
    5ea4:	mov	x29, sp
    5ea8:	stp	x19, x20, [sp, #16]
    5eac:	mov	x20, x0
    5eb0:	mov	x0, #0x28                  	// #40
    5eb4:	csel	x0, x1, x0, ne  // ne = any
    5eb8:	bl	4890 <PyObject_Malloc@plt>
    5ebc:	cbz	x0, 5f38 <PyNumber_FloorDivide@plt+0x1338>
    5ec0:	mov	x19, x0
    5ec4:	mov	x0, x20
    5ec8:	str	x20, [x19, #8]
    5ecc:	bl	4af0 <PyType_GetFlags@plt>
    5ed0:	tbnz	w0, #9, 5efc <PyNumber_FloorDivide@plt+0x12fc>
    5ed4:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    5ed8:	ldr	x0, [x0, #3984]
    5edc:	ldr	w0, [x0, #4]
    5ee0:	cbnz	w0, 5f18 <PyNumber_FloorDivide@plt+0x1318>
    5ee4:	mov	x1, #0x1                   	// #1
    5ee8:	str	x1, [x19]
    5eec:	mov	x0, x19
    5ef0:	ldp	x19, x20, [sp, #16]
    5ef4:	ldp	x29, x30, [sp], #32
    5ef8:	ret
    5efc:	ldr	x0, [x20]
    5f00:	add	x0, x0, #0x1
    5f04:	str	x0, [x20]
    5f08:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    5f0c:	ldr	x0, [x0, #3984]
    5f10:	ldr	w0, [x0, #4]
    5f14:	cbz	w0, 5ee4 <PyNumber_FloorDivide@plt+0x12e4>
    5f18:	mov	x0, x19
    5f1c:	bl	4ab0 <_PyTraceMalloc_NewReference@plt>
    5f20:	mov	x1, #0x1                   	// #1
    5f24:	str	x1, [x19]
    5f28:	mov	x0, x19
    5f2c:	ldp	x19, x20, [sp, #16]
    5f30:	ldp	x29, x30, [sp], #32
    5f34:	ret
    5f38:	ldp	x19, x20, [sp, #16]
    5f3c:	ldp	x29, x30, [sp], #32
    5f40:	b	4820 <PyErr_NoMemory@plt>
    5f44:	nop
    5f48:	stp	x29, x30, [sp, #-32]!
    5f4c:	mov	x2, x0
    5f50:	mov	x1, #0x4                   	// #4
    5f54:	mov	x29, sp
    5f58:	add	x0, x0, #0x19
    5f5c:	str	x19, [sp, #16]
    5f60:	ldr	x19, [x2, #8]
    5f64:	bl	4800 <PyBytes_FromStringAndSize@plt>
    5f68:	adrp	x2, f000 <PyInit__datetime@@Base+0x118>
    5f6c:	mov	x1, x0
    5f70:	add	x0, x2, #0x978
    5f74:	bl	49a0 <Py_BuildValue@plt>
    5f78:	mov	x2, x0
    5f7c:	mov	x1, x19
    5f80:	adrp	x0, f000 <PyInit__datetime@@Base+0x118>
    5f84:	ldr	x19, [sp, #16]
    5f88:	add	x0, x0, #0x980
    5f8c:	ldp	x29, x30, [sp], #32
    5f90:	b	49a0 <Py_BuildValue@plt>
    5f94:	nop
    5f98:	stp	x29, x30, [sp, #-48]!
    5f9c:	mov	x29, sp
    5fa0:	add	x2, sp, #0x28
    5fa4:	str	x19, [sp, #16]
    5fa8:	mov	x19, x0
    5fac:	mov	x0, x1
    5fb0:	adrp	x1, f000 <PyInit__datetime@@Base+0x118>
    5fb4:	add	x1, x1, #0x988
    5fb8:	bl	4a30 <PyArg_ParseTuple@plt>
    5fbc:	cbz	w0, 6008 <PyNumber_FloorDivide@plt+0x1408>
    5fc0:	ldr	x0, [sp, #40]
    5fc4:	bl	48d0 <PyUnicode_GetLength@plt>
    5fc8:	cbz	x0, 5ff4 <PyNumber_FloorDivide@plt+0x13f4>
    5fcc:	ldr	x2, [sp, #40]
    5fd0:	adrp	x1, 25000 <PyInit__datetime@@Base+0x16118>
    5fd4:	add	x1, x1, #0xab8
    5fd8:	mov	x0, x19
    5fdc:	add	x1, x1, #0x18
    5fe0:	mov	x3, #0x0                   	// #0
    5fe4:	bl	4ae0 <_PyObject_CallMethodIdObjArgs@plt>
    5fe8:	ldr	x19, [sp, #16]
    5fec:	ldp	x29, x30, [sp], #48
    5ff0:	ret
    5ff4:	mov	x0, x19
    5ff8:	bl	4850 <PyObject_Str@plt>
    5ffc:	ldr	x19, [sp, #16]
    6000:	ldp	x29, x30, [sp], #48
    6004:	ret
    6008:	mov	x0, #0x0                   	// #0
    600c:	ldr	x19, [sp, #16]
    6010:	ldp	x29, x30, [sp], #48
    6014:	ret
    6018:	stp	x29, x30, [sp, #-48]!
    601c:	mov	x29, sp
    6020:	add	x3, sp, #0x28
    6024:	add	x2, sp, #0x20
    6028:	stp	x19, x20, [sp, #16]
    602c:	mov	x20, x0
    6030:	mov	x0, x1
    6034:	adrp	x1, f000 <PyInit__datetime@@Base+0x118>
    6038:	add	x1, x1, #0x998
    603c:	bl	4a30 <PyArg_ParseTuple@plt>
    6040:	cbz	w0, 6090 <PyNumber_FloorDivide@plt+0x1490>
    6044:	adrp	x19, 26000 <PyInit__datetime@@Base+0x17118>
    6048:	add	x19, x19, #0xf78
    604c:	ldr	x0, [x19, #8]
    6050:	cbz	x0, 607c <PyNumber_FloorDivide@plt+0x147c>
    6054:	ldp	x3, x4, [sp, #32]
    6058:	adrp	x1, 25000 <PyInit__datetime@@Base+0x16118>
    605c:	add	x1, x1, #0xab8
    6060:	mov	x2, x20
    6064:	add	x1, x1, #0x30
    6068:	mov	x5, #0x0                   	// #0
    606c:	bl	4ae0 <_PyObject_CallMethodIdObjArgs@plt>
    6070:	ldp	x19, x20, [sp, #16]
    6074:	ldp	x29, x30, [sp], #48
    6078:	ret
    607c:	adrp	x0, f000 <PyInit__datetime@@Base+0x118>
    6080:	add	x0, x0, #0x9a8
    6084:	bl	49d0 <PyImport_ImportModuleNoBlock@plt>
    6088:	str	x0, [x19, #8]
    608c:	cbnz	x0, 6054 <PyNumber_FloorDivide@plt+0x1454>
    6090:	mov	x0, #0x0                   	// #0
    6094:	ldp	x19, x20, [sp, #16]
    6098:	ldp	x29, x30, [sp], #48
    609c:	ret
    60a0:	stp	x29, x30, [sp, #-32]!
    60a4:	mov	x29, sp
    60a8:	str	x19, [sp, #16]
    60ac:	mov	x19, x0
    60b0:	ldr	x0, [x0, #16]
    60b4:	cmn	x0, #0x1
    60b8:	b.eq	60c8 <PyNumber_FloorDivide@plt+0x14c8>  // b.none
    60bc:	ldr	x19, [sp, #16]
    60c0:	ldp	x29, x30, [sp], #32
    60c4:	ret
    60c8:	add	x0, x19, #0x19
    60cc:	mov	x1, #0x4                   	// #4
    60d0:	bl	48b0 <_Py_HashBytes@plt>
    60d4:	str	x0, [x19, #16]
    60d8:	ldr	x19, [sp, #16]
    60dc:	ldp	x29, x30, [sp], #32
    60e0:	ret
    60e4:	nop
    60e8:	stp	x29, x30, [sp, #-32]!
    60ec:	mov	x29, sp
    60f0:	stp	x19, x20, [sp, #16]
    60f4:	mov	x19, x0
    60f8:	ldr	x0, [x0, #16]
    60fc:	cmn	x0, #0x1
    6100:	b.eq	6110 <PyNumber_FloorDivide@plt+0x1510>  // b.none
    6104:	ldp	x19, x20, [sp, #16]
    6108:	ldp	x29, x30, [sp], #32
    610c:	ret
    6110:	ldp	w1, w2, [x19, #24]
    6114:	adrp	x0, f000 <PyInit__datetime@@Base+0x118>
    6118:	ldr	w3, [x19, #32]
    611c:	add	x0, x0, #0x888
    6120:	bl	49a0 <Py_BuildValue@plt>
    6124:	mov	x20, x0
    6128:	cbz	x0, 614c <PyNumber_FloorDivide@plt+0x154c>
    612c:	bl	4a50 <PyObject_Hash@plt>
    6130:	ldr	x1, [x20]
    6134:	str	x0, [x19, #16]
    6138:	sub	x1, x1, #0x1
    613c:	str	x1, [x20]
    6140:	cbnz	x1, 6104 <PyNumber_FloorDivide@plt+0x1504>
    6144:	mov	x0, x20
    6148:	bl	4810 <_Py_Dealloc@plt>
    614c:	ldr	x0, [x19, #16]
    6150:	ldp	x19, x20, [sp, #16]
    6154:	ldp	x29, x30, [sp], #32
    6158:	ret
    615c:	nop
    6160:	ldr	x0, [x0, #16]
    6164:	b	60e8 <PyNumber_FloorDivide@plt+0x14e8>
    6168:	stp	x29, x30, [sp, #-32]!
    616c:	mov	x29, sp
    6170:	str	x19, [sp, #16]
    6174:	mov	x19, x0
    6178:	ldr	x0, [x0, #16]
    617c:	cbz	x0, 6194 <PyNumber_FloorDivide@plt+0x1594>
    6180:	ldr	x1, [x0]
    6184:	str	xzr, [x19, #16]
    6188:	sub	x1, x1, #0x1
    618c:	str	x1, [x0]
    6190:	cbz	x1, 61ec <PyNumber_FloorDivide@plt+0x15ec>
    6194:	ldr	x0, [x19, #24]
    6198:	cbz	x0, 61b0 <PyNumber_FloorDivide@plt+0x15b0>
    619c:	ldr	x1, [x0]
    61a0:	str	xzr, [x19, #24]
    61a4:	sub	x1, x1, #0x1
    61a8:	str	x1, [x0]
    61ac:	cbz	x1, 61cc <PyNumber_FloorDivide@plt+0x15cc>
    61b0:	ldr	x1, [x19, #8]
    61b4:	mov	x0, x19
    61b8:	ldr	x19, [sp, #16]
    61bc:	ldp	x29, x30, [sp], #32
    61c0:	ldr	x1, [x1, #320]
    61c4:	mov	x16, x1
    61c8:	br	x16
    61cc:	bl	4810 <_Py_Dealloc@plt>
    61d0:	ldr	x1, [x19, #8]
    61d4:	mov	x0, x19
    61d8:	ldr	x19, [sp, #16]
    61dc:	ldp	x29, x30, [sp], #32
    61e0:	ldr	x1, [x1, #320]
    61e4:	mov	x16, x1
    61e8:	br	x16
    61ec:	bl	4810 <_Py_Dealloc@plt>
    61f0:	b	6194 <PyNumber_FloorDivide@plt+0x1594>
    61f4:	nop
    61f8:	stp	x29, x30, [sp, #-32]!
    61fc:	mov	x29, sp
    6200:	str	x19, [sp, #16]
    6204:	mov	x19, x0
    6208:	ldrb	w0, [x0, #24]
    620c:	cbz	w0, 6228 <PyNumber_FloorDivide@plt+0x1628>
    6210:	ldr	x0, [x19, #32]
    6214:	cbz	x0, 6228 <PyNumber_FloorDivide@plt+0x1628>
    6218:	ldr	x1, [x0]
    621c:	sub	x1, x1, #0x1
    6220:	str	x1, [x0]
    6224:	cbz	x1, 6244 <PyNumber_FloorDivide@plt+0x1644>
    6228:	ldr	x1, [x19, #8]
    622c:	mov	x0, x19
    6230:	ldr	x19, [sp, #16]
    6234:	ldp	x29, x30, [sp], #32
    6238:	ldr	x1, [x1, #320]
    623c:	mov	x16, x1
    6240:	br	x16
    6244:	bl	4810 <_Py_Dealloc@plt>
    6248:	ldr	x1, [x19, #8]
    624c:	mov	x0, x19
    6250:	ldr	x19, [sp, #16]
    6254:	ldp	x29, x30, [sp], #32
    6258:	ldr	x1, [x1, #320]
    625c:	mov	x16, x1
    6260:	br	x16
    6264:	nop
    6268:	stp	x29, x30, [sp, #-32]!
    626c:	mov	x29, sp
    6270:	str	x19, [sp, #16]
    6274:	mov	x19, x0
    6278:	ldrb	w0, [x0, #24]
    627c:	cbz	w0, 6298 <PyNumber_FloorDivide@plt+0x1698>
    6280:	ldr	x0, [x19, #40]
    6284:	cbz	x0, 6298 <PyNumber_FloorDivide@plt+0x1698>
    6288:	ldr	x1, [x0]
    628c:	sub	x1, x1, #0x1
    6290:	str	x1, [x0]
    6294:	cbz	x1, 62b4 <PyNumber_FloorDivide@plt+0x16b4>
    6298:	ldr	x1, [x19, #8]
    629c:	mov	x0, x19
    62a0:	ldr	x19, [sp, #16]
    62a4:	ldp	x29, x30, [sp], #32
    62a8:	ldr	x1, [x1, #320]
    62ac:	mov	x16, x1
    62b0:	br	x16
    62b4:	bl	4810 <_Py_Dealloc@plt>
    62b8:	ldr	x1, [x19, #8]
    62bc:	mov	x0, x19
    62c0:	ldr	x19, [sp, #16]
    62c4:	ldp	x29, x30, [sp], #32
    62c8:	ldr	x1, [x1, #320]
    62cc:	mov	x16, x1
    62d0:	br	x16
    62d4:	nop
    62d8:	stp	x29, x30, [sp, #-48]!
    62dc:	mov	x29, sp
    62e0:	stp	x19, x20, [sp, #16]
    62e4:	mov	x20, x0
    62e8:	add	x0, x0, #0x19
    62ec:	str	x21, [sp, #32]
    62f0:	mov	w21, w1
    62f4:	mov	x1, #0x6                   	// #6
    62f8:	bl	4800 <PyBytes_FromStringAndSize@plt>
    62fc:	cbz	x0, 63a8 <PyNumber_FloorDivide@plt+0x17a8>
    6300:	mov	x19, x0
    6304:	cmp	w21, #0x3
    6308:	b.le	6320 <PyNumber_FloorDivide@plt+0x1720>
    630c:	ldrb	w0, [x20, #31]
    6310:	cbz	w0, 6320 <PyNumber_FloorDivide@plt+0x1720>
    6314:	ldrb	w0, [x19, #32]
    6318:	orr	w0, w0, #0xffffff80
    631c:	strb	w0, [x19, #32]
    6320:	ldrb	w0, [x20, #24]
    6324:	mov	x1, x19
    6328:	cbz	w0, 6378 <PyNumber_FloorDivide@plt+0x1778>
    632c:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    6330:	ldr	x2, [x20, #32]
    6334:	ldr	x0, [x0, #4024]
    6338:	cmp	x2, x0
    633c:	b.eq	6378 <PyNumber_FloorDivide@plt+0x1778>  // b.none
    6340:	mov	x0, #0x2                   	// #2
    6344:	bl	4bd0 <PyTuple_Pack@plt>
    6348:	ldr	x1, [x19]
    634c:	mov	x20, x0
    6350:	sub	x1, x1, #0x1
    6354:	str	x1, [x19]
    6358:	cbnz	x1, 6394 <PyNumber_FloorDivide@plt+0x1794>
    635c:	mov	x0, x19
    6360:	bl	4810 <_Py_Dealloc@plt>
    6364:	mov	x0, x20
    6368:	ldp	x19, x20, [sp, #16]
    636c:	ldr	x21, [sp, #32]
    6370:	ldp	x29, x30, [sp], #48
    6374:	ret
    6378:	mov	x0, #0x1                   	// #1
    637c:	bl	4bd0 <PyTuple_Pack@plt>
    6380:	ldr	x1, [x19]
    6384:	mov	x20, x0
    6388:	sub	x1, x1, #0x1
    638c:	str	x1, [x19]
    6390:	cbz	x1, 635c <PyNumber_FloorDivide@plt+0x175c>
    6394:	mov	x0, x20
    6398:	ldp	x19, x20, [sp, #16]
    639c:	ldr	x21, [sp, #32]
    63a0:	ldp	x29, x30, [sp], #48
    63a4:	ret
    63a8:	mov	x20, #0x0                   	// #0
    63ac:	mov	x0, x20
    63b0:	ldp	x19, x20, [sp, #16]
    63b4:	ldr	x21, [sp, #32]
    63b8:	ldp	x29, x30, [sp], #48
    63bc:	ret
    63c0:	stp	x29, x30, [sp, #-32]!
    63c4:	mov	w1, #0x2                   	// #2
    63c8:	mov	x29, sp
    63cc:	str	x19, [sp, #16]
    63d0:	ldr	x19, [x0, #8]
    63d4:	bl	62d8 <PyNumber_FloorDivide@plt+0x16d8>
    63d8:	adrp	x3, f000 <PyInit__datetime@@Base+0x118>
    63dc:	mov	x2, x0
    63e0:	mov	x1, x19
    63e4:	add	x0, x3, #0x980
    63e8:	ldr	x19, [sp, #16]
    63ec:	ldp	x29, x30, [sp], #32
    63f0:	b	49a0 <Py_BuildValue@plt>
    63f4:	nop
    63f8:	stp	x29, x30, [sp, #-48]!
    63fc:	mov	x29, sp
    6400:	add	x2, sp, #0x2c
    6404:	str	x19, [sp, #16]
    6408:	mov	x19, x0
    640c:	mov	x0, x1
    6410:	adrp	x1, f000 <PyInit__datetime@@Base+0x118>
    6414:	add	x1, x1, #0x9b8
    6418:	bl	4a30 <PyArg_ParseTuple@plt>
    641c:	cbz	w0, 6450 <PyNumber_FloorDivide@plt+0x1850>
    6420:	ldr	w1, [sp, #44]
    6424:	mov	x0, x19
    6428:	ldr	x19, [x19, #8]
    642c:	bl	62d8 <PyNumber_FloorDivide@plt+0x16d8>
    6430:	mov	x2, x0
    6434:	mov	x1, x19
    6438:	adrp	x0, f000 <PyInit__datetime@@Base+0x118>
    643c:	add	x0, x0, #0x980
    6440:	bl	49a0 <Py_BuildValue@plt>
    6444:	ldr	x19, [sp, #16]
    6448:	ldp	x29, x30, [sp], #48
    644c:	ret
    6450:	mov	x0, #0x0                   	// #0
    6454:	ldr	x19, [sp, #16]
    6458:	ldp	x29, x30, [sp], #48
    645c:	ret
    6460:	stp	x29, x30, [sp, #-112]!
    6464:	mov	x29, sp
    6468:	stp	x23, x24, [sp, #48]
    646c:	mov	x24, x0
    6470:	ldr	x0, [x2, #8]
    6474:	stp	x21, x22, [sp, #32]
    6478:	mov	x22, x1
    647c:	stp	x19, x20, [sp, #16]
    6480:	mov	x19, x2
    6484:	mov	x20, x3
    6488:	ldr	x1, [x0, #168]
    648c:	tbnz	w1, #24, 65e0 <PyNumber_FloorDivide@plt+0x19e0>
    6490:	adrp	x1, 24000 <PyInit__datetime@@Base+0x15118>
    6494:	mov	x23, x4
    6498:	ldr	x1, [x1, #3944]
    649c:	cmp	x0, x1
    64a0:	b.eq	64ac <PyNumber_FloorDivide@plt+0x18ac>  // b.none
    64a4:	bl	4b30 <PyType_IsSubtype@plt>
    64a8:	cbz	w0, 6630 <PyNumber_FloorDivide@plt+0x1a30>
    64ac:	mov	x0, x19
    64b0:	bl	4a10 <PyFloat_AsDouble@plt>
    64b4:	fmov	d1, #-1.000000000000000000e+00
    64b8:	fcmp	d0, d1
    64bc:	b.eq	65a8 <PyNumber_FloorDivide@plt+0x19a8>  // b.none
    64c0:	str	x25, [sp, #64]
    64c4:	add	x25, sp, #0x68
    64c8:	mov	x0, x25
    64cc:	str	d8, [sp, #72]
    64d0:	bl	4a80 <modf@plt>
    64d4:	fmov	d8, d0
    64d8:	ldr	d0, [sp, #104]
    64dc:	bl	4790 <PyLong_FromDouble@plt>
    64e0:	mov	x19, x0
    64e4:	cbz	x0, 65d4 <PyNumber_FloorDivide@plt+0x19d4>
    64e8:	mov	x1, x20
    64ec:	bl	4830 <PyNumber_Multiply@plt>
    64f0:	ldr	x1, [x19]
    64f4:	mov	x24, x0
    64f8:	sub	x0, x1, #0x1
    64fc:	str	x0, [x19]
    6500:	cbz	x0, 6624 <PyNumber_FloorDivide@plt+0x1a24>
    6504:	cbz	x24, 65d4 <PyNumber_FloorDivide@plt+0x19d4>
    6508:	mov	x1, x24
    650c:	mov	x0, x22
    6510:	bl	47c0 <PyNumber_Add@plt>
    6514:	mov	x21, x0
    6518:	ldr	x1, [x24]
    651c:	sub	x0, x1, #0x1
    6520:	str	x0, [x24]
    6524:	cbz	x0, 665c <PyNumber_FloorDivide@plt+0x1a5c>
    6528:	cbz	x21, 65d4 <PyNumber_FloorDivide@plt+0x19d4>
    652c:	fcmp	d8, #0.0
    6530:	b.eq	666c <PyNumber_FloorDivide@plt+0x1a6c>  // b.none
    6534:	mov	x0, x20
    6538:	bl	4a90 <PyLong_AsDouble@plt>
    653c:	fmul	d0, d8, d0
    6540:	mov	x0, x25
    6544:	bl	4a80 <modf@plt>
    6548:	fmov	d8, d0
    654c:	ldr	d0, [sp, #104]
    6550:	bl	4790 <PyLong_FromDouble@plt>
    6554:	mov	x19, x0
    6558:	cbz	x0, 6678 <PyNumber_FloorDivide@plt+0x1a78>
    655c:	mov	x1, x0
    6560:	mov	x0, x21
    6564:	bl	47c0 <PyNumber_Add@plt>
    6568:	mov	x20, x0
    656c:	ldr	x1, [x21]
    6570:	sub	x1, x1, #0x1
    6574:	str	x1, [x21]
    6578:	cbz	x1, 66ac <PyNumber_FloorDivide@plt+0x1aac>
    657c:	ldr	x1, [x19]
    6580:	sub	x1, x1, #0x1
    6584:	str	x1, [x19]
    6588:	cbz	x1, 66a0 <PyNumber_FloorDivide@plt+0x1aa0>
    658c:	ldr	d1, [x23]
    6590:	mov	x21, x20
    6594:	ldr	x25, [sp, #64]
    6598:	fadd	d1, d1, d8
    659c:	ldr	d8, [sp, #72]
    65a0:	str	d1, [x23]
    65a4:	b	65bc <PyNumber_FloorDivide@plt+0x19bc>
    65a8:	str	d0, [sp, #88]
    65ac:	bl	49b0 <PyErr_Occurred@plt>
    65b0:	ldr	d0, [sp, #88]
    65b4:	cbz	x0, 64c0 <PyNumber_FloorDivide@plt+0x18c0>
    65b8:	mov	x21, #0x0                   	// #0
    65bc:	mov	x0, x21
    65c0:	ldp	x19, x20, [sp, #16]
    65c4:	ldp	x21, x22, [sp, #32]
    65c8:	ldp	x23, x24, [sp, #48]
    65cc:	ldp	x29, x30, [sp], #112
    65d0:	ret
    65d4:	ldr	x25, [sp, #64]
    65d8:	ldr	d8, [sp, #72]
    65dc:	b	65b8 <PyNumber_FloorDivide@plt+0x19b8>
    65e0:	mov	x1, x3
    65e4:	mov	x0, x2
    65e8:	mov	x21, #0x0                   	// #0
    65ec:	bl	4830 <PyNumber_Multiply@plt>
    65f0:	mov	x19, x0
    65f4:	cbz	x0, 65bc <PyNumber_FloorDivide@plt+0x19bc>
    65f8:	mov	x1, x19
    65fc:	mov	x0, x22
    6600:	bl	47c0 <PyNumber_Add@plt>
    6604:	mov	x21, x0
    6608:	ldr	x1, [x19]
    660c:	sub	x0, x1, #0x1
    6610:	str	x0, [x19]
    6614:	cbnz	x0, 65bc <PyNumber_FloorDivide@plt+0x19bc>
    6618:	mov	x0, x19
    661c:	bl	4810 <_Py_Dealloc@plt>
    6620:	b	65bc <PyNumber_FloorDivide@plt+0x19bc>
    6624:	mov	x0, x19
    6628:	bl	4810 <_Py_Dealloc@plt>
    662c:	b	6504 <PyNumber_FloorDivide@plt+0x1904>
    6630:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    6634:	mov	x2, x24
    6638:	ldr	x3, [x19, #8]
    663c:	mov	x21, #0x0                   	// #0
    6640:	ldr	x0, [x0, #3976]
    6644:	adrp	x1, f000 <PyInit__datetime@@Base+0x118>
    6648:	ldr	x3, [x3, #24]
    664c:	add	x1, x1, #0x9c8
    6650:	ldr	x0, [x0]
    6654:	bl	4b60 <PyErr_Format@plt>
    6658:	b	65bc <PyNumber_FloorDivide@plt+0x19bc>
    665c:	mov	x0, x24
    6660:	bl	4810 <_Py_Dealloc@plt>
    6664:	cbnz	x21, 652c <PyNumber_FloorDivide@plt+0x192c>
    6668:	b	65d4 <PyNumber_FloorDivide@plt+0x19d4>
    666c:	ldr	x25, [sp, #64]
    6670:	ldr	d8, [sp, #72]
    6674:	b	65bc <PyNumber_FloorDivide@plt+0x19bc>
    6678:	ldr	x0, [x21]
    667c:	sub	x0, x0, #0x1
    6680:	str	x0, [x21]
    6684:	cbnz	x0, 65d4 <PyNumber_FloorDivide@plt+0x19d4>
    6688:	mov	x0, x21
    668c:	bl	4810 <_Py_Dealloc@plt>
    6690:	mov	x21, #0x0                   	// #0
    6694:	ldr	d8, [sp, #72]
    6698:	ldr	x25, [sp, #64]
    669c:	b	65bc <PyNumber_FloorDivide@plt+0x19bc>
    66a0:	mov	x0, x19
    66a4:	bl	4810 <_Py_Dealloc@plt>
    66a8:	b	658c <PyNumber_FloorDivide@plt+0x198c>
    66ac:	mov	x0, x21
    66b0:	bl	4810 <_Py_Dealloc@plt>
    66b4:	b	657c <PyNumber_FloorDivide@plt+0x197c>
    66b8:	stp	x29, x30, [sp, #-32]!
    66bc:	mov	x29, sp
    66c0:	str	x19, [sp, #16]
    66c4:	bl	4b70 <PyNumber_Divmod@plt>
    66c8:	cbz	x0, 66f8 <PyNumber_FloorDivide@plt+0x1af8>
    66cc:	mov	x19, x0
    66d0:	ldr	x0, [x0, #8]
    66d4:	ldr	x1, [x0, #168]
    66d8:	tbz	w1, #26, 6744 <PyNumber_FloorDivide@plt+0x1b44>
    66dc:	ldr	x2, [x19, #16]
    66e0:	cmp	x2, #0x2
    66e4:	b.ne	670c <PyNumber_FloorDivide@plt+0x1b0c>  // b.any
    66e8:	mov	x0, x19
    66ec:	ldr	x19, [sp, #16]
    66f0:	ldp	x29, x30, [sp], #32
    66f4:	ret
    66f8:	mov	x19, #0x0                   	// #0
    66fc:	mov	x0, x19
    6700:	ldr	x19, [sp, #16]
    6704:	ldp	x29, x30, [sp], #32
    6708:	ret
    670c:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    6710:	adrp	x1, f000 <PyInit__datetime@@Base+0x118>
    6714:	add	x1, x1, #0xa28
    6718:	ldr	x0, [x0, #3976]
    671c:	ldr	x0, [x0]
    6720:	bl	4b60 <PyErr_Format@plt>
    6724:	ldr	x0, [x19]
    6728:	sub	x0, x0, #0x1
    672c:	str	x0, [x19]
    6730:	cbnz	x0, 66f8 <PyNumber_FloorDivide@plt+0x1af8>
    6734:	mov	x0, x19
    6738:	mov	x19, #0x0                   	// #0
    673c:	bl	4810 <_Py_Dealloc@plt>
    6740:	b	66e8 <PyNumber_FloorDivide@plt+0x1ae8>
    6744:	adrp	x3, 24000 <PyInit__datetime@@Base+0x15118>
    6748:	adrp	x1, f000 <PyInit__datetime@@Base+0x118>
    674c:	add	x1, x1, #0x9f8
    6750:	ldr	x3, [x3, #3976]
    6754:	ldr	x2, [x0, #24]
    6758:	ldr	x0, [x3]
    675c:	b	6720 <PyNumber_FloorDivide@plt+0x1b20>
    6760:	stp	x29, x30, [sp, #-80]!
    6764:	mov	x29, sp
    6768:	stp	x23, x24, [sp, #48]
    676c:	adrp	x23, 26000 <PyInit__datetime@@Base+0x17118>
    6770:	add	x2, x23, #0xf78
    6774:	stp	x21, x22, [sp, #32]
    6778:	mov	x22, x1
    677c:	ldr	x1, [x2, #16]
    6780:	bl	66b8 <PyNumber_FloorDivide@plt+0x1ab8>
    6784:	cbz	x0, 6904 <PyNumber_FloorDivide@plt+0x1d04>
    6788:	stp	x19, x20, [sp, #16]
    678c:	mov	x19, x0
    6790:	ldr	x0, [x0, #32]
    6794:	bl	4bb0 <_PyLong_AsInt@plt>
    6798:	mov	w21, w0
    679c:	cmn	w0, #0x1
    67a0:	b.eq	68ac <PyNumber_FloorDivide@plt+0x1cac>  // b.none
    67a4:	mov	w0, #0x423f                	// #16959
    67a8:	movk	w0, #0xf, lsl #16
    67ac:	cmp	w21, w0
    67b0:	b.hi	68b4 <PyNumber_FloorDivide@plt+0x1cb4>  // b.pmore
    67b4:	ldr	x20, [x19, #24]
    67b8:	ldr	x0, [x20]
    67bc:	add	x0, x0, #0x1
    67c0:	str	x0, [x20]
    67c4:	ldr	x0, [x19]
    67c8:	sub	x0, x0, #0x1
    67cc:	str	x0, [x19]
    67d0:	cbz	x0, 68a0 <PyNumber_FloorDivide@plt+0x1ca0>
    67d4:	add	x2, x23, #0xf78
    67d8:	mov	x0, x20
    67dc:	ldr	x1, [x2, #24]
    67e0:	bl	66b8 <PyNumber_FloorDivide@plt+0x1ab8>
    67e4:	mov	x19, x0
    67e8:	cbz	x0, 697c <PyNumber_FloorDivide@plt+0x1d7c>
    67ec:	ldr	x0, [x20]
    67f0:	sub	x0, x0, #0x1
    67f4:	str	x0, [x20]
    67f8:	cbz	x0, 693c <PyNumber_FloorDivide@plt+0x1d3c>
    67fc:	ldr	x0, [x19, #32]
    6800:	bl	4bb0 <_PyLong_AsInt@plt>
    6804:	mov	w23, w0
    6808:	cmn	w0, #0x1
    680c:	b.eq	68ac <PyNumber_FloorDivide@plt+0x1cac>  // b.none
    6810:	mov	w0, #0x517f                	// #20863
    6814:	movk	w0, #0x1, lsl #16
    6818:	cmp	w23, w0
    681c:	b.hi	68b4 <PyNumber_FloorDivide@plt+0x1cb4>  // b.pmore
    6820:	ldr	x20, [x19, #24]
    6824:	mov	x0, x20
    6828:	ldr	x1, [x20]
    682c:	str	x25, [sp, #64]
    6830:	add	x1, x1, #0x1
    6834:	str	x1, [x20]
    6838:	bl	4bb0 <_PyLong_AsInt@plt>
    683c:	mov	w25, w0
    6840:	cmn	w0, #0x1
    6844:	b.eq	695c <PyNumber_FloorDivide@plt+0x1d5c>  // b.none
    6848:	mov	x4, x22
    684c:	mov	w2, w21
    6850:	mov	w1, w23
    6854:	mov	w0, w25
    6858:	mov	w3, #0x0                   	// #0
    685c:	bl	5500 <PyNumber_FloorDivide@plt+0x900>
    6860:	mov	x24, x0
    6864:	ldr	x0, [x19]
    6868:	sub	x0, x0, #0x1
    686c:	str	x0, [x19]
    6870:	cbz	x0, 696c <PyNumber_FloorDivide@plt+0x1d6c>
    6874:	ldr	x25, [sp, #64]
    6878:	ldr	x1, [x20]
    687c:	sub	x1, x1, #0x1
    6880:	str	x1, [x20]
    6884:	cbz	x1, 691c <PyNumber_FloorDivide@plt+0x1d1c>
    6888:	mov	x0, x24
    688c:	ldp	x19, x20, [sp, #16]
    6890:	ldp	x21, x22, [sp, #32]
    6894:	ldp	x23, x24, [sp, #48]
    6898:	ldp	x29, x30, [sp], #80
    689c:	ret
    68a0:	mov	x0, x19
    68a4:	bl	4810 <_Py_Dealloc@plt>
    68a8:	b	67d4 <PyNumber_FloorDivide@plt+0x1bd4>
    68ac:	bl	49b0 <PyErr_Occurred@plt>
    68b0:	cbnz	x0, 68cc <PyNumber_FloorDivide@plt+0x1ccc>
    68b4:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    68b8:	adrp	x1, f000 <PyInit__datetime@@Base+0x118>
    68bc:	add	x1, x1, #0xa50
    68c0:	ldr	x0, [x0, #3976]
    68c4:	ldr	x0, [x0]
    68c8:	bl	4880 <PyErr_SetString@plt>
    68cc:	ldr	x0, [x19]
    68d0:	sub	x0, x0, #0x1
    68d4:	str	x0, [x19]
    68d8:	cbnz	x0, 6900 <PyNumber_FloorDivide@plt+0x1d00>
    68dc:	mov	x0, x19
    68e0:	mov	x24, #0x0                   	// #0
    68e4:	bl	4810 <_Py_Dealloc@plt>
    68e8:	mov	x0, x24
    68ec:	ldp	x19, x20, [sp, #16]
    68f0:	ldp	x21, x22, [sp, #32]
    68f4:	ldp	x23, x24, [sp, #48]
    68f8:	ldp	x29, x30, [sp], #80
    68fc:	ret
    6900:	ldp	x19, x20, [sp, #16]
    6904:	mov	x24, #0x0                   	// #0
    6908:	mov	x0, x24
    690c:	ldp	x21, x22, [sp, #32]
    6910:	ldp	x23, x24, [sp, #48]
    6914:	ldp	x29, x30, [sp], #80
    6918:	ret
    691c:	mov	x0, x20
    6920:	bl	4810 <_Py_Dealloc@plt>
    6924:	mov	x0, x24
    6928:	ldp	x19, x20, [sp, #16]
    692c:	ldp	x21, x22, [sp, #32]
    6930:	ldp	x23, x24, [sp, #48]
    6934:	ldp	x29, x30, [sp], #80
    6938:	ret
    693c:	mov	x0, x20
    6940:	bl	4810 <_Py_Dealloc@plt>
    6944:	ldr	x0, [x19, #32]
    6948:	bl	4bb0 <_PyLong_AsInt@plt>
    694c:	mov	w23, w0
    6950:	cmn	w0, #0x1
    6954:	b.ne	6810 <PyNumber_FloorDivide@plt+0x1c10>  // b.any
    6958:	b	68ac <PyNumber_FloorDivide@plt+0x1cac>
    695c:	mov	x24, #0x0                   	// #0
    6960:	bl	49b0 <PyErr_Occurred@plt>
    6964:	cbz	x0, 6848 <PyNumber_FloorDivide@plt+0x1c48>
    6968:	b	6864 <PyNumber_FloorDivide@plt+0x1c64>
    696c:	mov	x0, x19
    6970:	bl	4810 <_Py_Dealloc@plt>
    6974:	ldr	x25, [sp, #64]
    6978:	b	6878 <PyNumber_FloorDivide@plt+0x1c78>
    697c:	mov	x24, #0x0                   	// #0
    6980:	b	6878 <PyNumber_FloorDivide@plt+0x1c78>
    6984:	nop
    6988:	sub	sp, sp, #0x90
    698c:	add	x3, sp, #0x80
    6990:	add	x4, sp, #0x78
    6994:	add	x5, sp, #0x70
    6998:	add	x7, sp, #0x68
    699c:	stp	x29, x30, [sp, #32]
    69a0:	add	x29, sp, #0x20
    69a4:	add	x6, sp, #0x60
    69a8:	stp	x5, x4, [sp]
    69ac:	add	x5, sp, #0x58
    69b0:	add	x4, sp, #0x50
    69b4:	str	x3, [sp, #16]
    69b8:	adrp	x3, 25000 <PyInit__datetime@@Base+0x16118>
    69bc:	add	x3, x3, #0xab8
    69c0:	stp	x19, x20, [sp, #48]
    69c4:	add	x3, x3, #0x48
    69c8:	mov	x20, x0
    69cc:	mov	x0, x1
    69d0:	mov	x1, x2
    69d4:	adrp	x2, f000 <PyInit__datetime@@Base+0x118>
    69d8:	add	x2, x2, #0xa78
    69dc:	stp	xzr, xzr, [sp, #80]
    69e0:	stp	xzr, xzr, [sp, #96]
    69e4:	stp	xzr, xzr, [sp, #112]
    69e8:	str	xzr, [sp, #128]
    69ec:	str	xzr, [sp, #136]
    69f0:	bl	4750 <PyArg_ParseTupleAndKeywords@plt>
    69f4:	cbz	w0, 6a54 <PyNumber_FloorDivide@plt+0x1e54>
    69f8:	mov	x0, #0x0                   	// #0
    69fc:	bl	4900 <PyLong_FromLong@plt>
    6a00:	mov	x19, x0
    6a04:	cbz	x0, 6a54 <PyNumber_FloorDivide@plt+0x1e54>
    6a08:	ldr	x2, [sp, #96]
    6a0c:	stp	x21, x22, [sp, #64]
    6a10:	cbz	x2, 6a6c <PyNumber_FloorDivide@plt+0x1e6c>
    6a14:	adrp	x3, 24000 <PyInit__datetime@@Base+0x15118>
    6a18:	mov	x1, x19
    6a1c:	add	x4, sp, #0x88
    6a20:	adrp	x0, f000 <PyInit__datetime@@Base+0x118>
    6a24:	ldr	x3, [x3, #4048]
    6a28:	add	x0, x0, #0xa90
    6a2c:	ldr	x3, [x3]
    6a30:	bl	6460 <PyNumber_FloorDivide@plt+0x1860>
    6a34:	mov	x21, x0
    6a38:	ldr	x1, [x19]
    6a3c:	sub	x0, x1, #0x1
    6a40:	str	x0, [x19]
    6a44:	cbz	x0, 6d60 <PyNumber_FloorDivide@plt+0x2160>
    6a48:	cbnz	x21, 6a70 <PyNumber_FloorDivide@plt+0x1e70>
    6a4c:	nop
    6a50:	ldp	x21, x22, [sp, #64]
    6a54:	mov	x19, #0x0                   	// #0
    6a58:	mov	x0, x19
    6a5c:	ldp	x29, x30, [sp, #32]
    6a60:	ldp	x19, x20, [sp, #48]
    6a64:	add	sp, sp, #0x90
    6a68:	ret
    6a6c:	mov	x21, x0
    6a70:	ldr	x2, [sp, #104]
    6a74:	cbz	x2, 6cd0 <PyNumber_FloorDivide@plt+0x20d0>
    6a78:	adrp	x1, 26000 <PyInit__datetime@@Base+0x17118>
    6a7c:	add	x4, sp, #0x88
    6a80:	adrp	x0, f000 <PyInit__datetime@@Base+0x118>
    6a84:	add	x0, x0, #0xaa0
    6a88:	ldr	x3, [x1, #3992]
    6a8c:	mov	x1, x21
    6a90:	bl	6460 <PyNumber_FloorDivide@plt+0x1860>
    6a94:	mov	x19, x0
    6a98:	ldr	x1, [x21]
    6a9c:	sub	x0, x1, #0x1
    6aa0:	str	x0, [x21]
    6aa4:	cbz	x0, 6d70 <PyNumber_FloorDivide@plt+0x2170>
    6aa8:	cbz	x19, 6a50 <PyNumber_FloorDivide@plt+0x1e50>
    6aac:	ldr	x2, [sp, #88]
    6ab0:	cbz	x2, 6cdc <PyNumber_FloorDivide@plt+0x20dc>
    6ab4:	adrp	x1, 26000 <PyInit__datetime@@Base+0x17118>
    6ab8:	add	x4, sp, #0x88
    6abc:	adrp	x0, f000 <PyInit__datetime@@Base+0x118>
    6ac0:	add	x0, x0, #0xab0
    6ac4:	ldr	x3, [x1, #3976]
    6ac8:	mov	x1, x19
    6acc:	bl	6460 <PyNumber_FloorDivide@plt+0x1860>
    6ad0:	mov	x21, x0
    6ad4:	ldr	x1, [x19]
    6ad8:	sub	x0, x1, #0x1
    6adc:	str	x0, [x19]
    6ae0:	cbz	x0, 6d7c <PyNumber_FloorDivide@plt+0x217c>
    6ae4:	cbz	x21, 6a50 <PyNumber_FloorDivide@plt+0x1e50>
    6ae8:	ldr	x2, [sp, #112]
    6aec:	cbz	x2, 6ce8 <PyNumber_FloorDivide@plt+0x20e8>
    6af0:	adrp	x1, 26000 <PyInit__datetime@@Base+0x17118>
    6af4:	add	x4, sp, #0x88
    6af8:	adrp	x0, f000 <PyInit__datetime@@Base+0x118>
    6afc:	add	x0, x0, #0xab8
    6b00:	ldr	x3, [x1, #4000]
    6b04:	mov	x1, x21
    6b08:	bl	6460 <PyNumber_FloorDivide@plt+0x1860>
    6b0c:	mov	x19, x0
    6b10:	ldr	x1, [x21]
    6b14:	sub	x0, x1, #0x1
    6b18:	str	x0, [x21]
    6b1c:	cbz	x0, 6d88 <PyNumber_FloorDivide@plt+0x2188>
    6b20:	cbz	x19, 6a50 <PyNumber_FloorDivide@plt+0x1e50>
    6b24:	ldr	x2, [sp, #120]
    6b28:	cbz	x2, 6cf4 <PyNumber_FloorDivide@plt+0x20f4>
    6b2c:	adrp	x1, 26000 <PyInit__datetime@@Base+0x17118>
    6b30:	add	x4, sp, #0x88
    6b34:	adrp	x0, f000 <PyInit__datetime@@Base+0x118>
    6b38:	add	x0, x0, #0xac0
    6b3c:	ldr	x3, [x1, #4008]
    6b40:	mov	x1, x19
    6b44:	bl	6460 <PyNumber_FloorDivide@plt+0x1860>
    6b48:	mov	x21, x0
    6b4c:	ldr	x1, [x19]
    6b50:	sub	x0, x1, #0x1
    6b54:	str	x0, [x19]
    6b58:	cbz	x0, 6d94 <PyNumber_FloorDivide@plt+0x2194>
    6b5c:	cbz	x21, 6a50 <PyNumber_FloorDivide@plt+0x1e50>
    6b60:	ldr	x2, [sp, #80]
    6b64:	cbz	x2, 6d00 <PyNumber_FloorDivide@plt+0x2100>
    6b68:	adrp	x1, 26000 <PyInit__datetime@@Base+0x17118>
    6b6c:	add	x4, sp, #0x88
    6b70:	adrp	x0, f000 <PyInit__datetime@@Base+0x118>
    6b74:	add	x0, x0, #0xac8
    6b78:	ldr	x3, [x1, #4016]
    6b7c:	mov	x1, x21
    6b80:	bl	6460 <PyNumber_FloorDivide@plt+0x1860>
    6b84:	mov	x19, x0
    6b88:	ldr	x1, [x21]
    6b8c:	sub	x0, x1, #0x1
    6b90:	str	x0, [x21]
    6b94:	cbz	x0, 6da0 <PyNumber_FloorDivide@plt+0x21a0>
    6b98:	cbz	x19, 6a50 <PyNumber_FloorDivide@plt+0x1e50>
    6b9c:	ldr	x2, [sp, #128]
    6ba0:	cbz	x2, 6d0c <PyNumber_FloorDivide@plt+0x210c>
    6ba4:	adrp	x1, 26000 <PyInit__datetime@@Base+0x17118>
    6ba8:	add	x4, sp, #0x88
    6bac:	adrp	x0, f000 <PyInit__datetime@@Base+0x118>
    6bb0:	add	x0, x0, #0xad0
    6bb4:	ldr	x3, [x1, #4024]
    6bb8:	mov	x1, x19
    6bbc:	bl	6460 <PyNumber_FloorDivide@plt+0x1860>
    6bc0:	mov	x21, x0
    6bc4:	ldr	x1, [x19]
    6bc8:	sub	x0, x1, #0x1
    6bcc:	str	x0, [x19]
    6bd0:	cbz	x0, 6dac <PyNumber_FloorDivide@plt+0x21ac>
    6bd4:	cbz	x21, 6a50 <PyNumber_FloorDivide@plt+0x1e50>
    6bd8:	ldr	d1, [sp, #136]
    6bdc:	fcmp	d1, #0.0
    6be0:	b.eq	6d1c <PyNumber_FloorDivide@plt+0x211c>  // b.none
    6be4:	frinta	d0, d1
    6be8:	fmov	d2, #5.000000000000000000e-01
    6bec:	fabd	d1, d0, d1
    6bf0:	fcmp	d1, d2
    6bf4:	b.ne	6c54 <PyNumber_FloorDivide@plt+0x2054>  // b.any
    6bf8:	adrp	x1, 24000 <PyInit__datetime@@Base+0x15118>
    6bfc:	mov	x0, x21
    6c00:	ldr	x1, [x1, #4048]
    6c04:	ldr	x1, [x1]
    6c08:	bl	4930 <PyNumber_And@plt>
    6c0c:	mov	x19, x0
    6c10:	cbz	x0, 6dd0 <PyNumber_FloorDivide@plt+0x21d0>
    6c14:	bl	4a20 <PyObject_IsTrue@plt>
    6c18:	mov	w22, w0
    6c1c:	ldr	x1, [x19]
    6c20:	sub	x0, x1, #0x1
    6c24:	str	x0, [x19]
    6c28:	cbz	x0, 6df0 <PyNumber_FloorDivide@plt+0x21f0>
    6c2c:	cmn	w22, #0x1
    6c30:	b.eq	6dfc <PyNumber_FloorDivide@plt+0x21fc>  // b.none
    6c34:	scvtf	d1, w22
    6c38:	ldr	d0, [sp, #136]
    6c3c:	fmov	d2, #5.000000000000000000e-01
    6c40:	fadd	d0, d1, d0
    6c44:	fmul	d0, d0, d2
    6c48:	frinta	d0, d0
    6c4c:	fadd	d0, d0, d0
    6c50:	fsub	d0, d0, d1
    6c54:	fcvtzs	x0, d0
    6c58:	bl	4900 <PyLong_FromLong@plt>
    6c5c:	mov	x19, x0
    6c60:	cbz	x0, 6dd0 <PyNumber_FloorDivide@plt+0x21d0>
    6c64:	mov	x1, x0
    6c68:	mov	x0, x21
    6c6c:	bl	47c0 <PyNumber_Add@plt>
    6c70:	mov	x22, x0
    6c74:	ldr	x1, [x19]
    6c78:	sub	x0, x1, #0x1
    6c7c:	str	x0, [x19]
    6c80:	cbz	x0, 6dc4 <PyNumber_FloorDivide@plt+0x21c4>
    6c84:	ldr	x0, [x21]
    6c88:	sub	x0, x0, #0x1
    6c8c:	str	x0, [x21]
    6c90:	cbz	x0, 6db8 <PyNumber_FloorDivide@plt+0x21b8>
    6c94:	cbz	x22, 6a50 <PyNumber_FloorDivide@plt+0x1e50>
    6c98:	mov	x1, x20
    6c9c:	mov	x0, x22
    6ca0:	bl	6760 <PyNumber_FloorDivide@plt+0x1b60>
    6ca4:	mov	x19, x0
    6ca8:	ldr	x1, [x22]
    6cac:	sub	x0, x1, #0x1
    6cb0:	str	x0, [x22]
    6cb4:	cbz	x0, 6d40 <PyNumber_FloorDivide@plt+0x2140>
    6cb8:	mov	x0, x19
    6cbc:	ldp	x29, x30, [sp, #32]
    6cc0:	ldp	x19, x20, [sp, #48]
    6cc4:	ldp	x21, x22, [sp, #64]
    6cc8:	add	sp, sp, #0x90
    6ccc:	ret
    6cd0:	ldr	x2, [sp, #88]
    6cd4:	mov	x19, x21
    6cd8:	cbnz	x2, 6ab4 <PyNumber_FloorDivide@plt+0x1eb4>
    6cdc:	ldr	x2, [sp, #112]
    6ce0:	mov	x21, x19
    6ce4:	cbnz	x2, 6af0 <PyNumber_FloorDivide@plt+0x1ef0>
    6ce8:	ldr	x2, [sp, #120]
    6cec:	mov	x19, x21
    6cf0:	cbnz	x2, 6b2c <PyNumber_FloorDivide@plt+0x1f2c>
    6cf4:	ldr	x2, [sp, #80]
    6cf8:	mov	x21, x19
    6cfc:	cbnz	x2, 6b68 <PyNumber_FloorDivide@plt+0x1f68>
    6d00:	ldr	x2, [sp, #128]
    6d04:	mov	x19, x21
    6d08:	cbnz	x2, 6ba4 <PyNumber_FloorDivide@plt+0x1fa4>
    6d0c:	ldr	d1, [sp, #136]
    6d10:	mov	x21, x19
    6d14:	fcmp	d1, #0.0
    6d18:	b.ne	6be4 <PyNumber_FloorDivide@plt+0x1fe4>  // b.any
    6d1c:	mov	x22, x21
    6d20:	mov	x1, x20
    6d24:	mov	x0, x22
    6d28:	bl	6760 <PyNumber_FloorDivide@plt+0x1b60>
    6d2c:	mov	x19, x0
    6d30:	ldr	x1, [x22]
    6d34:	sub	x0, x1, #0x1
    6d38:	str	x0, [x22]
    6d3c:	cbnz	x0, 6cb8 <PyNumber_FloorDivide@plt+0x20b8>
    6d40:	mov	x0, x22
    6d44:	bl	4810 <_Py_Dealloc@plt>
    6d48:	mov	x0, x19
    6d4c:	ldp	x29, x30, [sp, #32]
    6d50:	ldp	x19, x20, [sp, #48]
    6d54:	ldp	x21, x22, [sp, #64]
    6d58:	add	sp, sp, #0x90
    6d5c:	ret
    6d60:	mov	x0, x19
    6d64:	bl	4810 <_Py_Dealloc@plt>
    6d68:	cbnz	x21, 6a70 <PyNumber_FloorDivide@plt+0x1e70>
    6d6c:	b	6a50 <PyNumber_FloorDivide@plt+0x1e50>
    6d70:	mov	x0, x21
    6d74:	bl	4810 <_Py_Dealloc@plt>
    6d78:	b	6aa8 <PyNumber_FloorDivide@plt+0x1ea8>
    6d7c:	mov	x0, x19
    6d80:	bl	4810 <_Py_Dealloc@plt>
    6d84:	b	6ae4 <PyNumber_FloorDivide@plt+0x1ee4>
    6d88:	mov	x0, x21
    6d8c:	bl	4810 <_Py_Dealloc@plt>
    6d90:	b	6b20 <PyNumber_FloorDivide@plt+0x1f20>
    6d94:	mov	x0, x19
    6d98:	bl	4810 <_Py_Dealloc@plt>
    6d9c:	b	6b5c <PyNumber_FloorDivide@plt+0x1f5c>
    6da0:	mov	x0, x21
    6da4:	bl	4810 <_Py_Dealloc@plt>
    6da8:	b	6b98 <PyNumber_FloorDivide@plt+0x1f98>
    6dac:	mov	x0, x19
    6db0:	bl	4810 <_Py_Dealloc@plt>
    6db4:	b	6bd4 <PyNumber_FloorDivide@plt+0x1fd4>
    6db8:	mov	x0, x21
    6dbc:	bl	4810 <_Py_Dealloc@plt>
    6dc0:	b	6c94 <PyNumber_FloorDivide@plt+0x2094>
    6dc4:	mov	x0, x19
    6dc8:	bl	4810 <_Py_Dealloc@plt>
    6dcc:	b	6c84 <PyNumber_FloorDivide@plt+0x2084>
    6dd0:	ldr	x0, [x21]
    6dd4:	sub	x0, x0, #0x1
    6dd8:	str	x0, [x21]
    6ddc:	cbnz	x0, 6a50 <PyNumber_FloorDivide@plt+0x1e50>
    6de0:	mov	x0, x21
    6de4:	bl	4810 <_Py_Dealloc@plt>
    6de8:	ldp	x21, x22, [sp, #64]
    6dec:	b	6a58 <PyNumber_FloorDivide@plt+0x1e58>
    6df0:	mov	x0, x19
    6df4:	bl	4810 <_Py_Dealloc@plt>
    6df8:	b	6c2c <PyNumber_FloorDivide@plt+0x202c>
    6dfc:	ldr	x0, [x21]
    6e00:	sub	x0, x0, #0x1
    6e04:	str	x0, [x21]
    6e08:	cbnz	x0, 6a50 <PyNumber_FloorDivide@plt+0x1e50>
    6e0c:	mov	x0, x21
    6e10:	mov	x19, #0x0                   	// #0
    6e14:	bl	4810 <_Py_Dealloc@plt>
    6e18:	ldp	x21, x22, [sp, #64]
    6e1c:	b	6a58 <PyNumber_FloorDivide@plt+0x1e58>
    6e20:	stp	x29, x30, [sp, #-64]!
    6e24:	mov	x29, sp
    6e28:	stp	x23, x24, [sp, #48]
    6e2c:	mov	x23, x0
    6e30:	ldrsw	x0, [x0, #24]
    6e34:	stp	x21, x22, [sp, #32]
    6e38:	bl	4900 <PyLong_FromLong@plt>
    6e3c:	cbz	x0, 6f38 <PyNumber_FloorDivide@plt+0x2338>
    6e40:	adrp	x24, 26000 <PyInit__datetime@@Base+0x17118>
    6e44:	add	x1, x24, #0xf78
    6e48:	stp	x19, x20, [sp, #16]
    6e4c:	mov	x19, x0
    6e50:	ldr	x1, [x1, #24]
    6e54:	bl	4830 <PyNumber_Multiply@plt>
    6e58:	mov	x20, x0
    6e5c:	cbz	x0, 7000 <PyNumber_FloorDivide@plt+0x2400>
    6e60:	ldr	x0, [x19]
    6e64:	sub	x0, x0, #0x1
    6e68:	str	x0, [x19]
    6e6c:	cbz	x0, 6f94 <PyNumber_FloorDivide@plt+0x2394>
    6e70:	ldrsw	x0, [x23, #28]
    6e74:	bl	4900 <PyLong_FromLong@plt>
    6e78:	mov	x21, x0
    6e7c:	cbz	x0, 6f08 <PyNumber_FloorDivide@plt+0x2308>
    6e80:	mov	x1, x20
    6e84:	bl	47c0 <PyNumber_Add@plt>
    6e88:	mov	x22, x0
    6e8c:	cbz	x0, 7024 <PyNumber_FloorDivide@plt+0x2424>
    6e90:	ldr	x0, [x21]
    6e94:	sub	x0, x0, #0x1
    6e98:	str	x0, [x21]
    6e9c:	cbz	x0, 6fac <PyNumber_FloorDivide@plt+0x23ac>
    6ea0:	ldr	x0, [x20]
    6ea4:	sub	x0, x0, #0x1
    6ea8:	str	x0, [x20]
    6eac:	cbz	x0, 6fa0 <PyNumber_FloorDivide@plt+0x23a0>
    6eb0:	add	x24, x24, #0xf78
    6eb4:	mov	x0, x22
    6eb8:	ldr	x1, [x24, #16]
    6ebc:	bl	4830 <PyNumber_Multiply@plt>
    6ec0:	mov	x19, x0
    6ec4:	ldr	x0, [x22]
    6ec8:	sub	x0, x0, #0x1
    6ecc:	str	x0, [x22]
    6ed0:	cbz	x19, 6f30 <PyNumber_FloorDivide@plt+0x2330>
    6ed4:	cbz	x0, 6fc8 <PyNumber_FloorDivide@plt+0x23c8>
    6ed8:	ldrsw	x0, [x23, #32]
    6edc:	bl	4900 <PyLong_FromLong@plt>
    6ee0:	mov	x20, x0
    6ee4:	cbz	x0, 7000 <PyNumber_FloorDivide@plt+0x2400>
    6ee8:	mov	x1, x0
    6eec:	mov	x0, x19
    6ef0:	bl	47c0 <PyNumber_Add@plt>
    6ef4:	mov	x21, x0
    6ef8:	ldr	x0, [x19]
    6efc:	sub	x0, x0, #0x1
    6f00:	str	x0, [x19]
    6f04:	cbz	x0, 6fe4 <PyNumber_FloorDivide@plt+0x23e4>
    6f08:	ldr	x0, [x20]
    6f0c:	sub	x0, x0, #0x1
    6f10:	str	x0, [x20]
    6f14:	cbz	x0, 6f74 <PyNumber_FloorDivide@plt+0x2374>
    6f18:	mov	x0, x21
    6f1c:	ldp	x19, x20, [sp, #16]
    6f20:	ldp	x21, x22, [sp, #32]
    6f24:	ldp	x23, x24, [sp, #48]
    6f28:	ldp	x29, x30, [sp], #64
    6f2c:	ret
    6f30:	cbz	x0, 6f50 <PyNumber_FloorDivide@plt+0x2350>
    6f34:	ldp	x19, x20, [sp, #16]
    6f38:	mov	x21, #0x0                   	// #0
    6f3c:	mov	x0, x21
    6f40:	ldp	x21, x22, [sp, #32]
    6f44:	ldp	x23, x24, [sp, #48]
    6f48:	ldp	x29, x30, [sp], #64
    6f4c:	ret
    6f50:	mov	x0, x22
    6f54:	mov	x21, #0x0                   	// #0
    6f58:	bl	4810 <_Py_Dealloc@plt>
    6f5c:	mov	x0, x21
    6f60:	ldp	x19, x20, [sp, #16]
    6f64:	ldp	x21, x22, [sp, #32]
    6f68:	ldp	x23, x24, [sp, #48]
    6f6c:	ldp	x29, x30, [sp], #64
    6f70:	ret
    6f74:	mov	x0, x20
    6f78:	bl	4810 <_Py_Dealloc@plt>
    6f7c:	mov	x0, x21
    6f80:	ldp	x19, x20, [sp, #16]
    6f84:	ldp	x21, x22, [sp, #32]
    6f88:	ldp	x23, x24, [sp, #48]
    6f8c:	ldp	x29, x30, [sp], #64
    6f90:	ret
    6f94:	mov	x0, x19
    6f98:	bl	4810 <_Py_Dealloc@plt>
    6f9c:	b	6e70 <PyNumber_FloorDivide@plt+0x2270>
    6fa0:	mov	x0, x20
    6fa4:	bl	4810 <_Py_Dealloc@plt>
    6fa8:	b	6eb0 <PyNumber_FloorDivide@plt+0x22b0>
    6fac:	mov	x0, x21
    6fb0:	bl	4810 <_Py_Dealloc@plt>
    6fb4:	ldr	x0, [x20]
    6fb8:	sub	x0, x0, #0x1
    6fbc:	str	x0, [x20]
    6fc0:	cbnz	x0, 6eb0 <PyNumber_FloorDivide@plt+0x22b0>
    6fc4:	b	6fa0 <PyNumber_FloorDivide@plt+0x23a0>
    6fc8:	mov	x0, x22
    6fcc:	bl	4810 <_Py_Dealloc@plt>
    6fd0:	ldrsw	x0, [x23, #32]
    6fd4:	bl	4900 <PyLong_FromLong@plt>
    6fd8:	mov	x20, x0
    6fdc:	cbnz	x0, 6ee8 <PyNumber_FloorDivide@plt+0x22e8>
    6fe0:	b	7000 <PyNumber_FloorDivide@plt+0x2400>
    6fe4:	mov	x0, x19
    6fe8:	bl	4810 <_Py_Dealloc@plt>
    6fec:	ldr	x0, [x20]
    6ff0:	sub	x0, x0, #0x1
    6ff4:	str	x0, [x20]
    6ff8:	cbnz	x0, 6f18 <PyNumber_FloorDivide@plt+0x2318>
    6ffc:	b	6f74 <PyNumber_FloorDivide@plt+0x2374>
    7000:	ldr	x0, [x19]
    7004:	sub	x0, x0, #0x1
    7008:	str	x0, [x19]
    700c:	cbnz	x0, 6f34 <PyNumber_FloorDivide@plt+0x2334>
    7010:	mov	x0, x19
    7014:	mov	x21, #0x0                   	// #0
    7018:	bl	4810 <_Py_Dealloc@plt>
    701c:	ldp	x19, x20, [sp, #16]
    7020:	b	6f3c <PyNumber_FloorDivide@plt+0x233c>
    7024:	mov	x19, x21
    7028:	mov	x21, #0x0                   	// #0
    702c:	b	6ef8 <PyNumber_FloorDivide@plt+0x22f8>
    7030:	stp	x29, x30, [sp, #-32]!
    7034:	mov	x29, sp
    7038:	stp	x19, x20, [sp, #16]
    703c:	bl	6e20 <PyNumber_FloorDivide@plt+0x2220>
    7040:	cbz	x0, 7090 <PyNumber_FloorDivide@plt+0x2490>
    7044:	adrp	x1, 26000 <PyInit__datetime@@Base+0x17118>
    7048:	mov	x19, x0
    704c:	ldr	x1, [x1, #3976]
    7050:	bl	4be0 <PyNumber_TrueDivide@plt>
    7054:	mov	x20, x0
    7058:	ldr	x1, [x19]
    705c:	sub	x1, x1, #0x1
    7060:	str	x1, [x19]
    7064:	cbz	x1, 7078 <PyNumber_FloorDivide@plt+0x2478>
    7068:	mov	x0, x20
    706c:	ldp	x19, x20, [sp, #16]
    7070:	ldp	x29, x30, [sp], #32
    7074:	ret
    7078:	mov	x0, x19
    707c:	bl	4810 <_Py_Dealloc@plt>
    7080:	mov	x0, x20
    7084:	ldp	x19, x20, [sp, #16]
    7088:	ldp	x29, x30, [sp], #32
    708c:	ret
    7090:	mov	x20, #0x0                   	// #0
    7094:	mov	x0, x20
    7098:	ldp	x19, x20, [sp, #16]
    709c:	ldp	x29, x30, [sp], #32
    70a0:	ret
    70a4:	nop
    70a8:	stp	x29, x30, [sp, #-32]!
    70ac:	mov	x29, sp
    70b0:	str	x19, [sp, #16]
    70b4:	bl	4910 <_PyLong_DivmodNear@plt>
    70b8:	cbz	x0, 7100 <PyNumber_FloorDivide@plt+0x2500>
    70bc:	ldr	x19, [x0, #24]
    70c0:	ldr	x2, [x19]
    70c4:	add	x2, x2, #0x1
    70c8:	str	x2, [x19]
    70cc:	ldr	x2, [x0]
    70d0:	sub	x2, x2, #0x1
    70d4:	str	x2, [x0]
    70d8:	cbz	x2, 70ec <PyNumber_FloorDivide@plt+0x24ec>
    70dc:	mov	x0, x19
    70e0:	ldr	x19, [sp, #16]
    70e4:	ldp	x29, x30, [sp], #32
    70e8:	ret
    70ec:	bl	4810 <_Py_Dealloc@plt>
    70f0:	mov	x0, x19
    70f4:	ldr	x19, [sp, #16]
    70f8:	ldp	x29, x30, [sp], #32
    70fc:	ret
    7100:	mov	x19, #0x0                   	// #0
    7104:	b	70dc <PyNumber_FloorDivide@plt+0x24dc>
    7108:	stp	x29, x30, [sp, #-48]!
    710c:	mov	x29, sp
    7110:	stp	x19, x20, [sp, #16]
    7114:	mov	x19, x1
    7118:	stp	x21, x22, [sp, #32]
    711c:	mov	w21, w2
    7120:	bl	6e20 <PyNumber_FloorDivide@plt+0x2220>
    7124:	cbz	x0, 7270 <PyNumber_FloorDivide@plt+0x2670>
    7128:	adrp	x1, 25000 <PyInit__datetime@@Base+0x16118>
    712c:	add	x1, x1, #0xab8
    7130:	mov	x20, x0
    7134:	add	x1, x1, #0x88
    7138:	mov	x0, x19
    713c:	mov	x2, #0x0                   	// #0
    7140:	bl	4a60 <_PyObject_CallMethodId@plt>
    7144:	mov	x19, x0
    7148:	cbz	x0, 7260 <PyNumber_FloorDivide@plt+0x2660>
    714c:	ldr	x2, [x0, #8]
    7150:	ldr	x1, [x2, #168]
    7154:	tbz	w1, #26, 72c0 <PyNumber_FloorDivide@plt+0x26c0>
    7158:	bl	4b50 <PyTuple_Size@plt>
    715c:	cmp	x0, #0x2
    7160:	b.ne	7230 <PyNumber_FloorDivide@plt+0x2630>  // b.any
    7164:	add	x1, x19, w21, sxtw #3
    7168:	mov	x0, x20
    716c:	ldr	x1, [x1, #24]
    7170:	bl	4830 <PyNumber_Multiply@plt>
    7174:	mov	x22, x0
    7178:	ldr	x1, [x20]
    717c:	sub	x0, x1, #0x1
    7180:	str	x0, [x20]
    7184:	cbz	x0, 7288 <PyNumber_FloorDivide@plt+0x2688>
    7188:	cbz	x22, 7200 <PyNumber_FloorDivide@plt+0x2600>
    718c:	eor	w21, w21, #0x1
    7190:	mov	x0, x22
    7194:	add	x21, x19, w21, sxtw #3
    7198:	ldr	x1, [x21, #24]
    719c:	bl	70a8 <PyNumber_FloorDivide@plt+0x24a8>
    71a0:	mov	x21, x0
    71a4:	ldr	x1, [x22]
    71a8:	sub	x0, x1, #0x1
    71ac:	str	x0, [x22]
    71b0:	cbz	x0, 7298 <PyNumber_FloorDivide@plt+0x2698>
    71b4:	cbz	x21, 7200 <PyNumber_FloorDivide@plt+0x2600>
    71b8:	mov	x0, x21
    71bc:	adrp	x1, 25000 <PyInit__datetime@@Base+0x16118>
    71c0:	add	x1, x1, #0x298
    71c4:	bl	6760 <PyNumber_FloorDivide@plt+0x1b60>
    71c8:	ldr	x1, [x21]
    71cc:	mov	x20, x0
    71d0:	sub	x0, x1, #0x1
    71d4:	str	x0, [x21]
    71d8:	cbz	x0, 72a4 <PyNumber_FloorDivide@plt+0x26a4>
    71dc:	ldr	x1, [x19]
    71e0:	sub	x1, x1, #0x1
    71e4:	str	x1, [x19]
    71e8:	cbz	x1, 7214 <PyNumber_FloorDivide@plt+0x2614>
    71ec:	mov	x0, x20
    71f0:	ldp	x19, x20, [sp, #16]
    71f4:	ldp	x21, x22, [sp, #32]
    71f8:	ldp	x29, x30, [sp], #48
    71fc:	ret
    7200:	ldr	x1, [x19]
    7204:	mov	x20, #0x0                   	// #0
    7208:	sub	x1, x1, #0x1
    720c:	str	x1, [x19]
    7210:	cbnz	x1, 71ec <PyNumber_FloorDivide@plt+0x25ec>
    7214:	mov	x0, x19
    7218:	bl	4810 <_Py_Dealloc@plt>
    721c:	mov	x0, x20
    7220:	ldp	x19, x20, [sp, #16]
    7224:	ldp	x21, x22, [sp, #32]
    7228:	ldp	x29, x30, [sp], #48
    722c:	ret
    7230:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    7234:	adrp	x1, f000 <PyInit__datetime@@Base+0x118>
    7238:	add	x1, x1, #0xb28
    723c:	ldr	x0, [x0, #3968]
    7240:	ldr	x0, [x0]
    7244:	bl	4880 <PyErr_SetString@plt>
    7248:	ldr	x0, [x19]
    724c:	sub	x0, x0, #0x1
    7250:	str	x0, [x19]
    7254:	cbnz	x0, 7260 <PyNumber_FloorDivide@plt+0x2660>
    7258:	mov	x0, x19
    725c:	bl	4810 <_Py_Dealloc@plt>
    7260:	ldr	x0, [x20]
    7264:	sub	x0, x0, #0x1
    7268:	str	x0, [x20]
    726c:	cbz	x0, 72b0 <PyNumber_FloorDivide@plt+0x26b0>
    7270:	mov	x20, #0x0                   	// #0
    7274:	mov	x0, x20
    7278:	ldp	x19, x20, [sp, #16]
    727c:	ldp	x21, x22, [sp, #32]
    7280:	ldp	x29, x30, [sp], #48
    7284:	ret
    7288:	mov	x0, x20
    728c:	bl	4810 <_Py_Dealloc@plt>
    7290:	cbnz	x22, 718c <PyNumber_FloorDivide@plt+0x258c>
    7294:	b	7200 <PyNumber_FloorDivide@plt+0x2600>
    7298:	mov	x0, x22
    729c:	bl	4810 <_Py_Dealloc@plt>
    72a0:	b	71b4 <PyNumber_FloorDivide@plt+0x25b4>
    72a4:	mov	x0, x21
    72a8:	bl	4810 <_Py_Dealloc@plt>
    72ac:	b	71dc <PyNumber_FloorDivide@plt+0x25dc>
    72b0:	mov	x0, x20
    72b4:	mov	x20, #0x0                   	// #0
    72b8:	bl	4810 <_Py_Dealloc@plt>
    72bc:	b	71ec <PyNumber_FloorDivide@plt+0x25ec>
    72c0:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    72c4:	adrp	x1, f000 <PyInit__datetime@@Base+0x118>
    72c8:	ldr	x2, [x2, #24]
    72cc:	add	x1, x1, #0xad8
    72d0:	ldr	x0, [x0, #3976]
    72d4:	ldr	x0, [x0]
    72d8:	bl	4b60 <PyErr_Format@plt>
    72dc:	ldr	x0, [x19]
    72e0:	sub	x0, x0, #0x1
    72e4:	str	x0, [x19]
    72e8:	cbnz	x0, 7260 <PyNumber_FloorDivide@plt+0x2660>
    72ec:	b	7258 <PyNumber_FloorDivide@plt+0x2658>
    72f0:	stp	x29, x30, [sp, #-48]!
    72f4:	mov	x29, sp
    72f8:	stp	x19, x20, [sp, #16]
    72fc:	mov	x19, x0
    7300:	mov	x20, x1
    7304:	ldr	x0, [x0, #8]
    7308:	str	x21, [sp, #32]
    730c:	adrp	x21, 25000 <PyInit__datetime@@Base+0x16118>
    7310:	add	x2, x21, #0x298
    7314:	cmp	x0, x2
    7318:	b.eq	7354 <PyNumber_FloorDivide@plt+0x2754>  // b.none
    731c:	mov	x1, x2
    7320:	bl	4b30 <PyType_IsSubtype@plt>
    7324:	cbnz	w0, 7354 <PyNumber_FloorDivide@plt+0x2754>
    7328:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    732c:	ldr	x0, [x0, #3960]
    7330:	mov	x19, x0
    7334:	ldr	x1, [x0]
    7338:	add	x1, x1, #0x1
    733c:	str	x1, [x0]
    7340:	mov	x0, x19
    7344:	ldp	x19, x20, [sp, #16]
    7348:	ldr	x21, [sp, #32]
    734c:	ldp	x29, x30, [sp], #48
    7350:	ret
    7354:	ldr	x0, [x20, #8]
    7358:	add	x1, x21, #0x298
    735c:	cmp	x0, x1
    7360:	b.eq	736c <PyNumber_FloorDivide@plt+0x276c>  // b.none
    7364:	bl	4b30 <PyType_IsSubtype@plt>
    7368:	cbz	w0, 73e0 <PyNumber_FloorDivide@plt+0x27e0>
    736c:	mov	x0, x19
    7370:	bl	6e20 <PyNumber_FloorDivide@plt+0x2220>
    7374:	mov	x21, x0
    7378:	cbz	x0, 7494 <PyNumber_FloorDivide@plt+0x2894>
    737c:	mov	x0, x20
    7380:	bl	6e20 <PyNumber_FloorDivide@plt+0x2220>
    7384:	mov	x20, x0
    7388:	cbz	x0, 7484 <PyNumber_FloorDivide@plt+0x2884>
    738c:	mov	x1, x0
    7390:	mov	x0, x21
    7394:	bl	4be0 <PyNumber_TrueDivide@plt>
    7398:	mov	x19, x0
    739c:	ldr	x1, [x21]
    73a0:	sub	x0, x1, #0x1
    73a4:	str	x0, [x21]
    73a8:	cbz	x0, 74ac <PyNumber_FloorDivide@plt+0x28ac>
    73ac:	ldr	x0, [x20]
    73b0:	sub	x0, x0, #0x1
    73b4:	str	x0, [x20]
    73b8:	cbz	x0, 7460 <PyNumber_FloorDivide@plt+0x2860>
    73bc:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    73c0:	ldr	x1, [x0, #3960]
    73c4:	cmp	x19, x1
    73c8:	b.eq	732c <PyNumber_FloorDivide@plt+0x272c>  // b.none
    73cc:	mov	x0, x19
    73d0:	ldp	x19, x20, [sp, #16]
    73d4:	ldr	x21, [sp, #32]
    73d8:	ldp	x29, x30, [sp], #48
    73dc:	ret
    73e0:	adrp	x1, 24000 <PyInit__datetime@@Base+0x15118>
    73e4:	ldr	x0, [x20, #8]
    73e8:	ldr	x1, [x1, #3944]
    73ec:	cmp	x0, x1
    73f0:	b.eq	746c <PyNumber_FloorDivide@plt+0x286c>  // b.none
    73f4:	bl	4b30 <PyType_IsSubtype@plt>
    73f8:	cbnz	w0, 746c <PyNumber_FloorDivide@plt+0x286c>
    73fc:	ldr	x1, [x20, #8]
    7400:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    7404:	ldr	x1, [x1, #168]
    7408:	tbz	w1, #24, 732c <PyNumber_FloorDivide@plt+0x272c>
    740c:	mov	x0, x19
    7410:	bl	6e20 <PyNumber_FloorDivide@plt+0x2220>
    7414:	mov	x19, x0
    7418:	cbz	x0, 7494 <PyNumber_FloorDivide@plt+0x2894>
    741c:	mov	x1, x20
    7420:	bl	70a8 <PyNumber_FloorDivide@plt+0x24a8>
    7424:	ldr	x1, [x19]
    7428:	mov	x20, x0
    742c:	sub	x0, x1, #0x1
    7430:	str	x0, [x19]
    7434:	cbz	x0, 74c8 <PyNumber_FloorDivide@plt+0x28c8>
    7438:	cbz	x20, 7494 <PyNumber_FloorDivide@plt+0x2894>
    743c:	add	x1, x21, #0x298
    7440:	mov	x0, x20
    7444:	bl	6760 <PyNumber_FloorDivide@plt+0x1b60>
    7448:	mov	x19, x0
    744c:	ldr	x1, [x20]
    7450:	sub	x0, x1, #0x1
    7454:	str	x0, [x20]
    7458:	cbnz	x0, 73bc <PyNumber_FloorDivide@plt+0x27bc>
    745c:	nop
    7460:	mov	x0, x20
    7464:	bl	4810 <_Py_Dealloc@plt>
    7468:	b	73bc <PyNumber_FloorDivide@plt+0x27bc>
    746c:	mov	x0, x19
    7470:	mov	x1, x20
    7474:	mov	w2, #0x1                   	// #1
    7478:	bl	7108 <PyNumber_FloorDivide@plt+0x2508>
    747c:	mov	x19, x0
    7480:	b	73bc <PyNumber_FloorDivide@plt+0x27bc>
    7484:	ldr	x0, [x21]
    7488:	sub	x0, x0, #0x1
    748c:	str	x0, [x21]
    7490:	cbz	x0, 74b8 <PyNumber_FloorDivide@plt+0x28b8>
    7494:	mov	x19, #0x0                   	// #0
    7498:	mov	x0, x19
    749c:	ldp	x19, x20, [sp, #16]
    74a0:	ldr	x21, [sp, #32]
    74a4:	ldp	x29, x30, [sp], #48
    74a8:	ret
    74ac:	mov	x0, x21
    74b0:	bl	4810 <_Py_Dealloc@plt>
    74b4:	b	73ac <PyNumber_FloorDivide@plt+0x27ac>
    74b8:	mov	x0, x21
    74bc:	mov	x19, #0x0                   	// #0
    74c0:	bl	4810 <_Py_Dealloc@plt>
    74c4:	b	7340 <PyNumber_FloorDivide@plt+0x2740>
    74c8:	mov	x0, x19
    74cc:	bl	4810 <_Py_Dealloc@plt>
    74d0:	b	7438 <PyNumber_FloorDivide@plt+0x2838>
    74d4:	nop
    74d8:	stp	x29, x30, [sp, #-48]!
    74dc:	mov	x29, sp
    74e0:	stp	x19, x20, [sp, #16]
    74e4:	mov	x20, x1
    74e8:	str	x21, [sp, #32]
    74ec:	bl	6e20 <PyNumber_FloorDivide@plt+0x2220>
    74f0:	cbz	x0, 7594 <PyNumber_FloorDivide@plt+0x2994>
    74f4:	mov	x19, x0
    74f8:	mov	x0, x20
    74fc:	bl	6e20 <PyNumber_FloorDivide@plt+0x2220>
    7500:	mov	x20, x0
    7504:	cbz	x0, 7584 <PyNumber_FloorDivide@plt+0x2984>
    7508:	mov	x1, x0
    750c:	mov	x0, x19
    7510:	bl	4c00 <PyNumber_FloorDivide@plt>
    7514:	mov	x21, x0
    7518:	ldr	x1, [x19]
    751c:	sub	x1, x1, #0x1
    7520:	str	x1, [x19]
    7524:	cbz	x1, 7568 <PyNumber_FloorDivide@plt+0x2968>
    7528:	ldr	x1, [x20]
    752c:	sub	x1, x1, #0x1
    7530:	str	x1, [x20]
    7534:	cbz	x1, 754c <PyNumber_FloorDivide@plt+0x294c>
    7538:	mov	x0, x21
    753c:	ldp	x19, x20, [sp, #16]
    7540:	ldr	x21, [sp, #32]
    7544:	ldp	x29, x30, [sp], #48
    7548:	ret
    754c:	mov	x0, x20
    7550:	bl	4810 <_Py_Dealloc@plt>
    7554:	mov	x0, x21
    7558:	ldp	x19, x20, [sp, #16]
    755c:	ldr	x21, [sp, #32]
    7560:	ldp	x29, x30, [sp], #48
    7564:	ret
    7568:	mov	x0, x19
    756c:	bl	4810 <_Py_Dealloc@plt>
    7570:	ldr	x1, [x20]
    7574:	sub	x1, x1, #0x1
    7578:	str	x1, [x20]
    757c:	cbnz	x1, 7538 <PyNumber_FloorDivide@plt+0x2938>
    7580:	b	754c <PyNumber_FloorDivide@plt+0x294c>
    7584:	ldr	x0, [x19]
    7588:	sub	x0, x0, #0x1
    758c:	str	x0, [x19]
    7590:	cbz	x0, 75ac <PyNumber_FloorDivide@plt+0x29ac>
    7594:	mov	x21, #0x0                   	// #0
    7598:	mov	x0, x21
    759c:	ldp	x19, x20, [sp, #16]
    75a0:	ldr	x21, [sp, #32]
    75a4:	ldp	x29, x30, [sp], #48
    75a8:	ret
    75ac:	mov	x0, x19
    75b0:	mov	x21, #0x0                   	// #0
    75b4:	bl	4810 <_Py_Dealloc@plt>
    75b8:	b	7538 <PyNumber_FloorDivide@plt+0x2938>
    75bc:	nop
    75c0:	stp	x29, x30, [sp, #-32]!
    75c4:	mov	x29, sp
    75c8:	stp	x19, x20, [sp, #16]
    75cc:	mov	x20, x0
    75d0:	mov	x0, x1
    75d4:	bl	6e20 <PyNumber_FloorDivide@plt+0x2220>
    75d8:	cbz	x0, 7644 <PyNumber_FloorDivide@plt+0x2a44>
    75dc:	mov	x19, x0
    75e0:	mov	x0, x20
    75e4:	mov	x1, x19
    75e8:	bl	4830 <PyNumber_Multiply@plt>
    75ec:	mov	x20, x0
    75f0:	ldr	x1, [x19]
    75f4:	sub	x0, x1, #0x1
    75f8:	str	x0, [x19]
    75fc:	cbz	x0, 7638 <PyNumber_FloorDivide@plt+0x2a38>
    7600:	cbz	x20, 7644 <PyNumber_FloorDivide@plt+0x2a44>
    7604:	mov	x0, x20
    7608:	adrp	x1, 25000 <PyInit__datetime@@Base+0x16118>
    760c:	add	x1, x1, #0x298
    7610:	bl	6760 <PyNumber_FloorDivide@plt+0x1b60>
    7614:	ldr	x1, [x20]
    7618:	mov	x19, x0
    761c:	sub	x1, x1, #0x1
    7620:	str	x1, [x20]
    7624:	cbz	x1, 7658 <PyNumber_FloorDivide@plt+0x2a58>
    7628:	mov	x0, x19
    762c:	ldp	x19, x20, [sp, #16]
    7630:	ldp	x29, x30, [sp], #32
    7634:	ret
    7638:	mov	x0, x19
    763c:	bl	4810 <_Py_Dealloc@plt>
    7640:	cbnz	x20, 7604 <PyNumber_FloorDivide@plt+0x2a04>
    7644:	mov	x19, #0x0                   	// #0
    7648:	mov	x0, x19
    764c:	ldp	x19, x20, [sp, #16]
    7650:	ldp	x29, x30, [sp], #32
    7654:	ret
    7658:	mov	x0, x20
    765c:	bl	4810 <_Py_Dealloc@plt>
    7660:	mov	x0, x19
    7664:	ldp	x19, x20, [sp, #16]
    7668:	ldp	x29, x30, [sp], #32
    766c:	ret
    7670:	stp	x29, x30, [sp, #-32]!
    7674:	adrp	x2, 25000 <PyInit__datetime@@Base+0x16118>
    7678:	add	x2, x2, #0x298
    767c:	mov	x29, sp
    7680:	stp	x19, x20, [sp, #16]
    7684:	mov	x19, x0
    7688:	mov	x20, x1
    768c:	ldr	x0, [x0, #8]
    7690:	cmp	x0, x2
    7694:	b.eq	76a4 <PyNumber_FloorDivide@plt+0x2aa4>  // b.none
    7698:	mov	x1, x2
    769c:	bl	4b30 <PyType_IsSubtype@plt>
    76a0:	cbz	w0, 76ec <PyNumber_FloorDivide@plt+0x2aec>
    76a4:	ldr	x0, [x20, #8]
    76a8:	ldr	x1, [x0, #168]
    76ac:	tbnz	w1, #24, 7724 <PyNumber_FloorDivide@plt+0x2b24>
    76b0:	adrp	x1, 24000 <PyInit__datetime@@Base+0x15118>
    76b4:	ldr	x1, [x1, #3944]
    76b8:	cmp	x0, x1
    76bc:	b.eq	774c <PyNumber_FloorDivide@plt+0x2b4c>  // b.none
    76c0:	bl	4b30 <PyType_IsSubtype@plt>
    76c4:	cbnz	w0, 774c <PyNumber_FloorDivide@plt+0x2b4c>
    76c8:	adrp	x1, 24000 <PyInit__datetime@@Base+0x15118>
    76cc:	ldr	x1, [x1, #3960]
    76d0:	ldp	x19, x20, [sp, #16]
    76d4:	mov	x0, x1
    76d8:	ldr	x2, [x1]
    76dc:	add	x2, x2, #0x1
    76e0:	str	x2, [x1]
    76e4:	ldp	x29, x30, [sp], #32
    76e8:	ret
    76ec:	ldr	x0, [x19, #8]
    76f0:	ldr	x1, [x0, #168]
    76f4:	tbnz	w1, #24, 7760 <PyNumber_FloorDivide@plt+0x2b60>
    76f8:	adrp	x1, 24000 <PyInit__datetime@@Base+0x15118>
    76fc:	ldr	x1, [x1, #3944]
    7700:	cmp	x0, x1
    7704:	b.eq	7710 <PyNumber_FloorDivide@plt+0x2b10>  // b.none
    7708:	bl	4b30 <PyType_IsSubtype@plt>
    770c:	cbz	w0, 76c8 <PyNumber_FloorDivide@plt+0x2ac8>
    7710:	mov	x1, x19
    7714:	mov	x0, x20
    7718:	mov	w2, #0x0                   	// #0
    771c:	bl	7108 <PyNumber_FloorDivide@plt+0x2508>
    7720:	b	7730 <PyNumber_FloorDivide@plt+0x2b30>
    7724:	mov	x1, x19
    7728:	mov	x0, x20
    772c:	bl	75c0 <PyNumber_FloorDivide@plt+0x29c0>
    7730:	adrp	x1, 24000 <PyInit__datetime@@Base+0x15118>
    7734:	ldr	x2, [x1, #3960]
    7738:	cmp	x0, x2
    773c:	b.eq	76cc <PyNumber_FloorDivide@plt+0x2acc>  // b.none
    7740:	ldp	x19, x20, [sp, #16]
    7744:	ldp	x29, x30, [sp], #32
    7748:	ret
    774c:	mov	x1, x20
    7750:	mov	x0, x19
    7754:	mov	w2, #0x0                   	// #0
    7758:	bl	7108 <PyNumber_FloorDivide@plt+0x2508>
    775c:	b	7730 <PyNumber_FloorDivide@plt+0x2b30>
    7760:	mov	x1, x20
    7764:	mov	x0, x19
    7768:	bl	75c0 <PyNumber_FloorDivide@plt+0x29c0>
    776c:	b	7730 <PyNumber_FloorDivide@plt+0x2b30>
    7770:	stp	x29, x30, [sp, #-48]!
    7774:	mov	x29, sp
    7778:	stp	x19, x20, [sp, #16]
    777c:	adrp	x20, 10000 <PyInit__datetime@@Base+0x1118>
    7780:	add	x20, x20, #0xb98
    7784:	str	x21, [sp, #32]
    7788:	mov	x21, x0
    778c:	mov	x0, x20
    7790:	bl	4ad0 <PyUnicode_FromString@plt>
    7794:	cbz	x0, 791c <PyNumber_FloorDivide@plt+0x2d1c>
    7798:	ldr	w1, [x21, #24]
    779c:	mov	x19, x0
    77a0:	mov	x2, x20
    77a4:	cbnz	w1, 782c <PyNumber_FloorDivide@plt+0x2c2c>
    77a8:	ldr	w3, [x21, #28]
    77ac:	cbnz	w3, 7864 <PyNumber_FloorDivide@plt+0x2c64>
    77b0:	ldr	w3, [x21, #32]
    77b4:	cbnz	w3, 78a0 <PyNumber_FloorDivide@plt+0x2ca0>
    77b8:	ldr	x0, [x19, #16]
    77bc:	cbz	x0, 7800 <PyNumber_FloorDivide@plt+0x2c00>
    77c0:	ldr	x1, [x21, #8]
    77c4:	mov	x2, x19
    77c8:	adrp	x0, f000 <PyInit__datetime@@Base+0x118>
    77cc:	add	x0, x0, #0xb98
    77d0:	ldr	x1, [x1, #24]
    77d4:	bl	4700 <PyUnicode_FromFormat@plt>
    77d8:	mov	x20, x0
    77dc:	ldr	x1, [x19]
    77e0:	sub	x1, x1, #0x1
    77e4:	str	x1, [x19]
    77e8:	cbz	x1, 78d0 <PyNumber_FloorDivide@plt+0x2cd0>
    77ec:	mov	x0, x20
    77f0:	ldp	x19, x20, [sp, #16]
    77f4:	ldr	x21, [sp, #32]
    77f8:	ldp	x29, x30, [sp], #48
    77fc:	ret
    7800:	adrp	x0, f000 <PyInit__datetime@@Base+0x118>
    7804:	add	x0, x0, #0xb90
    7808:	bl	4ad0 <PyUnicode_FromString@plt>
    780c:	mov	x20, x0
    7810:	ldr	x1, [x19]
    7814:	sub	x1, x1, #0x1
    7818:	str	x1, [x19]
    781c:	cbz	x1, 78ec <PyNumber_FloorDivide@plt+0x2cec>
    7820:	cbz	x20, 791c <PyNumber_FloorDivide@plt+0x2d1c>
    7824:	mov	x19, x20
    7828:	b	77c0 <PyNumber_FloorDivide@plt+0x2bc0>
    782c:	adrp	x0, f000 <PyInit__datetime@@Base+0x118>
    7830:	add	x0, x0, #0xb60
    7834:	bl	4700 <PyUnicode_FromFormat@plt>
    7838:	mov	x20, x0
    783c:	ldr	x1, [x19]
    7840:	sub	x1, x1, #0x1
    7844:	str	x1, [x19]
    7848:	cbz	x1, 78f8 <PyNumber_FloorDivide@plt+0x2cf8>
    784c:	cbz	x20, 791c <PyNumber_FloorDivide@plt+0x2d1c>
    7850:	ldr	w3, [x21, #28]
    7854:	adrp	x2, f000 <PyInit__datetime@@Base+0x118>
    7858:	mov	x19, x20
    785c:	add	x2, x2, #0xb58
    7860:	cbz	w3, 77b0 <PyNumber_FloorDivide@plt+0x2bb0>
    7864:	mov	x1, x19
    7868:	adrp	x0, f000 <PyInit__datetime@@Base+0x118>
    786c:	add	x0, x0, #0xb68
    7870:	bl	4700 <PyUnicode_FromFormat@plt>
    7874:	ldr	x1, [x19]
    7878:	mov	x20, x0
    787c:	sub	x1, x1, #0x1
    7880:	str	x1, [x19]
    7884:	cbz	x1, 7904 <PyNumber_FloorDivide@plt+0x2d04>
    7888:	cbz	x20, 791c <PyNumber_FloorDivide@plt+0x2d1c>
    788c:	ldr	w3, [x21, #32]
    7890:	adrp	x2, f000 <PyInit__datetime@@Base+0x118>
    7894:	mov	x19, x20
    7898:	add	x2, x2, #0xb58
    789c:	cbz	w3, 77b8 <PyNumber_FloorDivide@plt+0x2bb8>
    78a0:	mov	x1, x19
    78a4:	adrp	x0, f000 <PyInit__datetime@@Base+0x118>
    78a8:	add	x0, x0, #0xb78
    78ac:	bl	4700 <PyUnicode_FromFormat@plt>
    78b0:	ldr	x1, [x19]
    78b4:	mov	x20, x0
    78b8:	sub	x1, x1, #0x1
    78bc:	str	x1, [x19]
    78c0:	cbz	x1, 7910 <PyNumber_FloorDivide@plt+0x2d10>
    78c4:	cbz	x20, 791c <PyNumber_FloorDivide@plt+0x2d1c>
    78c8:	mov	x19, x20
    78cc:	b	77b8 <PyNumber_FloorDivide@plt+0x2bb8>
    78d0:	mov	x0, x19
    78d4:	bl	4810 <_Py_Dealloc@plt>
    78d8:	mov	x0, x20
    78dc:	ldp	x19, x20, [sp, #16]
    78e0:	ldr	x21, [sp, #32]
    78e4:	ldp	x29, x30, [sp], #48
    78e8:	ret
    78ec:	mov	x0, x19
    78f0:	bl	4810 <_Py_Dealloc@plt>
    78f4:	b	7820 <PyNumber_FloorDivide@plt+0x2c20>
    78f8:	mov	x0, x19
    78fc:	bl	4810 <_Py_Dealloc@plt>
    7900:	b	784c <PyNumber_FloorDivide@plt+0x2c4c>
    7904:	mov	x0, x19
    7908:	bl	4810 <_Py_Dealloc@plt>
    790c:	b	7888 <PyNumber_FloorDivide@plt+0x2c88>
    7910:	mov	x0, x19
    7914:	bl	4810 <_Py_Dealloc@plt>
    7918:	b	78c4 <PyNumber_FloorDivide@plt+0x2cc4>
    791c:	mov	x20, #0x0                   	// #0
    7920:	mov	x0, x20
    7924:	ldp	x19, x20, [sp, #16]
    7928:	ldr	x21, [sp, #32]
    792c:	ldp	x29, x30, [sp], #48
    7930:	ret
    7934:	nop
    7938:	stp	x29, x30, [sp, #-48]!
    793c:	mov	x29, sp
    7940:	stp	x19, x20, [sp, #16]
    7944:	mov	x20, x0
    7948:	add	x0, x0, #0x19
    794c:	str	x21, [sp, #32]
    7950:	mov	w21, w1
    7954:	mov	x1, #0xa                   	// #10
    7958:	bl	4800 <PyBytes_FromStringAndSize@plt>
    795c:	cbz	x0, 7a08 <PyNumber_FloorDivide@plt+0x2e08>
    7960:	mov	x19, x0
    7964:	cmp	w21, #0x3
    7968:	b.le	7980 <PyNumber_FloorDivide@plt+0x2d80>
    796c:	ldrb	w0, [x20, #35]
    7970:	cbz	w0, 7980 <PyNumber_FloorDivide@plt+0x2d80>
    7974:	ldrb	w0, [x19, #34]
    7978:	orr	w0, w0, #0xffffff80
    797c:	strb	w0, [x19, #34]
    7980:	ldrb	w0, [x20, #24]
    7984:	mov	x1, x19
    7988:	cbz	w0, 79d8 <PyNumber_FloorDivide@plt+0x2dd8>
    798c:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    7990:	ldr	x2, [x20, #40]
    7994:	ldr	x0, [x0, #4024]
    7998:	cmp	x2, x0
    799c:	b.eq	79d8 <PyNumber_FloorDivide@plt+0x2dd8>  // b.none
    79a0:	mov	x0, #0x2                   	// #2
    79a4:	bl	4bd0 <PyTuple_Pack@plt>
    79a8:	ldr	x1, [x19]
    79ac:	mov	x20, x0
    79b0:	sub	x1, x1, #0x1
    79b4:	str	x1, [x19]
    79b8:	cbnz	x1, 79f4 <PyNumber_FloorDivide@plt+0x2df4>
    79bc:	mov	x0, x19
    79c0:	bl	4810 <_Py_Dealloc@plt>
    79c4:	mov	x0, x20
    79c8:	ldp	x19, x20, [sp, #16]
    79cc:	ldr	x21, [sp, #32]
    79d0:	ldp	x29, x30, [sp], #48
    79d4:	ret
    79d8:	mov	x0, #0x1                   	// #1
    79dc:	bl	4bd0 <PyTuple_Pack@plt>
    79e0:	ldr	x1, [x19]
    79e4:	mov	x20, x0
    79e8:	sub	x1, x1, #0x1
    79ec:	str	x1, [x19]
    79f0:	cbz	x1, 79bc <PyNumber_FloorDivide@plt+0x2dbc>
    79f4:	mov	x0, x20
    79f8:	ldp	x19, x20, [sp, #16]
    79fc:	ldr	x21, [sp, #32]
    7a00:	ldp	x29, x30, [sp], #48
    7a04:	ret
    7a08:	mov	x20, #0x0                   	// #0
    7a0c:	mov	x0, x20
    7a10:	ldp	x19, x20, [sp, #16]
    7a14:	ldr	x21, [sp, #32]
    7a18:	ldp	x29, x30, [sp], #48
    7a1c:	ret
    7a20:	stp	x29, x30, [sp, #-32]!
    7a24:	mov	w1, #0x2                   	// #2
    7a28:	mov	x29, sp
    7a2c:	str	x19, [sp, #16]
    7a30:	ldr	x19, [x0, #8]
    7a34:	bl	7938 <PyNumber_FloorDivide@plt+0x2d38>
    7a38:	adrp	x3, f000 <PyInit__datetime@@Base+0x118>
    7a3c:	mov	x2, x0
    7a40:	mov	x1, x19
    7a44:	add	x0, x3, #0x980
    7a48:	ldr	x19, [sp, #16]
    7a4c:	ldp	x29, x30, [sp], #32
    7a50:	b	49a0 <Py_BuildValue@plt>
    7a54:	nop
    7a58:	stp	x29, x30, [sp, #-48]!
    7a5c:	mov	x29, sp
    7a60:	add	x2, sp, #0x2c
    7a64:	str	x19, [sp, #16]
    7a68:	mov	x19, x0
    7a6c:	mov	x0, x1
    7a70:	adrp	x1, f000 <PyInit__datetime@@Base+0x118>
    7a74:	add	x1, x1, #0x9b8
    7a78:	bl	4a30 <PyArg_ParseTuple@plt>
    7a7c:	cbz	w0, 7ab0 <PyNumber_FloorDivide@plt+0x2eb0>
    7a80:	ldr	w1, [sp, #44]
    7a84:	mov	x0, x19
    7a88:	ldr	x19, [x19, #8]
    7a8c:	bl	7938 <PyNumber_FloorDivide@plt+0x2d38>
    7a90:	mov	x2, x0
    7a94:	mov	x1, x19
    7a98:	adrp	x0, f000 <PyInit__datetime@@Base+0x118>
    7a9c:	add	x0, x0, #0x980
    7aa0:	bl	49a0 <Py_BuildValue@plt>
    7aa4:	ldr	x19, [sp, #16]
    7aa8:	ldp	x29, x30, [sp], #48
    7aac:	ret
    7ab0:	mov	x0, #0x0                   	// #0
    7ab4:	ldr	x19, [sp, #16]
    7ab8:	ldp	x29, x30, [sp], #48
    7abc:	ret
    7ac0:	sub	sp, sp, #0x60
    7ac4:	stp	x29, x30, [sp, #16]
    7ac8:	add	x29, sp, #0x10
    7acc:	stp	x19, x20, [sp, #32]
    7ad0:	mov	w19, w3
    7ad4:	mov	w20, w4
    7ad8:	stp	x21, x22, [sp, #48]
    7adc:	mov	w21, w5
    7ae0:	mov	w22, w6
    7ae4:	stp	x23, x24, [sp, #64]
    7ae8:	mov	w24, w1
    7aec:	stp	x25, x26, [sp, #80]
    7af0:	mov	w26, w0
    7af4:	mov	w25, w2
    7af8:	adrp	x0, 10000 <PyInit__datetime@@Base+0x1118>
    7afc:	add	x0, x0, #0x110
    7b00:	bl	49d0 <PyImport_ImportModuleNoBlock@plt>
    7b04:	cbz	x0, 7c84 <PyNumber_FloorDivide@plt+0x3084>
    7b08:	mov	w2, w25
    7b0c:	mov	w1, w24
    7b10:	mov	x23, x0
    7b14:	mov	w0, w26
    7b18:	bl	4e80 <PyNumber_FloorDivide@plt+0x280>
    7b1c:	add	w1, w0, #0x6
    7b20:	mov	w7, #0x2493                	// #9363
    7b24:	adrp	x0, 11000 <PyInit__datetime@@Base+0x2118>
    7b28:	movk	w7, #0x9249, lsl #16
    7b2c:	add	x0, x0, #0x5e0
    7b30:	cmp	w24, #0x2
    7b34:	smull	x7, w1, w7
    7b38:	ldr	w0, [x0, w24, sxtw #2]
    7b3c:	lsr	x7, x7, #32
    7b40:	add	w7, w1, w7
    7b44:	asr	w7, w7, #2
    7b48:	sub	w7, w7, w1, asr #31
    7b4c:	lsl	w2, w7, #3
    7b50:	sub	w7, w2, w7
    7b54:	sub	w7, w1, w7
    7b58:	b.gt	7bf4 <PyNumber_FloorDivide@plt+0x2ff4>
    7b5c:	add	w0, w25, w0
    7b60:	str	w0, [sp]
    7b64:	str	w22, [sp, #8]
    7b68:	mov	w4, w19
    7b6c:	mov	w6, w21
    7b70:	mov	w5, w20
    7b74:	mov	w3, w25
    7b78:	mov	w2, w24
    7b7c:	mov	w1, w26
    7b80:	adrp	x0, f000 <PyInit__datetime@@Base+0x118>
    7b84:	add	x0, x0, #0xba0
    7b88:	bl	49a0 <Py_BuildValue@plt>
    7b8c:	mov	x19, x0
    7b90:	cbz	x0, 7c74 <PyNumber_FloorDivide@plt+0x3074>
    7b94:	adrp	x1, 25000 <PyInit__datetime@@Base+0x16118>
    7b98:	add	x1, x1, #0xab8
    7b9c:	add	x1, x1, #0xa0
    7ba0:	mov	x2, x0
    7ba4:	mov	x3, #0x0                   	// #0
    7ba8:	mov	x0, x23
    7bac:	bl	4ae0 <_PyObject_CallMethodIdObjArgs@plt>
    7bb0:	mov	x20, x0
    7bb4:	ldr	x1, [x23]
    7bb8:	sub	x1, x1, #0x1
    7bbc:	str	x1, [x23]
    7bc0:	cbz	x1, 7c4c <PyNumber_FloorDivide@plt+0x304c>
    7bc4:	ldr	x1, [x19]
    7bc8:	sub	x1, x1, #0x1
    7bcc:	str	x1, [x19]
    7bd0:	cbz	x1, 7c24 <PyNumber_FloorDivide@plt+0x3024>
    7bd4:	mov	x0, x20
    7bd8:	ldp	x29, x30, [sp, #16]
    7bdc:	ldp	x19, x20, [sp, #32]
    7be0:	ldp	x21, x22, [sp, #48]
    7be4:	ldp	x23, x24, [sp, #64]
    7be8:	ldp	x25, x26, [sp, #80]
    7bec:	add	sp, sp, #0x60
    7bf0:	ret
    7bf4:	tst	x26, #0x3
    7bf8:	b.ne	7b5c <PyNumber_FloorDivide@plt+0x2f5c>  // b.any
    7bfc:	mov	w1, #0x5c29                	// #23593
    7c00:	mov	w2, #0x5c28                	// #23592
    7c04:	movk	w1, #0xc28f, lsl #16
    7c08:	movk	w2, #0x28f, lsl #16
    7c0c:	mul	w1, w26, w1
    7c10:	ror	w3, w1, #2
    7c14:	cmp	w3, w2
    7c18:	b.ls	7c58 <PyNumber_FloorDivide@plt+0x3058>  // b.plast
    7c1c:	add	w0, w0, #0x1
    7c20:	b	7b5c <PyNumber_FloorDivide@plt+0x2f5c>
    7c24:	mov	x0, x19
    7c28:	bl	4810 <_Py_Dealloc@plt>
    7c2c:	mov	x0, x20
    7c30:	ldp	x29, x30, [sp, #16]
    7c34:	ldp	x19, x20, [sp, #32]
    7c38:	ldp	x21, x22, [sp, #48]
    7c3c:	ldp	x23, x24, [sp, #64]
    7c40:	ldp	x25, x26, [sp, #80]
    7c44:	add	sp, sp, #0x60
    7c48:	ret
    7c4c:	mov	x0, x23
    7c50:	bl	4810 <_Py_Dealloc@plt>
    7c54:	b	7bc4 <PyNumber_FloorDivide@plt+0x2fc4>
    7c58:	mov	w2, #0xd70a                	// #55050
    7c5c:	ror	w1, w1, #4
    7c60:	movk	w2, #0xa3, lsl #16
    7c64:	cmp	w1, w2
    7c68:	b.hi	7b5c <PyNumber_FloorDivide@plt+0x2f5c>  // b.pmore
    7c6c:	add	w0, w0, #0x1
    7c70:	b	7b5c <PyNumber_FloorDivide@plt+0x2f5c>
    7c74:	ldr	x0, [x23]
    7c78:	sub	x0, x0, #0x1
    7c7c:	str	x0, [x23]
    7c80:	cbz	x0, 7ca8 <PyNumber_FloorDivide@plt+0x30a8>
    7c84:	mov	x20, #0x0                   	// #0
    7c88:	mov	x0, x20
    7c8c:	ldp	x29, x30, [sp, #16]
    7c90:	ldp	x19, x20, [sp, #32]
    7c94:	ldp	x21, x22, [sp, #48]
    7c98:	ldp	x23, x24, [sp, #64]
    7c9c:	ldp	x25, x26, [sp, #80]
    7ca0:	add	sp, sp, #0x60
    7ca4:	ret
    7ca8:	mov	x0, x23
    7cac:	mov	x20, #0x0                   	// #0
    7cb0:	bl	4810 <_Py_Dealloc@plt>
    7cb4:	b	7bd4 <PyNumber_FloorDivide@plt+0x2fd4>
    7cb8:	ldrb	w2, [x0, #28]
    7cbc:	mov	w6, #0xffffffff            	// #-1
    7cc0:	ldrb	w1, [x0, #27]
    7cc4:	mov	w5, #0x0                   	// #0
    7cc8:	ldurh	w0, [x0, #25]
    7ccc:	mov	w4, #0x0                   	// #0
    7cd0:	mov	w3, #0x0                   	// #0
    7cd4:	rev16	w0, w0
    7cd8:	and	w0, w0, #0xffff
    7cdc:	b	7ac0 <PyNumber_FloorDivide@plt+0x2ec0>
    7ce0:	stp	x29, x30, [sp, #-48]!
    7ce4:	adrp	x1, 10000 <PyInit__datetime@@Base+0x1118>
    7ce8:	mov	x29, sp
    7cec:	stp	x19, x20, [sp, #16]
    7cf0:	stp	x21, x22, [sp, #32]
    7cf4:	mov	x22, x0
    7cf8:	add	x0, x1, #0x110
    7cfc:	bl	49d0 <PyImport_ImportModuleNoBlock@plt>
    7d00:	cbz	x0, 7d80 <PyNumber_FloorDivide@plt+0x3180>
    7d04:	mov	x20, x0
    7d08:	adrp	x21, 25000 <PyInit__datetime@@Base+0x16118>
    7d0c:	add	x1, x21, #0xab8
    7d10:	mov	x2, #0x0                   	// #0
    7d14:	add	x1, x1, #0xb8
    7d18:	bl	4a60 <_PyObject_CallMethodId@plt>
    7d1c:	ldr	x1, [x20]
    7d20:	mov	x19, x0
    7d24:	sub	x1, x1, #0x1
    7d28:	str	x1, [x20]
    7d2c:	cbz	x1, 7d74 <PyNumber_FloorDivide@plt+0x3174>
    7d30:	cbz	x19, 7d80 <PyNumber_FloorDivide@plt+0x3180>
    7d34:	add	x1, x21, #0xab8
    7d38:	mov	x0, x22
    7d3c:	add	x1, x1, #0xd0
    7d40:	mov	x2, x19
    7d44:	mov	x3, #0x0                   	// #0
    7d48:	bl	4ae0 <_PyObject_CallMethodIdObjArgs@plt>
    7d4c:	ldr	x1, [x19]
    7d50:	mov	x20, x0
    7d54:	sub	x1, x1, #0x1
    7d58:	str	x1, [x19]
    7d5c:	cbz	x1, 7d98 <PyNumber_FloorDivide@plt+0x3198>
    7d60:	mov	x0, x20
    7d64:	ldp	x19, x20, [sp, #16]
    7d68:	ldp	x21, x22, [sp, #32]
    7d6c:	ldp	x29, x30, [sp], #48
    7d70:	ret
    7d74:	mov	x0, x20
    7d78:	bl	4810 <_Py_Dealloc@plt>
    7d7c:	b	7d30 <PyNumber_FloorDivide@plt+0x3130>
    7d80:	mov	x20, #0x0                   	// #0
    7d84:	mov	x0, x20
    7d88:	ldp	x19, x20, [sp, #16]
    7d8c:	ldp	x21, x22, [sp, #32]
    7d90:	ldp	x29, x30, [sp], #48
    7d94:	ret
    7d98:	mov	x0, x19
    7d9c:	bl	4810 <_Py_Dealloc@plt>
    7da0:	mov	x0, x20
    7da4:	ldp	x19, x20, [sp, #16]
    7da8:	ldp	x21, x22, [sp, #32]
    7dac:	ldp	x29, x30, [sp], #48
    7db0:	ret
    7db4:	nop
    7db8:	mov	x3, x0
    7dbc:	ldr	w0, [x1, #28]
    7dc0:	ldr	w2, [x3, #28]
    7dc4:	subs	w0, w2, w0
    7dc8:	b.ne	7dd8 <PyNumber_FloorDivide@plt+0x31d8>  // b.any
    7dcc:	ldr	w2, [x1, #32]
    7dd0:	ldr	w0, [x3, #32]
    7dd4:	sub	w0, w0, w2
    7dd8:	ret
    7ddc:	nop
    7de0:	stp	x29, x30, [sp, #-48]!
    7de4:	mov	x29, sp
    7de8:	stp	x19, x20, [sp, #16]
    7dec:	mov	x19, x0
    7df0:	ldr	x0, [x0, #8]
    7df4:	str	x21, [sp, #32]
    7df8:	adrp	x21, 25000 <PyInit__datetime@@Base+0x16118>
    7dfc:	add	x20, x21, #0x298
    7e00:	add	x1, x20, #0x1a0
    7e04:	cmp	x0, x1
    7e08:	b.eq	7e6c <PyNumber_FloorDivide@plt+0x326c>  // b.none
    7e0c:	bl	4b30 <PyType_IsSubtype@plt>
    7e10:	cbz	w0, 7e40 <PyNumber_FloorDivide@plt+0x3240>
    7e14:	ldrb	w0, [x19, #24]
    7e18:	cbnz	w0, 7e8c <PyNumber_FloorDivide@plt+0x328c>
    7e1c:	ldr	x0, [x19, #8]
    7e20:	add	x20, x20, #0x340
    7e24:	cmp	x0, x20
    7e28:	b.ne	7e74 <PyNumber_FloorDivide@plt+0x3274>  // b.any
    7e2c:	mov	x0, #0x0                   	// #0
    7e30:	ldp	x19, x20, [sp, #16]
    7e34:	ldr	x21, [sp, #32]
    7e38:	ldp	x29, x30, [sp], #48
    7e3c:	ret
    7e40:	ldr	x0, [x19, #8]
    7e44:	add	x20, x20, #0x340
    7e48:	cmp	x0, x20
    7e4c:	b.ne	7e74 <PyNumber_FloorDivide@plt+0x3274>  // b.any
    7e50:	ldrb	w0, [x19, #24]
    7e54:	cbz	w0, 7e2c <PyNumber_FloorDivide@plt+0x322c>
    7e58:	ldr	x0, [x19, #32]
    7e5c:	ldp	x19, x20, [sp, #16]
    7e60:	ldr	x21, [sp, #32]
    7e64:	ldp	x29, x30, [sp], #48
    7e68:	ret
    7e6c:	ldrb	w1, [x19, #24]
    7e70:	cbnz	w1, 7e8c <PyNumber_FloorDivide@plt+0x328c>
    7e74:	add	x1, x21, #0x298
    7e78:	add	x1, x1, #0x340
    7e7c:	bl	4b30 <PyType_IsSubtype@plt>
    7e80:	cbnz	w0, 7e50 <PyNumber_FloorDivide@plt+0x3250>
    7e84:	mov	x0, #0x0                   	// #0
    7e88:	b	7e30 <PyNumber_FloorDivide@plt+0x3230>
    7e8c:	ldr	x21, [sp, #32]
    7e90:	ldr	x0, [x19, #40]
    7e94:	ldp	x19, x20, [sp, #16]
    7e98:	ldp	x29, x30, [sp], #48
    7e9c:	ret
    7ea0:	adrp	x1, 24000 <PyInit__datetime@@Base+0x15118>
    7ea4:	ldr	x1, [x1, #4024]
    7ea8:	cmp	x0, x1
    7eac:	b.eq	7ef0 <PyNumber_FloorDivide@plt+0x32f0>  // b.none
    7eb0:	stp	x29, x30, [sp, #-32]!
    7eb4:	adrp	x1, 25000 <PyInit__datetime@@Base+0x16118>
    7eb8:	add	x1, x1, #0x298
    7ebc:	mov	x29, sp
    7ec0:	str	x19, [sp, #16]
    7ec4:	mov	x19, x0
    7ec8:	ldr	x0, [x0, #8]
    7ecc:	add	x1, x1, #0x4e0
    7ed0:	cmp	x0, x1
    7ed4:	b.eq	7ee0 <PyNumber_FloorDivide@plt+0x32e0>  // b.none
    7ed8:	bl	4b30 <PyType_IsSubtype@plt>
    7edc:	cbz	w0, 7ef8 <PyNumber_FloorDivide@plt+0x32f8>
    7ee0:	mov	w0, #0x0                   	// #0
    7ee4:	ldr	x19, [sp, #16]
    7ee8:	ldp	x29, x30, [sp], #32
    7eec:	ret
    7ef0:	mov	w0, #0x0                   	// #0
    7ef4:	ret
    7ef8:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    7efc:	adrp	x1, f000 <PyInit__datetime@@Base+0x118>
    7f00:	ldr	x2, [x19, #8]
    7f04:	add	x1, x1, #0xbb0
    7f08:	ldr	x0, [x0, #3976]
    7f0c:	ldr	x2, [x2, #24]
    7f10:	ldr	x0, [x0]
    7f14:	bl	4b60 <PyErr_Format@plt>
    7f18:	mov	w0, #0xffffffff            	// #-1
    7f1c:	b	7ee4 <PyNumber_FloorDivide@plt+0x32e4>
    7f20:	stp	x29, x30, [sp, #-48]!
    7f24:	adrp	x3, 24000 <PyInit__datetime@@Base+0x15118>
    7f28:	mov	x29, sp
    7f2c:	ldr	x3, [x3, #4024]
    7f30:	stp	x19, x20, [sp, #16]
    7f34:	mov	x20, x1
    7f38:	str	x21, [sp, #32]
    7f3c:	cmp	x2, x3
    7f40:	mov	x21, x0
    7f44:	b.eq	7fb8 <PyNumber_FloorDivide@plt+0x33b8>  // b.none
    7f48:	mov	x19, x2
    7f4c:	mov	x0, x2
    7f50:	bl	7ea0 <PyNumber_FloorDivide@plt+0x32a0>
    7f54:	tbnz	w0, #31, 8020 <PyNumber_FloorDivide@plt+0x3420>
    7f58:	ldr	x2, [x21, #304]
    7f5c:	mov	x0, x21
    7f60:	mov	x1, #0x1                   	// #1
    7f64:	blr	x2
    7f68:	cbz	x0, 7fc8 <PyNumber_FloorDivide@plt+0x33c8>
    7f6c:	ldr	w1, [x20, #32]
    7f70:	mov	x3, #0xffffffffffffffff    	// #-1
    7f74:	stur	w1, [x0, #25]
    7f78:	mov	w2, #0x1                   	// #1
    7f7c:	ldrh	w1, [x20, #36]
    7f80:	str	x3, [x0, #16]
    7f84:	strb	w2, [x0, #24]
    7f88:	sturh	w1, [x0, #29]
    7f8c:	ldr	x1, [x19]
    7f90:	add	x1, x1, #0x1
    7f94:	str	x1, [x19]
    7f98:	str	x19, [x0, #32]
    7f9c:	ldrsb	w1, [x20, #32]
    7fa0:	tbnz	w1, #31, 7fdc <PyNumber_FloorDivide@plt+0x33dc>
    7fa4:	strb	wzr, [x0, #31]
    7fa8:	ldp	x19, x20, [sp, #16]
    7fac:	ldr	x21, [sp, #32]
    7fb0:	ldp	x29, x30, [sp], #48
    7fb4:	ret
    7fb8:	ldr	x2, [x0, #304]
    7fbc:	mov	x1, #0x0                   	// #0
    7fc0:	blr	x2
    7fc4:	cbnz	x0, 8000 <PyNumber_FloorDivide@plt+0x3400>
    7fc8:	mov	x0, #0x0                   	// #0
    7fcc:	ldp	x19, x20, [sp, #16]
    7fd0:	ldr	x21, [sp, #32]
    7fd4:	ldp	x29, x30, [sp], #48
    7fd8:	ret
    7fdc:	ldrb	w1, [x0, #25]
    7fe0:	mov	w2, #0x1                   	// #1
    7fe4:	strb	w2, [x0, #31]
    7fe8:	sub	w1, w1, #0x80
    7fec:	strb	w1, [x0, #25]
    7ff0:	ldp	x19, x20, [sp, #16]
    7ff4:	ldr	x21, [sp, #32]
    7ff8:	ldp	x29, x30, [sp], #48
    7ffc:	ret
    8000:	ldr	w1, [x20, #32]
    8004:	mov	x2, #0xffffffffffffffff    	// #-1
    8008:	stur	w1, [x0, #25]
    800c:	ldrh	w1, [x20, #36]
    8010:	str	x2, [x0, #16]
    8014:	strb	wzr, [x0, #24]
    8018:	sturh	w1, [x0, #29]
    801c:	b	7f9c <PyNumber_FloorDivide@plt+0x339c>
    8020:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    8024:	adrp	x1, f000 <PyInit__datetime@@Base+0x118>
    8028:	add	x1, x1, #0xbf8
    802c:	ldr	x0, [x0, #3976]
    8030:	ldr	x0, [x0]
    8034:	bl	4880 <PyErr_SetString@plt>
    8038:	mov	x0, #0x0                   	// #0
    803c:	b	7fa8 <PyNumber_FloorDivide@plt+0x33a8>
    8040:	stp	x29, x30, [sp, #-48]!
    8044:	adrp	x3, 24000 <PyInit__datetime@@Base+0x15118>
    8048:	mov	x29, sp
    804c:	ldr	x3, [x3, #4024]
    8050:	stp	x19, x20, [sp, #16]
    8054:	mov	x20, x1
    8058:	str	x21, [sp, #32]
    805c:	cmp	x2, x3
    8060:	mov	x21, x0
    8064:	b.eq	80d8 <PyNumber_FloorDivide@plt+0x34d8>  // b.none
    8068:	mov	x19, x2
    806c:	mov	x0, x2
    8070:	bl	7ea0 <PyNumber_FloorDivide@plt+0x32a0>
    8074:	tbnz	w0, #31, 8140 <PyNumber_FloorDivide@plt+0x3540>
    8078:	ldr	x2, [x21, #304]
    807c:	mov	x0, x21
    8080:	mov	x1, #0x1                   	// #1
    8084:	blr	x2
    8088:	cbz	x0, 80e8 <PyNumber_FloorDivide@plt+0x34e8>
    808c:	ldr	x1, [x20, #32]
    8090:	stur	x1, [x0, #25]
    8094:	mov	x3, #0xffffffffffffffff    	// #-1
    8098:	mov	w2, #0x1                   	// #1
    809c:	ldrh	w1, [x20, #40]
    80a0:	str	x3, [x0, #16]
    80a4:	strb	w2, [x0, #24]
    80a8:	sturh	w1, [x0, #33]
    80ac:	ldr	x1, [x19]
    80b0:	add	x1, x1, #0x1
    80b4:	str	x1, [x19]
    80b8:	str	x19, [x0, #40]
    80bc:	ldrsb	w1, [x20, #34]
    80c0:	tbnz	w1, #31, 80fc <PyNumber_FloorDivide@plt+0x34fc>
    80c4:	strb	wzr, [x0, #35]
    80c8:	ldp	x19, x20, [sp, #16]
    80cc:	ldr	x21, [sp, #32]
    80d0:	ldp	x29, x30, [sp], #48
    80d4:	ret
    80d8:	ldr	x2, [x0, #304]
    80dc:	mov	x1, #0x0                   	// #0
    80e0:	blr	x2
    80e4:	cbnz	x0, 8120 <PyNumber_FloorDivide@plt+0x3520>
    80e8:	mov	x0, #0x0                   	// #0
    80ec:	ldp	x19, x20, [sp, #16]
    80f0:	ldr	x21, [sp, #32]
    80f4:	ldp	x29, x30, [sp], #48
    80f8:	ret
    80fc:	ldrb	w1, [x0, #27]
    8100:	mov	w2, #0x1                   	// #1
    8104:	strb	w2, [x0, #35]
    8108:	sub	w1, w1, #0x80
    810c:	strb	w1, [x0, #27]
    8110:	ldp	x19, x20, [sp, #16]
    8114:	ldr	x21, [sp, #32]
    8118:	ldp	x29, x30, [sp], #48
    811c:	ret
    8120:	ldr	x1, [x20, #32]
    8124:	stur	x1, [x0, #25]
    8128:	mov	x2, #0xffffffffffffffff    	// #-1
    812c:	ldrh	w1, [x20, #40]
    8130:	str	x2, [x0, #16]
    8134:	strb	wzr, [x0, #24]
    8138:	sturh	w1, [x0, #33]
    813c:	b	80bc <PyNumber_FloorDivide@plt+0x34bc>
    8140:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    8144:	adrp	x1, f000 <PyInit__datetime@@Base+0x118>
    8148:	add	x1, x1, #0xbf8
    814c:	ldr	x0, [x0, #3976]
    8150:	ldr	x0, [x0]
    8154:	bl	4880 <PyErr_SetString@plt>
    8158:	mov	x0, #0x0                   	// #0
    815c:	b	80c8 <PyNumber_FloorDivide@plt+0x34c8>
    8160:	stp	x29, x30, [sp, #-16]!
    8164:	sub	w7, w0, #0x1
    8168:	mov	w11, w3
    816c:	mov	x29, sp
    8170:	mov	w3, #0x270e                	// #9998
    8174:	cmp	w7, w3
    8178:	b.hi	81b8 <PyNumber_FloorDivide@plt+0x35b8>  // b.pmore
    817c:	sxtw	x10, w4
    8180:	mov	w9, w5
    8184:	bl	4e80 <PyNumber_FloorDivide@plt+0x280>
    8188:	sxtw	x3, w11
    818c:	mov	w4, #0x18                  	// #24
    8190:	sxtw	x5, w9
    8194:	smaddl	x3, w0, w4, x3
    8198:	lsl	x4, x3, #4
    819c:	sub	x4, x4, x3
    81a0:	add	x4, x10, x4, lsl #2
    81a4:	lsl	x0, x4, #4
    81a8:	sub	x0, x0, x4
    81ac:	add	x0, x5, x0, lsl #2
    81b0:	ldp	x29, x30, [sp], #16
    81b4:	ret
    81b8:	mov	w6, w0
    81bc:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    81c0:	mov	w2, w6
    81c4:	adrp	x1, f000 <PyInit__datetime@@Base+0x118>
    81c8:	ldr	x0, [x0, #3968]
    81cc:	add	x1, x1, #0xc10
    81d0:	ldr	x0, [x0]
    81d4:	bl	4b60 <PyErr_Format@plt>
    81d8:	mov	x0, #0xffffffffffffffff    	// #-1
    81dc:	b	81b0 <PyNumber_FloorDivide@plt+0x35b0>
    81e0:	mov	x2, #0xffffffffffffb780    	// #-18560
    81e4:	stp	x29, x30, [sp, #-80]!
    81e8:	movk	x2, #0x886c, lsl #16
    81ec:	movk	x2, #0xfff1, lsl #32
    81f0:	mov	x29, sp
    81f4:	add	x1, sp, #0x18
    81f8:	add	x0, x0, x2
    81fc:	bl	4bc0 <_PyTime_localtime@plt>
    8200:	cbnz	w0, 8224 <PyNumber_FloorDivide@plt+0x3624>
    8204:	ldp	w5, w4, [sp, #24]
    8208:	ldp	w3, w2, [sp, #32]
    820c:	ldp	w1, w0, [sp, #40]
    8210:	add	w1, w1, #0x1
    8214:	add	w0, w0, #0x76c
    8218:	bl	8160 <PyNumber_FloorDivide@plt+0x3560>
    821c:	ldp	x29, x30, [sp], #80
    8220:	ret
    8224:	mov	x0, #0xffffffffffffffff    	// #-1
    8228:	b	821c <PyNumber_FloorDivide@plt+0x361c>
    822c:	nop
    8230:	stp	x29, x30, [sp, #-80]!
    8234:	mov	x29, sp
    8238:	stp	x19, x20, [sp, #16]
    823c:	stp	x21, x22, [sp, #32]
    8240:	mov	w22, w6
    8244:	stp	x23, x24, [sp, #48]
    8248:	bl	8160 <PyNumber_FloorDivide@plt+0x3560>
    824c:	mov	x20, x0
    8250:	bl	81e0 <PyNumber_FloorDivide@plt+0x35e0>
    8254:	cmn	x0, #0x1
    8258:	b.eq	8358 <PyNumber_FloorDivide@plt+0x3758>  // b.none
    825c:	lsl	x19, x20, #1
    8260:	mov	x21, x0
    8264:	sub	x24, x19, x0
    8268:	mov	x0, x24
    826c:	bl	81e0 <PyNumber_FloorDivide@plt+0x35e0>
    8270:	mov	x23, x0
    8274:	cmn	x0, #0x1
    8278:	b.eq	8358 <PyNumber_FloorDivide@plt+0x3758>  // b.none
    827c:	sub	x19, x21, x19
    8280:	cmp	x20, x0
    8284:	add	x19, x19, x0
    8288:	b.eq	82f0 <PyNumber_FloorDivide@plt+0x36f0>  // b.none
    828c:	sub	x19, x20, x19
    8290:	mov	x0, x19
    8294:	bl	81e0 <PyNumber_FloorDivide@plt+0x35e0>
    8298:	cmn	x0, #0x1
    829c:	b.eq	8358 <PyNumber_FloorDivide@plt+0x3758>  // b.none
    82a0:	cmp	x20, x0
    82a4:	b.eq	8334 <PyNumber_FloorDivide@plt+0x3734>  // b.none
    82a8:	cmp	x20, x23
    82ac:	b.eq	82bc <PyNumber_FloorDivide@plt+0x36bc>  // b.none
    82b0:	cmp	x24, x19
    82b4:	cbz	w22, 82d4 <PyNumber_FloorDivide@plt+0x36d4>
    82b8:	csel	x24, x24, x19, le
    82bc:	mov	x0, x24
    82c0:	ldp	x19, x20, [sp, #16]
    82c4:	ldp	x21, x22, [sp, #32]
    82c8:	ldp	x23, x24, [sp, #48]
    82cc:	ldp	x29, x30, [sp], #80
    82d0:	ret
    82d4:	csel	x24, x24, x19, ge  // ge = tcont
    82d8:	mov	x0, x24
    82dc:	ldp	x19, x20, [sp, #16]
    82e0:	ldp	x21, x22, [sp, #32]
    82e4:	ldp	x23, x24, [sp, #48]
    82e8:	ldp	x29, x30, [sp], #80
    82ec:	ret
    82f0:	cmp	w22, #0x0
    82f4:	mov	x1, #0x5180                	// #20864
    82f8:	movk	x1, #0x1, lsl #16
    82fc:	sub	x19, x24, x1
    8300:	str	x25, [sp, #64]
    8304:	add	x25, x24, x1
    8308:	csel	x25, x19, x25, eq  // eq = none
    830c:	mov	x0, x25
    8310:	bl	81e0 <PyNumber_FloorDivide@plt+0x35e0>
    8314:	cmn	x0, #0x1
    8318:	b.eq	8350 <PyNumber_FloorDivide@plt+0x3750>  // b.none
    831c:	sub	x19, x0, x25
    8320:	sub	x21, x21, x20
    8324:	cmp	x21, x19
    8328:	ldr	x25, [sp, #64]
    832c:	b.ne	828c <PyNumber_FloorDivide@plt+0x368c>  // b.any
    8330:	b	82bc <PyNumber_FloorDivide@plt+0x36bc>
    8334:	mov	x24, x19
    8338:	mov	x0, x24
    833c:	ldp	x19, x20, [sp, #16]
    8340:	ldp	x21, x22, [sp, #32]
    8344:	ldp	x23, x24, [sp, #48]
    8348:	ldp	x29, x30, [sp], #80
    834c:	ret
    8350:	ldr	x25, [sp, #64]
    8354:	nop
    8358:	mov	x24, #0xffffffffffffffff    	// #-1
    835c:	b	82bc <PyNumber_FloorDivide@plt+0x36bc>
    8360:	stp	x29, x30, [sp, #-32]!
    8364:	mov	x29, sp
    8368:	stp	x19, x20, [sp, #16]
    836c:	mov	x19, x0
    8370:	mov	x20, x1
    8374:	ldr	x0, [x0, #24]
    8378:	cbz	x1, 841c <PyNumber_FloorDivide@plt+0x381c>
    837c:	mov	x1, #0xffffffff            	// #4294967295
    8380:	cmp	x0, x1
    8384:	b.eq	83e4 <PyNumber_FloorDivide@plt+0x37e4>  // b.none
    8388:	ldr	w0, [x19, #24]
    838c:	add	w0, w0, #0x1
    8390:	cmp	w0, #0x1
    8394:	b.hi	83f0 <PyNumber_FloorDivide@plt+0x37f0>  // b.pmore
    8398:	adrp	x0, 25000 <PyInit__datetime@@Base+0x16118>
    839c:	add	x0, x0, #0xab8
    83a0:	add	x0, x0, #0xe8
    83a4:	mov	x1, #0x0                   	// #0
    83a8:	ldr	x2, [x0, #304]
    83ac:	blr	x2
    83b0:	cbz	x0, 83d8 <PyNumber_FloorDivide@plt+0x37d8>
    83b4:	ldr	x1, [x19]
    83b8:	add	x1, x1, #0x1
    83bc:	str	x1, [x19]
    83c0:	str	x19, [x0, #16]
    83c4:	cbz	x20, 83d4 <PyNumber_FloorDivide@plt+0x37d4>
    83c8:	ldr	x1, [x20]
    83cc:	add	x1, x1, #0x1
    83d0:	str	x1, [x20]
    83d4:	str	x20, [x0, #24]
    83d8:	ldp	x19, x20, [sp, #16]
    83dc:	ldp	x29, x30, [sp], #32
    83e0:	ret
    83e4:	ldr	w0, [x19, #32]
    83e8:	cmp	w0, #0x0
    83ec:	b.gt	8388 <PyNumber_FloorDivide@plt+0x3788>
    83f0:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    83f4:	mov	x2, x19
    83f8:	adrp	x1, f000 <PyInit__datetime@@Base+0x118>
    83fc:	add	x1, x1, #0xc28
    8400:	ldr	x0, [x0, #3968]
    8404:	ldr	x0, [x0]
    8408:	bl	4b60 <PyErr_Format@plt>
    840c:	mov	x0, #0x0                   	// #0
    8410:	ldp	x19, x20, [sp, #16]
    8414:	ldp	x29, x30, [sp], #32
    8418:	ret
    841c:	cbnz	x0, 837c <PyNumber_FloorDivide@plt+0x377c>
    8420:	ldr	w0, [x19, #32]
    8424:	cbnz	w0, 8388 <PyNumber_FloorDivide@plt+0x3788>
    8428:	adrp	x0, 26000 <PyInit__datetime@@Base+0x17118>
    842c:	ldr	x0, [x0, #3960]
    8430:	ldr	x1, [x0]
    8434:	add	x1, x1, #0x1
    8438:	str	x1, [x0]
    843c:	b	83d8 <PyNumber_FloorDivide@plt+0x37d8>
    8440:	stp	x29, x30, [sp, #-32]!
    8444:	adrp	x3, 25000 <PyInit__datetime@@Base+0x16118>
    8448:	add	x3, x3, #0xab8
    844c:	mov	x29, sp
    8450:	mov	x0, x1
    8454:	add	x3, x3, #0x288
    8458:	mov	x1, x2
    845c:	add	x6, sp, #0x18
    8460:	add	x5, sp, #0x10
    8464:	adrp	x4, 25000 <PyInit__datetime@@Base+0x16118>
    8468:	adrp	x2, f000 <PyInit__datetime@@Base+0x118>
    846c:	add	x4, x4, #0x298
    8470:	add	x2, x2, #0xc90
    8474:	str	xzr, [sp, #24]
    8478:	bl	4750 <PyArg_ParseTupleAndKeywords@plt>
    847c:	mov	w1, w0
    8480:	mov	x0, #0x0                   	// #0
    8484:	cbz	w1, 8490 <PyNumber_FloorDivide@plt+0x3890>
    8488:	ldp	x0, x1, [sp, #16]
    848c:	bl	8360 <PyNumber_FloorDivide@plt+0x3760>
    8490:	ldp	x29, x30, [sp], #32
    8494:	ret
    8498:	stp	x29, x30, [sp, #-112]!
    849c:	mov	x29, sp
    84a0:	add	x1, sp, #0x38
    84a4:	stp	x19, x20, [sp, #16]
    84a8:	bl	4bc0 <_PyTime_localtime@plt>
    84ac:	cbnz	w0, 8538 <PyNumber_FloorDivide@plt+0x3938>
    84b0:	ldr	w1, [sp, #96]
    84b4:	adrp	x4, 25000 <PyInit__datetime@@Base+0x16118>
    84b8:	mov	w3, #0x1                   	// #1
    84bc:	add	x4, x4, #0x298
    84c0:	mov	w2, #0x0                   	// #0
    84c4:	ldr	x20, [sp, #104]
    84c8:	bl	5500 <PyNumber_FloorDivide@plt+0x900>
    84cc:	mov	x19, x0
    84d0:	cbz	x0, 8538 <PyNumber_FloorDivide@plt+0x3938>
    84d4:	cbz	x20, 8564 <PyNumber_FloorDivide@plt+0x3964>
    84d8:	mov	x0, x20
    84dc:	adrp	x1, f000 <PyInit__datetime@@Base+0x118>
    84e0:	add	x1, x1, #0xca0
    84e4:	str	x21, [sp, #32]
    84e8:	bl	4920 <PyUnicode_DecodeLocale@plt>
    84ec:	mov	x21, x0
    84f0:	cbz	x0, 8584 <PyNumber_FloorDivide@plt+0x3984>
    84f4:	mov	x1, x0
    84f8:	mov	x0, x19
    84fc:	bl	8360 <PyNumber_FloorDivide@plt+0x3760>
    8500:	mov	x20, x0
    8504:	ldr	x1, [x21]
    8508:	sub	x0, x1, #0x1
    850c:	str	x0, [x21]
    8510:	cbz	x0, 8574 <PyNumber_FloorDivide@plt+0x3974>
    8514:	ldr	x21, [sp, #32]
    8518:	ldr	x1, [x19]
    851c:	sub	x1, x1, #0x1
    8520:	str	x1, [x19]
    8524:	cbz	x1, 854c <PyNumber_FloorDivide@plt+0x394c>
    8528:	mov	x0, x20
    852c:	ldp	x19, x20, [sp, #16]
    8530:	ldp	x29, x30, [sp], #112
    8534:	ret
    8538:	mov	x20, #0x0                   	// #0
    853c:	mov	x0, x20
    8540:	ldp	x19, x20, [sp, #16]
    8544:	ldp	x29, x30, [sp], #112
    8548:	ret
    854c:	mov	x0, x19
    8550:	bl	4810 <_Py_Dealloc@plt>
    8554:	mov	x0, x20
    8558:	ldp	x19, x20, [sp, #16]
    855c:	ldp	x29, x30, [sp], #112
    8560:	ret
    8564:	mov	x1, #0x0                   	// #0
    8568:	bl	8360 <PyNumber_FloorDivide@plt+0x3760>
    856c:	mov	x20, x0
    8570:	b	8518 <PyNumber_FloorDivide@plt+0x3918>
    8574:	mov	x0, x21
    8578:	bl	4810 <_Py_Dealloc@plt>
    857c:	ldr	x21, [sp, #32]
    8580:	b	8518 <PyNumber_FloorDivide@plt+0x3918>
    8584:	mov	x20, #0x0                   	// #0
    8588:	ldr	x21, [sp, #32]
    858c:	b	8518 <PyNumber_FloorDivide@plt+0x3918>
    8590:	adrp	x3, 24000 <PyInit__datetime@@Base+0x15118>
    8594:	ldr	x3, [x3, #4024]
    8598:	cmp	x0, x3
    859c:	b.eq	85e4 <PyNumber_FloorDivide@plt+0x39e4>  // b.none
    85a0:	stp	x29, x30, [sp, #-32]!
    85a4:	adrp	x2, 25000 <PyInit__datetime@@Base+0x16118>
    85a8:	add	x2, x2, #0x298
    85ac:	mov	x29, sp
    85b0:	stp	x19, x20, [sp, #16]
    85b4:	mov	x19, x0
    85b8:	mov	x20, x1
    85bc:	ldr	x0, [x0, #8]
    85c0:	add	x1, x2, #0x1a0
    85c4:	cmp	x0, x1
    85c8:	b.eq	85d4 <PyNumber_FloorDivide@plt+0x39d4>  // b.none
    85cc:	bl	4b30 <PyType_IsSubtype@plt>
    85d0:	cbz	w0, 85ec <PyNumber_FloorDivide@plt+0x39ec>
    85d4:	mov	w0, #0x0                   	// #0
    85d8:	ldp	x19, x20, [sp, #16]
    85dc:	ldp	x29, x30, [sp], #32
    85e0:	ret
    85e4:	mov	w0, #0x0                   	// #0
    85e8:	ret
    85ec:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    85f0:	mov	x2, x20
    85f4:	ldr	x3, [x19, #8]
    85f8:	adrp	x1, f000 <PyInit__datetime@@Base+0x118>
    85fc:	ldr	x0, [x0, #3976]
    8600:	add	x1, x1, #0xcb0
    8604:	ldr	x3, [x3, #24]
    8608:	ldr	x0, [x0]
    860c:	bl	4b60 <PyErr_Format@plt>
    8610:	mov	w0, #0xffffffff            	// #-1
    8614:	b	85d8 <PyNumber_FloorDivide@plt+0x39d8>
    8618:	stp	x29, x30, [sp, #-16]!
    861c:	mov	x0, x1
    8620:	adrp	x1, f000 <PyInit__datetime@@Base+0x118>
    8624:	mov	x29, sp
    8628:	add	x1, x1, #0x800
    862c:	bl	8590 <PyNumber_FloorDivide@plt+0x3990>
    8630:	cmn	w0, #0x1
    8634:	b.eq	8658 <PyNumber_FloorDivide@plt+0x3a58>  // b.none
    8638:	adrp	x1, 24000 <PyInit__datetime@@Base+0x15118>
    863c:	ldr	x1, [x1, #4024]
    8640:	mov	x0, x1
    8644:	ldr	x2, [x1]
    8648:	add	x2, x2, #0x1
    864c:	str	x2, [x1]
    8650:	ldp	x29, x30, [sp], #16
    8654:	ret
    8658:	mov	x0, #0x0                   	// #0
    865c:	b	8650 <PyNumber_FloorDivide@plt+0x3a50>
    8660:	stp	x29, x30, [sp, #-32]!
    8664:	mov	x29, sp
    8668:	str	x19, [sp, #16]
    866c:	mov	x19, x0
    8670:	mov	x0, x1
    8674:	adrp	x1, f000 <PyInit__datetime@@Base+0x118>
    8678:	add	x1, x1, #0x830
    867c:	bl	8590 <PyNumber_FloorDivide@plt+0x3990>
    8680:	cmn	w0, #0x1
    8684:	b.eq	86a4 <PyNumber_FloorDivide@plt+0x3aa4>  // b.none
    8688:	ldr	x0, [x19, #16]
    868c:	ldr	x1, [x0]
    8690:	add	x1, x1, #0x1
    8694:	str	x1, [x0]
    8698:	ldr	x19, [sp, #16]
    869c:	ldp	x29, x30, [sp], #32
    86a0:	ret
    86a4:	mov	x0, #0x0                   	// #0
    86a8:	b	8698 <PyNumber_FloorDivide@plt+0x3a98>
    86ac:	nop
    86b0:	stp	x29, x30, [sp, #-48]!
    86b4:	mov	x29, sp
    86b8:	stp	x19, x20, [sp, #16]
    86bc:	mov	x19, x0
    86c0:	mov	x20, x1
    86c4:	ldr	x0, [x0, #8]
    86c8:	str	x21, [sp, #32]
    86cc:	adrp	x21, 25000 <PyInit__datetime@@Base+0x16118>
    86d0:	add	x2, x21, #0x298
    86d4:	cmp	x0, x2
    86d8:	b.eq	8710 <PyNumber_FloorDivide@plt+0x3b10>  // b.none
    86dc:	mov	x1, x2
    86e0:	bl	4b30 <PyType_IsSubtype@plt>
    86e4:	cbnz	w0, 8710 <PyNumber_FloorDivide@plt+0x3b10>
    86e8:	adrp	x1, 24000 <PyInit__datetime@@Base+0x15118>
    86ec:	ldr	x1, [x1, #3960]
    86f0:	ldp	x19, x20, [sp, #16]
    86f4:	mov	x0, x1
    86f8:	ldr	x2, [x1]
    86fc:	ldr	x21, [sp, #32]
    8700:	add	x2, x2, #0x1
    8704:	str	x2, [x1]
    8708:	ldp	x29, x30, [sp], #48
    870c:	ret
    8710:	ldr	x0, [x20, #8]
    8714:	add	x1, x21, #0x298
    8718:	cmp	x0, x1
    871c:	b.eq	8728 <PyNumber_FloorDivide@plt+0x3b28>  // b.none
    8720:	bl	4b30 <PyType_IsSubtype@plt>
    8724:	cbz	w0, 86e8 <PyNumber_FloorDivide@plt+0x3ae8>
    8728:	ldp	w2, w6, [x19, #24]
    872c:	add	x4, x21, #0x298
    8730:	ldp	w0, w1, [x20, #24]
    8734:	mov	w3, #0x1                   	// #1
    8738:	ldr	w5, [x19, #32]
    873c:	sub	w0, w2, w0
    8740:	ldr	w2, [x20, #32]
    8744:	sub	w1, w6, w1
    8748:	sub	w2, w5, w2
    874c:	bl	5500 <PyNumber_FloorDivide@plt+0x900>
    8750:	adrp	x1, 24000 <PyInit__datetime@@Base+0x15118>
    8754:	ldr	x2, [x1, #3960]
    8758:	cmp	x0, x2
    875c:	b.eq	86ec <PyNumber_FloorDivide@plt+0x3aec>  // b.none
    8760:	ldp	x19, x20, [sp, #16]
    8764:	ldr	x21, [sp, #32]
    8768:	ldp	x29, x30, [sp], #48
    876c:	ret
    8770:	stp	x29, x30, [sp, #-16]!
    8774:	sub	w4, w0, #0x1
    8778:	mov	w3, #0x270e                	// #9998
    877c:	mov	x29, sp
    8780:	cmp	w4, w3
    8784:	b.hi	884c <PyNumber_FloorDivide@plt+0x3c4c>  // b.pmore
    8788:	sub	w3, w1, #0x1
    878c:	cmp	w3, #0xb
    8790:	b.hi	882c <PyNumber_FloorDivide@plt+0x3c2c>  // b.pmore
    8794:	cmp	w2, #0x0
    8798:	b.le	880c <PyNumber_FloorDivide@plt+0x3c0c>
    879c:	cmp	w1, #0x2
    87a0:	b.eq	87c8 <PyNumber_FloorDivide@plt+0x3bc8>  // b.none
    87a4:	adrp	x0, 11000 <PyInit__datetime@@Base+0x2118>
    87a8:	add	x0, x0, #0x5e0
    87ac:	add	x0, x0, #0x38
    87b0:	ldr	w3, [x0, w1, sxtw #2]
    87b4:	cmp	w2, w3
    87b8:	mov	w0, #0x0                   	// #0
    87bc:	b.gt	880c <PyNumber_FloorDivide@plt+0x3c0c>
    87c0:	ldp	x29, x30, [sp], #16
    87c4:	ret
    87c8:	tst	x0, #0x3
    87cc:	b.ne	87a4 <PyNumber_FloorDivide@plt+0x3ba4>  // b.any
    87d0:	mov	w5, #0x5c29                	// #23593
    87d4:	mov	w4, #0x5c28                	// #23592
    87d8:	movk	w5, #0xc28f, lsl #16
    87dc:	movk	w4, #0x28f, lsl #16
    87e0:	mov	w3, #0x1d                  	// #29
    87e4:	mul	w0, w0, w5
    87e8:	ror	w5, w0, #2
    87ec:	cmp	w5, w4
    87f0:	b.hi	87b4 <PyNumber_FloorDivide@plt+0x3bb4>  // b.pmore
    87f4:	mov	w4, #0xd70a                	// #55050
    87f8:	ror	w0, w0, #4
    87fc:	movk	w4, #0xa3, lsl #16
    8800:	cmp	w0, w4
    8804:	b.ls	87b4 <PyNumber_FloorDivide@plt+0x3bb4>  // b.plast
    8808:	b	87a4 <PyNumber_FloorDivide@plt+0x3ba4>
    880c:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    8810:	adrp	x1, f000 <PyInit__datetime@@Base+0x118>
    8814:	add	x1, x1, #0xd08
    8818:	ldr	x0, [x0, #3968]
    881c:	ldr	x0, [x0]
    8820:	bl	4880 <PyErr_SetString@plt>
    8824:	mov	w0, #0xffffffff            	// #-1
    8828:	b	87c0 <PyNumber_FloorDivide@plt+0x3bc0>
    882c:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    8830:	adrp	x1, f000 <PyInit__datetime@@Base+0x118>
    8834:	add	x1, x1, #0xcf0
    8838:	ldr	x0, [x0, #3968]
    883c:	ldr	x0, [x0]
    8840:	bl	4880 <PyErr_SetString@plt>
    8844:	mov	w0, #0xffffffff            	// #-1
    8848:	b	87c0 <PyNumber_FloorDivide@plt+0x3bc0>
    884c:	adrp	x3, 24000 <PyInit__datetime@@Base+0x15118>
    8850:	mov	w2, w0
    8854:	adrp	x1, f000 <PyInit__datetime@@Base+0x118>
    8858:	add	x1, x1, #0xc10
    885c:	ldr	x3, [x3, #3968]
    8860:	ldr	x0, [x3]
    8864:	bl	4b60 <PyErr_Format@plt>
    8868:	mov	w0, #0xffffffff            	// #-1
    886c:	b	87c0 <PyNumber_FloorDivide@plt+0x3bc0>
    8870:	stp	x29, x30, [sp, #-48]!
    8874:	mov	x29, sp
    8878:	stp	x19, x20, [sp, #16]
    887c:	mov	x20, x3
    8880:	mov	w19, w0
    8884:	stp	x21, x22, [sp, #32]
    8888:	mov	w22, w1
    888c:	mov	w21, w2
    8890:	bl	8770 <PyNumber_FloorDivide@plt+0x3b70>
    8894:	tbnz	w0, #31, 88d4 <PyNumber_FloorDivide@plt+0x3cd4>
    8898:	ldr	x2, [x20, #304]
    889c:	mov	x0, x20
    88a0:	mov	x1, #0x0                   	// #0
    88a4:	blr	x2
    88a8:	cbz	x0, 88c4 <PyNumber_FloorDivide@plt+0x3cc4>
    88ac:	rev16	w19, w19
    88b0:	mov	x1, #0xffffffffffffffff    	// #-1
    88b4:	str	x1, [x0, #16]
    88b8:	sturh	w19, [x0, #25]
    88bc:	strb	w22, [x0, #27]
    88c0:	strb	w21, [x0, #28]
    88c4:	ldp	x19, x20, [sp, #16]
    88c8:	ldp	x21, x22, [sp, #32]
    88cc:	ldp	x29, x30, [sp], #48
    88d0:	ret
    88d4:	mov	x0, #0x0                   	// #0
    88d8:	ldp	x19, x20, [sp, #16]
    88dc:	ldp	x21, x22, [sp, #32]
    88e0:	ldp	x29, x30, [sp], #48
    88e4:	ret
    88e8:	ldrb	w2, [x0, #28]
    88ec:	adrp	x3, 25000 <PyInit__datetime@@Base+0x16118>
    88f0:	ldrb	w1, [x0, #27]
    88f4:	add	x3, x3, #0x298
    88f8:	ldurh	w0, [x0, #25]
    88fc:	add	x3, x3, #0x680
    8900:	rev16	w0, w0
    8904:	and	w0, w0, #0xffff
    8908:	b	8870 <PyNumber_FloorDivide@plt+0x3c70>
    890c:	nop
    8910:	stp	x29, x30, [sp, #-80]!
    8914:	mov	x29, sp
    8918:	stp	x19, x20, [sp, #16]
    891c:	mov	x19, x1
    8920:	mov	x20, x0
    8924:	mov	x1, x2
    8928:	ldr	x3, [x19, #16]
    892c:	cmp	x3, #0x1
    8930:	b.ne	8958 <PyNumber_FloorDivide@plt+0x3d58>  // b.any
    8934:	str	x21, [sp, #32]
    8938:	ldr	x21, [x19, #24]
    893c:	ldr	x2, [x21, #8]
    8940:	ldr	x2, [x2, #168]
    8944:	tbz	w2, #27, 89a8 <PyNumber_FloorDivide@plt+0x3da8>
    8948:	ldr	x2, [x21, #16]
    894c:	cmp	x2, #0x4
    8950:	b.eq	8a80 <PyNumber_FloorDivide@plt+0x3e80>  // b.none
    8954:	ldr	x21, [sp, #32]
    8958:	adrp	x3, 25000 <PyInit__datetime@@Base+0x16118>
    895c:	add	x3, x3, #0xab8
    8960:	adrp	x2, f000 <PyInit__datetime@@Base+0x118>
    8964:	mov	x0, x19
    8968:	add	x3, x3, #0x2a0
    896c:	add	x6, sp, #0x4c
    8970:	add	x2, x2, #0x888
    8974:	add	x5, sp, #0x48
    8978:	add	x4, sp, #0x44
    897c:	bl	4750 <PyArg_ParseTupleAndKeywords@plt>
    8980:	cbz	w0, 8a6c <PyNumber_FloorDivide@plt+0x3e6c>
    8984:	ldp	w0, w1, [sp, #68]
    8988:	mov	x3, x20
    898c:	ldr	w2, [sp, #76]
    8990:	bl	8870 <PyNumber_FloorDivide@plt+0x3c70>
    8994:	mov	x19, x0
    8998:	mov	x0, x19
    899c:	ldp	x19, x20, [sp, #16]
    89a0:	ldp	x29, x30, [sp], #80
    89a4:	ret
    89a8:	tbz	w2, #28, 8954 <PyNumber_FloorDivide@plt+0x3d54>
    89ac:	ldrsb	w0, [x21, #32]
    89b0:	tbz	w0, #31, 8a54 <PyNumber_FloorDivide@plt+0x3e54>
    89b4:	ldr	x0, [x21, #16]
    89b8:	cmp	x0, #0x4
    89bc:	b.ne	8954 <PyNumber_FloorDivide@plt+0x3d54>  // b.any
    89c0:	ldrb	w0, [x21, #32]
    89c4:	and	w2, w0, #0x1c
    89c8:	and	w3, w0, #0x20
    89cc:	cmp	w2, #0x4
    89d0:	b.eq	8acc <PyNumber_FloorDivide@plt+0x3ecc>  // b.none
    89d4:	cmp	w2, #0x8
    89d8:	b.eq	8af4 <PyNumber_FloorDivide@plt+0x3ef4>  // b.none
    89dc:	cbz	w3, 8b1c <PyNumber_FloorDivide@plt+0x3f1c>
    89e0:	tst	x0, #0x40
    89e4:	add	x2, x21, #0x50
    89e8:	add	x0, x21, #0x38
    89ec:	csel	x0, x2, x0, eq  // eq = none
    89f0:	ldr	w0, [x0]
    89f4:	sub	w0, w0, #0x1
    89f8:	cmp	w0, #0xb
    89fc:	cset	w0, ls  // ls = plast
    8a00:	cbz	w0, 8954 <PyNumber_FloorDivide@plt+0x3d54>
    8a04:	mov	x0, x21
    8a08:	bl	4960 <PyUnicode_AsLatin1String@plt>
    8a0c:	mov	x21, x0
    8a10:	cbz	x0, 8b40 <PyNumber_FloorDivide@plt+0x3f40>
    8a14:	ldr	x2, [x20, #304]
    8a18:	mov	x0, x20
    8a1c:	mov	x1, #0x0                   	// #0
    8a20:	blr	x2
    8a24:	mov	x19, x0
    8a28:	cbz	x0, 8a3c <PyNumber_FloorDivide@plt+0x3e3c>
    8a2c:	ldr	w0, [x21, #32]
    8a30:	mov	x1, #0xffffffffffffffff    	// #-1
    8a34:	str	x1, [x19, #16]
    8a38:	stur	w0, [x19, #25]
    8a3c:	ldr	x0, [x21]
    8a40:	sub	x0, x0, #0x1
    8a44:	str	x0, [x21]
    8a48:	cbz	x0, 8abc <PyNumber_FloorDivide@plt+0x3ebc>
    8a4c:	ldr	x21, [sp, #32]
    8a50:	b	8998 <PyNumber_FloorDivide@plt+0x3d98>
    8a54:	mov	x0, x21
    8a58:	str	x1, [sp, #56]
    8a5c:	bl	4710 <_PyUnicode_Ready@plt>
    8a60:	ldr	x1, [sp, #56]
    8a64:	cbz	w0, 89b4 <PyNumber_FloorDivide@plt+0x3db4>
    8a68:	ldr	x21, [sp, #32]
    8a6c:	mov	x19, #0x0                   	// #0
    8a70:	mov	x0, x19
    8a74:	ldp	x19, x20, [sp, #16]
    8a78:	ldp	x29, x30, [sp], #80
    8a7c:	ret
    8a80:	ldrb	w2, [x21, #34]
    8a84:	sub	w2, w2, #0x1
    8a88:	cmp	w2, #0xb
    8a8c:	b.hi	8954 <PyNumber_FloorDivide@plt+0x3d54>  // b.pmore
    8a90:	ldr	x2, [x0, #304]
    8a94:	mov	x1, #0x0                   	// #0
    8a98:	blr	x2
    8a9c:	mov	x19, x0
    8aa0:	cbz	x0, 8a4c <PyNumber_FloorDivide@plt+0x3e4c>
    8aa4:	ldr	w0, [x21, #32]
    8aa8:	mov	x1, #0xffffffffffffffff    	// #-1
    8aac:	stur	w0, [x19, #25]
    8ab0:	str	x1, [x19, #16]
    8ab4:	ldr	x21, [sp, #32]
    8ab8:	b	8998 <PyNumber_FloorDivide@plt+0x3d98>
    8abc:	mov	x0, x21
    8ac0:	bl	4810 <_Py_Dealloc@plt>
    8ac4:	ldr	x21, [sp, #32]
    8ac8:	b	8998 <PyNumber_FloorDivide@plt+0x3d98>
    8acc:	cbz	w3, 8b28 <PyNumber_FloorDivide@plt+0x3f28>
    8ad0:	tst	x0, #0x40
    8ad4:	add	x2, x21, #0x32
    8ad8:	add	x0, x21, #0x4a
    8adc:	csel	x0, x0, x2, eq  // eq = none
    8ae0:	ldrb	w0, [x0]
    8ae4:	sub	w0, w0, #0x1
    8ae8:	cmp	w0, #0xb
    8aec:	cset	w0, ls  // ls = plast
    8af0:	b	8a00 <PyNumber_FloorDivide@plt+0x3e00>
    8af4:	cbz	w3, 8b34 <PyNumber_FloorDivide@plt+0x3f34>
    8af8:	tst	x0, #0x40
    8afc:	add	x2, x21, #0x34
    8b00:	add	x0, x21, #0x4c
    8b04:	csel	x0, x0, x2, eq  // eq = none
    8b08:	ldrh	w0, [x0]
    8b0c:	sub	w0, w0, #0x1
    8b10:	cmp	w0, #0xb
    8b14:	cset	w0, ls  // ls = plast
    8b18:	b	8a00 <PyNumber_FloorDivide@plt+0x3e00>
    8b1c:	ldr	x0, [x21, #72]
    8b20:	add	x0, x0, #0x8
    8b24:	b	89f0 <PyNumber_FloorDivide@plt+0x3df0>
    8b28:	ldr	x0, [x21, #72]
    8b2c:	add	x0, x0, #0x2
    8b30:	b	8ae0 <PyNumber_FloorDivide@plt+0x3ee0>
    8b34:	ldr	x0, [x21, #72]
    8b38:	add	x0, x0, #0x4
    8b3c:	b	8b08 <PyNumber_FloorDivide@plt+0x3f08>
    8b40:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    8b44:	ldr	x0, [x0, #4032]
    8b48:	ldr	x0, [x0]
    8b4c:	bl	48a0 <PyErr_ExceptionMatches@plt>
    8b50:	cbz	w0, 8a68 <PyNumber_FloorDivide@plt+0x3e68>
    8b54:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    8b58:	adrp	x1, f000 <PyInit__datetime@@Base+0x118>
    8b5c:	mov	x19, #0x0                   	// #0
    8b60:	add	x1, x1, #0xd28
    8b64:	ldr	x0, [x0, #3968]
    8b68:	ldr	x0, [x0]
    8b6c:	bl	4880 <PyErr_SetString@plt>
    8b70:	ldr	x21, [sp, #32]
    8b74:	b	8998 <PyNumber_FloorDivide@plt+0x3d98>
    8b78:	stp	x29, x30, [sp, #-48]!
    8b7c:	adrp	x3, 25000 <PyInit__datetime@@Base+0x16118>
    8b80:	add	x3, x3, #0xab8
    8b84:	mov	x29, sp
    8b88:	stp	x19, x20, [sp, #16]
    8b8c:	mov	x19, x0
    8b90:	add	x3, x3, #0x2a0
    8b94:	mov	x0, x1
    8b98:	add	x6, sp, #0x2c
    8b9c:	ldurh	w7, [x19, #25]
    8ba0:	mov	x1, x2
    8ba4:	ldrb	w9, [x19, #27]
    8ba8:	adrp	x2, f000 <PyInit__datetime@@Base+0x118>
    8bac:	ldrb	w8, [x19, #28]
    8bb0:	rev16	w7, w7
    8bb4:	and	w7, w7, #0xffff
    8bb8:	add	x2, x2, #0xd98
    8bbc:	add	x5, sp, #0x28
    8bc0:	add	x4, sp, #0x24
    8bc4:	stp	w7, w9, [sp, #36]
    8bc8:	str	w8, [sp, #44]
    8bcc:	bl	4750 <PyArg_ParseTupleAndKeywords@plt>
    8bd0:	cbz	w0, 8c24 <PyNumber_FloorDivide@plt+0x4024>
    8bd4:	ldp	w1, w2, [sp, #36]
    8bd8:	adrp	x0, f000 <PyInit__datetime@@Base+0x118>
    8bdc:	ldr	w3, [sp, #44]
    8be0:	add	x0, x0, #0x888
    8be4:	bl	49a0 <Py_BuildValue@plt>
    8be8:	mov	x20, x0
    8bec:	cbz	x0, 8c24 <PyNumber_FloorDivide@plt+0x4024>
    8bf0:	mov	x1, x0
    8bf4:	mov	x2, #0x0                   	// #0
    8bf8:	ldr	x0, [x19, #8]
    8bfc:	bl	8910 <PyNumber_FloorDivide@plt+0x3d10>
    8c00:	mov	x19, x0
    8c04:	ldr	x1, [x20]
    8c08:	sub	x0, x1, #0x1
    8c0c:	str	x0, [x20]
    8c10:	cbz	x0, 8c38 <PyNumber_FloorDivide@plt+0x4038>
    8c14:	mov	x0, x19
    8c18:	ldp	x19, x20, [sp, #16]
    8c1c:	ldp	x29, x30, [sp], #48
    8c20:	ret
    8c24:	mov	x19, #0x0                   	// #0
    8c28:	mov	x0, x19
    8c2c:	ldp	x19, x20, [sp, #16]
    8c30:	ldp	x29, x30, [sp], #48
    8c34:	ret
    8c38:	mov	x0, x20
    8c3c:	bl	4810 <_Py_Dealloc@plt>
    8c40:	mov	x0, x19
    8c44:	ldp	x19, x20, [sp, #16]
    8c48:	ldp	x29, x30, [sp], #48
    8c4c:	ret
    8c50:	stp	x29, x30, [sp, #-16]!
    8c54:	cmp	w0, #0x17
    8c58:	mov	x29, sp
    8c5c:	b.hi	8cd4 <PyNumber_FloorDivide@plt+0x40d4>  // b.pmore
    8c60:	cmp	w1, #0x3b
    8c64:	b.hi	8cb4 <PyNumber_FloorDivide@plt+0x40b4>  // b.pmore
    8c68:	cmp	w2, #0x3b
    8c6c:	b.hi	8d14 <PyNumber_FloorDivide@plt+0x4114>  // b.pmore
    8c70:	mov	w0, #0x423f                	// #16959
    8c74:	movk	w0, #0xf, lsl #16
    8c78:	cmp	w3, w0
    8c7c:	b.hi	8cf4 <PyNumber_FloorDivide@plt+0x40f4>  // b.pmore
    8c80:	cmp	w4, #0x1
    8c84:	mov	w0, #0x0                   	// #0
    8c88:	b.hi	8c94 <PyNumber_FloorDivide@plt+0x4094>  // b.pmore
    8c8c:	ldp	x29, x30, [sp], #16
    8c90:	ret
    8c94:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    8c98:	adrp	x1, f000 <PyInit__datetime@@Base+0x118>
    8c9c:	add	x1, x1, #0xe18
    8ca0:	ldr	x0, [x0, #3968]
    8ca4:	ldr	x0, [x0]
    8ca8:	bl	4880 <PyErr_SetString@plt>
    8cac:	mov	w0, #0xffffffff            	// #-1
    8cb0:	b	8c8c <PyNumber_FloorDivide@plt+0x408c>
    8cb4:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    8cb8:	adrp	x1, f000 <PyInit__datetime@@Base+0x118>
    8cbc:	add	x1, x1, #0xdc0
    8cc0:	ldr	x0, [x0, #3968]
    8cc4:	ldr	x0, [x0]
    8cc8:	bl	4880 <PyErr_SetString@plt>
    8ccc:	mov	w0, #0xffffffff            	// #-1
    8cd0:	b	8c8c <PyNumber_FloorDivide@plt+0x408c>
    8cd4:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    8cd8:	adrp	x1, f000 <PyInit__datetime@@Base+0x118>
    8cdc:	add	x1, x1, #0xda8
    8ce0:	ldr	x0, [x0, #3968]
    8ce4:	ldr	x0, [x0]
    8ce8:	bl	4880 <PyErr_SetString@plt>
    8cec:	mov	w0, #0xffffffff            	// #-1
    8cf0:	b	8c8c <PyNumber_FloorDivide@plt+0x408c>
    8cf4:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    8cf8:	adrp	x1, f000 <PyInit__datetime@@Base+0x118>
    8cfc:	add	x1, x1, #0xdf0
    8d00:	ldr	x0, [x0, #3968]
    8d04:	ldr	x0, [x0]
    8d08:	bl	4880 <PyErr_SetString@plt>
    8d0c:	mov	w0, #0xffffffff            	// #-1
    8d10:	b	8c8c <PyNumber_FloorDivide@plt+0x408c>
    8d14:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    8d18:	adrp	x1, f000 <PyInit__datetime@@Base+0x118>
    8d1c:	add	x1, x1, #0xdd8
    8d20:	ldr	x0, [x0, #3968]
    8d24:	ldr	x0, [x0]
    8d28:	bl	4880 <PyErr_SetString@plt>
    8d2c:	mov	w0, #0xffffffff            	// #-1
    8d30:	b	8c8c <PyNumber_FloorDivide@plt+0x408c>
    8d34:	nop
    8d38:	stp	x29, x30, [sp, #-80]!
    8d3c:	mov	x29, sp
    8d40:	stp	x19, x20, [sp, #16]
    8d44:	mov	x19, x4
    8d48:	mov	w20, w3
    8d4c:	mov	w4, w5
    8d50:	stp	x21, x22, [sp, #32]
    8d54:	mov	w21, w5
    8d58:	mov	x22, x6
    8d5c:	stp	x23, x24, [sp, #48]
    8d60:	mov	w24, w1
    8d64:	mov	w23, w2
    8d68:	stp	x25, x26, [sp, #64]
    8d6c:	mov	w25, w0
    8d70:	bl	8c50 <PyNumber_FloorDivide@plt+0x4050>
    8d74:	tbnz	w0, #31, 8e04 <PyNumber_FloorDivide@plt+0x4204>
    8d78:	mov	x0, x19
    8d7c:	bl	7ea0 <PyNumber_FloorDivide@plt+0x32a0>
    8d80:	tbnz	w0, #31, 8e04 <PyNumber_FloorDivide@plt+0x4204>
    8d84:	adrp	x1, 24000 <PyInit__datetime@@Base+0x15118>
    8d88:	mov	x0, x22
    8d8c:	ldr	x2, [x22, #304]
    8d90:	ldr	x22, [x1, #4024]
    8d94:	cmp	x19, x22
    8d98:	cset	w26, ne  // ne = any
    8d9c:	cset	x1, ne  // ne = any
    8da0:	blr	x2
    8da4:	cbz	x0, 8e04 <PyNumber_FloorDivide@plt+0x4204>
    8da8:	asr	w1, w20, #16
    8dac:	mov	x2, #0xffffffffffffffff    	// #-1
    8db0:	rev16	w20, w20
    8db4:	str	x2, [x0, #16]
    8db8:	strb	w26, [x0, #24]
    8dbc:	cmp	x19, x22
    8dc0:	strb	w25, [x0, #25]
    8dc4:	strb	w24, [x0, #26]
    8dc8:	strb	w23, [x0, #27]
    8dcc:	strb	w1, [x0, #28]
    8dd0:	sturh	w20, [x0, #29]
    8dd4:	b.eq	8de8 <PyNumber_FloorDivide@plt+0x41e8>  // b.none
    8dd8:	ldr	x1, [x19]
    8ddc:	add	x1, x1, #0x1
    8de0:	str	x1, [x19]
    8de4:	str	x19, [x0, #32]
    8de8:	strb	w21, [x0, #31]
    8dec:	ldp	x19, x20, [sp, #16]
    8df0:	ldp	x21, x22, [sp, #32]
    8df4:	ldp	x23, x24, [sp, #48]
    8df8:	ldp	x25, x26, [sp, #64]
    8dfc:	ldp	x29, x30, [sp], #80
    8e00:	ret
    8e04:	mov	x0, #0x0                   	// #0
    8e08:	ldp	x19, x20, [sp, #16]
    8e0c:	ldp	x21, x22, [sp, #32]
    8e10:	ldp	x23, x24, [sp, #48]
    8e14:	ldp	x25, x26, [sp, #64]
    8e18:	ldp	x29, x30, [sp], #80
    8e1c:	ret
    8e20:	mov	x6, x5
    8e24:	mov	w5, #0x0                   	// #0
    8e28:	b	8d38 <PyNumber_FloorDivide@plt+0x4138>
    8e2c:	nop
    8e30:	mov	x5, x0
    8e34:	ldrb	w0, [x0, #33]
    8e38:	ldrb	w3, [x5, #32]
    8e3c:	lsl	w0, w0, #8
    8e40:	ldrb	w4, [x5, #24]
    8e44:	ldrb	w1, [x5, #34]
    8e48:	orr	w3, w0, w3, lsl #16
    8e4c:	ldrb	w2, [x5, #31]
    8e50:	orr	w3, w3, w1
    8e54:	ldrb	w0, [x5, #29]
    8e58:	ldrb	w1, [x5, #30]
    8e5c:	cbz	w4, 8e78 <PyNumber_FloorDivide@plt+0x4278>
    8e60:	ldr	x4, [x5, #40]
    8e64:	adrp	x6, 25000 <PyInit__datetime@@Base+0x16118>
    8e68:	ldrb	w5, [x5, #35]
    8e6c:	add	x6, x6, #0x298
    8e70:	add	x6, x6, #0x340
    8e74:	b	8d38 <PyNumber_FloorDivide@plt+0x4138>
    8e78:	adrp	x4, 24000 <PyInit__datetime@@Base+0x15118>
    8e7c:	ldrb	w5, [x5, #35]
    8e80:	adrp	x6, 25000 <PyInit__datetime@@Base+0x16118>
    8e84:	add	x6, x6, #0x298
    8e88:	ldr	x4, [x4, #4024]
    8e8c:	add	x6, x6, #0x340
    8e90:	b	8d38 <PyNumber_FloorDivide@plt+0x4138>
    8e94:	nop
    8e98:	ldrb	w3, [x0, #33]
    8e9c:	adrp	x4, 24000 <PyInit__datetime@@Base+0x15118>
    8ea0:	ldrb	w1, [x0, #32]
    8ea4:	adrp	x6, 25000 <PyInit__datetime@@Base+0x16118>
    8ea8:	ldrb	w7, [x0, #34]
    8eac:	add	x6, x6, #0x298
    8eb0:	lsl	w3, w3, #8
    8eb4:	ldrb	w5, [x0, #35]
    8eb8:	ldrb	w2, [x0, #31]
    8ebc:	orr	w3, w3, w1, lsl #16
    8ec0:	ldr	x4, [x4, #4024]
    8ec4:	add	x6, x6, #0x340
    8ec8:	ldrb	w1, [x0, #30]
    8ecc:	orr	w3, w3, w7
    8ed0:	ldrb	w0, [x0, #29]
    8ed4:	b	8d38 <PyNumber_FloorDivide@plt+0x4138>
    8ed8:	sub	sp, sp, #0x70
    8edc:	stp	x29, x30, [sp, #16]
    8ee0:	add	x29, sp, #0x10
    8ee4:	stp	x19, x20, [sp, #32]
    8ee8:	mov	x19, x1
    8eec:	adrp	x20, 24000 <PyInit__datetime@@Base+0x15118>
    8ef0:	stp	x21, x22, [sp, #48]
    8ef4:	mov	x21, x0
    8ef8:	ldr	x3, [x19, #16]
    8efc:	stp	wzr, wzr, [sp, #84]
    8f00:	ldr	x1, [x20, #4024]
    8f04:	stp	wzr, wzr, [sp, #92]
    8f08:	str	wzr, [sp, #100]
    8f0c:	sub	x4, x3, #0x1
    8f10:	str	x1, [sp, #104]
    8f14:	cmp	x4, #0x1
    8f18:	mov	x1, x2
    8f1c:	b.hi	8f4c <PyNumber_FloorDivide@plt+0x434c>  // b.pmore
    8f20:	cmp	x3, #0x2
    8f24:	ldr	x22, [x19, #24]
    8f28:	b.eq	9088 <PyNumber_FloorDivide@plt+0x4488>  // b.none
    8f2c:	ldr	x0, [x22, #8]
    8f30:	ldr	x0, [x0, #168]
    8f34:	tbz	w0, #27, 8fbc <PyNumber_FloorDivide@plt+0x43bc>
    8f38:	ldr	x0, [x22, #16]
    8f3c:	cmp	x0, #0x6
    8f40:	b.eq	90a0 <PyNumber_FloorDivide@plt+0x44a0>  // b.none
    8f44:	ldr	x20, [x20, #4024]
    8f48:	str	x20, [sp, #104]
    8f4c:	add	x4, sp, #0x64
    8f50:	add	x0, sp, #0x68
    8f54:	stp	x0, x4, [sp]
    8f58:	adrp	x3, 25000 <PyInit__datetime@@Base+0x16118>
    8f5c:	add	x3, x3, #0xab8
    8f60:	adrp	x2, f000 <PyInit__datetime@@Base+0x118>
    8f64:	add	x3, x3, #0x2c0
    8f68:	add	x7, sp, #0x60
    8f6c:	add	x2, x2, #0xea8
    8f70:	add	x6, sp, #0x5c
    8f74:	add	x5, sp, #0x58
    8f78:	mov	x0, x19
    8f7c:	add	x4, sp, #0x54
    8f80:	bl	4750 <PyArg_ParseTupleAndKeywords@plt>
    8f84:	cbz	w0, 906c <PyNumber_FloorDivide@plt+0x446c>
    8f88:	ldp	w0, w1, [sp, #84]
    8f8c:	mov	x6, x21
    8f90:	ldp	w2, w3, [sp, #92]
    8f94:	ldr	w5, [sp, #100]
    8f98:	ldr	x4, [sp, #104]
    8f9c:	bl	8d38 <PyNumber_FloorDivide@plt+0x4138>
    8fa0:	mov	x19, x0
    8fa4:	mov	x0, x19
    8fa8:	ldp	x29, x30, [sp, #16]
    8fac:	ldp	x19, x20, [sp, #32]
    8fb0:	ldp	x21, x22, [sp, #48]
    8fb4:	add	sp, sp, #0x70
    8fb8:	ret
    8fbc:	tbz	w0, #28, 8f44 <PyNumber_FloorDivide@plt+0x4344>
    8fc0:	ldrsb	w0, [x22, #32]
    8fc4:	tbz	w0, #31, 9058 <PyNumber_FloorDivide@plt+0x4458>
    8fc8:	ldr	x0, [x22, #16]
    8fcc:	cmp	x0, #0x6
    8fd0:	b.ne	8f44 <PyNumber_FloorDivide@plt+0x4344>  // b.any
    8fd4:	ldrb	w0, [x22, #32]
    8fd8:	and	w2, w0, #0x1c
    8fdc:	and	w3, w0, #0x20
    8fe0:	cmp	w2, #0x4
    8fe4:	b.eq	90c8 <PyNumber_FloorDivide@plt+0x44c8>  // b.none
    8fe8:	cmp	w2, #0x8
    8fec:	b.eq	90f0 <PyNumber_FloorDivide@plt+0x44f0>  // b.none
    8ff0:	cbz	w3, 9118 <PyNumber_FloorDivide@plt+0x4518>
    8ff4:	tst	x0, #0x40
    8ff8:	add	x2, x22, #0x48
    8ffc:	add	x0, x22, #0x30
    9000:	csel	x0, x2, x0, eq  // eq = none
    9004:	ldr	w0, [x0]
    9008:	and	w0, w0, #0x7f
    900c:	cmp	w0, #0x17
    9010:	cset	w0, ls  // ls = plast
    9014:	cbz	w0, 8f44 <PyNumber_FloorDivide@plt+0x4344>
    9018:	mov	x0, x22
    901c:	bl	4960 <PyUnicode_AsLatin1String@plt>
    9020:	mov	x20, x0
    9024:	cbz	x0, 9130 <PyNumber_FloorDivide@plt+0x4530>
    9028:	ldr	x2, [sp, #104]
    902c:	mov	x1, x20
    9030:	mov	x0, x21
    9034:	bl	7f20 <PyNumber_FloorDivide@plt+0x3320>
    9038:	mov	x19, x0
    903c:	ldr	x1, [x20]
    9040:	sub	x0, x1, #0x1
    9044:	str	x0, [x20]
    9048:	cbnz	x0, 8fa4 <PyNumber_FloorDivide@plt+0x43a4>
    904c:	mov	x0, x20
    9050:	bl	4810 <_Py_Dealloc@plt>
    9054:	b	8fa4 <PyNumber_FloorDivide@plt+0x43a4>
    9058:	mov	x0, x22
    905c:	str	x1, [sp, #72]
    9060:	bl	4710 <_PyUnicode_Ready@plt>
    9064:	ldr	x1, [sp, #72]
    9068:	cbz	w0, 8fc8 <PyNumber_FloorDivide@plt+0x43c8>
    906c:	mov	x19, #0x0                   	// #0
    9070:	mov	x0, x19
    9074:	ldp	x29, x30, [sp, #16]
    9078:	ldp	x19, x20, [sp, #32]
    907c:	ldp	x21, x22, [sp, #48]
    9080:	add	sp, sp, #0x70
    9084:	ret
    9088:	ldr	x0, [x19, #32]
    908c:	str	x0, [sp, #104]
    9090:	ldr	x0, [x22, #8]
    9094:	ldr	x0, [x0, #168]
    9098:	tbz	w0, #27, 8fbc <PyNumber_FloorDivide@plt+0x43bc>
    909c:	b	8f38 <PyNumber_FloorDivide@plt+0x4338>
    90a0:	ldrb	w0, [x22, #32]
    90a4:	and	w0, w0, #0x7f
    90a8:	cmp	w0, #0x17
    90ac:	b.hi	8f44 <PyNumber_FloorDivide@plt+0x4344>  // b.pmore
    90b0:	ldr	x2, [sp, #104]
    90b4:	mov	x1, x22
    90b8:	mov	x0, x21
    90bc:	bl	7f20 <PyNumber_FloorDivide@plt+0x3320>
    90c0:	mov	x19, x0
    90c4:	b	8fa4 <PyNumber_FloorDivide@plt+0x43a4>
    90c8:	cbz	w3, 9120 <PyNumber_FloorDivide@plt+0x4520>
    90cc:	tst	x0, #0x40
    90d0:	add	x2, x22, #0x30
    90d4:	add	x0, x22, #0x48
    90d8:	csel	x0, x0, x2, eq  // eq = none
    90dc:	ldrb	w0, [x0]
    90e0:	and	w0, w0, #0x7f
    90e4:	cmp	w0, #0x17
    90e8:	cset	w0, ls  // ls = plast
    90ec:	b	9014 <PyNumber_FloorDivide@plt+0x4414>
    90f0:	cbz	w3, 9128 <PyNumber_FloorDivide@plt+0x4528>
    90f4:	tst	x0, #0x40
    90f8:	add	x2, x22, #0x30
    90fc:	add	x0, x22, #0x48
    9100:	csel	x0, x0, x2, eq  // eq = none
    9104:	ldrh	w0, [x0]
    9108:	and	w0, w0, #0x7f
    910c:	cmp	w0, #0x17
    9110:	cset	w0, ls  // ls = plast
    9114:	b	9014 <PyNumber_FloorDivide@plt+0x4414>
    9118:	ldr	x0, [x22, #72]
    911c:	b	9004 <PyNumber_FloorDivide@plt+0x4404>
    9120:	ldr	x0, [x22, #72]
    9124:	b	90dc <PyNumber_FloorDivide@plt+0x44dc>
    9128:	ldr	x0, [x22, #72]
    912c:	b	9104 <PyNumber_FloorDivide@plt+0x4504>
    9130:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    9134:	ldr	x0, [x0, #4032]
    9138:	ldr	x0, [x0]
    913c:	bl	48a0 <PyErr_ExceptionMatches@plt>
    9140:	cbz	w0, 906c <PyNumber_FloorDivide@plt+0x446c>
    9144:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    9148:	adrp	x1, f000 <PyInit__datetime@@Base+0x118>
    914c:	mov	x19, #0x0                   	// #0
    9150:	add	x1, x1, #0xe38
    9154:	ldr	x0, [x0, #3968]
    9158:	ldr	x0, [x0]
    915c:	bl	4880 <PyErr_SetString@plt>
    9160:	b	8fa4 <PyNumber_FloorDivide@plt+0x43a4>
    9164:	nop
    9168:	sub	sp, sp, #0x50
    916c:	stp	x29, x30, [sp, #16]
    9170:	add	x29, sp, #0x10
    9174:	stp	x19, x20, [sp, #32]
    9178:	mov	x19, x0
    917c:	mov	x0, x1
    9180:	mov	x1, x2
    9184:	ldrb	w2, [x19, #29]
    9188:	ldrb	w3, [x19, #28]
    918c:	ldrb	w7, [x19, #30]
    9190:	lsl	w2, w2, #8
    9194:	ldrb	w4, [x19, #24]
    9198:	orr	w3, w2, w3, lsl #16
    919c:	ldrb	w6, [x19, #25]
    91a0:	ldrb	w5, [x19, #26]
    91a4:	orr	w3, w3, w7
    91a8:	ldrb	w2, [x19, #27]
    91ac:	stp	w6, w5, [sp, #52]
    91b0:	stp	w2, w3, [sp, #60]
    91b4:	cbz	w4, 9270 <PyNumber_FloorDivide@plt+0x4670>
    91b8:	ldr	x8, [x19, #32]
    91bc:	add	x2, sp, #0x44
    91c0:	add	x3, sp, #0x48
    91c4:	stp	x3, x2, [sp]
    91c8:	adrp	x3, 25000 <PyInit__datetime@@Base+0x16118>
    91cc:	ldrb	w9, [x19, #31]
    91d0:	add	x3, x3, #0xab8
    91d4:	adrp	x2, f000 <PyInit__datetime@@Base+0x118>
    91d8:	add	x7, sp, #0x40
    91dc:	add	x6, sp, #0x3c
    91e0:	add	x5, sp, #0x38
    91e4:	add	x4, sp, #0x34
    91e8:	add	x3, x3, #0x2c0
    91ec:	add	x2, x2, #0xeb8
    91f0:	str	w9, [sp, #68]
    91f4:	str	x8, [sp, #72]
    91f8:	bl	4750 <PyArg_ParseTupleAndKeywords@plt>
    91fc:	cbz	w0, 927c <PyNumber_FloorDivide@plt+0x467c>
    9200:	ldr	w0, [sp, #68]
    9204:	cmp	w0, #0x1
    9208:	b.hi	92b0 <PyNumber_FloorDivide@plt+0x46b0>  // b.pmore
    920c:	ldp	w1, w2, [sp, #52]
    9210:	adrp	x0, f000 <PyInit__datetime@@Base+0x118>
    9214:	ldp	w3, w4, [sp, #60]
    9218:	add	x0, x0, #0xed0
    921c:	ldr	x5, [sp, #72]
    9220:	bl	49a0 <Py_BuildValue@plt>
    9224:	mov	x20, x0
    9228:	cbz	x0, 927c <PyNumber_FloorDivide@plt+0x467c>
    922c:	mov	x1, x0
    9230:	mov	x2, #0x0                   	// #0
    9234:	ldr	x0, [x19, #8]
    9238:	bl	8ed8 <PyNumber_FloorDivide@plt+0x42d8>
    923c:	mov	x19, x0
    9240:	cbz	x0, 924c <PyNumber_FloorDivide@plt+0x464c>
    9244:	ldr	w0, [sp, #68]
    9248:	strb	w0, [x19, #31]
    924c:	ldr	x0, [x20]
    9250:	sub	x0, x0, #0x1
    9254:	str	x0, [x20]
    9258:	cbz	x0, 9294 <PyNumber_FloorDivide@plt+0x4694>
    925c:	mov	x0, x19
    9260:	ldp	x29, x30, [sp, #16]
    9264:	ldp	x19, x20, [sp, #32]
    9268:	add	sp, sp, #0x50
    926c:	ret
    9270:	adrp	x8, 24000 <PyInit__datetime@@Base+0x15118>
    9274:	ldr	x8, [x8, #4024]
    9278:	b	91bc <PyNumber_FloorDivide@plt+0x45bc>
    927c:	mov	x19, #0x0                   	// #0
    9280:	mov	x0, x19
    9284:	ldp	x29, x30, [sp, #16]
    9288:	ldp	x19, x20, [sp, #32]
    928c:	add	sp, sp, #0x50
    9290:	ret
    9294:	mov	x0, x20
    9298:	bl	4810 <_Py_Dealloc@plt>
    929c:	mov	x0, x19
    92a0:	ldp	x29, x30, [sp, #16]
    92a4:	ldp	x19, x20, [sp, #32]
    92a8:	add	sp, sp, #0x50
    92ac:	ret
    92b0:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    92b4:	mov	x19, #0x0                   	// #0
    92b8:	adrp	x1, f000 <PyInit__datetime@@Base+0x118>
    92bc:	add	x1, x1, #0xe18
    92c0:	ldr	x0, [x0, #3968]
    92c4:	ldr	x0, [x0]
    92c8:	bl	4880 <PyErr_SetString@plt>
    92cc:	mov	x0, x19
    92d0:	ldp	x29, x30, [sp, #16]
    92d4:	ldp	x19, x20, [sp, #32]
    92d8:	add	sp, sp, #0x50
    92dc:	ret
    92e0:	stp	x29, x30, [sp, #-96]!
    92e4:	mov	x29, sp
    92e8:	stp	x19, x20, [sp, #16]
    92ec:	mov	w20, w6
    92f0:	mov	x19, x7
    92f4:	stp	x21, x22, [sp, #32]
    92f8:	mov	w22, w4
    92fc:	mov	w21, w5
    9300:	stp	x23, x24, [sp, #48]
    9304:	mov	w23, w3
    9308:	mov	w24, w0
    930c:	stp	x25, x26, [sp, #64]
    9310:	mov	w26, w1
    9314:	mov	w25, w2
    9318:	bl	8770 <PyNumber_FloorDivide@plt+0x3b70>
    931c:	tbnz	w0, #31, 93e8 <PyNumber_FloorDivide@plt+0x47e8>
    9320:	ldr	w4, [sp, #96]
    9324:	mov	w3, w20
    9328:	mov	w2, w21
    932c:	mov	w1, w22
    9330:	mov	w0, w23
    9334:	bl	8c50 <PyNumber_FloorDivide@plt+0x4050>
    9338:	tbnz	w0, #31, 93e8 <PyNumber_FloorDivide@plt+0x47e8>
    933c:	mov	x0, x19
    9340:	bl	7ea0 <PyNumber_FloorDivide@plt+0x32a0>
    9344:	tbnz	w0, #31, 93e8 <PyNumber_FloorDivide@plt+0x47e8>
    9348:	stp	x27, x28, [sp, #80]
    934c:	adrp	x28, 24000 <PyInit__datetime@@Base+0x15118>
    9350:	ldr	x0, [sp, #104]
    9354:	ldr	x28, [x28, #4024]
    9358:	ldr	x2, [x0, #304]
    935c:	cmp	x19, x28
    9360:	cset	w27, ne  // ne = any
    9364:	cset	x1, ne  // ne = any
    9368:	blr	x2
    936c:	cbz	x0, 93e4 <PyNumber_FloorDivide@plt+0x47e4>
    9370:	asr	w1, w20, #16
    9374:	rev16	w24, w24
    9378:	rev16	w20, w20
    937c:	mov	x2, #0xffffffffffffffff    	// #-1
    9380:	str	x2, [x0, #16]
    9384:	cmp	x19, x28
    9388:	strb	w27, [x0, #24]
    938c:	sturh	w24, [x0, #25]
    9390:	strb	w26, [x0, #27]
    9394:	strb	w25, [x0, #28]
    9398:	strb	w23, [x0, #29]
    939c:	strb	w22, [x0, #30]
    93a0:	strb	w21, [x0, #31]
    93a4:	strb	w1, [x0, #32]
    93a8:	sturh	w20, [x0, #33]
    93ac:	b.eq	93c0 <PyNumber_FloorDivide@plt+0x47c0>  // b.none
    93b0:	ldr	x1, [x19]
    93b4:	add	x1, x1, #0x1
    93b8:	str	x1, [x19]
    93bc:	str	x19, [x0, #40]
    93c0:	ldrb	w1, [sp, #96]
    93c4:	strb	w1, [x0, #35]
    93c8:	ldp	x19, x20, [sp, #16]
    93cc:	ldp	x21, x22, [sp, #32]
    93d0:	ldp	x23, x24, [sp, #48]
    93d4:	ldp	x25, x26, [sp, #64]
    93d8:	ldp	x27, x28, [sp, #80]
    93dc:	ldp	x29, x30, [sp], #96
    93e0:	ret
    93e4:	ldp	x27, x28, [sp, #80]
    93e8:	mov	x0, #0x0                   	// #0
    93ec:	ldp	x19, x20, [sp, #16]
    93f0:	ldp	x21, x22, [sp, #32]
    93f4:	ldp	x23, x24, [sp, #48]
    93f8:	ldp	x25, x26, [sp, #64]
    93fc:	ldp	x29, x30, [sp], #96
    9400:	ret
    9404:	nop
    9408:	sub	sp, sp, #0x20
    940c:	stp	x29, x30, [sp, #16]
    9410:	add	x29, sp, #0x10
    9414:	ldr	x8, [sp, #32]
    9418:	str	wzr, [sp]
    941c:	str	x8, [sp, #8]
    9420:	bl	92e0 <PyNumber_FloorDivide@plt+0x46e0>
    9424:	ldp	x29, x30, [sp, #16]
    9428:	add	sp, sp, #0x20
    942c:	ret
    9430:	sub	sp, sp, #0xa0
    9434:	stp	x29, x30, [sp, #48]
    9438:	add	x29, sp, #0x30
    943c:	stp	x19, x20, [sp, #64]
    9440:	mov	x19, x1
    9444:	mov	x20, x0
    9448:	stp	x21, x22, [sp, #80]
    944c:	adrp	x21, 24000 <PyInit__datetime@@Base+0x15118>
    9450:	ldr	x3, [x19, #16]
    9454:	stp	wzr, wzr, [sp, #132]
    9458:	ldr	x1, [x21, #4024]
    945c:	stp	wzr, wzr, [sp, #140]
    9460:	str	wzr, [sp, #148]
    9464:	sub	x4, x3, #0x1
    9468:	str	x1, [sp, #152]
    946c:	cmp	x4, #0x1
    9470:	mov	x1, x2
    9474:	b.hi	94a4 <PyNumber_FloorDivide@plt+0x48a4>  // b.pmore
    9478:	cmp	x3, #0x2
    947c:	ldr	x22, [x19, #24]
    9480:	b.eq	9600 <PyNumber_FloorDivide@plt+0x4a00>  // b.none
    9484:	ldr	x0, [x22, #8]
    9488:	ldr	x0, [x0, #168]
    948c:	tbz	w0, #27, 9530 <PyNumber_FloorDivide@plt+0x4930>
    9490:	ldr	x0, [x22, #16]
    9494:	cmp	x0, #0xa
    9498:	b.eq	9618 <PyNumber_FloorDivide@plt+0x4a18>  // b.none
    949c:	ldr	x21, [x21, #4024]
    94a0:	str	x21, [sp, #152]
    94a4:	add	x4, sp, #0x94
    94a8:	add	x5, sp, #0x98
    94ac:	add	x6, sp, #0x90
    94b0:	add	x0, sp, #0x8c
    94b4:	add	x2, sp, #0x88
    94b8:	stp	x2, x0, [sp]
    94bc:	adrp	x3, 25000 <PyInit__datetime@@Base+0x16118>
    94c0:	stp	x6, x5, [sp, #16]
    94c4:	add	x3, x3, #0xab8
    94c8:	adrp	x2, f000 <PyInit__datetime@@Base+0x118>
    94cc:	str	x4, [sp, #32]
    94d0:	add	x3, x3, #0x2f8
    94d4:	add	x7, sp, #0x84
    94d8:	mov	x0, x19
    94dc:	add	x2, x2, #0xf50
    94e0:	add	x6, sp, #0x80
    94e4:	add	x5, sp, #0x7c
    94e8:	add	x4, sp, #0x78
    94ec:	bl	4750 <PyArg_ParseTupleAndKeywords@plt>
    94f0:	cbz	w0, 95e4 <PyNumber_FloorDivide@plt+0x49e4>
    94f4:	ldp	w6, w8, [sp, #144]
    94f8:	str	w8, [sp]
    94fc:	ldp	w0, w1, [sp, #120]
    9500:	str	x20, [sp, #8]
    9504:	ldp	w2, w3, [sp, #128]
    9508:	ldp	w4, w5, [sp, #136]
    950c:	ldr	x7, [sp, #152]
    9510:	bl	92e0 <PyNumber_FloorDivide@plt+0x46e0>
    9514:	mov	x19, x0
    9518:	mov	x0, x19
    951c:	ldp	x29, x30, [sp, #48]
    9520:	ldp	x19, x20, [sp, #64]
    9524:	ldp	x21, x22, [sp, #80]
    9528:	add	sp, sp, #0xa0
    952c:	ret
    9530:	tbz	w0, #28, 949c <PyNumber_FloorDivide@plt+0x489c>
    9534:	ldrsb	w0, [x22, #32]
    9538:	tbz	w0, #31, 95d0 <PyNumber_FloorDivide@plt+0x49d0>
    953c:	ldr	x0, [x22, #16]
    9540:	cmp	x0, #0xa
    9544:	b.ne	949c <PyNumber_FloorDivide@plt+0x489c>  // b.any
    9548:	ldrb	w0, [x22, #32]
    954c:	and	w2, w0, #0x1c
    9550:	and	w3, w0, #0x20
    9554:	cmp	w2, #0x4
    9558:	b.eq	9644 <PyNumber_FloorDivide@plt+0x4a44>  // b.none
    955c:	cmp	w2, #0x8
    9560:	b.eq	9670 <PyNumber_FloorDivide@plt+0x4a70>  // b.none
    9564:	cbz	w3, 969c <PyNumber_FloorDivide@plt+0x4a9c>
    9568:	tst	x0, #0x40
    956c:	add	x2, x22, #0x50
    9570:	add	x0, x22, #0x38
    9574:	csel	x0, x2, x0, eq  // eq = none
    9578:	ldr	w0, [x0]
    957c:	and	w0, w0, #0x7f
    9580:	sub	w0, w0, #0x1
    9584:	cmp	w0, #0xb
    9588:	cset	w0, ls  // ls = plast
    958c:	cbz	w0, 949c <PyNumber_FloorDivide@plt+0x489c>
    9590:	mov	x0, x22
    9594:	bl	4960 <PyUnicode_AsLatin1String@plt>
    9598:	mov	x21, x0
    959c:	cbz	x0, 96c0 <PyNumber_FloorDivide@plt+0x4ac0>
    95a0:	ldr	x2, [sp, #152]
    95a4:	mov	x1, x21
    95a8:	mov	x0, x20
    95ac:	bl	8040 <PyNumber_FloorDivide@plt+0x3440>
    95b0:	mov	x19, x0
    95b4:	ldr	x1, [x21]
    95b8:	sub	x0, x1, #0x1
    95bc:	str	x0, [x21]
    95c0:	cbnz	x0, 9518 <PyNumber_FloorDivide@plt+0x4918>
    95c4:	mov	x0, x21
    95c8:	bl	4810 <_Py_Dealloc@plt>
    95cc:	b	9518 <PyNumber_FloorDivide@plt+0x4918>
    95d0:	mov	x0, x22
    95d4:	str	x1, [sp, #104]
    95d8:	bl	4710 <_PyUnicode_Ready@plt>
    95dc:	ldr	x1, [sp, #104]
    95e0:	cbz	w0, 953c <PyNumber_FloorDivide@plt+0x493c>
    95e4:	mov	x19, #0x0                   	// #0
    95e8:	mov	x0, x19
    95ec:	ldp	x29, x30, [sp, #48]
    95f0:	ldp	x19, x20, [sp, #64]
    95f4:	ldp	x21, x22, [sp, #80]
    95f8:	add	sp, sp, #0xa0
    95fc:	ret
    9600:	ldr	x0, [x19, #32]
    9604:	str	x0, [sp, #152]
    9608:	ldr	x0, [x22, #8]
    960c:	ldr	x0, [x0, #168]
    9610:	tbz	w0, #27, 9530 <PyNumber_FloorDivide@plt+0x4930>
    9614:	b	9490 <PyNumber_FloorDivide@plt+0x4890>
    9618:	ldrb	w0, [x22, #34]
    961c:	and	w0, w0, #0x7f
    9620:	sub	w0, w0, #0x1
    9624:	cmp	w0, #0xb
    9628:	b.hi	949c <PyNumber_FloorDivide@plt+0x489c>  // b.pmore
    962c:	ldr	x2, [sp, #152]
    9630:	mov	x1, x22
    9634:	mov	x0, x20
    9638:	bl	8040 <PyNumber_FloorDivide@plt+0x3440>
    963c:	mov	x19, x0
    9640:	b	9518 <PyNumber_FloorDivide@plt+0x4918>
    9644:	cbz	w3, 96a8 <PyNumber_FloorDivide@plt+0x4aa8>
    9648:	tst	x0, #0x40
    964c:	add	x2, x22, #0x32
    9650:	add	x0, x22, #0x4a
    9654:	csel	x0, x0, x2, eq  // eq = none
    9658:	ldrb	w0, [x0]
    965c:	and	w0, w0, #0x7f
    9660:	sub	w0, w0, #0x1
    9664:	cmp	w0, #0xb
    9668:	cset	w0, ls  // ls = plast
    966c:	b	958c <PyNumber_FloorDivide@plt+0x498c>
    9670:	cbz	w3, 96b4 <PyNumber_FloorDivide@plt+0x4ab4>
    9674:	tst	x0, #0x40
    9678:	add	x2, x22, #0x34
    967c:	add	x0, x22, #0x4c
    9680:	csel	x0, x0, x2, eq  // eq = none
    9684:	ldrh	w0, [x0]
    9688:	and	w0, w0, #0x7f
    968c:	sub	w0, w0, #0x1
    9690:	cmp	w0, #0xb
    9694:	cset	w0, ls  // ls = plast
    9698:	b	958c <PyNumber_FloorDivide@plt+0x498c>
    969c:	ldr	x0, [x22, #72]
    96a0:	add	x0, x0, #0x8
    96a4:	b	9578 <PyNumber_FloorDivide@plt+0x4978>
    96a8:	ldr	x0, [x22, #72]
    96ac:	add	x0, x0, #0x2
    96b0:	b	9658 <PyNumber_FloorDivide@plt+0x4a58>
    96b4:	ldr	x0, [x22, #72]
    96b8:	add	x0, x0, #0x4
    96bc:	b	9684 <PyNumber_FloorDivide@plt+0x4a84>
    96c0:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    96c4:	ldr	x0, [x0, #4032]
    96c8:	ldr	x0, [x0]
    96cc:	bl	48a0 <PyErr_ExceptionMatches@plt>
    96d0:	cbz	w0, 95e4 <PyNumber_FloorDivide@plt+0x49e4>
    96d4:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    96d8:	adrp	x1, f000 <PyInit__datetime@@Base+0x118>
    96dc:	mov	x19, #0x0                   	// #0
    96e0:	add	x1, x1, #0xed8
    96e4:	ldr	x0, [x0, #3968]
    96e8:	ldr	x0, [x0]
    96ec:	bl	4880 <PyErr_SetString@plt>
    96f0:	b	9518 <PyNumber_FloorDivide@plt+0x4918>
    96f4:	nop
    96f8:	sub	sp, sp, #0x80
    96fc:	stp	x29, x30, [sp, #48]
    9700:	add	x29, sp, #0x30
    9704:	stp	x19, x20, [sp, #64]
    9708:	mov	x19, x0
    970c:	mov	x0, x1
    9710:	mov	x1, x2
    9714:	ldrb	w2, [x19, #33]
    9718:	ldrb	w3, [x19, #32]
    971c:	ldrb	w6, [x19, #34]
    9720:	lsl	w2, w2, #8
    9724:	ldurh	w4, [x19, #25]
    9728:	orr	w3, w2, w3, lsl #16
    972c:	ldrb	w5, [x19, #24]
    9730:	orr	w3, w3, w6
    9734:	ldrb	w9, [x19, #27]
    9738:	ldrb	w8, [x19, #28]
    973c:	rev16	w4, w4
    9740:	ldrb	w7, [x19, #29]
    9744:	and	w4, w4, #0xffff
    9748:	ldrb	w6, [x19, #30]
    974c:	ldrb	w2, [x19, #31]
    9750:	stp	w4, w9, [sp, #88]
    9754:	stp	w8, w7, [sp, #96]
    9758:	stp	w6, w2, [sp, #104]
    975c:	str	w3, [sp, #112]
    9760:	cbz	w5, 983c <PyNumber_FloorDivide@plt+0x4c3c>
    9764:	ldr	x8, [x19, #40]
    9768:	add	x4, sp, #0x74
    976c:	add	x5, sp, #0x78
    9770:	add	x2, sp, #0x70
    9774:	add	x6, sp, #0x6c
    9778:	add	x3, sp, #0x68
    977c:	stp	x3, x6, [sp]
    9780:	adrp	x3, 25000 <PyInit__datetime@@Base+0x16118>
    9784:	add	x3, x3, #0xab8
    9788:	stp	x2, x5, [sp, #16]
    978c:	add	x7, sp, #0x64
    9790:	adrp	x2, f000 <PyInit__datetime@@Base+0x118>
    9794:	str	x4, [sp, #32]
    9798:	add	x3, x3, #0x2f8
    979c:	add	x2, x2, #0xf60
    97a0:	add	x6, sp, #0x60
    97a4:	ldrb	w9, [x19, #35]
    97a8:	add	x5, sp, #0x5c
    97ac:	add	x4, sp, #0x58
    97b0:	str	w9, [sp, #116]
    97b4:	str	x8, [sp, #120]
    97b8:	bl	4750 <PyArg_ParseTupleAndKeywords@plt>
    97bc:	cbz	w0, 9848 <PyNumber_FloorDivide@plt+0x4c48>
    97c0:	ldr	w0, [sp, #116]
    97c4:	cmp	w0, #0x1
    97c8:	b.hi	987c <PyNumber_FloorDivide@plt+0x4c7c>  // b.pmore
    97cc:	ldp	w1, w2, [sp, #88]
    97d0:	adrp	x0, f000 <PyInit__datetime@@Base+0x118>
    97d4:	ldp	w3, w4, [sp, #96]
    97d8:	add	x0, x0, #0xf78
    97dc:	ldp	w5, w6, [sp, #104]
    97e0:	ldr	w7, [sp, #112]
    97e4:	ldr	x8, [sp, #120]
    97e8:	str	x8, [sp]
    97ec:	bl	49a0 <Py_BuildValue@plt>
    97f0:	mov	x20, x0
    97f4:	cbz	x0, 9848 <PyNumber_FloorDivide@plt+0x4c48>
    97f8:	mov	x1, x0
    97fc:	mov	x2, #0x0                   	// #0
    9800:	ldr	x0, [x19, #8]
    9804:	bl	9430 <PyNumber_FloorDivide@plt+0x4830>
    9808:	mov	x19, x0
    980c:	cbz	x0, 9818 <PyNumber_FloorDivide@plt+0x4c18>
    9810:	ldr	w0, [sp, #116]
    9814:	strb	w0, [x19, #35]
    9818:	ldr	x0, [x20]
    981c:	sub	x0, x0, #0x1
    9820:	str	x0, [x20]
    9824:	cbz	x0, 9860 <PyNumber_FloorDivide@plt+0x4c60>
    9828:	mov	x0, x19
    982c:	ldp	x29, x30, [sp, #48]
    9830:	ldp	x19, x20, [sp, #64]
    9834:	add	sp, sp, #0x80
    9838:	ret
    983c:	adrp	x8, 24000 <PyInit__datetime@@Base+0x15118>
    9840:	ldr	x8, [x8, #4024]
    9844:	b	9768 <PyNumber_FloorDivide@plt+0x4b68>
    9848:	mov	x19, #0x0                   	// #0
    984c:	mov	x0, x19
    9850:	ldp	x29, x30, [sp, #48]
    9854:	ldp	x19, x20, [sp, #64]
    9858:	add	sp, sp, #0x80
    985c:	ret
    9860:	mov	x0, x20
    9864:	bl	4810 <_Py_Dealloc@plt>
    9868:	mov	x0, x19
    986c:	ldp	x29, x30, [sp, #48]
    9870:	ldp	x19, x20, [sp, #64]
    9874:	add	sp, sp, #0x80
    9878:	ret
    987c:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    9880:	mov	x19, #0x0                   	// #0
    9884:	adrp	x1, f000 <PyInit__datetime@@Base+0x118>
    9888:	add	x1, x1, #0xe18
    988c:	ldr	x0, [x0, #3968]
    9890:	ldr	x0, [x0]
    9894:	bl	4880 <PyErr_SetString@plt>
    9898:	mov	x0, x19
    989c:	ldp	x29, x30, [sp, #48]
    98a0:	ldp	x19, x20, [sp, #64]
    98a4:	add	sp, sp, #0x80
    98a8:	ret
    98ac:	nop
    98b0:	ldr	x16, [sp, #8]
    98b4:	adrp	x8, 25000 <PyInit__datetime@@Base+0x16118>
    98b8:	add	x8, x8, #0x298
    98bc:	mov	w15, w6
    98c0:	add	x8, x8, #0x1a0
    98c4:	mov	x13, x7
    98c8:	cmp	x16, x8
    98cc:	b.eq	9900 <PyNumber_FloorDivide@plt+0x4d00>  // b.none
    98d0:	mov	w7, w5
    98d4:	mov	w6, w4
    98d8:	mov	w5, w3
    98dc:	mov	w4, w2
    98e0:	mov	w3, w1
    98e4:	mov	w2, w0
    98e8:	adrp	x1, f000 <PyInit__datetime@@Base+0x118>
    98ec:	mov	x0, x16
    98f0:	add	x1, x1, #0xf78
    98f4:	str	w15, [sp]
    98f8:	str	x13, [sp, #8]
    98fc:	b	4950 <PyObject_CallFunction@plt>
    9900:	b	92e0 <PyNumber_FloorDivide@plt+0x46e0>
    9904:	nop
    9908:	sub	sp, sp, #0xc0
    990c:	stp	x29, x30, [sp, #16]
    9910:	add	x29, sp, #0x10
    9914:	stp	x19, x20, [sp, #32]
    9918:	mov	x20, x1
    991c:	add	x1, sp, #0x88
    9920:	stp	x21, x22, [sp, #48]
    9924:	mov	x21, x0
    9928:	mov	x22, x4
    992c:	stp	x23, x24, [sp, #64]
    9930:	mov	x0, x2
    9934:	mov	x23, x2
    9938:	mov	w24, w3
    993c:	blr	x20
    9940:	cbnz	w0, 99bc <PyNumber_FloorDivide@plt+0x4dbc>
    9944:	ldp	w5, w4, [sp, #136]
    9948:	adrp	x9, 24000 <PyInit__datetime@@Base+0x15118>
    994c:	adrp	x8, 24000 <PyInit__datetime@@Base+0x15118>
    9950:	mov	w19, w0
    9954:	ldr	x9, [x9, #4024]
    9958:	mov	w0, #0x3b                  	// #59
    995c:	ldr	x8, [x8, #4064]
    9960:	cmp	w5, w0
    9964:	csel	w5, w5, w0, le
    9968:	ldr	w1, [sp, #152]
    996c:	ldr	w0, [sp, #156]
    9970:	cmp	x22, x9
    9974:	ccmp	x20, x8, #0x0, eq  // eq = none
    9978:	add	w1, w1, #0x1
    997c:	ldp	w3, w2, [sp, #144]
    9980:	add	w20, w0, #0x76c
    9984:	b.eq	99d8 <PyNumber_FloorDivide@plt+0x4dd8>  // b.none
    9988:	str	w19, [sp]
    998c:	mov	x7, x22
    9990:	str	x21, [sp, #8]
    9994:	mov	w6, w24
    9998:	mov	w0, w20
    999c:	bl	98b0 <PyNumber_FloorDivide@plt+0x4cb0>
    99a0:	ldp	x29, x30, [sp, #16]
    99a4:	ldp	x19, x20, [sp, #32]
    99a8:	ldp	x21, x22, [sp, #48]
    99ac:	ldp	x23, x24, [sp, #64]
    99b0:	add	sp, sp, #0xc0
    99b4:	ret
    99b8:	ldr	x25, [sp, #80]
    99bc:	mov	x0, #0x0                   	// #0
    99c0:	ldp	x29, x30, [sp, #16]
    99c4:	ldp	x19, x20, [sp, #32]
    99c8:	ldp	x21, x22, [sp, #48]
    99cc:	ldp	x23, x24, [sp, #64]
    99d0:	add	sp, sp, #0xc0
    99d4:	ret
    99d8:	mov	w0, w20
    99dc:	str	x25, [sp, #80]
    99e0:	stp	w1, w2, [sp, #108]
    99e4:	stp	w3, w4, [sp, #116]
    99e8:	str	w5, [sp, #124]
    99ec:	bl	8160 <PyNumber_FloorDivide@plt+0x3560>
    99f0:	mov	x25, x0
    99f4:	mov	x0, #0xf700                	// #63232
    99f8:	movk	x0, #0x7791, lsl #16
    99fc:	movk	x0, #0xe, lsl #32
    9a00:	add	x0, x23, x0
    9a04:	bl	81e0 <PyNumber_FloorDivide@plt+0x35e0>
    9a08:	cmn	x0, #0x1
    9a0c:	b.eq	99b8 <PyNumber_FloorDivide@plt+0x4db8>  // b.none
    9a10:	sub	x6, x25, #0x15, lsl #12
    9a14:	ldr	w5, [sp, #124]
    9a18:	sub	x6, x6, #0x180
    9a1c:	ldp	w1, w2, [sp, #108]
    9a20:	subs	x0, x6, x0
    9a24:	ldp	w3, w4, [sp, #116]
    9a28:	b.mi	9a34 <PyNumber_FloorDivide@plt+0x4e34>  // b.first
    9a2c:	ldr	x25, [sp, #80]
    9a30:	b	9988 <PyNumber_FloorDivide@plt+0x4d88>
    9a34:	mov	x8, #0x4880                	// #18560
    9a38:	stp	w1, w2, [sp, #108]
    9a3c:	movk	x8, #0x7793, lsl #16
    9a40:	stp	w3, w4, [sp, #116]
    9a44:	movk	x8, #0xe, lsl #32
    9a48:	add	x8, x23, x8
    9a4c:	add	x0, x8, x0
    9a50:	str	w5, [sp, #124]
    9a54:	bl	81e0 <PyNumber_FloorDivide@plt+0x35e0>
    9a58:	cmn	x0, #0x1
    9a5c:	b.eq	99b8 <PyNumber_FloorDivide@plt+0x4db8>  // b.none
    9a60:	cmp	x25, x0
    9a64:	ldr	w5, [sp, #124]
    9a68:	ldp	w1, w2, [sp, #108]
    9a6c:	cset	w19, eq  // eq = none
    9a70:	ldp	w3, w4, [sp, #116]
    9a74:	ldr	x25, [sp, #80]
    9a78:	b	9988 <PyNumber_FloorDivide@plt+0x4d88>
    9a7c:	nop
    9a80:	stp	x29, x30, [sp, #-64]!
    9a84:	mov	x29, sp
    9a88:	stp	x19, x20, [sp, #16]
    9a8c:	mov	x19, x0
    9a90:	mov	x20, x1
    9a94:	mov	x0, x2
    9a98:	add	x1, sp, #0x30
    9a9c:	add	x2, sp, #0x38
    9aa0:	str	x21, [sp, #32]
    9aa4:	mov	x21, x3
    9aa8:	mov	w3, #0x2                   	// #2
    9aac:	bl	47b0 <_PyTime_ObjectToTimeval@plt>
    9ab0:	cmn	w0, #0x1
    9ab4:	b.eq	9ae0 <PyNumber_FloorDivide@plt+0x4ee0>  // b.none
    9ab8:	ldr	w3, [sp, #56]
    9abc:	mov	x4, x21
    9ac0:	ldr	x2, [sp, #48]
    9ac4:	mov	x1, x20
    9ac8:	mov	x0, x19
    9acc:	bl	9908 <PyNumber_FloorDivide@plt+0x4d08>
    9ad0:	ldp	x19, x20, [sp, #16]
    9ad4:	ldr	x21, [sp, #32]
    9ad8:	ldp	x29, x30, [sp], #64
    9adc:	ret
    9ae0:	mov	x0, #0x0                   	// #0
    9ae4:	ldp	x19, x20, [sp, #16]
    9ae8:	ldr	x21, [sp, #32]
    9aec:	ldp	x29, x30, [sp], #64
    9af0:	ret
    9af4:	nop
    9af8:	stp	x29, x30, [sp, #-64]!
    9afc:	mov	x29, sp
    9b00:	stp	x19, x20, [sp, #16]
    9b04:	adrp	x19, 24000 <PyInit__datetime@@Base+0x15118>
    9b08:	adrp	x20, 25000 <PyInit__datetime@@Base+0x16118>
    9b0c:	ldr	x19, [x19, #4024]
    9b10:	add	x20, x20, #0xab8
    9b14:	add	x3, x20, #0x348
    9b18:	add	x5, sp, #0x38
    9b1c:	add	x4, sp, #0x30
    9b20:	str	x21, [sp, #32]
    9b24:	mov	x21, x0
    9b28:	mov	x0, x1
    9b2c:	mov	x1, x2
    9b30:	adrp	x2, f000 <PyInit__datetime@@Base+0x118>
    9b34:	add	x2, x2, #0xf88
    9b38:	str	x19, [sp, #56]
    9b3c:	bl	4750 <PyArg_ParseTupleAndKeywords@plt>
    9b40:	cbz	w0, 9bac <PyNumber_FloorDivide@plt+0x4fac>
    9b44:	ldr	x0, [sp, #56]
    9b48:	bl	7ea0 <PyNumber_FloorDivide@plt+0x32a0>
    9b4c:	tbnz	w0, #31, 9bac <PyNumber_FloorDivide@plt+0x4fac>
    9b50:	ldp	x2, x3, [sp, #48]
    9b54:	adrp	x4, 24000 <PyInit__datetime@@Base+0x15118>
    9b58:	adrp	x1, 24000 <PyInit__datetime@@Base+0x15118>
    9b5c:	mov	x0, x21
    9b60:	ldr	x4, [x4, #4016]
    9b64:	ldr	x1, [x1, #4064]
    9b68:	cmp	x3, x19
    9b6c:	csel	x1, x1, x4, eq  // eq = none
    9b70:	bl	9a80 <PyNumber_FloorDivide@plt+0x4e80>
    9b74:	cbz	x0, 9bac <PyNumber_FloorDivide@plt+0x4fac>
    9b78:	ldr	x2, [sp, #56]
    9b7c:	cmp	x2, x19
    9b80:	b.eq	9bb0 <PyNumber_FloorDivide@plt+0x4fb0>  // b.none
    9b84:	mov	x3, x0
    9b88:	add	x1, x20, #0x360
    9b8c:	mov	x0, x2
    9b90:	adrp	x2, f000 <PyInit__datetime@@Base+0x118>
    9b94:	add	x2, x2, #0xfa0
    9b98:	bl	4a60 <_PyObject_CallMethodId@plt>
    9b9c:	ldp	x19, x20, [sp, #16]
    9ba0:	ldr	x21, [sp, #32]
    9ba4:	ldp	x29, x30, [sp], #64
    9ba8:	ret
    9bac:	mov	x0, #0x0                   	// #0
    9bb0:	ldp	x19, x20, [sp, #16]
    9bb4:	ldr	x21, [sp, #32]
    9bb8:	ldp	x29, x30, [sp], #64
    9bbc:	ret
    9bc0:	stp	x29, x30, [sp, #-48]!
    9bc4:	mov	x29, sp
    9bc8:	add	x2, sp, #0x28
    9bcc:	str	x19, [sp, #16]
    9bd0:	mov	x19, x0
    9bd4:	mov	x0, x1
    9bd8:	adrp	x1, f000 <PyInit__datetime@@Base+0x118>
    9bdc:	add	x1, x1, #0xfa8
    9be0:	bl	4a30 <PyArg_ParseTuple@plt>
    9be4:	cbz	w0, 9c10 <PyNumber_FloorDivide@plt+0x5010>
    9be8:	adrp	x3, 24000 <PyInit__datetime@@Base+0x15118>
    9bec:	adrp	x1, 24000 <PyInit__datetime@@Base+0x15118>
    9bf0:	ldr	x2, [sp, #40]
    9bf4:	mov	x0, x19
    9bf8:	ldr	x3, [x3, #4024]
    9bfc:	ldr	x1, [x1, #4016]
    9c00:	bl	9a80 <PyNumber_FloorDivide@plt+0x4e80>
    9c04:	ldr	x19, [sp, #16]
    9c08:	ldp	x29, x30, [sp], #48
    9c0c:	ret
    9c10:	mov	x0, #0x0                   	// #0
    9c14:	ldr	x19, [sp, #16]
    9c18:	ldp	x29, x30, [sp], #48
    9c1c:	ret
    9c20:	stp	x29, x30, [sp, #-64]!
    9c24:	mov	x29, sp
    9c28:	stp	x19, x20, [sp, #16]
    9c2c:	mov	x20, x1
    9c30:	mov	x19, x0
    9c34:	str	x21, [sp, #32]
    9c38:	mov	x21, x2
    9c3c:	bl	47f0 <_PyTime_GetSystemClock@plt>
    9c40:	add	x2, sp, #0x34
    9c44:	add	x1, sp, #0x38
    9c48:	mov	w3, #0x0                   	// #0
    9c4c:	bl	4840 <_PyTime_AsTimevalTime_t@plt>
    9c50:	tbnz	w0, #31, 9c7c <PyNumber_FloorDivide@plt+0x507c>
    9c54:	ldr	w3, [sp, #52]
    9c58:	mov	x4, x21
    9c5c:	ldr	x2, [sp, #56]
    9c60:	mov	x1, x20
    9c64:	mov	x0, x19
    9c68:	bl	9908 <PyNumber_FloorDivide@plt+0x4d08>
    9c6c:	ldp	x19, x20, [sp, #16]
    9c70:	ldr	x21, [sp, #32]
    9c74:	ldp	x29, x30, [sp], #64
    9c78:	ret
    9c7c:	mov	x0, #0x0                   	// #0
    9c80:	ldp	x19, x20, [sp, #16]
    9c84:	ldr	x21, [sp, #32]
    9c88:	ldp	x29, x30, [sp], #64
    9c8c:	ret
    9c90:	adrp	x2, 24000 <PyInit__datetime@@Base+0x15118>
    9c94:	adrp	x1, 24000 <PyInit__datetime@@Base+0x15118>
    9c98:	ldr	x2, [x2, #4024]
    9c9c:	ldr	x1, [x1, #4016]
    9ca0:	b	9c20 <PyNumber_FloorDivide@plt+0x5020>
    9ca4:	nop
    9ca8:	sub	sp, sp, #0x50
    9cac:	stp	x29, x30, [sp, #16]
    9cb0:	add	x29, sp, #0x10
    9cb4:	stp	x19, x20, [sp, #32]
    9cb8:	mov	x19, x0
    9cbc:	mov	x0, x1
    9cc0:	str	x21, [sp, #48]
    9cc4:	mov	x1, x2
    9cc8:	mov	x2, x3
    9ccc:	cbz	x3, 9d78 <PyNumber_FloorDivide@plt+0x5178>
    9cd0:	ldr	x20, [x3, #16]
    9cd4:	add	x20, x1, x20
    9cd8:	add	x3, sp, #0x48
    9cdc:	str	x3, [sp]
    9ce0:	adrp	x4, 25000 <PyInit__datetime@@Base+0x16118>
    9ce4:	add	x4, x4, #0xab8
    9ce8:	mov	x3, x2
    9cec:	add	x4, x4, #0x378
    9cf0:	mov	w7, #0x0                   	// #0
    9cf4:	mov	w6, #0x1                   	// #1
    9cf8:	mov	w5, #0x0                   	// #0
    9cfc:	mov	x2, #0x0                   	// #0
    9d00:	bl	4870 <_PyArg_UnpackKeywords@plt>
    9d04:	cbz	x0, 9df4 <PyNumber_FloorDivide@plt+0x51f4>
    9d08:	cbz	x20, 9d90 <PyNumber_FloorDivide@plt+0x5190>
    9d0c:	ldr	x20, [x0]
    9d10:	mov	x0, x20
    9d14:	bl	7ea0 <PyNumber_FloorDivide@plt+0x32a0>
    9d18:	tbnz	w0, #31, 9df4 <PyNumber_FloorDivide@plt+0x51f4>
    9d1c:	adrp	x21, 24000 <PyInit__datetime@@Base+0x15118>
    9d20:	ldr	x0, [x21, #4024]
    9d24:	cmp	x20, x0
    9d28:	b.eq	9da0 <PyNumber_FloorDivide@plt+0x51a0>  // b.none
    9d2c:	adrp	x1, 24000 <PyInit__datetime@@Base+0x15118>
    9d30:	mov	x0, x19
    9d34:	mov	x2, x20
    9d38:	ldr	x1, [x1, #4016]
    9d3c:	bl	9c20 <PyNumber_FloorDivide@plt+0x5020>
    9d40:	mov	x3, x0
    9d44:	cbz	x0, 9df4 <PyNumber_FloorDivide@plt+0x51f4>
    9d48:	adrp	x1, 25000 <PyInit__datetime@@Base+0x16118>
    9d4c:	add	x1, x1, #0xab8
    9d50:	mov	x0, x20
    9d54:	add	x1, x1, #0x360
    9d58:	adrp	x2, f000 <PyInit__datetime@@Base+0x118>
    9d5c:	add	x2, x2, #0xfa0
    9d60:	bl	4a60 <_PyObject_CallMethodId@plt>
    9d64:	ldp	x29, x30, [sp, #16]
    9d68:	ldp	x19, x20, [sp, #32]
    9d6c:	ldr	x21, [sp, #48]
    9d70:	add	sp, sp, #0x50
    9d74:	ret
    9d78:	tbnz	x1, #63, 9dc8 <PyNumber_FloorDivide@plt+0x51c8>
    9d7c:	cmp	x0, #0x0
    9d80:	mov	x20, x1
    9d84:	ccmp	x1, #0x1, #0x0, ne  // ne = any
    9d88:	b.gt	9cd8 <PyNumber_FloorDivide@plt+0x50d8>
    9d8c:	cbnz	x20, 9d0c <PyNumber_FloorDivide@plt+0x510c>
    9d90:	adrp	x21, 24000 <PyInit__datetime@@Base+0x15118>
    9d94:	ldr	x0, [x21, #4024]
    9d98:	bl	7ea0 <PyNumber_FloorDivide@plt+0x32a0>
    9d9c:	tbnz	w0, #31, 9df4 <PyNumber_FloorDivide@plt+0x51f4>
    9da0:	adrp	x1, 24000 <PyInit__datetime@@Base+0x15118>
    9da4:	mov	x0, x19
    9da8:	ldr	x2, [x21, #4024]
    9dac:	ldr	x1, [x1, #4064]
    9db0:	bl	9c20 <PyNumber_FloorDivide@plt+0x5020>
    9db4:	ldp	x29, x30, [sp, #16]
    9db8:	ldp	x19, x20, [sp, #32]
    9dbc:	ldr	x21, [sp, #48]
    9dc0:	add	sp, sp, #0x50
    9dc4:	ret
    9dc8:	add	x2, sp, #0x48
    9dcc:	str	x2, [sp]
    9dd0:	adrp	x4, 25000 <PyInit__datetime@@Base+0x16118>
    9dd4:	add	x4, x4, #0xab8
    9dd8:	add	x4, x4, #0x378
    9ddc:	mov	w7, #0x0                   	// #0
    9de0:	mov	w6, #0x1                   	// #1
    9de4:	mov	w5, #0x0                   	// #0
    9de8:	mov	x2, #0x0                   	// #0
    9dec:	bl	4870 <_PyArg_UnpackKeywords@plt>
    9df0:	cbnz	x0, 9d0c <PyNumber_FloorDivide@plt+0x510c>
    9df4:	mov	x0, #0x0                   	// #0
    9df8:	ldp	x29, x30, [sp, #16]
    9dfc:	ldp	x19, x20, [sp, #32]
    9e00:	ldr	x21, [sp, #48]
    9e04:	add	sp, sp, #0x50
    9e08:	ret
    9e0c:	nop
    9e10:	sub	sp, sp, #0x60
    9e14:	mov	w4, #0x423f                	// #16959
    9e18:	movk	w4, #0xf, lsl #16
    9e1c:	stp	x29, x30, [sp, #16]
    9e20:	add	x29, sp, #0x10
    9e24:	ldp	w7, w5, [x1, #24]
    9e28:	stp	x19, x20, [sp, #32]
    9e2c:	mov	x20, x0
    9e30:	stp	x21, x22, [sp, #48]
    9e34:	str	x23, [sp, #64]
    9e38:	ldrb	w21, [x0, #33]
    9e3c:	ldrb	w6, [x0, #32]
    9e40:	ldrb	w3, [x0, #28]
    9e44:	lsl	w21, w21, #8
    9e48:	ldrb	w0, [x0, #34]
    9e4c:	orr	w6, w21, w6, lsl #16
    9e50:	ldr	w21, [x1, #32]
    9e54:	orr	w6, w6, w0
    9e58:	ldurh	w0, [x20, #25]
    9e5c:	ldrb	w19, [x20, #31]
    9e60:	madd	w3, w2, w7, w3
    9e64:	ldrb	w1, [x20, #27]
    9e68:	rev16	w0, w0
    9e6c:	madd	w21, w2, w21, w6
    9e70:	and	w0, w0, #0xffff
    9e74:	stp	w0, w1, [sp, #84]
    9e78:	str	w3, [sp, #92]
    9e7c:	madd	w19, w2, w5, w19
    9e80:	ldrb	w23, [x20, #29]
    9e84:	cmp	w21, w4
    9e88:	ldrb	w22, [x20, #30]
    9e8c:	b.ls	9eb8 <PyNumber_FloorDivide@plt+0x52b8>  // b.plast
    9e90:	mov	w1, #0xde83                	// #56963
    9e94:	mov	w0, #0x4240                	// #16960
    9e98:	movk	w1, #0x431b, lsl #16
    9e9c:	movk	w0, #0xf, lsl #16
    9ea0:	smull	x1, w21, w1
    9ea4:	asr	x1, x1, #50
    9ea8:	sub	w1, w1, w21, asr #31
    9eac:	msub	w21, w1, w0, w21
    9eb0:	tbnz	w21, #31, a018 <PyNumber_FloorDivide@plt+0x5418>
    9eb4:	add	w19, w19, w1
    9eb8:	cmp	w19, #0x3b
    9ebc:	b.ls	9fd4 <PyNumber_FloorDivide@plt+0x53d4>  // b.plast
    9ec0:	mov	w0, #0x8889                	// #34953
    9ec4:	movk	w0, #0x8888, lsl #16
    9ec8:	smull	x0, w19, w0
    9ecc:	lsr	x0, x0, #32
    9ed0:	add	w0, w19, w0
    9ed4:	asr	w0, w0, #5
    9ed8:	sub	w0, w0, w19, asr #31
    9edc:	lsl	w1, w0, #4
    9ee0:	sub	w1, w1, w0
    9ee4:	subs	w19, w19, w1, lsl #2
    9ee8:	b.mi	a000 <PyNumber_FloorDivide@plt+0x5400>  // b.first
    9eec:	add	w22, w22, w0
    9ef0:	cmp	w22, #0x3b
    9ef4:	b.ls	9fdc <PyNumber_FloorDivide@plt+0x53dc>  // b.plast
    9ef8:	mov	w1, #0x8889                	// #34953
    9efc:	movk	w1, #0x8888, lsl #16
    9f00:	smull	x1, w22, w1
    9f04:	lsr	x1, x1, #32
    9f08:	add	w1, w22, w1
    9f0c:	asr	w1, w1, #5
    9f10:	sub	w1, w1, w22, asr #31
    9f14:	lsl	w0, w1, #4
    9f18:	sub	w0, w0, w1
    9f1c:	subs	w22, w22, w0, lsl #2
    9f20:	b.pl	9f2c <PyNumber_FloorDivide@plt+0x532c>  // b.nfrst
    9f24:	sub	w1, w1, #0x1
    9f28:	add	w22, w22, #0x3c
    9f2c:	add	w23, w23, w1
    9f30:	cmp	w23, #0x17
    9f34:	b.ls	9f68 <PyNumber_FloorDivide@plt+0x5368>  // b.plast
    9f38:	mov	w0, #0xaaab                	// #43691
    9f3c:	movk	w0, #0x2aaa, lsl #16
    9f40:	smull	x0, w23, w0
    9f44:	asr	x0, x0, #34
    9f48:	sub	w0, w0, w23, asr #31
    9f4c:	add	w1, w0, w0, lsl #1
    9f50:	subs	w23, w23, w1, lsl #3
    9f54:	b.pl	9f60 <PyNumber_FloorDivide@plt+0x5360>  // b.nfrst
    9f58:	sub	w0, w0, #0x1
    9f5c:	add	w23, w23, #0x18
    9f60:	add	w0, w3, w0
    9f64:	str	w0, [sp, #92]
    9f68:	add	x2, sp, #0x5c
    9f6c:	add	x1, sp, #0x58
    9f70:	add	x0, sp, #0x54
    9f74:	bl	56a0 <PyNumber_FloorDivide@plt+0xaa0>
    9f78:	tbnz	w0, #31, a050 <PyNumber_FloorDivide@plt+0x5450>
    9f7c:	ldrb	w3, [x20, #24]
    9f80:	ldp	w0, w1, [sp, #84]
    9f84:	ldr	w2, [sp, #92]
    9f88:	cbnz	w3, 9fcc <PyNumber_FloorDivide@plt+0x53cc>
    9f8c:	adrp	x7, 24000 <PyInit__datetime@@Base+0x15118>
    9f90:	ldr	x7, [x7, #4024]
    9f94:	str	wzr, [sp]
    9f98:	mov	w6, w21
    9f9c:	mov	w5, w19
    9fa0:	ldr	x3, [x20, #8]
    9fa4:	str	x3, [sp, #8]
    9fa8:	mov	w4, w22
    9fac:	mov	w3, w23
    9fb0:	bl	98b0 <PyNumber_FloorDivide@plt+0x4cb0>
    9fb4:	ldp	x29, x30, [sp, #16]
    9fb8:	ldp	x19, x20, [sp, #32]
    9fbc:	ldp	x21, x22, [sp, #48]
    9fc0:	ldr	x23, [sp, #64]
    9fc4:	add	sp, sp, #0x60
    9fc8:	ret
    9fcc:	ldr	x7, [x20, #40]
    9fd0:	b	9f94 <PyNumber_FloorDivide@plt+0x5394>
    9fd4:	cmp	w22, #0x3b
    9fd8:	b.gt	a024 <PyNumber_FloorDivide@plt+0x5424>
    9fdc:	cmp	w23, #0x17
    9fe0:	b.le	9f68 <PyNumber_FloorDivide@plt+0x5368>
    9fe4:	mov	w1, #0xaaab                	// #43691
    9fe8:	movk	w1, #0xaaaa, lsl #16
    9fec:	umull	x1, w23, w1
    9ff0:	lsr	x0, x1, #36
    9ff4:	add	w1, w0, w0, lsl #1
    9ff8:	sub	w23, w23, w1, lsl #3
    9ffc:	b	9f60 <PyNumber_FloorDivide@plt+0x5360>
    a000:	sub	w0, w0, #0x1
    a004:	add	w19, w19, #0x3c
    a008:	add	w22, w22, w0
    a00c:	cmp	w22, #0x3b
    a010:	b.ls	9fdc <PyNumber_FloorDivide@plt+0x53dc>  // b.plast
    a014:	b	9ef8 <PyNumber_FloorDivide@plt+0x52f8>
    a018:	sub	w1, w1, #0x1
    a01c:	add	w21, w21, w0
    a020:	b	9eb4 <PyNumber_FloorDivide@plt+0x52b4>
    a024:	mov	w0, #0x8889                	// #34953
    a028:	movk	w0, #0x8888, lsl #16
    a02c:	umull	x0, w22, w0
    a030:	lsr	x0, x0, #37
    a034:	add	w23, w23, w0
    a038:	lsl	w1, w0, #4
    a03c:	cmp	w23, #0x17
    a040:	sub	w0, w1, w0
    a044:	sub	w22, w22, w0, lsl #2
    a048:	b.gt	9fe4 <PyNumber_FloorDivide@plt+0x53e4>
    a04c:	b	9f68 <PyNumber_FloorDivide@plt+0x5368>
    a050:	mov	x0, #0x0                   	// #0
    a054:	ldp	x29, x30, [sp, #16]
    a058:	ldp	x19, x20, [sp, #32]
    a05c:	ldp	x21, x22, [sp, #48]
    a060:	ldr	x23, [sp, #64]
    a064:	add	sp, sp, #0x60
    a068:	ret
    a06c:	nop
    a070:	stp	x29, x30, [sp, #-48]!
    a074:	mov	x29, sp
    a078:	stp	x19, x20, [sp, #16]
    a07c:	mov	x20, x0
    a080:	adrp	x19, 25000 <PyInit__datetime@@Base+0x16118>
    a084:	ldr	x0, [x0, #8]
    a088:	stp	x21, x22, [sp, #32]
    a08c:	add	x22, x19, #0x298
    a090:	add	x2, x22, #0x1a0
    a094:	mov	x21, x1
    a098:	cmp	x0, x2
    a09c:	b.eq	a0ac <PyNumber_FloorDivide@plt+0x54ac>  // b.none
    a0a0:	mov	x1, x2
    a0a4:	bl	4b30 <PyType_IsSubtype@plt>
    a0a8:	cbz	w0, a0e8 <PyNumber_FloorDivide@plt+0x54e8>
    a0ac:	ldr	x0, [x21, #8]
    a0b0:	add	x1, x19, #0x298
    a0b4:	cmp	x0, x1
    a0b8:	b.eq	a11c <PyNumber_FloorDivide@plt+0x551c>  // b.none
    a0bc:	bl	4b30 <PyType_IsSubtype@plt>
    a0c0:	cbnz	w0, a11c <PyNumber_FloorDivide@plt+0x551c>
    a0c4:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    a0c8:	ldp	x19, x20, [sp, #16]
    a0cc:	ldr	x0, [x0, #3960]
    a0d0:	ldp	x21, x22, [sp, #32]
    a0d4:	ldr	x1, [x0]
    a0d8:	add	x1, x1, #0x1
    a0dc:	str	x1, [x0]
    a0e0:	ldp	x29, x30, [sp], #48
    a0e4:	ret
    a0e8:	ldr	x0, [x20, #8]
    a0ec:	cmp	x0, x22
    a0f0:	b.eq	a100 <PyNumber_FloorDivide@plt+0x5500>  // b.none
    a0f4:	mov	x1, x22
    a0f8:	bl	4b30 <PyType_IsSubtype@plt>
    a0fc:	cbz	w0, a0c4 <PyNumber_FloorDivide@plt+0x54c4>
    a100:	mov	x1, x20
    a104:	mov	x0, x21
    a108:	ldp	x19, x20, [sp, #16]
    a10c:	mov	w2, #0x1                   	// #1
    a110:	ldp	x21, x22, [sp, #32]
    a114:	ldp	x29, x30, [sp], #48
    a118:	b	9e10 <PyNumber_FloorDivide@plt+0x5210>
    a11c:	mov	x1, x21
    a120:	mov	x0, x20
    a124:	ldp	x19, x20, [sp, #16]
    a128:	mov	w2, #0x1                   	// #1
    a12c:	ldp	x21, x22, [sp, #32]
    a130:	ldp	x29, x30, [sp], #48
    a134:	b	9e10 <PyNumber_FloorDivide@plt+0x5210>
    a138:	sub	sp, sp, #0x50
    a13c:	adrp	x4, 25000 <PyInit__datetime@@Base+0x16118>
    a140:	add	x3, sp, #0x48
    a144:	add	x4, x4, #0x298
    a148:	add	x6, x4, #0x340
    a14c:	add	x7, sp, #0x40
    a150:	stp	x29, x30, [sp, #16]
    a154:	add	x29, sp, #0x10
    a158:	add	x4, x4, #0x680
    a15c:	add	x5, sp, #0x38
    a160:	str	x3, [sp]
    a164:	adrp	x3, 25000 <PyInit__datetime@@Base+0x16118>
    a168:	add	x3, x3, #0xab8
    a16c:	str	x19, [sp, #32]
    a170:	add	x3, x3, #0x3b8
    a174:	mov	x19, x0
    a178:	mov	x0, x1
    a17c:	mov	x1, x2
    a180:	adrp	x2, f000 <PyInit__datetime@@Base+0x118>
    a184:	add	x2, x2, #0xfc0
    a188:	str	xzr, [sp, #72]
    a18c:	bl	4750 <PyArg_ParseTupleAndKeywords@plt>
    a190:	cbz	w0, a20c <PyNumber_FloorDivide@plt+0x560c>
    a194:	ldp	x8, x7, [sp, #64]
    a198:	cbz	x7, a1f8 <PyNumber_FloorDivide@plt+0x55f8>
    a19c:	ldrb	w6, [x8, #29]
    a1a0:	ldr	x9, [sp, #56]
    a1a4:	ldrb	w0, [x8, #28]
    a1a8:	lsl	w6, w6, #8
    a1ac:	ldrb	w10, [x8, #30]
    a1b0:	ldrb	w5, [x8, #27]
    a1b4:	ldrb	w4, [x8, #26]
    a1b8:	orr	w6, w6, w0, lsl #16
    a1bc:	ldrb	w3, [x8, #25]
    a1c0:	orr	w6, w6, w10
    a1c4:	ldurh	w0, [x9, #25]
    a1c8:	ldrb	w2, [x9, #28]
    a1cc:	ldrb	w1, [x9, #27]
    a1d0:	rev16	w0, w0
    a1d4:	str	x19, [sp, #8]
    a1d8:	and	w0, w0, #0xffff
    a1dc:	ldrb	w8, [x8, #31]
    a1e0:	str	w8, [sp]
    a1e4:	bl	98b0 <PyNumber_FloorDivide@plt+0x4cb0>
    a1e8:	ldp	x29, x30, [sp, #16]
    a1ec:	ldr	x19, [sp, #32]
    a1f0:	add	sp, sp, #0x50
    a1f4:	ret
    a1f8:	ldrb	w0, [x8, #24]
    a1fc:	cbz	w0, a220 <PyNumber_FloorDivide@plt+0x5620>
    a200:	ldr	x7, [x8, #32]
    a204:	str	x7, [sp, #72]
    a208:	b	a19c <PyNumber_FloorDivide@plt+0x559c>
    a20c:	mov	x0, #0x0                   	// #0
    a210:	ldp	x29, x30, [sp, #16]
    a214:	ldr	x19, [sp, #32]
    a218:	add	sp, sp, #0x50
    a21c:	ret
    a220:	adrp	x7, 24000 <PyInit__datetime@@Base+0x15118>
    a224:	ldr	x7, [x7, #4024]
    a228:	str	x7, [sp, #72]
    a22c:	b	a19c <PyNumber_FloorDivide@plt+0x559c>
    a230:	adrp	x5, 25000 <PyInit__datetime@@Base+0x16118>
    a234:	add	x5, x5, #0x298
    a238:	add	x4, x5, #0x680
    a23c:	cmp	x3, x4
    a240:	b.eq	a2ac <PyNumber_FloorDivide@plt+0x56ac>  // b.none
    a244:	add	x5, x5, #0x1a0
    a248:	mov	x6, x3
    a24c:	cmp	x3, x5
    a250:	b.eq	a270 <PyNumber_FloorDivide@plt+0x5670>  // b.none
    a254:	mov	w4, w2
    a258:	mov	w3, w1
    a25c:	mov	w2, w0
    a260:	adrp	x1, f000 <PyInit__datetime@@Base+0x118>
    a264:	mov	x0, x6
    a268:	add	x1, x1, #0x888
    a26c:	b	4950 <PyObject_CallFunction@plt>
    a270:	sub	sp, sp, #0x20
    a274:	adrp	x7, 24000 <PyInit__datetime@@Base+0x15118>
    a278:	mov	w5, #0x0                   	// #0
    a27c:	mov	w4, #0x0                   	// #0
    a280:	mov	w3, #0x0                   	// #0
    a284:	stp	x29, x30, [sp, #16]
    a288:	add	x29, sp, #0x10
    a28c:	ldr	x7, [x7, #4024]
    a290:	str	wzr, [sp]
    a294:	str	x6, [sp, #8]
    a298:	mov	w6, #0x0                   	// #0
    a29c:	bl	92e0 <PyNumber_FloorDivide@plt+0x46e0>
    a2a0:	ldp	x29, x30, [sp, #16]
    a2a4:	add	sp, sp, #0x20
    a2a8:	ret
    a2ac:	b	8870 <PyNumber_FloorDivide@plt+0x3c70>
    a2b0:	stp	x29, x30, [sp, #-96]!
    a2b4:	mov	w2, #0x0                   	// #0
    a2b8:	mov	x29, sp
    a2bc:	str	x19, [sp, #16]
    a2c0:	mov	x19, x0
    a2c4:	mov	x0, x1
    a2c8:	add	x1, sp, #0x20
    a2cc:	bl	4a70 <_PyTime_ObjectToTime_t@plt>
    a2d0:	cmn	w0, #0x1
    a2d4:	b.eq	a30c <PyNumber_FloorDivide@plt+0x570c>  // b.none
    a2d8:	ldr	x0, [sp, #32]
    a2dc:	add	x1, sp, #0x28
    a2e0:	bl	4bc0 <_PyTime_localtime@plt>
    a2e4:	cbnz	w0, a30c <PyNumber_FloorDivide@plt+0x570c>
    a2e8:	ldp	w2, w1, [sp, #52]
    a2ec:	mov	x3, x19
    a2f0:	ldr	w0, [sp, #60]
    a2f4:	add	w1, w1, #0x1
    a2f8:	add	w0, w0, #0x76c
    a2fc:	bl	a230 <PyNumber_FloorDivide@plt+0x5630>
    a300:	ldr	x19, [sp, #16]
    a304:	ldp	x29, x30, [sp], #96
    a308:	ret
    a30c:	mov	x0, #0x0                   	// #0
    a310:	ldr	x19, [sp, #16]
    a314:	ldp	x29, x30, [sp], #96
    a318:	ret
    a31c:	nop
    a320:	stp	x29, x30, [sp, #-48]!
    a324:	mov	x3, #0x1                   	// #1
    a328:	mov	x2, x3
    a32c:	mov	x29, sp
    a330:	add	x4, sp, #0x28
    a334:	str	x19, [sp, #16]
    a338:	mov	x19, x0
    a33c:	mov	x0, x1
    a340:	adrp	x1, f000 <PyInit__datetime@@Base+0x118>
    a344:	add	x1, x1, #0xfd0
    a348:	bl	4990 <PyArg_UnpackTuple@plt>
    a34c:	cbz	w0, a368 <PyNumber_FloorDivide@plt+0x5768>
    a350:	ldr	x1, [sp, #40]
    a354:	mov	x0, x19
    a358:	bl	a2b0 <PyNumber_FloorDivide@plt+0x56b0>
    a35c:	ldr	x19, [sp, #16]
    a360:	ldp	x29, x30, [sp], #48
    a364:	ret
    a368:	mov	x0, #0x0                   	// #0
    a36c:	ldr	x19, [sp, #16]
    a370:	ldp	x29, x30, [sp], #48
    a374:	ret
    a378:	b	a2b0 <PyNumber_FloorDivide@plt+0x56b0>
    a37c:	nop
    a380:	stp	x29, x30, [sp, #-64]!
    a384:	adrp	x3, 25000 <PyInit__datetime@@Base+0x16118>
    a388:	add	x3, x3, #0xab8
    a38c:	mov	x29, sp
    a390:	stp	x19, x20, [sp, #16]
    a394:	add	x20, sp, #0x30
    a398:	mov	x19, x0
    a39c:	str	x21, [sp, #32]
    a3a0:	add	x21, sp, #0x38
    a3a4:	mov	x0, x1
    a3a8:	add	x3, x3, #0x3d8
    a3ac:	mov	x1, x2
    a3b0:	mov	x4, x20
    a3b4:	adrp	x2, f000 <PyInit__datetime@@Base+0x118>
    a3b8:	add	x5, sp, #0x34
    a3bc:	add	x2, x2, #0xfe0
    a3c0:	mov	x6, x21
    a3c4:	bl	4750 <PyArg_ParseTupleAndKeywords@plt>
    a3c8:	cbz	w0, a57c <PyNumber_FloorDivide@plt+0x597c>
    a3cc:	ldr	w11, [sp, #48]
    a3d0:	mov	w0, #0x270e                	// #9998
    a3d4:	sub	w9, w11, #0x1
    a3d8:	cmp	w9, w0
    a3dc:	b.hi	a5b0 <PyNumber_FloorDivide@plt+0x59b0>  // b.pmore
    a3e0:	ldr	w10, [sp, #52]
    a3e4:	sub	w12, w10, #0x1
    a3e8:	cmp	w12, #0x33
    a3ec:	b.ls	a470 <PyNumber_FloorDivide@plt+0x5870>  // b.plast
    a3f0:	cmp	w10, #0x35
    a3f4:	b.ne	a548 <PyNumber_FloorDivide@plt+0x5948>  // b.any
    a3f8:	mov	w2, #0x1                   	// #1
    a3fc:	mov	w0, w11
    a400:	mov	w1, w2
    a404:	bl	4e80 <PyNumber_FloorDivide@plt+0x280>
    a408:	mov	w1, #0x2493                	// #9363
    a40c:	add	w0, w0, #0x6
    a410:	movk	w1, #0x9249, lsl #16
    a414:	smull	x1, w0, w1
    a418:	lsr	x1, x1, #32
    a41c:	add	w1, w0, w1
    a420:	asr	w1, w1, #2
    a424:	sub	w1, w1, w0, asr #31
    a428:	lsl	w2, w1, #3
    a42c:	sub	w1, w2, w1
    a430:	sub	w1, w0, w1
    a434:	cmp	w1, #0x3
    a438:	b.eq	a470 <PyNumber_FloorDivide@plt+0x5870>  // b.none
    a43c:	cmp	w1, #0x2
    a440:	b.ne	a548 <PyNumber_FloorDivide@plt+0x5948>  // b.any
    a444:	tst	x11, #0x3
    a448:	b.ne	a548 <PyNumber_FloorDivide@plt+0x5948>  // b.any
    a44c:	mov	w1, #0x5c29                	// #23593
    a450:	mov	w0, #0x5c28                	// #23592
    a454:	movk	w1, #0xc28f, lsl #16
    a458:	movk	w0, #0x28f, lsl #16
    a45c:	mul	w11, w11, w1
    a460:	ror	w1, w11, #2
    a464:	cmp	w1, w0
    a468:	b.ls	a534 <PyNumber_FloorDivide@plt+0x5934>  // b.plast
    a46c:	nop
    a470:	ldr	w2, [sp, #56]
    a474:	sub	w3, w2, #0x1
    a478:	cmp	w3, #0x6
    a47c:	b.hi	a5d4 <PyNumber_FloorDivide@plt+0x59d4>  // b.pmore
    a480:	mov	w1, #0x851f                	// #34079
    a484:	asr	w4, w9, #2
    a488:	movk	w1, #0x51eb, lsl #16
    a48c:	mov	w2, #0x16d                 	// #365
    a490:	mov	w5, #0x2493                	// #9363
    a494:	lsl	w0, w12, #3
    a498:	smull	x1, w9, w1
    a49c:	movk	w5, #0x9249, lsl #16
    a4a0:	madd	w9, w9, w2, w4
    a4a4:	sub	w0, w0, w12
    a4a8:	add	w0, w0, w3
    a4ac:	mov	x3, x21
    a4b0:	asr	x4, x1, #37
    a4b4:	asr	x1, x1, #39
    a4b8:	sub	w2, w1, w4
    a4bc:	mov	x1, x20
    a4c0:	add	w4, w2, w9
    a4c4:	add	x2, sp, #0x3c
    a4c8:	add	w6, w4, #0x7
    a4cc:	add	w4, w4, #0x1
    a4d0:	str	w10, [sp, #60]
    a4d4:	smull	x5, w6, w5
    a4d8:	lsr	x5, x5, #32
    a4dc:	add	w5, w6, w5
    a4e0:	asr	w5, w5, #2
    a4e4:	sub	w5, w5, w6, asr #31
    a4e8:	lsl	w7, w5, #3
    a4ec:	sub	w5, w7, w5
    a4f0:	sub	w5, w6, w5
    a4f4:	sub	w4, w4, w5
    a4f8:	cmp	w5, #0x3
    a4fc:	add	w5, w4, #0x7
    a500:	csel	w4, w5, w4, gt
    a504:	add	w0, w0, w4
    a508:	bl	4ce8 <PyNumber_FloorDivide@plt+0xe8>
    a50c:	ldr	w0, [sp, #48]
    a510:	mov	x3, x19
    a514:	ldp	w2, w1, [sp, #56]
    a518:	bl	a230 <PyNumber_FloorDivide@plt+0x5630>
    a51c:	mov	x19, x0
    a520:	mov	x0, x19
    a524:	ldp	x19, x20, [sp, #16]
    a528:	ldr	x21, [sp, #32]
    a52c:	ldp	x29, x30, [sp], #64
    a530:	ret
    a534:	mov	w0, #0xd70a                	// #55050
    a538:	ror	w11, w11, #4
    a53c:	movk	w0, #0xa3, lsl #16
    a540:	cmp	w11, w0
    a544:	b.ls	a470 <PyNumber_FloorDivide@plt+0x5870>  // b.plast
    a548:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    a54c:	mov	w2, w10
    a550:	mov	x19, #0x0                   	// #0
    a554:	adrp	x1, 10000 <PyInit__datetime@@Base+0x1118>
    a558:	ldr	x0, [x0, #3968]
    a55c:	add	x1, x1, #0x40
    a560:	ldr	x0, [x0]
    a564:	bl	4b60 <PyErr_Format@plt>
    a568:	mov	x0, x19
    a56c:	ldp	x19, x20, [sp, #16]
    a570:	ldr	x21, [sp, #32]
    a574:	ldp	x29, x30, [sp], #64
    a578:	ret
    a57c:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    a580:	mov	x19, #0x0                   	// #0
    a584:	ldr	x0, [x0, #4008]
    a588:	ldr	x0, [x0]
    a58c:	bl	48a0 <PyErr_ExceptionMatches@plt>
    a590:	cbz	w0, a520 <PyNumber_FloorDivide@plt+0x5920>
    a594:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    a598:	adrp	x1, f000 <PyInit__datetime@@Base+0x118>
    a59c:	add	x1, x1, #0xff8
    a5a0:	ldr	x0, [x0, #3968]
    a5a4:	ldr	x0, [x0]
    a5a8:	bl	4b60 <PyErr_Format@plt>
    a5ac:	b	a520 <PyNumber_FloorDivide@plt+0x5920>
    a5b0:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    a5b4:	mov	w2, w11
    a5b8:	adrp	x1, 10000 <PyInit__datetime@@Base+0x1118>
    a5bc:	mov	x19, #0x0                   	// #0
    a5c0:	ldr	x0, [x0, #3968]
    a5c4:	add	x1, x1, #0x20
    a5c8:	ldr	x0, [x0]
    a5cc:	bl	4b60 <PyErr_Format@plt>
    a5d0:	b	a520 <PyNumber_FloorDivide@plt+0x5920>
    a5d4:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    a5d8:	adrp	x1, 10000 <PyInit__datetime@@Base+0x1118>
    a5dc:	mov	x19, #0x0                   	// #0
    a5e0:	add	x1, x1, #0x58
    a5e4:	ldr	x0, [x0, #3968]
    a5e8:	ldr	x0, [x0]
    a5ec:	bl	4b60 <PyErr_Format@plt>
    a5f0:	b	a520 <PyNumber_FloorDivide@plt+0x5920>
    a5f4:	nop
    a5f8:	stp	x29, x30, [sp, #-48]!
    a5fc:	mov	x29, sp
    a600:	add	x2, sp, #0x20
    a604:	str	x19, [sp, #16]
    a608:	mov	x19, x0
    a60c:	mov	x0, x1
    a610:	adrp	x1, 10000 <PyInit__datetime@@Base+0x1118>
    a614:	add	x1, x1, #0x80
    a618:	bl	4a30 <PyArg_ParseTuple@plt>
    a61c:	cbz	w0, a680 <PyNumber_FloorDivide@plt+0x5a80>
    a620:	ldr	w0, [sp, #32]
    a624:	cmp	w0, #0x0
    a628:	b.le	a658 <PyNumber_FloorDivide@plt+0x5a58>
    a62c:	add	x3, sp, #0x2c
    a630:	add	x2, sp, #0x28
    a634:	add	x1, sp, #0x24
    a638:	bl	4ce8 <PyNumber_FloorDivide@plt+0xe8>
    a63c:	ldp	w0, w1, [sp, #36]
    a640:	mov	x3, x19
    a644:	ldr	w2, [sp, #44]
    a648:	bl	a230 <PyNumber_FloorDivide@plt+0x5630>
    a64c:	ldr	x19, [sp, #16]
    a650:	ldp	x29, x30, [sp], #48
    a654:	ret
    a658:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    a65c:	adrp	x1, 10000 <PyInit__datetime@@Base+0x1118>
    a660:	add	x1, x1, #0x90
    a664:	ldr	x0, [x0, #3968]
    a668:	ldr	x0, [x0]
    a66c:	bl	4880 <PyErr_SetString@plt>
    a670:	mov	x0, #0x0                   	// #0
    a674:	ldr	x19, [sp, #16]
    a678:	ldp	x29, x30, [sp], #48
    a67c:	ret
    a680:	mov	x0, #0x0                   	// #0
    a684:	ldr	x19, [sp, #16]
    a688:	ldp	x29, x30, [sp], #48
    a68c:	ret
    a690:	stp	x29, x30, [sp, #-64]!
    a694:	mov	x29, sp
    a698:	stp	x19, x20, [sp, #16]
    a69c:	mov	x20, x0
    a6a0:	ldr	x0, [x1, #8]
    a6a4:	ldr	x0, [x0, #168]
    a6a8:	tbz	w0, #28, a730 <PyNumber_FloorDivide@plt+0x5b30>
    a6ac:	mov	x19, x1
    a6b0:	add	x1, sp, #0x38
    a6b4:	mov	x0, x19
    a6b8:	bl	4b40 <PyUnicode_AsUTF8AndSize@plt>
    a6bc:	cbz	x0, a704 <PyNumber_FloorDivide@plt+0x5b04>
    a6c0:	ldr	x1, [sp, #56]
    a6c4:	stp	wzr, wzr, [sp, #44]
    a6c8:	str	wzr, [sp, #52]
    a6cc:	cmp	x1, #0xa
    a6d0:	b.ne	a704 <PyNumber_FloorDivide@plt+0x5b04>  // b.any
    a6d4:	add	x3, sp, #0x34
    a6d8:	add	x2, sp, #0x30
    a6dc:	add	x1, sp, #0x2c
    a6e0:	bl	4f20 <PyNumber_FloorDivide@plt+0x320>
    a6e4:	tbnz	w0, #31, a704 <PyNumber_FloorDivide@plt+0x5b04>
    a6e8:	ldp	w0, w1, [sp, #44]
    a6ec:	mov	x3, x20
    a6f0:	ldr	w2, [sp, #52]
    a6f4:	bl	a230 <PyNumber_FloorDivide@plt+0x5630>
    a6f8:	ldp	x19, x20, [sp, #16]
    a6fc:	ldp	x29, x30, [sp], #64
    a700:	ret
    a704:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    a708:	mov	x2, x19
    a70c:	adrp	x1, 10000 <PyInit__datetime@@Base+0x1118>
    a710:	add	x1, x1, #0xd0
    a714:	ldr	x0, [x0, #3968]
    a718:	ldr	x0, [x0]
    a71c:	bl	4b60 <PyErr_Format@plt>
    a720:	mov	x0, #0x0                   	// #0
    a724:	ldp	x19, x20, [sp, #16]
    a728:	ldp	x29, x30, [sp], #64
    a72c:	ret
    a730:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    a734:	adrp	x1, 10000 <PyInit__datetime@@Base+0x1118>
    a738:	add	x1, x1, #0xa8
    a73c:	ldr	x0, [x0, #3976]
    a740:	ldr	x0, [x0]
    a744:	bl	4880 <PyErr_SetString@plt>
    a748:	mov	x0, #0x0                   	// #0
    a74c:	ldp	x19, x20, [sp, #16]
    a750:	ldp	x29, x30, [sp], #64
    a754:	ret
    a758:	stp	x29, x30, [sp, #-48]!
    a75c:	cmp	w2, #0x0
    a760:	cneg	w4, w1, ne  // ne = any
    a764:	mov	x29, sp
    a768:	str	x19, [sp, #16]
    a76c:	mov	x19, x0
    a770:	add	x2, sp, #0x2c
    a774:	add	x1, sp, #0x28
    a778:	ldurh	w3, [x0, #25]
    a77c:	add	x0, sp, #0x24
    a780:	ldrb	w5, [x19, #28]
    a784:	ldrb	w6, [x19, #27]
    a788:	rev16	w3, w3
    a78c:	add	w4, w5, w4
    a790:	and	w3, w3, #0xffff
    a794:	stp	w3, w6, [sp, #36]
    a798:	str	w4, [sp, #44]
    a79c:	bl	56a0 <PyNumber_FloorDivide@plt+0xaa0>
    a7a0:	tbnz	w0, #31, a7c0 <PyNumber_FloorDivide@plt+0x5bc0>
    a7a4:	ldp	w0, w1, [sp, #36]
    a7a8:	ldr	w2, [sp, #44]
    a7ac:	ldr	x3, [x19, #8]
    a7b0:	bl	a230 <PyNumber_FloorDivide@plt+0x5630>
    a7b4:	ldr	x19, [sp, #16]
    a7b8:	ldp	x29, x30, [sp], #48
    a7bc:	ret
    a7c0:	mov	x0, #0x0                   	// #0
    a7c4:	ldr	x19, [sp, #16]
    a7c8:	ldp	x29, x30, [sp], #48
    a7cc:	ret
    a7d0:	stp	x29, x30, [sp, #-64]!
    a7d4:	mov	x29, sp
    a7d8:	stp	x19, x20, [sp, #16]
    a7dc:	mov	x19, x0
    a7e0:	ldr	x0, [x0, #8]
    a7e4:	stp	x21, x22, [sp, #32]
    a7e8:	str	x23, [sp, #48]
    a7ec:	adrp	x23, 25000 <PyInit__datetime@@Base+0x16118>
    a7f0:	add	x21, x23, #0x298
    a7f4:	add	x20, x21, #0x1a0
    a7f8:	cmp	x0, x20
    a7fc:	b.eq	a874 <PyNumber_FloorDivide@plt+0x5c74>  // b.none
    a800:	mov	x22, x1
    a804:	mov	x1, x20
    a808:	bl	4b30 <PyType_IsSubtype@plt>
    a80c:	cbnz	w0, a874 <PyNumber_FloorDivide@plt+0x5c74>
    a810:	ldr	x0, [x22, #8]
    a814:	cmp	x0, x20
    a818:	b.eq	a874 <PyNumber_FloorDivide@plt+0x5c74>  // b.none
    a81c:	mov	x1, x20
    a820:	bl	4b30 <PyType_IsSubtype@plt>
    a824:	cbnz	w0, a874 <PyNumber_FloorDivide@plt+0x5c74>
    a828:	ldr	x0, [x19, #8]
    a82c:	add	x1, x21, #0x680
    a830:	cmp	x0, x1
    a834:	b.eq	a840 <PyNumber_FloorDivide@plt+0x5c40>  // b.none
    a838:	bl	4b30 <PyType_IsSubtype@plt>
    a83c:	cbz	w0, a874 <PyNumber_FloorDivide@plt+0x5c74>
    a840:	ldr	x0, [x22, #8]
    a844:	add	x20, x23, #0x298
    a848:	add	x1, x20, #0x680
    a84c:	cmp	x0, x1
    a850:	b.eq	a8a0 <PyNumber_FloorDivide@plt+0x5ca0>  // b.none
    a854:	bl	4b30 <PyType_IsSubtype@plt>
    a858:	cbnz	w0, a8a0 <PyNumber_FloorDivide@plt+0x5ca0>
    a85c:	ldr	x0, [x22, #8]
    a860:	cmp	x0, x20
    a864:	b.eq	a8fc <PyNumber_FloorDivide@plt+0x5cfc>  // b.none
    a868:	mov	x1, x20
    a86c:	bl	4b30 <PyType_IsSubtype@plt>
    a870:	cbnz	w0, a8fc <PyNumber_FloorDivide@plt+0x5cfc>
    a874:	adrp	x1, 24000 <PyInit__datetime@@Base+0x15118>
    a878:	ldp	x19, x20, [sp, #16]
    a87c:	ldr	x1, [x1, #3960]
    a880:	ldp	x21, x22, [sp, #32]
    a884:	mov	x0, x1
    a888:	ldr	x2, [x1]
    a88c:	ldr	x23, [sp, #48]
    a890:	add	x2, x2, #0x1
    a894:	str	x2, [x1]
    a898:	ldp	x29, x30, [sp], #64
    a89c:	ret
    a8a0:	ldrb	w2, [x19, #28]
    a8a4:	ldrb	w1, [x19, #27]
    a8a8:	ldurh	w0, [x19, #25]
    a8ac:	rev16	w0, w0
    a8b0:	and	w0, w0, #0xffff
    a8b4:	bl	4e80 <PyNumber_FloorDivide@plt+0x280>
    a8b8:	ldrb	w2, [x22, #28]
    a8bc:	mov	w9, w0
    a8c0:	ldrb	w1, [x22, #27]
    a8c4:	ldurh	w0, [x22, #25]
    a8c8:	rev16	w0, w0
    a8cc:	and	w0, w0, #0xffff
    a8d0:	bl	4e80 <PyNumber_FloorDivide@plt+0x280>
    a8d4:	add	x4, x23, #0x298
    a8d8:	sub	w0, w9, w0
    a8dc:	ldp	x19, x20, [sp, #16]
    a8e0:	mov	w3, #0x0                   	// #0
    a8e4:	ldp	x21, x22, [sp, #32]
    a8e8:	mov	w2, #0x0                   	// #0
    a8ec:	ldr	x23, [sp, #48]
    a8f0:	mov	w1, #0x0                   	// #0
    a8f4:	ldp	x29, x30, [sp], #64
    a8f8:	b	5500 <PyNumber_FloorDivide@plt+0x900>
    a8fc:	ldr	w1, [x22, #24]
    a900:	mov	x0, x19
    a904:	ldp	x19, x20, [sp, #16]
    a908:	mov	w2, #0x1                   	// #1
    a90c:	ldp	x21, x22, [sp, #32]
    a910:	ldr	x23, [sp, #48]
    a914:	ldp	x29, x30, [sp], #64
    a918:	b	a758 <PyNumber_FloorDivide@plt+0x5b58>
    a91c:	nop
    a920:	stp	x29, x30, [sp, #-64]!
    a924:	mov	x29, sp
    a928:	stp	x19, x20, [sp, #16]
    a92c:	mov	x19, x0
    a930:	ldr	x0, [x0, #8]
    a934:	stp	x21, x22, [sp, #32]
    a938:	str	x23, [sp, #48]
    a93c:	adrp	x23, 25000 <PyInit__datetime@@Base+0x16118>
    a940:	add	x21, x23, #0x298
    a944:	add	x20, x21, #0x1a0
    a948:	cmp	x0, x20
    a94c:	b.eq	a9cc <PyNumber_FloorDivide@plt+0x5dcc>  // b.none
    a950:	mov	x22, x1
    a954:	mov	x1, x20
    a958:	bl	4b30 <PyType_IsSubtype@plt>
    a95c:	cbnz	w0, a9cc <PyNumber_FloorDivide@plt+0x5dcc>
    a960:	ldr	x0, [x22, #8]
    a964:	cmp	x0, x20
    a968:	b.eq	a9cc <PyNumber_FloorDivide@plt+0x5dcc>  // b.none
    a96c:	mov	x1, x20
    a970:	bl	4b30 <PyType_IsSubtype@plt>
    a974:	cbnz	w0, a9cc <PyNumber_FloorDivide@plt+0x5dcc>
    a978:	ldr	x0, [x19, #8]
    a97c:	add	x1, x21, #0x680
    a980:	cmp	x0, x1
    a984:	b.eq	a9b4 <PyNumber_FloorDivide@plt+0x5db4>  // b.none
    a988:	bl	4b30 <PyType_IsSubtype@plt>
    a98c:	cbnz	w0, a9b4 <PyNumber_FloorDivide@plt+0x5db4>
    a990:	ldr	x0, [x19, #8]
    a994:	cmp	x0, x21
    a998:	b.eq	a9a8 <PyNumber_FloorDivide@plt+0x5da8>  // b.none
    a99c:	mov	x1, x21
    a9a0:	bl	4b30 <PyType_IsSubtype@plt>
    a9a4:	cbz	w0, a9cc <PyNumber_FloorDivide@plt+0x5dcc>
    a9a8:	ldr	w1, [x19, #24]
    a9ac:	mov	x0, x22
    a9b0:	b	aa00 <PyNumber_FloorDivide@plt+0x5e00>
    a9b4:	ldr	x0, [x22, #8]
    a9b8:	add	x1, x23, #0x298
    a9bc:	cmp	x0, x1
    a9c0:	b.eq	a9f8 <PyNumber_FloorDivide@plt+0x5df8>  // b.none
    a9c4:	bl	4b30 <PyType_IsSubtype@plt>
    a9c8:	cbnz	w0, a9f8 <PyNumber_FloorDivide@plt+0x5df8>
    a9cc:	adrp	x1, 24000 <PyInit__datetime@@Base+0x15118>
    a9d0:	ldp	x19, x20, [sp, #16]
    a9d4:	ldr	x1, [x1, #3960]
    a9d8:	ldp	x21, x22, [sp, #32]
    a9dc:	mov	x0, x1
    a9e0:	ldr	x2, [x1]
    a9e4:	ldr	x23, [sp, #48]
    a9e8:	add	x2, x2, #0x1
    a9ec:	str	x2, [x1]
    a9f0:	ldp	x29, x30, [sp], #64
    a9f4:	ret
    a9f8:	ldr	w1, [x22, #24]
    a9fc:	mov	x0, x19
    aa00:	ldp	x19, x20, [sp, #16]
    aa04:	mov	w2, #0x0                   	// #0
    aa08:	ldp	x21, x22, [sp, #32]
    aa0c:	ldr	x23, [sp, #48]
    aa10:	ldp	x29, x30, [sp], #64
    aa14:	b	a758 <PyNumber_FloorDivide@plt+0x5b58>
    aa18:	stp	x29, x30, [sp, #-32]!
    aa1c:	adrp	x2, 25000 <PyInit__datetime@@Base+0x16118>
    aa20:	add	x2, x2, #0x298
    aa24:	mov	x29, sp
    aa28:	stp	x19, x20, [sp, #16]
    aa2c:	mov	x19, x1
    aa30:	mov	x20, x0
    aa34:	add	x1, x2, #0x1a0
    aa38:	ldr	x0, [x19, #8]
    aa3c:	cmp	x0, x1
    aa40:	b.eq	aa4c <PyNumber_FloorDivide@plt+0x5e4c>  // b.none
    aa44:	bl	4b30 <PyType_IsSubtype@plt>
    aa48:	cbz	w0, aaa0 <PyNumber_FloorDivide@plt+0x5ea0>
    aa4c:	ldrb	w0, [x19, #24]
    aa50:	cbz	w0, aa78 <PyNumber_FloorDivide@plt+0x5e78>
    aa54:	ldr	x0, [x19, #40]
    aa58:	cmp	x0, x20
    aa5c:	b.ne	aa78 <PyNumber_FloorDivide@plt+0x5e78>  // b.any
    aa60:	mov	x0, x19
    aa64:	mov	w2, #0x1                   	// #1
    aa68:	ldr	x1, [x20, #16]
    aa6c:	ldp	x19, x20, [sp, #16]
    aa70:	ldp	x29, x30, [sp], #32
    aa74:	b	9e10 <PyNumber_FloorDivide@plt+0x5210>
    aa78:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    aa7c:	adrp	x1, 10000 <PyInit__datetime@@Base+0x1118>
    aa80:	add	x1, x1, #0x118
    aa84:	ldr	x0, [x0, #3968]
    aa88:	ldr	x0, [x0]
    aa8c:	bl	4880 <PyErr_SetString@plt>
    aa90:	mov	x0, #0x0                   	// #0
    aa94:	ldp	x19, x20, [sp, #16]
    aa98:	ldp	x29, x30, [sp], #32
    aa9c:	ret
    aaa0:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    aaa4:	adrp	x1, 10000 <PyInit__datetime@@Base+0x1118>
    aaa8:	add	x1, x1, #0xf0
    aaac:	ldr	x0, [x0, #3976]
    aab0:	ldr	x0, [x0]
    aab4:	bl	4880 <PyErr_SetString@plt>
    aab8:	b	aa90 <PyNumber_FloorDivide@plt+0x5e90>
    aabc:	nop
    aac0:	ldp	x1, x2, [x0, #16]
    aac4:	cbz	x2, aad4 <PyNumber_FloorDivide@plt+0x5ed4>
    aac8:	adrp	x0, 10000 <PyInit__datetime@@Base+0x1118>
    aacc:	add	x0, x0, #0x140
    aad0:	b	49a0 <Py_BuildValue@plt>
    aad4:	adrp	x0, 10000 <PyInit__datetime@@Base+0x1118>
    aad8:	add	x0, x0, #0x138
    aadc:	b	49a0 <Py_BuildValue@plt>
    aae0:	adrp	x1, 26000 <PyInit__datetime@@Base+0x17118>
    aae4:	ldr	x1, [x1, #3960]
    aae8:	cmp	x1, x0
    aaec:	b.eq	abb4 <PyNumber_FloorDivide@plt+0x5fb4>  // b.none
    aaf0:	ldr	x2, [x0, #16]
    aaf4:	ldr	x0, [x2, #24]
    aaf8:	cbz	x0, abac <PyNumber_FloorDivide@plt+0x5fac>
    aafc:	stp	x29, x30, [sp, #-48]!
    ab00:	mov	x29, sp
    ab04:	ldr	w0, [x2, #24]
    ab08:	stp	x19, x20, [sp, #16]
    ab0c:	tbnz	w0, #31, ac1c <PyNumber_FloorDivide@plt+0x601c>
    ab10:	ldr	x0, [x2]
    ab14:	str	x21, [sp, #32]
    ab18:	mov	w20, #0x2b                  	// #43
    ab1c:	add	x1, x0, #0x1
    ab20:	str	x1, [x2]
    ab24:	str	x0, [x2]
    ab28:	ldp	w19, w21, [x2, #28]
    ab2c:	cbz	x0, abf8 <PyNumber_FloorDivide@plt+0x5ff8>
    ab30:	mov	w3, #0x8889                	// #34953
    ab34:	movk	w3, #0x8888, lsl #16
    ab38:	smull	x3, w19, w3
    ab3c:	lsr	x3, x3, #32
    ab40:	add	w3, w19, w3
    ab44:	asr	w3, w3, #5
    ab48:	sub	w3, w3, w19, asr #31
    ab4c:	lsl	w4, w3, #4
    ab50:	sub	w4, w4, w3
    ab54:	subs	w4, w19, w4, lsl #2
    ab58:	b.mi	abec <PyNumber_FloorDivide@plt+0x5fec>  // b.first
    ab5c:	mov	w2, #0x8889                	// #34953
    ab60:	movk	w2, #0x8888, lsl #16
    ab64:	smull	x2, w3, w2
    ab68:	lsr	x2, x2, #32
    ab6c:	add	w2, w3, w2
    ab70:	asr	w2, w2, #5
    ab74:	sub	w2, w2, w3, asr #31
    ab78:	lsl	w0, w2, #4
    ab7c:	sub	w0, w0, w2
    ab80:	subs	w3, w3, w0, lsl #2
    ab84:	b.mi	abc0 <PyNumber_FloorDivide@plt+0x5fc0>  // b.first
    ab88:	cbnz	w21, abcc <PyNumber_FloorDivide@plt+0x5fcc>
    ab8c:	mov	w1, w20
    ab90:	cbnz	w4, ac04 <PyNumber_FloorDivide@plt+0x6004>
    ab94:	ldp	x19, x20, [sp, #16]
    ab98:	adrp	x0, 10000 <PyInit__datetime@@Base+0x1118>
    ab9c:	ldr	x21, [sp, #32]
    aba0:	add	x0, x0, #0x188
    aba4:	ldp	x29, x30, [sp], #48
    aba8:	b	4700 <PyUnicode_FromFormat@plt>
    abac:	ldr	w0, [x2, #32]
    abb0:	cbnz	w0, aafc <PyNumber_FloorDivide@plt+0x5efc>
    abb4:	adrp	x0, 10000 <PyInit__datetime@@Base+0x1118>
    abb8:	add	x0, x0, #0x148
    abbc:	b	4ad0 <PyUnicode_FromString@plt>
    abc0:	sub	w2, w2, #0x1
    abc4:	add	w3, w3, #0x3c
    abc8:	cbz	w21, ab8c <PyNumber_FloorDivide@plt+0x5f8c>
    abcc:	mov	w5, w21
    abd0:	mov	w1, w20
    abd4:	ldp	x19, x20, [sp, #16]
    abd8:	adrp	x0, 10000 <PyInit__datetime@@Base+0x1118>
    abdc:	ldr	x21, [sp, #32]
    abe0:	add	x0, x0, #0x150
    abe4:	ldp	x29, x30, [sp], #48
    abe8:	b	4700 <PyUnicode_FromFormat@plt>
    abec:	sub	w3, w3, #0x1
    abf0:	add	w4, w4, #0x3c
    abf4:	b	ab5c <PyNumber_FloorDivide@plt+0x5f5c>
    abf8:	mov	x0, x2
    abfc:	bl	4810 <_Py_Dealloc@plt>
    ac00:	b	ab30 <PyNumber_FloorDivide@plt+0x5f30>
    ac04:	ldp	x19, x20, [sp, #16]
    ac08:	adrp	x0, 10000 <PyInit__datetime@@Base+0x1118>
    ac0c:	ldr	x21, [sp, #32]
    ac10:	add	x0, x0, #0x170
    ac14:	ldp	x29, x30, [sp], #48
    ac18:	b	4700 <PyUnicode_FromFormat@plt>
    ac1c:	mov	x0, x2
    ac20:	bl	5630 <PyNumber_FloorDivide@plt+0xa30>
    ac24:	mov	x2, x0
    ac28:	cbz	x0, ac40 <PyNumber_FloorDivide@plt+0x6040>
    ac2c:	ldr	x0, [x0]
    ac30:	mov	w20, #0x2d                  	// #45
    ac34:	str	x21, [sp, #32]
    ac38:	sub	x0, x0, #0x1
    ac3c:	b	ab24 <PyNumber_FloorDivide@plt+0x5f24>
    ac40:	ldp	x19, x20, [sp, #16]
    ac44:	ldp	x29, x30, [sp], #48
    ac48:	ret
    ac4c:	nop
    ac50:	ldr	x1, [x0, #24]
    ac54:	cbz	x1, ac6c <PyNumber_FloorDivide@plt+0x606c>
    ac58:	ldr	x0, [x1]
    ac5c:	add	x0, x0, #0x1
    ac60:	str	x0, [x1]
    ac64:	mov	x0, x1
    ac68:	ret
    ac6c:	b	aae0 <PyNumber_FloorDivide@plt+0x5ee0>
    ac70:	stp	x29, x30, [sp, #-32]!
    ac74:	mov	x29, sp
    ac78:	str	x19, [sp, #16]
    ac7c:	mov	x19, x0
    ac80:	mov	x0, x1
    ac84:	adrp	x1, f000 <PyInit__datetime@@Base+0x118>
    ac88:	add	x1, x1, #0x840
    ac8c:	bl	8590 <PyNumber_FloorDivide@plt+0x3990>
    ac90:	cmn	w0, #0x1
    ac94:	b.eq	acc8 <PyNumber_FloorDivide@plt+0x60c8>  // b.none
    ac98:	ldr	x0, [x19, #24]
    ac9c:	cbz	x0, acb8 <PyNumber_FloorDivide@plt+0x60b8>
    aca0:	ldr	x1, [x0]
    aca4:	add	x1, x1, #0x1
    aca8:	str	x1, [x0]
    acac:	ldr	x19, [sp, #16]
    acb0:	ldp	x29, x30, [sp], #32
    acb4:	ret
    acb8:	mov	x0, x19
    acbc:	ldr	x19, [sp, #16]
    acc0:	ldp	x29, x30, [sp], #32
    acc4:	b	aae0 <PyNumber_FloorDivide@plt+0x5ee0>
    acc8:	mov	x0, #0x0                   	// #0
    accc:	b	acac <PyNumber_FloorDivide@plt+0x60ac>
    acd0:	stp	x29, x30, [sp, #-32]!
    acd4:	mov	x3, x2
    acd8:	adrp	x2, 10000 <PyInit__datetime@@Base+0x1118>
    acdc:	mov	x29, sp
    ace0:	add	x2, x2, #0x198
    ace4:	stp	x19, x20, [sp, #16]
    ace8:	mov	x20, x1
    acec:	bl	4780 <PyObject_CallMethod@plt>
    acf0:	mov	x19, x0
    acf4:	adrp	x2, 24000 <PyInit__datetime@@Base+0x15118>
    acf8:	ldr	x2, [x2, #4024]
    acfc:	cmp	x0, x2
    ad00:	b.eq	ad44 <PyNumber_FloorDivide@plt+0x6144>  // b.none
    ad04:	cbz	x0, ada8 <PyNumber_FloorDivide@plt+0x61a8>
    ad08:	ldr	x0, [x0, #8]
    ad0c:	adrp	x2, 25000 <PyInit__datetime@@Base+0x16118>
    ad10:	add	x1, x2, #0x298
    ad14:	cmp	x0, x1
    ad18:	b.eq	ad24 <PyNumber_FloorDivide@plt+0x6124>  // b.none
    ad1c:	bl	4b30 <PyType_IsSubtype@plt>
    ad20:	cbz	w0, adbc <PyNumber_FloorDivide@plt+0x61bc>
    ad24:	ldr	x1, [x19, #24]
    ad28:	mov	x0, #0xffffffff            	// #4294967295
    ad2c:	cmp	x1, x0
    ad30:	b.eq	ad54 <PyNumber_FloorDivide@plt+0x6154>  // b.none
    ad34:	ldr	w0, [x19, #24]
    ad38:	add	w0, w0, #0x1
    ad3c:	cmp	w0, #0x1
    ad40:	b.hi	ad60 <PyNumber_FloorDivide@plt+0x6160>  // b.pmore
    ad44:	mov	x0, x19
    ad48:	ldp	x19, x20, [sp, #16]
    ad4c:	ldp	x29, x30, [sp], #32
    ad50:	ret
    ad54:	ldr	w0, [x19, #32]
    ad58:	cmp	w0, #0x0
    ad5c:	b.gt	ad34 <PyNumber_FloorDivide@plt+0x6134>
    ad60:	ldr	x0, [x19]
    ad64:	sub	x0, x0, #0x1
    ad68:	str	x0, [x19]
    ad6c:	cbz	x0, ad9c <PyNumber_FloorDivide@plt+0x619c>
    ad70:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    ad74:	mov	x19, #0x0                   	// #0
    ad78:	adrp	x1, 10000 <PyInit__datetime@@Base+0x1118>
    ad7c:	add	x1, x1, #0x1a0
    ad80:	ldr	x0, [x0, #3968]
    ad84:	ldr	x0, [x0]
    ad88:	bl	4b60 <PyErr_Format@plt>
    ad8c:	mov	x0, x19
    ad90:	ldp	x19, x20, [sp, #16]
    ad94:	ldp	x29, x30, [sp], #32
    ad98:	ret
    ad9c:	mov	x0, x19
    ada0:	bl	4810 <_Py_Dealloc@plt>
    ada4:	b	ad70 <PyNumber_FloorDivide@plt+0x6170>
    ada8:	mov	x19, #0x0                   	// #0
    adac:	mov	x0, x19
    adb0:	ldp	x19, x20, [sp, #16]
    adb4:	ldp	x29, x30, [sp], #32
    adb8:	ret
    adbc:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    adc0:	mov	x2, x20
    adc4:	ldr	x3, [x19, #8]
    adc8:	adrp	x1, 10000 <PyInit__datetime@@Base+0x1118>
    adcc:	ldr	x0, [x0, #3976]
    add0:	add	x1, x1, #0x200
    add4:	ldr	x3, [x3, #24]
    add8:	ldr	x0, [x0]
    addc:	bl	4b60 <PyErr_Format@plt>
    ade0:	ldr	x0, [x19]
    ade4:	sub	x0, x0, #0x1
    ade8:	str	x0, [x19]
    adec:	cbnz	x0, ada8 <PyNumber_FloorDivide@plt+0x61a8>
    adf0:	mov	x0, x19
    adf4:	mov	x19, #0x0                   	// #0
    adf8:	bl	4810 <_Py_Dealloc@plt>
    adfc:	b	ad44 <PyNumber_FloorDivide@plt+0x6144>
    ae00:	adrp	x4, 24000 <PyInit__datetime@@Base+0x15118>
    ae04:	mov	x2, x1
    ae08:	ldr	x4, [x4, #4024]
    ae0c:	cmp	x0, x4
    ae10:	b.eq	ae20 <PyNumber_FloorDivide@plt+0x6220>  // b.none
    ae14:	adrp	x1, f000 <PyInit__datetime@@Base+0x118>
    ae18:	add	x1, x1, #0x800
    ae1c:	b	acd0 <PyNumber_FloorDivide@plt+0x60d0>
    ae20:	ldr	x1, [x0]
    ae24:	add	x1, x1, #0x1
    ae28:	str	x1, [x0]
    ae2c:	ret
    ae30:	mov	x1, x0
    ae34:	ldrb	w0, [x0, #24]
    ae38:	cbz	w0, ae44 <PyNumber_FloorDivide@plt+0x6244>
    ae3c:	ldr	x0, [x1, #40]
    ae40:	b	ae00 <PyNumber_FloorDivide@plt+0x6200>
    ae44:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    ae48:	ldr	x0, [x0, #4024]
    ae4c:	b	ae00 <PyNumber_FloorDivide@plt+0x6200>
    ae50:	ldrb	w1, [x0, #24]
    ae54:	cbz	w1, ae68 <PyNumber_FloorDivide@plt+0x6268>
    ae58:	adrp	x1, 24000 <PyInit__datetime@@Base+0x15118>
    ae5c:	ldr	x0, [x0, #32]
    ae60:	ldr	x1, [x1, #4024]
    ae64:	b	ae00 <PyNumber_FloorDivide@plt+0x6200>
    ae68:	adrp	x1, 24000 <PyInit__datetime@@Base+0x15118>
    ae6c:	ldr	x0, [x1, #4024]
    ae70:	ldr	x1, [x1, #4024]
    ae74:	b	ae00 <PyNumber_FloorDivide@plt+0x6200>
    ae78:	stp	x29, x30, [sp, #-48]!
    ae7c:	mov	x29, sp
    ae80:	stp	x19, x20, [sp, #16]
    ae84:	mov	x19, x0
    ae88:	ldrb	w0, [x0, #24]
    ae8c:	cbz	w0, aef0 <PyNumber_FloorDivide@plt+0x62f0>
    ae90:	adrp	x20, 24000 <PyInit__datetime@@Base+0x15118>
    ae94:	ldr	x0, [x19, #40]
    ae98:	ldr	x20, [x20, #4024]
    ae9c:	cmp	x0, x20
    aea0:	b.eq	aef0 <PyNumber_FloorDivide@plt+0x62f0>  // b.none
    aea4:	mov	x1, x19
    aea8:	bl	ae00 <PyNumber_FloorDivide@plt+0x6200>
    aeac:	mov	x1, x0
    aeb0:	cbz	x0, af40 <PyNumber_FloorDivide@plt+0x6340>
    aeb4:	cmp	x0, x20
    aeb8:	mov	w6, #0xffffffff            	// #-1
    aebc:	b.eq	aecc <PyNumber_FloorDivide@plt+0x62cc>  // b.none
    aec0:	ldr	x0, [x0, #24]
    aec4:	mov	w6, #0x1                   	// #1
    aec8:	cbz	x0, af20 <PyNumber_FloorDivide@plt+0x6320>
    aecc:	ldr	x0, [x1]
    aed0:	sub	x0, x0, #0x1
    aed4:	str	x0, [x1]
    aed8:	cbnz	x0, aef4 <PyNumber_FloorDivide@plt+0x62f4>
    aedc:	mov	x0, x1
    aee0:	str	w6, [sp, #44]
    aee4:	bl	4810 <_Py_Dealloc@plt>
    aee8:	ldr	w6, [sp, #44]
    aeec:	b	aef4 <PyNumber_FloorDivide@plt+0x62f4>
    aef0:	mov	w6, #0xffffffff            	// #-1
    aef4:	ldurh	w0, [x19, #25]
    aef8:	ldrb	w5, [x19, #31]
    aefc:	ldrb	w4, [x19, #30]
    af00:	rev16	w0, w0
    af04:	ldrb	w3, [x19, #29]
    af08:	and	w0, w0, #0xffff
    af0c:	ldrb	w2, [x19, #28]
    af10:	ldrb	w1, [x19, #27]
    af14:	ldp	x19, x20, [sp, #16]
    af18:	ldp	x29, x30, [sp], #48
    af1c:	b	7ac0 <PyNumber_FloorDivide@plt+0x2ec0>
    af20:	ldr	w0, [x1, #32]
    af24:	cmp	w0, #0x0
    af28:	ldr	x0, [x1]
    af2c:	cset	w6, ne  // ne = any
    af30:	sub	x0, x0, #0x1
    af34:	str	x0, [x1]
    af38:	cbnz	x0, aef4 <PyNumber_FloorDivide@plt+0x62f4>
    af3c:	b	aedc <PyNumber_FloorDivide@plt+0x62dc>
    af40:	ldp	x19, x20, [sp, #16]
    af44:	ldp	x29, x30, [sp], #48
    af48:	ret
    af4c:	nop
    af50:	sub	sp, sp, #0x70
    af54:	stp	x29, x30, [sp, #16]
    af58:	add	x29, sp, #0x10
    af5c:	stp	x21, x22, [sp, #48]
    af60:	mov	x21, x0
    af64:	ldr	x0, [x1, #8]
    af68:	stp	x19, x20, [sp, #32]
    af6c:	ldr	x0, [x0, #168]
    af70:	tbz	w0, #28, b200 <PyNumber_FloorDivide@plt+0x6600>
    af74:	mov	x19, x1
    af78:	mov	x0, x1
    af7c:	bl	48d0 <PyUnicode_GetLength@plt>
    af80:	tbnz	x0, #63, b13c <PyNumber_FloorDivide@plt+0x653c>
    af84:	cmp	x0, #0xa
    af88:	b.le	b0d8 <PyNumber_FloorDivide@plt+0x64d8>
    af8c:	ldrb	w0, [x19, #32]
    af90:	and	w1, w0, #0x1c
    af94:	cmp	w1, #0x4
    af98:	b.eq	b0d8 <PyNumber_FloorDivide@plt+0x64d8>  // b.none
    af9c:	cmp	w1, #0x8
    afa0:	and	w1, w0, #0x20
    afa4:	b.eq	b0ac <PyNumber_FloorDivide@plt+0x64ac>  // b.none
    afa8:	cbz	w1, b17c <PyNumber_FloorDivide@plt+0x657c>
    afac:	ands	w0, w0, #0x40
    afb0:	add	x2, x19, #0x58
    afb4:	add	x1, x19, #0x70
    afb8:	mov	w3, #0xd7ff                	// #55295
    afbc:	csel	x4, x1, x2, eq  // eq = none
    afc0:	cmp	w0, #0x0
    afc4:	csel	x0, x1, x2, eq  // eq = none
    afc8:	ldr	w4, [x4]
    afcc:	cmp	w4, w3
    afd0:	b.ls	b0d8 <PyNumber_FloorDivide@plt+0x64d8>  // b.plast
    afd4:	ldr	w1, [x0]
    afd8:	mov	w0, #0xdfff                	// #57343
    afdc:	cmp	w1, w0
    afe0:	b.hi	b0d8 <PyNumber_FloorDivide@plt+0x64d8>  // b.pmore
    afe4:	mov	x0, x19
    afe8:	bl	47a0 <_PyUnicode_Copy@plt>
    afec:	mov	x20, x0
    aff0:	cbz	x0, b13c <PyNumber_FloorDivide@plt+0x653c>
    aff4:	mov	w2, #0x54                  	// #84
    aff8:	mov	x1, #0xa                   	// #10
    affc:	bl	4860 <PyUnicode_WriteChar@plt>
    b000:	cbnz	w0, b12c <PyNumber_FloorDivide@plt+0x652c>
    b004:	add	x1, sp, #0x68
    b008:	mov	x0, x20
    b00c:	bl	4b40 <PyUnicode_AsUTF8AndSize@plt>
    b010:	mov	x8, x0
    b014:	cbz	x0, b0fc <PyNumber_FloorDivide@plt+0x64fc>
    b018:	add	x3, sp, #0x4c
    b01c:	add	x2, sp, #0x48
    b020:	add	x1, sp, #0x44
    b024:	stp	wzr, wzr, [sp, #68]
    b028:	stp	wzr, wzr, [sp, #76]
    b02c:	stp	wzr, wzr, [sp, #84]
    b030:	stp	wzr, wzr, [sp, #92]
    b034:	str	wzr, [sp, #100]
    b038:	bl	4f20 <PyNumber_FloorDivide@plt+0x320>
    b03c:	cbnz	w0, b080 <PyNumber_FloorDivide@plt+0x6480>
    b040:	ldr	x1, [sp, #104]
    b044:	cmp	x1, #0xa
    b048:	b.le	b198 <PyNumber_FloorDivide@plt+0x6598>
    b04c:	ldrb	w0, [x8, #10]
    b050:	tbnz	w0, #7, b2c0 <PyNumber_FloorDivide@plt+0x66c0>
    b054:	add	x0, x8, #0xb
    b058:	mov	x2, #0xb                   	// #11
    b05c:	sub	x1, x1, x2
    b060:	add	x7, sp, #0x64
    b064:	add	x6, sp, #0x60
    b068:	add	x5, sp, #0x5c
    b06c:	add	x4, sp, #0x58
    b070:	add	x3, sp, #0x54
    b074:	add	x2, sp, #0x50
    b078:	str	x1, [sp, #104]
    b07c:	bl	5108 <PyNumber_FloorDivide@plt+0x508>
    b080:	tbnz	w0, #31, b110 <PyNumber_FloorDivide@plt+0x6510>
    b084:	cmp	w0, #0x1
    b088:	b.ne	b198 <PyNumber_FloorDivide@plt+0x6598>  // b.any
    b08c:	ldr	w1, [sp, #96]
    b090:	cbnz	w1, b26c <PyNumber_FloorDivide@plt+0x666c>
    b094:	adrp	x0, 26000 <PyInit__datetime@@Base+0x17118>
    b098:	ldr	x22, [x0, #3960]
    b09c:	ldr	x0, [x22]
    b0a0:	add	x0, x0, #0x1
    b0a4:	str	x0, [x22]
    b0a8:	b	b1b0 <PyNumber_FloorDivide@plt+0x65b0>
    b0ac:	cbz	w1, b234 <PyNumber_FloorDivide@plt+0x6634>
    b0b0:	ands	w0, w0, #0x40
    b0b4:	add	x2, x19, #0x44
    b0b8:	add	x1, x19, #0x5c
    b0bc:	mov	w3, #0xd7ff                	// #55295
    b0c0:	csel	x4, x1, x2, eq  // eq = none
    b0c4:	cmp	w0, #0x0
    b0c8:	csel	x0, x1, x2, eq  // eq = none
    b0cc:	ldrh	w4, [x4]
    b0d0:	cmp	w4, w3
    b0d4:	b.hi	b24c <PyNumber_FloorDivide@plt+0x664c>  // b.pmore
    b0d8:	ldr	x0, [x19]
    b0dc:	mov	x20, x19
    b0e0:	add	x1, sp, #0x68
    b0e4:	add	x0, x0, #0x1
    b0e8:	str	x0, [x19]
    b0ec:	mov	x0, x20
    b0f0:	bl	4b40 <PyUnicode_AsUTF8AndSize@plt>
    b0f4:	mov	x8, x0
    b0f8:	cbnz	x0, b018 <PyNumber_FloorDivide@plt+0x6418>
    b0fc:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    b100:	ldr	x0, [x0, #4032]
    b104:	ldr	x0, [x0]
    b108:	bl	48a0 <PyErr_ExceptionMatches@plt>
    b10c:	cbz	w0, b12c <PyNumber_FloorDivide@plt+0x652c>
    b110:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    b114:	adrp	x1, 10000 <PyInit__datetime@@Base+0x1118>
    b118:	mov	x2, x19
    b11c:	add	x1, x1, #0xd0
    b120:	ldr	x0, [x0, #3968]
    b124:	ldr	x0, [x0]
    b128:	bl	4b60 <PyErr_Format@plt>
    b12c:	ldr	x0, [x20]
    b130:	sub	x0, x0, #0x1
    b134:	str	x0, [x20]
    b138:	cbz	x0, b158 <PyNumber_FloorDivide@plt+0x6558>
    b13c:	mov	x19, #0x0                   	// #0
    b140:	mov	x0, x19
    b144:	ldp	x29, x30, [sp, #16]
    b148:	ldp	x19, x20, [sp, #32]
    b14c:	ldp	x21, x22, [sp, #48]
    b150:	add	sp, sp, #0x70
    b154:	ret
    b158:	mov	x0, x20
    b15c:	mov	x19, #0x0                   	// #0
    b160:	bl	4810 <_Py_Dealloc@plt>
    b164:	mov	x0, x19
    b168:	ldp	x29, x30, [sp, #16]
    b16c:	ldp	x19, x20, [sp, #32]
    b170:	ldp	x21, x22, [sp, #48]
    b174:	add	sp, sp, #0x70
    b178:	ret
    b17c:	ldr	x0, [x19, #72]
    b180:	mov	w1, #0xd7ff                	// #55295
    b184:	add	x0, x0, #0x28
    b188:	ldr	w2, [x0]
    b18c:	cmp	w2, w1
    b190:	b.hi	afd4 <PyNumber_FloorDivide@plt+0x63d4>  // b.pmore
    b194:	b	b0d8 <PyNumber_FloorDivide@plt+0x64d8>
    b198:	adrp	x1, 24000 <PyInit__datetime@@Base+0x15118>
    b19c:	ldr	x1, [x1, #4024]
    b1a0:	mov	x22, x1
    b1a4:	ldr	x0, [x1]
    b1a8:	add	x0, x0, #0x1
    b1ac:	str	x0, [x1]
    b1b0:	ldp	w0, w1, [sp, #68]
    b1b4:	str	wzr, [sp]
    b1b8:	ldp	w2, w3, [sp, #76]
    b1bc:	str	x21, [sp, #8]
    b1c0:	ldp	w4, w5, [sp, #84]
    b1c4:	mov	x7, x22
    b1c8:	ldr	w6, [sp, #92]
    b1cc:	bl	98b0 <PyNumber_FloorDivide@plt+0x4cb0>
    b1d0:	mov	x19, x0
    b1d4:	ldr	x1, [x22]
    b1d8:	sub	x0, x1, #0x1
    b1dc:	str	x0, [x22]
    b1e0:	cbz	x0, b260 <PyNumber_FloorDivide@plt+0x6660>
    b1e4:	ldr	x0, [x20]
    b1e8:	sub	x0, x0, #0x1
    b1ec:	str	x0, [x20]
    b1f0:	cbnz	x0, b140 <PyNumber_FloorDivide@plt+0x6540>
    b1f4:	mov	x0, x20
    b1f8:	bl	4810 <_Py_Dealloc@plt>
    b1fc:	b	b140 <PyNumber_FloorDivide@plt+0x6540>
    b200:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    b204:	mov	x19, #0x0                   	// #0
    b208:	adrp	x1, 10000 <PyInit__datetime@@Base+0x1118>
    b20c:	add	x1, x1, #0xa8
    b210:	ldr	x0, [x0, #3976]
    b214:	ldr	x0, [x0]
    b218:	bl	4880 <PyErr_SetString@plt>
    b21c:	mov	x0, x19
    b220:	ldp	x29, x30, [sp, #16]
    b224:	ldp	x19, x20, [sp, #32]
    b228:	ldp	x21, x22, [sp, #48]
    b22c:	add	sp, sp, #0x70
    b230:	ret
    b234:	ldr	x0, [x19, #72]
    b238:	mov	w1, #0xd7ff                	// #55295
    b23c:	add	x0, x0, #0x14
    b240:	ldrh	w2, [x0]
    b244:	cmp	w2, w1
    b248:	b.ls	b0d8 <PyNumber_FloorDivide@plt+0x64d8>  // b.plast
    b24c:	ldrh	w1, [x0]
    b250:	mov	w0, #0xdfff                	// #57343
    b254:	cmp	w1, w0
    b258:	b.ls	afe4 <PyNumber_FloorDivide@plt+0x63e4>  // b.plast
    b25c:	b	b0d8 <PyNumber_FloorDivide@plt+0x64d8>
    b260:	mov	x0, x22
    b264:	bl	4810 <_Py_Dealloc@plt>
    b268:	b	b1e4 <PyNumber_FloorDivide@plt+0x65e4>
    b26c:	ldr	w2, [sp, #100]
    b270:	mov	w3, w0
    b274:	adrp	x4, 25000 <PyInit__datetime@@Base+0x16118>
    b278:	mov	w0, #0x0                   	// #0
    b27c:	add	x4, x4, #0x298
    b280:	bl	5500 <PyNumber_FloorDivide@plt+0x900>
    b284:	mov	x19, x0
    b288:	cbz	x0, b12c <PyNumber_FloorDivide@plt+0x652c>
    b28c:	mov	x1, #0x0                   	// #0
    b290:	bl	8360 <PyNumber_FloorDivide@plt+0x3760>
    b294:	ldr	x1, [x19]
    b298:	mov	x22, x0
    b29c:	sub	x0, x1, #0x1
    b2a0:	str	x0, [x19]
    b2a4:	cbz	x0, b2b0 <PyNumber_FloorDivide@plt+0x66b0>
    b2a8:	cbz	x22, b12c <PyNumber_FloorDivide@plt+0x652c>
    b2ac:	b	b1b0 <PyNumber_FloorDivide@plt+0x65b0>
    b2b0:	mov	x0, x19
    b2b4:	bl	4810 <_Py_Dealloc@plt>
    b2b8:	cbz	x22, b12c <PyNumber_FloorDivide@plt+0x652c>
    b2bc:	b	b1b0 <PyNumber_FloorDivide@plt+0x65b0>
    b2c0:	and	w0, w0, #0xf0
    b2c4:	cmp	w0, #0xe0
    b2c8:	b.eq	b2e0 <PyNumber_FloorDivide@plt+0x66e0>  // b.none
    b2cc:	cmp	w0, #0xf0
    b2d0:	b.eq	b2ec <PyNumber_FloorDivide@plt+0x66ec>  // b.none
    b2d4:	add	x0, x8, #0xc
    b2d8:	mov	x2, #0xc                   	// #12
    b2dc:	b	b05c <PyNumber_FloorDivide@plt+0x645c>
    b2e0:	add	x0, x8, #0xd
    b2e4:	mov	x2, #0xd                   	// #13
    b2e8:	b	b05c <PyNumber_FloorDivide@plt+0x645c>
    b2ec:	add	x0, x8, #0xe
    b2f0:	mov	x2, #0xe                   	// #14
    b2f4:	b	b05c <PyNumber_FloorDivide@plt+0x645c>
    b2f8:	stp	x29, x30, [sp, #-32]!
    b2fc:	mov	x29, sp
    b300:	stp	x19, x20, [sp, #16]
    b304:	adrp	x20, 24000 <PyInit__datetime@@Base+0x15118>
    b308:	ldr	x20, [x20, #4024]
    b30c:	cmp	x0, x20
    b310:	b.eq	b358 <PyNumber_FloorDivide@plt+0x6758>  // b.none
    b314:	mov	x2, x1
    b318:	adrp	x1, 25000 <PyInit__datetime@@Base+0x16118>
    b31c:	add	x1, x1, #0xab8
    b320:	mov	x3, #0x0                   	// #0
    b324:	add	x1, x1, #0x3f8
    b328:	bl	4ae0 <_PyObject_CallMethodIdObjArgs@plt>
    b32c:	mov	x19, x0
    b330:	cbz	x0, b37c <PyNumber_FloorDivide@plt+0x677c>
    b334:	cmp	x0, x20
    b338:	b.eq	b348 <PyNumber_FloorDivide@plt+0x6748>  // b.none
    b33c:	ldr	x0, [x0, #8]
    b340:	ldr	x1, [x0, #168]
    b344:	tbz	w1, #28, b390 <PyNumber_FloorDivide@plt+0x6790>
    b348:	mov	x0, x19
    b34c:	ldp	x19, x20, [sp, #16]
    b350:	ldp	x29, x30, [sp], #32
    b354:	ret
    b358:	mov	x3, x0
    b35c:	mov	x19, x0
    b360:	ldr	x0, [x0]
    b364:	add	x0, x0, #0x1
    b368:	str	x0, [x3]
    b36c:	mov	x0, x19
    b370:	ldp	x19, x20, [sp, #16]
    b374:	ldp	x29, x30, [sp], #32
    b378:	ret
    b37c:	mov	x19, #0x0                   	// #0
    b380:	mov	x0, x19
    b384:	ldp	x19, x20, [sp, #16]
    b388:	ldp	x29, x30, [sp], #32
    b38c:	ret
    b390:	adrp	x3, 24000 <PyInit__datetime@@Base+0x15118>
    b394:	adrp	x1, 10000 <PyInit__datetime@@Base+0x1118>
    b398:	ldr	x2, [x0, #24]
    b39c:	add	x1, x1, #0x238
    b3a0:	ldr	x3, [x3, #3976]
    b3a4:	ldr	x0, [x3]
    b3a8:	bl	4b60 <PyErr_Format@plt>
    b3ac:	ldr	x0, [x19]
    b3b0:	sub	x0, x0, #0x1
    b3b4:	str	x0, [x19]
    b3b8:	cbnz	x0, b37c <PyNumber_FloorDivide@plt+0x677c>
    b3bc:	mov	x0, x19
    b3c0:	mov	x19, #0x0                   	// #0
    b3c4:	bl	4810 <_Py_Dealloc@plt>
    b3c8:	b	b348 <PyNumber_FloorDivide@plt+0x6748>
    b3cc:	nop
    b3d0:	ldrb	w1, [x0, #24]
    b3d4:	cbz	w1, b3e8 <PyNumber_FloorDivide@plt+0x67e8>
    b3d8:	adrp	x1, 24000 <PyInit__datetime@@Base+0x15118>
    b3dc:	ldr	x0, [x0, #32]
    b3e0:	ldr	x1, [x1, #4024]
    b3e4:	b	b2f8 <PyNumber_FloorDivide@plt+0x66f8>
    b3e8:	adrp	x1, 24000 <PyInit__datetime@@Base+0x15118>
    b3ec:	ldr	x0, [x1, #4024]
    b3f0:	ldr	x1, [x1, #4024]
    b3f4:	b	b2f8 <PyNumber_FloorDivide@plt+0x66f8>
    b3f8:	mov	x1, x0
    b3fc:	ldrb	w0, [x0, #24]
    b400:	cbz	w0, b40c <PyNumber_FloorDivide@plt+0x680c>
    b404:	ldr	x0, [x1, #40]
    b408:	b	b2f8 <PyNumber_FloorDivide@plt+0x66f8>
    b40c:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    b410:	ldr	x0, [x0, #4024]
    b414:	b	b2f8 <PyNumber_FloorDivide@plt+0x66f8>
    b418:	stp	x29, x30, [sp, #-48]!
    b41c:	mov	x29, sp
    b420:	ldr	x2, [x0, #16]
    b424:	stp	x19, x20, [sp, #16]
    b428:	mov	x20, x0
    b42c:	sub	x2, x2, #0x1
    b430:	str	x21, [sp, #32]
    b434:	mov	x21, x1
    b438:	mov	x1, #0x0                   	// #0
    b43c:	bl	4bf0 <PyUnicode_Substring@plt>
    b440:	mov	x19, x0
    b444:	ldr	x2, [x20]
    b448:	sub	x0, x2, #0x1
    b44c:	str	x0, [x20]
    b450:	cbz	x0, b494 <PyNumber_FloorDivide@plt+0x6894>
    b454:	cbz	x19, b4a0 <PyNumber_FloorDivide@plt+0x68a0>
    b458:	mov	x1, x19
    b45c:	mov	x2, x21
    b460:	adrp	x0, 10000 <PyInit__datetime@@Base+0x1118>
    b464:	add	x0, x0, #0x270
    b468:	bl	4700 <PyUnicode_FromFormat@plt>
    b46c:	mov	x20, x0
    b470:	ldr	x1, [x19]
    b474:	sub	x1, x1, #0x1
    b478:	str	x1, [x19]
    b47c:	cbz	x1, b4b8 <PyNumber_FloorDivide@plt+0x68b8>
    b480:	mov	x0, x20
    b484:	ldp	x19, x20, [sp, #16]
    b488:	ldr	x21, [sp, #32]
    b48c:	ldp	x29, x30, [sp], #48
    b490:	ret
    b494:	mov	x0, x20
    b498:	bl	4810 <_Py_Dealloc@plt>
    b49c:	cbnz	x19, b458 <PyNumber_FloorDivide@plt+0x6858>
    b4a0:	mov	x20, #0x0                   	// #0
    b4a4:	mov	x0, x20
    b4a8:	ldp	x19, x20, [sp, #16]
    b4ac:	ldr	x21, [sp, #32]
    b4b0:	ldp	x29, x30, [sp], #48
    b4b4:	ret
    b4b8:	mov	x0, x19
    b4bc:	bl	4810 <_Py_Dealloc@plt>
    b4c0:	mov	x0, x20
    b4c4:	ldp	x19, x20, [sp, #16]
    b4c8:	ldr	x21, [sp, #32]
    b4cc:	ldp	x29, x30, [sp], #48
    b4d0:	ret
    b4d4:	nop
    b4d8:	stp	x29, x30, [sp, #-48]!
    b4dc:	mov	x29, sp
    b4e0:	ldr	x2, [x0, #16]
    b4e4:	stp	x19, x20, [sp, #16]
    b4e8:	mov	x20, x0
    b4ec:	sub	x2, x2, #0x1
    b4f0:	str	x21, [sp, #32]
    b4f4:	mov	w21, w1
    b4f8:	mov	x1, #0x0                   	// #0
    b4fc:	bl	4bf0 <PyUnicode_Substring@plt>
    b500:	mov	x19, x0
    b504:	ldr	x2, [x20]
    b508:	sub	x0, x2, #0x1
    b50c:	str	x0, [x20]
    b510:	cbz	x0, b554 <PyNumber_FloorDivide@plt+0x6954>
    b514:	cbz	x19, b560 <PyNumber_FloorDivide@plt+0x6960>
    b518:	mov	x1, x19
    b51c:	mov	w2, w21
    b520:	adrp	x0, 10000 <PyInit__datetime@@Base+0x1118>
    b524:	add	x0, x0, #0x280
    b528:	bl	4700 <PyUnicode_FromFormat@plt>
    b52c:	mov	x20, x0
    b530:	ldr	x1, [x19]
    b534:	sub	x1, x1, #0x1
    b538:	str	x1, [x19]
    b53c:	cbz	x1, b578 <PyNumber_FloorDivide@plt+0x6978>
    b540:	mov	x0, x20
    b544:	ldp	x19, x20, [sp, #16]
    b548:	ldr	x21, [sp, #32]
    b54c:	ldp	x29, x30, [sp], #48
    b550:	ret
    b554:	mov	x0, x20
    b558:	bl	4810 <_Py_Dealloc@plt>
    b55c:	cbnz	x19, b518 <PyNumber_FloorDivide@plt+0x6918>
    b560:	mov	x20, #0x0                   	// #0
    b564:	mov	x0, x20
    b568:	ldp	x19, x20, [sp, #16]
    b56c:	ldr	x21, [sp, #32]
    b570:	ldp	x29, x30, [sp], #48
    b574:	ret
    b578:	mov	x0, x19
    b57c:	bl	4810 <_Py_Dealloc@plt>
    b580:	mov	x0, x20
    b584:	ldp	x19, x20, [sp, #16]
    b588:	ldr	x21, [sp, #32]
    b58c:	ldp	x29, x30, [sp], #48
    b590:	ret
    b594:	nop
    b598:	stp	x29, x30, [sp, #-32]!
    b59c:	mov	x29, sp
    b5a0:	stp	x19, x20, [sp, #16]
    b5a4:	mov	x19, x0
    b5a8:	ldrb	w0, [x0, #29]
    b5ac:	ldrb	w5, [x19, #28]
    b5b0:	ldr	x1, [x19, #8]
    b5b4:	lsl	w0, w0, #8
    b5b8:	ldrb	w3, [x19, #30]
    b5bc:	orr	w5, w0, w5, lsl #16
    b5c0:	ldrb	w2, [x19, #25]
    b5c4:	orr	w5, w5, w3
    b5c8:	ldrb	w4, [x19, #27]
    b5cc:	ldrb	w3, [x19, #26]
    b5d0:	ldrb	w20, [x19, #31]
    b5d4:	ldr	x1, [x1, #24]
    b5d8:	cbnz	w5, b648 <PyNumber_FloorDivide@plt+0x6a48>
    b5dc:	cbz	w4, b628 <PyNumber_FloorDivide@plt+0x6a28>
    b5e0:	adrp	x0, f000 <PyInit__datetime@@Base+0x118>
    b5e4:	add	x0, x0, #0x968
    b5e8:	bl	4700 <PyUnicode_FromFormat@plt>
    b5ec:	cbz	x0, b61c <PyNumber_FloorDivide@plt+0x6a1c>
    b5f0:	ldrb	w1, [x19, #24]
    b5f4:	cbz	w1, b610 <PyNumber_FloorDivide@plt+0x6a10>
    b5f8:	adrp	x2, 24000 <PyInit__datetime@@Base+0x15118>
    b5fc:	ldr	x1, [x19, #32]
    b600:	ldr	x2, [x2, #4024]
    b604:	cmp	x1, x2
    b608:	b.eq	b610 <PyNumber_FloorDivide@plt+0x6a10>  // b.none
    b60c:	bl	b418 <PyNumber_FloorDivide@plt+0x6818>
    b610:	cmp	x0, #0x0
    b614:	ccmp	w20, #0x0, #0x4, ne  // ne = any
    b618:	b.ne	b638 <PyNumber_FloorDivide@plt+0x6a38>  // b.any
    b61c:	ldp	x19, x20, [sp, #16]
    b620:	ldp	x29, x30, [sp], #32
    b624:	ret
    b628:	adrp	x0, 10000 <PyInit__datetime@@Base+0x1118>
    b62c:	add	x0, x0, #0x2a8
    b630:	bl	4700 <PyUnicode_FromFormat@plt>
    b634:	b	b5ec <PyNumber_FloorDivide@plt+0x69ec>
    b638:	mov	w1, w20
    b63c:	ldp	x19, x20, [sp, #16]
    b640:	ldp	x29, x30, [sp], #32
    b644:	b	b4d8 <PyNumber_FloorDivide@plt+0x68d8>
    b648:	adrp	x0, 10000 <PyInit__datetime@@Base+0x1118>
    b64c:	add	x0, x0, #0x290
    b650:	bl	4700 <PyUnicode_FromFormat@plt>
    b654:	b	b5ec <PyNumber_FloorDivide@plt+0x69ec>
    b658:	sub	sp, sp, #0x30
    b65c:	stp	x29, x30, [sp, #16]
    b660:	add	x29, sp, #0x10
    b664:	str	x19, [sp, #32]
    b668:	mov	x19, x0
    b66c:	ldrb	w1, [x0, #33]
    b670:	ldrb	w0, [x0, #32]
    b674:	ldr	x8, [x19, #8]
    b678:	lsl	w1, w1, #8
    b67c:	ldurh	w2, [x19, #25]
    b680:	orr	w0, w1, w0, lsl #16
    b684:	ldrb	w1, [x19, #34]
    b688:	rev16	w2, w2
    b68c:	ldrb	w7, [x19, #31]
    b690:	orr	w0, w0, w1
    b694:	ldrb	w3, [x19, #27]
    b698:	ldrb	w4, [x19, #28]
    b69c:	and	w2, w2, #0xffff
    b6a0:	ldrb	w5, [x19, #29]
    b6a4:	ldrb	w6, [x19, #30]
    b6a8:	ldr	x1, [x8, #24]
    b6ac:	cbnz	w0, b72c <PyNumber_FloorDivide@plt+0x6b2c>
    b6b0:	cbz	w7, b6f8 <PyNumber_FloorDivide@plt+0x6af8>
    b6b4:	adrp	x0, 10000 <PyInit__datetime@@Base+0x1118>
    b6b8:	add	x0, x0, #0x2d8
    b6bc:	bl	4700 <PyUnicode_FromFormat@plt>
    b6c0:	cbz	x0, b708 <PyNumber_FloorDivide@plt+0x6b08>
    b6c4:	ldrb	w1, [x19, #35]
    b6c8:	cbnz	w1, b71c <PyNumber_FloorDivide@plt+0x6b1c>
    b6cc:	ldrb	w1, [x19, #24]
    b6d0:	cbz	w1, b70c <PyNumber_FloorDivide@plt+0x6b0c>
    b6d4:	adrp	x2, 24000 <PyInit__datetime@@Base+0x15118>
    b6d8:	ldr	x1, [x19, #40]
    b6dc:	ldr	x2, [x2, #4024]
    b6e0:	cmp	x1, x2
    b6e4:	b.eq	b70c <PyNumber_FloorDivide@plt+0x6b0c>  // b.none
    b6e8:	ldp	x29, x30, [sp, #16]
    b6ec:	ldr	x19, [sp, #32]
    b6f0:	add	sp, sp, #0x30
    b6f4:	b	b418 <PyNumber_FloorDivide@plt+0x6818>
    b6f8:	adrp	x0, 10000 <PyInit__datetime@@Base+0x1118>
    b6fc:	add	x0, x0, #0x2f8
    b700:	bl	4700 <PyUnicode_FromFormat@plt>
    b704:	cbnz	x0, b6c4 <PyNumber_FloorDivide@plt+0x6ac4>
    b708:	mov	x0, #0x0                   	// #0
    b70c:	ldp	x29, x30, [sp, #16]
    b710:	ldr	x19, [sp, #32]
    b714:	add	sp, sp, #0x30
    b718:	ret
    b71c:	bl	b4d8 <PyNumber_FloorDivide@plt+0x68d8>
    b720:	cbnz	x0, b6cc <PyNumber_FloorDivide@plt+0x6acc>
    b724:	mov	x0, #0x0                   	// #0
    b728:	b	b70c <PyNumber_FloorDivide@plt+0x6b0c>
    b72c:	str	w0, [sp]
    b730:	adrp	x0, 10000 <PyInit__datetime@@Base+0x1118>
    b734:	add	x0, x0, #0x2b8
    b738:	bl	4700 <PyUnicode_FromFormat@plt>
    b73c:	b	b6c0 <PyNumber_FloorDivide@plt+0x6ac0>
    b740:	stp	x29, x30, [sp, #-48]!
    b744:	mov	x29, sp
    b748:	stp	x19, x20, [sp, #16]
    b74c:	mov	x19, x0
    b750:	mov	x20, x1
    b754:	ldr	x0, [x0, #8]
    b758:	stp	x21, x22, [sp, #32]
    b75c:	adrp	x22, 25000 <PyInit__datetime@@Base+0x16118>
    b760:	add	x2, x22, #0x298
    b764:	cmp	x0, x2
    b768:	b.eq	b778 <PyNumber_FloorDivide@plt+0x6b78>  // b.none
    b76c:	mov	x1, x2
    b770:	bl	4b30 <PyType_IsSubtype@plt>
    b774:	cbz	w0, b840 <PyNumber_FloorDivide@plt+0x6c40>
    b778:	ldr	x0, [x20, #8]
    b77c:	add	x1, x22, #0x298
    b780:	cmp	x0, x1
    b784:	b.eq	b790 <PyNumber_FloorDivide@plt+0x6b90>  // b.none
    b788:	bl	4b30 <PyType_IsSubtype@plt>
    b78c:	cbz	w0, b840 <PyNumber_FloorDivide@plt+0x6c40>
    b790:	mov	x0, x19
    b794:	bl	6e20 <PyNumber_FloorDivide@plt+0x2220>
    b798:	mov	x21, x0
    b79c:	cbz	x0, b87c <PyNumber_FloorDivide@plt+0x6c7c>
    b7a0:	mov	x0, x20
    b7a4:	bl	6e20 <PyNumber_FloorDivide@plt+0x2220>
    b7a8:	mov	x19, x0
    b7ac:	cbz	x0, b86c <PyNumber_FloorDivide@plt+0x6c6c>
    b7b0:	mov	x1, x0
    b7b4:	mov	x0, x21
    b7b8:	bl	66b8 <PyNumber_FloorDivide@plt+0x1ab8>
    b7bc:	mov	x20, x0
    b7c0:	ldr	x1, [x21]
    b7c4:	sub	x0, x1, #0x1
    b7c8:	str	x0, [x21]
    b7cc:	cbz	x0, b8a0 <PyNumber_FloorDivide@plt+0x6ca0>
    b7d0:	ldr	x0, [x19]
    b7d4:	sub	x0, x0, #0x1
    b7d8:	str	x0, [x19]
    b7dc:	cbz	x0, b894 <PyNumber_FloorDivide@plt+0x6c94>
    b7e0:	cbz	x20, b87c <PyNumber_FloorDivide@plt+0x6c7c>
    b7e4:	ldr	x0, [x20, #32]
    b7e8:	add	x1, x22, #0x298
    b7ec:	bl	6760 <PyNumber_FloorDivide@plt+0x1b60>
    b7f0:	mov	x21, x0
    b7f4:	cbz	x0, b8d4 <PyNumber_FloorDivide@plt+0x6cd4>
    b7f8:	ldr	x1, [x20, #24]
    b7fc:	mov	x2, x0
    b800:	mov	x0, #0x2                   	// #2
    b804:	bl	4bd0 <PyTuple_Pack@plt>
    b808:	mov	x19, x0
    b80c:	ldr	x1, [x21]
    b810:	sub	x0, x1, #0x1
    b814:	str	x0, [x21]
    b818:	cbz	x0, b8c8 <PyNumber_FloorDivide@plt+0x6cc8>
    b81c:	ldr	x0, [x20]
    b820:	sub	x0, x0, #0x1
    b824:	str	x0, [x20]
    b828:	cbz	x0, b8ac <PyNumber_FloorDivide@plt+0x6cac>
    b82c:	mov	x0, x19
    b830:	ldp	x19, x20, [sp, #16]
    b834:	ldp	x21, x22, [sp, #32]
    b838:	ldp	x29, x30, [sp], #48
    b83c:	ret
    b840:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    b844:	ldp	x21, x22, [sp, #32]
    b848:	ldr	x0, [x0, #3960]
    b84c:	mov	x19, x0
    b850:	ldr	x1, [x0]
    b854:	add	x1, x1, #0x1
    b858:	str	x1, [x0]
    b85c:	mov	x0, x19
    b860:	ldp	x19, x20, [sp, #16]
    b864:	ldp	x29, x30, [sp], #48
    b868:	ret
    b86c:	ldr	x0, [x21]
    b870:	sub	x0, x0, #0x1
    b874:	str	x0, [x21]
    b878:	cbz	x0, b8f4 <PyNumber_FloorDivide@plt+0x6cf4>
    b87c:	mov	x19, #0x0                   	// #0
    b880:	mov	x0, x19
    b884:	ldp	x19, x20, [sp, #16]
    b888:	ldp	x21, x22, [sp, #32]
    b88c:	ldp	x29, x30, [sp], #48
    b890:	ret
    b894:	mov	x0, x19
    b898:	bl	4810 <_Py_Dealloc@plt>
    b89c:	b	b7e0 <PyNumber_FloorDivide@plt+0x6be0>
    b8a0:	mov	x0, x21
    b8a4:	bl	4810 <_Py_Dealloc@plt>
    b8a8:	b	b7d0 <PyNumber_FloorDivide@plt+0x6bd0>
    b8ac:	mov	x0, x20
    b8b0:	bl	4810 <_Py_Dealloc@plt>
    b8b4:	mov	x0, x19
    b8b8:	ldp	x19, x20, [sp, #16]
    b8bc:	ldp	x21, x22, [sp, #32]
    b8c0:	ldp	x29, x30, [sp], #48
    b8c4:	ret
    b8c8:	mov	x0, x21
    b8cc:	bl	4810 <_Py_Dealloc@plt>
    b8d0:	b	b81c <PyNumber_FloorDivide@plt+0x6c1c>
    b8d4:	ldr	x0, [x20]
    b8d8:	sub	x0, x0, #0x1
    b8dc:	str	x0, [x20]
    b8e0:	cbnz	x0, b87c <PyNumber_FloorDivide@plt+0x6c7c>
    b8e4:	mov	x0, x20
    b8e8:	mov	x19, #0x0                   	// #0
    b8ec:	bl	4810 <_Py_Dealloc@plt>
    b8f0:	b	b82c <PyNumber_FloorDivide@plt+0x6c2c>
    b8f4:	mov	x0, x21
    b8f8:	bl	4810 <_Py_Dealloc@plt>
    b8fc:	b	b82c <PyNumber_FloorDivide@plt+0x6c2c>
    b900:	stp	x29, x30, [sp, #-48]!
    b904:	mov	x29, sp
    b908:	stp	x19, x20, [sp, #16]
    b90c:	mov	x19, x0
    b910:	mov	x20, x1
    b914:	ldr	x0, [x0, #8]
    b918:	stp	x21, x22, [sp, #32]
    b91c:	adrp	x22, 25000 <PyInit__datetime@@Base+0x16118>
    b920:	add	x2, x22, #0x298
    b924:	cmp	x0, x2
    b928:	b.eq	b938 <PyNumber_FloorDivide@plt+0x6d38>  // b.none
    b92c:	mov	x1, x2
    b930:	bl	4b30 <PyType_IsSubtype@plt>
    b934:	cbz	w0, b9d8 <PyNumber_FloorDivide@plt+0x6dd8>
    b938:	ldr	x0, [x20, #8]
    b93c:	add	x1, x22, #0x298
    b940:	cmp	x0, x1
    b944:	b.eq	b950 <PyNumber_FloorDivide@plt+0x6d50>  // b.none
    b948:	bl	4b30 <PyType_IsSubtype@plt>
    b94c:	cbz	w0, b9d8 <PyNumber_FloorDivide@plt+0x6dd8>
    b950:	mov	x0, x19
    b954:	bl	6e20 <PyNumber_FloorDivide@plt+0x2220>
    b958:	mov	x21, x0
    b95c:	cbz	x0, ba14 <PyNumber_FloorDivide@plt+0x6e14>
    b960:	mov	x0, x20
    b964:	bl	6e20 <PyNumber_FloorDivide@plt+0x2220>
    b968:	mov	x19, x0
    b96c:	cbz	x0, ba04 <PyNumber_FloorDivide@plt+0x6e04>
    b970:	mov	x1, x0
    b974:	mov	x0, x21
    b978:	bl	4980 <PyNumber_Remainder@plt>
    b97c:	mov	x20, x0
    b980:	ldr	x1, [x21]
    b984:	sub	x0, x1, #0x1
    b988:	str	x0, [x21]
    b98c:	cbz	x0, ba38 <PyNumber_FloorDivide@plt+0x6e38>
    b990:	ldr	x0, [x19]
    b994:	sub	x0, x0, #0x1
    b998:	str	x0, [x19]
    b99c:	cbz	x0, ba2c <PyNumber_FloorDivide@plt+0x6e2c>
    b9a0:	cbz	x20, ba14 <PyNumber_FloorDivide@plt+0x6e14>
    b9a4:	add	x1, x22, #0x298
    b9a8:	mov	x0, x20
    b9ac:	bl	6760 <PyNumber_FloorDivide@plt+0x1b60>
    b9b0:	mov	x19, x0
    b9b4:	ldr	x1, [x20]
    b9b8:	sub	x0, x1, #0x1
    b9bc:	str	x0, [x20]
    b9c0:	cbz	x0, ba44 <PyNumber_FloorDivide@plt+0x6e44>
    b9c4:	mov	x0, x19
    b9c8:	ldp	x19, x20, [sp, #16]
    b9cc:	ldp	x21, x22, [sp, #32]
    b9d0:	ldp	x29, x30, [sp], #48
    b9d4:	ret
    b9d8:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    b9dc:	ldp	x21, x22, [sp, #32]
    b9e0:	ldr	x0, [x0, #3960]
    b9e4:	mov	x19, x0
    b9e8:	ldr	x1, [x0]
    b9ec:	add	x1, x1, #0x1
    b9f0:	str	x1, [x0]
    b9f4:	mov	x0, x19
    b9f8:	ldp	x19, x20, [sp, #16]
    b9fc:	ldp	x29, x30, [sp], #48
    ba00:	ret
    ba04:	ldr	x0, [x21]
    ba08:	sub	x0, x0, #0x1
    ba0c:	str	x0, [x21]
    ba10:	cbz	x0, ba60 <PyNumber_FloorDivide@plt+0x6e60>
    ba14:	mov	x19, #0x0                   	// #0
    ba18:	mov	x0, x19
    ba1c:	ldp	x19, x20, [sp, #16]
    ba20:	ldp	x21, x22, [sp, #32]
    ba24:	ldp	x29, x30, [sp], #48
    ba28:	ret
    ba2c:	mov	x0, x19
    ba30:	bl	4810 <_Py_Dealloc@plt>
    ba34:	b	b9a0 <PyNumber_FloorDivide@plt+0x6da0>
    ba38:	mov	x0, x21
    ba3c:	bl	4810 <_Py_Dealloc@plt>
    ba40:	b	b990 <PyNumber_FloorDivide@plt+0x6d90>
    ba44:	mov	x0, x20
    ba48:	bl	4810 <_Py_Dealloc@plt>
    ba4c:	mov	x0, x19
    ba50:	ldp	x19, x20, [sp, #16]
    ba54:	ldp	x21, x22, [sp, #32]
    ba58:	ldp	x29, x30, [sp], #48
    ba5c:	ret
    ba60:	mov	x0, x21
    ba64:	bl	4810 <_Py_Dealloc@plt>
    ba68:	b	b9c4 <PyNumber_FloorDivide@plt+0x6dc4>
    ba6c:	nop
    ba70:	adrp	x4, 24000 <PyInit__datetime@@Base+0x15118>
    ba74:	mov	x2, x1
    ba78:	ldr	x4, [x4, #4024]
    ba7c:	cmp	x0, x4
    ba80:	b.eq	ba90 <PyNumber_FloorDivide@plt+0x6e90>  // b.none
    ba84:	adrp	x1, f000 <PyInit__datetime@@Base+0x118>
    ba88:	add	x1, x1, #0x830
    ba8c:	b	acd0 <PyNumber_FloorDivide@plt+0x60d0>
    ba90:	ldr	x1, [x0]
    ba94:	add	x1, x1, #0x1
    ba98:	str	x1, [x0]
    ba9c:	ret
    baa0:	mov	x1, x0
    baa4:	ldrb	w0, [x0, #24]
    baa8:	cbz	w0, bab4 <PyNumber_FloorDivide@plt+0x6eb4>
    baac:	ldr	x0, [x1, #40]
    bab0:	b	ba70 <PyNumber_FloorDivide@plt+0x6e70>
    bab4:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    bab8:	ldr	x0, [x0, #4024]
    babc:	b	ba70 <PyNumber_FloorDivide@plt+0x6e70>
    bac0:	ldrb	w1, [x0, #24]
    bac4:	cbz	w1, bad8 <PyNumber_FloorDivide@plt+0x6ed8>
    bac8:	adrp	x1, 24000 <PyInit__datetime@@Base+0x15118>
    bacc:	ldr	x0, [x0, #32]
    bad0:	ldr	x1, [x1, #4024]
    bad4:	b	ba70 <PyNumber_FloorDivide@plt+0x6e70>
    bad8:	adrp	x1, 24000 <PyInit__datetime@@Base+0x15118>
    badc:	ldr	x0, [x1, #4024]
    bae0:	ldr	x1, [x1, #4024]
    bae4:	b	ba70 <PyNumber_FloorDivide@plt+0x6e70>
    bae8:	stp	x29, x30, [sp, #-64]!
    baec:	adrp	x2, 25000 <PyInit__datetime@@Base+0x16118>
    baf0:	mov	x29, sp
    baf4:	stp	x19, x20, [sp, #16]
    baf8:	mov	x19, x1
    bafc:	mov	x20, x0
    bb00:	add	x1, x2, #0x298
    bb04:	ldr	x0, [x19, #8]
    bb08:	add	x1, x1, #0x1a0
    bb0c:	cmp	x0, x1
    bb10:	b.eq	bb1c <PyNumber_FloorDivide@plt+0x6f1c>  // b.none
    bb14:	bl	4b30 <PyType_IsSubtype@plt>
    bb18:	cbz	w0, bdb0 <PyNumber_FloorDivide@plt+0x71b0>
    bb1c:	ldrb	w0, [x19, #24]
    bb20:	cbnz	w0, bc70 <PyNumber_FloorDivide@plt+0x7070>
    bb24:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    bb28:	ldr	x0, [x0, #4024]
    bb2c:	cmp	x20, x0
    bb30:	b.ne	bc7c <PyNumber_FloorDivide@plt+0x707c>  // b.any
    bb34:	mov	x0, x20
    bb38:	mov	x1, x19
    bb3c:	stp	x21, x22, [sp, #32]
    bb40:	bl	ba70 <PyNumber_FloorDivide@plt+0x6e70>
    bb44:	mov	x22, x0
    bb48:	cbz	x0, bce0 <PyNumber_FloorDivide@plt+0x70e0>
    bb4c:	stp	x23, x24, [sp, #48]
    bb50:	adrp	x23, 24000 <PyInit__datetime@@Base+0x15118>
    bb54:	ldr	x0, [x23, #4024]
    bb58:	cmp	x22, x0
    bb5c:	b.eq	bca8 <PyNumber_FloorDivide@plt+0x70a8>  // b.none
    bb60:	ldrb	w1, [x19, #24]
    bb64:	cbz	w1, bb6c <PyNumber_FloorDivide@plt+0x6f6c>
    bb68:	ldr	x0, [x19, #40]
    bb6c:	mov	x1, x19
    bb70:	bl	ae00 <PyNumber_FloorDivide@plt+0x6200>
    bb74:	mov	x20, x0
    bb78:	cbz	x0, bcc0 <PyNumber_FloorDivide@plt+0x70c0>
    bb7c:	ldr	x0, [x23, #4024]
    bb80:	cmp	x20, x0
    bb84:	b.eq	bddc <PyNumber_FloorDivide@plt+0x71dc>  // b.none
    bb88:	mov	x1, x20
    bb8c:	mov	x0, x22
    bb90:	bl	86b0 <PyNumber_FloorDivide@plt+0x3ab0>
    bb94:	mov	x24, x0
    bb98:	cbz	x0, bcf8 <PyNumber_FloorDivide@plt+0x70f8>
    bb9c:	mov	x1, x0
    bba0:	mov	w2, #0x1                   	// #1
    bba4:	mov	x0, x19
    bba8:	bl	9e10 <PyNumber_FloorDivide@plt+0x5210>
    bbac:	mov	x21, x0
    bbb0:	cbz	x0, bcfc <PyNumber_FloorDivide@plt+0x70fc>
    bbb4:	ldr	x1, [x20]
    bbb8:	sub	x1, x1, #0x1
    bbbc:	str	x1, [x20]
    bbc0:	cbz	x1, bda4 <PyNumber_FloorDivide@plt+0x71a4>
    bbc4:	ldrb	w1, [x19, #24]
    bbc8:	ldr	x0, [x23, #4024]
    bbcc:	cbz	w1, bbd4 <PyNumber_FloorDivide@plt+0x6fd4>
    bbd0:	ldr	x0, [x19, #40]
    bbd4:	mov	x1, x21
    bbd8:	bl	ae00 <PyNumber_FloorDivide@plt+0x6200>
    bbdc:	mov	x20, x0
    bbe0:	cbz	x0, be40 <PyNumber_FloorDivide@plt+0x7240>
    bbe4:	ldr	x1, [x23, #4024]
    bbe8:	cmp	x0, x1
    bbec:	b.eq	be64 <PyNumber_FloorDivide@plt+0x7264>  // b.none
    bbf0:	ldr	x0, [x0, #24]
    bbf4:	cbnz	x0, bc00 <PyNumber_FloorDivide@plt+0x7000>
    bbf8:	ldr	w0, [x20, #32]
    bbfc:	cbz	w0, be2c <PyNumber_FloorDivide@plt+0x722c>
    bc00:	mov	x1, x20
    bc04:	mov	x0, x21
    bc08:	mov	w2, #0x1                   	// #1
    bc0c:	bl	9e10 <PyNumber_FloorDivide@plt+0x5210>
    bc10:	ldr	x1, [x21]
    bc14:	mov	x19, x0
    bc18:	sub	x0, x1, #0x1
    bc1c:	str	x0, [x21]
    bc20:	cbz	x0, be34 <PyNumber_FloorDivide@plt+0x7234>
    bc24:	cbz	x19, bcf8 <PyNumber_FloorDivide@plt+0x70f8>
    bc28:	ldr	x0, [x24]
    bc2c:	sub	x0, x0, #0x1
    bc30:	str	x0, [x24]
    bc34:	cbz	x0, be20 <PyNumber_FloorDivide@plt+0x7220>
    bc38:	ldr	x0, [x20]
    bc3c:	sub	x0, x0, #0x1
    bc40:	str	x0, [x20]
    bc44:	cbz	x0, be14 <PyNumber_FloorDivide@plt+0x7214>
    bc48:	ldr	x0, [x22]
    bc4c:	sub	x0, x0, #0x1
    bc50:	str	x0, [x22]
    bc54:	cbz	x0, be00 <PyNumber_FloorDivide@plt+0x7200>
    bc58:	mov	x0, x19
    bc5c:	ldp	x19, x20, [sp, #16]
    bc60:	ldp	x21, x22, [sp, #32]
    bc64:	ldp	x23, x24, [sp, #48]
    bc68:	ldp	x29, x30, [sp], #64
    bc6c:	ret
    bc70:	ldr	x0, [x19, #40]
    bc74:	cmp	x0, x20
    bc78:	b.eq	bb34 <PyNumber_FloorDivide@plt+0x6f34>  // b.none
    bc7c:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    bc80:	mov	x19, #0x0                   	// #0
    bc84:	adrp	x1, 10000 <PyInit__datetime@@Base+0x1118>
    bc88:	add	x1, x1, #0x118
    bc8c:	ldr	x0, [x0, #3968]
    bc90:	ldr	x0, [x0]
    bc94:	bl	4880 <PyErr_SetString@plt>
    bc98:	mov	x0, x19
    bc9c:	ldp	x19, x20, [sp, #16]
    bca0:	ldp	x29, x30, [sp], #64
    bca4:	ret
    bca8:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    bcac:	adrp	x1, 10000 <PyInit__datetime@@Base+0x1118>
    bcb0:	add	x1, x1, #0x310
    bcb4:	ldr	x0, [x0, #3968]
    bcb8:	ldr	x0, [x0]
    bcbc:	bl	4880 <PyErr_SetString@plt>
    bcc0:	ldr	x0, [x22]
    bcc4:	sub	x0, x0, #0x1
    bcc8:	str	x0, [x22]
    bccc:	cbnz	x0, bd44 <PyNumber_FloorDivide@plt+0x7144>
    bcd0:	mov	x0, x22
    bcd4:	bl	4810 <_Py_Dealloc@plt>
    bcd8:	ldp	x23, x24, [sp, #48]
    bcdc:	nop
    bce0:	mov	x19, #0x0                   	// #0
    bce4:	ldp	x21, x22, [sp, #32]
    bce8:	mov	x0, x19
    bcec:	ldp	x19, x20, [sp, #16]
    bcf0:	ldp	x29, x30, [sp], #64
    bcf4:	ret
    bcf8:	mov	x21, #0x0                   	// #0
    bcfc:	ldr	x1, [x22]
    bd00:	sub	x1, x1, #0x1
    bd04:	str	x1, [x22]
    bd08:	cbz	x1, bdd0 <PyNumber_FloorDivide@plt+0x71d0>
    bd0c:	ldr	x1, [x20]
    bd10:	sub	x1, x1, #0x1
    bd14:	str	x1, [x20]
    bd18:	cbz	x1, bd70 <PyNumber_FloorDivide@plt+0x7170>
    bd1c:	cbz	x24, bd30 <PyNumber_FloorDivide@plt+0x7130>
    bd20:	ldr	x1, [x24]
    bd24:	sub	x1, x1, #0x1
    bd28:	str	x1, [x24]
    bd2c:	cbz	x1, bd98 <PyNumber_FloorDivide@plt+0x7198>
    bd30:	cbz	x21, bd44 <PyNumber_FloorDivide@plt+0x7144>
    bd34:	ldr	x0, [x21]
    bd38:	sub	x0, x0, #0x1
    bd3c:	str	x0, [x21]
    bd40:	cbz	x0, bd4c <PyNumber_FloorDivide@plt+0x714c>
    bd44:	ldp	x23, x24, [sp, #48]
    bd48:	b	bce0 <PyNumber_FloorDivide@plt+0x70e0>
    bd4c:	mov	x0, x21
    bd50:	mov	x19, #0x0                   	// #0
    bd54:	bl	4810 <_Py_Dealloc@plt>
    bd58:	mov	x0, x19
    bd5c:	ldp	x19, x20, [sp, #16]
    bd60:	ldp	x21, x22, [sp, #32]
    bd64:	ldp	x23, x24, [sp, #48]
    bd68:	ldp	x29, x30, [sp], #64
    bd6c:	ret
    bd70:	mov	x0, x20
    bd74:	bl	4810 <_Py_Dealloc@plt>
    bd78:	b	bd1c <PyNumber_FloorDivide@plt+0x711c>
    bd7c:	mov	x0, x22
    bd80:	bl	4810 <_Py_Dealloc@plt>
    bd84:	ldr	x0, [x24]
    bd88:	sub	x0, x0, #0x1
    bd8c:	str	x0, [x24]
    bd90:	cbnz	x0, bd34 <PyNumber_FloorDivide@plt+0x7134>
    bd94:	nop
    bd98:	mov	x0, x24
    bd9c:	bl	4810 <_Py_Dealloc@plt>
    bda0:	b	bd30 <PyNumber_FloorDivide@plt+0x7130>
    bda4:	mov	x0, x20
    bda8:	bl	4810 <_Py_Dealloc@plt>
    bdac:	b	bbc4 <PyNumber_FloorDivide@plt+0x6fc4>
    bdb0:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    bdb4:	adrp	x1, 10000 <PyInit__datetime@@Base+0x1118>
    bdb8:	mov	x19, #0x0                   	// #0
    bdbc:	add	x1, x1, #0xf0
    bdc0:	ldr	x0, [x0, #3976]
    bdc4:	ldr	x0, [x0]
    bdc8:	bl	4880 <PyErr_SetString@plt>
    bdcc:	b	bce8 <PyNumber_FloorDivide@plt+0x70e8>
    bdd0:	mov	x0, x22
    bdd4:	bl	4810 <_Py_Dealloc@plt>
    bdd8:	b	bd0c <PyNumber_FloorDivide@plt+0x710c>
    bddc:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    bde0:	adrp	x1, 10000 <PyInit__datetime@@Base+0x1118>
    bde4:	mov	x24, #0x0                   	// #0
    bde8:	add	x1, x1, #0x340
    bdec:	ldr	x0, [x0, #3968]
    bdf0:	mov	x21, #0x0                   	// #0
    bdf4:	ldr	x0, [x0]
    bdf8:	bl	4880 <PyErr_SetString@plt>
    bdfc:	b	bcfc <PyNumber_FloorDivide@plt+0x70fc>
    be00:	mov	x0, x22
    be04:	bl	4810 <_Py_Dealloc@plt>
    be08:	ldp	x21, x22, [sp, #32]
    be0c:	ldp	x23, x24, [sp, #48]
    be10:	b	bce8 <PyNumber_FloorDivide@plt+0x70e8>
    be14:	mov	x0, x20
    be18:	bl	4810 <_Py_Dealloc@plt>
    be1c:	b	bc48 <PyNumber_FloorDivide@plt+0x7048>
    be20:	mov	x0, x24
    be24:	bl	4810 <_Py_Dealloc@plt>
    be28:	b	bc38 <PyNumber_FloorDivide@plt+0x7038>
    be2c:	mov	x19, x21
    be30:	b	bc28 <PyNumber_FloorDivide@plt+0x7028>
    be34:	mov	x0, x21
    be38:	bl	4810 <_Py_Dealloc@plt>
    be3c:	b	bc24 <PyNumber_FloorDivide@plt+0x7024>
    be40:	ldr	x0, [x22]
    be44:	sub	x0, x0, #0x1
    be48:	str	x0, [x22]
    be4c:	cbz	x0, bd7c <PyNumber_FloorDivide@plt+0x717c>
    be50:	ldr	x0, [x24]
    be54:	sub	x0, x0, #0x1
    be58:	str	x0, [x24]
    be5c:	cbnz	x0, bd34 <PyNumber_FloorDivide@plt+0x7134>
    be60:	b	bd98 <PyNumber_FloorDivide@plt+0x7198>
    be64:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    be68:	adrp	x1, 10000 <PyInit__datetime@@Base+0x1118>
    be6c:	add	x1, x1, #0x368
    be70:	ldr	x0, [x0, #3968]
    be74:	ldr	x0, [x0]
    be78:	bl	4880 <PyErr_SetString@plt>
    be7c:	b	bcfc <PyNumber_FloorDivide@plt+0x70fc>
    be80:	stp	x29, x30, [sp, #-80]!
    be84:	mov	x29, sp
    be88:	stp	x19, x20, [sp, #16]
    be8c:	mov	x19, x1
    be90:	stp	x21, x22, [sp, #32]
    be94:	mov	x22, x0
    be98:	ldr	x0, [x19, #8]
    be9c:	stp	x23, x24, [sp, #48]
    bea0:	adrp	x24, 25000 <PyInit__datetime@@Base+0x16118>
    bea4:	add	x1, x24, #0x298
    bea8:	str	x25, [sp, #64]
    beac:	add	x1, x1, #0x340
    beb0:	mov	w25, w2
    beb4:	cmp	x0, x1
    beb8:	b.eq	bec4 <PyNumber_FloorDivide@plt+0x72c4>  // b.none
    bebc:	bl	4b30 <PyType_IsSubtype@plt>
    bec0:	cbz	w0, c04c <PyNumber_FloorDivide@plt+0x744c>
    bec4:	ldrb	w0, [x22, #24]
    bec8:	ldrb	w1, [x19, #24]
    becc:	cbnz	w0, bfcc <PyNumber_FloorDivide@plt+0x73cc>
    bed0:	cbz	w1, bfe4 <PyNumber_FloorDivide@plt+0x73e4>
    bed4:	adrp	x23, 24000 <PyInit__datetime@@Base+0x15118>
    bed8:	ldr	x1, [x19, #32]
    bedc:	ldr	x0, [x23, #4024]
    bee0:	cmp	x1, x0
    bee4:	b.eq	bfe4 <PyNumber_FloorDivide@plt+0x73e4>  // b.none
    bee8:	ldr	x21, [x23, #4024]
    beec:	mov	x1, x21
    bef0:	bl	ba70 <PyNumber_FloorDivide@plt+0x6e70>
    bef4:	mov	x20, x0
    bef8:	cbz	x0, c188 <PyNumber_FloorDivide@plt+0x7588>
    befc:	ldrb	w1, [x19, #24]
    bf00:	mov	x0, x21
    bf04:	cbz	w1, bf0c <PyNumber_FloorDivide@plt+0x730c>
    bf08:	ldr	x0, [x19, #32]
    bf0c:	ldr	x1, [x23, #4024]
    bf10:	bl	ba70 <PyNumber_FloorDivide@plt+0x6e70>
    bf14:	mov	x21, x0
    bf18:	cbz	x0, c178 <PyNumber_FloorDivide@plt+0x7578>
    bf1c:	cmp	x20, x0
    bf20:	b.eq	bf74 <PyNumber_FloorDivide@plt+0x7374>  // b.none
    bf24:	ldr	x0, [x20, #8]
    bf28:	add	x1, x24, #0x298
    bf2c:	cmp	x0, x1
    bf30:	b.eq	bf3c <PyNumber_FloorDivide@plt+0x733c>  // b.none
    bf34:	bl	4b30 <PyType_IsSubtype@plt>
    bf38:	cbz	w0, c010 <PyNumber_FloorDivide@plt+0x7410>
    bf3c:	ldr	x0, [x21, #8]
    bf40:	add	x1, x24, #0x298
    bf44:	cmp	x0, x1
    bf48:	b.eq	bf54 <PyNumber_FloorDivide@plt+0x7354>  // b.none
    bf4c:	bl	4b30 <PyType_IsSubtype@plt>
    bf50:	cbz	w0, c010 <PyNumber_FloorDivide@plt+0x7410>
    bf54:	ldr	w1, [x20, #24]
    bf58:	ldr	w0, [x21, #24]
    bf5c:	cmp	w1, w0
    bf60:	b.ne	c010 <PyNumber_FloorDivide@plt+0x7410>  // b.any
    bf64:	mov	x1, x21
    bf68:	mov	x0, x20
    bf6c:	bl	7db8 <PyNumber_FloorDivide@plt+0x31b8>
    bf70:	cbnz	w0, c010 <PyNumber_FloorDivide@plt+0x7410>
    bf74:	mov	x2, #0x6                   	// #6
    bf78:	add	x1, x19, #0x19
    bf7c:	add	x0, x22, #0x19
    bf80:	bl	49e0 <memcmp@plt>
    bf84:	mov	w1, w25
    bf88:	bl	5b50 <PyNumber_FloorDivide@plt+0xf50>
    bf8c:	mov	x19, x0
    bf90:	ldr	x1, [x20]
    bf94:	sub	x1, x1, #0x1
    bf98:	str	x1, [x20]
    bf9c:	cbz	x1, c13c <PyNumber_FloorDivide@plt+0x753c>
    bfa0:	ldr	x0, [x21]
    bfa4:	sub	x0, x0, #0x1
    bfa8:	str	x0, [x21]
    bfac:	cbz	x0, c154 <PyNumber_FloorDivide@plt+0x7554>
    bfb0:	mov	x0, x19
    bfb4:	ldp	x19, x20, [sp, #16]
    bfb8:	ldp	x21, x22, [sp, #32]
    bfbc:	ldp	x23, x24, [sp, #48]
    bfc0:	ldr	x25, [sp, #64]
    bfc4:	ldp	x29, x30, [sp], #80
    bfc8:	ret
    bfcc:	ldr	x0, [x22, #32]
    bfd0:	cbnz	w1, c1a8 <PyNumber_FloorDivide@plt+0x75a8>
    bfd4:	adrp	x23, 24000 <PyInit__datetime@@Base+0x15118>
    bfd8:	ldr	x1, [x23, #4024]
    bfdc:	cmp	x0, x1
    bfe0:	b.ne	bee8 <PyNumber_FloorDivide@plt+0x72e8>  // b.any
    bfe4:	add	x1, x19, #0x19
    bfe8:	add	x0, x22, #0x19
    bfec:	mov	x2, #0x6                   	// #6
    bff0:	bl	49e0 <memcmp@plt>
    bff4:	mov	w1, w25
    bff8:	ldp	x19, x20, [sp, #16]
    bffc:	ldp	x21, x22, [sp, #32]
    c000:	ldp	x23, x24, [sp, #48]
    c004:	ldr	x25, [sp, #64]
    c008:	ldp	x29, x30, [sp], #80
    c00c:	b	5b50 <PyNumber_FloorDivide@plt+0xf50>
    c010:	ldr	x23, [x23, #4024]
    c014:	cmp	x20, x23
    c018:	ccmp	x21, x23, #0x4, ne  // ne = any
    c01c:	b.ne	c080 <PyNumber_FloorDivide@plt+0x7480>  // b.any
    c020:	cmp	w25, #0x2
    c024:	b.eq	c1bc <PyNumber_FloorDivide@plt+0x75bc>  // b.none
    c028:	cmp	w25, #0x3
    c02c:	b.ne	c1d8 <PyNumber_FloorDivide@plt+0x75d8>  // b.any
    c030:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    c034:	ldr	x0, [x0, #4040]
    c038:	mov	x19, x0
    c03c:	ldr	x1, [x0]
    c040:	add	x1, x1, #0x1
    c044:	str	x1, [x0]
    c048:	b	bf90 <PyNumber_FloorDivide@plt+0x7390>
    c04c:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    c050:	ldp	x21, x22, [sp, #32]
    c054:	ldr	x0, [x0, #3960]
    c058:	ldp	x23, x24, [sp, #48]
    c05c:	mov	x19, x0
    c060:	ldr	x1, [x0]
    c064:	ldr	x25, [sp, #64]
    c068:	add	x1, x1, #0x1
    c06c:	str	x1, [x0]
    c070:	mov	x0, x19
    c074:	ldp	x19, x20, [sp, #16]
    c078:	ldp	x29, x30, [sp], #80
    c07c:	ret
    c080:	ldrb	w1, [x22, #26]
    c084:	mov	w8, #0xe10                 	// #3600
    c088:	ldrb	w0, [x19, #26]
    c08c:	mov	w7, #0xae80                	// #44672
    c090:	ldrb	w2, [x22, #25]
    c094:	movk	w7, #0xfffe, lsl #16
    c098:	lsl	w4, w1, #4
    c09c:	ldrb	w6, [x19, #25]
    c0a0:	sub	w4, w4, w1
    c0a4:	lsl	w3, w0, #4
    c0a8:	sub	w3, w3, w0
    c0ac:	ldrb	w5, [x19, #27]
    c0b0:	lsl	w4, w4, #2
    c0b4:	ldrb	w0, [x22, #27]
    c0b8:	lsl	w3, w3, #2
    c0bc:	sub	w0, w0, w5
    c0c0:	madd	w2, w2, w8, w4
    c0c4:	madd	w3, w6, w8, w3
    c0c8:	ldp	w1, w4, [x20, #24]
    c0cc:	add	w0, w2, w0
    c0d0:	ldp	w5, w9, [x21, #24]
    c0d4:	sub	w0, w0, w3
    c0d8:	madd	w0, w1, w7, w0
    c0dc:	msub	w2, w5, w7, w9
    c0e0:	sub	w0, w0, w4
    c0e4:	adds	w0, w0, w2
    c0e8:	b.ne	c120 <PyNumber_FloorDivide@plt+0x7520>  // b.any
    c0ec:	ldrb	w3, [x22, #29]
    c0f0:	ldrb	w2, [x19, #29]
    c0f4:	ldrb	w0, [x22, #28]
    c0f8:	ldrb	w1, [x19, #28]
    c0fc:	lsl	w3, w3, #8
    c100:	ldrb	w5, [x22, #30]
    c104:	lsl	w2, w2, #8
    c108:	ldrb	w4, [x19, #30]
    c10c:	orr	w0, w3, w0, lsl #16
    c110:	orr	w1, w2, w1, lsl #16
    c114:	orr	w0, w0, w5
    c118:	orr	w1, w1, w4
    c11c:	sub	w0, w0, w1
    c120:	mov	w1, w25
    c124:	bl	5b50 <PyNumber_FloorDivide@plt+0xf50>
    c128:	ldr	x1, [x20]
    c12c:	mov	x19, x0
    c130:	sub	x1, x1, #0x1
    c134:	str	x1, [x20]
    c138:	cbnz	x1, bfa0 <PyNumber_FloorDivide@plt+0x73a0>
    c13c:	mov	x0, x20
    c140:	bl	4810 <_Py_Dealloc@plt>
    c144:	ldr	x0, [x21]
    c148:	sub	x0, x0, #0x1
    c14c:	str	x0, [x21]
    c150:	cbnz	x0, bfb0 <PyNumber_FloorDivide@plt+0x73b0>
    c154:	mov	x0, x21
    c158:	bl	4810 <_Py_Dealloc@plt>
    c15c:	mov	x0, x19
    c160:	ldp	x19, x20, [sp, #16]
    c164:	ldp	x21, x22, [sp, #32]
    c168:	ldp	x23, x24, [sp, #48]
    c16c:	ldr	x25, [sp, #64]
    c170:	ldp	x29, x30, [sp], #80
    c174:	ret
    c178:	ldr	x0, [x20]
    c17c:	sub	x0, x0, #0x1
    c180:	str	x0, [x20]
    c184:	cbz	x0, c1f8 <PyNumber_FloorDivide@plt+0x75f8>
    c188:	mov	x19, #0x0                   	// #0
    c18c:	mov	x0, x19
    c190:	ldp	x19, x20, [sp, #16]
    c194:	ldp	x21, x22, [sp, #32]
    c198:	ldp	x23, x24, [sp, #48]
    c19c:	ldr	x25, [sp, #64]
    c1a0:	ldp	x29, x30, [sp], #80
    c1a4:	ret
    c1a8:	ldr	x1, [x19, #32]
    c1ac:	adrp	x23, 24000 <PyInit__datetime@@Base+0x15118>
    c1b0:	cmp	x0, x1
    c1b4:	b.ne	bee8 <PyNumber_FloorDivide@plt+0x72e8>  // b.any
    c1b8:	b	bfe4 <PyNumber_FloorDivide@plt+0x73e4>
    c1bc:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    c1c0:	ldr	x0, [x0, #3992]
    c1c4:	mov	x19, x0
    c1c8:	ldr	x1, [x0]
    c1cc:	add	x1, x1, #0x1
    c1d0:	str	x1, [x0]
    c1d4:	b	bf90 <PyNumber_FloorDivide@plt+0x7390>
    c1d8:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    c1dc:	adrp	x1, 10000 <PyInit__datetime@@Base+0x1118>
    c1e0:	mov	x19, #0x0                   	// #0
    c1e4:	add	x1, x1, #0x3a8
    c1e8:	ldr	x0, [x0, #3976]
    c1ec:	ldr	x0, [x0]
    c1f0:	bl	4880 <PyErr_SetString@plt>
    c1f4:	b	bf90 <PyNumber_FloorDivide@plt+0x7390>
    c1f8:	mov	x0, x20
    c1fc:	mov	x19, #0x0                   	// #0
    c200:	bl	4810 <_Py_Dealloc@plt>
    c204:	b	bfb0 <PyNumber_FloorDivide@plt+0x73b0>
    c208:	stp	x29, x30, [sp, #-64]!
    c20c:	mov	x29, sp
    c210:	stp	x19, x20, [sp, #16]
    c214:	ldr	x20, [x0, #16]
    c218:	cmn	x20, #0x1
    c21c:	b.eq	c230 <PyNumber_FloorDivide@plt+0x7630>  // b.none
    c220:	mov	x0, x20
    c224:	ldp	x19, x20, [sp, #16]
    c228:	ldp	x29, x30, [sp], #64
    c22c:	ret
    c230:	stp	x21, x22, [sp, #32]
    c234:	mov	x19, x0
    c238:	str	x23, [sp, #48]
    c23c:	ldrb	w0, [x0, #31]
    c240:	ldrb	w4, [x19, #24]
    c244:	cbz	w0, c290 <PyNumber_FloorDivide@plt+0x7690>
    c248:	ldrb	w1, [x19, #29]
    c24c:	ldrb	w3, [x19, #28]
    c250:	ldrb	w2, [x19, #30]
    c254:	lsl	w1, w1, #8
    c258:	ldrb	w0, [x19, #25]
    c25c:	orr	w3, w1, w3, lsl #16
    c260:	ldrb	w1, [x19, #26]
    c264:	orr	w3, w3, w2
    c268:	ldrb	w2, [x19, #27]
    c26c:	cbz	w4, c3d4 <PyNumber_FloorDivide@plt+0x77d4>
    c270:	ldr	x4, [x19, #32]
    c274:	mov	w5, #0x0                   	// #0
    c278:	ldr	x6, [x19, #8]
    c27c:	bl	8d38 <PyNumber_FloorDivide@plt+0x4138>
    c280:	mov	x23, x0
    c284:	cbz	x0, c3ec <PyNumber_FloorDivide@plt+0x77ec>
    c288:	ldrb	w4, [x0, #24]
    c28c:	b	c2a0 <PyNumber_FloorDivide@plt+0x76a0>
    c290:	ldr	x0, [x19]
    c294:	mov	x23, x19
    c298:	add	x0, x0, #0x1
    c29c:	str	x0, [x19]
    c2a0:	adrp	x22, 24000 <PyInit__datetime@@Base+0x15118>
    c2a4:	ldr	x0, [x22, #4024]
    c2a8:	cbz	w4, c2b0 <PyNumber_FloorDivide@plt+0x76b0>
    c2ac:	ldr	x0, [x23, #32]
    c2b0:	ldr	x1, [x22, #4024]
    c2b4:	bl	ba70 <PyNumber_FloorDivide@plt+0x6e70>
    c2b8:	mov	x21, x0
    c2bc:	ldr	x1, [x23]
    c2c0:	sub	x0, x1, #0x1
    c2c4:	str	x0, [x23]
    c2c8:	cbz	x0, c39c <PyNumber_FloorDivide@plt+0x779c>
    c2cc:	cbz	x21, c3ec <PyNumber_FloorDivide@plt+0x77ec>
    c2d0:	ldr	x22, [x22, #4024]
    c2d4:	cmp	x21, x22
    c2d8:	b.eq	c3c0 <PyNumber_FloorDivide@plt+0x77c0>  // b.none
    c2dc:	ldrb	w1, [x19, #26]
    c2e0:	mov	w7, #0xe10                 	// #3600
    c2e4:	ldrb	w6, [x19, #25]
    c2e8:	adrp	x4, 25000 <PyInit__datetime@@Base+0x16118>
    c2ec:	ldrb	w3, [x19, #29]
    c2f0:	add	x4, x4, #0x298
    c2f4:	lsl	w5, w1, #4
    c2f8:	ldrb	w0, [x19, #28]
    c2fc:	sub	w5, w5, w1
    c300:	ldrb	w2, [x19, #30]
    c304:	ldrb	w1, [x19, #27]
    c308:	lsl	w3, w3, #8
    c30c:	lsl	w5, w5, #2
    c310:	orr	w0, w3, w0, lsl #16
    c314:	orr	w2, w0, w2
    c318:	mov	w3, #0x1                   	// #1
    c31c:	mov	w0, #0x0                   	// #0
    c320:	madd	w5, w6, w7, w5
    c324:	add	w1, w5, w1
    c328:	bl	5500 <PyNumber_FloorDivide@plt+0x900>
    c32c:	mov	x23, x0
    c330:	cbz	x0, c3f8 <PyNumber_FloorDivide@plt+0x77f8>
    c334:	mov	x1, x21
    c338:	bl	86b0 <PyNumber_FloorDivide@plt+0x3ab0>
    c33c:	ldr	x1, [x23]
    c340:	mov	x22, x0
    c344:	sub	x0, x1, #0x1
    c348:	str	x0, [x23]
    c34c:	cbz	x0, c3a8 <PyNumber_FloorDivide@plt+0x77a8>
    c350:	cbz	x22, c3f8 <PyNumber_FloorDivide@plt+0x77f8>
    c354:	mov	x0, x22
    c358:	bl	4a50 <PyObject_Hash@plt>
    c35c:	str	x0, [x19, #16]
    c360:	ldr	x0, [x22]
    c364:	sub	x0, x0, #0x1
    c368:	str	x0, [x22]
    c36c:	cbz	x0, c3e0 <PyNumber_FloorDivide@plt+0x77e0>
    c370:	ldr	x0, [x21]
    c374:	sub	x0, x0, #0x1
    c378:	str	x0, [x21]
    c37c:	cbz	x0, c3b4 <PyNumber_FloorDivide@plt+0x77b4>
    c380:	ldr	x20, [x19, #16]
    c384:	ldp	x21, x22, [sp, #32]
    c388:	mov	x0, x20
    c38c:	ldp	x19, x20, [sp, #16]
    c390:	ldr	x23, [sp, #48]
    c394:	ldp	x29, x30, [sp], #64
    c398:	ret
    c39c:	mov	x0, x23
    c3a0:	bl	4810 <_Py_Dealloc@plt>
    c3a4:	b	c2cc <PyNumber_FloorDivide@plt+0x76cc>
    c3a8:	mov	x0, x23
    c3ac:	bl	4810 <_Py_Dealloc@plt>
    c3b0:	b	c350 <PyNumber_FloorDivide@plt+0x7750>
    c3b4:	mov	x0, x21
    c3b8:	bl	4810 <_Py_Dealloc@plt>
    c3bc:	b	c380 <PyNumber_FloorDivide@plt+0x7780>
    c3c0:	add	x0, x19, #0x19
    c3c4:	mov	x1, #0x6                   	// #6
    c3c8:	bl	48b0 <_Py_HashBytes@plt>
    c3cc:	str	x0, [x19, #16]
    c3d0:	b	c370 <PyNumber_FloorDivide@plt+0x7770>
    c3d4:	adrp	x22, 24000 <PyInit__datetime@@Base+0x15118>
    c3d8:	ldr	x4, [x22, #4024]
    c3dc:	b	c274 <PyNumber_FloorDivide@plt+0x7674>
    c3e0:	mov	x0, x22
    c3e4:	bl	4810 <_Py_Dealloc@plt>
    c3e8:	b	c370 <PyNumber_FloorDivide@plt+0x7770>
    c3ec:	ldp	x21, x22, [sp, #32]
    c3f0:	ldr	x23, [sp, #48]
    c3f4:	b	c220 <PyNumber_FloorDivide@plt+0x7620>
    c3f8:	ldr	x0, [x21]
    c3fc:	sub	x0, x0, #0x1
    c400:	str	x0, [x21]
    c404:	cbnz	x0, c3ec <PyNumber_FloorDivide@plt+0x77ec>
    c408:	mov	x0, x21
    c40c:	bl	4810 <_Py_Dealloc@plt>
    c410:	ldp	x21, x22, [sp, #32]
    c414:	ldr	x23, [sp, #48]
    c418:	b	c220 <PyNumber_FloorDivide@plt+0x7620>
    c41c:	nop
    c420:	stp	x29, x30, [sp, #-64]!
    c424:	mov	x29, sp
    c428:	stp	x19, x20, [sp, #16]
    c42c:	mov	x20, x0
    c430:	mov	x19, x1
    c434:	ldr	x0, [x0, #8]
    c438:	stp	x21, x22, [sp, #32]
    c43c:	stp	x23, x24, [sp, #48]
    c440:	adrp	x23, 25000 <PyInit__datetime@@Base+0x16118>
    c444:	add	x2, x23, #0x298
    c448:	add	x2, x2, #0x1a0
    c44c:	cmp	x0, x2
    c450:	b.eq	c490 <PyNumber_FloorDivide@plt+0x7890>  // b.none
    c454:	mov	x1, x2
    c458:	bl	4b30 <PyType_IsSubtype@plt>
    c45c:	cbnz	w0, c490 <PyNumber_FloorDivide@plt+0x7890>
    c460:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    c464:	ldr	x0, [x0, #3960]
    c468:	mov	x21, x0
    c46c:	ldr	x1, [x0]
    c470:	add	x1, x1, #0x1
    c474:	str	x1, [x0]
    c478:	mov	x0, x21
    c47c:	ldp	x19, x20, [sp, #16]
    c480:	ldp	x21, x22, [sp, #32]
    c484:	ldp	x23, x24, [sp, #48]
    c488:	ldp	x29, x30, [sp], #64
    c48c:	ret
    c490:	ldr	x0, [x19, #8]
    c494:	add	x21, x23, #0x298
    c498:	add	x1, x21, #0x1a0
    c49c:	cmp	x0, x1
    c4a0:	b.eq	c500 <PyNumber_FloorDivide@plt+0x7900>  // b.none
    c4a4:	bl	4b30 <PyType_IsSubtype@plt>
    c4a8:	cbnz	w0, c500 <PyNumber_FloorDivide@plt+0x7900>
    c4ac:	ldr	x0, [x19, #8]
    c4b0:	cmp	x0, x21
    c4b4:	b.eq	c4c4 <PyNumber_FloorDivide@plt+0x78c4>  // b.none
    c4b8:	mov	x1, x21
    c4bc:	bl	4b30 <PyType_IsSubtype@plt>
    c4c0:	cbz	w0, c460 <PyNumber_FloorDivide@plt+0x7860>
    c4c4:	mov	x1, x19
    c4c8:	mov	x0, x20
    c4cc:	mov	w2, #0xffffffff            	// #-1
    c4d0:	bl	9e10 <PyNumber_FloorDivide@plt+0x5210>
    c4d4:	mov	x21, x0
    c4d8:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    c4dc:	ldr	x1, [x0, #3960]
    c4e0:	cmp	x21, x1
    c4e4:	b.eq	c464 <PyNumber_FloorDivide@plt+0x7864>  // b.none
    c4e8:	mov	x0, x21
    c4ec:	ldp	x19, x20, [sp, #16]
    c4f0:	ldp	x21, x22, [sp, #32]
    c4f4:	ldp	x23, x24, [sp, #48]
    c4f8:	ldp	x29, x30, [sp], #64
    c4fc:	ret
    c500:	ldrb	w0, [x20, #24]
    c504:	ldrb	w1, [x19, #24]
    c508:	cbz	w0, c6b8 <PyNumber_FloorDivide@plt+0x7ab8>
    c50c:	ldr	x0, [x20, #40]
    c510:	cbnz	w1, c6d4 <PyNumber_FloorDivide@plt+0x7ad4>
    c514:	adrp	x1, 24000 <PyInit__datetime@@Base+0x15118>
    c518:	ldr	x2, [x1, #4024]
    c51c:	cmp	x0, x2
    c520:	b.eq	c6e4 <PyNumber_FloorDivide@plt+0x7ae4>  // b.none
    c524:	mov	x1, x20
    c528:	bl	ba70 <PyNumber_FloorDivide@plt+0x6e70>
    c52c:	mov	x22, x0
    c530:	cbz	x0, c788 <PyNumber_FloorDivide@plt+0x7b88>
    c534:	ldrb	w0, [x19, #24]
    c538:	cbz	w0, c754 <PyNumber_FloorDivide@plt+0x7b54>
    c53c:	ldr	x0, [x19, #40]
    c540:	mov	x1, x19
    c544:	bl	ba70 <PyNumber_FloorDivide@plt+0x6e70>
    c548:	mov	x21, x0
    c54c:	cbz	x0, c7ec <PyNumber_FloorDivide@plt+0x7bec>
    c550:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    c554:	ldr	x0, [x0, #4024]
    c558:	cmp	x22, x0
    c55c:	cset	w1, ne  // ne = any
    c560:	cmp	x21, x0
    c564:	cset	w0, ne  // ne = any
    c568:	cmp	w1, w0
    c56c:	b.ne	c7b0 <PyNumber_FloorDivide@plt+0x7bb0>  // b.any
    c570:	cmp	x22, x21
    c574:	b.eq	c808 <PyNumber_FloorDivide@plt+0x7c08>  // b.none
    c578:	ldr	w0, [x21, #24]
    c57c:	ldr	w1, [x22, #24]
    c580:	cmp	w1, w0
    c584:	b.eq	c738 <PyNumber_FloorDivide@plt+0x7b38>  // b.none
    c588:	mov	x1, x21
    c58c:	mov	x0, x22
    c590:	bl	86b0 <PyNumber_FloorDivide@plt+0x3ab0>
    c594:	mov	x24, x0
    c598:	cbz	x0, c760 <PyNumber_FloorDivide@plt+0x7b60>
    c59c:	ldr	x1, [x22]
    c5a0:	sub	x1, x1, #0x1
    c5a4:	str	x1, [x22]
    c5a8:	cbz	x1, c70c <PyNumber_FloorDivide@plt+0x7b0c>
    c5ac:	ldr	x0, [x21]
    c5b0:	sub	x0, x0, #0x1
    c5b4:	str	x0, [x21]
    c5b8:	cbz	x0, c724 <PyNumber_FloorDivide@plt+0x7b24>
    c5bc:	ldrb	w2, [x20, #28]
    c5c0:	ldrb	w1, [x20, #27]
    c5c4:	ldurh	w0, [x20, #25]
    c5c8:	rev16	w0, w0
    c5cc:	and	w0, w0, #0xffff
    c5d0:	bl	4e80 <PyNumber_FloorDivide@plt+0x280>
    c5d4:	ldrb	w2, [x19, #28]
    c5d8:	mov	w9, w0
    c5dc:	ldrb	w1, [x19, #27]
    c5e0:	ldurh	w0, [x19, #25]
    c5e4:	rev16	w0, w0
    c5e8:	and	w0, w0, #0xffff
    c5ec:	bl	4e80 <PyNumber_FloorDivide@plt+0x280>
    c5f0:	ldrb	w6, [x20, #30]
    c5f4:	sub	w0, w9, w0
    c5f8:	ldrb	w7, [x19, #30]
    c5fc:	mov	w11, #0xe10                 	// #3600
    c600:	ldrb	w8, [x20, #33]
    c604:	add	x4, x23, #0x298
    c608:	sub	w7, w6, w7
    c60c:	ldrb	w3, [x19, #29]
    c610:	ldrb	w1, [x20, #29]
    c614:	lsl	w6, w7, #4
    c618:	ldrb	w5, [x20, #32]
    c61c:	sub	w6, w6, w7
    c620:	ldrb	w2, [x19, #33]
    c624:	ldrb	w7, [x20, #31]
    c628:	sub	w1, w1, w3
    c62c:	ldrb	w10, [x19, #31]
    c630:	lsl	w8, w8, #8
    c634:	ldrb	w3, [x19, #32]
    c638:	lsl	w6, w6, #2
    c63c:	ldrb	w9, [x20, #34]
    c640:	orr	w5, w8, w5, lsl #16
    c644:	ldrb	w8, [x19, #34]
    c648:	lsl	w2, w2, #8
    c64c:	sub	w7, w7, w10
    c650:	orr	w5, w5, w9
    c654:	madd	w1, w1, w11, w6
    c658:	orr	w3, w2, w3, lsl #16
    c65c:	orr	w2, w3, w8
    c660:	mov	w3, #0x1                   	// #1
    c664:	add	w1, w1, w7
    c668:	sub	w2, w5, w2
    c66c:	bl	5500 <PyNumber_FloorDivide@plt+0x900>
    c670:	mov	x21, x0
    c674:	cbz	x0, c788 <PyNumber_FloorDivide@plt+0x7b88>
    c678:	cbz	x24, c4d8 <PyNumber_FloorDivide@plt+0x78d8>
    c67c:	mov	x1, x24
    c680:	bl	86b0 <PyNumber_FloorDivide@plt+0x3ab0>
    c684:	ldr	x1, [x21]
    c688:	mov	x19, x0
    c68c:	sub	x1, x1, #0x1
    c690:	str	x1, [x21]
    c694:	cbz	x1, c7a4 <PyNumber_FloorDivide@plt+0x7ba4>
    c698:	ldr	x1, [x24]
    c69c:	mov	x21, x19
    c6a0:	sub	x0, x1, #0x1
    c6a4:	str	x0, [x24]
    c6a8:	cbnz	x0, c4d8 <PyNumber_FloorDivide@plt+0x78d8>
    c6ac:	mov	x0, x24
    c6b0:	bl	4810 <_Py_Dealloc@plt>
    c6b4:	b	c4d8 <PyNumber_FloorDivide@plt+0x78d8>
    c6b8:	cbz	w1, c730 <PyNumber_FloorDivide@plt+0x7b30>
    c6bc:	adrp	x1, 24000 <PyInit__datetime@@Base+0x15118>
    c6c0:	ldr	x2, [x19, #40]
    c6c4:	ldr	x0, [x1, #4024]
    c6c8:	cmp	x2, x0
    c6cc:	b.ne	c524 <PyNumber_FloorDivide@plt+0x7924>  // b.any
    c6d0:	b	c6e4 <PyNumber_FloorDivide@plt+0x7ae4>
    c6d4:	ldr	x2, [x19, #40]
    c6d8:	adrp	x1, 24000 <PyInit__datetime@@Base+0x15118>
    c6dc:	cmp	x2, x0
    c6e0:	b.ne	c524 <PyNumber_FloorDivide@plt+0x7924>  // b.any
    c6e4:	ldr	x0, [x1, #4024]
    c6e8:	mov	x24, #0x0                   	// #0
    c6ec:	mov	x22, x0
    c6f0:	mov	x21, x0
    c6f4:	ldr	x1, [x0]
    c6f8:	add	x1, x1, #0x2
    c6fc:	str	x1, [x0]
    c700:	sub	x1, x1, #0x1
    c704:	str	x1, [x22]
    c708:	cbnz	x1, c5ac <PyNumber_FloorDivide@plt+0x79ac>
    c70c:	mov	x0, x22
    c710:	bl	4810 <_Py_Dealloc@plt>
    c714:	ldr	x0, [x21]
    c718:	sub	x0, x0, #0x1
    c71c:	str	x0, [x21]
    c720:	cbnz	x0, c5bc <PyNumber_FloorDivide@plt+0x79bc>
    c724:	mov	x0, x21
    c728:	bl	4810 <_Py_Dealloc@plt>
    c72c:	b	c5bc <PyNumber_FloorDivide@plt+0x79bc>
    c730:	adrp	x1, 24000 <PyInit__datetime@@Base+0x15118>
    c734:	b	c6e4 <PyNumber_FloorDivide@plt+0x7ae4>
    c738:	mov	x1, x21
    c73c:	mov	x0, x22
    c740:	bl	7db8 <PyNumber_FloorDivide@plt+0x31b8>
    c744:	cbnz	w0, c588 <PyNumber_FloorDivide@plt+0x7988>
    c748:	mov	x24, #0x0                   	// #0
    c74c:	ldr	x1, [x22]
    c750:	b	c5a0 <PyNumber_FloorDivide@plt+0x79a0>
    c754:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    c758:	ldr	x0, [x0, #4024]
    c75c:	b	c540 <PyNumber_FloorDivide@plt+0x7940>
    c760:	ldr	x0, [x22]
    c764:	sub	x0, x0, #0x1
    c768:	str	x0, [x22]
    c76c:	cbnz	x0, c778 <PyNumber_FloorDivide@plt+0x7b78>
    c770:	mov	x0, x22
    c774:	bl	4810 <_Py_Dealloc@plt>
    c778:	ldr	x0, [x21]
    c77c:	sub	x0, x0, #0x1
    c780:	str	x0, [x21]
    c784:	cbz	x0, c7dc <PyNumber_FloorDivide@plt+0x7bdc>
    c788:	mov	x21, #0x0                   	// #0
    c78c:	mov	x0, x21
    c790:	ldp	x19, x20, [sp, #16]
    c794:	ldp	x21, x22, [sp, #32]
    c798:	ldp	x23, x24, [sp, #48]
    c79c:	ldp	x29, x30, [sp], #64
    c7a0:	ret
    c7a4:	mov	x0, x21
    c7a8:	bl	4810 <_Py_Dealloc@plt>
    c7ac:	b	c698 <PyNumber_FloorDivide@plt+0x7a98>
    c7b0:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    c7b4:	adrp	x1, 10000 <PyInit__datetime@@Base+0x1118>
    c7b8:	add	x1, x1, #0x3e0
    c7bc:	ldr	x0, [x0, #3976]
    c7c0:	ldr	x0, [x0]
    c7c4:	bl	4880 <PyErr_SetString@plt>
    c7c8:	ldr	x0, [x22]
    c7cc:	sub	x0, x0, #0x1
    c7d0:	str	x0, [x22]
    c7d4:	cbnz	x0, c778 <PyNumber_FloorDivide@plt+0x7b78>
    c7d8:	b	c770 <PyNumber_FloorDivide@plt+0x7b70>
    c7dc:	mov	x0, x21
    c7e0:	mov	x21, #0x0                   	// #0
    c7e4:	bl	4810 <_Py_Dealloc@plt>
    c7e8:	b	c478 <PyNumber_FloorDivide@plt+0x7878>
    c7ec:	ldr	x0, [x22]
    c7f0:	sub	x0, x0, #0x1
    c7f4:	str	x0, [x22]
    c7f8:	cbnz	x0, c788 <PyNumber_FloorDivide@plt+0x7b88>
    c7fc:	mov	x0, x22
    c800:	bl	4810 <_Py_Dealloc@plt>
    c804:	b	c478 <PyNumber_FloorDivide@plt+0x7878>
    c808:	mov	x24, #0x0                   	// #0
    c80c:	ldr	x1, [x22]
    c810:	b	c5a0 <PyNumber_FloorDivide@plt+0x79a0>
    c814:	nop
    c818:	stp	x29, x30, [sp, #-32]!
    c81c:	mov	x29, sp
    c820:	stp	x19, x20, [sp, #16]
    c824:	mov	x19, x0
    c828:	ldrb	w1, [x0, #24]
    c82c:	cbz	w1, c884 <PyNumber_FloorDivide@plt+0x7c84>
    c830:	adrp	x1, 24000 <PyInit__datetime@@Base+0x15118>
    c834:	ldr	x2, [x0, #40]
    c838:	ldr	x1, [x1, #4024]
    c83c:	cmp	x2, x1
    c840:	b.eq	c884 <PyNumber_FloorDivide@plt+0x7c84>  // b.none
    c844:	adrp	x1, 26000 <PyInit__datetime@@Base+0x17118>
    c848:	ldr	x1, [x1, #4032]
    c84c:	bl	c420 <PyNumber_FloorDivide@plt+0x7820>
    c850:	mov	x19, x0
    c854:	cbz	x0, c904 <PyNumber_FloorDivide@plt+0x7d04>
    c858:	mov	x1, #0x0                   	// #0
    c85c:	bl	7030 <PyNumber_FloorDivide@plt+0x2430>
    c860:	ldr	x1, [x19]
    c864:	mov	x20, x0
    c868:	sub	x0, x1, #0x1
    c86c:	str	x0, [x19]
    c870:	cbz	x0, c918 <PyNumber_FloorDivide@plt+0x7d18>
    c874:	mov	x0, x20
    c878:	ldp	x19, x20, [sp, #16]
    c87c:	ldp	x29, x30, [sp], #32
    c880:	ret
    c884:	ldrb	w6, [x19, #35]
    c888:	ldrb	w5, [x19, #31]
    c88c:	ldrb	w4, [x19, #30]
    c890:	ldrb	w3, [x19, #29]
    c894:	ldrb	w2, [x19, #28]
    c898:	ldrb	w1, [x19, #27]
    c89c:	ldurh	w0, [x19, #25]
    c8a0:	rev16	w0, w0
    c8a4:	and	w0, w0, #0xffff
    c8a8:	bl	8230 <PyNumber_FloorDivide@plt+0x3630>
    c8ac:	cmn	x0, #0x1
    c8b0:	b.eq	c904 <PyNumber_FloorDivide@plt+0x7d04>  // b.none
    c8b4:	ldrb	w3, [x19, #33]
    c8b8:	mov	x2, #0x848000000000        	// #145685290680320
    c8bc:	ldrb	w1, [x19, #32]
    c8c0:	movk	x2, #0x412e, lsl #48
    c8c4:	ldrb	w4, [x19, #34]
    c8c8:	fmov	d0, x2
    c8cc:	lsl	w2, w3, #8
    c8d0:	mov	x5, #0xffffffffffffb780    	// #-18560
    c8d4:	orr	w1, w2, w1, lsl #16
    c8d8:	movk	x5, #0x886c, lsl #16
    c8dc:	orr	w1, w1, w4
    c8e0:	movk	x5, #0xfff1, lsl #32
    c8e4:	add	x0, x0, x5
    c8e8:	scvtf	d1, w1
    c8ec:	scvtf	d2, x0
    c8f0:	ldp	x19, x20, [sp, #16]
    c8f4:	fdiv	d0, d1, d0
    c8f8:	ldp	x29, x30, [sp], #32
    c8fc:	fadd	d0, d0, d2
    c900:	b	48e0 <PyFloat_FromDouble@plt>
    c904:	mov	x20, #0x0                   	// #0
    c908:	mov	x0, x20
    c90c:	ldp	x19, x20, [sp, #16]
    c910:	ldp	x29, x30, [sp], #32
    c914:	ret
    c918:	mov	x0, x19
    c91c:	bl	4810 <_Py_Dealloc@plt>
    c920:	b	c874 <PyNumber_FloorDivide@plt+0x7c74>
    c924:	nop
    c928:	sub	sp, sp, #0x60
    c92c:	add	x4, sp, #0x58
    c930:	stp	x29, x30, [sp, #16]
    c934:	add	x29, sp, #0x10
    c938:	stp	x21, x22, [sp, #48]
    c93c:	adrp	x22, 24000 <PyInit__datetime@@Base+0x15118>
    c940:	ldr	x21, [x22, #4024]
    c944:	stp	x23, x24, [sp, #64]
    c948:	adrp	x23, 25000 <PyInit__datetime@@Base+0x16118>
    c94c:	add	x3, x23, #0xab8
    c950:	stp	x19, x20, [sp, #32]
    c954:	add	x3, x3, #0x410
    c958:	mov	x19, x0
    c95c:	mov	x0, x1
    c960:	mov	x1, x2
    c964:	adrp	x2, 10000 <PyInit__datetime@@Base+0x1118>
    c968:	add	x2, x2, #0x418
    c96c:	str	x21, [sp, #88]
    c970:	bl	4750 <PyArg_ParseTupleAndKeywords@plt>
    c974:	cbz	w0, cb28 <PyNumber_FloorDivide@plt+0x7f28>
    c978:	ldr	x0, [sp, #88]
    c97c:	bl	7ea0 <PyNumber_FloorDivide@plt+0x32a0>
    c980:	cmn	w0, #0x1
    c984:	b.eq	cb28 <PyNumber_FloorDivide@plt+0x7f28>  // b.none
    c988:	ldrb	w0, [x19, #24]
    c98c:	cbz	w0, cad8 <PyNumber_FloorDivide@plt+0x7ed8>
    c990:	ldr	x20, [x19, #40]
    c994:	cmp	x20, x21
    c998:	b.eq	cad8 <PyNumber_FloorDivide@plt+0x7ed8>  // b.none
    c99c:	ldr	x0, [x20]
    c9a0:	add	x0, x0, #0x1
    c9a4:	str	x0, [x20]
    c9a8:	ldr	x0, [sp, #88]
    c9ac:	cmp	x0, x20
    c9b0:	b.eq	cbd4 <PyNumber_FloorDivide@plt+0x7fd4>  // b.none
    c9b4:	mov	x1, x19
    c9b8:	mov	x0, x20
    c9bc:	bl	ba70 <PyNumber_FloorDivide@plt+0x6e70>
    c9c0:	mov	x21, x0
    c9c4:	ldr	x1, [x20]
    c9c8:	sub	x0, x1, #0x1
    c9cc:	str	x0, [x20]
    c9d0:	cbz	x0, cb48 <PyNumber_FloorDivide@plt+0x7f48>
    c9d4:	cbz	x21, cb28 <PyNumber_FloorDivide@plt+0x7f28>
    c9d8:	ldr	x0, [x22, #4024]
    c9dc:	cmp	x21, x0
    c9e0:	b.eq	cac0 <PyNumber_FloorDivide@plt+0x7ec0>  // b.none
    c9e4:	ldr	x0, [x21, #8]
    c9e8:	adrp	x24, 25000 <PyInit__datetime@@Base+0x16118>
    c9ec:	add	x1, x24, #0x298
    c9f0:	cmp	x0, x1
    c9f4:	b.eq	ca00 <PyNumber_FloorDivide@plt+0x7e00>  // b.none
    c9f8:	bl	4b30 <PyType_IsSubtype@plt>
    c9fc:	cbz	w0, cc38 <PyNumber_FloorDivide@plt+0x8038>
    ca00:	mov	x0, x19
    ca04:	mov	x1, x21
    ca08:	mov	w2, #0xffffffff            	// #-1
    ca0c:	bl	9e10 <PyNumber_FloorDivide@plt+0x5210>
    ca10:	ldr	x1, [x21]
    ca14:	mov	x19, x0
    ca18:	sub	x0, x1, #0x1
    ca1c:	str	x0, [x21]
    ca20:	cbz	x0, cb54 <PyNumber_FloorDivide@plt+0x7f54>
    ca24:	cbz	x19, cb28 <PyNumber_FloorDivide@plt+0x7f28>
    ca28:	ldrb	w0, [x19, #24]
    ca2c:	adrp	x21, 26000 <PyInit__datetime@@Base+0x17118>
    ca30:	ldr	x20, [x21, #3960]
    ca34:	cbz	w0, cb60 <PyNumber_FloorDivide@plt+0x7f60>
    ca38:	ldr	x1, [x20]
    ca3c:	ldr	x0, [x19, #40]
    ca40:	str	x20, [x19, #40]
    ca44:	add	x1, x1, #0x1
    ca48:	str	x1, [x20]
    ca4c:	ldr	x1, [x0]
    ca50:	sub	x1, x1, #0x1
    ca54:	str	x1, [x0]
    ca58:	cbz	x1, cc2c <PyNumber_FloorDivide@plt+0x802c>
    ca5c:	ldr	x22, [x22, #4024]
    ca60:	ldr	x0, [sp, #88]
    ca64:	cmp	x0, x22
    ca68:	b.eq	cc7c <PyNumber_FloorDivide@plt+0x807c>  // b.none
    ca6c:	ldr	x1, [x0]
    ca70:	add	x1, x1, #0x1
    ca74:	str	x1, [x0]
    ca78:	ldr	x1, [x20]
    ca7c:	str	x0, [x19, #40]
    ca80:	sub	x1, x1, #0x1
    ca84:	str	x1, [x20]
    ca88:	cbz	x1, cc10 <PyNumber_FloorDivide@plt+0x8010>
    ca8c:	add	x1, x23, #0xab8
    ca90:	mov	x2, x19
    ca94:	add	x1, x1, #0x360
    ca98:	mov	x3, #0x0                   	// #0
    ca9c:	bl	4ae0 <_PyObject_CallMethodIdObjArgs@plt>
    caa0:	mov	x20, x0
    caa4:	ldr	x1, [x19]
    caa8:	sub	x0, x1, #0x1
    caac:	str	x0, [x19]
    cab0:	cbnz	x0, cb2c <PyNumber_FloorDivide@plt+0x7f2c>
    cab4:	mov	x0, x19
    cab8:	bl	4810 <_Py_Dealloc@plt>
    cabc:	b	cb2c <PyNumber_FloorDivide@plt+0x7f2c>
    cac0:	ldr	x0, [x21]
    cac4:	sub	x0, x0, #0x1
    cac8:	str	x0, [x21]
    cacc:	cbnz	x0, cad8 <PyNumber_FloorDivide@plt+0x7ed8>
    cad0:	mov	x0, x21
    cad4:	bl	4810 <_Py_Dealloc@plt>
    cad8:	ldrb	w6, [x19, #35]
    cadc:	ldrb	w5, [x19, #31]
    cae0:	ldrb	w4, [x19, #30]
    cae4:	ldrb	w3, [x19, #29]
    cae8:	ldrb	w2, [x19, #28]
    caec:	ldrb	w1, [x19, #27]
    caf0:	ldurh	w0, [x19, #25]
    caf4:	rev16	w0, w0
    caf8:	and	w0, w0, #0xffff
    cafc:	bl	8230 <PyNumber_FloorDivide@plt+0x3630>
    cb00:	cmn	x0, #0x1
    cb04:	b.eq	cb28 <PyNumber_FloorDivide@plt+0x7f28>  // b.none
    cb08:	mov	x1, #0xffffffffffffb780    	// #-18560
    cb0c:	movk	x1, #0x886c, lsl #16
    cb10:	movk	x1, #0xfff1, lsl #32
    cb14:	add	x0, x0, x1
    cb18:	bl	8498 <PyNumber_FloorDivide@plt+0x3898>
    cb1c:	mov	x20, x0
    cb20:	cbnz	x0, c9a8 <PyNumber_FloorDivide@plt+0x7da8>
    cb24:	nop
    cb28:	mov	x20, #0x0                   	// #0
    cb2c:	mov	x0, x20
    cb30:	ldp	x29, x30, [sp, #16]
    cb34:	ldp	x19, x20, [sp, #32]
    cb38:	ldp	x21, x22, [sp, #48]
    cb3c:	ldp	x23, x24, [sp, #64]
    cb40:	add	sp, sp, #0x60
    cb44:	ret
    cb48:	mov	x0, x20
    cb4c:	bl	4810 <_Py_Dealloc@plt>
    cb50:	b	c9d4 <PyNumber_FloorDivide@plt+0x7dd4>
    cb54:	mov	x0, x21
    cb58:	bl	4810 <_Py_Dealloc@plt>
    cb5c:	b	ca24 <PyNumber_FloorDivide@plt+0x7e24>
    cb60:	ldrb	w0, [x19, #33]
    cb64:	mov	x7, x20
    cb68:	ldrb	w3, [x19, #32]
    cb6c:	ldrb	w1, [x19, #27]
    cb70:	lsl	w6, w0, #8
    cb74:	ldrb	w9, [x19, #35]
    cb78:	orr	w3, w6, w3, lsl #16
    cb7c:	ldrb	w6, [x19, #34]
    cb80:	ldrb	w2, [x19, #28]
    cb84:	ldrb	w4, [x19, #30]
    cb88:	orr	w6, w3, w6
    cb8c:	ldrb	w5, [x19, #31]
    cb90:	ldrb	w3, [x19, #29]
    cb94:	ldr	x8, [x19, #8]
    cb98:	ldurh	w0, [x19, #25]
    cb9c:	str	w9, [sp]
    cba0:	str	x8, [sp, #8]
    cba4:	rev16	w0, w0
    cba8:	and	w0, w0, #0xffff
    cbac:	bl	92e0 <PyNumber_FloorDivide@plt+0x46e0>
    cbb0:	mov	x20, x0
    cbb4:	ldr	x1, [x19]
    cbb8:	sub	x0, x1, #0x1
    cbbc:	str	x0, [x19]
    cbc0:	cbz	x0, cc70 <PyNumber_FloorDivide@plt+0x8070>
    cbc4:	cbz	x20, cb28 <PyNumber_FloorDivide@plt+0x7f28>
    cbc8:	mov	x19, x20
    cbcc:	ldr	x20, [x20, #40]
    cbd0:	b	ca5c <PyNumber_FloorDivide@plt+0x7e5c>
    cbd4:	ldr	x0, [x20]
    cbd8:	sub	x0, x0, #0x1
    cbdc:	str	x0, [x20]
    cbe0:	cbz	x0, cc20 <PyNumber_FloorDivide@plt+0x8020>
    cbe4:	ldr	x0, [x19]
    cbe8:	mov	x20, x19
    cbec:	ldp	x29, x30, [sp, #16]
    cbf0:	add	x0, x0, #0x1
    cbf4:	str	x0, [x19]
    cbf8:	mov	x0, x20
    cbfc:	ldp	x19, x20, [sp, #32]
    cc00:	ldp	x21, x22, [sp, #48]
    cc04:	ldp	x23, x24, [sp, #64]
    cc08:	add	sp, sp, #0x60
    cc0c:	ret
    cc10:	mov	x0, x20
    cc14:	bl	4810 <_Py_Dealloc@plt>
    cc18:	ldr	x0, [sp, #88]
    cc1c:	b	ca8c <PyNumber_FloorDivide@plt+0x7e8c>
    cc20:	mov	x0, x20
    cc24:	bl	4810 <_Py_Dealloc@plt>
    cc28:	b	cbe4 <PyNumber_FloorDivide@plt+0x7fe4>
    cc2c:	bl	4810 <_Py_Dealloc@plt>
    cc30:	ldr	x20, [x19, #40]
    cc34:	b	ca5c <PyNumber_FloorDivide@plt+0x7e5c>
    cc38:	ldr	x0, [x21]
    cc3c:	sub	x0, x0, #0x1
    cc40:	str	x0, [x21]
    cc44:	cbz	x0, cd70 <PyNumber_FloorDivide@plt+0x8170>
    cc48:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    cc4c:	adrp	x1, 10000 <PyInit__datetime@@Base+0x1118>
    cc50:	ldr	x2, [x21, #8]
    cc54:	add	x1, x1, #0x428
    cc58:	ldr	x0, [x0, #3976]
    cc5c:	mov	x20, #0x0                   	// #0
    cc60:	ldr	x2, [x2, #24]
    cc64:	ldr	x0, [x0]
    cc68:	bl	4b60 <PyErr_Format@plt>
    cc6c:	b	cb2c <PyNumber_FloorDivide@plt+0x7f2c>
    cc70:	mov	x0, x19
    cc74:	bl	4810 <_Py_Dealloc@plt>
    cc78:	b	cbc4 <PyNumber_FloorDivide@plt+0x7fc4>
    cc7c:	add	x21, x21, #0xf78
    cc80:	mov	x0, x19
    cc84:	ldr	x1, [x21, #72]
    cc88:	bl	c420 <PyNumber_FloorDivide@plt+0x7820>
    cc8c:	mov	x21, x0
    cc90:	cbz	x0, cd68 <PyNumber_FloorDivide@plt+0x8168>
    cc94:	add	x4, x24, #0x298
    cc98:	mov	w3, #0x0                   	// #0
    cc9c:	mov	w2, #0x0                   	// #0
    cca0:	mov	w1, #0x1                   	// #1
    cca4:	mov	w0, #0x0                   	// #0
    cca8:	bl	5500 <PyNumber_FloorDivide@plt+0x900>
    ccac:	mov	x22, x0
    ccb0:	cbz	x0, cd4c <PyNumber_FloorDivide@plt+0x814c>
    ccb4:	mov	x1, x0
    ccb8:	mov	x0, x21
    ccbc:	bl	74d8 <PyNumber_FloorDivide@plt+0x28d8>
    ccc0:	mov	x24, x0
    ccc4:	ldr	x1, [x22]
    ccc8:	sub	x0, x1, #0x1
    cccc:	str	x0, [x22]
    ccd0:	cbz	x0, cd7c <PyNumber_FloorDivide@plt+0x817c>
    ccd4:	ldr	x0, [x21]
    ccd8:	sub	x0, x0, #0x1
    ccdc:	str	x0, [x21]
    cce0:	cbz	x0, cd40 <PyNumber_FloorDivide@plt+0x8140>
    cce4:	cbz	x24, cd68 <PyNumber_FloorDivide@plt+0x8168>
    cce8:	mov	x0, x24
    ccec:	bl	4aa0 <_PyLong_AsTime_t@plt>
    ccf0:	ldr	x1, [x24]
    ccf4:	mov	x21, x0
    ccf8:	sub	x1, x1, #0x1
    ccfc:	str	x1, [x24]
    cd00:	cbz	x1, cd98 <PyNumber_FloorDivide@plt+0x8198>
    cd04:	cmn	x21, #0x1
    cd08:	b.eq	cd88 <PyNumber_FloorDivide@plt+0x8188>  // b.none
    cd0c:	mov	x0, x21
    cd10:	bl	8498 <PyNumber_FloorDivide@plt+0x3898>
    cd14:	str	x0, [sp, #88]
    cd18:	cbnz	x0, ca78 <PyNumber_FloorDivide@plt+0x7e78>
    cd1c:	nop
    cd20:	ldr	x0, [x19]
    cd24:	sub	x0, x0, #0x1
    cd28:	str	x0, [x19]
    cd2c:	cbnz	x0, cb28 <PyNumber_FloorDivide@plt+0x7f28>
    cd30:	mov	x0, x19
    cd34:	mov	x20, #0x0                   	// #0
    cd38:	bl	4810 <_Py_Dealloc@plt>
    cd3c:	b	cb2c <PyNumber_FloorDivide@plt+0x7f2c>
    cd40:	mov	x0, x21
    cd44:	bl	4810 <_Py_Dealloc@plt>
    cd48:	b	cce4 <PyNumber_FloorDivide@plt+0x80e4>
    cd4c:	ldr	x0, [x21]
    cd50:	sub	x0, x0, #0x1
    cd54:	str	x0, [x21]
    cd58:	cbnz	x0, cd68 <PyNumber_FloorDivide@plt+0x8168>
    cd5c:	mov	x0, x21
    cd60:	bl	4810 <_Py_Dealloc@plt>
    cd64:	nop
    cd68:	str	xzr, [sp, #88]
    cd6c:	b	cd20 <PyNumber_FloorDivide@plt+0x8120>
    cd70:	mov	x0, x21
    cd74:	bl	4810 <_Py_Dealloc@plt>
    cd78:	b	cc48 <PyNumber_FloorDivide@plt+0x8048>
    cd7c:	mov	x0, x22
    cd80:	bl	4810 <_Py_Dealloc@plt>
    cd84:	b	ccd4 <PyNumber_FloorDivide@plt+0x80d4>
    cd88:	bl	49b0 <PyErr_Occurred@plt>
    cd8c:	cbz	x0, cd0c <PyNumber_FloorDivide@plt+0x810c>
    cd90:	str	xzr, [sp, #88]
    cd94:	b	cd20 <PyNumber_FloorDivide@plt+0x8120>
    cd98:	mov	x0, x24
    cd9c:	bl	4810 <_Py_Dealloc@plt>
    cda0:	b	cd04 <PyNumber_FloorDivide@plt+0x8104>
    cda4:	nop
    cda8:	stp	x29, x30, [sp, #-80]!
    cdac:	mov	x29, sp
    cdb0:	stp	x19, x20, [sp, #16]
    cdb4:	mov	x19, x0
    cdb8:	stp	x21, x22, [sp, #32]
    cdbc:	ldrb	w0, [x0, #24]
    cdc0:	cbnz	w0, ce34 <PyNumber_FloorDivide@plt+0x8234>
    cdc4:	ldr	x0, [x19]
    cdc8:	stp	x23, x24, [sp, #48]
    cdcc:	str	x25, [sp, #64]
    cdd0:	add	x1, x0, #0x1
    cdd4:	str	x1, [x19]
    cdd8:	ldurh	w20, [x19, #25]
    cddc:	str	x0, [x19]
    cde0:	rev16	w20, w20
    cde4:	ldrb	w21, [x19, #27]
    cde8:	ldrb	w22, [x19, #28]
    cdec:	and	w20, w20, #0xffff
    cdf0:	ldrb	w23, [x19, #29]
    cdf4:	ldrb	w24, [x19, #30]
    cdf8:	ldrb	w25, [x19, #31]
    cdfc:	cbz	x0, ce9c <PyNumber_FloorDivide@plt+0x829c>
    ce00:	mov	w5, w25
    ce04:	mov	w4, w24
    ce08:	mov	w3, w23
    ce0c:	mov	w2, w22
    ce10:	mov	w1, w21
    ce14:	mov	w0, w20
    ce18:	ldp	x19, x20, [sp, #16]
    ce1c:	mov	w6, #0x0                   	// #0
    ce20:	ldp	x21, x22, [sp, #32]
    ce24:	ldp	x23, x24, [sp, #48]
    ce28:	ldr	x25, [sp, #64]
    ce2c:	ldp	x29, x30, [sp], #80
    ce30:	b	7ac0 <PyNumber_FloorDivide@plt+0x2ec0>
    ce34:	adrp	x21, 24000 <PyInit__datetime@@Base+0x15118>
    ce38:	ldr	x0, [x19, #40]
    ce3c:	ldr	x21, [x21, #4024]
    ce40:	cmp	x0, x21
    ce44:	b.eq	cdc4 <PyNumber_FloorDivide@plt+0x81c4>  // b.none
    ce48:	mov	x1, x19
    ce4c:	bl	ba70 <PyNumber_FloorDivide@plt+0x6e70>
    ce50:	mov	x20, x0
    ce54:	cbz	x0, cee4 <PyNumber_FloorDivide@plt+0x82e4>
    ce58:	cmp	x0, x21
    ce5c:	b.eq	cea8 <PyNumber_FloorDivide@plt+0x82a8>  // b.none
    ce60:	mov	x0, x19
    ce64:	mov	x1, x20
    ce68:	mov	w2, #0xffffffff            	// #-1
    ce6c:	bl	9e10 <PyNumber_FloorDivide@plt+0x5210>
    ce70:	ldr	x1, [x20]
    ce74:	mov	x19, x0
    ce78:	sub	x0, x1, #0x1
    ce7c:	str	x0, [x20]
    ce80:	cbz	x0, ced0 <PyNumber_FloorDivide@plt+0x82d0>
    ce84:	cbz	x19, cee4 <PyNumber_FloorDivide@plt+0x82e4>
    ce88:	ldr	x0, [x19]
    ce8c:	stp	x23, x24, [sp, #48]
    ce90:	sub	x0, x0, #0x1
    ce94:	str	x25, [sp, #64]
    ce98:	b	cdd8 <PyNumber_FloorDivide@plt+0x81d8>
    ce9c:	mov	x0, x19
    cea0:	bl	4810 <_Py_Dealloc@plt>
    cea4:	b	ce00 <PyNumber_FloorDivide@plt+0x8200>
    cea8:	ldr	x1, [x0]
    ceac:	stp	x23, x24, [sp, #48]
    ceb0:	str	x25, [sp, #64]
    ceb4:	sub	x1, x1, #0x1
    ceb8:	str	x1, [x0]
    cebc:	cbz	x1, cedc <PyNumber_FloorDivide@plt+0x82dc>
    cec0:	ldr	x0, [x19]
    cec4:	add	x1, x0, #0x1
    cec8:	str	x1, [x19]
    cecc:	b	cdd8 <PyNumber_FloorDivide@plt+0x81d8>
    ced0:	mov	x0, x20
    ced4:	bl	4810 <_Py_Dealloc@plt>
    ced8:	b	ce84 <PyNumber_FloorDivide@plt+0x8284>
    cedc:	bl	4810 <_Py_Dealloc@plt>
    cee0:	b	cec0 <PyNumber_FloorDivide@plt+0x82c0>
    cee4:	mov	x0, #0x0                   	// #0
    cee8:	ldp	x19, x20, [sp, #16]
    ceec:	ldp	x21, x22, [sp, #32]
    cef0:	ldp	x29, x30, [sp], #80
    cef4:	ret
    cef8:	sub	sp, sp, #0x30
    cefc:	mov	x8, x0
    cf00:	stp	x29, x30, [sp, #16]
    cf04:	add	x29, sp, #0x10
    cf08:	stp	x19, x20, [sp, #32]
    cf0c:	ldrb	w1, [x0, #33]
    cf10:	ldrb	w6, [x0, #32]
    cf14:	ldrb	w7, [x0, #24]
    cf18:	ldurh	w0, [x0, #25]
    cf1c:	lsl	w1, w1, #8
    cf20:	ldrb	w2, [x8, #34]
    cf24:	orr	w6, w1, w6, lsl #16
    cf28:	rev16	w0, w0
    cf2c:	ldrb	w1, [x8, #27]
    cf30:	orr	w6, w6, w2
    cf34:	ldrb	w3, [x8, #29]
    cf38:	ldrb	w2, [x8, #28]
    cf3c:	and	w0, w0, #0xffff
    cf40:	ldrb	w4, [x8, #30]
    cf44:	ldrb	w5, [x8, #31]
    cf48:	cbz	w7, cfb4 <PyNumber_FloorDivide@plt+0x83b4>
    cf4c:	ldr	x7, [x8, #40]
    cf50:	ldrb	w9, [x8, #35]
    cf54:	ldr	x8, [x8, #8]
    cf58:	cmp	w9, #0x0
    cf5c:	cset	w9, eq  // eq = none
    cf60:	str	w9, [sp]
    cf64:	str	x8, [sp, #8]
    cf68:	bl	92e0 <PyNumber_FloorDivide@plt+0x46e0>
    cf6c:	mov	x19, x0
    cf70:	cbz	x0, cffc <PyNumber_FloorDivide@plt+0x83fc>
    cf74:	ldrb	w0, [x0, #24]
    cf78:	cbnz	w0, cfc0 <PyNumber_FloorDivide@plt+0x83c0>
    cf7c:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    cf80:	mov	x1, x19
    cf84:	ldr	x0, [x0, #4024]
    cf88:	bl	ba70 <PyNumber_FloorDivide@plt+0x6e70>
    cf8c:	mov	x20, x0
    cf90:	ldr	x1, [x19]
    cf94:	sub	x1, x1, #0x1
    cf98:	str	x1, [x19]
    cf9c:	cbz	x1, cfe0 <PyNumber_FloorDivide@plt+0x83e0>
    cfa0:	mov	x0, x20
    cfa4:	ldp	x29, x30, [sp, #16]
    cfa8:	ldp	x19, x20, [sp, #32]
    cfac:	add	sp, sp, #0x30
    cfb0:	ret
    cfb4:	adrp	x7, 24000 <PyInit__datetime@@Base+0x15118>
    cfb8:	ldr	x7, [x7, #4024]
    cfbc:	b	cf50 <PyNumber_FloorDivide@plt+0x8350>
    cfc0:	ldr	x0, [x19, #40]
    cfc4:	mov	x1, x19
    cfc8:	bl	ba70 <PyNumber_FloorDivide@plt+0x6e70>
    cfcc:	mov	x20, x0
    cfd0:	ldr	x1, [x19]
    cfd4:	sub	x1, x1, #0x1
    cfd8:	str	x1, [x19]
    cfdc:	cbnz	x1, cfa0 <PyNumber_FloorDivide@plt+0x83a0>
    cfe0:	mov	x0, x19
    cfe4:	bl	4810 <_Py_Dealloc@plt>
    cfe8:	mov	x0, x20
    cfec:	ldp	x29, x30, [sp, #16]
    cff0:	ldp	x19, x20, [sp, #32]
    cff4:	add	sp, sp, #0x30
    cff8:	ret
    cffc:	mov	x20, #0x0                   	// #0
    d000:	b	cfa0 <PyNumber_FloorDivide@plt+0x83a0>
    d004:	nop
    d008:	stp	x29, x30, [sp, #-48]!
    d00c:	mov	x29, sp
    d010:	stp	x19, x20, [sp, #16]
    d014:	mov	x19, x2
    d018:	mov	x20, x3
    d01c:	str	x21, [sp, #32]
    d020:	mov	x21, x1
    d024:	bl	cef8 <PyNumber_FloorDivide@plt+0x82f8>
    d028:	cbz	x0, d10c <PyNumber_FloorDivide@plt+0x850c>
    d02c:	mov	x4, x0
    d030:	cmp	x0, x19
    d034:	b.eq	d07c <PyNumber_FloorDivide@plt+0x847c>  // b.none
    d038:	ldr	w1, [x0, #24]
    d03c:	ldr	w2, [x19, #24]
    d040:	cmp	w2, w1
    d044:	b.eq	d070 <PyNumber_FloorDivide@plt+0x8470>  // b.none
    d048:	mov	w19, #0x1                   	// #1
    d04c:	ldr	x0, [x4]
    d050:	sub	x0, x0, #0x1
    d054:	str	x0, [x4]
    d058:	cbz	x0, d0d8 <PyNumber_FloorDivide@plt+0x84d8>
    d05c:	mov	w0, w19
    d060:	ldp	x19, x20, [sp, #16]
    d064:	ldr	x21, [sp, #32]
    d068:	ldp	x29, x30, [sp], #48
    d06c:	ret
    d070:	mov	x1, x19
    d074:	bl	7db8 <PyNumber_FloorDivide@plt+0x31b8>
    d078:	cbnz	w0, d048 <PyNumber_FloorDivide@plt+0x8448>
    d07c:	ldr	x0, [x4]
    d080:	sub	x0, x0, #0x1
    d084:	str	x0, [x4]
    d088:	cbz	x0, d0f4 <PyNumber_FloorDivide@plt+0x84f4>
    d08c:	mov	x0, x21
    d090:	bl	cef8 <PyNumber_FloorDivide@plt+0x82f8>
    d094:	mov	x4, x0
    d098:	cbz	x0, d10c <PyNumber_FloorDivide@plt+0x850c>
    d09c:	cmp	x0, x20
    d0a0:	b.eq	d124 <PyNumber_FloorDivide@plt+0x8524>  // b.none
    d0a4:	ldr	w2, [x0, #24]
    d0a8:	mov	w19, #0x1                   	// #1
    d0ac:	ldr	w1, [x20, #24]
    d0b0:	cmp	w2, w1
    d0b4:	b.ne	d04c <PyNumber_FloorDivide@plt+0x844c>  // b.any
    d0b8:	mov	x1, x20
    d0bc:	bl	7db8 <PyNumber_FloorDivide@plt+0x31b8>
    d0c0:	cmp	w0, #0x0
    d0c4:	ldr	x0, [x4]
    d0c8:	cset	w19, ne  // ne = any
    d0cc:	sub	x0, x0, #0x1
    d0d0:	str	x0, [x4]
    d0d4:	cbnz	x0, d05c <PyNumber_FloorDivide@plt+0x845c>
    d0d8:	mov	x0, x4
    d0dc:	bl	4810 <_Py_Dealloc@plt>
    d0e0:	mov	w0, w19
    d0e4:	ldp	x19, x20, [sp, #16]
    d0e8:	ldr	x21, [sp, #32]
    d0ec:	ldp	x29, x30, [sp], #48
    d0f0:	ret
    d0f4:	mov	x0, x4
    d0f8:	bl	4810 <_Py_Dealloc@plt>
    d0fc:	mov	x0, x21
    d100:	bl	cef8 <PyNumber_FloorDivide@plt+0x82f8>
    d104:	mov	x4, x0
    d108:	cbnz	x0, d09c <PyNumber_FloorDivide@plt+0x849c>
    d10c:	mov	w19, #0xffffffff            	// #-1
    d110:	mov	w0, w19
    d114:	ldp	x19, x20, [sp, #16]
    d118:	ldr	x21, [sp, #32]
    d11c:	ldp	x29, x30, [sp], #48
    d120:	ret
    d124:	mov	x4, x20
    d128:	mov	w19, #0x0                   	// #0
    d12c:	b	d04c <PyNumber_FloorDivide@plt+0x844c>
    d130:	stp	x29, x30, [sp, #-64]!
    d134:	mov	x29, sp
    d138:	stp	x19, x20, [sp, #16]
    d13c:	mov	x19, x1
    d140:	stp	x21, x22, [sp, #32]
    d144:	mov	x21, x0
    d148:	ldr	x0, [x19, #8]
    d14c:	stp	x23, x24, [sp, #48]
    d150:	adrp	x24, 25000 <PyInit__datetime@@Base+0x16118>
    d154:	add	x20, x24, #0x298
    d158:	mov	w23, w2
    d15c:	add	x1, x20, #0x1a0
    d160:	cmp	x0, x1
    d164:	b.eq	d1c8 <PyNumber_FloorDivide@plt+0x85c8>  // b.none
    d168:	bl	4b30 <PyType_IsSubtype@plt>
    d16c:	cbnz	w0, d1c8 <PyNumber_FloorDivide@plt+0x85c8>
    d170:	ldr	x0, [x19, #8]
    d174:	add	x1, x20, #0x680
    d178:	cmp	x0, x1
    d17c:	b.eq	d188 <PyNumber_FloorDivide@plt+0x8588>  // b.none
    d180:	bl	4b30 <PyType_IsSubtype@plt>
    d184:	cbz	w0, d478 <PyNumber_FloorDivide@plt+0x8878>
    d188:	cmp	w23, #0x2
    d18c:	b.eq	d4bc <PyNumber_FloorDivide@plt+0x88bc>  // b.none
    d190:	cmp	w23, #0x3
    d194:	b.ne	d500 <PyNumber_FloorDivide@plt+0x8900>  // b.any
    d198:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    d19c:	ldp	x21, x22, [sp, #32]
    d1a0:	ldr	x0, [x0, #4040]
    d1a4:	ldp	x23, x24, [sp, #48]
    d1a8:	mov	x19, x0
    d1ac:	ldr	x1, [x0]
    d1b0:	add	x1, x1, #0x1
    d1b4:	str	x1, [x0]
    d1b8:	mov	x0, x19
    d1bc:	ldp	x19, x20, [sp, #16]
    d1c0:	ldp	x29, x30, [sp], #64
    d1c4:	ret
    d1c8:	ldrb	w0, [x21, #24]
    d1cc:	ldrb	w1, [x19, #24]
    d1d0:	cbnz	w0, d278 <PyNumber_FloorDivide@plt+0x8678>
    d1d4:	cbz	w1, d290 <PyNumber_FloorDivide@plt+0x8690>
    d1d8:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    d1dc:	ldr	x1, [x19, #40]
    d1e0:	ldr	x0, [x0, #4024]
    d1e4:	cmp	x1, x0
    d1e8:	b.eq	d290 <PyNumber_FloorDivide@plt+0x8690>  // b.none
    d1ec:	mov	x1, x21
    d1f0:	bl	ba70 <PyNumber_FloorDivide@plt+0x6e70>
    d1f4:	mov	x20, x0
    d1f8:	cbz	x0, d37c <PyNumber_FloorDivide@plt+0x877c>
    d1fc:	ldrb	w0, [x19, #24]
    d200:	cbz	w0, d354 <PyNumber_FloorDivide@plt+0x8754>
    d204:	ldr	x0, [x19, #40]
    d208:	mov	x1, x19
    d20c:	bl	ba70 <PyNumber_FloorDivide@plt+0x6e70>
    d210:	mov	x22, x0
    d214:	cbz	x0, d36c <PyNumber_FloorDivide@plt+0x876c>
    d218:	cmp	x20, x0
    d21c:	b.eq	d2f0 <PyNumber_FloorDivide@plt+0x86f0>  // b.none
    d220:	ldr	x0, [x20, #8]
    d224:	add	x1, x24, #0x298
    d228:	cmp	x0, x1
    d22c:	b.eq	d2b8 <PyNumber_FloorDivide@plt+0x86b8>  // b.none
    d230:	bl	4b30 <PyType_IsSubtype@plt>
    d234:	cbnz	w0, d2b8 <PyNumber_FloorDivide@plt+0x86b8>
    d238:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    d23c:	ldr	x0, [x0, #4024]
    d240:	cmp	x20, x0
    d244:	ccmp	x22, x0, #0x4, ne  // ne = any
    d248:	b.ne	d3b8 <PyNumber_FloorDivide@plt+0x87b8>  // b.any
    d24c:	cmp	w23, #0x2
    d250:	b.eq	d43c <PyNumber_FloorDivide@plt+0x883c>  // b.none
    d254:	cmp	w23, #0x3
    d258:	b.ne	d458 <PyNumber_FloorDivide@plt+0x8858>  // b.any
    d25c:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    d260:	ldr	x0, [x0, #4040]
    d264:	mov	x19, x0
    d268:	ldr	x1, [x0]
    d26c:	add	x1, x1, #0x1
    d270:	str	x1, [x0]
    d274:	b	d31c <PyNumber_FloorDivide@plt+0x871c>
    d278:	ldr	x0, [x21, #40]
    d27c:	cbnz	w1, d42c <PyNumber_FloorDivide@plt+0x882c>
    d280:	adrp	x1, 24000 <PyInit__datetime@@Base+0x15118>
    d284:	ldr	x1, [x1, #4024]
    d288:	cmp	x0, x1
    d28c:	b.ne	d1ec <PyNumber_FloorDivide@plt+0x85ec>  // b.any
    d290:	add	x1, x19, #0x19
    d294:	add	x0, x21, #0x19
    d298:	mov	x2, #0xa                   	// #10
    d29c:	bl	49e0 <memcmp@plt>
    d2a0:	mov	w1, w23
    d2a4:	ldp	x19, x20, [sp, #16]
    d2a8:	ldp	x21, x22, [sp, #32]
    d2ac:	ldp	x23, x24, [sp, #48]
    d2b0:	ldp	x29, x30, [sp], #64
    d2b4:	b	5b50 <PyNumber_FloorDivide@plt+0xf50>
    d2b8:	ldr	x0, [x22, #8]
    d2bc:	add	x1, x24, #0x298
    d2c0:	cmp	x0, x1
    d2c4:	b.eq	d2d0 <PyNumber_FloorDivide@plt+0x86d0>  // b.none
    d2c8:	bl	4b30 <PyType_IsSubtype@plt>
    d2cc:	cbz	w0, d238 <PyNumber_FloorDivide@plt+0x8638>
    d2d0:	ldr	w1, [x20, #24]
    d2d4:	ldr	w0, [x22, #24]
    d2d8:	cmp	w1, w0
    d2dc:	b.ne	d238 <PyNumber_FloorDivide@plt+0x8638>  // b.any
    d2e0:	mov	x1, x22
    d2e4:	mov	x0, x20
    d2e8:	bl	7db8 <PyNumber_FloorDivide@plt+0x31b8>
    d2ec:	cbnz	w0, d238 <PyNumber_FloorDivide@plt+0x8638>
    d2f0:	add	x1, x19, #0x19
    d2f4:	add	x0, x21, #0x19
    d2f8:	mov	x2, #0xa                   	// #10
    d2fc:	bl	49e0 <memcmp@plt>
    d300:	sub	w1, w23, #0x2
    d304:	cmp	w0, #0x0
    d308:	ccmp	w1, #0x1, #0x2, eq  // eq = none
    d30c:	b.ls	d494 <PyNumber_FloorDivide@plt+0x8894>  // b.plast
    d310:	mov	w1, w23
    d314:	bl	5b50 <PyNumber_FloorDivide@plt+0xf50>
    d318:	mov	x19, x0
    d31c:	ldr	x1, [x20]
    d320:	sub	x1, x1, #0x1
    d324:	str	x1, [x20]
    d328:	cbz	x1, d420 <PyNumber_FloorDivide@plt+0x8820>
    d32c:	ldr	x0, [x22]
    d330:	sub	x0, x0, #0x1
    d334:	str	x0, [x22]
    d338:	cbz	x0, d398 <PyNumber_FloorDivide@plt+0x8798>
    d33c:	mov	x0, x19
    d340:	ldp	x19, x20, [sp, #16]
    d344:	ldp	x21, x22, [sp, #32]
    d348:	ldp	x23, x24, [sp, #48]
    d34c:	ldp	x29, x30, [sp], #64
    d350:	ret
    d354:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    d358:	mov	x1, x19
    d35c:	ldr	x0, [x0, #4024]
    d360:	bl	ba70 <PyNumber_FloorDivide@plt+0x6e70>
    d364:	mov	x22, x0
    d368:	cbnz	x0, d218 <PyNumber_FloorDivide@plt+0x8618>
    d36c:	ldr	x0, [x20]
    d370:	sub	x0, x0, #0x1
    d374:	str	x0, [x20]
    d378:	cbz	x0, d4f0 <PyNumber_FloorDivide@plt+0x88f0>
    d37c:	mov	x19, #0x0                   	// #0
    d380:	mov	x0, x19
    d384:	ldp	x19, x20, [sp, #16]
    d388:	ldp	x21, x22, [sp, #32]
    d38c:	ldp	x23, x24, [sp, #48]
    d390:	ldp	x29, x30, [sp], #64
    d394:	ret
    d398:	mov	x0, x22
    d39c:	bl	4810 <_Py_Dealloc@plt>
    d3a0:	mov	x0, x19
    d3a4:	ldp	x19, x20, [sp, #16]
    d3a8:	ldp	x21, x22, [sp, #32]
    d3ac:	ldp	x23, x24, [sp, #48]
    d3b0:	ldp	x29, x30, [sp], #64
    d3b4:	ret
    d3b8:	mov	x1, x19
    d3bc:	mov	x0, x21
    d3c0:	bl	c420 <PyNumber_FloorDivide@plt+0x7820>
    d3c4:	cbz	x0, d530 <PyNumber_FloorDivide@plt+0x8930>
    d3c8:	ldr	x1, [x0]
    d3cc:	ldr	w24, [x0, #24]
    d3d0:	sub	x1, x1, #0x1
    d3d4:	str	x1, [x0]
    d3d8:	cbnz	w24, d4d8 <PyNumber_FloorDivide@plt+0x88d8>
    d3dc:	ldp	w24, w2, [x0, #28]
    d3e0:	orr	w24, w24, w2
    d3e4:	cbz	x1, d538 <PyNumber_FloorDivide@plt+0x8938>
    d3e8:	cmp	w24, #0x0
    d3ec:	sub	w0, w23, #0x2
    d3f0:	ccmp	w0, #0x1, #0x2, eq  // eq = none
    d3f4:	b.hi	d4dc <PyNumber_FloorDivide@plt+0x88dc>  // b.pmore
    d3f8:	mov	x1, x19
    d3fc:	mov	x0, x21
    d400:	mov	x3, x22
    d404:	mov	x2, x20
    d408:	bl	d008 <PyNumber_FloorDivide@plt+0x8408>
    d40c:	cmn	w0, #0x1
    d410:	b.eq	d530 <PyNumber_FloorDivide@plt+0x8930>  // b.none
    d414:	cmp	w0, #0x0
    d418:	cset	w24, ne  // ne = any
    d41c:	b	d4dc <PyNumber_FloorDivide@plt+0x88dc>
    d420:	mov	x0, x20
    d424:	bl	4810 <_Py_Dealloc@plt>
    d428:	b	d32c <PyNumber_FloorDivide@plt+0x872c>
    d42c:	ldr	x1, [x19, #40]
    d430:	cmp	x1, x0
    d434:	b.ne	d1ec <PyNumber_FloorDivide@plt+0x85ec>  // b.any
    d438:	b	d290 <PyNumber_FloorDivide@plt+0x8690>
    d43c:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    d440:	ldr	x0, [x0, #3992]
    d444:	mov	x19, x0
    d448:	ldr	x1, [x0]
    d44c:	add	x1, x1, #0x1
    d450:	str	x1, [x0]
    d454:	b	d31c <PyNumber_FloorDivide@plt+0x871c>
    d458:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    d45c:	adrp	x1, 10000 <PyInit__datetime@@Base+0x1118>
    d460:	mov	x19, #0x0                   	// #0
    d464:	add	x1, x1, #0x478
    d468:	ldr	x0, [x0, #3976]
    d46c:	ldr	x0, [x0]
    d470:	bl	4880 <PyErr_SetString@plt>
    d474:	b	d31c <PyNumber_FloorDivide@plt+0x871c>
    d478:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    d47c:	ldr	x0, [x0, #3960]
    d480:	mov	x19, x0
    d484:	ldr	x1, [x0]
    d488:	add	x1, x1, #0x1
    d48c:	str	x1, [x0]
    d490:	b	d33c <PyNumber_FloorDivide@plt+0x873c>
    d494:	mov	x1, x19
    d498:	mov	x0, x21
    d49c:	mov	x3, x22
    d4a0:	mov	x2, x20
    d4a4:	bl	d008 <PyNumber_FloorDivide@plt+0x8408>
    d4a8:	cmn	w0, #0x1
    d4ac:	b.eq	d530 <PyNumber_FloorDivide@plt+0x8930>  // b.none
    d4b0:	cmp	w0, #0x0
    d4b4:	cset	w0, ne  // ne = any
    d4b8:	b	d310 <PyNumber_FloorDivide@plt+0x8710>
    d4bc:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    d4c0:	ldr	x0, [x0, #3992]
    d4c4:	mov	x19, x0
    d4c8:	ldr	x1, [x0]
    d4cc:	add	x1, x1, #0x1
    d4d0:	str	x1, [x0]
    d4d4:	b	d33c <PyNumber_FloorDivide@plt+0x873c>
    d4d8:	cbz	x1, d538 <PyNumber_FloorDivide@plt+0x8938>
    d4dc:	mov	w1, w23
    d4e0:	mov	w0, w24
    d4e4:	bl	5b50 <PyNumber_FloorDivide@plt+0xf50>
    d4e8:	mov	x19, x0
    d4ec:	b	d31c <PyNumber_FloorDivide@plt+0x871c>
    d4f0:	mov	x0, x20
    d4f4:	mov	x19, #0x0                   	// #0
    d4f8:	bl	4810 <_Py_Dealloc@plt>
    d4fc:	b	d33c <PyNumber_FloorDivide@plt+0x873c>
    d500:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    d504:	adrp	x1, 10000 <PyInit__datetime@@Base+0x1118>
    d508:	ldr	x3, [x19, #8]
    d50c:	add	x1, x1, #0x460
    d510:	ldr	x0, [x0, #3976]
    d514:	mov	x19, #0x0                   	// #0
    d518:	ldr	x2, [x21, #8]
    d51c:	ldr	x0, [x0]
    d520:	ldr	x3, [x3, #24]
    d524:	ldr	x2, [x2, #24]
    d528:	bl	4b60 <PyErr_Format@plt>
    d52c:	b	d33c <PyNumber_FloorDivide@plt+0x873c>
    d530:	mov	x19, #0x0                   	// #0
    d534:	b	d31c <PyNumber_FloorDivide@plt+0x871c>
    d538:	bl	4810 <_Py_Dealloc@plt>
    d53c:	b	d3e8 <PyNumber_FloorDivide@plt+0x87e8>
    d540:	sub	sp, sp, #0x50
    d544:	stp	x29, x30, [sp, #16]
    d548:	add	x29, sp, #0x10
    d54c:	stp	x19, x20, [sp, #32]
    d550:	ldr	x20, [x0, #16]
    d554:	cmn	x20, #0x1
    d558:	b.eq	d570 <PyNumber_FloorDivide@plt+0x8970>  // b.none
    d55c:	mov	x0, x20
    d560:	ldp	x29, x30, [sp, #16]
    d564:	ldp	x19, x20, [sp, #32]
    d568:	add	sp, sp, #0x50
    d56c:	ret
    d570:	stp	x21, x22, [sp, #48]
    d574:	mov	x19, x0
    d578:	ldrb	w0, [x0, #35]
    d57c:	ldrb	w7, [x19, #24]
    d580:	cbz	w0, d6f4 <PyNumber_FloorDivide@plt+0x8af4>
    d584:	ldrb	w1, [x19, #33]
    d588:	ldrb	w6, [x19, #32]
    d58c:	ldurh	w0, [x19, #25]
    d590:	ldrb	w2, [x19, #34]
    d594:	lsl	w1, w1, #8
    d598:	orr	w6, w1, w6, lsl #16
    d59c:	rev16	w0, w0
    d5a0:	orr	w6, w6, w2
    d5a4:	ldrb	w1, [x19, #27]
    d5a8:	ldrb	w2, [x19, #28]
    d5ac:	and	w0, w0, #0xffff
    d5b0:	ldrb	w3, [x19, #29]
    d5b4:	ldrb	w4, [x19, #30]
    d5b8:	ldrb	w5, [x19, #31]
    d5bc:	cbz	w7, d768 <PyNumber_FloorDivide@plt+0x8b68>
    d5c0:	ldr	x7, [x19, #40]
    d5c4:	str	wzr, [sp]
    d5c8:	ldr	x8, [x19, #8]
    d5cc:	str	x8, [sp, #8]
    d5d0:	bl	92e0 <PyNumber_FloorDivide@plt+0x46e0>
    d5d4:	mov	x22, x0
    d5d8:	cbz	x0, d6dc <PyNumber_FloorDivide@plt+0x8adc>
    d5dc:	ldrb	w7, [x0, #24]
    d5e0:	cbz	w7, d708 <PyNumber_FloorDivide@plt+0x8b08>
    d5e4:	ldr	x0, [x22, #40]
    d5e8:	mov	x1, x22
    d5ec:	bl	ba70 <PyNumber_FloorDivide@plt+0x6e70>
    d5f0:	mov	x21, x0
    d5f4:	ldr	x1, [x22]
    d5f8:	sub	x0, x1, #0x1
    d5fc:	str	x0, [x22]
    d600:	cbz	x0, d72c <PyNumber_FloorDivide@plt+0x8b2c>
    d604:	cbz	x21, d6dc <PyNumber_FloorDivide@plt+0x8adc>
    d608:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    d60c:	ldr	x0, [x0, #4024]
    d610:	cmp	x21, x0
    d614:	b.eq	d754 <PyNumber_FloorDivide@plt+0x8b54>  // b.none
    d618:	str	x23, [sp, #64]
    d61c:	ldrb	w2, [x19, #28]
    d620:	ldrb	w1, [x19, #27]
    d624:	ldurh	w0, [x19, #25]
    d628:	rev16	w0, w0
    d62c:	and	w0, w0, #0xffff
    d630:	bl	4e80 <PyNumber_FloorDivide@plt+0x280>
    d634:	ldrb	w1, [x19, #30]
    d638:	mov	w7, #0xe10                 	// #3600
    d63c:	ldrb	w6, [x19, #29]
    d640:	adrp	x4, 25000 <PyInit__datetime@@Base+0x16118>
    d644:	ldrb	w2, [x19, #33]
    d648:	add	x4, x4, #0x298
    d64c:	lsl	w5, w1, #4
    d650:	ldrb	w3, [x19, #32]
    d654:	sub	w5, w5, w1
    d658:	ldrb	w8, [x19, #34]
    d65c:	ldrb	w1, [x19, #31]
    d660:	lsl	w2, w2, #8
    d664:	lsl	w5, w5, #2
    d668:	orr	w2, w2, w3, lsl #16
    d66c:	orr	w2, w2, w8
    d670:	mov	w3, #0x1                   	// #1
    d674:	madd	w5, w6, w7, w5
    d678:	add	w1, w5, w1
    d67c:	bl	5500 <PyNumber_FloorDivide@plt+0x900>
    d680:	mov	x23, x0
    d684:	cbz	x0, d784 <PyNumber_FloorDivide@plt+0x8b84>
    d688:	mov	x1, x21
    d68c:	bl	86b0 <PyNumber_FloorDivide@plt+0x3ab0>
    d690:	ldr	x1, [x23]
    d694:	mov	x22, x0
    d698:	sub	x0, x1, #0x1
    d69c:	str	x0, [x23]
    d6a0:	cbz	x0, d748 <PyNumber_FloorDivide@plt+0x8b48>
    d6a4:	cbz	x22, d784 <PyNumber_FloorDivide@plt+0x8b84>
    d6a8:	mov	x0, x22
    d6ac:	bl	4a50 <PyObject_Hash@plt>
    d6b0:	str	x0, [x19, #16]
    d6b4:	ldr	x0, [x22]
    d6b8:	sub	x0, x0, #0x1
    d6bc:	str	x0, [x22]
    d6c0:	cbz	x0, d774 <PyNumber_FloorDivide@plt+0x8b74>
    d6c4:	ldr	x23, [sp, #64]
    d6c8:	ldr	x0, [x21]
    d6cc:	sub	x0, x0, #0x1
    d6d0:	str	x0, [x21]
    d6d4:	cbz	x0, d738 <PyNumber_FloorDivide@plt+0x8b38>
    d6d8:	ldr	x20, [x19, #16]
    d6dc:	mov	x0, x20
    d6e0:	ldp	x29, x30, [sp, #16]
    d6e4:	ldp	x19, x20, [sp, #32]
    d6e8:	ldp	x21, x22, [sp, #48]
    d6ec:	add	sp, sp, #0x50
    d6f0:	ret
    d6f4:	ldr	x0, [x19]
    d6f8:	mov	x22, x19
    d6fc:	add	x0, x0, #0x1
    d700:	str	x0, [x19]
    d704:	cbnz	w7, d5e4 <PyNumber_FloorDivide@plt+0x89e4>
    d708:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    d70c:	mov	x1, x22
    d710:	ldr	x0, [x0, #4024]
    d714:	bl	ba70 <PyNumber_FloorDivide@plt+0x6e70>
    d718:	mov	x21, x0
    d71c:	ldr	x1, [x22]
    d720:	sub	x0, x1, #0x1
    d724:	str	x0, [x22]
    d728:	cbnz	x0, d604 <PyNumber_FloorDivide@plt+0x8a04>
    d72c:	mov	x0, x22
    d730:	bl	4810 <_Py_Dealloc@plt>
    d734:	b	d604 <PyNumber_FloorDivide@plt+0x8a04>
    d738:	mov	x0, x21
    d73c:	bl	4810 <_Py_Dealloc@plt>
    d740:	ldr	x20, [x19, #16]
    d744:	b	d6dc <PyNumber_FloorDivide@plt+0x8adc>
    d748:	mov	x0, x23
    d74c:	bl	4810 <_Py_Dealloc@plt>
    d750:	b	d6a4 <PyNumber_FloorDivide@plt+0x8aa4>
    d754:	add	x0, x19, #0x19
    d758:	mov	x1, #0xa                   	// #10
    d75c:	bl	48b0 <_Py_HashBytes@plt>
    d760:	str	x0, [x19, #16]
    d764:	b	d6c8 <PyNumber_FloorDivide@plt+0x8ac8>
    d768:	adrp	x7, 24000 <PyInit__datetime@@Base+0x15118>
    d76c:	ldr	x7, [x7, #4024]
    d770:	b	d5c4 <PyNumber_FloorDivide@plt+0x89c4>
    d774:	mov	x0, x22
    d778:	bl	4810 <_Py_Dealloc@plt>
    d77c:	ldr	x23, [sp, #64]
    d780:	b	d6c8 <PyNumber_FloorDivide@plt+0x8ac8>
    d784:	ldr	x0, [x21]
    d788:	sub	x0, x0, #0x1
    d78c:	str	x0, [x21]
    d790:	cbz	x0, d7a0 <PyNumber_FloorDivide@plt+0x8ba0>
    d794:	ldp	x21, x22, [sp, #48]
    d798:	ldr	x23, [sp, #64]
    d79c:	b	d55c <PyNumber_FloorDivide@plt+0x895c>
    d7a0:	mov	x0, x21
    d7a4:	bl	4810 <_Py_Dealloc@plt>
    d7a8:	ldp	x21, x22, [sp, #48]
    d7ac:	ldr	x23, [sp, #64]
    d7b0:	b	d55c <PyNumber_FloorDivide@plt+0x895c>
    d7b4:	nop
    d7b8:	sub	sp, sp, #0x50
    d7bc:	stp	x29, x30, [sp, #16]
    d7c0:	add	x29, sp, #0x10
    d7c4:	stp	x19, x20, [sp, #32]
    d7c8:	mov	x19, x0
    d7cc:	mov	x20, x1
    d7d0:	mov	x0, x2
    d7d4:	mov	x1, x3
    d7d8:	stp	x21, x22, [sp, #48]
    d7dc:	bl	ba70 <PyNumber_FloorDivide@plt+0x6e70>
    d7e0:	cbz	x0, d9d4 <PyNumber_FloorDivide@plt+0x8dd4>
    d7e4:	adrp	x1, 24000 <PyInit__datetime@@Base+0x15118>
    d7e8:	mov	x21, x0
    d7ec:	ldr	x1, [x1, #4024]
    d7f0:	cmp	x0, x1
    d7f4:	b.eq	d998 <PyNumber_FloorDivide@plt+0x8d98>  // b.none
    d7f8:	ldr	w1, [x0, #24]
    d7fc:	stp	x23, x24, [sp, #64]
    d800:	mov	w23, #0x2b                  	// #43
    d804:	tbnz	w1, #31, d964 <PyNumber_FloorDivide@plt+0x8d64>
    d808:	ldr	x0, [x21]
    d80c:	ldp	w22, w24, [x21, #28]
    d810:	sub	x0, x0, #0x1
    d814:	str	x0, [x21]
    d818:	cbz	x0, d958 <PyNumber_FloorDivide@plt+0x8d58>
    d81c:	mov	w6, #0x8889                	// #34953
    d820:	movk	w6, #0x8888, lsl #16
    d824:	smull	x6, w22, w6
    d828:	lsr	x6, x6, #32
    d82c:	add	w6, w22, w6
    d830:	asr	w6, w6, #5
    d834:	sub	w6, w6, w22, asr #31
    d838:	lsl	w0, w6, #4
    d83c:	sub	w0, w0, w6
    d840:	subs	w22, w22, w0, lsl #2
    d844:	b.mi	d908 <PyNumber_FloorDivide@plt+0x8d08>  // b.first
    d848:	mov	w4, #0x8889                	// #34953
    d84c:	movk	w4, #0x8888, lsl #16
    d850:	smull	x4, w6, w4
    d854:	lsr	x4, x4, #32
    d858:	add	w4, w6, w4
    d85c:	asr	w4, w4, #5
    d860:	sub	w4, w4, w6, asr #31
    d864:	lsl	w0, w4, #4
    d868:	sub	w0, w0, w4
    d86c:	subs	w6, w6, w0, lsl #2
    d870:	b.mi	d8b4 <PyNumber_FloorDivide@plt+0x8cb4>  // b.first
    d874:	cbnz	w24, d8c0 <PyNumber_FloorDivide@plt+0x8cc0>
    d878:	cbnz	w22, d914 <PyNumber_FloorDivide@plt+0x8d14>
    d87c:	mov	w3, w23
    d880:	mov	x5, x20
    d884:	mov	x0, x19
    d888:	adrp	x2, 10000 <PyInit__datetime@@Base+0x1118>
    d88c:	mov	x1, #0x64                  	// #100
    d890:	add	x2, x2, #0x4e0
    d894:	bl	48c0 <PyOS_snprintf@plt>
    d898:	ldp	x23, x24, [sp, #64]
    d89c:	mov	w0, w22
    d8a0:	ldp	x29, x30, [sp, #16]
    d8a4:	ldp	x19, x20, [sp, #32]
    d8a8:	ldp	x21, x22, [sp, #48]
    d8ac:	add	sp, sp, #0x50
    d8b0:	ret
    d8b4:	sub	w4, w4, #0x1
    d8b8:	add	w6, w6, #0x3c
    d8bc:	cbz	w24, d878 <PyNumber_FloorDivide@plt+0x8c78>
    d8c0:	str	w22, [sp]
    d8c4:	mov	w3, w23
    d8c8:	str	w24, [sp, #8]
    d8cc:	mov	x7, x20
    d8d0:	mov	x5, x20
    d8d4:	mov	x0, x19
    d8d8:	mov	x1, #0x64                  	// #100
    d8dc:	mov	w22, #0x0                   	// #0
    d8e0:	adrp	x2, 10000 <PyInit__datetime@@Base+0x1118>
    d8e4:	add	x2, x2, #0x4b0
    d8e8:	bl	48c0 <PyOS_snprintf@plt>
    d8ec:	mov	w0, w22
    d8f0:	ldp	x29, x30, [sp, #16]
    d8f4:	ldp	x19, x20, [sp, #32]
    d8f8:	ldp	x21, x22, [sp, #48]
    d8fc:	ldp	x23, x24, [sp, #64]
    d900:	add	sp, sp, #0x50
    d904:	ret
    d908:	sub	w6, w6, #0x1
    d90c:	add	w22, w22, #0x3c
    d910:	b	d848 <PyNumber_FloorDivide@plt+0x8c48>
    d914:	str	w22, [sp]
    d918:	mov	w3, w23
    d91c:	mov	x7, x20
    d920:	mov	x5, x20
    d924:	mov	x0, x19
    d928:	mov	x1, #0x64                  	// #100
    d92c:	mov	w22, #0x0                   	// #0
    d930:	adrp	x2, 10000 <PyInit__datetime@@Base+0x1118>
    d934:	add	x2, x2, #0x4c8
    d938:	bl	48c0 <PyOS_snprintf@plt>
    d93c:	mov	w0, w22
    d940:	ldp	x29, x30, [sp, #16]
    d944:	ldp	x19, x20, [sp, #32]
    d948:	ldp	x21, x22, [sp, #48]
    d94c:	ldp	x23, x24, [sp, #64]
    d950:	add	sp, sp, #0x50
    d954:	ret
    d958:	mov	x0, x21
    d95c:	bl	4810 <_Py_Dealloc@plt>
    d960:	b	d81c <PyNumber_FloorDivide@plt+0x8c1c>
    d964:	bl	5630 <PyNumber_FloorDivide@plt+0xa30>
    d968:	mov	x22, x0
    d96c:	ldr	x1, [x21]
    d970:	sub	x0, x1, #0x1
    d974:	str	x0, [x21]
    d978:	cbz	x0, d98c <PyNumber_FloorDivide@plt+0x8d8c>
    d97c:	cbz	x22, d9d0 <PyNumber_FloorDivide@plt+0x8dd0>
    d980:	mov	x21, x22
    d984:	mov	w23, #0x2d                  	// #45
    d988:	b	d808 <PyNumber_FloorDivide@plt+0x8c08>
    d98c:	mov	x0, x21
    d990:	bl	4810 <_Py_Dealloc@plt>
    d994:	b	d97c <PyNumber_FloorDivide@plt+0x8d7c>
    d998:	ldr	x1, [x0]
    d99c:	sub	x1, x1, #0x1
    d9a0:	str	x1, [x0]
    d9a4:	cbz	x1, d9c8 <PyNumber_FloorDivide@plt+0x8dc8>
    d9a8:	strb	wzr, [x19]
    d9ac:	mov	w22, #0x0                   	// #0
    d9b0:	mov	w0, w22
    d9b4:	ldp	x29, x30, [sp, #16]
    d9b8:	ldp	x19, x20, [sp, #32]
    d9bc:	ldp	x21, x22, [sp, #48]
    d9c0:	add	sp, sp, #0x50
    d9c4:	ret
    d9c8:	bl	4810 <_Py_Dealloc@plt>
    d9cc:	b	d9a8 <PyNumber_FloorDivide@plt+0x8da8>
    d9d0:	ldp	x23, x24, [sp, #64]
    d9d4:	mov	w22, #0xffffffff            	// #-1
    d9d8:	b	d89c <PyNumber_FloorDivide@plt+0x8c9c>
    d9dc:	nop
    d9e0:	sub	sp, sp, #0xd0
    d9e4:	mov	w6, #0x54                  	// #84
    d9e8:	adrp	x3, 25000 <PyInit__datetime@@Base+0x16118>
    d9ec:	add	x3, x3, #0xab8
    d9f0:	add	x3, x3, #0x420
    d9f4:	add	x5, sp, #0x58
    d9f8:	stp	x29, x30, [sp, #16]
    d9fc:	add	x29, sp, #0x10
    da00:	stp	x19, x20, [sp, #32]
    da04:	mov	x19, x0
    da08:	mov	x0, x1
    da0c:	mov	x1, x2
    da10:	adrp	x2, 10000 <PyInit__datetime@@Base+0x1118>
    da14:	ldrb	w4, [x19, #33]
    da18:	add	x2, x2, #0x538
    da1c:	ldrb	w20, [x19, #32]
    da20:	ldrb	w7, [x19, #34]
    da24:	lsl	w4, w4, #8
    da28:	str	w6, [sp, #84]
    da2c:	orr	w20, w4, w20, lsl #16
    da30:	add	x4, sp, #0x54
    da34:	orr	w20, w20, w7
    da38:	stp	xzr, xzr, [sp, #88]
    da3c:	bl	4750 <PyArg_ParseTupleAndKeywords@plt>
    da40:	cbz	w0, dba8 <PyNumber_FloorDivide@plt+0x8fa8>
    da44:	stp	x21, x22, [sp, #48]
    da48:	ldr	x22, [sp, #88]
    da4c:	cbz	x22, dadc <PyNumber_FloorDivide@plt+0x8edc>
    da50:	adrp	x1, 10000 <PyInit__datetime@@Base+0x1118>
    da54:	mov	x0, x22
    da58:	add	x1, x1, #0x548
    da5c:	bl	49f0 <strcmp@plt>
    da60:	cbz	w0, dadc <PyNumber_FloorDivide@plt+0x8edc>
    da64:	str	x23, [sp, #64]
    da68:	adrp	x23, 24000 <PyInit__datetime@@Base+0x15118>
    da6c:	add	x23, x23, #0xc18
    da70:	adrp	x1, f000 <PyInit__datetime@@Base+0x118>
    da74:	add	x23, x23, #0x98
    da78:	add	x1, x1, #0xac0
    da7c:	mov	x0, x22
    da80:	mov	x21, #0x0                   	// #0
    da84:	bl	49f0 <strcmp@plt>
    da88:	cbz	w0, daac <PyNumber_FloorDivide@plt+0x8eac>
    da8c:	add	x21, x21, #0x1
    da90:	cmp	x21, #0x5
    da94:	b.eq	dbcc <PyNumber_FloorDivide@plt+0x8fcc>  // b.none
    da98:	lsl	x0, x21, #4
    da9c:	ldr	x1, [x0, x23]
    daa0:	mov	x0, x22
    daa4:	bl	49f0 <strcmp@plt>
    daa8:	cbnz	w0, da8c <PyNumber_FloorDivide@plt+0x8e8c>
    daac:	mov	w0, #0x4dd3                	// #19923
    dab0:	adrp	x1, 24000 <PyInit__datetime@@Base+0x15118>
    dab4:	movk	w0, #0x1062, lsl #16
    dab8:	add	x1, x1, #0xc18
    dabc:	cmp	x21, #0x3
    dac0:	add	x21, x1, x21, lsl #4
    dac4:	umull	x0, w20, w0
    dac8:	ldr	x23, [sp, #64]
    dacc:	lsr	x0, x0, #38
    dad0:	csel	x20, x0, x20, eq  // eq = none
    dad4:	ldr	x0, [x21, #160]
    dad8:	b	daf4 <PyNumber_FloorDivide@plt+0x8ef4>
    dadc:	cmp	w20, #0x0
    dae0:	adrp	x1, 10000 <PyInit__datetime@@Base+0x1118>
    dae4:	adrp	x0, 10000 <PyInit__datetime@@Base+0x1118>
    dae8:	add	x1, x1, #0x4f0
    daec:	add	x0, x0, #0x518
    daf0:	csel	x0, x0, x1, eq  // eq = none
    daf4:	ldrb	w7, [x19, #31]
    daf8:	ldrb	w6, [x19, #30]
    dafc:	ldrb	w5, [x19, #29]
    db00:	ldrb	w3, [x19, #28]
    db04:	ldrb	w2, [x19, #27]
    db08:	ldr	w4, [sp, #84]
    db0c:	ldurh	w1, [x19, #25]
    db10:	str	w20, [sp]
    db14:	rev16	w1, w1
    db18:	and	w1, w1, #0xffff
    db1c:	bl	4700 <PyUnicode_FromFormat@plt>
    db20:	str	x0, [sp, #96]
    db24:	cbz	x0, dba4 <PyNumber_FloorDivide@plt+0x8fa4>
    db28:	ldrb	w1, [x19, #24]
    db2c:	cbnz	w1, db44 <PyNumber_FloorDivide@plt+0x8f44>
    db30:	ldp	x21, x22, [sp, #48]
    db34:	ldp	x29, x30, [sp, #16]
    db38:	ldp	x19, x20, [sp, #32]
    db3c:	add	sp, sp, #0xd0
    db40:	ret
    db44:	ldr	x2, [x19, #40]
    db48:	add	x20, sp, #0x68
    db4c:	adrp	x1, 10000 <PyInit__datetime@@Base+0x1118>
    db50:	mov	x0, x20
    db54:	mov	x3, x19
    db58:	add	x1, x1, #0x550
    db5c:	bl	d7b8 <PyNumber_FloorDivide@plt+0x8bb8>
    db60:	tbnz	w0, #31, db90 <PyNumber_FloorDivide@plt+0x8f90>
    db64:	mov	x0, x20
    db68:	bl	4ad0 <PyUnicode_FromString@plt>
    db6c:	mov	x1, x0
    db70:	add	x0, sp, #0x60
    db74:	bl	4ba0 <PyUnicode_AppendAndDel@plt>
    db78:	ldp	x29, x30, [sp, #16]
    db7c:	ldp	x19, x20, [sp, #32]
    db80:	ldp	x21, x22, [sp, #48]
    db84:	ldr	x0, [sp, #96]
    db88:	add	sp, sp, #0xd0
    db8c:	ret
    db90:	ldr	x0, [sp, #96]
    db94:	ldr	x1, [x0]
    db98:	sub	x1, x1, #0x1
    db9c:	str	x1, [x0]
    dba0:	cbz	x1, dbbc <PyNumber_FloorDivide@plt+0x8fbc>
    dba4:	ldp	x21, x22, [sp, #48]
    dba8:	mov	x0, #0x0                   	// #0
    dbac:	ldp	x29, x30, [sp, #16]
    dbb0:	ldp	x19, x20, [sp, #32]
    dbb4:	add	sp, sp, #0xd0
    dbb8:	ret
    dbbc:	bl	4810 <_Py_Dealloc@plt>
    dbc0:	mov	x0, #0x0                   	// #0
    dbc4:	ldp	x21, x22, [sp, #48]
    dbc8:	b	db34 <PyNumber_FloorDivide@plt+0x8f34>
    dbcc:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    dbd0:	adrp	x1, 10000 <PyInit__datetime@@Base+0x1118>
    dbd4:	add	x1, x1, #0x558
    dbd8:	ldr	x0, [x0, #3968]
    dbdc:	ldr	x0, [x0]
    dbe0:	bl	4b60 <PyErr_Format@plt>
    dbe4:	mov	x0, #0x0                   	// #0
    dbe8:	ldp	x21, x22, [sp, #48]
    dbec:	ldr	x23, [sp, #64]
    dbf0:	b	db34 <PyNumber_FloorDivide@plt+0x8f34>
    dbf4:	nop
    dbf8:	stp	x29, x30, [sp, #-192]!
    dbfc:	adrp	x3, 25000 <PyInit__datetime@@Base+0x16118>
    dc00:	add	x3, x3, #0xab8
    dc04:	mov	x29, sp
    dc08:	stp	x19, x20, [sp, #16]
    dc0c:	mov	x19, x0
    dc10:	add	x3, x3, #0x438
    dc14:	mov	x0, x1
    dc18:	add	x4, sp, #0x48
    dc1c:	ldrb	w20, [x19, #29]
    dc20:	mov	x1, x2
    dc24:	ldrb	w5, [x19, #28]
    dc28:	adrp	x2, 10000 <PyInit__datetime@@Base+0x1118>
    dc2c:	ldrb	w6, [x19, #30]
    dc30:	add	x2, x2, #0x570
    dc34:	lsl	w20, w20, #8
    dc38:	str	xzr, [sp, #72]
    dc3c:	orr	w5, w20, w5, lsl #16
    dc40:	orr	w20, w5, w6
    dc44:	bl	4750 <PyArg_ParseTupleAndKeywords@plt>
    dc48:	cbz	w0, dd9c <PyNumber_FloorDivide@plt+0x919c>
    dc4c:	stp	x21, x22, [sp, #32]
    dc50:	ldr	x22, [sp, #72]
    dc54:	cbz	x22, dce4 <PyNumber_FloorDivide@plt+0x90e4>
    dc58:	adrp	x1, 10000 <PyInit__datetime@@Base+0x1118>
    dc5c:	mov	x0, x22
    dc60:	add	x1, x1, #0x548
    dc64:	bl	49f0 <strcmp@plt>
    dc68:	cbz	w0, dce4 <PyNumber_FloorDivide@plt+0x90e4>
    dc6c:	str	x23, [sp, #48]
    dc70:	adrp	x23, 24000 <PyInit__datetime@@Base+0x15118>
    dc74:	add	x23, x23, #0xc18
    dc78:	adrp	x1, f000 <PyInit__datetime@@Base+0x118>
    dc7c:	add	x23, x23, #0xe8
    dc80:	add	x1, x1, #0xac0
    dc84:	mov	x0, x22
    dc88:	mov	x21, #0x0                   	// #0
    dc8c:	bl	49f0 <strcmp@plt>
    dc90:	cbz	w0, dcb4 <PyNumber_FloorDivide@plt+0x90b4>
    dc94:	add	x21, x21, #0x1
    dc98:	cmp	x21, #0x5
    dc9c:	b.eq	ddbc <PyNumber_FloorDivide@plt+0x91bc>  // b.none
    dca0:	lsl	x0, x21, #4
    dca4:	ldr	x1, [x0, x23]
    dca8:	mov	x0, x22
    dcac:	bl	49f0 <strcmp@plt>
    dcb0:	cbnz	w0, dc94 <PyNumber_FloorDivide@plt+0x9094>
    dcb4:	mov	w0, #0x4dd3                	// #19923
    dcb8:	adrp	x1, 24000 <PyInit__datetime@@Base+0x15118>
    dcbc:	movk	w0, #0x1062, lsl #16
    dcc0:	add	x1, x1, #0xc18
    dcc4:	cmp	x21, #0x3
    dcc8:	add	x21, x1, x21, lsl #4
    dccc:	umull	x0, w20, w0
    dcd0:	ldr	x23, [sp, #48]
    dcd4:	lsr	x0, x0, #38
    dcd8:	csel	x20, x0, x20, eq  // eq = none
    dcdc:	ldr	x0, [x21, #240]
    dce0:	b	dcfc <PyNumber_FloorDivide@plt+0x90fc>
    dce4:	cmp	w20, #0x0
    dce8:	adrp	x1, 10000 <PyInit__datetime@@Base+0x1118>
    dcec:	adrp	x0, 10000 <PyInit__datetime@@Base+0x1118>
    dcf0:	add	x1, x1, #0x500
    dcf4:	add	x0, x0, #0x528
    dcf8:	csel	x0, x0, x1, eq  // eq = none
    dcfc:	ldrb	w3, [x19, #27]
    dd00:	mov	w4, w20
    dd04:	ldrb	w2, [x19, #26]
    dd08:	ldrb	w1, [x19, #25]
    dd0c:	bl	4700 <PyUnicode_FromFormat@plt>
    dd10:	str	x0, [sp, #80]
    dd14:	cbz	x0, dd98 <PyNumber_FloorDivide@plt+0x9198>
    dd18:	ldrb	w1, [x19, #24]
    dd1c:	cbz	w1, dd74 <PyNumber_FloorDivide@plt+0x9174>
    dd20:	adrp	x3, 24000 <PyInit__datetime@@Base+0x15118>
    dd24:	ldr	x2, [x19, #32]
    dd28:	ldr	x3, [x3, #4024]
    dd2c:	cmp	x2, x3
    dd30:	b.eq	dd74 <PyNumber_FloorDivide@plt+0x9174>  // b.none
    dd34:	add	x19, sp, #0x58
    dd38:	adrp	x1, 10000 <PyInit__datetime@@Base+0x1118>
    dd3c:	mov	x0, x19
    dd40:	add	x1, x1, #0x550
    dd44:	bl	d7b8 <PyNumber_FloorDivide@plt+0x8bb8>
    dd48:	tbnz	w0, #31, dd84 <PyNumber_FloorDivide@plt+0x9184>
    dd4c:	mov	x0, x19
    dd50:	bl	4ad0 <PyUnicode_FromString@plt>
    dd54:	mov	x1, x0
    dd58:	add	x0, sp, #0x50
    dd5c:	bl	4ba0 <PyUnicode_AppendAndDel@plt>
    dd60:	ldp	x21, x22, [sp, #32]
    dd64:	ldr	x0, [sp, #80]
    dd68:	ldp	x19, x20, [sp, #16]
    dd6c:	ldp	x29, x30, [sp], #192
    dd70:	ret
    dd74:	ldp	x19, x20, [sp, #16]
    dd78:	ldp	x21, x22, [sp, #32]
    dd7c:	ldp	x29, x30, [sp], #192
    dd80:	ret
    dd84:	ldr	x0, [sp, #80]
    dd88:	ldr	x1, [x0]
    dd8c:	sub	x1, x1, #0x1
    dd90:	str	x1, [x0]
    dd94:	cbz	x1, ddac <PyNumber_FloorDivide@plt+0x91ac>
    dd98:	ldp	x21, x22, [sp, #32]
    dd9c:	mov	x0, #0x0                   	// #0
    dda0:	ldp	x19, x20, [sp, #16]
    dda4:	ldp	x29, x30, [sp], #192
    dda8:	ret
    ddac:	bl	4810 <_Py_Dealloc@plt>
    ddb0:	mov	x0, #0x0                   	// #0
    ddb4:	ldp	x21, x22, [sp, #32]
    ddb8:	b	dd68 <PyNumber_FloorDivide@plt+0x9168>
    ddbc:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    ddc0:	adrp	x1, 10000 <PyInit__datetime@@Base+0x1118>
    ddc4:	add	x1, x1, #0x558
    ddc8:	ldr	x0, [x0, #3968]
    ddcc:	ldr	x0, [x0]
    ddd0:	bl	4b60 <PyErr_Format@plt>
    ddd4:	mov	x0, #0x0                   	// #0
    ddd8:	ldp	x21, x22, [sp, #32]
    dddc:	ldr	x23, [sp, #48]
    dde0:	b	dd68 <PyNumber_FloorDivide@plt+0x9168>
    dde4:	nop
    dde8:	stp	x29, x30, [sp, #-288]!
    ddec:	mov	x29, sp
    ddf0:	stp	x19, x20, [sp, #16]
    ddf4:	stp	x23, x24, [sp, #48]
    ddf8:	mov	x24, x0
    ddfc:	mov	x0, x1
    de00:	add	x1, sp, #0xa0
    de04:	stp	x3, x2, [sp, #104]
    de08:	str	xzr, [sp, #168]
    de0c:	bl	4b40 <PyUnicode_AsUTF8AndSize@plt>
    de10:	cbz	x0, dfac <PyNumber_FloorDivide@plt+0x93ac>
    de14:	ldr	x1, [sp, #160]
    de18:	mov	x19, x0
    de1c:	mov	x0, #0x7ffffffe            	// #2147483646
    de20:	cmp	x1, x0
    de24:	b.gt	df74 <PyNumber_FloorDivide@plt+0x9374>
    de28:	stp	x25, x26, [sp, #64]
    de2c:	add	x25, x1, #0x1
    de30:	mov	x1, x25
    de34:	mov	x0, #0x0                   	// #0
    de38:	bl	4800 <PyBytes_FromStringAndSize@plt>
    de3c:	str	x0, [sp, #168]
    de40:	cbz	x0, dfa8 <PyNumber_FloorDivide@plt+0x93a8>
    de44:	mov	x23, x19
    de48:	stp	x27, x28, [sp, #80]
    de4c:	bl	4b10 <PyBytes_AsString@plt>
    de50:	mov	x20, x0
    de54:	ldrb	w0, [x23], #1
    de58:	cbz	w0, e2f0 <PyNumber_FloorDivide@plt+0x96f0>
    de5c:	adrp	x1, 25000 <PyInit__datetime@@Base+0x16118>
    de60:	add	x1, x1, #0x298
    de64:	stp	x21, x22, [sp, #32]
    de68:	add	x22, sp, #0xa8
    de6c:	mov	x21, #0x0                   	// #0
    de70:	str	x1, [sp, #136]
    de74:	add	x1, x1, #0x340
    de78:	mov	x27, #0x0                   	// #0
    de7c:	mov	x28, #0x0                   	// #0
    de80:	mov	x26, #0x0                   	// #0
    de84:	str	x1, [sp, #128]
    de88:	add	x1, sp, #0xb8
    de8c:	str	x1, [sp, #120]
    de90:	cmp	w0, #0x25
    de94:	b.eq	df40 <PyNumber_FloorDivide@plt+0x9340>  // b.none
    de98:	mov	x0, #0x1                   	// #1
    de9c:	mov	x2, x0
    dea0:	str	x0, [sp, #176]
    dea4:	add	x0, x2, x21
    dea8:	cmp	x0, x25
    deac:	b.ls	dfe0 <PyNumber_FloorDivide@plt+0x93e0>  // b.plast
    deb0:	mov	x20, #0x3fffffffffffffff    	// #4611686018427387903
    deb4:	b	dee4 <PyNumber_FloorDivide@plt+0x92e4>
    deb8:	lsl	x25, x25, #1
    debc:	mov	x0, x22
    dec0:	mov	x1, x25
    dec4:	bl	4770 <_PyBytes_Resize@plt>
    dec8:	tbnz	w0, #31, e18c <PyNumber_FloorDivide@plt+0x958c>
    decc:	ldr	x0, [sp, #168]
    ded0:	bl	4b10 <PyBytes_AsString@plt>
    ded4:	ldr	x2, [sp, #176]
    ded8:	add	x1, x2, x21
    dedc:	cmp	x1, x25
    dee0:	b.ls	dfdc <PyNumber_FloorDivide@plt+0x93dc>  // b.plast
    dee4:	cmp	x25, x20
    dee8:	b.ls	deb8 <PyNumber_FloorDivide@plt+0x92b8>  // b.plast
    deec:	bl	4820 <PyErr_NoMemory@plt>
    def0:	mov	x19, #0x0                   	// #0
    def4:	ldp	x21, x22, [sp, #32]
    def8:	cbz	x27, df0c <PyNumber_FloorDivide@plt+0x930c>
    defc:	ldr	x0, [x27]
    df00:	sub	x0, x0, #0x1
    df04:	str	x0, [x27]
    df08:	cbz	x0, e150 <PyNumber_FloorDivide@plt+0x9550>
    df0c:	cbz	x26, df20 <PyNumber_FloorDivide@plt+0x9320>
    df10:	ldr	x0, [x26]
    df14:	sub	x0, x0, #0x1
    df18:	str	x0, [x26]
    df1c:	cbz	x0, e09c <PyNumber_FloorDivide@plt+0x949c>
    df20:	cbz	x28, df34 <PyNumber_FloorDivide@plt+0x9334>
    df24:	ldr	x0, [x28]
    df28:	sub	x0, x0, #0x1
    df2c:	str	x0, [x28]
    df30:	cbz	x0, e178 <PyNumber_FloorDivide@plt+0x9578>
    df34:	ldp	x25, x26, [sp, #64]
    df38:	ldp	x27, x28, [sp, #80]
    df3c:	b	df7c <PyNumber_FloorDivide@plt+0x937c>
    df40:	ldrb	w0, [x19, #1]
    df44:	cbz	w0, de98 <PyNumber_FloorDivide@plt+0x9298>
    df48:	cmp	w0, #0x7a
    df4c:	add	x23, x19, #0x2
    df50:	b.eq	e15c <PyNumber_FloorDivide@plt+0x955c>  // b.none
    df54:	cmp	w0, #0x5a
    df58:	b.eq	e198 <PyNumber_FloorDivide@plt+0x9598>  // b.none
    df5c:	cmp	w0, #0x66
    df60:	b.eq	e2d4 <PyNumber_FloorDivide@plt+0x96d4>  // b.none
    df64:	mov	x0, #0x2                   	// #2
    df68:	mov	x2, x0
    df6c:	str	x0, [sp, #176]
    df70:	b	dea4 <PyNumber_FloorDivide@plt+0x92a4>
    df74:	mov	x19, #0x0                   	// #0
    df78:	bl	4820 <PyErr_NoMemory@plt>
    df7c:	ldr	x0, [sp, #168]
    df80:	cbz	x0, df94 <PyNumber_FloorDivide@plt+0x9394>
    df84:	ldr	x1, [x0]
    df88:	sub	x1, x1, #0x1
    df8c:	str	x1, [x0]
    df90:	cbz	x1, dfc4 <PyNumber_FloorDivide@plt+0x93c4>
    df94:	mov	x0, x19
    df98:	ldp	x19, x20, [sp, #16]
    df9c:	ldp	x23, x24, [sp, #48]
    dfa0:	ldp	x29, x30, [sp], #288
    dfa4:	ret
    dfa8:	ldp	x25, x26, [sp, #64]
    dfac:	mov	x19, #0x0                   	// #0
    dfb0:	mov	x0, x19
    dfb4:	ldp	x19, x20, [sp, #16]
    dfb8:	ldp	x23, x24, [sp, #48]
    dfbc:	ldp	x29, x30, [sp], #288
    dfc0:	ret
    dfc4:	bl	4810 <_Py_Dealloc@plt>
    dfc8:	mov	x0, x19
    dfcc:	ldp	x19, x20, [sp, #16]
    dfd0:	ldp	x23, x24, [sp, #48]
    dfd4:	ldp	x29, x30, [sp], #288
    dfd8:	ret
    dfdc:	add	x20, x0, x21
    dfe0:	mov	x1, x19
    dfe4:	mov	x0, x20
    dfe8:	bl	46f0 <memcpy@plt>
    dfec:	mov	x19, x23
    dff0:	ldr	x0, [sp, #176]
    dff4:	add	x20, x20, x0
    dff8:	add	x21, x21, x0
    dffc:	ldrb	w0, [x19]
    e000:	add	x23, x23, #0x1
    e004:	cbnz	w0, de90 <PyNumber_FloorDivide@plt+0x9290>
    e008:	mov	x1, x21
    e00c:	add	x0, sp, #0xa8
    e010:	mov	x19, #0x0                   	// #0
    e014:	bl	4770 <_PyBytes_Resize@plt>
    e018:	tbnz	w0, #31, e190 <PyNumber_FloorDivide@plt+0x9590>
    e01c:	adrp	x0, 10000 <PyInit__datetime@@Base+0x1118>
    e020:	add	x0, x0, #0x110
    e024:	bl	49d0 <PyImport_ImportModuleNoBlock@plt>
    e028:	mov	x20, x0
    e02c:	ldp	x21, x22, [sp, #32]
    e030:	cbz	x0, def8 <PyNumber_FloorDivide@plt+0x92f8>
    e034:	ldr	x0, [sp, #168]
    e038:	add	x0, x0, #0x20
    e03c:	bl	4ad0 <PyUnicode_FromString@plt>
    e040:	mov	x19, x0
    e044:	cbz	x0, e080 <PyNumber_FloorDivide@plt+0x9480>
    e048:	ldr	x3, [sp, #112]
    e04c:	adrp	x1, 25000 <PyInit__datetime@@Base+0x16118>
    e050:	add	x1, x1, #0xab8
    e054:	mov	x2, x0
    e058:	add	x1, x1, #0x18
    e05c:	mov	x0, x20
    e060:	mov	x4, #0x0                   	// #0
    e064:	bl	4ae0 <_PyObject_CallMethodIdObjArgs@plt>
    e068:	ldr	x2, [x19]
    e06c:	mov	x1, x0
    e070:	sub	x0, x2, #0x1
    e074:	str	x0, [x19]
    e078:	cbz	x0, e3cc <PyNumber_FloorDivide@plt+0x97cc>
    e07c:	mov	x19, x1
    e080:	ldr	x0, [x20]
    e084:	sub	x0, x0, #0x1
    e088:	str	x0, [x20]
    e08c:	cbnz	x0, def8 <PyNumber_FloorDivide@plt+0x92f8>
    e090:	mov	x0, x20
    e094:	bl	4810 <_Py_Dealloc@plt>
    e098:	b	def8 <PyNumber_FloorDivide@plt+0x92f8>
    e09c:	mov	x0, x26
    e0a0:	bl	4810 <_Py_Dealloc@plt>
    e0a4:	b	df20 <PyNumber_FloorDivide@plt+0x9320>
    e0a8:	mov	x0, x24
    e0ac:	bl	7de0 <PyNumber_FloorDivide@plt+0x31e0>
    e0b0:	adrp	x3, 10000 <PyInit__datetime@@Base+0x1118>
    e0b4:	mov	x2, x0
    e0b8:	add	x3, x3, #0xb98
    e0bc:	mov	x1, #0x0                   	// #0
    e0c0:	mov	x0, x3
    e0c4:	stp	x3, x2, [sp, #144]
    e0c8:	bl	4800 <PyBytes_FromStringAndSize@plt>
    e0cc:	mov	x19, x0
    e0d0:	cbz	x0, e130 <PyNumber_FloorDivide@plt+0x9530>
    e0d4:	ldp	x3, x2, [sp, #144]
    e0d8:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    e0dc:	ldr	x0, [x0, #4024]
    e0e0:	cmp	x2, #0x0
    e0e4:	ccmp	x2, x0, #0x4, ne  // ne = any
    e0e8:	b.eq	e2e8 <PyNumber_FloorDivide@plt+0x96e8>  // b.none
    e0ec:	mov	x1, x3
    e0f0:	ldr	x3, [sp, #104]
    e0f4:	ldr	x0, [sp, #120]
    e0f8:	bl	d7b8 <PyNumber_FloorDivide@plt+0x8bb8>
    e0fc:	tbnz	w0, #31, e440 <PyNumber_FloorDivide@plt+0x9840>
    e100:	ldr	x0, [x19]
    e104:	sub	x0, x0, #0x1
    e108:	str	x0, [x19]
    e10c:	cbz	x0, e3f0 <PyNumber_FloorDivide@plt+0x97f0>
    e110:	ldr	x19, [sp, #120]
    e114:	mov	x0, x19
    e118:	bl	4730 <strlen@plt>
    e11c:	mov	x1, x0
    e120:	mov	x0, x19
    e124:	bl	4800 <PyBytes_FromStringAndSize@plt>
    e128:	mov	x19, x0
    e12c:	cbnz	x0, e2e8 <PyNumber_FloorDivide@plt+0x96e8>
    e130:	cbz	x27, e454 <PyNumber_FloorDivide@plt+0x9854>
    e134:	ldr	x0, [x27]
    e138:	sub	x0, x0, #0x1
    e13c:	str	x0, [x27]
    e140:	cbnz	x0, e454 <PyNumber_FloorDivide@plt+0x9854>
    e144:	ldp	x21, x22, [sp, #32]
    e148:	mov	x19, #0x0                   	// #0
    e14c:	nop
    e150:	mov	x0, x27
    e154:	bl	4810 <_Py_Dealloc@plt>
    e158:	b	df0c <PyNumber_FloorDivide@plt+0x930c>
    e15c:	cbz	x26, e0a8 <PyNumber_FloorDivide@plt+0x94a8>
    e160:	add	x19, x26, #0x20
    e164:	ldr	x2, [x26, #16]
    e168:	str	x2, [sp, #176]
    e16c:	cbnz	x2, dea4 <PyNumber_FloorDivide@plt+0x92a4>
    e170:	mov	x19, x23
    e174:	b	dffc <PyNumber_FloorDivide@plt+0x93fc>
    e178:	mov	x0, x28
    e17c:	bl	4810 <_Py_Dealloc@plt>
    e180:	ldp	x25, x26, [sp, #64]
    e184:	ldp	x27, x28, [sp, #80]
    e188:	b	df7c <PyNumber_FloorDivide@plt+0x937c>
    e18c:	mov	x19, #0x0                   	// #0
    e190:	ldp	x21, x22, [sp, #32]
    e194:	b	def8 <PyNumber_FloorDivide@plt+0x92f8>
    e198:	cbz	x28, e1b8 <PyNumber_FloorDivide@plt+0x95b8>
    e19c:	add	x1, sp, #0xb0
    e1a0:	mov	x0, x28
    e1a4:	bl	4b40 <PyUnicode_AsUTF8AndSize@plt>
    e1a8:	mov	x19, x0
    e1ac:	cbz	x0, e190 <PyNumber_FloorDivide@plt+0x9590>
    e1b0:	ldr	x2, [sp, #176]
    e1b4:	b	e16c <PyNumber_FloorDivide@plt+0x956c>
    e1b8:	mov	x0, x24
    e1bc:	bl	7de0 <PyNumber_FloorDivide@plt+0x31e0>
    e1c0:	mov	x2, x0
    e1c4:	mov	x1, #0x0                   	// #0
    e1c8:	mov	x0, #0x0                   	// #0
    e1cc:	str	x2, [sp, #144]
    e1d0:	bl	4b80 <PyUnicode_FromStringAndSize@plt>
    e1d4:	mov	x19, x0
    e1d8:	cbz	x0, e3fc <PyNumber_FloorDivide@plt+0x97fc>
    e1dc:	adrp	x3, 24000 <PyInit__datetime@@Base+0x15118>
    e1e0:	ldr	x2, [sp, #144]
    e1e4:	ldr	x4, [x3, #4024]
    e1e8:	str	x4, [sp, #144]
    e1ec:	cmp	x2, #0x0
    e1f0:	ccmp	x2, x4, #0x4, ne  // ne = any
    e1f4:	b.eq	e284 <PyNumber_FloorDivide@plt+0x9684>  // b.none
    e1f8:	ldr	x1, [sp, #104]
    e1fc:	mov	x0, x2
    e200:	bl	b2f8 <PyNumber_FloorDivide@plt+0x66f8>
    e204:	mov	x6, x0
    e208:	cbz	x0, e2b0 <PyNumber_FloorDivide@plt+0x96b0>
    e20c:	ldr	x4, [sp, #144]
    e210:	adrp	x3, 24000 <PyInit__datetime@@Base+0x15118>
    e214:	cmp	x0, x4
    e218:	b.eq	e408 <PyNumber_FloorDivide@plt+0x9808>  // b.none
    e21c:	ldr	x0, [x19]
    e220:	sub	x0, x0, #0x1
    e224:	str	x0, [x19]
    e228:	cbz	x0, e3dc <PyNumber_FloorDivide@plt+0x97dc>
    e22c:	adrp	x1, 25000 <PyInit__datetime@@Base+0x16118>
    e230:	add	x1, x1, #0xab8
    e234:	add	x1, x1, #0x448
    e238:	mov	x0, x6
    e23c:	adrp	x4, 10000 <PyInit__datetime@@Base+0x1118>
    e240:	adrp	x3, 10000 <PyInit__datetime@@Base+0x1118>
    e244:	add	x4, x4, #0x580
    e248:	add	x3, x3, #0x588
    e24c:	adrp	x2, 10000 <PyInit__datetime@@Base+0x1118>
    e250:	add	x2, x2, #0x590
    e254:	str	x6, [sp, #144]
    e258:	bl	4a60 <_PyObject_CallMethodId@plt>
    e25c:	ldr	x6, [sp, #144]
    e260:	mov	x19, x0
    e264:	ldr	x1, [x6]
    e268:	sub	x0, x1, #0x1
    e26c:	str	x0, [x6]
    e270:	cbz	x0, e28c <PyNumber_FloorDivide@plt+0x968c>
    e274:	cbz	x19, e3fc <PyNumber_FloorDivide@plt+0x97fc>
    e278:	ldr	x0, [x19, #8]
    e27c:	ldr	x0, [x0, #168]
    e280:	tbz	w0, #28, e298 <PyNumber_FloorDivide@plt+0x9698>
    e284:	mov	x28, x19
    e288:	b	e19c <PyNumber_FloorDivide@plt+0x959c>
    e28c:	mov	x0, x6
    e290:	bl	4810 <_Py_Dealloc@plt>
    e294:	b	e274 <PyNumber_FloorDivide@plt+0x9674>
    e298:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    e29c:	adrp	x1, 10000 <PyInit__datetime@@Base+0x1118>
    e2a0:	add	x1, x1, #0x598
    e2a4:	ldr	x0, [x0, #3976]
    e2a8:	ldr	x0, [x0]
    e2ac:	bl	4880 <PyErr_SetString@plt>
    e2b0:	ldr	x0, [x19]
    e2b4:	sub	x0, x0, #0x1
    e2b8:	str	x0, [x19]
    e2bc:	cbnz	x0, e18c <PyNumber_FloorDivide@plt+0x958c>
    e2c0:	mov	x0, x19
    e2c4:	mov	x19, #0x0                   	// #0
    e2c8:	bl	4810 <_Py_Dealloc@plt>
    e2cc:	ldp	x21, x22, [sp, #32]
    e2d0:	b	def8 <PyNumber_FloorDivide@plt+0x92f8>
    e2d4:	cbz	x27, e328 <PyNumber_FloorDivide@plt+0x9728>
    e2d8:	ldr	x2, [x27, #16]
    e2dc:	add	x19, x27, #0x20
    e2e0:	str	x2, [sp, #176]
    e2e4:	b	e16c <PyNumber_FloorDivide@plt+0x956c>
    e2e8:	mov	x26, x19
    e2ec:	b	e160 <PyNumber_FloorDivide@plt+0x9560>
    e2f0:	add	x0, sp, #0xa8
    e2f4:	mov	x1, #0x0                   	// #0
    e2f8:	mov	x19, #0x0                   	// #0
    e2fc:	bl	4770 <_PyBytes_Resize@plt>
    e300:	tbnz	w0, #31, df34 <PyNumber_FloorDivide@plt+0x9334>
    e304:	adrp	x0, 10000 <PyInit__datetime@@Base+0x1118>
    e308:	add	x0, x0, #0x110
    e30c:	bl	49d0 <PyImport_ImportModuleNoBlock@plt>
    e310:	mov	x20, x0
    e314:	cbz	x0, df34 <PyNumber_FloorDivide@plt+0x9334>
    e318:	mov	x27, #0x0                   	// #0
    e31c:	mov	x28, #0x0                   	// #0
    e320:	mov	x26, #0x0                   	// #0
    e324:	b	e034 <PyNumber_FloorDivide@plt+0x9434>
    e328:	ldr	x0, [x24, #8]
    e32c:	ldr	x1, [sp, #128]
    e330:	cmp	x0, x1
    e334:	b.eq	e3b4 <PyNumber_FloorDivide@plt+0x97b4>  // b.none
    e338:	ldr	x1, [sp, #128]
    e33c:	bl	4b30 <PyType_IsSubtype@plt>
    e340:	cbnz	w0, e3b4 <PyNumber_FloorDivide@plt+0x97b4>
    e344:	ldr	x1, [sp, #136]
    e348:	ldr	x0, [x24, #8]
    e34c:	add	x1, x1, #0x1a0
    e350:	cmp	x0, x1
    e354:	b.eq	e360 <PyNumber_FloorDivide@plt+0x9760>  // b.none
    e358:	bl	4b30 <PyType_IsSubtype@plt>
    e35c:	cbz	w0, e428 <PyNumber_FloorDivide@plt+0x9828>
    e360:	ldrb	w4, [x24, #33]
    e364:	adrp	x1, 10000 <PyInit__datetime@@Base+0x1118>
    e368:	ldrb	w3, [x24, #32]
    e36c:	add	x1, x1, #0x5c8
    e370:	ldrb	w2, [x24, #34]
    e374:	lsl	w4, w4, #8
    e378:	ldr	x0, [sp, #120]
    e37c:	orr	w3, w4, w3, lsl #16
    e380:	orr	w2, w3, w2
    e384:	bl	47e0 <sprintf@plt>
    e388:	ldr	x19, [sp, #120]
    e38c:	mov	x0, x19
    e390:	bl	4730 <strlen@plt>
    e394:	mov	x1, x0
    e398:	mov	x0, x19
    e39c:	bl	4800 <PyBytes_FromStringAndSize@plt>
    e3a0:	mov	x27, x0
    e3a4:	cbnz	x0, e2d8 <PyNumber_FloorDivide@plt+0x96d8>
    e3a8:	mov	x19, #0x0                   	// #0
    e3ac:	ldp	x21, x22, [sp, #32]
    e3b0:	b	df0c <PyNumber_FloorDivide@plt+0x930c>
    e3b4:	adrp	x1, 10000 <PyInit__datetime@@Base+0x1118>
    e3b8:	ldrb	w4, [x24, #29]
    e3bc:	ldrb	w3, [x24, #28]
    e3c0:	add	x1, x1, #0x5c8
    e3c4:	ldrb	w2, [x24, #30]
    e3c8:	b	e374 <PyNumber_FloorDivide@plt+0x9774>
    e3cc:	mov	x0, x19
    e3d0:	mov	x19, x1
    e3d4:	bl	4810 <_Py_Dealloc@plt>
    e3d8:	b	e080 <PyNumber_FloorDivide@plt+0x9480>
    e3dc:	mov	x0, x19
    e3e0:	str	x6, [sp, #144]
    e3e4:	bl	4810 <_Py_Dealloc@plt>
    e3e8:	ldr	x6, [sp, #144]
    e3ec:	b	e22c <PyNumber_FloorDivide@plt+0x962c>
    e3f0:	mov	x0, x19
    e3f4:	bl	4810 <_Py_Dealloc@plt>
    e3f8:	b	e110 <PyNumber_FloorDivide@plt+0x9510>
    e3fc:	mov	x28, #0x0                   	// #0
    e400:	ldp	x21, x22, [sp, #32]
    e404:	b	def8 <PyNumber_FloorDivide@plt+0x92f8>
    e408:	ldr	x0, [x0]
    e40c:	mov	x28, x19
    e410:	sub	x0, x0, #0x1
    e414:	str	x0, [x6]
    e418:	cbnz	x0, e19c <PyNumber_FloorDivide@plt+0x959c>
    e41c:	ldr	x0, [x3, #4024]
    e420:	bl	4810 <_Py_Dealloc@plt>
    e424:	b	e19c <PyNumber_FloorDivide@plt+0x959c>
    e428:	ldr	x0, [sp, #120]
    e42c:	adrp	x1, 10000 <PyInit__datetime@@Base+0x1118>
    e430:	mov	w2, #0x0                   	// #0
    e434:	add	x1, x1, #0x5c8
    e438:	bl	47e0 <sprintf@plt>
    e43c:	b	e388 <PyNumber_FloorDivide@plt+0x9788>
    e440:	mov	x26, x19
    e444:	mov	x19, #0x0                   	// #0
    e448:	ldp	x21, x22, [sp, #32]
    e44c:	cbnz	x27, defc <PyNumber_FloorDivide@plt+0x92fc>
    e450:	b	df10 <PyNumber_FloorDivide@plt+0x9310>
    e454:	mov	x19, #0x0                   	// #0
    e458:	ldp	x21, x22, [sp, #32]
    e45c:	b	df20 <PyNumber_FloorDivide@plt+0x9320>
    e460:	sub	sp, sp, #0x40
    e464:	adrp	x3, 25000 <PyInit__datetime@@Base+0x16118>
    e468:	add	x3, x3, #0xab8
    e46c:	add	x4, sp, #0x38
    e470:	add	x3, x3, #0x460
    e474:	stp	x29, x30, [sp, #16]
    e478:	add	x29, sp, #0x10
    e47c:	stp	x19, x20, [sp, #32]
    e480:	mov	x19, x0
    e484:	mov	x0, x1
    e488:	mov	x1, x2
    e48c:	adrp	x2, 10000 <PyInit__datetime@@Base+0x1118>
    e490:	add	x2, x2, #0x5d0
    e494:	bl	4750 <PyArg_ParseTupleAndKeywords@plt>
    e498:	cbz	w0, e518 <PyNumber_FloorDivide@plt+0x9918>
    e49c:	ldrb	w6, [x19, #27]
    e4a0:	mov	w3, #0x1                   	// #1
    e4a4:	ldrb	w5, [x19, #26]
    e4a8:	mov	w0, #0xffffffff            	// #-1
    e4ac:	ldrb	w4, [x19, #25]
    e4b0:	mov	w2, w3
    e4b4:	str	w3, [sp]
    e4b8:	mov	w7, #0x0                   	// #0
    e4bc:	str	w0, [sp, #8]
    e4c0:	mov	w1, #0x76c                 	// #1900
    e4c4:	adrp	x0, f000 <PyInit__datetime@@Base+0x118>
    e4c8:	add	x0, x0, #0xba0
    e4cc:	bl	49a0 <Py_BuildValue@plt>
    e4d0:	mov	x20, x0
    e4d4:	cbz	x0, e518 <PyNumber_FloorDivide@plt+0x9918>
    e4d8:	adrp	x3, 24000 <PyInit__datetime@@Base+0x15118>
    e4dc:	mov	x0, x19
    e4e0:	ldr	x1, [sp, #56]
    e4e4:	mov	x2, x20
    e4e8:	ldr	x3, [x3, #4024]
    e4ec:	bl	dde8 <PyNumber_FloorDivide@plt+0x91e8>
    e4f0:	mov	x19, x0
    e4f4:	ldr	x1, [x20]
    e4f8:	sub	x0, x1, #0x1
    e4fc:	str	x0, [x20]
    e500:	cbz	x0, e530 <PyNumber_FloorDivide@plt+0x9930>
    e504:	mov	x0, x19
    e508:	ldp	x29, x30, [sp, #16]
    e50c:	ldp	x19, x20, [sp, #32]
    e510:	add	sp, sp, #0x40
    e514:	ret
    e518:	mov	x19, #0x0                   	// #0
    e51c:	mov	x0, x19
    e520:	ldp	x29, x30, [sp, #16]
    e524:	ldp	x19, x20, [sp, #32]
    e528:	add	sp, sp, #0x40
    e52c:	ret
    e530:	mov	x0, x20
    e534:	bl	4810 <_Py_Dealloc@plt>
    e538:	mov	x0, x19
    e53c:	ldp	x29, x30, [sp, #16]
    e540:	ldp	x19, x20, [sp, #32]
    e544:	add	sp, sp, #0x40
    e548:	ret
    e54c:	nop
    e550:	stp	x29, x30, [sp, #-48]!
    e554:	mov	x29, sp
    e558:	stp	x19, x20, [sp, #16]
    e55c:	adrp	x19, 25000 <PyInit__datetime@@Base+0x16118>
    e560:	add	x19, x19, #0xab8
    e564:	mov	x20, x0
    e568:	add	x3, x19, #0x470
    e56c:	mov	x0, x1
    e570:	add	x4, sp, #0x28
    e574:	mov	x1, x2
    e578:	adrp	x2, 10000 <PyInit__datetime@@Base+0x1118>
    e57c:	add	x2, x2, #0x5d0
    e580:	bl	4750 <PyArg_ParseTupleAndKeywords@plt>
    e584:	cbz	w0, e5d8 <PyNumber_FloorDivide@plt+0x99d8>
    e588:	add	x1, x19, #0x480
    e58c:	mov	x0, x20
    e590:	mov	x2, #0x0                   	// #0
    e594:	bl	4a60 <_PyObject_CallMethodId@plt>
    e598:	mov	x19, x0
    e59c:	cbz	x0, e5d8 <PyNumber_FloorDivide@plt+0x99d8>
    e5a0:	ldr	x1, [sp, #40]
    e5a4:	mov	x3, x20
    e5a8:	mov	x0, x20
    e5ac:	mov	x2, x19
    e5b0:	bl	dde8 <PyNumber_FloorDivide@plt+0x91e8>
    e5b4:	mov	x20, x0
    e5b8:	ldr	x1, [x19]
    e5bc:	sub	x0, x1, #0x1
    e5c0:	str	x0, [x19]
    e5c4:	cbz	x0, e5ec <PyNumber_FloorDivide@plt+0x99ec>
    e5c8:	mov	x0, x20
    e5cc:	ldp	x19, x20, [sp, #16]
    e5d0:	ldp	x29, x30, [sp], #48
    e5d4:	ret
    e5d8:	mov	x20, #0x0                   	// #0
    e5dc:	mov	x0, x20
    e5e0:	ldp	x19, x20, [sp, #16]
    e5e4:	ldp	x29, x30, [sp], #48
    e5e8:	ret
    e5ec:	mov	x0, x19
    e5f0:	bl	4810 <_Py_Dealloc@plt>
    e5f4:	mov	x0, x20
    e5f8:	ldp	x19, x20, [sp, #16]
    e5fc:	ldp	x29, x30, [sp], #48
    e600:	ret
    e604:	nop
    e608:	stp	x29, x30, [sp, #-48]!
    e60c:	adrp	x3, 25000 <PyInit__datetime@@Base+0x16118>
    e610:	add	x3, x3, #0x298
    e614:	mov	x29, sp
    e618:	stp	x19, x20, [sp, #16]
    e61c:	mov	x19, x1
    e620:	mov	x20, x0
    e624:	add	x1, x3, #0x680
    e628:	ldr	x0, [x19, #8]
    e62c:	str	x21, [sp, #32]
    e630:	mov	w21, w2
    e634:	cmp	x0, x1
    e638:	b.eq	e644 <PyNumber_FloorDivide@plt+0x9a44>  // b.none
    e63c:	bl	4b30 <PyType_IsSubtype@plt>
    e640:	cbz	w0, e668 <PyNumber_FloorDivide@plt+0x9a68>
    e644:	add	x1, x19, #0x19
    e648:	add	x0, x20, #0x19
    e64c:	mov	x2, #0x4                   	// #4
    e650:	bl	49e0 <memcmp@plt>
    e654:	mov	w1, w21
    e658:	ldp	x19, x20, [sp, #16]
    e65c:	ldr	x21, [sp, #32]
    e660:	ldp	x29, x30, [sp], #48
    e664:	b	5b50 <PyNumber_FloorDivide@plt+0xf50>
    e668:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    e66c:	ldp	x19, x20, [sp, #16]
    e670:	ldr	x0, [x0, #3960]
    e674:	ldr	x21, [sp, #32]
    e678:	ldr	x1, [x0]
    e67c:	add	x1, x1, #0x1
    e680:	str	x1, [x0]
    e684:	ldp	x29, x30, [sp], #48
    e688:	ret
    e68c:	nop
    e690:	stp	x29, x30, [sp, #-48]!
    e694:	adrp	x3, 25000 <PyInit__datetime@@Base+0x16118>
    e698:	mov	x29, sp
    e69c:	stp	x19, x20, [sp, #16]
    e6a0:	mov	x19, x1
    e6a4:	mov	x20, x0
    e6a8:	add	x1, x3, #0x298
    e6ac:	ldr	x0, [x19, #8]
    e6b0:	str	x21, [sp, #32]
    e6b4:	mov	w21, w2
    e6b8:	cmp	x0, x1
    e6bc:	b.eq	e6c8 <PyNumber_FloorDivide@plt+0x9ac8>  // b.none
    e6c0:	bl	4b30 <PyType_IsSubtype@plt>
    e6c4:	cbz	w0, e6f8 <PyNumber_FloorDivide@plt+0x9af8>
    e6c8:	ldr	w0, [x19, #24]
    e6cc:	ldr	w1, [x20, #24]
    e6d0:	subs	w0, w1, w0
    e6d4:	b.ne	e6e4 <PyNumber_FloorDivide@plt+0x9ae4>  // b.any
    e6d8:	mov	x1, x19
    e6dc:	mov	x0, x20
    e6e0:	bl	7db8 <PyNumber_FloorDivide@plt+0x31b8>
    e6e4:	mov	w1, w21
    e6e8:	ldp	x19, x20, [sp, #16]
    e6ec:	ldr	x21, [sp, #32]
    e6f0:	ldp	x29, x30, [sp], #48
    e6f4:	b	5b50 <PyNumber_FloorDivide@plt+0xf50>
    e6f8:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    e6fc:	ldp	x19, x20, [sp, #16]
    e700:	ldr	x0, [x0, #3960]
    e704:	ldr	x21, [sp, #32]
    e708:	ldr	x1, [x0]
    e70c:	add	x1, x1, #0x1
    e710:	str	x1, [x0]
    e714:	ldp	x29, x30, [sp], #48
    e718:	ret
    e71c:	nop
    e720:	stp	x29, x30, [sp, #-48]!
    e724:	mov	x29, sp
    e728:	stp	x19, x20, [sp, #16]
    e72c:	mov	w19, w2
    e730:	sub	w2, w2, #0x2
    e734:	cmp	w2, #0x1
    e738:	b.hi	e784 <PyNumber_FloorDivide@plt+0x9b84>  // b.pmore
    e73c:	mov	x20, x1
    e740:	str	x21, [sp, #32]
    e744:	mov	x21, x0
    e748:	adrp	x1, 25000 <PyInit__datetime@@Base+0x16118>
    e74c:	add	x1, x1, #0xab8
    e750:	ldr	x0, [x20, #8]
    e754:	add	x1, x1, #0xe8
    e758:	cmp	x0, x1
    e75c:	b.eq	e768 <PyNumber_FloorDivide@plt+0x9b68>  // b.none
    e760:	bl	4b30 <PyType_IsSubtype@plt>
    e764:	cbz	w0, e7a8 <PyNumber_FloorDivide@plt+0x9ba8>
    e768:	mov	w2, w19
    e76c:	ldr	x1, [x20, #16]
    e770:	ldr	x0, [x21, #16]
    e774:	ldp	x19, x20, [sp, #16]
    e778:	ldr	x21, [sp, #32]
    e77c:	ldp	x29, x30, [sp], #48
    e780:	b	e690 <PyNumber_FloorDivide@plt+0x9a90>
    e784:	adrp	x1, 24000 <PyInit__datetime@@Base+0x15118>
    e788:	ldp	x19, x20, [sp, #16]
    e78c:	ldr	x1, [x1, #3960]
    e790:	mov	x0, x1
    e794:	ldr	x2, [x1]
    e798:	add	x2, x2, #0x1
    e79c:	str	x2, [x1]
    e7a0:	ldp	x29, x30, [sp], #48
    e7a4:	ret
    e7a8:	adrp	x1, 24000 <PyInit__datetime@@Base+0x15118>
    e7ac:	ldr	x21, [sp, #32]
    e7b0:	ldr	x1, [x1, #3960]
    e7b4:	ldp	x19, x20, [sp, #16]
    e7b8:	mov	x0, x1
    e7bc:	ldr	x2, [x1]
    e7c0:	add	x2, x2, #0x1
    e7c4:	str	x2, [x1]
    e7c8:	ldp	x29, x30, [sp], #48
    e7cc:	ret
    e7d0:	stp	x29, x30, [sp, #-48]!
    e7d4:	mov	x29, sp
    e7d8:	stp	x19, x20, [sp, #16]
    e7dc:	mov	x19, x0
    e7e0:	mov	x20, x1
    e7e4:	ldr	x0, [x0, #8]
    e7e8:	str	x21, [sp, #32]
    e7ec:	adrp	x21, 25000 <PyInit__datetime@@Base+0x16118>
    e7f0:	add	x2, x21, #0x298
    e7f4:	cmp	x0, x2
    e7f8:	b.eq	e834 <PyNumber_FloorDivide@plt+0x9c34>  // b.none
    e7fc:	mov	x1, x2
    e800:	bl	4b30 <PyType_IsSubtype@plt>
    e804:	cbnz	w0, e834 <PyNumber_FloorDivide@plt+0x9c34>
    e808:	adrp	x1, 24000 <PyInit__datetime@@Base+0x15118>
    e80c:	ldr	x1, [x1, #3960]
    e810:	mov	x19, x1
    e814:	ldr	x0, [x1]
    e818:	add	x0, x0, #0x1
    e81c:	str	x0, [x1]
    e820:	mov	x0, x19
    e824:	ldp	x19, x20, [sp, #16]
    e828:	ldr	x21, [sp, #32]
    e82c:	ldp	x29, x30, [sp], #48
    e830:	ret
    e834:	ldr	x0, [x20, #8]
    e838:	ldr	x1, [x0, #168]
    e83c:	tbnz	w1, #24, e888 <PyNumber_FloorDivide@plt+0x9c88>
    e840:	add	x1, x21, #0x298
    e844:	cmp	x0, x1
    e848:	b.eq	e854 <PyNumber_FloorDivide@plt+0x9c54>  // b.none
    e84c:	bl	4b30 <PyType_IsSubtype@plt>
    e850:	cbz	w0, e808 <PyNumber_FloorDivide@plt+0x9c08>
    e854:	mov	x0, x19
    e858:	mov	x1, x20
    e85c:	bl	74d8 <PyNumber_FloorDivide@plt+0x28d8>
    e860:	mov	x19, x0
    e864:	adrp	x1, 24000 <PyInit__datetime@@Base+0x15118>
    e868:	ldr	x0, [x1, #3960]
    e86c:	cmp	x19, x0
    e870:	b.eq	e80c <PyNumber_FloorDivide@plt+0x9c0c>  // b.none
    e874:	mov	x0, x19
    e878:	ldp	x19, x20, [sp, #16]
    e87c:	ldr	x21, [sp, #32]
    e880:	ldp	x29, x30, [sp], #48
    e884:	ret
    e888:	mov	x0, x19
    e88c:	bl	6e20 <PyNumber_FloorDivide@plt+0x2220>
    e890:	mov	x19, x0
    e894:	cbz	x0, e8f0 <PyNumber_FloorDivide@plt+0x9cf0>
    e898:	mov	x1, x20
    e89c:	bl	4c00 <PyNumber_FloorDivide@plt>
    e8a0:	ldr	x1, [x19]
    e8a4:	mov	x20, x0
    e8a8:	sub	x0, x1, #0x1
    e8ac:	str	x0, [x19]
    e8b0:	cbz	x0, e8e4 <PyNumber_FloorDivide@plt+0x9ce4>
    e8b4:	cbz	x20, e8f0 <PyNumber_FloorDivide@plt+0x9cf0>
    e8b8:	add	x1, x21, #0x298
    e8bc:	mov	x0, x20
    e8c0:	bl	6760 <PyNumber_FloorDivide@plt+0x1b60>
    e8c4:	mov	x19, x0
    e8c8:	ldr	x1, [x20]
    e8cc:	sub	x0, x1, #0x1
    e8d0:	str	x0, [x20]
    e8d4:	cbnz	x0, e864 <PyNumber_FloorDivide@plt+0x9c64>
    e8d8:	mov	x0, x20
    e8dc:	bl	4810 <_Py_Dealloc@plt>
    e8e0:	b	e864 <PyNumber_FloorDivide@plt+0x9c64>
    e8e4:	mov	x0, x19
    e8e8:	bl	4810 <_Py_Dealloc@plt>
    e8ec:	cbnz	x20, e8b8 <PyNumber_FloorDivide@plt+0x9cb8>
    e8f0:	mov	x19, #0x0                   	// #0
    e8f4:	b	e820 <PyNumber_FloorDivide@plt+0x9c20>
    e8f8:	stp	x29, x30, [sp, #-48]!
    e8fc:	mov	x29, sp
    e900:	stp	x19, x20, [sp, #16]
    e904:	mov	x19, x0
    e908:	mov	x20, x1
    e90c:	ldr	x0, [x0, #8]
    e910:	str	x21, [sp, #32]
    e914:	adrp	x21, 25000 <PyInit__datetime@@Base+0x16118>
    e918:	add	x2, x21, #0x298
    e91c:	cmp	x0, x2
    e920:	b.eq	e958 <PyNumber_FloorDivide@plt+0x9d58>  // b.none
    e924:	mov	x1, x2
    e928:	bl	4b30 <PyType_IsSubtype@plt>
    e92c:	cbnz	w0, e958 <PyNumber_FloorDivide@plt+0x9d58>
    e930:	adrp	x1, 24000 <PyInit__datetime@@Base+0x15118>
    e934:	ldr	x1, [x1, #3960]
    e938:	ldp	x19, x20, [sp, #16]
    e93c:	mov	x0, x1
    e940:	ldr	x2, [x1]
    e944:	ldr	x21, [sp, #32]
    e948:	add	x2, x2, #0x1
    e94c:	str	x2, [x1]
    e950:	ldp	x29, x30, [sp], #48
    e954:	ret
    e958:	ldr	x0, [x20, #8]
    e95c:	add	x1, x21, #0x298
    e960:	cmp	x0, x1
    e964:	b.eq	e970 <PyNumber_FloorDivide@plt+0x9d70>  // b.none
    e968:	bl	4b30 <PyType_IsSubtype@plt>
    e96c:	cbz	w0, e930 <PyNumber_FloorDivide@plt+0x9d30>
    e970:	ldp	w2, w6, [x19, #24]
    e974:	add	x4, x21, #0x298
    e978:	ldp	w0, w1, [x20, #24]
    e97c:	mov	w3, #0x1                   	// #1
    e980:	ldr	w5, [x19, #32]
    e984:	add	w0, w2, w0
    e988:	ldr	w2, [x20, #32]
    e98c:	add	w1, w6, w1
    e990:	add	w2, w5, w2
    e994:	bl	5500 <PyNumber_FloorDivide@plt+0x900>
    e998:	adrp	x1, 24000 <PyInit__datetime@@Base+0x15118>
    e99c:	ldr	x2, [x1, #3960]
    e9a0:	cmp	x0, x2
    e9a4:	b.eq	e934 <PyNumber_FloorDivide@plt+0x9d34>  // b.none
    e9a8:	ldp	x19, x20, [sp, #16]
    e9ac:	ldr	x21, [sp, #32]
    e9b0:	ldp	x29, x30, [sp], #48
    e9b4:	ret
    e9b8:	stp	x29, x30, [sp, #-32]!
    e9bc:	cmp	x1, #0x0
    e9c0:	mov	x1, #0x28                  	// #40
    e9c4:	mov	x29, sp
    e9c8:	stp	x19, x20, [sp, #16]
    e9cc:	mov	x20, x0
    e9d0:	mov	x0, #0x20                  	// #32
    e9d4:	csel	x0, x1, x0, ne  // ne = any
    e9d8:	bl	4890 <PyObject_Malloc@plt>
    e9dc:	cbz	x0, ea58 <PyNumber_FloorDivide@plt+0x9e58>
    e9e0:	mov	x19, x0
    e9e4:	mov	x0, x20
    e9e8:	str	x20, [x19, #8]
    e9ec:	bl	4af0 <PyType_GetFlags@plt>
    e9f0:	tbnz	w0, #9, ea1c <PyNumber_FloorDivide@plt+0x9e1c>
    e9f4:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    e9f8:	ldr	x0, [x0, #3984]
    e9fc:	ldr	w0, [x0, #4]
    ea00:	cbnz	w0, ea38 <PyNumber_FloorDivide@plt+0x9e38>
    ea04:	mov	x1, #0x1                   	// #1
    ea08:	str	x1, [x19]
    ea0c:	mov	x0, x19
    ea10:	ldp	x19, x20, [sp, #16]
    ea14:	ldp	x29, x30, [sp], #32
    ea18:	ret
    ea1c:	ldr	x0, [x20]
    ea20:	add	x0, x0, #0x1
    ea24:	str	x0, [x20]
    ea28:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    ea2c:	ldr	x0, [x0, #3984]
    ea30:	ldr	w0, [x0, #4]
    ea34:	cbz	w0, ea04 <PyNumber_FloorDivide@plt+0x9e04>
    ea38:	mov	x0, x19
    ea3c:	bl	4ab0 <_PyTraceMalloc_NewReference@plt>
    ea40:	mov	x1, #0x1                   	// #1
    ea44:	str	x1, [x19]
    ea48:	mov	x0, x19
    ea4c:	ldp	x19, x20, [sp, #16]
    ea50:	ldp	x29, x30, [sp], #32
    ea54:	ret
    ea58:	ldp	x19, x20, [sp, #16]
    ea5c:	ldp	x29, x30, [sp], #32
    ea60:	b	4820 <PyErr_NoMemory@plt>
    ea64:	nop
    ea68:	stp	x29, x30, [sp, #-80]!
    ea6c:	mov	x29, sp
    ea70:	stp	x19, x20, [sp, #16]
    ea74:	mov	x20, x0
    ea78:	ldr	x0, [x1, #8]
    ea7c:	ldr	x0, [x0, #168]
    ea80:	tbz	w0, #28, eba0 <PyNumber_FloorDivide@plt+0x9fa0>
    ea84:	mov	x19, x1
    ea88:	add	x1, sp, #0x48
    ea8c:	mov	x0, x19
    ea90:	bl	4b40 <PyUnicode_AsUTF8AndSize@plt>
    ea94:	cbz	x0, eb4c <PyNumber_FloorDivide@plt+0x9f4c>
    ea98:	ldr	x1, [sp, #72]
    ea9c:	add	x7, sp, #0x44
    eaa0:	add	x6, sp, #0x40
    eaa4:	add	x5, sp, #0x3c
    eaa8:	add	x4, sp, #0x38
    eaac:	add	x3, sp, #0x34
    eab0:	add	x2, sp, #0x30
    eab4:	stp	wzr, wzr, [sp, #48]
    eab8:	stp	wzr, wzr, [sp, #56]
    eabc:	str	wzr, [sp, #68]
    eac0:	bl	5108 <PyNumber_FloorDivide@plt+0x508>
    eac4:	tbnz	w0, #31, eb4c <PyNumber_FloorDivide@plt+0x9f4c>
    eac8:	stp	x21, x22, [sp, #32]
    eacc:	cmp	w0, #0x1
    ead0:	b.eq	eb7c <PyNumber_FloorDivide@plt+0x9f7c>  // b.none
    ead4:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    ead8:	adrp	x19, 25000 <PyInit__datetime@@Base+0x16118>
    eadc:	ldr	x0, [x0, #4024]
    eae0:	mov	x21, x0
    eae4:	ldr	x1, [x0]
    eae8:	add	x1, x1, #0x1
    eaec:	str	x1, [x0]
    eaf0:	add	x19, x19, #0x298
    eaf4:	add	x19, x19, #0x340
    eaf8:	ldp	w0, w1, [sp, #48]
    eafc:	cmp	x20, x19
    eb00:	ldp	w4, w5, [sp, #56]
    eb04:	b.eq	ebe8 <PyNumber_FloorDivide@plt+0x9fe8>  // b.none
    eb08:	mov	w3, w1
    eb0c:	mov	w2, w0
    eb10:	mov	x6, x21
    eb14:	mov	x0, x20
    eb18:	adrp	x1, f000 <PyInit__datetime@@Base+0x118>
    eb1c:	add	x1, x1, #0xed0
    eb20:	bl	4950 <PyObject_CallFunction@plt>
    eb24:	mov	x20, x0
    eb28:	ldr	x0, [x21]
    eb2c:	sub	x0, x0, #0x1
    eb30:	str	x0, [x21]
    eb34:	cbz	x0, ebcc <PyNumber_FloorDivide@plt+0x9fcc>
    eb38:	ldp	x21, x22, [sp, #32]
    eb3c:	mov	x0, x20
    eb40:	ldp	x19, x20, [sp, #16]
    eb44:	ldp	x29, x30, [sp], #80
    eb48:	ret
    eb4c:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    eb50:	mov	x2, x19
    eb54:	mov	x20, #0x0                   	// #0
    eb58:	adrp	x1, 10000 <PyInit__datetime@@Base+0x1118>
    eb5c:	ldr	x0, [x0, #3968]
    eb60:	add	x1, x1, #0xd0
    eb64:	ldr	x0, [x0]
    eb68:	bl	4b60 <PyErr_Format@plt>
    eb6c:	mov	x0, x20
    eb70:	ldp	x19, x20, [sp, #16]
    eb74:	ldp	x29, x30, [sp], #80
    eb78:	ret
    eb7c:	ldr	w1, [sp, #64]
    eb80:	cbnz	w1, ec08 <PyNumber_FloorDivide@plt+0xa008>
    eb84:	adrp	x0, 26000 <PyInit__datetime@@Base+0x17118>
    eb88:	adrp	x19, 25000 <PyInit__datetime@@Base+0x16118>
    eb8c:	ldr	x21, [x0, #3960]
    eb90:	ldr	x0, [x21]
    eb94:	add	x0, x0, #0x1
    eb98:	str	x0, [x21]
    eb9c:	b	eaf0 <PyNumber_FloorDivide@plt+0x9ef0>
    eba0:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    eba4:	mov	x20, #0x0                   	// #0
    eba8:	adrp	x1, 10000 <PyInit__datetime@@Base+0x1118>
    ebac:	add	x1, x1, #0xa8
    ebb0:	ldr	x0, [x0, #3976]
    ebb4:	ldr	x0, [x0]
    ebb8:	bl	4880 <PyErr_SetString@plt>
    ebbc:	mov	x0, x20
    ebc0:	ldp	x19, x20, [sp, #16]
    ebc4:	ldp	x29, x30, [sp], #80
    ebc8:	ret
    ebcc:	mov	x0, x21
    ebd0:	bl	4810 <_Py_Dealloc@plt>
    ebd4:	mov	x0, x20
    ebd8:	ldp	x19, x20, [sp, #16]
    ebdc:	ldp	x21, x22, [sp, #32]
    ebe0:	ldp	x29, x30, [sp], #80
    ebe4:	ret
    ebe8:	mov	x6, x20
    ebec:	mov	w3, w5
    ebf0:	mov	w2, w4
    ebf4:	mov	w5, #0x0                   	// #0
    ebf8:	mov	x4, x21
    ebfc:	bl	8d38 <PyNumber_FloorDivide@plt+0x4138>
    ec00:	mov	x20, x0
    ec04:	b	eb28 <PyNumber_FloorDivide@plt+0x9f28>
    ec08:	ldr	w2, [sp, #68]
    ec0c:	mov	w3, w0
    ec10:	adrp	x19, 25000 <PyInit__datetime@@Base+0x16118>
    ec14:	mov	w0, #0x0                   	// #0
    ec18:	add	x4, x19, #0x298
    ec1c:	bl	5500 <PyNumber_FloorDivide@plt+0x900>
    ec20:	mov	x22, x0
    ec24:	cbz	x0, ec48 <PyNumber_FloorDivide@plt+0xa048>
    ec28:	mov	x1, #0x0                   	// #0
    ec2c:	bl	8360 <PyNumber_FloorDivide@plt+0x3760>
    ec30:	ldr	x1, [x22]
    ec34:	mov	x21, x0
    ec38:	sub	x0, x1, #0x1
    ec3c:	str	x0, [x22]
    ec40:	cbz	x0, ec54 <PyNumber_FloorDivide@plt+0xa054>
    ec44:	cbnz	x21, eaf0 <PyNumber_FloorDivide@plt+0x9ef0>
    ec48:	mov	x20, #0x0                   	// #0
    ec4c:	ldp	x21, x22, [sp, #32]
    ec50:	b	eb3c <PyNumber_FloorDivide@plt+0x9f3c>
    ec54:	mov	x0, x22
    ec58:	bl	4810 <_Py_Dealloc@plt>
    ec5c:	cbnz	x21, eaf0 <PyNumber_FloorDivide@plt+0x9ef0>
    ec60:	b	ec48 <PyNumber_FloorDivide@plt+0xa048>
    ec64:	nop
    ec68:	stp	x29, x30, [sp, #-64]!
    ec6c:	mov	x29, sp
    ec70:	stp	x19, x20, [sp, #16]
    ec74:	adrp	x19, 25000 <PyInit__datetime@@Base+0x16118>
    ec78:	add	x1, x19, #0xab8
    ec7c:	mov	x20, x0
    ec80:	add	x1, x1, #0x498
    ec84:	add	x2, sp, #0x30
    ec88:	bl	4760 <_PyObject_LookupAttrId@plt>
    ec8c:	tbnz	w0, #31, edbc <PyNumber_FloorDivide@plt+0xa1bc>
    ec90:	str	x21, [sp, #32]
    ec94:	ldr	x21, [sp, #48]
    ec98:	cbz	x21, ee0c <PyNumber_FloorDivide@plt+0xa20c>
    ec9c:	ldr	x0, [x21, #8]
    eca0:	ldr	x1, [x0, #168]
    eca4:	ldr	x0, [x0, #56]
    eca8:	tbz	w1, #11, ee28 <PyNumber_FloorDivide@plt+0xa228>
    ecac:	ldr	x4, [x21, x0]
    ecb0:	cbz	x4, ee28 <PyNumber_FloorDivide@plt+0xa228>
    ecb4:	mov	x3, #0x0                   	// #0
    ecb8:	mov	x0, x21
    ecbc:	mov	x2, #0x0                   	// #0
    ecc0:	mov	x1, #0x0                   	// #0
    ecc4:	blr	x4
    ecc8:	mov	x1, x0
    eccc:	mov	x2, #0x0                   	// #0
    ecd0:	mov	x0, x21
    ecd4:	bl	4a00 <_Py_CheckFunctionResult@plt>
    ecd8:	mov	x21, x0
    ecdc:	ldr	x0, [sp, #48]
    ece0:	ldr	x1, [x0]
    ece4:	sub	x1, x1, #0x1
    ece8:	str	x1, [x0]
    ecec:	cbz	x1, edac <PyNumber_FloorDivide@plt+0xa1ac>
    ecf0:	cbz	x21, edb8 <PyNumber_FloorDivide@plt+0xa1b8>
    ecf4:	add	x1, x19, #0xab8
    ecf8:	add	x2, sp, #0x38
    ecfc:	add	x1, x1, #0x4b0
    ed00:	mov	x0, x20
    ed04:	bl	4760 <_PyObject_LookupAttrId@plt>
    ed08:	tbnz	w0, #31, ee9c <PyNumber_FloorDivide@plt+0xa29c>
    ed0c:	ldr	x19, [sp, #56]
    ed10:	cbz	x19, ee44 <PyNumber_FloorDivide@plt+0xa244>
    ed14:	ldr	x0, [x19, #8]
    ed18:	ldr	x1, [x0, #168]
    ed1c:	ldr	x0, [x0, #56]
    ed20:	tbz	w1, #11, ee80 <PyNumber_FloorDivide@plt+0xa280>
    ed24:	ldr	x4, [x19, x0]
    ed28:	cbz	x4, ee80 <PyNumber_FloorDivide@plt+0xa280>
    ed2c:	mov	x3, #0x0                   	// #0
    ed30:	mov	x0, x19
    ed34:	mov	x2, #0x0                   	// #0
    ed38:	mov	x1, #0x0                   	// #0
    ed3c:	blr	x4
    ed40:	mov	x1, x0
    ed44:	mov	x2, #0x0                   	// #0
    ed48:	mov	x0, x19
    ed4c:	bl	4a00 <_Py_CheckFunctionResult@plt>
    ed50:	mov	x19, x0
    ed54:	ldr	x0, [sp, #56]
    ed58:	ldr	x1, [x0]
    ed5c:	sub	x1, x1, #0x1
    ed60:	str	x1, [x0]
    ed64:	cbz	x1, ee78 <PyNumber_FloorDivide@plt+0xa278>
    ed68:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    ed6c:	cbz	x19, eec8 <PyNumber_FloorDivide@plt+0xa2c8>
    ed70:	ldr	x0, [x0, #4024]
    ed74:	cmp	x19, x0
    ed78:	b.eq	edd0 <PyNumber_FloorDivide@plt+0xa1d0>  // b.none
    ed7c:	ldr	x1, [x20, #8]
    ed80:	mov	x3, x19
    ed84:	mov	x2, x21
    ed88:	adrp	x0, 10000 <PyInit__datetime@@Base+0x1118>
    ed8c:	add	x0, x0, #0x5e0
    ed90:	bl	49a0 <Py_BuildValue@plt>
    ed94:	mov	x19, x0
    ed98:	ldr	x21, [sp, #32]
    ed9c:	mov	x0, x19
    eda0:	ldp	x19, x20, [sp, #16]
    eda4:	ldp	x29, x30, [sp], #64
    eda8:	ret
    edac:	bl	4810 <_Py_Dealloc@plt>
    edb0:	cbnz	x21, ecf4 <PyNumber_FloorDivide@plt+0xa0f4>
    edb4:	nop
    edb8:	ldr	x21, [sp, #32]
    edbc:	mov	x19, #0x0                   	// #0
    edc0:	mov	x0, x19
    edc4:	ldp	x19, x20, [sp, #16]
    edc8:	ldp	x29, x30, [sp], #64
    edcc:	ret
    edd0:	ldr	x0, [x19]
    edd4:	sub	x0, x0, #0x1
    edd8:	str	x0, [x19]
    eddc:	cbz	x0, ee1c <PyNumber_FloorDivide@plt+0xa21c>
    ede0:	ldr	x1, [x20, #8]
    ede4:	mov	x2, x21
    ede8:	adrp	x0, f000 <PyInit__datetime@@Base+0x118>
    edec:	add	x0, x0, #0x980
    edf0:	bl	49a0 <Py_BuildValue@plt>
    edf4:	mov	x19, x0
    edf8:	mov	x0, x19
    edfc:	ldp	x19, x20, [sp, #16]
    ee00:	ldr	x21, [sp, #32]
    ee04:	ldp	x29, x30, [sp], #64
    ee08:	ret
    ee0c:	mov	x0, #0x0                   	// #0
    ee10:	bl	4970 <PyTuple_New@plt>
    ee14:	mov	x21, x0
    ee18:	b	ecf0 <PyNumber_FloorDivide@plt+0xa0f0>
    ee1c:	mov	x0, x19
    ee20:	bl	4810 <_Py_Dealloc@plt>
    ee24:	b	ede0 <PyNumber_FloorDivide@plt+0xa1e0>
    ee28:	mov	x0, x21
    ee2c:	mov	x3, #0x0                   	// #0
    ee30:	mov	x2, #0x0                   	// #0
    ee34:	mov	x1, #0x0                   	// #0
    ee38:	bl	4b90 <_PyObject_MakeTpCall@plt>
    ee3c:	mov	x21, x0
    ee40:	b	ecdc <PyNumber_FloorDivide@plt+0xa0dc>
    ee44:	mov	x0, x20
    ee48:	bl	4ac0 <_PyObject_GetDictPtr@plt>
    ee4c:	cbz	x0, ee60 <PyNumber_FloorDivide@plt+0xa260>
    ee50:	ldr	x19, [x0]
    ee54:	cbz	x19, ee60 <PyNumber_FloorDivide@plt+0xa260>
    ee58:	ldr	x0, [x19, #16]
    ee5c:	cbnz	x0, eec0 <PyNumber_FloorDivide@plt+0xa2c0>
    ee60:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    ee64:	ldr	x19, [x0, #4024]
    ee68:	ldr	x1, [x19]
    ee6c:	add	x1, x1, #0x1
    ee70:	str	x1, [x19]
    ee74:	b	ed70 <PyNumber_FloorDivide@plt+0xa170>
    ee78:	bl	4810 <_Py_Dealloc@plt>
    ee7c:	b	ed68 <PyNumber_FloorDivide@plt+0xa168>
    ee80:	mov	x0, x19
    ee84:	mov	x3, #0x0                   	// #0
    ee88:	mov	x2, #0x0                   	// #0
    ee8c:	mov	x1, #0x0                   	// #0
    ee90:	bl	4b90 <_PyObject_MakeTpCall@plt>
    ee94:	mov	x19, x0
    ee98:	b	ed54 <PyNumber_FloorDivide@plt+0xa154>
    ee9c:	ldr	x0, [x21]
    eea0:	sub	x0, x0, #0x1
    eea4:	str	x0, [x21]
    eea8:	cbnz	x0, edb8 <PyNumber_FloorDivide@plt+0xa1b8>
    eeac:	mov	x0, x21
    eeb0:	mov	x19, #0x0                   	// #0
    eeb4:	bl	4810 <_Py_Dealloc@plt>
    eeb8:	ldr	x21, [sp, #32]
    eebc:	b	ed9c <PyNumber_FloorDivide@plt+0xa19c>
    eec0:	adrp	x0, 24000 <PyInit__datetime@@Base+0x15118>
    eec4:	b	ee68 <PyNumber_FloorDivide@plt+0xa268>
    eec8:	ldr	x0, [x21]
    eecc:	sub	x0, x0, #0x1
    eed0:	str	x0, [x21]
    eed4:	cbnz	x0, edb8 <PyNumber_FloorDivide@plt+0xa1b8>
    eed8:	mov	x0, x21
    eedc:	bl	4810 <_Py_Dealloc@plt>
    eee0:	ldr	x21, [sp, #32]
    eee4:	b	ed9c <PyNumber_FloorDivide@plt+0xa19c>

000000000000eee8 <PyInit__datetime@@Base>:
    eee8:	sub	sp, sp, #0x70
    eeec:	mov	w1, #0x3f5                 	// #1013
    eef0:	stp	x29, x30, [sp, #16]
    eef4:	add	x29, sp, #0x10
    eef8:	stp	x21, x22, [sp, #48]
    eefc:	stp	x23, x24, [sp, #64]
    ef00:	adrp	x23, 25000 <PyInit__datetime@@Base+0x16118>
    ef04:	add	x21, x23, #0xab8
    ef08:	add	x0, x21, #0x4c8
    ef0c:	stp	x19, x20, [sp, #32]
    ef10:	bl	49c0 <PyModule_Create2@plt>
    ef14:	cbz	x0, f6a8 <PyInit__datetime@@Base+0x7c0>
    ef18:	adrp	x22, 25000 <PyInit__datetime@@Base+0x16118>
    ef1c:	add	x20, x22, #0x298
    ef20:	mov	x19, x0
    ef24:	add	x0, x20, #0x680
    ef28:	bl	48f0 <PyType_Ready@plt>
    ef2c:	tbnz	w0, #31, f6a8 <PyInit__datetime@@Base+0x7c0>
    ef30:	add	x0, x20, #0x1a0
    ef34:	bl	48f0 <PyType_Ready@plt>
    ef38:	tbnz	w0, #31, f6a8 <PyInit__datetime@@Base+0x7c0>
    ef3c:	mov	x0, x20
    ef40:	bl	48f0 <PyType_Ready@plt>
    ef44:	tbnz	w0, #31, f6a8 <PyInit__datetime@@Base+0x7c0>
    ef48:	add	x0, x20, #0x340
    ef4c:	bl	48f0 <PyType_Ready@plt>
    ef50:	tbnz	w0, #31, f6a8 <PyInit__datetime@@Base+0x7c0>
    ef54:	add	x0, x20, #0x4e0
    ef58:	bl	48f0 <PyType_Ready@plt>
    ef5c:	tbnz	w0, #31, f6a8 <PyInit__datetime@@Base+0x7c0>
    ef60:	add	x0, x21, #0xe8
    ef64:	bl	48f0 <PyType_Ready@plt>
    ef68:	tbnz	w0, #31, f6a8 <PyInit__datetime@@Base+0x7c0>
    ef6c:	mov	x4, x20
    ef70:	mov	w3, #0x0                   	// #0
    ef74:	mov	w2, #0x1                   	// #1
    ef78:	mov	w1, #0x0                   	// #0
    ef7c:	mov	w0, #0x0                   	// #0
    ef80:	ldr	x21, [x20, #264]
    ef84:	bl	5500 <PyNumber_FloorDivide@plt+0x900>
    ef88:	mov	x20, x0
    ef8c:	cbz	x0, f6a8 <PyInit__datetime@@Base+0x7c0>
    ef90:	mov	x2, x0
    ef94:	adrp	x24, 10000 <PyInit__datetime@@Base+0x1118>
    ef98:	mov	x0, x21
    ef9c:	add	x1, x24, #0x5e8
    efa0:	bl	4720 <PyDict_SetItemString@plt>
    efa4:	tbnz	w0, #31, f6a8 <PyInit__datetime@@Base+0x7c0>
    efa8:	ldr	x0, [x20]
    efac:	sub	x0, x0, #0x1
    efb0:	str	x0, [x20]
    efb4:	cbz	x0, f6e8 <PyInit__datetime@@Base+0x800>
    efb8:	mov	w0, #0x3601                	// #13825
    efbc:	add	x4, x22, #0x298
    efc0:	movk	w0, #0xc465, lsl #16
    efc4:	mov	w3, #0x0                   	// #0
    efc8:	mov	w2, #0x0                   	// #0
    efcc:	mov	w1, #0x0                   	// #0
    efd0:	bl	5500 <PyNumber_FloorDivide@plt+0x900>
    efd4:	mov	x20, x0
    efd8:	cbz	x0, f6a8 <PyInit__datetime@@Base+0x7c0>
    efdc:	mov	x2, x0
    efe0:	mov	x0, x21
    efe4:	stp	x25, x26, [sp, #80]
    efe8:	adrp	x25, 10000 <PyInit__datetime@@Base+0x1118>
    efec:	add	x1, x25, #0x5f8
    eff0:	bl	4720 <PyDict_SetItemString@plt>
    eff4:	tbnz	w0, #31, f6c8 <PyInit__datetime@@Base+0x7e0>
    eff8:	ldr	x0, [x20]
    effc:	sub	x0, x0, #0x1
    f000:	str	x0, [x20]
    f004:	cbz	x0, f6f4 <PyInit__datetime@@Base+0x80c>
    f008:	mov	w2, #0x423f                	// #16959
    f00c:	mov	w1, #0x517f                	// #20863
    f010:	mov	w0, #0xc9ff                	// #51711
    f014:	add	x4, x22, #0x298
    f018:	movk	w2, #0xf, lsl #16
    f01c:	movk	w1, #0x1, lsl #16
    f020:	movk	w0, #0x3b9a, lsl #16
    f024:	mov	w3, #0x0                   	// #0
    f028:	bl	5500 <PyNumber_FloorDivide@plt+0x900>
    f02c:	mov	x20, x0
    f030:	cbz	x0, f6c8 <PyInit__datetime@@Base+0x7e0>
    f034:	mov	x0, x21
    f038:	mov	x2, x20
    f03c:	adrp	x21, 10000 <PyInit__datetime@@Base+0x1118>
    f040:	add	x1, x21, #0x600
    f044:	bl	4720 <PyDict_SetItemString@plt>
    f048:	tbnz	w0, #31, f6c8 <PyInit__datetime@@Base+0x7e0>
    f04c:	ldr	x0, [x20]
    f050:	sub	x0, x0, #0x1
    f054:	str	x0, [x20]
    f058:	cbz	x0, f6d0 <PyInit__datetime@@Base+0x7e8>
    f05c:	add	x3, x22, #0x298
    f060:	mov	w2, #0x1                   	// #1
    f064:	add	x3, x3, #0x680
    f068:	mov	w1, w2
    f06c:	mov	w0, w2
    f070:	ldr	x26, [x3, #264]
    f074:	bl	8870 <PyNumber_FloorDivide@plt+0x3c70>
    f078:	mov	x20, x0
    f07c:	cbz	x0, f6c8 <PyInit__datetime@@Base+0x7e0>
    f080:	mov	x2, x0
    f084:	add	x1, x25, #0x5f8
    f088:	mov	x0, x26
    f08c:	bl	4720 <PyDict_SetItemString@plt>
    f090:	tbnz	w0, #31, f6c8 <PyInit__datetime@@Base+0x7e0>
    f094:	ldr	x0, [x20]
    f098:	sub	x0, x0, #0x1
    f09c:	str	x0, [x20]
    f0a0:	cbz	x0, f6dc <PyInit__datetime@@Base+0x7f4>
    f0a4:	add	x3, x22, #0x298
    f0a8:	mov	w2, #0x1f                  	// #31
    f0ac:	add	x3, x3, #0x680
    f0b0:	mov	w1, #0xc                   	// #12
    f0b4:	mov	w0, #0x270f                	// #9999
    f0b8:	bl	8870 <PyNumber_FloorDivide@plt+0x3c70>
    f0bc:	mov	x20, x0
    f0c0:	cbz	x0, f6c8 <PyInit__datetime@@Base+0x7e0>
    f0c4:	mov	x2, x0
    f0c8:	add	x1, x21, #0x600
    f0cc:	mov	x0, x26
    f0d0:	bl	4720 <PyDict_SetItemString@plt>
    f0d4:	tbnz	w0, #31, f6c8 <PyInit__datetime@@Base+0x7e0>
    f0d8:	ldr	x0, [x20]
    f0dc:	sub	x0, x0, #0x1
    f0e0:	str	x0, [x20]
    f0e4:	cbz	x0, f700 <PyInit__datetime@@Base+0x818>
    f0e8:	add	x4, x22, #0x298
    f0ec:	mov	w3, #0x0                   	// #0
    f0f0:	mov	w2, #0x0                   	// #0
    f0f4:	mov	w1, #0x0                   	// #0
    f0f8:	mov	w0, #0x1                   	// #1
    f0fc:	bl	5500 <PyNumber_FloorDivide@plt+0x900>
    f100:	mov	x20, x0
    f104:	cbz	x0, f6c8 <PyInit__datetime@@Base+0x7e0>
    f108:	mov	x0, x26
    f10c:	mov	x2, x20
    f110:	add	x1, x24, #0x5e8
    f114:	bl	4720 <PyDict_SetItemString@plt>
    f118:	tbnz	w0, #31, f6c8 <PyInit__datetime@@Base+0x7e0>
    f11c:	ldr	x0, [x20]
    f120:	str	x27, [sp, #96]
    f124:	sub	x0, x0, #0x1
    f128:	str	x0, [x20]
    f12c:	cbz	x0, f70c <PyInit__datetime@@Base+0x824>
    f130:	adrp	x26, 24000 <PyInit__datetime@@Base+0x15118>
    f134:	add	x6, x22, #0x298
    f138:	add	x6, x6, #0x340
    f13c:	mov	w5, #0x0                   	// #0
    f140:	ldr	x4, [x26, #4024]
    f144:	mov	w3, #0x0                   	// #0
    f148:	mov	w2, #0x0                   	// #0
    f14c:	mov	w1, #0x0                   	// #0
    f150:	mov	w0, #0x0                   	// #0
    f154:	ldr	x27, [x6, #264]
    f158:	bl	8d38 <PyNumber_FloorDivide@plt+0x4138>
    f15c:	mov	x20, x0
    f160:	cbz	x0, f69c <PyInit__datetime@@Base+0x7b4>
    f164:	mov	x2, x0
    f168:	add	x1, x25, #0x5f8
    f16c:	mov	x0, x27
    f170:	bl	4720 <PyDict_SetItemString@plt>
    f174:	tbnz	w0, #31, f69c <PyInit__datetime@@Base+0x7b4>
    f178:	ldr	x0, [x20]
    f17c:	sub	x0, x0, #0x1
    f180:	str	x0, [x20]
    f184:	cbz	x0, f718 <PyInit__datetime@@Base+0x830>
    f188:	ldr	x4, [x26, #4024]
    f18c:	add	x6, x22, #0x298
    f190:	mov	w3, #0x423f                	// #16959
    f194:	mov	w2, #0x3b                  	// #59
    f198:	add	x6, x6, #0x340
    f19c:	mov	w1, w2
    f1a0:	movk	w3, #0xf, lsl #16
    f1a4:	mov	w5, #0x0                   	// #0
    f1a8:	mov	w0, #0x17                  	// #23
    f1ac:	bl	8d38 <PyNumber_FloorDivide@plt+0x4138>
    f1b0:	mov	x20, x0
    f1b4:	cbz	x0, f69c <PyInit__datetime@@Base+0x7b4>
    f1b8:	mov	x2, x0
    f1bc:	add	x1, x21, #0x600
    f1c0:	mov	x0, x27
    f1c4:	bl	4720 <PyDict_SetItemString@plt>
    f1c8:	tbnz	w0, #31, f69c <PyInit__datetime@@Base+0x7b4>
    f1cc:	ldr	x0, [x20]
    f1d0:	sub	x0, x0, #0x1
    f1d4:	str	x0, [x20]
    f1d8:	cbz	x0, f724 <PyInit__datetime@@Base+0x83c>
    f1dc:	add	x4, x22, #0x298
    f1e0:	mov	w3, #0x0                   	// #0
    f1e4:	mov	w2, #0x1                   	// #1
    f1e8:	mov	w1, #0x0                   	// #0
    f1ec:	mov	w0, #0x0                   	// #0
    f1f0:	bl	5500 <PyNumber_FloorDivide@plt+0x900>
    f1f4:	mov	x20, x0
    f1f8:	cbz	x0, f69c <PyInit__datetime@@Base+0x7b4>
    f1fc:	mov	x0, x27
    f200:	mov	x2, x20
    f204:	add	x1, x24, #0x5e8
    f208:	bl	4720 <PyDict_SetItemString@plt>
    f20c:	tbnz	w0, #31, f69c <PyInit__datetime@@Base+0x7b4>
    f210:	ldr	x0, [x20]
    f214:	sub	x0, x0, #0x1
    f218:	str	x0, [x20]
    f21c:	cbz	x0, f730 <PyInit__datetime@@Base+0x848>
    f220:	add	x8, x22, #0x298
    f224:	str	wzr, [sp]
    f228:	ldr	x7, [x26, #4024]
    f22c:	add	x8, x8, #0x1a0
    f230:	str	x8, [sp, #8]
    f234:	mov	w2, #0x1                   	// #1
    f238:	mov	w6, #0x0                   	// #0
    f23c:	mov	w1, w2
    f240:	mov	w0, w2
    f244:	mov	w5, #0x0                   	// #0
    f248:	mov	w4, #0x0                   	// #0
    f24c:	mov	w3, #0x0                   	// #0
    f250:	ldr	x27, [x8, #264]
    f254:	bl	92e0 <PyNumber_FloorDivide@plt+0x46e0>
    f258:	mov	x20, x0
    f25c:	cbz	x0, f69c <PyInit__datetime@@Base+0x7b4>
    f260:	mov	x2, x0
    f264:	add	x1, x25, #0x5f8
    f268:	mov	x0, x27
    f26c:	bl	4720 <PyDict_SetItemString@plt>
    f270:	tbnz	w0, #31, f69c <PyInit__datetime@@Base+0x7b4>
    f274:	ldr	x0, [x20]
    f278:	sub	x0, x0, #0x1
    f27c:	str	x0, [x20]
    f280:	cbz	x0, f73c <PyInit__datetime@@Base+0x854>
    f284:	ldr	x7, [x26, #4024]
    f288:	add	x0, x22, #0x298
    f28c:	add	x0, x0, #0x1a0
    f290:	str	wzr, [sp]
    f294:	str	x0, [sp, #8]
    f298:	mov	w6, #0x423f                	// #16959
    f29c:	mov	w5, #0x3b                  	// #59
    f2a0:	movk	w6, #0xf, lsl #16
    f2a4:	mov	w4, w5
    f2a8:	mov	w3, #0x17                  	// #23
    f2ac:	mov	w2, #0x1f                  	// #31
    f2b0:	mov	w1, #0xc                   	// #12
    f2b4:	mov	w0, #0x270f                	// #9999
    f2b8:	bl	92e0 <PyNumber_FloorDivide@plt+0x46e0>
    f2bc:	mov	x20, x0
    f2c0:	cbz	x0, f69c <PyInit__datetime@@Base+0x7b4>
    f2c4:	mov	x2, x0
    f2c8:	add	x1, x21, #0x600
    f2cc:	mov	x0, x27
    f2d0:	bl	4720 <PyDict_SetItemString@plt>
    f2d4:	tbnz	w0, #31, f69c <PyInit__datetime@@Base+0x7b4>
    f2d8:	ldr	x0, [x20]
    f2dc:	sub	x0, x0, #0x1
    f2e0:	str	x0, [x20]
    f2e4:	cbz	x0, f748 <PyInit__datetime@@Base+0x860>
    f2e8:	add	x4, x22, #0x298
    f2ec:	mov	w3, #0x0                   	// #0
    f2f0:	mov	w2, #0x1                   	// #1
    f2f4:	mov	w1, #0x0                   	// #0
    f2f8:	mov	w0, #0x0                   	// #0
    f2fc:	bl	5500 <PyNumber_FloorDivide@plt+0x900>
    f300:	mov	x20, x0
    f304:	cbz	x0, f69c <PyInit__datetime@@Base+0x7b4>
    f308:	add	x1, x24, #0x5e8
    f30c:	mov	x0, x27
    f310:	mov	x2, x20
    f314:	bl	4720 <PyDict_SetItemString@plt>
    f318:	tbnz	w0, #31, f69c <PyInit__datetime@@Base+0x7b4>
    f31c:	ldr	x0, [x20]
    f320:	sub	x0, x0, #0x1
    f324:	str	x0, [x20]
    f328:	cbz	x0, f754 <PyInit__datetime@@Base+0x86c>
    f32c:	add	x20, x23, #0xab8
    f330:	add	x4, x22, #0x298
    f334:	mov	w3, #0x0                   	// #0
    f338:	mov	w2, #0x0                   	// #0
    f33c:	mov	w1, #0x0                   	// #0
    f340:	mov	w0, #0x0                   	// #0
    f344:	add	x20, x20, #0xe8
    f348:	ldr	x26, [x20, #264]
    f34c:	bl	5500 <PyNumber_FloorDivide@plt+0x900>
    f350:	mov	x24, x0
    f354:	cbz	x0, f69c <PyInit__datetime@@Base+0x7b4>
    f358:	ldr	x2, [x20, #304]
    f35c:	mov	x0, x20
    f360:	mov	x1, #0x0                   	// #0
    f364:	blr	x2
    f368:	mov	x20, x0
    f36c:	ldr	x0, [x24]
    f370:	cbz	x20, f79c <PyInit__datetime@@Base+0x8b4>
    f374:	stp	x24, xzr, [x20, #16]
    f378:	str	x0, [x24]
    f37c:	cbz	x0, f760 <PyInit__datetime@@Base+0x878>
    f380:	adrp	x1, 10000 <PyInit__datetime@@Base+0x1118>
    f384:	mov	x2, x20
    f388:	add	x1, x1, #0x608
    f38c:	mov	x0, x26
    f390:	bl	4720 <PyDict_SetItemString@plt>
    f394:	tbnz	w0, #31, f69c <PyInit__datetime@@Base+0x7b4>
    f398:	add	x27, x23, #0xab8
    f39c:	adrp	x24, 26000 <PyInit__datetime@@Base+0x17118>
    f3a0:	add	x4, x22, #0x298
    f3a4:	mov	w3, #0x1                   	// #1
    f3a8:	str	x20, [x24, #3960]
    f3ac:	mov	w2, #0x0                   	// #0
    f3b0:	mov	w1, #0x3c                  	// #60
    f3b4:	mov	w0, #0xffffffff            	// #-1
    f3b8:	str	x20, [x27, #1368]
    f3bc:	bl	5500 <PyNumber_FloorDivide@plt+0x900>
    f3c0:	mov	x20, x0
    f3c4:	cbz	x0, f69c <PyInit__datetime@@Base+0x7b4>
    f3c8:	ldr	x2, [x27, #536]
    f3cc:	add	x0, x27, #0xe8
    f3d0:	mov	x1, #0x0                   	// #0
    f3d4:	blr	x2
    f3d8:	mov	x27, x0
    f3dc:	ldr	x0, [x20]
    f3e0:	cbz	x27, f7c0 <PyInit__datetime@@Base+0x8d8>
    f3e4:	stp	x20, xzr, [x27, #16]
    f3e8:	str	x0, [x20]
    f3ec:	cbz	x0, f778 <PyInit__datetime@@Base+0x890>
    f3f0:	add	x1, x25, #0x5f8
    f3f4:	mov	x2, x27
    f3f8:	mov	x0, x26
    f3fc:	bl	4720 <PyDict_SetItemString@plt>
    f400:	tbnz	w0, #31, f69c <PyInit__datetime@@Base+0x7b4>
    f404:	ldr	x0, [x27]
    f408:	sub	x0, x0, #0x1
    f40c:	str	x0, [x27]
    f410:	cbz	x0, f76c <PyInit__datetime@@Base+0x884>
    f414:	mov	w1, #0x5144                	// #20804
    f418:	add	x4, x22, #0x298
    f41c:	movk	w1, #0x1, lsl #16
    f420:	mov	w3, #0x0                   	// #0
    f424:	mov	w2, #0x0                   	// #0
    f428:	mov	w0, #0x0                   	// #0
    f42c:	bl	5500 <PyNumber_FloorDivide@plt+0x900>
    f430:	mov	x20, x0
    f434:	cbz	x0, f69c <PyInit__datetime@@Base+0x7b4>
    f438:	add	x0, x23, #0xab8
    f43c:	mov	x1, #0x0                   	// #0
    f440:	add	x0, x0, #0xe8
    f444:	ldr	x2, [x0, #304]
    f448:	blr	x2
    f44c:	mov	x25, x0
    f450:	ldr	x0, [x20]
    f454:	cbz	x25, f7c0 <PyInit__datetime@@Base+0x8d8>
    f458:	stp	x20, xzr, [x25, #16]
    f45c:	str	x0, [x20]
    f460:	cbz	x0, f790 <PyInit__datetime@@Base+0x8a8>
    f464:	add	x1, x21, #0x600
    f468:	mov	x0, x26
    f46c:	mov	x2, x25
    f470:	bl	4720 <PyDict_SetItemString@plt>
    f474:	tbnz	w0, #31, f69c <PyInit__datetime@@Base+0x7b4>
    f478:	ldr	x0, [x25]
    f47c:	sub	x0, x0, #0x1
    f480:	str	x0, [x25]
    f484:	cbz	x0, f784 <PyInit__datetime@@Base+0x89c>
    f488:	ldr	x7, [x24, #3960]
    f48c:	add	x20, x22, #0x298
    f490:	add	x24, x24, #0xf78
    f494:	add	x21, x20, #0x1a0
    f498:	str	wzr, [sp]
    f49c:	mov	w2, #0x1                   	// #1
    f4a0:	str	x21, [sp, #8]
    f4a4:	mov	w1, w2
    f4a8:	mov	w6, #0x0                   	// #0
    f4ac:	mov	w5, #0x0                   	// #0
    f4b0:	mov	w4, #0x0                   	// #0
    f4b4:	mov	w3, #0x0                   	// #0
    f4b8:	mov	w0, #0x7b2                 	// #1970
    f4bc:	bl	92e0 <PyNumber_FloorDivide@plt+0x46e0>
    f4c0:	str	x0, [x24, #72]
    f4c4:	cbz	x0, f69c <PyInit__datetime@@Base+0x7b4>
    f4c8:	mov	x2, #0x1                   	// #1
    f4cc:	mov	x0, x19
    f4d0:	adrp	x1, 10000 <PyInit__datetime@@Base+0x1118>
    f4d4:	add	x1, x1, #0x610
    f4d8:	bl	4740 <PyModule_AddIntConstant@plt>
    f4dc:	add	x23, x23, #0xab8
    f4e0:	mov	x2, #0x270f                	// #9999
    f4e4:	mov	x0, x19
    f4e8:	adrp	x1, 10000 <PyInit__datetime@@Base+0x1118>
    f4ec:	add	x1, x1, #0x618
    f4f0:	bl	4740 <PyModule_AddIntConstant@plt>
    f4f4:	ldr	x3, [x20, #1664]
    f4f8:	add	x2, x20, #0x680
    f4fc:	mov	x0, x19
    f500:	adrp	x1, 10000 <PyInit__datetime@@Base+0x1118>
    f504:	add	x3, x3, #0x1
    f508:	str	x3, [x20, #1664]
    f50c:	add	x1, x1, #0x620
    f510:	bl	4b00 <PyModule_AddObject@plt>
    f514:	ldr	x3, [x20, #416]
    f518:	mov	x2, x21
    f51c:	mov	x0, x19
    f520:	adrp	x1, 10000 <PyInit__datetime@@Base+0x1118>
    f524:	add	x3, x3, #0x1
    f528:	str	x3, [x20, #416]
    f52c:	add	x1, x1, #0x628
    f530:	bl	4b00 <PyModule_AddObject@plt>
    f534:	ldr	x3, [x20, #832]
    f538:	add	x2, x20, #0x340
    f53c:	mov	x0, x19
    f540:	adrp	x1, 10000 <PyInit__datetime@@Base+0x1118>
    f544:	add	x3, x3, #0x1
    f548:	str	x3, [x20, #832]
    f54c:	add	x1, x1, #0x110
    f550:	bl	4b00 <PyModule_AddObject@plt>
    f554:	ldr	x0, [x22, #664]
    f558:	mov	x2, x20
    f55c:	adrp	x1, 10000 <PyInit__datetime@@Base+0x1118>
    f560:	add	x1, x1, #0x638
    f564:	add	x0, x0, #0x1
    f568:	str	x0, [x22, #664]
    f56c:	mov	x0, x19
    f570:	bl	4b00 <PyModule_AddObject@plt>
    f574:	ldr	x3, [x20, #1248]
    f578:	add	x2, x20, #0x4e0
    f57c:	mov	x0, x19
    f580:	adrp	x1, 10000 <PyInit__datetime@@Base+0x1118>
    f584:	add	x3, x3, #0x1
    f588:	str	x3, [x20, #1248]
    f58c:	add	x1, x1, #0x648
    f590:	bl	4b00 <PyModule_AddObject@plt>
    f594:	ldr	x3, [x23, #232]
    f598:	add	x2, x23, #0xe8
    f59c:	mov	x0, x19
    f5a0:	adrp	x1, 10000 <PyInit__datetime@@Base+0x1118>
    f5a4:	add	x3, x3, #0x1
    f5a8:	add	x1, x1, #0x650
    f5ac:	str	x3, [x23, #232]
    f5b0:	bl	4b00 <PyModule_AddObject@plt>
    f5b4:	mov	x2, #0x0                   	// #0
    f5b8:	add	x0, x23, #0x530
    f5bc:	adrp	x1, 10000 <PyInit__datetime@@Base+0x1118>
    f5c0:	add	x1, x1, #0x660
    f5c4:	bl	4b20 <PyCapsule_New@plt>
    f5c8:	mov	x2, x0
    f5cc:	cbz	x0, f69c <PyInit__datetime@@Base+0x7b4>
    f5d0:	adrp	x1, 10000 <PyInit__datetime@@Base+0x1118>
    f5d4:	add	x1, x1, #0x678
    f5d8:	mov	x0, x19
    f5dc:	bl	4b00 <PyModule_AddObject@plt>
    f5e0:	mov	x0, #0x3e8                 	// #1000
    f5e4:	bl	4900 <PyLong_FromLong@plt>
    f5e8:	mov	x1, x0
    f5ec:	mov	x0, #0x4240                	// #16960
    f5f0:	str	x1, [x24, #32]
    f5f4:	movk	x0, #0xf, lsl #16
    f5f8:	bl	4900 <PyLong_FromLong@plt>
    f5fc:	mov	x1, x0
    f600:	mov	x0, #0x8700                	// #34560
    f604:	str	x1, [x24, #16]
    f608:	movk	x0, #0x393, lsl #16
    f60c:	bl	4900 <PyLong_FromLong@plt>
    f610:	mov	x1, x0
    f614:	mov	x0, #0x5180                	// #20864
    f618:	str	x1, [x24, #40]
    f61c:	movk	x0, #0x1, lsl #16
    f620:	bl	4900 <PyLong_FromLong@plt>
    f624:	str	x0, [x24, #24]
    f628:	ldr	x1, [x24, #32]
    f62c:	cbz	x1, f69c <PyInit__datetime@@Base+0x7b4>
    f630:	ldr	x1, [x24, #16]
    f634:	cbz	x1, f69c <PyInit__datetime@@Base+0x7b4>
    f638:	ldr	x1, [x24, #40]
    f63c:	cmp	x1, #0x0
    f640:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    f644:	b.eq	f69c <PyInit__datetime@@Base+0x7b4>  // b.none
    f648:	adrp	x0, 11000 <PyInit__datetime@@Base+0x2118>
    f64c:	ldr	d0, [x0, #1480]
    f650:	bl	4790 <PyLong_FromDouble@plt>
    f654:	str	x0, [x24, #48]
    f658:	adrp	x1, 11000 <PyInit__datetime@@Base+0x2118>
    f65c:	ldr	d0, [x1, #1488]
    f660:	bl	4790 <PyLong_FromDouble@plt>
    f664:	str	x0, [x24, #56]
    f668:	adrp	x1, 11000 <PyInit__datetime@@Base+0x2118>
    f66c:	ldr	d0, [x1, #1496]
    f670:	bl	4790 <PyLong_FromDouble@plt>
    f674:	str	x0, [x24, #64]
    f678:	ldr	x1, [x24, #48]
    f67c:	cbz	x1, f69c <PyInit__datetime@@Base+0x7b4>
    f680:	ldr	x1, [x24, #56]
    f684:	cmp	x1, #0x0
    f688:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    f68c:	b.eq	f69c <PyInit__datetime@@Base+0x7b4>  // b.none
    f690:	ldp	x25, x26, [sp, #80]
    f694:	ldr	x27, [sp, #96]
    f698:	b	f6ac <PyInit__datetime@@Base+0x7c4>
    f69c:	ldp	x25, x26, [sp, #80]
    f6a0:	ldr	x27, [sp, #96]
    f6a4:	nop
    f6a8:	mov	x19, #0x0                   	// #0
    f6ac:	mov	x0, x19
    f6b0:	ldp	x29, x30, [sp, #16]
    f6b4:	ldp	x19, x20, [sp, #32]
    f6b8:	ldp	x21, x22, [sp, #48]
    f6bc:	ldp	x23, x24, [sp, #64]
    f6c0:	add	sp, sp, #0x70
    f6c4:	ret
    f6c8:	ldp	x25, x26, [sp, #80]
    f6cc:	b	f6a8 <PyInit__datetime@@Base+0x7c0>
    f6d0:	mov	x0, x20
    f6d4:	bl	4810 <_Py_Dealloc@plt>
    f6d8:	b	f05c <PyInit__datetime@@Base+0x174>
    f6dc:	mov	x0, x20
    f6e0:	bl	4810 <_Py_Dealloc@plt>
    f6e4:	b	f0a4 <PyInit__datetime@@Base+0x1bc>
    f6e8:	mov	x0, x20
    f6ec:	bl	4810 <_Py_Dealloc@plt>
    f6f0:	b	efb8 <PyInit__datetime@@Base+0xd0>
    f6f4:	mov	x0, x20
    f6f8:	bl	4810 <_Py_Dealloc@plt>
    f6fc:	b	f008 <PyInit__datetime@@Base+0x120>
    f700:	mov	x0, x20
    f704:	bl	4810 <_Py_Dealloc@plt>
    f708:	b	f0e8 <PyInit__datetime@@Base+0x200>
    f70c:	mov	x0, x20
    f710:	bl	4810 <_Py_Dealloc@plt>
    f714:	b	f130 <PyInit__datetime@@Base+0x248>
    f718:	mov	x0, x20
    f71c:	bl	4810 <_Py_Dealloc@plt>
    f720:	b	f188 <PyInit__datetime@@Base+0x2a0>
    f724:	mov	x0, x20
    f728:	bl	4810 <_Py_Dealloc@plt>
    f72c:	b	f1dc <PyInit__datetime@@Base+0x2f4>
    f730:	mov	x0, x20
    f734:	bl	4810 <_Py_Dealloc@plt>
    f738:	b	f220 <PyInit__datetime@@Base+0x338>
    f73c:	mov	x0, x20
    f740:	bl	4810 <_Py_Dealloc@plt>
    f744:	b	f284 <PyInit__datetime@@Base+0x39c>
    f748:	mov	x0, x20
    f74c:	bl	4810 <_Py_Dealloc@plt>
    f750:	b	f2e8 <PyInit__datetime@@Base+0x400>
    f754:	mov	x0, x20
    f758:	bl	4810 <_Py_Dealloc@plt>
    f75c:	b	f32c <PyInit__datetime@@Base+0x444>
    f760:	mov	x0, x24
    f764:	bl	4810 <_Py_Dealloc@plt>
    f768:	b	f380 <PyInit__datetime@@Base+0x498>
    f76c:	mov	x0, x27
    f770:	bl	4810 <_Py_Dealloc@plt>
    f774:	b	f414 <PyInit__datetime@@Base+0x52c>
    f778:	mov	x0, x20
    f77c:	bl	4810 <_Py_Dealloc@plt>
    f780:	b	f3f0 <PyInit__datetime@@Base+0x508>
    f784:	mov	x0, x25
    f788:	bl	4810 <_Py_Dealloc@plt>
    f78c:	b	f488 <PyInit__datetime@@Base+0x5a0>
    f790:	mov	x0, x20
    f794:	bl	4810 <_Py_Dealloc@plt>
    f798:	b	f464 <PyInit__datetime@@Base+0x57c>
    f79c:	sub	x0, x0, #0x1
    f7a0:	str	x0, [x24]
    f7a4:	cbnz	x0, f69c <PyInit__datetime@@Base+0x7b4>
    f7a8:	mov	x0, x24
    f7ac:	mov	x19, #0x0                   	// #0
    f7b0:	bl	4810 <_Py_Dealloc@plt>
    f7b4:	ldp	x25, x26, [sp, #80]
    f7b8:	ldr	x27, [sp, #96]
    f7bc:	b	f6ac <PyInit__datetime@@Base+0x7c4>
    f7c0:	sub	x0, x0, #0x1
    f7c4:	str	x0, [x20]
    f7c8:	cbnz	x0, f69c <PyInit__datetime@@Base+0x7b4>
    f7cc:	mov	x0, x20
    f7d0:	mov	x19, #0x0                   	// #0
    f7d4:	bl	4810 <_Py_Dealloc@plt>
    f7d8:	ldp	x25, x26, [sp, #80]
    f7dc:	ldr	x27, [sp, #96]
    f7e0:	b	f6ac <PyInit__datetime@@Base+0x7c4>

Disassembly of section .fini:

000000000000f7e4 <.fini>:
    f7e4:	stp	x29, x30, [sp, #-16]!
    f7e8:	mov	x29, sp
    f7ec:	ldp	x29, x30, [sp], #16
    f7f0:	ret
