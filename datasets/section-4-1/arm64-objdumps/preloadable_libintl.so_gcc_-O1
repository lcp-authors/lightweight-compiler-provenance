
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//preloadable_libintl.so_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000001bd0 <.init>:
    1bd0:	stp	x29, x30, [sp, #-16]!
    1bd4:	mov	x29, sp
    1bd8:	bl	20e0 <libintl_ngettext@plt+0x10>
    1bdc:	ldp	x29, x30, [sp], #16
    1be0:	ret

Disassembly of section .plt:

0000000000001bf0 <memcpy@plt-0x20>:
    1bf0:	stp	x16, x30, [sp, #-16]!
    1bf4:	adrp	x16, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    1bf8:	ldr	x17, [x16, #4088]
    1bfc:	add	x16, x16, #0xff8
    1c00:	br	x17
    1c04:	nop
    1c08:	nop
    1c0c:	nop

0000000000001c10 <memcpy@plt>:
    1c10:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1c14:	ldr	x17, [x16]
    1c18:	add	x16, x16, #0x0
    1c1c:	br	x17

0000000000001c20 <libintl_dngettext@plt>:
    1c20:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1c24:	ldr	x17, [x16, #8]
    1c28:	add	x16, x16, #0x8
    1c2c:	br	x17

0000000000001c30 <pthread_rwlockattr_init@plt>:
    1c30:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1c34:	ldr	x17, [x16, #16]
    1c38:	add	x16, x16, #0x10
    1c3c:	br	x17

0000000000001c40 <getcwd@plt>:
    1c40:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1c44:	ldr	x17, [x16, #24]
    1c48:	add	x16, x16, #0x18
    1c4c:	br	x17

0000000000001c50 <strtoul@plt>:
    1c50:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1c54:	ldr	x17, [x16, #32]
    1c58:	add	x16, x16, #0x20
    1c5c:	br	x17

0000000000001c60 <strlen@plt>:
    1c60:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1c64:	ldr	x17, [x16, #40]
    1c68:	add	x16, x16, #0x28
    1c6c:	br	x17

0000000000001c70 <raise@plt>:
    1c70:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1c74:	ldr	x17, [x16, #48]
    1c78:	add	x16, x16, #0x30
    1c7c:	br	x17

0000000000001c80 <pthread_mutexattr_settype@plt>:
    1c80:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1c84:	ldr	x17, [x16, #56]
    1c88:	add	x16, x16, #0x38
    1c8c:	br	x17

0000000000001c90 <pthread_rwlock_rdlock@plt>:
    1c90:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1c94:	ldr	x17, [x16, #64]
    1c98:	add	x16, x16, #0x40
    1c9c:	br	x17

0000000000001ca0 <getegid@plt>:
    1ca0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1ca4:	ldr	x17, [x16, #72]
    1ca8:	add	x16, x16, #0x48
    1cac:	br	x17

0000000000001cb0 <geteuid@plt>:
    1cb0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1cb4:	ldr	x17, [x16, #80]
    1cb8:	add	x16, x16, #0x50
    1cbc:	br	x17

0000000000001cc0 <pthread_rwlock_init@plt>:
    1cc0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1cc4:	ldr	x17, [x16, #88]
    1cc8:	add	x16, x16, #0x58
    1ccc:	br	x17

0000000000001cd0 <pthread_rwlockattr_setkind_np@plt>:
    1cd0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1cd4:	ldr	x17, [x16, #96]
    1cd8:	add	x16, x16, #0x60
    1cdc:	br	x17

0000000000001ce0 <fgets_unlocked@plt>:
    1ce0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1ce4:	ldr	x17, [x16, #104]
    1ce8:	add	x16, x16, #0x68
    1cec:	br	x17

0000000000001cf0 <__cxa_finalize@plt>:
    1cf0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1cf4:	ldr	x17, [x16, #112]
    1cf8:	add	x16, x16, #0x70
    1cfc:	br	x17

0000000000001d00 <getuid@plt>:
    1d00:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1d04:	ldr	x17, [x16, #120]
    1d08:	add	x16, x16, #0x78
    1d0c:	br	x17

0000000000001d10 <putc@plt>:
    1d10:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1d14:	ldr	x17, [x16, #128]
    1d18:	add	x16, x16, #0x80
    1d1c:	br	x17

0000000000001d20 <qsort@plt>:
    1d20:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1d24:	ldr	x17, [x16, #136]
    1d28:	add	x16, x16, #0x88
    1d2c:	br	x17

0000000000001d30 <libintl_textdomain@plt>:
    1d30:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1d34:	ldr	x17, [x16, #144]
    1d38:	add	x16, x16, #0x90
    1d3c:	br	x17

0000000000001d40 <libintl_dcgettext@plt>:
    1d40:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1d44:	ldr	x17, [x16, #152]
    1d48:	add	x16, x16, #0x98
    1d4c:	br	x17

0000000000001d50 <__ctype_tolower_loc@plt>:
    1d50:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1d54:	ldr	x17, [x16, #160]
    1d58:	add	x16, x16, #0xa0
    1d5c:	br	x17

0000000000001d60 <tfind@plt>:
    1d60:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1d64:	ldr	x17, [x16, #168]
    1d68:	add	x16, x16, #0xa8
    1d6c:	br	x17

0000000000001d70 <stpcpy@plt>:
    1d70:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1d74:	ldr	x17, [x16, #176]
    1d78:	add	x16, x16, #0xb0
    1d7c:	br	x17

0000000000001d80 <fclose@plt>:
    1d80:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1d84:	ldr	x17, [x16, #184]
    1d88:	add	x16, x16, #0xb8
    1d8c:	br	x17

0000000000001d90 <nl_langinfo@plt>:
    1d90:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1d94:	ldr	x17, [x16, #192]
    1d98:	add	x16, x16, #0xc0
    1d9c:	br	x17

0000000000001da0 <fopen@plt>:
    1da0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1da4:	ldr	x17, [x16, #200]
    1da8:	add	x16, x16, #0xc8
    1dac:	br	x17

0000000000001db0 <malloc@plt>:
    1db0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1db4:	ldr	x17, [x16, #208]
    1db8:	add	x16, x16, #0xd0
    1dbc:	br	x17

0000000000001dc0 <pthread_rwlock_destroy@plt>:
    1dc0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1dc4:	ldr	x17, [x16, #216]
    1dc8:	add	x16, x16, #0xd8
    1dcc:	br	x17

0000000000001dd0 <open@plt>:
    1dd0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1dd4:	ldr	x17, [x16, #224]
    1dd8:	add	x16, x16, #0xe0
    1ddc:	br	x17

0000000000001de0 <strncmp@plt>:
    1de0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1de4:	ldr	x17, [x16, #232]
    1de8:	add	x16, x16, #0xe8
    1dec:	br	x17

0000000000001df0 <_nl_expand_alias@plt>:
    1df0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1df4:	ldr	x17, [x16, #240]
    1df8:	add	x16, x16, #0xf0
    1dfc:	br	x17

0000000000001e00 <libintl_dcngettext@plt>:
    1e00:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1e04:	ldr	x17, [x16, #248]
    1e08:	add	x16, x16, #0xf8
    1e0c:	br	x17

0000000000001e10 <tsearch@plt>:
    1e10:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1e14:	ldr	x17, [x16, #256]
    1e18:	add	x16, x16, #0x100
    1e1c:	br	x17

0000000000001e20 <libintl_bind_textdomain_codeset@plt>:
    1e20:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1e24:	ldr	x17, [x16, #264]
    1e28:	add	x16, x16, #0x108
    1e2c:	br	x17

0000000000001e30 <libintl_bindtextdomain@plt>:
    1e30:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1e34:	ldr	x17, [x16, #272]
    1e38:	add	x16, x16, #0x110
    1e3c:	br	x17

0000000000001e40 <calloc@plt>:
    1e40:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1e44:	ldr	x17, [x16, #280]
    1e48:	add	x16, x16, #0x118
    1e4c:	br	x17

0000000000001e50 <argz_stringify@plt>:
    1e50:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1e54:	ldr	x17, [x16, #288]
    1e58:	add	x16, x16, #0x120
    1e5c:	br	x17

0000000000001e60 <strcasecmp@plt>:
    1e60:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1e64:	ldr	x17, [x16, #296]
    1e68:	add	x16, x16, #0x128
    1e6c:	br	x17

0000000000001e70 <realloc@plt>:
    1e70:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1e74:	ldr	x17, [x16, #304]
    1e78:	add	x16, x16, #0x130
    1e7c:	br	x17

0000000000001e80 <strdup@plt>:
    1e80:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1e84:	ldr	x17, [x16, #312]
    1e88:	add	x16, x16, #0x138
    1e8c:	br	x17

0000000000001e90 <pthread_mutex_init@plt>:
    1e90:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1e94:	ldr	x17, [x16, #320]
    1e98:	add	x16, x16, #0x140
    1e9c:	br	x17

0000000000001ea0 <close@plt>:
    1ea0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1ea4:	ldr	x17, [x16, #328]
    1ea8:	add	x16, x16, #0x148
    1eac:	br	x17

0000000000001eb0 <__gmon_start__@plt>:
    1eb0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1eb4:	ldr	x17, [x16, #336]
    1eb8:	add	x16, x16, #0x150
    1ebc:	br	x17

0000000000001ec0 <abort@plt>:
    1ec0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1ec4:	ldr	x17, [x16, #344]
    1ec8:	add	x16, x16, #0x158
    1ecc:	br	x17

0000000000001ed0 <pthread_rwlock_wrlock@plt>:
    1ed0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1ed4:	ldr	x17, [x16, #352]
    1ed8:	add	x16, x16, #0x160
    1edc:	br	x17

0000000000001ee0 <dcgettext@plt>:
    1ee0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1ee4:	ldr	x17, [x16, #360]
    1ee8:	add	x16, x16, #0x168
    1eec:	br	x17

0000000000001ef0 <argz_count@plt>:
    1ef0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1ef4:	ldr	x17, [x16, #368]
    1ef8:	add	x16, x16, #0x170
    1efc:	br	x17

0000000000001f00 <strcmp@plt>:
    1f00:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1f04:	ldr	x17, [x16, #376]
    1f08:	add	x16, x16, #0x178
    1f0c:	br	x17

0000000000001f10 <iconv@plt>:
    1f10:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1f14:	ldr	x17, [x16, #384]
    1f18:	add	x16, x16, #0x180
    1f1c:	br	x17

0000000000001f20 <__ctype_b_loc@plt>:
    1f20:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1f24:	ldr	x17, [x16, #392]
    1f28:	add	x16, x16, #0x188
    1f2c:	br	x17

0000000000001f30 <mmap@plt>:
    1f30:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1f34:	ldr	x17, [x16, #400]
    1f38:	add	x16, x16, #0x190
    1f3c:	br	x17

0000000000001f40 <uselocale@plt>:
    1f40:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1f44:	ldr	x17, [x16, #408]
    1f48:	add	x16, x16, #0x198
    1f4c:	br	x17

0000000000001f50 <free@plt>:
    1f50:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1f54:	ldr	x17, [x16, #416]
    1f58:	add	x16, x16, #0x1a0
    1f5c:	br	x17

0000000000001f60 <getgid@plt>:
    1f60:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1f64:	ldr	x17, [x16, #424]
    1f68:	add	x16, x16, #0x1a8
    1f6c:	br	x17

0000000000001f70 <mempcpy@plt>:
    1f70:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1f74:	ldr	x17, [x16, #432]
    1f78:	add	x16, x16, #0x1b0
    1f7c:	br	x17

0000000000001f80 <pthread_rwlock_unlock@plt>:
    1f80:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1f84:	ldr	x17, [x16, #440]
    1f88:	add	x16, x16, #0x1b8
    1f8c:	br	x17

0000000000001f90 <libintl_dgettext@plt>:
    1f90:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1f94:	ldr	x17, [x16, #448]
    1f98:	add	x16, x16, #0x1c0
    1f9c:	br	x17

0000000000001fa0 <strchr@plt>:
    1fa0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1fa4:	ldr	x17, [x16, #456]
    1fa8:	add	x16, x16, #0x1c8
    1fac:	br	x17

0000000000001fb0 <fwrite@plt>:
    1fb0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1fb4:	ldr	x17, [x16, #464]
    1fb8:	add	x16, x16, #0x1d0
    1fbc:	br	x17

0000000000001fc0 <munmap@plt>:
    1fc0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1fc4:	ldr	x17, [x16, #472]
    1fc8:	add	x16, x16, #0x1d8
    1fcc:	br	x17

0000000000001fd0 <strcpy@plt>:
    1fd0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1fd4:	ldr	x17, [x16, #480]
    1fd8:	add	x16, x16, #0x1e0
    1fdc:	br	x17

0000000000001fe0 <iconv_open@plt>:
    1fe0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1fe4:	ldr	x17, [x16, #488]
    1fe8:	add	x16, x16, #0x1e8
    1fec:	br	x17

0000000000001ff0 <read@plt>:
    1ff0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    1ff4:	ldr	x17, [x16, #496]
    1ff8:	add	x16, x16, #0x1f0
    1ffc:	br	x17

0000000000002000 <pthread_mutexattr_init@plt>:
    2000:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2004:	ldr	x17, [x16, #504]
    2008:	add	x16, x16, #0x1f8
    200c:	br	x17

0000000000002010 <__fxstat@plt>:
    2010:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2014:	ldr	x17, [x16, #512]
    2018:	add	x16, x16, #0x200
    201c:	br	x17

0000000000002020 <pthread_mutexattr_destroy@plt>:
    2020:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2024:	ldr	x17, [x16, #520]
    2028:	add	x16, x16, #0x208
    202c:	br	x17

0000000000002030 <strstr@plt>:
    2030:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2034:	ldr	x17, [x16, #528]
    2038:	add	x16, x16, #0x210
    203c:	br	x17

0000000000002040 <pthread_rwlockattr_destroy@plt>:
    2040:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2044:	ldr	x17, [x16, #536]
    2048:	add	x16, x16, #0x218
    204c:	br	x17

0000000000002050 <__fsetlocking@plt>:
    2050:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2054:	ldr	x17, [x16, #544]
    2058:	add	x16, x16, #0x220
    205c:	br	x17

0000000000002060 <strcspn@plt>:
    2060:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2064:	ldr	x17, [x16, #552]
    2068:	add	x16, x16, #0x228
    206c:	br	x17

0000000000002070 <__errno_location@plt>:
    2070:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2074:	ldr	x17, [x16, #560]
    2078:	add	x16, x16, #0x230
    207c:	br	x17

0000000000002080 <getenv@plt>:
    2080:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2084:	ldr	x17, [x16, #568]
    2088:	add	x16, x16, #0x238
    208c:	br	x17

0000000000002090 <pthread_mutex_lock@plt>:
    2090:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2094:	ldr	x17, [x16, #576]
    2098:	add	x16, x16, #0x240
    209c:	br	x17

00000000000020a0 <pthread_mutex_unlock@plt>:
    20a0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    20a4:	ldr	x17, [x16, #584]
    20a8:	add	x16, x16, #0x248
    20ac:	br	x17

00000000000020b0 <libintl_gettext@plt>:
    20b0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    20b4:	ldr	x17, [x16, #592]
    20b8:	add	x16, x16, #0x250
    20bc:	br	x17

00000000000020c0 <setlocale@plt>:
    20c0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    20c4:	ldr	x17, [x16, #600]
    20c8:	add	x16, x16, #0x258
    20cc:	br	x17

00000000000020d0 <libintl_ngettext@plt>:
    20d0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    20d4:	ldr	x17, [x16, #608]
    20d8:	add	x16, x16, #0x260
    20dc:	br	x17

Disassembly of section .text:

00000000000020e0 <libintl_bindtextdomain@@Base-0x4bc>:
    20e0:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    20e4:	ldr	x0, [x0, #4016]
    20e8:	cbz	x0, 20f0 <libintl_ngettext@plt+0x20>
    20ec:	b	1eb0 <__gmon_start__@plt>
    20f0:	ret
    20f4:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    20f8:	add	x0, x0, #0x358
    20fc:	adrp	x1, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    2100:	add	x1, x1, #0x358
    2104:	cmp	x0, x1
    2108:	b.eq	2134 <libintl_ngettext@plt+0x64>  // b.none
    210c:	adrp	x1, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    2110:	ldr	x1, [x1, #3984]
    2114:	cbz	x1, 2134 <libintl_ngettext@plt+0x64>
    2118:	stp	x29, x30, [sp, #-16]!
    211c:	mov	x29, sp
    2120:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    2124:	add	x0, x0, #0x358
    2128:	blr	x1
    212c:	ldp	x29, x30, [sp], #16
    2130:	ret
    2134:	ret
    2138:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    213c:	add	x0, x0, #0x358
    2140:	adrp	x1, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    2144:	add	x1, x1, #0x358
    2148:	sub	x0, x0, x1
    214c:	lsr	x1, x0, #63
    2150:	add	x0, x1, x0, asr #3
    2154:	cmp	xzr, x0, asr #1
    2158:	b.eq	2188 <libintl_ngettext@plt+0xb8>  // b.none
    215c:	asr	x1, x0, #1
    2160:	adrp	x2, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    2164:	ldr	x2, [x2, #4056]
    2168:	cbz	x2, 2188 <libintl_ngettext@plt+0xb8>
    216c:	stp	x29, x30, [sp, #-16]!
    2170:	mov	x29, sp
    2174:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    2178:	add	x0, x0, #0x358
    217c:	blr	x2
    2180:	ldp	x29, x30, [sp], #16
    2184:	ret
    2188:	ret
    218c:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    2190:	ldrb	w0, [x0, #856]
    2194:	cbnz	w0, 21d0 <libintl_ngettext@plt+0x100>
    2198:	stp	x29, x30, [sp, #-16]!
    219c:	mov	x29, sp
    21a0:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    21a4:	ldr	x0, [x0, #3992]
    21a8:	cbz	x0, 21b8 <libintl_ngettext@plt+0xe8>
    21ac:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    21b0:	ldr	x0, [x0, #616]
    21b4:	bl	1cf0 <__cxa_finalize@plt>
    21b8:	bl	20f4 <libintl_ngettext@plt+0x24>
    21bc:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    21c0:	mov	w1, #0x1                   	// #1
    21c4:	strb	w1, [x0, #856]
    21c8:	ldp	x29, x30, [sp], #16
    21cc:	ret
    21d0:	ret
    21d4:	stp	x29, x30, [sp, #-16]!
    21d8:	mov	x29, sp
    21dc:	bl	2138 <libintl_ngettext@plt+0x68>
    21e0:	ldp	x29, x30, [sp], #16
    21e4:	ret
    21e8:	stp	x29, x30, [sp, #-80]!
    21ec:	mov	x29, sp
    21f0:	stp	x21, x22, [sp, #32]
    21f4:	stp	x23, x24, [sp, #48]
    21f8:	mov	x22, x1
    21fc:	mov	x23, x2
    2200:	cbz	x0, 232c <libintl_ngettext@plt+0x25c>
    2204:	mov	x21, x0
    2208:	ldrb	w0, [x0]
    220c:	cbz	w0, 232c <libintl_ngettext@plt+0x25c>
    2210:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    2214:	ldr	x0, [x0, #4064]
    2218:	cbz	x0, 222c <libintl_ngettext@plt+0x15c>
    221c:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    2220:	ldr	x0, [x0, #4048]
    2224:	bl	1ed0 <pthread_rwlock_wrlock@plt>
    2228:	cbnz	w0, 234c <libintl_ngettext@plt+0x27c>
    222c:	stp	x19, x20, [sp, #16]
    2230:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    2234:	ldr	x0, [x0, #4000]
    2238:	ldr	x20, [x0]
    223c:	cbz	x20, 2260 <libintl_ngettext@plt+0x190>
    2240:	add	x1, x20, #0x18
    2244:	mov	x0, x21
    2248:	bl	1f00 <strcmp@plt>
    224c:	mov	w19, w0
    2250:	cbz	w0, 2358 <libintl_ngettext@plt+0x288>
    2254:	tbnz	w0, #31, 2260 <libintl_ngettext@plt+0x190>
    2258:	ldr	x20, [x20]
    225c:	cbnz	x20, 2240 <libintl_ngettext@plt+0x170>
    2260:	cbz	x22, 2548 <libintl_ngettext@plt+0x478>
    2264:	ldr	x0, [x22]
    2268:	cbz	x0, 2490 <libintl_ngettext@plt+0x3c0>
    226c:	mov	x0, x21
    2270:	bl	1c60 <strlen@plt>
    2274:	add	x19, x0, #0x1
    2278:	add	x0, x0, #0x19
    227c:	bl	1db0 <malloc@plt>
    2280:	mov	x20, x0
    2284:	cbz	x0, 24ec <libintl_ngettext@plt+0x41c>
    2288:	mov	x2, x19
    228c:	mov	x1, x21
    2290:	add	x0, x0, #0x18
    2294:	bl	1c10 <memcpy@plt>
    2298:	ldr	x19, [x22]
    229c:	cbz	x19, 24bc <libintl_ngettext@plt+0x3ec>
    22a0:	adrp	x1, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    22a4:	ldr	x1, [x1, #4040]
    22a8:	mov	x0, x19
    22ac:	bl	1f00 <strcmp@plt>
    22b0:	adrp	x1, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    22b4:	ldr	x1, [x1, #4040]
    22b8:	cbnz	w0, 24a8 <libintl_ngettext@plt+0x3d8>
    22bc:	str	x1, [x22]
    22c0:	str	x1, [x20, #8]
    22c4:	cbz	x23, 24fc <libintl_ngettext@plt+0x42c>
    22c8:	ldr	x0, [x23]
    22cc:	cbz	x0, 22d8 <libintl_ngettext@plt+0x208>
    22d0:	bl	1e80 <strdup@plt>
    22d4:	cbz	x0, 24c8 <libintl_ngettext@plt+0x3f8>
    22d8:	str	x0, [x23]
    22dc:	str	x0, [x20, #16]
    22e0:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    22e4:	ldr	x0, [x0, #4000]
    22e8:	ldr	x19, [x0]
    22ec:	cbz	x19, 2504 <libintl_ngettext@plt+0x434>
    22f0:	add	x1, x19, #0x18
    22f4:	mov	x0, x21
    22f8:	bl	1f00 <strcmp@plt>
    22fc:	tbnz	w0, #31, 2504 <libintl_ngettext@plt+0x434>
    2300:	mov	x22, x19
    2304:	ldr	x19, [x19]
    2308:	cbz	x19, 2320 <libintl_ngettext@plt+0x250>
    230c:	add	x1, x19, #0x18
    2310:	mov	x0, x21
    2314:	bl	1f00 <strcmp@plt>
    2318:	cmp	w0, #0x0
    231c:	b.gt	2300 <libintl_ngettext@plt+0x230>
    2320:	str	x19, [x20]
    2324:	str	x20, [x22]
    2328:	b	2458 <libintl_ngettext@plt+0x388>
    232c:	cbz	x22, 2334 <libintl_ngettext@plt+0x264>
    2330:	str	xzr, [x22]
    2334:	cbz	x23, 233c <libintl_ngettext@plt+0x26c>
    2338:	str	xzr, [x23]
    233c:	ldp	x21, x22, [sp, #32]
    2340:	ldp	x23, x24, [sp, #48]
    2344:	ldp	x29, x30, [sp], #80
    2348:	ret
    234c:	stp	x19, x20, [sp, #16]
    2350:	str	x25, [sp, #64]
    2354:	bl	1ec0 <abort@plt>
    2358:	cbz	x20, 2260 <libintl_ngettext@plt+0x190>
    235c:	cbz	x22, 23d4 <libintl_ngettext@plt+0x304>
    2360:	ldr	x21, [x22]
    2364:	cbz	x21, 23cc <libintl_ngettext@plt+0x2fc>
    2368:	ldr	x24, [x20, #8]
    236c:	mov	x1, x24
    2370:	mov	x0, x21
    2374:	bl	1f00 <strcmp@plt>
    2378:	cbz	w0, 2434 <libintl_ngettext@plt+0x364>
    237c:	str	x25, [sp, #64]
    2380:	adrp	x1, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    2384:	ldr	x1, [x1, #4040]
    2388:	mov	x0, x21
    238c:	bl	1f00 <strcmp@plt>
    2390:	adrp	x25, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    2394:	ldr	x25, [x25, #4040]
    2398:	cbnz	w0, 241c <libintl_ngettext@plt+0x34c>
    239c:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    23a0:	ldr	x0, [x0, #4040]
    23a4:	cmp	x24, x0
    23a8:	b.eq	23b4 <libintl_ngettext@plt+0x2e4>  // b.none
    23ac:	mov	x0, x24
    23b0:	bl	1f50 <free@plt>
    23b4:	str	x25, [x20, #8]
    23b8:	str	x25, [x22]
    23bc:	cbz	x23, 2518 <libintl_ngettext@plt+0x448>
    23c0:	mov	w19, #0x1                   	// #1
    23c4:	ldr	x25, [sp, #64]
    23c8:	b	23d8 <libintl_ngettext@plt+0x308>
    23cc:	ldr	x0, [x20, #8]
    23d0:	str	x0, [x22]
    23d4:	cbz	x23, 246c <libintl_ngettext@plt+0x39c>
    23d8:	ldr	x21, [x23]
    23dc:	cbz	x21, 2440 <libintl_ngettext@plt+0x370>
    23e0:	ldr	x22, [x20, #16]
    23e4:	cbz	x22, 23f8 <libintl_ngettext@plt+0x328>
    23e8:	mov	x1, x22
    23ec:	mov	x0, x21
    23f0:	bl	1f00 <strcmp@plt>
    23f4:	cbz	w0, 2450 <libintl_ngettext@plt+0x380>
    23f8:	mov	x0, x21
    23fc:	bl	1e80 <strdup@plt>
    2400:	mov	x21, x0
    2404:	cbz	x0, 244c <libintl_ngettext@plt+0x37c>
    2408:	mov	x0, x22
    240c:	bl	1f50 <free@plt>
    2410:	str	x21, [x20, #16]
    2414:	str	x21, [x23]
    2418:	b	2458 <libintl_ngettext@plt+0x388>
    241c:	mov	x0, x21
    2420:	bl	1e80 <strdup@plt>
    2424:	mov	x25, x0
    2428:	cbnz	x0, 239c <libintl_ngettext@plt+0x2cc>
    242c:	mov	x24, x0
    2430:	ldr	x25, [sp, #64]
    2434:	str	x24, [x22]
    2438:	cbnz	x23, 23d8 <libintl_ngettext@plt+0x308>
    243c:	b	246c <libintl_ngettext@plt+0x39c>
    2440:	ldr	x0, [x20, #16]
    2444:	str	x0, [x23]
    2448:	b	2454 <libintl_ngettext@plt+0x384>
    244c:	mov	x22, x0
    2450:	str	x22, [x23]
    2454:	cbz	w19, 246c <libintl_ngettext@plt+0x39c>
    2458:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    245c:	ldr	x0, [x0, #4032]
    2460:	ldr	w1, [x0]
    2464:	add	w1, w1, #0x1
    2468:	str	w1, [x0]
    246c:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    2470:	ldr	x0, [x0, #4064]
    2474:	cbz	x0, 2594 <libintl_ngettext@plt+0x4c4>
    2478:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    247c:	ldr	x0, [x0, #4048]
    2480:	bl	1f80 <pthread_rwlock_unlock@plt>
    2484:	cbnz	w0, 2520 <libintl_ngettext@plt+0x450>
    2488:	ldp	x19, x20, [sp, #16]
    248c:	b	233c <libintl_ngettext@plt+0x26c>
    2490:	cbnz	x23, 254c <libintl_ngettext@plt+0x47c>
    2494:	cbz	x22, 246c <libintl_ngettext@plt+0x39c>
    2498:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    249c:	ldr	x0, [x0, #4040]
    24a0:	str	x0, [x22]
    24a4:	b	246c <libintl_ngettext@plt+0x39c>
    24a8:	mov	x0, x19
    24ac:	bl	1e80 <strdup@plt>
    24b0:	mov	x1, x0
    24b4:	cbnz	x0, 22bc <libintl_ngettext@plt+0x1ec>
    24b8:	b	24e0 <libintl_ngettext@plt+0x410>
    24bc:	adrp	x1, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    24c0:	ldr	x1, [x1, #4040]
    24c4:	b	22bc <libintl_ngettext@plt+0x1ec>
    24c8:	ldr	x0, [x20, #8]
    24cc:	adrp	x1, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    24d0:	ldr	x1, [x1, #4040]
    24d4:	cmp	x0, x1
    24d8:	b.eq	24e0 <libintl_ngettext@plt+0x410>  // b.none
    24dc:	bl	1f50 <free@plt>
    24e0:	mov	x0, x20
    24e4:	bl	1f50 <free@plt>
    24e8:	cbz	x22, 24f0 <libintl_ngettext@plt+0x420>
    24ec:	str	xzr, [x22]
    24f0:	cbz	x23, 246c <libintl_ngettext@plt+0x39c>
    24f4:	str	xzr, [x23]
    24f8:	b	246c <libintl_ngettext@plt+0x39c>
    24fc:	str	xzr, [x20, #16]
    2500:	b	22e0 <libintl_ngettext@plt+0x210>
    2504:	str	x19, [x20]
    2508:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    250c:	ldr	x0, [x0, #4000]
    2510:	str	x20, [x0]
    2514:	b	2458 <libintl_ngettext@plt+0x388>
    2518:	ldr	x25, [sp, #64]
    251c:	b	2458 <libintl_ngettext@plt+0x388>
    2520:	str	x25, [sp, #64]
    2524:	bl	1ec0 <abort@plt>
    2528:	cbz	x22, 2538 <libintl_ngettext@plt+0x468>
    252c:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    2530:	ldr	x0, [x0, #4040]
    2534:	str	x0, [x22]
    2538:	str	xzr, [x23]
    253c:	b	246c <libintl_ngettext@plt+0x39c>
    2540:	cbz	x22, 24f4 <libintl_ngettext@plt+0x424>
    2544:	b	24ec <libintl_ngettext@plt+0x41c>
    2548:	cbz	x23, 246c <libintl_ngettext@plt+0x39c>
    254c:	ldr	x0, [x23]
    2550:	cbz	x0, 2528 <libintl_ngettext@plt+0x458>
    2554:	mov	x0, x21
    2558:	bl	1c60 <strlen@plt>
    255c:	add	x19, x0, #0x1
    2560:	add	x0, x0, #0x19
    2564:	bl	1db0 <malloc@plt>
    2568:	mov	x20, x0
    256c:	cbz	x0, 2540 <libintl_ngettext@plt+0x470>
    2570:	mov	x2, x19
    2574:	mov	x1, x21
    2578:	add	x0, x0, #0x18
    257c:	bl	1c10 <memcpy@plt>
    2580:	cbnz	x22, 2298 <libintl_ngettext@plt+0x1c8>
    2584:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    2588:	ldr	x0, [x0, #4040]
    258c:	str	x0, [x20, #8]
    2590:	b	22c4 <libintl_ngettext@plt+0x1f4>
    2594:	ldp	x19, x20, [sp, #16]
    2598:	b	233c <libintl_ngettext@plt+0x26c>

000000000000259c <libintl_bindtextdomain@@Base>:
    259c:	stp	x29, x30, [sp, #-32]!
    25a0:	mov	x29, sp
    25a4:	str	x1, [sp, #24]
    25a8:	mov	x2, #0x0                   	// #0
    25ac:	add	x1, sp, #0x18
    25b0:	bl	21e8 <libintl_ngettext@plt+0x118>
    25b4:	ldr	x0, [sp, #24]
    25b8:	ldp	x29, x30, [sp], #32
    25bc:	ret

00000000000025c0 <libintl_bind_textdomain_codeset@@Base>:
    25c0:	stp	x29, x30, [sp, #-32]!
    25c4:	mov	x29, sp
    25c8:	str	x1, [sp, #24]
    25cc:	add	x2, sp, #0x18
    25d0:	mov	x1, #0x0                   	// #0
    25d4:	bl	21e8 <libintl_ngettext@plt+0x118>
    25d8:	ldr	x0, [sp, #24]
    25dc:	ldp	x29, x30, [sp], #32
    25e0:	ret

00000000000025e4 <libintl_dcgettext@@Base>:
    25e4:	stp	x29, x30, [sp, #-16]!
    25e8:	mov	x29, sp
    25ec:	mov	w5, w2
    25f0:	mov	x4, #0x0                   	// #0
    25f4:	mov	w3, #0x0                   	// #0
    25f8:	mov	x2, #0x0                   	// #0
    25fc:	bl	5a74 <libintl_textdomain@@Base+0x1508>
    2600:	ldp	x29, x30, [sp], #16
    2604:	ret

0000000000002608 <libintl_dgettext@@Base>:
    2608:	stp	x29, x30, [sp, #-16]!
    260c:	mov	x29, sp
    2610:	mov	w2, #0x5                   	// #5
    2614:	bl	1d40 <libintl_dcgettext@plt>
    2618:	ldp	x29, x30, [sp], #16
    261c:	ret

0000000000002620 <libintl_gettext@@Base>:
    2620:	stp	x29, x30, [sp, #-16]!
    2624:	mov	x29, sp
    2628:	mov	w2, #0x5                   	// #5
    262c:	mov	x1, x0
    2630:	mov	x0, #0x0                   	// #0
    2634:	bl	1d40 <libintl_dcgettext@plt>
    2638:	ldp	x29, x30, [sp], #16
    263c:	ret
    2640:	sub	sp, sp, #0xa0
    2644:	stp	x29, x30, [sp, #32]
    2648:	add	x29, sp, #0x20
    264c:	stp	x19, x20, [sp, #48]
    2650:	stp	x21, x22, [sp, #64]
    2654:	stp	x23, x24, [sp, #80]
    2658:	mov	x20, x0
    265c:	mov	x21, x1
    2660:	mov	x22, x2
    2664:	mov	x23, x3
    2668:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    266c:	ldr	x0, [x0, #4064]
    2670:	cbz	x0, 2684 <libintl_gettext@@Base+0x64>
    2674:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    2678:	add	x0, x0, #0x270
    267c:	bl	1c90 <pthread_rwlock_rdlock@plt>
    2680:	cbnz	w0, 2714 <libintl_gettext@@Base+0xf4>
    2684:	mov	x0, x20
    2688:	bl	1c60 <strlen@plt>
    268c:	str	wzr, [sp, #16]
    2690:	str	x22, [sp, #8]
    2694:	str	xzr, [sp]
    2698:	mov	x7, #0x0                   	// #0
    269c:	mov	x6, #0x0                   	// #0
    26a0:	mov	x5, #0x0                   	// #0
    26a4:	mov	x4, x21
    26a8:	mov	w3, #0x0                   	// #0
    26ac:	add	x2, x0, #0x1
    26b0:	mov	x1, x20
    26b4:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    26b8:	add	x0, x0, #0x360
    26bc:	bl	469c <libintl_textdomain@@Base+0x130>
    26c0:	mov	x19, x0
    26c4:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    26c8:	ldr	x0, [x0, #4064]
    26cc:	cbz	x0, 26e0 <libintl_gettext@@Base+0xc0>
    26d0:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    26d4:	add	x0, x0, #0x270
    26d8:	bl	1f80 <pthread_rwlock_unlock@plt>
    26dc:	cbnz	w0, 271c <libintl_gettext@@Base+0xfc>
    26e0:	cbz	x19, 2770 <libintl_gettext@@Base+0x150>
    26e4:	ldr	w0, [x19, #8]
    26e8:	cmp	w0, #0x0
    26ec:	b.le	2724 <libintl_gettext@@Base+0x104>
    26f0:	ldr	x0, [x19, #16]
    26f4:	cbz	x0, 2734 <libintl_gettext@@Base+0x114>
    26f8:	mov	x0, x19
    26fc:	ldp	x19, x20, [sp, #48]
    2700:	ldp	x21, x22, [sp, #64]
    2704:	ldp	x23, x24, [sp, #80]
    2708:	ldp	x29, x30, [sp, #32]
    270c:	add	sp, sp, #0xa0
    2710:	ret
    2714:	str	x25, [sp, #96]
    2718:	bl	1ec0 <abort@plt>
    271c:	str	x25, [sp, #96]
    2720:	bl	1ec0 <abort@plt>
    2724:	mov	x1, x23
    2728:	mov	x0, x19
    272c:	bl	2924 <libintl_gettext@@Base+0x304>
    2730:	b	26f0 <libintl_gettext@@Base+0xd0>
    2734:	ldr	x0, [x19, #32]
    2738:	cbz	x0, 26f8 <libintl_gettext@@Base+0xd8>
    273c:	add	x20, x19, #0x20
    2740:	b	2758 <libintl_gettext@@Base+0x138>
    2744:	ldr	x0, [x20]
    2748:	ldr	x0, [x0, #16]
    274c:	cbnz	x0, 26f8 <libintl_gettext@@Base+0xd8>
    2750:	ldr	x0, [x20, #8]!
    2754:	cbz	x0, 26f8 <libintl_gettext@@Base+0xd8>
    2758:	ldr	w1, [x0, #8]
    275c:	cmp	w1, #0x0
    2760:	b.gt	2744 <libintl_gettext@@Base+0x124>
    2764:	mov	x1, x23
    2768:	bl	2924 <libintl_gettext@@Base+0x304>
    276c:	b	2744 <libintl_gettext@@Base+0x124>
    2770:	str	x25, [sp, #96]
    2774:	mov	x0, x21
    2778:	bl	1df0 <_nl_expand_alias@plt>
    277c:	mov	x25, x0
    2780:	cbz	x0, 2790 <libintl_gettext@@Base+0x170>
    2784:	bl	1e80 <strdup@plt>
    2788:	mov	x21, x0
    278c:	cbz	x0, 28cc <libintl_gettext@@Base+0x2ac>
    2790:	add	x5, sp, #0x78
    2794:	add	x4, sp, #0x80
    2798:	add	x3, sp, #0x88
    279c:	add	x2, sp, #0x90
    27a0:	add	x1, sp, #0x98
    27a4:	mov	x0, x21
    27a8:	bl	4bc8 <libintl_textdomain@@Base+0x65c>
    27ac:	mov	w24, w0
    27b0:	cmn	w0, #0x1
    27b4:	b.eq	28d8 <libintl_gettext@@Base+0x2b8>  // b.none
    27b8:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    27bc:	ldr	x0, [x0, #4064]
    27c0:	cbz	x0, 27d4 <libintl_gettext@@Base+0x1b4>
    27c4:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    27c8:	add	x0, x0, #0x270
    27cc:	bl	1ed0 <pthread_rwlock_wrlock@plt>
    27d0:	cbnz	w0, 2868 <libintl_gettext@@Base+0x248>
    27d4:	mov	x0, x20
    27d8:	bl	1c60 <strlen@plt>
    27dc:	mov	w1, #0x1                   	// #1
    27e0:	str	w1, [sp, #16]
    27e4:	str	x22, [sp, #8]
    27e8:	ldr	x1, [sp, #144]
    27ec:	str	x1, [sp]
    27f0:	ldr	x7, [sp, #120]
    27f4:	ldr	x6, [sp, #128]
    27f8:	ldr	x5, [sp, #136]
    27fc:	ldr	x4, [sp, #152]
    2800:	mov	w3, w24
    2804:	add	x2, x0, #0x1
    2808:	mov	x1, x20
    280c:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    2810:	add	x0, x0, #0x360
    2814:	bl	469c <libintl_textdomain@@Base+0x130>
    2818:	mov	x19, x0
    281c:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    2820:	ldr	x0, [x0, #4064]
    2824:	cbz	x0, 2838 <libintl_gettext@@Base+0x218>
    2828:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    282c:	add	x0, x0, #0x270
    2830:	bl	1f80 <pthread_rwlock_unlock@plt>
    2834:	cbnz	w0, 286c <libintl_gettext@@Base+0x24c>
    2838:	cbz	x19, 285c <libintl_gettext@@Base+0x23c>
    283c:	ldr	w0, [x19, #8]
    2840:	cmp	w0, #0x0
    2844:	b.le	2870 <libintl_gettext@@Base+0x250>
    2848:	ldr	x0, [x19, #16]
    284c:	cbz	x0, 2880 <libintl_gettext@@Base+0x260>
    2850:	cbz	x25, 285c <libintl_gettext@@Base+0x23c>
    2854:	mov	x0, x21
    2858:	bl	1f50 <free@plt>
    285c:	tbnz	w24, #0, 28bc <libintl_gettext@@Base+0x29c>
    2860:	ldr	x25, [sp, #96]
    2864:	b	26f8 <libintl_gettext@@Base+0xd8>
    2868:	bl	1ec0 <abort@plt>
    286c:	bl	1ec0 <abort@plt>
    2870:	mov	x1, x23
    2874:	mov	x0, x19
    2878:	bl	2924 <libintl_gettext@@Base+0x304>
    287c:	b	2848 <libintl_gettext@@Base+0x228>
    2880:	ldr	x0, [x19, #32]
    2884:	cbz	x0, 2850 <libintl_gettext@@Base+0x230>
    2888:	add	x20, x19, #0x20
    288c:	b	28a4 <libintl_gettext@@Base+0x284>
    2890:	ldr	x0, [x20]
    2894:	ldr	x0, [x0, #16]
    2898:	cbnz	x0, 2850 <libintl_gettext@@Base+0x230>
    289c:	ldr	x0, [x20, #8]!
    28a0:	cbz	x0, 2850 <libintl_gettext@@Base+0x230>
    28a4:	ldr	w1, [x0, #8]
    28a8:	cmp	w1, #0x0
    28ac:	b.gt	2890 <libintl_gettext@@Base+0x270>
    28b0:	mov	x1, x23
    28b4:	bl	2924 <libintl_gettext@@Base+0x304>
    28b8:	b	2890 <libintl_gettext@@Base+0x270>
    28bc:	ldr	x0, [sp, #120]
    28c0:	bl	1f50 <free@plt>
    28c4:	ldr	x25, [sp, #96]
    28c8:	b	26f8 <libintl_gettext@@Base+0xd8>
    28cc:	mov	x19, x0
    28d0:	ldr	x25, [sp, #96]
    28d4:	b	26f8 <libintl_gettext@@Base+0xd8>
    28d8:	ldr	x25, [sp, #96]
    28dc:	b	26f8 <libintl_gettext@@Base+0xd8>
    28e0:	mov	x2, x0
    28e4:	ldrb	w1, [x2], #1
    28e8:	and	x0, x1, #0xff
    28ec:	cbz	w1, 291c <libintl_gettext@@Base+0x2fc>
    28f0:	ldrb	w1, [x2]
    28f4:	cbz	w1, 2920 <libintl_gettext@@Base+0x300>
    28f8:	lsl	x4, x0, #4
    28fc:	add	x2, x2, #0x1
    2900:	add	x0, x4, w1, uxtb
    2904:	ands	x3, x0, #0xf0000000
    2908:	and	x0, x0, #0xffffffff0fffffff
    290c:	eor	x0, x0, x3, lsr #24
    2910:	add	x1, x4, w1, uxtb
    2914:	csel	x0, x1, x0, eq  // eq = none
    2918:	b	28f0 <libintl_gettext@@Base+0x2d0>
    291c:	mov	x0, #0x0                   	// #0
    2920:	ret
    2924:	stp	x29, x30, [sp, #-416]!
    2928:	mov	x29, sp
    292c:	stp	x19, x20, [sp, #16]
    2930:	stp	x21, x22, [sp, #32]
    2934:	stp	x23, x24, [sp, #48]
    2938:	stp	x25, x26, [sp, #64]
    293c:	stp	x27, x28, [sp, #80]
    2940:	mov	x19, x0
    2944:	str	x1, [x29, #248]
    2948:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    294c:	ldr	x0, [x0, #4064]
    2950:	cbz	x0, 2964 <libintl_gettext@@Base+0x344>
    2954:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    2958:	add	x0, x0, #0x2a8
    295c:	bl	2090 <pthread_mutex_lock@plt>
    2960:	cbnz	w0, 2ba0 <libintl_gettext@@Base+0x580>
    2964:	ldr	w0, [x19, #8]
    2968:	cbnz	w0, 2bd4 <libintl_gettext@@Base+0x5b4>
    296c:	mov	w0, #0xffffffff            	// #-1
    2970:	str	w0, [x19, #8]
    2974:	str	xzr, [x19, #16]
    2978:	ldr	x0, [x19]
    297c:	cbz	x0, 2bcc <libintl_gettext@@Base+0x5ac>
    2980:	mov	w1, #0x0                   	// #0
    2984:	bl	1dd0 <open@plt>
    2988:	mov	w21, w0
    298c:	cmn	w0, #0x1
    2990:	b.eq	2bcc <libintl_gettext@@Base+0x5ac>  // b.none
    2994:	add	x2, x29, #0x120
    2998:	mov	w1, w0
    299c:	mov	w0, #0x0                   	// #0
    29a0:	bl	2010 <__fxstat@plt>
    29a4:	mov	w27, w0
    29a8:	cbnz	w0, 2bc4 <libintl_gettext@@Base+0x5a4>
    29ac:	ldr	x28, [x29, #336]
    29b0:	cmp	x28, #0x2f
    29b4:	b.ls	2bc4 <libintl_gettext@@Base+0x5a4>  // b.plast
    29b8:	mov	x5, #0x0                   	// #0
    29bc:	mov	w4, w21
    29c0:	mov	w3, #0x2                   	// #2
    29c4:	mov	w2, #0x1                   	// #1
    29c8:	mov	x1, x28
    29cc:	mov	x0, #0x0                   	// #0
    29d0:	bl	1f30 <mmap@plt>
    29d4:	mov	x20, x0
    29d8:	cmn	x0, #0x1
    29dc:	b.eq	3fa8 <libintl_gettext@@Base+0x1988>  // b.none
    29e0:	mov	w0, w21
    29e4:	bl	1ea0 <close@plt>
    29e8:	ldr	w0, [x20]
    29ec:	mov	w1, #0x495                 	// #1173
    29f0:	movk	w1, #0xde12, lsl #16
    29f4:	cmp	w0, w1
    29f8:	mov	w1, #0x12de                	// #4830
    29fc:	movk	w1, #0x9504, lsl #16
    2a00:	ccmp	w0, w1, #0x4, ne  // ne = any
    2a04:	b.ne	2c70 <libintl_gettext@@Base+0x650>  // b.any
    2a08:	mov	w26, #0x1                   	// #1
    2a0c:	mov	x0, #0xc8                  	// #200
    2a10:	bl	1db0 <malloc@plt>
    2a14:	mov	x25, x0
    2a18:	cbz	x0, 2c80 <libintl_gettext@@Base+0x660>
    2a1c:	str	x0, [x19, #16]
    2a20:	str	x20, [x0]
    2a24:	str	w26, [x0, #8]
    2a28:	str	x28, [x0, #16]
    2a2c:	ldr	w24, [x20]
    2a30:	mov	w0, #0x12de                	// #4830
    2a34:	movk	w0, #0x9504, lsl #16
    2a38:	cmp	w24, w0
    2a3c:	cset	w3, ne  // ne = any
    2a40:	str	w3, [x25, #24]
    2a44:	str	xzr, [x25, #32]
    2a48:	b.eq	2ca0 <libintl_gettext@@Base+0x680>  // b.none
    2a4c:	ldr	w0, [x20, #4]
    2a50:	lsr	w1, w0, #8
    2a54:	and	w1, w1, #0xff00
    2a58:	lsl	w2, w0, #8
    2a5c:	and	w2, w2, #0xff0000
    2a60:	orr	w1, w1, w2
    2a64:	lsl	w2, w0, #24
    2a68:	orr	w0, w2, w0, lsr #24
    2a6c:	orr	w1, w1, w0
    2a70:	asr	w0, w1, #16
    2a74:	cmp	w0, #0x1
    2a78:	b.hi	3f28 <libintl_gettext@@Base+0x1908>  // b.pmore
    2a7c:	ldr	w0, [x20, #8]
    2a80:	lsr	w2, w0, #8
    2a84:	and	w2, w2, #0xff00
    2a88:	lsl	w4, w0, #8
    2a8c:	and	w4, w4, #0xff0000
    2a90:	orr	w2, w2, w4
    2a94:	lsl	w4, w0, #24
    2a98:	orr	w0, w4, w0, lsr #24
    2a9c:	orr	w2, w2, w0
    2aa0:	str	w2, [x25, #40]
    2aa4:	ldr	w2, [x20, #12]
    2aa8:	lsr	w0, w2, #8
    2aac:	and	w0, w0, #0xff00
    2ab0:	lsl	w4, w2, #8
    2ab4:	and	w4, w4, #0xff0000
    2ab8:	orr	w0, w0, w4
    2abc:	lsl	w4, w2, #24
    2ac0:	orr	w2, w4, w2, lsr #24
    2ac4:	orr	w0, w0, w2
    2ac8:	add	x0, x20, x0
    2acc:	str	x0, [x25, #48]
    2ad0:	ldr	w2, [x20, #16]
    2ad4:	lsl	w0, w2, #8
    2ad8:	and	w0, w0, #0xff0000
    2adc:	lsr	w4, w2, #8
    2ae0:	and	w4, w4, #0xff00
    2ae4:	orr	w0, w0, w4
    2ae8:	lsr	w4, w2, #24
    2aec:	orr	w2, w4, w2, lsl #24
    2af0:	orr	w0, w0, w2
    2af4:	add	x0, x20, x0
    2af8:	str	x0, [x25, #56]
    2afc:	ldr	w0, [x20, #20]
    2b00:	lsl	w2, w0, #8
    2b04:	and	w2, w2, #0xff0000
    2b08:	lsr	w4, w0, #8
    2b0c:	and	w4, w4, #0xff00
    2b10:	orr	w2, w2, w4
    2b14:	lsr	w4, w0, #24
    2b18:	orr	w0, w4, w0, lsl #24
    2b1c:	orr	w0, w2, w0
    2b20:	str	w0, [x29, #240]
    2b24:	str	w0, [x25, #88]
    2b28:	cmp	w0, #0x2
    2b2c:	b.hi	2dbc <libintl_gettext@@Base+0x79c>  // b.pmore
    2b30:	str	xzr, [x25, #96]
    2b34:	str	w3, [x25, #104]
    2b38:	tst	w1, #0xffff
    2b3c:	b.ne	3f28 <libintl_gettext@@Base+0x1908>  // b.any
    2b40:	str	wzr, [x25, #64]
    2b44:	str	xzr, [x25, #72]
    2b48:	str	xzr, [x25, #80]
    2b4c:	str	xzr, [x25, #112]
    2b50:	str	xzr, [x25, #120]
    2b54:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    2b58:	ldr	x0, [x0, #4064]
    2b5c:	cbz	x0, 2b6c <libintl_gettext@@Base+0x54c>
    2b60:	add	x0, x25, #0x80
    2b64:	bl	6d44 <libintl_ngettext@@Base+0xa98>
    2b68:	cbnz	w0, 3f84 <libintl_gettext@@Base+0x1964>
    2b6c:	add	x4, x29, #0x118
    2b70:	mov	w3, #0x0                   	// #0
    2b74:	adrp	x2, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    2b78:	add	x2, x2, #0x7c0
    2b7c:	ldr	x1, [x29, #248]
    2b80:	mov	x0, x19
    2b84:	bl	5160 <libintl_textdomain@@Base+0xbf4>
    2b88:	cmn	x0, #0x1
    2b8c:	b.eq	3f88 <libintl_gettext@@Base+0x1968>  // b.none
    2b90:	add	x2, x25, #0xc0
    2b94:	add	x1, x25, #0xb8
    2b98:	bl	6bd4 <libintl_ngettext@@Base+0x928>
    2b9c:	b	2bcc <libintl_gettext@@Base+0x5ac>
    2ba0:	bl	1ec0 <abort@plt>
    2ba4:	cmn	x0, #0x1
    2ba8:	b.ne	2bbc <libintl_gettext@@Base+0x59c>  // b.any
    2bac:	bl	2070 <__errno_location@plt>
    2bb0:	ldr	w0, [x0]
    2bb4:	cmp	w0, #0x4
    2bb8:	b.eq	2c10 <libintl_gettext@@Base+0x5f0>  // b.none
    2bbc:	mov	x0, x20
    2bc0:	bl	1f50 <free@plt>
    2bc4:	mov	w0, w21
    2bc8:	bl	1ea0 <close@plt>
    2bcc:	mov	w0, #0x1                   	// #1
    2bd0:	str	w0, [x19, #8]
    2bd4:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    2bd8:	ldr	x0, [x0, #4064]
    2bdc:	cbz	x0, 2bf0 <libintl_gettext@@Base+0x5d0>
    2be0:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    2be4:	add	x0, x0, #0x2a8
    2be8:	bl	20a0 <pthread_mutex_unlock@plt>
    2bec:	cbnz	w0, 3fa4 <libintl_gettext@@Base+0x1984>
    2bf0:	mov	sp, x29
    2bf4:	ldp	x19, x20, [sp, #16]
    2bf8:	ldp	x21, x22, [sp, #32]
    2bfc:	ldp	x23, x24, [sp, #48]
    2c00:	ldp	x25, x26, [sp, #64]
    2c04:	ldp	x27, x28, [sp, #80]
    2c08:	ldp	x29, x30, [sp], #416
    2c0c:	ret
    2c10:	cbz	x22, 2c38 <libintl_gettext@@Base+0x618>
    2c14:	mov	x2, x22
    2c18:	mov	x1, x23
    2c1c:	mov	w0, w21
    2c20:	bl	1ff0 <read@plt>
    2c24:	cmp	x0, #0x0
    2c28:	b.le	2ba4 <libintl_gettext@@Base+0x584>
    2c2c:	add	x23, x23, x0
    2c30:	sub	x22, x22, x0
    2c34:	b	2c10 <libintl_gettext@@Base+0x5f0>
    2c38:	mov	w0, w21
    2c3c:	bl	1ea0 <close@plt>
    2c40:	ldr	w0, [x20]
    2c44:	mov	w1, #0x12de                	// #4830
    2c48:	movk	w1, #0x9504, lsl #16
    2c4c:	cmp	w0, w1
    2c50:	mov	w1, #0x495                 	// #1173
    2c54:	movk	w1, #0xde12, lsl #16
    2c58:	ccmp	w0, w1, #0x4, ne  // ne = any
    2c5c:	mov	w26, w27
    2c60:	b.eq	2a0c <libintl_gettext@@Base+0x3ec>  // b.none
    2c64:	mov	x0, x20
    2c68:	bl	1f50 <free@plt>
    2c6c:	b	2bcc <libintl_gettext@@Base+0x5ac>
    2c70:	mov	x1, x28
    2c74:	mov	x0, x20
    2c78:	bl	1fc0 <munmap@plt>
    2c7c:	b	2bcc <libintl_gettext@@Base+0x5ac>
    2c80:	cbz	w26, 2c94 <libintl_gettext@@Base+0x674>
    2c84:	mov	x1, x28
    2c88:	mov	x0, x20
    2c8c:	bl	1fc0 <munmap@plt>
    2c90:	b	2bcc <libintl_gettext@@Base+0x5ac>
    2c94:	mov	x0, x20
    2c98:	bl	1f50 <free@plt>
    2c9c:	b	2bcc <libintl_gettext@@Base+0x5ac>
    2ca0:	ldr	w1, [x20, #4]
    2ca4:	asr	w0, w1, #16
    2ca8:	cmp	w0, #0x1
    2cac:	b.hi	3f28 <libintl_gettext@@Base+0x1908>  // b.pmore
    2cb0:	ldr	w0, [x20, #8]
    2cb4:	str	w0, [x25, #40]
    2cb8:	ldr	w0, [x20, #12]
    2cbc:	add	x0, x20, x0
    2cc0:	str	x0, [x25, #48]
    2cc4:	ldr	w0, [x20, #16]
    2cc8:	add	x0, x20, x0
    2ccc:	str	x0, [x25, #56]
    2cd0:	ldr	w0, [x20, #20]
    2cd4:	str	w0, [x29, #240]
    2cd8:	str	w0, [x25, #88]
    2cdc:	cmp	w0, #0x2
    2ce0:	b.ls	2b30 <libintl_gettext@@Base+0x510>  // b.plast
    2ce4:	ldr	w0, [x20, #24]
    2ce8:	add	x0, x20, x0
    2cec:	str	x0, [x29, #224]
    2cf0:	str	x0, [x25, #96]
    2cf4:	str	w3, [x25, #104]
    2cf8:	tst	w1, #0xffff
    2cfc:	b.eq	2b40 <libintl_gettext@@Base+0x520>  // b.none
    2d00:	ldr	w0, [x20, #36]
    2d04:	str	w0, [x29, #236]
    2d08:	cbz	w0, 2e24 <libintl_gettext@@Base+0x804>
    2d0c:	ldr	w1, [x20, #28]
    2d10:	str	w1, [x29, #208]
    2d14:	ldr	w2, [x20, #32]
    2d18:	add	x2, x20, x2
    2d1c:	ubfiz	x0, x1, #3, #32
    2d20:	add	x0, x0, #0xf
    2d24:	and	x0, x0, #0xffffffff0
    2d28:	sub	sp, sp, x0
    2d2c:	mov	x0, sp
    2d30:	str	x0, [x29, #216]
    2d34:	cbz	w1, 3790 <libintl_gettext@@Base+0x1170>
    2d38:	ldr	w0, [x29, #208]
    2d3c:	sub	w4, w0, #0x1
    2d40:	add	x4, x4, #0x1
    2d44:	lsl	x4, x4, #3
    2d48:	mov	x1, #0x0                   	// #0
    2d4c:	mov	w5, #0x12de                	// #4830
    2d50:	movk	w5, #0x9504, lsl #16
    2d54:	adrp	x6, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    2d58:	add	x6, x6, #0x788
    2d5c:	adrp	x13, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    2d60:	add	x13, x13, #0x748
    2d64:	adrp	x12, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    2d68:	add	x12, x12, #0x750
    2d6c:	adrp	x11, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    2d70:	add	x11, x11, #0x758
    2d74:	adrp	x10, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    2d78:	add	x10, x10, #0x760
    2d7c:	adrp	x9, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    2d80:	add	x9, x9, #0x770
    2d84:	adrp	x8, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    2d88:	add	x8, x8, #0x768
    2d8c:	adrp	x22, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    2d90:	add	x22, x22, #0x728
    2d94:	adrp	x23, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    2d98:	add	x23, x23, #0x730
    2d9c:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    2da0:	add	x21, x0, #0x738
    2da4:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    2da8:	add	x30, x0, #0x740
    2dac:	adrp	x7, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    2db0:	add	x7, x7, #0x780
    2db4:	ldr	x14, [x29, #216]
    2db8:	b	2f88 <libintl_gettext@@Base+0x968>
    2dbc:	ldr	w2, [x20, #24]
    2dc0:	lsl	w0, w2, #8
    2dc4:	and	w0, w0, #0xff0000
    2dc8:	lsr	w4, w2, #8
    2dcc:	and	w4, w4, #0xff00
    2dd0:	orr	w0, w0, w4
    2dd4:	lsr	w4, w2, #24
    2dd8:	orr	w2, w4, w2, lsl #24
    2ddc:	orr	w0, w0, w2
    2de0:	add	x0, x20, x0
    2de4:	str	x0, [x29, #224]
    2de8:	str	x0, [x25, #96]
    2dec:	str	w3, [x25, #104]
    2df0:	tst	w1, #0xffff
    2df4:	b.eq	2b40 <libintl_gettext@@Base+0x520>  // b.none
    2df8:	ldr	w0, [x20, #36]
    2dfc:	lsl	w1, w0, #8
    2e00:	and	w1, w1, #0xff0000
    2e04:	lsr	w2, w0, #8
    2e08:	and	w2, w2, #0xff00
    2e0c:	orr	w1, w1, w2
    2e10:	lsr	w2, w0, #24
    2e14:	orr	w0, w2, w0, lsl #24
    2e18:	orr	w0, w1, w0
    2e1c:	str	w0, [x29, #236]
    2e20:	cbnz	w0, 2e34 <libintl_gettext@@Base+0x814>
    2e24:	str	wzr, [x25, #64]
    2e28:	str	xzr, [x25, #72]
    2e2c:	str	xzr, [x25, #80]
    2e30:	b	2b4c <libintl_gettext@@Base+0x52c>
    2e34:	ldr	w1, [x20, #28]
    2e38:	lsl	w0, w1, #8
    2e3c:	and	w0, w0, #0xff0000
    2e40:	lsr	w2, w1, #8
    2e44:	and	w2, w2, #0xff00
    2e48:	orr	w0, w0, w2
    2e4c:	lsr	w2, w1, #24
    2e50:	orr	w1, w2, w1, lsl #24
    2e54:	orr	w5, w0, w1
    2e58:	str	w5, [x29, #208]
    2e5c:	ldr	w3, [x20, #32]
    2e60:	lsl	w2, w3, #8
    2e64:	and	w2, w2, #0xff0000
    2e68:	lsr	w4, w3, #8
    2e6c:	and	w4, w4, #0xff00
    2e70:	orr	w2, w2, w4
    2e74:	lsr	w4, w3, #24
    2e78:	orr	w3, w4, w3, lsl #24
    2e7c:	orr	w2, w2, w3
    2e80:	add	x2, x20, x2
    2e84:	orr	w0, w0, w1
    2e88:	lsl	x0, x0, #3
    2e8c:	add	x0, x0, #0xf
    2e90:	and	x0, x0, #0xffffffff0
    2e94:	sub	sp, sp, x0
    2e98:	mov	x0, sp
    2e9c:	str	x0, [x29, #216]
    2ea0:	cbnz	w5, 2d38 <libintl_gettext@@Base+0x718>
    2ea4:	ldr	w1, [x20, #40]
    2ea8:	lsl	w0, w1, #8
    2eac:	and	w0, w0, #0xff0000
    2eb0:	lsr	w2, w1, #8
    2eb4:	and	w2, w2, #0xff00
    2eb8:	orr	w0, w0, w2
    2ebc:	lsr	w2, w1, #24
    2ec0:	orr	w1, w2, w1, lsl #24
    2ec4:	orr	w0, w0, w1
    2ec8:	add	x0, x20, x0
    2ecc:	str	x0, [x29, #176]
    2ed0:	ldr	w1, [x20, #44]
    2ed4:	lsl	w0, w1, #8
    2ed8:	and	w0, w0, #0xff0000
    2edc:	lsr	w2, w1, #8
    2ee0:	and	w2, w2, #0xff00
    2ee4:	orr	w0, w0, w2
    2ee8:	lsr	w2, w1, #24
    2eec:	orr	w1, w2, w1, lsl #24
    2ef0:	orr	w0, w0, w1
    2ef4:	add	x0, x20, x0
    2ef8:	str	x0, [x29, #192]
    2efc:	ldr	x0, [x29, #240]
    2f00:	ubfiz	x0, x0, #2, #32
    2f04:	str	x0, [x29, #136]
    2f08:	str	x0, [x29, #184]
    2f0c:	mov	x1, #0x0                   	// #0
    2f10:	str	wzr, [x29, #232]
    2f14:	add	x0, x29, #0x108
    2f18:	str	x0, [x29, #200]
    2f1c:	str	x28, [x29, #168]
    2f20:	str	x25, [x29, #160]
    2f24:	ldr	w28, [x29, #208]
    2f28:	str	w26, [x29, #152]
    2f2c:	mov	x26, x1
    2f30:	str	x19, [x29, #144]
    2f34:	b	38ac <libintl_gettext@@Base+0x128c>
    2f38:	add	x0, x2, #0x4
    2f3c:	ldr	w0, [x0, x1]
    2f40:	add	x0, x20, x0
    2f44:	ldr	w3, [x2, x1]
    2f48:	cbz	w3, 3f28 <libintl_gettext@@Base+0x1908>
    2f4c:	sub	w3, w3, #0x1
    2f50:	ldrb	w3, [x0, w3, uxtw]
    2f54:	cbnz	w3, 3f28 <libintl_gettext@@Base+0x1908>
    2f58:	ldrb	w3, [x0]
    2f5c:	cmp	w3, #0x50
    2f60:	b.eq	2fe4 <libintl_gettext@@Base+0x9c4>  // b.none
    2f64:	cmp	w3, #0x49
    2f68:	b.ne	3778 <libintl_gettext@@Base+0x1158>  // b.any
    2f6c:	ldrb	w0, [x0, #1]
    2f70:	cmp	w0, #0x0
    2f74:	csel	x3, x6, xzr, eq  // eq = none
    2f78:	str	x3, [x14, x1]
    2f7c:	add	x1, x1, #0x8
    2f80:	cmp	x1, x4
    2f84:	b.eq	3780 <libintl_gettext@@Base+0x1160>  // b.none
    2f88:	cmp	w24, w5
    2f8c:	b.eq	2f38 <libintl_gettext@@Base+0x918>  // b.none
    2f90:	add	x0, x2, #0x4
    2f94:	ldr	w3, [x0, x1]
    2f98:	lsl	w0, w3, #8
    2f9c:	and	w0, w0, #0xff0000
    2fa0:	lsr	w15, w3, #8
    2fa4:	and	w15, w15, #0xff00
    2fa8:	orr	w0, w0, w15
    2fac:	lsr	w15, w3, #24
    2fb0:	orr	w3, w15, w3, lsl #24
    2fb4:	orr	w0, w0, w3
    2fb8:	add	x0, x20, x0
    2fbc:	ldr	w15, [x2, x1]
    2fc0:	lsl	w3, w15, #8
    2fc4:	and	w3, w3, #0xff0000
    2fc8:	lsr	w16, w15, #8
    2fcc:	and	w16, w16, #0xff00
    2fd0:	orr	w3, w3, w16
    2fd4:	lsr	w16, w15, #24
    2fd8:	orr	w15, w16, w15, lsl #24
    2fdc:	orr	w3, w3, w15
    2fe0:	b	2f48 <libintl_gettext@@Base+0x928>
    2fe4:	ldrb	w15, [x0, #1]
    2fe8:	mov	x3, #0x0                   	// #0
    2fec:	cmp	w15, #0x52
    2ff0:	b.ne	2f78 <libintl_gettext@@Base+0x958>  // b.any
    2ff4:	ldrb	w15, [x0, #2]
    2ff8:	cmp	w15, #0x49
    2ffc:	b.ne	2f78 <libintl_gettext@@Base+0x958>  // b.any
    3000:	ldrb	w15, [x0, #3]
    3004:	cmp	w15, #0x64
    3008:	cset	w16, eq  // eq = none
    300c:	cmp	w15, #0x69
    3010:	csinc	w3, w16, wzr, ne  // ne = any
    3014:	str	w3, [x29, #192]
    3018:	cmp	w15, #0x6f
    301c:	csinc	w17, w3, wzr, ne  // ne = any
    3020:	cmp	w15, #0x75
    3024:	csinc	w3, w17, wzr, ne  // ne = any
    3028:	str	w3, [x29, #200]
    302c:	cmp	w15, #0x78
    3030:	csinc	w18, w3, wzr, ne  // ne = any
    3034:	cmp	w15, #0x58
    3038:	ccmp	w18, #0x0, #0x0, ne  // ne = any
    303c:	b.eq	3550 <libintl_gettext@@Base+0xf30>  // b.none
    3040:	ldrb	w3, [x0, #4]
    3044:	cmp	w3, #0x38
    3048:	b.eq	30a4 <libintl_gettext@@Base+0xa84>  // b.none
    304c:	cmp	w3, #0x31
    3050:	b.eq	30e8 <libintl_gettext@@Base+0xac8>  // b.none
    3054:	cmp	w3, #0x33
    3058:	b.eq	3134 <libintl_gettext@@Base+0xb14>  // b.none
    305c:	cmp	w3, #0x36
    3060:	b.eq	3180 <libintl_gettext@@Base+0xb60>  // b.none
    3064:	cmp	w3, #0x4c
    3068:	b.eq	31c4 <libintl_gettext@@Base+0xba4>  // b.none
    306c:	cmp	w3, #0x46
    3070:	b.eq	3354 <libintl_gettext@@Base+0xd34>  // b.none
    3074:	cmp	w3, #0x4d
    3078:	b.ne	34f0 <libintl_gettext@@Base+0xed0>  // b.any
    307c:	ldrb	w3, [x0, #5]
    3080:	mov	w16, w3
    3084:	mov	x3, #0x0                   	// #0
    3088:	cmp	w16, #0x41
    308c:	b.ne	2f78 <libintl_gettext@@Base+0x958>  // b.any
    3090:	ldrb	w3, [x0, #6]
    3094:	cmp	w3, #0x58
    3098:	b.eq	34c0 <libintl_gettext@@Base+0xea0>  // b.none
    309c:	mov	x3, #0x0                   	// #0
    30a0:	b	2f78 <libintl_gettext@@Base+0x958>
    30a4:	ldrb	w0, [x0, #5]
    30a8:	mov	x3, #0x0                   	// #0
    30ac:	cbnz	w0, 2f78 <libintl_gettext@@Base+0x958>
    30b0:	mov	x3, x22
    30b4:	cmp	w15, #0x64
    30b8:	b.eq	2f78 <libintl_gettext@@Base+0x958>  // b.none
    30bc:	mov	x3, x23
    30c0:	ldr	w0, [x29, #192]
    30c4:	cbnz	w0, 2f78 <libintl_gettext@@Base+0x958>
    30c8:	cbnz	w17, 3558 <libintl_gettext@@Base+0xf38>
    30cc:	ldr	w0, [x29, #200]
    30d0:	cbnz	w0, 3560 <libintl_gettext@@Base+0xf40>
    30d4:	adrp	x3, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    30d8:	add	x3, x3, #0x778
    30dc:	cmp	w18, #0x0
    30e0:	csel	x3, x3, x7, ne  // ne = any
    30e4:	b	2f78 <libintl_gettext@@Base+0x958>
    30e8:	ldrb	w3, [x0, #5]
    30ec:	mov	w16, w3
    30f0:	mov	x3, #0x0                   	// #0
    30f4:	cmp	w16, #0x36
    30f8:	b.ne	2f78 <libintl_gettext@@Base+0x958>  // b.any
    30fc:	ldrb	w0, [x0, #6]
    3100:	cbnz	w0, 3568 <libintl_gettext@@Base+0xf48>
    3104:	cmp	w15, #0x64
    3108:	b.eq	3570 <libintl_gettext@@Base+0xf50>  // b.none
    310c:	ldr	w0, [x29, #192]
    3110:	cbnz	w0, 3578 <libintl_gettext@@Base+0xf58>
    3114:	cbnz	w17, 3580 <libintl_gettext@@Base+0xf60>
    3118:	ldr	w0, [x29, #200]
    311c:	cbnz	w0, 3588 <libintl_gettext@@Base+0xf68>
    3120:	adrp	x3, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    3124:	add	x3, x3, #0x778
    3128:	cmp	w18, #0x0
    312c:	csel	x3, x3, x7, ne  // ne = any
    3130:	b	2f78 <libintl_gettext@@Base+0x958>
    3134:	ldrb	w3, [x0, #5]
    3138:	mov	w16, w3
    313c:	mov	x3, #0x0                   	// #0
    3140:	cmp	w16, #0x32
    3144:	b.ne	2f78 <libintl_gettext@@Base+0x958>  // b.any
    3148:	ldrb	w0, [x0, #6]
    314c:	cbnz	w0, 3590 <libintl_gettext@@Base+0xf70>
    3150:	cmp	w15, #0x64
    3154:	b.eq	3598 <libintl_gettext@@Base+0xf78>  // b.none
    3158:	ldr	w0, [x29, #192]
    315c:	cbnz	w0, 35a0 <libintl_gettext@@Base+0xf80>
    3160:	cbnz	w17, 35a8 <libintl_gettext@@Base+0xf88>
    3164:	ldr	w0, [x29, #200]
    3168:	cbnz	w0, 35b0 <libintl_gettext@@Base+0xf90>
    316c:	adrp	x3, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    3170:	add	x3, x3, #0x778
    3174:	cmp	w18, #0x0
    3178:	csel	x3, x3, x7, ne  // ne = any
    317c:	b	2f78 <libintl_gettext@@Base+0x958>
    3180:	ldrb	w3, [x0, #5]
    3184:	mov	w16, w3
    3188:	mov	x3, #0x0                   	// #0
    318c:	cmp	w16, #0x34
    3190:	b.ne	2f78 <libintl_gettext@@Base+0x958>  // b.any
    3194:	ldrb	w0, [x0, #6]
    3198:	cbnz	w0, 35b8 <libintl_gettext@@Base+0xf98>
    319c:	cmp	w15, #0x64
    31a0:	b.eq	35c0 <libintl_gettext@@Base+0xfa0>  // b.none
    31a4:	ldr	w0, [x29, #192]
    31a8:	cbnz	w0, 35c8 <libintl_gettext@@Base+0xfa8>
    31ac:	cbnz	w17, 35d0 <libintl_gettext@@Base+0xfb0>
    31b0:	ldr	w0, [x29, #200]
    31b4:	cbnz	w0, 35d8 <libintl_gettext@@Base+0xfb8>
    31b8:	cmp	w18, #0x0
    31bc:	csel	x3, x8, x9, ne  // ne = any
    31c0:	b	2f78 <libintl_gettext@@Base+0x958>
    31c4:	ldrb	w3, [x0, #5]
    31c8:	mov	w16, w3
    31cc:	mov	x3, #0x0                   	// #0
    31d0:	cmp	w16, #0x45
    31d4:	b.ne	2f78 <libintl_gettext@@Base+0x958>  // b.any
    31d8:	ldrb	w3, [x0, #6]
    31dc:	cmp	w3, #0x41
    31e0:	b.eq	31ec <libintl_gettext@@Base+0xbcc>  // b.none
    31e4:	mov	x3, #0x0                   	// #0
    31e8:	b	2f78 <libintl_gettext@@Base+0x958>
    31ec:	ldrb	w3, [x0, #7]
    31f0:	cmp	w3, #0x53
    31f4:	b.eq	3200 <libintl_gettext@@Base+0xbe0>  // b.none
    31f8:	mov	x3, #0x0                   	// #0
    31fc:	b	2f78 <libintl_gettext@@Base+0x958>
    3200:	ldrb	w3, [x0, #8]
    3204:	cmp	w3, #0x54
    3208:	b.eq	3214 <libintl_gettext@@Base+0xbf4>  // b.none
    320c:	mov	x3, #0x0                   	// #0
    3210:	b	2f78 <libintl_gettext@@Base+0x958>
    3214:	ldrb	w3, [x0, #9]
    3218:	cmp	w3, #0x38
    321c:	b.eq	3240 <libintl_gettext@@Base+0xc20>  // b.none
    3220:	cmp	w3, #0x31
    3224:	b.eq	3278 <libintl_gettext@@Base+0xc58>  // b.none
    3228:	cmp	w3, #0x33
    322c:	b.eq	32c4 <libintl_gettext@@Base+0xca4>  // b.none
    3230:	cmp	w3, #0x36
    3234:	b.eq	3310 <libintl_gettext@@Base+0xcf0>  // b.none
    3238:	mov	x3, #0x0                   	// #0
    323c:	b	2f78 <libintl_gettext@@Base+0x958>
    3240:	ldrb	w0, [x0, #10]
    3244:	cbnz	w0, 35e0 <libintl_gettext@@Base+0xfc0>
    3248:	cmp	w15, #0x64
    324c:	b.eq	35e8 <libintl_gettext@@Base+0xfc8>  // b.none
    3250:	ldr	w0, [x29, #192]
    3254:	cbnz	w0, 35f0 <libintl_gettext@@Base+0xfd0>
    3258:	cbnz	w17, 35f8 <libintl_gettext@@Base+0xfd8>
    325c:	ldr	w0, [x29, #200]
    3260:	cbnz	w0, 3600 <libintl_gettext@@Base+0xfe0>
    3264:	adrp	x3, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    3268:	add	x3, x3, #0x778
    326c:	cmp	w18, #0x0
    3270:	csel	x3, x3, x7, ne  // ne = any
    3274:	b	2f78 <libintl_gettext@@Base+0x958>
    3278:	ldrb	w3, [x0, #10]
    327c:	cmp	w3, #0x36
    3280:	b.eq	328c <libintl_gettext@@Base+0xc6c>  // b.none
    3284:	mov	x3, #0x0                   	// #0
    3288:	b	2f78 <libintl_gettext@@Base+0x958>
    328c:	ldrb	w0, [x0, #11]
    3290:	cbnz	w0, 3608 <libintl_gettext@@Base+0xfe8>
    3294:	cmp	w15, #0x64
    3298:	b.eq	3610 <libintl_gettext@@Base+0xff0>  // b.none
    329c:	ldr	w0, [x29, #192]
    32a0:	cbnz	w0, 3618 <libintl_gettext@@Base+0xff8>
    32a4:	cbnz	w17, 3620 <libintl_gettext@@Base+0x1000>
    32a8:	ldr	w0, [x29, #200]
    32ac:	cbnz	w0, 3628 <libintl_gettext@@Base+0x1008>
    32b0:	adrp	x3, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    32b4:	add	x3, x3, #0x778
    32b8:	cmp	w18, #0x0
    32bc:	csel	x3, x3, x7, ne  // ne = any
    32c0:	b	2f78 <libintl_gettext@@Base+0x958>
    32c4:	ldrb	w3, [x0, #10]
    32c8:	cmp	w3, #0x32
    32cc:	b.eq	32d8 <libintl_gettext@@Base+0xcb8>  // b.none
    32d0:	mov	x3, #0x0                   	// #0
    32d4:	b	2f78 <libintl_gettext@@Base+0x958>
    32d8:	ldrb	w0, [x0, #11]
    32dc:	cbnz	w0, 3630 <libintl_gettext@@Base+0x1010>
    32e0:	cmp	w15, #0x64
    32e4:	b.eq	3638 <libintl_gettext@@Base+0x1018>  // b.none
    32e8:	ldr	w0, [x29, #192]
    32ec:	cbnz	w0, 3640 <libintl_gettext@@Base+0x1020>
    32f0:	cbnz	w17, 3648 <libintl_gettext@@Base+0x1028>
    32f4:	ldr	w0, [x29, #200]
    32f8:	cbnz	w0, 3650 <libintl_gettext@@Base+0x1030>
    32fc:	adrp	x3, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    3300:	add	x3, x3, #0x778
    3304:	cmp	w18, #0x0
    3308:	csel	x3, x3, x7, ne  // ne = any
    330c:	b	2f78 <libintl_gettext@@Base+0x958>
    3310:	ldrb	w3, [x0, #10]
    3314:	cmp	w3, #0x34
    3318:	b.eq	3324 <libintl_gettext@@Base+0xd04>  // b.none
    331c:	mov	x3, #0x0                   	// #0
    3320:	b	2f78 <libintl_gettext@@Base+0x958>
    3324:	ldrb	w0, [x0, #11]
    3328:	cbnz	w0, 3658 <libintl_gettext@@Base+0x1038>
    332c:	cmp	w15, #0x64
    3330:	b.eq	3660 <libintl_gettext@@Base+0x1040>  // b.none
    3334:	ldr	w0, [x29, #192]
    3338:	cbnz	w0, 3668 <libintl_gettext@@Base+0x1048>
    333c:	cbnz	w17, 3670 <libintl_gettext@@Base+0x1050>
    3340:	ldr	w0, [x29, #200]
    3344:	cbnz	w0, 3678 <libintl_gettext@@Base+0x1058>
    3348:	cmp	w18, #0x0
    334c:	csel	x3, x8, x9, ne  // ne = any
    3350:	b	2f78 <libintl_gettext@@Base+0x958>
    3354:	ldrb	w3, [x0, #5]
    3358:	mov	w16, w3
    335c:	mov	x3, #0x0                   	// #0
    3360:	cmp	w16, #0x41
    3364:	b.ne	2f78 <libintl_gettext@@Base+0x958>  // b.any
    3368:	ldrb	w3, [x0, #6]
    336c:	cmp	w3, #0x53
    3370:	b.eq	337c <libintl_gettext@@Base+0xd5c>  // b.none
    3374:	mov	x3, #0x0                   	// #0
    3378:	b	2f78 <libintl_gettext@@Base+0x958>
    337c:	ldrb	w3, [x0, #7]
    3380:	cmp	w3, #0x54
    3384:	b.eq	3390 <libintl_gettext@@Base+0xd70>  // b.none
    3388:	mov	x3, #0x0                   	// #0
    338c:	b	2f78 <libintl_gettext@@Base+0x958>
    3390:	ldrb	w3, [x0, #8]
    3394:	cmp	w3, #0x38
    3398:	b.eq	33bc <libintl_gettext@@Base+0xd9c>  // b.none
    339c:	cmp	w3, #0x31
    33a0:	b.eq	33f4 <libintl_gettext@@Base+0xdd4>  // b.none
    33a4:	cmp	w3, #0x33
    33a8:	b.eq	3438 <libintl_gettext@@Base+0xe18>  // b.none
    33ac:	cmp	w3, #0x36
    33b0:	b.eq	347c <libintl_gettext@@Base+0xe5c>  // b.none
    33b4:	mov	x3, #0x0                   	// #0
    33b8:	b	2f78 <libintl_gettext@@Base+0x958>
    33bc:	ldrb	w0, [x0, #9]
    33c0:	cbnz	w0, 3680 <libintl_gettext@@Base+0x1060>
    33c4:	cmp	w15, #0x64
    33c8:	b.eq	3688 <libintl_gettext@@Base+0x1068>  // b.none
    33cc:	ldr	w0, [x29, #192]
    33d0:	cbnz	w0, 3690 <libintl_gettext@@Base+0x1070>
    33d4:	cbnz	w17, 3698 <libintl_gettext@@Base+0x1078>
    33d8:	ldr	w0, [x29, #200]
    33dc:	cbnz	w0, 36a0 <libintl_gettext@@Base+0x1080>
    33e0:	adrp	x3, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    33e4:	add	x3, x3, #0x778
    33e8:	cmp	w18, #0x0
    33ec:	csel	x3, x3, x7, ne  // ne = any
    33f0:	b	2f78 <libintl_gettext@@Base+0x958>
    33f4:	ldrb	w3, [x0, #9]
    33f8:	cmp	w3, #0x36
    33fc:	b.eq	3408 <libintl_gettext@@Base+0xde8>  // b.none
    3400:	mov	x3, #0x0                   	// #0
    3404:	b	2f78 <libintl_gettext@@Base+0x958>
    3408:	ldrb	w0, [x0, #10]
    340c:	cbnz	w0, 36a8 <libintl_gettext@@Base+0x1088>
    3410:	cmp	w15, #0x64
    3414:	b.eq	36b0 <libintl_gettext@@Base+0x1090>  // b.none
    3418:	ldr	w0, [x29, #192]
    341c:	cbnz	w0, 36b8 <libintl_gettext@@Base+0x1098>
    3420:	cbnz	w17, 36c0 <libintl_gettext@@Base+0x10a0>
    3424:	ldr	w0, [x29, #200]
    3428:	cbnz	w0, 36c8 <libintl_gettext@@Base+0x10a8>
    342c:	cmp	w18, #0x0
    3430:	csel	x3, x8, x9, ne  // ne = any
    3434:	b	2f78 <libintl_gettext@@Base+0x958>
    3438:	ldrb	w3, [x0, #9]
    343c:	cmp	w3, #0x32
    3440:	b.eq	344c <libintl_gettext@@Base+0xe2c>  // b.none
    3444:	mov	x3, #0x0                   	// #0
    3448:	b	2f78 <libintl_gettext@@Base+0x958>
    344c:	ldrb	w0, [x0, #10]
    3450:	cbnz	w0, 36d0 <libintl_gettext@@Base+0x10b0>
    3454:	cmp	w15, #0x64
    3458:	b.eq	36d8 <libintl_gettext@@Base+0x10b8>  // b.none
    345c:	ldr	w0, [x29, #192]
    3460:	cbnz	w0, 36e0 <libintl_gettext@@Base+0x10c0>
    3464:	cbnz	w17, 36e8 <libintl_gettext@@Base+0x10c8>
    3468:	ldr	w0, [x29, #200]
    346c:	cbnz	w0, 36f0 <libintl_gettext@@Base+0x10d0>
    3470:	cmp	w18, #0x0
    3474:	csel	x3, x8, x9, ne  // ne = any
    3478:	b	2f78 <libintl_gettext@@Base+0x958>
    347c:	ldrb	w3, [x0, #9]
    3480:	cmp	w3, #0x34
    3484:	b.eq	3490 <libintl_gettext@@Base+0xe70>  // b.none
    3488:	mov	x3, #0x0                   	// #0
    348c:	b	2f78 <libintl_gettext@@Base+0x958>
    3490:	ldrb	w0, [x0, #10]
    3494:	cbnz	w0, 36f8 <libintl_gettext@@Base+0x10d8>
    3498:	cmp	w15, #0x64
    349c:	b.eq	3700 <libintl_gettext@@Base+0x10e0>  // b.none
    34a0:	ldr	w0, [x29, #192]
    34a4:	cbnz	w0, 3708 <libintl_gettext@@Base+0x10e8>
    34a8:	cbnz	w17, 3710 <libintl_gettext@@Base+0x10f0>
    34ac:	ldr	w0, [x29, #200]
    34b0:	cbnz	w0, 3718 <libintl_gettext@@Base+0x10f8>
    34b4:	cmp	w18, #0x0
    34b8:	csel	x3, x8, x9, ne  // ne = any
    34bc:	b	2f78 <libintl_gettext@@Base+0x958>
    34c0:	ldrb	w0, [x0, #7]
    34c4:	cbnz	w0, 3720 <libintl_gettext@@Base+0x1100>
    34c8:	cmp	w15, #0x64
    34cc:	b.eq	3728 <libintl_gettext@@Base+0x1108>  // b.none
    34d0:	ldr	w0, [x29, #192]
    34d4:	cbnz	w0, 3730 <libintl_gettext@@Base+0x1110>
    34d8:	cbnz	w17, 3738 <libintl_gettext@@Base+0x1118>
    34dc:	ldr	w0, [x29, #200]
    34e0:	cbnz	w0, 3740 <libintl_gettext@@Base+0x1120>
    34e4:	cmp	w18, #0x0
    34e8:	csel	x3, x8, x9, ne  // ne = any
    34ec:	b	2f78 <libintl_gettext@@Base+0x958>
    34f0:	cmp	w3, #0x50
    34f4:	b.ne	3748 <libintl_gettext@@Base+0x1128>  // b.any
    34f8:	ldrb	w3, [x0, #5]
    34fc:	mov	w16, w3
    3500:	mov	x3, #0x0                   	// #0
    3504:	cmp	w16, #0x54
    3508:	b.ne	2f78 <libintl_gettext@@Base+0x958>  // b.any
    350c:	ldrb	w3, [x0, #6]
    3510:	cmp	w3, #0x52
    3514:	b.eq	3520 <libintl_gettext@@Base+0xf00>  // b.none
    3518:	mov	x3, #0x0                   	// #0
    351c:	b	2f78 <libintl_gettext@@Base+0x958>
    3520:	ldrb	w0, [x0, #7]
    3524:	cbnz	w0, 3750 <libintl_gettext@@Base+0x1130>
    3528:	cmp	w15, #0x64
    352c:	b.eq	3758 <libintl_gettext@@Base+0x1138>  // b.none
    3530:	ldr	w0, [x29, #192]
    3534:	cbnz	w0, 3760 <libintl_gettext@@Base+0x1140>
    3538:	cbnz	w17, 3768 <libintl_gettext@@Base+0x1148>
    353c:	ldr	w0, [x29, #200]
    3540:	cbnz	w0, 3770 <libintl_gettext@@Base+0x1150>
    3544:	cmp	w18, #0x0
    3548:	csel	x3, x8, x9, ne  // ne = any
    354c:	b	2f78 <libintl_gettext@@Base+0x958>
    3550:	mov	x3, #0x0                   	// #0
    3554:	b	2f78 <libintl_gettext@@Base+0x958>
    3558:	mov	x3, x21
    355c:	b	2f78 <libintl_gettext@@Base+0x958>
    3560:	mov	x3, x30
    3564:	b	2f78 <libintl_gettext@@Base+0x958>
    3568:	mov	x3, #0x0                   	// #0
    356c:	b	2f78 <libintl_gettext@@Base+0x958>
    3570:	mov	x3, x22
    3574:	b	2f78 <libintl_gettext@@Base+0x958>
    3578:	mov	x3, x23
    357c:	b	2f78 <libintl_gettext@@Base+0x958>
    3580:	mov	x3, x21
    3584:	b	2f78 <libintl_gettext@@Base+0x958>
    3588:	mov	x3, x30
    358c:	b	2f78 <libintl_gettext@@Base+0x958>
    3590:	mov	x3, #0x0                   	// #0
    3594:	b	2f78 <libintl_gettext@@Base+0x958>
    3598:	mov	x3, x22
    359c:	b	2f78 <libintl_gettext@@Base+0x958>
    35a0:	mov	x3, x23
    35a4:	b	2f78 <libintl_gettext@@Base+0x958>
    35a8:	mov	x3, x21
    35ac:	b	2f78 <libintl_gettext@@Base+0x958>
    35b0:	mov	x3, x30
    35b4:	b	2f78 <libintl_gettext@@Base+0x958>
    35b8:	mov	x3, #0x0                   	// #0
    35bc:	b	2f78 <libintl_gettext@@Base+0x958>
    35c0:	mov	x3, x13
    35c4:	b	2f78 <libintl_gettext@@Base+0x958>
    35c8:	mov	x3, x12
    35cc:	b	2f78 <libintl_gettext@@Base+0x958>
    35d0:	mov	x3, x11
    35d4:	b	2f78 <libintl_gettext@@Base+0x958>
    35d8:	mov	x3, x10
    35dc:	b	2f78 <libintl_gettext@@Base+0x958>
    35e0:	mov	x3, #0x0                   	// #0
    35e4:	b	2f78 <libintl_gettext@@Base+0x958>
    35e8:	mov	x3, x22
    35ec:	b	2f78 <libintl_gettext@@Base+0x958>
    35f0:	mov	x3, x23
    35f4:	b	2f78 <libintl_gettext@@Base+0x958>
    35f8:	mov	x3, x21
    35fc:	b	2f78 <libintl_gettext@@Base+0x958>
    3600:	mov	x3, x30
    3604:	b	2f78 <libintl_gettext@@Base+0x958>
    3608:	mov	x3, #0x0                   	// #0
    360c:	b	2f78 <libintl_gettext@@Base+0x958>
    3610:	mov	x3, x22
    3614:	b	2f78 <libintl_gettext@@Base+0x958>
    3618:	mov	x3, x23
    361c:	b	2f78 <libintl_gettext@@Base+0x958>
    3620:	mov	x3, x21
    3624:	b	2f78 <libintl_gettext@@Base+0x958>
    3628:	mov	x3, x30
    362c:	b	2f78 <libintl_gettext@@Base+0x958>
    3630:	mov	x3, #0x0                   	// #0
    3634:	b	2f78 <libintl_gettext@@Base+0x958>
    3638:	mov	x3, x22
    363c:	b	2f78 <libintl_gettext@@Base+0x958>
    3640:	mov	x3, x23
    3644:	b	2f78 <libintl_gettext@@Base+0x958>
    3648:	mov	x3, x21
    364c:	b	2f78 <libintl_gettext@@Base+0x958>
    3650:	mov	x3, x30
    3654:	b	2f78 <libintl_gettext@@Base+0x958>
    3658:	mov	x3, #0x0                   	// #0
    365c:	b	2f78 <libintl_gettext@@Base+0x958>
    3660:	mov	x3, x13
    3664:	b	2f78 <libintl_gettext@@Base+0x958>
    3668:	mov	x3, x12
    366c:	b	2f78 <libintl_gettext@@Base+0x958>
    3670:	mov	x3, x11
    3674:	b	2f78 <libintl_gettext@@Base+0x958>
    3678:	mov	x3, x10
    367c:	b	2f78 <libintl_gettext@@Base+0x958>
    3680:	mov	x3, #0x0                   	// #0
    3684:	b	2f78 <libintl_gettext@@Base+0x958>
    3688:	mov	x3, x22
    368c:	b	2f78 <libintl_gettext@@Base+0x958>
    3690:	mov	x3, x23
    3694:	b	2f78 <libintl_gettext@@Base+0x958>
    3698:	mov	x3, x21
    369c:	b	2f78 <libintl_gettext@@Base+0x958>
    36a0:	mov	x3, x30
    36a4:	b	2f78 <libintl_gettext@@Base+0x958>
    36a8:	mov	x3, #0x0                   	// #0
    36ac:	b	2f78 <libintl_gettext@@Base+0x958>
    36b0:	mov	x3, x13
    36b4:	b	2f78 <libintl_gettext@@Base+0x958>
    36b8:	mov	x3, x12
    36bc:	b	2f78 <libintl_gettext@@Base+0x958>
    36c0:	mov	x3, x11
    36c4:	b	2f78 <libintl_gettext@@Base+0x958>
    36c8:	mov	x3, x10
    36cc:	b	2f78 <libintl_gettext@@Base+0x958>
    36d0:	mov	x3, #0x0                   	// #0
    36d4:	b	2f78 <libintl_gettext@@Base+0x958>
    36d8:	mov	x3, x13
    36dc:	b	2f78 <libintl_gettext@@Base+0x958>
    36e0:	mov	x3, x12
    36e4:	b	2f78 <libintl_gettext@@Base+0x958>
    36e8:	mov	x3, x11
    36ec:	b	2f78 <libintl_gettext@@Base+0x958>
    36f0:	mov	x3, x10
    36f4:	b	2f78 <libintl_gettext@@Base+0x958>
    36f8:	mov	x3, #0x0                   	// #0
    36fc:	b	2f78 <libintl_gettext@@Base+0x958>
    3700:	mov	x3, x13
    3704:	b	2f78 <libintl_gettext@@Base+0x958>
    3708:	mov	x3, x12
    370c:	b	2f78 <libintl_gettext@@Base+0x958>
    3710:	mov	x3, x11
    3714:	b	2f78 <libintl_gettext@@Base+0x958>
    3718:	mov	x3, x10
    371c:	b	2f78 <libintl_gettext@@Base+0x958>
    3720:	mov	x3, #0x0                   	// #0
    3724:	b	2f78 <libintl_gettext@@Base+0x958>
    3728:	mov	x3, x13
    372c:	b	2f78 <libintl_gettext@@Base+0x958>
    3730:	mov	x3, x12
    3734:	b	2f78 <libintl_gettext@@Base+0x958>
    3738:	mov	x3, x11
    373c:	b	2f78 <libintl_gettext@@Base+0x958>
    3740:	mov	x3, x10
    3744:	b	2f78 <libintl_gettext@@Base+0x958>
    3748:	mov	x3, #0x0                   	// #0
    374c:	b	2f78 <libintl_gettext@@Base+0x958>
    3750:	mov	x3, #0x0                   	// #0
    3754:	b	2f78 <libintl_gettext@@Base+0x958>
    3758:	mov	x3, x13
    375c:	b	2f78 <libintl_gettext@@Base+0x958>
    3760:	mov	x3, x12
    3764:	b	2f78 <libintl_gettext@@Base+0x958>
    3768:	mov	x3, x11
    376c:	b	2f78 <libintl_gettext@@Base+0x958>
    3770:	mov	x3, x10
    3774:	b	2f78 <libintl_gettext@@Base+0x958>
    3778:	mov	x3, #0x0                   	// #0
    377c:	b	2f78 <libintl_gettext@@Base+0x958>
    3780:	mov	w0, #0x12de                	// #4830
    3784:	movk	w0, #0x9504, lsl #16
    3788:	cmp	w24, w0
    378c:	b.ne	2ea4 <libintl_gettext@@Base+0x884>  // b.any
    3790:	ldr	w0, [x20, #40]
    3794:	add	x0, x20, x0
    3798:	str	x0, [x29, #176]
    379c:	ldr	w0, [x20, #44]
    37a0:	b	2ef4 <libintl_gettext@@Base+0x8d4>
    37a4:	ldr	x0, [x29, #176]
    37a8:	ldr	w1, [x0, x26, lsl #2]
    37ac:	b	38cc <libintl_gettext@@Base+0x12ac>
    37b0:	cbz	w25, 37dc <libintl_gettext@@Base+0x11bc>
    37b4:	ldr	x0, [x29, #192]
    37b8:	ldr	w1, [x0, x26, lsl #2]
    37bc:	add	x0, x20, x1
    37c0:	ldr	w21, [x20, x1]
    37c4:	add	x21, x20, x21
    37c8:	add	x22, x0, #0x4
    37cc:	ldr	w0, [x0, #8]
    37d0:	cmn	w0, #0x1
    37d4:	cset	w0, ne  // ne = any
    37d8:	b	394c <libintl_gettext@@Base+0x132c>
    37dc:	ldr	x0, [x29, #176]
    37e0:	ldr	w1, [x0, x26, lsl #2]
    37e4:	b	37bc <libintl_gettext@@Base+0x119c>
    37e8:	str	x25, [x29, #208]
    37ec:	ldr	x25, [x29, #216]
    37f0:	b	382c <libintl_gettext@@Base+0x120c>
    37f4:	ldr	w1, [x22]
    37f8:	add	x19, x1, x19
    37fc:	ldr	w0, [x22, #4]
    3800:	cmn	w0, #0x1
    3804:	b.eq	388c <libintl_gettext@@Base+0x126c>  // b.none
    3808:	add	x21, x21, x1
    380c:	cmp	w0, w28
    3810:	b.cs	3f18 <libintl_gettext@@Base+0x18f8>  // b.hs, b.nlast
    3814:	ldr	x0, [x25, w0, uxtw #3]
    3818:	cmp	x0, #0x0
    381c:	csel	w23, w23, w27, ne  // ne = any
    3820:	bl	1c60 <strlen@plt>
    3824:	add	x19, x0, x19
    3828:	add	x22, x22, #0x8
    382c:	mov	w0, #0x12de                	// #4830
    3830:	movk	w0, #0x9504, lsl #16
    3834:	cmp	w24, w0
    3838:	b.eq	37f4 <libintl_gettext@@Base+0x11d4>  // b.none
    383c:	ldr	w0, [x22]
    3840:	lsl	w1, w0, #8
    3844:	and	w1, w1, #0xff0000
    3848:	lsr	w2, w0, #8
    384c:	and	w2, w2, #0xff00
    3850:	orr	w1, w1, w2
    3854:	lsr	w2, w0, #24
    3858:	orr	w0, w2, w0, lsl #24
    385c:	orr	w1, w1, w0
    3860:	add	x19, x19, x1
    3864:	ldr	w2, [x22, #4]
    3868:	lsl	w0, w2, #8
    386c:	and	w0, w0, #0xff0000
    3870:	lsr	w3, w2, #8
    3874:	and	w3, w3, #0xff00
    3878:	orr	w0, w0, w3
    387c:	lsr	w3, w2, #24
    3880:	orr	w2, w3, w2, lsl #24
    3884:	orr	w0, w0, w2
    3888:	b	3800 <libintl_gettext@@Base+0x11e0>
    388c:	ldr	x25, [x29, #208]
    3890:	b	3958 <libintl_gettext@@Base+0x1338>
    3894:	ldr	w0, [x22]
    3898:	b	398c <libintl_gettext@@Base+0x136c>
    389c:	add	x26, x26, #0x1
    38a0:	ldr	w0, [x29, #236]
    38a4:	cmp	w0, w26
    38a8:	b.ls	39dc <libintl_gettext@@Base+0x13bc>  // b.plast
    38ac:	mov	x25, #0x0                   	// #0
    38b0:	mov	w0, #0x12de                	// #4830
    38b4:	movk	w0, #0x9504, lsl #16
    38b8:	cmp	w24, w0
    38bc:	b.eq	37b0 <libintl_gettext@@Base+0x1190>  // b.none
    38c0:	cbz	w25, 37a4 <libintl_gettext@@Base+0x1184>
    38c4:	ldr	x0, [x29, #192]
    38c8:	ldr	w1, [x0, x26, lsl #2]
    38cc:	lsl	w0, w1, #8
    38d0:	and	w0, w0, #0xff0000
    38d4:	lsr	w2, w1, #8
    38d8:	and	w2, w2, #0xff00
    38dc:	orr	w0, w0, w2
    38e0:	lsr	w2, w1, #24
    38e4:	orr	w1, w2, w1, lsl #24
    38e8:	orr	w2, w0, w1
    38ec:	orr	w0, w0, w1
    38f0:	add	x0, x20, x0
    38f4:	ldr	w1, [x20, w2, uxtw]
    38f8:	lsl	w21, w1, #8
    38fc:	and	w21, w21, #0xff0000
    3900:	lsr	w2, w1, #8
    3904:	and	w2, w2, #0xff00
    3908:	orr	w21, w21, w2
    390c:	lsr	w2, w1, #24
    3910:	orr	w1, w2, w1, lsl #24
    3914:	orr	w21, w21, w1
    3918:	add	x21, x20, x21
    391c:	add	x22, x0, #0x4
    3920:	ldr	w1, [x0, #8]
    3924:	lsl	w0, w1, #8
    3928:	and	w0, w0, #0xff0000
    392c:	lsr	w2, w1, #8
    3930:	and	w2, w2, #0xff00
    3934:	orr	w0, w0, w2
    3938:	lsr	w2, w1, #24
    393c:	orr	w1, w2, w1, lsl #24
    3940:	orr	w0, w0, w1
    3944:	cmn	w0, #0x1
    3948:	cset	w0, ne  // ne = any
    394c:	mov	x19, #0x0                   	// #0
    3950:	mov	w23, #0x1                   	// #1
    3954:	cbnz	w0, 37e8 <libintl_gettext@@Base+0x11c8>
    3958:	mov	w0, #0x12de                	// #4830
    395c:	movk	w0, #0x9504, lsl #16
    3960:	cmp	w24, w0
    3964:	b.eq	3894 <libintl_gettext@@Base+0x1274>  // b.none
    3968:	ldr	w1, [x22]
    396c:	lsl	w0, w1, #8
    3970:	and	w0, w0, #0xff0000
    3974:	lsr	w2, w1, #8
    3978:	and	w2, w2, #0xff00
    397c:	orr	w0, w0, w2
    3980:	lsr	w2, w1, #24
    3984:	orr	w1, w2, w1, lsl #24
    3988:	orr	w0, w0, w1
    398c:	cbz	w0, 3f50 <libintl_gettext@@Base+0x1930>
    3990:	sub	w0, w0, #0x1
    3994:	ldrb	w0, [x21, w0, uxtw]
    3998:	cbnz	w0, 3f64 <libintl_gettext@@Base+0x1944>
    399c:	ldr	x0, [x29, #200]
    39a0:	str	x19, [x0, x25, lsl #3]
    39a4:	cbz	w23, 389c <libintl_gettext@@Base+0x127c>
    39a8:	add	x25, x25, #0x1
    39ac:	cmp	x25, #0x2
    39b0:	b.ne	38b0 <libintl_gettext@@Base+0x1290>  // b.any
    39b4:	ldr	w0, [x29, #232]
    39b8:	add	w0, w0, #0x1
    39bc:	str	w0, [x29, #232]
    39c0:	ldr	x0, [x29, #264]
    39c4:	ldr	x1, [x29, #272]
    39c8:	add	x0, x0, x1
    39cc:	ldr	x1, [x29, #184]
    39d0:	add	x0, x1, x0
    39d4:	str	x0, [x29, #184]
    39d8:	b	389c <libintl_gettext@@Base+0x127c>
    39dc:	ldr	x28, [x29, #168]
    39e0:	ldr	x25, [x29, #160]
    39e4:	ldr	w26, [x29, #152]
    39e8:	ldr	x19, [x29, #144]
    39ec:	ldr	w0, [x29, #232]
    39f0:	cbnz	w0, 3a04 <libintl_gettext@@Base+0x13e4>
    39f4:	str	wzr, [x25, #64]
    39f8:	str	xzr, [x25, #72]
    39fc:	str	xzr, [x25, #80]
    3a00:	b	2b4c <libintl_gettext@@Base+0x52c>
    3a04:	ldr	w21, [x29, #232]
    3a08:	ubfiz	x0, x0, #5, #31
    3a0c:	ldr	x1, [x29, #184]
    3a10:	add	x0, x0, x1
    3a14:	bl	1db0 <malloc@plt>
    3a18:	mov	x1, x0
    3a1c:	str	x0, [x29, #184]
    3a20:	cbz	x0, 3f28 <libintl_gettext@@Base+0x1908>
    3a24:	str	x0, [x25, #32]
    3a28:	ubfiz	x0, x21, #4, #32
    3a2c:	add	x2, x1, x0
    3a30:	str	x2, [x29, #160]
    3a34:	add	x0, x1, x0, lsl #1
    3a38:	str	x0, [x29, #168]
    3a3c:	ldr	x1, [x29, #136]
    3a40:	add	x27, x0, x1
    3a44:	mov	x0, #0x0                   	// #0
    3a48:	str	wzr, [x29, #208]
    3a4c:	mov	w23, #0x12de                	// #4830
    3a50:	movk	w23, #0x9504, lsl #16
    3a54:	ldr	x22, [x29, #216]
    3a58:	str	x28, [x29, #120]
    3a5c:	str	x25, [x29, #112]
    3a60:	mov	x25, x0
    3a64:	str	w26, [x29, #108]
    3a68:	str	x19, [x29, #96]
    3a6c:	b	3ca4 <libintl_gettext@@Base+0x1684>
    3a70:	ldr	x0, [x29, #176]
    3a74:	ldr	w1, [x0, x25, lsl #2]
    3a78:	lsl	w0, w1, #8
    3a7c:	and	w0, w0, #0xff0000
    3a80:	lsr	w2, w1, #8
    3a84:	and	w2, w2, #0xff00
    3a88:	orr	w0, w0, w2
    3a8c:	lsr	w2, w1, #24
    3a90:	orr	w1, w2, w1, lsl #24
    3a94:	orr	w0, w0, w1
    3a98:	add	x0, x20, x0
    3a9c:	add	x2, x0, #0x4
    3aa0:	ldr	w1, [x0, #8]
    3aa4:	lsl	w0, w1, #8
    3aa8:	and	w0, w0, #0xff0000
    3aac:	lsr	w3, w1, #8
    3ab0:	and	w3, w3, #0xff00
    3ab4:	orr	w0, w0, w3
    3ab8:	lsr	w3, w1, #24
    3abc:	orr	w1, w3, w1, lsl #24
    3ac0:	orr	w0, w0, w1
    3ac4:	cmn	w0, #0x1
    3ac8:	cset	w0, ne  // ne = any
    3acc:	cbnz	w0, 3b3c <libintl_gettext@@Base+0x151c>
    3ad0:	add	w4, w4, #0x1
    3ad4:	cmp	w4, #0x2
    3ad8:	b.eq	3b6c <libintl_gettext@@Base+0x154c>  // b.none
    3adc:	cmp	w24, w23
    3ae0:	b.eq	3af4 <libintl_gettext@@Base+0x14d4>  // b.none
    3ae4:	cbz	w4, 3a70 <libintl_gettext@@Base+0x1450>
    3ae8:	ldr	x0, [x29, #192]
    3aec:	ldr	w1, [x0, x25, lsl #2]
    3af0:	b	3a78 <libintl_gettext@@Base+0x1458>
    3af4:	cbz	w4, 3b18 <libintl_gettext@@Base+0x14f8>
    3af8:	ldr	x0, [x29, #192]
    3afc:	ldr	w0, [x0, x25, lsl #2]
    3b00:	add	x0, x20, x0
    3b04:	add	x2, x0, #0x4
    3b08:	ldr	w0, [x0, #8]
    3b0c:	cmn	w0, #0x1
    3b10:	cset	w0, ne  // ne = any
    3b14:	b	3acc <libintl_gettext@@Base+0x14ac>
    3b18:	ldr	x0, [x29, #176]
    3b1c:	ldr	w0, [x0, x25, lsl #2]
    3b20:	b	3b00 <libintl_gettext@@Base+0x14e0>
    3b24:	ldr	w0, [x2, #4]
    3b28:	cmn	w0, #0x1
    3b2c:	b.eq	3ad0 <libintl_gettext@@Base+0x14b0>  // b.none
    3b30:	ldr	x0, [x22, w0, uxtw #3]
    3b34:	cbz	x0, 3c94 <libintl_gettext@@Base+0x1674>
    3b38:	add	x2, x2, #0x8
    3b3c:	cmp	w24, w23
    3b40:	b.eq	3b24 <libintl_gettext@@Base+0x1504>  // b.none
    3b44:	ldr	w1, [x2, #4]
    3b48:	lsl	w0, w1, #8
    3b4c:	and	w0, w0, #0xff0000
    3b50:	lsr	w3, w1, #8
    3b54:	and	w3, w3, #0xff00
    3b58:	orr	w0, w0, w3
    3b5c:	lsr	w3, w1, #24
    3b60:	orr	w1, w3, w1, lsl #24
    3b64:	orr	w0, w0, w1
    3b68:	b	3b28 <libintl_gettext@@Base+0x1508>
    3b6c:	ldr	x0, [x29, #208]
    3b70:	ubfiz	x0, x0, #4, #32
    3b74:	ldr	x1, [x29, #184]
    3b78:	add	x1, x1, x0
    3b7c:	str	x1, [x29, #152]
    3b80:	ldr	x2, [x29, #160]
    3b84:	add	x0, x2, x0
    3b88:	str	x0, [x29, #144]
    3b8c:	str	wzr, [x29, #216]
    3b90:	str	x0, [x29, #136]
    3b94:	str	x1, [x29, #128]
    3b98:	str	x22, [x29, #200]
    3b9c:	cmp	w24, w23
    3ba0:	b.eq	3cb8 <libintl_gettext@@Base+0x1698>  // b.none
    3ba4:	ldr	w0, [x29, #216]
    3ba8:	cbz	w0, 3cac <libintl_gettext@@Base+0x168c>
    3bac:	ldr	x0, [x29, #192]
    3bb0:	ldr	w1, [x0, x25, lsl #2]
    3bb4:	lsl	w0, w1, #8
    3bb8:	and	w0, w0, #0xff0000
    3bbc:	lsr	w2, w1, #8
    3bc0:	and	w2, w2, #0xff00
    3bc4:	orr	w0, w0, w2
    3bc8:	lsr	w2, w1, #24
    3bcc:	orr	w1, w2, w1, lsl #24
    3bd0:	orr	w0, w0, w1
    3bd4:	add	x2, x20, x0
    3bd8:	ldr	w1, [x20, x0]
    3bdc:	lsl	w0, w1, #8
    3be0:	and	w0, w0, #0xff0000
    3be4:	lsr	w3, w1, #8
    3be8:	and	w3, w3, #0xff00
    3bec:	orr	w0, w0, w3
    3bf0:	lsr	w3, w1, #24
    3bf4:	orr	w1, w3, w1, lsl #24
    3bf8:	orr	w0, w0, w1
    3bfc:	add	x22, x20, x0
    3c00:	add	x21, x2, #0x4
    3c04:	ldr	w0, [x29, #216]
    3c08:	cmp	w0, #0x0
    3c0c:	ldr	x0, [x29, #152]
    3c10:	ldr	x1, [x29, #144]
    3c14:	csel	x26, x0, x1, eq  // eq = none
    3c18:	ldr	w1, [x2, #8]
    3c1c:	lsl	w0, w1, #8
    3c20:	and	w0, w0, #0xff0000
    3c24:	lsr	w3, w1, #8
    3c28:	and	w3, w3, #0xff00
    3c2c:	orr	w0, w0, w3
    3c30:	lsr	w3, w1, #24
    3c34:	orr	w1, w3, w1, lsl #24
    3c38:	orr	w0, w0, w1
    3c3c:	cmn	w0, #0x1
    3c40:	b.ne	3d10 <libintl_gettext@@Base+0x16f0>  // b.any
    3c44:	ldr	w1, [x2, #4]
    3c48:	lsl	w0, w1, #8
    3c4c:	and	w0, w0, #0xff0000
    3c50:	lsr	w2, w1, #8
    3c54:	and	w2, w2, #0xff00
    3c58:	orr	w0, w0, w2
    3c5c:	lsr	w2, w1, #24
    3c60:	orr	w1, w2, w1, lsl #24
    3c64:	orr	w0, w0, w1
    3c68:	str	x0, [x26]
    3c6c:	str	x22, [x26, #8]
    3c70:	ldr	w0, [x29, #216]
    3c74:	add	w0, w0, #0x1
    3c78:	str	w0, [x29, #216]
    3c7c:	cmp	w0, #0x2
    3c80:	b.ne	3b9c <libintl_gettext@@Base+0x157c>  // b.any
    3c84:	ldr	x22, [x29, #200]
    3c88:	ldr	w0, [x29, #208]
    3c8c:	add	w0, w0, #0x1
    3c90:	str	w0, [x29, #208]
    3c94:	add	x25, x25, #0x1
    3c98:	ldr	w0, [x29, #236]
    3c9c:	cmp	w0, w25
    3ca0:	b.ls	3ddc <libintl_gettext@@Base+0x17bc>  // b.plast
    3ca4:	mov	w4, #0x0                   	// #0
    3ca8:	b	3adc <libintl_gettext@@Base+0x14bc>
    3cac:	ldr	x0, [x29, #176]
    3cb0:	ldr	w1, [x0, x25, lsl #2]
    3cb4:	b	3bb4 <libintl_gettext@@Base+0x1594>
    3cb8:	ldr	w0, [x29, #216]
    3cbc:	cbz	w0, 3cf0 <libintl_gettext@@Base+0x16d0>
    3cc0:	ldr	x0, [x29, #192]
    3cc4:	ldr	w1, [x0, x25, lsl #2]
    3cc8:	add	x0, x20, x1
    3ccc:	ldr	w1, [x20, x1]
    3cd0:	add	x22, x20, x1
    3cd4:	add	x21, x0, #0x4
    3cd8:	ldr	x26, [x29, #136]
    3cdc:	ldr	w1, [x0, #8]
    3ce0:	cmn	w1, #0x1
    3ce4:	b.ne	3d10 <libintl_gettext@@Base+0x16f0>  // b.any
    3ce8:	ldr	w0, [x0, #4]
    3cec:	b	3c68 <libintl_gettext@@Base+0x1648>
    3cf0:	ldr	x0, [x29, #176]
    3cf4:	ldr	w1, [x0, x25, lsl #2]
    3cf8:	add	x0, x20, x1
    3cfc:	ldr	w1, [x20, x1]
    3d00:	add	x22, x20, x1
    3d04:	add	x21, x0, #0x4
    3d08:	ldr	x26, [x29, #128]
    3d0c:	b	3cdc <libintl_gettext@@Base+0x16bc>
    3d10:	str	x27, [x26, #8]
    3d14:	b	3d58 <libintl_gettext@@Base+0x1738>
    3d18:	ldr	w19, [x21]
    3d1c:	ldr	w28, [x21, #4]
    3d20:	cbnz	w19, 3dac <libintl_gettext@@Base+0x178c>
    3d24:	cmn	w28, #0x1
    3d28:	b.eq	3dcc <libintl_gettext@@Base+0x17ac>  // b.none
    3d2c:	ldr	x0, [x29, #200]
    3d30:	ldr	x28, [x0, w28, uxtw #3]
    3d34:	mov	x0, x28
    3d38:	bl	1c60 <strlen@plt>
    3d3c:	mov	x19, x0
    3d40:	mov	x2, x0
    3d44:	mov	x1, x28
    3d48:	mov	x0, x27
    3d4c:	bl	1c10 <memcpy@plt>
    3d50:	add	x27, x27, x19
    3d54:	add	x21, x21, #0x8
    3d58:	cmp	w24, w23
    3d5c:	b.eq	3d18 <libintl_gettext@@Base+0x16f8>  // b.none
    3d60:	ldr	w0, [x21]
    3d64:	lsl	w19, w0, #8
    3d68:	and	w19, w19, #0xff0000
    3d6c:	lsr	w1, w0, #8
    3d70:	and	w1, w1, #0xff00
    3d74:	orr	w19, w19, w1
    3d78:	lsr	w1, w0, #24
    3d7c:	orr	w0, w1, w0, lsl #24
    3d80:	orr	w19, w19, w0
    3d84:	ldr	w0, [x21, #4]
    3d88:	lsl	w28, w0, #8
    3d8c:	and	w28, w28, #0xff0000
    3d90:	lsr	w1, w0, #8
    3d94:	and	w1, w1, #0xff00
    3d98:	orr	w28, w28, w1
    3d9c:	lsr	w1, w0, #24
    3da0:	orr	w0, w1, w0, lsl #24
    3da4:	orr	w28, w28, w0
    3da8:	b	3d20 <libintl_gettext@@Base+0x1700>
    3dac:	mov	w19, w19
    3db0:	mov	x2, x19
    3db4:	mov	x1, x22
    3db8:	mov	x0, x27
    3dbc:	bl	1c10 <memcpy@plt>
    3dc0:	add	x27, x27, x19
    3dc4:	add	x22, x22, x19
    3dc8:	b	3d24 <libintl_gettext@@Base+0x1704>
    3dcc:	ldr	x0, [x26, #8]
    3dd0:	sub	x0, x27, x0
    3dd4:	str	x0, [x26]
    3dd8:	b	3c70 <libintl_gettext@@Base+0x1650>
    3ddc:	ldr	x28, [x29, #120]
    3de0:	ldr	x25, [x29, #112]
    3de4:	ldr	w26, [x29, #108]
    3de8:	ldr	x19, [x29, #96]
    3dec:	ldr	w0, [x29, #232]
    3df0:	ldr	w1, [x29, #208]
    3df4:	cmp	w0, w1
    3df8:	b.ne	3e1c <libintl_gettext@@Base+0x17fc>  // b.any
    3dfc:	mov	x0, #0x0                   	// #0
    3e00:	ldr	w7, [x29, #240]
    3e04:	cbz	w7, 3e64 <libintl_gettext@@Base+0x1844>
    3e08:	mov	w4, #0x12de                	// #4830
    3e0c:	movk	w4, #0x9504, lsl #16
    3e10:	ldr	x5, [x29, #224]
    3e14:	ldr	x6, [x29, #168]
    3e18:	b	3e34 <libintl_gettext@@Base+0x1814>
    3e1c:	bl	1ec0 <abort@plt>
    3e20:	ldr	w1, [x5, x0, lsl #2]
    3e24:	str	w1, [x6, x0, lsl #2]
    3e28:	add	x0, x0, #0x1
    3e2c:	cmp	w7, w0
    3e30:	b.ls	3e64 <libintl_gettext@@Base+0x1844>  // b.plast
    3e34:	cmp	w24, w4
    3e38:	b.eq	3e20 <libintl_gettext@@Base+0x1800>  // b.none
    3e3c:	ldr	w2, [x5, x0, lsl #2]
    3e40:	lsl	w1, w2, #8
    3e44:	and	w1, w1, #0xff0000
    3e48:	lsr	w3, w2, #8
    3e4c:	and	w3, w3, #0xff00
    3e50:	orr	w1, w1, w3
    3e54:	lsr	w3, w2, #24
    3e58:	orr	w2, w3, w2, lsl #24
    3e5c:	orr	w1, w1, w2
    3e60:	b	3e24 <libintl_gettext@@Base+0x1804>
    3e64:	ldr	x0, [x29, #184]
    3e68:	add	x22, x0, #0x8
    3e6c:	mov	w21, #0x0                   	// #0
    3e70:	ldr	w24, [x29, #232]
    3e74:	ldr	x23, [x29, #168]
    3e78:	ldr	x0, [x22]
    3e7c:	bl	28e0 <libintl_gettext@@Base+0x2c0>
    3e80:	ldr	w3, [x25, #88]
    3e84:	udiv	w1, w0, w3
    3e88:	msub	w1, w1, w3, w0
    3e8c:	sub	w2, w3, #0x2
    3e90:	udiv	w4, w0, w2
    3e94:	msub	w4, w4, w2, w0
    3e98:	add	w4, w4, #0x1
    3e9c:	add	x2, x23, w1, uxtw #2
    3ea0:	ldr	w0, [x23, w1, uxtw #2]
    3ea4:	cbz	w0, 3ed0 <libintl_gettext@@Base+0x18b0>
    3ea8:	sub	w5, w3, w4
    3eac:	sub	w3, w4, w3
    3eb0:	add	w2, w1, w3
    3eb4:	add	w0, w1, w4
    3eb8:	cmp	w5, w1
    3ebc:	csel	w1, w0, w2, hi  // hi = pmore
    3ec0:	csel	w0, w0, w2, hi  // hi = pmore
    3ec4:	add	x2, x23, x0, lsl #2
    3ec8:	ldr	w0, [x23, x0, lsl #2]
    3ecc:	cbnz	w0, 3eb0 <libintl_gettext@@Base+0x1890>
    3ed0:	ldr	w0, [x25, #40]
    3ed4:	add	w0, w0, #0x1
    3ed8:	add	w0, w0, w21
    3edc:	str	w0, [x2]
    3ee0:	add	w21, w21, #0x1
    3ee4:	add	x22, x22, #0x10
    3ee8:	cmp	w24, w21
    3eec:	b.ne	3e78 <libintl_gettext@@Base+0x1858>  // b.any
    3ef0:	ldr	w0, [x29, #232]
    3ef4:	str	w0, [x25, #64]
    3ef8:	ldr	x0, [x29, #184]
    3efc:	str	x0, [x25, #72]
    3f00:	ldr	x0, [x29, #160]
    3f04:	str	x0, [x25, #80]
    3f08:	ldr	x0, [x29, #168]
    3f0c:	str	x0, [x25, #96]
    3f10:	str	wzr, [x25, #104]
    3f14:	b	2b4c <libintl_gettext@@Base+0x52c>
    3f18:	ldr	x28, [x29, #168]
    3f1c:	ldr	x25, [x29, #160]
    3f20:	ldr	w26, [x29, #152]
    3f24:	ldr	x19, [x29, #144]
    3f28:	ldr	x0, [x25, #32]
    3f2c:	bl	1f50 <free@plt>
    3f30:	cbz	w26, 3f78 <libintl_gettext@@Base+0x1958>
    3f34:	mov	x1, x28
    3f38:	mov	x0, x20
    3f3c:	bl	1fc0 <munmap@plt>
    3f40:	mov	x0, x25
    3f44:	bl	1f50 <free@plt>
    3f48:	str	xzr, [x19, #16]
    3f4c:	b	2bcc <libintl_gettext@@Base+0x5ac>
    3f50:	ldr	x28, [x29, #168]
    3f54:	ldr	x25, [x29, #160]
    3f58:	ldr	w26, [x29, #152]
    3f5c:	ldr	x19, [x29, #144]
    3f60:	b	3f28 <libintl_gettext@@Base+0x1908>
    3f64:	ldr	x28, [x29, #168]
    3f68:	ldr	x25, [x29, #160]
    3f6c:	ldr	w26, [x29, #152]
    3f70:	ldr	x19, [x29, #144]
    3f74:	b	3f28 <libintl_gettext@@Base+0x1908>
    3f78:	mov	x0, x20
    3f7c:	bl	1f50 <free@plt>
    3f80:	b	3f40 <libintl_gettext@@Base+0x1920>
    3f84:	bl	1ec0 <abort@plt>
    3f88:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    3f8c:	ldr	x0, [x0, #4064]
    3f90:	cbz	x0, 3f28 <libintl_gettext@@Base+0x1908>
    3f94:	add	x0, x25, #0x80
    3f98:	bl	1dc0 <pthread_rwlock_destroy@plt>
    3f9c:	cbz	w0, 3f28 <libintl_gettext@@Base+0x1908>
    3fa0:	bl	1ec0 <abort@plt>
    3fa4:	bl	1ec0 <abort@plt>
    3fa8:	mov	x0, x28
    3fac:	bl	1db0 <malloc@plt>
    3fb0:	mov	x20, x0
    3fb4:	cbz	x0, 2bc4 <libintl_gettext@@Base+0x5a4>
    3fb8:	mov	x23, x0
    3fbc:	mov	x22, x28
    3fc0:	b	2c14 <libintl_gettext@@Base+0x5f4>
    3fc4:	stp	x29, x30, [sp, #-16]!
    3fc8:	mov	x29, sp
    3fcc:	ldr	x1, [x1]
    3fd0:	ldr	x0, [x0]
    3fd4:	bl	1e60 <strcasecmp@plt>
    3fd8:	ldp	x29, x30, [sp], #16
    3fdc:	ret
    3fe0:	sub	sp, sp, #0x240
    3fe4:	stp	x29, x30, [sp]
    3fe8:	mov	x29, sp
    3fec:	stp	x19, x20, [sp, #16]
    3ff0:	stp	x21, x22, [sp, #32]
    3ff4:	stp	x23, x24, [sp, #48]
    3ff8:	stp	x25, x26, [sp, #64]
    3ffc:	stp	x27, x28, [sp, #80]
    4000:	sxtw	x2, w1
    4004:	add	x1, x2, #0x1d
    4008:	and	x1, x1, #0xfffffffffffffff0
    400c:	sub	sp, sp, x1
    4010:	mov	x19, sp
    4014:	mov	x1, x0
    4018:	mov	x0, x19
    401c:	bl	1f70 <mempcpy@plt>
    4020:	adrp	x1, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    4024:	add	x1, x1, #0x798
    4028:	ldr	x2, [x1]
    402c:	str	x2, [x0]
    4030:	ldur	x1, [x1, #6]
    4034:	stur	x1, [x0, #6]
    4038:	add	x1, x29, #0x238
    403c:	mov	x0, x19
    4040:	bl	7034 <libintl_set_relocation_prefix@@Base+0x1ec>
    4044:	adrp	x1, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    4048:	add	x1, x1, #0x790
    404c:	bl	1da0 <fopen@plt>
    4050:	mov	x23, x0
    4054:	ldr	x0, [x29, #568]
    4058:	bl	1f50 <free@plt>
    405c:	mov	x28, #0x0                   	// #0
    4060:	cbz	x23, 4340 <libintl_gettext@@Base+0x1d20>
    4064:	mov	w1, #0x2                   	// #2
    4068:	mov	x0, x23
    406c:	bl	2050 <__fsetlocking@plt>
    4070:	ldr	w0, [x23]
    4074:	tbnz	w0, #4, 438c <libintl_gettext@@Base+0x1d6c>
    4078:	mov	x28, #0x0                   	// #0
    407c:	add	x21, x29, #0xa8
    4080:	mov	w24, #0x190                 	// #400
    4084:	mov	w25, #0xa                   	// #10
    4088:	adrp	x26, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    408c:	add	x26, x26, #0x368
    4090:	b	40c0 <libintl_gettext@@Base+0x1aa0>
    4094:	add	x19, x19, #0x1
    4098:	ldrb	w0, [x19]
    409c:	and	x1, x0, #0xff
    40a0:	ldrh	w1, [x2, x1, lsl #1]
    40a4:	tbnz	w1, #13, 4094 <libintl_gettext@@Base+0x1a74>
    40a8:	cmp	w0, #0x23
    40ac:	ccmp	w0, #0x0, #0x4, ne  // ne = any
    40b0:	b.ne	40f4 <libintl_gettext@@Base+0x1ad4>  // b.any
    40b4:	cbz	x22, 430c <libintl_gettext@@Base+0x1cec>
    40b8:	ldr	w0, [x23]
    40bc:	tbnz	w0, #4, 4334 <libintl_gettext@@Base+0x1d14>
    40c0:	mov	x2, x23
    40c4:	mov	w1, w24
    40c8:	mov	x0, x21
    40cc:	bl	1ce0 <fgets_unlocked@plt>
    40d0:	cbz	x0, 4334 <libintl_gettext@@Base+0x1d14>
    40d4:	mov	w1, w25
    40d8:	mov	x0, x21
    40dc:	bl	1fa0 <strchr@plt>
    40e0:	mov	x22, x0
    40e4:	bl	1f20 <__ctype_b_loc@plt>
    40e8:	ldr	x2, [x0]
    40ec:	mov	x19, x21
    40f0:	b	4098 <libintl_gettext@@Base+0x1a78>
    40f4:	add	x20, x19, #0x1
    40f8:	ldrb	w0, [x19, #1]
    40fc:	cbz	w0, 4120 <libintl_gettext@@Base+0x1b00>
    4100:	and	x1, x0, #0xff
    4104:	ldrh	w1, [x2, x1, lsl #1]
    4108:	tbnz	w1, #13, 4118 <libintl_gettext@@Base+0x1af8>
    410c:	ldrb	w0, [x20, #1]!
    4110:	cbnz	w0, 4100 <libintl_gettext@@Base+0x1ae0>
    4114:	b	4120 <libintl_gettext@@Base+0x1b00>
    4118:	cbz	w0, 4120 <libintl_gettext@@Base+0x1b00>
    411c:	strb	wzr, [x20], #1
    4120:	ldrb	w0, [x20]
    4124:	and	x1, x0, #0xff
    4128:	ldrh	w1, [x2, x1, lsl #1]
    412c:	tbz	w1, #13, 4140 <libintl_gettext@@Base+0x1b20>
    4130:	ldrb	w0, [x20, #1]!
    4134:	and	x1, x0, #0xff
    4138:	ldrh	w1, [x2, x1, lsl #1]
    413c:	tbnz	w1, #13, 4130 <libintl_gettext@@Base+0x1b10>
    4140:	cbz	w0, 40b4 <libintl_gettext@@Base+0x1a94>
    4144:	add	x1, x20, #0x1
    4148:	ldrb	w0, [x20, #1]
    414c:	cbz	w0, 4164 <libintl_gettext@@Base+0x1b44>
    4150:	and	x3, x0, #0xff
    4154:	ldrh	w3, [x2, x3, lsl #1]
    4158:	tbnz	w3, #13, 427c <libintl_gettext@@Base+0x1c5c>
    415c:	ldrb	w0, [x1, #1]!
    4160:	cbnz	w0, 4150 <libintl_gettext@@Base+0x1b30>
    4164:	ldr	x27, [x26]
    4168:	ldr	x0, [x26, #8]
    416c:	cmp	x27, x0
    4170:	b.cs	429c <libintl_gettext@@Base+0x1c7c>  // b.hs, b.nlast
    4174:	mov	x0, x19
    4178:	bl	1c60 <strlen@plt>
    417c:	add	x1, x0, #0x1
    4180:	str	x1, [x29, #152]
    4184:	mov	x0, x20
    4188:	bl	1c60 <strlen@plt>
    418c:	add	x0, x0, #0x1
    4190:	str	x0, [x29, #112]
    4194:	ldr	x2, [x26, #24]
    4198:	str	x2, [x29, #144]
    419c:	ldr	x1, [x29, #152]
    41a0:	add	x3, x2, x1
    41a4:	str	x3, [x29, #136]
    41a8:	mov	x2, x0
    41ac:	add	x0, x3, x0
    41b0:	mov	x3, x0
    41b4:	str	x0, [x29, #128]
    41b8:	ldr	x0, [x26, #32]
    41bc:	cmp	x3, x0
    41c0:	b.ls	4208 <libintl_gettext@@Base+0x1be8>  // b.plast
    41c4:	add	x1, x1, x2
    41c8:	cmp	x1, #0x400
    41cc:	mov	x2, #0x400                 	// #1024
    41d0:	csel	x1, x1, x2, cs  // cs = hs, nlast
    41d4:	add	x1, x1, x0
    41d8:	str	x1, [x29, #104]
    41dc:	ldr	x0, [x26, #40]
    41e0:	str	x0, [x29, #120]
    41e4:	bl	1e70 <realloc@plt>
    41e8:	mov	x1, x0
    41ec:	cbz	x0, 4334 <libintl_gettext@@Base+0x1d14>
    41f0:	ldr	x0, [x29, #120]
    41f4:	cmp	x0, x1
    41f8:	b.ne	42d0 <libintl_gettext@@Base+0x1cb0>  // b.any
    41fc:	str	x1, [x26, #40]
    4200:	ldr	x0, [x29, #104]
    4204:	str	x0, [x26, #32]
    4208:	ldr	x0, [x26, #40]
    420c:	lsl	x1, x27, #4
    4210:	ldr	x2, [x26, #16]
    4214:	str	x2, [x29, #96]
    4218:	str	x1, [x29, #104]
    421c:	add	x3, x2, x1
    4220:	str	x3, [x29, #120]
    4224:	ldr	x2, [x29, #152]
    4228:	mov	x1, x19
    422c:	mov	x19, x0
    4230:	ldr	x0, [x29, #144]
    4234:	add	x0, x19, x0
    4238:	bl	1c10 <memcpy@plt>
    423c:	ldr	x2, [x29, #96]
    4240:	ldr	x1, [x29, #104]
    4244:	str	x0, [x2, x1]
    4248:	ldr	x2, [x29, #112]
    424c:	mov	x1, x20
    4250:	ldr	x0, [x29, #136]
    4254:	add	x0, x19, x0
    4258:	bl	1c10 <memcpy@plt>
    425c:	ldr	x3, [x29, #120]
    4260:	str	x0, [x3, #8]
    4264:	ldr	x0, [x29, #128]
    4268:	str	x0, [x26, #24]
    426c:	add	x27, x27, #0x1
    4270:	str	x27, [x26]
    4274:	add	x28, x28, #0x1
    4278:	b	40b4 <libintl_gettext@@Base+0x1a94>
    427c:	cmp	w0, #0xa
    4280:	b.ne	4290 <libintl_gettext@@Base+0x1c70>  // b.any
    4284:	strb	wzr, [x1]
    4288:	strb	w0, [x1, #1]
    428c:	b	4164 <libintl_gettext@@Base+0x1b44>
    4290:	cbz	w0, 4164 <libintl_gettext@@Base+0x1b44>
    4294:	strb	wzr, [x1]
    4298:	b	4164 <libintl_gettext@@Base+0x1b44>
    429c:	lsl	x1, x0, #1
    42a0:	cmp	x0, #0x0
    42a4:	mov	x0, #0x64                  	// #100
    42a8:	csel	x0, x1, x0, ne  // ne = any
    42ac:	str	x0, [x29, #152]
    42b0:	lsl	x1, x0, #4
    42b4:	ldr	x0, [x26, #16]
    42b8:	bl	1e70 <realloc@plt>
    42bc:	cbz	x0, 4334 <libintl_gettext@@Base+0x1d14>
    42c0:	str	x0, [x26, #16]
    42c4:	ldr	x0, [x29, #152]
    42c8:	str	x0, [x26, #8]
    42cc:	b	4174 <libintl_gettext@@Base+0x1b54>
    42d0:	cbz	x27, 41fc <libintl_gettext@@Base+0x1bdc>
    42d4:	ldr	x0, [x26, #16]
    42d8:	add	x4, x0, x27, lsl #4
    42dc:	ldr	x2, [x29, #120]
    42e0:	sub	x2, x1, x2
    42e4:	ldr	x3, [x0]
    42e8:	add	x3, x3, x2
    42ec:	str	x3, [x0]
    42f0:	ldr	x3, [x0, #8]
    42f4:	add	x3, x3, x2
    42f8:	str	x3, [x0, #8]
    42fc:	add	x0, x0, #0x10
    4300:	cmp	x4, x0
    4304:	b.ne	42e4 <libintl_gettext@@Base+0x1cc4>  // b.any
    4308:	b	41fc <libintl_gettext@@Base+0x1bdc>
    430c:	mov	x2, x23
    4310:	mov	w1, w24
    4314:	mov	x0, x21
    4318:	bl	1ce0 <fgets_unlocked@plt>
    431c:	cbz	x0, 40b8 <libintl_gettext@@Base+0x1a98>
    4320:	mov	w1, w25
    4324:	mov	x0, x21
    4328:	bl	1fa0 <strchr@plt>
    432c:	cbz	x0, 430c <libintl_gettext@@Base+0x1cec>
    4330:	b	40b8 <libintl_gettext@@Base+0x1a98>
    4334:	mov	x0, x23
    4338:	bl	1d80 <fclose@plt>
    433c:	cbnz	x28, 4368 <libintl_gettext@@Base+0x1d48>
    4340:	mov	x0, x28
    4344:	mov	sp, x29
    4348:	ldp	x19, x20, [sp, #16]
    434c:	ldp	x21, x22, [sp, #32]
    4350:	ldp	x23, x24, [sp, #48]
    4354:	ldp	x25, x26, [sp, #64]
    4358:	ldp	x27, x28, [sp, #80]
    435c:	ldp	x29, x30, [sp]
    4360:	add	sp, sp, #0x240
    4364:	ret
    4368:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    436c:	add	x4, x0, #0x368
    4370:	adrp	x3, 3000 <libintl_gettext@@Base+0x9e0>
    4374:	add	x3, x3, #0xfc4
    4378:	mov	x2, #0x10                  	// #16
    437c:	ldr	x1, [x0, #872]
    4380:	ldr	x0, [x4, #16]
    4384:	bl	1d20 <qsort@plt>
    4388:	b	4340 <libintl_gettext@@Base+0x1d20>
    438c:	mov	x0, x23
    4390:	bl	1d80 <fclose@plt>
    4394:	mov	x28, #0x0                   	// #0
    4398:	b	4340 <libintl_gettext@@Base+0x1d20>

000000000000439c <_nl_expand_alias@@Base>:
    439c:	stp	x29, x30, [sp, #-96]!
    43a0:	mov	x29, sp
    43a4:	stp	x19, x20, [sp, #16]
    43a8:	stp	x21, x22, [sp, #32]
    43ac:	stp	x23, x24, [sp, #48]
    43b0:	stp	x25, x26, [sp, #64]
    43b4:	mov	x24, x0
    43b8:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    43bc:	ldr	x0, [x0, #4064]
    43c0:	cbz	x0, 43d8 <_nl_expand_alias@@Base+0x3c>
    43c4:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    43c8:	add	x0, x0, #0x368
    43cc:	add	x0, x0, #0x30
    43d0:	bl	2090 <pthread_mutex_lock@plt>
    43d4:	cbnz	w0, 43f0 <_nl_expand_alias@@Base+0x54>
    43d8:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    43dc:	ldr	x0, [x0, #968]
    43e0:	cbz	x0, 43f4 <_nl_expand_alias@@Base+0x58>
    43e4:	add	x22, sp, #0x50
    43e8:	mov	w20, #0x1                   	// #1
    43ec:	b	44f4 <_nl_expand_alias@@Base+0x158>
    43f0:	bl	1ec0 <abort@plt>
    43f4:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    43f8:	adrp	x1, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    43fc:	add	x1, x1, #0x7c0
    4400:	str	x1, [x0, #968]
    4404:	b	43e4 <_nl_expand_alias@@Base+0x48>
    4408:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    440c:	ldr	x25, [x0, #888]
    4410:	mov	x23, #0x0                   	// #0
    4414:	b	441c <_nl_expand_alias@@Base+0x80>
    4418:	mov	x19, x21
    441c:	cmp	x19, x23
    4420:	b.ls	4450 <_nl_expand_alias@@Base+0xb4>  // b.plast
    4424:	add	x21, x19, x23
    4428:	lsr	x21, x21, #1
    442c:	add	x26, x25, x21, lsl #4
    4430:	mov	x1, x26
    4434:	mov	x0, x22
    4438:	bl	3fc4 <libintl_gettext@@Base+0x19a4>
    443c:	tbnz	w0, #31, 4418 <_nl_expand_alias@@Base+0x7c>
    4440:	cmp	w0, #0x0
    4444:	b.le	4458 <_nl_expand_alias@@Base+0xbc>
    4448:	add	x23, x21, #0x1
    444c:	b	441c <_nl_expand_alias@@Base+0x80>
    4450:	mov	x19, #0x0                   	// #0
    4454:	b	4504 <_nl_expand_alias@@Base+0x168>
    4458:	cbnz	x26, 4464 <_nl_expand_alias@@Base+0xc8>
    445c:	mov	x19, #0x0                   	// #0
    4460:	b	4504 <_nl_expand_alias@@Base+0x168>
    4464:	ldr	x19, [x26, #8]
    4468:	b	4530 <_nl_expand_alias@@Base+0x194>
    446c:	str	x1, [x21, #96]
    4470:	sub	w1, w1, w0
    4474:	bl	3fe0 <libintl_gettext@@Base+0x19c0>
    4478:	mov	x19, x0
    447c:	b	4510 <_nl_expand_alias@@Base+0x174>
    4480:	mov	x0, x1
    4484:	add	x2, x0, #0x1
    4488:	mov	x1, x2
    448c:	ldrb	w3, [x2], #1
    4490:	cmp	w3, #0x3a
    4494:	ccmp	w3, #0x0, #0x4, ne  // ne = any
    4498:	b.ne	4488 <_nl_expand_alias@@Base+0xec>  // b.any
    449c:	cmp	x1, x0
    44a0:	b.hi	446c <_nl_expand_alias@@Base+0xd0>  // b.pmore
    44a4:	mov	w2, w20
    44a8:	cbnz	x19, 44e8 <_nl_expand_alias@@Base+0x14c>
    44ac:	ldrb	w0, [x1]
    44b0:	cbz	w0, 4520 <_nl_expand_alias@@Base+0x184>
    44b4:	add	x2, x1, #0x1
    44b8:	cmp	w0, #0x3a
    44bc:	b.ne	4480 <_nl_expand_alias@@Base+0xe4>  // b.any
    44c0:	mov	x0, x2
    44c4:	ldrb	w1, [x2], #1
    44c8:	cmp	w1, #0x3a
    44cc:	b.eq	44c0 <_nl_expand_alias@@Base+0x124>  // b.none
    44d0:	ldrb	w1, [x0]
    44d4:	cmp	w1, #0x3a
    44d8:	ccmp	w1, #0x0, #0x4, ne  // ne = any
    44dc:	b.ne	4484 <_nl_expand_alias@@Base+0xe8>  // b.any
    44e0:	mov	x1, x0
    44e4:	b	44a4 <_nl_expand_alias@@Base+0x108>
    44e8:	cbz	w2, 44f4 <_nl_expand_alias@@Base+0x158>
    44ec:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    44f0:	str	x1, [x0, #968]
    44f4:	str	x24, [sp, #80]
    44f8:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    44fc:	ldr	x19, [x0, #872]
    4500:	cbnz	x19, 4408 <_nl_expand_alias@@Base+0x6c>
    4504:	adrp	x21, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    4508:	add	x21, x21, #0x368
    450c:	mov	w23, #0x0                   	// #0
    4510:	ldr	x1, [x21, #96]
    4514:	mov	w2, w23
    4518:	b	44a8 <_nl_expand_alias@@Base+0x10c>
    451c:	bl	1ec0 <abort@plt>
    4520:	cbz	w2, 452c <_nl_expand_alias@@Base+0x190>
    4524:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    4528:	str	x1, [x0, #968]
    452c:	mov	x19, #0x0                   	// #0
    4530:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    4534:	ldr	x0, [x0, #4064]
    4538:	cbz	x0, 4550 <_nl_expand_alias@@Base+0x1b4>
    453c:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    4540:	add	x0, x0, #0x368
    4544:	add	x0, x0, #0x30
    4548:	bl	20a0 <pthread_mutex_unlock@plt>
    454c:	cbnz	w0, 451c <_nl_expand_alias@@Base+0x180>
    4550:	mov	x0, x19
    4554:	ldp	x19, x20, [sp, #16]
    4558:	ldp	x21, x22, [sp, #32]
    455c:	ldp	x23, x24, [sp, #48]
    4560:	ldp	x25, x26, [sp, #64]
    4564:	ldp	x29, x30, [sp], #96
    4568:	ret

000000000000456c <libintl_textdomain@@Base>:
    456c:	stp	x29, x30, [sp, #-32]!
    4570:	mov	x29, sp
    4574:	stp	x19, x20, [sp, #16]
    4578:	cbz	x0, 462c <libintl_textdomain@@Base+0xc0>
    457c:	mov	x19, x0
    4580:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    4584:	ldr	x0, [x0, #4064]
    4588:	cbz	x0, 459c <libintl_textdomain@@Base+0x30>
    458c:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    4590:	ldr	x0, [x0, #4048]
    4594:	bl	1ed0 <pthread_rwlock_wrlock@plt>
    4598:	cbnz	w0, 463c <libintl_textdomain@@Base+0xd0>
    459c:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    45a0:	ldr	x0, [x0, #4008]
    45a4:	ldr	x20, [x0]
    45a8:	ldrb	w0, [x19]
    45ac:	cbz	w0, 45c4 <libintl_textdomain@@Base+0x58>
    45b0:	adrp	x1, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    45b4:	ldr	x1, [x1, #4024]
    45b8:	mov	x0, x19
    45bc:	bl	1f00 <strcmp@plt>
    45c0:	cbnz	w0, 4640 <libintl_textdomain@@Base+0xd4>
    45c4:	adrp	x19, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    45c8:	ldr	x19, [x19, #4024]
    45cc:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    45d0:	ldr	x0, [x0, #4008]
    45d4:	str	x19, [x0]
    45d8:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    45dc:	ldr	x0, [x0, #4032]
    45e0:	ldr	w1, [x0]
    45e4:	add	w1, w1, #0x1
    45e8:	str	w1, [x0]
    45ec:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    45f0:	ldr	x0, [x0, #4024]
    45f4:	cmp	x20, x0
    45f8:	ccmp	x20, x19, #0x4, ne  // ne = any
    45fc:	b.ne	468c <libintl_textdomain@@Base+0x120>  // b.any
    4600:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    4604:	ldr	x0, [x0, #4064]
    4608:	cbz	x0, 461c <libintl_textdomain@@Base+0xb0>
    460c:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    4610:	ldr	x0, [x0, #4048]
    4614:	bl	1f80 <pthread_rwlock_unlock@plt>
    4618:	cbnz	w0, 4698 <libintl_textdomain@@Base+0x12c>
    461c:	mov	x0, x19
    4620:	ldp	x19, x20, [sp, #16]
    4624:	ldp	x29, x30, [sp], #32
    4628:	ret
    462c:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    4630:	ldr	x0, [x0, #4008]
    4634:	ldr	x19, [x0]
    4638:	b	461c <libintl_textdomain@@Base+0xb0>
    463c:	bl	1ec0 <abort@plt>
    4640:	mov	x1, x20
    4644:	mov	x0, x19
    4648:	bl	1f00 <strcmp@plt>
    464c:	cbnz	w0, 466c <libintl_textdomain@@Base+0x100>
    4650:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    4654:	ldr	x0, [x0, #4032]
    4658:	ldr	w1, [x0]
    465c:	add	w1, w1, #0x1
    4660:	str	w1, [x0]
    4664:	mov	x19, x20
    4668:	b	4600 <libintl_textdomain@@Base+0x94>
    466c:	mov	x0, x19
    4670:	bl	1e80 <strdup@plt>
    4674:	mov	x19, x0
    4678:	cbz	x0, 4600 <libintl_textdomain@@Base+0x94>
    467c:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    4680:	ldr	x0, [x0, #4008]
    4684:	str	x19, [x0]
    4688:	b	45d8 <libintl_textdomain@@Base+0x6c>
    468c:	mov	x0, x20
    4690:	bl	1f50 <free@plt>
    4694:	b	4600 <libintl_textdomain@@Base+0x94>
    4698:	bl	1ec0 <abort@plt>
    469c:	sub	sp, sp, #0xb0
    46a0:	stp	x29, x30, [sp, #32]
    46a4:	add	x29, sp, #0x20
    46a8:	stp	x19, x20, [sp, #48]
    46ac:	stp	x21, x22, [sp, #64]
    46b0:	stp	x23, x24, [sp, #80]
    46b4:	stp	x25, x26, [sp, #96]
    46b8:	stp	x27, x28, [sp, #112]
    46bc:	mov	x23, x0
    46c0:	str	x1, [sp, #136]
    46c4:	mov	w19, w3
    46c8:	mov	x21, x4
    46cc:	mov	x20, x5
    46d0:	str	x5, [sp, #160]
    46d4:	str	x6, [sp, #144]
    46d8:	str	x7, [sp, #152]
    46dc:	ldrb	w0, [x4]
    46e0:	cmp	w0, #0x2f
    46e4:	csel	x22, x2, xzr, ne  // ne = any
    46e8:	mov	x0, x4
    46ec:	bl	1c60 <strlen@plt>
    46f0:	add	x25, x0, x22
    46f4:	mov	x0, #0x0                   	// #0
    46f8:	and	w28, w19, #0x4
    46fc:	tbz	w19, #2, 470c <libintl_textdomain@@Base+0x1a0>
    4700:	mov	x0, x20
    4704:	bl	1c60 <strlen@plt>
    4708:	add	x0, x0, #0x1
    470c:	add	x0, x0, #0x2
    4710:	add	x25, x0, x25
    4714:	mov	x20, #0x0                   	// #0
    4718:	and	w27, w19, #0x2
    471c:	tbz	w19, #1, 472c <libintl_textdomain@@Base+0x1c0>
    4720:	ldr	x0, [sp, #144]
    4724:	bl	1c60 <strlen@plt>
    4728:	add	x20, x0, #0x1
    472c:	mov	x0, #0x0                   	// #0
    4730:	and	w26, w19, #0x1
    4734:	tbz	w19, #0, 4744 <libintl_textdomain@@Base+0x1d8>
    4738:	ldr	x0, [sp, #152]
    473c:	bl	1c60 <strlen@plt>
    4740:	add	x0, x0, #0x1
    4744:	add	x20, x20, x0
    4748:	add	x20, x20, x25
    474c:	mov	x24, #0x0                   	// #0
    4750:	and	w25, w19, #0x8
    4754:	tbz	w19, #3, 4764 <libintl_textdomain@@Base+0x1f8>
    4758:	ldr	x0, [sp, #176]
    475c:	bl	1c60 <strlen@plt>
    4760:	add	x24, x0, #0x1
    4764:	ldr	x0, [sp, #184]
    4768:	bl	1c60 <strlen@plt>
    476c:	add	x0, x0, x24
    4770:	add	x0, x0, x20
    4774:	bl	1db0 <malloc@plt>
    4778:	mov	x20, x0
    477c:	cbz	x0, 4aa0 <libintl_textdomain@@Base+0x534>
    4780:	cbnz	x22, 47bc <libintl_textdomain@@Base+0x250>
    4784:	mov	x1, x21
    4788:	bl	1d70 <stpcpy@plt>
    478c:	cbnz	w28, 47e8 <libintl_textdomain@@Base+0x27c>
    4790:	cbnz	w27, 47fc <libintl_textdomain@@Base+0x290>
    4794:	cbnz	w26, 4810 <libintl_textdomain@@Base+0x2a4>
    4798:	cbnz	w25, 4824 <libintl_textdomain@@Base+0x2b8>
    479c:	mov	w1, #0x2f                  	// #47
    47a0:	strb	w1, [x0], #1
    47a4:	ldr	x1, [sp, #184]
    47a8:	bl	1fd0 <strcpy@plt>
    47ac:	ldr	x24, [x23]
    47b0:	cbz	x24, 4860 <libintl_textdomain@@Base+0x2f4>
    47b4:	mov	x25, x23
    47b8:	b	4840 <libintl_textdomain@@Base+0x2d4>
    47bc:	mov	x2, x22
    47c0:	ldr	x1, [sp, #136]
    47c4:	bl	1c10 <memcpy@plt>
    47c8:	mov	w2, #0x3a                  	// #58
    47cc:	mov	x1, x22
    47d0:	mov	x0, x20
    47d4:	bl	1e50 <argz_stringify@plt>
    47d8:	add	x0, x20, x22
    47dc:	mov	w1, #0x2f                  	// #47
    47e0:	sturb	w1, [x0, #-1]
    47e4:	b	4784 <libintl_textdomain@@Base+0x218>
    47e8:	mov	w1, #0x5f                  	// #95
    47ec:	strb	w1, [x0], #1
    47f0:	ldr	x1, [sp, #160]
    47f4:	bl	1d70 <stpcpy@plt>
    47f8:	b	4790 <libintl_textdomain@@Base+0x224>
    47fc:	mov	w1, #0x2e                  	// #46
    4800:	strb	w1, [x0], #1
    4804:	ldr	x1, [sp, #144]
    4808:	bl	1d70 <stpcpy@plt>
    480c:	b	4794 <libintl_textdomain@@Base+0x228>
    4810:	mov	w1, #0x2e                  	// #46
    4814:	strb	w1, [x0], #1
    4818:	ldr	x1, [sp, #152]
    481c:	bl	1d70 <stpcpy@plt>
    4820:	b	4798 <libintl_textdomain@@Base+0x22c>
    4824:	mov	w1, #0x40                  	// #64
    4828:	strb	w1, [x0], #1
    482c:	ldr	x1, [sp, #176]
    4830:	bl	1d70 <stpcpy@plt>
    4834:	b	479c <libintl_textdomain@@Base+0x230>
    4838:	ldr	x24, [x24, #24]
    483c:	cbz	x24, 4864 <libintl_textdomain@@Base+0x2f8>
    4840:	ldr	x0, [x24]
    4844:	cbz	x0, 4838 <libintl_textdomain@@Base+0x2cc>
    4848:	mov	x1, x20
    484c:	bl	1f00 <strcmp@plt>
    4850:	cbz	w0, 4928 <libintl_textdomain@@Base+0x3bc>
    4854:	tbnz	w0, #31, 4864 <libintl_textdomain@@Base+0x2f8>
    4858:	add	x25, x24, #0x18
    485c:	b	4838 <libintl_textdomain@@Base+0x2cc>
    4860:	mov	x25, x23
    4864:	ldr	w0, [sp, #192]
    4868:	cbz	w0, 4924 <libintl_textdomain@@Base+0x3b8>
    486c:	mov	x26, #0x1                   	// #1
    4870:	cbz	x22, 4884 <libintl_textdomain@@Base+0x318>
    4874:	mov	x1, x22
    4878:	ldr	x0, [sp, #136]
    487c:	bl	1ef0 <argz_count@plt>
    4880:	mov	x26, x0
    4884:	mov	w1, #0xffffd555            	// #-10923
    4888:	and	w1, w1, w19, asr #1
    488c:	mov	w0, #0x5555                	// #21845
    4890:	and	w0, w19, w0
    4894:	add	w1, w1, w0
    4898:	mov	w0, #0xfffff333            	// #-3277
    489c:	and	w0, w0, w1, asr #2
    48a0:	mov	w2, #0x3333                	// #13107
    48a4:	and	w1, w1, w2
    48a8:	add	w0, w0, w1
    48ac:	add	w0, w0, w0, asr #4
    48b0:	mov	w1, #0xf0f                 	// #3855
    48b4:	and	w0, w0, w1
    48b8:	add	w0, w0, w0, asr #8
    48bc:	lsl	x0, x26, x0
    48c0:	add	x0, x0, #0x5
    48c4:	cmp	x26, #0x1
    48c8:	cinc	x0, x0, hi  // hi = pmore
    48cc:	lsl	x0, x0, #3
    48d0:	bl	1db0 <malloc@plt>
    48d4:	mov	x24, x0
    48d8:	cbz	x0, 4934 <libintl_textdomain@@Base+0x3c8>
    48dc:	str	x20, [x0]
    48e0:	cmp	x26, #0x1
    48e4:	b.ls	4940 <libintl_textdomain@@Base+0x3d4>  // b.plast
    48e8:	mov	w0, #0x1                   	// #1
    48ec:	str	w0, [x24, #8]
    48f0:	str	xzr, [x24, #16]
    48f4:	ldr	x0, [x25]
    48f8:	str	x0, [x24, #24]
    48fc:	str	x24, [x25]
    4900:	mov	w20, w19
    4904:	mov	x25, #0x0                   	// #0
    4908:	tbnz	w20, #31, 4a70 <libintl_textdomain@@Base+0x504>
    490c:	mvn	w19, w19
    4910:	ldr	x0, [sp, #136]
    4914:	add	x28, x0, x22
    4918:	add	x0, x24, #0x18
    491c:	str	x0, [sp, #168]
    4920:	b	4a04 <libintl_textdomain@@Base+0x498>
    4924:	mov	x24, #0x0                   	// #0
    4928:	mov	x0, x20
    492c:	bl	1f50 <free@plt>
    4930:	b	4a7c <libintl_textdomain@@Base+0x510>
    4934:	mov	x0, x20
    4938:	bl	1f50 <free@plt>
    493c:	b	4a7c <libintl_textdomain@@Base+0x510>
    4940:	and	w0, w19, #0x3
    4944:	cmp	w0, #0x3
    4948:	cset	w0, eq  // eq = none
    494c:	str	w0, [x24, #8]
    4950:	str	xzr, [x24, #16]
    4954:	ldr	x0, [x25]
    4958:	str	x0, [x24, #24]
    495c:	str	x24, [x25]
    4960:	sub	w20, w19, #0x1
    4964:	b	4904 <libintl_textdomain@@Base+0x398>
    4968:	mov	x27, #0x0                   	// #0
    496c:	cbz	x27, 49e4 <libintl_textdomain@@Base+0x478>
    4970:	cmp	x27, x28
    4974:	b.cs	49f8 <libintl_textdomain@@Base+0x48c>  // b.hs, b.nlast
    4978:	mov	x0, x27
    497c:	bl	1c60 <strlen@plt>
    4980:	add	x0, x0, #0x1
    4984:	add	x27, x27, x0
    4988:	cmp	x28, x27
    498c:	b.ls	49f8 <libintl_textdomain@@Base+0x48c>  // b.plast
    4990:	mov	x0, x27
    4994:	bl	1c60 <strlen@plt>
    4998:	add	x25, x25, #0x1
    499c:	mov	w1, #0x1                   	// #1
    49a0:	str	w1, [sp, #16]
    49a4:	ldr	x1, [sp, #184]
    49a8:	str	x1, [sp, #8]
    49ac:	ldr	x1, [sp, #176]
    49b0:	str	x1, [sp]
    49b4:	ldr	x7, [sp, #152]
    49b8:	ldr	x6, [sp, #144]
    49bc:	ldr	x5, [sp, #160]
    49c0:	mov	x4, x21
    49c4:	mov	w3, w20
    49c8:	add	x2, x0, #0x1
    49cc:	mov	x1, x27
    49d0:	mov	x0, x23
    49d4:	bl	469c <libintl_textdomain@@Base+0x130>
    49d8:	ldr	x1, [sp, #168]
    49dc:	str	x0, [x1, x25, lsl #3]
    49e0:	b	496c <libintl_textdomain@@Base+0x400>
    49e4:	cbz	x22, 49f8 <libintl_textdomain@@Base+0x48c>
    49e8:	ldr	x0, [sp, #136]
    49ec:	cbz	x0, 49f8 <libintl_textdomain@@Base+0x48c>
    49f0:	ldr	x27, [sp, #136]
    49f4:	b	4990 <libintl_textdomain@@Base+0x424>
    49f8:	sub	w20, w20, #0x1
    49fc:	cmn	w20, #0x1
    4a00:	b.eq	4a74 <libintl_textdomain@@Base+0x508>  // b.none
    4a04:	tst	w19, w20
    4a08:	b.ne	49f8 <libintl_textdomain@@Base+0x48c>  // b.any
    4a0c:	and	w0, w20, #0x3
    4a10:	cmp	w0, #0x3
    4a14:	b.eq	49f8 <libintl_textdomain@@Base+0x48c>  // b.none
    4a18:	cmp	x26, #0x1
    4a1c:	b.hi	4968 <libintl_textdomain@@Base+0x3fc>  // b.pmore
    4a20:	add	x27, x25, #0x1
    4a24:	mov	w0, #0x1                   	// #1
    4a28:	str	w0, [sp, #16]
    4a2c:	ldr	x0, [sp, #184]
    4a30:	str	x0, [sp, #8]
    4a34:	ldr	x0, [sp, #176]
    4a38:	str	x0, [sp]
    4a3c:	ldr	x7, [sp, #152]
    4a40:	ldr	x6, [sp, #144]
    4a44:	ldr	x5, [sp, #160]
    4a48:	mov	x4, x21
    4a4c:	mov	w3, w20
    4a50:	mov	x2, x22
    4a54:	ldr	x1, [sp, #136]
    4a58:	mov	x0, x23
    4a5c:	bl	469c <libintl_textdomain@@Base+0x130>
    4a60:	add	x25, x25, #0x4
    4a64:	str	x0, [x24, x25, lsl #3]
    4a68:	mov	x25, x27
    4a6c:	b	49f8 <libintl_textdomain@@Base+0x48c>
    4a70:	mov	x25, #0x0                   	// #0
    4a74:	add	x25, x25, #0x4
    4a78:	str	xzr, [x24, x25, lsl #3]
    4a7c:	mov	x0, x24
    4a80:	ldp	x19, x20, [sp, #48]
    4a84:	ldp	x21, x22, [sp, #64]
    4a88:	ldp	x23, x24, [sp, #80]
    4a8c:	ldp	x25, x26, [sp, #96]
    4a90:	ldp	x27, x28, [sp, #112]
    4a94:	ldp	x29, x30, [sp, #32]
    4a98:	add	sp, sp, #0xb0
    4a9c:	ret
    4aa0:	mov	x24, x0
    4aa4:	b	4a7c <libintl_textdomain@@Base+0x510>
    4aa8:	stp	x29, x30, [sp, #-64]!
    4aac:	mov	x29, sp
    4ab0:	stp	x19, x20, [sp, #16]
    4ab4:	stp	x21, x22, [sp, #32]
    4ab8:	stp	x23, x24, [sp, #48]
    4abc:	mov	x20, x0
    4ac0:	mov	x21, x1
    4ac4:	cbz	x1, 4b84 <libintl_textdomain@@Base+0x618>
    4ac8:	bl	1f20 <__ctype_b_loc@plt>
    4acc:	ldr	x7, [x0]
    4ad0:	mov	x2, x20
    4ad4:	add	x6, x20, x21
    4ad8:	mov	x4, #0x0                   	// #0
    4adc:	mov	w5, #0x1                   	// #1
    4ae0:	mov	w0, #0x0                   	// #0
    4ae4:	b	4af4 <libintl_textdomain@@Base+0x588>
    4ae8:	add	x2, x2, #0x1
    4aec:	cmp	x2, x6
    4af0:	b.eq	4b10 <libintl_textdomain@@Base+0x5a4>  // b.none
    4af4:	ldrb	w3, [x2]
    4af8:	ldrh	w3, [x7, x3, lsl #1]
    4afc:	tbz	w3, #3, 4ae8 <libintl_textdomain@@Base+0x57c>
    4b00:	add	x4, x4, #0x1
    4b04:	tst	x3, #0x400
    4b08:	csel	w5, w5, w0, eq  // eq = none
    4b0c:	b	4ae8 <libintl_textdomain@@Base+0x57c>
    4b10:	cbnz	w5, 4b88 <libintl_textdomain@@Base+0x61c>
    4b14:	add	x0, x4, #0x1
    4b18:	bl	1db0 <malloc@plt>
    4b1c:	mov	x19, x0
    4b20:	mov	x24, x0
    4b24:	cbz	x0, 4bb0 <libintl_textdomain@@Base+0x644>
    4b28:	bl	1f20 <__ctype_b_loc@plt>
    4b2c:	ldr	x23, [x0]
    4b30:	mov	x22, x20
    4b34:	add	x20, x20, x21
    4b38:	b	4b58 <libintl_textdomain@@Base+0x5ec>
    4b3c:	tbz	w1, #11, 4b4c <libintl_textdomain@@Base+0x5e0>
    4b40:	mov	x1, x19
    4b44:	strb	w2, [x1], #1
    4b48:	mov	x19, x1
    4b4c:	add	x22, x22, #0x1
    4b50:	cmp	x20, x22
    4b54:	b.eq	4bac <libintl_textdomain@@Base+0x640>  // b.none
    4b58:	ldrb	w2, [x22]
    4b5c:	and	x21, x2, #0xff
    4b60:	ldrh	w1, [x23, x21, lsl #1]
    4b64:	tbz	w1, #10, 4b3c <libintl_textdomain@@Base+0x5d0>
    4b68:	bl	1d50 <__ctype_tolower_loc@plt>
    4b6c:	mov	x1, x19
    4b70:	ldr	x0, [x0]
    4b74:	ldr	w0, [x0, x21, lsl #2]
    4b78:	strb	w0, [x1], #1
    4b7c:	mov	x19, x1
    4b80:	b	4b4c <libintl_textdomain@@Base+0x5e0>
    4b84:	mov	x4, x1
    4b88:	add	x0, x4, #0x4
    4b8c:	bl	1db0 <malloc@plt>
    4b90:	mov	x24, x0
    4b94:	cbz	x0, 4bb0 <libintl_textdomain@@Base+0x644>
    4b98:	mov	x19, x24
    4b9c:	mov	w0, #0x7369                	// #29545
    4ba0:	movk	w0, #0x6f, lsl #16
    4ba4:	str	w0, [x19], #3
    4ba8:	cbnz	x21, 4b28 <libintl_textdomain@@Base+0x5bc>
    4bac:	strb	wzr, [x19]
    4bb0:	mov	x0, x24
    4bb4:	ldp	x19, x20, [sp, #16]
    4bb8:	ldp	x21, x22, [sp, #32]
    4bbc:	ldp	x23, x24, [sp, #48]
    4bc0:	ldp	x29, x30, [sp], #64
    4bc4:	ret
    4bc8:	stp	x29, x30, [sp, #-80]!
    4bcc:	mov	x29, sp
    4bd0:	stp	x19, x20, [sp, #16]
    4bd4:	stp	x21, x22, [sp, #32]
    4bd8:	stp	x23, x24, [sp, #48]
    4bdc:	mov	x24, x0
    4be0:	mov	x22, x2
    4be4:	mov	x21, x3
    4be8:	mov	x20, x4
    4bec:	str	xzr, [x2]
    4bf0:	str	xzr, [x3]
    4bf4:	str	xzr, [x4]
    4bf8:	str	xzr, [x5]
    4bfc:	str	x0, [x1]
    4c00:	ldrb	w1, [x0]
    4c04:	and	w0, w1, #0xffffffbf
    4c08:	and	w0, w0, #0xff
    4c0c:	cmp	w1, #0x5f
    4c10:	mov	w2, #0x2e                  	// #46
    4c14:	ccmp	w1, w2, #0x4, ne  // ne = any
    4c18:	ccmp	w0, #0x0, #0x4, ne  // ne = any
    4c1c:	b.eq	4ccc <libintl_textdomain@@Base+0x760>  // b.none
    4c20:	stp	x25, x26, [sp, #64]
    4c24:	mov	x23, x5
    4c28:	mov	x19, x24
    4c2c:	mov	w2, #0x5f                  	// #95
    4c30:	mov	x0, x19
    4c34:	ldrb	w1, [x19, #1]!
    4c38:	and	w6, w1, #0xffffffbf
    4c3c:	and	w6, w6, #0xff
    4c40:	cmp	w1, #0x2e
    4c44:	ccmp	w1, w2, #0x4, ne  // ne = any
    4c48:	ccmp	w6, #0x0, #0x4, ne  // ne = any
    4c4c:	b.ne	4c30 <libintl_textdomain@@Base+0x6c4>  // b.any
    4c50:	cmp	x24, x19
    4c54:	b.eq	4cc8 <libintl_textdomain@@Base+0x75c>  // b.none
    4c58:	mov	w24, #0x0                   	// #0
    4c5c:	cmp	w1, #0x5f
    4c60:	b.eq	4ce0 <libintl_textdomain@@Base+0x774>  // b.none
    4c64:	ldrb	w0, [x19]
    4c68:	cmp	w0, #0x2e
    4c6c:	b.eq	4d34 <libintl_textdomain@@Base+0x7c8>  // b.none
    4c70:	ldp	x25, x26, [sp, #64]
    4c74:	ldrb	w0, [x19]
    4c78:	cmp	w0, #0x40
    4c7c:	b.eq	4dc0 <libintl_textdomain@@Base+0x854>  // b.none
    4c80:	ldr	x0, [x21]
    4c84:	cbz	x0, 4c98 <libintl_textdomain@@Base+0x72c>
    4c88:	ldrb	w1, [x0]
    4c8c:	and	w0, w24, #0xfffffffb
    4c90:	cmp	w1, #0x0
    4c94:	csel	w24, w0, w24, eq  // eq = none
    4c98:	ldr	x0, [x20]
    4c9c:	cbz	x0, 4cb0 <libintl_textdomain@@Base+0x744>
    4ca0:	ldrb	w1, [x0]
    4ca4:	and	w0, w24, #0xfffffffd
    4ca8:	cmp	w1, #0x0
    4cac:	csel	w24, w0, w24, eq  // eq = none
    4cb0:	mov	w0, w24
    4cb4:	ldp	x19, x20, [sp, #16]
    4cb8:	ldp	x21, x22, [sp, #32]
    4cbc:	ldp	x23, x24, [sp, #48]
    4cc0:	ldp	x29, x30, [sp], #80
    4cc4:	ret
    4cc8:	ldp	x25, x26, [sp, #64]
    4ccc:	mov	x0, x24
    4cd0:	bl	1c60 <strlen@plt>
    4cd4:	add	x19, x24, x0
    4cd8:	mov	w24, #0x0                   	// #0
    4cdc:	b	4c74 <libintl_textdomain@@Base+0x708>
    4ce0:	strb	wzr, [x19]
    4ce4:	add	x1, x0, #0x2
    4ce8:	str	x1, [x21]
    4cec:	ldrb	w2, [x19, #1]
    4cf0:	and	w0, w2, #0xffffffbf
    4cf4:	and	w0, w0, #0xff
    4cf8:	cmp	w2, #0x2e
    4cfc:	ccmp	w0, #0x0, #0x4, ne  // ne = any
    4d00:	b.eq	4d28 <libintl_textdomain@@Base+0x7bc>  // b.none
    4d04:	ldrb	w2, [x1, #1]!
    4d08:	and	w0, w2, #0xffffffbf
    4d0c:	and	w0, w0, #0xff
    4d10:	cmp	w2, #0x2e
    4d14:	ccmp	w0, #0x0, #0x4, ne  // ne = any
    4d18:	b.ne	4d04 <libintl_textdomain@@Base+0x798>  // b.any
    4d1c:	mov	x19, x1
    4d20:	mov	w24, #0x4                   	// #4
    4d24:	b	4c64 <libintl_textdomain@@Base+0x6f8>
    4d28:	mov	x19, x1
    4d2c:	mov	w24, #0x4                   	// #4
    4d30:	b	4c64 <libintl_textdomain@@Base+0x6f8>
    4d34:	mov	x0, x19
    4d38:	strb	wzr, [x0], #1
    4d3c:	str	x0, [x20]
    4d40:	ldrb	w1, [x19, #1]
    4d44:	and	w1, w1, #0xffffffbf
    4d48:	tst	w1, #0xff
    4d4c:	b.eq	4dec <libintl_textdomain@@Base+0x880>  // b.none
    4d50:	mov	x19, x0
    4d54:	ldrb	w1, [x19, #1]!
    4d58:	and	w1, w1, #0xffffffbf
    4d5c:	tst	w1, #0xff
    4d60:	b.ne	4d54 <libintl_textdomain@@Base+0x7e8>  // b.any
    4d64:	orr	w26, w24, #0x2
    4d68:	cmp	x0, x19
    4d6c:	b.eq	4db4 <libintl_textdomain@@Base+0x848>  // b.none
    4d70:	sub	x1, x19, x0
    4d74:	bl	4aa8 <libintl_textdomain@@Base+0x53c>
    4d78:	mov	x25, x0
    4d7c:	str	x0, [x23]
    4d80:	cbz	x0, 4de0 <libintl_textdomain@@Base+0x874>
    4d84:	mov	x1, x0
    4d88:	ldr	x0, [x20]
    4d8c:	bl	1f00 <strcmp@plt>
    4d90:	orr	w24, w24, #0x3
    4d94:	cbz	w0, 4da0 <libintl_textdomain@@Base+0x834>
    4d98:	ldp	x25, x26, [sp, #64]
    4d9c:	b	4c74 <libintl_textdomain@@Base+0x708>
    4da0:	mov	x0, x25
    4da4:	bl	1f50 <free@plt>
    4da8:	mov	w24, w26
    4dac:	ldp	x25, x26, [sp, #64]
    4db0:	b	4c74 <libintl_textdomain@@Base+0x708>
    4db4:	mov	w24, w26
    4db8:	ldp	x25, x26, [sp, #64]
    4dbc:	b	4c74 <libintl_textdomain@@Base+0x708>
    4dc0:	mov	x0, x19
    4dc4:	strb	wzr, [x0], #1
    4dc8:	str	x0, [x22]
    4dcc:	ldrb	w1, [x19, #1]
    4dd0:	orr	w0, w24, #0x8
    4dd4:	cmp	w1, #0x0
    4dd8:	csel	w24, w0, w24, ne  // ne = any
    4ddc:	b	4c80 <libintl_textdomain@@Base+0x714>
    4de0:	mov	w24, #0xffffffff            	// #-1
    4de4:	ldp	x25, x26, [sp, #64]
    4de8:	b	4cb0 <libintl_textdomain@@Base+0x744>
    4dec:	orr	w24, w24, #0x2
    4df0:	mov	x19, x0
    4df4:	ldp	x25, x26, [sp, #64]
    4df8:	b	4c74 <libintl_textdomain@@Base+0x708>
    4dfc:	stp	x29, x30, [sp, #-32]!
    4e00:	mov	x29, sp
    4e04:	stp	x19, x20, [sp, #16]
    4e08:	mov	x20, x0
    4e0c:	mov	x19, x1
    4e10:	ldr	x0, [x0, #32]
    4e14:	cbz	x0, 4e68 <libintl_textdomain@@Base+0x8fc>
    4e18:	add	x0, x20, #0x38
    4e1c:	ldr	x1, [x19, #32]
    4e20:	cbz	x1, 4e70 <libintl_textdomain@@Base+0x904>
    4e24:	add	x1, x19, #0x38
    4e28:	bl	1f00 <strcmp@plt>
    4e2c:	cbnz	w0, 4e5c <libintl_textdomain@@Base+0x8f0>
    4e30:	ldr	x1, [x19]
    4e34:	ldr	x0, [x20]
    4e38:	bl	1f00 <strcmp@plt>
    4e3c:	cbnz	w0, 4e5c <libintl_textdomain@@Base+0x8f0>
    4e40:	ldr	x1, [x19, #16]
    4e44:	ldr	x0, [x20, #16]
    4e48:	bl	1f00 <strcmp@plt>
    4e4c:	cbnz	w0, 4e5c <libintl_textdomain@@Base+0x8f0>
    4e50:	ldr	w0, [x20, #8]
    4e54:	ldr	w1, [x19, #8]
    4e58:	sub	w0, w0, w1
    4e5c:	ldp	x19, x20, [sp, #16]
    4e60:	ldp	x29, x30, [sp], #32
    4e64:	ret
    4e68:	ldr	x0, [x20, #56]
    4e6c:	b	4e1c <libintl_textdomain@@Base+0x8b0>
    4e70:	ldr	x1, [x19, #56]
    4e74:	b	4e28 <libintl_textdomain@@Base+0x8bc>
    4e78:	stp	x29, x30, [sp, #-48]!
    4e7c:	mov	x29, sp
    4e80:	stp	x19, x20, [sp, #16]
    4e84:	mov	x20, x0
    4e88:	mov	x19, x1
    4e8c:	ldr	w2, [x0]
    4e90:	cmp	w2, #0x2
    4e94:	b.eq	4f1c <libintl_textdomain@@Base+0x9b0>  // b.none
    4e98:	b.gt	4ec8 <libintl_textdomain@@Base+0x95c>
    4e9c:	cbz	w2, 4efc <libintl_textdomain@@Base+0x990>
    4ea0:	mov	x0, #0x0                   	// #0
    4ea4:	cmp	w2, #0x1
    4ea8:	b.ne	4ebc <libintl_textdomain@@Base+0x950>  // b.any
    4eac:	ldr	x0, [x20, #8]
    4eb0:	bl	4e78 <libintl_textdomain@@Base+0x90c>
    4eb4:	cmp	x0, #0x0
    4eb8:	cset	x0, eq  // eq = none
    4ebc:	ldp	x19, x20, [sp, #16]
    4ec0:	ldp	x29, x30, [sp], #48
    4ec4:	ret
    4ec8:	mov	x0, #0x0                   	// #0
    4ecc:	cmp	w2, #0x3
    4ed0:	b.ne	4ebc <libintl_textdomain@@Base+0x950>  // b.any
    4ed4:	ldr	x0, [x20, #8]
    4ed8:	bl	4e78 <libintl_textdomain@@Base+0x90c>
    4edc:	cmp	x0, #0x0
    4ee0:	cset	w0, eq  // eq = none
    4ee4:	add	w0, w0, #0x1
    4ee8:	add	x20, x20, w0, sxtw #3
    4eec:	mov	x1, x19
    4ef0:	ldr	x0, [x20, #8]
    4ef4:	bl	4e78 <libintl_textdomain@@Base+0x90c>
    4ef8:	b	4ebc <libintl_textdomain@@Base+0x950>
    4efc:	ldr	w1, [x0, #4]
    4f00:	mov	x0, x19
    4f04:	cbz	w1, 4ebc <libintl_textdomain@@Base+0x950>
    4f08:	mov	x0, #0x0                   	// #0
    4f0c:	cmp	w1, #0x1
    4f10:	b.ne	4ebc <libintl_textdomain@@Base+0x950>  // b.any
    4f14:	ldr	x0, [x20, #8]
    4f18:	b	4ebc <libintl_textdomain@@Base+0x950>
    4f1c:	str	x21, [sp, #32]
    4f20:	ldr	x0, [x0, #8]
    4f24:	bl	4e78 <libintl_textdomain@@Base+0x90c>
    4f28:	mov	x21, x0
    4f2c:	ldr	w0, [x20, #4]
    4f30:	cmp	w0, #0xf
    4f34:	b.eq	4f8c <libintl_textdomain@@Base+0xa20>  // b.none
    4f38:	cmp	w0, #0xe
    4f3c:	b.eq	4fb8 <libintl_textdomain@@Base+0xa4c>  // b.none
    4f40:	mov	x1, x19
    4f44:	ldr	x0, [x20, #16]
    4f48:	bl	4e78 <libintl_textdomain@@Base+0x90c>
    4f4c:	mov	x19, x0
    4f50:	ldr	w1, [x20, #4]
    4f54:	cmp	w1, #0x8
    4f58:	b.eq	50a4 <libintl_textdomain@@Base+0xb38>  // b.none
    4f5c:	b.ls	4fe4 <libintl_textdomain@@Base+0xa78>  // b.plast
    4f60:	cmp	w1, #0xb
    4f64:	b.eq	50c4 <libintl_textdomain@@Base+0xb58>  // b.none
    4f68:	b.ls	5034 <libintl_textdomain@@Base+0xac8>  // b.plast
    4f6c:	cmp	w1, #0xc
    4f70:	b.eq	50d4 <libintl_textdomain@@Base+0xb68>  // b.none
    4f74:	cmp	w1, #0xd
    4f78:	b.ne	5060 <libintl_textdomain@@Base+0xaf4>  // b.any
    4f7c:	cmp	x21, x0
    4f80:	cset	x0, ne  // ne = any
    4f84:	ldr	x21, [sp, #32]
    4f88:	b	4ebc <libintl_textdomain@@Base+0x950>
    4f8c:	mov	w0, #0x1                   	// #1
    4f90:	cbz	x21, 4fa0 <libintl_textdomain@@Base+0xa34>
    4f94:	sxtw	x0, w0
    4f98:	ldr	x21, [sp, #32]
    4f9c:	b	4ebc <libintl_textdomain@@Base+0x950>
    4fa0:	mov	x1, x19
    4fa4:	ldr	x0, [x20, #16]
    4fa8:	bl	4e78 <libintl_textdomain@@Base+0x90c>
    4fac:	cmp	x0, #0x0
    4fb0:	cset	w0, ne  // ne = any
    4fb4:	b	4f94 <libintl_textdomain@@Base+0xa28>
    4fb8:	mov	w0, #0x0                   	// #0
    4fbc:	cbnz	x21, 4fcc <libintl_textdomain@@Base+0xa60>
    4fc0:	sxtw	x0, w0
    4fc4:	ldr	x21, [sp, #32]
    4fc8:	b	4ebc <libintl_textdomain@@Base+0x950>
    4fcc:	mov	x1, x19
    4fd0:	ldr	x0, [x20, #16]
    4fd4:	bl	4e78 <libintl_textdomain@@Base+0x90c>
    4fd8:	cmp	x0, #0x0
    4fdc:	cset	w0, ne  // ne = any
    4fe0:	b	4fc0 <libintl_textdomain@@Base+0xa54>
    4fe4:	cmp	w1, #0x5
    4fe8:	b.eq	5084 <libintl_textdomain@@Base+0xb18>  // b.none
    4fec:	b.ls	5008 <libintl_textdomain@@Base+0xa9c>  // b.plast
    4ff0:	sub	x2, x21, x0
    4ff4:	add	x0, x21, x0
    4ff8:	cmp	w1, #0x6
    4ffc:	csel	x0, x0, x2, eq  // eq = none
    5000:	ldr	x21, [sp, #32]
    5004:	b	4ebc <libintl_textdomain@@Base+0x950>
    5008:	cmp	w1, #0x3
    500c:	b.eq	506c <libintl_textdomain@@Base+0xb00>  // b.none
    5010:	cmp	w1, #0x4
    5014:	b.ne	5028 <libintl_textdomain@@Base+0xabc>  // b.any
    5018:	cbz	x0, 5078 <libintl_textdomain@@Base+0xb0c>
    501c:	udiv	x0, x21, x19
    5020:	ldr	x21, [sp, #32]
    5024:	b	4ebc <libintl_textdomain@@Base+0x950>
    5028:	mov	x0, #0x0                   	// #0
    502c:	ldr	x21, [sp, #32]
    5030:	b	4ebc <libintl_textdomain@@Base+0x950>
    5034:	cmp	w1, #0x9
    5038:	b.eq	50b4 <libintl_textdomain@@Base+0xb48>  // b.none
    503c:	cmp	w1, #0xa
    5040:	b.ne	5054 <libintl_textdomain@@Base+0xae8>  // b.any
    5044:	cmp	x21, x0
    5048:	cset	x0, ls  // ls = plast
    504c:	ldr	x21, [sp, #32]
    5050:	b	4ebc <libintl_textdomain@@Base+0x950>
    5054:	mov	x0, #0x0                   	// #0
    5058:	ldr	x21, [sp, #32]
    505c:	b	4ebc <libintl_textdomain@@Base+0x950>
    5060:	mov	x0, #0x0                   	// #0
    5064:	ldr	x21, [sp, #32]
    5068:	b	4ebc <libintl_textdomain@@Base+0x950>
    506c:	mul	x0, x21, x0
    5070:	ldr	x21, [sp, #32]
    5074:	b	4ebc <libintl_textdomain@@Base+0x950>
    5078:	mov	w0, #0x8                   	// #8
    507c:	bl	1c70 <raise@plt>
    5080:	b	501c <libintl_textdomain@@Base+0xab0>
    5084:	cbz	x0, 5098 <libintl_textdomain@@Base+0xb2c>
    5088:	udiv	x0, x21, x19
    508c:	msub	x0, x0, x19, x21
    5090:	ldr	x21, [sp, #32]
    5094:	b	4ebc <libintl_textdomain@@Base+0x950>
    5098:	mov	w0, #0x8                   	// #8
    509c:	bl	1c70 <raise@plt>
    50a0:	b	5088 <libintl_textdomain@@Base+0xb1c>
    50a4:	cmp	x21, x0
    50a8:	cset	x0, cc  // cc = lo, ul, last
    50ac:	ldr	x21, [sp, #32]
    50b0:	b	4ebc <libintl_textdomain@@Base+0x950>
    50b4:	cmp	x21, x0
    50b8:	cset	x0, hi  // hi = pmore
    50bc:	ldr	x21, [sp, #32]
    50c0:	b	4ebc <libintl_textdomain@@Base+0x950>
    50c4:	cmp	x21, x0
    50c8:	cset	x0, cs  // cs = hs, nlast
    50cc:	ldr	x21, [sp, #32]
    50d0:	b	4ebc <libintl_textdomain@@Base+0x950>
    50d4:	cmp	x21, x0
    50d8:	cset	x0, eq  // eq = none
    50dc:	ldr	x21, [sp, #32]
    50e0:	b	4ebc <libintl_textdomain@@Base+0x950>
    50e4:	stp	x29, x30, [sp, #-48]!
    50e8:	mov	x29, sp
    50ec:	stp	x19, x20, [sp, #16]
    50f0:	stp	x21, x22, [sp, #32]
    50f4:	mov	x22, x2
    50f8:	mov	x21, x3
    50fc:	ldr	x19, [x0, #16]
    5100:	ldr	x0, [x19, #184]
    5104:	bl	4e78 <libintl_textdomain@@Base+0x90c>
    5108:	mov	x20, x0
    510c:	ldr	x0, [x19, #192]
    5110:	cmp	x0, x20
    5114:	b.ls	5144 <libintl_textdomain@@Base+0xbd8>  // b.plast
    5118:	mov	x19, x22
    511c:	add	x21, x22, x21
    5120:	sub	x20, x20, #0x1
    5124:	cmn	x20, #0x1
    5128:	b.eq	5158 <libintl_textdomain@@Base+0xbec>  // b.none
    512c:	mov	x0, x19
    5130:	bl	1c60 <strlen@plt>
    5134:	add	x0, x0, #0x1
    5138:	add	x19, x19, x0
    513c:	cmp	x19, x21
    5140:	b.cc	5120 <libintl_textdomain@@Base+0xbb4>  // b.lo, b.ul, b.last
    5144:	mov	x0, x22
    5148:	ldp	x19, x20, [sp, #16]
    514c:	ldp	x21, x22, [sp, #32]
    5150:	ldp	x29, x30, [sp], #48
    5154:	ret
    5158:	mov	x22, x19
    515c:	b	5144 <libintl_textdomain@@Base+0xbd8>
    5160:	stp	x29, x30, [sp, #-160]!
    5164:	mov	x29, sp
    5168:	stp	x19, x20, [sp, #16]
    516c:	stp	x21, x22, [sp, #32]
    5170:	stp	x23, x24, [sp, #48]
    5174:	stp	x25, x26, [sp, #64]
    5178:	stp	x27, x28, [sp, #80]
    517c:	mov	x26, x0
    5180:	str	x1, [x29, #104]
    5184:	mov	x22, x2
    5188:	str	w3, [x29, #112]
    518c:	str	x4, [x29, #96]
    5190:	ldr	w0, [x0, #8]
    5194:	cmp	w0, #0x0
    5198:	b.le	51fc <libintl_textdomain@@Base+0xc90>
    519c:	ldr	x20, [x26, #16]
    51a0:	cbz	x20, 58d4 <libintl_textdomain@@Base+0x1368>
    51a4:	ldr	w23, [x20, #40]
    51a8:	ldr	x21, [x20, #96]
    51ac:	cbz	x21, 52f4 <libintl_textdomain@@Base+0xd88>
    51b0:	mov	x0, x22
    51b4:	bl	1c60 <strlen@plt>
    51b8:	mov	x19, x0
    51bc:	str	w0, [x29, #116]
    51c0:	mov	x0, x22
    51c4:	bl	28e0 <libintl_gettext@@Base+0x2c0>
    51c8:	ldr	w24, [x20, #88]
    51cc:	udiv	w21, w0, w24
    51d0:	msub	w21, w21, w24, w0
    51d4:	sub	w1, w24, #0x2
    51d8:	udiv	w25, w0, w1
    51dc:	msub	w0, w25, w1, w0
    51e0:	add	w25, w0, #0x1
    51e4:	ldr	w27, [x20, #104]
    51e8:	and	x0, x19, #0xffffffff
    51ec:	str	x0, [x29, #120]
    51f0:	sub	w28, w24, w25
    51f4:	sub	w24, w25, w24
    51f8:	b	59ec <libintl_textdomain@@Base+0x1480>
    51fc:	mov	x0, x26
    5200:	bl	2924 <libintl_gettext@@Base+0x304>
    5204:	b	519c <libintl_textdomain@@Base+0xc30>
    5208:	ldr	x0, [x20, #96]
    520c:	ldr	w19, [x0, w21, uxtw #2]
    5210:	b	5a18 <libintl_textdomain@@Base+0x14ac>
    5214:	ubfiz	x1, x19, #3, #32
    5218:	ldr	x2, [x20, #48]
    521c:	add	x3, x2, x1
    5220:	ldr	w1, [x2, x1]
    5224:	ldr	w2, [x29, #116]
    5228:	cmp	w2, w1
    522c:	b.hi	59d4 <libintl_textdomain@@Base+0x1468>  // b.pmore
    5230:	ldr	x1, [x20]
    5234:	ldr	w0, [x3, #4]
    5238:	b	59c0 <libintl_textdomain@@Base+0x1454>
    523c:	sub	w0, w19, w23
    5240:	lsl	x0, x0, #4
    5244:	ldr	x1, [x20, #72]
    5248:	add	x2, x1, x0
    524c:	ldr	x1, [x1, x0]
    5250:	mov	w0, #0x0                   	// #0
    5254:	ldr	x3, [x29, #120]
    5258:	cmp	x1, x3
    525c:	b.ls	59d8 <libintl_textdomain@@Base+0x146c>  // b.plast
    5260:	ldr	x1, [x2, #8]
    5264:	mov	x0, x22
    5268:	bl	1f00 <strcmp@plt>
    526c:	cmp	w0, #0x0
    5270:	cset	w0, eq  // eq = none
    5274:	b	59d8 <libintl_textdomain@@Base+0x146c>
    5278:	mov	w19, w19
    527c:	mov	w0, w23
    5280:	cmp	x19, w23, uxtw
    5284:	b.cs	539c <libintl_textdomain@@Base+0xe30>  // b.hs, b.nlast
    5288:	ldr	x21, [x20]
    528c:	ldr	w0, [x20, #24]
    5290:	cbz	w0, 537c <libintl_textdomain@@Base+0xe10>
    5294:	lsl	x2, x19, #3
    5298:	ldr	x4, [x20, #56]
    529c:	add	x0, x4, x2
    52a0:	ldr	w1, [x0, #4]
    52a4:	lsl	w0, w1, #8
    52a8:	and	w0, w0, #0xff0000
    52ac:	lsr	w3, w1, #8
    52b0:	and	w3, w3, #0xff00
    52b4:	orr	w0, w0, w3
    52b8:	lsr	w3, w1, #24
    52bc:	orr	w1, w3, w1, lsl #24
    52c0:	orr	w0, w0, w1
    52c4:	add	x21, x21, x0
    52c8:	ldr	w0, [x4, x2]
    52cc:	lsl	w28, w0, #8
    52d0:	and	w28, w28, #0xff0000
    52d4:	lsr	w1, w0, #8
    52d8:	and	w1, w1, #0xff00
    52dc:	orr	w28, w28, w1
    52e0:	lsr	w1, w0, #24
    52e4:	orr	w0, w1, w0, lsl #24
    52e8:	orr	w28, w28, w0
    52ec:	add	w28, w28, #0x1
    52f0:	b	53b4 <libintl_textdomain@@Base+0xe48>
    52f4:	mov	w24, w23
    52f8:	mov	x25, #0x0                   	// #0
    52fc:	b	5320 <libintl_textdomain@@Base+0xdb4>
    5300:	ldr	x0, [x20, #48]
    5304:	add	x0, x0, x19, lsl #3
    5308:	ldr	w0, [x0, #4]
    530c:	add	x1, x1, x0
    5310:	mov	x0, x22
    5314:	bl	1f00 <strcmp@plt>
    5318:	tbz	w0, #31, 536c <libintl_textdomain@@Base+0xe00>
    531c:	mov	x24, x19
    5320:	cmp	x24, x25
    5324:	b.ls	58e0 <libintl_textdomain@@Base+0x1374>  // b.plast
    5328:	add	x19, x24, x25
    532c:	lsr	x19, x19, #1
    5330:	ldr	x1, [x20]
    5334:	ldr	w0, [x20, #24]
    5338:	cbz	w0, 5300 <libintl_textdomain@@Base+0xd94>
    533c:	ldr	x0, [x20, #48]
    5340:	add	x0, x0, x19, lsl #3
    5344:	ldr	w2, [x0, #4]
    5348:	lsl	w0, w2, #8
    534c:	and	w0, w0, #0xff0000
    5350:	lsr	w3, w2, #8
    5354:	and	w3, w3, #0xff00
    5358:	orr	w0, w0, w3
    535c:	lsr	w3, w2, #24
    5360:	orr	w2, w3, w2, lsl #24
    5364:	orr	w0, w0, w2
    5368:	b	530c <libintl_textdomain@@Base+0xda0>
    536c:	cmp	w0, #0x0
    5370:	b.le	527c <libintl_textdomain@@Base+0xd10>
    5374:	add	x25, x19, #0x1
    5378:	b	5320 <libintl_textdomain@@Base+0xdb4>
    537c:	lsl	x0, x19, #3
    5380:	ldr	x1, [x20, #56]
    5384:	add	x2, x1, x0
    5388:	ldr	w2, [x2, #4]
    538c:	add	x21, x21, x2
    5390:	ldr	w28, [x1, x0]
    5394:	add	w28, w28, #0x1
    5398:	b	53b4 <libintl_textdomain@@Base+0xe48>
    539c:	sub	x0, x19, x0
    53a0:	lsl	x0, x0, #4
    53a4:	ldr	x1, [x20, #80]
    53a8:	add	x2, x1, x0
    53ac:	ldr	x21, [x2, #8]
    53b0:	ldr	x28, [x1, x0]
    53b4:	ldr	w0, [x29, #112]
    53b8:	cbnz	w0, 53c8 <libintl_textdomain@@Base+0xe5c>
    53bc:	ldr	x0, [x29, #96]
    53c0:	str	x28, [x0]
    53c4:	b	58e0 <libintl_textdomain@@Base+0x1374>
    53c8:	ldr	x0, [x29, #104]
    53cc:	cbz	x0, 53d8 <libintl_textdomain@@Base+0xe6c>
    53d0:	ldr	x27, [x0, #16]
    53d4:	cbnz	x27, 53f0 <libintl_textdomain@@Base+0xe84>
    53d8:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    53dc:	ldr	w0, [x0, #976]
    53e0:	cbz	w0, 548c <libintl_textdomain@@Base+0xf20>
    53e4:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    53e8:	ldr	x27, [x0, #984]
    53ec:	cbz	x27, 54ec <libintl_textdomain@@Base+0xf80>
    53f0:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    53f4:	ldr	x0, [x0, #4064]
    53f8:	cbz	x0, 5408 <libintl_textdomain@@Base+0xe9c>
    53fc:	add	x0, x20, #0x80
    5400:	bl	1c90 <pthread_rwlock_rdlock@plt>
    5404:	cbnz	w0, 54f8 <libintl_textdomain@@Base+0xf8c>
    5408:	ldr	x24, [x20, #120]
    540c:	add	x22, x24, x24, lsl #1
    5410:	lsl	x22, x22, #3
    5414:	sub	x22, x22, #0x18
    5418:	cbz	x24, 5914 <libintl_textdomain@@Base+0x13a8>
    541c:	sub	x24, x24, #0x1
    5420:	ldr	x0, [x20, #112]
    5424:	add	x25, x0, x22
    5428:	mov	x1, x27
    542c:	ldr	x0, [x0, x22]
    5430:	bl	1f00 <strcmp@plt>
    5434:	sub	x22, x22, #0x18
    5438:	cbnz	w0, 5418 <libintl_textdomain@@Base+0xeac>
    543c:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    5440:	ldr	x0, [x0, #4064]
    5444:	cbz	x0, 5454 <libintl_textdomain@@Base+0xee8>
    5448:	add	x0, x20, #0x80
    544c:	bl	1f80 <pthread_rwlock_unlock@plt>
    5450:	cbnz	w0, 54fc <libintl_textdomain@@Base+0xf90>
    5454:	ldr	x0, [x25, #8]
    5458:	cmn	x0, #0x1
    545c:	b.eq	53bc <libintl_textdomain@@Base+0xe50>  // b.none
    5460:	ldr	x0, [x25, #16]
    5464:	cbz	x0, 5684 <libintl_textdomain@@Base+0x1118>
    5468:	ldr	x0, [x25, #16]
    546c:	cmn	x0, #0x1
    5470:	b.eq	590c <libintl_textdomain@@Base+0x13a0>  // b.none
    5474:	ldr	x0, [x0, x19, lsl #3]
    5478:	cbz	x0, 5708 <libintl_textdomain@@Base+0x119c>
    547c:	ldr	x0, [x25, #16]
    5480:	ldr	x21, [x0, x19, lsl #3]
    5484:	ldr	x28, [x21], #8
    5488:	b	53bc <libintl_textdomain@@Base+0xe50>
    548c:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    5490:	add	x0, x0, #0x7a8
    5494:	bl	2080 <getenv@plt>
    5498:	mov	x22, x0
    549c:	cbz	x0, 54a8 <libintl_textdomain@@Base+0xf3c>
    54a0:	ldrb	w0, [x0]
    54a4:	cbnz	w0, 54b8 <libintl_textdomain@@Base+0xf4c>
    54a8:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    54ac:	mov	w1, #0x1                   	// #1
    54b0:	str	w1, [x0, #976]
    54b4:	b	53e4 <libintl_textdomain@@Base+0xe78>
    54b8:	mov	x0, x22
    54bc:	bl	1c60 <strlen@plt>
    54c0:	add	x25, x0, #0x1
    54c4:	mov	x0, x25
    54c8:	bl	1db0 <malloc@plt>
    54cc:	mov	x24, x0
    54d0:	cbz	x0, 54e0 <libintl_textdomain@@Base+0xf74>
    54d4:	mov	x2, x25
    54d8:	mov	x1, x22
    54dc:	bl	1c10 <memcpy@plt>
    54e0:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    54e4:	str	x24, [x0, #984]
    54e8:	b	54a8 <libintl_textdomain@@Base+0xf3c>
    54ec:	bl	6d08 <libintl_ngettext@@Base+0xa5c>
    54f0:	mov	x27, x0
    54f4:	b	53f0 <libintl_textdomain@@Base+0xe84>
    54f8:	bl	1ec0 <abort@plt>
    54fc:	bl	1ec0 <abort@plt>
    5500:	bl	1ec0 <abort@plt>
    5504:	ldr	x0, [x20, #112]
    5508:	cbz	x0, 55ec <libintl_textdomain@@Base+0x1080>
    550c:	ldr	x1, [x29, #120]
    5510:	add	x1, x1, #0x18
    5514:	bl	1e70 <realloc@plt>
    5518:	mov	x24, x0
    551c:	cbz	x24, 5608 <libintl_textdomain@@Base+0x109c>
    5520:	str	x24, [x20, #112]
    5524:	mov	x0, x27
    5528:	bl	1e80 <strdup@plt>
    552c:	mov	x22, x0
    5530:	cbz	x0, 5608 <libintl_textdomain@@Base+0x109c>
    5534:	ldr	x0, [x29, #120]
    5538:	add	x25, x24, x0
    553c:	str	x22, [x24, x0]
    5540:	mov	x0, #0xffffffffffffffff    	// #-1
    5544:	str	x0, [x25, #8]
    5548:	add	x4, x29, #0x98
    554c:	mov	w3, #0x0                   	// #0
    5550:	adrp	x2, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    5554:	add	x2, x2, #0x7c0
    5558:	ldr	x1, [x29, #104]
    555c:	mov	x0, x26
    5560:	bl	5160 <libintl_textdomain@@Base+0xbf4>
    5564:	cmn	x0, #0x1
    5568:	b.eq	5600 <libintl_textdomain@@Base+0x1094>  // b.none
    556c:	cbz	x0, 55d8 <libintl_textdomain@@Base+0x106c>
    5570:	adrp	x1, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    5574:	add	x1, x1, #0x7b8
    5578:	bl	2030 <strstr@plt>
    557c:	cbz	x0, 55d8 <libintl_textdomain@@Base+0x106c>
    5580:	add	x24, x0, #0x8
    5584:	adrp	x1, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    5588:	add	x1, x1, #0x7c8
    558c:	mov	x0, x24
    5590:	bl	2060 <strcspn@plt>
    5594:	mov	x2, x0
    5598:	add	x0, x0, #0x10
    559c:	and	x0, x0, #0xfffffffffffffff0
    55a0:	sub	sp, sp, x0
    55a4:	mov	x27, sp
    55a8:	mov	x1, x24
    55ac:	mov	x0, x27
    55b0:	bl	1f70 <mempcpy@plt>
    55b4:	strb	wzr, [x0]
    55b8:	mov	w1, #0x2f                  	// #47
    55bc:	mov	x0, x22
    55c0:	bl	1fa0 <strchr@plt>
    55c4:	cbz	x0, 5628 <libintl_textdomain@@Base+0x10bc>
    55c8:	mov	x1, x27
    55cc:	mov	x0, x22
    55d0:	bl	1fe0 <iconv_open@plt>
    55d4:	str	x0, [x25, #8]
    55d8:	str	xzr, [x25, #16]
    55dc:	ldr	x0, [x20, #120]
    55e0:	add	x0, x0, #0x1
    55e4:	str	x0, [x20, #120]
    55e8:	b	597c <libintl_textdomain@@Base+0x1410>
    55ec:	ldr	x0, [x29, #120]
    55f0:	add	x0, x0, #0x18
    55f4:	bl	1db0 <malloc@plt>
    55f8:	mov	x24, x0
    55fc:	b	551c <libintl_textdomain@@Base+0xfb0>
    5600:	mov	x0, x22
    5604:	bl	1f50 <free@plt>
    5608:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    560c:	ldr	x0, [x0, #4064]
    5610:	cbz	x0, 5904 <libintl_textdomain@@Base+0x1398>
    5614:	add	x0, x20, #0x80
    5618:	bl	1f80 <pthread_rwlock_unlock@plt>
    561c:	mov	x21, #0xffffffffffffffff    	// #-1
    5620:	cbz	w0, 58e0 <libintl_textdomain@@Base+0x1374>
    5624:	bl	1ec0 <abort@plt>
    5628:	mov	x0, x22
    562c:	bl	1c60 <strlen@plt>
    5630:	mov	x24, x0
    5634:	add	x0, x0, #0x1a
    5638:	and	x0, x0, #0xfffffffffffffff0
    563c:	sub	sp, sp, x0
    5640:	mov	x26, sp
    5644:	mov	x2, x24
    5648:	mov	x1, x22
    564c:	mov	x0, x26
    5650:	bl	1c10 <memcpy@plt>
    5654:	add	x1, x26, x24
    5658:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    565c:	add	x0, x0, #0x7d0
    5660:	ldr	x2, [x0]
    5664:	str	x2, [x26, x24]
    5668:	ldur	w0, [x0, #7]
    566c:	stur	w0, [x1, #7]
    5670:	mov	x1, x27
    5674:	mov	x0, x26
    5678:	bl	1fe0 <iconv_open@plt>
    567c:	str	x0, [x25, #8]
    5680:	b	55d8 <libintl_textdomain@@Base+0x106c>
    5684:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    5688:	ldr	x0, [x0, #4064]
    568c:	cbz	x0, 56d4 <libintl_textdomain@@Base+0x1168>
    5690:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    5694:	add	x0, x0, #0x3d0
    5698:	add	x0, x0, #0x10
    569c:	bl	2090 <pthread_mutex_lock@plt>
    56a0:	cbnz	w0, 56d0 <libintl_textdomain@@Base+0x1164>
    56a4:	ldr	x0, [x25, #16]
    56a8:	cbz	x0, 56d4 <libintl_textdomain@@Base+0x1168>
    56ac:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    56b0:	ldr	x0, [x0, #4064]
    56b4:	cbz	x0, 5468 <libintl_textdomain@@Base+0xefc>
    56b8:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    56bc:	add	x0, x0, #0x3d0
    56c0:	add	x0, x0, #0x10
    56c4:	bl	20a0 <pthread_mutex_unlock@plt>
    56c8:	cbz	w0, 5468 <libintl_textdomain@@Base+0xefc>
    56cc:	bl	1ec0 <abort@plt>
    56d0:	bl	1ec0 <abort@plt>
    56d4:	ldr	w0, [x20, #64]
    56d8:	mov	x1, #0x8                   	// #8
    56dc:	add	w0, w23, w0
    56e0:	bl	1e40 <calloc@plt>
    56e4:	str	x0, [x25, #16]
    56e8:	cbnz	x0, 5728 <libintl_textdomain@@Base+0x11bc>
    56ec:	mov	x0, #0xffffffffffffffff    	// #-1
    56f0:	str	x0, [x25, #16]
    56f4:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    56f8:	ldr	x0, [x0, #4064]
    56fc:	cbnz	x0, 56b8 <libintl_textdomain@@Base+0x114c>
    5700:	mov	x21, #0xffffffffffffffff    	// #-1
    5704:	b	58e0 <libintl_textdomain@@Base+0x1374>
    5708:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    570c:	ldr	x0, [x0, #4064]
    5710:	cbz	x0, 5728 <libintl_textdomain@@Base+0x11bc>
    5714:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    5718:	add	x0, x0, #0x3d0
    571c:	add	x0, x0, #0x10
    5720:	bl	2090 <pthread_mutex_lock@plt>
    5724:	cbnz	w0, 575c <libintl_textdomain@@Base+0x11f0>
    5728:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    572c:	ldr	x0, [x0, #1040]
    5730:	add	x0, x0, #0x8
    5734:	mov	x20, #0x0                   	// #0
    5738:	mov	w22, #0x0                   	// #0
    573c:	adrp	x23, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    5740:	add	x23, x23, #0x3d0
    5744:	add	x26, x29, #0x98
    5748:	add	x24, x29, #0x90
    574c:	add	x27, x29, #0x88
    5750:	add	x1, x29, #0x80
    5754:	str	x1, [x29, #120]
    5758:	b	57fc <libintl_textdomain@@Base+0x1290>
    575c:	bl	1ec0 <abort@plt>
    5760:	ldr	x2, [x29, #144]
    5764:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    5768:	add	x0, x0, #0x3d0
    576c:	ldr	x1, [x0, #64]
    5770:	sub	x3, x2, x1
    5774:	sub	x4, x3, #0x8
    5778:	str	x4, [x1]
    577c:	ldr	x4, [x25, #16]
    5780:	str	x1, [x4, x19, lsl #3]
    5784:	ldr	x1, [x0, #72]
    5788:	sub	x1, x1, x3
    578c:	and	x3, x1, #0x7
    5790:	add	x2, x2, x3
    5794:	str	x2, [x0, #64]
    5798:	and	x1, x1, #0xfffffffffffffff8
    579c:	str	x1, [x0, #72]
    57a0:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    57a4:	ldr	x0, [x0, #4064]
    57a8:	cbz	x0, 547c <libintl_textdomain@@Base+0xf10>
    57ac:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    57b0:	add	x0, x0, #0x3d0
    57b4:	add	x0, x0, #0x10
    57b8:	bl	20a0 <pthread_mutex_unlock@plt>
    57bc:	cbz	w0, 547c <libintl_textdomain@@Base+0xf10>
    57c0:	bl	1ec0 <abort@plt>
    57c4:	cmp	w22, #0x0
    57c8:	b.le	5874 <libintl_textdomain@@Base+0x1308>
    57cc:	add	w22, w22, #0x1
    57d0:	lsl	w1, w22, #8
    57d4:	sub	w1, w1, w22
    57d8:	lsl	w1, w1, #4
    57dc:	sxtw	x1, w1
    57e0:	str	x1, [x23, #72]
    57e4:	mov	x0, x20
    57e8:	bl	1e70 <realloc@plt>
    57ec:	mov	x20, x0
    57f0:	cbz	x20, 588c <libintl_textdomain@@Base+0x1320>
    57f4:	str	x20, [x23, #64]
    57f8:	add	x0, x20, #0x8
    57fc:	str	x21, [x29, #128]
    5800:	str	x28, [x29, #136]
    5804:	str	x0, [x29, #144]
    5808:	ldr	x0, [x23, #72]
    580c:	cmp	x0, #0x7
    5810:	b.ls	57c4 <libintl_textdomain@@Base+0x1258>  // b.plast
    5814:	sub	x0, x0, #0x8
    5818:	str	x0, [x29, #152]
    581c:	mov	x4, x26
    5820:	mov	x3, x24
    5824:	mov	x2, x27
    5828:	ldr	x1, [x29, #120]
    582c:	ldr	x0, [x25, #8]
    5830:	bl	1f10 <iconv@plt>
    5834:	cmn	x0, #0x1
    5838:	b.ne	5760 <libintl_textdomain@@Base+0x11f4>  // b.any
    583c:	bl	2070 <__errno_location@plt>
    5840:	ldr	w0, [x0]
    5844:	cmp	w0, #0x7
    5848:	b.eq	57c4 <libintl_textdomain@@Base+0x1258>  // b.none
    584c:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    5850:	ldr	x0, [x0, #4064]
    5854:	cbz	x0, 58c4 <libintl_textdomain@@Base+0x1358>
    5858:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    585c:	add	x0, x0, #0x3d0
    5860:	add	x0, x0, #0x10
    5864:	bl	20a0 <pthread_mutex_unlock@plt>
    5868:	mov	x21, #0x0                   	// #0
    586c:	cbz	w0, 58e0 <libintl_textdomain@@Base+0x1374>
    5870:	bl	1ec0 <abort@plt>
    5874:	mov	x0, #0xff0                 	// #4080
    5878:	str	x0, [x23, #72]
    587c:	bl	1db0 <malloc@plt>
    5880:	mov	x20, x0
    5884:	mov	w22, #0x1                   	// #1
    5888:	b	57f0 <libintl_textdomain@@Base+0x1284>
    588c:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    5890:	add	x0, x0, #0x3d0
    5894:	str	xzr, [x0, #64]
    5898:	str	xzr, [x0, #72]
    589c:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    58a0:	ldr	x0, [x0, #4064]
    58a4:	cbz	x0, 58cc <libintl_textdomain@@Base+0x1360>
    58a8:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    58ac:	add	x0, x0, #0x3d0
    58b0:	add	x0, x0, #0x10
    58b4:	bl	20a0 <pthread_mutex_unlock@plt>
    58b8:	mov	x21, #0xffffffffffffffff    	// #-1
    58bc:	cbz	w0, 58e0 <libintl_textdomain@@Base+0x1374>
    58c0:	bl	1ec0 <abort@plt>
    58c4:	mov	x21, #0x0                   	// #0
    58c8:	b	58e0 <libintl_textdomain@@Base+0x1374>
    58cc:	mov	x21, #0xffffffffffffffff    	// #-1
    58d0:	b	58e0 <libintl_textdomain@@Base+0x1374>
    58d4:	mov	x21, x20
    58d8:	b	58e0 <libintl_textdomain@@Base+0x1374>
    58dc:	mov	x21, #0x0                   	// #0
    58e0:	mov	x0, x21
    58e4:	mov	sp, x29
    58e8:	ldp	x19, x20, [sp, #16]
    58ec:	ldp	x21, x22, [sp, #32]
    58f0:	ldp	x23, x24, [sp, #48]
    58f4:	ldp	x25, x26, [sp, #64]
    58f8:	ldp	x27, x28, [sp, #80]
    58fc:	ldp	x29, x30, [sp], #160
    5900:	ret
    5904:	mov	x21, #0xffffffffffffffff    	// #-1
    5908:	b	58e0 <libintl_textdomain@@Base+0x1374>
    590c:	mov	x21, x0
    5910:	b	58e0 <libintl_textdomain@@Base+0x1374>
    5914:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    5918:	ldr	x0, [x0, #4064]
    591c:	cbz	x0, 592c <libintl_textdomain@@Base+0x13c0>
    5920:	add	x0, x20, #0x80
    5924:	bl	1f80 <pthread_rwlock_unlock@plt>
    5928:	cbnz	w0, 54fc <libintl_textdomain@@Base+0xf90>
    592c:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    5930:	ldr	x0, [x0, #4064]
    5934:	cbz	x0, 5944 <libintl_textdomain@@Base+0x13d8>
    5938:	add	x0, x20, #0x80
    593c:	bl	1ed0 <pthread_rwlock_wrlock@plt>
    5940:	cbnz	w0, 5500 <libintl_textdomain@@Base+0xf94>
    5944:	ldr	x24, [x20, #120]
    5948:	add	x0, x24, x24, lsl #1
    594c:	lsl	x0, x0, #3
    5950:	str	x0, [x29, #120]
    5954:	sub	x22, x0, #0x18
    5958:	cbz	x24, 5504 <libintl_textdomain@@Base+0xf98>
    595c:	sub	x24, x24, #0x1
    5960:	ldr	x0, [x20, #112]
    5964:	add	x25, x0, x22
    5968:	mov	x1, x27
    596c:	ldr	x0, [x0, x22]
    5970:	bl	1f00 <strcmp@plt>
    5974:	sub	x22, x22, #0x18
    5978:	cbnz	w0, 5958 <libintl_textdomain@@Base+0x13ec>
    597c:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    5980:	ldr	x0, [x0, #4064]
    5984:	cbz	x0, 5454 <libintl_textdomain@@Base+0xee8>
    5988:	add	x0, x20, #0x80
    598c:	bl	1f80 <pthread_rwlock_unlock@plt>
    5990:	cbz	w0, 5454 <libintl_textdomain@@Base+0xee8>
    5994:	bl	1ec0 <abort@plt>
    5998:	ldr	x1, [x20]
    599c:	ldr	w2, [x3, #4]
    59a0:	lsl	w0, w2, #8
    59a4:	and	w0, w0, #0xff0000
    59a8:	lsr	w3, w2, #8
    59ac:	and	w3, w3, #0xff00
    59b0:	orr	w0, w0, w3
    59b4:	lsr	w3, w2, #24
    59b8:	orr	w2, w3, w2, lsl #24
    59bc:	orr	w0, w0, w2
    59c0:	add	x1, x1, x0
    59c4:	mov	x0, x22
    59c8:	bl	1f00 <strcmp@plt>
    59cc:	cmp	w0, #0x0
    59d0:	cset	w0, eq  // eq = none
    59d4:	and	w0, w0, #0x1
    59d8:	cbnz	w0, 5278 <libintl_textdomain@@Base+0xd0c>
    59dc:	add	w0, w21, w24
    59e0:	add	w1, w21, w25
    59e4:	cmp	w28, w21
    59e8:	csel	w21, w1, w0, hi  // hi = pmore
    59ec:	cbz	w27, 5208 <libintl_textdomain@@Base+0xc9c>
    59f0:	ldr	x0, [x20, #96]
    59f4:	ldr	w0, [x0, w21, uxtw #2]
    59f8:	lsl	w19, w0, #8
    59fc:	and	w19, w19, #0xff0000
    5a00:	lsr	w1, w0, #8
    5a04:	and	w1, w1, #0xff00
    5a08:	orr	w19, w19, w1
    5a0c:	lsr	w1, w0, #24
    5a10:	orr	w0, w1, w0, lsl #24
    5a14:	orr	w19, w19, w0
    5a18:	cbz	w19, 58dc <libintl_textdomain@@Base+0x1370>
    5a1c:	sub	w19, w19, #0x1
    5a20:	cmp	w23, w19
    5a24:	b.ls	523c <libintl_textdomain@@Base+0xcd0>  // b.plast
    5a28:	ldr	w0, [x20, #24]
    5a2c:	cbz	w0, 5214 <libintl_textdomain@@Base+0xca8>
    5a30:	ubfiz	x0, x19, #3, #32
    5a34:	ldr	x1, [x20, #48]
    5a38:	add	x3, x1, x0
    5a3c:	ldr	w1, [x1, x0]
    5a40:	lsl	w0, w1, #8
    5a44:	and	w0, w0, #0xff0000
    5a48:	lsr	w2, w1, #8
    5a4c:	and	w2, w2, #0xff00
    5a50:	orr	w0, w0, w2
    5a54:	lsr	w2, w1, #24
    5a58:	orr	w1, w2, w1, lsl #24
    5a5c:	orr	w0, w0, w1
    5a60:	ldr	w1, [x29, #116]
    5a64:	cmp	w1, w0
    5a68:	b.ls	5998 <libintl_textdomain@@Base+0x142c>  // b.plast
    5a6c:	mov	w0, #0x0                   	// #0
    5a70:	b	59d4 <libintl_textdomain@@Base+0x1468>
    5a74:	stp	x29, x30, [sp, #-288]!
    5a78:	mov	x29, sp
    5a7c:	stp	x19, x20, [sp, #16]
    5a80:	stp	x21, x22, [sp, #32]
    5a84:	stp	x23, x24, [sp, #48]
    5a88:	stp	x25, x26, [sp, #64]
    5a8c:	stp	x27, x28, [sp, #80]
    5a90:	mov	x27, x1
    5a94:	str	x2, [x29, #152]
    5a98:	str	w3, [x29, #172]
    5a9c:	str	x4, [x29, #144]
    5aa0:	cbz	x1, 5fc4 <libintl_textdomain@@Base+0x1a58>
    5aa4:	mov	x24, x0
    5aa8:	mov	w25, w5
    5aac:	bl	2070 <__errno_location@plt>
    5ab0:	mov	x26, x0
    5ab4:	ldr	w0, [x0]
    5ab8:	str	w0, [x29, #168]
    5abc:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    5ac0:	ldr	x0, [x0, #4064]
    5ac4:	cbz	x0, 5ad8 <libintl_textdomain@@Base+0x156c>
    5ac8:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    5acc:	add	x0, x0, #0x2d8
    5ad0:	bl	1c90 <pthread_rwlock_rdlock@plt>
    5ad4:	cbnz	w0, 5c24 <libintl_textdomain@@Base+0x16b8>
    5ad8:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    5adc:	ldr	x0, [x0, #840]
    5ae0:	cmp	x24, #0x0
    5ae4:	csel	x24, x0, x24, eq  // eq = none
    5ae8:	str	xzr, [x29, #248]
    5aec:	str	x27, [x29, #272]
    5af0:	str	x24, [x29, #216]
    5af4:	str	w25, [x29, #224]
    5af8:	cmp	w25, #0x3
    5afc:	b.eq	5c5c <libintl_textdomain@@Base+0x16f0>  // b.none
    5b00:	b.gt	5c28 <libintl_textdomain@@Base+0x16bc>
    5b04:	cmp	w25, #0x1
    5b08:	b.eq	5c68 <libintl_textdomain@@Base+0x16fc>  // b.none
    5b0c:	adrp	x21, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    5b10:	add	x21, x21, #0x7e8
    5b14:	cmp	w25, #0x2
    5b18:	b.eq	5b34 <libintl_textdomain@@Base+0x15c8>  // b.none
    5b1c:	adrp	x21, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    5b20:	add	x0, x21, #0x818
    5b24:	adrp	x21, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    5b28:	add	x21, x21, #0x7e0
    5b2c:	cmp	w25, #0x0
    5b30:	csel	x21, x21, x0, ne  // ne = any
    5b34:	mov	x1, x21
    5b38:	mov	w0, w25
    5b3c:	bl	706c <libintl_set_relocation_prefix@@Base+0x224>
    5b40:	mov	x1, x0
    5b44:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    5b48:	add	x0, x0, #0x7c0
    5b4c:	cmp	x1, #0x0
    5b50:	csel	x0, x0, x1, eq  // eq = none
    5b54:	str	x0, [x29, #136]
    5b58:	str	x0, [x29, #232]
    5b5c:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    5b60:	ldr	x0, [x0, #4064]
    5b64:	cbz	x0, 5b7c <libintl_textdomain@@Base+0x1610>
    5b68:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    5b6c:	add	x0, x0, #0x2d8
    5b70:	add	x0, x0, #0x38
    5b74:	bl	1c90 <pthread_rwlock_rdlock@plt>
    5b78:	cbnz	w0, 5c80 <libintl_textdomain@@Base+0x1714>
    5b7c:	adrp	x2, 4000 <libintl_gettext@@Base+0x19e0>
    5b80:	add	x2, x2, #0xdfc
    5b84:	adrp	x1, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    5b88:	add	x1, x1, #0x3d0
    5b8c:	add	x1, x1, #0x50
    5b90:	add	x0, x29, #0xd8
    5b94:	bl	1d60 <tfind@plt>
    5b98:	str	x0, [x29, #160]
    5b9c:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    5ba0:	ldr	x0, [x0, #4064]
    5ba4:	cbz	x0, 5bbc <libintl_textdomain@@Base+0x1650>
    5ba8:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    5bac:	add	x0, x0, #0x2d8
    5bb0:	add	x0, x0, #0x38
    5bb4:	bl	1f80 <pthread_rwlock_unlock@plt>
    5bb8:	cbnz	w0, 5c84 <libintl_textdomain@@Base+0x1718>
    5bbc:	ldr	x0, [x29, #160]
    5bc0:	cbz	x0, 5be0 <libintl_textdomain@@Base+0x1674>
    5bc4:	ldr	x4, [x0]
    5bc8:	ldr	w1, [x4, #24]
    5bcc:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    5bd0:	ldr	x0, [x0, #4032]
    5bd4:	ldr	w0, [x0]
    5bd8:	cmp	w1, w0
    5bdc:	b.eq	5c88 <libintl_textdomain@@Base+0x171c>  // b.none
    5be0:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    5be4:	ldr	w0, [x0, #1064]
    5be8:	cbz	w0, 5cdc <libintl_textdomain@@Base+0x1770>
    5bec:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    5bf0:	ldr	x0, [x0, #4000]
    5bf4:	ldr	x19, [x0]
    5bf8:	cbz	x19, 5e78 <libintl_textdomain@@Base+0x190c>
    5bfc:	add	x1, x19, #0x18
    5c00:	mov	x0, x24
    5c04:	bl	1f00 <strcmp@plt>
    5c08:	cbz	w0, 5d24 <libintl_textdomain@@Base+0x17b8>
    5c0c:	tbnz	w0, #31, 5e84 <libintl_textdomain@@Base+0x1918>
    5c10:	ldr	x19, [x19]
    5c14:	cbnz	x19, 5bfc <libintl_textdomain@@Base+0x1690>
    5c18:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    5c1c:	add	x28, x0, #0x888
    5c20:	b	5db0 <libintl_textdomain@@Base+0x1844>
    5c24:	bl	1ec0 <abort@plt>
    5c28:	cmp	w25, #0x5
    5c2c:	b.eq	5c74 <libintl_textdomain@@Base+0x1708>  // b.none
    5c30:	adrp	x21, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    5c34:	add	x21, x21, #0x7f0
    5c38:	cmp	w25, #0x6
    5c3c:	b.eq	5b34 <libintl_textdomain@@Base+0x15c8>  // b.none
    5c40:	adrp	x21, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    5c44:	add	x0, x21, #0x838
    5c48:	adrp	x21, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    5c4c:	add	x21, x21, #0x7e0
    5c50:	cmp	w25, #0x4
    5c54:	csel	x21, x21, x0, ne  // ne = any
    5c58:	b	5b34 <libintl_textdomain@@Base+0x15c8>
    5c5c:	adrp	x21, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    5c60:	add	x21, x21, #0x7f8
    5c64:	b	5b34 <libintl_textdomain@@Base+0x15c8>
    5c68:	adrp	x21, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    5c6c:	add	x21, x21, #0x808
    5c70:	b	5b34 <libintl_textdomain@@Base+0x15c8>
    5c74:	adrp	x21, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    5c78:	add	x21, x21, #0x828
    5c7c:	b	5b34 <libintl_textdomain@@Base+0x15c8>
    5c80:	bl	1ec0 <abort@plt>
    5c84:	bl	1ec0 <abort@plt>
    5c88:	ldr	w0, [x29, #172]
    5c8c:	cbnz	w0, 5cbc <libintl_textdomain@@Base+0x1750>
    5c90:	ldr	x27, [x4, #40]
    5c94:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    5c98:	ldr	x0, [x0, #4064]
    5c9c:	cbz	x0, 5cb0 <libintl_textdomain@@Base+0x1744>
    5ca0:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    5ca4:	add	x0, x0, #0x2d8
    5ca8:	bl	1f80 <pthread_rwlock_unlock@plt>
    5cac:	cbnz	w0, 5cd8 <libintl_textdomain@@Base+0x176c>
    5cb0:	ldr	w0, [x29, #168]
    5cb4:	str	w0, [x26]
    5cb8:	b	5fc4 <libintl_textdomain@@Base+0x1a58>
    5cbc:	ldr	x3, [x4, #48]
    5cc0:	ldr	x2, [x4, #40]
    5cc4:	ldr	x1, [x29, #144]
    5cc8:	ldr	x0, [x4, #32]
    5ccc:	bl	50e4 <libintl_textdomain@@Base+0xb78>
    5cd0:	mov	x27, x0
    5cd4:	b	5c94 <libintl_textdomain@@Base+0x1728>
    5cd8:	bl	1ec0 <abort@plt>
    5cdc:	bl	1d00 <getuid@plt>
    5ce0:	mov	w19, w0
    5ce4:	bl	1cb0 <geteuid@plt>
    5ce8:	cmp	w19, w0
    5cec:	b.eq	5d00 <libintl_textdomain@@Base+0x1794>  // b.none
    5cf0:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    5cf4:	mov	w1, #0x1                   	// #1
    5cf8:	str	w1, [x0, #1064]
    5cfc:	b	5bec <libintl_textdomain@@Base+0x1680>
    5d00:	bl	1f60 <getgid@plt>
    5d04:	mov	w19, w0
    5d08:	bl	1ca0 <getegid@plt>
    5d0c:	cmp	w19, w0
    5d10:	b.ne	5cf0 <libintl_textdomain@@Base+0x1784>  // b.any
    5d14:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    5d18:	mov	w1, #0xffffffff            	// #-1
    5d1c:	str	w1, [x0, #1064]
    5d20:	b	5bec <libintl_textdomain@@Base+0x1680>
    5d24:	cbz	x19, 5e94 <libintl_textdomain@@Base+0x1928>
    5d28:	ldr	x28, [x19, #8]
    5d2c:	ldrb	w0, [x28]
    5d30:	cmp	w0, #0x2f
    5d34:	b.eq	5db0 <libintl_textdomain@@Base+0x1844>  // b.none
    5d38:	mov	x0, x28
    5d3c:	bl	1c60 <strlen@plt>
    5d40:	add	x23, x0, #0x1
    5d44:	mov	x20, #0x1002                	// #4098
    5d48:	add	x0, x20, x23
    5d4c:	add	x0, x0, #0xf
    5d50:	and	x0, x0, #0xfffffffffffffff0
    5d54:	sub	sp, sp, x0
    5d58:	mov	x22, sp
    5d5c:	str	wzr, [x26]
    5d60:	mov	x1, x20
    5d64:	mov	x0, x22
    5d68:	bl	1c40 <getcwd@plt>
    5d6c:	cbnz	x0, 5d8c <libintl_textdomain@@Base+0x1820>
    5d70:	ldr	w0, [x26]
    5d74:	cmp	w0, #0x22
    5d78:	b.ne	5f78 <libintl_textdomain@@Base+0x1a0c>  // b.any
    5d7c:	lsr	x0, x20, #1
    5d80:	add	x0, x0, #0x20
    5d84:	add	x20, x20, x0
    5d88:	b	5d48 <libintl_textdomain@@Base+0x17dc>
    5d8c:	mov	x0, x22
    5d90:	bl	1c60 <strlen@plt>
    5d94:	add	x2, x22, x0
    5d98:	mov	w1, #0x2f                  	// #47
    5d9c:	strh	w1, [x22, x0]
    5da0:	mov	x1, x28
    5da4:	add	x0, x2, #0x1
    5da8:	bl	1fd0 <strcpy@plt>
    5dac:	mov	x28, x22
    5db0:	mov	x1, x21
    5db4:	mov	w0, w25
    5db8:	bl	706c <libintl_set_relocation_prefix@@Base+0x224>
    5dbc:	mov	x20, x0
    5dc0:	mov	w22, #0x0                   	// #0
    5dc4:	cbz	x0, 5ea0 <libintl_textdomain@@Base+0x1934>
    5dc8:	adrp	x1, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    5dcc:	add	x1, x1, #0x848
    5dd0:	mov	x0, x20
    5dd4:	bl	1f00 <strcmp@plt>
    5dd8:	cbnz	w0, 5ec4 <libintl_textdomain@@Base+0x1958>
    5ddc:	mov	x0, x24
    5de0:	bl	1c60 <strlen@plt>
    5de4:	mov	x22, x0
    5de8:	str	x0, [x29, #120]
    5dec:	add	x0, x0, #0x3a
    5df0:	str	x0, [x29, #128]
    5df4:	mov	x0, x21
    5df8:	bl	1c60 <strlen@plt>
    5dfc:	add	x0, x0, x22
    5e00:	add	x0, x0, #0x14
    5e04:	and	x0, x0, #0xfffffffffffffff0
    5e08:	sub	sp, sp, x0
    5e0c:	mov	x0, sp
    5e10:	str	x0, [x29, #184]
    5e14:	mov	x1, x21
    5e18:	bl	1d70 <stpcpy@plt>
    5e1c:	mov	w1, #0x2f                  	// #47
    5e20:	strh	w1, [x0], #1
    5e24:	mov	x2, x22
    5e28:	mov	x1, x24
    5e2c:	bl	1f70 <mempcpy@plt>
    5e30:	mov	w1, #0x6d2e                	// #27950
    5e34:	movk	w1, #0x6f, lsl #16
    5e38:	str	w1, [x0]
    5e3c:	mov	x0, x20
    5e40:	bl	1c60 <strlen@plt>
    5e44:	add	x0, x0, #0x10
    5e48:	and	x0, x0, #0xfffffffffffffff0
    5e4c:	sub	sp, sp, x0
    5e50:	mov	x21, sp
    5e54:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    5e58:	add	x0, x0, #0x848
    5e5c:	str	x0, [x29, #200]
    5e60:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    5e64:	add	x0, x0, #0x860
    5e68:	str	x0, [x29, #192]
    5e6c:	add	x0, x29, #0x118
    5e70:	str	x0, [x29, #176]
    5e74:	b	5efc <libintl_textdomain@@Base+0x1990>
    5e78:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    5e7c:	add	x28, x0, #0x888
    5e80:	b	5db0 <libintl_textdomain@@Base+0x1844>
    5e84:	mov	x19, #0x0                   	// #0
    5e88:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    5e8c:	add	x28, x0, #0x888
    5e90:	b	5db0 <libintl_textdomain@@Base+0x1844>
    5e94:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    5e98:	add	x28, x0, #0x888
    5e9c:	b	5db0 <libintl_textdomain@@Base+0x1844>
    5ea0:	mov	x1, x21
    5ea4:	mov	w0, w25
    5ea8:	bl	7240 <libintl_set_relocation_prefix@@Base+0x3f8>
    5eac:	mov	x20, x0
    5eb0:	cbnz	x0, 5dc8 <libintl_textdomain@@Base+0x185c>
    5eb4:	bl	72bc <libintl_set_relocation_prefix@@Base+0x474>
    5eb8:	mov	x20, x0
    5ebc:	mov	w22, #0x1                   	// #1
    5ec0:	b	5dc8 <libintl_textdomain@@Base+0x185c>
    5ec4:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    5ec8:	add	x0, x0, #0x850
    5ecc:	bl	2080 <getenv@plt>
    5ed0:	cbz	x0, 5edc <libintl_textdomain@@Base+0x1970>
    5ed4:	ldrb	w1, [x0]
    5ed8:	cbnz	w1, 5ef0 <libintl_textdomain@@Base+0x1984>
    5edc:	cbz	w22, 5ddc <libintl_textdomain@@Base+0x1870>
    5ee0:	bl	7064 <libintl_set_relocation_prefix@@Base+0x21c>
    5ee4:	cmp	x0, #0x0
    5ee8:	csel	x20, x20, x0, eq  // eq = none
    5eec:	b	5ddc <libintl_textdomain@@Base+0x1870>
    5ef0:	mov	x20, x0
    5ef4:	b	5ddc <libintl_textdomain@@Base+0x1870>
    5ef8:	add	x20, x20, #0x1
    5efc:	ldrb	w0, [x20]
    5f00:	cmp	w0, #0x3a
    5f04:	b.eq	5ef8 <libintl_textdomain@@Base+0x198c>  // b.none
    5f08:	cbnz	w0, 5fe8 <libintl_textdomain@@Base+0x1a7c>
    5f0c:	mov	w0, #0x43                  	// #67
    5f10:	strb	w0, [x21]
    5f14:	strb	wzr, [x21, #1]
    5f18:	ldr	x1, [x29, #200]
    5f1c:	mov	x0, x21
    5f20:	bl	1f00 <strcmp@plt>
    5f24:	cbz	w0, 5f78 <libintl_textdomain@@Base+0x1a0c>
    5f28:	ldr	x1, [x29, #192]
    5f2c:	mov	x0, x21
    5f30:	bl	1f00 <strcmp@plt>
    5f34:	cbz	w0, 5f78 <libintl_textdomain@@Base+0x1a0c>
    5f38:	mov	x3, x19
    5f3c:	ldr	x2, [x29, #184]
    5f40:	mov	x1, x21
    5f44:	mov	x0, x28
    5f48:	bl	2640 <libintl_gettext@@Base+0x20>
    5f4c:	mov	x22, x0
    5f50:	cbz	x0, 5efc <libintl_textdomain@@Base+0x1990>
    5f54:	ldr	x4, [x29, #176]
    5f58:	mov	w3, #0x1                   	// #1
    5f5c:	mov	x2, x27
    5f60:	mov	x1, x19
    5f64:	bl	5160 <libintl_textdomain@@Base+0xbf4>
    5f68:	cbz	x0, 6028 <libintl_textdomain@@Base+0x1abc>
    5f6c:	mov	x23, x0
    5f70:	cmn	x0, #0x1
    5f74:	b.ne	609c <libintl_textdomain@@Base+0x1b30>  // b.any
    5f78:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    5f7c:	ldr	x0, [x0, #4064]
    5f80:	cbz	x0, 5f94 <libintl_textdomain@@Base+0x1a28>
    5f84:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    5f88:	add	x0, x0, #0x2d8
    5f8c:	bl	1f80 <pthread_rwlock_unlock@plt>
    5f90:	cbnz	w0, 6240 <libintl_textdomain@@Base+0x1cd4>
    5f94:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    5f98:	ldr	w0, [x0, #1064]
    5f9c:	cmp	w0, #0x1
    5fa0:	b.ne	6244 <libintl_textdomain@@Base+0x1cd8>  // b.any
    5fa4:	ldr	w0, [x29, #168]
    5fa8:	str	w0, [x26]
    5fac:	ldr	w0, [x29, #172]
    5fb0:	cmp	w0, #0x0
    5fb4:	ldr	x0, [x29, #144]
    5fb8:	ccmp	x0, #0x1, #0x4, ne  // ne = any
    5fbc:	ldr	x0, [x29, #152]
    5fc0:	csel	x27, x27, x0, eq  // eq = none
    5fc4:	mov	x0, x27
    5fc8:	mov	sp, x29
    5fcc:	ldp	x19, x20, [sp, #16]
    5fd0:	ldp	x21, x22, [sp, #32]
    5fd4:	ldp	x23, x24, [sp, #48]
    5fd8:	ldp	x25, x26, [sp, #64]
    5fdc:	ldp	x27, x28, [sp, #80]
    5fe0:	ldp	x29, x30, [sp], #288
    5fe4:	ret
    5fe8:	mov	x1, x21
    5fec:	strb	w0, [x1], #1
    5ff0:	ldrb	w0, [x20, #1]!
    5ff4:	cmp	w0, #0x3a
    5ff8:	ccmp	w0, #0x0, #0x4, ne  // ne = any
    5ffc:	b.ne	5fec <libintl_textdomain@@Base+0x1a80>  // b.any
    6000:	strb	wzr, [x1]
    6004:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    6008:	ldr	w0, [x0, #1064]
    600c:	cmp	w0, #0x1
    6010:	b.ne	5f18 <libintl_textdomain@@Base+0x19ac>  // b.any
    6014:	mov	w1, #0x2f                  	// #47
    6018:	mov	x0, x21
    601c:	bl	1fa0 <strchr@plt>
    6020:	cbnz	x0, 5efc <libintl_textdomain@@Base+0x1990>
    6024:	b	5f18 <libintl_textdomain@@Base+0x19ac>
    6028:	ldr	x0, [x22, #32]
    602c:	cbz	x0, 5efc <libintl_textdomain@@Base+0x1990>
    6030:	mov	x23, #0x0                   	// #0
    6034:	add	x1, x22, #0x20
    6038:	str	x20, [x29, #112]
    603c:	str	x21, [x29, #104]
    6040:	str	x22, [x29, #96]
    6044:	mov	x20, x1
    6048:	ldr	x21, [x29, #176]
    604c:	mov	w22, w23
    6050:	mov	x4, x21
    6054:	mov	w3, #0x1                   	// #1
    6058:	mov	x2, x27
    605c:	mov	x1, x19
    6060:	bl	5160 <libintl_textdomain@@Base+0xbf4>
    6064:	cmn	x0, #0x1
    6068:	b.eq	5f78 <libintl_textdomain@@Base+0x1a0c>  // b.none
    606c:	cbnz	x0, 6088 <libintl_textdomain@@Base+0x1b1c>
    6070:	add	x23, x23, #0x1
    6074:	ldr	x0, [x20, x23, lsl #3]
    6078:	cbnz	x0, 604c <libintl_textdomain@@Base+0x1ae0>
    607c:	ldr	x20, [x29, #112]
    6080:	ldr	x21, [x29, #104]
    6084:	b	5efc <libintl_textdomain@@Base+0x1990>
    6088:	mov	x23, x0
    608c:	mov	w0, w22
    6090:	ldr	x22, [x29, #96]
    6094:	add	x22, x22, w0, sxtw #3
    6098:	ldr	x22, [x22, #32]
    609c:	ldr	x0, [x29, #160]
    60a0:	cbz	x0, 610c <libintl_textdomain@@Base+0x1ba0>
    60a4:	ldr	x2, [x29, #160]
    60a8:	ldr	x1, [x2]
    60ac:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    60b0:	ldr	x0, [x0, #4032]
    60b4:	ldr	w0, [x0]
    60b8:	str	w0, [x1, #24]
    60bc:	ldr	x0, [x2]
    60c0:	str	x22, [x0, #32]
    60c4:	ldr	x0, [x2]
    60c8:	str	x23, [x0, #40]
    60cc:	ldr	x0, [x2]
    60d0:	ldr	x1, [x29, #280]
    60d4:	str	x1, [x0, #48]
    60d8:	ldr	w0, [x29, #168]
    60dc:	str	w0, [x26]
    60e0:	mov	x27, x23
    60e4:	ldr	w0, [x29, #172]
    60e8:	cbnz	w0, 6224 <libintl_textdomain@@Base+0x1cb8>
    60ec:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    60f0:	ldr	x0, [x0, #4064]
    60f4:	cbz	x0, 5fc4 <libintl_textdomain@@Base+0x1a58>
    60f8:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    60fc:	add	x0, x0, #0x2d8
    6100:	bl	1f80 <pthread_rwlock_unlock@plt>
    6104:	cbz	w0, 5fc4 <libintl_textdomain@@Base+0x1a58>
    6108:	bl	1ec0 <abort@plt>
    610c:	mov	x0, x27
    6110:	bl	1c60 <strlen@plt>
    6114:	add	x19, x0, #0x1
    6118:	ldr	x28, [x29, #136]
    611c:	mov	x0, x28
    6120:	bl	1c60 <strlen@plt>
    6124:	add	x0, x0, x19
    6128:	ldr	x1, [x29, #128]
    612c:	add	x0, x0, x1
    6130:	bl	1db0 <malloc@plt>
    6134:	mov	x20, x0
    6138:	cbz	x0, 60d8 <libintl_textdomain@@Base+0x1b6c>
    613c:	mov	x2, x19
    6140:	mov	x1, x27
    6144:	add	x0, x0, #0x38
    6148:	bl	1f70 <mempcpy@plt>
    614c:	mov	x21, x0
    6150:	ldr	x1, [x29, #120]
    6154:	add	x19, x1, #0x1
    6158:	mov	x2, x19
    615c:	mov	x1, x24
    6160:	bl	1c10 <memcpy@plt>
    6164:	add	x19, x21, x19
    6168:	mov	x1, x28
    616c:	mov	x0, x19
    6170:	bl	1fd0 <strcpy@plt>
    6174:	str	x21, [x20]
    6178:	str	w25, [x20, #8]
    617c:	str	x19, [x20, #16]
    6180:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    6184:	ldr	x0, [x0, #4032]
    6188:	ldr	w0, [x0]
    618c:	str	w0, [x20, #24]
    6190:	str	x22, [x20, #32]
    6194:	str	x23, [x20, #40]
    6198:	ldr	x0, [x29, #280]
    619c:	str	x0, [x20, #48]
    61a0:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    61a4:	ldr	x0, [x0, #4064]
    61a8:	cbz	x0, 61c0 <libintl_textdomain@@Base+0x1c54>
    61ac:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    61b0:	add	x0, x0, #0x2d8
    61b4:	add	x0, x0, #0x38
    61b8:	bl	1ed0 <pthread_rwlock_wrlock@plt>
    61bc:	cbnz	w0, 621c <libintl_textdomain@@Base+0x1cb0>
    61c0:	adrp	x2, 4000 <libintl_gettext@@Base+0x19e0>
    61c4:	add	x2, x2, #0xdfc
    61c8:	adrp	x1, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    61cc:	add	x1, x1, #0x3d0
    61d0:	add	x1, x1, #0x50
    61d4:	mov	x0, x20
    61d8:	bl	1e10 <tsearch@plt>
    61dc:	mov	x19, x0
    61e0:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    61e4:	ldr	x0, [x0, #4064]
    61e8:	cbz	x0, 6200 <libintl_textdomain@@Base+0x1c94>
    61ec:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    61f0:	add	x0, x0, #0x2d8
    61f4:	add	x0, x0, #0x38
    61f8:	bl	1f80 <pthread_rwlock_unlock@plt>
    61fc:	cbnz	w0, 6220 <libintl_textdomain@@Base+0x1cb4>
    6200:	cbz	x19, 6210 <libintl_textdomain@@Base+0x1ca4>
    6204:	ldr	x0, [x19]
    6208:	cmp	x0, x20
    620c:	b.eq	60d8 <libintl_textdomain@@Base+0x1b6c>  // b.none
    6210:	mov	x0, x20
    6214:	bl	1f50 <free@plt>
    6218:	b	60d8 <libintl_textdomain@@Base+0x1b6c>
    621c:	bl	1ec0 <abort@plt>
    6220:	bl	1ec0 <abort@plt>
    6224:	ldr	x3, [x29, #280]
    6228:	mov	x2, x23
    622c:	ldr	x1, [x29, #144]
    6230:	mov	x0, x22
    6234:	bl	50e4 <libintl_textdomain@@Base+0xb78>
    6238:	mov	x27, x0
    623c:	b	60ec <libintl_textdomain@@Base+0x1b80>
    6240:	bl	1ec0 <abort@plt>
    6244:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    6248:	add	x0, x0, #0x868
    624c:	bl	2080 <getenv@plt>
    6250:	cbz	x0, 5fa4 <libintl_textdomain@@Base+0x1a38>
    6254:	ldrb	w1, [x0]
    6258:	cbz	w1, 5fa4 <libintl_textdomain@@Base+0x1a38>
    625c:	ldr	w4, [x29, #172]
    6260:	ldr	x3, [x29, #152]
    6264:	mov	x2, x27
    6268:	mov	x1, x24
    626c:	bl	7408 <libintl_set_relocation_prefix@@Base+0x5c0>
    6270:	b	5fa4 <libintl_textdomain@@Base+0x1a38>

0000000000006274 <libintl_dcngettext@@Base>:
    6274:	stp	x29, x30, [sp, #-16]!
    6278:	mov	x29, sp
    627c:	mov	w5, w4
    6280:	mov	x4, x3
    6284:	mov	w3, #0x1                   	// #1
    6288:	bl	5a74 <libintl_textdomain@@Base+0x1508>
    628c:	ldp	x29, x30, [sp], #16
    6290:	ret

0000000000006294 <libintl_dngettext@@Base>:
    6294:	stp	x29, x30, [sp, #-16]!
    6298:	mov	x29, sp
    629c:	mov	w4, #0x5                   	// #5
    62a0:	bl	1e00 <libintl_dcngettext@plt>
    62a4:	ldp	x29, x30, [sp], #16
    62a8:	ret

00000000000062ac <libintl_ngettext@@Base>:
    62ac:	stp	x29, x30, [sp, #-16]!
    62b0:	mov	x29, sp
    62b4:	mov	w4, #0x5                   	// #5
    62b8:	mov	x3, x2
    62bc:	mov	x2, x1
    62c0:	mov	x1, x0
    62c4:	mov	x0, #0x0                   	// #0
    62c8:	bl	1e00 <libintl_dcngettext@plt>
    62cc:	ldp	x29, x30, [sp], #16
    62d0:	ret
    62d4:	cbz	x0, 6334 <libintl_ngettext@@Base+0x88>
    62d8:	stp	x29, x30, [sp, #-32]!
    62dc:	mov	x29, sp
    62e0:	str	x19, [sp, #16]
    62e4:	mov	x19, x0
    62e8:	ldr	w0, [x0]
    62ec:	cmp	w0, #0x2
    62f0:	b.eq	6310 <libintl_ngettext@@Base+0x64>  // b.none
    62f4:	cmp	w0, #0x3
    62f8:	b.eq	6308 <libintl_ngettext@@Base+0x5c>  // b.none
    62fc:	cmp	w0, #0x1
    6300:	b.ne	6320 <libintl_ngettext@@Base+0x74>  // b.any
    6304:	b	6318 <libintl_ngettext@@Base+0x6c>
    6308:	ldr	x0, [x19, #24]
    630c:	bl	62d4 <libintl_ngettext@@Base+0x28>
    6310:	ldr	x0, [x19, #16]
    6314:	bl	62d4 <libintl_ngettext@@Base+0x28>
    6318:	ldr	x0, [x19, #8]
    631c:	bl	62d4 <libintl_ngettext@@Base+0x28>
    6320:	mov	x0, x19
    6324:	bl	1f50 <free@plt>
    6328:	ldr	x19, [sp, #16]
    632c:	ldp	x29, x30, [sp], #32
    6330:	ret
    6334:	ret
    6338:	stp	x29, x30, [sp, #-64]!
    633c:	mov	x29, sp
    6340:	stp	x21, x22, [sp, #32]
    6344:	str	x23, [sp, #48]
    6348:	mov	w22, w0
    634c:	mov	w23, w1
    6350:	subs	w21, w0, #0x1
    6354:	b.mi	63d4 <libintl_ngettext@@Base+0x128>  // b.first
    6358:	stp	x19, x20, [sp, #16]
    635c:	mov	x20, x2
    6360:	sxtw	x19, w21
    6364:	mov	x3, x19
    6368:	ldr	x4, [x20, x3, lsl #3]
    636c:	cbz	x4, 63ac <libintl_ngettext@@Base+0x100>
    6370:	sub	x3, x3, #0x1
    6374:	tbz	w3, #31, 6368 <libintl_ngettext@@Base+0xbc>
    6378:	mov	x0, #0x20                  	// #32
    637c:	bl	1db0 <malloc@plt>
    6380:	cbz	x0, 63ac <libintl_ngettext@@Base+0x100>
    6384:	str	w22, [x0]
    6388:	str	w23, [x0, #4]
    638c:	sxtw	x1, w21
    6390:	add	x3, x0, #0x8
    6394:	ldr	x2, [x20, x1, lsl #3]
    6398:	str	x2, [x3, x1, lsl #3]
    639c:	sub	x1, x1, #0x1
    63a0:	tbz	w1, #31, 6394 <libintl_ngettext@@Base+0xe8>
    63a4:	ldp	x19, x20, [sp, #16]
    63a8:	b	63c4 <libintl_ngettext@@Base+0x118>
    63ac:	ldr	x0, [x20, x19, lsl #3]
    63b0:	bl	62d4 <libintl_ngettext@@Base+0x28>
    63b4:	sub	x19, x19, #0x1
    63b8:	tbz	w19, #31, 63ac <libintl_ngettext@@Base+0x100>
    63bc:	mov	x0, #0x0                   	// #0
    63c0:	ldp	x19, x20, [sp, #16]
    63c4:	ldp	x21, x22, [sp, #32]
    63c8:	ldr	x23, [sp, #48]
    63cc:	ldp	x29, x30, [sp], #64
    63d0:	ret
    63d4:	mov	x0, #0x20                  	// #32
    63d8:	bl	1db0 <malloc@plt>
    63dc:	cbz	x0, 63c4 <libintl_ngettext@@Base+0x118>
    63e0:	str	w22, [x0]
    63e4:	str	w23, [x0, #4]
    63e8:	b	63c4 <libintl_ngettext@@Base+0x118>
    63ec:	stp	x29, x30, [sp, #-32]!
    63f0:	mov	x29, sp
    63f4:	str	x1, [sp, #16]
    63f8:	str	x2, [sp, #24]
    63fc:	add	x2, sp, #0x10
    6400:	mov	w1, w0
    6404:	mov	w0, #0x2                   	// #2
    6408:	bl	6338 <libintl_ngettext@@Base+0x8c>
    640c:	ldp	x29, x30, [sp], #32
    6410:	ret
    6414:	sub	sp, sp, #0x890
    6418:	stp	x29, x30, [sp]
    641c:	mov	x29, sp
    6420:	stp	x19, x20, [sp, #16]
    6424:	stp	x21, x22, [sp, #32]
    6428:	stp	x23, x24, [sp, #48]
    642c:	stp	x25, x26, [sp, #64]
    6430:	stp	x27, x28, [sp, #80]
    6434:	str	x0, [sp, #136]
    6438:	strh	wzr, [sp, #1792]
    643c:	str	wzr, [sp, #116]
    6440:	mov	w20, #0x0                   	// #0
    6444:	mov	w25, #0xfffffffe            	// #-2
    6448:	mov	x23, #0xc8                  	// #200
    644c:	add	x27, sp, #0xc0
    6450:	str	x27, [sp, #104]
    6454:	add	x19, sp, #0x700
    6458:	mov	x22, x19
    645c:	adrp	x21, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    6460:	add	x21, x21, #0x9e8
    6464:	add	x26, x21, #0x128
    6468:	add	x0, x21, #0x160
    646c:	str	x0, [sp, #96]
    6470:	b	67e8 <libintl_ngettext@@Base+0x53c>
    6474:	ldr	x0, [sp, #136]
    6478:	ldr	x2, [x0]
    647c:	ldrb	w0, [x2]
    6480:	cbz	w0, 6498 <libintl_ngettext@@Base+0x1ec>
    6484:	cmp	w0, #0x20
    6488:	ccmp	w0, #0x9, #0x4, ne  // ne = any
    648c:	b.ne	64ac <libintl_ngettext@@Base+0x200>  // b.any
    6490:	ldrb	w0, [x2, #1]!
    6494:	cbnz	w0, 6484 <libintl_ngettext@@Base+0x1d8>
    6498:	ldr	x0, [sp, #136]
    649c:	str	x2, [x0]
    64a0:	mov	w0, #0x0                   	// #0
    64a4:	mov	w25, #0x0                   	// #0
    64a8:	b	6810 <libintl_ngettext@@Base+0x564>
    64ac:	add	x3, x2, #0x1
    64b0:	mov	w25, w0
    64b4:	cmp	w0, #0x7c
    64b8:	b.hi	6bbc <libintl_ngettext@@Base+0x910>  // b.pmore
    64bc:	adrp	x4, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    64c0:	add	x4, x4, #0x8e8
    64c4:	ldrh	w4, [x4, w0, uxtw #1]
    64c8:	adr	x5, 64d4 <libintl_ngettext@@Base+0x228>
    64cc:	add	x4, x5, w4, sxth #2
    64d0:	br	x4
    64d4:	sub	w0, w0, #0x30
    64d8:	sxtw	x4, w0
    64dc:	ldrb	w0, [x2, #1]
    64e0:	sub	w2, w0, #0x30
    64e4:	and	w2, w2, #0xff
    64e8:	cmp	w2, #0x9
    64ec:	b.hi	6514 <libintl_ngettext@@Base+0x268>  // b.pmore
    64f0:	add	x4, x4, x4, lsl #2
    64f4:	sub	w0, w0, #0x30
    64f8:	sxtw	x0, w0
    64fc:	add	x4, x0, x4, lsl #1
    6500:	ldrb	w0, [x3, #1]!
    6504:	sub	w2, w0, #0x30
    6508:	and	w2, w2, #0xff
    650c:	cmp	w2, #0x9
    6510:	b.ls	64f0 <libintl_ngettext@@Base+0x244>  // b.plast
    6514:	str	x4, [sp, #152]
    6518:	mov	w25, #0x106                 	// #262
    651c:	b	6bc0 <libintl_ngettext@@Base+0x914>
    6520:	ldrb	w0, [x2, #1]
    6524:	mov	w25, #0x100                 	// #256
    6528:	cmp	w0, #0x3d
    652c:	b.ne	6bc0 <libintl_ngettext@@Base+0x914>  // b.any
    6530:	add	x3, x2, #0x2
    6534:	mov	x0, #0xc                   	// #12
    6538:	ldr	x2, [sp, #152]
    653c:	bfxil	x2, x0, #0, #32
    6540:	str	x2, [sp, #152]
    6544:	mov	w25, #0x102                 	// #258
    6548:	b	6bc0 <libintl_ngettext@@Base+0x914>
    654c:	ldrb	w0, [x2, #1]
    6550:	mov	w25, #0x21                  	// #33
    6554:	cmp	w0, #0x3d
    6558:	b.ne	6bc0 <libintl_ngettext@@Base+0x914>  // b.any
    655c:	add	x3, x2, #0x2
    6560:	mov	x0, #0xd                   	// #13
    6564:	ldr	x2, [sp, #152]
    6568:	bfxil	x2, x0, #0, #32
    656c:	str	x2, [sp, #152]
    6570:	mov	w25, #0x102                 	// #258
    6574:	b	6bc0 <libintl_ngettext@@Base+0x914>
    6578:	ldrb	w4, [x2, #1]
    657c:	cmp	w4, w0
    6580:	b.eq	658c <libintl_ngettext@@Base+0x2e0>  // b.none
    6584:	mov	w25, #0x100                 	// #256
    6588:	b	6bc0 <libintl_ngettext@@Base+0x914>
    658c:	add	x3, x2, #0x2
    6590:	ldr	x0, [sp, #136]
    6594:	str	x3, [x0]
    6598:	cmp	w25, #0x0
    659c:	b.gt	6bc8 <libintl_ngettext@@Base+0x91c>
    65a0:	mov	w0, #0x0                   	// #0
    65a4:	mov	w25, #0x0                   	// #0
    65a8:	b	6810 <libintl_ngettext@@Base+0x564>
    65ac:	ldrb	w0, [x2, #1]
    65b0:	cmp	w0, #0x3d
    65b4:	b.eq	65d0 <libintl_ngettext@@Base+0x324>  // b.none
    65b8:	mov	x0, #0x8                   	// #8
    65bc:	ldr	x2, [sp, #152]
    65c0:	bfxil	x2, x0, #0, #32
    65c4:	str	x2, [sp, #152]
    65c8:	mov	w25, #0x103                 	// #259
    65cc:	b	6bc0 <libintl_ngettext@@Base+0x914>
    65d0:	add	x3, x2, #0x2
    65d4:	mov	x0, #0xa                   	// #10
    65d8:	ldr	x2, [sp, #152]
    65dc:	bfxil	x2, x0, #0, #32
    65e0:	str	x2, [sp, #152]
    65e4:	mov	w25, #0x103                 	// #259
    65e8:	b	6bc0 <libintl_ngettext@@Base+0x914>
    65ec:	ldrb	w0, [x2, #1]
    65f0:	cmp	w0, #0x3d
    65f4:	b.eq	6610 <libintl_ngettext@@Base+0x364>  // b.none
    65f8:	mov	x0, #0x9                   	// #9
    65fc:	ldr	x2, [sp, #152]
    6600:	bfxil	x2, x0, #0, #32
    6604:	str	x2, [sp, #152]
    6608:	mov	w25, #0x103                 	// #259
    660c:	b	6bc0 <libintl_ngettext@@Base+0x914>
    6610:	add	x3, x2, #0x2
    6614:	mov	x0, #0xb                   	// #11
    6618:	ldr	x2, [sp, #152]
    661c:	bfxil	x2, x0, #0, #32
    6620:	str	x2, [sp, #152]
    6624:	mov	w25, #0x103                 	// #259
    6628:	b	6bc0 <libintl_ngettext@@Base+0x914>
    662c:	mov	x0, #0x3                   	// #3
    6630:	ldr	x2, [sp, #152]
    6634:	bfxil	x2, x0, #0, #32
    6638:	str	x2, [sp, #152]
    663c:	mov	w25, #0x105                 	// #261
    6640:	b	6bc0 <libintl_ngettext@@Base+0x914>
    6644:	mov	x0, #0x4                   	// #4
    6648:	ldr	x2, [sp, #152]
    664c:	bfxil	x2, x0, #0, #32
    6650:	str	x2, [sp, #152]
    6654:	mov	w25, #0x105                 	// #261
    6658:	b	6bc0 <libintl_ngettext@@Base+0x914>
    665c:	mov	x0, #0x5                   	// #5
    6660:	ldr	x2, [sp, #152]
    6664:	bfxil	x2, x0, #0, #32
    6668:	str	x2, [sp, #152]
    666c:	mov	w25, #0x105                 	// #261
    6670:	b	6bc0 <libintl_ngettext@@Base+0x914>
    6674:	mov	x0, #0x6                   	// #6
    6678:	ldr	x2, [sp, #152]
    667c:	bfxil	x2, x0, #0, #32
    6680:	str	x2, [sp, #152]
    6684:	mov	w25, #0x104                 	// #260
    6688:	b	6bc0 <libintl_ngettext@@Base+0x914>
    668c:	mov	x0, #0x7                   	// #7
    6690:	ldr	x2, [sp, #152]
    6694:	bfxil	x2, x0, #0, #32
    6698:	str	x2, [sp, #152]
    669c:	mov	w25, #0x104                 	// #260
    66a0:	b	6bc0 <libintl_ngettext@@Base+0x914>
    66a4:	mov	x3, x2
    66a8:	mov	w25, #0x0                   	// #0
    66ac:	b	6590 <libintl_ngettext@@Base+0x2e4>
    66b0:	mov	w0, #0x0                   	// #0
    66b4:	mov	w25, #0x0                   	// #0
    66b8:	b	6810 <libintl_ngettext@@Base+0x564>
    66bc:	ldr	x0, [x27, #8]
    66c0:	mov	w2, #0x0                   	// #0
    66c4:	sub	x3, x27, w20, uxtb #3
    66c8:	sub	x1, x19, w20, uxtb #1
    66cc:	add	x27, x3, #0x8
    66d0:	str	x0, [x3, #8]
    66d4:	add	x0, x21, #0x1c8
    66d8:	ldrb	w0, [x0, w2, sxtw]
    66dc:	sub	w0, w0, #0x10
    66e0:	ldrsh	w3, [x1]
    66e4:	add	x2, x21, #0x1d8
    66e8:	ldrsb	w2, [x2, w0, sxtw]
    66ec:	add	w2, w2, w3
    66f0:	cmp	w2, #0x36
    66f4:	b.hi	6704 <libintl_ngettext@@Base+0x458>  // b.pmore
    66f8:	ldrsb	w4, [x26, w2, sxtw]
    66fc:	cmp	w4, w3
    6700:	b.eq	6a30 <libintl_ngettext@@Base+0x784>  // b.none
    6704:	add	x2, x21, #0x1e0
    6708:	ldrsb	w20, [x2, w0, sxtw]
    670c:	add	x19, x1, #0x2
    6710:	strh	w20, [x1, #2]
    6714:	lsl	x1, x23, #1
    6718:	sub	x0, x1, #0x2
    671c:	add	x0, x22, x0
    6720:	cmp	x19, x0
    6724:	b.cc	67e0 <libintl_ngettext@@Base+0x534>  // b.lo, b.ul, b.last
    6728:	sub	x27, x19, x22
    672c:	asr	x0, x27, #1
    6730:	add	x0, x0, #0x1
    6734:	str	x0, [sp, #120]
    6738:	mov	x0, #0x270f                	// #9999
    673c:	cmp	x23, x0
    6740:	b.hi	6aec <libintl_ngettext@@Base+0x840>  // b.pmore
    6744:	mov	x23, #0x2710                	// #10000
    6748:	cmp	x1, x23
    674c:	csel	x23, x1, x23, ls  // ls = plast
    6750:	add	x0, x23, x23, lsl #2
    6754:	lsl	x0, x0, #1
    6758:	add	x0, x0, #0x7
    675c:	bl	1db0 <malloc@plt>
    6760:	mov	x24, x0
    6764:	cbz	x0, 6aec <libintl_ngettext@@Base+0x840>
    6768:	str	x0, [sp, #144]
    676c:	add	x2, x27, #0x2
    6770:	mov	x1, x22
    6774:	bl	1c10 <memcpy@plt>
    6778:	lsl	x1, x23, #1
    677c:	str	x1, [sp, #128]
    6780:	add	x28, x24, x23, lsl #1
    6784:	ldr	x0, [sp, #120]
    6788:	lsl	x0, x0, #3
    678c:	str	x0, [sp, #120]
    6790:	mov	x2, x0
    6794:	ldr	x1, [sp, #104]
    6798:	mov	x0, x28
    679c:	bl	1c10 <memcpy@plt>
    67a0:	add	x0, sp, #0x700
    67a4:	cmp	x22, x0
    67a8:	b.eq	67b4 <libintl_ngettext@@Base+0x508>  // b.none
    67ac:	mov	x0, x22
    67b0:	bl	1f50 <free@plt>
    67b4:	add	x19, x24, x27
    67b8:	ldr	x0, [sp, #120]
    67bc:	sub	x27, x0, #0x8
    67c0:	add	x27, x28, x27
    67c4:	ldr	x0, [sp, #128]
    67c8:	sub	x0, x0, #0x2
    67cc:	add	x0, x24, x0
    67d0:	cmp	x19, x0
    67d4:	b.cs	6b94 <libintl_ngettext@@Base+0x8e8>  // b.hs, b.nlast
    67d8:	str	x28, [sp, #104]
    67dc:	mov	x22, x24
    67e0:	cmp	w20, #0x9
    67e4:	b.eq	6b18 <libintl_ngettext@@Base+0x86c>  // b.none
    67e8:	ldrsb	w1, [x21, w20, sxtw]
    67ec:	cmn	w1, #0xa
    67f0:	b.eq	6860 <libintl_ngettext@@Base+0x5b4>  // b.none
    67f4:	cmn	w25, #0x2
    67f8:	b.eq	6474 <libintl_ngettext@@Base+0x1c8>  // b.none
    67fc:	cmp	w25, #0x0
    6800:	b.le	66b0 <libintl_ngettext@@Base+0x404>
    6804:	mov	w0, #0x2                   	// #2
    6808:	cmp	w25, #0x106
    680c:	b.ls	6bc8 <libintl_ngettext@@Base+0x91c>  // b.plast
    6810:	add	w1, w0, w1
    6814:	cmp	w1, #0x36
    6818:	b.hi	6860 <libintl_ngettext@@Base+0x5b4>  // b.pmore
    681c:	ldrsb	w2, [x26, w1, sxtw]
    6820:	cmp	w2, w0
    6824:	b.ne	6860 <libintl_ngettext@@Base+0x5b4>  // b.any
    6828:	ldr	x0, [sp, #96]
    682c:	ldrb	w20, [x0, w1, sxtw]
    6830:	cbz	w20, 66bc <libintl_ngettext@@Base+0x410>
    6834:	ldr	w1, [sp, #116]
    6838:	cmp	w1, #0x0
    683c:	cset	w0, ne  // ne = any
    6840:	sub	w0, w1, w0
    6844:	str	w0, [sp, #116]
    6848:	ldr	x0, [sp, #152]
    684c:	str	x0, [x27, #8]
    6850:	add	x27, x27, #0x8
    6854:	mov	x1, x19
    6858:	mov	w25, #0xfffffffe            	// #-2
    685c:	b	670c <libintl_ngettext@@Base+0x460>
    6860:	add	x0, x21, #0x198
    6864:	ldrb	w1, [x0, w20, sxtw]
    6868:	mov	w2, w1
    686c:	cbz	w1, 6a3c <libintl_ngettext@@Base+0x790>
    6870:	add	x0, x21, #0x1b8
    6874:	ldrb	w20, [x0, w1, sxtw]
    6878:	mov	w0, #0x1                   	// #1
    687c:	sub	w0, w0, w20
    6880:	ldr	x0, [x27, w0, sxtw #3]
    6884:	cmp	w1, #0x7
    6888:	b.eq	69c4 <libintl_ngettext@@Base+0x718>  // b.none
    688c:	b.ls	68cc <libintl_ngettext@@Base+0x620>  // b.plast
    6890:	cmp	w1, #0xb
    6894:	b.eq	69f4 <libintl_ngettext@@Base+0x748>  // b.none
    6898:	b.hi	6960 <libintl_ngettext@@Base+0x6b4>  // b.pmore
    689c:	cmp	w1, #0x9
    68a0:	b.eq	69dc <libintl_ngettext@@Base+0x730>  // b.none
    68a4:	cmp	w1, #0xa
    68a8:	b.ne	6940 <libintl_ngettext@@Base+0x694>  // b.any
    68ac:	ldr	x0, [x27]
    68b0:	str	x0, [sp, #168]
    68b4:	add	x2, sp, #0xa8
    68b8:	mov	w1, #0x2                   	// #2
    68bc:	mov	w0, #0x1                   	// #1
    68c0:	bl	6338 <libintl_ngettext@@Base+0x8c>
    68c4:	mov	w2, #0xa                   	// #10
    68c8:	b	66c4 <libintl_ngettext@@Base+0x418>
    68cc:	cmp	w1, #0x4
    68d0:	b.eq	6994 <libintl_ngettext@@Base+0x6e8>  // b.none
    68d4:	b.ls	6900 <libintl_ngettext@@Base+0x654>  // b.plast
    68d8:	cmp	w1, #0x5
    68dc:	b.eq	69ac <libintl_ngettext@@Base+0x700>  // b.none
    68e0:	cmp	w1, #0x6
    68e4:	b.ne	66c4 <libintl_ngettext@@Base+0x418>  // b.any
    68e8:	ldr	x2, [x27]
    68ec:	ldur	x1, [x27, #-16]
    68f0:	ldur	w0, [x27, #-8]
    68f4:	bl	63ec <libintl_ngettext@@Base+0x140>
    68f8:	mov	w2, #0x6                   	// #6
    68fc:	b	66c4 <libintl_ngettext@@Base+0x418>
    6900:	cmp	w1, #0x2
    6904:	b.eq	697c <libintl_ngettext@@Base+0x6d0>  // b.none
    6908:	cmp	w1, #0x3
    690c:	b.ne	66c4 <libintl_ngettext@@Base+0x418>  // b.any
    6910:	ldur	x1, [x27, #-16]
    6914:	ldr	x0, [x27]
    6918:	ldur	x2, [x27, #-32]
    691c:	str	x2, [sp, #168]
    6920:	str	x1, [sp, #176]
    6924:	str	x0, [sp, #184]
    6928:	add	x2, sp, #0xa8
    692c:	mov	w1, #0x10                  	// #16
    6930:	mov	w0, #0x3                   	// #3
    6934:	bl	6338 <libintl_ngettext@@Base+0x8c>
    6938:	mov	w2, #0x3                   	// #3
    693c:	b	66c4 <libintl_ngettext@@Base+0x418>
    6940:	cmp	w1, #0x8
    6944:	b.ne	66c4 <libintl_ngettext@@Base+0x418>  // b.any
    6948:	ldr	x2, [x27]
    694c:	ldur	x1, [x27, #-16]
    6950:	ldur	w0, [x27, #-8]
    6954:	bl	63ec <libintl_ngettext@@Base+0x140>
    6958:	mov	w2, #0x8                   	// #8
    695c:	b	66c4 <libintl_ngettext@@Base+0x418>
    6960:	cmp	w1, #0xc
    6964:	b.eq	6a0c <libintl_ngettext@@Base+0x760>  // b.none
    6968:	cmp	w1, #0xd
    696c:	b.ne	66c4 <libintl_ngettext@@Base+0x418>  // b.any
    6970:	ldur	x0, [x27, #-8]
    6974:	mov	w2, #0xd                   	// #13
    6978:	b	66c4 <libintl_ngettext@@Base+0x418>
    697c:	ldr	x1, [x27]
    6980:	cbz	x1, 6b78 <libintl_ngettext@@Base+0x8cc>
    6984:	ldr	x2, [sp, #136]
    6988:	str	x1, [x2, #8]
    698c:	mov	w2, #0x2                   	// #2
    6990:	b	66c4 <libintl_ngettext@@Base+0x418>
    6994:	ldr	x2, [x27]
    6998:	ldur	x1, [x27, #-16]
    699c:	mov	w0, #0xf                   	// #15
    69a0:	bl	63ec <libintl_ngettext@@Base+0x140>
    69a4:	mov	w2, #0x4                   	// #4
    69a8:	b	66c4 <libintl_ngettext@@Base+0x418>
    69ac:	ldr	x2, [x27]
    69b0:	ldur	x1, [x27, #-16]
    69b4:	mov	w0, #0xe                   	// #14
    69b8:	bl	63ec <libintl_ngettext@@Base+0x140>
    69bc:	mov	w2, #0x5                   	// #5
    69c0:	b	66c4 <libintl_ngettext@@Base+0x418>
    69c4:	ldr	x2, [x27]
    69c8:	ldur	x1, [x27, #-16]
    69cc:	ldur	w0, [x27, #-8]
    69d0:	bl	63ec <libintl_ngettext@@Base+0x140>
    69d4:	mov	w2, #0x7                   	// #7
    69d8:	b	66c4 <libintl_ngettext@@Base+0x418>
    69dc:	ldr	x2, [x27]
    69e0:	ldur	x1, [x27, #-16]
    69e4:	ldur	w0, [x27, #-8]
    69e8:	bl	63ec <libintl_ngettext@@Base+0x140>
    69ec:	mov	w2, #0x9                   	// #9
    69f0:	b	66c4 <libintl_ngettext@@Base+0x418>
    69f4:	mov	x2, #0x0                   	// #0
    69f8:	mov	w1, #0x0                   	// #0
    69fc:	mov	w0, #0x0                   	// #0
    6a00:	bl	6338 <libintl_ngettext@@Base+0x8c>
    6a04:	mov	w2, #0xb                   	// #11
    6a08:	b	66c4 <libintl_ngettext@@Base+0x418>
    6a0c:	mov	x2, #0x0                   	// #0
    6a10:	mov	w1, #0x1                   	// #1
    6a14:	mov	w0, #0x0                   	// #0
    6a18:	bl	6338 <libintl_ngettext@@Base+0x8c>
    6a1c:	mov	w2, #0xc                   	// #12
    6a20:	cbz	x0, 66c4 <libintl_ngettext@@Base+0x418>
    6a24:	ldr	x1, [x27]
    6a28:	str	x1, [x0, #8]
    6a2c:	b	66c4 <libintl_ngettext@@Base+0x418>
    6a30:	ldr	x0, [sp, #96]
    6a34:	ldrb	w20, [x0, w2, sxtw]
    6a38:	b	670c <libintl_ngettext@@Base+0x460>
    6a3c:	ldr	w0, [sp, #116]
    6a40:	cbz	w0, 6a6c <libintl_ngettext@@Base+0x7c0>
    6a44:	ldr	w0, [sp, #116]
    6a48:	cmp	w0, #0x3
    6a4c:	b.ne	6aa0 <libintl_ngettext@@Base+0x7f4>  // b.any
    6a50:	cmp	w25, #0x0
    6a54:	b.gt	6a88 <libintl_ngettext@@Base+0x7dc>
    6a58:	cbnz	w25, 6aa0 <libintl_ngettext@@Base+0x7f4>
    6a5c:	mov	x0, x19
    6a60:	mov	x19, x22
    6a64:	mov	w20, #0x1                   	// #1
    6a68:	b	6b28 <libintl_ngettext@@Base+0x87c>
    6a6c:	mov	w2, #0x5                   	// #5
    6a70:	adrp	x1, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    6a74:	add	x1, x1, #0x8b0
    6a78:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    6a7c:	add	x0, x0, #0x8c0
    6a80:	bl	1ee0 <dcgettext@plt>
    6a84:	b	6aa0 <libintl_ngettext@@Base+0x7f4>
    6a88:	mov	w25, #0xfffffffe            	// #-2
    6a8c:	b	6aa0 <libintl_ngettext@@Base+0x7f4>
    6a90:	cmp	x19, x22
    6a94:	b.eq	6b8c <libintl_ngettext@@Base+0x8e0>  // b.none
    6a98:	sub	x27, x27, #0x8
    6a9c:	ldrsh	w20, [x19, #-2]!
    6aa0:	ldrsb	w0, [x21, w20, sxtw]
    6aa4:	cmn	w0, #0xa
    6aa8:	b.eq	6a90 <libintl_ngettext@@Base+0x7e4>  // b.none
    6aac:	add	w0, w0, #0x1
    6ab0:	cmp	w0, #0x36
    6ab4:	b.hi	6a90 <libintl_ngettext@@Base+0x7e4>  // b.pmore
    6ab8:	ldrsb	w1, [x26, w0, sxtw]
    6abc:	cmp	w1, #0x1
    6ac0:	b.ne	6a90 <libintl_ngettext@@Base+0x7e4>  // b.any
    6ac4:	ldr	x1, [sp, #96]
    6ac8:	ldrb	w20, [x1, w0, sxtw]
    6acc:	cbz	w20, 6a90 <libintl_ngettext@@Base+0x7e4>
    6ad0:	ldr	x0, [sp, #152]
    6ad4:	str	x0, [x27, #8]
    6ad8:	add	x27, x27, #0x8
    6adc:	mov	x1, x19
    6ae0:	mov	w0, #0x3                   	// #3
    6ae4:	str	w0, [sp, #116]
    6ae8:	b	670c <libintl_ngettext@@Base+0x460>
    6aec:	mov	w2, #0x5                   	// #5
    6af0:	adrp	x1, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    6af4:	add	x1, x1, #0x8d0
    6af8:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    6afc:	add	x0, x0, #0x8c0
    6b00:	bl	1ee0 <dcgettext@plt>
    6b04:	mov	x0, x19
    6b08:	mov	x19, x22
    6b0c:	mov	w25, #0x0                   	// #0
    6b10:	mov	w20, #0x2                   	// #2
    6b14:	b	6b28 <libintl_ngettext@@Base+0x87c>
    6b18:	mov	x0, x19
    6b1c:	mov	x19, x22
    6b20:	mov	w25, #0x0                   	// #0
    6b24:	mov	w20, #0x0                   	// #0
    6b28:	sub	x25, x0, w25, sxtw #1
    6b2c:	cmp	x19, x25
    6b30:	b.eq	6b40 <libintl_ngettext@@Base+0x894>  // b.none
    6b34:	sub	x25, x25, #0x2
    6b38:	cmp	x25, x19
    6b3c:	b.ne	6b34 <libintl_ngettext@@Base+0x888>  // b.any
    6b40:	add	x0, sp, #0x700
    6b44:	cmp	x19, x0
    6b48:	b.eq	6b54 <libintl_ngettext@@Base+0x8a8>  // b.none
    6b4c:	mov	x0, x19
    6b50:	bl	1f50 <free@plt>
    6b54:	mov	w0, w20
    6b58:	ldp	x19, x20, [sp, #16]
    6b5c:	ldp	x21, x22, [sp, #32]
    6b60:	ldp	x23, x24, [sp, #48]
    6b64:	ldp	x25, x26, [sp, #64]
    6b68:	ldp	x27, x28, [sp, #80]
    6b6c:	ldp	x29, x30, [sp]
    6b70:	add	sp, sp, #0x890
    6b74:	ret
    6b78:	mov	w25, w20
    6b7c:	mov	x0, x19
    6b80:	mov	x19, x22
    6b84:	mov	w20, #0x1                   	// #1
    6b88:	b	6b28 <libintl_ngettext@@Base+0x87c>
    6b8c:	mov	w20, #0x1                   	// #1
    6b90:	b	6b40 <libintl_ngettext@@Base+0x894>
    6b94:	ldr	x0, [sp, #144]
    6b98:	cmp	x0, x19
    6b9c:	b.eq	6bb0 <libintl_ngettext@@Base+0x904>  // b.none
    6ba0:	mov	x25, x19
    6ba4:	ldr	x19, [sp, #144]
    6ba8:	mov	w20, #0x1                   	// #1
    6bac:	b	6b34 <libintl_ngettext@@Base+0x888>
    6bb0:	mov	x19, x0
    6bb4:	mov	w20, #0x1                   	// #1
    6bb8:	b	6b4c <libintl_ngettext@@Base+0x8a0>
    6bbc:	mov	w25, #0x100                 	// #256
    6bc0:	ldr	x0, [sp, #136]
    6bc4:	str	x3, [x0]
    6bc8:	add	x0, x21, #0x20
    6bcc:	ldrb	w0, [x0, w25, sxtw]
    6bd0:	b	6810 <libintl_ngettext@@Base+0x564>
    6bd4:	stp	x29, x30, [sp, #-96]!
    6bd8:	mov	x29, sp
    6bdc:	stp	x21, x22, [sp, #32]
    6be0:	mov	x22, x1
    6be4:	mov	x21, x2
    6be8:	cbz	x0, 6cb8 <libintl_ngettext@@Base+0xa0c>
    6bec:	stp	x19, x20, [sp, #16]
    6bf0:	str	x23, [sp, #48]
    6bf4:	mov	x19, x0
    6bf8:	adrp	x1, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    6bfc:	add	x1, x1, #0xbd0
    6c00:	bl	2030 <strstr@plt>
    6c04:	mov	x23, x0
    6c08:	adrp	x1, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    6c0c:	add	x1, x1, #0xbd8
    6c10:	mov	x0, x19
    6c14:	bl	2030 <strstr@plt>
    6c18:	cmp	x23, #0x0
    6c1c:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    6c20:	b.eq	6cb0 <libintl_ngettext@@Base+0xa04>  // b.none
    6c24:	add	x20, x0, #0x9
    6c28:	ldrb	w19, [x0, #9]
    6c2c:	cbz	w19, 6cd8 <libintl_ngettext@@Base+0xa2c>
    6c30:	bl	1f20 <__ctype_b_loc@plt>
    6c34:	ldr	x0, [x0]
    6c38:	and	x3, x19, #0xff
    6c3c:	ldrh	w3, [x0, x3, lsl #1]
    6c40:	tbz	w3, #13, 6c58 <libintl_ngettext@@Base+0x9ac>
    6c44:	ldrb	w19, [x20, #1]!
    6c48:	cbnz	w19, 6c38 <libintl_ngettext@@Base+0x98c>
    6c4c:	ldp	x19, x20, [sp, #16]
    6c50:	ldr	x23, [sp, #48]
    6c54:	b	6cb8 <libintl_ngettext@@Base+0xa0c>
    6c58:	sub	w19, w19, #0x30
    6c5c:	and	w19, w19, #0xff
    6c60:	cmp	w19, #0x9
    6c64:	b.hi	6ce4 <libintl_ngettext@@Base+0xa38>  // b.pmore
    6c68:	mov	w2, #0xa                   	// #10
    6c6c:	add	x1, sp, #0x48
    6c70:	mov	x0, x20
    6c74:	bl	1c50 <strtoul@plt>
    6c78:	ldr	x1, [sp, #72]
    6c7c:	cmp	x1, x20
    6c80:	b.eq	6cf0 <libintl_ngettext@@Base+0xa44>  // b.none
    6c84:	str	x0, [x21]
    6c88:	add	x23, x23, #0x7
    6c8c:	str	x23, [sp, #80]
    6c90:	add	x0, sp, #0x50
    6c94:	bl	6414 <libintl_ngettext@@Base+0x168>
    6c98:	cbnz	w0, 6cfc <libintl_ngettext@@Base+0xa50>
    6c9c:	ldr	x0, [sp, #88]
    6ca0:	str	x0, [x22]
    6ca4:	ldp	x19, x20, [sp, #16]
    6ca8:	ldr	x23, [sp, #48]
    6cac:	b	6ccc <libintl_ngettext@@Base+0xa20>
    6cb0:	ldp	x19, x20, [sp, #16]
    6cb4:	ldr	x23, [sp, #48]
    6cb8:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    6cbc:	add	x0, x0, #0xd88
    6cc0:	str	x0, [x22]
    6cc4:	mov	x0, #0x2                   	// #2
    6cc8:	str	x0, [x21]
    6ccc:	ldp	x21, x22, [sp, #32]
    6cd0:	ldp	x29, x30, [sp], #96
    6cd4:	ret
    6cd8:	ldp	x19, x20, [sp, #16]
    6cdc:	ldr	x23, [sp, #48]
    6ce0:	b	6cb8 <libintl_ngettext@@Base+0xa0c>
    6ce4:	ldp	x19, x20, [sp, #16]
    6ce8:	ldr	x23, [sp, #48]
    6cec:	b	6cb8 <libintl_ngettext@@Base+0xa0c>
    6cf0:	ldp	x19, x20, [sp, #16]
    6cf4:	ldr	x23, [sp, #48]
    6cf8:	b	6cb8 <libintl_ngettext@@Base+0xa0c>
    6cfc:	ldp	x19, x20, [sp, #16]
    6d00:	ldr	x23, [sp, #48]
    6d04:	b	6cb8 <libintl_ngettext@@Base+0xa0c>
    6d08:	stp	x29, x30, [sp, #-16]!
    6d0c:	mov	x29, sp
    6d10:	mov	w0, #0xe                   	// #14
    6d14:	bl	1d90 <nl_langinfo@plt>
    6d18:	cbz	x0, 6d38 <libintl_ngettext@@Base+0xa8c>
    6d1c:	ldrb	w2, [x0]
    6d20:	adrp	x1, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    6d24:	add	x1, x1, #0xc28
    6d28:	cmp	w2, #0x0
    6d2c:	csel	x0, x1, x0, eq  // eq = none
    6d30:	ldp	x29, x30, [sp], #16
    6d34:	ret
    6d38:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    6d3c:	add	x0, x0, #0xc28
    6d40:	b	6d30 <libintl_ngettext@@Base+0xa84>
    6d44:	stp	x29, x30, [sp, #-48]!
    6d48:	mov	x29, sp
    6d4c:	stp	x19, x20, [sp, #16]
    6d50:	mov	x20, x0
    6d54:	add	x0, sp, #0x28
    6d58:	bl	1c30 <pthread_rwlockattr_init@plt>
    6d5c:	mov	w19, w0
    6d60:	cbz	w0, 6d74 <libintl_ngettext@@Base+0xac8>
    6d64:	mov	w0, w19
    6d68:	ldp	x19, x20, [sp, #16]
    6d6c:	ldp	x29, x30, [sp], #48
    6d70:	ret
    6d74:	mov	w1, #0x2                   	// #2
    6d78:	add	x0, sp, #0x28
    6d7c:	bl	1cd0 <pthread_rwlockattr_setkind_np@plt>
    6d80:	mov	w19, w0
    6d84:	cbz	w0, 6d94 <libintl_ngettext@@Base+0xae8>
    6d88:	add	x0, sp, #0x28
    6d8c:	bl	2040 <pthread_rwlockattr_destroy@plt>
    6d90:	b	6d64 <libintl_ngettext@@Base+0xab8>
    6d94:	add	x1, sp, #0x28
    6d98:	mov	x0, x20
    6d9c:	bl	1cc0 <pthread_rwlock_init@plt>
    6da0:	mov	w19, w0
    6da4:	b	6d88 <libintl_ngettext@@Base+0xadc>
    6da8:	stp	x29, x30, [sp, #-48]!
    6dac:	mov	x29, sp
    6db0:	stp	x19, x20, [sp, #16]
    6db4:	mov	x20, x0
    6db8:	add	x0, sp, #0x28
    6dbc:	bl	2000 <pthread_mutexattr_init@plt>
    6dc0:	mov	w19, w0
    6dc4:	cbz	w0, 6dd8 <libintl_ngettext@@Base+0xb2c>
    6dc8:	mov	w0, w19
    6dcc:	ldp	x19, x20, [sp, #16]
    6dd0:	ldp	x29, x30, [sp], #48
    6dd4:	ret
    6dd8:	mov	w1, #0x1                   	// #1
    6ddc:	add	x0, sp, #0x28
    6de0:	bl	1c80 <pthread_mutexattr_settype@plt>
    6de4:	mov	w19, w0
    6de8:	cbnz	w0, 6e10 <libintl_ngettext@@Base+0xb64>
    6dec:	add	x1, sp, #0x28
    6df0:	mov	x0, x20
    6df4:	bl	1e90 <pthread_mutex_init@plt>
    6df8:	mov	w19, w0
    6dfc:	cbnz	w0, 6e1c <libintl_ngettext@@Base+0xb70>
    6e00:	add	x0, sp, #0x28
    6e04:	bl	2020 <pthread_mutexattr_destroy@plt>
    6e08:	mov	w19, w0
    6e0c:	b	6dc8 <libintl_ngettext@@Base+0xb1c>
    6e10:	add	x0, sp, #0x28
    6e14:	bl	2020 <pthread_mutexattr_destroy@plt>
    6e18:	b	6dc8 <libintl_ngettext@@Base+0xb1c>
    6e1c:	add	x0, sp, #0x28
    6e20:	bl	2020 <pthread_mutexattr_destroy@plt>
    6e24:	b	6dc8 <libintl_ngettext@@Base+0xb1c>
    6e28:	ldrb	w1, [x0]
    6e2c:	cbnz	w1, 6e40 <libintl_ngettext@@Base+0xb94>
    6e30:	mov	w1, #0xffffffff            	// #-1
    6e34:	strb	w1, [x0]
    6e38:	mov	w0, #0x1                   	// #1
    6e3c:	ret
    6e40:	mov	w0, #0x0                   	// #0
    6e44:	b	6e3c <libintl_ngettext@@Base+0xb90>

0000000000006e48 <libintl_set_relocation_prefix@@Base>:
    6e48:	cmp	x0, #0x0
    6e4c:	ccmp	x1, #0x0, #0x4, ne  // ne = any
    6e50:	b.eq	6f1c <libintl_set_relocation_prefix@@Base+0xd4>  // b.none
    6e54:	stp	x29, x30, [sp, #-64]!
    6e58:	mov	x29, sp
    6e5c:	stp	x19, x20, [sp, #16]
    6e60:	mov	x20, x0
    6e64:	mov	x19, x1
    6e68:	bl	1f00 <strcmp@plt>
    6e6c:	cbnz	w0, 6e8c <libintl_set_relocation_prefix@@Base+0x44>
    6e70:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    6e74:	add	x0, x0, #0x430
    6e78:	str	xzr, [x0, #16]
    6e7c:	str	xzr, [x0, #24]
    6e80:	ldp	x19, x20, [sp, #16]
    6e84:	ldp	x29, x30, [sp], #64
    6e88:	ret
    6e8c:	stp	x21, x22, [sp, #32]
    6e90:	str	x23, [sp, #48]
    6e94:	mov	x0, x20
    6e98:	bl	1c60 <strlen@plt>
    6e9c:	mov	x22, x0
    6ea0:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    6ea4:	add	x21, x0, #0x430
    6ea8:	str	x22, [x0, #1072]
    6eac:	mov	x0, x19
    6eb0:	bl	1c60 <strlen@plt>
    6eb4:	mov	x23, x0
    6eb8:	str	x0, [x21, #8]
    6ebc:	add	x0, x22, x0
    6ec0:	add	x0, x0, #0x2
    6ec4:	bl	1db0 <malloc@plt>
    6ec8:	mov	x21, x0
    6ecc:	cbz	x0, 6f10 <libintl_set_relocation_prefix@@Base+0xc8>
    6ed0:	add	x22, x22, #0x1
    6ed4:	mov	x2, x22
    6ed8:	mov	x1, x20
    6edc:	bl	1c10 <memcpy@plt>
    6ee0:	adrp	x20, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    6ee4:	add	x20, x20, #0x430
    6ee8:	str	x21, [x20, #16]
    6eec:	add	x21, x21, x22
    6ef0:	add	x2, x23, #0x1
    6ef4:	mov	x1, x19
    6ef8:	mov	x0, x21
    6efc:	bl	1c10 <memcpy@plt>
    6f00:	str	x21, [x20, #24]
    6f04:	ldp	x21, x22, [sp, #32]
    6f08:	ldr	x23, [sp, #48]
    6f0c:	b	6e80 <libintl_set_relocation_prefix@@Base+0x38>
    6f10:	ldp	x21, x22, [sp, #32]
    6f14:	ldr	x23, [sp, #48]
    6f18:	b	6e70 <libintl_set_relocation_prefix@@Base+0x28>
    6f1c:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    6f20:	add	x0, x0, #0x430
    6f24:	str	xzr, [x0, #16]
    6f28:	str	xzr, [x0, #24]
    6f2c:	ret
    6f30:	stp	x29, x30, [sp, #-64]!
    6f34:	mov	x29, sp
    6f38:	stp	x19, x20, [sp, #16]
    6f3c:	mov	x19, x0
    6f40:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    6f44:	ldr	x1, [x0, #1088]
    6f48:	cbz	x1, 7010 <libintl_set_relocation_prefix@@Base+0x1c8>
    6f4c:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    6f50:	ldr	x20, [x0, #1096]
    6f54:	cbz	x20, 7010 <libintl_set_relocation_prefix@@Base+0x1c8>
    6f58:	stp	x21, x22, [sp, #32]
    6f5c:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    6f60:	ldr	x21, [x0, #1072]
    6f64:	mov	x2, x21
    6f68:	mov	x0, x19
    6f6c:	bl	1de0 <strncmp@plt>
    6f70:	cbnz	w0, 700c <libintl_set_relocation_prefix@@Base+0x1c4>
    6f74:	add	x22, x19, x21
    6f78:	ldrb	w0, [x19, x21]
    6f7c:	cbz	w0, 6f90 <libintl_set_relocation_prefix@@Base+0x148>
    6f80:	cmp	w0, #0x2f
    6f84:	b.eq	6fbc <libintl_set_relocation_prefix@@Base+0x174>  // b.none
    6f88:	ldp	x21, x22, [sp, #32]
    6f8c:	b	7010 <libintl_set_relocation_prefix@@Base+0x1c8>
    6f90:	mov	x0, x20
    6f94:	bl	1c60 <strlen@plt>
    6f98:	add	x0, x0, #0x1
    6f9c:	bl	1db0 <malloc@plt>
    6fa0:	mov	x21, x0
    6fa4:	cbz	x0, 7020 <libintl_set_relocation_prefix@@Base+0x1d8>
    6fa8:	mov	x1, x20
    6fac:	bl	1fd0 <strcpy@plt>
    6fb0:	mov	x19, x21
    6fb4:	ldp	x21, x22, [sp, #32]
    6fb8:	b	7010 <libintl_set_relocation_prefix@@Base+0x1c8>
    6fbc:	str	x23, [sp, #48]
    6fc0:	mov	x0, x22
    6fc4:	bl	1c60 <strlen@plt>
    6fc8:	adrp	x1, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    6fcc:	ldr	x23, [x1, #1080]
    6fd0:	add	x1, x23, #0x1
    6fd4:	add	x0, x1, x0
    6fd8:	bl	1db0 <malloc@plt>
    6fdc:	mov	x21, x0
    6fe0:	cbz	x0, 7028 <libintl_set_relocation_prefix@@Base+0x1e0>
    6fe4:	mov	x2, x23
    6fe8:	mov	x1, x20
    6fec:	bl	1c10 <memcpy@plt>
    6ff0:	mov	x1, x22
    6ff4:	add	x0, x21, x23
    6ff8:	bl	1fd0 <strcpy@plt>
    6ffc:	mov	x19, x21
    7000:	ldp	x21, x22, [sp, #32]
    7004:	ldr	x23, [sp, #48]
    7008:	b	7010 <libintl_set_relocation_prefix@@Base+0x1c8>
    700c:	ldp	x21, x22, [sp, #32]
    7010:	mov	x0, x19
    7014:	ldp	x19, x20, [sp, #16]
    7018:	ldp	x29, x30, [sp], #64
    701c:	ret
    7020:	ldp	x21, x22, [sp, #32]
    7024:	b	7010 <libintl_set_relocation_prefix@@Base+0x1c8>
    7028:	ldp	x21, x22, [sp, #32]
    702c:	ldr	x23, [sp, #48]
    7030:	b	7010 <libintl_set_relocation_prefix@@Base+0x1c8>
    7034:	stp	x29, x30, [sp, #-32]!
    7038:	mov	x29, sp
    703c:	stp	x19, x20, [sp, #16]
    7040:	mov	x20, x0
    7044:	mov	x19, x1
    7048:	bl	6f30 <libintl_set_relocation_prefix@@Base+0xe8>
    704c:	cmp	x20, x0
    7050:	csel	x1, x0, xzr, ne  // ne = any
    7054:	str	x1, [x19]
    7058:	ldp	x19, x20, [sp, #16]
    705c:	ldp	x29, x30, [sp], #32
    7060:	ret
    7064:	mov	x0, #0x0                   	// #0
    7068:	ret
    706c:	stp	x29, x30, [sp, #-32]!
    7070:	mov	x29, sp
    7074:	stp	x19, x20, [sp, #16]
    7078:	mov	w19, w0
    707c:	mov	x0, #0x0                   	// #0
    7080:	bl	1f40 <uselocale@plt>
    7084:	cmn	x0, #0x1
    7088:	b.eq	70b0 <libintl_set_relocation_prefix@@Base+0x268>  // b.none
    708c:	mov	x20, x0
    7090:	lsl	w0, w19, #16
    7094:	orr	w0, w0, #0xffff
    7098:	bl	1d90 <nl_langinfo@plt>
    709c:	ldrb	w1, [x0]
    70a0:	cbnz	w1, 70b4 <libintl_set_relocation_prefix@@Base+0x26c>
    70a4:	add	x0, x20, w19, sxtw #3
    70a8:	ldr	x0, [x0, #128]
    70ac:	b	70b4 <libintl_set_relocation_prefix@@Base+0x26c>
    70b0:	mov	x0, #0x0                   	// #0
    70b4:	ldp	x19, x20, [sp, #16]
    70b8:	ldp	x29, x30, [sp], #32
    70bc:	ret
    70c0:	stp	x29, x30, [sp, #-48]!
    70c4:	mov	x29, sp
    70c8:	stp	x19, x20, [sp, #16]
    70cc:	bl	706c <libintl_set_relocation_prefix@@Base+0x224>
    70d0:	mov	x19, x0
    70d4:	cbz	x0, 71f4 <libintl_set_relocation_prefix@@Base+0x3ac>
    70d8:	stp	x21, x22, [sp, #32]
    70dc:	ldrb	w1, [x0]
    70e0:	cbz	w1, 7204 <libintl_set_relocation_prefix@@Base+0x3bc>
    70e4:	mov	x2, x0
    70e8:	mov	x0, #0x0                   	// #0
    70ec:	ror	x0, x0, #55
    70f0:	add	x0, x0, w1, uxtb
    70f4:	ldrb	w1, [x2, #1]!
    70f8:	cbnz	w1, 70ec <libintl_set_relocation_prefix@@Base+0x2a4>
    70fc:	mov	x20, #0xff00ff00ff00ff00    	// #-71777214294589696
    7100:	movk	x20, #0xff01
    7104:	umulh	x20, x0, x20
    7108:	and	x1, x20, #0xffffffffffffff00
    710c:	add	x20, x1, x20, lsr #8
    7110:	sub	x20, x0, x20
    7114:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    7118:	add	x0, x0, #0x450
    711c:	ldr	x21, [x0, x20, lsl #3]
    7120:	cbz	x21, 7140 <libintl_set_relocation_prefix@@Base+0x2f8>
    7124:	add	x22, x21, #0x8
    7128:	mov	x1, x19
    712c:	mov	x0, x22
    7130:	bl	1f00 <strcmp@plt>
    7134:	cbz	w0, 7224 <libintl_set_relocation_prefix@@Base+0x3dc>
    7138:	ldr	x21, [x21]
    713c:	cbnz	x21, 7124 <libintl_set_relocation_prefix@@Base+0x2dc>
    7140:	mov	x0, x19
    7144:	bl	1c60 <strlen@plt>
    7148:	add	x21, x0, #0x1
    714c:	add	x0, x0, #0x10
    7150:	and	x0, x0, #0xfffffffffffffff8
    7154:	bl	1db0 <malloc@plt>
    7158:	mov	x22, x0
    715c:	cbz	x0, 7230 <libintl_set_relocation_prefix@@Base+0x3e8>
    7160:	mov	x2, x21
    7164:	mov	x1, x19
    7168:	add	x0, x0, #0x8
    716c:	bl	1c10 <memcpy@plt>
    7170:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    7174:	ldr	x0, [x0, #4064]
    7178:	cbz	x0, 7190 <libintl_set_relocation_prefix@@Base+0x348>
    717c:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    7180:	add	x0, x0, #0x450
    7184:	add	x0, x0, #0x808
    7188:	bl	2090 <pthread_mutex_lock@plt>
    718c:	cbnz	w0, 720c <libintl_set_relocation_prefix@@Base+0x3c4>
    7190:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    7194:	add	x0, x0, #0x450
    7198:	ldr	x21, [x0, x20, lsl #3]
    719c:	cbz	x21, 71b8 <libintl_set_relocation_prefix@@Base+0x370>
    71a0:	mov	x1, x19
    71a4:	add	x0, x21, #0x8
    71a8:	bl	1f00 <strcmp@plt>
    71ac:	cbz	w0, 7210 <libintl_set_relocation_prefix@@Base+0x3c8>
    71b0:	ldr	x21, [x21]
    71b4:	cbnz	x21, 71a0 <libintl_set_relocation_prefix@@Base+0x358>
    71b8:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    71bc:	add	x0, x0, #0x450
    71c0:	ldr	x1, [x0, x20, lsl #3]
    71c4:	str	x1, [x22]
    71c8:	str	x22, [x0, x20, lsl #3]
    71cc:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    71d0:	ldr	x0, [x0, #4064]
    71d4:	cbz	x0, 71ec <libintl_set_relocation_prefix@@Base+0x3a4>
    71d8:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    71dc:	add	x0, x0, #0x450
    71e0:	add	x0, x0, #0x808
    71e4:	bl	20a0 <pthread_mutex_unlock@plt>
    71e8:	cbnz	w0, 7220 <libintl_set_relocation_prefix@@Base+0x3d8>
    71ec:	add	x19, x22, #0x8
    71f0:	ldp	x21, x22, [sp, #32]
    71f4:	mov	x0, x19
    71f8:	ldp	x19, x20, [sp, #16]
    71fc:	ldp	x29, x30, [sp], #48
    7200:	ret
    7204:	mov	x0, #0x0                   	// #0
    7208:	b	70fc <libintl_set_relocation_prefix@@Base+0x2b4>
    720c:	bl	1ec0 <abort@plt>
    7210:	mov	x0, x22
    7214:	bl	1f50 <free@plt>
    7218:	mov	x22, x21
    721c:	b	71cc <libintl_set_relocation_prefix@@Base+0x384>
    7220:	bl	1ec0 <abort@plt>
    7224:	mov	x19, x22
    7228:	ldp	x21, x22, [sp, #32]
    722c:	b	71f4 <libintl_set_relocation_prefix@@Base+0x3ac>
    7230:	adrp	x19, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    7234:	add	x19, x19, #0x848
    7238:	ldp	x21, x22, [sp, #32]
    723c:	b	71f4 <libintl_set_relocation_prefix@@Base+0x3ac>
    7240:	stp	x29, x30, [sp, #-16]!
    7244:	mov	x29, sp
    7248:	mov	x1, #0x0                   	// #0
    724c:	bl	20c0 <setlocale@plt>
    7250:	ldp	x29, x30, [sp], #16
    7254:	ret
    7258:	stp	x29, x30, [sp, #-32]!
    725c:	mov	x29, sp
    7260:	str	x19, [sp, #16]
    7264:	mov	x19, x1
    7268:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    726c:	add	x0, x0, #0x7f0
    7270:	bl	2080 <getenv@plt>
    7274:	cbz	x0, 7280 <libintl_set_relocation_prefix@@Base+0x438>
    7278:	ldrb	w1, [x0]
    727c:	cbnz	w1, 72b0 <libintl_set_relocation_prefix@@Base+0x468>
    7280:	mov	x0, x19
    7284:	bl	2080 <getenv@plt>
    7288:	cbz	x0, 7294 <libintl_set_relocation_prefix@@Base+0x44c>
    728c:	ldrb	w1, [x0]
    7290:	cbnz	w1, 72b0 <libintl_set_relocation_prefix@@Base+0x468>
    7294:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    7298:	add	x0, x0, #0xc30
    729c:	bl	2080 <getenv@plt>
    72a0:	cbz	x0, 72b0 <libintl_set_relocation_prefix@@Base+0x468>
    72a4:	ldrb	w1, [x0]
    72a8:	cmp	w1, #0x0
    72ac:	csel	x0, x0, xzr, ne  // ne = any
    72b0:	ldr	x19, [sp, #16]
    72b4:	ldp	x29, x30, [sp], #32
    72b8:	ret
    72bc:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    72c0:	add	x0, x0, #0x848
    72c4:	ret
    72c8:	stp	x29, x30, [sp, #-32]!
    72cc:	mov	x29, sp
    72d0:	str	x19, [sp, #16]
    72d4:	mov	w19, w0
    72d8:	bl	70c0 <libintl_set_relocation_prefix@@Base+0x278>
    72dc:	cbz	x0, 72ec <libintl_set_relocation_prefix@@Base+0x4a4>
    72e0:	ldr	x19, [sp, #16]
    72e4:	ldp	x29, x30, [sp], #32
    72e8:	ret
    72ec:	mov	x1, #0x0                   	// #0
    72f0:	mov	w0, w19
    72f4:	bl	20c0 <setlocale@plt>
    72f8:	adrp	x1, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    72fc:	add	x1, x1, #0x848
    7300:	cmp	x0, #0x0
    7304:	csel	x0, x1, x0, eq  // eq = none
    7308:	b	72e0 <libintl_set_relocation_prefix@@Base+0x498>
    730c:	stp	x29, x30, [sp, #-80]!
    7310:	mov	x29, sp
    7314:	stp	x19, x20, [sp, #16]
    7318:	stp	x21, x22, [sp, #32]
    731c:	mov	x21, x0
    7320:	mov	x19, x1
    7324:	mov	x22, x2
    7328:	mov	x1, x0
    732c:	mov	w0, #0x22                  	// #34
    7330:	bl	1d10 <putc@plt>
    7334:	cmp	x19, x22
    7338:	b.eq	73e0 <libintl_set_relocation_prefix@@Base+0x598>  // b.none
    733c:	stp	x23, x24, [sp, #48]
    7340:	str	x25, [sp, #64]
    7344:	add	x19, x19, #0x1
    7348:	mov	w23, #0x5c                  	// #92
    734c:	adrp	x24, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    7350:	add	x24, x24, #0xc38
    7354:	adrp	x25, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    7358:	add	x25, x25, #0xc40
    735c:	b	73b8 <libintl_set_relocation_prefix@@Base+0x570>
    7360:	mov	x3, x21
    7364:	mov	x2, #0x3                   	// #3
    7368:	mov	x1, #0x1                   	// #1
    736c:	mov	x0, x24
    7370:	bl	1fb0 <fwrite@plt>
    7374:	cmp	x22, x19
    7378:	b.eq	73fc <libintl_set_relocation_prefix@@Base+0x5b4>  // b.none
    737c:	mov	x3, x21
    7380:	mov	x2, #0x2                   	// #2
    7384:	mov	x1, #0x1                   	// #1
    7388:	mov	x0, x25
    738c:	bl	1fb0 <fwrite@plt>
    7390:	b	73b4 <libintl_set_relocation_prefix@@Base+0x56c>
    7394:	mov	x1, x21
    7398:	mov	w0, w23
    739c:	bl	1d10 <putc@plt>
    73a0:	mov	x1, x21
    73a4:	ldurb	w0, [x20, #-1]
    73a8:	bl	1d10 <putc@plt>
    73ac:	cmp	x22, x20
    73b0:	b.eq	73d8 <libintl_set_relocation_prefix@@Base+0x590>  // b.none
    73b4:	add	x19, x19, #0x1
    73b8:	mov	x20, x19
    73bc:	ldurb	w1, [x19, #-1]
    73c0:	cmp	w1, #0xa
    73c4:	b.eq	7360 <libintl_set_relocation_prefix@@Base+0x518>  // b.none
    73c8:	cmp	w1, #0x22
    73cc:	ccmp	w1, w23, #0x4, ne  // ne = any
    73d0:	b.ne	73a0 <libintl_set_relocation_prefix@@Base+0x558>  // b.any
    73d4:	b	7394 <libintl_set_relocation_prefix@@Base+0x54c>
    73d8:	ldp	x23, x24, [sp, #48]
    73dc:	ldr	x25, [sp, #64]
    73e0:	mov	x1, x21
    73e4:	mov	w0, #0x22                  	// #34
    73e8:	bl	1d10 <putc@plt>
    73ec:	ldp	x19, x20, [sp, #16]
    73f0:	ldp	x21, x22, [sp, #32]
    73f4:	ldp	x29, x30, [sp], #80
    73f8:	ret
    73fc:	ldp	x23, x24, [sp, #48]
    7400:	ldr	x25, [sp, #64]
    7404:	b	73ec <libintl_set_relocation_prefix@@Base+0x5a4>
    7408:	stp	x29, x30, [sp, #-64]!
    740c:	mov	x29, sp
    7410:	stp	x19, x20, [sp, #16]
    7414:	stp	x21, x22, [sp, #32]
    7418:	str	x23, [sp, #48]
    741c:	mov	x19, x0
    7420:	mov	x21, x1
    7424:	mov	x20, x2
    7428:	mov	x22, x3
    742c:	mov	w23, w4
    7430:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    7434:	ldr	x0, [x0, #4064]
    7438:	cbz	x0, 744c <libintl_set_relocation_prefix@@Base+0x604>
    743c:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    7440:	add	x0, x0, #0xc88
    7444:	bl	2090 <pthread_mutex_lock@plt>
    7448:	cbnz	w0, 75f8 <libintl_set_relocation_prefix@@Base+0x7b0>
    744c:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    7450:	ldr	x1, [x0, #3256]
    7454:	cbz	x1, 7488 <libintl_set_relocation_prefix@@Base+0x640>
    7458:	mov	x0, x19
    745c:	bl	1f00 <strcmp@plt>
    7460:	cbz	w0, 74c8 <libintl_set_relocation_prefix@@Base+0x680>
    7464:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    7468:	ldr	x0, [x0, #3264]
    746c:	cbz	x0, 747c <libintl_set_relocation_prefix@@Base+0x634>
    7470:	bl	1d80 <fclose@plt>
    7474:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    7478:	str	xzr, [x0, #3264]
    747c:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    7480:	ldr	x0, [x0, #3256]
    7484:	bl	1f50 <free@plt>
    7488:	mov	x0, x19
    748c:	bl	1c60 <strlen@plt>
    7490:	add	x0, x0, #0x1
    7494:	bl	1db0 <malloc@plt>
    7498:	adrp	x1, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    749c:	str	x0, [x1, #3256]
    74a0:	cbz	x0, 75c8 <libintl_set_relocation_prefix@@Base+0x780>
    74a4:	mov	x1, x19
    74a8:	bl	1fd0 <strcpy@plt>
    74ac:	adrp	x1, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    74b0:	add	x1, x1, #0xc48
    74b4:	mov	x0, x19
    74b8:	bl	1da0 <fopen@plt>
    74bc:	adrp	x1, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    74c0:	str	x0, [x1, #3264]
    74c4:	cbz	x0, 75c8 <libintl_set_relocation_prefix@@Base+0x780>
    74c8:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    74cc:	ldr	x19, [x0, #3264]
    74d0:	mov	x3, x19
    74d4:	mov	x2, #0x7                   	// #7
    74d8:	mov	x1, #0x1                   	// #1
    74dc:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    74e0:	add	x0, x0, #0xc50
    74e4:	bl	1fb0 <fwrite@plt>
    74e8:	mov	x0, x21
    74ec:	bl	1c60 <strlen@plt>
    74f0:	add	x2, x21, x0
    74f4:	mov	x1, x21
    74f8:	mov	x0, x19
    74fc:	bl	730c <libintl_set_relocation_prefix@@Base+0x4c4>
    7500:	mov	w1, #0x4                   	// #4
    7504:	mov	x0, x20
    7508:	bl	1fa0 <strchr@plt>
    750c:	mov	x21, x0
    7510:	cbz	x0, 7540 <libintl_set_relocation_prefix@@Base+0x6f8>
    7514:	mov	x3, x19
    7518:	mov	x2, #0x9                   	// #9
    751c:	mov	x1, #0x1                   	// #1
    7520:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    7524:	add	x0, x0, #0xc58
    7528:	bl	1fb0 <fwrite@plt>
    752c:	mov	x2, x21
    7530:	mov	x1, x20
    7534:	mov	x0, x19
    7538:	bl	730c <libintl_set_relocation_prefix@@Base+0x4c4>
    753c:	add	x20, x21, #0x1
    7540:	mov	x3, x19
    7544:	mov	x2, #0x7                   	// #7
    7548:	mov	x1, #0x1                   	// #1
    754c:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    7550:	add	x0, x0, #0xc68
    7554:	bl	1fb0 <fwrite@plt>
    7558:	mov	x0, x20
    755c:	bl	1c60 <strlen@plt>
    7560:	add	x2, x20, x0
    7564:	mov	x1, x20
    7568:	mov	x0, x19
    756c:	bl	730c <libintl_set_relocation_prefix@@Base+0x4c4>
    7570:	cbz	w23, 75fc <libintl_set_relocation_prefix@@Base+0x7b4>
    7574:	mov	x3, x19
    7578:	mov	x2, #0xe                   	// #14
    757c:	mov	x1, #0x1                   	// #1
    7580:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    7584:	add	x0, x0, #0xc70
    7588:	bl	1fb0 <fwrite@plt>
    758c:	mov	x0, x22
    7590:	bl	1c60 <strlen@plt>
    7594:	add	x2, x22, x0
    7598:	mov	x1, x22
    759c:	mov	x0, x19
    75a0:	bl	730c <libintl_set_relocation_prefix@@Base+0x4c4>
    75a4:	mov	x3, x19
    75a8:	mov	x2, #0xe                   	// #14
    75ac:	mov	x1, #0x1                   	// #1
    75b0:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    75b4:	add	x0, x0, #0xc80
    75b8:	bl	1fb0 <fwrite@plt>
    75bc:	mov	x1, x19
    75c0:	mov	w0, #0xa                   	// #10
    75c4:	bl	1d10 <putc@plt>
    75c8:	adrp	x0, 18000 <bind_textdomain_codeset@@Base+0x108fc>
    75cc:	ldr	x0, [x0, #4064]
    75d0:	cbz	x0, 75e4 <libintl_set_relocation_prefix@@Base+0x79c>
    75d4:	adrp	x0, 19000 <bind_textdomain_codeset@@Base+0x118fc>
    75d8:	add	x0, x0, #0xc88
    75dc:	bl	20a0 <pthread_mutex_unlock@plt>
    75e0:	cbnz	w0, 7618 <libintl_set_relocation_prefix@@Base+0x7d0>
    75e4:	ldp	x19, x20, [sp, #16]
    75e8:	ldp	x21, x22, [sp, #32]
    75ec:	ldr	x23, [sp, #48]
    75f0:	ldp	x29, x30, [sp], #64
    75f4:	ret
    75f8:	bl	1ec0 <abort@plt>
    75fc:	mov	x3, x19
    7600:	mov	x2, #0xb                   	// #11
    7604:	mov	x1, #0x1                   	// #1
    7608:	adrp	x0, 7000 <libintl_set_relocation_prefix@@Base+0x1b8>
    760c:	add	x0, x0, #0xc90
    7610:	bl	1fb0 <fwrite@plt>
    7614:	b	75bc <libintl_set_relocation_prefix@@Base+0x774>
    7618:	bl	1ec0 <abort@plt>
    761c:	adds	x0, x0, x1
    7620:	csinv	x0, x0, xzr, cc  // cc = lo, ul, last
    7624:	ret
    7628:	adds	x0, x0, x1
    762c:	csinv	x0, x0, xzr, cc  // cc = lo, ul, last
    7630:	adds	x0, x2, x0
    7634:	csinv	x0, x0, xzr, cc  // cc = lo, ul, last
    7638:	ret
    763c:	adds	x0, x0, x1
    7640:	csinv	x0, x0, xzr, cc  // cc = lo, ul, last
    7644:	adds	x2, x2, x0
    7648:	csinv	x2, x2, xzr, cc  // cc = lo, ul, last
    764c:	adds	x0, x3, x2
    7650:	csinv	x0, x0, xzr, cc  // cc = lo, ul, last
    7654:	ret
    7658:	cmp	x0, x1
    765c:	csel	x0, x0, x1, cs  // cs = hs, nlast
    7660:	ret

0000000000007664 <gettext@@Base>:
    7664:	stp	x29, x30, [sp, #-16]!
    7668:	mov	x29, sp
    766c:	bl	20b0 <libintl_gettext@plt>
    7670:	ldp	x29, x30, [sp], #16
    7674:	ret

0000000000007678 <dgettext@@Base>:
    7678:	stp	x29, x30, [sp, #-16]!
    767c:	mov	x29, sp
    7680:	bl	1f90 <libintl_dgettext@plt>
    7684:	ldp	x29, x30, [sp], #16
    7688:	ret

000000000000768c <dcgettext@@Base>:
    768c:	stp	x29, x30, [sp, #-16]!
    7690:	mov	x29, sp
    7694:	bl	1d40 <libintl_dcgettext@plt>
    7698:	ldp	x29, x30, [sp], #16
    769c:	ret

00000000000076a0 <ngettext@@Base>:
    76a0:	stp	x29, x30, [sp, #-16]!
    76a4:	mov	x29, sp
    76a8:	bl	20d0 <libintl_ngettext@plt>
    76ac:	ldp	x29, x30, [sp], #16
    76b0:	ret

00000000000076b4 <dngettext@@Base>:
    76b4:	stp	x29, x30, [sp, #-16]!
    76b8:	mov	x29, sp
    76bc:	bl	1c20 <libintl_dngettext@plt>
    76c0:	ldp	x29, x30, [sp], #16
    76c4:	ret

00000000000076c8 <dcngettext@@Base>:
    76c8:	stp	x29, x30, [sp, #-16]!
    76cc:	mov	x29, sp
    76d0:	bl	1e00 <libintl_dcngettext@plt>
    76d4:	ldp	x29, x30, [sp], #16
    76d8:	ret

00000000000076dc <textdomain@@Base>:
    76dc:	stp	x29, x30, [sp, #-16]!
    76e0:	mov	x29, sp
    76e4:	bl	1d30 <libintl_textdomain@plt>
    76e8:	ldp	x29, x30, [sp], #16
    76ec:	ret

00000000000076f0 <bindtextdomain@@Base>:
    76f0:	stp	x29, x30, [sp, #-16]!
    76f4:	mov	x29, sp
    76f8:	bl	1e30 <libintl_bindtextdomain@plt>
    76fc:	ldp	x29, x30, [sp], #16
    7700:	ret

0000000000007704 <bind_textdomain_codeset@@Base>:
    7704:	stp	x29, x30, [sp, #-16]!
    7708:	mov	x29, sp
    770c:	bl	1e20 <libintl_bind_textdomain_codeset@plt>
    7710:	ldp	x29, x30, [sp], #16
    7714:	ret

Disassembly of section .fini:

0000000000007718 <.fini>:
    7718:	stp	x29, x30, [sp, #-16]!
    771c:	mov	x29, sp
    7720:	ldp	x29, x30, [sp], #16
    7724:	ret
