
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//crypto.mod_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_burn_stack>:
       0:	stp	x29, x30, [sp, #-96]!
       4:	mov	x2, #0x40                  	// #64
       8:	mov	w1, #0x0                   	// #0
       c:	mov	x29, sp
      10:	str	x19, [sp, #16]
      14:	mov	x19, x0
      18:	add	x0, sp, #0x20
      1c:	bl	0 <grub_memset>
      20:	cmp	x19, #0x40
      24:	b.hi	34 <grub_burn_stack+0x34>  // b.pmore
      28:	ldr	x19, [sp, #16]
      2c:	ldp	x29, x30, [sp], #96
      30:	ret
      34:	sub	x0, x19, #0x40
      38:	bl	0 <grub_burn_stack>
      3c:	ldr	x19, [sp, #16]
      40:	ldp	x29, x30, [sp], #96
      44:	ret

0000000000000048 <_gcry_burn_stack>:
      48:	stp	x29, x30, [sp, #-480]!
      4c:	mov	x2, #0x40                  	// #64
      50:	mov	w1, #0x0                   	// #0
      54:	mov	x29, sp
      58:	str	x19, [sp, #16]
      5c:	sxtw	x19, w0
      60:	add	x0, sp, #0x20
      64:	bl	0 <grub_memset>
      68:	cmp	x19, #0x40
      6c:	b.hi	7c <_gcry_burn_stack+0x34>  // b.pmore
      70:	ldr	x19, [sp, #16]
      74:	ldp	x29, x30, [sp], #480
      78:	ret
      7c:	add	x0, sp, #0x60
      80:	mov	x2, #0x40                  	// #64
      84:	mov	w1, #0x0                   	// #0
      88:	bl	0 <grub_memset>
      8c:	sub	x0, x19, #0x40
      90:	cmp	x0, #0x40
      94:	b.ls	70 <_gcry_burn_stack+0x28>  // b.plast
      98:	add	x0, sp, #0xa0
      9c:	mov	x2, #0x40                  	// #64
      a0:	mov	w1, #0x0                   	// #0
      a4:	bl	0 <grub_memset>
      a8:	sub	x0, x19, #0x80
      ac:	cmp	x0, #0x40
      b0:	b.ls	70 <_gcry_burn_stack+0x28>  // b.plast
      b4:	add	x0, sp, #0xe0
      b8:	mov	x2, #0x40                  	// #64
      bc:	mov	w1, #0x0                   	// #0
      c0:	bl	0 <grub_memset>
      c4:	sub	x0, x19, #0xc0
      c8:	cmp	x0, #0x40
      cc:	b.ls	70 <_gcry_burn_stack+0x28>  // b.plast
      d0:	add	x0, sp, #0x120
      d4:	mov	x2, #0x40                  	// #64
      d8:	mov	w1, #0x0                   	// #0
      dc:	bl	0 <grub_memset>
      e0:	sub	x0, x19, #0x100
      e4:	cmp	x0, #0x40
      e8:	b.ls	70 <_gcry_burn_stack+0x28>  // b.plast
      ec:	add	x0, sp, #0x160
      f0:	mov	x2, #0x40                  	// #64
      f4:	mov	w1, #0x0                   	// #0
      f8:	bl	0 <grub_memset>
      fc:	sub	x0, x19, #0x140
     100:	cmp	x0, #0x40
     104:	b.ls	70 <_gcry_burn_stack+0x28>  // b.plast
     108:	add	x0, sp, #0x1a0
     10c:	mov	x2, #0x40                  	// #64
     110:	mov	w1, #0x0                   	// #0
     114:	bl	0 <grub_memset>
     118:	sub	x0, x19, #0x180
     11c:	cmp	x0, #0x40
     120:	b.ls	70 <_gcry_burn_stack+0x28>  // b.plast
     124:	sub	x0, x19, #0x1c0
     128:	bl	0 <grub_burn_stack>
     12c:	b	70 <_gcry_burn_stack+0x28>

0000000000000130 <_gcry_assert_failed>:
     130:	stp	x29, x30, [sp, #-16]!
     134:	adrp	x7, 0 <grub_burn_stack>
     138:	mov	x6, x0
     13c:	mov	x29, sp
     140:	ldr	x0, [x7]
     144:	mov	w5, w2
     148:	mov	x4, x1
     14c:	mov	x1, x6
     150:	mov	x2, x4
     154:	mov	x4, x3
     158:	mov	w3, w5
     15c:	bl	0 <grub_fatal>
	...

0000000000000168 <_gcry_log_error>:
     168:	stp	x29, x30, [sp, #-160]!
     16c:	adrp	x8, 0 <grub_burn_stack>
     170:	mov	x29, sp
     174:	stp	x19, x20, [sp, #16]
     178:	mov	x20, x0
     17c:	ldr	x0, [x8]
     180:	stp	x1, x2, [sp, #104]
     184:	stp	x3, x4, [sp, #120]
     188:	stp	x5, x6, [sp, #136]
     18c:	str	x7, [sp, #152]
     190:	bl	0 <grub_env_get>
     194:	cbz	x0, 1f0 <_gcry_log_error+0x88>
     198:	adrp	x1, 0 <grub_burn_stack>
     19c:	mov	x19, x0
     1a0:	ldr	x1, [x1]
     1a4:	bl	0 <grub_strword>
     1a8:	cbz	w0, 1fc <_gcry_log_error+0x94>
     1ac:	adrp	x0, 0 <grub_burn_stack>
     1b0:	ldr	x0, [x0]
     1b4:	bl	0 <grub_printf>
     1b8:	add	x1, sp, #0xa0
     1bc:	stp	x1, x1, [sp, #64]
     1c0:	add	x0, sp, #0x60
     1c4:	mov	w2, #0xffffffc8            	// #-56
     1c8:	str	x0, [sp, #80]
     1cc:	stp	w2, wzr, [sp, #88]
     1d0:	add	x1, sp, #0x20
     1d4:	ldp	x2, x3, [sp, #64]
     1d8:	stp	x2, x3, [sp, #32]
     1dc:	mov	x0, x20
     1e0:	ldp	x2, x3, [sp, #80]
     1e4:	stp	x2, x3, [sp, #48]
     1e8:	bl	0 <grub_vprintf>
     1ec:	bl	0 <grub_refresh>
     1f0:	ldp	x19, x20, [sp, #16]
     1f4:	ldp	x29, x30, [sp], #160
     1f8:	ret
     1fc:	adrp	x1, 0 <grub_burn_stack>
     200:	mov	x0, x19
     204:	ldr	x1, [x1]
     208:	bl	0 <grub_strword>
     20c:	cbnz	w0, 1ac <_gcry_log_error+0x44>
     210:	ldp	x19, x20, [sp, #16]
     214:	ldp	x29, x30, [sp], #160
     218:	ret
     21c:	nop
	...

0000000000000240 <grub_cipher_register>:
     240:	adrp	x1, 0 <grub_burn_stack>
     244:	ldr	x1, [x1]
     248:	ldr	x2, [x1]
     24c:	str	x0, [x1]
     250:	str	x2, [x0, #88]
     254:	ret
	...

0000000000000260 <grub_cipher_unregister>:
     260:	adrp	x1, 0 <grub_burn_stack>
     264:	ldr	x2, [x1]
     268:	ldr	x1, [x2]
     26c:	cbz	x1, 290 <grub_cipher_unregister+0x30>
     270:	cmp	x1, x0
     274:	b.ne	280 <grub_cipher_unregister+0x20>  // b.any
     278:	b	298 <grub_cipher_unregister+0x38>
     27c:	b.eq	294 <grub_cipher_unregister+0x34>  // b.none
     280:	mov	x2, x1
     284:	ldr	x1, [x1, #88]
     288:	cmp	x0, x1
     28c:	cbnz	x1, 27c <grub_cipher_unregister+0x1c>
     290:	ret
     294:	add	x2, x2, #0x58
     298:	ldr	x0, [x1, #88]
     29c:	str	x0, [x2]
     2a0:	ret
     2a4:	nop
	...

00000000000002b0 <grub_md_register>:
     2b0:	adrp	x1, 0 <grub_burn_stack>
     2b4:	ldr	x1, [x1]
     2b8:	ldr	x2, [x1, #8]
     2bc:	str	x0, [x1, #8]
     2c0:	str	x2, [x0, #88]
     2c4:	ret
	...

00000000000002d0 <grub_md_unregister>:
     2d0:	adrp	x1, 0 <grub_burn_stack>
     2d4:	ldr	x2, [x1]
     2d8:	ldr	x1, [x2, #8]
     2dc:	cbz	x1, 300 <grub_md_unregister+0x30>
     2e0:	cmp	x1, x0
     2e4:	b.ne	2f0 <grub_md_unregister+0x20>  // b.any
     2e8:	b	314 <grub_md_unregister+0x44>
     2ec:	b.eq	304 <grub_md_unregister+0x34>  // b.none
     2f0:	mov	x2, x1
     2f4:	ldr	x1, [x1, #88]
     2f8:	cmp	x0, x1
     2fc:	cbnz	x1, 2ec <grub_md_unregister+0x1c>
     300:	ret
     304:	add	x2, x2, #0x58
     308:	ldr	x0, [x1, #88]
     30c:	str	x0, [x2]
     310:	ret
     314:	add	x2, x2, #0x8
     318:	b	308 <grub_md_unregister+0x38>
     31c:	nop
	...

0000000000000328 <grub_crypto_hash>:
     328:	stp	x29, x30, [sp, #-304]!
     32c:	mov	x29, sp
     330:	stp	x19, x20, [sp, #16]
     334:	mov	x19, x0
     338:	ldr	x0, [x0, #72]
     33c:	stp	x21, x22, [sp, #32]
     340:	cmp	x0, #0x100
     344:	b.hi	3ac <grub_crypto_hash+0x84>  // b.pmore
     348:	mov	x20, x1
     34c:	mov	x21, x2
     350:	ldr	x1, [x19, #40]
     354:	mov	x22, x3
     358:	add	x0, sp, #0x30
     35c:	blr	x1
     360:	ldr	x3, [x19, #48]
     364:	mov	x2, x22
     368:	mov	x1, x21
     36c:	add	x0, sp, #0x30
     370:	blr	x3
     374:	ldr	x1, [x19, #56]
     378:	add	x0, sp, #0x30
     37c:	blr	x1
     380:	ldr	x1, [x19, #64]
     384:	add	x0, sp, #0x30
     388:	blr	x1
     38c:	mov	x1, x0
     390:	ldr	x2, [x19, #32]
     394:	mov	x0, x20
     398:	bl	0 <grub_memmove>
     39c:	ldp	x19, x20, [sp, #16]
     3a0:	ldp	x21, x22, [sp, #32]
     3a4:	ldp	x29, x30, [sp], #304
     3a8:	ret
     3ac:	adrp	x0, 0 <grub_burn_stack>
     3b0:	ldr	x0, [x0]
     3b4:	bl	0 <grub_fatal>
	...

00000000000003c0 <grub_crypto_lookup_md_by_name>:
     3c0:	stp	x29, x30, [sp, #-32]!
     3c4:	adrp	x1, 0 <grub_burn_stack>
     3c8:	mov	w11, #0x1                   	// #1
     3cc:	mov	x29, sp
     3d0:	stp	x19, x20, [sp, #16]
     3d4:	mov	x19, x0
     3d8:	ldr	x20, [x1]
     3dc:	ldr	x0, [x20, #8]
     3e0:	cbz	x0, 440 <grub_crypto_lookup_md_by_name+0x80>
     3e4:	ldrb	w10, [x19]
     3e8:	mov	x7, x19
     3ec:	mov	w2, w10
     3f0:	ldr	x3, [x0]
     3f4:	cbnz	w10, 410 <grub_crypto_lookup_md_by_name+0x50>
     3f8:	b	460 <grub_crypto_lookup_md_by_name+0xa0>
     3fc:	csel	w4, w4, w1, cc  // cc = lo, ul, last
     400:	cmp	w4, w9
     404:	b.ne	48c <grub_crypto_lookup_md_by_name+0xcc>  // b.any
     408:	ldrb	w2, [x7, #1]!
     40c:	cbz	w2, 460 <grub_crypto_lookup_md_by_name+0xa0>
     410:	ldrb	w1, [x3]
     414:	sub	w8, w2, #0x41
     418:	cmp	w8, #0x1a
     41c:	add	w5, w2, #0x20
     420:	sub	w6, w1, #0x41
     424:	csel	w9, w5, w2, cc  // cc = lo, ul, last
     428:	add	x3, x3, #0x1
     42c:	add	w4, w1, #0x20
     430:	cmp	w6, #0x1a
     434:	cbnz	w1, 3fc <grub_crypto_lookup_md_by_name+0x3c>
     438:	ldr	x0, [x0, #88]
     43c:	cbnz	x0, 3e8 <grub_crypto_lookup_md_by_name+0x28>
     440:	ldr	x1, [x20, #16]
     444:	cmp	x1, #0x0
     448:	csel	w11, w11, wzr, ne  // ne = any
     44c:	cbnz	w11, 498 <grub_crypto_lookup_md_by_name+0xd8>
     450:	mov	x0, #0x0                   	// #0
     454:	ldp	x19, x20, [sp, #16]
     458:	ldp	x29, x30, [sp], #32
     45c:	ret
     460:	ldrb	w1, [x3]
     464:	mov	w2, #0x0                   	// #0
     468:	sub	w6, w1, #0x41
     46c:	cmp	w6, #0x1a
     470:	add	w3, w1, #0x20
     474:	csel	w1, w3, w1, cc  // cc = lo, ul, last
     478:	cmp	w2, w1
     47c:	b.eq	454 <grub_crypto_lookup_md_by_name+0x94>  // b.none
     480:	ldr	x0, [x0, #88]
     484:	cbnz	x0, 3e8 <grub_crypto_lookup_md_by_name+0x28>
     488:	b	440 <grub_crypto_lookup_md_by_name+0x80>
     48c:	cmp	w8, #0x1a
     490:	csel	w2, w5, w2, cc  // cc = lo, ul, last
     494:	b	46c <grub_crypto_lookup_md_by_name+0xac>
     498:	mov	x0, x19
     49c:	blr	x1
     4a0:	mov	w11, #0x0                   	// #0
     4a4:	b	3dc <grub_crypto_lookup_md_by_name+0x1c>
	...

00000000000004b0 <grub_crypto_lookup_cipher_by_name>:
     4b0:	stp	x29, x30, [sp, #-32]!
     4b4:	adrp	x1, 0 <grub_burn_stack>
     4b8:	mov	w12, #0x1                   	// #1
     4bc:	mov	x29, sp
     4c0:	stp	x19, x20, [sp, #16]
     4c4:	mov	x20, x0
     4c8:	ldr	x19, [x1]
     4cc:	ldr	x0, [x19]
     4d0:	cbz	x0, 598 <grub_crypto_lookup_cipher_by_name+0xe8>
     4d4:	ldrb	w9, [x20]
     4d8:	mov	x7, x20
     4dc:	mov	w2, w9
     4e0:	ldr	x4, [x0]
     4e4:	cbnz	w9, 500 <grub_crypto_lookup_cipher_by_name+0x50>
     4e8:	b	5f0 <grub_crypto_lookup_cipher_by_name+0x140>
     4ec:	csel	w3, w3, w1, cc  // cc = lo, ul, last
     4f0:	cmp	w3, w10
     4f4:	b.ne	61c <grub_crypto_lookup_cipher_by_name+0x16c>  // b.any
     4f8:	ldrb	w2, [x7, #1]!
     4fc:	cbz	w2, 5f0 <grub_crypto_lookup_cipher_by_name+0x140>
     500:	ldrb	w1, [x4]
     504:	sub	w8, w2, #0x41
     508:	cmp	w8, #0x1a
     50c:	add	w5, w2, #0x20
     510:	sub	w6, w1, #0x41
     514:	csel	w10, w5, w2, cc  // cc = lo, ul, last
     518:	add	x4, x4, #0x1
     51c:	add	w3, w1, #0x20
     520:	cmp	w6, #0x1a
     524:	cbnz	w1, 4ec <grub_crypto_lookup_cipher_by_name+0x3c>
     528:	ldr	x10, [x0, #8]
     52c:	cbz	x10, 590 <grub_crypto_lookup_cipher_by_name+0xe0>
     530:	ldr	x3, [x10]
     534:	cbz	x3, 590 <grub_crypto_lookup_cipher_by_name+0xe0>
     538:	mov	x7, x20
     53c:	mov	w2, w9
     540:	cbnz	w9, 55c <grub_crypto_lookup_cipher_by_name+0xac>
     544:	b	5b8 <grub_crypto_lookup_cipher_by_name+0x108>
     548:	csel	w4, w4, w1, cc  // cc = lo, ul, last
     54c:	cmp	w4, w11
     550:	b.ne	5e4 <grub_crypto_lookup_cipher_by_name+0x134>  // b.any
     554:	ldrb	w2, [x7, #1]!
     558:	cbz	w2, 5b8 <grub_crypto_lookup_cipher_by_name+0x108>
     55c:	ldrb	w1, [x3]
     560:	sub	w8, w2, #0x41
     564:	cmp	w8, #0x1a
     568:	add	w5, w2, #0x20
     56c:	sub	w6, w1, #0x41
     570:	csel	w11, w5, w2, cc  // cc = lo, ul, last
     574:	add	x3, x3, #0x1
     578:	add	w4, w1, #0x20
     57c:	cmp	w6, #0x1a
     580:	cbnz	w1, 548 <grub_crypto_lookup_cipher_by_name+0x98>
     584:	ldr	x3, [x10, #8]!
     588:	cbnz	x3, 538 <grub_crypto_lookup_cipher_by_name+0x88>
     58c:	nop
     590:	ldr	x0, [x0, #88]
     594:	cbnz	x0, 4d8 <grub_crypto_lookup_cipher_by_name+0x28>
     598:	ldr	x1, [x19, #16]
     59c:	cmp	x1, #0x0
     5a0:	csel	w12, w12, wzr, ne  // ne = any
     5a4:	cbnz	w12, 628 <grub_crypto_lookup_cipher_by_name+0x178>
     5a8:	mov	x0, #0x0                   	// #0
     5ac:	ldp	x19, x20, [sp, #16]
     5b0:	ldp	x29, x30, [sp], #32
     5b4:	ret
     5b8:	ldrb	w1, [x3]
     5bc:	mov	w2, #0x0                   	// #0
     5c0:	sub	w6, w1, #0x41
     5c4:	cmp	w6, #0x1a
     5c8:	add	w3, w1, #0x20
     5cc:	csel	w1, w3, w1, cc  // cc = lo, ul, last
     5d0:	cmp	w2, w1
     5d4:	b.eq	5ac <grub_crypto_lookup_cipher_by_name+0xfc>  // b.none
     5d8:	ldr	x3, [x10, #8]!
     5dc:	cbnz	x3, 538 <grub_crypto_lookup_cipher_by_name+0x88>
     5e0:	b	590 <grub_crypto_lookup_cipher_by_name+0xe0>
     5e4:	cmp	w8, #0x1a
     5e8:	csel	w2, w5, w2, cc  // cc = lo, ul, last
     5ec:	b	5c4 <grub_crypto_lookup_cipher_by_name+0x114>
     5f0:	ldrb	w1, [x4]
     5f4:	mov	w2, #0x0                   	// #0
     5f8:	sub	w6, w1, #0x41
     5fc:	cmp	w6, #0x1a
     600:	add	w3, w1, #0x20
     604:	csel	w1, w3, w1, cc  // cc = lo, ul, last
     608:	cmp	w2, w1
     60c:	b.ne	528 <grub_crypto_lookup_cipher_by_name+0x78>  // b.any
     610:	ldp	x19, x20, [sp, #16]
     614:	ldp	x29, x30, [sp], #32
     618:	ret
     61c:	cmp	w8, #0x1a
     620:	csel	w2, w5, w2, cc  // cc = lo, ul, last
     624:	b	5fc <grub_crypto_lookup_cipher_by_name+0x14c>
     628:	mov	x0, x20
     62c:	blr	x1
     630:	mov	w12, #0x0                   	// #0
     634:	b	4cc <grub_crypto_lookup_cipher_by_name+0x1c>
	...

0000000000000640 <grub_crypto_cipher_open>:
     640:	stp	x29, x30, [sp, #-32]!
     644:	mov	x29, sp
     648:	str	x19, [sp, #16]
     64c:	mov	x19, x0
     650:	ldr	x0, [x0, #40]
     654:	add	x0, x0, #0x8
     658:	bl	0 <grub_malloc>
     65c:	cbz	x0, 664 <grub_crypto_cipher_open+0x24>
     660:	str	x19, [x0]
     664:	ldr	x19, [sp, #16]
     668:	ldp	x29, x30, [sp], #32
     66c:	ret

0000000000000670 <grub_crypto_cipher_set_key>:
     670:	ldr	x3, [x0], #8
     674:	ldr	x3, [x3, #48]
     678:	mov	x16, x3
     67c:	br	x16

0000000000000680 <grub_crypto_ecb_decrypt>:
     680:	stp	x29, x30, [sp, #-64]!
     684:	mov	x29, sp
     688:	stp	x23, x24, [sp, #48]
     68c:	mov	x23, x0
     690:	ldr	x0, [x0]
     694:	ldr	x4, [x0, #64]
     698:	cbz	x4, 730 <grub_crypto_ecb_decrypt+0xb0>
     69c:	stp	x21, x22, [sp, #32]
     6a0:	ldr	x21, [x0, #24]
     6a4:	mov	w0, #0xa                   	// #10
     6a8:	cbz	x21, 720 <grub_crypto_ecb_decrypt+0xa0>
     6ac:	stp	x19, x20, [sp, #16]
     6b0:	mov	x20, x1
     6b4:	mov	x19, x2
     6b8:	sub	x1, x21, #0x1
     6bc:	orr	x2, x21, x3
     6c0:	tst	x1, x2
     6c4:	b.ne	71c <grub_crypto_ecb_decrypt+0x9c>  // b.any
     6c8:	add	x22, x19, x3
     6cc:	add	x24, x23, #0x8
     6d0:	cmp	x19, x22
     6d4:	b.cc	6e4 <grub_crypto_ecb_decrypt+0x64>  // b.lo, b.ul, b.last
     6d8:	b	704 <grub_crypto_ecb_decrypt+0x84>
     6dc:	ldr	x1, [x23]
     6e0:	ldr	x4, [x1, #64]
     6e4:	mov	x2, x19
     6e8:	mov	x1, x20
     6ec:	add	x19, x19, x21
     6f0:	mov	x0, x24
     6f4:	blr	x4
     6f8:	add	x20, x20, x21
     6fc:	cmp	x22, x19
     700:	b.hi	6dc <grub_crypto_ecb_decrypt+0x5c>  // b.pmore
     704:	mov	w0, #0x0                   	// #0
     708:	ldp	x19, x20, [sp, #16]
     70c:	ldp	x21, x22, [sp, #32]
     710:	ldp	x23, x24, [sp, #48]
     714:	ldp	x29, x30, [sp], #64
     718:	ret
     71c:	ldp	x19, x20, [sp, #16]
     720:	ldp	x21, x22, [sp, #32]
     724:	ldp	x23, x24, [sp, #48]
     728:	ldp	x29, x30, [sp], #64
     72c:	ret
     730:	mov	w0, #0x19                  	// #25
     734:	ldp	x23, x24, [sp, #48]
     738:	ldp	x29, x30, [sp], #64
     73c:	ret

0000000000000740 <grub_crypto_ecb_encrypt>:
     740:	stp	x29, x30, [sp, #-64]!
     744:	mov	x29, sp
     748:	stp	x23, x24, [sp, #48]
     74c:	mov	x23, x0
     750:	ldr	x0, [x0]
     754:	ldr	x4, [x0, #56]
     758:	cbz	x4, 7f0 <grub_crypto_ecb_encrypt+0xb0>
     75c:	stp	x21, x22, [sp, #32]
     760:	ldr	x21, [x0, #24]
     764:	mov	w0, #0xa                   	// #10
     768:	cbz	x21, 7e0 <grub_crypto_ecb_encrypt+0xa0>
     76c:	stp	x19, x20, [sp, #16]
     770:	mov	x20, x1
     774:	mov	x19, x2
     778:	sub	x1, x21, #0x1
     77c:	orr	x2, x21, x3
     780:	tst	x1, x2
     784:	b.ne	7dc <grub_crypto_ecb_encrypt+0x9c>  // b.any
     788:	add	x22, x19, x3
     78c:	add	x24, x23, #0x8
     790:	cmp	x19, x22
     794:	b.cc	7a4 <grub_crypto_ecb_encrypt+0x64>  // b.lo, b.ul, b.last
     798:	b	7c4 <grub_crypto_ecb_encrypt+0x84>
     79c:	ldr	x1, [x23]
     7a0:	ldr	x4, [x1, #56]
     7a4:	mov	x2, x19
     7a8:	mov	x1, x20
     7ac:	add	x19, x19, x21
     7b0:	mov	x0, x24
     7b4:	blr	x4
     7b8:	add	x20, x20, x21
     7bc:	cmp	x22, x19
     7c0:	b.hi	79c <grub_crypto_ecb_encrypt+0x5c>  // b.pmore
     7c4:	mov	w0, #0x0                   	// #0
     7c8:	ldp	x19, x20, [sp, #16]
     7cc:	ldp	x21, x22, [sp, #32]
     7d0:	ldp	x23, x24, [sp, #48]
     7d4:	ldp	x29, x30, [sp], #64
     7d8:	ret
     7dc:	ldp	x19, x20, [sp, #16]
     7e0:	ldp	x21, x22, [sp, #32]
     7e4:	ldp	x23, x24, [sp, #48]
     7e8:	ldp	x29, x30, [sp], #64
     7ec:	ret
     7f0:	mov	w0, #0x19                  	// #25
     7f4:	ldp	x23, x24, [sp, #48]
     7f8:	ldp	x29, x30, [sp], #64
     7fc:	ret

0000000000000800 <grub_crypto_cbc_encrypt>:
     800:	stp	x29, x30, [sp, #-80]!
     804:	mov	x29, sp
     808:	str	x25, [sp, #64]
     80c:	mov	x25, x0
     810:	ldr	x0, [x0]
     814:	stp	x19, x20, [sp, #16]
     818:	mov	x19, x1
     81c:	ldr	x1, [x0, #56]
     820:	cbz	x1, a04 <grub_crypto_cbc_encrypt+0x204>
     824:	stp	x23, x24, [sp, #48]
     828:	ldr	x24, [x0, #24]
     82c:	mov	w0, #0xa                   	// #10
     830:	cbz	x24, 8d4 <grub_crypto_cbc_encrypt+0xd4>
     834:	mov	x23, x2
     838:	sub	x1, x24, #0x1
     83c:	orr	x2, x24, x3
     840:	tst	x1, x2
     844:	b.ne	8d4 <grub_crypto_cbc_encrypt+0xd4>  // b.any
     848:	stp	x21, x22, [sp, #32]
     84c:	add	x20, x23, x3
     850:	mov	x21, x4
     854:	cmp	x23, x20
     858:	b.cs	9d4 <grub_crypto_cbc_encrypt+0x1d4>  // b.hs, b.nlast
     85c:	add	x22, x25, #0x8
     860:	mov	x6, x4
     864:	nop
     868:	mov	x5, x24
     86c:	mov	x8, x19
     870:	mov	x7, x23
     874:	nop
     878:	orr	x3, x6, x7
     87c:	orr	x3, x8, x3
     880:	ands	x3, x3, #0x7
     884:	b.eq	8e8 <grub_crypto_cbc_encrypt+0xe8>  // b.none
     888:	ldrb	w1, [x7], #1
     88c:	subs	x5, x5, #0x1
     890:	ldrb	w0, [x6], #1
     894:	eor	w1, w1, w0
     898:	strb	w1, [x8], #1
     89c:	b.ne	878 <grub_crypto_cbc_encrypt+0x78>  // b.any
     8a0:	ldr	x3, [x25]
     8a4:	mov	x0, x22
     8a8:	add	x23, x23, x24
     8ac:	mov	x2, x19
     8b0:	mov	x1, x19
     8b4:	ldr	x3, [x3, #56]
     8b8:	blr	x3
     8bc:	add	x0, x19, x24
     8c0:	cmp	x20, x23
     8c4:	mov	x6, x19
     8c8:	b.ls	9d8 <grub_crypto_cbc_encrypt+0x1d8>  // b.plast
     8cc:	mov	x19, x0
     8d0:	b	868 <grub_crypto_cbc_encrypt+0x68>
     8d4:	ldp	x19, x20, [sp, #16]
     8d8:	ldp	x23, x24, [sp, #48]
     8dc:	ldr	x25, [sp, #64]
     8e0:	ldp	x29, x30, [sp], #80
     8e4:	ret
     8e8:	cmp	x5, #0x7
     8ec:	b.ls	930 <grub_crypto_cbc_encrypt+0x130>  // b.plast
     8f0:	sub	x1, x5, #0x8
     8f4:	and	x1, x1, #0xfffffffffffffff8
     8f8:	add	x1, x1, #0x8
     8fc:	nop
     900:	ldr	x2, [x7, x3]
     904:	ldr	x0, [x6, x3]
     908:	eor	x2, x2, x0
     90c:	str	x2, [x8, x3]
     910:	add	x3, x3, #0x8
     914:	cmp	x1, x3
     918:	b.ne	900 <grub_crypto_cbc_encrypt+0x100>  // b.any
     91c:	add	x7, x7, x1
     920:	add	x6, x6, x1
     924:	add	x8, x8, x1
     928:	ands	x5, x5, #0x7
     92c:	b.eq	8a0 <grub_crypto_cbc_encrypt+0xa0>  // b.none
     930:	ldrb	w1, [x6]
     934:	cmp	x5, #0x1
     938:	ldrb	w0, [x7]
     93c:	eor	w1, w1, w0
     940:	strb	w1, [x8]
     944:	b.eq	8a0 <grub_crypto_cbc_encrypt+0xa0>  // b.none
     948:	ldrb	w0, [x6, #1]
     94c:	cmp	x5, #0x2
     950:	ldrb	w1, [x7, #1]
     954:	eor	w0, w0, w1
     958:	strb	w0, [x8, #1]
     95c:	b.eq	8a0 <grub_crypto_cbc_encrypt+0xa0>  // b.none
     960:	ldrb	w0, [x7, #2]
     964:	cmp	x5, #0x3
     968:	ldrb	w1, [x6, #2]
     96c:	eor	w0, w0, w1
     970:	strb	w0, [x8, #2]
     974:	b.eq	8a0 <grub_crypto_cbc_encrypt+0xa0>  // b.none
     978:	ldrb	w0, [x7, #3]
     97c:	cmp	x5, #0x4
     980:	ldrb	w1, [x6, #3]
     984:	eor	w0, w0, w1
     988:	strb	w0, [x8, #3]
     98c:	b.eq	8a0 <grub_crypto_cbc_encrypt+0xa0>  // b.none
     990:	ldrb	w0, [x7, #4]
     994:	subs	x5, x5, #0x5
     998:	ldrb	w1, [x6, #4]
     99c:	eor	w0, w0, w1
     9a0:	strb	w0, [x8, #4]
     9a4:	b.eq	8a0 <grub_crypto_cbc_encrypt+0xa0>  // b.none
     9a8:	ldrb	w0, [x7, #5]
     9ac:	cmp	x5, #0x1
     9b0:	ldrb	w1, [x6, #5]
     9b4:	eor	w0, w0, w1
     9b8:	strb	w0, [x8, #5]
     9bc:	b.eq	8a0 <grub_crypto_cbc_encrypt+0xa0>  // b.none
     9c0:	ldrb	w0, [x7, #6]
     9c4:	ldrb	w1, [x6, #6]
     9c8:	eor	w0, w0, w1
     9cc:	strb	w0, [x8, #6]
     9d0:	b	8a0 <grub_crypto_cbc_encrypt+0xa0>
     9d4:	mov	x19, x4
     9d8:	mov	x2, x24
     9dc:	mov	x1, x19
     9e0:	mov	x0, x21
     9e4:	bl	0 <grub_memmove>
     9e8:	mov	w0, #0x0                   	// #0
     9ec:	ldp	x19, x20, [sp, #16]
     9f0:	ldp	x21, x22, [sp, #32]
     9f4:	ldp	x23, x24, [sp, #48]
     9f8:	ldr	x25, [sp, #64]
     9fc:	ldp	x29, x30, [sp], #80
     a00:	ret
     a04:	mov	w0, #0x19                  	// #25
     a08:	ldp	x19, x20, [sp, #16]
     a0c:	ldr	x25, [sp, #64]
     a10:	ldp	x29, x30, [sp], #80
     a14:	ret

0000000000000a18 <grub_crypto_cbc_decrypt>:
     a18:	stp	x29, x30, [sp, #-208]!
     a1c:	mov	x29, sp
     a20:	stp	x19, x20, [sp, #16]
     a24:	mov	x20, x0
     a28:	ldr	x0, [x0]
     a2c:	stp	x27, x28, [sp, #80]
     a30:	mov	x27, x1
     a34:	ldr	x1, [x0, #64]
     a38:	cbz	x1, f9c <grub_crypto_cbc_decrypt+0x584>
     a3c:	ldr	x28, [x0, #24]
     a40:	stp	x21, x22, [sp, #32]
     a44:	mov	w0, #0xa                   	// #10
     a48:	sub	x21, x28, #0x1
     a4c:	cmp	x21, #0xf
     a50:	b.hi	a60 <grub_crypto_cbc_decrypt+0x48>  // b.pmore
     a54:	orr	x1, x28, x3
     a58:	tst	x1, x21
     a5c:	b.eq	a74 <grub_crypto_cbc_decrypt+0x5c>  // b.none
     a60:	ldp	x19, x20, [sp, #16]
     a64:	ldp	x21, x22, [sp, #32]
     a68:	ldp	x27, x28, [sp, #80]
     a6c:	ldp	x29, x30, [sp], #208
     a70:	ret
     a74:	stp	x25, x26, [sp, #64]
     a78:	add	x19, x2, x3
     a7c:	mov	x26, x2
     a80:	cmp	x2, x19
     a84:	b.cs	f10 <grub_crypto_cbc_decrypt+0x4f8>  // b.hs, b.nlast
     a88:	sub	x0, x28, #0x4
     a8c:	str	x0, [sp, #96]
     a90:	sub	x0, x28, #0x5
     a94:	str	x0, [sp, #104]
     a98:	sub	x0, x28, #0x6
     a9c:	str	x0, [sp, #112]
     aa0:	sub	x0, x28, #0x7
     aa4:	str	x0, [sp, #120]
     aa8:	sub	x0, x28, #0x8
     aac:	str	x0, [sp, #128]
     ab0:	sub	x0, x28, #0x9
     ab4:	str	x0, [sp, #136]
     ab8:	sub	x0, x28, #0xa
     abc:	str	x0, [sp, #144]
     ac0:	sub	x0, x28, #0xb
     ac4:	str	x0, [sp, #152]
     ac8:	sub	x0, x28, #0xc
     acc:	str	x0, [sp, #160]
     ad0:	sub	x0, x28, #0xd
     ad4:	str	x0, [sp, #168]
     ad8:	sub	x0, x28, #0xe
     adc:	mov	x25, x4
     ae0:	sub	x22, x28, #0x2
     ae4:	stp	x23, x24, [sp, #48]
     ae8:	add	x24, x20, #0x8
     aec:	sub	x23, x28, #0x3
     af0:	str	x0, [sp, #176]
     af4:	sub	x0, x28, #0xf
     af8:	str	x0, [sp, #184]
     afc:	b	dbc <grub_crypto_cbc_decrypt+0x3a4>
     b00:	mov	x1, x25
     b04:	mov	x0, x27
     b08:	ldrb	w2, [x27]
     b0c:	ldrb	w3, [x1], #1
     b10:	eor	w2, w2, w3
     b14:	strb	w2, [x0], #1
     b18:	cbz	x21, d9c <grub_crypto_cbc_decrypt+0x384>
     b1c:	orr	x2, x1, x0
     b20:	tst	x2, #0x7
     b24:	b.eq	f2c <grub_crypto_cbc_decrypt+0x514>  // b.none
     b28:	ldrb	w2, [x27, #1]
     b2c:	add	x0, x27, #0x2
     b30:	ldrb	w3, [x25, #1]
     b34:	add	x1, x25, #0x2
     b38:	eor	w2, w2, w3
     b3c:	strb	w2, [x27, #1]
     b40:	cbz	x22, d9c <grub_crypto_cbc_decrypt+0x384>
     b44:	orr	x2, x1, x0
     b48:	tst	x2, #0x7
     b4c:	b.eq	f34 <grub_crypto_cbc_decrypt+0x51c>  // b.none
     b50:	ldrb	w2, [x27, #2]
     b54:	add	x0, x27, #0x3
     b58:	ldrb	w3, [x25, #2]
     b5c:	add	x1, x25, #0x3
     b60:	eor	w2, w2, w3
     b64:	strb	w2, [x27, #2]
     b68:	cbz	x23, d9c <grub_crypto_cbc_decrypt+0x384>
     b6c:	orr	x2, x1, x0
     b70:	tst	x2, #0x7
     b74:	b.eq	f3c <grub_crypto_cbc_decrypt+0x524>  // b.none
     b78:	ldrb	w2, [x27, #3]
     b7c:	add	x0, x27, #0x4
     b80:	ldrb	w3, [x25, #3]
     b84:	add	x1, x25, #0x4
     b88:	eor	w2, w2, w3
     b8c:	strb	w2, [x27, #3]
     b90:	ldr	x2, [sp, #96]
     b94:	cbz	x2, d9c <grub_crypto_cbc_decrypt+0x384>
     b98:	orr	x2, x1, x0
     b9c:	tst	x2, #0x7
     ba0:	b.eq	f44 <grub_crypto_cbc_decrypt+0x52c>  // b.none
     ba4:	ldrb	w3, [x25, #4]
     ba8:	add	x2, x27, #0x5
     bac:	ldrb	w1, [x27, #4]
     bb0:	mov	x0, x2
     bb4:	eor	w1, w1, w3
     bb8:	strb	w1, [x27, #4]
     bbc:	ldr	x3, [sp, #104]
     bc0:	add	x1, x25, #0x5
     bc4:	cbz	x3, d9c <grub_crypto_cbc_decrypt+0x384>
     bc8:	orr	x2, x1, x2
     bcc:	tst	x2, #0x7
     bd0:	b.eq	e00 <grub_crypto_cbc_decrypt+0x3e8>  // b.none
     bd4:	ldrb	w2, [x27, #5]
     bd8:	add	x0, x27, #0x6
     bdc:	ldrb	w3, [x25, #5]
     be0:	add	x1, x25, #0x6
     be4:	eor	w2, w2, w3
     be8:	strb	w2, [x27, #5]
     bec:	ldr	x2, [sp, #112]
     bf0:	cbz	x2, d9c <grub_crypto_cbc_decrypt+0x384>
     bf4:	orr	x2, x1, x0
     bf8:	tst	x2, #0x7
     bfc:	b.eq	f4c <grub_crypto_cbc_decrypt+0x534>  // b.none
     c00:	ldrb	w2, [x27, #6]
     c04:	add	x0, x27, #0x7
     c08:	ldrb	w3, [x25, #6]
     c0c:	add	x1, x25, #0x7
     c10:	eor	w2, w2, w3
     c14:	strb	w2, [x27, #6]
     c18:	ldr	x2, [sp, #120]
     c1c:	cbz	x2, d9c <grub_crypto_cbc_decrypt+0x384>
     c20:	orr	x2, x1, x0
     c24:	tst	x2, #0x7
     c28:	b.eq	f54 <grub_crypto_cbc_decrypt+0x53c>  // b.none
     c2c:	ldrb	w2, [x27, #7]
     c30:	add	x0, x27, #0x8
     c34:	ldrb	w3, [x25, #7]
     c38:	add	x1, x25, #0x8
     c3c:	eor	w2, w2, w3
     c40:	strb	w2, [x27, #7]
     c44:	ldr	x2, [sp, #128]
     c48:	cbz	x2, d9c <grub_crypto_cbc_decrypt+0x384>
     c4c:	orr	x2, x1, x0
     c50:	tst	x2, #0x7
     c54:	b.eq	f5c <grub_crypto_cbc_decrypt+0x544>  // b.none
     c58:	ldrb	w2, [x27, #8]
     c5c:	add	x0, x27, #0x9
     c60:	ldrb	w3, [x25, #8]
     c64:	add	x1, x25, #0x9
     c68:	eor	w2, w2, w3
     c6c:	strb	w2, [x27, #8]
     c70:	ldr	x2, [sp, #136]
     c74:	cbz	x2, d9c <grub_crypto_cbc_decrypt+0x384>
     c78:	orr	x2, x1, x0
     c7c:	tst	x2, #0x7
     c80:	b.eq	f64 <grub_crypto_cbc_decrypt+0x54c>  // b.none
     c84:	ldrb	w2, [x27, #9]
     c88:	add	x0, x27, #0xa
     c8c:	ldrb	w3, [x25, #9]
     c90:	add	x1, x25, #0xa
     c94:	eor	w2, w2, w3
     c98:	strb	w2, [x27, #9]
     c9c:	ldr	x2, [sp, #144]
     ca0:	cbz	x2, d9c <grub_crypto_cbc_decrypt+0x384>
     ca4:	orr	x2, x1, x0
     ca8:	tst	x2, #0x7
     cac:	b.eq	f6c <grub_crypto_cbc_decrypt+0x554>  // b.none
     cb0:	ldrb	w2, [x27, #10]
     cb4:	add	x0, x27, #0xb
     cb8:	ldrb	w3, [x25, #10]
     cbc:	add	x1, x25, #0xb
     cc0:	eor	w2, w2, w3
     cc4:	strb	w2, [x27, #10]
     cc8:	ldr	x2, [sp, #152]
     ccc:	cbz	x2, d9c <grub_crypto_cbc_decrypt+0x384>
     cd0:	orr	x2, x1, x0
     cd4:	tst	x2, #0x7
     cd8:	b.eq	f74 <grub_crypto_cbc_decrypt+0x55c>  // b.none
     cdc:	ldrb	w2, [x27, #11]
     ce0:	add	x0, x27, #0xc
     ce4:	ldrb	w3, [x25, #11]
     ce8:	add	x1, x25, #0xc
     cec:	eor	w2, w2, w3
     cf0:	strb	w2, [x27, #11]
     cf4:	ldr	x2, [sp, #160]
     cf8:	cbz	x2, d9c <grub_crypto_cbc_decrypt+0x384>
     cfc:	orr	x2, x1, x0
     d00:	tst	x2, #0x7
     d04:	b.eq	f7c <grub_crypto_cbc_decrypt+0x564>  // b.none
     d08:	ldrb	w2, [x27, #12]
     d0c:	add	x0, x27, #0xd
     d10:	ldrb	w3, [x25, #12]
     d14:	add	x1, x25, #0xd
     d18:	eor	w2, w2, w3
     d1c:	strb	w2, [x27, #12]
     d20:	ldr	x2, [sp, #168]
     d24:	cbz	x2, d9c <grub_crypto_cbc_decrypt+0x384>
     d28:	orr	x2, x1, x0
     d2c:	tst	x2, #0x7
     d30:	b.eq	f84 <grub_crypto_cbc_decrypt+0x56c>  // b.none
     d34:	ldrb	w2, [x27, #13]
     d38:	add	x0, x27, #0xe
     d3c:	ldrb	w3, [x25, #13]
     d40:	add	x1, x25, #0xe
     d44:	eor	w2, w2, w3
     d48:	strb	w2, [x27, #13]
     d4c:	ldr	x2, [sp, #176]
     d50:	cbz	x2, d9c <grub_crypto_cbc_decrypt+0x384>
     d54:	orr	x2, x1, x0
     d58:	tst	x2, #0x7
     d5c:	b.eq	f8c <grub_crypto_cbc_decrypt+0x574>  // b.none
     d60:	ldrb	w2, [x27, #14]
     d64:	add	x0, x27, #0xf
     d68:	ldrb	w3, [x25, #14]
     d6c:	add	x1, x25, #0xf
     d70:	eor	w2, w2, w3
     d74:	strb	w2, [x27, #14]
     d78:	ldr	x2, [sp, #184]
     d7c:	cbz	x2, d9c <grub_crypto_cbc_decrypt+0x384>
     d80:	orr	x2, x1, x0
     d84:	tst	x2, #0x7
     d88:	b.eq	f94 <grub_crypto_cbc_decrypt+0x57c>  // b.none
     d8c:	ldrb	w0, [x27, #15]
     d90:	ldrb	w1, [x25, #15]
     d94:	eor	w0, w0, w1
     d98:	strb	w0, [x27, #15]
     d9c:	add	x26, x26, x28
     da0:	mov	x2, x28
     da4:	add	x1, sp, #0xc0
     da8:	mov	x0, x25
     dac:	bl	0 <grub_memmove>
     db0:	add	x27, x27, x28
     db4:	cmp	x19, x26
     db8:	b.ls	f0c <grub_crypto_cbc_decrypt+0x4f4>  // b.plast
     dbc:	mov	x2, x28
     dc0:	mov	x1, x26
     dc4:	add	x0, sp, #0xc0
     dc8:	bl	0 <grub_memmove>
     dcc:	ldr	x3, [x20]
     dd0:	mov	x0, x24
     dd4:	mov	x2, x26
     dd8:	mov	x1, x27
     ddc:	ldr	x3, [x3, #64]
     de0:	blr	x3
     de4:	orr	x0, x25, x27
     de8:	tst	x0, #0x7
     dec:	b.ne	b00 <grub_crypto_cbc_decrypt+0xe8>  // b.any
     df0:	mov	x3, x28
     df4:	mov	x1, x25
     df8:	mov	x0, x27
     dfc:	nop
     e00:	cmp	x3, #0x7
     e04:	b.ls	e4c <grub_crypto_cbc_decrypt+0x434>  // b.plast
     e08:	ldr	x8, [x0]
     e0c:	cmp	x3, #0x10
     e10:	ldr	x9, [x1]
     e14:	sub	x2, x3, #0x8
     e18:	eor	x8, x8, x9
     e1c:	str	x8, [x0]
     e20:	b.ne	e34 <grub_crypto_cbc_decrypt+0x41c>  // b.any
     e24:	ldr	x8, [x0, #8]
     e28:	ldr	x9, [x1, #8]
     e2c:	eor	x8, x8, x9
     e30:	str	x8, [x0, #8]
     e34:	and	x2, x2, #0xfffffffffffffff8
     e38:	ands	x3, x3, #0x7
     e3c:	add	x2, x2, #0x8
     e40:	add	x0, x0, x2
     e44:	add	x1, x1, x2
     e48:	b.eq	d9c <grub_crypto_cbc_decrypt+0x384>  // b.none
     e4c:	ldrb	w2, [x1]
     e50:	cmp	x3, #0x1
     e54:	ldrb	w8, [x0]
     e58:	eor	w2, w2, w8
     e5c:	strb	w2, [x0]
     e60:	b.eq	d9c <grub_crypto_cbc_decrypt+0x384>  // b.none
     e64:	ldrb	w2, [x1, #1]
     e68:	cmp	x3, #0x2
     e6c:	ldrb	w8, [x0, #1]
     e70:	eor	w2, w2, w8
     e74:	strb	w2, [x0, #1]
     e78:	b.eq	d9c <grub_crypto_cbc_decrypt+0x384>  // b.none
     e7c:	ldrb	w2, [x0, #2]
     e80:	cmp	x3, #0x3
     e84:	ldrb	w8, [x1, #2]
     e88:	eor	w2, w2, w8
     e8c:	strb	w2, [x0, #2]
     e90:	b.eq	d9c <grub_crypto_cbc_decrypt+0x384>  // b.none
     e94:	ldrb	w2, [x0, #3]
     e98:	cmp	x3, #0x4
     e9c:	ldrb	w8, [x1, #3]
     ea0:	eor	w2, w2, w8
     ea4:	strb	w2, [x0, #3]
     ea8:	b.eq	d9c <grub_crypto_cbc_decrypt+0x384>  // b.none
     eac:	ldrb	w2, [x0, #4]
     eb0:	subs	x3, x3, #0x5
     eb4:	ldrb	w8, [x1, #4]
     eb8:	eor	w2, w2, w8
     ebc:	strb	w2, [x0, #4]
     ec0:	b.eq	d9c <grub_crypto_cbc_decrypt+0x384>  // b.none
     ec4:	ldrb	w2, [x0, #5]
     ec8:	cmp	x3, #0x1
     ecc:	ldrb	w3, [x1, #5]
     ed0:	eor	w2, w2, w3
     ed4:	strb	w2, [x0, #5]
     ed8:	b.eq	d9c <grub_crypto_cbc_decrypt+0x384>  // b.none
     edc:	ldrb	w2, [x1, #6]
     ee0:	add	x26, x26, x28
     ee4:	ldrb	w1, [x0, #6]
     ee8:	add	x27, x27, x28
     eec:	eor	w1, w1, w2
     ef0:	strb	w1, [x0, #6]
     ef4:	mov	x2, x28
     ef8:	add	x1, sp, #0xc0
     efc:	mov	x0, x25
     f00:	bl	0 <grub_memmove>
     f04:	cmp	x19, x26
     f08:	b.hi	dbc <grub_crypto_cbc_decrypt+0x3a4>  // b.pmore
     f0c:	ldp	x23, x24, [sp, #48]
     f10:	mov	w0, #0x0                   	// #0
     f14:	ldp	x19, x20, [sp, #16]
     f18:	ldp	x21, x22, [sp, #32]
     f1c:	ldp	x25, x26, [sp, #64]
     f20:	ldp	x27, x28, [sp, #80]
     f24:	ldp	x29, x30, [sp], #208
     f28:	ret
     f2c:	mov	x3, x21
     f30:	b	e00 <grub_crypto_cbc_decrypt+0x3e8>
     f34:	mov	x3, x22
     f38:	b	e00 <grub_crypto_cbc_decrypt+0x3e8>
     f3c:	mov	x3, x23
     f40:	b	e00 <grub_crypto_cbc_decrypt+0x3e8>
     f44:	ldr	x3, [sp, #96]
     f48:	b	e00 <grub_crypto_cbc_decrypt+0x3e8>
     f4c:	ldr	x3, [sp, #112]
     f50:	b	e00 <grub_crypto_cbc_decrypt+0x3e8>
     f54:	ldr	x3, [sp, #120]
     f58:	b	e00 <grub_crypto_cbc_decrypt+0x3e8>
     f5c:	ldr	x3, [sp, #128]
     f60:	b	e00 <grub_crypto_cbc_decrypt+0x3e8>
     f64:	ldr	x3, [sp, #136]
     f68:	b	e00 <grub_crypto_cbc_decrypt+0x3e8>
     f6c:	ldr	x3, [sp, #144]
     f70:	b	e00 <grub_crypto_cbc_decrypt+0x3e8>
     f74:	ldr	x3, [sp, #152]
     f78:	b	e00 <grub_crypto_cbc_decrypt+0x3e8>
     f7c:	ldr	x3, [sp, #160]
     f80:	b	e00 <grub_crypto_cbc_decrypt+0x3e8>
     f84:	ldr	x3, [sp, #168]
     f88:	b	e00 <grub_crypto_cbc_decrypt+0x3e8>
     f8c:	ldr	x3, [sp, #176]
     f90:	b	e00 <grub_crypto_cbc_decrypt+0x3e8>
     f94:	ldr	x3, [sp, #184]
     f98:	b	e00 <grub_crypto_cbc_decrypt+0x3e8>
     f9c:	mov	w0, #0x19                  	// #25
     fa0:	ldp	x19, x20, [sp, #16]
     fa4:	ldp	x27, x28, [sp, #80]
     fa8:	ldp	x29, x30, [sp], #208
     fac:	ret

0000000000000fb0 <grub_crypto_hmac_init>:
     fb0:	stp	x29, x30, [sp, #-336]!
     fb4:	mov	x29, sp
     fb8:	stp	x19, x20, [sp, #16]
     fbc:	mov	x19, x0
     fc0:	str	x25, [sp, #64]
     fc4:	mov	x25, x1
     fc8:	ldr	x1, [x0, #32]
     fcc:	stp	x23, x24, [sp, #48]
     fd0:	ldr	x0, [x0, #80]
     fd4:	cmp	x1, x0
     fd8:	b.hi	11b8 <grub_crypto_hmac_init+0x208>  // b.pmore
     fdc:	ldr	x0, [x19, #72]
     fe0:	mov	x24, x2
     fe4:	stp	x21, x22, [sp, #32]
     fe8:	bl	0 <grub_malloc>
     fec:	mov	x21, x0
     ff0:	cbz	x0, 116c <grub_crypto_hmac_init+0x1bc>
     ff4:	ldr	x0, [x19, #80]
     ff8:	cmp	x0, x24
     ffc:	b.cc	10f8 <grub_crypto_hmac_init+0x148>  // b.lo, b.ul, b.last
    1000:	mov	x23, #0x0                   	// #0
    1004:	bl	0 <grub_zalloc>
    1008:	mov	x20, x0
    100c:	cbz	x0, 11d4 <grub_crypto_hmac_init+0x224>
    1010:	ldr	x0, [x19, #80]
    1014:	bl	0 <grub_zalloc>
    1018:	mov	x22, x0
    101c:	cbz	x0, 1178 <grub_crypto_hmac_init+0x1c8>
    1020:	mov	x2, x24
    1024:	mov	x1, x25
    1028:	mov	x0, x20
    102c:	bl	0 <grub_memmove>
    1030:	mov	x2, x24
    1034:	mov	x1, x25
    1038:	mov	x0, x22
    103c:	bl	0 <grub_memmove>
    1040:	ldr	x0, [x19, #80]
    1044:	mov	w2, #0x0                   	// #0
    1048:	mov	x1, #0x0                   	// #0
    104c:	mov	w5, #0x36                  	// #54
    1050:	mov	w4, #0x5c                  	// #92
    1054:	cbz	x0, 1084 <grub_crypto_hmac_init+0xd4>
    1058:	ldrb	w3, [x20, x1]
    105c:	add	w2, w2, #0x1
    1060:	eor	w3, w3, w5
    1064:	strb	w3, [x20, x1]
    1068:	ldrb	w3, [x22, x1]
    106c:	eor	w3, w3, w4
    1070:	strb	w3, [x22, x1]
    1074:	mov	w1, w2
    1078:	ldr	x0, [x19, #80]
    107c:	cmp	x0, w2, uxtw
    1080:	b.hi	1058 <grub_crypto_hmac_init+0xa8>  // b.pmore
    1084:	mov	x0, x23
    1088:	bl	0 <grub_free>
    108c:	ldr	x1, [x19, #40]
    1090:	mov	x0, x21
    1094:	blr	x1
    1098:	ldr	x3, [x19, #48]
    109c:	mov	x1, x20
    10a0:	ldr	x2, [x19, #80]
    10a4:	mov	x0, x21
    10a8:	blr	x3
    10ac:	ldr	x2, [x19, #80]
    10b0:	mov	w1, #0x0                   	// #0
    10b4:	mov	x0, x20
    10b8:	bl	0 <grub_memset>
    10bc:	mov	x0, x20
    10c0:	bl	0 <grub_free>
    10c4:	mov	x0, #0x18                  	// #24
    10c8:	bl	0 <grub_malloc>
    10cc:	mov	x23, x0
    10d0:	cbz	x0, 11dc <grub_crypto_hmac_init+0x22c>
    10d4:	stp	x19, x21, [x0]
    10d8:	str	x22, [x0, #16]
    10dc:	mov	x0, x23
    10e0:	ldp	x19, x20, [sp, #16]
    10e4:	ldp	x21, x22, [sp, #32]
    10e8:	ldp	x23, x24, [sp, #48]
    10ec:	ldr	x25, [sp, #64]
    10f0:	ldp	x29, x30, [sp], #336
    10f4:	ret
    10f8:	ldr	x0, [x19, #32]
    10fc:	bl	0 <grub_malloc>
    1100:	mov	x23, x0
    1104:	cbz	x0, 116c <grub_crypto_hmac_init+0x1bc>
    1108:	ldr	x0, [x19, #72]
    110c:	cmp	x0, #0x100
    1110:	b.hi	11e4 <grub_crypto_hmac_init+0x234>  // b.pmore
    1114:	ldr	x1, [x19, #40]
    1118:	add	x0, sp, #0x50
    111c:	blr	x1
    1120:	ldr	x3, [x19, #48]
    1124:	mov	x2, x24
    1128:	mov	x1, x25
    112c:	add	x0, sp, #0x50
    1130:	mov	x25, x23
    1134:	blr	x3
    1138:	ldr	x1, [x19, #56]
    113c:	add	x0, sp, #0x50
    1140:	blr	x1
    1144:	ldr	x1, [x19, #64]
    1148:	add	x0, sp, #0x50
    114c:	blr	x1
    1150:	mov	x1, x0
    1154:	ldr	x2, [x19, #32]
    1158:	mov	x0, x23
    115c:	bl	0 <grub_memmove>
    1160:	ldr	x24, [x19, #32]
    1164:	ldr	x0, [x19, #80]
    1168:	b	1004 <grub_crypto_hmac_init+0x54>
    116c:	mov	x22, #0x0                   	// #0
    1170:	mov	x20, #0x0                   	// #0
    1174:	mov	x23, #0x0                   	// #0
    1178:	mov	x0, x23
    117c:	bl	0 <grub_free>
    1180:	mov	x0, x21
    1184:	bl	0 <grub_free>
    1188:	mov	x0, x20
    118c:	bl	0 <grub_free>
    1190:	mov	x0, x22
    1194:	mov	x23, #0x0                   	// #0
    1198:	bl	0 <grub_free>
    119c:	mov	x0, x23
    11a0:	ldp	x19, x20, [sp, #16]
    11a4:	ldp	x21, x22, [sp, #32]
    11a8:	ldp	x23, x24, [sp, #48]
    11ac:	ldr	x25, [sp, #64]
    11b0:	ldp	x29, x30, [sp], #336
    11b4:	ret
    11b8:	mov	x23, #0x0                   	// #0
    11bc:	mov	x0, x23
    11c0:	ldp	x19, x20, [sp, #16]
    11c4:	ldp	x23, x24, [sp, #48]
    11c8:	ldr	x25, [sp, #64]
    11cc:	ldp	x29, x30, [sp], #336
    11d0:	ret
    11d4:	mov	x22, #0x0                   	// #0
    11d8:	b	1178 <grub_crypto_hmac_init+0x1c8>
    11dc:	mov	x20, #0x0                   	// #0
    11e0:	b	1178 <grub_crypto_hmac_init+0x1c8>
    11e4:	adrp	x0, 0 <grub_burn_stack>
    11e8:	ldr	x0, [x0]
    11ec:	bl	0 <grub_fatal>
	...

00000000000011f8 <grub_crypto_hmac_write>:
    11f8:	ldp	x3, x0, [x0]
    11fc:	ldr	x3, [x3, #48]
    1200:	mov	x16, x3
    1204:	br	x16

0000000000001208 <grub_crypto_hmac_fini>:
    1208:	stp	x29, x30, [sp, #-48]!
    120c:	mov	x29, sp
    1210:	stp	x19, x20, [sp, #16]
    1214:	mov	x19, x0
    1218:	ldr	x0, [x0]
    121c:	stp	x21, x22, [sp, #32]
    1220:	mov	x22, x1
    1224:	ldr	x0, [x0, #72]
    1228:	bl	0 <grub_malloc>
    122c:	cbz	x0, 134c <grub_crypto_hmac_fini+0x144>
    1230:	mov	x20, x0
    1234:	ldp	x1, x0, [x19]
    1238:	ldr	x1, [x1, #56]
    123c:	blr	x1
    1240:	ldp	x1, x0, [x19]
    1244:	ldr	x1, [x1, #64]
    1248:	blr	x1
    124c:	ldp	x1, x0, [x19]
    1250:	ldr	x1, [x1, #64]
    1254:	blr	x1
    1258:	mov	x21, x0
    125c:	ldr	x1, [x19]
    1260:	mov	x0, x20
    1264:	ldr	x1, [x1, #40]
    1268:	blr	x1
    126c:	ldr	x2, [x19]
    1270:	mov	x0, x20
    1274:	ldr	x1, [x19, #16]
    1278:	ldr	x3, [x2, #48]
    127c:	ldr	x2, [x2, #80]
    1280:	blr	x3
    1284:	ldr	x3, [x19]
    1288:	mov	x1, x21
    128c:	mov	x0, x20
    1290:	ldr	x2, [x3, #32]
    1294:	ldr	x3, [x3, #48]
    1298:	blr	x3
    129c:	ldr	x1, [x19]
    12a0:	mov	x0, x20
    12a4:	ldr	x1, [x1, #56]
    12a8:	blr	x1
    12ac:	ldr	x2, [x19]
    12b0:	mov	w1, #0x0                   	// #0
    12b4:	ldr	x0, [x19, #16]
    12b8:	ldr	x2, [x2, #80]
    12bc:	bl	0 <grub_memset>
    12c0:	ldr	x0, [x19, #16]
    12c4:	bl	0 <grub_free>
    12c8:	ldp	x2, x0, [x19]
    12cc:	mov	w1, #0x0                   	// #0
    12d0:	ldr	x2, [x2, #72]
    12d4:	bl	0 <grub_memset>
    12d8:	ldr	x0, [x19, #8]
    12dc:	bl	0 <grub_free>
    12e0:	ldr	x1, [x19]
    12e4:	mov	x0, x20
    12e8:	ldr	x1, [x1, #64]
    12ec:	blr	x1
    12f0:	mov	x1, x0
    12f4:	ldr	x2, [x19]
    12f8:	mov	x0, x22
    12fc:	ldr	x2, [x2, #32]
    1300:	bl	0 <grub_memmove>
    1304:	ldr	x2, [x19]
    1308:	mov	w1, #0x0                   	// #0
    130c:	mov	x0, x20
    1310:	ldr	x2, [x2, #72]
    1314:	bl	0 <grub_memset>
    1318:	mov	x0, x20
    131c:	bl	0 <grub_free>
    1320:	mov	x2, #0x18                  	// #24
    1324:	mov	w1, #0x0                   	// #0
    1328:	mov	x0, x19
    132c:	bl	0 <grub_memset>
    1330:	mov	x0, x19
    1334:	bl	0 <grub_free>
    1338:	mov	w0, #0x0                   	// #0
    133c:	ldp	x19, x20, [sp, #16]
    1340:	ldp	x21, x22, [sp, #32]
    1344:	ldp	x29, x30, [sp], #48
    1348:	ret
    134c:	mov	w0, #0x22                  	// #34
    1350:	ldp	x19, x20, [sp, #16]
    1354:	ldp	x21, x22, [sp, #32]
    1358:	ldp	x29, x30, [sp], #48
    135c:	ret

0000000000001360 <grub_crypto_hmac_buffer>:
    1360:	stp	x29, x30, [sp, #-48]!
    1364:	mov	x29, sp
    1368:	stp	x19, x20, [sp, #16]
    136c:	mov	x20, x5
    1370:	stp	x21, x22, [sp, #32]
    1374:	mov	x21, x3
    1378:	mov	x22, x4
    137c:	bl	fb0 <grub_crypto_hmac_init>
    1380:	cbz	x0, 13b4 <grub_crypto_hmac_buffer+0x54>
    1384:	mov	x19, x0
    1388:	mov	x2, x22
    138c:	ldp	x3, x0, [x0]
    1390:	mov	x1, x21
    1394:	ldr	x3, [x3, #48]
    1398:	blr	x3
    139c:	mov	x1, x20
    13a0:	mov	x0, x19
    13a4:	ldp	x19, x20, [sp, #16]
    13a8:	ldp	x21, x22, [sp, #32]
    13ac:	ldp	x29, x30, [sp], #48
    13b0:	b	1208 <grub_crypto_hmac_fini>
    13b4:	mov	w0, #0x22                  	// #34
    13b8:	ldp	x19, x20, [sp, #16]
    13bc:	ldp	x21, x22, [sp, #32]
    13c0:	ldp	x29, x30, [sp], #48
    13c4:	ret

00000000000013c8 <grub_crypto_gcry_error>:
    13c8:	cbnz	w0, 13d0 <grub_crypto_gcry_error+0x8>
    13cc:	ret
    13d0:	adrp	x1, 0 <grub_burn_stack>
    13d4:	mov	w0, #0x1e                  	// #30
    13d8:	ldr	x1, [x1]
    13dc:	b	0 <grub_error>
	...

00000000000013e8 <grub_crypto_memcmp>:
    13e8:	cbz	x2, 1420 <grub_crypto_memcmp+0x38>
    13ec:	mov	x3, #0x0                   	// #0
    13f0:	mov	x4, #0x0                   	// #0
    13f4:	nop
    13f8:	ldrb	w6, [x1, x3]
    13fc:	ldrb	w5, [x0, x3]
    1400:	add	x3, x3, #0x1
    1404:	cmp	w6, w5
    1408:	cinc	x4, x4, ne  // ne = any
    140c:	cmp	x2, x3
    1410:	b.ne	13f8 <grub_crypto_memcmp+0x10>  // b.any
    1414:	cmp	x4, #0x0
    1418:	cset	w0, ne  // ne = any
    141c:	ret
    1420:	mov	w0, #0x0                   	// #0
    1424:	ret

0000000000001428 <grub_password_get>:
    1428:	stp	x29, x30, [sp, #-48]!
    142c:	mov	x29, sp
    1430:	stp	x19, x20, [sp, #16]
    1434:	mov	w20, w1
    1438:	mov	w19, #0x0                   	// #0
    143c:	str	x21, [sp, #32]
    1440:	mov	x21, x0
    1444:	nop
    1448:	bl	0 <grub_getkey>
    144c:	cmp	w0, #0xa
    1450:	add	w3, w19, #0x2
    1454:	sub	w2, w0, #0x20
    1458:	ccmp	w0, #0xd, #0x4, ne  // ne = any
    145c:	b.eq	14a0 <grub_password_get+0x78>  // b.none
    1460:	cmp	w0, #0x1b
    1464:	b.eq	1500 <grub_password_get+0xd8>  // b.none
    1468:	cmp	w0, #0x8
    146c:	b.eq	14f0 <grub_password_get+0xc8>  // b.none
    1470:	cmp	w2, #0x5e
    1474:	b.hi	1448 <grub_password_get+0x20>  // b.pmore
    1478:	cmp	w3, w20
    147c:	b.cs	1448 <grub_password_get+0x20>  // b.hs, b.nlast
    1480:	strb	w0, [x21, w19, uxtw]
    1484:	add	w19, w19, #0x1
    1488:	bl	0 <grub_getkey>
    148c:	cmp	w0, #0xa
    1490:	add	w3, w19, #0x2
    1494:	sub	w2, w0, #0x20
    1498:	ccmp	w0, #0xd, #0x4, ne  // ne = any
    149c:	b.ne	1460 <grub_password_get+0x38>  // b.any
    14a0:	cmp	w0, #0x1b
    14a4:	add	x21, x21, w19, uxtw
    14a8:	sub	w20, w20, w19
    14ac:	cset	w19, ne  // ne = any
    14b0:	mov	w2, w20
    14b4:	mov	x0, x21
    14b8:	mov	w1, #0x0                   	// #0
    14bc:	bl	0 <grub_memset>
    14c0:	adrp	x1, 0 <grub_burn_stack>
    14c4:	adrp	x0, 0 <grub_burn_stack>
    14c8:	ldr	x1, [x1]
    14cc:	ldr	x0, [x0]
    14d0:	ldr	x1, [x1]
    14d4:	blr	x1
    14d8:	bl	0 <grub_refresh>
    14dc:	mov	w0, w19
    14e0:	ldp	x19, x20, [sp, #16]
    14e4:	ldr	x21, [sp, #32]
    14e8:	ldp	x29, x30, [sp], #48
    14ec:	ret
    14f0:	cmp	w19, #0x0
    14f4:	cset	w0, ne  // ne = any
    14f8:	sub	w19, w19, w0
    14fc:	b	1448 <grub_password_get+0x20>
    1500:	mov	w19, #0x0                   	// #0
    1504:	b	14b0 <grub_password_get+0x88>
	...
