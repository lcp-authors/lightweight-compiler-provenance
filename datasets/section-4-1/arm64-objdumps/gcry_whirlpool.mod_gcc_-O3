
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//gcry_whirlpool.mod_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x13d8>:
       0:	sub	sp, sp, #0x210
       4:	tst	x0, #0xf
       8:	stp	x29, x30, [sp]
       c:	mov	x29, sp
      10:	stp	x19, x20, [sp, #16]
      14:	stp	x21, x22, [sp, #32]
      18:	stp	x23, x24, [sp, #48]
      1c:	mov	x23, x0
      20:	stp	x25, x26, [sp, #64]
      24:	stp	x27, x28, [sp, #80]
      28:	ldrb	w3, [x1]
      2c:	ldrb	w4, [x1, #2]
      30:	ldrb	w2, [x1, #1]
      34:	ldrb	w5, [x1, #4]
      38:	lsl	x3, x3, #56
      3c:	str	x0, [sp, #392]
      40:	lsl	x4, x4, #40
      44:	ldrb	w0, [x1, #3]
      48:	orr	x2, x3, x2, lsl #48
      4c:	ldrb	w9, [x1, #5]
      50:	lsl	x5, x5, #24
      54:	ldrb	w3, [x1, #9]
      58:	orr	x0, x4, x0, lsl #32
      5c:	ldrb	w4, [x1, #10]
      60:	orr	x0, x0, x2
      64:	orr	x9, x5, x9, lsl #16
      68:	ldrb	w2, [x1, #8]
      6c:	orr	x9, x0, x9
      70:	ldrb	w5, [x1, #15]
      74:	lsl	x0, x3, #48
      78:	ldrb	w3, [x1, #11]
      7c:	orr	x4, x0, x4, lsl #40
      80:	ldrb	w8, [x1, #12]
      84:	orr	x0, x5, x2, lsl #56
      88:	ldrb	w2, [x1, #17]
      8c:	lsl	x3, x3, #32
      90:	ldrb	w6, [x1, #7]
      94:	ldrb	w10, [x1, #14]
      98:	orr	x0, x4, x0
      9c:	ldrb	w16, [x1, #6]
      a0:	orr	x8, x3, x8, lsl #24
      a4:	ldrb	w7, [x1, #13]
      a8:	lsl	x5, x2, #48
      ac:	ldrb	w4, [x1, #18]
      b0:	orr	x8, x0, x8
      b4:	ldrb	w3, [x1, #16]
      b8:	orr	x16, x6, x16, lsl #8
      bc:	ldrb	w11, [x1, #23]
      c0:	lsl	x7, x7, #16
      c4:	ldrb	w2, [x1, #19]
      c8:	orr	x4, x5, x4, lsl #40
      cc:	ldrb	w20, [x1, #20]
      d0:	orr	x14, x7, x10, lsl #8
      d4:	orr	x3, x11, x3, lsl #56
      d8:	ldrb	w11, [x1, #31]
      dc:	orr	x5, x4, x3
      e0:	lsl	x2, x2, #32
      e4:	ldrb	w4, [x1, #25]
      e8:	orr	x20, x2, x20, lsl #24
      ec:	ldrb	w3, [x1, #26]
      f0:	orr	x5, x5, x20
      f4:	ldrb	w2, [x1, #24]
      f8:	orr	x9, x9, x16
      fc:	lsl	x4, x4, #48
     100:	ldrb	w7, [x1, #58]
     104:	orr	x3, x4, x3, lsl #40
     108:	ldrb	w0, [x1, #27]
     10c:	orr	x2, x11, x2, lsl #56
     110:	ldrb	w19, [x1, #28]
     114:	orr	x4, x3, x2
     118:	ldrb	w2, [x1, #33]
     11c:	ldrb	w3, [x1, #34]
     120:	lsl	x18, x7, #40
     124:	ldrb	w11, [x1, #41]
     128:	lsl	x0, x0, #32
     12c:	ldrb	w7, [x1, #42]
     130:	lsl	x2, x2, #48
     134:	ldrb	w17, [x1, #39]
     138:	orr	x19, x0, x19, lsl #24
     13c:	ldrb	w21, [x1, #47]
     140:	lsl	x11, x11, #48
     144:	ldrb	w6, [x1, #21]
     148:	orr	x3, x2, x3, lsl #40
     14c:	ldrb	w15, [x1, #49]
     150:	orr	x7, x11, x7, lsl #40
     154:	ldrb	w0, [x1, #32]
     158:	orr	x4, x4, x19
     15c:	ldrb	w2, [x1, #40]
     160:	lsl	x6, x6, #16
     164:	ldrb	w13, [x1, #22]
     168:	lsl	x15, x15, #48
     16c:	ldrb	w11, [x1, #50]
     170:	orr	x0, x17, x0, lsl #56
     174:	orr	x2, x21, x2, lsl #56
     178:	ldrb	w22, [x1, #30]
     17c:	ldrb	w21, [x1, #55]
     180:	orr	x3, x3, x0
     184:	ldrb	w12, [x1, #29]
     188:	orr	x11, x15, x11, lsl #40
     18c:	ldrb	w10, [x1, #35]
     190:	orr	x2, x7, x2
     194:	ldrb	w17, [x1, #43]
     198:	orr	x13, x6, x13, lsl #8
     19c:	ldrb	w0, [x1, #48]
     1a0:	lsl	x12, x12, #16
     1a4:	ldrb	w15, [x1, #51]
     1a8:	lsl	x10, x10, #32
     1ac:	ldrb	w7, [x1, #57]
     1b0:	lsl	x17, x17, #32
     1b4:	ldrb	w6, [x1, #56]
     1b8:	orr	x0, x21, x0, lsl #56
     1bc:	ldrb	w20, [x1, #63]
     1c0:	orr	x0, x11, x0
     1c4:	orr	x7, x18, x7, lsl #48
     1c8:	ldrb	w11, [x1, #44]
     1cc:	ldrb	w18, [x1, #60]
     1d0:	lsl	x15, x15, #32
     1d4:	orr	x6, x20, x6, lsl #56
     1d8:	ldrb	w19, [x1, #36]
     1dc:	orr	x6, x7, x6
     1e0:	ldrb	w7, [x1, #52]
     1e4:	orr	x11, x17, x11, lsl #24
     1e8:	ldrb	w17, [x1, #53]
     1ec:	orr	x10, x10, x19, lsl #24
     1f0:	ldrb	w20, [x1, #37]
     1f4:	orr	x7, x15, x7, lsl #24
     1f8:	ldrb	w19, [x1, #45]
     1fc:	ldrb	w15, [x1, #62]
     200:	lsl	x21, x18, #24
     204:	orr	x7, x0, x7
     208:	ldrb	w18, [x1, #59]
     20c:	ldrb	w0, [x1, #54]
     210:	orr	x3, x3, x10
     214:	orr	x2, x2, x11
     218:	ldrb	w10, [x1, #46]
     21c:	ldrb	w11, [x1, #38]
     220:	lsl	x17, x17, #16
     224:	ldrb	w1, [x1, #61]
     228:	lsl	x20, x20, #16
     22c:	lsl	x19, x19, #16
     230:	orr	x18, x21, x18, lsl #32
     234:	lsl	x15, x15, #8
     238:	orr	x0, x17, x0, lsl #8
     23c:	orr	x0, x7, x0
     240:	orr	x12, x12, x22, lsl #8
     244:	orr	x11, x20, x11, lsl #8
     248:	orr	x10, x19, x10, lsl #8
     24c:	orr	x6, x6, x18
     250:	orr	x1, x15, x1, lsl #16
     254:	orr	x8, x8, x14
     258:	orr	x5, x5, x13
     25c:	orr	x4, x4, x12
     260:	orr	x3, x3, x11
     264:	orr	x2, x2, x10
     268:	stp	x0, x2, [sp, #336]
     26c:	orr	x0, x6, x1
     270:	str	x0, [sp, #328]
     274:	stp	x3, x4, [sp, #352]
     278:	stp	x5, x8, [sp, #368]
     27c:	str	x9, [sp, #384]
     280:	b.ne	bb4 <grub_mod_init-0x824>  // b.any
     284:	ldp	x2, x3, [x23, #32]
     288:	stp	x2, x3, [sp, #432]
     28c:	stp	x2, x3, [sp, #496]
     290:	add	x2, sp, #0x200
     294:	ldp	x6, x7, [x23]
     298:	stp	x6, x7, [sp, #400]
     29c:	ldp	x4, x5, [x23, #16]
     2a0:	stp	x4, x5, [sp, #416]
     2a4:	ldp	x0, x1, [x23, #48]
     2a8:	stp	x0, x1, [x2]
     2ac:	stp	x0, x1, [sp, #448]
     2b0:	stp	x6, x7, [sp, #464]
     2b4:	stp	x4, x5, [sp, #480]
     2b8:	adrp	x1, 0 <grub_mod_init-0x13d8>
     2bc:	adrp	x3, 0 <grub_mod_init-0x13d8>
     2c0:	adrp	x2, 0 <grub_mod_init-0x13d8>
     2c4:	ldp	x9, x8, [sp, #464]
     2c8:	adrp	x0, 0 <grub_mod_init-0x13d8>
     2cc:	ldr	x1, [x1]
     2d0:	ldr	x3, [x3]
     2d4:	stp	x1, x3, [sp, #304]
     2d8:	ldr	x2, [x2]
     2dc:	stp	x1, x2, [sp, #176]
     2e0:	ldr	x1, [sp, #384]
     2e4:	ldp	x10, x11, [sp, #480]
     2e8:	eor	x30, x1, x9
     2ec:	ldr	x1, [sp, #376]
     2f0:	ldp	x18, x24, [sp, #496]
     2f4:	eor	x8, x1, x8
     2f8:	ldr	x1, [sp, #368]
     2fc:	ldp	x2, x3, [sp, #328]
     300:	eor	x10, x1, x10
     304:	ldr	x1, [sp, #360]
     308:	ldr	x22, [sp, #512]
     30c:	eor	x11, x1, x11
     310:	ldr	x1, [sp, #352]
     314:	eor	x3, x3, x22
     318:	ldr	x0, [x0]
     31c:	eor	x19, x1, x18
     320:	ldr	x1, [sp, #520]
     324:	str	x0, [sp, #320]
     328:	ldr	x0, [sp, #400]
     32c:	eor	x1, x2, x1
     330:	str	x1, [sp, #96]
     334:	mov	x18, x19
     338:	str	x0, [sp, #144]
     33c:	str	x3, [sp, #168]
     340:	ldr	x4, [sp, #344]
     344:	ldp	x6, x20, [sp, #408]
     348:	eor	x24, x4, x24
     34c:	ldr	x27, [sp, #424]
     350:	mov	x15, x24
     354:	ldp	x7, x23, [sp, #432]
     358:	str	x27, [sp, #136]
     35c:	ldp	x14, x16, [sp, #448]
     360:	mov	x9, x14
     364:	nop
     368:	ldr	x1, [sp, #304]
     36c:	and	x28, x6, #0xff
     370:	ldp	x0, x12, [sp, #136]
     374:	add	x4, x1, #0x50
     378:	add	x3, x1, #0x850
     37c:	stp	x0, x30, [sp, #144]
     380:	lsr	x30, x30, #56
     384:	ldr	x1, [sp, #312]
     388:	ubfx	x26, x9, #40, #8
     38c:	lsr	x14, x12, #56
     390:	str	x30, [sp, #264]
     394:	add	x2, x1, #0x750
     398:	sub	x5, x1, #0xb0
     39c:	ubfx	x25, x12, #48, #8
     3a0:	ubfx	x24, x16, #40, #8
     3a4:	mov	x13, x20
     3a8:	ubfx	x19, x9, #32, #8
     3ac:	ldr	x30, [x2, x28, lsl #3]
     3b0:	mov	x28, x8
     3b4:	ubfx	x8, x16, #48, #8
     3b8:	lsr	x21, x6, #56
     3bc:	ldr	x26, [x3, x26, lsl #3]
     3c0:	ubfx	x27, x20, #48, #8
     3c4:	ldr	x14, [x5, x14, lsl #3]
     3c8:	ubfx	x20, x20, #8, #8
     3cc:	ldr	x8, [x4, x8, lsl #3]
     3d0:	stp	x15, x10, [sp, #120]
     3d4:	add	x1, x1, #0xf50
     3d8:	stp	x20, x19, [sp, #192]
     3dc:	and	x19, x13, #0xff
     3e0:	eor	x8, x8, x26
     3e4:	ldr	x24, [x3, x24, lsl #3]
     3e8:	eor	x14, x14, x30
     3ec:	ldr	x10, [x4, x25, lsl #3]
     3f0:	ubfx	x25, x12, #32, #8
     3f4:	eor	x14, x8, x14
     3f8:	ubfx	x17, x6, #48, #8
     3fc:	eor	x10, x10, x24
     400:	ubfx	x22, x12, #40, #8
     404:	ldr	x19, [x2, x19, lsl #3]
     408:	lsr	x0, x0, #56
     40c:	ldr	x8, [x5, x21, lsl #3]
     410:	str	x0, [sp, #160]
     414:	ldr	x24, [sp, #136]
     418:	eor	x8, x8, x19
     41c:	ldr	x21, [x1, x25, lsl #3]
     420:	ubfx	x25, x6, #40, #8
     424:	ubfx	x19, x24, #8, #8
     428:	eor	x10, x10, x8
     42c:	and	x8, x24, #0xff
     430:	stp	x11, x18, [sp, #104]
     434:	ubfx	x18, x24, #16, #8
     438:	ldr	x22, [x3, x22, lsl #3]
     43c:	lsr	x11, x13, #56
     440:	ldr	x24, [x3, x25, lsl #3]
     444:	ldr	x17, [x4, x17, lsl #3]
     448:	ldp	x26, x25, [sp, #160]
     44c:	eor	x17, x17, x22
     450:	ldr	x22, [x4, x27, lsl #3]
     454:	and	x27, x7, #0xff
     458:	ldr	x0, [sp, #184]
     45c:	eor	x22, x22, x24
     460:	ldr	x20, [sp, #320]
     464:	add	x0, x0, #0x650
     468:	ldr	x15, [x5, x26, lsl #3]
     46c:	ubfx	x26, x25, #48, #8
     470:	str	x25, [sp, #160]
     474:	add	x20, x20, #0x550
     478:	ldr	x25, [x2, x27, lsl #3]
     47c:	lsr	w27, w16, #24
     480:	ldr	x8, [x2, x8, lsl #3]
     484:	eor	x15, x15, x25
     488:	ldr	x24, [x0, x27, lsl #3]
     48c:	eor	x22, x22, x15
     490:	ldr	x11, [x5, x11, lsl #3]
     494:	eor	x21, x21, x24
     498:	eor	x22, x22, x21
     49c:	ubfx	x21, x23, #32, #8
     4a0:	ldr	x24, [sp, #184]
     4a4:	eor	x11, x11, x8
     4a8:	eor	x11, x17, x11
     4ac:	lsr	w27, w9, #24
     4b0:	add	x15, x24, #0xe50
     4b4:	str	x26, [sp, #296]
     4b8:	ldr	x24, [x1, x21, lsl #3]
     4bc:	lsr	w21, w7, #24
     4c0:	ldr	x17, [x15, x18, lsl #3]
     4c4:	ubfx	x26, x16, #32, #8
     4c8:	ldr	x30, [x0, x21, lsl #3]
     4cc:	ubfx	x8, x23, #8, #8
     4d0:	ldr	x21, [sp, #200]
     4d4:	eor	x30, x24, x30
     4d8:	eor	x14, x14, x30
     4dc:	lsr	w30, w23, #24
     4e0:	ubfx	x25, x7, #8, #8
     4e4:	ubfx	x24, x23, #16, #8
     4e8:	ldr	x21, [x1, x21, lsl #3]
     4ec:	ubfx	x18, x7, #16, #8
     4f0:	ldr	x30, [x0, x30, lsl #3]
     4f4:	str	x22, [sp, #136]
     4f8:	ldr	x25, [x20, x25, lsl #3]
     4fc:	eor	x21, x21, x30
     500:	eor	x10, x10, x21
     504:	str	x10, [sp, #200]
     508:	ldr	x21, [sp, #192]
     50c:	ubfx	x30, x9, #16, #8
     510:	ldr	x18, [x15, x18, lsl #3]
     514:	lsr	x22, x7, #56
     518:	ldr	x10, [x20, x21, lsl #3]
     51c:	ldr	x21, [x1, x26, lsl #3]
     520:	eor	x17, x17, x10
     524:	ldr	x10, [x15, x30, lsl #3]
     528:	eor	x30, x14, x17
     52c:	ldr	x14, [sp, #176]
     530:	ldr	x26, [x0, x27, lsl #3]
     534:	ldr	x27, [sp, #144]
     538:	eor	x21, x21, x26
     53c:	ldr	x17, [x14], #8
     540:	str	x14, [sp, #176]
     544:	ubfx	x26, x27, #48, #8
     548:	ubfx	x14, x13, #40, #8
     54c:	ldr	x27, [x20, x8, lsl #3]
     550:	eor	x8, x11, x21
     554:	and	x11, x23, #0xff
     558:	str	x17, [sp, #192]
     55c:	str	x8, [sp, #216]
     560:	eor	x10, x10, x27
     564:	ldr	x19, [x20, x19, lsl #3]
     568:	ubfx	x27, x9, #48, #8
     56c:	ldr	x24, [x15, x24, lsl #3]
     570:	eor	x19, x18, x19
     574:	ldr	x21, [x4, x26, lsl #3]
     578:	ubfx	x26, x6, #32, #8
     57c:	ldr	x8, [x3, x14, lsl #3]
     580:	and	x18, x9, #0xff
     584:	ldr	x14, [x5, x22, lsl #3]
     588:	eor	x21, x21, x8
     58c:	ldr	x8, [x2, x11, lsl #3]
     590:	lsr	w11, w12, #24
     594:	ldr	x26, [x1, x26, lsl #3]
     598:	eor	x8, x14, x8
     59c:	ldr	x11, [x0, x11, lsl #3]
     5a0:	ubfx	x14, x16, #16, #8
     5a4:	eor	x8, x21, x8
     5a8:	ubfx	x21, x9, #8, #8
     5ac:	eor	x11, x26, x11
     5b0:	lsr	x17, x23, #56
     5b4:	ldr	x26, [sp, #144]
     5b8:	eor	x24, x24, x25
     5bc:	ldr	x22, [x15, x14, lsl #3]
     5c0:	ubfx	x25, x16, #8, #8
     5c4:	ldr	x21, [x20, x21, lsl #3]
     5c8:	ubfx	x26, x26, #40, #8
     5cc:	ldr	x14, [x4, x27, lsl #3]
     5d0:	ubfx	x27, x7, #48, #8
     5d4:	eor	x21, x22, x21
     5d8:	ubfx	x22, x12, #16, #8
     5dc:	eor	x11, x8, x11
     5e0:	stp	x24, x11, [sp, #224]
     5e4:	lsr	x9, x9, #56
     5e8:	ldr	x8, [x2, x18, lsl #3]
     5ec:	lsr	w18, w6, #24
     5f0:	ldr	x24, [x3, x26, lsl #3]
     5f4:	str	x19, [sp, #208]
     5f8:	ldr	x11, [x4, x27, lsl #3]
     5fc:	ubfx	x19, x13, #32, #8
     600:	ldr	x17, [x5, x17, lsl #3]
     604:	eor	x11, x11, x24
     608:	ldr	x22, [x15, x22, lsl #3]
     60c:	eor	x17, x17, x8
     610:	ldr	x25, [x20, x25, lsl #3]
     614:	eor	x11, x11, x17
     618:	str	x21, [sp, #240]
     61c:	eor	x24, x22, x25
     620:	ldr	x21, [x0, x18, lsl #3]
     624:	ldr	x19, [x1, x19, lsl #3]
     628:	ldp	x22, x17, [sp, #136]
     62c:	eor	x19, x19, x21
     630:	ldr	x18, [x5, x9, lsl #3]
     634:	ubfx	x9, x23, #48, #8
     638:	ubfx	x23, x23, #40, #8
     63c:	eor	x27, x11, x19
     640:	ubfx	x21, x7, #40, #8
     644:	and	x11, x16, #0xff
     648:	ubfx	x7, x7, #32, #8
     64c:	lsr	x16, x16, #56
     650:	ldr	x8, [x3, x23, lsl #3]
     654:	eor	x22, x22, x10
     658:	str	x22, [sp, #136]
     65c:	ubfx	x19, x17, #32, #8
     660:	stp	x27, x24, [sp, #248]
     664:	lsr	w10, w13, #24
     668:	eor	x14, x14, x8
     66c:	ldr	x22, [x3, x21, lsl #3]
     670:	ubfx	x8, x6, #16, #8
     674:	ldr	x21, [x1, x7, lsl #3]
     678:	lsr	w17, w17, #24
     67c:	ldr	x9, [x4, x9, lsl #3]
     680:	ubfx	x13, x13, #16, #8
     684:	ldr	x24, [x2, x11, lsl #3]
     688:	eor	x9, x9, x22
     68c:	ldr	x23, [x5, x16, lsl #3]
     690:	eor	x18, x18, x24
     694:	ldr	x16, [sp, #96]
     698:	ubfx	x22, x12, #8, #8
     69c:	ldr	x26, [sp, #160]
     6a0:	and	x12, x12, #0xff
     6a4:	ldr	x27, [sp, #264]
     6a8:	ubfx	x6, x6, #8, #8
     6ac:	ldr	x24, [x1, x19, lsl #3]
     6b0:	ubfx	x19, x16, #48, #8
     6b4:	ldr	x25, [x5, x27, lsl #3]
     6b8:	eor	x9, x9, x18
     6bc:	ldr	x16, [x0, x17, lsl #3]
     6c0:	ubfx	x17, x26, #40, #8
     6c4:	ldr	x26, [x15, x13, lsl #3]
     6c8:	eor	x16, x21, x16
     6cc:	ldr	x13, [x15, x8, lsl #3]
     6d0:	lsr	x11, x28, #56
     6d4:	ldp	x8, x27, [sp, #120]
     6d8:	ldr	x18, [x0, x10, lsl #3]
     6dc:	ldr	x7, [sp, #192]
     6e0:	eor	x24, x24, x18
     6e4:	ubfx	x21, x8, #32, #8
     6e8:	eor	x9, x9, x24
     6ec:	ldr	x8, [x2, x12, lsl #3]
     6f0:	eor	x7, x30, x7
     6f4:	ldr	w12, [sp, #112]
     6f8:	ldr	x10, [x20, x22, lsl #3]
     6fc:	eor	x23, x23, x8
     700:	lsr	w18, w12, #24
     704:	eor	x14, x14, x23
     708:	ldr	x12, [x20, x6, lsl #3]
     70c:	str	x7, [sp, #144]
     710:	ldr	x6, [sp, #104]
     714:	and	x7, x28, #0xff
     718:	ldr	x23, [x3, x17, lsl #3]
     71c:	eor	x16, x14, x16
     720:	ubfx	x22, x6, #16, #8
     724:	eor	x26, x26, x12
     728:	ldr	x17, [x0, x18, lsl #3]
     72c:	ldr	x6, [x4, x19, lsl #3]
     730:	ldr	x18, [x15, x22, lsl #3]
     734:	eor	x6, x6, x23
     738:	ldr	x19, [x1, x21, lsl #3]
     73c:	ldr	x22, [sp, #96]
     740:	eor	x17, x19, x17
     744:	ldr	x30, [sp, #152]
     748:	ldr	x8, [x2, x7, lsl #3]
     74c:	ubfx	x23, x22, #40, #8
     750:	ldr	x19, [sp, #160]
     754:	ubfx	x21, x30, #48, #8
     758:	ubfx	x7, x27, #8, #8
     75c:	eor	x8, x25, x8
     760:	eor	x8, x6, x8
     764:	and	x25, x27, #0xff
     768:	ldr	x6, [x3, x23, lsl #3]
     76c:	ubfx	x23, x19, #32, #8
     770:	ldr	x22, [x20, x7, lsl #3]
     774:	mov	x24, x30
     778:	ldr	x7, [x4, x21, lsl #3]
     77c:	eor	x30, x13, x10
     780:	ldr	x19, [x5, x11, lsl #3]
     784:	eor	x7, x7, x6
     788:	ldr	w11, [sp, #120]
     78c:	lsr	x21, x27, #56
     790:	ldr	x6, [x2, x25, lsl #3]
     794:	mov	x27, x9
     798:	lsr	w25, w11, #24
     79c:	ubfx	x9, x24, #40, #8
     7a0:	ldr	x11, [x1, x23, lsl #3]
     7a4:	eor	x6, x19, x6
     7a8:	ldp	x13, x23, [sp, #104]
     7ac:	eor	x6, x7, x6
     7b0:	ldr	x19, [x0, x25, lsl #3]
     7b4:	str	x16, [sp, #264]
     7b8:	ldr	x16, [sp, #96]
     7bc:	eor	x11, x11, x19
     7c0:	ubfx	x23, x23, #16, #8
     7c4:	str	x30, [sp, #192]
     7c8:	ldr	x14, [x3, x9, lsl #3]
     7cc:	ubfx	x9, x16, #32, #8
     7d0:	ldr	x7, [x15, x23, lsl #3]
     7d4:	eor	x18, x18, x22
     7d8:	ldr	x23, [sp, #104]
     7dc:	eor	x11, x6, x11
     7e0:	ldr	x21, [x5, x21, lsl #3]
     7e4:	ubfx	x25, x23, #8, #8
     7e8:	ubfx	x23, x28, #48, #8
     7ec:	ldr	x30, [sp, #112]
     7f0:	ldr	x19, [x20, x25, lsl #3]
     7f4:	ldr	x10, [x4, x23, lsl #3]
     7f8:	and	x23, x13, #0xff
     7fc:	ldr	x25, [sp, #160]
     800:	eor	x10, x10, x14
     804:	ldr	x16, [x2, x23, lsl #3]
     808:	str	x18, [sp, #160]
     80c:	lsr	w14, w25, #24
     810:	ldr	w18, [sp, #96]
     814:	eor	x21, x21, x16
     818:	lsr	x13, x13, #56
     81c:	eor	x21, x10, x21
     820:	eor	x7, x7, x19
     824:	ldr	x23, [x0, x14, lsl #3]
     828:	ldp	x14, x10, [sp, #120]
     82c:	ldr	x9, [x1, x9, lsl #3]
     830:	ldr	x13, [x5, x13, lsl #3]
     834:	eor	x9, x9, x23
     838:	ubfx	x16, x14, #16, #8
     83c:	ubfx	x10, x10, #48, #8
     840:	ubfx	x14, x30, #8, #8
     844:	eor	x30, x8, x17
     848:	eor	x9, x21, x9
     84c:	ldr	x23, [x15, x16, lsl #3]
     850:	ubfx	x16, x28, #40, #8
     854:	ldr	x12, [x20, x14, lsl #3]
     858:	ldr	x8, [x3, x16, lsl #3]
     85c:	ubfx	x16, x24, #32, #8
     860:	ldr	x14, [x4, x10, lsl #3]
     864:	eor	x12, x23, x12
     868:	ldr	x10, [sp, #112]
     86c:	eor	x8, x14, x8
     870:	lsr	w14, w18, #24
     874:	lsr	w23, w24, #24
     878:	and	x17, x10, #0xff
     87c:	lsr	x10, x10, #56
     880:	ldr	x17, [x2, x17, lsl #3]
     884:	ldr	x18, [x1, x16, lsl #3]
     888:	stp	x11, x7, [sp, #272]
     88c:	eor	x13, x13, x17
     890:	ldr	x22, [x0, x14, lsl #3]
     894:	ubfx	x17, x25, #16, #8
     898:	ldr	x14, [sp, #120]
     89c:	eor	x18, x18, x22
     8a0:	ldr	x22, [sp, #104]
     8a4:	eor	x13, x8, x13
     8a8:	ldr	x7, [sp, #128]
     8ac:	ubfx	x16, x14, #8, #8
     8b0:	mov	x8, x14
     8b4:	and	x14, x14, #0xff
     8b8:	ubfx	x11, x22, #48, #8
     8bc:	str	x9, [sp, #288]
     8c0:	ldr	x6, [x15, x17, lsl #3]
     8c4:	ubfx	x17, x7, #40, #8
     8c8:	lsr	x8, x8, #56
     8cc:	and	x9, x25, #0xff
     8d0:	ldr	x10, [x5, x10, lsl #3]
     8d4:	eor	x13, x13, x18
     8d8:	ldr	x14, [x2, x14, lsl #3]
     8dc:	ldr	x7, [x4, x11, lsl #3]
     8e0:	eor	x11, x10, x14
     8e4:	ldr	x17, [x3, x17, lsl #3]
     8e8:	ldr	x9, [x2, x9, lsl #3]
     8ec:	ldr	x10, [x5, x8, lsl #3]
     8f0:	eor	x8, x7, x17
     8f4:	ubfx	x7, x22, #40, #8
     8f8:	eor	x11, x8, x11
     8fc:	ldr	x22, [sp, #96]
     900:	eor	x10, x10, x9
     904:	ldr	x14, [sp, #112]
     908:	lsr	x9, x25, #56
     90c:	and	x21, x22, #0xff
     910:	ldr	x7, [x3, x7, lsl #3]
     914:	ubfx	x14, x14, #48, #8
     918:	ldr	x8, [x5, x9, lsl #3]
     91c:	lsr	x9, x22, #56
     920:	ldr	x19, [x4, x14, lsl #3]
     924:	ubfx	x14, x25, #8, #8
     928:	ldr	x5, [x5, x9, lsl #3]
     92c:	eor	x7, x19, x7
     930:	ldp	x25, x9, [sp, #112]
     934:	eor	x7, x7, x10
     938:	ldr	x21, [x2, x21, lsl #3]
     93c:	ldr	x17, [sp, #296]
     940:	eor	x21, x8, x21
     944:	ubfx	x10, x9, #48, #8
     948:	ubfx	x19, x9, #40, #8
     94c:	ubfx	x9, x25, #40, #8
     950:	and	x8, x24, #0xff
     954:	ldr	x17, [x4, x17, lsl #3]
     958:	ubfx	x22, x25, #32, #8
     95c:	ldr	x4, [x4, x10, lsl #3]
     960:	ldr	x10, [x3, x19, lsl #3]
     964:	ldr	x3, [x3, x9, lsl #3]
     968:	ubfx	x9, x28, #32, #8
     96c:	ldr	x2, [x2, x8, lsl #3]
     970:	eor	x17, x17, x10
     974:	ldr	x8, [sp, #128]
     978:	eor	x5, x5, x2
     97c:	ldr	x16, [x20, x16, lsl #3]
     980:	eor	x4, x4, x3
     984:	ldr	x9, [x1, x9, lsl #3]
     988:	ubfx	x19, x8, #32, #8
     98c:	ldr	x10, [sp, #104]
     990:	lsr	w8, w28, #24
     994:	ldr	x23, [x0, x23, lsl #3]
     998:	eor	x21, x4, x21
     99c:	ubfx	x24, x10, #32, #8
     9a0:	lsr	w25, w10, #24
     9a4:	ldr	x10, [sp, #128]
     9a8:	eor	x9, x9, x23
     9ac:	ldr	x3, [x1, x19, lsl #3]
     9b0:	eor	x17, x17, x5
     9b4:	ldr	x2, [x0, x8, lsl #3]
     9b8:	lsr	w19, w10, #24
     9bc:	ldr	x23, [x1, x24, lsl #3]
     9c0:	eor	x2, x3, x2
     9c4:	ldr	x22, [x1, x22, lsl #3]
     9c8:	ubfx	x10, x10, #16, #8
     9cc:	ldr	x1, [sp, #96]
     9d0:	eor	x2, x7, x2
     9d4:	ldr	x3, [sp, #152]
     9d8:	ubfx	x24, x1, #16, #8
     9dc:	ubfx	x1, x1, #8, #8
     9e0:	ldr	x4, [x0, x25, lsl #3]
     9e4:	ubfx	x8, x3, #16, #8
     9e8:	ldr	x0, [x0, x19, lsl #3]
     9ec:	str	x8, [sp, #96]
     9f0:	eor	x22, x22, x4
     9f4:	ubfx	x8, x3, #8, #8
     9f8:	eor	x0, x23, x0
     9fc:	ubfx	x3, x28, #16, #8
     a00:	ldr	x5, [x20, x14, lsl #3]
     a04:	str	x3, [sp, #104]
     a08:	ldr	x4, [x15, x24, lsl #3]
     a0c:	eor	x14, x6, x16
     a10:	ldr	x23, [sp, #96]
     a14:	eor	x24, x4, x5
     a18:	ldr	x4, [sp, #104]
     a1c:	ubfx	x3, x28, #8, #8
     a20:	ldr	x6, [x20, x1, lsl #3]
     a24:	eor	x1, x11, x9
     a28:	ldr	x18, [x15, x23, lsl #3]
     a2c:	eor	x0, x21, x0
     a30:	ldr	x9, [x15, x10, lsl #3]
     a34:	eor	x17, x17, x22
     a38:	ldr	x5, [x15, x4, lsl #3]
     a3c:	eor	x15, x18, x6
     a40:	ldr	x4, [x20, x8, lsl #3]
     a44:	eor	x13, x13, x14
     a48:	ldp	x6, x8, [sp, #216]
     a4c:	eor	x4, x5, x4
     a50:	ldr	x3, [x20, x3, lsl #3]
     a54:	eor	x0, x0, x4
     a58:	ldr	x5, [sp, #200]
     a5c:	eor	x3, x9, x3
     a60:	eor	x20, x6, x8
     a64:	eor	x17, x17, x3
     a68:	ldr	x19, [sp, #208]
     a6c:	adrp	x4, 0 <grub_mod_init-0x13d8>
     a70:	ldr	x6, [sp, #232]
     a74:	eor	x1, x1, x24
     a78:	ldr	x21, [sp, #240]
     a7c:	eor	x2, x2, x15
     a80:	ldr	x8, [sp, #256]
     a84:	eor	x7, x6, x21
     a88:	eor	x6, x5, x19
     a8c:	ldr	x5, [sp, #248]
     a90:	eor	x23, x5, x8
     a94:	ldr	x5, [sp, #192]
     a98:	eor	x15, x2, x23
     a9c:	ldr	x18, [sp, #160]
     aa0:	eor	x9, x27, x5
     aa4:	ldr	x5, [sp, #272]
     aa8:	eor	x30, x30, x18
     aac:	ldr	x8, [sp, #280]
     ab0:	eor	x0, x0, x9
     ab4:	ldr	x3, [sp, #144]
     ab8:	eor	x19, x5, x8
     abc:	ldr	x16, [sp, #264]
     ac0:	eor	x30, x30, x3
     ac4:	ldr	x5, [sp, #288]
     ac8:	eor	x16, x16, x26
     acc:	ldr	x4, [x4]
     ad0:	str	x0, [sp, #168]
     ad4:	ldr	x3, [sp, #136]
     ad8:	eor	x0, x17, x16
     adc:	ldr	x14, [sp, #176]
     ae0:	str	x0, [sp, #96]
     ae4:	eor	x12, x5, x12
     ae8:	eor	x18, x1, x7
     aec:	cmp	x4, x14
     af0:	eor	x8, x19, x6
     af4:	eor	x11, x13, x3
     af8:	eor	x10, x12, x20
     afc:	b.ne	368 <grub_mod_init-0x1070>  // b.any
     b00:	ldr	x5, [sp, #392]
     b04:	mov	x19, x18
     b08:	ldp	x2, x1, [sp, #376]
     b0c:	ldp	x9, x0, [x5]
     b10:	ldr	x18, [x5, #32]
     b14:	ldr	x22, [x5, #48]
     b18:	eor	x4, x0, x2
     b1c:	eor	x9, x9, x1
     b20:	ldp	x1, x0, [x5, #16]
     b24:	eor	x8, x4, x8
     b28:	ldr	x2, [sp, #368]
     b2c:	eor	x9, x9, x30
     b30:	ldr	x6, [sp, #336]
     b34:	eor	x3, x1, x2
     b38:	ldr	x1, [sp, #360]
     b3c:	eor	x22, x22, x6
     b40:	ldr	x4, [sp, #328]
     b44:	eor	x2, x0, x1
     b48:	ldr	x1, [sp, #352]
     b4c:	eor	x10, x3, x10
     b50:	ldr	x0, [x5, #40]
     b54:	eor	x18, x18, x1
     b58:	ldr	x1, [sp, #344]
     b5c:	eor	x18, x18, x19
     b60:	eor	x11, x2, x11
     b64:	eor	x0, x0, x1
     b68:	eor	x24, x0, x15
     b6c:	ldr	x0, [sp, #168]
     b70:	ldr	x1, [x5, #56]
     b74:	eor	x22, x22, x0
     b78:	ldr	x0, [sp, #96]
     b7c:	eor	x1, x1, x4
     b80:	ldp	x19, x20, [sp, #16]
     b84:	eor	x1, x1, x0
     b88:	stp	x9, x8, [x5]
     b8c:	stp	x10, x11, [x5, #16]
     b90:	stp	x18, x24, [x5, #32]
     b94:	stp	x22, x1, [x5, #48]
     b98:	ldp	x21, x22, [sp, #32]
     b9c:	ldp	x23, x24, [sp, #48]
     ba0:	ldp	x29, x30, [sp]
     ba4:	ldp	x25, x26, [sp, #64]
     ba8:	ldp	x27, x28, [sp, #80]
     bac:	add	sp, sp, #0x210
     bb0:	ret
     bb4:	ldp	x7, x6, [x23]
     bb8:	stp	x7, x6, [sp, #400]
     bbc:	ldp	x5, x4, [x23, #16]
     bc0:	stp	x5, x4, [sp, #416]
     bc4:	ldp	x3, x2, [x23, #32]
     bc8:	stp	x3, x2, [sp, #432]
     bcc:	ldp	x1, x0, [x23, #48]
     bd0:	stp	x1, x0, [sp, #448]
     bd4:	stp	x7, x6, [sp, #464]
     bd8:	stp	x5, x4, [sp, #480]
     bdc:	stp	x3, x2, [sp, #496]
     be0:	str	x1, [sp, #512]
     be4:	str	x0, [sp, #520]
     be8:	b	2b8 <grub_mod_init-0x1120>
     bec:	nop
	...
     c18:	add	x0, x0, #0x40
     c1c:	ret
     c20:	stp	x29, x30, [sp, #-32]!
     c24:	mov	x29, sp
     c28:	ldr	x1, [x0, #128]
     c2c:	stp	x19, x20, [sp, #16]
     c30:	mov	x19, x0
     c34:	add	x20, x0, #0x40
     c38:	cmp	x1, #0x40
     c3c:	b.eq	1198 <grub_mod_init-0x240>  // b.none
     c40:	add	x2, x0, x1
     c44:	add	x0, x1, #0x1
     c48:	str	x0, [x19, #128]
     c4c:	mov	w3, #0xffffff80            	// #-128
     c50:	cmp	x0, #0x20
     c54:	strb	w3, [x2, #64]
     c58:	b.ls	1148 <grub_mod_init-0x290>  // b.plast
     c5c:	cmp	x0, #0x3f
     c60:	b.hi	11cc <grub_mod_init-0x20c>  // b.pmore
     c64:	add	x4, x1, #0x41
     c68:	mov	x7, #0xb                   	// #11
     c6c:	add	x2, x19, x4
     c70:	mov	x6, #0x3e                  	// #62
     c74:	neg	x2, x2
     c78:	sub	x6, x6, x1
     c7c:	and	x2, x2, #0x7
     c80:	mov	x3, #0x3f                  	// #63
     c84:	add	x5, x2, #0x7
     c88:	sub	x3, x3, x1
     c8c:	cmp	x5, x7
     c90:	csel	x5, x5, x7, cs  // cs = hs, nlast
     c94:	cmp	x6, x5
     c98:	b.cc	d9c <grub_mod_init-0x63c>  // b.lo, b.ul, b.last
     c9c:	cbz	x2, d24 <grub_mod_init-0x6b4>
     ca0:	add	x5, x19, x0
     ca4:	cmp	x2, #0x1
     ca8:	add	x0, x1, #0x2
     cac:	strb	wzr, [x5, #64]
     cb0:	b.eq	d24 <grub_mod_init-0x6b4>  // b.none
     cb4:	add	x5, x19, x0
     cb8:	cmp	x2, #0x2
     cbc:	add	x0, x1, #0x3
     cc0:	strb	wzr, [x5, #64]
     cc4:	b.eq	d24 <grub_mod_init-0x6b4>  // b.none
     cc8:	add	x5, x19, x0
     ccc:	cmp	x2, #0x3
     cd0:	add	x0, x1, #0x4
     cd4:	strb	wzr, [x5, #64]
     cd8:	b.eq	d24 <grub_mod_init-0x6b4>  // b.none
     cdc:	add	x5, x19, x0
     ce0:	cmp	x2, #0x4
     ce4:	add	x0, x1, #0x5
     ce8:	strb	wzr, [x5, #64]
     cec:	b.eq	d24 <grub_mod_init-0x6b4>  // b.none
     cf0:	add	x5, x19, x0
     cf4:	cmp	x2, #0x5
     cf8:	add	x0, x1, #0x6
     cfc:	strb	wzr, [x5, #64]
     d00:	b.eq	d24 <grub_mod_init-0x6b4>  // b.none
     d04:	add	x5, x19, x0
     d08:	cmp	x2, #0x7
     d0c:	add	x0, x1, #0x7
     d10:	strb	wzr, [x5, #64]
     d14:	b.ne	d24 <grub_mod_init-0x6b4>  // b.any
     d18:	add	x5, x19, x0
     d1c:	add	x0, x1, #0x8
     d20:	strb	wzr, [x5, #64]
     d24:	add	x4, x4, x2
     d28:	sub	x2, x3, x2
     d2c:	add	x3, x19, x4
     d30:	lsr	x1, x2, #3
     d34:	str	xzr, [x19, x4]
     d38:	cmp	x1, #0x1
     d3c:	b.eq	d8c <grub_mod_init-0x64c>  // b.none
     d40:	str	xzr, [x3, #8]
     d44:	cmp	x1, #0x2
     d48:	b.eq	d8c <grub_mod_init-0x64c>  // b.none
     d4c:	str	xzr, [x3, #16]
     d50:	cmp	x1, #0x3
     d54:	b.eq	d8c <grub_mod_init-0x64c>  // b.none
     d58:	str	xzr, [x3, #24]
     d5c:	cmp	x1, #0x4
     d60:	b.eq	d8c <grub_mod_init-0x64c>  // b.none
     d64:	str	xzr, [x3, #32]
     d68:	cmp	x1, #0x5
     d6c:	b.eq	d8c <grub_mod_init-0x64c>  // b.none
     d70:	str	xzr, [x3, #40]
     d74:	cmp	x1, #0x6
     d78:	b.eq	d8c <grub_mod_init-0x64c>  // b.none
     d7c:	str	xzr, [x3, #48]
     d80:	cmp	x1, #0x7
     d84:	b.eq	d8c <grub_mod_init-0x64c>  // b.none
     d88:	str	xzr, [x3, #56]
     d8c:	and	x1, x2, #0xfffffffffffffff8
     d90:	add	x0, x0, x1
     d94:	cmp	x2, x1
     d98:	b.eq	ea8 <grub_mod_init-0x530>  // b.none
     d9c:	add	x1, x19, x0
     da0:	cmp	x0, #0x3f
     da4:	add	x2, x0, #0x1
     da8:	strb	wzr, [x1, #64]
     dac:	b.eq	ea8 <grub_mod_init-0x530>  // b.none
     db0:	add	x2, x19, x2
     db4:	cmp	x0, #0x3e
     db8:	add	x1, x0, #0x2
     dbc:	strb	wzr, [x2, #64]
     dc0:	b.eq	ea8 <grub_mod_init-0x530>  // b.none
     dc4:	add	x1, x19, x1
     dc8:	cmp	x0, #0x3d
     dcc:	add	x2, x0, #0x3
     dd0:	strb	wzr, [x1, #64]
     dd4:	b.eq	ea8 <grub_mod_init-0x530>  // b.none
     dd8:	add	x2, x19, x2
     ddc:	cmp	x0, #0x3c
     de0:	add	x1, x0, #0x4
     de4:	strb	wzr, [x2, #64]
     de8:	b.eq	ea8 <grub_mod_init-0x530>  // b.none
     dec:	add	x1, x19, x1
     df0:	cmp	x0, #0x3b
     df4:	add	x2, x0, #0x5
     df8:	strb	wzr, [x1, #64]
     dfc:	b.eq	ea8 <grub_mod_init-0x530>  // b.none
     e00:	add	x2, x19, x2
     e04:	cmp	x0, #0x3a
     e08:	add	x1, x0, #0x6
     e0c:	strb	wzr, [x2, #64]
     e10:	b.eq	ea8 <grub_mod_init-0x530>  // b.none
     e14:	add	x1, x19, x1
     e18:	cmp	x0, #0x39
     e1c:	add	x2, x0, #0x7
     e20:	strb	wzr, [x1, #64]
     e24:	b.eq	ea8 <grub_mod_init-0x530>  // b.none
     e28:	add	x2, x19, x2
     e2c:	cmp	x0, #0x38
     e30:	add	x1, x0, #0x8
     e34:	strb	wzr, [x2, #64]
     e38:	b.eq	ea8 <grub_mod_init-0x530>  // b.none
     e3c:	add	x1, x19, x1
     e40:	cmp	x0, #0x37
     e44:	add	x2, x0, #0x9
     e48:	strb	wzr, [x1, #64]
     e4c:	b.eq	ea8 <grub_mod_init-0x530>  // b.none
     e50:	add	x2, x19, x2
     e54:	cmp	x0, #0x36
     e58:	add	x1, x0, #0xa
     e5c:	strb	wzr, [x2, #64]
     e60:	b.eq	ea8 <grub_mod_init-0x530>  // b.none
     e64:	add	x1, x19, x1
     e68:	cmp	x0, #0x35
     e6c:	add	x2, x0, #0xb
     e70:	strb	wzr, [x1, #64]
     e74:	b.eq	ea8 <grub_mod_init-0x530>  // b.none
     e78:	add	x2, x19, x2
     e7c:	cmp	x0, #0x34
     e80:	add	x1, x0, #0xc
     e84:	strb	wzr, [x2, #64]
     e88:	b.eq	ea8 <grub_mod_init-0x530>  // b.none
     e8c:	add	x1, x19, x1
     e90:	cmp	x0, #0x33
     e94:	add	x0, x0, #0xd
     e98:	strb	wzr, [x1, #64]
     e9c:	b.eq	ea8 <grub_mod_init-0x530>  // b.none
     ea0:	add	x0, x19, x0
     ea4:	strb	wzr, [x0, #64]
     ea8:	mov	x0, #0x40                  	// #64
     eac:	str	x0, [x19, #128]
     eb0:	mov	x0, x19
     eb4:	mov	x1, x20
     eb8:	bl	0 <grub_mod_init-0x13d8>
     ebc:	str	xzr, [x19, #128]
     ec0:	mov	x0, #0x0                   	// #0
     ec4:	add	x5, x0, #0x40
     ec8:	add	x3, x0, #0x1
     ecc:	add	x1, x19, x5
     ed0:	cmp	x3, #0x20
     ed4:	neg	x1, x1
     ed8:	mov	x2, #0x20                  	// #32
     edc:	mov	x4, #0x1f                  	// #31
     ee0:	sub	x2, x2, x0
     ee4:	sub	x4, x4, x0
     ee8:	csinc	x2, x2, xzr, ls  // ls = plast
     eec:	and	x1, x1, #0x7
     ef0:	csel	x4, x4, xzr, ls  // ls = plast
     ef4:	cbz	x1, f78 <grub_mod_init-0x460>
     ef8:	add	x0, x19, x0
     efc:	cmp	x1, #0x1
     f00:	strb	wzr, [x0, #64]
     f04:	b.eq	11d8 <grub_mod_init-0x200>  // b.none
     f08:	add	x6, x19, x3
     f0c:	cmp	x1, #0x2
     f10:	add	x0, x3, #0x1
     f14:	strb	wzr, [x6, #64]
     f18:	b.eq	f78 <grub_mod_init-0x460>  // b.none
     f1c:	add	x6, x19, x0
     f20:	cmp	x1, #0x3
     f24:	add	x0, x3, #0x2
     f28:	strb	wzr, [x6, #64]
     f2c:	b.eq	f78 <grub_mod_init-0x460>  // b.none
     f30:	add	x6, x19, x0
     f34:	cmp	x1, #0x4
     f38:	add	x0, x3, #0x3
     f3c:	strb	wzr, [x6, #64]
     f40:	b.eq	f78 <grub_mod_init-0x460>  // b.none
     f44:	add	x6, x19, x0
     f48:	cmp	x1, #0x5
     f4c:	add	x0, x3, #0x4
     f50:	strb	wzr, [x6, #64]
     f54:	b.eq	f78 <grub_mod_init-0x460>  // b.none
     f58:	add	x0, x19, x0
     f5c:	cmp	x1, #0x7
     f60:	add	x6, x3, #0x5
     f64:	strb	wzr, [x0, #64]
     f68:	b.ne	11e0 <grub_mod_init-0x1f8>  // b.any
     f6c:	add	x6, x19, x6
     f70:	add	x0, x3, #0x6
     f74:	strb	wzr, [x6, #64]
     f78:	add	x5, x1, x5
     f7c:	sub	x1, x2, x1
     f80:	add	x6, x19, x5
     f84:	lsr	x2, x1, #3
     f88:	str	xzr, [x19, x5]
     f8c:	cmp	x2, #0x1
     f90:	b.eq	fb0 <grub_mod_init-0x428>  // b.none
     f94:	str	xzr, [x6, #8]
     f98:	cmp	x2, #0x2
     f9c:	b.eq	fb0 <grub_mod_init-0x428>  // b.none
     fa0:	str	xzr, [x6, #16]
     fa4:	cmp	x2, #0x3
     fa8:	b.eq	fb0 <grub_mod_init-0x428>  // b.none
     fac:	str	xzr, [x6, #24]
     fb0:	and	x2, x1, #0xfffffffffffffff8
     fb4:	add	x0, x0, x2
     fb8:	cmp	x1, x2
     fbc:	b.eq	10d0 <grub_mod_init-0x308>  // b.none
     fc0:	add	x1, x19, x0
     fc4:	cmp	x0, #0x1f
     fc8:	add	x2, x0, #0x1
     fcc:	strb	wzr, [x1, #64]
     fd0:	b.eq	10d0 <grub_mod_init-0x308>  // b.none
     fd4:	add	x2, x19, x2
     fd8:	cmp	x0, #0x1e
     fdc:	add	x1, x0, #0x2
     fe0:	strb	wzr, [x2, #64]
     fe4:	b.eq	10d0 <grub_mod_init-0x308>  // b.none
     fe8:	add	x1, x19, x1
     fec:	cmp	x0, #0x1d
     ff0:	add	x2, x0, #0x3
     ff4:	strb	wzr, [x1, #64]
     ff8:	b.eq	10d0 <grub_mod_init-0x308>  // b.none
     ffc:	add	x2, x19, x2
    1000:	cmp	x0, #0x1c
    1004:	add	x1, x0, #0x4
    1008:	strb	wzr, [x2, #64]
    100c:	b.eq	10d0 <grub_mod_init-0x308>  // b.none
    1010:	add	x1, x19, x1
    1014:	cmp	x0, #0x1b
    1018:	add	x2, x0, #0x5
    101c:	strb	wzr, [x1, #64]
    1020:	b.eq	10d0 <grub_mod_init-0x308>  // b.none
    1024:	add	x2, x19, x2
    1028:	cmp	x0, #0x1a
    102c:	add	x1, x0, #0x6
    1030:	strb	wzr, [x2, #64]
    1034:	b.eq	10d0 <grub_mod_init-0x308>  // b.none
    1038:	add	x1, x19, x1
    103c:	cmp	x0, #0x19
    1040:	add	x2, x0, #0x7
    1044:	strb	wzr, [x1, #64]
    1048:	b.eq	10d0 <grub_mod_init-0x308>  // b.none
    104c:	add	x2, x19, x2
    1050:	cmp	x0, #0x18
    1054:	add	x1, x0, #0x8
    1058:	strb	wzr, [x2, #64]
    105c:	b.eq	10d0 <grub_mod_init-0x308>  // b.none
    1060:	add	x1, x19, x1
    1064:	cmp	x0, #0x17
    1068:	add	x2, x0, #0x9
    106c:	strb	wzr, [x1, #64]
    1070:	b.eq	10d0 <grub_mod_init-0x308>  // b.none
    1074:	add	x2, x19, x2
    1078:	cmp	x0, #0x16
    107c:	add	x1, x0, #0xa
    1080:	strb	wzr, [x2, #64]
    1084:	b.eq	10d0 <grub_mod_init-0x308>  // b.none
    1088:	add	x1, x19, x1
    108c:	cmp	x0, #0x15
    1090:	add	x2, x0, #0xb
    1094:	strb	wzr, [x1, #64]
    1098:	b.eq	10d0 <grub_mod_init-0x308>  // b.none
    109c:	add	x2, x19, x2
    10a0:	cmp	x0, #0x14
    10a4:	add	x1, x0, #0xc
    10a8:	strb	wzr, [x2, #64]
    10ac:	b.eq	10d0 <grub_mod_init-0x308>  // b.none
    10b0:	add	x1, x19, x1
    10b4:	cmp	x0, #0x13
    10b8:	add	x0, x0, #0xd
    10bc:	strb	wzr, [x1, #64]
    10c0:	b.eq	10d0 <grub_mod_init-0x308>  // b.none
    10c4:	add	x0, x19, x0
    10c8:	strb	wzr, [x0, #64]
    10cc:	nop
    10d0:	add	x0, x3, x4
    10d4:	str	x0, [x19, #128]
    10d8:	add	x0, x20, x0
    10dc:	add	x1, x19, #0x88
    10e0:	mov	x2, #0x20                  	// #32
    10e4:	bl	0 <grub_memmove>
    10e8:	ldr	x0, [x19, #128]
    10ec:	add	x0, x0, #0x20
    10f0:	str	x0, [x19, #128]
    10f4:	cmp	x0, #0x40
    10f8:	b.eq	11b8 <grub_mod_init-0x220>  // b.none
    10fc:	ldp	x7, x6, [x19]
    1100:	ldp	x5, x4, [x19, #16]
    1104:	ldp	x3, x2, [x19, #32]
    1108:	ldp	x1, x0, [x19, #48]
    110c:	rev	x7, x7
    1110:	rev	x6, x6
    1114:	rev	x5, x5
    1118:	rev	x4, x4
    111c:	stp	x7, x6, [x19, #64]
    1120:	rev	x3, x3
    1124:	rev	x2, x2
    1128:	stp	x5, x4, [x19, #80]
    112c:	rev	x1, x1
    1130:	rev	x0, x0
    1134:	stp	x3, x2, [x19, #96]
    1138:	stp	x1, x0, [x19, #112]
    113c:	ldp	x19, x20, [sp, #16]
    1140:	ldp	x29, x30, [sp], #32
    1144:	ret
    1148:	b.eq	10d8 <grub_mod_init-0x300>  // b.none
    114c:	add	x5, x1, #0x41
    1150:	add	x3, x1, #0x2
    1154:	add	x1, x19, x5
    1158:	cmp	x3, #0x20
    115c:	neg	x1, x1
    1160:	mov	x2, #0x20                  	// #32
    1164:	and	x1, x1, #0x7
    1168:	sub	x2, x2, x0
    116c:	add	x6, x1, #0x7
    1170:	mov	x4, #0x1f                  	// #31
    1174:	sub	x4, x4, x0
    1178:	mov	x7, #0xb                   	// #11
    117c:	csel	x4, x4, xzr, ls  // ls = plast
    1180:	csinc	x2, x2, xzr, ls  // ls = plast
    1184:	cmp	x6, x7
    1188:	csel	x6, x6, x7, cs  // cs = hs, nlast
    118c:	cmp	x4, x6
    1190:	b.cs	ef4 <grub_mod_init-0x4e4>  // b.hs, b.nlast
    1194:	b	fc0 <grub_mod_init-0x418>
    1198:	mov	x1, x20
    119c:	bl	0 <grub_mod_init-0x13d8>
    11a0:	mov	x1, #0x1                   	// #1
    11a4:	mov	w2, #0xffffff80            	// #-128
    11a8:	mov	x0, x1
    11ac:	strb	w2, [x19, #64]
    11b0:	str	x1, [x19, #128]
    11b4:	b	ec4 <grub_mod_init-0x514>
    11b8:	mov	x1, x20
    11bc:	mov	x0, x19
    11c0:	bl	0 <grub_mod_init-0x13d8>
    11c4:	str	xzr, [x19, #128]
    11c8:	b	10fc <grub_mod_init-0x2dc>
    11cc:	cmp	x0, #0x40
    11d0:	b.ne	10d8 <grub_mod_init-0x300>  // b.any
    11d4:	b	eb0 <grub_mod_init-0x528>
    11d8:	mov	x0, x3
    11dc:	b	f78 <grub_mod_init-0x460>
    11e0:	mov	x0, x6
    11e4:	b	f78 <grub_mod_init-0x460>
    11e8:	stp	x29, x30, [sp, #-64]!
    11ec:	mov	x29, sp
    11f0:	stp	x19, x20, [sp, #16]
    11f4:	mov	x20, x1
    11f8:	mov	x19, x0
    11fc:	ldr	x1, [x0, #128]
    1200:	stp	x21, x22, [sp, #32]
    1204:	mov	x21, x2
    1208:	str	x23, [sp, #48]
    120c:	cmp	x1, #0x40
    1210:	b.eq	1334 <grub_mod_init-0xa4>  // b.none
    1214:	cbz	x20, 1228 <grub_mod_init-0x1b0>
    1218:	cbz	x1, 1344 <grub_mod_init-0x94>
    121c:	mov	x23, x2
    1220:	add	x2, x0, #0x3f
    1224:	cbnz	x21, 1254 <grub_mod_init-0x184>
    1228:	ldp	x19, x20, [sp, #16]
    122c:	ldp	x21, x22, [sp, #32]
    1230:	ldr	x23, [sp, #48]
    1234:	ldp	x29, x30, [sp], #64
    1238:	ret
    123c:	add	x1, x1, #0x1
    1240:	str	x1, [x19, #128]
    1244:	subs	x23, x23, #0x1
    1248:	ldrb	w0, [x20], #1
    124c:	strb	w0, [x2, x1]
    1250:	b.eq	1380 <grub_mod_init-0x58>  // b.none
    1254:	cmp	x1, #0x3f
    1258:	b.ls	123c <grub_mod_init-0x19c>  // b.plast
    125c:	mov	x0, x19
    1260:	mov	x2, #0x0                   	// #0
    1264:	mov	x1, #0x0                   	// #0
    1268:	bl	11e8 <grub_mod_init-0x1f0>
    126c:	cmp	x23, #0x3f
    1270:	b.ls	139c <grub_mod_init-0x3c>  // b.plast
    1274:	sub	x22, x23, #0x40
    1278:	and	x22, x22, #0xffffffffffffffc0
    127c:	add	x22, x22, #0x40
    1280:	add	x22, x20, x22
    1284:	nop
    1288:	mov	x1, x20
    128c:	mov	x0, x19
    1290:	bl	0 <grub_mod_init-0x13d8>
    1294:	str	xzr, [x19, #128]
    1298:	add	x20, x20, #0x40
    129c:	cmp	x20, x22
    12a0:	b.ne	1288 <grub_mod_init-0x150>  // b.any
    12a4:	and	x23, x23, #0x3f
    12a8:	cbz	x23, 12e8 <grub_mod_init-0xf0>
    12ac:	ldr	x0, [x19, #128]
    12b0:	add	x2, x19, #0x3f
    12b4:	mov	x1, x0
    12b8:	add	x23, x0, x23
    12bc:	mvn	x0, x0
    12c0:	add	x22, x22, x0
    12c4:	b	12e0 <grub_mod_init-0xf8>
    12c8:	add	x1, x1, #0x1
    12cc:	str	x1, [x19, #128]
    12d0:	cmp	x1, x23
    12d4:	ldrb	w0, [x22, x1]
    12d8:	strb	w0, [x2, x1]
    12dc:	b.eq	12e8 <grub_mod_init-0xf0>  // b.none
    12e0:	cmp	x1, #0x3f
    12e4:	b.ls	12c8 <grub_mod_init-0x110>  // b.plast
    12e8:	add	x3, x19, #0xa7
    12ec:	lsl	x2, x21, #3
    12f0:	add	x19, x19, #0x87
    12f4:	mov	w1, #0x0                   	// #0
    12f8:	b	131c <grub_mod_init-0xbc>
    12fc:	ldrb	w0, [x3]
    1300:	add	w1, w1, w2, uxtb
    1304:	lsr	x2, x2, #8
    1308:	add	w1, w0, w1
    130c:	strb	w1, [x3], #-1
    1310:	lsr	w1, w1, #8
    1314:	cmp	x19, x3
    1318:	b.eq	134c <grub_mod_init-0x8c>  // b.none
    131c:	eor	w0, w1, #0x1
    1320:	cmp	x2, #0x0
    1324:	and	w0, w0, #0x1
    1328:	csel	w0, w0, wzr, eq  // eq = none
    132c:	cbz	w0, 12fc <grub_mod_init-0xdc>
    1330:	b	1228 <grub_mod_init-0x1b0>
    1334:	add	x1, x0, #0x40
    1338:	bl	0 <grub_mod_init-0x13d8>
    133c:	str	xzr, [x19, #128]
    1340:	cbz	x20, 1228 <grub_mod_init-0x1b0>
    1344:	mov	x23, x21
    1348:	b	126c <grub_mod_init-0x16c>
    134c:	cmp	x2, #0x0
    1350:	and	w1, w1, #0x1
    1354:	csinc	w1, w1, wzr, eq  // eq = none
    1358:	cbz	w1, 1228 <grub_mod_init-0x1b0>
    135c:	adrp	x1, 0 <grub_mod_init-0x13d8>
    1360:	adrp	x0, 0 <grub_mod_init-0x13d8>
    1364:	adrp	x3, 0 <grub_mod_init-0x13d8>
    1368:	mov	w2, #0x547                 	// #1351
    136c:	ldr	x1, [x1]
    1370:	ldr	x0, [x0]
    1374:	ldr	x3, [x3]
    1378:	add	x3, x3, #0xd50
    137c:	bl	0 <_gcry_assert_failed>
    1380:	cmp	x1, #0x40
    1384:	b.ne	1228 <grub_mod_init-0x1b0>  // b.any
    1388:	add	x1, x19, #0x40
    138c:	mov	x0, x19
    1390:	bl	0 <grub_mod_init-0x13d8>
    1394:	str	xzr, [x19, #128]
    1398:	b	1228 <grub_mod_init-0x1b0>
    139c:	mov	x22, x20
    13a0:	b	12a8 <grub_mod_init-0x130>
    13a4:	nop
	...
    13c0:	b	11e8 <grub_mod_init-0x1f0>
    13c4:	nop
    13c8:	mov	x2, #0xa8                  	// #168
    13cc:	mov	w1, #0x0                   	// #0
    13d0:	b	0 <grub_memset>
    13d4:	nop

00000000000013d8 <grub_mod_init>:
    13d8:	adrp	x0, 0 <grub_mod_init-0x13d8>
    13dc:	ldr	x0, [x0]
    13e0:	b	0 <grub_md_register>
    13e4:	nop
	...

00000000000013f0 <grub_mod_fini>:
    13f0:	adrp	x0, 0 <grub_mod_init-0x13d8>
    13f4:	ldr	x0, [x0]
    13f8:	b	0 <grub_md_unregister>
    13fc:	nop
	...
