
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//ordchr.so_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000608 <.init>:
 608:	stp	x29, x30, [sp, #-16]!
 60c:	mov	x29, sp
 610:	bl	6a0 <fprintf@plt+0x10>
 614:	ldp	x29, x30, [sp], #16
 618:	ret

Disassembly of section .plt:

0000000000000620 <exit@plt-0x20>:
 620:	stp	x16, x30, [sp, #-16]!
 624:	adrp	x16, 10000 <dl_load@@Base+0xf68c>
 628:	ldr	x17, [x16, #4088]
 62c:	add	x16, x16, #0xff8
 630:	br	x17
 634:	nop
 638:	nop
 63c:	nop

0000000000000640 <exit@plt>:
 640:	adrp	x16, 11000 <exit@GLIBC_2.17>
 644:	ldr	x17, [x16]
 648:	add	x16, x16, #0x0
 64c:	br	x17

0000000000000650 <__cxa_finalize@plt>:
 650:	adrp	x16, 11000 <exit@GLIBC_2.17>
 654:	ldr	x17, [x16, #8]
 658:	add	x16, x16, #0x8
 65c:	br	x17

0000000000000660 <__gmon_start__@plt>:
 660:	adrp	x16, 11000 <exit@GLIBC_2.17>
 664:	ldr	x17, [x16, #16]
 668:	add	x16, x16, #0x10
 66c:	br	x17

0000000000000670 <fwrite@plt>:
 670:	adrp	x16, 11000 <exit@GLIBC_2.17>
 674:	ldr	x17, [x16, #24]
 678:	add	x16, x16, #0x18
 67c:	br	x17

0000000000000680 <dcgettext@plt>:
 680:	adrp	x16, 11000 <exit@GLIBC_2.17>
 684:	ldr	x17, [x16, #32]
 688:	add	x16, x16, #0x20
 68c:	br	x17

0000000000000690 <fprintf@plt>:
 690:	adrp	x16, 11000 <exit@GLIBC_2.17>
 694:	ldr	x17, [x16, #40]
 698:	add	x16, x16, #0x28
 69c:	br	x17

Disassembly of section .text:

00000000000006a0 <dl_load@@Base-0x2d4>:
 6a0:	adrp	x0, 10000 <dl_load@@Base+0xf68c>
 6a4:	ldr	x0, [x0, #4056]
 6a8:	cbz	x0, 6b0 <fprintf@plt+0x20>
 6ac:	b	660 <__gmon_start__@plt>
 6b0:	ret
 6b4:	adrp	x0, 11000 <dl_load@@Base+0x1068c>
 6b8:	add	x0, x0, #0x98
 6bc:	adrp	x1, 11000 <dl_load@@Base+0x1068c>
 6c0:	add	x1, x1, #0x98
 6c4:	cmp	x0, x1
 6c8:	b.eq	6f4 <fprintf@plt+0x64>  // b.none
 6cc:	adrp	x1, 10000 <dl_load@@Base+0xf68c>
 6d0:	ldr	x1, [x1, #4032]
 6d4:	cbz	x1, 6f4 <fprintf@plt+0x64>
 6d8:	stp	x29, x30, [sp, #-16]!
 6dc:	mov	x29, sp
 6e0:	adrp	x0, 11000 <dl_load@@Base+0x1068c>
 6e4:	add	x0, x0, #0x98
 6e8:	blr	x1
 6ec:	ldp	x29, x30, [sp], #16
 6f0:	ret
 6f4:	ret
 6f8:	adrp	x0, 11000 <dl_load@@Base+0x1068c>
 6fc:	add	x0, x0, #0x98
 700:	adrp	x1, 11000 <dl_load@@Base+0x1068c>
 704:	add	x1, x1, #0x98
 708:	sub	x0, x0, x1
 70c:	lsr	x1, x0, #63
 710:	add	x0, x1, x0, asr #3
 714:	cmp	xzr, x0, asr #1
 718:	b.eq	748 <fprintf@plt+0xb8>  // b.none
 71c:	asr	x1, x0, #1
 720:	adrp	x2, 10000 <dl_load@@Base+0xf68c>
 724:	ldr	x2, [x2, #4064]
 728:	cbz	x2, 748 <fprintf@plt+0xb8>
 72c:	stp	x29, x30, [sp, #-16]!
 730:	mov	x29, sp
 734:	adrp	x0, 11000 <dl_load@@Base+0x1068c>
 738:	add	x0, x0, #0x98
 73c:	blr	x2
 740:	ldp	x29, x30, [sp], #16
 744:	ret
 748:	ret
 74c:	adrp	x0, 11000 <dl_load@@Base+0x1068c>
 750:	ldrb	w0, [x0, #152]
 754:	cbnz	w0, 790 <fprintf@plt+0x100>
 758:	stp	x29, x30, [sp, #-16]!
 75c:	mov	x29, sp
 760:	adrp	x0, 10000 <dl_load@@Base+0xf68c>
 764:	ldr	x0, [x0, #4040]
 768:	cbz	x0, 778 <fprintf@plt+0xe8>
 76c:	adrp	x0, 11000 <dl_load@@Base+0x1068c>
 770:	ldr	x0, [x0, #48]
 774:	bl	650 <__cxa_finalize@plt>
 778:	bl	6b4 <fprintf@plt+0x24>
 77c:	adrp	x0, 11000 <dl_load@@Base+0x1068c>
 780:	mov	w1, #0x1                   	// #1
 784:	strb	w1, [x0, #152]
 788:	ldp	x29, x30, [sp], #16
 78c:	ret
 790:	ret
 794:	stp	x29, x30, [sp, #-16]!
 798:	mov	x29, sp
 79c:	bl	6f8 <fprintf@plt+0x68>
 7a0:	ldp	x29, x30, [sp], #16
 7a4:	ret
 7a8:	stp	x29, x30, [sp, #-80]!
 7ac:	mov	x29, sp
 7b0:	stp	x19, x20, [sp, #16]
 7b4:	mov	x19, x1
 7b8:	adrp	x0, 11000 <dl_load@@Base+0x1068c>
 7bc:	add	x1, x0, #0xa0
 7c0:	ldr	x1, [x1, #8]
 7c4:	ldr	x4, [x1, #152]
 7c8:	add	x3, sp, #0x30
 7cc:	mov	w2, #0x2                   	// #2
 7d0:	mov	x1, #0x0                   	// #0
 7d4:	ldr	x0, [x0, #160]
 7d8:	blr	x4
 7dc:	cbz	w0, 80c <fprintf@plt+0x17c>
 7e0:	ldr	x0, [sp, #56]
 7e4:	ldrb	w0, [x0]
 7e8:	ucvtf	d0, w0
 7ec:	mov	w0, #0x1                   	// #1
 7f0:	str	w0, [x19]
 7f4:	str	d0, [x19, #8]
 7f8:	str	wzr, [x19, #16]
 7fc:	mov	x0, x19
 800:	ldp	x19, x20, [sp, #16]
 804:	ldp	x29, x30, [sp], #80
 808:	ret
 80c:	adrp	x0, 11000 <dl_load@@Base+0x1068c>
 810:	ldr	x0, [x0, #168]
 814:	ldr	w1, [x0, #24]
 818:	fmov	d0, #-1.000000000000000000e+00
 81c:	cbz	w1, 7ec <fprintf@plt+0x15c>
 820:	str	x21, [sp, #32]
 824:	ldr	x20, [x0, #112]
 828:	adrp	x0, 11000 <dl_load@@Base+0x1068c>
 82c:	ldr	x21, [x0, #160]
 830:	mov	w2, #0x5                   	// #5
 834:	adrp	x1, 0 <exit@plt-0x640>
 838:	add	x1, x1, #0xac8
 83c:	mov	x0, #0x0                   	// #0
 840:	bl	680 <dcgettext@plt>
 844:	mov	x1, x0
 848:	mov	x0, x21
 84c:	blr	x20
 850:	fmov	d0, #-1.000000000000000000e+00
 854:	ldr	x21, [sp, #32]
 858:	b	7ec <fprintf@plt+0x15c>
 85c:	stp	x29, x30, [sp, #-96]!
 860:	mov	x29, sp
 864:	stp	x19, x20, [sp, #16]
 868:	stp	x21, x22, [sp, #32]
 86c:	str	x23, [sp, #48]
 870:	mov	x19, x1
 874:	adrp	x0, 11000 <dl_load@@Base+0x1068c>
 878:	add	x1, x0, #0xa0
 87c:	ldr	x1, [x1, #8]
 880:	ldr	x4, [x1, #152]
 884:	add	x3, sp, #0x40
 888:	mov	w2, #0x1                   	// #1
 88c:	mov	x1, #0x0                   	// #0
 890:	ldr	x0, [x0, #160]
 894:	blr	x4
 898:	cbz	w0, 908 <fprintf@plt+0x278>
 89c:	ldr	d0, [sp, #72]
 8a0:	fcvtzu	w21, d0
 8a4:	and	w21, w21, #0xff
 8a8:	adrp	x0, 11000 <dl_load@@Base+0x1068c>
 8ac:	add	x1, x0, #0xa0
 8b0:	ldr	x22, [x1, #8]
 8b4:	ldr	x23, [x0, #160]
 8b8:	stp	xzr, xzr, [x19]
 8bc:	stp	xzr, xzr, [x19, #16]
 8c0:	mov	w0, #0x2                   	// #2
 8c4:	str	w0, [x19]
 8c8:	mov	x0, #0x1                   	// #1
 8cc:	str	x0, [x19, #16]
 8d0:	ldr	x1, [x22, #280]
 8d4:	mov	x0, #0x2                   	// #2
 8d8:	blr	x1
 8dc:	mov	x20, x0
 8e0:	cbz	x0, 950 <fprintf@plt+0x2c0>
 8e4:	strb	w21, [x20]
 8e8:	strb	wzr, [x20, #1]
 8ec:	str	x20, [x19, #8]
 8f0:	mov	x0, x19
 8f4:	ldp	x19, x20, [sp, #16]
 8f8:	ldp	x21, x22, [sp, #32]
 8fc:	ldr	x23, [sp, #48]
 900:	ldp	x29, x30, [sp], #96
 904:	ret
 908:	adrp	x0, 11000 <dl_load@@Base+0x1068c>
 90c:	ldr	x0, [x0, #168]
 910:	ldr	w1, [x0, #24]
 914:	mov	w21, #0x0                   	// #0
 918:	cbz	w1, 8a8 <fprintf@plt+0x218>
 91c:	ldr	x20, [x0, #112]
 920:	adrp	x0, 11000 <dl_load@@Base+0x1068c>
 924:	ldr	x21, [x0, #160]
 928:	mov	w2, #0x5                   	// #5
 92c:	adrp	x1, 0 <exit@plt-0x640>
 930:	add	x1, x1, #0xaf8
 934:	mov	x0, #0x0                   	// #0
 938:	bl	680 <dcgettext@plt>
 93c:	mov	x1, x0
 940:	mov	x0, x21
 944:	blr	x20
 948:	mov	w21, #0x0                   	// #0
 94c:	b	8a8 <fprintf@plt+0x218>
 950:	ldr	x4, [x22, #96]
 954:	mov	x3, #0x2                   	// #2
 958:	adrp	x2, 0 <exit@plt-0x640>
 95c:	add	x2, x2, #0xb28
 960:	adrp	x1, 0 <exit@plt-0x640>
 964:	add	x1, x1, #0xb38
 968:	mov	x0, x23
 96c:	blr	x4
 970:	b	8e4 <fprintf@plt+0x254>

0000000000000974 <dl_load@@Base>:
 974:	stp	x29, x30, [sp, #-80]!
 978:	mov	x29, sp
 97c:	stp	x19, x20, [sp, #16]
 980:	stp	x21, x22, [sp, #32]
 984:	stp	x23, x24, [sp, #48]
 988:	str	x25, [sp, #64]
 98c:	adrp	x2, 11000 <dl_load@@Base+0x1068c>
 990:	add	x3, x2, #0xa0
 994:	str	x0, [x3, #8]
 998:	str	x1, [x2, #160]
 99c:	ldr	w1, [x0]
 9a0:	cmp	w1, #0x2
 9a4:	b.ne	9d8 <dl_load@@Base+0x64>  // b.any
 9a8:	ldr	w0, [x0, #4]
 9ac:	tbnz	w0, #31, 9d8 <dl_load@@Base+0x64>
 9b0:	adrp	x19, 11000 <dl_load@@Base+0x1068c>
 9b4:	add	x19, x19, #0x38
 9b8:	mov	x21, #0x2                   	// #2
 9bc:	mov	w23, #0x0                   	// #0
 9c0:	adrp	x22, 0 <exit@plt-0x640>
 9c4:	add	x22, x22, #0xbb8
 9c8:	adrp	x20, 11000 <dl_load@@Base+0x1068c>
 9cc:	add	x20, x20, #0xa0
 9d0:	adrp	x25, 0 <exit@plt-0x640>
 9d4:	b	a34 <dl_load@@Base+0xc0>
 9d8:	adrp	x19, 10000 <dl_load@@Base+0xf68c>
 9dc:	ldr	x19, [x19, #4048]
 9e0:	ldr	x3, [x19]
 9e4:	mov	x2, #0x25                  	// #37
 9e8:	mov	x1, #0x1                   	// #1
 9ec:	adrp	x0, 0 <exit@plt-0x640>
 9f0:	add	x0, x0, #0xb58
 9f4:	bl	670 <fwrite@plt>
 9f8:	adrp	x0, 11000 <dl_load@@Base+0x1068c>
 9fc:	ldr	x0, [x0, #168]
 a00:	ldr	w5, [x0, #4]
 a04:	ldr	w4, [x0]
 a08:	mov	w3, #0x0                   	// #0
 a0c:	mov	w2, #0x2                   	// #2
 a10:	adrp	x1, 0 <exit@plt-0x640>
 a14:	add	x1, x1, #0xb80
 a18:	ldr	x0, [x19]
 a1c:	bl	690 <fprintf@plt>
 a20:	mov	w0, #0x1                   	// #1
 a24:	bl	640 <exit@plt>
 a28:	add	x19, x19, #0x30
 a2c:	subs	x21, x21, #0x1
 a30:	b.eq	a78 <dl_load@@Base+0x104>  // b.none
 a34:	ldr	x0, [x19]
 a38:	cbz	x0, a78 <dl_load@@Base+0x104>
 a3c:	ldr	x0, [x20, #8]
 a40:	ldr	x3, [x0, #48]
 a44:	mov	x2, x19
 a48:	mov	x1, x22
 a4c:	ldr	x0, [x20]
 a50:	blr	x3
 a54:	cbnz	w0, a28 <dl_load@@Base+0xb4>
 a58:	ldr	x0, [x20, #8]
 a5c:	ldr	x3, [x0, #104]
 a60:	ldr	x2, [x19]
 a64:	add	x1, x25, #0xbc0
 a68:	ldr	x0, [x20]
 a6c:	blr	x3
 a70:	add	w23, w23, #0x1
 a74:	b	a28 <dl_load@@Base+0xb4>
 a78:	adrp	x0, 11000 <dl_load@@Base+0x1068c>
 a7c:	add	x1, x0, #0xa0
 a80:	ldr	x1, [x1, #8]
 a84:	ldr	x2, [x1, #88]
 a88:	adrp	x1, 0 <exit@plt-0x640>
 a8c:	add	x1, x1, #0xbe0
 a90:	ldr	x0, [x0, #160]
 a94:	blr	x2
 a98:	cmp	w23, #0x0
 a9c:	cset	w0, eq  // eq = none
 aa0:	ldp	x19, x20, [sp, #16]
 aa4:	ldp	x21, x22, [sp, #32]
 aa8:	ldp	x23, x24, [sp, #48]
 aac:	ldr	x25, [sp, #64]
 ab0:	ldp	x29, x30, [sp], #80
 ab4:	ret

Disassembly of section .fini:

0000000000000ab8 <.fini>:
 ab8:	stp	x29, x30, [sp, #-16]!
 abc:	mov	x29, sp
 ac0:	ldp	x29, x30, [sp], #16
 ac4:	ret
