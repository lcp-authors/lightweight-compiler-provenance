
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-system-update-generator_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400b38 <_init>:
  400b38:	stp	x29, x30, [sp, #-16]!
  400b3c:	mov	x29, sp
  400b40:	bl	400d00 <call_weak_fn>
  400b44:	ldp	x29, x30, [sp], #16
  400b48:	ret

Disassembly of section .plt:

0000000000400b50 <__libc_start_main@plt-0x20>:
  400b50:	stp	x16, x30, [sp, #-16]!
  400b54:	adrp	x16, 41f000 <__FRAME_END__+0x1d1a0>
  400b58:	ldr	x17, [x16, #3928]
  400b5c:	add	x16, x16, #0xf58
  400b60:	br	x17
  400b64:	nop
  400b68:	nop
  400b6c:	nop

0000000000400b70 <__libc_start_main@plt>:
  400b70:	adrp	x16, 41f000 <__FRAME_END__+0x1d1a0>
  400b74:	ldr	x17, [x16, #3936]
  400b78:	add	x16, x16, #0xf60
  400b7c:	br	x17

0000000000400b80 <abort@plt>:
  400b80:	adrp	x16, 41f000 <__FRAME_END__+0x1d1a0>
  400b84:	ldr	x17, [x16, #3944]
  400b88:	add	x16, x16, #0xf68
  400b8c:	br	x17

0000000000400b90 <__gmon_start__@plt>:
  400b90:	adrp	x16, 41f000 <__FRAME_END__+0x1d1a0>
  400b94:	ldr	x17, [x16, #3952]
  400b98:	add	x16, x16, #0xf70
  400b9c:	br	x17

0000000000400ba0 <log_setup_generator@plt>:
  400ba0:	adrp	x16, 41f000 <__FRAME_END__+0x1d1a0>
  400ba4:	ldr	x17, [x16, #3960]
  400ba8:	add	x16, x16, #0xf78
  400bac:	br	x17

0000000000400bb0 <log_get_max_level_realm@plt>:
  400bb0:	adrp	x16, 41f000 <__FRAME_END__+0x1d1a0>
  400bb4:	ldr	x17, [x16, #3968]
  400bb8:	add	x16, x16, #0xf80
  400bbc:	br	x17

0000000000400bc0 <log_internal_realm@plt>:
  400bc0:	adrp	x16, 41f000 <__FRAME_END__+0x1d1a0>
  400bc4:	ldr	x17, [x16, #3976]
  400bc8:	add	x16, x16, #0xf88
  400bcc:	br	x17

0000000000400bd0 <abs@plt>:
  400bd0:	adrp	x16, 41f000 <__FRAME_END__+0x1d1a0>
  400bd4:	ldr	x17, [x16, #3984]
  400bd8:	add	x16, x16, #0xf90
  400bdc:	br	x17

0000000000400be0 <ask_password_agent_close@plt>:
  400be0:	adrp	x16, 41f000 <__FRAME_END__+0x1d1a0>
  400be4:	ldr	x17, [x16, #3992]
  400be8:	add	x16, x16, #0xf98
  400bec:	br	x17

0000000000400bf0 <polkit_agent_close@plt>:
  400bf0:	adrp	x16, 41f000 <__FRAME_END__+0x1d1a0>
  400bf4:	ldr	x17, [x16, #4000]
  400bf8:	add	x16, x16, #0xfa0
  400bfc:	br	x17

0000000000400c00 <pager_close@plt>:
  400c00:	adrp	x16, 41f000 <__FRAME_END__+0x1d1a0>
  400c04:	ldr	x17, [x16, #4008]
  400c08:	add	x16, x16, #0xfa8
  400c0c:	br	x17

0000000000400c10 <mac_selinux_finish@plt>:
  400c10:	adrp	x16, 41f000 <__FRAME_END__+0x1d1a0>
  400c14:	ldr	x17, [x16, #4016]
  400c18:	add	x16, x16, #0xfb0
  400c1c:	br	x17

0000000000400c20 <log_assert_failed_realm@plt>:
  400c20:	adrp	x16, 41f000 <__FRAME_END__+0x1d1a0>
  400c24:	ldr	x17, [x16, #4024]
  400c28:	add	x16, x16, #0xfb8
  400c2c:	br	x17

0000000000400c30 <proc_cmdline_parse@plt>:
  400c30:	adrp	x16, 41f000 <__FRAME_END__+0x1d1a0>
  400c34:	ldr	x17, [x16, #4032]
  400c38:	add	x16, x16, #0xfc0
  400c3c:	br	x17

0000000000400c40 <faccessat@plt>:
  400c40:	adrp	x16, 41f000 <__FRAME_END__+0x1d1a0>
  400c44:	ldr	x17, [x16, #4040]
  400c48:	add	x16, x16, #0xfc8
  400c4c:	br	x17

0000000000400c50 <__errno_location@plt>:
  400c50:	adrp	x16, 41f000 <__FRAME_END__+0x1d1a0>
  400c54:	ldr	x17, [x16, #4048]
  400c58:	add	x16, x16, #0xfd0
  400c5c:	br	x17

0000000000400c60 <strlen@plt>:
  400c60:	adrp	x16, 41f000 <__FRAME_END__+0x1d1a0>
  400c64:	ldr	x17, [x16, #4056]
  400c68:	add	x16, x16, #0xfd8
  400c6c:	br	x17

0000000000400c70 <stpcpy@plt>:
  400c70:	adrp	x16, 41f000 <__FRAME_END__+0x1d1a0>
  400c74:	ldr	x17, [x16, #4064]
  400c78:	add	x16, x16, #0xfe0
  400c7c:	br	x17

0000000000400c80 <symlink@plt>:
  400c80:	adrp	x16, 41f000 <__FRAME_END__+0x1d1a0>
  400c84:	ldr	x17, [x16, #4072]
  400c88:	add	x16, x16, #0xfe8
  400c8c:	br	x17

0000000000400c90 <strcmp@plt>:
  400c90:	adrp	x16, 41f000 <__FRAME_END__+0x1d1a0>
  400c94:	ldr	x17, [x16, #4080]
  400c98:	add	x16, x16, #0xff0
  400c9c:	br	x17

0000000000400ca0 <runlevel_to_target@plt>:
  400ca0:	adrp	x16, 41f000 <__FRAME_END__+0x1d1a0>
  400ca4:	ldr	x17, [x16, #4088]
  400ca8:	add	x16, x16, #0xff8
  400cac:	br	x17

Disassembly of section .text:

0000000000400cb0 <_start>:
  400cb0:	mov	x29, #0x0                   	// #0
  400cb4:	mov	x30, #0x0                   	// #0
  400cb8:	mov	x5, x0
  400cbc:	ldr	x1, [sp]
  400cc0:	add	x2, sp, #0x8
  400cc4:	mov	x6, sp
  400cc8:	movz	x0, #0x0, lsl #48
  400ccc:	movk	x0, #0x0, lsl #32
  400cd0:	movk	x0, #0x40, lsl #16
  400cd4:	movk	x0, #0xe78
  400cd8:	movz	x3, #0x0, lsl #48
  400cdc:	movk	x3, #0x0, lsl #32
  400ce0:	movk	x3, #0x40, lsl #16
  400ce4:	movk	x3, #0x1958
  400ce8:	movz	x4, #0x0, lsl #48
  400cec:	movk	x4, #0x0, lsl #32
  400cf0:	movk	x4, #0x40, lsl #16
  400cf4:	movk	x4, #0x19d8
  400cf8:	bl	400b70 <__libc_start_main@plt>
  400cfc:	bl	400b80 <abort@plt>

0000000000400d00 <call_weak_fn>:
  400d00:	adrp	x0, 41f000 <__FRAME_END__+0x1d1a0>
  400d04:	ldr	x0, [x0, #3888]
  400d08:	cbz	x0, 400d10 <call_weak_fn+0x10>
  400d0c:	b	400b90 <__gmon_start__@plt>
  400d10:	ret

0000000000400d14 <deregister_tm_clones>:
  400d14:	stp	x29, x30, [sp, #-32]!
  400d18:	mov	x29, sp
  400d1c:	adrp	x0, 420000 <completed.8445>
  400d20:	add	x0, x0, #0x0
  400d24:	str	x0, [sp, #24]
  400d28:	ldr	x0, [sp, #24]
  400d2c:	str	x0, [sp, #24]
  400d30:	ldr	x1, [sp, #24]
  400d34:	adrp	x0, 420000 <completed.8445>
  400d38:	add	x0, x0, #0x0
  400d3c:	cmp	x1, x0
  400d40:	b.eq	400d7c <deregister_tm_clones+0x68>  // b.none
  400d44:	adrp	x0, 401000 <main+0x188>
  400d48:	add	x0, x0, #0x9f0
  400d4c:	ldr	x0, [x0]
  400d50:	str	x0, [sp, #16]
  400d54:	ldr	x0, [sp, #16]
  400d58:	str	x0, [sp, #16]
  400d5c:	ldr	x0, [sp, #16]
  400d60:	cmp	x0, #0x0
  400d64:	b.eq	400d80 <deregister_tm_clones+0x6c>  // b.none
  400d68:	ldr	x1, [sp, #16]
  400d6c:	adrp	x0, 420000 <completed.8445>
  400d70:	add	x0, x0, #0x0
  400d74:	blr	x1
  400d78:	b	400d80 <deregister_tm_clones+0x6c>
  400d7c:	nop
  400d80:	ldp	x29, x30, [sp], #32
  400d84:	ret

0000000000400d88 <register_tm_clones>:
  400d88:	stp	x29, x30, [sp, #-48]!
  400d8c:	mov	x29, sp
  400d90:	adrp	x0, 420000 <completed.8445>
  400d94:	add	x0, x0, #0x0
  400d98:	str	x0, [sp, #40]
  400d9c:	ldr	x0, [sp, #40]
  400da0:	str	x0, [sp, #40]
  400da4:	ldr	x1, [sp, #40]
  400da8:	adrp	x0, 420000 <completed.8445>
  400dac:	add	x0, x0, #0x0
  400db0:	sub	x0, x1, x0
  400db4:	asr	x0, x0, #3
  400db8:	lsr	x1, x0, #63
  400dbc:	add	x0, x1, x0
  400dc0:	asr	x0, x0, #1
  400dc4:	str	x0, [sp, #32]
  400dc8:	ldr	x0, [sp, #32]
  400dcc:	cmp	x0, #0x0
  400dd0:	b.eq	400e10 <register_tm_clones+0x88>  // b.none
  400dd4:	adrp	x0, 401000 <main+0x188>
  400dd8:	add	x0, x0, #0x9f8
  400ddc:	ldr	x0, [x0]
  400de0:	str	x0, [sp, #24]
  400de4:	ldr	x0, [sp, #24]
  400de8:	str	x0, [sp, #24]
  400dec:	ldr	x0, [sp, #24]
  400df0:	cmp	x0, #0x0
  400df4:	b.eq	400e14 <register_tm_clones+0x8c>  // b.none
  400df8:	ldr	x2, [sp, #24]
  400dfc:	ldr	x1, [sp, #32]
  400e00:	adrp	x0, 420000 <completed.8445>
  400e04:	add	x0, x0, #0x0
  400e08:	blr	x2
  400e0c:	b	400e14 <register_tm_clones+0x8c>
  400e10:	nop
  400e14:	ldp	x29, x30, [sp], #48
  400e18:	ret

0000000000400e1c <__do_global_dtors_aux>:
  400e1c:	stp	x29, x30, [sp, #-16]!
  400e20:	mov	x29, sp
  400e24:	adrp	x0, 420000 <completed.8445>
  400e28:	add	x0, x0, #0x0
  400e2c:	ldrb	w0, [x0]
  400e30:	and	x0, x0, #0xff
  400e34:	cmp	x0, #0x0
  400e38:	b.ne	400e54 <__do_global_dtors_aux+0x38>  // b.any
  400e3c:	bl	400d14 <deregister_tm_clones>
  400e40:	adrp	x0, 420000 <completed.8445>
  400e44:	add	x0, x0, #0x0
  400e48:	mov	w1, #0x1                   	// #1
  400e4c:	strb	w1, [x0]
  400e50:	b	400e58 <__do_global_dtors_aux+0x3c>
  400e54:	nop
  400e58:	ldp	x29, x30, [sp], #16
  400e5c:	ret

0000000000400e60 <frame_dummy>:
  400e60:	stp	x29, x30, [sp, #-16]!
  400e64:	mov	x29, sp
  400e68:	bl	400d88 <register_tm_clones>
  400e6c:	nop
  400e70:	ldp	x29, x30, [sp], #16
  400e74:	ret

0000000000400e78 <main>:
  400e78:	sub	sp, sp, #0x80
  400e7c:	stp	x29, x30, [sp, #112]
  400e80:	add	x29, sp, #0x70
  400e84:	adrp	x8, 401000 <main+0x188>
  400e88:	add	x8, x8, #0xa00
  400e8c:	add	x2, x8, #0x3
  400e90:	adrp	x8, 401000 <main+0x188>
  400e94:	add	x8, x8, #0xa6a
  400e98:	stur	wzr, [x29, #-4]
  400e9c:	stur	w0, [x29, #-8]
  400ea0:	stur	x1, [x29, #-16]
  400ea4:	ldur	w0, [x29, #-8]
  400ea8:	ldur	x1, [x29, #-16]
  400eac:	stur	x2, [x29, #-48]
  400eb0:	str	x8, [sp, #56]
  400eb4:	bl	401030 <save_argc_argv>
  400eb8:	bl	400ba0 <log_setup_generator@plt>
  400ebc:	ldur	w9, [x29, #-8]
  400ec0:	cmp	w9, #0x1
  400ec4:	b.le	400f60 <main+0xe8>
  400ec8:	ldur	w8, [x29, #-8]
  400ecc:	cmp	w8, #0x4
  400ed0:	b.eq	400f60 <main+0xe8>  // b.none
  400ed4:	mov	w8, #0x3                   	// #3
  400ed8:	stur	w8, [x29, #-24]
  400edc:	mov	w8, #0x16                  	// #22
  400ee0:	movk	w8, #0x4000, lsl #16
  400ee4:	stur	w8, [x29, #-28]
  400ee8:	stur	wzr, [x29, #-32]
  400eec:	ldur	w0, [x29, #-32]
  400ef0:	bl	400bb0 <log_get_max_level_realm@plt>
  400ef4:	ldur	w8, [x29, #-24]
  400ef8:	and	w8, w8, #0x7
  400efc:	cmp	w0, w8
  400f00:	b.lt	400f38 <main+0xc0>  // b.tstop
  400f04:	ldur	w8, [x29, #-32]
  400f08:	ldur	w9, [x29, #-24]
  400f0c:	orr	w0, w9, w8, lsl #10
  400f10:	ldur	w1, [x29, #-28]
  400f14:	ldur	x2, [x29, #-48]
  400f18:	mov	w3, #0x48                  	// #72
  400f1c:	adrp	x4, 401000 <main+0x188>
  400f20:	add	x4, x4, #0xa39
  400f24:	adrp	x5, 401000 <main+0x188>
  400f28:	add	x5, x5, #0xa3e
  400f2c:	bl	400bc0 <log_internal_realm@plt>
  400f30:	str	w0, [sp, #52]
  400f34:	b	400f4c <main+0xd4>
  400f38:	ldur	w0, [x29, #-28]
  400f3c:	bl	400bd0 <abs@plt>
  400f40:	mov	w8, wzr
  400f44:	subs	w8, w8, w0, uxtb
  400f48:	str	w8, [sp, #52]
  400f4c:	ldr	w8, [sp, #52]
  400f50:	stur	w8, [x29, #-36]
  400f54:	ldur	w8, [x29, #-36]
  400f58:	stur	w8, [x29, #-4]
  400f5c:	b	401020 <main+0x1a8>
  400f60:	ldur	w8, [x29, #-8]
  400f64:	cmp	w8, #0x1
  400f68:	b.le	400f7c <main+0x104>
  400f6c:	ldur	x8, [x29, #-16]
  400f70:	ldr	x8, [x8, #8]
  400f74:	str	x8, [sp, #40]
  400f78:	b	400f84 <main+0x10c>
  400f7c:	ldr	x8, [sp, #56]
  400f80:	str	x8, [sp, #40]
  400f84:	ldr	x8, [sp, #40]
  400f88:	ldur	w9, [x29, #-8]
  400f8c:	cmp	w9, #0x1
  400f90:	str	x8, [sp, #32]
  400f94:	b.le	400fa8 <main+0x130>
  400f98:	ldur	x8, [x29, #-16]
  400f9c:	ldr	x8, [x8, #16]
  400fa0:	str	x8, [sp, #24]
  400fa4:	b	400fb0 <main+0x138>
  400fa8:	ldr	x8, [sp, #56]
  400fac:	str	x8, [sp, #24]
  400fb0:	ldr	x8, [sp, #24]
  400fb4:	ldur	w9, [x29, #-8]
  400fb8:	cmp	w9, #0x1
  400fbc:	str	x8, [sp, #16]
  400fc0:	b.le	400fd4 <main+0x15c>
  400fc4:	ldur	x8, [x29, #-16]
  400fc8:	ldr	x8, [x8, #24]
  400fcc:	str	x8, [sp, #8]
  400fd0:	b	400fdc <main+0x164>
  400fd4:	ldr	x8, [sp, #56]
  400fd8:	str	x8, [sp, #8]
  400fdc:	ldr	x8, [sp, #8]
  400fe0:	ldr	x0, [sp, #32]
  400fe4:	ldr	x1, [sp, #16]
  400fe8:	mov	x2, x8
  400fec:	bl	401064 <run>
  400ff0:	stur	w0, [x29, #-20]
  400ff4:	bl	400be0 <ask_password_agent_close@plt>
  400ff8:	bl	400bf0 <polkit_agent_close@plt>
  400ffc:	bl	400c00 <pager_close@plt>
  401000:	bl	400c10 <mac_selinux_finish@plt>
  401004:	bl	4011cc <static_destruct>
  401008:	ldur	w9, [x29, #-20]
  40100c:	mov	w10, wzr
  401010:	mov	w11, #0x1                   	// #1
  401014:	cmp	w9, #0x0
  401018:	csel	w9, w11, w10, lt  // lt = tstop
  40101c:	stur	w9, [x29, #-4]
  401020:	ldur	w0, [x29, #-4]
  401024:	ldp	x29, x30, [sp, #112]
  401028:	add	sp, sp, #0x80
  40102c:	ret

0000000000401030 <save_argc_argv>:
  401030:	sub	sp, sp, #0x10
  401034:	adrp	x8, 420000 <completed.8445>
  401038:	add	x8, x8, #0x10
  40103c:	adrp	x9, 420000 <completed.8445>
  401040:	add	x9, x9, #0x18
  401044:	str	w0, [sp, #12]
  401048:	str	x1, [sp]
  40104c:	ldr	w10, [sp, #12]
  401050:	str	w10, [x8]
  401054:	ldr	x8, [sp]
  401058:	str	x8, [x9]
  40105c:	add	sp, sp, #0x10
  401060:	ret

0000000000401064 <run>:
  401064:	sub	sp, sp, #0x60
  401068:	stp	x29, x30, [sp, #80]
  40106c:	add	x29, sp, #0x50
  401070:	adrp	x8, 401000 <main+0x188>
  401074:	add	x8, x8, #0xa00
  401078:	add	x8, x8, #0x3
  40107c:	stur	x0, [x29, #-16]
  401080:	stur	x1, [x29, #-24]
  401084:	stur	x2, [x29, #-32]
  401088:	str	x8, [sp, #16]
  40108c:	ldur	x8, [x29, #-24]
  401090:	adrp	x9, 420000 <completed.8445>
  401094:	add	x9, x9, #0x8
  401098:	str	x8, [x9]
  40109c:	cmp	x8, #0x0
  4010a0:	cset	w10, ne  // ne = any
  4010a4:	mov	w11, #0x1                   	// #1
  4010a8:	eor	w10, w10, #0x1
  4010ac:	eor	w10, w10, w11
  4010b0:	eor	w10, w10, w11
  4010b4:	and	w10, w10, #0x1
  4010b8:	mov	w0, w10
  4010bc:	sxtw	x8, w0
  4010c0:	cbz	x8, 4010e8 <run+0x84>
  4010c4:	mov	w8, wzr
  4010c8:	mov	w0, w8
  4010cc:	adrp	x1, 401000 <main+0x188>
  4010d0:	add	x1, x1, #0xa6f
  4010d4:	ldr	x2, [sp, #16]
  4010d8:	mov	w3, #0x3a                  	// #58
  4010dc:	adrp	x4, 401000 <main+0x188>
  4010e0:	add	x4, x4, #0xa85
  4010e4:	bl	400c20 <log_assert_failed_realm@plt>
  4010e8:	bl	40124c <generate_symlink>
  4010ec:	stur	w0, [x29, #-36]
  4010f0:	ldur	w8, [x29, #-36]
  4010f4:	cmp	w8, #0x0
  4010f8:	cset	w8, gt
  4010fc:	tbnz	w8, #0, 40110c <run+0xa8>
  401100:	ldur	w8, [x29, #-36]
  401104:	stur	w8, [x29, #-4]
  401108:	b	4011bc <run+0x158>
  40110c:	adrp	x0, 401000 <main+0x188>
  401110:	add	x0, x0, #0x628
  401114:	mov	x8, xzr
  401118:	mov	x1, x8
  40111c:	mov	w9, wzr
  401120:	mov	w2, w9
  401124:	bl	400c30 <proc_cmdline_parse@plt>
  401128:	stur	w0, [x29, #-36]
  40112c:	ldur	w9, [x29, #-36]
  401130:	cmp	w9, #0x0
  401134:	cset	w9, ge  // ge = tcont
  401138:	tbnz	w9, #0, 4011b8 <run+0x154>
  40113c:	mov	w8, #0x4                   	// #4
  401140:	str	w8, [sp, #40]
  401144:	ldur	w8, [x29, #-36]
  401148:	str	w8, [sp, #36]
  40114c:	str	wzr, [sp, #32]
  401150:	ldr	w0, [sp, #32]
  401154:	bl	400bb0 <log_get_max_level_realm@plt>
  401158:	ldr	w8, [sp, #40]
  40115c:	and	w8, w8, #0x7
  401160:	cmp	w0, w8
  401164:	b.lt	40119c <run+0x138>  // b.tstop
  401168:	ldr	w8, [sp, #32]
  40116c:	ldr	w9, [sp, #40]
  401170:	orr	w0, w9, w8, lsl #10
  401174:	ldr	w1, [sp, #36]
  401178:	ldr	x2, [sp, #16]
  40117c:	mov	w3, #0x43                  	// #67
  401180:	adrp	x4, 401000 <main+0x188>
  401184:	add	x4, x4, #0xab7
  401188:	adrp	x5, 401000 <main+0x188>
  40118c:	add	x5, x5, #0xabb
  401190:	bl	400bc0 <log_internal_realm@plt>
  401194:	str	w0, [sp, #12]
  401198:	b	4011b0 <run+0x14c>
  40119c:	ldr	w0, [sp, #36]
  4011a0:	bl	400bd0 <abs@plt>
  4011a4:	mov	w8, wzr
  4011a8:	subs	w8, w8, w0, uxtb
  4011ac:	str	w8, [sp, #12]
  4011b0:	ldr	w8, [sp, #12]
  4011b4:	str	w8, [sp, #28]
  4011b8:	stur	wzr, [x29, #-4]
  4011bc:	ldur	w0, [x29, #-4]
  4011c0:	ldp	x29, x30, [sp, #80]
  4011c4:	add	sp, sp, #0x60
  4011c8:	ret

00000000004011cc <static_destruct>:
  4011cc:	sub	sp, sp, #0x20
  4011d0:	stp	x29, x30, [sp, #16]
  4011d4:	add	x29, sp, #0x10
  4011d8:	adrp	x8, 41f000 <__FRAME_END__+0x1d1a0>
  4011dc:	ldr	x8, [x8, #3896]
  4011e0:	str	x8, [sp]
  4011e4:	cbnz	x8, 4011ec <static_destruct+0x20>
  4011e8:	b	401240 <static_destruct+0x74>
  4011ec:	ldr	x0, [sp]
  4011f0:	mov	x1, #0x8                   	// #8
  4011f4:	bl	401924 <ALIGN_TO>
  4011f8:	str	x0, [sp, #8]
  4011fc:	ldr	x8, [sp, #8]
  401200:	adrp	x9, 41f000 <__FRAME_END__+0x1d1a0>
  401204:	ldr	x9, [x9, #3904]
  401208:	cmp	x8, x9
  40120c:	b.cs	401240 <static_destruct+0x74>  // b.hs, b.nlast
  401210:	ldr	x8, [sp, #8]
  401214:	ldr	x8, [x8, #8]
  401218:	ldr	x9, [sp, #8]
  40121c:	ldr	x0, [x9]
  401220:	blr	x8
  401224:	ldr	x8, [sp, #8]
  401228:	add	x8, x8, #0x10
  40122c:	mov	x0, x8
  401230:	mov	x1, #0x8                   	// #8
  401234:	bl	401924 <ALIGN_TO>
  401238:	str	x0, [sp, #8]
  40123c:	b	4011fc <static_destruct+0x30>
  401240:	ldp	x29, x30, [sp, #16]
  401244:	add	sp, sp, #0x20
  401248:	ret

000000000040124c <generate_symlink>:
  40124c:	stp	x29, x30, [sp, #-16]!
  401250:	mov	x29, sp
  401254:	sub	sp, sp, #0x90
  401258:	mov	x8, xzr
  40125c:	mov	w0, #0xffffff9c            	// #-100
  401260:	adrp	x1, 401000 <main+0x188>
  401264:	add	x1, x1, #0xaed
  401268:	mov	w9, wzr
  40126c:	mov	w3, #0x100                 	// #256
  401270:	adrp	x10, 401000 <main+0x188>
  401274:	add	x10, x10, #0xa00
  401278:	add	x10, x10, #0x3
  40127c:	stur	x8, [x29, #-16]
  401280:	mov	w2, w9
  401284:	stur	x10, [x29, #-128]
  401288:	bl	400c40 <faccessat@plt>
  40128c:	cmp	w0, #0x0
  401290:	cset	w9, ge  // ge = tcont
  401294:	tbnz	w9, #0, 40133c <generate_symlink+0xf0>
  401298:	bl	400c50 <__errno_location@plt>
  40129c:	ldr	w8, [x0]
  4012a0:	cmp	w8, #0x2
  4012a4:	b.ne	4012b0 <generate_symlink+0x64>  // b.any
  4012a8:	stur	wzr, [x29, #-4]
  4012ac:	b	401618 <generate_symlink+0x3cc>
  4012b0:	mov	w8, #0x3                   	// #3
  4012b4:	stur	w8, [x29, #-20]
  4012b8:	bl	400c50 <__errno_location@plt>
  4012bc:	ldr	w8, [x0]
  4012c0:	stur	w8, [x29, #-24]
  4012c4:	stur	wzr, [x29, #-28]
  4012c8:	ldur	w0, [x29, #-28]
  4012cc:	bl	400bb0 <log_get_max_level_realm@plt>
  4012d0:	ldur	w8, [x29, #-20]
  4012d4:	and	w8, w8, #0x7
  4012d8:	cmp	w0, w8
  4012dc:	b.lt	401314 <generate_symlink+0xc8>  // b.tstop
  4012e0:	ldur	w8, [x29, #-28]
  4012e4:	ldur	w9, [x29, #-20]
  4012e8:	orr	w0, w9, w8, lsl #10
  4012ec:	ldur	w1, [x29, #-24]
  4012f0:	ldur	x2, [x29, #-128]
  4012f4:	mov	w3, #0x1c                  	// #28
  4012f8:	adrp	x4, 401000 <main+0x188>
  4012fc:	add	x4, x4, #0xafc
  401300:	adrp	x5, 401000 <main+0x188>
  401304:	add	x5, x5, #0xb0d
  401308:	bl	400bc0 <log_internal_realm@plt>
  40130c:	stur	w0, [x29, #-132]
  401310:	b	401328 <generate_symlink+0xdc>
  401314:	ldur	w0, [x29, #-24]
  401318:	bl	400bd0 <abs@plt>
  40131c:	mov	w8, wzr
  401320:	subs	w8, w8, w0, uxtb
  401324:	stur	w8, [x29, #-132]
  401328:	ldur	w8, [x29, #-132]
  40132c:	stur	w8, [x29, #-32]
  401330:	mov	w8, #0xffffffea            	// #-22
  401334:	stur	w8, [x29, #-4]
  401338:	b	401618 <generate_symlink+0x3cc>
  40133c:	adrp	x8, 420000 <completed.8445>
  401340:	add	x8, x8, #0x8
  401344:	ldr	x8, [x8]
  401348:	sub	x9, x29, #0x30
  40134c:	stur	x8, [x29, #-48]
  401350:	adrp	x8, 401000 <main+0x188>
  401354:	add	x8, x8, #0xb33
  401358:	str	x8, [x9, #8]
  40135c:	stur	xzr, [x29, #-72]
  401360:	stur	xzr, [x29, #-80]
  401364:	ldur	x8, [x29, #-80]
  401368:	mov	w9, #0x0                   	// #0
  40136c:	cmp	x8, #0x2
  401370:	stur	w9, [x29, #-136]
  401374:	b.cs	40139c <generate_symlink+0x150>  // b.hs, b.nlast
  401378:	ldur	x8, [x29, #-80]
  40137c:	mov	x9, #0x8                   	// #8
  401380:	mul	x8, x9, x8
  401384:	sub	x9, x29, #0x30
  401388:	add	x8, x9, x8
  40138c:	ldr	x8, [x8]
  401390:	cmp	x8, #0x0
  401394:	cset	w10, ne  // ne = any
  401398:	stur	w10, [x29, #-136]
  40139c:	ldur	w8, [x29, #-136]
  4013a0:	tbnz	w8, #0, 4013a8 <generate_symlink+0x15c>
  4013a4:	b	4013e0 <generate_symlink+0x194>
  4013a8:	ldur	x8, [x29, #-80]
  4013ac:	mov	x9, #0x8                   	// #8
  4013b0:	mul	x8, x9, x8
  4013b4:	sub	x9, x29, #0x30
  4013b8:	add	x8, x9, x8
  4013bc:	ldr	x0, [x8]
  4013c0:	bl	400c60 <strlen@plt>
  4013c4:	ldur	x8, [x29, #-72]
  4013c8:	add	x8, x8, x0
  4013cc:	stur	x8, [x29, #-72]
  4013d0:	ldur	x8, [x29, #-80]
  4013d4:	add	x8, x8, #0x1
  4013d8:	stur	x8, [x29, #-80]
  4013dc:	b	401364 <generate_symlink+0x118>
  4013e0:	ldur	x8, [x29, #-72]
  4013e4:	add	x8, x8, #0x1
  4013e8:	stur	x8, [x29, #-88]
  4013ec:	ldur	x1, [x29, #-88]
  4013f0:	mov	x0, #0x1                   	// #1
  4013f4:	bl	4017e4 <size_multiply_overflow>
  4013f8:	mov	w8, #0x1                   	// #1
  4013fc:	eor	w9, w0, #0x1
  401400:	eor	w9, w9, w8
  401404:	eor	w9, w9, w8
  401408:	eor	w8, w9, w8
  40140c:	and	w8, w8, #0x1
  401410:	mov	w1, w8
  401414:	sxtw	x10, w1
  401418:	cbz	x10, 401440 <generate_symlink+0x1f4>
  40141c:	mov	w8, wzr
  401420:	mov	w0, w8
  401424:	adrp	x1, 401000 <main+0x188>
  401428:	add	x1, x1, #0xb43
  40142c:	ldur	x2, [x29, #-128]
  401430:	mov	w3, #0x20                  	// #32
  401434:	adrp	x4, 401000 <main+0x188>
  401438:	add	x4, x4, #0xb6e
  40143c:	bl	400c20 <log_assert_failed_realm@plt>
  401440:	ldur	x8, [x29, #-88]
  401444:	mov	x9, #0x1                   	// #1
  401448:	mul	x8, x9, x8
  40144c:	cmp	x8, #0x400, lsl #12
  401450:	cset	w10, ls  // ls = plast
  401454:	mov	w11, #0x1                   	// #1
  401458:	eor	w10, w10, #0x1
  40145c:	eor	w10, w10, w11
  401460:	eor	w10, w10, w11
  401464:	and	w10, w10, #0x1
  401468:	mov	w0, w10
  40146c:	sxtw	x8, w0
  401470:	cbz	x8, 401498 <generate_symlink+0x24c>
  401474:	mov	w8, wzr
  401478:	mov	w0, w8
  40147c:	adrp	x1, 401000 <main+0x188>
  401480:	add	x1, x1, #0xb89
  401484:	ldur	x2, [x29, #-128]
  401488:	mov	w3, #0x20                  	// #32
  40148c:	adrp	x4, 401000 <main+0x188>
  401490:	add	x4, x4, #0xb6e
  401494:	bl	400c20 <log_assert_failed_realm@plt>
  401498:	ldur	x8, [x29, #-88]
  40149c:	mov	x9, #0x1                   	// #1
  4014a0:	mul	x8, x9, x8
  4014a4:	mul	x8, x8, x9
  4014a8:	add	x8, x8, #0xf
  4014ac:	and	x8, x8, #0xfffffffffffffff0
  4014b0:	mov	x9, sp
  4014b4:	subs	x8, x9, x8
  4014b8:	mov	sp, x8
  4014bc:	stur	x8, [x29, #-96]
  4014c0:	ldur	x8, [x29, #-96]
  4014c4:	stur	x8, [x29, #-56]
  4014c8:	stur	x8, [x29, #-64]
  4014cc:	stur	xzr, [x29, #-80]
  4014d0:	ldur	x8, [x29, #-80]
  4014d4:	mov	w9, #0x0                   	// #0
  4014d8:	cmp	x8, #0x2
  4014dc:	stur	w9, [x29, #-140]
  4014e0:	b.cs	401508 <generate_symlink+0x2bc>  // b.hs, b.nlast
  4014e4:	ldur	x8, [x29, #-80]
  4014e8:	mov	x9, #0x8                   	// #8
  4014ec:	mul	x8, x9, x8
  4014f0:	sub	x9, x29, #0x30
  4014f4:	add	x8, x9, x8
  4014f8:	ldr	x8, [x8]
  4014fc:	cmp	x8, #0x0
  401500:	cset	w10, ne  // ne = any
  401504:	stur	w10, [x29, #-140]
  401508:	ldur	w8, [x29, #-140]
  40150c:	tbnz	w8, #0, 401514 <generate_symlink+0x2c8>
  401510:	b	401548 <generate_symlink+0x2fc>
  401514:	ldur	x0, [x29, #-64]
  401518:	ldur	x8, [x29, #-80]
  40151c:	mov	x9, #0x8                   	// #8
  401520:	mul	x8, x9, x8
  401524:	sub	x9, x29, #0x30
  401528:	add	x8, x9, x8
  40152c:	ldr	x1, [x8]
  401530:	bl	400c70 <stpcpy@plt>
  401534:	stur	x0, [x29, #-64]
  401538:	ldur	x8, [x29, #-80]
  40153c:	add	x8, x8, #0x1
  401540:	stur	x8, [x29, #-80]
  401544:	b	4014d0 <generate_symlink+0x284>
  401548:	ldur	x8, [x29, #-64]
  40154c:	mov	w9, #0x0                   	// #0
  401550:	strb	w9, [x8]
  401554:	ldur	x8, [x29, #-56]
  401558:	stur	x8, [x29, #-104]
  40155c:	ldur	x8, [x29, #-104]
  401560:	stur	x8, [x29, #-16]
  401564:	ldur	x1, [x29, #-16]
  401568:	adrp	x0, 401000 <main+0x188>
  40156c:	add	x0, x0, #0xba8
  401570:	bl	400c80 <symlink@plt>
  401574:	cmp	w0, #0x0
  401578:	cset	w9, ge  // ge = tcont
  40157c:	tbnz	w9, #0, 401610 <generate_symlink+0x3c4>
  401580:	mov	w8, #0x3                   	// #3
  401584:	stur	w8, [x29, #-108]
  401588:	bl	400c50 <__errno_location@plt>
  40158c:	ldr	w8, [x0]
  401590:	stur	w8, [x29, #-112]
  401594:	stur	wzr, [x29, #-116]
  401598:	ldur	w0, [x29, #-116]
  40159c:	bl	400bb0 <log_get_max_level_realm@plt>
  4015a0:	ldur	w8, [x29, #-108]
  4015a4:	and	w8, w8, #0x7
  4015a8:	cmp	w0, w8
  4015ac:	b.lt	4015e8 <generate_symlink+0x39c>  // b.tstop
  4015b0:	ldur	w8, [x29, #-116]
  4015b4:	ldur	w9, [x29, #-108]
  4015b8:	orr	w0, w9, w8, lsl #10
  4015bc:	ldur	w1, [x29, #-112]
  4015c0:	ldur	x6, [x29, #-16]
  4015c4:	ldur	x2, [x29, #-128]
  4015c8:	mov	w3, #0x22                  	// #34
  4015cc:	adrp	x4, 401000 <main+0x188>
  4015d0:	add	x4, x4, #0xafc
  4015d4:	adrp	x5, 401000 <main+0x188>
  4015d8:	add	x5, x5, #0xbd1
  4015dc:	bl	400bc0 <log_internal_realm@plt>
  4015e0:	stur	w0, [x29, #-144]
  4015e4:	b	4015fc <generate_symlink+0x3b0>
  4015e8:	ldur	w0, [x29, #-112]
  4015ec:	bl	400bd0 <abs@plt>
  4015f0:	mov	w8, wzr
  4015f4:	subs	w8, w8, w0, uxtb
  4015f8:	stur	w8, [x29, #-144]
  4015fc:	ldur	w8, [x29, #-144]
  401600:	stur	w8, [x29, #-120]
  401604:	ldur	w8, [x29, #-120]
  401608:	stur	w8, [x29, #-4]
  40160c:	b	401618 <generate_symlink+0x3cc>
  401610:	mov	w8, #0x1                   	// #1
  401614:	stur	w8, [x29, #-4]
  401618:	ldur	w0, [x29, #-4]
  40161c:	mov	sp, x29
  401620:	ldp	x29, x30, [sp], #16
  401624:	ret

0000000000401628 <parse_proc_cmdline_item>:
  401628:	sub	sp, sp, #0x60
  40162c:	stp	x29, x30, [sp, #80]
  401630:	add	x29, sp, #0x50
  401634:	adrp	x8, 401000 <main+0x188>
  401638:	add	x8, x8, #0xa00
  40163c:	add	x8, x8, #0x3
  401640:	stur	x0, [x29, #-8]
  401644:	stur	x1, [x29, #-16]
  401648:	stur	x2, [x29, #-24]
  40164c:	str	x8, [sp, #16]
  401650:	ldur	x8, [x29, #-8]
  401654:	cmp	x8, #0x0
  401658:	cset	w9, ne  // ne = any
  40165c:	mov	w10, #0x1                   	// #1
  401660:	eor	w9, w9, #0x1
  401664:	eor	w9, w9, w10
  401668:	eor	w9, w9, w10
  40166c:	and	w9, w9, #0x1
  401670:	mov	w0, w9
  401674:	sxtw	x8, w0
  401678:	cbz	x8, 4016a0 <parse_proc_cmdline_item+0x78>
  40167c:	mov	w8, wzr
  401680:	mov	w0, w8
  401684:	adrp	x1, 401000 <main+0x188>
  401688:	add	x1, x1, #0xbf1
  40168c:	ldr	x2, [sp, #16]
  401690:	mov	w3, #0x28                  	// #40
  401694:	adrp	x4, 401000 <main+0x188>
  401698:	add	x4, x4, #0xbf5
  40169c:	bl	400c20 <log_assert_failed_realm@plt>
  4016a0:	ldur	x0, [x29, #-8]
  4016a4:	adrp	x1, 401000 <main+0x188>
  4016a8:	add	x1, x1, #0xc35
  4016ac:	bl	400c90 <strcmp@plt>
  4016b0:	cbnz	w0, 401740 <parse_proc_cmdline_item+0x118>
  4016b4:	ldur	x0, [x29, #-8]
  4016b8:	ldur	x1, [x29, #-16]
  4016bc:	bl	40184c <proc_cmdline_value_missing>
  4016c0:	tbnz	w0, #0, 401740 <parse_proc_cmdline_item+0x118>
  4016c4:	mov	w8, #0x4                   	// #4
  4016c8:	stur	w8, [x29, #-28]
  4016cc:	stur	wzr, [x29, #-32]
  4016d0:	stur	wzr, [x29, #-36]
  4016d4:	ldur	w0, [x29, #-36]
  4016d8:	bl	400bb0 <log_get_max_level_realm@plt>
  4016dc:	ldur	w8, [x29, #-28]
  4016e0:	and	w8, w8, #0x7
  4016e4:	cmp	w0, w8
  4016e8:	b.lt	401720 <parse_proc_cmdline_item+0xf8>  // b.tstop
  4016ec:	ldur	w8, [x29, #-36]
  4016f0:	ldur	w9, [x29, #-28]
  4016f4:	orr	w0, w9, w8, lsl #10
  4016f8:	ldur	w1, [x29, #-32]
  4016fc:	ldr	x2, [sp, #16]
  401700:	mov	w3, #0x30                  	// #48
  401704:	adrp	x4, 401000 <main+0x188>
  401708:	add	x4, x4, #0xc42
  40170c:	adrp	x5, 401000 <main+0x188>
  401710:	add	x5, x5, #0xc5a
  401714:	bl	400bc0 <log_internal_realm@plt>
  401718:	str	w0, [sp, #12]
  40171c:	b	401734 <parse_proc_cmdline_item+0x10c>
  401720:	ldur	w0, [x29, #-32]
  401724:	bl	400bd0 <abs@plt>
  401728:	mov	w8, wzr
  40172c:	subs	w8, w8, w0, uxtb
  401730:	str	w8, [sp, #12]
  401734:	ldr	w8, [sp, #12]
  401738:	str	w8, [sp, #40]
  40173c:	b	4017d0 <parse_proc_cmdline_item+0x1a8>
  401740:	ldur	x8, [x29, #-16]
  401744:	cbnz	x8, 4017d0 <parse_proc_cmdline_item+0x1a8>
  401748:	ldur	x0, [x29, #-8]
  40174c:	bl	400ca0 <runlevel_to_target@plt>
  401750:	cbz	x0, 4017d0 <parse_proc_cmdline_item+0x1a8>
  401754:	mov	w8, #0x4                   	// #4
  401758:	str	w8, [sp, #36]
  40175c:	str	wzr, [sp, #32]
  401760:	str	wzr, [sp, #28]
  401764:	ldr	w0, [sp, #28]
  401768:	bl	400bb0 <log_get_max_level_realm@plt>
  40176c:	ldr	w8, [sp, #36]
  401770:	and	w8, w8, #0x7
  401774:	cmp	w0, w8
  401778:	b.lt	4017b4 <parse_proc_cmdline_item+0x18c>  // b.tstop
  40177c:	ldr	w8, [sp, #28]
  401780:	ldr	w9, [sp, #36]
  401784:	orr	w0, w9, w8, lsl #10
  401788:	ldr	w1, [sp, #32]
  40178c:	ldur	x6, [x29, #-8]
  401790:	ldr	x2, [sp, #16]
  401794:	mov	w3, #0x32                  	// #50
  401798:	adrp	x4, 401000 <main+0x188>
  40179c:	add	x4, x4, #0xc42
  4017a0:	adrp	x5, 401000 <main+0x188>
  4017a4:	add	x5, x5, #0xca8
  4017a8:	bl	400bc0 <log_internal_realm@plt>
  4017ac:	str	w0, [sp, #8]
  4017b0:	b	4017c8 <parse_proc_cmdline_item+0x1a0>
  4017b4:	ldr	w0, [sp, #32]
  4017b8:	bl	400bd0 <abs@plt>
  4017bc:	mov	w8, wzr
  4017c0:	subs	w8, w8, w0, uxtb
  4017c4:	str	w8, [sp, #8]
  4017c8:	ldr	w8, [sp, #8]
  4017cc:	str	w8, [sp, #24]
  4017d0:	mov	w8, wzr
  4017d4:	mov	w0, w8
  4017d8:	ldp	x29, x30, [sp, #80]
  4017dc:	add	sp, sp, #0x60
  4017e0:	ret

00000000004017e4 <size_multiply_overflow>:
  4017e4:	sub	sp, sp, #0x20
  4017e8:	str	x0, [sp, #24]
  4017ec:	str	x1, [sp, #16]
  4017f0:	ldr	x8, [sp, #16]
  4017f4:	mov	w9, #0x0                   	// #0
  4017f8:	str	w9, [sp, #12]
  4017fc:	cbz	x8, 40181c <size_multiply_overflow+0x38>
  401800:	ldr	x8, [sp, #24]
  401804:	ldr	x9, [sp, #16]
  401808:	mov	x10, #0xffffffffffffffff    	// #-1
  40180c:	udiv	x9, x10, x9
  401810:	cmp	x8, x9
  401814:	cset	w11, hi  // hi = pmore
  401818:	str	w11, [sp, #12]
  40181c:	ldr	w8, [sp, #12]
  401820:	mov	w9, #0x1                   	// #1
  401824:	eor	w8, w8, #0x1
  401828:	eor	w8, w8, w9
  40182c:	and	w8, w8, #0x1
  401830:	mov	w0, w8
  401834:	sxtw	x10, w0
  401838:	cmp	x10, #0x0
  40183c:	cset	w8, ne  // ne = any
  401840:	and	w0, w8, #0x1
  401844:	add	sp, sp, #0x20
  401848:	ret

000000000040184c <proc_cmdline_value_missing>:
  40184c:	sub	sp, sp, #0x50
  401850:	stp	x29, x30, [sp, #64]
  401854:	add	x29, sp, #0x40
  401858:	adrp	x8, 401000 <main+0x188>
  40185c:	add	x8, x8, #0xcf5
  401860:	add	x2, x8, #0x3
  401864:	stur	x0, [x29, #-16]
  401868:	stur	x1, [x29, #-24]
  40186c:	ldur	x8, [x29, #-24]
  401870:	str	x2, [sp, #16]
  401874:	cbnz	x8, 401904 <proc_cmdline_value_missing+0xb8>
  401878:	mov	w8, #0x4                   	// #4
  40187c:	stur	w8, [x29, #-28]
  401880:	str	wzr, [sp, #32]
  401884:	str	wzr, [sp, #28]
  401888:	ldr	w0, [sp, #28]
  40188c:	bl	400bb0 <log_get_max_level_realm@plt>
  401890:	ldur	w8, [x29, #-28]
  401894:	and	w8, w8, #0x7
  401898:	cmp	w0, w8
  40189c:	b.lt	4018d8 <proc_cmdline_value_missing+0x8c>  // b.tstop
  4018a0:	ldr	w8, [sp, #28]
  4018a4:	ldur	w9, [x29, #-28]
  4018a8:	orr	w0, w9, w8, lsl #10
  4018ac:	ldr	w1, [sp, #32]
  4018b0:	ldur	x6, [x29, #-16]
  4018b4:	ldr	x2, [sp, #16]
  4018b8:	mov	w3, #0x21                  	// #33
  4018bc:	adrp	x4, 401000 <main+0x188>
  4018c0:	add	x4, x4, #0xd11
  4018c4:	adrp	x5, 401000 <main+0x188>
  4018c8:	add	x5, x5, #0xd2c
  4018cc:	bl	400bc0 <log_internal_realm@plt>
  4018d0:	str	w0, [sp, #12]
  4018d4:	b	4018ec <proc_cmdline_value_missing+0xa0>
  4018d8:	ldr	w0, [sp, #32]
  4018dc:	bl	400bd0 <abs@plt>
  4018e0:	mov	w8, wzr
  4018e4:	subs	w8, w8, w0, uxtb
  4018e8:	str	w8, [sp, #12]
  4018ec:	ldr	w8, [sp, #12]
  4018f0:	str	w8, [sp, #24]
  4018f4:	mov	w8, #0x1                   	// #1
  4018f8:	and	w8, w8, #0x1
  4018fc:	sturb	w8, [x29, #-1]
  401900:	b	401910 <proc_cmdline_value_missing+0xc4>
  401904:	mov	w8, wzr
  401908:	and	w8, w8, #0x1
  40190c:	sturb	w8, [x29, #-1]
  401910:	ldurb	w8, [x29, #-1]
  401914:	and	w0, w8, #0x1
  401918:	ldp	x29, x30, [sp, #64]
  40191c:	add	sp, sp, #0x50
  401920:	ret

0000000000401924 <ALIGN_TO>:
  401924:	sub	sp, sp, #0x10
  401928:	str	x0, [sp, #8]
  40192c:	str	x1, [sp]
  401930:	ldr	x8, [sp, #8]
  401934:	ldr	x9, [sp]
  401938:	add	x8, x8, x9
  40193c:	subs	x8, x8, #0x1
  401940:	ldr	x9, [sp]
  401944:	subs	x9, x9, #0x1
  401948:	bic	x0, x8, x9
  40194c:	add	sp, sp, #0x10
  401950:	ret
  401954:	udf	#0

0000000000401958 <__libc_csu_init>:
  401958:	stp	x29, x30, [sp, #-64]!
  40195c:	mov	x29, sp
  401960:	stp	x19, x20, [sp, #16]
  401964:	adrp	x20, 41f000 <__FRAME_END__+0x1d1a0>
  401968:	add	x20, x20, #0xd08
  40196c:	stp	x21, x22, [sp, #32]
  401970:	adrp	x21, 41f000 <__FRAME_END__+0x1d1a0>
  401974:	add	x21, x21, #0xd00
  401978:	sub	x20, x20, x21
  40197c:	mov	w22, w0
  401980:	stp	x23, x24, [sp, #48]
  401984:	mov	x23, x1
  401988:	mov	x24, x2
  40198c:	bl	400b38 <_init>
  401990:	cmp	xzr, x20, asr #3
  401994:	b.eq	4019c0 <__libc_csu_init+0x68>  // b.none
  401998:	asr	x20, x20, #3
  40199c:	mov	x19, #0x0                   	// #0
  4019a0:	ldr	x3, [x21, x19, lsl #3]
  4019a4:	mov	x2, x24
  4019a8:	add	x19, x19, #0x1
  4019ac:	mov	x1, x23
  4019b0:	mov	w0, w22
  4019b4:	blr	x3
  4019b8:	cmp	x20, x19
  4019bc:	b.ne	4019a0 <__libc_csu_init+0x48>  // b.any
  4019c0:	ldp	x19, x20, [sp, #16]
  4019c4:	ldp	x21, x22, [sp, #32]
  4019c8:	ldp	x23, x24, [sp, #48]
  4019cc:	ldp	x29, x30, [sp], #64
  4019d0:	ret
  4019d4:	nop

00000000004019d8 <__libc_csu_fini>:
  4019d8:	ret

Disassembly of section .fini:

00000000004019dc <_fini>:
  4019dc:	stp	x29, x30, [sp, #-16]!
  4019e0:	mov	x29, sp
  4019e4:	ldp	x29, x30, [sp], #16
  4019e8:	ret
