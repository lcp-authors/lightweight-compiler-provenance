
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//chain.module_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_chainloader_unload>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	adrp	x0, 0 <grub_chainloader_unload>
  10:	ldr	x0, [x0]
  14:	ldr	x0, [x0]
  18:	ldr	x20, [x0, #96]
  1c:	adrp	x0, 0 <grub_chainloader_unload>
  20:	ldr	x19, [x0]
  24:	ldr	x1, [x20, #224]
  28:	ldr	x0, [x19]
  2c:	blr	x1
  30:	ldr	x2, [x20, #48]
  34:	ldr	x1, [x19, #8]
  38:	ldr	x0, [x19, #16]
  3c:	blr	x2
  40:	ldr	x0, [x19, #24]
  44:	bl	0 <grub_free>
  48:	ldr	x0, [x19, #32]
  4c:	bl	0 <grub_free>
  50:	str	xzr, [x19, #32]
  54:	str	xzr, [x19, #24]
  58:	ldr	x0, [x19, #40]
  5c:	bl	0 <grub_dl_unref>
  60:	mov	w0, #0x0                   	// #0
  64:	ldp	x19, x20, [sp, #16]
  68:	ldp	x29, x30, [sp], #32
  6c:	ret
	...

0000000000000080 <grub_chainloader_boot>:
  80:	stp	x29, x30, [sp, #-48]!
  84:	mov	x29, sp
  88:	stp	x19, x20, [sp, #16]
  8c:	str	xzr, [sp, #32]
  90:	adrp	x0, 0 <grub_chainloader_unload>
  94:	ldr	x0, [x0]
  98:	ldr	x0, [x0]
  9c:	ldr	x19, [x0, #96]
  a0:	adrp	x0, 0 <grub_chainloader_unload>
  a4:	ldr	x0, [x0]
  a8:	ldr	x3, [x19, #208]
  ac:	add	x2, sp, #0x20
  b0:	add	x1, sp, #0x28
  b4:	ldr	x0, [x0]
  b8:	blr	x3
  bc:	cbz	x0, 248 <grub_chainloader_boot+0x1c8>
  c0:	ldr	x0, [sp, #32]
  c4:	cbz	x0, 274 <grub_chainloader_boot+0x1f4>
  c8:	ldr	x0, [sp, #40]
  cc:	lsl	x0, x0, #2
  d0:	add	x0, x0, #0x1
  d4:	bl	0 <grub_malloc>
  d8:	mov	x20, x0
  dc:	cbz	x0, 248 <grub_chainloader_boot+0x1c8>
  e0:	ldr	x0, [sp, #32]
  e4:	ldr	x1, [sp, #40]
  e8:	sub	x6, x1, #0x1
  ec:	cbz	x1, 22c <grub_chainloader_boot+0x1ac>
  f0:	mov	x1, x20
  f4:	mov	w2, #0x0                   	// #0
  f8:	mov	w9, #0xffff2800            	// #-55296
  fc:	mov	w7, #0xffff2400            	// #-56320
 100:	mov	w10, #0x3f                  	// #63
 104:	mov	w8, #0x0                   	// #0
 108:	mov	w11, #0x2400                	// #9216
 10c:	b	124 <grub_chainloader_boot+0xa4>
 110:	strb	w10, [x1], #1
 114:	mov	w2, w8
 118:	sub	x6, x6, #0x1
 11c:	cmn	x6, #0x1
 120:	b.eq	230 <grub_chainloader_boot+0x1b0>  // b.none
 124:	mov	x5, x0
 128:	ldrh	w3, [x5], #2
 12c:	cbz	w2, 188 <grub_chainloader_boot+0x108>
 130:	add	w4, w3, w7
 134:	cmp	w4, #0x3ff
 138:	b.hi	110 <grub_chainloader_boot+0x90>  // b.pmore
 13c:	add	w2, w2, w9
 140:	add	w2, w3, w2, lsl #10
 144:	add	w2, w2, w11
 148:	lsr	w0, w2, #18
 14c:	orr	w0, w0, #0xfffffff0
 150:	strb	w0, [x1]
 154:	ubfx	x0, x2, #12, #6
 158:	orr	w0, w0, #0xffffff80
 15c:	strb	w0, [x1, #1]
 160:	ubfx	x0, x2, #6, #6
 164:	orr	w0, w0, #0xffffff80
 168:	strb	w0, [x1, #2]
 16c:	and	w2, w2, #0x3f
 170:	orr	w2, w2, #0xffffff80
 174:	strb	w2, [x1, #3]
 178:	mov	x0, x5
 17c:	add	x1, x1, #0x4
 180:	mov	w2, w8
 184:	b	118 <grub_chainloader_boot+0x98>
 188:	cmp	w3, #0x7f
 18c:	b.hi	19c <grub_chainloader_boot+0x11c>  // b.pmore
 190:	strb	w3, [x1], #1
 194:	mov	x0, x5
 198:	b	118 <grub_chainloader_boot+0x98>
 19c:	cmp	w3, #0x7ff
 1a0:	b.hi	1cc <grub_chainloader_boot+0x14c>  // b.pmore
 1a4:	lsr	w0, w3, #6
 1a8:	orr	w0, w0, #0xffffffc0
 1ac:	mov	x4, x1
 1b0:	strb	w0, [x4], #2
 1b4:	and	w3, w3, #0x3f
 1b8:	orr	w3, w3, #0xffffff80
 1bc:	strb	w3, [x1, #1]
 1c0:	mov	x0, x5
 1c4:	mov	x1, x4
 1c8:	b	118 <grub_chainloader_boot+0x98>
 1cc:	add	w0, w3, w9
 1d0:	cmp	w0, #0x3ff
 1d4:	b.ls	220 <grub_chainloader_boot+0x1a0>  // b.plast
 1d8:	add	w0, w3, w7
 1dc:	cmp	w0, #0x3ff
 1e0:	b.hi	1f0 <grub_chainloader_boot+0x170>  // b.pmore
 1e4:	strb	w10, [x1], #1
 1e8:	mov	x0, x5
 1ec:	b	118 <grub_chainloader_boot+0x98>
 1f0:	lsr	w0, w3, #12
 1f4:	orr	w0, w0, #0xffffffe0
 1f8:	strb	w0, [x1]
 1fc:	ubfx	x0, x3, #6, #6
 200:	orr	w0, w0, #0xffffff80
 204:	strb	w0, [x1, #1]
 208:	and	w3, w3, #0x3f
 20c:	orr	w3, w3, #0xffffff80
 210:	strb	w3, [x1, #2]
 214:	mov	x0, x5
 218:	add	x1, x1, #0x3
 21c:	b	118 <grub_chainloader_boot+0x98>
 220:	mov	w2, w3
 224:	mov	x0, x5
 228:	b	118 <grub_chainloader_boot+0x98>
 22c:	mov	x1, x20
 230:	strb	wzr, [x1]
 234:	mov	x1, x20
 238:	mov	w0, #0x15                  	// #21
 23c:	bl	0 <grub_error>
 240:	mov	x0, x20
 244:	bl	0 <grub_free>
 248:	ldr	x0, [sp, #32]
 24c:	cbz	x0, 258 <grub_chainloader_boot+0x1d8>
 250:	ldr	x1, [x19, #72]
 254:	blr	x1
 258:	bl	0 <grub_loader_unset>
 25c:	adrp	x0, 0 <grub_chainloader_unload>
 260:	ldr	x0, [x0]
 264:	ldr	w0, [x0]
 268:	ldp	x19, x20, [sp, #16]
 26c:	ldp	x29, x30, [sp], #48
 270:	ret
 274:	adrp	x0, 0 <grub_chainloader_unload>
 278:	ldr	x1, [x0]
 27c:	mov	w0, #0x15                  	// #21
 280:	bl	0 <grub_error>
 284:	b	248 <grub_chainloader_boot+0x1c8>
	...

00000000000002a8 <copy_file_path>:
 2a8:	stp	x29, x30, [sp, #-48]!
 2ac:	mov	x29, sp
 2b0:	stp	x19, x20, [sp, #16]
 2b4:	stp	x21, x22, [sp, #32]
 2b8:	mov	x21, x0
 2bc:	mov	x22, x1
 2c0:	mov	w0, #0x4                   	// #4
 2c4:	strb	w0, [x21]
 2c8:	strb	w0, [x21, #1]
 2cc:	and	x19, x2, #0xffff
 2d0:	ubfiz	x0, x2, #1, #16
 2d4:	bl	0 <grub_malloc>
 2d8:	cbz	x0, 498 <copy_file_path+0x1f0>
 2dc:	mov	x20, x0
 2e0:	cbz	x19, 468 <copy_file_path+0x1c0>
 2e4:	mov	x3, x0
 2e8:	mov	x0, x19
 2ec:	mov	w2, #0x0                   	// #0
 2f0:	mov	w6, #0x0                   	// #0
 2f4:	mov	w8, #0x3f                  	// #63
 2f8:	mov	w7, #0xffff                	// #65535
 2fc:	mov	w10, #0xffffd800            	// #-10240
 300:	mov	w9, #0xffffdc00            	// #-9216
 304:	b	3c8 <copy_file_path+0x120>
 308:	mov	w2, w4
 30c:	tbz	w4, #7, 374 <copy_file_path+0xcc>
 310:	and	w1, w4, #0xe0
 314:	cmp	w1, #0xc0
 318:	b.eq	35c <copy_file_path+0xb4>  // b.none
 31c:	and	w1, w4, #0xf0
 320:	and	w2, w4, #0xf
 324:	mov	w6, #0x2                   	// #2
 328:	cmp	w1, #0xe0
 32c:	b.eq	36c <copy_file_path+0xc4>  // b.none
 330:	and	w1, w4, #0xf8
 334:	mov	x22, x5
 338:	and	w2, w4, #0x7
 33c:	mov	w6, #0x3                   	// #3
 340:	cmp	w1, #0xf0
 344:	b.eq	36c <copy_file_path+0xc4>  // b.none
 348:	mov	w2, w8
 34c:	strh	w2, [x3], #2
 350:	sub	x0, x0, #0x1
 354:	mov	w6, #0x0                   	// #0
 358:	b	3bc <copy_file_path+0x114>
 35c:	and	w2, w4, #0x1f
 360:	mov	w6, #0x1                   	// #1
 364:	cmp	w2, #0x1
 368:	b.ls	4a8 <copy_file_path+0x200>  // b.plast
 36c:	mov	x22, x5
 370:	b	3bc <copy_file_path+0x114>
 374:	cbz	w2, 424 <copy_file_path+0x17c>
 378:	cmp	w2, w7
 37c:	ccmp	x0, #0x1, #0x2, hi  // hi = pmore
 380:	b.ls	424 <copy_file_path+0x17c>  // b.plast
 384:	cmp	w2, w7
 388:	b.ls	41c <copy_file_path+0x174>  // b.plast
 38c:	sub	w1, w2, #0x10, lsl #12
 390:	ubfx	x1, x1, #10, #10
 394:	orr	w1, w1, w10
 398:	mov	x4, x3
 39c:	strh	w1, [x4], #4
 3a0:	and	w1, w2, #0x3ff
 3a4:	orr	w1, w1, w9
 3a8:	strh	w1, [x3, #2]
 3ac:	sub	x0, x0, #0x2
 3b0:	mov	x22, x5
 3b4:	mov	x3, x4
 3b8:	mov	w6, #0x0                   	// #0
 3bc:	cmp	x19, #0x0
 3c0:	ccmp	x0, #0x0, #0x4, ne  // ne = any
 3c4:	b.eq	424 <copy_file_path+0x17c>  // b.none
 3c8:	cmn	x19, #0x1
 3cc:	cset	x1, ne  // ne = any
 3d0:	sub	x19, x19, x1
 3d4:	mov	x5, x22
 3d8:	ldrb	w4, [x5], #1
 3dc:	cbz	w6, 308 <copy_file_path+0x60>
 3e0:	and	w1, w4, #0xc0
 3e4:	cmp	w1, #0x80
 3e8:	b.ne	348 <copy_file_path+0xa0>  // b.any
 3ec:	bfi	w4, w2, #6, #26
 3f0:	mov	w2, w4
 3f4:	sub	w6, w6, #0x1
 3f8:	cmp	w4, #0x1f
 3fc:	ccmp	w6, #0x1, #0x0, ls  // ls = plast
 400:	b.eq	348 <copy_file_path+0xa0>  // b.none
 404:	cmp	w6, #0x2
 408:	ccmp	w4, #0xf, #0x2, eq  // eq = none
 40c:	b.ls	348 <copy_file_path+0xa0>  // b.plast
 410:	mov	x22, x5
 414:	cbnz	w6, 3bc <copy_file_path+0x114>
 418:	b	374 <copy_file_path+0xcc>
 41c:	mov	x22, x5
 420:	b	34c <copy_file_path+0xa4>
 424:	sub	x3, x3, x20
 428:	ubfx	w22, w3, #1, #16
 42c:	and	x19, x3, #0x1fffe
 430:	add	x2, x20, x19
 434:	cmp	x20, x2
 438:	b.cs	46c <copy_file_path+0x1c4>  // b.hs, b.nlast
 43c:	mov	x0, x20
 440:	mov	w3, #0x5c                  	// #92
 444:	b	454 <copy_file_path+0x1ac>
 448:	add	x0, x0, #0x2
 44c:	cmp	x0, x2
 450:	b.cs	46c <copy_file_path+0x1c4>  // b.hs, b.nlast
 454:	ldrh	w1, [x0]
 458:	cmp	w1, #0x2f
 45c:	b.ne	448 <copy_file_path+0x1a0>  // b.any
 460:	strh	w3, [x0]
 464:	b	448 <copy_file_path+0x1a0>
 468:	mov	w22, #0x0                   	// #0
 46c:	mov	x2, x19
 470:	mov	x1, x20
 474:	add	x0, x21, #0x4
 478:	bl	0 <grub_memmove>
 47c:	add	x0, x21, w22, sxtw #1
 480:	strh	wzr, [x0, #4]
 484:	add	w22, w22, #0x3
 488:	ubfiz	w22, w22, #1, #15
 48c:	strh	w22, [x21, #2]
 490:	mov	x0, x20
 494:	bl	0 <grub_free>
 498:	ldp	x19, x20, [sp, #16]
 49c:	ldp	x21, x22, [sp, #32]
 4a0:	ldp	x29, x30, [sp], #48
 4a4:	ret
 4a8:	mov	x22, x5
 4ac:	b	348 <copy_file_path+0xa0>

00000000000004b0 <grub_cmd_chainloader>:
 4b0:	stp	x29, x30, [sp, #-224]!
 4b4:	mov	x29, sp
 4b8:	cbz	w1, 5a0 <grub_cmd_chainloader+0xf0>
 4bc:	stp	x19, x20, [sp, #16]
 4c0:	stp	x21, x22, [sp, #32]
 4c4:	stp	x25, x26, [sp, #64]
 4c8:	stp	x27, x28, [sp, #80]
 4cc:	mov	w20, w1
 4d0:	mov	x21, x2
 4d4:	ldr	x25, [x2]
 4d8:	adrp	x0, 0 <grub_chainloader_unload>
 4dc:	ldr	x19, [x0]
 4e0:	ldr	x0, [x19, #40]
 4e4:	bl	0 <grub_dl_ref>
 4e8:	str	xzr, [x19, #16]
 4ec:	str	xzr, [x19]
 4f0:	str	xzr, [x19, #24]
 4f4:	adrp	x0, 0 <grub_chainloader_unload>
 4f8:	ldr	x0, [x0]
 4fc:	ldr	x0, [x0]
 500:	ldr	x27, [x0, #96]
 504:	mov	w1, #0x1d                  	// #29
 508:	mov	x0, x25
 50c:	bl	0 <grub_file_open>
 510:	mov	x22, x0
 514:	cbz	x0, 62c <grub_cmd_chainloader+0x17c>
 518:	stp	x23, x24, [sp, #48]
 51c:	mov	x0, #0x0                   	// #0
 520:	bl	0 <grub_device_open>
 524:	mov	x23, x0
 528:	cbz	x0, 620 <grub_cmd_chainloader+0x170>
 52c:	ldr	x0, [x0]
 530:	cbz	x0, 5b4 <grub_cmd_chainloader+0x104>
 534:	bl	0 <grub_efidisk_get_device_handle>
 538:	str	x0, [sp, #96]
 53c:	ldr	x0, [sp, #96]
 540:	cbz	x0, 608 <grub_cmd_chainloader+0x158>
 544:	bl	0 <grub_efi_get_device_path>
 548:	mov	x28, x0
 54c:	cbz	x0, 608 <grub_cmd_chainloader+0x158>
 550:	mov	w1, #0x29                  	// #41
 554:	mov	x0, x25
 558:	bl	0 <grub_strchr>
 55c:	cmp	x0, #0x0
 560:	csinc	x26, x25, x0, eq  // eq = none
 564:	mov	w1, #0x2f                  	// #47
 568:	mov	x0, x26
 56c:	bl	0 <grub_strrchr>
 570:	str	x0, [sp, #104]
 574:	mov	x19, x28
 578:	mov	x24, #0x0                   	// #0
 57c:	cbnz	x0, 690 <grub_cmd_chainloader+0x1e0>
 580:	adrp	x0, 0 <grub_chainloader_unload>
 584:	ldr	x1, [x0]
 588:	mov	w0, #0x7                   	// #7
 58c:	bl	0 <grub_error>
 590:	adrp	x0, 0 <grub_chainloader_unload>
 594:	ldr	x0, [x0]
 598:	str	xzr, [x0, #24]
 59c:	b	618 <grub_cmd_chainloader+0x168>
 5a0:	adrp	x0, 0 <grub_chainloader_unload>
 5a4:	ldr	x1, [x0]
 5a8:	mov	w0, #0x12                  	// #18
 5ac:	bl	0 <grub_error>
 5b0:	b	684 <grub_cmd_chainloader+0x1d4>
 5b4:	ldr	x0, [x23, #8]
 5b8:	cbz	x0, 608 <grub_cmd_chainloader+0x158>
 5bc:	ldr	x0, [x0]
 5c0:	cbz	x0, 608 <grub_cmd_chainloader+0x158>
 5c4:	add	x1, sp, #0xa0
 5c8:	bl	0 <grub_net_resolve_address>
 5cc:	cbnz	w0, 618 <grub_cmd_chainloader+0x168>
 5d0:	ldp	x0, x1, [sp, #160]
 5d4:	stp	x0, x1, [sp, #112]
 5d8:	ldp	x0, x1, [sp, #176]
 5dc:	stp	x0, x1, [sp, #128]
 5e0:	add	x2, sp, #0x98
 5e4:	add	x1, sp, #0xc0
 5e8:	add	x0, sp, #0x70
 5ec:	bl	0 <grub_net_route_address>
 5f0:	cbnz	w0, 618 <grub_cmd_chainloader+0x168>
 5f4:	ldr	x0, [sp, #152]
 5f8:	ldr	x0, [x0, #24]
 5fc:	bl	0 <grub_efinet_get_device_handle>
 600:	str	x0, [sp, #96]
 604:	b	53c <grub_cmd_chainloader+0x8c>
 608:	adrp	x0, 0 <grub_chainloader_unload>
 60c:	ldr	x1, [x0]
 610:	mov	w0, #0xd                   	// #13
 614:	bl	0 <grub_error>
 618:	mov	x0, x23
 61c:	bl	0 <grub_device_close>
 620:	mov	x0, x22
 624:	bl	0 <grub_file_close>
 628:	ldp	x23, x24, [sp, #48]
 62c:	adrp	x0, 0 <grub_chainloader_unload>
 630:	ldr	x19, [x0]
 634:	ldr	x0, [x19, #24]
 638:	bl	0 <grub_free>
 63c:	ldr	x0, [x19, #16]
 640:	cbz	x0, 658 <grub_cmd_chainloader+0x1a8>
 644:	adrp	x1, 0 <grub_chainloader_unload>
 648:	ldr	x1, [x1]
 64c:	ldr	x2, [x27, #48]
 650:	ldr	x1, [x1, #8]
 654:	blr	x2
 658:	adrp	x0, 0 <grub_chainloader_unload>
 65c:	ldr	x0, [x0]
 660:	ldr	x0, [x0, #40]
 664:	bl	0 <grub_dl_unref>
 668:	adrp	x0, 0 <grub_chainloader_unload>
 66c:	ldr	x0, [x0]
 670:	ldr	w0, [x0]
 674:	ldp	x19, x20, [sp, #16]
 678:	ldp	x21, x22, [sp, #32]
 67c:	ldp	x25, x26, [sp, #64]
 680:	ldp	x27, x28, [sp, #80]
 684:	ldp	x29, x30, [sp], #224
 688:	ret
 68c:	add	x19, x19, x1
 690:	ldrh	w1, [x19, #2]
 694:	add	x24, x24, x1
 698:	ldrb	w0, [x19]
 69c:	and	w0, w0, #0x7f
 6a0:	cmp	w0, #0x7f
 6a4:	b.ne	68c <grub_cmd_chainloader+0x1dc>  // b.any
 6a8:	ldrb	w0, [x19, #1]
 6ac:	cmp	w0, #0xff
 6b0:	b.ne	68c <grub_cmd_chainloader+0x1dc>  // b.any
 6b4:	mov	x0, x26
 6b8:	bl	0 <grub_strlen>
 6bc:	add	x0, x24, x0, lsl #1
 6c0:	add	x0, x0, #0xc
 6c4:	bl	0 <grub_malloc>
 6c8:	adrp	x1, 0 <grub_chainloader_unload>
 6cc:	ldr	x1, [x1]
 6d0:	str	x0, [x1, #24]
 6d4:	cbz	x0, 590 <grub_cmd_chainloader+0xe0>
 6d8:	mov	x2, x24
 6dc:	mov	x1, x28
 6e0:	bl	0 <grub_memmove>
 6e4:	sub	x19, x19, x28
 6e8:	adrp	x0, 0 <grub_chainloader_unload>
 6ec:	ldr	x24, [x0]
 6f0:	ldr	x28, [x24, #24]
 6f4:	add	x19, x28, x19
 6f8:	mov	x0, x19
 6fc:	bl	0 <grub_efi_print_device_path>
 700:	ldr	x28, [sp, #104]
 704:	sub	x2, x28, x26
 708:	mov	x1, x26
 70c:	mov	x0, x19
 710:	bl	2a8 <copy_file_path>
 714:	ldrh	w0, [x19, #2]
 718:	add	x19, x19, x0
 71c:	add	x26, x28, #0x1
 720:	mov	x0, x26
 724:	bl	0 <grub_strlen>
 728:	mov	w2, w0
 72c:	mov	x1, x26
 730:	mov	x0, x19
 734:	bl	2a8 <copy_file_path>
 738:	ldrh	w1, [x19, #2]
 73c:	add	x0, x19, x1
 740:	mov	w2, #0x7f                  	// #127
 744:	strb	w2, [x19, x1]
 748:	mov	w1, #0xffffffff            	// #-1
 74c:	strb	w1, [x0, #1]
 750:	mov	w1, #0x4                   	// #4
 754:	strh	w1, [x0, #2]
 758:	ldr	x0, [x24, #24]
 75c:	cbz	x0, 618 <grub_cmd_chainloader+0x168>
 760:	adrp	x0, 0 <grub_chainloader_unload>
 764:	ldr	x0, [x0]
 768:	bl	0 <grub_printf>
 76c:	adrp	x0, 0 <grub_chainloader_unload>
 770:	ldr	x0, [x0]
 774:	ldr	x0, [x0, #24]
 778:	bl	0 <grub_efi_print_device_path>
 77c:	ldr	x19, [x22, #64]
 780:	cbz	x19, 7fc <grub_cmd_chainloader+0x34c>
 784:	add	x2, x19, #0xfff
 788:	lsr	x2, x2, #12
 78c:	adrp	x0, 0 <grub_chainloader_unload>
 790:	ldr	x3, [x0]
 794:	str	x2, [x3, #8]
 798:	ldr	x4, [x27, #40]
 79c:	add	x3, x3, #0x10
 7a0:	mov	w1, #0x1                   	// #1
 7a4:	mov	w0, #0x0                   	// #0
 7a8:	blr	x4
 7ac:	cbnz	x0, 814 <grub_cmd_chainloader+0x364>
 7b0:	adrp	x0, 0 <grub_chainloader_unload>
 7b4:	ldr	x0, [x0]
 7b8:	ldr	x24, [x0, #16]
 7bc:	mov	x2, x19
 7c0:	mov	x1, x24
 7c4:	mov	x0, x22
 7c8:	bl	0 <grub_file_read>
 7cc:	cmp	x0, x19
 7d0:	b.eq	854 <grub_cmd_chainloader+0x3a4>  // b.none
 7d4:	adrp	x0, 0 <grub_chainloader_unload>
 7d8:	ldr	x0, [x0]
 7dc:	ldr	w0, [x0]
 7e0:	cbnz	w0, 618 <grub_cmd_chainloader+0x168>
 7e4:	mov	x2, x25
 7e8:	adrp	x0, 0 <grub_chainloader_unload>
 7ec:	ldr	x1, [x0]
 7f0:	mov	w0, #0x15                  	// #21
 7f4:	bl	0 <grub_error>
 7f8:	b	618 <grub_cmd_chainloader+0x168>
 7fc:	mov	x2, x25
 800:	adrp	x0, 0 <grub_chainloader_unload>
 804:	ldr	x1, [x0]
 808:	mov	w0, #0x15                  	// #21
 80c:	bl	0 <grub_error>
 810:	b	618 <grub_cmd_chainloader+0x168>
 814:	adrp	x0, 0 <grub_chainloader_unload>
 818:	ldr	x0, [x0]
 81c:	ldr	w4, [x0, #8]
 820:	adrp	x0, 0 <grub_chainloader_unload>
 824:	ldr	x3, [x0]
 828:	adrp	x0, 0 <grub_chainloader_unload>
 82c:	ldr	x2, [x0]
 830:	mov	w1, #0x11f                 	// #287
 834:	adrp	x0, 0 <grub_chainloader_unload>
 838:	ldr	x0, [x0]
 83c:	bl	0 <grub_real_dprintf>
 840:	adrp	x0, 0 <grub_chainloader_unload>
 844:	ldr	x1, [x0]
 848:	mov	w0, #0x3                   	// #3
 84c:	bl	0 <grub_error>
 850:	b	618 <grub_cmd_chainloader+0x168>
 854:	adrp	x0, 0 <grub_chainloader_unload>
 858:	ldr	x5, [x0]
 85c:	adrp	x0, 0 <grub_chainloader_unload>
 860:	ldr	x0, [x0]
 864:	ldr	x6, [x27, #200]
 868:	mov	x4, x19
 86c:	mov	x3, x24
 870:	ldr	x2, [x5, #24]
 874:	ldr	x1, [x0]
 878:	mov	w0, #0x0                   	// #0
 87c:	blr	x6
 880:	cbz	x0, 8bc <grub_cmd_chainloader+0x40c>
 884:	mov	x1, #0x9                   	// #9
 888:	movk	x1, #0x8000, lsl #48
 88c:	cmp	x0, x1
 890:	b.eq	8a8 <grub_cmd_chainloader+0x3f8>  // b.none
 894:	adrp	x0, 0 <grub_chainloader_unload>
 898:	ldr	x1, [x0]
 89c:	mov	w0, #0x15                  	// #21
 8a0:	bl	0 <grub_error>
 8a4:	b	618 <grub_cmd_chainloader+0x168>
 8a8:	adrp	x0, 0 <grub_chainloader_unload>
 8ac:	ldr	x1, [x0]
 8b0:	mov	w0, #0x3                   	// #3
 8b4:	bl	0 <grub_error>
 8b8:	b	618 <grub_cmd_chainloader+0x168>
 8bc:	adrp	x0, 0 <grub_chainloader_unload>
 8c0:	ldr	x0, [x0]
 8c4:	ldr	x0, [x0]
 8c8:	bl	0 <grub_efi_get_loaded_image>
 8cc:	mov	x19, x0
 8d0:	cbz	x0, 93c <grub_cmd_chainloader+0x48c>
 8d4:	ldr	x0, [sp, #96]
 8d8:	str	x0, [x19, #24]
 8dc:	cmp	w20, #0x1
 8e0:	b.le	994 <grub_cmd_chainloader+0x4e4>
 8e4:	add	x24, x21, #0x8
 8e8:	sub	w26, w20, #0x2
 8ec:	add	x0, x21, #0x10
 8f0:	add	x26, x0, x26, lsl #3
 8f4:	mov	w25, #0x0                   	// #0
 8f8:	ldr	x0, [x24], #8
 8fc:	bl	0 <grub_strlen>
 900:	add	x0, x0, #0x1
 904:	add	w25, w25, w0
 908:	cmp	x24, x26
 90c:	b.ne	8f8 <grub_cmd_chainloader+0x448>  // b.any
 910:	lsl	w25, w25, #1
 914:	sxtw	x0, w25
 918:	bl	0 <grub_malloc>
 91c:	adrp	x1, 0 <grub_chainloader_unload>
 920:	ldr	x1, [x1]
 924:	str	x0, [x1, #32]
 928:	cbz	x0, 618 <grub_cmd_chainloader+0x168>
 92c:	mov	x2, x0
 930:	mov	x4, #0x1                   	// #1
 934:	mov	w5, #0x20                  	// #32
 938:	b	974 <grub_cmd_chainloader+0x4c4>
 93c:	adrp	x0, 0 <grub_chainloader_unload>
 940:	ldr	x1, [x0]
 944:	mov	w0, #0x15                  	// #21
 948:	bl	0 <grub_error>
 94c:	b	618 <grub_cmd_chainloader+0x168>
 950:	strh	w1, [x2], #2
 954:	ldrb	w1, [x3, #1]!
 958:	cbnz	w1, 950 <grub_cmd_chainloader+0x4a0>
 95c:	mov	x1, x2
 960:	mov	x2, x1
 964:	strh	w5, [x2], #2
 968:	add	x4, x4, #0x1
 96c:	cmp	w20, w4
 970:	b.le	988 <grub_cmd_chainloader+0x4d8>
 974:	ldr	x3, [x21, x4, lsl #3]
 978:	ldrb	w1, [x3]
 97c:	cbnz	w1, 950 <grub_cmd_chainloader+0x4a0>
 980:	mov	x1, x2
 984:	b	960 <grub_cmd_chainloader+0x4b0>
 988:	strh	wzr, [x1]
 98c:	str	x0, [x19, #56]
 990:	str	w25, [x19, #48]
 994:	mov	x0, x22
 998:	bl	0 <grub_file_close>
 99c:	mov	x0, x23
 9a0:	bl	0 <grub_device_close>
 9a4:	mov	w2, #0x0                   	// #0
 9a8:	adrp	x0, 0 <grub_chainloader_unload>
 9ac:	ldr	x1, [x0]
 9b0:	adrp	x0, 0 <grub_chainloader_unload>
 9b4:	ldr	x0, [x0]
 9b8:	bl	0 <grub_loader_set>
 9bc:	mov	w0, #0x0                   	// #0
 9c0:	ldp	x19, x20, [sp, #16]
 9c4:	ldp	x21, x22, [sp, #32]
 9c8:	ldp	x23, x24, [sp, #48]
 9cc:	ldp	x25, x26, [sp, #64]
 9d0:	ldp	x27, x28, [sp, #80]
 9d4:	b	684 <grub_cmd_chainloader+0x1d4>
	...

0000000000000a68 <grub_mod_init>:
 a68:	stp	x29, x30, [sp, #-32]!
 a6c:	mov	x29, sp
 a70:	str	x19, [sp, #16]
 a74:	mov	x19, x0
 a78:	mov	w4, #0x0                   	// #0
 a7c:	adrp	x0, 0 <grub_chainloader_unload>
 a80:	ldr	x3, [x0]
 a84:	mov	x2, #0x0                   	// #0
 a88:	adrp	x0, 0 <grub_chainloader_unload>
 a8c:	ldr	x1, [x0]
 a90:	adrp	x0, 0 <grub_chainloader_unload>
 a94:	ldr	x0, [x0]
 a98:	bl	0 <grub_register_command_prio>
 a9c:	adrp	x1, 0 <grub_chainloader_unload>
 aa0:	ldr	x1, [x1]
 aa4:	str	x0, [x1, #48]
 aa8:	str	x19, [x1, #40]
 aac:	ldr	x19, [sp, #16]
 ab0:	ldp	x29, x30, [sp], #32
 ab4:	ret
	...

0000000000000ad8 <grub_mod_fini>:
 ad8:	stp	x29, x30, [sp, #-16]!
 adc:	mov	x29, sp
 ae0:	adrp	x0, 0 <grub_chainloader_unload>
 ae4:	ldr	x0, [x0]
 ae8:	ldr	x0, [x0, #48]
 aec:	bl	0 <grub_unregister_command>
 af0:	ldp	x29, x30, [sp], #16
 af4:	ret
	...
